From antlr at mirality.co.nz  Sun Mar  1 02:32:54 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 01 Mar 2009 23:32:54 +1300
Subject: [antlr-interest] Bug in ANTLR-3.1.2 with tree grammar wildcard
 list label x+= ?
In-Reply-To: <61AC8149C40D468EAC3C78BDE03C68FF@DFW5RB41>
References: <3b7c64070902271607q4d0ef357ic641eb637466ebf6@mail.gmail.com>
	<20090228001715.321C534184C2@www.antlr.org>
	<61AC8149C40D468EAC3C78BDE03C68FF@DFW5RB41>
Message-ID: <20090301103317.B3E2F3418434@www.antlr.org>

At 20:40 28/02/2009, Gary R. Van Sickle wrote:
 >Bug or feature though?  It seems inconsistent for what appear
 >to be two semantically equivalent constructs to be totally
 >fine in the one case and a silent failure in the other.

I consider it to be a bug in the ANTLR compiler, that it doesn't 
actually tell you "you can't do that", but I don't think it's a 
bug that you can't do that (if that makes sense) :)

Tokens are fairly simple beasts, and a label on a token is 
invariably referring to the token itself, which you can then use 
to insert into an AST, or get its text, or position, or whatever.

Rules are more complex, though, since rules consist of a 
collection of tokens, which have their own positions, and can also 
contain a subtree or a template fragment, as well as parameters 
and return values.  That's why the storage type of the label is 
context-sensitive, and varies depending on which rule you use it 
on.  And that's why it's only safe to reuse a label name on a rule 
of the same type as it was previously used on.

It's still an advance over ANTLR v2, which didn't let you reuse 
label names at all :)


From pink at odahoda.de  Sun Mar  1 03:19:47 2009
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 1 Mar 2009 12:19:47 +0100
Subject: [antlr-interest] ANTLRWorks debugger
In-Reply-To: <cadf1c690902281244q4ca3dfc2gefd7da62f02f5f9a@mail.gmail.com>
References: <cadf1c690902281046m91eb306u7c13e1b4a84ca409@mail.gmail.com>
	<49A99733.1090008@smartshift.de>
	<cadf1c690902281244q4ca3dfc2gefd7da62f02f5f9a@mail.gmail.com>
Message-ID: <543531490903010319s66922ac9u467ee39a65f87c4c@mail.gmail.com>

On Sat, Feb 28, 2009 at 9:44 PM, Filipe David Manana <fdmanana at ieee.org> wrote:
> Holy cow!
>
> It works using port 49153 :|
> This gotta be one of the most mysterious things in the world!
> Port 49100 doesn't work, neither 50000, neither 49123, neither...

This was something that confused me a bit as well, when I started
implementing debug support for the Python target.
The default port on the server side (the parser being debugged) is
49153, but AW defaults to 49100 in the 'Remote Debugger' dialog.
Any reason for this discrepancy?

-Ben

> On Sat, Feb 28, 2009 at 8:57 PM, Andreas Meyer <andreas.meyer at smartshift.de>
> wrote:
>>
>> Have you tried using the port 49153 from within ANTLRWorks? That worked
>> for me. (I have ANTLR 3.1.2 but only the previous-recent version of
>> ANTLRworks, if that makes a difference).
>>
>> Andreas
>>
>> Filipe David Manana schrieb:
>> > Hello,
>> >
>> > Suddenly, I am no longer able to use the debugger. ANTLRWorks reports
>> > that it's not capable of establishing the connection (to my localhost).
>> > I'm using port 49100, and have no other application using this port or
>> > blocking firewall rules:
>> >
>> >
>> > root at core2duo:~# netstat -apn | grep 49100
>> > root at core2duo:~# iptables -L
>> > Chain INPUT (policy ACCEPT)
>> > target ? ? prot opt source ? ? ? ? ? ? ? destination
>> >
>> > Chain FORWARD (policy ACCEPT)
>> > target ? ? prot opt source ? ? ? ? ? ? ? destination
>> >
>> > Chain OUTPUT (policy ACCEPT)
>> > target ? ? prot opt source ? ? ? ? ? ? ? destination
>> > root at core2duo:~#
>> >
>> >
>> > tcpdump shows me that somehow the connection is refused through tcp
>> > reset packets:
>> >
>> >
>> > root at core2duo:~# tcpdump -i lo tcp
>> > tcpdump: verbose output suppressed, use -v or -vv for full protocol
>> > decode
>> > listening on lo, link-type EN10MB (Ethernet), capture size 96 bytes
>> > 19:43:36.166844 IP localhost.50571 > localhost.49100: S
>> > 3500391462:3500391462(0) win 32792 <mss 16396,sackOK,timestamp 230981
>> > 0,nop,wscale 7>
>> > 19:43:36.167084 IP localhost.49100 > localhost.50571: R 0:0(0) ack
>> > 3500391463 win 0
>> > 19:43:36.667645 IP localhost.50572 > localhost.49100: S
>> > 3504550876:3504550876(0) win 32792 <mss 16396,sackOK,timestamp 231106
>> > 0,nop,wscale 7>
>> > 19:43:36.667661 IP localhost.49100 > localhost.50572: R 0:0(0) ack
>> > 3504550877 win 0
>> > 19:43:37.174907 IP localhost.50573 > localhost.49100: S
>> > 3518693368:3518693368(0) win 32792 <mss 16396,sackOK,timestamp 231233
>> > 0,nop,wscale 7>
>> > 19:43:37.174923 IP localhost.49100 > localhost.50573: R 0:0(0) ack
>> > 3518693369 win 0
>> > 19:43:37.675554 IP localhost.50574 > localhost.49100: S
>> > 3529403760:3529403760(0) win 32792 <mss 16396,sackOK,timestamp 231358
>> > 0,nop,wscale 7>
>> > 19:43:37.675569 IP localhost.49100 > localhost.50574: R 0:0(0) ack
>> > 3529403761 win 0
>> >
>> > So there's no local app listening on that port.
>> >
>> > I also tried using other ports for the debugger, although the problem
>> > persists.
>> >
>> > Any suggestion?
>> >
>> > It was working fine some hours ago. I've even rebooted my machine...
>> >
>> > thank you
>> >
>> >
>> > --
>> > Filipe David Manana,
>> > fdmanana at ieee.org <mailto:fdmanana at ieee.org>
>> > PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>> > <http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B>
>> >
>> > "Reasonable men adapt themselves to the world.
>> > Unreasonable men adapt the world to themselves.
>> > That's why all progress depends on unreasonable men."
>> >
>> > ------------------------------------------------------------------------
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> --
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From s.barnett-cormack at lancaster.ac.uk  Sun Mar  1 06:10:42 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 01 Mar 2009 14:10:42 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
Message-ID: <49AA9762.1090702@lancaster.ac.uk>

Hi all

[resent with grammar *actually* attached]

So, I solved the recursion issue (which had been complicated by me
failing to notice a '|' in the standard), and fixed a lot of intractable
issues using predicates (or backtracking, at least for now). However,
I'm still getting some errors/warnings which I can't for the life of me
figure out the reason for. I know what they mean, but they don't make
sense. The grammar is, of course, attached. The build errors I'm getting
are:

[18:09:42] warning(200): ASN_1.g:346:108: Decision can match input such
as "'('" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[18:09:42] warning(200): ASN_1.g:470:4: Decision can match input such as
"'...'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[18:09:42] warning(200): ASN_1.g:473:31: Decision can match input such
as "'}'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[18:09:42] warning(200): ASN_1.g:473:31: Decision can match input such
as "','" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[18:09:42] warning(200): ASN_1.g:473:31: Decision can match input such
as "EOF" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[18:09:42] error(201): ASN_1.g:473:31: The following alternatives can
never be matched: 2

[18:09:42] warning(200): ASN_1.g:518:15: Decision can match input such
as "'...'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[18:09:42] error(201): ASN_1.g:518:15: The following alternatives can
never be matched: 2


In the case of line 473, some of those inputs that can supposedly be
matched in more than one way can't really be matched at all, as far as I
can tell. In the other cases, the inputs can be matched, but I'm pretty
sure they can't be matched by the things it says they can be.

I'm sure that this isn't some sort of software bug, because I know antlr
isn't that flaky and weird. Beginning to feel incredibly stupid, but can
anyone offer me any tips or ideas, or even a full debugging of my code
(hey, it's unlikely, but I can hope, right)?

Thanks all

Sam


From vlas01 at yahoo.com  Sun Mar  1 09:05:17 2009
From: vlas01 at yahoo.com (Vlastimil Adamovsky)
Date: Sun, 1 Mar 2009 09:05:17 -0800 (PST)
Subject: [antlr-interest] ANTLRWorks debugger
In-Reply-To: <543531490903010319s66922ac9u467ee39a65f87c4c@mail.gmail.com>
Message-ID: <686366.12840.qm@web57507.mail.re1.yahoo.com>

Please, see my article in http://ironglue.wordpress.com


--- On Sun, 3/1/09, Benjamin Niemann <pink at odahoda.de> wrote:

From: Benjamin Niemann <pink at odahoda.de>
Subject: Re: [antlr-interest] ANTLRWorks debugger
To: "ANTLR-dev Dev" <antlr-dev at antlr.org>
Cc: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
Date: Sunday, March 1, 2009, 6:19 AM

On Sat, Feb 28, 2009 at 9:44 PM, Filipe David Manana <fdmanana at ieee.org>
wrote:
> Holy cow!
>
> It works using port 49153 :|
> This gotta be one of the most mysterious things in the world!
> Port 49100 doesn't work, neither 50000, neither 49123, neither...

This was something that confused me a bit as well, when I started
implementing debug support for the Python target.
The default port on the server side (the parser being debugged) is
49153, but AW defaults to 49100 in the 'Remote Debugger' dialog.
Any reason for this discrepancy?

-Ben

> On Sat, Feb 28, 2009 at 8:57 PM, Andreas Meyer
<andreas.meyer at smartshift.de>
> wrote:
>>
>> Have you tried using the port 49153 from within ANTLRWorks? That
worked
>> for me. (I have ANTLR 3.1.2 but only the previous-recent version of
>> ANTLRworks, if that makes a difference).
>>
>> Andreas
>>
>> Filipe David Manana schrieb:
>> > Hello,
>> >
>> > Suddenly, I am no longer able to use the debugger. ANTLRWorks
reports
>> > that it's not capable of establishing the connection (to my
localhost).
>> > I'm using port 49100, and have no other application using
this port or
>> > blocking firewall rules:
>> >
>> >
>> > root at core2duo:~# netstat -apn | grep 49100
>> > root at core2duo:~# iptables -L
>> > Chain INPUT (policy ACCEPT)
>> > target ? ? prot opt source ? ? ? ? ? ? ? destination
>> >
>> > Chain FORWARD (policy ACCEPT)
>> > target ? ? prot opt source ? ? ? ? ? ? ? destination
>> >
>> > Chain OUTPUT (policy ACCEPT)
>> > target ? ? prot opt source ? ? ? ? ? ? ? destination
>> > root at core2duo:~#
>> >
>> >
>> > tcpdump shows me that somehow the connection is refused through
tcp
>> > reset packets:
>> >
>> >
>> > root at core2duo:~# tcpdump -i lo tcp
>> > tcpdump: verbose output suppressed, use -v or -vv for full
protocol
>> > decode
>> > listening on lo, link-type EN10MB (Ethernet), capture size 96
bytes
>> > 19:43:36.166844 IP localhost.50571 > localhost.49100: S
>> > 3500391462:3500391462(0) win 32792 <mss 16396,sackOK,timestamp
230981
>> > 0,nop,wscale 7>
>> > 19:43:36.167084 IP localhost.49100 > localhost.50571: R 0:0(0)
ack
>> > 3500391463 win 0
>> > 19:43:36.667645 IP localhost.50572 > localhost.49100: S
>> > 3504550876:3504550876(0) win 32792 <mss 16396,sackOK,timestamp
231106
>> > 0,nop,wscale 7>
>> > 19:43:36.667661 IP localhost.49100 > localhost.50572: R 0:0(0)
ack
>> > 3504550877 win 0
>> > 19:43:37.174907 IP localhost.50573 > localhost.49100: S
>> > 3518693368:3518693368(0) win 32792 <mss 16396,sackOK,timestamp
231233
>> > 0,nop,wscale 7>
>> > 19:43:37.174923 IP localhost.49100 > localhost.50573: R 0:0(0)
ack
>> > 3518693369 win 0
>> > 19:43:37.675554 IP localhost.50574 > localhost.49100: S
>> > 3529403760:3529403760(0) win 32792 <mss 16396,sackOK,timestamp
231358
>> > 0,nop,wscale 7>
>> > 19:43:37.675569 IP localhost.49100 > localhost.50574: R 0:0(0)
ack
>> > 3529403761 win 0
>> >
>> > So there's no local app listening on that port.
>> >
>> > I also tried using other ports for the debugger, although the
problem
>> > persists.
>> >
>> > Any suggestion?
>> >
>> > It was working fine some hours ago. I've even rebooted my
machine...
>> >
>> > thank you
>> >
>> >
>> > --
>> > Filipe David Manana,
>> > fdmanana at ieee.org <mailto:fdmanana at ieee.org>
>> > PGP key -
http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>> >
<http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B>
>> >
>> > "Reasonable men adapt themselves to the world.
>> > Unreasonable men adapt the world to themselves.
>> > That's why all progress depends on unreasonable men."
>> >
>> >
------------------------------------------------------------------------
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> >
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> --
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090301/2c851a08/attachment.html 

From vlas01 at yahoo.com  Sun Mar  1 09:09:22 2009
From: vlas01 at yahoo.com (Vlastimil Adamovsky)
Date: Sun, 1 Mar 2009 09:09:22 -0800 (PST)
Subject: [antlr-interest] ANTLRWorks debugger
In-Reply-To: <cadf1c690902281046m91eb306u7c13e1b4a84ca409@mail.gmail.com>
Message-ID: <600603.49038.qm@web57511.mail.re1.yahoo.com>

Please, se my article in http://ironglue.wordpress.com

--- On Sat, 2/28/09, Filipe David Manana <fdmanana at ieee.org> wrote:

From: Filipe David Manana <fdmanana at ieee.org>
Subject: [antlr-interest] ANTLRWorks debugger
To: antlr-interest at antlr.org
Date: Saturday, February 28, 2009, 1:46 PM


Hello,

Suddenly, I am no longer able to use the debugger. ANTLRWorks reports that it's not capable of establishing the connection (to my localhost).
I'm using port 49100, and have no other application using this port or blocking firewall rules:


root at core2duo:~# netstat -apn | grep 49100
root at core2duo:~# iptables -L
Chain INPUT (policy ACCEPT)
target???? prot opt source?????????????? destination???????? 

Chain FORWARD (policy ACCEPT)
target???? prot opt source?????????????? destination???????? 

Chain OUTPUT (policy ACCEPT)
target???? prot opt source?????????????? destination???????? 
root at core2duo:~# 


tcpdump shows me that somehow the connection is refused through tcp reset packets:


root at core2duo:~# tcpdump -i lo tcp
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on lo, link-type EN10MB (Ethernet), capture size 96 bytes
19:43:36.166844 IP localhost.50571 > localhost.49100: S 3500391462:3500391462(0) win 32792 <mss 16396,sackOK,timestamp 230981 0,nop,wscale 7>
19:43:36.167084 IP localhost.49100 > localhost.50571: R 0:0(0) ack 3500391463 win 0
19:43:36.667645 IP localhost.50572 > localhost.49100: S 3504550876:3504550876(0) win 32792 <mss 16396,sackOK,timestamp 231106 0,nop,wscale 7>
19:43:36.667661 IP localhost.49100 > localhost.50572: R 0:0(0) ack 3504550877 win 0
19:43:37.174907 IP localhost.50573 > localhost.49100: S 3518693368:3518693368(0) win 32792 <mss 16396,sackOK,timestamp 231233 0,nop,wscale 7>
19:43:37.174923 IP localhost.49100 > localhost.50573: R 0:0(0) ack 3518693369 win 0
19:43:37.675554 IP localhost.50574 > localhost.49100: S 3529403760:3529403760(0) win 32792 <mss 16396,sackOK,timestamp 231358 0,nop,wscale 7>
19:43:37.675569 IP localhost.49100 > localhost.50574: R 0:0(0) ack 3529403761 win 0

So there's no local app listening on that port.

I also tried using other ports for the debugger, although the problem persists.

Any suggestion?

It was working fine some hours ago. I've even rebooted my machine...

thank you


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090301/d6494790/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  1 10:20:54 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Mar 2009 10:20:54 -0800
Subject: [antlr-interest] ANTLRWorks port
Message-ID: <4910AD9A-9734-45B4-8FE7-5E7F47BDC444@cs.usfca.edu>

HI. We changed port from 1.1 to 1.2 AW. Jean says:

> he port in the code is 49100.
>
> We changed the port in version 1.2, according to JIRA:
>     [AW-161] - Changed debugger port from 49153 (0xC001) to 49100

So, if you had a previous version, it's preferences now has the wrong  
version.  Blow away that directory or reset the port number.

49153 was some wacky windoze port, though "COOL" in hex ;)

Ter

From parrt at cs.usfca.edu  Sun Mar  1 10:21:29 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Mar 2009 10:21:29 -0800
Subject: [antlr-interest] ^(TOKEN) vs. TOKEN
In-Reply-To: <16E8B7233C3A49ECB8412A7F4C3F726E@DFW5RB41>
References: <16E8B7233C3A49ECB8412A7F4C3F726E@DFW5RB41>
Message-ID: <CDE6FF15-A37C-490D-B1DE-73F1304E90F8@cs.usfca.edu>

sorry about that. ^(P) isn't a tree.  Trees are nodes or subtrees with  
root/children.
Ter
On Feb 28, 2009, at 10:56 PM, Gary R. Van Sickle wrote:

> Hi guys,
>
> Can somebody explain to me why this is ok in a parser grammar:
>
> pointer
> 	: '*' -> ^(POINTER)
> 	;
>
> But this is an error in a tree grammar?:
>
> pointer
> 	: ^(POINTER)
> 	;
>
> ?  The following appears to be the correct way to do this, and does  
> in fact
> appear to work:
>
> pointer
> 	: POINTER
> 	;
>
> But it's not clear to me why this should be so.  Shouldn't both  
> these cases
> share the same syntax, either both ^(POINTER) or both POINTER?
>
> Thanks,
>
> -- 
> Gary R. Van Sickle
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From pink at odahoda.de  Sun Mar  1 10:29:57 2009
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 1 Mar 2009 19:29:57 +0100
Subject: [antlr-interest] ANTLRWorks port
In-Reply-To: <4910AD9A-9734-45B4-8FE7-5E7F47BDC444@cs.usfca.edu>
References: <4910AD9A-9734-45B4-8FE7-5E7F47BDC444@cs.usfca.edu>
Message-ID: <543531490903011029k9927ba7j548abfc056f663fb@mail.gmail.com>

The C runtime is already using that new port as default port. I guess
the other runtimes should follow as well, right?

On Sun, Mar 1, 2009 at 7:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> HI. We changed port from 1.1 to 1.2 AW. Jean says:
>
>> he port in the code is 49100.
>>
>> We changed the port in version 1.2, according to JIRA:
>> ? ? [AW-161] - Changed debugger port from 49153 (0xC001) to 49100
>
> So, if you had a previous version, it's preferences now has the wrong
> version. ?Blow away that directory or reset the port number.
>
> 49153 was some wacky windoze port, though "COOL" in hex ;)
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sun Mar  1 10:36:14 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Mar 2009 10:36:14 -0800
Subject: [antlr-interest] ANTLRWorks port
In-Reply-To: <543531490903011029k9927ba7j548abfc056f663fb@mail.gmail.com>
References: <4910AD9A-9734-45B4-8FE7-5E7F47BDC444@cs.usfca.edu>
	<543531490903011029k9927ba7j548abfc056f663fb@mail.gmail.com>
Message-ID: <AFDB3D7F-D91E-4493-87F8-0AE4BD6F89F6@cs.usfca.edu>

Yep.  Not sure if C# works yet.
Ter
On Mar 1, 2009, at 10:29 AM, Benjamin Niemann wrote:

> The C runtime is already using that new port as default port. I guess
> the other runtimes should follow as well, right?
>
> On Sun, Mar 1, 2009 at 7:20 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>> HI. We changed port from 1.1 to 1.2 AW. Jean says:
>>
>>> he port in the code is 49100.
>>>
>>> We changed the port in version 1.2, according to JIRA:
>>>     [AW-161] - Changed debugger port from 49153 (0xC001) to 49100
>>
>> So, if you had a previous version, it's preferences now has the wrong
>> version.  Blow away that directory or reset the port number.
>>
>> 49153 was some wacky windoze port, though "COOL" in hex ;)
>>
>> Ter
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Sun Mar  1 10:37:02 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 02 Mar 2009 07:37:02 +1300
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49AA9762.1090702@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>
Message-ID: <20090301183727.1F18A34184DC@www.antlr.org>

At 03:10 2/03/2009, Sam Barnett-Cormack wrote:
 >[resent with grammar *actually* attached]

Apparently not.


From jaluber at gmx.de  Sun Mar  1 10:37:37 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 01 Mar 2009 19:37:37 +0100
Subject: [antlr-interest] ANTLRWorks port
In-Reply-To: <543531490903011029k9927ba7j548abfc056f663fb@mail.gmail.com>
References: <4910AD9A-9734-45B4-8FE7-5E7F47BDC444@cs.usfca.edu>
	<543531490903011029k9927ba7j548abfc056f663fb@mail.gmail.com>
Message-ID: <49AAD5F1.3080207@gmx.de>

Benjamin Niemann schrieb:
> The C runtime is already using that new port as default port. I guess
> the other runtimes should follow as well, right?

Strange - I thought that C# changed that one already, but I see it using
0xC001. I'll change it to 0xBFCC then.

Johannes
> 
> On Sun, Mar 1, 2009 at 7:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> HI. We changed port from 1.1 to 1.2 AW. Jean says:
>>
>>> he port in the code is 49100.
>>>
>>> We changed the port in version 1.2, according to JIRA:
>>>     [AW-161] - Changed debugger port from 49153 (0xC001) to 49100
>> So, if you had a previous version, it's preferences now has the wrong
>> version.  Blow away that directory or reset the port number.
>>
>> 49153 was some wacky windoze port, though "COOL" in hex ;)
>>
>> Ter
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From parrt at cs.usfca.edu  Sun Mar  1 11:12:55 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Mar 2009 11:12:55 -0800
Subject: [antlr-interest] [antlr-dev]  ANTLRWorks debugger
In-Reply-To: <543531490903010319s66922ac9u467ee39a65f87c4c@mail.gmail.com>
References: <cadf1c690902281046m91eb306u7c13e1b4a84ca409@mail.gmail.com>
	<49A99733.1090008@smartshift.de>
	<cadf1c690902281244q4ca3dfc2gefd7da62f02f5f9a@mail.gmail.com>
	<543531490903010319s66922ac9u467ee39a65f87c4c@mail.gmail.com>
Message-ID: <CD65C447-F860-474D-8080-32AD5821C716@cs.usfca.edu>

Holy cow!  Ok, apparently we change the port in ANTLRWorks, but not in  
the Java target nor the other targets!  I'm wondering why AW  
works...oh, must be my preferences. crap. okay, changing my target.

Ter
On Mar 1, 2009, at 3:19 AM, Benjamin Niemann wrote:

> On Sat, Feb 28, 2009 at 9:44 PM, Filipe David Manana <fdmanana at ieee.org 
> > wrote:
>> Holy cow!
>>
>> It works using port 49153 :|
>> This gotta be one of the most mysterious things in the world!
>> Port 49100 doesn't work, neither 50000, neither 49123, neither...
>
> This was something that confused me a bit as well, when I started
> implementing debug support for the Python target.
> The default port on the server side (the parser being debugged) is
> 49153, but AW defaults to 49100 in the 'Remote Debugger' dialog.
> Any reason for this discrepancy?
>
> -Ben
>
>> On Sat, Feb 28, 2009 at 8:57 PM, Andreas Meyer <andreas.meyer at smartshift.de 
>> >
>> wrote:
>>>
>>> Have you tried using the port 49153 from within ANTLRWorks? That  
>>> worked
>>> for me. (I have ANTLR 3.1.2 but only the previous-recent version of
>>> ANTLRworks, if that makes a difference).
>>>
>>> Andreas
>>>
>>> Filipe David Manana schrieb:
>>>> Hello,
>>>>
>>>> Suddenly, I am no longer able to use the debugger. ANTLRWorks  
>>>> reports
>>>> that it's not capable of establishing the connection (to my  
>>>> localhost).
>>>> I'm using port 49100, and have no other application using this  
>>>> port or
>>>> blocking firewall rules:
>>>>
>>>>
>>>> root at core2duo:~# netstat -apn | grep 49100
>>>> root at core2duo:~# iptables -L
>>>> Chain INPUT (policy ACCEPT)
>>>> target     prot opt source               destination
>>>>
>>>> Chain FORWARD (policy ACCEPT)
>>>> target     prot opt source               destination
>>>>
>>>> Chain OUTPUT (policy ACCEPT)
>>>> target     prot opt source               destination
>>>> root at core2duo:~#
>>>>
>>>>
>>>> tcpdump shows me that somehow the connection is refused through tcp
>>>> reset packets:
>>>>
>>>>
>>>> root at core2duo:~# tcpdump -i lo tcp
>>>> tcpdump: verbose output suppressed, use -v or -vv for full protocol
>>>> decode
>>>> listening on lo, link-type EN10MB (Ethernet), capture size 96 bytes
>>>> 19:43:36.166844 IP localhost.50571 > localhost.49100: S
>>>> 3500391462:3500391462(0) win 32792 <mss 16396,sackOK,timestamp  
>>>> 230981
>>>> 0,nop,wscale 7>
>>>> 19:43:36.167084 IP localhost.49100 > localhost.50571: R 0:0(0) ack
>>>> 3500391463 win 0
>>>> 19:43:36.667645 IP localhost.50572 > localhost.49100: S
>>>> 3504550876:3504550876(0) win 32792 <mss 16396,sackOK,timestamp  
>>>> 231106
>>>> 0,nop,wscale 7>
>>>> 19:43:36.667661 IP localhost.49100 > localhost.50572: R 0:0(0) ack
>>>> 3504550877 win 0
>>>> 19:43:37.174907 IP localhost.50573 > localhost.49100: S
>>>> 3518693368:3518693368(0) win 32792 <mss 16396,sackOK,timestamp  
>>>> 231233
>>>> 0,nop,wscale 7>
>>>> 19:43:37.174923 IP localhost.49100 > localhost.50573: R 0:0(0) ack
>>>> 3518693369 win 0
>>>> 19:43:37.675554 IP localhost.50574 > localhost.49100: S
>>>> 3529403760:3529403760(0) win 32792 <mss 16396,sackOK,timestamp  
>>>> 231358
>>>> 0,nop,wscale 7>
>>>> 19:43:37.675569 IP localhost.49100 > localhost.50574: R 0:0(0) ack
>>>> 3529403761 win 0
>>>>
>>>> So there's no local app listening on that port.
>>>>
>>>> I also tried using other ports for the debugger, although the  
>>>> problem
>>>> persists.
>>>>
>>>> Any suggestion?
>>>>
>>>> It was working fine some hours ago. I've even rebooted my  
>>>> machine...
>>>>
>>>> thank you
>>>>
>>>>
>>>> --
>>>> Filipe David Manana,
>>>> fdmanana at ieee.org <mailto:fdmanana at ieee.org>
>>>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>>> <http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B>
>>>>
>>>> "Reasonable men adapt themselves to the world.
>>>> Unreasonable men adapt the world to themselves.
>>>> That's why all progress depends on unreasonable men."
>>>>
>>>> ------------------------------------------------------------------------
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup? 
>> op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email- 
>> address
>>
>>
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev


From jimi at temporal-wave.com  Sun Mar  1 11:21:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 01 Mar 2009 11:21:51 -0800
Subject: [antlr-interest] [antlr-dev]  ANTLRWorks debugger
In-Reply-To: <543531490903010319s66922ac9u467ee39a65f87c4c@mail.gmail.com>
References: <cadf1c690902281046m91eb306u7c13e1b4a84ca409@mail.gmail.com>	<49A99733.1090008@smartshift.de>	<cadf1c690902281244q4ca3dfc2gefd7da62f02f5f9a@mail.gmail.com>
	<543531490903010319s66922ac9u467ee39a65f87c4c@mail.gmail.com>
Message-ID: <49AAE04F.6000304@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090301/322aa42e/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Sun Mar  1 14:21:40 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 01 Mar 2009 22:21:40 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49AA9762.1090702@lancaster.ac.uk> 
References: <49AA9762.1090702@lancaster.ac.uk> 
Message-ID: <49AB0A74.9040105@lancaster.ac.uk>

Gavin Lambert wrote:
> At 03:10 2/03/2009, Sam Barnett-Cormack wrote:
>  >[resent with grammar *actually* attached]
> 
> Apparently not.

I'm clearly being a moron this weekend. Third time lucky?

Sam, feeling like a moron.

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090301/459df32e/attachment.pl 

From Richard.Lewis at razor-risk.com  Sun Mar  1 22:04:55 2009
From: Richard.Lewis at razor-risk.com (Richard Lewis)
Date: Mon, 2 Mar 2009 17:04:55 +1100
Subject: [antlr-interest] problems with C runtime and output=template
Message-ID: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>

Hi,

 

I'm trying to convert my tree grammar from JAVA to C and running into
issue with code generation. I'm targeting string templates as the output
type and run into the following error:

 

1>Translating to tree parser.

1> : error 10 : internal error: no such group file ST.stg  

1>Project : error PRJ0019: A tool returned an error code from
"Translating to tree parser."

 

Are string template outputs supported in the C code generator? I can't
find a corresponding ST.stg in the codegen/templates/C

 

 

Specifying C - Runtime:

 

tree grammar RazorTree;

 

options{

      language = C;

      tokenVocab = Razor;

      ASTLabelType = pANTLR3_BASE_TREE;

      output = template;

}

 

Original JAVA - Runtime:

 

options{

      tokenVocab = Razor;

      ASTLabelType = CommonTree;

      output = template;

}

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/88543c67/attachment.html 

From Richard.Lewis at razor-risk.com  Sun Mar  1 22:27:07 2009
From: Richard.Lewis at razor-risk.com (Richard Lewis)
Date: Mon, 2 Mar 2009 17:27:07 +1100
Subject: [antlr-interest] problems with C runtime and output=template
In-Reply-To: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>
References: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>
Message-ID: <1633C11AAD5C1C47A79C673A32A64FBADC135C@webmail.ite.com.au>

Hi, 

 

I found out from the WIKI that RewriteTokenStream is not implemented
yet. Is this related to string template rewriting not being available?
If so, when will this be implemented since it's a roadblock for me.

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Richard Lewis
Sent: Monday, 2 March 2009 5:05 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] problems with C runtime and output=template

 

Hi,

 

I'm trying to convert my tree grammar from JAVA to C and running into
issue with code generation. I'm targeting string templates as the output
type and run into the following error:

 

1>Translating to tree parser.

1> : error 10 : internal error: no such group file ST.stg  

1>Project : error PRJ0019: A tool returned an error code from
"Translating to tree parser."

 

Are string template outputs supported in the C code generator? I can't
find a corresponding ST.stg in the codegen/templates/C

 

 

Specifying C - Runtime:

 

tree grammar RazorTree;

 

options{

      language = C;

      tokenVocab = Razor;

      ASTLabelType = pANTLR3_BASE_TREE;

      output = template;

}

 

Original JAVA - Runtime:

 

options{

      tokenVocab = Razor;

      ASTLabelType = CommonTree;

      output = template;

}

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/eda27863/attachment.html 

From jaluber at gmx.de  Sun Mar  1 23:05:18 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 02 Mar 2009 08:05:18 +0100
Subject: [antlr-interest] problems with C runtime and output=template
In-Reply-To: <1633C11AAD5C1C47A79C673A32A64FBADC135C@webmail.ite.com.au>
References: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>
	<1633C11AAD5C1C47A79C673A32A64FBADC135C@webmail.ite.com.au>
Message-ID: <49AB852E.1070707@gmx.de>

Richard Lewis schrieb:
> Hi,
> 
>  
> 
> I found out from the WIKI that RewriteTokenStream is not implemented
> yet. Is this related to string template rewriting not being available?
> If so, when will this be implemented since it?s a roadblock for me.

C doesn't lend itself to implement StringTemplate, so I doubt that it is
ever going to be available, unless Jim decides to add ST support for C++
and uses that for C, too.

Johannes
> 
>  
> 
> *From:* antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Richard Lewis
> *Sent:* Monday, 2 March 2009 5:05 PM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] problems with C runtime and output=template
> 
>  
> 
> Hi,
> 
>  
> 
> I?m trying to convert my tree grammar from JAVA to C and running into
> issue with code generation. I?m targeting string templates as the output
> type and run into the following error:
> 
>  
> 
> 1>Translating to tree parser.
> 
> 1> : error 10 : internal error: no such group file ST.stg 
> 
> 1>Project : error PRJ0019: A tool returned an error code from
> "Translating to tree parser."
> 
>  
> 
> Are string template outputs supported in the C code generator? I can?t
> find a corresponding ST.stg in the codegen/templates/C
> 
>  
> 
>  
> 
> Specifying C ? Runtime:
> 
>  
> 
> tree grammar RazorTree;
> 
>  
> 
> options{
> 
>       language = C;
> 
>       tokenVocab = Razor;
> 
>       ASTLabelType = pANTLR3_BASE_TREE;
> 
>       output = template;
> 
> }
> 
>  
> 
> Original JAVA ? Runtime:
> 
>  
> 
> options{
> 
>       tokenVocab = Razor;
> 
>       ASTLabelType = CommonTree;
> 
>       output = template;
> 
> }
> 
>  
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Sun Mar  1 23:33:24 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 02 Mar 2009 20:33:24 +1300
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49AB0A74.9040105@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>
	<49AB0A74.9040105@lancaster.ac.uk>
Message-ID: <20090302073350.69C94341844D@www.antlr.org>

At 11:21 2/03/2009, Sam Barnett-Cormack wrote:
 >NUMBER : ;

Defining non-fragment rules that can succesfully match nothing 
(ie. empty string) is Bad(tm).

 >BSTRING : '\'' BSTRINGCONT '\'B';
[...]
 >HSTRING : '\'' HSTRINGCONT '\'H';

These are going to give you grief.  The lexer cannot backtrack, 
and since HSTRINGCONT/BSTRINCONT can be infinite length, it cannot 
determine sufficient static lookahead to disambiguate these 
automatically.

What you should do is to define a generic 
single-quoted-string-with-optional-trailing-B/H lexer rule, and 
then either put some trailing code in the lexer rule to check the 
content and change the type (or report an error), or defer that 
until parse time.

 >fragment
 >CSTRINGNL : WSNONL* NL WSNONL* {setText("");};

setText has no effect in fragment rules.

 >fragment
 >XMLATTVAL : XMLDATTVAL | XMLSATTVAL ;
 >
 >fragment
 >XMLATTRIB : XMLNAME '=' XMLATTVAL ;
 >
 >fragment
 >WSBLOCK : WS+;
 >
 >fragment
 >XMLATTRIBS
 >      : XMLATTRIB
 >      | (XMLATTRIB WS)=>XMLATTRIB WSBLOCK XMLATTRIBS;
 >
 >fragment
 >XMLTAGATTS
 >      : WSBLOCK XMLATTRIBS ;
 >
 >fragment
 >XMLOPENTAG : '<' XMLNAME XMLTAGATTS? WS* '>';
 >
 >fragment
 >XMLCLOSETAG : '</' XMLNAME '>';
 >
 >fragment
 >XMLSCLOSETAG : '<' XMLNAME XMLTAGATTS? WS* '/>';
 >
 >fragment
 >XMLNONEMPTYELEMENT : XMLOPENTAG XMLCONTENT XMLCLOSETAG;
 >
 >fragment
 >XMLEMPTYELEMENT : XMLSCLOSETAG;
 >
 >fragment
 >XMLELEMENT options {
 >  backtrack=true;
 >}
 >      : XMLEMPTYELEMENT | XMLNONEMPTYELEMENT ;
 >
 >fragment
 >XMLCONTENT : (XMLELEMENT | XMLENTREF | ~INVALIDINXML) *;
 >
 >XMLFRAG : XMLELEMENT;

These really seem like they shouldn't be lexer rules.  (Or 
possibly that you should go look at the island grammar example.)

 >extensionAdditionGroup : '[[' versionNumber componentTypeList 
']]'
 >;
[...]
 >tag : '[' encodingReference class classNumber ']' ;

You should be very careful when using quoted literals in parser 
rules (in fact if you're not used to their quirks you should 
probably avoid using them).

The above will define four new lexer rules, similar to these:
T62: '[[';
T63: ']]';
T64: '[';
T65: ']';

In particular, note that the '[[' and ']]' produce unique tokens, 
not two occurrences of the '[' or ']' token.  This in turn means 
that if you happen to have [[ or ]] in your input where the 
grammar is expecting [ [ or ] ], then it will fail.  (This, 
incidentally, is the same issue behind C++s need to be careful 
with >s when nesting templates.)

 >[18:09:42] warning(200): ASN_1.g:518:15: Decision can match 
input
 >such as "'...'" using multiple alternatives: 1, 2
 >As a result, alternative(s) 2 were disabled for that input
 >[18:09:42] error(201): ASN_1.g:518:15: The following 
alternatives
 >can never be matched: 2

This one is fairly self-explanatory.  The rule in question is 
this:
setType : '{' (componentTypeLists | extensionAndException 
optionalExtensionMarker)? '}' ;

Now, let's look at the alternatives.  extensionAndException must 
begin with a '...' token.  It must match either 
'componentTypeLists' or 'extensionAndException'.  Now let's drill 
into componentTypeLists.  One of the alternatives is 
ctlExtensionStuff; and that also begins with an 
extensionAndException.  (It can also be followed by an 
optionalExtensionMarker.)  So now that's two alts with a common 
left prefix -- one must therefore die.  The second error is 
basically saying that they don't just have a common prefix -- one 
is actually a subset of the other.

I'm sure you'll find that the other errors occur for similar 
reasons.  (It's also interesting to note that most of them occur 
in places where you've turned backtracking on.  You should usually 
try to avoid doing that, in favour of rewriting your grammar to 
remove the ambiguities.)


From s.barnett-cormack at lancaster.ac.uk  Mon Mar  2 01:32:50 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 02 Mar 2009 09:32:50 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49AB0A74.9040105@lancaster.ac.uk> 
References: <49AA9762.1090702@lancaster.ac.uk>
	<49AB0A74.9040105@lancaster.ac.uk> 
Message-ID: <49ABA7C2.1090504@lancaster.ac.uk>

Gavin Lambert wrote:
> At 11:21 2/03/2009, Sam Barnett-Cormack wrote:
>  >NUMBER : ;
> 
> Defining non-fragment rules that can succesfully match nothing (ie. 
> empty string) is Bad(tm).
> 
>  >BSTRING : '\'' BSTRINGCONT '\'B';
> [...]
>  >HSTRING : '\'' HSTRINGCONT '\'H';
> 
> These are going to give you grief.  The lexer cannot backtrack, and 
> since HSTRINGCONT/BSTRINCONT can be infinite length, it cannot determine 
> sufficient static lookahead to disambiguate these automatically.

Okay... I'd figured those were okay, as ANTLR didn't complain about them...

> What you should do is to define a generic 
> single-quoted-string-with-optional-trailing-B/H lexer rule, and then 
> either put some trailing code in the lexer rule to check the content and 
> change the type (or report an error), or defer that until parse time.

A rule for both should be pretty easy. Add BSTRING and HSTRING to the 
tokens section, and do

BorHSTRING : '\'' content=HSTRINGCONT '\'' ( 'B' {$type=BSTRINGCONT;} | 
'H' {$type=HSTRINGCONT;} ) {($type == HSTRINGCONT | 
is_valid_binary_string($content))}?

Preferably with better error reporting than that.

>  >fragment
>  >CSTRINGNL : WSNONL* NL WSNONL* {setText("");};
> 
> setText has no effect in fragment rules.

That's one of the bits I know about but was leaving until I sort out the 
parser stuff - it doesn't affect the tokenization, after all, just the 
content of the tokens' text.

>  >fragment
>  >XMLATTVAL : XMLDATTVAL | XMLSATTVAL ;
>  >
>  >fragment
>  >XMLATTRIB : XMLNAME '=' XMLATTVAL ;
>  >
>  >fragment
>  >WSBLOCK : WS+;
>  >
>  >fragment
>  >XMLATTRIBS
>  >      : XMLATTRIB
>  >      | (XMLATTRIB WS)=>XMLATTRIB WSBLOCK XMLATTRIBS;
>  >
>  >fragment
>  >XMLTAGATTS
>  >      : WSBLOCK XMLATTRIBS ;
>  >
>  >fragment
>  >XMLOPENTAG : '<' XMLNAME XMLTAGATTS? WS* '>';
>  >
>  >fragment
>  >XMLCLOSETAG : '</' XMLNAME '>';
>  >
>  >fragment
>  >XMLSCLOSETAG : '<' XMLNAME XMLTAGATTS? WS* '/>';
>  >
>  >fragment
>  >XMLNONEMPTYELEMENT : XMLOPENTAG XMLCONTENT XMLCLOSETAG;
>  >
>  >fragment
>  >XMLEMPTYELEMENT : XMLSCLOSETAG;
>  >
>  >fragment
>  >XMLELEMENT options {
>  >  backtrack=true;
>  >}
>  >      : XMLEMPTYELEMENT | XMLNONEMPTYELEMENT ;
>  >
>  >fragment
>  >XMLCONTENT : (XMLELEMENT | XMLENTREF | ~INVALIDINXML) *;
>  >
>  >XMLFRAG : XMLELEMENT;
> 
> These really seem like they shouldn't be lexer rules.  (Or possibly that 
> you should go look at the island grammar example.)

The intention with these is to make blocks of embedded XML be tokens, to 
be processed separately. The parser code doesn't even support them yet, 
but I want the lexer to handle it for now. In the event of supporting 
embedded XML, the structure isn't really suitable for parsing except at 
around the same stage as the eventual (planned) tree parsing.

>  >extensionAdditionGroup : '[[' versionNumber componentTypeList ']]'
>  >;
> [...]
>  >tag : '[' encodingReference class classNumber ']' ;
> 
> You should be very careful when using quoted literals in parser rules 
> (in fact if you're not used to their quirks you should probably avoid 
> using them).
> 
> The above will define four new lexer rules, similar to these:
> T62: '[[';
> T63: ']]';
> T64: '[';
> T65: ']';
> 
> In particular, note that the '[[' and ']]' produce unique tokens, not 
> two occurrences of the '[' or ']' token.  This in turn means that if you 
> happen to have [[ or ]] in your input where the grammar is expecting [ [ 
> or ] ], then it will fail.  (This, incidentally, is the same issue 
> behind C++s need to be careful with >s when nesting templates.)

The grammar defines '[[' and '[' (and the closing ones) as separate 
lexical elements, so I assume the standard authors knew what they were 
doing there. Oh, and despite appearances, I get what's happening enough 
to know what happens to literals in the parser rules.

>  >[18:09:42] warning(200): ASN_1.g:518:15: Decision can match input
>  >such as "'...'" using multiple alternatives: 1, 2
>  >As a result, alternative(s) 2 were disabled for that input
>  >[18:09:42] error(201): ASN_1.g:518:15: The following alternatives
>  >can never be matched: 2
> 
> This one is fairly self-explanatory.  The rule in question is this:
> setType : '{' (componentTypeLists | extensionAndException 
> optionalExtensionMarker)? '}' ;
> 
> Now, let's look at the alternatives.  extensionAndException must begin 
> with a '...' token.  It must match either 'componentTypeLists' or 
> 'extensionAndException'.  Now let's drill into componentTypeLists.  One 
> of the alternatives is ctlExtensionStuff; and that also begins with an 
> extensionAndException.  (It can also be followed by an 
> optionalExtensionMarker.)  So now that's two alts with a common left 
> prefix -- one must therefore die.  The second error is basically saying 
> that they don't just have a common prefix -- one is actually a subset of 
> the other.

Damn, I could've sworn I checked deeply for that. I can't alter the 
language itself, but it does appear that the extensionAndException 
optionalExtensionMarker choice is actually redundant. I want to do nasty 
things to the people who wrote the grammar in the standard...

> I'm sure you'll find that the other errors occur for similar reasons.  
> (It's also interesting to note that most of them occur in places where 
> you've turned backtracking on.  You should usually try to avoid doing 
> that, in favour of rewriting your grammar to remove the ambiguities.)

I only turned on backtracking in cases where I couldn't see what the 
heck to do to remove ambiguities.

Thanks for the help

Sam


From s.barnett-cormack at lancaster.ac.uk  Mon Mar  2 01:48:47 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 02 Mar 2009 09:48:47 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49ABA7C2.1090504@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>	<49AB0A74.9040105@lancaster.ac.uk>
	<49ABA7C2.1090504@lancaster.ac.uk>
Message-ID: <49ABAB7F.4020609@lancaster.ac.uk>

Hey all,

With Gavin's generous help, I'm down to one error and a couple of 
warnings, which is nice.

In the attached grammar, I haven't fixed the lexer issues Gavin 
identified yet, as I'm focused on the parser for the moment.

The error is on line 473, as are two of the warnings. I can't say as I 
can figure out what it's getting at all, but I'm probably just being dumb.

The rule is

extensionAndException : '...' exceptionSpec? ;

and exceptionSpec is:

exceptionSpec : ('!' exceptionIdentification)? ;

exceptionIdentification : signedNumber | definedValue | type ':' value ;

The error and warnings are:

warning(200): workspace/asn.1-parse/grammars/ASN_1.g:346:82: Decision 
can match input such as "'('" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(200): workspace/asn.1-parse/grammars/ASN_1.g:473:31: Decision 
can match input such as "'}'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(200): workspace/asn.1-parse/grammars/ASN_1.g:473:31: Decision 
can match input such as "','" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
error(201): workspace/asn.1-parse/grammars/ASN_1.g:473:31: The following 
alternatives can never be matched: 2

My best guess is that the problem comes from "type" in the 
exceptionIdentification rule, but then I'd expect the error to be there, 
and not in extensionAndException.

The remaining warning, about rule 'type', I'm similarly at a loss about. 
The warning seems to refer to the reference to 'constraint'.

Thanks for any help anyone can give,

Sam
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/e7150c61/attachment.pl 

From s.barnett-cormack at lancaster.ac.uk  Mon Mar  2 03:48:14 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 02 Mar 2009 11:48:14 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49ABAB7F.4020609@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>	<49AB0A74.9040105@lancaster.ac.uk>	<49ABA7C2.1090504@lancaster.ac.uk>
	<49ABAB7F.4020609@lancaster.ac.uk>
Message-ID: <49ABC77E.6030707@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Hey all,
> 
> With Gavin's generous help, I'm down to one error and a couple of 
> warnings, which is nice.
> 
> In the attached grammar, I haven't fixed the lexer issues Gavin 
> identified yet, as I'm focused on the parser for the moment.
> 
> The error is on line 473, as are two of the warnings. I can't say as I 
> can figure out what it's getting at all, but I'm probably just being dumb.
> 
> The rule is
> 
> extensionAndException : '...' exceptionSpec? ;
> 
> and exceptionSpec is:
> 
> exceptionSpec : ('!' exceptionIdentification)? ;
> 
> exceptionIdentification : signedNumber | definedValue | type ':' value ;
> 
> The error and warnings are:
> 
> warning(200): workspace/asn.1-parse/grammars/ASN_1.g:346:82: Decision 
> can match input such as "'('" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(200): workspace/asn.1-parse/grammars/ASN_1.g:473:31: Decision 
> can match input such as "'}'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(200): workspace/asn.1-parse/grammars/ASN_1.g:473:31: Decision 
> can match input such as "','" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> error(201): workspace/asn.1-parse/grammars/ASN_1.g:473:31: The following 
> alternatives can never be matched: 2
> 
> My best guess is that the problem comes from "type" in the 
> exceptionIdentification rule, but then I'd expect the error to be there, 
> and not in extensionAndException.

No, Sam, it's because a rule is referenced as optional, and that rule 
can match nothing as well, so there's no point it being optional...

So I'm now down to a warning about

type : ((typeWithConstraint)=>typeWithConstraint | builtinType | 
referencedType) constraint* ;

And a load of parser warnings and errors that it wasn't bothering to 
generate before... *sigh*

Sam

From s.barnett-cormack at lancaster.ac.uk  Mon Mar  2 03:49:40 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 02 Mar 2009 11:49:40 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49ABC77E.6030707@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>	<49AB0A74.9040105@lancaster.ac.uk>	<49ABA7C2.1090504@lancaster.ac.uk>	<49ABAB7F.4020609@lancaster.ac.uk>
	<49ABC77E.6030707@lancaster.ac.uk>
Message-ID: <49ABC7D4.6020307@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Sam Barnett-Cormack wrote:
>> Hey all,
>>
>> With Gavin's generous help, I'm down to one error and a couple of 
>> warnings, which is nice.
>>
>> In the attached grammar, I haven't fixed the lexer issues Gavin 
>> identified yet, as I'm focused on the parser for the moment.
>>
>> The error is on line 473, as are two of the warnings. I can't say as I 
>> can figure out what it's getting at all, but I'm probably just being dumb.
>>
>> The rule is
>>
>> extensionAndException : '...' exceptionSpec? ;
>>
>> and exceptionSpec is:
>>
>> exceptionSpec : ('!' exceptionIdentification)? ;
>>
>> exceptionIdentification : signedNumber | definedValue | type ':' value ;
>>
>> The error and warnings are:
>>
>> warning(200): workspace/asn.1-parse/grammars/ASN_1.g:346:82: Decision 
>> can match input such as "'('" using multiple alternatives: 1, 2
>> As a result, alternative(s) 2 were disabled for that input
>> warning(200): workspace/asn.1-parse/grammars/ASN_1.g:473:31: Decision 
>> can match input such as "'}'" using multiple alternatives: 1, 2
>> As a result, alternative(s) 2 were disabled for that input
>> warning(200): workspace/asn.1-parse/grammars/ASN_1.g:473:31: Decision 
>> can match input such as "','" using multiple alternatives: 1, 2
>> As a result, alternative(s) 2 were disabled for that input
>> error(201): workspace/asn.1-parse/grammars/ASN_1.g:473:31: The following 
>> alternatives can never be matched: 2
>>
>> My best guess is that the problem comes from "type" in the 
>> exceptionIdentification rule, but then I'd expect the error to be there, 
>> and not in extensionAndException.
> 
> No, Sam, it's because a rule is referenced as optional, and that rule 
> can match nothing as well, so there's no point it being optional...
> 
> So I'm now down to a warning about
> 
> type : ((typeWithConstraint)=>typeWithConstraint | builtinType | 
> referencedType) constraint* ;
> 
> And a load of parser warnings and errors that it wasn't bothering to 
> generate before... *sigh*

Or even *lexer* warnings and errors

Sam

From jimi at temporal-wave.com  Mon Mar  2 07:32:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Mar 2009 07:32:53 -0800
Subject: [antlr-interest] problems with C runtime and output=template
In-Reply-To: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>
References: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>
Message-ID: <49ABFC25.6050806@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/d93174b5/attachment.html 

From jimi at temporal-wave.com  Mon Mar  2 07:36:30 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Mar 2009 07:36:30 -0800
Subject: [antlr-interest] problems with C runtime and output=template
In-Reply-To: <1633C11AAD5C1C47A79C673A32A64FBADC135C@webmail.ite.com.au>
References: <1633C11AAD5C1C47A79C673A32A64FBADC1356@webmail.ite.com.au>
	<1633C11AAD5C1C47A79C673A32A64FBADC135C@webmail.ite.com.au>
Message-ID: <49ABFCFE.1070205@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/739d8527/attachment.html 

From jimi at temporal-wave.com  Mon Mar  2 07:50:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Mar 2009 07:50:13 -0800
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49ABC7D4.6020307@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>	<49AB0A74.9040105@lancaster.ac.uk>	<49ABA7C2.1090504@lancaster.ac.uk>	<49ABAB7F.4020609@lancaster.ac.uk>	<49ABC77E.6030707@lancaster.ac.uk>
	<49ABC7D4.6020307@lancaster.ac.uk>
Message-ID: <49AC0035.9020008@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/e0060473/attachment.html 

From paul.bouche at nsn.com  Mon Mar  2 07:51:20 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Mon, 02 Mar 2009 16:51:20 +0100
Subject: [antlr-interest] Disabling look ahead or ???
Message-ID: <49AC0078.7080700@nsn.com>

Hi,

I have the following grammer, problem described below.
start   :   outerPropertynode | EOF;
outerPropertynode   :   outerProperties;
properties   : (property delim)*; // simplified
property   : key '=' value;
value   :   plain | '{' propertynode '}'

As you can see the value rule recursively calls the propertynode rule. 
Empty propertynode values are ok. This is what the grammar expresses.
Yet, now I installed error recovery on the rule property, which says 
that if there is an erroneous token found in rule property consume 
everything until you find a delimiter, effectively discarding this 
property. Yet from the start if there is an erroneous token for key the 
lookahead in rule properties will decide that this has to match as an 
empty property and an exception occurs in the start rule. In the case of 
a non empty stream and when parsing from the start I would like to force 
rule invocation of rule property even though the look ahead decides for 
empty match. I still want the non empty stream to be matched correctly 
without error generation, but anyother input to be tried to be matched 
by rule property.

Thanks,
Paul

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From thomas.woelfle at interactive-objects.com  Mon Mar  2 08:10:43 2009
From: thomas.woelfle at interactive-objects.com (Thomas Woelfle)
Date: Mon, 02 Mar 2009 17:10:43 +0100
Subject: [antlr-interest] Problem when parsing numerics
In-Reply-To: <0MKqIe-1LcEeI2FmO-000di0@mx.kundenserver.de>
References: <2969488.3161234948794703.JavaMail.root@star>
	<499C1E98.4070805@interactive-objects.com>
	<499C38AE.2060205@temporal-wave.com>
	<499D1E2B.9090907@interactive-objects.com>
	<0ML4cO-1LadvS28Bv-000Lzs@mx.kundenserver.de>
	<49A4F5C2.9020900@interactive-objects.com>
	<0MKqIe-1LcEeI2FmO-000di0@mx.kundenserver.de>
Message-ID: <49AC0503.9010600@interactive-objects.com>

Hi,

I've been running in an almost similar problem again.

The subject language that has to be parsed defines some keywords which 
begin with a '.'. Besides that there are specific names allowed and '.' 
is allowed to be a token too.

The reduced lexer grammar that produces the problem is:

DOT: '.';

ARG: ('.ARG')=> '.ARG';

ATT: ('.ATT')=> '.ATT';

NAME
  :
  ('A'..'Z')*;


Valid inputs in the subject language are:

'.' which should result in one token DOT
'.ARG' which should result in one token ARG
'.ATT' which should result in one token ATT
'ALFRED' which should result in one token NAME
'ALFRED.ABACUS' which should result in three tokens NAME DOT NAME

Everything works fine except the last input. When lexing that string the 
lexer logs an error "no viable alternative at character '.' " and 
returns only two NAME tokens but no DOT token.

I guess this is the same problem with the lookahead, isn't it?

Any idea how to change the lexer grammer so that it is able to tokenize 
all of the valid inputs?


Regards,
Thomas
> At 20:39 25/02/2009, Thomas Woelfle wrote:
> >thanks for the tip. Using a syntactic predicate works. But to me
> >this seems to be a bug in the algorithm that examines the minimal
> >amount of lookahread since it calculates a wrong minimal lookahead,
> >isn't it?
>
> Yes and no.  Because there's a loop involved, the minimal lookahead is 
> infinite, which is a little hard to express in static code :)
>
> ANTLR probably could be a little bit smarter and generate the synpred 
> for you behind the scenes (which is something I was suggesting myself 
> about a year ago), but the current architecture and its 
> half-ANTLR-v2-ness apparently doesn't lend itself too well to that.  
> Hopefully that'll get better before too long, especially with the 
> upcoming CSharp3 port being self-hosted ;)
>


-- 
Interactive Objects Software GmbH
Basler Strasse 61
79100 Freiburg, Germany

Phone:  +49 761 400 73 0
mailto:thomas.woelfle at interactive-objects.com


------------------------------------------------------------------------

Interactive Objects' Legacy Modernization Solutions 

Get Your Applications SOA-Ready!

See http://www.interactive-objects.com/ for more information.

------------------------------------------------------------------------


Interactive Objects Software GmbH | Freiburg | Gesch?ftsf?hrer: Alberto Perandones, Andrea Hemprich
| AG Frbg. HRB 5810 | USt-ID: DE 197983057


From jimi at temporal-wave.com  Mon Mar  2 08:30:19 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 02 Mar 2009 08:30:19 -0800
Subject: [antlr-interest] Problem when parsing numerics
In-Reply-To: <49AC0503.9010600@interactive-objects.com>
References: <2969488.3161234948794703.JavaMail.root@star>	<499C1E98.4070805@interactive-objects.com>	<499C38AE.2060205@temporal-wave.com>	<499D1E2B.9090907@interactive-objects.com>	<0ML4cO-1LadvS28Bv-000Lzs@mx.kundenserver.de>	<49A4F5C2.9020900@interactive-objects.com>	<0MKqIe-1LcEeI2FmO-000di0@mx.kundenserver.de>
	<49AC0503.9010600@interactive-objects.com>
Message-ID: <49AC099B.80206@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/58c604d2/attachment.html 

From cabuzelth at yahoo.com  Mon Mar  2 08:36:15 2009
From: cabuzelth at yahoo.com (CABUZEL Thierry)
Date: Mon, 2 Mar 2009 08:36:15 -0800 (PST)
Subject: [antlr-interest] Is this the correct use of ANTLR
Message-ID: <168681.30336.qm@web65503.mail.ac4.yahoo.com>

If your goal is to have a C like scripting language for your command line, Tiny C Compiler (http://bellard.org/tcc/) already do this.

http://bellard.org/tcc/

Just start your C code by: 
#!/usr/local/bin/tcc -run
and you can use it from the command line :)


 
*----------------------------------------------------------------------* 
  | _,,,---,,_            
  /,`.-'`' -. ;-;;,_     Thierry CABUZEL
 |,4- ) )-,_. ` ( ``-'   E-mail: CabuzelTh at yahoo.com 
`---``(_/--` `-`_) 
*----------------------------------------------------------------------* 




----- Forwarded Message ----
From: Bob Smiley <xenome4 at gmail.com>
To: antlr-interest at antlr.org
Sent: Friday, February 27, 2009 5:47:46 PM
Subject: [antlr-interest] Is this the correct use of ANTLR

 
Hi all,
 
I?m trying to create a simple scripting language that
looks similar to C but I don?t actually need to implement an interpreter.
  I just want to convert this ?ultra-simple C? subset
language into basic C and then run it through GCC to create an executable. 
Is it easier to start with say an ANSI C grammar and cut out what I don?t
need or actually find a more simple programming language?  I really just
want mathematical expressions, functions defined within the file, if/else
if/else, and loops  (while, for, foreach).
 
My end goal is to be able to take a user?s script
file, process it, add the required integration fluff and then create a .o I can
link into my application.
 
I?m a total newbie when it comes to this stuff so I apologize
in advance for the basic question.
 
Thanks


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/2cc35726/attachment.html 
-------------- next part --------------

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From s.barnett-cormack at lancaster.ac.uk  Mon Mar  2 08:36:56 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 02 Mar 2009 16:36:56 +0000
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49AC0035.9020008@temporal-wave.com>
References: <49AA9762.1090702@lancaster.ac.uk>	<49AB0A74.9040105@lancaster.ac.uk>	<49ABA7C2.1090504@lancaster.ac.uk>	<49ABAB7F.4020609@lancaster.ac.uk>	<49ABC77E.6030707@lancaster.ac.uk>	<49ABC7D4.6020307@lancaster.ac.uk>
	<49AC0035.9020008@temporal-wave.com>
Message-ID: <49AC0B28.7000707@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Sam Barnett-Cormack wrote:
>>   
>>> Sam Barnett-Cormack wrote:
>>>     
>>>
>>> type : ((typeWithConstraint)=>typeWithConstraint | builtinType | 
>>> referencedType) constraint* ;
>>>
>>> And a load of parser warnings and errors that it wasn't bothering to 
>>> generate before... *sigh*
>>>     
>>
>> Or even *lexer* warnings and errors

(turns out those were the result of weird behaviour I've been seeing 
that I can only assume is a bug; I'll report on that separately)

> I think that you need to start again and go a lot more slowly in 
> building up your grammar. There is no point asking about each and every 
> error you are getting, as you won't learn anything. Do this:

Well, I think I've been learning a lot... nowhere near every error I've 
got has come here, only the ones I've failed to trace on my own. After 
getting a pointer on a few, I've managed to fix most of the rest myself. 
I'm currently wrestling with something odd that I can't see how to 
resolve, but I'm trying to understand it myself before I ask for help. I 
apologise if I'm currently too incompetent to be worth anyone helping.

> 1) Do not use 'xxxx' type things in the parser rules;

I'm aware of the issues - they lead to a more readable grammar, more 
natural-feeling, and I'm pretty damn sure that they aren't causing any 
of my problems.

> 2) Start with a blank lexer and parser;

Well, I certainly did this time.

> 3) Build the parser rules for expressions, by starting with the primary 
> elements and gradually inserting rules in the expression tree one at a 
> time - compile and test after each rule, fix issue as soon as you see 
> them, do not leave them to accumulate as you will get nowhere;
> 4) Now add one parser rule at a time (you will sometimes need a few at 
> once of course) and compile and test after each change - compile and 
> test after each rule, fix issue as soon as you see them, do not leave 
> them to accumulate as you will get nowhere;

Now, I'll admit I did get a bit tied up, and starting like that 
originally would have been good (and was what I was trying to do). Once 
it seemed to be going okay, I got frustrated looking between screen and 
standard so often, and let myself go too far. However, I doubt very much 
that starting again now would help. I'd just run into the remaining 
problem(s) from a different angle.

> The things you are seeing are standard things that happen when you start 
> out by typing in a grammar from the normative grammar of some language 
> spec. Such language specs are not really written with writing a parser 
> spec in mind (most say this) and even if they are they are usually 
> written with yacc/bison in mind. Consequently they are full of 
> ambiguities that you must left factor as you go.

Well, I didn't just blindly copy them out, although I'll admit I got 
tied up in left-recursion issues. The grammar actually seems to have 
some ambiguities that would be ambiguous anywhere, actually, which is a 
pain in the neck, by c'est la vie.

I also didn't want to refactor it anymore than necessary because there 
is a relationship between the structure of rules in the standard and the 
semantic structure, which should help at later stages.

> Unless you have built a lot of grammars, that is why you need to do this 
> in small steps - otherwise you will end up turning on backtracking and 
> adorning the grammar with predicates that include entire rules such as 
> (typeWithConstraint)=> when the real issue is that you have not left 
> factored the grammar correctly.

Oop, thanks for that one, I'd missed that when I was removing 
unnecessary predicates that were exploratory.

> Get a copy of the book if you can, it will help a lot, and read through 
> as much of the Wiki as you can before your fingers itch to get back at 
> the keyboard.

Got the book. Read it, in fact. Also have a good mark on languages & 
compilers from my undergrad days, but that doesn't really mean anything.
Read a lot of the wiki, which seems to largely have a more judgemental 
tone than the book, but read a lot of it anyway.

In case you're interested, and by way of demonstrating that I am making 
progress, the current state of the grammar is attached. Only one error 
stopping it compiling, and one non-breaking warning that I will want to 
fix before using this for anything.

Sam

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/1cfae2ce/attachment.pl 

From juang at evolutio.com.ar  Mon Mar  2 09:34:12 2009
From: juang at evolutio.com.ar (Juan Ignacio Gelos)
Date: Mon, 2 Mar 2009 15:34:12 -0200
Subject: [antlr-interest] On "Heterogeneous tree nodes"
Message-ID: <514bff6b0903020934u72c077bkb627f6989c77acb8@mail.gmail.com>

Hello,

I'm trying to map SQL queries to ASTs. My idea for the final AST is to have
tree of objects whose classes represent actual language constructs and
database objects. i.e., for starters I want a TableColumn class for the
nodes representing database columns, for example those specified in the
SELECT clause of the SELECT statement (SELECT col1, col2, col3, ... )

Now, to determine that this token is a column, I need to do so through
"nested" parser rules, eg.

column :
    dbObject      //<ColumnNode>
        -> ^( COLUMN dbObject )

dbObject :
    identifier ( DOT identifier ) *
    ;

identifier :
    NonQuotedIdentifier
    | QuotedIdentifier
    ;


I want to map this column token to a class named ColumnNode (as you see in
the commented out token option which does not work because dbObject isn't a
lexer rule.
Of course, dbObject and identifier are rules used elsewhere througout the
grammar.

What's the approach to take? a) Can I get the context of the node in the
TreeAdaptor, b) is there any way to make the <token=...> option to work with
parser rules, c) do I need to rephrase the rules in any way to allow for any
of this?

Thanks in advance for any tips/help with this.


Saluda atte.,
Juan Ignacio Gelos
Evolutio Software
juang at evolutio.com.ar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/91dc1170/attachment.html 

From jaluber at gmx.de  Mon Mar  2 09:38:33 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 02 Mar 2009 18:38:33 +0100
Subject: [antlr-interest] Confusing, hopefully-final, problems
In-Reply-To: <49AC0B28.7000707@lancaster.ac.uk>
References: <49AA9762.1090702@lancaster.ac.uk>	<49AB0A74.9040105@lancaster.ac.uk>	<49ABA7C2.1090504@lancaster.ac.uk>	<49ABAB7F.4020609@lancaster.ac.uk>	<49ABC77E.6030707@lancaster.ac.uk>	<49ABC7D4.6020307@lancaster.ac.uk>	<49AC0035.9020008@temporal-wave.com>
	<49AC0B28.7000707@lancaster.ac.uk>
Message-ID: <49AC1999.9030408@gmx.de>

Sam Barnett-Cormack schrieb:
> Jim Idle wrote:
>> The things you are seeing are standard things that happen when you
>> start out by typing in a grammar from the normative grammar of some
>> language spec. Such language specs are not really written with writing
>> a parser spec in mind (most say this) and even if they are they are
>> usually written with yacc/bison in mind. Consequently they are full of
>> ambiguities that you must left factor as you go.
> 
> Well, I didn't just blindly copy them out, although I'll admit I got
> tied up in left-recursion issues. The grammar actually seems to have
> some ambiguities that would be ambiguous anywhere, actually, which is a
> pain in the neck, by c'est la vie.
> 
> I also didn't want to refactor it anymore than necessary because there
> is a relationship between the structure of rules in the standard and the
> semantic structure, which should help at later stages.

You can undo the left-factoring when doing rewrites of the AST. It helps
if you use imaginary tokens to disambiguate ambiguities for the tree parser.

Johannes

From jbb at acm.org  Mon Mar  2 11:25:45 2009
From: jbb at acm.org (John B. Brodie)
Date: Mon, 2 Mar 2009 14:25:45 -0500
Subject: [antlr-interest] Disabling look ahead or ???
In-Reply-To: <49AC0078.7080700@nsn.com>
References: <49AC0078.7080700@nsn.com>
Message-ID: <200903021425.46165.jbb@acm.org>

Greetings!

On Monday 02 March 2009 10:51:20 am Paul Bouch? (NSN) wrote:
> I have the following grammer, problem described below.
> start   :   outerPropertynode | EOF;
> outerPropertynode   :   outerProperties;
> properties   : (property delim)*; // simplified
> property   : key '=' value;
> value   :   plain | '{' propertynode '}'
>
> As you can see the value rule recursively calls the propertynode rule.
> Empty propertynode values are ok. This is what the grammar expresses.

Ok, I believe you. But the above grammar fragment does not express that - in 
fact the fragment is incomplete and so it is really hard to infer anything 
about it.

> Yet, now I installed error recovery on the rule property, which says
> that if there is an erroneous token found in rule property consume
> everything until you find a delimiter, effectively discarding this
> property. Yet from the start if there is an erroneous token for key the
> lookahead in rule properties will decide that this has to match as an
> empty property and an exception occurs in the start rule. In the case of
> a non empty stream and when parsing from the start I would like to force
> rule invocation of rule property even though the look ahead decides for
> empty match. I still want the non empty stream to be matched correctly
> without error generation, but anyother input to be tried to be matched
> by rule property.

I am sorry but I am really confused by what it is you are trying to 
accomplish.

Can you please post the smallest - yet COMPLETE - example grammar of your 
problem?

Speculating on what your problem might be ... have you tried something like 
this (untested):

start  : ( key '=' value delim )* EOF ;
value = plain | '{' propertynode ? '}' ;
propertynode : /* the non-empty version of whatever this is */ ;
key = /* whatever this is */ ;
delim = /* whatever this is */ ;

Hope this helps
   -jbb
(looking forward to finding out more about your problem)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/baba01c3/attachment.html 

From yimm8369 at hotmail.com  Mon Mar  2 13:08:27 2009
From: yimm8369 at hotmail.com (YingAnnie)
Date: Tue, 3 Mar 2009 05:08:27 +0800
Subject: [antlr-interest] (no subject)
Message-ID: <BAY122-W400B475172EDC36691FB69DBA90@phx.gbl>


 

 

Hello,

 

 

These days,I am playing with Tree grammar, I got the error today:

 

F:\Treegrammar.g: node from after line 9:15 required (...)+ loop did not match anything at input 'UP'
F:\Treegrammar.g: node from after line 9:15 mismatched input 'MULTIPLICATIVE_EXPRESSION' expecting <UP>

 

what does  'UP' AND  <UP> mean?

 

 

 Thanks in advance.

 

 

 Annie

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090303/3032964c/attachment.html 

From yimm8369 at hotmail.com  Mon Mar  2 13:09:23 2009
From: yimm8369 at hotmail.com (YingAnnie)
Date: Tue, 3 Mar 2009 05:09:23 +0800
Subject: [antlr-interest] what does  'UP' AND  <UP> mean?
Message-ID: <BAY122-W176A1CA88F42912ECBCFDBDBA90@phx.gbl>






 
 
Hello,
 
 
I am playing with Tree grammar, I got the error today:
 
F:\Treegrammar.g: node from after line 9:15 required (...)+ loop did not match anything at input 'UP'
F:\Treegrammar.g: node from after line 9:15 mismatched input 'MULTIPLICATIVE_EXPRESSION' expecting <UP>
 
what does  'UP' AND  <UP> mean?
 
 
 Thanks in advance.
 
 
 Annie

_________________________________________________________________
MSN??????????????????MSN???
http://im.live.cn/safe/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090303/a7bf053d/attachment.html 

From micha-1 at fantasymail.de  Mon Mar  2 13:50:22 2009
From: micha-1 at fantasymail.de (micha)
Date: Mon, 2 Mar 2009 22:50:22 +0100
Subject: [antlr-interest] what does  'UP' AND  <UP> mean?
In-Reply-To: <BAY122-W176A1CA88F42912ECBCFDBDBA90@phx.gbl>
References: <BAY122-W176A1CA88F42912ECBCFDBDBA90@phx.gbl>
Message-ID: <200903022250.22863.micha-1@fantasymail.de>

Am Monday 02 March 2009 22:09:23 schrieb YingAnnie:
> Hello,
>
>
> I am playing with Tree grammar, I got the error today:
>
> F:\Treegrammar.g: node from after line 9:15 required (...)+ loop did not
> match anything at input 'UP' F:\Treegrammar.g: node from after line 9:15
> mismatched input 'MULTIPLICATIVE_EXPRESSION' expecting <UP>

that means that your parser generates a different tree than the tree parser 
expects. 

> what does  'UP' AND  <UP> mean?
>
the parser inserts <up> and <down> tokens to construct the tree;
<node-type> <down> children <up> 

you can print the tree to see this (and check it)

cheers,
Michael

From laurent.caillette at gmail.com  Mon Mar  2 13:52:15 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Mon, 2 Mar 2009 22:52:15 +0100
Subject: [antlr-interest] Bug in ANTLR-3.1.2 with tree grammar wildcard
	list label x+= ?
In-Reply-To: <20090301103317.B3E2F3418434@www.antlr.org>
References: <3b7c64070902271607q4d0ef357ic641eb637466ebf6@mail.gmail.com>
	<20090228001715.321C534184C2@www.antlr.org>
	<61AC8149C40D468EAC3C78BDE03C68FF@DFW5RB41>
	<20090301103317.B3E2F3418434@www.antlr.org>
Message-ID: <3b7c64070903021352p4d6fa9e3s47be87767f626cb6@mail.gmail.com>

Ok sorry for my last mail (noise), I wasn't understanding the
ANTLR-381. Thanks for the fix.

c.

On Sat, Feb 28, 2009 at 1:17 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> You can fix it by creating a subrule:


At 20:40 28/02/2009, Gary R. Van Sickle wrote:
>Bug or feature though? ?It seems inconsistent for what appear
>to be two semantically equivalent constructs to be totally
>fine in the one case and a silent failure in the other.

From swedish_man_2007-antlr at yahoo.se  Mon Mar  2 14:23:26 2009
From: swedish_man_2007-antlr at yahoo.se (swedish_man_2007-antlr at yahoo.se)
Date: Mon, 2 Mar 2009 22:23:26 +0000 (GMT)
Subject: [antlr-interest] Can ANTLR be used for renaming a method or
	class/interface and all its invocations/references ?
Message-ID: <117814.11778.qm@web23007.mail.ird.yahoo.com>

I am searching for a library that you can use for programatically renaming classes/interfaces or renaming methods, including automatic renaming all references to the methods/types in the source code files/directories that you specify.

In other words, I am looking for a library that can do the same kind of rename-refactoring that you can do in some IDE environments (e.g. Eclipse).

Is ANTLR the tool I am looking for (?) or does somebody here know of another library that could help you to implement a method like this:
public void renameMethod(
?? string nameOfClassOrInterfaceWithTheMethodToBeRenamed,
?? string currentNameOfTheMethodToBeRenamed,
?? string newMethodName,
?? string[] sourceCodeDirectoriesWhereAllMethodUsagesShouldBeRenamed
)

If the answer is yes, then is it simple and is there any code example illustrating how to do it ?

/ Tom



      __________________________________________________________
L?na pengar utan s?kerhet. J?mf?r vilkor online hos Kelkoo.
http://www.kelkoo.se/c-100390123-lan-utan-sakerhet.html?partnerId=96915014
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090302/fdd635e5/attachment.html 

From laurent.caillette at gmail.com  Mon Mar  2 15:10:02 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Tue, 3 Mar 2009 00:10:02 +0100
Subject: [antlr-interest] Can ANTLR be used for renaming a method or
	class/interface and all its invocations/references ?
In-Reply-To: <117814.11778.qm@web23007.mail.ird.yahoo.com>
References: <117814.11778.qm@web23007.mail.ird.yahoo.com>
Message-ID: <3b7c64070903021510x58842abekdd3f5ff034512049@mail.gmail.com>

Sun's Jackpot offers an API for doing that. But it seems designed to
run as a NetBeans plugin. If you need to apply your changes as a kind
of batch in a headless environnment, fooling NetBeans could become a
hard job. If you need a fine customization of the renaming, Jackpot
looks ok for you.

http://jackpot.netbeans.org/docs/index.html


On Mon, Mar 2, 2009 at 11:23 PM,  <swedish_man_2007-antlr at yahoo.se> wrote:
> I am searching for a library that you can use for programatically renaming
> classes/interfaces or renaming methods, including automatic renaming all
> references to the methods/types in the source code files/directories that
> you specify.
>
> In other words, I am looking for a library that can do the same kind of
> rename-refactoring that you can do in some IDE environments (e.g. Eclipse).
>
> Is ANTLR the tool I am looking for (?) or does somebody here know of another
> library that could help you to implement a method like this:
> public void renameMethod(
> ?? string nameOfClassOrInterfaceWithTheMethodToBeRenamed,
> ?? string currentNameOfTheMethodToBeRenamed,
> ?? string newMethodName,
> ?? string[] sourceCodeDirectoriesWhereAllMethodUsagesShouldBeRenamed
> )
>
> If the answer is yes, then is it simple and is there any code example
> illustrating how to do it ?
>
> / Tom
>
> ________________________________
> L?na pengar utan s?kerhet.
> S?k och j?mf?r l?n hos Kelkoo.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From s.barnett-cormack at lancaster.ac.uk  Tue Mar  3 03:19:53 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 03 Mar 2009 11:19:53 +0000
Subject: [antlr-interest] Error I can't get my head around at all...
Message-ID: <49AD1259.2020003@lancaster.ac.uk>

Hi all,

I've wracked my brains on this one, and really can't see what's going on.

I've got one error in my grammar, and I just can't see how it's come 
about. I've been listening to everything people have said, I've been 
trying to apply what I've learned, most notably drilling into rules and 
expanding out to see why it says a choice is unreachable, but it doesn't 
make sense.

The rule with the error is on line 300:

globalModuleReference : modulereference (objectIdentifierValue | 
definedValue)? ;

With the error:

(201): The following alternatives can never be matched: 3

Accompanying warnings:

(200): Decision can match input such as "CAPID" using multiple 
alternatives: 2, 3
As a result, alternative(s) 3 were disabled for that input

(200): Decision can match input such as "LCID" using multiple 
alternatives: 2, 3
As a result, alternative(s) 3 were disabled for that input

The problem is, neither objectIdentifierValue is nillable, 
objectIdentifierValue must start with '{', and defined value can start 
with CAPID or LCID. So where's the ambiguity? It's got a choice of 
matching '{', CAPID, LCID, or stopping for this rule.

Hoping someone can shed some light on this before I get too much of a 
headache...

Sam
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090303/396e45af/attachment.pl 

From andreas.meyer at smartshift.de  Tue Mar  3 03:25:24 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 03 Mar 2009 12:25:24 +0100
Subject: [antlr-interest] Error I can't get my head around at all...
In-Reply-To: <49AD1259.2020003@lancaster.ac.uk>
References: <49AD1259.2020003@lancaster.ac.uk>
Message-ID: <49AD13A4.8030507@smartshift.de>

Just a guess: did you use ANTLRworks? If not, it is indeed quite hard to 
see the cause.

Andreas

Sam Barnett-Cormack schrieb:
> Hi all,
>
> I've wracked my brains on this one, and really can't see what's going on.
>
> I've got one error in my grammar, and I just can't see how it's come 
> about. I've been listening to everything people have said, I've been 
> trying to apply what I've learned, most notably drilling into rules 
> and expanding out to see why it says a choice is unreachable, but it 
> doesn't make sense.
>
> The rule with the error is on line 300:
>
> globalModuleReference : modulereference (objectIdentifierValue | 
> definedValue)? ;
>
> With the error:
>
> (201): The following alternatives can never be matched: 3
>
> Accompanying warnings:
>
> (200): Decision can match input such as "CAPID" using multiple 
> alternatives: 2, 3
> As a result, alternative(s) 3 were disabled for that input
>
> (200): Decision can match input such as "LCID" using multiple 
> alternatives: 2, 3
> As a result, alternative(s) 3 were disabled for that input
>
> The problem is, neither objectIdentifierValue is nillable, 
> objectIdentifierValue must start with '{', and defined value can start 
> with CAPID or LCID. So where's the ambiguity? It's got a choice of 
> matching '{', CAPID, LCID, or stopping for this rule.
>
> Hoping someone can shed some light on this before I get too much of a 
> headache...
>
> Sam
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at jazillian.com  Tue Mar  3 08:18:49 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 03 Mar 2009 11:18:49 -0500
Subject: [antlr-interest] Java Parser to analyze C++ language syntax
In-Reply-To: <f14c01620902271448s7306690es237a8d17a16ed620@mail.gmail.com>
References: <26e9b8c20902261734i223bebd3i409cb784048bb160@mail.gmail.com>	
	<80a70730902261818w7d5265efg81276feb06392692@mail.gmail.com>	
	<26e9b8c20902262006o628874ddn321b8460cda7ae1e@mail.gmail.com>	
	<f14c01620902271032q1924dce2w32dcac03f810f69e@mail.gmail.com>	
	<49A85AC5.90205@jazillian.com>
	<f14c01620902271448s7306690es237a8d17a16ed620@mail.gmail.com>
Message-ID: <49AD5869.9030502@jazillian.com>

Kaleb Pederson wrote:
 
> In looking at LLVM a bit more closely, although both the FAQ and the
> features page mention full C++ support,

"full C++ support" - heh, that would be impossible ;)
Seems like pretty much any random sequence of characters would be
valid C++.

> One note on David Wigg's C++ grammar, it seemed well documented
> although, IIRC, it used a slightly patched version of ANTLR or its
> runtime which makes it a bit more difficult to use than would be
> typical.

IIRC, Wigg's C++ grammar chokes if you ever give it enough ugly C++
to chew on. As Terrence quips in his book "Back when C++ was almost parsable...".

Andy
> 
> --Kaleb
> 


From jimi at temporal-wave.com  Tue Mar  3 08:57:16 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 03 Mar 2009 08:57:16 -0800
Subject: [antlr-interest] Error I can't get my head around at all...
In-Reply-To: <49AD1259.2020003@lancaster.ac.uk>
References: <49AD1259.2020003@lancaster.ac.uk>
Message-ID: <49AD616C.7070409@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Hi all,
>
> I've wracked my brains on this one, and really can't see what's going on.
>
> I've got one error in my grammar, and I just can't see how it's come 
> about. I've been listening to everything people have said, I've been 
> trying to apply what I've learned, most notably drilling into rules 
> and expanding out to see why it says a choice is unreachable, but it 
> doesn't make sense.
>
> The rule with the error is on line 300:
>
> globalModuleReference : modulereference (objectIdentifierValue | 
> definedValue)? ;
>
> With the error:
>
> (201): The following alternatives can never be matched: 3
>
> Accompanying warnings:
>
> (200): Decision can match input such as "CAPID" using multiple 
> alternatives: 2, 3
> As a result, alternative(s) 3 were disabled for that input
>
> (200): Decision can match input such as "LCID" using multiple 
> alternatives: 2, 3
> As a result, alternative(s) 3 were disabled for that input
>
> The problem is, neither objectIdentifierValue is nillable, 
> objectIdentifierValue must start with '{', and defined value can start 
> with CAPID or LCID. So where's the ambiguity? It's got a choice of 
> matching '{', CAPID, LCID, or stopping for this rule.
>
> Hoping someone can shed some light on this before I get too much of a 
> headache...
I was trying to look at your grammar for you but the one you have 
attached is missing some token defs:

...
[08:08:06] warning(105): ASN_1.g:456:7: no lexer rule corresponding to 
token: BSTRING
[08:08:06] warning(105): ASN_1.g:273:24: no lexer rule corresponding to 
token: NUMBER
[08:08:06] warning(105): ASN_1.g:420:16: no lexer rule corresponding to 
token: NUMBER
[08:08:06] warning(105): ASN_1.g:621:9: no lexer rule corresponding to 
token: NUMBER
[08:08:06] warning(105): ASN_1.g:465:30: no lexer rule corresponding to 
token: HSTRING

...lots of these. You won't get anywhere until you have defined all the 
tokens you are trying to use in the parser.


If you can post one that has all the tokens defined correctly, I will 
try to help. Here's some more tips:

Take your tokens out of the tokens section and make them real rules, as in:

 BY='BY';

Becomes a keyword token in the lexer def:

// TOkens...
//
 BY:  'BY';

etc..

// Existing lexer

Then resolve your token confusion - I think that you need:

fragment NUMBER:;
fragment HSTRING:;

To define those token, but you could rename NUMBERf to be NUMBER;

You are trying to use backtrack in a lexer rule, and that does not work, 
backtrack is for parser. However you are also using skip() in CSTRING 
(which will drop the whole token, then setting $channel = DEFAULT; I 
can't tell what you are trying to do there, but the rule is incorrect. 
Are you trying to remove the opening and closing " marks? skip() means 
don't produce a token, not skip the current character.

Format your rules so that the () : | and ; align. This will make sure 
you don't merge alts by accident and means you can follow the alts with 
your eyes much easier.

Once I add the missing fragments, then I reproduce your error. However, 
I think that your CSTRING lexer rule is neither matching what you think 
it is, nor will return the text you want.


With formatting, it looks like this:

fragment
CSTRINGNL : WSNONL* NL WSNONL*;

CSTRING
    : '"'
      (
                   (WS)=> (      (CSTRINGNL)=>CSTRINGNL 
                           | WSNONL+
                         )
               | '"' '"'
               | ~'"'
          )*
        '"'
       {$channel=DEFAULT;}
       ;


Which means that you second predicate (CSTRINGNL)=> does not 
disambiguate anything and the first WS is redundant. I think I see what 
you are trying to do:

CSTRING
    :    '"'
            (
                  (CSTRINGNL)=>CSTRINGNL
                | ('""')=>'""'
                | ~'"'
            )*
        '"'
    ;


Next, your type rule. As mentioned in prior responses, this is happening 
because the normative grammar does not specify how to write a parser and 
so you have dangling ambiguity with the optional constraint sequence. 
Because constraint starts with '(' but yet is optional, it is ambiguous 
after sequenceOfType builtinType constraint (which AW shows you, but 
there other possibilities.

I don't know what how you want this to bind of course, but assuming that 
nearest match wins, and that you really wnat between 0 and infinite 
constraints and not just one, then you can have the constraints bind to 
the type using:

type : (typeWithConstraint | builtinType | referencedType) 
(('(')=>constraint)* ;

Given that the sequence is 0 or more, if this is not what you want, then 
your grammar is incorrect  and the constraint is too low down in the 
rules ;-) However, given that this is probably here because you typed it 
in from some spec, then it doubles the chances that this is what you want.

Next your globalModuleReference rule, which is causing problems again 
because (objectIdentifierValue | definedValue) is optional so the start 
set for these rules is ambiguous. definedValue can be 
externalValueReference | valueReference and the valueReference is LCID. 
However if that option is not taken then you can still get to LCID via 
valueAssignment, which starts with valueReference. The reason for this 
appears to be the fact that there are no statement terminators in this 
grammar. This may be because you have hidden NL but the language is 
actually NL sensitive, which means all rules with trailing optional 
elements cannot be disambiguated if they happen to match the start of a 
new statement. Are you sure that you should not be passing the NL through?

Again, I cannot tell where this should be associating but I strongly 
suspect that it should associate immediately. The problem is though, 
that without the statement terminator, then adding a predicate here will 
rid you of the error, but may consume something that looks like a value 
reference, and as I get to typing in this line, I think that the main 
problem is that you cannot hide NLs for this 'language' as they are 
significant as statement terminators. I tried to look up the specs but 
every link on http://www.itu.int is broken, which figures as it matches 
the language ;-)

So, you can solve the globalModuleReference ambiguities by creating 
predicates, that include the start tokens, but this may not be correct. 
I suspect that this is not ambiguous in the language because of the NL. 
read the spec and see if it says something like "A statement is 
terminated with a newline...." If it does then you cannot hide the NLs, 
at least not without lots of tricks that you do not know about yet.

Two final things:

Once again, I urge you to start again and go a little more slowly - the 
reason that you cannot solve these things is that they are nested too 
deep in the makeup now for you to see what is going on. Even trying to 
retro fit the newline stuff (assuming this is the issue) is going to be 
difficult for you at this point.

Finally, I see that your email address is from Lancaster Poly. This 
isn't your homework/graduate project/thesis is it? I have been caught by 
this before with someone from Sheffield Poly who offered to pay me then 
disappeared after  receiving the grammars. I await my Comp. Sci. degree 
from there with some impatience ;-)

Jim

From mgawinecki at gmail.com  Tue Mar  3 09:29:22 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Tue, 03 Mar 2009 18:29:22 +0100
Subject: [antlr-interest] SQL'92 grammar for Java parser
Message-ID: <49AD68F2.3050107@gmail.com>

Hi,

Do you know any SQL'92 grammar generating Java parser, preferebly in 
ANTLR 3?

I've seen some SQL grammars on the project site but they seem not to 
meet my requirements.

I'm planning to associate table and column identifiers with 
corresponding comments (both single line and multi-line), which usually 
appears in CREATE TABLE/ALTER TABLE commands.

Thanks for your time,

Best
Maciej

From s.barnett-cormack at lancaster.ac.uk  Tue Mar  3 12:39:09 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 03 Mar 2009 20:39:09 +0000
Subject: [antlr-interest] Error I can't get my head around at all...
In-Reply-To: <49AD616C.7070409@temporal-wave.com>
References: <49AD1259.2020003@lancaster.ac.uk>
	<49AD616C.7070409@temporal-wave.com>
Message-ID: <49AD956D.2030705@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
<SNIP>
> I was trying to look at your grammar for you but the one you have 
> attached is missing some token defs:
 >
> ...
> [08:08:06] warning(105): ASN_1.g:456:7: no lexer rule corresponding to 
> token: BSTRING
> [08:08:06] warning(105): ASN_1.g:273:24: no lexer rule corresponding to 
> token: NUMBER
> [08:08:06] warning(105): ASN_1.g:420:16: no lexer rule corresponding to 
> token: NUMBER
> [08:08:06] warning(105): ASN_1.g:621:9: no lexer rule corresponding to 
> token: NUMBER
> [08:08:06] warning(105): ASN_1.g:465:30: no lexer rule corresponding to 
> token: HSTRING
> 
> ...lots of these. You won't get anywhere until you have defined all the 
> tokens you are trying to use in the parser.

They're defined in the tokens section, and it only gives warnings - it 
was done that way because I didn't realise that fragment lexer rules 
still created the token definition.

> If you can post one that has all the tokens defined correctly, I will 
> try to help. Here's some more tips:
> 
> Take your tokens out of the tokens section and make them real rules, as in:
> 
>  BY='BY';
> 
> Becomes a keyword token in the lexer def:
> 
> // TOkens...
> //
>  BY:  'BY';
> 
> etc..

I've gone back and forth on which of those ways to do it - there's 
contradictary advice out there. The decider was something saying that 
using the tokens section ensured that they were given priority.

> // Existing lexer
> 
> Then resolve your token confusion - I think that you need:
> 
> fragment NUMBER:;
> fragment HSTRING:;
> 
> To define those token, but you could rename NUMBERf to be NUMBER;

As I mentioned above, I'll be making that change.

> You are trying to use backtrack in a lexer rule, and that does not work, 
> backtrack is for parser. However you are also using skip() in CSTRING 
> (which will drop the whole token, then setting $channel = DEFAULT; I 
> can't tell what you are trying to do there, but the rule is incorrect. 
> Are you trying to remove the opening and closing " marks? skip() means 
> don't produce a token, not skip the current character.

Sorry, I was working on the basis of the book saying that, for most 
purposes, both work in the same way, so backtrack would work. Predicates 
still work, though?

> Format your rules so that the () : | and ; align. This will make sure 
> you don't merge alts by accident and means you can follow the alts with 
> your eyes much easier.
> 
> Once I add the missing fragments, then I reproduce your error. However, 
> I think that your CSTRING lexer rule is neither matching what you think 
> it is, nor will return the text you want.
> 
> 
> With formatting, it looks like this:
> 
> fragment
> CSTRINGNL : WSNONL* NL WSNONL*;
> 
> CSTRING
>     : '"'
>       (
>                    (WS)=> (      (CSTRINGNL)=>CSTRINGNL 
>                            | WSNONL+
>                          )
>                | '"' '"'
>                | ~'"'
>           )*
>         '"'
>        {$channel=DEFAULT;}
>        ;
> 
> 
> Which means that you second predicate (CSTRINGNL)=> does not 
> disambiguate anything and the first WS is redundant. I think I see what 
> you are trying to do:
> 
> CSTRING
>     :    '"'
>             (
>                   (CSTRINGNL)=>CSTRINGNL
>                 | ('""')=>'""'
>                 | ~'"'
>             )*
>         '"'
>     ;

That's actually what I had before I started trying to debug the thing. 
That's my next task to tackle. I'm getting rid of the skip()s (which 
were there because someone told me that C: A B {skip();} A was 
equivalent to the old C: A !B A), and writing code to strip the unwanted 
bits in Java.

> Next, your type rule. As mentioned in prior responses, this is happening 
> because the normative grammar does not specify how to write a parser and 
> so you have dangling ambiguity with the optional constraint sequence. 
> Because constraint starts with '(' but yet is optional, it is ambiguous 
> after sequenceOfType builtinType constraint (which AW shows you, but 
> there other possibilities.
> 
> I don't know what how you want this to bind of course, but assuming that 
> nearest match wins, and that you really wnat between 0 and infinite 
> constraints and not just one, then you can have the constraints bind to 
> the type using:
> 
> type : (typeWithConstraint | builtinType | referencedType) 
> (('(')=>constraint)* ;
> 
> Given that the sequence is 0 or more, if this is not what you want, then 
> your grammar is incorrect  and the constraint is too low down in the 
> rules ;-) However, given that this is probably here because you typed it 
> in from some spec, then it doubles the chances that this is what you want.

That is indeed what I want. Thanks.

> Next your globalModuleReference rule, which is causing problems again 
> because (objectIdentifierValue | definedValue) is optional so the start 
> set for these rules is ambiguous. definedValue can be 
> externalValueReference | valueReference and the valueReference is LCID. 
> However if that option is not taken then you can still get to LCID via 
> valueAssignment, which starts with valueReference. The reason for this 
> appears to be the fact that there are no statement terminators in this 
> grammar. This may be because you have hidden NL but the language is 
> actually NL sensitive, which means all rules with trailing optional 
> elements cannot be disambiguated if they happen to match the start of a 
> new statement. Are you sure that you should not be passing the NL through?

Nope, newlines are not significant, and there's not really such a thing 
as a statement - it's really more of a declarative than procedural. 
Defining types and values.

> Again, I cannot tell where this should be associating but I strongly 
> suspect that it should associate immediately. The problem is though, 
> that without the statement terminator, then adding a predicate here will 
> rid you of the error, but may consume something that looks like a value 
> reference, and as I get to typing in this line, I think that the main 
> problem is that you cannot hide NLs for this 'language' as they are 
> significant as statement terminators. I tried to look up the specs but 
> every link on http://www.itu.int is broken, which figures as it matches 
> the language ;-)
> 
> So, you can solve the globalModuleReference ambiguities by creating 
> predicates, that include the start tokens, but this may not be correct. 
> I suspect that this is not ambiguous in the language because of the NL. 
> read the spec and see if it says something like "A statement is 
> terminated with a newline...." If it does then you cannot hide the NLs, 
> at least not without lots of tricks that you do not know about yet.

It actually says nothing about statements whatsoever; it's not 
procedural. It also says that, outside of cstrings (and even there in 
some senses), whitespace is not significant, and newlines (which are 
defined quite broadly) are counted as whitespace.

Most blocks are ended by either an END or a relevant closing bracket 
(parentheses, square, or braces), and "statement" level stuff is mostly 
ended simply by finishing... it's not the most handy language for parsing.

> Two final things:
> 
> Once again, I urge you to start again and go a little more slowly - the 
> reason that you cannot solve these things is that they are nested too 
> deep in the makeup now for you to see what is going on. Even trying to 
> retro fit the newline stuff (assuming this is the issue) is going to be 
> difficult for you at this point.
> 
> Finally, I see that your email address is from Lancaster Poly. This 
> isn't your homework/graduate project/thesis is it? I have been caught by 
> this before with someone from Sheffield Poly who offered to pay me then 
> disappeared after  receiving the grammars. I await my Comp. Sci. degree 
> from there with some impatience ;-)

Well, it's not a poly for starters, and never has been ;p

However, it's not any of those things. Plus I've not offered anyone 
money ;).

I see this more as help understanding ANTLR than help implementing 
ASN.1, although it serves as such as well. There is an expectation that 
this will end up as part of a new open source project, but we'll see how 
it goes.

Actually, I'm currently a student (part time) on an MA in Educational 
Research. I already got my CompSci BSc and MSc. I can understand that I 
might have given a misleading impression, but I'm really not as clueless 
as it seems you assume :)

-- 
Sam Barnett-Cormack

From jimi at temporal-wave.com  Tue Mar  3 13:07:58 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 03 Mar 2009 13:07:58 -0800
Subject: [antlr-interest] Error I can't get my head around at all...
In-Reply-To: <49AD956D.2030705@lancaster.ac.uk>
References: <49AD1259.2020003@lancaster.ac.uk>
	<49AD616C.7070409@temporal-wave.com>
	<49AD956D.2030705@lancaster.ac.uk>
Message-ID: <49AD9C2E.7040001@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Jim Idle wrote:
>> Sam Barnett-Cormack wrote:
> <SNIP>
>> I was trying to look at your grammar for you but the one you have 
>> attached is missing some token defs:

I presume that you saw I sent you the corrected grammar off list right?

Jim

From robert.soule at gmail.com  Tue Mar  3 14:16:36 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Tue, 3 Mar 2009 17:16:36 -0500
Subject: [antlr-interest] bug with composite grammars in C runtime?
Message-ID: <d1316fd70903031416g66c968d6t4b87017cb38cbede@mail.gmail.com>

Hi Jim,

I am trying to follow your suggestion of defining literals in a
separate lexer grammar,
and then importing them into my main grammar. I am getting a runtime
error, and I'm
not sure if I specified something wrong. Below are the files that
generate the error.

Here is the Helper.g:

lexer grammar Helper;
options {language = C;}
SEMI : ',';

and my A.g:

grammar A;
options { language=C; output=AST; }
import Helper;

tokens { PROGRAM; }
accept : SEMI EOF -> PROGRAM;
WHITE_SPACE      : (' '|'\t'|'\r'|'\n')+                     {
$channel = HIDDEN; };

When I run this, I get a bus error:
0x00000000 in ?? ()
(gdb) where
#0  0x00000000 in ?? ()
#1  0x000239cf in setCharStream ()
#2  0x00023abe in antlr3LexerNewStream ()
#3  0x00002868 in A_HelperNewSSD (instream=0x100180, state=0x100570,
gA=0x100460) at A_Helper.cpp:318
#4  0x00001a14 in ALexerNewSSD (instream=0x100180, state=0x0) at ALexer.cpp:352
#5  0x00001a45 in ALexerNew (instream=0x100180) at ALexer.cpp:285
#6  0x000029df in main (argc=2, argv=0xbffff110) at AtoB.cpp:30
(gdb)


The line A_Helper.cpp:318:

   ctx->pLexer  = antlr3LexerNewStream(ANTLR3_SIZE_HINT, instream, state);

And the driver:

#include <iostream>
#include <antlr3.h>
#include <AParser.h>
#include <ALexer.h>

int main(int argc, char* argv[])
{

  pANTLR3_INPUT_STREAM input;
  pALexer lex;
  input  = antlr3AsciiFileStreamNew((pANTLR3_UINT8)argv[1]);
  lex    = ALexerNew(input);

}

Am I using the import wrong?

thanks,
Robert

From swedish_man_2007-antlr at yahoo.se  Tue Mar  3 15:03:30 2009
From: swedish_man_2007-antlr at yahoo.se (swedish_man_2007-antlr at yahoo.se)
Date: Tue, 3 Mar 2009 23:03:30 +0000 (GMT)
Subject: [antlr-interest] Can ANTLR be used for renaming a method or
	class/interface and all its invocations/references ?
In-Reply-To: <3b7c64070903021510x58842abekdd3f5ff034512049@mail.gmail.com>
Message-ID: <784042.62489.qm@web23004.mail.ird.yahoo.com>

Thank you Laurent for the answer,
but I was more interested in a more general (GUI independent) library 
(which, for example, might be reused for creating refactoring plugins for different IDE/editors)
but then ANTLR is not what I am loking for, or is it ?

Another way to phrase my question::
If my goal is to be able to parse/modify source code, with easy-to-use-methods (for renaming operations) as I described in my original question, then there is no point of learning ANTLR since that is not going to help me ?

/ Tom

--- Den tis 2009-03-03 skrev Laurent Caillette <laurent.caillette at gmail.com>:
Fr?n: Laurent Caillette <laurent.caillette at gmail.com>
?mne: Re: [antlr-interest] Can ANTLR be used for renaming a method or  class/interface and all its invocations/references ?
Till: swedish_man_2007-antlr at yahoo.se
Kopia: antlr-interest at antlr.org
Datum: tisdag 3 mars 2009 00.10

Sun's Jackpot offers an API for doing that. But it seems designed to
run as a NetBeans plugin. If you need to apply your changes as a kind
of batch in a headless environnment, fooling NetBeans could become a
hard job. If you need a fine customization of the renaming, Jackpot
looks ok for you.

http://jackpot.netbeans.org/docs/index.html


On Mon, Mar 2, 2009 at 11:23 PM,  <swedish_man_2007-antlr at yahoo.se>
wrote:
> I am searching for a library that you can use for programatically renaming
> classes/interfaces or renaming methods, including automatic renaming all
> references to the methods/types in the source code files/directories that
> you specify.
>
> In other words, I am looking for a library that can do the same kind of
> rename-refactoring that you can do in some IDE environments (e.g.
Eclipse).
>
> Is ANTLR the tool I am looking for (?) or does somebody here know of
another
> library that could help you to implement a method like this:
> public void renameMethod(
> ?? string nameOfClassOrInterfaceWithTheMethodToBeRenamed,
> ?? string currentNameOfTheMethodToBeRenamed,
> ?? string newMethodName,
> ?? string[] sourceCodeDirectoriesWhereAllMethodUsagesShouldBeRenamed
> )
>
> If the answer is yes, then is it simple and is there any code example
> illustrating how to do it ?
>
> / Tom




      __________________________________________________________
L?na pengar utan s?kerhet. J?mf?r vilkor online hos Kelkoo.
http://www.kelkoo.se/c-100390123-lan-utan-sakerhet.html?partnerId=96915014
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090303/a92f0ad6/attachment.html 

From lgcraymer at yahoo.com  Tue Mar  3 16:01:40 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 3 Mar 2009 16:01:40 -0800 (PST)
Subject: [antlr-interest] Can ANTLR be used for renaming a method or
	class/interface and all its invocations/references ?
In-Reply-To: <784042.62489.qm@web23004.mail.ird.yahoo.com>
References: <784042.62489.qm@web23004.mail.ird.yahoo.com>
Message-ID: <929026.14228.qm@web55903.mail.re3.yahoo.com>

It is?relatively easy to build such a facility for any language for which you have an ANTLR grammar suite (lexer, parser, tree walker), but why reinvent the wheel?? This sort of refactoring is not something that you would normally do in batch mode and is needed sufficiently rarely that any penalties for doing the renamings interactively from an IDE are swamped by the effort needed to implement the library.

--Loring




________________________________
From: "swedish_man_2007-antlr at yahoo.se" <swedish_man_2007-antlr at yahoo.se>
To: antlr-interest at antlr.org
Sent: Tuesday, March 3, 2009 3:03:30 PM
Subject: Re: [antlr-interest] Can ANTLR be used for renaming a method or class/interface and all its invocations/references ?


Thank you Laurent for the answer,
but I was more interested in a more general (GUI independent) library 
(which, for example, might be reused for creating refactoring plugins for different IDE/editors)
but then ANTLR is not what I am loking for, or is it ?

Another way to phrase my question::
If my goal is to be able to parse/modify source code, with easy-to-use-methods (for renaming operations) as I described in my original question, then there is no point of learning ANTLR since that is not going to help me ?

/ Tom

--- Den tis 2009-03-03 skrev Laurent Caillette <laurent.caillette at gmail.com>:

Fr?n: Laurent Caillette <laurent.caillette at gmail.com>
?mne: Re: [antlr-interest] Can ANTLR be used for renaming a method or class/interface and all its invocations/references ?
Till: swedish_man_2007-antlr at yahoo.se
Kopia: antlr-interest at antlr.org
Datum: tisdag 3 mars 2009 00.10


Sun's Jackpot offers an API for doing that. But it seems designed to
run as a NetBeans plugin. If you need to apply your changes as a kind
of batch in a headless environnment, fooling NetBeans could become a
hard job. If you need a fine customization of the renaming, Jackpot
looks ok for you.

http://jackpot.netbeans.org/docs/index.html


On Mon, Mar 2, 2009 at 11:23 PM,  <swedish_man_2007-antlr at yahoo.se>
wrote:
> I am searching for a library that you can use for programatically renaming
> classes/interfaces or renaming methods, including automatic renaming all
> references to the methods/types in the source code files/directories that
> you specify.
>
> In other words, I am looking for a
 library that can do the same kind of
> rename-refactoring that you can do in some IDE environments (e.g.
Eclipse).
>
> Is ANTLR the tool I am looking for (?) or does somebody here know of
another
> library that could help you to implement a method like this:
> public void renameMethod(
> ?? string nameOfClassOrInterfaceWithTheMethodToBeRenamed,
> ?? string currentNameOfTheMethodToBeRenamed,
> ?? string newMethodName,
> ?? string[] sourceCodeDirectoriesWhereAllMethodUsagesShouldBeRenamed
> )
>
> If the answer is yes, then is it simple and is there any code example
> illustrating how to do it ?
>
> / Tom

 
________________________________

Ta semester! - s?k efter resor hos Kelkoo. 
J?mf?r pris p? flygbiljetter och hotellrum: http://www.kelkoo.se/c-169901-resor-biljetter.html 


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090303/a88d9c69/attachment.html 

From asoka250 at gmail.com  Wed Mar  4 00:13:53 2009
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Wed, 04 Mar 2009 02:13:53 -0600
Subject: [antlr-interest] Representing EBNF grammar in a formal logic
	notation - regd.
Message-ID: <49AE3841.8060407@gmail.com>

Hi List,
I am having an antlr tree grammar which is a set of rules and java 
actions that go along with it. I need to represent the whole process of 
matching the symbols and the actions that take place after the match in 
a formal logic notation. Description for logic notation can be found 
here :-  
http://www.maartensz.org/philosophy/Dictionary/L/Logic%20Notation.htm. 
Can anyone give me hints on how to start this. Representing grammar in 
EBNF is easier but expressing it in terms of logic notation makes it 
difficult. Thank you.

-- 
Regards,
Ashok R Varikuti
CIS Dept, Kansas State University
785-304-2401.
(http://www.linkedin.com/in/ashokvarikuti)


From ugo.landini at gmail.com  Wed Mar  4 00:59:50 2009
From: ugo.landini at gmail.com (ugol)
Date: Wed, 4 Mar 2009 09:59:50 +0100
Subject: [antlr-interest] What's the best way to manage token i18n?
Message-ID: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>

Hi all,
suppose I need to parse a language that must be easily i18ned: a
simple interpreter in which "print" can be translated in your local
language, f.e. "repeat" is "ripeti" in italian.
So I'll have one localization file (the one with the association
repeat=ripeti) and the real localized source file (the script with the
translated keywords)
Is there a known strategy to manage this?
The simplest idea is to have the main grammar in a canonical form
(let's say in english) and another stringtemplate grammar to translate
from local language in the canonical form. This seems to work, but
there are some problems to solve, because you lose the source file -
tokens mapping if the localized tokens aren't of the same length of
the original ones (which is usually the case), and that is important
for errors reporting and syntax highlighting.
Ah, and to make it worse unfortunately I can't use stringtemplate
because the target language is javascript and it isn't been ported yet
:(

tia for any hint

-- 
uL

Pragmatist
http://blog.ugolandini.com
http://www.flickr.com/photos/ugol/

From laurent.caillette at gmail.com  Wed Mar  4 01:54:28 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 4 Mar 2009 10:54:28 +0100
Subject: [antlr-interest] Can ANTLR be used for renaming a method or
	class/interface and all its invocations/references ?
In-Reply-To: <784042.62489.qm@web23004.mail.ird.yahoo.com>
References: <3b7c64070903021510x58842abekdd3f5ff034512049@mail.gmail.com>
	<784042.62489.qm@web23004.mail.ird.yahoo.com>
Message-ID: <3b7c64070903040154y71e8dc99u4b39d210e6f18a10@mail.gmail.com>

For what you describe, you need to build symbol tables with a
dependency graph, and perform various checks to avoid symbol collision
after the renaming. Parsing is the easy part here!
A language expert may craft this in one week, depending on the real
need. But if you're discovering the area, I suggest you to use an
existing tool.

After two minutes of Googling on "java refactoring command-line tool"
I found this one:
http://jrefactory.sourceforge.net/csr-commandline.html

Hope this helps,

c.


On Wed, Mar 4, 2009 at 12:03 AM,  <swedish_man_2007-antlr at yahoo.se> wrote:
> Thank you Laurent for the answer,
> but I was more interested in a more general (GUI independent) library
> (which, for example, might be reused for creating refactoring plugins for
> different IDE/editors)
> but then ANTLR is not what I am loking for, or is it ?
>
> Another way to phrase my question::
> If my goal is to be able to parse/modify source code, with
> easy-to-use-methods (for renaming operations) as I described in my original
> question, then there is no point of learning ANTLR since that is not going
> to help me ?
>
> / Tom
>
> --- Den tis 2009-03-03 skrev Laurent Caillette
> <laurent.caillette at gmail.com>:
>
> Fr?n: Laurent Caillette <laurent.caillette at gmail.com>
> ?mne: Re: [antlr-interest] Can ANTLR be used for renaming a method or
> class/interface and all its invocations/references ?
> Till: swedish_man_2007-antlr at yahoo.se
> Kopia: antlr-interest at antlr.org
> Datum: tisdag 3 mars 2009 00.10
>
> Sun's Jackpot offers an API for doing that. But it seems designed to
> run as a NetBeans plugin. If you need to apply your changes as a kind
> of batch in a headless environnment, fooling NetBeans could become a
> hard job. If you need a fine customization of the renaming, Jackpot
> looks ok for you.
>
> http://jackpot.netbeans.org/docs/index.html
>
>
> On Mon, Mar 2, 2009 at 11:23 PM,  <swedish_man_2007-antlr at yahoo.se>
> wrote:
>> I am searching for a library that you can use for programatically renaming
>> classes/interfaces or renaming methods, including automatic renaming all
>> references to the methods/types in the source code files/directories that
>> you specify.
>>
>> In other words, I am looking for a
>  library that can do the same kind of
>> rename-refactoring that you can do in some IDE environments (e.g.
> Eclipse).
>>
>> Is ANTLR the tool I am looking for (?) or does somebody here know of
> another
>> library that could help you to implement a method like this:
>> public void renameMethod(
>> ?? string nameOfClassOrInterfaceWithTheMethodToBeRenamed,
>> ?? string currentNameOfTheMethodToBeRenamed,
>> ?? string newMethodName,
>> ?? string[] sourceCodeDirectoriesWhereAllMethodUsagesShouldBeRenamed
>> )
>>
>> If the answer is yes, then is it simple and is there any code example
>> illustrating how to do it ?
>>
>> / Tom
>
>
> ________________________________
> Ta semester! - s?k efter resor hos Kelkoo.
> J?mf?r pris p? flygbiljetter och hotellrum:
> http://www.kelkoo.se/c-169901-resor-biljetter.html
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From guillaume.bataille at gmail.com  Wed Mar  4 01:58:20 2009
From: guillaume.bataille at gmail.com (Guillaume Bataille)
Date: Wed, 4 Mar 2009 10:58:20 +0100
Subject: [antlr-interest] Visual Studio 2008 C++ and ANTLR 3
Message-ID: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>

I am wondering if we will have any soon a C++ support from ANTLR 3, I
tried to integer C generated code to some C++ project but it fails to
link.

From thomas.woelfle at interactive-objects.com  Wed Mar  4 02:15:25 2009
From: thomas.woelfle at interactive-objects.com (Thomas Woelfle)
Date: Wed, 04 Mar 2009 11:15:25 +0100
Subject: [antlr-interest] Problem when parsing numerics
In-Reply-To: <49AC099B.80206@temporal-wave.com>
References: <2969488.3161234948794703.JavaMail.root@star>	<499C1E98.4070805@interactive-objects.com>	<499C38AE.2060205@temporal-wave.com>	<499D1E2B.9090907@interactive-objects.com>	<0ML4cO-1LadvS28Bv-000Lzs@mx.kundenserver.de>	<49A4F5C2.9020900@interactive-objects.com>	<0MKqIe-1LcEeI2FmO-000di0@mx.kundenserver.de>	<49AC0503.9010600@interactive-objects.com>
	<49AC099B.80206@temporal-wave.com>
Message-ID: <49AE54BD.2060300@interactive-objects.com>

Hi Jim,

thanks for the reply.

I am still running into the same problem.

The grammer now is:


lexer grammar Simple;

options
{
language = Java;
}

@header
{
  package test;
}

fragment DOT_PROG: ;
fragment DOT_SL: ;
fragment DOT_PRINT: ;
fragment DOT_ADD: ;
fragment DOT_SPP: ;

DOT: '.'
  (
  ('PROG')=>'PROG' {$type=DOT_PROG;}
  |('SL')=>'SL' {$type=DOT_SL;}
  |('PRT')=>'PRT' {$type=DOT_PRINT;}
//  |('ADD')=>'ADD' {$type=DOT_ADD;}
  |('SPP')=>'SPP' {$type=DOT_SPP;}
  )?
  ;

WORD: ('A'..'Z')+;

given the input ".S" the lexing result is a token DOT and then a token 
WORD. But as soon as the comment is removed from the fourth alternative 
using the same input the result is "no viable alternative at character 
'<EOF>'"

I've read a bit through the generated lexer code. The major difference 
between the version that works and the version that fails seems to be 
that in the working version no "dfa.predict" call is used. I have no 
idea why the ANTLR generator in one case generates code that uses the 
DFA and in the other case generates code that doesn't use the DFAs. But 
all in all this complete behaviour seems to me like a serious bug in 
ANTLR. I've tried the same lexer grammar in JavaCC without any problems. 
Is there any way to work around this bug without having to write a lexer 
on my own?

Regards,
Thomas
> Thomas Woelfle wrote:
>> Hi,
>>
>> I've been running in an almost similar problem again.
>>
>> The subject language that has to be parsed defines some keywords which 
>> begin with a '.'. Besides that there are specific names allowed and '.' 
>> is allowed to be a token too.
>>
>> The reduced lexer grammar that produces the problem is:
>>
>> DOT: '.';
>>
>> ARG: ('.ARG')=> '.ARG';
>>
>> ATT: ('.ATT')=> '.ATT';
>>
>> NAME
>>   :
>>   ('A'..'Z')*;
>>
>>
>>   
> This token allows a match of an empty string and is going to cause all 
> sorts of problems. You want:
>
> NAME : ('A'..'Z')+;
>
> Then if you still have problems, either do:
>
> DOT : '.';
> ARG: 'ARG';
> ATT : 'ATT';
>
> ident : ID
>         | DOT (ARG|ATT)
>         ;
>
> Or:
>
> fragment ARG : ;  // Define token number and document
> fragment ATT : ; // Define token number and document
> DOT : '.'
>            (  ('ARG')=>'ARG'  { $type = ARG; }
>              | ('ATT')=>'ATT'    { $type = ATT; }
>            )
>     
>
> Jim
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


-- 
Interactive Objects Software GmbH
Basler Strasse 61
79100 Freiburg, Germany

Phone:  +49 761 400 73 0
mailto:thomas.woelfle at interactive-objects.com


------------------------------------------------------------------------

Interactive Objects' Legacy Modernization Solutions 

Get Your Applications SOA-Ready!

See http://www.interactive-objects.com/ for more information.

------------------------------------------------------------------------


Interactive Objects Software GmbH | Freiburg | Gesch?ftsf?hrer: Alberto Perandones, Andrea Hemprich
| AG Frbg. HRB 5810 | USt-ID: DE 197983057

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: SimpleWorks.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/317ecef8/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: SimpleFails.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/317ecef8/attachment-0001.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Main.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/317ecef8/attachment-0002.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Simple.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/317ecef8/attachment-0003.pl 

From s.barnett-cormack at lancaster.ac.uk  Wed Mar  4 06:14:47 2009
From: s.barnett-cormack at lancaster.ac.uk (s.barnett-cormack at lancaster.ac.uk)
Date: Wed, 4 Mar 2009 14:14:47 -0000 (UTC)
Subject: [antlr-interest] Error I can't get my head around at all...
In-Reply-To: <49AD9C2E.7040001@temporal-wave.com>
References: <49AD1259.2020003@lancaster.ac.uk>
	<49AD616C.7070409@temporal-wave.com> <49AD956D.2030705@lancaster.ac.uk>
	<49AD9C2E.7040001@temporal-wave.com>
Message-ID: <4849.10.37.35.34.1236176087.squirrel@webmail01.lancs.ac.uk>

On Tue, 3 March, 2009 9:07 pm, Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>
>> Jim Idle wrote:
>>
>>> Sam Barnett-Cormack wrote:
>>>
>> <SNIP>
>>
>>> I was trying to look at your grammar for you but the one you have
>>> attached is missing some token defs:
>
> I presume that you saw I sent you the corrected grammar off list right?

I saw it aftewards - my next task when I return to it this evening will be
to make sure I understand it. What do you think about the fact that
newlines are definitely not significant? Does that make the grammar
inherently ambiguous and one has to choose an interpretation to favour?

Sam




From jimi at temporal-wave.com  Wed Mar  4 07:29:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 07:29:21 -0800
Subject: [antlr-interest] What's the best way to manage token i18n?
In-Reply-To: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>
References: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>
Message-ID: <49AE9E51.7030902@temporal-wave.com>

ugol wrote:
> Hi all,
> suppose I need to parse a language that must be easily i18ned: a
> simple interpreter in which "print" can be translated in your local
> language, f.e. "repeat" is "ripeti" in italian.
> So I'll have one localization file (the one with the association
> repeat=ripeti) and the real localized source file (the script with the
> translated keywords)
> Is there a known strategy to manage this?
> The simplest idea is to have the main grammar in a canonical form
> (let's say in english) and another stringtemplate grammar to translate
> from local language in the canonical form. This seems to work, but
> there are some problems to solve, because you lose the source file -
> tokens mapping if the localized tokens aren't of the same length of
> the original ones (which is usually the case), and that is important
> for errors reporting and syntax highlighting.
> Ah, and to make it worse unfortunately I can't use stringtemplate
> because the target language is javascript and it isn't been ported yet
> :(
>
> tia for any hint
>
>   
If it is that simple and needs to be in Javascript on a web page then I 
don't think that you want to use ANTLR for this, but the best way is to 
write your own hand coded lexer that always returns the token type the 
parser expects.

Jim

From jimi at temporal-wave.com  Wed Mar  4 07:32:44 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 07:32:44 -0800
Subject: [antlr-interest] Visual Studio 2008 C++ and ANTLR 3
In-Reply-To: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>
References: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>
Message-ID: <49AE9F1C.8080007@temporal-wave.com>

Guillaume Bataille wrote:
> I am wondering if we will have any soon a C++ support from ANTLR 3,
At some point is best guess right now.
>  I
> tried to integer C generated code to some C++ project but it fails to
> link.
>   
Errrr, well I can't help you with that kind of information - it works 
for everyone else.- did you set the generated code to be C++? What 
version are you using? etc.

Jim

From Dennis.Benzinger at gmx.net  Wed Mar  4 08:09:31 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Wed, 04 Mar 2009 17:09:31 +0100
Subject: [antlr-interest] Error while generating syntax diagram with
	ANTLRWorks
Message-ID: <49AEA7BB.3080209@gmx.net>

Hi!

I have a separat lexer and parser grammar and want to generate syntax
diagrams for both by using ANTLRWorks (the org.antlr.works.Console
class). Creating the lexer diagrams works fine but during the creation
of the parser diagrams ANTLRWorks emits the following error message for
every rule:

error(3):  cannot find tokens file grammar/output/XYZLexer.tokens

I suppose the reason for this error is that ANTLRWorks tries to load the
tokens file which is generated while generating the lexer. But my lexer
and parser is not generated into the grammar directory but into a src
directory, therefore ANTLRWorks cannot find the tokens file.

The lexer diagrams are created nevertheless and they look OK so I'm
wondering why ANTLRWorks needs the tokens file.


Dennis Benzinger

From jimi at temporal-wave.com  Wed Mar  4 08:13:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 08:13:24 -0800
Subject: [antlr-interest] Error I can't get my head around at all...
In-Reply-To: <4849.10.37.35.34.1236176087.squirrel@webmail01.lancs.ac.uk>
References: <49AD1259.2020003@lancaster.ac.uk>
	<49AD616C.7070409@temporal-wave.com>
	<49AD956D.2030705@lancaster.ac.uk>
	<49AD9C2E.7040001@temporal-wave.com>
	<4849.10.37.35.34.1236176087.squirrel@webmail01.lancs.ac.uk>
Message-ID: <49AEA8A4.1080402@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/f07e0a62/attachment.html 

From guillaume.bataille at gmail.com  Wed Mar  4 11:38:02 2009
From: guillaume.bataille at gmail.com (Guillaume Bataille)
Date: Wed, 4 Mar 2009 20:38:02 +0100
Subject: [antlr-interest] Visual Studio 2008 C++ and ANTLR 3
In-Reply-To: <49AE9F1C.8080007@temporal-wave.com>
References: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>
	<49AE9F1C.8080007@temporal-wave.com>
Message-ID: <45e664c00903041138r216ee3bnec9ef22c7bab8d8f@mail.gmail.com>

antlr 2.7.7 is running fine with visual studio 8, but the C code
generated by antlr3 under visual studio 2008, targetting integration
in windows mobile systems fails to link for me as soon as i invoke
parsing functions and constructors. but most probably this is due to
the fact that i didnt regen antlr3 libs for windows embedded systems,
my fault i guess. anyhow i sorted myself today with antlr2, i regened
antlr2 libs and wrote my grammar and had it integered it in my current
project, its done :)
ill try to regen antlr3 C libs later on on visual studio 2008 for
windows embedded.
still that would be a C version, antlr3 documents dont say antlr3.1.2
can generate c++ code but say the work is in progress.
but if you tell me antlr3.1.2 can generate cpp code by setting the
right option ill try it when ill have the time.




On Wed, Mar 4, 2009 at 4:32 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> Guillaume Bataille wrote:
>> I am wondering if we will have any soon a C++ support from ANTLR 3,
> At some point is best guess right now.
>> ?I
>> tried to integer C generated code to some C++ project but it fails to
>> link.
>>
> Errrr, well I can't help you with that kind of information - it works
> for everyone else.- did you set the generated code to be C++? What
> version are you using? etc.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From andreas.meyer at smartshift.de  Wed Mar  4 11:53:07 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Wed, 04 Mar 2009 20:53:07 +0100
Subject: [antlr-interest] lookahead DFA too big?
Message-ID: <49AEDC23.2040609@smartshift.de>

Hi!

Does anybody know what are the factors that influence the size of the 
lookahead DFA? I read the ANTLR book, which is great. However, I found 
no details on how the LL* implementation actually computes these DFA's 
and how to avoid the DFA explosion that I encountered (is there a paper 
describing the ANTLR implementation of LL(*), btw?). I worked hard on my 
abap grammar, but I cannot figure out where this error comes from:

$ java -Xmx1g org.antlr.Tool ABAP4.g
warning(205): ABAP4.g:4468:2: ANTLR could not analyze this decision in 
rule atom; often this is because of recursive rule references visible 
from the left edge of alternatives.  ANTLR will r
e-analyze the decision with a fixed lookahead of k=1.  Consider using 
"options {k=1;}" for that decision and possibly adding a syntactic 
predicate.
error(10):  internal error: 
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1242): could not 
even do k=1 for decision 300; reason: timed out (>1000ms)

This rule does not use recursion/loops/options etc, _but_ it contains a 
reference to a rule with 800 alternative tokens. When used in a simple 
hello-world grammar, things are fine and I can successfully parse a 
subset of ABAP. However, when I keep adding rules to the grammar, that 
_use_ atom, but that do not extend anything reachable from atom, after a 
certain threshold I get this error message. Lots of references to "atom" 
are at the end of rules, with +,*,? modifiers and the follow-sets of 
these rules (the rules that use  atom) often contain many of the 800 
keyword tokens, so there would be an ambiguity. I (hopefully) resolved 
every ambiguity, by using semantic predicates : at least I do not get 
any error message, only the one above .... I have a feeling that the 
error might still have to do with the ambiguities between (loops of) 
identifiers and the keywords following the enclosing rules. My question 
would be: why does ANTLR complain about a timeout in rule "atom"? Only a 
decision among the identifiier / 800 keywords is done there, not the 
ambiguity resolution. My intuition tells me that this should be done at 
the "calling place", not inside "atom".

Note that the error goes away with -Xconversiontimeout 20000 (on a 
recent 2.x GHz Core2Duo), but the generated Java code is rather large, 
exceeding the JVM's 64k limit in many different ways. However, I dont 
quite see why the DFAs should be so big? I hope there is someone on the 
list who has seen a similar problem. Unfortunately, I cannot post a nice 
and small grammar here: my smallest error-producing grammar is about 
5000 lines long.

Thanks a lot for any help!
Andreas Meyer
(smartshift.de)

From robert.soule at gmail.com  Wed Mar  4 11:53:26 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Wed, 4 Mar 2009 14:53:26 -0500
Subject: [antlr-interest] Visual Studio 2008 C++ and ANTLR 3
In-Reply-To: <45e664c00903041138r216ee3bnec9ef22c7bab8d8f@mail.gmail.com>
References: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>
	<49AE9F1C.8080007@temporal-wave.com>
	<45e664c00903041138r216ee3bnec9ef22c7bab8d8f@mail.gmail.com>
Message-ID: <d1316fd70903041153n6be05c0cl62de89d108f6e06b@mail.gmail.com>

Antlr 3.1.2 won't generate c++, but I have had no problems linking with
c++ code. If you want your antlr grammar to output c++, such as in:

myrule : a { cout << "a"; } b ;

Then you will need to throw in some hacks to get the #includes right. I used:

@header{
#ifndef _MyLangauge_H
  #include <iostream>
  #include <string>
  using namespace std;
#endif
}

where "_MyLangauge_H" is the include guard generated by the antlr tool.

-Robert


On Wed, Mar 4, 2009 at 2:38 PM, Guillaume Bataille
<guillaume.bataille at gmail.com> wrote:
> antlr 2.7.7 is running fine with visual studio 8, but the C code
> generated by antlr3 under visual studio 2008, targetting integration
> in windows mobile systems fails to link for me as soon as i invoke
> parsing functions and constructors. but most probably this is due to
> the fact that i didnt regen antlr3 libs for windows embedded systems,
> my fault i guess. anyhow i sorted myself today with antlr2, i regened
> antlr2 libs and wrote my grammar and had it integered it in my current
> project, its done :)
> ill try to regen antlr3 C libs later on on visual studio 2008 for
> windows embedded.
> still that would be a C version, antlr3 documents dont say antlr3.1.2
> can generate c++ code but say the work is in progress.
> but if you tell me antlr3.1.2 can generate cpp code by setting the
> right option ill try it when ill have the time.
>
>
>
>
> On Wed, Mar 4, 2009 at 4:32 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> Guillaume Bataille wrote:
>>> I am wondering if we will have any soon a C++ support from ANTLR 3,
>> At some point is best guess right now.
>>> ?I
>>> tried to integer C generated code to some C++ project but it fails to
>>> link.
>>>
>> Errrr, well I can't help you with that kind of information - it works
>> for everyone else.- did you set the generated code to be C++? What
>> version are you using? etc.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Mar  4 12:19:11 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 12:19:11 -0800
Subject: [antlr-interest] Visual Studio 2008 C++ and ANTLR 3
In-Reply-To: <45e664c00903041138r216ee3bnec9ef22c7bab8d8f@mail.gmail.com>
References: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>	
	<49AE9F1C.8080007@temporal-wave.com>
	<45e664c00903041138r216ee3bnec9ef22c7bab8d8f@mail.gmail.com>
Message-ID: <49AEE23F.3050804@temporal-wave.com>

Guillaume Bataille wrote:
> antlr 2.7.7 is running fine with visual studio 8, but the C code
> generated by antlr3 under visual studio 2008, targetting integration
> in windows mobile systems fails to link for me as soon as i invoke
> parsing functions and constructors. but most probably this is due to
> the fact that i didnt regen antlr3 libs for windows embedded systems,
> my fault i guess. anyhow i sorted myself today with antlr2, i regened
> antlr2 libs and wrote my grammar and had it integered it in my current
> project, its done :)
> ill try to regen antlr3 C libs later on on visual studio 2008 for
> windows embedded.
> still that would be a C version, antlr3 documents dont say antlr3.1.2
> can generate c++ code but say the work is in progress.
> but if you tell me antlr3.1.2 can generate cpp code by setting the
> right option ill try it when ill have the time.
>
>   
Read the C API docs. The Generated C code can be compiled as C++

Jim

From jimi at temporal-wave.com  Wed Mar  4 12:24:11 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 12:24:11 -0800
Subject: [antlr-interest] Visual Studio 2008 C++ and ANTLR 3
In-Reply-To: <d1316fd70903041153n6be05c0cl62de89d108f6e06b@mail.gmail.com>
References: <45e664c00903040158q6bf15b87gcaf99640f5b0ec14@mail.gmail.com>	
	<49AE9F1C.8080007@temporal-wave.com>	
	<45e664c00903041138r216ee3bnec9ef22c7bab8d8f@mail.gmail.com>
	<d1316fd70903041153n6be05c0cl62de89d108f6e06b@mail.gmail.com>
Message-ID: <49AEE36B.6060804@temporal-wave.com>

Robert Soule wrote:
> Antlr 3.1.2 won't generate c++, but I have had no problems linking with
> c++ code. If you want your antlr grammar to output c++, such as in:
>
> myrule : a { cout << "a"; } b ;
>
> Then you will need to throw in some hacks to get the #includes right. I used:
>
> @header{
> #ifndef _MyLangauge_H
>   #include <iostream>
>   #include <string>
>   using namespace std;
> #endif
> }
>
> where "_MyLangauge_H" is the include guard generated by the antlr tool.
>
> -Robert
>   
Please read the API docs:

http://antlr.org/api/C/index.html

Look for the section about Using @sections. @header is not the palce to 
put these, you probably want one of @include @preincludes or 
@postinclude (probably the latter).

Jim

From paul.bouche at apertio.com  Wed Mar  4 12:30:34 2009
From: paul.bouche at apertio.com (=?ISO-8859-1?Q?Paul_Bouch=E9?=)
Date: Wed, 04 Mar 2009 21:30:34 +0100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49AEDC23.2040609@smartshift.de>
References: <49AEDC23.2040609@smartshift.de>
Message-ID: <49AEE4EA.4060705@apertio.com>

Hi,

hi I also had this problem when trying to introduce a backward 
compatible change into our Lexer. The problem with code too large... It 
aggravated the heck out of me. Whenever I found a solution that did not 
break the Java code size limit I got something which had here and there 
less functionality than needed. I ended up giving up on the project and 
arguing that it is not possible because it would break current syntax 
(to my luck this is actually true).

Anyway I never got around this problem and I still find it very 
aggravating. I am not too exicited about the look-ahead mechanism 
because if you have to look-ahead several charactes then make decision 
you have to go back in the stream and then rematch those characters... 
Also I tried to port a hand-written parser/lexer to ANTLR which used a 
state table and some context sensitive decisions and was not able too 
port this. First I ran into the code too large exceptions and then into 
unresolvable amigiousties. Also semantic predicates do not help too much 
because ANTLR still uses look-ahead in the presence of semantic 
predicates - I would like to switch it off - how?? - if I use semantic 
predicates I know what I am doing and I don't need ANTLR's automatic 
analysis.

Sorry for the rant. This is certainly not motivating for the developers 
of which I am one as well for a different project. So let me say ANTLR 
is a great tool, I really like ANTLRWorks debugging functionalities, and 
ANTLR allows to produce parsers who meaning is explicitly expressed via 
the grammar rather than implicitly hidden in hand-written code. Also the 
automatic (context-sensitive) FOLLOW-set generation is very helpful!

As for you, maybe you can try to make your grammar ambigious and turn on 
backtracking and memorization (for backtracking optimization). Of course 
a backtracking grammar is slower than an LL(k)/* grammar, but if you get 
what you want....

BR,
Paul


Andreas Meyer schrieb:
> Hi!
>
> Does anybody know what are the factors that influence the size of the 
> lookahead DFA? I read the ANTLR book, which is great. However, I found 
> no details on how the LL* implementation actually computes these DFA's 
> and how to avoid the DFA explosion that I encountered (is there a paper 
> describing the ANTLR implementation of LL(*), btw?). I worked hard on my 
> abap grammar, but I cannot figure out where this error comes from:
>
> $ java -Xmx1g org.antlr.Tool ABAP4.g
> warning(205): ABAP4.g:4468:2: ANTLR could not analyze this decision in 
> rule atom; often this is because of recursive rule references visible 
> from the left edge of alternatives.  ANTLR will r
> e-analyze the decision with a fixed lookahead of k=1.  Consider using 
> "options {k=1;}" for that decision and possibly adding a syntactic 
> predicate.
> error(10):  internal error: 
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1242): could not 
> even do k=1 for decision 300; reason: timed out (>1000ms)
>
> This rule does not use recursion/loops/options etc, _but_ it contains a 
> reference to a rule with 800 alternative tokens. When used in a simple 
> hello-world grammar, things are fine and I can successfully parse a 
> subset of ABAP. However, when I keep adding rules to the grammar, that 
> _use_ atom, but that do not extend anything reachable from atom, after a 
> certain threshold I get this error message. Lots of references to "atom" 
> are at the end of rules, with +,*,? modifiers and the follow-sets of 
> these rules (the rules that use  atom) often contain many of the 800 
> keyword tokens, so there would be an ambiguity. I (hopefully) resolved 
> every ambiguity, by using semantic predicates : at least I do not get 
> any error message, only the one above .... I have a feeling that the 
> error might still have to do with the ambiguities between (loops of) 
> identifiers and the keywords following the enclosing rules. My question 
> would be: why does ANTLR complain about a timeout in rule "atom"? Only a 
> decision among the identifiier / 800 keywords is done there, not the 
> ambiguity resolution. My intuition tells me that this should be done at 
> the "calling place", not inside "atom".
>
> Note that the error goes away with -Xconversiontimeout 20000 (on a 
> recent 2.x GHz Core2Duo), but the generated Java code is rather large, 
> exceeding the JVM's 64k limit in many different ways. However, I dont 
> quite see why the DFAs should be so big? I hope there is someone on the 
> list who has seen a similar problem. Unfortunately, I cannot post a nice 
> and small grammar here: my smallest error-producing grammar is about 
> 5000 lines long.
>
> Thanks a lot for any help!
> Andreas Meyer
> (smartshift.de)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From lgcraymer at yahoo.com  Wed Mar  4 13:40:42 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 4 Mar 2009 13:40:42 -0800 (PST)
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49AEDC23.2040609@smartshift.de>
References: <49AEDC23.2040609@smartshift.de>
Message-ID: <89591.4263.qm@web55903.mail.re3.yahoo.com>


800 token types is a staggeringly large number and indicates that you took the wrong path in dealing with the keyword versus identifier problem.? In the cases where I have had this many "keywords", they can usually be decomposed into subcategories and that information kept in a symbol table for use with sempreds.? With this many token types, you want to differentiate locally (use sempreds to recognize keywords where they should appear), not globally (all keywords?should be?recognized as "IDENTIFIER" in the lexer).

--Loring



----- Original Message ----
> From: Andreas Meyer <andreas.meyer at smartshift.de>
> To: antlr-interest at antlr.org
> Sent: Wednesday, March 4, 2009 11:53:07 AM
> Subject: [antlr-interest] lookahead DFA too big?
> 
> Hi!
> 
> Does anybody know what are the factors that influence the size of the 
> lookahead DFA? I read the ANTLR book, which is great. However, I found 
> no details on how the LL* implementation actually computes these DFA's 
> and how to avoid the DFA explosion that I encountered (is there a paper 
> describing the ANTLR implementation of LL(*), btw?). I worked hard on my 
> abap grammar, but I cannot figure out where this error comes from:
> 
> $ java -Xmx1g org.antlr.Tool ABAP4.g
> warning(205): ABAP4.g:4468:2: ANTLR could not analyze this decision in 
> rule atom; often this is because of recursive rule references visible 
> from the left edge of alternatives.? ANTLR will r
> e-analyze the decision with a fixed lookahead of k=1.? Consider using 
> "options {k=1;}" for that decision and possibly adding a syntactic 
> predicate.
> error(10):? internal error: 
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1242): could not 
> even do k=1 for decision 300; reason: timed out (>1000ms)
> 
> This rule does not use recursion/loops/options etc, _but_ it contains a 
> reference to a rule with 800 alternative tokens. When used in a simple 
> hello-world grammar, things are fine and I can successfully parse a 
> subset of ABAP. However, when I keep adding rules to the grammar, that 
> _use_ atom, but that do not extend anything reachable from atom, after a 
> certain threshold I get this error message. Lots of references to "atom" 
> are at the end of rules, with +,*,? modifiers and the follow-sets of 
> these rules (the rules that use? atom) often contain many of the 800 
> keyword tokens, so there would be an ambiguity. I (hopefully) resolved 
> every ambiguity, by using semantic predicates : at least I do not get 
> any error message, only the one above .... I have a feeling that the 
> error might still have to do with the ambiguities between (loops of) 
> identifiers and the keywords following the enclosing rules. My question 
> would be: why does ANTLR complain about a timeout in rule "atom"? Only a 
> decision among the identifiier / 800 keywords is done there, not the 
> ambiguity resolution. My intuition tells me that this should be done at 
> the "calling place", not inside "atom".
> 
> Note that the error goes away with -Xconversiontimeout 20000 (on a 
> recent 2.x GHz Core2Duo), but the generated Java code is rather large, 
> exceeding the JVM's 64k limit in many different ways. However, I dont 
> quite see why the DFAs should be so big? I hope there is someone on the 
> list who has seen a similar problem. Unfortunately, I cannot post a nice 
> and small grammar here: my smallest error-producing grammar is about 
> 5000 lines long.
> 
> Thanks a lot for any help!
> Andreas Meyer
> (smartshift.de)
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From ugo.landini at gmail.com  Wed Mar  4 14:10:03 2009
From: ugo.landini at gmail.com (ugol)
Date: Wed, 4 Mar 2009 23:10:03 +0100
Subject: [antlr-interest] What's the best way to manage token i18n?
In-Reply-To: <49AE9E51.7030902@temporal-wave.com>
References: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>
	<49AE9E51.7030902@temporal-wave.com>
Message-ID: <b70c55390903041410x3943d226v31011bb90655e395@mail.gmail.com>

> If it is that simple and needs to be in Javascript on a web page then I
> don't think that you want to use ANTLR for this, but the best way is to
> write your own hand coded lexer that always returns the token type the
> parser expects.

it's a logo interpreter, so it's simple but not simpler. It's in
javascript but I want to reuse the grammar with different targets, so
antlr is still an ideal solution.

-- 
uL

Pragmatist
http://blog.ugolandini.com
http://www.flickr.com/photos/ugol/

From jimi at temporal-wave.com  Wed Mar  4 14:16:36 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 14:16:36 -0800
Subject: [antlr-interest] What's the best way to manage token i18n?
In-Reply-To: <b70c55390903041410x3943d226v31011bb90655e395@mail.gmail.com>
References: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>	
	<49AE9E51.7030902@temporal-wave.com>
	<b70c55390903041410x3943d226v31011bb90655e395@mail.gmail.com>
Message-ID: <49AEFDC4.5080907@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/9fbfab1a/attachment.html 

From ugo.landini at gmail.com  Wed Mar  4 14:23:06 2009
From: ugo.landini at gmail.com (ugol)
Date: Wed, 4 Mar 2009 23:23:06 +0100
Subject: [antlr-interest] What's the best way to manage token i18n?
In-Reply-To: <49AEFDC4.5080907@temporal-wave.com>
References: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>
	<49AE9E51.7030902@temporal-wave.com>
	<b70c55390903041410x3943d226v31011bb90655e395@mail.gmail.com>
	<49AEFDC4.5080907@temporal-wave.com>
Message-ID: <b70c55390903041423h6041dcd3l37a2341bdbd85f5f@mail.gmail.com>

> Sounds reasonable, but I don't know about the status of Javascript. However,
> writing a custom lexer still seems like the best bet for you.

Just to be clear, if the target would be java (or another target in
sync - like yours) what would be the advice? Still to write the custom
lexer or to go with a stringtemplate + canonic form?

ciao and thx
-- 
uL

Pragmatist
http://blog.ugolandini.com
http://www.flickr.com/photos/ugol/

From jimi at temporal-wave.com  Wed Mar  4 15:35:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 04 Mar 2009 15:35:51 -0800
Subject: [antlr-interest] What's the best way to manage token i18n?
In-Reply-To: <b70c55390903041423h6041dcd3l37a2341bdbd85f5f@mail.gmail.com>
References: <b70c55390903040059g1afcfda3pfe8119b26fd17d6e@mail.gmail.com>	
	<49AE9E51.7030902@temporal-wave.com>	
	<b70c55390903041410x3943d226v31011bb90655e395@mail.gmail.com>	
	<49AEFDC4.5080907@temporal-wave.com>
	<b70c55390903041423h6041dcd3l37a2341bdbd85f5f@mail.gmail.com>
Message-ID: <49AF1057.3000302@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/9c7e1c66/attachment.html 

From espina.edgar at gmail.com  Wed Mar  4 16:17:11 2009
From: espina.edgar at gmail.com (Edgar Espina)
Date: Wed, 4 Mar 2009 21:17:11 -0300
Subject: [antlr-interest] ANTLR IDE 1.3.0 released
Message-ID: <92b42db60903041617q1f6a5ef0k25f705442e8a2953@mail.gmail.com>

Hi,

 ANTLR IDE 1.3.0 is now available at http://antlrv3ide.sourceforge.net/.

 New Features:
- Support ANTLR 3.1.2
- ANTLR IDE user guide
- gUnit Editor

Bugs Fixed:
- Eclipse freezes up if you load an ActionScript/JavaScript based ANTLR
- Null Pointer Exception when creating new run configuration
- ClassCastException or CoModificationException in AntlrGramma
- Null-Pointer Exception when Parsing Grammar
- Support ANTLR 3.1.2

Regards!
-- 
edgar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/1e88a347/attachment.html 

From indhu.b at s7software.com  Wed Mar  4 18:44:24 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 5 Mar 2009 08:14:24 +0530
Subject: [antlr-interest] Seperating grammar and actions
Message-ID: <000b01c99d3c$4c184f70$e448ee50$@b@s7software.com>

Hi,

 

Is there a way to separate grammar and actions into two different files?
This will be helpful when multiple people are working with the same grammar
file (each might write their own actions for the same production) and don't
want to create redundant copies of the grammar file.

 

One way I thought was to implement observer pattern. The parser will be the
subject and multiple observers can register to the same production and do
different things. Another way would be to write a tool to separate the
actions from the grammar file and reattach it. This way, actions can be
separated out and maintained in a separate file and can be reattached when
necessary and changes to grammar can be done in one centralized file.

 

Is there any other way to do this? Any hint might be useful.

 

Thanks, Indhu

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090305/37eedcd1/attachment.html 

From sharwell at pixelminegames.com  Wed Mar  4 19:04:25 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 4 Mar 2009 21:04:25 -0600
Subject: [antlr-interest] Seperating grammar and actions
In-Reply-To: <000b01c99d3c$4c184f70$e448ee50$@b@s7software.com>
References: <000b01c99d3c$4c184f70$e448ee50$@b@s7software.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67ABA@Bloodymary.ironwillgames.com>

You have a few options:

 

1.       Only build an AST in the parser, then use a tree walker to
perform your needed operations. This is the "v3" way to do it,
especially with the new filter-mode tree parsers on the way.

2.       Call virtual functions from your actions, and implement those
functions as empty stubs. Derive a class from the parser and implement
the functions as necessary. This seems to be a "v2" way to do it, as
it's used in one of the v2 grammars in the ANTLR Tool.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi
Sent: Wednesday, March 04, 2009 8:44 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Seperating grammar and actions

 

Hi,

 

Is there a way to separate grammar and actions into two different files?
This will be helpful when multiple people are working with the same
grammar file (each might write their own actions for the same
production) and don't want to create redundant copies of the grammar
file.

 

One way I thought was to implement observer pattern. The parser will be
the subject and multiple observers can register to the same production
and do different things. Another way would be to write a tool to
separate the actions from the grammar file and reattach it. This way,
actions can be separated out and maintained in a separate file and can
be reattached when necessary and changes to grammar can be done in one
centralized file.

 

Is there any other way to do this? Any hint might be useful.

 

Thanks, Indhu

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090304/ff93f091/attachment.html 

From des at deshartman.com  Wed Mar  4 19:38:34 2009
From: des at deshartman.com (Des Hartman)
Date: Thu, 5 Mar 2009 14:38:34 +1100
Subject: [antlr-interest] @header bug
Message-ID: <8773d42e0903041938i6fa1725cl2f4cacd269a4e0ce@mail.gmail.com>

Hi, I think there is a bug with the compiler for @header when using
Actionscript. I created this simple grammar file and the result with the
packages is not right if I use @header, but works fine if I use @package

This is the grammar file that works:

================
grammar TestIt;

options {
    language = ActionScript;
    output = AST;
}

@package { com.there.grammar }

emptyRule:  ;
================

package com.there.grammar  {
    import org.antlr.runtime.*;

=================

This is the one that does not work is when I use @header



=====================
grammar TestIt;

options {
    language = ActionScript;
    output = AST;
}

@header { com.there.grammar }

emptyRule:  ;

=====================

The problem is the package header is incorrect. It swaps the "[" and the
package path.

package {
     com.there.grammar
    import org.antlr.runtime.*;

Is this a bug?

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090305/5e476415/attachment.html 

From paul.bouche at nsn.com  Thu Mar  5 02:43:46 2009
From: paul.bouche at nsn.com (=?ISO-8859-1?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Thu, 05 Mar 2009 11:43:46 +0100
Subject: [antlr-interest] Seperating grammar and actions
In-Reply-To: <000b01c99d3c$4c184f70$e448ee50$@b@s7software.com>
References: <000b01c99d3c$4c184f70$e448ee50$@b@s7software.com>
Message-ID: <49AFACE2.1080408@nsn.com>

Hi Induh,

usually what people do is write an Abstract Syntax Tree (AST) grammar 
which constructs an AST and then you can use different AST parsers which 
have the different actions.

Or you could use try this 
http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars

BR,
Paul

Indhu Bharathi schrieb:
>
> Hi,
>
>  
>
> Is there a way to separate grammar and actions into two different 
> files? This will be helpful when multiple people are working with the 
> same grammar file (each might write their own actions for the same 
> production) and don't want to create redundant copies of the grammar file.
>
>  
>
> One way I thought was to implement observer pattern. The parser will 
> be the subject and multiple observers can register to the same 
> production and do different things. Another way would be to write a 
> tool to separate the actions from the grammar file and reattach it. 
> This way, actions can be separated out and maintained in a separate 
> file and can be reattached when necessary and changes to grammar can 
> be done in one centralized file.
>
>  
>
> Is there any other way to do this? Any hint might be useful.
>
>  
>
> Thanks, Indhu
>
>  
>
>  
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090305/8174a9bb/attachment.html 

From andreas.meyer at smartshift.de  Thu Mar  5 02:50:38 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 05 Mar 2009 11:50:38 +0100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <89591.4263.qm@web55903.mail.re3.yahoo.com>
References: <49AEDC23.2040609@smartshift.de>
	<89591.4263.qm@web55903.mail.re3.yahoo.com>
Message-ID: <49AFAE7E.6090101@smartshift.de>

Maybe it's possible to partition the set of keywords, but that would be 
some effort: figuring out for 800 keywords, where they appear, what is 
the context they are used in etc. Note that the problem only appeared 
after switching to ANTLR 3.1, ANTLR 2.7 was fine with it and the 
generated parser works well.

Like advertised in the ANTLR book, I also used semantic predicates to 
locally check if an identifier is actually the keyword I want. This did 
not work out: the language is very verbose and most sentences look like 
native english, so the parser then sees : ID ID ID ID and it has to 
check 800 semantic predicates in order to find out which keyword comes 
next. Having only one token (ID) might have been to extreme, and having 
different groups seems indeed interesting, although probably tedious.

On some power-point presentation from Terence Parr, I have seen a slide 
mentioning huge generated DFAs. Is there some additional material 
available that documents some of the possible situations that make the 
DFAs explode?

Andreas

Loring Craymer schrieb:
> 800 token types is a staggeringly large number and indicates that you took the wrong path in dealing with the keyword versus identifier problem.  In the cases where I have had this many "keywords", they can usually be decomposed into subcategories and that information kept in a symbol table for use with sempreds.  With this many token types, you want to differentiate locally (use sempreds to recognize keywords where they should appear), not globally (all keywords should be recognized as "IDENTIFIER" in the lexer).
>
> --Loring
>
>
>   


From wiggjd at bcs.org.uk  Thu Mar  5 03:04:36 2009
From: wiggjd at bcs.org.uk (David Wigg)
Date: Thu, 5 Mar 2009 11:04:36 +0000
Subject: [antlr-interest] Java Parser to analyze C++ language syntax
Message-ID: <c34954d70903050304n61b7bc4y602d93f5b170139@mail.gmail.com>

I've retired from maintaining this C/C++ parser but I've been following
recent discussions with some puzzlement as at the moment I can't see what
the aim is. I regret I have lost track of who raised this question, perhaps
he/she could let us know what text is to be parsed, the aim and the reason
for it

Before replying I draw your attention to the information below about the
language definition which is in my download. You will see that it makes it
clear that the grammar alone is not sufficient. The words in para 1 under
the two lines are from Bjarne's book.

Thanks,

David.

 C++ Language Definition

Notes:
DW 23/04/03
This data was originally obtained from,
http://www.csci.csusb.edu/dick/C++std/cd2/gram.html
I have converted the original hyphens separating words in names to
underscores and the opt(ional) indicator at the end of names to -opt to aid
searching.
As this file is stored in text mode the textual distinction between reserved
keywords
and other words has been lost. The keywords should be listed in any book
about C++.
DW 27/09/04
This data has been modified to match the grammar listed in Appendix A of
"The C++ Programming Language" Third Edition by Bjarne Stroustrup
ISBN 0201889544
Deleted or amended lines of the original (old) text are shown within []
brackets. Lines copied from the book are shown as "Book line".
One line was added from "C++ In a Nutshell" First edition, ISBN 059600298X
I would be grateful if anyone could let me know if it needs updating
at wiggjd at bcs.org.uk
  ______________________________________________________________________
  Annex 0 (informative)
  Grammar summary                                                 [gram]
  ______________________________________________________________________
1 This summary of C++ syntax is intended to be an aid to  comprehension.
  It  is  not  an  exact  statement of the language.  In particular, the
  grammar described here accepts a superset  of  valid  C++  constructs.
  Disambiguation rules (_stmt.ambig_, _dcl.spec_, _class.member.lookup_)
  must be applied to distinguish expressions  from  declarations.   Fur-
  ther,  access  control, ambiguity, and type rules must be used to weed
  out syntactically valid but meaningless constructs.
  1.1  Keywords                                               [gram.key]
1 New context_dependent keywords are introduced into a program by  type_
  def  (_dcl.typedef_),  namespace  (_namespace.def_),  class (_class_),
  enumeration (_dcl.enum_), and template (_temp_) declarations.
          typedef_name:
                  identifier
          namespace_name:
                  original_namespace_name
                  namespace_alias
          original_namespace_name:
                  identifier
          namespace_alias:
                  identifier
          class_name:
                  identifier
                  template_id
          enum_name:
                  identifier
          template_name:
                  identifier
  Note that a typedef_name naming a class is also a class_name
  (_class.name_).


Message: 9
Date: Tue, 03 Mar 2009 11:18:49 -0500
From: Andy Tripp <antlr at jazillian.com>
Subject: Re: [antlr-interest] Java Parser to analyze C++ language
       syntax
To: Kaleb Pederson <kaleb.pederson at gmail.com>
Cc: antlr-interest at antlr.org
Message-ID: <49AD5869.9030502 at jazillian.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Kaleb Pederson wrote:
> In looking at LLVM a bit more closely, although both the FAQ and the
> features page mention full C++ support,
"full C++ support" - heh, that would be impossible ;)
Seems like pretty much any random sequence of characters would be
valid C++.
> One note on David Wigg's C++ grammar, it seemed well documented
> although, IIRC, it used a slightly patched version of ANTLR or its
> runtime which makes it a bit more difficult to use than would be
> typical.
IIRC, Wigg's C++ grammar chokes if you ever give it enough ugly C++
to chew on. As Terrence quips in his book "Back when C++ was almost
parsable...".
Andy
>
> --Kaleb
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090305/6b82b93c/attachment.html 

From tbrandonau at gmail.com  Thu Mar  5 04:47:14 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 5 Mar 2009 23:47:14 +1100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49AFAE7E.6090101@smartshift.de>
References: <49AEDC23.2040609@smartshift.de>
	<89591.4263.qm@web55903.mail.re3.yahoo.com>
	<49AFAE7E.6090101@smartshift.de>
Message-ID: <ebc876d70903050447l4ee0b6ffp498d686f4f615955@mail.gmail.com>

On Thu, Mar 5, 2009 at 9:50 PM, Andreas Meyer
<andreas.meyer at smartshift.de> wrote:
> Maybe it's possible to partition the set of keywords, but that would be
> some effort: figuring out for 800 keywords, where they appear, what is
> the context they are used in etc. Note that the problem only appeared
> after switching to ANTLR 3.1, ANTLR 2.7 was fine with it and the
> generated parser works well.
Presumably in ANTLR 2.7 you used the literals table, ANTLR 3 handles
the keyword identifier distinction through it's nifty DFAs,
unfortunately with such a large number of keywords the DFA needed gets
pretty complicated, especially if you have a number of other rules
which allow subsets of your keyword vocabulary.
You can duplicate the 2.7 behaviour by having an action in your
identifier rule test a hashtable. Something like:
tokens {
  KEYWORDA;
  KEYWORDB;
}

@lexer::members {
  private Hashtable<String,Integer> literalsTable = new Hashtable() {{
    put("keyworda", KEYWORDA);
    put("keywordb", KEYWORDB);
  }};

  private int checkLiterals(String text) {
    Integer type = literalsTable.get(text);
    if(type != null)
      return type;
    else
      return ID;
  }
}
ID: 'a'..'z' { $type=checkLiterals($text); };

Though there was a bug that caused warning when the tokens section was
used for like that so you may need to instead have fragment rules to
define the token types (the content is irrelevant though I don't think
they can be empty).

>
> Like advertised in the ANTLR book, I also used semantic predicates to
> locally check if an identifier is actually the keyword I want. This did
> not work out: the language is very verbose and most sentences look like
> native english, so the parser then sees : ID ID ID ID and it has to
> check 800 semantic predicates in order to find out which keyword comes
> next. Having only one token (ID) might have been to extreme, and having
> different groups seems indeed interesting, although probably tedious.
>
Ouch, it seems surprising that the language is so complex that it
actually allows a major subset of your 800 keywords at any one point.
Generally context should vastly reduce the number of checks needed.

Tom.
> On some power-point presentation from Terence Parr, I have seen a slide
> mentioning huge generated DFAs. Is there some additional material
> available that documents some of the possible situations that make the
> DFAs explode?
>
> Andreas
>
> Loring Craymer schrieb:
>> 800 token types is a staggeringly large number and indicates that you took the wrong path in dealing with the keyword versus identifier problem. ?In the cases where I have had this many "keywords", they can usually be decomposed into subcategories and that information kept in a symbol table for use with sempreds. ?With this many token types, you want to differentiate locally (use sempreds to recognize keywords where they should appear), not globally (all keywords should be recognized as "IDENTIFIER" in the lexer).
>>
>> --Loring
>>
>>
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From s.barnett-cormack at lancaster.ac.uk  Thu Mar  5 05:18:17 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 05 Mar 2009 13:18:17 +0000
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <ebc876d70903050447l4ee0b6ffp498d686f4f615955@mail.gmail.com>
References: <49AEDC23.2040609@smartshift.de>	<89591.4263.qm@web55903.mail.re3.yahoo.com>	<49AFAE7E.6090101@smartshift.de>
	<ebc876d70903050447l4ee0b6ffp498d686f4f615955@mail.gmail.com>
Message-ID: <49AFD119.20500@lancaster.ac.uk>

Thomas Brandon wrote:
> On Thu, Mar 5, 2009 at 9:50 PM, Andreas Meyer
> <andreas.meyer at smartshift.de> wrote:
>> Maybe it's possible to partition the set of keywords, but that would be
>> some effort: figuring out for 800 keywords, where they appear, what is
>> the context they are used in etc. Note that the problem only appeared
>> after switching to ANTLR 3.1, ANTLR 2.7 was fine with it and the
>> generated parser works well.
> Presumably in ANTLR 2.7 you used the literals table, ANTLR 3 handles
> the keyword identifier distinction through it's nifty DFAs,
> unfortunately with such a large number of keywords the DFA needed gets
> pretty complicated, especially if you have a number of other rules
> which allow subsets of your keyword vocabulary.
> You can duplicate the 2.7 behaviour by having an action in your
> identifier rule test a hashtable. Something like:
> tokens {
>   KEYWORDA;
>   KEYWORDB;
> }
> 
> @lexer::members {
>   private Hashtable<String,Integer> literalsTable = new Hashtable() {{
>     put("keyworda", KEYWORDA);
>     put("keywordb", KEYWORDB);
>   }};
> 
>   private int checkLiterals(String text) {
>     Integer type = literalsTable.get(text);
>     if(type != null)
>       return type;
>     else
>       return ID;
>   }
> }
> ID: 'a'..'z' { $type=checkLiterals($text); };
> 
> Though there was a bug that caused warning when the tokens section was
> used for like that so you may need to instead have fragment rules to
> define the token types (the content is irrelevant though I don't think
> they can be empty).

Fragment rules can indeed be empty; you'll get parser warnings on a 
combined grammar if you do the above (speaking from recent experience, 
although that was with 3.1.1 - I think).

Sam



From s.barnett-cormack at lancaster.ac.uk  Thu Mar  5 06:04:58 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 05 Mar 2009 14:04:58 +0000
Subject: [antlr-interest] ANTLR IDE 1.3.0 released
In-Reply-To: <92b42db60903041617q1f6a5ef0k25f705442e8a2953@mail.gmail.com>
References: <92b42db60903041617q1f6a5ef0k25f705442e8a2953@mail.gmail.com>
Message-ID: <49AFDC0A.4070701@lancaster.ac.uk>

Edgar Espina wrote:
> Hi,
> 
>  ANTLR IDE 1.3.0 is now available at http://antlrv3ide.sourceforge.net/.

Hi - trying to update my ANTLR IDE installation, I get an error. Part of 
it seems to have been updated (JDT integration), and as far as I can 
tell all other components are up to date. Version info:

Eclipse Platform

Version: 3.4.2
Build id: M20090211-1700

Auto-update doesn't offer me the other ANTLR IDE components. If I try to 
install the ANTLR tools component of ANTLR IDE using the management 
system, I get the following error:

Cannot complete the request.  See the details.
Cannot find a solution satisfying the following requirements 
org.eclipse.swt [3.4.0.v3448f].

I've no idea what component org.eclipse.swt would even be in, but the 
update manager can't find any solution, as it says.

Any ideas or advice?

Sam

From andreas.meyer at smartshift.de  Thu Mar  5 06:35:41 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 05 Mar 2009 15:35:41 +0100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <ebc876d70903050447l4ee0b6ffp498d686f4f615955@mail.gmail.com>
References: <49AEDC23.2040609@smartshift.de>	
	<89591.4263.qm@web55903.mail.re3.yahoo.com>	
	<49AFAE7E.6090101@smartshift.de>
	<ebc876d70903050447l4ee0b6ffp498d686f4f615955@mail.gmail.com>
Message-ID: <49AFE33D.3010908@smartshift.de>

Thomas Brandon schrieb:
> On Thu, Mar 5, 2009 at 9:50 PM, Andreas Meyer
> <andreas.meyer at smartshift.de> wrote:
>   
>> Maybe it's possible to partition the set of keywords, but that would be
>> some effort: figuring out for 800 keywords, where they appear, what is
>> the context they are used in etc. Note that the problem only appeared
>> after switching to ANTLR 3.1, ANTLR 2.7 was fine with it and the
>> generated parser works well.
>>     
> Presumably in ANTLR 2.7 you used the literals table, ANTLR 3 handles
> the keyword identifier distinction through it's nifty DFAs,
> unfortunately with such a large number of keywords the DFA needed gets
> pretty complicated, especially if you have a number of other rules
> which allow subsets of your keyword vocabulary.
> You can duplicate the 2.7 behaviour by having an action in your
> identifier rule test a hashtable. Something like:
> tokens {
>   KEYWORDA;
>   KEYWORDB;
> }
>
> @lexer::members {
>   private Hashtable<String,Integer> literalsTable = new Hashtable() {{
>     put("keyworda", KEYWORDA);
>     put("keywordb", KEYWORDB);
>   }};
>
>   private int checkLiterals(String text) {
>     Integer type = literalsTable.get(text);
>     if(type != null)
>       return type;
>     else
>       return ID;
>   }
> }
> ID: 'a'..'z' { $type=checkLiterals($text); };
>
> Though there was a bug that caused warning when the tokens section was
> used for like that so you may need to instead have fragment rules to
> define the token types (the content is irrelevant though I don't think
> they can be empty).
>
>   

Sorry for not making this clear, but this I use already ... I have a big 
map that checks if an ID is actually a keyword. The problem is not with 
the lexer, it is with the lookahead during parsing :-/

Andreas

From indhu.b at s7software.com  Thu Mar  5 07:13:47 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 5 Mar 2009 20:43:47 +0530 (IST)
Subject: [antlr-interest] Seperating grammar and actions
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67ABA@Bloodymary.ironwillgames.com>
Message-ID: <21656105.2011236266027892.JavaMail.root@star>

Hi, 

I have never considered using tree grammar earlier. But now I took a look at it as it sounded like a solution to my problem. But I still have one doubt. 

Suppose I write a grammar that parses the input file and constructs the AST. I have to next write a tree grammar that can operate on the generated AST (I guess this is called the tree walkers). My question is, is it possible to turn on rewrite in tree grammar? or it is necessary to describe the entire tree in the tree-grammar? I did some googling and found this page - http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree+pattern+matching%2C+rewriting+a+reality . This sounds damn sexy! But has this been released? Does the latest release (3.1.2) include this? 

Thanks, Indhu 

----- Original Message ----- 
From: Sam Harwell <sharwell at pixelminegames.com> 
To: Indhu Bharathi <indhu.b at s7software.com>, antlr-interest at antlr.org 
Sent: Thursday, March 5, 2009 8:34:25 AM GMT+0530 Asia/Calcutta 
Subject: RE: [antlr-interest] Seperating grammar and actions 




You have a few options: 



1. Only build an AST in the parser, then use a tree walker to perform your needed operations. This is the ?v3? way to do it, especially with the new filter-mode tree parsers on the way. 

2. Call virtual functions from your actions, and implement those functions as empty stubs. Derive a class from the parser and implement the functions as necessary. This seems to be a ?v2? way to do it, as it?s used in one of the v2 grammars in the ANTLR Tool. 



Sam 





From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi 
Sent: Wednesday, March 04, 2009 8:44 PM 
To: antlr-interest at antlr.org 
Subject: [antlr-interest] Seperating grammar and actions 



Hi, 



Is there a way to separate grammar and actions into two different files? This will be helpful when multiple people are working with the same grammar file (each might write their own actions for the same production) and don?t want to create redundant copies of the grammar file. 



One way I thought was to implement observer pattern. The parser will be the subject and multiple observers can register to the same production and do different things. Another way would be to write a tool to separate the actions from the grammar file and reattach it. This way, actions can be separated out and maintained in a separate file and can be reattached when necessary and changes to grammar can be done in one centralized file. 



Is there any other way to do this? Any hint might be useful. 



Thanks, Indhu 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090305/f7bbc8a3/attachment.html 

From JALuber at gmx.de  Thu Mar  5 07:08:53 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Thu, 05 Mar 2009 16:08:53 +0100
Subject: [antlr-interest] Seperating grammar and actions
In-Reply-To: <21656105.2011236266027892.JavaMail.root@star>
References: <21656105.2011236266027892.JavaMail.root@star>
Message-ID: <20090305150853.322210@gmx.net>

> Hi, 
> 
> I have never considered using tree grammar earlier. But now I took a look
> at it as it sounded like a solution to my problem. But I still have one
> doubt. 
> 
> Suppose I write a grammar that parses the input file and constructs the
> AST. I have to next write a tree grammar that can operate on the generated
> AST (I guess this is called the tree walkers). My question is, is it possible
> to turn on rewrite in tree grammar?

You can use tree rewriting since 3.1.

> or it is necessary to describe the
> entire tree in the tree-grammar? I did some googling and found this page -
> http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree+pattern+matching%2C+rewriting+a+reality
> . This sounds damn sexy! But has this been released? Does the latest
> release (3.1.2) include this?

The current snapshot should include the required facilities for the Java target. Other targets will officially support it in 3.2, but may already include it in 3.1.3. This will depend on time and effort. Currently I'm not aware of a target other than Java already having this support.

Johannes
> 
> Thanks, Indhu 
> 
> ----- Original Message ----- 
> From: Sam Harwell <sharwell at pixelminegames.com> 
> To: Indhu Bharathi <indhu.b at s7software.com>, antlr-interest at antlr.org 
> Sent: Thursday, March 5, 2009 8:34:25 AM GMT+0530 Asia/Calcutta 
> Subject: RE: [antlr-interest] Seperating grammar and actions 
> 
> 
> 
> 
> You have a few options: 
> 
> 
> 
> 1. Only build an AST in the parser, then use a tree walker to perform your
> needed operations. This is the ?v3? way to do it, especially with the
> new filter-mode tree parsers on the way. 
> 
> 2. Call virtual functions from your actions, and implement those functions
> as empty stubs. Derive a class from the parser and implement the functions
> as necessary. This seems to be a ?v2? way to do it, as it?s used in
> one of the v2 grammars in the ANTLR Tool. 
> 
> 
> 
> Sam 
> 
> 
> 
> 
> 
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Indhu Bharathi 
> Sent: Wednesday, March 04, 2009 8:44 PM 
> To: antlr-interest at antlr.org 
> Subject: [antlr-interest] Seperating grammar and actions 
> 
> 
> 
> Hi, 
> 
> 
> 
> Is there a way to separate grammar and actions into two different files?
> This will be helpful when multiple people are working with the same grammar
> file (each might write their own actions for the same production) and
> don?t want to create redundant copies of the grammar file. 
> 
> 
> 
> One way I thought was to implement observer pattern. The parser will be
> the subject and multiple observers can register to the same production and do
> different things. Another way would be to write a tool to separate the
> actions from the grammar file and reattach it. This way, actions can be
> separated out and maintained in a separate file and can be reattached when
> necessary and changes to grammar can be done in one centralized file. 
> 
> 
> 
> Is there any other way to do this? Any hint might be useful. 
> 
> 
> 
> Thanks, Indhu 
> 
> 
> 

-- 
Computer Bild Tarifsieger! GMX FreeDSL - Telefonanschluss + DSL
f?r nur 17,95 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From jimi at temporal-wave.com  Thu Mar  5 07:27:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 05 Mar 2009 07:27:20 -0800
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49AFAE7E.6090101@smartshift.de>
References: <49AEDC23.2040609@smartshift.de>	<89591.4263.qm@web55903.mail.re3.yahoo.com>
	<49AFAE7E.6090101@smartshift.de>
Message-ID: <49AFEF58.6070209@temporal-wave.com>

Andreas Meyer wrote:
> Maybe it's possible to partition the set of keywords, but that would be 
> some effort: figuring out for 800 keywords, where they appear, what is 
> the context they are used in etc. Note that the problem only appeared 
> after switching to ANTLR 3.1, ANTLR 2.7 was fine with it and the 
> generated parser works well.
>   

Andreas,

What language are you trying to parse? I think that you have taken the 
wrong approach perhaps but it is a little difficult to advise without 
knowing what you are trying to parse. Basically, what Loring is saying 
is that you need to step back a bit. Unfortunately, when there are this 
many keywords and they can all be identifiers too, there will have to be 
some classification, just as in English there are verbs, nouns, and so on.

Perhaps what you need is something like a set of explicit tokens for 
hard and fast keywords, then check ID at various other points. A hybrid 
approach in other words. Is the current grammar something you can email 
off-line rather than to the whole group? I suspect that the original 
parser for this language probably used a scannerless parser, or rather, 
a hand crafted program that was neither scanner nor parser in a 'real' 
sense.

> On some power-point presentation from Terence Parr, I have seen a slide 
> mentioning huge generated DFAs. Is there some additional material 
> available that documents some of the possible situations that make the 
> DFAs explode?
>   
NFA and DFA are wider concepts than ANTLR of course - you will find 
plenty of literature on this. As to ANTLR itself, then Ter is always 
willing to look at fixes/optimizations/etc but we need to provide some 
sort of concrete example. In many cases it is a matter of design and not 
bugs. When the DFA explodes because of dangling optional clauses in say 
a statement, it is often because there is no definitive end to a 
statement, such as Newline or ';' and so on.

With a look at your grammar, I can probably help you.


Jim

From andreas.meyer at smartshift.de  Thu Mar  5 09:55:16 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 05 Mar 2009 18:55:16 +0100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49AFEF58.6070209@temporal-wave.com>
References: <49AEDC23.2040609@smartshift.de>	<89591.4263.qm@web55903.mail.re3.yahoo.com>
	<49AFAE7E.6090101@smartshift.de>
	<49AFEF58.6070209@temporal-wave.com>
Message-ID: <49B01204.8020404@smartshift.de>

Jim Idle schrieb:
> Andreas Meyer wrote:
>> Maybe it's possible to partition the set of keywords, but that would 
>> be some effort: figuring out for 800 keywords, where they appear, 
>> what is the context they are used in etc. Note that the problem only 
>> appeared after switching to ANTLR 3.1, ANTLR 2.7 was fine with it and 
>> the generated parser works well.
>>   
>
> Andreas,
>
> What language are you trying to parse? 

It is SAP ABAP.

> I think that you have taken the wrong approach perhaps but it is a 
> little difficult to advise without knowing what you are trying to 
> parse. Basically, what Loring is saying is that you need to step back 
> a bit. Unfortunately, when there are this many keywords and they can 
> all be identifiers too, there will have to be some classification, 
> just as in English there are verbs, nouns, and so on.
>
> Perhaps what you need is something like a set of explicit tokens for 
> hard and fast keywords, then check ID at various other points. A 
> hybrid approach in other words. Is the current grammar something you 
> can email off-line rather than to the whole group? 

This is a bit tricky, the problem occurs only after adding up at lot of 
rules and the smallest error-inducing grammar (derived from the initial 
grammar by leaving out rules here and there) is 5000 lines long. I 
cannot expect anybody to look at this in detail :-)


> I suspect that the original parser for this language probably used a 
> scannerless parser, or rather, a hand crafted program that was neither 
> scanner nor parser in a 'real' sense.

It used (and uses) a chain of token sources, starting with an ANTLR 
generated lexer for most of the lexing work and some handwritten lexer 
adapters that manipulate the stream of tokens.

>> On some power-point presentation from Terence Parr, I have seen a 
>> slide mentioning huge generated DFAs. Is there some additional 
>> material available that documents some of the possible situations 
>> that make the DFAs explode?
>>   
> NFA and DFA are wider concepts than ANTLR of course - you will find 
> plenty of literature on this. As to ANTLR itself, then Ter is always 
> willing to look at fixes/optimizations/etc but we need to provide some 
> sort of concrete example. In many cases it is a matter of design and 
> not bugs. When the DFA explodes because of dangling optional clauses 
> in say a statement, it is often because there is no definitive end to 
> a statement, such as Newline or ';' and so on.
>
> With a look at your grammar, I can probably help you.

I will try to come up with a minimal example that reproduces the behaviour.

Thanks a lot for your patience!
Andreas Meyer

From parrt at cs.usfca.edu  Thu Mar  5 11:29:42 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Mar 2009 11:29:42 -0800
Subject: [antlr-interest] The difference between compilers and interpreters
Message-ID: <1F525A62-B686-4CD0-8F6D-7ADCF0052C8C@cs.usfca.edu>

Howdy, had some extra material that is not going to make it into the  
book. thought people might like to take a look:

http://www.antlr.org/wiki/display/ANTLR3/The+difference+between+compilers+and+interpreters

Ter

From mattkiehl at tu-cottbus.de  Thu Mar  5 11:59:20 2009
From: mattkiehl at tu-cottbus.de (Matthias Kiehl)
Date: Thu, 05 Mar 2009 20:59:20 +0100
Subject: [antlr-interest] warning(200) - Decision match input using multiple
	alternatives
Message-ID: <49B02F18.5090107@tu-cottbus.de>

Hello everybody,

I'm trying to write a parser for sql92 and I have some trouble with the 
tables in the from-clause, especially with the joins within it. I'd like 
to solve the ambiguities caused by the recursion in this case. I read 
the "Definitive ANTLR Reference" and now i'm wondering if my problem is 
something like the "if-then-else ambiguity" mentioned in chapter 11 
(p.275) and I can just ignore the warning.
If not, how can I solve the ambiguity? I'm happy about any clue.

The grammar (the mentioned part) is attached for better understanding :)

Thanks in advance,

Matthias
-- 
Matthias Kiehl

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: test.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090305/ae14bed6/attachment.pl 

From ugo.landini at gmail.com  Thu Mar  5 12:56:09 2009
From: ugo.landini at gmail.com (ugol)
Date: Thu, 5 Mar 2009 21:56:09 +0100
Subject: [antlr-interest] The difference between compilers and
	interpreters
In-Reply-To: <1F525A62-B686-4CD0-8F6D-7ADCF0052C8C@cs.usfca.edu>
References: <1F525A62-B686-4CD0-8F6D-7ADCF0052C8C@cs.usfca.edu>
Message-ID: <b70c55390903051256n65bc58fn28639866bbcd8ccf@mail.gmail.com>

On Thu, Mar 5, 2009 at 8:29 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Howdy, had some extra material that is not going to make it into the
> book. thought people might like to take a look:
>
> http://www.antlr.org/wiki/display/ANTLR3/The+difference+between+compilers+and+interpreters
>

the new DSL one? When will the beta be available?

ciao
-- 
uL

Pragmatist
http://blog.ugolandini.com
http://www.flickr.com/photos/ugol/

From parrt at cs.usfca.edu  Thu Mar  5 14:17:26 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Mar 2009 14:17:26 -0800
Subject: [antlr-interest] The difference between compilers and
	interpreters
In-Reply-To: <b70c55390903051256n65bc58fn28639866bbcd8ccf@mail.gmail.com>
References: <1F525A62-B686-4CD0-8F6D-7ADCF0052C8C@cs.usfca.edu>
	<b70c55390903051256n65bc58fn28639866bbcd8ccf@mail.gmail.com>
Message-ID: <3B9A42FB-85D8-483C-B9A5-BCF6D44BA35F@cs.usfca.edu>


On Mar 5, 2009, at 12:56 PM, ugol wrote:

> On Thu, Mar 5, 2009 at 8:29 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
>> Howdy, had some extra material that is not going to make it into the
>> book. thought people might like to take a look:
>>
>> http://www.antlr.org/wiki/display/ANTLR3/The+difference+between+compilers+and+interpreters
>>
>
> the new DSL one? When will the beta be available?

Yep. Well, I hope in about 2 months or less.  I'm writing the intro  
but 60-70% done.  You'll like it I suspect. Putting big effort in.
Ter

From ugo.landini at gmail.com  Thu Mar  5 15:37:05 2009
From: ugo.landini at gmail.com (ugol)
Date: Fri, 6 Mar 2009 00:37:05 +0100
Subject: [antlr-interest] The difference between compilers and
	interpreters
In-Reply-To: <3B9A42FB-85D8-483C-B9A5-BCF6D44BA35F@cs.usfca.edu>
References: <1F525A62-B686-4CD0-8F6D-7ADCF0052C8C@cs.usfca.edu>
	<b70c55390903051256n65bc58fn28639866bbcd8ccf@mail.gmail.com>
	<3B9A42FB-85D8-483C-B9A5-BCF6D44BA35F@cs.usfca.edu>
Message-ID: <b70c55390903051537m5b1810cdo27d49903135444ed@mail.gmail.com>

>> the new DSL one? When will the beta be available?
>
> Yep. Well, I hope in about 2 months or less. ?I'm writing the intro but
> 60-70% done. ?You'll like it I suspect. Putting big effort in.
> Ter
>

I suspect too. I was playing with llvm in the last weeks and lurking
on the llvm dev groups, and found your messages... so I know that at
least that stuff will be very very interesting :)

-- 
uL

Pragmatist
http://blog.ugolandini.com
http://www.flickr.com/photos/ugol/

From ame01 at gmx.net  Thu Mar  5 17:09:36 2009
From: ame01 at gmx.net (Aurelian Melinte)
Date: Thu, 05 Mar 2009 20:09:36 -0500
Subject: [antlr-interest] Java Parser to analyze C++ language syntax
In-Reply-To: <c34954d70903050304n61b7bc4y602d93f5b170139@mail.gmail.com>
Message-ID: <4.2.1.20090305195953.01517690@pop.gmx.net>

Hi,

To summarize the current situation with David's C++ parser: the parser has been ported to ANTLR 3.0.1 but we have run into a problem similar with the ones recently discussed on the list on the size of DFAs.  Basically, the grammar has been written for a k=2 but for k=2 ANTLR runs out of memory.  We had to reduce the lookahead to 1 and tried to use predicates. Currently there are a few places where, even with k=1, when trying to predicate ANTLR runs out of memory. 

I have tried 3.1.1 and the results are the same. 

Regards,
a.



From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 02:24:42 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 10:24:42 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
Message-ID: <49B0F9EA.2070804@lancaster.ac.uk>

Hi all

The attached grammar (which you're probably all tired of) generates Java 
code with an error in. I've checked, and the error isn't in a copy 
action or predicate - it's in the expansion of $text in a parser 
predicate. I don't know if I've used $text incorrectly, because I'm 
using it as I understand the documentation says to (including the ANTLR 
book).

The error is:

retval cannot be resolved

on: ASN_1Parser.java
line: line 17279

The generated function in question is:

// $ANTLR start synpred26_ASN_1
     public final void synpred26_ASN_1_fragment() throws 
RecognitionException {
         // /home/sdb/workspace/asn.1-parse/grammars/ASN_1.g:583:44: ( 
nameForm {...}?)
         // /home/sdb/workspace/asn.1-parse/grammars/ASN_1.g:583:44: 
nameForm {...}?
         {
         pushFollow(FOLLOW_nameForm_in_synpred26_ASN_13890);
         nameForm();

         state._fsp--;
         if (state.failed) return ;
         if ( 
!((isStandardOIDName(input.toString(retval.start,input.LT(-1))))) ) {
             if (state.backtracking>0) {state.failed=true; return ;}
             throw new FailedPredicateException(input, 
"synpred26_ASN_1", "isStandardOIDName($text)");
         }

         }
     }
// $ANTLR end synpred26_ASN_1

The rule from the grammar (whole thing attached) is:

objIdComponents options{backtrack=true;} : nameForm 
{isStandardOIDName($text)}? | numberForm | nameAndNumberForm | 
definedValue ;

If this isn't a bug, can someone explain how to pass a function called 
in a predicate the text matched so far? If this is a bug, anyone have a 
workaround? Please. Thanks!

Sam

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090306/f9ffbb1d/attachment.pl 

From vsmani.chrome at gmail.com  Fri Mar  6 06:33:50 2009
From: vsmani.chrome at gmail.com (Manikandan Subramanian)
Date: Fri, 6 Mar 2009 20:03:50 +0530
Subject: [antlr-interest] supress ANTLR comments in the Generated Lexer and
	Parser code
Message-ID: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.com>

Hi,

Is there any way to supress ANTLR comments in the Generated Lexer and Parser
code.

Every where it says, // $ANTLR 3.1.1
D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g 2009-03-06
19:55:09

in all the rules, it includes comments like below, it is referring physical
location, the generated java files has checked in to the CVS repository and
doesnt make sense to have local machine's foldernames.

   // $ANTLR start "document"
    // D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g:231:1:
document : translationType inputSection outputSection ;


Similary I want to give the grammar file location in the resource file name
and read it from there, instead of having the absolute path like below
in the generated Parser code.

public String getGrammarFileName() { return
"D:\\dev\\workspace\\workspace_contivo\\Conversion
Utility\\TranslatorType3RptStd.g"; }

I searched in the ANTLR book and couldnt find anything.

Any help would be great.

Thanks in advance.

Regards,
Mani
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090306/4d725b22/attachment.html 

From anders.hessellund at gmail.com  Fri Mar  6 07:15:32 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Fri, 6 Mar 2009 16:15:32 +0100
Subject: [antlr-interest] unary minus
Message-ID: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>

Hi,

I've just turned to ANTLR and everything looks very nice. Except, I
have some problems with my implementation of unary minus. Can anyone
help me with the following errors?

[16:11:03] error(211): McAntlrExpression.g:61:32: [fatal] rule
arithmeticExpr has non-LL(*) decision due to recursive rule
invocations reachable from alts 1,2.  Resolve by left-factoring or
using syntactic predicates or using backtrack=true option.
[16:11:03] warning(200): McAntlrExpression.g:61:32: Decision can match
input such as "MINUS INTEGER" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

Here is my grammar:

grammar McAntlrExpression;
options {
	output=AST;
	ASTLabelType=CommonTree;
//    backtrack=true;
//    memoize=true;
}
prog:	( orExpr	{ System.out.println($orExpr.tree.toStringTree()); } )+
	;

orExpr
	:	andExpr ( OR^ andExpr )*
	; 	

andExpr
	:	equalityExpr ( AND^ equalityExpr )*
	;

equalityExpr
	:	notExpr ( equalityOp notExpr )*
	;	
	
notExpr
	:	NOT^ boolExpr
	|	boolExpr
	;

boolExpr
	:	BOOLEAN
	|	relationalExpr
	;

relationalExpr
	:	arithmeticExpr ( relationalOp^ | equalityOp^ arithmeticExpr )
	;

arithmeticExpr
	:	sumExpr ( addSubOp^ sumExpr )*
	;
	
sumExpr
	:	factorExpr ( mulDivOp^ factorExpr )*
	;
	
factorExpr
	:	(MINUS^)? atom
	;

relationalOp
    :	LT
    |	GT
    |	LE
    |	GE
    ;

equalityOp
	:	EQ
	|	NEQ
	;

addSubOp
	:	PLUS
	|	MINUS
	;

mulDivOp
	:	MULT
	|	DIV	;

atom
    :   INTEGER
   	|   LP! arithmeticExpr RP!
    ;

LT 	:	'<';
GT 	:	'>';
LE	:	'<=';
GE	:	'>=';
EQ	:	'=';
NEQ	:	'!=';
PLUS:	'+';
MINUS
	:	'-';
MULT:	'*';
DIV	:	'/';
LP	:	'(';
RP	:	')';
NOT	:	'not';
AND	:	'and';
OR	:	'or';
INTEGER
	:	'0'..'9'+ ;
BOOLEAN	:	'true' | 'false';
CONSTANT  :   ('a'..'z'|'A'..'Z')+ ;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+ {skip();} ;

-- AH

From JALuber at gmx.de  Fri Mar  6 07:24:40 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Fri, 06 Mar 2009 16:24:40 +0100
Subject: [antlr-interest] supress ANTLR comments in the Generated Lexer
	and	Parser code
In-Reply-To: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.com>
References: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.com>
Message-ID: <20090306152440.177040@gmx.net>

> Hi,
> 
> Is there any way to supress ANTLR comments in the Generated Lexer and
> Parser
> code.

Currently this isn't possible. The upcoming C# port of the ANTLR tool will probably include such an option and I think that this can be easily ported back.

Johannes
> 
> Every where it says, // $ANTLR 3.1.1
> D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g 2009-03-06
> 19:55:09
> 
> in all the rules, it includes comments like below, it is referring
> physical
> location, the generated java files has checked in to the CVS repository
> and
> doesnt make sense to have local machine's foldernames.
> 
>    // $ANTLR start "document"
>     // D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g:231:1:
> document : translationType inputSection outputSection ;
> 
> 
> Similary I want to give the grammar file location in the resource file
> name
> and read it from there, instead of having the absolute path like below
> in the generated Parser code.
> 
> public String getGrammarFileName() { return
> "D:\\dev\\workspace\\workspace_contivo\\Conversion
> Utility\\TranslatorType3RptStd.g"; }
> 
> I searched in the ANTLR book and couldnt find anything.
> 
> Any help would be great.
> 
> Thanks in advance.
> 
> Regards,
> Mani

-- 
Computer Bild Tarifsieger! GMX FreeDSL - Telefonanschluss + DSL
f?r nur 17,95 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From JALuber at gmx.de  Fri Mar  6 07:39:11 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Fri, 06 Mar 2009 16:39:11 +0100
Subject: [antlr-interest] unary minus
In-Reply-To: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>
Message-ID: <20090306153911.177030@gmx.net>

> Hi,
> 
> I've just turned to ANTLR and everything looks very nice. Except, I
> have some problems with my implementation of unary minus. Can anyone
> help me with the following errors?

I think the problem is with the rules

arithmeticExpr
    :    sumExpr ( addSubOp^ sumExpr )*
    ;

factorExpr
    :    (MINUS^)? atom
    ;

With the input "5 - 3" ANTLR doesn't know if it should match factorExpr with a MINUS or use addSubOp instead. Looking at my C# grammar, it uses the following (simplified) rule

unary_expression
	:	primary_expression
	|	PLUS unary_expression
	|	MINUS unary_expression
	;

Looking at primary_expression  I'd say it is the equivalent of the atom rule. So try the following change:

factorExpr
    :    atom
    :    MINUS^ factorExpr
    ;

Johannes
> 
> [16:11:03] error(211): McAntlrExpression.g:61:32: [fatal] rule
> arithmeticExpr has non-LL(*) decision due to recursive rule
> invocations reachable from alts 1,2.  Resolve by left-factoring or
> using syntactic predicates or using backtrack=true option.
> [16:11:03] warning(200): McAntlrExpression.g:61:32: Decision can match
> input such as "MINUS INTEGER" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> 
> Here is my grammar:
> 
> grammar McAntlrExpression;
> options {
> 	output=AST;
> 	ASTLabelType=CommonTree;
> //    backtrack=true;
> //    memoize=true;
> }
> prog:	( orExpr	{ System.out.println($orExpr.tree.toStringTree()); } )+
> 	;
> 
> orExpr
> 	:	andExpr ( OR^ andExpr )*
> 	; 	
> 
> andExpr
> 	:	equalityExpr ( AND^ equalityExpr )*
> 	;
> 
> equalityExpr
> 	:	notExpr ( equalityOp notExpr )*
> 	;	
> 	
> notExpr
> 	:	NOT^ boolExpr
> 	|	boolExpr
> 	;
> 
> boolExpr
> 	:	BOOLEAN
> 	|	relationalExpr
> 	;
> 
> relationalExpr
> 	:	arithmeticExpr ( relationalOp^ | equalityOp^ arithmeticExpr )
> 	;
> 
> arithmeticExpr
> 	:	sumExpr ( addSubOp^ sumExpr )*
> 	;
> 	
> sumExpr
> 	:	factorExpr ( mulDivOp^ factorExpr )*
> 	;
> 	
> factorExpr
> 	:	(MINUS^)? atom
> 	;
> 
> relationalOp
>     :	LT
>     |	GT
>     |	LE
>     |	GE
>     ;
> 
> equalityOp
> 	:	EQ
> 	|	NEQ
> 	;
> 
> addSubOp
> 	:	PLUS
> 	|	MINUS
> 	;
> 
> mulDivOp
> 	:	MULT
> 	|	DIV	;
> 
> atom
>     :   INTEGER
>    	|   LP! arithmeticExpr RP!
>     ;
> 
> LT 	:	'<';
> GT 	:	'>';
> LE	:	'<=';
> GE	:	'>=';
> EQ	:	'=';
> NEQ	:	'!=';
> PLUS:	'+';
> MINUS
> 	:	'-';
> MULT:	'*';
> DIV	:	'/';
> LP	:	'(';
> RP	:	')';
> NOT	:	'not';
> AND	:	'and';
> OR	:	'or';
> INTEGER
> 	:	'0'..'9'+ ;
> BOOLEAN	:	'true' | 'false';
> CONSTANT  :   ('a'..'z'|'A'..'Z')+ ;
> NEWLINE:'\r'? '\n' ;
> WS  :   (' '|'\t')+ {skip();} ;
> 
> -- AH
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Computer Bild Tarifsieger! GMX FreeDSL - Telefonanschluss + DSL
f?r nur 17,95 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a

From dhjdhj at gmail.com  Fri Mar  6 08:04:49 2009
From: dhjdhj at gmail.com (dhjdhj)
Date: Fri, 6 Mar 2009 11:04:49 -0500
Subject: [antlr-interest] Execute part of a tree multiple times
Message-ID: <B4F58B45-D498-4940-A7BB-4E1E98F91A06@gmail.com>

I'm new to ANTLR (love it, by the way) so hopefully the following  
question is not too stupid!

Suppose I have a language whose core I want to execute multiple times,  
typically against different data. (A lot of financial trading systems  
work this way, for example)

So here's an example of such a language


prolog
     count = 0;   // This code gets executed once at startup

main
     count = count + 1; // Count how many times we executed this piece

    stockPrice = getStockPrice();
    ...do some calculations


epilog
    write(count); // Indicate how many times the main loop was run



If I generate a tree out of this, I might get something like

(PROLOG  (ASSIGN count 0))
(MAIN  (ASSIGN count (+ (count 1))  (ASSIGN stockPrice (function  
getStockPrice)) .....)
(EPILOG (WRITE count))


So the top piece of the grammar probably looks like

program:  prolog? main epilog?;   // Prolog and epilog are optional

prolog:    PROLOG statementList;
main:       MAIN statementList
epilog:     EPILOG statementList



The normal way to execute this would be to write something like
     walker.program();


However, what I'd like to do is something like the following:

walker.prolog();

for (int i = 0; i < externalDataItems.Count(); i++)
    walker.main();

walker.prolog();


However, to do this, I need a way to reset the "top" of the parse tree  
so I can restart from the MAIN node.

I can't see an obvious way to do this in the ANTRL runtime --- is it  
possible (without too much hacking?)


If I can do this, then I don't need to go the extra step of generating  
target code out of the tree.


Thanks in advance

David Jameson





From jimi at temporal-wave.com  Fri Mar  6 08:19:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Mar 2009 08:19:23 -0800
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B0F9EA.2070804@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk>
Message-ID: <49B14D0B.1080407@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Hi all
>
> The attached grammar (which you're probably all tired of) generates 
> Java code with an error in. I've checked, and the error isn't in a 
> copy action or predicate - it's in the expansion of $text in a parser 
> predicate. I don't know if I've used $text incorrectly,

Here is a hint. $text of what? This is a parser rule not a lexer rule.

Jim

From andreas.meyer at smartshift.de  Fri Mar  6 09:16:56 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Fri, 06 Mar 2009 18:16:56 +0100
Subject: [antlr-interest] Prediction DFA bug?
Message-ID: <49B15A88.9020806@smartshift.de>

Hi,

some days ago there was a discussion on how to solve the identifier vs. 
keyword problem. Some said it's not feasible to have 800 individual 
keyword tokens, and one should rather partition the token set into 
"supertokens" representing (lets say) 40 tokens, or even only have one 
"keyword" token. Some weeks ago I tried already, with an extreme 
approach, namely every keyword is an ID token + semantic predicates. The 
produced parser had some strange properties, namely, it was misled into 
wrong rules, and then complained about mismatched keywords, ie, while 
looking for a statement beginning with keyword_1, it decided to go for 
the statement rule beginning with keyword_2, which in turn raised a 
PredicateFailedException:

keyword_2: {is_keyword2()}? IDENTIFIER;

I quickly put this attempt into my archive and tried again with the 800 
keyword tokens approach, which also did not work (timeout because of 
huge prediction DFAs). Now, after the discussion yesterday on this list, 
I again looked at the "supertoken" approach, but now I did it more 
"hybrid", namely with two tokens: ID and KEYWORD --- with limited 
success. I have simplified the original grammar a lot, so that it only 
contains few lines of code and is self-contained (can be debugged in 
ANTLRworks). The error/issue/behaviour-producing input is also attached 
(XXXTEST.abap).

Here is the problem, as I see it:

program
    :  statements  EOF
    ;

statements
    :  ( statement PERIOD  ) * 
    ;
   
// here the parser see's a KEYWORD token, and wants to further 
disambiguate by looking ahead
statement
      // somehow, on input KEYWORD ID KEYWORD ID, the parser is 
attracted into this alternative,
      // because it only considers the lookahead KEYWORD ID KEYWORD ...
    : kw_stmt2^  id kw_abc
      // .. although it should take this path, on input KEYWORD ID 
KEYWORD ID PERIOD:
    | kw_stmt1^  rule
    | kw_stmt3^  id
    ;

rule
    : id  xyz*
    ;

xyz   
    : kw_xyz^ id
    ;

id  : ID
    | KEYWORD
    ;

kw_stmt1: {getKeywordType( input.LT(1) ) == KW_STMT1}? KEYWORD -> KW_STMT1;
....

Now, one could advise to switch the semantic lookahead into a gated 
semantic lookahead:

kw_stmt1: {getKeywordType( input.LT(1) ) == KW_STMT1}?=> KEYWORD -> 
KW_STMT1;

This in fact solves the above problem, so what? When using the 
gated-semantic-predicate approach in my original grammar, with 800 of 
these keyword distinguishing rules (note: rules! not tokens), however, 
this again leads to timeouts in exactly the same rule as with the 
original 800 individual keyword tokens. It must be due to the size of 
some automaton, and it seems to grow not because of the number of 
tokens, but because of the number of rules+attached gated semantic 
predicates.

I'm sorry that currently I dont have small or at least synthetic grammar 
that also demonstrates my timeout issue, but I think that the above 
behaviour is in itself interesting, or (so to say) not correct, 
regardless of what problem I am trying to solve with it. My opinion is 
that ANTLR should somehow use a larger lookahead in the situation above. 
I would really like to dive into ANTLR source code and check for myself, 
but are somewhat overwhelmed by its complexity ... it seems that LL(*) 
is built on a simple idea, but to implement it with all corner cases, 
takes a lot of effort.

Best Regards,
Andreas Meyer
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ABAP4.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090306/69087271/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: XXXTEST.abap
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090306/69087271/attachment-0001.pl 

From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 09:52:42 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 17:52:42 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B14D0B.1080407@temporal-wave.com>
References: <49B0F9EA.2070804@lancaster.ac.uk>
	<49B14D0B.1080407@temporal-wave.com>
Message-ID: <49B162EA.30808@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Hi all
>>
>> The attached grammar (which you're probably all tired of) generates 
>> Java code with an error in. I've checked, and the error isn't in a 
>> copy action or predicate - it's in the expansion of $text in a parser 
>> predicate. I don't know if I've used $text incorrectly,
> 
> Here is a hint. $text of what? This is a parser rule not a lexer rule.

"The Definitive ANTLR Reference", Terence Parr, p130: Figure 6.2, 
Predefined Parser Rule Attributes:

"Attribute: text
Type: String
Description: The text matched from the start of the rule up until the 
point of the $text expression evaluation..."

-- 
Sam Barnett-Cormack

From jimi at temporal-wave.com  Fri Mar  6 09:56:32 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Mar 2009 09:56:32 -0800
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B162EA.30808@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk>
	<49B14D0B.1080407@temporal-wave.com>
	<49B162EA.30808@lancaster.ac.uk>
Message-ID: <49B163D0.1020604@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Jim Idle wrote:
>> Sam Barnett-Cormack wrote:
>>> Hi all
>>>
>>> The attached grammar (which you're probably all tired of) generates 
>>> Java code with an error in. I've checked, and the error isn't in a 
>>> copy action or predicate - it's in the expansion of $text in a 
>>> parser predicate. I don't know if I've used $text incorrectly,
>>
>> Here is a hint. $text of what? This is a parser rule not a lexer rule.
>
> "The Definitive ANTLR Reference", Terence Parr, p130: Figure 6.2, 
> Predefined Parser Rule Attributes:
>
> "Attribute: text
> Type: String
> Description: The text matched from the start of the rule up until the 
> point of the $text expression evaluation..."
>
Oh, well you obviously already know everything already then.

Jim

From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 10:04:22 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 18:04:22 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B163D0.1020604@temporal-wave.com>
References: <49B0F9EA.2070804@lancaster.ac.uk>	<49B14D0B.1080407@temporal-wave.com>	<49B162EA.30808@lancaster.ac.uk>
	<49B163D0.1020604@temporal-wave.com>
Message-ID: <49B165A6.7050600@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Jim Idle wrote:
>>> Sam Barnett-Cormack wrote:
>>>> Hi all
>>>>
>>>> The attached grammar (which you're probably all tired of) generates 
>>>> Java code with an error in. I've checked, and the error isn't in a 
>>>> copy action or predicate - it's in the expansion of $text in a 
>>>> parser predicate. I don't know if I've used $text incorrectly,
>>> Here is a hint. $text of what? This is a parser rule not a lexer rule.
>> "The Definitive ANTLR Reference", Terence Parr, p130: Figure 6.2, 
>> Predefined Parser Rule Attributes:
>>
>> "Attribute: text
>> Type: String
>> Description: The text matched from the start of the rule up until the 
>> point of the $text expression evaluation..."
>>
> Oh, well you obviously already know everything already then.

All I'm saying is that the docs say it can be used in a parser rule. And 
that I know what its value should be. There's no need to assume I've 
done something stupid, which certainly seems to be the case when you 
suggest that using $text there isn't valid, or is problematic in some 
way, without elaborating, especially when the docs say it can be used.

-- 
Sam Barnett-Cormack

From andreas.meyer at smartshift.de  Fri Mar  6 10:04:17 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Fri, 06 Mar 2009 19:04:17 +0100
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B0F9EA.2070804@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk>
Message-ID: <49B165A1.7000100@smartshift.de>

Sam Barnett-Cormack schrieb:
> Hi all
>
> The attached grammar (which you're probably all tired of) generates 
> Java code with an error in. I've checked, and the error isn't in a 
> copy action or predicate - it's in the expansion of $text in a parser 
> predicate. I don't know if I've used $text incorrectly, because I'm 
> using it as I understand the documentation says to (including the 
> ANTLR book).
>
> The error is:
>
> retval cannot be resolved
>
> on: ASN_1Parser.java
> line: line 17279
>
> The generated function in question is:
>
> // $ANTLR start synpred26_ASN_1
>     public final void synpred26_ASN_1_fragment() throws 
> RecognitionException {
>         // /home/sdb/workspace/asn.1-parse/grammars/ASN_1.g:583:44: ( 
> nameForm {...}?)
>         // /home/sdb/workspace/asn.1-parse/grammars/ASN_1.g:583:44: 
> nameForm {...}?
>         {
>         pushFollow(FOLLOW_nameForm_in_synpred26_ASN_13890);
>         nameForm();
>
>         state._fsp--;
>         if (state.failed) return ;
>         if ( 
> !((isStandardOIDName(input.toString(retval.start,input.LT(-1))))) ) {
>             if (state.backtracking>0) {state.failed=true; return ;}
>             throw new FailedPredicateException(input, 
> "synpred26_ASN_1", "isStandardOIDName($text)");
>         }
>
>         }
>     }
> // $ANTLR end synpred26_ASN_1
>
> The rule from the grammar (whole thing attached) is:
>
> objIdComponents options{backtrack=true;} : nameForm 
> {isStandardOIDName($text)}? | numberForm | nameAndNumberForm | 
> definedValue ;
>
> If this isn't a bug, can someone explain how to pass a function called 
> in a predicate the text matched so far? If this is a bug, anyone have 
> a workaround? Please. Thanks!

I'm currently not 100% sure of the exact syntax, but why dont you use 
something like $nameForm.text ? This is the simplest workaround for the 
problem you showed. Or do you have other cases where you need to easily 
access the $text of a lot of rules?

Andreas

From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 10:09:35 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 18:09:35 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B165A6.7050600@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk>	<49B14D0B.1080407@temporal-wave.com>	<49B162EA.30808@lancaster.ac.uk>	<49B163D0.1020604@temporal-wave.com>
	<49B165A6.7050600@lancaster.ac.uk>
Message-ID: <49B166DF.80909@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Jim Idle wrote:
>> Sam Barnett-Cormack wrote:
>>> Jim Idle wrote:
>>>> Sam Barnett-Cormack wrote:
>>>>> Hi all
>>>>>
>>>>> The attached grammar (which you're probably all tired of) generates 
>>>>> Java code with an error in. I've checked, and the error isn't in a 
>>>>> copy action or predicate - it's in the expansion of $text in a 
>>>>> parser predicate. I don't know if I've used $text incorrectly,
>>>> Here is a hint. $text of what? This is a parser rule not a lexer rule.
>>> "The Definitive ANTLR Reference", Terence Parr, p130: Figure 6.2, 
>>> Predefined Parser Rule Attributes:
>>>
>>> "Attribute: text
>>> Type: String
>>> Description: The text matched from the start of the rule up until the 
>>> point of the $text expression evaluation..."
>>>
>> Oh, well you obviously already know everything already then.
> 
> All I'm saying is that the docs say it can be used in a parser rule. And 
> that I know what its value should be. There's no need to assume I've 
> done something stupid, which certainly seems to be the case when you 
> suggest that using $text there isn't valid, or is problematic in some 
> way, without elaborating, especially when the docs say it can be used.

Of course, it might just be that I missed something in reading the docs, 
like the fact that rule attributes are reached as ruleName.$attribute, 
not just $attribute... although that only seems to be mentioned 
implicity, in an example... and it does generate some code that would 
appear to work if the code were in the rule function, rather than 
separated into a predicate function. So it's a confusing situation.

-- 
Sam Barnett-Cormack

From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 10:12:27 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 18:12:27 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B165A1.7000100@smartshift.de>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
Message-ID: <49B1678B.1070301@lancaster.ac.uk>

Andreas Meyer wrote:
> Sam Barnett-Cormack schrieb:
>> Hi all
>>
>> The attached grammar (which you're probably all tired of) generates 
>> Java code with an error in. I've checked, and the error isn't in a 
>> copy action or predicate - it's in the expansion of $text in a parser 
>> predicate. I don't know if I've used $text incorrectly, because I'm 
>> using it as I understand the documentation says to (including the 
>> ANTLR book).
>>
>> The error is:
>>
>> retval cannot be resolved
>>
>> on: ASN_1Parser.java
>> line: line 17279
>>
>> The generated function in question is:
>>
>> // $ANTLR start synpred26_ASN_1
>>     public final void synpred26_ASN_1_fragment() throws 
>> RecognitionException {
>>         // /home/sdb/workspace/asn.1-parse/grammars/ASN_1.g:583:44: ( 
>> nameForm {...}?)
>>         // /home/sdb/workspace/asn.1-parse/grammars/ASN_1.g:583:44: 
>> nameForm {...}?
>>         {
>>         pushFollow(FOLLOW_nameForm_in_synpred26_ASN_13890);
>>         nameForm();
>>
>>         state._fsp--;
>>         if (state.failed) return ;
>>         if ( 
>> !((isStandardOIDName(input.toString(retval.start,input.LT(-1))))) ) {
>>             if (state.backtracking>0) {state.failed=true; return ;}
>>             throw new FailedPredicateException(input, 
>> "synpred26_ASN_1", "isStandardOIDName($text)");
>>         }
>>
>>         }
>>     }
>> // $ANTLR end synpred26_ASN_1
>>
>> The rule from the grammar (whole thing attached) is:
>>
>> objIdComponents options{backtrack=true;} : nameForm 
>> {isStandardOIDName($text)}? | numberForm | nameAndNumberForm | 
>> definedValue ;
>>
>> If this isn't a bug, can someone explain how to pass a function called 
>> in a predicate the text matched so far? If this is a bug, anyone have 
>> a workaround? Please. Thanks!
> 
> I'm currently not 100% sure of the exact syntax, but why dont you use 
> something like $nameForm.text ? This is the simplest workaround for the 
> problem you showed. Or do you have other cases where you need to easily 
> access the $text of a lot of rules?

Yeah, that's what I just figured from looking at examples - it's not 
made completely clear, and if it weren't for the fact that it generates 
*some* code that's *almost* right, I might have realised it sooner.

Of course, I can't try it right now, because that computer has decided 
it doesn't want to play...

-- 
Sam Barnett-Cormack

From jmensch at shaw.ca  Fri Mar  6 10:32:59 2009
From: jmensch at shaw.ca (Julian Mensch)
Date: Fri, 06 Mar 2009 11:32:59 -0700
Subject: [antlr-interest] Literals, Predicates and Actions
Message-ID: <f316a356312dc.49b109eb@shaw.ca>

  Hi,

  I'm a newbie to ANTLR working on translating a long ACCENT
grammer to ANTLR under the C target, and have a few
questions about the use of literals to define tokens in combined
lexer-parser grammars. I understand that literals in parser rules
create implicit lexer rules, and I find this to be a very useful
feature for naturalistic languages that have a set of keywords of
notable size which can increase frequently, and include frequent
alternatives.

  What I'm wondering is if I can somehow apply global predicates
and actions to the implicit rules generated for literals. For example,
I know I can write:

LCURLY:
  '{' { theCompiler->BraceLevel++; }
  ;

block: LCURLY (statement)* RCURLY
  ;

  But I'd really like to be able to write:

@literals
  { if (strcmp(GETTEXT()->chars,"{"))
      theCompiler->BraceLevel++; }

block: '{' (statement)* '}'

  simply because including literals makes the code so
much more intuitive and readable.

  Predicates for literals would also be really useful, in
the case, for example, where you have a limited set
of keywords that are universal to the language, but
your ever-expanding larger set is only valid in some
lexical circumstances. For example:

@literals
  { isUniversalKeyword(GETTEXT()->chars) || inFullKeywordMode }?
  ;

  To add a syntactic predicate to all the literals in the
parser causing most of them not to be matched by the
lexer unless it is in a specific state.

  I know there's no such thing as the "@literals"
construct I'm showing here, but I'm wondering if there's
any way to duplicate the effect I'm going for with it.
Currently I'm matching all keywords as IDENT and
using string tables, setType() and tokens with 'fragment'
to handle keywords, but I find it really ugly because I
have to make changes in three places to add new
keywords, rather than just entering a literal into a
parser rule. If I want syntactic predicates or actions
on my keyword tokens, I have to hand-code it all.

-- Julian Mensch

From andreas.meyer at smartshift.de  Fri Mar  6 11:03:39 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Fri, 06 Mar 2009 20:03:39 +0100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49AEE4EA.4060705@apertio.com>
References: <49AEDC23.2040609@smartshift.de> <49AEE4EA.4060705@apertio.com>
Message-ID: <49B1738B.7040904@smartshift.de>

Paul Bouch? schrieb:
> Hi,
>
> hi I also had this problem when trying to introduce a backward 
> compatible change into our Lexer. The problem with code too large... 
> It aggravated the heck out of me. Whenever I found a solution that did 
> not break the Java code size limit I got something which had here and 
> there less functionality than needed. I ended up giving up on the 
> project and arguing that it is not possible because it would break 
> current syntax (to my luck this is actually true).
>
> Anyway I never got around this problem and I still find it very 
> aggravating. I am not too exicited about the look-ahead mechanism 
> because if you have to look-ahead several charactes then make decision 
> you have to go back in the stream and then rematch those characters... 
> Also I tried to port a hand-written parser/lexer to ANTLR which used a 
> state table and some context sensitive decisions and was not able too 
> port this. First I ran into the code too large exceptions and then 
> into unresolvable amigiousties. Also semantic predicates do not help 
> too much because ANTLR still uses look-ahead in the presence of 
> semantic predicates - I would like to switch it off - how?? - if I use 
> semantic predicates I know what I am doing and I don't need ANTLR's 
> automatic analysis.
>

I also asked the question some time ago, and Terence said "no, it's 
probably not going to work". Unfortunately, he didn't include an 
explanation ... maybe it's too tedious to implement, maybe there are 
theoretical reasons against it ... dont know.

> As for you, maybe you can try to make your grammar ambigious and turn 
> on backtracking and memorization (for backtracking optimization). Of 
> course a backtracking grammar is slower than an LL(k)/* grammar, but 
> if you get what you want....

In my case, this only hides most of the error messages, leaving me with 
exactly one "predication DFA construction timeout" in a rule where I 
absolutely would not expect it :-/

Best Regards,
Andreas

From jimi at temporal-wave.com  Fri Mar  6 11:16:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Mar 2009 11:16:24 -0800
Subject: [antlr-interest] Literals, Predicates and Actions
In-Reply-To: <f316a356312dc.49b109eb@shaw.ca>
References: <f316a356312dc.49b109eb@shaw.ca>
Message-ID: <49B17688.50703@temporal-wave.com>

Julian Mensch wrote:
>   Hi,
>
>   I'm a newbie to ANTLR working on translating a long ACCENT
> grammer to ANTLR under the C target, and have a few
> questions about the use of literals to define tokens in combined
> lexer-parser grammars. I understand that literals in parser rules
> create implicit lexer rules, and I find this to be a very useful
> feature for naturalistic languages that have a set of keywords of
> notable size which can increase frequently, and include frequent
> alternatives.
>
>   What I'm wondering is if I can somehow apply global predicates
>   
No, you cannot do this. I strongly advise that you do not use literals 
in your grammar. While at first it seems more intuitive and is perfectly 
fine for simple grammars, as soon as you want to provide good error 
messages, or walk a tree, you will find that they get in the way. You 
won't know what T42 actually is, and it will even change names when you 
add and change literals.

Before too long, it is like the scene in the Matrix where the guy says 
"I don't see the code any more, I just see blond, brunette..." Looking 
at LCURLY will mean exactly the same thing as '{'.

>   Predicates for literals would also be really useful, in
> the case, for example, where you have a limited set
> of keywords that are universal to the language, but
> your ever-expanding larger set is only valid in some
> lexical circumstances. For example:
>
> @literals
>   { isUniversalKeyword(GETTEXT()->chars) || inFullKeywordMode }?
>   
Don't use these macros directly, use $text otherwise you will be subject 
to the vagaries of me changing my mind ;-)
>   I know there's no such thing as the "@literals"
> construct I'm showing here, but I'm wondering if there's
> any way to duplicate the effect I'm going for with it.
>   
Well, it is just re-inventing the wheel really. I understand where you 
are coming from, but if you go with what the tool does now, you will 
soon find it all second nature.
> Currently I'm matching all keywords as IDENT and
> using string tables, setType() and tokens with 'fragment
use $type where you can of course. I tend not to use the ident method, I 
just use an identifier rule that allows the keywords. Which approach is 
best depends on preference and circumstance of course.

Jim


From andreas.meyer at smartshift.de  Fri Mar  6 11:38:43 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Fri, 06 Mar 2009 20:38:43 +0100
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <E6BBA2CC-3397-4F92-8A94-EAB1CF74CF58@cs.usfca.edu>
References: <49AEDC23.2040609@smartshift.de> <49AEE4EA.4060705@apertio.com>
	<49B1738B.7040904@smartshift.de>
	<E6BBA2CC-3397-4F92-8A94-EAB1CF74CF58@cs.usfca.edu>
Message-ID: <49B17BC3.3040703@smartshift.de>

Terence Parr schrieb:
> Hi Andreas, I'm neck deep in another problem at the moment. Can you 
> try increasing the timeout?
>
>   -Xconversiontimeout t  set NFA conversion timeout for each decision
>
> try 100000 or something liek that.

Yes, I already did that. Sorry if my initial mail two days back was too 
verbose, probably you did not see it :-) The result of running ANTLR was 
a huge java file, with lots of definitions for follow-sets (many 
thousands) and dfa-transitions. The follow-sets issue I resolved with a 
perl script (by moving them into a set of static initializer functions), 
but the dfa-transitions look a little tricky to move around with perl, 
so javac still cannot compile the parser.

If you think it's feasible to change the corresponding string templates 
for a string template newbie (me), I would really appreciate if you 
could tell me which parts I need to take care of.


Thanks a lot!
Andreas Meyer

From parrt at cs.usfca.edu  Fri Mar  6 11:41:03 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 11:41:03 -0800
Subject: [antlr-interest] lookahead DFA too big?
In-Reply-To: <49B17BC3.3040703@smartshift.de>
References: <49AEDC23.2040609@smartshift.de> <49AEE4EA.4060705@apertio.com>
	<49B1738B.7040904@smartshift.de>
	<E6BBA2CC-3397-4F92-8A94-EAB1CF74CF58@cs.usfca.edu>
	<49B17BC3.3040703@smartshift.de>
Message-ID: <C9A82EB5-BAE6-48AB-909E-B5E0E2596150@cs.usfca.edu>

The problem is that the DFA it creates is just too doggone big.  
Coincidentally, I have a graduate student who plans on working on DFA  
minimization; of course that won't help if the NFA to DFA conversion  
times out because the minimization comes afterwards. If you get to the  
code generation phase, however, the DFA minimization should help.

Sorry I don't have a good answer for you right now. One thing that you  
might try is separating the lexer into multiple pieces and then using  
an import grammar statement. This forces the lexer to be broken up  
into multiple DFA I believe, one per included lexer.
Ter

On Mar 6, 2009, at 11:38 AM, Andreas Meyer wrote:

> Terence Parr schrieb:
>> Hi Andreas, I'm neck deep in another problem at the moment. Can you
>> try increasing the timeout?
>>
>>  -Xconversiontimeout t  set NFA conversion timeout for each decision
>>
>> try 100000 or something liek that.
>
> Yes, I already did that. Sorry if my initial mail two days back was  
> too
> verbose, probably you did not see it :-) The result of running ANTLR  
> was
> a huge java file, with lots of definitions for follow-sets (many
> thousands) and dfa-transitions. The follow-sets issue I resolved  
> with a
> perl script (by moving them into a set of static initializer  
> functions),
> but the dfa-transitions look a little tricky to move around with perl,
> so javac still cannot compile the parser.
>
> If you think it's feasible to change the corresponding string  
> templates
> for a string template newbie (me), I would really appreciate if you
> could tell me which parts I need to take care of.
>
>
> Thanks a lot!
> Andreas Meyer
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jaluber at gmx.de  Fri Mar  6 11:55:38 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 06 Mar 2009 20:55:38 +0100
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B1678B.1070301@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
	<49B1678B.1070301@lancaster.ac.uk>
Message-ID: <49B17FBA.2080909@gmx.de>

Sam Barnett-Cormack schrieb:
> Andreas Meyer wrote:
>> Sam Barnett-Cormack schrieb:
>>> If this isn't a bug, can someone explain how to pass a function called 
>>> in a predicate the text matched so far? If this is a bug, anyone have 
>>> a workaround? Please. Thanks!
>> I'm currently not 100% sure of the exact syntax, but why dont you use 
>> something like $nameForm.text ? This is the simplest workaround for the 
>> problem you showed. Or do you have other cases where you need to easily 
>> access the $text of a lot of rules?
> 
> Yeah, that's what I just figured from looking at examples - it's not 
> made completely clear, and if it weren't for the fact that it generates 
> *some* code that's *almost* right, I might have realised it sooner.

Well, the docs say "attribute". With the exceptions of .NETs
"attributes" this does tell that you have to use an operator to bind
"text" to an object. Considering that chapter 6 does explain both
variants in depth - especially 6.4 - I can neither fault Ter nor the book.

What is strange though is that both variants are supposed to be
equivalent and reading through the chapter has offered a clue why the
abbreviation doesn't work here. Hoisting doesn't seem to be the problem.
Ter, can you please shed light on this matter?

Johannes
> 
> Of course, I can't try it right now, because that computer has decided 
> it doesn't want to play...
> 

From parrt at cs.usfca.edu  Fri Mar  6 12:19:27 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 12:19:27 -0800
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B17FBA.2080909@gmx.de>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
	<49B1678B.1070301@lancaster.ac.uk> <49B17FBA.2080909@gmx.de>
Message-ID: <B4CE5091-D3D6-4D67-979C-CD19B119DAF9@cs.usfca.edu>

Hi Guys,quikly scanning...$text means text for entire rule; if hoisted  
out of rule it makes no sense. sem predicates should only use  
functions of input.LT(i) if they get hoisted.
Ter
On Mar 6, 2009, at 11:55 AM, Johannes Luber wrote:

> Sam Barnett-Cormack schrieb:
>> Andreas Meyer wrote:
>>> Sam Barnett-Cormack schrieb:
>>>> If this isn't a bug, can someone explain how to pass a function  
>>>> called
>>>> in a predicate the text matched so far? If this is a bug, anyone  
>>>> have
>>>> a workaround? Please. Thanks!
>>> I'm currently not 100% sure of the exact syntax, but why dont you  
>>> use
>>> something like $nameForm.text ? This is the simplest workaround  
>>> for the
>>> problem you showed. Or do you have other cases where you need to  
>>> easily
>>> access the $text of a lot of rules?
>>
>> Yeah, that's what I just figured from looking at examples - it's not
>> made completely clear, and if it weren't for the fact that it  
>> generates
>> *some* code that's *almost* right, I might have realised it sooner.
>
> Well, the docs say "attribute". With the exceptions of .NETs
> "attributes" this does tell that you have to use an operator to bind
> "text" to an object. Considering that chapter 6 does explain both
> variants in depth - especially 6.4 - I can neither fault Ter nor the  
> book.
>
> What is strange though is that both variants are supposed to be
> equivalent and reading through the chapter has offered a clue why the
> abbreviation doesn't work here. Hoisting doesn't seem to be the  
> problem.
> Ter, can you please shed light on this matter?
>
> Johannes
>>
>> Of course, I can't try it right now, because that computer has  
>> decided
>> it doesn't want to play...
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Fri Mar  6 13:11:02 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 07 Mar 2009 10:11:02 +1300
Subject: [antlr-interest] supress ANTLR comments in the Generated Lexer
 and Parser code
In-Reply-To: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.co
 m>
References: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.com>
Message-ID: <20090306211129.A843C3418433@www.antlr.org>

At 03:33 7/03/2009, Manikandan Subramanian wrote:
>Is there any way to supress ANTLR comments in the Generated Lexer 
>and Parser code.
>
>Every where it says, // $ANTLR 3.1.1 
>D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g 
>2009-03-06 19:55:09
>
>in all the rules, it includes comments like below, it is 
>referring physical location, the generated java files has checked 
>in to the CVS repository and doesnt make sense to have local 
>machine's foldernames.

I don't think it does any harm.  And it's a hint to people looking 
at the code that it was the result of a codegen, so they shouldn't 
be trying to modify it directly.  And it makes it obvious where to 
find the corresponding grammar file :)

Normally though you probably wouldn't check generated code into 
source control (since it can usually be regenerated at will), 
although it's useful in cases where you don't think people will be 
modifying the original source (the grammar) and you don't want to 
require them to install ANTLR.


From jmensch at shaw.ca  Fri Mar  6 13:13:07 2009
From: jmensch at shaw.ca (Julian Mensch)
Date: Fri, 06 Mar 2009 14:13:07 -0700
Subject: [antlr-interest] Literals, Predicates and Actions
In-Reply-To: <49B1728E.8080503@smartshift.de>
References: <f316a356312dc.49b109eb@shaw.ca> <49B1728E.8080503@smartshift.de>
Message-ID: <f32990aa31461.49b12f73@shaw.ca>

> Just for curiosity: why are you migration away from Accent? 
> Didn't the 
> disambiguation features work out as expected? Are there bugs 
> that are 
> not resolved for years? Or do you just need a special ANTLR feature?

  There's a number of issues I had with ACCENT. It was a really
nice piece of software, but it's slow, isn't maintained and I had to
hack it in order to get it to generate code that would compile in
C++. The deal-breaker was that I wanted reasonable error
reporting and recovery, and ACCENT blankly just doesn't do that
as far as I can tell. ACCENT also generates slower parsers, does
not have an active mailing list and hasn't changed much in the
last 8+ years -- and I can't use changes since I had to hack it to
get C++-compatible code.

  I have a script language welded on to a very old, public domain
hacked C preprocessor (DECUS CPP), and it was impossible to
maintain. There's a depth of examples for ANTLR and very few
for ACCENT, and there's that Youngki Ku preprocessor code that,
while it doesn't work in ANTLR 3, still shows me that it might not
be hard to recode the preprocessor subset that I need. Then I have
everything under one tool in active widespread use, which is an
obvious maintenance benefit. Between the Youngki Ku code and 
the C++ target, whether to use ANTLR 3.1.1 or 2.7.2 was by no 
means a trivial choice for me. Finally I chose to go with what seems
to be the most supported.

  I was really taken in with the elegance of ANTLR code when
looking at the Java examples. The C stuff tends to be a little
uglier in practice, with all the macros and structs-as-classes
and lack of exceptions, but it's still more readable than ACCENT 
was getting. I also thought the literals thing might be a big time-
saver, but I guess it turns out it's not since I can't apply it to my 
project.

-- Julian Mensch

From yimm8369 at hotmail.com  Fri Mar  6 13:13:31 2009
From: yimm8369 at hotmail.com (YingAnnie)
Date: Sat, 7 Mar 2009 05:13:31 +0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not work?
Message-ID: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>


 

 

Hi,

 

I used the following stg, the aim is when y is equal to 2 ,print out <x><z><y>, but <if(y==2 )> does not work.

group T;
assgin(x,y,z)::= <<
<if(y==2)><x><z><y><else><"fsdfsdfsdf"><endif>


>>

 

How can I use if...else in Stringtemplate?

 

 

Thanks in advance.

 

 

Annie


_________________________________________________________________
?Windows Live ?????????? MSN?
http://im.live.cn/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/3c7aafa6/attachment.html 

From antlr at mirality.co.nz  Fri Mar  6 13:18:01 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 07 Mar 2009 10:18:01 +1300
Subject: [antlr-interest] Prediction DFA bug?
In-Reply-To: <49B15A88.9020806@smartshift.de>
References: <49B15A88.9020806@smartshift.de>
Message-ID: <20090306211813.AB1C13418433@www.antlr.org>

At 06:16 7/03/2009, Andreas Meyer wrote:
 >The produced parser had some strange properties, namely, it
 >was misled into wrong rules, and then complained about
 >mismatched keywords, ie, while looking for a statement
 >beginning with keyword_1, it decided to go for the
 >statement rule beginning with keyword_2, which in turn
 >raised a PredicateFailedException:
 >
 >keyword_2: {is_keyword2()}? IDENTIFIER;

I believe you need to use a gated predicate instead for that to 
work as you'd expect:

keyword_2: {is_keyword2()}? => IDENTIFIER;


But I'm still firmly of the opinion (which seemed to be backed up 
by the rest of your message) that overusing predicates harms 
performance, since they need to be re-evaluated quite frequently, 
whereas regular token lookahead can be very quickly evaluated 
using bitsets.  (I haven't done testing, though -- this is just a 
gut feeling.)


From parrt at cs.usfca.edu  Fri Mar  6 13:20:32 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 13:20:32 -0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
	work?
In-Reply-To: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
Message-ID: <79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>

Hi. you cannot test the value of attributes within ST; it violates  
model view separation. please read the following paper to catch the  
philosophical approach of ST:

http://www.cs.usfca.edu/~parrt/papers/mvc.templates.pdf

Ter
On Mar 6, 2009, at 1:13 PM, YingAnnie wrote:

>
>
> Hi,
>
> I used the following stg, the aim is when y is equal to 2 ,print out  
> <x><z><y>, but <if(y==2 )> does not work.
> group T;
> assgin(x,y,z)::= <<
> <if(y==2)><x><z><y><else><"fsdfsdfsdf"><endif>
>
> >>
>
> How can I use if...else in Stringtemplate?
>
>
> Thanks in advance.
>
>
> Annie
>
>
> ????????????????????? ?????
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ebehmen at gmx.de  Fri Mar  6 13:24:25 2009
From: ebehmen at gmx.de (Erich Behmen)
Date: Fri, 06 Mar 2009 22:24:25 +0100
Subject: [antlr-interest] How to ignore input in tree grammar?
Message-ID: <49B19489.2040703@gmx.de>

Hello,

i want create a second tree grammar that should only look for special 
code and ignore anything else.
When i try to execute the second tree grammar i get error like: no 
viable alternative at input...
I want just skip this input, because only the first tree grammar has to 
undersand it and make some action the input.

From parrt at cs.usfca.edu  Fri Mar  6 13:26:52 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 13:26:52 -0800
Subject: [antlr-interest] How to ignore input in tree grammar?
In-Reply-To: <49B19489.2040703@gmx.de>
References: <49B19489.2040703@gmx.de>
Message-ID: <9D59222E-C320-4CD8-A859-E0F91F3CE789@cs.usfca.edu>

This should be in 3.1.3-SNAPSHOT via maven (latest build).

http://www.antlr.org/wiki/display/~admin/2008/10/23/tree+pattern 
+matching+grammars

check this out...

It will not be officially supported and 3.1.3 but it will be available  
in the snapshots for Java folks.

Ter
On Mar 6, 2009, at 1:24 PM, Erich Behmen wrote:

> Hello,
>
> i want create a second tree grammar that should only look for special
> code and ignore anything else.
> When i try to execute the second tree grammar i get error like: no
> viable alternative at input...
> I want just skip this input, because only the first tree grammar has  
> to
> undersand it and make some action the input.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jmensch at shaw.ca  Fri Mar  6 13:27:28 2009
From: jmensch at shaw.ca (Julian Mensch)
Date: Fri, 06 Mar 2009 14:27:28 -0700
Subject: [antlr-interest] Literals, Predicates and Actions
In-Reply-To: <49B17688.50703@temporal-wave.com>
References: <f316a356312dc.49b109eb@shaw.ca> <49B17688.50703@temporal-wave.com>
Message-ID: <d08c9b9132031.49b132d0@shaw.ca>

> No, you cannot do this. I strongly advise that you do not use 
> literals 
> in your grammar. 

  Oh. That sucks.

> Well, it is just re-inventing the wheel really. I understand 
> where you are coming from, but if you go with what the tool
> does now, you will soon find it all second nature.

  I have to cope with Pascal/Delphi at my day job, and as
a result I find programming languages that try to enforce
the designer's conception of best practices over the coder's
conception really distasteful. Still, I have very little experience
with ANTLR, so I will try to go with the grain for now.

> use $type where you can of course.

  Thanks for the heads-up; I'll watch for that.

> I tend not to use the ident 
> method, I 
> just use an identifier rule that allows the keywords. 

  I don't understand what you're talking about here. You
mean you just use a single IDENT token and check for
keywords with syntactic predicates that test token
attributes?

  That sounds like it would make the grammar really
hard to read -- unless, I guess, you make a /parser/
rule for every keyword, which could then be parse-
context sensitive. I never thought of that till now.

-- Julian Mensch

From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 14:02:10 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 22:02:10 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <B4CE5091-D3D6-4D67-979C-CD19B119DAF9@cs.usfca.edu>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
	<49B1678B.1070301@lancaster.ac.uk> <49B17FBA.2080909@gmx.de>
	<B4CE5091-D3D6-4D67-979C-CD19B119DAF9@cs.usfca.edu>
Message-ID: <49B19D62.50304@lancaster.ac.uk>

Terence Parr wrote:
> Hi Guys,quikly scanning...$text means text for entire rule; if hoisted 
> out of rule it makes no sense. sem predicates should only use functions 
> of input.LT(i) if they get hoisted.

So can I replace

objIdComponents options{backtrack=true;}
   : nameForm {isStandardOIDName($text)}?
   | numberForm
   | nameAndNumberForm
   | definedValue
   ;

with

objIdComponents options{backtrack=true;}
   : nameForm {isStandardOIDName($nameForm.text)}?
   | numberForm
   | nameAndNumberForm
   | definedValue
   ;

or do I have to actually make nameForm return a String or something? 
Bearing in mind that I can't test at the moment because the computer 
that that work is one decided to be difficult...

Sam

> On Mar 6, 2009, at 11:55 AM, Johannes Luber wrote:
> 
>> Sam Barnett-Cormack schrieb:
>>> Andreas Meyer wrote:
>>>> Sam Barnett-Cormack schrieb:
>>>>> If this isn't a bug, can someone explain how to pass a function called
>>>>> in a predicate the text matched so far? If this is a bug, anyone have
>>>>> a workaround? Please. Thanks!
>>>> I'm currently not 100% sure of the exact syntax, but why dont you use
>>>> something like $nameForm.text ? This is the simplest workaround for the
>>>> problem you showed. Or do you have other cases where you need to easily
>>>> access the $text of a lot of rules?
>>>
>>> Yeah, that's what I just figured from looking at examples - it's not
>>> made completely clear, and if it weren't for the fact that it generates
>>> *some* code that's *almost* right, I might have realised it sooner.
>>
>> Well, the docs say "attribute". With the exceptions of .NETs
>> "attributes" this does tell that you have to use an operator to bind
>> "text" to an object. Considering that chapter 6 does explain both
>> variants in depth - especially 6.4 - I can neither fault Ter nor the 
>> book.
>>
>> What is strange though is that both variants are supposed to be
>> equivalent and reading through the chapter has offered a clue why the
>> abbreviation doesn't work here. Hoisting doesn't seem to be the problem.
>> Ter, can you please shed light on this matter?
>>
>> Johannes
>>>
>>> Of course, I can't try it right now, because that computer has decided
>>> it doesn't want to play...
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-- 
Sam Barnett-Cormack

From lgcraymer at yahoo.com  Fri Mar  6 14:06:10 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 6 Mar 2009 14:06:10 -0800 (PST)
Subject: [antlr-interest] Prediction DFA bug?
In-Reply-To: <49B15A88.9020806@smartshift.de>
References: <49B15A88.9020806@smartshift.de>
Message-ID: <676270.86316.qm@web55908.mail.re3.yahoo.com>


Andreas--

After doing some research on the web, I have to believe that ABAP is one of those horrible languages created by the clueless for the masochistic and easily victimized.? I think that most of the 800 keywords you describe are probably function names or the equivalent and that the lack of a formal description for the language leads to a considerable confusion of syntax with semantics.? It does not help that SQL is embedded as a first class part of the language.

My advice is to back way off and try to abstract ABAP syntax, identifying as few keywords as possible.? "DO" and "WHILE", for example, are clearly keywords, but "WRITE" is an identifier that names a function.? Defer as much semantic processing to later passes as possible.? Except for the embedded SQL, I suspect that ABAP is not much more complicated than Java:? it just has not been properly codified.

--Loring

?


----- Original Message ----
> From: Andreas Meyer <andreas.meyer at smartshift.de>
> To: antlr-interest at antlr.org
> Sent: Friday, March 6, 2009 9:16:56 AM
> Subject: [antlr-interest] Prediction DFA bug?
> 
> Hi,
> 
> some days ago there was a discussion on how to solve the identifier vs. keyword 
> problem. Some said it's not feasible to have 800 individual keyword tokens, and 
> one should rather partition the token set into "supertokens" representing (lets 
> say) 40 tokens, or even only have one "keyword" token. Some weeks ago I tried 
> already, with an extreme approach, namely every keyword is an ID token + 
> semantic predicates. The produced parser had some strange properties, namely, it 
> was misled into wrong rules, and then complained about mismatched keywords, ie, 
> while looking for a statement beginning with keyword_1, it decided to go for the 
> statement rule beginning with keyword_2, which in turn raised a 
> PredicateFailedException:
> 
> keyword_2: {is_keyword2()}? IDENTIFIER;
> 
> I quickly put this attempt into my archive and tried again with the 800 keyword 
> tokens approach, which also did not work (timeout because of huge prediction 
> DFAs). Now, after the discussion yesterday on this list, I again looked at the 
> "supertoken" approach, but now I did it more "hybrid", namely with two tokens: 
> ID and KEYWORD --- with limited success. I have simplified the original grammar 
> a lot, so that it only contains few lines of code and is self-contained (can be 
> debugged in ANTLRworks). The error/issue/behaviour-producing input is also 
> attached (XXXTEST.abap).
> 
> Here is the problem, as I see it:
> 
> program
> ? :? statements? EOF
> ? ;
> 
> statements
> ? :? ( statement PERIOD? ) *? ? ;
> ? // here the parser see's a KEYWORD token, and wants to further disambiguate by 
> looking ahead
> statement
> ? ? // somehow, on input KEYWORD ID KEYWORD ID, the parser is attracted into 
> this alternative,
> ? ? // because it only considers the lookahead KEYWORD ID KEYWORD ...
> ? : kw_stmt2^? id kw_abc
> ? ? // .. although it should take this path, on input KEYWORD ID KEYWORD ID 
> PERIOD:
> ? | kw_stmt1^? rule
> ? | kw_stmt3^? id
> ? ;
> 
> rule
> ? : id? xyz*
> ? ;
> 
> xyz? ? ? : kw_xyz^ id
> ? ;
> 
> id? : ID
> ? | KEYWORD
> ? ;
> 
> kw_stmt1: {getKeywordType( input.LT(1) ) == KW_STMT1}? KEYWORD -> KW_STMT1;
> ....
> 
> Now, one could advise to switch the semantic lookahead into a gated semantic 
> lookahead:
> 
> kw_stmt1: {getKeywordType( input.LT(1) ) == KW_STMT1}?=> KEYWORD -> KW_STMT1;
> 
> This in fact solves the above problem, so what? When using the 
> gated-semantic-predicate approach in my original grammar, with 800 of these 
> keyword distinguishing rules (note: rules! not tokens), however, this again 
> leads to timeouts in exactly the same rule as with the original 800 individual 
> keyword tokens. It must be due to the size of some automaton, and it seems to 
> grow not because of the number of tokens, but because of the number of 
> rules+attached gated semantic predicates.
> 
> I'm sorry that currently I dont have small or at least synthetic grammar that 
> also demonstrates my timeout issue, but I think that the above behaviour is in 
> itself interesting, or (so to say) not correct, regardless of what problem I am 
> trying to solve with it. My opinion is that ANTLR should somehow use a larger 
> lookahead in the situation above. I would really like to dive into ANTLR source 
> code and check for myself, but are somewhat overwhelmed by its complexity ... it 
> seems that LL(*) is built on a simple idea, but to implement it with all corner 
> cases, takes a lot of effort.
> 
> Best Regards,
> Andreas Meyer



      

From parrt at cs.usfca.edu  Fri Mar  6 14:13:33 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 14:13:33 -0800
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B19D62.50304@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
	<49B1678B.1070301@lancaster.ac.uk> <49B17FBA.2080909@gmx.de>
	<B4CE5091-D3D6-4D67-979C-CD19B119DAF9@cs.usfca.edu>
	<49B19D62.50304@lancaster.ac.uk>
Message-ID: <7ED71420-A39C-49AE-9F7F-65389A1FFFE9@cs.usfca.edu>


On Mar 6, 2009, at 2:02 PM, Sam Barnett-Cormack wrote:

> Terence Parr wrote:
>> Hi Guys,quikly scanning...$text means text for entire rule; if  
>> hoisted out of rule it makes no sense. sem predicates should only  
>> use functions of input.LT(i) if they get hoisted.
>
> So can I replace
>
> objIdComponents options{backtrack=true;}
>  : nameForm {isStandardOIDName($text)}?
>  | numberForm
>  | nameAndNumberForm
>  | definedValue
>  ;
>
> with
>
> objIdComponents options{backtrack=true;}
>  : nameForm {isStandardOIDName($nameForm.text)}?
>  | numberForm
>  | nameAndNumberForm
>  | definedValue
>  ;
>

Well, that won't behoisted into any decisions.

you need

: {isStandardOIDName(input.LT(1).getText())}? nameForm

T

> or do I have to actually make nameForm return a String or something?  
> Bearing in mind that I can't test at the moment because the computer  
> that that work is one decided to be difficult...
>
> Sam
>
>> On Mar 6, 2009, at 11:55 AM, Johannes Luber wrote:
>>> Sam Barnett-Cormack schrieb:
>>>> Andreas Meyer wrote:
>>>>> Sam Barnett-Cormack schrieb:
>>>>>> If this isn't a bug, can someone explain how to pass a function  
>>>>>> called
>>>>>> in a predicate the text matched so far? If this is a bug,  
>>>>>> anyone have
>>>>>> a workaround? Please. Thanks!
>>>>> I'm currently not 100% sure of the exact syntax, but why dont  
>>>>> you use
>>>>> something like $nameForm.text ? This is the simplest workaround  
>>>>> for the
>>>>> problem you showed. Or do you have other cases where you need to  
>>>>> easily
>>>>> access the $text of a lot of rules?
>>>>
>>>> Yeah, that's what I just figured from looking at examples - it's  
>>>> not
>>>> made completely clear, and if it weren't for the fact that it  
>>>> generates
>>>> *some* code that's *almost* right, I might have realised it sooner.
>>>
>>> Well, the docs say "attribute". With the exceptions of .NETs
>>> "attributes" this does tell that you have to use an operator to bind
>>> "text" to an object. Considering that chapter 6 does explain both
>>> variants in depth - especially 6.4 - I can neither fault Ter nor  
>>> the book.
>>>
>>> What is strange though is that both variants are supposed to be
>>> equivalent and reading through the chapter has offered a clue why  
>>> the
>>> abbreviation doesn't work here. Hoisting doesn't seem to be the  
>>> problem.
>>> Ter, can you please shed light on this matter?
>>>
>>> Johannes
>>>>
>>>> Of course, I can't try it right now, because that computer has  
>>>> decided
>>>> it doesn't want to play...
>>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> -- 
> Sam Barnett-Cormack


From s.barnett-cormack at lancaster.ac.uk  Fri Mar  6 14:23:23 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 06 Mar 2009 22:23:23 +0000
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <7ED71420-A39C-49AE-9F7F-65389A1FFFE9@cs.usfca.edu>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
	<49B1678B.1070301@lancaster.ac.uk> <49B17FBA.2080909@gmx.de>
	<B4CE5091-D3D6-4D67-979C-CD19B119DAF9@cs.usfca.edu>
	<49B19D62.50304@lancaster.ac.uk>
	<7ED71420-A39C-49AE-9F7F-65389A1FFFE9@cs.usfca.edu>
Message-ID: <49B1A25B.3060509@lancaster.ac.uk>

Terence Parr wrote:
> 
> On Mar 6, 2009, at 2:02 PM, Sam Barnett-Cormack wrote:
> 
>> Terence Parr wrote:
>>> Hi Guys,quikly scanning...$text means text for entire rule; if 
>>> hoisted out of rule it makes no sense. sem predicates should only use 
>>> functions of input.LT(i) if they get hoisted.
>>
>> So can I replace
>>
>> objIdComponents options{backtrack=true;}
>>  : nameForm {isStandardOIDName($text)}?
>>  | numberForm
>>  | nameAndNumberForm
>>  | definedValue
>>  ;
>>
>> with
>>
>> objIdComponents options{backtrack=true;}
>>  : nameForm {isStandardOIDName($nameForm.text)}?
>>  | numberForm
>>  | nameAndNumberForm
>>  | definedValue
>>  ;
>>
> 
> Well, that won't behoisted into any decisions.
> 
> you need
> 
> : {isStandardOIDName(input.LT(1).getText())}? nameForm

Okay... it seems like things involving $text *do* get hoisted, just they 
end up as errors in the Java... but in any case, I'll do that once I can 
get at my code again. This may involve transplanting a hard drive...

Sam

-- 
Sam Barnett-Cormack

From antlr at mirality.co.nz  Fri Mar  6 14:36:07 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 07 Mar 2009 11:36:07 +1300
Subject: [antlr-interest] Literals, Predicates and Actions
In-Reply-To: <d08c9b9132031.49b132d0@shaw.ca>
References: <f316a356312dc.49b109eb@shaw.ca> <49B17688.50703@temporal-wave.com>
	<d08c9b9132031.49b132d0@shaw.ca>
Message-ID: <20090306223628.D5CA134184DA@www.antlr.org>

At 10:27 7/03/2009, Julian Mensch wrote:
 >> I tend not to use the ident method, I just use
 >> an identifier rule that allows the keywords.
 >
 >I don't understand what you're talking about here. You
 >mean you just use a single IDENT token and check for
 >keywords with syntactic predicates that test token
 >attributes?

No, I'm reasonably sure that he means the exact opposite :)

<http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741>

As shown here, there are two common strategies to solve the 
keywords-as-identifiers problem.

The first is to define everything as an IDENTIFIER at the lexer 
level, and figure out which ones are actually keywords at the 
parser level (using semantic predicates).

The second is to treat everything as individual keywords/tokens at 
the lexer level; but in the parser, allow those keywords to be 
used in a context where an identifier is expected.  (This usually 
doesn't require any predicates at all, though it depends on how 
ambiguous your language is.)

I favour the second approach; I'm fairly sure that Jim was saying 
the same thing.


From jimi at temporal-wave.com  Fri Mar  6 15:18:11 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 06 Mar 2009 15:18:11 -0800
Subject: [antlr-interest] Literals, Predicates and Actions
In-Reply-To: <d08c9b9132031.49b132d0@shaw.ca>
References: <f316a356312dc.49b109eb@shaw.ca> <49B17688.50703@temporal-wave.com>
	<d08c9b9132031.49b132d0@shaw.ca>
Message-ID: <49B1AF33.4020903@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090306/00cbb9ee/attachment.html 

From parrt at cs.usfca.edu  Fri Mar  6 15:45:43 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 15:45:43 -0800
Subject: [antlr-interest] Bug? Invalid Java code generated
In-Reply-To: <49B1A25B.3060509@lancaster.ac.uk>
References: <49B0F9EA.2070804@lancaster.ac.uk> <49B165A1.7000100@smartshift.de>
	<49B1678B.1070301@lancaster.ac.uk> <49B17FBA.2080909@gmx.de>
	<B4CE5091-D3D6-4D67-979C-CD19B119DAF9@cs.usfca.edu>
	<49B19D62.50304@lancaster.ac.uk>
	<7ED71420-A39C-49AE-9F7F-65389A1FFFE9@cs.usfca.edu>
	<49B1A25B.3060509@lancaster.ac.uk>
Message-ID: <55C0C578-A9D3-4E6C-BC45-E9789690B351@cs.usfca.edu>


On Mar 6, 2009, at 2:23 PM, Sam Barnett-Cormack wrote:
>>>
>> Well, that won't behoisted into any decisions.
>> you need
>> : {isStandardOIDName(input.LT(1).getText())}? nameForm
>
> Okay... it seems like things involving $text *do* get hoisted, just  
> they end up as errors in the Java... but in any case, I'll do that  
> once I can get at my code again. This may involve transplanting a  
> hard drive...

Yes, hoisted but $test is meaningless *BEFORE* you match the rule,  
right?  How would it know what it will match?  U must use lokoahead :)

Ter

From yimm8369 at hotmail.com  Fri Mar  6 15:46:58 2009
From: yimm8369 at hotmail.com (YingAnnie)
Date: Sat, 7 Mar 2009 07:46:58 +0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
 work?
In-Reply-To: <79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
Message-ID: <BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>



 So, what I expect is that when the code is "a=b*c", and c==2, then change * to /.

 

multiplicativeExpression
    :^(STAR u1=unaryExpression u2=unaryExpression)  -> assgin(x={$u1.text},y={$u2.text},z={"/"})  
    ;

 

group T;
assgin(x,y,z)::= <<
<if(y==2)><x><z><y><else><"error"><endif>

 

If I can not test the value of attributes within ST,Then it has to be done in the tree grammar. can I do something like this:

 

multiplicativeExpression
    :^(STAR u1=unaryExpression u2='2')  -> assgin(x={$u1.text},y={$u2.text},z={"/"})  
    ;

 

thanks.


> 
> Hi. you cannot test the value of attributes within ST; it violates 
> model view separation. please read the following paper to catch the 
> philosophical approach of ST:
> 
> http://www.cs.usfca.edu/~parrt/papers/mvc.templates.pdf
> 
> Ter
> On Mar 6, 2009, at 1:13 PM, YingAnnie wrote:
> 
> >
> >
> > Hi,
> >
> > I used the following stg, the aim is when y is equal to 2 ,print out 
> > <x><z><y>, but <if(y==2 )> does not work.
> > group T;
> > assgin(x,y,z)::= <<
> > <if(y==2)><x><z><y><else><"fsdfsdfsdf"><endif>
> >
> > >>
> >
> > How can I use if...else in Stringtemplate?
> >
> >
> > Thanks in advance.
> >
> >
> > Annie
> >
> >
> > ????????????????????? ?????
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


_________________________________________________________________
MSN??????????????????MSN???
http://im.live.cn/safe/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/4eeaa26d/attachment.html 

From parrt at cs.usfca.edu  Fri Mar  6 15:56:11 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Mar 2009 15:56:11 -0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
	work?
In-Reply-To: <BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
	<BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
Message-ID: <A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>


On Mar 6, 2009, at 3:46 PM, YingAnnie wrote:

>
>  So, what I expect is that when the code is "a=b*c", and c==2, then  
> change * to /.
>
> multiplicativeExpression
>     :^(STAR u1=unaryExpression u2=unaryExpression)  ->  
> assgin(x={$u1.text},y={$u2.text},z={"/"})
>     ;
>
> group T;
> assgin(x,y,z)::= <<
> <if(y==2)><x><z><y><else><"error"><endif>
>
> If I can not test the value of attributes within ST,Then it has to  
> be done in the tree grammar. can I do something like this:
>
> multiplicativeExpression
>     :^(STAR u1=unaryExpression u2='2')  ->  
> assgin(x={$u1.text},y={$u2.text},z={"/"})
>     ;

Almost.  you need predicated -> alternatives

-> {..}?  template one
-> {...}? template two
-> else template

T

From hellknows2008 at hotmail.com  Fri Mar  6 21:14:05 2009
From: hellknows2008 at hotmail.com (vincent cheung)
Date: Sat, 7 Mar 2009 10:14:05 +0500
Subject: [antlr-interest] Regarding the C Target
Message-ID: <SNT103-W885FE7B5A06DE84D35A0DA6A20@phx.gbl>



Hi, I have been using ANTLR v3 to develop a scripting system for a few months. I have the following questions

1) Wildcard doesn't seem to work in tree grammar, it doesn't match subtree when its supposed to. It seems that it only matches a single node at a time. If I replace the the wildcard occurences in the grammar file with the following node then it works:

// any single node or tree
asnot
 : ^((~(UP | DOWN)) asnot*)  // in 3.1.1, ^(. asnot*) will work
 | .
 ;
 
2) The pop of the common tree node stream doesn't seem to work. If I change the implementation to the following then it works:
 
ANTLR3_INT32 retVal;
retVal = ANTLR3_UINT32_CAST(ctns->nodeStack->peek(ctns->nodeStack));
ctns->nodeStack->pop(ctns->nodeStack);
ctns->tnstream->istream->seek(ctns->tnstream->istream, retVal);
return retVal;
 
3) The token text information of imaginary nodes is lost in 3.1.2. Not sure how it works in 3.1.1, but the reason for why it doesn't in 3.1.2 is that the the token's strFactory isn't set up. 
 
4) Attempted to use PUSHSTREAM to implement include file mechanism, but failed. The reason is that the token factory's setInputStream isn't set up properly.
 
 
Thanks

_________________________________________________________________
News, entertainment and everything you care about at Live.com. Get it now!
http://www.live.com/getstarted.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/d7ae5b91/attachment.html 

From anders.hessellund at gmail.com  Sat Mar  7 03:47:31 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Sat, 7 Mar 2009 12:47:31 +0100
Subject: [antlr-interest] unary minus
In-Reply-To: <20090306153911.177030@gmx.net>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>
	<20090306153911.177030@gmx.net>
Message-ID: <797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>

Thanks,

but it doesn't work. Perhaps I should just turn backtracking and
memoisation on? It just seems to me that unary minus must be such a
common thing that there was a best practice for handling it.

-- AH

2009/3/6 Johannes Luber <JALuber at gmx.de>:
>> Hi,
>>
>> I've just turned to ANTLR and everything looks very nice. Except, I
>> have some problems with my implementation of unary minus. Can anyone
>> help me with the following errors?
>
> I think the problem is with the rules
>
> arithmeticExpr
> ? ?: ? ?sumExpr ( addSubOp^ sumExpr )*
> ? ?;
>
> factorExpr
> ? ?: ? ?(MINUS^)? atom
> ? ?;
>
> With the input "5 - 3" ANTLR doesn't know if it should match factorExpr with a MINUS or use addSubOp instead. Looking at my C# grammar, it uses the following (simplified) rule
>
> unary_expression
> ? ? ? ?: ? ? ? primary_expression
> ? ? ? ?| ? ? ? PLUS unary_expression
> ? ? ? ?| ? ? ? MINUS unary_expression
> ? ? ? ?;
>
> Looking at primary_expression ?I'd say it is the equivalent of the atom rule. So try the following change:
>
> factorExpr
> ? ?: ? ?atom
> ? ?: ? ?MINUS^ factorExpr
> ? ?;
>
> Johannes
>>
>> [16:11:03] error(211): McAntlrExpression.g:61:32: [fatal] rule
>> arithmeticExpr has non-LL(*) decision due to recursive rule
>> invocations reachable from alts 1,2. ?Resolve by left-factoring or
>> using syntactic predicates or using backtrack=true option.
>> [16:11:03] warning(200): McAntlrExpression.g:61:32: Decision can match
>> input such as "MINUS INTEGER" using multiple alternatives: 1, 2
>> As a result, alternative(s) 2 were disabled for that input
>>
>> Here is my grammar:
>>
>> grammar McAntlrExpression;
>> options {
>> ? ? ? output=AST;
>> ? ? ? ASTLabelType=CommonTree;
>> // ? ?backtrack=true;
>> // ? ?memoize=true;
>> }
>> prog: ( orExpr ? ? ? ?{ System.out.println($orExpr.tree.toStringTree()); } )+
>> ? ? ? ;
>>
>> orExpr
>> ? ? ? : ? ? ? andExpr ( OR^ andExpr )*
>> ? ? ? ;
>>
>> andExpr
>> ? ? ? : ? ? ? equalityExpr ( AND^ equalityExpr )*
>> ? ? ? ;
>>
>> equalityExpr
>> ? ? ? : ? ? ? notExpr ( equalityOp notExpr )*
>> ? ? ? ;
>>
>> notExpr
>> ? ? ? : ? ? ? NOT^ boolExpr
>> ? ? ? | ? ? ? boolExpr
>> ? ? ? ;
>>
>> boolExpr
>> ? ? ? : ? ? ? BOOLEAN
>> ? ? ? | ? ? ? relationalExpr
>> ? ? ? ;
>>
>> relationalExpr
>> ? ? ? : ? ? ? arithmeticExpr ( relationalOp^ | equalityOp^ arithmeticExpr )
>> ? ? ? ;
>>
>> arithmeticExpr
>> ? ? ? : ? ? ? sumExpr ( addSubOp^ sumExpr )*
>> ? ? ? ;
>>
>> sumExpr
>> ? ? ? : ? ? ? factorExpr ( mulDivOp^ factorExpr )*
>> ? ? ? ;
>>
>> factorExpr
>> ? ? ? : ? ? ? (MINUS^)? atom
>> ? ? ? ;
>>
>> relationalOp
>> ? ? : LT
>> ? ? | GT
>> ? ? | LE
>> ? ? | GE
>> ? ? ;
>>
>> equalityOp
>> ? ? ? : ? ? ? EQ
>> ? ? ? | ? ? ? NEQ
>> ? ? ? ;
>>
>> addSubOp
>> ? ? ? : ? ? ? PLUS
>> ? ? ? | ? ? ? MINUS
>> ? ? ? ;
>>
>> mulDivOp
>> ? ? ? : ? ? ? MULT
>> ? ? ? | ? ? ? DIV ? ? ;
>>
>> atom
>> ? ? : ? INTEGER
>> ? ? ? | ? LP! arithmeticExpr RP!
>> ? ? ;
>>
>> LT ? ?: ? ? ? '<';
>> GT ? ?: ? ? ? '>';
>> LE ? ?: ? ? ? '<=';
>> GE ? ?: ? ? ? '>=';
>> EQ ? ?: ? ? ? '=';
>> NEQ ? : ? ? ? '!=';
>> PLUS: '+';
>> MINUS
>> ? ? ? : ? ? ? '-';
>> MULT: '*';
>> DIV ? : ? ? ? '/';
>> LP ? ?: ? ? ? '(';
>> RP ? ?: ? ? ? ')';
>> NOT ? : ? ? ? 'not';
>> AND ? : ? ? ? 'and';
>> OR ? ?: ? ? ? 'or';
>> INTEGER
>> ? ? ? : ? ? ? '0'..'9'+ ;
>> BOOLEAN ? ? ? : ? ? ? 'true' | 'false';
>> CONSTANT ?: ? ('a'..'z'|'A'..'Z')+ ;
>> NEWLINE:'\r'? '\n' ;
>> WS ?: ? (' '|'\t')+ {skip();} ;
>>
>> -- AH
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> --
> Computer Bild Tarifsieger! GMX FreeDSL - Telefonanschluss + DSL
> f?r nur 17,95 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K11308T4569a
>



-- 
Anders Hessellund
www.itu.dk/people/hessellund/

From jaluber at gmx.de  Sat Mar  7 05:23:53 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 07 Mar 2009 14:23:53 +0100
Subject: [antlr-interest] unary minus
In-Reply-To: <797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>	
	<20090306153911.177030@gmx.net>
	<797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
Message-ID: <49B27569.7040905@gmx.de>

Anders Hessellund schrieb:
> Thanks,
> 
> but it doesn't work. Perhaps I should just turn backtracking and
> memoisation on? It just seems to me that unary minus must be such a
> common thing that there was a best practice for handling it.
> 
> -- AH
> 

I've attached the C# grammar - maybe you can pare it down to your
supported operators.

Johannes

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Archiv.zip
Type: application/octetstream
Size: 21311 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/38321ab7/attachment.bin 

From spamhole at gmx.at  Sat Mar  7 09:05:32 2009
From: spamhole at gmx.at (Markus Stoeger)
Date: Sat, 07 Mar 2009 18:05:32 +0100
Subject: [antlr-interest] Prediction DFA bug?
In-Reply-To: <20090306211813.AB1C13418433@www.antlr.org>
References: <49B15A88.9020806@smartshift.de>
	<20090306211813.AB1C13418433@www.antlr.org>
Message-ID: <49B2A95C.1030807@gmx.at>

Hi,

Andreas seems to have the same problem that I've run into a few months 
ago. I also got FailedPredicateExceptions when I implemented keywords as 
identifiers + disambiguating semantic predicates.

Below are the links to my previous posts concerning these problems from 
december/january. I was able to reproduce the problem with a very simple 
grammar (see attachments containing grammar, dfa graphics).

http://www.antlr.org/pipermail/antlr-interest/2008-December/032188.html
http://www.antlr.org/pipermail/antlr-interest/2009-January/032202.html

Maybe someone with more ANTLR experience could explain why this is 
happening or verify that it's a bug in the generated lookahead DFA?

Regards,
Markus

Gavin Lambert schrieb:
> At 06:16 7/03/2009, Andreas Meyer wrote:
>  >The produced parser had some strange properties, namely, it
>  >was misled into wrong rules, and then complained about
>  >mismatched keywords, ie, while looking for a statement
>  >beginning with keyword_1, it decided to go for the
>  >statement rule beginning with keyword_2, which in turn
>  >raised a PredicateFailedException:
>  >
>  >keyword_2: {is_keyword2()}? IDENTIFIER;
>
> I believe you need to use a gated predicate instead for that to 
> work as you'd expect:
>
> keyword_2: {is_keyword2()}? => IDENTIFIER;
>
>
> But I'm still firmly of the opinion (which seemed to be backed up 
> by the rest of your message) that overusing predicates harms 
> performance, since they need to be re-evaluated quite frequently, 
> whereas regular token lookahead can be very quickly evaluated 
> using bitsets.  (I haven't done testing, though -- this is just a 
> gut feeling.)
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   


From jaluber at gmx.de  Sat Mar  7 05:18:13 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 07 Mar 2009 14:18:13 +0100
Subject: [antlr-interest] unary minus
In-Reply-To: <797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>	
	<20090306153911.177030@gmx.net>
	<797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
Message-ID: <49B27415.8010709@gmx.de>

Anders Hessellund schrieb:
> Thanks,
> 
> but it doesn't work. Perhaps I should just turn backtracking and
> memoisation on? It just seems to me that unary minus must be such a
> common thing that there was a best practice for handling it.
> 
> -- AH
> 

I've attached the C# grammar - maybe you can pare it down to your
supported operators.

Johannes
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: CSharp3Lexer.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/53567fe3/attachment-0002.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: CSharp3ParserSyntax.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/53567fe3/attachment-0003.pl 

From vsmani.chrome at gmail.com  Sat Mar  7 09:14:38 2009
From: vsmani.chrome at gmail.com (Manikandan Subramanian)
Date: Sat, 7 Mar 2009 22:44:38 +0530
Subject: [antlr-interest] supress ANTLR comments in the Generated Lexer
	and Parser code
In-Reply-To: <49b19172.0c0bca0a.789c.7a7cSMTPIN_ADDED@mx.google.com>
References: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.com>
	<49b19172.0c0bca0a.789c.7a7cSMTPIN_ADDED@mx.google.com>
Message-ID: <ba280f0d0903070914o75ff8c91i9a03bddedd58c67b@mail.gmail.com>

Hi,

Thanks for the information. In our case, some people works on ANTLR directly
and others just use the generated java files to integrate with the
application, so as you said we don't always need to have the ANTLR to be
installed on every one's machine.

Yes, the information in the comments are useful if every one follows the
same directory structure, but that is not the case. For our case, I am just
wondering, is there any way to tweak the comments to just include the
grammar file name and ANTLR version and remove the folder path.

Thank you,
Mani

On 3/7/09, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
> At 03:33 7/03/2009, Manikandan Subramanian wrote:
>
>> Is there any way to supress ANTLR comments in the Generated Lexer and
>> Parser code.
>>
>> Every where it says, // $ANTLR 3.1.1
>> D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g 2009-03-06
>> 19:55:09
>>
>> in all the rules, it includes comments like below, it is referring
>> physical location, the generated java files has checked in to the CVS
>> repository and doesnt make sense to have local machine's foldernames.
>>
>
> I don't think it does any harm.  And it's a hint to people looking at the
> code that it was the result of a codegen, so they shouldn't be trying to
> modify it directly.  And it makes it obvious where to find the corresponding
> grammar file :)
>
> Normally though you probably wouldn't check generated code into source
> control (since it can usually be regenerated at will), although it's useful
> in cases where you don't think people will be modifying the original source
> (the grammar) and you don't want to require them to install ANTLR.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/32daf611/attachment.html 

From list.encelade at gmail.com  Sat Mar  7 09:31:46 2009
From: list.encelade at gmail.com (Vincent De Groote)
Date: Sat, 7 Mar 2009 18:31:46 +0100
Subject: [antlr-interest] How to make a restartable parser ?
Message-ID: <1400d6020903070931g182fef11lebfdaf3de0e2cee5@mail.gmail.com>

Hello,

Is there a way to use the parser generated by ANTLR as a "restartable"
parser ?

The problem I try to solve is:
The text I need to parse is a text fragment.  It will be followed by other
text fragments, until end of file.
I do not want to accumulate fragments, because the input may be very big.
I suppose I could generate a lexer with a special token 'restart'.  When
such a token is received by the parser, the parser should save its state,
and return with a specific result code.  When I receive more text, the
parser should restart with the state saved before.

Is there a way to handle this model with ANTLR ?

Thanks for your replies

Vincent De Groote
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/75c810db/attachment.html 

From sharwell at pixelminegames.com  Sat Mar  7 11:02:21 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 7 Mar 2009 13:02:21 -0600
Subject: [antlr-interest] supress ANTLR comments in the Generated
	Lexerand Parser code
In-Reply-To: <ba280f0d0903070914o75ff8c91i9a03bddedd58c67b@mail.gmail.com>
References: <ba280f0d0903060633v777121a2t9963beb192808d72@mail.gmail.com><49b19172.0c0bca0a.789c.7a7cSMTPIN_ADDED@mx.google.com>
	<ba280f0d0903070914o75ff8c91i9a03bddedd58c67b@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67AED@Bloodymary.ironwillgames.com>

Invoke the ANTLR Tool from the working directory containing your
grammar, and pass the filename without the path. The name and path that
show in the generated code are the same as what was passed on the
command line.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Manikandan
Subramanian
Sent: Saturday, March 07, 2009 11:15 AM
To: Gavin Lambert
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] supress ANTLR comments in the Generated
Lexerand Parser code

 

Hi,

Thanks for the information. In our case, some people works on ANTLR
directly and others just use the generated java files to integrate with
the application, so as you said we don't always need to have the ANTLR
to be installed on every one's machine.

Yes, the information in the comments are useful if every one follows the
same directory structure, but that is not the case. For our case, I am
just wondering, is there any way to tweak the comments to just include
the grammar file name and ANTLR version and remove the folder path.

Thank you,
Mani

On 3/7/09, Gavin Lambert <antlr at mirality.co.nz> wrote:

At 03:33 7/03/2009, Manikandan Subramanian wrote:

Is there any way to supress ANTLR comments in the Generated Lexer and
Parser code.

Every where it says, // $ANTLR 3.1.1
D:\\dev\\workspace\\workspace_contivo\\TranslatorType3Rpt.g 2009-03-06
19:55:09

in all the rules, it includes comments like below, it is referring
physical location, the generated java files has checked in to the CVS
repository and doesnt make sense to have local machine's foldernames.


I don't think it does any harm.  And it's a hint to people looking at
the code that it was the result of a codegen, so they shouldn't be
trying to modify it directly.  And it makes it obvious where to find the
corresponding grammar file :)

Normally though you probably wouldn't check generated code into source
control (since it can usually be regenerated at will), although it's
useful in cases where you don't think people will be modifying the
original source (the grammar) and you don't want to require them to
install ANTLR.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090307/249c50bc/attachment.html 

From anders.hessellund at gmail.com  Sat Mar  7 13:16:48 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Sat, 7 Mar 2009 22:16:48 +0100
Subject: [antlr-interest] unary minus
In-Reply-To: <49B27415.8010709@gmx.de>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>
	<20090306153911.177030@gmx.net>
	<797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
	<49B27415.8010709@gmx.de>
Message-ID: <797a9f130903071316i2dbe2795k41d38b383cb85991@mail.gmail.com>

Thanks,

I found your guide on removing global backtracking
(http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar).
After looking at your grammar and playing around with my own, I found
that the problem was caused by another rule.

The problem arises because a paranthesis can either contain an orExpr
or an arithmeticExpr. I will probably have do some sort of magic with
predicates?

-- AH

grammar McAntlrExpression;
options {
	output=AST;
	ASTLabelType=CommonTree;
    //backtrack=true;
    //memoize=true;
}

expr:	orExpr	{ System.out.println($orExpr.tree.toStringTree()); } EOF
	;

orExpr
	:	andExpr ( OR^ andExpr )*
	; 	

andExpr
	:	equalityExpr ( AND^ equalityExpr )*
	;

equalityExpr
	:	notExpr ( equalityOp^ notExpr )*
	;	
	
notExpr
	:	(NOT*)^ boolExpr
	;

boolExpr
	:	arithmeticExpr ( relationalOp^ | equalityOp^ ) arithmeticExpr
	|	LP! orExpr RP!
	|	BOOLEAN
	;

arithmeticExpr
	:	sumExpr ( addSubOp^ sumExpr )*
	;
	
sumExpr
	:	unaryExpr ( mulDivOp^ unaryExpr )*
	;

unaryExpr
	:	(MINUS*)^ atom
	;

atom
	:	LP! arithmeticExpr RP!
	| 	INTEGER
	;

relationalOp
    :	LT
    |	GT
    |	LE
    |	GE
    ;

equalityOp
	:	EQ
	|	NEQ
	;

addSubOp
	:	PLUS
	|	MINUS
	;

mulDivOp
	:	MULT
	|	DIV	
	;

LT 	:	'<';
GT 	:	'>';
LE	:	'<=';
GE	:	'>=';
EQ	:	'=';
NEQ	:	'!=';
PLUS:	'+';
MINUS
	:	'-';
MULT:	'*';
DIV	:	'/';
LP	:	'(';
RP	:	')';
NOT	:	'not';
AND	:	'and';
OR	:	'or';
INTEGER
	:	'0'..'9'+ ;
BOOLEAN	
	:	'true' | 'false';
CONSTANT
	:   ('a'..'z'|'A'..'Z')+ ;
NEWLINE
	:'\r'? '\n' ;
WS  :   (' '|'\t')+ {skip();} ;

From jmensch at shaw.ca  Sat Mar  7 14:47:58 2009
From: jmensch at shaw.ca (Julian Mensch)
Date: Sat, 07 Mar 2009 15:47:58 -0700
Subject: [antlr-interest] Context and @synpredgate
In-Reply-To: <49B1AF33.4020903@temporal-wave.com>
References: <f316a356312dc.49b109eb@shaw.ca> <49B17688.50703@temporal-wave.com>
	<d08c9b9132031.49b132d0@shaw.ca> <49B1AF33.4020903@temporal-wave.com>
Message-ID: <f329eda336cb0.49b2972e@shaw.ca>

  Ok, second newbie question. I'm building a bytecode compiler
that uses multiple passes. Most of these are very, very simple
and have only a few actions for counting things and recognizing
early declarations. One has literally hundreds of actions, most
of which are under a line -- simple assignment statements to
memory structures that get allocated after the counting on the
first pass.

  So I'd like to use @synpredgate in order to turn off _most_
actions, but not all -- I'd like to exempt actions from certain
specific rules. This avoids me having to include if statement
macros in _every single action_. I thought I could use members
or somesuch, but I can't, for obvious reasons: once I set the
bool variable to turn actions off, they're off, and I can't reset
the variable later because actions aren't being executed
anymore.

  Is there any way to know what rule you're in when using
@synpredgate? Do @init and @after still get executed?

  Incidentally, I do know about the speed advantage of parse
trees for multi-pass compilers. I may wanr to refactor to that
eventually, but right now I just want to get my code to work
in close to the form it was when I used ACCENT.

  Thanks,

-- Julian Mensch

From michael.bedward at gmail.com  Sat Mar  7 20:00:26 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sun, 8 Mar 2009 15:00:26 +1100
Subject: [antlr-interest] unary minus
In-Reply-To: <797a9f130903071316i2dbe2795k41d38b383cb85991@mail.gmail.com>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>
	<20090306153911.177030@gmx.net>
	<797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
	<49B27415.8010709@gmx.de>
	<797a9f130903071316i2dbe2795k41d38b383cb85991@mail.gmail.com>
Message-ID: <e24c4c270903072000i627f21f3m1e9c27cff2f0c6cf@mail.gmail.com>

Hi Anders,

I have a fairly simpler grammar that has unary minus working ok.
Perhaps it might provide some hints...

http://code.google.com/p/jai-tools/source/browse/trunk/jiffle/src/main/antlr/jaitools/jiffle/parser/Jiffle.g

Look for the unary_expr rule.  I doubt if how I do it is best practice
but it works.

Michael

From fdmanana at ieee.org  Sun Mar  8 03:48:53 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Sun, 8 Mar 2009 11:48:53 +0100
Subject: [antlr-interest] TokenRewriteStream
Message-ID: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>

Hello,

I am trying to add a token into the token stream before the parser's
starting rule (method) is invoked.
I am doing it using a TokenRewriteStream and like this:

        ANTLRInputStream input = new ANTLRInputStream(inputStream);
        this.lexer = new JavaScriptLexer(input);
        TokenRewriteStream tokens = new TokenRewriteStream(lexer);

        // debug
        System.err.println("token stream: " + tokens.toString());

        tokens.insertAfter(tokens.getTokens().size(), ";");

        this.parser = new JavaScriptParser(tokens);

        // debug
        System.err.println("token stream: " + tokens.toString());
        System.err.println("token index: " + tokens.index());

The problem is that the parser seems to ignore the appended token.
The original token stream is:   "var a = 1<EOF>"
The output of the previous println statements is:

token stream:
token stream: var a = 1;

What am I doing wrong?
Or is there a better way to do it?

thank you


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090308/a3d5322a/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  8 10:03:50 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Mar 2009 10:03:50 -0700
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
Message-ID: <0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>

maybe index should be size-1?
T
On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:

> Hello,
>
> I am trying to add a token into the token stream before the parser's  
> starting rule (method) is invoked.
> I am doing it using a TokenRewriteStream and like this:
>
>         ANTLRInputStream input = new ANTLRInputStream(inputStream);
>         this.lexer = new JavaScriptLexer(input);
>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>
>         tokens.insertAfter(tokens.getTokens().size(), ";");
>
>         this.parser = new JavaScriptParser(tokens);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>         System.err.println("token index: " + tokens.index());
>
> The problem is that the parser seems to ignore the appended token.
> The original token stream is:   "var a = 1<EOF>"
> The output of the previous println statements is:
>
> token stream:
> token stream: var a = 1;
>
> What am I doing wrong?
> Or is there a better way to do it?
>
> thank you
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090308/53f74198/attachment.html 

From fdmanana at ieee.org  Sun Mar  8 11:52:22 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Sun, 8 Mar 2009 19:52:22 +0100
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
Message-ID: <cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>

Hi Terence,

Nop, I tried it and it doesn't work either.
It seems the parser gets only the original, unmodified, token stream.

Any other suggestion?

thanks

On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> maybe index should be size-1?T
> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>
> Hello,
>
> I am trying to add a token into the token stream before the parser's
> starting rule (method) is invoked.
> I am doing it using a TokenRewriteStream and like this:
>
>         ANTLRInputStream input = new ANTLRInputStream(inputStream);
>         this.lexer = new JavaScriptLexer(input);
>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>
>         tokens.insertAfter(tokens.getTokens().size(), ";");
>
>         this.parser = new JavaScriptParser(tokens);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>         System.err.println("token index: " + tokens.index());
>
> The problem is that the parser seems to ignore the appended token.
> The original token stream is:   "var a = 1<EOF>"
> The output of the previous println statements is:
>
> token stream:
> token stream: var a = 1;
>
> What am I doing wrong?
> Or is there a better way to do it?
>
> thank you
>
>
> --
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090308/ac51b6cc/attachment.html 

From fdmanana at ieee.org  Sun Mar  8 12:00:52 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Sun, 8 Mar 2009 20:00:52 +0100
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
	<cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
Message-ID: <cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>

For the input "var a = 1<EOF>", even if I insert the ";" token in the middle
of the stream, the parser gives me the error that encountered an unexpected
<EOF> after the "1" literal. Clearly it should report some other error. This
is why I state that it ignores the modified token stream.

E.g. :

        TokenRewriteStream tokens = new TokenRewriteStream(lexer);

        // debug
        System.err.println("token stream: " + tokens.toString());
        tokens.insertAfter(tokens.getTokens().size() - 2, ";");

        this.parser = new JavaScriptParser(tokens);

        // debug
        System.err.println("token stream: " + tokens.toString());
        System.err.println("token index: " + tokens.index());

running my parser, a feeding it with "var a = 1<EOF>" :

fdmanana at core2duo:~/projects/test$ java -jar test.jar -
var a = 1token stream:
token stream: var a = ;1
token index: 0
Error(s) found while parsing standard input

    line 0:-1 no viable alternative at input '<EOF>'
fdmanana at core2duo:~/projects/test$

If I provide " var a = ;1<EOF>" I get the expected error:  "line 1:8 no
viable alternative at input ';'".
Therefore this forces me to believe the parser/lexer ignores the modifed
token stream.

Any suggestion?

thanks


On Sun, Mar 8, 2009 at 7:52 PM, Filipe David Manana <fdmanana at ieee.org>wrote:

> Hi Terence,
>
> Nop, I tried it and it doesn't work either.
> It seems the parser gets only the original, unmodified, token stream.
>
> Any other suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> maybe index should be size-1?T
>> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>>
>> Hello,
>>
>> I am trying to add a token into the token stream before the parser's
>> starting rule (method) is invoked.
>> I am doing it using a TokenRewriteStream and like this:
>>
>>         ANTLRInputStream input = new ANTLRInputStream(inputStream);
>>         this.lexer = new JavaScriptLexer(input);
>>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>         // debug
>>         System.err.println("token stream: " + tokens.toString());
>>
>>         tokens.insertAfter(tokens.getTokens().size(), ";");
>>
>>         this.parser = new JavaScriptParser(tokens);
>>
>>         // debug
>>         System.err.println("token stream: " + tokens.toString());
>>         System.err.println("token index: " + tokens.index());
>>
>> The problem is that the parser seems to ignore the appended token.
>> The original token stream is:   "var a = 1<EOF>"
>> The output of the previous println statements is:
>>
>> token stream:
>> token stream: var a = 1;
>>
>> What am I doing wrong?
>> Or is there a better way to do it?
>>
>> thank you
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
>
> --
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090308/44afbf6d/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  8 12:07:28 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Mar 2009 12:07:28 -0700
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
	<cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
	<cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
Message-ID: <8FC5EFB0-44F9-4C58-8501-987AF6A125BA@cs.usfca.edu>

uh a=;1 is bad input. why would you expect anything other than a parse  
error? clearly it's inserting something into input stream, which is  
what you told it to do, right?
Ter
On Mar 8, 2009, at 12:00 PM, Filipe David Manana wrote:

> For the input "var a = 1<EOF>", even if I insert the ";" token in  
> the middle of the stream, the parser gives me the error that  
> encountered an unexpected <EOF> after the "1" literal. Clearly it  
> should report some other error. This is why I state that it ignores  
> the modified token stream.
>
> E.g. :
>
>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>         tokens.insertAfter(tokens.getTokens().size() - 2, ";");
>
>         this.parser = new JavaScriptParser(tokens);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>         System.err.println("token index: " + tokens.index());
>
> running my parser, a feeding it with "var a = 1<EOF>" :
>
> fdmanana at core2duo:~/projects/test$ java -jar test.jar -
> var a = 1token stream:
> token stream: var a = ;1
> token index: 0
> Error(s) found while parsing standard input
>
>     line 0:-1 no viable alternative at input '<EOF>'
> fdmanana at core2duo:~/projects/test$
>
> If I provide " var a = ;1<EOF>" I get the expected error:  "line 1:8  
> no viable alternative at input ';'".
> Therefore this forces me to believe the parser/lexer ignores the  
> modifed token stream.
>
> Any suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 7:52 PM, Filipe David Manana  
> <fdmanana at ieee.org> wrote:
> Hi Terence,
>
> Nop, I tried it and it doesn't work either.
> It seems the parser gets only the original, unmodified, token stream.
>
> Any other suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> maybe index should be size-1?
> T
> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>
>> Hello,
>>
>> I am trying to add a token into the token stream before the  
>> parser's starting rule (method) is invoked.
>> I am doing it using a TokenRewriteStream and like this:
>>
>>         ANTLRInputStream input = new ANTLRInputStream(inputStream);
>>         this.lexer = new JavaScriptLexer(input);
>>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>         // debug
>>         System.err.println("token stream: " + tokens.toString());
>>
>>         tokens.insertAfter(tokens.getTokens().size(), ";");
>>
>>         this.parser = new JavaScriptParser(tokens);
>>
>>         // debug
>>         System.err.println("token stream: " + tokens.toString());
>>         System.err.println("token index: " + tokens.index());
>>
>> The problem is that the parser seems to ignore the appended token.
>> The original token stream is:   "var a = 1<EOF>"
>> The output of the previous println statements is:
>>
>> token stream:
>> token stream: var a = 1;
>>
>> What am I doing wrong?
>> Or is there a better way to do it?
>>
>> thank you
>>
>>
>> -- 
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup? 
>> op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>


From parrt at cs.usfca.edu  Sun Mar  8 12:14:32 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Mar 2009 12:14:32 -0700
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
	<cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
	<cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
Message-ID: <4604B4D4-BD07-41A6-898E-AD8D67B24F8A@cs.usfca.edu>

Oh wait...you are parsing original stream. rewrite stream only give  
modified txt not tokens. create new lexer attached to  
tokens.toString() output.
T
On Mar 8, 2009, at 12:00 PM, Filipe David Manana wrote:

> For the input "var a = 1<EOF>", even if I insert the ";" token in  
> the middle of the stream, the parser gives me the error that  
> encountered an unexpected <EOF> after the "1" literal. Clearly it  
> should report some other error. This is why I state that it ignores  
> the modified token stream.
>
> E.g. :
>
>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>         tokens.insertAfter(tokens.getTokens().size() - 2, ";");
>
>         this.parser = new JavaScriptParser(tokens);
>
>         // debug
>         System.err.println("token stream: " + tokens.toString());
>         System.err.println("token index: " + tokens.index());
>
> running my parser, a feeding it with "var a = 1<EOF>" :
>
> fdmanana at core2duo:~/projects/test$ java -jar test.jar -
> var a = 1token stream:
> token stream: var a = ;1
> token index: 0
> Error(s) found while parsing standard input
>
>     line 0:-1 no viable alternative at input '<EOF>'
> fdmanana at core2duo:~/projects/test$
>
> If I provide " var a = ;1<EOF>" I get the expected error:  "line 1:8  
> no viable alternative at input ';'".
> Therefore this forces me to believe the parser/lexer ignores the  
> modifed token stream.
>
> Any suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 7:52 PM, Filipe David Manana  
> <fdmanana at ieee.org> wrote:
> Hi Terence,
>
> Nop, I tried it and it doesn't work either.
> It seems the parser gets only the original, unmodified, token stream.
>
> Any other suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> maybe index should be size-1?
> T
> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>
>> Hello,
>>
>> I am trying to add a token into the token stream before the  
>> parser's starting rule (method) is invoked.
>> I am doing it using a TokenRewriteStream and like this:
>>
>>         ANTLRInputStream input = new ANTLRInputStream(inputStream);
>>         this.lexer = new JavaScriptLexer(input);
>>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>         // debug
>>         System.err.println("token stream: " + tokens.toString());
>>
>>         tokens.insertAfter(tokens.getTokens().size(), ";");
>>
>>         this.parser = new JavaScriptParser(tokens);
>>
>>         // debug
>>         System.err.println("token stream: " + tokens.toString());
>>         System.err.println("token index: " + tokens.index());
>>
>> The problem is that the parser seems to ignore the appended token.
>> The original token stream is:   "var a = 1<EOF>"
>> The output of the previous println statements is:
>>
>> token stream:
>> token stream: var a = 1;
>>
>> What am I doing wrong?
>> Or is there a better way to do it?
>>
>> thank you
>>
>>
>> -- 
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup? 
>> op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>


From mgawinecki at gmail.com  Sun Mar  8 12:44:25 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Sun, 08 Mar 2009 20:44:25 +0100
Subject: [antlr-interest] skipping whitespaces in code and avoiding it in
	comments
Message-ID: <49B42019.6060709@gmail.com>

Hello,

Lexer can /skip/ or send to /hidden channel/ the tokens that are 
whitespaces.

However I would like it not to skip them when the parser recognizes a 
comment fragment, because I want to buffer comments including their 
whitespaces.

It is trivial to pass some information inside of parser instance via 
instance variables but how can I pass informatiom from a parser to a 
lexer to temporary avoid skipping whitespaces? Or there is some 
workaround for my goal?

Thanks for your time,
Maciej

ps. Below is the grammar that accept statements with comments like:

   x = 5; // this is my x

Together with trial (of course not working) to passing information about 
comments turned on/off.

------------------------
grammar sqltest;

@members {
   boolean isComment = false;
}

file 	:	statement EOF ;

statement
	:	id '=' value ';' ('//' comment)?
	
	{
		System.out.println($id.text + ':' + $comment.text) ;	
	};


value 	:	DIGIT+ ;
id 	:	LETTER+ ;
	
comment
@init{ isComment = true; }
@after{ isComment = false; }
	:	(LETTER|DIGIT)* ;
	
LETTER 	:	'a'..'z'|'A'..'Z' ;

DIGIT
	:	'0'..'9' ;

WS
     :   (
              ' '
         |    '\r'
         |    '\t'
         |    '\n'
         )
             {
             	if (!isComment)               	
                 	skip();
             }
     ;		


From s.barnett-cormack at lancaster.ac.uk  Sun Mar  8 13:03:42 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 08 Mar 2009 20:03:42 +0000
Subject: [antlr-interest] skipping whitespaces in code and avoiding it
 in	comments
In-Reply-To: <49B42019.6060709@gmail.com>
References: <49B42019.6060709@gmail.com>
Message-ID: <49B4249E.6010204@lancaster.ac.uk>

Maciej Gawinecki wrote:
> Hello,
> 
> Lexer can /skip/ or send to /hidden channel/ the tokens that are 
> whitespaces.
> 
> However I would like it not to skip them when the parser recognizes a 
> comment fragment, because I want to buffer comments including their 
> whitespaces.
<SNIP>
> value 	:	DIGIT+ ;
> id 	:	LETTER+ ;
> 	
> comment
> @init{ isComment = true; }
> @after{ isComment = false; }
> 	:	(LETTER|DIGIT)* ;
> 	
> LETTER 	:	'a'..'z'|'A'..'Z' ;
> 
> DIGIT
> 	:	'0'..'9' ;
> 
> WS
>      :   (
>               ' '
>          |    '\r'
>          |    '\t'
>          |    '\n'
>          )
>              {
>              	if (!isComment)               	
>                  	skip();
>              }
>      ;		

It's far more common to make VALUE, ID, and COMMENT token types (and 
comment different to what you have now - from // to newline inclusive is 
more normal). Then you put the comments and the WS on the hidden 
channel. Tokens are usually complete lexical elements - not single 
characters. Otherwise, the parser may as well be working on the input 
stream rather than a token stream.

-- 

Sam Barnett-Cormack

From antlr at mirality.co.nz  Sun Mar  8 13:04:45 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 09 Mar 2009 09:04:45 +1300
Subject: [antlr-interest] skipping whitespaces in code and avoiding it
 in comments
In-Reply-To: <49B42019.6060709@gmail.com>
References: <49B42019.6060709@gmail.com>
Message-ID: <20090308200510.E68F83418462@www.antlr.org>

At 08:44 9/03/2009, Maciej Gawinecki wrote:
 >Lexer can /skip/ or send to /hidden channel/ the tokens that are 

 >whitespaces.
 >
 >However I would like it not to skip them when the parser 
recognizes
 >a comment fragment, because I want to buffer comments including
 >their whitespaces.

Provided that there are some lexically unique markers for comments 
(like there appears to be in your language, bounded by // and 
newline), then by far the easiest/best thing to do is to match the 
entire comment in a single lexer rule.  That way it'll 
automatically include all the whitespace, without any need to mess 
with the normal WS rule.


From mgawinecki at gmail.com  Sun Mar  8 13:24:48 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Sun, 08 Mar 2009 21:24:48 +0100
Subject: [antlr-interest] skipping whitespaces in code and avoiding it
 in comments
In-Reply-To: <49b424ea.170bca0a.4ff8.6d48SMTPIN_ADDED@mx.google.com>
References: <49B42019.6060709@gmail.com>
	<49b424ea.170bca0a.4ff8.6d48SMTPIN_ADDED@mx.google.com>
Message-ID: <49B42990.4060402@gmail.com>

Gavin, Sam

Thanks a lot. BTW, I have seen few mailing list with such short response 
time as yours :-)

Maciej

Gavin Lambert pisze:
> At 08:44 9/03/2009, Maciej Gawinecki wrote:
>  >Lexer can /skip/ or send to /hidden channel/ the tokens that are
>  >whitespaces.
>  >
>  >However I would like it not to skip them when the parser recognizes
>  >a comment fragment, because I want to buffer comments including
>  >their whitespaces.
> 
> Provided that there are some lexically unique markers for comments (like 
> there appears to be in your language, bounded by // and newline), then 
> by far the easiest/best thing to do is to match the entire comment in a 
> single lexer rule.  That way it'll automatically include all the 
> whitespace, without any need to mess with the normal WS rule.
> 
> 


From yimm8369 at hotmail.com  Sun Mar  8 15:27:26 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Mon, 9 Mar 2009 06:27:26 +0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
 work?
In-Reply-To: <A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
	<BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
	<A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>
Message-ID: <BAY122-W3128D50107B35207F38909DBA30@phx.gbl>



But there's some errors as the red color shows: 

 

additiveExpression
    
    :   ^(ADDITIVE_EXPRESSION multiplicativeExpression+)             (106): reference to undefined rule: multiplicativeExpression                     
    ;
   

multiplicativeExpression
  
    :^(DIV unaryExpression+)          (106): reference to undefined rule: unaryExpression
    |^(MOD unaryExpression+)         (106): reference to undefined rule: unaryExpression
    |^(STAR u1=unaryExpression u2=unaryExpression)  ->{if($u2.text==2)}? assgin(x={$u1.text},y={$u2.text},z={"<<"})
    ;                                               (100): syntax error: antlr: expecting REWRITE, found ';'


unaryExpression
    : ^(UNARY_EXPRESSION unaryOp? postfixExpression)      (100): syntax error: antlr: expecting SEMI, found ')'
    ;     

 

If I delete  ->{if($u2.text==2)}? assgin(x={$u1.text},y={$u2.text},z={"<<"}) , all the errors are gone. I am not sure what is the problem.

 

Thanks.

 

Ann


    

 

 

 

 

 

 
> CC: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> To: yimm8369 at hotmail.com
> Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate does not work?
> Date: Fri, 6 Mar 2009 15:56:11 -0800
> 
> 
> On Mar 6, 2009, at 3:46 PM, YingAnnie wrote:
> 
> >
> > So, what I expect is that when the code is "a=b*c", and c==2, then 
> > change * to /.
> >
> > multiplicativeExpression
> > :^(STAR u1=unaryExpression u2=unaryExpression) -> 
> > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > ;
> >
> > group T;
> > assgin(x,y,z)::= <<
> > <if(y==2)><x><z><y><else><"error"><endif>
> >
> > If I can not test the value of attributes within ST,Then it has to 
> > be done in the tree grammar. can I do something like this:
> >
> > multiplicativeExpression
> > :^(STAR u1=unaryExpression u2='2') -> 
> > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > ;
> 
> Almost. you need predicated -> alternatives
> 
> -> {..}? template one
> -> {...}? template two
> -> else template
> 
> T

_________________________________________________________________
??K???????????????????MClub????
http://club.msn.cn/?form=3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/e7bf13a0/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  8 15:36:01 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Mar 2009 15:36:01 -0700
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
	work?
In-Reply-To: <BAY122-W3128D50107B35207F38909DBA30@phx.gbl>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
	<BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
	<A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>
	<BAY122-W3128D50107B35207F38909DBA30@phx.gbl>
Message-ID: <7E9225CE-60C3-4FE7-81B9-480DD02BCF26@cs.usfca.edu>

remove if from predicate. it's an expression.
ter
On Mar 8, 2009, at 3:27 PM, YINGAnnie wrote:

>
> But there's some errors as the red color shows:
>
> additiveExpression
>
>     :   ^(ADDITIVE_EXPRESSION multiplicativeExpression+)              
> (106): reference to undefined rule: multiplicativeExpression
>     ;
>
>
> multiplicativeExpression
>
>     :^(DIV unaryExpression+)          (106): reference to undefined  
> rule: unaryExpression
>     |^(MOD unaryExpression+)         (106): reference to undefined  
> rule: unaryExpression
>     |^(STAR u1=unaryExpression u2=unaryExpression)  - 
> >{if($u2.text==2)}? assgin(x={$u1.text},y={$u2.text},z={"<<"})
>     ;                                               (100): syntax  
> error: antlr: expecting REWRITE, found ';'
>
> unaryExpression
>     : ^(UNARY_EXPRESSION unaryOp? postfixExpression)      (100):  
> syntax error: antlr: expecting SEMI, found ')'
>     ;
>
> If I delete  ->{if($u2.text==2)}?  
> assgin(x={$u1.text},y={$u2.text},z={"<<"}) , all the errors are  
> gone. I am not sure what is the problem.
>
> Thanks.
>
> Ann
>
>
>
>
>
>
>
>
> > CC: antlr-interest at antlr.org
> > From: parrt at cs.usfca.edu
> > To: yimm8369 at hotmail.com
> > Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate  
> does not work?
> > Date: Fri, 6 Mar 2009 15:56:11 -0800
> >
> >
> > On Mar 6, 2009, at 3:46 PM, YingAnnie wrote:
> >
> > >
> > > So, what I expect is that when the code is "a=b*c", and c==2, then
> > > change * to /.
> > >
> > > multiplicativeExpression
> > > :^(STAR u1=unaryExpression u2=unaryExpression) ->
> > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > ;
> > >
> > > group T;
> > > assgin(x,y,z)::= <<
> > > <if(y==2)><x><z><y><else><"error"><endif>
> > >
> > > If I can not test the value of attributes within ST,Then it has to
> > > be done in the tree grammar. can I do something like this:
> > >
> > > multiplicativeExpression
> > > :^(STAR u1=unaryExpression u2='2') ->
> > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > ;
> >
> > Almost. you need predicated -> alternatives
> >
> > -> {..}? template one
> > -> {...}? template two
> > -> else template
> >
> > T
>
> ?MSN???????????????? ?????
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From yimm8369 at hotmail.com  Sun Mar  8 15:41:56 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Mon, 9 Mar 2009 06:41:56 +0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
 work?
In-Reply-To: <7E9225CE-60C3-4FE7-81B9-480DD02BCF26@cs.usfca.edu>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
	<BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
	<A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>
	<BAY122-W3128D50107B35207F38909DBA30@phx.gbl>
	<7E9225CE-60C3-4FE7-81B9-480DD02BCF26@cs.usfca.edu>
Message-ID: <BAY122-W50ED645F835C3DD2587862DBA30@phx.gbl>



 like this?

 

multiplicativeExpression
  
    :^(DIV unaryExpression+)
    |^(MOD unaryExpression+)  
    |^(STAR u1=unaryExpression u2=unaryExpression)  ->{$u2.text==2}? assgin(x={$u1.text},y={$u2.text},z={"<<"})
    ;

 

 

The errors are still there.

 

 

Ann

 
> CC: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> To: yimm8369 at hotmail.com
> Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate does not work?
> Date: Sun, 8 Mar 2009 15:36:01 -0700
> 
> remove if from predicate. it's an expression.
> ter
> On Mar 8, 2009, at 3:27 PM, YINGAnnie wrote:
> 
> >
> > But there's some errors as the red color shows:
> >
> > additiveExpression
> >
> > : ^(ADDITIVE_EXPRESSION multiplicativeExpression+) 
> > (106): reference to undefined rule: multiplicativeExpression
> > ;
> >
> >
> > multiplicativeExpression
> >
> > :^(DIV unaryExpression+) (106): reference to undefined 
> > rule: unaryExpression
> > |^(MOD unaryExpression+) (106): reference to undefined 
> > rule: unaryExpression
> > |^(STAR u1=unaryExpression u2=unaryExpression) - 
> > >{if($u2.text==2)}? assgin(x={$u1.text},y={$u2.text},z={"<<"})
> > ; (100): syntax 
> > error: antlr: expecting REWRITE, found ';'
> >
> > unaryExpression
> > : ^(UNARY_EXPRESSION unaryOp? postfixExpression) (100): 
> > syntax error: antlr: expecting SEMI, found ')'
> > ;
> >
> > If I delete ->{if($u2.text==2)}? 
> > assgin(x={$u1.text},y={$u2.text},z={"<<"}) , all the errors are 
> > gone. I am not sure what is the problem.
> >
> > Thanks.
> >
> > Ann
> >
> >
> >
> >
> >
> >
> >
> >
> > > CC: antlr-interest at antlr.org
> > > From: parrt at cs.usfca.edu
> > > To: yimm8369 at hotmail.com
> > > Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate 
> > does not work?
> > > Date: Fri, 6 Mar 2009 15:56:11 -0800
> > >
> > >
> > > On Mar 6, 2009, at 3:46 PM, YingAnnie wrote:
> > >
> > > >
> > > > So, what I expect is that when the code is "a=b*c", and c==2, then
> > > > change * to /.
> > > >
> > > > multiplicativeExpression
> > > > :^(STAR u1=unaryExpression u2=unaryExpression) ->
> > > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > > ;
> > > >
> > > > group T;
> > > > assgin(x,y,z)::= <<
> > > > <if(y==2)><x><z><y><else><"error"><endif>
> > > >
> > > > If I can not test the value of attributes within ST,Then it has to
> > > > be done in the tree grammar. can I do something like this:
> > > >
> > > > multiplicativeExpression
> > > > :^(STAR u1=unaryExpression u2='2') ->
> > > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > > ;
> > >
> > > Almost. you need predicated -> alternatives
> > >
> > > -> {..}? template one
> > > -> {...}? template two
> > > -> else template
> > >
> > > T
> >
> > ?MSN???????????????? ?????
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/7619a5b0/attachment.html 

From parrt at cs.usfca.edu  Sun Mar  8 15:45:22 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 8 Mar 2009 15:45:22 -0700
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
	work?
In-Reply-To: <BAY122-W50ED645F835C3DD2587862DBA30@phx.gbl>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
	<BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
	<A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>
	<BAY122-W3128D50107B35207F38909DBA30@phx.gbl>
	<7E9225CE-60C3-4FE7-81B9-480DD02BCF26@cs.usfca.edu>
	<BAY122-W50ED645F835C3DD2587862DBA30@phx.gbl>
Message-ID: <F6E6C218-B6FD-4731-A889-436D14CAC480@cs.usfca.edu>

does String==int make sense?
Ter
On Mar 8, 2009, at 3:41 PM, YINGAnnie wrote:

>
>  like this?
>
> multiplicativeExpression
>
>     :^(DIV unaryExpression+)
>     |^(MOD unaryExpression+)
>     |^(STAR u1=unaryExpression u2=unaryExpression)  ->{$u2.text==2}?  
> assgin(x={$u1.text},y={$u2.text},z={"<<"})
>     ;
>
>
> The errors are still there.
>
>
> Ann
>
> > CC: antlr-interest at antlr.org
> > From: parrt at cs.usfca.edu
> > To: yimm8369 at hotmail.com
> > Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate  
> does not work?
> > Date: Sun, 8 Mar 2009 15:36:01 -0700
> >
> > remove if from predicate. it's an expression.
> > ter
> > On Mar 8, 2009, at 3:27 PM, YINGAnnie wrote:
> >
> > >
> > > But there's some errors as the red color shows:
> > >
> > > additiveExpression
> > >
> > > : ^(ADDITIVE_EXPRESSION multiplicativeExpression+)
> > > (106): reference to undefined rule: multiplicativeExpression
> > > ;
> > >
> > >
> > > multiplicativeExpression
> > >
> > > :^(DIV unaryExpression+) (106): reference to undefined
> > > rule: unaryExpression
> > > |^(MOD unaryExpression+) (106): reference to undefined
> > > rule: unaryExpression
> > > |^(STAR u1=unaryExpre ssion u2=unaryExpression) -
> > > >{if($u2.text==2)}? assgin(x={$u1.text},y={$u2.text},z={"<<"})
> > > ; (100): syntax
> > > error: antlr: expecting REWRITE, found ';'
> > >
> > > unaryExpression
> > > : ^(UNARY_EXPRESSION unaryOp? postfixExpression) (100):
> > > syntax error: antlr: expecting SEMI, found ')'
> > > ;
> > >
> > > If I delete ->{if($u2.text==2)}?
> > > assgin(x={$u1.text},y={$u2.text},z={"<<"}) , all the errors are
> > > gone. I am not sure what is the problem.
> > >
> > > Thanks.
> > >
> > > Ann
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> > > > CC: antlr-interest at antlr.org
> > > > From: parrt at cs.usfca.edu
> > > > To: yimm8369 at hotmail.com
> > > > Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate
> > > ; does not work?
> > > > Date: Fri, 6 Mar 2009 15:56:11 -0800
> > > >
> > > >
> > > > On Mar 6, 2009, at 3:46 PM, YingAnnie wrote:
> > > >
> > > > >
> > > > > So, what I expect is that when the code is "a=b*c", and  
> c==2, then
> > > > > change * to /.
> > > > >
> > > > > multiplicativeExpression
> > > > > :^(STAR u1=unaryExpression u2=unaryExpression) ->
> > > > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > > > ;
> > > > >
> > > > > group T;
> > > > > assgin(x,y,z)::= <<
> > > > > <if(y==2)><x><z><y><else><"error"><endif>
> > > > >
> > > > > If I can not test the value of attributes within ST,Then it  
> has to
> > > > > be done in the tree grammar. can I do something like this:
> > ; > > >
> > > > > multiplicativeExpression
> > > > > :^(STAR u1=unaryExpression u2='2') ->
> > > > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > > > ;
> > > >
> > > > Almost. you need predicated -> alternatives
> > > >
> > > > -> {..}? template one
> > > > -> {...}? template two
> > > > -> else template
> > > >
> > > > T
> > >
> > > ?MSN???????????????? ?????
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> ???? MSN ?????? MSN ????? ??????


From yimm8369 at hotmail.com  Sun Mar  8 17:32:10 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Mon, 9 Mar 2009 08:32:10 +0800
Subject: [antlr-interest] why <if(y==2 )> in Stringtemplate does not
 work?
In-Reply-To: <F6E6C218-B6FD-4731-A889-436D14CAC480@cs.usfca.edu>
References: <BAY122-W149CF25F0CD5E6B548AB8DDBA50@phx.gbl>
	<79C4ECF0-5DB5-43E3-9B00-9CD3EEA373C3@cs.usfca.edu>
	<BAY122-W47B27E1ACFD7C4D3FB27D0DBA50@phx.gbl>
	<A93141EC-9D5F-472E-9B06-216CE2E83311@cs.usfca.edu>
	<BAY122-W3128D50107B35207F38909DBA30@phx.gbl>
	<7E9225CE-60C3-4FE7-81B9-480DD02BCF26@cs.usfca.edu>
	<BAY122-W50ED645F835C3DD2587862DBA30@phx.gbl>
	<F6E6C218-B6FD-4731-A889-436D14CAC480@cs.usfca.edu>
Message-ID: <BAY122-W262F23AA0E575DCC2DB8B9DBA00@phx.gbl>



 

 

okie, finally, the problem has been sovled. Thank you very much.

But there is an other problem, the original grammar of multiplicativeExpression is like this:

 

multiplicativeExpression
    :   unaryExpression ( (STAR|DIV|MOD) unaryExpression)*   ->^(MULTIPLICATIVE_EXPRESSION unaryExpression+)
    ;

 

It works fine, however, I want to match the STAR|DIV|MOD ,therefore I changed the multiplicativeExpression as follows:
multiplicativeExpression
    :   unaryExpression ->^(MULTIPLICATIVE_EXPRESSION unaryExpression)

    |  unaryExpression ( (STAR|DIV|MOD)^ unaryExpression)+

    ;

 

But the error of lookahead occurs and it consume lots of memory. 

 

In tree grammar ,the related code is as follows:

  multiplicativeExpression
    :^(MULTIPLICATIVE_EXPRESSION unaryExpression)

    |^(DIV unaryExpression+)
    |^(MOD unaryExpression+)  
    |^(STAR u1=unaryExpression u2=unaryExpression)   
   

Therefore, Could I have different roots in the same rule? like MULTIPLICATIVE_EXPRESSION^ and (STAR|DIV|MOD)^ ?

 

Annie

 
> CC: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> To: yimm8369 at hotmail.com
> Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate does not work?
> Date: Sun, 8 Mar 2009 15:45:22 -0700
> 
> does String==int make sense?
> Ter
> On Mar 8, 2009, at 3:41 PM, YINGAnnie wrote:
> 
> >
> > like this?
> >
> > multiplicativeExpression
> >
> > :^(DIV unaryExpression+)
> > |^(MOD unaryExpression+)
> > |^(STAR u1=unaryExpression u2=unaryExpression) ->{$u2.text==2}? 
> > assgin(x={$u1.text},y={$u2.text},z={"<<"})
> > ;
> >
> >
> > The errors are still there.
> >
> >
> > Ann
> >
> > > CC: antlr-interest at antlr.org
> > > From: parrt at cs.usfca.edu
> > > To: yimm8369 at hotmail.com
> > > Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate 
> > does not work?
> > > Date: Sun, 8 Mar 2009 15:36:01 -0700
> > >
> > > remove if from predicate. it's an expression.
> > > ter
> > > On Mar 8, 2009, at 3:27 PM, YINGAnnie wrote:
> > >
> > > >
> > > > But there's some errors as the red color shows:
> > > >
> > > > additiveExpression
> > > >
> > > > : ^(ADDITIVE_EXPRESSION multiplicativeExpression+)
> > > > (106): reference to undefined rule: multiplicativeExpression
> > > > ;
> > > >
> > > >
> > > > multiplicativeExpression
> > > >
> > > > :^(DIV unaryExpression+) (106): reference to undefined
> > > > rule: unaryExpression
> > > > |^(MOD unaryExpression+) (106): reference to undefined
> > > > rule: unaryExpression
> > > > |^(STAR u1=unaryExpre ssion u2=unaryExpression) -
> > > > >{if($u2.text==2)}? assgin(x={$u1.text},y={$u2.text},z={"<<"})
> > > > ; (100): syntax
> > > > error: antlr: expecting REWRITE, found ';'
> > > >
> > > > unaryExpression
> > > > : ^(UNARY_EXPRESSION unaryOp? postfixExpression) (100):
> > > > syntax error: antlr: expecting SEMI, found ')'
> > > > ;
> > > >
> > > > If I delete ->{if($u2.text==2)}?
> > > > assgin(x={$u1.text},y={$u2.text},z={"<<"}) , all the errors are
> > > > gone. I am not sure what is the problem.
> > > >
> > > > Thanks.
> > > >
> > > > Ann
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >
> > > >
> > > > > CC: antlr-interest at antlr.org
> > > > > From: parrt at cs.usfca.edu
> > > > > To: yimm8369 at hotmail.com
> > > > > Subject: Re: [antlr-interest] why <if(y==2 )> in Stringtemplate
> > > > ; does not work?
> > > > > Date: Fri, 6 Mar 2009 15:56:11 -0800
> > > > >
> > > > >
> > > > > On Mar 6, 2009, at 3:46 PM, YingAnnie wrote:
> > > > >
> > > > > >
> > > > > > So, what I expect is that when the code is "a=b*c", and 
> > c==2, then
> > > > > > change * to /.
> > > > > >
> > > > > > multiplicativeExpression
> > > > > > :^(STAR u1=unaryExpression u2=unaryExpression) ->
> > > > > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > > > > ;
> > > > > >
> > > > > > group T;
> > > > > > assgin(x,y,z)::= <<
> > > > > > <if(y==2)><x><z><y><else><"error"><endif>
> > > > > >
> > > > > > If I can not test the value of attributes within ST,Then it 
> > has to
> > > > > > be done in the tree grammar. can I do something like this:
> > > ; > > >
> > > > > > multiplicativeExpression
> > > > > > :^(STAR u1=unaryExpression u2='2') ->
> > > > > > assgin(x={$u1.text},y={$u2.text},z={"/"})
> > > > > > ;
> > > > >
> > > > > Almost. you need predicated -> alternatives
> > > > >
> > > > > -> {..}? template one
> > > > > -> {...}? template two
> > > > > -> else template
> > > > >
> > > > > T
> > > >
> > > > ?MSN???????????????? ?????
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >
> >
> > ???? MSN ?????? MSN ????? ??????
> 

_________________________________________________________________
??K???????????????????MClub????
http://club.msn.cn/?form=3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/0833d7a3/attachment.html 

From g.r.vansickle at att.net  Sun Mar  8 19:05:34 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sun, 8 Mar 2009 21:05:34 -0500
Subject: [antlr-interest] On "How to remove global backtracking"
Message-ID: <85DB2423ADE04363B5CADC9A0986FFD5@DFW5RB41>

Hi guys,

From
<http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+
from+your+grammar>:

"Left-factoring
Now to the three real tools against non-determinism. The first is
left-factoring. Look at the following rule:

a : L b
   | L c
   ;
As you can see, the two L at the beginning prevent that ANTLR can decide
which path is the right path. [...]"

Is this actually true?  The proposed "manual" correction is of course:

"a : L (b | c)
  ;"

Why would this not be trivially reduced automatically by ANTLR, maybe with a
"warning" that this could be reduced in the input grammar?  Even if "L" here
is not a terminal but is intended to be either a terminal or non-terminal,
aren't these two variations in all cases exactly equivalent?

-- 
Gary R. Van Sickle


From mgawinecki at gmail.com  Mon Mar  9 02:37:10 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Mon, 09 Mar 2009 10:37:10 +0100
Subject: [antlr-interest] skipping whitespaces in code and avoiding it
 in	comments
In-Reply-To: <49B4249E.6010204@lancaster.ac.uk>
References: <49B42019.6060709@gmail.com> <49B4249E.6010204@lancaster.ac.uk>
Message-ID: <49B4E346.3090609@gmail.com>

Hello,

Thanks for your response.

Sam Barnett-Cormack wrote:

[cut]

> It's far more common to make VALUE, ID, and COMMENT token types (and 
> comment different to what you have now - from // to newline inclusive is 
> more normal). Then you put the comments and the WS on the hidden 
> channel. 

If I put comments on the hidden channel, then how can I make a parser to 
cache it ?

My goal is to associate single-line comments with "corresponding" 
identifiers of schema elements in SQL.

The specification of the language does not define which comment relates 
to what schema element (table or column). Moreover, SQL'92 standard 
defines comments as yet another separator (similarly to whitespaces), 
that as you said is -- by default sent -- to the hidden channel by a lexer.

Therefore I don't want within my grammar to define explicitly where 
comments about the given identifiers should be (that would be narrowing 
SQL standard) but rather cache (somehow) the comments and identifiers of 
schema elements within rule actions and then apply also some kind of 
heuristic, for instance:

1. if a comment is between <table_definition>s then associate it to the
    following <table_definition>, the not previous one.

2. if a comment is inside of <table_definition> then:

    (a) if a comment is in any line of a <column_definition> then
        associate it with the <column_name> value of this
        <colum_definition> (<column_definition>s can be spanned over more
        then one line)

    (b) otherwise, i.e. if a comment is in a separate line between
        two <column-definition>s then associate it with the <column_name>
        value of the following <column_definition>, not the previous one.

That would require caching line numbers of comments found by lexer and 
passing them to the parser, isn't?

Or there is another way to do it?

Maciej

From anders.hessellund at gmail.com  Mon Mar  9 03:24:46 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Mon, 9 Mar 2009 11:24:46 +0100
Subject: [antlr-interest] unary minus
In-Reply-To: <e24c4c270903072000i627f21f3m1e9c27cff2f0c6cf@mail.gmail.com>
References: <797a9f130903060715k69ce4310m2eb6e7915febbc0d@mail.gmail.com>
	<20090306153911.177030@gmx.net>
	<797a9f130903070347r4e58c8ebvba6f88a65373a659@mail.gmail.com>
	<49B27415.8010709@gmx.de>
	<797a9f130903071316i2dbe2795k41d38b383cb85991@mail.gmail.com>
	<e24c4c270903072000i627f21f3m1e9c27cff2f0c6cf@mail.gmail.com>
Message-ID: <797a9f130903090324m7d4b8621k45bf40ee7d9501c3@mail.gmail.com>

Thanks!

This is very useful indeed!

-- Anders

2009/3/8 Michael Bedward <michael.bedward at gmail.com>

> Hi Anders,
>
> I have a fairly simpler grammar that has unary minus working ok.
> Perhaps it might provide some hints...
>
>
> http://code.google.com/p/jai-tools/source/browse/trunk/jiffle/src/main/antlr/jaitools/jiffle/parser/Jiffle.g
>
> Look for the unary_expr rule.  I doubt if how I do it is best practice
> but it works.
>
> Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/fd482ac0/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Mar  9 04:07:52 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 09 Mar 2009 11:07:52 +0000
Subject: [antlr-interest] skipping whitespaces in code and avoiding it
 in	comments
In-Reply-To: <49B4E346.3090609@gmail.com>
References: <49B42019.6060709@gmail.com> <49B4249E.6010204@lancaster.ac.uk>
	<49B4E346.3090609@gmail.com>
Message-ID: <49B4F888.7050501@lancaster.ac.uk>

Maciej Gawinecki wrote:
> Hello,
> 
> Thanks for your response.
> 
> Sam Barnett-Cormack wrote:
> 
> [cut]
> 
>> It's far more common to make VALUE, ID, and COMMENT token types (and 
>> comment different to what you have now - from // to newline inclusive 
>> is more normal). Then you put the comments and the WS on the hidden 
>> channel. 
> 
> If I put comments on the hidden channel, then how can I make a parser to 
> cache it ?
> 
> My goal is to associate single-line comments with "corresponding" 
> identifiers of schema elements in SQL.
> 
> The specification of the language does not define which comment relates 
> to what schema element (table or column). Moreover, SQL'92 standard 
> defines comments as yet another separator (similarly to whitespaces), 
> that as you said is -- by default sent -- to the hidden channel by a lexer.
> 
> Therefore I don't want within my grammar to define explicitly where 
> comments about the given identifiers should be (that would be narrowing 
> SQL standard) but rather cache (somehow) the comments and identifiers of 
> schema elements within rule actions and then apply also some kind of 
> heuristic, for instance:
> 
> 1. if a comment is between <table_definition>s then associate it to the
>    following <table_definition>, the not previous one.
> 
> 2. if a comment is inside of <table_definition> then:
> 
>    (a) if a comment is in any line of a <column_definition> then
>        associate it with the <column_name> value of this
>        <colum_definition> (<column_definition>s can be spanned over more
>        then one line)
> 
>    (b) otherwise, i.e. if a comment is in a separate line between
>        two <column-definition>s then associate it with the <column_name>
>        value of the following <column_definition>, not the previous one.
> 
> That would require caching line numbers of comments found by lexer and 
> passing them to the parser, isn't?
> 
> Or there is another way to do it?

The whole point of the hidden channel (rather than just discarding) is 
that the parser *can* tune to it, or use it for context checking in 
predicates, or use it in actions. I've never done it, so I can't tell 
you how, but I know it can be done.

Sam

From andreas.meyer at smartshift.de  Mon Mar  9 07:15:46 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 09 Mar 2009 15:15:46 +0100
Subject: [antlr-interest] Accessing the root grammar from an imported grammar
Message-ID: <49B52492.8010509@smartshift.de>

Hi!

Is there a proper way to access the instance of a root grammar class, 
from a grammar that is imported? With some function like 
"getRootGrammar()" ? I have some members defined in my root grammar, and 
would like to access these from some of the imported grammars.

Andreas

From andreas.meyer at smartshift.de  Mon Mar  9 08:30:15 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 09 Mar 2009 16:30:15 +0100
Subject: [antlr-interest] lookahead DFA too big? (resolved, I think)
In-Reply-To: <C9A82EB5-BAE6-48AB-909E-B5E0E2596150@cs.usfca.edu>
References: <49AEDC23.2040609@smartshift.de>
	<49AEE4EA.4060705@apertio.com>	<49B1738B.7040904@smartshift.de>	<E6BBA2CC-3397-4F92-8A94-EAB1CF74CF58@cs.usfca.edu>	<49B17BC3.3040703@smartshift.de>
	<C9A82EB5-BAE6-48AB-909E-B5E0E2596150@cs.usfca.edu>
Message-ID: <49B53607.9060804@smartshift.de>

I have to correct myself: I previously said that the generated DFAs were 
too big. Some were indeed exceeding the 64k limit, but I could fix that 
by splitting up some rules (as suggested). The class-size problem (there 
were 5000 lookahead DFAs with long initialization strings) I could also 
fix by just splitting up the grammar and importing the parts.

But, the actual surprising thing: the rule where I expected the 
biggest/showstopper DFA (the rule that includes all the 800 keywords) 
does not use anything complicated, just a handful of if-then-else. 
Without setting the -Xconversiontimeout to high values (20 seconds) 
ANTLR would timeout in exactly this rule, letting me think that indeed a 
huge prediction DFA is produced there. It seems that the DFA computation 
algorithm tries to determine if it needs a DFA in the first place, and 
it just takes a lot of time until it knows. Having ANTLR compute a 
result faster would be a nice-to-have, but at least it works now, 
despite the 800 keywords :-)

Anyway, I hope others can now avoid this pitfall.

Thank you for your patience and your suggestions!
Andreas


Terence Parr schrieb:
> The problem is that the DFA it creates is just too doggone big.  
> Coincidentally, I have a graduate student who plans on working on DFA  
> minimization; of course that won't help if the NFA to DFA conversion  
> times out because the minimization comes afterwards. If you get to the  
> code generation phase, however, the DFA minimization should help.
>
> Sorry I don't have a good answer for you right now. One thing that you  
> might try is separating the lexer into multiple pieces and then using  
> an import grammar statement. This forces the lexer to be broken up  
> into multiple DFA I believe, one per included lexer.
> Ter
>
> On Mar 6, 2009, at 11:38 AM, Andreas Meyer wrote:
>
>   
>> Terence Parr schrieb:
>>     
>>> Hi Andreas, I'm neck deep in another problem at the moment. Can you
>>> try increasing the timeout?
>>>
>>>  -Xconversiontimeout t  set NFA conversion timeout for each decision
>>>
>>> try 100000 or something liek that.
>>>       
>> Yes, I already did that. Sorry if my initial mail two days back was  
>> too
>> verbose, probably you did not see it :-) The result of running ANTLR  
>> was
>> a huge java file, with lots of definitions for follow-sets (many
>> thousands) and dfa-transitions. The follow-sets issue I resolved  
>> with a
>> perl script (by moving them into a set of static initializer  
>> functions),
>> but the dfa-transitions look a little tricky to move around with perl,
>> so javac still cannot compile the parser.
>>
>> If you think it's feasible to change the corresponding string  
>> templates
>> for a string template newbie (me), I would really appreciate if you
>> could tell me which parts I need to take care of.
>>
>>
>> Thanks a lot!
>> Andreas Meyer
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From jimi at temporal-wave.com  Mon Mar  9 08:38:28 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 09 Mar 2009 08:38:28 -0700
Subject: [antlr-interest] Antlr3 C code
In-Reply-To: <8c8eb5fb0903090828i72621608x4528ea8c168021c6@mail.gmail.com>
References: <8c8eb5fb0903090828i72621608x4528ea8c168021c6@mail.gmail.com>
Message-ID: <49B537F4.3040204@temporal-wave.com>

Gabriele Palma wrote:
> Hi, i'm using antlr v 3 with antlrworks and visual studio 2008.
>
> First thing i would like to know if there's a forum/mailinglist
> regularly read where i can eventually get some basic support on this
> tool or if it is ok to use the email as in this case.
>
> Second thing, when trying to force compile in c++ the generated c
> sources i get this error (the grammar in taken from the C samples,
> somehow modified to include some code)
>
> Error	2	error C2440: '=' : cannot convert from 'void *' to
> 'pCParser_Symbols_SCOPE'	d:\documenti\visual studio
> 2008\projects\cparser\cparser\antlr3 autogen\cparser.c	261	CParser
>
> at this code:
>
> /* Allocate the memory for a new structure if we need one.
>      */
>     if (ctx->pCParser_SymbolsStack->size(ctx->pCParser_SymbolsStack) >
> ctx->pCParser_SymbolsStack_limit)
>     {
>         // The current limit value was less than the number of scopes
> available on the stack so
>         // we can just reuse one. Our limit tracks the stack count, so
> the index of the entry we want
>         // is one less than that, or conveniently, the current value of limit.
>         //
>         newAttributes =
> ctx->pCParser_SymbolsStack->get(ctx->pCParser_SymbolsStack,
> ctx->pCParser_SymbolsStack_limit); <-----here
>     }
>
> Everything is ok if i do not force compile in c++ but let VS compile in C
>
> What i'm doing wrong? (note that the code is not from the actions
> inside my grammar)
>   
Make sure that you are using the latest download from the web site. 
There was a bug here with casting for C++ that is fixed in the code 
generation templates for the current tool download. 3.1.2-1 is the jar 
you will get from the web site download page.

Also look out for a patch to the C runtime later this week to fix an 
issue with converting some tokens to strings.

Jim


From fdmanana at ieee.org  Mon Mar  9 12:13:01 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Mon, 9 Mar 2009 20:13:01 +0100
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <4604B4D4-BD07-41A6-898E-AD8D67B24F8A@cs.usfca.edu>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
	<cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
	<cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
	<4604B4D4-BD07-41A6-898E-AD8D67B24F8A@cs.usfca.edu>
Message-ID: <cadf1c690903091213s6350510epc90fcc1558006f9@mail.gmail.com>

Like this:

        ANTLRInputStream input = new ANTLRInputStream(inputStream);

        this.lexer = new JavaScriptLexer(input);

        TokenRewriteStream tokens = new TokenRewriteStream(lexer);

        tokens.insertAfter(tokens.getTokens().size() - 1, ";");

        this.lexer = new JavaScriptLexer(new
ANTLRStringStream(tokens.toString()));

        this.parser = new JavaScriptParser(tokens);

?
It doesn't work either :(

cheers

On Sun, Mar 8, 2009 at 8:14 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Oh wait...you are parsing original stream. rewrite stream only give
> modified txt not tokens. create new lexer attached to tokens.toString()
> output.
> T
> On Mar 8, 2009, at 12:00 PM, Filipe David Manana wrote:
>
>  For the input "var a = 1<EOF>", even if I insert the ";" token in the
>> middle of the stream, the parser gives me the error that encountered an
>> unexpected <EOF> after the "1" literal. Clearly it should report some other
>> error. This is why I state that it ignores the modified token stream.
>>
>> E.g. :
>>
>>        TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>        // debug
>>        System.err.println("token stream: " + tokens.toString());
>>        tokens.insertAfter(tokens.getTokens().size() - 2, ";");
>>
>>        this.parser = new JavaScriptParser(tokens);
>>
>>        // debug
>>        System.err.println("token stream: " + tokens.toString());
>>        System.err.println("token index: " + tokens.index());
>>
>> running my parser, a feeding it with "var a = 1<EOF>" :
>>
>> fdmanana at core2duo:~/projects/test$ java -jar test.jar -
>> var a = 1token stream:
>> token stream: var a = ;1
>> token index: 0
>> Error(s) found while parsing standard input
>>
>>    line 0:-1 no viable alternative at input '<EOF>'
>> fdmanana at core2duo:~/projects/test$
>>
>> If I provide " var a = ;1<EOF>" I get the expected error:  "line 1:8 no
>> viable alternative at input ';'".
>> Therefore this forces me to believe the parser/lexer ignores the modifed
>> token stream.
>>
>> Any suggestion?
>>
>> thanks
>>
>>
>> On Sun, Mar 8, 2009 at 7:52 PM, Filipe David Manana <fdmanana at ieee.org>
>> wrote:
>> Hi Terence,
>>
>> Nop, I tried it and it doesn't work either.
>> It seems the parser gets only the original, unmodified, token stream.
>>
>> Any other suggestion?
>>
>> thanks
>>
>>
>> On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> maybe index should be size-1?
>> T
>> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>>
>>  Hello,
>>>
>>> I am trying to add a token into the token stream before the parser's
>>> starting rule (method) is invoked.
>>> I am doing it using a TokenRewriteStream and like this:
>>>
>>>        ANTLRInputStream input = new ANTLRInputStream(inputStream);
>>>        this.lexer = new JavaScriptLexer(input);
>>>        TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>>
>>>        // debug
>>>        System.err.println("token stream: " + tokens.toString());
>>>
>>>        tokens.insertAfter(tokens.getTokens().size(), ";");
>>>
>>>        this.parser = new JavaScriptParser(tokens);
>>>
>>>        // debug
>>>        System.err.println("token stream: " + tokens.toString());
>>>        System.err.println("token index: " + tokens.index());
>>>
>>> The problem is that the parser seems to ignore the appended token.
>>> The original token stream is:   "var a = 1<EOF>"
>>> The output of the previous println statements is:
>>>
>>> token stream:
>>> token stream: var a = 1;
>>>
>>> What am I doing wrong?
>>> Or is there a better way to do it?
>>>
>>> thank you
>>>
>>>
>>> --
>>> Filipe David Manana,
>>> fdmanana at ieee.org
>>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>>
>>> "Reasonable men adapt themselves to the world.
>>> Unreasonable men adapt the world to themselves.
>>> That's why all progress depends on unreasonable men."
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/a93515b7/attachment.html 

From parrt at cs.usfca.edu  Mon Mar  9 13:06:01 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Mar 2009 13:06:01 -0700
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <cadf1c690903091213s6350510epc90fcc1558006f9@mail.gmail.com>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
	<cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
	<cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
	<4604B4D4-BD07-41A6-898E-AD8D67B24F8A@cs.usfca.edu>
	<cadf1c690903091213s6350510epc90fcc1558006f9@mail.gmail.com>
Message-ID: <4241BBEA-1E9C-4109-BBBE-B6C0489D6F48@cs.usfca.edu>


On Mar 9, 2009, at 12:13 PM, Filipe David Manana wrote:

> Like this:
>
>         ANTLRInputStream input = new ANTLRInputStream(inputStream);
>
>         this.lexer = new JavaScriptLexer(input);
>
>         TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>         tokens.insertAfter(tokens.getTokens().size() - 1, ";");
>
>         this.lexer = new JavaScriptLexer(new  
> ANTLRStringStream(tokens.toString()));
>

you are clearly reusing tokens still. make new token stream attached  
to this.lexer
Ter
>         this.parser = new JavaScriptParser(tokens);
>
> ?
> It doesn't work either :(
>
> cheers
>
> On Sun, Mar 8, 2009 at 8:14 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> Oh wait...you are parsing original stream. rewrite stream only give  
> modified txt not tokens. create new lexer attached to  
> tokens.toString() output.
> T
>
> On Mar 8, 2009, at 12:00 PM, Filipe David Manana wrote:
>
> For the input "var a = 1<EOF>", even if I insert the ";" token in  
> the middle of the stream, the parser gives me the error that  
> encountered an unexpected <EOF> after the "1" literal. Clearly it  
> should report some other error. This is why I state that it ignores  
> the modified token stream.
>
> E.g. :
>
>        TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>        // debug
>        System.err.println("token stream: " + tokens.toString());
>        tokens.insertAfter(tokens.getTokens().size() - 2, ";");
>
>        this.parser = new JavaScriptParser(tokens);
>
>        // debug
>        System.err.println("token stream: " + tokens.toString());
>        System.err.println("token index: " + tokens.index());
>
> running my parser, a feeding it with "var a = 1<EOF>" :
>
> fdmanana at core2duo:~/projects/test$ java -jar test.jar -
> var a = 1token stream:
> token stream: var a = ;1
> token index: 0
> Error(s) found while parsing standard input
>
>    line 0:-1 no viable alternative at input '<EOF>'
> fdmanana at core2duo:~/projects/test$
>
> If I provide " var a = ;1<EOF>" I get the expected error:  "line 1:8  
> no viable alternative at input ';'".
> Therefore this forces me to believe the parser/lexer ignores the  
> modifed token stream.
>
> Any suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 7:52 PM, Filipe David Manana  
> <fdmanana at ieee.org> wrote:
> Hi Terence,
>
> Nop, I tried it and it doesn't work either.
> It seems the parser gets only the original, unmodified, token stream.
>
> Any other suggestion?
>
> thanks
>
>
> On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> maybe index should be size-1?
> T
> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>
> Hello,
>
> I am trying to add a token into the token stream before the parser's  
> starting rule (method) is invoked.
> I am doing it using a TokenRewriteStream and like this:
>
>        ANTLRInputStream input = new ANTLRInputStream(inputStream);
>        this.lexer = new JavaScriptLexer(input);
>        TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>
>        // debug
>        System.err.println("token stream: " + tokens.toString());
>
>        tokens.insertAfter(tokens.getTokens().size(), ";");
>
>        this.parser = new JavaScriptParser(tokens);
>
>        // debug
>        System.err.println("token stream: " + tokens.toString());
>        System.err.println("token index: " + tokens.index());
>
> The problem is that the parser seems to ignore the appended token.
> The original token stream is:   "var a = 1<EOF>"
> The output of the previous println statements is:
>
> token stream:
> token stream: var a = 1;
>
> What am I doing wrong?
> Or is there a better way to do it?
>
> thank you
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>
>
>
>
>
> -- 
> Filipe David Manana,
> fdmanana at ieee.org
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
>


From fdmanana at ieee.org  Mon Mar  9 13:33:12 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Mon, 9 Mar 2009 21:33:12 +0100
Subject: [antlr-interest] TokenRewriteStream
In-Reply-To: <4241BBEA-1E9C-4109-BBBE-B6C0489D6F48@cs.usfca.edu>
References: <cadf1c690903080348o19efe0ban4b561fe46805766b@mail.gmail.com>
	<0448F06A-F506-4C97-BE30-F2BE856F296C@cs.usfca.edu>
	<cadf1c690903081152l13b90780sb1c38c11d71497da@mail.gmail.com>
	<cadf1c690903081200s142999ebscfe32403bd5cce67@mail.gmail.com>
	<4604B4D4-BD07-41A6-898E-AD8D67B24F8A@cs.usfca.edu>
	<cadf1c690903091213s6350510epc90fcc1558006f9@mail.gmail.com>
	<4241BBEA-1E9C-4109-BBBE-B6C0489D6F48@cs.usfca.edu>
Message-ID: <cadf1c690903091333ub0e269q8aca7f67543ff2e2@mail.gmail.com>

Ah!
Clearly I was missing that.
It's working now.

many thanks and keep up the excellent work with ANTLR


On Mon, Mar 9, 2009 at 9:06 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Mar 9, 2009, at 12:13 PM, Filipe David Manana wrote:
>
>  Like this:
>>
>>        ANTLRInputStream input = new ANTLRInputStream(inputStream);
>>
>>        this.lexer = new JavaScriptLexer(input);
>>
>>        TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>        tokens.insertAfter(tokens.getTokens().size() - 1, ";");
>>
>>        this.lexer = new JavaScriptLexer(new
>> ANTLRStringStream(tokens.toString()));
>>
>>
> you are clearly reusing tokens still. make new token stream attached to
> this.lexer
> Ter
>
>         this.parser = new JavaScriptParser(tokens);
>>
>> ?
>> It doesn't work either :(
>>
>> cheers
>>
>> On Sun, Mar 8, 2009 at 8:14 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Oh wait...you are parsing original stream. rewrite stream only give
>> modified txt not tokens. create new lexer attached to tokens.toString()
>> output.
>> T
>>
>> On Mar 8, 2009, at 12:00 PM, Filipe David Manana wrote:
>>
>> For the input "var a = 1<EOF>", even if I insert the ";" token in the
>> middle of the stream, the parser gives me the error that encountered an
>> unexpected <EOF> after the "1" literal. Clearly it should report some other
>> error. This is why I state that it ignores the modified token stream.
>>
>> E.g. :
>>
>>       TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>       // debug
>>       System.err.println("token stream: " + tokens.toString());
>>       tokens.insertAfter(tokens.getTokens().size() - 2, ";");
>>
>>       this.parser = new JavaScriptParser(tokens);
>>
>>       // debug
>>       System.err.println("token stream: " + tokens.toString());
>>       System.err.println("token index: " + tokens.index());
>>
>> running my parser, a feeding it with "var a = 1<EOF>" :
>>
>> fdmanana at core2duo:~/projects/test$ java -jar test.jar -
>> var a = 1token stream:
>> token stream: var a = ;1
>> token index: 0
>> Error(s) found while parsing standard input
>>
>>   line 0:-1 no viable alternative at input '<EOF>'
>> fdmanana at core2duo:~/projects/test$
>>
>> If I provide " var a = ;1<EOF>" I get the expected error:  "line 1:8 no
>> viable alternative at input ';'".
>> Therefore this forces me to believe the parser/lexer ignores the modifed
>> token stream.
>>
>> Any suggestion?
>>
>> thanks
>>
>>
>> On Sun, Mar 8, 2009 at 7:52 PM, Filipe David Manana <fdmanana at ieee.org>
>> wrote:
>> Hi Terence,
>>
>> Nop, I tried it and it doesn't work either.
>> It seems the parser gets only the original, unmodified, token stream.
>>
>> Any other suggestion?
>>
>> thanks
>>
>>
>> On Sun, Mar 8, 2009 at 6:03 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> maybe index should be size-1?
>> T
>> On Mar 8, 2009, at 3:48 AM, Filipe David Manana wrote:
>>
>> Hello,
>>
>> I am trying to add a token into the token stream before the parser's
>> starting rule (method) is invoked.
>> I am doing it using a TokenRewriteStream and like this:
>>
>>       ANTLRInputStream input = new ANTLRInputStream(inputStream);
>>       this.lexer = new JavaScriptLexer(input);
>>       TokenRewriteStream tokens = new TokenRewriteStream(lexer);
>>
>>       // debug
>>       System.err.println("token stream: " + tokens.toString());
>>
>>       tokens.insertAfter(tokens.getTokens().size(), ";");
>>
>>       this.parser = new JavaScriptParser(tokens);
>>
>>       // debug
>>       System.err.println("token stream: " + tokens.toString());
>>       System.err.println("token index: " + tokens.index());
>>
>> The problem is that the parser seems to ignore the appended token.
>> The original token stream is:   "var a = 1<EOF>"
>> The output of the previous println statements is:
>>
>> token stream:
>> token stream: var a = 1;
>>
>> What am I doing wrong?
>> Or is there a better way to do it?
>>
>> thank you
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>>
>>
>>
>> --
>> Filipe David Manana,
>> fdmanana at ieee.org
>> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B
>>
>> "Reasonable men adapt themselves to the world.
>> Unreasonable men adapt the world to themselves.
>> That's why all progress depends on unreasonable men."
>>
>>
>


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/83c09d00/attachment.html 

From mgawinecki at gmail.com  Mon Mar  9 13:43:35 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Mon, 09 Mar 2009 21:43:35 +0100
Subject: [antlr-interest] DmlSQL2 converting to v3
Message-ID: <49B57F77.6050102@gmail.com>

Hello,

I'm converting DmlSQL2 grammar [1] from v2 to v3 of ANTLR and adapting 
for Java parser.

1. How can I convert to following expression to v3:
   -----------------------------
   any_token : !
	. // {cout << tokenNames[LA(1)] << ' ' << LT(1)->getText() <<
   endl;}
   ;
   -----------------------------
   ?

2. What can I do to avoid receiving error

    DmlSQL2.g:285:25: syntax error: antlr: DmlSQL2.g:285:25: unexpected
    token: '\177'

    for the following rule:

   -----------------------------
    SIMPLE_LETTER :
	'a'..'z' | 'A'..'Z' // | '\177'..'\377'
    ;
   -----------------------------

3. When generating Lexer from the grammar I receive the following error:
    -------------------------------
    C:\workspace\momis\etc-test\sql\output\DmlSQL2Lexer.java:4078:
    unclosed
    string literal

    [21:34:09]             match("
    [21:34:09]
    -------------------------------
    and the tail of the lexer file is like it:
    -------------------------------
		break;
           	case 2 :
             	    //
	C:\\workspace\\momis\\etc-test\\sql\\DmlSQL2.g:232:33: '' ' ' ''
             	    {
             	    match('
    -------------------------------

    What can be the reason?

TIA,
Maciej


1. http://www.antlr.org/grammar/1057936474293/DmlSQL2.g

From foolishewe at hotmail.com  Mon Mar  9 13:45:58 2009
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Mon, 9 Mar 2009 20:45:58 +0000
Subject: [antlr-interest] Strings as Synthetic Attributes in ANTLR 3.1.2 and
	ANTLRWorks 1.2.3.
Message-ID: <COL103-W73CA61185F1E145D43C857C0A00@phx.gbl>


Hello All:

I'm sorry if this is an obvious question, but I'm wondering about how synthetic attributes
(synthetic attributes) can be accessed in ANTLR.  Does anyone know how to pass these up the tree or if my approach is wrong? I'm using the most recent version of ANTLRWorks, 1.2.3 with ANTLR 3.1.2.


Please consider the following brief antlr program.  It should take an infix addition expression
and using the synthetic attributes produce prefix notation representation of it.
When I run it I get the output:
op=<+> (Hardwired!), lhs=<2>, rhs=<3>, result_attr=<+23>
e.text = <2 + 3>

Note that e.text shows the infix order from the inputs, so I'm guessing the synthetic attribute isn't being successfully transmitted to stat from expr, have I goofed or is this a bug in ANTLR?

Also I'm considering using the rewriting rules (I'm guessing I need the
AST functionality) but I'm looking for a good and current reference any recommended (I don't own the definitive ANTLR book yet, but if it is still current and covers this I might get it).

grammar simpleexpr;

options{ output=AST; }
@header {
}

@members{
}

// Here we should see the prefix version of the synthetic attribute of expr
stat:   e=expr NEWLINE {System.out.println("e.text = <" + $e.text + ">");};

// Creates a synthetic string attribute (bottom up).
// given an infix order sum operation the attribute string reflects a prefix order expression
expr returns [String result_attr]:    lhs=NUM '+' rhs=NUM
    {    $result_attr = '+' + $lhs.text + $rhs.text;
        System.out.println("op=<+> (Hardwired!), lhs=<" + $lhs.text +
             ">, rhs=<" + $rhs.text + ">, result_attr=<" + $result_attr + ">");
    }
    ;

NUM    :    ('0'..'9')+;
NEWLINE:'\r'? '\n' ;
WS  :   (' '|'\t')+ {$channel=HIDDEN;} ;

Regards:

Bill M.

_________________________________________________________________
Hotmail? is up to 70% faster. Now good news travels really fast. 
http://windowslive.com/online/hotmail?ocid=TXT_TAGLM_WL_HM_70faster_032009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/ebb9a553/attachment.html 

From greg at smolyn.org  Mon Mar  9 17:12:35 2009
From: greg at smolyn.org (Greg Smolyn)
Date: Mon, 9 Mar 2009 17:12:35 -0700
Subject: [antlr-interest] v3.1.2 breakage in Lexer with +=
Message-ID: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>

Hi,

I just upgraded from Antlr 3.1.1 to 3.1.2, and have discovered that a  
simple construct in my lexer no longer compiles:

fragment F_HEXDIGIT
   : '0'..'9' | 'a'..'f' | 'A'..'F'
   ;

fragment F_UNICODEDIGITS
   : (h+=F_HEXDIGIT)+ {$h.Count <= 6}?
   ;


In 3.1.1 this works fine, but in 3.1.2, the "h" is not defined inside  
the generated function!

Is this a bug or am I doing something wrong?  I'm using the CSharp2  
generator and the output=AST option.

-greg


From viridium at gmail.com  Mon Mar  9 18:00:43 2009
From: viridium at gmail.com (Mihai Danila)
Date: Mon, 9 Mar 2009 21:00:43 -0400
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
Message-ID: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>

Hi,

I thought I had my DMQL grammar nailed after several months of no issues,
until recently a query failed. I've already massaged the grammar in a few
ways so I'm a bit at a loss as to what the problem is this time. Do I have
to enumerate all the possible token prefixes (including TO, TOD, TODA, N,
NO, A, AN, O) in the alphanumericToken rule to fix this one? Am I missing
something?

Here's the query:
(f=I?TORO)

If I debug this, here's what ANTLR parses:
(f=I?O)

Here's the grammar:
grammar Dmql;

options {
output=AST;
}

tokens {
Or; And; Not;
FieldCriteria;
LookupAnd; LookupNot; LookupOr; LookupAny;
StringList; StringEquals; StringStartsWith;
StringContains; StringChar; EmptyString;
RangeList; RangeBetween; RangeGreater; RangeLower;
ConstantValue;
}

@header { package com.stratusdata.dmql.parser.antlr; }
@lexer::header { package com.stratusdata.dmql.parser.antlr; }

@rulecatch {
  catch (RecognitionException re) {
    throw re;
  }
}

dmql: searchCondition;
searchCondition: queryClause (('|' | BoolOr) queryClause)* -> ^(Or
queryClause+);
queryClause: booleanElement ((',' | BoolAnd) booleanElement)* -> ^(And
booleanElement+);
booleanElement: queryElement | ('~' | BoolNot) queryElement -> ^(Not
queryElement);
queryElement: '('! (fieldCriteria | searchCondition) ')'!;

fieldCriteria: field '=' fieldValue -> ^(FieldCriteria field fieldValue);
field: ('_' | alphanumericToken)+ -> ConstantValue[$field.text];
fieldValue: lookupList | stringList | rangeList | nonInteger | period |
stringLiteral | empty;
stringLiteral: StringLiteral;
empty: '.EMPTY.' -> EmptyString;

lookupList: lookupOr | lookupAnd | lookupNot | lookupAny;
lookupOr: '|' lookup (',' lookup)* -> ^(LookupOr lookup+);
lookupAnd: '+' lookup (',' lookup)* -> ^(LookupAnd lookup+);
lookupNot: '~' lookup (',' lookup)* -> ^(LookupNot lookup+);
lookupAny: '.ANY.' -> LookupAny;
lookup: alphanumeric | stringLiteral;

stringList: string (',' string)* -> ^(StringList string+);
string: stringEq | stringStart | stringContains | stringChar;
stringEq: alphanumeric -> ^(StringEquals alphanumeric);
stringStart: alphanumeric '*'  -> ^(StringStartsWith alphanumeric);
stringContains: '*' alphanumeric '*' -> ^(StringContains alphanumeric);
stringChar: alphanumeric? ('?' alphanumeric?)+ -> ^(StringChar
ConstantValue[$stringChar.text]);

rangeList: dateTimeRangeList | dateRangeList | timeRangeList |
numericRangeList;
dateTimeRangeList: dateTimeRange (',' dateTimeRange)* -> ^(RangeList
dateTimeRange+);
dateRangeList: dateRange (',' dateRange)* -> ^(RangeList dateRange+);
timeRangeList: timeRange (',' timeRange)* -> ^(RangeList timeRange+);
numericRangeList: numericRange (',' numericRange)* -> ^(RangeList
numericRange+);
dateTimeRange: x=dateTime '-' y=dateTime -> ^(RangeBetween $x $y)
| x=dateTime '-' -> ^(RangeLower $x)
| x=dateTime '+' -> ^(RangeGreater $x);
dateRange: x=date '-' y=date -> ^(RangeBetween $x $y)
| x=date '-' -> ^(RangeLower $x)
| x=date '+' -> ^(RangeGreater $x);
timeRange: x=time '-' y=time -> ^(RangeBetween $x $y)
| x=time '-' -> ^(RangeLower $x)
| x=time '+' -> ^(RangeGreater $x);
numericRange: x=number '-' y=number -> ^(RangeBetween $x $y)
| x=number '-' -> ^(RangeLower $x)
| x=number '+' -> ^(RangeGreater $x);
period: (isoDateTime | isoDate | isoTime) -> ConstantValue[$period.text];
dateTime: (isoDateTime | Now) -> ConstantValue[$dateTime.text];
date: (isoDate | Today) -> ConstantValue[$date.text];
time: isoTime -> ConstantValue[$time.text];
number: integer | nonInteger;
integer: D+ -> ConstantValue[$integer.text];
nonInteger: (negativeNumber | positiveDecimal) ->
ConstantValue[$nonInteger.text];
negativeNumber: '-' D+ ('.' D+)?;
positiveDecimal: D+ '.' D+;

timeZoneOffset: ('+' | '-') D D ':' D D;
isoDate: D D D D '-' D D '-' D D;
isoTime: D D ':' D D ':' D D ('.' D (D D?)?)?;
isoDateTime: isoDate 'T' isoTime ('Z' | timeZoneOffset)?;

alphanumeric: alphanumericToken+ -> ConstantValue[$alphanumeric.text];
alphanumericToken: (D | A | BoolNot | BoolAnd | BoolOr | Now | Today | 'T' |
'Z');

BoolNot: 'NOT';
BoolAnd: 'AND';
BoolOr: 'OR';
Now: 'NOW';
Today: 'TODAY';
StringLiteral: ('"' (~('\u0000'..'\u001F' | '\u007F' | '"') | ('""'))* '"');
A: (('A'..'Z') | ('a'..'z'));
D: ('0'..'9');
Whitespace: (' ' | '\t' | '\n') { $channel = HIDDEN; };
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090309/8061fd36/attachment.html 

From chainone at gmail.com  Mon Mar  9 23:06:42 2009
From: chainone at gmail.com (chain one)
Date: Tue, 10 Mar 2009 14:06:42 +0800
Subject: [antlr-interest] How to get the address of the start of the input
	stream in C Runtime target?
Message-ID: <5a92ffb60903092306m560fa32i502530394788c036@mail.gmail.com>

Is any API available for Parser to do this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/abf8c9f5/attachment.html 

From mgawinecki at gmail.com  Mon Mar  9 23:59:52 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Tue, 10 Mar 2009 07:59:52 +0100
Subject: [antlr-interest] grammar inheritance
Message-ID: <49B60FE8.5060003@gmail.com>

Hi,

Jim Idle said that "The grammar inheritance functionality is intended 
for release 3.1" [1]

I'm converting SqlSQL2 grammar from ANTLR v2 to v3 and I'm wondering how 
can I express:

   class SqlSQL2Parser extends DmlSQL2Parser;

in v3.

Best,
Maciej

1. http://www.antlr.org/pipermail/antlr-interest/2007-October/024053.html

From indhu.b at s7software.com  Tue Mar 10 00:16:21 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 10 Mar 2009 12:46:21 +0530 (IST)
Subject: [antlr-interest] grammar inheritance
In-Reply-To: <49B60FE8.5060003@gmail.com>
Message-ID: <23027537.4361236669381260.JavaMail.root@star>


grammar SqlSQL2Parser;
options {
    superClass=DmlSQL2Parser;
}

- Indhu

----- Original Message -----
From: Maciej Gawinecki <mgawinecki at gmail.com>
To: ANTLR Interest Mailing List <antlr-interest at antlr.org>
Sent: Tuesday, March 10, 2009 12:29:52 PM GMT+0530 Asia/Calcutta
Subject: [antlr-interest] grammar inheritance

Hi,

Jim Idle said that "The grammar inheritance functionality is intended 
for release 3.1" [1]

I'm converting SqlSQL2 grammar from ANTLR v2 to v3 and I'm wondering how 
can I express:

   class SqlSQL2Parser extends DmlSQL2Parser;

in v3.

Best,
Maciej

1. http://www.antlr.org/pipermail/antlr-interest/2007-October/024053.html

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From indhu.b at s7software.com  Tue Mar 10 00:48:37 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 10 Mar 2009 13:18:37 +0530 (IST)
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
Message-ID: <29424259.4391236671317344.JavaMail.root@star>

Try this: 

Today: ( (Today_) => 'Today' ) ; 
fragment Today_ 
: 'Today' 
; 

However, I'm not sure if this's the most elegant way to fix it. 

Read the following thread to understand more on why exactly this happens: 
http://www.antlr.org/pipermail/antlr-interest/2009-February/032959.html 

- Indhu 

----- Original Message ----- 
From: Mihai Danila <viridium at gmail.com> 
To: antlr-interest at antlr.org 
Sent: Tuesday, March 10, 2009 6:30:43 AM GMT+0530 Asia/Calcutta 
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters 



Hi, 


I thought I had my DMQL grammar nailed after several months of no issues, until recently a query failed. I've already massaged the grammar in a few ways so I'm a bit at a loss as to what the problem is this time. Do I have to enumerate all the possible token prefixes (including TO, TOD, TODA, N, NO, A, AN, O) in the alphanumericToken rule to fix this one? Am I missing something? 


Here's the query: 
(f=I?TORO) 


If I debug this, here's what ANTLR parses: 
(f=I?O) 


Here's the grammar: 

grammar Dmql; 


options { 
output=AST; 
} 


tokens { 
Or; And; Not; 
FieldCriteria; 
LookupAnd; LookupNot; LookupOr; LookupAny; 
StringList; StringEquals; StringStartsWith; 
StringContains; StringChar; EmptyString; 
RangeList; RangeBetween; RangeGreater; RangeLower; 
ConstantValue; 
} 


@header { package com.stratusdata.dmql.parser.antlr; } 
@lexer::header { package com.stratusdata.dmql.parser.antlr; } 


@rulecatch { 
catch (RecognitionException re) { 
throw re; 
} 
} 


dmql: searchCondition; 
searchCondition: queryClause (('|' | BoolOr) queryClause)* -> ^(Or queryClause+); 
queryClause: booleanElement ((',' | BoolAnd) booleanElement)* -> ^(And booleanElement+); 
booleanElement: queryElement | ('~' | BoolNot) queryElement -> ^(Not queryElement); 
queryElement: '('! (fieldCriteria | searchCondition) ')'!; 


fieldCriteria: field '=' fieldValue -> ^(FieldCriteria field fieldValue); 
field: ('_' | alphanumericToken)+ -> ConstantValue[$field.text]; 
fieldValue: lookupList | stringList | rangeList | nonInteger | period | stringLiteral | empty; 
stringLiteral: StringLiteral; 
empty: '.EMPTY.' -> EmptyString; 


lookupList: lookupOr | lookupAnd | lookupNot | lookupAny; 
lookupOr: '|' lookup (',' lookup)* -> ^(LookupOr lookup+); 
lookupAnd: '+' lookup (',' lookup)* -> ^(LookupAnd lookup+); 
lookupNot: '~' lookup (',' lookup)* -> ^(LookupNot lookup+); 
lookupAny: '.ANY.' -> LookupAny; 
lookup: alphanumeric | stringLiteral; 


stringList: string (',' string)* -> ^(StringList string+); 
string: stringEq | stringStart | stringContains | stringChar; 
stringEq: alphanumeric -> ^(StringEquals alphanumeric); 
stringStart: alphanumeric '*' -> ^(StringStartsWith alphanumeric); 
stringContains: '*' alphanumeric '*' -> ^(StringContains alphanumeric); 
stringChar: alphanumeric? ('?' alphanumeric?)+ -> ^(StringChar ConstantValue[$stringChar.text]); 


rangeList: dateTimeRangeList | dateRangeList | timeRangeList | numericRangeList; 
dateTimeRangeList: dateTimeRange (',' dateTimeRange)* -> ^(RangeList dateTimeRange+); 
dateRangeList: dateRange (',' dateRange)* -> ^(RangeList dateRange+); 
timeRangeList: timeRange (',' timeRange)* -> ^(RangeList timeRange+); 
numericRangeList: numericRange (',' numericRange)* -> ^(RangeList numericRange+); 
dateTimeRange: x=dateTime '-' y=dateTime -> ^(RangeBetween $x $y) 
| x=dateTime '-' -> ^(RangeLower $x) 
| x=dateTime '+' -> ^(RangeGreater $x); 
dateRange: x=date '-' y=date -> ^(RangeBetween $x $y) 
| x=date '-' -> ^(RangeLower $x) 
| x=date '+' -> ^(RangeGreater $x); 
timeRange: x=time '-' y=time -> ^(RangeBetween $x $y) 
| x=time '-' -> ^(RangeLower $x) 
| x=time '+' -> ^(RangeGreater $x); 
numericRange: x=number '-' y=number -> ^(RangeBetween $x $y) 
| x=number '-' -> ^(RangeLower $x) 
| x=number '+' -> ^(RangeGreater $x); 
period: (isoDateTime | isoDate | isoTime) -> ConstantValue[$period.text]; 
dateTime: (isoDateTime | Now) -> ConstantValue[$dateTime.text]; 
date: (isoDate | Today) -> ConstantValue[$date.text]; 
time: isoTime -> ConstantValue[$time.text]; 
number: integer | nonInteger; 
integer: D+ -> ConstantValue[$integer.text]; 
nonInteger: (negativeNumber | positiveDecimal) -> ConstantValue[$nonInteger.text]; 
negativeNumber: '-' D+ ('.' D+)?; 
positiveDecimal: D+ '.' D+; 


timeZoneOffset: ('+' | '-') D D ':' D D; 
isoDate: D D D D '-' D D '-' D D; 
isoTime: D D ':' D D ':' D D ('.' D (D D?)?)?; 
isoDateTime: isoDate 'T' isoTime ('Z' | timeZoneOffset)?; 


alphanumeric: alphanumericToken+ -> ConstantValue[$alphanumeric.text]; 
alphanumericToken: (D | A | BoolNot | BoolAnd | BoolOr | Now | Today | 'T' | 'Z'); 


BoolNot: 'NOT'; 
BoolAnd: 'AND'; 
BoolOr: 'OR'; 
Now: 'NOW'; 
Today: 'TODAY'; 
StringLiteral: ('"' (~('\u0000'..'\u001F' | '\u007F' | '"') | ('""'))* '"'); 
A: (('A'..'Z') | ('a'..'z')); 
D: ('0'..'9'); 
Whitespace: (' ' | '\t' | '\n') { $channel = HIDDEN; }; 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/5a287d5f/attachment.html 

From antlr at mirality.co.nz  Tue Mar 10 01:00:21 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 10 Mar 2009 21:00:21 +1300
Subject: [antlr-interest] Strings as Synthetic Attributes in ANTLR 3.1.2
 and ANTLRWorks 1.2.3.
In-Reply-To: <COL103-W73CA61185F1E145D43C857C0A00@phx.gbl>
References: <COL103-W73CA61185F1E145D43C857C0A00@phx.gbl>
Message-ID: <20090310080034.94180341844E@www.antlr.org>

At 09:45 10/03/2009, Foolish Ewe wrote:
>When I run it I get the output:
>op=<+> (Hardwired!), lhs=<2>, rhs=<3>, result_attr=<+23>
>e.text = <2 + 3>
>
>Note that e.text shows the infix order from the inputs, so I'm 
>guessing the synthetic attribute isn't being successfully 
>transmitted to stat from expr, have I goofed or is this a bug in 
>ANTLR?
[...]
>// Here we should see the prefix version of the synthetic 
>attribute of expr
>stat:   e=expr NEWLINE {System.out.println("e.text = <" + $e.text 
>+ ">");};
>
>// Creates a synthetic string attribute (bottom up).
>// given an infix order sum operation the attribute string 
>reflects a prefix order expression
>expr returns [String result_attr]:    lhs=NUM '+' rhs=NUM
>     {    $result_attr = '+' + $lhs.text + $rhs.text;
>         System.out.println("op=<+> (Hardwired!), lhs=<" + 
> $lhs.text +
>              ">, rhs=<" + $rhs.text + ">, result_attr=<" + 
> $result_attr + ">");
>     }
>     ;

You are assigning your custom text to a return value called 
"result_attr".  This will, naturally enough, appear in the parent 
rule as $e.result_attr, not as $e.text.


From mgawinecki at gmail.com  Tue Mar 10 01:24:21 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Tue, 10 Mar 2009 09:24:21 +0100
Subject: [antlr-interest] SqlSQL2 grammar in v3
Message-ID: <49B623B5.5080307@gmail.com>

Hi,

I found SqlSQL2 and DMLSQL2 grammars very useful but still in ANTLR v3.

I've tried to convert them but there are several issues difficult to me 
as a newcomer to v3:

1) SqlSQL2 grammar is combined lexer&parser grammar which should inherit 
from DMLSQL2 grammar. The latter then should be splitted into lexer and 
parser grammars

2) Some minor but numerous errors and warnings to be handled, relating 
mainly to changes in syntax differences between and v3 and v3

Does anyone of you have these grammars in ANTRL v3?

Thank you for your time,
Maciej

From andreas.meyer at smartshift.de  Tue Mar 10 04:46:23 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 10 Mar 2009 12:46:23 +0100
Subject: [antlr-interest] Early exit exception in positive closures
Message-ID: <49B6530F.2020805@smartshift.de>

Hi!

I have a question regarding predicates and positive closures like 
({pred}? rule)+. I want to use the predicate in order to disambiguate 
things like :

  (identifier|keyword)+ rule_with_keywords?

Previously, I solved this by manually assembling a FIRST-set of 
rule_with_keywords and putting this into a negated syntactic predicate:

  ((~(KW123|KW456))=>(identifier|keyword))+ rule_with_keywords?

Now, I asked myself: why not use {false}? as predicate, instead? It's 
only used when the actual input contains an ambiguity, so it would (at 
runtime) prefer to exit the subrule, which is exactly what I want. 
However, it seems that the predicate also serves as something like a 
check _before_ even doing the first iteration. So, for an input like 
"KW123 KW123" the generated parser complains about an "early exit 
exception" when I use {false}?.

Would it make sense to add an option to ANTLR like 
"do_not_check_for_early_exit"? This would greatly simplify my grammar, 
as rules like these occur very often. Sure, this also would work:

  (identifier|keyword) ({false}? (identifier|keyword))* rule_with_keywords?

but of course it's more redundant.

Greetings,
Andreas Meyer


--------------

grammar Lang;

options
{
output=AST;
}

@members {
    public boolean match( String rulename ) {
        boolean didMatch = false;
        int mark = input.mark();
        try {
            java.lang.reflect.Method m = this.getClass().getMethod( 
rulename );
            state.backtracking ++;
            m.invoke( this );
            didMatch = true;
        }
        catch( NoSuchMethodException e )
        {
            e.printStackTrace();
            didMatch = false;
        }
        catch( IllegalAccessException e )
        {
            e.printStackTrace();
            didMatch = false;
        }
        catch (java.lang.reflect.InvocationTargetException e) {
            if( e.getCause() instanceof RecognitionException )
                didMatch = false;
        }
        state.backtracking --;
        input.rewind (mark);
        return didMatch;   
    }
}

start
    : (stmt '.')+ EOF
    ;


// this works, because at the first occurrence of atom, the "predicate" 
is not evaluated ...
//stmt    : KW_3 atom ( {false}? atom)* option?
//    ;

// however, here, the  generated code tries to disambiguate, although 
there is no need to,
// because '+' tells that at least one atom is wanted
stmt
    : KW_3 ( {false}? atom)+ option?
    ;

//stmt    : KW_3 ( {!match("option")}? atom)+ option?
//    ;


option
    : KW_1^ KW_2
    | KW_1^
    | KW_2^
    ;    


atom
    : ID
    | keyword
    ;
   

keyword
    : KW_1
    | KW_2
    | KW_3
    | KW_4
    ;

KW_1 : 'kw1';
KW_2 : 'kw2';
KW_3 : 'kw3';
KW_4 : 'kw4';   

ID: ('a'..'z' | 'A'..'Z' )+ ;
WS : (' '|'\n'|'\r'|'\t') {$channel=HIDDEN;} ;

From naim.kingston at gmail.com  Tue Mar 10 05:40:19 2009
From: naim.kingston at gmail.com (Naim Kingston)
Date: Tue, 10 Mar 2009 23:40:19 +1100
Subject: [antlr-interest] grammars, tree grammars and parse trees, Oh my!
Message-ID: <7f5b767f0903100540g1bb37b99vbb209665fc486999@mail.gmail.com>

I've been going through the antlr wiki and FAQ for a couple of days now and
I'm having some problems in understanding exactly what I need to do if I
want to create a parse tree.
I'm not sure if our (mine and yours) definitions of a parse tree are the
same, but with boost::spirit in C++, I've been implementing a small
scripting language, and I've gotten very used to having a tree that I can
traverse, with each node describing what grammar rule it represents, and
only some of the nodes (integers, operators and other grammar rules that
correspond directly to input) have text associated with the tree node.

This is the kind of thing that I'm looking at doing in C# for a smaller
calculator-like side project. I'm generating a parser and lexer for my
language using antlr 3.1.2. Is a 'parse tree' the structure I'm looking for?

I've been generating an AST, but that just has the token type in each node,
and that won't always help in understanding the context of the token.

I've been looking at creating a tree grammar, but are the 'actions' that you
define simply the code that you insert in the tree node definitions? In
fact, are the rules in a tree grammar the content of each of the nodes in
the tree? If I'm not planning on re-ordering anything, or putting in any
actions (I want to do most things code-side apart from the parse tree
construction) do I need to create the tree grammar, or can I just use the
normal grammar I wrote?

Any help you guys can give in helping me understand antlr and how to use it
would be great. I can see it being a very useful tool for me in the future,
but I need to get over the hump of not knowing how to use it :D

-Naim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/f0a462d4/attachment.html 

From foolishewe at hotmail.com  Tue Mar 10 06:51:02 2009
From: foolishewe at hotmail.com (Foolish Ewe)
Date: Tue, 10 Mar 2009 13:51:02 +0000
Subject: [antlr-interest] Strings as Synthetic Attributes in ANTLR 3.1.2
 and ANTLRWorks 1.2.3.
In-Reply-To: <20090310080034.94180341844E@www.antlr.org>
References: <COL103-W73CA61185F1E145D43C857C0A00@phx.gbl>
	<20090310080034.94180341844E@www.antlr.org>
Message-ID: <COL103-W22278863821696735FC859C0A10@phx.gbl>


Thank you Gavin!  This is indeed exactly the problem.  After I ran into this I caved in and bought the Definitive ANTLR Reference manual, which does have a treatment of this also.

Thanks again:

Bill M.

> Date: Tue, 10 Mar 2009 21:00:21 +1300
> To: foolishewe at hotmail.com; antlr-interest at antlr.org
> From: antlr at mirality.co.nz
> Subject: Re: [antlr-interest] Strings as Synthetic Attributes in ANTLR 3.1.2 and ANTLRWorks 1.2.3.
> 
> At 09:45 10/03/2009, Foolish Ewe wrote:
> >When I run it I get the output:
> >op=<+> (Hardwired!), lhs=<2>, rhs=<3>, result_attr=<+23>
> >e.text = <2 + 3>
> >
> >Note that e.text shows the infix order from the inputs, so I'm 
> >guessing the synthetic attribute isn't being successfully 
> >transmitted to stat from expr, have I goofed or is this a bug in 
> >ANTLR?
> [...]
> >// Here we should see the prefix version of the synthetic 
> >attribute of expr
> >stat:   e=expr NEWLINE {System.out.println("e.text = <" + $e.text 
> >+ ">");};
> >
> >// Creates a synthetic string attribute (bottom up).
> >// given an infix order sum operation the attribute string 
> >reflects a prefix order expression
> >expr returns [String result_attr]:    lhs=NUM '+' rhs=NUM
> >     {    $result_attr = '+' + $lhs.text + $rhs.text;
> >         System.out.println("op=<+> (Hardwired!), lhs=<" + 
> > $lhs.text +
> >              ">, rhs=<" + $rhs.text + ">, result_attr=<" + 
> > $result_attr + ">");
> >     }
> >     ;
> 
> You are assigning your custom text to a return value called 
> "result_attr".  This will, naturally enough, appear in the parent 
> rule as $e.result_attr, not as $e.text.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

_________________________________________________________________
Windows Live?: Life without walls.
http://windowslive.com/explore?ocid=TXT_TAGLM_WL_allup_1a_explore_032009
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/c0e81058/attachment.html 

From sharwell at pixelminegames.com  Tue Mar 10 06:58:02 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 10 Mar 2009 08:58:02 -0500
Subject: [antlr-interest] Early exit exception in positive closures
In-Reply-To: <49B6530F.2020805@smartshift.de>
References: <49B6530F.2020805@smartshift.de>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67B08@Bloodymary.ironwillgames.com>

When at all possible, avoid using semantic predicates, as they will
greatly slow down your grammar relative to a properly left-factored
grammar. If the negated set works, it is probably your best option for
now. Maybe I can add a subtract set operation you can test, although I
couldn't check it in officially since it deviates from the grammar
language spec. Then you could write the following with no predicates (no
predicates with short lookahead is optimal):

// the keyword rule must be a set for this to work, which is "any single
one of the following tokens"
(identifier | keyword-(KW123|KW456))+ rule_with_keywords?

You never responded to my offer to check out making the ANTLR Tool
faster at analyzing your grammar. 20 seconds is a long time and I'm sure
it can be improved. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andreas Meyer
Sent: Tuesday, March 10, 2009 6:46 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Early exit exception in positive closures

Hi!

I have a question regarding predicates and positive closures like 
({pred}? rule)+. I want to use the predicate in order to disambiguate 
things like :

  (identifier|keyword)+ rule_with_keywords?

Previously, I solved this by manually assembling a FIRST-set of 
rule_with_keywords and putting this into a negated syntactic predicate:

  ((~(KW123|KW456))=>(identifier|keyword))+ rule_with_keywords?

Now, I asked myself: why not use {false}? as predicate, instead? It's 
only used when the actual input contains an ambiguity, so it would (at 
runtime) prefer to exit the subrule, which is exactly what I want. 
However, it seems that the predicate also serves as something like a 
check _before_ even doing the first iteration. So, for an input like 
"KW123 KW123" the generated parser complains about an "early exit 
exception" when I use {false}?.

Would it make sense to add an option to ANTLR like 
"do_not_check_for_early_exit"? This would greatly simplify my grammar, 
as rules like these occur very often. Sure, this also would work:

  (identifier|keyword) ({false}? (identifier|keyword))*
rule_with_keywords?

but of course it's more redundant.

Greetings,
Andreas Meyer


--------------

grammar Lang;

options
{
output=AST;
}

@members {
    public boolean match( String rulename ) {
        boolean didMatch = false;
        int mark = input.mark();
        try {
            java.lang.reflect.Method m = this.getClass().getMethod( 
rulename );
            state.backtracking ++;
            m.invoke( this );
            didMatch = true;
        }
        catch( NoSuchMethodException e )
        {
            e.printStackTrace();
            didMatch = false;
        }
        catch( IllegalAccessException e )
        {
            e.printStackTrace();
            didMatch = false;
        }
        catch (java.lang.reflect.InvocationTargetException e) {
            if( e.getCause() instanceof RecognitionException )
                didMatch = false;
        }
        state.backtracking --;
        input.rewind (mark);
        return didMatch;   
    }
}

start
    : (stmt '.')+ EOF
    ;


// this works, because at the first occurrence of atom, the "predicate" 
is not evaluated ...
//stmt    : KW_3 atom ( {false}? atom)* option?
//    ;

// however, here, the  generated code tries to disambiguate, although 
there is no need to,
// because '+' tells that at least one atom is wanted
stmt
    : KW_3 ( {false}? atom)+ option?
    ;

//stmt    : KW_3 ( {!match("option")}? atom)+ option?
//    ;


option
    : KW_1^ KW_2
    | KW_1^
    | KW_2^
    ;    


atom
    : ID
    | keyword
    ;
   

keyword
    : KW_1
    | KW_2
    | KW_3
    | KW_4
    ;

KW_1 : 'kw1';
KW_2 : 'kw2';
KW_3 : 'kw3';
KW_4 : 'kw4';   

ID: ('a'..'z' | 'A'..'Z' )+ ;
WS : (' '|'\n'|'\r'|'\t') {$channel=HIDDEN;} ;

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From robert.soule at gmail.com  Tue Mar 10 08:06:21 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Tue, 10 Mar 2009 11:06:21 -0400
Subject: [antlr-interest] Building AST by hand
Message-ID: <d1316fd70903100806r67c5e05dj28325e336cb57450@mail.gmail.com>

Hi,

I'd like to build an AST by hand (not by parsing some input), and then
send the AST to a tree grammar to print. My hand-written code looks
very similar to the code in the parser, except rather than matching a
token, I just create the empty tree nodes.

This maybe sounds a bit crazy, but is there some way to somehow
turn off matching in a grammar, and generate some sort of tree factory
instead of a parser?

thank you,
Robert

From andreas.meyer at smartshift.de  Tue Mar 10 09:03:21 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 10 Mar 2009 17:03:21 +0100
Subject: [antlr-interest] Early exit exception in positive closures
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67B08@Bloodymary.ironwillgames.com>
References: <49B6530F.2020805@smartshift.de>
	<86403CA0939415448BCCB83855EFE09AA67B08@Bloodymary.ironwillgames.com>
Message-ID: <49B68F49.5000609@smartshift.de>

Sam Harwell schrieb:
> When at all possible, avoid using semantic predicates, as they will
> greatly slow down your grammar relative to a properly left-factored
> grammar. 
Hmhmh ... but as long as they are just {...}? predicates instead of the 
gated semantic predicates {..}?=>, aren't they only executed when there 
is an ambiguity? Or do they prevent ANTLR from generating something more 
clever?

> If the negated set works, it is probably your best option for
> now. Maybe I can add a subtract set operation you can test, although I
> couldn't check it in officially since it deviates from the grammar
> language spec. Then you could write the following with no predicates (no
> predicates with short lookahead is optimal):
>
> // the keyword rule must be a set for this to work, which is "any single
> one of the following tokens"
> (identifier | keyword-(KW123|KW456))+ rule_with_keywords?
>   

Something like this would be great. But. if it deviates from the ANTLR 
grammar, I have another suggestion that would not violate the garmmar 
language spec: would it be possible to remove KW123 and KW456 
automatically, by letting ANTLR look at "rule_with_keywords"? When 
setting an option { greedy=false; } ? :-) So, maybe there is a certain 
token set computed, that decides if one should stay within the loop or 
exit the loop. With greedy=false, the token-set could be reduced by 
FIRST(rule_with_keywords) or any other rule that may follow the loop.

I also thought about something like:

id
    : ID
    | KW1 { avoid }
    | KW2 { avoid }
    | KW3 { avoid }
    .
    .
    ;

which would mean that, whenever during grammar analysis there is an 
ambiguity between a token with "avoid" and the same token without avoid, 
prefer the one without avoid. Does this sound reasonable? I find it 
interesting :-)


> You never responded to my offer to check out making the ANTLR Tool
> faster at analyzing your grammar. 20 seconds is a long time and I'm sure
> it can be improved. :)
>
>   
I really appreciate that offer and would be happy if I could help 
improve ANTLR, but sending the grammar itself is not possible, 
unfortunately ... is there some way you could send me a patched version 
of ANTLR that produces a logfile, which I can send to you?

Greetings,
Andreas Meyer

From rschumeyer at gmail.com  Tue Mar 10 10:56:53 2009
From: rschumeyer at gmail.com (Rick Schumeyer)
Date: Tue, 10 Mar 2009 13:56:53 -0400
Subject: [antlr-interest] Parsing fields in a CSV file
Message-ID: <95b1cc100903101056ufb7d381p1f76484cf44b883c@mail.gmail.com>

What is the best strategy for parsing a CSV file?  Most CSV files I have
seen are simple one big data table.  The files I have are structured, with
different sections containing parameters, tables, etc.

I can easily parse the file into fields.  Most of the time, I don't care
what the field contains.  But sometimes, a field contains a timestamp like:

Fri Oct 24 09:54:27 EDT 2008,

I want to parse each individual piece of this field.  My understanding is
that ANTLR will try to return the longest match to a token it can find.  So
even if I want it to look for
STRING STRING INT INT:INT:INT etc.

it will simply return

FIELD

unless I do something with predicates.

If I do something in the parser like

timestamp : (STRING STRING INT INT:INT:INT etc) => (STRING STRING INT
INT:INT:INT etc);

will that work?  Will that cause the lexer to return each small token, or
will it still return a FIELD?

A couple of questions:

It seems to me that I want to use a predicate in the lexer based on what is
happening in the parser.  Is there an easy way to do that?  (I didn't see an
example of that in the ANTLR book).

Another alternative, which sounds crazy but I'll ask anyway, is to write a
separate parser that only parses the above date/time field, and call that
parser from within the rule that receives the timestamp field.

Thanks for any help!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/f847df4c/attachment.html 

From mgawinecki at gmail.com  Tue Mar 10 11:23:46 2009
From: mgawinecki at gmail.com (Maciej Gawinecki)
Date: Tue, 10 Mar 2009 19:23:46 +0100
Subject: [antlr-interest] problem with composite grammars
Message-ID: <49B6B032.3000503@gmail.com>

Hello,

To overcome the problem ofexceeding code size of generated parser class 
I decided to make my SQL grammar more composite: I splitted it into 
lexer, parser and combined grammars, where the latter imports the first two:

   grammar AnsiSQL;
   import AnsiSQLLexer;
   import AnsiSQLParser;

However, I got the following error, which I don't understand:

   combined grammar AnsiSQL and imported lexer grammar AnsiSQLLexer both
   generate AnsiSQL_AnsiSQLLexer

What could be the reason and how can I solve the problem?

I'm working with ANTLRWork 1.2.3.

Maciej

From antlr at mirality.co.nz  Tue Mar 10 11:54:58 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 11 Mar 2009 07:54:58 +1300
Subject: [antlr-interest] grammars, tree grammars and parse trees, Oh my!
In-Reply-To: <7f5b767f0903100540g1bb37b99vbb209665fc486999@mail.gmail.co
 m>
References: <7f5b767f0903100540g1bb37b99vbb209665fc486999@mail.gmail.com>
Message-ID: <20090310185527.3553334184A2@www.antlr.org>

At 01:40 11/03/2009, Naim Kingston wrote:
>I'm not sure if our (mine and yours) definitions of a parse tree 
>are the same, but with boost::spirit in C++, I've been 
>implementing a small scripting language, and I've gotten very 
>used to having a tree that I can traverse, with each node 
>describing what grammar rule it represents, and only some of the 
>nodes (integers, operators and other grammar rules that 
>correspond directly to input) have text associated with the tree 
>node.

That is indeed what a parse tree is.

>This is the kind of thing that I'm looking at doing in C# for a 
>smaller calculator-like side project. I'm generating a parser and 
>lexer for my language using antlr 3.1.2. Is a 'parse tree' the 
>structure I'm looking for?
>
>I've been generating an AST, but that just has the token type in 
>each node, and that won't always help in understanding the 
>context of the token.

ANTLR doesn't have any built-in facilities for creating parse 
trees (except for the debugger), though it's not impossible to add 
in something similar.  It's usually not what you really want, 
though.

With ASTs, you normally don't just build the tree from input 
nodes, you also add additional "imaginary" tokens (usually as the 
subtree root) that serve as grouping constructs and identification 
for later use by a tree parser (or manual tree parsing 
code).  This way, they have the semantic information you'd get 
from a parse tree, without being rigidly tied to the rule 
structure (which means that you can refactor the rules without 
affecting the output, and you can leave out levels that don't 
really add any useful information).

>I've been looking at creating a tree grammar, but are the 
>'actions' that you define simply the code that you insert in the 
>tree node definitions? In fact, are the rules in a tree grammar 
>the content of each of the nodes in the tree? If I'm not planning 
>on re-ordering anything, or putting in any actions (I want to do 
>most things code-side apart from the parse tree construction) do 
>I need to create the tree grammar, or can I just use the normal 
>grammar I wrote?

The whole point of a tree grammar is usually to walk through an 
existing tree and carry out some actions as you go.  (Another 
possibility is to output a modified AST, or to use StringTemplate 
to generate some output.)  It's basically just a replacement for 
writing your own tree-walking code.  If you'd rather write the 
walking code yourself, that's fine.


From parrt at cs.usfca.edu  Tue Mar 10 12:42:43 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Mar 2009 12:42:43 -0700
Subject: [antlr-interest] problem with composite grammars
In-Reply-To: <49B6B032.3000503@gmail.com>
References: <49B6B032.3000503@gmail.com>
Message-ID: <E8490488-6916-405D-BD80-75CF2BD5A400@cs.usfca.edu>


On Mar 10, 2009, at 11:23 AM, Maciej Gawinecki wrote:

> Hello,
>
> To overcome the problem ofexceeding code size of generated parser  
> class
> I decided to make my SQL grammar more composite: I splitted it into
> lexer, parser and combined grammars, where the latter imports the  
> first two:
>
>   grammar AnsiSQL;

that defines both a parser and a lexer already, named exactly what you  
have next:

T
>
>   import AnsiSQLLexer;
>   import AnsiSQLParser;
>
> However, I got the following error, which I don't understand:
>
>   combined grammar AnsiSQL and imported lexer grammar AnsiSQLLexer  
> both
>   generate AnsiSQL_AnsiSQLLexer
>
> What could be the reason and how can I solve the problem?
>
> I'm working with ANTLRWork 1.2.3.
>
> Maciej
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From whschultz at cedrus.com  Tue Mar 10 13:50:19 2009
From: whschultz at cedrus.com (William H. Schultz)
Date: Tue, 10 Mar 2009 13:50:19 -0700
Subject: [antlr-interest] C Target AST Debug Compile Error
Message-ID: <EE37A946-4A31-4FB8-B547-B7A1FD7AF144@cedrus.com>

Hello all!  I just signed up to this list as I was unable to find any  
mention of this issue anywhere on the internet, so I don't know if  
it's just me.

I'm getting the following compile errors:

SimpleCWalker.c: In function ?SimpleCWalker_Ctx_struct*  
SimpleCWalkerNewSSD(ANTLR3_COMMON_TREE_NODE_STREAM_struct*,  
ANTLR3_RECOGNIZER_SHARED_STATE_struct*)?:
SimpleCWalker.c:358: error: ?struct  
ANTLR3_COMMON_TREE_NODE_STREAM_struct? has no member named ?tokenSource?
SimpleCWalker.c:358: error: ?struct  
ANTLR3_COMMON_TREE_NODE_STREAM_struct? has no member named ?tokenSource?
SimpleCWalker.c:360: error: ?struct ANTLR3_TREE_PARSER_struct? has no  
member named ?setDebugListener?


I'm attaching my modifications to the C Target Makefile that I had to  
do in order to get the samples to build a binary under Mac OS X.   
There are a couple paths hard-coded into it, so you'll have to do  
minor tweaks to get it to work for you, but otherwise, it should be  
generic enough to compile any of the C Target samples (I'm definitely  
no expert on GNU Make).  The above compile errors do NOT happen when  
compiling the grammars without ANTLR's "-debug" flag, and it also only  
happens with tree grammars.  I figured finding the issue in a sample  
would seem to imply a bug...  unless I'm doing something completely  
wrong.


Ideas?


-------------------------------
Hank Schultz
Cedrus Corporation
http://www.cedrus.com/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Makefile
Type: application/octet-stream
Size: 4357 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/3d4e78a7/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 195 bytes
Desc: This is a digitally signed message part
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/3d4e78a7/attachment.bin 

From jaluber at gmx.de  Tue Mar 10 14:36:13 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 10 Mar 2009 22:36:13 +0100
Subject: [antlr-interest] v3.1.2 breakage in Lexer with +=
In-Reply-To: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>
References: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>
Message-ID: <49B6DD4D.4000100@gmx.de>

Greg Smolyn schrieb:
> Hi,
> 
> I just upgraded from Antlr 3.1.1 to 3.1.2, and have discovered that a  
> simple construct in my lexer no longer compiles:
> 
> fragment F_HEXDIGIT
>    : '0'..'9' | 'a'..'f' | 'A'..'F'
>    ;
> 
> fragment F_UNICODEDIGITS
>    : (h+=F_HEXDIGIT)+ {$h.Count <= 6}?
>    ;
> 
> 
> In 3.1.1 this works fine, but in 3.1.2, the "h" is not defined inside  
> the generated function!
> 
> Is this a bug or am I doing something wrong?  I'm using the CSharp2  
> generator and the output=AST option.
> 
> -greg

Not sure why it doesn't work for you, but with the attached grammar the
generated code seems to be ok. Maybe you look for a variable named "h",
but instead there is one named "list_h".

Johannes
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: TestList.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/aa9f96d6/attachment.pl 

From jimi at temporal-wave.com  Tue Mar 10 14:42:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Mar 2009 14:42:13 -0700
Subject: [antlr-interest] C Target AST Debug Compile Error
In-Reply-To: <EE37A946-4A31-4FB8-B547-B7A1FD7AF144@cedrus.com>
References: <EE37A946-4A31-4FB8-B547-B7A1FD7AF144@cedrus.com>
Message-ID: <49B6DEB5.3000609@temporal-wave.com>

William H. Schultz wrote:
> Hello all!  I just signed up to this list as I was unable to find any 
> mention of this issue anywhere on the internet, so I don't know if 
> it's just me.
>
> I'm getting the following compile errors:
>
> SimpleCWalker.c: In function ?SimpleCWalker_Ctx_struct* 
> SimpleCWalkerNewSSD(ANTLR3_COMMON_TREE_NODE_STREAM_struct*, 
> ANTLR3_RECOGNIZER_SHARED_STATE_struct*)?:
> SimpleCWalker.c:358: error: ?struct 
> ANTLR3_COMMON_TREE_NODE_STREAM_struct? has no member named ?tokenSource?
> SimpleCWalker.c:358: error: ?struct 
> ANTLR3_COMMON_TREE_NODE_STREAM_struct? has no member named ?tokenSource?
> SimpleCWalker.c:360: error: ?struct ANTLR3_TREE_PARSER_struct? has no 
> member named ?setDebugListener?
>
>
> I'm attaching my modifications to the C Target Makefile that I had to 
> do in order to get the samples to build a binary under Mac OS X.  
There are no changes you need to make to the Makefile for MAC. Perhaps 
you did not configure/build correctly?
> There are a couple paths hard-coded into it, so you'll have to do 
> minor tweaks to get it to work for you, but otherwise, it should be 
> generic enough to compile any of the C Target samples (I'm definitely 
> no expert on GNU Make).  The above compile errors do NOT happen when 
> compiling the grammars without ANTLR's "-debug" flag, and it also only 
> happens with tree grammars.  I figured finding the issue in a sample 
> would seem to imply a bug...  unless I'm doing something completely 
> wrong.
Have you:

a) Downloaded the latest ANTLR and C runtime?
b) Downloaded the latest samples?
c) run ./configure in the C runtime directory taht is created when you 
untar the C runtime;
d) Run make all after ./configure
e) Run sudo make install
d) Compiled as:

     gcc -o sample *.c -I. -I/usr/local/include


(assuming that you did a make install to /usr/local

Please check the online documentation on building the runtime and so 
on.. Take the Runtime API link from the home page.

Jim


From greg at smolyn.org  Tue Mar 10 14:42:26 2009
From: greg at smolyn.org (Greg Smolyn)
Date: Tue, 10 Mar 2009 14:42:26 -0700
Subject: [antlr-interest] v3.1.2 breakage in Lexer with +=
In-Reply-To: <49B6DD4D.4000100@gmx.de>
References: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>
	<49B6DD4D.4000100@gmx.de>
Message-ID: <A221D6A6-8DE4-4CAD-8FC1-3C30867CE918@smolyn.org>

Hi, I just gave that a try and it doesn't come out right at all.

Try compiling it-- you'll see that it's missing the variable  
introduction for $h.Count

In mF_UNICODEDIGITS, it should be creating an IToken or ITree h, as  
well as IList list_h.  This was what ANTLR 3.1.1 did.  However, it  
does not, and so $h.Count cannot be compiled, because there is no  
variable to be put in the place for $h!

The list_h was there before and is the list that h is supposed to get  
added to.


On 10-Mar-09, at 2:36 PM, Johannes Luber wrote:
>
> grammar TestList;
>
> options{
> language=CSharp2;
> }
>
>
> rule
> 	:	DIGIT
> 	;
>
> DIGIT
> 	:	 F_UNICODEDIGITS
> 	;
>
> fragment F_HEXDIGIT
>   : '0'..'9' | 'a'..'f' | 'A'..'F'
>   ;
>
> fragment F_UNICODEDIGITS
>   : (h+=F_HEXDIGIT)+ {$h.Count <= 6}?
>   ;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090310/1ddbca9c/attachment.html 

From jaluber at gmx.de  Tue Mar 10 15:05:37 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 10 Mar 2009 23:05:37 +0100
Subject: [antlr-interest] v3.1.2 breakage in Lexer with +=
In-Reply-To: <A221D6A6-8DE4-4CAD-8FC1-3C30867CE918@smolyn.org>
References: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>
	<49B6DD4D.4000100@gmx.de>
	<A221D6A6-8DE4-4CAD-8FC1-3C30867CE918@smolyn.org>
Message-ID: <49B6E431.3040100@gmx.de>

Greg Smolyn schrieb:
> Hi, I just gave that a try and it doesn't come out right at all.
> 
> Try compiling it-- you'll see that it's missing the variable
> introduction for $h.Count
> 
> In mF_UNICODEDIGITS, it should be creating an IToken or ITree h, as well
> as IList list_h.  This was what ANTLR 3.1.1 did.  However, it does not,
> and so $h.Count cannot be compiled, because there is no variable to be
> put in the place for $h!
> 
> The list_h was there before and is the list that h is supposed to get
> added to.

Ah, I didn't notice that. I've managed to trace the cause down to a line
which ended up in the wrong template. I'll look into another release to
fix that problem.

Johannes
> 
> 
> On 10-Mar-09, at 2:36 PM, Johannes Luber wrote:
>>
>> grammar TestList;
>>
>> options{
>> language=CSharp2;
>> }
>>
>>
>> rule
>> : DIGIT
>> ;
>>
>> DIGIT
>> : F_UNICODEDIGITS
>> ;
>>
>> fragment F_HEXDIGIT
>>   : '0'..'9' | 'a'..'f' | 'A'..'F'
>>   ;
>>
>> fragment F_UNICODEDIGITS
>>   : (h+=F_HEXDIGIT)+ {$h.Count <= 6}?
>>   ;
> 


From greg at smolyn.org  Tue Mar 10 15:17:52 2009
From: greg at smolyn.org (Greg Smolyn)
Date: Tue, 10 Mar 2009 15:17:52 -0700
Subject: [antlr-interest] v3.1.2 breakage in Lexer with +=
In-Reply-To: <49B6E431.3040100@gmx.de>
References: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>
	<49B6DD4D.4000100@gmx.de>
	<A221D6A6-8DE4-4CAD-8FC1-3C30867CE918@smolyn.org>
	<49B6E431.3040100@gmx.de>
Message-ID: <D2F341EC-D578-404E-BDB0-8EB9F963A17B@smolyn.org>

Awesome, thanks very much!

  -greg


From michael.bedward at gmail.com  Tue Mar 10 16:22:14 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 11 Mar 2009 10:22:14 +1100
Subject: [antlr-interest] skipping whitespaces in code and avoiding it
	in comments
In-Reply-To: <49B4F888.7050501@lancaster.ac.uk>
References: <49B42019.6060709@gmail.com> <49B4249E.6010204@lancaster.ac.uk>
	<49B4E346.3090609@gmail.com> <49B4F888.7050501@lancaster.ac.uk>
Message-ID: <e24c4c270903101622n45b87cfdjd63d706ab4203050@mail.gmail.com>

Have a look at this page...

http://www.antlr.org/wiki/pages/viewpage.action?pageId=557063

Michael

2009/3/9 Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk>:
> The whole point of the hidden channel (rather than just discarding) is
> that the parser *can* tune to it, or use it for context checking in
> predicates, or use it in actions. I've never done it, so I can't tell
> you how, but I know it can be done.
>
> Sam

From whschultz at cedrus.com  Tue Mar 10 18:02:43 2009
From: whschultz at cedrus.com (William H. Schultz)
Date: Tue, 10 Mar 2009 18:02:43 -0700
Subject: [antlr-interest] C Target AST Debug Compile Error
In-Reply-To: <49B6DEB5.3000609@temporal-wave.com>
References: <EE37A946-4A31-4FB8-B547-B7A1FD7AF144@cedrus.com>
	<49B6DEB5.3000609@temporal-wave.com>
Message-ID: <4866D858-3BE8-4278-B22A-81F5F2B74BE1@cedrus.com>


On Mar 10, 2009, at 2:42 PM, Jim Idle wrote:

> William H. Schultz wrote:
>> Hello all!  I just signed up to this list as I was unable to find any
>> mention of this issue anywhere on the internet, so I don't know if
>> it's just me.
>>
>> I'm getting the following compile errors:
>>
>> SimpleCWalker.c: In function ?SimpleCWalker_Ctx_struct*
>> SimpleCWalkerNewSSD(ANTLR3_COMMON_TREE_NODE_STREAM_struct*,
>> ANTLR3_RECOGNIZER_SHARED_STATE_struct*)?:
>> SimpleCWalker.c:358: error: ?struct
>> ANTLR3_COMMON_TREE_NODE_STREAM_struct? has no member named  
>> ?tokenSource?
>> SimpleCWalker.c:358: error: ?struct
>> ANTLR3_COMMON_TREE_NODE_STREAM_struct? has no member named  
>> ?tokenSource?
>> SimpleCWalker.c:360: error: ?struct ANTLR3_TREE_PARSER_struct? has no
>> member named ?setDebugListener?
>>
>>
>> I'm attaching my modifications to the C Target Makefile that I had to
>> do in order to get the samples to build a binary under Mac OS X.
> There are no changes you need to make to the Makefile for MAC. Perhaps
> you did not configure/build correctly?

I'm talking about the makefile in examples-v3/C/make/ 
Makefile.grammar.  The only thing this makefile does is turn the  
grammar files into C files--it doesn't compile or link anything.  The  
modification I made was so that it would also separately compile and  
link the C files.  Of course, you could run g++ by hand and pass it  
the flags, but doesn't that defeat the purpose of having a makefile?

>
>> There are a couple paths hard-coded into it, so you'll have to do
>> minor tweaks to get it to work for you, but otherwise, it should be
>> generic enough to compile any of the C Target samples (I'm definitely
>> no expert on GNU Make).  The above compile errors do NOT happen when
>> compiling the grammars without ANTLR's "-debug" flag, and it also  
>> only
>> happens with tree grammars.  I figured finding the issue in a sample
>> would seem to imply a bug...  unless I'm doing something completely
>> wrong.
> Have you:
>
> a) Downloaded the latest ANTLR and C runtime?

Using the antlrworks.jar inside the ANTLRWorks version 1.2.3 app  
bundle.  Using libantlr3c-3.1.2.

>
> b) Downloaded the latest samples?

The tarball has a timestamp of 2/26/09 (which is after the release of  
3.1.2), so unless things have changed in the last few weeks, yes.

>
> c) run ./configure in the C runtime directory taht is created when you
> untar the C runtime;

mkdir osx_debug
cd osx_debug
ln -s ../include .       <-- this is because the scripts seem to  
assume the library is not being built from a different directory
../configure --enable-debuginfo --enable-antlrdebug --prefix="$PWD/../ 
built_libs"

>
> d) Run make all after ./configure

make

It seems to do the same thing with or without "all."


>
> e) Run sudo make install

make install     <--- no sudo because it's being installed in my own  
home directory.

>
> d) Compiled as:
>
>     gcc -o sample *.c -I. -I/usr/local/include
>
>
> (assuming that you did a make install to /usr/local

Roughly, yes.  See above.


>
>
> Please check the online documentation on building the runtime and so
> on.. Take the Runtime API link from the home page.

Already done.  So long as I don't pass the "-debug" flag to ANTLR when  
compiling a tree grammar file, everything is fine.  Doing this with  
the samples requires modifying the Makefiles since they don't pass the  
flag.  As a result, the samples keep running and spit out results  
instead of stopping and waiting for a remote debugger.

I know I'm a newb with ANTLR, so I know there's always the possibility  
I missed something simple, but so far as I can tell, I haven't.  I ran  
into this issue writing my own AST grammar and went back to the  
samples to see what I did wrong, but when compiled with remote  
debugging enabled, they seem to have the same problem.

Of course, I recognize that you're the guy that wrote the C target, so  
you'd definitely know better than I.

Thanks for the reply.


>
>
> Jim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------------------------
Hank Schultz
Cedrus Corporation
http://www.cedrus.com/



From yimm8369 at hotmail.com  Tue Mar 10 21:35:20 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 11 Mar 2009 12:35:20 +0800
Subject: [antlr-interest] How to compare the value of token in tree grammar?
Message-ID: <BAY122-W99CAEFFBC48C548E1C26DDB9E0@phx.gbl>


 

Hi everyone:

 

Here is my tree grammar, what I want to do is when IDENTIFIER is equal to Number , then use template of fortype to change the Number to int.

 

forqualifiedName 
    : ^(FOR_QUALIFIED_NAME id=IDENTIFIER DOT* IDENTIFIER*)     {$IDENTIFIER.text.equals("Number")}? ->fortype(x={"int"})                                           
    | ^(FOR_QUALIFIED_NAME VOID)   
    ;

 

but an error occur said "java.lang.Error: Unresolved compilation problem: 
 The method getText() is undefined for the type Object"

 

Is there something worng with        $IDENTIFIER.text.equals("Number")   ?

 

 

Thanks in advance.

 

 

 

 

 

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090311/8da558e4/attachment.html 

From jimi at temporal-wave.com  Wed Mar 11 00:18:27 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Mar 2009 00:18:27 -0700
Subject: [antlr-interest] How to compare the value of token in tree
	grammar?
In-Reply-To: <BAY122-W99CAEFFBC48C548E1C26DDB9E0@phx.gbl>
References: <BAY122-W99CAEFFBC48C548E1C26DDB9E0@phx.gbl>
Message-ID: <49B765C3.7060109@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090311/9c004e35/attachment.html 

From chainone at gmail.com  Wed Mar 11 02:54:42 2009
From: chainone at gmail.com (chain one)
Date: Wed, 11 Mar 2009 17:54:42 +0800
Subject: [antlr-interest] Is there anyway to get the char index of one token
	in parser?
Message-ID: <5a92ffb60903110254t6abfef6bv120087bcf1912899@mail.gmail.com>

It seems the charPosition() function from token strut returns the char
position in line, not the offset from the start of the input stream.So, I
wondering is there anyway to get the char index of one token from the start
of the input stream in parser?

Thanks,
Best Regards,
chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090311/4742940c/attachment.html 

From jimi at temporal-wave.com  Wed Mar 11 09:02:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Mar 2009 09:02:31 -0700
Subject: [antlr-interest] Is there anyway to get the char index of one
 token	in parser?
In-Reply-To: <5a92ffb60903110254t6abfef6bv120087bcf1912899@mail.gmail.com>
References: <5a92ffb60903110254t6abfef6bv120087bcf1912899@mail.gmail.com>
Message-ID: <49B7E097.9000406@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090311/a59af3e9/attachment.html 

From antlr at jazillian.com  Wed Mar 11 10:03:26 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 11 Mar 2009 13:03:26 -0400
Subject: [antlr-interest] Parsing fields in a CSV file
In-Reply-To: <95b1cc100903101056ufb7d381p1f76484cf44b883c@mail.gmail.com>
References: <95b1cc100903101056ufb7d381p1f76484cf44b883c@mail.gmail.com>
Message-ID: <49B7EEDE.4030902@jazillian.com>

Rick Schumeyer wrote:

> Another alternative, which sounds crazy but I'll ask anyway, is to write 
> a separate parser that only parses the above date/time field, and call 
> that parser from within the rule that receives the timestamp field. 

I think that's actually the easiest way: let ANTLR's lexer just see the
whole date as a single string, and then parse the date into individual
fields separately. You could do that with another ANTLR parser, "by hand",
or (if using Java) use the DateFormat class and its parse() method.

Andy

From jaluber at gmx.de  Wed Mar 11 10:05:10 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Mar 2009 18:05:10 +0100
Subject: [antlr-interest] v3.1.2 breakage in Lexer with +=
In-Reply-To: <D2F341EC-D578-404E-BDB0-8EB9F963A17B@smolyn.org>
References: <F9EBA000-8683-4505-A2B9-76D26E1FED20@smolyn.org>
	<49B6DD4D.4000100@gmx.de>
	<A221D6A6-8DE4-4CAD-8FC1-3C30867CE918@smolyn.org>
	<49B6E431.3040100@gmx.de>
	<D2F341EC-D578-404E-BDB0-8EB9F963A17B@smolyn.org>
Message-ID: <49B7EF46.5000109@gmx.de>

Greg Smolyn schrieb:
> Awesome, thanks very much!
> 
>  -greg
> 

Until 3.1.3 is released you can use the current Hudson build.

Johannes

From robert.soule at gmail.com  Wed Mar 11 10:10:39 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Wed, 11 Mar 2009 13:10:39 -0400
Subject: [antlr-interest] source to source transformations
Message-ID: <d1316fd70903111010o45e5153bk6821fbe83112eec4@mail.gmail.com>

Hi,


The high level goal that I am trying to accomplish is to translate one
language to another. For the sake of an example, lets say that
language one (A) looks like ('a'|'b')*, while the second language (B)
looks like 'ASECTION' 'a'* 'BSECTION' 'b'*. I have simple parsers and
tree grammars to print the ASTs of both languages.

I can see a few approaches to doing the translation. First, I could
make multiple passes on the A language input, first to print all the
'a' statements I encounter, then to print all the 'b' statements I
encounter, but this approach doesn't seem so great. It only allows me
to print, not construct a B language AST, so I can't do any analysis.
Also, I have to make multiple passes of the AST, so it is somewhat
slow.

The AST re-write rules don't seem to me to be that sufficiently
powerful to do this type of tree transformations either, by which I
mean, I could not convert an A language AST to a B language AST using
only tree re-writes. If I am mistaken about this, can you point me to
an example of this type of translation?

What I think the right translation approach is to build a B language
AST by hand. So, when I start the translation, I create a B language
stub AST (maybe a program node, with null a section and b section
children). I then would want to hold pointers to both those null
childen, and when I encounter an 'a' or 'b; statement, I add it as a
child to the appropriate parent node.

However, I don't see an easy way to do this with ANTLR. Is there a
recommended approach? In the past, I have used Rats!
(http://www.cs.nyu.edu/rgrimm/xtc/), which provides a
"FactoryFactory". This lets you define part of an AST, with place
holders for adding in
nodes of the children. I was wondering if there is an equivalent
facility in ANTLR?

Any advice you can provide me would be really appreciated.

thank you,
Robert

From ToddStevenson at ge.com  Wed Mar 11 10:17:22 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Wed, 11 Mar 2009 13:17:22 -0400
Subject: [antlr-interest] Simple grammar will not compile. I can't figure it
	out.
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>

This grammar will not compile.  I can't figure out why not.  It
generates the error:
 
reference to undefined rule: keypath
 
even though it exists.  Help!
 
Thanks.
 
------------------------------------------------------------------------
------------------------------------------------
grammar cepath;
 
options {
 output=AST;
 ASTLabelType=CommonTree; 
}
 
 
 
start
 : cpath EOF
 ;
 
cpath 
 : KEY keypath
 | DataPath
 ; 
 
DataPath
 : CODE keypath
 ;
 

keypath
 : SEP CODE 
 | SEP DOMAIN
 ;
 

// $<lex
 
KEY    : 'key';
CODE   : 'code';
DOMAIN   : 'domain';
 

SEP  : '.';
WS   :  ( '\r' | '\n')+ {skip();};
 
// $>
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090311/4e443f7b/attachment.html 

From andreas.meyer at smartshift.de  Wed Mar 11 10:23:28 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Wed, 11 Mar 2009 18:23:28 +0100
Subject: [antlr-interest] Simple grammar will not compile. I can't
 figure it	out.
In-Reply-To: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>
Message-ID: <49B7F390.2070905@smartshift.de>

It seems that ANTLR's error messages could be improved in this case .... 
DataPath is a lexer rule, because of ANTLR's naming conventions: 
everything starting with a capital letter is a lexer rule. And as such, 
it only can refer to other lexer rules (or fragments). But, keypath 
(because of its lowercase spelling) is a parser rule and therefore not 
visible to the lexer. So, I guess you could just turn DataPath into 
dataPath, so that it becomes a parser rule (if that's your intention).

Best,
Andreas

Stevenson, Todd (GE Healthcare, consultant) schrieb:
> This grammar will not compile.  I can't figure out why not.  It 
> generates the error:
>  
> reference to undefined rule: keypath
>  
> even though it exists.  Help!
>  
> Thanks.
>  
> ------------------------------------------------------------------------------------------------------------------------
> grammar cepath;
>  
> options {
>  output=AST;
>  ASTLabelType=CommonTree;
> }
>  
>  
>  
> start
>  : cpath EOF
>  ;
>  
> cpath 
>  : KEY keypath
>  | DataPath
>  ;
>  
> DataPath
>  : CODE keypath
>  ;
>  
>
> keypath
>  : SEP CODE
>  | SEP DOMAIN
>  ;
>  
>
> // $<lex
>  
> KEY    : 'key';
> CODE   : 'code';
> DOMAIN   : 'domain';
>  
>
> SEP  : '.';
> WS   :  ( '\r' | '\n')+ {skip();};
>  
> // $>
>  
>  
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From s.barnett-cormack at lancaster.ac.uk  Wed Mar 11 10:25:55 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 11 Mar 2009 17:25:55 +0000
Subject: [antlr-interest] Simple grammar will not compile. I can't
 figure it	out.
In-Reply-To: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>
Message-ID: <49B7F423.4080706@lancaster.ac.uk>

Stevenson, Todd (GE Healthcare, consultant) wrote:
> This grammar will not compile.  I can't figure out why not.  It 
> generates the error:
>  
> reference to undefined rule: keypath
>  
> even though it exists.  Help!
>  
> Thanks.
>  
> ------------------------------------------------------------------------------------------------------------------------

>  
> DataPath
>  : CODE keypath
>  ;

The initial capital makes this a lexer rule

> keypath
>  : SEP CODE
>  | SEP DOMAIN
>  ;
>  


This is a parser rule.

Lexer rules can't refer to parser rules (obviously). You probably just 
want to make DataPath -> dataPath.

Sam

From antlr at mirality.co.nz  Wed Mar 11 12:03:11 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 12 Mar 2009 08:03:11 +1300
Subject: [antlr-interest] source to source transformations
In-Reply-To: <d1316fd70903111010o45e5153bk6821fbe83112eec4@mail.gmail.co
 m>
References: <d1316fd70903111010o45e5153bk6821fbe83112eec4@mail.gmail.com>
Message-ID: <20090311190341.3A51134184CD@www.antlr.org>

At 06:10 12/03/2009, Robert Soule wrote:
 >What I think the right translation approach is to build a B
 >language AST by hand. So, when I start the translation, I
 >create a B language stub AST (maybe a program node, with
 >null a section and b section children). I then would want
 >to hold pointers to both those null childen, and when I
 >encounter an 'a' or 'b; statement, I add it as a child to
 >the appropriate parent node.

You should be able to do this using scopes to hold either the root 
or the most-recently-added child of each set (I forget which one 
the tree api needs).  Or, for that matter, member 
variables.  Basically just call the tree-construction routines "by 
hand" as needed.


From laurent.caillette at gmail.com  Wed Mar 11 13:45:51 2009
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Wed, 11 Mar 2009 21:45:51 +0100
Subject: [antlr-interest] Simple grammar will not compile. I can't
	figure it out.
In-Reply-To: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BA127C0@CINMLVEM11.e2k.ad.ge.com>
Message-ID: <3b7c64070903111345k5a78bf46u2dadf558fa7f79d1@mail.gmail.com>

ANTLR doesn't appreciate the uppercase 'D' of 'DataPath'. Uppercase
means a token. Turning 'DataPath' to 'dataPath' makes ANTLR happy.

c.

On Wed, Mar 11, 2009 at 6:17 PM, Stevenson, Todd (GE Healthcare,
consultant) <ToddStevenson at ge.com> wrote:
> This grammar will not compile.? I can't figure out why not.? It generates
> the error:
>
> reference to undefined rule: keypath
>
> even though it exists.? Help!
>
> Thanks.
>
> ------------------------------------------------------------------------------------------------------------------------
> grammar cepath;
>
> options {
> ?output=AST;
> ?ASTLabelType=CommonTree;
> }
>
>
>
> start
> ?: cpath EOF
> ?;
>
> cpath
> ?: KEY keypath
> ?| DataPath
> ?;
>
> DataPath
> ?: CODE keypath
> ?;
>
> keypath
> ?: SEP CODE
> ?| SEP DOMAIN
> ?;
>
> // $<lex
>
> KEY????: 'key';
> CODE???: 'code';
> DOMAIN???: 'domain';
>
> SEP??: '.';
> WS? ?: ?( '\r' | '\n')+ {skip();};
>
> // $>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From robert.soule at gmail.com  Wed Mar 11 14:54:58 2009
From: robert.soule at gmail.com (Robert Soule)
Date: Wed, 11 Mar 2009 17:54:58 -0400
Subject: [antlr-interest] create a tree with an ID token in the C runtime...
Message-ID: <d1316fd70903111454h28cd9125o3f4dea3e4a267be2@mail.gmail.com>

Hi,

Sorry to keep spamming this list with my problems.

I am trying to create an ID node that is usually recognized by the
lexer by hand.
I create my node in the following way:

pANTLR3_STRING_FACTORY strFactory = antlr3StringFactoryNew();
pANTLR3_BASE_TREE_ADAPTOR ADAPTOR = ANTLR3_TREE_ADAPTORNew(strFactory);

MyParser_compilationUnit_return retval;
 pANTLR3_BASE_TREE compilationUnit =
(pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, COMPILATIONUNIT,
NULL);
// create some more pANTLR3_BASE_TREE instances...
pANTLR3_COMMON_TOKEN token        = ADAPTOR->createToken(ADAPTOR, ID,
(pANTLR3_UINT8)"Sample");
pANTLR3_BASE_TREE id                      =
(pANTLR3_BASE_TREE)ADAPTOR->create(ADAPTOR, token);
// add children using calls like: ADAPTOR->addChild(ADAPTOR,
compilationUnit, <trees>);
retval.tree = compilationUnit;

Later, though, when I try to print, I am getting a crash:

Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_PROTECTION_FAILURE at address: 0x00000004
0x00004503 in pt (ctx=0x803800, t=0x2b81f0) at Printer.cpp:16642
16642	                 cout << t->getText(t)->chars;
(gdb)

I don't see what I'm doing wrong when I am creating my AST. I've been looking at
the documentation, and the source itself, but I can't figure out what
I did wrong..

When I print the tree I constucted with
ast.tree->toStringTree(ast.tree)->char, I see:

( ( (   ) ))

but I expect:
( ( ( Sample  ) ))

thanks,
Robert

From floris.vannee at gmail.com  Wed Mar 11 16:24:24 2009
From: floris.vannee at gmail.com (Floris van Nee)
Date: Thu, 12 Mar 2009 00:24:24 +0100
Subject: [antlr-interest] antlr 3.1 ast rewriting
Message-ID: <2302ac370903111624h4a312cdeu8ad2676487097702@mail.gmail.com>

Hello!

I've got a question about rewriting an AST in a tree grammar, with C# as
target language. The code Antlr generates just won't compile when I set the
'output=AST' in my tree grammar options.
It complains about lines like this:

if ( _first_1==null ) _first_1 = qual.Tree;

Error    2    Cannot implicitly convert type 'object' to
'Antlr.Runtime.Tree.CommonTree'. An explicit conversion exists (are you
missing a cast?)    C:\Users\floris\Documents\Visual Studio
2008\Projects\Vnvd\Vnvd\vNVDCheckerPassTwo.cs    315    58    Vnvd

Here _first_1 is of type CommonTree, and qual.Tree of type object. It needs
an explicit cast there, but when Antlr generates the code, it doesn't add
one. Is this something I did wrong in my grammar file, or is this a bug?
I am using the latest version of Antlr (3.1.2).

Thanks in advance,
Floris

Here are the contents of my (simplified) grammar file:

tree grammar vNVDCheckerPassTwo;

options
{
    ASTLabelType = CommonTree;
    tokenVocab = vNVD;
    language = CSharp2;
    rewrite = true;
    output = AST;
}

program
    :    ^(node=PROGRAM import_stat* namespace_decl*)
    ;

import_stat
    :    ^(node=USING qual=qualifier)
    ;

namespace_decl
    :    ^(node=NAMESPACE qual=qualifier (namespace_decl)*)
    ;

qualifier
    :    ^(fqual=FQUALIFIER IDENTIFIER+)
    ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090312/44a168e2/attachment.html 

From michael.bedward at gmail.com  Wed Mar 11 20:00:23 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 12 Mar 2009 14:00:23 +1100
Subject: [antlr-interest] SVN repository for ANTLR Maven plugin?
In-Reply-To: <736021ac0903110938m31bbb32fx357ea9aa698ac64e@mail.gmail.com>
References: <736021ac0903110938m31bbb32fx357ea9aa698ac64e@mail.gmail.com>
Message-ID: <e24c4c270903112000j32af5891ye21d594ade17fd71@mail.gmail.com>

Hi Emmanuel,

I'm forwarding your post and this reply to the ANTLR list.

I was going to look into that issue myself but haven't got to it, so
it's really nice to hear from you :)  But before you do too much
hacking have a look at this latest work if you haven't already...

http://antlr.org/hudson/job/Maven_Plugin/39/changes

...and then perhaps get back to us on the ANTLR list to discuss the
plugin with Jim Idle, the author of the current code.

All the best
Michael

From jimi at temporal-wave.com  Wed Mar 11 20:27:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Mar 2009 20:27:51 -0700
Subject: [antlr-interest] SVN repository for ANTLR Maven plugin?
In-Reply-To: <e24c4c270903112000j32af5891ye21d594ade17fd71@mail.gmail.com>
References: <736021ac0903110938m31bbb32fx357ea9aa698ac64e@mail.gmail.com>
	<e24c4c270903112000j32af5891ye21d594ade17fd71@mail.gmail.com>
Message-ID: <49B88137.6050506@temporal-wave.com>

Michael Bedward wrote:
> Hi Emmanuel,
>
> I'm forwarding your post and this reply to the ANTLR list.
>
> I was going to look into that issue myself but haven't got to it, so
> it's really nice to hear from you :)  But before you do too much
> hacking have a look at this latest work if you haven't already...
>
> http://antlr.org/hudson/job/Maven_Plugin/39/changes
>
> ...and then perhaps get back to us on the ANTLR list to discuss the
> plugin with Jim Idle, the author of the current code.
>
> All the best
> Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   
Actually, I have just finished completely re-writing the maven plugin 
and integrating the support code back in to the Tool.java. We will have 
a release 3.1.3 before the end of the weekend all being well. I believe 
that I have fixed up all the problems that were in the current plugin, 
including implementing all the options and providing the ability to 
support import grammars.

The new code will in Hudson shortly (src jar is available from there)

Keep your eye on: 
http://antlr.org/hudson/job/Maven_Plugin/lastSuccessfulBuild/org.antlr$antlr3-maven-plugin/

It will be announced on this list of course.

Jim

From michael.bedward at gmail.com  Wed Mar 11 20:59:25 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 12 Mar 2009 14:59:25 +1100
Subject: [antlr-interest] SVN repository for ANTLR Maven plugin?
In-Reply-To: <49B88137.6050506@temporal-wave.com>
References: <736021ac0903110938m31bbb32fx357ea9aa698ac64e@mail.gmail.com>
	<e24c4c270903112000j32af5891ye21d594ade17fd71@mail.gmail.com>
	<49B88137.6050506@temporal-wave.com>
Message-ID: <e24c4c270903112059n273450e4q9de4a66bafc97250@mail.gmail.com>

rustle, rustle...

that's the sound of me rubbing my hands together in anticipation :)

Michael

From jaluber at gmx.de  Thu Mar 12 00:16:05 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 12 Mar 2009 08:16:05 +0100
Subject: [antlr-interest] antlr 3.1 ast rewriting
In-Reply-To: <2302ac370903111624h4a312cdeu8ad2676487097702@mail.gmail.com>
References: <2302ac370903111624h4a312cdeu8ad2676487097702@mail.gmail.com>
Message-ID: <49B8B6B5.5080404@gmx.de>

Floris van Nee schrieb:
> Hello!
> 
> I've got a question about rewriting an AST in a tree grammar, with C# as
> target language. The code Antlr generates just won't compile when I set
> the 'output=AST' in my tree grammar options.
> It complains about lines like this:
> 
> if ( _first_1==null ) _first_1 = qual.Tree;
> 
> Error    2    Cannot implicitly convert type 'object' to
> 'Antlr.Runtime.Tree.CommonTree'. An explicit conversion exists (are you
> missing a cast?)    C:\Users\floris\Documents\Visual Studio
> 2008\Projects\Vnvd\Vnvd\vNVDCheckerPassTwo.cs    315    58    Vnvd
> 
> Here _first_1 is of type CommonTree, and qual.Tree of type object. It
> needs an explicit cast there, but when Antlr generates the code, it
> doesn't add one. Is this something I did wrong in my grammar file, or is
> this a bug?
> I am using the latest version of Antlr (3.1.2).
> 
> Thanks in advance,
> Floris

I need a full working grammar, which includes at least the .tokens-file.
I haven't tested yet, if that is enough or if I do need also the parser
and lexer. Full working means that I can generate the grammar on my
system so I can look up where I seemingly missed the conversion.

Johannes
> 
> Here are the contents of my (simplified) grammar file:
> 
> tree grammar vNVDCheckerPassTwo;
> 
> options
> {
>     ASTLabelType = CommonTree;
>     tokenVocab = vNVD;
>     language = CSharp2;
>     rewrite = true;
>     output = AST;
> }
> 
> program
>     :    ^(node=PROGRAM import_stat* namespace_decl*)
>     ;
> 
> import_stat
>     :    ^(node=USING qual=qualifier)
>     ;
> 
> namespace_decl
>     :    ^(node=NAMESPACE qual=qualifier (namespace_decl)*)
>     ;
> 
> qualifier
>     :    ^(fqual=FQUALIFIER IDENTIFIER+)
>     ;
> 
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From floris.vannee at gmail.com  Thu Mar 12 03:02:45 2009
From: floris.vannee at gmail.com (Floris van Nee)
Date: Thu, 12 Mar 2009 11:02:45 +0100
Subject: [antlr-interest] antlr 3.1 ast rewriting
In-Reply-To: <49B8B6B5.5080404@gmx.de>
References: <2302ac370903111624h4a312cdeu8ad2676487097702@mail.gmail.com>
	<49B8B6B5.5080404@gmx.de>
Message-ID: <2302ac370903120302p563f8213h89c4fb50c6802a09@mail.gmail.com>

Hi Johannes,

I've attached the lexer/parser file. If you generate that first and then
generate the tree grammar, you'll get the error when compiling the generated
code.

Floris

On Thu, Mar 12, 2009 at 8:16 AM, Johannes Luber <jaluber at gmx.de> wrote:

> Floris van Nee schrieb:
> > Hello!
> >
> > I've got a question about rewriting an AST in a tree grammar, with C# as
> > target language. The code Antlr generates just won't compile when I set
> > the 'output=AST' in my tree grammar options.
> > It complains about lines like this:
> >
> > if ( _first_1==null ) _first_1 = qual.Tree;
> >
> > Error    2    Cannot implicitly convert type 'object' to
> > 'Antlr.Runtime.Tree.CommonTree'. An explicit conversion exists (are you
> > missing a cast?)    C:\Users\floris\Documents\Visual Studio
> > 2008\Projects\Vnvd\Vnvd\vNVDCheckerPassTwo.cs    315    58    Vnvd
> >
> > Here _first_1 is of type CommonTree, and qual.Tree of type object. It
> > needs an explicit cast there, but when Antlr generates the code, it
> > doesn't add one. Is this something I did wrong in my grammar file, or is
> > this a bug?
> > I am using the latest version of Antlr (3.1.2).
> >
> > Thanks in advance,
> > Floris
>
> I need a full working grammar, which includes at least the .tokens-file.
> I haven't tested yet, if that is enough or if I do need also the parser
> and lexer. Full working means that I can generate the grammar on my
> system so I can look up where I seemingly missed the conversion.
>
> Johannes
> >
> > Here are the contents of my (simplified) grammar file:
> >
> > tree grammar vNVDCheckerPassTwo;
> >
> > options
> > {
> >     ASTLabelType = CommonTree;
> >     tokenVocab = vNVD;
> >     language = CSharp2;
> >     rewrite = true;
> >     output = AST;
> > }
> >
> > program
> >     :    ^(node=PROGRAM import_stat* namespace_decl*)
> >     ;
> >
> > import_stat
> >     :    ^(node=USING qual=qualifier)
> >     ;
> >
> > namespace_decl
> >     :    ^(node=NAMESPACE qual=qualifier (namespace_decl)*)
> >     ;
> >
> > qualifier
> >     :    ^(fqual=FQUALIFIER IDENTIFIER+)
> >     ;
> >
> >
> >
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090312/632936cf/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: vNVD.g
Type: application/octet-stream
Size: 7484 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090312/632936cf/attachment.obj 

From olivier.thierry at gmail.com  Thu Mar 12 07:50:07 2009
From: olivier.thierry at gmail.com (Olivier THIERRY)
Date: Thu, 12 Mar 2009 15:50:07 +0100
Subject: [antlr-interest] Good practice for grammar with translated keywords
Message-ID: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>

Hi,

I need to write a grammar for which keywords will be translated in
english, french, spanish, ...
Then I use StringTemplate to transform this language to Groovy script.

For example I would have the following statement in english :

IF (i = 0) THEN

And the following in french :

SI (i = 0) ALORS

To do this I thought about writing :
- many lexer grammar for keywords (i.e. translated tokens), one lexer
grammar for each language
- one lexer grammar for not translated tokens
- one parser grammar that would import the not translated tokens lexer
grammar and one of the translated tokens lexer grammar.

Actually only the first lexer grammar is language specific, the other
ones are common.
But I can't find the right way to do this since tokens have to be
imported in parser grammar. So it means you will have a parser grammar
for each language.

I also thought about using or statements in keywords tokens
definition. Something like that : IF : 'IF' | 'SI';
But it means you could mix languages, something like : IF (i=0) ALORS

If anyone had the same need, how did he achieve this ?

I use antlr3, antlrworks and antlr3 maven plugin.

Thanks in advance for any help !

Olivier

From jimi at temporal-wave.com  Thu Mar 12 08:17:38 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Mar 2009 08:17:38 -0700
Subject: [antlr-interest] Good practice for grammar with translated
	keywords
In-Reply-To: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>
References: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>
Message-ID: <49B92792.90104@temporal-wave.com>

Olivier THIERRY wrote:
> Hi,
>
> I need to write a grammar for which keywords will be translated in
> english, french, spanish, ...
> Then I use StringTemplate to transform this language to Groovy script.
>
> For example I would have the following statement in english :
>
> IF (i = 0) THEN
>
> And the following in french :
>
> SI (i = 0) ALORS
>
> To do this I thought about writing :
> - many lexer grammar for keywords (i.e. translated tokens), one lexer
> grammar for each language
> - one lexer grammar for not translated tokens
> - one parser grammar that would import the not translated tokens lexer
> grammar and one of the translated tokens lexer grammar.
>
> Actually only the first lexer grammar is language specific, the other
> ones are common.
> But I can't find the right way to do this since tokens have to be
> imported in parser grammar. So it means you will have a parser grammar
> for each language.
>
> I also thought about using or statements in keywords tokens
> definition. Something like that : IF : 'IF' | 'SI';
> But it means you could mix languages, something like : IF (i=0) ALORS
>
> If anyone had the same need, how did he achieve this ?
>   
One way is to hand craft your lexer. This can then use a table of 
keywords, which you can load according to the current language settings. 
A reasonable way to see how to do this is to generate a lexer for just a 
small rule set, then see what it inherits from and what methods it 
implements etc.

One other way (and proably easier for you in this situation) assuming 
that there are not complications with lexical significance, is to not 
specify keywords in the lexer at all, but add action code to your ID 
rule that looks up the text that looks like it is an identifier and 
changes the token type if it is a keyword in the current language. 
Something like this:


// Define token symbols for use in tables and parser
//
fragment IF:;
fragment THEN:;

ID : ('a'..'z' | 'A'..'Z' | unicode characters for e acute and so on if 
keywords can use them) ('a'..'z'|'A'..'Z'|'0'..'9')
    {
       $type = checkKeyword($text);
    }


@lexer::members
{
   int checkKeyword(String id)
   {
        // Look up text in a HashMap that you have initialized and 
installed according to
        // current language.
        // If found, return the token type in the map, if not, return ID
        //
   }
}

Thoguh I show this inline with the lexer, the best way is to have the 
lexer inherit from a superclass and place teh code and table 
initializations in the super class. You will then have something like:

lexer grammar mylexer;

options {

    superClass     = MyLexer;
   
}
....
public  class AbstractMyLexer; extends org.antlr.runtime.Lexer {

    protected AbstractMyLexer;() {
    }

    protected AbstractMyLexer;(CharStream input) {
        super(input);
    }
 
    protected AbstractMyLexer;(CharStream input, RecognizerSharedState 
state) {
        super(input, state);
    }

  .... initialize your tables in the constructors above..
  ... implement support methods...

Now, you program your parser with the ENGLISH token names (or French if 
you prefer of course), but the text of the token will always be the 
definition in the current language (so you can use the symbolic name for 
parsing and error lookups, but the token text for error messages.

Initialize the HashMaps so that their values are always IF or THEN etc, 
but their keys are the token text for the current language:

toktab_fr {
'SI' : IF,
 'ALORS' : THEN
}

toktab_en {
 'IF' : IF,
 'THEN' : THEN
}

Hope that helps,

Jim
PS: You will probably find the superclass stuff easiest if you are not 
familiar with lexers or implementing ANTLR lexers by hand.

Jim

From tbrandonau at gmail.com  Thu Mar 12 08:17:46 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 13 Mar 2009 02:17:46 +1100
Subject: [antlr-interest] Good practice for grammar with translated
	keywords
In-Reply-To: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>
References: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>
Message-ID: <ebc876d70903120817u3fa1a544qa57d75af1d4cd581@mail.gmail.com>

If you know ahead of time what language is to be used and all keywords
are acceptable identifiers you could use an action in your identifier
rule to check a language specific hashtable mapping text to token type
and set the resulting token type based on that. e.g.

@lexer::members {
  private Hashtable<String,Integer> literalsTable_en = new Hashtable() {{
    put("if", IF);
    put("then", THEN);
  }};

  private Hashtable<String,Integer> literalsTable_fr = new Hashtable() {{
    put("si", IF);
    put("alors", THEN);
  }};

  private Hashtable<String,Integer> getLiteralsTable() {
    // Return appropriate hashtable for language
  }

  private int checkLiterals(String text) {
    Hashtable<String,Integer> literalsTable = getLiteralsTable();
    Integer type = literalsTable.get(text);
    if(type != null)
       return type;
    else
      return ID;
  }
}

ID: 'a'..'z' { $type=checkLiterals($text); };

fragment IF: ;
fragment THEN: ;

NB: You need the fragment rules to define the token types as putting
them in the tokens section causes warnings (at least it did last I
checked).

Tom.

On Fri, Mar 13, 2009 at 1:50 AM, Olivier THIERRY
<olivier.thierry at gmail.com> wrote:
> Hi,
>
> I need to write a grammar for which keywords will be translated in
> english, french, spanish, ...
> Then I use StringTemplate to transform this language to Groovy script.
>
> For example I would have the following statement in english :
>
> IF (i = 0) THEN
>
> And the following in french :
>
> SI (i = 0) ALORS
>
> To do this I thought about writing :
> - many lexer grammar for keywords (i.e. translated tokens), one lexer
> grammar for each language
> - one lexer grammar for not translated tokens
> - one parser grammar that would import the not translated tokens lexer
> grammar and one of the translated tokens lexer grammar.
>
> Actually only the first lexer grammar is language specific, the other
> ones are common.
> But I can't find the right way to do this since tokens have to be
> imported in parser grammar. So it means you will have a parser grammar
> for each language.
>
> I also thought about using or statements in keywords tokens
> definition. Something like that : IF : 'IF' | 'SI';
> But it means you could mix languages, something like : IF (i=0) ALORS
>
> If anyone had the same need, how did he achieve this ?
>
> I use antlr3, antlrworks and antlr3 maven plugin.
>
> Thanks in advance for any help !
>
> Olivier
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From olivier.thierry at gmail.com  Thu Mar 12 08:25:46 2009
From: olivier.thierry at gmail.com (Olivier THIERRY)
Date: Thu, 12 Mar 2009 16:25:46 +0100
Subject: [antlr-interest] Good practice for grammar with translated
	keywords
In-Reply-To: <49B92792.90104@temporal-wave.com>
References: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>
	<49B92792.90104@temporal-wave.com>
Message-ID: <6bbf89b80903120825u418efc5egaf8eada46a2866ca@mail.gmail.com>

2009/3/12 Jim Idle <jimi at temporal-wave.com>:
> Olivier THIERRY wrote:
>> Hi,
>>
>> I need to write a grammar for which keywords will be translated in
>> english, french, spanish, ...
>> Then I use StringTemplate to transform this language to Groovy script.
>>
>> For example I would have the following statement in english :
>>
>> IF (i = 0) THEN
>>
>> And the following in french :
>>
>> SI (i = 0) ALORS
>>
>> To do this I thought about writing :
>> - many lexer grammar for keywords (i.e. translated tokens), one lexer
>> grammar for each language
>> - one lexer grammar for not translated tokens
>> - one parser grammar that would import the not translated tokens lexer
>> grammar and one of the translated tokens lexer grammar.
>>
>> Actually only the first lexer grammar is language specific, the other
>> ones are common.
>> But I can't find the right way to do this since tokens have to be
>> imported in parser grammar. So it means you will have a parser grammar
>> for each language.
>>
>> I also thought about using or statements in keywords tokens
>> definition. Something like that : IF : 'IF' | 'SI';
>> But it means you could mix languages, something like : IF (i=0) ALORS
>>
>> If anyone had the same need, how did he achieve this ?
>>
> One way is to hand craft your lexer. This can then use a table of
> keywords, which you can load according to the current language settings.
> A reasonable way to see how to do this is to generate a lexer for just a
> small rule set, then see what it inherits from and what methods it
> implements etc.
>
> One other way (and proably easier for you in this situation) assuming
> that there are not complications with lexical significance, is to not
> specify keywords in the lexer at all, but add action code to your ID
> rule that looks up the text that looks like it is an identifier and
> changes the token type if it is a keyword in the current language.
> Something like this:
>
>
> // Define token symbols for use in tables and parser
> //
> fragment IF:;
> fragment THEN:;
>
> ID : ('a'..'z' | 'A'..'Z' | unicode characters for e acute and so on if
> keywords can use them) ('a'..'z'|'A'..'Z'|'0'..'9')
> ? ?{
> ? ? ? $type = checkKeyword($text);
> ? ?}
>
>
> @lexer::members
> {
> ? int checkKeyword(String id)
> ? {
> ? ? ? ?// Look up text in a HashMap that you have initialized and
> installed according to
> ? ? ? ?// current language.
> ? ? ? ?// If found, return the token type in the map, if not, return ID
> ? ? ? ?//
> ? }
> }
>
> Thoguh I show this inline with the lexer, the best way is to have the
> lexer inherit from a superclass and place teh code and table
> initializations in the super class. You will then have something like:
>
> lexer grammar mylexer;
>
> options {
>
> ? ?superClass ? ? = MyLexer;
>
> }
> ....
> public ?class AbstractMyLexer; extends org.antlr.runtime.Lexer {
>
> ? ?protected AbstractMyLexer;() {
> ? ?}
>
> ? ?protected AbstractMyLexer;(CharStream input) {
> ? ? ? ?super(input);
> ? ?}
>
> ? ?protected AbstractMyLexer;(CharStream input, RecognizerSharedState
> state) {
> ? ? ? ?super(input, state);
> ? ?}
>
> ?.... initialize your tables in the constructors above..
> ?... implement support methods...
>
> Now, you program your parser with the ENGLISH token names (or French if
> you prefer of course), but the text of the token will always be the
> definition in the current language (so you can use the symbolic name for
> parsing and error lookups, but the token text for error messages.
>
> Initialize the HashMaps so that their values are always IF or THEN etc,
> but their keys are the token text for the current language:
>
> toktab_fr {
> 'SI' : IF,
> ?'ALORS' : THEN
> }
>
> toktab_en {
> ?'IF' : IF,
> ?'THEN' : THEN
> }
>
> Hope that helps,
>
> Jim
> PS: You will probably find the superclass stuff easiest if you are not
> familiar with lexers or implementing ANTLR lexers by hand.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

Thanks a lot for your suggestions. I will now try to understand better
since I am quite a newbie with Antlr.

Regards,

Olivier

From ian at telematter.com  Thu Mar 12 08:38:43 2009
From: ian at telematter.com (ian eyberg)
Date: Thu, 12 Mar 2009 10:38:43 -0500
Subject: [antlr-interest] yaska: antlr autotest
Message-ID: <20090312153843.GA9446@hypatia>

Hi,

  After writing my grammars according to unit tests that I had previously
written I realized I should have corrected the warnings I was generating
as they came. (warnings are really errors).

  Anyways, I can't stand graphical IDEs and my work environment mainly consists
of screen+vim. So, I put together, yaska, which is an autotest suite proggy
for running my grammars and then making sure my tests fly right as well.

  The sweet thing about it is as soon as a I save a file I'm immediately
informed whether my changes generated more/less compile-time and run-time
warnings and whether or not it broke any tests. At least for me, this has
given me a tremendous boost in learning how to write grammars and speed
in getting my errors corrected.

  Right now I have an implementation of this that could use a bit of love
up on the hubs:

http://github.com/feydr/yaska/tree/master

  I expect here in a day or so I'll have refactored it quite a lot.

Thanks for antlr!

-ian

From jimi at temporal-wave.com  Thu Mar 12 08:46:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Mar 2009 08:46:53 -0700
Subject: [antlr-interest] yaska: antlr autotest
In-Reply-To: <20090312153843.GA9446@hypatia>
References: <20090312153843.GA9446@hypatia>
Message-ID: <49B92E6D.2@temporal-wave.com>

ian eyberg wrote:
> Hi,
>
>   After writing my grammars according to unit tests that I had previously
> written I realized I should have corrected the warnings I was generating
> as they came. (warnings are really errors).
>
>   Anyways, I can't stand graphical IDEs and my work environment mainly consists
> of screen+vim. 
Real programmers use vi :-)
> So, I put together, yaska, which is an autotest suite proggy
> for running my grammars and then making sure my tests fly right as well.
>
>   The sweet thing about it is as soon as a I save a file I'm immediately
> informed whether my changes generated more/less compile-time and run-time
> warnings and whether or not it broke any tests. At least for me, this has
> given me a tremendous boost in learning how to write grammars and speed
> in getting my errors corrected.
>
>   Right now I have an implementation of this that could use a bit of love
> up on the hubs:
>
> http://github.com/feydr/yaska/tree/master
>   
Out of interest, was there something that gUnit does not do for you that 
meant you wrote this? It might be useful feedback.

Jim

From ian at telematter.com  Thu Mar 12 09:42:57 2009
From: ian at telematter.com (ian eyberg)
Date: Thu, 12 Mar 2009 11:42:57 -0500
Subject: [antlr-interest] yaska: antlr autotest
In-Reply-To: <49B92E6D.2@temporal-wave.com>
References: <20090312153843.GA9446@hypatia> <49B92E6D.2@temporal-wave.com>
Message-ID: <20090312164257.GA9950@hypatia>

On Thu, Mar 12, 2009 at 08:46:53AM -0700, Jim Idle wrote:

> Out of interest, was there something that gUnit does not do for you that 
> meant you wrote this? It might be useful feedback.

Actually I have yet to get into gUnit, although it is definitely on my list.

The problem is that I had built hundreds of tests for my parser when it was
regexen in ruby. We then ported this over to boost::spirit and we are currently
using antlr. The deal, is that all of our tests were written with xpath type
of queries and this was the quickest way (in developer time) to measure that
we were getting the same expected results to where we could commit more time 
to the grammar development.

The autotest environemnt works for me, however, since it's ran automatically
using a file-watcher so it's real time and keeps me 'in the zone' rather than
being distracted by compilation time and others.

Having said that, I think I will definitely be setting aside some time for
gUnit relatively soon. It looks like a great piece of software.

-ian

From olivier.thierry at gmail.com  Thu Mar 12 09:55:20 2009
From: olivier.thierry at gmail.com (Olivier THIERRY)
Date: Thu, 12 Mar 2009 17:55:20 +0100
Subject: [antlr-interest] Good practice for grammar with translated
	keywords
In-Reply-To: <6bbf89b80903120825u418efc5egaf8eada46a2866ca@mail.gmail.com>
References: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>
	<49B92792.90104@temporal-wave.com>
	<6bbf89b80903120825u418efc5egaf8eada46a2866ca@mail.gmail.com>
Message-ID: <6bbf89b80903120955p587d5047ibbdbd2cd2ef8f0b5@mail.gmail.com>

2009/3/12 Olivier THIERRY <olivier.thierry at gmail.com>:
> 2009/3/12 Jim Idle <jimi at temporal-wave.com>:
>> Olivier THIERRY wrote:
>>> Hi,
>>>
>>> I need to write a grammar for which keywords will be translated in
>>> english, french, spanish, ...
>>> Then I use StringTemplate to transform this language to Groovy script.
>>>
>>> For example I would have the following statement in english :
>>>
>>> IF (i = 0) THEN
>>>
>>> And the following in french :
>>>
>>> SI (i = 0) ALORS
>>>
>>> To do this I thought about writing :
>>> - many lexer grammar for keywords (i.e. translated tokens), one lexer
>>> grammar for each language
>>> - one lexer grammar for not translated tokens
>>> - one parser grammar that would import the not translated tokens lexer
>>> grammar and one of the translated tokens lexer grammar.
>>>
>>> Actually only the first lexer grammar is language specific, the other
>>> ones are common.
>>> But I can't find the right way to do this since tokens have to be
>>> imported in parser grammar. So it means you will have a parser grammar
>>> for each language.
>>>
>>> I also thought about using or statements in keywords tokens
>>> definition. Something like that : IF : 'IF' | 'SI';
>>> But it means you could mix languages, something like : IF (i=0) ALORS
>>>
>>> If anyone had the same need, how did he achieve this ?
>>>
>> One way is to hand craft your lexer. This can then use a table of
>> keywords, which you can load according to the current language settings.
>> A reasonable way to see how to do this is to generate a lexer for just a
>> small rule set, then see what it inherits from and what methods it
>> implements etc.
>>
>> One other way (and proably easier for you in this situation) assuming
>> that there are not complications with lexical significance, is to not
>> specify keywords in the lexer at all, but add action code to your ID
>> rule that looks up the text that looks like it is an identifier and
>> changes the token type if it is a keyword in the current language.
>> Something like this:
>>
>>
>> // Define token symbols for use in tables and parser
>> //
>> fragment IF:;
>> fragment THEN:;
>>
>> ID : ('a'..'z' | 'A'..'Z' | unicode characters for e acute and so on if
>> keywords can use them) ('a'..'z'|'A'..'Z'|'0'..'9')
>> ? ?{
>> ? ? ? $type = checkKeyword($text);
>> ? ?}
>>
>>
>> @lexer::members
>> {
>> ? int checkKeyword(String id)
>> ? {
>> ? ? ? ?// Look up text in a HashMap that you have initialized and
>> installed according to
>> ? ? ? ?// current language.
>> ? ? ? ?// If found, return the token type in the map, if not, return ID
>> ? ? ? ?//
>> ? }
>> }
>>
>> Thoguh I show this inline with the lexer, the best way is to have the
>> lexer inherit from a superclass and place teh code and table
>> initializations in the super class. You will then have something like:
>>
>> lexer grammar mylexer;
>>
>> options {
>>
>> ? ?superClass ? ? = MyLexer;
>>
>> }
>> ....
>> public ?class AbstractMyLexer; extends org.antlr.runtime.Lexer {
>>
>> ? ?protected AbstractMyLexer;() {
>> ? ?}
>>
>> ? ?protected AbstractMyLexer;(CharStream input) {
>> ? ? ? ?super(input);
>> ? ?}
>>
>> ? ?protected AbstractMyLexer;(CharStream input, RecognizerSharedState
>> state) {
>> ? ? ? ?super(input, state);
>> ? ?}
>>
>> ?.... initialize your tables in the constructors above..
>> ?... implement support methods...
>>
>> Now, you program your parser with the ENGLISH token names (or French if
>> you prefer of course), but the text of the token will always be the
>> definition in the current language (so you can use the symbolic name for
>> parsing and error lookups, but the token text for error messages.
>>
>> Initialize the HashMaps so that their values are always IF or THEN etc,
>> but their keys are the token text for the current language:
>>
>> toktab_fr {
>> 'SI' : IF,
>> ?'ALORS' : THEN
>> }
>>
>> toktab_en {
>> ?'IF' : IF,
>> ?'THEN' : THEN
>> }
>>
>> Hope that helps,
>>
>> Jim
>> PS: You will probably find the superclass stuff easiest if you are not
>> familiar with lexers or implementing ANTLR lexers by hand.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> Thanks a lot for your suggestions. I will now try to understand better
> since I am quite a newbie with Antlr.
>
> Regards,
>
> Olivier
>

I tried it and it works great !
Note I wrote all code in @members part instead of using a superclass
for lexer because this superclass can't compile because it misses
constants defined fotr tokens.

Thanks a lot for your help.

Olivier

From jimi at temporal-wave.com  Thu Mar 12 10:57:00 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Mar 2009 10:57:00 -0700
Subject: [antlr-interest] Good practice for grammar with translated
	keywords
In-Reply-To: <6bbf89b80903120955p587d5047ibbdbd2cd2ef8f0b5@mail.gmail.com>
References: <6bbf89b80903120750t8e33baei61bd8efd9b1b4139@mail.gmail.com>	
	<49B92792.90104@temporal-wave.com>	
	<6bbf89b80903120825u418efc5egaf8eada46a2866ca@mail.gmail.com>
	<6bbf89b80903120955p587d5047ibbdbd2cd2ef8f0b5@mail.gmail.com>
Message-ID: <49B94CEC.1010205@temporal-wave.com>

Olivier THIERRY wrote:
> 2009/3/12 Olivier THIERRY <olivier.thierry at gmail.com>:
>   
>>> s,
>>>
>>> Jim
>>> PS: You will probably find the superclass stuff easiest if you are not
>>> familiar with lexers or implementing ANTLR lexers by hand.
>>>       
> I tried it and it works great !
> Note I wrote all code in @members part instead of using a superclass
> for lexer because this superclass can't compile because it misses
> constants defined fotr tokens.
>
> Thanks a lot for your help.
>
> Olivier
>   

You can leave it that way if you like of course but you reference tokens 
from the superclass by referencing the subclass in your abstract 
superclass: myLexer.IF and so on;

Jim

From jaluber at gmx.de  Thu Mar 12 12:03:14 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 12 Mar 2009 20:03:14 +0100
Subject: [antlr-interest] antlr 3.1 ast rewriting
In-Reply-To: <2302ac370903120302p563f8213h89c4fb50c6802a09@mail.gmail.com>
References: <2302ac370903111624h4a312cdeu8ad2676487097702@mail.gmail.com>	
	<49B8B6B5.5080404@gmx.de>
	<2302ac370903120302p563f8213h89c4fb50c6802a09@mail.gmail.com>
Message-ID: <49B95C72.5080504@gmx.de>

Floris van Nee schrieb:
> Hi Johannes,
> 
> I've attached the lexer/parser file. If you generate that first and then
> generate the tree grammar, you'll get the error when compiling the
> generated code.
> 
> Floris

Thanks! I've found the cause and fixed it. ANTLR 3.1.3 is due for Friday
or you can download the latest Hudson build (assuming the build has
finished already).

Johannes
> 
> On Thu, Mar 12, 2009 at 8:16 AM, Johannes Luber <jaluber at gmx.de
> <mailto:jaluber at gmx.de>> wrote:
> 
>     Floris van Nee schrieb:
>     > Hello!
>     >
>     > I've got a question about rewriting an AST in a tree grammar, with
>     C# as
>     > target language. The code Antlr generates just won't compile when
>     I set
>     > the 'output=AST' in my tree grammar options.
>     > It complains about lines like this:
>     >
>     > if ( _first_1==null ) _first_1 = qual.Tree;
>     >
>     > Error    2    Cannot implicitly convert type 'object' to
>     > 'Antlr.Runtime.Tree.CommonTree'. An explicit conversion exists
>     (are you
>     > missing a cast?)    C:\Users\floris\Documents\Visual Studio
>     > 2008\Projects\Vnvd\Vnvd\vNVDCheckerPassTwo.cs    315    58    Vnvd
>     >
>     > Here _first_1 is of type CommonTree, and qual.Tree of type object. It
>     > needs an explicit cast there, but when Antlr generates the code, it
>     > doesn't add one. Is this something I did wrong in my grammar file,
>     or is
>     > this a bug?
>     > I am using the latest version of Antlr (3.1.2).
>     >
>     > Thanks in advance,
>     > Floris
> 
>     I need a full working grammar, which includes at least the .tokens-file.
>     I haven't tested yet, if that is enough or if I do need also the parser
>     and lexer. Full working means that I can generate the grammar on my
>     system so I can look up where I seemingly missed the conversion.
> 
>     Johannes
>     >
>     > Here are the contents of my (simplified) grammar file:
>     >
>     > tree grammar vNVDCheckerPassTwo;
>     >
>     > options
>     > {
>     >     ASTLabelType = CommonTree;
>     >     tokenVocab = vNVD;
>     >     language = CSharp2;
>     >     rewrite = true;
>     >     output = AST;
>     > }
>     >
>     > program
>     >     :    ^(node=PROGRAM import_stat* namespace_decl*)
>     >     ;
>     >
>     > import_stat
>     >     :    ^(node=USING qual=qualifier)
>     >     ;
>     >
>     > namespace_decl
>     >     :    ^(node=NAMESPACE qual=qualifier (namespace_decl)*)
>     >     ;
>     >
>     > qualifier
>     >     :    ^(fqual=FQUALIFIER IDENTIFIER+)
>     >     ;
>     >
>     >
>     >
>     >
>     ------------------------------------------------------------------------
>     >
>     >
>     > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     > Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 


From brothers at bros.com  Thu Mar 12 13:55:23 2009
From: brothers at bros.com (Dennis Brothers)
Date: Thu, 12 Mar 2009 16:55:23 -0400
Subject: [antlr-interest] Examining characters in lexer
Message-ID: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>

Is there a special symbol or method that returns the character about  
to be scanned?  In order to handle a variety of (natural) languages,  
I'd like to use Unicode categories to detect various character types  
(particularly letters).

I want to do something like

fragment LETTER : { Char.IsLetter( $char ) } ?=> . ;

where $char is the next character to be scanned and Char.IsLetter() is  
a .NET method that examines a character's Unicode category and returns  
true if it's one of the letter categories.

While I'm at it, is it legal to use a gated predicate like the above  
in a lexer?

Thanks -
     - Dennis Brothers


From jaluber at gmx.de  Thu Mar 12 14:00:19 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 12 Mar 2009 22:00:19 +0100
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>
Message-ID: <49B977E3.1060703@gmx.de>

Dennis Brothers schrieb:
> Is there a special symbol or method that returns the character about  
> to be scanned?  In order to handle a variety of (natural) languages,  
> I'd like to use Unicode categories to detect various character types  
> (particularly letters).
> 
> I want to do something like
> 
> fragment LETTER : { Char.IsLetter( $char ) } ?=> . ;
> 
> where $char is the next character to be scanned and Char.IsLetter() is  
> a .NET method that examines a character's Unicode category and returns  
> true if it's one of the letter categories.
> 
> While I'm at it, is it legal to use a gated predicate like the above  
> in a lexer?
> 
> Thanks -
>      - Dennis Brothers

Try LA(1) or input.LA(1).

Johannes

From jimi at temporal-wave.com  Thu Mar 12 14:01:13 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Mar 2009 14:01:13 -0700
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>
Message-ID: <49B97819.2070300@temporal-wave.com>

Dennis Brothers wrote:
> Is there a special symbol or method that returns the character about  
> to be scanned? 
input.LA(1)
input.LA(2)

etc.
>  In order to handle a variety of (natural) languages,  
> I'd like to use Unicode categories to detect various character types  
> (particularly letters).
>
> I want to do something like
>
> fragment LETTER : { Char.IsLetter( $char ) } ?=> . ;
>
> where $char is the next character to be scanned and Char.IsLetter() is  
> a .NET method that examines a character's Unicode category and returns  
> true if it's one of the letter categories.
>
> While I'm at it, is it legal to use a gated predicate like the above  
> in a lexer?
>   
Yes, but you might find you need to finesse things so you don't create 
issues such as rules that never match and so on.

It is fine to code the ranges in ANTLR, but you can end up with some big 
lexers.

However, overall, you don't want the lexer to fail, so it is better to 
accept things taht are not ataully valid, but then check the validity in 
a routine that can say "Character xx is not a valid identifier 
character", as otherwise you just get

Illegal character: xxx

and that does not have enough context for a user.

Jim



From brothers at bros.com  Thu Mar 12 14:29:49 2009
From: brothers at bros.com (Dennis Brothers)
Date: Thu, 12 Mar 2009 17:29:49 -0400
Subject: [antlr-interest] Fwd:  Examining characters in lexer
References: <AEA7B78F-4943-40ED-9426-5AF40B7351BA@bros.com>
Message-ID: <2936AB89-04FD-4833-800F-AD37C1A47259@bros.com>

Meant to send this to the list - didn't realize the list was set up  
for personal replies.

Begin forwarded message:

> From: Dennis Brothers <brothers at bros.com>
> Date: March 12, 2009 5:13:21 PM EDT
> To: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Examining characters in lexer
>
> I want to use it in a rule something like
>
> WORD : ( LETTER | '0'..'9' | '_' )+ ;
>
> so failing to match simply terminates the WORD rule.
>
>    - Dennis Brothers
>
> On Mar 12, 2009, at 5:01 PM, Jim Idle wrote:
>
>> Dennis Brothers wrote:
>>> Is there a special symbol or method that returns the character about
>>> to be scanned?
>> input.LA(1)
>> input.LA(2)
>>
>> etc.
>>> In order to handle a variety of (natural) languages,
>>> I'd like to use Unicode categories to detect various character types
>>> (particularly letters).
>>>
>>> I want to do something like
>>>
>>> fragment LETTER : { Char.IsLetter( $char ) } ?=> . ;
>>>
>>> where $char is the next character to be scanned and  
>>> Char.IsLetter() is
>>> a .NET method that examines a character's Unicode category and  
>>> returns
>>> true if it's one of the letter categories.
>>>
>>> While I'm at it, is it legal to use a gated predicate like the above
>>> in a lexer?
>>>
>> Yes, but you might find you need to finesse things so you don't  
>> create
>> issues such as rules that never match and so on.
>>
>> It is fine to code the ranges in ANTLR, but you can end up with  
>> some big
>> lexers.
>>
>> However, overall, you don't want the lexer to fail, so it is better  
>> to
>> accept things taht are not ataully valid, but then check the  
>> validity in
>> a routine that can say "Character xx is not a valid identifier
>> character", as otherwise you just get
>>
>> Illegal character: xxx
>>
>> and that does not have enough context for a user.
>>
>> Jim
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090312/08072bed/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Fri Mar 13 05:45:52 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 13 Mar 2009 12:45:52 +0000
Subject: [antlr-interest] ANTLR IDE 1.3.0 released
In-Reply-To: <92b42db60903041617q1f6a5ef0k25f705442e8a2953@mail.gmail.com>
References: <92b42db60903041617q1f6a5ef0k25f705442e8a2953@mail.gmail.com>
Message-ID: <49BA5580.7070304@lancaster.ac.uk>

Hey all,

Following Edgar's advice, I got this updated and all seems well.
However, it appears that while it "supports" ANTLR 3.1.2, it still uses
the ANTLR 3.1.1 code generation tool? Is this right?

Sam

Edgar Espina wrote:
> Hi,
> 
>  ANTLR IDE 1.3.0 is now available at http://antlrv3ide.sourceforge.net/.
> 
>  New Features:
> - Support ANTLR 3.1.2
> - ANTLR IDE user guide
> - gUnit Editor
> 
> Bugs Fixed:
> - Eclipse freezes up if you load an ActionScript/JavaScript based ANTLR
> - Null Pointer Exception when creating new run configuration
> - ClassCastException or CoModificationException in AntlrGramma
> - Null-Pointer Exception when Parsing Grammar
> - Support ANTLR 3.1.2
> 
> Regards!
> -- 
> edgar
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From s.barnett-cormack at lancaster.ac.uk  Fri Mar 13 06:22:19 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 13 Mar 2009 13:22:19 +0000
Subject: [antlr-interest] Doc-comments in generated Java
Message-ID: <49BA5E0B.8060607@lancaster.ac.uk>

Hi all,

I seem to recall posting about this back in the ANTLR 2 days, but now I
found myself running into it again.

I'd like there to be some vague documentation generated by Javadoc for
my parser/lexer/etc. I've got a combined grammar, with a doc-comment on
the grammar itself. This gets attached to the generated parser class,
and not to the generated lexer class. Doc-comments on rules don't get
passed anywhere, and really, it probably wouldn't make sense for them to.

Is there any way to (easily, without me learning StringTemplate) make it
so that functions generated from rules have a doc-comment like:

/**
 * Generated from rule RULENAME (line LINENUM)
 */

and generated classes are like:

/**
 * Parser|Lexer generated from GRAMMAR-FILENAME
 */

And not pass through the doc-comment on the grammar itself? I'd probably
want them to say "generated by ANTLR version VERSION" rather than just
"generated", really, possibly with a linking tag and stuff, but that's
not difficult to change once I have some idea how to do this basic stuff.

Thanks for any help or guidance.

Sam

From brothers at bros.com  Fri Mar 13 07:27:15 2009
From: brothers at bros.com (Dennis Brothers)
Date: Fri, 13 Mar 2009 10:27:15 -0400
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <49B97819.2070300@temporal-wave.com>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>
	<49B97819.2070300@temporal-wave.com>
Message-ID: <6A397F34-3FCB-4E06-A40F-5D062E6A7EE8@bros.com>

OK, I tried it, and I'm getting an error I don't know how to interpret:

[10:19:33] error(10):  internal error:  
org 
.antlr 
.analysis 
.NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(Unknown  
Source): no AST/token for nonepsilon target w/o predicate

That is emitted three times when I try to generate code.

Here's the lexer section:

NEWLINE	:	'\r'? '\n' ;
WS  	:	(' '|'\t'|NEWLINE)+ {$channel=HIDDEN;} ;
STRING 	:	( '0'..'9'|'_'|'\'' | LETTER )+ ;
LETTER	:	{ Char.IsLetter( input.LA(1) ) }?=> . ;

     - Dennis Brothers

On Mar 12, 2009, at 5:01 PM, Jim Idle wrote:

> Dennis Brothers wrote:
>> Is there a special symbol or method that returns the character about
>> to be scanned?
> input.LA(1)
> input.LA(2)
>
> etc.
>> In order to handle a variety of (natural) languages,
>> I'd like to use Unicode categories to detect various character types
>> (particularly letters).
>>
>> I want to do something like
>>
>> fragment LETTER : { Char.IsLetter( $char ) } ?=> . ;
>>
>> where $char is the next character to be scanned and Char.IsLetter()  
>> is
>> a .NET method that examines a character's Unicode category and  
>> returns
>> true if it's one of the letter categories.
>>
>> While I'm at it, is it legal to use a gated predicate like the above
>> in a lexer?
>>
> Yes, but you might find you need to finesse things so you don't create
> issues such as rules that never match and so on.
>
> It is fine to code the ranges in ANTLR, but you can end up with some  
> big
> lexers.
>
> However, overall, you don't want the lexer to fail, so it is better to
> accept things taht are not ataully valid, but then check the  
> validity in
> a routine that can say "Character xx is not a valid identifier
> character", as otherwise you just get
>
> Illegal character: xxx
>
> and that does not have enough context for a user.
>
> Jim
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Fri Mar 13 08:13:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Mar 2009 08:13:34 -0700
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <6A397F34-3FCB-4E06-A40F-5D062E6A7EE8@bros.com>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>	<49B97819.2070300@temporal-wave.com>
	<6A397F34-3FCB-4E06-A40F-5D062E6A7EE8@bros.com>
Message-ID: <49BA781E.2060508@temporal-wave.com>

Dennis Brothers wrote:
> OK, I tried it, and I'm getting an error I don't know how to interpret:
>
> [10:19:33] error(10):  internal error:  
> org 
> .antlr 
> .analysis 
> .NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(Unknown  
> Source): no AST/token for nonepsilon target w/o predicate
>
> That is emitted three times when I try to generate code.
>
> Here's the lexer section:
>
> NEWLINE	:	'\r'? '\n' ;
> WS  	:	(' '|'\t'|NEWLINE)+ {$channel=HIDDEN;} ;
> STRING 	:	( '0'..'9'|'_'|'\'' | LETTER )+ ;
> LETTER	:	{ Char.IsLetter( input.LA(1) ) }?=> . ;
>   
lexer grammar f;

NEWLINE :       '\r'? '\n' ;
WS      :       (' '|'\t'|NEWLINE)+ {$channel=HIDDEN;} ;
STRING  :       ( '0'..'9'|'_'|'\'' | LETTER )+ ;
fragment
LETTER  : { Char.IsLetter( input.LA(1)) }?=> . ;

You missed the fragment specifier from your LETTER rule, which creates a 
real token rule that clashes with the invocation of the self same rule 
in STRING and all sorts of other problems ;-)

If you are bothered about efficiency here, you might find that the 
following generates better code:

Jim

From JALuber at gmx.de  Fri Mar 13 08:18:31 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Fri, 13 Mar 2009 16:18:31 +0100
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <49BA781E.2060508@temporal-wave.com>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>
	<49B97819.2070300@temporal-wave.com>
	<6A397F34-3FCB-4E06-A40F-5D062E6A7EE8@bros.com>
	<49BA781E.2060508@temporal-wave.com>
Message-ID: <20090313151831.128170@gmx.net>

> If you are bothered about efficiency here, you might find that the 
> following generates better code:
> 
> Jim

It seems that you forgot some lines after the colon.

Johannes
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger01

From brothers at bros.com  Fri Mar 13 08:36:26 2009
From: brothers at bros.com (Dennis Brothers)
Date: Fri, 13 Mar 2009 11:36:26 -0400
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <49BA781E.2060508@temporal-wave.com>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>	<49B97819.2070300@temporal-wave.com>
	<6A397F34-3FCB-4E06-A40F-5D062E6A7EE8@bros.com>
	<49BA781E.2060508@temporal-wave.com>
Message-ID: <E46D6912-2789-4423-B3FD-31B6C8F3CCF7@bros.com>

Aaargh.  (Sound of hand hitting forehead)

It's always the dumb, simple things that are the hardest to see.

Efficiency isn't a major concern - I'm parsing one-line Lucene-like  
query expressions.  (But I'd still like to see your suggestion).

Thanks -
     - Dennis

On Mar 13, 2009, at 11:13 AM, Jim Idle wrote:

> Dennis Brothers wrote:
>> OK, I tried it, and I'm getting an error I don't know how to  
>> interpret:
>>
>> [10:19:33] error(10):  internal error:
>> org
>> .antlr
>> .analysis
>> .NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(Unknown
>> Source): no AST/token for nonepsilon target w/o predicate
>>
>> That is emitted three times when I try to generate code.
>>
>> Here's the lexer section:
>>
>> NEWLINE	:	'\r'? '\n' ;
>> WS  	:	(' '|'\t'|NEWLINE)+ {$channel=HIDDEN;} ;
>> STRING 	:	( '0'..'9'|'_'|'\'' | LETTER )+ ;
>> LETTER	:	{ Char.IsLetter( input.LA(1) ) }?=> . ;
>>
> lexer grammar f;
>
> NEWLINE :       '\r'? '\n' ;
> WS      :       (' '|'\t'|NEWLINE)+ {$channel=HIDDEN;} ;
> STRING  :       ( '0'..'9'|'_'|'\'' | LETTER )+ ;
> fragment
> LETTER  : { Char.IsLetter( input.LA(1)) }?=> . ;
>
> You missed the fragment specifier from your LETTER rule, which  
> creates a
> real token rule that clashes with the invocation of the self same rule
> in STRING and all sorts of other problems ;-)
>
> If you are bothered about efficiency here, you might find that the
> following generates better code:
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Fri Mar 13 08:40:17 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Mar 2009 08:40:17 -0700
Subject: [antlr-interest] Examining characters in lexer
In-Reply-To: <20090313151831.128170@gmx.net>
References: <F0995633-14F2-4B74-B1DA-04D10D9F79C4@bros.com>	<49B97819.2070300@temporal-wave.com>	<6A397F34-3FCB-4E06-A40F-5D062E6A7EE8@bros.com>
	<49BA781E.2060508@temporal-wave.com>
	<20090313151831.128170@gmx.net>
Message-ID: <49BA7E61.2030000@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090313/29f40744/attachment.html 

From jimi at temporal-wave.com  Fri Mar 13 09:01:42 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Mar 2009 09:01:42 -0700
Subject: [antlr-interest] Doc-comments in generated Java
In-Reply-To: <49BA5E0B.8060607@lancaster.ac.uk>
References: <49BA5E0B.8060607@lancaster.ac.uk>
Message-ID: <49BA8366.9050303@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Hi all,
>
> I seem to recall posting about this back in the ANTLR 2 days, but now I
> found myself running into it again.
>
> I'd like there to be some vague documentation generated by Javadoc for
> my parser/lexer/etc. I've got a combined grammar, with a doc-comment on
> the grammar itself. This gets attached to the generated parser class,
> and not to the generated lexer class. 
@lexer::header {

/** This is a javadoc comment that goes in the lexer java file at the top.
 */
}

@parser::header {

/** Javadoc for parser
 */
}

> Doc-comments on rules don't get
> passed anywhere, and really, it probably wouldn't make sense for them to.
>   
I thought that they did in fact get passed through, but in fact they do not.
> Is there any way to (easily, without me learning StringTemplate) 
No, you would have to change the templates to change what is generated.

Jim


From s.barnett-cormack at lancaster.ac.uk  Fri Mar 13 09:17:29 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 13 Mar 2009 16:17:29 +0000
Subject: [antlr-interest] Doc-comments in generated Java
In-Reply-To: <49BA8366.9050303@temporal-wave.com>
References: <49BA5E0B.8060607@lancaster.ac.uk>
	<49BA8366.9050303@temporal-wave.com>
Message-ID: <49BA8719.5080200@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Hi all,
>>
>> I seem to recall posting about this back in the ANTLR 2 days, but now I
>> found myself running into it again.
>>
>> I'd like there to be some vague documentation generated by Javadoc for
>> my parser/lexer/etc. I've got a combined grammar, with a doc-comment on
>> the grammar itself. This gets attached to the generated parser class,
>> and not to the generated lexer class. 
> @lexer::header {
> 
> /** This is a javadoc comment that goes in the lexer java file at the top.
>  */
> }
> 
> @parser::header {
> 
> /** Javadoc for parser
>  */
> }

On trying this, I found they were inserted before the auto-generated
include statements, and I don't believe those will then be attached to
the class by the javadoc parser - I could be wrong about that, of course.

>> Doc-comments on rules don't get
>> passed anywhere, and really, it probably wouldn't make sense for them to.
>>   
> I thought that they did in fact get passed through, but in fact they do not.
>> Is there any way to (easily, without me learning StringTemplate) 
> No, you would have to change the templates to change what is generated.

And how opaque are the templates? Is there an easy way to include
alternative versions to use without unrolling the jar and re-rolling it
with the changed versions? To what extent would I need to actually
*understand* StringTemplate to alter the templates in this way? It
sounds like it should be a fairly straightforward change.

Sam

From gerald at certiv.net  Fri Mar 13 10:24:42 2009
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 13 Mar 2009 10:24:42 -0700
Subject: [antlr-interest] Doc-comments in generated Java
In-Reply-To: <49BA8719.5080200@lancaster.ac.uk>
References: <49BA5E0B.8060607@lancaster.ac.uk>
	<49BA8366.9050303@temporal-wave.com>
	<49BA8719.5080200@lancaster.ac.uk>
Message-ID: <200903131724.n2DHOgOO017308@zinc.newtechlaw.com>

At 09:17 AM 3/13/2009, Sam Barnett-Cormack wrote:
>Jim Idle wrote:
> > Sam Barnett-Cormack wrote:
> >> Hi all,
> >>
> >> I seem to recall posting about this back in the ANTLR 2 days, but now I
> >> found myself running into it again.
> >>
> >> I'd like there to be some vague documentation generated by Javadoc for
> >> my parser/lexer/etc. I've got a combined grammar, with a doc-comment on
> >> the grammar itself. This gets attached to the generated parser class,
> >> and not to the generated lexer class.
> > @lexer::header {
> >
> > /** This is a javadoc comment that goes in the lexer java file at the top.
> >  */
> > }
> >
> > @parser::header {
> >
> > /** Javadoc for parser
> >  */
> > }
>
>On trying this, I found they were inserted before the auto-generated
>include statements, and I don't believe those will then be attached to
>the class by the javadoc parser - I could be wrong about that, of course.
>
> >> Doc-comments on rules don't get
> >> passed anywhere, and really, it probably wouldn't make sense for them to.
> >>
> > I thought that they did in fact get passed through, but in fact 
> they do not.
> >> Is there any way to (easily, without me learning StringTemplate)
> > No, you would have to change the templates to change what is generated.
>
>And how opaque are the templates? Is there an easy way to include
>alternative versions to use without unrolling the jar and re-rolling it
>with the changed versions? To what extent would I need to actually
>*understand* StringTemplate to alter the templates in this way? It
>sounds like it should be a fairly straightforward change.

There is a related problem concerning annotations.  Like class 
comments, they need to be positioned below all imports.  Perhaps 
Antlr should not insert any import statements of its own if the 
grammar contains a header block.  Don't know how difficult it would 
be for Antlr to split the header block immediately after the package 
statement and insert its import statements there. 


From s.barnett-cormack at lancaster.ac.uk  Fri Mar 13 10:44:34 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 13 Mar 2009 17:44:34 +0000
Subject: [antlr-interest] Doc-comments in generated Java
In-Reply-To: <200903131724.n2DHOgOO017308@zinc.newtechlaw.com>
References: <49BA5E0B.8060607@lancaster.ac.uk>
	<49BA8366.9050303@temporal-wave.com>
	<49BA8719.5080200@lancaster.ac.uk>
	<200903131724.n2DHOgOO017308@zinc.newtechlaw.com>
Message-ID: <49BA9B82.6020509@lancaster.ac.uk>

Gerald Rosenberg wrote:
> 
> There is a related problem concerning annotations.  Like class comments,
> they need to be positioned below all imports.  Perhaps Antlr should not
> insert any import statements of its own if the grammar contains a header
> block.  Don't know how difficult it would be for Antlr to split the
> header block immediately after the package statement and insert its
> import statements there.

I hadn't even thought of annotations... that's quite possibly even worse.

Of course, ANTLR not inserting any includes would be very annoying as
well - having to keep track of what it needs and including them
yourself. Of course, that would avoid the spurious includes that keep
causing me warnings, but one almost expects them in generated code.

What would be great would be a separate @package as well as @header -
the generated code would then be:

contents-of- at package

AUTO-INSERTS

contents-of- at header

GENERATED CLASS

Sam

From des at deshartman.com  Fri Mar 13 15:47:12 2009
From: des at deshartman.com (Des Hartman)
Date: Sat, 14 Mar 2009 09:47:12 +1100
Subject: [antlr-interest] V2->v3 help
Message-ID: <8773d42e0903131547q389af2bdpcc5d68e9bebe074@mail.gmail.com>

Can anyone help me with this conversion? I need to convert this section of
the code from V2 to V3. I have figured out the changes from V2 import lexer
to lexer, the protected to fragment and setType to $Type=, but the part I am
stumped on is how the code in ALPHABETICAL sets the definitions for FUNCTION
and CELL_REF.

I tried the v3me conversion, but it fails, so I reckon this is not handled
in there.



function_call
    :    FUNCTION^ ( comparison ( SEMI! comparison )* )?  RPAR!;

reference
    :    CELL_REF  ( ( COLON^ ) CELL_REF )?  |    NAME;


{import formula.lang.Language;}
class FormulaLexer extends Lexer;

options {
    k = 4;
    caseSensitive = false;
    caseSensitiveLiterals = false;
}


protected LETTER: ('a'..'z') ;

ALPHABETICAL
    :    ( ( LETTER )+ LPAR ) => ( LETTER )+ LPAR! {
            if (Language.getInstance().hasFunction(#getText())) {
                $setType(FUNCTION);
            } else
                throw new RecognitionException();
        }
    |   ( ABS )? LETTER ( LETTER )?
        ( ABS )? ( DIGIT )+ {
            $setType(CELL_REF);
        }
    ;

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090314/3ec61dbc/attachment.html 

From michael.bedward at gmail.com  Fri Mar 13 19:33:33 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 14 Mar 2009 13:33:33 +1100
Subject: [antlr-interest] Doc-comments in generated Java
In-Reply-To: <49BA9B82.6020509@lancaster.ac.uk>
References: <49BA5E0B.8060607@lancaster.ac.uk>
	<49BA8366.9050303@temporal-wave.com>
	<49BA8719.5080200@lancaster.ac.uk>
	<200903131724.n2DHOgOO017308@zinc.newtechlaw.com>
	<49BA9B82.6020509@lancaster.ac.uk>
Message-ID: <e24c4c270903131933g78f6b33sdc0d7557719b745f@mail.gmail.com>

2009/3/14 Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk>:
> yourself. Of course, that would avoid the spurious includes that keep
> causing me warnings, but one almost expects them in generated code.
>

I've wondered about those includes.  With the caveat that I've never
looked at the back-end code, I would have thought it was
straightforward to check if there is a need for List etc. and only add
the imports when required.

Michael

From des at deshartman.com  Fri Mar 13 19:46:01 2009
From: des at deshartman.com (Des Hartman)
Date: Sat, 14 Mar 2009 13:46:01 +1100
Subject: [antlr-interest] If it's a date it's a date else it is not...
Message-ID: <8773d42e0903131946j56bcaae5nccb644dcde9c6ac6@mail.gmail.com>

I need some help defining a parser that parses a line of text to the EOF.
This is similar to the text entered in an Excel formula editor. The problem
I have is that I cannot get the grammar to properly identify a date as
below, else fail. The idea is that if it is NOT a date, the cell will be
treated as a string.

The problem I am having is that the parser does the matching plus a
mismatchedTokenException, which I presume is the extra "/" instead of a EOF.
Ideally I want the parse to check if the text is a date, else let it be
picked up by matching a string. Please help.

cell
     : number
     | date
     | string
     ;

date    : NUMBER ' ' MONTH ' ' NUMBER EOF
          | NUMBER '/' NUMBER EOF
          | NUMBER '/' NUMBER '/' NUMBER EOF
          | MONTH ' ' NUMBER EOF
          | NUMBER ' ' MONTH EOF
    ;

===================================

5/5/5 evaluates to Date correctly
5/5/5/5 evaluates to Date 5/5/5 and mismatchedToken

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090314/88766d2b/attachment.html 

From antlr at mirality.co.nz  Sat Mar 14 12:24:22 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 15 Mar 2009 08:24:22 +1300
Subject: [antlr-interest] V2->v3 help
In-Reply-To: <8773d42e0903131547q389af2bdpcc5d68e9bebe074@mail.gmail.com
 >
References: <8773d42e0903131547q389af2bdpcc5d68e9bebe074@mail.gmail.com>
Message-ID: <20090314192450.C9FF63418468@www.antlr.org>

At 11:47 14/03/2009, Des Hartman wrote:
>Can anyone help me with this conversion? I need to convert this 
>section of the code from V2 to V3. I have figured out the changes 
>from V2 import lexer to lexer, the protected to fragment and 
>setType to $Type=, but the part I am stumped on is how the code 
>in ALPHABETICAL sets the definitions for FUNCTION and CELL_REF.

Do you mean how those symbols themselves are defined?  Simply 
define an empty fragment rule:

fragment FUNCTION; ;

And incidentally, it's $type = FUNCTION, not $Type.  (ANTLR is 
case sensitive.)


From berlin.brown at gmail.com  Sat Mar 14 20:15:35 2009
From: berlin.brown at gmail.com (Berlin Brown)
Date: Sat, 14 Mar 2009 23:15:35 -0400
Subject: [antlr-interest] Examples from the antlr book,
	(p 54) simple expressions
Message-ID: <df27a55b0903142015k458d971dn69096193c41fef24@mail.gmail.com>

I am trying to run the examples from the book (or any examples for
that matter) and getting NullPointerException errors.

With antrl 3.1.2:
Java 1.6

grammar Adder;

@header {
    import java.util.HashMap;
}

@members {
    HashMap memory = new HashMap();
}

prog:   stat+ ;

// START: stat
stat:   // Evaluate expr and emit result
        expr NEWLINE { System.out.println($expr.value); }

        // Match assignment and stored value
    |   ID '=' expr NEWLINE { memory.put($ID.text, new
Integer($expr.value)); }
    |   NEWLINE
    ;
// END: stat

expr returns [int value]
    :   e = multExpr  { $value = $e.value; }
        (   '+' e = multExpr  { $value += $e.value; }
        |   '-' e = multExpr  { $value -= $e.value; }
        )*
    ;
// END: expr

multExpr returns [int value]
    :   e.atom { $value = $e.value; }  ('*' e.atom { $value *= $e.value; } )*
    ;

// START:atom
atom returns [int value]
    :   // Value of an INT
        INT { $value = Integer.parseInt($INT.text); }

    |   ID
        {
            // Look up value of variable
            Integer v = (Integer) memory.get($ID.text);

            // If found , set return value
            if    (v != null) $value = v.intValue();
            else  System.err.println("Undefined variable " + $ID.text);
        }

        // Value of expression
    |   '(' expr ')' { $value = $expr.value; }
    ;
// END : atom

// START : tokens
ID          :   ('a'..'z' | 'A'..'Z')+      ;
INT         :   '0'..'9'+                   ;
NEWLINE     :   '\r'? '\n'                  ;
WHITESPACE  :   ( ' ' | '\t' | '\n' | '\r' )+ { skip(); } ;

// END TOKENS

I am trying to run the grammar above.

I get the following error:

ntlr:
     [java] warning(200):
/usr/local/projects/light_edit/src/antlr/Adder.g:14:5: Decision can
match input such as "NEWLINE" using multiple alternatives: 1, 3
     [java] As a result, alternative(s) 3 were disabled for that input
     [java] error(201):
/usr/local/projects/light_edit/src/antlr/Adder.g:14:5: The following
alternatives can never be matched: 3
     [java]
     [java] Java Result: 1

-------------------

So, I decided to remove the NEWLINE clause in the stat section.

// START: stat
stat:   // Evaluate expr and emit result
        expr NEWLINE { System.out.println($expr.value); }

        // Match assignment and stored value
    |   ID '=' expr NEWLINE { memory.put($ID.text, new
Integer($expr.value)); }
    ;
// END: stat

If I remove that, I get the following error.

antlr:
     [java] error(10):  internal error:
/usr/local/projects/light_edit/src/antlr/Adder.g :
java.lang.NullPointerException
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1983)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2182)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1708)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1306)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1081)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:797)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:588)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:530)
     [java] org.antlr.grammar.v2.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:348)
     [java] org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:438)
     [java] org.antlr.Tool.generateRecognizer(Tool.java:425)
     [java] org.antlr.Tool.process(Tool.java:292)
     [java] org.antlr.Tool.main(Tool.java:74)
     [java] sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
     [java] sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
     [java] sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
     [java] java.lang.reflect.Method.invoke(Method.java:597)
     [java] org.apache.tools.ant.taskdefs.ExecuteJava.run(ExecuteJava.java:217)
     [java] org.apache.tools.ant.taskdefs.ExecuteJava.execute(ExecuteJava.java:152)
     [java] org.apache.tools.ant.taskdefs.Java.run(Java.java:747)
     [java] org.apache.tools.ant.taskdefs.Java.executeJava(Java.java:201)
     [java] org.apache.tools.ant.taskdefs.Java.execute(Java.java:104)
     [java] org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
     [java] sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
     [java] sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
     [java] sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
     [java] java.lang.reflect.Method.invoke(Method.java:597)
     [java] org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
     [java] org.apache.tools.ant.Task.perform(Task.java:348)
     [java] org.apache.tools.ant.Target.execute(Target.java:357)
     [java] org.apache.tools.ant.Target.performTasks(Target.java:385)
     [java] org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
     [java] org.apache.tools.ant.Project.executeTarget(Project.java:1298)
     [java] org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
     [java] org.apache.tools.ant.Project.executeTargets(Project.java:1181)
     [java] org.apache.tools.ant.Main.runBuild(Main.java:698)
     [java] org.apache.tools.ant.Main.startAnt(Main.java:199)
     [java] org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)
     [java] org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)
     [java] Java Result: 1

-- 
Berlin Brown
http://botnode.com

From jimi at temporal-wave.com  Sun Mar 15 08:19:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 15 Mar 2009 08:19:12 -0700
Subject: [antlr-interest] Examples from the antlr book,
 (p 54) simple expressions
In-Reply-To: <df27a55b0903142015k458d971dn69096193c41fef24@mail.gmail.com>
References: <df27a55b0903142015k458d971dn69096193c41fef24@mail.gmail.com>
Message-ID: <49BD1C70.1030004@temporal-wave.com>

Berlin Brown wrote:
> I am trying to run the examples from the book (or any examples for
> that matter) and getting NullPointerException errors.
>
> With antrl 3.1.2:
> Java 1.6
>
> grammar Adder;
>
> @header {
>     import java.util.HashMap;
> }
>
> @members {
>     HashMap memory = new HashMap();
> }
>
> prog:   stat+ ;
>
> // START: stat
> stat:   // Evaluate expr and emit result
>         expr NEWLINE { System.out.println($expr.value); }
>
>         // Match assignment and stored value
>     |   ID '=' expr NEWLINE { memory.put($ID.text, new
> Integer($expr.value)); }
>     |   NEWLINE
>     ;
> // END: stat
>
> expr returns [int value]
>     :   e = multExpr  { $value = $e.value; }
>         (   '+' e = multExpr  { $value += $e.value; }
>         |   '-' e = multExpr  { $value -= $e.value; }
>         )*
>     ;
> // END: expr
>
> multExpr returns [int value]
>     :   e.atom { $value = $e.value; }  ('*' e.atom { $value *= $e.value; } )*
>     ;
>   
First thing is that this should be e=atom in both cases.

Once I fixed that, then the grammar works as advertised with the current 
version of ANTLR, so perhaps what you are trying to compile isn't quite 
what you posted here?

> I am trying to run the grammar above.
>
> I get the following error:
>
> ntlr:
>      [java] warning(200):
> /usr/local/projects/light_edit/src/antlr/Adder.g:14:5: Decision can
> match input such as "NEWLINE" using multiple alternatives: 1, 3
>      [java] As a result, alternative(s) 3 were disabled for that input
>      [java] error(201):
> /usr/local/projects/light_edit/src/antlr/Adder.g:14:5: The following
> alternatives can never be matched: 3
>      [java]
>      [java] Java Result: 1
>   
Try this:

prog:   (stat? NEWLINE)+ ;

// START: stat
stat:   // Evaluate expr and emit result
        expr  { System.out.println($expr.value); }

        // Match assignment and stored value
    |   ID '=' expr  { memory.put($ID.text, new Integer($expr.value)); }
    ;
// END: stat

Although, as I say, you should not be getting that error anyway :-(

JIm

From tarcatu_dragosh at yahoo.com  Sun Mar 15 09:49:25 2009
From: tarcatu_dragosh at yahoo.com (Dragos Tarcatu)
Date: Sun, 15 Mar 2009 09:49:25 -0700 (PDT)
Subject: [antlr-interest] C runtime question
Message-ID: <997318.56575.qm@web56307.mail.re3.yahoo.com>

Hi,

I'm kind of new with the antlr C runtime and I know this question may sount a little stupid. I wrote a simple grammar for both C/java and observed that for C the usage of += operators inside rules turns into some ugly compilation errors. 

the grammar looks like this:

grammar test;

options
{
??? language = C;
}
ids??? ??? 
??? ??? : ??? ??? (lst+=ID)+
??? ??? ;
??? ??? ??? ??? 
ID??? ??? :??? ??? ('a'..'z')+;

and the errors I get are something like this:
gcc -o main main.c testLexer.c testLexer.h testParser.c testParser.h -I. -lantlr3c
testParser.c: In function ?ids?:
testParser.c:383: error: ?struct testParser_Ctx_struct? has no member named ?vectors?
testParser.c:383: error: ?struct testParser_Ctx_struct? has no member named ?vectors?

Is this a limitation of the C runtime or something?

Thanks,
????? Dragos



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090315/4b6db5bb/attachment.html 

From jimi at temporal-wave.com  Sun Mar 15 10:06:38 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 15 Mar 2009 10:06:38 -0700
Subject: [antlr-interest] C runtime question
In-Reply-To: <997318.56575.qm@web56307.mail.re3.yahoo.com>
References: <997318.56575.qm@web56307.mail.re3.yahoo.com>
Message-ID: <49BD359E.1010006@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090315/64c9a26a/attachment.html 

From des at deshartman.com  Sun Mar 15 17:42:42 2009
From: des at deshartman.com (Des Hartman)
Date: Mon, 16 Mar 2009 11:42:42 +1100
Subject: [antlr-interest] Catch all else rule
Message-ID: <8773d42e0903151742q65e0c93dia2ae5183fc92b65f@mail.gmail.com>

Is there a way to set up a rule that catches all other matches if none of
the parsing matches? My thinking here is I match all the parser rules that I
know of such as:

multiplication
adding
power
operand
literal
etc

and if none of these are matched, then the entered text is a string.

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/96b16084/attachment.html 

From parrt at cs.usfca.edu  Sun Mar 15 17:53:55 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 15 Mar 2009 17:53:55 -0700
Subject: [antlr-interest] Catch all else rule
In-Reply-To: <8773d42e0903151742q65e0c93dia2ae5183fc92b65f@mail.gmail.com>
References: <8773d42e0903151742q65e0c93dia2ae5183fc92b65f@mail.gmail.com>
Message-ID: <36859A14-159F-46D9-9018-C382DB96BB7B@cs.usfca.edu>

Hi Des, see filter mode for lexers.
Ter
On Mar 15, 2009, at 5:42 PM, Des Hartman wrote:

> Is there a way to set up a rule that catches all other matches if  
> none of the parsing matches? My thinking here is I match all the  
> parser rules that I know of such as:
>
> multiplication
> adding
> power
> operand
> literal
> etc
>
> and if none of these are matched, then the entered text is a string.
>
> Thanks
> Des
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From yimm8369 at hotmail.com  Sun Mar 15 19:36:07 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Mon, 16 Mar 2009 10:36:07 +0800
Subject: [antlr-interest] failed predicate problem
Message-ID: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>


 

Hello everyone,

 

There is my tree grammar, what I want to do is when $memberExpression.text.equals("Math.abs"), run the template of mathabs.

 

callExpression
    : ^(CALL_EXPRESSION memberExpression indexSuffix * propertyReferenceSuffix* argumentSuffix*)  
      {$memberExpression.text.equals("Math.abs")}? ->mathabs(x={$argumentSuffix.text})
    ;

 

When memberExpression is not equal to "Math.abs", everytime the parser goes to  callExpression,  the error of 

F:\Treegrammar.g: node from after line 4:28 rule callExpression failed predicate: {$memberExpression.text.equals("Math.abs")}? occur.

 

Does that an error, or I can just ignor that.

 

The even weird error is that when the memberExpression is  equal to "Math.abs", and the template of mathabs do run, however , the  failed predicate error is still there.

 

 

any idea?

 

 

Annie

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/20e67806/attachment.html 

From michael.bedward at gmail.com  Sun Mar 15 21:28:53 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 16 Mar 2009 15:28:53 +1100
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
Message-ID: <e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>

Hi

You are re-writing an AST ?  I ask because your question made it sound
like you are running actions but the grammar looks like re-writing.

I was under the impression that you MUST provide an explicit
alternative for when the predicate is not true.

So...

callExpression
: ^(CALL_EXPRESSION memberExpression indexSuffix *
propertyReferenceSuffix* argumentSuffix*)
       {$memberExpression.text.equals("Math.abs")}?
->mathabs(x={$argumentSuffix.text})

       -> [ alternative re-write (or blank to just drop the node from
the tree) ]
    ;

Hope this helps
Michael

From des at deshartman.com  Sun Mar 15 23:11:47 2009
From: des at deshartman.com (Des Hartman)
Date: Mon, 16 Mar 2009 17:11:47 +1100
Subject: [antlr-interest] Catch all else rule
In-Reply-To: <36859A14-159F-46D9-9018-C382DB96BB7B@cs.usfca.edu>
References: <8773d42e0903151742q65e0c93dia2ae5183fc92b65f@mail.gmail.com>
	<36859A14-159F-46D9-9018-C382DB96BB7B@cs.usfca.edu>
Message-ID: <8773d42e0903152311x6b979fe9qe12d4babf6222345@mail.gmail.com>

Terrence

Thanks for the reply. Had a look at it, but it is for lexers only, so not
really going to help me. I need to walk through the parser and check all
known calculations. this is your typical nested formula precedence.

When I get to literal and nothing has match, I would like to return a String
of what the parser has so far consumed.

Hopefully there is a way to do this. At the moment I am thinking of relying
on No match errors to bubble up and then take the input as the string.

Thanks
Des



2009/3/16 Terence Parr <parrt at cs.usfca.edu>

> Hi Des, see filter mode for lexers.
> Ter
>
> On Mar 15, 2009, at 5:42 PM, Des Hartman wrote:
>
>  Is there a way to set up a rule that catches all other matches if none of
>> the parsing matches? My thinking here is I match all the parser rules that I
>> know of such as:
>>
>> multiplication
>> adding
>> power
>> operand
>> literal
>> etc
>>
>> and if none of these are matched, then the entered text is a string.
>>
>> Thanks
>> Des
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/9c9a254b/attachment.html 

From des at deshartman.com  Sun Mar 15 23:15:52 2009
From: des at deshartman.com (Des Hartman)
Date: Mon, 16 Mar 2009 17:15:52 +1100
Subject: [antlr-interest] Catch all else rule
In-Reply-To: <8773d42e0903152311x6b979fe9qe12d4babf6222345@mail.gmail.com>
References: <8773d42e0903151742q65e0c93dia2ae5183fc92b65f@mail.gmail.com>
	<36859A14-159F-46D9-9018-C382DB96BB7B@cs.usfca.edu>
	<8773d42e0903152311x6b979fe9qe12d4babf6222345@mail.gmail.com>
Message-ID: <8773d42e0903152315x15dbea84lf7fabae30b857466@mail.gmail.com>

Doh!

Just saw that I can do it with Tree grammar. I'll give that a go.

I was reading your book and that only talks about filter=true for lexers.
The Web site also has it for Trees. Any updates coming soon?

http://www.antlr.org/wiki/display/~admin/2008/10/23/tree+pattern+matching+grammars

Thanks
Des



2009/3/16 Des Hartman <des at deshartman.com>

> Terrence
>
> Thanks for the reply. Had a look at it, but it is for lexers only, so not
> really going to help me. I need to walk through the parser and check all
> known calculations. this is your typical nested formula precedence.
>
> When I get to literal and nothing has match, I would like to return a
> String of what the parser has so far consumed.
>
> Hopefully there is a way to do this. At the moment I am thinking of relying
> on No match errors to bubble up and then take the input as the string.
>
> Thanks
> Des
>
>
>
> 2009/3/16 Terence Parr <parrt at cs.usfca.edu>
>
> Hi Des, see filter mode for lexers.
>> Ter
>>
>> On Mar 15, 2009, at 5:42 PM, Des Hartman wrote:
>>
>>  Is there a way to set up a rule that catches all other matches if none of
>>> the parsing matches? My thinking here is I match all the parser rules that I
>>> know of such as:
>>>
>>> multiplication
>>> adding
>>> power
>>> operand
>>> literal
>>> etc
>>>
>>> and if none of these are matched, then the entered text is a string.
>>>
>>> Thanks
>>> Des
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/7630e563/attachment.html 

From anders.hessellund at gmail.com  Mon Mar 16 03:12:02 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Mon, 16 Mar 2009 11:12:02 +0100
Subject: [antlr-interest] distinguishing between int and double in a tree
	grammar
Message-ID: <797a9f130903160312n500c888kd68acdb7df50949@mail.gmail.com>

Hi,

I've written a little tree grammar for an expression language. There are
three basic types int, double and boolean. My problem is that I can not
figure out how to distinguish between int and double without getting the
following error:

[fatal] rule compareExpr has non-LL(*) decision due to recursive rule
invocations reachable from alts 1,2.  Resolve by left-factoring or using
syntactic predicates or using backtrack=true option.

It is important to distinguish between these types because integer division
and double division return very different results. I guess someone must have
looked at this when doing type conversions/coercions. Here is my tree
grammar:

tree grammar Eval;
options {
    tokenVocab=Expr;
    ASTLabelType=CommonTree;
}
expr returns [boolean value]
    : boolExpr {$value=$boolExpr.value;}
    ;
boolExpr returns [boolean value]
    :    ^(OR bool1=boolExpr bool2=boolExpr) {$value=bool1||bool2;}
    |    ^(AND bool1=boolExpr bool2=boolExpr) {$value=bool1&&bool2;}
    |    ^(EQ bool1=boolExpr bool2=boolExpr) {$value=bool1==bool2;}
    |    ^(NEQ bool1=boolExpr bool2=boolExpr) {$value=bool1!=bool2;}
    |    ^(UNARY NOT bool1=boolExpr) {$value=!bool1;}
    |    BOOLEAN {$value=Boolean.parseBoolean($BOOLEAN.text);}
    |    compareExpr {$value=$compareExpr.value;}
    ;
compareExpr returns [boolean value]
    :    ^(EQ real1=realExpr real2=realExpr) {$value=real1==real2;}
    |    ^(EQ int1=intExpr int2=intExpr) {$value=int1==int2;}
    ;
realExpr returns [double value]
    :    ^(UNARY PLUS real1=realExpr) {$value=real1;}
    |    ^(UNARY MINUS real1=realExpr) {$value=-real1;}
    |    ^(DIV real1=realExpr real2=realExpr) {$value=real1/real2;}
    |    REAL {$value=Double.parseDouble($REAL.text);}
    ;
intExpr returns [int value]
    :    ^(UNARY PLUS int1=intExpr) {$value=int1;}
    |    ^(UNARY MINUS int1=intExpr) {$value=-int1;}
    |    ^(DIV int1=intExpr int2=intExpr) {$value=(int)int1/int2;}//truncate
    |    INTEGER {$value=Integer.parseInt($INTEGER.text);}
    ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/5d4979b3/attachment.html 

From micha-1 at fantasymail.de  Mon Mar 16 03:45:34 2009
From: micha-1 at fantasymail.de (Michael)
Date: Mon, 16 Mar 2009 11:45:34 +0100
Subject: [antlr-interest] distinguishing between int and double in a
	tree grammar
In-Reply-To: <797a9f130903160312n500c888kd68acdb7df50949@mail.gmail.com>
References: <797a9f130903160312n500c888kd68acdb7df50949@mail.gmail.com>
Message-ID: <200903161145.34553.micha-1@fantasymail.de>

Am Monday 16 March 2009 11:12:02 schrieb Anders Hessellund:
> Hi,
>
> It is important to distinguish between these types because integer division
> and double division return very different results. I guess someone must
> have looked at this when doing type conversions/coercions. Here is my tree
> grammar:

you give the type to the constants and variables and when going over the tree 
the operators decide on their argument types what to coerce 

so 3 is an int and 5.4 is a double, now "/" has an int and a double as 
arguments so it can insert a coercion from int to double for it's first 
parameter (or force you to write a coercion)...

if "/" gets a boolean and a char it can throw a type error...


 Michael

From anders.hessellund at gmail.com  Mon Mar 16 03:53:38 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Mon, 16 Mar 2009 11:53:38 +0100
Subject: [antlr-interest] distinguishing between int and double in a
	tree grammar
In-Reply-To: <200903161145.34553.micha-1@fantasymail.de>
References: <797a9f130903160312n500c888kd68acdb7df50949@mail.gmail.com>
	<200903161145.34553.micha-1@fantasymail.de>
Message-ID: <797a9f130903160353t4c88b501ifd2f3a7065493bc7@mail.gmail.com>

Thanks,

I understand in principle what you mean but I am unsure on how to implement
it using ANTLR.

-- Anders

2009/3/16 Michael <micha-1 at fantasymail.de>

> Am Monday 16 March 2009 11:12:02 schrieb Anders Hessellund:
> > Hi,
> >
> > It is important to distinguish between these types because integer
> division
> > and double division return very different results. I guess someone must
> > have looked at this when doing type conversions/coercions. Here is my
> tree
> > grammar:
>
> you give the type to the constants and variables and when going over the
> tree
> the operators decide on their argument types what to coerce
>
> so 3 is an int and 5.4 is a double, now "/" has an int and a double as
> arguments so it can insert a coercion from int to double for it's first
> parameter (or force you to write a coercion)...
>
> if "/" gets a boolean and a char it can throw a type error...
>
>
>  Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/49c6b6bc/attachment.html 

From des at deshartman.com  Mon Mar 16 04:40:55 2009
From: des at deshartman.com (Des Hartman)
Date: Mon, 16 Mar 2009 22:40:55 +1100
Subject: [antlr-interest] AST Tree rewriting
Message-ID: <8773d42e0903160440k795f484bte387c936cb156fa2@mail.gmail.com>

I has just been reading up about AST tree rewriting and it seems to be
exactly what I need. However I am struggling to compile what I believe is a
very simple tree.  I have tried it with language=Java, but the same errors.
Looks like ANTLRWorks does not understand tree rewrites??? The problem I am
having is that ANTLRWorks 1.2.3 with antlr-3.1.2 complains and will not
compile this code. It says

"Unexpected token: ^("
"expecting SEMI, found ')' "

LREF and IREF are defined in the Parser Formula and convertLocalReference
converts a reference like "A" to "{1}" in code.



tree grammar L2ITree;

options {
    language=ActionScript;
    tokenVocab=Formula;
    ASTLabelType=CommonTree;
    filter=true;
    rewrite=true;
}

@members {
    // This function gets overriden in the main code. Returns the IREF value
based on LREF value.
    public function convertLocalReference(ref:CommonTree):Number {return
null;}

}

reference
    : ^(LREF   lr=NAME) { iref:Number = convertLocalReference($lr); }
-> ^(IREF iref)
    ;

===================================================
Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/97fed0fa/attachment.html 

From floris.vannee at gmail.com  Mon Mar 16 04:45:09 2009
From: floris.vannee at gmail.com (Floris van Nee)
Date: Mon, 16 Mar 2009 12:45:09 +0100
Subject: [antlr-interest] AST Tree rewriting
In-Reply-To: <8773d42e0903160440k795f484bte387c936cb156fa2@mail.gmail.com>
References: <8773d42e0903160440k795f484bte387c936cb156fa2@mail.gmail.com>
Message-ID: <2302ac370903160445w1ec99e3bkdb9eeee49efa49e7@mail.gmail.com>

Hi Des,

I think you need to specify output=AST in the options section.

Floris

2009/3/16 Des Hartman <des at deshartman.com>

> I has just been reading up about AST tree rewriting and it seems to be
> exactly what I need. However I am struggling to compile what I believe is a
> very simple tree.  I have tried it with language=Java, but the same errors.
> Looks like ANTLRWorks does not understand tree rewrites??? The problem I am
> having is that ANTLRWorks 1.2.3 with antlr-3.1.2 complains and will not
> compile this code. It says
>
> "Unexpected token: ^("
> "expecting SEMI, found ')' "
>
> LREF and IREF are defined in the Parser Formula and convertLocalReference
> converts a reference like "A" to "{1}" in code.
>
>
>
> tree grammar L2ITree;
>
> options {
>     language=ActionScript;
>     tokenVocab=Formula;
>     ASTLabelType=CommonTree;
>     filter=true;
>     rewrite=true;
> }
>
> @members {
>     // This function gets overriden in the main code. Returns the IREF
> value based on LREF value.
>     public function convertLocalReference(ref:CommonTree):Number {return
> null;}
>
> }
>
> reference
>     : ^(LREF   lr=NAME) { iref:Number = convertLocalReference($lr); }
> -> ^(IREF iref)
>     ;
>
> ===================================================
> Thanks
> Des
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/b7699342/attachment.html 

From des at deshartman.com  Mon Mar 16 04:53:02 2009
From: des at deshartman.com (Des Hartman)
Date: Mon, 16 Mar 2009 22:53:02 +1100
Subject: [antlr-interest] AST Tree rewriting
In-Reply-To: <2302ac370903160445w1ec99e3bkdb9eeee49efa49e7@mail.gmail.com>
References: <8773d42e0903160440k795f484bte387c936cb156fa2@mail.gmail.com>
	<2302ac370903160445w1ec99e3bkdb9eeee49efa49e7@mail.gmail.com>
Message-ID: <8773d42e0903160453q565b937dp455246be4a398348@mail.gmail.com>

Floris

Thanks a million. Just one of those silly things I missed. Added it and it
works. I also noticed I need "[" "]" around the variables.

So the correct version of the below is:

tree grammar L2ITree;

options {
    language=ActionScript;
    tokenVocab=Formula;
    output=AST;
    filter=true;
    rewrite=true;
}

@members {
    // This function gets overriden in the main code. Returns the IREF value
based on LREF value.
    public function convertLocalReference(ref:CommonTree):Number {return
null;}

}

reference
    : ^(LREF   lr=NAME) { iref:Number = convertLocalReference($lr); }
-> ^(IREF [iref])
    ;



Thanks
Des



2009/3/16 Floris van Nee <floris.vannee at gmail.com>

> Hi Des,
>
> I think you need to specify output=AST in the options section.
>
> Floris
>
> 2009/3/16 Des Hartman <des at deshartman.com>
>
>> I has just been reading up about AST tree rewriting and it seems to be
>> exactly what I need. However I am struggling to compile what I believe is a
>> very simple tree.  I have tried it with language=Java, but the same errors.
>> Looks like ANTLRWorks does not understand tree rewrites??? The problem I am
>> having is that ANTLRWorks 1.2.3 with antlr-3.1.2 complains and will not
>> compile this code. It says
>>
>> "Unexpected token: ^("
>> "expecting SEMI, found ')' "
>>
>> LREF and IREF are defined in the Parser Formula and convertLocalReference
>> converts a reference like "A" to "{1}" in code.
>>
>>
>>
>> tree grammar L2ITree;
>>
>> options {
>>     language=ActionScript;
>>     tokenVocab=Formula;
>>     ASTLabelType=CommonTree;
>>     filter=true;
>>     rewrite=true;
>> }
>>
>> @members {
>>     // This function gets overriden in the main code. Returns the IREF
>> value based on LREF value.
>>     public function convertLocalReference(ref:CommonTree):Number {return
>> null;}
>>
>> }
>>
>> reference
>>     : ^(LREF   lr=NAME) { iref:Number = convertLocalReference($lr);
>> }       -> ^(IREF iref)
>>     ;
>>
>> ===================================================
>> Thanks
>> Des
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/164cb3bf/attachment.html 

From michael.bedward at gmail.com  Mon Mar 16 06:03:46 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 17 Mar 2009 00:03:46 +1100
Subject: [antlr-interest] distinguishing between int and double in a
	tree grammar
In-Reply-To: <797a9f130903160353t4c88b501ifd2f3a7065493bc7@mail.gmail.com>
References: <797a9f130903160312n500c888kd68acdb7df50949@mail.gmail.com>
	<200903161145.34553.micha-1@fantasymail.de>
	<797a9f130903160353t4c88b501ifd2f3a7065493bc7@mail.gmail.com>
Message-ID: <e24c4c270903160603y4cf1f375n1781963322f3f9ab@mail.gmail.com>

Hi Anders,

This is how I distinguish between int and double in my lexer rules:

INT_LITERAL	: '0' | NonZeroDigit Digit*
		;

FLOAT_LITERAL	: ('0' | NonZeroDigit Digit*)? Dot Digit* FloatExp?
		;
fragment
Digit           : '0'..'9'
                ;

fragment
Dot             : '.'
                ;

fragment
NonZeroDigit    : '1'..'9'
                ;

fragment
FloatExp        : ('e'|'E' (PLUS|MINUS)? '0'..'9'+)
                ;

Hope this helps
Michael

From indhu.b at s7software.com  Mon Mar 16 06:26:15 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Mon, 16 Mar 2009 18:56:15 +0530 (IST)
Subject: [antlr-interest] Passing RuleReturnScope as argument
Message-ID: <32231468.901237209975487.JavaMail.root@star>

Hi, 

Is it not possible to pass an instance of RuleReturnScope as argument to a function? With the following sample, I get the error message 'missing attribute access on rule scope'. Curious to know the reason for this limitation... or am I missing something? Is there a workaround? 

foo : bar1 lbl=bar2 bar3 
{ 
$lbl.start.setText("asdf"); //valid 
act( $lbl ); //invalid 
} 

Thanks, Indhu 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/09ec8754/attachment.html 

From tu219717 at gmail.com  Mon Mar 16 08:23:39 2009
From: tu219717 at gmail.com (=?ISO-8859-2?Q?Tomasz_Uli=F1ski?=)
Date: Mon, 16 Mar 2009 16:23:39 +0100
Subject: [antlr-interest] ANTLR + StringTemplate + .stg
Message-ID: <e91b9f350903160823q3bfc7b22p52610aac84430546@mail.gmail.com>

Hi,

I have tree grammar with (output = template).
I use inside my grammar templates from some group (external .stg file)
What should I do to make this work together?

I found "Template construction" examples
(http://www.antlr.org/wiki/display/ANTLR3/Template+construction),
which use named templates from external file, but I can't find example
of code (main function), which do following
1. inputFile -> (grammar output=AST) -> AST
2. AST -> (tree grammar output=template - templates from external .stg
file) -> code

I'm looking "de facto" for sth like (Interfacing AST with Java -
http://www.antlr.org/wiki/display/ANTLR3/Interfacing+AST+with+Java),
but about interfacing StringTemplate used by ANTLR grammar.

I will be very grateful for your help,
Best Regards,
Tomasz Ulinski

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 16 08:42:27 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 16 Mar 2009 15:42:27 +0000
Subject: [antlr-interest] AST Visualisation
Message-ID: <49BE7363.4050701@lancaster.ac.uk>

Hi all,

Having used google to search the archives, and the whole web, and found
only references to some apparently out-of-date stuff to do with
"ASTFrame", I'm now asking - does anyone know an easy way to visualise a
generated AST?

Sam

From bruce.bauman at andesaservices.com  Mon Mar 16 09:02:35 2009
From: bruce.bauman at andesaservices.com (Bruce Bauman)
Date: Mon, 16 Mar 2009 12:02:35 -0400
Subject: [antlr-interest] Pascal grammar for antlr V3?
Message-ID: <15DF771CF9BEAE418AA0C8D745F73D1504051813@exchange.andesatpa.com>

The example grammar for Pascal is for V2, does anyone have an updated
grammar before I go off and write one?

 

Thanks.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/06aa244d/attachment.html 

From jimi at temporal-wave.com  Mon Mar 16 09:17:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Mar 2009 09:17:39 -0700
Subject: [antlr-interest] AST Visualisation
In-Reply-To: <49BE7363.4050701@lancaster.ac.uk>
References: <49BE7363.4050701@lancaster.ac.uk>
Message-ID: <49BE7BA3.6070004@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Hi all,
>
> Having used google to search the archives, and the whole web, and found
> only references to some apparently out-of-date stuff to do with
> "ASTFrame", I'm now asking - does anyone know an easy way to visualise a
> generated AST?
>   
Assuming that t is your tree returned from the parser:

                    // Pick up the generic tree
                    //
                    Tree t = (Tree)psrReturn.getTree();
...

                    // Use the ANTLR built in dot generator
                    //
                    DOTTreeGenerator gen = new DOTTreeGenerator();

                    // Which we can cause to generate the DOT specification
                    // with the input file name suffixed with .dot. You 
can then use
                    // the graphviz tools to generate the grahpical
                    // version of the dot file.
                    //
                    String outputName = source + "dot";

                    System.out.println("    Producing AST dot (graphviz) 
file");

                    // It produces a jguru string template.
                    //
                    StringTemplate st = gen.toDOT(t, new 
CommonTreeAdaptor(), _treeST, _edgeST);

                    // Create the output file and write the dot spec to it
                    //
                    FileWriter outputStream = new FileWriter(outputName);
                    outputStream.write(st.toString());
                    outputStream.close();

                    // Invoke dot to generate a .png file
                    //
                    System.out.println("    Producing png graphic for 
tree");
                    pStart = System.currentTimeMillis();
                    Process proc = Runtime.getRuntime().exec("dot -Tpng 
-o" + source + "png " + outputName);
                    proc.waitFor();
                    stop = System.currentTimeMillis();
                    System.out.println("      PNG graphic produced in " 
+ (stop - pStart) + "ms.");



Note that this produces the .dot file, which is then processed by the 
dot command to make a png or whatever else you need. See the graphviz 
web site for details on that:

dot -Tpng -omygraphic.png mydotspec.dot


> Sam
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 16 09:36:45 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 16 Mar 2009 16:36:45 +0000
Subject: [antlr-interest] AST Visualisation
In-Reply-To: <49BE7BA3.6070004@temporal-wave.com>
References: <49BE7363.4050701@lancaster.ac.uk>
	<49BE7BA3.6070004@temporal-wave.com>
Message-ID: <49BE801D.4030909@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Hi all,
>>
>> Having used google to search the archives, and the whole web, and found
>> only references to some apparently out-of-date stuff to do with
>> "ASTFrame", I'm now asking - does anyone know an easy way to visualise a
>> generated AST?
>>   
> Assuming that t is your tree returned from the parser:
> 
<SNIP>

Brilliant, thanks!

Sam


From lishihwei at gmail.com  Mon Mar 16 10:34:02 2009
From: lishihwei at gmail.com (Shihwei Li)
Date: Mon, 16 Mar 2009 13:34:02 -0400
Subject: [antlr-interest] How do I skip a subtree walking in a tree grammar?
Message-ID: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com>

Hi,

How do I skip a subtree walking in a tree grammar?

I have a tree grammar to evaluate a boolean expression. What I want to do is
to implement 'conditional' boolean expression:
say the expression is 'A and B', then if the evaluation of A is already
false, I want to skip the evaluation (walking) of B subtree. How do I do
that?

It seems that I can't insert an action like:
       * ^( AND a=bool_exp { if (!a) return false; } b=bool_exp) { $value =
(a && b); },*
because it messes up the token stream for further tree walking.

Here is my original tree grammar:

*bool_exp returns [boolean value]
   throws ConditionExpressionException
   :
       not_bool_exp                  { $value = $not_bool_exp.value; }
   |
       ^( OR a=bool_exp b=bool_exp)  { $value = (a || b); }
   |
       ^( AND a=bool_exp b=bool_exp) { $value = (a && b); }
   ;
*
--peter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/dd9f66b6/attachment.html 

From list.encelade at gmail.com  Mon Mar 16 11:32:49 2009
From: list.encelade at gmail.com (Vincent De Groote)
Date: Mon, 16 Mar 2009 19:32:49 +0100
Subject: [antlr-interest] Interface between a C preprocessor and the C
	grammar parsers
Message-ID: <49BE9B51.7090100@googlemail.com>

Hello,

I need to build a program which reads C language files, modifies the 
files (code transformations), then save the files back to disk. The 
saved files must have the original file structure, with unexpanded 
include files,  unexpanded macros, inactive lines (skipped by the 
preprocessor), ...  Beside the code rewrite functionnality, the program 
must also be able to reformat source code, based on its syntactic structure.

This means that the tokens hidden to the grammatical parser must be 
accessible to the final application.

I'm really a newbie in parsing, and I need some advices on how to do this.

My first questions are about the interface between the preprocessor and 
the C grammar parser:

- Should the preprocessor parser be embedded in the C grammar ?  (This 
seems a little ugly)
- Should the preprocessor parser be a syntaxical parser (with 
productions like active/incative lines, start and end of includes, ...), 
or a lexical parser ?
-  What should this preprocessor parser return ? 
   - A list of tokens (with their channel set to hidden / visible) (is 
it possible for a grammatical parser to return a token list) ?
   - A tree structure with the structure of the file ?
   - Something other ?

Other questions about the C grammar parser:

In the reference book (The Definitive ANTLR Reference: Building Domain 
Specific languages), I read that an AST should not contain syntax-only 
tokens, like the ';' statement separator, parentheses used to change 
operation precedence ...  I do not understand why  an AST should not 
contain such tokens.  I suppose they are just useless in an AST.  Are 
there other reasons ?

This book is well written, but I'm not sure to be able to select the 
best choice  between AST, Tree, custom made structures ...

If the AST is not the good structure to return the parsed grammar to the 
caller, I suppose I could use custom made structures.  But is that the 
best choice ?

I do not understand very well the differences between an abstract tree 
and a concrete tree (I'm really a newbie ...). 
Some hints about these differences are welcome.


Thanks for your replies,

Vincent De Groote




 


 





 

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 16 11:35:40 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 16 Mar 2009 18:35:40 +0000
Subject: [antlr-interest] My kooky ASN.1 grammar again - can't find the
	ambiguity
Message-ID: <49BE9BFC.4070305@lancaster.ac.uk>

Hi all,

I've been trying to actually remove ambiguities, rather than papering
over the cracks with backtrack (as I realised there are some fundamental
ways in which this isn't going to work). I realised that there are a lot
of cases of value expressions being redundant between types. The
standard is *really* not aimed at implementors, which is a little
worrying... anyway, the grammar has been getting simpler, but I've hit a
snag when I get to the bits about constraints.

The grammar is attached; the difficulty I'm having is that 'type' and
'value' are apparently ambiguous with one another, as given by the
errors for the rule 'test' on line 715. I'm getting better at tracing
through to find the ambiguities and left-factoring them or reducing
redundancy. However, in this case I can't seem to find the situations
where CAPID is a valid value or LCID is a valid type, or the other
strange results it gives.

Any help gratefully appreciated - a pointer at the leaf-rules that are
at issue, and how one gets to them, would be ideal.

Thanks,

Sam
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/8113f6f0/attachment.pl 

From antlr at mirality.co.nz  Mon Mar 16 12:13:58 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 17 Mar 2009 08:13:58 +1300
Subject: [antlr-interest] How do I skip a subtree walking in a tree
 grammar?
In-Reply-To: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com
 >
References: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com>
Message-ID: <20090316191425.C0D073418499@www.antlr.org>

At 06:34 17/03/2009, Shihwei Li wrote:
>I have a tree grammar to evaluate a boolean expression. What I 
>want to do is to implement 'conditional' boolean expression:
>say the expression is 'A and B', then if the evaluation of A is 
>already false, I want to skip the evaluation (walking) of B 
>subtree. How do I do that?
>
>It seems that I can't insert an action like:
>  ^( AND a=bool_exp { if (!a) return false; } b=bool_exp) { 
> $value = (a && b); },
>because it messes up the token stream for further tree walking.

You need to specify alternative paths.  (NEVER use a return 
statement in a grammar action.)

ignore: . | ^(. ignore*);

bool_exp returns [boolean value]
   : ^(OR a=bool_exp
     ( {$a.value}? => ignore { $value = true; }
     | b=bool_exp { $value = $b.value; }
     ))
   | ^(AND a=bool_exp
     ( {$a.value}? => b=bool_exp { $value = $b.value; }
     | ignore { $value = false; }
     ))
   ;

(You probably don't actually need the references to 'ignore', 
since you're ignoring the trailing end of the subtree.  But it's 
useful in cases where you need to ignore a bit in the middle and 
then parse something else afterwards.)


From reynoldx at gmail.com  Mon Mar 16 12:25:07 2009
From: reynoldx at gmail.com (Reynold Xin)
Date: Mon, 16 Mar 2009 15:25:07 -0400
Subject: [antlr-interest] how to write a rule that eats everything until a
	specific KEYWORD?
In-Reply-To: <aa750a6a0903161223x188c00eep47e6451f45a011f3@mail.gmail.com>
References: <aa750a6a0903161223x188c00eep47e6451f45a011f3@mail.gmail.com>
Message-ID: <aa750a6a0903161225r1716c282u6a19ac1a3689f110@mail.gmail.com>

I am writing a shallow SQL select parser that should parse

SELECT (eats everything until keyword LINK or semicolon) LINK ...

I have been reading the wiki and the Definitive ANTLR Reference but
still haven't got any clue how to do this. Can anyone shed some light?

Thanks a lot.


--
Reynold Xin

From antlr at mirality.co.nz  Mon Mar 16 12:37:15 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 17 Mar 2009 08:37:15 +1300
Subject: [antlr-interest] how to write a rule that eats everything until
 a specific KEYWORD?
In-Reply-To: <aa750a6a0903161225r1716c282u6a19ac1a3689f110@mail.gmail.co
 m>
References: <aa750a6a0903161223x188c00eep47e6451f45a011f3@mail.gmail.com>
	<aa750a6a0903161225r1716c282u6a19ac1a3689f110@mail.gmail.com>
Message-ID: <20090316193735.430E734184B8@www.antlr.org>

At 08:25 17/03/2009, Reynold Xin wrote:
 >I am writing a shallow SQL select parser that should parse
 >
 >SELECT (eats everything until keyword LINK or semicolon) LINK 
...
 >
 >I have been reading the wiki and the Definitive ANTLR Reference
 >but still haven't got any clue how to do this. Can anyone shed 
some
 >light?

rule
   : SELECT (~(LINK | SEMI))* (LINK ...)? SEMI
   ;


From lishihwei at gmail.com  Mon Mar 16 13:09:27 2009
From: lishihwei at gmail.com (Shihwei Li)
Date: Mon, 16 Mar 2009 16:09:27 -0400
Subject: [antlr-interest] How do I skip a subtree walking in a tree
	grammar?
In-Reply-To: <49bea503.0c0bca0a.64ab.25f4SMTPIN_ADDED@mx.google.com>
References: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com>
	<49bea503.0c0bca0a.64ab.25f4SMTPIN_ADDED@mx.google.com>
Message-ID: <936299fb0903161309w75c27b94tfdae668429bd7f45@mail.gmail.com>

Gavin,

Thank you!

Is this related to syntactic predicate? I can sort of understand the idea
behind, but I am not familiar with the syntactic predicate yet. So still
need some help from you.

I tried the tree grammar you provided, and I got compilation errors in the
generated java code, such as

                       if ( ((a)) ) {s = 18;}
                        else if ( (true) ) {s = 19;}

Saying that 'a' is not defined.

No idea why such code is generated. Is it due to some error in the grammar
below?

--peter



2009/3/16 Gavin Lambert <antlr at mirality.co.nz>

> At 06:34 17/03/2009, Shihwei Li wrote:
>
>> I have a tree grammar to evaluate a boolean expression. What I want to do
>> is to implement 'conditional' boolean expression:
>> say the expression is 'A and B', then if the evaluation of A is already
>> false, I want to skip the evaluation (walking) of B subtree. How do I do
>> that?
>>
>> It seems that I can't insert an action like:
>>  ^( AND a=bool_exp { if (!a) return false; } b=bool_exp) { $value = (a &&
>> b); },
>> because it messes up the token stream for further tree walking.
>>
>
> You need to specify alternative paths.  (NEVER use a return statement in a
> grammar action.)
>
> ignore: . | ^(. ignore*);
>
> bool_exp returns [boolean value]
>  : ^(OR a=bool_exp
>    ( {$a.value}? => ignore { $value = true; }
>    | b=bool_exp { $value = $b.value; }
>    ))
>  | ^(AND a=bool_exp
>    ( {$a.value}? => b=bool_exp { $value = $b.value; }
>    | ignore { $value = false; }
>    ))
>  ;
>
> (You probably don't actually need the references to 'ignore', since you're
> ignoring the trailing end of the subtree.  But it's useful in cases where
> you need to ignore a bit in the middle and then parse something else
> afterwards.)
>
>


-- 
--peter
http://lishihwei.googlepages.com/home
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/a623035a/attachment.html 

From antlr at mirality.co.nz  Mon Mar 16 13:20:47 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 17 Mar 2009 09:20:47 +1300
Subject: [antlr-interest] How do I skip a subtree walking in a tree
 grammar?
In-Reply-To: <936299fb0903161309w75c27b94tfdae668429bd7f45@mail.gmail.co
 m>
References: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com>
	<49bea503.0c0bca0a.64ab.25f4SMTPIN_ADDED@mx.google.com>
	<936299fb0903161309w75c27b94tfdae668429bd7f45@mail.gmail.com>
Message-ID: <20090316202108.8CAFD34184C2@www.antlr.org>

At 09:09 17/03/2009, Shihwei Li wrote:
>Is this related to syntactic predicate? I can sort of understand 
>the idea behind, but I am not familiar with the syntactic 
>predicate yet. So still need some help from you.

These are actually semantic predicates.

>I tried the tree grammar you provided, and I got compilation 
>errors in the generated java code, such as
>
>   if ( ((a)) ) {s = 18;}
>   else if ( (true) ) {s = 19;}
>
>Saying that 'a' is not defined.

Ah, ok; looks like the predicates are being hoisted out of 
context.  Try removing the => arrows.  I can never remember when 
one should be used vs. the other :)


From lishihwei at gmail.com  Mon Mar 16 13:38:06 2009
From: lishihwei at gmail.com (Shihwei Li)
Date: Mon, 16 Mar 2009 16:38:06 -0400
Subject: [antlr-interest] How do I skip a subtree walking in a tree
	grammar?
In-Reply-To: <49beb4aa.140bca0a.1ceb.ffffc3c8SMTPIN_ADDED@mx.google.com>
References: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com>
	<49bea503.0c0bca0a.64ab.25f4SMTPIN_ADDED@mx.google.com>
	<936299fb0903161309w75c27b94tfdae668429bd7f45@mail.gmail.com>
	<49beb4aa.140bca0a.1ceb.ffffc3c8SMTPIN_ADDED@mx.google.com>
Message-ID: <936299fb0903161338s42005b32jcd12e70579b0312a@mail.gmail.com>

Ok. time to learn more about predicates..

Still got problems. After removing '=>', compilation errors were reduced
from 35 to 34. All erros are the same: 'a' can not be resolved.
         if ( ((a)) ) {s = 18;}
         else if ( (true) ) {s = 19;}

Any idea why? Antlr I am using is 3.1.1

Here is the grammar I touched:

bool_exp returns [boolean value]
    throws ConditionExpressionException
    :
        not_bool_exp                  { $value = $not_bool_exp.value; }
    |
^(OR a=bool_exp
   ( {$a.value}? ignore { $value = true; }
   | b=bool_exp { $value = $b.value; }
   ))
 | ^(AND a=bool_exp
   ( {$a.value}? b=bool_exp { $value = $b.value; }
   | ignore { $value = false; }
   ))
    ;

--peter

2009/3/16 Gavin Lambert <antlr at mirality.co.nz>

> At 09:09 17/03/2009, Shihwei Li wrote:
>
>> Is this related to syntactic predicate? I can sort of understand the idea
>> behind, but I am not familiar with the syntactic predicate yet. So still
>> need some help from you.
>>
>
> These are actually semantic predicates.
>
>  I tried the tree grammar you provided, and I got compilation errors in the
>> generated java code, such as
>>
>>  if ( ((a)) ) {s = 18;}
>>  else if ( (true) ) {s = 19;}
>>
>> Saying that 'a' is not defined.
>>
>
> Ah, ok; looks like the predicates are being hoisted out of context.  Try
> removing the => arrows.  I can never remember when one should be used vs.
> the other :)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/cc565be4/attachment.html 

From yimm8369 at hotmail.com  Mon Mar 16 14:18:13 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Tue, 17 Mar 2009 05:18:13 +0800
Subject: [antlr-interest] How can I modify a tree node value according to
 the value of another tree node ?
Message-ID: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>


 

Hi everyone,

 

 

What I want to do is to replace var t:Number=Math.ceil(1.5);  to  var t:int=int(1.5); The tree I got is something like this:

 

PROPERTY_DECL (VARIABLE_STATEMENT (VAR_DECL_LIST (VAR_ID_DECL t (QUALIFIED_NAME Number)) = (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION (...........(QUALIFIED_NAME Math . ceil))) (ARGUMENT_SUFFIX (.........(PRIMARY_EXPRESSION 1.5))))

 

....... stands for some other nodes.

 

 

Replacing Math.ceil(1.5) to int(1.5) is easy to implement.But cos Number rule and Math.ceil rule belong to different tree, how can I replace Number to int when value of the other tree's node equals to Math.ceil? 

 

Thanks in advance!

 

 

Annie

_________________________________________________________________
?Windows Live ?????????? MSN?
http://im.live.cn/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/56797e40/attachment.html 

From lishihwei at gmail.com  Mon Mar 16 14:50:19 2009
From: lishihwei at gmail.com (Shihwei Li)
Date: Mon, 16 Mar 2009 17:50:19 -0400
Subject: [antlr-interest] How do I skip a subtree walking in a tree
	grammar?
In-Reply-To: <936299fb0903161338s42005b32jcd12e70579b0312a@mail.gmail.com>
References: <936299fb0903161034k29e72052mbc63ab44596e7d3@mail.gmail.com>
	<49bea503.0c0bca0a.64ab.25f4SMTPIN_ADDED@mx.google.com>
	<936299fb0903161309w75c27b94tfdae668429bd7f45@mail.gmail.com>
	<49beb4aa.140bca0a.1ceb.ffffc3c8SMTPIN_ADDED@mx.google.com>
	<936299fb0903161338s42005b32jcd12e70579b0312a@mail.gmail.com>
Message-ID: <936299fb0903161450h24d651f0n9e798c6f329d76c@mail.gmail.com>

Gavin,

I resolved the problem about the 'a' scope problem by enhancing the grammar
your provided. Thank you very much for your answer. That points to the right
direction for me.

Here is what I did: have a memeber variable boolean_short_cut flag. Change
the grammar to set up the flag and use the flag in the gated semantic
predicates:


bool_exp
^(OR a=bool_exp {} { boolean_short_cut = (a == true); }
( {boolean_short_cut}?=> ignore { $value = true; }
|
b=bool_exp { $value = $b.value; }
))
| ^(AND a=bool_exp { boolean_short_cut = ( a != true ); }
( {boolean_short_cut}?=> ignore { $value = false; }
|
b=bool_exp { $value = $b.value; }
))


--peter

2009/3/16 Shihwei Li <lishihwei at gmail.com>

> Ok. time to learn more about predicates..
>
> Still got problems. After removing '=>', compilation errors were reduced
> from 35 to 34. All erros are the same: 'a' can not be resolved.
>          if ( ((a)) ) {s = 18;}
>          else if ( (true) ) {s = 19;}
>
> Any idea why? Antlr I am using is 3.1.1
>
> Here is the grammar I touched:
>
> bool_exp returns [boolean value]
>     throws ConditionExpressionException
>     :
>         not_bool_exp                  { $value = $not_bool_exp.value; }
>     |
> ^(OR a=bool_exp
>    ( {$a.value}? ignore { $value = true; }
>    | b=bool_exp { $value = $b.value; }
>    ))
>  | ^(AND a=bool_exp
>    ( {$a.value}? b=bool_exp { $value = $b.value; }
>    | ignore { $value = false; }
>    ))
>     ;
>
> --peter
>
> 2009/3/16 Gavin Lambert <antlr at mirality.co.nz>
>
>> At 09:09 17/03/2009, Shihwei Li wrote:
>>
>>  Is this related to syntactic predicate? I can sort of understand the idea
>>> behind, but I am not familiar with the syntactic predicate yet. So still
>>> need some help from you.
>>>
>>
>> These are actually semantic predicates.
>>
>>  I tried the tree grammar you provided, and I got compilation errors in
>>> the generated java code, such as
>>>
>>>  if ( ((a)) ) {s = 18;}
>>>  else if ( (true) ) {s = 19;}
>>>
>>> Saying that 'a' is not defined.
>>>
>>
>> Ah, ok; looks like the predicates are being hoisted out of context.  Try
>> removing the => arrows.  I can never remember when one should be used vs.
>> the other :)
>>
>>
>
>


-- 
--peter
http://lishihwei.googlepages.com/home
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/e56dfdd1/attachment.html 

From yimm8369 at hotmail.com  Mon Mar 16 15:28:31 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Tue, 17 Mar 2009 06:28:31 +0800
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
	<e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
Message-ID: <BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl>


 

Michael,

 

 

yes, I am trying to re-write a tree.

 

I leave it blank like:

 

callExpression
 : ^(CALL_EXPRESSION memberExpression indexSuffix *propertyReferenceSuffix* argumentSuffix*)
 {$memberExpression.text.equals("Math.abs")}?    ->mathabs(x={$argumentSuffix.text})
                                                                           -> 

;

 

 

But it seems does not work.

 

Could I ask another question:

 

On page 237 of the antlr book, the translation format is like :

 

callExpression
 : ^(CALL_EXPRESSION memberExpression indexSuffix *propertyReferenceSuffix* argumentSuffix*)
 ->{$memberExpression.text.equals("Math.abs")}?   mathabs(x={$argumentSuffix.text})

;
 

 

using-> before {  } ? 

 

But when I do the same, the error occur, what I can do is put the-> after { }?.

 

I dont know why?

 

 

Thank you very much.

 

Annie

 

 

 

 

 
> Date: Mon, 16 Mar 2009 15:28:53 +1100
> Subject: Re: [antlr-interest] failed predicate problem
> From: michael.bedward at gmail.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> 
> Hi
> 
> You are re-writing an AST ? I ask because your question made it sound
> like you are running actions but the grammar looks like re-writing.
> 
> I was under the impression that you MUST provide an explicit
> alternative for when the predicate is not true.
> 
> So...
> 
> callExpression
> : ^(CALL_EXPRESSION memberExpression indexSuffix *
> propertyReferenceSuffix* argumentSuffix*)
> {$memberExpression.text.equals("Math.abs")}?
> ->mathabs(x={$argumentSuffix.text})
> 
> -> [ alternative re-write (or blank to just drop the node from
> the tree) ]
> ;
> 
> Hope this helps
> Michael

_________________________________________________________________
MSN??????????????????MSN???
http://im.live.cn/safe/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/071c91bc/attachment.html 

From behdad.forghani at samsarasol.com  Mon Mar 16 16:01:20 2009
From: behdad.forghani at samsarasol.com (Behdad Forghani)
Date: Mon, 16 Mar 2009 19:01:20 -0400
Subject: [antlr-interest] Newbie Question
Message-ID: <1237244480.19519.5.camel@behdad-laptop>

Hello,

I am trying to built AST from a rule with an optional part.
The rule is:

type :
	builtinType  constraint?;


I want the constraint node to be the child of builtinType. So, I add:

type :
   builtinType  constraint?->^(builtinType constraint?);

I also tried:

type :
   builtinType ^ constraint?;


But, none of them seem to work. Can you tell me what I am doing wrong?


Thanks


From jimi at temporal-wave.com  Mon Mar 16 16:43:54 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Mar 2009 16:43:54 -0700
Subject: [antlr-interest] Newbie Question
In-Reply-To: <1237244480.19519.5.camel@behdad-laptop>
References: <1237244480.19519.5.camel@behdad-laptop>
Message-ID: <49BEE43A.2000902@temporal-wave.com>

Behdad Forghani wrote:
> Hello,
>
> I am trying to built AST from a rule with an optional part.
> The rule is:
>
> type :
> 	builtinType  constraint?;
>
>
> I want the constraint node to be the child of builtinType. So, I add:
>
> type :
>    builtinType  constraint?->^(builtinType constraint?);
>   
That should be fine, unless the constraint has more than one node 
itself, which I am guessing is your issue. You probably really want an 
imaginary token here:

tokens {
BUILTINTYPE;
}

type :
   builtinType  constraint?->^(BUILTINTYPE builtinType constraint?);

;

Jim

From michael.bedward at gmail.com  Mon Mar 16 17:30:40 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 17 Mar 2009 11:30:40 +1100
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
	<e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
	<BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl>
Message-ID: <e24c4c270903161730h4e1a2effn2dc46284b1718baa@mail.gmail.com>

Hi Annie,

> using-> before {? } ?

Oops, you're quite right.  The arrow should be before the predicate,
not after (although that page in the book is about writing output with
string templates.  For rewriting ASTs you're better off looking at the
wiki pages, for example...

http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
(look for the heading Tree Construction During Tree Parsing)

In your grammar...

callExpression
 : ^(CALL_EXPRESSION memberExpression indexSuffix
*propertyReferenceSuffix* argumentSuffix*)
 ->{$memberExpression.text.equals("Math.abs")}?
mathabs(x={$argumentSuffix.text})
;

what are the asterisks for ?

Michael

From michael.bedward at gmail.com  Mon Mar 16 17:34:03 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 17 Mar 2009 11:34:03 +1100
Subject: [antlr-interest] How can I modify a tree node value according
	to the value of another tree node ?
In-Reply-To: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>
References: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>
Message-ID: <e24c4c270903161734j1422af53p1ac243324a7b7521@mail.gmail.com>

Hi Annie,

One way to pass data between sub-trees is to use global scope.  See
section 4.5 in the ANTLR book.

Hope this helps
Michael



2009/3/17 YINGAnnie <yimm8369 at hotmail.com>:
>
> Hi everyone,
>
>
> What I want to do is to replace var t:Number=Math.ceil(1.5);  to  var
> t:int=int(1.5); The tree I got is something like this:
>
> PROPERTY_DECL (VARIABLE_STATEMENT (VAR_DECL_LIST (VAR_ID_DECL t
> (QUALIFIED_NAME Number)) = (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION
> (...........(QUALIFIED_NAME Math . ceil))) (ARGUMENT_SUFFIX
> (.........(PRIMARY_EXPRESSION 1.5))))
>
> ....... stands for some other nodes.
>
>
> Replacing Math.ceil(1.5) to int(1.5) is easy to implement.But cos Number
> rule and Math.ceil rule belong to different tree, how can I replace Number
> to int when value of the other tree's node equals to Math.ceil?
>
> Thanks in advance!
>
>
> Annie
>
> ________________________________
> ????????????????????? ?????
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From yimm8369 at hotmail.com  Mon Mar 16 17:43:05 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Tue, 17 Mar 2009 08:43:05 +0800
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <e24c4c270903161730h4e1a2effn2dc46284b1718baa@mail.gmail.com>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
	<e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
	<BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl> 
	<e24c4c270903161730h4e1a2effn2dc46284b1718baa@mail.gmail.com>
Message-ID: <BAY122-W489808B0223F7847A5D26ADB980@phx.gbl>


 

Hi Michael,


* ?  ----- Match element one or more times.

 

Does that what you mean?

 

 

Annie

 
> Date: Tue, 17 Mar 2009 11:30:40 +1100
> Subject: Re: [antlr-interest] failed predicate problem
> From: michael.bedward at gmail.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> 
> Hi Annie,
> 
> > using-> before {  } ?
> 
> Oops, you're quite right. The arrow should be before the predicate,
> not after (although that page in the book is about writing output with
> string templates. For rewriting ASTs you're better off looking at the
> wiki pages, for example...
> 
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
> (look for the heading Tree Construction During Tree Parsing)
> 
> In your grammar...
> 
> callExpression
> : ^(CALL_EXPRESSION memberExpression indexSuffix
> *propertyReferenceSuffix* argumentSuffix*)
> ->{$memberExpression.text.equals("Math.abs")}?
> mathabs(x={$argumentSuffix.text})
> ;
> 
> what are the asterisks for ?
> 
> Michael

_________________________________________________________________
Live Search???????????????
http://www.live.com/?scope=video
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/d362d4f6/attachment.html 

From des at deshartman.com  Mon Mar 16 18:51:11 2009
From: des at deshartman.com (Des Hartman)
Date: Tue, 17 Mar 2009 12:51:11 +1100
Subject: [antlr-interest] AST Rewrite & tree filters support using
	ActionScript
Message-ID: <8773d42e0903161851k2259ba4bt94019bb04f3c517@mail.gmail.com>

George

Is AST rewrite and Tree filters supported in ActionScript? I have the
following code, but keep ending up with weird compiled as file. I have
checked as many of the errors as I can, but want to make sure I am not
wasting time with an unsupported feature.

==============================
tree grammar L2ITree;

options {
    language=ActionScript;
    tokenVocab=Formula;
    output=AST;
    ASTLabelType=CommonTree;
    filter=true;
    rewrite=true;
}

@members {
    // This code needs to be implemented in a child class
    public function convertLocalReference(ref:CommonTree):Number {return
null;}

}

reference
    : ^(LREF   lr=NAME) { iref:Number = convertLocalReference($lr);
}         -> ^(IREF [iref])
    ;

=================================================

I have attached the formula grammar.

Output errors are on the following lines of code:

                switch (alt1) {
                    case 1 :
<snip>
                        if ( this.state.backtracking==1 ) {
                           iref:Number = convertLocalReference(lr);
XXXXXXXXXX Implicit coersion of  Number and Class
                        }
<snip>
                        if ( this.state.backtracking==0 ) {
                        retval.tree =
root_0;                                              XXXXXXXXXXXX Property
is Read-only

                        var stream_retval:RewriteRuleSubtreeStream=new
RewriteRuleSubtreeStream(adaptor,"token retval", retval!=null?
retval.tree:null);
<snip>

                            //
C:\\usr\\workspace\\SFXFormula\\src\\com\\wiredlizard\\grammar\\L2ITree.g:39:79:
^( IREF[iref] )
                            {
                            var root_1:CommonTree =
CommonTree(adaptor.nil());
                            root_1 =
CommonTree(adaptor.becomeRoot(CommonTree(adaptor.create(IREF, iref)),
root_1));  XXXXXXXXXXX Access of undefined property iref

                            adaptor.addChild(root_0, root_1);

<snip>
                        retval.tree =
CommonTree(adaptor.rulePostProcessing(root_0));              XXXXXXXXXXXX
Property is Read-only

input.replaceChildren(adaptor.getParent(retval.start),

adaptor.getChildIndex(retval.start),
                                              adaptor.getChildIndex(_last),
                                              retval.tree);}
                        }

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/71c57ac3/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Formula.g
Type: application/octet-stream
Size: 5716 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/71c57ac3/attachment.obj 

From behdad.forghani at samsarasol.com  Mon Mar 16 19:05:39 2009
From: behdad.forghani at samsarasol.com (Behdad Forghani)
Date: Mon, 16 Mar 2009 22:05:39 -0400
Subject: [antlr-interest] Newbie Question
In-Reply-To: <49BEE43A.2000902@temporal-wave.com>
References: <1237244480.19519.5.camel@behdad-laptop>
	<49BEE43A.2000902@temporal-wave.com>
Message-ID: <1237255539.4343.10.camel@behdad-laptop>

Thanks for the help. You are correct, builtinType has more than one
node. I wanted the constraint to be the child of builtinType. I found
that rewriting the rule in this way works:

type :
	builtinType ^ constraint |
	builtinType;

It seems to me the problem was when constraint was empty.

Thanks again.

On Mon, 2009-03-16 at 16:43 -0700, Jim Idle wrote:
> Behdad Forghani wrote:
> > Hello,
> >
> > I am trying to built AST from a rule with an optional part.
> > The rule is:
> >
> > type :
> > 	builtinType  constraint?;
> >
> >
> > I want the constraint node to be the child of builtinType. So, I add:
> >
> > type :
> >    builtinType  constraint?->^(builtinType constraint?);
> >   
> That should be fine, unless the constraint has more than one node 
> itself, which I am guessing is your issue. You probably really want an 
> imaginary token here:
> 
> tokens {
> BUILTINTYPE;
> }
> 
> type :
>    builtinType  constraint?->^(BUILTINTYPE builtinType constraint?);
> 
> ;
> 
> Jim
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From yimm8369 at hotmail.com  Mon Mar 16 19:10:08 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Tue, 17 Mar 2009 10:10:08 +0800
Subject: [antlr-interest] How can I modify a tree node value according
 to the value of another tree node ?
In-Reply-To: <e24c4c270903161734j1422af53p1ac243324a7b7521@mail.gmail.com>
References: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>
	<e24c4c270903161734j1422af53p1ac243324a7b7521@mail.gmail.com>
Message-ID: <BAY122-W16E637B8874E7A282CA158DB980@phx.gbl>


 

I guess that does not work. I use gloable scope as the following grammar to deal with the problem.

 

Suppose my input is "var t:Number=Math.ceil(1.5); ".

 

Here is the grammar for Number,$IDENTIFIER is equal to Number .

 

qualifiedName 
scope math;
    :  IDENTIFIER (DOT IDENTIFIER)*                      {System.out.print("math"+$math::member);}

 

 

 

Here is the grammar for Math.ceil ,$memberExpression is equal to Math.ceil.

 

callExpression 
scope math;
    :   memberExpression (indexSuffix |propertyReferenceSuffix|argumentSuffix )*  {$math::member=$memberExpression.text;System.out.print("math"+$math::member);}       
  ;

 

In callExpression, I give gloable variable the value of $memberExpression.text, and in qualifiedName , I want to print the value of $memberExpression.text.

But Number and Math.ceil are in the different tree and the parser will parse Number before Math.ceil, therefore, when in the grammar of callExpression , the $math::member should not have the value of $memberExpression.text.

 

And the result is as I expect , it is "math null".

 

How to solve this? How can the parser go back to make some changes?

 

Thanks,

 

Annie


 

 

 

 


 
> Date: Tue, 17 Mar 2009 11:34:03 +1100
> Subject: Re: [antlr-interest] How can I modify a tree node value according to the value of another tree node ?
> From: michael.bedward at gmail.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> 
> Hi Annie,
> 
> One way to pass data between sub-trees is to use global scope. See
> section 4.5 in the ANTLR book.
> 
> Hope this helps
> Michael
> 
> 
> 
> 2009/3/17 YINGAnnie <yimm8369 at hotmail.com>:
> >
> > Hi everyone,
> >
> >
> > What I want to do is to replace var t:Number=Math.ceil(1.5); to var
> > t:int=int(1.5); The tree I got is something like this:
> >
> > PROPERTY_DECL (VARIABLE_STATEMENT (VAR_DECL_LIST (VAR_ID_DECL t
> > (QUALIFIED_NAME Number)) = (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION
> > (...........(QUALIFIED_NAME Math . ceil))) (ARGUMENT_SUFFIX
> > (.........(PRIMARY_EXPRESSION 1.5))))
> >
> > ....... stands for some other nodes.
> >
> >
> > Replacing Math.ceil(1.5) to int(1.5) is easy to implement.But cos Number
> > rule and Math.ceil rule belong to different tree, how can I replace Number
> > to int when value of the other tree's node equals to Math.ceil?
> >
> > Thanks in advance!
> >
> >
> > Annie
> >
> > ________________________________
> > ????????????????????? ?????
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/49d0ebe5/attachment.html 

From michael.bedward at gmail.com  Mon Mar 16 19:13:18 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 17 Mar 2009 13:13:18 +1100
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <BAY122-W489808B0223F7847A5D26ADB980@phx.gbl>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
	<e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
	<BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl>
	<e24c4c270903161730h4e1a2effn2dc46284b1718baa@mail.gmail.com>
	<BAY122-W489808B0223F7847A5D26ADB980@phx.gbl>
Message-ID: <e24c4c270903161913wa9dd703gf46ac572b2c74723@mail.gmail.com>

> *??? ----- Match element one or more times.
>
> Does that what you mean?

I just hadn't seen an asterisk in front of a rule or token name before...

*propertyReferenceSuffix* argumentSuffix*)
^
This one.

It's probably just an email text thing - sorry to go off an a tangent :-)

Michael

From michael.bedward at gmail.com  Mon Mar 16 19:37:32 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 17 Mar 2009 13:37:32 +1100
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <BAY122-W322C420430CF0079FCAA9DB980@phx.gbl>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
	<e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
	<BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl>
	<e24c4c270903161730h4e1a2effn2dc46284b1718baa@mail.gmail.com>
	<BAY122-W489808B0223F7847A5D26ADB980@phx.gbl>
	<e24c4c270903161913wa9dd703gf46ac572b2c74723@mail.gmail.com>
	<BAY122-W322C420430CF0079FCAA9DB980@phx.gbl>
Message-ID: <e24c4c270903161937g7cd092aaub1a0d89a562acc19@mail.gmail.com>

So back to your rule...

callExpression
 : ^(CALL_EXPRESSION memberExpression indexSuffix*
propertyReferenceSuffix* argumentSuffix*)
 -> {$memberExpression.text.equals("Math.abs")}?
mathabs(x={$argumentSuffix.text})
 ->  /* discard rule */
;

You want to rewrite the node if memberExpression is "Math.abs" but
your specification of the new node

mathabs(x={$argumentSuffix.text})

...doesn't look right.  It seems to have action syntax mixed up in it.
 Shouldn't it be something like:

^(mathabs $argumentSuffix.text)

where mathabs is a rule already defined in your grammar.  Or, it not
already defined then something like:

^(MATHABS $argumentSuffix.text)

where MATHABS appears in the tokens section of your tree rewriting grammar.

As an example, I have a tree grammar with this rewrite statement in it...
expr:         ^(FUNC_CALL id=ID expr_list)
                  -> {isPosFunc($id.text)}?
IMAGE_POS_LOOKUP[getProxyVar($id.text)]
                  -> {isInfoFunc($id.text)}?
IMAGE_INFO_LOOKUP[getProxyVar($id.text)]
                  -> ^(FUNC_CALL ID expr_list)

where isPosFunc(), isInfoFunc() and getProxyVar are simple methods
defined in the members section of this grammar (just to keep the
grammar a little more readable).

I hope I'm answering the right question !

Michael

From yimm8369 at hotmail.com  Mon Mar 16 20:18:39 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Tue, 17 Mar 2009 11:18:39 +0800
Subject: [antlr-interest] How to do java refactoring using stringtemplate
Message-ID: <BAY122-W2687C959BF1AE4EBAA8E42DB980@phx.gbl>


 

 

Hi everyone,

 

I want to do the java refactoring, now , I finished the java.g and javatree.g.  I am not quite sure what should I do next.

 

I read Terence Parr's  Language Translation Using ANTLR and StringTemplate  http://www.codegeneration.net/tiki-read_article.php?articleId=77.

 

Cos refactioring is not like Language Translation, only a small part of the code need to be changed, like chang for loop to while loop. Therefore, my question is:

 

Do I need to change every rules in java.g like form 1 to 2,change the output=template, and write the related java.stg including all the template?

 

1.

program 

    :   (declaration)+
    ;

 

2.

program returns [StringTemplate code=template("program")]
    :   (declaration[code])+
    ;

 

In that way, my javatree.g is useless, right?

 

I am totally lost.

 

Thanks in advance.

 

 

Annie

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/628a4ce7/attachment.html 

From george.scott at gmail.com  Mon Mar 16 20:21:00 2009
From: george.scott at gmail.com (George Scott)
Date: Mon, 16 Mar 2009 20:21:00 -0700
Subject: [antlr-interest] AST Rewrite & tree filters support using
	ActionScript
In-Reply-To: <8773d42e0903161851k2259ba4bt94019bb04f3c517@mail.gmail.com>
References: <8773d42e0903161851k2259ba4bt94019bb04f3c517@mail.gmail.com>
Message-ID: <5d9afe010903162021y2e0e04e9ma6a8598462e179c1@mail.gmail.com>

Des,
Tree rewrites and filters should work.  I think the only problem is you are
missing a "var" declaration in your rule when you declare iref.  Also, you
will get a runtime error if you try to pass in a Number to construct a token
type.  You must use the "int" type, so you should change your
iref declaration to be int and the return type of your function as well.
 For example:

@members {
    // This code needs to be implemented in a child class
    public function convertLocalReference(ref:CommonTree):int {return
TokenConstants.INVALID_TOKEN_TYPE;}

}

reference
    : ^(LREF   lr=NAME) { var iref:int = convertLocalReference($lr);
}         -> ^(IREF [iref])
    ;

If you are not doing any processing in your convertLocalReference() function
then you can simplify futher to:

reference
    : ^(LREF   lr=NAME) -> ^(IREF [$lr.type])
    ;


On Mon, Mar 16, 2009 at 6:51 PM, Des Hartman <des at deshartman.com> wrote:

> George
>
> Is AST rewrite and Tree filters supported in ActionScript? I have the
> following code, but keep ending up with weird compiled as file. I have
> checked as many of the errors as I can, but want to make sure I am not
> wasting time with an unsupported feature.
>
> ==============================
> tree grammar L2ITree;
>
> options {
>     language=ActionScript;
>     tokenVocab=Formula;
>     output=AST;
>     ASTLabelType=CommonTree;
>     filter=true;
>     rewrite=true;
> }
>
> @members {
>     // This code needs to be implemented in a child class
>     public function convertLocalReference(ref:CommonTree):Number {return
> null;}
>
> }
>
> reference
>     : ^(LREF   lr=NAME) { iref:Number = convertLocalReference($lr);
> }         -> ^(IREF [iref])
>     ;
>
> =================================================
>
> I have attached the formula grammar.
>
> Output errors are on the following lines of code:
>
>                 switch (alt1) {
>                     case 1 :
> <snip>
>                         if ( this.state.backtracking==1 ) {
>                            iref:Number = convertLocalReference(lr);
> XXXXXXXXXX Implicit coersion of  Number and Class
>                         }
> <snip>
>                         if ( this.state.backtracking==0 ) {
>                         retval.tree =
> root_0;                                              XXXXXXXXXXXX Property
> is Read-only
>
>                         var stream_retval:RewriteRuleSubtreeStream=new
> RewriteRuleSubtreeStream(adaptor,"token retval", retval!=null?
> retval.tree:null);
> <snip>
>
>                             //
> C:\\usr\\workspace\\SFXFormula\\src\\com\\wiredlizard\\grammar\\L2ITree.g:39:79:
> ^( IREF[iref] )
>                             {
>                             var root_1:CommonTree =
> CommonTree(adaptor.nil());
>                             root_1 =
> CommonTree(adaptor.becomeRoot(CommonTree(adaptor.create(IREF, iref)),
> root_1));  XXXXXXXXXXX Access of undefined property iref
>
>                             adaptor.addChild(root_0, root_1);
>
> <snip>
>                         retval.tree =
> CommonTree(adaptor.rulePostProcessing(root_0));              XXXXXXXXXXXX
> Property is Read-only
>
> input.replaceChildren(adaptor.getParent(retval.start),
>
> adaptor.getChildIndex(retval.start),
>                                               adaptor.getChildIndex(_last),
>                                               retval.tree);}
>                         }
>
> Thanks
> Des
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090316/6a75ddd5/attachment.html 

From des at deshartman.com  Mon Mar 16 21:13:26 2009
From: des at deshartman.com (Des)
Date: Tue, 17 Mar 2009 15:13:26 +1100
Subject: [antlr-interest] AST Rewrite & tree filters support using
	ActionScript
In-Reply-To: <5d9afe010903162021y2e0e04e9ma6a8598462e179c1@mail.gmail.com>
References: <8773d42e0903161851k2259ba4bt94019bb04f3c517@mail.gmail.com>
	<5d9afe010903162021y2e0e04e9ma6a8598462e179c1@mail.gmail.com>
Message-ID: <71CF5FFF-1CB8-4AC9-AD14-DEBEFC006EDE@deshartman.com>

As alqays thanks for the quick reply. I'll implement your suggestions  
and see how it goes.

Thanks
Des Hartman
+614 01 277 115
iPhone junky

On 17/03/2009, at 14:21, George Scott <george.scott at gmail.com> wrote:

> Des,
>
> Tree rewrites and filters should work.  I think the only problem is  
> you are missing a "var" declaration in your rule when you declare  
> iref.  Also, you will get a runtime error if you try to pass in a  
> Number to construct a token type.  You must use the "int" type, so  
> you should change your iref declaration to be int and the return  
> type of your function as well.  For example:
>
> @members {
>     // This code needs to be implemented in a child class
>     public function convertLocalReference(ref:CommonTree):int  
> {return TokenConstants.INVALID_TOKEN_TYPE;}
>
> }
>
> reference
>     : ^(LREF   lr=NAME) { var iref:int =  
> convertLocalReference($lr); }         -> ^(IREF [iref])
>     ;
>
> If you are not doing any processing in your convertLocalReference()  
> function then you can simplify futher to:
>
> reference
>     : ^(LREF   lr=NAME) -> ^(IREF [$lr.type])
>     ;
>
>
> On Mon, Mar 16, 2009 at 6:51 PM, Des Hartman <des at deshartman.com>  
> wrote:
> George
>
> Is AST rewrite and Tree filters supported in ActionScript? I have  
> the following code, but keep ending up with weird compiled as file.  
> I have checked as many of the errors as I can, but want to make sure  
> I am not wasting time with an unsupported feature.
>
> ==============================
> tree grammar L2ITree;
>
> options {
>     language=ActionScript;
>     tokenVocab=Formula;
>     output=AST;
>     ASTLabelType=CommonTree;
>     filter=true;
>     rewrite=true;
> }
>
> @members {
>     // This code needs to be implemented in a child class
>     public function convertLocalReference(ref:CommonTree):Number  
> {return null;}
>
> }
>
> reference
>     : ^(LREF   lr=NAME) { iref:Number =  
> convertLocalReference($lr); }         -> ^(IREF [iref])
>     ;
>
> =================================================
>
> I have attached the formula grammar.
>
> Output errors are on the following lines of code:
>
>                 switch (alt1) {
>                     case 1 :
> <snip>
>                         if ( this.state.backtracking==1 ) {
>                            iref:Number =  
> convertLocalReference(lr);    XXXXXXXXXX Implicit coersion of   
> Number and Class
>                         }
> <snip>
>                         if ( this.state.backtracking==0 ) {
>                         retval.tree =  
> root_0;                                              XXXXXXXXXXXX  
> Property is Read-only
>
>                         var  
> stream_retval:RewriteRuleSubtreeStream=new  
> RewriteRuleSubtreeStream(adaptor,"token retval", retval!=null?  
> retval.tree:null);
> <snip>
>
>                             // C:\\usr\\workspace\\SFXFormula\\src\ 
> \com\\wiredlizard\\grammar\\L2ITree.g:39:79: ^( IREF[iref] )
>                             {
>                             var root_1:CommonTree =  
> CommonTree(adaptor.nil());
>                             root_1 =  
> CommonTree(adaptor.becomeRoot(CommonTree(adaptor.create(IREF,  
> iref)), root_1));  XXXXXXXXXXX Access of undefined property iref
>
>                             adaptor.addChild(root_0, root_1);
>
> <snip>
>                         retval.tree =  
> CommonTree(adaptor.rulePostProcessing(root_0));               
> XXXXXXXXXXXX Property is Read-only
>                          
> input.replaceChildren(adaptor.getParent(retval.start),
>                                                
> adaptor.getChildIndex(retval.start),
>                                                
> adaptor.getChildIndex(_last),
>                                               retval.tree);}
>                         }
>
> Thanks
> Des
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/f816ba53/attachment.html 

From jaluber at gmx.de  Mon Mar 16 23:37:41 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 17 Mar 2009 07:37:41 +0100
Subject: [antlr-interest] How can I modify a tree node value according
 to the value of another tree node ?
In-Reply-To: <BAY122-W16E637B8874E7A282CA158DB980@phx.gbl>
References: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>	<e24c4c270903161734j1422af53p1ac243324a7b7521@mail.gmail.com>
	<BAY122-W16E637B8874E7A282CA158DB980@phx.gbl>
Message-ID: <49BF4535.30002@gmx.de>

YINGAnnie schrieb:
>  
> I guess that does not work. I use gloable scope as the following grammar
> to deal with the problem.
>  
> Suppose my input is "var t:Number=Math.ceil(1.5); ".
>  
> Here is the grammar for Number,$IDENTIFIER is equal to Number .
>  
> /qualifiedName
> scope math;
>     :  IDENTIFIER (DOT IDENTIFIER)*                     
> {System.out.print("math"+$math::member);}/
>  
>  
>  
> Here is the grammar for Math.ceil ,$memberExpression is equal to Math.ceil.
>  
> callExpression
> scope math;
>     :   memberExpression (indexSuffix
> |propertyReferenceSuffix|argumentSuffix )* 
> {$math::member=$memberExpression.text;System.out.print("math"+$math::member);}       
>   ;
>  
> In callExpression, I give gloable variable the value of
> $memberExpression.text, and in qualifiedName , I want to print the value
> of $memberExpression.text.
> 
> But Number and Math.ceil are in the different tree and the parser will
> parse Number before Math.ceil, therefore, when in the grammar of
> callExpression , the $math::member should not have the value of
> $memberExpression.text.
>  
> And the result is as I expect , it is "math null".

Do I understand you correctly that Math.ceil will always be evaluated
after Number? Then it isn't surprising that the above won't simply work.
They are three ways to solve this problem. Either you scan the input for
Math.ceil, when encounter Number. As this has to do be done manually,
this is a lot of work - and may even require to call a lexer and parser
manually within parsing the current input. Complicated.

Easier may be to resolve this issue backwards. You create a variable in
Number and fill it in Math.ceil. This requires that the variable won't
be evaluated until Math.ceil has been parsed. I'm not sure when the ST
output is generated so this solution may not be viable.

The last approach is to use a two-pass approach. Create in the first
pass an AST and store the required value. Then create in the second pass
the ST output and access the stored value.

Johannes
>  
> How to solve this? How can the parser go back to make some changes?
>  
> Thanks,
>  
> Annie
> 
>  
>  
>  
>  
> 
>  
>> Date: Tue, 17 Mar 2009 11:34:03 +1100
>> Subject: Re: [antlr-interest] How can I modify a tree node value
> according to the value of another tree node ?
>> From: michael.bedward at gmail.com
>> To: yimm8369 at hotmail.com
>> CC: antlr-interest at antlr.org
>>
>> Hi Annie,
>>
>> One way to pass data between sub-trees is to use global scope. See
>> section 4.5 in the ANTLR book.
>>
>> Hope this helps
>> Michael
>>
>>
>>
>> 2009/3/17 YINGAnnie <yimm8369 at hotmail.com>:
>> >
>> > Hi everyone,
>> >
>> >
>> > What I want to do is to replace var t:Number=Math.ceil(1.5); to var
>> > t:int=int(1.5); The tree I got is something like this:
>> >
>> > PROPERTY_DECL (VARIABLE_STATEMENT (VAR_DECL_LIST (VAR_ID_DECL t
>> > (QUALIFIED_NAME Number)) = (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION
>> > (...........(QUALI FIED_NAME Math . ceil))) (ARGUMENT_SUFFIX
>> > (.........(PRIMARY_EXPRESSION 1.5))))
>> >
>> > ....... stands for some other nodes.
>> >
>> >
>> > Replacing Math.ceil(1.5) to int(1.5) is easy to implement.But cos Number
>> > rule and Math.ceil rule belong to different tree, how can I replace
> Number
>> > to int when value of the other tree's node equals to Math.ceil?
>> >
>> > Thanks in advance!
>> >
>> >
>> > Annie
>> >
>> > ________________________________
>> > ????????????????????? ?????
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
> 
> ------------------------------------------------------------------------
> ???? MSN ?????? MSN ????? ??????
> <http://im.live.cn/safe/>
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From michael.bedward at gmail.com  Mon Mar 16 23:42:21 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 17 Mar 2009 17:42:21 +1100
Subject: [antlr-interest] failed predicate problem
In-Reply-To: <BAY122-W47166C086A9A7B2C91ACC2DB980@phx.gbl>
References: <BAY122-W3303387954C17995FEBC10DB9B0@phx.gbl>
	<e24c4c270903152128o2705211le1e291062a435227@mail.gmail.com>
	<BAY122-W6E145B16D1CEA831B171BDB9B0@phx.gbl>
	<e24c4c270903161730h4e1a2effn2dc46284b1718baa@mail.gmail.com>
	<BAY122-W489808B0223F7847A5D26ADB980@phx.gbl>
	<e24c4c270903161913wa9dd703gf46ac572b2c74723@mail.gmail.com>
	<BAY122-W322C420430CF0079FCAA9DB980@phx.gbl>
	<e24c4c270903161937g7cd092aaub1a0d89a562acc19@mail.gmail.com>
	<BAY122-W47166C086A9A7B2C91ACC2DB980@phx.gbl>
Message-ID: <e24c4c270903162342ree31e4fq4b550564a98d4568@mail.gmail.com>

Hi Annie,

Sorry for the confusion on my part.  I haven't used StringTemplate yet
and so went off in the wrong direction...

But luckily, I see that Johannes has proposed a solution for you on
the other thread about your question.

Michael

From des at deshartman.com  Tue Mar 17 01:42:36 2009
From: des at deshartman.com (Des)
Date: Tue, 17 Mar 2009 21:42:36 +1300
Subject: [antlr-interest] AST Rewrite & tree filters support using
	ActionScript
In-Reply-To: <5d9afe010903162021y2e0e04e9ma6a8598462e179c1@mail.gmail.com>
References: <8773d42e0903161851k2259ba4bt94019bb04f3c517@mail.gmail.com>
	<5d9afe010903162021y2e0e04e9ma6a8598462e179c1@mail.gmail.com>
Message-ID: <01497BB6-DFFB-4CC1-BC91-FBF858951BEE@deshartman.com>

George

Got the variable errors sorted out, but still having issues with the  
read only return retval.tree

Could you have a look at it, as I think it is in the code generated?

Thanks
Des

On 17/03/2009, at 16:21, George Scott <george.scott at gmail.com> wrote:

> Des,
>
> Tree rewrites and filters should work.  I think the only problem is  
> you are missing a "var" declaration in your rule when you declare  
> iref.  Also, you will get a runtime error if you try to pass in a  
> Number to construct a token type.  You must use the "int" type, so  
> you should change your iref declaration to be int and the return  
> type of your function as well.  For example:
>
> @members {
>     // This code needs to be implemented in a child class
>     public function convertLocalReference(ref:CommonTree):int  
> {return TokenConstants.INVALID_TOKEN_TYPE;}
>
> }
>
> reference
>     : ^(LREF   lr=NAME) { var iref:int =  
> convertLocalReference($lr); }         -> ^(IREF [iref])
>     ;
>
> If you are not doing any processing in your convertLocalReference()  
> function then you can simplify futher to:
>
> reference
>     : ^(LREF   lr=NAME) -> ^(IREF [$lr.type])
>     ;
>
>
> On Mon, Mar 16, 2009 at 6:51 PM, Des Hartman <des at deshartman.com>  
> wrote:
> George
>
> Is AST rewrite and Tree filters supported in ActionScript? I have  
> the following code, but keep ending up with weird compiled as file.  
> I have checked as many of the errors as I can, but want to make sure  
> I am not wasting time with an unsupported feature.
>
> ==============================
> tree grammar L2ITree;
>
> options {
>     language=ActionScript;
>     tokenVocab=Formula;
>     output=AST;
>     ASTLabelType=CommonTree;
>     filter=true;
>     rewrite=true;
> }
>
> @members {
>     // This code needs to be implemented in a child class
>     public function convertLocalReference(ref:CommonTree):Number  
> {return null;}
>
> }
>
> reference
>     : ^(LREF   lr=NAME) { iref:Number =  
> convertLocalReference($lr); }         -> ^(IREF [iref])
>     ;
>
> =================================================
>
> I have attached the formula grammar.
>
> Output errors are on the following lines of code:
>
>                 switch (alt1) {
>                     case 1 :
> <snip>
>                         if ( this.state.backtracking==1 ) {
>                            iref:Number =  
> convertLocalReference(lr);    XXXXXXXXXX Implicit coersion of   
> Number and Class
>                         }
> <snip>
>                         if ( this.state.backtracking==0 ) {
>                         retval.tree =  
> root_0;                                              XXXXXXXXXXXX  
> Property is Read-only
>
>                         var  
> stream_retval:RewriteRuleSubtreeStream=new  
> RewriteRuleSubtreeStream(adaptor,"token retval", retval!=null?  
> retval.tree:null);
> <snip>
>
>                             // C:\\usr\\workspace\\SFXFormula\\src\ 
> \com\\wiredlizard\\grammar\\L2ITree.g:39:79: ^( IREF[iref] )
>                             {
>                             var root_1:CommonTree =  
> CommonTree(adaptor.nil());
>                             root_1 =  
> CommonTree(adaptor.becomeRoot(CommonTree(adaptor.create(IREF,  
> iref)), root_1));  XXXXXXXXXXX Access of undefined property iref
>
>                             adaptor.addChild(root_0, root_1);
>
> <snip>
>                         retval.tree =  
> CommonTree(adaptor.rulePostProcessing(root_0));               
> XXXXXXXXXXXX Property is Read-only
>                          
> input.replaceChildren(adaptor.getParent(retval.start),
>                                                
> adaptor.getChildIndex(retval.start),
>                                                
> adaptor.getChildIndex(_last),
>                                               retval.tree);}
>                         }
>
> Thanks
> Des
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/a9653ca1/attachment.html 

From javadev111 at gmail.com  Tue Mar 17 03:56:18 2009
From: javadev111 at gmail.com (Java Developer)
Date: Tue, 17 Mar 2009 06:56:18 -0400
Subject: [antlr-interest] errors reported in console
Message-ID: <80576ef0903170356m662273bdxe208a7a8826fa24@mail.gmail.com>

My example grammar file is shown below (end). I am using ANTLRWorks 1.2.3.
When I enter "bab be baj" in the interpreter, I see the parse tree
correctly. However, I see also that there are errors reported in the
console. When I look at the console, I see the output below. What does this
mean? Is this a problem with my grammar?

[06:41:35] error(208): test.g:24:1: The following token definitions can
never be matched because prior tokens match the same input: SECOND
[06:41:35] Interpreting...
[06:41:35] problem matching token at 1:4 NoViableAltException(' '@[1:1:
Tokens : ( CODE | FIRST | SECOND | THIRD );])
[06:41:35] problem matching token at 1:7 NoViableAltException(' '@[1:1:
Tokens : ( CODE | FIRST | SECOND | THIRD );])

//GRAMMAR FILE
grammar test;

//http://www.antlr.org/wiki/display/ANTLR3/Grammar+options
options {
    language=Java;
    output=AST;
        ASTLabelType=CommonTree;
}

//http://www.antlr.org/wiki/display/ANTLR3/Grammars
@header {
package com.test.parser.antlr;
}

@lexer::header {
package com.test.parser.antlr;
}

expr    :    (CODE)+;
CODE:    (FIRST)? SECOND (THIRD)?;

FIRST:
    ('b');
SECOND:
    ('a'|'e'|'i'|'o'|'u');
THIRD:
    ('b'|'j'|'v'|'g'|'s'|'m'|'d');
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/ebce37b0/attachment.html 

From antlr at mirality.co.nz  Tue Mar 17 04:44:22 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 18 Mar 2009 00:44:22 +1300
Subject: [antlr-interest] errors reported in console
In-Reply-To: <80576ef0903170356m662273bdxe208a7a8826fa24@mail.gmail.com>
References: <80576ef0903170356m662273bdxe208a7a8826fa24@mail.gmail.com>
Message-ID: <20090317114449.A859B341844A@www.antlr.org>

At 23:56 17/03/2009, Java Developer wrote:
>My example grammar file is shown below (end). I am using 
>ANTLRWorks 1.2.3. When I enter "bab be baj" in the interpreter, I 
>see the parse tree correctly. However, I see also that there are 
>errors reported in the console. When I look at the console, I see 
>the output below. What does this mean? Is this a problem with my 
>grammar?
>
>[06:41:35] error(208): test.g:24:1: The following token 
>definitions can never be matched because prior tokens match the 
>same input: SECOND
[...]
>CODE:    (FIRST)? SECOND (THIRD)?;
>
>FIRST:
>     ('b');
>SECOND:
>     ('a'|'e'|'i'|'o'|'u');
>THIRD:
>     ('b'|'j'|'v'|'g'|'s'|'m'|'d');

The problem is that all of these rules are top-level rules, and 
thus considered equal candidates for token generation.  Since CODE 
completely contains SECOND, there is no possible way for a SECOND 
token to be generated -- it will always come out as a CODE instead 
(since in the event of a tie for longest-match, rules listed first 
win).

To get the behaviour you probably intended, you need to change 
FIRST, SECOND, and THIRD to be fragment rules instead of top-level 
rules.

(If you're new to ANTLR: another key point you might be missing is 
that lexing stands alone.  The lexer runs in an initial pass by 
itself without any influence from parser rules.)

>[06:41:35] Interpreting...

Avoid using the interpreter.  It's ok on very simple grammars but 
once you get past trivial complexity it will mislead you.  Write 
proper unit tests instead, and use ANTLRWorks' debug mode.


From javadev111 at gmail.com  Tue Mar 17 05:05:41 2009
From: javadev111 at gmail.com (Java Developer)
Date: Tue, 17 Mar 2009 08:05:41 -0400
Subject: [antlr-interest] errors reported in console
In-Reply-To: <49bf8d24.020bca0a.0a08.0b6fSMTPIN_ADDED@mx.google.com>
References: <80576ef0903170356m662273bdxe208a7a8826fa24@mail.gmail.com>
	<49bf8d24.020bca0a.0a08.0b6fSMTPIN_ADDED@mx.google.com>
Message-ID: <80576ef0903170505m7c5554f8if8a7dac8ba571a6@mail.gmail.com>

Thanks for the response. I am new to ANTLR (book is on its way).

The problem is that all of these rules are top-level rules, and thus
> considered equal candidates for token generation.  Since CODE completely
> contains SECOND, there is no possible way for a SECOND token to be generated
> -- it will always come out as a CODE instead (since in the event of a tie
> for longest-match, rules listed first win).
>
> To get the behaviour you probably intended, you need to change FIRST,
> SECOND, and THIRD to be fragment rules instead of top-level rules.
>

Could you refer me to a link explaining fragment rules versus top-level
rules (I find the Wiki pages confusing)? A keyword search on google did not
help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/0a9cb947/attachment.html 

From gabriel.petrovay at 28msec.com  Tue Mar 17 07:54:30 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 17 Mar 2009 15:54:30 +0100
Subject: [antlr-interest] Convert token position from line+column (index in
	line) to absolute source indexes
In-Reply-To: <dc6ce1e40903170752p4e0f6000n9e6a284116de260@mail.gmail.com>
References: <dc6ce1e40903170752p4e0f6000n9e6a284116de260@mail.gmail.com>
Message-ID: <dc6ce1e40903170754y4cc12c0cw4141e1cdd30d2125@mail.gmail.com>

Hi all,

Does anybody have any idea, a working solution or an example of how could I
convert the token positions from (line, column) pair to absolute indexes in
the input stream (indexStart, indexEnd)

Or, are there any ways to do this from the lexer without hacking it (change
the Java code generation). I am thinking about helper clases/functions to do
this or if I can some tell the Lexer to use some extended token
(MyCommonToken) that somehow (I don't know yet how) adds this functionality.

Thanks!

Regards,
Gabriel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/71db8109/attachment.html 

From jimi at temporal-wave.com  Tue Mar 17 08:16:21 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Mar 2009 08:16:21 -0700
Subject: [antlr-interest] Convert token position from line+column (index
 in	line) to absolute source indexes
In-Reply-To: <dc6ce1e40903170754y4cc12c0cw4141e1cdd30d2125@mail.gmail.com>
References: <dc6ce1e40903170752p4e0f6000n9e6a284116de260@mail.gmail.com>
	<dc6ce1e40903170754y4cc12c0cw4141e1cdd30d2125@mail.gmail.com>
Message-ID: <49BFBEC5.1040203@temporal-wave.com>

Gabriel Petrovay wrote:
> Hi all,
>
> Does anybody have any idea, a working solution or an example of how 
> could I convert the token positions from (line, column) pair to 
> absolute indexes in the input stream (indexStart, indexEnd)
>
> Or, are there any ways to do this from the lexer without hacking it 
> (change the Java code generation). I am thinking about helper 
> clases/functions to do this or if I can some tell the Lexer to use 
> some extended token (MyCommonToken) that somehow (I don't know yet 
> how) adds this functionality.
This information is part of the standard CommonToken, but don't forget 
that in the lexer rules you are still forming some of this information, 
so some references are only good for fragment calls and so on. Look at 
the values of $start, $stop, $pos, etc.

For CommonToken itself you can use getStartIndex() and getStopIndex(), 
as you can see from the implementation of getText().

Jim



From egesuato at ibc.it  Tue Mar 17 09:56:47 2009
From: egesuato at ibc.it (Gesuato Emanuele)
Date: Tue, 17 Mar 2009 17:56:47 +0100
Subject: [antlr-interest] Escaping quotes in a lexer
Message-ID: <20090317165647.68266f38@mail.ibc.it>

Hi there,

I'm quite new to the antlr world so my question could  be obvious. I'm using antlr 2.7.6 in java 5 for generating a lexer  class. In this lexer (written by an ex-collegue) i'm trying to resolve  string like

Invoice.customer='Tom'

to build an hibernate restriction.

I would like to use the ' character inside the string something similar to:

Invoice.customer='Tom L\'oreal' 
or (better)
Invoice.customer="Tom L'oreal" 
  
I've got the String definition for such fields that is the following:
STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";
where:
protected CIFRA        : '0'..'9';
protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
protected INTEGER    : (CIFRA)+;

and i've tried to use:
STRING : (" ' "((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)" ' ") | (' " '((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)' " ');

(added spaces for more clarity) but it does recognize the string
"Tom L'oreal". The java class created is no different from the previous one.

Here is the original full grammar:
*************************
header{
package it.ibc.jstore.util.parser;
}

// Lexer ********************************************
{import it.ibc.jstore.base.Log;}
class RestrictionsLexer extends Lexer;

options { k=4; }

WHITESPACE    : (' '
            | '\t'
            | '\r' '\n' { newline(); }
            | '\n'      { newline(); }
            ) { $setType(Token.SKIP); }
            ;

protected SPAZIO    : ' ';
protected CIFRA        : '0'..'9';
protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
protected INTEGER    : (CIFRA)+;
protected LONG        : INTEGER('L'|'l');
protected LIKE        : ("LIKE"|"like"|"Like");
protected OR        : ("OR"|"or"|"Or");
protected AND        : ("AND"|"and"|"And");
protected IN        : ("IN"|"in"|"In");




UGUALE            : "=";
DIVERSO            : "<>";
MAGGIORE        : '>';
MINORE            : '<';
MAGGIOREUGUALE    : ">=";
MINOREUGUALE    : "<=";
JOLLY            : "*";
LPAREN            : '(';
RPAREN            : ')';
SEPARATORE        : ('/');
VIRGOLA            : ",";
NUMERO : (LONG) => LONG { $setType(LONG); }
     | INTEGER { $setType(INTEGER); }
     ;
STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'"
CAMPO : (LIKE) => LIKE { $setType(LIKE); }
    | (OR) => OR { $setType(OR); }
    | (AND) => AND { $setType(AND); }
    | (IN) => IN { $setType(IN); }
    | PAROLA { $setType(CAMPO); }
    ;

// Parser *******************************************
class RestrictionsParser extends Parser;
options { buildAST=true; }

valore     : STRING | LONG | INTEGER;
expr     : LPAREN^ orExpr RPAREN! ;
orExpr   : andExpr ((OR^) andExpr)* ;
andExpr  : relExpr ((AND^) relExpr)* ;
relExpr  : atom (((UGUALE^|DIVERSO^|MAGGIORE^|MINORE^|MINOREUGUALE^|MAGGIOREUGUALE^|LIKE^) rparm) | (IN^ list))* ;
atom     : CAMPO | expr ;
rparm    : atom | valore ;
list     : LPAREN! valore (VIRGOLA^ valore)* RPAREN! ;


// Parser dell'albero *******************************
{
import it.ibc.jstore.data.Restrictions;
import it.ibc.jstore.data.MatchMode;
import java.util.List;
import java.util.ArrayList;
}
class RestrictionsTreeWalker extends TreeParser;

// Elemento base (un campo, un intero..)
base returns [Object s]
    { s=null; }
    : i:CAMPO { s=i.getText(); }
    | j:INTEGER { s=Integer.valueOf(j.getText()); }
    | k:LONG { int lunghezza=k.getText().length(); s=Long.valueOf(k.getText().substring(0,lunghezza-1)); }
    | l:STRING { int lunghezza=l.getText().length(); s=l.getText().substring(1,lunghezza-1); }
    ;

campo returns [String s]
    { s=null; }
    : i:CAMPO { s=i.getText(); }
    ;

stringa returns [String s]
    { s=null; }
    : l:STRING { int lunghezza=l.getText().length(); s=l.getText().substring(1,lunghezza-1); }
    ;
    
lista returns [List l]
    { l=new ArrayList(); List t,v; Object a; }
    : #(VIRGOLA v=lista t=lista) { l.addAll(v); l.addAll(t); } // Una lista e' un'elenco di liste separate da virgola
    | a=base { l.add(a); } // E questo e' l'elemento base della lista
    ;

expr returns [Restrictions r]
  { Object a,b; Restrictions t,v; r=new Restrictions(); }
  : #(UGUALE a=base b=base) { r.eq((String)a,b); }
  | #(DIVERSO a=base b=base) { r.ne((String)a,b); }
  | #(MINOREUGUALE a=base b=base) { r.le((String)a,b); }
  | #(MAGGIOREUGUALE a=base b=base) { r.ge((String)a,b); }
  | #(MINORE a=base b=base) { r.lt((String)a,b); }
  | #(MAGGIORE a=base b=base) { r.gt((String)a,b); }
  | #(LIKE a=campo b=stringa) { r.ilike((String)a,(String)b, MatchMode.GUESS); }
  | #(IN a=campo b=lista) { r.in((String)a,(List)b); }
  | #(AND t=expr v=expr) {r.and(t,v);}
  | #(OR t=expr v=expr) {r.or(t,v);}
  | #(LPAREN t=expr) { r=t; }
  ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/db5049c9/attachment.html 

From mattkiehl at tu-cottbus.de  Tue Mar 17 10:09:09 2009
From: mattkiehl at tu-cottbus.de (Matthias Kiehl)
Date: Tue, 17 Mar 2009 18:09:09 +0100
Subject: [antlr-interest] BindException on DEFAULT_DEBUGGER_PORT resp.
 endless loop with another port
Message-ID: <49BFD935.7010103@tu-cottbus.de>

Hey Guys,

I think I need your help for this. I'm trying to create a little test
application for my grammar (both attached to the mail) with ANTLR IDE
1.3 using Eclipse and getting the following error stack trace on execution:

java.net.BindException: Address already in use: JVM_Bind
	at java.net.PlainSocketImpl.socketBind(Native Method)
	at java.net.PlainSocketImpl.bind(Unknown Source)
	at java.net.ServerSocket.bind(Unknown Source)
	at java.net.ServerSocket.<init>(Unknown Source)
	at java.net.ServerSocket.<init>(Unknown Source)
	at
org.antlr.runtime.debug.DebugEventSocketProxy.handshake(DebugEventSocketProxy.java:75)
	at SelectShortParser.<init>(SelectShortParser.java:169)
	at SelectShortParser.<init>(SelectShortParser.java:158)
	at Test.main(Test.java:24)

I asked Google for help and read that I should change the port, cause
the default port 49153 is used by another app - I asked netstat for
that, it's svchost.exe (I'm working with Vista Business).
No Problem I thought, just change the port - I used 49100. For now the
BindException doesn't appear, but my app seems to run in an endless loop.

Running the same grammar with the interpreter of ANTLR IDE or with
interpreter or debugger in ANTLRWorks everything seems correct, giving 
me the expected AST.
Also everything is OK when I use a small sample grammar within Eclipse.

I hope you find or know something that helps me, so I can get my AST for 
further work.

Thank you in advance for any help.

Regards,

Matthias

-- 
Matthias Kiehl

Albert-F?rster-Str. 1
03042 Cottbus

Mail: mattkiehl at tu-cottbus.de

Phone:  +49-355-7557926
Mobile: +49-170-4688357


-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: SelectShort.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/06e2f2ea/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Test.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/06e2f2ea/attachment-0001.pl 

From yimm8369 at hotmail.com  Tue Mar 17 10:26:58 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 18 Mar 2009 01:26:58 +0800
Subject: [antlr-interest] How can I modify a tree node value according
 to the value of another tree node ?
In-Reply-To: <49BF4535.30002@gmx.de>
References: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>
	<e24c4c270903161734j1422af53p1ac243324a7b7521@mail.gmail.com>
	<BAY122-W16E637B8874E7A282CA158DB980@phx.gbl> <49BF4535.30002@gmx.de>
Message-ID: <BAY122-W287E42449A974B1156956DB980@phx.gbl>


 

 

Hi Johannes,

 

Thank you very much for your suggestion!

 

Yes, Math.ceil will always be evaluated after Number.

 

 

Actually, now I have two-pass, one is AS.g and the other is AStree.g.

 

As you said, I should store the Math.ceil value in AS.g and when the second pass AStress.g run, access the stored value and change Number to int.

 

How could I store value in AS.g and how can AS.g and AStree.g communicate? Could you plz give me a small example?

 

Thanks a million!

 

Annie

 

The last approach is to use a two-pass approach. Create in the first
> pass an AST and store the required value. Then create in the second pass
> the ST output and access the stored value.
 
> Date: Tue, 17 Mar 2009 07:37:41 +0100
> From: jaluber at gmx.de
> To: yimm8369 at hotmail.com
> CC: michael.bedward at gmail.com; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How can I modify a tree node value according to the value of another tree node ?
> 
> YINGAnnie schrieb:
> > 
> > I guess that does not work. I use gloable scope as the following grammar
> > to deal with the problem.
> > 
> > Suppose my input is "var t:Number=Math.ceil(1.5); ".
> > 
> > Here is the grammar for Number,$IDENTIFIER is equal to Number .
> > 
> > /qualifiedName
> > scope math;
> > : IDENTIFIER (DOT IDENTIFIER)* 
> > {System.out.print("math"+$math::member);}/
> > 
> > 
> > 
> > Here is the grammar for Math.ceil ,$memberExpression is equal to Math.ceil.
> > 
> > callExpression
> > scope math;
> > : memberExpression (indexSuffix
> > |propertyReferenceSuffix|argumentSuffix )* 
> > {$math::member=$memberExpression.text;System.out.print("math"+$math::member);} 
> > ;
> > 
> > In callExpression, I give gloable variable the value of
> > $memberExpression.text, and in qualifiedName , I want to print the value
> > of $memberExpression.text.
> > 
> > But Number and Math.ceil are in the different tree and the parser will
> > parse Number before Math.ceil, therefore, when in the grammar of
> > callExpression , the $math::member should not have the value of
> > $memberExpression.text.
> > 
> > And the result is as I expect , it is "math null".
> 
> Do I understand you correctly that Math.ceil will always be evaluated
> after Number? Then it isn't surprising that the above won't simply work.
> They are three ways to solve this problem. Either you scan the input for
> Math.ceil, when encounter Number. As this has to do be done manually,
> this is a lot of work - and may even require to call a lexer and parser
> manually within parsing the current input. Complicated.
> 
> Easier may be to resolve this issue backwards. You create a variable in
> Number and fill it in Math.ceil. This requires that the variable won't
> be evaluated until Math.ceil has been parsed. I'm not sure when the ST
> output is generated so this solution may not be viable.
> 
> The last approach is to use a two-pass approach. Create in the first
> pass an AST and store the required value. Then create in the second pass
> the ST output and access the stored value.
> 
> Johannes
> > 
> > How to solve this? How can the parser go back to make some changes?
> > 
> > Thanks,
> > 
> > Annie
> > 
> > 
> > 
> > 
> > 
> > 
> > 
> >> Date: Tue, 17 Mar 2009 11:34:03 +1100
> >> Subject: Re: [antlr-interest] How can I modify a tree node value
> > according to the value of another tree node ?
> >> From: michael.bedward at gmail.com
> >> To: yimm8369 at hotmail.com
> >> CC: antlr-interest at antlr.org
> >>
> >> Hi Annie,
> >>
> >> One way to pass data between sub-trees is to use global scope. See
> >> section 4.5 in the ANTLR book.
> >>
> >> Hope this helps
> >> Michael
> >>
> >>
> >>
> >> 2009/3/17 YINGAnnie <yimm8369 at hotmail.com>:
> >> >
> >> > Hi everyone,
> >> >
> >> >
> >> > What I want to do is to replace var t:Number=Math.ceil(1.5); to var
> >> > t:int=int(1.5); The tree I got is something like this:
> >> >
> >> > PROPERTY_DECL (VARIABLE_STATEMENT (VAR_DECL_LIST (VAR_ID_DECL t
> >> > (QUALIFIED_NAME Number)) = (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION
> >> > (...........(QUALI FIED_NAME Math . ceil))) (ARGUMENT_SUFFIX
> >> > (.........(PRIMARY_EXPRESSION 1.5))))
> >> >
> >> > ....... stands for some other nodes.
> >> >
> >> >
> >> > Replacing Math.ceil(1.5) to int(1.5) is easy to implement.But cos Number
> >> > rule and Math.ceil rule belong to different tree, how can I replace
> > Number
> >> > to int when value of the other tree's node equals to Math.ceil?
> >> >
> >> > Thanks in advance!
> >> >
> >> >
> >> > Annie
> >> >
> >> > ________________________________
> >> > ????????????????????? ?????
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >> >
> >> >
> > 
> > ------------------------------------------------------------------------
> > ???? MSN ?????? MSN ????? ??????
> > <http://im.live.cn/safe/>
> > 
> > 
> > ------------------------------------------------------------------------
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/bee7666c/attachment-0001.html 

From ckimyt at gmail.com  Tue Mar 17 11:22:30 2009
From: ckimyt at gmail.com (Mike J. Bell)
Date: Tue, 17 Mar 2009 14:22:30 -0400
Subject: [antlr-interest] Help newbie understand combined grammar import
	restrictions
Message-ID: <cfae84d80903171122o6f301c20r6124eb5cd23d81b@mail.gmail.com>

I'm trying to model a DSL we have at work in ANTLR.  It turns out that this
language has three distinct flavors of expression, and each could best be
represented as its own language and then tied together with some knowledge
about the context of when each occurs.

All three share certain concepts though...there are lexer rules and parser
rules that I do not want to reinvent for each "sublanguage."  I thought I
could use "import ..." to make a "base" language and then build upon it for
each sublanguage.

Here's a toy example:

grammar Base;
WS: ' ' | '\t' { $channel = HIDDEN; };
fragment ALPHA: 'A'..'Z'|'a'..'z';
fragment DIGIT: '0'..'9';
IDENT: ALPHA (ALPHA|DIGIT)*;
NUMBER: DIGIT+;
rvalue: IDENT|NUMBER;
lvalue: IDENT;

Then one of my sublanguages can do:

grammar SubLanguage1;
import Base;
ASSIGN_OP: '=';
fragment HEXDIGIT: DIGIT|'A'..'F'|'a'..'f';
HEXNUM: '0x' HEXDIGIT+;
my_rvalue: rvalue | HEXNUM;
assignment: lvalue ASSIGN_OP my_rvalue;
label: IDENT ':';

And finally the master language:

grammar Master;
import SubLanguage1, SubLanguage2, SubLanguage3;
//rules to invoke rules of subs...

It's just an example, but I think you can see where I'm going.  I want to
put shared lexer tokens and parser rules in the Base grammar, and then
extend and add to it in each of the Sublanguage* grammars.  This way the
common language features can stay in one place and if small tweaks need to
happen they happen in one place.

As you can see, I have rules in the base that depend on tokens in the base,
and those tokens depend on fragments in the base as well.  In the sub, I
have rules that depend on rules and tokens in the base, and tokens that
depend on tokens and fragments in the base, and fragments that depend on
fragments in the base.

I tried splitting these into separate lexers and parsers, but ANTLRWorks
shows all kinds of red when I don't import things that are illegal to
import.  Whether I do or not, I get compile errors trying to debug the
grammar.

So I guess I'm asking two questions:  why can't combined grammars import
other combined grammars, and does anyone have any suggestions for how to
best handle this situation?

Thanks a lot in advance!
Mike

-- 
Mike J. Bell on gmail
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/47847c19/attachment.html 

From antlr at mirality.co.nz  Tue Mar 17 11:37:55 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 18 Mar 2009 07:37:55 +1300
Subject: [antlr-interest] errors reported in console
In-Reply-To: <80576ef0903170505m7c5554f8if8a7dac8ba571a6@mail.gmail.com>
References: <80576ef0903170356m662273bdxe208a7a8826fa24@mail.gmail.com>
	<49bf8d24.020bca0a.0a08.0b6fSMTPIN_ADDED@mx.google.com>
	<80576ef0903170505m7c5554f8if8a7dac8ba571a6@mail.gmail.com>
Message-ID: <20090317183830.4833834184B2@www.antlr.org>

At 01:05 18/03/2009, Java Developer wrote:
>Could you refer me to a link explaining fragment rules versus 
>top-level rules (I find the Wiki pages confusing)? A keyword 
>search on google did not help.

To turn a non-fragment lexer rule into a fragment rule, you just 
put the word "fragment" in front of it.  This means that it's no 
longer considered a possible candidate to be selected as a full 
token -- it has to be referenced from other lexer rules in order 
to have any effect.  (It is still allocated a token id, though, 
which is useful for more advanced problems.)

Have a look at the example v3 grammars.  You might also want to 
get TDAR (the ANTLR book).


From antlr at mirality.co.nz  Tue Mar 17 11:44:15 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 18 Mar 2009 07:44:15 +1300
Subject: [antlr-interest] BindException on DEFAULT_DEBUGGER_PORT resp.
 endless loop with another port
In-Reply-To: <49BFD935.7010103@tu-cottbus.de>
References: <49BFD935.7010103@tu-cottbus.de>
Message-ID: <20090317184439.A8C8634184B2@www.antlr.org>

At 06:09 18/03/2009, Matthias Kiehl wrote:
 >No Problem I thought, just change the port - I used 49100. For 
now
 >the BindException doesn't appear, but my app seems to run in an
 >endless loop.
 >
 >Running the same grammar with the interpreter of ANTLR IDE or 
with
 >interpreter or debugger in ANTLRWorks everything seems correct,
 >giving me the expected AST.
 >Also everything is OK when I use a small sample grammar within
 >Eclipse.

If you compiled your grammar with -debug, then it will wait on 
startup for a connection from ANTLRWorks before continuing.  When 
you're not using ANTLRWorks, you should regenerate your 
parser/lexer without -debug.

 >ORDERBY	:	O R D E R ' '+ B Y;

In this and similar rules, you might want to call the WS rule (or 
something like it) instead of coding the space 
directly.  Otherwise it won't match cases where the user has put 
tabs or newlines between the two halves of the keyword -- which 
would probably be unusual, but normally isn't illegal.


From antlr at mirality.co.nz  Tue Mar 17 11:50:35 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 18 Mar 2009 07:50:35 +1300
Subject: [antlr-interest] Escaping quotes in a lexer
In-Reply-To: <20090317165647.68266f38@mail.ibc.it>
References: <20090317165647.68266f38@mail.ibc.it>
Message-ID: <20090317185056.B714334184B2@www.antlr.org>

At 05:56 18/03/2009, Gesuato Emanuele wrote:
>I would like to use the ' character inside the string something 
>similar to:
>
>Invoice.customer='Tom L\'oreal'
>or (better)
>Invoice.customer="Tom L'oreal"
>
>I've got the String definition for such fields that is the 
>following:
>STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";

Are you sure that *s can only appear at either end, never in the 
middle?

Anyway, if you want to permit a \' escape, then you have to 
explicitly spell it out.  Personally, though, I wouldn't try to be 
even slightly restrictive on the contents of the string -- leave 
that to later validation in the parser or external code:

STRING : '\'' ('\\' ('\'')? | ~('\\' | '\''))* '\'';


From yimm8369 at hotmail.com  Tue Mar 17 12:04:32 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 18 Mar 2009 03:04:32 +0800
Subject: [antlr-interest] Where I can download the souce code in The
 Definitive ANTLR Reference?
Message-ID: <BAY122-W45659B658BBBCBA86DD6F7DB980@phx.gbl>


 

 

Hi  everyone,

 

 

Where I can download the souce code in The Definitive ANTLR Reference?

 

annie

_________________________________________________________________
??K???????????????????MClub????
http://club.msn.cn/?form=3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/f19172f0/attachment.html 

From parrt at cs.usfca.edu  Tue Mar 17 12:09:06 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Mar 2009 12:09:06 -0700
Subject: [antlr-interest] Where I can download the souce code in The
	Definitive ANTLR Reference?
In-Reply-To: <BAY122-W45659B658BBBCBA86DD6F7DB980@phx.gbl>
References: <BAY122-W45659B658BBBCBA86DD6F7DB980@phx.gbl>
Message-ID: <18AC7FFA-0248-4C6D-8B74-92C178D78843@cs.usfca.edu>

http://www.pragprog.com/titles/tpantlr/source_code
Ter
On Mar 17, 2009, at 12:04 PM, YINGAnnie wrote:

>
>
> Hi  everyone,
>
>
> Where I can download the souce code in The Definitive ANTLR Reference?
>
> annie
>
> ?MSN???????????????? ?????
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Tue Mar 17 13:03:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Mar 2009 13:03:53 -0700
Subject: [antlr-interest] Bug fix for C runtime
Message-ID: <49C00229.4040209@temporal-wave.com>

Please note that the following two errors in the C runtime:

1) The token text information of imaginary nodes is lost in 3.1.2. Not 
sure how

it works in 3.1.1, but the reason for why it doesn't in 3.1.2 is that 
the the
token's strFactory isn't set up.

2) Attempted to use PUSHSTREAM to implement include file mechanism, but 
failed.
The reason is that the token factory's setInputStream isn't set up properly.

Were introduced by accident in release 3.1.2 and are now fixed in 
release 3.1.3 (coming soon I hope)

Thanks



From emanuele.gesuato at gmail.com  Tue Mar 17 15:05:13 2009
From: emanuele.gesuato at gmail.com (Emanuele Gesuato)
Date: Tue, 17 Mar 2009 23:05:13 +0100
Subject: [antlr-interest] Escaping quotes in a lexer
Message-ID: <32b9ac3d0903171505l40d8beb4n9a07a9ec9c772ad5@mail.gmail.com>

Hi there,

I'm quite new to the antlr world so my question could be obvious. I'm
using antlr 2.7.6 in java 5 for generating a lexer class. In this
lexer (written by an ex-collegue) i'm trying to resolve string like

Invoice.customer='Tom'

to build an hibernate restriction.

I would like to use the ' character inside the string something similar to:

Invoice.customer='Tom L\'oreal'
or (better)
Invoice.customer="Tom L'oreal"

I've got the String definition for such fields that is the following:
STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";
where:
protected CIFRA        : '0'..'9';
protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
protected INTEGER    : (CIFRA)+;

and i've tried to use:
STRING : (" ' "((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)" ' ") | (' "
'((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)' " ');

(added spaces for more clarity) but it does recognize the string
"Tom L'oreal". The java class created is no different from the previous one.



Here is the original full grammar:
*************************
header{
package it.ibc.jstore.util.parser;
}

// Lexer ********************************************
{import it.ibc.jstore.base.Log;}
class RestrictionsLexer extends Lexer;

options { k=4; }

WHITESPACE    : (' '
            | '\t'
            | '\r' '\n' { newline(); }
            | '\n'      { newline(); }
            ) { $setType(Token.SKIP); }
            ;

protected SPAZIO    : ' ';
protected CIFRA        : '0'..'9';
protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
protected INTEGER    : (CIFRA)+;
protected LONG        : INTEGER('L'|'l');
protected LIKE        : ("LIKE"|"like"|"Like");
protected OR        : ("OR"|"or"|"Or");
protected AND        : ("AND"|"and"|"And");
protected IN        : ("IN"|"in"|"In");




UGUALE            : "=";
DIVERSO            : "<>";
MAGGIORE        : '>';
MINORE            : '<';
MAGGIOREUGUALE    : ">=";
MINOREUGUALE    : "<=";
JOLLY            : "*";
LPAREN            : '(';
RPAREN            : ')';
SEPARATORE        : ('/');
VIRGOLA            : ",";
NUMERO : (LONG) => LONG { $setType(LONG); }
     | INTEGER { $setType(INTEGER); }
     ;
STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'"
CAMPO : (LIKE) => LIKE { $setType(LIKE); }
    | (OR) => OR { $setType(OR); }
    | (AND) => AND { $setType(AND); }
    | (IN) => IN { $setType(IN); }
    | PAROLA { $setType(CAMPO); }
    ;

// Parser *******************************************
class RestrictionsParser extends Parser;
options { buildAST=true; }

valore     : STRING | LONG | INTEGER;
expr     : LPAREN^ orExpr RPAREN! ;
orExpr   : andExpr ((OR^) andExpr)* ;
andExpr  : relExpr ((AND^) relExpr)* ;
relExpr  : atom
(((UGUALE^|DIVERSO^|MAGGIORE^|MINORE^|MINOREUGUALE^|MAGGIOREUGUALE^|LIKE^)
rparm) | (IN^ list))* ;
atom     : CAMPO | expr ;
rparm    : atom | valore ;
list     : LPAREN! valore (VIRGOLA^ valore)* RPAREN! ;


// Parser dell'albero *******************************
{
import it.ibc.jstore.data.Restrictions;
import it.ibc.jstore.data.MatchMode;
import java.util.List;
import java.util.ArrayList;
}
class RestrictionsTreeWalker extends TreeParser;

// Elemento base (un campo, un intero..)
base returns [Object s]
    { s=null; }
    : i:CAMPO { s=i.getText(); }
    | j:INTEGER { s=Integer.valueOf(j.getText()); }
    | k:LONG { int lunghezza=k.getText().length();
s=Long.valueOf(k.getText().substring(0,lunghezza-1)); }
    | l:STRING { int lunghezza=l.getText().length();
s=l.getText().substring(1,lunghezza-1); }
    ;

campo returns [String s]
    { s=null; }
    : i:CAMPO { s=i.getText(); }
    ;

stringa returns [String s]
    { s=null; }
    : l:STRING { int lunghezza=l.getText().length();
s=l.getText().substring(1,lunghezza-1); }
    ;

lista returns [List l]
    { l=new ArrayList(); List t,v; Object a; }
    : #(VIRGOLA v=lista t=lista) { l.addAll(v); l.addAll(t); } // Una
lista e' un'elenco di liste separate da virgola
    | a=base { l.add(a); } // E questo e' l'elemento base della lista
    ;

expr returns [Restrictions r]
  { Object a,b; Restrictions t,v; r=new Restrictions(); }
  : #(UGUALE a=base b=base) { r.eq((String)a,b); }
  | #(DIVERSO a=base b=base) { r.ne((String)a,b); }
  | #(MINOREUGUALE a=base b=base) { r.le((String)a,b); }
  | #(MAGGIOREUGUALE a=base b=base) { r.ge((String)a,b); }
  | #(MINORE a=base b=base) { r.lt((String)a,b); }
  | #(MAGGIORE a=base b=base) { r.gt((String)a,b); }
  | #(LIKE a=campo b=stringa) { r.ilike((String)a,(String)b, MatchMode.GUESS); }
  | #(IN a=campo b=lista) { r.in((String)a,(List)b); }
  | #(AND t=expr v=expr) {r.and(t,v);}
  | #(OR t=expr v=expr) {r.or(t,v);}
  | #(LPAREN t=expr) { r=t; }
  ;

From yimm8369 at hotmail.com  Tue Mar 17 16:38:11 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 18 Mar 2009 07:38:11 +0800
Subject: [antlr-interest] How to modify lines of code, not only the token,
 using stringtemplate?
Message-ID: <BAY122-W3245512D4A53C6B843D076DB980@phx.gbl>


 

 

Hello,

 

I want to usd stringtemplat to modify 

 

var v1:Number=10;
var v2:Number=10;

 

to

 

var v1,v2:Number=10;

 

I got the tree like this:

 

(PROPERTY_DECL (VARIABLE_STATEMENT .... (VAR_ID_DECL v1 (QUALIFIED_NAME Number)) (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION .... (PRIMARY_EXPRESSION 10)

(PROPERTY_DECL (VARIABLE_STATEMENT .... (VAR_ID_DECL v2 (QUALIFIED_NAME Number)) (ASSIGNMENT_EXPRESSION (CONDITION_EXPRESSION .... (PRIMARY_EXPRESSION 10)

 

They are in two different tree. How to modify lines of code?

 

Thanks in advance!

 

Annie

 

 

 

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/71ed0d43/attachment.html 

From michael.bedward at gmail.com  Tue Mar 17 17:30:36 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 18 Mar 2009 11:30:36 +1100
Subject: [antlr-interest] How can I modify a tree node value according
	to the value of another tree node ?
In-Reply-To: <BAY122-W287E42449A974B1156956DB980@phx.gbl>
References: <BAY122-W126C8C568D5008116C9DF9DB9B0@phx.gbl>
	<e24c4c270903161734j1422af53p1ac243324a7b7521@mail.gmail.com>
	<BAY122-W16E637B8874E7A282CA158DB980@phx.gbl> <49BF4535.30002@gmx.de>
	<BAY122-W287E42449A974B1156956DB980@phx.gbl>
Message-ID: <e24c4c270903171730o17d193e2v238182df29a65793@mail.gmail.com>

> How could I store value in AS.g and how can AS.g and AStree.g communicate?
> Could you plz give me a small example?
>

Hi Annie

Just define variables in the members section of each grammar.

Here's a general example where parser grammar A.g needs to collect
data which will then be used in tree grammar Bwalker.g

In grammar A.g...

@members {
private List<MyClass> myList = new ArrayList<MyClass>();

public List<MyClass> getList() { return myList; }
}

Then one or more rules in A.g have actions to create MyClass objects
and add them to the list.

In grammar Bwalker.g...

@members {
private List<MyClass> aList;

public void setList( List<MyClass> list ) { aList = list };
}

Now the client code runs AParser and gets the AST and the list...

AParser parser = new AParser(...);
AParser.prog_return r = parser.prog();
CommonTree primaryAST = (CommonTree) r.getTree();
List<MyClass> listFromA = parser.getList();

Then it gives the AST and the list to Bwalker...

CommonTreeNodeStream nodes = new CommonTreeNodeStream(primaryAST);
nodes.setTokenStream(tokens);
BWalker bwalker = new BWalker(nodes);
bwalker.setList( listFromA );
BWalker.start_return r = bwalker.start();

Hope this helps
Michael

From akineko at gmail.com  Tue Mar 17 17:43:08 2009
From: akineko at gmail.com (Aki Niimura)
Date: Tue, 17 Mar 2009 17:43:08 -0700
Subject: [antlr-interest] A newbie's question
Message-ID: <59f1f0cb0903171743w3df0a950j93261c01ac53fbb1@mail.gmail.com>

Hello everyone,

I'm very new to ANTLR3 and I'm still trying to figure out how this tool
works.
I have used Flex/Bison before so the experience does help.

I'm trying to use ANTLR3 with Python Target as that is the language I only
use in recent years.

>From reading tutorial and some examples for Python, it seems suggesting
three step approach:
(1) Lexer -> Token Stream
(2) Parser -> AST Stream
(3) Tree Parser (this is the place to embed the actions)

This is different from two step approach I'm familiar with when I learned
Flex/Bison.
However, I think three step approach provides cleaner implementation, so I
like it.

Only problem I see with the three step approach is that I need to write
almost identical grammar (yet not identical) for (2) and (3).

Now, I'm trying to use a complex grammar file that is created by somebody
else.
By using his grammar file, I can get (1) and (2) for free.
But it is not easy for me to write a Tree grammar rules for (3).

My question is:
Is there any way available to generate (3) skeleton file from (2) step?

I think (2) step has enough information to create a skeleton version of (3).
Then users can edit the file to insert necessary his application specific
stuff.

Any hint to facilitate (3) step is greatly appreciated.

Best regards,
Aki Niimura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/6161826f/attachment.html 

From michael.bedward at gmail.com  Tue Mar 17 18:58:03 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 18 Mar 2009 12:58:03 +1100
Subject: [antlr-interest] A newbie's question
In-Reply-To: <59f1f0cb0903171743w3df0a950j93261c01ac53fbb1@mail.gmail.com>
References: <59f1f0cb0903171743w3df0a950j93261c01ac53fbb1@mail.gmail.com>
Message-ID: <e24c4c270903171858tfa284d5h753a593e2f940160@mail.gmail.com>

Hi,

First decide if you really need step 3 (the tree parser).  If you want
to parse some program / script and then perform evaluation multiple
times, or you want to work on the AST to optimize execution or make it
easier to do translation etc. then the answer is yes.  But if you just
want to parse a program / script and run it once then it's optional -
you could just embed actions in the parser grammar in step 2.

In my own apps I do more or less copy the parser grammar (minus
actions and AST rewrite rules) and use this as the basis for the tree
grammar.  If the grammar is not huge this is practical, but if it is,
or if there are multiple tree walking stages (ie. step 4, step 5 etc
each of which generates a new AST) then it can get tricky.

There was a recent discussion of this here...
http://www.antlr.org/pipermail/antlr-interest/2009-February/032799.html

Hope this helps
Michael

From akineko at gmail.com  Tue Mar 17 20:07:57 2009
From: akineko at gmail.com (Aki Niimura)
Date: Tue, 17 Mar 2009 20:07:57 -0700
Subject: [antlr-interest] A newbie's question
In-Reply-To: <e24c4c270903171858tfa284d5h753a593e2f940160@mail.gmail.com>
References: <59f1f0cb0903171743w3df0a950j93261c01ac53fbb1@mail.gmail.com>
	<e24c4c270903171858tfa284d5h753a593e2f940160@mail.gmail.com>
Message-ID: <59f1f0cb0903172007x23484ceub7d9933da0f8356b@mail.gmail.com>

Hello Michael,

Thank you for your prompt response.
I'm trying to write a C Interpreter (with special hooks).
I originally tried to use existing open-source C Interpreter, such as CINT.
But I decided to re-invent a wheel because I need to insert special hooks.

I would like to use a grammar file, C.g, that is available on the ANTLR web
site.
The updated version of C.g, which is verified with Python target is also
available from FishEye.
I created (1) and (2) using the C.g.

I prefer three step approach as it separates parser grammar and application
specific actions.

The C.g grammar is fairly complex and written by somebody else.
So, creating (3) Tree grammar is not an easy task for me.

In such sense, I agree with your suggestion inserting my application
specific stuff into the C.g and not to create (3) step.
The code would look very messy but it is probably easier for me to figure
out where to insert.

Again, what I thought was the (2) step should able to create a summary of
the grammar that should be used in the (3) step.
It would be nice if the future ANTLR has such feature if that is not
possible with the current release.

I will try to find more in the ANTLR web site and mailing list archive.

Thanks,
Aki-


On Tue, Mar 17, 2009 at 6:58 PM, Michael Bedward
<michael.bedward at gmail.com>wrote:

> Hi,
>
> First decide if you really need step 3 (the tree parser).  If you want
> to parse some program / script and then perform evaluation multiple
> times, or you want to work on the AST to optimize execution or make it
> easier to do translation etc. then the answer is yes.  But if you just
> want to parse a program / script and run it once then it's optional -
> you could just embed actions in the parser grammar in step 2.
>
> In my own apps I do more or less copy the parser grammar (minus
> actions and AST rewrite rules) and use this as the basis for the tree
> grammar.  If the grammar is not huge this is practical, but if it is,
> or if there are multiple tree walking stages (ie. step 4, step 5 etc
> each of which generates a new AST) then it can get tricky.
>
> There was a recent discussion of this here...
> http://www.antlr.org/pipermail/antlr-interest/2009-February/032799.html
>
> Hope this helps
> Michael
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/fb4f37ce/attachment.html 

From jimi at temporal-wave.com  Tue Mar 17 21:11:50 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Mar 2009 21:11:50 -0700
Subject: [antlr-interest] A newbie's question
In-Reply-To: <59f1f0cb0903172007x23484ceub7d9933da0f8356b@mail.gmail.com>
References: <59f1f0cb0903171743w3df0a950j93261c01ac53fbb1@mail.gmail.com>	<e24c4c270903171858tfa284d5h753a593e2f940160@mail.gmail.com>
	<59f1f0cb0903172007x23484ceub7d9933da0f8356b@mail.gmail.com>
Message-ID: <49C07486.7080004@temporal-wave.com>

Aki Niimura wrote:
> Hello Michael,
>
> Thank you for your prompt response.
> I'm trying to write a C Interpreter (with special hooks).
> I originally tried to use existing open-source C Interpreter, such as 
> CINT.
> But I decided to re-invent a wheel because I need to insert special hooks.
>
> I would like to use a grammar file, C.g, that is available on the 
> ANTLR web site.
> The updated version of C.g, which is verified with Python target is 
> also available from FishEye.
> I created (1) and (2) using the C.g.
>
> I prefer three step approach as it separates parser grammar and 
> application specific actions.
>
> The C.g grammar is fairly complex and written by somebody else.
> So, creating (3) Tree grammar is not an easy task for me.
There was a gentleman posting here who had improved that C.g grammar to 
include all the GNU C extensions (bar just a few) and generated an AST, 
with a tree parser. I don't know if he has it ready for publication yet, 
but perhaps this might prompt a response.

It was:

AUTHOR: Jan Obdrzalek, 2007-2009
        Jiri Slaby (modifications), 2008-2009
        Typedef handling taken from C.g distributed with ANTLR v3,  (c) 
Terence Parr and Jim Idle

And I am hoping he received my updates for his parser.

>
> In such sense, I agree with your suggestion inserting my application 
> specific stuff into the C.g and not to create (3) step.
> The code would look very messy but it is probably easier for me to 
> figure out where to insert.
But if you want to do loops and things, then not having an AST is going 
to be a pain.

Shaping the tree is much more time consuming than writing the tree 
parser that walks the resulting AST.

Jim

From akineko at gmail.com  Tue Mar 17 22:48:39 2009
From: akineko at gmail.com (Aki Niimura)
Date: Tue, 17 Mar 2009 22:48:39 -0700
Subject: [antlr-interest] A newbie's question
In-Reply-To: <49C07486.7080004@temporal-wave.com>
References: <59f1f0cb0903171743w3df0a950j93261c01ac53fbb1@mail.gmail.com>
	<e24c4c270903171858tfa284d5h753a593e2f940160@mail.gmail.com>
	<59f1f0cb0903172007x23484ceub7d9933da0f8356b@mail.gmail.com>
	<49C07486.7080004@temporal-wave.com>
Message-ID: <59f1f0cb0903172248p39d7a1a6pf7dc220d169294de@mail.gmail.com>

Hello Jim,

Thank you for your reply and thank you for letting me know that somebody has
done the enhancement I would like to do.
I would like to re-invent a wheel if I don't need to do.
I will try to contact the author to see if he can share the code.

I agree that not having an AST is going to be pain.
I needed to resort to quite messy stuff when I used Flex/Bison (two-step
approach) to write a proprietary compiler.

Thank you!
Aki-


On Tue, Mar 17, 2009 at 9:11 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Aki Niimura wrote:
> > Hello Michael,
> >
> > Thank you for your prompt response.
> > I'm trying to write a C Interpreter (with special hooks).
> > I originally tried to use existing open-source C Interpreter, such as
> > CINT.
> > But I decided to re-invent a wheel because I need to insert special
> hooks.
> >
> > I would like to use a grammar file, C.g, that is available on the
> > ANTLR web site.
> > The updated version of C.g, which is verified with Python target is
> > also available from FishEye.
> > I created (1) and (2) using the C.g.
> >
> > I prefer three step approach as it separates parser grammar and
> > application specific actions.
> >
> > The C.g grammar is fairly complex and written by somebody else.
> > So, creating (3) Tree grammar is not an easy task for me.
> There was a gentleman posting here who had improved that C.g grammar to
> include all the GNU C extensions (bar just a few) and generated an AST,
> with a tree parser. I don't know if he has it ready for publication yet,
> but perhaps this might prompt a response.
>
> It was:
>
> AUTHOR: Jan Obdrzalek, 2007-2009
>        Jiri Slaby (modifications), 2008-2009
>        Typedef handling taken from C.g distributed with ANTLR v3,  (c)
> Terence Parr and Jim Idle
>
> And I am hoping he received my updates for his parser.
>
> >
> > In such sense, I agree with your suggestion inserting my application
> > specific stuff into the C.g and not to create (3) step.
> > The code would look very messy but it is probably easier for me to
> > figure out where to insert.
> But if you want to do loops and things, then not having an AST is going
> to be a pain.
>
> Shaping the tree is much more time consuming than writing the tree
> parser that walks the resulting AST.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090317/4b38dc34/attachment.html 

From reynoldx at gmail.com  Tue Mar 17 23:40:38 2009
From: reynoldx at gmail.com (Reynold Xin)
Date: Wed, 18 Mar 2009 02:40:38 -0400
Subject: [antlr-interest] "no viable alternative at character" error for ';
	' and ',' in a wild 	cast
Message-ID: <aa750a6a0903172340q14ca0550kfaacaffe34fa3f48@mail.gmail.com>

I have the attached rules defined in ANTLR 3. I ran it (Java program)
on a simple SQL query:

SELECT abcd, wewasdf
FROM visit AS v, trial AS t
WHERE v.id = 1234 AND t.city = 'NEW YORK' AND
LINK v.diagnosis WITH t.condition USING synonym

It reports the following error:

line 1:11 no viable alternative at character ','
line 2:15 no viable alternative at character ','
line 3:11 no viable alternative at character '='
line 3:29 no viable alternative at character '='

Those characters should be accepted in rule select_until_link_or_semi,
which is defined as (~(LINK | ';'))* .

If I add ',' and '=' to the grammar definition of LETTER, the error is
gone. However, that changes the behaviour of LETTER. How can I fix
this problem?

Thanks.

-----------------------------------------
Rules
-----------------------------------------

select_stmt
       :       SELECT clause=select_until_link_or_semi
link_clause_expr opt_semicol
       {
              ...
       }
       ;

select_until_link_or_semi
    :    (~(LINK | ';'))*
    ;

NATIVE_LINK
       :       'SYNONYM' | 'HYPONYM' | 'WEIGHTEDJACCARD' ;

WORD    :       LETTER (LETTER|DIGIT|'.')* ;

NUMBER  :       DIGIT+ ;

WHITESPACE
       :       ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; } ;

// hexadecimal digit
fragment HEX_DIGIT
       :       ('0'..'9'|'A'..'F'|'a'..'f')
       ;

// digit
fragment DIGIT
       :       '0'..'9';

// letters
fragment LETTER
       :       'a'..'z' | 'A'..'Z' | '_' | '$' | '#';

--
Reynold Xin

From indhu.b at s7software.com  Wed Mar 18 00:00:20 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 18 Mar 2009 12:30:20 +0530 (IST)
Subject: [antlr-interest] "no viable alternative at character" error for
 '; ' and ',' in a wild 	cast
In-Reply-To: <aa750a6a0903172340q14ca0550kfaacaffe34fa3f48@mail.gmail.com>
Message-ID: <30831117.2411237359620103.JavaMail.root@star>

Hi,

The problem is because ',' or '=' is not defined anywhere in the lexer rule. To be able to lex an input completely, it is necessary that the lexer grammar must account for every character that can occur in the input and be able to convert it into tokens. If you dont want to intoduce these characters in the lexer rules, you can turn on the 'filter' option in the lexer grammar. This will automatically skip any characters that are not defined in rules.

- Indhu


----- Original Message -----
From: Reynold Xin <reynoldx at gmail.com>
To: antlr-interest at antlr.org
Sent: Wednesday, March 18, 2009 12:10:38 PM GMT+0530 Asia/Calcutta
Subject: [antlr-interest] "no viable alternative at character" error for '; ' and ',' in a wild 	cast

I have the attached rules defined in ANTLR 3. I ran it (Java program)
on a simple SQL query:

SELECT abcd, wewasdf
FROM visit AS v, trial AS t
WHERE v.id = 1234 AND t.city = 'NEW YORK' AND
LINK v.diagnosis WITH t.condition USING synonym

It reports the following error:

line 1:11 no viable alternative at character ','
line 2:15 no viable alternative at character ','
line 3:11 no viable alternative at character '='
line 3:29 no viable alternative at character '='

Those characters should be accepted in rule select_until_link_or_semi,
which is defined as (~(LINK | ';'))* .

If I add ',' and '=' to the grammar definition of LETTER, the error is
gone. However, that changes the behaviour of LETTER. How can I fix
this problem?

Thanks.

-----------------------------------------
Rules
-----------------------------------------

select_stmt
       :       SELECT clause=select_until_link_or_semi
link_clause_expr opt_semicol
       {
              ...
       }
       ;

select_until_link_or_semi
    :    (~(LINK | ';'))*
    ;

NATIVE_LINK
       :       'SYNONYM' | 'HYPONYM' | 'WEIGHTEDJACCARD' ;

WORD    :       LETTER (LETTER|DIGIT|'.')* ;

NUMBER  :       DIGIT+ ;

WHITESPACE
       :       ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; } ;

// hexadecimal digit
fragment HEX_DIGIT
       :       ('0'..'9'|'A'..'F'|'a'..'f')
       ;

// digit
fragment DIGIT
       :       '0'..'9';

// letters
fragment LETTER
       :       'a'..'z' | 'A'..'Z' | '_' | '$' | '#';

--
Reynold Xin

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andreas.meyer at smartshift.de  Wed Mar 18 04:55:58 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Wed, 18 Mar 2009 12:55:58 +0100
Subject: [antlr-interest] Checking composite grammars with ANTLRworks
Message-ID: <49C0E14E.9080209@smartshift.de>

Hi!

I have a grammar that imports many subgrammars, which in turn import 
other sub-grammars. Now, via command-line, ANTLR reports about 
ambiguities (displayed as a list of NFA states). Now, in order to 
visualize this ambiguity warning in ANTLR, I tried ANTLRworks. However, 
this seems to have problems with imported grammars, as it checks the 
root grammar in one second and does not report any ambiguity warnings 
(whereas the command-line antlr takes several minutes). What can I do? 
Note that getting at the ambiguity warnings by "generating code" from 
inside ANTLRworks is not possible, as I need an option 
-Xconversiontimeout in order to build anything.

Best Regards,
Andreas Meyer

From andreas.meyer at smartshift.de  Wed Mar 18 06:56:30 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Wed, 18 Mar 2009 14:56:30 +0100
Subject: [antlr-interest] Checking composite grammars with ANTLRworks
In-Reply-To: <49C0E14E.9080209@smartshift.de>
References: <49C0E14E.9080209@smartshift.de>
Message-ID: <49C0FD8E.9050705@smartshift.de>

Ok, one can easily set ANTLR options from within ANTLRworks (didnt see 
it, sorry!), to generate code using ANTLRworks. But still, this does not 
help visualizing the ambiguity :-/ The console shows the same error as 
the command line version from ANTLR, but it seems to be ignored by 
ANTLRworks ....

Andreas

Andreas Meyer schrieb:
> Hi!
>
> I have a grammar that imports many subgrammars, which in turn import 
> other sub-grammars. Now, via command-line, ANTLR reports about 
> ambiguities (displayed as a list of NFA states). Now, in order to 
> visualize this ambiguity warning in ANTLR, I tried ANTLRworks. However, 
> this seems to have problems with imported grammars, as it checks the 
> root grammar in one second and does not report any ambiguity warnings 
> (whereas the command-line antlr takes several minutes). What can I do? 
> Note that getting at the ambiguity warnings by "generating code" from 
> inside ANTLRworks is not possible, as I need an option 
> -Xconversiontimeout in order to build anything.
>
> Best Regards,
> Andreas Meyer
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From lucien_antlr at yahoo.com  Wed Mar 18 09:53:29 2009
From: lucien_antlr at yahoo.com (Lucien Antlr)
Date: Wed, 18 Mar 2009 09:53:29 -0700 (PDT)
Subject: [antlr-interest] V3 Rule Action allowing inline tree building?
Message-ID: <76781.49489.qm@web43509.mail.sp1.yahoo.com>

Hi folks,

I saw back in 2005 there was a bit of discussion around inline tree building.?? ( linked here 
http://markmail.org/message/7zigjknpakugflje?).? For practice I am?converting the freely available C v2 ANTLR .g? and I came over a rule that has me stuck...

It keeps the internal symbol-table by adding part of a tree into the symbol table along with the C symbol (in this case enum).

Normally a v2 rewrite would look like below (from stdcparser.g)

enumerator[String enumName]
??????? :?????? i:ID??????????????? { symbolTable.add(? i.getText(),
??????????????????????????????????????????????????????? #(?? null,
??????????????????????????????????????????????????????????? #[LITERAL_enum, "enum"],
??????????????????????????????????????????????????????????? #[ ID, enumName]
???????????????????????????????????????????????????????? )
???????????????????????????????????????????????????? );
??????????????????????????????????? }
??????????????? (ASSIGN constExpr)?
??????? ;

#( ) under v2 calls ASTFactory.create(), but under v3 it just appears to pass straight through into the Java target?? 

This is true even when re-written, as I guessed it should be below.

enumerator[String enumName]??
??????? :?????? i=ID???????? { symbolTable.add(? $i.text,
??????????????????????????????????????????????????????? ^(?? NULL,
??????????????????????????????????????????????????????????? ^(LITERAL_enum),
??????????????????????????????????????????????????????????? ^(ID $enumName..text)
???????????????????????????????????????????????????????? )
???????????????????????????????????????????????????? );
??????????????????????????????????? }
??????????????? (ASSIGN constExpr)?
??????? ;

The only thing I came up with is "rewriting" the rule, and creating a dummy rule inside and using $dummy.tree inside the action.

Any thoughts from the more experienced community?

Kind Regards,

Luc


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/79231b18/attachment.html 

From gabriel.petrovay at 28msec.com  Wed Mar 18 10:03:04 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Wed, 18 Mar 2009 18:03:04 +0100
Subject: [antlr-interest] How can I maintain the order in the tree?
Message-ID: <dc6ce1e40903181003s5e3c6f0die700cb420ff08005@mail.gmail.com>

Hi all,

Take this example:

tokens {
Parent;
}

parent : (childA | childB | childC)*
    -> ^(Parent childA* childB* childC*)
  ;

if I provide as input:
childB childC childA childB

the tree will order them as defined in the rule and return the following
tree:
^(Parent childA childB childB childC)

How can I define a tree that maintains this order?
e.g. I want to get: ^(Parent childB childC childA childB)


Thanks!

-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/22c4c55e/attachment.html 

From troy.daniels at baesystems.com  Wed Mar 18 10:40:13 2009
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Wed, 18 Mar 2009 13:40:13 -0400
Subject: [antlr-interest] How can I maintain the order in the tree?
Message-ID: <7b4dai$hrojt@dmzms99901.na.baesystems.com>

I think something like this should work.

 

parent: child -> ^(Parent child);

 

child: (childA | childB | childC) child | /* nothing */ ;

 

Multiple calls to child will build up the tree in the right order.  You
probably also need something to put the term that matched into a tree,
but this is the basic idea.

 

Troy

 

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gabriel Petrovay
Sent: Wednesday, March 18, 2009 1:03 PM
To: antlr-interest
Subject: [antlr-interest] How can I maintain the order in the tree?

 

Hi all,

Take this example:

tokens {
Parent;
}

parent : (childA | childB | childC)*
    -> ^(Parent childA* childB* childC*)
  ;

if I provide as input:
childB childC childA childB

the tree will order them as defined in the rule and return the following
tree:
^(Parent childA childB childB childC)

How can I define a tree that maintains this order?
e.g. I want to get: ^(Parent childB childC childA childB)


Thanks!

-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/a98351c2/attachment.html 

From jimi at temporal-wave.com  Wed Mar 18 10:46:54 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Mar 2009 10:46:54 -0700
Subject: [antlr-interest] V3 Rule Action allowing inline tree building?
In-Reply-To: <76781.49489.qm@web43509.mail.sp1.yahoo.com>
References: <76781.49489.qm@web43509.mail.sp1.yahoo.com>
Message-ID: <49C1338E.80208@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/f3ad0d8a/attachment.html 

From jimi at temporal-wave.com  Wed Mar 18 10:48:33 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Mar 2009 10:48:33 -0700
Subject: [antlr-interest] How can I maintain the order in the tree?
In-Reply-To: <dc6ce1e40903181003s5e3c6f0die700cb420ff08005@mail.gmail.com>
References: <dc6ce1e40903181003s5e3c6f0die700cb420ff08005@mail.gmail.com>
Message-ID: <49C133F1.6060307@temporal-wave.com>

Gabriel Petrovay wrote:
> Hi all,
>
> Take this example:
>
> tokens {
> Parent;
> }
>
> parent : (childA | childB | childC)*
>     -> ^(Parent childA* childB* childC*)
>   ;
>
> if I provide as input:
> childB childC childA childB
>
> the tree will order them as defined in the rule and return the 
> following tree:
> ^(Parent childA childB childB childC)
>
> How can I define a tree that maintains this order?
> e.g. I want to get: ^(Parent childB childC childA childB)
parent : children* -> ^(Parent children*);

children : childA | childB | childC;


Jim

From ToddStevenson at ge.com  Wed Mar 18 10:53:39 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Wed, 18 Mar 2009 13:53:39 -0400
Subject: [antlr-interest] Antlr to BNF
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80BC3057E@CINMLVEM11.e2k.ad.ge.com>

I am looking for a utility to convert an Antlr grammar to a nice BNF
document that I can use in my documentation.   Does one exist?  I poked
around on the antlr site and the internet and couldn't see anything. I
don't want to have to build one if I don't have to.
 
thanks.
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/76420463/attachment.html 

From sharwell at pixelminegames.com  Wed Mar 18 11:15:04 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 18 Mar 2009 13:15:04 -0500
Subject: [antlr-interest] V3 Rule Action allowing inline tree building?
In-Reply-To: <76781.49489.qm@web43509.mail.sp1.yahoo.com>
References: <76781.49489.qm@web43509.mail.sp1.yahoo.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67B88@Bloodymary.ironwillgames.com>

Once you get the hang of it, you can do it by hand without too much
trouble. For example, in converting a v2 grammar to v3, I encountered
this in the members section:

 

stringAlias =

        #(#[BLOCK], #(#[ALT], #[STRING_LITERAL], #[EOA]), #[EOB]);

 

Which became this (you can use CommonTree instead of GrammarAST). Note
that this uses the CSharp3 target so the function names are capitalized,
unlike the Java target.

 

/*

 * stringAlias = ^(BLOCK[] ^(ALT[] STRING_LITERAL[] EOA[]) EOB[])

 */

stringAlias = (GrammarAST)adaptor.Create( BLOCK, "BLOCK" );

{

    GrammarAST alt = (GrammarAST)adaptor.Create( ALT, "ALT" );

    adaptor.AddChild( alt, adaptor.Create( STRING_LITERAL,
"STRING_LITERAL" ) );

    adaptor.AddChild( alt, adaptor.Create( EOA, "EOA" ) );

    adaptor.AddChild( stringAlias, alt );

}

adaptor.AddChild( stringAlias, adaptor.Create( EOB, "EOB" ) );

 

In your case, you'd use something like this:

 

CommonTree tree = (CommonTree)adaptor.Nil();

adaptor.AddChild( tree, adaptor.Create( LITERAL_enum, "enum" ) );

adaptor.AddChild( tree, adaptor.Create( ID, enumName ) );

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lucien Antlr
Sent: Wednesday, March 18, 2009 11:53 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] V3 Rule Action allowing inline tree building?

 

Hi folks,

 

I saw back in 2005 there was a bit of discussion around inline tree
building.   ( linked here 

http://markmail.org/message/7zigjknpakugflje
<http://markmail.org/message/7zigjknpakugflje>  ).  For practice I am
converting the freely available C v2 ANTLR .g  and I came over a rule
that has me stuck...

 

It keeps the internal symbol-table by adding part of a tree into the
symbol table along with the C symbol (in this case enum).

 

Normally a v2 rewrite would look like below (from stdcparser.g)

 

enumerator[String enumName]
        :       i:ID                { symbolTable.add(  i.getText(),
                                                        #(   null,
 
#[LITERAL_enum, "enum"],
                                                            #[ ID,
enumName]
                                                         )
                                                     );
                                    }
                (ASSIGN constExpr)?
        ;

#( ) under v2 calls ASTFactory.create(), but under v3 it just appears to
pass straight through into the Java target?  

 

This is true even when re-written, as I guessed it should be below.

 

enumerator[String enumName]  

        :       i=ID         { symbolTable.add(  $i.text,
                                                        ^(   NULL,
 
^(LITERAL_enum),
                                                            ^(ID
$enumName.text)
                                                         )
                                                     );
                                    }
                (ASSIGN constExpr)?
        ;

The only thing I came up with is "rewriting" the rule, and creating a
dummy rule inside and using $dummy.tree inside the action.

 

Any thoughts from the more experienced community?

 

Kind Regards,

 

Luc

 

 

 

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/a1898ea7/attachment.html 

From antlr at jazillian.com  Wed Mar 18 11:20:19 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 18 Mar 2009 14:20:19 -0400
Subject: [antlr-interest] Interface between a C preprocessor and the C
 grammar parsers
In-Reply-To: <49BE9B51.7090100@googlemail.com>
References: <49BE9B51.7090100@googlemail.com>
Message-ID: <49C13B63.3040607@jazillian.com>


Vincent De Groote wrote:
> Hello,
> 
> I need to build a program which reads C language files, modifies the 
> files (code transformations), then save the files back to disk. The 
> saved files must have the original file structure, with unexpanded 
> include files,  unexpanded macros, inactive lines (skipped by the 
> preprocessor), ...  Beside the code rewrite functionnality, the program 
> must also be able to reformat source code, based on its syntactic structure.
> 
> This means that the tokens hidden to the grammatical parser must be 
> accessible to the final application.
> 
> I'm really a newbie in parsing, and I need some advices on how to do this.
> 
> My first questions are about the interface between the preprocessor and 
> the C grammar parser:
> 
> - Should the preprocessor parser be embedded in the C grammar ?  (This 
> seems a little ugly)

Yes. I embed the following in my C grammar:
ppline
    : ppdefine
    | ppinclude
    | ppif
    ;

ppdefine
    : PPdefine^ ID ( ppdefineArgs )? (
        constExpr
        | ID
        | Number
        | StringLiteral
        |   // empty
    )
    ;

ppdefineArgs
    : LPAREN! ( ID )? ( COMMA! ID )* RPAREN!
                { ## = #( #[NPPdefineArgs], ## );}
    ;

ppinclude
    : ( PPinclude^ LT ) => PPinclude^ LT! ( ~(GT) )+ GT!
    | PPinclude^ StringLiteral
    ;

ppif
    // need to do lookahead because "#if", "#ifdef", and "#ifndef" are the same
for k==3
    : ( ( PPifndef ) => PPifndef^ | ( PPifdef ) => PPifdef^ | ( PPif ) => PPif^
)
            ppexpr ( ppline )+ ( ppelif )* ( ppelse )? PPendif!
    ;

/*
ppifdef
    // we could use "ID" instead of ppexpr below, but this way it's easier
    // to work with the AST
    : PPifdef^ ppexpr ( ppline )+ ( ppelif )* ( ppelse )? PPendif!
    ;
*/

ppelif
    : PPelif! ppexpr ( ppline )*
                { ## = #( #[NPPelif], ## );}
    ;

ppelse
    : PPelse! ( ppline )*
                { ## = #( #[NPPelse], ## );}
    ;

ppexpr
    : ppAndExpr ( LOR^ ppAndExpr )*
                { ## = #( #[NPPexpr], ## );}
    ;

ppAndExpr
    : ppNotExpr ( LAND^ ppNotExpr )*
    ;

ppNotExpr
    : ( LNOT^ )? ppExprTerminal
    ;

ppExprTerminal
    : ( PPDEFINED ) => PPDEFINED^ LPAREN! ID RPAREN!
    | ID
    | Number
    ;

> - Should the preprocessor parser be a syntaxical parser (with 
> productions like active/incative lines, start and end of includes, ...), 
> or a lexical parser ?

People generally call them a "lexer" and a "parser", and ANTLR generates
both from a single grammar. The rules above are parser rules. You'll also
need to add these lexer rules:
PPDEFINED       : "defined";
PPdefine    : "#define" ;
PPif        : "#if" ;
PPelse      : "#else" ;
PPelif      : "#elif" ;
PPendif     : "#endif" ;
PPinclude   : "#include" ;
PPifdef     : "#ifdef" ;
PPifndef    : "#ifndef";


and these "imaginary tokens":
        |       NPPblock
        |       NPPline
        |       NPPelif
        |       NPPelse

> -  What should this preprocessor parser return ? 
>    - A list of tokens (with their channel set to hidden / visible) (is 
> it possible for a grammatical parser to return a token list) ?
>    - A tree structure with the structure of the file ?
>    - Something other ?

If you just enhance the C parser to handle preprocessor directives like this,
the preprocessor stuff will just show up as nodes in your C parser's AST.

> 
> Other questions about the C grammar parser:
> 
> In the reference book (The Definitive ANTLR Reference: Building Domain 
> Specific languages), I read that an AST should not contain syntax-only 
> tokens, like the ';' statement separator, parentheses used to change 
> operation precedence ...  I do not understand why  an AST should not 
> contain such tokens.  I suppose they are just useless in an AST.  Are 
> there other reasons ?

No, just that they're useless. Note that the "cgram" ANTLR grammar
does put a lot of these useless tokens in the AST. I usually find it
easier to just ignore them when processing the AST, rather than futzing with
the grammar to stop them from from going into the AST.

> 
> This book is well written, but I'm not sure to be able to select the 
> best choice  between AST, Tree, custom made structures ...

Start by using AST, then if/when you start needing features that AST doesn't have,
subclass it.

> 
> If the AST is not the good structure to return the parsed grammar to the 
> caller, I suppose I could use custom made structures.  But is that the 
> best choice ?

AST certainly has the basic tree operations that you'll need, so don't
start from scratch. Subclass AST as needed.
> 
> I do not understand very well the differences between an abstract tree 
> and a concrete tree (I'm really a newbie ...). 
> Some hints about these differences are welcome.

The AST is the essence of the parsed source code, stored in a tree-like
data structure. Don't worry about a concrete tree, you won't be using it.
> 
> 
> Thanks for your replies,
> 
> Vincent De Groote

Your task is far harder than it looks.
I'm currently working on a thing that just adds "printf" calls 
after every assignment in C code. It's quite amazing how 
difficult it is, especially after seeing how easy it is
for "C-" in the book. 

The outputting of formatted code will be the easy part.
You can either use a treewalker or my "by hand" approach:
http://www.jazillian.com/antlr/emitter.html

Good luck. 
Andy



From s.barnett-cormack at lancaster.ac.uk  Wed Mar 18 11:26:37 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 18 Mar 2009 18:26:37 +0000
Subject: [antlr-interest] Antlr to BNF
In-Reply-To: <93BD0000E4D72D458F0E8CDE6BA971A80BC3057E@CINMLVEM11.e2k.ad.ge.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BC3057E@CINMLVEM11.e2k.ad.ge.com>
Message-ID: <49C13CDD.2040506@lancaster.ac.uk>

Stevenson, Todd (GE Healthcare, consultant) wrote:
> I am looking for a utility to convert an Antlr grammar to a nice BNF
> document that I can use in my documentation.   Does one exist?  I poked
> around on the antlr site and the internet and couldn't see anything. I
> don't want to have to build one if I don't have to.

Well, strip out all the tree building, actions, etc, and you've got a
plain text version of the EBNF grammar... then you could just use a tool
to prettify it (convert it to whatever you like to do such things in -
LaTeX or whatever).

Of course, if you want pure BNF rather than EBNF, it's a bigger job...

Sam

From jimi at temporal-wave.com  Wed Mar 18 11:34:37 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Mar 2009 11:34:37 -0700
Subject: [antlr-interest] Antlr to BNF
In-Reply-To: <49C13CDD.2040506@lancaster.ac.uk>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BC3057E@CINMLVEM11.e2k.ad.ge.com>
	<49C13CDD.2040506@lancaster.ac.uk>
Message-ID: <49C13EBD.7000907@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090318/e19d4da3/attachment.html 

From parrt at cs.usfca.edu  Wed Mar 18 12:22:24 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Mar 2009 12:22:24 -0700
Subject: [antlr-interest] Antlr to BNF
In-Reply-To: <49C13EBD.7000907@temporal-wave.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BC3057E@CINMLVEM11.e2k.ad.ge.com>
	<49C13CDD.2040506@lancaster.ac.uk>
	<49C13EBD.7000907@temporal-wave.com>
Message-ID: <0DD80115-AC28-4DC8-B988-E633CD1E40C7@cs.usfca.edu>

org.antlr.tool.Strip is better; leaves source formatting.
T
On Mar 18, 2009, at 11:34 AM, Jim Idle wrote:

> Sam Barnett-Cormack wrote:
>>
>> Stevenson, Todd (GE Healthcare, consultant) wrote:
>>
>>> I am looking for a utility to convert an Antlr grammar to a nice BNF
>>> document that I can use in my documentation.   Does one exist?  I  
>>> poked
>>> around on the antlr site and the internet and couldn't see  
>>> anything. I
>>> don't want to have to build one if I don't have to.
>>>
>> Well, strip out all the tree building, actions, etc, and you've got a
>> plain text version of the EBNF grammar... then you could just use a  
>> tool
>> to prettify it (convert it to whatever you like to do such things  
>> in -
>> LaTeX or whatever).
>>
> The -print option of the ANTLR tool will do that of course.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From des at deshartman.com  Wed Mar 18 13:58:25 2009
From: des at deshartman.com (Des Hartman)
Date: Thu, 19 Mar 2009 07:58:25 +1100
Subject: [antlr-interest] Tree rewrite bug in Actionscript
Message-ID: <8773d42e0903181358o280ab40s43366d9e52d297b1@mail.gmail.com>

George,

I decided to go and learn how Tree rewrite works and followed the examplae
Terrence gives at http://www.antlr.org/wiki/display/ANTLR3/Tree+construction.
I compiled and tested the Java version without any hassles and then I took
just the first grammar and tree rewrite to test with. I rewrote it in
actionscript and I have attached the two .g files.

When testing I hit a few errors:

1) When I do not have   "rewrite=true;" in the Tree file, all compiles fine
without errors (See PolyDifferentiator - works.as file)
2) When I have   "rewrite=true;" I get a heap of extra bracket errors and
also a type mismatch. See PolyDifferentiator.as file). I have commented the
lines where I get the extra bracket errors and finally the mismatch types.

It seems there is a problem with rewrite in AS. When I remove the rewrite, I
can compile the tree file and the example works fine.

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/35ecdff0/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Poly.g
Type: application/octet-stream
Size: 468 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/35ecdff0/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PolyDifferentiator.g
Type: application/octet-stream
Size: 863 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/35ecdff0/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PolyDifferentiator - works.as
Type: application/octet-stream
Size: 22313 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/35ecdff0/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PolyDifferentiator.as
Type: application/octet-stream
Size: 24676 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/35ecdff0/attachment-0003.obj 

From des at deshartman.com  Wed Mar 18 14:52:34 2009
From: des at deshartman.com (Des Hartman)
Date: Thu, 19 Mar 2009 08:52:34 +1100
Subject: [antlr-interest] Tree - Replace nodes in tree
Message-ID: <8773d42e0903181452j3e89e41eq4eb3ac66b44e8399@mail.gmail.com>

Is there a way that I can replace nodes in a tree with rewrite? I need to
completely replace the node and its child with a new node and child.
Something like:

LREF NAME -> ^(IREF NUM)

In effect replacing A with 1. I tried the above, but it seems to create a
child node of LREF.


Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/5f9baac1/attachment.html 

From michael.bedward at gmail.com  Wed Mar 18 17:12:12 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Thu, 19 Mar 2009 11:12:12 +1100
Subject: [antlr-interest] Tree - Replace nodes in tree
In-Reply-To: <8773d42e0903181452j3e89e41eq4eb3ac66b44e8399@mail.gmail.com>
References: <8773d42e0903181452j3e89e41eq4eb3ac66b44e8399@mail.gmail.com>
Message-ID: <e24c4c270903181712g37139c89o703bfffe1ad148dc@mail.gmail.com>

Hello Des,

It's no problem to do this in a tree grammar.  For instance, here is
an example from one of my tree grammars

expr            : ^(ASSIGN assign_op var expr)
                  -> {isImageVar($var.text)}? ^(IMAGE_WRITE var expr)
                  -> ^(ASSIGN assign_op var expr)

Here I replace an ASSIGN node with an IMAGE_WRITE node conditional on
the result of a lookup in the predicate.

Michael

From bernard at ballesta.fr  Thu Mar 19 04:16:55 2009
From: bernard at ballesta.fr (bernard at ballesta.fr)
Date: Thu, 19 Mar 2009 12:16:55 +0100
Subject: [antlr-interest] Example of lazy evaluation in string templates ?
Message-ID: <49C229A7.1020408@ballesta.fr>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/92711ed3/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: bernard.vcf
Type: text/x-vcard
Size: 291 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/92711ed3/attachment.vcf 

From michael at pasdziernik.net  Thu Mar 19 07:55:01 2009
From: michael at pasdziernik.net (Michael Pasdziernik)
Date: Thu, 19 Mar 2009 15:55:01 +0100
Subject: [antlr-interest] gunit with custom AST nodes
Message-ID: <200903191555.01985.michael@pasdziernik.net>

Hi,
I have some problems using gUnit with a custom tree class. I have tried to 
patch gunit as described in the corresponding thread from march 2008 but
with no success. The error I get is:

java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree cannot be cast 
to ast.AstTree

thanks
Michael

From ToddStevenson at ge.com  Thu Mar 19 10:06:32 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Thu, 19 Mar 2009 13:06:32 -0400
Subject: [antlr-interest] Default behavior for string templates when no
	template is defined for a given production?
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80BC310EB@CINMLVEM11.e2k.ad.ge.com>

What is the default behavior when for string templates when no template
rule is defined for a given production?
 
I have the following grammar and when I run this grammar I get no
StringTemplate back from the parse (parser_return.st == null).  However,
when I tried this grammar with 'rewrite=true' and the associated java
changes, it worked just fine.
 
 
grammar Expr;
 
options {
output=template;
}
 
prog 
    : stat+
    ;
 
stat 
    : expr ';' 
    | ID '=' expr ';' -> template(x={$ID.text},y={$expr.text}) "<x> :=
<y>;"
    | ';'
    ;
 
expr 
    : multExpr (( '+' | '-' ) multExpr)*
    ;
 
 
multExpr
    : atom ( '*' atom)*
    ;
 
atom
    : INT
    | ID
    | '(' expr ')'
    ;
 
    ID : ('a'..'z'|'A'..'Z')+ ;

INT : '0'..'9'+ ;

SEMI : ';' ;

WS : (' ' | '\t' | '\n' | '\r' )+ {$channel=HIDDEN;} ;

 

The associated java code is:

ANTLRInputStream input = new ANTLRInputStream(System.in);
ExprLexer lexer = new ExprLexer(input);
CommonTokenStream tokens = new CommonTokenStream(lexer);
ExprParser parser = new ExprParser(tokens);
ExprParser.prog_return r = parser.prog();
System.out.println(r.st.toString());
 
 

The java code I used with the 'rewrite=true' option:

ANTLRInputStream input = new ANTLRInputStream(System.in);
ExprLexer lexer = new ExprLexer(input);
TokenRewriteStream tokens = new TokenRewriteStream(lexer);
ExprParser parser = new ExprParser(tokens);
ExprParser.prog_return r = parser.prog();
System.out.println(tokens.toString());

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/0c9470f9/attachment.html 

From parrt at cs.usfca.edu  Thu Mar 19 10:29:40 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Mar 2009 10:29:40 -0700
Subject: [antlr-interest] Example of lazy evaluation in string templates
	?
In-Reply-To: <49C229A7.1020408@ballesta.fr>
References: <49C229A7.1020408@ballesta.fr>
Message-ID: <6591AB1C-DE22-4DB5-A0E6-93F23A3AB205@cs.usfca.edu>

hi.  ST uses lazy evaluation in the sense that you can reference any  
attribute or template without concern that it will be evaluated until  
"the end" (ie., when you call toString()). This allows you to  
gradually fill in attributes as it's convenient to compute the as  
opposed to when the template references them. the key is to decouple  
the order of the output from the order of attribute computation. You  
also want to build up the overall output template in any order you  
want without concern that things will be evaluated too soon.

This is sort of a poor man's lazy evaluation in the sense that it  
doesn't do any dependency graph between values. It simply says make  
sure that all your values are set before calling toString.

  does that help?

Ter

On Mar 19, 2009, at 4:16 AM, bernard at ballesta.fr wrote:

> Hi,
>
> Does someone know of a real example of lazy evaluation in string  
> templates used in conjunction with a grammar or tree grammar.
>
> Best regards
> Bernard
> <bernard.vcf>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Thu Mar 19 10:30:34 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Mar 2009 10:30:34 -0700
Subject: [antlr-interest] Default behavior for string templates when no
	template is defined for a given production?
In-Reply-To: <93BD0000E4D72D458F0E8CDE6BA971A80BC310EB@CINMLVEM11.e2k.ad.ge.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BC310EB@CINMLVEM11.e2k.ad.ge.com>
Message-ID: <C5F1C471-7562-43AA-96DB-6FA46F586B8B@cs.usfca.edu>


On Mar 19, 2009, at 10:06 AM, Stevenson, Todd (GE Healthcare,  
consultant) wrote:

> What is the default behavior when for string templates when no  
> template rule is defined for a given production?

You currently get no output/template for that production.

rewrite=true means that it will alter the associated input as you give  
the templates rather than build up a big one and return it from the  
start symbol.

Ter
>
> I have the following grammar and when I run this grammar I get no  
> StringTemplate back from the parse (parser_return.st == null).   
> However, when I tried this grammar with 'rewrite=true' and the  
> associated java changes, it worked just fine.
>
>
> grammar Expr;
>
> options {
> output=template;
> }
>
> prog
>     : stat+
>     ;
>
> stat
>     : expr ';'
>     | ID '=' expr ';' -> template(x={$ID.text},y={$expr.text})  
> "<x> := <y>;"
>     | ';'
>     ;
>
> expr
>     : multExpr (( '+' | '-' ) multExpr)*
>     ;
>
>
> multExpr
>     : atom ( '*' atom)*
>     ;
>
> atom
>     : INT
>     | ID
>     | '(' expr ')'
>     ;
>
>     ID : ('a'..'z'|'A'..'Z')+ ;
>
> INT : '0'..'9'+ ;
>
> SEMI : ';' ;
>
> WS : (' ' | '\t' | '\n' | '\r' )+ {$channel=HIDDEN;} ;
>
>
> The associated java code is:
>
> ANTLRInputStream input = new ANTLRInputStream(System.in);
> ExprLexer lexer = new ExprLexer(input);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> ExprParser parser = new ExprParser(tokens);
> ExprParser.prog_return r = parser.prog();
> System.out.println(r.st.toString());
>
>
> The java code I used with the 'rewrite=true' option:
>
> ANTLRInputStream input = new ANTLRInputStream(System.in);
> ExprLexer lexer = new ExprLexer(input);
> TokenRewriteStream tokens = new TokenRewriteStream(lexer);
> ExprParser parser = new ExprParser(tokens);
> ExprParser.prog_return r = parser.prog();
> System.out.println(tokens.toString());
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From behdad.forghani at samsarasol.com  Thu Mar 19 11:00:51 2009
From: behdad.forghani at samsarasol.com (Behdad Forghani)
Date: Thu, 19 Mar 2009 14:00:51 -0400
Subject: [antlr-interest] Antlr Error Message
Message-ID: <1237485651.10858.8.camel@behdad-laptop>

Hello,

Has anybody seen this error before?
Exception in thread "main" java.lang.RuntimeException: more than one
node as root (TODO: make exception hierarchy)
	at
org.antlr.runtime.tree.BaseTreeAdaptor.becomeRoot(BaseTreeAdaptor.java:150)

The first rule of the grammar is:
moduleDefinitions :
	moduleDefinition+;

So, I do not think I have more than one root node.

In AntlrWorks I get a different error:
 javax.swing.text.BadLocationException: Position not represented by view
	at javax.swing.text.CompositeView.modelToView(CompositeView.java:258)
	at javax.swing.text.BoxView.modelToView(BoxView.java:467)
	at javax.swing.plaf.basic.BasicTextUI
$RootView.modelToView(BasicTextUI.java:1497)
	at
javax.swing.plaf.basic.BasicTextUI.modelToView(BasicTextUI.java:1035)
	at
javax.swing.plaf.basic.BasicTextUI.modelToView(BasicTextUI.java:1010)
	at
javax.swing.text.JTextComponent.modelToView(JTextComponent.java:1400)
	at org.antlr.works.debugger.input.DBInputProcessorToken$1.run(Unknown
Source)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:597)
	at
java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)
	at
java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)
	at
java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)
	at
java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)
	at
java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)


Thanks


From behdad.forghani at samsarasol.com  Thu Mar 19 11:50:15 2009
From: behdad.forghani at samsarasol.com (Behdad Forghani)
Date: Thu, 19 Mar 2009 14:50:15 -0400
Subject: [antlr-interest] Antlr Error Message
In-Reply-To: <1237485651.10858.8.camel@behdad-laptop>
References: <1237485651.10858.8.camel@behdad-laptop>
Message-ID: <1237488615.10858.62.camel@behdad-laptop>

I fixed the problem. I was making to alternatives as the root of the
tree. I think one of the sides had more than one node. The problem was
in the rule:
type:
(^builtinType | ^referencedType) constraint?;
I rewrote it as:
type:
(builtinType | referencedType) constraint?->^(TYPE ^(BUILTIN_TYPE
builtinType) ^(REFERENCED_TYPE referencedType) constraint?);

Since I am going to do the first pass with Antlr, I do not mind the
extra tokens.


On Thu, 2009-03-19 at 14:00 -0400, Behdad Forghani wrote:
> Hello,
> 
> Has anybody seen this error before?
> Exception in thread "main" java.lang.RuntimeException: more than one
> node as root (TODO: make exception hierarchy)
> 	at
> org.antlr.runtime.tree.BaseTreeAdaptor.becomeRoot(BaseTreeAdaptor.java:150)
> 
> The first rule of the grammar is:
> moduleDefinitions :
> 	moduleDefinition+;
> 
> So, I do not think I have more than one root node.
> 
> In AntlrWorks I get a different error:
>  javax.swing.text.BadLocationException: Position not represented by view
> 	at javax.swing.text.CompositeView.modelToView(CompositeView.java:258)
> 	at javax.swing.text.BoxView.modelToView(BoxView.java:467)
> 	at javax.swing.plaf.basic.BasicTextUI
> $RootView.modelToView(BasicTextUI.java:1497)
> 	at
> javax.swing.plaf.basic.BasicTextUI.modelToView(BasicTextUI.java:1035)
> 	at
> javax.swing.plaf.basic.BasicTextUI.modelToView(BasicTextUI.java:1010)
> 	at
> javax.swing.text.JTextComponent.modelToView(JTextComponent.java:1400)
> 	at org.antlr.works.debugger.input.DBInputProcessorToken$1.run(Unknown
> Source)
> 	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)
> 	at java.awt.EventQueue.dispatchEvent(EventQueue.java:597)
> 	at
> java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)
> 	at
> java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)
> 	at
> java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)
> 	at
> java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)
> 	at
> java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)
> 	at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)
> 
> 
> Thanks
> 


From sharwell at pixelminegames.com  Thu Mar 19 12:59:08 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 19 Mar 2009 14:59:08 -0500
Subject: [antlr-interest] Small example of local variable semantic analysis
	for an IDE
Message-ID: <86403CA0939415448BCCB83855EFE09AA67B9B@Bloodymary.ironwillgames.com>

For those of you that don't want to read this long message, a screenshot
of what I did is at the end of this message. Syntax highlighting is
available if you read this message in HTML format, and there is a lot of
code so it's probably helpful to do so. :) This code isn't optimal, but
it shows how I was able to drop in some useful messages in Visual Studio
in about 20 minutes from when I decided to try it. My goal was to detect
and report the following items. Since my first task is getting feedback
about the new features from our users, it was more important to "show
the possibilities" with a simple implementation than have a perfect
analysis.

 

*         Unreferenced local variables

*         Local variables that are assigned but not used

*         Local variables that are referenced before they are
initialized

 

I started by adding a scope to the functionBlock rule in my tree walker
that keeps track of the first time each local is initialized and
referenced.

 

functionBlock

scope

{

        // store the first location where the local is initialized

        Dictionary<CommonToken, CommonToken> initializedLocals;

        // store the first location where the local is referenced

        Dictionary<CommonToken, CommonToken> referencedLocals;

}

@init

{

        $functionBlock::initializedLocals = new Dictionary<CommonToken,
CommonToken>();

        $functionBlock::referencedLocals = new Dictionary<CommonToken,
CommonToken>();

}

@after

{

        CheckVariableUsage();

}

 

Assuming these are properly manipulated (which I'll show in a bit), the
CheckVariableUsage() function is quickly implemented like this. Note the
comments about some (big) remaining issues; also keep in mind the
language is case-insensitive.

 

void CheckVariableUsage()

{

    var scope = functionBlock_stack.Peek();

    var referencedLocals = scope.referencedLocals;

    var initializedLocals = scope.initializedLocals;

 

    // check for unreferenced local variables

    foreach ( var unreferencedLocal in referencedLocals.Where( local =>
local.Value == null && initializedLocals[local.Key] == null ) )

    {

        // this warning is positioned at the declaration

        AddWarning( string.Format( "'{0}' : unreferenced local
variable", unreferencedLocal.Key.Text.ToUpperInvariant() ),
unreferencedLocal.Key );

    }

    // now check referenced but not initialized

    // TODO: this needs to handle right-to-left operators (r = r + 3;)
and check whether the initialization occurred before the reference

    // TODO: this should be a better check inside conditional blocks

    foreach ( var referencedLocal in referencedLocals.Where( local =>
local.Value != null && initializedLocals[local.Key] == null ) )

    {

        // this warning is positioned at the first usage of the
uninitialized variable

        AddWarning( string.Format( "'{0}' : local variable not
initialized before use", referencedLocal.Key.Text.ToUpperInvariant() ),
referencedLocal.Value );

    }

    // now check assigned but not used

    foreach ( var unreferencedLocal in referencedLocals.Where( local =>
local.Value == null && initializedLocals[local.Key] != null ) )

    {

        // this warning is positioned at the declaration

        AddWarning( string.Format( "'{0}' : local variable assigned but
not used", unreferencedLocal.Key.Text.ToUpperInvariant() ),
unreferencedLocal.Key );

    }

    // TODO: check for assignment to self

}

 

When the tree walker encounters a variable declaration, it adds the
declaration token to the list of variables for the functionBlock.

 

functionLocal

scope

{

        CommonToken name;

}

        :       ^(

                        UK_LOCAL

                        varType

                        docComment

                        (

                                // the scope variable 'name' is
initialized in localNameAndDim so I

                                // can handle combined declarations like
"int i, j;"

                                localNameAndDim

                                {

 
$functionBlock::referencedLocals.Add( $functionLocal::name, null );

 
$functionBlock::initializedLocals.Add( $functionLocal::name, null );

                                }

                        )+

                )

        ;

 

The actual analysis is then handled after the tree walker parses an
expression.

 

expression

@after

{

        CheckLocalReferences( $start );

}

        :       // stuff goes here

        ;

 

void CheckLocalReferences( CommonTree tree )

{

    string varname = tree.Token.Text;

    CommonToken vartoken = null;

    if ( functionBlock_stack.Count > 0 )

    {

        var scope = functionBlock_stack.Peek();

        vartoken = scope.referencedLocals.Keys.FirstOrDefault( local =>
local.Text.Equals( varname, StringComparison.OrdinalIgnoreCase ) );

    }

 

    // return if no variable matches the name of this expression token

    if ( vartoken == null )

        return;

 

    // make sure we don't treat 'someObject.i' as a reference to local
variable 'i'

    if ( tree.Parent.Type != UcGrammarLexer.AST_MEMBER ||
tree.ChildIndex == 0 )

    {

        bool assignment = false;

        switch ( tree.Parent.Type )

        {

        // include all of the language's assignment operators

        // TODO: check for initialization via 'out' parameters of
function calls

        case UcGrammarLexer.EQ:

        case UcGrammarLexer.PLUSEQ:

        case UcGrammarLexer.MINUSEQ:

        case UcGrammarLexer.TIMESEQ:

            if ( tree.ChildIndex == 0 )

            {

                assignment = true;

                if (
functionBlock_stack.Peek().initializedLocals[vartoken] == null )

 
functionBlock_stack.Peek().initializedLocals[vartoken] =
(CommonToken)tree.Token;

            }

 

            break;

 

        default:

            break;

        }

 

        if ( !assignment &&
functionBlock_stack.Peek().referencedLocals[vartoken] == null )

            functionBlock_stack.Peek().referencedLocals[vartoken] =
(CommonToken)tree.Token;

    }

}

 

And here is the result:

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/bcadd748/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 27417 bytes
Desc: image001.png
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090319/bcadd748/attachment.png 

From yimm8369 at hotmail.com  Thu Mar 19 14:30:36 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Fri, 20 Mar 2009 05:30:36 +0800
Subject: [antlr-interest] How can I use 3 predicates in one rule?
In-Reply-To: <1237488615.10858.62.camel@behdad-laptop>
References: <1237485651.10858.8.camel@behdad-laptop>
	<1237488615.10858.62.camel@behdad-laptop>
Message-ID: <BAY122-W34F7A86DC537123BE61CDADB960@phx.gbl>


 

Hi ,

 

What I want todo is to change Math.ceil(1.5),Math.floor(1.5) and Math.abs(1.5) to int(1.5), int(1.5) +1 and nn<0?nn*-1:n.

 

Why I can not use 3 predicates together? What is the right format to do this?


 

callExpression
    : ^(CALL_EXPRESSION memberExpression indexSuffix * propertyReferenceSuffix* argumentSuffix*)  
    ({$memberExpression.text.equals("Math.ceil")}? ->mathceil(x={"int"},y={$argumentSuffix.text}))
    ({$memberExpression.text.equals("Math.abs")}? ->mathabs(x={$argumentSuffix.text},y={"<0?"},z={"* -1 :"}))
    ({$memberExpression.text.equals("Math.floor")}? ->mathfloor(x={"int"},y={$argumentSuffix.text})
    ;

 

Thanks.

 

Annie

_________________________________________________________________
MSN??????????????????MSN???
http://im.live.cn/safe/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/93817026/attachment.html 

From parrt at cs.usfca.edu  Thu Mar 19 14:37:57 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Mar 2009 14:37:57 -0700
Subject: [antlr-interest] How can I use 3 predicates in one rule?
In-Reply-To: <BAY122-W34F7A86DC537123BE61CDADB960@phx.gbl>
References: <1237485651.10858.8.camel@behdad-laptop>
	<1237488615.10858.62.camel@behdad-laptop>
	<BAY122-W34F7A86DC537123BE61CDADB960@phx.gbl>
Message-ID: <8DC91744-70E5-4142-B4DF-7FC4E888E9A1@cs.usfca.edu>

last one must not have predicate
Ter
On Mar 19, 2009, at 2:30 PM, YINGAnnie wrote:

>
> Hi ,
>
> What I want todo is to change Math.ceil(1.5),Math.floor(1.5) and  
> Math.abs(1.5) to int(1.5), int(1.5) +1 and nn<0?nn*-1:n.
>
> Why I can not use 3 predicates together? What is the right format to  
> do this?
>
>
> callExpression
>     : ^(CALL_EXPRESSION memberExpression indexSuffix *  
> propertyReferenceSuffix* argumentSuffix*)
>     ({$memberExpression.text.equals("Math.ceil")}? - 
> >mathceil(x={"int"},y={$argumentSuffix.text}))
>     ({$memberExpression.text.equals("Math.abs")}? - 
> >mathabs(x={$argumentSuffix.text},y={"<0?"},z={"* -1 :"}))
>     ({$memberExpression.text.equals("Math.floor")}? - 
> >mathfloor(x={"int"},y={$argumentSuffix.text})
>     ;
>
> Thanks.
>
> Annie
>
> ????? Windows Live Messenger ???????? ?????
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From yimm8369 at hotmail.com  Thu Mar 19 16:17:09 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Fri, 20 Mar 2009 07:17:09 +0800
Subject: [antlr-interest] How can I use 3 predicates in one rule?
In-Reply-To: <8DC91744-70E5-4142-B4DF-7FC4E888E9A1@cs.usfca.edu>
References: <1237485651.10858.8.camel@behdad-laptop>
	<1237488615.10858.62.camel@behdad-laptop>
	<BAY122-W34F7A86DC537123BE61CDADB960@phx.gbl>
	<8DC91744-70E5-4142-B4DF-7FC4E888E9A1@cs.usfca.edu>
Message-ID: <BAY122-W25776B4F1092DF75200BE5DB960@phx.gbl>


 

you mean something like this?

 

callExpression
    : ^(CALL_EXPRESSION memberExpression indexSuffix * propertyReferenceSuffix* argumentSuffix*)  
    ({$memberExpression.text.equals("Math.ceil")}? ->mathceil(x={"int"},y={$argumentSuffix.text}))
    ({$memberExpression.text.equals("Math.abs")}? ->mathabs(x={$argumentSuffix.text},y={"<0?"},z={"* -1 :"}))
     ->mathfloor(x={"int"},y={$argumentSuffix.text})
    ;

 

It seems does not work.

 

if I use input like this:

 

var v1:Number=Math.ceil(1.5);
var v2:Number=Math.floor(1.5);
var v3:Number=Math.abs(1.5);

 

the output is:

 

var v1:Number=int(1.5);
var v2:Number=Math.floor(1.5);
var v3:Number=Math.abs(1.5);

 

So it seems only the first predicate works.

 

By the way , there is a warning.

 

(153): with rewrite=true, alt 1 not simple node or obvious tree element; text attribute for rule not guaranteed to be correct


 

 

Thanks

 

Annie

 

 

 
> CC: antlr-interest at antlr.org
> From: parrt at cs.usfca.edu
> To: yimm8369 at hotmail.com
> Subject: Re: [antlr-interest] How can I use 3 predicates in one rule?
> Date: Thu, 19 Mar 2009 14:37:57 -0700
> 
> last one must not have predicate
> Ter
> On Mar 19, 2009, at 2:30 PM, YINGAnnie wrote:
> 
> >
> > Hi ,
> >
> > What I want todo is to change Math.ceil(1.5),Math.floor(1.5) and 
> > Math.abs(1.5) to int(1.5), int(1.5) +1 and nn<0?nn*-1:n.
> >
> > Why I can not use 3 predicates together? What is the right format to 
> > do this?
> >
> >
> > callExpression
> > : ^(CALL_EXPRESSION memberExpression indexSuffix * 
> > propertyReferenceSuffix* argumentSuffix*)
> > ({$memberExpression.text.equals("Math.ceil")}? - 
> > >mathceil(x={"int"},y={$argumentSuffix.text}))
> > ({$memberExpression.text.equals("Math.abs")}? - 
> > >mathabs(x={$argumentSuffix.text},y={"<0?"},z={"* -1 :"}))
> > ({$memberExpression.text.equals("Math.floor")}? - 
> > >mathfloor(x={"int"},y={$argumentSuffix.text})
> > ;
> >
> > Thanks.
> >
> > Annie
> >
> > ????? Windows Live Messenger ???????? ?????
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/7d6eec3d/attachment.html 

From michael.bedward at gmail.com  Thu Mar 19 18:36:11 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 20 Mar 2009 12:36:11 +1100
Subject: [antlr-interest] Small example of local variable semantic
	analysis for an IDE
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67B9B@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09AA67B9B@Bloodymary.ironwillgames.com>
Message-ID: <e24c4c270903191836o459cf4c5v33314a264aa43498@mail.gmail.com>

Thanks for posting this Sam !  I want to do some editor-related ANTLR
work soon so it's nice to have your example.

cheers
Michael

From des at deshartman.com  Thu Mar 19 18:51:18 2009
From: des at deshartman.com (Des Hartman)
Date: Fri, 20 Mar 2009 12:51:18 +1100
Subject: [antlr-interest] CommonTree between target languages
Message-ID: <8773d42e0903191851u1ac4c935qdeab001c3f0ec814@mail.gmail.com>

This is a question that I suspect the answer is No, but I thought I'd ask
anyway.

If I have two implementations of ANTLR in different languages; ActionScript
and Java, Is there a way that I can share the AST Tree (CommonTree) Objects
between them?

Idea is I enter a formula in a Flex application and do the parsing to AST
using Actionscript. Once done I send the CommonTree objects to the server
and this is based on Java. Here the server uses the same AST to then repeat
the calculations on a much greater dataset.

Thanks
Des
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/2f45c2a5/attachment.html 

From des at deshartman.com  Thu Mar 19 18:55:25 2009
From: des at deshartman.com (Des Hartman)
Date: Fri, 20 Mar 2009 12:55:25 +1100
Subject: [antlr-interest] Tree - Replace nodes in tree
In-Reply-To: <e24c4c270903181712g37139c89o703bfffe1ad148dc@mail.gmail.com>
References: <8773d42e0903181452j3e89e41eq4eb3ac66b44e8399@mail.gmail.com>
	<e24c4c270903181712g37139c89o703bfffe1ad148dc@mail.gmail.com>
Message-ID: <8773d42e0903191855h6decf6b4q7935b21656ab8951@mail.gmail.com>

Michael

Thanks I got it sorted. Here is what I ended up doing, but at the parser
level.

@members {
 //============= Stub Code ===================================
    public function getInternalReference(local:String):Object {return null;}
}

localRefExpression
    : NAME { var iref:String = String(getInternalReference($NAME)); } ->
^(IREF NUMBER[iref])
    ;


This effectively matches a NAME and converts it to IREF NUMBER, with the
number derived from calling a overridden method to get the number based on
the letter used.

;-D



Thanks
Des



2009/3/19 Michael Bedward <michael.bedward at gmail.com>

> Hello Des,
>
> It's no problem to do this in a tree grammar.  For instance, here is
> an example from one of my tree grammars
>
> expr            : ^(ASSIGN assign_op var expr)
>                  -> {isImageVar($var.text)}? ^(IMAGE_WRITE var expr)
>                  -> ^(ASSIGN assign_op var expr)
>
> Here I replace an ASSIGN node with an IMAGE_WRITE node conditional on
> the result of a lookup in the predicate.
>
> Michael
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/3327bf2e/attachment.html 

From michael at pasdziernik.net  Fri Mar 20 01:41:43 2009
From: michael at pasdziernik.net (Michael Pasdziernik)
Date: Fri, 20 Mar 2009 09:41:43 +0100
Subject: [antlr-interest] gunit with custom AST nodes
In-Reply-To: <200903191555.01985.michael@pasdziernik.net>
References: <200903191555.01985.michael@pasdziernik.net>
Message-ID: <200903200941.43448.michael@pasdziernik.net>

Hi,
It was the wrong class I tried to patch.
Since I am using the interpreter I had to manipulate gUnitExcecutor instead of 
gUnitBaseTest. I added

            MiniJavaOOParser mp = (MiniJavaOOParser) parObj;
            mp.setTreeAdaptor(new AstTreeAdaptor());

to the methods runParser and runTreeParser behind the parser constructor call.
Now it works :)

Regards
Michael

On Thursday 19 March 2009 15:55:01 Michael Pasdziernik wrote:
> Hi,
> I have some problems using gUnit with a custom tree class. I have tried to
> patch gunit as described in the corresponding thread from march 2008 but
> with no success. The error I get is:
>
> java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree cannot be
> cast to ast.AstTree
>
> thanks
> Michael
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From paul.bouche at nsn.com  Fri Mar 20 03:23:21 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Fri, 20 Mar 2009 11:23:21 +0100
Subject: [antlr-interest] Semantic Predicates in a Lexer
Message-ID: <49C36E99.5060308@nsn.com>

Hi,

I am asking the list because I am out of options, that is I still have 
an option but it is ugly.

My problem is that depending on context I want to lex the same sequence 
of characters differently. I have a NAME token which may contain a 
colon. But if set previously I want to distinguish the first NAME token 
into SIMPLENAME COLON SIMPLENAME . Therefore I introduced a SIMPLENAME 
token, a COLON token and a gated semantic predicate for both. The usual 
functionality of the lexer is that if a one token defintion is a subset 
of another but the subset deifntion comes first this is not a problem 
and will always win, i.e. the look ahead will predict the subset 
alternative if it comes first, if it does not come first a token can 
never be reached error will be emitted upon grammar generation, right?

The book says that a gated semantic predicate effectively disables an 
alternative and the look ahead will not see it, but this is not true. In 
my case the DFA still predicts the SIMPLENAME token, even though the 
semantic predicate is disabled and even worse I get a failed semantic 
predicate exception. Ok I thought predicated token definitions seem to 
be handled extra, so I need to cover the NAME definition with the 
negation of the predicate. Did so worked fine. But now, I have other 
token definitions like NUMBER which are a subset of NAME. Now NAME will 
always win because of the predicate - this is problematic because it 
disables the nice feature I described above. Of course I could now 
predicate all NAME subset token definitions, but this is really ugly - 
any other solutions?

Here is a lexer excerpt:
NUMBER : DIGIT_+;
SIMPLENAME: {noColonInNames}?=> LETTER_+;
COLON: {noColonInNames}?=> COLON_;
NAME: {!noColonInNames}?=> (LETTER_ | COLON_)+;
fragment DIGIT_: '0'..'9';
fragment LETTER_: 'a'..'z' | 'A'..'Z';

Thanks,
Paul

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From navarro_clau56 at yahoo.com.mx  Fri Mar 20 03:33:18 2009
From: navarro_clau56 at yahoo.com.mx (Claudia Navarro Gonzalez)
Date: Fri, 20 Mar 2009 03:33:18 -0700 (PDT)
Subject: [antlr-interest] =?utf-8?q?Post=3A_Grammars_and_StringTemplates?=
	=?utf-8?b?4oCP?=
Message-ID: <799758.75070.qm@web52611.mail.re2.yahoo.com>

Dear Antlr-Interest,

I'm
looking for orientation and help on String Templates and Grammars. I'll
try to give you some description of my problem, hope you can help me...

My
project is to use grammars and templates to generate a DocBook template
output and I have some questions about it. I'm new in using ANTLR and
StringTemplates, but I already made a lot of reading and examples, so
I'm already familiarized with the concept and the ANTLRWorks tool.?

The
thing I need to do is to create a DocBookTemplate.stg, based on the
Creole10.g, but I have a hard time thinking on how to do that. I
understand that for every rule in a grammar there will be a template,
as describe in the example of chapter 9 in the book "The Definitive
ANTLR Reference".?

(this is the example)
s??? :??? ID '=' INT ';' -> assign(x={$ID.text},y={$INT.text});

The
examples given in your book, are very simple for the project I'm
developing. My idea was to ask you for some help and orientation in
more complex examples. Like in the grammar of Creole10.g from Riehle,
we have several rules to create different stuff. As a first step, I
tried to start with the LIST section and wanted to output some DocBook
List tags such as:

<itemizedlist mark='opencircle'>
<listitem><para>Claudia</para>
<para>Leticia</para>
<para>Linda</para>
<para>Susy</para>
<para>Cecy</para>
<para>Adriana</para>
</listitem>
</itemizedlist>

I have my .stg file:

group list;

list(listContent) ::= <<
\<itemizedlist mark='opencircle'>
<listItem(listContent=listContent)>
\</item izedlist>
>>

listItem(listContent) ::= <<
\<listitem><listContent:{l|\<para><l>\</para><\n>}>\</listitem>
>>

This .stg will work in Java.

public static void CreateList() throws IOException?
??? {
???
??? final FileReader readerSuper = new FileReader("C:\\Documents and
Settings\\Admin\\My
Documents\\WORK\\Examples\\CreoleAttributes-ST\\List.stg");
??? ??? StringTemplateGroup groupFileSuper = new StringTemplateGroup(readerSuper);
??? ??? r eaderSuper.close();
??? ????
??? ??? final StringTemplate template = groupFileSuper.getInstanceOf("list");
??? ????
??? ??? ArrayList<String> myList = new ArrayList<String>();
??? ??? myList.add("Claudia");
??? ??? myList.add("Leticia");
? ?? ??? myList.add("Linda");
??? ??? myList.add("Susy");
??? ??? myList.add("Cecy");
??? ??? myList.add("Adriana");
??? ????
??? ??? template.setAttribute("listContent", myList);
??? ??? System.out.println(template.toString());
&nbs p;?? ????
??? }


But
I want to integrate it into the grammar "Creole10.g" like in the
examples given in your book, but I'm a little bit lost, on how to do it.

http://www.riehle.org/wp-content/uploads/2008/01/creole10_with_extension.g
/////////////////////////////////   L I S T   /////////////////////////////////

list_ord
	:	( list_ordelem )+  ( end_of_list )?
	;
list_ordelem
	:	list_ordelem_markup  list_elem
	;
list_unord
	:	( list_unordelem )+  ( end_of_list )?
	;
list_unordelem
	:	list_unordelem_markup  list_elem
	;
list_elem
	:	( list_elem_markup )*  list_elemcontent  list_elemseparator
	;
list_elem_markup
	:	list_ordelem_markup
	|	list_unordelem_markup
	;
list_elemcontent
	:	onestar  ( list_elemcontentpart  onestar )*
	;
list_elemcontentpart
	:	text_unformattedelement
	|	list_formatted_elem
	;
list_formatted_elem
	:	bold_markup  onestar  ( list_boldcontentpart  onestar )*
		( bold_markup )?
	|	ital_markup  onestar  ( list_italcontentpart  onestar )*
		( ital_markup )?
	;
list_boldcontentpart
	:	ital_markup  list_boldita
 lcontent  ( ital_markup )?
	|	( text_unformattedelement )+
	;
list_italcontentpart
	:	bold_markup  list_bolditalcontent  ( bold_markup )?
	|	( text_unformattedelement )+
	;
list_bolditalcontent
	:	( text_unformattedelement )+
	;

Perhaps I am on the wrong track
 , hope you could give a hint on how to begin creating my templates based on Creole10.g.
Or is there any other book, you recommend that I could read, and which contains more complex examples??

Any help will be appreciated, since I'm a little bit stuck... =S

Thanks in advance!!!!

Claudia Navarro Glz


__________________________________________________
Correo Yahoo!
Espacio para todos tus mensajes, antivirus y antispam ?gratis! 
Reg?strate ya - http://correo.yahoo.com.mx/ 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/1471341b/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Fri Mar 20 03:43:57 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 20 Mar 2009 10:43:57 +0000
Subject: [antlr-interest] CommonTree between target languages
In-Reply-To: <8773d42e0903191851u1ac4c935qdeab001c3f0ec814@mail.gmail.com>
References: <8773d42e0903191851u1ac4c935qdeab001c3f0ec814@mail.gmail.com>
Message-ID: <49C3736D.3060504@lancaster.ac.uk>

Des Hartman wrote:
> This is a question that I suspect the answer is No, but I thought I'd 
> ask anyway.
> 
> If I have two implementations of ANTLR in different languages; 
> ActionScript and Java, Is there a way that I can share the AST Tree 
> (CommonTree) Objects between them?
> 
> Idea is I enter a formula in a Flex application and do the parsing to 
> AST using Actionscript. Once done I send the CommonTree objects to the 
> server and this is based on Java. Here the server uses the same AST to 
> then repeat the calculations on a much greater dataset.

It's certainly possible in theory, but I don't know of any easy way. 
You'd probably need some degree of custom code for marshal/unmarshal of 
the the ActionScript objects in Java. If they were transmitted in some 
vaguely-standard format, like JSON or some form of XML, you might be 
able to use libraries to help with the Java handling, but direct 
object--object translation seems unlikely.

-- 
Sam Barnett-Cormack

From viridium at gmail.com  Fri Mar 20 05:34:44 2009
From: viridium at gmail.com (Mihai Danila)
Date: Fri, 20 Mar 2009 08:34:44 -0400
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <29424259.4391236671317344.JavaMail.root@star>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
Message-ID: <b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>

Thanks Indhu,
In the link you sent, you troubleshoot a slightly different, but the post
did help.

In my scenario, the lexer chooses a rule based on a prefix and fails to fall
back to try a collection of shorter tokens. The lexer doesn't go as far as
TOR before deciding simply because by the time a TO is read there is no
alternative to TO in lexer scope (except there would be if it wasn't greedy
as per my note below). Your indication about the longest possible token
policy has cleared it up for me. The only alternative to TODAY by the time
TO has been read is to create an alphanumeric out of alphanumericTokens, and
of course that is a parser rule and is therefore is outside of the lexer's
horizon. This must be the problem.

A question still remains. If the lexer cannot create a valid token without
dropping characters, shouldn't it fall back and try to produce smaller
tokens (which my grammar allows for, the smaller tokens being D and A) to
give a chance to the parser? Apparently, the lexer is prematurely moving
into an error state without noticing that a different token arrangement
would keep it in the green.


Mihai

On Tue, Mar 10, 2009 at 3:48 AM, Indhu Bharathi <indhu.b at s7software.com>wrote:

> Try this:
>
> Today: ( (Today_) => 'Today' ) ;
> fragment Today_
>     :    'Today'
>     ;
>
> However, I'm not sure if this's the most elegant way to fix it.
>
> Read the following thread to understand more on why exactly this happens:
> http://www.antlr.org/pipermail/antlr-interest/2009-February/032959.html
>
> - Indhu
>
>
> ----- Original Message -----
> From: Mihai Danila <viridium at gmail.com>
> To: antlr-interest at antlr.org
> Sent: Tuesday, March 10, 2009 6:30:43 AM GMT+0530 Asia/Calcutta
> Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
>
>
> Hi,
>
> I thought I had my DMQL grammar nailed after several months of no issues,
> until recently a query failed. I've already massaged the grammar in a few
> ways so I'm a bit at a loss as to what the problem is this time. Do I have
> to enumerate all the possible token prefixes (including TO, TOD, TODA, N,
> NO, A, AN, O) in the alphanumericToken rule to fix this one? Am I missing
> something?
>
> Here's the query:
> (f=I?TORO)
>
> If I debug this, here's what ANTLR parses:
> (f=I?O)
>
> Here's the grammar:
> grammar Dmql;
>
> options {
> output=AST;
> }
>
> tokens {
>  Or; And; Not;
>  FieldCriteria;
>  LookupAnd; LookupNot; LookupOr; LookupAny;
>  StringList; StringEquals; StringStartsWith;
>  StringContains; StringChar; EmptyString;
>  RangeList; RangeBetween; RangeGreater; RangeLower;
>  ConstantValue;
> }
>
> @header { package com.stratusdata.dmql.parser.antlr; }
> @lexer::header { package com.stratusdata.dmql.parser.antlr; }
>
> @rulecatch {
>   catch (RecognitionException re) {
>     throw re;
>   }
> }
>
> dmql: searchCondition;
> searchCondition: queryClause (('|' | BoolOr) queryClause)* -> ^(Or
> queryClause+);
> queryClause: booleanElement ((',' | BoolAnd) booleanElement)* -> ^(And
> booleanElement+);
> booleanElement: queryElement | ('~' | BoolNot) queryElement -> ^(Not
> queryElement);
> queryElement: '('! (fieldCriteria | searchCondition) ')'!;
>
> fieldCriteria: field '=' fieldValue -> ^(FieldCriteria field fieldValue);
> field: ('_' | alphanumericToken)+ -> ConstantValue[$field.text];
> fieldValue: lookupList | stringList | rangeList | nonInteger | period |
> stringLiteral | empty;
> stringLiteral: StringLiteral;
> empty: '.EMPTY.' -> EmptyString;
>
> lookupList: lookupOr | lookupAnd | lookupNot | lookupAny;
> lookupOr: '|' lookup (',' lookup)* -> ^(LookupOr lookup+);
> lookupAnd: '+' lookup (',' lookup)* -> ^(LookupAnd lookup+);
> lookupNot: '~' lookup (',' lookup)* -> ^(LookupNot lookup+);
> lookupAny: '.ANY.' -> LookupAny;
> lookup: alphanumeric | stringLiteral;
>
> stringList: string (',' string)* -> ^(StringList string+);
> string: stringEq | stringStart | stringContains | stringChar;
> stringEq: alphanumeric -> ^(StringEquals alphanumeric);
> stringStart: alphanumeric '*'  -> ^(StringStartsWith alphanumeric);
> stringContains: '*' alphanumeric '*' -> ^(StringContains alphanumeric);
> stringChar: alphanumeric? ('?' alphanumeric?)+ -> ^(StringChar
> ConstantValue[$stringChar.text]);
>
> rangeList: dateTimeRangeList | dateRangeList | timeRangeList |
> numericRangeList;
> dateTimeRangeList: dateTimeRange (',' dateTimeRange)* -> ^(RangeList
> dateTimeRange+);
> dateRangeList: dateRange (',' dateRange)* -> ^(RangeList dateRange+);
> timeRangeList: timeRange (',' timeRange)* -> ^(RangeList timeRange+);
> numericRangeList: numericRange (',' numericRange)* -> ^(RangeList
> numericRange+);
> dateTimeRange: x=dateTime '-' y=dateTime -> ^(RangeBetween $x $y)
>  | x=dateTime '-' -> ^(RangeLower $x)
>  | x=dateTime '+' -> ^(RangeGreater $x);
> dateRange: x=date '-' y=date -> ^(RangeBetween $x $y)
>  | x=date '-' -> ^(RangeLower $x)
>  | x=date '+' -> ^(RangeGreater $x);
> timeRange: x=time '-' y=time -> ^(RangeBetween $x $y)
>  | x=time '-' -> ^(RangeLower $x)
>  | x=time '+' -> ^(RangeGreater $x);
> numericRange: x=number '-' y=number -> ^(RangeBetween $x $y)
>  | x=number '-' -> ^(RangeLower $x)
>  | x=number '+' -> ^(RangeGreater $x);
> period: (isoDateTime | isoDate | isoTime) -> ConstantValue[$period.text];
> dateTime: (isoDateTime | Now) -> ConstantValue[$dateTime.text];
> date: (isoDate | Today) -> ConstantValue[$date.text];
> time: isoTime -> ConstantValue[$time.text];
> number: integer | nonInteger;
> integer: D+ -> ConstantValue[$integer.text];
> nonInteger: (negativeNumber | positiveDecimal) ->
> ConstantValue[$nonInteger.text];
> negativeNumber: '-' D+ ('.' D+)?;
> positiveDecimal: D+ '.' D+;
>
> timeZoneOffset: ('+' | '-') D D ':' D D;
> isoDate: D D D D '-' D D '-' D D;
> isoTime: D D ':' D D ':' D D ('.' D (D D?)?)?;
> isoDateTime: isoDate 'T' isoTime ('Z' | timeZoneOffset)?;
>
> alphanumeric: alphanumericToken+ -> ConstantValue[$alphanumeric.text];
> alphanumericToken: (D | A | BoolNot | BoolAnd | BoolOr | Now | Today | 'T'
> | 'Z');
>
> BoolNot: 'NOT';
> BoolAnd: 'AND';
> BoolOr: 'OR';
> Now: 'NOW';
> Today: 'TODAY';
> StringLiteral: ('"' (~('\u0000'..'\u001F' | '\u007F' | '"') | ('""'))*
> '"');
> A: (('A'..'Z') | ('a'..'z'));
> D: ('0'..'9');
> Whitespace: (' ' | '\t' | '\n') { $channel = HIDDEN; };
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/653a3b0e/attachment.html 

From indhu.b at s7software.com  Fri Mar 20 06:23:43 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 20 Mar 2009 18:53:43 +0530
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>	
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
Message-ID: <49C398DF.3020104@s7software.com>

Unfortunately, ANTLR implementation of Lexer doesn't backtrack (maybe 
for efficiency purposes). Backtracking and taking an alternative can be 
done only in the parser. This was already discussed in the list. See - 
http://www.antlr.org/pipermail/antlr-interest/2009-February/032981.html.

- Indhu

Mihai Danila wrote:
>
> Thanks Indhu,
>
> In the link you sent, you troubleshoot a slightly different, but the 
> post did help.
>
> In my scenario, the lexer chooses a rule based on a prefix and fails 
> to fall back to try a collection of shorter tokens. The lexer doesn't 
> go as far as TOR before deciding simply because by the time a TO is 
> read there is no alternative to TO in lexer scope (except there would 
> be if it wasn't greedy as per my note below). Your indication about 
> the longest possible token policy has cleared it up for me. The only 
> alternative to TODAY by the time TO has been read is to create an 
> alphanumeric out of alphanumericTokens, and of course that is a parser 
> rule and is therefore is outside of the lexer's horizon. This must be 
> the problem.
>
> A question still remains. If the lexer cannot create a valid token 
> without dropping characters, shouldn't it fall back and try to produce 
> smaller tokens (which my grammar allows for, the smaller tokens being 
> D and A) to give a chance to the parser? Apparently, the lexer is 
> prematurely moving into an error state without noticing that a 
> different token arrangement would keep it in the green.
>
>
> Mihai
>
> On Tue, Mar 10, 2009 at 3:48 AM, Indhu Bharathi 
> <indhu.b at s7software.com <mailto:indhu.b at s7software.com>> wrote:
>
>     Try this:
>
>     Today: ( (Today_) => 'Today' ) ;
>     fragment Today_
>         :    'Today'
>         ;
>
>     However, I'm not sure if this's the most elegant way to fix it.
>
>     Read the following thread to understand more on why exactly this
>     happens:
>     http://www.antlr.org/pipermail/antlr-interest/2009-February/032959.html
>
>     - Indhu
>
>
>     ----- Original Message -----
>     From: Mihai Danila <viridium at gmail.com <mailto:viridium at gmail.com>>
>     To: antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>     Sent: Tuesday, March 10, 2009 6:30:43 AM GMT+0530 Asia/Calcutta
>     Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
>
>
>     Hi,
>
>     I thought I had my DMQL grammar nailed after several months of no
>     issues, until recently a query failed. I've already massaged the
>     grammar in a few ways so I'm a bit at a loss as to what the
>     problem is this time. Do I have to enumerate all the possible
>     token prefixes (including TO, TOD, TODA, N, NO, A, AN, O) in the
>     alphanumericToken rule to fix this one? Am I missing something?
>
>     Here's the query:
>     (f=I?TORO)
>
>     If I debug this, here's what ANTLR parses:
>     (f=I?O)
>
>     Here's the grammar:
>     grammar Dmql;
>
>     options {
>     output=AST;
>     }
>
>     tokens {
>     Or; And; Not;
>     FieldCriteria;
>     LookupAnd; LookupNot; LookupOr; LookupAny;
>     StringList; StringEquals; StringStartsWith;
>     StringContains; StringChar; EmptyString;
>     RangeList; RangeBetween; RangeGreater; RangeLower;
>     ConstantValue;
>     }
>
>     @header { package com.stratusdata.dmql.parser.antlr; }
>     @lexer::header { package com.stratusdata.dmql.parser.antlr; }
>
>     @rulecatch {
>       catch (RecognitionException re) {
>         throw re;
>       }
>     }
>
>     dmql: searchCondition;
>     searchCondition: queryClause (('|' | BoolOr) queryClause)* -> ^(Or
>     queryClause+);
>     queryClause: booleanElement ((',' | BoolAnd) booleanElement)* ->
>     ^(And booleanElement+);
>     booleanElement: queryElement | ('~' | BoolNot) queryElement ->
>     ^(Not queryElement);
>     queryElement: '('! (fieldCriteria | searchCondition) ')'!;
>
>     fieldCriteria: field '=' fieldValue -> ^(FieldCriteria field
>     fieldValue);
>     field: ('_' | alphanumericToken)+ -> ConstantValue[$field.text];
>     fieldValue: lookupList | stringList | rangeList | nonInteger |
>     period | stringLiteral | empty;
>     stringLiteral: StringLiteral;
>     empty: '.EMPTY.' -> EmptyString;
>
>     lookupList: lookupOr | lookupAnd | lookupNot | lookupAny;
>     lookupOr: '|' lookup (',' lookup)* -> ^(LookupOr lookup+);
>     lookupAnd: '+' lookup (',' lookup)* -> ^(LookupAnd lookup+);
>     lookupNot: '~' lookup (',' lookup)* -> ^(LookupNot lookup+);
>     lookupAny: '.ANY.' -> LookupAny;
>     lookup: alphanumeric | stringLiteral;
>
>     stringList: string (',' string)* -> ^(StringList string+);
>     string: stringEq | stringStart | stringContains | stringChar;
>     stringEq: alphanumeric -> ^(StringEquals alphanumeric);
>     stringStart: alphanumeric '*'  -> ^(StringStartsWith alphanumeric);
>     stringContains: '*' alphanumeric '*' -> ^(StringContains
>     alphanumeric);
>     stringChar: alphanumeric? ('?' alphanumeric?)+ -> ^(StringChar
>     ConstantValue[$stringChar.text]);
>
>     rangeList: dateTimeRangeList | dateRangeList | timeRangeList |
>     numericRangeList;
>     dateTimeRangeList: dateTimeRange (',' dateTimeRange)* ->
>     ^(RangeList dateTimeRange+);
>     dateRangeList: dateRange (',' dateRange)* -> ^(RangeList dateRange+);
>     timeRangeList: timeRange (',' timeRange)* -> ^(RangeList timeRange+);
>     numericRangeList: numericRange (',' numericRange)* -> ^(RangeList
>     numericRange+);
>     dateTimeRange: x=dateTime '-' y=dateTime -> ^(RangeBetween $x $y)
>     | x=dateTime '-' -> ^(RangeLower $x)
>     | x=dateTime '+' -> ^(RangeGreater $x);
>     dateRange: x=date '-' y=date -> ^(RangeBetween $x $y)
>     | x=date '-' -> ^(RangeLower $x)
>     | x=date '+' -> ^(RangeGreater $x);
>     timeRange: x=time '-' y=time -> ^(RangeBetween $x $y)
>     | x=time '-' -> ^(RangeLower $x)
>     | x=time '+' -> ^(RangeGreater $x);
>     numericRange: x=number '-' y=number -> ^(RangeBetween $x $y)
>     | x=number '-' -> ^(RangeLower $x)
>     | x=number '+' -> ^(RangeGreater $x);
>     period: (isoDateTime | isoDate | isoTime) ->
>     ConstantValue[$period.text];
>     dateTime: (isoDateTime | Now) -> ConstantValue[$dateTime.text];
>     date: (isoDate | Today) -> ConstantValue[$date.text];
>     time: isoTime -> ConstantValue[$time.text];
>     number: integer | nonInteger;
>     integer: D+ -> ConstantValue[$integer.text];
>     nonInteger: (negativeNumber | positiveDecimal) ->
>     ConstantValue[$nonInteger.text];
>     negativeNumber: '-' D+ ('.' D+)?;
>     positiveDecimal: D+ '.' D+;
>
>     timeZoneOffset: ('+' | '-') D D ':' D D;
>     isoDate: D D D D '-' D D '-' D D;
>     isoTime: D D ':' D D ':' D D ('.' D (D D?)?)?;
>     isoDateTime: isoDate 'T' isoTime ('Z' | timeZoneOffset)?;
>
>     alphanumeric: alphanumericToken+ -> ConstantValue[$alphanumeric.text];
>     alphanumericToken: (D | A | BoolNot | BoolAnd | BoolOr | Now |
>     Today | 'T' | 'Z');
>
>     BoolNot: 'NOT';
>     BoolAnd: 'AND';
>     BoolOr: 'OR';
>     Now: 'NOW';
>     Today: 'TODAY';
>     StringLiteral: ('"' (~('\u0000'..'\u001F' | '\u007F' | '"') |
>     ('""'))* '"');
>     A: (('A'..'Z') | ('a'..'z'));
>     D: ('0'..'9');
>     Whitespace: (' ' | '\t' | '\n') { $channel = HIDDEN; };
>
>


From pcc482719 at gmail.com  Fri Mar 20 06:36:56 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Fri, 20 Mar 2009 09:36:56 -0400
Subject: [antlr-interest] C# runtime for ANTLR 3.1.3
Message-ID: <Pine.CYG.4.58.0903200932030.496@WHIRLWIND>


I see that ANTLR 3.1.3 is available on the web site. I'm about to start a
new ANTLR project so I figured I might as well start with the latest
version. My project is in C#, however I notice that there is no C# runtime
posted (yet) for 3.1.3. "No problem," I thought, "I'll compile from
source." I downloaded the source archive but in the runtime folder I see
'CSharp' and 'CSharp3.' The ANTLR documentation seems to say that I should
be using the CSharp2 language option instead of the old CSharp option.
But if that is so, I'm confused about which source folder I should be
using. I tried compiling the CSharp3 solution, but the build failed due to
a missing key file. I'm relatively new to C# so I'm not sure if I should
be expecting that or not.

What is the status of C# with ANTLR 3.1.3?

Thanks!

Peter

From paul.mckee at mckeetech.com  Fri Mar 20 08:36:18 2009
From: paul.mckee at mckeetech.com (Paul McKee)
Date: Fri, 20 Mar 2009 15:36:18 -0000
Subject: [antlr-interest] AST's different in ANTLRWORKS and extracted in
	Java with getTree
Message-ID: <CF5B54DEF16840FB99B3D08153A11A24@mckeepaPC>

HI All - I hope somebody can help. I'm still pretty new to ANTLR.
I have built a Transact SQL grammar with output option set to AST. This builds the AST by means of re-write rules and default behavior. From this I have also built a tree walker. I have written a Java test rig as per instructions in the book the key statements here are:
Tsql_asperser.sol_statement_return or =parser.sol_statement();

Common Tree to = (Common Tree)or.get Tree(); //get Tree from Parser

CommonTreeNodeStream nodes = new CommonTreeNodeStream(to);

TsqlWalker walker = new TsqlWalker(nodes);

walker.sol_statement();

I have generated the base grammar with no debugging and the tree walker with debugging and run the java test rig and connected successfully with the ANTLRWORKS remote debugger - all this seems fine.

However, the tree that I am getting displayed in the input window for the tree walker looks quite different from the tree that I get displayed in the AST window for the base grammar (i.e. the generator of the AST). Needless to say, I then get a recognition exception in the tree walker.

I haven't posted the grammar here, because it is quite long and involved, and hope that somebody may be able to point me in the right direction. For example, have I more work to do in building the tree, but in that case how does ANTLRWORKS get it right?



Thanks and Regards



Paul McKee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/d5f7691c/attachment.html 

From sharwell at pixelminegames.com  Fri Mar 20 08:48:03 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 20 Mar 2009 10:48:03 -0500
Subject: [antlr-interest] C# runtime for ANTLR 3.1.3
In-Reply-To: <Pine.CYG.4.58.0903200932030.496@WHIRLWIND>
References: <Pine.CYG.4.58.0903200932030.496@WHIRLWIND>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BAD@Bloodymary.ironwillgames.com>

You should compile the CSharp runtime in Visual Studio 2005 or 2008.
That's the one used by the CSharp2 target. The "target" refers to what
you put in the grammar's options section - if you use CSharp2 then the
generated code will make use of some C# 2.0 features, but extends the
same runtime classes as the CSharp target, hence the shared "runtime"
library.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
Sent: Friday, March 20, 2009 8:37 AM
To: ANTLR Mailing List
Subject: [antlr-interest] C# runtime for ANTLR 3.1.3


I see that ANTLR 3.1.3 is available on the web site. I'm about to start
a
new ANTLR project so I figured I might as well start with the latest
version. My project is in C#, however I notice that there is no C#
runtime
posted (yet) for 3.1.3. "No problem," I thought, "I'll compile from
source." I downloaded the source archive but in the runtime folder I see
'CSharp' and 'CSharp3.' The ANTLR documentation seems to say that I
should
be using the CSharp2 language option instead of the old CSharp option.
But if that is so, I'm confused about which source folder I should be
using. I tried compiling the CSharp3 solution, but the build failed due
to
a missing key file. I'm relatively new to C# so I'm not sure if I should
be expecting that or not.

What is the status of C# with ANTLR 3.1.3?

Thanks!

Peter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Fri Mar 20 09:15:48 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Mar 2009 09:15:48 -0700
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <49C36E99.5060308@nsn.com>
References: <49C36E99.5060308@nsn.com>
Message-ID: <49C3C134.6010302@temporal-wave.com>

Paul Bouch? (NSN) wrote:
> Hi,
>
>
>   
Firstly, do not forget that you cannot set such a flag from the parser 
as the lexer runs first and creates all the tokens.
> Here is a lexer excerpt:
> NUMBER : DIGIT_+;
> SIMPLENAME: {noColonInNames}?=> LETTER_+;
> COLON: {noColonInNames}?=> COLON_;
> NAME: {!noColonInNames}?=> (LETTER_ | COLON_)+;
> fragment DIGIT_: '0'..'9';
> fragment LETTER_: 'a'..'z' | 'A'..'Z';
>   
Assuming that you can configure these flags in lexer context are not 
expecting them to be respected by the lexer if the parser sets them, 
then you should be able to do this:

grammar ttt;

@lexer::members
{
    boolean noColonInNames = false;
}

test
    : (SIMPLENAME | COLON | NAME)* EOF ;
   
fragment LETTER_
    :    ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z')*
    ;

fragment COLON
    :     ':'
    ;
   
fragment SIMPLENAME
    :   
    ;
   
NAME
    : {!noColonInNames}?=> (LETTER_ | COLON)+ { noNamesInColons = true; }
    |  LETTER_+ { $type = SIMPLENAME; }
    | COLON { $type = COLON; }
    ;

However, I suspect that you will find it much easier to use predicates 
in the parser, even if it is only the first one you come across that 
should be NAME COLON NAME:

grammar ttt;

@lexer::members
{
    boolean noColonInNames = false;
}

test
    : names* EOF ;
   
names
    : {!noColonInNames}?=> name { System.out.println("Var is '" + 
$name.text + "'"); }
    | {noColonInNames}?=> NAME (COLON NAME)*
    ;
   
name
    : ((NAME | COLON)=>(NAME | COLON))+
    ;
   
fragment LETTER_
    :    ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z')*
    ;

fragment COLON
    :     ':'
    ;
   
NAME
    : LETTER_+
    ;

In general, try to solve as little as possible in the grammar (just get 
it to return a consistent token stream), then solve as little as 
possible in the parser, then solve everything else in the tree parser. 
This will maximize the chances of producing the most relevant error 
messages for your users. Of course for "as little as possible" you 
should infer the  suffix "... but no less than that" ;-)

Jim




From jimi at temporal-wave.com  Fri Mar 20 09:22:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Mar 2009 09:22:23 -0700
Subject: [antlr-interest] CommonTree between target languages
In-Reply-To: <49C3736D.3060504@lancaster.ac.uk>
References: <8773d42e0903191851u1ac4c935qdeab001c3f0ec814@mail.gmail.com>
	<49C3736D.3060504@lancaster.ac.uk>
Message-ID: <49C3C2BF.3020106@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/0d7c761d/attachment.html 

From pcc482719 at gmail.com  Fri Mar 20 09:34:27 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Fri, 20 Mar 2009 12:34:27 -0400
Subject: [antlr-interest] C# runtime for ANTLR 3.1.3
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BAD@Bloodymary.ironwillgames.com>
References: <Pine.CYG.4.58.0903200932030.496@WHIRLWIND>
	<86403CA0939415448BCCB83855EFE09AA67BAD@Bloodymary.ironwillgames.com>
Message-ID: <Pine.CYG.4.58.0903201232010.552@WHIRLWIND>


On Fri, 20 Mar 2009, Sam Harwell wrote:

> You should compile the CSharp runtime in Visual Studio 2005 or 2008.
> That's the one used by the CSharp2 target. The "target" refers to what
> you put in the grammar's options section - if you use CSharp2 then the
> generated code will make use of some C# 2.0 features, but extends the
> same runtime classes as the CSharp target, hence the shared "runtime"
> library.

I understand, thanks for clarifying that.

Actually I just noticed that there is an archive of the precompiled
runtime I need in the source tar ball. At least that's how it looks right
now.  I'll give it a try.

Thanks again!

Peter


From pcc482719 at gmail.com  Fri Mar 20 06:48:21 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Fri, 20 Mar 2009 09:48:21 -0400
Subject: [antlr-interest] Case insensitive reserved words.
Message-ID: <Pine.CYG.4.58.0903200943130.1956@WHIRLWIND>


Hi again...

My new project entails building a parser for a language with case
insensitive reserved words. I see the page here:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782

describing how to write a custom look-ahead to deal with this. However,
David Haubenstricker commented on that page with an alternative approach:

SELECT : S E L E C T

fragment A: ('A'|'a')
fragment B: ('B'|'b')
fragment C: ('C'|'c')
... etc.

To be honest, David's approach looks pretty good to me. I'm wondering if
there are any disadvantages to it that I should know about.

Thanks!

Peter

From sharwell at pixelminegames.com  Fri Mar 20 09:43:18 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 20 Mar 2009 11:43:18 -0500
Subject: [antlr-interest] Case insensitive reserved words.
In-Reply-To: <Pine.CYG.4.58.0903200943130.1956@WHIRLWIND>
References: <Pine.CYG.4.58.0903200943130.1956@WHIRLWIND>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BAF@Bloodymary.ironwillgames.com>

Performance will suffer in a big way. Use a class like the following for
your input.

 

Sam

 

public class CaseInsensitiveString : ANTLRStringStream

{

    // the string used for lookahead (performance improvement by not
having to call char.ToLowerInvariant())

    string _lastring;

 

    public CaseInsensitiveString( string input, string sourceName )

        : base( input, sourceName )

    {

        _lastring = input.ToLowerInvariant();

    }

 

    public override int LA( int i )

    {

        if ( i == 0 )

            return 0;

 

        if ( i < 0 )

        {

            // e.g., translate LA(-1) to use offset i=0; then
data[p+0-1]

            i++;

            if ( ( p + i - 1 ) < 0 )

            {

                // invalid; no char before first char

                return CharStreamConstants.EOF;

            }

        }

 

        if ( ( p + i - 1 ) >= n )

        {

            return CharStreamConstants.EOF;

        }

        return _lastring[p + i - 1];

    }

}

 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
Sent: Friday, March 20, 2009 8:48 AM
To: ANTLR Mailing List
Subject: [antlr-interest] Case insensitive reserved words.

 

 

Hi again...

 

My new project entails building a parser for a language with case

insensitive reserved words. I see the page here:

 

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782

 

describing how to write a custom look-ahead to deal with this. However,

David Haubenstricker commented on that page with an alternative
approach:

 

SELECT : S E L E C T

 

fragment A: ('A'|'a')

fragment B: ('B'|'b')

fragment C: ('C'|'c')

... etc.

 

To be honest, David's approach looks pretty good to me. I'm wondering if

there are any disadvantages to it that I should know about.

 

Thanks!

 

Peter

 

List: http://www.antlr.org/mailman/listinfo/antlr-interest

Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/b6c518e0/attachment.html 

From jimi at temporal-wave.com  Fri Mar 20 09:43:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Mar 2009 09:43:18 -0700
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
Message-ID: <49C3C7A6.2090909@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/55224450/attachment.html 

From jimi at temporal-wave.com  Fri Mar 20 09:48:44 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Mar 2009 09:48:44 -0700
Subject: [antlr-interest] Case insensitive reserved words.
In-Reply-To: <Pine.CYG.4.58.0903200943130.1956@WHIRLWIND>
References: <Pine.CYG.4.58.0903200943130.1956@WHIRLWIND>
Message-ID: <49C3C8EC.8060302@temporal-wave.com>

Peter C. Chapin wrote:
> Hi again...
>
> My new project entails building a parser for a language with case
> insensitive reserved words. I see the page here:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782
>
> describing how to write a custom look-ahead to deal with this. However,
> David Haubenstricker commented on that page with an alternative approach:
>
> SELECT : S E L E C T
>
> fragment A: ('A'|'a')
> fragment B: ('B'|'b')
> fragment C: ('C'|'c')
> ... etc.
>
> To be honest, David's approach looks pretty good to me. I'm wondering if
> there are any disadvantages to it that I should know about.
>   
Depends how many keywords you have, how long they are, and whether  you 
can be bother to write a short program to generate those rules from a 
keyword list ;-), but the main way of extending the input stream to 
provide case insensitive comparison vi a  custom LA() is generally less 
work and more efficient, as the characters of the keyword will be 
assumed to be all UPPER (or lower, not sure why the C# example uses 
lower, but whatever ;-) and so only one comparison per character is 
required.


Jim

From pcc482719 at gmail.com  Fri Mar 20 10:47:15 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Fri, 20 Mar 2009 13:47:15 -0400
Subject: [antlr-interest] Case insensitive reserved words.
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BAF@Bloodymary.ironwillgames.com>
References: <Pine.CYG.4.58.0903200943130.1956@WHIRLWIND>
	<86403CA0939415448BCCB83855EFE09AA67BAF@Bloodymary.ironwillgames.com>
Message-ID: <Pine.CYG.4.58.0903201345060.3348@WHIRLWIND>


On Fri, 20 Mar 2009, Sam Harwell wrote:

> Performance will suffer in a big way. Use a class like the following for
> your input...

Thanks... performance is a good reason to do things the "right" way.

Peter

From paul.bouche at nsn.com  Fri Mar 20 11:02:45 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Fri, 20 Mar 2009 19:02:45 +0100
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <49C3C134.6010302@temporal-wave.com>
References: <49C36E99.5060308@nsn.com> <49C3C134.6010302@temporal-wave.com>
Message-ID: <49C3DA45.90708@nsn.com>

Hi Jim,

thanks for your response.

Jim Idle schrieb:
> Paul Bouch? (NSN) wrote:
>> Hi,
> Firstly, do not forget that you cannot set such a flag from the parser 
> as the lexer runs first and creates all the tokens.
I know which I personally find a bug, if there was not a token buffer, 
one could steer the lexer depending on parser state. This would make the 
lexer much more powerfull. Ter stated in his book we need tokens because 
this makes things easier and this is also how humans analyse text, but 
humans don't buffer up all words in a page but read them word by word 
and keep a short buffer of recently read tokens so as to make context 
sensitive decisions ;-)

Sorry I don't mean to come off abrasive, I am glad for your reply!
>> Here is a lexer excerpt:
>> NUMBER : DIGIT_+;
>> SIMPLENAME: {noColonInNames}?=> LETTER_+;
>> COLON: {noColonInNames}?=> COLON_;
>> NAME: {!noColonInNames}?=> (LETTER_ | COLON_)+;
>> fragment DIGIT_: '0'..'9';
>> fragment LETTER_: 'a'..'z' | 'A'..'Z';
>>   
> Assuming that you can configure these flags in lexer context are not 
> expecting them to be respected by the lexer if the parser sets them, 
> then you should be able to do this:
>
> grammar ttt;
>
> @lexer::members
> {
>     boolean noColonInNames = false;
> }
>
> test
>     : (SIMPLENAME | COLON | NAME)* EOF ;
>    
> fragment LETTER_
>     :    ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z')*
>     ;
>
> fragment COLON
>     :     ':'
>     ;
>    
> fragment SIMPLENAME
>     :   
>     ;
>    
> NAME
>     : {!noColonInNames}?=> (LETTER_ | COLON)+ { noNamesInColons = true; }
>     |  LETTER_+ { $type = SIMPLENAME; }
>     | COLON { $type = COLON; }
>     ;
>
> However, I suspect that you will find it much easier to use predicates 
> in the parser, even if it is only the first one you come across that 
> should be NAME COLON NAME:
>
> grammar ttt;
>
> @lexer::members
> {
>     boolean noColonInNames = false;
> }
>
> test
>     : names* EOF ;
>    
> names
>     : {!noColonInNames}?=> name { System.out.println("Var is '" + 
> $name.text + "'"); }
>     | {noColonInNames}?=> NAME (COLON NAME)*
>     ;
>    
> name
>     : ((NAME | COLON)=>(NAME | COLON))+
>     ;
>    
> fragment LETTER_
>     :    ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z')*
>     ;
>
> fragment COLON
>     :     ':'
>     ;
>    
> NAME
>     : LETTER_+
>     ;
I tried what you suggested, basically you moved the gated semantic 
predicate into subrules of the NAME rule. Here is what I tried:

grammar LexerPredicates;

@lexer::members
{
    boolean noColonInNames = true;
    boolean parsedSimpleName = false;
}
@members {
    boolean noColonInNames = false;
}

test
    : (simplename | colon | name)* EOF ;

name
    :    NAME
    ;

colon
    :    COLON
    ;

simplename
    :    SIMPLENAME
    ;

  
fragment DIGIT_
    :    '0'..'9'
    ;

NUMBER
    :
    {noColonInNames || !noColonInNames}?=>
    DIGIT_+
    ;  

fragment LETTER_
    :    'a'..'z'|'A'..'Z'
    ;

fragment COLON
    :     ':'
    ;
  
fragment SIMPLENAME
    :  
    ;

fragment LETTERORDIGIT_
    :   
    DIGIT_ | LETTER_
    ;
  
NAME
    : {!noColonInNames}?=> (LETTERORDIGIT_ | COLON)+
    | LETTERORDIGIT_+ { $type = SIMPLENAME; }  //A
    | COLON { $type = COLON; } { noColonInNames = false;} //B
    ;
   
WHITESPACE
        :
        ( ' ' | '\t' /*| NEWLINE_*/)+ // removed new line due to 
backward compatibility
        { skip(); }
        ;

If I try to compile this I get the following error:
internal error: 
org.antlr.analysis.NFAToDFAConverter.getPredicatesPerNonDeterministicAlt(NFAToDFAConverter.java:1603): 
no AST/token for nonepsilon target w/o predicate
which is better than no error and tells me that I need to cover the 
other alternative within the name rule. Marked with //A and //B. I did 
that, i.e.:

NAME
    : {!noColonInNames}?=> (LETTERORDIGIT_ | COLON)+
    | {noColonInNames }?=> LETTERORDIGIT_+ { $type = SIMPLENAME; }
    | {noColonInNames }?=> COLON { $type = COLON; } { noColonInNames = 
false;}
    ;

If I then set the noColonInNames to true for the input
a          :     b    a    3    a3   3a
I get
SIMPLENAME COLON NAME NAME NAME NAME NAME
which is not what I want, I want the 3 to be recognized as a NUMBER as 
it works without predicates. Imo there is a bug or I cannot understand 
why it does not work.

I solved this by combining your approach and generating several tokens 
when the NAME lexer rule matches, of course with the desired type. The 
NAME COLON NAME solution did not work because I would have had to do 
major rework in our tree parser which I wanted to avoid. Now it works 
nicely as I desired it, but as praiseworthy as ANTLR is, it is also 
sometimes a real beast, or maybe I am the beast and just didn't get it :)

Thx,
Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/2e1ae5df/attachment.html 

From parrt at cs.usfca.edu  Fri Mar 20 11:31:39 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Mar 2009 11:31:39 -0700
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <49C398DF.3020104@s7software.com>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>	
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C398DF.3020104@s7software.com>
Message-ID: <AB076C6C-0150-4405-A36D-0F5502076109@cs.usfca.edu>


On Mar 20, 2009, at 6:23 AM, Indhu Bharathi wrote:

> Unfortunately, ANTLR implementation of Lexer doesn't backtrack (maybe
> for efficiency purposes). Backtracking and taking an alternative can  
> be
> done only in the parser. This was already discussed in the list. See -
> http://www.antlr.org/pipermail/antlr-interest/2009-February/032981.html 
> .

Hi. ANTLR generates lexer's, parsers, tree parsers with the same code  
generator and all of those derive from a single base class. all three  
can backtrack :) in the case of the lexer, though, it's not the kind  
of backtracking you see in lex.

Ter

From s.barnett-cormack at lancaster.ac.uk  Fri Mar 20 11:29:30 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Fri, 20 Mar 2009 18:29:30 +0000
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <49C3DA45.90708@nsn.com>
References: <49C36E99.5060308@nsn.com> <49C3C134.6010302@temporal-wave.com>
	<49C3DA45.90708@nsn.com>
Message-ID: <49C3E08A.4060605@lancaster.ac.uk>

Paul Bouch? (NSN) wrote:
> Hi Jim,
> 
> thanks for your response.
> 
> Jim Idle schrieb:
>> Paul Bouch? (NSN) wrote:
>>> Hi,
>> Firstly, do not forget that you cannot set such a flag from the parser 
>> as the lexer runs first and creates all the tokens.
> I know which I personally find a bug, if there was not a token buffer, 
> one could steer the lexer depending on parser state. This would make the 
> lexer much more powerfull. Ter stated in his book we need tokens because 
> this makes things easier and this is also how humans analyse text, but 
> humans don't buffer up all words in a page but read them word by word 
> and keep a short buffer of recently read tokens so as to make context 
> sensitive decisions ;-)

Well, simultaneously lexing and parsing would be awkward for many, many 
reasons, but as I work on the additional bits of ASN.1 I'm finding 
reasons to really want to know what the last 2 tokens generated were, 
and use those for gating in the lexer. If I could do that easily (i.e. 
without adding an action to every single lexer rule), it'd make my life 
easier. I suppose a lexer subclass could do it - override the emit stuff 
and add functions to access already-generated tokens.

-- 
Sam Barnett-Cormack

From lgcraymer at yahoo.com  Fri Mar 20 11:53:33 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 20 Mar 2009 11:53:33 -0700 (PDT)
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <49C3DA45.90708@nsn.com>
References: <49C36E99.5060308@nsn.com> <49C3C134.6010302@temporal-wave.com>
	<49C3DA45.90708@nsn.com>
Message-ID: <377235.66190.qm@web55904.mail.re3.yahoo.com>






________________________________
From: Paul Bouch? (NSN) <paul.bouche at nsn.com>
To: Jim Idle <jimi at temporal-wave.com>
Cc: antlr-interest at antlr.org
Sent: Friday, March 20, 2009 11:02:45 AM
Subject: Re: [antlr-interest] Semantic Predicates in a Lexer

...

Firstly, do not forget that you cannot set such a flag from the parser 
as the lexer runs first and creates all the tokens.
I know which I personally find a bug, if there was not a token
buffer, one could steer the lexer depending on parser state. This would
make the lexer much more powerfull. Ter stated in his book we need
tokens because this makes things easier and this is also how humans
analyse text, but humans don't buffer up all words in a page but read
them word by word and keep a short buffer of recently read tokens so as
to make context sensitive decisions ;-)

This is a misconception.  To allow feedback from parser to lexer, you need to be at a point in the parser grammar where k = 1.  This is difficult for the human to recognize; even when you insert feedback at such a point, subsequent modification of the grammar may increase the local value of k.  The use of such feedback between lex generated lexers and yacc generated parsers heavily depends on the fact that yacc only supports k=1.

--Loring


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/2bc8d485/attachment.html 

From antlr at mirality.co.nz  Fri Mar 20 12:31:11 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 21 Mar 2009 08:31:11 +1300
Subject: [antlr-interest] How can I use 3 predicates in one rule?
In-Reply-To: <BAY122-W34F7A86DC537123BE61CDADB960@phx.gbl>
References: <1237485651.10858.8.camel@behdad-laptop>
	<1237488615.10858.62.camel@behdad-laptop>
	<BAY122-W34F7A86DC537123BE61CDADB960@phx.gbl>
Message-ID: <20090320193136.D218234184BD@www.antlr.org>

At 10:30 20/03/2009, YINGAnnie wrote:
>Why I can not use 3 predicates together? What is the right format 
>to do this?
>
>callExpression
>     : ^(CALL_EXPRESSION memberExpression indexSuffix * 
> propertyReferenceSuffix* argumentSuffix*)
>     ({$memberExpression.text.equals("Math.ceil")}? 
> ->mathceil(x={"int"},y={$argumentSuffix.text}))
>     ({$memberExpression.text.equals("Math.abs")}? 
> ->mathabs(x={$argumentSuffix.text},y={"<0?"},z={"* -1 :"}))
>     ({$memberExpression.text.equals("Math.floor")}? 
> ->mathfloor(x={"int"},y={$argumentSuffix.text})
>     ;

IIRC, you need the predicate on the other side of the -> arrow.


From antlr at mirality.co.nz  Fri Mar 20 12:52:12 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 21 Mar 2009 08:52:12 +1300
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <49C3DA45.90708@nsn.com>
References: <49C36E99.5060308@nsn.com> <49C3C134.6010302@temporal-wave.com>
	<49C3DA45.90708@nsn.com>
Message-ID: <20090320195237.E668C341844A@www.antlr.org>

At 07:02 21/03/2009, Paul Bouch? (NSN) wrote:
>NUMBER
>     :
>     {noColonInNames || !noColonInNames}?=>
>     DIGIT_+
>     ;

That predicate is completely redundant.

>NAME
>     : {!noColonInNames}?=> (LETTERORDIGIT_ | COLON)+
>     | {noColonInNames }?=> LETTERORDIGIT_+ { 
> $type = SIMPLENAME; }
>     | {noColonInNames }?=> COLON { $type = 
> COLON; } { noColonInNames = false;}
>     ;
>
>If I then set the noColonInNames to true for the input
>a          :     b    a    3    a3   3a
>I get
>SIMPLENAME COLON NAME NAME NAME NAME NAME
>which is not what I want, I want the 3 to be 
>recognized as a NUMBER as it works without 
>predicates. Imo there is a bug or I cannot 
>understand why it does not work.

Given the input "3", both NAME and NUMBER are 
viable output rules since both consume the exact 
same input.  ANTLR should therefore choose 
whichever one is listed first (which ought to be 
NUMBER in this case, unless you've listed the 
rules out-of-order).  If you don't want to be at 
the mercy of this sort of thing then you should 
modify the NAME rule so that a NAME is not 
permitted to begin with a digit.

But given your example input and what you've said 
thus far, I think you're overcomplicating 
things.  If there are no whitespace limitations 
between the name fragments and the colon (ie. 
whitespace is permitted and ignored), then what 
you really should do is to remove the NAME rule 
entirely and just have the lexer emit SIMPLENAME, 
COLON, and NUMBER.  Then up in the parser you can 
define a 'name' rule that recognises SIMPLENAME 
COLON SIMPLENAME (or whatever) as a single logical unit.


From antlr at mirality.co.nz  Fri Mar 20 12:55:18 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 21 Mar 2009 08:55:18 +1300
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <AB076C6C-0150-4405-A36D-0F5502076109@cs.usfca.edu>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C398DF.3020104@s7software.com>
	<AB076C6C-0150-4405-A36D-0F5502076109@cs.usfca.edu>
Message-ID: <20090320195536.4DC39341844A@www.antlr.org>

At 07:31 21/03/2009, Terence Parr wrote:
 >Hi. ANTLR generates lexer's, parsers, tree parsers with the same 

 >code generator and all of those derive from a single base class. 

 >all three can backtrack :) in the case of the lexer, though,
 >it's not the kind of backtracking you see in lex.

Doesn't backtracking require support from the code-generation 
templates, though?  It was my impression that the templates for 
the lexer don't contain the necessary pieces to actually do the 
backtracking, even though the base class does.

(Besides which, it never seems to want to backtrack all the way to 
mTOKENS.)


From parrt at cs.usfca.edu  Fri Mar 20 12:58:42 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Mar 2009 12:58:42 -0700
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <20090320195536.4DC39341844A@www.antlr.org>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C398DF.3020104@s7software.com>
	<AB076C6C-0150-4405-A36D-0F5502076109@cs.usfca.edu>
	<20090320195536.4DC39341844A@www.antlr.org>
Message-ID: <0B1E979E-1F5C-45D7-81C3-2A134D69E6FF@cs.usfca.edu>

Well, come to think of it, I have not tried it a while but:

A : ('(' A ')')=> '(' A ')'
    | '(' A* ')'
   ;

should work.  Yep, seems to:

             if ( (LA2_0=='(') ) {
                 int LA2_1 = input.LA(2);

                 if ( (synpred1_T()) ) {
                     alt2=1;
                 }
                 else if ( (true) ) {
                     alt2=2;
                 }


Ter
On Mar 20, 2009, at 12:55 PM, Gavin Lambert wrote:

> At 07:31 21/03/2009, Terence Parr wrote:
>> Hi. ANTLR generates lexer's, parsers, tree parsers with the same
>
>> code generator and all of those derive from a single base class.
>
>> all three can backtrack :) in the case of the lexer, though,
>> it's not the kind of backtracking you see in lex.
>
> Doesn't backtracking require support from the code-generation
> templates, though?  It was my impression that the templates for
> the lexer don't contain the necessary pieces to actually do the
> backtracking, even though the base class does.
>
> (Besides which, it never seems to want to backtrack all the way to
> mTOKENS.)
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Fri Mar 20 13:01:03 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 21 Mar 2009 09:01:03 +1300
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <49C3E08A.4060605@lancaster.ac.uk>
References: <49C36E99.5060308@nsn.com> <49C3C134.6010302@temporal-wave.com>
	<49C3DA45.90708@nsn.com> <49C3E08A.4060605@lancaster.ac.uk>
Message-ID: <20090320200132.10C473418479@www.antlr.org>

At 07:29 21/03/2009, Sam Barnett-Cormack wrote:
 >as I work on the additional bits of ASN.1 I'm finding reasons
 >to really want to know what the last 2 tokens generated were,
 >and use those for gating in the lexer. If I could do that
 >easily (i.e. without adding an action to every single lexer
 >rule), it'd make my life easier. I suppose a lexer subclass
 >could do it - override the emit stuff and add functions to
 >access already-generated tokens.

Well, if you were in the parser you could access 
previously-consumed tokens with LA(-1), LA(-2), etc.  You can do 
the same thing in the lexer but it'll give you the characters 
instead of the tokens.

It'd be hard to write that sort of code anyway -- you can't just 
look at "the single previously generated token" because there's a 
very high chance that it's a comment or whitespace or something, 
meaning you'd have to look further back, and it just quickly gets 
unwieldy.

Probably a better idea is to follow the example in the wiki about 
generating multiple tokens from a single lexer rule.  That way you 
can keep everything under your own control and only emit the set 
once you're sure that's what you really want :)


From des at deshartman.com  Fri Mar 20 13:12:29 2009
From: des at deshartman.com (Des Hartman)
Date: Sat, 21 Mar 2009 07:12:29 +1100
Subject: [antlr-interest] CommonTree between target languages
In-Reply-To: <49C3C2BF.3020106@temporal-wave.com>
References: <8773d42e0903191851u1ac4c935qdeab001c3f0ec814@mail.gmail.com>
	<49C3736D.3060504@lancaster.ac.uk>
	<49C3C2BF.3020106@temporal-wave.com>
Message-ID: <8773d42e0903201312r35720c77lec502fc7b625cc6d@mail.gmail.com>

Jim,

thanks for the response. I think I might go with the toTreeString idea. That
will provide enough information to parse on the server.

In answer to the last question...I only process a subset of the data in
Actionscript and look for parsing and syntax errors there. Once the user has
entered all data, the server version parses the whole data file which has
millions of records.


Thanks
Des



2009/3/21 Jim Idle <jimi at temporal-wave.com>

>  Sam Barnett-Cormack wrote:
>
> Des Hartman wrote:
>
>
>  This is a question that I suspect the answer is No, but I thought I'd
> ask anyway.
>
> If I have two implementations of ANTLR in different languages;
> ActionScript and Java, Is there a way that I can share the AST Tree
> (CommonTree) Objects between them?
>
> Idea is I enter a formula in a Flex application and do the parsing to
> AST using Actionscript. Once done I send the CommonTree objects to the
> server and this is based on Java. Here the server uses the same AST to
> then repeat the calculations on a much greater dataset.
>
>
>  It's certainly possible in theory, but I don't know of any easy way.
> You'd probably need some degree of custom code for marshal/unmarshal of
> the the ActionScript objects in Java. If they were transmitted in some
> vaguely-standard format, like JSON or some form of XML, you might be
> able to use libraries to help with the Java handling, but direct
> object--object translation seems unlikely.
>
>
>
>  Depending on performance traits, the best way would be to create a
> serialization routine for the actions script produced AST and a
> de-serializer for Java. This should be simple to do manually as you can copy
> the code that does toStringTree() and make sure you delimit things in such a
> way that you can deserialize without another parser. The existing format for
> printing trees might even be very close. We should think about doing this in
> a generic way within ANTLR, not so much for inter language integration, but
> I can see that there might be some value in saving ASTs in general. Of
> course, once you add custom payloads and so on, all bets might be off, and
> you would lose information such as the original input string.
>
> One question I have though is if you have to ship it back to the server
> anyway, why not just ship the source string to a Java Web Service or AJAX
> routine? I prsuem that you have vlaid reasons such as propagation delays and
> so on.
>
> Jim
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090321/decb5c72/attachment.html 

From viridium at gmail.com  Fri Mar 20 14:28:06 2009
From: viridium at gmail.com (Mihai Danila)
Date: Fri, 20 Mar 2009 17:28:06 -0400
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <b00576380903200822w29deefcey84e2fe542d23aa58@mail.gmail.com>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C398DF.3020104@s7software.com>
	<b00576380903200822w29deefcey84e2fe542d23aa58@mail.gmail.com>
Message-ID: <b00576380903201428r149006b8iaf092f86f398ed6a@mail.gmail.com>

I forgot to CC the list on this one.

On Fri, Mar 20, 2009 at 11:22 AM, Mihai Danila <viridium at gmail.com> wrote:

>
> Cool; thanks for the links. Your way of fixing it is more elegant than
> enumerating all the token prefixes in the alphanumericToken rule. Maybe
> I'll demote alphanumeric and alphanumericToken back to lexer rules. This
> will create problems with specifying ISO dates, problems which can be fixed
> with constructs like the one yo gave me two mails ago. Since I can't escape
> these constructs, might as well have the lexer construct bigger tokens (I
> suspect it'll be more efficient than having the parser construct
> alphanumerics).
>
> I'm looking forward for the day when the generator UI will be able to take
> on some of these tasks of warning of problematic productions, namely
> productions that would cause the lexer to err out like token prefixes.
>
> Also, I find it dangerous that the auto-recovery feature is enabled by
> default. With my grammar, this means that my software was able to produce
> valid queries inconsistent with the semantics of the query string being
> parsed. Of course, all is solved in time, as I learn more and more about
> ANTLR, but I'd rather it erred on the safe side. In fact, most use cases out
> there will prefer fail fast parsing, I would think. You certainly don't see
> any compilers out there ignore a few characters and still try to compile.
>
> Again, thanks and this has cleared it up.
>
>
> Mihai
>
> On Fri, Mar 20, 2009 at 9:23 AM, Indhu Bharathi <indhu.b at s7software.com>wrote:
>
>> Unfortunately, ANTLR implementation of Lexer doesn't backtrack (maybe for
>> efficiency purposes). Backtracking and taking an alternative can be done
>> only in the parser. This was already discussed in the list. See -
>> http://www.antlr.org/pipermail/antlr-interest/2009-February/032981.html.
>>
>> - Indhu
>>
>> Mihai Danila wrote:
>>
>>>
>>> Thanks Indhu,
>>>
>>> In the link you sent, you troubleshoot a slightly different, but the post
>>> did help.
>>>
>>> In my scenario, the lexer chooses a rule based on a prefix and fails to
>>> fall back to try a collection of shorter tokens. The lexer doesn't go as far
>>> as TOR before deciding simply because by the time a TO is read there is no
>>> alternative to TO in lexer scope (except there would be if it wasn't greedy
>>> as per my note below). Your indication about the longest possible token
>>> policy has cleared it up for me. The only alternative to TODAY by the time
>>> TO has been read is to create an alphanumeric out of alphanumericTokens, and
>>> of course that is a parser rule and is therefore is outside of the lexer's
>>> horizon. This must be the problem.
>>>
>>> A question still remains. If the lexer cannot create a valid token
>>> without dropping characters, shouldn't it fall back and try to produce
>>> smaller tokens (which my grammar allows for, the smaller tokens being D and
>>> A) to give a chance to the parser? Apparently, the lexer is prematurely
>>> moving into an error state without noticing that a different token
>>> arrangement would keep it in the green.
>>>
>>>
>>> Mihai
>>>
>>> On Tue, Mar 10, 2009 at 3:48 AM, Indhu Bharathi <indhu.b at s7software.com<mailto:
>>> indhu.b at s7software.com>> wrote:
>>>
>>>    Try this:
>>>
>>>    Today: ( (Today_) => 'Today' ) ;
>>>    fragment Today_
>>>        :    'Today'
>>>        ;
>>>
>>>    However, I'm not sure if this's the most elegant way to fix it.
>>>
>>>    Read the following thread to understand more on why exactly this
>>>    happens:
>>>
>>> http://www.antlr.org/pipermail/antlr-interest/2009-February/032959.html
>>>
>>>    - Indhu
>>>
>>>
>>>    ----- Original Message -----
>>>    From: Mihai Danila <viridium at gmail.com <mailto:viridium at gmail.com>>
>>>    To: antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>>>    Sent: Tuesday, March 10, 2009 6:30:43 AM GMT+0530 Asia/Calcutta
>>>    Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
>>>
>>>
>>>    Hi,
>>>
>>>    I thought I had my DMQL grammar nailed after several months of no
>>>    issues, until recently a query failed. I've already massaged the
>>>    grammar in a few ways so I'm a bit at a loss as to what the
>>>    problem is this time. Do I have to enumerate all the possible
>>>    token prefixes (including TO, TOD, TODA, N, NO, A, AN, O) in the
>>>    alphanumericToken rule to fix this one? Am I missing something?
>>>
>>>    Here's the query:
>>>    (f=I?TORO)
>>>
>>>    If I debug this, here's what ANTLR parses:
>>>    (f=I?O)
>>>
>>>    Here's the grammar:
>>>    grammar Dmql;
>>>
>>>    options {
>>>    output=AST;
>>>    }
>>>
>>>    tokens {
>>>    Or; And; Not;
>>>    FieldCriteria;
>>>    LookupAnd; LookupNot; LookupOr; LookupAny;
>>>    StringList; StringEquals; StringStartsWith;
>>>    StringContains; StringChar; EmptyString;
>>>    RangeList; RangeBetween; RangeGreater; RangeLower;
>>>    ConstantValue;
>>>    }
>>>
>>>    @header { package com.stratusdata.dmql.parser.antlr; }
>>>    @lexer::header { package com.stratusdata.dmql.parser.antlr; }
>>>
>>>    @rulecatch {
>>>      catch (RecognitionException re) {
>>>        throw re;
>>>      }
>>>    }
>>>
>>>    dmql: searchCondition;
>>>    searchCondition: queryClause (('|' | BoolOr) queryClause)* -> ^(Or
>>>    queryClause+);
>>>    queryClause: booleanElement ((',' | BoolAnd) booleanElement)* ->
>>>    ^(And booleanElement+);
>>>    booleanElement: queryElement | ('~' | BoolNot) queryElement ->
>>>    ^(Not queryElement);
>>>    queryElement: '('! (fieldCriteria | searchCondition) ')'!;
>>>
>>>    fieldCriteria: field '=' fieldValue -> ^(FieldCriteria field
>>>    fieldValue);
>>>    field: ('_' | alphanumericToken)+ -> ConstantValue[$field.text];
>>>    fieldValue: lookupList | stringList | rangeList | nonInteger |
>>>    period | stringLiteral | empty;
>>>    stringLiteral: StringLiteral;
>>>    empty: '.EMPTY.' -> EmptyString;
>>>
>>>    lookupList: lookupOr | lookupAnd | lookupNot | lookupAny;
>>>    lookupOr: '|' lookup (',' lookup)* -> ^(LookupOr lookup+);
>>>    lookupAnd: '+' lookup (',' lookup)* -> ^(LookupAnd lookup+);
>>>    lookupNot: '~' lookup (',' lookup)* -> ^(LookupNot lookup+);
>>>    lookupAny: '.ANY.' -> LookupAny;
>>>    lookup: alphanumeric | stringLiteral;
>>>
>>>    stringList: string (',' string)* -> ^(StringList string+);
>>>    string: stringEq | stringStart | stringContains | stringChar;
>>>    stringEq: alphanumeric -> ^(StringEquals alphanumeric);
>>>    stringStart: alphanumeric '*'  -> ^(StringStartsWith alphanumeric);
>>>    stringContains: '*' alphanumeric '*' -> ^(StringContains
>>>    alphanumeric);
>>>    stringChar: alphanumeric? ('?' alphanumeric?)+ -> ^(StringChar
>>>    ConstantValue[$stringChar.text]);
>>>
>>>    rangeList: dateTimeRangeList | dateRangeList | timeRangeList |
>>>    numericRangeList;
>>>    dateTimeRangeList: dateTimeRange (',' dateTimeRange)* ->
>>>    ^(RangeList dateTimeRange+);
>>>    dateRangeList: dateRange (',' dateRange)* -> ^(RangeList dateRange+);
>>>    timeRangeList: timeRange (',' timeRange)* -> ^(RangeList timeRange+);
>>>    numericRangeList: numericRange (',' numericRange)* -> ^(RangeList
>>>    numericRange+);
>>>    dateTimeRange: x=dateTime '-' y=dateTime -> ^(RangeBetween $x $y)
>>>    | x=dateTime '-' -> ^(RangeLower $x)
>>>    | x=dateTime '+' -> ^(RangeGreater $x);
>>>    dateRange: x=date '-' y=date -> ^(RangeBetween $x $y)
>>>    | x=date '-' -> ^(RangeLower $x)
>>>    | x=date '+' -> ^(RangeGreater $x);
>>>    timeRange: x=time '-' y=time -> ^(RangeBetween $x $y)
>>>    | x=time '-' -> ^(RangeLower $x)
>>>    | x=time '+' -> ^(RangeGreater $x);
>>>    numericRange: x=number '-' y=number -> ^(RangeBetween $x $y)
>>>    | x=number '-' -> ^(RangeLower $x)
>>>    | x=number '+' -> ^(RangeGreater $x);
>>>    period: (isoDateTime | isoDate | isoTime) ->
>>>    ConstantValue[$period.text];
>>>    dateTime: (isoDateTime | Now) -> ConstantValue[$dateTime.text];
>>>    date: (isoDate | Today) -> ConstantValue[$date.text];
>>>    time: isoTime -> ConstantValue[$time.text];
>>>    number: integer | nonInteger;
>>>    integer: D+ -> ConstantValue[$integer.text];
>>>    nonInteger: (negativeNumber | positiveDecimal) ->
>>>    ConstantValue[$nonInteger.text];
>>>    negativeNumber: '-' D+ ('.' D+)?;
>>>    positiveDecimal: D+ '.' D+;
>>>
>>>    timeZoneOffset: ('+' | '-') D D ':' D D;
>>>    isoDate: D D D D '-' D D '-' D D;
>>>    isoTime: D D ':' D D ':' D D ('.' D (D D?)?)?;
>>>    isoDateTime: isoDate 'T' isoTime ('Z' | timeZoneOffset)?;
>>>
>>>    alphanumeric: alphanumericToken+ -> ConstantValue[$alphanumeric.text];
>>>    alphanumericToken: (D | A | BoolNot | BoolAnd | BoolOr | Now |
>>>    Today | 'T' | 'Z');
>>>
>>>    BoolNot: 'NOT';
>>>    BoolAnd: 'AND';
>>>    BoolOr: 'OR';
>>>    Now: 'NOW';
>>>    Today: 'TODAY';
>>>    StringLiteral: ('"' (~('\u0000'..'\u001F' | '\u007F' | '"') |
>>>    ('""'))* '"');
>>>    A: (('A'..'Z') | ('a'..'z'));
>>>    D: ('0'..'9');
>>>    Whitespace: (' ' | '\t' | '\n') { $channel = HIDDEN; };
>>>
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/5b1afcad/attachment.html 

From viridium at gmail.com  Fri Mar 20 14:56:27 2009
From: viridium at gmail.com (Mihai Danila)
Date: Fri, 20 Mar 2009 17:56:27 -0400
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <49C3C7A6.2090909@temporal-wave.com>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C3C7A6.2090909@temporal-wave.com>
Message-ID: <b00576380903201456h2143bd23hc21d874adf2f77cb@mail.gmail.com>

Hey Jim,


You are right. I have to embrace the philosophy of the tool. It's my fault I
didn't learn enough about it in due time, even though I did buy the book.
It's just that we sometimes try to learn just enough, however much we feel
that is, and continue.

DMQL proves a great example of nice, albeit ambiguous grammar, but one that
poses quite a few challenges to the less well versed ANTLR coder. The
grammar is aimed at describing a simple language, and as a result dates,
strings, numbers are neither enclosed in quotes nor introduced by special
keywords. Yes, there's ambiguity, like with the tokens having special
meaning, but that's something we have to live with at the parsing stage and
we can figure out later (based on field metadata). In my implementation,
TODAY will be interpreted as a string if at all possible. Only if it's in a
range does it conjure up a date.

I had started with longer tokens; I'm feeling that single character tokens
can cause unnecessary backtracking during the parsing stage. But I kept
having issues with either ranges or numbers or ISO date parsing. It would
either parse "123-456" as a string followed by a negative number, which
would then fail, or choke on "123--456", or choke on the time zone specifier
-12:34 thinking there's a negative number in there, etc. Surely those
predicates introduced by => would have helped (they're called syntactic
predicates, I think), but it seemed like a lot to give just to get there;
that's how I ended with the simplest of tokens, like A and D, and moved much
of the alphanumerics into parser rules.

To be truthful, I wanted to capture as much validation as I could into the
grammar. I could have worked with NumberOrStringOrTodayTokenOrAndToken kind
of tokens and had them figured out in code, but I felt it could be done
without. (And it can, but not necessarily in an elegant manner: short of
some missing prefix enumerations, the grammar works; my test coverage is
pretty solid.)
I didn't manage to keep the grammar that clean. As you can see by looking at
it, there are already some less optimal results due to the massaging that
took place here and there. For example, why does fieldValue accept only
non-integer numbers? Well, it doesn't, it's just that integers are matched
by other rules. etc., etc. Sometimes I almost feel a nice, albeit ambiguous
representation of the grammar should be possible, and it should be fixable
with additional rules. That could make for a more readable grammar.
Anyway, my grammar had long been fixed with prefix enumerations when I
noticed Indhu's initial reply today, but some notes on the possibility of
enhancements for the tool still remain. As posted in my previous e-mail, the
grammar validator could point out such instances where the lexer might have
weaknesses. And the automatic recovery feature seems a bit dangerous if
enabled by default; at least it did let an error sneak by my unit tests for
several months.

Let's not hesitate to point out, however, that we do have a great and
powerful tool on our hands here. :)


Mihai


2009/3/20 Jim Idle <jimi at temporal-wave.com>

>  Mihai Danila wrote:
>
>
>
> A question still remains. If the lexer cannot create a valid token without
> dropping characters, shouldn't it fall back and try to produce smaller
> tokens (which my grammar allows for, the smaller tokens being D and A) to
> give a chance to the parser? Apparently, the lexer is prematurely moving
> into an error state without noticing that a different token arrangement
> would keep it in the green.
>
>  Remember that this is not {f}lex. The lexer does not try each possible
> match in turn then go on to the next when one fails. ANTLR lexers are more
> programmatic in nature; they are both more flexible (no pun intended) and
> more prone to getting things wrong without more explicit instructions
> (though some things are earmarked for improvement).
>
> If you do this type of thing though:
>
> fragment TODAY : ;
> fragment TOMORROW : ;
> fragment D;
>
> Alpha :
>       ('TODAY')=>'TODAY' { $type = TODAY; }
>     | ('TOMORROW')=>'TOMMOROW' { $type = TOMORROW; }
>     | {canBeD}?=> 'D' {$type = D; }
>     | ('a'..'z'|'A'..'Z')
>     ;
>
> ErrChar : . { Record illegal char err; skip(); } ;
>
>
> BTW - We all need to get past assuming that the longest match thing is
> causing problems. In most cases this isn't the issue per se, but lack of
> enough guidance to the rules to tell ANTLR what you want the outcomes to be.
> There are various opinions on what the analysis should do by default of
> course and some of that I believe Ter has already said he is going to try to
> make more 'intuitive'.
>
> But for now, if you remember that ANTLR will just look for enough 'stuff'
> to decide that this is the only rule that can work from here and it does not
> come back after going down that path and say "Oh, that was wrong, let me try
> a simpler/the next rule", unless you tell it that that is what you want a
> little more explicitly than you would in flex.
>
> In the end though, if you don't cover all the bases, you will just get a
> mismatched character, and you should not get such a thing from a lexer.
> Also, it is always better to accept any old rubbish in a token when you can
> and then verify the char sequence later. So, if you can't have '\u0567' in
> an ID, accept it anyway (assuming it isn't some other valid separator etc),
> then when you see the ID token in the parser, call isValidId() and print
> "Error - the identifier ... cannot contain char '\u0567' - line 45, offset
> 17". This makes much more sense the "Illegal char:" from the default lexer
> error.
>
> Similarly, do not try to match 'D' on its own. Just look for ID in the
> parser then have a check to see that it is a D, or separate the parsing of
> that type of construct into an island grammar or external grammar. Divide
> and conquer etc.
>
>
> Jim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090320/a44d7090/attachment.html 

From paul.bouche at nsn.com  Fri Mar 20 16:10:08 2009
From: paul.bouche at nsn.com (=?ISO-8859-1?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Sat, 21 Mar 2009 00:10:08 +0100
Subject: [antlr-interest] Semantic Predicates in a Lexer
In-Reply-To: <PAT5C3nJDTDrNwRvLz500000195@pat.apertio.com>
References: <49C36E99.5060308@nsn.com> <49C3C134.6010302@temporal-wave.com>
	<49C3DA45.90708@nsn.com>
	<PAT5C3nJDTDrNwRvLz500000195@pat.apertio.com>
Message-ID: <49C42250.80402@nsn.com>

Hi Gavin,
> Given the input "3", both NAME and NUMBER are viable output rules 
> since both consume the exact same input.  ANTLR should therefore 
> choose whichever one is listed first (which ought to be NUMBER in this 
> case, unless you've listed the rules out-of-order).
Yes it should, but since there is a gated sem pred for NAME it does not. 
The redundant gated sem pred at the NUMBER rule fixed this problem in my 
actual work, but is cumbersome to add to all products NAME pertains to. 
So no ANTLR does not follow the token which is defined first rule when 
there are gated semantic predicates present - bug or feature? If feature 
I'd like to know why.
>   If you don't want to be at the mercy of this sort of thing then you 
> should modify the NAME rule so that a NAME is not permitted to begin 
> with a digit.
I could do that, but why? NAMEs shall begin with a digit, i.e. '3a' is a 
name, and it is not ambigious. This works fine without sem preds.
> But given your example input and what you've said thus far, I think 
> you're overcomplicating things.
Really?
>   If there are no whitespace limitations between the name fragments 
> and the colon (ie. whitespace is permitted and ignored), then what you 
> really should do is to remove the NAME rule entirely and just have the 
> lexer emit SIMPLENAME, COLON, and NUMBER.  Then up in the parser you 
> can define a 'name' rule that recognises SIMPLENAME COLON SIMPLENAME 
> (or whatever) as a single logical unit.
Yeah possible, this is what I do in the case where I want it. Did I 
mention that I solved my problem by emitting more than one token in the 
special case of names without colons? But to do this in all cases would 
be a problem because I'd like to add them as one token to the AST, so 
doing that would have meant more rewrite work in the AST parser.

Just good to know that gated semantic predicates in lexer rules should 
be met with caution ;-)

BR,
Paul


-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From antlr at mirality.co.nz  Fri Mar 20 17:04:02 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 21 Mar 2009 13:04:02 +1300
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <0B1E979E-1F5C-45D7-81C3-2A134D69E6FF@cs.usfca.edu>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C398DF.3020104@s7software.com>
	<AB076C6C-0150-4405-A36D-0F5502076109@cs.usfca.edu>
	<20090320195536.4DC39341844A@www.antlr.org>
	<0B1E979E-1F5C-45D7-81C3-2A134D69E6FF@cs.usfca.edu>
Message-ID: <20090321000425.097B534184BD@www.antlr.org>

At 08:58 21/03/2009, Terence Parr wrote:
 >Well, come to think of it, I have not tried it a while but:
 >
 >A : ('(' A ')')=> '(' A ')'
 >    | '(' A* ')'
 >   ;
 >
 >should work.  Yep, seems to:
 >
 >             if ( (LA2_0=='(') ) {
 >                 int LA2_1 = input.LA(2);
 >
 >                 if ( (synpred1_T()) ) {
 >                     alt2=1;
 >                 }
 >                 else if ( (true) ) {
 >                     alt2=2;
 >                 }

I suspect we're arguing from different usages of the word 
"backtracking" :)

I was referring to *automatic* backtracking (a la "backtrack=true" 
option).  I know that explicit predicates work ok.


From parrt at cs.usfca.edu  Fri Mar 20 17:05:49 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Mar 2009 17:05:49 -0700
Subject: [antlr-interest] DMQL Grammar - ANTLR Eats Characters
In-Reply-To: <20090321000415.5D6A7842CB@mail.cs.usfca.edu>
References: <b00576380903091800k32bdddabi95f68357a0bccb85@mail.gmail.com>
	<29424259.4391236671317344.JavaMail.root@star>
	<b00576380903200534t789c27ebo797dea87a2343d16@mail.gmail.com>
	<49C398DF.3020104@s7software.com>
	<AB076C6C-0150-4405-A36D-0F5502076109@cs.usfca.edu>
	<20090320195536.4DC39341844A@www.antlr.org>
	<0B1E979E-1F5C-45D7-81C3-2A134D69E6FF@cs.usfca.edu>
	<20090321000415.5D6A7842CB@mail.cs.usfca.edu>
Message-ID: <C067B1E9-E16F-4266-BBDD-53A3068D94C4@cs.usfca.edu>

lexer grammar T;

options {backtrack=true;}

A :  '(' A ')'
    | '(' A* ')'
   ;

Gives same output ;)

Ter
On Mar 20, 2009, at 5:04 PM, Gavin Lambert wrote:

> At 08:58 21/03/2009, Terence Parr wrote:
> >Well, come to think of it, I have not tried it a while but:
> >
> >A : ('(' A ')')=> '(' A ')'
> >    | '(' A* ')'
> >   ;
> >
> >should work.  Yep, seems to:
> >
> >             if ( (LA2_0=='(') ) {
> >                 int LA2_1 = input.LA(2);
> >
> >                 if ( (synpred1_T()) ) {
> >                     alt2=1;
> >                 }
> >                 else if ( (true) ) {
> >                     alt2=2;
> >                 }
>
> I suspect we're arguing from different usages of the word  
> "backtracking" :)
>
> I was referring to *automatic* backtracking (a la "backtrack=true"  
> option).  I know that explicit predicates work ok.
>


From ordinarybackstreetmoldywilliam at gmail.com  Fri Mar 20 23:42:32 2009
From: ordinarybackstreetmoldywilliam at gmail.com (william yuan)
Date: Sat, 21 Mar 2009 14:42:32 +0800
Subject: [antlr-interest] how to all the matched in java
Message-ID: <002001c9a9f0$c7804fd0$8e01a8c0@cozilywo123456>

Hi ,
problem like this ,
i ve defined a grammar like this 
expr: ID*;
ID:('a'..'z')*;
and my input is 
ABC DEF
so how can i get IDs which match to ABC and DEF both?
i know use 
expr:ID*
{ System.out.println($ID.text)} 
to get the value which matched by ID ,but it only can get the value DEF ,which is the last matched ,

i wanna get ALL the matched ? so ... that 's my problem ,

Thanks
William Vian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090321/465d4c54/attachment.html 

From indhu.b at s7software.com  Sat Mar 21 00:32:23 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Sat, 21 Mar 2009 13:02:23 +0530
Subject: [antlr-interest] how to all the matched in java
In-Reply-To: <002001c9a9f0$c7804fd0$8e01a8c0@cozilywo123456>
References: <002001c9a9f0$c7804fd0$8e01a8c0@cozilywo123456>
Message-ID: <49C49807.6000503@s7software.com>

grammar Test;

expr : (ID {System.out.println( $ID.text );} )*
;

ID : 'a'..'z'+
;

WS : (' ' | '\t' | '\n')+ {$channel = HIDDEN;}
;


- Indhu


william yuan wrote:
> Hi ,
> problem like this ,
> i ve defined a grammar like this
> expr: ID*;
> ID:('a'..'z')*;
> and my input is
> ABC DEF
> so how can i get IDs which match to ABC and DEF both?
> i know use
> expr:ID*
> { System.out.println($ID.text)}
> to get the value which matched by ID ,but it only can get the value
> DEF ,which is the last matched ,
>
> i wanna get ALL the matched ? so ... that 's my problem ,
> Thanks
> William Vian
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From JALuber at gmx.de  Sat Mar 21 04:09:29 2009
From: JALuber at gmx.de (Johannes Luber)
Date: Sat, 21 Mar 2009 12:09:29 +0100
Subject: [antlr-interest] C# runtime for ANTLR 3.1.3
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BAD@Bloodymary.ironwillgames.com>
References: <Pine.CYG.4.58.0903200932030.496@WHIRLWIND>
	<86403CA0939415448BCCB83855EFE09AA67BAD@Bloodymary.ironwillgames.com>
Message-ID: <20090321110929.117190@gmx.net>

> You should compile the CSharp runtime in Visual Studio 2005 or 2008.
> That's the one used by the CSharp2 target. The "target" refers to what
> you put in the grammar's options section - if you use CSharp2 then the
> generated code will make use of some C# 2.0 features, but extends the
> same runtime classes as the CSharp target, hence the shared "runtime"
> library.
> 
> Sam

What's strange is that I created the runtime package already. It is btw uploaded in the runtime/csharp/distro directory. Nonetheless it should have been available on the website. Ter, did you forget to push the distro directories?

Johannes
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Peter C. Chapin
> Sent: Friday, March 20, 2009 8:37 AM
> To: ANTLR Mailing List
> Subject: [antlr-interest] C# runtime for ANTLR 3.1.3
> 
> 
> I see that ANTLR 3.1.3 is available on the web site. I'm about to start
> a
> new ANTLR project so I figured I might as well start with the latest
> version. My project is in C#, however I notice that there is no C#
> runtime
> posted (yet) for 3.1.3. "No problem," I thought, "I'll compile from
> source." I downloaded the source archive but in the runtime folder I see
> 'CSharp' and 'CSharp3.' The ANTLR documentation seems to say that I
> should
> be using the CSharp2 language option instead of the old CSharp option.
> But if that is so, I'm confused about which source folder I should be
> using. I tried compiling the CSharp3 solution, but the build failed due
> to
> a missing key file. I'm relatively new to C# so I'm not sure if I should
> be expecting that or not.
> 
> What is the status of C# with ANTLR 3.1.3?
> 
> Thanks!
> 
> Peter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Aufgepasst: Sind Ihre Daten beim Online-Banking auch optimal gesch?tzt?
Jetzt absichern: https://homebanking.gmx.net/?mc=mail at footer.hb

From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 06:27:48 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 21 Mar 2009 13:27:48 +0000
Subject: [antlr-interest] Invalid code being generated - return attribute
 not being parsed in @init?
Message-ID: <49C4EB54.9060507@lancaster.ac.uk>

Hi all,

Working based on the example on page 86 of TDAR, I have the following rule:

objIdComponents returns [boolean hasNandN]
@init {
  $hasNandN = false;
}
  : (c=objIdComponent {if $c.nAndN $hasNandN=true;})+ ;

And the generated code includes:

ASN_1Parser.objIdComponents_return retval = new
ASN_1Parser.objIdComponents_return();
retval.start = input.LT(1);
int objIdComponents_StartIndex = input.index();
CommonTree root_0 = null;

ASN_1Parser.objIdComponent_return c = null;




  $hasNandN = false;


The final quoted line would appear to be generated by the @init action.
The code generated from the action embedded in the rule seems to be
fine. I'm sure I could work-around this by putting retval.hasNandN in
the @init block, but I'd rather be doing it 'right'. Am I doing
something wrong, or is there some sort of bug? Using ANTLR 3.1.2,
through ANTLR-IDE in Eclipse.

Sam

From jimi at temporal-wave.com  Sat Mar 21 08:36:44 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 21 Mar 2009 08:36:44 -0700
Subject: [antlr-interest] how to all the matched in java
In-Reply-To: <002001c9a9f0$c7804fd0$8e01a8c0@cozilywo123456>
References: <002001c9a9f0$c7804fd0$8e01a8c0@cozilywo123456>
Message-ID: <49C5098C.5080300@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090321/3f769221/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 09:16:53 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 21 Mar 2009 16:16:53 +0000
Subject: [antlr-interest] Tree rewriting (filter=true, output=ast)
Message-ID: <49C512F5.5070308@lancaster.ac.uk>

So, I'm trying to deal with some of the parse ambiguities in my grammar
lazily - accept lots of stuff in the parser, and do some tree rewriting
to fix things (and find some errors).

What I want to do is look at all VLIST trees, determine which of the
following cases they fit:

1) All children are either ^(NAMENUM ...), ^(EXTREF ...), LCID or NUMBER
2) Children are *anything* except ^(NAMENUM ...)
3) Children include ^(NAMENUM ...) but are not limited to those
mentioned in (1) (ie. the complement of the union of (1) and (2)).

In case (2), the tree should be passed. In case (1), the VLIST tree
should become an OBJID tree, but with the same children. In case (3), an
error should be generated (not sure of my error-handling strategy yet,
probably error nodes in the tree).

My attempt, so far, is:

tree grammar ASN_1_tree_pass1;

options {
	language = Java;
	output = AST;
	tokenVocab=ASN_1;
	ASTLabelType=CommonTree;
	filter=true;
}

valueListValue
  : ^(VLIST
    (
      (~(NAMENUM))*
      | v+=(nameAndNumberForm | LCID | NUMBER | externalValueReference)+
        -> ^(OBJID $v+)
    ))
  ;

nameAndNumberForm : ^(NAMENUM LCID NUMBER) ;

externalValueReference : ^(EXTVREF CAPID LCID) ;

I get "input such as ... can match multiple alternatives" with regard to
the subrule in valueListValue - the "such as" refers to an awful lot of
tokens. Of course, this is trying to match a NAMENUM node, not a
subtree, so it'd probably break horribly, but it's the nearest I can get
and still only get a warning. Using nameAndNumberForm in place of
NAMENUM gives syntax errors. If I understand how the trees work
correctly, just matching NAMENUM won't work, because it's okay in that
case for NAMENUM to appear *somewhere* under VLIST, just not as an
immediate child.

The work so far doesn't do anything for case (3).

So, can anyone point me in the right direct (including a wiki page that
will actually help - I did some searching, but nothing seems to address
my particular problem)? I'd appreciate it.

Sam

From antlr at mirality.co.nz  Sat Mar 21 11:14:27 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 22 Mar 2009 07:14:27 +1300
Subject: [antlr-interest] Tree rewriting (filter=true, output=ast)
In-Reply-To: <49C512F5.5070308@lancaster.ac.uk>
References: <49C512F5.5070308@lancaster.ac.uk>
Message-ID: <20090321181456.647B63418410@www.antlr.org>

At 05:16 22/03/2009, Sam Barnett-Cormack wrote:
 >1) All children are either ^(NAMENUM ...), ^(EXTREF ...), LCID 
or
 >NUMBER
 >2) Children are *anything* except ^(NAMENUM ...)
 >3) Children include ^(NAMENUM ...) but are not limited to those
 >mentioned in (1) (ie. the complement of the union of (1) and 
(2)).
[...]
 >valueListValue
 >  : ^(VLIST
 >    (
 >      (~(NAMENUM))*
 >      | v+=(nameAndNumberForm | LCID | NUMBER |
 >externalValueReference)+
 >        -> ^(OBJID $v+)
 >    ))
 >  ;

You should always list your more-specific alternatives above the 
less-specific ones (so have your nameAndNumberForm above the 
~NAMENUM alt).

Also, label+=(block ...) doesn't actually work -- the label always 
ends up being null.

Not sure if the following will work, but it'd be my first attempt 
to get the behaviour you're wanting:

valueListValue
scope { bool hasOther; bool hasNameNum; }
@init { $valueListValue::hasOther = false; 
$valueListValue::hasNameNum = false; }
   : ^(VLIST
     ( v+=nameAndNumberForm { $valueListValue::hasNameNum = true; 
}
     | (v+=externalValueReference | v+=LCID | v+=NUMBER)
     | . { $valueListValue::hasOther = true; }
     )+
     ( { $valueListValue::hasNameNum && $valueListValue::hasOther) 
}? { raise error; }
     | { $valueListValue::hasNameNum }? -> ^(OBJID $v+)
     )?
   ;

(I'm a little unsure about the specific syntax for that last 
bit.  But I think something like that ought to do the trick.)


From parrt at cs.usfca.edu  Sat Mar 21 11:57:14 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Mar 2009 11:57:14 -0700
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
Message-ID: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>

http://www.antlr.org/jira/browse/ANTLR-392

any objections?

Ter



From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 12:12:06 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 21 Mar 2009 19:12:06 +0000
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
Message-ID: <49C53C06.1090102@lancaster.ac.uk>

Terence Parr wrote:
> http://www.antlr.org/jira/browse/ANTLR-392
> 
> any objections?

Would this effectively make

rule : .* (some-exit-set)

into

rule : ~(some-exit-set)* (some-exit-set)

Except, presumably, for magic with predicates and LL(*) cunningness?

-- 
Sam Barnett-Cormack

From parrt at cs.usfca.edu  Sat Mar 21 12:13:38 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Mar 2009 12:13:38 -0700
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <49C53C06.1090102@lancaster.ac.uk>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
	<49C53C06.1090102@lancaster.ac.uk>
Message-ID: <99261290-FBE5-4387-AF57-5FE07A2A3EBC@cs.usfca.edu>


On Mar 21, 2009, at 12:12 PM, Sam Barnett-Cormack wrote:

> Terence Parr wrote:
>> http://www.antlr.org/jira/browse/ANTLR-392
>> any objections?
>
> Would this effectively make
>
> rule : .* (some-exit-set)
>
> into
>
> rule : ~(some-exit-set)* (some-exit-set)
>
> Except, presumably, for magic with predicates and LL(*) cunningness?

That's basically it.  .* means

while (!EOF) consume()

at moment.  makes no sense.

Ter

From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 12:16:17 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 21 Mar 2009 19:16:17 +0000
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <99261290-FBE5-4387-AF57-5FE07A2A3EBC@cs.usfca.edu>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
	<49C53C06.1090102@lancaster.ac.uk>
	<99261290-FBE5-4387-AF57-5FE07A2A3EBC@cs.usfca.edu>
Message-ID: <49C53D01.1030200@lancaster.ac.uk>

Terence Parr wrote:
> 
> On Mar 21, 2009, at 12:12 PM, Sam Barnett-Cormack wrote:
> 
>> Terence Parr wrote:
>>> http://www.antlr.org/jira/browse/ANTLR-392
>>> any objections?
>>
>> Would this effectively make
>>
>> rule : .* (some-exit-set)
>>
>> into
>>
>> rule : ~(some-exit-set)* (some-exit-set)
>>
>> Except, presumably, for magic with predicates and LL(*) cunningness?
> 
> That's basically it.  .* means
> 
> while (!EOF) consume()
> 
> at moment.  makes no sense.

I'm inclined to agree with you, then... is there a need to provide an 
option to allow people to get at the current behaviour if they really 
want to?

-- 
Sam Barnett-Cormack

From sharwell at pixelminegames.com  Sat Mar 21 12:17:19 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 21 Mar 2009 14:17:19 -0500
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BC1@Bloodymary.ironwillgames.com>

Absolutely (as in I like the idea, no objection). You can always add .*
(nothing) or .* EOF if you want to match to the end. Clearly someone who
writes .* (anything not EOF) is not trying to read to the end. :)

The following is not greedy/works great already:

ML_COMMENT
	:	'/*' .* '*/'
	;

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, March 21, 2009 1:57 PM
To: ANTLR Interest Mailing List
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy

http://www.antlr.org/jira/browse/ANTLR-392

any objections?

Ter



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Sat Mar 21 12:17:37 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Mar 2009 12:17:37 -0700
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <49C53D01.1030200@lancaster.ac.uk>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
	<49C53C06.1090102@lancaster.ac.uk>
	<99261290-FBE5-4387-AF57-5FE07A2A3EBC@cs.usfca.edu>
	<49C53D01.1030200@lancaster.ac.uk>
Message-ID: <A8C2AEA7-DF48-4F3A-B574-2E62C4D04159@cs.usfca.edu>


On Mar 21, 2009, at 12:16 PM, Sam Barnett-Cormack wrote:
>
> I'm inclined to agree with you, then... is there a need to provide  
> an option to allow people to get at the current behaviour if they  
> really want to?

they can shoot foot with

( options {greedy=true;} : . )*

:)

Ter

From parrt at cs.usfca.edu  Sat Mar 21 12:18:14 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Mar 2009 12:18:14 -0700
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BC1@Bloodymary.ironwillgames.com>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09AA67BC1@Bloodymary.ironwillgames.com>
Message-ID: <63036AA6-9C73-4E40-89F2-1E30D554C34A@cs.usfca.edu>


On Mar 21, 2009, at 12:17 PM, Sam Harwell wrote:

> Absolutely (as in I like the idea, no objection). You can always  
> add .*
> (nothing) or .* EOF if you want to match to the end. Clearly someone  
> who
> writes .* (anything not EOF) is not trying to read to the end. :)
>
> The following is not greedy/works great already:
>
> ML_COMMENT
> 	:	'/*' .* '*/'
> 	;

yeah, lexer is nongreedy by default; goin to be consistent now.
T

From sharwell at pixelminegames.com  Sat Mar 21 12:20:26 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 21 Mar 2009 14:20:26 -0500
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <A8C2AEA7-DF48-4F3A-B574-2E62C4D04159@cs.usfca.edu>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu><49C53C06.1090102@lancaster.ac.uk><99261290-FBE5-4387-AF57-5FE07A2A3EBC@cs.usfca.edu><49C53D01.1030200@lancaster.ac.uk>
	<A8C2AEA7-DF48-4F3A-B574-2E62C4D04159@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BC2@Bloodymary.ironwillgames.com>

Just .* EOF
Would work too. :)

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Saturday, March 21, 2009 2:18 PM
To: Sam Barnett-Cormack
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] proposal: make .* and .+ always nongreedy


On Mar 21, 2009, at 12:16 PM, Sam Barnett-Cormack wrote:
>
> I'm inclined to agree with you, then... is there a need to provide  
> an option to allow people to get at the current behaviour if they  
> really want to?

they can shoot foot with

( options {greedy=true;} : . )*

:)

Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From sharwell at pixelminegames.com  Sat Mar 21 12:24:27 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 21 Mar 2009 14:24:27 -0500
Subject: [antlr-interest] Proposal: synpred inversion?
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BC3@Bloodymary.ironwillgames.com>

Currently you can only invert sets in a synpred. It seems like inverting
the entire predicate could be useful. It could be implemented by
backtracking returning state.failed instead of !state.failed, though
putting it in the dfa could be a bit tougher (but doable).

 

I'm particularly interested in an example of how this could encourage
poor grammar design, as that would be a big fault with the idea.

 

Sam

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090321/0adb4250/attachment.html 

From parrt at cs.usfca.edu  Sat Mar 21 12:25:59 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Mar 2009 12:25:59 -0700
Subject: [antlr-interest] Proposal: synpred inversion?
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BC3@Bloodymary.ironwillgames.com>
References: <86403CA0939415448BCCB83855EFE09AA67BC3@Bloodymary.ironwillgames.com>
Message-ID: <80BB1883-E269-49D4-8CA9-D671AF06114A@cs.usfca.edu>


On Mar 21, 2009, at 12:24 PM, Sam Harwell wrote:

> Currently you can only invert sets in a synpred. It seems like  
> inverting the entire predicate could be useful. It could be  
> implemented by backtracking returning state.failed instead of ! 
> state.failed, though putting it in the dfa could be a bit tougher  
> (but doable).
>
> I?m particularly interested in an example of how this could  
> encourage poor grammar design, as that would be a big fault with the  
> idea.

PEGs have not-grammar-fragment but they are mostly useful in lexer.

Ter

From jimi at temporal-wave.com  Sat Mar 21 12:26:34 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 21 Mar 2009 12:26:34 -0700
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
Message-ID: <49C53F6A.5050808@temporal-wave.com>

Terence Parr wrote:
> http://www.antlr.org/jira/browse/ANTLR-392
>
>   
I think that is probably the correct default. However we need to 
document it all to hell ;-)

Jim

From sharwell at pixelminegames.com  Sat Mar 21 12:46:41 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 21 Mar 2009 14:46:41 -0500
Subject: [antlr-interest] Proposal: synpred inversion?
In-Reply-To: <80BB1883-E269-49D4-8CA9-D671AF06114A@cs.usfca.edu>
References: <86403CA0939415448BCCB83855EFE09AA67BC3@Bloodymary.ironwillgames.com>
	<80BB1883-E269-49D4-8CA9-D671AF06114A@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BC4@Bloodymary.ironwillgames.com>

I'm having trouble remembering the case where this came up in the
(distant?) past. I'm thinking the non-greedy wildcard might actually
resolve the issue.

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Saturday, March 21, 2009 2:26 PM
To: Sam Harwell
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] Proposal: synpred inversion?


On Mar 21, 2009, at 12:24 PM, Sam Harwell wrote:

> Currently you can only invert sets in a synpred. It seems like  
> inverting the entire predicate could be useful. It could be  
> implemented by backtracking returning state.failed instead of ! 
> state.failed, though putting it in the dfa could be a bit tougher  
> (but doable).
>
> I'm particularly interested in an example of how this could  
> encourage poor grammar design, as that would be a big fault with the  
> idea.

PEGs have not-grammar-fragment but they are mostly useful in lexer.

Ter

From antlr at shmuelhome.mine.nu  Sat Mar 21 12:51:48 2009
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Sat, 21 Mar 2009 21:51:48 +0200
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
Message-ID: <49C54554.4020603@shmuelhome.mine.nu>

Terence Parr wrote:
> http://www.antlr.org/jira/browse/ANTLR-392
>
> any objections?
>
> Ter
>
>
>   
Why is "." being singled out to be non-greedy (other than the idea that 
it is presumably stupid for it to be greedy). It seems that it will 
cause confusion if the option is not extended to all patterns.

Consider

case1: A* A B;
and,
case2: .* A B;

Should case1 fail because it is greedy but case2 would succeed?


From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 16:38:52 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 21 Mar 2009 23:38:52 +0000
Subject: [antlr-interest] Tree rewriting (filter=true, output=ast)
In-Reply-To: <49C512F5.5070308@lancaster.ac.uk> 
References: <49C512F5.5070308@lancaster.ac.uk> 
Message-ID: <49C57A8C.70409@lancaster.ac.uk>

Gavin Lambert wrote:
> You should always list your more-specific alternatives above the
> less-specific ones (so have your nameAndNumberForm above the ~NAMENUM alt).
> 
> Also, label+=(block ...) doesn't actually work -- the label always ends
> up being null.

That's annoying, but easy to bare in mind.

> Not sure if the following will work, but it'd be my first attempt to get
> the behaviour you're wanting:
> 
> valueListValue
> scope { bool hasOther; bool hasNameNum; }
> @init { $valueListValue::hasOther = false; $valueListValue::hasNameNum =
> false; }
>   : ^(VLIST
>     ( v+=nameAndNumberForm { $valueListValue::hasNameNum = true; }
>     | (v+=externalValueReference | v+=LCID | v+=NUMBER)
>     | . { $valueListValue::hasOther = true; }
>     )+
>     ( { $valueListValue::hasNameNum && $valueListValue::hasOther) }? {
> raise error; }
>     | { $valueListValue::hasNameNum }? -> ^(OBJID $v+)
>     )?
>   ;
> 
> (I'm a little unsure about the specific syntax for that last bit.  But I
> think something like that ought to do the trick.)

Apart from a mysterious ')' in your first sempred, it looks right to me.

The choice under VLIST generates warnings, and I guess I just have to
ignore them - it disallowing 3 for those inputs is what I want, after
all. However, the text of the warning mentions the constructs for
nameAndNumberForm and externalValueReference in the raw form, with DOWN
and UP tokens. This makes me worry whether this filter really will only
alter/disallow trees based on their first-tier content, rather than
looking deeper. I'm not sure how much tree parsers really are tree-aware
and how much they're syntactic sugar for parsing based on token streams
with the tree structure tokens DOWN and UP added in. Can anyone clarify
this, or otherwise reassure me? A VLIST might potentially contain
^(OBJID...) constructs underneat it, possibly a long way, and I don't
want to end up with errors because of it.

Sam


From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 16:45:08 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sat, 21 Mar 2009 23:45:08 +0000
Subject: [antlr-interest] Tree rewriting (filter=true, output=ast)
In-Reply-To: <49C512F5.5070308@lancaster.ac.uk> 
References: <49C512F5.5070308@lancaster.ac.uk> 
Message-ID: <49C57C04.6000907@lancaster.ac.uk>

Gavin Lambert wrote:

> valueListValue
> scope { bool hasOther; bool hasNameNum; }
> @init { $valueListValue::hasOther = false; $valueListValue::hasNameNum =
> false; }
>   : ^(VLIST
>     ( v+=nameAndNumberForm { $valueListValue::hasNameNum = true; }
>     | (v+=externalValueReference | v+=LCID | v+=NUMBER)
>     | . { $valueListValue::hasOther = true; }
>     )+
>     ( { $valueListValue::hasNameNum && $valueListValue::hasOther) }? {
> raise error; }
>     | { $valueListValue::hasNameNum }? -> ^(OBJID $v+)
>     )?
>   ;
> 
> (I'm a little unsure about the specific syntax for that last bit.  But I
> think something like that ought to do the trick.)
> 

On a separate note, trying to compile the tree grammar with these
adjustments doesn't give me any antlr errors, but it does seem to
produce a java exception. Here's the report output (generated by default
by antlr-IDE in Eclipse):

ANTLR Grammar Report; Stats Version 4
Grammar: ASN_1_tree_pass1
Type: tree
Target language: Java
Output: AST
Grammar option k: none
Grammar option backtrack: false
Rules: 5
Productions: 5
Decisions: 3
Cyclic DFA decisions: 0
LL(1) decisions: 1
Min fixed k: -1
Max fixed k: 5
Average fixed k: 1.6666666666666667
Standard deviation of fixed k: 3.055050463303893
Min acyclic DFA states: 0
Max acyclic DFA states: 15
Average acyclic DFA states: 6.666666666666667
Standard deviation of acyclic DFA states: 7.637626158259733
Total acyclic DFA states: 20
Min cyclic DFA states: 0
Max cyclic DFA states: 0
Average cyclic DFA states: 0.0
Standard deviation of cyclic DFA states: 0.0
Total cyclic DFA states: 0
Vocabulary size: 170
DFA creation time in ms: 14
Number of semantic predicates found: 2
Number of manual fixed lookahead k=value options: 0
Number of nondeterministic decisions: 2
Number of nondeterministic decisions resolved with predicates: 1
Number of DFA conversions terminated early: 0
Number of errors: 0
Number of warnings: 0
Number of infos: 0
Number of syntactic predicates found: 0
Decisions with syntactic predicates: 0
Decision DFAs using syntactic predicates: 0
Decisions with semantic predicates: 1
Decision DFAs using semantic predicates: 0
Backtracking report:
Number of decisions that backtrack: 0

Grammar: ASN_1_tree_pass1
Error creating resources for ASN_1. Cause java.lang.ClassCastException:
org.antlr.stringtemplate.StringTemplate cannot be cast to java.util.List


It's that bit at the bottom that bothers me. This should be ANTLR 3.1.2.

Sam

PS: I'm intrigued by the fact the k=-1 in some cases, though.

From s.barnett-cormack at lancaster.ac.uk  Sat Mar 21 17:48:35 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 22 Mar 2009 00:48:35 +0000
Subject: [antlr-interest] Tree rewriting (filter=true, output=ast)
In-Reply-To: <49C57C04.6000907@lancaster.ac.uk>
References: <49C512F5.5070308@lancaster.ac.uk>
	<49C57C04.6000907@lancaster.ac.uk>
Message-ID: <49C58AE3.8060104@lancaster.ac.uk>

As this compiles fine from the command-line tool, I'm going to assume
this is an ANTLR IDE problem... Edgar, any illumination on this?

Sam

Sam Barnett-Cormack wrote:

> On a separate note, trying to compile the tree grammar with these
> adjustments doesn't give me any antlr errors, but it does seem to
> produce a java exception. Here's the report output (generated by default
> by antlr-IDE in Eclipse):
> 
> ANTLR Grammar Report; Stats Version 4
> Grammar: ASN_1_tree_pass1
> Type: tree
> Target language: Java
> Output: AST
> Grammar option k: none
> Grammar option backtrack: false
> Rules: 5
> Productions: 5
> Decisions: 3
> Cyclic DFA decisions: 0
> LL(1) decisions: 1
> Min fixed k: -1
> Max fixed k: 5
> Average fixed k: 1.6666666666666667
> Standard deviation of fixed k: 3.055050463303893
> Min acyclic DFA states: 0
> Max acyclic DFA states: 15
> Average acyclic DFA states: 6.666666666666667
> Standard deviation of acyclic DFA states: 7.637626158259733
> Total acyclic DFA states: 20
> Min cyclic DFA states: 0
> Max cyclic DFA states: 0
> Average cyclic DFA states: 0.0
> Standard deviation of cyclic DFA states: 0.0
> Total cyclic DFA states: 0
> Vocabulary size: 170
> DFA creation time in ms: 14
> Number of semantic predicates found: 2
> Number of manual fixed lookahead k=value options: 0
> Number of nondeterministic decisions: 2
> Number of nondeterministic decisions resolved with predicates: 1
> Number of DFA conversions terminated early: 0
> Number of errors: 0
> Number of warnings: 0
> Number of infos: 0
> Number of syntactic predicates found: 0
> Decisions with syntactic predicates: 0
> Decision DFAs using syntactic predicates: 0
> Decisions with semantic predicates: 1
> Decision DFAs using semantic predicates: 0
> Backtracking report:
> Number of decisions that backtrack: 0
> 
> Grammar: ASN_1_tree_pass1
> Error creating resources for ASN_1. Cause java.lang.ClassCastException:
> org.antlr.stringtemplate.StringTemplate cannot be cast to java.util.List
> 
> 
> It's that bit at the bottom that bothers me. This should be ANTLR 3.1.2.
> 
> Sam
> 
> PS: I'm intrigued by the fact the k=-1 in some cases, though.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From register72 at gmail.com  Sun Mar 22 02:57:04 2009
From: register72 at gmail.com (register reg.ini)
Date: Sun, 22 Mar 2009 10:57:04 +0100
Subject: [antlr-interest] Position independent keywords.
Message-ID: <4a80712f0903220257n16071596g5f86b3a5dc59fddf@mail.gmail.com>

Hi everybody,
I am trying to parse a custom configuration file format using antlr.
This file format describes properties of several Paramaters using C like
structs, for example:

Record
{

}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090322/98ebb799/attachment.html 

From register72 at gmail.com  Sun Mar 22 03:01:15 2009
From: register72 at gmail.com (register reg.ini)
Date: Sun, 22 Mar 2009 11:01:15 +0100
Subject: [antlr-interest] Order independent keywords
Message-ID: <4a80712f0903220301t7eec5051iea39c02ef6dfc1ff@mail.gmail.com>

Hi everybody,
I am trying to parse a custom configuration file format using antlr.
This file format describes properties of several Paramaters using C like
structs, for example:

Record
{
       TYPE typeid;
       LENGHT 80;
       PATH= pathtofile
}

. The order of the attributes is irrelevant but some of them are required
other are simply optional. Is it possible to embody the requirement of order
independent attributes directly in the parser grammar, without using
actions?
Thanks in advance,
Luca
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090322/a6f9f6da/attachment.html 

From indhu.b at s7software.com  Sun Mar 22 04:44:48 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Sun, 22 Mar 2009 17:14:48 +0530
Subject: [antlr-interest] Order independent keywords
In-Reply-To: <4a80712f0903220301t7eec5051iea39c02ef6dfc1ff@mail.gmail.com>
References: <4a80712f0903220301t7eec5051iea39c02ef6dfc1ff@mail.gmail.com>
Message-ID: <49C624B0.4010604@s7software.com>

Maybe you are looking for something like this:

    attributes
        :    attribute+
        ;

    attribute
        :    typeAttr
        |    lengthAttr
        |    pathAttr
        ;

Here is a complete sample:

    grammar Test;

    attributes
        :    attribute+
        ;

    attribute
        :    typeAttr
        |    lengthAttr
        |    pathAttr
        ;

    typeAttr    :    'TYPE' ID ';'
        ;
       
    lengthAttr
        :    'LENGTH' NUMBER ';'
        ;
       
    pathAttr    :    'PATH' ID ';'
        ;
       
    ID    :    'a'..'z'+
        ;
       
    NUMBER    :    '0'..'9'+
        ;
       
    WS    :    (' ' | '\t' | '\n')+ {$channel = HIDDEN;}
        ;
       


- Indhu


register reg.ini wrote:
> Hi everybody,
> I am trying to parse a custom configuration file format using antlr.
> This file format describes properties of several Paramaters using C 
> like structs, for example:
>
> Record
> {
>        TYPE typeid;
>        LENGHT 80;
>        PATH= pathtofile
> }
>
> . The order of the attributes is irrelevant but some of them are 
> required other are simply optional. Is it possible to embody the 
> requirement of order independent attributes directly in the parser 
> grammar, without using actions?
> Thanks in advance,
> Luca
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090322/99385422/attachment.html 

From indhu.b at s7software.com  Sun Mar 22 04:53:54 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Sun, 22 Mar 2009 17:23:54 +0530
Subject: [antlr-interest] Order independent keywords
In-Reply-To: <49C624B0.4010604@s7software.com>
References: <4a80712f0903220301t7eec5051iea39c02ef6dfc1ff@mail.gmail.com>
	<49C624B0.4010604@s7software.com>
Message-ID: <49C626D2.3030409@s7software.com>

And if you want to make some attribute compulsory, you can do it this way:

attributes
scope {
    boolean typeAttrSeen;
}
@init {
    $attributes::typeAttrSeen = false;
}
@after {
    if ( $attributes::typeAttrSeen == false ) {
        System.out.println("Required attribute 'type' is not present");
    }
}
    :    attribute+
    ;


typeAttr    :    'TYPE' ID ';'
        {
            $attributes::typeAttrSeen = true;
        }
    ;

- Indhu


Indhu Bharathi wrote:
> Maybe you are looking for something like this:
>
>     attributes
>         :    attribute+
>         ;
>
>     attribute
>         :    typeAttr
>         |    lengthAttr
>         |    pathAttr
>         ;
>
> Here is a complete sample:
>
>     grammar Test;
>
>     attributes
>         :    attribute+
>         ;
>
>     attribute
>         :    typeAttr
>         |    lengthAttr
>         |    pathAttr
>         ;
>
>     typeAttr    :    'TYPE' ID ';'
>         ;
>        
>     lengthAttr
>         :    'LENGTH' NUMBER ';'
>         ;
>        
>     pathAttr    :    'PATH' ID ';'
>         ;
>        
>     ID    :    'a'..'z'+
>         ;
>        
>     NUMBER    :    '0'..'9'+
>         ;
>        
>     WS    :    (' ' | '\t' | '\n')+ {$channel = HIDDEN;}
>         ;
>        
>
>
> - Indhu
>
>
> register reg.ini wrote:
>> Hi everybody,
>> I am trying to parse a custom configuration file format using antlr.
>> This file format describes properties of several Paramaters using C 
>> like structs, for example:
>>
>> Record
>> {
>>        TYPE typeid;
>>        LENGHT 80;
>>        PATH= pathtofile
>> }
>>
>> . The order of the attributes is irrelevant but some of them are 
>> required other are simply optional. Is it possible to embody the 
>> requirement of order independent attributes directly in the parser 
>> grammar, without using actions?
>> Thanks in advance,
>> Luca
>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>   
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090322/2630d55f/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Sun Mar 22 07:49:10 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 22 Mar 2009 14:49:10 +0000
Subject: [antlr-interest] Weird StringTemplate error on building grammar
Message-ID: <49C64FE6.50003@lancaster.ac.uk>

Hi all,

Trying to build my grammar, I get the following (including my command line):

sdb at canth:~$ java -cp javalib/antlr-3.1.2/lib/antlr-3.1.2.jar
org.antlr.Tool -o tmp/junk workspace/asn.1-parse/grammars/ASN_1.g
error(10):  internal error: workspace/asn.1-parse/grammars/ASN_1.g :
java.lang.IllegalArgumentException: Can't find template
matchSetTrack.st; group hierarchy is [Java]
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
org.antlr.grammar.v2.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:177)
org.antlr.grammar.v2.CodeGenTreeWalker.notElement(CodeGenTreeWalker.java:1809)
org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1568)
org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1306)
org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1081)
org.antlr.grammar.v2.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1847)
org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1704)
org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1598)
org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1306)
org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1081)
org.antlr.grammar.v2.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1871)
org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1704)
org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1306)
org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1081)
org.antlr.grammar.v2.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:797)
org.antlr.grammar.v2.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:588)
org.antlr.grammar.v2.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:530)
org.antlr.grammar.v2.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:348)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:438)
org.antlr.Tool.generateRecognizer(Tool.java:425)
org.antlr.Tool.process(Tool.java:292)
org.antlr.Tool.main(Tool.java:74)

I get this from the command line and from ANTLR IDE. My grammar is attached.

Sam
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ASN_1.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20090322/3e12a80d/attachment.pl 

From jimi at temporal-wave.com  Sun Mar 22 08:10:38 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 22 Mar 2009 08:10:38 -0700
Subject: [antlr-interest] Order independent keywords
In-Reply-To: <4a80712f0903220301t7eec5051iea39c02ef6dfc1ff@mail.gmail.com>
References: <4a80712f0903220301t7eec5051iea39c02ef6dfc1ff@mail.gmail.com>
Message-ID: <49C654EE.5040403@temporal-wave.com>

register reg.ini wrote:
> Hi everybody,
> I am trying to parse a custom configuration file format using antlr.
> This file format describes properties of several Paramaters using C 
> like structs, for example:
>
> Record
> {
>        TYPE typeid;
>        LENGHT 80;
>        PATH= pathtofile
> }
>
> . The order of the attributes is irrelevant but some of them are 
> required other are simply optional. Is it possible to embody the 
> requirement of order independent attributes directly in the parser 
> grammar, without using actions?
Probably not, but that is exactly the wrong way to do it anyway. You 
want to specify that you can have any number of options, including 0, 
and accumulate how many you get of each , with their line numbers and so 
on. Then you can tell the users: "Too many pggb options (There can be 
only one) at line 44', or "Record specs must contain a gurgle option and 
this is missing from the Record at line ...."

So you will need actions either in the parser or (better) in the tree 
walker. Remember to push as many errors as possible as high up the chain 
as they can go - overall, you have better semantic context for the 
message and your users will thank you for the better error messages.


Jim

From cowang at comcast.net  Sun Mar 22 08:51:43 2009
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 22 Mar 2009 11:51:43 -0400
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
Message-ID: <90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>

Certainly make '.*' and '.+' consistent across all the grammar types, one
way or the other.

The real issue with '.*' and '.+' is of course trading off the increase of
confusion that beginning ANTLR users already have over the whole issue of
greedy/nongreedy with the need for expert users to specify grammar rules
concisely. 

The problems with this tiny piece of the language, the fact that you raised
the issue rather than just doing it, and the fact that several people have
taken the time to bother about replying to your note, leads me to think that
the whole greedy/nongreedy distinction is important, and it therefore needs
to be raised to a higher level and not buried in the options. Also note that
it is an option that applies only to iterative subrules and therefore is an
integral part of iteration. My limited experience with ANTLR does not give
me any special authority to make the following recommendation, so take it as
a strong statement made to clearly raise the issue for your consideration: 

Every time we look at an iterative subrule, we need to be reminded whether
it is greedy or nongreedy; that is, we need separate operators for greedy
vs. nongreedy iteration.

I suggest deprecating the current notation and using:
  (...)** and (...)++ for greedy
  (...)|* and (...)|+ for nongreedy 
    (or some other notation that indicates "stop me, quick")

I know this is a change to the whole tradition of EBNF and regular
expressions, so your thoughts, flames, and groans will all be appreciated.

George


> -----Original Message-----
> From: Terence Parr
> Sent: Saturday, March 21, 2009 2:57 PM
> To: ANTLR Interest Mailing List
> Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
> 
> 
> http://www.antlr.org/jira/browse/ANTLR-392
> 
> any objections?
> 
> Ter
> 
> 
> 
> 


From parrt at cs.usfca.edu  Sun Mar 22 15:37:31 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 22 Mar 2009 15:37:31 -0700
Subject: [antlr-interest] Weird StringTemplate error on building grammar
In-Reply-To: <49C64FE6.50003@lancaster.ac.uk>
References: <49C64FE6.50003@lancaster.ac.uk>
Message-ID: <76B8C89A-DAF7-4BA9-B88E-B18BB13B004D@cs.usfca.edu>


On Mar 22, 2009, at 7:49 AM, Sam Barnett-Cormack wrote:

> Hi all,
>
> Trying to build my grammar, I get the following (including my  
> command line):
>
> sdb at canth:~$ java -cp javalib/antlr-3.1.2/lib/antlr-3.1.2.jar
> org.antlr.Tool -o tmp/junk workspace/asn.1-parse/grammars/ASN_1.g
> error(10):  internal error: workspace/asn.1-parse/grammars/ASN_1.g :
> java.lang.IllegalArgumentException: Can't find template
> matchSetTrack.st; group hierarchy is [Java]

term+=(~(RSQR|LSQR)))*

is your problem. known bug :)  can't add sets to a list yet.

Ter

From s.barnett-cormack at lancaster.ac.uk  Sun Mar 22 15:46:27 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 22 Mar 2009 22:46:27 +0000
Subject: [antlr-interest] Weird StringTemplate error on building grammar
In-Reply-To: <76B8C89A-DAF7-4BA9-B88E-B18BB13B004D@cs.usfca.edu>
References: <49C64FE6.50003@lancaster.ac.uk>
	<76B8C89A-DAF7-4BA9-B88E-B18BB13B004D@cs.usfca.edu>
Message-ID: <49C6BFC3.305@lancaster.ac.uk>

Terence Parr wrote:
> 
> On Mar 22, 2009, at 7:49 AM, Sam Barnett-Cormack wrote:
> 
>> Hi all,
>>
>> Trying to build my grammar, I get the following (including my command 
>> line):
>>
>> sdb at canth:~$ java -cp javalib/antlr-3.1.2/lib/antlr-3.1.2.jar
>> org.antlr.Tool -o tmp/junk workspace/asn.1-parse/grammars/ASN_1.g
>> error(10):  internal error: workspace/asn.1-parse/grammars/ASN_1.g :
>> java.lang.IllegalArgumentException: Can't find template
>> matchSetTrack.st; group hierarchy is [Java]
> 
> term+=(~(RSQR|LSQR)))*
> 
> is your problem. known bug :)  can't add sets to a list yet.

The full rule is:

encodingInstruction : (term+=(~(RSQR|LSQR)))* -> ^(ENCINS $term*);

I read that as

(
   term+=(
     ~(RSQR|LSQR)
   )
)*

So the term+= is applying to the *single* (~(RSQR|LSQR)), and the whole 
lot has cardinality zero-to-N. So each iteration adds one thing that is 
anything-but-rsqr-or-lsqr to term, and this happens zero or more times.

Is this not what it says?


-- 
Sam Barnett-Cormack

From jimi at temporal-wave.com  Sun Mar 22 16:35:24 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 22 Mar 2009 16:35:24 -0700
Subject: [antlr-interest] Weird StringTemplate error on building grammar
In-Reply-To: <49C6BFC3.305@lancaster.ac.uk>
References: <49C64FE6.50003@lancaster.ac.uk>	<76B8C89A-DAF7-4BA9-B88E-B18BB13B004D@cs.usfca.edu>
	<49C6BFC3.305@lancaster.ac.uk>
Message-ID: <49C6CB3C.9090704@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090322/e073568a/attachment.html 

From andreas.meyer at smartshift.de  Sun Mar 22 19:05:52 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 23 Mar 2009 03:05:52 +0100
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>
References: <90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>
Message-ID: <49C6EE80.2040205@smartshift.de>

FYI, the gazelle parser project (prototype) also aims at something 
similar, with slightly different syntax. Having non-greedy parsing in 
ANTLR also at the grammar level would be really useful, especially for 
languages without reserved identifiers. But I guess it's not an easy 
hack that one would do over a weekend.

George S. Cowan schrieb:
> Certainly make '.*' and '.+' consistent across all the grammar types, one
> way or the other.
>
> The real issue with '.*' and '.+' is of course trading off the increase of
> confusion that beginning ANTLR users already have over the whole issue of
> greedy/nongreedy with the need for expert users to specify grammar rules
> concisely. 
>
> The problems with this tiny piece of the language, the fact that you raised
> the issue rather than just doing it, and the fact that several people have
> taken the time to bother about replying to your note, leads me to think that
> the whole greedy/nongreedy distinction is important, and it therefore needs
> to be raised to a higher level and not buried in the options. Also note that
> it is an option that applies only to iterative subrules and therefore is an
> integral part of iteration. My limited experience with ANTLR does not give
> me any special authority to make the following recommendation, so take it as
> a strong statement made to clearly raise the issue for your consideration: 
>
> Every time we look at an iterative subrule, we need to be reminded whether
> it is greedy or nongreedy; that is, we need separate operators for greedy
> vs. nongreedy iteration.
>
> I suggest deprecating the current notation and using:
>   (...)** and (...)++ for greedy
>   (...)|* and (...)|+ for nongreedy 
>     (or some other notation that indicates "stop me, quick")
>
> I know this is a change to the whole tradition of EBNF and regular
> expressions, so your thoughts, flames, and groans will all be appreciated.
>
> George
>   


From parrt at cs.usfca.edu  Sun Mar 22 22:12:48 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 22 Mar 2009 22:12:48 -0700
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>
References: <90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>
Message-ID: <A8BB5D61-4360-4A92-B3D0-19BDCDE7DB40@cs.usfca.edu>

Hi. I'd rather not introduce new syntax.

greedy works for ('else' statement)? type rules too.

I think we should default to greedy everywhere except with .* and .+  
as they never make sense to be greedy.

Ter

On Mar 22, 2009, at 8:51 AM, George S. Cowan wrote:

> Certainly make '.*' and '.+' consistent across all the grammar  
> types, one
> way or the other.
>
> The real issue with '.*' and '.+' is of course trading off the  
> increase of
> confusion that beginning ANTLR users already have over the whole  
> issue of
> greedy/nongreedy with the need for expert users to specify grammar  
> rules
> concisely.
>
> The problems with this tiny piece of the language, the fact that you  
> raised
> the issue rather than just doing it, and the fact that several  
> people have
> taken the time to bother about replying to your note, leads me to  
> think that
> the whole greedy/nongreedy distinction is important, and it  
> therefore needs
> to be raised to a higher level and not buried in the options. Also  
> note that
> it is an option that applies only to iterative subrules and  
> therefore is an
> integral part of iteration. My limited experience with ANTLR does  
> not give
> me any special authority to make the following recommendation, so  
> take it as
> a strong statement made to clearly raise the issue for your  
> consideration:
>
> Every time we look at an iterative subrule, we need to be reminded  
> whether
> it is greedy or nongreedy; that is, we need separate operators for  
> greedy
> vs. nongreedy iteration.
>
> I suggest deprecating the current notation and using:
>  (...)** and (...)++ for greedy
>  (...)|* and (...)|+ for nongreedy
>    (or some other notation that indicates "stop me, quick")
>
> I know this is a change to the whole tradition of EBNF and regular
> expressions, so your thoughts, flames, and groans will all be  
> appreciated.
>
> George
>
>
>> -----Original Message-----
>> From: Terence Parr
>> Sent: Saturday, March 21, 2009 2:57 PM
>> To: ANTLR Interest Mailing List
>> Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
>>
>>
>> http://www.antlr.org/jira/browse/ANTLR-392
>>
>> any objections?
>>
>> Ter
>>
>>
>>
>>
>


From g.r.vansickle at att.net  Sun Mar 22 23:49:44 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 23 Mar 2009 01:49:44 -0500
Subject: [antlr-interest] proposal: make .* and .+ always nongreedy
In-Reply-To: <90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>
References: <DDB5FD18-3609-4C32-B4B8-13B8DC01DDEE@cs.usfca.edu>
	<90ED4CD665CA4C0F98C81F0C4D9D65BE@gsce0ae1cfad8d>
Message-ID: <F10C73BECD2E4DD7BAE74F03F8A5D9B4@DFW5RB41>

> From:  George S. Cowan
>
> Certainly make '.*' and '.+' consistent across all the 
> grammar types, one way or the other.
>

I see this as the paramount consideration.  There is nothing more irritating
and defect-causing in a language than things that are "almost consistent".
 
> 
> I suggest deprecating the current notation and using:
>   (...)** and (...)++ for greedy
>   (...)|* and (...)|+ for nongreedy 
>     (or some other notation that indicates "stop me, quick")
> 

I second Ter's distaste for not introducing new syntax.  Perl regex's have a
well-established way of doing this:

.*  = greedy
.*? = non-greedy.

I can't think of a defensible argument for not simply adopting this
established syntax.  I don't follow the argument for changing the default to
be non-greedy (in fact I don't see the rationale stated anywhere).  This way
the existing syntax and semantics stay the same, so nobody's existing
parsers get broken, and by adopting the same syntax/symantics of Perl
regexes, we creep ever closer to the day when we can all use these glorious
regexes in our ANTLR lexers.  It's win/win/win.

-- 
Gary R. Van Sickle
 


From anders.hessellund at gmail.com  Mon Mar 23 01:54:10 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Mon, 23 Mar 2009 09:54:10 +0100
Subject: [antlr-interest] token ' leads to OutOfMemory Exceptions
Message-ID: <797a9f130903230154o76367ceds9b6888048142b034@mail.gmail.com>

Hi,

I've experienced a strange thing in my grammar. I need a token for the
special character '

If I specify it like this:

PLING
    :    '\''
    ;

I get an OutOfMemoryException during parsing.

But if I specify it like this

PLING
    :    '\u0027'
    ;

Everything works fine.

Is this a bug or a feature?

Cheers,

Anders
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/e1b013fa/attachment.html 

From lguminski+antlr at gmail.com  Mon Mar 23 05:09:18 2009
From: lguminski+antlr at gmail.com (Lukasz Guminski)
Date: Mon, 23 Mar 2009 13:09:18 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
Message-ID: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>

Hi all,

I'm writing a translator which aims to convert input delimited by tags

BLOCK <name>

in the following way:

BLOCK A      =>      start of block A
BLOCK B      =>       start of block B
BLOCK B      =>       end of block B
BLOCK A      =>      end of block A

The difficulty is caused by the fact that the opening tag (e.g. 'BLOCK A')
is exactly the same as the closing one ('BLOCK A'), so I need to track on my
own if it is an opening or a closing.

The algorithm is simple: if I encounter a block with the name that is
already known, then I have encountered a closing tag. If the name is
unknown, than I open a new block.

BLOCK A      =>      start of block A
BLOCK A      =>      end of block A
BLOCK A      =>      start of block A
BLOCK A      =>      end of block A

The problem is that I can make the decision only when I have collected the
entire name of a block. If I can see, that the name is already known (so it
is not an opening of a new block), then I need to unput the chars and go to
closing rule. Unfortunately there is nothing like the *unput()* function in
antlr, so I need to use syntactic predicate to make an unlimited look ahead
for the name.

I wrote grammar, but I get an error. Please help me understand why.

[12:48:09] Checking Grammar...
[12:48:09] warning(200): block.g:7:8: Decision can match input such as
"BLOCK_BOUNDARY LETTER ALPHANUM BLOCK_BOUNDARY" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
[12:48:09] warning(200): block.g:8:19: Decision can match input such as
"BLOCK_BOUNDARY LETTER ALPHANUM BLOCK_BOUNDARY" using multiple alternatives:
1, 2
As a result, alternative(s) 2 were disabled for that input
[12:48:09] error(201): block.g:8:19: The following alternatives can never be
matched: 2

This is the grammar that I use:

grammar block;
@members{
  Stack<String> stack = new Stack<String>();
}

data: blocks EOF;
blocks:block+;
block: block_open blocks? block_close;
block_open
    :  ((BLOCK_BOUNDARY
block_name)=>{stack.size()==0||!stack.peek().equals($block_name.text)}?) =>
    BLOCK_BOUNDARY block_name BLOCK_BOUNDARY
{stack.push($block_name.text);System.out.println("start of block " +
$block_name.text);};
block_close:BLOCK_BOUNDARY block_name BLOCK_BOUNDARY
{System.out.println("end of block " + $block_name.text);stack.pop();};
block_name:LETTER+ ALPHANUM*;

LETTER    :     ('a'..'z'|'A'..'Z');
ALPHANUM    :    (LETTER|'0'..'9');
BLOCK_BOUNDARY     :     'block';
NEWLINE :     ( CR )? LF | CR;
fragment CR :'\r';
fragment LF : '\n';
INSIGNIFICANT_CHAR:.;

It looks like antlr does not see that the block_open is guarder by syntactic
predicate, which is not always true (because
"stack.size()==0||!stack.peek().equals($block_name.text)"
condition can be false).

Thanks for any advice,
Lukasz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/b2165d48/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 05:19:14 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 12:19:14 +0000
Subject: [antlr-interest] Weird StringTemplate error on building grammar
In-Reply-To: <49C6CB3C.9090704@temporal-wave.com>
References: <49C64FE6.50003@lancaster.ac.uk>	<76B8C89A-DAF7-4BA9-B88E-B18BB13B004D@cs.usfca.edu>	<49C6BFC3.305@lancaster.ac.uk>
	<49C6CB3C.9090704@temporal-wave.com>
Message-ID: <49C77E42.2060509@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Terence Parr wrote:
>>>       
>>> term+=(~(RSQR|LSQR)))*
>>>
>>> is your problem. known bug :)  can't add sets to a list yet.
>>>     
>>
>> The full rule is:
>>
>> encodingInstruction : (term+=(~(RSQR|LSQR)))* -> ^(ENCINS $term*);
>>
>> I read that as
>>
>> (
>>    term+=(
>>      ~(RSQR|LSQR)
>>    )
>> )*
>>
>> So the term+= is applying to the *single* (~(RSQR|LSQR)), and the whole 
>> lot has cardinality zero-to-N. So each iteration adds one thing that is 
>> anything-but-rsqr-or-lsqr to term, and this happens zero or more times.
>>
>> Is this not what it says?
>>
>>
>>   
> Try something like this:
> 
> term+=someTerm* ....
> 
> 
> someTerm
>     : ~(RSQR|LSQR)
>     ;

Ah, excellent, thanks. After resolving yet-another inherent ambiguity in
the language ('tag' is a subset of 'encodingPrefix'), it now builds
fine. I think I now have all of the inherent ambiguities sorted, and no
disastrous shortcuts (like arbitrary backtracking) - until I try to add
in support for "information objects" and parametrized types...

This has been a great learning experience, and thanks to all who've
helped with my getting to grips with practical language implementation
stuff. I'm sure I'll need more help when it comes to acting on the AST...

One question though - how come such effectively equivalent constructs
produce such different results?

Sam


From andreas.meyer at smartshift.de  Mon Mar 23 05:20:15 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 23 Mar 2009 13:20:15 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
Message-ID: <49C77E7F.7010101@smartshift.de>

Lukasz Guminski schrieb:
> Hi all,
>
> I'm writing a translator which aims to convert input delimited by tags
>
> BLOCK <name>
>
> in the following way:
>
> BLOCK A      =>      start of block A
> BLOCK B      =>       start of block B
> BLOCK B      =>       end of block B
> BLOCK A      =>      end of block A
>
> The difficulty is caused by the fact that the opening tag (e.g. 'BLOCK 
> A') is exactly the same as the closing one ('BLOCK A'), so I need to 
> track on my own if it is an opening or a closing.
>
> The algorithm is simple: if I encounter a block with the name that is 
> already known, then I have encountered a closing tag. If the name is 
> unknown, than I open a new block. 
>
> BLOCK A      =>      start of block A
> BLOCK A      =>      end of block A
> BLOCK A      =>      start of block A
> BLOCK A      =>      end of block A
>
> The problem is that I can make the decision only when I have collected 
> the entire name of a block. If I can see, that the name is already 
> known (so it is not an opening of a new block), then I need to unput 
> the chars and go to closing rule. Unfortunately there is nothing like 
> the /unput()/ function in antlr, so I need to use syntactic predicate 
> to make an unlimited look ahead for the name.
>
> I wrote grammar, but I get an error. Please help me understand why.
>
> [12:48:09] Checking Grammar...
> [12:48:09] warning(200): block.g:7:8: Decision can match input such as 
> "BLOCK_BOUNDARY LETTER ALPHANUM BLOCK_BOUNDARY" using multiple 
> alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [12:48:09] warning(200): block.g:8:19: Decision can match input such 
> as "BLOCK_BOUNDARY LETTER ALPHANUM BLOCK_BOUNDARY" using multiple 
> alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [12:48:09] error(201): block.g:8:19: The following alternatives can 
> never be matched: 2
>   
> This is the grammar that I use:
>
> grammar block;
> @members{
>   Stack<String> stack = new Stack<String>();
> }
>
> data: blocks EOF;
> blocks:block+;
> block: block_open blocks? block_close;
> block_open
>     :  ((BLOCK_BOUNDARY 
> block_name)=>{stack.size()==0||!stack.peek().equals($block_name.text)}?) 
> =>
>     BLOCK_BOUNDARY block_name BLOCK_BOUNDARY 
> {stack.push($block_name.text);System.out.println("start of block " + 
> $block_name.text);};
> block_close:BLOCK_BOUNDARY block_name BLOCK_BOUNDARY 
> {System.out.println("end of block " + $block_name.text);stack.pop();};
> block_name:LETTER+ ALPHANUM*;
>
> LETTER    :     ('a'..'z'|'A'..'Z');
> ALPHANUM    :    (LETTER|'0'..'9');
> BLOCK_BOUNDARY     :     'block';
> NEWLINE :     ( CR )? LF | CR;
> fragment CR :'\r';
> fragment LF : '\n';
> INSIGNIFICANT_CHAR:.;
>
> It looks like antlr does not see that the block_open is guarder by 
> syntactic predicate, which is not always true (because 
> "stack.size()==0||!stack.peek().equals($block_name.text)" condition 
> can be false).
>
> Thanks for any advice,
> Lukasz


The problem is that semantic predicates like {...}? are only evaluated 
when there is an ambiguity ... and maybe ANTLR thinks the ambiguity is 
already resolved by your syntactic predicate. Actually, I am not sure 
about the structure you gave, namely, a syntactic predicate inside a 
syntactic predicate, maybe it also means "match the empty string after 
seeing BLOCK_BOUNDARY, I dont know.

I would suggest you try without the syntactic predicate, turn your 
semantic predicate into a gated semantic predicate {...}? => such that 
it is forced to be evaluated:

block_open: {is_block_open()}?=> BLOCK_BOUNDARY

Btw, why do you have BLOCK_BOUNDARY twice in each rule? ACcording to 
your example, you would only need, one, right?

Best,
Andreas Meyer

From paul.bouche at nsn.com  Mon Mar 23 05:46:09 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Mon, 23 Mar 2009 13:46:09 +0100
Subject: [antlr-interest] ANTLRWorks: change request - spaces instead of tab
	characters
Message-ID: <49C78491.5000407@nsn.com>

Hi,

I would like ANTLRWorks not to create tab characters in my files, but 
create spaces instead, i.e. if tab size is four then I would like four 
spaces instead of \t.

Is there a way I can quickly fix this for me customly, because I really 
need it (I know Java and Swing, and did this very same thing for our 
GUI)? Also an options for creating only \n in files instead of the 
normal Windows line delimiters if working on a Windows machine would be 
nice.

Thx,
Paul

P.S.: If this is already there I could not find the option to enable it.

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 05:49:11 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 12:49:11 +0000
Subject: [antlr-interest] Tweaking Java target
Message-ID: <49C78547.1000704@lancaster.ac.uk>

Hey all,

Say I wanted to tweak the Java target - say, create a new DoccedJava
target that's identical apart from doing some generated doc-comments in
the output. I know that it'd break with new versions and so on, but I'm
happy to maintain it privately for my own use. I'm not saying add it to
the product.

What files need editing? Where are they? Do I need to unroll the jar and
reroll it, or can I have "local" target templates in my project build path?

Thanks very much for any help,

Sam

From andreas.meyer at smartshift.de  Mon Mar 23 06:03:09 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 23 Mar 2009 14:03:09 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>	
	<49C77E7F.7010101@smartshift.de>
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
Message-ID: <49C7888D.30603@smartshift.de>

Lukasz Guminski schrieb:
>
>
>
>     I would suggest you try without the syntactic predicate, turn your
>     semantic predicate into a gated semantic predicate {...}? => such that
>     it is forced to be evaluated:
>
>     block_open: {is_block_open()}?=> BLOCK_BOUNDARY
>
>
> I cannot use a function without a parameter, because the decision 
> bases on the name of a block. So the function needs to be of a form: 
> /is_block_open(String blockName)/ function, and retrieving the 
> parameter requires the parser to make a look-ahead. That's what I need 
> the syntactic predicate for.
Yes, that was meant as an example. If you need lookahead, you may also 
consider using something like 
input.LT(2).getText().equals(mystackofnames.top()).  Anyway, have you 
tried turning the sem. predicate into a gated sem. predicate (just add a 
=> after the ?)

Andreas

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 06:12:49 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 13:12:49 +0000
Subject: [antlr-interest] Tweaking Java target
In-Reply-To: <49C78547.1000704@lancaster.ac.uk>
References: <49C78547.1000704@lancaster.ac.uk>
Message-ID: <49C78AD1.2030709@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Hey all,
> 
> Say I wanted to tweak the Java target - say, create a new DoccedJava
> target that's identical apart from doing some generated doc-comments in
> the output. I know that it'd break with new versions and so on, but I'm
> happy to maintain it privately for my own use. I'm not saying add it to
> the product.
> 
> What files need editing? Where are they? Do I need to unroll the jar and
> reroll it, or can I have "local" target templates in my project build path?

To answer my own question, it appears that I can use my own targets as
long as they're in the build classpath in the right place
(org.antlr.codegen.templates.TARGET), and in this case I rename Java.stg
to match the new name, and edit it. There seems to be a separate issue
with ANTLR-IDE, but I'll post that to their Sourceforge forum.

This is quite sweet, really...

Sam

From lguminski+antlr at gmail.com  Mon Mar 23 06:59:54 2009
From: lguminski+antlr at gmail.com (Lukasz Guminski)
Date: Mon, 23 Mar 2009 14:59:54 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
	<49C77E7F.7010101@smartshift.de>
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
Message-ID: <d2bc670a0903230659u6c1f8748p3764c26dd8d44094@mail.gmail.com>

Below my responses which mistakenly have been sent to Andreas only.

2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de>

Lukasz Guminski schrieb:
> > Hi all,
> >
> > I'm writing a translator which aims to convert input delimited by tags
> >
> > BLOCK <name>
> >
> > in the following way:
> >
> > BLOCK A      =>      start of block A
> > BLOCK B      =>       start of block B
> > BLOCK B      =>       end of block B
> > BLOCK A      =>      end of block A
> >
> > The difficulty is caused by the fact that the opening tag (e.g. 'BLOCK
> > A') is exactly the same as the closing one ('BLOCK A'), so I need to
> > track on my own if it is an opening or a closing.
> >
> > The algorithm is simple: if I encounter a block with the name that is
> > already known, then I have encountered a closing tag. If the name is
> > unknown, than I open a new block.
> >
> > BLOCK A      =>      start of block A
> > BLOCK A      =>      end of block A
> > BLOCK A      =>      start of block A
> > BLOCK A      =>      end of block A
> >
> > The problem is that I can make the decision only when I have collected
> > the entire name of a block. If I can see, that the name is already
> > known (so it is not an opening of a new block), then I need to unput
> > the chars and go to closing rule. Unfortunately there is nothing like
> > the /unput()/ function in antlr, so I need to use syntactic predicate
> > to make an unlimited look ahead for the name.
> >
> > I wrote grammar, but I get an error. Please help me understand why.
> >
> > [12:48:09] Checking Grammar...
> > [12:48:09] warning(200): block.g:7:8: Decision can match input such as
> > "BLOCK_BOUNDARY LETTER ALPHANUM BLOCK_BOUNDARY" using multiple
> > alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > [12:48:09] warning(200): block.g:8:19: Decision can match input such
> > as "BLOCK_BOUNDARY LETTER ALPHANUM BLOCK_BOUNDARY" using multiple
> > alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > [12:48:09] error(201): block.g:8:19: The following alternatives can
> > never be matched: 2
> >
> > This is the grammar that I use:
> >
> > grammar block;
> > @members{
> >   Stack<String> stack = new Stack<String>();
> > }
> >
> > data: blocks EOF;
> > blocks:block+;
> > block: block_open blocks? block_close;
> > block_open
> >     :  ((BLOCK_BOUNDARY
> > block_name)=>{stack.size()==0||!stack.peek().equals($block_name.text)}?)
> > =>
> >     BLOCK_BOUNDARY block_name BLOCK_BOUNDARY
> > {stack.push($block_name.text);System.out.println("start of block " +
> > $block_name.text);};
> > block_close:BLOCK_BOUNDARY block_name BLOCK_BOUNDARY
> > {System.out.println("end of block " + $block_name.text);stack.pop();};
> > block_name:LETTER+ ALPHANUM*;
> >
> > LETTER    :     ('a'..'z'|'A'..'Z');
> > ALPHANUM    :    (LETTER|'0'..'9');
> > BLOCK_BOUNDARY     :     'block';
> > NEWLINE :     ( CR )? LF | CR;
> > fragment CR :'\r';
> > fragment LF : '\n';
> > INSIGNIFICANT_CHAR:.;
> >
> > It looks like antlr does not see that the block_open is guarder by
> > syntactic predicate, which is not always true (because
> > "stack.size()==0||!stack.peek().equals($block_name.text)" condition
> > can be false).
> >
> > Thanks for any advice,
> > Lukasz
>
>
> The problem is that semantic predicates like {...}? are only evaluated
> when there is an ambiguity ... and maybe ANTLR thinks the ambiguity is
> already resolved by your syntactic predicate. Actually, I am not sure
> about the structure you gave, namely, a syntactic predicate inside a
> syntactic predicate, maybe it also means "match the empty string after
> seeing BLOCK_BOUNDARY, I dont know.


The idea of mixing syntactic and semantic predicate comes from the example
posted on May 11, 2006 at http://www.antlr.org/blog/antlr3/lookahead.tml

*match alpha if not followed by beta:
a : ( alpha ((beta)=>{false}? | ) => alpha ;
 *


>
> I would suggest you try without the syntactic predicate, turn your
> semantic predicate into a gated semantic predicate {...}? => such that
> it is forced to be evaluated:
>
> block_open: {is_block_open()}?=> BLOCK_BOUNDARY


I cannot use a function without a parameter, because the decision bases on
the name of a block. So the function needs to be of a form:
*is_block_open(String
blockName)* function, and retrieving the parameter requires the parser to
make a look-ahead. That's what I need the syntactic predicate for.


>
>
> Btw, why do you have BLOCK_BOUNDARY twice in each rule? ACcording to
> your example, you would only need, one, right?
>

You're right. That's a typo. Thanks,
Lucas


>
> Best,
> Andreas Meyer
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/95f3fdc5/attachment.html 

From lguminski+antlr at gmail.com  Mon Mar 23 07:11:28 2009
From: lguminski+antlr at gmail.com (Lukasz Guminski)
Date: Mon, 23 Mar 2009 15:11:28 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <49C7888D.30603@smartshift.de>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
	<49C77E7F.7010101@smartshift.de>
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
	<49C7888D.30603@smartshift.de>
Message-ID: <d2bc670a0903230711s35dfa7a0uc24692f88c43a5ea@mail.gmail.com>

2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de>

> Lukasz Guminski schrieb:
> >
> >
> >
> >     I would suggest you try without the syntactic predicate, turn your
> >     semantic predicate into a gated semantic predicate {...}? => such
> that
> >     it is forced to be evaluated:
> >
> >     block_open: {is_block_open()}?=> BLOCK_BOUNDARY
> >
> >
> > I cannot use a function without a parameter, because the decision
> > bases on the name of a block. So the function needs to be of a form:
> > /is_block_open(String blockName)/ function, and retrieving the
> > parameter requires the parser to make a look-ahead. That's what I need
> > the syntactic predicate for.
> Yes, that was meant as an example. If you need lookahead, you may also
> consider using something like
> input.LT(2).getText().equals(mystackofnames.top()).  Anyway, have you
> tried turning the sem. predicate into a gated sem. predicate (just add a
> => after the ?)
>

input.LT(2).getText() does not work because it returns only the next
character. So when I have

BLOCK with_a_very_long_name

then LT(2) does not return the full name. Of course, I can set

options{
   k = 100;
}

but that's not the solution.
Lucas

>
> Andreas
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/9f83e4ff/attachment.html 

From bruce.bauman at andesaservices.com  Mon Mar 23 07:13:21 2009
From: bruce.bauman at andesaservices.com (Bruce Bauman)
Date: Mon, 23 Mar 2009 10:13:21 -0400
Subject: [antlr-interest] newbie antlrworks question
Message-ID: <15DF771CF9BEAE418AA0C8D745F73D150413F0DC@exchange.andesatpa.com>

I am trying to write my own lexical filter using ANTLR. When I run
antlrworks debug mode on FuzzyJava.g from the V3 examples I get the
following error:

 

[10:09:18] Checking Grammar...

[10:09:27] error: cannot read:
/home/bbauman/antlr/andesa/examples/examples-v3/java/fuzzy/output/null.j
ava

[10:09:27] 1 error

[10:09:27]
/home/bbauman/antlr/andesa/examples/examples-v3/java/fuzzy/output/__Test
__.java:12: <identifier> expected

[10:09:27]  g = new (tokens, 49100, null);

[10:09:27]          ^

[10:09:27]
/home/bbauman/antlr/andesa/examples/examples-v3/java/fuzzy/output/__Test
__.java:12: '(' or '[' expected

[10:09:27]  g = new (tokens, 49100, null);

[10:09:27]                               ^

[10:09:27] 2 error

 

What am I doing wrong?

 

Thanks.

 

-- Bruce

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/2730aa01/attachment.html 

From andreas.meyer at smartshift.de  Mon Mar 23 07:13:48 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 23 Mar 2009 15:13:48 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>	
	<49C77E7F.7010101@smartshift.de>	
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>	
	<49C7888D.30603@smartshift.de>
	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>
Message-ID: <49C7991C.3070800@smartshift.de>

If you are in a parser rule, input.LT(2) gives you the second-next 
_token_, instead of a character (as inside a lexer rule). So it should work.

Andreas

Lukasz Guminski schrieb:
> input.LT(2).getText() does not work because it returns only the next 
> character. So when I have
>
> BLOCK with_a_very_long_name
>
> then LT(2) does not return the full name. Of course, I can set
>
> options{
>    k = 100;
> }
>
> but that's not the solution.
> Lucas
>
>
> 2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de 
> <mailto:andreas.meyer at smartshift.de>>
>
>     Lukasz Guminski schrieb:
>     >
>     >
>     >
>     >     I would suggest you try without the syntactic predicate,
>     turn your
>     >     semantic predicate into a gated semantic predicate {...}? =>
>     such that
>     >     it is forced to be evaluated:
>     >
>     >     block_open: {is_block_open()}?=> BLOCK_BOUNDARY
>     >
>     >
>     > I cannot use a function without a parameter, because the decision
>     > bases on the name of a block. So the function needs to be of a form:
>     > /is_block_open(String blockName)/ function, and retrieving the
>     > parameter requires the parser to make a look-ahead. That's what
>     I need
>     > the syntactic predicate for.
>     Yes, that was meant as an example. If you need lookahead, you may also
>     consider using something like
>     input.LT(2).getText().equals(mystackofnames.top()).  Anyway, have you
>     tried turning the sem. predicate into a gated sem. predicate (just
>     add a
>     => after the ?)
>
>     Andreas
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 07:24:36 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 14:24:36 +0000
Subject: [antlr-interest] Documenting grammars
Message-ID: <49C79BA4.5060600@lancaster.ac.uk>

Hi all,

So, we use doc-comments (/** */) in our grammars. However, as far as I
can tell, there's no way to auto-process these and generate nice docs.
Does anyone know of one?

*If* the answer is no, I'm interested in using some of my spare time to
create one. I've already looked into adapting the GPL source for javadoc
and the standard doclet. It wouldn't work with alternate doclets until
they were adapted as well, but it wouldn't be too hard to usurp the
framework of javadoc to work with grammars and rules - either new
doctypes and add handlers to the standard doclet, or amend the doclet to
use different words and so on. Oh, and create an antlrdoc tool based on
the javadoc tool source that parses grammars rather than java files.

This would have the nice advantage (for Java developers) of leading to
cross-compatible linking and so forth.

If there's no current way, or no satisfactory one, what support could I
get for developing this? Either other people contributing, or hosting
with the core stuff (as I think it'd be a damnuseful tool), or whatever?
 I assume there's an ANTLR grammar for ANTLR itself that I can base the
parser on...

Sam

From andreas.meyer at smartshift.de  Mon Mar 23 07:25:06 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 23 Mar 2009 15:25:06 +0100
Subject: [antlr-interest] ANTLR2 compatibility Tree implementation
Message-ID: <49C79BC2.2080107@smartshift.de>

Hi!

Has anybody ever tried to implement the ANTLR3 Tree interface, such that 
it emulates the ANTLR2 access methods for AST efficiently and with all 
the corner cases? If that's possible, at all ...

Best,
Andreas Meyer

From jimi at temporal-wave.com  Mon Mar 23 07:47:56 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Mar 2009 07:47:56 -0700
Subject: [antlr-interest] token ' leads to OutOfMemory Exceptions
In-Reply-To: <797a9f130903230154o76367ceds9b6888048142b034@mail.gmail.com>
References: <797a9f130903230154o76367ceds9b6888048142b034@mail.gmail.com>
Message-ID: <49C7A11C.20207@temporal-wave.com>

Anders Hessellund wrote:
> Hi,
>
> I've experienced a strange thing in my grammar. I need a token for the 
> special character '
>
> If I specify it like this:
>
> PLING
>     :    '\''
>     ;
>
> I get an OutOfMemoryException during parsing.
>
> But if I specify it like this
>
> PLING
>     :    '\u0027'
>     ;
>
> Everything works fine.
>
> Is this a bug or a feature?
It sounds like the interaction of this rule with some other rule. Do you 
perchance have another rule that can match an empty sequence? Something 
like:

ID : LETTER* ;

Which should be

ID : LETTER+:

We won't be able to help you with only the information you provide - 
best to post the grammar if you can.

Jim

From sven.van.echelpoel at empolis.com  Mon Mar 23 07:52:38 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Mon, 23 Mar 2009 15:52:38 +0100
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define possibly
	incorrect
Message-ID: <1237819958.6293.7.camel@cartman>

Hi,

in antlr3commontoken.h there is a define for the minimum ID of a
generated token type. It is called ANTLR3_MIN_TOKEN_TYPE. Here's how it
is found in that header:

/** Imaginary token type to signal the end of a stream of child nodes.
 */
#define	ANTLR3_TOKEN_UP		3

/** First token that can be used by users/generated code
 */
#define	ANTLR3_MIN_TOKEN_TYPE	ANTLR3_UP + 1
                                ^^^^^^^^^
                             This is nowhere defined

It looks to me that this define actually should be:

#define ANTLR3_MIN_TOKEN_TYPE ANTLR3_TOKEN_UP + 1

or am I missing something?

Sven


From lguminski+antlr at gmail.com  Mon Mar 23 08:02:47 2009
From: lguminski+antlr at gmail.com (Lukasz Guminski)
Date: Mon, 23 Mar 2009 16:02:47 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <49C7991C.3070800@smartshift.de>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
	<49C77E7F.7010101@smartshift.de>
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
	<49C7888D.30603@smartshift.de>
	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>
	<49C7991C.3070800@smartshift.de>
Message-ID: <d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>

Thank you, but it doesn't work. LT(k) returns a character. I am sending you
my grammar and the output I got.

Grammar:
grammar block;
options{
 k = 3;
}

@members{
  Stack<String> stack = new Stack<String>();
  boolean isBlockOpen(String name)
  {
     System.out.println("isBlockOpen() has been invoked with a value : " +
name);
     return stack.size()==0||!stack.peek().equals(name);
  }
}


data: blocks EOF;
blocks:block+;
block: block_open blocks? block_close;
block_open
    :  {isBlockOpen(input.LT(3).getText())}? =>
    BLOCK_BOUNDARY SPACE block_name NEWLINE
{stack.push($block_name.text);System.out.println("start of block " +
$block_name.text);};
block_close:BLOCK_BOUNDARY SPACE block_name NEWLINE {System.out.println("end
of block " + $block_name.text);stack.pop();};
block_name:LETTER+ ALPHANUM*;


SPACE    :     ' ';
LETTER    :     ('a'..'z'|'A'..'Z');
ALPHANUM    :    (LETTER|'0'..'9');
BLOCK_BOUNDARY     :     'BLOCK';
NEWLINE :     ( CR )? LF | CR;
fragment CR :'\r';
fragment LF : '\n';
INSIGNIFICANT_CHAR:.;

Input:
BLOCK number1
BLOCK number1
BLOCK number1
BLOCK number1

Output:
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
*start of block: number1*
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
*start of block: number1*
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
*start of block: number1*
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
isBlockOpen() has been invoked with a value : n
*start of block: number1*

Just for the record, the output I'd like to get is (without debug):
start of block: number1
end of block: number1
start of block: number1
end of block: number1

Thanks,
Lucas


2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de>

> If you are in a parser rule, input.LT(2) gives you the second-next
> _token_, instead of a character (as inside a lexer rule). So it should
> work.
>
> Andreas
>
> Lukasz Guminski schrieb:
> > input.LT(2).getText() does not work because it returns only the next
> > character. So when I have
> >
> > BLOCK with_a_very_long_name
> >
> > then LT(2) does not return the full name. Of course, I can set
> >
> > options{
> >    k = 100;
> > }
> >
> > but that's not the solution.
> > Lucas
> >
> >
> > 2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de
> > <mailto:andreas.meyer at smartshift.de>>
> >
> >     Lukasz Guminski schrieb:
> >     >
> >     >
> >     >
> >     >     I would suggest you try without the syntactic predicate,
> >     turn your
> >     >     semantic predicate into a gated semantic predicate {...}? =>
> >     such that
> >     >     it is forced to be evaluated:
> >     >
> >     >     block_open: {is_block_open()}?=> BLOCK_BOUNDARY
> >     >
> >     >
> >     > I cannot use a function without a parameter, because the decision
> >     > bases on the name of a block. So the function needs to be of a
> form:
> >     > /is_block_open(String blockName)/ function, and retrieving the
> >     > parameter requires the parser to make a look-ahead. That's what
> >     I need
> >     > the syntactic predicate for.
> >     Yes, that was meant as an example. If you need lookahead, you may
> also
> >     consider using something like
> >     input.LT(2).getText().equals(mystackofnames.top()).  Anyway, have you
> >     tried turning the sem. predicate into a gated sem. predicate (just
> >     add a
> >     => after the ?)
> >
> >     Andreas
> >
> >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >     Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/1ae981c1/attachment.html 

From andreas.meyer at smartshift.de  Mon Mar 23 08:07:02 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Mon, 23 Mar 2009 16:07:02 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>	
	<49C77E7F.7010101@smartshift.de>	
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>	
	<49C7888D.30603@smartshift.de>	
	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>	
	<49C7991C.3070800@smartshift.de>
	<d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>
Message-ID: <49C7A596.5000807@smartshift.de>

I see. You have a parser rule "block_name" which reads a number of 
tokens, each one character long. So, in effect, with input.LT(...) you 
get one of the tokens/characters of the block_name rule. Why not put 
this block_name into a lexer rule? You need to start Block_name with a 
capital letter, to do this. LETTER and ALPHANUM should be turned into 
fragments, so that they are not reported on their own. NEWLINE and WS 
can be skipped  with {skip();}

Andreas

Lukasz Guminski schrieb:
> Thank you, but it doesn't work. LT(k) returns a character. I am 
> sending you my grammar and the output I got.
>
> Grammar:
> grammar block;
> options{
>  k = 3;
> }
>
> @members{
>   Stack<String> stack = new Stack<String>();
>   boolean isBlockOpen(String name)
>   {
>      System.out.println("isBlockOpen() has been invoked with a value : 
> " + name);
>      return stack.size()==0||!stack.peek().equals(name);
>   }
> }
>
>
> data: blocks EOF;
> blocks:block+;
> block: block_open blocks? block_close;
> block_open
>     :  {isBlockOpen(input.LT(3).getText())}? =>
>     BLOCK_BOUNDARY SPACE block_name NEWLINE 
> {stack.push($block_name.text);System.out.println("start of block " + 
> $block_name.text);};
> block_close:BLOCK_BOUNDARY SPACE block_name NEWLINE 
> {System.out.println("end of block " + $block_name.text);stack.pop();};
> block_name:LETTER+ ALPHANUM*;
>
>
> SPACE    :     ' ';
> LETTER    :     ('a'..'z'|'A'..'Z');
> ALPHANUM    :    (LETTER|'0'..'9');
> BLOCK_BOUNDARY     :     'BLOCK';
> NEWLINE :     ( CR )? LF | CR;
> fragment CR :'\r';
> fragment LF : '\n';
> INSIGNIFICANT_CHAR:.;
>  
> Input:
> BLOCK number1
> BLOCK number1
> BLOCK number1
> BLOCK number1
>
> Output:
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> *start of block: number1*
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> *start of block: number1*
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> *start of block: number1*
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> isBlockOpen() has been invoked with a value : n
> *start of block: number1*
>
> Just for the record, the output I'd like to get is (without debug):
> start of block: number1
> end of block: number1
> start of block: number1
> end of block: number1
>
> Thanks,
> Lucas
>
>
> 2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de 
> <mailto:andreas.meyer at smartshift.de>>
>
>     If you are in a parser rule, input.LT(2) gives you the second-next
>     _token_, instead of a character (as inside a lexer rule). So it
>     should work.
>
>     Andreas
>
>     Lukasz Guminski schrieb:
>     > input.LT(2).getText() does not work because it returns only the next
>     > character. So when I have
>     >
>     > BLOCK with_a_very_long_name
>     >
>     > then LT(2) does not return the full name. Of course, I can set
>     >
>     > options{
>     >    k = 100;
>     > }
>     >
>     > but that's not the solution.
>     > Lucas
>     >
>     >
>     > 2009/3/23 Andreas Meyer <andreas.meyer at smartshift.de
>     <mailto:andreas.meyer at smartshift.de>
>     > <mailto:andreas.meyer at smartshift.de
>     <mailto:andreas.meyer at smartshift.de>>>
>     >
>     >     Lukasz Guminski schrieb:
>     >     >
>     >     >
>     >     >
>     >     >     I would suggest you try without the syntactic predicate,
>     >     turn your
>     >     >     semantic predicate into a gated semantic predicate
>     {...}? =>
>     >     such that
>     >     >     it is forced to be evaluated:
>     >     >
>     >     >     block_open: {is_block_open()}?=> BLOCK_BOUNDARY
>     >     >
>     >     >
>     >     > I cannot use a function without a parameter, because the
>     decision
>     >     > bases on the name of a block. So the function needs to be
>     of a form:
>     >     > /is_block_open(String blockName)/ function, and retrieving the
>     >     > parameter requires the parser to make a look-ahead. That's
>     what
>     >     I need
>     >     > the syntactic predicate for.
>     >     Yes, that was meant as an example. If you need lookahead,
>     you may also
>     >     consider using something like
>     >     input.LT(2).getText().equals(mystackofnames.top()).  Anyway,
>     have you
>     >     tried turning the sem. predicate into a gated sem. predicate
>     (just
>     >     add a
>     >     => after the ?)
>     >
>     >     Andreas
>     >
>     >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     >     Unsubscribe:
>     >    
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>     >
>     >
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From jimi at temporal-wave.com  Mon Mar 23 08:08:18 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Mar 2009 08:08:18 -0700
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230711s35dfa7a0uc24692f88c43a5ea@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>	<49C77E7F.7010101@smartshift.de>	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>	<49C7888D.30603@smartshift.de>
	<d2bc670a0903230711s35dfa7a0uc24692f88c43a5ea@mail.gmail.com>
Message-ID: <49C7A5E2.1060208@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/81d4c7cc/attachment.html 

From jimi at temporal-wave.com  Mon Mar 23 08:13:59 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Mar 2009 08:13:59 -0700
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C79BA4.5060600@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>
Message-ID: <49C7A737.6000306@temporal-wave.com>

Sam Barnett-Cormack wrote:
> Hi all,
>
> So, we use doc-comments (/** */) in our grammars. However, as far as I
> can tell, there's no way to auto-process these and generate nice docs.
> Does anyone know of one?
>
> *If* the answer is no, I'm interested in using some of my spare time to
> create one. I've already looked into adapting the GPL source for javadoc
> and the standard doclet. 
It would probably be easier/better to take the v3 grammar and write a 
front end to doxygen, or optionally spit out a pseudo class that javadoc 
can use. Perhaps we should really be making the DOC_COMMENT tokens go 
through to the generated target. We would have to pass the token through 
a function for the code generator target though so it could adapt it to 
the target language. While /** xxx */ will work for most, it probably 
does not work for all and I am not convinced that it is that useful in 
the target language anyway (though I can see how class documentation is, 
but that is already covered if you use separate lexer and parser 
grammars which is an easy thing to do).

Jim

From jimi at temporal-wave.com  Mon Mar 23 08:34:16 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Mar 2009 08:34:16 -0700
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define possibly
 incorrect
In-Reply-To: <1237819958.6293.7.camel@cartman>
References: <1237819958.6293.7.camel@cartman>
Message-ID: <49C7ABF8.3010507@temporal-wave.com>

Sven Van Echelpoel wrote:
> Hi,
>
> in antlr3commontoken.h there is a define for the minimum ID of a
> generated token type. It is called ANTLR3_MIN_TOKEN_TYPE. Here's how it
> is found in that header:
>
> /** Imaginary token type to signal the end of a stream of child nodes.
>  */
> #define	ANTLR3_TOKEN_UP		3
>
> /** First token that can be used by users/generated code
>  */
> #define	ANTLR3_MIN_TOKEN_TYPE	ANTLR3_UP + 1
>                                 ^^^^^^^^^
>                              This is nowhere defined
>
> It looks to me that this define actually should be:
>
> #define ANTLR3_MIN_TOKEN_TYPE ANTLR3_TOKEN_UP + 1
>
> or am I missing something?
>
> Sven
Yes, it probably supposed to be that, but it isn't actually used 
anywhere any more. I have changed it though.

Jim

From jimi at temporal-wave.com  Mon Mar 23 08:41:40 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Mar 2009 08:41:40 -0700
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>	<49C77E7F.7010101@smartshift.de>	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>	<49C7888D.30603@smartshift.de>	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>	<49C7991C.3070800@smartshift.de>
	<d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>
Message-ID: <49C7ADB4.8090500@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/3c19c376/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 08:48:18 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 15:48:18 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7A737.6000306@temporal-wave.com>
References: <49C79BA4.5060600@lancaster.ac.uk>
	<49C7A737.6000306@temporal-wave.com>
Message-ID: <49C7AF42.2060305@lancaster.ac.uk>

Jim Idle wrote:
> Sam Barnett-Cormack wrote:
>> Hi all,
>>
>> So, we use doc-comments (/** */) in our grammars. However, as far as I
>> can tell, there's no way to auto-process these and generate nice docs.
>> Does anyone know of one?
>>
>> *If* the answer is no, I'm interested in using some of my spare time to
>> create one. I've already looked into adapting the GPL source for javadoc
>> and the standard doclet. 
> It would probably be easier/better to take the v3 grammar and write a 
> front end to doxygen,

Well, from a developing-to-scratch-an-itch point of view, I'm less
bothered about doxygen because I don't use it ;) and I also have no idea
how one writes a language reader for doxygen. It may, however, actually
be easier than for javadoc - doxygen is already language-agnostic, and
probably won't mind using a new set of terminology (grammar and rule
rather than class and method, for instance).

> or optionally spit out a pseudo class that javadoc 
> can use.

If one wanted to produce something that didn't call grammars "classes"
and rules "methods", you need to hack javadoc more than that, to
introduce the new documentable-elements. Javadoc as it stands is
hard-wired to use certain concepts - package, class, method, field,
annotation, and so on.

> Perhaps we should really be making the DOC_COMMENT tokens go 
> through to the generated target. We would have to pass the token through 
> a function for the code generator target though so it could adapt it to 
> the target language. While /** xxx */ will work for most, it probably 
> does not work for all and I am not convinced that it is that useful in 
> the target language anyway (though I can see how class documentation is, 
> but that is already covered if you use separate lexer and parser 
> grammars which is an easy thing to do).

For me, it makes sense to document the grammar separately - a
description of the token, say, isn't really appropriate as the method
documentation for the mTOKEN methods in the lexer.

I'm talking about distinct documentation of the grammar, which could
(and probably should) even be target-language independent. Would
probably want to add a concept of "package" not present in ANTLR in
order to group grammars together - so the lexer, parser, treefilter and
treeparser for one language are all documented in a connected way
separate from other languages, rather than either having all grammars
separate or all bundled together.

Of course, it might be more appropriate, given language recognition as a
different paradigm from OOP, to build a tool completely from scratch,
but better to try to see if there's anything to adapt or tweak first.

Sam

From jaluber at gmx.de  Mon Mar 23 08:55:12 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 23 Mar 2009 16:55:12 +0100
Subject: [antlr-interest] Weird StringTemplate error on building grammar
In-Reply-To: <49C77E42.2060509@lancaster.ac.uk>
References: <49C64FE6.50003@lancaster.ac.uk>	<76B8C89A-DAF7-4BA9-B88E-B18BB13B004D@cs.usfca.edu>	<49C6BFC3.305@lancaster.ac.uk>	<49C6CB3C.9090704@temporal-wave.com>
	<49C77E42.2060509@lancaster.ac.uk>
Message-ID: <49C7B0E0.8090305@gmx.de>

Sam Barnett-Cormack schrieb:
> Jim Idle wrote:
>> Sam Barnett-Cormack wrote:
>>> Terence Parr wrote:
>>>>       
>>>> term+=(~(RSQR|LSQR)))*
>>>>
>>>> is your problem. known bug :)  can't add sets to a list yet.
>>>>     
>>> The full rule is:
>>>
>>> encodingInstruction : (term+=(~(RSQR|LSQR)))* -> ^(ENCINS $term*);
>>>
>>> I read that as
>>>
>>> (
>>>    term+=(
>>>      ~(RSQR|LSQR)
>>>    )
>>> )*
>>>
>>> So the term+= is applying to the *single* (~(RSQR|LSQR)), and the whole 
>>> lot has cardinality zero-to-N. So each iteration adds one thing that is 
>>> anything-but-rsqr-or-lsqr to term, and this happens zero or more times.
>>>
>>> Is this not what it says?
>>>
>>>
>>>   
>> Try something like this:
>>
>> term+=someTerm* ....
>>
>>
>> someTerm
>>     : ~(RSQR|LSQR)
>>     ;
> 
> Ah, excellent, thanks. After resolving yet-another inherent ambiguity in
> the language ('tag' is a subset of 'encodingPrefix'), it now builds
> fine. I think I now have all of the inherent ambiguities sorted, and no
> disastrous shortcuts (like arbitrary backtracking) - until I try to add
> in support for "information objects" and parametrized types...
> 
> This has been a great learning experience, and thanks to all who've
> helped with my getting to grips with practical language implementation
> stuff. I'm sure I'll need more help when it comes to acting on the AST...
> 
> One question though - how come such effectively equivalent constructs
> produce such different results?

Because there are bugs hiding there.

Johannes

> 
> Sam
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From lguminski+antlr at gmail.com  Mon Mar 23 08:56:28 2009
From: lguminski+antlr at gmail.com (Lukasz Guminski)
Date: Mon, 23 Mar 2009 16:56:28 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <49C7ADB4.8090500@temporal-wave.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
	<49C77E7F.7010101@smartshift.de>
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
	<49C7888D.30603@smartshift.de>
	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>
	<49C7991C.3070800@smartshift.de>
	<d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>
	<49C7ADB4.8090500@temporal-wave.com>
Message-ID: <d2bc670a0903230856s257c778i72878b5fda009a5d@mail.gmail.com>

I have just noticed the problem with alphanum. Regarding you opinion on
selecting of problems, I can say based on my experience that problems choose
you, and not vice versa:) I just need to solve this issue and I have no
choice here. And I admit I am not familiar with antlr. I only worked with
lex and yacc a long time ago.

Below is the working grammar. Thanks to Andreas and you for your help.
grammar block;
options{
 k = 2;
}

@members{
  Stack<String> stack = new Stack<String>();
  boolean isBlockOpen(String name)
  {
     System.out.println("isBlockOpen() has been invoked with a value : " +
name);
     return stack.size()==0||!stack.peek().equals(name);
  }
}


data: blocks EOF;
blocks:block+;
block: block_open blocks? block_close;
block_open
    :  {isBlockOpen(input.LT(2).getText())}? =>
    BLOCK_BOUNDARY BLOCK_NAME
{stack.push($BLOCK_NAME.text);System.out.println("start of block: " +
$BLOCK_NAME.text);};
block_close:BLOCK_BOUNDARY BLOCK_NAME {System.out.println("end of block: " +
$BLOCK_NAME.text);stack.pop();};

BLOCK_BOUNDARY    :     'BLOCK';
BLOCK_NAME:LETTER ALPHANUM*;
SPACE    :     ' ' {skip();};
fragment ALPHANUM    :    (LETTER|'0'..'9');
fragment LETTER    :     ('a'..'z'|'A'..'Z');
NEWLINE :     (( CR )? LF | CR) {skip();};
fragment CR :'\r';
fragment LF : '\n';
INSIGNIFICANT_CHAR:.;


Output:
isBlockOpen() has been invoked with a value : number1
isBlockOpen() has been invoked with a value : number1
*start of block: number1*
isBlockOpen() has been invoked with a value : number1
*end of block: number1*
isBlockOpen() has been invoked with a value : number1
isBlockOpen() has been invoked with a value : number1
*start of block: number1*
isBlockOpen() has been invoked with a value : number1
*end of block: number1*

Cheers,
Lucas



2009/3/23 Jim Idle <jimi at temporal-wave.com>

>  Lukasz Guminski wrote:
>
> Thank you, but it doesn't work. LT(k) returns a character. I am sending you
> my grammar and the output I got.
>
> Grammar:
> grammar block;
> options{
>  k = 3;
> }
>
> @members{
>   Stack<String> stack = new Stack<String>();
>   boolean isBlockOpen(String name)
>   {
>      System.out.println("isBlockOpen() has been invoked with a value : " +
> name);
>      return stack.size()==0||!stack.peek().equals(name);
>   }
> }
>
>
> data: blocks EOF;
> blocks:block+;
> block: block_open blocks? block_close;
> block_open
>     :  {isBlockOpen(input.LT(3).getText())}? =>
>     BLOCK_BOUNDARY SPACE block_name NEWLINE
> {stack.push($block_name.text);System.out.println("start of block " +
> $block_name.text);};
> block_close:BLOCK_BOUNDARY SPACE block_name NEWLINE
> {System.out.println("end of block " + $block_name.text);stack.pop();};
> block_name:LETTER+ ALPHANUM*;
>
>
> SPACE    :     ' ';
> LETTER    :     ('a'..'z'|'A'..'Z');
>
>
> Well, you have LETTER as a non fragment rule, so you are always going to
> get this instead of ALPHANUM. You should be getting an ambiguity warning too
> I suspect and you block_name rule should be ID:
>
> fragment
> LETTER    :     ('a'..'z'|'A'..'Z');
> fragment
> ALPHANUM    :    (LETTER|'0'..'9');
>
> ID : LETTER ALPHANUM* ;
>
> Also, do you need the SPACE token? It will be a lot easier in the parser if
> you hide that and regardless, if the user has 2 spaces not one, then all
> your calculations will be out anyway. You should probably hide the
> insignificant_char token too.
>
> I think that you need to be doing this a different way really. You could
> easily do this in the lexer.
>
> Perhaps you should practice a bit on simpler problems before diving in to
> this one? I think you are suffering from not understanding the lexer/parser
> fundamentals yet.
>
> Jim
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/62d59e09/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 09:04:23 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 16:04:23 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7AF42.2060305@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com>
	<49C7AF42.2060305@lancaster.ac.uk>
Message-ID: <49C7B307.8000701@lancaster.ac.uk>

Sam Barnett-Cormack wrote:
> Jim Idle wrote:
>> Sam Barnett-Cormack wrote:
>>> Hi all,
>>>
>>> So, we use doc-comments (/** */) in our grammars. However, as far as I
>>> can tell, there's no way to auto-process these and generate nice docs.
>>> Does anyone know of one?
>>>
>>> *If* the answer is no, I'm interested in using some of my spare time to
>>> create one. I've already looked into adapting the GPL source for javadoc
>>> and the standard doclet. 
>> It would probably be easier/better to take the v3 grammar and write a 
>> front end to doxygen,
> 
> Well, from a developing-to-scratch-an-itch point of view, I'm less
> bothered about doxygen because I don't use it ;) and I also have no idea
> how one writes a language reader for doxygen. It may, however, actually
> be easier than for javadoc - doxygen is already language-agnostic, and
> probably won't mind using a new set of terminology (grammar and rule
> rather than class and method, for instance).

It looks like a custom input for doxygen would be hard - it has a single
scanner/parser that does C/C++/Java/IDL, and has to be tweaked for each
new input.

Of course, it may be possible to re-use doxygen's *output* code.
However, I'm almost beginning to feel that there's a lack of a *truly*
language-independent documentation tool. The task I set myself would be
growing, but it wouldn't be so hard to develop an antlr-specific
documentor that is built with the future in mind to accept modular
input/output schemes. Reusing javadoc's output routines would still be
tempting. If I were starting from scratch, I'd work in Java.

Sam

From jimi at temporal-wave.com  Mon Mar 23 09:20:52 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Mar 2009 09:20:52 -0700
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <d2bc670a0903230856s257c778i72878b5fda009a5d@mail.gmail.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>	
	<49C77E7F.7010101@smartshift.de>	
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>	
	<49C7888D.30603@smartshift.de>	
	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>	
	<49C7991C.3070800@smartshift.de>	
	<d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>	
	<49C7ADB4.8090500@temporal-wave.com>
	<d2bc670a0903230856s257c778i72878b5fda009a5d@mail.gmail.com>
Message-ID: <49C7B6E4.3090604@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/85696cf6/attachment.html 

From antlr at jazillian.com  Mon Mar 23 10:18:25 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 23 Mar 2009 13:18:25 -0400
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7B307.8000701@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com>	<49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk>
Message-ID: <49C7C461.6010509@jazillian.com>

I think the easiest approach would be to reuse the doclet API
http://java.sun.com/j2se/1.4.2/docs/tooldocs/javadoc/doclet/index.html
Create a ClassDoc object for each ANTLR grammar,
and a MethodDoc for each rule. 

Maybe even easier would be to convert the ANTLR grammar to valid Java code,
and feed that into javadoc.

expr : expr op expr;
op : '+' | '-';

...would become...

void expr(Expr expr, Op op, Expr expr) {}
void op(PLUS) {}
void op(MINUS) {}

...actually, now that I tried to do that...
it's not clear at all how ANTLR (or any BNF-type) rules
might map to Java code for documentation purposes :(

Andy


Sam Barnett-Cormack wrote:
> Sam Barnett-Cormack wrote:
>> Jim Idle wrote:
>>> Sam Barnett-Cormack wrote:
>>>> Hi all,
>>>>
>>>> So, we use doc-comments (/** */) in our grammars. However, as far as I
>>>> can tell, there's no way to auto-process these and generate nice docs.
>>>> Does anyone know of one?
>>>>
>>>> *If* the answer is no, I'm interested in using some of my spare time to
>>>> create one. I've already looked into adapting the GPL source for javadoc
>>>> and the standard doclet. 
>>> It would probably be easier/better to take the v3 grammar and write a 
>>> front end to doxygen,
>> Well, from a developing-to-scratch-an-itch point of view, I'm less
>> bothered about doxygen because I don't use it ;) and I also have no idea
>> how one writes a language reader for doxygen. It may, however, actually
>> be easier than for javadoc - doxygen is already language-agnostic, and
>> probably won't mind using a new set of terminology (grammar and rule
>> rather than class and method, for instance).
> 
> It looks like a custom input for doxygen would be hard - it has a single
> scanner/parser that does C/C++/Java/IDL, and has to be tweaked for each
> new input.
> 
> Of course, it may be possible to re-use doxygen's *output* code.
> However, I'm almost beginning to feel that there's a lack of a *truly*
> language-independent documentation tool. The task I set myself would be
> growing, but it wouldn't be so hard to develop an antlr-specific
> documentor that is built with the future in mind to accept modular
> input/output schemes. Reusing javadoc's output routines would still be
> tempting. If I were starting from scratch, I'd work in Java.
> 
> Sam
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 10:22:32 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 17:22:32 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7C461.6010509@jazillian.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com>	<49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk> <49C7C461.6010509@jazillian.com>
Message-ID: <49C7C558.4070608@lancaster.ac.uk>

Andy Tripp wrote:
> I think the easiest approach would be to reuse the doclet API
> http://java.sun.com/j2se/1.4.2/docs/tooldocs/javadoc/doclet/index.html
> Create a ClassDoc object for each ANTLR grammar,
> and a MethodDoc for each rule.
> Maybe even easier would be to convert the ANTLR grammar to valid Java code,
> and feed that into javadoc.
> 
> expr : expr op expr;
> op : '+' | '-';
> 
> ...would become...
> 
> void expr(Expr expr, Op op, Expr expr) {}
> void op(PLUS) {}
> void op(MINUS) {}
> 
> ...actually, now that I tried to do that...
> it's not clear at all how ANTLR (or any BNF-type) rules
> might map to Java code for documentation purposes :(

And, of course, you end up with documentation that calls your grammars
"classes" and your rules "methods". A little unintuitive to people you
present the docs to. However, no way around that if you want to reuse
the API. It's all rather a toss-up in many ways.

Sam

> Sam Barnett-Cormack wrote:
>> Sam Barnett-Cormack wrote:
>>> Jim Idle wrote:
>>>> Sam Barnett-Cormack wrote:
>>>>> Hi all,
>>>>>
>>>>> So, we use doc-comments (/** */) in our grammars. However, as far as I
>>>>> can tell, there's no way to auto-process these and generate nice docs.
>>>>> Does anyone know of one?
>>>>>
>>>>> *If* the answer is no, I'm interested in using some of my spare
>>>>> time to
>>>>> create one. I've already looked into adapting the GPL source for
>>>>> javadoc
>>>>> and the standard doclet. 
>>>> It would probably be easier/better to take the v3 grammar and write
>>>> a front end to doxygen,
>>> Well, from a developing-to-scratch-an-itch point of view, I'm less
>>> bothered about doxygen because I don't use it ;) and I also have no idea
>>> how one writes a language reader for doxygen. It may, however, actually
>>> be easier than for javadoc - doxygen is already language-agnostic, and
>>> probably won't mind using a new set of terminology (grammar and rule
>>> rather than class and method, for instance).
>>
>> It looks like a custom input for doxygen would be hard - it has a single
>> scanner/parser that does C/C++/Java/IDL, and has to be tweaked for each
>> new input.
>>
>> Of course, it may be possible to re-use doxygen's *output* code.
>> However, I'm almost beginning to feel that there's a lack of a *truly*
>> language-independent documentation tool. The task I set myself would be
>> growing, but it wouldn't be so hard to develop an antlr-specific
>> documentor that is built with the future in mind to accept modular
>> input/output schemes. Reusing javadoc's output routines would still be
>> tempting. If I were starting from scratch, I'd work in Java.
>>
>> Sam
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> 


From sharwell at pixelminegames.com  Mon Mar 23 10:44:47 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 23 Mar 2009 12:44:47 -0500
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7B307.8000701@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>

Why not create our own format that properly describes grammars?

We could group them by the Tokens file they reference to cover
lexer/parser/tree parser combinations. Documentation could include
formatted/highlighted rule text, comments, DFA statistics, and
thumbnails of the various rule diagrams linked to full-size versions.

Sam (Harwell)

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Monday, March 23, 2009 11:04 AM
To: Jim Idle
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] Documenting grammars

Of course, it may be possible to re-use doxygen's *output* code.
However, I'm almost beginning to feel that there's a lack of a *truly*
language-independent documentation tool. The task I set myself would be
growing, but it wouldn't be so hard to develop an antlr-specific
documentor that is built with the future in mind to accept modular
input/output schemes. Reusing javadoc's output routines would still be
tempting. If I were starting from scratch, I'd work in Java.

Sam


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 11:23:34 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 18:23:34 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>
Message-ID: <49C7D3A6.5050702@lancaster.ac.uk>

Sam Harwell wrote:
> Why not create our own format that properly describes grammars?
> 
> We could group them by the Tokens file they reference to cover
> lexer/parser/tree parser combinations. Documentation could include
> formatted/highlighted rule text, comments, DFA statistics, and
> thumbnails of the various rule diagrams linked to full-size versions.
> 
> Sam (Harwell)

The way I see it, right now, there's two options to get the minimum I'd
like to see:

1) Scratch-written system to document anything, flexibly enough to allow
various different terminologies (appropriate to OOP, grammars, whatever)

2) Scratch-written grammar documenting system, allowing focus on good
documentation of grammars and including the stuff that Sam H talks about
(configurably, of course).

Option (2) is less work, while option (1) is more use to the wider
community *iff* it's done well. Frankly, I'm leaning towards (2) now
(despite some quickly-scratched-out design for (1), which I could always
use to do that option later myself if I really want to). (2) doesn't
overlap other existing systems.

If there's enthusiasm for this, I'll whip up a quick outline-design, and
anyone who wants to help can help me nail it down to something specific,
and possibly help actually write it ;) areas that'd speed me up most
would be writing output engines and bringing extra (more experienced?)
minds to the parsing. Design usually produces better results from
multiple minds, too.

Sam (Barnett-Cormack)

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
> Barnett-Cormack
> Sent: Monday, March 23, 2009 11:04 AM
> To: Jim Idle
> Cc: ANTLR Interest Mailing List
> Subject: Re: [antlr-interest] Documenting grammars
> 
> Of course, it may be possible to re-use doxygen's *output* code.
> However, I'm almost beginning to feel that there's a lack of a *truly*
> language-independent documentation tool. The task I set myself would be
> growing, but it wouldn't be so hard to develop an antlr-specific
> documentor that is built with the future in mind to accept modular
> input/output schemes. Reusing javadoc's output routines would still be
> tempting. If I were starting from scratch, I'd work in Java.
> 
> Sam
> 


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 11:30:08 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 18:30:08 +0000
Subject: [antlr-interest] Using extra channels
Message-ID: <49C7D530.4040608@lancaster.ac.uk>

Hi all,

We all (generally) use the default and hidden channels. What if I wanted
there to be another channel which, usually, doesn't get used, but if I
want to tune to it as well I won't get the actual whitespace? Say for
tokens that you mostly won't be interested in, but may want to
programmatically choose to be interested in.

Can I literally just define a new constant, MYCHANNEL, that's an int not
of the same value as HIDDEN or whatever the default one is called, and
use it as I would either of those?

Sam

From sharwell at pixelminegames.com  Mon Mar 23 11:34:57 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 23 Mar 2009 13:34:57 -0500
Subject: [antlr-interest] Using extra channels
In-Reply-To: <49C7D530.4040608@lancaster.ac.uk>
References: <49C7D530.4040608@lancaster.ac.uk>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BCF@Bloodymary.ironwillgames.com>

Yes, you can. If you want to work with those tokens, just pass your
channel number to the CommonTokenStream constructor.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Monday, March 23, 2009 1:30 PM
To: ANTLR Interest Mailing List
Subject: [antlr-interest] Using extra channels

Hi all,

We all (generally) use the default and hidden channels. What if I wanted
there to be another channel which, usually, doesn't get used, but if I
want to tune to it as well I won't get the actual whitespace? Say for
tokens that you mostly won't be interested in, but may want to
programmatically choose to be interested in.

Can I literally just define a new constant, MYCHANNEL, that's an int not
of the same value as HIDDEN or whatever the default one is called, and
use it as I would either of those?

Sam

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Mon Mar 23 11:35:15 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 23 Mar 2009 11:35:15 -0700
Subject: [antlr-interest] Using extra channels
In-Reply-To: <49C7D530.4040608@lancaster.ac.uk>
References: <49C7D530.4040608@lancaster.ac.uk>
Message-ID: <552DB5B9-54F4-4CA1-956B-1B7FB7B1261E@cs.usfca.edu>


On Mar 23, 2009, at 11:30 AM, Sam Barnett-Cormack wrote:

> Hi all,
>
> We all (generally) use the default and hidden channels. What if I  
> wanted
> there to be another channel which, usually, doesn't get used, but if I
> want to tune to it as well I won't get the actual whitespace? Say for
> tokens that you mostly won't be interested in, but may want to
> programmatically choose to be interested in.
>
> Can I literally just define a new constant, MYCHANNEL, that's an int  
> not
> of the same value as HIDDEN or whatever the default one is called, and
> use it as I would either of those?

Yep. channels are just ints.  Parser can tune in/out on any channel it  
ways.

Ter

From brothers at bros.com  Mon Mar 23 11:42:23 2009
From: brothers at bros.com (Dennis Brothers)
Date: Mon, 23 Mar 2009 14:42:23 -0400
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7D3A6.5050702@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>
	<49C7D3A6.5050702@lancaster.ac.uk>
Message-ID: <B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>


On Mar 23, 2009, at 2:23 PM, Sam Barnett-Cormack wrote:

> Sam Harwell wrote:
>> Why not create our own format that properly describes grammars?
>>
>> We could group them by the Tokens file they reference to cover
>> lexer/parser/tree parser combinations. Documentation could include
>> formatted/highlighted rule text, comments, DFA statistics, and
>> thumbnails of the various rule diagrams linked to full-size versions.
>>
>> Sam (Harwell)
>
> The way I see it, right now, there's two options to get the minimum  
> I'd
> like to see:
>
> 1) Scratch-written system to document anything, flexibly enough to  
> allow
> various different terminologies (appropriate to OOP, grammars,  
> whatever)
>
> 2) Scratch-written grammar documenting system, allowing focus on good
> documentation of grammars and including the stuff that Sam H talks  
> about
> (configurably, of course).
>
> Option (2) is less work, while option (1) is more use to the wider
> community *iff* it's done well. Frankly, I'm leaning towards (2) now
> (despite some quickly-scratched-out design for (1), which I could  
> always
> use to do that option later myself if I really want to). (2) doesn't
> overlap other existing systems.
>
> If there's enthusiasm for this, I'll whip up a quick outline-design,  
> and
> anyone who wants to help can help me nail it down to something  
> specific,
> and possibly help actually write it ;) areas that'd speed me up most
> would be writing output engines and bringing extra (more experienced?)
> minds to the parsing. Design usually produces better results from
> multiple minds, too.
>
> Sam (Barnett-Cormack)

Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar be  
modified or extended to recognize and emit doc comments and the  
elements they refer to?  Seems like this would be quite a leg up on  
Option 2.

I don't recall whether the ANTLR grammar is public (and I know ANTLR 3  
was originally implemented using ANTLR 2) - what's the current state  
of this?

     - Dennis Brothers


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 13:31:49 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 20:31:49 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>
	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
Message-ID: <49C7F1B5.10102@lancaster.ac.uk>

Dennis Brothers wrote:
> On Mar 23, 2009, at 2:23 PM, Sam Barnett-Cormack wrote:
> 
>> Sam Harwell wrote:
>>> Why not create our own format that properly describes grammars?
>>>
>>> We could group them by the Tokens file they reference to cover
>>> lexer/parser/tree parser combinations. Documentation could include
>>> formatted/highlighted rule text, comments, DFA statistics, and
>>> thumbnails of the various rule diagrams linked to full-size versions.
>>>
>>> Sam (Harwell)
>> The way I see it, right now, there's two options to get the minimum  
>> I'd
>> like to see:
>>
>> 1) Scratch-written system to document anything, flexibly enough to  
>> allow
>> various different terminologies (appropriate to OOP, grammars,  
>> whatever)
>>
>> 2) Scratch-written grammar documenting system, allowing focus on good
>> documentation of grammars and including the stuff that Sam H talks  
>> about
>> (configurably, of course).
>>
>> Option (2) is less work, while option (1) is more use to the wider
>> community *iff* it's done well. Frankly, I'm leaning towards (2) now
>> (despite some quickly-scratched-out design for (1), which I could  
>> always
>> use to do that option later myself if I really want to). (2) doesn't
>> overlap other existing systems.
>>
>> If there's enthusiasm for this, I'll whip up a quick outline-design,  
>> and
>> anyone who wants to help can help me nail it down to something  
>> specific,
>> and possibly help actually write it ;) areas that'd speed me up most
>> would be writing output engines and bringing extra (more experienced?)
>> minds to the parsing. Design usually produces better results from
>> multiple minds, too.
>>
>> Sam (Barnett-Cormack)
> 
> Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar be  
> modified or extended to recognize and emit doc comments and the  
> elements they refer to?  Seems like this would be quite a leg up on  
> Option 2.

Well, what format would it emit them in? We'd want to have them able to 
be output to html, maybe latex, maybe docbook, maybe $format in future. 
That means some sort of abstract document model. We'd be talking about 
adding on to the ANTLR grammar to emit objects fitting such a model, and 
building an API and some tools to work with this model - and to also 
interface with ANTLR's ability to generate diagrams and suchlike.

As a plus, it's possible that the abstract document model will also be 
appropriate for other parser generators and so on.


-- 
Sam Barnett-Cormack

From brothers at bros.com  Mon Mar 23 14:13:05 2009
From: brothers at bros.com (Dennis Brothers)
Date: Mon, 23 Mar 2009 17:13:05 -0400
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C7F1B5.10102@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>
	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
	<49C7F1B5.10102@lancaster.ac.uk>
Message-ID: <F5C4C8ED-37D8-4298-95E7-CC3985F6BE63@bros.com>


On Mar 23, 2009, at 4:31 PM, Sam Barnett-Cormack wrote:

> Dennis Brothers wrote:
>> Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar  
>> be  modified or extended to recognize and emit doc comments and  
>> the  elements they refer to?  Seems like this would be quite a leg  
>> up on  Option 2.
>
> Well, what format would it emit them in? We'd want to have them able  
> to be output to html, maybe latex, maybe docbook, maybe $format in  
> future. That means some sort of abstract document model. We'd be  
> talking about adding on to the ANTLR grammar to emit objects fitting  
> such a model, and building an API and some tools to work with this  
> model - and to also interface with ANTLR's ability to generate  
> diagrams and suchlike.
>
> As a plus, it's possible that the abstract document model will also  
> be appropriate for other parser generators and so on.

As a first cut, I'd think in terms of generating an AST to collect the  
documentation elements, driving a tree parser with string template  
output.  It's possible that one tree parser could produce several of  
your desired output formats, with just a change of templates.

     - Dennis Brothers


From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 14:41:45 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 21:41:45 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <F5C4C8ED-37D8-4298-95E7-CC3985F6BE63@bros.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>	<49C7F1B5.10102@lancaster.ac.uk>
	<F5C4C8ED-37D8-4298-95E7-CC3985F6BE63@bros.com>
Message-ID: <49C80219.4080003@lancaster.ac.uk>

Dennis Brothers wrote:
> On Mar 23, 2009, at 4:31 PM, Sam Barnett-Cormack wrote:
> 
>> Dennis Brothers wrote:
>>> Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar  
>>> be  modified or extended to recognize and emit doc comments and  
>>> the  elements they refer to?  Seems like this would be quite a leg  
>>> up on  Option 2.
>> Well, what format would it emit them in? We'd want to have them able  
>> to be output to html, maybe latex, maybe docbook, maybe $format in  
>> future. That means some sort of abstract document model. We'd be  
>> talking about adding on to the ANTLR grammar to emit objects fitting  
>> such a model, and building an API and some tools to work with this  
>> model - and to also interface with ANTLR's ability to generate  
>> diagrams and suchlike.
>>
>> As a plus, it's possible that the abstract document model will also  
>> be appropriate for other parser generators and so on.
> 
> As a first cut, I'd think in terms of generating an AST to collect the  
> documentation elements, driving a tree parser with string template  
> output.  It's possible that one tree parser could produce several of  
> your desired output formats, with just a change of templates.

Well, it's certainly an option, and it's a design decision. I would opt 
for an intermediary stage as objects because it provides the greater 
extensibility - easier to handle new doc-comment tags, easier to handle 
automagic addition of diagrams, easier to do things we haven't even 
thought of.

However, StringTemplate for the output is a fine idea. If I'm going to 
try to do this myself, I'll just have to learn to use it ;) If I've got 
help, on the other hand...

-- 
Sam Barnett-Cormack

From s.barnett-cormack at lancaster.ac.uk  Mon Mar 23 15:33:52 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 23 Mar 2009 22:33:52 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>
	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
Message-ID: <49C80E50.8040500@lancaster.ac.uk>

Dennis Brothers wrote:
> On Mar 23, 2009, at 2:23 PM, Sam Barnett-Cormack wrote:
> 
>> Sam Harwell wrote:
>>> Why not create our own format that properly describes grammars?
>>>
>>> We could group them by the Tokens file they reference to cover
>>> lexer/parser/tree parser combinations. Documentation could include
>>> formatted/highlighted rule text, comments, DFA statistics, and
>>> thumbnails of the various rule diagrams linked to full-size versions.
>>>
>>> Sam (Harwell)
>> The way I see it, right now, there's two options to get the minimum  
>> I'd
>> like to see:
>>
>> 1) Scratch-written system to document anything, flexibly enough to  
>> allow
>> various different terminologies (appropriate to OOP, grammars,  
>> whatever)
>>
>> 2) Scratch-written grammar documenting system, allowing focus on good
>> documentation of grammars and including the stuff that Sam H talks  
>> about
>> (configurably, of course).
>>
>> Option (2) is less work, while option (1) is more use to the wider
>> community *iff* it's done well. Frankly, I'm leaning towards (2) now
>> (despite some quickly-scratched-out design for (1), which I could  
>> always
>> use to do that option later myself if I really want to). (2) doesn't
>> overlap other existing systems.
>>
>> If there's enthusiasm for this, I'll whip up a quick outline-design,  
>> and
>> anyone who wants to help can help me nail it down to something  
>> specific,
>> and possibly help actually write it ;) areas that'd speed me up most
>> would be writing output engines and bringing extra (more experienced?)
>> minds to the parsing. Design usually produces better results from
>> multiple minds, too.
>>
>> Sam (Barnett-Cormack)
> 
> Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar be  
> modified or extended to recognize and emit doc comments and the  
> elements they refer to?  Seems like this would be quite a leg up on  
> Option 2.
> 
> I don't recall whether the ANTLR grammar is public (and I know ANTLR 3  
> was originally implemented using ANTLR 2) - what's the current state  
> of this?

Well, the ANTLRV3-in-ANTLRV3 is at http://www.antlr.org/grammar/ANTLR/

However, it'll need some tweaking - currently, doc-comments are 
discarded except on the grammar itself. Makes life awkward, as it'd be 
annoying to have to re-tweak the grammar if/when it changes in future. 
However, it won't be hard overall. Tweak the parser grammar a bit, write 
a new (most likely filter) tree grammar to extract what's needed... a 
bit harder if we want to be able to reconstruct the rules themselves, to 
put verbatim into the documentation, but still not too bad, really.

I'd prefer it if the retaining of rule doc-comments was done in the main 
codebase, of course - as well as adding doc-comments to entries in the 
tokens section. Ter et al - any chance of this happening if there *is* 
an effort to come up with a documenting tool?

-- 
Sam Barnett-Cormack

From sharwell at pixelminegames.com  Mon Mar 23 15:43:09 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 23 Mar 2009 17:43:09 -0500
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C80E50.8040500@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk><B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
	<49C80E50.8040500@lancaster.ac.uk>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BD7@Bloodymary.ironwillgames.com>

The ANTLR.g3 grammar used in the C# port of the Tool is complete and
working and preserves doc comments. :)

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Sam
Barnett-Cormack
Sent: Monday, March 23, 2009 5:34 PM
To: Dennis Brothers
Cc: ANTLR Interest Mailing List
Subject: Re: [antlr-interest] Documenting grammars

Dennis Brothers wrote:
> On Mar 23, 2009, at 2:23 PM, Sam Barnett-Cormack wrote:
> 
>> Sam Harwell wrote:
>>> Why not create our own format that properly describes grammars?
>>>
>>> We could group them by the Tokens file they reference to cover
>>> lexer/parser/tree parser combinations. Documentation could include
>>> formatted/highlighted rule text, comments, DFA statistics, and
>>> thumbnails of the various rule diagrams linked to full-size
versions.
>>>
>>> Sam (Harwell)
>> The way I see it, right now, there's two options to get the minimum  
>> I'd
>> like to see:
>>
>> 1) Scratch-written system to document anything, flexibly enough to  
>> allow
>> various different terminologies (appropriate to OOP, grammars,  
>> whatever)
>>
>> 2) Scratch-written grammar documenting system, allowing focus on good
>> documentation of grammars and including the stuff that Sam H talks  
>> about
>> (configurably, of course).
>>
>> Option (2) is less work, while option (1) is more use to the wider
>> community *iff* it's done well. Frankly, I'm leaning towards (2) now
>> (despite some quickly-scratched-out design for (1), which I could  
>> always
>> use to do that option later myself if I really want to). (2) doesn't
>> overlap other existing systems.
>>
>> If there's enthusiasm for this, I'll whip up a quick outline-design,

>> and
>> anyone who wants to help can help me nail it down to something  
>> specific,
>> and possibly help actually write it ;) areas that'd speed me up most
>> would be writing output engines and bringing extra (more
experienced?)
>> minds to the parsing. Design usually produces better results from
>> multiple minds, too.
>>
>> Sam (Barnett-Cormack)
> 
> Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar be

> modified or extended to recognize and emit doc comments and the  
> elements they refer to?  Seems like this would be quite a leg up on  
> Option 2.
> 
> I don't recall whether the ANTLR grammar is public (and I know ANTLR 3

> was originally implemented using ANTLR 2) - what's the current state  
> of this?

Well, the ANTLRV3-in-ANTLRV3 is at http://www.antlr.org/grammar/ANTLR/

However, it'll need some tweaking - currently, doc-comments are 
discarded except on the grammar itself. Makes life awkward, as it'd be 
annoying to have to re-tweak the grammar if/when it changes in future. 
However, it won't be hard overall. Tweak the parser grammar a bit, write

a new (most likely filter) tree grammar to extract what's needed... a 
bit harder if we want to be able to reconstruct the rules themselves, to

put verbatim into the documentation, but still not too bad, really.

I'd prefer it if the retaining of rule doc-comments was done in the main

codebase, of course - as well as adding doc-comments to entries in the 
tokens section. Ter et al - any chance of this happening if there *is* 
an effort to come up with a documenting tool?

-- 
Sam Barnett-Cormack

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From lguminski+antlr at gmail.com  Mon Mar 23 15:43:00 2009
From: lguminski+antlr at gmail.com (Lukasz Guminski)
Date: Mon, 23 Mar 2009 23:43:00 +0100
Subject: [antlr-interest] A look-ahead/rewind problem
In-Reply-To: <49C7B6E4.3090604@temporal-wave.com>
References: <d2bc670a0903230509o344ea8cv7495aef353d3b0fa@mail.gmail.com>
	<49C77E7F.7010101@smartshift.de>
	<d2bc670a0903230537p61eeaae6vec1bb69df68fecea@mail.gmail.com>
	<49C7888D.30603@smartshift.de>
	<d2bc670a0903230704wf6dcd91v910f1ce8f3bf5efb@mail.gmail.com>
	<49C7991C.3070800@smartshift.de>
	<d2bc670a0903230802kbe66a3fk33bc204458431aa3@mail.gmail.com>
	<49C7ADB4.8090500@temporal-wave.com>
	<d2bc670a0903230856s257c778i72878b5fda009a5d@mail.gmail.com>
	<49C7B6E4.3090604@temporal-wave.com>
Message-ID: <d2bc670a0903231543r4171af54ibb0b553c6dcc549a@mail.gmail.com>

2009/3/23 Jim Idle <jimi at temporal-wave.com>

>  Lukasz Guminski wrote:
>
> I have just noticed the problem with alphanum.
>
> ...
>
>
> fragment CR :'\r';
> fragment LF : '\n';
> INSIGNIFICANT_CHAR:.;
>
> You still need:
>
>
> INSIGNIFICANT_CHAR:. { skip(); };
>
> I think.
>

You're right. Thank you.

BTW is it possible to solve the problem via a mixture of syntactic and
semantic predicates in the way I initially tried?

block_open
    :  ((BLOCK_BOUNDARY
block_name)=>{stack.size()==0||!stack.peek().equals($block_name.text)}?) =>
    BLOCK_BOUNDARY block_name BLOCK_BOUNDARY
{stack.push($block_name.text);System.out.println("start of block " +
$block_name.text);};

If so, how to do it? I have a feeling that it would be a more general
solution than delegating the task to the lexer as we did.
Lucas

>
>
> Jim
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090323/f0563e76/attachment.html 

From caishaoting at gmail.com  Mon Mar 23 15:51:38 2009
From: caishaoting at gmail.com (Shaoting Cai)
Date: Mon, 23 Mar 2009 15:51:38 -0700
Subject: [antlr-interest] CommonTreeNodeStream.size() get "streams are of
	unknown size" exception
Message-ID: <9b1ada6d0903231551g1fb1a78eg50841bea34751065@mail.gmail.com>

Hi,

I was using CommonTreeNodeStream.size() and it worked in antlr-3.1.1.
After I switch to 3.1.3, I get "streams are of unknown size" runtime
exception.
Is there any changes in the CommonTreeNodeStream class?

here's how I create the CommonTreeNodeStream:

        ....
        this.ast = (CommonTree) r.getTree();
        System.out.println(ast.toStringTree());  // <-- i can see the
tree string
        CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
        System.out.println(nodes.size());  // <-- get exception here
        ....

Thanks in advance for any clue :)

Shaoting

From sharwell at pixelminegames.com  Mon Mar 23 16:06:45 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 23 Mar 2009 18:06:45 -0500
Subject: [antlr-interest] CommonTreeNodeStream.size() get "streams are
	ofunknown size" exception
In-Reply-To: <9b1ada6d0903231551g1fb1a78eg50841bea34751065@mail.gmail.com>
References: <9b1ada6d0903231551g1fb1a78eg50841bea34751065@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BD9@Bloodymary.ironwillgames.com>

You need to switch to use the new BufferedTreeNodeStream class instead.
The new CommonTreeNodeStream is unbuffered, so it can't know the size.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Shaoting Cai
Sent: Monday, March 23, 2009 5:52 PM
To: ANTLR Interest
Subject: [antlr-interest] CommonTreeNodeStream.size() get "streams are
ofunknown size" exception

Hi,

I was using CommonTreeNodeStream.size() and it worked in antlr-3.1.1.
After I switch to 3.1.3, I get "streams are of unknown size" runtime
exception.
Is there any changes in the CommonTreeNodeStream class?

here's how I create the CommonTreeNodeStream:

        ....
        this.ast = (CommonTree) r.getTree();
        System.out.println(ast.toStringTree());  // <-- i can see the
tree string
        CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
        System.out.println(nodes.size());  // <-- get exception here
        ....

Thanks in advance for any clue :)

Shaoting

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From caishaoting at gmail.com  Mon Mar 23 16:17:18 2009
From: caishaoting at gmail.com (Shaoting Cai)
Date: Mon, 23 Mar 2009 16:17:18 -0700
Subject: [antlr-interest] CommonTreeNodeStream.size() get "streams are
	ofunknown size" exception
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BD9@Bloodymary.ironwillgames.com>
References: <9b1ada6d0903231551g1fb1a78eg50841bea34751065@mail.gmail.com>
	<86403CA0939415448BCCB83855EFE09AA67BD9@Bloodymary.ironwillgames.com>
Message-ID: <9b1ada6d0903231617t2479ec8agd15814208c96ae0e@mail.gmail.com>

It works.  great!
Thanks a lot, Sam :D

Shaoting


On Mon, Mar 23, 2009 at 4:06 PM, Sam Harwell
<sharwell at pixelminegames.com> wrote:
> You need to switch to use the new BufferedTreeNodeStream class instead.
> The new CommonTreeNodeStream is unbuffered, so it can't know the size.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Shaoting Cai
> Sent: Monday, March 23, 2009 5:52 PM
> To: ANTLR Interest
> Subject: [antlr-interest] CommonTreeNodeStream.size() get "streams are
> ofunknown size" exception
>
> Hi,
>
> I was using CommonTreeNodeStream.size() and it worked in antlr-3.1.1.
> After I switch to 3.1.3, I get "streams are of unknown size" runtime
> exception.
> Is there any changes in the CommonTreeNodeStream class?
>
> here's how I create the CommonTreeNodeStream:
>
> ? ? ? ?....
> ? ? ? ?this.ast = (CommonTree) r.getTree();
> ? ? ? ?System.out.println(ast.toStringTree()); ?// <-- i can see the
> tree string
> ? ? ? ?CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
> ? ? ? ?System.out.println(nodes.size()); ?// <-- get exception here
> ? ? ? ?....
>
> Thanks in advance for any clue :)
>
> Shaoting
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gabriel.petrovay at 28msec.com  Tue Mar 24 00:59:41 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 24 Mar 2009 08:59:41 +0100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
Message-ID: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>

Hi all,

I have the following grammar file:

//========================================
grammar k;
options {
output=AST;
}

rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;

KEYWORD1 : 'keyword1';
KEYWORD2 : 'keyword2';

Name : Letter* ;
fragment Letter : 'a'..'z' | 'A'..'Z' ;

S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
//========================================


The following text is not a valid one.

INPUT:
=====
keyword1 keyword2 keyword1 ;

OUTPUT:
=======
line 1:18 mismatched input 'keyword1' expecting Name
<mismatched token: [@4,18:25='keyword1',<4>,1:18], resync=keyword1 keyword2
keyword1 ;>


How can I make a parser to recognize this input? I want to be able to allow
the keywords in the places where any char combination is allowed. How can I
make this?

Regards,
Gabriel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/f57ea376/attachment.html 

From lucien_antlr at yahoo.com  Tue Mar 24 01:07:52 2009
From: lucien_antlr at yahoo.com (Lucien Antlr)
Date: Tue, 24 Mar 2009 01:07:52 -0700 (PDT)
Subject: [antlr-interest] Question regarding "Assignment"
Message-ID: <142222.45138.qm@web43515.mail.sp1.yahoo.com>

Hi folks,

Still wrestling with the ins and outs of the tool, I came up with something I expected to work but that didn't.

I expected lab=(EQ expr) to assign the AST to "lab", but rather it always returns a null.

The equivalent ?working statement would be either
1)??? (labA=EQ labB=expr) -> ^($labA $labB)
or
2)??newRule:?? EQ expr;
? ?(lab=newRule) -> ^($lab) 

Is it a bug that grouping through ( ) doesn't work when assigning to a label?

Cheers,
Luc



      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/ccb03035/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 01:29:53 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 24 Mar 2009 13:59:53 +0530
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
Message-ID: <49C89A01.5040205@s7software.com>

Looks like you are trying to use keyword as identifier. AFAIK, this 
cannot be resolved in the lexer. You have to use predicates in the 
parser rule. Something like this:

rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;

keyKEYWORD1
    :    {input.LT(1).getText().equals("keyword1")}? Name ;

keyKEYWORD2
    :    {input.LT(1).getText().equals("keyword2")}? Name ;


One more problem I see is the production "Name : Letter* ;". Lexer 
production cannot define a zero length string.

Another problem is you are expecting 'keyword1' to be parsed as Name but 
production for Name doesn't allow numbers.

- Indhu

Gabriel Petrovay wrote:
> Hi all,
>
> I have the following grammar file:
>
> //========================================
> grammar k;
> options {
> output=AST;
> }
>
> rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>
> KEYWORD1 : 'keyword1';
> KEYWORD2 : 'keyword2';
>
> Name : Letter* ;
> fragment Letter : 'a'..'z' | 'A'..'Z' ;
>
> S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
> //========================================
>
>
> The following text is not a valid one.
>
> INPUT:
> =====
> keyword1 keyword2 keyword1 ;
>
> OUTPUT:
> =======
> line 1:18 mismatched input 'keyword1' expecting Name
> <mismatched token: [@4,18:25='keyword1',<4>,1:18], resync=keyword1 
> keyword2 keyword1 ;>
>
>
> How can I make a parser to recognize this input? I want to be able to 
> allow the keywords in the places where any char combination is 
> allowed. How can I make this?
>
> Regards,
> Gabriel
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/13b82b39/attachment.html 

From sven.van.echelpoel at empolis.com  Tue Mar 24 02:04:52 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Tue, 24 Mar 2009 10:04:52 +0100
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define
	possibly	incorrect
In-Reply-To: <49C7ABF8.3010507@temporal-wave.com>
References: <1237819958.6293.7.camel@cartman>
	<49C7ABF8.3010507@temporal-wave.com>
Message-ID: <1237885492.6297.3.camel@cartman>

[...]
> > It looks to me that this define actually should be:
> >
> > #define ANTLR3_MIN_TOKEN_TYPE ANTLR3_TOKEN_UP + 1
> >
> > or am I missing something?
> >
> > Sven
> Yes, it probably supposed to be that, but it isn't actually used 
> anywhere any more. I have changed it though.
Well, I'm using it now or I wouldn't have noticed it :-) But maybe I
shouldn't and there's a better way of doing it. I'm trying to figure out
that the node returned by LT( 1 ) is a valid node (one of the nodes
created by my grammar). So I check that the type >=
ANTLR3_MIN_TOKEN_TYPE

Would that be correct?

> 
> Jim


From anders.hessellund at gmail.com  Tue Mar 24 02:05:44 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Tue, 24 Mar 2009 10:05:44 +0100
Subject: [antlr-interest] token ' leads to OutOfMemory Exceptions
In-Reply-To: <49C7A11C.20207@temporal-wave.com>
References: <797a9f130903230154o76367ceds9b6888048142b034@mail.gmail.com>
	<49C7A11C.20207@temporal-wave.com>
Message-ID: <797a9f130903240205n699c5a9dibeb8fec145e28fca@mail.gmail.com>

Hi,

It sounds like the interaction of this rule with some other rule. Do you
> perchance have another rule that can match an empty sequence?


Yep, thanks...that was exactly the problem.

-- Anders

On Mon, Mar 23, 2009 at 3:47 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Anders Hessellund wrote:
> > Hi,
> >
> > I've experienced a strange thing in my grammar. I need a token for the
> > special character '
> >
> > If I specify it like this:
> >
> > PLING
> >     :    '\''
> >     ;
> >
> > I get an OutOfMemoryException during parsing.
> >
> > But if I specify it like this
> >
> > PLING
> >     :    '\u0027'
> >     ;
> >
> > Everything works fine.
> >
> > Is this a bug or a feature?
> It sounds like the interaction of this rule with some other rule. Do you
> perchance have another rule that can match an empty sequence? Something
> like:
>
> ID : LETTER* ;
>
> Which should be
>
> ID : LETTER+:
>
> We won't be able to help you with only the information you provide -
> best to post the grammar if you can.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/39fdffea/attachment.html 

From lucien_antlr at yahoo.com  Tue Mar 24 02:32:17 2009
From: lucien_antlr at yahoo.com (Lucien Antlr)
Date: Tue, 24 Mar 2009 02:32:17 -0700 (PDT)
Subject: [antlr-interest] V3 Rule Action allowing inline tree building?
References: <76781.49489.qm@web43509.mail.sp1.yahoo.com>
	<86403CA0939415448BCCB83855EFE09AA67B88@Bloodymary.ironwillgames.com>
Message-ID: <282466.19324.qm@web43504.mail.sp1.yahoo.com>

Hi Sam/ and list,

That's a great response, and pretty clean too.? Thank you for your time in helping me.

I was hoping to have the same readability as the original grammar that was available in V2.? So I concocted the following nasty alternative for those interested...

// Create what ever tree you want here...
fragment dummyAST
??? ?:?i=ID -> ^( LITERAL_enum ID $i )
?;
?
enumerator??? :?????? 
??? ??? ??? ??? 'int' /*i=ID*/????? z=dummyAST

?????????{ // do something with internal tree from dummyAST
??????? ??? ??System.out.println(((CommonTree)($z.tree)).toStringTree() +" ..............................\n");
??? ??? ??}
???????????????????(a=EQ b=expr)?? // = e
??????????????? ??? (c=EQ)? ?// =
??? ??? ??????????? ';'

??????????????? -> ^('int' ($a $b)? ($c)? )??// rewrite the output, dropping the dummyAST output
??????? ;


?Cheers,
Luc




________________________________
From: Sam Harwell <sharwell at pixelminegames.com>
To: Lucien Antlr <lucien_antlr at yahoo.com>; antlr-interest at antlr.org
Sent: Thursday, March 19, 2009 3:15:04 AM
Subject: RE: [antlr-interest] V3 Rule Action allowing inline tree building?


Once you get the hang of it, you can do it by hand without too much trouble. For example, in converting a v2 grammar to v3, I encountered this in the members section:
?
stringAlias =
??????? #(#[BLOCK], #(#[ALT], #[STRING_LITERAL], #[EOA]), #[EOB]);
?
Which became this (you can use CommonTreeinstead of GrammarAST). Note that this uses the CSharp3 target so the function names are capitalized, unlike the Java target.
?
/*
?* stringAlias = ^(BLOCK[] ^(ALT[] STRING_LITERAL[] EOA[]) EOB[])
?*/
stringAlias = (GrammarAST)adaptor.Create( BLOCK, "BLOCK" );
{
??? GrammarAST alt = (GrammarAST)adaptor.Create( ALT, "ALT" );
??? adaptor.AddChild( alt, adaptor.Create( STRING_LITERAL, "STRING_LITERAL" ) );
??? adaptor.AddChild( alt, adaptor.Create( EOA, "EOA" ) );
??? adaptor.AddChild( stringAlias, alt );
}
adaptor.AddChild( stringAlias, adaptor.Create( EOB, "EOB" ) );
?
In your case, you?d use something like this:
?
CommonTreetree = (CommonTree)adaptor.Nil();
adaptor.AddChild( tree, adaptor.Create( LITERAL_enum, "enum" ) );
adaptor.AddChild( tree, adaptor.Create( ID, enumName ) );
?
Sam
?
From:antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lucien Antlr
Sent: Wednesday, March 18, 2009 11:53 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] V3 Rule Action allowing inline tree building?
?
Hi folks,
?
I saw back in 2005 there was a bit of discussion around inline tree building.?? ( linked here 
http://markmail.org/message/7zigjknpakugflje?).? For practice I am?converting the freely available C v2 ANTLR .g? and I came over a rule that has me stuck...
?
It keeps the internal symbol-table by adding part of a tree into the symbol table along with the C symbol (in this case enum).
?
Normally a v2 rewrite would look like below (from stdcparser.g)
?
enumerator[String enumName]
??????? :?????? i:ID??????????????? { symbolTable.add(? i.getText(),
??????????????????????????????????????????????????????? #(?? null,
??????????????????????????????????????????????????????????? #[LITERAL_enum, "enum"],
??????????????????????????????????????????????????????????? #[ ID, enumName]
???????????????????????????????????????????????????????? )
???????????????????????????????????????????????????? );
??????????????????????????????????? }
??????????????? (ASSIGN constExpr)?
??????? ;
#( ) under v2 calls ASTFactory.create(), but under v3 it just appears to pass straight through into the Java target?? 
?
This is true even when re-written, as I guessed it should be below.
?
enumerator[String enumName]??
??????? :?????? i=ID???????? { symbolTable.add(? $i.text,
??????????????????????????????????????????????????????? ^(?? NULL,
??????????????????????????????????????????????????????????? ^(LITERAL_enum),
??????????????????????????????????????????????????????????? ^(ID $enumName.text)
???????????????????????????????????????????????????????? )
???????????????????????????????????????????????????? );
??????????????????????????????????? }
??????????????? (ASSIGN constExpr)?
??????? ;
The only thing I came up with is "rewriting" the rule, and creating a dummy rule inside and using $dummy.tree inside the action.
?
Any thoughts from the more experienced community?
?
Kind Regards,
?
Luc


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/80072486/attachment.html 

From gabriel.petrovay at 28msec.com  Tue Mar 24 02:32:22 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 24 Mar 2009 10:32:22 +0100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <49C89A01.5040205@s7software.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com> 
	<49C89A01.5040205@s7software.com>
Message-ID: <dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>

Hi Indhu,

I was trying to simplify the example such that I still get the error and the
example is simple enough for everybody to understand the problem.

Here is the corrected grammar:

//========================================
 grammar k;
options {
output=AST;
}

rule : KEYWORD1 (KEYWORD2 Name)? ';' ;

KEYWORD1 : 'keywordA';
KEYWORD2 : 'keywordB';

Name : ('a'..'z' | 'A'..'Z')+ ;
S : ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
//========================================

With this the problems you mentioned are eliminated.

As I can see your proposed solution is not scalable if I have the keywords:
keywordA, keywordB,...,keywordZ, and the Name rules: Name1, Name2,...,
NameN. Or is it?

Any solution for this?


Regards,
Gabriel


On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi <indhu.b at s7software.com>wrote:

>  Looks like you are trying to use keyword as identifier. AFAIK, this cannot
> be resolved in the lexer. You have to use predicates in the parser rule.
> Something like this:
>
> rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
>
> keyKEYWORD1
>     :    {input.LT(1).getText().equals("keyword1")}? Name ;
>
> keyKEYWORD2
>     :    {input.LT(1).getText().equals("keyword2")}? Name ;
>
>
> One more problem I see is the production "Name : Letter* ;". Lexer
> production cannot define a zero length string.
>
> Another problem is you are expecting 'keyword1' to be parsed as Name but
> production for Name doesn't allow numbers.
>
> - Indhu
>
> Gabriel Petrovay wrote:
>
> Hi all,
>
> I have the following grammar file:
>
> //========================================
> grammar k;
> options {
> output=AST;
> }
>
> rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>
> KEYWORD1 : 'keyword1';
> KEYWORD2 : 'keyword2';
>
> Name : Letter* ;
> fragment Letter : 'a'..'z' | 'A'..'Z' ;
>
> S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
> //========================================
>
>
> The following text is not a valid one.
>
> INPUT:
> =====
> keyword1 keyword2 keyword1 ;
>
> OUTPUT:
> =======
> line 1:18 mismatched input 'keyword1' expecting Name
> <mismatched token: [@4,18:25='keyword1',<4>,1:18], resync=keyword1 keyword2
> keyword1 ;>
>
>
> How can I make a parser to recognize this input? I want to be able to allow
> the keywords in the places where any char combination is allowed. How can I
> make this?
>
> Regards,
> Gabriel
>
> ------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>


-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/92d4acaa/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 02:46:24 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 24 Mar 2009 15:16:24 +0530
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
	<49C89A01.5040205@s7software.com>
	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
Message-ID: <49C8ABF0.6060801@s7software.com>

I assume when you say 'keyword' you are talking about the keywords (like 
'if', 'else'. 'type', etc) in the language you are trying to parse. 
Those must be finite and the regular approach is to have a production 
for each. Under that assumption the proposed model is certainly scalable.

But I'm just getting a doubt if you are meaning something else by 
'keyword'. Are you trying to parse a input containing name value pair 
where name and value can be anything?

And what do you mean by Name1, Name2, ... NameN? I dont see any such 
thing in grammar. Is name not a plain ID (like a variable name)?

Throwing some more light on what exactly you are trying to parse will be 
helpful.

- Indhu

Gabriel Petrovay wrote:
> Hi Indhu,
>
> I was trying to simplify the example such that I still get the error 
> and the example is simple enough for everybody to understand the problem.
>
> Here is the corrected grammar:
>
> //========================================
> grammar k;
> options {
> output=AST;
> }
>
> rule : KEYWORD1 (KEYWORD2 Name)? ';' ;
>
> KEYWORD1 : 'keywordA';
> KEYWORD2 : 'keywordB';
>
> Name : ('a'..'z' | 'A'..'Z')+ ;
> S : ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
> //========================================
>
> With this the problems you mentioned are eliminated.
>
> As I can see your proposed solution is not scalable if I have the 
> keywords: keywordA, keywordB,...,keywordZ, and the Name rules: Name1, 
> Name2,..., NameN. Or is it?
>
> Any solution for this?
>
>
> Regards,
> Gabriel
>
>
> On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi 
> <indhu.b at s7software.com <mailto:indhu.b at s7software.com>> wrote:
>
>     Looks like you are trying to use keyword as identifier. AFAIK,
>     this cannot be resolved in the lexer. You have to use predicates
>     in the parser rule. Something like this:
>
>     rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
>
>     keyKEYWORD1
>         :    {input.LT(1).getText().equals("keyword1")}? Name ;
>
>     keyKEYWORD2
>         :    {input.LT(1).getText().equals("keyword2")}? Name ;
>
>
>     One more problem I see is the production "Name : Letter* ;". Lexer
>     production cannot define a zero length string.
>
>     Another problem is you are expecting 'keyword1' to be parsed as
>     Name but production for Name doesn't allow numbers.
>
>     - Indhu
>
>     Gabriel Petrovay wrote:
>>     Hi all,
>>
>>     I have the following grammar file:
>>
>>     //========================================
>>     grammar k;
>>     options {
>>     output=AST;
>>     }
>>
>>     rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>>
>>     KEYWORD1 : 'keyword1';
>>     KEYWORD2 : 'keyword2';
>>
>>     Name : Letter* ;
>>     fragment Letter : 'a'..'z' | 'A'..'Z' ;
>>
>>     S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel =
>>     HIDDEN; } ;
>>     //========================================
>>
>>
>>     The following text is not a valid one.
>>
>>     INPUT:
>>     =====
>>     keyword1 keyword2 keyword1 ;
>>
>>     OUTPUT:
>>     =======
>>     line 1:18 mismatched input 'keyword1' expecting Name
>>     <mismatched token: [@4,18:25='keyword1',<4>,1:18],
>>     resync=keyword1 keyword2 keyword1 ;>
>>
>>
>>     How can I make a parser to recognize this input? I want to be
>>     able to allow the keywords in the places where any char
>>     combination is allowed. How can I make this?
>>
>>     Regards,
>>     Gabriel
>>     ------------------------------------------------------------------------
>>
>>
>>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>     Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>       
>
>
>
>
> -- 
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/9fa2c384/attachment.html 

From tbrandonau at gmail.com  Tue Mar 24 03:06:38 2009
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 24 Mar 2009 21:06:38 +1100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
	<49C89A01.5040205@s7software.com>
	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
Message-ID: <ebc876d70903240306k437eee99h6f286bbff74735db@mail.gmail.com>

2009/3/24 Gabriel Petrovay <gabriel.petrovay at 28msec.com>:
> Hi Indhu,
>
> I was trying to simplify the example such that I still get the error and the
> example is simple enough for everybody to understand the problem.
>
> Here is the corrected grammar:
>
> //========================================
> grammar k;
> options {
> output=AST;
> }
>
> rule : KEYWORD1 (KEYWORD2 Name)? ';' ;
>
> KEYWORD1 : 'keywordA';
> KEYWORD2 : 'keywordB';
>
> Name : ('a'..'z' | 'A'..'Z')+ ;
> S : ('\t' | ' ' | '\n' | '\r')+? { $channel = HIDDEN; } ;
> //========================================
>
> With this the problems you mentioned are eliminated.
>
> As I can see your proposed solution is not scalable if I have the keywords:
> keywordA, keywordB,...,keywordZ, and the Name rules: Name1, Name2,...,
> NameN. Or is it?
>
> Any solution for this?
>
I think your fundamental problem is you have failed to realise that
lexing is not sensitive to parser context in ANTLR. Lexing occurs
entirely seperately to parsing. So you can't have multiple lexer rules
covering the same input.
You could have e.g. seperate rules for uppercase names and lowercase
names. In this case either each keyword would fall under a single name
rule or, if keywords were case insensitive, you could have something
like:
keyKEYWORD1
     :    {input.LT(1).getText().toLower().equals("keyword1")}? (UCName|LCName);

An alternate solution is to specify the keywords in the lexer as you
have and then have a parser rule like:
name: Name | KEYWORD1 | KEYWORD2;
This will perform slightly better but requires that you add keywords
in two places.

Both methods are perfectly scalable to any number of keyword\name rules.

Tom.

>
> Regards,
> Gabriel
>
>
> On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi <indhu.b at s7software.com>
> wrote:
>>
>> Looks like you are trying to use keyword as identifier. AFAIK, this cannot
>> be resolved in the lexer. You have to use predicates in the parser rule.
>> Something like this:
>>
>> rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
>>
>> keyKEYWORD1
>> ??? :??? {input.LT(1).getText().equals("keyword1")}? Name ;
>>
>> keyKEYWORD2
>> ??? :??? {input.LT(1).getText().equals("keyword2")}? Name ;
>>
>>
>> One more problem I see is the production "Name : Letter* ;". Lexer
>> production cannot define a zero length string.
>>
>> Another problem is you are expecting 'keyword1' to be parsed as Name but
>> production for Name doesn't allow numbers.
>>
>> - Indhu
>>
>> Gabriel Petrovay wrote:
>>
>> Hi all,
>>
>> I have the following grammar file:
>>
>> //========================================
>> grammar k;
>> options {
>> output=AST;
>> }
>>
>> rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>>
>> KEYWORD1 : 'keyword1';
>> KEYWORD2 : 'keyword2';
>>
>> Name : Letter* ;
>> fragment Letter : 'a'..'z' | 'A'..'Z' ;
>>
>> S??? ??? ??? :??? ('\t' | ' ' | '\n' | '\r')+? { $channel = HIDDEN; } ;
>> //========================================
>>
>>
>> The following text is not a valid one.
>>
>> INPUT:
>> =====
>> keyword1 keyword2 keyword1 ;
>>
>> OUTPUT:
>> =======
>> line 1:18 mismatched input 'keyword1' expecting Name
>> <mismatched token: [@4,18:25='keyword1',<4>,1:18], resync=keyword1
>> keyword2 keyword1 ;>
>>
>>
>> How can I make a parser to recognize this input? I want to be able to
>> allow the keywords in the places where any char combination is allowed. How
>> can I make this?
>>
>> Regards,
>> Gabriel
>>
>> ________________________________
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> --
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From schreibubi at gmail.com  Tue Mar 24 03:12:12 2009
From: schreibubi at gmail.com (=?UTF-8?B?SsO2cmcgV2VybmVy?=)
Date: Tue, 24 Mar 2009 11:12:12 +0100
Subject: [antlr-interest] Maven source and javadoc packages for antlr-runtime
Message-ID: <6cd966490903240312v53073240m82af5a9f702d2b98@mail.gmail.com>

Hi all,

is there be a chance to create in addition to the antlr-runtime maven
package the corresponding source and javadoc packages? Would be convenient
for debugging, because maven can automatically download them and the m2
eclipse plugin automatically integrates them in eclipse. This allows to get
context sensitive information in eclipse and is  helpful for debugging.

Regards,

J?rg
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/c7adc25f/attachment.html 

From gabriel.petrovay at 28msec.com  Tue Mar 24 03:17:47 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 24 Mar 2009 11:17:47 +0100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <49C8ABF0.6060801@s7software.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com> 
	<49C89A01.5040205@s7software.com>
	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com> 
	<49C8ABF0.6060801@s7software.com>
Message-ID: <dc6ce1e40903240317w4e8f8cbawd9aa5c72da4da4d1@mail.gmail.com>

Hi all,

I am trying to parse XQuery. It is known that XQuery is not keyword based.
For example you can have the following function declaration:

declare function declare:function($declare as element(declare)) as
element(function) {
  <function declare="declare function">{$declare/function}</function>
}

This declares a function called "function" in the namespace that has the
prefix "declare". This function takes the parameter "declare" of type XML
element having the tag name "declare", and returns also an XML element
having the tag name "function". And so forth...
:)

Can I solve this?

Thanks!
Gabriel

On Tue, Mar 24, 2009 at 10:46 AM, Indhu Bharathi <indhu.b at s7software.com>wrote:

>  I assume when you say 'keyword' you are talking about the keywords (like
> 'if', 'else'. 'type', etc) in the language you are trying to parse. Those
> must be finite and the regular approach is to have a production for each.
> Under that assumption the proposed model is certainly scalable.
>
> But I'm just getting a doubt if you are meaning something else by
> 'keyword'. Are you trying to parse a input containing name value pair where
> name and value can be anything?
>
> And what do you mean by Name1, Name2, ... NameN? I dont see any such thing
> in grammar. Is name not a plain ID (like a variable name)?
>
> Throwing some more light on what exactly you are trying to parse will be
> helpful.
>
>
> - Indhu
>
> Gabriel Petrovay wrote:
>
> Hi Indhu,
>
> I was trying to simplify the example such that I still get the error and
> the example is simple enough for everybody to understand the problem.
>
> Here is the corrected grammar:
>
> //========================================
>  grammar k;
> options {
> output=AST;
> }
>
> rule : KEYWORD1 (KEYWORD2 Name)? ';' ;
>
> KEYWORD1 : 'keywordA';
> KEYWORD2 : 'keywordB';
>
> Name : ('a'..'z' | 'A'..'Z')+ ;
> S : ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
> //========================================
>
> With this the problems you mentioned are eliminated.
>
> As I can see your proposed solution is not scalable if I have the keywords:
> keywordA, keywordB,...,keywordZ, and the Name rules: Name1, Name2,...,
> NameN. Or is it?
>
> Any solution for this?
>
>
> Regards,
> Gabriel
>
>
> On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi <indhu.b at s7software.com>wrote:
>
>>  Looks like you are trying to use keyword as identifier. AFAIK, this
>> cannot be resolved in the lexer. You have to use predicates in the parser
>> rule. Something like this:
>>
>> rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
>>
>> keyKEYWORD1
>>     :    {input.LT(1).getText().equals("keyword1")}? Name ;
>>
>> keyKEYWORD2
>>     :    {input.LT(1).getText().equals("keyword2")}? Name ;
>>
>>
>> One more problem I see is the production "Name : Letter* ;". Lexer
>> production cannot define a zero length string.
>>
>> Another problem is you are expecting 'keyword1' to be parsed as Name but
>> production for Name doesn't allow numbers.
>>
>> - Indhu
>>
>> Gabriel Petrovay wrote:
>>
>>  Hi all,
>>
>> I have the following grammar file:
>>
>> //========================================
>> grammar k;
>> options {
>> output=AST;
>> }
>>
>> rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>>
>> KEYWORD1 : 'keyword1';
>> KEYWORD2 : 'keyword2';
>>
>> Name : Letter* ;
>> fragment Letter : 'a'..'z' | 'A'..'Z' ;
>>
>> S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
>> //========================================
>>
>>
>> The following text is not a valid one.
>>
>> INPUT:
>> =====
>> keyword1 keyword2 keyword1 ;
>>
>> OUTPUT:
>> =======
>> line 1:18 mismatched input 'keyword1' expecting Name
>> <mismatched token: [@4,18:25='keyword1',<4>,1:18], resync=keyword1
>> keyword2 keyword1 ;>
>>
>>
>> How can I make a parser to recognize this input? I want to be able to
>> allow the keywords in the places where any char combination is allowed. How
>> can I make this?
>>
>> Regards,
>> Gabriel
>>
>> ------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
>
> --
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034
>
>
>


-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/06214aaa/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 03:33:50 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Tue, 24 Mar 2009 16:03:50 +0530
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <dc6ce1e40903240317w4e8f8cbawd9aa5c72da4da4d1@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
	<49C89A01.5040205@s7software.com>
	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
	<49C8ABF0.6060801@s7software.com>
	<dc6ce1e40903240317w4e8f8cbawd9aa5c72da4da4d1@mail.gmail.com>
Message-ID: <49C8B70E.4090300@s7software.com>

Well, then
1. declare and function in "declare:function"
2. declare in "$declare"
3. declare is "element(declare)"
4. function in "element(function)"
etc.. can be anything. In that case we just have to match them with ID ( 
ID: 'a'..'z'+ ).

Something like:
'declare' 'function' ID ':' ID '(' '$' ID 'as' 'element' '(' ID ')' ')' 
'as' 'element' '(' ID ')' ...

Later after forming the AST you can verify is semantic verification. For 
example "declare function declare:function($foo as element" might be 
invalid.

- Indhu

P.S: I don't know XQuery. So some XQuery specific things might be wrong 
in the mail. Please adjust :-)


Gabriel Petrovay wrote:
> Hi all,
>
> I am trying to parse XQuery. It is known that XQuery is not keyword 
> based. For example you can have the following function declaration:
>
> declare function declare:function($declare as element(declare)) as 
> element(function) {
>   <function declare="declare function">{$declare/function}</function>
> }
>
> This declares a function called "function" in the namespace that has 
> the prefix "declare". This function takes the parameter "declare" of 
> type XML element having the tag name "declare", and returns also an 
> XML element having the tag name "function". And so forth...
> :)
>
> Can I solve this?
>
> Thanks!
> Gabriel
>
> On Tue, Mar 24, 2009 at 10:46 AM, Indhu Bharathi 
> <indhu.b at s7software.com <mailto:indhu.b at s7software.com>> wrote:
>
>     I assume when you say 'keyword' you are talking about the keywords
>     (like 'if', 'else'. 'type', etc) in the language you are trying to
>     parse. Those must be finite and the regular approach is to have a
>     production for each. Under that assumption the proposed model is
>     certainly scalable.
>
>     But I'm just getting a doubt if you are meaning something else by
>     'keyword'. Are you trying to parse a input containing name value
>     pair where name and value can be anything?
>
>     And what do you mean by Name1, Name2, ... NameN? I dont see any
>     such thing in grammar. Is name not a plain ID (like a variable name)?
>
>     Throwing some more light on what exactly you are trying to parse
>     will be helpful.
>
>
>     - Indhu
>
>     Gabriel Petrovay wrote:
>>     Hi Indhu,
>>
>>     I was trying to simplify the example such that I still get the
>>     error and the example is simple enough for everybody to
>>     understand the problem.
>>
>>     Here is the corrected grammar:
>>
>>     //========================================
>>     grammar k;
>>     options {
>>     output=AST;
>>     }
>>
>>     rule : KEYWORD1 (KEYWORD2 Name)? ';' ;
>>
>>     KEYWORD1 : 'keywordA';
>>     KEYWORD2 : 'keywordB';
>>
>>     Name : ('a'..'z' | 'A'..'Z')+ ;
>>     S : ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
>>     //========================================
>>
>>     With this the problems you mentioned are eliminated.
>>
>>     As I can see your proposed solution is not scalable if I have the
>>     keywords: keywordA, keywordB,...,keywordZ, and the Name rules:
>>     Name1, Name2,..., NameN. Or is it?
>>
>>     Any solution for this?
>>
>>
>>     Regards,
>>     Gabriel
>>
>>
>>     On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi
>>     <indhu.b at s7software.com <mailto:indhu.b at s7software.com>> wrote:
>>
>>         Looks like you are trying to use keyword as identifier.
>>         AFAIK, this cannot be resolved in the lexer. You have to use
>>         predicates in the parser rule. Something like this:
>>
>>         rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
>>
>>         keyKEYWORD1
>>             :    {input.LT(1).getText().equals("keyword1")}? Name ;
>>
>>         keyKEYWORD2
>>             :    {input.LT(1).getText().equals("keyword2")}? Name ;
>>
>>
>>         One more problem I see is the production "Name : Letter* ;".
>>         Lexer production cannot define a zero length string.
>>
>>         Another problem is you are expecting 'keyword1' to be parsed
>>         as Name but production for Name doesn't allow numbers.
>>
>>         - Indhu
>>
>>         Gabriel Petrovay wrote:
>>>         Hi all,
>>>
>>>         I have the following grammar file:
>>>
>>>         //========================================
>>>         grammar k;
>>>         options {
>>>         output=AST;
>>>         }
>>>
>>>         rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>>>
>>>         KEYWORD1 : 'keyword1';
>>>         KEYWORD2 : 'keyword2';
>>>
>>>         Name : Letter* ;
>>>         fragment Letter : 'a'..'z' | 'A'..'Z' ;
>>>
>>>         S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel =
>>>         HIDDEN; } ;
>>>         //========================================
>>>
>>>
>>>         The following text is not a valid one.
>>>
>>>         INPUT:
>>>         =====
>>>         keyword1 keyword2 keyword1 ;
>>>
>>>         OUTPUT:
>>>         =======
>>>         line 1:18 mismatched input 'keyword1' expecting Name
>>>         <mismatched token: [@4,18:25='keyword1',<4>,1:18],
>>>         resync=keyword1 keyword2 keyword1 ;>
>>>
>>>
>>>         How can I make a parser to recognize this input? I want to
>>>         be able to allow the keywords in the places where any char
>>>         combination is allowed. How can I make this?
>>>
>>>         Regards,
>>>         Gabriel
>>>         ------------------------------------------------------------------------
>>>
>>>
>>>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>         Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>           
>>
>>
>>
>>
>>     -- 
>>     MSc Gabriel Petrovay
>>     MCSA, MCDBA, MCAD
>>     Mobile: +41(0)787978034
>
>
>
>
> -- 
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/26808d0e/attachment.html 

From gabriel.petrovay at 28msec.com  Tue Mar 24 04:16:28 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Tue, 24 Mar 2009 12:16:28 +0100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <ebc876d70903240306k437eee99h6f286bbff74735db@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com> 
	<49C89A01.5040205@s7software.com>
	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com> 
	<ebc876d70903240306k437eee99h6f286bbff74735db@mail.gmail.com>
Message-ID: <dc6ce1e40903240416r5d43afdco67e6bc3f979cf2f@mail.gmail.com>

Hi Tom,

So in your solution I would have to do something like this:

name1: Name1 | KEYWORD1 | KEYWORD2 | ... KEYWORDM;
name2: Name1 | KEYWORD1 | KEYWORD2 | ... KEYWORDM;
...
nameN: NameN | KEYWORD1 | KEYWORD2 | ... KEYWORDM;

This is what I meant when I said scalable. If you have 50 keywords, I think
that the production for each name rule is simply too large. This comes with
the cost of very expensive parsing. Isn't it?

Regards,
Gabriel

On Tue, Mar 24, 2009 at 11:06 AM, Thomas Brandon <tbrandonau at gmail.com>wrote:

> 2009/3/24 Gabriel Petrovay <gabriel.petrovay at 28msec.com>:
> > Hi Indhu,
> >
> > I was trying to simplify the example such that I still get the error and
> the
> > example is simple enough for everybody to understand the problem.
> >
> > Here is the corrected grammar:
> >
> > //========================================
> > grammar k;
> > options {
> > output=AST;
> > }
> >
> > rule : KEYWORD1 (KEYWORD2 Name)? ';' ;
> >
> > KEYWORD1 : 'keywordA';
> > KEYWORD2 : 'keywordB';
> >
> > Name : ('a'..'z' | 'A'..'Z')+ ;
> > S : ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
> > //========================================
> >
> > With this the problems you mentioned are eliminated.
> >
> > As I can see your proposed solution is not scalable if I have the
> keywords:
> > keywordA, keywordB,...,keywordZ, and the Name rules: Name1, Name2,...,
> > NameN. Or is it?
> >
> > Any solution for this?
> >
> I think your fundamental problem is you have failed to realise that
> lexing is not sensitive to parser context in ANTLR. Lexing occurs
> entirely seperately to parsing. So you can't have multiple lexer rules
> covering the same input.
> You could have e.g. seperate rules for uppercase names and lowercase
> names. In this case either each keyword would fall under a single name
> rule or, if keywords were case insensitive, you could have something
> like:
> keyKEYWORD1
>     :    {input.LT(1).getText().toLower().equals("keyword1")}?
> (UCName|LCName);
>
> An alternate solution is to specify the keywords in the lexer as you
> have and then have a parser rule like:
> name: Name | KEYWORD1 | KEYWORD2;
> This will perform slightly better but requires that you add keywords
> in two places.
>
> Both methods are perfectly scalable to any number of keyword\name rules.
>
> Tom.
>
> >
> > Regards,
> > Gabriel
> >
> >
> > On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi <indhu.b at s7software.com>
> > wrote:
> >>
> >> Looks like you are trying to use keyword as identifier. AFAIK, this
> cannot
> >> be resolved in the lexer. You have to use predicates in the parser rule.
> >> Something like this:
> >>
> >> rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
> >>
> >> keyKEYWORD1
> >>     :    {input.LT(1).getText().equals("keyword1")}? Name ;
> >>
> >> keyKEYWORD2
> >>     :    {input.LT(1).getText().equals("keyword2")}? Name ;
> >>
> >>
> >> One more problem I see is the production "Name : Letter* ;". Lexer
> >> production cannot define a zero length string.
> >>
> >> Another problem is you are expecting 'keyword1' to be parsed as Name but
> >> production for Name doesn't allow numbers.
> >>
> >> - Indhu
> >>
> >> Gabriel Petrovay wrote:
> >>
> >> Hi all,
> >>
> >> I have the following grammar file:
> >>
> >> //========================================
> >> grammar k;
> >> options {
> >> output=AST;
> >> }
> >>
> >> rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
> >>
> >> KEYWORD1 : 'keyword1';
> >> KEYWORD2 : 'keyword2';
> >>
> >> Name : Letter* ;
> >> fragment Letter : 'a'..'z' | 'A'..'Z' ;
> >>
> >> S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
> >> //========================================
> >>
> >>
> >> The following text is not a valid one.
> >>
> >> INPUT:
> >> =====
> >> keyword1 keyword2 keyword1 ;
> >>
> >> OUTPUT:
> >> =======
> >> line 1:18 mismatched input 'keyword1' expecting Name
> >> <mismatched token: [@4,18:25='keyword1',<4>,1:18], resync=keyword1
> >> keyword2 keyword1 ;>
> >>
> >>
> >> How can I make a parser to recognize this input? I want to be able to
> >> allow the keywords in the places where any char combination is allowed.
> How
> >> can I make this?
> >>
> >> Regards,
> >> Gabriel
> >>
> >> ________________________________
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> >
> > --
> > MSc Gabriel Petrovay
> > MCSA, MCDBA, MCAD
> > Mobile: +41(0)787978034
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
>



-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/61abde2a/attachment.html 

From anders.hessellund at gmail.com  Tue Mar 24 04:30:12 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Tue, 24 Mar 2009 12:30:12 +0100
Subject: [antlr-interest] Antlr and Java Generics
Message-ID: <797a9f130903240430u5c3574fch6645d4d8952814cf@mail.gmail.com>

Hi,

I've been googling and reading FAQs for some information about how Antlr and
Java Generics relate but nothing significant has shown up.

- Does anyone here know of a good tutorial or perhaps just an example
grammar?

- One of the thing that I would like was to use generic methods in my
parser, such as

public final <T extends Number<T>> T arithmeticExpr() throws
> RecognitionException {
> ..
> }
>

How can I achieve that (if possible)?

Cheers,

Anders
-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/629ce0bf/attachment.html 

From andreas.meyer at smartshift.de  Tue Mar 24 04:31:36 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Tue, 24 Mar 2009 12:31:36 +0100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <dc6ce1e40903240416r5d43afdco67e6bc3f979cf2f@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
	<49C89A01.5040205@s7software.com>	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
	<ebc876d70903240306k437eee99h6f286bbff74735db@mail.gmail.com>
	<dc6ce1e40903240416r5d43afdco67e6bc3f979cf2f@mail.gmail.com>
Message-ID: <49C8C498.3000104@smartshift.de>

Gabriel Petrovay schrieb:
> Hi Tom,
>
> So in your solution I would have to do something like this:
>
> name1: Name1 | KEYWORD1 | KEYWORD2 | ... KEYWORDM;
> name2: Name1 | KEYWORD1 | KEYWORD2 | ... KEYWORDM;
> ...
> nameN: NameN | KEYWORD1 | KEYWORD2 | ... KEYWORDM;
>
> This is what I meant when I said scalable. If you have 50 keywords, I 
> think that the production for each name rule is simply too large. This 
> comes with the cost of very expensive parsing. Isn't it?
>
> Regards,
> Gabriel
>

Why would you need n times m entries? What do you mean by name1 ... N 
anyway? If you want to model a variable context of names seen so far, 
you cannot do it like this.

Btw,  your Name lexer rule should disallow empty strings. Dont be scared 
by the number of keywords. I have a parser that recognizes 800 keywords, 
and it works. You may encounter strange strings like time-outs when 
trying to compute the prediction DFA, though, if the language is 
ambiguous (which is the case with xquery, it seems). But if you are 
careful, it should work.

Andreas

From s.barnett-cormack at lancaster.ac.uk  Tue Mar 24 04:57:31 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 24 Mar 2009 11:57:31 +0000
Subject: [antlr-interest] Question regarding "Assignment"
In-Reply-To: <142222.45138.qm@web43515.mail.sp1.yahoo.com>
References: <142222.45138.qm@web43515.mail.sp1.yahoo.com>
Message-ID: <49C8CAAB.6090807@lancaster.ac.uk>

Lucien Antlr wrote:
> Hi folks,
>  
> Still wrestling with the ins and outs of the tool, I came up with
> something I expected to work but that didn't.
> 
> I expected lab=(EQ expr) to assign the AST to "lab", but rather it
> always returns a null.
>  
> The equivalent  working statement would be either
> 1)    (labA=EQ labB=expr) -> ^($labA $labB)
> or
> 2)  newRule:   EQ expr;
>    (lab=newRule) -> ^($lab)
>  
> Is it a bug that grouping through ( ) doesn't work when assigning to a
> label?

I have reliably been informed - yes. Usual recommendation I've seen is
to do (2), although I don't think that'll quite work as you expect... I
think you want

newRule: EQ expr -> ^(EQ expr);

and do

lab=newRule -> $lab ---or--- newRule -> newRule, of course. Which is
equivalent to just newRule.

That would be equivalent to what you have in (1) - I'm not sure if what
you have in (2) is actually valid or not, as you appear to be saying
that the list "EQ expr" is to be the root of the new tree.

Sam

From s.barnett-cormack at lancaster.ac.uk  Tue Mar 24 05:01:59 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 24 Mar 2009 12:01:59 +0000
Subject: [antlr-interest] Antlr and Java Generics
In-Reply-To: <797a9f130903240430u5c3574fch6645d4d8952814cf@mail.gmail.com>
References: <797a9f130903240430u5c3574fch6645d4d8952814cf@mail.gmail.com>
Message-ID: <49C8CBB7.4010704@lancaster.ac.uk>

Anders Hessellund wrote:
> Hi,
> 
> I've been googling and reading FAQs for some information about how Antlr
> and Java Generics relate but nothing significant has shown up.
> 
> - Does anyone here know of a good tutorial or perhaps just an example
> grammar?
> 
> - One of the thing that I would like was to use generic methods in my
> parser, such as
> 
>     public final <T extends Number<T>> T arithmeticExpr() throws
>     RecognitionException {
>     ..
>     }
> 
> 
> How can I achieve that (if possible)?

Is that even a valid generic declaration? For starters, Number isn't a
generic type, so Number<T> isn't valid. Then, Java can't specify a
generic solely by return type - it has to be specified partly through a
formal parameter, or through a type parameter to the enclosing class.
Finally, why would you want this to be generic? With the flexibility of
Number, why not just make the return type Number?

To answer the ANTLR question, though, as far as I understand it ANTLR
does not generate generic code. At all. However, as members{} is passed
straight through, you could create generic methods there. That wouldn't
relate to parse rules, though.

Sam

From gabrielepalma82 at gmail.com  Tue Mar 24 05:01:55 2009
From: gabrielepalma82 at gmail.com (Gabriele Palma)
Date: Tue, 24 Mar 2009 13:01:55 +0100
Subject: [antlr-interest] Curious behaviour: unused rule has unknown effects
Message-ID: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com>

I'm modifying my working grammar. I created a new rule which does
something previously done by another rule. I renamed the old rule and
it is now unreferenced in the whole grammar, while old reference now
go to the new rule. Everything seems fine, the grammar recognizes my
test inputs.

But if i try to completely remove the old rule the grammar breaks and
no longer recognizes my working input test.

Current file -> successfully generate code -> test -> everything ok
Current file -> remove unreferenced rule -> succesfully generate code
-> test -> grammar does not recognizes my input

I double checked and the rule is not referenced in any way, if i do a
text search on the rule name the only instance found is in the rule
definition.

I'm failing at undestanding the effect that an unreferenced rule has
on the generated grammar.

Am I missing anything?

From brothers at bros.com  Tue Mar 24 05:05:57 2009
From: brothers at bros.com (Dennis Brothers)
Date: Tue, 24 Mar 2009 08:05:57 -0400
Subject: [antlr-interest] Question regarding "Assignment"
In-Reply-To: <142222.45138.qm@web43515.mail.sp1.yahoo.com>
References: <142222.45138.qm@web43515.mail.sp1.yahoo.com>
Message-ID: <14A5FB89-2B01-4428-BDB6-5019E9732DF6@bros.com>

FWIW, I had a similar experience - I expected a=(FOO | BAR | BAZ) to  
assign whichever token matched to a; as you observed there was no  
assignment.  (a=FOO | a=BAR | a=BAZ) did what I wanted.

     - Dennis Brothers

On Mar 24, 2009, at 4:07 AM, Lucien Antlr wrote:

> Hi folks,
>
> Still wrestling with the ins and outs of the tool, I came up with  
> something I expected to work but that didn't.
>
> I expected lab=(EQ expr) to assign the AST to "lab", but rather it  
> always returns a null.
>
> The equivalent  working statement would be either
> 1)    (labA=EQ labB=expr) -> ^($labA $labB)
> or
> 2)  newRule:   EQ expr;
>    (lab=newRule) -> ^($lab)
>
> Is it a bug that grouping through ( ) doesn't work when assigning to  
> a label?
>
> Cheers,
> Luc
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/7bff4ded/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Tue Mar 24 05:07:26 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Tue, 24 Mar 2009 12:07:26 +0000
Subject: [antlr-interest] Curious behaviour: unused rule has unknown
	effects
In-Reply-To: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com>
References: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com>
Message-ID: <49C8CCFE.6080802@lancaster.ac.uk>

Gabriele Palma wrote:
> I'm modifying my working grammar. I created a new rule which does
> something previously done by another rule. I renamed the old rule and
> it is now unreferenced in the whole grammar, while old reference now
> go to the new rule. Everything seems fine, the grammar recognizes my
> test inputs.
> 
> But if i try to completely remove the old rule the grammar breaks and
> no longer recognizes my working input test.
> 
> Current file -> successfully generate code -> test -> everything ok
> Current file -> remove unreferenced rule -> succesfully generate code
> -> test -> grammar does not recognizes my input
> 
> I double checked and the rule is not referenced in any way, if i do a
> text search on the rule name the only instance found is in the rule
> definition.
> 
> I'm failing at undestanding the effect that an unreferenced rule has
> on the generated grammar.
> 
> Am I missing anything?

Is it a lexer rule, or a parser rule?

Sam

From jaluber at gmx.de  Tue Mar 24 05:09:12 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 24 Mar 2009 13:09:12 +0100
Subject: [antlr-interest] How can I avoid "mismatched input" error?
In-Reply-To: <dc6ce1e40903240317w4e8f8cbawd9aa5c72da4da4d1@mail.gmail.com>
References: <dc6ce1e40903240059j26e811a0n781b6c564812ffa3@mail.gmail.com>
	<49C89A01.5040205@s7software.com>	<dc6ce1e40903240232x415da041v4b513dd02197154c@mail.gmail.com>
	<49C8ABF0.6060801@s7software.com>
	<dc6ce1e40903240317w4e8f8cbawd9aa5c72da4da4d1@mail.gmail.com>
Message-ID: <49C8CD68.6030808@gmx.de>

Gabriel Petrovay schrieb:
> Hi all,
> 
> I am trying to parse XQuery.

Did you see this link? <http://code.google.com/p/xqpretty/>

Johannes

> It is known that XQuery is not keyword
> based. For example you can have the following function declaration:
> 
> declare function declare:function($declare as element(declare)) as
> element(function) {
>   <function declare="declare function">{$declare/function}</function>
> }
> 
> This declares a function called "function" in the namespace that has the
> prefix "declare". This function takes the parameter "declare" of type
> XML element having the tag name "declare", and returns also an XML
> element having the tag name "function". And so forth...
> :)
> 
> Can I solve this?
> 
> Thanks!
> Gabriel
> 
> On Tue, Mar 24, 2009 at 10:46 AM, Indhu Bharathi <indhu.b at s7software.com
> <mailto:indhu.b at s7software.com>> wrote:
> 
>     I assume when you say 'keyword' you are talking about the keywords
>     (like 'if', 'else'. 'type', etc) in the language you are trying to
>     parse. Those must be finite and the regular approach is to have a
>     production for each. Under that assumption the proposed model is
>     certainly scalable.
> 
>     But I'm just getting a doubt if you are meaning something else by
>     'keyword'. Are you trying to parse a input containing name value
>     pair where name and value can be anything?
> 
>     And what do you mean by Name1, Name2, ... NameN? I dont see any such
>     thing in grammar. Is name not a plain ID (like a variable name)?
> 
>     Throwing some more light on what exactly you are trying to parse
>     will be helpful.
> 
> 
>     - Indhu
> 
>     Gabriel Petrovay wrote:
>>     Hi Indhu,
>>
>>     I was trying to simplify the example such that I still get the
>>     error and the example is simple enough for everybody to understand
>>     the problem.
>>
>>     Here is the corrected grammar:
>>
>>     //========================================
>>     grammar k;
>>     options {
>>     output=AST;
>>     }
>>
>>     rule : KEYWORD1 (KEYWORD2 Name)? ';' ;
>>
>>     KEYWORD1 : 'keywordA';
>>     KEYWORD2 : 'keywordB';
>>
>>     Name : ('a'..'z' | 'A'..'Z')+ ;
>>     S : ('\t' | ' ' | '\n' | '\r')+  { $channel = HIDDEN; } ;
>>     //========================================
>>
>>     With this the problems you mentioned are eliminated.
>>
>>     As I can see your proposed solution is not scalable if I have the
>>     keywords: keywordA, keywordB,...,keywordZ, and the Name rules:
>>     Name1, Name2,..., NameN. Or is it?
>>
>>     Any solution for this?
>>
>>
>>     Regards,
>>     Gabriel
>>
>>
>>     On Tue, Mar 24, 2009 at 9:29 AM, Indhu Bharathi
>>     <indhu.b at s7software.com <mailto:indhu.b at s7software.com>> wrote:
>>
>>         Looks like you are trying to use keyword as identifier. AFAIK,
>>         this cannot be resolved in the lexer. You have to use
>>         predicates in the parser rule. Something like this:
>>
>>         rule : keyKEYWORD1 (keyKEYWORD2 enc=Name)? ';' ;
>>
>>         keyKEYWORD1
>>             :    {input.LT(1).getText().equals("keyword1")}? Name ;
>>
>>         keyKEYWORD2
>>             :    {input.LT(1).getText().equals("keyword2")}? Name ;
>>
>>
>>         One more problem I see is the production "Name : Letter* ;".
>>         Lexer production cannot define a zero length string.
>>
>>         Another problem is you are expecting 'keyword1' to be parsed
>>         as Name but production for Name doesn't allow numbers.
>>
>>         - Indhu
>>
>>         Gabriel Petrovay wrote:
>>>         Hi all,
>>>
>>>         I have the following grammar file:
>>>
>>>         //========================================
>>>         grammar k;
>>>         options {
>>>         output=AST;
>>>         }
>>>
>>>         rule : KEYWORD1 (KEYWORD2 enc=Name)? ';' ;
>>>
>>>         KEYWORD1 : 'keyword1';
>>>         KEYWORD2 : 'keyword2';
>>>
>>>         Name : Letter* ;
>>>         fragment Letter : 'a'..'z' | 'A'..'Z' ;
>>>
>>>         S            :    ('\t' | ' ' | '\n' | '\r')+  { $channel =
>>>         HIDDEN; } ;
>>>         //========================================
>>>
>>>
>>>         The following text is not a valid one.
>>>
>>>         INPUT:
>>>         =====
>>>         keyword1 keyword2 keyword1 ;
>>>
>>>         OUTPUT:
>>>         =======
>>>         line 1:18 mismatched input 'keyword1' expecting Name
>>>         <mismatched token: [@4,18:25='keyword1',<4>,1:18],
>>>         resync=keyword1 keyword2 keyword1 ;>
>>>
>>>
>>>         How can I make a parser to recognize this input? I want to be
>>>         able to allow the keywords in the places where any char
>>>         combination is allowed. How can I make this?
>>>
>>>         Regards,
>>>         Gabriel
>>>         ------------------------------------------------------------------------
>>>
>>>
>>>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>         Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>           
>>
>>
>>
>>
>>     -- 
>>     MSc Gabriel Petrovay
>>     MCSA, MCDBA, MCAD
>>     Mobile: +41(0)787978034
> 
> 
> 
> 
> -- 
> MSc Gabriel Petrovay
> MCSA, MCDBA, MCAD
> Mobile: +41(0)787978034
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gabrielepalma82 at gmail.com  Tue Mar 24 05:56:09 2009
From: gabrielepalma82 at gmail.com (Gabriele Palma)
Date: Tue, 24 Mar 2009 13:56:09 +0100
Subject: [antlr-interest] Curious behaviour: unused rule has unknown
	effects
In-Reply-To: <49C8CCFE.6080802@lancaster.ac.uk>
References: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com>
	<49C8CCFE.6080802@lancaster.ac.uk>
Message-ID: <8c8eb5fb0903240556w202bedfate2912a507f92124b@mail.gmail.com>

It is a parser rule.

toBeRemoved returns [String out]
	: 'switch' '(' expression ')' '{' ( case_statement |
default_statement | statement )* '}'
	;

It was a switch statement rule. I now have a new switch statement rule
which better fits my needs.
"toBeRemoved" doesn't show up anywhere in the grammar except in this line.

2009/3/24 Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk>:
> Gabriele Palma wrote:
>> I'm modifying my working grammar. I created a new rule which does
>> something previously done by another rule. I renamed the old rule and
>> it is now unreferenced in the whole grammar, while old reference now
>> go to the new rule. Everything seems fine, the grammar recognizes my
>> test inputs.
>>
>> But if i try to completely remove the old rule the grammar breaks and
>> no longer recognizes my working input test.
>>
>> Current file -> successfully generate code -> test -> everything ok
>> Current file -> remove unreferenced rule -> succesfully generate code
>> -> test -> grammar does not recognizes my input
>>
>> I double checked and the rule is not referenced in any way, if i do a
>> text search on the rule name the only instance found is in the rule
>> definition.
>>
>> I'm failing at undestanding the effect that an unreferenced rule has
>> on the generated grammar.
>>
>> Am I missing anything?
>
> Is it a lexer rule, or a parser rule?
>
> Sam
>

From oliver.zeigermann at gmail.com  Tue Mar 24 05:56:49 2009
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 24 Mar 2009 13:56:49 +0100
Subject: [antlr-interest] gUnit-Questions
Message-ID: <9da4f4520903240556t3e2b0850l3582f31f46c87400@mail.gmail.com>

Hi folks!

I have read the descritption for gUnit at

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

and really like it.

I was wondering about some features that would be really useful for me

1.) Compare the output of two different input statements: Useful to
check if two input statements translate to the same output or not.
2.) Options/Extension points to decide how to compare input to output,
e.g. literally, ignoring whitespace, ignoring case, using regexp etc.
3.) When input and output differ give the exact position where they
differ and also display it by printing both input and output in
separate lines indicating the position
4.) Additional information on how an input should fail: e.g. Type of
Exception and even message.

If something like that already available? Would it be useful to others too?

-Oliver

From jimi at temporal-wave.com  Tue Mar 24 09:42:36 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Mar 2009 09:42:36 -0700
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define possibly
 incorrect
In-Reply-To: <1237885492.6297.3.camel@cartman>
References: <1237819958.6293.7.camel@cartman>	
	<49C7ABF8.3010507@temporal-wave.com>
	<1237885492.6297.3.camel@cartman>
Message-ID: <49C90D7C.6060707@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090324/0acbe814/attachment.html 

From jimi at temporal-wave.com  Tue Mar 24 09:45:31 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Mar 2009 09:45:31 -0700
Subject: [antlr-interest] Maven source and javadoc packages for
	antlr-runtime
In-Reply-To: <6cd966490903240312v53073240m82af5a9f702d2b98@mail.gmail.com>
References: <6cd966490903240312v53073240m82af5a9f702d2b98@mail.gmail.com>
Message-ID: <49C90E2B.104@temporal-wave.com>

J?rg Werner wrote:
> Hi all,
>
> is there be a chance to create in addition to the antlr-runtime maven 
> package the corresponding source and javadoc packages?
They are already created and should be in the central repository. 
However, perhaps they did not make it in this release as now I think 
about it, I probably missed documenting that step in the release 
process. I will release them shortly if they are not already there.

Jim


From jimi at temporal-wave.com  Tue Mar 24 10:09:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Mar 2009 10:09:53 -0700
Subject: [antlr-interest] Maven source and javadoc packages for
	antlr-runtime
In-Reply-To: <6cd966490903240312v53073240m82af5a9f702d2b98@mail.gmail.com>
References: <6cd966490903240312v53073240m82af5a9f702d2b98@mail.gmail.com>
Message-ID: <49C913E1.4020602@temporal-wave.com>

J?rg Werner wrote:
> Hi all,
>
> is there be a chance to create in addition to the antlr-runtime maven 
> package the corresponding source and javadoc packages? Would be 
> convenient for debugging, because maven can automatically download 
> them and the m2 eclipse plugin automatically integrates them in 
> eclipse. This allows to get context sensitive information in eclipse 
> and is  helpful for debugging.
Sources are now deployed to the ANTLR repository, but it can be up to 4 
hours before Maven central will sync, so give it a while :-)

Jim

From jimi at temporal-wave.com  Tue Mar 24 10:25:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Mar 2009 10:25:12 -0700
Subject: [antlr-interest] Curious behaviour: unused rule has
	unknown	effects
In-Reply-To: <8c8eb5fb0903240556w202bedfate2912a507f92124b@mail.gmail.com>
References: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com>	<49C8CCFE.6080802@lancaster.ac.uk>
	<8c8eb5fb0903240556w202bedfate2912a507f92124b@mail.gmail.com>
Message-ID: <49C91778.7090709@temporal-wave.com>

Gabriele Palma wrote:
> It is a parser rule.
>
> toBeRemoved returns [String out]
> 	: 'switch' '(' expression ')' '{' ( case_statement |
> default_statement | statement )* '}'
> 	;
>
> It was a switch statement rule. I now have a new switch statement rule
> which better fits my needs.
> "toBeRemoved" doesn't show up anywhere in the grammar except in this line.
>   
Yes, but you are using literal 'strings' in the rule and this defines 
lexer token rules and without eh whole grammar, who knows what is going 
on? This is one of the reasons that I advise everyone, at least when 
starting out, not to use literals in the parser rules; unless you 
completely understand what is going on, then you get in to all sorts of 
trouble. Take the literals out of your parser and put them in the lexer, 
then you will at least be able to judge the parser rules as they are.

Jim

From antlr at jazillian.com  Tue Mar 24 10:32:15 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 24 Mar 2009 13:32:15 -0400
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <86403CA0939415448BCCB83855EFE09AA67BD7@Bloodymary.ironwillgames.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk><B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>	<49C80E50.8040500@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67BD7@Bloodymary.ironwillgames.com>
Message-ID: <49C9191F.2000408@jazillian.com>

Can someone tell me where to find this ANTLR.g3 file in the C# port?

Thanks,
Andy

Sam Harwell wrote:
> The ANTLR.g3 grammar used in the C# port of the Tool is complete and
> working and preserves doc comments. :)
> 
> Sam

From tapetedepadaria at gmail.com  Tue Mar 24 11:27:23 2009
From: tapetedepadaria at gmail.com (Rodrigo C. L.)
Date: Tue, 24 Mar 2009 15:27:23 -0300
Subject: [antlr-interest] Curious behaviour: unused rule has unknown
	effects
In-Reply-To: <49C91778.7090709@temporal-wave.com>
References: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com> 
	<49C8CCFE.6080802@lancaster.ac.uk>
	<8c8eb5fb0903240556w202bedfate2912a507f92124b@mail.gmail.com> 
	<49C91778.7090709@temporal-wave.com>
Message-ID: <da9e26b90903241127t2538da62la727025f072e0633@mail.gmail.com>

Defining the literals as tokens is the same as putting them in the lexer?

 -- Rodrigo C. Lopes
 -- Tamb?m em r.cerqueira.lopes at gmail.com





2009/3/24 Jim Idle <jimi at temporal-wave.com>:
> Gabriele Palma wrote:
>> It is a parser rule.
>>
>> toBeRemoved returns [String out]
>> ? ? ? : 'switch' '(' expression ')' '{' ( case_statement |
>> default_statement | statement )* '}'
>> ? ? ? ;
>>
>> It was a switch statement rule. I now have a new switch statement rule
>> which better fits my needs.
>> "toBeRemoved" doesn't show up anywhere in the grammar except in this line.
>>
> Yes, but you are using literal 'strings' in the rule and this defines
> lexer token rules and without eh whole grammar, who knows what is going
> on? This is one of the reasons that I advise everyone, at least when
> starting out, not to use literals in the parser rules; unless you
> completely understand what is going on, then you get in to all sorts of
> trouble. Take the literals out of your parser and put them in the lexer,
> then you will at least be able to judge the parser rules as they are.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From antlr at mirality.co.nz  Tue Mar 24 11:48:27 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 25 Mar 2009 07:48:27 +1300
Subject: [antlr-interest] Curious behaviour: unused rule has unknown
 effects
In-Reply-To: <da9e26b90903241127t2538da62la727025f072e0633@mail.gmail.co
 m>
References: <8c8eb5fb0903240501p334d08ect2eb6afa9e2626df1@mail.gmail.com>
	<49C8CCFE.6080802@lancaster.ac.uk>
	<8c8eb5fb0903240556w202bedfate2912a507f92124b@mail.gmail.com>
	<49C91778.7090709@temporal-wave.com>
	<da9e26b90903241127t2538da62la727025f072e0633@mail.gmail.com>
Message-ID: <20090324184855.8DC7734183AB@www.antlr.org>

At 07:27 25/03/2009, Rodrigo C. L. wrote:
 >Defining the literals as tokens is the same as putting them in 
the
 >lexer?

Not quite; if you put them in the tokens block then ANTLR issues 
warnings (for no readily apparent reason).

The best thing to do is to just make them proper lexer rules; ie. 
convert this:

toBeRemoved returns [String out]
       : 'switch' '(' expression ')' '{' ( case_statement |
default_statement | statement )* '}'
       ;

into this:

SWITCH: 'switch';
LPAREN: '(';
RPAREN: ')';
LBRACE: '{';
RBRACE: '}';

toBeRemoved returns [String out]
       : SWITCH LPAREN expression RPAREN LBRACE ( case_statement |
default_statement | statement )* RBRACE
       ;

The above is effectively what ANTLR will be doing behind the 
scenes when you use literals in parser rules anyway, but doing it 
explicitly means (a) you get to specify the token name (which 
improves readability, since the default names are T53 etc) and (b) 
you can group all the lexer rules together, which aids in 
readability, discovery, and resolution of ambiguity.


From yimm8369 at hotmail.com  Tue Mar 24 16:27:07 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 25 Mar 2009 07:27:07 +0800
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
Message-ID: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>


Hi again,
 
TokenRewriteStream can only replace the declared  token, not the rule. right?
 
for example,If I want to replace VAR, it works fine, But if I want to replace variableDeclaration , the error said $a can not be resolved.
 
variableStatement
    :    m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic  {tokens.replace($m, "something else");}                               
    ;
 
 
variableStatement
    :    VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic  {tokens.replace($m, "something else");}                               
    ;
 
So how can I replace variableDeclaration ?
 
Thanks in advance.
 
Annie
_________________________________________________________________
Live Search???????????????
http://www.live.com/?scope=video
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/d144b6ea/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 19:52:04 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 25 Mar 2009 08:22:04 +0530
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
Message-ID: <49C99C54.6070504@s7software.com>

This will work:

variableStatement
: VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
{tokens.replace($m.start, $m.end, "something else");} &n bsp;
;

$m will be of type variableDeclaration_return which will be subclass of
'ParserRuleReturnScope'. $m is not Token.


- Indhu


YINGAnnie wrote:
> Hi again,
>
> TokenRewriteStream can only replace the declared token, not the rule.
> right?
>
> for example,If I want to replace VAR, it works fine, But if I want to
> replace variableDeclaration , the error said $a can not be resolved.
>
> variableStatement
> : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
> {tokens.replace($m, "something else");}
> ;
>
>
> variableStatement
> : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> {tokens.replace($m, "something else");} &n bsp;
> ;
>
> So how can I replace variableDeclaration ?
>
> Thanks in advance.
>
> Annie
> ------------------------------------------------------------------------
> ??????????MSN??? ????? <http://cn.msn.com/>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From yimm8369 at hotmail.com  Tue Mar 24 20:08:34 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 25 Mar 2009 11:08:34 +0800
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <49C99C54.6070504@s7software.com>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
Message-ID: <BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>


 

 

Well, I tried it ,but this time the error is : java.lang.NullPointerException.

 

Did I do something wrong?

 

Thanks,

 

 

Annie

 


 


 
> Date: Wed, 25 Mar 2009 08:22:04 +0530
> From: indhu.b at s7software.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?
> 
> This will work:
> 
> variableStatement
> : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> {tokens.replace($m.start, $m.end, "something else");} &n bsp;
> ;
> 
> $m will be of type variableDeclaration_return which will be subclass of
> 'ParserRuleReturnScope'. $m is not Token.
> 
> 
> - Indhu
> 
> 
> YINGAnnie wrote:
> > Hi again,
> >
> > TokenRewriteStream can only replace the declared token, not the rule.
> > right?
> >
> > for example,If I want to replace VAR, it works fine, But if I want to
> > replace variableDeclaration , the error said $a can not be resolved.
> >
> > variableStatement
> > : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
> > {tokens.replace($m, "something else");}
> > ;
> >
> >
> > variableStatement
> > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> > {tokens.replace($m, "something else");} &n bsp;
> > ;
> >
> > So how can I replace variableDeclaration ?
> >
> > Thanks in advance.
> >
> > Annie
> > ------------------------------------------------------------------------
> > ??????????MSN??? ????? <http://cn.msn.com/>
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > 
> 

_________________________________________________________________
?Windows Live ?????????? MSN?
http://im.live.cn/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/e51477d6/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 20:10:46 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 25 Mar 2009 08:40:46 +0530
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
	<BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
Message-ID: <49C9A0B6.6000004@s7software.com>

There was a typo in my mail. It is $m.stop and not $m.end. Sorry :-)

And here is the documentation:
http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_parser_rule_return_scope.html

:-)

YINGAnnie wrote:
>
>
> Well, I tried it,but this timethe error is :
> java.lang.NullPointerException.
>
> Did I do something wrong?
>
> Thanks,
>
>
> Annie
>
>
>
>
>
> > Date: Wed, 25 Mar 2009 08:22:04 +0530
> > From: indhu.b at s7software.com
> > To: yimm8369 at hotmail.com
> > CC: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to
> rules?
> >
> > This will work:
> >
> > variableStatement
> > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> > {tokens.replace($m.start, $m.end, "something else");} &n bsp;
> > ;
> >
> > $m will be of type variableDeclaration_return which will be subclass of
> > 'ParserRuleReturnScope'. $m is not Token.
> >
> >
> > - Indhu
> >
> >
> > YINGAnnie wrote:
> > > Hi again,
> > >
> > > TokenRewriteStream can only replace the declared token, not the rule.
> > > right?
> > >
> > > for example,If I want to replace VAR, it works fine, But if I want to
> > > replace variableDeclaration , the error said $a can no t be resolved.
> > >
> > > variableStatement
> > > : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
> > > {tokens.replace($m, "something else");}
> > > ;
> > >
> > >
> > > variableStatement
> > > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> > > {tokens.replace($m, "something else");} &n bsp;
> > > ;
> > >
> > > So how can I replace variableDeclaration ?
> > >
> > > Thanks in advance.
> > >
> > > Annie
> > >
> ------------------------------------------------------------------------
> > > ??????????MSN??? ????? <http://cn.msn.com/>
> > >
> ------------------------------------------------------------------------
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> > >
> >
>
> ------------------------------------------------------------------------
> ????????????????????? ?????
> <http://ditu.live.com/default.aspx?v=2&form=MICHAJ&cp=qcbgzzsz1gzz&style=r&lvl=4&tilt=-90&dir=0&alt=-1000&phx=0&phy=0&phscl=1&trfc=1&encType=1>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/009694e5/attachment.html 

From yimm8369 at hotmail.com  Tue Mar 24 20:21:20 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 25 Mar 2009 11:21:20 +0800
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <49C9A0B6.6000004@s7software.com>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
	<BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
	<49C9A0B6.6000004@s7software.com>
Message-ID: <BAY122-W18DCD9F57B3C70D62C5D0BDB900@phx.gbl>


 

 

Sorry ,I forgot to mention, I corrected $m.end.

 

Now, I am using {tokens.replace($m.start, $m.stop, "something else");}

 

but I got java.lang.NullPointerException  error.

 

It seems $m is null.

 

 

Annie

 


 


Date: Wed, 25 Mar 2009 08:40:46 +0530
From: indhu.b at s7software.com
To: yimm8369 at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?

There was a typo in my mail. It is $m.stop and not $m.end. Sorry :-)

And here is the documentation: http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_parser_rule_return_scope.html

:-)

YINGAnnie wrote: 


 
 
Well, I tried it ,but this time the error is : java.lang.NullPointerException.
 
Did I do something wrong?
 
Thanks,
 
 
Annie
 

 

 
> Date: Wed, 25 Mar 2009 08:22:04 +0530
> From: indhu.b at s7software.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?
> 
> This will work:
> 
> variableStatement
> : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> {tokens.replace($m.start, $m.end, "something else");} &n bsp;
> ;
> 
> $m will be of type variableDeclaration_return which will be subclass of
> 'ParserRuleReturnScope'. $m is not Token.
> 
> 
> - Indhu
> 
> 
> YINGAnnie wrote:
> > Hi again,
> >
> > TokenRewriteStream can only replace the declared token, not the rule.
> > right?
> >
> > for example,If I want to replace VAR, it works fine, But if I want to
> > replace variableDeclaration , the error said $a can no t be resolved.
> >
> > variableStatement
> > : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
> > {tokens.replace($m, "something else");}
> > ;
> >
> >
> > variableStatement
> > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> > {tokens.replace($m, "something else");} &n bsp;
> > ;
> >
> > So how can I replace variableDeclaration ?
> >
> > Thanks in advance.
> >
> > Annie
> > ------------------------------------------------------------------------
> > ??????????MSN??? ????? <http://cn.msn.com/>
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr- interest/your-email-address
> > 
> 



????????????????????? ?????

_________________________________________________________________
Live Search???????????????
http://www.live.com/?scope=video
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/d291bced/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 20:23:17 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 25 Mar 2009 08:53:17 +0530
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <BAY122-W18DCD9F57B3C70D62C5D0BDB900@phx.gbl>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
	<BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
	<49C9A0B6.6000004@s7software.com>
	<BAY122-W18DCD9F57B3C70D62C5D0BDB900@phx.gbl>
Message-ID: <49C9A3A5.6080507@s7software.com>

Maybe 'm=variableDeclaration' didn't match anything in the input...


YINGAnnie wrote:
>
>
> Sorry ,Iforgot to mention, Icorrected $m.end.
>
> Now, I am using {tokens.replace($m.start, $m.stop, "something else");}
>
> but I got java.lang.NullPointerException error.
>
> It seems $m is null.
>
>
> Annie
>
>
>
> ------------------------------------------------------------------------
> Date: Wed, 25 Mar 2009 08:40:46 +0530
> From: indhu.b at s7software.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?
>
> There was a typo in my mail. It is $m.stop and not $m.end. Sorry :-)
>
> And here is the documentation:
> http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_parser_rule_return_scope.html
>
> :-)
>
> YINGAnnie wrote:
>
>
>
>     Well, I tried it,but this timethe error is :
>     java.lang.NullPointerException.
>
>     Did I do something wrong?
>
>     Thanks,
>
>
>     Annie
>
>
>
>
>
>     > Date: Wed, 25 Mar 2009 08:22:04 +0530
>     > From: indhu.b at s7software.com <mailto:indhu.b at s7software.com>
>     > To: yimm8369 at hotmail.com <mailto:yimm8369 at hotmail.com>
>     > CC: antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>     > Subject: Re: [antlr-interest] Can TokenRewriteStream be applied
>     to rules?
>     >
>     > This will work:
>     >
>     > variableStatement
>     > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
>     > {tokens.replace($m.start, $m.end, "something else");} &n bsp;
>     > ;
>     >
>     > $m will be of type variableDeclaration_ret urn which will be
>     subclass of
>     > 'ParserRuleReturnScope'. $m is not Token.
>     >
>     >
>     > - Indhu
>     >
>     >
>     > YINGAnnie wrote:
>     > > Hi again,
>     > >
>     > > TokenRewriteStream can only replace the declared token, not
>     the rule.
>     > > right?
>     > >
>     > > for example,If I want to replace VAR, it works fine, But if I
>     want to
>     > > replace variableDeclaration , the error said $a can no t be
>     resolved.
>     > >
>     > > variableStatement
>     > > : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
>     > > {tokens.replace($m, "something else");}
>     > > ;
>     > >
>     > >
>     > > variableStatement
>     > > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
>     > > {tokens.replace($m, "something else");} &n bsp;
>     > > ;
>     > >
>     > > So how can I replace variableDeclaration ?
>     > >
>     > > Thanks in a dvance.
>     > >
>     > > Annie
>     > >
>     ------------------------------------------------------------------------
>     > > ??????????MSN??? ????? <http://cn.msn.com/>
>     > >
>     ------------------------------------------------------------------------
>     > >
>     > >
>     > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>     interest/your-email-address
>     > >
>     >
>
>     ------------------------------------------------------------------------
>     ????????????????????? ?????
>     <http://ditu.live.com/default.aspx?v=2&form=MICHAJ&cp=qcbgzzsz1gzz&style=r&lvl=4&tilt=-90&dir=0&alt=-1000&phx=0&phy=0&phscl=1&trfc=1&encType=1>
>
>
>
> ------------------------------------------------------------------------
> ??????????MSN??? ????? <http://cn.msn.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/6b93e161/attachment.html 

From yimm8369 at hotmail.com  Tue Mar 24 20:37:29 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 25 Mar 2009 11:37:29 +0800
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <49C9A3A5.6080507@s7software.com>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
	<BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
	<49C9A0B6.6000004@s7software.com>
	<BAY122-W18DCD9F57B3C70D62C5D0BDB900@phx.gbl>
	<49C9A3A5.6080507@s7software.com>
Message-ID: <BAY122-W2B1E4B2BD967956D86E40DB900@phx.gbl>


 

It is not null.

 

I use the following:

 

 

variableStatement
    :     VAR? m=variableDeclaration ( COMMA variableDeclaration )* semic    {System.out.print("Start"+$m.start+"stop"+$m.stop);tokens.replace($m.start, $m.stop, "something else");}  

 ;

 

And the input is:

 

var int:a=2;

 

Then I got the output:

 

Start[@68,219:221='int',<250>,8:12]     stop[@72,225:225='2',<248>,8:18]

 

That means variableDeclaration  match  int:a=2. However, the java.lang.NullPointerException   is still there.

 

 

Here is the error line in the parser file:

 

 if ( state.backtracking==0 ) {
              System.out.print("Start"+(m!=null?((Token)m.start):null)+"stop"+(m!=null?((Token)m.stop):null));tokens.replace((m!=null?((Token)m.start):null), (m!=null?((Token)m.stop):null), "something else");
            }

 

 

I really dont know why?

 

Thanks,

 

 

Annie
 


Date: Wed, 25 Mar 2009 08:53:17 +0530
From: indhu.b at s7software.com
To: yimm8369 at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?

Maybe 'm=variableDeclaration' didn't match anything in the input...


YINGAnnie wrote: 


 
 
Sorry ,I forgot to mention, I corrected $m.end.
 
Now, I am using {tokens.replace($m.start, $m.stop, "something else");}
 
but I got java.lang.NullPointerException  error.
 
It seems $m is null.
 
 
Annie
 

 


Date: Wed, 25 Mar 2009 08:40:46 +0530
From: indhu.b at s7software.com
To: yimm8369 at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?

There was a typo in my mail. It is $m.stop and not $m.end. Sorry :-)

And here is the documentation: http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_parser_rule_return_scope.html

:-)

YINGAnnie wrote: 


 
 
Well, I tried it ,but this time the error is : java.lang.NullPointerException.
 
Did I do something wrong?
 
Thanks,
 
 
Annie
 

 

 
> Date: Wed, 25 Mar 2009 08:22:04 +0530
> From: indhu.b at s7software.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?
> 
> This will work:
> 
> variableStatement
> : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> {tokens.replace($m.start, $m.end, "something else");} &n bsp;
> ;
> 
> $m will be of type variableDeclaration_ret urn which will be subclass of
> 'ParserRuleReturnScope'. $m is not Token.
> 
> 
> - Indhu
> 
> 
> YINGAnnie wrote:
> > Hi again,
> >
> > TokenRewriteStream can only replace the declared token, not the rule.
> > right?
> >
> > for example,If I want to replace VAR, it works fine, But if I want to
> > replace variableDeclaration , the error said $a can no t be resolved.
> >
> > variableStatement
> > : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
> > {tokens.replace($m, "something else");}
> > ;
> >
> >
> > variableStatement
> > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> > {tokens.replace($m, "something else");} &n bsp;
> > ;
> >
> > So how can I replace variableDeclaration ?
> >
> > Thanks in a dvance.
> >
> > Annie
> > ------------------------------------------------------------------------
> > ??????????MSN??? ????? <http://cn.msn.com/>
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr- interest/your-email-address
> > 
> 



????????????????????? ?????



??????????MSN??? ?????

_________________________________________________________________
Live Search???????????????
http://www.live.com/?scope=video
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/249b6fce/attachment.html 

From indhu.b at s7software.com  Tue Mar 24 20:46:00 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Wed, 25 Mar 2009 09:16:00 +0530
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <BAY122-W2B1E4B2BD967956D86E40DB900@phx.gbl>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
	<BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
	<49C9A0B6.6000004@s7software.com>
	<BAY122-W18DCD9F57B3C70D62C5D0BDB900@phx.gbl>
	<49C9A3A5.6080507@s7software.com>
	<BAY122-W2B1E4B2BD967956D86E40DB900@phx.gbl>
Message-ID: <49C9A8F8.3090301@s7software.com>

Are you sure 'tokens' is the TokenRewriteStream? Generally in the
generated code the member variable 'input' is the token stream. Maybe
you have to write 'input.replace($m.start, $m.stop, "something else");'
unless you have done something to change the name of the token stream.

Also note that 'input' will be of type Interface TokenStream and it wont
be of type TokenRewriteStream. So you might have to say '
((TokenRewriteStream)input).replace(....)'. Else in the member variable
section, you can write 'TokenRewriteStream rewriteStream =
(TokenRewriteStream)input' and then use 'rewriteStream.replace(...)' in
your code.

- Indhu


YINGAnnie wrote:
>
> It is notnull.
>
> I use the following:
>
>
> variableStatement
> : VAR? m=variableDeclaration ( COMMA variableDeclaration )* semic
> {System.out.print("Start"+$m.start+"stop"+$m.stop);tokens.replace($m.start,
> $m.stop, "something else");}
> ;
>
> And the input is:
>
> var int:a=2;
>
> Then I got the output:
>
> Start[@68,219:221='int',<250>,8:12] stop[@72,225:225='2',<248>,8:18]
>
> That means variableDeclarationmatch int:a=2. However, the
> java.lang.NullPointerException is still there.
>
>
> Here is the error line in the parser file:
>
> if ( state.backtracking==0 ) {
> System.out.print("Start"+(m!=null?((Token)m.start):null)+"stop"+(m!=null?((Token)m.stop):null));tokens.replace((m!=null?((Token)m.start):null),
> (m!=null?((Token)m.stop):null), "something else");
> }
>
>
> I really dont know why?
>
> Thanks,
>
>
> Annie
>
> ------------------------------------------------------------------------
> Date: Wed, 25 Mar 2009 08:53:17 +0530
> From: indhu.b at s7software.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?
>
> Maybe 'm=variableDeclaration' didn't match anything in the input...
>
>
> YINGAnnie wrote:
>
>
>
>     Sorry ,Iforgot to mention, Icorrected $m.end.
>
>     Now, I am using {tokens.replace($m.start, $m.stop, "something else");}
>
>     but I got java.lang.NullPointerException error.
>
>     It seems $m is null.
>
>
>     Annie
>
>
>
>     ------------------------------------------------------------------------
>     Date: Wed, 25 Mar 2009 08:40:46 +0530
>     From: indhu.b at s7software.com <mailto:indhu.b at s7software.com>
>     To: yimm8369 at hotmail.com <mailto:yimm8369 at hotmail.com>
>     CC: antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>     Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to
>     rules?
>
>     There was a typo in my mail. It is $m.stop and not $m.end. Sorry :-)
>
>     And here is the documentation:
>     http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_parser_rule_return_scope.html
>
>     :-)
>
>     YINGAnnie wrote:
>
>
>
>         Well, I tried it,but this timethe error is :
>         java.lang.NullPointerException.
>
>         Did I do something wrong?
>
>         Thanks,
>
>
>         Annie
>
>
>
>
>
>         > Date: Wed, 25 Mar 2009 08:22:04 +0530
>         > From: indhu.b at s7software.com <mailto:indhu.b at s7software.com>
>         > To: yimm8369 at hotmail.com <mailto:yimm8369 at hotmail.com>
>         > CC: antlr-interest at antlr.org <mailto:antlr-interest at antlr.org>
>         > Subject: Re: [antlr-interest] Can TokenRewriteStream be
>         applied to rules?
>         >
>         > This will work:
>         >
>         > variableStatement
>         > : VAR? variableDeclaration ( COMMA m=variableDeclaration )*
>         semic
>         > {tokens.replace($m.start, $m.end, "something else");} &n bsp;
>         > ;
>         >
>         > $m will be of type variableDeclar ation_ret urn which will
>         be subclass of
>         > 'ParserRuleReturnScope'. $m is not Token.
>         >
>         >
>         > - Indhu
>         >
>         >
>         > YINGAnnie wrote:
>         > > Hi again,
>         > >
>         > > TokenRewriteStream can only replace the declared token,
>         not the rule.
>         > > right?
>         > >
>         > > for example,If I want to replace VAR, it works fine, But
>         if I want to
>         > > replace variableDeclaration , the error said $a can no t
>         be resolved.
>         > >
>         > > variableStatement
>         > > : m= VAR? variableDeclaration ( COMMA variableDeclaration
>         )* semic
>         > > {tokens.replace($m, "something else");}
>         > > ;
>         > >
>         > >
>         > > variableStatement
>         > > : VAR? variableDeclaration ( COMMA m=variableDeclaration
>         )* semic
>         > > {tokens.replace($m, "something else");} &n bsp;
>         > > ;
>         > >
>         > > So how can I replace variableDeclaration ?
>         > >
>         > > T hanks in a dvance.
>         > >
>         > > Annie
>         > >
>         ------------------------------------------------------------------------
>         > > ??????????MSN??? ????? <http://cn.msn.com/>
>         > >
>         ------------------------------------------------------------------------
>         > >
>         > >
>         > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>         interest/your-email-address
>         > >
>         >
>
>         ------------------------------------------------------------------------
>         ????????????????????? ?????
>         <http://ditu.live.com/default.aspx?v=2&form=MICHAJ&cp=qcbgzzsz1gzz&style=r&lvl=4&tilt=-90&dir=0&alt=-1000&phx=0&phy=0&phscl=1&trfc=1&encType=1>
>
>
>
>     ------------------------------------------------------------------------
>     ??????????MSN??? ????? <http://cn.msn.com/>
>
>
>
> ------------------------------------------------------------------------
> ??????????MSN??? ????? <http://cn.msn.com/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/b251e4df/attachment.html 

From yimm8369 at hotmail.com  Tue Mar 24 20:55:01 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 25 Mar 2009 11:55:01 +0800
Subject: [antlr-interest] Can TokenRewriteStream be applied to rules?
In-Reply-To: <49C9A8F8.3090301@s7software.com>
References: <BAY122-W352EB0DC149D92BA53F209DB930@phx.gbl>
	<49C99C54.6070504@s7software.com>
	<BAY122-W26E459CF5204477B37F7BBDB900@phx.gbl>
	<49C9A0B6.6000004@s7software.com>
	<BAY122-W18DCD9F57B3C70D62C5D0BDB900@phx.gbl>
	<49C9A3A5.6080507@s7software.com>
	<BAY122-W2B1E4B2BD967956D86E40DB900@phx.gbl>
	<49C9A8F8.3090301@s7software.com>
Message-ID: <BAY122-W40101168832F3BDFCCC2C3DB900@phx.gbl>


 

 

Finally, it works.

 

Thanks a million for your explaination and patience!!!!!!

 

 

Annie
 


Date: Wed, 25 Mar 2009 09:16:00 +0530
From: indhu.b at s7software.com
To: yimm8369 at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?

Are you sure 'tokens' is the TokenRewriteStream? Generally in the generated code the member variable 'input' is the token stream. Maybe you have to write 'input.replace($m.start, $m.stop, "something else");' unless you have done something to change the name of the token stream.

Also note that 'input' will be of type Interface TokenStream and it wont be of type TokenRewriteStream. So you might have to say ' ((TokenRewriteStream)input).replace(....)'. Else in the member variable section, you can write 'TokenRewriteStream rewriteStream = (TokenRewriteStream)input' and then use 'rewriteStream.replace(...)' in your code.

- Indhu


YINGAnnie wrote: 


 
It is not null.
 
I use the following:
 
 
variableStatement
    :     VAR? m=variableDeclaration ( COMMA variableDeclaration )* semic    {System.out.print("Start"+$m.start+"stop"+$m.stop);tokens.replace($m.start, $m.stop, "something else");}  
 ;
 
And the input is:
 
var int:a=2;
 
Then I got the output:
 
Start[@68,219:221='int',<250>,8:12]     stop[@72,225:225='2',<248>,8:18]
 
That means variableDeclaration  match  int:a=2. However, the java.lang.NullPointerException   is still there.
 
 
Here is the error line in the parser file:
 
 if ( state.backtracking==0 ) {
              System.out.print("Start"+(m!=null?((Token)m.start):null)+"stop"+(m!=null?((Token)m.stop):null));tokens.replace((m!=null?((Token)m.start):null), (m!=null?((Token)m.stop):null), "something else");
            }
 
 
I really dont know why?
 
Thanks,
 
 
Annie
 


Date: Wed, 25 Mar 2009 08:53:17 +0530
From: indhu.b at s7software.com
To: yimm8369 at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?

Maybe 'm=variableDeclaration' didn't match anything in the input...


YINGAnnie wrote: 


 
 
Sorry ,I forgot to mention, I corrected $m.end.
 
Now, I am using {tokens.replace($m.start, $m.stop, "something else");}
 
but I got java.lang.NullPointerException  error.
 
It seems $m is null.
 
 
Annie
 

 


Date: Wed, 25 Mar 2009 08:40:46 +0530
From: indhu.b at s7software.com
To: yimm8369 at hotmail.com
CC: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?

There was a typo in my mail. It is $m.stop and not $m.end. Sorry :-)

And here is the documentation: http://www.antlr.org/api/Java/classorg_1_1antlr_1_1runtime_1_1_parser_rule_return_scope.html

:-)

YINGAnnie wrote: 


 
 
Well, I tried it ,but this time the error is : java.lang.NullPointerException.
 
Did I do something wrong?
 
Thanks,
 
 
Annie
 

 

 
> Date: Wed, 25 Mar 2009 08:22:04 +0530
> From: indhu.b at s7software.com
> To: yimm8369 at hotmail.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can TokenRewriteStream be applied to rules?
> 
> This will work:
> 
> variableStatement
> : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> {tokens.replace($m.start, $m.end, "something else");} &n bsp;
> ;
> 
> $m will be of type variableDeclar ation_ret urn which will be subclass of
> 'ParserRuleReturnScope'. $m is not Token.
> 
> 
> - Indhu
> 
> 
> YINGAnnie wrote:
> > Hi again,
> >
> > TokenRewriteStream can only replace the declared token, not the rule.
> > right?
> >
> > for example,If I want to replace VAR, it works fine, But if I want to
> > replace variableDeclaration , the error said $a can no t be resolved.
> >
> > variableStatement
> > : m= VAR? variableDeclaration ( COMMA variableDeclaration )* semic
> > {tokens.replace($m, "something else");}
> > ;
> >
> >
> > variableStatement
> > : VAR? variableDeclaration ( COMMA m=variableDeclaration )* semic
> > {tokens.replace($m, "something else");} &n bsp;
> > ;
> >
> > So how can I replace variableDeclaration ?
> >
> > T hanks in a dvance.
> >
> > Annie
> > ------------------------------------------------------------------------
> > ??????????MSN??? ????? <http://cn.msn.com/>
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr- interest/your-email-address
> > 
> 



????????????????????? ?????



??????????MSN??? ?????



??????????MSN??? ?????

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/7ce026a9/attachment.html 

From g.r.vansickle at att.net  Tue Mar 24 23:13:44 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Wed, 25 Mar 2009 01:13:44 -0500
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
Message-ID: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>

Hi guys,

It looks like ANTLR 3.1.3 is only accpeting *.g as the grammar's extension,
and silently fails if you have any other extension on your grammar file.
This breaks Jim I.'s recommended distinct extensions per parser type
documented here: http://www.antlr.org/api/C/buildrec.html.

-- 
Gary R. Van Sickle


From sharwell at pixelminegames.com  Tue Mar 24 23:18:27 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 25 Mar 2009 01:18:27 -0500
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
In-Reply-To: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
References: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BFA@Bloodymary.ironwillgames.com>

I use .g3 for all my V3 grammars, including all the ones in the C# port
of the Tool, so I already implemented support for multiple extensions.
You can use similar code to offer flexibility to the allowed extensions.

However, in the particular use in the Tool (filtering after graph
sorting), I believe the file extension is a poor filter. Don't the
command line arguments contain the grammar names you want to process,
and you could filter on that?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gary R. Van
Sickle
Sent: Wednesday, March 25, 2009 1:14 AM
To: 'ANTLR Interest Mailing List'
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions

Hi guys,

It looks like ANTLR 3.1.3 is only accpeting *.g as the grammar's
extension,
and silently fails if you have any other extension on your grammar file.
This breaks Jim I.'s recommended distinct extensions per parser type
documented here: http://www.antlr.org/api/C/buildrec.html.

-- 
Gary R. Van Sickle


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From sven.van.echelpoel at empolis.com  Wed Mar 25 01:16:06 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Wed, 25 Mar 2009 09:16:06 +0100
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define
	possibly	incorrect
In-Reply-To: <49C90D7C.6060707@temporal-wave.com>
References: <1237819958.6293.7.camel@cartman>
	<49C7ABF8.3010507@temporal-wave.com> <1237885492.6297.3.camel@cartman>
	<49C90D7C.6060707@temporal-wave.com>
Message-ID: <1237968966.5842.28.camel@cartman>

[...]
> > >     
> > Well, I'm using it now or I wouldn't have noticed it :-) But maybe I
> > shouldn't and there's a better way of doing it. I'm trying to figure out
> > that the node returned by LT( 1 ) is a valid node (one of the nodes
> > created by my grammar). So I check that the type >=
> > ANTLR3_MIN_TOKEN_TYPE
> > 
> > Would that be correct?
> >   
> Probably not. By definition the token types of the nodes can only be
> of the types you specify in the lexer or the parser, so unless you
> have your own code setting the types then there is no way that you can
> get an token type that isn't defined. What is it that you are trying
> to do?
OK, I'm rewriting an AST and I can't use the plain rewrite rules as I
need some substantial logic to determine which nodes to create. That
decision, for one, depends on the next node. To that end I'm using the
fallback rewrite rule in which I call a function. Something akin to
this:

rewrite_this
   :  ^( node=NEEDS_TO_BE_REWRITTEN b=body )
     -> { createNewNode( $node, $b, LT( 1 ) ) }
   ;


In createNewNode I use $node, $b and the next sibling of $node to
determine what to do. Now I found that when $node has no next sibling,
as in the situation (2) below, LT(1) still returns a node (I would have
expected NULL).

|
+- NEEDS_TO_BE_REWRITTEN   <-- (1)  LT(1) on this one is fine,
|    |                              it returns (2)
|    +- SOME_BODY_NODE
|
+- NEEDS_TO_BE_REWRITTEN   <-- (2) LT(1) on this one also returns a node
     |
     +- SOME_BODY_NODE

The type of this node is 3 or ANTLR3_TOKEN_UP, which, from the comments
in antlr3commontoken.h seems to be an imaginary token that signals the
end of the stream.

At first I only checked that LT(1) returned something non-NULL, but
since a node was returned in (2) I ended up creating the wrong node to
return in the rewrite rule. Then I found out that the type returned was
ANTLR3_TOKEN_UP and that I could use ANTLR3_MIN_TOKEN_TYPE to determine
whether I had a 'valid' node or not.

Should LT(1) return a node in (2), or does that signal that something's
amiss? If the behavior of LT(1) is correct, how can I determine that a
node has no next sibling?

Sven



From emanuele.gesuato at gmail.com  Wed Mar 25 02:04:47 2009
From: emanuele.gesuato at gmail.com (Emanuele Gesuato)
Date: Wed, 25 Mar 2009 10:04:47 +0100
Subject: [antlr-interest] Escaping quotes in a lexer
Message-ID: <32b9ac3d0903250204p14415a63t275f91e2db1f1ff1@mail.gmail.com>

I'm sorry i haven't understad how could i use your code snippet.

I've tried to prefix/append your snippet to my code but antlr refuses
to compile.

I'm very new to antlr :)

Thanks for any help,
Emanuele

Gavin Lambert wrote:
> At 05:56 18/03/2009, Gesuato Emanuele wrote:
>> I would like to use the ' character inside the string something
>> similar to:
>>
>> Invoice.customer='Tom L\'oreal'
>> or (better)
>> Invoice.customer="Tom L'oreal"
>>
>> I've got the String definition for such fields that is the following:
>> STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";
>
> Are you sure that *s can only appear at either end, never in the middle?
>
> Anyway, if you want to permit a \' escape, then you have to explicitly
> spell it out.  Personally, though, I wouldn't try to be even slightly
> restrictive on the contents of the string -- leave that to later
> validation in the parser or external code:
>
> STRING : '\'' ('\\' ('\'')? | ~('\\' | '\''))* '\'';
>

From antlr at mirality.co.nz  Wed Mar 25 02:21:55 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 25 Mar 2009 22:21:55 +1300
Subject: [antlr-interest] Escaping quotes in a lexer
In-Reply-To: <32b9ac3d0903250204p14415a63t275f91e2db1f1ff1@mail.gmail.co
 m>
References: <32b9ac3d0903250204p14415a63t275f91e2db1f1ff1@mail.gmail.com>
Message-ID: <20090325092221.3FFF0341844C@www.antlr.org>

At 22:04 25/03/2009, Emanuele Gesuato wrote:
 >I'm sorry i haven't understad how could i use your code snippet.
 >
 >I've tried to prefix/append your snippet to my code but antlr
 >refuses to compile.
[...]
 >> STRING : '\'' ('\\' ('\'')? | ~('\\' | '\''))* '\'';

The rule I posted was for v3.  If you're using v2 then you'll need 
to use " quotes instead of ' quotes.


From mig.marques at gmail.com  Wed Mar 25 04:38:53 2009
From: mig.marques at gmail.com (Miguel Marques)
Date: Wed, 25 Mar 2009 11:38:53 +0000
Subject: [antlr-interest] Maximum method length in generated parser/lexer
Message-ID: <046482EE-BF70-4E72-AB60-56667E1FD844@gmail.com>

Hello,

I'm trying to use a grammar with python actions with Jython (a python  
interpreter implemented in Java) and I stumbled upon this problem:

java.lang.ClassFormatError: java.lang.ClassFormatError: Invalid method  
Code length 127357 in class file cao/source/sourceParser$py


I know this isn't an ANTLR related problem but I would like to know if  
there is any option on the ANTLR generator to python that I can use so  
that each generated method has a smaller length so
that I can use with with Jython.


Thank you
miguel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/6ea6f514/attachment.html 

From vladimir at ok2home.net  Wed Mar 25 05:39:51 2009
From: vladimir at ok2home.net (Vladimir Konrad)
Date: Wed, 25 Mar 2009 12:39:51 +0000
Subject: [antlr-interest] newbie: are selective lexer rules (depending on
 where in grammar parser is) possible?
Message-ID: <20090325123951.7f09a72b@svr0.h.dearm.co.uk>


Hello!

(complete newbie here)

I have a text file with record based data format in the form:

/begin
time-stamp: 2001-20-20-10-20-15
/begin-uk
<anything-possible-here> = <abything-possible-here>
/end-uk
/begin-com
<anything-possible-here> = <abything-possible-here>
/end-com
/end

(there is '\n' after each line)

The problem I have is that when creating a lexer rule to match:

<anything-possible> = <anything-possible>

this rule matches "other stuff", in the file. Is it possible to switch
on/off the lexer rules depending on where in the grammar the parser
momentarily is? Or do I have to use predicates?

Kind regards,

Vlad

PS: The grammar so far (i know it is still quite broken):

content :       block* EOF ;

block   :       BEGIN TIME_STAMP? record* END ;


/* the following rule is obviously ugly as it passes all content to
parser not lexed */

record  :       BEGIN_RECORD (options {greedy=false;} : . )*
END_RECORD ;

BEGIN_RECORD
        :       BEGIN SUFFIX '\r'? '\n' ;

END_RECORD
        :       (END_RECORD) => END SUFFIX '\r'? '\n' ;

SUFFIX  :       SEPARATOR LETTER+ ;

BEGIN   :       '/begin' ;

END     :       '/end' ;

SEPARATOR
        :       '-' ;

TIME_STAMP
        :       'time-stamp:' ' '+ DIGIT+ (SEPARATOR DIGIT+)+ ;

LETTER  :       'a'..'z' | 'A'..'Z' ;

DIGIT   :       '0'..'9' ;


From vladimir at ok2home.net  Wed Mar 25 06:33:38 2009
From: vladimir at ok2home.net (Vladimir Konrad)
Date: Wed, 25 Mar 2009 13:33:38 +0000
Subject: [antlr-interest] [solved] newbie: are selective lexer rules
 (depending on where in grammar parser is) possible?
In-Reply-To: <20090325123951.7f09a72b@svr0.h.dearm.co.uk>
References: <20090325123951.7f09a72b@svr0.h.dearm.co.uk>
Message-ID: <20090325133338.052374a0@svr0.h.dearm.co.uk>


Hello,

Well, this works. It obviously takes a time to get used to writing
grammars for ANTLR.

Here is the grammar which does much better:

content	:	block* EOF ;

block	:	BEGIN TIME_STAMP? record* END ;

record	:	BEGIN_RECORD assignment+ END_RECORD ;

assignment
	:	(ASSIGNMENT_LHS ASSIGNMENT_RHS) ;

BEGIN_RECORD
	:	BEGIN SUFFIX '\r'? '\n' ;

END_RECORD
	:	(END_RECORD) => END SUFFIX '\r'? '\n' ;

SUFFIX	:	SEPARATOR LETTER+ ;

BEGIN	:	'/begin' ;

END	:	'/end' ;

SEPARATOR
	:	'-' ;

TIME_STAMP
	:	'time-stamp:' ' '+ DIGIT+ (SEPARATOR DIGIT+)+ ;

LETTER	:	'a'..'z' | 'A'..'Z' ;

DIGIT	:	'0'..'9' ;

ASSIGNMENT_RHS
	:	'=' (options {greedy=false;} : . )+ '\r'? '\n' ;

ASSIGNMENT_LHS
	:	(~( '=' | ' ' | '\r' | '\n'))+ ;

Kind regards,

Vlad

From bruce.bauman at andesaservices.com  Wed Mar 25 06:46:10 2009
From: bruce.bauman at andesaservices.com (Bruce Bauman)
Date: Wed, 25 Mar 2009 09:46:10 -0400
Subject: [antlr-interest] implementing C-style #define macros in ANTLR
Message-ID: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3B0@exchange.andesatpa.com>

I am trying to convert 4 million lines of Pascal code from the MetaWare Pascal compiler to Free Pascal. (yes, really). Unfortunately, MetaWare Pascal supports many non-standard extensions to Pascal, including C-style macros. Our existing Pascal code base uses the macro feature extensively..
 
Any suggestions on how to implement this? Any examples in existing ANTL grammars?
 
Thanks.

From pcc482719 at gmail.com  Wed Mar 25 07:01:08 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Wed, 25 Mar 2009 10:01:08 -0400
Subject: [antlr-interest] Ada 2005 grammar?
Message-ID: <Pine.CYG.4.58.0903250957290.1132@WHIRLWIND>


I see that there is an Ada 95 grammar by Oliver Kellog on the ANTLR web
site. I'm wondering if anyone happens to know of an Ada 2005 ANTLR grammar
that would be legally unencumbered enough for me to use in a research
project. I'm considering a few extensions to the Ada language and my goal
is to implement a preprocessor that translates my extended language into
"pure" Ada 2005. Obviously this will be easier if I can start with as much
of the Ada grammar already worked out as possible.

Thanks!

Peter


From sharwell at pixelminegames.com  Wed Mar 25 07:07:46 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 25 Mar 2009 09:07:46 -0500
Subject: [antlr-interest] Maximum method length in generated parser/lexer
In-Reply-To: <046482EE-BF70-4E72-AB60-56667E1FD844@gmail.com>
References: <046482EE-BF70-4E72-AB60-56667E1FD844@gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67BFC@Bloodymary.ironwillgames.com>

Do you know which method is too long? I have a few ideas but it'd narrow
down my thinking about it if I knew that.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Miguel Marques
Sent: Wednesday, March 25, 2009 6:39 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Maximum method length in generated
parser/lexer

 

Hello,

 

I'm trying to use a grammar with python actions with Jython (a python
interpreter implemented in Java) and I stumbled upon this problem:

 

java.lang.ClassFormatError: java.lang.ClassFormatError: Invalid method
Code length 127357 in class file cao/source/sourceParser$py

 

 

I know this isn't an ANTLR related problem but I would like to know if
there is any option on the ANTLR generator to python that I can use so
that each generated method has a smaller length so

that I can use with with Jython.

 

 

Thank you

miguel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/65e9cd7d/attachment.html 

From pcc482719 at gmail.com  Wed Mar 25 07:23:00 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Wed, 25 Mar 2009 10:23:00 -0400
Subject: [antlr-interest] ANTLR website vs Firefox
Message-ID: <Pine.CYG.4.58.0903251012220.2588@WHIRLWIND>


I've noticed that, for some reason, the ANTRL web site seems to misbehave
in my Firefox (v3.0.7). Specifically many of the images don't download (I
get "Waiting for www.antlr.org" indefinitely) and I've also had similar
problems downloading some files. When this occurs, I load the same pages
in IE7 and they work fine. I wouldn't think much about it except that it
is very consistent. I do notice that all the images that cause me problems
are *.gif files.

None of my Firefox plug-ins seem relevant. I tried disabling AdBlock Plus
but that did not help.

Has anyone else observed this effect?

Peter


From antlr at jazillian.com  Wed Mar 25 07:37:40 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 25 Mar 2009 10:37:40 -0400
Subject: [antlr-interest] implementing C-style #define macros in ANTLR
In-Reply-To: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3B0@exchange.andesatpa.com>
References: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3B0@exchange.andesatpa.com>
Message-ID: <49CA41B4.90101@jazillian.com>

Bruce Bauman wrote:
> I am trying to convert 4 million lines of Pascal code from the MetaWare Pascal compiler to Free Pascal. (yes, really). Unfortunately, MetaWare Pascal supports many non-standard extensions to Pascal, including C-style macros. Our existing Pascal code base uses the macro feature extensively..
>  
> Any suggestions on how to implement this? Any examples in existing ANTL grammars?
>  
> Thanks.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

Maybe you could just run the C preprocessor on the pascal file.
IIRC, cpp works on any code, not just C/C++.

Or, you could add the rules below in your grammar to recognize the preprocessor directives.
The problems here are:
a) There's no one "correct" place in your grammar to put the "ppDirective" rule - 
cpp directives can go *anywhere* in your code.
b) Your parser may not be able to parse certain code, even with these rules added.

Andy

Parser rule:
ppDirective
	: PPspace 
	| PPdefine 
	| PPif 
	| PPelse
	| PPelif
	| PPendif
	| PPinclude
	| PPifdef
	| PPifndef
	| PPundef
	| PPpragma
	| PPerror
	| PPline
	;


Lexer rules:


// atripp: added support for preprocessor
protected RestOfPP :
( 
	'\\'! Newline!		// atripp: note the "!"s to delete escaped newlines
	| Comment
	| CharLiteral							// 6/11/04: avoid matching '"' as StringLiteral
	| StringLiteral							// atripp:without this, "//" inside string gets processed
	| {LA(2) != '*' && LA(2) != '/'}? '/'
	| '#'			// "stringification"
	| ~('\r' | '\n' | '/')
)+ 
;

// PPSpaceRule will convert "# define" to "#define", etc.
PPspace		: "#" (Whitespace)+ RestOfPP
;
PPdefine	: "#define" (Whitespace)+ RestOfPP
;
PPif		: "#if" (Whitespace)+ RestOfPP
;
PPelse		: "#else" 
;
PPelif		: "#elif" (Whitespace)+ RestOfPP
;
PPendif		: "#endif"
;
// Note the "*" instead of "+" here, to handle "#include<whatever.h>"
PPinclude	: "#include" (Whitespace)* RestOfPP
;
PPifdef		: "#ifdef" (Whitespace)+ RestOfPP
;
PPifndef	: "#ifndef" (Whitespace)+ RestOfPP
;
PPundef		: "#undef" (Whitespace)+ RestOfPP
;
PPpragma	: "#pragma" RestOfPP
;
PPerror		: "#error" (RestOfPP)?
;
PPline		: "#line" RestOfPP
;



From fdmanana at ieee.org  Wed Mar 25 07:50:33 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Wed, 25 Mar 2009 15:50:33 +0100
Subject: [antlr-interest] grammar checking/compilation fails on Windows but
	not on Linux
Message-ID: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>

Hello,

I am facing here something weird.

I have a grammar which compiles fine under Linux (Ubuntu 64 bits, 4GB ram)
and passes the grammar checking performed by AntlrWorks. (not even a single
warning)

On a Windows XP machine (32bits, 3GB ram) both the compilation and checking
fail.

The grammar file is accessible from
http://code.google.com/p/jsdet/source/browse/trunk/src/grammars/JavaScript.g

Can somebody tell me if passes on his/her AntlrWorks checking feature?

thanks

The error messages from ANTLR are:

compile-grammar:
  [mkdir] Created dir: d:\jsdet\src\jsdet\parsing\antlr
  [java] warning(209): src/grammars/JavaScript.g:127:1: Multiple token rules
can match input such as "'>'": T__80, T__81, T__96, T__98, T__101, T__102
  [java]
  [java] As a result, token(s) T__81,T__96,T__98,T__101,T__102 were disabled
for that input
  [java] warning(209): src/grammars/JavaScript.g:1228:1: Multiple token
rules can match input such as "'.'": T__115, NumericLiteral
  [java]
  [java] As a result, token(s) NumericLiteral were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1685:1: Multiple token
rules can match input such as "'/'": T__75, T__106, RegexpLiteral,
MultilineComment, LineComment
  [java]
  [java] As a result, token(s)
T__106,RegexpLiteral,MultilineComment,LineComment were disabled for that
input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'s'": T__70, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'t'": TRUE, THIS, T__54, T__56, T__110,
Identifier
  [java]
  [java] As a result, token(s) THIS,T__54,T__56,T__110,Identifier were
disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'c'": T__57, T__66, T__71, Identifier
  [java]
  [java] As a result, token(s) T__66,T__71,Identifier were disabled for that
input
  [java] warning(209): src/grammars/JavaScript.g:128:1: Multiple token rules
can match input such as "'+'": POSTFIX_INC, T__77, T__103
  [java]
  [java] As a result, token(s) T__77,T__103 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1689:1: Multiple token
rules can match input such as "'v'": T__64, T__109, Identifier, WhiteSpace
  [java]
  [java] As a result, token(s) T__109,Identifier,WhiteSpace were disabled
for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'r'": T__68, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:125:1: Multiple token rules
can match input such as "'<'": T__79, T__95, T__97, T__100
  [java]
  [java] As a result, token(s) T__95,T__97,T__100 were disabled for that
input
  [java] warning(209): src/grammars/JavaScript.g:118:1: Multiple token rules
can match input such as "'='": T__73, T__91, T__93
  [java]
  [java] As a result, token(s) T__91,T__93 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:130:1: Multiple token rules
can match input such as "'*'": T__74, T__105
  [java]
  [java] As a result, token(s) T__105 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'e'": T__60, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'n'": NULL, T__113, Identifier
  [java]
  [java] As a result, token(s) T__113,Identifier were disabled for that
input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'f'": FALSE, T__49, T__58, T__63, Identifier
  [java]
  [java] As a result, token(s) T__49,T__58,T__63,Identifier were disabled
for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'i'": T__59, T__65, T__99, Identifier
  [java]
  [java] As a result, token(s) T__65,T__99,Identifier were disabled for that
input
  [java] warning(209): src/grammars/JavaScript.g:132:1: Multiple token rules
can match input such as "'%'": T__76, T__107
  [java]
  [java] As a result, token(s) T__107 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:129:1: Multiple token rules
can match input such as "'-'": POSTFIX_DEC, T__78, T__104
  [java]
  [java] As a result, token(s) T__78,T__104 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:113:1: Multiple token rules
can match input such as "'|'": T__84, T__86, T__88
  [java]
  [java] As a result, token(s) T__86,T__88 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'b'": T__67, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'d'": T__61, T__72, T__108, Identifier
  [java]
  [java] As a result, token(s) T__72,T__108,Identifier were disabled for
that input
  [java] warning(209): src/grammars/JavaScript.g:137:1: Multiple token rules
can match input such as "'!'": T__92, T__94, T__112
  [java]
  [java] As a result, token(s) T__94,T__112 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:115:1: Multiple token rules
can match input such as "'&'": T__82, T__87, T__90
  [java]
  [java] As a result, token(s) T__87,T__90 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token
rules can match input such as "'w'": T__62, T__69, Identifier
  [java]
  [java] As a result, token(s) T__69,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:114:1: Multiple token rules
can match input such as "'^'": T__83, T__89
  [java]
  [java] As a result, token(s) T__89 were disabled for that input
  [java] error(208): src/grammars/JavaScript.g:1685:1: The following token
definitions can never be matched because prior tokens match the same input:
THIS,T__49,T__54,T__56,T__58,T__63,T__65,T__66
,T__69,T__71,T__72,T__77,T__78,T__81,T__86,T__87,T__88,T__89,T__90,T__91,T__93,T__94,T__95,T__96,T__97,T__98,T__99,T__100,T__101,T__102,T__103,T__104,T__105,T__106,T__107,T__108,T__109,T__110,T__112,T
__113,RegexpLiteral,MultilineComment,LineComment


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/998e9894/attachment.html 

From jimi at temporal-wave.com  Wed Mar 25 08:16:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 08:16:51 -0700
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
In-Reply-To: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
References: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
Message-ID: <49CA4AE3.9030103@temporal-wave.com>

Gary R. Van Sickle wrote:
> Hi guys,
>
> It looks like ANTLR 3.1.3 is only accpeting *.g as the grammar's extension,
> and silently fails if you have any other extension on your grammar file.
> This breaks Jim I.'s recommended distinct extensions per parser type
> documented here: http://www.antlr.org/api/C/buildrec.html.
>
>   
That is indeed a bug, though since we changed some internals, there is 
no real need not to use .g any more too be honest. I changed the VS 
rules files some time ago. I will take a look at this as it must be an 
oversight (probably on my part when I changed things for the Maven plugin).

Jim

From s.barnett-cormack at lancaster.ac.uk  Wed Mar 25 08:22:50 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 25 Mar 2009 15:22:50 +0000
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define	possibly
 incorrect
In-Reply-To: <1237968966.5842.28.camel@cartman>
References: <1237819958.6293.7.camel@cartman>	<49C7ABF8.3010507@temporal-wave.com>
	<1237885492.6297.3.camel@cartman>	<49C90D7C.6060707@temporal-wave.com>
	<1237968966.5842.28.camel@cartman>
Message-ID: <49CA4C4A.4080201@lancaster.ac.uk>

> rewrite_this
>    :  ^( node=NEEDS_TO_BE_REWRITTEN b=body )
>      -> { createNewNode( $node, $b, LT( 1 ) ) }
>    ;
> 
> 
> In createNewNode I use $node, $b and the next sibling of $node to
> determine what to do. Now I found that when $node has no next sibling,
> as in the situation (2) below, LT(1) still returns a node (I would have
> expected NULL).
> 
> |
> +- NEEDS_TO_BE_REWRITTEN   <-- (1)  LT(1) on this one is fine,
> |    |                              it returns (2)
> |    +- SOME_BODY_NODE
> |
> +- NEEDS_TO_BE_REWRITTEN   <-- (2) LT(1) on this one also returns a node
>      |
>      +- SOME_BODY_NODE
> 
> The type of this node is 3 or ANTLR3_TOKEN_UP, which, from the comments
> in antlr3commontoken.h seems to be an imaginary token that signals the
> end of the stream.
> 
> At first I only checked that LT(1) returned something non-NULL, but
> since a node was returned in (2) I ended up creating the wrong node to
> return in the rewrite rule. Then I found out that the type returned was
> ANTLR3_TOKEN_UP and that I could use ANTLR3_MIN_TOKEN_TYPE to determine
> whether I had a 'valid' node or not.
> 
> Should LT(1) return a node in (2), or does that signal that something's
> amiss? If the behavior of LT(1) is correct, how can I determine that a
> node has no next sibling?

<UP> signals the end of the current "level" of tree. I've not played 
with it much, but I believe the idea is that, in a tree parser, you 
don't need to pay attention to <UP> and <DOWN>. If you've got a true 
single-root tree, there will always be an <UP> just before the EOF. 
However, my understanding is that tree-grammar writers don't have to 
bother with these. LT will still show them, I guess. Wouldn't it be 
better to have the tree parser control the application of the rule by 
only applying it "under" the node above? Or if this *is* at the top 
level, your solution might well work, as you've demonstrated that you 
only get the <UP> when there isn't a next sibling.

-- 
Sam Barnett-Cormack

From ordinarybackstreetmoldywilliam at gmail.com  Wed Mar 25 08:23:48 2009
From: ordinarybackstreetmoldywilliam at gmail.com (william yuan)
Date: Wed, 25 Mar 2009 23:23:48 +0800
Subject: [antlr-interest] a newbie question
Message-ID: <000701c9ad5d$b40d15d0$8e01a8c0@cozilywo123456>

Hi ALL,
I have met another problem when i am tring to understand the antlr tree. 
here is my example
Cozily.g

grammar Cozily;
options {
    output=AST;
    ASTLabelType=CommonTree; // type of $stat.tree ref etc...
}

expr:    INT '+'^ INT
 | INT '-'^ INT
 |  INT '*'^ INT
 |   INT '%'^ INT
    ;
INT :   '0'..'9'+ ;
WS  :   (' '|'\t'|'\n'|'\r')+ {skip();} ;
// END:tokens

and the tree here CozilyTree.g

tree grammar CozilyTree;

options {
    tokenVocab=Expr;
    ASTLabelType=CommonTree;
}
prog:   expr{System.out.println($expr.value);} ;

expr returns [int value]
    :   ^('+' a=INT b=INT) {$value = 
Integer.parseInt($a.text)+Integer.parseInt($a.text);}
    |   ^('-' a=INT b=INT) {$value = 
Integer.parseInt($a.text)-Integer.parseInt($a.text);;}
    |   ^('*' a=INT b=INT) {$value = 
Integer.parseInt($a.text)*Integer.parseInt($a.text);;}
    | ^('%' a=INT b=INT) {$value = 
Integer.parseInt($a.text)/Integer.parseInt($a.text);;}
    ;

// END:expr

I wanna make a calculator, only to get evaluate the expressions like '1+1' 
or '2*3' and of this sort,
but output is here
.....\CozilyTree.g: node from line 1:1 no viable alternative at input '+' 
when i inputted 1+1

so what is the root cause ?

Thanks  in adv .

Best Regards,
Bill Yuan


From jimi at temporal-wave.com  Wed Mar 25 08:32:59 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 08:32:59 -0700
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define possibly
 incorrect
In-Reply-To: <1237968966.5842.28.camel@cartman>
References: <1237819958.6293.7.camel@cartman>	
	<49C7ABF8.3010507@temporal-wave.com>
	<1237885492.6297.3.camel@cartman>	
	<49C90D7C.6060707@temporal-wave.com>
	<1237968966.5842.28.camel@cartman>
Message-ID: <49CA4EAB.4080903@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/9d8b5bf7/attachment.html 

From ordinarybackstreetmoldywilliam at gmail.com  Wed Mar 25 08:38:27 2009
From: ordinarybackstreetmoldywilliam at gmail.com (william yuan)
Date: Wed, 25 Mar 2009 23:38:27 +0800
Subject: [antlr-interest] Fw: a newbie question
Message-ID: <002401c9ad5f$c0034d30$8e01a8c0@cozilywo123456>

i am right here waitting for an answer ,thanks

----- Original Message ----- 
From: "william yuan" <ordinarybackstreetmoldywilliam at gmail.com>
To: <antlr-interest at antlr.org>
Sent: Wednesday, March 25, 2009 11:23 PM
Subject: a newbie question


> Hi ALL,
> I have met another problem when i am tring to understand the antlr tree. 
> here is my example
> Cozily.g
>
> grammar Cozily;
> options {
>    output=AST;
>    ASTLabelType=CommonTree; // type of $stat.tree ref etc...
> }
>
> expr:    INT '+'^ INT
> | INT '-'^ INT
> |  INT '*'^ INT
> |   INT '%'^ INT
>    ;
> INT :   '0'..'9'+ ;
> WS  :   (' '|'\t'|'\n'|'\r')+ {skip();} ;
> // END:tokens
>
> and the tree here CozilyTree.g
>
> tree grammar CozilyTree;
>
> options {
>    tokenVocab=Expr;
>    ASTLabelType=CommonTree;
> }
> prog:   expr{System.out.println($expr.value);} ;
>
> expr returns [int value]
>    :   ^('+' a=INT b=INT) {$value = 
> Integer.parseInt($a.text)+Integer.parseInt($a.text);}
>    |   ^('-' a=INT b=INT) {$value = 
> Integer.parseInt($a.text)-Integer.parseInt($a.text);;}
>    |   ^('*' a=INT b=INT) {$value = 
> Integer.parseInt($a.text)*Integer.parseInt($a.text);;}
>    | ^('%' a=INT b=INT) {$value = 
> Integer.parseInt($a.text)/Integer.parseInt($a.text);;}
>    ;
>
> // END:expr
>
> I wanna make a calculator, only to get evaluate the expressions like '1+1' 
> or '2*3' and of this sort,
> but output is here
> .....\CozilyTree.g: node from line 1:1 no viable alternative at input '+' 
> when i inputted 1+1
>
> so what is the root cause ?
>
> Thanks  in adv .
>
> Best Regards,
> Bill Yuan
> 


From jimi at temporal-wave.com  Wed Mar 25 08:40:49 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 08:40:49 -0700
Subject: [antlr-interest] implementing C-style #define macros in ANTLR
In-Reply-To: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3B0@exchange.andesatpa.com>
References: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3B0@exchange.andesatpa.com>
Message-ID: <49CA5081.9070905@temporal-wave.com>

Bruce Bauman wrote:
> I am trying to convert 4 million lines of Pascal code from the MetaWare Pascal compiler to Free Pascal. (yes, really). Unfortunately, MetaWare Pascal supports many non-standard extensions to Pascal, including C-style macros. Our existing Pascal code base uses the macro feature extensively..
>  
> Any suggestions on how to implement this? Any examples in existing ANTL grammars?
>  
If Free Pascal does not support macros, then you will need to implement 
a macro processor of course, but if the style is very C like then it is 
pretty certain that you can implement this in m4 without too much 
messing around. A full blown macro processor is a bit of a pain to write 
anyway, but with something like ANTLR it can get a bit messy and 
difficult to maintain.


If you mean implement the Pascal Parser, then if there is not already a 
grammar for MetaWare Pascal, you will have to write it of course ;-)

Jim

From s.barnett-cormack at lancaster.ac.uk  Wed Mar 25 08:41:43 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 25 Mar 2009 15:41:43 +0000
Subject: [antlr-interest] grammar checking/compilation fails on Windows
 but	not on Linux
In-Reply-To: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>
References: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>
Message-ID: <49CA50B7.40702@lancaster.ac.uk>

Filipe David Manana wrote:
> Hello,
> 
> I am facing here something weird.
> 
> I have a grammar which compiles fine under Linux (Ubuntu 64 bits, 4GB 
> ram) and passes the grammar checking performed by AntlrWorks. (not even 
> a single warning)
> 
> On a Windows XP machine (32bits, 3GB ram) both the compilation and 
> checking fail.
> 
> The grammar file is accessible from 
> http://code.google.com/p/jsdet/source/browse/trunk/src/grammars/JavaScript.g
> 
> Can somebody tell me if passes on his/her AntlrWorks checking feature?

I occaisionally get errors that look a lot like that - almost like the
lexer has decided it has to be k=1. It was especially bad while I had a
rule-per-literal (rather than a map lookup used on IDs). Commenting out
problematic lexer rules, building again, uncommenting and building again
usually solves the problem. This defies reason utterly, but it seems to
work for me... that said, I haven't looked at your specific file.

Sam

> The error messages from ANTLR are:
> 
> compile-grammar:
>   [mkdir] Created dir: d:\jsdet\src\jsdet\parsing\antlr
>   [java] warning(209): src/grammars/JavaScript.g:127:1: Multiple token 
> rules can match input such as "'>'": T__80, T__81, T__96, T__98, T__101, 
> T__102
>   [java]
>   [java] As a result, token(s) T__81,T__96,T__98,T__101,T__102 were 
> disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1228:1: Multiple token 
> rules can match input such as "'.'": T__115, NumericLiteral
>   [java]
>   [java] As a result, token(s) NumericLiteral were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1685:1: Multiple token 
> rules can match input such as "'/'": T__75, T__106, RegexpLiteral, 
> MultilineComment, LineComment
>   [java]
>   [java] As a result, token(s) 
> T__106,RegexpLiteral,MultilineComment,LineComment were disabled for that 
> input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'s'": T__70, Identifier
>   [java]
>   [java] As a result, token(s) Identifier were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'t'": TRUE, THIS, T__54, T__56, T__110, 
> Identifier
>   [java]
>   [java] As a result, token(s) THIS,T__54,T__56,T__110,Identifier were 
> disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'c'": T__57, T__66, T__71, Identifier
>   [java]
>   [java] As a result, token(s) T__66,T__71,Identifier were disabled for 
> that input
>   [java] warning(209): src/grammars/JavaScript.g:128:1: Multiple token 
> rules can match input such as "'+'": POSTFIX_INC, T__77, T__103
>   [java]
>   [java] As a result, token(s) T__77,T__103 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1689:1: Multiple token 
> rules can match input such as "'v'": T__64, T__109, Identifier, WhiteSpace
>   [java]
>   [java] As a result, token(s) T__109,Identifier,WhiteSpace were 
> disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'r'": T__68, Identifier
>   [java]
>   [java] As a result, token(s) Identifier were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:125:1: Multiple token 
> rules can match input such as "'<'": T__79, T__95, T__97, T__100
>   [java]
>   [java] As a result, token(s) T__95,T__97,T__100 were disabled for that 
> input
>   [java] warning(209): src/grammars/JavaScript.g:118:1: Multiple token 
> rules can match input such as "'='": T__73, T__91, T__93
>   [java]
>   [java] As a result, token(s) T__91,T__93 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:130:1: Multiple token 
> rules can match input such as "'*'": T__74, T__105
>   [java]
>   [java] As a result, token(s) T__105 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'e'": T__60, Identifier
>   [java]
>   [java] As a result, token(s) Identifier were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'n'": NULL, T__113, Identifier
>   [java]
>   [java] As a result, token(s) T__113,Identifier were disabled for that 
> input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'f'": FALSE, T__49, T__58, T__63, Identifier
>   [java]
>   [java] As a result, token(s) T__49,T__58,T__63,Identifier were 
> disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'i'": T__59, T__65, T__99, Identifier
>   [java]
>   [java] As a result, token(s) T__65,T__99,Identifier were disabled for 
> that input
>   [java] warning(209): src/grammars/JavaScript.g:132:1: Multiple token 
> rules can match input such as "'%'": T__76, T__107
>   [java]
>   [java] As a result, token(s) T__107 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:129:1: Multiple token 
> rules can match input such as "'-'": POSTFIX_DEC, T__78, T__104
>   [java]
>   [java] As a result, token(s) T__78,T__104 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:113:1: Multiple token 
> rules can match input such as "'|'": T__84, T__86, T__88
>   [java]
>   [java] As a result, token(s) T__86,T__88 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'b'": T__67, Identifier
>   [java]
>   [java] As a result, token(s) Identifier were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'d'": T__61, T__72, T__108, Identifier
>   [java]
>   [java] As a result, token(s) T__72,T__108,Identifier were disabled for 
> that input
>   [java] warning(209): src/grammars/JavaScript.g:137:1: Multiple token 
> rules can match input such as "'!'": T__92, T__94, T__112
>   [java]
>   [java] As a result, token(s) T__94,T__112 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:115:1: Multiple token 
> rules can match input such as "'&'": T__82, T__87, T__90
>   [java]
>   [java] As a result, token(s) T__87,T__90 were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token 
> rules can match input such as "'w'": T__62, T__69, Identifier
>   [java]
>   [java] As a result, token(s) T__69,Identifier were disabled for that input
>   [java] warning(209): src/grammars/JavaScript.g:114:1: Multiple token 
> rules can match input such as "'^'": T__83, T__89
>   [java]
>   [java] As a result, token(s) T__89 were disabled for that input
>   [java] error(208): src/grammars/JavaScript.g:1685:1: The following 
> token definitions can never be matched because prior tokens match the 
> same input: THIS,T__49,T__54,T__56,T__58,T__63,T__65,T__66
> ,T__69,T__71,T__72,T__77,T__78,T__81,T__86,T__87,T__88,T__89,T__90,T__91,T__93,T__94,T__95,T__96,T__97,T__98,T__99,T__100,T__101,T__102,T__103,T__104,T__105,T__106,T__107,T__108,T__109,T__110,T__112,T
> __113,RegexpLiteral,MultilineComment,LineComment


-- 
Sam Barnett-Cormack


From jimi at temporal-wave.com  Wed Mar 25 08:44:10 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 08:44:10 -0700
Subject: [antlr-interest] ANTLR website vs Firefox
In-Reply-To: <Pine.CYG.4.58.0903251012220.2588@WHIRLWIND>
References: <Pine.CYG.4.58.0903251012220.2588@WHIRLWIND>
Message-ID: <49CA514A.5050905@temporal-wave.com>

Peter C. Chapin wrote:
> I've noticed that, for some reason, the ANTRL web site seems to misbehave
> in my Firefox (v3.0.7). Specifically many of the images don't download (I
> get "Waiting for www.antlr.org" indefinitely) and I've also had similar
> problems downloading some files. When this occurs, I load the same pages
> in IE7 and they work fine. I wouldn't think much about it except that it
> is very consistent. I do notice that all the images that cause me problems
> are *.gif files.
>
> None of my Firefox plug-ins seem relevant. I tried disabling AdBlock Plus
> but that did not help.
>
> Has anyone else observed this effect?
>   
I use 3.0.7 on Madriva Linux and everything works perfectly. Perhaps you 
should disable all the plugins and see if that works, or perhaps reload 
Firefox. I have had so many problems with Firefox just hanging or 
slowing to a crawl when there are "too many" windows open, and using 5TB 
of memory, that I have started to use Opera when I can.

Jim

From jimi at temporal-wave.com  Wed Mar 25 08:52:08 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 08:52:08 -0700
Subject: [antlr-interest] implementing C-style #define macros in ANTLR
In-Reply-To: <49CA41B4.90101@jazillian.com>
References: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3B0@exchange.andesatpa.com>
	<49CA41B4.90101@jazillian.com>
Message-ID: <49CA5328.8010400@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/2b565dad/attachment.html 

From jimi at temporal-wave.com  Wed Mar 25 09:01:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 09:01:51 -0700
Subject: [antlr-interest] Fw: a newbie question
In-Reply-To: <002401c9ad5f$c0034d30$8e01a8c0@cozilywo123456>
References: <002401c9ad5f$c0034d30$8e01a8c0@cozilywo123456>
Message-ID: <49CA556F.1040202@temporal-wave.com>

william yuan wrote:
> i am right here waitting for an answer ,thanks
>
> ----- Original Message ----- 
> From: "william yuan" <ordinarybackstreetmoldywilliam at gmail.com>
> To: <antlr-interest at antlr.org>
> Sent: Wednesday, March 25, 2009 11:23 PM
> Subject: a newbie question
>
>
>   
>> Hi ALL,
>> I have met another problem when i am tring to understand the antlr tree. 
>> here is my example
>> Cozily.g
>>
>> grammar Cozily;
>> options {
>>    output=AST;
>>    ASTLabelType=CommonTree; // type of $stat.tree ref etc...
>> }
>>
>> expr:    INT '+'^ INT
>> | INT '-'^ INT
>> |  INT '*'^ INT
>> |   INT '%'^ INT
>>    ;
>> INT :   '0'..'9'+ ;
>> WS  :   (' '|'\t'|'\n'|'\r')+ {skip();} ;
>> // END:tokens
>>
>> and the tree here CozilyTree.g
>>
>> tree grammar CozilyTree;
>>
>> options {
>>    tokenVocab=Expr;
>>    ASTLabelType=CommonTree;
>> }
>> prog:   expr{System.out.println($expr.value);} ;
>>
>> expr returns [int value]
>>    :   ^('+' a=INT b=INT) {$value = 
>> Integer.parseInt($a.text)+Integer.parseInt($a.text);}
>>    |   ^('-' a=INT b=INT) {$value = 
>> Integer.parseInt($a.text)-Integer.parseInt($a.text);;}
>>    |   ^('*' a=INT b=INT) {$value = 
>> Integer.parseInt($a.text)*Integer.parseInt($a.text);;}
>>    | ^('%' a=INT b=INT) {$value = 
>> Integer.parseInt($a.text)/Integer.parseInt($a.text);;}
>>    ;
>>
>> // END:expr
>>
>> I wanna make a calculator, only to get evaluate the expressions like '1+1' 
>> or '2*3' and of this sort,
>> but output is here
>> .....\CozilyTree.g: node from line 1:1 no viable alternative at input '+' 
>> when i inputted 1+1
>>
>> so what is the root cause ?
Stop using the literals '+' and so on and declare them as tokens in the 
parser/lexer combination:

PLUS : '+' ; ...etcc

Then make sure you generate the tree parser after you have generated the 
lexer/parser combined grammar. UNles you are not calling the code 
correctly, your tokens are probably out of sync.

Jim

From pcc482719 at gmail.com  Wed Mar 25 09:04:01 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Wed, 25 Mar 2009 12:04:01 -0400
Subject: [antlr-interest] ANTLR website vs Firefox
In-Reply-To: <49CA514A.5050905@temporal-wave.com>
References: <Pine.CYG.4.58.0903251012220.2588@WHIRLWIND>
	<49CA514A.5050905@temporal-wave.com>
Message-ID: <Pine.CYG.4.58.0903251202030.2560@WHIRLWIND>


On Wed, 25 Mar 2009, Jim Idle wrote:

> Peter C. Chapin wrote:
> > I've noticed that, for some reason, the ANTRL web site seems to misbehave
> > in my Firefox (v3.0.7). Specifically many of the images don't download (I
> > get "Waiting for www.antlr.org" indefinitely) and I've also had similar
> > problems downloading some files. When this occurs, I load the same pages
> > in IE7 and they work fine. I wouldn't think much about it except that it
> > is very consistent. I do notice that all the images that cause me problems
> > are *.gif files.
> >
> I use 3.0.7 on Madriva Linux and everything works perfectly. Perhaps you
> should disable all the plugins and see if that works, or perhaps reload
> Firefox. I have had so many problems with Firefox just hanging or
> slowing to a crawl when there are "too many" windows open, and using 5TB
> of memory, that I have started to use Opera when I can.

Well, I just tried it in Google's Chrome browser and it behaves the same
way. The gif images don't download and the browser just keeps trying
"forever."

Are those gif images being generated in some special manner?

Peter

From jimi at temporal-wave.com  Wed Mar 25 09:04:59 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 09:04:59 -0700
Subject: [antlr-interest] grammar checking/compilation fails on Windows
 but	not on Linux
In-Reply-To: <49CA50B7.40702@lancaster.ac.uk>
References: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>
	<49CA50B7.40702@lancaster.ac.uk>
Message-ID: <49CA562B.5070405@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/fb1362ac/attachment.html 

From fdmanana at ieee.org  Wed Mar 25 09:28:36 2009
From: fdmanana at ieee.org (Filipe David Manana)
Date: Wed, 25 Mar 2009 17:28:36 +0100
Subject: [antlr-interest] grammar checking/compilation fails on Windows
	but not on Linux
In-Reply-To: <49CA562B.5070405@temporal-wave.com>
References: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>
	<49CA50B7.40702@lancaster.ac.uk> <49CA562B.5070405@temporal-wave.com>
Message-ID: <cadf1c690903250928r284adb22l3baa73ca8fdf0ecd@mail.gmail.com>

What do you mean with -X flag conversiontimeout?

Running "java -X" yields me:

"

  -Xmixed mixed mode execution (default)
  -Xint interpreted mode execution only
  -Xbootclasspath:<directories and zip/jar files separated by ;>
  set search path for bootstrap classes and resources
  -Xbootclasspath/a:<directories and zip/jar files separated by ;>
  append to end of bootstrap class path
  -Xbootclasspath/p:<directories and zip/jar files separated by ;>
  prepend in front of bootstrap class path
  -Xnoclassgc disable class garbage collection
  -Xincgc enable incremental garbage collection
  -Xloggc:<file> log GC status to a file with time stamps
  -Xbatch disable background compilation
  -Xms<size> set initial Java heap size
  -Xmx<size> set maximum Java heap size
  -Xss<size> set java thread stack size
  -Xprof output cpu profiling data
  -Xfuture enable strictest checks, anticipating future default
  -Xrs reduce use of OS signals by Java/VM (see documentation)
  -Xcheck:jni perform additional checks for JNI functions
  -Xshare:off do not attempt to use shared class data
  -Xshare:auto use shared class data if possible (default)
  -Xshare:on require using shared class data, otherwise fail.

The -X options are non-standard and subject to change without notice.
"

(for Java 6u7)

And "java -Xprof" gives me:

" Flat profile of 0.65 secs (60 total ticks): main

  Thread-local ticks:
  1.7% 1 Blocked (of total)
100.0% 59 Unknown: no last frame


Global summary of 0.65 seconds:
100.0% 60 Received ticks
 98.3% 59 Unknown code
"

That said, which command line parameters (and values) should I pass to java?

thanks


2009/3/25 Jim Idle <jimi at temporal-wave.com>

>  Sam Barnett-Cormack wrote:
>
> Filipe David Manana wrote:
>
>
>  Hello,
>
> I am facing here something weird.
>
> I have a grammar which compiles fine under Linux (Ubuntu 64 bits, 4GB
> ram) and passes the grammar checking performed by AntlrWorks. (not even
> a single warning)
>
> On a Windows XP machine (32bits, 3GB ram) both the compilation and
> checking fail.
>
> The grammar file is accessible from http://code.google.com/p/jsdet/source/browse/trunk/src/grammars/JavaScript.g
>
> Can somebody tell me if passes on his/her AntlrWorks checking feature?
>
>
>    You probably need to set the -X flag conversiontimeout to a higher
> value for your slower machine. The value is an elapsed time because the JREs
> don't allow (or didn't earlier) a measurement of CPU used time. Hence on
> slower machines, a grammar that analyzes correctly on a fast machine can
> bail out on a slow system.
>
> Jim
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/ee79046b/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Wed Mar 25 09:39:35 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Wed, 25 Mar 2009 16:39:35 +0000
Subject: [antlr-interest] grammar checking/compilation fails on Windows
 but not on Linux
In-Reply-To: <cadf1c690903250928r284adb22l3baa73ca8fdf0ecd@mail.gmail.com>
References: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>	<49CA50B7.40702@lancaster.ac.uk>
	<49CA562B.5070405@temporal-wave.com>
	<cadf1c690903250928r284adb22l3baa73ca8fdf0ecd@mail.gmail.com>
Message-ID: <49CA5E47.9050600@lancaster.ac.uk>

Filipe David Manana wrote:
> What do you mean with -X flag conversiontimeout?

Try java org.antlr.Tool -X

Or replace that with however you normally run the tool, remove any 
input/output options, and add -X - but it's an argument to the tool, 
*not* to Java itself.

Sam

> 2009/3/25 Jim Idle <jimi at temporal-wave.com <mailto:jimi at temporal-wave.com>>
> 
>     Sam Barnett-Cormack wrote:
>>     Filipe David Manana wrote:
>>       
>>>     Hello,
>>>
>>>     I am facing here something weird.
>>>
>>>     I have a grammar which compiles fine under Linux (Ubuntu 64 bits, 4GB 
>>>     ram) and passes the grammar checking performed by AntlrWorks. (not even 
>>>     a single warning)
>>>
>>>     On a Windows XP machine (32bits, 3GB ram) both the compilation and 
>>>     checking fail.
>>>
>>>     The grammar file is accessible from 
>>>     http://code.google.com/p/jsdet/source/browse/trunk/src/grammars/JavaScript.g
>>>
>>>     Can somebody tell me if passes on his/her AntlrWorks checking feature?
>>>         
>>       
>     You probably need to set the -X flag conversiontimeout to a higher
>     value for your slower machine. The value is an elapsed time because
>     the JREs don't allow (or didn't earlier) a measurement of CPU used
>     time. Hence on slower machines, a grammar that analyzes correctly on
>     a fast machine can bail out on a slow system.
> 
>     Jim
> 
> 
> 
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> 
> 
> -- 
> Filipe David Manana,
> fdmanana at ieee.org <mailto:fdmanana at ieee.org>
> PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B 
> <http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B>
> 
> "Reasonable men adapt themselves to the world.
> Unreasonable men adapt the world to themselves.
> That's why all progress depends on unreasonable men."
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Sam Barnett-Cormack

From sharwell at pixelminegames.com  Wed Mar 25 09:42:37 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 25 Mar 2009 11:42:37 -0500
Subject: [antlr-interest] grammar checking/compilation fails on Windows
	butnot on Linux
In-Reply-To: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>
References: <cadf1c690903250750x72f56d07xab01fc160c3397eb@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C06@Bloodymary.ironwillgames.com>

Change your postfixExpression to this:

 

postfixExpression

        : leftHandSideExpression (('++'|'--') => ( '++' | '--' )?)

        ;

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Filipe David Manana
Sent: Wednesday, March 25, 2009 9:51 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] grammar checking/compilation fails on Windows butnot on Linux

 

Hello,

I am facing here something weird.


I have a grammar which compiles fine under Linux (Ubuntu 64 bits, 4GB ram) and passes the grammar checking performed by AntlrWorks. (not even a single warning)

On a Windows XP machine (32bits, 3GB ram) both the compilation and checking fail.

The grammar file is accessible from http://code.google.com/p/jsdet/source/browse/trunk/src/grammars/JavaScript.g

Can somebody tell me if passes on his/her AntlrWorks checking feature?

thanks

The error messages from ANTLR are:

compile-grammar:
  [mkdir] Created dir: d:\jsdet\src\jsdet\parsing\antlr
  [java] warning(209): src/grammars/JavaScript.g:127:1: Multiple token rules can match input such as "'>'": T__80, T__81, T__96, T__98, T__101, T__102
  [java]
  [java] As a result, token(s) T__81,T__96,T__98,T__101,T__102 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1228:1: Multiple token rules can match input such as "'.'": T__115, NumericLiteral
  [java]
  [java] As a result, token(s) NumericLiteral were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1685:1: Multiple token rules can match input such as "'/'": T__75, T__106, RegexpLiteral, MultilineComment, LineComment
  [java]
  [java] As a result, token(s) T__106,RegexpLiteral,MultilineComment,LineComment were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'s'": T__70, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'t'": TRUE, THIS, T__54, T__56, T__110, Identifier
  [java]
  [java] As a result, token(s) THIS,T__54,T__56,T__110,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'c'": T__57, T__66, T__71, Identifier
  [java]
  [java] As a result, token(s) T__66,T__71,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:128:1: Multiple token rules can match input such as "'+'": POSTFIX_INC, T__77, T__103
  [java]
  [java] As a result, token(s) T__77,T__103 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1689:1: Multiple token rules can match input such as "'v'": T__64, T__109, Identifier, WhiteSpace
  [java]
  [java] As a result, token(s) T__109,Identifier,WhiteSpace were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'r'": T__68, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:125:1: Multiple token rules can match input such as "'<'": T__79, T__95, T__97, T__100
  [java]
  [java] As a result, token(s) T__95,T__97,T__100 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:118:1: Multiple token rules can match input such as "'='": T__73, T__91, T__93
  [java]
  [java] As a result, token(s) T__91,T__93 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:130:1: Multiple token rules can match input such as "'*'": T__74, T__105
  [java]
  [java] As a result, token(s) T__105 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'e'": T__60, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'n'": NULL, T__113, Identifier
  [java]
  [java] As a result, token(s) T__113,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'f'": FALSE, T__49, T__58, T__63, Identifier
  [java]
  [java] As a result, token(s) T__49,T__58,T__63,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'i'": T__59, T__65, T__99, Identifier
  [java]
  [java] As a result, token(s) T__65,T__99,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:132:1: Multiple token rules can match input such as "'%'": T__76, T__107
  [java]
  [java] As a result, token(s) T__107 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:129:1: Multiple token rules can match input such as "'-'": POSTFIX_DEC, T__78, T__104
  [java]
  [java] As a result, token(s) T__78,T__104 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:113:1: Multiple token rules can match input such as "'|'": T__84, T__86, T__88
  [java]
  [java] As a result, token(s) T__86,T__88 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'b'": T__67, Identifier
  [java]
  [java] As a result, token(s) Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'d'": T__61, T__72, T__108, Identifier
  [java]
  [java] As a result, token(s) T__72,T__108,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:137:1: Multiple token rules can match input such as "'!'": T__92, T__94, T__112
  [java]
  [java] As a result, token(s) T__94,T__112 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:115:1: Multiple token rules can match input such as "'&'": T__82, T__87, T__90
  [java]
  [java] As a result, token(s) T__87,T__90 were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:1307:1: Multiple token rules can match input such as "'w'": T__62, T__69, Identifier
  [java]
  [java] As a result, token(s) T__69,Identifier were disabled for that input
  [java] warning(209): src/grammars/JavaScript.g:114:1: Multiple token rules can match input such as "'^'": T__83, T__89
  [java]
  [java] As a result, token(s) T__89 were disabled for that input
  [java] error(208): src/grammars/JavaScript.g:1685:1: The following token definitions can never be matched because prior tokens match the same input: THIS,T__49,T__54,T__56,T__58,T__63,T__65,T__66
,T__69,T__71,T__72,T__77,T__78,T__81,T__86,T__87,T__88,T__89,T__90,T__91,T__93,T__94,T__95,T__96,T__97,T__98,T__99,T__100,T__101,T__102,T__103,T__104,T__105,T__106,T__107,T__108,T__109,T__110,T__112,T
__113,RegexpLiteral,MultilineComment,LineComment


-- 
Filipe David Manana,
fdmanana at ieee.org
PGP key - http://pgp.mit.edu:11371/pks/lookup?op=get&search=0xC569452B

"Reasonable men adapt themselves to the world.
Unreasonable men adapt the world to themselves.
That's why all progress depends on unreasonable men."

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/6a5d883b/attachment.html 

From gebhardt at joern-gebhardt.de  Wed Mar 25 09:58:10 2009
From: gebhardt at joern-gebhardt.de (Joern Gebhardt)
Date: Wed, 25 Mar 2009 17:58:10 +0100
Subject: [antlr-interest] Tree-based interpreters
Message-ID: <717d79080903250958k18de9e4dj6fc48e303d8984d0@mail.gmail.com>

Hi,

I found in the wiki (
http://www.antlr.org/wiki/display/CS652/Tree-based+interpreters) a page that
describes how an if-statement could be processed based on an AST.

The grammar stated there looks like this:

ifstat
    :   ^('if' c=expr s=. e=.?) // ^('if' expr stat stat?)
        {
        int next = input.index();
        if ( ((Boolean)$c.value).booleanValue() ) {
            input.seek($s.start.streamIndex);
            stat();
        }
        else if ( $e!=null ) {
            input.seek($e.start.streamIndex);
            stat();
        }
        input.seek(next);
        }
    ;


I tried this out but wasn't able to extract the "streamIndex" out of the
statement CommonTree objects "s" and "e" (by the way, this is already stated
as comment on the wiki).
I only found was the "startIndex" and "stopIndex" but I guess that these
attribute refer to the token position in the token stream created by the
lexer.

Is there any possibility to get the index of the CommonTreeNodeStream (and
not the token stream)? Or do you have any other suggestions how I could use
a tree-grammar
to process if-statements?

Thanks in advance,
Joern
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/f7c920e1/attachment.html 

From paul.mckee at mckeetech.com  Wed Mar 25 10:08:04 2009
From: paul.mckee at mckeetech.com (Paul McKee)
Date: Wed, 25 Mar 2009 17:08:04 -0000
Subject: [antlr-interest] Specifying optional elements in a tree grammar.
Message-ID: <5DBD5CE0DBF54D67ACBCA4E21B9B6CE2@mckeepaPC>

Hi:

How do I go about specifying optional elements in a tree grammar?
For example, in my AST generator, I have:

querySpecification :
 selectClause 
 ( intoClause ) ?
 ( fromClause  )?
 ( (whereClause) =>whereClause )?
 ( (groupByClause) => groupByClause 
  ( havingClause  )?
 )? ->^(SELECTCLAUSE selectClause ^(INTOCLAUSE intoClause)? ^(FROMCLAUSE fromClause)? ^(WHERECLAUSE whereClause)?);

Which generates fine, but in my tree walker, I have:

querySpecification :
 ^(SELECTCLAUSE selectClause ^(INTOCLAUSE intoClause)? ^(FROMCLAUSE fromClause)? ^(WHERECLAUSE whereClause)?)
 ;

Which causes the following:
[16:57:30] error(100): TsqlWalker.g:284:54: syntax error: antlr: TsqlWalker.g:284:54: expecting RPAREN, found '?'
[16:57:30] error(100): TsqlWalker.g:284:80: syntax error: antlr: TsqlWalker.g:284:80: unexpected token: ?
[16:57:30] error(100): TsqlWalker.g:284:107: syntax error: antlr: TsqlWalker.g:284:107: expecting SEMI, found ')'

I'm still pretty new to this, so any help is most welcome.

Best Regards

Paul McKee
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/0a5ac5ce/attachment.html 

From jimi at temporal-wave.com  Wed Mar 25 10:12:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 10:12:39 -0700
Subject: [antlr-interest] Specifying optional elements in a tree grammar.
In-Reply-To: <5DBD5CE0DBF54D67ACBCA4E21B9B6CE2@mckeepaPC>
References: <5DBD5CE0DBF54D67ACBCA4E21B9B6CE2@mckeepaPC>
Message-ID: <49CA6607.9040606@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/8c2d2f76/attachment.html 

From paul.mckee at mckeetech.com  Wed Mar 25 10:22:13 2009
From: paul.mckee at mckeetech.com (Paul McKee)
Date: Wed, 25 Mar 2009 17:22:13 -0000
Subject: [antlr-interest] Specifying optional elements in a tree grammar.
In-Reply-To: <49CA6607.9040606@temporal-wave.com>
References: <5DBD5CE0DBF54D67ACBCA4E21B9B6CE2@mckeepaPC>
	<49CA6607.9040606@temporal-wave.com>
Message-ID: <DACCD7907AEC4FE59AE92953C07F2A83@mckeepaPC>

Thanks very much Jim - that's sorted it!

Regards

Paul
  ----- Original Message ----- 
  From: Jim Idle 
  Cc: antlr-interest at antlr.org 
  Sent: Wednesday, March 25, 2009 5:12 PM
  Subject: Re: [antlr-interest] Specifying optional elements in a tree grammar.


  Paul McKee wrote: 
    Hi:

    How do I go about specifying optional elements in a tree grammar?
    For example, in my AST generator, I have:

    querySpecification :
     selectClause 
     ( intoClause ) ?
     ( fromClause  )?
     ( (whereClause) =>whereClause )?
     ( (groupByClause) => groupByClause 
      ( havingClause  )?
     )? ->^(SELECTCLAUSE selectClause ^(INTOCLAUSE intoClause)? ^(FROMCLAUSE fromClause)? ^(WHERECLAUSE whereClause)?);

    Which generates fine, but in my tree walker, I have:

    querySpecification :
     ^(SELECTCLAUSE selectClause ^(INTOCLAUSE intoClause)? ^(FROMCLAUSE fromClause)? ^(WHERECLAUSE whereClause)?)
     ;

    Which causes the following:
    [16:57:30] error(100): TsqlWalker.g:284:54: syntax error: antlr: TsqlWalker.g:284:54: expecting RPAREN, found '?'
    [16:57:30] error(100): TsqlWalker.g:284:80: syntax error: antlr: TsqlWalker.g:284:80: unexpected token: ?
    [16:57:30] error(100): TsqlWalker.g:284:107: syntax error: antlr: TsqlWalker.g:284:107: expecting SEMI, found ')'

  Probaly better to put those embedded trees into separate rules  rulex? ruley? but you need:

   ^(SELECTCLAUSE selectClause (^(INTOCLAUSE intoClause))? (^(FROMCLAUSE fromClause))? (^(WHERECLAUSE whereClause))?)


  Because the ^( xxxxx) is a tree specification and needs to be enclosed to make it optional.

  Jim


  __________ Information from ESET NOD32 Antivirus, version of virus signature database 3962 (20090325) __________

  The message was checked by ESET NOD32 Antivirus.

  http://www.eset.com



------------------------------------------------------------------------------



  List: http://www.antlr.org/mailman/listinfo/antlr-interest
  Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



  __________ Information from ESET NOD32 Antivirus, version of virus signature database 3962 (20090325) __________

  The message was checked by ESET NOD32 Antivirus.

  http://www.eset.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/0dc0975e/attachment.html 

From pfa at isep.ipp.pt  Wed Mar 25 10:34:56 2009
From: pfa at isep.ipp.pt (Pedro Assis @ City of Porto)
Date: Wed, 25 Mar 2009 17:34:56 +0000
Subject: [antlr-interest] ANTLR website vs Firefox
In-Reply-To: <Pine.CYG.4.58.0903251202030.2560@WHIRLWIND>
References: <Pine.CYG.4.58.0903251012220.2588@WHIRLWIND>	<49CA514A.5050905@temporal-wave.com>
	<Pine.CYG.4.58.0903251202030.2560@WHIRLWIND>
Message-ID: <49CA6B40.5040108@isep.ipp.pt>

Firefox 3.0.7 & www.antlr.org works fine for me (windows and linux boxes).

pfa

Tel: +351 228 340 500 | Ext: 1141 | E-mail: pfa at isep.ipp.pt

GPG Public Key: http://ave.dee.isep.ipp.pt/~passis/gpg-pub-key/



Peter C. Chapin escreveu:
> On Wed, 25 Mar 2009, Jim Idle wrote:
>
>   
>> Peter C. Chapin wrote:
>>     
>>> I've noticed that, for some reason, the ANTRL web site seems to misbehave
>>> in my Firefox (v3.0.7). Specifically many of the images don't download (I
>>> get "Waiting for www.antlr.org" indefinitely) and I've also had similar
>>> problems downloading some files. When this occurs, I load the same pages
>>> in IE7 and they work fine. I wouldn't think much about it except that it
>>> is very consistent. I do notice that all the images that cause me problems
>>> are *.gif files.
>>>
>>>       
>> I use 3.0.7 on Madriva Linux and everything works perfectly. Perhaps you
>> should disable all the plugins and see if that works, or perhaps reload
>> Firefox. I have had so many problems with Firefox just hanging or
>> slowing to a crawl when there are "too many" windows open, and using 5TB
>> of memory, that I have started to use Opera when I can.
>>     
>
> Well, I just tried it in Google's Chrome browser and it behaves the same
> way. The gif images don't download and the browser just keeps trying
> "forever."
>
> Are those gif images being generated in some special manner?
>
> Peter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>   

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 258 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/942dccfb/attachment.bin 

From parrt at cs.usfca.edu  Wed Mar 25 10:48:19 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Mar 2009 10:48:19 -0700
Subject: [antlr-interest] Tree-based interpreters
In-Reply-To: <717d79080903250958k18de9e4dj6fc48e303d8984d0@mail.gmail.com>
References: <717d79080903250958k18de9e4dj6fc48e303d8984d0@mail.gmail.com>
Message-ID: <F8A64030-5181-4021-BC82-84DF1D1B4285@cs.usfca.edu>

Hi. they use a custom AST node.
Ter
On Mar 25, 2009, at 9:58 AM, Joern Gebhardt wrote:

> Hi,
>
> I found in the wiki (http://www.antlr.org/wiki/display/CS652/Tree-based+interpreters 
> ) a page that describes how an if-statement could be processed based  
> on an AST.
>
> The grammar stated there looks like this:
>
> ifstat
>     :   ^('if' c=expr s=. e=.?) // ^('if' expr stat stat?)
>         {
>         int next = input.index();
>         if ( ((Boolean)$c.value).booleanValue() ) {
>
>             input.seek($s.start.streamIndex);
>             stat();
>         }
>         else if ( $e!=null ) {
>             input.seek($e.start.streamIndex);
>             stat();
>         }
>         input.seek(next);
>
>         }
>     ;
>
> I tried this out but wasn't able to extract the "streamIndex" out of  
> the statement CommonTree objects "s" and "e" (by the way, this is  
> already stated as comment on the wiki).
> I only found was the "startIndex" and "stopIndex" but I guess that  
> these attribute refer to the token position in the token stream  
> created by the lexer.
>
> Is there any possibility to get the index of the  
> CommonTreeNodeStream (and not the token stream)? Or do you have any  
> other suggestions how I could use a tree-grammar
> to process if-statements?
>
> Thanks in advance,
> Joern
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Mar 25 11:18:04 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Mar 2009 11:18:04 -0700
Subject: [antlr-interest] ANTLR 2009 workshop registration system open
Message-ID: <E9DB8503-0B8F-4158-A280-E41D45ED621A@cs.usfca.edu>

Hi,

On the workshop page:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Conference+2009

you'll see a "pay now" button to register for the workshop: US$79,  
which includes a copy of the beta  Language Design Patterns book;  
should be almost done by that time actually! :)

Also, feel free to add topics of interest to the page or mail them to  
me. Gonna be a hoot!  Lots of fun.

Ter

From parrt at cs.usfca.edu  Wed Mar 25 11:18:58 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Mar 2009 11:18:58 -0700
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <18890.29533.97526.261106@SWAN.TALKBANK.ORG>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
	<B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>
	<18890.29533.97526.261106@SWAN.TALKBANK.ORG>
Message-ID: <3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>

Yep, somebody noticed that on the list also. I could swear I've fixed  
that. crap. Did I happen to mention a bug number or URL to you?
Ter
On Mar 25, 2009, at 11:09 AM, FranklinChen at cmu.edu wrote:

> Hi,
>
> 3.1.3-SNAPSHOT (which I'm pulling in through Maven) seems to have
> reintroduced this bug!
>
>> That is a bug i introduced :(  I have fixed it.  Last daily should
>> have it.  will go in 3.1.1
>> Ter
>> On Aug 25, 2008, at 1:43 PM, FranklinChen at cmu.edu wrote:
>>
>>> I am upgrading from ANTLR 3.0 to 3.1, and code that I used to have  
>>> in
>>> a tree parser no longer works, because of a change to the return  
>>> type
>>> of labels:
>>>
>>> anyWordsAndMedia
>>>   :
>>>       list+=anyWord+
>>>       (
>>>           list+=url
>>>           list+=anyWord*
>>>       )*
>>>       ->
>>>       anyWordsAndMedia(list={$list})
>>>   ;
>>>
>>> results in
>>>
>>>       List list_list=null;
>>>       ChatWalker.anyWord_return list = null;
>>>
>>> so that the assignment to url fails with
>>>
>>> ===
>>> incompatible types
>>> found   : org.talkbank.chat.antlr.ChatWalker.url_return
>>> required: org.talkbank.chat.antlr.ChatWalker.anyWord_return
>>> ===
>>>
>>> What is the correct way for me to do what I'd been doing up till  
>>> now?
>>>
>>> -- 
>>> Franklin
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
> -- 
> Franklin


From parrt at cs.usfca.edu  Wed Mar 25 11:21:05 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Mar 2009 11:21:05 -0700
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
	<B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>
	<18890.29533.97526.261106@SWAN.TALKBANK.ORG>
	<3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>
Message-ID: <7B46BC79-550A-4BB2-BCDF-59B84713A447@cs.usfca.edu>

ok,  found the bug report:

http://www.antlr.org/jira/browse/ANTLR-314

Let me go see what happened.
Ter
On Mar 25, 2009, at 11:18 AM, Terence Parr wrote:

> Yep, somebody noticed that on the list also. I could swear I've fixed
> that. crap. Did I happen to mention a bug number or URL to you?
> Ter
> On Mar 25, 2009, at 11:09 AM, FranklinChen at cmu.edu wrote:
>
>> Hi,
>>
>> 3.1.3-SNAPSHOT (which I'm pulling in through Maven) seems to have
>> reintroduced this bug!
>>
>>> That is a bug i introduced :(  I have fixed it.  Last daily should
>>> have it.  will go in 3.1.1
>>> Ter
>>> On Aug 25, 2008, at 1:43 PM, FranklinChen at cmu.edu wrote:
>>>
>>>> I am upgrading from ANTLR 3.0 to 3.1, and code that I used to have
>>>> in
>>>> a tree parser no longer works, because of a change to the return
>>>> type
>>>> of labels:
>>>>
>>>> anyWordsAndMedia
>>>>  :
>>>>      list+=anyWord+
>>>>      (
>>>>          list+=url
>>>>          list+=anyWord*
>>>>      )*
>>>>      ->
>>>>      anyWordsAndMedia(list={$list})
>>>>  ;
>>>>
>>>> results in
>>>>
>>>>      List list_list=null;
>>>>      ChatWalker.anyWord_return list = null;
>>>>
>>>> so that the assignment to url fails with
>>>>
>>>> ===
>>>> incompatible types
>>>> found   : org.talkbank.chat.antlr.ChatWalker.url_return
>>>> required: org.talkbank.chat.antlr.ChatWalker.anyWord_return
>>>> ===
>>>>
>>>> What is the correct way for me to do what I'd been doing up till
>>>> now?
>>>>
>>>> -- 
>>>> Franklin
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>
>> -- 
>> Franklin
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From FranklinChen at cmu.edu  Wed Mar 25 11:27:17 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 25 Mar 2009 14:27:17 -0400
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <7B46BC79-550A-4BB2-BCDF-59B84713A447@cs.usfca.edu>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
	<B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>
	<18890.29533.97526.261106@SWAN.TALKBANK.ORG>
	<3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>
	<7B46BC79-550A-4BB2-BCDF-59B84713A447@cs.usfca.edu>
Message-ID: <18890.30597.580385.309000@SWAN.TALKBANK.ORG>

Terence Parr writes:
> ok,  found the bug report:
> 
> http://www.antlr.org/jira/browse/ANTLR-314

I just looked on the mailing list archives and see that my problem was
reported as ANTLR-381.

-- 
Franklin

From parrt at cs.usfca.edu  Wed Mar 25 11:32:27 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Mar 2009 11:32:27 -0700
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <18890.30597.580385.309000@SWAN.TALKBANK.ORG>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
	<B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>
	<18890.29533.97526.261106@SWAN.TALKBANK.ORG>
	<3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>
	<7B46BC79-550A-4BB2-BCDF-59B84713A447@cs.usfca.edu>
	<18890.30597.580385.309000@SWAN.TALKBANK.ORG>
Message-ID: <2CCE4EFB-73F1-4EF5-A1B4-B4AB9A4B1852@cs.usfca.edu>

Ah. That is a different problem; I don't think that ever worked. are  
you sure that 314 isn't your issue?
you have output=AST or ST, right?

To fix: open file

src/main/resources/org/antlr/codegen/templates/Java/Java.stg

and change ruleLabelDefs() template to:

ruleLabelDefs() ::= <<
<[ruleDescriptor.tokenLabels,ruleDescriptor.tokenListLabels,
    
ruleDescriptor.wildcardTreeLabels,ruleDescriptor.wildcardTreeListLabels]
     :{<labelType> <it.label.text>=null;}; separator="\n"
 >
< 
[ruleDescriptor 
.tokenListLabels 
,ruleDescriptor.ruleListLabels,ruleDescriptor.wildcardTreeListLabels]
     :{List list_<it.label.text>=null;}; separator="\n"
 >
<ruleDescriptor.ruleLabels:ruleLabelDef(label=it); separator="\n">
<ruleDescriptor.ruleListLabels:{ll|RuleReturnScope <ll.label.text> =  
null;}; separator="\n">
 >>

All I did was change the last line to be:

<ruleDescriptor.ruleListLabels:{ll|RuleReturnScope <ll.label.text> =  
null;}; separator="\n">

Ter
On Mar 25, 2009, at 11:27 AM, FranklinChen at cmu.edu wrote:

> Terence Parr writes:
>> ok,  found the bug report:
>>
>> http://www.antlr.org/jira/browse/ANTLR-314
>
> I just looked on the mailing list archives and see that my problem was
> reported as ANTLR-381.
>
> -- 
> Franklin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/bd48a24b/attachment.html 

From FranklinChen at cmu.edu  Wed Mar 25 11:39:42 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 25 Mar 2009 14:39:42 -0400
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <2CCE4EFB-73F1-4EF5-A1B4-B4AB9A4B1852@cs.usfca.edu>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
	<B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>
	<18890.29533.97526.261106@SWAN.TALKBANK.ORG>
	<3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>
	<7B46BC79-550A-4BB2-BCDF-59B84713A447@cs.usfca.edu>
	<18890.30597.580385.309000@SWAN.TALKBANK.ORG>
	<2CCE4EFB-73F1-4EF5-A1B4-B4AB9A4B1852@cs.usfca.edu>
Message-ID: <18890.31342.745564.890874@SWAN.TALKBANK.ORG>

Terence Parr writes:
> Ah. That is a different problem; I don't think that ever worked. are  
> you sure that 314 isn't your issue?
> you have output=AST or ST, right?

It was 381.

I have output=template.

I don't know if it ever worked in an official release, but when I
reported it for 3.1.1 and you told me the daily build at the time
fixed it, I downloaded it and it has been working there.

-- 
Franklin

From FranklinChen at cmu.edu  Wed Mar 25 11:44:53 2009
From: FranklinChen at cmu.edu (FranklinChen at cmu.edu)
Date: Wed, 25 Mar 2009 14:44:53 -0400
Subject: [antlr-interest] ANTLR 3.1 incompatible change for tree parser
	labels?
In-Reply-To: <2CCE4EFB-73F1-4EF5-A1B4-B4AB9A4B1852@cs.usfca.edu>
References: <18611.6522.205028.392270@SWAN.TALKBANK.ORG>
	<B4972534-0C2B-4B64-9CFA-CEA39E404C86@cs.usfca.edu>
	<18890.29533.97526.261106@SWAN.TALKBANK.ORG>
	<3878E30C-A3C8-4C16-A099-F49731A5CD23@cs.usfca.edu>
	<7B46BC79-550A-4BB2-BCDF-59B84713A447@cs.usfca.edu>
	<18890.30597.580385.309000@SWAN.TALKBANK.ORG>
	<2CCE4EFB-73F1-4EF5-A1B4-B4AB9A4B1852@cs.usfca.edu>
Message-ID: <18890.31653.679031.596795@SWAN.TALKBANK.ORG>

> Ah. That is a different problem; I don't think that ever worked. are  
> you sure that 314 isn't your issue?
> you have output=AST or ST, right?

Oh wait, I guess it was 314 after all.

-- 
Franklin

From antlr at mirality.co.nz  Wed Mar 25 12:00:07 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 26 Mar 2009 08:00:07 +1300
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
In-Reply-To: <49CA4AE3.9030103@temporal-wave.com>
References: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
	<49CA4AE3.9030103@temporal-wave.com>
Message-ID: <20090325190035.61E8234184CC@www.antlr.org>

At 04:16 26/03/2009, Jim Idle wrote:
 >That is indeed a bug, though since we changed some internals, 
there
 >is no real need not to use .g any more too be honest. I changed 
the
 >VS rules files some time ago. I will take a look at this as it 
must
 >be an oversight (probably on my part when I changed things for 
the
 >Maven plugin).

I thought that one of the reasons for the alternate extensions was 
that the VS rule files (among other things) needed the extension 
in order to work out which output files would be produced from a 
given grammar file (which in turn lets it know whether it needs to 
recompile or not).  Isn't that still the case?


From jimi at temporal-wave.com  Wed Mar 25 12:07:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Mar 2009 12:07:53 -0700
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
In-Reply-To: <20090325185138.48A8212206FB@msf1.dnsmadeeasy.com>
References: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
	<49CA4AE3.9030103@temporal-wave.com>
	<20090325185138.48A8212206FB@msf1.dnsmadeeasy.com>
Message-ID: <49CA8109.7080902@temporal-wave.com>

Gavin Lambert wrote:
> At 04:16 26/03/2009, Jim Idle wrote:
> >That is indeed a bug, though since we changed some internals, there
> >is no real need not to use .g any more too be honest. I changed the
> >VS rules files some time ago. I will take a look at this as it must
> >be an oversight (probably on my part when I changed things for the
> >Maven plugin).
>
> I thought that one of the reasons for the alternate extensions was 
> that the VS rule files (among other things) needed the extension in 
> order to work out which output files would be produced from a given 
> grammar file (which in turn lets it know whether it needs to recompile 
> or not).  Isn't that still the case?
>
No - I changed the rules files so that they work off the different 
extensions or can be assigned to any .g file. There are more rules files 
and you can right click and assign the type accordingly in the project 
explorer. Still, it should be supporting other extensions though. must 
have been hard coded somewhere by accident.


Jim

From antlr at mirality.co.nz  Wed Mar 25 12:08:50 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 26 Mar 2009 08:08:50 +1300
Subject: [antlr-interest] Specifying optional elements in a tree grammar.
In-Reply-To: <49CA6607.9040606@temporal-wave.com>
References: <5DBD5CE0DBF54D67ACBCA4E21B9B6CE2@mckeepaPC>
	<49CA6607.9040606@temporal-wave.com>
Message-ID: <20090325190914.6ADF634184FD@www.antlr.org>

At 06:12 26/03/2009, Jim Idle wrote:
>>  )? ->^(SELECTCLAUSE selectClause ^(INTOCLAUSE intoClause)? 
>> ^(FROMCLAUSE fromClause)? ^(WHERECLAUSE whereClause)?);
[...]
>>querySpecification :
>>  ^(SELECTCLAUSE selectClause ^(INTOCLAUSE intoClause)? 
>> ^(FROMCLAUSE fromClause)? ^(WHERECLAUSE whereClause)?)
>>  ;
[...]
>  ^(SELECTCLAUSE selectClause (^(INTOCLAUSE intoClause))? 
> (^(FROMCLAUSE fromClause))? (^(WHERECLAUSE whereClause))?)
>
>Because the ^( xxxxx) is a tree specification and needs to be 
>enclosed to make it optional.

Interesting that it seems to work in the rewrite specification, 
though.  Shouldn't they be consistent?  (It's debatable which way 
is "better", but it's just confusing if they're different.)


From anders.hessellund at gmail.com  Wed Mar 25 12:10:06 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Wed, 25 Mar 2009 20:10:06 +0100
Subject: [antlr-interest] NullPointerException in TreeRewriter
Message-ID: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>

Hi,

I just updated to 3.1.3 to try TreeRewriter but I get a strange
NullPointerException?

This is my tree grammar:

tree grammar Reducer;
> options {
>     tokenVocab=Expression;
>     ASTLabelType=CommonTree;
>     output=AST;
>     filter=true;
> }
> topdown
>     :    ^(MULT a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>     ;
> bottomup
>     :    ^(DIV a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>     ;
>

I use the following code to invoke the Reducer. (tree is the CommonTree
object from my parse)

    final CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>     final McAntlrExpressionReducer reducer = new
> McAntlrExpressionReducer(nodes,env);
>     tree = (CommonTree) reducer.downup(tree);


When I run this on the following expression "3*0" I get the following error:

20:09:08.226 [main] DEBUG expression.Expression - parsing '3*0' results in
this AST: (* 3 0)
20:09:08.226 [main] DEBUG expression.Expression - before reduction: (* 3 0)
java.lang.NullPointerException
    at
org.antlr.runtime.tree.CommonTreeNodeStream.<init>(CommonTreeNodeStream.java:67)
    at org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:56)
    at org.antlr.runtime.tree.TreeRewriter$1.pre(TreeRewriter.java:86)
    at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:28)
    at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:89)
    at
com.maconomy.expression.McAbstractExpression.reduce(McAbstractExpression.java:58)
    at com.maconomy.expression.test.MtReducerTest.add(MtReducerTest.java:27)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at
org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
    at
org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
    at
org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
    at
org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
    at
org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
    at
org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
    at
org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
    at
org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
    at
org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
    at
org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
    at
org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
    at
org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
    at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
    at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
    at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
    at
org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

Can anyone help me with this?

-- Anders
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/18a6e84b/attachment.html 

From whschultz at cedrus.com  Wed Mar 25 12:47:17 2009
From: whschultz at cedrus.com (William H. Schultz)
Date: Wed, 25 Mar 2009 12:47:17 -0700
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
In-Reply-To: <49CA8109.7080902@temporal-wave.com>
References: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41>
	<49CA4AE3.9030103@temporal-wave.com>
	<20090325185138.48A8212206FB@msf1.dnsmadeeasy.com>
	<49CA8109.7080902@temporal-wave.com>
Message-ID: <1B1A3E95-543A-4999-9EB1-E3C3F29371F5@cedrus.com>

On Mar 25, 2009, at 12:07 PM, Jim Idle wrote:

> Gavin Lambert wrote:
>> At 04:16 26/03/2009, Jim Idle wrote:
>>> That is indeed a bug, though since we changed some internals, there
>>> is no real need not to use .g any more too be honest. I changed the
>>> VS rules files some time ago. I will take a look at this as it must
>>> be an oversight (probably on my part when I changed things for the
>>> Maven plugin).
>>
>> I thought that one of the reasons for the alternate extensions was
>> that the VS rule files (among other things) needed the extension in
>> order to work out which output files would be produced from a given
>> grammar file (which in turn lets it know whether it needs to  
>> recompile
>> or not).  Isn't that still the case?
>>
> No - I changed the rules files so that they work off the different
> extensions or can be assigned to any .g file. There are more rules  
> files
> and you can right click and assign the type accordingly in the project
> explorer. Still, it should be supporting other extensions though. must
> have been hard coded somewhere by accident.

Maybe that's a solution for Visual Studio, but it's not a solution for  
Xcode.  Custom build rules are done on a per-target basis (which  
sucks, I'll admit), you have to specify an expression to match the  
filename, you provide a script to do the work, and you specify output  
files.

I reverted to version 3.1.2 due to the silent failure.  I didn't want  
to bother to figure out why it was failing, and I assumed there would  
be a 3.1.4 soon as a result.

I don't know if this will work on this list, but I've attached an  
example screenshot of one rule to show what it currently looks like in  
Xcode.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: Picture 3.png
Type: image/png
Size: 50032 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/fee15af9/attachment.png 
-------------- next part --------------



-------------------------------
Hank Schultz
Cedrus Corporation
http://www.cedrus.com/



From parrt at cs.usfca.edu  Wed Mar 25 13:20:20 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Mar 2009 13:20:20 -0700
Subject: [antlr-interest] NullPointerException in TreeRewriter
In-Reply-To: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>
References: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>
Message-ID: <C097FA86-FEE4-4730-8E32-63287E534BFF@cs.usfca.edu>

weird. oh, if you look at code it thinks the adaptor is null...maybe  
you set it incorrectly or don't have one on the nodestream or reducer?
Ter
On Mar 25, 2009, at 12:10 PM, Anders Hessellund wrote:

> Hi,
>
> I just updated to 3.1.3 to try TreeRewriter but I get a strange  
> NullPointerException?
>
> This is my tree grammar:
>
> tree grammar Reducer;
> options {
>     tokenVocab=Expression;
>     ASTLabelType=CommonTree;
>     output=AST;
>     filter=true;
> }
> topdown
>     :    ^(MULT a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>     ;
> bottomup
>     :    ^(DIV a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>     ;
>
> I use the following code to invoke the Reducer. (tree is the  
> CommonTree object from my parse)
>
>     final CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>     final McAntlrExpressionReducer reducer = new  
> McAntlrExpressionReducer(nodes,env);
>     tree = (CommonTree) reducer.downup(tree);
>
> When I run this on the following expression "3*0" I get the  
> following error:
>
> 20:09:08.226 [main] DEBUG expression.Expression - parsing '3*0'  
> results in this AST: (* 3 0)
> 20:09:08.226 [main] DEBUG expression.Expression - before reduction:  
> (* 3 0)
> java.lang.NullPointerException
>     at  
> org 
> .antlr 
> .runtime.tree.CommonTreeNodeStream.<init>(CommonTreeNodeStream.java: 
> 67)
>     at  
> org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:56)
>     at org.antlr.runtime.tree.TreeRewriter$1.pre(TreeRewriter.java:86)
>     at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:28)
>     at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java: 
> 89)
>     at  
> com 
> .maconomy 
> .expression.McAbstractExpression.reduce(McAbstractExpression.java:58)
>     at  
> com.maconomy.expression.test.MtReducerTest.add(MtReducerTest.java:27)
>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>     at  
> sun 
> .reflect 
> .NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>     at  
> sun 
> .reflect 
> .DelegatingMethodAccessorImpl 
> .invoke(DelegatingMethodAccessorImpl.java:25)
>     at java.lang.reflect.Method.invoke(Method.java:597)
>     at  
> org 
> .junit 
> .internal 
> .runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
>     at  
> org 
> .junit 
> .internal 
> .runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
>     at  
> org 
> .junit 
> .internal 
> .runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java: 
> 34)
>     at  
> org 
> .junit 
> .internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
>     at  
> org 
> .junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
>     at  
> org 
> .junit 
> .internal 
> .runners 
> .TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java: 
> 66)
>     at  
> org 
> .junit 
> .internal 
> .runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
>     at org.junit.internal.runners.TestClassRunner 
> $1.runUnprotected(TestClassRunner.java:42)
>     at  
> org 
> .junit 
> .internal 
> .runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java: 
> 34)
>     at  
> org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java: 
> 52)
>     at  
> org 
> .eclipse 
> .jdt 
> .internal 
> .junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
>     at  
> org 
> .eclipse 
> .jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>     at  
> org 
> .eclipse 
> .jdt 
> .internal 
> .junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
>     at  
> org 
> .eclipse 
> .jdt 
> .internal 
> .junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
>     at  
> org 
> .eclipse 
> .jdt 
> .internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
>     at  
> org 
> .eclipse 
> .jdt 
> .internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java: 
> 196)
>
> Can anyone help me with this?
>
> -- Anders
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From yimm8369 at hotmail.com  Wed Mar 25 15:39:41 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Thu, 26 Mar 2009 06:39:41 +0800
Subject: [antlr-interest] Why insertAfter does not work?
Message-ID: <BAY122-W1749133C447EEA328E455ADB900@phx.gbl>


 

Hi again,

 

I want to change "Math.floor(1.5)"  to  "int(1.5)+1" using Tokenrewritestream, the way  I am doing is first changing "Math.floor" to "int", and then insert "+1" at  the end of callExpression, there is my grammar:

 

callExpression
    :  m= memberExpression (indexSuffix |propertyReferenceSuffix|a=argumentSuffix )*  
    {if($m.text.equals("Math.floor"))
   {
    tokens.replace($m.start, $m.stop, "int");
    tokens.insertAfter($callExpression.stop, "+1");
   }   
    }
   )
    ;

 

 

But I got java.lang.NullPointerException error.The test code is  

 

 var b:int=Math.floor(1.5);

 

I tried: 

 tokens.insertBefore($callExpression.start, "+1"); 

 

It works.I got var b:int=+1Math.floor(1.5);  but that is not what I want. 

 

Why insertAfter does not work?


Thanks.


Annie

_________________________________________________________________
MSN??????????????????MSN???
http://im.live.cn/safe/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090326/5d872972/attachment.html 

From yimm8369 at hotmail.com  Wed Mar 25 15:57:50 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Thu, 26 Mar 2009 06:57:50 +0800
Subject: [antlr-interest] could not even do k=1 for decision 126;
	reason: timed out
Message-ID: <BAY122-W67BF22DD3F47B018AD2DADB900@phx.gbl>


 

Hi ,

 

 

I have another question about grammar:

 

If I use the following grammar, it works fine.

multiplicativeExpression
   
    :  unaryExpression ((STAR|DIV|MOD)^ u=unaryExpression)*   
    ;
    
But when I change it to 

multiplicativeExpression 
    :  unaryExpression (STAR^ unaryExpression)* 
    |  unaryExpression (DIV^  unaryExpression)* 
    |  unaryExpression (MOD^  unaryExpression)* 
    ;


But I got 
(10): internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1228): could not even do k=1 for decision 126; reason: timed out (>1000ms)

 

It seems the two grammar are the same,I dont know why?

 

Annie

_________________________________________________________________
??K???????????????????MClub????
http://club.msn.cn/?form=3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090326/cfb7cd00/attachment.html 

From sharwell at pixelminegames.com  Wed Mar 25 16:10:53 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 25 Mar 2009 18:10:53 -0500
Subject: [antlr-interest] could not even do k=1 for decision 126;
	reason: timed out
In-Reply-To: <BAY122-W67BF22DD3F47B018AD2DADB900@phx.gbl>
References: <BAY122-W67BF22DD3F47B018AD2DADB900@phx.gbl>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C1C@Bloodymary.ironwillgames.com>

If you don?t left-factor your rules, it attempts to do so for you. If that process takes longer than the timeout period (default 1 second), it assumes it can?t be done and errors out. Of the two rules below, the former is vastly superior. If you absolutely must use something like the second, at least do this:

 

multiplicativeExpression 

        :       unaryExpression

                (       (STAR^ unaryExpression)*

                |       (DIV^ unaryExpression)*

                |       (MOD^ unaryExpression)*

                )

        ;

 

Also, are you sure you didn?t mean this:

 

multiplicativeExpression 

        :       unaryExpression

                (       STAR^ unaryExpression

                |       DIV^ unaryExpression

                |       MOD^ unaryExpression

                )*

        ;

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of YINGAnnie
Sent: Wednesday, March 25, 2009 5:58 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] could not even do k=1 for decision 126;reason: timed out

 

 
Hi ,
 
 
I have another question about grammar:
 
If I use the following grammar, it works fine.
multiplicativeExpression
   
    :  unaryExpression ((STAR|DIV|MOD)^ u=unaryExpression)*   
    ;
    
But when I change it to 
multiplicativeExpression 
    :  unaryExpression (STAR^ unaryExpression)* 
    |  unaryExpression (DIV^  unaryExpression)* 
    |  unaryExpression (MOD^  unaryExpression)* 
    ;

But I got 
(10): internal error: org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:1228): could not even do k=1 for decision 126; reason: timed out (>1000ms)
 
It seems the two grammar are the same,I dont know why?
 
Annie

________________________________

?MSN???????????????? ????? <http://mobile.msn.com.cn/> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090325/7d24d0a4/attachment.html 

From g.r.vansickle at att.net  Wed Mar 25 23:19:53 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Thu, 26 Mar 2009 01:19:53 -0500
Subject: [antlr-interest] 3.1.3 only accepts *.g extensions
In-Reply-To: <1B1A3E95-543A-4999-9EB1-E3C3F29371F5@cedrus.com>
References: <380D84CE29B34214BCF397C3EEA0D6D6@DFW5RB41><49CA4AE3.9030103@temporal-wave.com><20090325185138.48A8212206FB@msf1.dnsmadeeasy.com><49CA8109.7080902@temporal-wave.com>
	<1B1A3E95-543A-4999-9EB1-E3C3F29371F5@cedrus.com>
Message-ID: <DCD90C5A826349DE844D9B3E6E34BD5A@DFW5RB41>

> From: William H. Schultz
> 
> On Mar 25, 2009, at 12:07 PM, Jim Idle wrote:
> 
> > Gavin Lambert wrote:
> >> At 04:16 26/03/2009, Jim Idle wrote:
> >>> That is indeed a bug, though since we changed some 
> internals, there 
> >>> is no real need not to use .g any more too be honest. I 
> changed the 
> >>> VS rules files some time ago. I will take a look at this 
> as it must 
> >>> be an oversight (probably on my part when I changed 
> things for the 
> >>> Maven plugin).
> >>
> >> I thought that one of the reasons for the alternate extensions was 
> >> that the VS rule files (among other things) needed the 
> extension in 
> >> order to work out which output files would be produced 
> from a given 
> >> grammar file (which in turn lets it know whether it needs to 
> >> recompile or not).  Isn't that still the case?
> >>
> > No - I changed the rules files so that they work off the different 
> > extensions or can be assigned to any .g file. There are more rules 
> > files and you can right click and assign the type 
> accordingly in the 
> > project explorer. Still, it should be supporting other extensions 
> > though. must have been hard coded somewhere by accident.
> 
> Maybe that's a solution for Visual Studio, but it's not a 
> solution for Xcode.  Custom build rules are done on a 
> per-target basis (which sucks, I'll admit), you have to 
> specify an expression to match the filename, you provide a 
> script to do the work, and you specify output files.
> 

Similar issue with bog-standard makefiles.  Though like anything else there
are workarounds, it makes things at least an order of magnitude easier if
you know a priori that files "nameLexer.h nameParser.c name.tokens etc etc"
come from "name.g<whatever the combined extension is>", but just name.{c,h}
come out of "name.g<whatever for trees>".

-- 
Gary R. Van Sickle


From anders.hessellund at gmail.com  Thu Mar 26 01:39:10 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Thu, 26 Mar 2009 09:39:10 +0100
Subject: [antlr-interest] NullPointerException in TreeRewriter
In-Reply-To: <C097FA86-FEE4-4730-8E32-63287E534BFF@cs.usfca.edu>
References: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>
	<C097FA86-FEE4-4730-8E32-63287E534BFF@cs.usfca.edu>
Message-ID: <797a9f130903260139t5b7ea46u84d83ec0637cc246@mail.gmail.com>

Hi,

You're right I did not set a tree adaptor. I was actually trying the example
from the wiki but there is no mention of a tree adaptor there?


http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree+rewriting+with+patterns

Any ideas?

-- Anders

On Wed, Mar 25, 2009 at 9:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> weird. oh, if you look at code it thinks the adaptor is null...maybe you
> set it incorrectly or don't have one on the nodestream or reducer?
> Ter
>
> On Mar 25, 2009, at 12:10 PM, Anders Hessellund wrote:
>
>  Hi,
>>
>> I just updated to 3.1.3 to try TreeRewriter but I get a strange
>> NullPointerException?
>>
>> This is my tree grammar:
>>
>> tree grammar Reducer;
>> options {
>>    tokenVocab=Expression;
>>    ASTLabelType=CommonTree;
>>    output=AST;
>>    filter=true;
>> }
>> topdown
>>    :    ^(MULT a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>    ;
>> bottomup
>>    :    ^(DIV a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>    ;
>>
>> I use the following code to invoke the Reducer. (tree is the CommonTree
>> object from my parse)
>>
>>    final CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>>    final McAntlrExpressionReducer reducer = new
>> McAntlrExpressionReducer(nodes,env);
>>    tree = (CommonTree) reducer.downup(tree);
>>
>> When I run this on the following expression "3*0" I get the following
>> error:
>>
>> 20:09:08.226 [main] DEBUG expression.Expression - parsing '3*0' results in
>> this AST: (* 3 0)
>> 20:09:08.226 [main] DEBUG expression.Expression - before reduction: (* 3
>> 0)
>> java.lang.NullPointerException
>>    at
>> org.antlr.runtime.tree.CommonTreeNodeStream.<init>(CommonTreeNodeStream.java:67)
>>    at org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:56)
>>    at org.antlr.runtime.tree.TreeRewriter$1.pre(TreeRewriter.java:86)
>>    at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:28)
>>    at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:89)
>>    at
>> com.maconomy.expression.McAbstractExpression.reduce(McAbstractExpression.java:58)
>>    at
>> com.maconomy.expression.test.MtReducerTest.add(MtReducerTest.java:27)
>>    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>    at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>    at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>    at java.lang.reflect.Method.invoke(Method.java:597)
>>    at
>> org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
>>    at
>> org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
>>    at
>> org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
>>    at
>> org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
>>    at
>> org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
>>    at
>> org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
>>    at
>> org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
>>    at
>> org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
>>    at
>> org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
>>    at
>> org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
>>    at
>> org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
>>    at
>> org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>>    at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
>>    at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
>>    at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
>>    at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
>>
>> Can anyone help me with this?
>>
>> -- Anders
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>


-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090326/c45af27a/attachment.html 

From gebhardt at joern-gebhardt.de  Thu Mar 26 01:42:40 2009
From: gebhardt at joern-gebhardt.de (Joern Gebhardt)
Date: Thu, 26 Mar 2009 09:42:40 +0100
Subject: [antlr-interest] Tree-based interpreters
In-Reply-To: <F8A64030-5181-4021-BC82-84DF1D1B4285@cs.usfca.edu>
References: <717d79080903250958k18de9e4dj6fc48e303d8984d0@mail.gmail.com>
	<F8A64030-5181-4021-BC82-84DF1D1B4285@cs.usfca.edu>
Message-ID: <717d79080903260142t7f865392g4dcd9cb1aa798181@mail.gmail.com>

Hi,

I found a solution how to handle the interpretation of if-statements with
the CommonTreeNodeStream.

Basically we store the stream index of the if and else begin positions in
local variables:

ifstat
    :   ^('if' c=expr
           *{int ifStatIdx = input.index()}* s=.
           *{int elseStatIdx = input.index()}* e=.?) // ^('if' expr stat
stat?)
         {
         int next = input.index();
         if ( ((Boolean)$c.value).booleanValue() ) {
             input.seek(*ifStatIdx*);
             stat();
         }
         else if ( $e!=null ) {
             input.seek(*elseStatIdx*);
             stat();
         }
         input.seek(next);

         }
     ;

However, this solution doesn't work because the variables "ifStatIdx" and
"elseStatIdx" are not visible (due to an inner statement block { .. } in the
generated Java code. Therefore, we have to add the declaration into the
@init block:


ifstat
*@init {* *int* *ifStatIdx;
        int **elseStatIdx; }**
*     :   ^('if' c=expr
           *{ifStatIdx = input.index()}* s=.
           *{elseStatIdx = input.index()}* e=.?) // ^('if' expr stat stat?)
         {
         int next = input.index();
         if ( ((Boolean)$c.value).booleanValue() ) {
             input.seek(*ifStatIdx*);
             stat();
         }
         else if ( $e!=null ) {
             input.seek(*elseStatIdx*);
             stat();
         }
         input.seek(next);

         }
     ;

@Ter: should I add this as remark to your wiki page?


Regards,
Joern


On Wed, Mar 25, 2009 at 6:48 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi. they use a custom AST node.
> Ter
> On Mar 25, 2009, at 9:58 AM, Joern Gebhardt wrote:
>
> > Hi,
> >
> > I found in the wiki (
> http://www.antlr.org/wiki/display/CS652/Tree-based+interpreters
> > ) a page that describes how an if-statement could be processed based
> > on an AST.
> >
> > The grammar stated there looks like this:
> >
> > ifstat
> >     :   ^('if' c=expr s=. e=.?) // ^('if' expr stat stat?)
> >         {
> >         int next = input.index();
> >         if ( ((Boolean)$c.value).booleanValue() ) {
> >
> >             input.seek($s.start.streamIndex);
> >             stat();
> >         }
> >         else if ( $e!=null ) {
> >             input.seek($e.start.streamIndex);
> >             stat();
> >         }
> >         input.seek(next);
> >
> >         }
> >     ;
> >
> > I tried this out but wasn't able to extract the "streamIndex" out of
> > the statement CommonTree objects "s" and "e" (by the way, this is
> > already stated as comment on the wiki).
> > I only found was the "startIndex" and "stopIndex" but I guess that
> > these attribute refer to the token position in the token stream
> > created by the lexer.
> >
> > Is there any possibility to get the index of the
> > CommonTreeNodeStream (and not the token stream)? Or do you have any
> > other suggestions how I could use a tree-grammar
> > to process if-statements?
> >
> > Thanks in advance,
> > Joern
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090326/232063e5/attachment.html 

From sven.van.echelpoel at empolis.com  Thu Mar 26 01:57:40 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 26 Mar 2009 09:57:40 +0100
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define
	possibly	incorrect
In-Reply-To: <49CA4EAB.4080903@temporal-wave.com>
References: <1237819958.6293.7.camel@cartman>
	<49C7ABF8.3010507@temporal-wave.com> <1237885492.6297.3.camel@cartman>
	<49C90D7C.6060707@temporal-wave.com> <1237968966.5842.28.camel@cartman>
	<49CA4EAB.4080903@temporal-wave.com>
Message-ID: <1238057860.5842.40.camel@cartman>

[...]
> > At first I only checked that LT(1) returned something non-NULL, but
> > since a node was returned in (2) I ended up creating the wrong node
> > to
> > return in the rewrite rule. Then I found out that the type returned
> > was
> > ANTLR3_TOKEN_UP and that I could use ANTLR3_MIN_TOKEN_TYPE to
> > determine
> > whether I had a 'valid' node or not.
> > 
> > Should LT(1) return a node in (2), or does that signal that
> > something's
> > amiss? If the behavior of LT(1) is correct, how can I determine that
> > a
> > node has no next sibling?
> >   
> LT just returns the next token in the input stream and has no regard
> for rule boundaries etc. 
> 
> The input stream for an AST consists of a flat stream of tokens with
> the AST structure represented by the nodes ANTLR_TOKEN_DOWN and
> ANTLR_TOKEN_UP.
Ah, that's interesting to know.
> 
> So, if LT(1) is ANTLR_TOKEN_UP, then it means there was no child
> token. However you can ask the node what the child count is too (see
> API). More impotantly though, this probably means that your body rule
> can be empty, in which case your grammar will have written the
> childless token without a DOWN and UP pair as a rewrite like this:
> 
> : X -> ^(X)
> 
> is the same as 
> 
> : X-> X
> 
> So, you might find it easier to have:
> 
> :  ^( node=NEEDS_TO_BE_REWRITTEN b=body )
>      -> { createNewNode( $node, $b, LT( 1 ) ) }
> | node=NEEDS_TO_BE_REWRITTEN
> ;
> 
> Also though, if body cannot be empty, then LT(1) in this instance will
> ALWAYS be ANTLR_TOKEN_UP, matching the closing ) of the rule
> specification.

The body cannot be empty. The input I'm processing is something like
this:

A B C C ( D | E ) C ( C | C ) C
     ^             ^         ^ 
     P             P         P

With A..E the types of elements and the | an alternation of two or more
choices. There's a ton more operators that can be applied to the
elements. Every C has to be transformed into a C' and inbetween two C's
that have no other operators applied to them comes another node P. Such
a P node can also be inserted between a C and an alternation of only
C's, on either or both sides of the alternation. Expressions can be
infinitely nested. The AST somewhat looks like this:

|
+- A
+- B
+- C
+- C
+- ALTERNATION
|  +- GROUP
|  |  +- D
|  +- GROUP
|     +- E
+- C
+- ALTERNATION
|  +- GROUP
|     +- C
|  +- GROUP
|     +- C
+ C

Simplified, I have expressed this like so:

element_list : 
  element+ 
;

element : 
  A
| B
| C
| alternation
|  // ... more elements and operators that look like 
   // ^( OPERATOR element_list )
;
	
alternation :
| ^( ALTERNATION group+ )
;

group :
  ^( GROUP element_list )
;

I have been unable to imagine a pattern that would single out those C's
that need a P inbetween. I would guess that the compiler would complain
about multiple alternatives for input... if I were to add special case
for two consecutive C's, right? 

- Incidentally, when will the AST filter grammars, as discussed in
http://www.antlr.org/wiki/display/~admin/2008/10/23/tree+pattern
+matching+grammars, be available? Or are they already? -

So I settled for the very general grammar, which was easier to write and
thus maintain, and a fallback rewrite rule with the rewrite logic
offloaded to a C++ function. I used LT(1) to get to the next sibling.


Sven


From sven.van.echelpoel at empolis.com  Thu Mar 26 01:59:41 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 26 Mar 2009 09:59:41 +0100
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE
	define	possibly	incorrect
In-Reply-To: <49CA4C4A.4080201@lancaster.ac.uk>
References: <1237819958.6293.7.camel@cartman>
	<49C7ABF8.3010507@temporal-wave.com> <1237885492.6297.3.camel@cartman>
	<49C90D7C.6060707@temporal-wave.com> <1237968966.5842.28.camel@cartman>
	<49CA4C4A.4080201@lancaster.ac.uk>
Message-ID: <1238057981.5842.43.camel@cartman>

> > 
> > Should LT(1) return a node in (2), or does that signal that something's
> > amiss? If the behavior of LT(1) is correct, how can I determine that a
> > node has no next sibling?
> 
> <UP> signals the end of the current "level" of tree. I've not played 
> with it much, but I believe the idea is that, in a tree parser, you 
> don't need to pay attention to <UP> and <DOWN>. If you've got a true 
> single-root tree, there will always be an <UP> just before the EOF. 
> However, my understanding is that tree-grammar writers don't have to 
> bother with these. LT will still show them, I guess. Wouldn't it be 
> better to have the tree parser control the application of the rule by 
> only applying it "under" the node above? Or if this *is* at the top 
> level, your solution might well work, as you've demonstrated that you 
> only get the <UP> when there isn't a next sibling.
> 
I don't think I can write a grammar to capture what I'm trying to do
(See my other reply). I may be wrong, in which case I'll happily stand
corrected.

Thanks,

Sven




From indhu.b at s7software.com  Thu Mar 26 05:51:02 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Thu, 26 Mar 2009 18:21:02 +0530
Subject: [antlr-interest] Is this possible?
Message-ID: <49CB7A36.5010203@s7software.com>

Can 'dfa.predict' throw 'no viable alternative' exception? I'm facing 
this strange problem and wondering what could be the reason. Any pointers?

Thanks, Indhu


From anders.hessellund at gmail.com  Thu Mar 26 06:57:33 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Thu, 26 Mar 2009 14:57:33 +0100
Subject: [antlr-interest] NullPointerException in TreeRewriter
In-Reply-To: <797a9f130903260139t5b7ea46u84d83ec0637cc246@mail.gmail.com>
References: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>
	<C097FA86-FEE4-4730-8E32-63287E534BFF@cs.usfca.edu>
	<797a9f130903260139t5b7ea46u84d83ec0637cc246@mail.gmail.com>
Message-ID: <797a9f130903260657n7c7df68bhcbd2c060b0405388@mail.gmail.com>

Hi,

I found the cause. When you call the 1-arg constructor in the TreeRewriter
class, it does not set the TreeAdaptor:

    public TreeRewriter(TreeNodeStream input) {
>         super(input);
>     }
>     public TreeRewriter(TreeNodeStream input, RecognizerSharedState state)
> {
>         super(input, state);
>         originalAdaptor = input.getTreeAdaptor();
>         originalTokenStream = input.getTokenStream();
>     }
>

Shouldn't the 1-arg constructor rather be?

    public TreeRewriter(TreeNodeStream input) {
>         super(input,new RecognizerSharedState());
>     }
>     public TreeRewriter(TreeNodeStream input, RecognizerSharedState state)
> {
>         super(input, state);
>         originalAdaptor = input.getTreeAdaptor();
>         originalTokenStream = input.getTokenStream();
>     }
>

Cheers,

Anders

On Thu, Mar 26, 2009 at 9:39 AM, Anders Hessellund <
anders.hessellund at gmail.com> wrote:

> Hi,
>
> You're right I did not set a tree adaptor. I was actually trying the
> example from the wiki but there is no mention of a tree adaptor there?
>
>
> http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree+rewriting+with+patterns<http://www.antlr.org/wiki/display/%7Eadmin/2008/11/30/Example+tree+rewriting+with+patterns>
>
> Any ideas?
>
> -- Anders
>
>
> On Wed, Mar 25, 2009 at 9:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> weird. oh, if you look at code it thinks the adaptor is null...maybe you
>> set it incorrectly or don't have one on the nodestream or reducer?
>> Ter
>>
>> On Mar 25, 2009, at 12:10 PM, Anders Hessellund wrote:
>>
>>  Hi,
>>>
>>> I just updated to 3.1.3 to try TreeRewriter but I get a strange
>>> NullPointerException?
>>>
>>> This is my tree grammar:
>>>
>>> tree grammar Reducer;
>>> options {
>>>    tokenVocab=Expression;
>>>    ASTLabelType=CommonTree;
>>>    output=AST;
>>>    filter=true;
>>> }
>>> topdown
>>>    :    ^(MULT a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>>    ;
>>> bottomup
>>>    :    ^(DIV a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>>    ;
>>>
>>> I use the following code to invoke the Reducer. (tree is the CommonTree
>>> object from my parse)
>>>
>>>    final CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>>>    final McAntlrExpressionReducer reducer = new
>>> McAntlrExpressionReducer(nodes,env);
>>>    tree = (CommonTree) reducer.downup(tree);
>>>
>>> When I run this on the following expression "3*0" I get the following
>>> error:
>>>
>>> 20:09:08.226 [main] DEBUG expression.Expression - parsing '3*0' results
>>> in this AST: (* 3 0)
>>> 20:09:08.226 [main] DEBUG expression.Expression - before reduction: (* 3
>>> 0)
>>> java.lang.NullPointerException
>>>    at
>>> org.antlr.runtime.tree.CommonTreeNodeStream.<init>(CommonTreeNodeStream.java:67)
>>>    at org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:56)
>>>    at org.antlr.runtime.tree.TreeRewriter$1.pre(TreeRewriter.java:86)
>>>    at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:28)
>>>    at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:89)
>>>    at
>>> com.maconomy.expression.McAbstractExpression.reduce(McAbstractExpression.java:58)
>>>    at
>>> com.maconomy.expression.test.MtReducerTest.add(MtReducerTest.java:27)
>>>    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>>    at
>>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>>    at
>>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>>    at java.lang.reflect.Method.invoke(Method.java:597)
>>>    at
>>> org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
>>>    at
>>> org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
>>>    at
>>> org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
>>>    at
>>> org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
>>>    at
>>> org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
>>>    at
>>> org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
>>>    at
>>> org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
>>>    at
>>> org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
>>>    at
>>> org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
>>>    at
>>> org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
>>>    at
>>> org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
>>>    at
>>> org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>>>    at
>>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
>>>    at
>>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
>>>    at
>>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
>>>    at
>>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
>>>
>>> Can anyone help me with this?
>>>
>>> -- Anders
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
>
> --
> Anders Hessellund
> www.itu.dk/people/hessellund/
>



-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090326/cee621ad/attachment.html 

From s.barnett-cormack at lancaster.ac.uk  Thu Mar 26 07:07:04 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 26 Mar 2009 14:07:04 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49C80E50.8040500@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
	<49C80E50.8040500@lancaster.ac.uk>
Message-ID: <49CB8C08.3080200@lancaster.ac.uk>

Okay, this weekend I plan to start work on a suitable
language-and-paradigm-independent documentation system, with pluggable
inputs and outputs. I've not decided what technologies to use initially,
although you can bet that any input and output bits I write will use
ANTLR and/or ST, appropriately. I've decided to use three
languages/paradigms to keep in mind to help ensure agnosticism:

 * Grammars (per ANTLR)
 * Templates (per ST)
 * Object-Orients languages generally (which will probably cover
procedural stuff as well, really)

I'll start with the "middle" part - working out an API for receiving and
outputing language information.

If there's interest in this, I can either keep the list updated, or just
those who are interested. If I get it off the ground and ANTLR folks
don't want it in the ANTLR stable, I'll sort out other hosting and
mailing list stuff.

Sam

Sam Barnett-Cormack wrote:
> Dennis Brothers wrote:
>> On Mar 23, 2009, at 2:23 PM, Sam Barnett-Cormack wrote:
>>
>>> Sam Harwell wrote:
>>>> Why not create our own format that properly describes grammars?
>>>>
>>>> We could group them by the Tokens file they reference to cover
>>>> lexer/parser/tree parser combinations. Documentation could include
>>>> formatted/highlighted rule text, comments, DFA statistics, and
>>>> thumbnails of the various rule diagrams linked to full-size versions.
>>>>
>>>> Sam (Harwell)
>>> The way I see it, right now, there's two options to get the minimum  
>>> I'd
>>> like to see:
>>>
>>> 1) Scratch-written system to document anything, flexibly enough to  
>>> allow
>>> various different terminologies (appropriate to OOP, grammars,  
>>> whatever)
>>>
>>> 2) Scratch-written grammar documenting system, allowing focus on good
>>> documentation of grammars and including the stuff that Sam H talks  
>>> about
>>> (configurably, of course).
>>>
>>> Option (2) is less work, while option (1) is more use to the wider
>>> community *iff* it's done well. Frankly, I'm leaning towards (2) now
>>> (despite some quickly-scratched-out design for (1), which I could  
>>> always
>>> use to do that option later myself if I really want to). (2) doesn't
>>> overlap other existing systems.
>>>
>>> If there's enthusiasm for this, I'll whip up a quick outline-design,  
>>> and
>>> anyone who wants to help can help me nail it down to something  
>>> specific,
>>> and possibly help actually write it ;) areas that'd speed me up most
>>> would be writing output engines and bringing extra (more experienced?)
>>> minds to the parsing. Design usually produces better results from
>>> multiple minds, too.
>>>
>>> Sam (Barnett-Cormack)
>> Since ANTLR uses ANTLR to parse itself, couldn't the ANTLR grammar be  
>> modified or extended to recognize and emit doc comments and the  
>> elements they refer to?  Seems like this would be quite a leg up on  
>> Option 2.
>>
>> I don't recall whether the ANTLR grammar is public (and I know ANTLR 3  
>> was originally implemented using ANTLR 2) - what's the current state  
>> of this?
> 
> Well, the ANTLRV3-in-ANTLRV3 is at http://www.antlr.org/grammar/ANTLR/
> 
> However, it'll need some tweaking - currently, doc-comments are 
> discarded except on the grammar itself. Makes life awkward, as it'd be 
> annoying to have to re-tweak the grammar if/when it changes in future. 
> However, it won't be hard overall. Tweak the parser grammar a bit, write 
> a new (most likely filter) tree grammar to extract what's needed... a 
> bit harder if we want to be able to reconstruct the rules themselves, to 
> put verbatim into the documentation, but still not too bad, really.
> 
> I'd prefer it if the retaining of rule doc-comments was done in the main 
> codebase, of course - as well as adding doc-comments to entries in the 
> tokens section. Ter et al - any chance of this happening if there *is* 
> an effort to come up with a documenting tool?
> 


From jimi at temporal-wave.com  Thu Mar 26 07:58:43 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Mar 2009 07:58:43 -0700
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define possibly
 incorrect
In-Reply-To: <1238057860.5842.40.camel@cartman>
References: <1237819958.6293.7.camel@cartman>	
	<49C7ABF8.3010507@temporal-wave.com>
	<1237885492.6297.3.camel@cartman>	
	<49C90D7C.6060707@temporal-wave.com>
	<1237968966.5842.28.camel@cartman>	
	<49CA4EAB.4080903@temporal-wave.com>
	<1238057860.5842.40.camel@cartman>
Message-ID: <49CB9823.6080102@temporal-wave.com>

Sven Van Echelpoel wrote:
> +- A
> +- B
> +- C
> +- C
> +- ALTERNATION
> |  +- GROUP
> |  |  +- D
> |  +- GROUP
> |     +- E
> +- C
> +- ALTERNATION
> |  +- GROUP
> |     +- C
> |  +- GROUP
> |     +- C
> + C
>
> Simplified, I have expressed this like so:
>
> element_list : 
>   element+ 
> ;
>
> element : 
>   A
> | B
> | C
> | alternation
> |  // ... more elements and operators that look like 
>    // ^( OPERATOR element_list )
> ;
> 	
> alternation :
> | ^( ALTERNATION group+ )
> ;
>
> group :
>   ^( GROUP element_list )
> ;
>
> I have been unable to imagine a pattern that would single out those C's
> that need a P inbetween. I would guess that the compiler would complain
> about multiple alternatives for input... if I were to add special case
> for two consecutive C's, right? 
>   
It's difficult to see exactly from your examples of course, but I think 
that that is what you want to do. Assuming that you are only looking for 
C C, then a simple syntactic predicate shoudl suffice:

element : 
  A
| B
| C   (   (C)=> C  {special stuff; }
        |          {something else do nothing}
      )
| etc.

You can also set a flag to say whether you are in an alternation by using a scope at the element_list level like this:

element_list 
scope
{
  ANTLR3_BOOLEAN isAlternation;
}
@init
{
   $element_list::isAlternation = ANTLR3_FALSE;
}
: 


...

alternation

:  ^( ALTERNATION { $element_list:isAlternation = ANTLR3_TRUE; } group+ )

and then testing that flag.

This might not be exactly what you are looking for, but it is close I think.

Jim




From antlr at jazillian.com  Thu Mar 26 08:27:33 2009
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 26 Mar 2009 11:27:33 -0400
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49CB8C08.3080200@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>	<49C80E50.8040500@lancaster.ac.uk>
	<49CB8C08.3080200@lancaster.ac.uk>
Message-ID: <49CB9EE5.4080509@jazillian.com>

I don't think there's any reasonable way to build something that general.
Something that takes any language (e.g. Java, BNF, assembly, English, etc) and
produces any output (HTML, pdf, postscript, etc) will just be so general
as to be useless, IMO.

I think you'll end up "just" building a doclet-like API that handles
BNF-like grammars (as opposed to the Java code that doclets handle).
Then create a tool for each type of output, starting with one that produces
HTML (and that's probably the only one anyone will ever create).

Good luck with it. I'll be happy to contribute if you want help with it.
Andy

Sam Barnett-Cormack wrote:
> Okay, this weekend I plan to start work on a suitable
> language-and-paradigm-independent documentation system, with pluggable
> inputs and outputs. I've not decided what technologies to use initially,
> although you can bet that any input and output bits I write will use
> ANTLR and/or ST, appropriately. I've decided to use three
> languages/paradigms to keep in mind to help ensure agnosticism:
> 
>  * Grammars (per ANTLR)
>  * Templates (per ST)
>  * Object-Orients languages generally (which will probably cover
> procedural stuff as well, really)
> 
> I'll start with the "middle" part - working out an API for receiving and
> outputing language information.
> 
> If there's interest in this, I can either keep the list updated, or just
> those who are interested. If I get it off the ground and ANTLR folks
> don't want it in the ANTLR stable, I'll sort out other hosting and
> mailing list stuff.
> 
> Sam

From s.barnett-cormack at lancaster.ac.uk  Thu Mar 26 08:38:31 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 26 Mar 2009 15:38:31 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49CB9EE5.4080509@jazillian.com>
References: <49C79BA4.5060600@lancaster.ac.uk>	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>	<49C7B307.8000701@lancaster.ac.uk>	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>	<49C7D3A6.5050702@lancaster.ac.uk>	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>	<49C80E50.8040500@lancaster.ac.uk>
	<49CB8C08.3080200@lancaster.ac.uk> <49CB9EE5.4080509@jazillian.com>
Message-ID: <49CBA177.4030304@lancaster.ac.uk>

Andy Tripp wrote:
> I don't think there's any reasonable way to build something that general.
> Something that takes any language (e.g. Java, BNF, assembly, English,
> etc) and
> produces any output (HTML, pdf, postscript, etc) will just be so general
> as to be useless, IMO.
> 
> I think you'll end up "just" building a doclet-like API that handles
> BNF-like grammars (as opposed to the Java code that doclets handle).
> Then create a tool for each type of output, starting with one that produces
> HTML (and that's probably the only one anyone will ever create).

Actually, I've already worked out a way of specifying different
hierarchical language-element structure.

For example, Java has packages, which contain interfaces, classes,
enumerations, and annotations. Classes contain fields, methods, classes,
interfaces, and enumerations (and possibly annotations). Fields and
methods don't contain anything (looking simply), and so on.

ANTLR has grammar "groups" (shared token lists), grammars, rules, etc...

StringTemplate has template groups, templates... maybe add a
higher-level construct purely for documentation purposes.

You build a structure for defining those, and the "middle-man" code
builds a runtime-dependent data structure from the input classes and
passes it to the output classes with the relevant element names. The
input and output classes *will* have to be aware of possible element
types - there's really no way around that. But it means you can easily
bolt together new language support just by writing input and output
classes, without worrying about the logic that has to between them
(which isn't really trivial). And if you add a bit more clever logic, it
becomes possible to produce unified documentation that, with one "group"
of webpages documenting you grammars, your templates, and your classes.
Doesn't sound too general to be useful to me.

Sam

> Sam Barnett-Cormack wrote:
>> Okay, this weekend I plan to start work on a suitable
>> language-and-paradigm-independent documentation system, with pluggable
>> inputs and outputs. I've not decided what technologies to use initially,
>> although you can bet that any input and output bits I write will use
>> ANTLR and/or ST, appropriately. I've decided to use three
>> languages/paradigms to keep in mind to help ensure agnosticism:
>>
>>  * Grammars (per ANTLR)
>>  * Templates (per ST)
>>  * Object-Orients languages generally (which will probably cover
>> procedural stuff as well, really)
>>
>> I'll start with the "middle" part - working out an API for receiving and
>> outputing language information.
>>
>> If there's interest in this, I can either keep the list updated, or just
>> those who are interested. If I get it off the ground and ANTLR folks
>> don't want it in the ANTLR stable, I'll sort out other hosting and
>> mailing list stuff.
>>
>> Sam


From vladimir at ok2home.net  Thu Mar 26 09:10:18 2009
From: vladimir at ok2home.net (Vladimir Konrad)
Date: Thu, 26 Mar 2009 16:10:18 +0000
Subject: [antlr-interest] parsing a very large file
Message-ID: <20090326161018.79315cd0@svr0.h.dearm.co.uk>


Hello,

I have read in the ANTLR book (from pragmatic book-store) that ANTLR
always loads entire file/stream into memory. Is this still the case?

How do you process large data files?

I would need to load a data file which is quite large (100MB+) but
parsing it with ANTLR uses over 1GB of RAM. Is there any way to use
ANTLR to load such a data file without so big memory consumption? If
not what other (java) options are there?

I have searched and looked at the (ANTLR) mailing lists but did not find
info on this...

Kind regards,

Vlad

From dhjdhj at gmail.com  Thu Mar 26 10:46:34 2009
From: dhjdhj at gmail.com (David Jameson)
Date: Thu, 26 Mar 2009 13:46:34 -0400
Subject: [antlr-interest] Problem with rewrite rules with optional
	non-terminals
Message-ID: <B6DD5EB9-F442-4938-B9DF-06301F51A31A@gmail.com>

I have the following grammar fragment

refTag :
                 LSQUARE a=expression (COMMA b=expression)? RSQUARE
                    {
                          //stuff

                    } -> ^(REFTAG $a  $b)

                 ;


However, if I feed in source that does NOT have the optional comma  
expression clause, the parser crashes because it blindly tries to  
dereference  the stream_b object.

How can I test whether there was an optional expression and control  
the rewrite rule accordingly to include the $b or not?

Thanks,
D

From andreas.meyer at smartshift.de  Thu Mar 26 10:48:57 2009
From: andreas.meyer at smartshift.de (Andreas Meyer)
Date: Thu, 26 Mar 2009 18:48:57 +0100
Subject: [antlr-interest] Problem with rewrite rules with
	optional	non-terminals
In-Reply-To: <B6DD5EB9-F442-4938-B9DF-06301F51A31A@gmail.com>
References: <B6DD5EB9-F442-4938-B9DF-06301F51A31A@gmail.com>
Message-ID: <49CBC009.4050409@smartshift.de>

David Jameson schrieb:
> I have the following grammar fragment
>
> refTag :
>                  LSQUARE a=expression (COMMA b=expression)? RSQUARE
>                     {
>                           //stuff
>
>                     } -> ^(REFTAG $a  $b)
>
>                  ;
>
>
> However, if I feed in source that does NOT have the optional comma  
> expression clause, the parser crashes because it blindly tries to  
> dereference  the stream_b object.
>
> How can I test whether there was an optional expression and control  
> the rewrite rule accordingly to include the $b or not?

Does ($b)? in the rewrite rule not work?

Andreas

From dhjdhj at gmail.com  Thu Mar 26 10:57:11 2009
From: dhjdhj at gmail.com (David Jameson)
Date: Thu, 26 Mar 2009 13:57:11 -0400
Subject: [antlr-interest] Problem with rewrite rules with optional
	non-terminals
In-Reply-To: <49CBC009.4050409@smartshift.de>
References: <B6DD5EB9-F442-4938-B9DF-06301F51A31A@gmail.com>
	<49CBC009.4050409@smartshift.de>
Message-ID: <C8A0DF47-B905-4FEB-84B8-16272EA858C6@gmail.com>

Duh --- I can't tell you how many hours I spent this morning trying to  
figure out how to make this work.....
Your solution works fine and of course I should have thought of that  
myself.

Appreciate the quick response.
Thank you!

On Mar 26, 2009, at 1:48 PM, Andreas Meyer wrote:

>
> Does ($b)? in the rewrite rule not work?
>
> Andreas


From jimi at temporal-wave.com  Thu Mar 26 11:02:48 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Mar 2009 11:02:48 -0700
Subject: [antlr-interest] Problem with rewrite rules
	with	optional	non-terminals
In-Reply-To: <49CBC009.4050409@smartshift.de>
References: <B6DD5EB9-F442-4938-B9DF-06301F51A31A@gmail.com>
	<49CBC009.4050409@smartshift.de>
Message-ID: <49CBC348.1090008@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090326/a0f1cb6d/attachment.html 

From lgcraymer at yahoo.com  Thu Mar 26 11:29:13 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 26 Mar 2009 11:29:13 -0700 (PDT)
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <49CBA177.4030304@lancaster.ac.uk>
References: <49C79BA4.5060600@lancaster.ac.uk>
	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>
	<49C7D3A6.5050702@lancaster.ac.uk>
	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
	<49C80E50.8040500@lancaster.ac.uk>
	<49CB8C08.3080200@lancaster.ac.uk> <49CB9EE5.4080509@jazillian.com>
	<49CBA177.4030304@lancaster.ac.uk>
Message-ID: <848247.99066.qm@web55905.mail.re3.yahoo.com>


Sam--

I have to disagree with Andy because I have seen your list of requirements on another list.? There was this mad progammer, see, who was just starting work on an application he was going to call Doxygen.? I wonder if that ever went anywhere? :=)

The real question to ask before going off and building another doxygen is "How does one document a grammar?"? That leads to "Ok, what annotations do I need for comments?" and then to the real requirements.? Grammars deal with syntax, syntactic transformation, and?capturing and expressing?semantics; imperative languages deal with input/output variables and side effects.? The development patterns are different; I have never worried about documenting a grammar simply because production names tend to capture input semantics, and that usually seems to be enough--grammars tend to be compact and reasonably self-documenting.

Anyway, if you can figure out a set of reasonable documentation practices for grammars, please post them to the list for discussion.? We might learn something.

--Loring



----- Original Message ----
> From: Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk>
> To: Andy Tripp <antlr at jazillian.com>
> Cc: ANTLR Interest Mailing List <antlr-interest at antlr.org>
> Sent: Thursday, March 26, 2009 8:38:31 AM
> Subject: Re: [antlr-interest] Documenting grammars
> 
> Andy Tripp wrote:
> > I don't think there's any reasonable way to build something that general.
> > Something that takes any language (e.g. Java, BNF, assembly, English,
> > etc) and
> > produces any output (HTML, pdf, postscript, etc) will just be so general
> > as to be useless, IMO.
> > 
> > I think you'll end up "just" building a doclet-like API that handles
> > BNF-like grammars (as opposed to the Java code that doclets handle).
> > Then create a tool for each type of output, starting with one that produces
> > HTML (and that's probably the only one anyone will ever create).
> 
> Actually, I've already worked out a way of specifying different
> hierarchical language-element structure.
> 
> For example, Java has packages, which contain interfaces, classes,
> enumerations, and annotations. Classes contain fields, methods, classes,
> interfaces, and enumerations (and possibly annotations). Fields and
> methods don't contain anything (looking simply), and so on.
> 
> ANTLR has grammar "groups" (shared token lists), grammars, rules, etc...
> 
> StringTemplate has template groups, templates... maybe add a
> higher-level construct purely for documentation purposes.
> 
> You build a structure for defining those, and the "middle-man" code
> builds a runtime-dependent data structure from the input classes and
> passes it to the output classes with the relevant element names. The
> input and output classes *will* have to be aware of possible element
> types - there's really no way around that. But it means you can easily
> bolt together new language support just by writing input and output
> classes, without worrying about the logic that has to between them
> (which isn't really trivial). And if you add a bit more clever logic, it
> becomes possible to produce unified documentation that, with one "group"
> of webpages documenting you grammars, your templates, and your classes.
> Doesn't sound too general to be useful to me.
> 
> Sam
> 
> > Sam Barnett-Cormack wrote:
> >> Okay, this weekend I plan to start work on a suitable
> >> language-and-paradigm-independent documentation system, with pluggable
> >> inputs and outputs. I've not decided what technologies to use initially,
> >> although you can bet that any input and output bits I write will use
> >> ANTLR and/or ST, appropriately. I've decided to use three
> >> languages/paradigms to keep in mind to help ensure agnosticism:
> >>
> >>? * Grammars (per ANTLR)
> >>? * Templates (per ST)
> >>? * Object-Orients languages generally (which will probably cover
> >> procedural stuff as well, really)
> >>
> >> I'll start with the "middle" part - working out an API for receiving and
> >> outputing language information.
> >>
> >> If there's interest in this, I can either keep the list updated, or just
> >> those who are interested. If I get it off the ground and ANTLR folks
> >> don't want it in the ANTLR stable, I'll sort out other hosting and
> >> mailing list stuff.
> >>
> >> Sam
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From s.barnett-cormack at lancaster.ac.uk  Thu Mar 26 12:25:16 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 26 Mar 2009 19:25:16 +0000
Subject: [antlr-interest] Documenting grammars
In-Reply-To: <848247.99066.qm@web55905.mail.re3.yahoo.com>
References: <49C79BA4.5060600@lancaster.ac.uk>
	<49C7A737.6000306@temporal-wave.com><49C7AF42.2060305@lancaster.ac.uk>
	<49C7B307.8000701@lancaster.ac.uk>
	<86403CA0939415448BCCB83855EFE09AA67BC9@Bloodymary.ironwillgames.com>
	<49C7D3A6.5050702@lancaster.ac.uk>
	<B073BC7F-1513-43F5-81E0-FF2578310CE6@bros.com>
	<49C80E50.8040500@lancaster.ac.uk>
	<49CB8C08.3080200@lancaster.ac.uk> <49CB9EE5.4080509@jazillian.com>
	<49CBA177.4030304@lancaster.ac.uk>
	<848247.99066.qm@web55905.mail.re3.yahoo.com>
Message-ID: <49CBD69C.5010608@lancaster.ac.uk>

Loring Craymer wrote:
> Sam--
> 
> I have to disagree with Andy because I have seen your list of
> requirements on another list.  There was this mad progammer, see, who
> was just starting work on an application he was going to call
> Doxygen.  I wonder if that ever went anywhere? :=)

Doxygen suffering from the same limitation as Javadoc - being solidly 
based on a single paradigm. It also seems poorly documented - I've found 
one fairly huge inconsistency in the docs already, related to adding new 
languages.

> The real question to ask before going off and building another
> doxygen is "How does one document a grammar?"  That leads to "Ok,
> what annotations do I need for comments?" and then to the real
> requirements.  Grammars deal with syntax, syntactic transformation,
> and capturing and expressing semantics; imperative languages deal
> with input/output variables and side effects.  The development
> patterns are different; I have never worried about documenting a
> grammar simply because production names tend to capture input
> semantics, and that usually seems to be enough--grammars tend to be
> compact and reasonably self-documenting.

Well, my combined grammar for ASN.1 has over 1000 lines, isn't properly 
annotated for someone else to understand anyway, and has over 300 
productions - not the most self-documenting thing on Earth, and I don't 
see how it could be.

> Anyway, if you can figure out a set of reasonable documentation
> practices for grammars, please post them to the list for discussion.
> We might learn something.

I'll be doing my initial design work (over and above the vague structure 
in my head) this weekend - I'll certainly post it to the list.

Sam

> ----- Original Message ----
>> From: Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk> To:
>> Andy Tripp <antlr at jazillian.com> Cc: ANTLR Interest Mailing List
>> <antlr-interest at antlr.org> Sent: Thursday, March 26, 2009 8:38:31
>> AM Subject: Re: [antlr-interest] Documenting grammars
>> 
>> Andy Tripp wrote:
>>> I don't think there's any reasonable way to build something that
>>> general. Something that takes any language (e.g. Java, BNF,
>>> assembly, English, etc) and produces any output (HTML, pdf,
>>> postscript, etc) will just be so general as to be useless, IMO.
>>> 
>>> I think you'll end up "just" building a doclet-like API that
>>> handles BNF-like grammars (as opposed to the Java code that
>>> doclets handle). Then create a tool for each type of output,
>>> starting with one that produces HTML (and that's probably the
>>> only one anyone will ever create).
>> Actually, I've already worked out a way of specifying different 
>> hierarchical language-element structure.
>> 
>> For example, Java has packages, which contain interfaces, classes, 
>> enumerations, and annotations. Classes contain fields, methods,
>> classes, interfaces, and enumerations (and possibly annotations).
>> Fields and methods don't contain anything (looking simply), and so
>> on.
>> 
>> ANTLR has grammar "groups" (shared token lists), grammars, rules,
>> etc...
>> 
>> StringTemplate has template groups, templates... maybe add a 
>> higher-level construct purely for documentation purposes.
>> 
>> You build a structure for defining those, and the "middle-man" code
>>  builds a runtime-dependent data structure from the input classes
>> and passes it to the output classes with the relevant element
>> names. The input and output classes *will* have to be aware of
>> possible element types - there's really no way around that. But it
>> means you can easily bolt together new language support just by
>> writing input and output classes, without worrying about the logic
>> that has to between them (which isn't really trivial). And if you
>> add a bit more clever logic, it becomes possible to produce unified
>> documentation that, with one "group" of webpages documenting you
>> grammars, your templates, and your classes. Doesn't sound too
>> general to be useful to me.
>> 
>> Sam
>> 
>>> Sam Barnett-Cormack wrote:
>>>> Okay, this weekend I plan to start work on a suitable 
>>>> language-and-paradigm-independent documentation system, with
>>>> pluggable inputs and outputs. I've not decided what
>>>> technologies to use initially, although you can bet that any
>>>> input and output bits I write will use ANTLR and/or ST,
>>>> appropriately. I've decided to use three languages/paradigms to
>>>> keep in mind to help ensure agnosticism:
>>>> 
>>>> * Grammars (per ANTLR) * Templates (per ST) * Object-Orients
>>>> languages generally (which will probably cover procedural stuff
>>>> as well, really)
>>>> 
>>>> I'll start with the "middle" part - working out an API for
>>>> receiving and outputing language information.
>>>> 
>>>> If there's interest in this, I can either keep the list
>>>> updated, or just those who are interested. If I get it off the
>>>> ground and ANTLR folks don't want it in the ANTLR stable, I'll
>>>> sort out other hosting and mailing list stuff.
>>>> 
>>>> Sam
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest 
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> 
> 


From parrt at cs.usfca.edu  Thu Mar 26 13:40:56 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 26 Mar 2009 13:40:56 -0700
Subject: [antlr-interest] NullPointerException in TreeRewriter
In-Reply-To: <797a9f130903260657n7c7df68bhcbd2c060b0405388@mail.gmail.com>
References: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>
	<C097FA86-FEE4-4730-8E32-63287E534BFF@cs.usfca.edu>
	<797a9f130903260139t5b7ea46u84d83ec0637cc246@mail.gmail.com>
	<797a9f130903260657n7c7df68bhcbd2c060b0405388@mail.gmail.com>
Message-ID: <01EBE25E-6C41-423C-9C9D-D2917DE8240C@cs.usfca.edu>

Doh!  HMm...not sure it should create new state. here is super(input)  
ctor:

	public TreeParser(TreeNodeStream input) {
		super(); // highlight that we go to super to set state object
		setTreeNodeStream(input);
	}

that super() calls

	public BaseRecognizer() {
		state = new RecognizerSharedState();
	}

So I think state is set.  We need the adaptor ....

Ok, TreeFilter/Rewriter need:

     public TreeFilter(TreeNodeStream input) {
         this(input, new RecognizerSharedState());
     }

to call other ctor :)  Try that.

Ter
On Mar 26, 2009, at 6:57 AM, Anders Hessellund wrote:

> Hi,
>
> I found the cause. When you call the 1-arg constructor in the  
> TreeRewriter class, it does not set the TreeAdaptor:
>
>     public TreeRewriter(TreeNodeStream input) {
>         super(input);
>     }
>     public TreeRewriter(TreeNodeStream input, RecognizerSharedState  
> state) {
>         super(input, state);
>         originalAdaptor = input.getTreeAdaptor();
>         originalTokenStream = input.getTokenStream();
>     }
>
> Shouldn't the 1-arg constructor rather be?
>
>     public TreeRewriter(TreeNodeStream input) {
>         super(input,new RecognizerSharedState());
>     }
>     public TreeRewriter(TreeNodeStream input, RecognizerSharedState  
> state) {
>         super(input, state);
>         originalAdaptor = input.getTreeAdaptor();
>         originalTokenStream = input.getTokenStream();
>     }
>
> Cheers,
>
> Anders
>
> On Thu, Mar 26, 2009 at 9:39 AM, Anders Hessellund <anders.hessellund at gmail.com 
> > wrote:
> Hi,
>
> You're right I did not set a tree adaptor. I was actually trying the  
> example from the wiki but there is no mention of a tree adaptor there?
>
>   http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree 
> +rewriting+with+patterns
>
> Any ideas?
>
> -- Anders
>
>
> On Wed, Mar 25, 2009 at 9:20 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> weird. oh, if you look at code it thinks the adaptor is null...maybe  
> you set it incorrectly or don't have one on the nodestream or reducer?
> Ter
>
> On Mar 25, 2009, at 12:10 PM, Anders Hessellund wrote:
>
> Hi,
>
> I just updated to 3.1.3 to try TreeRewriter but I get a strange  
> NullPointerException?
>
> This is my tree grammar:
>
> tree grammar Reducer;
> options {
>    tokenVocab=Expression;
>    ASTLabelType=CommonTree;
>    output=AST;
>    filter=true;
> }
> topdown
>    :    ^(MULT a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>    ;
> bottomup
>    :    ^(DIV a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>    ;
>
> I use the following code to invoke the Reducer. (tree is the  
> CommonTree object from my parse)
>
>    final CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>    final McAntlrExpressionReducer reducer = new  
> McAntlrExpressionReducer(nodes,env);
>    tree = (CommonTree) reducer.downup(tree);
>
> When I run this on the following expression "3*0" I get the  
> following error:
>
> 20:09:08.226 [main] DEBUG expression.Expression - parsing '3*0'  
> results in this AST: (* 3 0)
> 20:09:08.226 [main] DEBUG expression.Expression - before reduction:  
> (* 3 0)
> java.lang.NullPointerException
>    at  
> org 
> .antlr 
> .runtime.tree.CommonTreeNodeStream.<init>(CommonTreeNodeStream.java: 
> 67)
>    at  
> org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:56)
>    at org.antlr.runtime.tree.TreeRewriter$1.pre(TreeRewriter.java:86)
>    at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:28)
>    at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:89)
>    at  
> com 
> .maconomy 
> .expression.McAbstractExpression.reduce(McAbstractExpression.java:58)
>    at  
> com.maconomy.expression.test.MtReducerTest.add(MtReducerTest.java:27)
>    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>    at  
> sun 
> .reflect 
> .NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>    at  
> sun 
> .reflect 
> .DelegatingMethodAccessorImpl 
> .invoke(DelegatingMethodAccessorImpl.java:25)
>    at java.lang.reflect.Method.invoke(Method.java:597)
>    at  
> org 
> .junit 
> .internal 
> .runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
>    at  
> org 
> .junit 
> .internal 
> .runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
>    at  
> org 
> .junit 
> .internal 
> .runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java: 
> 34)
>    at  
> org 
> .junit 
> .internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
>    at  
> org 
> .junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
>    at  
> org 
> .junit 
> .internal 
> .runners 
> .TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java: 
> 66)
>    at  
> org 
> .junit 
> .internal 
> .runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
>    at org.junit.internal.runners.TestClassRunner 
> $1.runUnprotected(TestClassRunner.java:42)
>    at  
> org 
> .junit 
> .internal 
> .runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java: 
> 34)
>    at  
> org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java: 
> 52)
>    at  
> org 
> .eclipse 
> .jdt 
> .internal 
> .junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
>    at  
> org 
> .eclipse 
> .jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>    at  
> org 
> .eclipse 
> .jdt 
> .internal 
> .junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
>    at  
> org 
> .eclipse 
> .jdt 
> .internal 
> .junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
>    at  
> org 
> .eclipse 
> .jdt 
> .internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
>    at  
> org 
> .eclipse 
> .jdt 
> .internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java: 
> 196)
>
> Can anyone help me with this?
>
> -- Anders
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> -- 
> Anders Hessellund
> www.itu.dk/people/hessellund/
>
>
>
> -- 
> Anders Hessellund
> www.itu.dk/people/hessellund/


From antlr at mirality.co.nz  Thu Mar 26 13:50:37 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 27 Mar 2009 09:50:37 +1300
Subject: [antlr-interest] Why insertAfter does not work?
In-Reply-To: <BAY122-W1749133C447EEA328E455ADB900@phx.gbl>
References: <BAY122-W1749133C447EEA328E455ADB900@phx.gbl>
Message-ID: <20090326205103.6AD70341841B@www.antlr.org>

At 11:39 26/03/2009, YINGAnnie wrote:
>I want to change "Math.floor(1.5)"  to  "int(1.5)+1" using 
>Tokenrewritestream, the way  I am doing is first changing 
>"Math.floor" to "int", and then insert "+1" at  the end of 
>callExpression, there is my grammar:

I don't have an answer to your ANTLR problem, but I'm curious why 
you want to make that particular change.  If you're trying to make 
it do rounding instead of truncation, then a better alternative 
would be to convert any "Math.floor(x)" into "int(x+0.5)" 
(although that'll only work right when x is positive).  Both are 
still semantically different from what Math.floor does normally...


From antlr at mirality.co.nz  Thu Mar 26 14:06:11 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 27 Mar 2009 10:06:11 +1300
Subject: [antlr-interest] parsing a very large file
In-Reply-To: <20090326161018.79315cd0@svr0.h.dearm.co.uk>
References: <20090326161018.79315cd0@svr0.h.dearm.co.uk>
Message-ID: <20090326210636.29315341841B@www.antlr.org>

At 05:10 27/03/2009, Vladimir Konrad wrote:
 >
 >I have read in the ANTLR book (from pragmatic book-store) that
 >ANTLR always loads entire file/stream into memory. Is this
 >still the case?

Yes, by default.

 >I would need to load a data file which is quite large (100MB+) 
but
 >parsing it with ANTLR uses over 1GB of RAM. Is there any way to
 >use ANTLR to load such a data file without so big memory 
consumption?
 >If not what other (java) options are there?

Have a look in the Wiki.  I believe that there's some info there 
regarding overriding the token stream to not preload all the 
tokens; that will keep the initial memory budget down.

However I don't think there's any way to avoid having it load 
everything in simultaneously at some point -- the tokens don't 
actually copy the data, they just hold references to its position 
in the input stream (and of course even if they did copy it that'd 
still end up taking up just as much memory).  You certainly 
wouldn't be able to produce an AST without having the entire input 
file in memory and tokenised.

Is there some way you can split up the input externally from ANTLR 
first?  I've used it before to parse some large data files 
(~80MB), but they were archive files that contained chunks of 
about ~500KB each that could be parsed independently of each 
other, so it was fairly straightforward.


From lgcraymer at yahoo.com  Thu Mar 26 14:15:17 2009
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 26 Mar 2009 14:15:17 -0700 (PDT)
Subject: [antlr-interest] parsing a very large file
In-Reply-To: <20090326210636.29315341841B@www.antlr.org>
References: <20090326161018.79315cd0@svr0.h.dearm.co.uk>
	<20090326210636.29315341841B@www.antlr.org>
Message-ID: <679438.90245.qm@web55905.mail.re3.yahoo.com>


Memory mapping the file would probably help, as would the?incremental lexing that Gavin suggests.

--Loring



----- Original Message ----
> From: Gavin Lambert <antlr at mirality.co.nz>
> To: Vladimir Konrad <vladimir at ok2home.net>; antlr-interest at antlr.org
> Sent: Thursday, March 26, 2009 2:06:11 PM
> Subject: Re: [antlr-interest] parsing a very large file
> 
> At 05:10 27/03/2009, Vladimir Konrad wrote:
> >
> >I have read in the ANTLR book (from pragmatic book-store) that
> >ANTLR always loads entire file/stream into memory. Is this
> >still the case?
> 
> Yes, by default.
> 
> >I would need to load a data file which is quite large (100MB+) 
> but
> >parsing it with ANTLR uses over 1GB of RAM. Is there any way to
> >use ANTLR to load such a data file without so big memory 
> consumption?
> >If not what other (java) options are there?
> 
> Have a look in the Wiki.? I believe that there's some info there 
> regarding overriding the token stream to not preload all the 
> tokens; that will keep the initial memory budget down.
> 
> However I don't think there's any way to avoid having it load 
> everything in simultaneously at some point -- the tokens don't 
> actually copy the data, they just hold references to its position 
> in the input stream (and of course even if they did copy it that'd 
> still end up taking up just as much memory).? You certainly 
> wouldn't be able to produce an AST without having the entire input 
> file in memory and tokenised.
> 
> Is there some way you can split up the input externally from ANTLR 
> first?? I've used it before to parse some large data files 
> (~80MB), but they were archive files that contained chunks of 
> about ~500KB each that could be parsed independently of each 
> other, so it was fairly straightforward.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From vladimir at ok2home.net  Thu Mar 26 15:13:52 2009
From: vladimir at ok2home.net (Vladimir Konrad)
Date: Thu, 26 Mar 2009 22:13:52 +0000
Subject: [antlr-interest] parsing a very large file
In-Reply-To: <200903262106.n2QL6ae3011503@mta1.iomartmail.com>
References: <20090326161018.79315cd0@svr0.h.dearm.co.uk>
	<200903262106.n2QL6ae3011503@mta1.iomartmail.com>
Message-ID: <20090326221352.77b833e2@svr0.h.dearm.co.uk>


Hello Gavin,

Thank you for the pointers - will dig into it.

> Is there some way you can split up the input externally from ANTLR 
> first?  I've used it before to parse some large data files 
> (~80MB), but they were archive files that contained chunks of 
> about ~500KB each that could be parsed independently of each 
> other, so it was fairly straightforward.

The format is "record" based - a lot of small chunks enclosed
in /begin /end. So I could write a front end which only feeds the
records to ANTLR and parse those there.

Thanks for the hint.

Kind regards,

Vlad

From indhu.b at s7software.com  Thu Mar 26 20:04:51 2009
From: indhu.b at s7software.com (Indhu Bharathi)
Date: Fri, 27 Mar 2009 08:34:51 +0530
Subject: [antlr-interest] Problem with rewrite
	rules	with	optional	non-terminals
In-Reply-To: <49CBC348.1090008@temporal-wave.com>
References: <B6DD5EB9-F442-4938-B9DF-06301F51A31A@gmail.com>	<49CBC009.4050409@smartshift.de>
	<49CBC348.1090008@temporal-wave.com>
Message-ID: <49CC4253.2080908@s7software.com>

Jim Idle wrote:
> Andreas Meyer wrote:
>> David Jameson schrieb:
>>   
>>> I have the following grammar fragment
>>>
>>> refTag :
>>>                  LSQUARE a=expression (COMMA b=expression)? RSQUARE
>>>                     {
>>>                           //stuff
>>>
>>>                     } -> ^(REFTAG $a  $b)
>>>
>>>                  ;
>>>
>>>
>>> However, if I feed in source that does NOT have the optional comma  
>>> expression clause, the parser crashes because it blindly tries to  
>>> dereference  the stream_b object.
>>>
>>> How can I test whether there was an optional expression and control  
>>> the rewrite rule accordingly to include the $b or not?
>>>     
>>
>> Does ($b)? in the rewrite rule not work?
>>   
> Does not need teh () in fact:
>
>  -> ^(REFTAG $a  $b?)
> The cardinality of the rewrite reference needs to match the 
> cardinality of the element it is referencing.
>
> Jim
>
I guess -> ^(REFTAG expression+) will also work and looks more natural.

- Indhu

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/9e1dff29/attachment.html 

From sven.van.echelpoel at empolis.com  Fri Mar 27 01:46:48 2009
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Fri, 27 Mar 2009 09:46:48 +0100
Subject: [antlr-interest] [3.1.1] ANTLR3_MIN_TOKEN_TYPE define
	possibly	incorrect
In-Reply-To: <49CB9823.6080102@temporal-wave.com>
References: <1237819958.6293.7.camel@cartman>
	<49C7ABF8.3010507@temporal-wave.com> <1237885492.6297.3.camel@cartman>
	<49C90D7C.6060707@temporal-wave.com> <1237968966.5842.28.camel@cartman>
	<49CA4EAB.4080903@temporal-wave.com> <1238057860.5842.40.camel@cartman>
	<49CB9823.6080102@temporal-wave.com>
Message-ID: <1238143608.5878.3.camel@cartman>


> >   
> It's difficult to see exactly from your examples of course, but I think 
> that that is what you want to do. Assuming that you are only looking for 
> C C, then a simple syntactic predicate shoudl suffice:

Right, I had forgotten about those. Up until now I had no use for them.
I guess I must reread the relevant section in the book again :-)

> 
> element : 
>   A
> | B
> | C   (   (C)=> C  {special stuff; }
>         |          {something else do nothing}
>       )
> | etc.
> 
> You can also set a flag to say whether you are in an alternation by using a scope at the element_list level like this:
> 
> element_list 
> scope
> {
>   ANTLR3_BOOLEAN isAlternation;
> }
> @init
> {
>    $element_list::isAlternation = ANTLR3_FALSE;
> }
> : 
> 
> 
> ...
> 
> alternation
> 
> :  ^( ALTERNATION { $element_list:isAlternation = ANTLR3_TRUE; } group+ )
> 
> and then testing that flag.
> 
> This might not be exactly what you are looking for, but it is close I think.
Indeed it is. It gave me an idea. I can keep a flag at alternation scope
that tells me whether the alternation is  over C's only. I can then use
this in the grammar for the case C ALT C

Thanks for the insights,

Sven


From chainone at gmail.com  Fri Mar 27 01:55:49 2009
From: chainone at gmail.com (chain one)
Date: Fri, 27 Mar 2009 16:55:49 +0800
Subject: [antlr-interest] Does pANTLR3_STRING need to be manually deleted?
Message-ID: <5a92ffb60903270155g2847fc18t13fc7b7cb1c31a31@mail.gmail.com>

As what I read in antlr3string.c:
 static pANTLR3_STRING
subString8   (pANTLR3_STRING string, ANTLR3_UINT32 startIndex, ANTLR3_UINT32
endIndex)
{
    pANTLR3_STRING newStr;

    if (endIndex > string->len)
    {
endIndex = string->len + 1;
    }
    newStr  = string->factory->newPtr(string->factory, string->chars +
startIndex, endIndex - startIndex);

    return newStr;
}


Does it mean every time subString8 is called, one string will be created and
then the ptr of string is returned?
If so, I am  wondering if I should delete the strings created by calling
subString8 or other such kinds of string functions after using them.
Just reading the piece of code above, I guess I should manually delete these
strings. Is that right?


Thanks

chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/d55b26ba/attachment.html 

From anders.hessellund at gmail.com  Fri Mar 27 04:02:02 2009
From: anders.hessellund at gmail.com (Anders Hessellund)
Date: Fri, 27 Mar 2009 12:02:02 +0100
Subject: [antlr-interest] NullPointerException in TreeRewriter
In-Reply-To: <01EBE25E-6C41-423C-9C9D-D2917DE8240C@cs.usfca.edu>
References: <797a9f130903251210h7b0d25c9vfe2c8692f4160981@mail.gmail.com>
	<C097FA86-FEE4-4730-8E32-63287E534BFF@cs.usfca.edu>
	<797a9f130903260139t5b7ea46u84d83ec0637cc246@mail.gmail.com>
	<797a9f130903260657n7c7df68bhcbd2c060b0405388@mail.gmail.com>
	<01EBE25E-6C41-423C-9C9D-D2917DE8240C@cs.usfca.edu>
Message-ID: <797a9f130903270402w79397d2cu52f3a62d9defadea@mail.gmail.com>

Yes, you're right of course. As a client, however, I think that I'll just
call the 2-arg constructor straightaway with a new RecognizerSharedState()
as 2nd arg. This should make my code robust in the face of ANTLR-upgrades,
right?

Cheers,

Anders

On Thu, Mar 26, 2009 at 9:40 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Doh!  HMm...not sure it should create new state. here is super(input) ctor:
>
>        public TreeParser(TreeNodeStream input) {
>                super(); // highlight that we go to super to set state
> object
>                setTreeNodeStream(input);
>        }
>
> that super() calls
>
>        public BaseRecognizer() {
>                state = new RecognizerSharedState();
>        }
>
> So I think state is set.  We need the adaptor ....
>
> Ok, TreeFilter/Rewriter need:
>
>    public TreeFilter(TreeNodeStream input) {
>        this(input, new RecognizerSharedState());
>    }
>
> to call other ctor :)  Try that.
>
> Ter
>
> On Mar 26, 2009, at 6:57 AM, Anders Hessellund wrote:
>
>  Hi,
>>
>> I found the cause. When you call the 1-arg constructor in the TreeRewriter
>> class, it does not set the TreeAdaptor:
>>
>>    public TreeRewriter(TreeNodeStream input) {
>>        super(input);
>>    }
>>    public TreeRewriter(TreeNodeStream input, RecognizerSharedState state)
>> {
>>        super(input, state);
>>        originalAdaptor = input.getTreeAdaptor();
>>        originalTokenStream = input.getTokenStream();
>>    }
>>
>> Shouldn't the 1-arg constructor rather be?
>>
>>    public TreeRewriter(TreeNodeStream input) {
>>        super(input,new RecognizerSharedState());
>>    }
>>    public TreeRewriter(TreeNodeStream input, RecognizerSharedState state)
>> {
>>        super(input, state);
>>        originalAdaptor = input.getTreeAdaptor();
>>        originalTokenStream = input.getTokenStream();
>>    }
>>
>> Cheers,
>>
>> Anders
>>
>> On Thu, Mar 26, 2009 at 9:39 AM, Anders Hessellund <
>> anders.hessellund at gmail.com> wrote:
>> Hi,
>>
>> You're right I did not set a tree adaptor. I was actually trying the
>> example from the wiki but there is no mention of a tree adaptor there?
>>
>>  http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree<http://www.antlr.org/wiki/display/%7Eadmin/2008/11/30/Example+tree>
>> +rewriting+with+patterns
>>
>> Any ideas?
>>
>> -- Anders
>>
>>
>> On Wed, Mar 25, 2009 at 9:20 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> weird. oh, if you look at code it thinks the adaptor is null...maybe you
>> set it incorrectly or don't have one on the nodestream or reducer?
>> Ter
>>
>> On Mar 25, 2009, at 12:10 PM, Anders Hessellund wrote:
>>
>> Hi,
>>
>> I just updated to 3.1.3 to try TreeRewriter but I get a strange
>> NullPointerException?
>>
>> This is my tree grammar:
>>
>> tree grammar Reducer;
>> options {
>>   tokenVocab=Expression;
>>   ASTLabelType=CommonTree;
>>   output=AST;
>>   filter=true;
>> }
>> topdown
>>   :    ^(MULT a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>   ;
>> bottomup
>>   :    ^(DIV a=. b=INT {$b.int==0}?) -> $b // x*0 -> 0
>>   ;
>>
>> I use the following code to invoke the Reducer. (tree is the CommonTree
>> object from my parse)
>>
>>   final CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree);
>>   final McAntlrExpressionReducer reducer = new
>> McAntlrExpressionReducer(nodes,env);
>>   tree = (CommonTree) reducer.downup(tree);
>>
>> When I run this on the following expression "3*0" I get the following
>> error:
>>
>> 20:09:08.226 [main] DEBUG expression.Expression - parsing '3*0' results in
>> this AST: (* 3 0)
>> 20:09:08.226 [main] DEBUG expression.Expression - before reduction: (* 3
>> 0)
>> java.lang.NullPointerException
>>   at
>> org.antlr.runtime.tree.CommonTreeNodeStream.<init>(CommonTreeNodeStream.java:67)
>>   at org.antlr.runtime.tree.TreeRewriter.applyOnce(TreeRewriter.java:56)
>>   at org.antlr.runtime.tree.TreeRewriter$1.pre(TreeRewriter.java:86)
>>   at org.antlr.runtime.tree.TreeVisitor.visit(TreeVisitor.java:28)
>>   at org.antlr.runtime.tree.TreeRewriter.downup(TreeRewriter.java:89)
>>   at
>> com.maconomy.expression.McAbstractExpression.reduce(McAbstractExpression.java:58)
>>   at com.maconomy.expression.test.MtReducerTest.add(MtReducerTest.java:27)
>>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
>>   at
>> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
>>   at
>> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
>>   at java.lang.reflect.Method.invoke(Method.java:597)
>>   at
>> org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
>>   at
>> org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
>>   at
>> org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
>>   at
>> org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
>>   at
>> org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
>>   at
>> org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)
>>   at
>> org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
>>   at
>> org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
>>   at
>> org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
>>   at
>> org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
>>   at
>> org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)
>>   at
>> org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
>>   at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
>>   at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
>>   at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
>>   at
>> org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
>>
>> Can anyone help me with this?
>>
>> -- Anders
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>>
>> --
>> Anders Hessellund
>> www.itu.dk/people/hessellund/
>>
>>
>>
>> --
>> Anders Hessellund
>> www.itu.dk/people/hessellund/
>>
>
>


-- 
Anders Hessellund
www.itu.dk/people/hessellund/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/bc85d781/attachment.html 

From pcc482719 at gmail.com  Thu Mar 26 10:40:37 2009
From: pcc482719 at gmail.com (Peter C. Chapin)
Date: Thu, 26 Mar 2009 13:40:37 -0400
Subject: [antlr-interest] ANTLR website vs Firefox
In-Reply-To: <49CA6B40.5040108@isep.ipp.pt>
References: <Pine.CYG.4.58.0903251012220.2588@WHIRLWIND>
	<49CA514A.5050905@temporal-wave.com>
	<Pine.CYG.4.58.0903251202030.2560@WHIRLWIND>
	<49CA6B40.5040108@isep.ipp.pt>
Message-ID: <Pine.CYG.4.58.0903261336001.3176@WHIRLWIND>


On Wed, 25 Mar 2009, Pedro Assis @ City of Porto wrote:

> Firefox 3.0.7 & www.antlr.org works fine for me (windows and linux boxes).

The problem seems to be local to my machine.  However, for some reason it
only affects Firefox and Chrome, but not IE. Anyway, it does not seem to
be a matter for general concern.

Thanks for checking!

Peter

From Gerz at fgan.de  Fri Mar 27 05:02:51 2009
From: Gerz at fgan.de (Gerz, Michael)
Date: Fri, 27 Mar 2009 13:02:51 +0100
Subject: [antlr-interest] ANTLR 3.1.3 performance issue
Message-ID: <1FF0CFC89178B64DBD5CF6696750AC431C429E@mailserv1.lorien.fkie.fgan.de>

Hello everybody,
 
I tested ANTLR 3.1.3 this morning but it still has the same serious performance problem that was introduced shortly before the final release of ANTLR 3.1(.0).
 
For a grammar that is very similar to the Java 5 grammar (including tree grammar and string templates), the parsing time seems to grow quadratically with the input size. Thus, for a 750KB file, the parser performance becomes inacceptable.
 
I hope that this bug will be fixed in the near future. For the time being, it seems I have to revert to my pre-3.1 snapshot.
 
Is there any chance that this bug will be fixed eventually?
 
Best regards,
 
Michael
 
************************************************************************
Dr. Michael Gerz 
FGAN e.V.                                       Phone:  +49 228 9435-414
Department FKIE/ITF                             Fax:    +49 228 9435-685
Neuenahrer Stra?e 20                            E-Mail: gerz at fgan.de <mailto:gerz at fgan.de>  
53343 Wachtberg-Werthhoven, Germany             WWW:    www.fgan.de <http://www.fgan.de/>  
 
Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN) 
Sitz der Gesellschaft: Bonn 
Registergericht: Amtsgericht Bonn VR 2530 
Vorstand: Prof. Dr. M. Tacke (komm. Vors.), Prof. Dr. J. Ender (Stellv.)
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/3cd2e3df/attachment.html 

From jevitha at gmail.com  Fri Mar 27 05:55:59 2009
From: jevitha at gmail.com (jevitha)
Date: Fri, 27 Mar 2009 18:25:59 +0530
Subject: [antlr-interest] Reg the Debug option in ANTLR-Works
Message-ID: <cb65abb00903270555l599e9b63vb6f137bfc1d5caf9@mail.gmail.com>

Hi,
  Im trying to use the Debug option of antlrworks. It seems to hold only
8192 bytes of input. I wanted to test much larger input for my grammar. I
would like to know the option to tweak so that i can debug with large input
files.

-- 
Best Regards,
Jevitha
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/0c6f4401/attachment.html 

From jaluber at gmx.de  Fri Mar 27 07:20:03 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 27 Mar 2009 15:20:03 +0100
Subject: [antlr-interest] ANTLR 3.1.3 performance issue
In-Reply-To: <1FF0CFC89178B64DBD5CF6696750AC431C429E@mailserv1.lorien.fkie.fgan.de>
References: <1FF0CFC89178B64DBD5CF6696750AC431C429E@mailserv1.lorien.fkie.fgan.de>
Message-ID: <49CCE093.1090205@gmx.de>

Gerz, Michael schrieb:
> Hello everybody,
>  
> I tested ANTLR 3.1.3 this morning but it still has the same serious
> performance problem that was introduced shortly before the final release
> of ANTLR 3.1(.0).
>  
> For a grammar that is very similar to the Java 5 grammar (including tree
> grammar and string templates), the parsing time seems to grow
> quadratically with the input size. Thus, for a 750KB file, the parser
> performance becomes inacceptable.

I know that there was a switch to a correct working, but possibly slow
algorithm around that time. If you have been affected by this then your
grammar works only by chance.
>  
> I hope that this bug will be fixed in the near future. For the time
> being, it seems I have to revert to my pre-3.1 snapshot.
>  
> Is there any chance that this bug will be fixed eventually?

Well, you haven't attached the grammar so the issue can't be examined
more closely. Until Ter has a grammar to look at there won't be likely
an improvement.

Johannes
>  
> Best regards,
>  
> Michael
>  
> ************************************************************************
> Dr. Michael Gerz
> FGAN e.V.                                       Phone:  +49 228 9435-414
> Department FKIE/ITF                             Fax:    +49 228 9435-685
> Neuenahrer Stra?e 20                            E-Mail: gerz at fgan.de
> <mailto:gerz at fgan.de>
> 53343 Wachtberg-Werthhoven, Germany             WWW:    www.fgan.de
> <http://www.fgan.de/>
>  
> Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN)
> Sitz der Gesellschaft: Bonn
> Registergericht: Amtsgericht Bonn VR 2530
> Vorstand: Prof. Dr. M. Tacke (komm. Vors.), Prof. Dr. J. Ender (Stellv.)
>  
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jklumpp0 at gmail.com  Fri Mar 27 07:46:45 2009
From: jklumpp0 at gmail.com (Joseph Klumpp)
Date: Fri, 27 Mar 2009 10:46:45 -0400
Subject: [antlr-interest] Non-LL(*) Constructs
Message-ID: <dccad1de0903270746t2321a2f3i82321dfee670e92a@mail.gmail.com>

The definitive ANTLR reference uses the following grammar as an
example of resolving Non-LL(*) Constructs with Syntactic Predicates:

grammar x;
s : e '%'
  | e '!'
  ;
e : '(' e ')'
  | INT
  ;
INT : '0'..'9' + ;

and notes that this grammar can handle (3)! but cannot handle ((3))!,
because the DFA cannot figure out what to do when e invokes itself.
But, e does invoke itself: s=>e! => '(' e ')'! => '('INT')'! =>
'('3')'!.

My question is:
Why does this work with one recursive invocation, but not two or more?

Thanks in advance,
JK

From sharwell at pixelminegames.com  Fri Mar 27 08:09:01 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 27 Mar 2009 10:09:01 -0500
Subject: [antlr-interest] ANTLR 3.1.3 performance issue
In-Reply-To: <1FF0CFC89178B64DBD5CF6696750AC431C429E@mailserv1.lorien.fkie.fgan.de>
References: <1FF0CFC89178B64DBD5CF6696750AC431C429E@mailserv1.lorien.fkie.fgan.de>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C2C@Bloodymary.ironwillgames.com>

Try changing all your usage of CommonTreeNodeStream to BufferedTreeNodeStream, and see if it corrects the issue. Also, do you have any way to check if the time increase was in the lexer, parser, or tree walker?

 

Sam

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gerz, Michael
Sent: Friday, March 27, 2009 7:03 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 3.1.3 performance issue

 

Hello everybody,

 

I tested ANTLR 3.1.3 this morning but it still has the same serious performance problem that was introduced shortly before the final release of ANTLR 3.1(.0).

 

For a grammar that is very similar to the Java 5 grammar (including tree grammar and string templates), the parsing time seems to grow quadratically with the input size. Thus, for a 750KB file, the parser performance becomes inacceptable.

 

I hope that this bug will be fixed in the near future. For the time being, it seems I have to revert to my pre-3.1 snapshot.

 

Is there any chance that this bug will be fixed eventually?

 

Best regards,

 

Michael

 

************************************************************************
Dr. Michael Gerz 
FGAN e.V.                                       Phone:  +49 228 9435-414
Department FKIE/ITF                             Fax:    +49 228 9435-685
Neuenahrer Stra?e 20                            E-Mail: gerz at fgan.de <mailto:gerz at fgan.de>  
53343 Wachtberg-Werthhoven, Germany             WWW:    www.fgan.de <http://www.fgan.de/>  

 

Forschungsgesellschaft f?r Angewandte Naturwissenschaften e. V. (FGAN) 
Sitz der Gesellschaft: Bonn 
Registergericht: Amtsgericht Bonn VR 2530 
Vorstand: Prof. Dr. M. Tacke (komm. Vors.), Prof. Dr. J. Ender (Stellv.)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/a0521039/attachment.html 

From egesuato at ibc.it  Fri Mar 27 09:25:51 2009
From: egesuato at ibc.it (Emanuele Gesuato)
Date: Fri, 27 Mar 2009 17:25:51 +0100
Subject: [antlr-interest] Escaping single quotes in a lexer
Message-ID: <49CCFE0F.4060205@ibc.it>

Hi there,

For the problem described below, Gavin Lambert has gently answered me to 
use the following:

DELIM : "\'' ('\\' ('\'')? | ~('\\' | '\''))* '\'";

As described below i'm using antlr 2.7.6. I've tried to use it as a 
delimiter to my string using:

STRING : DELIM((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)DELIM;

But i've got the following warning:
[antlr] ANTLR Parser Generator   Version 2.7.6 (2005-12-22) 
warning:lexical nondeterminism between rules DELIM and STRING upon
SQL.g:     k==1:'\''
SQL.g:     k==2:'\''
SQL.g:     k==3:' '
SQL.g:     k==4:'('


If i use DELIM using this:
STRING : "'"((JOLLY)?(PAROLE|INTEGER|DELIM)(JOLLY)?)"'";

i don't have any difference in the generated java classes.

How to escape single quotes in the original STRING ?
( STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'"; )


Thanks,
Emanuele



On Tue, Mar 17, 2009 at 11:05 PM, Emanuele Gesuato 
<emanuele.gesuato at gmail.com> wrote:
 > Hi there,
 >
 > I'm quite new to the antlr world so my question could be obvious. I'm
 > using antlr 2.7.6 in java 5 for generating a lexer class. In this
 > lexer (written by an ex-collegue) i'm trying to resolve string like
 >
 > Invoice.customer='Tom'
 >
 > to build an hibernate restriction.
 >
 > I would like to use the ' character inside the string something 
similar to:
 >
 > Invoice.customer='Tom L\'oreal'
 > or (better)
 > Invoice.customer="Tom L'oreal"
 >
 > I've got the String definition for such fields that is the following:
 > STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";
 > where:
 > protected CIFRA        : '0'..'9';
 > protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
 > protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
 > protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
 > protected INTEGER    : (CIFRA)+;
 >
 > and i've tried to use:
 > STRING : (" ' "((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)" ' ") | (' "
 > '((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)' " ');
 >
 > (added spaces for more clarity) but it does recognize the string
 > "Tom L'oreal". The java class created is no different from the 
previous one.
 >
 >
 >
 > Here is the original full grammar:
 > *************************
 > header{
 > package it.ibc.jstore.util.parser;
 > }
 >
 > // Lexer ********************************************
 > {import it.ibc.jstore.base.Log;}
 > class RestrictionsLexer extends Lexer;
 >
 > options { k=4; }
 >
 > WHITESPACE    : (' '
 >            | '\t'
 >            | '\r' '\n' { newline(); }
 >            | '\n'      { newline(); }
 >            ) { $setType(Token.SKIP); }
 >            ;
 >
 > protected SPAZIO    : ' ';
 > protected CIFRA        : '0'..'9';
 > protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
 > protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
 > protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
 > protected INTEGER    : (CIFRA)+;
 > protected LONG        : INTEGER('L'|'l');
 > protected LIKE        : ("LIKE"|"like"|"Like");
 > protected OR        : ("OR"|"or"|"Or");
 > protected AND        : ("AND"|"and"|"And");
 > protected IN        : ("IN"|"in"|"In");
 >
 >
 >
 >
 > UGUALE            : "=";
 > DIVERSO            : "<>";
 > MAGGIORE        : '>';
 > MINORE            : '<';
 > MAGGIOREUGUALE    : ">=";
 > MINOREUGUALE    : "<=";
 > JOLLY            : "*";
 > LPAREN            : '(';
 > RPAREN            : ')';
 > SEPARATORE        : ('/');
 > VIRGOLA            : ",";
 > NUMERO : (LONG) => LONG { $setType(LONG); }
 >     | INTEGER { $setType(INTEGER); }
 >     ;
 > STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'"
 > CAMPO : (LIKE) => LIKE { $setType(LIKE); }
 >    | (OR) => OR { $setType(OR); }
 >    | (AND) => AND { $setType(AND); }
 >    | (IN) => IN { $setType(IN); }
 >    | PAROLA { $setType(CAMPO); }
 >    ;
 >
 > // Parser *******************************************
 > class RestrictionsParser extends Parser;
 > options { buildAST=true; }
 >
 > valore     : STRING | LONG | INTEGER;
 > expr     : LPAREN^ orExpr RPAREN! ;
 > orExpr   : andExpr ((OR^) andExpr)* ;
 > andExpr  : relExpr ((AND^) relExpr)* ;
 > relExpr  : atom
 > 
(((UGUALE^|DIVERSO^|MAGGIORE^|MINORE^|MINOREUGUALE^|MAGGIOREUGUALE^|LIKE^)
 > rparm) | (IN^ list))* ;
 > atom     : CAMPO | expr ;
 > rparm    : atom | valore ;
 > list     : LPAREN! valore (VIRGOLA^ valore)* RPAREN! ;
 >
 >
 > // Parser dell'albero *******************************
 > {
 > import it.ibc.jstore.data.Restrictions;
 > import it.ibc.jstore.data.MatchMode;
 > import java.util.List;
 > import java.util.ArrayList;
 > }
 > class RestrictionsTreeWalker extends TreeParser;
 >
 > // Elemento base (un campo, un intero..)
 > base returns [Object s]
 >    { s=null; }
 >    : i:CAMPO { s=i.getText(); }
 >    | j:INTEGER { s=Integer.valueOf(j.getText()); }
 >    | k:LONG { int lunghezza=k.getText().length();
 > s=Long.valueOf(k.getText().substring(0,lunghezza-1)); }
 >    | l:STRING { int lunghezza=l.getText().length();
 > s=l.getText().substring(1,lunghezza-1); }
 >    ;
 >
 > campo returns [String s]
 >    { s=null; }
 >    : i:CAMPO { s=i.getText(); }
 >    ;
 >
 > stringa returns [String s]
 >    { s=null; }
 >    : l:STRING { int lunghezza=l.getText().length();
 > s=l.getText().substring(1,lunghezza-1); }
 >    ;
 >
 > lista returns [List l]
 >    { l=new ArrayList(); List t,v; Object a; }
 >    : #(VIRGOLA v=lista t=lista) { l.addAll(v); l.addAll(t); } // Una
 > lista e' un'elenco di liste separate da virgola
 >    | a=base { l.add(a); } // E questo e' l'elemento base della lista
 >    ;
 >
 > expr returns [Restrictions r]
 >  { Object a,b; Restrictions t,v; r=new Restrictions(); }
 >  : #(UGUALE a=base b=base) { r.eq((String)a,b); }
 >  | #(DIVERSO a=base b=base) { r.ne((String)a,b); }
 >  | #(MINOREUGUALE a=base b=base) { r.le((String)a,b); }
 >  | #(MAGGIOREUGUALE a=base b=base) { r.ge((String)a,b); }
 >  | #(MINORE a=base b=base) { r.lt((String)a,b); }
 >  | #(MAGGIORE a=base b=base) { r.gt((String)a,b); }
 >  | #(LIKE a=campo b=stringa) { r.ilike((String)a,(String)b, 
MatchMode.GUESS); }
 >  | #(IN a=campo b=lista) { r.in((String)a,(List)b); }
 >  | #(AND t=expr v=expr) {r.and(t,v);}
 >  | #(OR t=expr v=expr) {r.or(t,v);}
 >  | #(LPAREN t=expr) { r=t; }
 >  ;
 >


From parrt at cs.usfca.edu  Fri Mar 27 09:26:02 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 27 Mar 2009 09:26:02 -0700
Subject: [antlr-interest] Non-LL(*) Constructs
In-Reply-To: <dccad1de0903270746t2321a2f3i82321dfee670e92a@mail.gmail.com>
References: <dccad1de0903270746t2321a2f3i82321dfee670e92a@mail.gmail.com>
Message-ID: <E8F91B9C-FAD3-447E-8E42-CF9E1A695787@cs.usfca.edu>

Because antlr gives up once it discovers the recursion (once).
Ter
On Mar 27, 2009, at 7:46 AM, Joseph Klumpp wrote:

> The definitive ANTLR reference uses the following grammar as an
> example of resolving Non-LL(*) Constructs with Syntactic Predicates:
>
> grammar x;
> s : e '%'
>  | e '!'
>  ;
> e : '(' e ')'
>  | INT
>  ;
> INT : '0'..'9' + ;
>
> and notes that this grammar can handle (3)! but cannot handle ((3))!,
> because the DFA cannot figure out what to do when e invokes itself.
> But, e does invoke itself: s=>e! => '(' e ')'! => '('INT')'! =>
> '('3')'!.
>
> My question is:
> Why does this work with one recursive invocation, but not two or more?
>
> Thanks in advance,
> JK
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Fri Mar 27 09:26:57 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 27 Mar 2009 09:26:57 -0700
Subject: [antlr-interest] Non-LL(*) Constructs
In-Reply-To: <dccad1de0903270746t2321a2f3i82321dfee670e92a@mail.gmail.com>
References: <dccad1de0903270746t2321a2f3i82321dfee670e92a@mail.gmail.com>
Message-ID: <7F464ECF-FC00-407E-B19D-DD25E69160DF@cs.usfca.edu>

I should mention that, when i do the formal paper, i'll probably say  
that the decision is separable with a DFA but the language of the DFA  
would be a superset of the valid lookahead language.  not sure if that  
will be formally LL(*) or not.
Ter
On Mar 27, 2009, at 7:46 AM, Joseph Klumpp wrote:

> The definitive ANTLR reference uses the following grammar as an
> example of resolving Non-LL(*) Constructs with Syntactic Predicates:
>
> grammar x;
> s : e '%'
>  | e '!'
>  ;
> e : '(' e ')'
>  | INT
>  ;
> INT : '0'..'9' + ;
>
> and notes that this grammar can handle (3)! but cannot handle ((3))!,
> because the DFA cannot figure out what to do when e invokes itself.
> But, e does invoke itself: s=>e! => '(' e ')'! => '('INT')'! =>
> '('3')'!.
>
> My question is:
> Why does this work with one recursive invocation, but not two or more?
>
> Thanks in advance,
> JK
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Fri Mar 27 09:27:17 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 27 Mar 2009 09:27:17 -0700
Subject: [antlr-interest] Reg the Debug option in ANTLR-Works
In-Reply-To: <cb65abb00903270555l599e9b63vb6f137bfc1d5caf9@mail.gmail.com>
References: <cb65abb00903270555l599e9b63vb6f137bfc1d5caf9@mail.gmail.com>
Message-ID: <AB9B055E-209A-4FCE-866F-8E814C466E57@cs.usfca.edu>

tell it to load input from a file.
T
On Mar 27, 2009, at 5:55 AM, jevitha wrote:

> Hi,
>
>   Im trying to use the Debug option of antlrworks. It seems to hold  
> only 8192 bytes of input. I wanted to test much larger input for my  
> grammar. I would like to know the option to tweak so that i can  
> debug with large input files.
>
> -- 
> Best Regards,
> Jevitha
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gabriel.petrovay at 28msec.com  Fri Mar 27 09:46:04 2009
From: gabriel.petrovay at 28msec.com (Gabriel Petrovay)
Date: Fri, 27 Mar 2009 17:46:04 +0100
Subject: [antlr-interest] How can I insert an action when a su-brule fails
	as well as when this is not present?
Message-ID: <dc6ce1e40903270946g72ea3436tac2d6a83e41b9ce9@mail.gmail.com>

Hi,

I would like to perform a custom action when a subrule fails (=does not
match).

For example:
r : sr1 { /* action when sr1 is matched */ } (sr2)?

I would like an action to be executed when the subrule 2 does not match. I
already tries to make a new rule out of sr2 like this:

r : sr1 { /* action when sr1 is matched */ } (sr2)?
sr2 : 'KW' ss1 ;

As you can see in my case sr2 is prefixed with the keyword 'KW'. ANTLR
generates for this in the code or rule r an if expression to check if after
matching sr1 the keyword 'KW' is next. If not, sr2 if not even called. This
is what I want to capture. The missing sr2. Are there any other solutions
besides using a debug token stream which I want to avoid.

Thanks!
Regards,
Gabriel

-- 
MSc Gabriel Petrovay
MCSA, MCDBA, MCAD
Mobile: +41(0)787978034
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/77a0e140/attachment.html 

From dave at tridecap.com  Fri Mar 27 10:27:56 2009
From: dave at tridecap.com (Dave Dutcher)
Date: Fri, 27 Mar 2009 12:27:56 -0500
Subject: [antlr-interest] How can I insert an action when a su-brule
	failsas well as when this is not present?
In-Reply-To: <dc6ce1e40903270946g72ea3436tac2d6a83e41b9ce9@mail.gmail.com>
References: <dc6ce1e40903270946g72ea3436tac2d6a83e41b9ce9@mail.gmail.com>
Message-ID: <40C2B3CED7E5418BAF09D03F77F3B986@tridecap.com>

> From: Gabriel Petrovay
> Subject: [antlr-interest] How can I insert an action when a su-brule
failsas well as when this is not present?
>	
> Hi,
>	
> I would like to perform a custom action when a subrule fails (=does not
match).
>	
> For example:
> r : sr1 { /* action when sr1 is matched */ } (sr2)?
>	
> I would like an action to be executed when the subrule 2 does not match. 

I think you can do this:

R : sr1 { /* found sr1 */ } ( sr2 { /* found sr2 */ } | { /* no sr2 */ } );

Although I'm pretty new at Antlr myself, so no guarantees that's the best
way.

Dave


From ToddStevenson at ge.com  Fri Mar 27 11:04:10 2009
From: ToddStevenson at ge.com (Stevenson, Todd (GE Healthcare, consultant))
Date: Fri, 27 Mar 2009 14:04:10 -0400
Subject: [antlr-interest] Apparent inconsistent token handling in AST
	grammars.
Message-ID: <93BD0000E4D72D458F0E8CDE6BA971A80BDCDF1E@CINMLVEM11.e2k.ad.ge.com>

I have run into an apparent inconsistency in AST tree construction.  I
can't see what I am doing wrong.
 
Here is the scenario.  Using this grammar (these are just snippets, not
the full grammar):
 
tokens {
    CONSTRAINT;
    VCODE;
}
 
 
element_constraint
: CARD '(' card_expression ')' -> ^(CONSTRAINT ^(CARD card_expression))
;
 
 
constraint_code
: CODE '(' ecid ')' -> ^(CODE ^(VCODE ecid))
;
 
CODE : 'code';
CARD : 'card';
 
 
I then process this tree in in an AST grammar with the following
productions:
 
 
constraint_code 
    : ^(CODE ^(VCODE ecid))
    ;
 
element_constraint
    : ^(CONSTRAINT card_constraint)
    ;
 
card_constraint
    : ^(CARD card_expression)
    ;
 
 
When I execute input with the 'card token included, I get the following
error when trying to process the AST in the 2nd grammar:
mismatched input 'card' expecting CARD

but the grammar processes input using the 'code' token just fine.  This
seems to be inconsistent in translating the CARD and CODE tokens into
the AST grammar.  What am I doing wrong?

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090327/52eae2a2/attachment.html 

From antlr at mirality.co.nz  Fri Mar 27 13:04:26 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 28 Mar 2009 09:04:26 +1300
Subject: [antlr-interest] Escaping single quotes in a lexer
In-Reply-To: <49CCFE0F.4060205@ibc.it>
References: <49CCFE0F.4060205@ibc.it>
Message-ID: <20090327200459.694E53418478@www.antlr.org>

At 05:25 28/03/2009, Emanuele Gesuato wrote:
 >DELIM : "\'' ('\\' ('\'')? | ~('\\' | '\''))* '\'";
 >
 >As described below i'm using antlr 2.7.6. I've tried to use it
 >as a delimiter to my string using:
 >
 >STRING : DELIM((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)DELIM;

The rule I posted is not a delimiter rule; it is a rule for 
matching the entire STRING.

In v2 syntax it'd be:

STRING : "'" ("\\" ("'")? | ~("\\" | "'"))* "'";

(I don't quite remember if you need to double the backslashes in 
v2, but I think you do.)


From jevitha at gmail.com  Fri Mar 27 21:59:20 2009
From: jevitha at gmail.com (jevitha)
Date: Sat, 28 Mar 2009 10:29:20 +0530
Subject: [antlr-interest] Reg the Debug option in ANTLR-Works
In-Reply-To: <AB9B055E-209A-4FCE-866F-8E814C466E57@cs.usfca.edu>
References: <cb65abb00903270555l599e9b63vb6f137bfc1d5caf9@mail.gmail.com>
	<AB9B055E-209A-4FCE-866F-8E814C466E57@cs.usfca.edu>
Message-ID: <cb65abb00903272159h73fda69aof887ba3589da93af@mail.gmail.com>

I had tried file option too . Both the options Text and File gives the same
error . Is there any option which can be sent through command line ?

-- 
Best Regards,
Jevitha


On Fri, Mar 27, 2009 at 9:57 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> tell it to load input from a file.
> T
>
> On Mar 27, 2009, at 5:55 AM, jevitha wrote:
>
>  Hi,
>>
>>  Im trying to use the Debug option of antlrworks. It seems to hold only
>> 8192 bytes of input. I wanted to test much larger input for my grammar. I
>> would like to know the option to tweak so that i can debug with large input
>> files.
>>
>> --
>> Best Regards,
>> Jevitha
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090328/cf39fd31/attachment.html 

From kroepke at classdump.org  Sat Mar 28 10:32:46 2009
From: kroepke at classdump.org (=?ISO-8859-1?Q?Kay_R=F6pke?=)
Date: Sat, 28 Mar 2009 18:32:46 +0100
Subject: [antlr-interest] Bug in dynamic scopes in C target
Message-ID: <AF1D5A40-DDEC-4F31-B35E-65D94144D58D@classdump.org>

Hi Jim!

I've noticed that the a rule like this will crash when targetting C  
(ANTLR 3.1.3):

rule
@scope { int foo; }
@after { $rule::foo = 1; }
: 'bar';

It's ok with Java and is due to the order of clean up performed at  
rule exit (the @after action will deref the freed scope top).
See the templates rule(), ruleCleanUp() and scopeClean() in C.stg.

It's probably very simple to fix by making ruleCleanUp() not call  
scopeClean() directly, but only do it after the @after action is done.
That is what Java.stg does.

I'll work around it for the time being by tweaking the template :)

cheers,
-k

P.S.: I haven't checked any other targets, so the other authors might  
want to check with theirs :)

From parrt at cs.usfca.edu  Sat Mar 28 11:04:00 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 Mar 2009 11:04:00 -0700
Subject: [antlr-interest] Reg the Debug option in ANTLR-Works
In-Reply-To: <cb65abb00903272159h73fda69aof887ba3589da93af@mail.gmail.com>
References: <cb65abb00903270555l599e9b63vb6f137bfc1d5caf9@mail.gmail.com>
	<AB9B055E-209A-4FCE-866F-8E814C466E57@cs.usfca.edu>
	<cb65abb00903272159h73fda69aof887ba3589da93af@mail.gmail.com>
Message-ID: <F17B859F-1BDD-419F-81EA-BAB61E7234C5@cs.usfca.edu>

 From Jean Bovet (AW man):

> The text input zone is limited to 8K because that's the max size I  
> can store in the prefs. However, selecting a huge file should be  
> fine (he should make sure to clear the text area if he previously  
> pasted his big text). I just tried with a 1 MB input file. If he  
> still gets the error, ask him for a screenshot because something  
> else might be not correct.

Terence

On Mar 27, 2009, at 9:59 PM, jevitha wrote:

>
> I had tried file option too . Both the options Text and File gives  
> the same error . Is there any option which can be sent through  
> command line ?
>
> -- 
> Best Regards,
> Jevitha
>
>
> On Fri, Mar 27, 2009 at 9:57 PM, Terence Parr <parrt at cs.usfca.edu>  
> wrote:
> tell it to load input from a file.
> T
>
> On Mar 27, 2009, at 5:55 AM, jevitha wrote:
>
> Hi,
>
>  Im trying to use the Debug option of antlrworks. It seems to hold  
> only 8192 bytes of input. I wanted to test much larger input for my  
> grammar. I would like to know the option to tweak so that i can  
> debug with large input files.
>
> -- 
> Best Regards,
> Jevitha
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090328/882dbbc9/attachment.html 

From maciej.blizinski at gmail.com  Sat Mar 28 15:50:48 2009
From: maciej.blizinski at gmail.com (=?UTF-8?Q?Maciej_Blizi=C5=84ski?=)
Date: Sat, 28 Mar 2009 22:50:48 +0000
Subject: [antlr-interest] line 1878:20 missing 'REV=' at u'REV=2006.05.07'
Message-ID: <f95457130903281550nc6f7d6cl481cd9565ce022fd@mail.gmail.com>

I've recently wrote a grammar which works when running in the debug
mode using Java as the target language. But when the target language
is switched to Python, the following messages are displayed:

(...)
line 1931:9 missing 'REV=' at u'REV=2004.03.20'
line 1933:98 mismatched input u'none' expecting NON_COMMA
line 1934:10 missing 'REV=' at u'REV=2006.10.09'
line 1936:8 missing 'REV=' at u'REV=2009.03.12'
line 1937:11 missing 'REV=' at u'REV=2007.05.12'
line 1937:125 mismatched input u'none' expecting NON_COMMA
line 1939:10 missing 'REV=' at u'REV=2009.02.04'
(...)

A way to reproduce it is:

svn checkout http://usable-solaris.googlecode.com/svn/branches/opencsw
opencsw-read-only
cd opencsw-read-only/packages/
make antlr-3.1.1.jar catalog-antlr
python import_catalog.py

I don't quite get the error message. The parser expects 'REV=', but
'REV=' is right there in the data. Also, the same grammar works fine
with Java. Do you have any ideas as to what the problem is and how to
fix it?

Maciej

From rmann at latencyzero.com  Sat Mar 28 19:44:53 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sat, 28 Mar 2009 19:44:53 -0700
Subject: [antlr-interest] Repeatedly parsing number literals
Message-ID: <C8B2ECA5-3D61-465E-A9AC-7D2AE28AFD3A@latencyzero.com>

I have a couple of lexer rules like this:

DecimalLiteral
	: '0'..'9' '0'..'9'* { $value = };

FloatingPointLiteral
	:	('0'..'9')+ '.' ('0'..'9')* Exponent?
	|	('0'..'9')+ Exponent
	|	('0'..'9')+
	;

And a number of parser rules that refer to them. Do I need to write  
actions like this:

$value = Integer.parseInt($DecimalLiteral.text);

Everywhere a parser rule references DecimalLiteral, or can I just get  
the literal's value, and parse it once in the lexer rule:

DecimalLiteral returns [long value]
	: '0'..'9' '0'..'9'* { $value = ??? };


How do I parse it? That is, how do I get the text of that literal?

Thanks!

-- 
Rick


From antlr at mirality.co.nz  Sat Mar 28 22:36:31 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 29 Mar 2009 18:36:31 +1300
Subject: [antlr-interest] Repeatedly parsing number literals
In-Reply-To: <C8B2ECA5-3D61-465E-A9AC-7D2AE28AFD3A@latencyzero.com>
References: <C8B2ECA5-3D61-465E-A9AC-7D2AE28AFD3A@latencyzero.com>
Message-ID: <20090329053706.0F0F7341841E@www.antlr.org>

At 15:44 29/03/2009, Rick Mann wrote:
 >DecimalLiteral
 >	: '0'..'9' '0'..'9'* { $value = };
 >
 >FloatingPointLiteral
 >	:	('0'..'9')+ '.' ('0'..'9')* Exponent?
 >	|	('0'..'9')+ Exponent
 >	|	('0'..'9')+
 >	;

Note that these rules are lexically ambiguous -- the final alt of 
FloatingPointLiteral is indistinguishable from DecimalLiteral, and 
all of the alternatives share a common left prefix.  This is going 
to get you into trouble.

You should rewrite these two rules into a single lexer rule and 
left-factor the common prefix away.

 >And a number of parser rules that refer to them. Do I need
 >to write actions like this:
 >
 >$value = Integer.parseInt($DecimalLiteral.text);

Yes.  The only return from a lexer rule is the token.

Having said that, you *can* add custom data to a token (exactly 
how you do that depends on your target language; Java requires 
subclassing the token, for example), so it's not completely 
impossible to deal with it at lexing time; but it's usually not 
worth the hassle.


From rmann at latencyzero.com  Sat Mar 28 22:43:08 2009
From: rmann at latencyzero.com (Rick Mann)
Date: Sat, 28 Mar 2009 22:43:08 -0700
Subject: [antlr-interest] Repeatedly parsing number literals
In-Reply-To: <C8B2ECA5-3D61-465E-A9AC-7D2AE28AFD3A@latencyzero.com>
References: <C8B2ECA5-3D61-465E-A9AC-7D2AE28AFD3A@latencyzero.com>
Message-ID: <7504AD15-F36E-4FD7-9438-621848E7F353@latencyzero.com>


On Mar 28, 2009, at 22:36:31, Gavin Lambert wrote:

> At 15:44 29/03/2009, Rick Mann wrote:
> >DecimalLiteral
> >	: '0'..'9' '0'..'9'* { $value = };
> >
> >FloatingPointLiteral
> >	:	('0'..'9')+ '.' ('0'..'9')* Exponent?
> >	|	('0'..'9')+ Exponent
> >	|	('0'..'9')+
> >	;
>
> Note that these rules are lexically ambiguous -- the final alt of  
> FloatingPointLiteral is indistinguishable from DecimalLiteral, and  
> all of the alternatives share a common left prefix.  This is going  
> to get you into trouble.
>
> You should rewrite these two rules into a single lexer rule and left- 
> factor the common prefix away.

Well, you would think that this is true, but it turns out not to be. I  
lifted those rules from Terrence's Java grammar. Sure enough, it works  
as expected, to the degree that if a parser calls for a float literal,  
and I give it a literal that would match DecimalLiteral, it complains.

> >And a number of parser rules that refer to them. Do I need
> >to write actions like this:
> >
> >$value = Integer.parseInt($DecimalLiteral.text);
>
> Yes.  The only return from a lexer rule is the token.
>
> Having said that, you *can* add custom data to a token (exactly how  
> you do that depends on your target language; Java requires  
> subclassing the token, for example), so it's not completely  
> impossible to deal with it at lexing time; but it's usually not  
> worth the hassle.

Thanks. I ended up making parser rules "decNum" and "floatNum". I hope  
that's kosher.


-- 
Rick


From antlr at mirality.co.nz  Sat Mar 28 22:53:29 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 29 Mar 2009 18:53:29 +1300
Subject: [antlr-interest] Repeatedly parsing number literals
In-Reply-To: <7504AD15-F36E-4FD7-9438-621848E7F353@latencyzero.com>
References: <C8B2ECA5-3D61-465E-A9AC-7D2AE28AFD3A@latencyzero.com>
	<7504AD15-F36E-4FD7-9438-621848E7F353@latencyzero.com>
Message-ID: <20090329055401.9CB5F3418449@www.antlr.org>

At 18:43 29/03/2009, Rick Mann wrote:
 >Well, you would think that this is true, but it turns out not to 

 >be. I lifted those rules from Terrence's Java grammar. Sure
 >enough, it works as expected, to the degree that if a parser
 >calls for a float literal, and I give it a literal that would
 >match DecimalLiteral, it complains.

The parser has no influence over the lexer, so what the parser 
calls for is irrelevant -- for a given bit of input text you will 
always get the same token regardless of parser context.

In theory, if you throw the input "1234" at the rules you posted, 
it should always end up being a DecimalLiteral (and you should 
have gotten an "unreachable alternative" warning for 
FloatLiteral).  This is because when two rules can be statically 
determined to match the same input then ANTLR will normally pick 
the rule that was listed first.  If you give it input such as 
"1234.5" then you'll get a FloatLiteral; if you give it 
"1234.abcd" or "1234..1238" then you'll get a runtime error within 
the bowels of FloatLiteral, even if you have dot or double-dot 
tokens available.

Performance will definitely be improved if you combine and 
left-factor, though -- that'll reduce it to k=1 decisions, if done 
right.


From jimi at temporal-wave.com  Sun Mar 29 09:04:41 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Mar 2009 09:04:41 -0700
Subject: [antlr-interest] Does pANTLR3_STRING need to be manually
	deleted?
In-Reply-To: <5a92ffb60903270155g2847fc18t13fc7b7cb1c31a31@mail.gmail.com>
References: <5a92ffb60903270155g2847fc18t13fc7b7cb1c31a31@mail.gmail.com>
Message-ID: <49CF9C19.9040103@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090329/2db65f15/attachment.html 

From jimi at temporal-wave.com  Sun Mar 29 09:26:14 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Mar 2009 09:26:14 -0700
Subject: [antlr-interest] Apparent inconsistent token handling in AST
 grammars.
In-Reply-To: <93BD0000E4D72D458F0E8CDE6BA971A80BDCDF1E@CINMLVEM11.e2k.ad.ge.com>
References: <93BD0000E4D72D458F0E8CDE6BA971A80BDCDF1E@CINMLVEM11.e2k.ad.ge.com>
Message-ID: <49CFA126.5010204@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090329/58466fbf/attachment.html 

From jimi at temporal-wave.com  Sun Mar 29 09:42:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Mar 2009 09:42:51 -0700
Subject: [antlr-interest] Bug in dynamic scopes in C target
In-Reply-To: <AF1D5A40-DDEC-4F31-B35E-65D94144D58D@classdump.org>
References: <AF1D5A40-DDEC-4F31-B35E-65D94144D58D@classdump.org>
Message-ID: <49CFA50B.2020604@temporal-wave.com>

Kay R?pke wrote:
> Hi Jim!
>
> I've noticed that the a rule like this will crash when targetting C 
> (ANTLR 3.1.3):
>
> rule
> @scope { int foo; }
> @after { $rule::foo = 1; }
> : 'bar';
>
> It's ok with Java and is due to the order of clean up performed at 
> rule exit (the @after action will deref the freed scope top).
> See the templates rule(), ruleCleanUp() and scopeClean() in C.stg.
>
> It's probably very simple to fix by making ruleCleanUp() not call 
> scopeClean() directly, but only do it after the @after action is done.
> That is what Java.stg does.
Not quite that simple I am afraid.
>
> I'll work around it for the time being by tweaking the template :)
>
> cheers,
> -k
>
> P.S.: I haven't checked any other targets, so the other authors might 
> want to check with theirs :)
It's not so much a buig as that I don't support @after yet ;-)

The issue (and I have a JIRA for it) is that certain combinations, such 
as backtracking and @init mean that as it stands there is no good way to 
make it work for everything just by reordering the string template. Ter 
is using the after clause of the exception and I don't have such a 
thing. So, what I will need to do is introduce a flag I think. I just 
have not had time to dive into this and the last 3 times I tried to fix 
this generically I broke the  existing stuff tha tis out there :-(

Jim

From yimm8369 at hotmail.com  Sun Mar 29 15:54:02 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Mon, 30 Mar 2009 06:54:02 +0800
Subject: [antlr-interest] Code translation problem
Message-ID: <BAY122-W37F1C0BE8A22E62610244DDB8C0@phx.gbl>


 

 

Hi all,

 

How to change :

public function ab(){
      var a:Class = 2 ;
      var b:Class = 2 ; 
   }  

 

to 

public function ab(){
      var a,b:Class = 2 ;
       }  

 

using TokenRewriteStream?

 

 

Annie


   

_________________________________________________________________
??K???????????????????MClub????
http://club.msn.cn/?form=3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090330/927b593a/attachment.html 

From jevitha at gmail.com  Sun Mar 29 22:00:29 2009
From: jevitha at gmail.com (jevitha)
Date: Mon, 30 Mar 2009 10:30:29 +0530
Subject: [antlr-interest] Reg the Debug option in ANTLR-Works
In-Reply-To: <F17B859F-1BDD-419F-81EA-BAB61E7234C5@cs.usfca.edu>
References: <cb65abb00903270555l599e9b63vb6f137bfc1d5caf9@mail.gmail.com>
	<AB9B055E-209A-4FCE-866F-8E814C466E57@cs.usfca.edu>
	<cb65abb00903272159h73fda69aof887ba3589da93af@mail.gmail.com>
	<F17B859F-1BDD-419F-81EA-BAB61E7234C5@cs.usfca.edu>
Message-ID: <cb65abb00903292200w2e3dc87dr658f4adca2bff714@mail.gmail.com>

Hi,

    I had not cleared the text area while i was giving the file as
input. The problem was solved when i cleared the text area and gave
the input file. Thanks for the solution.

Feature suggestion:  In the next version of AntlrWorks, probably you
can choose to clear the text area automatically when the file option
is selected for input.

Thanks,
Jevitha

On 3/28/09, Terence Parr <parrt at cs.usfca.edu> wrote:
>  From Jean Bovet (AW man):
>
>> The text input zone is limited to 8K because that's the max size I
>> can store in the prefs. However, selecting a huge file should be
>> fine (he should make sure to clear the text area if he previously
>> pasted his big text). I just tried with a 1 MB input file. If he
>> still gets the error, ask him for a screenshot because something
>> else might be not correct.
>
> Terence
>
> On Mar 27, 2009, at 9:59 PM, jevitha wrote:
>
>>
>> I had tried file option too . Both the options Text and File gives
>> the same error . Is there any option which can be sent through
>> command line ?
>>
>> --
>> Best Regards,
>> Jevitha
>>
>>
>> On Fri, Mar 27, 2009 at 9:57 PM, Terence Parr <parrt at cs.usfca.edu>
>> wrote:
>> tell it to load input from a file.
>> T
>>
>> On Mar 27, 2009, at 5:55 AM, jevitha wrote:
>>
>> Hi,
>>
>>  Im trying to use the Debug option of antlrworks. It seems to hold
>> only 8192 bytes of input. I wanted to test much larger input for my
>> grammar. I would like to know the option to tweak so that i can
>> debug with large input files.
>>
>> --
>> Best Regards,
>> Jevitha
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>
>

From siemsen at ucar.edu  Sun Mar 29 23:17:47 2009
From: siemsen at ucar.edu (Pete Siemsen)
Date: Mon, 30 Mar 2009 00:17:47 -0600
Subject: [antlr-interest] using the antlr maven repository
Message-ID: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>

I have had ANTLR working with maven for a while.  I'm interested in  
using a newer ANTLR.  The one in my repository is 2.7.7.  I'd like to  
use newer version of ANTLR if possible.  I have the repository  
definition suggested by the web page at http://www.antlr.org/wiki/display/ANTLR3/2008/11/20/Maven+and+Hudson+continuous+build+server+now+running

If I change my (working) pom.xml from

                 <dependency>
                         <groupId>org.antlr</groupId>
                         <artifactId>antlr-runtime</artifactId>
                         <version>3.0.1</version>
                 </dependency>

to

                 <dependency>
                         <groupId>org.antlr</groupId>
                         <artifactId>antlr-runtime</artifactId>
                         <version>3.1.3</version>
                 </dependency>

I get the 3.1.3, and I get lots of "cannot find symbol _fsp" and  
"cannot find symbol errorRecovery".  I've tried deleting my ~/.m2/ 
reposinory/antlr/antlr/2.7.7, aonly to watch it get downloaded again.

Any suggestion appreciated.

-- Pete



From egesuato at ibc.it  Mon Mar 30 01:54:08 2009
From: egesuato at ibc.it (Emanuele Gesuato)
Date: Mon, 30 Mar 2009 10:54:08 +0200
Subject: [antlr-interest] Escaping single quotes in a lexer
In-Reply-To: <49CCFE0F.4060205@ibc.it> 
References: <49CCFE0F.4060205@ibc.it> 
Message-ID: <49D088B0.5050900@ibc.it>

Gavin Lambert wrote:
> At 05:25 28/03/2009, Emanuele Gesuato wrote:
>  >DELIM : "\'' ('\\' ('\'')? | ~('\\' | '\''))* '\'";
>  >
>  >As described below i'm using antlr 2.7.6. I've tried to use it
>  >as a delimiter to my string using:
>  >
>  >STRING : DELIM((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)DELIM;
> 
> The rule I posted is not a delimiter rule; it is a rule for matching the 
> entire STRING.
> 
> In v2 syntax it'd be:
> 
> STRING : "'" ("\\" ("'")? | ~("\\" | "'"))* "'";
> 
> (I don't quite remember if you need to double the backslashes in v2, but 
> I think you do.)
> 

What if i want to maintain as inalterate as possibile the original STRING ?

STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";

Is it possible to change it to something similar to

STRING : "'"((JOLLY)?(PAROLE|INTEGER|ESCAPE)(JOLLY)?)"'";

Where ESCAPE is a regexp to match the escaping of single quotes ?


Here is the other definitions that help you understand what is STRING:
protected SPAZIO    : ' ';
protected CIFRA        : '0'..'9';
protected LETTERA    : ('a'..'z'|'A'..'Z'|'_'|'\\'|'.'|'-');
protected PAROLA    : LETTERA(CIFRA|LETTERA)*;
protected PAROLE    : PAROLA((SPAZIO)+(PAROLA))*;
protected INTEGER    : (CIFRA)+;
JOLLY            : "*";


Thanks,
Emanuele



From richard.thrippleton at progress.com  Mon Mar 30 02:52:52 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Mon, 30 Mar 2009 10:52:52 +0100
Subject: [antlr-interest] Bug report;
	SCOPE_SIZE returning incorrect result in the C runtime
Message-ID: <49D09674.8040708@progress.com>

I was finding that SCOPE_SIZE(somescope) would report a scope size of 
'1' when inside a dynamic scope (correct), '0' before entering that 
scope (correct), but then '1' after leaving that scope (incorrect).

The issue seems to be that the 'size' method on a stack returns the 
amount of memory allocated for that stack, not the number of items in 
the stack. My workaround was to modify C.stg
"#define SCOPE_SIZE(scope)   ctx->p<name>_##scope##Stack_limit"

(note that I've only verified this in 3.1.2, though it seems to be the 
same in 3.1.3 based on a brief skim of the source)

Richard

From richard.thrippleton at progress.com  Mon Mar 30 03:07:00 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Mon, 30 Mar 2009 11:07:00 +0100
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises non-primitive
 return values
Message-ID: <49D099C4.3040609@progress.com>

When I have a rule of the form

"rule returns [std::vector<int> foo]
..."

the generated code for that rule will start with

"std::vector<int> foo = NULL;"

which will (obviously) not compile. I've modified the relevant .stg to 
prevent it generating initialisation code for return values (declaration 
only), and not encountered any issues in my grammars thus far.

Richard

From richard.thrippleton at progress.com  Mon Mar 30 03:17:25 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Mon, 30 Mar 2009 11:17:25 +0100
Subject: [antlr-interest] Bug report;
	generated C code fails to compile with empty scopes
Message-ID: <49D09C35.1090207@progress.com>

With rules of the form

"rulename
scope {}
..."

the generated code for that rule will attempt to push and pop the 
rulename scope stack, but the Push, Pop and Top members have not been 
defined.

(fwiw, empty scopes are actually useful in the grammars I'm building :-) )

Richard

From richard.thrippleton at progress.com  Mon Mar 30 03:27:16 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Mon, 30 Mar 2009 11:27:16 +0100
Subject: [antlr-interest] Bug report;
 use of multiple global scopes in a rule fails to push one of them
 (generated C code)
Message-ID: <49D09E84.5040105@progress.com>

A rule of the form:

"rulename
scope scope1;
scope scope2;"

will generate code that only pushes a new element onto the scope2 stack.

However, the following modification _will_ generate correct C code.
"rulename
scope scope1,scope2;"


Richard

From g.r.vansickle at att.net  Mon Mar 30 06:57:09 2009
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 30 Mar 2009 08:57:09 -0500
Subject: [antlr-interest] Bug report;
	generated C(++) code inappropriately initialises non-primitive
	return values
In-Reply-To: <49D099C4.3040609@progress.com>
References: <49D099C4.3040609@progress.com>
Message-ID: <61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>


> From: Richard Thrippleton
> 
> When I have a rule of the form
> 
> "rule returns [std::vector<int> foo]
> ..."
>

Unfortunately, you can't do that.  Under the hood, in the C runtime, rules
return a malloc()'ed struct, so your vector<>'s constructor never gets
called and you end up with a bit of a mess.  The only way to make this work
at the moment is to do something like this:

rule returns [std::vector<int> *foo]
@init
{
	foo = new std::vector<int>;
}

There was talk a week or two ago on the list regarding replacing explicit
calls to malloc() with either a redefineable macro (e.g.
ANTLR_MALLOC_OR_NEW_YOU_DECIDE()), or (my preference) something to the
effect of:

#ifdef __cplusplus
// We're being built as C++.
#define ANTLR_NEW() new ...
#else
/* We're being built as C */
#define ANTLR_NEW() malloc ...
#endif

This would allow what you have above to "just work".  I don't know what if
anything became of it however.
 
> the generated code for that rule will start with
> 
> "std::vector<int> foo = NULL;"
> 

Really, it adds that "= NULL" of its own volition?  That sounds like a bug.
All kinds of C PODs (structs for instance) could be in there, none of which
could be pointers, and that should then fail on C as well as C++.  What
version is this?

> which will (obviously) not compile. I've modified the 
> relevant .stg to prevent it generating initialisation code 
> for return values (declaration only), and not encountered any 
> issues in my grammars thus far.
> 
> Richard

Like I noted above, you will run into problems due to the malloc() vs. new
thing.  At least I did the last time I tried it.

-- 
Gary R. Van Sickle


From paul.bouche at nsn.com  Mon Mar 30 07:32:28 2009
From: paul.bouche at nsn.com (=?ISO-8859-15?Q?=22Paul_Bouch=E9_=28NSN=29=22?=)
Date: Mon, 30 Mar 2009 16:32:28 +0200
Subject: [antlr-interest] Strength of ANTLR lexer
Message-ID: <49D0D7FC.1060202@nsn.com>

Hello,

we repeatedly had the following problem. We had overlapping character 
sets for different TOKEN definitions.
i.e.:
mapping : KEY '=' ATTRIBUTE;
KEY : ('A'..'Z' | 'a'..'z')+;
ATTRIBUTE : ('A'..'Z' | 'a'..'z' | '0'..'9')+;

The lexer always generates KEY tokens for abc, but what we actually want 
is ATTRIBUTE tokens. The behvavior is of course wanted in case of
token definitions for certain keywords etc. But this is not always 
really good.

Things that can be easily expressed in an EBNF cannot be so easily 
written in ANTLR considering the above example. In the EBNF I could write:
mapping ::== KEY "=" ATTRIBUTE.
KEY ::== ("A"| .. | "Z"| "a" | .. | "z") ("A"| .. | "Z"| "a" | .. | "z")*.
ATTRIBUTE ::== ("A"| .. | "Z"| "a" | .. | "z" | "0" | .. | "9") ("A"| .. 
| "Z"| "a" | .. | "z" | "0" | .. | "9")*.

but to express the same thing in ANTLR because of how the ANTLR lexer 
works I have to write:
mapping : KEY '=' (ATTRIBUTE | KEY); // really counter intuitive
KEY : ('A'..'Z' | 'a'..'z')+;
ATTRIBUTE : ('A'..'Z' | 'a'..'z' | '0'..'9')+;

The problem is that the lexer is toally indepent of the parser and it 
operates totally without context or structure.  Of course everywhere one 
can find this is how to solve this problem, but imo it is really not a 
grammar problem but an ANTLR limitation. Of course another solution is 
to just emit WORD tokens and check in the parser if the value is valid, 
but why lex again what as already been lexed. Other solutions also 
include building the grammar structure backinto the lexer via syn preds 
which is also not what one likes.

Any comments or solutions?
@Ter why was it done this way? Would it not be possible to let the lexer 
be operated by the parser, i.e. something like this:
// ---- grammar start
grammar LexerWithContext;
options {
    noTokenBuffer = true; // new option?
}
mapping : KEY '=' ATTRIBUTE;
KEY ::== ("A"| .. | "Z"| "a" | .. | "z") ("A"| .. | "Z"| "a" | .. | "z")*.
ATTRIBUTE ::== ("A"| .. | "Z"| "a" | .. | "z" | "0" | .. | "9") ("A"| .. 
| "Z"| "a" | .. | "z" | "0" | .. | "9")*.
// ---- grammar stop
will for the Java target yield:

public class LexerWithContextParser {
LexerWithContextLexer lexer;
    public final mapping() {
        lexer.mKEY();
        lexer.mT326();
        lexer.ATTRIBUTE();
    }
}
iff. they are defined together?

BR,
Paul

-- 
Paul Bouch?
Voice: +49 30 590080-1284
 
Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin, Germany
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
WEEE-Reg.-Nr.: DE 52984304

Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens Networks Management GmbH
Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri Kivinen
Sitz der Gesellschaft: M?nchen / Registered office: Munich
Registergericht: M?nchen / Commercial registry: Munich, HRB 163416


From troy.daniels at baesystems.com  Mon Mar 30 07:54:27 2009
From: troy.daniels at baesystems.com (Daniels, Troy (US SSA))
Date: Mon, 30 Mar 2009 10:54:27 -0400
Subject: [antlr-interest] Strength of ANTLR lexer
Message-ID: <7nahfj$2mchk4@dmzms99802.na.baesystems.com>

The standard solution here to define fairly generic tokens in the lexer, then have parser rules that distinguish between them.

mapping : attribute '=' attribute;
key: ALPHA ;
attribute: ALPHA | ALPHANUM;
ALPHA : ('A'..'Z' | 'a'..'z')+;
ALPHANUM : ('A'..'Z' | 'a'..'z' | '0'..'9')+;

You'll likely need predicates in you key and attribute rules.  (Key might need to accept an alphanum if it has no numbers.)  

There's ambiguity between ALPHANUM and ALPHA, so the order of them is important.  

Troy

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of "Paul Bouch? (NSN)"
> Sent: Monday, March 30, 2009 10:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Strength of ANTLR lexer
> 
> Hello,
> 
> we repeatedly had the following problem. We had overlapping character
> sets for different TOKEN definitions.
> i.e.:
> mapping : KEY '=' ATTRIBUTE;
> KEY : ('A'..'Z' | 'a'..'z')+;
> ATTRIBUTE : ('A'..'Z' | 'a'..'z' | '0'..'9')+;
> 
> The lexer always generates KEY tokens for abc, but what we actually want
> is ATTRIBUTE tokens. The behvavior is of course wanted in case of
> token definitions for certain keywords etc. But this is not always
> really good.
> 
> Things that can be easily expressed in an EBNF cannot be so easily
> written in ANTLR considering the above example. In the EBNF I could write:
> mapping ::== KEY "=" ATTRIBUTE.
> KEY ::== ("A"| .. | "Z"| "a" | .. | "z") ("A"| .. | "Z"| "a" | .. | "z")*.
> ATTRIBUTE ::== ("A"| .. | "Z"| "a" | .. | "z" | "0" | .. | "9") ("A"| ..
> | "Z"| "a" | .. | "z" | "0" | .. | "9")*.
> 
> but to express the same thing in ANTLR because of how the ANTLR lexer
> works I have to write:
> mapping : KEY '=' (ATTRIBUTE | KEY); // really counter intuitive
> KEY : ('A'..'Z' | 'a'..'z')+;
> ATTRIBUTE : ('A'..'Z' | 'a'..'z' | '0'..'9')+;
> 
> The problem is that the lexer is toally indepent of the parser and it
> operates totally without context or structure.  Of course everywhere one
> can find this is how to solve this problem, but imo it is really not a
> grammar problem but an ANTLR limitation. Of course another solution is
> to just emit WORD tokens and check in the parser if the value is valid,
> but why lex again what as already been lexed. Other solutions also
> include building the grammar structure backinto the lexer via syn preds
> which is also not what one likes.
> 
> Any comments or solutions?
> @Ter why was it done this way? Would it not be possible to let the lexer
> be operated by the parser, i.e. something like this:
> // ---- grammar start
> grammar LexerWithContext;
> options {
>     noTokenBuffer = true; // new option?
> }
> mapping : KEY '=' ATTRIBUTE;
> KEY ::== ("A"| .. | "Z"| "a" | .. | "z") ("A"| .. | "Z"| "a" | .. | "z")*.
> ATTRIBUTE ::== ("A"| .. | "Z"| "a" | .. | "z" | "0" | .. | "9") ("A"| ..
> | "Z"| "a" | .. | "z" | "0" | .. | "9")*.
> // ---- grammar stop
> will for the Java target yield:
> 
> public class LexerWithContextParser {
> LexerWithContextLexer lexer;
>     public final mapping() {
>         lexer.mKEY();
>         lexer.mT326();
>         lexer.ATTRIBUTE();
>     }
> }
> iff. they are defined together?
> 
> BR,
> Paul
> 
> --
> Paul Bouch?
> Voice: +49 30 590080-1284
> 
> Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin,
> Germany
> Sitz der Gesellschaft: M?nchen / Registered office: Munich
> Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
> WEEE-Reg.-Nr.: DE 52984304
> 
> Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens
> Networks Management GmbH
> Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
> Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri
> Kivinen
> Sitz der Gesellschaft: M?nchen / Registered office: Munich
> Registergericht: M?nchen / Commercial registry: Munich, HRB 163416
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From jimi at temporal-wave.com  Mon Mar 30 07:59:53 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 07:59:53 -0700
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
Message-ID: <49D0DE69.3050802@temporal-wave.com>

Pete Siemsen wrote:
> I have had ANTLR working with maven for a while.  I'm interested in  
> using a newer ANTLR.  The one in my repository is 2.7.7.  I'd like to  
> use newer version of ANTLR if possible.  I have the repository  
> definition suggested by the web page at http://www.antlr.org/wiki/display/ANTLR3/2008/11/20/Maven+and+Hudson+continuous+build+server+now+running
>
> If I change my (working) pom.xml from
>
>                  <dependency>
>                          <groupId>org.antlr</groupId>
>                          <artifactId>antlr-runtime</artifactId>
>                          <version>3.0.1</version>
>                  </dependency>
>
> to
>
>                  <dependency>
>                          <groupId>org.antlr</groupId>
>                          <artifactId>antlr-runtime</artifactId>
>                          <version>3.1.3</version>
>                  </dependency>
>
> I get the 3.1.3, and I get lots of "cannot find symbol _fsp" and  
> "cannot find symbol errorRecovery".  I've tried deleting my ~/.m2/ 
> reposinory/antlr/antlr/2.7.7, aonly to watch it get downloaded again.
>   
v3 is dependent on 2.7.7 but it does not use it to compile the grammars. 
You will need to do the following:

1) mvn clean
2) Move your .g files under src/main/antlr3 (unless you specify a 
different location but it is better to use the Maven defaults as it 
reduces pom complexity). The v2 plugin unfortunately used the directory 
antlr instead of antlr2, so the v3 plugin now defaults to anltr3 to 
avoid confusion.
3) Of course your v2 grammars will not work with v3 out of the box, you 
must convert them, which is generally fairly simple but in some cases 
can be involved.

Documentation for plugin is at:

http://antlr.org/antlr3-maven-plugin/index.html

Finally, you do not need a different repository as ANTLR is now part of 
the Maven central repository and synced directly from our own release 
repository.

Hope that helps,

Jim



From s.barnett-cormack at lancaster.ac.uk  Mon Mar 30 08:05:35 2009
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 30 Mar 2009 16:05:35 +0100
Subject: [antlr-interest] Strength of ANTLR lexer
In-Reply-To: <7nahfj$2mchk4@dmzms99802.na.baesystems.com>
References: <7nahfj$2mchk4@dmzms99802.na.baesystems.com>
Message-ID: <49D0DFBF.8090102@lancaster.ac.uk>

Daniels, Troy (US SSA) wrote:
> The standard solution here to define fairly generic tokens in the lexer, then have parser rules that distinguish between them.
> 
> mapping : attribute '=' attribute;
> key: ALPHA ;
> attribute: ALPHA | ALPHANUM;
> ALPHA : ('A'..'Z' | 'a'..'z')+;
> ALPHANUM : ('A'..'Z' | 'a'..'z' | '0'..'9')+;
> 
> You'll likely need predicates in you key and attribute rules.  (Key might need to accept an alphanum if it has no numbers.)  
> 
> There's ambiguity between ALPHANUM and ALPHA, so the order of them is important.  

Which could be improved with refactoring:

fragment ALPHANUM : ;

ALPHA : ('A'..'Z' | 'a'..'z' | '0'..'9' {$type=ALPHANUM} )+;

(Might be able to make that ALPHA rule more efficient)

Sam


>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of "Paul Bouch? (NSN)"
>> Sent: Monday, March 30, 2009 10:32 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Strength of ANTLR lexer
>>
>> Hello,
>>
>> we repeatedly had the following problem. We had overlapping character
>> sets for different TOKEN definitions.
>> i.e.:
>> mapping : KEY '=' ATTRIBUTE;
>> KEY : ('A'..'Z' | 'a'..'z')+;
>> ATTRIBUTE : ('A'..'Z' | 'a'..'z' | '0'..'9')+;
>>
>> The lexer always generates KEY tokens for abc, but what we actually want
>> is ATTRIBUTE tokens. The behvavior is of course wanted in case of
>> token definitions for certain keywords etc. But this is not always
>> really good.
>>
>> Things that can be easily expressed in an EBNF cannot be so easily
>> written in ANTLR considering the above example. In the EBNF I could write:
>> mapping ::== KEY "=" ATTRIBUTE.
>> KEY ::== ("A"| .. | "Z"| "a" | .. | "z") ("A"| .. | "Z"| "a" | .. | "z")*.
>> ATTRIBUTE ::== ("A"| .. | "Z"| "a" | .. | "z" | "0" | .. | "9") ("A"| ..
>> | "Z"| "a" | .. | "z" | "0" | .. | "9")*.
>>
>> but to express the same thing in ANTLR because of how the ANTLR lexer
>> works I have to write:
>> mapping : KEY '=' (ATTRIBUTE | KEY); // really counter intuitive
>> KEY : ('A'..'Z' | 'a'..'z')+;
>> ATTRIBUTE : ('A'..'Z' | 'a'..'z' | '0'..'9')+;
>>
>> The problem is that the lexer is toally indepent of the parser and it
>> operates totally without context or structure.  Of course everywhere one
>> can find this is how to solve this problem, but imo it is really not a
>> grammar problem but an ANTLR limitation. Of course another solution is
>> to just emit WORD tokens and check in the parser if the value is valid,
>> but why lex again what as already been lexed. Other solutions also
>> include building the grammar structure backinto the lexer via syn preds
>> which is also not what one likes.
>>
>> Any comments or solutions?
>> @Ter why was it done this way? Would it not be possible to let the lexer
>> be operated by the parser, i.e. something like this:
>> // ---- grammar start
>> grammar LexerWithContext;
>> options {
>>     noTokenBuffer = true; // new option?
>> }
>> mapping : KEY '=' ATTRIBUTE;
>> KEY ::== ("A"| .. | "Z"| "a" | .. | "z") ("A"| .. | "Z"| "a" | .. | "z")*.
>> ATTRIBUTE ::== ("A"| .. | "Z"| "a" | .. | "z" | "0" | .. | "9") ("A"| ..
>> | "Z"| "a" | .. | "z" | "0" | .. | "9")*.
>> // ---- grammar stop
>> will for the Java target yield:
>>
>> public class LexerWithContextParser {
>> LexerWithContextLexer lexer;
>>     public final mapping() {
>>         lexer.mKEY();
>>         lexer.mT326();
>>         lexer.ATTRIBUTE();
>>     }
>> }
>> iff. they are defined together?
>>
>> BR,
>> Paul
>>
>> --
>> Paul Bouch?
>> Voice: +49 30 590080-1284
>>
>> Nokia Siemens Networks GmbH & Co. KG, An den Treptowers 1, 12435 Berlin,
>> Germany
>> Sitz der Gesellschaft: M?nchen / Registered office: Munich
>> Registergericht: M?nchen / Commercial registry: Munich, HRA 88537
>> WEEE-Reg.-Nr.: DE 52984304
>>
>> Pers?nlich haftende Gesellschafterin / General Partner: Nokia Siemens
>> Networks Management GmbH
>> Gesch?ftsleitung / Board of Directors: Lydia Sommer, Olaf Horsthemke
>> Vorsitzender des Aufsichtsrats / Chairman of supervisory board: Lauri
>> Kivinen
>> Sitz der Gesellschaft: M?nchen / Registered office: Munich
>> Registergericht: M?nchen / Commercial registry: Munich, HRB 163416
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Mon Mar 30 08:15:51 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 08:15:51 -0700
Subject: [antlr-interest] Bug report;
 SCOPE_SIZE returning incorrect result in the C runtime
In-Reply-To: <49D09674.8040708@progress.com>
References: <49D09674.8040708@progress.com>
Message-ID: <49D0E227.3090309@temporal-wave.com>

Richard Thrippleton wrote:
> I was finding that SCOPE_SIZE(somescope) would report a scope size of 
> '1' when inside a dynamic scope (correct), '0' before entering that 
> scope (correct), but then '1' after leaving that scope (incorrect).
>
> The issue seems to be that the 'size' method on a stack returns the 
> amount of memory allocated for that stack, not the number of items in 
> the stack. My workaround was to modify C.stg
> "#define SCOPE_SIZE(scope)   ctx->p<name>_##scope##Stack_limit"
>
> (note that I've only verified this in 3.1.2, though it seems to be the 
> same in 3.1.3 based on a brief skim of the source)
>   
Yes, that is a bug caused by changing to caching the stack rather than 
clearing and recreating thousands of them. I will fix it in the 
development branch for tonights build.

You can now get the latest snapshot from:

   http://antlr.org/downloads (look for 
antlr-master-3.1.4-SNAPSHOT-completejar.jar).

This is a complete jar with all the dependencies built in so you can 
execute it with:

  java -jar antlr-master-3.1.4-SNAPSHOT-completejar.jar  t.g x.g

The jar is built and redeployed at about 1AM PDT every night.

Jim




From richard.thrippleton at progress.com  Mon Mar 30 08:16:49 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Mon, 30 Mar 2009 16:16:49 +0100
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises
 non-primitive	return values
In-Reply-To: <61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
References: <49D099C4.3040...@progress.com>
	<61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
Message-ID: <49D0E261.2070501@progress.com>

Gary R. Van Sickle wrote:
>> From: Richard Thrippleton
>> 
>> When I have a rule of the form
>> 
>> "rule returns [std::vector<int> foo] ..."
>> 
> 
> Unfortunately, you can't do that.  Under the hood, in the C runtime, 
> rules return a malloc()'ed struct, so your vector<>'s constructor 
> never gets called and you end up with a bit of a mess.
No, return values seem to be stack allocated; at least this has been my
experience in 3.1.1 and 3.1.2

> The only way to make this work at the moment is to do something like
> this:
> 
> rule returns [std::vector<int> *foo] @init { foo = new 
> std::vector<int>; }
> 
> There was talk a week or two ago on the list regarding replacing 
> explicit calls to malloc() with either a redefineable macro (e.g. 
> ANTLR_MALLOC_OR_NEW_YOU_DECIDE()), or (my preference) something to 
> the effect of:
> 
> #ifdef __cplusplus // We're being built as C++. #define ANTLR_NEW() 
> new ... #else /* We're being built as C */ #define ANTLR_NEW() malloc
>  ... #endif
> 
> This would allow what you have above to "just work".  I don't know 
> what if anything became of it however.
> 
>> the generated code for that rule will start with
>> 
>> "std::vector<int> foo = NULL;"
>> 
> 
> Really, it adds that "= NULL" of its own volition?  That sounds like 
> a bug. All kinds of C PODs (structs for instance) could be in there, 
> none of which could be pointers, and that should then fail on C as 
> well as C++.  What version is this?
Yeah, I'm pretty mystified by this. I'm definitely not trying to NULL
anything myself. By experimentation, it looks like it _tries_ to do the
right thing for different datatypes e.g. it will 0 an int.
> Like I noted above, you will run into problems due to the malloc() 
> vs. new thing.  At least I did the last time I tried it.
Well, I guess this is good news for you then ... should Just Work on
3.1.1 and higher :-)

Richard

From jimi at temporal-wave.com  Mon Mar 30 08:22:15 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 08:22:15 -0700
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises non-primitive
 return values
In-Reply-To: <49D099C4.3040609@progress.com>
References: <49D099C4.3040609@progress.com>
Message-ID: <49D0E3A7.5050106@temporal-wave.com>

Richard Thrippleton wrote:
> When I have a rule of the form
>
> "rule returns [std::vector<int> foo]
> ..."
>
> the generated code for that rule will start with
>
> "std::vector<int> foo = NULL;"
>
> which will (obviously) not compile. I've modified the relevant .stg to 
> prevent it generating initialisation code for return values (declaration 
> only), and not encountered any issues in my grammars thus far.
>   
Yeah - you can't really do that I think. ANTLR does not support very 
complex return type declarations and you are probably just "getting away 
with that". I believe I looked in to not initializing return variables 
and there is some reason that you cannot just disable that 
initialization, but it may just be the behavioral requirements of the 
return value for the rule reference. I do know that sometimes the 
complex declarations will fail though and it is better to use a typedef 
type. We could do with the ability to not initialize things that we 
don't know about really.

A better approach would be to return a pointer rather than the vector, 
or to pass in the reference as a parameter to the rule.

Jim

From Dennis.Benzinger at gmx.net  Mon Mar 30 08:24:44 2009
From: Dennis.Benzinger at gmx.net (Dennis Benzinger)
Date: Mon, 30 Mar 2009 17:24:44 +0200
Subject: [antlr-interest] Why is getTokenNames() defined in BaseRecognizer?
Message-ID: <49D0E43C.3080206@gmx.net>

Hi!

Why is getTokenNames() defined in BaseRecognizer if it only returns a
non null value in the Parser? Wouldn't it be better if were only defined
in Parser?

Are there "historical" reasons for this or will getTokenNames() return a
non null value in the lexer in the future too?


Dennis Benzinger

From jaluber at gmx.de  Mon Mar 30 08:29:06 2009
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 30 Mar 2009 17:29:06 +0200
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises
 non-primitive	return values
In-Reply-To: <49D0E261.2070501@progress.com>
References: <49D099C4.3040...@progress.com>	<61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
	<49D0E261.2070501@progress.com>
Message-ID: <49D0E542.2090107@gmx.de>

Richard Thrippleton schrieb:
> Gary R. Van Sickle wrote:
>>> From: Richard Thrippleton
>>> the generated code for that rule will start with
>>>
>>> "std::vector<int> foo = NULL;"
>>>
>> Really, it adds that "= NULL" of its own volition?  That sounds like 
>> a bug. All kinds of C PODs (structs for instance) could be in there, 
>> none of which could be pointers, and that should then fail on C as 
>> well as C++.  What version is this?
> Yeah, I'm pretty mystified by this. I'm definitely not trying to NULL
> anything myself. By experimentation, it looks like it _tries_ to do the
> right thing for different datatypes e.g. it will 0 an int.

The templates contain a map structure which allows to set the default
values for a certain number of predefined types. The problem with this
approach is that it requires a language with only a limited number of
value types. Otherwise it uses the default initialization which assumes
 pointers. C# has solved the problem with using the default keyword
(which initializes structs with the default constructor, which is the
0-bit pattern, and for references simply null) but I don't think that
C(++) has an equivalent.

Johannes

>> Like I noted above, you will run into problems due to the malloc() 
>> vs. new thing.  At least I did the last time I tried it.
> Well, I guess this is good news for you then ... should Just Work on
> 3.1.1 and higher :-)
> 
> Richard
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Mon Mar 30 08:36:25 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 08:36:25 -0700
Subject: [antlr-interest] Bug report;
 generated C code fails to compile with empty scopes
In-Reply-To: <49D09C35.1090207@progress.com>
References: <49D09C35.1090207@progress.com>
Message-ID: <49D0E6F9.9090404@temporal-wave.com>

Richard Thrippleton wrote:
> With rules of the form
>
> "rulename
> scope {}
> ..."
>
> the generated code for that rule will attempt to push and pop the 
> rulename scope stack, but the Push, Pop and Top members have not been 
> defined.
>
> (fwiw, empty scopes are actually useful in the grammars I'm building :-) )
>   
Sorry, but empty scopes are not supported. Just do this:

scope
{
   int placeHolder;
}


Jim

From jimi at temporal-wave.com  Mon Mar 30 08:38:07 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 08:38:07 -0700
Subject: [antlr-interest] Bug report;
 use of multiple global scopes in a rule fails to push one of them
 (generated C code)
In-Reply-To: <49D09E84.5040105@progress.com>
References: <49D09E84.5040105@progress.com>
Message-ID: <49D0E75F.4050403@temporal-wave.com>

Richard Thrippleton wrote:
> A rule of the form:
>
> "rulename
> scope scope1;
> scope scope2;"
>
> will generate code that only pushes a new element onto the scope2 stack.
>   
That is incorrect syntax (please see past posts to the group) and so 
does not work, but unfortunately the v2 grammar that currently parses 
the v3 grammars is not able to point this out and so you don't get an 
error. Sorry about that
> However, the following modification _will_ generate correct C code.
> "rulename
> scope scope1,scope2;"
>   
This is the correct syntax and is why it works :-)

Jim


From jimi at temporal-wave.com  Mon Mar 30 08:49:54 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 08:49:54 -0700
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises
 non-primitive	return values
In-Reply-To: <61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
References: <49D099C4.3040609@progress.com>
	<61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
Message-ID: <49D0EA22.2070300@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090330/bf1f6518/attachment.html 

From jimi at temporal-wave.com  Mon Mar 30 08:52:23 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 08:52:23 -0700
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises
 non-primitive	return values
In-Reply-To: <49D0E261.2070501@progress.com>
References: <49D099C4.3040...@progress.com>	<61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
	<49D0E261.2070501@progress.com>
Message-ID: <49D0EAB7.2000607@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090330/9112a3ee/attachment.html 

From richard.thrippleton at progress.com  Mon Mar 30 09:30:45 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Mon, 30 Mar 2009 17:30:45 +0100
Subject: [antlr-interest] Bug report;
 generated C code fails to compile with empty scopes
In-Reply-To: <49D0E6F9.9090...@temporal-wave.com>
References: <49D09C35.1090...@progress.com>
	<49D0E6F9.9090...@temporal-wave.com>
Message-ID: <49D0F3B5.20603@progress.com>

Jim Idle wrote:
> Richard Thrippleton wrote:
>> With rules of the form
>>
>> "rulename
>> scope {}
>> ..."
>>
>> the generated code for that rule will attempt to push and pop the 
>> rulename scope stack, but the Push, Pop and Top members have not been 
>> defined.
>>
>> (fwiw, empty scopes are actually useful in the grammars I'm building :-) )
>>   
> Sorry, but empty scopes are not supported. Just do this:
> 
> scope
> {
>    int placeHolder;
> }
Yeah, that's pretty much what I figured, and looking at the code 
generated for scope stacks, I can see why. However, is there any reason 
why antlr wasn't warning me about my invalid scope definition?

Richard

From jimi at temporal-wave.com  Mon Mar 30 09:43:00 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Mar 2009 09:43:00 -0700
Subject: [antlr-interest] Bug report;
 generated C code fails to compile with empty scopes
In-Reply-To: <49D0F3B5.20603@progress.com>
References: <49D09C35.1090...@progress.com>	<49D0E6F9.9090...@temporal-wave.com>
	<49D0F3B5.20603@progress.com>
Message-ID: <49D0F694.3040605@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090330/8bba989e/attachment.html 

From parrt at cs.usfca.edu  Mon Mar 30 14:45:18 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Mar 2009 14:45:18 -0700
Subject: [antlr-interest] Why is getTokenNames() defined in
	BaseRecognizer?
In-Reply-To: <49D0E43C.3080206@gmx.net>
References: <49D0E43C.3080206@gmx.net>
Message-ID: <3795EB70-1B41-47B4-BF4C-A680E5BC761A@cs.usfca.edu>

All recognizers can answer whether token list is; the default  
implementation is simply null. it is overridden in subclasses.
T
On Mar 30, 2009, at 8:24 AM, Dennis Benzinger wrote:

> Hi!
>
> Why is getTokenNames() defined in BaseRecognizer if it only returns a
> non null value in the Parser? Wouldn't it be better if were only  
> defined
> in Parser?
>
> Are there "historical" reasons for this or will getTokenNames()  
> return a
> non null value in the lexer in the future too?
>
>
> Dennis Benzinger
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From daniel.jensen at level3.com  Mon Mar 30 16:44:28 2009
From: daniel.jensen at level3.com (Daniel Jensen)
Date: Mon, 30 Mar 2009 16:44:28 -0700
Subject: [antlr-interest] Apparent problem with dynamic scopes in C target
Message-ID: <49D1595C.30202@level3.com>

Hi folks,

I'm trying to write a grammar where one token, the construct $<num>, is 
valid only in expressions within a certain context and invalid 
everywhere else.  For example, in the expression

    extract($foo, "(\d+)\s+(\d+)\s+(\d+)", $1 + "/" + $2) + ";" + $3

the parser should accept $1 and $2, but the $3 should generate a syntax 
error.  To do this, I define a scope with one member named in_extract.  
in_extract is initialized to 0 when the first entry in the scope stack 
is created, then when additional entries are created, it inherits 
whatever value the enclosing stack had.  When the second comma in the 
extract(...) argument list is recognized, in_extract is set to 1 in the 
current scope.  Finally, a gated semantic predicate using the value of 
in_extract is used to enable or disable the recognition of $<num>.

This all seems to work just as I hoped when I'm generating a Java 
parser, but when I use the C target, it refuses to accept $1, $2 or $3.  
Any clues as to why this might be?  A somewhat stripped down version of 
the grammar that illustrates the problem follows.


grammar MinExpr;

options {
    output = 'AST';
    language = 'C';
    ASTLabelType = pANTLR3_BASE_TREE;
}

scope ExprScope {
    int in_extract;
}

@members {
    int exprScopeDepth = 0;
}

rule    :       expr EOF!;

expr scope ExprScope;
@init {
    if (exprScopeDepth++ == 0)
        $ExprScope::in_extract = 0;
    else
        $ExprScope::in_extract = $ExprScope[-1]::in_extract;
}
        :       alternative (T_OR^ expr)?;

alternative
        :       value (T_CONCAT^ alternative)?;
       
value scope ExprScope;
@init {
    $ExprScope::in_extract = $ExprScope[-1]::in_extract;
}
        :       T_VARIABLE
        |       T_STRING
        |       function_call

        // T_MATCH is only valid inside the 3rd argument to an extract() 
call.
        |       { $ExprScope::in_extract != 0 }?=> T_MATCH
        |       '('! expr ')'!
        ;

function_call
        :       extractFn
        ;

extractFn scope ExprScope;
@init {
    if (exprScopeDepth++ == 0)
        $ExprScope::in_extract = 0;
    else
        $ExprScope::in_extract = $ExprScope[-1]::in_extract;
}
        :       T_EXTRACT^ '('! expr ','! expr ','!
                    {
                        $ExprScope::in_extract = 1;
                    }
                expr ')'!;

WHITESPACE: (' ' | '\t' | '\n')+ { $channel = HIDDEN; };
T_VARIABLE: '$' LETTER (LETTER|DIGIT)*;
T_MATCH: '$' (DIGIT)+;
T_EXTRACT: 'extract';
T_CONCAT: '+';
T_OR: '||';
T_STRING: ('"' NONDQUOTE '"') | ('\'' NONSQUOTE '\'');

fragment NONDQUOTE: (~'"')*;
fragment NONSQUOTE: (~'\'')*;

fragment LETTER: '_' | 'a'..'z' | 'A'..'Z';
fragment DIGIT: '0'..'9';



Thanks for any help!  Suggestions about better ways to do this are also 
welcome.

Daniel

From derek.palma at gmail.com  Mon Mar 30 21:13:19 2009
From: derek.palma at gmail.com (Derek Palma)
Date: Mon, 30 Mar 2009 21:13:19 -0700
Subject: [antlr-interest] Preserving whitespace for ANTLR 3.x
Message-ID: <49d19878.1e068e0a.7a90.1255@mx.google.com>

Hi,

 

I was looking at the preserving whitespace article which seems to be antlr
2.x vintage. I'm not familiar with 2.x and am looking for a 3.x example.
Does any such example exist?

 

Thanks in advance.

Derek

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090330/9695d58b/attachment.html 

From yimm8369 at hotmail.com  Mon Mar 30 21:25:58 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Tue, 31 Mar 2009 12:25:58 +0800
Subject: [antlr-interest] ArrayList output problem in code transformation
In-Reply-To: <3795EB70-1B41-47B4-BF4C-A680E5BC761A@cs.usfca.edu>
References: <49D0E43C.3080206@gmx.net>
	<3795EB70-1B41-47B4-BF4C-A680E5BC761A@cs.usfca.edu>
Message-ID: <BAY122-W382D5B702887E5553024A9DB8A0@phx.gbl>



Hi ,

 

I spend lots of my time on this problem, but I really don't know how to solve it. I am stuck. I need u to help.

 

The description of my question maybe a little long.

 

I want to change
public function ab(){
       var a :int = 15;
       var b :int = 15;
       var c :Number = 5;
       var d:Number = 5 ;
       var e:Number = 3 ;
   }  
 
to 
public function ab(){
      var a,b:int = 15 ;
      var c,d:Number = 5 ;
      var e:Number = 3 ;
       }  

 

in the original statement rule is like this:

 

statement
:variableStatement
;

 

 

Now I add action to statement.

 

statement
scope Symbols;                     //global scope have one field named names.
@init{ 
   $Symbols::names = new ArrayList();
 }           
    variableStatement    { 
    
    for(int i=0;i<$Symbols::names.size();i++)
     { decls.add($Symbols::names.get(i));         //give the value of $Symbols::names to a global ArrayList decls
     } 
    String str=" ";
      $Symbols::out= new ArrayList(); 
      ArrayList visited= new  ArrayList();
     
   for(int i=0;i<decls.size();i++)
     { 
       String si=decls.get(i).toString();
       int pos_i=si.indexOf(":");
       String stri=si.substring(0,pos_i);
       String tempi=si.substring(pos_i);
          
     if(visited.contains(String.valueOf(i))) continue; 
       str="";
       str+="var "+stri; 
         for(int j=i+1;j<decls.size();j++)
      { 
       String sj=decls.get(j).toString();
       int pos_j=sj.indexOf(":");
       String strj=sj.substring(0,pos_j);
       String tempj=sj.substring(pos_j);
       if(tempi.equals(tempj))                              //decide whether the parts after colon are the same.
       {str+=","+strj;
        visited.add(String.valueOf(j));
       }  
       
      }     
       str+=tempi+";";
       $Symbols::out.add(str);
   } 
     System.out.println($Symbols::out);          
     }
  
       
In the variableStatement, $Symbols::names is initialized.
variableStatement

@init{
}
    :   VAR? v=variableDeclaration ( COMMA variableDeclaration )* semic 
      {
      $Symbols::names.add($v.text);
  
  }                       
    ;

Then I got the output:


[var a :int = 15;]
[var a ,b :int = 15;]
[var a ,b :int = 15;, var c :Number = 5;]
[var a ,b :int = 15;, var c ,d:Number = 5;]
[var a ,b :int = 15;, var c ,d:Number = 5;, var e:Number = 3;]

 

Only the last line is the ideal result.

 

I thought  everytime parser parse a new variableStatement, it give out a value, Therefore ,there are 5 variableStatement for 5 output.

 

But when I try to get the last line of out, I even can not use System.out.println($Symbols::out.get(4)); the error message is as follows:

 

java.lang.IndexOutOfBoundsException: Index: 4, Size: 1
 at java.util.ArrayList.RangeCheck(Unknown Source)
 at java.util.ArrayList.get(Unknown Source)

 

My question is how can I get the last line of code.


Thanks a million.

 

Annie

 

 

_________________________________________________________________
MSN ???????????????
http://im.live.cn/emoticons/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/523b89e4/attachment.html 

From anders43 at gmail.com  Tue Mar 31 00:08:46 2009
From: anders43 at gmail.com (ajk .)
Date: Tue, 31 Mar 2009 15:08:46 +0800
Subject: [antlr-interest] resolving function issue
Message-ID: <614b3f5f0903310008y16ddb783p624a3ef5d22a8505@mail.gmail.com>

Hi,

I have a problem that I need to handle, it is related to delegates and I was
wondering if somebody had some ideas how to solve it.

Problem:

Consider the following

delegate void D(Int16)
subroutine F(D d)
subroutine M(int n)
subroutine M(long n)

Now the user writes (where M is the actual method name)

F(M)

In our current design F can not be resolved until all its arguments have
been resolved but how to resolve M if it could be either M1 or M2?

One proposed solution would be put a placeholder so that F gets resolved and
later use the formal argument type to resolve M but if there are several
F's:

F(D1 d)
F(D2 d)

We got then again a problem. How does one normally solve this kind of thing?

Would be grateful for any ideas!
BR
Anders.

PS. ANTLR2/C++
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/951b2b03/attachment.html 

From antlr at mirality.co.nz  Tue Mar 31 01:06:29 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 31 Mar 2009 21:06:29 +1300
Subject: [antlr-interest] Escaping single quotes in a lexer
In-Reply-To: <49D088B0.5050900@ibc.it>
References: <49CCFE0F.4060205@ibc.it>
 <49D088B0.5050900@ibc.it>
Message-ID: <20090331080655.CF5AD3418474@www.antlr.org>

At 21:54 30/03/2009, Emanuele Gesuato wrote:
 >What if i want to maintain as inalterate as possibile the 
original
 >STRING ?
 >
 >STRING : "'"((JOLLY)?(PAROLE|INTEGER)(JOLLY)?)"'";
 >
 >Is it possible to change it to something similar to
 >
 >STRING : "'"((JOLLY)?(PAROLE|INTEGER|ESCAPE)(JOLLY)?)"'";
 >
 >Where ESCAPE is a regexp to match the escaping of single quotes 
?

Yes, it's possible, but you shouldn't do that.  It's best to match 
the entire string (defined as "anything within quotes") as a 
single lexical unit, and worry about validating the specific 
content of the text later on (eg. in the parser or calling code).

Which is what I said before, and what the rule I specified does.


From antlr at mirality.co.nz  Tue Mar 31 01:19:06 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 31 Mar 2009 21:19:06 +1300
Subject: [antlr-interest] Bug report;
 generated C(++) code inappropriately initialises non-primitive
 return values
In-Reply-To: <49D0E542.2090107@gmx.de>
References: <49D099C4.3040...@progress.com>
	<61627DC6EE2045FBB7784F7380AC1D25@DFW5RB41>
	<49D0E261.2070501@progress.com> <49D0E542.2090107@gmx.de>
Message-ID: <20090331081927.73DE0341841A@www.antlr.org>

At 04:29 31/03/2009, Johannes Luber wrote:
 >C# has solved the problem with using the default keyword
 >(which initializes structs with the default constructor,
 >which is the 0-bit pattern, and for references simply null)
 >but I don't think that C(++) has an equivalent.

IIRC there's something in Boost that's the equivalent of the C# 
construct.  But of course that's C++ only.

In C you can initialise any basic variable with 0, though (the 
only exceptions being bare structures and arrays).


From richard.thrippleton at progress.com  Tue Mar 31 02:25:44 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Tue, 31 Mar 2009 10:25:44 +0100
Subject: [antlr-interest] Apparent problem with dynamic scopes in C
	target
In-Reply-To: <49D1595C.30...@level3.com>
References: <49D1595C.30...@level3.com>
Message-ID: <49D1E198.1000707@progress.com>

Daniel Jensen wrote:
> Hi folks,
> 
<snip>
> extractFn scope ExprScope;
> @init {
>     if (exprScopeDepth++ == 0)
>         $ExprScope::in_extract = 0;
>     else
>         $ExprScope::in_extract = $ExprScope[-1]::in_extract;
> }
I'm not sure if this is the cause of your bug, but the C code generated 
by $ExprScope[-1]::in_extract in the current release will not be 
reliable as it uses the underlying stack size to calculate the offset 
(see http://www.antlr.org/pipermail/antlr-interest/2009-March/033760.html).

Try the latest development build (linked in the reply to the above 
message), see if this clears your problem up.

On another note, I will admit to being slightly baffled by 
'exprScopeDepth' - is it correct that it's only ever incremented?

Richard

From ola.bini at gmail.com  Tue Mar 31 06:44:56 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Tue, 31 Mar 2009 15:44:56 +0200
Subject: [antlr-interest] Failure on OpenJDK on Debian
Message-ID: <49D21E58.1020104@gmail.com>

Hi,

I have a grammar that works well with several different Java 5 and Java 
6 environments on both Windows, Linux and MacOS X (including SoyLatte).
But I've just got a bug report that it blows up on OpenJDK build 
1.6.0_0-b11, that can be installed in Debian.
Has anyone else seen this? The errors look like this:

generate.antlr:

     [java] warning(200): ioke.g:269:5: Decision can match input such as "'#'"
using multiple alternatives: 1, 2
     [java] As a result, alternative(s) 2 were disabled for that input
     [java] error(201): ioke.g:269:5: The following alternatives can never be
matched: 2
     [java] 
     [java] warning(209): ioke.g:323:1: Multiple token rules can match input
such as "'#'": T__38, Identifier, StringLiteral, RegexpLiteral, LineComment
     [java] 
     [java] As a result, token(s)
Identifier,StringLiteral,RegexpLiteral,LineComment were disabled for that input
     [java] warning(209): ioke.g:202:1: Multiple token rules can match input
such as "'['": T__34, Identifier
     [java] 
     [java] As a result, token(s) Identifier were disabled for that input
     [java] warning(209): ioke.g:202:1: Multiple token rules can match input
such as "'{'": T__36, Identifier
     [java] 
     [java] As a result, token(s) Identifier were disabled for that input
     [java] Java Result: 1

? ant -version
Apache Ant version 1.7.0 compiled on August 29 2007

java -version
java version "1.6.0_0"
OpenJDK  Runtime Environment (build 1.6.0_0-b11)
OpenJDK 64-Bit Server VM (build 1.6.0_0-b11, mixed mode)

The grammar can be seen at 
http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625ba2/src/grammar/ioke.g


Cheers

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From sperber at deinprogramm.de  Tue Mar 31 07:38:33 2009
From: sperber at deinprogramm.de (Michael Sperber)
Date: Tue, 31 Mar 2009 16:38:33 +0200
Subject: [antlr-interest] Generic parser class
Message-ID: <y9l63hpg3km.fsf@deinprogramm.de>


For an ANTLR project (Java backend), a need a to parameterize the parser
class over a generic, e.g. I'd like the generated parser to start with a
declaration like this:

public class XXXParser<P extends Foo> extends Parser { ...?}

Is this possible?  Help would be much appreciated!

-- 
Regards,
Mike


From sharwell at pixelminegames.com  Tue Mar 31 08:01:33 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 31 Mar 2009 10:01:33 -0500
Subject: [antlr-interest] Generic parser class
In-Reply-To: <y9l63hpg3km.fsf@deinprogramm.de>
References: <y9l63hpg3km.fsf@deinprogramm.de>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C5A@Bloodymary.ironwillgames.com>

It doesn't currently support that. However, I've spent a fair bit of time looking into the possibilities of it. Can you give an idea of specifically what you're trying to accomplish with the generics, and if it falls into one of the areas I've worked on I can give some ideas on how to progress. :)

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Michael Sperber
Sent: Tuesday, March 31, 2009 9:39 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Generic parser class


For an ANTLR project (Java backend), a need a to parameterize the parser
class over a generic, e.g. I'd like the generated parser to start with a
declaration like this:

public class XXXParser<P extends Foo> extends Parser { ...?}

Is this possible?  Help would be much appreciated!

-- 
Regards,
Mike


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From daniel.jensen at level3.com  Tue Mar 31 09:29:11 2009
From: daniel.jensen at level3.com (Daniel Jensen)
Date: Tue, 31 Mar 2009 09:29:11 -0700
Subject: [antlr-interest] Apparent problem with dynamic scopes in
	C	target
In-Reply-To: <49D1E198.1000707@progress.com>
References: <49D1595C.30...@level3.com> <49D1E198.1000707@progress.com>
Message-ID: <49D244D7.6020009@level3.com>

Richard Thrippleton wrote:
> Daniel Jensen wrote:
>   
>> Hi folks,
>>
>>     
> <snip>
>   
>> extractFn scope ExprScope;
>> @init {
>>     if (exprScopeDepth++ == 0)
>>         $ExprScope::in_extract = 0;
>>     else
>>         $ExprScope::in_extract = $ExprScope[-1]::in_extract;
>> }
>>     
> I'm not sure if this is the cause of your bug, but the C code generated 
> by $ExprScope[-1]::in_extract in the current release will not be 
> reliable as it uses the underlying stack size to calculate the offset 
> (see http://www.antlr.org/pipermail/antlr-interest/2009-March/033760.html).
>
> Try the latest development build (linked in the reply to the above 
> message), see if this clears your problem up.
>   

Yes, this looks like the problem, but I think we need a new libantlr3c 
to fix it.  I used the jar file you referred to but, other than a couple 
of dates and version numbers in comments, the generated parser was the 
same as before.

> On another note, I will admit to being slightly baffled by 
> 'exprScopeDepth' - is it correct that it's only ever incremented?
>   

Er, yeah ... I'm sure I would have noticed that eventually. :-/  Just 
pretend that there are @after actions that decrement exprScopeDepth 
following the @init actions that increment it.

> Richard
>   

Thanks for your help, Richard.  Much appreciated.

Daniel

From richard.thrippleton at progress.com  Tue Mar 31 09:46:57 2009
From: richard.thrippleton at progress.com (Richard Thrippleton)
Date: Tue, 31 Mar 2009 17:46:57 +0100
Subject: [antlr-interest] Apparent problem with dynamic scopes in
	C	target
In-Reply-To: <49D244D7.6020009@level3.com>
References: <49D1595C.30...@level3.com> <49D1E198.1000707@progress.com>
	<49D244D7.6020009@level3.com>
Message-ID: <49D24901.2020207@progress.com>

Daniel Jensen wrote:
>
> 
> Yes, this looks like the problem, but I think we need a new libantlr3c 
> to fix it.  I used the jar file you referred to but, other than a couple 
> of dates and version numbers in comments, the generated parser was the 
> same as before.
I don't actually know how they've fixed it - seems plausible that the 
fix was in libantlr (we did our own in-house grim hack/patch because we 
were in a hurry).

>> On another note, I will admit to being slightly baffled by 
>> 'exprScopeDepth' - is it correct that it's only ever incremented?
>>   
> 
> Er, yeah ... I'm sure I would have noticed that eventually. :-/  Just 
> pretend that there are @after actions that decrement exprScopeDepth 
> following the @init actions that increment it.
:-)
You could use SCOPE_SIZE(ExprScope); this ought to do exactly the same 
thing with less chance of mistakes, as well as being more threadsafe 
(@members generates global variables in the C backend, scopes are local 
to the parser's context).

Richard

From tbender at stud.hs-heilbronn.de  Tue Mar 31 09:56:38 2009
From: tbender at stud.hs-heilbronn.de (Tilman Bender)
Date: Tue, 31 Mar 2009 18:56:38 +0200
Subject: [antlr-interest] GUnit and Maven
Message-ID: <DC9E69C6-5B7B-4AA2-B8CC-B73B466B7BD9@stud.hs-heilbronn.de>

Dear List,

I am doing a project with ANTLR and Maven2.
 From what I found out so far there is no GUnit-functionality (be it  
JUnit Test-Generation or direct invocation of GUnit)  for maven right  
now.
I already mailed with Jim Idle concering the state of GUnit in the  
antlr3-maven-plugin and learned that there is a patch to the old version
of the maven-plugin waiting in the queue.

So while the functionality is not directly built into the plugin I  
would like to know if anybody
has a workaround for invoking GUnit in an automated maven-build, e.g.  
via some call to an ANT-Script or something. If you have please
let me know.

Sorry, if this is not the proper list for such discussion, but I could  
not find more project information on GUnit or the antlr3-maven-plugin
apart from the wiki-pages.

kind regards

Tilman Bender
Student des Software Engineering
Hochschule Heilbronn
tbender at stud.hs-heilbronn.de



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/e788d867/attachment.html 

From jimi at temporal-wave.com  Tue Mar 31 10:04:39 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 10:04:39 -0700
Subject: [antlr-interest] Apparent problem with dynamic scopes
	in	C	target
In-Reply-To: <49D24901.2020207@progress.com>
References: <49D1595C.30...@level3.com>
	<49D1E198.1000707@progress.com>	<49D244D7.6020009@level3.com>
	<49D24901.2020207@progress.com>
Message-ID: <49D24D27.2090306@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/f1f36236/attachment.html 

From sharwell at pixelminegames.com  Tue Mar 31 10:06:46 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 31 Mar 2009 12:06:46 -0500
Subject: [antlr-interest] Generic parser class
In-Reply-To: <y9lskkt634u.fsf@deinprogramm.de>
References: <y9l63hpg3km.fsf@deinprogramm.de><86403CA0939415448BCCB83855EFE09AA67C5A@Bloodymary.ironwillgames.com>
	<y9lskkt634u.fsf@deinprogramm.de>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C6F@Bloodymary.ironwillgames.com>

One possibility is you could derive a generic class from your parser, and place your action code in it. Create empty virtual functions in the parser itself as the placeholder for the actions. Does that cover what you need?

Sam

-----Original Message-----
From: Michael Sperber [mailto:sperber at deinprogramm.de] 
Sent: Tuesday, March 31, 2009 11:58 AM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Generic parser class


"Sam Harwell" <sharwell at pixelminegames.com> writes:

> It doesn't currently support that. However, I've spent a fair bit of
> time looking into the possibilities of it. Can you give an idea of
> specifically what you're trying to accomplish with the generics, and
> if it falls into one of the areas I've worked on I can give some ideas
> on how to progress. :)

I just need a type parameter for the class.  Currently, I have a sed
script replacing 

public class XXXParser extends Parser { ...?}

with

public class XXXParser<P extends Foo> extends Parser { ...?}

That's exactly what I need done: The Java action code refers to that
type parameter.

-- 
Cheers =8-} Mike
Friede, V?lkerverst?ndigung und ?berhaupt blabla

From yimm8369 at hotmail.com  Tue Mar 31 10:37:38 2009
From: yimm8369 at hotmail.com (YINGAnnie)
Date: Wed, 1 Apr 2009 01:37:38 +0800
Subject: [antlr-interest] can I use Dynamic Attribute Scope and global scope
	together?
Message-ID: <BAY122-W117FFC72EAAFF65D4DA6DDDB8A0@phx.gbl>


 

 

Hi all,

 

I have a global scope 

 

scope Symbols {
  List names;
}

 

In the rule statement, I used the global scope:

 

statement
scope Symbols;
@init{ level++;
    $Symbols::names = new ArrayList();
}

 

But I also want to use Dynamic Attribute Scope in the statment, so I do the following:

 

scope {Symbols;
List out;
}

 

 

But the error said :

java.lang.Error: Unresolved compilation problem: 
Syntax error on token "Symbols", VariableDeclarator expected after this token

 

So how to use them together?

 

 

Thanks,

Annie

 

 

_________________________________________________________________
??K???????????????????MClub????
http://club.msn.cn/?form=3
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090401/e8e0a383/attachment.html 

From thakkardevang at gmail.com  Tue Mar 31 10:52:19 2009
From: thakkardevang at gmail.com (Devang Thakkar)
Date: Tue, 31 Mar 2009 23:22:19 +0530
Subject: [antlr-interest] Antlrworks freezes
Message-ID: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>

Hi,

I am new to Antlr and AntlrWorks.

I found that AntlrWorks freezes and hangs for ever.

Software:
AntlrWorks 1.2.3,
PL/SQL grammar: from the Antlr.org
http://www.antlr.org/grammar/1209225566284/PLSQL3.g
JRE: 1.5

OS: Window XP Professional, SP2
How to reproduce:
[1]Start AntlrWorks (with lWindowsl ook&feel ). Open the above grammar file.
Verify Grammar. Some errors are encountered. Click Console tab. Antlrworks
freezes forever. Screen does not refresh. I have to kill the application
(javaw) to end the program.
[2]Start AntlrWorks (with Java lMetal ook&feel ). Open the above grammar
file. Verify Grammar. Some errors are encountered. Click Console tab.
Antlrworks works. Now start debugger. Antlrworks freezes forever.
As you can see, by just changing the look and feel,Antlrworks worked while
tabbing to Console, but then it got hung at another point.

Thanks.

Devang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/bf642983/attachment.html 

From daniel.jensen at level3.com  Tue Mar 31 10:55:35 2009
From: daniel.jensen at level3.com (Daniel Jensen)
Date: Tue, 31 Mar 2009 10:55:35 -0700
Subject: [antlr-interest] Apparent problem with dynamic scopes
	in	C	target
In-Reply-To: <49D24D27.2090306@temporal-wave.com>
References: <49D1595C.30...@level3.com>
	<49D1E198.1000707@progress.com>	<49D244D7.6020009@level3.com>
	<49D24901.2020207@progress.com>
	<49D24D27.2090306@temporal-wave.com>
Message-ID: <49D25917.6030509@level3.com>

Jim Idle wrote:
> Fixed in the templates. You need last nights jar.

That's what I was using.  The code in my parser that seems to be causing 
the trouble is:

    $ExprScope::in_extract = $ExprScope[-1]::in_extract;

which gets turned into this C code:

    (SCOPE_TOP(ExprScope))->in_extract=     
((SCOPE_TYPE(ExprScope))(ctx->SCOPE_STACK(ExprScope)->get( 
ctx->SCOPE_STACK(ExprScope), 
ctx->SCOPE_STACK(ExprScope)->size(ctx->SCOPE_STACK(ExprScope)) - 1 - 1) 
))->in_extract;

The change you made to C.stg changes the definition of SCOPE_SIZE, but 
the generated code doesn't use SCOPE_SIZE, so the behavior is 
unchanged.  Maybe the fix is to generate different code for 
$ExprScope[-1] that uses the SCOPE_SIZE macro?

>>   
>>>> On another note, I will admit to being slightly baffled by 
>>>> 'exprScopeDepth' - is it correct that it's only ever incremented?
>>>>   
>>>>       
>>> Er, yeah ... I'm sure I would have noticed that eventually. :-/  Just 
>>> pretend that there are @after actions that decrement exprScopeDepth 
>>> following the @init actions that increment it.
>>>     
>> :-)
>> You could use SCOPE_SIZE(ExprScope);
> You must use this.

Why, if the program that uses the parser only has a single thread?  I'm 
actually targeting both C and Java with this grammar, so the fewer C 
target-specific constructs I'm forced to use, the happier I'll be.

>>  this ought to do exactly the same 
>> thing with less chance of mistakes, as well as being more threadsafe 
>> (@members generates global variables in the C backend, scopes are local 
>> to the parser's context).
>>   
>
> Jim

Excellent points, and I may end up taking this advice, but I don't 
understand why my alternative is unworkable.


Daniel

From parrt at cs.usfca.edu  Tue Mar 31 11:05:29 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Mar 2009 11:05:29 -0700
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D21E58.1020104@gmail.com>
References: <49D21E58.1020104@gmail.com>
Message-ID: <0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>

Hi Ola! Hmm...try -Xconversiontimeout 100000 on antlr and see if  
things change.
Lemme know.
T
On Mar 31, 2009, at 6:44 AM, Ola Bini wrote:

> Hi,
>
> I have a grammar that works well with several different Java 5 and  
> Java
> 6 environments on both Windows, Linux and MacOS X (including  
> SoyLatte).
> But I've just got a bug report that it blows up on OpenJDK build
> 1.6.0_0-b11, that can be installed in Debian.
> Has anyone else seen this? The errors look like this:
>
> generate.antlr:
>
>     [java] warning(200): ioke.g:269:5: Decision can match input such  
> as "'#'"
> using multiple alternatives: 1, 2
>     [java] As a result, alternative(s) 2 were disabled for that input
>     [java] error(201): ioke.g:269:5: The following alternatives can  
> never be
> matched: 2
>     [java]
>     [java] warning(209): ioke.g:323:1: Multiple token rules can  
> match input
> such as "'#'": T__38, Identifier, StringLiteral, RegexpLiteral,  
> LineComment
>     [java]
>     [java] As a result, token(s)
> Identifier,StringLiteral,RegexpLiteral,LineComment were disabled for  
> that input
>     [java] warning(209): ioke.g:202:1: Multiple token rules can  
> match input
> such as "'['": T__34, Identifier
>     [java]
>     [java] As a result, token(s) Identifier were disabled for that  
> input
>     [java] warning(209): ioke.g:202:1: Multiple token rules can  
> match input
> such as "'{'": T__36, Identifier
>     [java]
>     [java] As a result, token(s) Identifier were disabled for that  
> input
>     [java] Java Result: 1
>
> ? ant -version
> Apache Ant version 1.7.0 compiled on August 29 2007
>
> java -version
> java version "1.6.0_0"
> OpenJDK  Runtime Environment (build 1.6.0_0-b11)
> OpenJDK 64-Bit Server VM (build 1.6.0_0-b11, mixed mode)
>
> The grammar can be seen at
> http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625ba2/src/grammar/ioke.g
>
>
> Cheers
>
> -- 
> Ola Bini (http://olabini.com)
> Ioke creator (http://ioke.org)
> JRuby Core Developer (http://jruby.org)
> Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
> Practical JRuby on Rails (http://apress.com/book/view/9781590598818)
>
> "Yields falsehood when quined" yields falsehood when quined.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Tue Mar 31 11:09:27 2009
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 31 Mar 2009 13:09:27 -0500
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
References: <49D21E58.1020104@gmail.com>
	<0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09AA67C74@Bloodymary.ironwillgames.com>

Also, -Xconversiontimeout 0 disables the timer if that's the condition
you're testing.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Tuesday, March 31, 2009 1:05 PM
To: Ola Bini
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Failure on OpenJDK on Debian

Hi Ola! Hmm...try -Xconversiontimeout 100000 on antlr and see if  
things change.
Lemme know.
T
On Mar 31, 2009, at 6:44 AM, Ola Bini wrote:

> Hi,
>
> I have a grammar that works well with several different Java 5 and  
> Java
> 6 environments on both Windows, Linux and MacOS X (including  
> SoyLatte).
> But I've just got a bug report that it blows up on OpenJDK build
> 1.6.0_0-b11, that can be installed in Debian.
> Has anyone else seen this? The errors look like this:
>
> generate.antlr:
>
>     [java] warning(200): ioke.g:269:5: Decision can match input such  
> as "'#'"
> using multiple alternatives: 1, 2
>     [java] As a result, alternative(s) 2 were disabled for that input
>     [java] error(201): ioke.g:269:5: The following alternatives can  
> never be
> matched: 2
>     [java]
>     [java] warning(209): ioke.g:323:1: Multiple token rules can  
> match input
> such as "'#'": T__38, Identifier, StringLiteral, RegexpLiteral,  
> LineComment
>     [java]
>     [java] As a result, token(s)
> Identifier,StringLiteral,RegexpLiteral,LineComment were disabled for  
> that input
>     [java] warning(209): ioke.g:202:1: Multiple token rules can  
> match input
> such as "'['": T__34, Identifier
>     [java]
>     [java] As a result, token(s) Identifier were disabled for that  
> input
>     [java] warning(209): ioke.g:202:1: Multiple token rules can  
> match input
> such as "'{'": T__36, Identifier
>     [java]
>     [java] As a result, token(s) Identifier were disabled for that  
> input
>     [java] Java Result: 1
>
> ? ant -version
> Apache Ant version 1.7.0 compiled on August 29 2007
>
> java -version
> java version "1.6.0_0"
> OpenJDK  Runtime Environment (build 1.6.0_0-b11)
> OpenJDK 64-Bit Server VM (build 1.6.0_0-b11, mixed mode)
>
> The grammar can be seen at
>
http://github.com/olabini/ioke/raw/9e2795c9c5f2b326c0cbb3dfb456f885b9625
ba2/src/grammar/ioke.g
>
>
> Cheers
>
> -- 
> Ola Bini (http://olabini.com)
> Ioke creator (http://ioke.org)
> JRuby Core Developer (http://jruby.org)
> Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
> Practical JRuby on Rails (http://apress.com/book/view/9781590598818)
>
> "Yields falsehood when quined" yields falsehood when quined.
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Tue Mar 31 11:09:00 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 11:09:00 -0700
Subject: [antlr-interest] Apparent problem with dynamic scopes
	in	C	target
In-Reply-To: <49D25917.6030509@level3.com>
References: <49D1595C.30...@level3.com>
	<49D1E198.1000707@progress.com>	<49D244D7.6020009@level3.com>
	<49D24901.2020207@progress.com>
	<49D24D27.2090306@temporal-wave.com> <49D25917.6030509@level3.com>
Message-ID: <49D25C3C.60302@temporal-wave.com>

Daniel Jensen wrote:
> Jim Idle wrote:
>> Fixed in the templates. You need last nights jar.
>
> That's what I was using.  The code in my parser that seems to be 
> causing the trouble is:
>
>    $ExprScope::in_extract = $ExprScope[-1]::in_extract;
>
> which gets turned into this C code:
>
>    (SCOPE_TOP(ExprScope))->in_extract=     
> ((SCOPE_TYPE(ExprScope))(ctx->SCOPE_STACK(ExprScope)->get( 
> ctx->SCOPE_STACK(ExprScope), 
> ctx->SCOPE_STACK(ExprScope)->size(ctx->SCOPE_STACK(ExprScope)) - 1 - 
> 1) ))->in_extract;
>
> The change you made to C.stg changes the definition of SCOPE_SIZE, but 
> the generated code doesn't use SCOPE_SIZE, so the behavior is 
> unchanged.  Maybe the fix is to generate different code for 
> $ExprScope[-1] that uses the SCOPE_SIZE macro?
Yes, that might be necessary, I will look into doing that later today.
>
>>>  
>>>>> On another note, I will admit to being slightly baffled by 
>>>>> 'exprScopeDepth' - is it correct that it's only ever incremented?
>>>>>         
>>>> Er, yeah ... I'm sure I would have noticed that eventually. :-/  
>>>> Just pretend that there are @after actions that decrement 
>>>> exprScopeDepth following the @init actions that increment it.
>>>>     
>>> :-)
>>> You could use SCOPE_SIZE(ExprScope);
>> You must use this.
>
> Why, if the program that uses the parser only has a single thread?  
Because the C constructs are not the same as the Java ones and this 
hides the implementation for you. However, for the reference above, you 
should not need to do that of course.
> I'm actually targeting both C and Java with this grammar, so the fewer 
> C target-specific constructs I'm forced to use, the happier I'll be.
Sure, but C is C and Java is Java so you won't be able to use one 
generic parser once you start using scopes and actions. The better bet 
is to use a base grammar then branch this to the Java and C versions.

Jim

From jimi at temporal-wave.com  Tue Mar 31 11:10:36 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 11:10:36 -0700
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
References: <49D21E58.1020104@gmail.com>
	<0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
Message-ID: <49D25C9C.2070207@temporal-wave.com>

Terence Parr wrote:
> Hi Ola! Hmm...try -Xconversiontimeout 100000 on antlr and see if  
> things change.
> Lemme know.
> T
> On Mar 31, 2009, at 6:44 AM, Ola Bini wrote:
>   
>> java -version
>> java version "1.6.0_0"
>> OpenJDK  Runtime Environment (build 1.6.0_0-b11)
>> OpenJDK 64-Bit Server VM (build 1.6.0_0-b11, mixed mode)
>>     
I have all sorts of problems with openJDK 64 bit and have given up on it 
and moved to the Sun JDK. But try the conversiontimeout parameter first.

Jim

From parrt at cs.usfca.edu  Tue Mar 31 11:28:00 2009
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Mar 2009 11:28:00 -0700
Subject: [antlr-interest] Antlrworks freezes
In-Reply-To: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>
References: <3484ecd40903311052l24bdf6ccpe7f2ffa9a0f88d65@mail.gmail.com>
Message-ID: <E10596C9-BD87-4A0C-A092-A4749DAD135B@cs.usfca.edu>

Hi, can u print the stack trace when AW is frozen (CTRL-break on  
Windows I think)?
Ter
On Mar 31, 2009, at 10:52 AM, Devang Thakkar wrote:

> Hi,
>
> I am new to Antlr and AntlrWorks.
>
> I found that AntlrWorks freezes and hangs for ever.
>
> Software:
> AntlrWorks 1.2.3,
> PL/SQL grammar: from the Antlr.org http://www.antlr.org/grammar/1209225566284/PLSQL3.g
> JRE: 1.5
>
> OS: Window XP Professional, SP2
> How to reproduce:
> [1]Start AntlrWorks (with lWindowsl ook&feel ). Open the above  
> grammar file. Verify Grammar. Some errors are encountered. Click  
> Console tab. Antlrworks freezes forever. Screen does not refresh. I  
> have to kill the application (javaw) to end the program.
> [2]Start AntlrWorks (with Java lMetal ook&feel ). Open the above  
> grammar file. Verify Grammar. Some errors are encountered. Click  
> Console tab. Antlrworks works. Now start debugger. Antlrworks  
> freezes forever.
> As you can see, by just changing the look and feel,Antlrworks worked  
> while tabbing to Console, but then it got hung at another point.
>
> Thanks.
>
> Devang
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From antlr at mirality.co.nz  Tue Mar 31 11:56:34 2009
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 01 Apr 2009 07:56:34 +1300
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49D21E58.1020104@gmail.com>
References: <49D21E58.1020104@gmail.com>
Message-ID: <20090331185659.8423F34184C6@www.antlr.org>

At 02:44 1/04/2009, Ola Bini wrote:
 >I have a grammar that works well with several different Java 5 
and
 >Java 6 environments on both Windows, Linux and MacOS X 
(including
 >SoyLatte).  But I've just got a bug report that it blows up on
 >OpenJDK build 1.6.0_0-b11, that can be installed in Debian.
 >Has anyone else seen this? The errors look like this:
 >
 >generate.antlr:
 >
 >     [java] warning(200): ioke.g:269:5: Decision can match input 

 >such as "'#'" using multiple alternatives: 1, 2
 >     [java] As a result, alternative(s) 2 were disabled for that 

 >input
 >     [java] error(201): ioke.g:269:5: The following alternatives 

 >can never be matched: 2
 >     [java]
 >     [java] warning(209): ioke.g:323:1: Multiple token rules can 

 >match input such as "'#'": T__38, Identifier, StringLiteral,
 >RegexpLiteral, LineComment
 >     [java]
 >     [java] As a result, token(s)
 >Identifier,StringLiteral,RegexpLiteral,LineComment were disabled 

 >for that input
 >     [java] warning(209): ioke.g:202:1: Multiple token rules can 

 >match input such as "'['": T__34, Identifier
 >     [java]
 >     [java] As a result, token(s) Identifier were disabled for 
that
 >input
 >     [java] warning(209): ioke.g:202:1: Multiple token rules can 

 >match input such as "'{'": T__36, Identifier
 >     [java]
 >     [java] As a result, token(s) Identifier were disabled for 
that
 >input
 >     [java] Java Result: 1

Looks like your lexer rules are ambiguous (which probably isn't 
helped by the fact that you're also using literals in your parser 
rules).  You should definitely consider correcting your rules so 
that the ambiguity warnings go away; doing that should make the 
error go away as well.


From siemsen at ucar.edu  Tue Mar 31 12:33:14 2009
From: siemsen at ucar.edu (Pete Siemsen)
Date: Tue, 31 Mar 2009 13:33:14 -0600
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <49D0DE69.3050802@temporal-wave.com>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
Message-ID: <C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>

Jim,

I did 'mvn clean'.  I moved my .g file to /src/main/antlr3.  It's a v3  
grammar.  I modified my pom.xml file as described at http://antlr.org/antlr3-maven-plugin/index.html 
.  Now I get

$ mvn package
[INFO] Scanning for projects...
[INFO]  
------------------------------------------------------------------------
[INFO] Building TranslateCIM
[INFO]    task-segment: [clean]
[INFO]  
------------------------------------------------------------------------
Downloading: http://download.java.net/maven/2/org/antlr/antlr3-maven-plugin/3.1.3-SNAPSHOT/antlr3-maven-plugin-3.1.3-SNAPSHOT.pom
[INFO]  
------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO]  
------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.antlr:antlr3-maven-plugin

Reason: POM 'org.antlr:antlr3-maven-plugin' not found in repository:  
Unable to download the artifact from any repository

   org.antlr:antlr3-maven-plugin:pom:3.1.3-SNAPSHOT

from the specified remote repositories:
   java.net (http://download.java.net/maven/2),
   central (http://repo1.maven.org/maven2)

  for project org.antlr:antlr3-maven-plugin


[INFO]  
------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO]  
------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Tue Mar 31 13:29:25 MDT 2009
[INFO] Final Memory: 3M/8M
[INFO]  
------------------------------------------------------------------------
$

For what it's worth, here's the pom.xml:



Thanks for your help!

-- Pete


On Mar 30, 2009, at 8:59 AM, Jim Idle wrote:

> Pete Siemsen wrote:
>> I have had ANTLR working with maven for a while.  I'm interested in
>> using a newer ANTLR.  The one in my repository is 2.7.7.  I'd like to
>> use newer version of ANTLR if possible.  I have the repository
>> definition suggested by the web page at http://www.antlr.org/wiki/display/ANTLR3/2008/11/20/Maven+and+Hudson+continuous+build+server+now+running
>>
>> If I change my (working) pom.xml from
>>
>>                 <dependency>
>>                         <groupId>org.antlr</groupId>
>>                         <artifactId>antlr-runtime</artifactId>
>>                         <version>3.0.1</version>
>>                 </dependency>
>>
>> to
>>
>>                 <dependency>
>>                         <groupId>org.antlr</groupId>
>>                         <artifactId>antlr-runtime</artifactId>
>>                         <version>3.1.3</version>
>>                 </dependency>
>>
>> I get the 3.1.3, and I get lots of "cannot find symbol _fsp" and
>> "cannot find symbol errorRecovery".  I've tried deleting my ~/.m2/
>> reposinory/antlr/antlr/2.7.7, aonly to watch it get downloaded again.
>>
> v3 is dependent on 2.7.7 but it does not use it to compile the  
> grammars.
> You will need to do the following:
>
> 1) mvn clean
> 2) Move your .g files under src/main/antlr3 (unless you specify a
> different location but it is better to use the Maven defaults as it
> reduces pom complexity). The v2 plugin unfortunately used the  
> directory
> antlr instead of antlr2, so the v3 plugin now defaults to anltr3 to
> avoid confusion.
> 3) Of course your v2 grammars will not work with v3 out of the box,  
> you
> must convert them, which is generally fairly simple but in some cases
> can be involved.
>
> Documentation for plugin is at:
>
> http://antlr.org/antlr3-maven-plugin/index.html
>
> Finally, you do not need a different repository as ANTLR is now part  
> of
> the Maven central repository and synced directly from our own release
> repository.
>
> Hope that helps,
>
> Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/7a541685/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 3249 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/7a541685/attachment.xml 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/7a541685/attachment-0001.html 

From jimi at temporal-wave.com  Tue Mar 31 12:59:01 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 12:59:01 -0700
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <20090331185659.8423F34184C6@www.antlr.org>
References: <49D21E58.1020104@gmail.com>
	<20090331185659.8423F34184C6@www.antlr.org>
Message-ID: <49D27605.4080509@temporal-wave.com>

Gavin Lambert wrote:
> At 02:44 1/04/2009, Ola Bini wrote:
>  >I have a grammar that works well with several different Java 5 
> and
>  >Java 6 environments on both Windows, Linux and MacOS X 
>
>  >input
>  >     [java] Java Result: 1
>
> Looks like your lexer rules are ambiguous (which probably isn't 
> helped by the fact that you're also using literals in your parser 
> rules).  You should definitely consider correcting your rules so 
> that the ambiguity warnings go away; doing that should make the 
> error go away as well.
>
>   
I think that it just looks like that and that in fact the dfa conversion 
is timing out on the machine running OpenJDK. Whether this is the speed 
of machine, or problems with OpenJDK 64 bit is debatable.

Jim

From jimi at temporal-wave.com  Tue Mar 31 13:01:26 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 13:01:26 -0700
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
Message-ID: <49D27696.7050604@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/7c805adc/attachment.html 

From ola.bini at gmail.com  Tue Mar 31 13:45:11 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Tue, 31 Mar 2009 22:45:11 +0200
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
References: <49D21E58.1020104@gmail.com>
	<49d2676d.1c0bca0a.5c9f.5fbdSMTPIN_ADDED@mx.google.com>
Message-ID: <49D280D7.8090407@gmail.com>

Gavin Lambert wrote:
> At 02:44 1/04/2009, Ola Bini wrote:
> >I have a grammar that works well with several different Java 5 and
> >Java 6 environments on both Windows, Linux and MacOS X (including
> >SoyLatte).  But I've just got a bug report that it blows up on
> >OpenJDK build 1.6.0_0-b11, that can be installed in Debian.
> >Has anyone else seen this? The errors look like this:
> >
> >generate.antlr:
>
> Looks like your lexer rules are ambiguous (which probably isn't helped 
> by the fact that you're also using literals in your parser rules).  
> You should definitely consider correcting your rules so that the 
> ambiguity warnings go away; doing that should make the error go away 
> as well.
>
>
I don't have any ambiguity warnings on any other Java implementation.

Cheers

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From ola.bini at gmail.com  Tue Mar 31 13:56:21 2009
From: ola.bini at gmail.com (Ola Bini)
Date: Tue, 31 Mar 2009 22:56:21 +0200
Subject: [antlr-interest] Failure on OpenJDK on Debian
In-Reply-To: <0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
References: <49D21E58.1020104@gmail.com>
	<0E101985-05A2-4B2E-91C4-EF4363845080@cs.usfca.edu>
Message-ID: <49D28375.2020206@gmail.com>

Terence Parr wrote:
> Hi Ola! Hmm...try -Xconversiontimeout 100000 on antlr and see if 
> things change.
> Lemme know.
> T
Thanks Terence and Sam. I've asked the bug reporter to try 
conversiontimeout 100000 and 0 and report back. Will get back to you.

Cheers

-- 
 Ola Bini (http://olabini.com) 
 Ioke creator (http://ioke.org)
 JRuby Core Developer (http://jruby.org)
 Developer, ThoughtWorks Studios (http://studios.thoughtworks.com)
 Practical JRuby on Rails (http://apress.com/book/view/9781590598818)

 "Yields falsehood when quined" yields falsehood when quined.



From jimi at temporal-wave.com  Tue Mar 31 14:35:07 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 14:35:07 -0700
Subject: [antlr-interest] Maven plugin documentation...
Message-ID: <49D28C8B.4060708@temporal-wave.com>

Is now updated to reflect the usage of version 3.1.3-1 and provide more 
information about the project and so on.

Visit: http://www.antlr.org/antlr3-maven-plugin

For more information.

Jim

From siemsen at ucar.edu  Tue Mar 31 15:32:38 2009
From: siemsen at ucar.edu (Pete Siemsen)
Date: Tue, 31 Mar 2009 16:32:38 -0600
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <49D27696.7050604@temporal-wave.com>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
	<49D27696.7050604@temporal-wave.com>
Message-ID: <5B088422-ABAF-48BD-8201-9CFDB8AC55AA@ucar.edu>

Jim,

Thanks, that helped.  Now I get

$ mvn package
[INFO] Scanning for projects...
[INFO]  
------------------------------------------------------------------------
[INFO] Building TranslateCIM
[INFO]    task-segment: [package]
[INFO]  
------------------------------------------------------------------------
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr3-maven-plugin/3.1.3/antlr3-maven-plugin-3.1.3.pom
11K downloaded
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr3-maven-plugin/3.1.3/antlr3-maven-plugin-3.1.3.jar
13K downloaded
[INFO] [resources:resources]
[WARNING] Using platform encoding (MacRoman actually) to copy filtered  
resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /Users/siemsen/TranslateCIM/ 
src/main/resources
[INFO] [compiler:compile]
[INFO] Compiling 2 source files to /Users/siemsen/TranslateCIM/target/ 
classes
[INFO]  
------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO]  
------------------------------------------------------------------------
[INFO] Compilation failure

/Users/siemsen/TranslateCIM/src/main/java/com/kyben/translatecim/ 
TranslateCIM.java:[9,29] cannot find symbol
symbol  : class TranslateCIMLexer
location: package com.kyben.translatecim

/Users/siemsen/TranslateCIM/src/main/java/com/kyben/translatecim/ 
TranslateCIM.java:[68,2] cannot find symbol
symbol  : class TranslateCIMLexer
location: class com.kyben.translatecim.TranslateCIM

/Users/siemsen/TranslateCIM/src/main/java/com/kyben/translatecim/ 
TranslateCIM.java:[69,17] cannot find symbol
symbol  : class TranslateCIMLexer
location: class com.kyben.translatecim.TranslateCIM

/Users/siemsen/TranslateCIM/src/main/java/com/kyben/translatecim/ 
TranslateCIM.java:[74,2] cannot find symbol
symbol  : class TranslateCIMParser
location: class com.kyben.translatecim.TranslateCIM

/Users/siemsen/TranslateCIM/src/main/java/com/kyben/translatecim/ 
TranslateCIM.java:[74,34] cannot find symbol
symbol  : class TranslateCIMParser
location: class com.kyben.translatecim.TranslateCIM


[INFO]  
------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO]  
------------------------------------------------------------------------
[INFO] Total time: 4 seconds
[INFO] Finished at: Tue Mar 31 16:05:25 MDT 2009
[INFO] Final Memory: 20M/47M
[INFO]  
------------------------------------------------------------------------
okapi-2$

I see that the new plugin is supposed to write to target/generated- 
sources/antlr3.  My target/generated-sources/ has an "antlr"  
subdirectory but no "antlr3" subdirectory.  I couldn't find a  
TranslateCIMLexer.class anywhere in my directory tree.  Here's my  
pom.xml file:



-- Pete


On Mar 31, 2009, at 2:01 PM, Jim Idle wrote:

> Pete Siemsen wrote:
>>
>> Jim,
>>
>> I did 'mvn clean'.  I moved my .g file to /src/main/antlr3.  It's a  
>> v3 grammar.  I modified my pom.xml file as described at http://antlr.org/antlr3-maven-plugin/index.html 
>> .  Now I get
>>
> Don't use the -SNAPSHOT versions, it should be just 3.1.3. You can  
> only use the snapshot versions if you define the ANTLR snapshot  
> repository in your pom, and you don't need to do that unless you  
> absolutely require some fix from the latest snapshot, which is 3.1.4  
> anyway :-)
>
> I will check the docs as they are probably still saying -SNAPSHOT !
>
> Jim
>> $ mvn package
>> [INFO] Scanning for projects...
>> [INFO]  
>> ------------------------------------------------------------------------
>> [INFO] Building TranslateCIM
>> [INFO]    task-segment: [clean]
>> [INFO]  
>> ------------------------------------------------------------------------
>> Downloading: http://download.java.net/maven/2/org/antlr/antlr3-maven-plugin/3.1.3-SNAPSHOT/antlr3-maven-plugin-3.1.3-SNAPSHOT.pom
>> [INFO]  
>> ------------------------------------------------------------------------
>> [ERROR] BUILD ERROR
>> [INFO]  
>> ------------------------------------------------------------------------
>> [INFO] Error building POM (may not be this project's POM).
>>
>>
>> Project ID: org.antlr:antlr3-maven-plugin
>>
>> Reason: POM 'org.antlr:antlr3-maven-plugin' not found in  
>> repository: Unable to download the artifact from any repository
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/655b8348/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pom.xml
Type: text/xml
Size: 3505 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/655b8348/attachment.xml 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/655b8348/attachment-0001.html 

From bruce.bauman at andesaservices.com  Tue Mar 31 16:26:41 2009
From: bruce.bauman at andesaservices.com (Bruce Bauman)
Date: Tue, 31 Mar 2009 19:26:41 -0400
Subject: [antlr-interest] how to best break apart multiple assignments
Message-ID: <15DF771CF9BEAE418AA0C8D745F73D1503D5F3BA@exchange.andesatpa.com>

In the sometimes bizarre dialect of Pascal I am using (MetaWare), the following is allowed:
 
Odd := Even := 0;
 
I need to split this into:
 
Odd := 0;
Even := 0;
 
Can somebody point me in the right direction?
 
Thanks.
 
-- Bruce

From jimi at temporal-wave.com  Tue Mar 31 16:45:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 16:45:12 -0700
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <5B088422-ABAF-48BD-8201-9CFDB8AC55AA@ucar.edu>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
	<49D27696.7050604@temporal-wave.com>
	<5B088422-ABAF-48BD-8201-9CFDB8AC55AA@ucar.edu>
Message-ID: <49D2AB08.3070204@temporal-wave.com>

Pete Siemsen wrote:
> Jim,
>
> Thanks, that helped.  Now I get
>
>
> /Users/siemsen/TranslateCIM/src/main/java/com/kyben/translatecim/TranslateCIM.java:[9,29] 
> cannot find symbol
> symbol  : class TranslateCIMLexer
> location: package com.kyben.translatecim
>
>
> I see that the new plugin is supposed to write 
> to target/generated-sources/antlr3.  My target/generated-sources/ has 
> an "antlr" subdirectory but no "antlr3" subdirectory.  I couldn't find 
> a TranslateCIMLexer.class anywhere in my directory tree.  Here's my 
> pom.xml file:
>
You need to organize your grammars under the src/main/antlr3 directory 
to reflect the package structure that the generated files should live 
in. So, if your lexer has:

@header
{
package x.y.z;
}

Then your source file is:

src/main/antlr3/x/y/z/mylexer.g


and so on. See the docs at: www.antlr.org/antlr3-maven-plugin (if you 
have not yet done so).

also, your pom has all the defaults in it. You wnat to use the example 
"Simple configurations" version, so:

			<plugin>
			    <groupId>org.antlr</groupId>
			    <artifactId>antlr3-maven-plugin</artifactId>
			    <version>3.1.3</version>
			    <executions>
			        <execution>
			            <configuration>
			                <goals>
			                    <goal>antlr</goal>
			                </goals>
			                <conversionTimeout>10000</conversionTimeout>
			                <debug>false</debug>
			                <dfa>false</dfa>
			                <nfa>false</nfa>
			                <excludes><exclude/></excludes>
			                <includes><include/></includes>
			                <libDirectory>src/main/antlr3/imports</libDirectory>
			                <messageFormat>antlr</messageFormat>
			                <outputDirectory>target/generated-sources/antlr3</outputDirectory>
			                <printGrammar>false</printGrammar>
			                <profile>false</profile>
			                <report>false</report>
			                <sourceDirectory>src/main/antlr3</sourceDirectory>
			                <trace>false</trace>
			                <verbose>true</verbose>
			            </configuration>
			        </execution>
			    </executions>


Just becomes:

			<plugin>
			    <groupId>org.antlr</groupId>
			    <artifactId>antlr3-maven-plugin</artifactId>
			    <version>3.1.3</version>
			    <executions>
			        <execution>
			            <configuration>
			                <goals>
			                    <goal>antlr</goal>
			                </goals>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>

			</plugin>


Jim


From michael.bedward at gmail.com  Tue Mar 31 18:07:05 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 12:07:05 +1100
Subject: [antlr-interest] Maven plugin documentation...
In-Reply-To: <49D28C8B.4060708@temporal-wave.com>
References: <49D28C8B.4060708@temporal-wave.com>
Message-ID: <e24c4c270903311807h7565a12bwb8f66448f448222@mail.gmail.com>

That's terrific, thanks Jim.

I notice that in the different examples <goals> is sometimes inside
<configuration> and sometimes outside.  Is this right ?  I ask because
when I'm editing the pom.xml file in Netbeans, the editor doesn't
suggest the goals element when inside configuration.

cheers
Michael

2009/4/1 Jim Idle <jimi at temporal-wave.com>:
> Is now updated to reflect the usage of version 3.1.3-1 and provide more
> information about the project and so on.
>
> Visit: http://www.antlr.org/antlr3-maven-plugin
>
> For more information.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Tue Mar 31 20:20:23 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 14:20:23 +1100
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <49D27696.7050604@temporal-wave.com>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
	<49D27696.7050604@temporal-wave.com>
Message-ID: <e24c4c270903312020pa0ebb31y5c7407de6886e58b@mail.gmail.com>

2009/4/1 Jim Idle wrote:
> Don't use the -SNAPSHOT versions, it should be just 3.1.3. You can only use
> the snapshot versions if you define the ANTLR snapshot repository in your
> pom, and you don't need to do that unless you absolutely require some fix
> from the latest snapshot, which is 3.1.4 anyway :-)
>

I have <version>3.1.3</version> in my pom.xml but I notice that both
the 3.1.3 and 3.1.3-SNAPSHOT jars are being downloaded (see below).
I've looked thought my project's pom hierarchy but can't find anything
that might be inadvertently requesting this.  Any ideas ?

cheers
Michael

Downloading: http://apache.mirror.aussiehq.net.au//org/antlr/antlr/3.1.3/antlr-3.1.3.pom
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr/3.1.3/antlr-3.1.3.pom
3K downloaded
Downloading: http://apache.mirror.aussiehq.net.au//org/antlr/antlr-master/3.1.3/antlr-master-3.1.3.pom
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr-master/3.1.3/antlr-master-3.1.3.pom
8K downloaded
Downloading: http://apache.mirror.aussiehq.net.au//org/antlr/antlr-runtime/3.1.3/antlr-runtime-3.1.3.pom
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr-runtime/3.1.3/antlr-runtime-3.1.3.pom
3K downloaded
Downloading: http://apache.mirror.aussiehq.net.au//org/antlr/antlr/3.1.3/antlr-3.1.3.jar
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr/3.1.3/antlr-3.1.3.jar
872K downloaded
Downloading: http://apache.mirror.aussiehq.net.au//org/antlr/antlr-runtime/3.1.3/antlr-runtime-3.1.3.jar
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.3/antlr-runtime-3.1.3.jar
Downloading: http://repo1.maven.org/maven2/org/antlr/antlr-runtime/3.1.3/antlr-runtime-3.1.3.jar
147K downloaded
snapshot org.antlr:antlr:3.1.3-SNAPSHOT: checking for updates from
antlr-snapshot
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr/3.1.3-SNAPSHOT/antlr-3.1.3-20090318.020737-33.pom
3K downloaded
snapshot org.antlr:antlr-master:3.1.3-SNAPSHOT: checking for updates
from antlr-snapshot
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-master/3.1.3-SNAPSHOT/antlr-master-3.1.3-20090316.180609-16.pom
8K downloaded
snapshot org.antlr:antlr-runtime:3.1.3-SNAPSHOT: checking for updates
from antlr-snapshot
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.3-SNAPSHOT/antlr-runtime-3.1.3-20090316.180609-18.pom
3K downloaded
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr/3.1.3-SNAPSHOT/antlr-3.1.3-20090318.020737-33.jar
890K downloaded
Downloading: http://antlr.org/antlr-snapshot/org/antlr/antlr-runtime/3.1.3-SNAPSHOT/antlr-runtime-3.1.3-20090316.180609-18.jar
147K downloaded

From jimi at temporal-wave.com  Tue Mar 31 20:22:57 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 20:22:57 -0700
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <e24c4c270903312020pa0ebb31y5c7407de6886e58b@mail.gmail.com>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>	
	<49D0DE69.3050802@temporal-wave.com>	
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>	
	<49D27696.7050604@temporal-wave.com>
	<e24c4c270903312020pa0ebb31y5c7407de6886e58b@mail.gmail.com>
Message-ID: <49D2DE11.50301@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20090331/9e8bb30f/attachment.html 

From jimi at temporal-wave.com  Tue Mar 31 20:24:12 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 20:24:12 -0700
Subject: [antlr-interest] Maven plugin documentation...
In-Reply-To: <e24c4c270903311807h7565a12bwb8f66448f448222@mail.gmail.com>
References: <49D28C8B.4060708@temporal-wave.com>
	<e24c4c270903311807h7565a12bwb8f66448f448222@mail.gmail.com>
Message-ID: <49D2DE5C.8060104@temporal-wave.com>

Michael Bedward wrote:
> That's terrific, thanks Jim.
>
> I notice that in the different examples <goals> is sometimes inside
> <configuration> and sometimes outside.  Is this right ?  I ask because
> when I'm editing the pom.xml file in Netbeans, the editor doesn't
> suggest the goals element when inside configuration.
>
> cheers
> Michael
>
> 2009/4/1 Jim Idle <jimi at temporal-wave.com>:
>   
>> Is now updated to reflect the usage of version 3.1.3-1 and provide more
>> information about the project and so on.
>>
>> Visit: http://www.antlr.org/antlr3-maven-plugin
>>
>> For more information.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>     
I'll check the examples, but:

<plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.3-1</version>
               
                <executions>

                    <execution>

                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>

From michael.bedward at gmail.com  Tue Mar 31 20:54:59 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 14:54:59 +1100
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <49D2DE11.50301@temporal-wave.com>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
	<49D27696.7050604@temporal-wave.com>
	<e24c4c270903312020pa0ebb31y5c7407de6886e58b@mail.gmail.com>
	<49D2DE11.50301@temporal-wave.com>
Message-ID: <e24c4c270903312054n350c6659n2780a0c01d0b9c48@mail.gmail.com>

cheers Jim - I missed that

Michael

From michael.bedward at gmail.com  Tue Mar 31 20:59:22 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 14:59:22 +1100
Subject: [antlr-interest] Maven plugin documentation...
In-Reply-To: <49D2DE5C.8060104@temporal-wave.com>
References: <49D28C8B.4060708@temporal-wave.com>
	<e24c4c270903311807h7565a12bwb8f66448f448222@mail.gmail.com>
	<49D2DE5C.8060104@temporal-wave.com>
Message-ID: <e24c4c270903312059q476e32d2g9094b295e96f7280@mail.gmail.com>

2009/4/1 Jim Idle wrote:
> I'll check the examples, but:
>

The Libraries example has goals within configuration.  The Netbeans
editor, following the pom schema I guess, doesn't suggest goals as an
element when you are within a configuration block, only outside.

Michael

From jimi at temporal-wave.com  Tue Mar 31 21:09:20 2009
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Mar 2009 21:09:20 -0700
Subject: [antlr-interest] using the antlr maven repository
In-Reply-To: <4D85FA45-8A99-4DBA-B0C2-34EDA0BDD9CC@ucar.edu>
References: <B22C9683-7E29-46FE-BD9F-85BAACB5738C@ucar.edu>
	<49D0DE69.3050802@temporal-wave.com>
	<C976FCEA-14C4-4794-87DB-84EDC5AADBEC@ucar.edu>
	<49D27696.7050604@temporal-wave.com>
	<5B088422-ABAF-48BD-8201-9CFDB8AC55AA@ucar.edu>
	<49D2AB08.3070204@temporal-wave.com>
	<4D85FA45-8A99-4DBA-B0C2-34EDA0BDD9CC@ucar.edu>
Message-ID: <49D2E8F0.6040903@temporal-wave.com>

Pete Siemsen wrote:
> Jim,
>
> My grammar is already organized as you suggest - it's 
> in src/main/antlr3/com/kyben/translatecim/TranslateCIM.g, and in that 
> file I have
>
> @lexer::header {
>     package com.kyben.translatecim;
>
>     import java.io.*;
> }
>
> ... so that's not my problem.  If it helps, I've taken the liberty of 
> sending you a separate email message containing a tar of my whole 
> development directory structure - it's only about 280k.
Maven does not like your commenting out of the default options. Take out 
the comment and it works.

Jim

From michael.bedward at gmail.com  Tue Mar 31 21:27:27 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 15:27:27 +1100
Subject: [antlr-interest] reset method on a tree parser
Message-ID: <e24c4c270903312127k3bd8c9md9c3be55200a1b19@mail.gmail.com>

Dear ANTLRites,

I'm migrating an app from ANTLR 3.1.2 to 3.1.3, using the java target.
 It seems that I can no longer use the reset method on a tree parser -
is that intentional ?

In 3.1.2, calling reset on the tree parser would rewind its node
stream, whereas in 3.1.3 this does not seem to happen.

I've looked at the release notes but they are silent on this issue.

Any tips much appreciated.

Michael

From michael.bedward at gmail.com  Tue Mar 31 21:41:53 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 15:41:53 +1100
Subject: [antlr-interest] reset method on a tree parser
In-Reply-To: <e24c4c270903312127k3bd8c9md9c3be55200a1b19@mail.gmail.com>
References: <e24c4c270903312127k3bd8c9md9c3be55200a1b19@mail.gmail.com>
Message-ID: <e24c4c270903312141m17cd1104g273865638bfdb60d@mail.gmail.com>

Sorry, that should have been....

"migrating an app from ANTLR 3.1.1 to 3.1.3"

I've now also looked in the release notes for 3.1.2 but don't see my
answer there either (or perhaps I just don't understand it :).  So,
still hoping for advice.

cheers
Michael

2009/4/1 Michael Bedward <michael.bedward at gmail.com>:
> Dear ANTLRites,
>
> I'm migrating an app from ANTLR 3.1.2 to 3.1.3, using the java target.
> ?It seems that I can no longer use the reset method on a tree parser -
> is that intentional ?
>
> In 3.1.2, calling reset on the tree parser would rewind its node
> stream, whereas in 3.1.3 this does not seem to happen.
>
> I've looked at the release notes but they are silent on this issue.
>
> Any tips much appreciated.
>
> Michael
>

From michael.bedward at gmail.com  Tue Mar 31 22:05:16 2009
From: michael.bedward at gmail.com (Michael Bedward)
Date: Wed, 1 Apr 2009 16:05:16 +1100
Subject: [antlr-interest] reset method on a tree parser
In-Reply-To: <e24c4c270903312141m17cd1104g273865638bfdb60d@mail.gmail.com>
References: <e24c4c270903312127k3bd8c9md9c3be55200a1b19@mail.gmail.com>
	<e24c4c270903312141m17cd1104g273865638bfdb60d@mail.gmail.com>
Message-ID: <e24c4c270903312205x5cd71e1bj762b2c2436083047@mail.gmail.com>

OK, a with a bit more delving I found the problem was caused by the
CommonTreeNodeStream stream being emptied after the first run of the
tree walker, so calling reset didn't achieve much.  This differs from
ANTLR 3.1.1 behaviour but doesn't seem to be in the release notes for
3.1.2 or 3.1.3 (someone please let me know if I'm missing the
obvious).

Give the tree walker a BufferedTreeNodeStream stream instead of
CommonTreeNodeStream seems to fix the problem.  Is this now the
correct practice where a tree walker is to be invoked repeatedly ?

cheers
Michael

