From wabsie at gmail.com  Mon Mar  1 05:08:02 2010
From: wabsie at gmail.com (Mark Ruvald)
Date: Mon, 1 Mar 2010 14:08:02 +0100
Subject: [antlr-interest] AntlrWorks, remote debugging w/ C target fails
Message-ID: <220288281003010508s3172e640j895d2b1eccba10ee@mail.gmail.com>

Hello,

A) From what I can read online, remote debugging in AntlrWorks should work
OK with other target languages (like C) - right?
B) ... then howcome this doesn't work:

1) I download examples-v3.tar.gz, expand it and go to (for instance)
C/dynamic-scope.
2) Run antlr: java org.antlr.Tool -debug T.g
3) Compile: gcc -o T TLexer.c TParser.c main.c -I. -L/usr/local/lib
-lantlr3c
4) and run: strace ./T
Of course strace doesn't chang anything, and I can see T executable listens
correctly at port 49100.

5) I open up AntlrWorks, open the T.g grammar file.
6) I select the "program" rule (ie. the root rule).
7) Execute: Run -> Debug remote, connect at localhost:49100.
(T executable accepts connection OK)

8) The very first time I single step, ./T ends with strace printing:
[.. Omitting ..]
send(4, "enterRule T.g program\n", 22, 0) = 22
recv(4, "a", 1, 0)                      = 1
recv(4, "c", 1, 0)                      = 1
recv(4, "k", 1, 0)                      = 1
recv(4, "\n", 1, 0)                     = 1
send(4, "terminate\n", 10, 0)           = 10
munmap(0xb7767000, 151552)              = 0
exit_group(0)                           = ?

9) Naturally nothing gets printed in the parse tree in AntlrWorks.???


I have tried with Java/dynamic-scope - everything works there.
What am I doing wrong?

best regards
-- Mark Ruvald.

A: Because it messes up the order in which people normally read text.
Q: Why is top-posting such a bad thing?
A: Top-posting.
Q: What is the most annoying thing on usenet and in e-mail?

From jimi at temporal-wave.com  Mon Mar  1 10:05:34 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 01 Mar 2010 10:05:34 -0800
Subject: [antlr-interest] AntlrWorks, remote debugging w/ C target fails
In-Reply-To: <220288281003010508s3172e640j895d2b1eccba10ee@mail.gmail.com>
Message-ID: <7d133c07e0e82648bc07bb14a0724fc3@temporal-wave.com>

I think that the C debugging is out of sync and I need to get it back in to sync. To be honest I find that the C debugger gives me more information, though it isn't as convenient of course.

jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mark Ruvald
Sent: Monday, March 01, 2010 5:08 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] AntlrWorks, remote debugging w/ C target fails

Hello,

A) From what I can read online, remote debugging in AntlrWorks should work
OK with other target languages (like C) - right?
B) ... then howcome this doesn't work:

1) I download examples-v3.tar.gz, expand it and go to (for instance)
C/dynamic-scope.
2) Run antlr: java org.antlr.Tool -debug T.g
3) Compile: gcc -o T TLexer.c TParser.c main.c -I. -L/usr/local/lib
-lantlr3c
4) and run: strace ./T
Of course strace doesn't chang anything, and I can see T executable listens
correctly at port 49100.

5) I open up AntlrWorks, open the T.g grammar file.
6) I select the "program" rule (ie. the root rule).
7) Execute: Run -> Debug remote, connect at localhost:49100.
(T executable accepts connection OK)

8) The very first time I single step, ./T ends with strace printing:
[.. Omitting ..]
send(4, "enterRule T.g program\n", 22, 0) = 22
recv(4, "a", 1, 0)                      = 1
recv(4, "c", 1, 0)                      = 1
recv(4, "k", 1, 0)                      = 1
recv(4, "\n", 1, 0)                     = 1
send(4, "terminate\n", 10, 0)           = 10
munmap(0xb7767000, 151552)              = 0
exit_group(0)                           = ?

9) Naturally nothing gets printed in the parse tree in AntlrWorks.???


I have tried with Java/dynamic-scope - everything works there.
What am I doing wrong?

best regards
-- Mark Ruvald.

A: Because it messes up the order in which people normally read text.
Q: Why is top-posting such a bad thing?
A: Top-posting.
Q: What is the most annoying thing on usenet and in e-mail?

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From fridi70 at gmx.de  Mon Mar  1 14:49:12 2010
From: fridi70 at gmx.de (fridi)
Date: Mon, 01 Mar 2010 23:49:12 +0100
Subject: [antlr-interest] Tree grammar conditionally run subrule
In-Reply-To: <31B14E9C-76B8-4FC2-9A35-B2C0E26CF512@cs.usfca.edu>
References: <20080527134002.56670@gmx.net>
	<483E4F61.6080903@gmx.de>	<20080529092146.22317gmx1@mx041.gmx.net>
	<483EF9BC.5020707@gmx.de>
	<31B14E9C-76B8-4FC2-9A35-B2C0E26CF512@cs.usfca.edu>
Message-ID: <4B8C4468.7010408@gmx.de>

Hi all,


I tried to skip a rule in an if-then-else construct using gated symantic 
predicates.

ifElse
scope {
   boolean expResult;
} :
    ^(
       IFTHEN b = expression { $ifElse::expResult = b; }
       (
          {$ifElse::expResult == true}?=> actionSequence
          | . // if expResult == false, no action required but eat the token
       )
      )
    |
    ^(
       IFTHENELSE b = expression { $ifElse::expResult = b; }
       (
          {$ifElse::expResult == true}? actionSequence
          . // if expResult == true, call the 'then' action and 'eat' 
the else action
          | . actionSequence // if expResult == false, 'eat' the 'then' 
action and call the else action
       )
      );


leeds to
Eval.g: node from after line 1:21 no viable alternative at input 'DOWN

This works well until the subrule itself is a tree (i.e. nested 
if-then-else). So it seems, that the '.' does not match the whole subtree?

Thanks for any hint, fridi
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Eval.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100301/0f26e2fc/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Simple.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100301/0f26e2fc/attachment-0001.pl 

From passionist_81 at yahoo.co.uk  Mon Mar  1 15:42:24 2010
From: passionist_81 at yahoo.co.uk (passionist_81 at yahoo.co.uk)
Date: Mon, 1 Mar 2010 15:42:24 -0800 (PST)
Subject: [antlr-interest] (no subject)
Message-ID: <137159.80975.qm@web24801.mail.ird.yahoo.com>

http://workmansteel.com/gHcIbnwOvS.htm


      


From kirby.bohling at gmail.com  Mon Mar  1 16:03:03 2010
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 1 Mar 2010 18:03:03 -0600
Subject: [antlr-interest] Wiki Markup Like Grammar Example
In-Reply-To: <4B8B0DE3.2070802@collectivegenius.net>
References: <4B8B0DE3.2070802@collectivegenius.net>
Message-ID: <3cac8fdf1003011603t3fe1b953nd694cfb9d8496008@mail.gmail.com>

Eric,

   I have a grammar for Wikimedia that recognizes ~90% of the pages on
Wikipedia.  It probably needs quite a bit of tender loving care.  I
can't release it, because I did it on the company dime, and I haven't
yet won the argument to release it.  Sorry.

   The key question is: Do you expect your users to have perfect
markup, or do you need to gracefully handle *anything* given to you?

   If users are expected to have perfect markup, and you can tweak the
markup to be easy to parse, the problem is fairly straight forward.
If you can make the grammar public, I'd happily look at it on or off
list.

   I wanted to parse Wikimedia markup to be able to allow for the
extraction of text with higher semantic quality for some NLP research.
 I spent a bunch of time, there are a number of grammars for ANTLR for
that.  None of them that I saw were in a working state.

The approach I took was:

Lex all characters that can ever be treated as "special", as a
individual token types.  If it can have a special meaning based upon
it's position in a line, I'd treat those independently (so '=' at the
beginning of a line vs. not the beginning means something different,
same thing for '*', some where STAR tokens, others were
LIST_ITEM_START tokens).

I treated the "bold" and the "italics" cases as toggles (that's the
way Wikimedia's PHP code handles it).  You later walk the code to
identify if this is an "on" or an "off" case.  It also was careful
about accounting for an inline <b> or </b>.  If all you are doing is
translating to HTML, that makes sense.

All non-newline whitespace, I lexed into whitespace tokens.  From
there the trickiest part was realizing that all multi-character markup
couldn't be handled as tokens (if it could be ambiguous).  So handling
{| vs. {{ vs. {{{ was couldn't be done in the lexer, had to be done in
the parser.  Otherwise it was impossible to match things like
{{{{{Foo}}} Bar}} or {{{{{Foo}} Bar}}}.  The lexer is greedy, and is
incapable of matching the former, only the latter.

Finally I had a token type for "INLINE_TEXT" that was a constructed
token type.  All of the characters that could never mean anything
special would be lexed into "TEXT" tokens.  In my "I give up, your
markup is busted" rule that was right near the top most rule, I'd push
any markup I couldn't parse with the sane rules, underneath an
"INLINE_TEXT".  So anything underneath of an "INLINE_TEXT" I new to
just push out after escaping for the output.

I had a couple of things that were very difficult, including the
<nowiki> tag.  That I just lexed from <nowiki> to </nowiki> with the
plan that I would write a custom grammar/handling for those tokens
special.  I saw several attempts to disable token generation, and have
the grammar maintain state.  It was just way to complex from what I
saw.  Trying to cram way too much logic lexer.

Finally, plan on making a ton of things optional.  Normal people can't
write things that parsers are happy with.  So virtually every "close"
tag had to be optional.  Even if I just read until EOF, and accepted
that.  So a lot of <ref> tags would go until the end of the document,
because they weren't closed correctly.  Or a bullet item that was on a
line that didn't end with a newline, it ended with EOF.  Lots of rules
needed lots of flexibility.  If you have a bunch of sample text, I'd
plan on brute force testing your grammar upon it.  I just downloaded
the Wikimedia dumps, and wrote the XML parser, and feed the text to my
parser and wrote out dump files upon every page I couldn't parse.  I
slowly fixed each case one by one, and eventually got pretty solid
coverage.

The other thing I found very useful is to imagine how I would write
the code by hand.  Then I'd think about how could I get ANTLR to
generate code that looked like that.  One problem I had, but never got
a chance to try out my solution was mismatched open/closes.  In
Wikimedia if you have the following:

{{ foo [[ bar }} ]]

It considers the [[ bar }} ]] to be a link, and you have a dangling {{
at the beginning of the text.  In that case, I wanted to use a scope,
with a isTerminated(tokenStream) function.  So every loop would
continue as long as "isTerminated" returned false.  As I saw a new
open, I'd push onto the stack the scope the thing that matched the
close just seen.  I had a ton of pathological cases in my attempts to
work around this.  Far too many cases ended up in the
"bad_markup_catchall" rule that I needed to match if I wanted to work
for on the production Wikitext.  I think it'll work because I can see
that's ANTLR outputs rules that are very similar to the types of code
in the Wikimedia PHP rules.  It's just much faster, and far easier to
maintain.  For bonus, it's not even in PHP (*shudders*)....

Kirby



On Sun, Feb 28, 2010 at 6:44 PM, Eric Webb <eric at collectivegenius.net> wrote:
> I am working on a note taking language (think wiki markup, but somewhat
> more specialized), and I am trying to use Antlr 3.2 to parse and create
> an AST of the content/structure.
>
> Does anyone have any sample wiki (or similar) grammar that works in
> Antlr 3.2? ?I found this:
>
> http://dirkriehle.com/publications/2008/wiki-creole/
>
> which is for Creole 1.0 (with is meant to be a standard Wiki markup
> language). ?Unfortunately, it doesn't work for me.
>
> Thanks in advance.
>
> cheers,
> eric
>
>
> ** More Information for the Interested **
>
>
> I have a working grammar that can parse document sections and
> paragraphs, for example:
>
> ? ?*section 1
> ? ?---
>
> ? ?this is a paragraph in the section
>
> ? ?section 1.1
> ? ?---
>
> ? ?nested sections!
>
> ? ?---
> ? ?---
> ? ?*
>
>
> It works great (after a bit of trial and error and reading The
> Definitive ANTLR Reference and giving gUnit a spin). ?Now, I am trying
> to start supporting other standard wiki type things in my grammar, like:
>
> Lists:
>
> ?* this is a list item
> ?* this is another list item
>
> Formatting:
>
> this is **bold**!
> this is //italic//.
>
> The problem is, my grammar for the the sections/paragraphs above is
> "word" based (ie: I create WORD tokens with the lexer), while the Creole
> example tokenizes the stream into character tokens to be able to
> identify the list, formatting, and other delimiters.
>
> I am hoping for a working example that shows some best practices for a
> language like wiki markup before I go about re-structuring my grammar to
> support these other things (which I think I need to do).
>
> Or, if I am totally misguided, let me know that too.
>
> cheers,
> eric
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From pskswathy at gmail.com  Mon Mar  1 22:01:22 2010
From: pskswathy at gmail.com (swathy murthy)
Date: Tue, 2 Mar 2010 11:31:22 +0530
Subject: [antlr-interest] Help with Null Pointer Exception
Message-ID: <fa7ae3a11003012201v194468cdw300aa2321b0abc60@mail.gmail.com>

Hi

I am currently working on a language translation. So, I have created a
template and the tree grammar. But, the template is not executing. It
is giving a Null Pointer Exception. I have the following grammars:
m.g is the main input grammar from which tree grammar g.g and finally,
I'm creating template t.g as the output.

My Java entry program:

import java.io.*;
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {
    public static StringTemplateGroup templates;
    public static void main(String[] args) throws Exception {
	
		//Read the template file
		String stg = null;
		int a = 0;
		if ( args.length<=1 )
		{
			stg = "sal_prog_template.stg";
		}
		else
		{
			stg = args[a];
			a++;
		}
		templates = new StringTemplateGroup(new FileReader(stg));

		//Parse input and build AST				
		ANTLRInputStream input = new ANTLRInputStream(System.in);
    		mLexer lexer = new mLexer(input);
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		mParser parser = new mParser(tokens);
		mParser.program_return r1 = parser.program();
		CommonTree tree1 = (CommonTree)r1.getTree();
		if (r1 != null)
                  System.out.println(tree1.toStringTree());

		//Build the tree grammar g
	     	CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree1);
		nodes.setTokenStream(tokens);
         	g grammar = new g(nodes);
		g.program_return r2 = grammar.program();
		CommonTree tree2 = (CommonTree)r2.getTree();
		if (r2 != null)
         	  System.out.println(tree2.toStringTree());

		//Build the template
		CommonTreeNodeStream nodes2 = new CommonTreeNodeStream(tree2);
		nodes2.setTokenStream(tokens);
         	t grammar2 = new t(nodes2);
		grammar2.setTemplateLib(templates);
                t.program_return r3 = grammar2.program();
		StringTemplate output = (StringTemplate)r3.getTemplate();
		System.out.println(output.toString());		

    }
}

The error is coming at the line:
		StringTemplate output = (StringTemplate)r3.getTemplate();
		System.out.println(output.toString());		
Please help to me to solve the error.

Thanks a lot.
Swathy

From fridi70 at gmx.de  Tue Mar  2 00:30:00 2010
From: fridi70 at gmx.de (fridi)
Date: Tue, 02 Mar 2010 09:30:00 +0100
Subject: [antlr-interest] Skip subtree with gated semantic predicate in tree
 parser - need help
Message-ID: <4B8CCC88.9070109@gmx.de>

Hi all,

I tried to skip a rule in an if-then-else construct using gated symantic 
predicates. 
This works well until the subrule itself is a tree (i.e. a nested 
if-then-else), and this tree should be skipped if the expression returns false.

So it seems, that the '.' does not match the whole subtree? I get this error: 
Eval.g: node from after line 1:21 no viable alternative at input 'DOWN

Thanks for any hint, fridi



ifElse
scope {
   boolean expResult;
} :
    ^(
       IFTHEN b = expression { $ifElse::expResult = b; }
       (
          {$ifElse::expResult == true}?=> actionSequence
          | . // if expResult == false, no action required but eat the token
       )
      )	
    ;


(full grammar see attachments)





-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Eval.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/186b9e68/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Simple.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/186b9e68/attachment-0001.pl 

From gokul007 at gmail.com  Tue Mar  2 04:07:24 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 2 Mar 2010 17:37:24 +0530
Subject: [antlr-interest] Help with Null Pointer Exception
In-Reply-To: <fa7ae3a11003012201v194468cdw300aa2321b0abc60@mail.gmail.com>
References: <fa7ae3a11003012201v194468cdw300aa2321b0abc60@mail.gmail.com>
Message-ID: <9362e74e1003020407o59396b2cydd0330e3bdd1b2dd@mail.gmail.com>

  I think, the information, which you have posted here, will not be
sufficient for someone to help you out. If possible attach the grammar files
and template files.

Thanks,
Gokul.

On Tue, Mar 2, 2010 at 11:31 AM, swathy murthy <pskswathy at gmail.com> wrote:

> Hi
>
> I am currently working on a language translation. So, I have created a
> template and the tree grammar. But, the template is not executing. It
> is giving a Null Pointer Exception. I have the following grammars:
> m.g is the main input grammar from which tree grammar g.g and finally,
> I'm creating template t.g as the output.
>
> My Java entry program:
>
> import java.io.*;
> import org.antlr.runtime.*;
> import org.antlr.runtime.tree.*;
> import org.antlr.stringtemplate.*;
>
> public class Main {
>    public static StringTemplateGroup templates;
>    public static void main(String[] args) throws Exception {
>
>                //Read the template file
>                String stg = null;
>                int a = 0;
>                if ( args.length<=1 )
>                {
>                        stg = "sal_prog_template.stg";
>                }
>                else
>                {
>                        stg = args[a];
>                        a++;
>                }
>                templates = new StringTemplateGroup(new FileReader(stg));
>
>                //Parse input and build AST
>                ANTLRInputStream input = new ANTLRInputStream(System.in);
>                mLexer lexer = new mLexer(input);
>                CommonTokenStream tokens = new CommonTokenStream(lexer);
>                mParser parser = new mParser(tokens);
>                mParser.program_return r1 = parser.program();
>                CommonTree tree1 = (CommonTree)r1.getTree();
>                if (r1 != null)
>                  System.out.println(tree1.toStringTree());
>
>                //Build the tree grammar g
>                CommonTreeNodeStream nodes = new
> CommonTreeNodeStream(tree1);
>                nodes.setTokenStream(tokens);
>                g grammar = new g(nodes);
>                g.program_return r2 = grammar.program();
>                CommonTree tree2 = (CommonTree)r2.getTree();
>                if (r2 != null)
>                  System.out.println(tree2.toStringTree());
>
>                //Build the template
>                CommonTreeNodeStream nodes2 = new
> CommonTreeNodeStream(tree2);
>                nodes2.setTokenStream(tokens);
>                t grammar2 = new t(nodes2);
>                grammar2.setTemplateLib(templates);
>                t.program_return r3 = grammar2.program();
>                StringTemplate output = (StringTemplate)r3.getTemplate();
>                System.out.println(output.toString());
>
>    }
> }
>
> The error is coming at the line:
>                StringTemplate output = (StringTemplate)r3.getTemplate();
>                System.out.println(output.toString());
> Please help to me to solve the error.
>
> Thanks a lot.
> Swathy
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Tue Mar  2 04:14:51 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 2 Mar 2010 17:44:51 +0530
Subject: [antlr-interest] Generated parser class too large to compile
In-Reply-To: <1dbe1f749b821c4580e4247411360e12@temporal-wave.com>
References: <4B86FB31.6080904@oracle.com>
	<1dbe1f749b821c4580e4247411360e12@temporal-wave.com>
Message-ID: <9362e74e1003020414o44d9115dx9854bf2fdf3671a2@mail.gmail.com>

Jim,
          Sometimes, we won't be able to split the grammar. For example,
when you have a big chain of rules and they are interdependent, then this
solution won't work. This problem happens only with Java.

Thanks,
Gokul.

On Fri, Feb 26, 2010 at 4:13 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Ron,
>
> All you need do is create a top level grammar file that imports the other
> parts of your SQL grammar which will then generate in separate classes. From
> my TSQL grammar:
>
> parser grammar tsql;
>
> options
> {
>        // Produce a generic AST as output.
>        //
>        output          = AST;
>
>        // Import the lexers token numbering scheme.
>        //
>        tokenVocab      = tsqllexer;
> }
>
>
> // Import the grammar for the million SQL statements
> //
> import tsqlcommon, tsqlselect, tsqlalter, tsqlcreate, tsqlpermissions,
> tsqlcursors, tsqlmisc, tsqlmisc2, tsqldrop
>
> tokens { X; Y; }
>
> @parser::header{  }
>
> a : couple of base rules ;
>
> couple : ;
>
> // Rest are in the other grammars. This works for the tree walkers too.
>
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ron Hunter-Duvar
> > Sent: Thursday, February 25, 2010 2:35 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Generated parser class too large to compile
> >
> > Hi,
> >
> > I'm running into a problem with the Java parser class generated by
> > Antlr
> > 3.2 being too large to compile. I don't think there's anything wrong
> > with my grammar or with Antlr, it's simply the size and complexity of
> > the grammar. It's already 2,500 lines of code, 208 rules, and Antlr
> > generates 68,000 lines of output. This is just the parser grammar (the
> > lexer grammar is separate and isn't a problem), and I'm not done yet.
> > The problem is that Java is not an ideal language target for code
> > generation, given it's 64KB of bytecode per class limit (and various
> > other 64K limits), due to the JVM using 16 bit pointers
> > (http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.
> > html#88659).
> >
> >
> > I've been able to work around the problem with a poor man's
> > refactoring,
> > a Perl script that breaks out the one generated class into interfaces
> > for the constants (tokens, DFA initializations) and an abstract
> > superclass for the DFA nested classes and methods and stubs for all the
> > other methods. This is working, but as I continue I have to keep
> > refining it to do more refactoring. It's really a kludge, and only
> > works
> > by relying on the specific structure and formatting of the Antlr
> > output.
> >
> > I'm thinking that a more general solution would be to modify the code
> > generation to generate factored code. I've only looked briefly at it so
> > far, but since it's all driven by StringTemplate templates and already
> > accomodates multiple output languages, it shouldn't be too difficult to
> > adapt it. I would probably create a new back-end "language" such as
> > "FactoredJava", based on the Java templates. That would make switching
> > between the standard one and mine a simple grammar option change. Does
> > anyone see a problem with this plan? Any suggestions?
> >
> > The only other alternative I see is to switch to a back-end language
> > that doesn't have this limitation. But that creates quite a bit of
> > rework (replacing semantic predicates and action code, and the
> > subclasses of standard Antlr runtime classes that I've created to
> > customize the behaviour), as well as integration issues with all the
> > other Java code.
> >
> > Is there anything I'm missing here? Any Antlr options that would
> > significantly reduce the size of the generated code?
> >
> > Thanks,
> > Ron
> >
> > --
> > Ron Hunter-Duvar | Software Developer V | 403-272-6580
> > Oracle Service Engineering
> > Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
> >
> > All opinions expressed here are mine, and do not necessarily represent
> > those of my employer.
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From passionist_81 at yahoo.co.uk  Tue Mar  2 06:10:44 2010
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Tue, 2 Mar 2010 06:10:44 -0800 (PST)
Subject: [antlr-interest] (no subject)
Message-ID: <252901.60438.qm@web24804.mail.ird.yahoo.com>

http://enjoycaned.webs.com?15h25xoi7ds


      


From fab.antoine at gmail.com  Tue Mar  2 06:22:31 2010
From: fab.antoine at gmail.com (Fabien Antoine)
Date: Tue, 02 Mar 2010 15:22:31 +0100
Subject: [antlr-interest]  Extends the lexer in C target
Message-ID: <4B8D1F27.5080801@gmail.com>

Hi list,

I'm working on a lexer/parser with the C runtime but I need to override
the "mTokens" function in the lexer to create a system of preprocessor.
However, I can't find the way to overwrite it with a clean method...

The "mTokens" function is static so I can't access it and I don't want
to edit by hand the ANTLR's C library to keep it clean.
And it seems to be quite complicated and not progressive to recreate an
other lexer structure with my new functions...

Thanks,

Fabien

From pskswathy at gmail.com  Tue Mar  2 07:11:52 2010
From: pskswathy at gmail.com (swathy murthy)
Date: Tue, 2 Mar 2010 20:41:52 +0530
Subject: [antlr-interest] Help with Null Pointer Exception
Message-ID: <fa7ae3a11003020711l3a710dafw3c7d356f8a8a27ea@mail.gmail.com>

Hi

I am currently working on a language translation. So, I have created a
template and the tree grammar. But, the template is not executing. It
is giving a Null Pointer Exception. I have the following grammars:
m.g is the main input grammar from which tree grammar g.g and finally,
I'm creating template t.g as the output.

My Java entry program:

import java.io.*;
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {
   public static StringTemplateGroup templates;
   public static void main(String[] args) throws Exception {

               //Read the template file
               String stg = null;
               int a = 0;
               if ( args.length<=1 )
               {
                       stg = "sal_prog_template.stg";
               }
               else
               {
                       stg = args[a];
                       a++;
               }
               templates = new StringTemplateGroup(new FileReader(stg));

               //Parse input and build AST
               ANTLRInputStream input = new ANTLRInputStream(System.in);
               mLexer lexer = new mLexer(input);
               CommonTokenStream tokens = new CommonTokenStream(lexer);
               mParser parser = new mParser(tokens);
               mParser.program_return r1 = parser.program();
               CommonTree tree1 = (CommonTree)r1.getTree();
               if (r1 != null)
                 System.out.println(tree1.toStringTree());

               //Build the tree grammar g
               CommonTreeNodeStream nodes = new CommonTreeNodeStream(tree1);
               nodes.setTokenStream(tokens);
               g grammar = new g(nodes);
               g.program_return r2 = grammar.program();
               CommonTree tree2 = (CommonTree)r2.getTree();
               if (r2 != null)
                 System.out.println(tree2.toStringTree());

               //Build the template
               CommonTreeNodeStream nodes2 = new CommonTreeNodeStream(tree2);
               nodes2.setTokenStream(tokens);
               t grammar2 = new t(nodes2);
               grammar2.setTemplateLib(templates);
               t.program_return r3 = grammar2.program();
               StringTemplate output = (StringTemplate)r3.getTemplate();
               System.out.println(output.toString());

   }
}

The error is coming at the line:
               System.out.println(output.toString());
If I am removing this line, there is no error but I am not able to
print the output. I have attached the grammar files, template file and
the input file.
Please help to me to solve the error.

Thanks a lot.
Swathy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: g.g
Type: application/octet-stream
Size: 1129 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/0c228c14/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: m.g
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/0c228c14/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: t.g
Type: application/octet-stream
Size: 445 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/0c228c14/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: input.mapcode
Type: application/octet-stream
Size: 16 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/0c228c14/attachment-0003.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sal_prog_template.stg
Type: application/octet-stream
Size: 1088 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100302/0c228c14/attachment-0004.obj 

From yaakov.davis at gmail.com  Tue Mar  2 07:45:18 2010
From: yaakov.davis at gmail.com (Yaakov Davis)
Date: Tue, 2 Mar 2010 17:45:18 +0200
Subject: [antlr-interest] Runtime metadata
Message-ID: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com>

Hi all.



Is it possible to retrieve grammar metadata during parsing? For example,
which rule is currently executed, it?s definition, etc.


Regards,

Yaakov

From jimi at temporal-wave.com  Tue Mar  2 07:53:20 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 02 Mar 2010 07:53:20 -0800
Subject: [antlr-interest] Extends the lexer in C target
In-Reply-To: <4B8D1F27.5080801@gmail.com>
Message-ID: <e7114fd9c62ff7498a16186e71201ddd@temporal-wave.com>

mTokens is generated but you can install any function you like in its place by adding code in the initialization. You should see that the address of the static function is just stored in the lexer structures. Just replace the pointer with a pointer to your own function. Read through the source though to find out what you need to do in that function and the functions that it invokes.

That said, if you are trying to override this function, then you are really replacing the lexer. Perhaps you should tell us why you want to override that and what you are trying to achieve - maybe there is a better way.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Fabien Antoine
Sent: Tuesday, March 02, 2010 6:23 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Extends the lexer in C target

Hi list,

I'm working on a lexer/parser with the C runtime but I need to override
the "mTokens" function in the lexer to create a system of preprocessor.
However, I can't find the way to overwrite it with a clean method...

The "mTokens" function is static so I can't access it and I don't want
to edit by hand the ANTLR's C library to keep it clean.
And it seems to be quite complicated and not progressive to recreate an
other lexer structure with my new functions...

Thanks,

Fabien

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From jbb at acm.org  Tue Mar  2 08:25:03 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 02 Mar 2010 11:25:03 -0500
Subject: [antlr-interest] Help with Null Pointer Exception
In-Reply-To: <fa7ae3a11003020711l3a710dafw3c7d356f8a8a27ea@mail.gmail.com>
References: <fa7ae3a11003020711l3a710dafw3c7d356f8a8a27ea@mail.gmail.com>
Message-ID: <1267547103.15861.10.camel@gecko.home.org>

Greetings!

On Tue, 2010-03-02 at 20:41 +0530, swathy murthy wrote:
> Hi
> 
> I am currently working on a language translation. So, I have created a
> template and the tree grammar. But, the template is not executing. It
> is giving a Null Pointer Exception. I have the following grammars:
...snipped....

If you look closely at the generated t.java file (and thankfully that is
a strength of ANTLR that one can inspect the generated code without
being driven insane, but i shouldn't digress...).

You will see that the generated program_return structure contains the
field `st` and that is what is returned by a call upon `getTemplate()`.

Further in the code for the program rule contains no initialization for
this `st` field! Thus the null pointer exception back in your Main when
you try to print it.

Unlike AST construction, ANTLR can not, by default, set any of the st
values returned by your rules. There is no reasonable implicit template
value.

So when using templates, you really want some form of
     -> {...result here...}
in *every* rule so that you explicitly govern the template generation
and propagation.

change your t.g program to be `program : stat -> {$stat.st} ;` and the
null pointer exception goes away. 

Hope this helps...
   -jbb




From Philippe.Frankson at Frsglobal.com  Tue Mar  2 08:25:39 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 2 Mar 2010 17:25:39 +0100
Subject: [antlr-interest] behaviour of lexer
In-Reply-To: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com>
References: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>

Hi all,
I'm using ANTLR 3.1.2.
Let's make it simple:
@int('444') is a function converting a string into integer.
If I don't have parentheses, then it is not a function, it is only a column name. Ex.: @test, @integer, @in, ....

Here is a part of lexer rules:

fragment DIGIT	: ('0'..'9');
fragment ALPHA	: ('a'..'z'|'A'..'Z'|'_');

OB		: '(';
INTTOKEN	: ('@int' OB)=> '@int'; // so I check if there is an open parenthesis to return INTTOKEN.
AT		: '@';
NAME		: ALPHA (ALPHA | DIGIT)*;


If my input is:
--> @int('444'), 	INTTOKEN is returned, which is OK.
--> @integer,	mismatched input 'eger', expecting '('. 	--> I would expect AT token followed by NAME token.
--> @int,		mismatched input '', expecting '('.		--> same remark.
--> @i,		mismatched character '', expecting 'n'. 	--> same remark.


Now, instead of AT and NAME rule, I replace by:
ATNAME	: '@' NAME;

If my input is:
--> @int('444'), 	INTTOKEN is returned, which is OK.
--> @integer,	ATNAME is returned, which is OK.
--> @int,		mismatched input '', expecting '('. --> This is what I want but I don't understand why I don't get ATNAME.
--> @i,		ATNAME is returned, which is OK.

So, I have 2 questions:
1) Why isn't it working when separating the 2 lexer rules (AT and NAME) ?
2) Why isn't it returning ATNAME token when input is '@int' in the second case ?

Thanks a lot for any help
Philippe Frankson





List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From bkiers at gmail.com  Tue Mar  2 10:00:33 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 2 Mar 2010 19:00:33 +0100
Subject: [antlr-interest] behaviour of lexer
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>
References: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>
Message-ID: <af443a971003021000l216ccea8oba0c2c807ccec252@mail.gmail.com>

On Tue, Mar 2, 2010 at 5:25 PM, Philippe Frankson <
Philippe.Frankson at frsglobal.com> wrote:

> ...
> @int('444') is a function converting a string into integer.
> If I don't have parentheses, then it is not a function, it is only a column
> name. Ex.: @test, @integer, @in, ....
>
> Here is a part of lexer rules:
>
> fragment DIGIT  : ('0'..'9');
> fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
>
> OB              : '(';
> INTTOKEN        : ('@int' OB)=> '@int'; // so I check if there is an open
> parenthesis to return INTTOKEN.
> AT              : '@';
> NAME            : ALPHA (ALPHA | DIGIT)*;   ...
>

Why not just include the OB in your lexer rule?
Something like this:

INT_METHOD      : AT 'int' OB; // or: AT 'int' OB STRING CB;
COLUMN          : AT NAME;

OB              : '(';
AT              : '@';
NAME            : ALPHA (ALPHA | DIGIT)*;

fragment DIGIT  : ('0'..'9');
fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');

and because lexer rules are matched from top to bottom, '@int' will be
matched as 'AT NAME'.

Regards,

Bart.

From bkiers at gmail.com  Tue Mar  2 10:07:09 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 2 Mar 2010 19:07:09 +0100
Subject: [antlr-interest] behaviour of lexer
In-Reply-To: <af443a971003021000l216ccea8oba0c2c807ccec252@mail.gmail.com>
References: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>
	<af443a971003021000l216ccea8oba0c2c807ccec252@mail.gmail.com>
Message-ID: <af443a971003021007v25f4ff30y96241bc6fb9a6a4@mail.gmail.com>

On Tue, Mar 2, 2010 at 7:00 PM, Bart Kiers <bkiers at gmail.com> wrote:

>
>
> On Tue, Mar 2, 2010 at 5:25 PM, Philippe Frankson <
> Philippe.Frankson at frsglobal.com> wrote:
>
>> ...
>>
>> @int('444') is a function converting a string into integer.
>> If I don't have parentheses, then it is not a function, it is only a
>> column name. Ex.: @test, @integer, @in, ....
>>
>> Here is a part of lexer rules:
>>
>> fragment DIGIT  : ('0'..'9');
>> fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
>>
>> OB              : '(';
>> INTTOKEN        : ('@int' OB)=> '@int'; // so I check if there is an open
>> parenthesis to return INTTOKEN.
>> AT              : '@';
>> NAME            : ALPHA (ALPHA | DIGIT)*;   ...
>>
>
> Why not just include the OB in your lexer rule?
> Something like this:
>
> INT_METHOD      : AT 'int' OB; // or: AT 'int' OB STRING CB;
> COLUMN          : AT NAME;
>
> OB              : '(';
>
> AT              : '@';
> NAME            : ALPHA (ALPHA | DIGIT)*;
>
> fragment DIGIT  : ('0'..'9');
> fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
>
> and because lexer rules are matched from top to bottom, '@int' will be
> matched as 'AT NAME'.
>
> Regards,
>
> Bart.
>

But, maybe better, move the "responsibility" to the parser instead of the
lexer:

parse           :  method | column;

method          : AT NAME OB STRING CB;
column          : AT NAME;

STRING          : '"' ~('"')* '"';
OB              : '(';
CB              : ')';
AT              : '@';
NAME            : ALPHA (ALPHA | DIGIT)*;

fragment DIGIT  : ('0'..'9');
fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');

Regards,

Bart.

From Philippe.Frankson at Frsglobal.com  Tue Mar  2 10:13:07 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 2 Mar 2010 19:13:07 +0100
Subject: [antlr-interest] behaviour of lexer
In-Reply-To: <af443a971003021000l216ccea8oba0c2c807ccec252@mail.gmail.com>
References: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>
	<af443a971003021000l216ccea8oba0c2c807ccec252@mail.gmail.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD008D29B43@BRU-EXCH01.frsglobal.internal>

Thank you for your answer, Bart.

But if I do what you are suggesting, my parser rules will look like this:
intexpr:		INTTOKEN arithexpr CB { ... };

Instead of this (which is more readable):
intexpr:		INTTOKEN OB arithexpr CB { ... };

But, ok, I have a solution to make it work.
But my questions were more about understanding how it is working internally.
Why having 2 lines in the lexer makes it different as having a single line ?
AT              : '@';
NAME            : ALPHA (ALPHA | DIGIT)*;   ...

Instead of

ATNAME: 		: '@' NAME;


Regards,
Philippe


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
Sent: 02 March 2010 19:01
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] behaviour of lexer

On Tue, Mar 2, 2010 at 5:25 PM, Philippe Frankson <
Philippe.Frankson at frsglobal.com> wrote:

> ...
> @int('444') is a function converting a string into integer.
> If I don't have parentheses, then it is not a function, it is only a column
> name. Ex.: @test, @integer, @in, ....
>
> Here is a part of lexer rules:
>
> fragment DIGIT  : ('0'..'9');
> fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
>
> OB              : '(';
> INTTOKEN        : ('@int' OB)=> '@int'; // so I check if there is an open
> parenthesis to return INTTOKEN.
> AT              : '@';
> NAME            : ALPHA (ALPHA | DIGIT)*;   ...
>

Why not just include the OB in your lexer rule?
Something like this:

INT_METHOD      : AT 'int' OB; // or: AT 'int' OB STRING CB;
COLUMN          : AT NAME;

OB              : '(';
AT              : '@';
NAME            : ALPHA (ALPHA | DIGIT)*;

fragment DIGIT  : ('0'..'9');
fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');

and because lexer rules are matched from top to bottom, '@int' will be
matched as 'AT NAME'.

Regards,

Bart.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From Philippe.Frankson at Frsglobal.com  Tue Mar  2 10:20:18 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 2 Mar 2010 19:20:18 +0100
Subject: [antlr-interest] behaviour of lexer
In-Reply-To: <af443a971003021007v25f4ff30y96241bc6fb9a6a4@mail.gmail.com>
References: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com><148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal><af443a971003021000l216ccea8oba0c2c807ccec252@mail.gmail.com>
	<af443a971003021007v25f4ff30y96241bc6fb9a6a4@mail.gmail.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD008D29B50@BRU-EXCH01.frsglobal.internal>

In fact, I have many functions (@int(), @float(), @left(), @right(), ...)
For each of those, I build a specific object.
If I do what you are suggesting, I will have to code a kind of switch(...) for every different kind of object.
I prefer to have that 'intelligence' in the parsing and not in my code.

I show you a piece of code I have to make it more clear...

floatexpr:		FLOATTOKEN OB arithexpr CB { stack.push(new DTExprFloat(this.colDefinition, (DTExpr)stack.pop())); };

leftexpr:		LEFTTOKEN OB arithexpr COMMA arithexpr CB { stack.push(new DTExprLeft(this.colDefinition, (DTExpr)stack.pop(), (DTExpr)stack.pop())); };

rightexpr: 		RIGHTTOKEN OB arithexpr COMMA arithexpr CB { stack.push(new DTExprRight(this.colDefinition, (DTExpr)stack.pop(), (DTExpr)stack.pop())); };

replaceexpr:	REPLACETOKEN OB arithexpr COMMA arithexpr COMMA arithexpr COMMA arithexpr CB { 
				// var,start,length,replacestring
				stack.push(new DTExprReplace(this.colDefinition, (DTExpr)stack.pop(), (DTExpr)stack.pop(), (DTExpr)stack.pop(), (DTExpr)stack.pop())); }
			;

substringexpr:	SUBSTRING OB arithexpr COMMA arithexpr COMMA arithexpr CB { stack.push(new DTExprSubstring(this.colDefinition, (DTExpr)stack.pop(), (DTExpr)stack.pop(), (DTExpr)stack.pop())); };

....


Regards
Philippe




-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
Sent: 02 March 2010 19:07
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] behaviour of lexer

On Tue, Mar 2, 2010 at 7:00 PM, Bart Kiers <bkiers at gmail.com> wrote:

>
>
> On Tue, Mar 2, 2010 at 5:25 PM, Philippe Frankson <
> Philippe.Frankson at frsglobal.com> wrote:
>
>> ...
>>
>> @int('444') is a function converting a string into integer.
>> If I don't have parentheses, then it is not a function, it is only a
>> column name. Ex.: @test, @integer, @in, ....
>>
>> Here is a part of lexer rules:
>>
>> fragment DIGIT  : ('0'..'9');
>> fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
>>
>> OB              : '(';
>> INTTOKEN        : ('@int' OB)=> '@int'; // so I check if there is an open
>> parenthesis to return INTTOKEN.
>> AT              : '@';
>> NAME            : ALPHA (ALPHA | DIGIT)*;   ...
>>
>
> Why not just include the OB in your lexer rule?
> Something like this:
>
> INT_METHOD      : AT 'int' OB; // or: AT 'int' OB STRING CB;
> COLUMN          : AT NAME;
>
> OB              : '(';
>
> AT              : '@';
> NAME            : ALPHA (ALPHA | DIGIT)*;
>
> fragment DIGIT  : ('0'..'9');
> fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
>
> and because lexer rules are matched from top to bottom, '@int' will be
> matched as 'AT NAME'.
>
> Regards,
>
> Bart.
>

But, maybe better, move the "responsibility" to the parser instead of the
lexer:

parse           :  method | column;

method          : AT NAME OB STRING CB;
column          : AT NAME;

STRING          : '"' ~('"')* '"';
OB              : '(';
CB              : ')';
AT              : '@';
NAME            : ALPHA (ALPHA | DIGIT)*;

fragment DIGIT  : ('0'..'9');
fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');

Regards,

Bart.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From j.pool at ision.nl  Tue Mar  2 10:54:56 2010
From: j.pool at ision.nl (John Pool)
Date: Tue, 2 Mar 2010 19:54:56 +0100
Subject: [antlr-interest] Out of memory problem for filter grammar
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAJ6HnVdlvLVNnvOxG5JxQq7CgAAAEAAAADqZLrPdospCmmELLhht0BYBAAAAAA==@ision.nl>

I have an ANTLR application with which I process a large (100Mb) file by
means of a filter grammar (@options{filter=true;}), in search of a simple
pattern. No backtracking is necessary. Each time the pattern is found, a
call is made to a (C#) method that does some bookkeeping. 

The file is scanned with the following loop: 

while (lexer.NextToken () != Token.EOF_TOKEN) { } 

When the pattern is encountered, the C# method is called. From 'the book' at
section 5.8 (filter option) I understood that 'the lexer yields an
incomplete stream of tokens'. This, however, does not prevent an out of
memory exception to occur after a while. 

How can I prevent this from happening? No backtracking whatsoever needs to
occur, so I do not need a token history to be retained during the execution
of the above loop. I have tried inserting {Skip();} statements, but this
does not seem to help.

I noticed that the exception does not occur (and scanning the file goes
considerably faster) when in lexer.NextToken() I comment out 



int m = input.Mark(); 



and 



input.Rewind(m); 

 

but I am not sure what undesired effect this may have.

 

Regards, John Pool



 


From cconway at cs.nyu.edu  Tue Mar  2 18:44:13 2010
From: cconway at cs.nyu.edu (Christopher L Conway)
Date: Tue, 2 Mar 2010 21:44:13 -0500
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <4a051d931002242109l5550483cmec103ea435c3f254@mail.gmail.com>
References: <4a051d931002242109l5550483cmec103ea435c3f254@mail.gmail.com>
Message-ID: <4a051d931003021844o6da3fc49q1e01a247e9bd478e@mail.gmail.com>

On Thu, Feb 25, 2010 at 12:09 AM, Christopher L Conway
<cconway at cs.nyu.edu> wrote:
> I've got a large input file (~39MB) that I'm attempting to parse with
> an ANTLR3-generated C parser. The parser is using a huge amount of
> memory (~3.7GB) and seems to start thrashing without making much
> progress towards termination. I found a thread from earlier this month
> (http://markmail.org/message/jfngdd2ci6h7qrbo) suggesting the most
> likely cause of such behavior is a parser bug, but I've stepped
> through the code and it seems to be lexing just fine. Rather, it seems
> the problem is that fillBuffer() is tokenizing the whole file in one
> go; then, the parsing rules slow to a crawl because the token buffer
> is sitting on all the memory.
>
> I wonder if there is a way to change fillBuffer()'s behavior, so that
> it will only lex some bounded number of tokens before allowing parsing
> to proceed?

I have a partial solution to this problem. To be clear, the issue is:

1. The default token stream implementation tokenizes the entire input
on the first call to LT().
2. The default token factory never de-allocates tokens.

Since a token structure is more than 100 bytes, large inputs can
easily consume multiple GB before parsing even begins. (This is in the
C back-end. I don't know about other back-ends.)

The solution consists of:

1. A token stream implementation that tokenizes up to a fixed lookahead limit.
2. A token factory that pre-allocates a fixed number of tokens,
recycling old tokens when new ones are requested.

This seems to be a sound strategy, so long as the input grammar has an
known lookahead limit and the allocation pool is sufficiently large.
My grammar is LL(2), and a lookahead limit of 2 with a token pool of 8
tokens works just fine.

Using this implementation, I'm able to parse the above-mentioned 39MB
input file using less than 700MB memory, a more than 5-fold
improvement on the defaults (as an added benefit, the parser actually
terminated after 45s and didn't completely lock my system!). The
parser is about 40% faster than an equivalent ANTLR 2.7 parser using
the C++ back-end, but still uses about 5 times as much memory. The
remaining excess memory usage seems to be due to the default string
factory implementation, which also doesn't seem to ever release memory
once allocated. This is a much more complex beast and I'm hesitant to
tackle it.

If anybody is interested in using this code, I'm willing to clean it
up and share it with the community. Please feel free to contact me.

Regards,
Chris

From jimi at temporal-wave.com  Tue Mar  2 23:36:49 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 02 Mar 2010 23:36:49 -0800
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <4a051d931003021844o6da3fc49q1e01a247e9bd478e@mail.gmail.com>
Message-ID: <865a95c496a2ca46b366c16bb4546214@temporal-wave.com>

Your points are well taken, but there are some misunderstandings here. I have tried to say on a number of occasions that the string factory thing coming from $xyz.text is just a convenience thing that should not be used in any environment that requires performance/memory efficiency. It is just a reasonable way to access the pointers and stuff.

However, look guys, this is C!! By which I mean, for real efficiency, you should be accessing things such as the text of the token via the pointers in the token and not via the artifice of $text. In the next release I will document this better and I apologize for not having done so up to press. There are also lots of macros and switches you can set that will improve performance a lot, and the upcoming release has lots of performance improvements. For comparison, I am currently working on a parser for IBM that is 7X faster than the 2.7.x C++ equivalent. Once again, I apologize for not documenting all of this stuff as well as it might be, but the code itself is well documented; there just needs to be more usage docs I think.

Thanks for the feedback,

jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christopher L Conway
Sent: Tuesday, March 02, 2010 6:44 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Bounding the token stream in the C backend

On Thu, Feb 25, 2010 at 12:09 AM, Christopher L Conway
<cconway at cs.nyu.edu> wrote:
> I've got a large input file (~39MB) that I'm attempting to parse with
> an ANTLR3-generated C parser. The parser is using a huge amount of
> memory (~3.7GB) and seems to start thrashing without making much
> progress towards termination. I found a thread from earlier this month
> (http://markmail.org/message/jfngdd2ci6h7qrbo) suggesting the most
> likely cause of such behavior is a parser bug, but I've stepped
> through the code and it seems to be lexing just fine. Rather, it seems
> the problem is that fillBuffer() is tokenizing the whole file in one
> go; then, the parsing rules slow to a crawl because the token buffer
> is sitting on all the memory.
>
> I wonder if there is a way to change fillBuffer()'s behavior, so that
> it will only lex some bounded number of tokens before allowing parsing
> to proceed?

I have a partial solution to this problem. To be clear, the issue is:

1. The default token stream implementation tokenizes the entire input
on the first call to LT().
2. The default token factory never de-allocates tokens.

Since a token structure is more than 100 bytes, large inputs can
easily consume multiple GB before parsing even begins. (This is in the
C back-end. I don't know about other back-ends.)

The solution consists of:

1. A token stream implementation that tokenizes up to a fixed lookahead limit.
2. A token factory that pre-allocates a fixed number of tokens,
recycling old tokens when new ones are requested.

This seems to be a sound strategy, so long as the input grammar has an
known lookahead limit and the allocation pool is sufficiently large.
My grammar is LL(2), and a lookahead limit of 2 with a token pool of 8
tokens works just fine.

Using this implementation, I'm able to parse the above-mentioned 39MB
input file using less than 700MB memory, a more than 5-fold
improvement on the defaults (as an added benefit, the parser actually
terminated after 45s and didn't completely lock my system!). The
parser is about 40% faster than an equivalent ANTLR 2.7 parser using
the C++ back-end, but still uses about 5 times as much memory. The
remaining excess memory usage seems to be due to the default string
factory implementation, which also doesn't seem to ever release memory
once allocated. This is a much more complex beast and I'm hesitant to
tackle it.

If anybody is interested in using this code, I'm willing to clean it
up and share it with the community. Please feel free to contact me.

Regards,
Chris

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From jimi at temporal-wave.com  Wed Mar  3 09:57:23 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Mar 2010 09:57:23 -0800
Subject: [antlr-interest] Extends the lexer in C target
In-Reply-To: <4B8E175A.3060707@gmail.com>
Message-ID: <3fd24b3d192ec040a4995fbe87e518d9@temporal-wave.com>

Fabien,

Look at the generated code and the 'constructor' for your lexer. If you trace through that code you will see that the mTokens() is just a static function, the pointer to which is installed in the lexer structures. You ca install your own.

However, pre-processors are easy enough and though you have to add extra code to your lexer rules, it is much easier (and more maintainable) to set the channel of the token to a member variable value or call SKIP. Then implement the pre-processor in the lexer. Sometimes you cannot do this though. For instance the C# pre-processor is implemented in the lexer, but the VB pre-processor is its own up front program (which I implemented as a parser grammar myself).

In your case though, I don't think that you want to override mToken(), you want to override the nextToken and nextTokenStr functions. Just copy them from antlr3lexer.c, modify as needed and perform the SKIP operation when your flag is set to 'off'. You then install the pointer to your version of nextToken() in the lexer structures after you have created your lexer and before anything calls in to it.


As I say though, personally I think it is neater to explicitly code for this in the lexer rules.

Jim

-----Original Message-----
From: Fabien Antoine [mailto:fab.antoine at gmail.com] 
Sent: Wednesday, March 03, 2010 12:02 AM
To: Jim Idle
Subject: Re: [antlr-interest] Extends the lexer in C target

Hi Jim and thanks for your answer.

I saw all what you said concerning the lexer implementation and it's
precisely the problem.

I want to create a kind of preprocessor that interprets statements only
if a constant is defined. And I don't want to manage a Preprocessor
token in all my rules.

I tried to reproduce the system used in the C# parser done by Andrew
Bradnan but its output target is C#. Then he can extend the generated
lexer and override the "mTokens" function. By overriding the "mTokens"
function, he can push the next token into the hidden channel if the
preprocessor decided that current statements must not be returned.

Then the only thing I want to do is to add this "filter" to the lexer.
I'm fully open to other "cleaner" solutions...

Fabien

On 02/03/2010 16:53, Jim Idle wrote:
> mTokens is generated but you can install any function you like in its place by adding code in the initialization. You should see that the address of the static function is just stored in the lexer structures. Just replace the pointer with a pointer to your own function. Read through the source though to find out what you need to do in that function and the functions that it invokes.
>
> That said, if you are trying to override this function, then you are really replacing the lexer. Perhaps you should tell us why you want to override that and what you are trying to achieve - maybe there is a better way.
>
> Jim
>   





From pskswathy at gmail.com  Wed Mar  3 10:37:05 2010
From: pskswathy at gmail.com (swathy murthy)
Date: Thu, 4 Mar 2010 00:07:05 +0530
Subject: [antlr-interest] templates for variables
Message-ID: <fa7ae3a11003031037w8f32d63q5ddaec39fda365f@mail.gmail.com>

Hi

I was wondering if anyone could help me with two issues:

1. Is it possible to create different templates for every variable in
the grammar. Example: I have x,y and z as 3 variables. I want to
access them individually in the templates so I need to store each of
them in different templates. How is that possible?

2.And, is it also possible to auto-generate variables using String
Template. Example: I need to have 3 temporary variables in the
program. So, can I write a template or code as such that the
auto-generation takes place and again I need them as different
templates.

Thanks a lot
Swathy

From cconway at cs.nyu.edu  Wed Mar  3 11:19:39 2010
From: cconway at cs.nyu.edu (Christopher L Conway)
Date: Wed, 3 Mar 2010 14:19:39 -0500
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <865a95c496a2ca46b366c16bb4546214@temporal-wave.com>
References: <4a051d931003021844o6da3fc49q1e01a247e9bd478e@mail.gmail.com>
	<865a95c496a2ca46b366c16bb4546214@temporal-wave.com>
Message-ID: <4a051d931003031119v4664dcfp3b1fe82f5b2cc6a3@mail.gmail.com>

Hi, Jim,

On Wed, Mar 3, 2010 at 2:36 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> Your points are well taken, but there are some misunderstandings here. I have tried to say on a number of occasions that the string factory thing coming from $xyz.text is just a convenience thing that should not be used in any environment that requires performance/memory efficiency. It is just a reasonable way to access the pointers and stuff.
>
> However, look guys, this is C!! By which I mean, for real efficiency, you should be accessing things such as the text of the token via the pointers in the token and not via the artifice of $text.

Thanks for this tip! By replacing

    std::string id( $IDENTIFIER.text->chars )

with

    pANTLR3_COMMON_TOKEN token = $IDENTIFIER;
    ANTLR3_MARKER start = token->getStartIndex(token);
    ANTLR3_MARKER end = token->getStopIndex(token);
    std::string id( (const char *)start, end-start+1 );

I see another 3-fold decrease in memory usage. In combination with the
bounded lookahead stream and token factory, this brings the memory
usage of my ANTLR 3 C parser roughly in line the ANTLR 2.7 C++ version
(it's still ~40% faster).

> In the next release I will document this better and I apologize for not having done so up to press. There are also lots of macros and switches you can set that will improve performance a lot, and the upcoming release has lots of performance improvements. For comparison, I am currently working on a parser for IBM that is 7X faster than the 2.7.x C++ equivalent. Once again, I apologize for not documenting all of this stuff as well as it might be, but the code itself is well documented; there just needs to be more usage docs I think.

This is intriguing. Could you point to a few of the important settings
I should be looking at?

Regards,
Chris

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christopher L Conway
> Sent: Tuesday, March 02, 2010 6:44 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Bounding the token stream in the C backend
>
> On Thu, Feb 25, 2010 at 12:09 AM, Christopher L Conway
> <cconway at cs.nyu.edu> wrote:
>> I've got a large input file (~39MB) that I'm attempting to parse with
>> an ANTLR3-generated C parser. The parser is using a huge amount of
>> memory (~3.7GB) and seems to start thrashing without making much
>> progress towards termination. I found a thread from earlier this month
>> (http://markmail.org/message/jfngdd2ci6h7qrbo) suggesting the most
>> likely cause of such behavior is a parser bug, but I've stepped
>> through the code and it seems to be lexing just fine. Rather, it seems
>> the problem is that fillBuffer() is tokenizing the whole file in one
>> go; then, the parsing rules slow to a crawl because the token buffer
>> is sitting on all the memory.
>>
>> I wonder if there is a way to change fillBuffer()'s behavior, so that
>> it will only lex some bounded number of tokens before allowing parsing
>> to proceed?
>
> I have a partial solution to this problem. To be clear, the issue is:
>
> 1. The default token stream implementation tokenizes the entire input
> on the first call to LT().
> 2. The default token factory never de-allocates tokens.
>
> Since a token structure is more than 100 bytes, large inputs can
> easily consume multiple GB before parsing even begins. (This is in the
> C back-end. I don't know about other back-ends.)
>
> The solution consists of:
>
> 1. A token stream implementation that tokenizes up to a fixed lookahead limit.
> 2. A token factory that pre-allocates a fixed number of tokens,
> recycling old tokens when new ones are requested.
>
> This seems to be a sound strategy, so long as the input grammar has an
> known lookahead limit and the allocation pool is sufficiently large.
> My grammar is LL(2), and a lookahead limit of 2 with a token pool of 8
> tokens works just fine.
>
> Using this implementation, I'm able to parse the above-mentioned 39MB
> input file using less than 700MB memory, a more than 5-fold
> improvement on the defaults (as an added benefit, the parser actually
> terminated after 45s and didn't completely lock my system!). The
> parser is about 40% faster than an equivalent ANTLR 2.7 parser using
> the C++ back-end, but still uses about 5 times as much memory. The
> remaining excess memory usage seems to be due to the default string
> factory implementation, which also doesn't seem to ever release memory
> once allocated. This is a much more complex beast and I'm hesitant to
> tackle it.
>
> If anybody is interested in using this code, I'm willing to clean it
> up and share it with the community. Please feel free to contact me.
>
> Regards,
> Chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Mar  3 11:38:18 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Mar 2010 11:38:18 -0800
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <4a051d931003031119v4664dcfp3b1fe82f5b2cc6a3@mail.gmail.com>
Message-ID: <1b7e8892107efb44824ab7faa31181b6@temporal-wave.com>

> > However, look guys, this is C!! By which I mean, for real efficiency,
> you should be accessing things such as the text of the token via the
> pointers in the token and not via the artifice of $text.
> 
> Thanks for this tip! By replacing
> 
>     std::string id( $IDENTIFIER.text->chars )
> 
> with
> 
>     pANTLR3_COMMON_TOKEN token = $IDENTIFIER;
>     ANTLR3_MARKER start = token->getStartIndex(token);
>     ANTLR3_MARKER end = token->getStopIndex(token);
>     std::string id( (const char *)start, end-start+1 );
>

But, do you really even need to create the string? Can you not just use the token and then if you ever actualize the text for something only copy it at that point?
 
> I see another 3-fold decrease in memory usage. In combination with the
> bounded lookahead stream and token factory, this brings the memory
> usage of my ANTLR 3 C parser roughly in line the ANTLR 2.7 C++ version
> (it's still ~40% faster).

It should be much better than that, so it tends to make me think that the overhead is in the other code you have surrounding the parser. You should try and do a comparison with no actions in either. However, perhaps you do not need to because once the parsing time is not really any part of the total time, you will get more performance by improving the action code of course.

> 
> > In the next release I will document this better and I apologize for
> not having done so up to press. There are also lots of macros and
> switches you can set that will improve performance a lot, and the
> upcoming release has lots of performance improvements. For comparison,
> I am currently working on a parser for IBM that is 7X faster than the
> 2.7.x C++ equivalent. Once again, I apologize for not documenting all
> of this stuff as well as it might be, but the code itself is well
> documented; there just needs to be more usage docs I think.
> 
> This is intriguing. Could you point to a few of the important settings
> I should be looking at?

Things such as not using method calls for LA() when you know you have 8 bit or 16 bit input (you can do this now, check your generated code or the C examples), turning off follow set stacking if you do not need fancy error messages but just wish to fail out or say "Syntax error at line 4". I also found some improvements in some of the runtime library and I have also implemented ->reuse() on all the objects up to the tree parsers. This means that you can let them accumulate the memory they need and then just reuse them for another parse, which loses all the malloc() calls; useful in things like servers. Look at the macro stuff in the generated code for more information.

Jim




From kaplanmn at msn.com  Wed Mar  3 11:53:10 2010
From: kaplanmn at msn.com (Michael Kaplan)
Date: Wed, 3 Mar 2010 19:53:10 +0000
Subject: [antlr-interest] (no subject)
Message-ID: <COL112-W40BE91876C442F98E813BBDF3A0@phx.gbl>


I am trying to write grammar for JavaScript using ANTLR and output language C#. By some reason exception Antlr.Runtime.MismatchedTokenException' throw every time when Match("//"),  Match('/'), Match("/*") end etc called.

Maybe somebody knows what possible may be a reason for this? 
 		 	   		  

From cconway at cs.nyu.edu  Wed Mar  3 15:37:22 2010
From: cconway at cs.nyu.edu (Christopher L Conway)
Date: Wed, 3 Mar 2010 18:37:22 -0500
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <1b7e8892107efb44824ab7faa31181b6@temporal-wave.com>
References: <4a051d931003031119v4664dcfp3b1fe82f5b2cc6a3@mail.gmail.com>
	<1b7e8892107efb44824ab7faa31181b6@temporal-wave.com>
Message-ID: <4a051d931003031537ib220a57jf896cd43fbb5d319@mail.gmail.com>

Jim,

On Wed, Mar 3, 2010 at 2:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> ? ? pANTLR3_COMMON_TOKEN token = $IDENTIFIER;
>> ? ? ANTLR3_MARKER start = token->getStartIndex(token);
>> ? ? ANTLR3_MARKER end = token->getStopIndex(token);
>> ? ? std::string id( (const char *)start, end-start+1 );
>>
>
> But, do you really even need to create the string? Can you not just use the token and then if you ever actualize the text for something only copy it at that point?

In general, this is a good suggestion. In this case, the identifier is
going into a symbol table so, yes, I do need the copy.

>> I see another 3-fold decrease in memory usage. In combination with the
>> bounded lookahead stream and token factory, this brings the memory
>> usage of my ANTLR 3 C parser roughly in line the ANTLR 2.7 C++ version
>> (it's still ~40% faster).
>
> It should be much better than that, so it tends to make me think that the overhead is in the other code you have surrounding the parser. You should try and do a comparison with no actions in either. However, perhaps you do not need to because once the parsing time is not really any part of the total time, you will get more performance by improving the action code of course.

I'm giving the running time for the whole parsing process, including
semantic actions. We've previously measured that about 50% of the time
was spent in ANTLR code, so this represents probably an 80-90% speedup
on pure parsing.

>> This is intriguing. Could you point to a few of the important settings
>> I should be looking at?
>
> Things such as not using method calls for LA() when you know you have 8 bit or 16 bit input (you can do this now, check your generated code or the C examples)

I'm having trouble figuring out how to do this. If I try to re-#define
LA in the @postinclude section, it gets placed before the default
generated #definition, so the default #definition wins.

> turning off follow set stacking if you do not need fancy error messages but just wish to fail out or say "Syntax error at line 4".

I also can't figure out how to do this and I'm not sure where to start.

Thanks,
Chris

From jimi at temporal-wave.com  Wed Mar  3 15:58:38 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Mar 2010 15:58:38 -0800
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <4a051d931003031537ib220a57jf896cd43fbb5d319@mail.gmail.com>
Message-ID: <eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>



> -----Original Message-----
> From: Christopher L Conway [mailto:cconway at cs.nyu.edu]
> Sent: Wednesday, March 03, 2010 3:37 PM
> To: Jim Idle
> > It should be much better than that, so it tends to make me think that
> the overhead is in the other code you have surrounding the parser. You
> should try and do a comparison with no actions in either. However,
> perhaps you do not need to because once the parsing time is not really
> any part of the total time, you will get more performance by improving
> the action code of course.
> 
> I'm giving the running time for the whole parsing process, including
> semantic actions. We've previously measured that about 50% of the time
> was spent in ANTLR code, so this represents probably an 80-90% speedup
> on pure parsing.

Still doesn't seem to be quite right to be honest, you should be seeing it much faster than that. Or do you mean that it now only takes 10 to 20% of the time to parse than it used to?

> 
> >> This is intriguing. Could you point to a few of the important
> settings
> >> I should be looking at?
> >
> > Things such as not using method calls for LA() when you know you have
> 8 bit or 16 bit input (you can do this now, check your generated code
> or the C examples)
> 
> I'm having trouble figuring out how to do this. If I try to re-#define
> LA in the @postinclude section, it gets placed before the default
> generated #definition, so the default #definition wins.

You need to define the macro as per the examples in the downloadable examples tar ball:

// While you can implement your own character streams and so on, they
// normally call things like LA() via function pointers. In general you will
// be using one of the pre-supplied input streams and you can instruct the
// generated code to access the input pointers directly.
//
// For  8 bit inputs            : #define ANTLR3_INLINE_INPUT_ASCII
// For 16 bit UTF16/UCS2 inputs : #define ANTLR3_INLINE_INPUT_UTF16
//
// If your compiled recognizer might be given inputs from either of the sources
// or you have written your own character input stream, then do not define
// either of these.
//
@lexer::header
{
#define	ANTLR3_INLINE_INPUT_ASCII
}


> 
> > turning off follow set stacking if you do not need fancy error
> messages but just wish to fail out or say "Syntax error at line 4".
> 
> I also can't figure out how to do this and I'm not sure where to start.

You cannot do this until the next release.

Jim




From micha-1 at fantasymail.de  Thu Mar  4 01:14:17 2010
From: micha-1 at fantasymail.de (michael)
Date: Thu, 4 Mar 2010 10:14:17 +0100
Subject: [antlr-interest] behaviour of lexer
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>
References: <6a6a435f1003020745u2b2bc30fv114cd25c38bbf6ba@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD008C6F4A4@BRU-EXCH01.frsglobal.internal>
Message-ID: <201003041014.17521.micha-1@fantasymail.de>

I have changed the AT rule a little bit and it's working now (I think):
In the AT rule the type of the token is changed dependent on the following 
text ("int("), note the empty fragment INTTOKEN:

lexer grammar TestLexer;

fragment DIGIT  : ('0'..'9');
fragment ALPHA  : ('a'..'z'|'A'..'Z'|'_');
fragment INTTOKEN :	 ;

OB              : '(';
AT              : ('@' 'int' OB) => '@int(' { $type=INTTOKEN;}
	       | '@' ;

NAME            : ALPHA (ALPHA | DIGIT)*;

WS:    (' ' |'\t' |'\n' |'\r' )+ {skip();} ;




and the parser:
parser grammar TestParser;


options {
	tokenVocab = TestLexer;
	
}

start: go+ EOF;


go: OB  { System.err.println("OB!"); }
| INTTOKEN {System.err.println("INTTOKEN"); }
| AT {System.err.println("AT"); }
| NAME {System.err.println("NAME" + $NAME); }
;


the output for  this input:
@ name @foo  @integer @int( @int4

is:

AT
NAME[@1,2:5='name',<9>,1:2]
AT
NAME[@3,8:10='foo',<9>,1:8]
AT
NAME[@5,14:20='integer',<9>,1:14]
INTTOKEN
AT
NAME[@8,29:32='int4',<9>,1:29]


cheers,
 Michael



From gokul007 at gmail.com  Thu Mar  4 05:11:45 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 4 Mar 2010 18:41:45 +0530
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>
References: <4a051d931003031537ib220a57jf896cd43fbb5d319@mail.gmail.com>
	<eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>
Message-ID: <9362e74e1003040511s48ff2e25h828466dc5639aea1@mail.gmail.com>

>
>
>
> >
> > > turning off follow set stacking if you do not need fancy error
> > messages but just wish to fail out or say "Syntax error at line 4".
> >
> > I also can't figure out how to do this and I'm not sure where to start.
>
> You cannot do this until the next release.
>
>
> Jim,
     When will be the next release?

Thanks,
Gokul.

From mathias at parboiled.org  Thu Mar  4 06:40:19 2010
From: mathias at parboiled.org (Mathias)
Date: Thu, 4 Mar 2010 15:40:19 +0100
Subject: [antlr-interest] Complementing ANTLR with parboiled
Message-ID: <01CD815B-CA74-43A5-A1FE-062DA424A3A4@parboiled.org>

Gentlemen,

looking through the archives of this list it seems that many questions come from people trying to get started with ANTLR with a relatively "small" application in mind. ANTLR, being the full-featured enterprise tool it is, might not always be the right solution for all of these parsing needs.

I would like to point your attention to a relatively new open-source parsing library for Java 5+ that might be a nice addition to your existing set of Java parsing tools and complement ANTLR in a few scenarios, where a more light-weight parsing solution is sufficient:
parboiled (http://www.parboiled.org)

parboiled implements a recursive-descent PEG parser with a number of interesting features:
- Grammar definition right in Java source, retaining full IDE support
- No special syntax, no external files, no additional build steps
- Scannerless (i.e. no separate lexer phase)
- Unique support for powerful inline action expressions
- Excellent parse error reporting and recovery
- Fully type-safe
- Well documented
- Comes with a number of examples, including a complete Java5 parser
- Very lightweight (one 250Kb JAR with no further dependencies)

Most parboiled users find it very easy to use and integrate, without the steep learning curve of many traditional parser generators.

Maybe some of you find it worth a look...

Cheers,
Mathias

PS: Of course any feedback with regard to the general parboiled approach or the specific implementation is very much appreciated!

---
mathias at parboiled.org
http://www.parboiled.org


From dbahr at estudiantes.uci.cu  Thu Mar  4 07:14:23 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Thu, 04 Mar 2010 10:14:23 -0500
Subject: [antlr-interest] Ignoring tokens in AnTLR+Python
In-Reply-To: <9362e74e1003040511s48ff2e25h828466dc5639aea1@mail.gmail.com>
References: <4a051d931003031537ib220a57jf896cd43fbb5d319@mail.gmail.com>	<eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>
	<9362e74e1003040511s48ff2e25h828466dc5639aea1@mail.gmail.com>
Message-ID: <4B8FCE4F.1060204@estudiantes.uci.cu>

Hello everyone!

I am fairly new to AnTLR. I am working on an interpreter for 
configuration files ('configure.ac' files i should say); but I don't 
need to scan every single token on the files, only variable assignments 
and one or another macro so, my question is:

How can I ignore every other sentence on the files?

At first I intended to do something like

SENTENCE: ASSIGNMENT | MACRO | OTHER;
OTHER: ~(ASSIGNMENT | MACRO)

but i get that ~TOKEN is not allowed in lexer. Is there a way to achieve 
this without me having to define the entire grammar of 'configure.ac' files?

Best regards,

D.H. Bahr

PS: As remarked in subject I am using python and not Java or C.

From dbahr at estudiantes.uci.cu  Thu Mar  4 07:21:19 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Thu, 04 Mar 2010 10:21:19 -0500
Subject: [antlr-interest] parsing files (as opossed to standard input) in
	AnTLR+Python
In-Reply-To: <4B8FCE4F.1060204@estudiantes.uci.cu>
References: <4a051d931003031537ib220a57jf896cd43fbb5d319@mail.gmail.com>	<eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>	<9362e74e1003040511s48ff2e25h828466dc5639aea1@mail.gmail.com>
	<4B8FCE4F.1060204@estudiantes.uci.cu>
Message-ID: <4B8FCFEF.8070007@estudiantes.uci.cu>

Hello again,

there's another thing I've been having troubles with: How do I tell 
Lexer to parse text files directly using AnTLR with Python?

Best regards,

D.H. Bahr

From dbahr at estudiantes.uci.cu  Thu Mar  4 07:51:46 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Thu, 04 Mar 2010 10:51:46 -0500
Subject: [antlr-interest] [Fwd:  Ignoring tokens in AnTLR+Python]
Message-ID: <4B8FD712.7050109@estudiantes.uci.cu>

I am back.

I've just realized that the ignoring should be done in Parser (not in 
Lexer), so I made some adjustments and tried again the construction:

sentence: assignment | macro | other;
other: ~(assignment | macro);

and now I'm getting that the subrule cannot be inverted. Only subrules 
of the form:
    (T1|T2|T3...) or
    ('c1'|'c2'|'c3'...)
may be inverted (ranges are also allowed).

So I am back to the same problem:

How do I ignore the other sentences i don't need?

Best regards,

D.H. Bahr.

-------- Original Message --------
Subject: 	[antlr-interest] Ignoring tokens in AnTLR+Python
Date: 	Thu, 04 Mar 2010 10:14:23 -0500
From: 	Daniel Hernandez Bahr <dbahr at estudiantes.uci.cu>
To: 	antlr-interest at antlr.org <antlr-interest at antlr.org>
References: 
<4a051d931003031537ib220a57jf896cd43fbb5d319 at mail.gmail.com> 
<eae205eee3744a458a11b871a47d2bfe at temporal-wave.com> 
<9362e74e1003040511s48ff2e25h828466dc5639aea1 at mail.gmail.com>



Hello everyone!

I am fairly new to AnTLR. I am working on an interpreter for 
configuration files ('configure.ac' files i should say); but I don't 
need to scan every single token on the files, only variable assignments 
and one or another macro so, my question is:

How can I ignore every other sentence on the files?

At first I intended to do something like

SENTENCE: ASSIGNMENT | MACRO | OTHER;
OTHER: ~(ASSIGNMENT | MACRO)

but i get that ~TOKEN is not allowed in lexer. Is there a way to achieve 
this without me having to define the entire grammar of 'configure.ac' files?

Best regards,

D.H. Bahr

PS: As remarked in subject I am using python and not Java or C.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Thu Mar  4 09:53:47 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 04 Mar 2010 09:53:47 -0800
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <9362e74e1003040511s48ff2e25h828466dc5639aea1@mail.gmail.com>
Message-ID: <c6fde37fa9c6204d971f3d9b0d7e5166@temporal-wave.com>

It has not been decided upon just yet. I need it myself though, so when I am finished modifying the runtime for my own project seems a likely possibility ;-) It will be announced here.

 

By next release, I mean a 3.2.x release (possibly just of the runtimes other than Java), and not a 4.0 release.

 

Jim

 

From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Thursday, March 04, 2010 5:12 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Bounding the token stream in the C backend

 



>
> > turning off follow set stacking if you do not need fancy error
> messages but just wish to fail out or say "Syntax error at line 4".
>
> I also can't figure out how to do this and I'm not sure where to start.

You cannot do this until the next release.



Jim, 
     When will be the next release?

Thanks,
Gokul. 

 




From pskswathy at gmail.com  Thu Mar  4 10:36:46 2010
From: pskswathy at gmail.com (swathy murthy)
Date: Fri, 5 Mar 2010 00:06:46 +0530
Subject: [antlr-interest] passing arguments to the templates
Message-ID: <fa7ae3a11003041036w51051c5bl68c0ccc946442e6c@mail.gmail.com>

Hi

I have attached my grammar file and the template file. Now, I need to
pass the value of the LITERAL in the rule expr to outer_template() in
rule stat.
I am directly using outer_template(var={$LITERAL.text}) but this is
not working. It gives the error that it cannot find the symbol
LITERAL.text as it is not present in the rule stat. So, how should I
pass the argument to the template.
Help would be appreciated.

Thanks a lot.
Swathy
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sal_prog_template.stg
Type: application/octet-stream
Size: 791 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100305/10119a52/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: t.g
Type: application/octet-stream
Size: 817 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100305/10119a52/attachment-0001.obj 

From cconway at cs.nyu.edu  Thu Mar  4 10:42:30 2010
From: cconway at cs.nyu.edu (Christopher L Conway)
Date: Thu, 4 Mar 2010 13:42:30 -0500
Subject: [antlr-interest] Macro redefinition warnings from libantlr3c headers
Message-ID: <4a051d931003041042y178513efg993a5598a33388e@mail.gmail.com>

I'm getting a lot of compiler warnings like the following when I
compile against libantlr3c:

In file included from
/home/chris/Tools/builds/libantlr3c/include/antlr3defs.h:217,
                 from /home/chris/Tools/builds/libantlr3c/include/antlr3.h:33,
...
/home/chris/Tools/builds/libantlr3c/include/antlr3config.h:92:1:
warning: "PACKAGE" redefined

and so on for PACKAGE_BUGREPORT, PACKAGE_NAME, etc.

Apparently, this is due to Automake-generated symbols being exported
in the public header files (we use Automake too, so we have the same
symbols in our project). There's some information about errors like
these in this StackOverflow question:
    http://stackoverflow.com/questions/7398/how-to-avoid-redefining-version-package-etc

I'm not sure what the best fix for this is. There are at least two options:

1. Rename antlr3config.h to config.h. I believe this will cause the
#include in antlr3defs.h to pick up my project's config.h, which may
or may not be a problem. I can confirm that this change makes the
compiler warnings disappear.

2. Make sure antlr3config.h in only #include'd from .c files, maybe by
breaking antlr3defs.h into a public and private portion.

This is a minor thing, but it's apt to make my colleagues grouchy
about adopting ANTLR3 (they like a clean build ;-)...

Regards,
Chris

From cconway at cs.nyu.edu  Thu Mar  4 10:53:23 2010
From: cconway at cs.nyu.edu (Christopher L Conway)
Date: Thu, 4 Mar 2010 13:53:23 -0500
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>
References: <4a051d931003031537ib220a57jf896cd43fbb5d319@mail.gmail.com>
	<eae205eee3744a458a11b871a47d2bfe@temporal-wave.com>
Message-ID: <4a051d931003041053n78ff6e12k94923549cbb21410@mail.gmail.com>

On Wed, Mar 3, 2010 at 6:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> I'm giving the running time for the whole parsing process, including
>> semantic actions. We've previously measured that about 50% of the time
>> was spent in ANTLR code, so this represents probably an 80-90% speedup
>> on pure parsing.
>
> Still doesn't seem to be quite right to be honest, you should be seeing it much faster than that. Or do you mean that it now only takes 10 to 20% of the time to parse than it used to?

Yes, that's what I mean. I am very, very pleased with the improvement. :-)

> You need to define the macro as per the examples in the downloadable examples tar ball:
>
> @lexer::header
> {
> #define ANTLR3_INLINE_INPUT_ASCII
> }

Ah... I missed this. This makes another 5-10% improvement! Wow.

Thanks,
Chris

From jimi at temporal-wave.com  Thu Mar  4 11:08:55 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 04 Mar 2010 11:08:55 -0800
Subject: [antlr-interest] Macro redefinition warnings from libantlr3c
	headers
In-Reply-To: <4a051d931003041042y178513efg993a5598a33388e@mail.gmail.com>
Message-ID: <8f6802ead0d76448b06a9548a2b87748@temporal-wave.com>

I'll look at it. I did not want to include it in the C files as it makes them messy with #ifdef UNIX and so on.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christopher L Conway
> Sent: Thursday, March 04, 2010 10:43 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Macro redefinition warnings from libantlr3c
> headers
> 
> I'm getting a lot of compiler warnings like the following when I
> compile against libantlr3c:
> 
> In file included from
> /home/chris/Tools/builds/libantlr3c/include/antlr3defs.h:217,
>                  from
> /home/chris/Tools/builds/libantlr3c/include/antlr3.h:33,
> ...
> /home/chris/Tools/builds/libantlr3c/include/antlr3config.h:92:1:
> warning: "PACKAGE" redefined
> 
> and so on for PACKAGE_BUGREPORT, PACKAGE_NAME, etc.
> 
> Apparently, this is due to Automake-generated symbols being exported
> in the public header files (we use Automake too, so we have the same
> symbols in our project). There's some information about errors like
> these in this StackOverflow question:
>     http://stackoverflow.com/questions/7398/how-to-avoid-redefining-
> version-package-etc
> 
> I'm not sure what the best fix for this is. There are at least two
> options:
> 
> 1. Rename antlr3config.h to config.h. I believe this will cause the
> #include in antlr3defs.h to pick up my project's config.h, which may
> or may not be a problem. I can confirm that this change makes the
> compiler warnings disappear.
> 
> 2. Make sure antlr3config.h in only #include'd from .c files, maybe by
> breaking antlr3defs.h into a public and private portion.
> 
> This is a minor thing, but it's apt to make my colleagues grouchy
> about adopting ANTLR3 (they like a clean build ;-)...
> 
> Regards,
> Chris
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Thu Mar  4 11:22:25 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 04 Mar 2010 11:22:25 -0800
Subject: [antlr-interest] Bounding the token stream in the C backend
In-Reply-To: <4a051d931003041053n78ff6e12k94923549cbb21410@mail.gmail.com>
Message-ID: <837547028fc7c442a9408fc7784b2701@temporal-wave.com>

OK cool. That is more in line with what I am expecting. If you don't need the followset tracking then you also squeeze out a bit more, but then you get to the limits of useful optimization I think. Reusing all the token memory and input file memory and so on is very useful if you have some kind of server process or are parsing hundreds/thousands of files at one time.

Thanks for putting in the time to verify some of my assumptions compared to the 2.7 C++ runtime.

Jim

> -----Original Message-----
> From: Christopher L Conway [mailto:cconway at cs.nyu.edu]
> Sent: Thursday, March 04, 2010 10:53 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Bounding the token stream in the C
> backend
> 
> On Wed, Mar 3, 2010 at 6:58 PM, Jim Idle <jimi at temporal-wave.com>
> wrote:
> >> I'm giving the running time for the whole parsing process, including
> >> semantic actions. We've previously measured that about 50% of the
> time
> >> was spent in ANTLR code, so this represents probably an 80-90%
> speedup
> >> on pure parsing.
> >
> > Still doesn't seem to be quite right to be honest, you should be
> seeing it much faster than that. Or do you mean that it now only takes
> 10 to 20% of the time to parse than it used to?
> 
> Yes, that's what I mean. I am very, very pleased with the improvement.
> :-)
> 
> > You need to define the macro as per the examples in the downloadable
> examples tar ball:
> >
> > @lexer::header
> > {
> > #define ANTLR3_INLINE_INPUT_ASCII
> > }
> 
> Ah... I missed this. This makes another 5-10% improvement! Wow.
> 
> Thanks,
> Chris




From ronburk at gmail.com  Thu Mar  4 12:05:41 2010
From: ronburk at gmail.com (Ron Burk)
Date: Thu, 4 Mar 2010 12:05:41 -0800
Subject: [antlr-interest] Complementing ANTLR with parboiled
In-Reply-To: <01CD815B-CA74-43A5-A1FE-062DA424A3A4@parboiled.org>
References: <01CD815B-CA74-43A5-A1FE-062DA424A3A4@parboiled.org>
Message-ID: <30dde8ce1003041205r7f0bed8fgbd6f74f9ea03f242@mail.gmail.com>

> PS: Of course any feedback

OK, I was bemused by your "motivation" page. The motive is built
around the desire to create domain-specific languages with Java.
But then, the first disadvantage you claim for existing parser generators
is this:

  Special, non-java grammar syntax in separate project files

Um, that's because parser generators *are* domain-specific
languages!  So, you don't like special, non-java syntaxes,
but your goal is to create a tool that lets people create special,
non-java syntaxes. :-)

But seriously, much of the other motivation points also suffer
the same self-contradictory problem vis a vis the basic nature
of a domain-specific language. OTOH, this point deserves special
note:

    More complicated design and maintenance through divided
    parsing process in lexing (token generation) and token
    parsing phases

The division of labor between lexing and parsing is more than
half a century old, and it was arrived at (and survived) because
it does exactly the opposite of what you say: it makes the
code more modular and easier to maintain. When you try to
pack the two together for any non-trivial language, you
inevitably see the hacks multiply (e.g., something as trivial
as white space becomes some kind of "special case").

Finally, as we live in an age where CPU speed has peaked
and even begun to decline, there is increasing pressure to
parallelize code to take advantage of the only remaining
practical advantage of Moore's law -- increasing numbers
of CPUs. For a language processor, one of the few neat
and modular divisions of labor that can easily be put
in parallel is the division between lexing and parsing.
Often, efficiency doesn't matter for parsing, but since
you list ANTLR's footprint as a disadvantage, it becomes
contradictory to claim that combining lexing and parsing
so they can't be parallelized is an unvarnished advantage.

None of this is by way of criticism of the project, which
I find interesting reading (thanks for the pointer!).

From michael.bedward at gmail.com  Thu Mar  4 15:17:44 2010
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 5 Mar 2010 10:17:44 +1100
Subject: [antlr-interest] Complementing ANTLR with parboiled
In-Reply-To: <01CD815B-CA74-43A5-A1FE-062DA424A3A4@parboiled.org>
References: <01CD815B-CA74-43A5-A1FE-062DA424A3A4@parboiled.org>
Message-ID: <e24c4c271003041517n5eebed15xffde883f2137c4c@mail.gmail.com>

On 5 March 2010 01:40, Mathias <mathias at parboiled.org> wrote:
> Gentlemen,

I didn't realize this was a boys-only club

Michael

From gokul007 at gmail.com  Thu Mar  4 22:14:30 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 5 Mar 2010 11:44:30 +0530
Subject: [antlr-interest] passing arguments to the templates
In-Reply-To: <fa7ae3a11003041036w51051c5bl68c0ccc946442e6c@mail.gmail.com>
References: <fa7ae3a11003041036w51051c5bl68c0ccc946442e6c@mail.gmail.com>
Message-ID: <9362e74e1003042214s194ffef5lecfa0c6b6daa2581@mail.gmail.com>

 Keep track of things using a hashmap.
insert into the hashmap at expr and retrieve them at stat and pass it to the
template.

Gokul.


On Fri, Mar 5, 2010 at 12:06 AM, swathy murthy <pskswathy at gmail.com> wrote:

> Hi
>
> I have attached my grammar file and the template file. Now, I need to
> pass the value of the LITERAL in the rule expr to outer_template() in
> rule stat.
> I am directly using outer_template(var={$LITERAL.text}) but this is
> not working. It gives the error that it cannot find the symbol
> LITERAL.text as it is not present in the rule stat. So, how should I
> pass the argument to the template.
> Help would be appreciated.
>
> Thanks a lot.
> Swathy
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From j.pool at ision.nl  Thu Mar  4 23:32:35 2010
From: j.pool at ision.nl (John Pool)
Date: Fri, 5 Mar 2010 08:32:35 +0100
Subject: [antlr-interest] Out of memory - how to avoid retaining all tokens??
Message-ID: <!&!AAAAAAAAAAAYAAAAAAAAAJ6HnVdlvLVNnvOxG5JxQq7CgAAAEAAAABELblLEUIJCgbuL3EQTkpgBAAAAAA==@ision.nl>

I have an ANTLR application with which I process a large (100Mb) file by
means of a filter grammar (@options{filter=true;}), in search of a simple
pattern. No backtracking is necessary. Each time the pattern is found, a
call is made to a (C#) method that does some bookkeeping. 

The file is scanned with the following loop: 

while (lexer.NextToken () != Token.EOF_TOKEN) { } 

When the pattern is encountered, the C# method is called. From 'the book' at
section 5.8 (filter option) I understood that 'the lexer yields an
incomplete stream of tokens'. This, however, does not prevent an out of
memory exception to occur after a while. 

How can I prevent this from happening? No backtracking whatsoever needs to
occur, so I do not need a token history to be retained during the execution
of the above loop. I have tried inserting {Skip();} statements, but this
does not seem to help.

I noticed that the exception does not occur (and scanning the file goes
considerably faster) when in lexer.NextToken() I comment out 

int m = input.Mark(); 

and 

input.Rewind(m); 

 

but I am not sure what undesired effect this may have.

 

Regards, John Pool

 


From dbahr at estudiantes.uci.cu  Fri Mar  5 06:22:24 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Fri, 05 Mar 2010 09:22:24 -0500
Subject: [antlr-interest] [Fwd:  Ignoring tokens in AnTLR+Python]
In-Reply-To: <4B8FD712.7050109@estudiantes.uci.cu>
References: <4B8FD712.7050109@estudiantes.uci.cu>
Message-ID: <4B9113A0.5020305@estudiantes.uci.cu>

Hi all.

Sorry for posting the hole "parsing files" thing, it was rather stupid 
and i figured it out later.

The thing is, I have defined the rules for the assignments and macros, 
and made a sample input file containing only such instructions i'm 
posting the first lines so you have a clearer idea:

SWIG_LDFLAGS="$LDFLAGS"
INSTALL="$abs_srcdir/$INSTALL"
APR_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
APU_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]

as can be seen there are only assignments in the first four lines and 
the assignment rule looks like this:

sentences   :   sentence (sentences)?;

sentence    :   assignment | macro;

assignment  :   w:WORD EQUAL^ v:value
            {
                w = w.getText()
                e = Exception ("%s is not a valid identifier" %(w))
                print w, "::",
                if (not w[0].isalpha()):
                    raise e
                else:
                    try:
                        index = w.index(".")
                        index = w.index("-")
                        raise e
                    except ValueError:
                        index = -1
            }
            ;

value       :   WORD | s:STRINGLIT
            {
                print s.getText()
            }
            ;

yet when i run the lexer/parser script i get this:

"$LDFLAGS"
SWIG_LDFLAGS :: UNEXPECTED CHAR: 0xA

does anyone knows what i am doing wrong here??

Best regards,

D.H. Bahr
Daniel Hernandez Bahr wrote:
> I am back.
>
> I've just realized that the ignoring should be done in Parser (not in 
> Lexer), so I made some adjustments and tried again the construction:
>
> sentence: assignment | macro | other;
> other: ~(assignment | macro);
>
> and now I'm getting that the subrule cannot be inverted. Only subrules 
> of the form:
>     (T1|T2|T3...) or
>     ('c1'|'c2'|'c3'...)
> may be inverted (ranges are also allowed).
>
> So I am back to the same problem:
>
> How do I ignore the other sentences i don't need?
>
> Best regards,
>
> D.H. Bahr.
>
> -------- Original Message --------
> Subject: 	[antlr-interest] Ignoring tokens in AnTLR+Python
> Date: 	Thu, 04 Mar 2010 10:14:23 -0500
> From: 	Daniel Hernandez Bahr <dbahr at estudiantes.uci.cu>
> To: 	antlr-interest at antlr.org <antlr-interest at antlr.org>
> References: 
> <4a051d931003031537ib220a57jf896cd43fbb5d319 at mail.gmail.com> 
> <eae205eee3744a458a11b871a47d2bfe at temporal-wave.com> 
> <9362e74e1003040511s48ff2e25h828466dc5639aea1 at mail.gmail.com>
>
>
>
> Hello everyone!
>
> I am fairly new to AnTLR. I am working on an interpreter for 
> configuration files ('configure.ac' files i should say); but I don't 
> need to scan every single token on the files, only variable assignments 
> and one or another macro so, my question is:
>
> How can I ignore every other sentence on the files?
>
> At first I intended to do something like
>
> SENTENCE: ASSIGNMENT | MACRO | OTHER;
> OTHER: ~(ASSIGNMENT | MACRO)
>
> but i get that ~TOKEN is not allowed in lexer. Is there a way to achieve 
> this without me having to define the entire grammar of 'configure.ac' files?
>
> Best regards,
>
> D.H. Bahr
>
> PS: As remarked in subject I am using python and not Java or C.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From dbahr at estudiantes.uci.cu  Fri Mar  5 06:37:34 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Fri, 05 Mar 2010 09:37:34 -0500
Subject: [antlr-interest] [Fwd:  Ignoring tokens in AnTLR+Python]
In-Reply-To: <4B9113A0.5020305@estudiantes.uci.cu>
References: <4B8FD712.7050109@estudiantes.uci.cu>
	<4B9113A0.5020305@estudiantes.uci.cu>
Message-ID: <4B91172E.9080808@estudiantes.uci.cu>

I should add that i DO have a whitespace rule defined as follow:

protected WS:   ( ' '
                |    '\t'
                |    '\f'
                // handle newlines
                |   (    ("\r\n") => "\r\n"  // Evil DOS
                    |    '\r'    // Macintosh
                    |    '\n'    // Unix (the right way)
                    )
                    { $newline; }
                )
                { _ttype = SKIP; }
                ;

Is there anything wrong with the rule? I have no clue about why am 
getting the unexpected char thing.

Does anyone?

Best regards,

D.H. Bahr
Daniel Hernandez Bahr wrote:
> Hi all.
>
> Sorry for posting the hole "parsing files" thing, it was rather stupid 
> and i figured it out later.
>
> The thing is, I have defined the rules for the assignments and macros, 
> and made a sample input file containing only such instructions i'm 
> posting the first lines so you have a clearer idea:
>
> SWIG_LDFLAGS="$LDFLAGS"
> INSTALL="$abs_srcdir/$INSTALL"
> APR_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
> APU_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
>
> as can be seen there are only assignments in the first four lines and 
> the assignment rule looks like this:
>
> sentences   :   sentence (sentences)?;
>
> sentence    :   assignment | macro;
>
> assignment  :   w:WORD EQUAL^ v:value
>             {
>                 w = w.getText()
>                 e = Exception ("%s is not a valid identifier" %(w))
>                 print w, "::",
>                 if (not w[0].isalpha()):
>                     raise e
>                 else:
>                     try:
>                         index = w.index(".")
>                         index = w.index("-")
>                         raise e
>                     except ValueError:
>                         index = -1
>             }
>             ;
>
> value       :   WORD | s:STRINGLIT
>             {
>                 print s.getText()
>             }
>             ;
>
> yet when i run the lexer/parser script i get this:
>
> "$LDFLAGS"
> SWIG_LDFLAGS :: UNEXPECTED CHAR: 0xA
>
> does anyone knows what i am doing wrong here??
>
> Best regards,
>
> D.H. Bahr
> Daniel Hernandez Bahr wrote:
>   
>> I am back.
>>
>> I've just realized that the ignoring should be done in Parser (not in 
>> Lexer), so I made some adjustments and tried again the construction:
>>
>> sentence: assignment | macro | other;
>> other: ~(assignment | macro);
>>
>> and now I'm getting that the subrule cannot be inverted. Only subrules 
>> of the form:
>>     (T1|T2|T3...) or
>>     ('c1'|'c2'|'c3'...)
>> may be inverted (ranges are also allowed).
>>
>> So I am back to the same problem:
>>
>> How do I ignore the other sentences i don't need?
>>
>> Best regards,
>>
>> D.H. Bahr.
>>
>> -------- Original Message --------
>> Subject: 	[antlr-interest] Ignoring tokens in AnTLR+Python
>> Date: 	Thu, 04 Mar 2010 10:14:23 -0500
>> From: 	Daniel Hernandez Bahr <dbahr at estudiantes.uci.cu>
>> To: 	antlr-interest at antlr.org <antlr-interest at antlr.org>
>> References: 
>> <4a051d931003031537ib220a57jf896cd43fbb5d319 at mail.gmail.com> 
>> <eae205eee3744a458a11b871a47d2bfe at temporal-wave.com> 
>> <9362e74e1003040511s48ff2e25h828466dc5639aea1 at mail.gmail.com>
>>
>>
>>
>> Hello everyone!
>>
>> I am fairly new to AnTLR. I am working on an interpreter for 
>> configuration files ('configure.ac' files i should say); but I don't 
>> need to scan every single token on the files, only variable assignments 
>> and one or another macro so, my question is:
>>
>> How can I ignore every other sentence on the files?
>>
>> At first I intended to do something like
>>
>> SENTENCE: ASSIGNMENT | MACRO | OTHER;
>> OTHER: ~(ASSIGNMENT | MACRO)
>>
>> but i get that ~TOKEN is not allowed in lexer. Is there a way to achieve 
>> this without me having to define the entire grammar of 'configure.ac' files?
>>
>> Best regards,
>>
>> D.H. Bahr
>>
>> PS: As remarked in subject I am using python and not Java or C.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>   
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From dbahr at estudiantes.uci.cu  Fri Mar  5 06:37:34 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Fri, 05 Mar 2010 09:37:34 -0500
Subject: [antlr-interest] [Fwd:  Ignoring tokens in AnTLR+Python]
In-Reply-To: <4B9113A0.5020305@estudiantes.uci.cu>
References: <4B8FD712.7050109@estudiantes.uci.cu>
	<4B9113A0.5020305@estudiantes.uci.cu>
Message-ID: <4B91172E.9080808@estudiantes.uci.cu>

I should add that i DO have a whitespace rule defined as follow:

protected WS:   ( ' '
                |    '\t'
                |    '\f'
                // handle newlines
                |   (    ("\r\n") => "\r\n"  // Evil DOS
                    |    '\r'    // Macintosh
                    |    '\n'    // Unix (the right way)
                    )
                    { $newline; }
                )
                { _ttype = SKIP; }
                ;

Is there anything wrong with the rule? I have no clue about why am 
getting the unexpected char thing.

Does anyone?

Best regards,

D.H. Bahr
Daniel Hernandez Bahr wrote:
> Hi all.
>
> Sorry for posting the hole "parsing files" thing, it was rather stupid 
> and i figured it out later.
>
> The thing is, I have defined the rules for the assignments and macros, 
> and made a sample input file containing only such instructions i'm 
> posting the first lines so you have a clearer idea:
>
> SWIG_LDFLAGS="$LDFLAGS"
> INSTALL="$abs_srcdir/$INSTALL"
> APR_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
> APU_VER_REGEXES=["0\.9\.[7-9] 0\.9\.1[0-9] 1\."]
>
> as can be seen there are only assignments in the first four lines and 
> the assignment rule looks like this:
>
> sentences   :   sentence (sentences)?;
>
> sentence    :   assignment | macro;
>
> assignment  :   w:WORD EQUAL^ v:value
>             {
>                 w = w.getText()
>                 e = Exception ("%s is not a valid identifier" %(w))
>                 print w, "::",
>                 if (not w[0].isalpha()):
>                     raise e
>                 else:
>                     try:
>                         index = w.index(".")
>                         index = w.index("-")
>                         raise e
>                     except ValueError:
>                         index = -1
>             }
>             ;
>
> value       :   WORD | s:STRINGLIT
>             {
>                 print s.getText()
>             }
>             ;
>
> yet when i run the lexer/parser script i get this:
>
> "$LDFLAGS"
> SWIG_LDFLAGS :: UNEXPECTED CHAR: 0xA
>
> does anyone knows what i am doing wrong here??
>
> Best regards,
>
> D.H. Bahr
> Daniel Hernandez Bahr wrote:
>   
>> I am back.
>>
>> I've just realized that the ignoring should be done in Parser (not in 
>> Lexer), so I made some adjustments and tried again the construction:
>>
>> sentence: assignment | macro | other;
>> other: ~(assignment | macro);
>>
>> and now I'm getting that the subrule cannot be inverted. Only subrules 
>> of the form:
>>     (T1|T2|T3...) or
>>     ('c1'|'c2'|'c3'...)
>> may be inverted (ranges are also allowed).
>>
>> So I am back to the same problem:
>>
>> How do I ignore the other sentences i don't need?
>>
>> Best regards,
>>
>> D.H. Bahr.
>>
>> -------- Original Message --------
>> Subject: 	[antlr-interest] Ignoring tokens in AnTLR+Python
>> Date: 	Thu, 04 Mar 2010 10:14:23 -0500
>> From: 	Daniel Hernandez Bahr <dbahr at estudiantes.uci.cu>
>> To: 	antlr-interest at antlr.org <antlr-interest at antlr.org>
>> References: 
>> <4a051d931003031537ib220a57jf896cd43fbb5d319 at mail.gmail.com> 
>> <eae205eee3744a458a11b871a47d2bfe at temporal-wave.com> 
>> <9362e74e1003040511s48ff2e25h828466dc5639aea1 at mail.gmail.com>
>>
>>
>>
>> Hello everyone!
>>
>> I am fairly new to AnTLR. I am working on an interpreter for 
>> configuration files ('configure.ac' files i should say); but I don't 
>> need to scan every single token on the files, only variable assignments 
>> and one or another macro so, my question is:
>>
>> How can I ignore every other sentence on the files?
>>
>> At first I intended to do something like
>>
>> SENTENCE: ASSIGNMENT | MACRO | OTHER;
>> OTHER: ~(ASSIGNMENT | MACRO)
>>
>> but i get that ~TOKEN is not allowed in lexer. Is there a way to achieve 
>> this without me having to define the entire grammar of 'configure.ac' files?
>>
>> Best regards,
>>
>> D.H. Bahr
>>
>> PS: As remarked in subject I am using python and not Java or C.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>   
>>     
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From pskswathy at gmail.com  Fri Mar  5 09:08:07 2010
From: pskswathy at gmail.com (swathy murthy)
Date: Fri, 5 Mar 2010 22:38:07 +0530
Subject: [antlr-interest] Fwd:  passing arguments to the templates
In-Reply-To: <fa7ae3a11003050907w15ab804gd377303cab378131@mail.gmail.com>
References: <fa7ae3a11003041036w51051c5bl68c0ccc946442e6c@mail.gmail.com> 
	<9362e74e1003042214s194ffef5lecfa0c6b6daa2581@mail.gmail.com> 
	<fa7ae3a11003050907w15ab804gd377303cab378131@mail.gmail.com>
Message-ID: <fa7ae3a11003050908u2390ede2i7f67521453e3a18b@mail.gmail.com>

Hi

Actually, I tried using Hash Map long back. But, it did not work out.
And, the main thing is that I just need to store the name of the
variables. I do not need the values as I am not executing any actions
in the grammar. I am just using it as a language converter. Could
anyone please suggest me how to do that looking at my grammar files
which are attached.
m.g is the main grammar file from which I am creating a tree grammar
g.g and from the tree grammar, I am creating a template t.g.
And, also I need to generate some temporary variables automatically
based on number of input variables. Would it be possible to generate
variables automatically and store each variable as a template or using
hash map.

Thanks.
Swathy

On Fri, Mar 5, 2010 at 11:44 AM, Gokulakannan Somasundaram
<gokul007 at gmail.com> wrote:
> Keep track of things using a hashmap.
> insert into the hashmap at expr and retrieve them at stat and pass it to the
> template.
>
> Gokul.
>
>
> On Fri, Mar 5, 2010 at 12:06 AM, swathy murthy <pskswathy at gmail.com> wrote:
>>
>> Hi
>>
>> I have attached my grammar file and the template file. Now, I need to
>> pass the value of the LITERAL in the rule expr to outer_template() in
>> rule stat.
>> I am directly using outer_template(var={$LITERAL.text}) but this is
>> not working. It gives the error that it cannot find the symbol
>> LITERAL.text as it is not present in the rule stat. So, how should I
>> pass the argument to the template.
>> Help would be appreciated.
>>
>> Thanks a lot.
>> Swathy
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sal_prog_template.stg
Type: application/octet-stream
Size: 791 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100305/69087580/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: t.g
Type: application/octet-stream
Size: 817 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100305/69087580/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: g.g
Type: application/octet-stream
Size: 1129 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100305/69087580/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: m.g
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100305/69087580/attachment-0003.obj 

From mathias at parboiled.org  Fri Mar  5 10:23:50 2010
From: mathias at parboiled.org (Mathias)
Date: Fri, 5 Mar 2010 19:23:50 +0100
Subject: [antlr-interest] Complementing ANTLR with parboiled
In-Reply-To: <30dde8ce1003041205r7f0bed8fgbd6f74f9ea03f242@mail.gmail.com>
References: <01CD815B-CA74-43A5-A1FE-062DA424A3A4@parboiled.org>
	<30dde8ce1003041205r7f0bed8fgbd6f74f9ea03f242@mail.gmail.com>
Message-ID: <B47BC80D-F995-4428-909F-1DDBD8C7AA02@parboiled.org>

Ron,

thanks for your feedback.

> OK, I was bemused by your "motivation" page. The motive is built
> around the desire to create domain-specific languages with Java.
> But then, the first disadvantage you claim for existing parser generators
> is this:
> 
>  Special, non-java grammar syntax in separate project files
> 
> Um, that's because parser generators *are* domain-specific
> languages!  So, you don't like special, non-java syntaxes,
> but your goal is to create a tool that lets people create special,
> non-java syntaxes. :-)

I understand that at first glance the point you mention might seem like a contradiction.
However, it's not that I don't like DSLs, au contraire!
You could say that even parboiled uses a DSL for defining a grammar, the only difference is it being an internal instead of an external DSL.
I think that when developing a DSL one should take into account the environment in which the targeted DSL users will be using the language.
A business user of my application might be perfectly content with entering short snippets of a business rule DSL on a website without further support (apart from documentation). However, any serious present-day java developer is relying heavily on his/her IDE to manage large code bases and offset Javas relatively high level of verbosity.
When designing the underlying grammar description DSL for a parser generator written in Java one has two choices:
a) Choose an external DSL (like ANTLR) and gain conciseness but forego automatic IDE support, which can only be achieved by the tedious development of custom plugins for all major IDEs.
b) Choose an internal Java DSL (like parboiled) and trade in the compactness and expressive power of a custom syntax for automatic support in all IDEs.

IMHO it depends on the size and complexity of the languages the parser generator is being designed for whether a) or b) yield the best compromise.
For large projects, where big, complicated languages have to be defined a) might be the better choice, since otherwise the limitations of Java as a "carrier" for the grammar description DSL might be too restricting and make the grammar description bloated and unmanageable.
However, when smaller, less complicated grammars are the main target of a parser generator I would argue that b) is the better approach.
Defining the target language grammar directly in Java instead of a special syntax puts it under the full power of modern IDEs. Syntax highlighting, code completion, code navigation, inspections, reference analysis, refactoring support... they all work out of the box. 
Not having to learn another syntax will speed things up, as will not having additional build steps for an external generator.

> But seriously, much of the other motivation points also suffer
> the same self-contradictory problem vis a vis the basic nature
> of a domain-specific language. OTOH, this point deserves special
> note:
> 
>    More complicated design and maintenance through divided
>    parsing process in lexing (token generation) and token
>    parsing phases
> 
> The division of labor between lexing and parsing is more than
> half a century old, and it was arrived at (and survived) because
> it does exactly the opposite of what you say: it makes the
> code more modular and easier to maintain. When you try to
> pack the two together for any non-trivial language, you
> inevitably see the hacks multiply (e.g., something as trivial
> as white space becomes some kind of "special case").

You are right, the division into lexing and parsing is very old. And it has performance advantages and can make things like whitespace handling easier. However, it also has drawbacks. Lexing differs from parsing in the underlying logic and is therefore an additional concept to understand. It requires a separate specification. It does make it difficult to compose grammars.
On todays hardware performance is not a problem for most applications. The second main reason (apart from performance) why it was introduced decades ago, grouping input characters to enable parsers with limited look-ahead to "see further", is irrelevant with Parsing Expressions Grammars that do not have any look-ahead problem.
So again, the decision to split the whole process into lexing and parsing or not depends on the application.
If performance and white-space handling are really important, using a separate lexing phase might make sense. Otherwise things are easier to build and maintain without it, IMHO.

> Finally, as we live in an age where CPU speed has peaked
> and even begun to decline, there is increasing pressure to
> parallelize code to take advantage of the only remaining
> practical advantage of Moore's law -- increasing numbers
> of CPUs. For a language processor, one of the few neat
> and modular divisions of labor that can easily be put
> in parallel is the division between lexing and parsing.
> Often, efficiency doesn't matter for parsing, but since
> you list ANTLR's footprint as a disadvantage, it becomes
> contradictory to claim that combining lexing and parsing
> so they can't be parallelized is an unvarnished advantage.

Yes, ANTLRs footprint in Kb certainly isn't the main point.
But the general size and complexity of all its subparts can make it hard to get started with.

> None of this is by way of criticism of the project, which
> I find interesting reading (thanks for the pointer!).

parboiled's raison d'?tre is not trying to replace ANTLR, JavaCC or any other traditional parser generator.
All it would like to offer is an alternative for applications where ANTLR & Co. are currently used outside of their primary target areas.

Cheers,
Mathias

---
mathias at parboiled.org
http://www.parboiled.org


From nick at vtype.com  Sat Mar  6 02:31:39 2010
From: nick at vtype.com (Nick Vincent)
Date: Sat, 6 Mar 2010 10:31:39 +0000
Subject: [antlr-interest] Identifying certain patterns and capturing
	everything else
Message-ID: <23b96aca1003060231u45a5f188t38f178fc90f8d8f@mail.gmail.com>

Hi,

Apologies in advance for the really basic question.  I've been working on
putting together a css preprocessor, which isn't meant to be a fully
validating parser, but in some places acts almost like a filter outputting
most data verbatim but performing calculations where they exist.  I've got
the structural parsing working, but when I parse a property value I'm
interested in recognising mathematical expressions within the value, and
capturing everything else as a literal.  I am having trouble working out how
to achieve this.  I think the following trivial example illustrates what I'm
trying to do:

grammar trivialambig;

propertyvalue
: (expr | anything)* EOF
;

expr
: NUM '*'
;
anything
: .
;

NUM: '0'..'9';
CHAR: 'a'..'z';


With an input stream of "123" the "anything" rule is disabled as ambiguous,
thus never gets a chance to match.   Where "expr" fails to parse I am trying
to get "anything" to act as a fallback and capture a single character then
repeat the process. Is there a way of achieving this precendence?  I have
tried using syntactic predicates as the book suggests:

propertyvalue
: ((expr)=>expr | anything)* EOF
;

but this produces a mismatched token exception in the antlrworks interpreter
and won't compile for debugging due to RecognitionException being caught
where it's not thrown, and now I'm a bit stuck.  All of the other solutions
I've seen to this problem use a peg based parser that considers whitespace,
but I'm sure this must be possible in antlr somehow!

Any help is much appreciated,

Thanks,

Nick

From kierans777 at gmail.com  Sat Mar  6 05:20:05 2010
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 07 Mar 2010 00:20:05 +1100
Subject: [antlr-interest] Uninitialised global scope struct instance in C
	code
Message-ID: <4B925685.2040605@googlemail.com>

I am using  Antlr Version 3.2 and C libantlr3c-3.2

I have a grammar "Foo".  In the grammar I have a global scope declared

scope ParserGlobals {
  int x;
}

and a rule that initialises it before descending further into the parse tree

ruleA returns [int result]
@init  {
  $ParserGlobals::x = 0
}
  : ruleB { $result = $ParserGlobals::x; }
 ;

The code that is generated by the C target is comprised (with other code
omitted for brevity) of the following

static String ruleA(pFooParser ctx)  {
  (SCOPE_TOP(ParserGlobals))->x= 0;
}

in it's post processed form (by gcc -e)

static String ruleA(pFooParser ctx)  {
  (ctx->pFooParser_ParserGlobalsTop)->x= 0;
}

However for some reason ctx->pFooParser_ParserGlobalsTop is null.  I
changed the generated code to the following

if ((SCOPE_TOP(ParserGlobals)) == NULL)  {
  printf("ParserGlobals stack is not initialised");
}

And the 'if' is evaluated to true.

In the "constructor" for the parser, I noticed

ctx->pFooParser_ParserGlobalsTop      = NULL;

However as far as I can see there is no code in the generated source
that changes the value of pFooParser_ParserGlobalsTop before my @init
code accesses it (thus causing a seg fault).

I noticed that someone else had a similar problem with local scopes
(http://www.antlr.org/pipermail/antlr-interest/2008-April/027524.html)
However I'm not sure why a global scope in a grammar is generating code
that is seg faulting due to the scope not being initialised.

Any ideas/assistance would be appreciated.



From corrado.campisano at gmail.com  Sat Mar  6 06:43:12 2010
From: corrado.campisano at gmail.com (Corrado Campisano)
Date: Sat, 6 Mar 2010 15:43:12 +0100
Subject: [antlr-interest] FIXED (maybe?) - Issue 17: Infinite loop in lexer
	when undefined token is found
Message-ID: <20814e5a1003060643v3e9e94e8yb365b9aca07444b@mail.gmail.com>

Hi all,

please take a look at this:
http://code.google.com/p/antlr-javascript/issues/detail?id=17


It seems to me I fixed it, do you mind checking the issue/fix and updating
the officially released library?


Regards,
Corrado

From jimi at temporal-wave.com  Sat Mar  6 07:37:39 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 06 Mar 2010 07:37:39 -0800
Subject: [antlr-interest] Uninitialised global scope struct instance in
	C code
In-Reply-To: <4B925685.2040605@googlemail.com>
Message-ID: <99816fc459926b4390d3aab5a7806d1f@temporal-wave.com>

If the scope is null it means (as per the comments and antlr.markmail.org), that you hoave a path in to your rule that does not go through the rule where the scope lives. Put a breakpoint in the if condition and it will tell you which path it is. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kieran Simpson
> Sent: Saturday, March 06, 2010 5:20 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Uninitialised global scope struct instance in
> C code
> 
> I am using  Antlr Version 3.2 and C libantlr3c-3.2
> 
> I have a grammar "Foo".  In the grammar I have a global scope declared
> 
> scope ParserGlobals {
>   int x;
> }
> 
> and a rule that initialises it before descending further into the parse
> tree
> 
> ruleA returns [int result]
> @init  {
>   $ParserGlobals::x = 0
> }
>   : ruleB { $result = $ParserGlobals::x; }
>  ;
> 
> The code that is generated by the C target is comprised (with other
> code
> omitted for brevity) of the following
> 
> static String ruleA(pFooParser ctx)  {
>   (SCOPE_TOP(ParserGlobals))->x= 0;
> }
> 
> in it's post processed form (by gcc -e)
> 
> static String ruleA(pFooParser ctx)  {
>   (ctx->pFooParser_ParserGlobalsTop)->x= 0;
> }
> 
> However for some reason ctx->pFooParser_ParserGlobalsTop is null.  I
> changed the generated code to the following
> 
> if ((SCOPE_TOP(ParserGlobals)) == NULL)  {
>   printf("ParserGlobals stack is not initialised");
> }
> 
> And the 'if' is evaluated to true.
> 
> In the "constructor" for the parser, I noticed
> 
> ctx->pFooParser_ParserGlobalsTop      = NULL;
> 
> However as far as I can see there is no code in the generated source
> that changes the value of pFooParser_ParserGlobalsTop before my @init
> code accesses it (thus causing a seg fault).
> 
> I noticed that someone else had a similar problem with local scopes
> (http://www.antlr.org/pipermail/antlr-interest/2008-April/027524.html)
> However I'm not sure why a global scope in a grammar is generating code
> that is seg faulting due to the scope not being initialised.
> 
> Any ideas/assistance would be appreciated.
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From kierans777 at gmail.com  Sun Mar  7 17:40:38 2010
From: kierans777 at gmail.com (Kieran Simpson)
Date: Mon, 08 Mar 2010 12:40:38 +1100
Subject: [antlr-interest] Uninitialised global scope struct instance in
 C code
In-Reply-To: <99816fc459926b4390d3aab5a7806d1f@temporal-wave.com>
References: <99816fc459926b4390d3aab5a7806d1f@temporal-wave.com>
Message-ID: <4B945596.2040400@googlemail.com>

I see where I went wrong.  I needed to include the scope in the rule  eg:

ruleA returns [int result]
scope ParserGlobals;
@init  {
  $ParserGlobals::x = 0
}
  : ruleB { $result = $ParserGlobals::x; }
 ;

Thanks for the pointer.

Jim Idle wrote:
> If the scope is null it means (as per the comments and antlr.markmail.org), that you hoave a path in to your rule that does not go through the rule where the scope lives. Put a breakpoint in the if condition and it will tell you which path it is. 
>
> Jim
>
>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Kieran Simpson
>> Sent: Saturday, March 06, 2010 5:20 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Uninitialised global scope struct instance in
>> C code
>>
>> I am using  Antlr Version 3.2 and C libantlr3c-3.2
>>
>> I have a grammar "Foo".  In the grammar I have a global scope declared
>>
>> scope ParserGlobals {
>>   int x;
>> }
>>
>> and a rule that initialises it before descending further into the parse
>> tree
>>
>> ruleA returns [int result]
>> @init  {
>>   $ParserGlobals::x = 0
>> }
>>   : ruleB { $result = $ParserGlobals::x; }
>>  ;
>>
>> The code that is generated by the C target is comprised (with other
>> code
>> omitted for brevity) of the following
>>
>> static String ruleA(pFooParser ctx)  {
>>   (SCOPE_TOP(ParserGlobals))->x= 0;
>> }
>>
>> in it's post processed form (by gcc -e)
>>
>> static String ruleA(pFooParser ctx)  {
>>   (ctx->pFooParser_ParserGlobalsTop)->x= 0;
>> }
>>
>> However for some reason ctx->pFooParser_ParserGlobalsTop is null.  I
>> changed the generated code to the following
>>
>> if ((SCOPE_TOP(ParserGlobals)) == NULL)  {
>>   printf("ParserGlobals stack is not initialised");
>> }
>>
>> And the 'if' is evaluated to true.
>>
>> In the "constructor" for the parser, I noticed
>>
>> ctx->pFooParser_ParserGlobalsTop      = NULL;
>>
>> However as far as I can see there is no code in the generated source
>> that changes the value of pFooParser_ParserGlobalsTop before my @init
>> code accesses it (thus causing a seg fault).
>>
>> I noticed that someone else had a similar problem with local scopes
>> (http://www.antlr.org/pipermail/antlr-interest/2008-April/027524.html)
>> However I'm not sure why a global scope in a grammar is generating code
>> that is seg faulting due to the scope not being initialised.
>>
>> Any ideas/assistance would be appreciated.
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>>     
>
>
>
>   

From kierans777 at gmail.com  Sun Mar  7 18:50:09 2010
From: kierans777 at gmail.com (Kieran Simpson)
Date: Mon, 08 Mar 2010 13:50:09 +1100
Subject: [antlr-interest] Using previously matched parser rule in decision
	making
Message-ID: <4B9465E1.6030606@googlemail.com>

I have

ruleA: ruleB;

ruleC: ruleB;

ruleB: ruleD;

In ruleB I want to different target language actions to execute based on
whether it was ruleA or ruleC that was previously matched.  If my
understanding of syntatic/semantic predicates is correct, they only look
forwards, not backwards.

Is there a way (without refactoring the grammar) to in rule B know which
rule it was invoked from (A or C) and make decisions accordingly?

Thanks.

From jimi at temporal-wave.com  Sun Mar  7 18:00:04 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 7 Mar 2010 18:00:04 -0800
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <4B9465E1.6030606@googlemail.com>
References: <4B9465E1.6030606@googlemail.com>
Message-ID: <32D501CC-2CA7-43B7-9BDE-F5AD23204A6E@temporal-wave.com>

If it cabn be determined via prior tokens you can test the value of LA 
(-n). If not you can use a scope in a higher ruler than both and set a  
flag. But easier than that, pass a Boolean (or state if more than two  
rules). So ruleB[true] ruleB[false]. But if they are  duplicate then  
refactoring will be better usually.

ruleB[Boolean isA] :

Jim

On Mar 7, 2010, at 18:50, Kieran Simpson <kierans777 at gmail.com> wrote:

> I have
>
> ruleA: ruleB;
>
> ruleC: ruleB;
>
> ruleB: ruleD;
>
> In ruleB I want to different target language actions to execute  
> based on
> whether it was ruleA or ruleC that was previously matched.  If my
> understanding of syntatic/semantic predicates is correct, they only  
> look
> forwards, not backwards.
>
> Is there a way (without refactoring the grammar) to in rule B know  
> which
> rule it was invoked from (A or C) and make decisions accordingly?
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jbb at acm.org  Sun Mar  7 18:00:08 2010
From: jbb at acm.org (John B. Brodie)
Date: Sun, 07 Mar 2010 21:00:08 -0500
Subject: [antlr-interest] Using previously matched parser rule in
 decision making
In-Reply-To: <4B9465E1.6030606@googlemail.com>
References: <4B9465E1.6030606@googlemail.com>
Message-ID: <1268013608.18820.3.camel@gecko.home.org>

Greetings!

On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
> I have
> 
> ruleA: ruleB;
> 
> ruleC: ruleB;
> 
> ruleB: ruleD;
> 
> In ruleB I want to different target language actions to execute based on
> whether it was ruleA or ruleC that was previously matched.  If my
> understanding of syntatic/semantic predicates is correct, they only look
> forwards, not backwards.
> 
> Is there a way (without refactoring the grammar) to in rule B know which
> rule it was invoked from (A or C) and make decisions accordingly?

Off the top of my head, pass a parameter.....

ruleA : ruleB[true];
ruleC : ruleB[false];
ruleB [boolean fromA] : ruleD
  { if( fromA )then
       ....do this stuff....
    else
       ....do that stuff....
   };

(the above probably is not precisely the correct meta-syntax, but
hopefully you get the idea...)

   -jbb



From kierans777 at gmail.com  Sun Mar  7 19:25:49 2010
From: kierans777 at gmail.com (Kieran Simpson)
Date: Mon, 08 Mar 2010 14:25:49 +1100
Subject: [antlr-interest] Using previously matched parser rule in
 decision making
In-Reply-To: <1268013608.18820.3.camel@gecko.home.org>
References: <4B9465E1.6030606@googlemail.com>
	<1268013608.18820.3.camel@gecko.home.org>
Message-ID: <4B946E3D.5030205@googlemail.com>

Thanks for the suggestions.

I had considered the parameter approach, I was curious to know if there
was a smarter way.

John B. Brodie wrote:
> Greetings!
>
> On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
>   
>> I have
>>
>> ruleA: ruleB;
>>
>> ruleC: ruleB;
>>
>> ruleB: ruleD;
>>
>> In ruleB I want to different target language actions to execute based on
>> whether it was ruleA or ruleC that was previously matched.  If my
>> understanding of syntatic/semantic predicates is correct, they only look
>> forwards, not backwards.
>>
>> Is there a way (without refactoring the grammar) to in rule B know which
>> rule it was invoked from (A or C) and make decisions accordingly?
>>     
>
> Off the top of my head, pass a parameter.....
>
> ruleA : ruleB[true];
> ruleC : ruleB[false];
> ruleB [boolean fromA] : ruleD
>   { if( fromA )then
>        ....do this stuff....
>     else
>        ....do that stuff....
>    };
>
> (the above probably is not precisely the correct meta-syntax, but
> hopefully you get the idea...)
>
>    -jbb
>
>
>   

From gokul007 at gmail.com  Sun Mar  7 20:18:54 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 8 Mar 2010 09:48:54 +0530
Subject: [antlr-interest] Fwd: passing arguments to the templates
In-Reply-To: <fa7ae3a11003050908u2390ede2i7f67521453e3a18b@mail.gmail.com>
References: <fa7ae3a11003041036w51051c5bl68c0ccc946442e6c@mail.gmail.com>
	<9362e74e1003042214s194ffef5lecfa0c6b6daa2581@mail.gmail.com>
	<fa7ae3a11003050907w15ab804gd377303cab378131@mail.gmail.com>
	<fa7ae3a11003050908u2390ede2i7f67521453e3a18b@mail.gmail.com>
Message-ID: <9362e74e1003072018w680883e4nea7002dab8bdd20a@mail.gmail.com>

I haven't used much of tree grammar, but your stuff looks very confusing.
a) why are you having two set of parser rules, one inside m.g and another
inside g.g
b) using literals inside parser grammar is not recommended
c) i see only a hashmap declaration and i am not seeing the usage of it
d) There are certain rules which are not emitting tree nodes, but they seem
to be the important ones.


Gokul.

On Fri, Mar 5, 2010 at 10:38 PM, swathy murthy <pskswathy at gmail.com> wrote:

> Hi
>
> Actually, I tried using Hash Map long back. But, it did not work out.
> And, the main thing is that I just need to store the name of the
> variables. I do not need the values as I am not executing any actions
> in the grammar. I am just using it as a language converter. Could
> anyone please suggest me how to do that looking at my grammar files
> which are attached.
> m.g is the main grammar file from which I am creating a tree grammar
> g.g and from the tree grammar, I am creating a template t.g.
> And, also I need to generate some temporary variables automatically
> based on number of input variables. Would it be possible to generate
> variables automatically and store each variable as a template or using
> hash map.
>
> Thanks.
> Swathy
>
> On Fri, Mar 5, 2010 at 11:44 AM, Gokulakannan Somasundaram
> <gokul007 at gmail.com> wrote:
> > Keep track of things using a hashmap.
> > insert into the hashmap at expr and retrieve them at stat and pass it to
> the
> > template.
> >
> > Gokul.
> >
> >
> > On Fri, Mar 5, 2010 at 12:06 AM, swathy murthy <pskswathy at gmail.com>
> wrote:
> >>
> >> Hi
> >>
> >> I have attached my grammar file and the template file. Now, I need to
> >> pass the value of the LITERAL in the rule expr to outer_template() in
> >> rule stat.
> >> I am directly using outer_template(var={$LITERAL.text}) but this is
> >> not working. It gives the error that it cannot find the symbol
> >> LITERAL.text as it is not present in the rule stat. So, how should I
> >> pass the argument to the template.
> >> Help would be appreciated.
> >>
> >> Thanks a lot.
> >> Swathy
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From kirby.bohling at gmail.com  Sun Mar  7 22:45:22 2010
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 8 Mar 2010 00:45:22 -0600
Subject: [antlr-interest] Logic like ~ for parsing
Message-ID: <3cac8fdf1003072245m2a7bc9dcg5397a1e1f75817d0@mail.gmail.com>

All,

   I have a grammar that is pretty far along.  But I really need a
rule like this:

dangling_match:
    (non_dangling_a | non_dangling_b) => // Failure to match, get back
up to the foo level somehow.
    | DANGLING_TOKEN
;

foo:
   (non_dangling_a | non_dangling_b | options_including_dangling_match)+
;

options_including_dangling_match:
   (option_1 | option_2| option_3| option_4| dangling_match)+;

So non_dangling_a, non_dangling_b, and dangling match all start with
the token DANGLING_MATCH.  I'd really like non_dangling_match to on
cases where I have a dangling token.  As a concrete example, in C, I
only want the dangling option to match if I have a stray '{', but if
the '{' looks like it's part of well formed statement, I don't want
dangling_match to match and consume that input.  I'd like to arrange
for the system to get back up to the "foo" rule, and have the input
consumed there.

If it were a lexer, I think I'd write the rule this way:

dangling_match:
    { input.LA(1) == DANGLING_TOKEN }?
    (~(non_dangling_a|non_dangling_b)) => DANGLING_TOKEN
;

I can't seem to find a way to accomplish this in the parser.  I've
tried marking and resetting the stream, and using dynamic scopes.  The
problem is that everything I've found that compiles will kick me into
an infinite loop.  If it looks like a non_dangling case (the input is
well formed), it won't consume the input, and never leave the
"options_including_dangling_match" rule to get back to the "foo" rule
which would consume the non_dangling input.

I've tried poking around in the FAQ, but I didn't see anything obvious.

Thanks in advance,
   Kirby

From gokul007 at gmail.com  Sun Mar  7 22:55:53 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 8 Mar 2010 12:25:53 +0530
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <4B946E3D.5030205@googlemail.com>
References: <4B9465E1.6030606@googlemail.com>
	<1268013608.18820.3.camel@gecko.home.org>
	<4B946E3D.5030205@googlemail.com>
Message-ID: <9362e74e1003072255x52e56df0kc5e8505e9632ec89@mail.gmail.com>

What Jim is suggesting is something like this

ruleA: ruleB[true];

ruleD: ruleB[false];

ruleB[boolean isRuleA]:
         {isRuleA}?  .....
         |      .....
;

Usage of semantic predicates. But i think there is an issue with that. From
ruleA / ruleD, if you decide to do a look ahead like LA(n), and if that
lookahead goes to B, then this won't carry the boolean parameter and you
might face some issues and the error thrown will not be intuitive.

Ideal way according to me is

ruleA: ruleB_A;

ruleD: ruleB_D;

ruleB_A :....;

ruleB_D : ....;

If there are lot of things that are common, factorise them as a seperate
rule / seperate actions. Hope my suggestion was helpful.

Thanks,
Gokul.


On Mon, Mar 8, 2010 at 8:55 AM, Kieran Simpson <kierans777 at gmail.com> wrote:

> Thanks for the suggestions.
>
> I had considered the parameter approach, I was curious to know if there
> was a smarter way.
>
> John B. Brodie wrote:
> > Greetings!
> >
> > On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
> >
> >> I have
> >>
> >> ruleA: ruleB;
> >>
> >> ruleC: ruleB;
> >>
> >> ruleB: ruleD;
> >>
> >> In ruleB I want to different target language actions to execute based on
> >> whether it was ruleA or ruleC that was previously matched.  If my
> >> understanding of syntatic/semantic predicates is correct, they only look
> >> forwards, not backwards.
> >>
> >> Is there a way (without refactoring the grammar) to in rule B know which
> >> rule it was invoked from (A or C) and make decisions accordingly?
> >>
> >
> > Off the top of my head, pass a parameter.....
> >
> > ruleA : ruleB[true];
> > ruleC : ruleB[false];
> > ruleB [boolean fromA] : ruleD
> >   { if( fromA )then
> >        ....do this stuff....
> >     else
> >        ....do that stuff....
> >    };
> >
> > (the above probably is not precisely the correct meta-syntax, but
> > hopefully you get the idea...)
> >
> >    -jbb
> >
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kierans777 at gmail.com  Mon Mar  8 00:04:27 2010
From: kierans777 at gmail.com (Kieran Simpson)
Date: Mon, 08 Mar 2010 19:04:27 +1100
Subject: [antlr-interest] Using previously matched parser rule in
 decision making
In-Reply-To: <9362e74e1003072255x52e56df0kc5e8505e9632ec89@mail.gmail.com>
References: <4B9465E1.6030606@googlemail.com>	
	<1268013608.18820.3.camel@gecko.home.org>	
	<4B946E3D.5030205@googlemail.com>
	<9362e74e1003072255x52e56df0kc5e8505e9632ec89@mail.gmail.com>
Message-ID: <4B94AF8B.7030305@googlemail.com>


> What Jim is suggesting is something like this
>
> ruleA: ruleB[true];
>
> ruleD: ruleB[false];
>
> ruleB[boolean isRuleA]:
>          {isRuleA}?  .....
>          |      .....
> ;
>
> Usage of semantic predicates. But i think there is an issue with that.
> From ruleA / ruleD, if you decide to do a look ahead like LA(n), and
> if that lookahead goes to B, then this won't carry the boolean
> parameter and you might face some issues and the error thrown will not
> be intuitive.
>
You are correct Gokulakannan.  I tried the semantic predicate approach
as well (just to see if it was a better approach) and in some of the
"synpred fragment" functions generated by the C target, I got compiler
errors as the functions was trying to use the rule parameter (in this
example, isRuleA) when the rule argument wasn't passed to the fragment
function.  The fragment function didn't even declare a parameter in the
signature to match the rule parameters.  I eventually used a combination
of parameter passing and target language if conditions.  It didn't add
to much to the grammar.
> Ideal way according to me is
>
> ruleA: ruleB_A;
>
> ruleD: ruleB_D;
>
> ruleB_A :....;
>
> ruleB_D : ....;
>
> If there are lot of things that are common, factorise them as a
> seperate rule / seperate actions. Hope my suggestion was helpful.
>
> Thanks,
> Gokul.
>
>
> On Mon, Mar 8, 2010 at 8:55 AM, Kieran Simpson <kierans777 at gmail.com
> <mailto:kierans777 at gmail.com>> wrote:
>
>     Thanks for the suggestions.
>
>     I had considered the parameter approach, I was curious to know if
>     there
>     was a smarter way.
>
>     John B. Brodie wrote:
>     > Greetings!
>     >
>     > On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
>     >
>     >> I have
>     >>
>     >> ruleA: ruleB;
>     >>
>     >> ruleC: ruleB;
>     >>
>     >> ruleB: ruleD;
>     >>
>     >> In ruleB I want to different target language actions to execute
>     based on
>     >> whether it was ruleA or ruleC that was previously matched.  If my
>     >> understanding of syntatic/semantic predicates is correct, they
>     only look
>     >> forwards, not backwards.
>     >>
>     >> Is there a way (without refactoring the grammar) to in rule B
>     know which
>     >> rule it was invoked from (A or C) and make decisions accordingly?
>     >>
>     >
>     > Off the top of my head, pass a parameter.....
>     >
>     > ruleA : ruleB[true];
>     > ruleC : ruleB[false];
>     > ruleB [boolean fromA] : ruleD
>     >   { if( fromA )then
>     >        ....do this stuff....
>     >     else
>     >        ....do that stuff....
>     >    };
>     >
>     > (the above probably is not precisely the correct meta-syntax, but
>     > hopefully you get the idea...)
>     >
>     >    -jbb
>     >
>     >
>     >
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From consiliens at gmail.com  Sun Mar  7 23:38:38 2010
From: consiliens at gmail.com (consiliens at gmail.com)
Date: Mon, 08 Mar 2010 00:38:38 -0700
Subject: [antlr-interest] Capture content between tokens
Message-ID: <4B94A97E.3010906@gmail.com>

Previously titled Multiple Lines with Implicit Endings in ANTLR.

Here is a simple example of the issue.
* 1
a
* b

I would like to define this wiki syntax as two tokens, "* 1\na" and "* 
b".  The token beginning is * and ends when another list token is found. 
  WikiToHTML is from tpdsl.
http://media.pragprog.com/titles/tpdsl/code/tpdsl-code.zip

This is similar to Ghrekin syntax.
Then 1
a
Then b

I'm trying to extend this concept in ANTLR to work correctly across more 
than one line.  In ragel you can do something like this:

FeatureHeading = space* I18N_Feature %begin_content ^FeatureHeadingEnd* 
:>>   FeatureHeadingEnd @store_feature_content;
FeatureHeadingEnd = EOL+ space* (I18N_Background | I18N_Scenario | 
I18N_ScenarioOutline | '@' | '#' | EOF)>next_keyword_start;
source: 
http://github.com/aslakhellesoy/gherkin/blob/master/ragel/lexer_common.rl.erb

That is what I meant by defining the current token as extending until 
the next valid token.  Is the reason I'm not finding examples of this in 
ANTLR because it's not possible?

From jimi at temporal-wave.com  Mon Mar  8 07:46:22 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 08 Mar 2010 07:46:22 -0800
Subject: [antlr-interest] Logic like ~ for parsing
In-Reply-To: <3cac8fdf1003072245m2a7bc9dcg5397a1e1f75817d0@mail.gmail.com>
Message-ID: <24d45af379f01443968b68b2c84b6de6@temporal-wave.com>

Take a look at this:

http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

And note that you can implement your own kinds of predicates using input.mark() and release etc. 

However it looks like you might have your logic the wrong way around in that you want to use the predicates to select the production, not select the fact that it isn't the correct production:

foo
: (nda)=>nda
| (ndb)=>ndb
| DANGLIN_TOKEN
...

But if you look through the ways you can resync the input in error recovery, you may get better mileage.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kirby Bohling
> Sent: Sunday, March 07, 2010 10:45 PM
> To: ANTR Interest
> Subject: [antlr-interest] Logic like ~ for parsing
> 
> All,
> 
>    I have a grammar that is pretty far along.  But I really need a
> rule like this:
> 
> dangling_match:
>     (non_dangling_a | non_dangling_b) => // Failure to match, get back
> up to the foo level somehow.
>     | DANGLING_TOKEN
> ;
> 
> foo:
>    (non_dangling_a | non_dangling_b |
> options_including_dangling_match)+
> ;
> 
> options_including_dangling_match:
>    (option_1 | option_2| option_3| option_4| dangling_match)+;
> 
> So non_dangling_a, non_dangling_b, and dangling match all start with
> the token DANGLING_MATCH.  I'd really like non_dangling_match to on
> cases where I have a dangling token.  As a concrete example, in C, I
> only want the dangling option to match if I have a stray '{', but if
> the '{' looks like it's part of well formed statement, I don't want
> dangling_match to match and consume that input.  I'd like to arrange
> for the system to get back up to the "foo" rule, and have the input
> consumed there.
> 
> If it were a lexer, I think I'd write the rule this way:
> 
> dangling_match:
>     { input.LA(1) == DANGLING_TOKEN }?
>     (~(non_dangling_a|non_dangling_b)) => DANGLING_TOKEN
> ;
> 
> I can't seem to find a way to accomplish this in the parser.  I've
> tried marking and resetting the stream, and using dynamic scopes.  The
> problem is that everything I've found that compiles will kick me into
> an infinite loop.  If it looks like a non_dangling case (the input is
> well formed), it won't consume the input, and never leave the
> "options_including_dangling_match" rule to get back to the "foo" rule
> which would consume the non_dangling input.
> 
> I've tried poking around in the FAQ, but I didn't see anything obvious.
> 
> Thanks in advance,
>    Kirby
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Mon Mar  8 07:48:35 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 08 Mar 2010 07:48:35 -0800
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <9362e74e1003072255x52e56df0kc5e8505e9632ec89@mail.gmail.com>
Message-ID: <509b019a71820a4eb692d6f1238dd24f@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
> Sent: Sunday, March 07, 2010 10:56 PM
> To: Kieran Simpson
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Using previously matched parser rule in
> decision making
> 
> What Jim is suggesting is something like this
> 
> ruleA: ruleB[true];
> 
> ruleD: ruleB[false];
> 
> ruleB[boolean isRuleA]:
>          {isRuleA}?  .....
>          |      .....
> ;
> 
> Usage of semantic predicates. 

No - he asked to just know what rule it came from - I presume to test in action code. To use as a predicate it would have to be in a scope as otherwise the predicate may be hoisted out of scope of the local rule code.

Jim




From jimi at temporal-wave.com  Mon Mar  8 07:58:11 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 08 Mar 2010 07:58:11 -0800
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <4B94AF8B.7030305@googlemail.com>
Message-ID: <469350910c088d4a8562f3652cdc49de@temporal-wave.com>

See earlier reply - if you want to sue them in predicates then you have to use scopes.

However, I think that once you start down this that you are probably approaching the grammar incorrectly. This usually arises from trying to program a grammar from a normative spec for a language which is usually written in an LALR type approach and is also a documentation exercise so it tends to use things that are ambiguous syntactically but help to document the structure such as  ID (rule_parameter_ascii | rule_paramter_non_ascii).

Other ways you can get down this path is because you are trying to impose too much structure at the parser level. The approach to try for is to defer as many errors from the lexer (in fact you should not really have any that you don't catch programmatically) into the parser, then as much as possible change syntactic errors into semantic errors, preferably in the tree walker.

So, the parser should accept anything that is syntactically sound, even if it is semantically not allowed, then issue neater errors in a semantic context of either the parser, or usually more easily the tree walker.

So a ruleb is only allowed after a rulea if XYZ is seen, but don't try to exclude that syntactically, juts accept it then check the conditions after:

rulez: rulea (XYZ { flag=true;} )? (ruleb* { if (flag == false) { sout("Constructs like ruleb must have XYZ"); } }) ;

And so on.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kieran Simpson
> Sent: Monday, March 08, 2010 12:04 AM
> To: Gokulakannan Somasundaram
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Using previously matched parser rule in
> decision making
> 
> 
> > What Jim is suggesting is something like this
> >
> > ruleA: ruleB[true];
> >
> > ruleD: ruleB[false];
> >
> > ruleB[boolean isRuleA]:
> >          {isRuleA}?  .....
> >          |      .....
> > ;
> >
> > Usage of semantic predicates. But i think there is an issue with
> that.
> > From ruleA / ruleD, if you decide to do a look ahead like LA(n), and
> > if that lookahead goes to B, then this won't carry the boolean
> > parameter and you might face some issues and the error thrown will
> not
> > be intuitive.
> >
> You are correct Gokulakannan.  I tried the semantic predicate approach
> as well (just to see if it was a better approach) and in some of the
> "synpred fragment" functions generated by the C target, I got compiler
> errors as the functions was trying to use the rule parameter (in this
> example, isRuleA) when the rule argument wasn't passed to the fragment
> function.  The fragment function didn't even declare a parameter in the
> signature to match the rule parameters.  I eventually used a
> combination
> of parameter passing and target language if conditions.  It didn't add
> to much to the grammar.
> > Ideal way according to me is
> >
> > ruleA: ruleB_A;
> >
> > ruleD: ruleB_D;
> >
> > ruleB_A :....;
> >
> > ruleB_D : ....;
> >
> > If there are lot of things that are common, factorise them as a
> > seperate rule / seperate actions. Hope my suggestion was helpful.
> >
> > Thanks,
> > Gokul.
> >
> >
> > On Mon, Mar 8, 2010 at 8:55 AM, Kieran Simpson <kierans777 at gmail.com
> > <mailto:kierans777 at gmail.com>> wrote:
> >
> >     Thanks for the suggestions.
> >
> >     I had considered the parameter approach, I was curious to know if
> >     there
> >     was a smarter way.
> >
> >     John B. Brodie wrote:
> >     > Greetings!
> >     >
> >     > On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
> >     >
> >     >> I have
> >     >>
> >     >> ruleA: ruleB;
> >     >>
> >     >> ruleC: ruleB;
> >     >>
> >     >> ruleB: ruleD;
> >     >>
> >     >> In ruleB I want to different target language actions to
> execute
> >     based on
> >     >> whether it was ruleA or ruleC that was previously matched.  If
> my
> >     >> understanding of syntatic/semantic predicates is correct, they
> >     only look
> >     >> forwards, not backwards.
> >     >>
> >     >> Is there a way (without refactoring the grammar) to in rule B
> >     know which
> >     >> rule it was invoked from (A or C) and make decisions
> accordingly?
> >     >>
> >     >
> >     > Off the top of my head, pass a parameter.....
> >     >
> >     > ruleA : ruleB[true];
> >     > ruleC : ruleB[false];
> >     > ruleB [boolean fromA] : ruleD
> >     >   { if( fromA )then
> >     >        ....do this stuff....
> >     >     else
> >     >        ....do that stuff....
> >     >    };
> >     >
> >     > (the above probably is not precisely the correct meta-syntax,
> but
> >     > hopefully you get the idea...)
> >     >
> >     >    -jbb
> >     >
> >     >
> >     >
> >
> >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >     Unsubscribe:
> >     http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From kirby.bohling at gmail.com  Mon Mar  8 08:02:55 2010
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 8 Mar 2010 10:02:55 -0600
Subject: [antlr-interest] Logic like ~ for parsing
In-Reply-To: <24d45af379f01443968b68b2c84b6de6@temporal-wave.com>
References: <3cac8fdf1003072245m2a7bc9dcg5397a1e1f75817d0@mail.gmail.com> 
	<24d45af379f01443968b68b2c84b6de6@temporal-wave.com>
Message-ID: <3cac8fdf1003080802n26bb43dcje37315e2e5153404@mail.gmail.com>

Replies inline.

On Mon, Mar 8, 2010 at 9:46 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> Take a look at this:
>
> http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
>

I'll have to read that closely.

> And note that you can implement your own kinds of predicates using input.mark() and release etc.
>

I'm not having a lot of luck with that, I'll have to boil down a
minimal version and try again, and post a grammar and sample input if
I still can't make heads or tails of it.  I had a version that did the
right thing, except, it'd didn't consume any input, so it'd just loop
forever.  I couldn't figure out how to move the predicate higher up.
Maybe, I'll have to use a dynamic scope, return value or something to
push the value up or down the stack to have it become a predicate
higher up in the tree.

> However it looks like you might have your logic the wrong way around in that you want to use the predicates to select the production, not select the fact that it isn't the correct production:
>
> foo
> : (nda)=>nda
> | (ndb)=>ndb
> | DANGLIN_TOKEN
> ...
>

You'd think that, but alas, there is a rule rewrite that puts the
DANGLING_TOKEN in the correct subtree (I didn't show that in the
previous example, and realized everybody would suggest that I try
exactly what you said after I clicked send).  It's wiki markup, and
I'd like to have it be part of the "verbose output" sub-tree, not the
"markup to translate" subtree.  I suppose I could have 2-3 sections of
"verbose output" tree next to each other.  Maybe I can coalesce them
later?

So if I had (^V T1 T2) (^V T3) (^V T4 T5), is there a way in a tree
parse to turn that into (^V T1 T2 T3 T4 T5)?  I'd like to do that
inside of ANTLR if I can (parser, or tree walker).  I've been working
pretty hard to keep the amount of language specifics out of my
grammar, I'd like it to be easy to port over to other languages if at
all possible.

Thanks again,
Kirby


> But if you look through the ways you can resync the input in error recovery, you may get better mileage.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Kirby Bohling
>> Sent: Sunday, March 07, 2010 10:45 PM
>> To: ANTR Interest
>> Subject: [antlr-interest] Logic like ~ for parsing
>>
>> All,
>>
>> ? ?I have a grammar that is pretty far along. ?But I really need a
>> rule like this:
>>
>> dangling_match:
>> ? ? (non_dangling_a | non_dangling_b) => // Failure to match, get back
>> up to the foo level somehow.
>> ? ? | DANGLING_TOKEN
>> ;
>>
>> foo:
>> ? ?(non_dangling_a | non_dangling_b |
>> options_including_dangling_match)+
>> ;
>>
>> options_including_dangling_match:
>> ? ?(option_1 | option_2| option_3| option_4| dangling_match)+;
>>
>> So non_dangling_a, non_dangling_b, and dangling match all start with
>> the token DANGLING_MATCH. ?I'd really like non_dangling_match to on
>> cases where I have a dangling token. ?As a concrete example, in C, I
>> only want the dangling option to match if I have a stray '{', but if
>> the '{' looks like it's part of well formed statement, I don't want
>> dangling_match to match and consume that input. ?I'd like to arrange
>> for the system to get back up to the "foo" rule, and have the input
>> consumed there.
>>
>> If it were a lexer, I think I'd write the rule this way:
>>
>> dangling_match:
>> ? ? { input.LA(1) == DANGLING_TOKEN }?
>> ? ? (~(non_dangling_a|non_dangling_b)) => DANGLING_TOKEN
>> ;
>>
>> I can't seem to find a way to accomplish this in the parser. ?I've
>> tried marking and resetting the stream, and using dynamic scopes. ?The
>> problem is that everything I've found that compiles will kick me into
>> an infinite loop. ?If it looks like a non_dangling case (the input is
>> well formed), it won't consume the input, and never leave the
>> "options_including_dangling_match" rule to get back to the "foo" rule
>> which would consume the non_dangling input.
>>
>> I've tried poking around in the FAQ, but I didn't see anything obvious.
>>
>> Thanks in advance,
>> ? ?Kirby
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From agrinob at hotmail.com  Mon Mar  8 09:15:28 2010
From: agrinob at hotmail.com (=?Windows-1252?B?QW5kculzIEdyafHz?=)
Date: Mon, 8 Mar 2010 14:15:28 -0300
Subject: [antlr-interest] I wrote a Java Lexer for Cobol and need your
	suggestions
Message-ID: <SNT142-w25C4F73EABFF7091313513B1350@phx.gbl>







Hi:

I wrote a Java Lexer for Cobol (free & fixed format). It takes a cobol source program like this:

044500 B10-1-INIT-OPTION-SWITCHES.                                      EXEC84.2
044600     MOVE    SPACES  TO WZ-MISCELLANEOUS.                         EXEC84.2

and produce a list of tokens like this:

AREA_A (444, 8, ''/0)
WORD (444, 8, 'B10-1-INIT-OPTION-SWITCHES'/26)
SEPARATOR (444, 34, '.'/1)
WORD (445, 12, 'MOVE'/4)
WORD (445, 20, 'SPACES'/6)
WORD (445, 28, 'TO'/2)
WORD (445, 31, 'WZ-MISCELLANEOUS'/16)
SEPARATOR (445, 47, '.'/1)

My Lexer is based mainly in standard Cobol 85 (plus amendments), and I validate it using the suite (newcob.val) from the National Institute of Std & Tech., plus some other examples in free format I got from the web. I'm writing the documentation right now, but I can send the working program if you ask. Soon it will be available in Freshmeat.

I want to make it useful for people writing antlr grammars. I need suggestions about a nice output format for antlr. You can post your answer or email me (agrinob at hotmail.com).

Thanks

Andr?s Gri??



 		 	   		  
_________________________________________________________________
Hotmail: Trusted email with Microsoft?s powerful SPAM protection.
https://signup.live.com/signup.aspx?id=60969

From gokul007 at gmail.com  Mon Mar  8 09:47:25 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 8 Mar 2010 23:17:25 +0530
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <469350910c088d4a8562f3652cdc49de@temporal-wave.com>
References: <4B94AF8B.7030305@googlemail.com>
	<469350910c088d4a8562f3652cdc49de@temporal-wave.com>
Message-ID: <9362e74e1003080947u564df747i2a5738f3cddfc8f0@mail.gmail.com>

That was a very nice explanation.
I would request you to put it in some wiki, so that it would help a lot of
entry level parser programmers.

Thanks,
Gokul.

On Mon, Mar 8, 2010 at 9:28 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> See earlier reply - if you want to sue them in predicates then you have to
> use scopes.
>
> However, I think that once you start down this that you are probably
> approaching the grammar incorrectly. This usually arises from trying to
> program a grammar from a normative spec for a language which is usually
> written in an LALR type approach and is also a documentation exercise so it
> tends to use things that are ambiguous syntactically but help to document
> the structure such as  ID (rule_parameter_ascii | rule_paramter_non_ascii).
>
> Other ways you can get down this path is because you are trying to impose
> too much structure at the parser level. The approach to try for is to defer
> as many errors from the lexer (in fact you should not really have any that
> you don't catch programmatically) into the parser, then as much as possible
> change syntactic errors into semantic errors, preferably in the tree walker.
>
> So, the parser should accept anything that is syntactically sound, even if
> it is semantically not allowed, then issue neater errors in a semantic
> context of either the parser, or usually more easily the tree walker.
>
> So a ruleb is only allowed after a rulea if XYZ is seen, but don't try to
> exclude that syntactically, juts accept it then check the conditions after:
>
> rulez: rulea (XYZ { flag=true;} )? (ruleb* { if (flag == false) {
> sout("Constructs like ruleb must have XYZ"); } }) ;
>
> And so on.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Kieran Simpson
> > Sent: Monday, March 08, 2010 12:04 AM
> > To: Gokulakannan Somasundaram
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Using previously matched parser rule in
> > decision making
> >
> >
> > > What Jim is suggesting is something like this
> > >
> > > ruleA: ruleB[true];
> > >
> > > ruleD: ruleB[false];
> > >
> > > ruleB[boolean isRuleA]:
> > >          {isRuleA}?  .....
> > >          |      .....
> > > ;
> > >
> > > Usage of semantic predicates. But i think there is an issue with
> > that.
> > > From ruleA / ruleD, if you decide to do a look ahead like LA(n), and
> > > if that lookahead goes to B, then this won't carry the boolean
> > > parameter and you might face some issues and the error thrown will
> > not
> > > be intuitive.
> > >
> > You are correct Gokulakannan.  I tried the semantic predicate approach
> > as well (just to see if it was a better approach) and in some of the
> > "synpred fragment" functions generated by the C target, I got compiler
> > errors as the functions was trying to use the rule parameter (in this
> > example, isRuleA) when the rule argument wasn't passed to the fragment
> > function.  The fragment function didn't even declare a parameter in the
> > signature to match the rule parameters.  I eventually used a
> > combination
> > of parameter passing and target language if conditions.  It didn't add
> > to much to the grammar.
> > > Ideal way according to me is
> > >
> > > ruleA: ruleB_A;
> > >
> > > ruleD: ruleB_D;
> > >
> > > ruleB_A :....;
> > >
> > > ruleB_D : ....;
> > >
> > > If there are lot of things that are common, factorise them as a
> > > seperate rule / seperate actions. Hope my suggestion was helpful.
> > >
> > > Thanks,
> > > Gokul.
> > >
> > >
> > > On Mon, Mar 8, 2010 at 8:55 AM, Kieran Simpson <kierans777 at gmail.com
> > > <mailto:kierans777 at gmail.com>> wrote:
> > >
> > >     Thanks for the suggestions.
> > >
> > >     I had considered the parameter approach, I was curious to know if
> > >     there
> > >     was a smarter way.
> > >
> > >     John B. Brodie wrote:
> > >     > Greetings!
> > >     >
> > >     > On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
> > >     >
> > >     >> I have
> > >     >>
> > >     >> ruleA: ruleB;
> > >     >>
> > >     >> ruleC: ruleB;
> > >     >>
> > >     >> ruleB: ruleD;
> > >     >>
> > >     >> In ruleB I want to different target language actions to
> > execute
> > >     based on
> > >     >> whether it was ruleA or ruleC that was previously matched.  If
> > my
> > >     >> understanding of syntatic/semantic predicates is correct, they
> > >     only look
> > >     >> forwards, not backwards.
> > >     >>
> > >     >> Is there a way (without refactoring the grammar) to in rule B
> > >     know which
> > >     >> rule it was invoked from (A or C) and make decisions
> > accordingly?
> > >     >>
> > >     >
> > >     > Off the top of my head, pass a parameter.....
> > >     >
> > >     > ruleA : ruleB[true];
> > >     > ruleC : ruleB[false];
> > >     > ruleB [boolean fromA] : ruleD
> > >     >   { if( fromA )then
> > >     >        ....do this stuff....
> > >     >     else
> > >     >        ....do that stuff....
> > >     >    };
> > >     >
> > >     > (the above probably is not precisely the correct meta-syntax,
> > but
> > >     > hopefully you get the idea...)
> > >     >
> > >     >    -jbb
> > >     >
> > >     >
> > >     >
> > >
> > >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >     Unsubscribe:
> > >     http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From antlr at mirality.co.nz  Mon Mar  8 11:04:19 2010
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 09 Mar 2010 08:04:19 +1300
Subject: [antlr-interest] Logic like ~ for parsing
In-Reply-To: <3cac8fdf1003080802n26bb43dcje37315e2e5153404@mail.gmail.co
 m>
References: <3cac8fdf1003072245m2a7bc9dcg5397a1e1f75817d0@mail.gmail.com>
	<24d45af379f01443968b68b2c84b6de6@temporal-wave.com>
	<3cac8fdf1003080802n26bb43dcje37315e2e5153404@mail.gmail.com>
Message-ID: <20100308190433.0937D3418453@www.antlr.org>

At 05:02 9/03/2010, Kirby Bohling wrote:
 >So if I had (^V T1 T2) (^V T3) (^V T4 T5), is there a way in a
 >tree parse to turn that into (^V T1 T2 T3 T4 T5)?

In theory, something like this should do that:

sequential_V
   : ^(V (x+=.)+) (^(V (x+=.)+)* -> ^(V $x+)
   ;


From Ron.Crocker at motorola.com  Mon Mar  8 11:48:32 2010
From: Ron.Crocker at motorola.com (Crocker Ron-QA1007)
Date: Mon, 8 Mar 2010 14:48:32 -0500
Subject: [antlr-interest] Newbie problem with line-oriented parsing
In-Reply-To: <d92ba116e3efa54d996aed0429531a72@temporal-wave.com>
References: <05108B1D7AEA1145B0A03759AA39FB220536B4F4@de01exm70.ds.mot.com>
	<d92ba116e3efa54d996aed0429531a72@temporal-wave.com>
Message-ID: <05108B1D7AEA1145B0A03759AA39FB2205481053@de01exm70.ds.mot.com>

Thanks for the help.  

Here's my newest grammar for flowgen, meeting the intent of what I
posted before but handling MOST of the previous flowgen language. I
still have some work to do on expressions and others, but it's getting
there... Running in ANTLRworks, I can see parse trees and debug, and it
will parse an entire flowgen file that was supported by the previous
tool.

There are a couple of things I don't like in my ANTLR grammar, and I
could use your help:

Consider this input:
  <><> cut here <><>
  $DEFINE SDL
  
  HSS_requested_PDN_discon_ISD_Success_F15102
  $DEF FOO
  <><> end cut <><>

Here's a parse tree from this grammar for that input.
  transaction
  - xdefine
  - tran_name
    - word: HSS_requested_PDN_discon_ISD_Success_F
    - word
      - float_number: 15102
    - \n
  - tran_item
    - xdefine_inline
      - $DEF
      - FOO
      - rest_of_line: \n


A) I would like word to treat
"HSS_requested_PDN_discon_ISD_Success_F15102" as one word, not 2. 
B) I don't like rest_of_line as it contains too many parts if a line
contains something like "_____". The current rule returns 5 things, one
for each _. If that same thing said "FRED", it would return 1 thing. I'm
sure it's a token definition that it doesn't like, I just don't know how
to fix it.

It's possible these two things are the same problem.
	
Here's the grammar file. I'm running in both eclipse and ANTLRworks, but
the output above came from the ANTLRworks debug environment. I did a
little manual editing to give it some structure.

Ron
<><><><> cut here - flowgen.g <><><><>
grammar flowgen;

options {
  language = Java;
}

WS:	(WHITE)+ {skip();};

/* *********** */
/* TRANSACTION */
/* *********** */
//
// A transaction file is the main kind of flowgen file. It is the one
// that results in arrows on paper.
//
// A transaction file comprises a title and at least one message.
Further,
// a transaction file can begin with a set of variable definitions that
// are valid while that file is "in context." (* more on that later)
//
transaction:  xdefine* tran_name tran_item+ ;

//===
// DEFINE handling
// - There are 3 kinds of define actions:
//   a) Defines that happen at the beginning of the file
//   b) Defines that occur DURING the message flow.
//   c) Undefines can occur with $INCLUDE statements
//===
xdefine:  DEFINE_k COL_NAME rest_of_line;
xdefine_inline: DEF_k COL_NAME rest_of_line;
undef_inline: UNDEF_k COL_NAME rest_of_line;

defval: COL_NAME;
undefid: COL_NAME;

//===
// TRANSACTION ITEM handling
// A transaction item is the principal structure of a transaction.
//===

tran_item:  ( mn_pair 
    | if_stmt 
    | free_comment 
    | inc_stmt 
//    | par_block
    | opt_msg 
//    | opt_block
    | xdefine_inline
    | undef_inline
    | box_msg
//    | twoway_msg
//    | oneway_msg
    | return_stmt
    );

//===
// IF handling
//===
if_stmt:  ifpart tran_item+ elseifpart* elsepart? ENDIF_k;

ifpart:   ifkind new_line;
ifkind:   IFDEF_k id
        | IFNDEF_k id
        | IF_k expr
        ;
        
elseifpart: elseifkind new_line tran_item+;
elseifkind: ELIFDEF_k id
          | ELIFNDEF_k id
          | ELIF_k expr
          ;
elsepart: ELSE_k new_line tran_item+;

new_line:	NEW_LINE;
id	:	word;
expr	:	word;
//===
// OPTIONAL handling
// - 2 kinds: optional message and optional blocks
//===
opt_msg:        OPTMSG_k optmsg_content;
optmsg_content: box_msg 
              | mn_pair 
//              | twoway_msg 
//              | oneway_msg 
              ;


//===
// 
//===
//===
// RETURN handling
//===
return_stmt:  RETURN_k NEW_LINE;

//===
// Transaction Name. 
// TODO: Add notes for title page?
//===
tran_name: word+ NEW_LINE;

//===
// FREE COMMENT handling
//===
free_comment: FC_KEY COL_NAME? (Lbrack)=>fc_params? rest_of_line 
              noteline+;
fc_params:  Lbrack fc_par  Rbrack ;
fc_par:   inc_box;
//===
// BOX handling
//===
box_msg: BOX_k mn_pair;

//===
// INCLUDE handling
//===

inc_stmt: INCLUDE_k path inc_params? new_line ; 
/*
      revflag:INT = FALSE;
      nsubs:INT = 0;
      defs:SYMTAB_PTR = 0;
      ndefs:INT = 0;)
*/
inc_params: Lbrack inc_par (';' inc_par)* Rbrack;

inc_par:   inc_def 
         | inc_undef 
         | inc_sub 
         | inc_box 
         | inc_arrow 
         | inc_opt 
         ;
inc_def:   DEF_k defval (COMMA defval)*;
inc_undef: UNDEF_k undefid (COMMA undefid)*;
inc_sub:   old_name=COL_NAME EQUALS new_name=COL_NAME;
inc_box:   BOX_k;
inc_arrow: TWOWAY_k | ONEWAY_k;
inc_opt:   OPT_k | OPTMSG_k;

path: SLASH? relative_path ;

relative_path: path_word (SLASH path_word)*;

path_word: (up_directory)=>up_directory
         | word+
         ;
    
//===
// Message handling
// - A message is one of the building blocks of the flow. It describes
//   information flow from one point to another (or both directions).
// - There are 
//===

mn_pair:  message noteline*;
message:  num1? from_name num2? to_name rest_of_line;

noteline: NOTE_KEY rest_of_line;

rest_of_line: (options {greedy=false;}:.*) NEW_LINE;

num1: float_number;
num2: float_number;

float_number: INTnumber (DOT INTnumber)?;

from_name: COL_NAME;
to_name:   COL_NAME;

word: COL_NAME
    | float_number
    | randomPrintable+;

// Tokens - operators
fragment KEY_START:  '$';
fragment DOT_:       '.';
fragment STAR_:      '*';
fragment FC_START:   '&';
fragment NP_START:   '%';
fragment NOTE_START: '#';
fragment COMMA_:     ',';
fragment EQUALS_:    '=';
fragment SLASH_:     '/';
fragment L_BRACK_:   '[';
fragment R_BRACK_:   ']';
fragment UNDERBAR_:  '_';
fragment MINUS_:     '-';

Lbrack: L_BRACK_;
Rbrack: R_BRACK_;

up_directory: DOT DOT;	

DOT:      DOT_;
NOTE_KEY: NOTE_START;
FC_KEY:   FC_START;
COMMA:    COMMA_;
EQUALS:   EQUALS_;
SLASH:    SLASH_;
UNDERBAR:	UNDERBAR_;
MINUS	:	MINUS_;

// Tokens - keywords (hint: keywords end with '_k')
BLOCK_k:    '$BLOCK';
BOX_k:      '$BOX';

DEF_k:      '$DEF';
DEFINE_k:   '$DEFINE';

ELIF_k:     '$ELIF';
ELIFDEF_k:  '$ELIFDEF';
ELIFNDEF_k: '$ELIFNDEF';
ELSE_k:     '$ELSE';
ENDIF_k:    '$ENDIF';
ENDPAR_k:   '$ENDPAR';

IF_k:       '$IF';
IFDEF_k:    '$IFDEF';
IFNDEF_k:   '$IFNDEF';
INCLUDE_k:  '$INCLUDE';

ONEWAY_k:   '$1WAY';
OPT_k:      '$OPTIONAL';
OPTEND_k:   '$ENDOPTIONAL';
OPTMSG_k:   '$OPT';

PAR_k:      '$PAR';

RETURN_k:   '$RETURN';

TWOWAY_k:   '$2WAY';

UNDEF_k:    '$UNDEF';

// Tokens - names and numbers
fragment NUMBER:    '0'..'9';
fragment UPPERCASE: 'A'..'Z';
fragment LOWERCASE: 'a'..'z';
fragment PRINTABLE: ' '..'~';

NON_ALPHANUM: 	  '!'|'"'|'\''..')'|'+'..','  	// ! " ' ( ) + ,
		| ':'..'@'			// : ; < = > ? @
		| '\\'|'`'|'^'  		// [ \ ] ^ `
		| '{'..'~';  			// { | } ~
randomPrintable: 
            ( DOT | KEY_START | FC_START | NOTE_START | Lbrack | Rbrack
            | NON_ALPHANUM | SLASH | UNDERBAR | MINUS
            )+;

INTnumber: NUMBER+;
COL_NAME: (UPPERCASE|LOWERCASE) (UPPERCASE|LOWERCASE|UNDERBAR_|MINUS_)*;

// Tokens - Whitespace
fragment WHITE:     ' '|'\t';
fragment NEWLINE_:  '\r'| '\n';

NEW_LINE: NEWLINE_+; /* probably needs to include CR and CRLF */
NON_PRINTING_COMMENT: NP_START .* NEW_LINE {skip();};
<><><><> end <><><><>

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, February 15, 2010 2:14 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Newbie problem with line-oriented parsing

You can't use .* in the lexer, only .  The . rule should be the last one
in the lexer and is just used to catch any character tha you have not
otherwise matched (usually indicates a spurious character).

Make sure that your lexer rules are not ambiguous - they must not
overlap :-)

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Crocker Ron-QA1007
> Sent: Monday, February 15, 2010 12:05 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Newbie problem with line-oriented parsing
> 
> Hi all -
> 
> I'm new here, so be nice to me. Further, let me start by apologizing
> for
> such a verbose first message.
> I have started porting a DSL, one that I've been supporting for 15+
> years, from lex/yacc based toolset (via a tool called MetaTool) to
> ANTLR.
> 
> I've been looking through the various materials available on the net
> and
> have a copy of The Definitive ANTLR Reference. As I started porting
the
> grammar (EBNF ish) I've run into something I don't know how to deal
> with. Unfortunately I need to drag everyone through some background to
> get to the question, however I can start with the grammar I'm
> struggling
> with and the immediate problem.
> 
> <><><><> cut here - flowgen.g <><><><>
> grammar flowgen;
> 
> options {
>   language = Java;
> }
> 
> /* *********** */
> /* TRANSACTION */
> /* *********** */
> transaction:  ( ((KEY_START DEFINE_k) => xdefine*) tran_name message+
> );
> 
> xdefine: KEY_START DEFINE_k ID_name NEW_LINE;
> 
> tran_name: ~(KEY_START|NP_START|NEWLINE_) .* NEW_LINE;
> 
> message:  num1? from_name num2? to_name ((~(NP_START|WHITE|NEWLINE_))
> =>
> msg_name?) NEW_LINE;
> 
> num1: FLOATnumber;
> num2: FLOATnumber;
> 
> from_name: COLUMN_name;
> to_name:   COLUMN_name;
> 
> msg_name: MSG_name;
> 
> // Tokens - keywords
> DEFINE_k:       'DEFINE';
> 
> // Tokens - operators
> fragment KEY_START: '$';
> fragment NP_START:  '%';
> NEW_LINE: NEWLINE_;
> 
> // Tokens - names and numbers
> fragment NUMBER:    '0'..'9';
> fragment UPPERCASE: 'A'..'Z';
> fragment VARBASE:   UPPERCASE (UPPERCASE|NUMBER|'_')*;
> fragment VARNAME:   '$' VARBASE;
> fragment WHITE:     ' '|'\t';
> fragment NEWLINE_:  '\n'|'\r';
> 
> FLOATnumber: NUMBER+ ('.' NUMBER+)?;
> 
> ID_name:  VARBASE;
> VAR_name: VARNAME;
> 
> COLUMN_name: ( (ALPHA|NUMBER) (ALPHA|NUMBER|'_'|'&'|'-')*
>              | VARNAME
>              );
> //  name:   <([A-Za-z0-9][A-Za-z0-9_&-]*)?(\$[A-Z][A-Z0-9_]*)*>
> 
> WS:	(WHITE|NEWLINE_)+ {skip();};
> NON_PRINTING_COMMENT: NP_START .* NEWLINE_ {skip();};
> 
> MSG_name:  .*;
> <><><><> end <><><><>
> 
> When I run this through antlr I get the following error:
> Grammar: src/flowgen.g
> error(201): src/flowgen.g:57:12: The following alternatives can never
> be
> matched: 1
>  |---> MSG_name:  .*;
> 
> 1 error
> 
> BUILD FAIL
> (this is compliments of antlrv3ide plugin for eclipse; similar results
> occur with ANTLRworks)
> 
> ************ BEGIN BACKGROUND ************
> This language, flowgen, is used to specify Message Sequence Charts. We
> could be using ITU Z.120 for this, but since our local DSL predates
> Z.120 we have some interest in maintaining this language. The flowgen
> language is a simplified version of Z.120 in that the input language
is
> simple and direct, and using the flowgen tools one can create the
> corresponding picture (and even the corresponding Z.120 input). [After
> re-reading that, I'm not sure the background helps OTHER than to note
> that it's an old DSL and there is a solid user base not interested in
> moving to another DSL that is overly-complicated for the particular
job
> at hand.]
> 
> The format of a flowgen input file is simple: The first non-commented
> line is the "title" of the flow, and all subsequent lines represent
> messages in the flow. Newline's separate the constructs.
> 
> Here is an example flowgen input file:
> 
> 	 1. % Here is a comment
> 	 2. Simple flowgen flow
> 	 3. % Show a message going from A to B to C and back.
> 	 4. A	B	Message 1
> 	 5. # This is the first message in the sequence
> 	 6. B	C	Message 2
> 	 7. # This is the next message
> 	 8. C	B
> 	 9. % Note how the above message has no message name
> 	10. B	A	End
> 
> And this is the output of "classic" flowgen.
> 
> Simple flowgen flow    Page: 1
> 
>            A              B              C
>            |              |              |
>            | [1] Message 1|              |
>            |o------------>|              |
>            |              |              |
>            | This is the first message in the sequence
>            |              |              |
>            |              | [2] Message 2|
>            |              |o------------>|
>            |              |              |
>            |              | This is the next message
>            |              |              |
>            |              | [3]          |
>            |              |<------------o|
>            |              |              |
>            | [4] End      |              |
>            |<------------o|              |
>            |              |              |
> 
> Some notes:
> Lines 1 and 9 are "comment" lines and are ignored.
> 
> In this language, there are several constructs that map well to
> grammar-based solutions.
> * A title is the text associated with the first non-commented line
> * A message is the pair (arrow,comment) where an arrow represents the
> message moving from one place to another and a comment is optional
text
> used to describe something about the message.
> * An arrow is the triple (from,to,message_text) where from and to are
> required and represent column names (equivalent to IDs in other
> pedagogic grammars), while message_text is optional and represents the
> "name" of the message.
> * A note is associated with an arrow and is a multi-line construct.
> Each
> of these lines begins with any number of '#' characters, but it is
only
> the text after the '#'s that comprise the note.
> * A comment starts with the % character and continues to the end of
the
> line [akin to the C++/Java '//' operator]
> * Blank lines are ignored, independent of context.
> 
> ************ END BACKGROUND ************
> 
> Given this understanding, I created the grammar above. I'm not sure a)
> what to do about the error, but more importantly, b) I'm much more
> concerned about HOW to convince an ANTLR grammar to do what I want it
> to
> do. In comparison with the prior toolset, the LL vs. LR question
> doesn't
> bother me. However, the way MetaTool handled restrictions on the
> lexical
> space was to take advantage of lex's "start states". The flowgen
> grammar
> has become so complicated [I've only given a snapshot; it is much more
> substantial] that we've broken lex and are about to break flex.
Similar
> problem with yacc/bison, hence the desire to migrate to something more
> robust.
> 
> Thanks for hearing me out and I look forward to your
> recommendations/suggestions.
> 
> Ron Crocker
> Fellow of the Technical Staff
> Motorola
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gokul007 at gmail.com  Mon Mar  8 14:47:36 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 9 Mar 2010 04:17:36 +0530
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <469350910c088d4a8562f3652cdc49de@temporal-wave.com>
References: <4B94AF8B.7030305@googlemail.com>
	<469350910c088d4a8562f3652cdc49de@temporal-wave.com>
Message-ID: <9362e74e1003081447w71304bb4sfecafe6392659d4c@mail.gmail.com>

Jim,
    While your explanation is perfectly valid, i am having trouble
understanding the term context sensitive parsing. I understand that context
is set by some rule, which has been parsed before. This is used in semantic
predicates to choose the correct alternatives.
So in those cases, should i understand it like the following
a) the rule which sets the context, will never look beyond a particular set
of tokens( say n)
b) The tokens which come after this count n, can use that as a variable for
determining alternatives.

Please explain me on this.

Thanks,
Gokul.

On Mon, Mar 8, 2010 at 9:28 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> See earlier reply - if you want to sue them in predicates then you have to
> use scopes.
>
> However, I think that once you start down this that you are probably
> approaching the grammar incorrectly. This usually arises from trying to
> program a grammar from a normative spec for a language which is usually
> written in an LALR type approach and is also a documentation exercise so it
> tends to use things that are ambiguous syntactically but help to document
> the structure such as  ID (rule_parameter_ascii | rule_paramter_non_ascii).
>
> Other ways you can get down this path is because you are trying to impose
> too much structure at the parser level. The approach to try for is to defer
> as many errors from the lexer (in fact you should not really have any that
> you don't catch programmatically) into the parser, then as much as possible
> change syntactic errors into semantic errors, preferably in the tree walker.
>
> So, the parser should accept anything that is syntactically sound, even if
> it is semantically not allowed, then issue neater errors in a semantic
> context of either the parser, or usually more easily the tree walker.
>
> So a ruleb is only allowed after a rulea if XYZ is seen, but don't try to
> exclude that syntactically, juts accept it then check the conditions after:
>
> rulez: rulea (XYZ { flag=true;} )? (ruleb* { if (flag == false) {
> sout("Constructs like ruleb must have XYZ"); } }) ;
>
> And so on.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Kieran Simpson
> > Sent: Monday, March 08, 2010 12:04 AM
> > To: Gokulakannan Somasundaram
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Using previously matched parser rule in
> > decision making
> >
> >
> > > What Jim is suggesting is something like this
> > >
> > > ruleA: ruleB[true];
> > >
> > > ruleD: ruleB[false];
> > >
> > > ruleB[boolean isRuleA]:
> > >          {isRuleA}?  .....
> > >          |      .....
> > > ;
> > >
> > > Usage of semantic predicates. But i think there is an issue with
> > that.
> > > From ruleA / ruleD, if you decide to do a look ahead like LA(n), and
> > > if that lookahead goes to B, then this won't carry the boolean
> > > parameter and you might face some issues and the error thrown will
> > not
> > > be intuitive.
> > >
> > You are correct Gokulakannan.  I tried the semantic predicate approach
> > as well (just to see if it was a better approach) and in some of the
> > "synpred fragment" functions generated by the C target, I got compiler
> > errors as the functions was trying to use the rule parameter (in this
> > example, isRuleA) when the rule argument wasn't passed to the fragment
> > function.  The fragment function didn't even declare a parameter in the
> > signature to match the rule parameters.  I eventually used a
> > combination
> > of parameter passing and target language if conditions.  It didn't add
> > to much to the grammar.
> > > Ideal way according to me is
> > >
> > > ruleA: ruleB_A;
> > >
> > > ruleD: ruleB_D;
> > >
> > > ruleB_A :....;
> > >
> > > ruleB_D : ....;
> > >
> > > If there are lot of things that are common, factorise them as a
> > > seperate rule / seperate actions. Hope my suggestion was helpful.
> > >
> > > Thanks,
> > > Gokul.
> > >
> > >
> > > On Mon, Mar 8, 2010 at 8:55 AM, Kieran Simpson <kierans777 at gmail.com
> > > <mailto:kierans777 at gmail.com>> wrote:
> > >
> > >     Thanks for the suggestions.
> > >
> > >     I had considered the parameter approach, I was curious to know if
> > >     there
> > >     was a smarter way.
> > >
> > >     John B. Brodie wrote:
> > >     > Greetings!
> > >     >
> > >     > On Mon, 2010-03-08 at 13:50 +1100, Kieran Simpson wrote:
> > >     >
> > >     >> I have
> > >     >>
> > >     >> ruleA: ruleB;
> > >     >>
> > >     >> ruleC: ruleB;
> > >     >>
> > >     >> ruleB: ruleD;
> > >     >>
> > >     >> In ruleB I want to different target language actions to
> > execute
> > >     based on
> > >     >> whether it was ruleA or ruleC that was previously matched.  If
> > my
> > >     >> understanding of syntatic/semantic predicates is correct, they
> > >     only look
> > >     >> forwards, not backwards.
> > >     >>
> > >     >> Is there a way (without refactoring the grammar) to in rule B
> > >     know which
> > >     >> rule it was invoked from (A or C) and make decisions
> > accordingly?
> > >     >>
> > >     >
> > >     > Off the top of my head, pass a parameter.....
> > >     >
> > >     > ruleA : ruleB[true];
> > >     > ruleC : ruleB[false];
> > >     > ruleB [boolean fromA] : ruleD
> > >     >   { if( fromA )then
> > >     >        ....do this stuff....
> > >     >     else
> > >     >        ....do that stuff....
> > >     >    };
> > >     >
> > >     > (the above probably is not precisely the correct meta-syntax,
> > but
> > >     > hopefully you get the idea...)
> > >     >
> > >     >    -jbb
> > >     >
> > >     >
> > >     >
> > >
> > >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >     Unsubscribe:
> > >     http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ronburk at gmail.com  Mon Mar  8 18:47:07 2010
From: ronburk at gmail.com (Ron Burk)
Date: Mon, 8 Mar 2010 18:47:07 -0800
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <4B9465E1.6030606@googlemail.com>
References: <4B9465E1.6030606@googlemail.com>
Message-ID: <30dde8ce1003081847k1af3874ap7e16b86761ce1ed1@mail.gmail.com>

It is an interesting idea for a top-down parser generator
to just make the parsing stack of non-terminals available
to user actions. Whether that's easy or hard depends on
the details of how the tool generates parser code. But
certainly knowing the context you expect to be in is
arguably an advantage of top-down over bottom-up
parsing, so there's an argument to be made for making
that information available. As I struggle to think of
common/practical use for it, mainly error reporting or
recovery comes to mind. But, if the syntax made it
easy to ask things like "is X on the stack", I suppose
there are a variety of semantic checks that could be
made clearer and simpler than via flags and such. E.g.
checking that a 'break' keyword in C occurs within a
do/for/switch/while.

I usually try to do things in one pass, so it may be more
interesting of an idea to me than to someone who intends
to build a syntax tree first before doing any actual work.

Dinking with syntax:

A: B
C: B
B:
    { if($Stack[A])... else if($Stack[C])... else assert(FALSE); }

or maybe (also?)

    { if($Stack[-1]==$NonTerm[A]) ...; else ...; }

or

LoopStmt: Do | For | Switch | While ;
...
BreakStmt: 'break'
    { if(!$Stack[LoopStmt]) SynError("break is not inside
do/for/switch/while.\n"); }

From kierans777 at gmail.com  Tue Mar  9 01:57:47 2010
From: kierans777 at gmail.com (Kieran Simpson)
Date: Tue, 09 Mar 2010 20:57:47 +1100
Subject: [antlr-interest] Using previously matched parser rule in
 decision making
In-Reply-To: <30dde8ce1003081847k1af3874ap7e16b86761ce1ed1@mail.gmail.com>
References: <4B9465E1.6030606@googlemail.com>
	<30dde8ce1003081847k1af3874ap7e16b86761ce1ed1@mail.gmail.com>
Message-ID: <4B961B9B.3020403@googlemail.com>

I agree Ron.

Ron Burk wrote:
> It is an interesting idea for a top-down parser generator
> to just make the parsing stack of non-terminals available
> to user actions. Whether that's easy or hard depends on
> the details of how the tool generates parser code. But
> certainly knowing the context you expect to be in is
> arguably an advantage of top-down over bottom-up
> parsing, so there's an argument to be made for making
> that information available. As I struggle to think of
> common/practical use for it, mainly error reporting or
> recovery comes to mind. But, if the syntax made it
> easy to ask things like "is X on the stack", I suppose
> there are a variety of semantic checks that could be
> made clearer and simpler than via flags and such. E.g.
> checking that a 'break' keyword in C occurs within a
> do/for/switch/while.
>
> I usually try to do things in one pass, so it may be more
> interesting of an idea to me than to someone who intends
> to build a syntax tree first before doing any actual work.
>
> Dinking with syntax:
>
> A: B
> C: B
> B:
>     { if($Stack[A])... else if($Stack[C])... else assert(FALSE); }
>
> or maybe (also?)
>
>     { if($Stack[-1]==$NonTerm[A]) ...; else ...; }
>
> or
>
> LoopStmt: Do | For | Switch | While ;
> ...
> BreakStmt: 'break'
>     { if(!$Stack[LoopStmt]) SynError("break is not inside
> do/for/switch/while.\n"); }
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

From antlr at mirality.co.nz  Tue Mar  9 01:53:18 2010
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 09 Mar 2010 22:53:18 +1300
Subject: [antlr-interest] Using previously matched parser rule in
 decision making
In-Reply-To: <30dde8ce1003081847k1af3874ap7e16b86761ce1ed1@mail.gmail.co
 m>
References: <4B9465E1.6030606@googlemail.com>
	<30dde8ce1003081847k1af3874ap7e16b86761ce1ed1@mail.gmail.com>
Message-ID: <20100309095332.207A33418453@www.antlr.org>

At 15:47 9/03/2010, Ron Burk wrote:
 >It is an interesting idea for a top-down parser generator
 >to just make the parsing stack of non-terminals available
 >to user actions. Whether that's easy or hard depends on
 >the details of how the tool generates parser code. But
 >certainly knowing the context you expect to be in is
 >arguably an advantage of top-down over bottom-up
 >parsing, so there's an argument to be made for making
 >that information available.

You can use ANTLR's scopes to do that.  There are ways to tell if 
a particular scope has been entered, how many times it has been 
entered, and to retrieve information from any of those levels.


From gokul007 at gmail.com  Tue Mar  9 03:13:15 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 9 Mar 2010 16:43:15 +0530
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <20100309095332.207A33418453@www.antlr.org>
References: <4B9465E1.6030606@googlemail.com>
	<30dde8ce1003081847k1af3874ap7e16b86761ce1ed1@mail.gmail.com>
	<20100309095332.207A33418453@www.antlr.org>
Message-ID: <9362e74e1003090313v5ff0145fqed819a42b736f8cd@mail.gmail.com>

>
>
> You can use ANTLR's scopes to do that.  There are ways to tell if
> a particular scope has been entered, how many times it has been
> entered, and to retrieve information from any of those levels.
>
> I think that can be done, even by using a flag for the required rule. But,
when we are doing a look ahead of LA(m+n)  and say this rule (rule A) comes
at LA(m) and ends before LA(m+n), there is no way to tell whether we have
passed through that rule A, which might be used to make some decisions over
there.

Or may be i am talking about something not achievable.

Thanks,
Gokul.

From c.schinko at cgv.tugraz.at  Tue Mar  9 05:43:18 2010
From: c.schinko at cgv.tugraz.at (Christoph Schinko)
Date: Tue, 09 Mar 2010 14:43:18 +0100
Subject: [antlr-interest] Unexpected behavior - Error?
Message-ID: <4B965076.3050601@cgv.tugraz.at>

Hi!

Using the grammar below we experience unexpected behavior. The parser 
accepts the following input line:

<<<<<<< .mine

without throwing an error - which it should - according to the grammar. 
The grammar has been reduced to
a toy example reproducing the error. Any thoughts on that?

Regards, Chris

------------------------------------------------------------------------

grammar JScriptDoc;

options
{
     output=AST;
     backtrack=true;
     memoize=true;
}

source
     : (statement)*
     ;

statement
     : statementEmpty
     | statementBlock
     ;

statementBlock

     : '{' (statement )* '}'
     ;

statementEmpty
     : ';'
     ;

OPERATOR_LT
     : '<'
     ;

OPERATOR_DOT
     : '.'
     ;

IDENTIFIER
     : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
      ;

NEWLINE
     : '\r'? '\n'
     {$channel=HIDDEN;}
         ;

WHITESPACE
     : ' '
     {$channel=HIDDEN;}
     ;

WHITETAB
     : '\t'
     {$channel=HIDDEN;}
     ;

-- 
Dipl.-Ing. Christoph Schinko       c.schinko at cgv.tugraz.at
Institute of Computer Graphics and Knowledge Visualization
Graz University of Technology      tel: +43 (316) 873-5416
Inffeldgasse 16c, 8010 Graz, Austria


From Philippe.Frankson at Frsglobal.com  Tue Mar  9 06:15:29 2010
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 9 Mar 2010 15:15:29 +0100
Subject: [antlr-interest] Unexpected behavior - Error?
In-Reply-To: <4B965076.3050601@cgv.tugraz.at>
References: <4B965076.3050601@cgv.tugraz.at>
Message-ID: <148D436D71E918499E8A71E1DAD38DD008FD1901@BRU-EXCH01.frsglobal.internal>

What if you replace 'source' like this:
source : (statement)* EOF

Regards 
Philippe Frankson

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Christoph Schinko
Sent: 09 March 2010 14:43
To: antlr-interest at antlr.org
Subject: [antlr-interest] Unexpected behavior - Error?

Hi!

Using the grammar below we experience unexpected behavior. The parser 
accepts the following input line:

<<<<<<< .mine

without throwing an error - which it should - according to the grammar. 
The grammar has been reduced to
a toy example reproducing the error. Any thoughts on that?

Regards, Chris

------------------------------------------------------------------------

grammar JScriptDoc;

options
{
     output=AST;
     backtrack=true;
     memoize=true;
}

source
     : (statement)*
     ;

statement
     : statementEmpty
     | statementBlock
     ;

statementBlock

     : '{' (statement )* '}'
     ;

statementEmpty
     : ';'
     ;

OPERATOR_LT
     : '<'
     ;

OPERATOR_DOT
     : '.'
     ;

IDENTIFIER
     : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
      ;

NEWLINE
     : '\r'? '\n'
     {$channel=HIDDEN;}
         ;

WHITESPACE
     : ' '
     {$channel=HIDDEN;}
     ;

WHITETAB
     : '\t'
     {$channel=HIDDEN;}
     ;

-- 
Dipl.-Ing. Christoph Schinko       c.schinko at cgv.tugraz.at
Institute of Computer Graphics and Knowledge Visualization
Graz University of Technology      tel: +43 (316) 873-5416
Inffeldgasse 16c, 8010 Graz, Austria


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jbb at acm.org  Tue Mar  9 06:19:02 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 09 Mar 2010 09:19:02 -0500
Subject: [antlr-interest] Unexpected behavior - Error?
In-Reply-To: <4B965076.3050601@cgv.tugraz.at>
References: <4B965076.3050601@cgv.tugraz.at>
Message-ID: <1268144342.4579.10.camel@gecko.home.org>

Greetings!

On Tue, 2010-03-09 at 14:43 +0100, Christoph Schinko wrote:
> Hi!
> 
> Using the grammar below we experience unexpected behavior. The parser 
> accepts the following input line:
> 
> <<<<<<< .mine
> 
> without throwing an error - which it should - according to the grammar. 
> The grammar has been reduced to
> a toy example reproducing the error. Any thoughts on that?

ANTLR is simply doing what you told it to do!

> grammar JScriptDoc;
> 
> options
> {
>      output=AST;
>      backtrack=true;
>      memoize=true;
> }
> 
> source
>      : (statement)*
>      ;

so your source is permitted to be zero (or more) statements.

your input: "<<<<<<< .mine" contains zero statements.

ANTLR is cool with that and does nothing (as you have instructed it to
do).

you probably want to add EOF to your source rule in order to instruct
ANTLR to consume all of the input it is given. I also suspect that
source is really One (or more) statements -- an empty input can be
discovered without invoking the parser/lexer... So I think you probably
want your source rule to be this:

source : statement+ EOF! ; // does not include EOF in the AST...

> 
> statement
>      : statementEmpty
>      | statementBlock
>      ;
> 
> statementBlock
> 
>      : '{' (statement )* '}'
>      ;
> 
> statementEmpty
>      : ';'
>      ;
> 
....rest snipped....

Hope this helps
   -jbb



From dbahr at estudiantes.uci.cu  Tue Mar  9 07:04:16 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Tue, 09 Mar 2010 10:04:16 -0500
Subject: [antlr-interest] Ignoring tokens in AnTLR with Python
In-Reply-To: <4B91172E.9080808@estudiantes.uci.cu>
References: <4B8FD712.7050109@estudiantes.uci.cu>	<4B9113A0.5020305@estudiantes.uci.cu>
	<4B91172E.9080808@estudiantes.uci.cu>
Message-ID: <4B966370.20206@estudiantes.uci.cu>

Hello everyone,

I would just like to ask if there is a way of ignoring sections of input 
language. Something like:

i want to recognize these sentences only and ignore everything that 
doesn't look like them.

I tried:
sentence: macro | ~macro
but antlr gives me an error: unexpected token: macro (quite 
understandable i guess, since is not a token but a syntactic rule).

So, summing up: can i tell antlr i want to recognize some specific 
syntactic rules and ignore everyother single stuff that doesn't match?? 
Maybe something like disabling errors (not that i like this alternative 
very much).

Best regards,

Bahr.

From dbahr at estudiantes.uci.cu  Tue Mar  9 07:04:16 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Tue, 09 Mar 2010 10:04:16 -0500
Subject: [antlr-interest] Ignoring tokens in AnTLR with Python
In-Reply-To: <4B91172E.9080808@estudiantes.uci.cu>
References: <4B8FD712.7050109@estudiantes.uci.cu>	<4B9113A0.5020305@estudiantes.uci.cu>
	<4B91172E.9080808@estudiantes.uci.cu>
Message-ID: <4B966370.20206@estudiantes.uci.cu>

Hello everyone,

I would just like to ask if there is a way of ignoring sections of input 
language. Something like:

i want to recognize these sentences only and ignore everything that 
doesn't look like them.

I tried:
sentence: macro | ~macro
but antlr gives me an error: unexpected token: macro (quite 
understandable i guess, since is not a token but a syntactic rule).

So, summing up: can i tell antlr i want to recognize some specific 
syntactic rules and ignore everyother single stuff that doesn't match?? 
Maybe something like disabling errors (not that i like this alternative 
very much).

Best regards,

Bahr.

From c.schinko at cgv.tugraz.at  Tue Mar  9 07:41:35 2010
From: c.schinko at cgv.tugraz.at (Christoph Schinko)
Date: Tue, 09 Mar 2010 16:41:35 +0100
Subject: [antlr-interest] Unexpected behavior - Error?
In-Reply-To: <af443a971003090604s2ffe9851w6b7bb48019fc4302@mail.gmail.com>
References: <4B965076.3050601@cgv.tugraz.at>
	<af443a971003090604s2ffe9851w6b7bb48019fc4302@mail.gmail.com>
Message-ID: <4B966C2F.50006@cgv.tugraz.at>

Hi Bart!

Thanks for the quick answer! Adding an EOF to the rule solves the issue 
in the toy example. Unfortunately we are using custom token label types 
and are now getting a ClassCastException. It seems that we now have the 
problem mentioned here:

http://www.antlr.org/pipermail/antlr-interest/2009-November/036712.html

Any thoughts on that?

On 09.03.2010 15:04, Bart Kiers wrote:
> Hi Chris,
>
> Since the input '<<<<<<< .mine' does not contain any illegal tokens, 
> the parser just stops parsing since (statement)* will also match 
> nothing. You'll want to "tell" your parser to continue parsing all the 
> way to the end of your token stream. Do that by adding an EOF to the 
> end of your entry-point: presumably the source parser rule:
>
> source
>   : (statement)* EOF
>   ;
>
> Regards,
>
> Bart.
>

-- 
Dipl.-Ing. Christoph Schinko       c.schinko at cgv.tugraz.at
Institute of Computer Graphics and Knowledge Visualization
Graz University of Technology      tel: +43 (316) 873-5416
Inffeldgasse 16c, 8010 Graz, Austria


From bkiers at gmail.com  Tue Mar  9 07:52:16 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 9 Mar 2010 16:52:16 +0100
Subject: [antlr-interest] Unexpected behavior - Error?
In-Reply-To: <4B966C2F.50006@cgv.tugraz.at>
References: <4B965076.3050601@cgv.tugraz.at>
	<af443a971003090604s2ffe9851w6b7bb48019fc4302@mail.gmail.com>
	<4B966C2F.50006@cgv.tugraz.at>
Message-ID: <af443a971003090752g40b92200hae1e1ba6aff0b4f9@mail.gmail.com>

Hi Chris, sorry, forgot to send to the list the first time!


On Tue, Mar 9, 2010 at 4:41 PM, Christoph Schinko
<c.schinko at cgv.tugraz.at>wrote:

>  Hi Bart!
>
> Thanks for the quick answer! Adding an EOF to the rule solves the issue in
> the toy example. Unfortunately we are using custom token label types and are
> now getting a ClassCastException. It seems that we now have the problem
> mentioned here:
>
> http://www.antlr.org/pipermail/antlr-interest/2009-November/036712.html
>
> Any thoughts on that?
>
>
Unfortunately, I don't... I presume you read that entire thread, if not, a
(possible) solution is given here:
http://www.antlr.org/pipermail/antlr-interest/2009-November/036719.html

Best of luck!

Regards,

Bart.



>
> On 09.03.2010 15:04, Bart Kiers wrote:
>
> Hi Chris,
>
> Since the input '<<<<<<< .mine' does not contain any illegal tokens, the
> parser just stops parsing since (statement)* will also match nothing. You'll
> want to "tell" your parser to continue parsing all the way to the end of
> your token stream. Do that by adding an EOF to the end of your entry-point:
> presumably the source parser rule:
>
> source
>   : (statement)* EOF
>   ;
>
> Regards,
>
> Bart.
>
>

From jimi at temporal-wave.com  Tue Mar  9 08:30:08 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 09 Mar 2010 08:30:08 -0800
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <4B961B9B.3020403@googlemail.com>
Message-ID: <6225fd03088a0a4e8a3a04f5a2a7f6b7@temporal-wave.com>

>From anywhere in the parser:

java.util.List stack = getRuleInvocationStack(e, getParserName());

But this only works for Java and other targets that copy it (I think C# might do it). I don't do it in C because I prefer to take the view that the C stuff should be as close to the metal as it can be and the programmer will choose to add the overheads they need.

In the JavaFX front end, this stack is used to pin down errors a little more precisely - as it is open source you can download the code and look at AbstractGeneratedParserV4.java

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kieran Simpson
> Sent: Tuesday, March 09, 2010 1:58 AM
> To: Ron Burk
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Using previously matched parser rule in
> decision making
> 
> I agree Ron.
> 
> Ron Burk wrote:
> > It is an interesting idea for a top-down parser generator
> > to just make the parsing stack of non-terminals available
> > to user actions. Whether that's easy or hard depends on
> > the details of how the tool generates parser code. But
> > certainly knowing the context you expect to be in is
> > arguably an advantage of top-down over bottom-up
> > parsing, so there's an argument to be made for making
> > that information available. As I struggle to think of
> > common/practical use for it, mainly error reporting or
> > recovery comes to mind. But, if the syntax made it
> > easy to ask things like "is X on the stack", I suppose
> > there are a variety of semantic checks that could be
> > made clearer and simpler than via flags and such. E.g.
> > checking that a 'break' keyword in C occurs within a
> > do/for/switch/while.
> >
> > I usually try to do things in one pass, so it may be more
> > interesting of an idea to me than to someone who intends
> > to build a syntax tree first before doing any actual work.
> >
> > Dinking with syntax:
> >
> > A: B
> > C: B
> > B:
> >     { if($Stack[A])... else if($Stack[C])... else assert(FALSE); }
> >
> > or maybe (also?)
> >
> >     { if($Stack[-1]==$NonTerm[A]) ...; else ...; }
> >
> > or
> >
> > LoopStmt: Do | For | Switch | While ;
> > ...
> > BreakStmt: 'break'
> >     { if(!$Stack[LoopStmt]) SynError("break is not inside
> > do/for/switch/while.\n"); }
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From joel.j.k.parker at nasa.gov  Tue Mar  9 11:53:19 2010
From: joel.j.k.parker at nasa.gov (Parker, Joel J. K. (GSFC-5950))
Date: Tue, 9 Mar 2010 13:53:19 -0600
Subject: [antlr-interest] MismatchedTokenException in simple grammar
Message-ID: <7A801C482CB0E247982757332B3BABC6A3FE22737B@NDMSSCC05.ndc.nasa.gov>

Hi all,

I'm completely new to ANTLR and EBNF grammars to begin with, so this is probably a basic issue I'm simply not understanding.

I have a rule such as:

version_line : WS? 'VERS' WS? '=' WS? '1.0' WS? EOL ;
WS : ' '+ ;
EOL : '\r' | '\n' | '\r\n' | '\n\r' ;

that matches a statement in my input file that looks like this (with optional whitespace):
VERSION = 1.0

With the rule form above, I'm getting a successful match, although I get an exception with this form:

version_line : WS? 'VERS' WS? '=' WS? '1' '.0' WS? EOL ;

or this form:

version_line : WS? 'VERS' WS? '=' WS? DIGIT '.0' WS? EOL ;
DIGIT : '1' ;

Why is this different? I discovered this issue when trying to decompose the rule even more, hopefully ending up with something like this:

version_line : WS? 'VERS' WS? '=' WS? DIGIT '.' DIGIT WS? EOL ;
DIGIT : '0'..'9' ;

Thanks in advance,

-- 
Joel Parker

From bkiers at gmail.com  Tue Mar  9 13:15:25 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 9 Mar 2010 22:15:25 +0100
Subject: [antlr-interest] MismatchedTokenException in simple grammar
In-Reply-To: <7A801C482CB0E247982757332B3BABC6A3FE22737B@NDMSSCC05.ndc.nasa.gov>
References: <7A801C482CB0E247982757332B3BABC6A3FE22737B@NDMSSCC05.ndc.nasa.gov>
Message-ID: <af443a971003091315t37521e09qf9395c1226b6e3b9@mail.gmail.com>

FYI:
http://stackoverflow.com/questions/2412440/antlr-mismatchedtokenexception-on-simple-grammar

From rah_mehta at yahoo.com  Tue Mar  9 14:11:40 2010
From: rah_mehta at yahoo.com (Rahul Mehta)
Date: Tue, 9 Mar 2010 14:11:40 -0800 (PST)
Subject: [antlr-interest] AntLRWorks Rule Debugging Error
Message-ID: <661832.94309.qm@web37306.mail.mud.yahoo.com>

I am trying to test "whenDescriptor" rule in following grammar 
in AntLRWorks. I keep getting following exception as soon as I start 
debugging. Input text for testing is "when order : OrderBll then"

[16:45:07] C:\Documents and Settings\RM\My Documents\My 
Tools\AntLRWorks\output\__Test__.java:14: cannot find symbol
[16:45:07] symbol  : method whenDescriptor()
[16:45:07] location: class 
RulesTranslatorParser
[16:45:07]             g.whenDescriptor();
[16:45:07]              ^
[16:45:07] 1 error

I am able to test "packageDescriptor" 
and "declareDescriptor" successfully. Does anyone knows resolution to 
the error message? I tried various combination of input string but rule debugging fails.

Here is my grammar.

grammar RulesTranslator;

options
{
    
backtrack=true;
    memoize=true;
    language=CSharp2;
}

tokens {
    AND='and';
    OR='or';
    NOT='not';
    
EXISTS='exists';
    EVAL='eval';
    FORALL='forall';
    
CONTAINS='contains';
    IS='is';
    INSTANCEOF='instanceof';
    STRSIM='strsim';
    SOUNDSLIKE='soundslike';
    IN='in';
    NEW='new';
    WITH='with';
    ASSERT='assert';
    
ISDEF='isdef';
}

packageDescriptor
    : 'package' 
qualifiedName
    ;
    
declareDescriptorList
    : (declareDescriptor)*
    ;
    
declareDescriptor
    : 'declare' qualifiedName 
(variableDef)+ 'end'
    ;
    
whenDescriptor
    : 
//'when' ( typeRef | NOT ) (parExpression)+ 'then'
     'when' 
typeRef  'then'
    ;
    
typeRef
    :  (Identifier | 
variableDef)
    ;

primitiveType
    :   'boolean'
    
|    'char'
    |    'byte'
    |    'short'
    |    'int'
    |    'long'
    |    'float'
    |    'double'
    ;

qualifiedNameList
    : qualifiedName 
(',' qualifiedName)*
    ;
        
qualifiedName
    : 
Identifier ('.' Identifier)*
    ;
    
literal    
    : 
integerLiteral
    | FloatingPointLiteral
    | CharacterLiteral
    | StringLiteral
    | booleanLiteral
    | 'null'
    ;

integerLiteral
    :   HexLiteral
    |   OctalLiteral
    |   DecimalLiteral
    ;

booleanLiteral
    :   'true'
    |   'false'
    ;
    
elementValuePairs
    : elementValuePair (',' elementValuePair)*
    ;
    
elementValuePair
    : (Identifier '=')? 
conditionalExpression
    ;
            
variableDef    
    : ( Identifier ':' Identifier | Identifier ':' qualifiedName ) 
    ;

// STATEMENTS / BLOCKS    
chunk : (statement (';')?)*
    ;

block : chunk EOF;
        
statement
    : 'while' parExpression 
statement
        | 'do' statement 'while' parExpression ';'
    
    | 'switch' parExpression '{' switchBlockStatementGroups '}'
    
    | 'return' expression? ';'
        | 'break' Identifier? ';'
        | 'continue' Identifier? ';'
        //| 'when' parExpression 'then' (statement)? 'end'
        |  
statementExpression
        |  Identifier ':' statement
    ;
        
switchBlockStatementGroups
    :   
(switchBlockStatementGroup)*
    ;
    
switchBlockStatementGroup
    :   switchLabel statement*
    ;
    
switchLabel
    :  
'case' constantExpression ':'
    |  'default' ':'
    ;
    
moreStatementExpressions
    :  (',' statementExpression)*
    ;
        
fieldseperator 
    : (',' | ';')
    ;
    
logicalOperator
     : ('&&' | '||' | '~=') 
    ;
    
parExpression
    :   '(' expression ')'
    ;
    
expressionList
        
:   expression (',' expression)*
        ;

statementExpression
    :   expression
    ;
    
constantExpression
    :   
expression
    ;
    
expression
    :   
conditionalExpression (assignmentOperator expression)?
    ;
    
assignmentOperator
    :   '='
    |   '+='
    |   '-='
    |   '*='
    |   '/='
    |   '&='
    |   '|='
    |   '^='
    |   '%='
    |   '<' '<' '='
    |   '>' 
'>' '='
    |   '>' '>' '>' '='
    ;
    
conditionalExpression
    :   conditionalOrExpression ( '?' expression ':' expression )?
    ;

conditionalOrExpression
    :   conditionalAndExpression ( ( '||' | OR ) conditionalAndExpression 
)*
    ;

conditionalAndExpression
    :   inclusiveOrExpression ( ( 
'&&' | AND ) inclusiveOrExpression )*
    ;

inclusiveOrExpression
    :   exclusiveOrExpression ( '|' exclusiveOrExpression )*
    ;

exclusiveOrExpression
    :   andExpression ( '^' andExpression )*
    ;

andExpression
    :   equalityExpression ( '&' equalityExpression )*
    ;

equalityExpression
    :   relationalExpression ( ('==' | '!=') relationalExpression )*
    ;

relationalExpression
    :   shiftExpression ( relationalOp shiftExpression )*
    ;
    
relationalOp
    :    ('<' '=' | '>' '=' | '<' | '>')
    ;

shiftExpression
    :   additiveExpression ( shiftOp additiveExpression )*
    ;

shiftOp
    :   
('<' '<' | '>' '>' '>' | '>' '>')
    ;

additiveExpression
        :   multiplicativeExpression ( ('+' | '-') multiplicativeExpression )*
    ;

multiplicativeExpression
        :   
unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )*
    ;
    
unaryExpression
    :   '+' unaryExpression
    |    '-' 
unaryExpression
    |   '++' primary
    |   '--' primary
    
|   unaryExpressionNotPlusMinus
    ;

unaryExpressionNotPlusMinus
    :   '~' unaryExpression
    |     ( '!' | NOT ) unaryExpression
    |   castExpression
    ;

castExpression
    :  '(' 
primitiveType ')' unaryExpression
    |  '(' expression ')' 
unaryExpressionNotPlusMinus
    ;

primary
    :    
parExpression
    |   literal
    ;
        
// Lexar    
HexLiteral : '0' ('x'|'X') HexDigit+ IntegerTypeSuffix? ;

DecimalLiteral : 
('0' | '1'..'9' '0'..'9'*) IntegerTypeSuffix? ;

OctalLiteral : 
'0' ('0'..'7')+ IntegerTypeSuffix? ;

fragment
HexDigit : 
('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
IntegerTypeSuffix : ('l'|'L') ;

FloatingPointLiteral
    : ('0'..'9')+ '.' ('0'..'9')* Exponent? FloatTypeSuffix?
    | '.' 
('0'..'9')+ Exponent? FloatTypeSuffix?
    ;

fragment
Exponent : ('e'|'E') ('+'|'-')? ('0'..'9')+ ;

fragment
FloatTypeSuffix : ('f'|'F'|'d'|'D') ;

CharacterLiteral
    :   '\'' ( 
EscapeSequence | ~('\''|'\\') ) '\''
    ;

StringLiteral
    :  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
    ;

fragment
EscapeSequence
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UnicodeEscape
    |   OctalEscape
    ;
    
fragment
OctalEscape
    :   
'\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' 
('0'..'7')
    ;

fragment
UnicodeEscape
    :   '\\' 'u' HexDigit HexDigit HexDigit HexDigit
    ;

Identifier 
    
    :   IdentifierStart (IdentifierStart|IdentifierPart)*
        ;

fragment
IdentifierStart
    :  '\u0024' |
       '\u0041'..'\u005a' |
       '\u005f' |
       '\u0061'..'\u007a' |
       '\u00c0'..'\u00d6' |
       
'\u00d8'..'\u00f6' |
       '\u00f8'..'\u00ff' |
       
'\u0100'..'\u1fff' |
       '\u3040'..'\u318f' |
       '\u3300'..'\u337f' |
       '\u3400'..'\u3d2d' |
       '\u4e00'..'\u9fff' |
       
'\uf900'..'\ufaff'
    ;

fragment
IdentifierPart
    :  
'\u0030'..'\u0039' |
       '\u0660'..'\u0669' |
       
'\u06f0'..'\u06f9' |
       '\u0966'..'\u096f' |
       
'\u09e6'..'\u09ef' |
       '\u0a66'..'\u0a6f' |
       
'\u0ae6'..'\u0aef' |
       '\u0b66'..'\u0b6f' |
       
'\u0be7'..'\u0bef' |
       '\u0c66'..'\u0c6f' |
       '\u0ce6'..'\u0cef' |
       '\u0d66'..'\u0d6f' |
       '\u0e50'..'\u0e59' |
       '\u0ed0'..'\u0ed9' |
       
'\u1040'..'\u1049' 
    |   '\uff10'..'\uff19'
   ;

WS  :  
(' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;

COMMENT
    :   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
    ;

LINE_COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' 
{$channel=HIDDEN;}
    ;

NEWLINE    : ('\r')? '\n' {skip();}
    ;

Thanks,

Rahul



      

From jbb at acm.org  Tue Mar  9 15:38:47 2010
From: jbb at acm.org (John B. Brodie)
Date: Tue, 09 Mar 2010 18:38:47 -0500
Subject: [antlr-interest] AntLRWorks Rule Debugging Error
In-Reply-To: <661832.94309.qm@web37306.mail.mud.yahoo.com>
References: <661832.94309.qm@web37306.mail.mud.yahoo.com>
Message-ID: <1268177927.17705.16.camel@gecko.home.org>

Greetings!

On Tue, 2010-03-09 at 14:11 -0800, Rahul Mehta wrote:
> I am trying to test "whenDescriptor" rule in following grammar 
> in AntLRWorks. I keep getting following exception as soon as I start 
> debugging. Input text for testing is "when order : OrderBll then"
> 
> [16:45:07] C:\Documents and Settings\RM\My Documents\My 
> Tools\AntLRWorks\output\__Test__.java:14: cannot find symbol
__________________________^^^^^^^^^^^^^

> [16:45:07] symbol  : method whenDescriptor()
> [16:45:07] location: class 
> RulesTranslatorParser
> [16:45:07]             g.whenDescriptor();
> [16:45:07]              ^
> [16:45:07] 1 error
> 
> I am able to test "packageDescriptor" 
> and "declareDescriptor" successfully. Does anyone knows resolution to 
> the error message? I tried various combination of input string but rule debugging fails.
> 
> Here is my grammar.
> 
> grammar RulesTranslator;
> 
> options
> {
>     
> backtrack=true;
>     memoize=true;
>     language=CSharp2;
_______________^^^^^^^

> }
> 
....snipped....
> 
> packageDescriptor
>     : 'package' 
> qualifiedName
>     ;
>     
> declareDescriptorList
>     : (declareDescriptor)*
>     ;
>     
> declareDescriptor
>     : 'declare' qualifiedName 
> (variableDef)+ 'end'
>     ;
>     
> whenDescriptor
>     : 
> //'when' ( typeRef | NOT ) (parExpression)+ 'then'
>      'when' 
> typeRef  'then'
>     ;
>     
....remainder snipped....

I see that your error message refers to the file __Test__.java

Yet you have selected CSharp2 as your target language.

I do not think that the debug button (or whatever it is called, i do not
use ANTLRWorks...) only works for the Java target. Is it possible that
ANTLRWorks is actually using some prior, Java, version of your grammar?

I believe that it is possible to use the ANTLRWorks debugger on CSharp
grammars. But you need to compile, build, and excute the grammar and
generated files by hand. Don't forget the -debug option to
org.antlr.Tool

When you run the -debug version, it will pause waiting for ANTLRWorks to
connect. At that point you can debug from ANTLRWorks.

The above is just the concept, not sure of the exact details, because i
do not use ANTLRWorks nor do i use C#.

Sorry for not being very specific, but maybe, hopefully, this will point
in the right direction.
   -jbb



From shap at eros-os.org  Tue Mar  9 15:50:58 2010
From: shap at eros-os.org (Jonathan S. Shapiro)
Date: Tue, 9 Mar 2010 15:50:58 -0800
Subject: [antlr-interest] Unicode lexing
Message-ID: <c46d4d431003091550x7d4f24c5o8564054502ead3ae@mail.gmail.com>

I know this topic has come up before, and sorry to bring it up again.

Context: I'm bringing up BitC on CLI, and planning to use antlr to do it.
BitC characters cover the full unicode (20 bit) range.

The good news:
haracters above U+FFFF can only appear in character and string literals.

From corrado.campisano at gmail.com  Tue Mar  9 15:53:29 2010
From: corrado.campisano at gmail.com (Corrado Campisano)
Date: Wed, 10 Mar 2010 00:53:29 +0100
Subject: [antlr-interest] Stopping parser and lexer at first error
Message-ID: <20814e5a1003091553w76e3aeedo8e3deac2f09ec563@mail.gmail.com>

Hi all,

I needed to catch any syntax error (letting the lexer insert/delete chars or
the parser keeping parsing with the sys.err message only could be very
dangerous to my application), so I took a look on the reference (which
reports information not valid anymore) and on the internet and I found
several hints and articles:

Why the generated parser code tolerates illegal
expression?<http://www.antlr.org/wiki/pages/viewpage.action?pageId=4554943>
How can I make the lexer exit upon first lexical
error?<http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217>
http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery
[antlr-interest] I want to throw an exception and stop parse, please!
<http://www.antlr.org/pipermail/antlr-interest/2009-May/034605.html>

It looks to me I found a way to do this, maybe it's worth to publish that on
the wiki, once validated.


I just added the following overrides to my grammar (attached):

@parser::members
{
    public class ParserException extends RuntimeException {
            Object objCurrentInputSymbol = null;

            public ParserException(Object oCurrentInputSymbol) {
                this.objCurrentInputSymbol = oCurrentInputSymbol;
            }
        }

        protected Object recoverFromMismatchedToken(IntStream input, int
ttype, BitSet follow) throws RecognitionException {
            System.out.println("PARSER :
this.getCurrentInputSymbol(input).toString() : " +
this.getCurrentInputSymbol(input).toString());
            System.out.println("PARSER : this.failed() : " + this.failed());
            System.out.println("PARSER : this.getNumberOfSyntaxErrors() : "
+ this.getNumberOfSyntaxErrors());
            throw new ParserException(this.getCurrentInputSymbol(input));
        }
}

@lexer::members
{
    public class LexerException extends RuntimeException {
            RecognitionException recognitionException = null;
            String strErrorHeader = null;
            String strErrorMessage = null;

            public LexerException(RecognitionException recExc, String sHead,
String sMsg) {
                this.recognitionException = recExc;
                this.strErrorHeader = sHead;
                this.strErrorMessage = sMsg;

                System.out.println("LEXER : ErrorHeader : " + sHead);
                System.out.println("LEXER : ErrorMessage : " + sMsg);
                System.out.println("LEXER : RecognitionException : " +
this.recognitionException.toString());
            }
        }


        public void reportError(RecognitionException recExc) {
        throw new LexerException(recExc, this.getErrorHeader(recExc),
getErrorMessage(recExc, this.getTokenNames()));
    }
}


Then I tested it with a simple class:
    public static void main(String[] args) {
        testLexerError();
        testParserError();
    }
    private static void testLexerError() {
        String strDlToParse = "{CORRADO PIPPO ;feee}";
        System.out.println("TESTING LEXER with : " + strDlToParse);
        testError(strDlToParse);
    }
    private static void testParserError() {
        String strDlToParse = "{CORRADO PIPPO feee} dhert";
        System.out.println("TESTING PARSER with : " + strDlToParse);
        testError(strDlToParse);
    }
    private static void testError(String strDlToParse) {
        CommonTree tree=null;
        String strError = null;

        ANTLRStringStream input = new
org.antlr.runtime.ANTLRStringStream(strDlToParse);
        Dl2OwlJavaBLexer lexer = new Dl2OwlJavaBLexer(input);
        TokenStream tokens = new org.antlr.runtime.CommonTokenStream(lexer);
        Dl2OwlJavaBParser parser = new Dl2OwlJavaBParser(tokens);

        try {
            // this may rise an exception
            // TODO : check why NO EXCEPTION is risen with error "line 1:9
no viable alternative at character ';'" on inputs like "{CORRADO ;}"
            eu.servicemix.dl2owl.Dl2OwlJavaBParser.axiom_return ret =
parser.axiom();

            // TODO : check if this will be executed if no exception rises
            tree = (CommonTree) ret.getTree();

            printTreeHelper(tree);

        } catch (RecognitionException e) {

            System.out.println(e.toString());
            e.printStackTrace();

        } catch (RuntimeException e) {

            System.out.println(e.toString());
            e.printStackTrace();
        }
    }


The output looks ok, I wonder whether the whole 'trick' is too...

TESTING LEXER with : {CORRADO PIPPO *;*feee}
LEXER : ErrorHeader : line 1:15
LEXER : ErrorMessage : no viable alternative at character ';'
LEXER : RecognitionException : NoViableAltException(';'@[1:1: Tokens : (
T__37 | T__38 | T__39 | T__40 | HAS_VALUE | ALL_VALUES | SOME_VALUES | DOT |
HAS_CARD | MIN_CARD | MAX_CARD | NOT | AND | OR | URI_REF | INT_VALUE | WS |
CTRL_CHAR );])
eu.servicemix.dl2owl.Dl2OwlJavaBLexer$LexerException
eu.servicemix.dl2owl.Dl2OwlJavaBLexer$LexerException
    at
eu.servicemix.dl2owl.Dl2OwlJavaBLexer.reportError(Dl2OwlJavaBLexer.java:69)
    at org.antlr.runtime.Lexer.nextToken(Lexer.java:94)
    at
org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:119)
    at org.antlr.runtime.CommonTokenStream.LT<http://org.antlr.runtime.commontokenstream.lt/>
(CommonTokenStream.java:238)
    at
eu.servicemix.dl2owl.Dl2OwlJavaBParser.axiom(Dl2OwlJavaBParser.java:110)
    at
eu.servicemix.dl2owl.CommonTreeHelper.testError(CommonTreeHelper.java:140)
    at
eu.servicemix.dl2owl.CommonTreeHelper.testLexerError(CommonTreeHelper.java:121)
    at eu.servicemix.dl2owl.CommonTreeHelper.main(CommonTreeHelper.java:113)

TESTING PARSER with : {CORRADO PIPPO feee} *dhert*
PARSER : this.getCurrentInputSymbol(input).toString() :
[@8,21:25='dhert',<7>,1:21]
PARSER : this.failed() : false
PARSER : this.getNumberOfSyntaxErrors() : 0
eu.servicemix.dl2owl.Dl2OwlJavaBParser$ParserException
eu.servicemix.dl2owl.Dl2OwlJavaBParser$ParserException
    at
eu.servicemix.dl2owl.Dl2OwlJavaBParser.recoverFromMismatchedToken(Dl2OwlJavaBParser.java:97)
    at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115)
    at
eu.servicemix.dl2owl.Dl2OwlJavaBParser.axiom(Dl2OwlJavaBParser.java:232)
    at
eu.servicemix.dl2owl.CommonTreeHelper.testError(CommonTreeHelper.java:140)
    at
eu.servicemix.dl2owl.CommonTreeHelper.testParserError(CommonTreeHelper.java:126)
    at eu.servicemix.dl2owl.CommonTreeHelper.main(CommonTreeHelper.java:114)


Any comment really appreciated!!

Corrado
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Dl2OwlJavaB.g
Type: application/octet-stream
Size: 21621 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100310/6844f724/attachment.obj 

From shap at eros-os.org  Tue Mar  9 15:58:50 2010
From: shap at eros-os.org (Jonathan S. Shapiro)
Date: Tue, 9 Mar 2010 15:58:50 -0800
Subject: [antlr-interest] Unicode lexing
Message-ID: <c46d4d431003091558g631aa5d7uae8d4f012464b1c4@mail.gmail.com>

Well *that* was weird. Sorry for the mis-send.

I know this topic has come up before, and sorry to bring it up again.

Context: I'm bringing up BitC on CLI, and planning to use antlr to do it.
BitC characters cover the full unicode (20 bit) range.

The good news:

   1. Characters above U+FFFF can only appear in character and string
   literals.
   2. The language requires that units of compilation be encoded in UTF-8.
   3. Both JVM and CLI carry strings as UTF-16, so if we carry character
   literals around as string payloads we can deal with this internally.
   4. Outside of character and string literals the legal input characters
   all fall within the 16-bit UNICODE subset.

When we dealt with this in the current, yacc-based implementation, we
proceeded as follows:

   1. We hand-wrote the lexer and had it process the raw input as a byte
   stream. We then hand-decoded UTF-8 sequences as appropriate.
   2. To carry around string literal values we encoded them internally as
   UTF-8 (because this was C). In JVM/CLR, obviously, we would encode in
   UTF-16.
   3. We internally carted character literal values around as an unsigned
   32-bit integer.

So basically, we found that an "arm's length unicode" approach worked out
for us. I had thought to adopt a similar approach with Antlr.

I've been reading the Antlr Reference book, and I noted a comment to the
effect that if you hand-write a lexer you lose the ability to do certain
kinds of lookahead. Is this the case, or is it possible to hand-write a
lexer in a fashion that cooperates with the regular behavior of Antlr?

Thanks


Jonathan

From gokul007 at gmail.com  Tue Mar  9 22:58:52 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 10 Mar 2010 12:28:52 +0530
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <6225fd03088a0a4e8a3a04f5a2a7f6b7@temporal-wave.com>
References: <4B961B9B.3020403@googlemail.com>
	<6225fd03088a0a4e8a3a04f5a2a7f6b7@temporal-wave.com>
Message-ID: <9362e74e1003092258i53e1303aic153b530b8d73d30@mail.gmail.com>

>
>
>
> java.util.List stack = getRuleInvocationStack(e, getParserName());
>
> But this only works for Java and other targets that copy it (I think C#
> might do it). I don't do it in C because I prefer to take the view that the
> C stuff should be as close to the metal as it can be and the programmer will
> choose to add the overheads they need.
>
>
That makes a lot of sense, but can you tell me how can a C-programmer keep
track of the rules, he will pass through during the LookAhead. I think this
question might be valid for someone using Java Target also. The action, you
are asking to execute can be executed during normal parsing, but if that is
used in Semantic predicates, then we have to be sure that this will get
executed even during the lookahead. Can we create such a facility?

What i mean is a set of actions, if put inside some special construct, will
get executed while executing Syntactic predicates and semantic predicates,
possibly with a rollback action. Please let me know, if i am
misunderstanding the concept somewhere.

Thanks,
Gokul.

From jimi at temporal-wave.com  Tue Mar  9 23:05:26 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 09 Mar 2010 23:05:26 -0800
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <9362e74e1003092258i53e1303aic153b530b8d73d30@mail.gmail.com>
Message-ID: <b0312fd35966ca41b3a335ed8085f813@temporal-wave.com>

Can't rollback as it isn't a database and track state isn't really the right thing to be doing here (nor is tracing what rule you came through to influence parsing really, though scopes are better).

 

{{ action executes even if in synpred/backtrack }}

 

Jim

 

From: Gokulakannan Somasundaram [mailto:gokul007 at gmail.com] 
Sent: Tuesday, March 09, 2010 10:59 PM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Using previously matched parser rule in decision making

 



java.util.List stack = getRuleInvocationStack(e, getParserName());

But this only works for Java and other targets that copy it (I think C# might do it). I don't do it in C because I prefer to take the view that the C stuff should be as close to the metal as it can be and the programmer will choose to add the overheads they need.


That makes a lot of sense, but can you tell me how can a C-programmer keep track of the rules, he will pass through during the LookAhead. I think this question might be valid for someone using Java Target also. The action, you are asking to execute can be executed during normal parsing, but if that is used in Semantic predicates, then we have to be sure that this will get executed even during the lookahead. Can we create such a facility? 

What i mean is a set of actions, if put inside some special construct, will get executed while executing Syntactic predicates and semantic predicates, possibly with a rollback action. Please let me know, if i am misunderstanding the concept somewhere.

Thanks,
Gokul.




From gokul007 at gmail.com  Wed Mar 10 00:41:48 2010
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 10 Mar 2010 14:11:48 +0530
Subject: [antlr-interest] Using previously matched parser rule in
	decision making
In-Reply-To: <b0312fd35966ca41b3a335ed8085f813@temporal-wave.com>
References: <9362e74e1003092258i53e1303aic153b530b8d73d30@mail.gmail.com>
	<b0312fd35966ca41b3a335ed8085f813@temporal-wave.com>
Message-ID: <9362e74e1003100041w3f3e29c0w585da5759d35f198@mail.gmail.com>

Oh! Sorry! i wrote it wrongly. I meant a set of actions, which will get
executed during look aheads in semantic predicates and syntactic predicates.
But Jim, i am not able to understand you.

Jim :Can?t rollback as it isn?t a database and track state isn?t really the
right thing to be doing here

What i meant by rollback is something like an action which will get executed
after we find out the predicate matching is not possible. For example if i
do a LA(n), say at some point, there is a conflict and it requires the
context to resolve the conflict. setting the context while executing the
LA(n) and resetting the context in a rollback action(something the user
should provide). Please bear with me, if you have already understood that.

Jim : nor is tracing what rule you came through to influence parsing really,
though scopes are better

Can you give a small example, of how to set a flag using scope while doing a
LA(n)? Thanks...

Jim : {{ action executes even if in synpred/backtrack }}

Please point me to the relevant doc. I am not understanding this. I find
that the syntactic predicates don't execute actions of the rules they are
matching.

Thanks,
Gokul.

From jmp at observant.com.au  Wed Mar 10 19:01:45 2010
From: jmp at observant.com.au (J. Matthew Pryor)
Date: Thu, 11 Mar 2010 14:01:45 +1100
Subject: [antlr-interest] Cannot explain "no viable alternative at input" -
	antlr 3.0.1
Message-ID: <8921E3DC-14B5-4BAC-9235-14EE85D15D1B@observant.com.au>

I am a total ANTLR newbie, and have read quite a bit, but am a bit  
flumoxed by the results I am getting with my antlr grammar

My grammar is heavily based on the expression parser example.

I am confused by some console output I am seeing of the form:

line 1:5 no viable alternative at input '&&'
line 0:-1 no viable alternative at input '<EOF>'
line 1:5 no viable alternative at input '&&'
line 0:-1 no viable alternative at input '<EOF>'

Despite seeing this console output, my boolean expression parser seems  
to work & return valid values.

All the "operators" in my base parser get called with the values I  
would expect

so when I give it the input

true && true

despite the fact that I get the following consle messages

line 1:5 no viable alternative at input '&&'
line 0:-1 no viable alternative at input '<EOF>'

My method band() gets called with 2 Boolean, both set to true

If I pass input

false || true

my method bor() gets called with the Boolean values false & true

I also intended it to support more complex expressions like

(1.1 < 2.2) && (((1/1.0) * (4.0-8)) > -5.0)

Once again we get console output about no viable alternative

but the final result of the expression is as expected.

I have attached the grammar below

I am using antlr 3.0.1 with Java 5 on a Mac 10.5

I would really appreciate any hints that you might be able to provide

Regards,
Matthew


=== GRAMMAR ====
grammar Expr;

options {
	superClass=ExprParserBase;
}

@header {
package au.com.observant.viz.expression;
import au.com.observant.viz.expression.ExprParserBase;
}
@lexer::header {
package au.com.observant.viz.expression;
}

@members {
	Object result;
	public Object getResult() {
		return result;
	}
}

prog returns [Object value]
	:	b=boolExpr {$value = $b.value;}
	;

boolExpr returns [Object value]
	:	b=relExpr {$value = $b.value;}
		( 	BAND b=relExpr {$value = band($value,$b.value);}
		| 	BOR b=relExpr {$value = bor($value,$b.value);}
		)*
	;

relExpr returns [Object value]
     :   e=expr {$value = $e.value;}
         (   '>' e=expr {$value = gt($value,$e.value);}
         |   '<' e=expr {$value = lt($value,$e.value);}
         |   '>=' e=expr {$value = gte($value,$e.value);}
         |   '<=' e=expr {$value = lte($value,$e.value);}
         |   '==' e=expr {$value = eq($value,$e.value);}
         |   '!=' e=expr {$value = neq($value,$e.value);}
         )
     ;

expr returns [Object value]
     :   e=multExpr {$value = $e.value;}
         (   '+' e=multExpr {$value = add($value,$e.value);}
         |   '-' e=multExpr {$value = subtract($value,$e.value);}
         )*
     ;

multExpr returns [Object value]
     :   e=power {$value = $e.value;}
     	(   '*' e=power {$value = multiply($value, $e.value);}
     	|   '/' e=power {$value = divide($value, $e.value);}
     	)*
     ;

power returns [Object value]
	:	f=unary
			{$value = $f.value;}
		(POW p=unary
			{$value=powerOf($value,$p.value);}
		)?
	;

unary returns [Object value]
	:	f=atom
			{$value = $f.value;}
	|	'!' f=atom
			{$value = negate($f.value);}
	|	'-' f=atom
			{$value = negate($f.value);}
	;

atom returns [Object value]
     :   INTEGER {$value = Double.parseDouble($INTEGER.text);}
     |   FLOAT {$value = Double.parseDouble($FLOAT.text);}
     |   FIELD { $value = findField($FIELD.text); }
     |   ID { $value = findField($ID.text); }
     |   '(' boolExpr ')' {$value = $boolExpr.value;}
     |   EXP '(' expr ')' {$value = exp($expr.value);}
     |   TRUE {$value = Boolean.TRUE;}
     |   FALSE {$value = Boolean.FALSE;}
     ;

EXP   : 'exp';
TRUE   : 'true';
FALSE   : 'false';
ID : LETTER ( LETTER | '0'..'9' | '_' )*;
fragment LETTER: ('a'..'z' | 'A'..'Z');
POW   : '^';
BAND   : '&&';
BOR   : '||';
INTEGER	
	:	('0'..'9')+
	;

FLOAT
	:	('0'..'9')* '.' ('0'..'9')+
	;
FIELD     : ID '.' ID ;
WS  :   (' '|'\t')+ {skip();} ;


From jbb at acm.org  Wed Mar 10 19:42:42 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 10 Mar 2010 22:42:42 -0500
Subject: [antlr-interest] Cannot explain "no viable alternative at
 input" - antlr 3.0.1
In-Reply-To: <8921E3DC-14B5-4BAC-9235-14EE85D15D1B@observant.com.au>
References: <8921E3DC-14B5-4BAC-9235-14EE85D15D1B@observant.com.au>
Message-ID: <1268278962.15234.7.camel@gecko.home.org>

Greetings!

On Thu, 2010-03-11 at 14:01 +1100, J. Matthew Pryor wrote:
> I am a total ANTLR newbie,

Welcome to the crowd!

...stuff snipped...

> so when I give it the input
> 
> true && true
> 
> despite the fact that I get the following consle messages
> 
> line 1:5 no viable alternative at input '&&'
> line 0:-1 no viable alternative at input '<EOF>'
> 
> My method band() gets called with 2 Boolean, both set to true
> 
... more snipped, sorry, trying to trim to the essence of my reply...

> relExpr returns [Object value]
>      :   e=expr {$value = $e.value;}
>          (   '>' e=expr {$value = gt($value,$e.value);}
>          |   '<' e=expr {$value = lt($value,$e.value);}
>          |   '>=' e=expr {$value = gte($value,$e.value);}
>          |   '<=' e=expr {$value = lte($value,$e.value);}
>          |   '==' e=expr {$value = eq($value,$e.value);}
>          |   '!=' e=expr {$value = neq($value,$e.value);}
>          )
>      ;
> 

the second operand of relExpr is not optional. so `true` all by itself
is NOT a valid relExpr.

I think you want to add a `?` meta-operator to make the second operand
optional.

Hope this helps...
   -jbb



From gerald at certiv.net  Thu Mar 11 09:56:37 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 11 Mar 2010 09:56:37 -0800
Subject: [antlr-interest] Q re syntax for relative root for
	TreePatternMatcher
Message-ID: <4B992ED5.7070703@certiv.net>

Given an actual AST structure of

         ^(ROOT ^(PACKAGE ^(PACKAGENAME ID+)))

this tree pattern rule works as expected

         package : ^(PACKAGE ^(PACKAGENAME id+=ID+)) ;

and this works

         package : PACKAGE ;

However, this rule does not

         package : PACKAGE ^(PACKAGENAME id+=ID+) ;

Seems that it generates code that expects a flat structure:

                PACKAGE5 = (AstTree) match(input, PACKAGE, 
FOLLOW_PACKAGE_in_packageStatement162);
                 if (state.failed) return;
                 match(input, PACKAGENAME, 
FOLLOW_PACKAGENAME_in_packageStatement166);
                 if (state.failed) return;

                 match(input, Token.DOWN, null);
                 ...

Is this is intended behavior?

Thanks...

From parrt at cs.usfca.edu  Thu Mar 11 10:27:14 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 11 Mar 2010 10:27:14 -0800
Subject: [antlr-interest] Q re syntax for relative root for
	TreePatternMatcher
In-Reply-To: <4B992ED5.7070703@certiv.net>
References: <4B992ED5.7070703@certiv.net>
Message-ID: <58B8994D-DA83-4860-9C71-CD7EFFDB7B51@cs.usfca.edu>


On Mar 11, 2010, at 9:56 AM, Gerald Rosenberg wrote:

> Given an actual AST structure of
> 
>         ^(ROOT ^(PACKAGE ^(PACKAGENAME ID+)))
> 
> this tree pattern rule works as expected
> 
>         package : ^(PACKAGE ^(PACKAGENAME id+=ID+)) ;
> 
> and this works
> 
>         package : PACKAGE ;

that would only work as start rule i think.

> 
> However, this rule does not
> 
>         package : PACKAGE ^(PACKAGENAME id+=ID+) ;
> 
> Seems that it generates code that expects a flat structure:

that is a flat structure :)

A B is flat A=PACKAGE B=^(...)

Ter


From etheocha at staffmail.ed.ac.uk  Thu Mar 11 10:35:12 2010
From: etheocha at staffmail.ed.ac.uk (Elias Theocharopoulos)
Date: Thu, 11 Mar 2010 18:35:12 +0000
Subject: [antlr-interest] Associate .stg files
Message-ID: <4B9937E0.3030307@staffmail.ed.ac.uk>

Hello,

Am probably not the first one asking this but am really struggling to 
find the answer:

Am using the GUI of antrwolks to debug a grammar and I want somehow to 
associate a .stg file so that
I don't get the usual "Can't find template <...>".

Could you please help me do this?

thanks,
elias

-- 
The University of Edinburgh is a charitable body, registered in
Scotland, with registration number SC005336.


From gerald at certiv.net  Thu Mar 11 10:45:57 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 11 Mar 2010 10:45:57 -0800
Subject: [antlr-interest] Q re syntax for relative root for
	TreePatternMatcher
In-Reply-To: <58B8994D-DA83-4860-9C71-CD7EFFDB7B51@cs.usfca.edu>
References: <4B992ED5.7070703@certiv.net>
	<58B8994D-DA83-4860-9C71-CD7EFFDB7B51@cs.usfca.edu>
Message-ID: <4B993A65.30302@certiv.net>

On 3/11/2010 10:27 AM, Terence Parr wrote:
> On Mar 11, 2010, at 9:56 AM, Gerald Rosenberg wrote:
>
>    
>> Given an actual AST structure of
>>
>>          ^(ROOT ^(PACKAGE ^(PACKAGENAME ID+)))
>>
>> this tree pattern rule works as expected
>>
>>          package : ^(PACKAGE ^(PACKAGENAME id+=ID+)) ;
>>
>> and this works
>>
>>          package : PACKAGE ;
>>      
> that would only work as start rule i think.
>    
Well, it does work as a non-start rule, even if not intended.
>> However, this rule does not
>>
>>          package : PACKAGE ^(PACKAGENAME id+=ID+) ;
>>
>> Seems that it generates code that expects a flat structure:
>>      
> that is a flat structure :)
>
> A B is flat A=PACKAGE B=^(...)
>    
 From that perspective, but the code gets confused on the DOWN token.  
It is looking for

A=PACKAGE B=PACKAGENAME

but is actually finding

A=PACKAGE B=DOWN


From mehul_303 at yahoo.com  Thu Mar 11 15:08:41 2010
From: mehul_303 at yahoo.com (Mehul Thakkar)
Date: Thu, 11 Mar 2010 15:08:41 -0800 (PST)
Subject: [antlr-interest] Unsubscribe
In-Reply-To: <6225fd03088a0a4e8a3a04f5a2a7f6b7@temporal-wave.com>
Message-ID: <365138.31752.qm@web33301.mail.mud.yahoo.com>



--- On Tue, 3/9/10, Jim Idle <jimi at temporal-wave.com> wrote:

> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Using previously matched parser rule in decision making
> To: 
> Cc: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> Date: Tuesday, March 9, 2010, 11:30 AM
> >From anywhere in the parser:
> 
> java.util.List stack = getRuleInvocationStack(e,
> getParserName());
> 
> But this only works for Java and other targets that copy it
> (I think C# might do it). I don't do it in C because I
> prefer to take the view that the C stuff should be as close
> to the metal as it can be and the programmer will choose to
> add the overheads they need.
> 
> In the JavaFX front end, this stack is used to pin down
> errors a little more precisely - as it is open source you
> can download the code and look at
> AbstractGeneratedParserV4.java
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-
> > bounces at antlr.org]
> On Behalf Of Kieran Simpson
> > Sent: Tuesday, March 09, 2010 1:58 AM
> > To: Ron Burk
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Using previously matched
> parser rule in
> > decision making
> > 
> > I agree Ron.
> > 
> > Ron Burk wrote:
> > > It is an interesting idea for a top-down parser
> generator
> > > to just make the parsing stack of non-terminals
> available
> > > to user actions. Whether that's easy or hard
> depends on
> > > the details of how the tool generates parser
> code. But
> > > certainly knowing the context you expect to be in
> is
> > > arguably an advantage of top-down over bottom-up
> > > parsing, so there's an argument to be made for
> making
> > > that information available. As I struggle to
> think of
> > > common/practical use for it, mainly error
> reporting or
> > > recovery comes to mind. But, if the syntax made
> it
> > > easy to ask things like "is X on the stack", I
> suppose
> > > there are a variety of semantic checks that could
> be
> > > made clearer and simpler than via flags and such.
> E.g.
> > > checking that a 'break' keyword in C occurs
> within a
> > > do/for/switch/while.
> > >
> > > I usually try to do things in one pass, so it may
> be more
> > > interesting of an idea to me than to someone who
> intends
> > > to build a syntax tree first before doing any
> actual work.
> > >
> > > Dinking with syntax:
> > >
> > > A: B
> > > C: B
> > > B:
> > >? ???{ if($Stack[A])... else
> if($Stack[C])... else assert(FALSE); }
> > >
> > > or maybe (also?)
> > >
> > >? ???{
> if($Stack[-1]==$NonTerm[A]) ...; else ...; }
> > >
> > > or
> > >
> > > LoopStmt: Do | For | Switch | While ;
> > > ...
> > > BreakStmt: 'break'
> > >? ???{ if(!$Stack[LoopStmt])
> SynError("break is not inside
> > > do/for/switch/while.\n"); }
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > interest/your-email-address
> > >
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


      

From alvarocoronel67 at yahoo.com  Fri Mar 12 03:33:05 2010
From: alvarocoronel67 at yahoo.com (Alvaro Coronel)
Date: Fri, 12 Mar 2010 03:33:05 -0800 (PST)
Subject: [antlr-interest] NEWBIE ANTLRWorks question: Missing zeroes in input
Message-ID: <622585.20969.qm@web50807.mail.re2.yahoo.com>

Hello everyone. I am sorry to post which is probably a lame question, but have been pulling my hair over this one and still can't figure it out.

I wrote a grammar to parse a simple string that begins with a fixed preamble and contains hex characters, such as this one:


0009FFF6415049A0022B28CC901F414444D001000300060A900F6D00012232037B3808035906A49A10F981F5381B803B5A27D50CDE7F73AFBD

However, after pasting the string to use it as inputthis is what appears in the "Input" debug window:

0009FFF6415049A022B28CC901F414444D0103060A90F6D012232037B3808035906A49A10F981F5381B803B5A27D50CDE7F73AFBD

As you can see, sequences of zeroes have been "compressed" into one zero only. The leading ones are not, but that may be because of the definition of the grammar.

If I escape the zeroes preceding them with a "\" like so
0009FFF6415049A0\022B28CC901F414444D0\010\0\030\0\060A90\0F6D0\0\012232037B3808035906A49A10F981F5381B803B5A27D50CDE7F73AFBD
the string is shown correctly in the input window and the grammar works as (I) expect.

Please note that the zero-stripping appears in the input window, I don't see how this can be affected by the grammar.

Just in case I'll post it - sorry if it's messy, it's my first one.

Thanks very much in advance,
?lvaro

---------------------------------------------------------------------------
grammar GrammarLog;

tokens {
	REG7_TIPO='0007FFF8';
	REG9_TIPO='0009FFF6';	
}


log	:	(reg7|reg9)* EOF;

reg7: REG7_TIPO regbody7 crc16 {System.out.println("found register 7 "); };

regbody7: secuencial_registro numero_sam latitud longitud fecha_hora tipo_pto_not tipo_det_pto_not codigo_pto_not seq_sam sello_sam  {System.out.println("body: "); };				
reg9	:	 REG9_TIPO regbody9 crc16;

regbody9:	secuencial_registro numero_sam fecha_hora nro_boleto tipo_viaje tipo_dto tipo_tarifa parada_o parada_d ordinal_tramo cant_pasajeros latitud longitud importe seq_sam sello_sam ;

nro_boleto
	:	 bytes04;
tipo_viaje
	:	bytes04;
tipo_dto:	bytes02;	
tipo_tarifa
	:	bytes02;
parada_o:	bytes02;
parada_d:	bytes02;
ordinal_tramo
	:	byte01;
cant_pasajeros
	:	byte01;
importe	:	bytes02;			
crc16 	: bytes02 {System.out.println("CRC16 ->" + $bytes02.text); };

secuencial_registro 	: bytes04 {System.out.println("secuencial_registro ->" + $bytes04.text + " = " + Integer.decode("0x" + $bytes04.text)); };

numero_sam 	:	bytes02 {System.out.println("numero_sam ->" + $bytes02.text + " = " + Integer.decode("0x" + $bytes02.text)); };	
latitud :	bytes04 {System.out.println("latitud ->" + $bytes04.text ); };

longitud:	bytes04 {System.out.println("longitud ->" + $bytes04.text ); };

fecha_hora	:	bytes04 {System.out.println("fecha_hora ->" + $bytes04.text ); };

velocidad	:	byte01 {System.out.println("velocidad ->" + $byte01.text ); };	
seq_sam	:	bytes08 {System.out.println("seq_sam ->" + $bytes08.text ); };		
sello_sam	:	bytes08 {System.out.println("sello_sam ->" + $bytes08.text ); };			
tipo_pto_not	:	 byte01 {System.out.println("tipo_pto_not ->" + $byte01.text + " = " + Integer.decode("0x" + $byte01.text)); };	
tipo_det_pto_not	:	byte01 {System.out.println("tipo_det_pto_not ->" + $byte01.text  + " = " + Integer.decode("0x" + $byte01.text)); };	
codigo_pto_not	:	bytes02 {System.out.println("codigo_pto_not ->" + $bytes02.text ); };								

byte01	:(HEX_DIGIT HEX_DIGIT);

bytes02 :(HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT);

h4hex :(HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT);

bytes04 :(HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT);

bytes08 :(HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT);	
HEX_DIGIT : ('a'..'f'|'A'..'F'|'0'..'9');


      

From marcin.rzeznicki at gmail.com  Fri Mar 12 12:03:13 2010
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Fri, 12 Mar 2010 21:03:13 +0100
Subject: [antlr-interest] Java arrays in "returns" ?
Message-ID: <14799bf61003121203o16b9c3c3t271071092c1ebac4@mail.gmail.com>

Hi
I've got an awkward question. How can I return an array from rule?
"rule_name returns [Object[] sth] " obviously does not work because syntax
checker thinks that closing bracket of Object[] closes returns. I could not
find anywhere how to escape it. Thx for any help.

-- 
Greetings
Marcin Rze?nicki

From pchapin at cems.uvm.edu  Fri Mar 12 19:25:36 2010
From: pchapin at cems.uvm.edu (Peter C. Chapin)
Date: Fri, 12 Mar 2010 22:25:36 -0500
Subject: [antlr-interest] Building ANTLR v3.2 from source.
Message-ID: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>

Greetings!

I have this idea that I would try to add support to ANTLR for a new
target language (specifically Ada 2005). I'm not sure if this effort
will amount to anything or not, but I amused myself for a while this
evening by looking at the problem. According to what is says here

http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code
+generation+target

I got the impression I needed to be working inside a copy of ANTLR's
source code. Accordingly I downloaded the source distribution for ANTLR
3.2 and unpacked it. Seeing that Maven was required for the build I
downloaded and installed Maven 2.2.1 (I'm new to Maven, by the way).

Looking at the BUILD.txt file in the root of the source distribution I
tried running Maven directly at that level using the command


mvn -Dmaven.test.skip=true


Maven downloaded all sorts of goodies from various places and then I got
the following nasty result:


[INFO] Scanning for projects...                              
[INFO] Reactor build order:                                  
[INFO]   ANTLR Master build control POM                      
[INFO]   Antlr 3 Runtime                                     
[INFO]   ANTLR Grammar Tool                                  
[INFO]   Maven plugin for ANTLR V3                           
[INFO]   ANTLR gUnit                                         
[INFO]   Maven plugin for gUnit ANTLR V3                     
[INFO] ------------------------------------------------------------------------
[INFO] Building ANTLR Master build control POM                                 
[INFO]    task-segment: [install]                                              
[INFO] ------------------------------------------------------------------------
[INFO] [buildnumber:create {execution: default}]                               
[INFO] Storing buildNumber: Mar 12, 2010 22:16:44 at timestamp: 1268450204341  
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR                                                            
[INFO] ------------------------------------------------------------------------
[INFO] The scm url cannot be null.                                             
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.NullPointerException: The scm url cannot be null.


I tried a couple of variations such as running Maven in other locations.
I also tried the command


mvn -N install


at the top level. All of these commands produced essentially the same
result: A java.lang.NullPointerException with the message "The scm url
cannot be null."

I'm not sure what this means to me. I notice in the BUILD.txt file
references to the Perforce SCM system. I'm actually familiar with
Perforce (I use it with another project). Do I need to do something with
that? Is it possible for just anyone to read the ANTLR Perforce depot?
It might be nice in any case to follow the latest and greatest changes
as they happen.

Thanks for any advice you can give!

Peter


From jimi at temporal-wave.com  Fri Mar 12 20:12:56 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 12 Mar 2010 20:12:56 -0800
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>
Message-ID: <e90937734c5de14ba2984f1a159e4760@temporal-wave.com>

Please search the archive at antlr.markmail.org for the solution to this (which is fixed in the development branch).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Peter C. Chapin
> Sent: Friday, March 12, 2010 7:26 PM
> To: ANTLR Discussion List
> Subject: [antlr-interest] Building ANTLR v3.2 from source.
> 
> Greetings!
> 
> I have this idea that I would try to add support to ANTLR for a new
> target language (specifically Ada 2005). I'm not sure if this effort
> will amount to anything or not, but I amused myself for a while this
> evening by looking at the problem. According to what is says here
> 
> http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code
> +generation+target
> 
> I got the impression I needed to be working inside a copy of ANTLR's
> source code. Accordingly I downloaded the source distribution for ANTLR
> 3.2 and unpacked it. Seeing that Maven was required for the build I
> downloaded and installed Maven 2.2.1 (I'm new to Maven, by the way).
> 
> Looking at the BUILD.txt file in the root of the source distribution I
> tried running Maven directly at that level using the command
> 
> 
> mvn -Dmaven.test.skip=true
> 
> 
> Maven downloaded all sorts of goodies from various places and then I
> got
> the following nasty result:
> 
> 
> [INFO] Scanning for projects...
> [INFO] Reactor build order:
> [INFO]   ANTLR Master build control POM
> [INFO]   Antlr 3 Runtime
> [INFO]   ANTLR Grammar Tool
> [INFO]   Maven plugin for ANTLR V3
> [INFO]   ANTLR gUnit
> [INFO]   Maven plugin for gUnit ANTLR V3
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Building ANTLR Master build control POM
> [INFO]    task-segment: [install]
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] [buildnumber:create {execution: default}]
> [INFO] Storing buildNumber: Mar 12, 2010 22:16:44 at timestamp:
> 1268450204341
> [INFO] ----------------------------------------------------------------
> --------
> [ERROR] FATAL ERROR
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] The scm url cannot be null.
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Trace
> java.lang.NullPointerException: The scm url cannot be null.
> 
> 
> I tried a couple of variations such as running Maven in other
> locations.
> I also tried the command
> 
> 
> mvn -N install
> 
> 
> at the top level. All of these commands produced essentially the same
> result: A java.lang.NullPointerException with the message "The scm url
> cannot be null."
> 
> I'm not sure what this means to me. I notice in the BUILD.txt file
> references to the Perforce SCM system. I'm actually familiar with
> Perforce (I use it with another project). Do I need to do something
> with
> that? Is it possible for just anyone to read the ANTLR Perforce depot?
> It might be nice in any case to follow the latest and greatest changes
> as they happen.
> 
> Thanks for any advice you can give!
> 
> Peter
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From bkiers at gmail.com  Sat Mar 13 01:28:40 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 13 Mar 2010 10:28:40 +0100
Subject: [antlr-interest] Java arrays in "returns" ?
In-Reply-To: <14799bf61003121203o16b9c3c3t271071092c1ebac4@mail.gmail.com>
References: <14799bf61003121203o16b9c3c3t271071092c1ebac4@mail.gmail.com>
Message-ID: <af443a971003130128r2fb69286t240b8bcf08a6b5b7@mail.gmail.com>

2010/3/12 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>

> Hi
> I've got an awkward question. How can I return an array from rule?
> "rule_name returns [Object[] sth] " obviously does not work because syntax
> checker thinks that closing bracket of Object[] closes returns. I could not
> find anywhere how to escape it. Thx for any help.<http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>

This message from 2007 indicates it is not possible to have nested brackets
inside "rule return statements":
http://www.antlr.org/pipermail/antlr-interest/2007-March/019712.html
and AFAIK, this still is not possible.

You will have to do something like:

@parser::members {

  class Wrapper {

    String[] array;

    Wrapper(String[] a) {
      array = a;
    }
  }

}

parse
  :  rule {String s = $rule.wrapper.array[2];}
  ;

rule returns [Wrapper wrapper]
  :  ... {$wrapper = new Wrapper(new String[]{"a", "b", "c"});}
  ;


Regards,

Bart.

From markwright at internode.on.net  Sat Mar 13 03:27:52 2010
From: markwright at internode.on.net (Mark Wright)
Date: Sat, 13 Mar 2010 22:27:52 +1100
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>
References: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>
Message-ID: <20100313112752.GA2836@internode.on.net>

As Jim already answered, the solution is in the archives:

http://www.antlr.org/pipermail/antlr-interest/2009-December/037106.html

After applying that fix, for me it failed like:

[INFO] [plugin:descriptor {execution: default-descriptor}]
[INFO] Using 2 extractors.
[INFO] Applying extractor for language: java
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
[INFO] ------------------------------------------------------------------------
[INFO] Trace
com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
	at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:716)
	at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:826)
	at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:697)
	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
	at com.thoughtworks.qdox.JavaDocBuilder$1.visitFile(JavaDocBuilder.java:369)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:43)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.scan(DirectoryScanner.java:52)
	at com.thoughtworks.qdox.JavaDocBuilder.addSourceTree(JavaDocBuilder.java:366)
	at org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractor.discoverClasses(JavaMojoDescriptorExtractor.java:605)
	at org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractor.execute(JavaMojoDescriptorExtractor.java:572)
	at org.apache.maven.tools.plugin.scanner.DefaultMojoScanner.populatePluginDescriptor(DefaultMojoScanner.java:96)
	at org.apache.maven.plugin.plugin.AbstractGeneratorMojo.execute(AbstractGeneratorMojo.java:146)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5 minutes 27 seconds
[INFO] Finished at: Fri Mar 12 15:51:11 EST 2010
[INFO] Final Memory: 45M/373M
[INFO] ------------------------------------------------------------------------

Compilation exited abnormally with code 1 at Fri Mar 12 15:51:12

My fix for that was to rm the file it was complaining about:

rm /h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java

Then similar failures for more files, I rm'd these too:

com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3Mojo.java
com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/gunit-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._GUnitExecuteMojo.java
com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java

Then this failure:

[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] ANTLR ErrorManager panic
[INFO] ------------------------------------------------------------------------
[INFO] Trace
java.lang.Error: ANTLR ErrorManager panic
	at org.antlr.tool.ErrorManager.panic(ErrorManager.java:955)
	at org.antlr.tool.ErrorManager.setFormat(ErrorManager.java:465)
	at org.antlr.Tool.setMessageFormat(Tool.java:1222)
	at org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:336)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkProjectLifecycle(DefaultLifecycleExecutor.java:1205)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:1033)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:643)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:569)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:284)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 15 seconds
[INFO] Finished at: Fri Mar 12 16:11:10 EST 2010
[INFO] Final Memory: 40M/376M
[INFO] ------------------------------------------------------------------------

Compilation exited abnormally with code 1 at Fri Mar 12 16:11:10

--------------------------------------------------------------------------------

That is mentioned in BUILD.txt, just try it again, then it works.

Regards, Mark

From marcin.rzeznicki at gmail.com  Sat Mar 13 03:59:36 2010
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Sat, 13 Mar 2010 12:59:36 +0100
Subject: [antlr-interest] Java arrays in "returns" ?
In-Reply-To: <af443a971003130128r2fb69286t240b8bcf08a6b5b7@mail.gmail.com>
References: <14799bf61003121203o16b9c3c3t271071092c1ebac4@mail.gmail.com>
	<af443a971003130128r2fb69286t240b8bcf08a6b5b7@mail.gmail.com>
Message-ID: <14799bf61003130359wd667b9ax58090189ae3eb03@mail.gmail.com>

On Sat, Mar 13, 2010 at 10:28 AM, Bart Kiers <bkiers at gmail.com> wrote:

> 2010/3/12 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>
>
> > Hi
> > I've got an awkward question. How can I return an array from rule?
> > "rule_name returns [Object[] sth] " obviously does not work because
> syntax
> > checker thinks that closing bracket of Object[] closes returns. I could
> not
> > find anywhere how to escape it. Thx for any help.<
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
> >
>
> This message from 2007 indicates it is not possible to have nested brackets
> inside "rule return statements":
> http://www.antlr.org/pipermail/antlr-interest/2007-March/019712.html
> and AFAIK, this still is not possible.
>
>
>
Thanks, but this message seems to be outdated. I tried: returns[Object[\]
blah] and it seemed to be working (I am not 100% sure 'cause I got error
from somewhere else in my grammar and didn't have time to check it out)



-- 
Greetings
Marcin Rze?nicki

From pskswathy at gmail.com  Sat Mar 13 08:46:06 2010
From: pskswathy at gmail.com (swathy murthy)
Date: Sat, 13 Mar 2010 22:16:06 +0530
Subject: [antlr-interest] Fwd: passing arguments to the templates
In-Reply-To: <9362e74e1003072018w680883e4nea7002dab8bdd20a@mail.gmail.com>
References: <fa7ae3a11003041036w51051c5bl68c0ccc946442e6c@mail.gmail.com> 
	<9362e74e1003042214s194ffef5lecfa0c6b6daa2581@mail.gmail.com> 
	<fa7ae3a11003050907w15ab804gd377303cab378131@mail.gmail.com> 
	<fa7ae3a11003050908u2390ede2i7f67521453e3a18b@mail.gmail.com> 
	<9362e74e1003072018w680883e4nea7002dab8bdd20a@mail.gmail.com>
Message-ID: <fa7ae3a11003130846g2a4d7f3s385e792a10400a07@mail.gmail.com>

I have started using HashMap to track the variables. But, my problem
still remains the same. In my t.g grammar, if you look at the parser
rule

stat : ^(SAL_PROGRAM ^(DECLARATION specification_root)) ->
outer_template(var = {locals.get($LITERAL.text)});

I need to use a variable which is not mentioned in the rule. So, how
can I go about doing that. Its giving the error of not recognizing the
variable LITERAL. So, how can I make a reference. I have attached all
my modified grammars.

And, regarding the rules not emitting the tree nodes, could you please
point them out. If you are talking about expr, exp and term, they are
not disturbed to match the input and in tree grammar g, I have clubbed
them all. I know my grammar is a lot confusing. Its because of the
language I am working on and due to my lack of programming skills.
And, I have not pasted whole of my grammar. I have pasted only the
part I'm working on right now.
I did not understand following points mentioned:
a) why are you having two set of parser rules, one inside m.g and another
inside g.g
b) using literals inside parser grammar is not recommended
Would you be kind enough to explain me clearly.

Thanks a lot.
Swathy

On Mon, Mar 8, 2010 at 9:48 AM, Gokulakannan Somasundaram
<gokul007 at gmail.com> wrote:
> I haven't used much of tree grammar, but your stuff looks very confusing.
> a) why are you having two set of parser rules, one inside m.g and another
> inside g.g
> b) using literals inside parser grammar is not recommended
> c) i see only a hashmap declaration and i am not seeing the usage of it
> d) There are certain rules which are not emitting tree nodes, but they seem
> to be the important ones.
>
>
> Gokul.
>
> On Fri, Mar 5, 2010 at 10:38 PM, swathy murthy <pskswathy at gmail.com> wrote:
>>
>> Hi
>>
>> Actually, I tried using Hash Map long back. But, it did not work out.
>> And, the main thing is that I just need to store the name of the
>> variables. I do not need the values as I am not executing any actions
>> in the grammar. I am just using it as a language converter. Could
>> anyone please suggest me how to do that looking at my grammar files
>> which are attached.
>> m.g is the main grammar file from which I am creating a tree grammar
>> g.g and from the tree grammar, I am creating a template t.g.
>> And, also I need to generate some temporary variables automatically
>> based on number of input variables. Would it be possible to generate
>> variables automatically and store each variable as a template or using
>> hash map.
>>
>> Thanks.
>> Swathy
>>
>> On Fri, Mar 5, 2010 at 11:44 AM, Gokulakannan Somasundaram
>> <gokul007 at gmail.com> wrote:
>> > Keep track of things using a hashmap.
>> > insert into the hashmap at expr and retrieve them at stat and pass it to
>> > the
>> > template.
>> >
>> > Gokul.
>> >
>> >
>> > On Fri, Mar 5, 2010 at 12:06 AM, swathy murthy <pskswathy at gmail.com>
>> > wrote:
>> >>
>> >> Hi
>> >>
>> >> I have attached my grammar file and the template file. Now, I need to
>> >> pass the value of the LITERAL in the rule expr to outer_template() in
>> >> rule stat.
>> >> I am directly using outer_template(var={$LITERAL.text}) but this is
>> >> not working. It gives the error that it cannot find the symbol
>> >> LITERAL.text as it is not present in the rule stat. So, how should I
>> >> pass the argument to the template.
>> >> Help would be appreciated.
>> >>
>> >> Thanks a lot.
>> >> Swathy
>> >>
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>
>> >
>> >
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: g.g
Type: application/octet-stream
Size: 1207 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100313/dd9992f1/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: m.g
Type: application/octet-stream
Size: 1544 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100313/dd9992f1/attachment-0001.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Main.java
Type: application/octet-stream
Size: 2437 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100313/dd9992f1/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: t.g
Type: application/octet-stream
Size: 809 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100313/dd9992f1/attachment-0003.obj 

From jimi at temporal-wave.com  Sat Mar 13 09:23:42 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 13 Mar 2010 09:23:42 -0800
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <20100313112752.GA2836@internode.on.net>
Message-ID: <2e5ff5c1b705564f9fbeb68b35900b86@temporal-wave.com>

Please read the BUILD.txt that comes with the source.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mark Wright
> Sent: Saturday, March 13, 2010 3:28 AM
> To: Peter C. Chapin
> Cc: ANTLR Discussion List
> Subject: Re: [antlr-interest] Building ANTLR v3.2 from source.
> 
> As Jim already answered, the solution is in the archives:
> 
> http://www.antlr.org/pipermail/antlr-interest/2009-December/037106.html
> 
> After applying that fix, for me it failed like:
> 
> [INFO] [plugin:descriptor {execution: default-descriptor}]
> [INFO] Using 2 extractors.
> [INFO] Applying extractor for language: java
> [INFO] ----------------------------------------------------------------
> --------
> [ERROR] FATAL ERROR
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-
> 3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Trace
> com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
> file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> 	at
> com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:716)
> 	at
> com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:826)
> 	at
> com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:697)
> 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
> 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
> 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
> 	at
> com.thoughtworks.qdox.JavaDocBuilder$1.visitFile(JavaDocBuilder.java:36
> 9)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:43)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.scan(DirectorySc
> anner.java:52)
> 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSourceTree(JavaDocBuilder.java:
> 366)
> 	at
> org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtracto
> r.discoverClasses(JavaMojoDescriptorExtractor.java:605)
> 	at
> org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtracto
> r.execute(JavaMojoDescriptorExtractor.java:572)
> 	at
> org.apache.maven.tools.plugin.scanner.DefaultMojoScanner.populatePlugin
> Descriptor(DefaultMojoScanner.java:96)
> 	at
> org.apache.maven.plugin.plugin.AbstractGeneratorMojo.execute(AbstractGe
> neratorMojo.java:146)
> 	at
> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
> anager.java:490)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> tLifecycleExecutor.java:694)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
> cycle(DefaultLifecycleExecutor.java:556)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
> LifecycleExecutor.java:535)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
> eFailures(DefaultLifecycleExecutor.java:387)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
> (DefaultLifecycleExecutor.java:348)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
> cycleExecutor.java:180)
> 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
> 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
> 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
> 	at
> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
> va:39)
> 	at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
> rImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at
> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> 	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> 	at
> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> 	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Total time: 5 minutes 27 seconds
> [INFO] Finished at: Fri Mar 12 15:51:11 EST 2010
> [INFO] Final Memory: 45M/373M
> [INFO] ----------------------------------------------------------------
> --------
> 
> Compilation exited abnormally with code 1 at Fri Mar 12 15:51:12
> 
> My fix for that was to rm the file it was complaining about:
> 
> rm /h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> 
> Then similar failures for more files, I rm'd these too:
> 
> com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
> file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3Mojo.java
> com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
> file:/h/goanna/2/j/antlr/antlr-3.2/gunit-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._GUnitExecuteMojo.java
> com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
> file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> 
> Then this failure:
> 
> [ERROR] FATAL ERROR
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] ANTLR ErrorManager panic
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Trace
> java.lang.Error: ANTLR ErrorManager panic
> 	at org.antlr.tool.ErrorManager.panic(ErrorManager.java:955)
> 	at org.antlr.tool.ErrorManager.setFormat(ErrorManager.java:465)
> 	at org.antlr.Tool.setMessageFormat(Tool.java:1222)
> 	at org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:336)
> 	at
> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
> anager.java:490)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> tLifecycleExecutor.java:694)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
> cycle(DefaultLifecycleExecutor.java:556)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkProjectLifecycl
> e(DefaultLifecycleExecutor.java:1205)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(Defau
> ltLifecycleExecutor.java:1033)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> tLifecycleExecutor.java:643)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGo
> al(DefaultLifecycleExecutor.java:569)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
> LifecycleExecutor.java:539)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
> eFailures(DefaultLifecycleExecutor.java:387)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
> (DefaultLifecycleExecutor.java:284)
> 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
> cycleExecutor.java:180)
> 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
> 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
> 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
> 	at
> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
> va:39)
> 	at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
> rImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at
> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> 	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> 	at
> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> 	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> [INFO] ----------------------------------------------------------------
> --------
> [INFO] Total time: 15 seconds
> [INFO] Finished at: Fri Mar 12 16:11:10 EST 2010
> [INFO] Final Memory: 40M/376M
> [INFO] ----------------------------------------------------------------
> --------
> 
> Compilation exited abnormally with code 1 at Fri Mar 12 16:11:10
> 
> -----------------------------------------------------------------------
> ---------
> 
> That is mentioned in BUILD.txt, just try it again, then it works.
> 
> Regards, Mark
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From pchapin at cems.uvm.edu  Sat Mar 13 20:21:33 2010
From: pchapin at cems.uvm.edu (Peter C. Chapin)
Date: Sat, 13 Mar 2010 23:21:33 -0500
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <20100313112752.GA2836@internode.on.net>
References: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>
	<20100313112752.GA2836@internode.on.net>
Message-ID: <1268540493.9790.4.camel@dustdevil.cis.vtc.edu>

Yes, I'm seeing the same error you mentioned below (after applying the
fix at the link you mentioned). I don't know much about Maven, but what
exactly are these ._*.java files? I notice there are a lot of them. In
fact, it appears as if every source file has a corresponding ._*.java
file. I feel hesitant about deleting a file whose purpose I don't
understand.

Peter


On Sat, 2010-03-13 at 22:27 +1100, Mark Wright wrote:

> As Jim already answered, the solution is in the archives:
> 
> http://www.antlr.org/pipermail/antlr-interest/2009-December/037106.html
> 
> After applying that fix, for me it failed like:
> 
> [INFO] [plugin:descriptor {execution: default-descriptor}]
> [INFO] Using 2 extractors.
> [INFO] Applying extractor for language: java
> [INFO] ------------------------------------------------------------------------
> [ERROR] FATAL ERROR
> [INFO] ------------------------------------------------------------------------
> [INFO] syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> [INFO] ------------------------------------------------------------------------
> [INFO] Trace
> com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> 	at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:716)
> 	at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:826)
> 	at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:697)
> 	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
> 	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
> 	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
> 	at com.thoughtworks.qdox.JavaDocBuilder$1.visitFile(JavaDocBuilder.java:369)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:43)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.scan(DirectoryScanner.java:52)
> 	at com.thoughtworks.qdox.JavaDocBuilder.addSourceTree(JavaDocBuilder.java:366)
> 	at org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractor.discoverClasses(JavaMojoDescriptorExtractor.java:605)
> 	at org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractor.execute(JavaMojoDescriptorExtractor.java:572)
> 	at org.apache.maven.tools.plugin.scanner.DefaultMojoScanner.populatePluginDescriptor(DefaultMojoScanner.java:96)
> 	at org.apache.maven.plugin.plugin.AbstractGeneratorMojo.execute(AbstractGeneratorMojo.java:146)
> 	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
> 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
> 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
> 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
> 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
> 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
> 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
> 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
> 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
> 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
> 	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> 	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> 	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> 	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> [INFO] ------------------------------------------------------------------------
> [INFO] Total time: 5 minutes 27 seconds
> [INFO] Finished at: Fri Mar 12 15:51:11 EST 2010
> [INFO] Final Memory: 45M/373M
> [INFO] ------------------------------------------------------------------------



From markwright at internode.on.net  Sat Mar 13 21:37:36 2010
From: markwright at internode.on.net (Mark Wright)
Date: Sun, 14 Mar 2010 16:37:36 +1100
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <1268540493.9790.4.camel@dustdevil.cis.vtc.edu>
References: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>
	<20100313112752.GA2836@internode.on.net>
	<1268540493.9790.4.camel@dustdevil.cis.vtc.edu>
Message-ID: <20100314053736.GB2836@internode.on.net>

On Sat, Mar 13, 2010 at 11:21:33PM -0500, Peter C. Chapin wrote:
> Yes, I'm seeing the same error you mentioned below (after applying the
> fix at the link you mentioned). I don't know much about Maven, but what
> exactly are these ._*.java files? I notice there are a lot of them. In
> fact, it appears as if every source file has a corresponding ._*.java
> file. I feel hesitant about deleting a file whose purpose I don't
> understand.
> 
> Peter

I do not really know.  Section 8.5.3 of the book Maven: The Complete
Reference suggests that these ._*.java files are temporary files that
should not be in the antlr distribution anyway?

If you are concerned about deleting them, than another approach that
allows it to build is to mv them to another directory outside of the
directory where the antlr source code was extracted.

Thanks, Mark
 
> On Sat, 2010-03-13 at 22:27 +1100, Mark Wright wrote:
> 
> > As Jim already answered, the solution is in the archives:
> > 
> > http://www.antlr.org/pipermail/antlr-interest/2009-December/037106.html
> > 
> > After applying that fix, for me it failed like:
> > 
> > [INFO] [plugin:descriptor {execution: default-descriptor}]
> > [INFO] Using 2 extractors.
> > [INFO] Applying extractor for language: java
> > [INFO] ------------------------------------------------------------------------
> > [ERROR] FATAL ERROR
> > [INFO] ------------------------------------------------------------------------
> > [INFO] syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> > [INFO] ------------------------------------------------------------------------
> > [INFO] Trace
> > com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> > 	at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:716)
> > 	at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:826)
> > 	at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:697)
> > 	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
> > 	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
> > 	at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
> > 	at com.thoughtworks.qdox.JavaDocBuilder$1.visitFile(JavaDocBuilder.java:369)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:43)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectoryScanner.java:34)
> > 	at com.thoughtworks.qdox.directorywalker.DirectoryScanner.scan(DirectoryScanner.java:52)
> > 	at com.thoughtworks.qdox.JavaDocBuilder.addSourceTree(JavaDocBuilder.java:366)
> > 	at org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractor.discoverClasses(JavaMojoDescriptorExtractor.java:605)
> > 	at org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtractor.execute(JavaMojoDescriptorExtractor.java:572)
> > 	at org.apache.maven.tools.plugin.scanner.DefaultMojoScanner.populatePluginDescriptor(DefaultMojoScanner.java:96)
> > 	at org.apache.maven.plugin.plugin.AbstractGeneratorMojo.execute(AbstractGeneratorMojo.java:146)
> > 	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490)
> > 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694)
> > 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556)
> > 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535)
> > 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387)
> > 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348)
> > 	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180)
> > 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
> > 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
> > 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
> > 	at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
> > 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> > 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
> > 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
> > 	at java.lang.reflect.Method.invoke(Method.java:597)
> > 	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> > 	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> > 	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> > 	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> > [INFO] ------------------------------------------------------------------------
> > [INFO] Total time: 5 minutes 27 seconds
> > [INFO] Finished at: Fri Mar 12 15:51:11 EST 2010
> > [INFO] Final Memory: 45M/373M
> > [INFO] ------------------------------------------------------------------------
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From pchapin at cems.uvm.edu  Sun Mar 14 04:34:01 2010
From: pchapin at cems.uvm.edu (Peter C. Chapin)
Date: Sun, 14 Mar 2010 07:34:01 -0400
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <20100314053736.GB2836@internode.on.net>
References: <1268450736.3166.15.camel@dustdevil.cis.vtc.edu>
	<20100313112752.GA2836@internode.on.net>
	<1268540493.9790.4.camel@dustdevil.cis.vtc.edu>
	<20100314053736.GB2836@internode.on.net>
Message-ID: <1268566441.27317.4.camel@dustdevil.cis.vtc.edu>

On Sun, 2010-03-14 at 16:37 +1100, Mark Wright wrote:

> I do not really know.  Section 8.5.3 of the book Maven: The Complete
> Reference suggests that these ._*.java files are temporary files that
> should not be in the antlr distribution anyway?

I did a little looking around. These files are apparently Mac OSX
resource forks. They probably shouldn't be part of the source
distribution... especially considering that Maven chokes on some of them
(at least when using Linux... that's the platform I'm on).

I don't know why Maven is looking at them. Perhaps it's because they
have names ending with .java. In that case, I don't know why Maven
doesn't object to all of them. They aren't Java files, after all.

Anyway I'm convinced they are not necessary. I'll probably write a
script that removes them all.

Peter



From jimi at temporal-wave.com  Sun Mar 14 09:14:45 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 14 Mar 2010 09:14:45 -0700
Subject: [antlr-interest] Building ANTLR v3.2 from source.
In-Reply-To: <20100314053736.GB2836@internode.on.net>
Message-ID: <78d7413804fc74438ccdcb837a659c86@temporal-wave.com>

They should not be there and I thought they had been removed from the download tar. I think it is just something that happens on certain platforms. 

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mark Wright
> Sent: Saturday, March 13, 2010 9:38 PM
> To: Peter C. Chapin
> Cc: ANTLR Discussion List
> Subject: Re: [antlr-interest] Building ANTLR v3.2 from source.
> 
> On Sat, Mar 13, 2010 at 11:21:33PM -0500, Peter C. Chapin wrote:
> > Yes, I'm seeing the same error you mentioned below (after applying
> the
> > fix at the link you mentioned). I don't know much about Maven, but
> what
> > exactly are these ._*.java files? I notice there are a lot of them.
> In
> > fact, it appears as if every source file has a corresponding ._*.java
> > file. I feel hesitant about deleting a file whose purpose I don't
> > understand.
> >
> > Peter
> 
> I do not really know.  Section 8.5.3 of the book Maven: The Complete
> Reference suggests that these ._*.java files are temporary files that
> should not be in the antlr distribution anyway?
> 
> If you are concerned about deleting them, than another approach that
> allows it to build is to mv them to another directory outside of the
> directory where the antlr source code was extracted.
> 
> Thanks, Mark
> 
> > On Sat, 2010-03-13 at 22:27 +1100, Mark Wright wrote:
> >
> > > As Jim already answered, the solution is in the archives:
> > >
> > > http://www.antlr.org/pipermail/antlr-interest/2009-
> December/037106.html
> > >
> > > After applying that fix, for me it failed like:
> > >
> > > [INFO] [plugin:descriptor {execution: default-descriptor}]
> > > [INFO] Using 2 extractors.
> > > [INFO] Applying extractor for language: java
> > > [INFO] ------------------------------------------------------------
> ------------
> > > [ERROR] FATAL ERROR
> > > [INFO] ------------------------------------------------------------
> ------------
> > > [INFO] syntax error @[1,9] in file:/h/goanna/2/j/antlr/antlr-
> 3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> > > [INFO] ------------------------------------------------------------
> ------------
> > > [INFO] Trace
> > > com.thoughtworks.qdox.parser.ParseException: syntax error @[1,9] in
> file:/h/goanna/2/j/antlr/antlr-3.2/antlr3-maven-
> plugin/src/main/java/org/antlr/mojo/antlr3/._Antlr3ErrorLog.java
> > > 	at
> com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:716)
> > > 	at
> com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:826)
> > > 	at
> com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:697)
> > > 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
> > > 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
> > > 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
> > > 	at
> com.thoughtworks.qdox.JavaDocBuilder$1.visitFile(JavaDocBuilder.java:36
> 9)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:43)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.walk(DirectorySc
> anner.java:34)
> > > 	at
> com.thoughtworks.qdox.directorywalker.DirectoryScanner.scan(DirectorySc
> anner.java:52)
> > > 	at
> com.thoughtworks.qdox.JavaDocBuilder.addSourceTree(JavaDocBuilder.java:
> 366)
> > > 	at
> org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtracto
> r.discoverClasses(JavaMojoDescriptorExtractor.java:605)
> > > 	at
> org.apache.maven.tools.plugin.extractor.java.JavaMojoDescriptorExtracto
> r.execute(JavaMojoDescriptorExtractor.java:572)
> > > 	at
> org.apache.maven.tools.plugin.scanner.DefaultMojoScanner.populatePlugin
> Descriptor(DefaultMojoScanner.java:96)
> > > 	at
> org.apache.maven.plugin.plugin.AbstractGeneratorMojo.execute(AbstractGe
> neratorMojo.java:146)
> > > 	at
> org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginM
> anager.java:490)
> > > 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defaul
> tLifecycleExecutor.java:694)
> > > 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLife
> cycle(DefaultLifecycleExecutor.java:556)
> > > 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Default
> LifecycleExecutor.java:535)
> > > 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandl
> eFailures(DefaultLifecycleExecutor.java:387)
> > > 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments
> (DefaultLifecycleExecutor.java:348)
> > > 	at
> org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLife
> cycleExecutor.java:180)
> > > 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328)
> > > 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138)
> > > 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:362)
> > > 	at
> org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60)
> > > 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> > > 	at
> sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.ja
> va:39)
> > > 	at
> sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccesso
> rImpl.java:25)
> > > 	at java.lang.reflect.Method.invoke(Method.java:597)
> > > 	at
> org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
> > > 	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
> > > 	at
> org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
> > > 	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
> > > [INFO] ------------------------------------------------------------
> ------------
> > > [INFO] Total time: 5 minutes 27 seconds
> > > [INFO] Finished at: Fri Mar 12 15:51:11 EST 2010
> > > [INFO] Final Memory: 45M/373M
> > > [INFO] ------------------------------------------------------------
> ------------
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ketancmaheshwari at gmail.com  Mon Mar 15 01:47:22 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Mon, 15 Mar 2010 09:47:22 +0100
Subject: [antlr-interest] using the generatred parser and lexer classes
Message-ID: <8e487b941003150147x3b75af4ay8adafc0b4e23b1a7@mail.gmail.com>

Hello Friends

While looking at the ways I can use the generated Lexer and Parser classes
of my grammar I stumbled thru this page:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=789

It says that we can use the parser something like this:

RuleReturnScope result = parser.compilationUnit();

But, on my Parser class I do not see any method that really returns result
of this type.

All my methods for the grammar rules are simply void. panic!

Am I missing anything here?

Many thanks!
Ketan

From jmchuma at gmail.com  Mon Mar 15 03:37:25 2010
From: jmchuma at gmail.com (=?UTF-8?Q?Jose_Mar=C3=ADa_Chumo_Mata?=)
Date: Mon, 15 Mar 2010 11:37:25 +0100
Subject: [antlr-interest] using the generatred parser and lexer classes
In-Reply-To: <8e487b941003150147x3b75af4ay8adafc0b4e23b1a7@mail.gmail.com>
References: <8e487b941003150147x3b75af4ay8adafc0b4e23b1a7@mail.gmail.com>
Message-ID: <5fc92f921003150337p28d611f2m5f8f0c42eebe1963@mail.gmail.com>

Hello there.

I've not been usign ANTLR for a long time so maybe I'm wrong but I
think you looked at the lexer. As far as I know, the parser rules
always return something. The return type for each method correspondig
to a rule in the parser is a inner class of the generated parser.
Let's say you declared the rule parserRule in the parser MyParser. The
get the result from parsing a file starting from that rule you do
something like this:
MyParser.parserRule_return result = parser.parserRule();

Hope this helps.
Regards

On Mon, Mar 15, 2010 at 09:47, Ketan Maheshwari
<ketancmaheshwari at gmail.com> wrote:
> Hello Friends
>
> While looking at the ways I can use the generated Lexer and Parser classes
> of my grammar I stumbled thru this page:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=789
>
> It says that we can use the parser something like this:
>
> RuleReturnScope result = parser.compilationUnit();
>
> But, on my Parser class I do not see any method that really returns result
> of this type.
>
> All my methods for the grammar rules are simply void. panic!
>
> Am I missing anything here?
>
> Many thanks!
> Ketan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From alvarocoronel67 at yahoo.com  Mon Mar 15 05:26:16 2010
From: alvarocoronel67 at yahoo.com (Alvaro Coronel)
Date: Mon, 15 Mar 2010 05:26:16 -0700 (PDT)
Subject: [antlr-interest] Strange behaviour - pls help.
Message-ID: <955941.87148.qm@web50802.mail.re2.yahoo.com>

Here's a problem I am having and can't figure out: I am trying to parse a hexadecimal string and zeroes

I build a very small example to highlight what the problem is.

Suppose an elemental log file for your check account. It just has credits and debits. Debits are identified by a prelude of '0001' and credits by '0002' Then comes the amount, up to $ 65535.


We make a modest start with a $100 credit and a $50 debit. So our log is '0001006400020030'

But the input window shows 0001064000103, some zeroes are missing - which of course is not what we want.

If we try with a $ 4369 deposit, the log is 0001111100020030.

Now the input window shows 0001111100010030. The credit is not altered, the debit is still losing zeroes.

My question is ?Why do the zeroes get this "special treatment"? ?How can I avoid it or work around it?


I would really appreciate either an explanation or some pointers to learn what is wrong here. I don't mind studying and learning, but need some help because I haven't been able to figure it out or to find an explanation.

Thank you very much in advance, your help will be greatly appreciated
?lvaro.




P.S. I know this particular example can be easily solved using regular expressions. I just built this toy example to show how zeroes disappear from the input. I don't want to escape them with '\' symbols.


      

From ketancmaheshwari at gmail.com  Mon Mar 15 05:44:23 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Mon, 15 Mar 2010 13:44:23 +0100
Subject: [antlr-interest] using the generatred parser and lexer classes
In-Reply-To: <5fc92f921003150337p28d611f2m5f8f0c42eebe1963@mail.gmail.com>
References: <8e487b941003150147x3b75af4ay8adafc0b4e23b1a7@mail.gmail.com>
	<5fc92f921003150337p28d611f2m5f8f0c42eebe1963@mail.gmail.com>
Message-ID: <8e487b941003150544m1c06e192mbd5043337a213a6c@mail.gmail.com>

Hello Jose

Thanks for your reply.

Yes, after putting the option output=AST, i got the result as you
mentioned.

But now i have another issue. The program never returns from the line where
we create an instance of the parser :

gscriptParser g = new gscriptParser(tokens,49100,null);


Thanks for any inputs
Ketan

2010/3/15 Jose Mar?a Chumo Mata <jmchuma at gmail.com>

> Hello there.
>
> I've not been usign ANTLR for a long time so maybe I'm wrong but I
> think you looked at the lexer. As far as I know, the parser rules
> always return something. The return type for each method correspondig
> to a rule in the parser is a inner class of the generated parser.
> Let's say you declared the rule parserRule in the parser MyParser. The
> get the result from parsing a file starting from that rule you do
> something like this:
> MyParser.parserRule_return result = parser.parserRule();
>
> Hope this helps.
> Regards
>
> On Mon, Mar 15, 2010 at 09:47, Ketan Maheshwari
> <ketancmaheshwari at gmail.com> wrote:
> > Hello Friends
> >
> > While looking at the ways I can use the generated Lexer and Parser
> classes
> > of my grammar I stumbled thru this page:
> >
> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=789
> >
> > It says that we can use the parser something like this:
> >
> > RuleReturnScope result = parser.compilationUnit();
> >
> > But, on my Parser class I do not see any method that really returns
> result
> > of this type.
> >
> > All my methods for the grammar rules are simply void. panic!
> >
> > Am I missing anything here?
> >
> > Many thanks!
> > Ketan
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From thikone at gmail.com  Mon Mar 15 06:25:50 2010
From: thikone at gmail.com (Andrew Haritonkin)
Date: Mon, 15 Mar 2010 14:25:50 +0100
Subject: [antlr-interest] Gated semantic predicates - performance problem
Message-ID: <a382aa011003150625y198dc82chbab212ff4ce9096c@mail.gmail.com>

Hello everyone,

While writing grammar for PL/SQL I have encountered a problem with
performance of generated code.

There is a need to direct parser to one rule or to another depending
on history of visited rules. So, that means dynamically switching on
and off some subrules - means gated semantic predicates. The current
implementation which I have and which performs rather slow can be
sketched like this:


sql_condition
		@init { is_sql = true; is_cond = true; }
	:	condition_or
	;

plsql_condition
		@init { is_sql = false; is_cond = true; }
	:	condition_or
	;

condition_or
	:	condition_and ( ( 'OR' )=> 'OR' condition_and )*
	;

condition_and
	:	condition_not ( ( 'AND' )=> 'AND' condition_not )*
	;

condition_not
	:	( 'NOT' )? condition_is
	;

plsql_expression
		@init { is_sql = false; is_cond = false; }
	:	condition_or
	;

expression_add
	:	expression_mul ( ( PLUS | MINUS | DOUBLEVERTBAR ) expression_mul )*
	;

expression_mul
	:	expression_sign ( ( ASTERISK | DIVIDE ) expression_sign )*
	;

expression_sign
	:	( PLUS | MINUS )? expression_expr
	;

expression_expr
	:	QUOTED_STRING
	|	NUMBER
	|	'NULL'
	|	identifier
	| 	{ !is_sql }?=> ( 'SQL' | 'EXISTS' | 'PRIOR' | 'DELETE' )
	|	( LPAREN )=> LPAREN expression_par RPAREN
	;

expression_par
	options { k=0; }
	:	{  is_cond }?=> condition_or
	|	{ !is_cond }?=> expression_add
	;


The switching between rules is done in expression_par rule. If it
started as condition then it should recurs in condition top rule
condition_or, otherwise it's an expression and we should go to
expression_add.

Parser works fine, it takes the right path in all my tests.
Performance, however, has dropped 5 times because of this switching in
expression_par and in other rules similar to it. While it's obvious
from exclusive predicates which rule to take, ANTLR generates code
which first tries to predict which alternative to take and then
additionally applies condition from predicates. In this case, to
predict which of two nearly equal ways to take is not an easy task.
Moreover, generate DFA code looks very ineffective (note huge
conditions in if statements which have to be evaluated at run-time):


    protected internal int DFA23_SpecialStateTransition(DFA dfa, int
s, IIntStream _input) //throws NoViableAltException
    {
            ITokenStream input = (ITokenStream)_input;
    	int _s = s;
        switch ( s )
        {
               	case 0 :
                   	int LA23_0 = input.LA(1);

                   	
                   	int index23_0 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( ((LA23_0 >= PLUS && LA23_0 <= MINUS)) && (((
!is_cond )|| (  is_cond ))) ) { s = 1; }

                   	else if ( (LA23_0 == QUOTED_STRING) && (((
!is_cond )|| (  is_cond ))) ) { s = 2; }

                   	else if ( (LA23_0 == NUMBER) && ((( !is_cond )|| (
 is_cond ))) ) { s = 3; }

                   	else if ( (LA23_0 == 55) && ((( !is_cond )|| (
is_cond ))) ) { s = 4; }

                   	else if ( ((LA23_0 >= ID && LA23_0 <=
DOUBLEQUOTED_STRING)) && ((( !is_cond )|| (  is_cond ))) ) { s = 5; }

                   	else if ( (LA23_0 == 62) && (((( !is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((  is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((  is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((  is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((  is_cond ) && (
!is_sql ))|| (( !is_cond ) && ( !is_sql ))|| (( !is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((  is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| (( !is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| (( !is_cond ) && (
!is_sql ))|| ((  is_cond ) && ( !is_sql ))|| (  is_cond )|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql )))) ) { s = 6; }

                   	else if ( (LA23_0 == LPAREN) && ((( !is_cond )|| (
 is_cond ))) ) { s = 7; }

                   	else if ( (LA23_0 == 53 || (LA23_0 >= 59 && LA23_0
<= 61)) && ((  is_cond )) ) { s = 8; }

                   	else if ( ((LA23_0 >= 63 && LA23_0 <= 64)) && ((((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| (( !is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
!is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql ))|| ((
is_cond ) && ( !is_sql ))|| ((  is_cond ) && ( !is_sql )))) ) { s =
10; }

                   	
                   	input.Seek(index23_0);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 1 :
                   	int LA23_1 = input.LA(1);

                   	
                   	int index23_1 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( (( !is_cond )) ) { s = 11; }

                   	else if ( ((  is_cond )) ) { s = 8; }

                   	
                   	input.Seek(index23_1);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 2 :
                   	int LA23_2 = input.LA(1);

                   	
                   	int index23_2 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( (( !is_cond )) ) { s = 11; }

                   	else if ( ((  is_cond )) ) { s = 8; }

                   	
                   	input.Seek(index23_2);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 3 :
                   	int LA23_3 = input.LA(1);

                   	
                   	int index23_3 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( (( !is_cond )) ) { s = 11; }

                   	else if ( ((  is_cond )) ) { s = 8; }

                   	
                   	input.Seek(index23_3);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 4 :
                   	int LA23_4 = input.LA(1);

                   	
                   	int index23_4 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( (( !is_cond )) ) { s = 11; }

                   	else if ( ((  is_cond )) ) { s = 8; }

                   	
                   	input.Seek(index23_4);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 5 :
                   	int LA23_5 = input.LA(1);

                   	
                   	int index23_5 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( (( !is_cond )) ) { s = 11; }

                   	else if ( ((  is_cond )) ) { s = 8; }

                   	
                   	input.Seek(index23_5);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 6 :
                   	int LA23_6 = input.LA(1);

                   	
                   	int index23_6 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( ((( !is_cond ) && ( !is_sql ))) ) { s = 11; }

                   	else if ( ((((  is_cond ) && ( !is_sql ))|| (
is_cond ))) ) { s = 8; }

                   	
                   	input.Seek(index23_6);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 7 :
                   	int LA23_7 = input.LA(1);

                   	
                   	int index23_7 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( (( !is_cond )) ) { s = 11; }

                   	else if ( ((  is_cond )) ) { s = 8; }

                   	
                   	input.Seek(index23_7);
                   	if ( s >= 0 ) return s;
                   	break;
               	case 8 :
                   	int LA23_10 = input.LA(1);

                   	
                   	int index23_10 = input.Index();
                   	input.Rewind();
                   	s = -1;
                   	if ( ((( !is_cond ) && ( !is_sql ))) ) { s = 11; }

                   	else if ( (((  is_cond ) && ( !is_sql ))) ) { s = 8; }

                   	
                   	input.Seek(index23_10);
                   	if ( s >= 0 ) return s;
                   	break;
        }
        if (state.backtracking > 0) {state.failed = true; return -1;}
        NoViableAltException nvae23 =
            new NoViableAltException(dfa.Description, 23, _s, input);
        dfa.Error(nvae23);
        throw nvae23;
    }

I attached the grammar file from which it was generated in case it is needed.

I tried a lot of things, changing predicates type, covering only one
alternative with predicate, adding option k=1 and k=0 without any
significant improvement. So far the best result gives manual
replacement of DFA Predict method call in the generated code for this
rule:

    public expression_par()
    {
            alt23 = dfa23.Predict(input);
            switch (alt23)
            {
                case 1 :
                    // PLSQL3.g:170:4: {!is_cond}? => expression_list
                ...
                case 2 :
                    // PLSQL3.g:171:4: {is_cond}? => condition_list
                ...
            }
    ...
    }

with simple expression:

    public expression_par()
    {
            alt23 = is_cond ? 2 : 1;
            switch (alt23)
            {
                case 1 :
                    // PLSQL3.g:170:4: {!is_cond}? => expression_list
                ...
                case 2 :
                    // PLSQL3.g:171:4: {is_cond}? => condition_list
                ...
            }
    ...
    }

Manually amended parser performs about 5 times faster on my test
input. Another approach would be to have two separate brunches to
avoid switching but that is not a nice solution. Perhaps there is a
problem in the grammar, but I wasn't able to find it so far.

Do I use predicates right or is there another way to achieve rule
switching and run-time?

Thanks,
Andrew
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PLSQL3.g
Type: application/octet-stream
Size: 5100 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100315/b600fa55/attachment.obj 

From marcin.rzeznicki at gmail.com  Mon Mar 15 08:46:02 2010
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Mon, 15 Mar 2010 16:46:02 +0100
Subject: [antlr-interest] Gated semantic predicates - performance problem
In-Reply-To: <a382aa011003150625y198dc82chbab212ff4ce9096c@mail.gmail.com>
References: <a382aa011003150625y198dc82chbab212ff4ce9096c@mail.gmail.com>
Message-ID: <14799bf61003150846w8696688h78aeecbaf1a0cfbe@mail.gmail.com>

On Mon, Mar 15, 2010 at 2:25 PM, Andrew Haritonkin <thikone at gmail.com>wrote:

> Hello everyone,
>
> While writing grammar for PL/SQL I have encountered a problem with
> performance of generated code.
>
>
Hi Andrew,
First of all - I am not sure why do you need predicates in this part of your
grammar. In case you haven't got an ambiguity, and I can't spot it in your
grammar, predicates are not needed at all. They could help if, let's say, OR
could be unary, where parser could not by itself decide whether 'OR' in:
condition_and OR condition_and  means binary or unary OR (assuming unary OR
exists and you have somewhere construct that chains conditions together).
Perhaps I am missing something so please clarify.

On the other hand, the quality of code generated by ANTLR is very low. I
have long stopped using generated code "as is" and perform various
"amendments" manually, which is painful if you care for automated build
process. It can be argued that you do not need maintainable code with parser
generator, but I suppose that not only maintainability, but also performance
suffers due to lousy code generation. Counter-argument that ANTLR code-gen
is supposed to be human-readable fails miserably with invention of clever
DFAs state encoding scheme. My favorite example is:

if ((LA6_0 == '\t' || (LA6_0 >= ' ' && LA6_0 <= '$')
|| (LA6_0 >= '&' && LA6_0 <= '~')
|| (LA6_0 >= '\u00A0' && LA6_0 <= '\uD7FF') || (LA6_0 >= '\uDC00' && LA6_0
<= '\uFFFF'))) {
alt6 = 1;
} else if (((LA6_0 >= '\uD800' && LA6_0 <= '\uDBFF'))) {
alt6 = 2;
} else {
NoViableAltException nvae = new NoViableAltException(
"",
6,
0,
input);

throw nvae;
}

which is followed, within the same method, just two lines below, by:

if (input.LA(1) == '\t'
|| (input.LA(1) >= ' ' && input.LA(1) <= '$')
|| (input.LA(1) >= '&' && input.LA(1) <= '~')
|| (input.LA(1) >= '\u00A0' && input.LA(1) <= '\uD7FF')
|| (input.LA(1) >= '\uDC00' && input.LA(1) <= '\uFFFF')) {
input.consume();

}

Let's hope that JIT can eliminate common input.LA(1) calls, but I wouldn't
count on it.
Parser code also suffers from mess of unread yet initialized variables which
may significantly raise GC pressure and lower performance due to constant
creation of unneeded objects (possibly eliminated by Escape Analysis ?).
Also, tons of unneeded null checks, static inner classes that can be
eliminated or merged (DFAs also rule results sometimes) add up to the
overall picture. I really hope some of this problems will be fixed with new
releases and I keep my fingers crossed.


-- 
Greetings
Marcin Rze?nicki

From kcarroll at signmgmt.com  Mon Mar 15 09:34:43 2010
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Mon, 15 Mar 2010 11:34:43 -0500
Subject: [antlr-interest] CSharp3 Target (ANTLR 3.2)
Message-ID: <80A5CDD2686EA042AE41C526324D44557743629D6D@EXCHANGE2007.signmgmt.local>

What is the "official" status of C# port of ANTLR 3.2 (i.e., language=CSharp3)?  Several of the new features of 3.2 are utilized quite a bit in "Language Implementation Patterns".  Most importantly, tree rewriting.

I have been using Sam Harwell's stand-alone Windows port of ANTLR 3.2 with success (after a few tweaks to unify member name capitalization and a correction to the ApplyOnce method to bring it up-to-date with the Java version).  The only true problem is that I would really love to use my ANTLR-generated parser in conjunction with Actipro Software's SyntaxEditor, but they only currently support the CSharp2 target (understandably).

Thanks for any info,
Kevin Carroll

From parrt at cs.usfca.edu  Mon Mar 15 09:58:46 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 15 Mar 2010 09:58:46 -0700
Subject: [antlr-interest] Gated semantic predicates - performance problem
In-Reply-To: <a382aa011003150625y198dc82chbab212ff4ce9096c@mail.gmail.com>
References: <a382aa011003150625y198dc82chbab212ff4ce9096c@mail.gmail.com>
Message-ID: <D685BD22-976D-437B-9B3B-ADA11690EDA1@cs.usfca.edu>

yikes. adding bug

http://www.antlr.org/jira/browse/ANTLR-430

Ter


From espina.edgar at gmail.com  Mon Mar 15 11:45:16 2010
From: espina.edgar at gmail.com (Edgar Espina)
Date: Mon, 15 Mar 2010 15:45:16 -0300
Subject: [antlr-interest] ANTLR IDE and Eclipse 3.3 users
Message-ID: <92b42db61003151145p49fe3339nbf8a1770b47d65b4@mail.gmail.com>

Hi,

 The next release of ANTLR IDE wont run over Eclipse 3.3 anymore (Eclipse
Europa). Until now ANTLR IDE runs over Eclipse 3.3 or higher, is there
anyone using Eclipse 3.3?

Thanks,
-- 
edgar

From marcin.rzeznicki at gmail.com  Mon Mar 15 12:19:30 2010
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Mon, 15 Mar 2010 20:19:30 +0100
Subject: [antlr-interest] ANTLR IDE and Eclipse 3.3 users
In-Reply-To: <92b42db61003151145p49fe3339nbf8a1770b47d65b4@mail.gmail.com>
References: <92b42db61003151145p49fe3339nbf8a1770b47d65b4@mail.gmail.com>
Message-ID: <14799bf61003151219m2b456c98hbde004394d03cb2a@mail.gmail.com>

On Mon, Mar 15, 2010 at 7:45 PM, Edgar Espina <espina.edgar at gmail.com>wrote:

> Hi,
>
>  The next release of ANTLR IDE wont run over Eclipse 3.3 anymore (Eclipse
> Europa). Until now ANTLR IDE runs over Eclipse 3.3 or higher, is there
> anyone using Eclipse 3.3?
>


Not me.
Bugs I reported are still unassigned ;-) How is bug-fixing going? :-))))


-- 
Greetings
Marcin Rze?nicki

From db19606 at gmail.com  Mon Mar 15 13:00:59 2010
From: db19606 at gmail.com (Dan Becker)
Date: Mon, 15 Mar 2010 14:00:59 -0600
Subject: [antlr-interest] How to get ANTLR 3.2 to exit upon first error?
Message-ID: <3bf9a6471003151300p16d1fbd7mdfa88a08376194c@mail.gmail.com>

In section 10.4, The Definitive ANTLR reference tells you to override
mismatch() & recoverFromMismatchedSet() if you want to exit upon the
first parsing error. But, at least in ANTLR 3.2, it appears that there
is no mismatch() method, and the recoverFromMismatchedSet()
documentation says that it is "Not Currently Used". So it appears
things have changed since the book was published.

What am I supposed to do instead to exit upon the first parsing error
in ANTLR 3.2?

Thanks,

Dan
-- 
Dan Becker

From thikone at gmail.com  Mon Mar 15 13:19:18 2010
From: thikone at gmail.com (Andrew Haritonkin)
Date: Mon, 15 Mar 2010 21:19:18 +0100
Subject: [antlr-interest] Gated semantic predicates - performance problem
In-Reply-To: <14799bf61003150846w8696688h78aeecbaf1a0cfbe@mail.gmail.com>
References: <a382aa011003150625y198dc82chbab212ff4ce9096c@mail.gmail.com>
	<14799bf61003150846w8696688h78aeecbaf1a0cfbe@mail.gmail.com>
Message-ID: <a382aa011003151319q36553471i20ac6407161a9a68@mail.gmail.com>

2010/3/15 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>:
>
>
> On Mon, Mar 15, 2010 at 2:25 PM, Andrew Haritonkin <thikone at gmail.com>
> wrote:
>>
>> Hello everyone,
>>
>> While writing grammar for PL/SQL I have encountered a problem with
>> performance of generated code.
>>
>
> Hi Andrew,
> First of all - I am not sure why do you need predicates in this part of your
> grammar. In case you haven't got an ambiguity, and I can't spot it in your
> grammar, predicates are not needed at all. They could help if, let's say, OR
> could be unary, where parser could not by itself decide whether 'OR' in:
> condition_and OR condition_and ?means binary or unary OR (assuming?unary OR
> exists and you have somewhere construct that chains conditions together).
> Perhaps I am missing something so please clarify.
> On the other hand, the quality of code generated by ANTLR is very low. I
> have long stopped using generated code "as is" and perform various
> "amendments" manually, which is painful if you care for automated build
> process. It can be argued that you do not need maintainable code with parser
> generator, but I suppose that not only maintainability, but also performance
> suffers due to lousy code generation. Counter-argument that ANTLR code-gen
> is supposed to be human-readable fails miserably with invention of clever
> DFAs state encoding scheme. My favorite example is:
> if ((LA6_0 == '\t' || (LA6_0 >= ' ' && LA6_0 <= '$')
> || (LA6_0 >= '&' && LA6_0 <= '~')
> || (LA6_0 >= '\u00A0' && LA6_0 <= '\uD7FF') || (LA6_0 >= '\uDC00' && LA6_0
> <= '\uFFFF'))) {
> alt6 = 1;
> } else if (((LA6_0 >= '\uD800' && LA6_0 <= '\uDBFF'))) {
> alt6 = 2;
> } else {
> NoViableAltException nvae = new NoViableAltException(
> "",
> 6,
> 0,
> input);
> throw nvae;
> }
> which is followed, within the same method, just two lines below, by:
> if (input.LA(1) == '\t'
> || (input.LA(1) >= ' ' && input.LA(1) <= '$')
> || (input.LA(1) >= '&' && input.LA(1) <= '~')
> || (input.LA(1) >= '\u00A0' && input.LA(1) <= '\uD7FF')
> || (input.LA(1) >= '\uDC00' && input.LA(1) <= '\uFFFF')) {
> input.consume();
> }
> Let's hope that JIT can eliminate common input.LA(1) calls, but I wouldn't
> count on it.
> Parser code also suffers from mess of unread yet initialized variables which
> may significantly raise GC pressure and lower performance due to constant
> creation of unneeded objects (possibly eliminated by Escape Analysis ?).
> Also, tons of unneeded null checks, static inner classes that can be
> eliminated or merged (DFAs also rule results sometimes) add up to the
> overall?picture. I really hope some of this problems will be fixed with new
> releases and I keep my fingers crossed.
>
> --
> Greetings
> Marcin Rze?nicki
>

Sorry, there is a mistake in one rule:

condition_not
       :       ( 'NOT' )? expression_add
       ;

Predicates needed because condition rules reuse expression rules. But
for recursion in the end of expression chain I need to go to right top
level rule. Either condition top rule or expression top rule.

For example, if we parse condition call stack might look like this:

sql_condition
condition_or
condition_and
condition_not
expression_add
expression_mul
expression_sign
expression_expr
expression_par  <-- at this point we need to go to condition_or
condition_or
condition_and
...
and so on.

In case of expression call stack will be different:

sql_expression
expression_add
expression_mul
expression_sign
expression_expr
expression_par  <-- at this point we need to go to expression_add, not
condition_or!
expression_add
expression_mul
...
and so on.

As you may notice, expression_par rule calls top rule recursively. But
which top rule depends on how it started - from sql_condition or from
sql_expression. That's the place where gated semantic predicate is
needed.

Unfortunately, I don't see how to do it in efficient way. Since
predicates, even gated semantic predicates, evaluated after prediction
(predicates embedded in DFA as last conditions for each possible
path).

Is it possible to shut down lookahead completely (k = 0) and just take
first path for which predicate is evaluated as true?

Andrew

From espina.edgar at gmail.com  Mon Mar 15 13:28:00 2010
From: espina.edgar at gmail.com (Edgar Espina)
Date: Mon, 15 Mar 2010 17:28:00 -0300
Subject: [antlr-interest] ANTLR IDE and Eclipse 3.3 users
In-Reply-To: <14799bf61003151219m2b456c98hbde004394d03cb2a@mail.gmail.com>
References: <92b42db61003151145p49fe3339nbf8a1770b47d65b4@mail.gmail.com>
	<14799bf61003151219m2b456c98hbde004394d03cb2a@mail.gmail.com>
Message-ID: <92b42db61003151328sc396345sc640060afd36186d@mail.gmail.com>

jeje :D doing well, all done! all fix! this week I'll release a bug fix
version :D

Thanks,

2010/3/15 Marcin Rze?nicki <marcin.rzeznicki at gmail.com>

>
>
> On Mon, Mar 15, 2010 at 7:45 PM, Edgar Espina <espina.edgar at gmail.com>wrote:
>
>> Hi,
>>
>>  The next release of ANTLR IDE wont run over Eclipse 3.3 anymore (Eclipse
>> Europa). Until now ANTLR IDE runs over Eclipse 3.3 or higher, is there
>> anyone using Eclipse 3.3?
>>
>
>
> Not me.
> Bugs I reported are still unassigned ;-) How is bug-fixing going? :-))))
>
>
> --
> Greetings
> Marcin Rze?nicki
>



-- 
edgar

From thikone at gmail.com  Mon Mar 15 13:32:13 2010
From: thikone at gmail.com (Andrew Haritonkin)
Date: Mon, 15 Mar 2010 21:32:13 +0100
Subject: [antlr-interest] How to get ANTLR 3.2 to exit upon first error?
Message-ID: <a382aa011003151332l1617723by5baf75c646398c00@mail.gmail.com>

For Java and C# target add this in the beginning of the grammar but
after grammar statement:

grammar grammar1;

@members {
protected override object RecoverFromMismatchedToken(IIntStream input,
int ttype, BitSet follow)
{
	throw new MismatchedTokenException(ttype, input);
}
public override object RecoverFromMismatchedSet(IIntStream input,
RecognitionException e, BitSet follow)
{
	throw e;
}
}

@rulecatch {
catch (RecognitionException e)
{
    throw e;
}
}

Hope it helps,
Andrew

From marcin.rzeznicki at gmail.com  Mon Mar 15 13:34:29 2010
From: marcin.rzeznicki at gmail.com (=?UTF-8?Q?Marcin_Rze=C5=BAnicki?=)
Date: Mon, 15 Mar 2010 21:34:29 +0100
Subject: [antlr-interest] ANTLR IDE and Eclipse 3.3 users
In-Reply-To: <92b42db61003151328sc396345sc640060afd36186d@mail.gmail.com>
References: <92b42db61003151145p49fe3339nbf8a1770b47d65b4@mail.gmail.com>
	<14799bf61003151219m2b456c98hbde004394d03cb2a@mail.gmail.com>
	<92b42db61003151328sc396345sc640060afd36186d@mail.gmail.com>
Message-ID: <14799bf61003151334n47946c64vbe6890371da12278@mail.gmail.com>

2010/3/15 Edgar Espina <espina.edgar at gmail.com>

> jeje :D doing well, all done! all fix! this week I'll release a bug fix
> version :D
>
> Thanks,
>
>

Wow, that's great, I am really looking forward to do testing. I must admit
that ANTLR IDE pace of development makes me believe that it is gonna be the
greatest development tool for ANTLR soon, at least for me.


-- 
Greetings
Marcin Rze?nicki

From kirby.bohling at gmail.com  Mon Mar 15 13:41:06 2010
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Mon, 15 Mar 2010 15:41:06 -0500
Subject: [antlr-interest] How to get ANTLR 3.2 to exit upon first error?
In-Reply-To: <a382aa011003151332l1617723by5baf75c646398c00@mail.gmail.com>
References: <a382aa011003151332l1617723by5baf75c646398c00@mail.gmail.com>
Message-ID: <3cac8fdf1003151341q43fc8a4fk9894ff96b7fe9e2b@mail.gmail.com>

You need to repeat some of that for the lexer.  Using the
@lexer::members syntax if you're going to do it as a combined
lexer/parser grammar (I always separate mine to keep my mental working
set smaller).  If you don't do the lexer, you can have a lex error and
recover from it, but this should catch all of the parse errors.

Kirby


On Mon, Mar 15, 2010 at 3:32 PM, Andrew Haritonkin <thikone at gmail.com> wrote:
> For Java and C# target add this in the beginning of the grammar but
> after grammar statement:
>
> grammar grammar1;
>
> @members {
> protected override object RecoverFromMismatchedToken(IIntStream input,
> int ttype, BitSet follow)
> {
> ? ? ? ?throw new MismatchedTokenException(ttype, input);
> }
> public override object RecoverFromMismatchedSet(IIntStream input,
> RecognitionException e, BitSet follow)
> {
> ? ? ? ?throw e;
> }
> }
>
> @rulecatch {
> catch (RecognitionException e)
> {
> ? ?throw e;
> }
> }
>
> Hope it helps,
> Andrew
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From thikone at gmail.com  Mon Mar 15 15:25:05 2010
From: thikone at gmail.com (Andrew Haritonkin)
Date: Mon, 15 Mar 2010 23:25:05 +0100
Subject: [antlr-interest] How to get ANTLR 3.2 to exit upon first error?
In-Reply-To: <3cac8fdf1003151341q43fc8a4fk9894ff96b7fe9e2b@mail.gmail.com>
References: <a382aa011003151332l1617723by5baf75c646398c00@mail.gmail.com>
	<3cac8fdf1003151341q43fc8a4fk9894ff96b7fe9e2b@mail.gmail.com>
Message-ID: <a382aa011003151525l10a0a22frc9c5cda3438536ac@mail.gmail.com>

On Mon, Mar 15, 2010 at 9:41 PM, Kirby Bohling <kirby.bohling at gmail.com> wrote:
> You need to repeat some of that for the lexer. ?Using the
> @lexer::members syntax if you're going to do it as a combined
> lexer/parser grammar (I always separate mine to keep my mental working
> set smaller). ?If you don't do the lexer, you can have a lex error and
> recover from it, but this should catch all of the parse errors.
>
> Kirby
>
>
> On Mon, Mar 15, 2010 at 3:32 PM, Andrew Haritonkin <thikone at gmail.com> wrote:
>> For Java and C# target add this in the beginning of the grammar but
>> after grammar statement:
>>
>> grammar grammar1;
>>
>> @members {
>> protected override object RecoverFromMismatchedToken(IIntStream input,
>> int ttype, BitSet follow)
>> {
>> ? ? ? ?throw new MismatchedTokenException(ttype, input);
>> }
>> public override object RecoverFromMismatchedSet(IIntStream input,
>> RecognitionException e, BitSet follow)
>> {
>> ? ? ? ?throw e;
>> }
>> }
>>
>> @rulecatch {
>> catch (RecognitionException e)
>> {
>> ? ?throw e;
>> }
>> }
>>
>> Hope it helps,
>> Andrew
>>

Indeed, forgot about lexer... So, the full code which you need to add
to the grammar for C# target would be:

grammar grammar1;

@lexer::members {
public override void ReportError(RecognitionException e)
{
	throw e;
}
}

@parser::members {
protected override object RecoverFromMismatchedToken(IIntStream input,
int ttype, BitSet follow)
{
	throw new MismatchedTokenException(ttype, input);
}
public override object RecoverFromMismatchedSet(IIntStream input,
RecognitionException e, BitSet follow)
{
	throw e;
}
}

@rulecatch {
catch (RecognitionException e)
{
    throw e;
}
}

Similar should be for Java target, only naming convention is different.

Andrew

From wrhinfl at yahoo.com  Mon Mar 15 16:20:27 2010
From: wrhinfl at yahoo.com (Wayne Hassman)
Date: Mon, 15 Mar 2010 16:20:27 -0700 (PDT)
Subject: [antlr-interest] NEWBIE ANTLRWorks question: Missing zeroes in
	input
Message-ID: <103472.53284.qm@web113311.mail.gq1.yahoo.com>

I am learning ANTLR, so my answer might not be the very best solution, but here goes.

I think you are right about there being a bug within ANTLR, when I copy your grammer and run with your test data I see the parser only recieving one zero when multiple zeros are together.  

To me that implies looking into the lexer code generated by ANTLR, and in GammarLogLexer.java I find this:
    ...
    public void mTokens() throws RecognitionException {
        // ...GrammarLog.g:1:8: ( REG7_TIPO | REG9_TIPO | HEX_DIGIT )
        int alt1=3;
        int LA1_0 = input.LA(1);
        if ( (LA1_0=='0') ) {
            int LA1_1 = input.LA(2);
            if ( (LA1_1=='0') ) {
                int LA1_3 = input.LA(3);
                if ( (LA1_3=='0') ) {
                    int LA1_4 = input.LA(4);
                    if ( (LA1_4=='7') ) {
                        alt1=1;
                    }
                    else if ( (LA1_4=='9') ) {
                        alt1=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 1, 4, input);
                        throw nvae;
                    }
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 1, 3, input);
                    throw nvae;
                }
            }
            else {
                alt1=3;}
        }
        ...
The way I read this code is that if the lexer finds two zeros in a row, it is going to return REG7_TIPO or REG9_TIPO or throw an exception.  I think the two else blocks should return a HEX_DIGIT token instead of throwing an exception.

Ok, first attempt is to make the two tokens actual token rules within the grammar and place after the existing HEX_DIGIT rule (also comment out the token option near the top).  Which reorganizes the code slightly but did not affect the execution, and it still has the same problem.

Next option is to put a gated symantic predicate on the two lexer rules (place these after the HEX_DIGIT rule), this forces these two tokens to appear at the beginning of a line and turns off their generation later in the line (this is where someone with more experience might be able to give a better predicate than what I have placed here):
        REG7_TIPO    :        {$pos == 0}?=>    '0007FFF8'; 
        REG9_TIPO    :        {$pos == 0}?=>    '0009FFF6';

Well, that will make your test data work (although I had to add six more hex digits at the end - I didn't attempt to see if you had correct string length for your test).  It does appear to pick up the zeros correctly.  

Two potential problems I can see with this, first can your language have just hex digits at the beginning, that would make my predicates invalid.  Second is if the two tokens can appear in any other location within the "sentence", then the predicates would disqualify the tokens at any other location.  And since this is a scaled down version, I am not sure if either of these are true.

I also attempted if the REG7_TIPO and REG9_TIPO started with a non-hex digit and then everything would work right away without gated symantic predicates.  And there would be no problems with the token appearing in the middle of a line.  This actually would be the best thing from a code perspective, although I am not sure it is possible.

Hope this helps.
Wayne

PS. I think this might be the exact same problem for your other questions, also mentioning multiple zeros.


      

From jbb at acm.org  Mon Mar 15 18:04:40 2010
From: jbb at acm.org (John B. Brodie)
Date: Mon, 15 Mar 2010 21:04:40 -0400
Subject: [antlr-interest] Strange behaviour - pls help.
Message-ID: <1268701480.27484.19.camel@gecko.home.org>

Greetings!

(very sorry, I have broken the mail list threading. I deleted the
original message and then now decided to reply. Sorry. I could not find
a way to reply from the archive. Sorry)

Original message:

> Here's a problem I am having and can't figure out: I am trying to parse a hexadecimal string and zeroes
> 
> I build a very small example to highlight what the problem is.
> 
> Suppose an elemental log file for your check account. It just has credits and debits. Debits are identified by
> a prelude of '0001' and credits by '0002' Then comes the amount, up to $ 65535.
> 
> 
> We make a modest start with a $100 credit and a $50 debit. So our log is '0001006400020030'

__________________________________________________^^^___________________________________^^^^

$48 debit right? anyway, does not really matter i think.

> 
> But the input window shows 0001064000103, some zeroes are missing - which of course is not what we want.
____________________________________^^^^ huh? 0002 right?

I assume by `input window` you mean some interaction dialog from within ANTLRWorks? if so, maybe the
problem is with ANTLRWorks? and not the generated parser/lexer?

> 
> If we try with a $ 4369 deposit, the log is 0001111100020030.
> 
> Now the input window shows 0001111100010030. The credit is not altered, the debit is still losing zeroes.
_____________________________________^^^^ huh? ... and where is the loss of zeroes?

if this is really what you are seeing, I suggest that there is some issue outside of the ANTLR generated parser
and lexer, because the Tool generated code does not display any "input window" dialog.

> 
> My question is ?Why do the zeroes get this "special treatment"? ?How can I avoid it or work around it?
> 
> 
> I would really appreciate either an explanation or some pointers to learn what is wrong here.
....remainder snipped....

Have you tried running your generated code from the command line? As indicated above I think your problem is
outside of any ANTLR generated parser/lexer.

To prove that, please find attached a grammar that just works when Tool'd, compiled, and executed from the
command line. The linux command line I used is: java org.antlr.Tool Test.g ; javac *.java ; java TestParser

Hope this helps....
   -jbb
-------------- next part --------------
grammar Test;

options {
   output = AST;
   ASTLabelType = CommonTree;
}

@members {
   private static final String [] x = new String[] {
      "0001006400020030"
   };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to parse:`"+x[i]+"`");
            TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);

            TestParser parser = new TestParser(tokens);
            TestParser.start_return p_result = parser.start();

            CommonTree ast = p_result.tree;
            if( ast == null ) {
               System.out.println("resultant tree: is NULL");
            } else {
               System.out.println("resultant tree: " + ast.toStringTree());
            }
            System.out.println();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

start : (credit | debit)+ EOF!;

credit : '0001'^ HEX ;
debit  : '0002'^ HEX ;

fragment HEXIT : ('0'..'9') | ('a'..'f') | ('A'..'F') ;
HEX : HEXIT HEXIT HEXIT HEXIT ;

From alvarocoronel67 at yahoo.com  Mon Mar 15 19:01:48 2010
From: alvarocoronel67 at yahoo.com (Alvaro Coronel)
Date: Mon, 15 Mar 2010 19:01:48 -0700 (PDT)
Subject: [antlr-interest] Strange behaviour - pls help.
In-Reply-To: <1268701480.27484.19.camel@gecko.home.org>
References: <1268701480.27484.19.camel@gecko.home.org>
Message-ID: <327132.77731.qm@web50808.mail.re2.yahoo.com>

Hello John.

Don't be sorry about the threading. One just replies and the message goes to the originator, not to the list. Quite odd, considering the expected mechanics of interest lists, but must not be easy to fix since it was requested in 2005 and hasn't changed yet. See http://www.antlr.org/pipermail/antlr-interest/2005-May/012128.html

Thank you very much indeed for your prompt answer. You are right, it was 0002 and it was only $48 dollars. Sorry about that, but as you said it doesn't really matter - just tokens not $$.


The "input window" I referred to shows when you use the debugger tab in ANTLRWorks.

The example you sent me worked as you said. I guess I was having trouble running ANTLRWorks then?

Best regards and thanks again,
?lvaro




________________________________
From: John B. Brodie <jbb at acm.org>
To: antlr-interest <antlr-interest at antlr.org>
Cc: alvarocoronel67 at yahoo.com
Sent: Mon, March 15, 2010 10:04:40 PM
Subject: re: Strange behaviour - pls help.

Greetings!

(very sorry, I have broken the mail list threading. I deleted the
original message and then now decided to reply. Sorry. I could not find
a way to reply from the archive. Sorry)

Original message:

> Here's a problem I am having and can't figure out: I am trying to parse a hexadecimal string and zeroes
> 
> I build a very small example to highlight what the problem is.
> 
> Suppose an elemental log file for your check account. It just has credits and debits. Debits are identified by
> a prelude of '0001' and credits by '0002' Then comes the amount, up to $ 65535.
> 
> 
> We make a modest start with a $100 credit and a $50 debit. So our log is '0001006400020030'

__________________________________________________^^^___________________________________^^^^

$48 debit right? anyway, does not really matter i think.

> 
> But the input window shows 0001064000103, some zeroes are missing - which of course is not what we want.
____________________________________^^^^ huh? 0002 right?

I assume by `input window` you mean some interaction dialog from within ANTLRWorks? if so, maybe the
problem is with ANTLRWorks? and not the generated parser/lexer?

> 
> If we try with a $ 4369 deposit, the log is 0001111100020030.
> 
> Now the input window shows 0001111100010030. The credit is not altered, the debit is still losing zeroes.
_____________________________________^^^^ huh? ... and where is the loss of zeroes?

if this is really what you are seeing, I suggest that there is some issue outside of the ANTLR generated parser
and lexer, because the Tool generated code does not display any "input window" dialog.

> 
> My question is ?Why do the zeroes get this "special treatment"? ?How can I avoid it or work around it?
> 
> 
> I would really appreciate either an explanation or some pointers to learn what is wrong here.
....remainder snipped....

Have you tried running your generated code from the command line? As indicated above I think your problem is
outside of any ANTLR generated parser/lexer.

To prove that, please find attached a grammar that just works when Tool'd, compiled, and executed from the
command line. The linux command line I used is: java org.antlr.Tool Test.g ; javac *.java ; java TestParser

Hope this helps....
   -jbb



      

From db19606 at gmail.com  Mon Mar 15 19:48:39 2010
From: db19606 at gmail.com (Dan Becker)
Date: Mon, 15 Mar 2010 20:48:39 -0600
Subject: [antlr-interest] How to get ANTLR 3.2 to exit upon first error?
In-Reply-To: <a382aa011003151525l10a0a22frc9c5cda3438536ac@mail.gmail.com>
References: <a382aa011003151332l1617723by5baf75c646398c00@mail.gmail.com>
	<3cac8fdf1003151341q43fc8a4fk9894ff96b7fe9e2b@mail.gmail.com>
	<a382aa011003151525l10a0a22frc9c5cda3438536ac@mail.gmail.com>
Message-ID: <3bf9a6471003151948w75d87508l286fb6392864c314@mail.gmail.com>

Thanks, Andrew! That works for the parser.

For the lexer, it apparently isn't so simple in java, because
reportError() doesn't declare any exceptions. There's a wiki page that
explains what to do for the lexer:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217

The quick summary is either (1) override nextToken() to throw a
Recognition Exception instead of call reportError() (2) use sneaky
java tricks to let you throw RecognitionException anyway (3) throw the
RecognitionException wrapped in a RuntimeException.

Dan

On Mon, Mar 15, 2010 at 4:25 PM, Andrew Haritonkin <thikone at gmail.com> wrote:
> On Mon, Mar 15, 2010 at 9:41 PM, Kirby Bohling <kirby.bohling at gmail.com> wrote:
>> You need to repeat some of that for the lexer. ?Using the
>> @lexer::members syntax if you're going to do it as a combined
>> lexer/parser grammar (I always separate mine to keep my mental working
>> set smaller). ?If you don't do the lexer, you can have a lex error and
>> recover from it, but this should catch all of the parse errors.
>>
>> Kirby
>>
>>
>> On Mon, Mar 15, 2010 at 3:32 PM, Andrew Haritonkin <thikone at gmail.com> wrote:
>>> For Java and C# target add this in the beginning of the grammar but
>>> after grammar statement:
>>>
>>> grammar grammar1;
>>>
>>> @members {
>>> protected override object RecoverFromMismatchedToken(IIntStream input,
>>> int ttype, BitSet follow)
>>> {
>>> ? ? ? ?throw new MismatchedTokenException(ttype, input);
>>> }
>>> public override object RecoverFromMismatchedSet(IIntStream input,
>>> RecognitionException e, BitSet follow)
>>> {
>>> ? ? ? ?throw e;
>>> }
>>> }
>>>
>>> @rulecatch {
>>> catch (RecognitionException e)
>>> {
>>> ? ?throw e;
>>> }
>>> }
>>>
>>> Hope it helps,
>>> Andrew
>>>
>
> Indeed, forgot about lexer... So, the full code which you need to add
> to the grammar for C# target would be:
>
> grammar grammar1;
>
> @lexer::members {
> public override void ReportError(RecognitionException e)
> {
> ? ? ? ?throw e;
> }
> }
>
> @parser::members {
> protected override object RecoverFromMismatchedToken(IIntStream input,
> int ttype, BitSet follow)
> {
> ? ? ? ?throw new MismatchedTokenException(ttype, input);
> }
> public override object RecoverFromMismatchedSet(IIntStream input,
> RecognitionException e, BitSet follow)
> {
> ? ? ? ?throw e;
> }
> }
>
> @rulecatch {
> catch (RecognitionException e)
> {
> ? ?throw e;
> }
> }
>
> Similar should be for Java target, only naming convention is different.
>
> Andrew
>



-- 
Dan Becker
303/497-6824

From db19606 at gmail.com  Mon Mar 15 20:27:35 2010
From: db19606 at gmail.com (Dan Becker)
Date: Mon, 15 Mar 2010 21:27:35 -0600
Subject: [antlr-interest] How to get ANTLR 3.2 to exit upon first error?
In-Reply-To: <3bf9a6471003151948w75d87508l286fb6392864c314@mail.gmail.com>
References: <a382aa011003151332l1617723by5baf75c646398c00@mail.gmail.com>
	<3cac8fdf1003151341q43fc8a4fk9894ff96b7fe9e2b@mail.gmail.com>
	<a382aa011003151525l10a0a22frc9c5cda3438536ac@mail.gmail.com>
	<3bf9a6471003151948w75d87508l286fb6392864c314@mail.gmail.com>
Message-ID: <3bf9a6471003152027s20cf47b3ma4c2bb0c2a0768f4@mail.gmail.com>

Two things:

1) I incorrectly summarized the wiki page below; if you override
nextToken() you can't throw RecognitionException because nextToken()
also doesn't declare any exceptions. You have to throw
RuntimeException or Error

2) I had also posted this question on stackoverflow; I summarized
Andrew's answer there along with a sample grammar and test runs. See
http://stackoverflow.com/questions/2445008/how-to-get-antlr-3-2-to-exit-upon-first-error.

Thanks again for the help,

Dan

On Mon, Mar 15, 2010 at 8:48 PM, Dan Becker <db19606 at gmail.com> wrote:
> Thanks, Andrew! That works for the parser.
>
> For the lexer, it apparently isn't so simple in java, because
> reportError() doesn't declare any exceptions. There's a wiki page that
> explains what to do for the lexer:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=5341217
>
> The quick summary is either (1) override nextToken() to throw a
> Recognition Exception instead of call reportError() (2) use sneaky
> java tricks to let you throw RecognitionException anyway (3) throw the
> RecognitionException wrapped in a RuntimeException.
>
> Dan
>
> On Mon, Mar 15, 2010 at 4:25 PM, Andrew Haritonkin <thikone at gmail.com> wrote:
>> On Mon, Mar 15, 2010 at 9:41 PM, Kirby Bohling <kirby.bohling at gmail.com> wrote:
>>> You need to repeat some of that for the lexer. ?Using the
>>> @lexer::members syntax if you're going to do it as a combined
>>> lexer/parser grammar (I always separate mine to keep my mental working
>>> set smaller). ?If you don't do the lexer, you can have a lex error and
>>> recover from it, but this should catch all of the parse errors.
>>>
>>> Kirby
>>>
>>>
>>> On Mon, Mar 15, 2010 at 3:32 PM, Andrew Haritonkin <thikone at gmail.com> wrote:
>>>> For Java and C# target add this in the beginning of the grammar but
>>>> after grammar statement:
>>>>
>>>> grammar grammar1;
>>>>
>>>> @members {
>>>> protected override object RecoverFromMismatchedToken(IIntStream input,
>>>> int ttype, BitSet follow)
>>>> {
>>>> ? ? ? ?throw new MismatchedTokenException(ttype, input);
>>>> }
>>>> public override object RecoverFromMismatchedSet(IIntStream input,
>>>> RecognitionException e, BitSet follow)
>>>> {
>>>> ? ? ? ?throw e;
>>>> }
>>>> }
>>>>
>>>> @rulecatch {
>>>> catch (RecognitionException e)
>>>> {
>>>> ? ?throw e;
>>>> }
>>>> }
>>>>
>>>> Hope it helps,
>>>> Andrew
>>>>
>>
>> Indeed, forgot about lexer... So, the full code which you need to add
>> to the grammar for C# target would be:
>>
>> grammar grammar1;
>>
>> @lexer::members {
>> public override void ReportError(RecognitionException e)
>> {
>> ? ? ? ?throw e;
>> }
>> }
>>
>> @parser::members {
>> protected override object RecoverFromMismatchedToken(IIntStream input,
>> int ttype, BitSet follow)
>> {
>> ? ? ? ?throw new MismatchedTokenException(ttype, input);
>> }
>> public override object RecoverFromMismatchedSet(IIntStream input,
>> RecognitionException e, BitSet follow)
>> {
>> ? ? ? ?throw e;
>> }
>> }
>>
>> @rulecatch {
>> catch (RecognitionException e)
>> {
>> ? ?throw e;
>> }
>> }
>>
>> Similar should be for Java target, only naming convention is different.
>>
>> Andrew
>>
>
>
>
> --
> Dan Becker
> 303/497-6824
>



-- 
Dan Becker
303/497-6824

From BrianC at sannas.org  Mon Mar 15 20:54:31 2010
From: BrianC at sannas.org (Brian Catlin)
Date: Tue, 16 Mar 2010 11:54:31 +0800
Subject: [antlr-interest] Grammar help
Message-ID: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>

I am trying to create a grammar for a command language, and I'm stuck.  I'm
using ANTLR-3.1-2009-06-28 and libantlr3c-3.2.  The language is fairly
simplistic, where commands are of the form Verb Noun; however, some commands
can have a file name as part of the command (always the last item of the
command), and due to the wide range of possible characters in a file name,
ANTLR gets confused.  So, the question is, "How would I write a grammar that
will work?"

 

On Windows, a file name may contain any character except <,>,|,?,*,".  In
the grammar, if a file name has any spaces in it, then the entire name must
be enclosed within double-quotes (" "), and I don't want the WS (white space
token) to eat the white space within the quotes.  So, a file name may be a
quoted string (I'll strip off the quotes once I have the string) or an
unquoted string.  It would also be nice to be able to have LINE_COMMENTs on
the same line as a command with a file name, but that is not a requirement.

 

It occurred to me that instead of trying to build a token that overlaps with
pretty much every other token, that I could just grab everything from where
the file name starts on the line, to the end of the line, but I don't know
how to do that.

 

When I compile the grammar with ANTLR, I get the following:

 

warning(149): Commands.g:0:0: rewrite syntax or operator with no output
option; setting output=AST

warning(200): Commands.g:146:14: Decision can match input such as
"{'\u0000'..'\ f', '\u000E'..')', '+'..';', '=', '@'..'{', '}'..'\uFFFF'}"
using multiple alternatives: 1, 2

As a result, alternative(s) 2 were disabled for that input

warning(200): Commands.g:146:14: Decision can match input such as "'\r'"
using multiple alternatives: 1, 2

As a result, alternative(s) 2 were disabled for that input

error(208): Commands.g:151:1: The following token definitions can never be
matched because prior tokens match the same input: WS

 

ANTLR generates a lexer and a parser, but they don't do anything (any text
will be a match, even if it isn't in the defined token list).

 

Following is an abbreviated version of the grammar - the real grammar has a
lot more verbs and nouns - but this should give you the flavor of what I'm
trying to do.

 

//

// This grammar defines the commands available to the DiskTool (DT) program

//

 

grammar Commands;

 

options 

     {

     language = C;

     backtrack = true;

     memoize = true;

     }

 

@lexer::header

{

#define    ANTLR3_INLINE_INPUT_ASCII

}

 

//+

// Productions

//-

 

commands

     :

     (script_command

     | dump_command

     ! show_command

     )*;

 

script_command

     :  '@' 

     FILE_NAME       {printf ("File name [\%s]\n", $FILE_NAME);}

     ;

 

dump_command

     : DUMP

     (dump_struct

     | dump_block

     | a_file

     );

 

show_command

     : SHOW

     (structure_nouns

     | storage_nouns

     | a_file

     );

     

mbr_vbr

     : MBR 

     | VBR

     ;

 

block_nouns

     : LBN 

     | LCN 

     | VBN 

     | VCN

     ;

 

structure_nouns

     : MBR

     | VBR

     ;

 

dump_block

     : block_nouns

     number

     ((',' number)

     | (':' number))?

     DRIVE_NAME?

     ;

 

dump_struct

     : mbr_vbr

     ('/' qualifier)?

     DRIVE_NAME?

     ;

 

storage_nouns

     : DISK

     | VOLUME

     ;

     

a_file

     : FILE

     FILE_NAME       {printf ("File name [\%s]\n", $FILE_NAME);}

     ;

 

number

     : DEC_NUMBER 

     | HEX_NUMBER

     ;

 

qualifier

     : ALL

     ! CODE

     | TABLE

     ;

 

//+

// Tokens

//-

 

// Verbs

 

DUMP : 'DUMP';

SHOW : 'SHOW';

 

// Nouns

 

DISK : 'DISK';

FILE : 'FILE';

LBN  : 'LBN';

LCN  : 'LCN';

MBR  : 'MBR';

PBN  : 'PBN';

VBN  : 'VBN';

VBR  : 'VBR';

VCN  : 'VCN';

VOLUME     : 'VOLUME';

 

// Qualifiers

 

ALL  : 'ALL';

CODE : 'CODE';

TABLE : 'TABLE';

 

// Miscellaneous tokens

 

DRIVE_NAME : LETTER ':';

 

fragment

LETTER     : 'A'..'Z';

 

fragment

DIGIT : '0'..'9';

 

fragment

HEX_DIGIT  : (DIGIT | 'A'..'F');

 

HEX_NUMBER : '0X' HEX_DIGIT+;

 

DEC_NUMBER : DIGIT+;

 

FILE_NAME  :  ~('|' | '<' | '>' | '*' | '?')+ (('\r'? '\n') | EOF);

 

LINE_COMMENT

     : '!' ~('\n'|'\r')* (('\r'? '\n') | EOF) {$channel=HIDDEN;};

 

WS   : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};

 


From bkiers at gmail.com  Mon Mar 15 23:35:08 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 16 Mar 2010 07:35:08 +0100
Subject: [antlr-interest] Grammar help
In-Reply-To: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>
References: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>
Message-ID: <af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>

On Tue, Mar 16, 2010 at 4:54 AM, Brian Catlin <BrianC at sannas.org> wrote:

>
> When I compile the grammar with ANTLR, I get the following:
>
>
>
> warning(149): Commands.g:0:0: rewrite syntax or operator with no output
> option; setting output=AST
>


Hi Brian,

The '!' and '^' are tree-rewrite operators, so ANTLR is telling you here
that you're trying to rewrite something without specifying you're building a
tree. Doing a CRL+F I found this rule:

commands
  :  ( script_command
     | dump_command
            ! show_command // <- !
     )*
  ;

Notice the '!' (exclamation mark) that should be a '|' (pipe):

commands
   :  ( script_command
     | dump_command
            | show_command // <- |
     )*
  ;

Regards,

Bart.

From bkiers at gmail.com  Mon Mar 15 23:37:28 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 16 Mar 2010 07:37:28 +0100
Subject: [antlr-interest] Grammar help
In-Reply-To: <af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>
References: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>
	<af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>
Message-ID: <af443a971003152337h3fe34380tab52be475a4b7130@mail.gmail.com>

On Tue, Mar 16, 2010 at 7:35 AM, Bart Kiers <bkiers at gmail.com> wrote:

> On Tue, Mar 16, 2010 at 4:54 AM, Brian Catlin <BrianC at sannas.org> wrote:
>
>>
>> When I compile the grammar with ANTLR, I get the following:
>>
>>
>>
>> warning(149): Commands.g:0:0: rewrite syntax or operator with no output
>> option; setting output=AST
>>
>
>
> ...
>

The same goes for:

qualifier
  : ALL
  ! CODE   // should be a '|' instead of a '!'
  | TABLE
  ;

Bart.

From BrianC at sannas.org  Tue Mar 16 00:10:34 2010
From: BrianC at sannas.org (Brian Catlin)
Date: Tue, 16 Mar 2010 15:10:34 +0800
Subject: [antlr-interest] Grammar help
In-Reply-To: <af443a971003152337h3fe34380tab52be475a4b7130@mail.gmail.com>
References: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>	<af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>
	<af443a971003152337h3fe34380tab52be475a4b7130@mail.gmail.com>
Message-ID: <009601cac4d7$c6ecf070$54c6d150$@sannas.org>

Thanks Bart.  Jeez, I feel stupid.

While that gets rid of those warnings (why don't the warnings print a
reasonable line number?  I would call that a BUG), the fundamental problem
of being able to parse (or otherwise capture the file name) still exists.

Any ideas?

 -Brian

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
Sent: Tuesday, March 16, 2010 14:37
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Grammar help

On Tue, Mar 16, 2010 at 7:35 AM, Bart Kiers <bkiers at gmail.com> wrote:

> On Tue, Mar 16, 2010 at 4:54 AM, Brian Catlin <BrianC at sannas.org> wrote:
>
>>
>> When I compile the grammar with ANTLR, I get the following:
>>
>>
>>
>> warning(149): Commands.g:0:0: rewrite syntax or operator with no 
>> output option; setting output=AST
>>
>
>
> ...
>

The same goes for:

qualifier
  : ALL
  ! CODE   // should be a '|' instead of a '!'
  | TABLE
  ;

Bart.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bkiers at gmail.com  Tue Mar 16 00:32:49 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 16 Mar 2010 08:32:49 +0100
Subject: [antlr-interest] Grammar help
In-Reply-To: <009601cac4d7$c6ecf070$54c6d150$@sannas.org>
References: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>
	<af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>
	<af443a971003152337h3fe34380tab52be475a4b7130@mail.gmail.com>
	<009601cac4d7$c6ecf070$54c6d150$@sannas.org>
Message-ID: <af443a971003160032h642a637aye02511e9a0bfe56f@mail.gmail.com>

On Tue, Mar 16, 2010 at 8:10 AM, Brian Catlin <BrianC at sannas.org> wrote:

> While that gets rid of those warnings (why don't the warnings print a
> reasonable line number?  I would call that a BUG),


Note that the '!' is a valid operator inside your grammar, ANTLR just
assumes that you're building trees. So, you're not doing anything wrong.
But, yes, a warning with the line number of the improper use of rewrite
operators would be nice.


 On Tue, Mar 16, 2010 at 8:10 AM, Brian Catlin <BrianC at sannas.org> wrote:

> the fundamental problem
> of being able to parse (or otherwise capture the file name) still exists.
>
> Any ideas?
>

The error message is telling that your FILE_NAME is ambiguous. When matching
one or more characters from:

~('|' | '<' | '>' | '*' | '?')+

then line breaks will also be matched, yet after that, the following could
be matched:

('\r'? '\n')

which has already been "eaten" by the previous part of your rule. You could
fix that by adding line breaks to that first part of your rule, like this:

FILE_NAME    :  ~('|' | '<' | '>' | '*' | '?'| '\r' | '\n')+ (('\r'? '\n') |
EOF);

Regards,

Bart.

From BrianC at sannas.org  Tue Mar 16 01:18:27 2010
From: BrianC at sannas.org (Brian Catlin)
Date: Tue, 16 Mar 2010 16:18:27 +0800
Subject: [antlr-interest] Grammar help
In-Reply-To: <af443a971003160032h642a637aye02511e9a0bfe56f@mail.gmail.com>
References: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>	<af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>	<af443a971003152337h3fe34380tab52be475a4b7130@mail.gmail.com>	<009601cac4d7$c6ecf070$54c6d150$@sannas.org>
	<af443a971003160032h642a637aye02511e9a0bfe56f@mail.gmail.com>
Message-ID: <00a001cac4e1$42b0d010$c8127030$@sannas.org>

(Brian slaps head again), "Duh!"  Sigh.  Sometimes, I really wonder whether
I'm overpaid ;-}

You fixed it!

Thank you very much for your help!!

 -Brian


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
Sent: Tuesday, March 16, 2010 15:33
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Grammar help

On Tue, Mar 16, 2010 at 8:10 AM, Brian Catlin <BrianC at sannas.org> wrote:

> While that gets rid of those warnings (why don't the warnings print a 
> reasonable line number?  I would call that a BUG),


Note that the '!' is a valid operator inside your grammar, ANTLR just
assumes that you're building trees. So, you're not doing anything wrong.
But, yes, a warning with the line number of the improper use of rewrite
operators would be nice.


 On Tue, Mar 16, 2010 at 8:10 AM, Brian Catlin <BrianC at sannas.org> wrote:

> the fundamental problem
> of being able to parse (or otherwise capture the file name) still exists.
>
> Any ideas?
>

The error message is telling that your FILE_NAME is ambiguous. When matching
one or more characters from:

~('|' | '<' | '>' | '*' | '?')+

then line breaks will also be matched, yet after that, the following could
be matched:

('\r'? '\n')

which has already been "eaten" by the previous part of your rule. You could
fix that by adding line breaks to that first part of your rule, like this:

FILE_NAME    :  ~('|' | '<' | '>' | '*' | '?'| '\r' | '\n')+ (('\r'? '\n') |
EOF);

Regards,

Bart.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ketancmaheshwari at gmail.com  Tue Mar 16 01:18:38 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Tue, 16 Mar 2010 09:18:38 +0100
Subject: [antlr-interest] How can i get the tree in java
Message-ID: <8e487b941003160118i64c34c0eu43fd60174daa53ab@mail.gmail.com>

Hi Friends

Using the GUI tool ANTLRworks, I am getting a very nice tree when I give my
program to test against the grammar I wrote.

But is there a way I get that tree in a manageable form. Like some kind of
java tree data structure or a java object so that i can manipulate it as per
my requirements.

Many thanks
Ketan

From BrianC at sannas.org  Tue Mar 16 02:12:10 2010
From: BrianC at sannas.org (Brian Catlin)
Date: Tue, 16 Mar 2010 17:12:10 +0800
Subject: [antlr-interest] Grammar help
References: <008e01cac4bc$643178e0$2c946aa0$@sannas.org>	<af443a971003152335s2166690ekae89098a13e838de@mail.gmail.com>	<af443a971003152337h3fe34380tab52be475a4b7130@mail.gmail.com>	<009601cac4d7$c6ecf070$54c6d150$@sannas.org>
	<af443a971003160032h642a637aye02511e9a0bfe56f@mail.gmail.com> 
Message-ID: <00a401cac4e8$c3b6bbf0$4b2433d0$@sannas.org>

In my excitement of not seeing any error messages, I neglected to really
test the parser :-(

I don't get the errors I was getting before, but that is because the
FILE_NAME token is matching everything,  I put a simple printf action on the
FILE_NAME token, and it gets called for all input:

DT> @abc.def
Found file name: @abc.def
DT> illegal command
Found file name: illegal command
DT> 'alj;klajjf
Found file name: 'alj;klajjf

Is there a way to make the FILE_NAME token context sensitive so that the
lexer doesn't try to match it unless we're in a rule that wants to find a
file name?  I tried making the FILE_NAME token a fragment, but then the
parser failed to recognize anything as valid.

Here's the grammar:

//
// This grammar defines the commands available to the DiskTool (DT) program
//

grammar Commands;

options 
	{
	language = C;
	backtrack = true;
	memoize = true;
	}

@lexer::header
{
#define	ANTLR3_INLINE_INPUT_ASCII
}

//+
// Productions
//-

commands
	:
	(script_command
	| dump_command
	| show_command
	)*;

script_command
	:  '@' 
	FILE_NAME
	;

dump_command
	: DUMP
	(dump_struct
	| dump_block
	| a_file
	);

show_command
	: SHOW
	(structure_nouns
	| storage_nouns
	| a_file
	);
	
mbr_vbr
	: MBR 
	| VBR
	;

block_nouns
	: LBN 
	| LCN 
	| VBN 
	| VCN
	;

structure_nouns
	: MBR
	| VBR
	;

dump_block

	: block_nouns
	number
	(
	(',' number
	)
	| 
	(':' number
	))?
	DRIVE_NAME?
	;

dump_struct
	: mbr_vbr
	('/' qualifier)?
	DRIVE_NAME?
	;

storage_nouns
	: DISK
	| VOLUME
	;
	
a_file
	: FILE
	FILE_NAME
	;

number
	: DEC_NUMBER 
	| HEX_NUMBER
	;

qualifier
	: ALL
	| CODE
	| TABLE
	;

//+
// Tokens
//-

// Verbs

DUMP	: 'DUMP';
SHOW	: 'SHOW';

// Nouns

DISK	: 'DISK';
FILE	: 'FILE';
LBN	: 'LBN';
LCN	: 'LCN';
MBR	: 'MBR';
PBN	: 'PBN';
VBN	: 'VBN';
VBR	: 'VBR';
VCN	: 'VCN';
VOLUME	: 'VOLUME';

// Qualifiers

ALL	: 'ALL';
CODE	: 'CODE';
TABLE	: 'TABLE';

// Miscellaneous tokens

DRIVE_NAME
	: LETTER ':'
	;
	
fragment
LETTER	: 'A'..'Z';

fragment
DIGIT	: '0'..'9';

fragment
HEX_DIGIT	: (DIGIT | 'A'..'F');

HEX_NUMBER	: '0X' HEX_DIGIT+;

DEC_NUMBER	: DIGIT+;

FILE_NAME
	:  ~('|' | '<' | '>' | '*' | '?' | '\r' | '\n')+ (('\r'? '\n') |
EOF)
	{printf("Found file name: \%s\n", GETTEXT()->chars);};

LINE_COMMENT
	: '!' ~('\n'|'\r')* (('\r'? '\n') | EOF) {$channel=HIDDEN;}
	{printf("Found comment: \%s\n", GETTEXT()->chars);};

WS	: (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};


-----Original Message-----
From: Brian Catlin [mailto:BrianC at sannas.org] 
Sent: Tuesday, March 16, 2010 16:18
To: 'antlr-interest at antlr.org'
Subject: RE: [antlr-interest] Grammar help

(Brian slaps head again), "Duh!"  Sigh.  Sometimes, I really wonder whether
I'm overpaid ;-}

You fixed it!

Thank you very much for your help!!

 -Brian


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
Sent: Tuesday, March 16, 2010 15:33
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Grammar help

On Tue, Mar 16, 2010 at 8:10 AM, Brian Catlin <BrianC at sannas.org> wrote:

> While that gets rid of those warnings (why don't the warnings print a 
> reasonable line number?  I would call that a BUG),


Note that the '!' is a valid operator inside your grammar, ANTLR just
assumes that you're building trees. So, you're not doing anything wrong.
But, yes, a warning with the line number of the improper use of rewrite
operators would be nice.


 On Tue, Mar 16, 2010 at 8:10 AM, Brian Catlin <BrianC at sannas.org> wrote:

> the fundamental problem
> of being able to parse (or otherwise capture the file name) still exists.
>
> Any ideas?
>

The error message is telling that your FILE_NAME is ambiguous. When matching
one or more characters from:

~('|' | '<' | '>' | '*' | '?')+

then line breaks will also be matched, yet after that, the following could
be matched:

('\r'? '\n')

which has already been "eaten" by the previous part of your rule. You could
fix that by adding line breaks to that first part of your rule, like this:

FILE_NAME    :  ~('|' | '<' | '>' | '*' | '?'| '\r' | '\n')+ (('\r'? '\n') |
EOF);

Regards,

Bart.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From cross at kojeware.com  Tue Mar 16 06:29:05 2010
From: cross at kojeware.com (Cameron Ross)
Date: Tue, 16 Mar 2010 09:29:05 -0400
Subject: [antlr-interest] Combining front-ends and back-ends
Message-ID: <bc2b292f1003160629x6ccb16fcvaea8539223a516ed@mail.gmail.com>

I need to translate text files from language A to language B.  I already
have the following antlr3 gear for these languages:
  - an antlr grammar for language A that produces AST_A
  - a tree walker (tw_A) that transforms AST_A to AST_B'
  - an antlr grammar for language B that produces AST_B
  - a tree walker (tw_B) that uses string templates to transform AST_B into
text for language B

I'd like to establish the following pipeline to translate text files from
language A to language B:
 - text_A -> lexer_A -> parser_A -> tw_A -> tw_B -> text_B

However, tw_B does does not properly walk trees generated by tw_A.  This is
probably a result of the tree walkers being compiled against difference
token vocabularies.  Is there a way to somehow integrate vocabularies so
that you can reuse a pre-compiled back-end like this?

If not, I guess I'll have to integrate tw_B with the source generation
process for the language A components.  However, this also has challenges.
 Note that AST_B' (from language A) is a subset of AST_B and not all of the
tokens referenced in tw_B are present in tw_A.  That is, , so tw_B requires
more than just tokenVocab=tw_A.

I could cut-and-paste tw_B to create a tw_A2, but I plan to use AST_B as an
intermediate form for translating several languages to language B, so I'm
looking to reuse...  I'd like to keep tw_B independent from tw_A.

Thanks,
Cameron.

From ivans at isle.spb.ru  Tue Mar 16 07:22:42 2010
From: ivans at isle.spb.ru (=?UTF-8?B?0JjQstCw0L3QvtCyINCc0LjRhdCw0LjQuw==?=)
Date: Tue, 16 Mar 2010 17:22:42 +0300
Subject: [antlr-interest] Best version to use with c++?
Message-ID: <4B9F9432.9070506@isle.spb.ru>

Greetings!

I am writing a parser for an application and I started to do it
with pccts tool which is still available in debian and with which
I had some experience about 8 years ago - but to my dissapointment
it seems to be completely unmaintained now. So it looks like I will
have (finally) to switch to antlr. This said, which version would
you advise for use with C++: antlr2 or antlr3? I know there's no
C++ support in v3, but is C support really usable from C++? If yes,
are there any sample available? Or would it be easier to stick to v2?

Also I used flex lexer with my old grammar. Would flex integrate
into antlr2/antlr3 or will I have to change lexer to whatver is
supplied by antlr?

Best regards,
-- 
Michael

From BrianC at sannas.org  Tue Mar 16 07:40:02 2010
From: BrianC at sannas.org (Brian Catlin)
Date: Tue, 16 Mar 2010 22:40:02 +0800
Subject: [antlr-interest] C example error: PolyDiff
Message-ID: <00b401cac516$9a5f9c30$cf1ed490$@sannas.org>

I tried to build the PolyDiff example from Examples-v3, using
ANTLR-3.1-2009-06-28 and libantlr3c-3.2 in Visual Studio 2008.  The output
from the build:

 

1>------ Rebuild All started: Project: polydiff, Configuration: Debug Win32
------

1>Deleting intermediate and output files for project 'polydiff',
configuration 'Debug|Win32'

1>Translating to parser/lexer combination

1>Translating to parser/lexer combination

1>Translating to parser/lexer combination

1>Translating to parser/lexer combination

1>.\PolyDifferentiator.g(0,0) : warning 138 : grammar PolyDifferentiator: no
start rule (no rule can obviously be followed by EOF)

1>Compiling...

1>Simplifier.c

1>PolyPrinter.c

1>PolyParser.c

1>PolyLexer.c

1>PolyDifferentiator.c

1>main.c

1>Generating Code...

1>Compiling manifest to resources...

1>Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385

1>Copyright (C) Microsoft Corporation.  All rights reserved.

1>Linking...

1>LINK : C:\MIMOS\ANTLR\examples-v3\C\Debug\polydiff.exe not found or not
built by the last incremental link; performing full link

1>   Creating library C:\MIMOS\ANTLR\examples-v3\C\Debug\polydiff.lib and
object C:\MIMOS\ANTLR\examples-v3\C\Debug\polydiff.exp

1>Embedding manifest...

1>Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385

1>Copyright (C) Microsoft Corporation.  All rights reserved.

1>Build log was saved at
"file://c:\MIMOS\ANTLR\examples-v3\C\polydiff\Debug\BuildLog.htm"

1>polydiff - 0 error(s), 1 warning(s)

========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========

 

As you can see, there is a warning generating PolyDifferentiator.g

 

When I run the resulting program, I get an access violation in addChild
(antlr3basetree.c) at the -?, because child has not been initialized

 

void      

addChild (pANTLR3_BASE_TREE tree, pANTLR3_BASE_TREE child)

{

      ANTLR3_UINT32   n;

      ANTLR3_UINT32   i;

 

      if    (child == NULL)

      {

            return;

      }

 

--?  if    (child->isNilNode(child) == ANTLR3_TRUE)

      {

            if  (child->children != NULL && child->children ==
tree->children)

 


From r_lefebvr at yahoo.ca  Tue Mar 16 14:13:13 2010
From: r_lefebvr at yahoo.ca (Roger Lefebvre)
Date: Tue, 16 Mar 2010 14:13:13 -0700 (PDT)
Subject: [antlr-interest] Import problems when splitting out tokens
Message-ID: <615430.32970.qm@web111703.mail.gq1.yahoo.com>



Doing upgrades and want to split the current composite grammar to serve as a base for two new grammars that will share approx 90% rules. After going through the process of splitting out tokens from rules, I'm left with:

parser RootParser;
value_expr:
..
;
...


lexer RootLexer;

LeftParen: '(';
...


grammar Timer;
options{
tokenVocab = RootLexer;
}
import RootParser
@header{package com.timer.parser;}

start:    value_expr;
...


grammar Calculator;
options{
tokenVocab = RootLexer;
}
import RootParser
@header{package com.timer.parser;}

start:    value_expr | control | txt_alias;

control_spec:
...


Although the grammar in the above checks out, the problem surfaces when generating source code - specifically the token files. Unlike with composite grammar where the lexer (RootLexer.java) is generated when generating the parser, I manually generate the lexer and subsequently generate the parser. The generated files are: RootLexer.java, RootLexer.tokens, TimerParser.java, Timer_RootParser.java, Timer.tokens, CalculatorParser.java, Calculator_RootParser.java, Calculator.tokens.

On inspecting the token files, I noticed the token values in the lexer file did not match up with the equivalents in the two parser token files. From what I understand in all that I read, this cannot be as it will cause incorrect switch jumps, amongst other errors. 

As alternatives, I tried:

- remove the tokenVocab options and import both RootParser and RootLexer
- import the RootLexer into RootParser instead. This generates an error "parser rule value_expr not allowed in lexer" which seems to have something to do with the "parser grammar RootParser" definition on the opening line
- removed "parser" qualifier from grammar definition. Generated error due to importing combined grammar Timer/Calculator.
- tried import instead of tokenVocab on RootLexer. It too generated combined grammar error.

Is there some way to specify the created lexer when generating the parser? 

I dislike the idea of having to resort to two grammars that are essentially the same. Any help would be much appreciated.

Roger



      __________________________________________________________________
Be smarter than spam. See how smart SpamGuard is at giving junk email the boot with the All-new Yahoo! Mail.  Click on Options in Mail and switch to New Mail today or register for free at http://mail.yahoo.ca

From nik9000 at gmail.com  Tue Mar 16 16:26:18 2010
From: nik9000 at gmail.com (Nikolas Everett)
Date: Tue, 16 Mar 2010 19:26:18 -0400
Subject: [antlr-interest] Using the results
Message-ID: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>

Its been a long time since I last used antlr and I'm now getting the chance
to use it again.  I happened on a rather conspicuous gap in my knowledge: I
have no idea what the right way take actions based on parsed results.

Should I parse my input to an AST and then walk the AST?  This seems like
it'd be a pain to maintain.
Should I call actions directly from antlr?  This simpler but in practice is
really cumbersome and makes using antlrworks much more difficult.

Both of these are going to leave me with gobs of code translating from the
AST representation to my domain objects.

What is the best practice for doing this?

Nik

From gerald at certiv.net  Tue Mar 16 17:54:24 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Tue, 16 Mar 2010 17:54:24 -0700
Subject: [antlr-interest] Using the results
In-Reply-To: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>
References: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>
Message-ID: <4BA02840.8090107@certiv.net>


From kaleb.pederson at gmail.com  Tue Mar 16 18:20:10 2010
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Tue, 16 Mar 2010 18:20:10 -0700
Subject: [antlr-interest] Using the results
In-Reply-To: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>
References: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>
Message-ID: <f14c01621003161820h205afddah390d9bab01c841d9@mail.gmail.com>

On Tue, Mar 16, 2010 at 4:26 PM, Nikolas Everett <nik9000 at gmail.com> wrote:
> Its been a long time since I last used antlr and I'm now getting the chance
> to use it again. ?I happened on a rather conspicuous gap in my knowledge: I
> have no idea what the right way take actions based on parsed results.

At least you recognize that :).

> Should I parse my input to an AST and then walk the AST? ?This seems like
> it'd be a pain to maintain.
> Should I call actions directly from antlr? ?This simpler but in practice is
> really cumbersome and makes using antlrworks much more difficult.

Which one of the above you'll want will be largely dependent on what
your needs are and how complicated everything becomes.

If you're dealing with something simple, then putting the actions
directly in ANTLR's action code is a perfectly reasonable solution and
may result in the least amount of code and the code that's easiest to
understand (for those not versed in the ANTLR tree-walking process).

If you end up needing something more complicated and need information
from various parts in your processing, such as you might if you
support mutually recursive types, then using a tree walker and
deferring as much of the processing and validation as possible until
later.

There's likely a continuum between the two.  For example, I've found
that I can often create builder classes which I call within the
actions of my parser.  These builder classes provide a consistent
interface that I can use to test without dealing directly with the
parser, and provide an easy interface that the parser can use.  When
used with a good set of ANTLR features, such as scopes and actions on
non-terminal fragments, this can make for a very clean structure.

If you want specifics it would be helpful if you could provide more
concrete details.

HTH.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From gerald at certiv.net  Tue Mar 16 21:40:29 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Tue, 16 Mar 2010 21:40:29 -0700
Subject: [antlr-interest] Using the results
In-Reply-To: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>
References: <d4e11e981003161626i1b50c223t2db4d61b5f7ed5bd@mail.gmail.com>
Message-ID: <4BA05D3D.1070405@certiv.net>


From christian.pontesegger at web.de  Wed Mar 17 01:43:06 2010
From: christian.pontesegger at web.de (Christian Pontesegger)
Date: Wed, 17 Mar 2010 09:43:06 +0100 (CET)
Subject: [antlr-interest] (no subject)
Message-ID: <4765287.871652.1268815386419.JavaMail.fmail@mwmweb020>


From nazim_oztahtaci at hotmail.com  Wed Mar 17 01:44:49 2010
From: nazim_oztahtaci at hotmail.com (Nazim Oztahtaci)
Date: Wed, 17 Mar 2010 08:44:49 +0000
Subject: [antlr-interest] Factorization of Logic Expressions
Message-ID: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>


Hello everyone,
I would like to thank everyone first of all during their help when I became a new member to this group. I am working on Antlr and my task since last month. I am able to parse a logic expression such as a(b+c) into a tree, then I apply Demorgan and distribution so I reach a DNF representation: ab+ac.. The operators that I support are NOT, OR, AND, >, <. Timer and IF-ELSE statements. 
Now Im working on factorizing the DNF formed expressions back to originial because the user of my program will be able to read output data file which has only string representation of DNF expression. So I need to factorize the DNF expression. The way I try to do is putting the expression in a matrix such as
 a b c
 1 1 X  ab
 1 X 1  ac

Then reading this matrix to find the most number of 1s and then re-check these rows if there are any more subsequences and so on.. I know that I cant reach the original expression everytime for the complicated expressions. Also for the reverse Demorgan, I cant use this matrix probably. I wanted to ask users of this mail group if they have any advice to me regarding an algorithm for this problem or a new way as solution.

I know it is a bit hard and rare problem so even no help will be available for me, I appreciate for previous helps as well.

Thank you all and good luck everyonje with their studies
Nazim
 		 	   		  
_________________________________________________________________
Yeni Windows 7: Size en uygun bilgisayar? bulun. Daha fazla bilgi edinin.
http://windows.microsoft.com/shop

From christian.pontesegger at web.de  Wed Mar 17 01:57:01 2010
From: christian.pontesegger at web.de (Christian Pontesegger)
Date: Wed, 17 Mar 2010 09:57:01 +0100 (CET)
Subject: [antlr-interest] Tree construction for function / method calls
Message-ID: <6793666.312432.1268816221177.JavaMail.fmail@mwmweb019>

Hi all,

sorry for the porevious mail, webmail messed it up ...


I am desperately trying to create a tree for method calls but am struggling with recursion in the tree generation. My language allows for statements like this:

        print().foo().test().me()

        Where print() is a function returning an object. Then subsequently methods are called.

        $x.this().is().it()

        Where $x is a variable holding an object.

Previous two statements should be transformed to trees like this:

        ^(^(METHOD ^(METHOD ^(FUN print) foo) test) me)


        ^(^(METHOD ^(METHOD ^(VAR x) this) is) it)


So I started with a grammar, but got stuck here:


grammar Test;

options {
  language = Java;
  output = AST;
  ASTLabelType=CommonTree;
}

tokens {
        VAR;
        FUN;
        METHOD;
}

program
        : statement* EOF!
        ;

statement
        :       token
                (
                        '.' IDENT '(' ')'       -> ^(METHOD token IDENT)
                )*
        ;

token
        :       function
        |       variable
        ;


function
        :       IDENT   '(' ')'                 -> ^(FUN IDENT)
        ;

variable
        :       '$' IDENT                               -> ^(VAR IDENT)
        ;

fragment LETTER : ('a'..'z' | 'A'..'Z');
fragment DIGIT : '0'..'9';
fragment LINEBREAK : '\r'? '\n';
IDENT : LETTER (LETTER | DIGIT | '_')*;
WHITESPACES : (' ' | '\t' | '\f' | LINEBREAK)+ { $channel = HIDDEN; };





Running this grammar on the example input results in following tree:
(METHOD (FUN print) foo) (METHOD (VAR x) this)


I see that I need to change the * from "statement" to ? somehow, but how can I call statement recursively?

Thanks
Christian
___________________________________________________________
GRATIS f?r alle WEB.DE-Nutzer: Die maxdome Movie-FLAT!
Jetzt freischalten unter http://movieflat.web.de

From jmchuma at gmail.com  Wed Mar 17 04:47:56 2010
From: jmchuma at gmail.com (=?UTF-8?Q?Jose_Mar=C3=ADa_Chumo_Mata?=)
Date: Wed, 17 Mar 2010 12:47:56 +0100
Subject: [antlr-interest] using the generatred parser and lexer classes
In-Reply-To: <8e487b941003150544m1c06e192mbd5043337a213a6c@mail.gmail.com>
References: <8e487b941003150147x3b75af4ay8adafc0b4e23b1a7@mail.gmail.com> 
	<5fc92f921003150337p28d611f2m5f8f0c42eebe1963@mail.gmail.com> 
	<8e487b941003150544m1c06e192mbd5043337a213a6c@mail.gmail.com>
Message-ID: <5fc92f921003170447t66bddcb3kcfa19fcd063ac594@mail.gmail.com>

2010/3/15 Ketan Maheshwari <ketancmaheshwari at gmail.com>:
> Hello Jose
> Thanks for your reply.
> Yes, after putting the option output=AST, i got the result as you
> mentioned.
> But now i have another issue. The program never returns from the line where
> we create an instance of the parser :
> gscriptParser g = new gscriptParser(tokens,49100,null);
>
Is that a special constructor? I'm not really sure of what may be
happening. I'm using a constructor that only requireas a TokenStream.
Do you get any error? Do you use the lexer earlier in the code?
>
> Thanks for any inputs
> Ketan
> 2010/3/15 Jose Mar?a Chumo Mata <jmchuma at gmail.com>
>>
>> Hello there.
>>
>> I've not been usign ANTLR for a long time so maybe I'm wrong but I
>> think you looked at the lexer. As far as I know, the parser rules
>> always return something. The return type for each method correspondig
>> to a rule in the parser is a inner class of the generated parser.
>> Let's say you declared the rule parserRule in the parser MyParser. The
>> get the result from parsing a file starting from that rule you do
>> something like this:
>> MyParser.parserRule_return result = parser.parserRule();
>>
>> Hope this helps.
>> Regards
>>
>> On Mon, Mar 15, 2010 at 09:47, Ketan Maheshwari
>> <ketancmaheshwari at gmail.com> wrote:
>> > Hello Friends
>> >
>> > While looking at the ways I can use the generated Lexer and Parser
>> > classes
>> > of my grammar I stumbled thru this page:
>> >
>> > http://www.antlr.org/wiki/pages/viewpage.action?pageId=789
>> >
>> > It says that we can use the parser something like this:
>> >
>> > RuleReturnScope result = parser.compilationUnit();
>> >
>> > But, on my Parser class I do not see any method that really returns
>> > result
>> > of this type.
>> >
>> > All my methods for the grammar rules are simply void. panic!
>> >
>> > Am I missing anything here?
>> >
>> > Many thanks!
>> > Ketan
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From safisce at gmail.com  Wed Mar 17 09:02:31 2010
From: safisce at gmail.com (Safiye Celik)
Date: Wed, 17 Mar 2010 18:02:31 +0200
Subject: [antlr-interest] lexer and parser files are not created
Message-ID: <bbf7e7d51003170902mb455204l687ac1282678a448@mail.gmail.com>

Hi,
I have been working on Eclipse with Antlr. Although I have set grammar
preference "Automatically generate code on save", no tokens, lexer or parser
files are created when I make some changes and save the grammar. What the
reason may be for that? And is there a way to create lexer and parser files
manually?
Thanks in advance.

-- 
-safiye

From newsreply at areeda.com  Wed Mar 17 10:26:35 2010
From: newsreply at areeda.com (Joseph Areeda)
Date: Wed, 17 Mar 2010 10:26:35 -0700
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>
Message-ID: <4BA110CB.5000906@areeda.com>

This might be a bit simplistic, but why not save the original expression
as a string?  Then you could compare that with your processed version.

Joe

Nazim Oztahtaci wrote:
> Hello everyone,
> I would like to thank everyone first of all during their help when I became a new member to this group. I am working on Antlr and my task since last month. I am able to parse a logic expression such as a(b+c) into a tree, then I apply Demorgan and distribution so I reach a DNF representation: ab+ac.. The operators that I support are NOT, OR, AND, >, <. Timer and IF-ELSE statements. 
> Now Im working on factorizing the DNF formed expressions back to originial because the user of my program will be able to read output data file which has only string representation of DNF expression. So I need to factorize the DNF expression. The way I try to do is putting the expression in a matrix such as
>  a b c
>  1 1 X  ab
>  1 X 1  ac
>
> Then reading this matrix to find the most number of 1s and then re-check these rows if there are any more subsequences and so on.. I know that I cant reach the original expression everytime for the complicated expressions. Also for the reverse Demorgan, I cant use this matrix probably. I wanted to ask users of this mail group if they have any advice to me regarding an algorithm for this problem or a new way as solution.
>
> I know it is a bit hard and rare problem so even no help will be available for me, I appreciate for previous helps as well.
>
> Thank you all and good luck everyonje with their studies
> Nazim
>  		 	   		  
> _________________________________________________________________
> Yeni Windows 7: Size en uygun bilgisayar? bulun. Daha fazla bilgi edinin.
> http://windows.microsoft.com/shop
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


From nazim_oztahtaci at hotmail.com  Wed Mar 17 13:43:24 2010
From: nazim_oztahtaci at hotmail.com (Nazim Oztahtaci)
Date: Wed, 17 Mar 2010 20:43:24 +0000
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <4BA110CB.5000906@areeda.com>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>,
	<4BA110CB.5000906@areeda.com>
Message-ID: <SNT121-W60B881402C69485099306962C0@phx.gbl>


Hello,
actually this was my first point for the project group. but they want a compressed small string. that's why I am only able to read SoP form and try to reach the original version. or at leasy I should find a simplfied or factorized version.

> Date: Wed, 17 Mar 2010 10:26:35 -0700
> From: newsreply at areeda.com
> CC: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Factorization of Logic Expressions
> 
> This might be a bit simplistic, but why not save the original expression
> as a string?  Then you could compare that with your processed version.
> 
> Joe
> 
> Nazim Oztahtaci wrote:
> > Hello everyone,
> > I would like to thank everyone first of all during their help when I became a new member to this group. I am working on Antlr and my task since last month. I am able to parse a logic expression such as a(b+c) into a tree, then I apply Demorgan and distribution so I reach a DNF representation: ab+ac.. The operators that I support are NOT, OR, AND, >, <. Timer and IF-ELSE statements. 
> > Now Im working on factorizing the DNF formed expressions back to originial because the user of my program will be able to read output data file which has only string representation of DNF expression. So I need to factorize the DNF expression. The way I try to do is putting the expression in a matrix such as
> >  a b c
> >  1 1 X  ab
> >  1 X 1  ac
> >
> > Then reading this matrix to find the most number of 1s and then re-check these rows if there are any more subsequences and so on.. I know that I cant reach the original expression everytime for the complicated expressions. Also for the reverse Demorgan, I cant use this matrix probably. I wanted to ask users of this mail group if they have any advice to me regarding an algorithm for this problem or a new way as solution.
> >
> > I know it is a bit hard and rare problem so even no help will be available for me, I appreciate for previous helps as well.
> >
> > Thank you all and good luck everyonje with their studies
> > Nazim
> >  		 	   		  
> > _________________________________________________________________
> > Yeni Windows 7: Size en uygun bilgisayar? bulun. Daha fazla bilgi edinin.
> > http://windows.microsoft.com/shop
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >   
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 		 	   		  
_________________________________________________________________
Yeni Windows 7: G?ndelik i?lerinizi basitle?tirin. Size en uygun bilgisayar? bulun.
http://windows.microsoft.com/shop

From jbb at acm.org  Wed Mar 17 14:58:25 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 17 Mar 2010 17:58:25 -0400
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <SNT121-W60B881402C69485099306962C0@phx.gbl>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>
	, <4BA110CB.5000906@areeda.com>
	<SNT121-W60B881402C69485099306962C0@phx.gbl>
Message-ID: <1268863105.3448.8.camel@gecko.home.org>

Greetings!
On Wed, 2010-03-17 at 20:43 +0000, Nazim Oztahtaci wrote:
> Hello,
> actually this was my first point for the project group. but they want a compressed small string. 
> that's why I am only able to read SoP form and try to reach the original version. or at leasy I
>  should find a simplfied or factorized version.

This is probably a really stupid suggestion, but have you tried the
toStringTree() method on your transformed AST? (altho this is likely to
print a polish prefix-like form...)

or maybe look into using StringTemplate, it is supposed to be built to
support this kind of thing....

or perhaps appropriate print statements within actions in a Tree Walking
grammar... (well i guess i really mean toString-like actions in child
rules, accumulate and glue together the children's strings and print
from the top-level rule, but i think this is the essence of using
StringTemplate)

> 
> > Date: Wed, 17 Mar 2010 10:26:35 -0700
> > From: newsreply at areeda.com
> > CC: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Factorization of Logic Expressions
> > 
> > This might be a bit simplistic, but why not save the original expression
> > as a string?  Then you could compare that with your processed version.
> > 
> > Joe
> > 
> > Nazim Oztahtaci wrote:
> > > Hello everyone,
> > > I would like to thank everyone first of all during their help when I became a new member to this group. I am working on Antlr and my task since last month. I am able to parse a logic expression such as a(b+c) into a tree, then I apply Demorgan and distribution so I reach a DNF representation: ab+ac.. The operators that I support are NOT, OR, AND, >, <. Timer and IF-ELSE statements. 
> > > Now Im working on factorizing the DNF formed expressions back to originial because the user of my program will be able to read output data file which has only string representation of DNF expression. So I need to factorize the DNF expression. The way I try to do is putting the expression in a matrix such as
> > >  a b c
> > >  1 1 X  ab
> > >  1 X 1  ac
> > >
> > > Then reading this matrix to find the most number of 1s and then re-check these rows if there are any more subsequences and so on.. I know that I cant reach the original expression everytime for the complicated expressions. Also for the reverse Demorgan, I cant use this matrix probably. I wanted to ask users of this mail group if they have any advice to me regarding an algorithm for this problem or a new way as solution.
> > >
> > > I know it is a bit hard and rare problem so even no help will be available for me, I appreciate for previous helps as well.
> > >
> > > Thank you all and good luck everyonje with their studies
> > > Nazim
> > >  		 	   		  

Hope this helps....
   -jbb



From hvmedhaj at gmail.com  Thu Mar 18 00:00:43 2010
From: hvmedhaj at gmail.com (venkat medhaj)
Date: Thu, 18 Mar 2010 03:00:43 -0400
Subject: [antlr-interest] gui tool ?
Message-ID: <f25256041003180000t3b94b704v57fc5d7ce5541687@mail.gmail.com>

Hi ,

I was wondering if there is any tool that outputs the AST in eclipse (other
than the command line I mean).
In the debugger section of the AntlrWorks, I noticed that we can the nice
little printed out representation but then I want to see if there is any way
I can get that in eclipse ?
Also, if there is any other GUI kinda tool that lets me see the AST, please
do let me know.

Thanks,
-V

From nazim_oztahtaci at hotmail.com  Thu Mar 18 00:56:04 2010
From: nazim_oztahtaci at hotmail.com (Nazim Oztahtaci)
Date: Thu, 18 Mar 2010 07:56:04 +0000
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <1268863105.3448.8.camel@gecko.home.org>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>,,
	<4BA110CB.5000906@areeda.com>,
	<SNT121-W60B881402C69485099306962C0@phx.gbl>,
	<1268863105.3448.8.camel@gecko.home.org>
Message-ID: <SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>


hi,

I guess my point is misunderstood. for example, my output is smt like abc+abd and this is the only information I save on a text file. Later on I will read this string, no more information I know about original diagram or what I did for DNF transformation. My program reads this string and factorize it to ab(c+d). I need to read all minterms, make some calculations(either in a matrix or there can be co-graphs maybe).I dont think I can use Antlr because I cant define this in a grammar, at least on my mind.
Maybe I have misunderstood your point. In the way you try to describe, StringTemplate, how could you factorize an expression like ab+acd+ace to a(b+c(d+e)). You know nothing about "a(b+c(d+e))" in the beginning.

> Subject: Re: [antlr-interest] Factorization of Logic Expressions
> From: jbb at acm.org
> To: nazim_oztahtaci at hotmail.com
> CC: newsreply at areeda.com; antlr-interest at antlr.org
> Date: Wed, 17 Mar 2010 17:58:25 -0400
> 
> Greetings!
> On Wed, 2010-03-17 at 20:43 +0000, Nazim Oztahtaci wrote:
> > Hello,
> > actually this was my first point for the project group. but they want a compressed small string. 
> > that's why I am only able to read SoP form and try to reach the original version. or at leasy I
> >  should find a simplfied or factorized version.
> 
> This is probably a really stupid suggestion, but have you tried the
> toStringTree() method on your transformed AST? (altho this is likely to
> print a polish prefix-like form...)
> 
> or maybe look into using StringTemplate, it is supposed to be built to
> support this kind of thing....
> 
> or perhaps appropriate print statements within actions in a Tree Walking
> grammar... (well i guess i really mean toString-like actions in child
> rules, accumulate and glue together the children's strings and print
> from the top-level rule, but i think this is the essence of using
> StringTemplate)
> 
> > 
> > > Date: Wed, 17 Mar 2010 10:26:35 -0700
> > > From: newsreply at areeda.com
> > > CC: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Factorization of Logic Expressions
> > > 
> > > This might be a bit simplistic, but why not save the original expression
> > > as a string?  Then you could compare that with your processed version.
> > > 
> > > Joe
> > > 
> > > Nazim Oztahtaci wrote:
> > > > Hello everyone,
> > > > I would like to thank everyone first of all during their help when I became a new member to this group. I am working on Antlr and my task since last month. I am able to parse a logic expression such as a(b+c) into a tree, then I apply Demorgan and distribution so I reach a DNF representation: ab+ac.. The operators that I support are NOT, OR, AND, >, <. Timer and IF-ELSE statements. 
> > > > Now Im working on factorizing the DNF formed expressions back to originial because the user of my program will be able to read output data file which has only string representation of DNF expression. So I need to factorize the DNF expression. The way I try to do is putting the expression in a matrix such as
> > > >  a b c
> > > >  1 1 X  ab
> > > >  1 X 1  ac
> > > >
> > > > Then reading this matrix to find the most number of 1s and then re-check these rows if there are any more subsequences and so on.. I know that I cant reach the original expression everytime for the complicated expressions. Also for the reverse Demorgan, I cant use this matrix probably. I wanted to ask users of this mail group if they have any advice to me regarding an algorithm for this problem or a new way as solution.
> > > >
> > > > I know it is a bit hard and rare problem so even no help will be available for me, I appreciate for previous helps as well.
> > > >
> > > > Thank you all and good luck everyonje with their studies
> > > > Nazim
> > > >  		 	   		  
> 
> Hope this helps....
>    -jbb
> 
> 
 		 	   		  
_________________________________________________________________
Windows Live Hotmail: Arkada?lar?n?z Facebook'taki g?ncellemelerinizi do?rudan Hotmail?'den al?r.
http://www.microsoft.com/windows/windowslive/see-it-in-action/social-network-basics.aspx?ocid=PID23461::T:WLMTAGL:ON:WL:tr-tr:SI_SB_4:092009

From jbb at acm.org  Thu Mar 18 05:31:04 2010
From: jbb at acm.org (John B. Brodie)
Date: Thu, 18 Mar 2010 08:31:04 -0400
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>
	,, <4BA110CB.5000906@areeda.com>
	,<SNT121-W60B881402C69485099306962C0@phx.gbl>
	,<1268863105.3448.8.camel@gecko.home.org>
	<SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>
Message-ID: <1268915464.18032.2.camel@gecko.home.org>

On Thu, 2010-03-18 at 07:56 +0000, Nazim Oztahtaci wrote:
> hi,
> 
> I guess my point is misunderstood. for example, my output is smt like
> abc+abd and this is the only information I save on a text file. Later
> on I will read this string, no more information I know about original
> diagram or what I did for DNF transformation. My program reads this
> string and factorize it to ab(c+d). I need to read all minterms, make
> some calculations(either in a matrix or there can be co-graphs
> maybe).I dont think I can use Antlr because I cant define this in a
> grammar, at least on my mind.

Sorry. I misunderstood what you are trying to do. My previous
suggestions are not relevant to your problem. Sorry.

   -jbb



From rug at maconomy.com  Thu Mar 18 08:55:12 2010
From: rug at maconomy.com (Rune Glerup)
Date: Thu, 18 Mar 2010 16:55:12 +0100
Subject: [antlr-interest] Serialization of ANTLR tree
Message-ID: <437BD6CADC498842A158A08DD48FAB8F01A3F916@mx-cph.maconomy.com>

We have a small language implemented with ANTLR 3.2.

We need to transmit a tree through RMI and therefore the tree
needs to be serializable. I am very curious to learn what the
best approach to serializing an ANTLR tree is.

I have noticed that BaseTree or CommonTree are does not
implement Serializable, while, in ANTLR2, BaseAST does implement
Serializable. - What is the rationale behind this?

- Is it "better" (in terms of performance and robustness) to:
  (a) rely on the default Java serialization mechanism that uses
      the internal representation of the AST nodes to serialize
      the AST, or
  (b) serialize to a text format and then use an ANTLR parser to
      parse that format upon deserialization, or
  (c) something clever I haven't thought of?

Thanks! :)

-- 
Rune Glerup


From newsreply at areeda.com  Thu Mar 18 08:59:00 2010
From: newsreply at areeda.com (Joseph Areeda)
Date: Thu, 18 Mar 2010 08:59:00 -0700
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <1268915464.18032.2.camel@gecko.home.org>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>	, ,
	<4BA110CB.5000906@areeda.com>	,
	<SNT121-W60B881402C69485099306962C0@phx.gbl>	,
	<1268863105.3448.8.camel@gecko.home.org>	<SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>
	<1268915464.18032.2.camel@gecko.home.org>
Message-ID: <4BA24DC4.9050605@areeda.com>

I'm confused (not an abnormal condition)

If I understand it, you start with a logical expression, parse, factor 
then save it. The question is how to recover the original, right?

If that is the problem, I'd say it is impossible. The original parse 
operation is a many to one transform as is the factoring. So given a 
factored expression, I don't see a way to choose among the many possible 
original expressions.

If I am understanding what you're trying to do, it would seem you have a 
couple of choices:
You could define some sort of canonical expression ie: factored, or 
expanded and call it "equivalent" or you can save additional information 
on the transforms you have done to arrived at the factored.

Good luck,
Joe

John B. Brodie wrote:
> On Thu, 2010-03-18 at 07:56 +0000, Nazim Oztahtaci wrote:
>   
>> hi,
>>
>> I guess my point is misunderstood. for example, my output is smt like
>> abc+abd and this is the only information I save on a text file. Later
>> on I will read this string, no more information I know about original
>> diagram or what I did for DNF transformation. My program reads this
>> string and factorize it to ab(c+d). I need to read all minterms, make
>> some calculations(either in a matrix or there can be co-graphs
>> maybe).I dont think I can use Antlr because I cant define this in a
>> grammar, at least on my mind.
>>     
>
> Sorry. I misunderstood what you are trying to do. My previous
> suggestions are not relevant to your problem. Sorry.
>
>    -jbb
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

From jimi at temporal-wave.com  Thu Mar 18 09:06:35 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Mar 2010 09:06:35 -0700
Subject: [antlr-interest] Serialization of ANTLR tree
In-Reply-To: <437BD6CADC498842A158A08DD48FAB8F01A3F916@mx-cph.maconomy.com>
Message-ID: <eecb7f7f6d210a4391d2f8029ba70571@temporal-wave.com>

Are you sure that you have defined the correct requirement here? You parse the source text and create tokens and the tree (which all reference back in to the original source text), then you are going to send a text representation of the tree over the wire and re-assemble it. Just send the original source text and parse it in to the AST at the receiving end.

You can certainly produce a text representation of the AST, but in order not to lose information, the format would quite likely end up being larger than the original input. So my answer would be "Doctor doctor, I broke my arm in 3 places! Don't go to those 3 places again!" ;-)

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Rune Glerup
> Sent: Thursday, March 18, 2010 8:55 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Serialization of ANTLR tree
> 
> We have a small language implemented with ANTLR 3.2.
> 
> We need to transmit a tree through RMI and therefore the tree
> needs to be serializable. I am very curious to learn what the
> best approach to serializing an ANTLR tree is.
> 
> I have noticed that BaseTree or CommonTree are does not
> implement Serializable, while, in ANTLR2, BaseAST does implement
> Serializable. - What is the rationale behind this?
> 
> - Is it "better" (in terms of performance and robustness) to:
>   (a) rely on the default Java serialization mechanism that uses
>       the internal representation of the AST nodes to serialize
>       the AST, or
>   (b) serialize to a text format and then use an ANTLR parser to
>       parse that format upon deserialization, or
>   (c) something clever I haven't thought of?
> 
> Thanks! :)
> 
> --
> Rune Glerup
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From rug at maconomy.com  Thu Mar 18 09:50:46 2010
From: rug at maconomy.com (Rune Glerup)
Date: Thu, 18 Mar 2010 17:50:46 +0100
Subject: [antlr-interest] Serialization of ANTLR tree
Message-ID: <437BD6CADC498842A158A08DD48FAB8F01A3F91A@mx-cph.maconomy.com>

Hi Jim

> Are you sure that you have defined the correct requirement here? You
> parse the source text and create tokens and the tree (which all
> reference back in to the original source text), then you are going to
> send a text representation of the tree over the wire and re-assemble
> it. Just send the original source text and parse it in to the AST at
> the receiving end.

That's a good point! :)

Actually, the source text is parsed and an AST is built.

This tree is then rewritten using a tree grammar. The tree grammar
resolves some kinds identifiers to values from the environment, while
leaving other kinds of identifiers unresolved for later processing.

The rewritten tree is then passed through RMI for further processing in
another environment.

The early identifier resolution needs to take place before transmitting
the tree over RMI, because that information is not readily available on
the other side.

So the tree I want to transmit is not necessarily the AST resulting from
just parsing the original source text.

-- 
Rune Glerup


From nazim_oztahtaci at hotmail.com  Thu Mar 18 11:29:11 2010
From: nazim_oztahtaci at hotmail.com (Nazim Oztahtaci)
Date: Thu, 18 Mar 2010 18:29:11 +0000
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <4BA24DC4.9050605@areeda.com>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>	,
	,,<4BA110CB.5000906@areeda.com>
	,,<SNT121-W60B881402C69485099306962C0@phx.gbl>
	,,<1268863105.3448.8.camel@gecko.home.org>
	<SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>,
	<1268915464.18032.2.camel@gecko.home.org>,
	<4BA24DC4.9050605@areeda.com>
Message-ID: <SNT121-W337A7384BB0D904A754C13962B0@phx.gbl>


Hello,

Actually Im aware that it is impossible to turn back to original version. The project owners agree on that and thats is why they accept results which are closer to the original one. However I need to make a factorization anyway. My suggestion is at least saving some small information to the DNF string like number of distributions. for example for a(b+c(d+e)) it is 2. so when Im making translation back to original, I will know that I will make one factorization, then one more because number is 2. However these steps make me confused, working with matrices, creating submatrices, make changes on them... that is why I wanted to find alternative ways. I dont think I can define a grammar like that. but wanted to ask the group if that's possible in Antlr. until I find out that, I will keep on working matrices I guess.

thanks for answers by the way for all

> Date: Thu, 18 Mar 2010 08:59:00 -0700
> From: newsreply at areeda.com
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Factorization of Logic Expressions
> 
> I'm confused (not an abnormal condition)
> 
> If I understand it, you start with a logical expression, parse, factor 
> then save it. The question is how to recover the original, right?
> 
> If that is the problem, I'd say it is impossible. The original parse 
> operation is a many to one transform as is the factoring. So given a 
> factored expression, I don't see a way to choose among the many possible 
> original expressions.
> 
> If I am understanding what you're trying to do, it would seem you have a 
> couple of choices:
> You could define some sort of canonical expression ie: factored, or 
> expanded and call it "equivalent" or you can save additional information 
> on the transforms you have done to arrived at the factored.
> 
> Good luck,
> Joe
> 
> John B. Brodie wrote:
> > On Thu, 2010-03-18 at 07:56 +0000, Nazim Oztahtaci wrote:
> >   
> >> hi,
> >>
> >> I guess my point is misunderstood. for example, my output is smt like
> >> abc+abd and this is the only information I save on a text file. Later
> >> on I will read this string, no more information I know about original
> >> diagram or what I did for DNF transformation. My program reads this
> >> string and factorize it to ab(c+d). I need to read all minterms, make
> >> some calculations(either in a matrix or there can be co-graphs
> >> maybe).I dont think I can use Antlr because I cant define this in a
> >> grammar, at least on my mind.
> >>     
> >
> > Sorry. I misunderstood what you are trying to do. My previous
> > suggestions are not relevant to your problem. Sorry.
> >
> >    -jbb
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >   
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 		 	   		  
_________________________________________________________________
Yeni Windows 7: Size en uygun bilgisayar? bulun. Daha fazla bilgi edinin.
http://windows.microsoft.com/shop

From espina.edgar at gmail.com  Thu Mar 18 11:10:44 2010
From: espina.edgar at gmail.com (Edgar Espina)
Date: Thu, 18 Mar 2010 15:10:44 -0300
Subject: [antlr-interest] gui tool ?
In-Reply-To: <f25256041003180000t3b94b704v57fc5d7ce5541687@mail.gmail.com>
References: <f25256041003180000t3b94b704v57fc5d7ce5541687@mail.gmail.com>
Message-ID: <92b42db61003181110x2fecef1frdcbf2c71e103db12@mail.gmail.com>

Try ANTLR IDE.

http://antlrv3ide.sourceforge.net/

Thanks,

edgar

On Thu, Mar 18, 2010 at 4:00 AM, venkat medhaj <hvmedhaj at gmail.com> wrote:

> Hi ,
>
> I was wondering if there is any tool that outputs the AST in eclipse (other
> than the command line I mean).
> In the debugger section of the AntlrWorks, I noticed that we can the nice
> little printed out representation but then I want to see if there is any
> way
> I can get that in eclipse ?
> Also, if there is any other GUI kinda tool that lets me see the AST, please
> do let me know.
>
> Thanks,
> -V
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
edgar

From aph at redhat.com  Thu Mar 18 10:42:48 2010
From: aph at redhat.com (Andrew Haley)
Date: Thu, 18 Mar 2010 17:42:48 +0000
Subject: [antlr-interest] ANTLR seems to be incorrectly generating a lexer
Message-ID: <4BA26618.2090707@redhat.com>

Consider this very simple grammar to recognize strings with no embedded '"'.
ANTLR seems to be generating an incorrect lexer for StringPart.

grammar small;

defaults	
    : StringPart EOF
    ;
	
StringPart
    :    ( ~ NonStringChars) *
    ;
    
fragment
NonStringChars
    :    '"'
    ;

Look inside smallLexer.java, and

    // $ANTLR start "StringPart"
    public final void mStringPart() throws RecognitionException {
        try {
            int _type = StringPart;
            int _channel = DEFAULT_TOKEN_CHANNEL;
            // /home/aph/ceylon/small.g:8:5: ( (~ NonStringChars )* )
            // /home/aph/ceylon/small.g:8:10: (~ NonStringChars )*
            {
            // /home/aph/ceylon/small.g:8:10: (~ NonStringChars )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>='\u0000' && LA1_0<='!')||(LA1_0>='#' && LA1_0<='\uFFFF')) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/aph/ceylon/small.g:8:12: ~ NonStringChars
            	    {

// ********************************************** Here's the bug:
            	    if ( (input.LA(1)>='\u0000' && input.LA(1)<='\u0004')||(input.LA(1)>='\u0006' && input.LA(1)<='\uFFFF') ) {
            	        input.consume();
// **************************************************************
            	    }
            	    else {
            	        MismatchedSetException mse = new MismatchedSetException(null,input);

What on Earth is
 
             input.LA(1)<='\u0004')||(input.LA(1)>='\u0006'

supposed to do?  It clearly excludes control character 5, but why?  If
I change the grammar for StringPart to

StringPart
    :    ( ~ '"') *
    ;
    
I get

            	    if ( (input.LA(1)>='\u0000' && input.LA(1)<='!')||(input.LA(1)>='#' && input.LA(1)<='\uFFFF') ) {
            	        input.consume();

which is right, I think.  So, replacing NonStringChars with '"' in the
grammar fixes the problem.

This is all very strange.  It seems that the parser generator is
inlining NonStringChars but getting it wrong.

This is ANTLR 3.2, by the way.

Andrew.

From scott at javadude.com  Thu Mar 18 09:12:18 2010
From: scott at javadude.com (Scott Stanchfield)
Date: Thu, 18 Mar 2010 12:12:18 -0400
Subject: [antlr-interest] Serialization of ANTLR tree
In-Reply-To: <eecb7f7f6d210a4391d2f8029ba70571@temporal-wave.com>
References: <437BD6CADC498842A158A08DD48FAB8F01A3F916@mx-cph.maconomy.com>
	<eecb7f7f6d210a4391d2f8029ba70571@temporal-wave.com>
Message-ID: <d19d16481003180912j28491e85re9ae042aead2c394@mail.gmail.com>

I'd second this (just pass the original source), even if you need to
parse on the sending side (for example, an editor with syntax checking
so the user gets fast feedback on the client side)
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Thu, Mar 18, 2010 at 12:06 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> Are you sure that you have defined the correct requirement here? You parse the source text and create tokens and the tree (which all reference back in to the original source text), then you are going to send a text representation of the tree over the wire and re-assemble it. Just send the original source text and parse it in to the AST at the receiving end.
>
> You can certainly produce a text representation of the AST, but in order not to lose information, the format would quite likely end up being larger than the original input. So my answer would be "Doctor doctor, I broke my arm in 3 places! Don't go to those 3 places again!" ;-)
>
> Jim

From gerald at certiv.net  Thu Mar 18 12:11:32 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Thu, 18 Mar 2010 12:11:32 -0700
Subject: [antlr-interest] Serialization of ANTLR tree
In-Reply-To: <437BD6CADC498842A158A08DD48FAB8F01A3F91A@mx-cph.maconomy.com>
References: <437BD6CADC498842A158A08DD48FAB8F01A3F91A@mx-cph.maconomy.com>
Message-ID: <4BA27AE4.5050404@certiv.net>

CodeHaus XStream can do serialization without requiring Serializable.  
Or, rewrite to use your own Ast nodes that implement Serializable.

On 3/18/2010 9:50 AM, Rune Glerup wrote:
>
> So the tree I want to transmit is not necessarily the AST resulting from
> just parsing the original source text.



From molson at the-olsons.net  Thu Mar 18 12:30:21 2010
From: molson at the-olsons.net (Mike Olson)
Date: Thu, 18 Mar 2010 13:30:21 -0600
Subject: [antlr-interest] Issues with conditional tree rewrites
Message-ID: <4BA27F4D.4050106@the-olsons.net>

Hello,

 I'm trying to rewrite an AST into a tree of my own object types (using 
TOKEN<MyClassName>) and long they way do some semantic validation.

 I was having great luck until I ran into this issue...which I think my 
be a bug.

 I have an incoming Tree that looks like this:

10(COLLECTION_LITERAL) 'Sequence'
 53(IMPLICIT_VARIABLE_REFERENCE) 'self'
 37(BOOLEAN_LITERAL) 'true'

This is my own little dump routine, what it is saying is I have a Token 
(of type COLLECTION_LITERAL) called "Sequence, with 2 children an 
IMPLICIT_VARIABLE_REFERENCE called self and a BOOLEAN_LITERAL called 
'true'.

I'm using the following rewrite rule to handle this:

   | ^(c=COLLECTION_LITERAL (e=exp)* )
               -> ^(EXPRESSION<CollectionLiteralAst>[$c.token,$c.text] $e*)

My result is:

10(COLLECTION_LITERAL) 'Collection[Sequence]'
   37(BOOLEAN_LITERAL) 'Boolean'

only the last of the original "exp"s is added to the new tree.

Because I own the class "CollectionLiteralAst" I overrode the "addChild" 
method to dump all calls to addChild, here is what I see when this 
production is matched:

"""
Adding Child: nil as class CommonTree
Post Add Count: 0
Adding Child: Boolean as class BooleanLiteralAst
Post Add Count: 1
"""

 From this, I see that addChild is called once with "nil", but that 
happens every time a sub tree is created (from what I can tell) and once 
for the "second" child in the original tree...

Just a note, when I test it with only 1 child it works fine.  When I 
test it with 3 children, only the last child is added.

I started looking into the generated code....once I got through the 
"matching" logic, I see the rewrite logic

"""
                       // parser\\My.g:101:20: ^( 
EXPRESSION[$c.token,$c.text] ( $e)* )
                       {
                       CommonTree root_1 = (CommonTree)adaptor.nil();
                       root_1 = (CommonTree)adaptor.becomeRoot(new 
CollectionLiteralAst(EXPRESSION, c.token, (c!=null?c.getText():null)), 
root_1);

                       // parser\\MyAst.g:101:77: ( $e)*
                       while ( stream_e.hasNext() ) {
                           adaptor.addChild(root_1, stream_e.nextTree());

                       }
                       stream_e.reset();

                       adaptor.addChild(root_0, root_1);
                       }
"""

I have stepped through the logic in  a debugger and "stream_e.hasNext()" 
only returns true the first time and "e.nextTree()" always returns the 
last of the children.

I then started looking above this in the generated code to see where 
"stream_e" comes from and found...

"""
                   RewriteRuleSubtreeStream stream_e=new 
RewriteRuleSubtreeStream(adaptor,"rule e",e!=null?e.tree:null);
"""

It looks like it is initialized from the value of "e.tree"....so here 
did that come from...a bit farther up and we see

"""
                       do {

///I CUT OUT A BUNCH OF STUFF HERE

                           switch (alt3) {
                           case 1 :
                               _last = (CommonTree)input.LT(1);
                               
pushFollow(FOLLOW_exp_in_literalExpression472);
                               e=exp();

                           default :
                               break loop3;
                           }
                       } while (true);
"""

 From this, it looks like that as it is trying to "match" my expression, 
"e" is set to every (rewritten) child in the source tree.  Once this 
loop ends, e is set to the last child...this explains why stream_e 
always returns only one result.

It would seem to me that this is a very common operation, I googled 
around a bit but could not find a related issue.

Please let me know if there are any know work arounds, or if I am just 
way off my rocker.

Thanks
Mike

-- 
Mike Olson


From jimi at temporal-wave.com  Thu Mar 18 12:42:02 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Mar 2010 12:42:02 -0700
Subject: [antlr-interest] Issues with conditional tree rewrites
In-Reply-To: <4BA27F4D.4050106@the-olsons.net>
Message-ID: <5669c3b8c00b71469c5e34cf8c65d174@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Olson


> 
> I'm using the following rewrite rule to handle this:
> 
>    | ^(c=COLLECTION_LITERAL (e=exp)* )


You need:

(e+=exp)*

Note the '+'

Jim





From rug at maconomy.com  Thu Mar 18 12:53:43 2010
From: rug at maconomy.com (Rune Glerup)
Date: Thu, 18 Mar 2010 20:53:43 +0100
Subject: [antlr-interest] Serialization of ANTLR tree
References: <eecb7f7f6d210a4391d2f8029ba70571@temporal-wave.com>
Message-ID: <437BD6CADC498842A158A08DD48FAB8F01A3F92A@mx-cph.maconomy.com>

Hi Jim

> Are you sure that you have defined the correct requirement here? You 
> parse the source text and create tokens and the tree (which all 
> reference back in to the original source text), then you are going to 
> send a text representation of the tree over the wire and re-assemble 
> it. Just send the original source text and parse it in to the AST at 
> the receiving end.

That's a good point! :)

Actually, the source text is parsed and an AST is built.

This tree is then rewritten using a tree grammar. The tree grammar
resolves some kinds identifiers to values from the environment, while
leaving other kinds of identifiers unresolved for later processing.

The rewritten tree is then passed through RMI for further processing in
another environment.

The early identifier resolution needs to take place before transmitting
the tree over RMI, because that information is not readily available on
the other side.

So the tree I want to transmit is not necessarily the AST resulting from
just parsing the original source text.

--
Rune Glerup


From ronburk at gmail.com  Thu Mar 18 14:45:32 2010
From: ronburk at gmail.com (Ron Burk)
Date: Thu, 18 Mar 2010 14:45:32 -0700
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <SNT121-W337A7384BB0D904A754C13962B0@phx.gbl>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>
	<4BA110CB.5000906@areeda.com>
	<SNT121-W60B881402C69485099306962C0@phx.gbl>
	<1268863105.3448.8.camel@gecko.home.org>
	<SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>
	<1268915464.18032.2.camel@gecko.home.org>
	<4BA24DC4.9050605@areeda.com>
	<SNT121-W337A7384BB0D904A754C13962B0@phx.gbl>
Message-ID: <30dde8ce1003181445lbbe0d6u2bb7d20545ed5195@mail.gmail.com>

Possibly what has many of us scratching our heads is:

a) What the purpose of all this might actually be
b) What project could actually not be able to spare enough
   bytes to store the original version.

> However these steps make me confused, working with
> matrices, creating submatrices, make changes on them

What makes me confused is why you're assuming these
steps help at all -- for example, is it somehow known in
advance that the input never happens to be in DNF in
the first place?

But probably at this point, all the interesting answers lie
in the metaquestions of: what are they actually trying to
accomplish overall and why?

From cross at kojeware.com  Thu Mar 18 15:18:15 2010
From: cross at kojeware.com (Cameron Ross)
Date: Thu, 18 Mar 2010 18:18:15 -0400
Subject: [antlr-interest] AntlrWorks color coding in debugger
Message-ID: <bc2b292f1003181518s7bb3977cka8eec06d4b23cdaf@mail.gmail.com>

What is the significance of the color coding within the Parse Tree view of
the debugger?  I see black, red, green and blue.
Cameron.

From molson at the-olsons.net  Thu Mar 18 15:49:19 2010
From: molson at the-olsons.net (Mike Olson)
Date: Thu, 18 Mar 2010 16:49:19 -0600
Subject: [antlr-interest] Issues with conditional tree rewrites
In-Reply-To: <5669c3b8c00b71469c5e34cf8c65d174@temporal-wave.com>
References: <5669c3b8c00b71469c5e34cf8c65d174@temporal-wave.com>
Message-ID: <4BA2ADEF.10507@the-olsons.net>

Jim Idle wrote:
>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Mike Olson
>>     
>
>
>   
>> I'm using the following rewrite rule to handle this:
>>
>>    | ^(c=COLLECTION_LITERAL (e=exp)* )
>>     
>
>
> You need:
>
> (e+=exp)*
>
> Note the '+'
>
>   

Or it could be as simple as that...:)

Thanks Jim.

Mike

> Jim
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


-- 
Mike Olson


From nazim_oztahtaci at hotmail.com  Thu Mar 18 16:00:35 2010
From: nazim_oztahtaci at hotmail.com (Nazim Oztahtaci)
Date: Thu, 18 Mar 2010 23:00:35 +0000
Subject: [antlr-interest] Factorization of Logic Expressions
In-Reply-To: <30dde8ce1003181445lbbe0d6u2bb7d20545ed5195@mail.gmail.com>
References: <SNT121-W44B6B97F41EA929F1FE92B962C0@phx.gbl>,
	<4BA110CB.5000906@areeda.com>,
	<SNT121-W60B881402C69485099306962C0@phx.gbl>,
	<1268863105.3448.8.camel@gecko.home.org>,
	<SNT121-W1173766AA075CE78522BDC962B0@phx.gbl>,
	<1268915464.18032.2.camel@gecko.home.org>,
	<4BA24DC4.9050605@areeda.com>,
	<SNT121-W337A7384BB0D904A754C13962B0@phx.gbl>,
	<30dde8ce1003181445lbbe0d6u2bb7d20545ed5195@mail.gmail.com>
Message-ID: <SNT121-W339C72F530951F2E565C23962B0@phx.gbl>


Hello Ron,

The thing is output file will be a text file and limited to 2KB. They want to put max. amount of input data in the string and do not want to waste byte to save the original expression. For ex, one user draws a(b+c), then draws d(e+f) and so on on different projects and would like to save all the output string which is in DNF form such as "diagram1=ab+ac#diagram2=de+df..." I asked them what is the matter if I save the original string as well so no need for factorization. but if I do that, amount of data will be increased and they do not want it. 
The purpose of this project is when a user creates the output string, it will be saved on the electronic control unit of an hardware. Let's say I make an electronic circuit in the program, load the output to control unit as the string form. after 1 year, the robot which uses this electronic hardware broken and a technician would like to check the electronic circuit structure of this robot to understand the problem. S/he will read the string back and want to see the diagram. But showing the DNF version is not a good solution because it will be complex to visualize and understand the diagram. That's is why a simplification/factorization is necessary. I suggested them to save original diagram and output string in an xml file, save it somewhere for future usage, but they dont want to offer space/system for this because there are hundreds of new electronic circuit diagrams produced everyday and if they save all these, things get messed up in future.
I assume that input will be in DNF always because it will be actually produced by the same program so if input is not in DNF form, then it means it is either changed or not a standard one.

I apologize for spamming to the group. I hope I dont disturb other users with these emails.
Thanks to all 
Nazim
 

> Date: Thu, 18 Mar 2010 14:45:32 -0700
> From: ronburk at gmail.com
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Factorization of Logic Expressions
> 
> Possibly what has many of us scratching our heads is:
> 
> a) What the purpose of all this might actually be
> b) What project could actually not be able to spare enough
>    bytes to store the original version.
> 
> > However these steps make me confused, working with
> > matrices, creating submatrices, make changes on them
> 
> What makes me confused is why you're assuming these
> steps help at all -- for example, is it somehow known in
> advance that the input never happens to be in DNF in
> the first place?
> 
> But probably at this point, all the interesting answers lie
> in the metaquestions of: what are they actually trying to
> accomplish overall and why?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
 		 	   		  
_________________________________________________________________
Yeni Windows 7: Size en uygun bilgisayar? bulun. Daha fazla bilgi edinin.
http://windows.microsoft.com/shop

From espina.edgar at gmail.com  Thu Mar 18 16:38:24 2010
From: espina.edgar at gmail.com (Edgar Espina)
Date: Thu, 18 Mar 2010 20:38:24 -0300
Subject: [antlr-interest] ANTLR IDE 2.0.1 is out!
Message-ID: <92b42db61003181638j6e922277v5d1d2a01af5dacb9@mail.gmail.com>

Hi,

 Just a bug fix release with minors improvements:

 http://antlrv3ide.sourceforge.net/

 Regards,

-- 
edgar

From swalton at cs.utah.edu  Thu Mar 18 16:54:52 2010
From: swalton at cs.utah.edu (swalton)
Date: Thu, 18 Mar 2010 17:54:52 -0600
Subject: [antlr-interest] Help with semantic actions commit
Message-ID: <8425f0c089bcf3c8a7323db0a4db5772@cs.utah.edu>

I derived my grammar from Terry's C grammar.  I have added a lot of
semantic actions and kept the typedef symbol definition.  I have run into a
problem and need help.  Consider the following:

typedef int uint32_t;
typedef uint32_t result_t;

I can have any number of these typedefs, but this case is sufficient to
illustrate the problem I am encountering.  The grammar looks ahead beyond
the first semicolon before committing the 'uint32_t' in the scope table. 
Needless to say, the second line always fails.  I watched step-by-step,
placing System.err.print()'s along the way to find out when the
'$Symbols::types.add(name);' is called.  The test (boolean
isTypeName(String name)) always occurs *before* 'uint32_t' is stored.  I
added a { addName(name) }? test (which always returns true) to see if I
could force an execution of the semantic action without success.

How do I get the symbol committed?  
How do I keep ANTLR from looking so far ahead?

Any help is appreciated.  This is a major roadblock.

-Sean Walton
PhD Student, SoC, U of U

From hvmedhaj at gmail.com  Fri Mar 19 09:46:39 2010
From: hvmedhaj at gmail.com (venkat medhaj)
Date: Fri, 19 Mar 2010 12:46:39 -0400
Subject: [antlr-interest] sematic analysis ?
Message-ID: <f25256041003190946i3b8edc35tb40890617ce755c1@mail.gmail.com>

Hi,

I am kinda new to antlr and I wonder how to perform symantic analysis using
the tool. I was able to generate the AST output for a small grammar and now
I want to check for the type check errors. For ex: if I have a statement
that looks something like

int a + b , I just have to make sure that both are of type int.

or if I define a twice in my input, then thats a redefine error. Can some
one give me some insight into this ?

Thanks,
-Venkat.

From parrt at cs.usfca.edu  Fri Mar 19 10:00:57 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 19 Mar 2010 10:00:57 -0700
Subject: [antlr-interest] Help with semantic actions commit
In-Reply-To: <8425f0c089bcf3c8a7323db0a4db5772@cs.utah.edu>
References: <8425f0c089bcf3c8a7323db0a4db5772@cs.utah.edu>
Message-ID: <3EEABBB8-52B3-4E2E-B0E2-176038CE4CB2@cs.usfca.edu>

hi. antlr shouldn't see past actions to sem preds.  are you sure that  
the define sym action is in every path?  Do you get an error about  
insufficiently uncovered alts?

Ter
On Mar 18, 2010, at 4:54 PM, swalton wrote:

> I derived my grammar from Terry's C grammar.  I have added a lot of
> semantic actions and kept the typedef symbol definition.  I have run  
> into a
> problem and need help.  Consider the following:
>
> typedef int uint32_t;
> typedef uint32_t result_t;
>
> I can have any number of these typedefs, but this case is sufficient  
> to
> illustrate the problem I am encountering.  The grammar looks ahead  
> beyond
> the first semicolon before committing the 'uint32_t' in the scope  
> table.
> Needless to say, the second line always fails.  I watched step-by- 
> step,
> placing System.err.print()'s along the way to find out when the
> '$Symbols::types.add(name);' is called.  The test (boolean
> isTypeName(String name)) always occurs *before* 'uint32_t' is  
> stored.  I
> added a { addName(name) }? test (which always returns true) to see  
> if I
> could force an execution of the semantic action without success.
>
> How do I get the symbol committed?
> How do I keep ANTLR from looking so far ahead?
>
> Any help is appreciated.  This is a major roadblock.
>
> -Sean Walton
> PhD Student, SoC, U of U
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gerald at certiv.net  Fri Mar 19 10:01:08 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 19 Mar 2010 10:01:08 -0700
Subject: [antlr-interest] Problem removing warning
Message-ID: <4BA3ADD4.9020302@certiv.net>

Having a bit of difficulty in figuring out how to unambiguously parse 
this into an AST.
Order of the elements is significant, the parens are significant, and 
the leading dot is significant.

   (.buf_unittest.complex_opt1).foo;
   .buf_unittest.complex_opt1.fum;
   (buf_unittest.complex_opt1).(.buf_unittest.quux);
   (.buf_unittest.complex_opt1).(buf_unittest.corge).qux;
   (complex_opt2).baz;
   (complex_opt2).(grault);
   (complex_opt2).bar.foo;
   (complex_opt2).bar.(quux);
   (complex_opt2).bar.(buf_unittest.corge).qux;
   (complex_opt2).(garply).foo;
   (complex_opt2).(garply).(.buf_unittest.quux);
   (complex_opt2).(buf_unittest.garply).(corge).qux;
   (ComplexOptionType2.ComplexOptionType4.complex_opt4).waldo;
   (complex_opt2).fred.waldo;
   (buf_unittest.complex_opt3).qux;
   (complex_opt3).complexoptiontype5.plugh;
   (complexopt6).xyzzy;

The rule ident_parens following appears to work, but Antlr is 
complaining "Decision can match input such as "'.' ID" using multiple 
alternatives: 1, 2" on both identN and identO.  I can see the 
theoretical overlap, but cannot tell if the warning is actually 
significant or how to fix the rules to avoid the warning.

ident_parens
     : (identM | identN | identO ) ('.' ( identM | identO ) )*
     ;

identM
     :  '(' '.' ipd+=ID ( '.' ipd+=ID )* ')'   -> ^( IDENT_PARENSDOT $ipd+ )
     |  '(' ip+=ID ( '.' ip+=ID )* ')'         -> ^( IDENT_PARENS $ip+ )
     ;

identN
     : '.' id+=ID ( '.' id+=ID )*              -> ^( IDENT_DOT $id+ )
     ;

identO
     : i+=ID ( '.' i+=ID )*                    -> ^( IDENT $i+ )
     ;


Thanks...

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: PBTest.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100319/5e7fa597/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: pbtest.txt
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20100319/5e7fa597/attachment.txt 

From kaleb.pederson at gmail.com  Fri Mar 19 10:37:05 2010
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Fri, 19 Mar 2010 10:37:05 -0700
Subject: [antlr-interest] sematic analysis ?
In-Reply-To: <f25256041003190946i3b8edc35tb40890617ce755c1@mail.gmail.com>
References: <f25256041003190946i3b8edc35tb40890617ce755c1@mail.gmail.com>
Message-ID: <f14c01621003191037q4264e68cp21c9605e02f5f3d9@mail.gmail.com>

Venkat,

One way to do what you've mentioned is to create a tree walker which
walks the AST.  Then, within the AST, you'll need to do a couple of
things.

First, you need to populate a symbol table.  That symbol table will
store the different objects/variables that are declared.  In your
example, it would store a and b, their values, if known, and their
types.

Second, you need to do an analysis of the structure while using the
symbol table.  Here's a fragment from one of my tree walking grammars:

plusMinusExpression returns [Type type]
	:	^(PLUS lhs=baseExpression rhs=baseExpression)
		{
			typeChecker.assertIsNumericType($lhs.type);
			typeChecker.assertIsNumericType($rhs.type);
			typeChecker.assertEqualTypes($lhs.type, $rhs.type);
			$type = $lhs.type;
		}
		/* ... */
		;

The above calls on my typeChecker to verify that both types are
numeric (I don't use + for concatenation) and I assert that the types
are equal (since I don't have any automatic casting from int, to
double, etc.). All of my type checking happens in a single pass of a
tree walker, so it's nicely componentized.

I hope that helps.

--
Kaleb Pederson

http://kalebpederson.com
http://twitter.com/kalebpederson


On Fri, Mar 19, 2010 at 9:46 AM, venkat medhaj <hvmedhaj at gmail.com> wrote:
> Hi,
>
> I am kinda new to antlr and I wonder how to perform symantic analysis using
> the tool. I was able to generate the AST output for a small grammar and now
> I want to check for the type check errors. For ex: if I have a statement
> that looks something like
>
> int a + b , I just have to make sure that both are of type int.
>
> or if I define a twice in my input, then thats a redefine error. Can some
> one give me some insight into this ?
>
> Thanks,
> -Venkat.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Mar 19 10:41:58 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 19 Mar 2010 10:41:58 -0700
Subject: [antlr-interest] Problem removing warning
In-Reply-To: <4BA3ADD4.9020302@certiv.net>
Message-ID: <6f63c73e924e01469b9e553c8330c688@temporal-wave.com>

That will give a tree that isn't very useful ;-) You need to express this in LL form such that the things that can be elements of your compound appear at the bottom of the tree. Then use DOT and not '.', make that be the root node and do not try to impose any semantic verification via syntactical specifications. You get:


grammar T;

options { output=AST; }

tokens {	EXPR; FUNC;}

aago 	:	 (expr NL)+ EOF
		->^(EXPR expr)+
	;

expr
 : element (DOT^ element)* 
 ;

element
	: LPAREN! expr RPAREN!  // Sometimes you want to preserve the LPAREN here
	| ID (LPAREN^ expr RPAREN)? // function call
;

LPAREN 	:	 '('			;
RPAREN  :	 ')'			;
ID 	:	 ('A'..'Z')+ 		;
DOT	: 	'.'			;
NL	:	('\n'|'\r')+		; 
ANY 	:	 . {skip();}		;


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gerald Rosenberg
> Sent: Friday, March 19, 2010 10:01 AM
> To: antlr-interest interest
> Subject: [antlr-interest] Problem removing warning
> 
> Having a bit of difficulty in figuring out how to unambiguously parse
> this into an AST.
> Order of the elements is significant, the parens are significant, and
> the leading dot is significant.
> 
>    (.buf_unittest.complex_opt1).foo;
>    .buf_unittest.complex_opt1.fum;
>    (buf_unittest.complex_opt1).(.buf_unittest.quux);
>    (.buf_unittest.complex_opt1).(buf_unittest.corge).qux;
>    (complex_opt2).baz;
>    (complex_opt2).(grault);
>    (complex_opt2).bar.foo;
>    (complex_opt2).bar.(quux);
>    (complex_opt2).bar.(buf_unittest.corge).qux;
>    (complex_opt2).(garply).foo;
>    (complex_opt2).(garply).(.buf_unittest.quux);
>    (complex_opt2).(buf_unittest.garply).(corge).qux;
>    (ComplexOptionType2.ComplexOptionType4.complex_opt4).waldo;
>    (complex_opt2).fred.waldo;
>    (buf_unittest.complex_opt3).qux;
>    (complex_opt3).complexoptiontype5.plugh;
>    (complexopt6).xyzzy;
> 
> The rule ident_parens following appears to work, but Antlr is
> complaining "Decision can match input such as "'.' ID" using multiple
> alternatives: 1, 2" on both identN and identO.  I can see the
> theoretical overlap, but cannot tell if the warning is actually
> significant or how to fix the rules to avoid the warning.
> 
> ident_parens
>      : (identM | identN | identO ) ('.' ( identM | identO ) )*
>      ;
> 
> identM
>      :  '(' '.' ipd+=ID ( '.' ipd+=ID )* ')'   -> ^( IDENT_PARENSDOT
> $ipd+ )
>      |  '(' ip+=ID ( '.' ip+=ID )* ')'         -> ^( IDENT_PARENS $ip+
> )
>      ;
> 
> identN
>      : '.' id+=ID ( '.' id+=ID )*              -> ^( IDENT_DOT $id+ )
>      ;
> 
> identO
>      : i+=ID ( '.' i+=ID )*                    -> ^( IDENT $i+ )
>      ;
> 
> 
> Thanks...





From kaleb.pederson at gmail.com  Fri Mar 19 10:51:50 2010
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Fri, 19 Mar 2010 10:51:50 -0700
Subject: [antlr-interest] sematic analysis ?
In-Reply-To: <f14c01621003191037q4264e68cp21c9605e02f5f3d9@mail.gmail.com>
References: <f25256041003190946i3b8edc35tb40890617ce755c1@mail.gmail.com>
	<f14c01621003191037q4264e68cp21c9605e02f5f3d9@mail.gmail.com>
Message-ID: <f14c01621003191051t16672e6amb59b4d32aa626969@mail.gmail.com>

On Fri, Mar 19, 2010 at 10:37 AM, Kaleb Pederson
<kaleb.pederson at gmail.com> wrote:
> Venkat,
>
> One way to do what you've mentioned is to create a tree walker which
> walks the AST. ?Then, within the AST, you'll need to do a couple of
> things.
>
> First, you need to populate a symbol table. ?That symbol table will
> store the different objects/variables that are declared. ?In your
> example, it would store a and b, their values, if known, and their
> types.
>
> Second, you need to do an analysis of the structure while using the
> symbol table. ?Here's a fragment from one of my tree walking grammars:
>
> plusMinusExpression returns [Type type]
> ? ? ? ?: ? ? ? ^(PLUS lhs=baseExpression rhs=baseExpression)
> ? ? ? ? ? ? ? ?{
> ? ? ? ? ? ? ? ? ? ? ? ?typeChecker.assertIsNumericType($lhs.type);
> ? ? ? ? ? ? ? ? ? ? ? ?typeChecker.assertIsNumericType($rhs.type);
> ? ? ? ? ? ? ? ? ? ? ? ?typeChecker.assertEqualTypes($lhs.type, $rhs.type);
> ? ? ? ? ? ? ? ? ? ? ? ?$type = $lhs.type;
> ? ? ? ? ? ? ? ?}
> ? ? ? ? ? ? ? ?/* ... */
> ? ? ? ? ? ? ? ?;

I realized that doesn't fully explain everything. In the various
expressions, I resolve any necessary symbols and then resolve their
types by:

* using the symbol table if it's a variable, OR
* using the type of the literal

I then return the type of the expression so I can verify that the
types match throughout the entire expression.

--
Kaleb Pederson

http://kalebpederson.com
http://twitter.com/kalebpederson

From gerald at certiv.net  Fri Mar 19 11:24:10 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 19 Mar 2010 11:24:10 -0700
Subject: [antlr-interest] Problem removing warning
In-Reply-To: <6f63c73e924e01469b9e553c8330c688@temporal-wave.com>
References: <6f63c73e924e01469b9e553c8330c688@temporal-wave.com>
Message-ID: <4BA3C14A.60405@certiv.net>

Thanks, Jim.  Please understand though that I dumbed down the test 
grammar to minimally illustrate the problem I was asking about - my 
actual grammar shapes a much more complex tree and uses "tidy 
tokens";).  The revision you suggest unfortunately looses a bit too much 
intrinsic information that would be difficult to infer if at all in a 
later pass.  As I mentioned, the order, existence and position of the 
parens and leading dots are significant - (foo), .foo, (.foo), and foo 
are not equivalent and need to be distinctly represented in the tree.

On 3/19/2010 10:41 AM, Jim Idle wrote:
> That will give a tree that isn't very useful ;-) You need to express this in LL form such that the things that can be elements of your compound appear at the bottom of the tree. Then use DOT and not '.', make that be the root node and do not try to impose any semantic verification via syntactical specifications. You get:
>
>
> grammar T;
>
> options { output=AST; }
>
> tokens {	EXPR; FUNC;}
>
> aago 	:	 (expr NL)+ EOF
> 		->^(EXPR expr)+
> 	;
>
> expr
>   : element (DOT^ element)*
>   ;
>
> element
> 	: LPAREN! expr RPAREN!  // Sometimes you want to preserve the LPAREN here
> 	| ID (LPAREN^ expr RPAREN)? // function call
> ;
>
> LPAREN 	:	 '('			;
> RPAREN  :	 ')'			;
> ID 	:	 ('A'..'Z')+ 		;
> DOT	: 	'.'			;
> NL	:	('\n'|'\r')+		;
> ANY 	:	 . {skip();}		;
>
>
>    
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Gerald Rosenberg
>> Sent: Friday, March 19, 2010 10:01 AM
>> To: antlr-interest interest
>> Subject: [antlr-interest] Problem removing warning
>>
>> Having a bit of difficulty in figuring out how to unambiguously parse
>> this into an AST.
>> Order of the elements is significant, the parens are significant, and
>> the leading dot is significant.
>>
>>     (.buf_unittest.complex_opt1).foo;
>>     .buf_unittest.complex_opt1.fum;
>>     (buf_unittest.complex_opt1).(.buf_unittest.quux);
>>     (.buf_unittest.complex_opt1).(buf_unittest.corge).qux;
>>     (complex_opt2).baz;
>>     (complex_opt2).(grault);
>>     (complex_opt2).bar.foo;
>>     (complex_opt2).bar.(quux);
>>     (complex_opt2).bar.(buf_unittest.corge).qux;
>>     (complex_opt2).(garply).foo;
>>     (complex_opt2).(garply).(.buf_unittest.quux);
>>     (complex_opt2).(buf_unittest.garply).(corge).qux;
>>     (ComplexOptionType2.ComplexOptionType4.complex_opt4).waldo;
>>     (complex_opt2).fred.waldo;
>>     (buf_unittest.complex_opt3).qux;
>>     (complex_opt3).complexoptiontype5.plugh;
>>     (complexopt6).xyzzy;
>>
>> The rule ident_parens following appears to work, but Antlr is
>> complaining "Decision can match input such as "'.' ID" using multiple
>> alternatives: 1, 2" on both identN and identO.  I can see the
>> theoretical overlap, but cannot tell if the warning is actually
>> significant or how to fix the rules to avoid the warning.
>>
>> ident_parens
>>       : (identM | identN | identO ) ('.' ( identM | identO ) )*
>>       ;
>>
>> identM
>>       :  '(' '.' ipd+=ID ( '.' ipd+=ID )* ')'   ->  ^( IDENT_PARENSDOT
>> $ipd+ )
>>       |  '(' ip+=ID ( '.' ip+=ID )* ')'         ->  ^( IDENT_PARENS $ip+
>> )
>>       ;
>>
>> identN
>>       : '.' id+=ID ( '.' id+=ID )*              ->  ^( IDENT_DOT $id+ )
>>       ;
>>
>> identO
>>       : i+=ID ( '.' i+=ID )*                    ->  ^( IDENT $i+ )
>>       ;
>>
>>
>> Thanks...
>>      
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>    




From jimi at temporal-wave.com  Fri Mar 19 11:38:37 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 19 Mar 2010 11:38:37 -0700
Subject: [antlr-interest] Problem removing warning
In-Reply-To: <4BA3C14A.60405@certiv.net>
Message-ID: <fb57e84a3b8e42489c75c7750ee459f2@temporal-wave.com>

Yes - you can retain all that stuff, but if you try to do it the way you have it, you won't get a tree that makes sense. You can see a much more complicated example using my C# parser, which is online at:

http://www.temporal-wave.com/index.php?option=com_psrrun&view=psrrun&Itemid=58

All you need do is not kill the information I am killing. (and add | DOT element to the expr). However, you know what you want :-)

jim

> -----Original Message-----
> From: Gerald Rosenberg [mailto:gerald at certiv.net]
> Sent: Friday, March 19, 2010 11:24 AM
> To: Jim Idle
> Cc: antlr-interest interest
> Subject: Re: [antlr-interest] Problem removing warning
> 
> Thanks, Jim.  Please understand though that I dumbed down the test
> grammar to minimally illustrate the problem I was asking about - my
> actual grammar shapes a much more complex tree and uses "tidy
> tokens";).  The revision you suggest unfortunately looses a bit too
> much
> intrinsic information that would be difficult to infer if at all in a
> later pass.  As I mentioned, the order, existence and position of the
> parens and leading dots are significant - (foo), .foo, (.foo), and foo
> are not equivalent and need to be distinctly represented in the tree.
> 
> On 3/19/2010 10:41 AM, Jim Idle wrote:
> > That will give a tree that isn't very useful ;-) You need to express
> this in LL form such that the things that can be elements of your
> compound appear at the bottom of the tree. Then use DOT and not '.',
> make that be the root node and do not try to impose any semantic
> verification via syntactical specifications. You get:
> >
> >
> > grammar T;
> >
> > options { output=AST; }
> >
> > tokens {	EXPR; FUNC;}
> >
> > aago 	:	 (expr NL)+ EOF
> > 		->^(EXPR expr)+
> > 	;
> >
> > expr
> >   : element (DOT^ element)*
> >   ;
> >
> > element
> > 	: LPAREN! expr RPAREN!  // Sometimes you want to preserve the
> LPAREN here
> > 	| ID (LPAREN^ expr RPAREN)? // function call
> > ;
> >
> > LPAREN 	:	 '('			;
> > RPAREN  :	 ')'			;
> > ID 	:	 ('A'..'Z')+ 		;
> > DOT	: 	'.'			;
> > NL	:	('\n'|'\r')+		;
> > ANY 	:	 . {skip();}		;
> >
> >
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Gerald Rosenberg
> >> Sent: Friday, March 19, 2010 10:01 AM
> >> To: antlr-interest interest
> >> Subject: [antlr-interest] Problem removing warning
> >>
> >> Having a bit of difficulty in figuring out how to unambiguously
> parse
> >> this into an AST.
> >> Order of the elements is significant, the parens are significant,
> and
> >> the leading dot is significant.
> >>
> >>     (.buf_unittest.complex_opt1).foo;
> >>     .buf_unittest.complex_opt1.fum;
> >>     (buf_unittest.complex_opt1).(.buf_unittest.quux);
> >>     (.buf_unittest.complex_opt1).(buf_unittest.corge).qux;
> >>     (complex_opt2).baz;
> >>     (complex_opt2).(grault);
> >>     (complex_opt2).bar.foo;
> >>     (complex_opt2).bar.(quux);
> >>     (complex_opt2).bar.(buf_unittest.corge).qux;
> >>     (complex_opt2).(garply).foo;
> >>     (complex_opt2).(garply).(.buf_unittest.quux);
> >>     (complex_opt2).(buf_unittest.garply).(corge).qux;
> >>     (ComplexOptionType2.ComplexOptionType4.complex_opt4).waldo;
> >>     (complex_opt2).fred.waldo;
> >>     (buf_unittest.complex_opt3).qux;
> >>     (complex_opt3).complexoptiontype5.plugh;
> >>     (complexopt6).xyzzy;
> >>
> >> The rule ident_parens following appears to work, but Antlr is
> >> complaining "Decision can match input such as "'.' ID" using
> multiple
> >> alternatives: 1, 2" on both identN and identO.  I can see the
> >> theoretical overlap, but cannot tell if the warning is actually
> >> significant or how to fix the rules to avoid the warning.
> >>
> >> ident_parens
> >>       : (identM | identN | identO ) ('.' ( identM | identO ) )*
> >>       ;
> >>
> >> identM
> >>       :  '(' '.' ipd+=ID ( '.' ipd+=ID )* ')'   ->  ^(
> IDENT_PARENSDOT
> >> $ipd+ )
> >>       |  '(' ip+=ID ( '.' ip+=ID )* ')'         ->  ^( IDENT_PARENS
> $ip+
> >> )
> >>       ;
> >>
> >> identN
> >>       : '.' id+=ID ( '.' id+=ID )*              ->  ^( IDENT_DOT
> $id+ )
> >>       ;
> >>
> >> identO
> >>       : i+=ID ( '.' i+=ID )*                    ->  ^( IDENT $i+ )
> >>       ;
> >>
> >>
> >> Thanks...
> >>
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> >
> 
> 





From wkoscho at gmail.com  Fri Mar 19 12:26:41 2010
From: wkoscho at gmail.com (William Koscho)
Date: Fri, 19 Mar 2010 15:26:41 -0400
Subject: [antlr-interest] THelp w/ Tree Grammer - Rule Action Error
Message-ID: <d8e975631003191226m6de424e0rfa1b408446ea5995@mail.gmail.com>

Hi All,

I have a tree grammar, and am trying to just print out some information from
the tree.  This works fine for matching tokens, but not when matching the
rules.  I'm hoping someone can help explain why this is giving me a
NullPointerException and how to correct it:

Tree Grammar:

// the $i.text causes the NullPointerException, when I $i.text, it works
fine
interfaceDeclaration:  ^(i=interfaceType ID) { System.out.println($i.text +
": " + $ID.text); };

interfaceType:
   PROVIDES
 | REQUIRES;

Corresponding Parser Grammar:

interfaceDeclaration:   interfaceType ID -> ^(interfaceType ID);
interfaceType:
   'provides' -> PROVIDES
 | 'requires' -> REQUIRES;

Thanks very much,
Bill

From jbb at acm.org  Fri Mar 19 12:40:36 2010
From: jbb at acm.org (John B. Brodie)
Date: Fri, 19 Mar 2010 15:40:36 -0400
Subject: [antlr-interest] THelp w/ Tree Grammer - Rule Action Error
In-Reply-To: <d8e975631003191226m6de424e0rfa1b408446ea5995@mail.gmail.com>
References: <d8e975631003191226m6de424e0rfa1b408446ea5995@mail.gmail.com>
Message-ID: <1269027636.13799.6.camel@gecko.home.org>

Greetings!

On Fri, 2010-03-19 at 15:26 -0400, William Koscho wrote:
> Hi All,
> 
> I have a tree grammar, and am trying to just print out some information from
> the tree.  This works fine for matching tokens, but not when matching the
> rules.  I'm hoping someone can help explain why this is giving me a
> NullPointerException and how to correct it:
> 
> Tree Grammar:
> 
> // the $i.text causes the NullPointerException, when I $i.text, it works
> fine
> interfaceDeclaration:  ^(i=interfaceType ID) { System.out.println($i.text +
> ": " + $ID.text); };
> 
> interfaceType:
>    PROVIDES
>  | REQUIRES;
> 
> Corresponding Parser Grammar:
> 
> interfaceDeclaration:   interfaceType ID -> ^(interfaceType ID);
> interfaceType:
>    'provides' -> PROVIDES
>  | 'requires' -> REQUIRES;
> 

I believe your interfaceType parser rule does not initialize the text of
the token it creates for the tree node. You should be able to inspect
the generated code and verify this....

I believe you want your interfaceType parser rule to be:

interfaceType : 
    ( k='provides' -> PROVIDES[$k] ) 
  | ( k='requires' -> REQUIRES[$k] )
  ;

if i recall correctly, using the [] stuff sets both the text and the
location of the generated virtual token.

and oh by the way are you sure you really need the virtual tokens?

hope this helps...
   -jbb



From gerald at certiv.net  Fri Mar 19 13:32:22 2010
From: gerald at certiv.net (Gerald Rosenberg)
Date: Fri, 19 Mar 2010 13:32:22 -0700
Subject: [antlr-interest] Problem removing warning
In-Reply-To: <fb57e84a3b8e42489c75c7750ee459f2@temporal-wave.com>
References: <fb57e84a3b8e42489c75c7750ee459f2@temporal-wave.com>
Message-ID: <4BA3DF56.4070600@certiv.net>


From hvmedhaj at gmail.com  Fri Mar 19 14:01:27 2010
From: hvmedhaj at gmail.com (venkat medhaj)
Date: Fri, 19 Mar 2010 17:01:27 -0400
Subject: [antlr-interest] semantic analysis
Message-ID: <f25256041003191401g1d61ea7bl8c84857bd7e38eee@mail.gmail.com>

Hi,

I have a simple grammar for which I was able to walk through the AST and
printout the input text to the console. I learned that we need to put the
information in the symbol table and do the semantic analysis from there on.
How , what information should I put into the symbol table and how do I check
for type errors ?

Let say, I have something like a + b, given that I am able to walk through
the AST, how do I do the type checking for this little case?
Any simple code snippets would be appreciated.

Thanks.

From jbb at acm.org  Fri Mar 19 17:35:27 2010
From: jbb at acm.org (John B. Brodie)
Date: Fri, 19 Mar 2010 20:35:27 -0400
Subject: [antlr-interest] semantic analysis
In-Reply-To: <f25256041003191401g1d61ea7bl8c84857bd7e38eee@mail.gmail.com>
References: <f25256041003191401g1d61ea7bl8c84857bd7e38eee@mail.gmail.com>
Message-ID: <1269045327.19208.7.camel@gecko.home.org>

Greetings!

On Fri, 2010-03-19 at 17:01 -0400, venkat medhaj wrote:
> Hi,
> 
> I have a simple grammar for which I was able to walk through the AST and
> printout the input text to the console. I learned that we need to put the
> information in the symbol table and do the semantic analysis from there on.
> How , what information should I put into the symbol table and how do I check
> for type errors ?
> 
> Let say, I have something like a + b, given that I am able to walk through
> the AST, how do I do the type checking for this little case?
> Any simple code snippets would be appreciated.
> 

Attached please find an example Expression parsing suite for ANTLRv3. I
intended for this to be a simple tutorial example for tree rewriting. It
is complete, but not documented. So, as is, it is not a very good
example, but hopefully you can see one possibility for your solution (i
hope).

It has 4 phases: 1) parsing, 2) type checking, 3) instruction selection,
and 4) evaluation. There is a grammar that drives each phase. Probably
start by looking at the Main.java and try to figure out where we go from
there... (sorry for the lack of commentary/documentation)

Hope this helps....
   -jbb

-------------- next part --------------
A non-text attachment was scrubbed...
Name: expressions.tgz
Type: application/x-compressed-tar
Size: 8571 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100319/984caea2/attachment.bin 

From Stefan.Chrobot at sabre.com  Mon Mar 22 07:57:06 2010
From: Stefan.Chrobot at sabre.com (Chrobot, Stefan)
Date: Mon, 22 Mar 2010 14:57:06 -0000
Subject: [antlr-interest] Need help with rewrite rules
Message-ID: <664A13B770987A4BB77A103AF4174ECC0405EFE4@sglonms01.Global.ad.sabre.com>

Hello,

 

I need help with rewriting rules in ANTLR.

 

I'm writing a translator between different dialects of a programming
language. My task is to replace function calls from one dialect to
function calls of the other dialect (this involved choosing the right
function, probably reordering, removing or adding parameters, etc.). The
rest of the source code is not to be altered much. My idea is that when
I come across a function call, I build an object model, call my function
to convert that call to a string representing a call in the target
language and replace the source string - that solves the problem of
nested calls and the fact that function calls can appear "everywhere".
In the topmost rule I just want to call print-like function with the
whole parsed (and replaced) text.

 

How to solve this problem the easiest way possible?

 

 

The simplified grammar looks like this (I omitted the tokens):

 

grammar Test;

 

options {

                language = CSharp2;

                output = AST;

}

 

start_rule

                :               functions {
System.Console.WriteLine($functions.text); }

                ;

 

functions

                :               function+

                ;

 

function

@init {

                var function = new Function(); // build the object

}

                :               ID
{ /*...*/ }

                                '('

                                (

                                arg1 = expression
{ /*...*/ }

                                (',' arg2 = expression
{ /*...*/ }

                                )*

                                )?                            

                                ')'

                                // doesn't work: the attribute is read
only

                                // { $function.text =
Tools.Convert(function); }

                                // doesn't work: printing tokens from
TokenRewriteStream gives the source input

                                //-> { new CommonTree(new CommonToken(0,
Tools.Convert(function))) }

                ;

                

expression

                :               (ID | INT )

                                (

                                                ('+' | '-') (ID | INT)

                                )?

                                |              function

                ;


From andrew.bradnan at gmail.com  Mon Mar 22 15:19:34 2010
From: andrew.bradnan at gmail.com (Andrew Bradnan)
Date: Mon, 22 Mar 2010 15:19:34 -0700
Subject: [antlr-interest] CSharp3 Target (ANTLR 3.2)
In-Reply-To: <80A5CDD2686EA042AE41C526324D44557743629D6D@EXCHANGE2007.signmgmt.local>
References: <80A5CDD2686EA042AE41C526324D44557743629D6D@EXCHANGE2007.signmgmt.local>
Message-ID: <8a5e9b781003221519q7a7962cfq4a4831733d6e2b80@mail.gmail.com>

I can't answer the question about the official C# runtimes for 3.2.  I have
gotten tree rewriting working in C#
however.
Here's how to get this working with a slightly modified antlr-3.2.jar and
the latest CSharp2 runtime.  Specifically
I got the sample for pattern 19 (symtab/class) from Language Implementation
Patterns working.  That should cover
all the filter=true; Downup() goodness.

1.) Download the latest CSharp2 runtime code and build it (I got a zip from
http://fisheye2.atlassian.com/browse/antlr/runtime/CSharp2).
There's a Visual Studio 2008 project file that builds it without
modification.
2.) You'll need to make a few modifications to the string templates.  The
file to modify in the jar (antlr3-3.2.jar) is
org\antlr\codegen\templates\CSharp2\CSharp2.stg.  (To update...Unzip the
jar, modify CSharp2.stg, and rezip sans
any compression).
Here are the updates to make.
a.) Change Index() to just Index (there are 3 occurances)
b.) Update the treeParser rule to use the TreeRewriter base class as shown
below.  Replace the old version
(line 312) with this.

/** How to generate a tree parser; same as parser except the input
 *  stream is a different type.
 */
treeParser(grammar, name, scopes, tokens, tokenNames, globalAction, rules,
           numRules, bitsets, labelType={<ASTLabelType>},
ASTLabelType="object",

superClass={<if(filterMode)><if(buildAST)>TreeRewriter<else>TreeFilter<endif><else>TreeParser<endif>},
           members={<actions.treeparser.members>},
           filterMode) ::= <<


3.)  Add the override methods for Topdown / Bottomup to YourGrammar.g.

[[To have this behave like the java runtime, the string template for rule
would have to be modified to override
the two methods topdown/bottomup.  You have to explicitly "override" in C#.
topdown/bottomup also need to be all
lower case in CSharpN runtimes since they are not Lexer rules.]]

@members
{
 ...
    protected override void Topdown() { topdown(); }
    protected override void Bottomup() { bottomup(); }
}

4.)  Make sure you translate the java version of TreeAdapter class to
explicitly override Create/DupNode/ErrorNode
(or you'll get mysterious casting exceptions if left as
create/dupNode/errorNode).  Mine looks like this
 // test.cs
    public static Test.TreeAdaptor cymbalAdaptor = new Test.TreeAdaptor();
 public class TreeAdaptor : CommonTreeAdaptor
 {
        public override object Create(IToken token)
  {
   return new CymbolAST(token);
        }
        public override object DupNode(object t)
  {
            if (t == null)
                return null;
            return Create(((CymbolAST)t).Token);
        }
        public override object ErrorNode(ITokenStream input, IToken start,
IToken stop, RecognitionException e)
        {
            CymbolErrorNode t = new CymbolErrorNode(input, start, stop, e);
            Console.WriteLine("returning error node '"+t+"'
@index="+input.Index);
            return t;
        }
    }
Hopefully that helps.
Andrew

On Mon, Mar 15, 2010 at 9:34 AM, Kevin Carroll <kcarroll at signmgmt.com>wrote:

> What is the "official" status of C# port of ANTLR 3.2 (i.e.,
> language=CSharp3)?  Several of the new features of 3.2 are utilized quite a
> bit in "Language Implementation Patterns".  Most importantly, tree
> rewriting.
>
> I have been using Sam Harwell's stand-alone Windows port of ANTLR 3.2 with
> success (after a few tweaks to unify member name capitalization and a
> correction to the ApplyOnce method to bring it up-to-date with the Java
> version).  The only true problem is that I would really love to use my
> ANTLR-generated parser in conjunction with Actipro Software's SyntaxEditor,
> but they only currently support the CSharp2 target (understandably).
>
> Thanks for any info,
> Kevin Carroll
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
/Andrew

From stephanie.balzer at gmail.com  Mon Mar 22 17:03:02 2010
From: stephanie.balzer at gmail.com (Stephanie)
Date: Tue, 23 Mar 2010 01:03:02 +0100
Subject: [antlr-interest] Nested structures
Message-ID: <61bdac941003221703k38cf70b7wcebc7c686102d0f2@mail.gmail.com>

Hi,

As I understood, I can use syntactic predicates to deal with non-regular
structures. Unfortunately, I don't get it right. Here is an excerpt of my
grammar (without syntactic predicates):

type
: moldType
| setType
;

moldType
: 'Mold' '<' Identifier '>'
;

setType
: 'Set' '<' Identifier '>'
| 'Set' '<' pairType  '>'
;

pairType
: 'Pair' '<' ( Identifier | pairType ) ',' ( Identifier | pairType ) '>'
;

In my grammar, type is used as part of variable / method declarations. So,
type declarations can be: Mold<X>, Set<X>, Set<Pair<X,X>>,
Set<Pair<X,Pair<X,X>>>, ...

I get an "non-LL(*) decision error" reported. I assume the problem is due to
the recursion in pairType. How can I fix this grammar?

Thanks a lot for your help!

Stephanie

From jbb at acm.org  Mon Mar 22 17:44:19 2010
From: jbb at acm.org (John B. Brodie)
Date: Mon, 22 Mar 2010 20:44:19 -0400
Subject: [antlr-interest] Nested structures
In-Reply-To: <61bdac941003221703k38cf70b7wcebc7c686102d0f2@mail.gmail.com>
References: <61bdac941003221703k38cf70b7wcebc7c686102d0f2@mail.gmail.com>
Message-ID: <1269305059.5534.2.camel@gecko.home.org>

Greetings!
On Tue, 2010-03-23 at 01:03 +0100, Stephanie wrote:
> Hi,
> 
> As I understood, I can use syntactic predicates to deal with non-regular
> structures. Unfortunately, I don't get it right. Here is an excerpt of my
> grammar (without syntactic predicates):
> 
> type
> : moldType
> | setType
> ;
> 
> moldType
> : 'Mold' '<' Identifier '>'
> ;
> 
> setType
> : 'Set' '<' Identifier '>'
> | 'Set' '<' pairType  '>'
> ;
> 
> pairType
> : 'Pair' '<' ( Identifier | pairType ) ',' ( Identifier | pairType ) '>'
> ;
> 
> In my grammar, type is used as part of variable / method declarations. So,
> type declarations can be: Mold<X>, Set<X>, Set<Pair<X,X>>,
> Set<Pair<X,Pair<X,X>>>, ...
> 
> I get an "non-LL(*) decision error" reported. I assume the problem is due to
> the recursion in pairType. How can I fix this grammar?
> 

I tried your above fragment (see attached) and experienced no problems.
Something else in your grammar is apparently the cause of your issue.

Hope this helps.
   -jbb

-------------- next part --------------
grammar Test;

options {
   output = AST;
   ASTLabelType = CommonTree;
}

@members {
   private static final String [] x = new String[] {
      "Mold<id>"
   };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to parse:`"+x[i]+"`");
            TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);

            TestParser parser = new TestParser(tokens);
            TestParser.start_return p_result = parser.start();

            CommonTree ast = p_result.tree;
            if( ast == null ) {
               System.out.println("resultant tree: is NULL");
            } else {
               System.out.println("resultant tree: " + ast.toStringTree());
            }
            System.out.println();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

start : type EOF!;

type
: moldType
| setType
;

moldType
: 'Mold' '<' Identifier '>'
;

setType
: 'Set' '<' Identifier '>'
| 'Set' '<' pairType  '>'
;

pairType
: 'Pair' '<' ( Identifier | pairType ) ',' ( Identifier | pairType ) '>'
;

Identifier : 'id' ;

From dbahr at estudiantes.uci.cu  Tue Mar 23 06:24:34 2010
From: dbahr at estudiantes.uci.cu (Daniel Hernandez Bahr)
Date: Tue, 23 Mar 2010 09:24:34 -0400
Subject: [antlr-interest] UnSkipping Tokens
Message-ID: <4BA8C112.1000105@estudiantes.uci.cu>

Hello, everyone!

I was wondering if it would be possible to "unskip" a token for a 
certain parser rule, something like:

class MyLexer extends Lexer;
...
NEWLINE : '\u' | '\r' { $newline; $setType(Token.SKIP)};
...

class MyParser extends Parser;
...
somerule {/somehow tell the lexer not to skip the /NEWLINE/ token/}:
  /somerule production/ NEWLINE;

The thing is I need to recognize a NEWLINE in some specific sections of 
the code but it would be an enormous work not to skip it on every other 
parser rule.

Best regards,

D.H. Bahr

From kcarroll at signmgmt.com  Tue Mar 23 06:51:07 2010
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Tue, 23 Mar 2010 08:51:07 -0500
Subject: [antlr-interest] CSharp3 Target (ANTLR 3.2)
In-Reply-To: <8a5e9b781003221519q7a7962cfq4a4831733d6e2b80@mail.gmail.com>
References: <80A5CDD2686EA042AE41C526324D44557743629D6D@EXCHANGE2007.signmgmt.local>
	<8a5e9b781003221519q7a7962cfq4a4831733d6e2b80@mail.gmail.com>
Message-ID: <80A5CDD2686EA042AE41C526324D4455774369451E@EXCHANGE2007.signmgmt.local>

Andrew,

Thanks for your reply.  As I mentioned in my post, I am using Sam Harwell's port (http://markmail.org/message/secfbpchtbsev6pv).  I had to do some similar things as you to get the tree rewriting working (e.g., added overrides to TopDown, Bottomup and ApplyOnce; fixed one capitalization error in ASTTreeParser.stg - marked any rules called from outside the parser class "public").  With those changes, things are working, I believe, identically to the java implementation.  I was just hoping for an officially blessed version that perhaps the Actipro SyntaxEditor folks would support.

Thanks again,
Kevin Carroll

From: Andrew Bradnan [mailto:andrew.bradnan at gmail.com]
Sent: Monday, March 22, 2010 5:20 PM
To: Kevin Carroll
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] CSharp3 Target (ANTLR 3.2)


I can't answer the question about the official C# runtimes for 3.2.  I have gotten tree rewriting working in C#
however.
Here's how to get this working with a slightly modified antlr-3.2.jar and the latest CSharp2 runtime.  Specifically
I got the sample for pattern 19 (symtab/class) from Language Implementation Patterns working.  That should cover
all the filter=true; Downup() goodness.

1.) Download the latest CSharp2 runtime code and build it (I got a zip from http://fisheye2.atlassian.com/browse/antlr/runtime/CSharp2).
There's a Visual Studio 2008 project file that builds it without modification.
2.) You'll need to make a few modifications to the string templates.  The file to modify in the jar (antlr3-3.2.jar) is
org\antlr\codegen\templates\CSharp2\CSharp2.stg.  (To update...Unzip the jar, modify CSharp2.stg, and rezip sans
any compression).
Here are the updates to make.
a.) Change Index() to just Index (there are 3 occurances)
b.) Update the treeParser rule to use the TreeRewriter base class as shown below.  Replace the old version
(line 312) with this.

/** How to generate a tree parser; same as parser except the input
 *  stream is a different type.
 */
treeParser(grammar, name, scopes, tokens, tokenNames, globalAction, rules,
           numRules, bitsets, labelType={<ASTLabelType>}, ASTLabelType="object",
           superClass={<if(filterMode)><if(buildAST)>TreeRewriter<else>TreeFilter<endif><else>TreeParser<endif>},
           members={<actions.treeparser.members>},
           filterMode) ::= <<

3.)  Add the override methods for Topdown / Bottomup to YourGrammar.g.

[[To have this behave like the java runtime, the string template for rule would have to be modified to override
the two methods topdown/bottomup.  You have to explicitly "override" in C#.  topdown/bottomup also need to be all
lower case in CSharpN runtimes since they are not Lexer rules.]]

@members
{
 ...
    protected override void Topdown() { topdown(); }
    protected override void Bottomup() { bottomup(); }
}

4.)  Make sure you translate the java version of TreeAdapter class to explicitly override Create/DupNode/ErrorNode
(or you'll get mysterious casting exceptions if left as create/dupNode/errorNode).  Mine looks like this
 // test.cs
    public static Test.TreeAdaptor cymbalAdaptor = new Test.TreeAdaptor();
 public class TreeAdaptor : CommonTreeAdaptor
 {
        public override object Create(IToken token)
  {
   return new CymbolAST(token);
        }
        public override object DupNode(object t)
  {
            if (t == null)
                return null;
            return Create(((CymbolAST)t).Token);
        }
        public override object ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)
        {
            CymbolErrorNode t = new CymbolErrorNode(input, start, stop, e);
            Console.WriteLine("returning error node '"+t+"' @index="+input.Index);
            return t;
        }
    }
Hopefully that helps.
Andrew
On Mon, Mar 15, 2010 at 9:34 AM, Kevin Carroll <kcarroll at signmgmt.com<mailto:kcarroll at signmgmt.com>> wrote:
What is the "official" status of C# port of ANTLR 3.2 (i.e., language=CSharp3)?  Several of the new features of 3.2 are utilized quite a bit in "Language Implementation Patterns".  Most importantly, tree rewriting.

I have been using Sam Harwell's stand-alone Windows port of ANTLR 3.2 with success (after a few tweaks to unify member name capitalization and a correction to the ApplyOnce method to bring it up-to-date with the Java version).  The only true problem is that I would really love to use my ANTLR-generated parser in conjunction with Actipro Software's SyntaxEditor, but they only currently support the CSharp2 target (understandably).

Thanks for any info,
Kevin Carroll

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



--
/Andrew

From lepilache at hotmail.com  Tue Mar 23 06:56:54 2010
From: lepilache at hotmail.com (Damien Urruty)
Date: Tue, 23 Mar 2010 13:56:54 +0000
Subject: [antlr-interest] Parse assignments and method calls
Message-ID: <BLU139-W11A6F821729F9EBC2F8C6CBC260@phx.gbl>


Hello
I have been working on the Java grammar, and in my opinion, there is a strange thing with the expressions. Actually the parser is able to detect an expression like :
1+2 = 3+4;
or 
a = b+6 = c;
And these are not legal statements in Java (it displays "The left-hand side of an assignment must be a variable"). This is detected later by the semantical analysis I guess, but I would like to modify the grammar to verify syntactically left hand-side variables. Here are my rules :
statement    :   block    |   // others statements ...    |   affectation ';'    |   methodCall ';'    |   instanciation ';'    ;    affectation	:   affectMember+ methodAccess	|   affectMember+ 'new' identST arguments	|   affectMember+ expression	;	affectMember    :    varAccess assignmentOperator    ;    varAccess    :   identST ('[' argument ']')*    |   members '.' identST ('[' argument ']')*    |   '(' varAccess ')'    ;    members    :   'this' ('.' member)*    |   'super' ('.' member)*    |   instanciation ('.' member)*    |   member ('.' member)*    |   parMember ('.' member)*    ;
parMember    :  '(' castMember? members ')'     ;
castMember    :   '(' primitiveType ')'    |   '(' type ')'    ;
member    :   identST arguments ('[' argument ']')*    |   identST ('[' argument ']')*    ;
methodAccess    :   methodCall    |   '(' castMember? methodAccess ')'    ;
methodCall    :    'this' '.' (member '.')* methodMinimum    |    'super' '.' (member '.')* methodMinimum    |    instanciation '.' (member '.')* methodMinimum    |    (member '.')* methodMinimum    |    members '.' methodMinimum    ;
methodMinimum    :   identST arguments    ;
instanciation     :	'new' creator     ;
expression    :   conditionalExpression    ;
//.........
The code is not organized at all, but works, except when there is a castMember, as in : 
((int)obj.method()).method2();
I think I have a problem with the parenthesis and their priorities. If anyone could help, I would appreciate it. I can't find things like these, nowhere. Parsers usually parse expression like in the Java.g grammar, but I need to parse this way.
Thanks in advance.Dam. 		 	   		  
_________________________________________________________________
Hotmail et MSN dans la poche? HOTMAIL et MSN sont dispo gratuitement sur votre t?l?phone!
http://www.messengersurvotremobile.com/?d=Hotmail

From bkiers at gmail.com  Tue Mar 23 07:11:14 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 23 Mar 2010 15:11:14 +0100
Subject: [antlr-interest] Parse assignments and method calls
In-Reply-To: <BLU139-W11A6F821729F9EBC2F8C6CBC260@phx.gbl>
References: <BLU139-W11A6F821729F9EBC2F8C6CBC260@phx.gbl>
Message-ID: <af443a971003230711o2bda8dcds996c25dce509fbb3@mail.gmail.com>

On Tue, Mar 23, 2010 at 2:56 PM, Damien Urruty <lepilache at hotmail.com>wrote:

>
> Hello
> I have been working on the Java grammar,...


What is "the Java grammar" here? A ANTLR grammar you found on the net, or on
one of ANTLR's wiki pages[1]? If so, you might want to tell which one
(there's more than one on the wiki). Or do you mean the grammar from the
JLS[2]?

Regards,

Bart.

[1] http://www.antlr.org/grammar/list
[2] http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html

From lepilache at hotmail.com  Tue Mar 23 07:24:58 2010
From: lepilache at hotmail.com (Damien Urruty)
Date: Tue, 23 Mar 2010 14:24:58 +0000
Subject: [antlr-interest] Parse assignments and method calls
Message-ID: <BLU139-W31564D85214C66FA68B132BC260@phx.gbl>


On Tue, Mar 23, 2010 at 2:56 PM, Damien Urruty <lepi... at hotmail.com>wrote:

It's the Java Grammar 1.6 by Yang Jiang, but every grammar that I have encountered works the same way, the ones on the wiki, and Sun's one : a left-hand side variable can be a expression like 2+3...

Hello
I have been working on the Java grammar,...

What is "the Java grammar" here? A ANTLR grammar you found on the net, or on
one of ANTLR's wiki pages[1]? If so, you might want to tell which one
(there's more than one on the wiki). Or do you mean the grammar from the
JLS[2]?

Regards,

Bart.

[1] http://www.antlr.org/grammar/list[2] http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html


 		 	   		  
_________________________________________________________________
Consultez gratuitement vos emails Orange, Gmail, Free, ... directement dans HOTMAIL !
http://www.windowslive.fr/hotmail/agregation/

From jimi at temporal-wave.com  Tue Mar 23 08:25:21 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 23 Mar 2010 08:25:21 -0700
Subject: [antlr-interest] Help request using updated antlrworks
In-Reply-To: <3D26A6E9AD90AC4285B7D65DC10A298D012848FD36D2@exchange.ur.local>
Message-ID: <4257e2016c9383498e22134c5676110c@temporal-wave.com>

I think this was a bug in the output template that was checked in when 1.3.1 was built and has since been corrected. Either expand ANTLRWorks replace the C.stg and repack, or build directly from source. However using the output = C in ANTLRWorks tends not to be useful ;-). I have always commented out the language= and just used remote debug. Anyway the problem is not your grammar.

 

Please use the list rather than contacting me directly so other benefit from the answers.

 

Thanks,

 

Jim

 

From: Rob Grapes [mailto:Rob.Grapes at ur.co.nz] 
Sent: Monday, March 22, 2010 9:12 PM
To: jimi at temporal-wave.com
Subject: Help request using updated antlrworks

 

Hi Jim,

 

Sorry to contact you directly.  I have an antlr grammar that works perfectly with antlrworks v1.1.7 using the C runtime.

 

But since upgrading to v1.3.1.  I get the following error:

 

[17:08:29] error(10):  internal error: C:\umajin2\Umajin1.g : java.util.NoSuchElementException: no such attribute: ASLabelType in template context [outputFile parser genericParser(...) rule ruleBlockSingleAlt alt rewriteCode rewriteAlt else_subtemplate rewriteElementList rewriteElement rewriteTree rewriteElement rewriteTree rewriteElement rewriteNodeActionRoot]

 




From jimi at temporal-wave.com  Tue Mar 23 08:43:16 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 23 Mar 2010 08:43:16 -0700
Subject: [antlr-interest] Parse assignments and method calls
In-Reply-To: <BLU139-W31564D85214C66FA68B132BC260@phx.gbl>
Message-ID: <62b50f84edb9eb4da997b935de89b3a2@temporal-wave.com>

Such things are excluded semantically not syntactically. Basically as many rules as possible should be tested semantically rather than syntactically as the error messages that ensue are generally very much better. You get "chained assignments are not allowed" vs Syntax error at '=' for instance.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Damien Urruty
> Sent: Tuesday, March 23, 2010 7:25 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Parse assignments and method calls
> 
> 
> On Tue, Mar 23, 2010 at 2:56 PM, Damien Urruty
> <lepi... at hotmail.com>wrote:
> 
> It's the Java Grammar 1.6 by Yang Jiang, but every grammar that I have
> encountered works the same way, the ones on the wiki, and Sun's one : a
> left-hand side variable can be a expression like 2+3...
> 
> Hello
> I have been working on the Java grammar,...
> 
> What is "the Java grammar" here? A ANTLR grammar you found on the net,
> or on
> one of ANTLR's wiki pages[1]? If so, you might want to tell which one
> (there's more than one on the wiki). Or do you mean the grammar from
> the
> JLS[2]?
> 
> Regards,
> 
> Bart.
> 
> [1] http://www.antlr.org/grammar/list[2]
> http://java.sun.com/docs/books/jls/second_edition/html/syntax.doc.html
> 
> 
> 
> _________________________________________________________________
> Consultez gratuitement vos emails Orange, Gmail, Free, ... directement
> dans HOTMAIL !
> http://www.windowslive.fr/hotmail/agregation/
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From albert at ons-huis.net  Tue Mar 23 02:25:36 2010
From: albert at ons-huis.net (ALbert Mietus)
Date: Tue, 23 Mar 2010 10:25:36 +0100
Subject: [antlr-interest] Q: Status of python (and other (non java) runtimes)
Message-ID: <4565A6B1-9DA7-40DB-BEC0-D7F08F44C8E2@ons-huis.net>

Hello all,

I'm a relative newbe  with antlr; have read most of the book and the  
website and done some experiments. Both with ANTLRWork and command  
line (yes I'm old fashioned:-)  But, as I'm not a native-java expert I  
like to use one of the other languages.  Most likely  python.

I have downloaded the (python) sources of  antlr. runtime (dir:  
antlr.src-runtime-python/), added that to sys.path and give it a try.
It complains about a version mismatch; which I fixed with changing the  
file 'antlr.src-runtime-python/__init__.py'
	WAS:			__version__ = '3.1.3'
	BECOMES		__version__ = '3.2.0'
Now it runs ...

In this experiment however, I use a simple checker only: the python- 
main only calls the lexer and the parser;
no templates are used, no AST is build, no <<anything>>

My questions:

* Is the "fix" is did above correct. And should it work?
Or is/should the runtime of v312 and 32.*  really change.

* Does the python runtime support AST, template and all other nice  
features, mentioned in the book?
  Or should I use another language option. The website mentions in is  
beta, but soon to change; but that was way back

* If python is not really supported, which other languages are?
	Java, I assume;-)
	How about (ANSI) C, or C++?
	Or should I really stick to /learn java?

Thanks for the answers. Thanks for the Tool

PS, maybe it would help to put the status each langua on the website.

Note:  As I'm not (yet) part of this list, please BCC me!

Note2, Sorry for posting to the wrong list first ...
--Groetjes, Albert

ALbert Mietus
  GSM:  +316 16 531 258
  Send prive mail to:   ALbert at ons-huis dot net
                                               Don't send spam mail!
Mijn missie: http://SoftwareBeterMaken.nl      product, proces & imago.
Mijn leven in het kort:        http://albert.mietus.nl/Doc/CV_ALbert.html


From fab.antoine at gmail.com  Tue Mar 23 10:48:09 2010
From: fab.antoine at gmail.com (Fabien ANTOINE)
Date: Tue, 23 Mar 2010 18:48:09 +0100
Subject: [antlr-interest]  StringTemplate 3.2.1 with ANTLR 3.2
Message-ID: <93d90c421003231048k555bca96lf7bc57efc1e3c251@mail.gmail.com>

Hi list,

I get some troubles with StringTemplate 3.2.1 and ANTLR 3.2 in Java.
I get an error when I try to instanciate a StringTemplateGroup reporting
that the "antlr.TokenStream" class doesn't exist...

Is StringTemplate 3.2.1 compatible with ANTLR 3.2? Does a solution exist?

Thanks!

Fabien

From parrt at cs.usfca.edu  Tue Mar 23 11:10:05 2010
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 23 Mar 2010 11:10:05 -0700
Subject: [antlr-interest] StringTemplate 3.2.1 with ANTLR 3.2
In-Reply-To: <93d90c421003231048k555bca96lf7bc57efc1e3c251@mail.gmail.com>
References: <93d90c421003231048k555bca96lf7bc57efc1e3c251@mail.gmail.com>
Message-ID: <40A06F5F-9BA8-49DF-86C2-B505F516960E@cs.usfca.edu>

You're missing antlr-2.7.7.jar; v3 written in v2
Ter
On Mar 23, 2010, at 10:48 AM, Fabien ANTOINE wrote:

> Hi list,
> 
> I get some troubles with StringTemplate 3.2.1 and ANTLR 3.2 in Java.
> I get an error when I try to instanciate a StringTemplateGroup reporting
> that the "antlr.TokenStream" class doesn't exist...
> 
> Is StringTemplate 3.2.1 compatible with ANTLR 3.2? Does a solution exist?
> 
> Thanks!
> 
> Fabien
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From lukas.maczejka at compucare.at  Wed Mar 24 05:47:34 2010
From: lukas.maczejka at compucare.at (Lukas Maczejka)
Date: Wed, 24 Mar 2010 13:47:34 +0100
Subject: [antlr-interest] Lazy evaluation / failing subexpressions
Message-ID: <kzse7a.hw4dym@compucare.synesis.at>

hi,


i'm currently developing a small expression interpreter using antlr, and came
accross the following problem:


consider an 'if' expression of the following form:


if(condition-expression,then-expression,else-expression)


where the if expression yields the result of "then" if the condition evaluates
to true, and "else" otherwise.


it can be the case that the evaluation (custom action) of either "then" or
"else" fails (for example, has a division through zero), but is not needed.
consider the following:


if(true,1,1/0)


would crash, even though the "else" expression is never needed.
the matcher in the tree grammer identifies the parameters correctly as
expressions, and evaluates them before calling my custom "if" action. 


is there a way to lazyly evaluate expressions?


i managed to solve the problem by writing a custom tree walker instead of
using a tree grammar to evaluate the parse tree. however, i would greatly
prefer a way using antlr.


any help would be greatly appreciated


thanks


lukas



From markwright at internode.on.net  Wed Mar 24 06:32:28 2010
From: markwright at internode.on.net (Mark Wright)
Date: Thu, 25 Mar 2010 00:32:28 +1100
Subject: [antlr-interest] Need help with rewrite rules
In-Reply-To: <664A13B770987A4BB77A103AF4174ECC0405EFE4@sglonms01.Global.ad.sabre.com>
References: <664A13B770987A4BB77A103AF4174ECC0405EFE4@sglonms01.Global.ad.sabre.com>
Message-ID: <20100324133228.GA1159@internode.on.net>

Hi Stefan,

This is described in chapter 9 (in particular starting at section 9.5 on)
of the ANTLR book (The Definitive ANTLR Reference).  One way that
is described in the book (which is highly recommended) which
would probably be easier for your situation is to use:

options { /* other options you need */
          rewrite = true; }

if this is supported by the ANTLR runtime target you are using,
and whatever the equivalent of TokenRewriteStream is for that
target (it could be called something completely different).

Regards, Mark

From Stefan.Chrobot at sabre.com  Wed Mar 24 06:54:59 2010
From: Stefan.Chrobot at sabre.com (Chrobot, Stefan)
Date: Wed, 24 Mar 2010 13:54:59 -0000
Subject: [antlr-interest] Need help with rewrite rules
In-Reply-To: <20100324133228.GA1159@internode.on.net>
References: <664A13B770987A4BB77A103AF4174ECC0405EFE4@sglonms01.Global.ad.sabre.com>
	<20100324133228.GA1159@internode.on.net>
Message-ID: <664A13B770987A4BB77A103AF4174ECC0405F60E@sglonms01.Global.ad.sabre.com>

-----Original Message-----
From: Mark Wright [mailto:markwright at internode.on.net] 
Sent: Wednesday, March 24, 2010 2:32 PM

Hi Stefan,

This is described in chapter 9 (in particular starting at section 9.5
on)
of the ANTLR book (The Definitive ANTLR Reference).  One way that
is described in the book (which is highly recommended) which
would probably be easier for your situation is to use:

options { /* other options you need */
          rewrite = true; }

if this is supported by the ANTLR runtime target you are using,
and whatever the equivalent of TokenRewriteStream is for that
target (it could be called something completely different).

------------------------------------------

Mark,

thanks for the reply. I was looking into the book, but just couldn't
find the way to do, what I wanted.
I was using the technique you mentioned. And I got to this point:

function
	:	ID
		'('
		(
		arg1 = expression
		(',' arg2 = expression
		)*
		)?		
		')'
		-> template() "aaaaa"
	;

This replaces the whole function with the text "aaaaa". But what I
really wanted to do is to get the replacement text from a function call.
Now I know, that what I wanted to do is:

-> { new StringTemplate(myFunction(myParams)) }


From stas.ostapenko at gmail.com  Wed Mar 24 09:31:42 2010
From: stas.ostapenko at gmail.com (Stas Ostapenko)
Date: Wed, 24 Mar 2010 18:31:42 +0200
Subject: [antlr-interest] Newbie questions
Message-ID: <fbb5e6621003240931q4d7138ffqb7917fac2a81a952@mail.gmail.com>

Hi !

I'm ANTLR newbie and need some suggestions about the way ANTLR works.
I have very simple language construct. For example

struct
{
   Integer i;
   String str1;
   Integer x;
   Integer y;
   String z;
}

I want to generate a couple of files from this structure. First of all
- appropriate POJO with getters and setters. At this moment I have
working grammar and generated lexer/parser using antlr3-maven-plugin.
It looks like this (the most interesting part):

/*
	entry point
*/
main :(WS* myStruct)*;
	

myStruct returns [String structName]
	:	'struct ' IDENT
		'{'
			variable*
		'}'
		{$structName = $IDENT.text;}
	;

type returns [String typeName]
	:
	'Integer' {$typeName = "Integer ";}
	|'String' {$typeName = "String ";}
	    ;
variable returns [String variableName]
	:	type WS* IDENT WS*';' {$variableName = $IDENT.text;}
	;

Using the following code I can access the name of the structure. But
how to get variables with their types ??

CommonTokenStream tokens = new CommonTokenStream(lexer);

SampleParser parser = new SampleParser(tokens);
SampleParser.myStruct_return msr = parser.myStruct();
System.out.println("struct name from code : "+msr.structName);

I see that StringTemplate is used as template engine. Could I use
Velocity together with ANTLR ? I have some ready-made templates in
Velocity, so it will be cool to just reuse them.

Since I need to use the same source for generation of different sorts
of output files I need some kind of reuse of AST or something else.
Any ideas how it's could be achieved ?
I'm lost a little, please help me to get out. Thanks !

Best regards, Stas.

From jimi at temporal-wave.com  Wed Mar 24 09:44:31 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 24 Mar 2010 09:44:31 -0700
Subject: [antlr-interest] Lazy evaluation / failing subexpressions
In-Reply-To: <kzse7a.hw4dym@compucare.synesis.at>
Message-ID: <0637587df22b1947bc47203680836cda@temporal-wave.com>

Can't you use wildcards and consume then as wildcard if the expressions is false and else as wildcard if the expression is true? 

^(IF e=expression ( {$e.result == true}?=>thenClause . | {$e.result==false}?=> . elseClause ) )

Or something similar.

However, I highly recommend that you do not allow such behavior if the language is at all under your control. All you are doing is deferring the inevitable runtime failure until some point in the future when nobody will remember what the code was doing. Logically, if there is an if statement then there must be some possibility that the else clause will execute :-)

But you cannot detect such things by executing both the then and the else clause unless both clauses are guaranteed not to have side effects of course. So you have to use whatever static or flow analysis you can construct. 

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Lukas Maczejka
> Sent: Wednesday, March 24, 2010 5:48 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lazy evaluation / failing subexpressions
> 
> hi,
> 
> 
> i'm currently developing a small expression interpreter using antlr,
> and came
> accross the following problem:
> 
> 
> consider an 'if' expression of the following form:
> 
> 
> if(condition-expression,then-expression,else-expression)
> 
> 
> where the if expression yields the result of "then" if the condition
> evaluates
> to true, and "else" otherwise.
> 
> 
> it can be the case that the evaluation (custom action) of either "then"
> or
> "else" fails (for example, has a division through zero), but is not
> needed.
> consider the following:
> 
> 
> if(true,1,1/0)
> 
> 
> would crash, even though the "else" expression is never needed.
> the matcher in the tree grammer identifies the parameters correctly as
> expressions, and evaluates them before calling my custom "if" action.
> 
> 
> is there a way to lazyly evaluate expressions?
> 
> 
> i managed to solve the problem by writing a custom tree walker instead
> of
> using a tree grammar to evaluate the parse tree. however, i would
> greatly
> prefer a way using antlr.
> 
> 
> any help would be greatly appreciated
> 
> 
> thanks
> 
> 
> lukas
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From kaleb.pederson at gmail.com  Wed Mar 24 13:26:10 2010
From: kaleb.pederson at gmail.com (Kaleb Pederson)
Date: Wed, 24 Mar 2010 13:26:10 -0700
Subject: [antlr-interest] TreeRewrite bug or misuse?
Message-ID: <f14c01621003241326u2b5d6630l1214b97298b2fb48@mail.gmail.com>

I'm rewriting a tree in a way that I think follows the rules.  Here's
a sample input fragment:

"one" == "two" && "three" == "four" && "five" == "six"

The following rewrite works correctly, but then I have to iterate over
the list and match rhs-lhs pairs,a mere minor annoyance I suppose:

matchExpression
  : (object EQUALS object) (AND object EQUALS object)*
    -> ^(AST_MATCH object+)
  ;

This version gives the following tree:

(AST_MATCH "one" "two" "three" "four" "five" "six")

I'd prefer to have a list of the right-hand side and one of the
left-hand side, so I tried the following:

matchExpression
  : (rhs=object EQUALS lhs=object) (AND rhs=object EQUALS lhs=object)*
    -> ^(AST_MATCH ^(AST_MATCH_ARG $rhs+) ^(AST_MATCH_ARG $lhs+))
  ;

The above yields the following tree:

(AST_MATCH (AST_MATCH_ARG "five") (AST_MATCH_ARG "six"))

But I expected the following:

(AST_MATCH (AST_MATCH_ARG "one" "three" "five") (AST_MATCH_ARG "two"
"four" "six"))

As 'rhs' and 'lhs' are indeed present more than once, and being
matched more than once, shouldn't the rewritten tree contain all the
nodes or am I misunderstanding something?

Thanks.

--
Kaleb Pederson

Blog - http://kalebpederson.com
Twitter - http://twitter.com/kalebpederson

From jbb at acm.org  Wed Mar 24 14:28:15 2010
From: jbb at acm.org (John B. Brodie)
Date: Wed, 24 Mar 2010 17:28:15 -0400
Subject: [antlr-interest] TreeRewrite bug or misuse?
In-Reply-To: <f14c01621003241326u2b5d6630l1214b97298b2fb48@mail.gmail.com>
References: <f14c01621003241326u2b5d6630l1214b97298b2fb48@mail.gmail.com>
Message-ID: <1269466095.20056.2.camel@gecko.home.org>

Greetings!
On Wed, 2010-03-24 at 13:26 -0700, Kaleb Pederson wrote:
> I'm rewriting a tree in a way that I think follows the rules.  Here's
> a sample input fragment:
> 
> "one" == "two" && "three" == "four" && "five" == "six"
> 
> The following rewrite works correctly, but then I have to iterate over
> the list and match rhs-lhs pairs,a mere minor annoyance I suppose:
> 
> matchExpression
>   : (object EQUALS object) (AND object EQUALS object)*
>     -> ^(AST_MATCH object+)
>   ;
> 
> This version gives the following tree:
> 
> (AST_MATCH "one" "two" "three" "four" "five" "six")
> 
> I'd prefer to have a list of the right-hand side and one of the
> left-hand side, so I tried the following:
> 
> matchExpression
>   : (rhs=object EQUALS lhs=object) (AND rhs=object EQUALS lhs=object)*
>     -> ^(AST_MATCH ^(AST_MATCH_ARG $rhs+) ^(AST_MATCH_ARG $lhs+))
>   ;
> 
> The above yields the following tree:
> 
> (AST_MATCH (AST_MATCH_ARG "five") (AST_MATCH_ARG "six"))
> 
> But I expected the following:
> 
> (AST_MATCH (AST_MATCH_ARG "one" "three" "five") (AST_MATCH_ARG "two"
> "four" "six"))
> 
> As 'rhs' and 'lhs' are indeed present more than once, and being
> matched more than once, shouldn't the rewritten tree contain all the
> nodes or am I misunderstanding something?

use the += operator rather than the = operator in order to accumulate
lists of things on the left of the -> tree operator. thus:

matchExpression
  : (rhs+=object EQUALS lhs+=object) (AND rhs+=object EQUALS lhs+=object)*
    -> ^(AST_MATCH ^(AST_MATCH_ARG $rhs+) ^(AST_MATCH_ARG $lhs+))
  ;




From foxterri2 at hotmail.com  Thu Mar 25 01:19:14 2010
From: foxterri2 at hotmail.com (foxterri foxterri)
Date: Thu, 25 Mar 2010 08:19:14 +0000
Subject: [antlr-interest] Mutual left recursive problem
Message-ID: <SNT140-w34DD1EC23BEC7C69654EA7F4240@phx.gbl>


Hi

I have this left recursive problem which i cannot figure out how to solve and ANTLR WORKS cannot recognize the left recursive problem.
Is there any way to fix this?


methodInvocation
    :    methodName LPAREN argumentList? RPAREN
    |    primary DOT IDENT LPAREN argumentList? RPAREN
    |    SUPER DOT IDENT LPAREN argumentList? RPAREN
    ;
    
fieldAccess
    :    primary DOT IDENT
    |    SUPER DOT IDENT
    ;
    
primary
    :    primaryNoNewArray
    |    arrayCreationExpression
    ;
    
primaryNoNewArray
    :    literal
    |    THIS
    |    LPAREN expression RPAREN
    |    classInstanceCreationExpression
    |    fieldAccess
    |    methodInvocation
    |    arrayAccess
    ;

arrayAccess
    :    expressionName LBRACK expression RBRACK
    |    primaryNoNewArray LBRACK expression RBRACK
    ;     

Thanks for any help,

Glen
 		 	   		  
_________________________________________________________________
Hotmail has tools for the New Busy. Search, chat and e-mail from your inbox.
http://www.windowslive.com/campaign/thenewbusy?ocid=PID27925::T:WLMTAGL:ON:WL:en-US:WM_HMP:032010_1

From bkiers at gmail.com  Thu Mar 25 01:43:43 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 25 Mar 2010 09:43:43 +0100
Subject: [antlr-interest] Mutual left recursive problem
In-Reply-To: <SNT140-w34DD1EC23BEC7C69654EA7F4240@phx.gbl>
References: <SNT140-w34DD1EC23BEC7C69654EA7F4240@phx.gbl>
Message-ID: <af443a971003250143j2aef41d2j1eca289d4d886707@mail.gmail.com>

On Thu, Mar 25, 2010 at 9:19 AM, foxterri foxterri <foxterri2 at hotmail.com>wrote:

>
> Hi
>
> I have this left recursive problem which i cannot figure out how to solve
> and ANTLR WORKS cannot recognize the left recursive problem.
>

There is no "left recursive" rule in the part of your grammar you posted.
Can you post, or attach, the complete grammar?

Regards,

Bart.

From foxterri2 at hotmail.com  Thu Mar 25 01:56:34 2010
From: foxterri2 at hotmail.com (foxterri foxterri)
Date: Thu, 25 Mar 2010 08:56:34 +0000
Subject: [antlr-interest] Mutual left recursive problem
Message-ID: <SNT140-w44B9656DA643D15C42B5BF4240@phx.gbl>


>>
>> Hi
>>
>> I have this left recursive problem which i cannot figure out how to solve
>> and ANTLR WORKS cannot recognize the left recursive problem.
>>
>
>There is no "left recursive" rule in the part of your grammar you posted.
>Can you post, or attach, the complete grammar?
>
>Regards,
>
>Bart.

The complete grammer is attached, it is not completely done, but should give a good overview of it.

debugging it in eclipse gives the following error:

error(210): The following sets of rules are mutually left-recursive [primaryNoNewArray, arrayAccess, methodInvocation, primary, fieldAccess]



 		 	   		  
_________________________________________________________________
The New Busy is not the old busy. Search, chat and e-mail from your inbox.
http://www.windowslive.com/campaign/thenewbusy?ocid=PID27925::T:WLMTAGL:ON:WL:en-US:WM_HMP:032010_3
-------------- next part --------------
A non-text attachment was scrubbed...
Name: lexpars.g
Type: application/octet-stream
Size: 14765 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100325/9a92f9d3/attachment.obj 

From simonzack at gmail.com  Thu Mar 25 02:00:17 2010
From: simonzack at gmail.com (Simon zack)
Date: Thu, 25 Mar 2010 20:00:17 +1100
Subject: [antlr-interest] strange MismatchedTokenException
Message-ID: <b811ef761003250200w5647ef17w58371cd8fb9c4d8b@mail.gmail.com>

hi,

I'm new to antler
tried writing a little grammer, but it tells me MismatchedTokenException
when I interpret namespace_specification
using the string:
"hello.world"

[code]
grammar test;

exception_info
    :
        '.exception'
    ;

namespace_specification
    :
        ns_id1 = IDENTIFIER '.'
    ;

IDENTIFIER
    :    LETTER (LETTER|'0'..'9')*
    ;

LETTER
    :    '$'
    |    'A'..'Z'
    |    'a'..'z'
    |    '_'
    ;

[/code]

what am I doing wrong?
thanks

From bkiers at gmail.com  Thu Mar 25 02:27:20 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 25 Mar 2010 10:27:20 +0100
Subject: [antlr-interest] Mutual left recursive problem
In-Reply-To: <SNT140-w44B9656DA643D15C42B5BF4240@phx.gbl>
References: <SNT140-w44B9656DA643D15C42B5BF4240@phx.gbl>
Message-ID: <af443a971003250227v295b6113sefd6c16d71bce7d8@mail.gmail.com>

On Thu, Mar 25, 2010 at 9:56 AM, foxterri foxterri <foxterri2 at hotmail.com>wrote:

>
> The complete grammer is attached, it is not completely done, but should
> give a good overview of it.
>
> debugging it in eclipse gives the following error:
>
> error(210): The following sets of rules are mutually left-recursive
> [primaryNoNewArray, arrayAccess, methodInvocation, primary, fieldAccess]
>

That grammar still contains errors, but after commenting them out, I can
spot the left recursive rules.
I presume you know what left recursive rules are? If not, here's one in your
grammar: an 'arrayAccess' first part can be a 'primaryNoNewArray' whose
first part can be a 'methodInvocation' whose first part can be a 'primary'
whose first part can be a 'primaryNoNewArray'. The 'primaryNoNewArray' makes
it left recursive. Note that by "first part", I mean the left-most part of a
rule.

arrayAccess
 primaryNoNewArray <-----------------------+
  methodInvocation                         |
   primary                                 | left recursive
    primaryNoNewArray <--------------------+

Checkout ANTLR's wiki about this in more detail and how to remove them:
http://www.antlr.org/wiki/display/ANTLR3/Left-Recursion+Removal

Regards,

Bart.

From gthouraya at yahoo.fr  Thu Mar 25 02:31:53 2010
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Thu, 25 Mar 2010 09:31:53 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <956598.9812.qm@web26301.mail.ukl.yahoo.com>

Hello, 
I have to develop a tool which makes the generation of a
specification in CSP-Z from a specification Z, It is possible to use
your tool ANTLR to introduce the grammar of language Z and the grammar
of language CSP-Z and rules which I have already defined textuellement
and what is that I obtain a code or this tool makes the generation he
even?
please answer me it rather possible 
please
thanks


      

From bkiers at gmail.com  Thu Mar 25 02:44:47 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 25 Mar 2010 10:44:47 +0100
Subject: [antlr-interest] strange MismatchedTokenException
In-Reply-To: <b811ef761003250200w5647ef17w58371cd8fb9c4d8b@mail.gmail.com>
References: <b811ef761003250200w5647ef17w58371cd8fb9c4d8b@mail.gmail.com>
Message-ID: <af443a971003250244o394016e4pc8d08042e9f69a0a@mail.gmail.com>

On Thu, Mar 25, 2010 at 10:00 AM, Simon zack <simonzack at gmail.com> wrote:

> hi,
>
> I'm new to antler
> tried writing a little grammer, but it tells me MismatchedTokenException
> when I interpret namespace_specification
> using the string:
> "hello.world"
>
>
Then you start interpreting "hello.world" with the 'exception_info' rule,
which only matches the string '.exception'. You probably meant to start
interpreting with the 'namespace_specification' rule, whcih matches "hello."
from "hello.world".

Regards,

Bart.

From simonzack at gmail.com  Thu Mar 25 05:27:35 2010
From: simonzack at gmail.com (Simon zack)
Date: Thu, 25 Mar 2010 23:27:35 +1100
Subject: [antlr-interest] NoViableAltException this time
Message-ID: <b811ef761003250527j4418a6a3j498efde027214b2d@mail.gmail.com>

tried using namespace_specification to interpret the string, but the error
still shows up

I changed the code a little, but a new exception pops up

this only works when I remove the exception_info, however adding it messes
up things

[code]
grammar test;

exception_info
    :
        '.exception'
    ;

namespace_specification
    :
        ns_id1 = IDENTIFIER ('.' ns_idx = IDENTIFIER)*
        //ns_id1 = IDENTIFIER ( '.' ns_idx = IDENTIFIER)*
    ;

IDENTIFIER
    :    LETTER (LETTER|'0'..'9')*
    ;

fragment LETTER
    :    '$'
    |    'A'..'Z'
    |    'a'..'z'
    |    '_'
    ;


[/code]

thanks

From bkiers at gmail.com  Thu Mar 25 05:56:14 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 25 Mar 2010 13:56:14 +0100
Subject: [antlr-interest] NoViableAltException this time
In-Reply-To: <b811ef761003250527j4418a6a3j498efde027214b2d@mail.gmail.com>
References: <b811ef761003250527j4418a6a3j498efde027214b2d@mail.gmail.com>
Message-ID: <af443a971003250556p17384c67t7e9becbedc219675@mail.gmail.com>

On Thu, Mar 25, 2010 at 1:27 PM, Simon zack <simonzack at gmail.com> wrote:

> tried using namespace_specification to interpret the string, but the error
> still shows up
>
> I changed the code a little, but a new exception pops up
>
> this only works when I remove the exception_info, however adding it messes
> up things
>

Both your first grammar:

exception_info
  :  '.exception'
  ;

namespace_specification
  :  ns_id1 = IDENTIFIER '.'
  ;

IDENTIFIER
  :  LETTER (LETTER|'0'..'9')*
  ;

LETTER
  :  '$'
  |  'A'..'Z'
  |  'a'..'z'
  |  '_'
  ;


and your second grammar:

exception_info
  :  '.exception'
  ;

namespace_specification
  :  ns_id1 = IDENTIFIER ('.' ns_idx = IDENTIFIER)*
     //ns_id1 = IDENTIFIER ( '.' ns_idx = IDENTIFIER)*
  ;

IDENTIFIER
  :  LETTER (LETTER|'0'..'9')*
  ;

fragment LETTER
  :  '$'
  |  'A'..'Z'
  |  'a'..'z'
  |  '_'
  ;

interpret the string "hello.world" just fine. See the attached output of
ANTLRWorks v1.3.1.

Regards,

Bart.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 2.jpg
Type: image/jpeg
Size: 6426 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100325/44ab5401/attachment.jpg 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 1.jpg
Type: image/jpeg
Size: 5577 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100325/44ab5401/attachment-0001.jpg 

From Anders.Sollander at mathworks.de  Thu Mar 25 06:01:23 2010
From: Anders.Sollander at mathworks.de (Anders Sollander)
Date: Thu, 25 Mar 2010 13:01:23 +0000
Subject: [antlr-interest] Lexer rule for strings with quoted strings within
Message-ID: <4BD6EC0925726F4AA4E9BBC4580304E7CAAB6BD41A@EXCHANGE-UK.ad.mathworks.com>

Hi,

I've been trying to write a lexer rule for strings with strings in them, like

	"This has a ""quoted string"" within"

Is there a simple lexer rule for this, or do I need some kind of look ahead?

Thanks
Anders


From simonzack at gmail.com  Thu Mar 25 06:11:22 2010
From: simonzack at gmail.com (Simon zack)
Date: Fri, 26 Mar 2010 00:11:22 +1100
Subject: [antlr-interest] NoViableAltException this time
Message-ID: <b811ef761003250611h3d862aeal499a3f0aed006f4c@mail.gmail.com>

Sorry about that, indeed, "hello.world" works fine, but I forgot to mention
that I changed the interpreter string this time
Changed it to "hello.event"
This is what generated the error
sorry, should've made things clearer

regards
simon

From bkiers at gmail.com  Thu Mar 25 06:50:41 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 25 Mar 2010 14:50:41 +0100
Subject: [antlr-interest] Lexer rule for strings with quoted strings
	within
In-Reply-To: <4BD6EC0925726F4AA4E9BBC4580304E7CAAB6BD41A@EXCHANGE-UK.ad.mathworks.com>
References: <4BD6EC0925726F4AA4E9BBC4580304E7CAAB6BD41A@EXCHANGE-UK.ad.mathworks.com>
Message-ID: <af443a971003250650x174c8a7cg4dfde582b1b27c0@mail.gmail.com>

On Thu, Mar 25, 2010 at 2:01 PM, Anders Sollander <
Anders.Sollander at mathworks.de> wrote:

> Hi,
>
> I've been trying to write a lexer rule for strings with strings in them,
> like
>
>        "This has a ""quoted string"" within"
>
> Is there a simple lexer rule for this, or do I need some kind of look
> ahead?
>
>
You could enable the `backtrack` option:

String
options { backtrack = true; }
  :  '"' ('""' | ~'"')+ '"'
  ;

Regards,

Bart.

From bkiers at gmail.com  Thu Mar 25 06:52:39 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 25 Mar 2010 14:52:39 +0100
Subject: [antlr-interest] Lexer rule for strings with quoted strings
	within
In-Reply-To: <af443a971003250650x174c8a7cg4dfde582b1b27c0@mail.gmail.com>
References: <4BD6EC0925726F4AA4E9BBC4580304E7CAAB6BD41A@EXCHANGE-UK.ad.mathworks.com>
	<af443a971003250650x174c8a7cg4dfde582b1b27c0@mail.gmail.com>
Message-ID: <af443a971003250652p14b6e7f9gd216674df4268d6b@mail.gmail.com>

On Thu, Mar 25, 2010 at 2:50 PM, Bart Kiers <bkiers at gmail.com> wrote:

>
>
> On Thu, Mar 25, 2010 at 2:01 PM, Anders Sollander <
> Anders.Sollander at mathworks.de> wrote:
>
>> Hi,
>>
>> I've been trying to write a lexer rule for strings with strings in them,
>> like
>>
>>        "This has a ""quoted string"" within"
>>
>> Is there a simple lexer rule for this, or do I need some kind of look
>> ahead?
>>
>>
> You could enable the `backtrack` option:
>
> String
> options { backtrack = true; }
>   :  '"' ('""' | ~'"')+ '"'
>   ;
>
> Regards,
>
> Bart.
>
>

Sorry, I should first test what I propose, it doesn't seem to work...

Regards,

Bart.

From jbb at acm.org  Thu Mar 25 07:22:43 2010
From: jbb at acm.org (John B. Brodie)
Date: Thu, 25 Mar 2010 10:22:43 -0400
Subject: [antlr-interest] Lexer rule for strings with quoted strings
 within
In-Reply-To: <af443a971003250652p14b6e7f9gd216674df4268d6b@mail.gmail.com>
References: <4BD6EC0925726F4AA4E9BBC4580304E7CAAB6BD41A@EXCHANGE-UK.ad.mathworks.com>
	<af443a971003250650x174c8a7cg4dfde582b1b27c0@mail.gmail.com>
	<af443a971003250652p14b6e7f9gd216674df4268d6b@mail.gmail.com>
Message-ID: <1269526963.6382.2.camel@gecko.home.org>

On Thu, 2010-03-25 at 14:52 +0100, Bart Kiers wrote:
> > On Thu, Mar 25, 2010 at 2:01 PM, Anders Sollander <
> > Anders.Sollander at mathworks.de> wrote:
> >
> >> Hi,
> >>
> >> I've been trying to write a lexer rule for strings with strings in
> them,
> >> like
> >>
> >>        "This has a ""quoted string"" within"
> >>
> >> Is there a simple lexer rule for this, or do I need some kind of
> look
> >> ahead? 

fragment PART : '"' (options{ greedy=false; }: .)* '"' ;
STRING : PART+ ;



From jimi at temporal-wave.com  Thu Mar 25 08:14:42 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Mar 2010 08:14:42 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <956598.9812.qm@web26301.mail.ukl.yahoo.com>
Message-ID: <63170aba358441429c0fd4c5ffdc3042@temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gouasmi Thouraya
> Sent: Thursday, March 25, 2010 2:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] (no subject)
> 
> Hello,
> I have to develop a tool which makes the generation of a
> specification in CSP-Z from a specification Z, It is possible to use
> your tool ANTLR to introduce the grammar of language Z and the grammar
> of language CSP-Z and rules which I have already defined textuellement
> and what is that I obtain a code or this tool makes the generation he
> even?
> please answer me it rather possible


I think that you are asking if you can produce a grammar for the Z language and translate it in to CSP-Z via a set of rules that you have written down (but not coded).

Firstly, this kind of translation is exactly what ANTLR is good at. So toolset wise, you are in the correct place. So, assuming that the languages can be translated Z->CSP-Z (and it looks like they can), then assuming that your hand written logic is correct, and assuming that you know how to code this in Java or another target language, then your project is eminently feasible.

Jim





From jimi at temporal-wave.com  Thu Mar 25 08:22:14 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Mar 2010 08:22:14 -0700
Subject: [antlr-interest] Lexer rule for strings with quoted strings
	within
In-Reply-To: <4BD6EC0925726F4AA4E9BBC4580304E7CAAB6BD41A@EXCHANGE-UK.ad.mathworks.com>
Message-ID: <7e86a8ac628ce2439c1e8649a00d8b1b@temporal-wave.com>

This is the easiest way, though there are others such as ('""')=>:

DQ_LITERAL
   : '"' (options { greedy = false; } 
              : ( 
                   ( 
                       {input.LA(1) == '"' && input.LA(2) == '"'}? '"' '"' 
                     | ~'"' 
                   )*
                )
             )  
         '"'
    ;
	
Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Anders Sollander
> Sent: Thursday, March 25, 2010 6:01 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer rule for strings with quoted strings
> within
> 
> Hi,
> 
> I've been trying to write a lexer rule for strings with strings in
> them, like
> 
> 	"This has a ""quoted string"" within"
> 
> Is there a simple lexer rule for this, or do I need some kind of look
> ahead?
> 
> Thanks
> Anders
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Thu Mar 25 08:23:59 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Mar 2010 08:23:59 -0700
Subject: [antlr-interest] Lexer rule for strings with quoted strings
	within
In-Reply-To: <af443a971003250650x174c8a7cg4dfde582b1b27c0@mail.gmail.com>
Message-ID: <8d59a44d54fe90478c9a7cf8fc81e928@temporal-wave.com>

1) Backtracking will not work in lexers
2) Don't advise people to use backtrack mode
3) That rule will give warnings anyway


BTW Guys, don't forget antlr.markmail.org !!!

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Thursday, March 25, 2010 6:51 AM
> To: Anders Sollander
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer rule for strings with quoted
> strings within
> 
> On Thu, Mar 25, 2010 at 2:01 PM, Anders Sollander <
> Anders.Sollander at mathworks.de> wrote:
> 
> > Hi,
> >
> > I've been trying to write a lexer rule for strings with strings in
> them,
> > like
> >
> >        "This has a ""quoted string"" within"
> >
> > Is there a simple lexer rule for this, or do I need some kind of look
> > ahead?
> >
> >
> You could enable the `backtrack` option:
> 
> String
> options { backtrack = true; }
>   :  '"' ('""' | ~'"')+ '"'
>   ;
> 
> Regards,
> 
> Bart.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ron.hunter-duvar at oracle.com  Thu Mar 25 08:43:22 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Thu, 25 Mar 2010 09:43:22 -0600
Subject: [antlr-interest] Lexer rule for strings with quoted
	strings	within
In-Reply-To: <8d59a44d54fe90478c9a7cf8fc81e928@temporal-wave.com>
References: <8d59a44d54fe90478c9a7cf8fc81e928@temporal-wave.com>
Message-ID: <4BAB849A.4040208@oracle.com>

It's funny that you say that backtracking will not work in lexers. I 
don't know if it would help in the particular case the OP asked about, 
but I've found that it not only works, it's the only way to get Antlr 
lexers to work the way lexers are generally expected to work based on 
experience with FSA-based lexers. With backtracking turned on, rules 
such as for floating point and integer tokens can be kept separate (as 
long as they're in the right order). Without backtracking the first 
possible match is the only one that will ever be tried (if the float 
rule is first, only floats can be lexed, never integers; if the integer 
rule is first, floats can never be lexed), so it becomes necessary to 
merge all such rules into one big ugly rule with lots of predicates and 
set type calls.

Ron


Jim Idle wrote:
> 1) Backtracking will not work in lexers
> 2) Don't advise people to use backtrack mode
> 3) That rule will give warnings anyway
>
>
> BTW Guys, don't forget antlr.markmail.org !!!
>
> Jim
>
>   
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Bart Kiers
>> Sent: Thursday, March 25, 2010 6:51 AM
>> To: Anders Sollander
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Lexer rule for strings with quoted
>> strings within
>>
>> On Thu, Mar 25, 2010 at 2:01 PM, Anders Sollander <
>> Anders.Sollander at mathworks.de> wrote:
>>
>>     
>>> Hi,
>>>
>>> I've been trying to write a lexer rule for strings with strings in
>>>       
>> them,
>>     
>>> like
>>>
>>>        "This has a ""quoted string"" within"
>>>
>>> Is there a simple lexer rule for this, or do I need some kind of look
>>> ahead?
>>>
>>>
>>>       
>> You could enable the `backtrack` option:
>>
>> String
>> options { backtrack = true; }
>>   :  '"' ('""' | ~'"')+ '"'
>>   ;
>>
>> Regards,
>>
>> Bart.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>>     
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From rug at maconomy.com  Thu Mar 25 10:43:39 2010
From: rug at maconomy.com (Rune Glerup)
Date: Thu, 25 Mar 2010 18:43:39 +0100
Subject: [antlr-interest] Newbie questions
References: <fbb5e6621003240931q4d7138ffqb7917fac2a81a952@mail.gmail.com>
Message-ID: <437BD6CADC498842A158A08DD48FAB8F01A9B241@mx-cph.maconomy.com>

Hi Stas.

I recommend that you get a hold of a copy of one or both of Terence
Parr's ANTLR books, which are very helpful in working with ANTLR! Much
of how to use the syntax and other details of ANTLR are not very
accessible through the freely available documentation, so it very
quickly pays off to buy the books (or borrow them from a library).

The standard way to do, what you want, is to separate the processing of
the language into (1) a parsing step that builds the AST, and (2) a
processing step that walks the tree and generates the files you need.
The advantage of splitting the processing into two parts are that you
get some separation of concerns (syntax and semantics) that can be very
helpful when dealing with code generation (especially to multiple
targets as you need to do).

The first step is implemented using a grammar like the one you have
included. ANTLR has a rewriting syntax and some additional sugar for
actually building the tree. You can see an example of the technique
here: http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

The second step can be implemented in a number of ways. The most
effective way in ANTLR is to use a tree grammar, which is a grammar that
operates on the AST your parser produces. The tree grammar will contain
semantic actions (=code) that generates code using any method you
choose. You can probably wrap the code generation actions of your tree
grammar in an interface to easily build more code generation targets,
reusing the tree grammar.

Rune

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Stas Ostapenko
Sent: 24. marts 2010 17:32
To: antlr-interest at antlr.org
Subject: [antlr-interest] Newbie questions

Hi !

I'm ANTLR newbie and need some suggestions about the way ANTLR works.
I have very simple language construct. For example

struct
{
   Integer i;
   String str1;
   Integer x;
   Integer y;
   String z;
}

I want to generate a couple of files from this structure. First of all
- appropriate POJO with getters and setters. At this moment I have
working grammar and generated lexer/parser using antlr3-maven-plugin.
It looks like this (the most interesting part):

/*
	entry point
*/
main :(WS* myStruct)*;
	

myStruct returns [String structName]
	:	'struct ' IDENT
		'{'
			variable*
		'}'
		{$structName = $IDENT.text;}
	;

type returns [String typeName]
	:
	'Integer' {$typeName = "Integer ";}
	|'String' {$typeName = "String ";}
	    ;
variable returns [String variableName]
	:	type WS* IDENT WS*';' {$variableName = $IDENT.text;}
	;

Using the following code I can access the name of the structure. But
how to get variables with their types ??

CommonTokenStream tokens = new CommonTokenStream(lexer);

SampleParser parser = new SampleParser(tokens);
SampleParser.myStruct_return msr = parser.myStruct();
System.out.println("struct name from code : "+msr.structName);

I see that StringTemplate is used as template engine. Could I use
Velocity together with ANTLR ? I have some ready-made templates in
Velocity, so it will be cool to just reuse them.

Since I need to use the same source for generation of different sorts
of output files I need some kind of reuse of AST or something else.
Any ideas how it's could be achieved ?
I'm lost a little, please help me to get out. Thanks !

Best regards, Stas.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From yurushkin at rambler.ru  Thu Mar 25 11:01:55 2010
From: yurushkin at rambler.ru (=?windows-1251?B?zOj14OjrIN7w8/jq6O0=?=)
Date: Thu, 25 Mar 2010 21:01:55 +0300
Subject: [antlr-interest] [C target] How to create preprocessor?
Message-ID: <213866198.1269540115.55184312.68548@mcgi59.rambler.ru>

 Good day,

I want to parse 'include stmt'. I have found good article for old antlr.
http://www.ibm.com/developerworks/aix/library/au-c_plusplus_antlr/index.html.

But I work with Antlr 3, C target. And I haven't found any interface 
like
TokenStreamSelector..

From yurushkin at rambler.ru  Thu Mar 25 11:04:11 2010
From: yurushkin at rambler.ru (Michael)
Date: Thu, 25 Mar 2010 21:04:11 +0300
Subject: [antlr-interest] [C target] How to create preprocessor?
In-Reply-To: <4AA4033E.3060903@temporal-wave.com>
References: <403d8f5e0909061057w15911516u31d0ac1ff03601c8@mail.gmail.com>
	<4AA4033E.3060903@temporal-wave.com>
Message-ID: <op.u94xixu96ulka8@win-mupvrp0jyrf>

Good day,

I want to parse 'include stmt'. I have found good article for old antlr.
http://www.ibm.com/developerworks/aix/library/au-c_plusplus_antlr/index.html.

But I work with Antlr 3, C target. And I haven't found any interface like
TokenStreamSelector..

From jimi at temporal-wave.com  Thu Mar 25 11:05:25 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Mar 2010 11:05:25 -0700
Subject: [antlr-interest] [C target] How to create preprocessor?
In-Reply-To: <213866198.1269540115.55184312.68548@mcgi59.rambler.ru>
Message-ID: <0089c2144ec55141b94a4593567c905d@temporal-wave.com>

Please see the example C parser in the C subdirectory of the downloadable examples tar on the download page. It implements the include statement simply but shows how to use stacked input streams which are built in to the v3 C target.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ?????? ???????
> Sent: Thursday, March 25, 2010 11:02 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C target] How to create preprocessor?
> 
>  Good day,
> 
> I want to parse 'include stmt'. I have found good article for old
> antlr.
> http://www.ibm.com/developerworks/aix/library/au-
> c_plusplus_antlr/index.html.
> 
> But I work with Antlr 3, C target. And I haven't found any interface
> like
> TokenStreamSelector..
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From yurushkin at rambler.ru  Thu Mar 25 11:49:11 2010
From: yurushkin at rambler.ru (Michael)
Date: Thu, 25 Mar 2010 21:49:11 +0300
Subject: [antlr-interest] [C target] How to create preprocessor?
In-Reply-To: <0089c2144ec55141b94a4593567c905d@temporal-wave.com>
References: <0089c2144ec55141b94a4593567c905d@temporal-wave.com>
Message-ID: <op.u94zntse6ulka8@win-mupvrp0jyrf>

Thanks!

Jim Idle <jimi at temporal-wave.com> ?????(?) ? ????? ?????? Thu, 25 Mar 2010  
21:05:25 +0300:

> Please see the example C parser in the C subdirectory of the  
> downloadable examples tar on the download page. It implements the  
> include statement simply but shows how to use stacked input streams  
> which are built in to the v3 C target.
>
> Jim
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of ?????? ???????
>> Sent: Thursday, March 25, 2010 11:02 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] [C target] How to create preprocessor?
>>
>>  Good day,
>>
>> I want to parse 'include stmt'. I have found good article for old
>> antlr.
>> http://www.ibm.com/developerworks/aix/library/au-
>> c_plusplus_antlr/index.html.
>>
>> But I work with Antlr 3, C target. And I haven't found any interface
>> like
>> TokenStreamSelector..
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:  
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
???????? ? ???????? ??????? ???????? Opera: http://www.opera.com/mail/

From simonzack at gmail.com  Thu Mar 25 19:17:32 2010
From: simonzack at gmail.com (Simon zack)
Date: Fri, 26 Mar 2010 13:17:32 +1100
Subject: [antlr-interest] NoViableAltException this time
Message-ID: <b811ef761003251917l1dd993feqd33564fa803edffe@mail.gmail.com>

Still can't figure this out
This time I looked at the lexer code generated and it seems that after the
DOT
whenever it encounters 'e' it matches '.exception_info'
this is strange, as I thought the default of antlr matching was greedy
Why should it resort to another rule when the current subrule matches? This
is non-greedy behavior

regards,
simon

From stefika at gmail.com  Fri Mar 26 08:35:20 2010
From: stefika at gmail.com (Andreas Stefik)
Date: Fri, 26 Mar 2010 10:35:20 -0500
Subject: [antlr-interest] Combining rewrite rules and syntactic predicates
Message-ID: <1332b72e1003260835n2c947e60x92eb1deb4a53ad96@mail.gmail.com>

Hello folks,

I've written a number of little compilers and VMs, but am relatively
new to ANTLR. I am currently working on a custom programming language
that is being designed through a series of statistical studies on how
humans process language. While the language is pretty intuitive
because of this, parsing can often get a bit complicated. I am
currently working on getting a form of if statements into the
language, and because of the parsing complexities in the language as a
whole, it can occasionally be difficult to tweak seemingly simple
parser rules. Here's a snippet of the rule in my parser:

if_statement	
	:
	IF expression THEN block END
	((ELSE IF expression THEN block  END ) => (ELSE IF expression THEN
block END))*  //else if blocks
	((ELSE block END) => (ELSE block END) )?
	
	
	-> ^(IF expression THEN block END (ELSE_IF_STATEMENT ELSE IF
expression THEN block END)* (FINAL_ELSE ELSE block END)? )
	;

(assume ELSE_IF_STATEMENT and FINAL_ELSE are appropriately defined
hidden tokens)

First, the problem I'm having is that I'm receiving a
org.antlr.runtime.tree.RewriteEmptyStreamException: token ELSE

I've dug through the generated parser where it says the error is:

while ( stream_block.hasNext()||stream_END.hasNext()||stream_expression.hasNext()||stream_IF.hasNext()||stream_ELSE_IF_STATEMENT.hasNext()||stream_THEN.hasNext()||stream_ELSE.hasNext()
) {
                    adaptor.addChild(root_1,
stream_ELSE_IF_STATEMENT.nextNode());
                    adaptor.addChild(root_1, stream_ELSE.nextNode());
                    adaptor.addChild(root_1, stream_IF.nextNode());
                    adaptor.addChild(root_1, stream_expression.nextTree());
                    adaptor.addChild(root_1, stream_THEN.nextNode());
                    adaptor.addChild(root_1, stream_block.nextTree());
                    adaptor.addChild(root_1, stream_END.nextNode());

                }

Oddly enough, this block appears to result in true, as it claims there
is another END and Block in the code I've passed it, which is as
follows:

if a = b then
    a = a + 1
end

Clearly no additional block after the if has ended. Now, again
somewhat oddly, if I change my IF rule to be something like this:

if_statement	
	:
	IF expression THEN block END
	((ELSE if_statement ) => (ELSE if_statement))*  //else if blocks
	((ELSE block END) => (ELSE block END) )?
	
	
	-> ^(IF expression THEN block END (ELSE_IF_STATEMENT ELSE
if_statement)* (FINAL_ELSE ELSE block END)? )
	;

The rewrite rule exceptions go away and things generally work fine.
I'm having trouble wrapping my head around why that would be the case.

1. Anyone have any clues as to what might be going on here?

2. Is there something going on underneath the surface in the way I'm
combining rewrite rules and syntactic predicates that I'm not
understanding?

Any help would be appreciated,

Stefik

From wkoscho at gmail.com  Fri Mar 26 12:22:19 2010
From: wkoscho at gmail.com (William Koscho)
Date: Fri, 26 Mar 2010 15:22:19 -0400
Subject: [antlr-interest] Help Fixing Alternate Paths Problem
Message-ID: <d8e975631003261222i5e6bc145h5c24c4f724e9359c@mail.gmail.com>

Hi All,

My grammar results in the error:
Decision can match input such as "'component' ID '{' '}'" using multiple
alternatives: 1, 2.

I know the problem, but just am not sure of the best way to fix this.
Ultimately, I'm trying to construct the AST with type information in the
tree nodes, and the type information comes from my java class SymbolTable.
How can I fix this and still get the type info from my SymbolTable class?

Grammar:
elementDef : componentDef  | interfaceDef ;

componentDef  :  ( type ID '{' interfaceRef* '}' )  -> ^(type ID
interfaceRef*);
interfaceDef  :  ( type ID '{' messageDef* '}' ) -> ^(type ID messageDef*);

type returns [Type t]
 : 'component' { $t = (Type)m_symbolTable.resolve("component"); }
 | 'interface' { $t = (Type)m_symbolTable.resolve("interface"); }
 | 'message'   { $t = (Type)m_symbolTable.resolve("message"); } ;

Thanks
Bill

From davidblubaugh2000 at yahoo.com  Fri Mar 26 13:20:36 2010
From: davidblubaugh2000 at yahoo.com (David Blubaugh)
Date: Fri, 26 Mar 2010 13:20:36 -0700 (PDT)
Subject: [antlr-interest] NEW TARGET
Message-ID: <464238.54704.qm@web113301.mail.gq1.yahoo.com>

To All, 
?
Has anyone ever developed a numerical scripting language that targeted either the VHDL or Verilog Language??
?
Thanks,
?
David Blubaugh
?
?
?


      

From michael.bedward at gmail.com  Fri Mar 26 20:19:39 2010
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 27 Mar 2010 14:19:39 +1100
Subject: [antlr-interest] NEW TARGET
In-Reply-To: <464238.54704.qm@web113301.mail.gq1.yahoo.com>
References: <464238.54704.qm@web113301.mail.gq1.yahoo.com>
Message-ID: <e24c4c271003262019m5ba89543kcc0d343601c574ef@mail.gmail.com>

Not me but it looks like it would be fun :-)

Michael

From gthouraya at yahoo.fr  Sat Mar 27 01:15:53 2010
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Sat, 27 Mar 2010 08:15:53 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <762126.55828.qm@web26305.mail.ukl.yahoo.com>

Hello, 
I have to develop a tool which makes the generation of a
specification in CSP-Z from a specification Z, It is possible to use
your tool ANTLR to introduce the grammar of language Z and the grammar
of language CSP-Z and rules which I have already defined textuellement
and what is that I obtain a code or this tool makes the generation he
even?
please answer me it rather possible 
please
thanks


      

From gthouraya at yahoo.fr  Sat Mar 27 01:16:17 2010
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Sat, 27 Mar 2010 08:16:17 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <934790.55851.qm@web26305.mail.ukl.yahoo.com>

Hello, 
I have to develop a tool which makes the generation of a
specification in CSP-Z from a specification Z, It is possible to use
your tool ANTLR to introduce the grammar of language Z and the grammar
of language CSP-Z and rules which I have already defined textuellement
and what is that I obtain a code or this tool makes the generation he
even?
please answer me it rather possible 
please
thanks


      

From bkiers at gmail.com  Sat Mar 27 01:28:40 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 27 Mar 2010 09:28:40 +0100
Subject: [antlr-interest] (no subject)
In-Reply-To: <762126.55828.qm@web26305.mail.ukl.yahoo.com>
References: <762126.55828.qm@web26305.mail.ukl.yahoo.com>
Message-ID: <af443a971003270128u7f12f5et2002c61f46028764@mail.gmail.com>

On Sat, Mar 27, 2010 at 9:15 AM, Gouasmi Thouraya <gthouraya at yahoo.fr>wrote:

> Hello,
> I have to develop a tool which makes the generation of a
> specification in CSP-Z from a specification Z, It is possible to use
> your tool ANTLR to introduce the grammar of language Z and the grammar
> of language CSP-Z and rules which I have already defined textuellement
> and what is that I obtain a code or this tool makes the generation he
> even?
> please answer me it rather possible
> please
> thanks
>

http://antlr.markmail.org/search/?q=csp#query:csp%20from%3A%22Gouasmi%20Thouraya%22+page:1+mid:odfowxsgqufl4zvm+state:results

From bkiers at gmail.com  Sat Mar 27 01:29:04 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 27 Mar 2010 09:29:04 +0100
Subject: [antlr-interest] (no subject)
In-Reply-To: <934790.55851.qm@web26305.mail.ukl.yahoo.com>
References: <934790.55851.qm@web26305.mail.ukl.yahoo.com>
Message-ID: <af443a971003270129lf19fcb7lafb8012550e854de@mail.gmail.com>

On Sat, Mar 27, 2010 at 9:16 AM, Gouasmi Thouraya <gthouraya at yahoo.fr>wrote:

> Hello,
> I have to develop a tool which makes the generation of a
> specification in CSP-Z from a specification Z, It is possible to use
> your tool ANTLR to introduce the grammar of language Z and the grammar
> of language CSP-Z and rules which I have already defined textuellement
> and what is that I obtain a code or this tool makes the generation he
> even?
> please answer me it rather possible
> please
> thanks
>

http://antlr.markmail.org/search/?q=csp#query:csp%20from%3A%22Gouasmi%20Thouraya%22+page:1+mid:odfowxsgqufl4zvm+state:results

From gthouraya at yahoo.fr  Sat Mar 27 13:42:30 2010
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Sat, 27 Mar 2010 20:42:30 +0000 (GMT)
Subject: [antlr-interest] help me please
Message-ID: <204898.68469.qm@web26301.mail.ukl.yahoo.com>

I normally have to create grammar T1 of input and one the other grammar T2 of output and write the rules of transformation of T1 into T2, how I have to make exactly? I have to create the directory XYZ?? And how I have to do? 



      

From wkoscho at gmail.com  Sat Mar 27 17:32:31 2010
From: wkoscho at gmail.com (William Koscho)
Date: Sat, 27 Mar 2010 20:32:31 -0400
Subject: [antlr-interest] Help - Populating AST with Type Info
Message-ID: <d8e975631003271732r454b587r17953ff74d530e13@mail.gmail.com>

Hi All,

I'm trying to build an AST with type information, but the grammar I'm
using is ambiguious, and I'm not sure how to fix it.  The grammar
below can match the input string "component abc { }" using rule
componentDef or interfaceDef.

How can I fix this and still populate the AST with Type information?

elementDef : componentDef | interfaceDef ;

componentDef : ( type ID '{' interfaceRef* '}' ) -> ^(type ID interfaceRef*);

interfaceDef : ( type ID '{' messageDef* '}' ) -> ^(type ID messageDef*);

type returns [Type t] :
    ?'component' { $t = (Type)m_symbolTable.resolve("component"); }
    | 'interface' { $t = (Type)m_symbolTable.resolve("interface"); }
    | 'message' { $t = (Type)m_symbolTable.resolve("message"); } ;

From jbb at acm.org  Sat Mar 27 18:33:16 2010
From: jbb at acm.org (John B. Brodie)
Date: Sat, 27 Mar 2010 21:33:16 -0400
Subject: [antlr-interest] Help - Populating AST with Type Info
In-Reply-To: <d8e975631003271732r454b587r17953ff74d530e13@mail.gmail.com>
References: <d8e975631003271732r454b587r17953ff74d530e13@mail.gmail.com>
Message-ID: <1269739996.4925.30.camel@gecko.home.org>

Greetings!

First let me say that I am really confused by your example, so my reply
below may not be of any use to you.... sorry

On Sat, 2010-03-27 at 20:32 -0400, William Koscho wrote:
> Hi All,
> 
> I'm trying to build an AST with type information, but the grammar I'm
> using is ambiguious, and I'm not sure how to fix it.  The grammar
> below can match the input string "component abc { }" using rule
> componentDef or interfaceDef.
> 
> How can I fix this and still populate the AST with Type information?
> 
> elementDef : componentDef | interfaceDef ;
> 
> componentDef : ( type ID '{' interfaceRef* '}' ) -> ^(type ID interfaceRef*);
> 
> interfaceDef : ( type ID '{' messageDef* '}' ) -> ^(type ID messageDef*);
> 
> type returns [Type t] :
>      'component' { $t = (Type)m_symbolTable.resolve("component"); }
>     | 'interface' { $t = (Type)m_symbolTable.resolve("interface"); }
>     | 'message' { $t = (Type)m_symbolTable.resolve("message"); } ;
> 

But neither the componentDef nor the interfaceDef rules utilize the
returned value from the type rule. Simply returning a Type from the type
rule does not mean that it gets magically included in the AST (AFAIK).

So I do not see how you are populating your tree with information from
the symbol table.

On the other hand, I think that you may simply resolve your ambiguity by
hoisting the 'component' keyword into your componentDef rule. And you
may also deal with the symbol table therein.

something like (untested):

componentDef :
@init{ Type t = null; }
    kw='component' { t = (Type)m_symboltable.resolve($kw.text); }
        ID '{' interfaceRef* '}' 
    -> /* need to use t here somehow...*/ ^($kw ID interfaceRef*)
    ;

Please, Please, PLEASE try to post the smallest yet complete example of
your issue when asking for help. Thanks.
   -jbb



From wkoscho at gmail.com  Sat Mar 27 20:27:34 2010
From: wkoscho at gmail.com (William Koscho)
Date: Sat, 27 Mar 2010 23:27:34 -0400
Subject: [antlr-interest] Help - Populating AST with Type Info
In-Reply-To: <1269739996.4925.30.camel@gecko.home.org>
References: <d8e975631003271732r454b587r17953ff74d530e13@mail.gmail.com>
	<1269739996.4925.30.camel@gecko.home.org>
Message-ID: <d8e975631003272027s3c71474cnbba0214b82ad4c02@mail.gmail.com>

Hi John,

Sorry for the bad example; I haven't used ANTLR in several years and
am just getting back into it, and pointing out that I wasn't using the
return value solved another problem for me.

Your reply did help me. thanks

thanks
Bill

On Sat, Mar 27, 2010 at 9:33 PM, John B. Brodie <jbb at acm.org> wrote:
> Greetings!
>
> First let me say that I am really confused by your example, so my reply
> below may not be of any use to you.... sorry
>
> On Sat, 2010-03-27 at 20:32 -0400, William Koscho wrote:
>> Hi All,
>>
>> I'm trying to build an AST with type information, but the grammar I'm
>> using is ambiguious, and I'm not sure how to fix it. ?The grammar
>> below can match the input string "component abc { }" using rule
>> componentDef or interfaceDef.
>>
>> How can I fix this and still populate the AST with Type information?
>>
>> elementDef : componentDef | interfaceDef ;
>>
>> componentDef : ( type ID '{' interfaceRef* '}' ) -> ^(type ID interfaceRef*);
>>
>> interfaceDef : ( type ID '{' messageDef* '}' ) -> ^(type ID messageDef*);
>>
>> type returns [Type t] :
>> ? ? ?'component' { $t = (Type)m_symbolTable.resolve("component"); }
>> ? ? | 'interface' { $t = (Type)m_symbolTable.resolve("interface"); }
>> ? ? | 'message' { $t = (Type)m_symbolTable.resolve("message"); } ;
>>
>
> But neither the componentDef nor the interfaceDef rules utilize the
> returned value from the type rule. Simply returning a Type from the type
> rule does not mean that it gets magically included in the AST (AFAIK).
>
> So I do not see how you are populating your tree with information from
> the symbol table.
>
> On the other hand, I think that you may simply resolve your ambiguity by
> hoisting the 'component' keyword into your componentDef rule. And you
> may also deal with the symbol table therein.
>
> something like (untested):
>
> componentDef :
> @init{ Type t = null; }
> ? ?kw='component' { t = (Type)m_symboltable.resolve($kw.text); }
> ? ? ? ?ID '{' interfaceRef* '}'
> ? ?-> /* need to use t here somehow...*/ ^($kw ID interfaceRef*)
> ? ?;
>
> Please, Please, PLEASE try to post the smallest yet complete example of
> your issue when asking for help. Thanks.
> ? -jbb
>
>
>

From ketancmaheshwari at gmail.com  Sun Mar 28 08:26:30 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Sun, 28 Mar 2010 17:26:30 +0200
Subject: [antlr-interest] parser call hangs in test program
Message-ID: <8e487b941003280826m69184328u62dbee5a9c7f8062@mail.gmail.com>

Hello Friends

I have a DSL that I am trying to play with using the test program generated
by ANTLRworks.

I am facing the same problem as described here:
http://stackoverflow.com/questions/1792716/antlr-parser-hanging-at-proxy-handshake-call


My test program for my language too hangs at the same point where I call the
Parser constructor. As described in  the answer of the above link, I try to
turn of debugging but nothing happens.

Any clues?

Attached the test.java  file.


Many thanks
Ketan

From jimi at temporal-wave.com  Sun Mar 28 08:28:32 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 28 Mar 2010 08:28:32 -0700
Subject: [antlr-interest] parser call hangs in test program
In-Reply-To: <8e487b941003280826m69184328u62dbee5a9c7f8062@mail.gmail.com>
Message-ID: <cbdd25aad84a9b47b3e4ccbaf7c8f431@temporal-wave.com>

It is waiting for the ANTLRWorks debugger to connect. If you don?t want this, then regenerate from the command line without the -debug option. Java -jar ....

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ketan Maheshwari
> Sent: Sunday, March 28, 2010 8:27 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] parser call hangs in test program
> 
> Hello Friends
> 
> I have a DSL that I am trying to play with using the test program
> generated by ANTLRworks.
> 
> I am facing the same problem as described here:
> http://stackoverflow.com/questions/1792716/antlr-parser-hanging-at-
> proxy-handshake-call
> 
> 
> My test program for my language too hangs at the same point where I
> call the Parser constructor. As described in  the answer of the above
> link, I try to turn of debugging but nothing happens.
> 
> Any clues?
> 
> Attached the test.java  file.
> 
> 
> Many thanks
> Ketan




From ketancmaheshwari at gmail.com  Mon Mar 29 07:35:32 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Mon, 29 Mar 2010 16:35:32 +0200
Subject: [antlr-interest] How to get GUI like tree structure
Message-ID: <8e487b941003290735g5e599324i48dc77510094546f@mail.gmail.com>

Hello Friends

I am trying to use the CommonTree generated by the parser of my grammar
against a test code.

Using the getChild(index).toString method, I get the tokens well.

However, I do not know how can I also get a hierarchy of the rule to which
they belong to. Similar to what we get in the ANTLRworks GUI.

Any clue how can I get a tree such that it shows complete hierarchy of the
grammar and the tokens as leaf nodes only.

Am I using the correct Data Structure (CommonTree) ?

Thanks for any clues.

Regards
Ketan

From jimi at temporal-wave.com  Mon Mar 29 08:41:17 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 29 Mar 2010 08:41:17 -0700
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <8e487b941003290735g5e599324i48dc77510094546f@mail.gmail.com>
Message-ID: <71d31cee32947e46a27006af48b4fd58@temporal-wave.com>

Look at the code for DOTTreeGenerator.java or use toStringTree() if that gives you a good enough representation.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ketan Maheshwari
> Sent: Monday, March 29, 2010 7:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get GUI like tree structure
> 
> Hello Friends
> 
> I am trying to use the CommonTree generated by the parser of my grammar
> against a test code.
> 
> Using the getChild(index).toString method, I get the tokens well.
> 
> However, I do not know how can I also get a hierarchy of the rule to
> which
> they belong to. Similar to what we get in the ANTLRworks GUI.
> 
> Any clue how can I get a tree such that it shows complete hierarchy of
> the
> grammar and the tokens as leaf nodes only.
> 
> Am I using the correct Data Structure (CommonTree) ?
> 
> Thanks for any clues.
> 
> Regards
> Ketan
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ketancmaheshwari at gmail.com  Mon Mar 29 09:17:46 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Mon, 29 Mar 2010 18:17:46 +0200
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <71d31cee32947e46a27006af48b4fd58@temporal-wave.com>
References: <8e487b941003290735g5e599324i48dc77510094546f@mail.gmail.com>
	<71d31cee32947e46a27006af48b4fd58@temporal-wave.com>
Message-ID: <8e487b941003290917p4b32c557j50c5a62f3738db51@mail.gmail.com>

Jim

Thanks again for your answer.

1. I checked the DOTTreeGenerator.java code but I do not seem to know how it
finds all the info about a tree. Also I am confused with its use of both the
stringtemplates and trees (are'nt they mutually exclusive?).

2. Yes, the toStringTree() method prints the tree but it only gives the leaf
nodes, that is the program itself. I have no info about which rule a given
token belongs to.

To be more clear, see the attached snapshot. My question is how can I
capture this parse tree in a some kind of java data structure and walk
through it.

Many Thanks again for all your help.

Ketan

On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Look at the code for DOTTreeGenerator.java or use toStringTree() if that
> gives you a good enough representation.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ketan Maheshwari
> > Sent: Monday, March 29, 2010 7:36 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] How to get GUI like tree structure
> >
> > Hello Friends
> >
> > I am trying to use the CommonTree generated by the parser of my grammar
> > against a test code.
> >
> > Using the getChild(index).toString method, I get the tokens well.
> >
> > However, I do not know how can I also get a hierarchy of the rule to
> > which
> > they belong to. Similar to what we get in the ANTLRworks GUI.
> >
> > Any clue how can I get a tree such that it shows complete hierarchy of
> > the
> > grammar and the tokens as leaf nodes only.
> >
> > Am I using the correct Data Structure (CommonTree) ?
> >
> > Thanks for any clues.
> >
> > Regards
> > Ketan
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tree.png
Type: image/png
Size: 20997 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100329/783ae2a5/attachment.png 

From jimi at temporal-wave.com  Mon Mar 29 09:30:38 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 29 Mar 2010 09:30:38 -0700
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <8e487b941003290917p4b32c557j50c5a62f3738db51@mail.gmail.com>
Message-ID: <e31a32c055960e4daab10b713a2d4151@temporal-wave.com>

Ah. You are asking for the parser tree, not a representation of the AST? Search the mailing list for this. Such a tree is not generally useful for doing things with (so if you are looking for this information because you want to use it to generate code or something, then you are probably looking at your problem incorrectly), but it is very useful for debugging the tree. 

 

http://antlr.markmail.org/search/?q=parse+tree

 

 

If all you want is information in the nodes, then get the payload of the leaf node (usually CommonToken) and ask for it, but that?s what the code you looked at is doing. 

 

Jim

 

 

From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com] 
Sent: Monday, March 29, 2010 9:18 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure

 

Jim 

 

Thanks again for your answer.

 

1. I checked the DOTTreeGenerator.java code but I do not seem to know how it finds all the info about a tree. Also I am confused with its use of both the stringtemplates and trees (are'nt they mutually exclusive?).

 

2. Yes, the toStringTree() method prints the tree but it only gives the leaf nodes, that is the program itself. I have no info about which rule a given token belongs to.

 

To be more clear, see the attached snapshot. My question is how can I capture this parse tree in a some kind of java data structure and walk through it.

 

Many Thanks again for all your help.

Ketan

 

On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Look at the code for DOTTreeGenerator.java or use toStringTree() if that gives you a good enough representation.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ketan Maheshwari
> Sent: Monday, March 29, 2010 7:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get GUI like tree structure
>
> Hello Friends
>
> I am trying to use the CommonTree generated by the parser of my grammar
> against a test code.
>
> Using the getChild(index).toString method, I get the tokens well.
>
> However, I do not know how can I also get a hierarchy of the rule to
> which
> they belong to. Similar to what we get in the ANTLRworks GUI.
>
> Any clue how can I get a tree such that it shows complete hierarchy of
> the
> grammar and the tokens as leaf nodes only.
>
> Am I using the correct Data Structure (CommonTree) ?
>
> Thanks for any clues.
>
> Regards
> Ketan
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 




From kunalsawlani at gmail.com  Mon Mar 29 11:37:38 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Mon, 29 Mar 2010 14:37:38 -0400
Subject: [antlr-interest] Posting to ANTLR interest list.
Message-ID: <9a93847b1003291137s1ba68dc2vb0f068725f86a16a@mail.gmail.com>

Hello,
My email address is kunalsawlani at gmail.com

-- 
Kunal Sawlani

From gthouraya at yahoo.fr  Mon Mar 29 18:24:37 2010
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Tue, 30 Mar 2010 01:24:37 +0000 (GMT)
Subject: [antlr-interest] (no subject)
Message-ID: <396659.24222.qm@web26301.mail.ukl.yahoo.com>

Please, I undestand that i have write a grammar of two language by ANTLRWork, but i not understood why i create a parser for translate a language A to a language B.
?please help me and give me an example.

Please


      

From michael.bedward at gmail.com  Mon Mar 29 19:30:23 2010
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 30 Mar 2010 13:30:23 +1100
Subject: [antlr-interest] (no subject)
In-Reply-To: <396659.24222.qm@web26301.mail.ukl.yahoo.com>
References: <396659.24222.qm@web26301.mail.ukl.yahoo.com>
Message-ID: <e24c4c271003291930t3a415d87nd036dddaec5698a7@mail.gmail.com>

Hello,

I think the reason that you're not getting many answers is that your
questions are too general.

If you are trying to understand the basics of ANTLR I'd highly
recommend that you purchase and study the two books:

http://pragprog.com/titles/tpantlr/the-definitive-antlr-reference

http://pragprog.com/titles/tpdsl/language-implementation-patterns

Michael


On 30 March 2010 12:24, Gouasmi Thouraya <gthouraya at yahoo.fr> wrote:
> Please, I undestand that i have write a grammar of two language by ANTLRWork, but i not understood why i create a parser for translate a language A to a language B.
> ?please help me and give me an example.
>
> Please
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cliff.s.hudson at gmail.com  Mon Mar 29 20:19:46 2010
From: cliff.s.hudson at gmail.com (Cliff Hudson)
Date: Mon, 29 Mar 2010 20:19:46 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite loop -
	bug in the Lexer?
Message-ID: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>

I have been trying to work through an issue with an infinite loop caused
when no tokens can be matched because a predicate has failed its test.  The
problem appears to be in the Lexer.NextToken() (looking at CSharp2 sources)
method, which I have copied here for reference:

		/// <summary>
		/// Return a token from this source; i.e., Match a token on the char stream.
		/// </summary>
		public virtual IToken NextToken()
		{
			while (true)
			{
				state.token = null;
				state.channel = Token.DEFAULT_CHANNEL;
				state.tokenStartCharIndex = input.Index;
				state.tokenStartCharPositionInLine = input.CharPositionInLine;
				state.tokenStartLine = input.Line;
				state.text = null;
				if (input.LA(1) == (int)CharStreamConstants.EOF)
				{
					return Token.EOF_TOKEN;
				}
				try
				{
					mTokens();
					if (state.token == null)
					{
						Emit();
					}
					else if (state.token == Token.SKIP_TOKEN)
					{
						continue;
					}
					return state.token;
				}
				catch (NoViableAltException nva) {
					ReportError(nva);
					Recover(nva); // throw out current char and try again
				}
				catch (RecognitionException re) {
					ReportError(re);
					// Match() routine has already called Recover()
				}
			}
		}

Note the RecognitionException clause.  This is the clause which will
catch the FailedPredicateException().  Unfortunately, because the
FailedPredicateException gets thrown just before Match() occurs in the
rule, Recover will *not* have been called by the rule or its callees,
and therefore the DFA will continue to try processing the same token.
It would appear that there should instead be a specific
FailedPredicateException clause which does the same thing as the
NoViableAltException clause.

I have seen two other people ask questions about this error, and in
neither case was a suitable response given.  Has this bug been fixed
in non-released builds?  Can someone give me an up-or-down on whether
this is a correct and appropriate fix?

Thanks.

- Cliff

From cliff.s.hudson at gmail.com  Mon Mar 29 20:36:05 2010
From: cliff.s.hudson at gmail.com (Cliff Hudson)
Date: Mon, 29 Mar 2010 20:36:05 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
References: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
Message-ID: <1c0448551003292036v3d058d1fraee43d87720c47d5@mail.gmail.com>

And incidentally I have tried to make this change using a snapshot of
sources obtained from Fisheye, but it appears the code has changed in such a
way that the lexer and parser produced by compiling with the Antlr 3.2
toolset is no longer compatible (for instance, IIntToken.Index is now a
property, not a method.)

On Mon, Mar 29, 2010 at 8:19 PM, Cliff Hudson <cliff.s.hudson at gmail.com>wrote:

> I have been trying to work through an issue with an infinite loop caused
> when no tokens can be matched because a predicate has failed its test.  The
> problem appears to be in the Lexer.NextToken() (looking at CSharp2 sources)
> method, which I have copied here for reference:
>
> 		/// <summary>
> 		/// Return a token from this source; i.e., Match a token on the char stream.
> 		/// </summary>
> 		public virtual IToken NextToken()
> 		{
> 			while (true)
> 			{
> 				state.token = null;
> 				state.channel = Token.DEFAULT_CHANNEL;
> 				state.tokenStartCharIndex = input.Index;
> 				state.tokenStartCharPositionInLine = input.CharPositionInLine;
> 				state.tokenStartLine = input.Line;
> 				state.text = null;
> 				if (input.LA(1) == (int)CharStreamConstants.EOF)
> 				{
> 					return Token.EOF_TOKEN;
> 				}
> 				try
> 				{
> 					mTokens();
> 					if (state.token == null)
> 					{
> 						Emit();
> 					}
> 					else if (state.token == Token.SKIP_TOKEN)
> 					{
> 						continue;
> 					}
> 					return state.token;
> 				}
> 				catch (NoViableAltException nva) {
> 					ReportError(nva);
> 					Recover(nva); // throw out current char and try again
> 				}
> 				catch (RecognitionException re) {
> 					ReportError(re);
> 					// Match() routine has already called Recover()
> 				}
> 			}
> 		}
>
> Note the RecognitionException clause.  This is the clause which will catch the FailedPredicateException().  Unfortunately, because the FailedPredicateException gets thrown just before Match() occurs in the rule, Recover will *not* have been called by the rule or its callees, and therefore the DFA will continue to try processing the same token.  It would appear that there should instead be a specific FailedPredicateException clause which does the same thing as the NoViableAltException clause.
>
> I have seen two other people ask questions about this error, and in neither case was a suitable response given.  Has this bug been fixed in non-released builds?  Can someone give me an up-or-down on whether this is a correct and appropriate fix?
>
> Thanks.
>
> - Cliff
>
>

From cliff.s.hudson at gmail.com  Mon Mar 29 23:58:54 2010
From: cliff.s.hudson at gmail.com (Cliff Hudson)
Date: Mon, 29 Mar 2010 23:58:54 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
References: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
Message-ID: <1c0448551003292358v33a11599xfe62aca825a68e7f@mail.gmail.com>

Also, if you use the XML sample grammar on the ANTLR website, and pass it
the following simple input, you will encounter this problem:

<Project><</Project>


On Mon, Mar 29, 2010 at 8:19 PM, Cliff Hudson <cliff.s.hudson at gmail.com>wrote:

> I have been trying to work through an issue with an infinite loop caused
> when no tokens can be matched because a predicate has failed its test.  The
> problem appears to be in the Lexer.NextToken() (looking at CSharp2 sources)
> method, which I have copied here for reference:
>
> 		/// <summary>
> 		/// Return a token from this source; i.e., Match a token on the char stream.
> 		/// </summary>
> 		public virtual IToken NextToken()
> 		{
> 			while (true)
> 			{
> 				state.token = null;
> 				state.channel = Token.DEFAULT_CHANNEL;
> 				state.tokenStartCharIndex = input.Index;
> 				state.tokenStartCharPositionInLine = input.CharPositionInLine;
> 				state.tokenStartLine = input.Line;
> 				state.text = null;
> 				if (input.LA(1) == (int)CharStreamConstants.EOF)
> 				{
> 					return Token.EOF_TOKEN;
> 				}
> 				try
> 				{
> 					mTokens();
> 					if (state.token == null)
> 					{
> 						Emit();
> 					}
> 					else if (state.token == Token.SKIP_TOKEN)
> 					{
> 						continue;
> 					}
> 					return state.token;
> 				}
> 				catch (NoViableAltException nva) {
> 					ReportError(nva);
> 					Recover(nva); // throw out current char and try again
> 				}
> 				catch (RecognitionException re) {
> 					ReportError(re);
> 					// Match() routine has already called Recover()
> 				}
> 			}
> 		}
>
> Note the RecognitionException clause.  This is the clause which will catch the FailedPredicateException().  Unfortunately, because the FailedPredicateException gets thrown just before Match() occurs in the rule, Recover will *not* have been called by the rule or its callees, and therefore the DFA will continue to try processing the same token.  It would appear that there should instead be a specific FailedPredicateException clause which does the same thing as the NoViableAltException clause.
>
> I have seen two other people ask questions about this error, and in neither case was a suitable response given.  Has this bug been fixed in non-released builds?  Can someone give me an up-or-down on whether this is a correct and appropriate fix?
>
> Thanks.
>
> - Cliff
>
>

From BrianC at sannas.org  Tue Mar 30 00:24:03 2010
From: BrianC at sannas.org (Brian Catlin)
Date: Mon, 29 Mar 2010 21:24:03 -1000
Subject: [antlr-interest] C example error
Message-ID: <004001cacfda$03551c10$09ff5430$@sannas.org>

I tried to build the PolyDiff example from Examples-v3, using
ANTLR-3.1-2009-06-28 and libantlr3c-3.2 in Visual Studio 2008.  The output
from the build:

 

1>------ Rebuild All started: Project: polydiff, Configuration: Debug Win32
------

1>Deleting intermediate and output files for project 'polydiff',
configuration 'Debug|Win32'

1>Translating to parser/lexer combination

1>Translating to parser/lexer combination

1>Translating to parser/lexer combination

1>Translating to parser/lexer combination

1>.\PolyDifferentiator.g(0,0) : warning 138 : grammar PolyDifferentiator: no
start rule (no rule can obviously be followed by EOF)

1>Compiling...

1>Simplifier.c

1>PolyPrinter.c

1>PolyParser.c

1>PolyLexer.c

1>PolyDifferentiator.c

1>main.c

1>Generating Code...

1>Compiling manifest to resources...

1>Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385

1>Copyright (C) Microsoft Corporation.  All rights reserved.

1>Linking...

1>LINK : C:\MIMOS\ANTLR\examples-v3\C\Debug\polydiff.exe not found or not
built by the last incremental link; performing full link

1>   Creating library C:\MIMOS\ANTLR\examples-v3\C\Debug\polydiff.lib and
object C:\MIMOS\ANTLR\examples-v3\C\Debug\polydiff.exp

1>Embedding manifest...

1>Microsoft (R) Windows (R) Resource Compiler Version 6.1.7600.16385

1>Copyright (C) Microsoft Corporation.  All rights reserved.

1>Build log was saved at
"file://c:\MIMOS\ANTLR\examples-v3\C\polydiff\Debug\BuildLog.htm
<file:///c:\MIMOS\ANTLR\examples-v3\C\polydiff\Debug\BuildLog.htm> "

1>polydiff - 0 error(s), 1 warning(s)

========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========

 

As you can see, there is a warning generating PolyDifferentiator.g

 

When I run the resulting program, I get an access violation in addChild
(antlr3basetree.c) at the ->, because child has not been initialized

 

void      

addChild (pANTLR3_BASE_TREE tree, pANTLR3_BASE_TREE child)

{

      ANTLR3_UINT32   n;

      ANTLR3_UINT32   i;

 

      if    (child == NULL)

      {

            return;

      }

 

->  if    (child->isNilNode(child) == ANTLR3_TRUE)

      {

            if  (child->children != NULL && child->children ==
tree->children)

 

 

 

 


From gthouraya at yahoo.fr  Tue Mar 30 04:07:21 2010
From: gthouraya at yahoo.fr (Gouasmi Thouraya)
Date: Tue, 30 Mar 2010 11:07:21 +0000 (GMT)
Subject: [antlr-interest] please help me
Message-ID: <324882.43764.qm@web26306.mail.ukl.yahoo.com>




Hello
Please sir
In my project, I have to develop a tool which makes the transformation of a specification in a language Z towards a specification in another language CSP-Z, I already have?defined textuellement of the rules for this transformation. I try to find a tool which takes in?input grammar of two languages and the rules that I have already defined and to him to make this transformation, and I find that can be this tool answers my needs. In spite of the bank of documentation for?the ANTLR I don't understood exactly the steps that I have to make them.
After some reading, I understood that being can I have to write the grammars of two languages but with which tool, with which language and how (with the ANTLRWork?)?
Then what I have to make?
?I have to write a parser? And how?
Please help me, I am a little bit novice in programming, but I am going to make the maximun with your helps.
?
Please answer?me the rather possible , I am really in a critical case.
Thank you for your attention


      

From ketancmaheshwari at gmail.com  Tue Mar 30 05:18:45 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Tue, 30 Mar 2010 14:18:45 +0200
Subject: [antlr-interest] expressing URL in ANTLR grammar
Message-ID: <8e487b941003300518u213eed2bq4ac2b5e8c9377985@mail.gmail.com>

Hello Friends

Wondering if there is a repository for expressing standard things like URL
to express in antlr grammar.

Actually this is my lame attempt to ask if someone can help me express URL
in ANTLR grammar. :-)

Many Thanks
Ketan

From bkiers at gmail.com  Tue Mar 30 05:30:19 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 30 Mar 2010 14:30:19 +0200
Subject: [antlr-interest] expressing URL in ANTLR grammar
In-Reply-To: <8e487b941003300518u213eed2bq4ac2b5e8c9377985@mail.gmail.com>
References: <8e487b941003300518u213eed2bq4ac2b5e8c9377985@mail.gmail.com>
Message-ID: <af443a971003300530w4e79b84eh2e19d90a02ea5565@mail.gmail.com>

On Tue, Mar 30, 2010 at 2:18 PM, Ketan Maheshwari <
ketancmaheshwari at gmail.com> wrote:

> ...
>
> Actually this is my lame attempt to ask if someone can help me express URL
> in ANTLR grammar. :-)
>
>
I'd start by reading the specs of a URL:
http://www.w3.org/Addressing/URL/url-spec.txt , and then try to convert that
in an ANTLR grammar.

Regards,

Bart.

From ron.hunter-duvar at oracle.com  Tue Mar 30 08:11:30 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Tue, 30 Mar 2010 09:11:30 -0600
Subject: [antlr-interest] FailedPredicateException leads to infinite
 loop -	bug in the Lexer?
In-Reply-To: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
References: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
Message-ID: <4BB214A2.7040209@oracle.com>

Hi Cliff,

I reported this same problem on February 10 on this list. It's an Antlr 
bug, and my emails on it had the work around (which requires you to 
implement a custom superclass if you haven't already). If you search the 
list archives you should be able to find it.

Ron


Cliff Hudson wrote:
> I have been trying to work through an issue with an infinite loop caused
> when no tokens can be matched because a predicate has failed its test.  The
> problem appears to be in the Lexer.NextToken() (looking at CSharp2 sources)
> method, which I have copied here for reference:
>
> 		/// <summary>
> 		/// Return a token from this source; i.e., Match a token on the char stream.
> 		/// </summary>
> 		public virtual IToken NextToken()
> 		{
> 			while (true)
> 			{
> 				state.token = null;
> 				state.channel = Token.DEFAULT_CHANNEL;
> 				state.tokenStartCharIndex = input.Index;
> 				state.tokenStartCharPositionInLine = input.CharPositionInLine;
> 				state.tokenStartLine = input.Line;
> 				state.text = null;
> 				if (input.LA(1) == (int)CharStreamConstants.EOF)
> 				{
> 					return Token.EOF_TOKEN;
> 				}
> 				try
> 				{
> 					mTokens();
> 					if (state.token == null)
> 					{
> 						Emit();
> 					}
> 					else if (state.token == Token.SKIP_TOKEN)
> 					{
> 						continue;
> 					}
> 					return state.token;
> 				}
> 				catch (NoViableAltException nva) {
> 					ReportError(nva);
> 					Recover(nva); // throw out current char and try again
> 				}
> 				catch (RecognitionException re) {
> 					ReportError(re);
> 					// Match() routine has already called Recover()
> 				}
> 			}
> 		}
>
> Note the RecognitionException clause.  This is the clause which will
> catch the FailedPredicateException().  Unfortunately, because the
> FailedPredicateException gets thrown just before Match() occurs in the
> rule, Recover will *not* have been called by the rule or its callees,
> and therefore the DFA will continue to try processing the same token.
> It would appear that there should instead be a specific
> FailedPredicateException clause which does the same thing as the
> NoViableAltException clause.
>
> I have seen two other people ask questions about this error, and in
> neither case was a suitable response given.  Has this bug been fixed
> in non-released builds?  Can someone give me an up-or-down on whether
> this is a correct and appropriate fix?
>
> Thanks.
>
> - Cliff
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From ketancmaheshwari at gmail.com  Tue Mar 30 08:18:04 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Tue, 30 Mar 2010 17:18:04 +0200
Subject: [antlr-interest] token name from token type
Message-ID: <8e487b941003300818g70024d64s3714841dd5894fa8@mail.gmail.com>

Hello (Again)

I am playing with the CommonTree object. It has a method called getType()
that gives an int for token. How do I get the actual token name from that
int?

I saw in the archives that this question is asked but could not really find
the method String getTokenName(int) as answered in that post. Instead, I
find the method String[] getTokenNames() which is not suitable to my need.

Also here in the javadoc for Parser class, a method called String
getTokenName(int ) appears but it does not seem to be available in my parser
class which is an infact extended from parser class.

Thanks for your answers.

Ketan

From ron.hunter-duvar at oracle.com  Tue Mar 30 09:14:46 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Tue, 30 Mar 2010 10:14:46 -0600
Subject: [antlr-interest] token name from token type
In-Reply-To: <8e487b941003300818g70024d64s3714841dd5894fa8@mail.gmail.com>
References: <8e487b941003300818g70024d64s3714841dd5894fa8@mail.gmail.com>
Message-ID: <4BB22376.5050408@oracle.com>

I ran into the same problem. I may be wrong, but it seemed like 
functionality that was intended to be implemented in Antlr but was never 
finished, at least in the Java run-time. I just hacked together a method 
that uses introspection to pick out all the token type declarations 
("public static final int XXX = nnn") at startup and put them in a hash 
table. There might be a better way to do it, but this was easy enough 
and got the job done.

Ron


Ketan Maheshwari wrote:
> Hello (Again)
>
> I am playing with the CommonTree object. It has a method called getType()
> that gives an int for token. How do I get the actual token name from that
> int?
>
> I saw in the archives that this question is asked but could not really find
> the method String getTokenName(int) as answered in that post. Instead, I
> find the method String[] getTokenNames() which is not suitable to my need.
>
> Also here in the javadoc for Parser class, a method called String
> getTokenName(int ) appears but it does not seem to be available in my parser
> class which is an infact extended from parser class.
>
> Thanks for your answers.
>
> Ketan
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From bychkov.anton at gmail.com  Tue Mar 30 09:51:09 2010
From: bychkov.anton at gmail.com (Anton Bychkov)
Date: Tue, 30 Mar 2010 20:51:09 +0400
Subject: [antlr-interest] Partial parsing
Message-ID: <1363099f1003300951m55abf474o5a415059d20be80d@mail.gmail.com>

Hi.

I'm trying to implement partial SQL parsing in my application with the
help of ANTLR.
It is hard to write proper grammar for some SQL expressions, so I want
to leave them as a plain text.

Consider the following SQL statement:
SELECT name1, func(first expression), (second expression) as 'foo' FROM bar

I want this to be parsed in a list of field/function names with
expressions as text.
In this example the list would be:
'name1'
'func', 'first expression'
'second expression'

Writing grammar rules for list of fields names was easy, but I have no
idea how to write grammar rule for unparsed expressions.

I'm new to ANTLR, so off the top of my head, I have the following
algorithm for the rule:
- accept any characters except left and right braces
- for '(' increase brace count
- for ')' decrease brace count
- if got ')' with brace count equal to zero then stop parsing this entity

So, I tried something like this to parse 'func(first expression)'
entity (using C target):

fragment functionCall
	@init {
		int nb = 0;
	}
	:	NAME LEFT_BRACE
	(
		LEFT_BRACE { nb ++; }
		| { nb > 0 }?=> RIGHT_BRACE { nb --; }
		| ~(LEFT_BRACE | RIGHT_BRACE)
	)*
	RIGHT_BRACE;

And got antlrworks crashing and glitching, compilation errors in
generated code (error C2065: 'nb' : undeclared identifier).
That makes me think I'm going in wrong direction...

Please, help me write this goddamned rule or tell how to do it in a right way.

Thank you.

From cliff.s.hudson at gmail.com  Tue Mar 30 10:31:46 2010
From: cliff.s.hudson at gmail.com (Cliff Hudson)
Date: Tue, 30 Mar 2010 10:31:46 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <4BB214A2.7040209@oracle.com>
References: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>
	<4BB214A2.7040209@oracle.com>
Message-ID: <1c0448551003301031nf8c9070r5a8ed2e05ce30f95@mail.gmail.com>

I've been all over the archives, but perhaps my search terms were
inadequate.  I'll look again with that date in mind.  Thanks.

On Tue, Mar 30, 2010 at 8:11 AM, Ron Hunter-Duvar <
ron.hunter-duvar at oracle.com> wrote:

> Hi Cliff,
>
> I reported this same problem on February 10 on this list. It's an Antlr
> bug, and my emails on it had the work around (which requires you to
> implement a custom superclass if you haven't already). If you search the
> list archives you should be able to find it.
>
> Ron
>
>
> Cliff Hudson wrote:
>
>> I have been trying to work through an issue with an infinite loop caused
>> when no tokens can be matched because a predicate has failed its test.
>>  The
>> problem appears to be in the Lexer.NextToken() (looking at CSharp2
>> sources)
>> method, which I have copied here for reference:
>>
>>                /// <summary>
>>                /// Return a token from this source; i.e., Match a token on
>> the char stream.
>>                /// </summary>
>>                public virtual IToken NextToken()
>>                {
>>                        while (true)
>>                        {
>>                                state.token = null;
>>                                state.channel = Token.DEFAULT_CHANNEL;
>>                                state.tokenStartCharIndex = input.Index;
>>                                state.tokenStartCharPositionInLine =
>> input.CharPositionInLine;
>>                                state.tokenStartLine = input.Line;
>>                                state.text = null;
>>                                if (input.LA(1) ==
>> (int)CharStreamConstants.EOF)
>>                                {
>>                                        return Token.EOF_TOKEN;
>>                                }
>>                                try
>>                                {
>>                                        mTokens();
>>                                        if (state.token == null)
>>                                        {
>>                                                Emit();
>>                                        }
>>                                        else if (state.token ==
>> Token.SKIP_TOKEN)
>>                                        {
>>                                                continue;
>>                                        }
>>                                        return state.token;
>>                                }
>>                                catch (NoViableAltException nva) {
>>                                        ReportError(nva);
>>                                        Recover(nva); // throw out current
>> char and try again
>>                                }
>>                                catch (RecognitionException re) {
>>                                        ReportError(re);
>>                                        // Match() routine has already
>> called Recover()
>>                                }
>>                        }
>>                }
>>
>> Note the RecognitionException clause.  This is the clause which will
>> catch the FailedPredicateException().  Unfortunately, because the
>> FailedPredicateException gets thrown just before Match() occurs in the
>> rule, Recover will *not* have been called by the rule or its callees,
>> and therefore the DFA will continue to try processing the same token.
>> It would appear that there should instead be a specific
>> FailedPredicateException clause which does the same thing as the
>> NoViableAltException clause.
>>
>> I have seen two other people ask questions about this error, and in
>> neither case was a suitable response given.  Has this bug been fixed
>> in non-released builds?  Can someone give me an up-or-down on whether
>> this is a correct and appropriate fix?
>>
>> Thanks.
>>
>> - Cliff
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
> --
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
>
>

From ron.hunter-duvar at oracle.com  Tue Mar 30 10:58:27 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Tue, 30 Mar 2010 11:58:27 -0600
Subject: [antlr-interest] FailedPredicateException leads to infinite
 loop - bug in the Lexer?
In-Reply-To: <1c0448551003301031nf8c9070r5a8ed2e05ce30f95@mail.gmail.com>
References: <1c0448551003292019h53fbe2eas3250dd8b64ddd2a6@mail.gmail.com>	
	<4BB214A2.7040209@oracle.com>
	<1c0448551003301031nf8c9070r5a8ed2e05ce30f95@mail.gmail.com>
Message-ID: <4BB23BC3.9020101@oracle.com>

The message title was: "Antlr Bug: Failed semantic predicate in lexer    
triggers endless loop"

Basically, the bug is in the nextToken() method in Antlr's Lexer class. 
If a NoViableAlt exception is thrown, the method calls the recover 
method, which consumes one character before trying again. But if any 
other RecognitionException (including a FailedPredicateException) is 
thrown, it doesn't call recover, it just reports the exception and loops 
back to try again at the same point, which of course results in the same 
exception, because nothing has changed. I just added a recover call to 
the second catch block, and it solved the problem.

As I mentioned, I did this as an overriding method in a custom 
superclass. You could also fix it directly in the Antlr source, but then 
you'd have to rebuild Antlr.

I'm not sure this ever got reported as an official bug. Jim Idle 
disputed whether it was an Antlr bug. I sent proof, but not sure it was 
even looked at. Unfortunately, because of the (quite reasonable) legal 
agreement required to submit bug reports, and the fact that I'm doing 
this as an employee, I can't submit bug reports or fixes until I get 
approval to do so (seems ridiculous at first glance, but in today's 
legal climate I can't take chances).

Ron


Cliff Hudson wrote:
> I've been all over the archives, but perhaps my search terms were 
> inadequate.  I'll look again with that date in mind.  Thanks.
>
> On Tue, Mar 30, 2010 at 8:11 AM, Ron Hunter-Duvar 
> <ron.hunter-duvar at oracle.com <mailto:ron.hunter-duvar at oracle.com>> wrote:
>
>     Hi Cliff,
>
>     I reported this same problem on February 10 on this list. It's an
>     Antlr bug, and my emails on it had the work around (which requires
>     you to implement a custom superclass if you haven't already). If
>     you search the list archives you should be able to find it.
>
>     Ron
>
>
>     Cliff Hudson wrote:
>
>         I have been trying to work through an issue with an infinite
>         loop caused
>         when no tokens can be matched because a predicate has failed
>         its test.  The
>         problem appears to be in the Lexer.NextToken() (looking at
>         CSharp2 sources)
>         method, which I have copied here for reference:
>
>                        /// <summary>
>                        /// Return a token from this source; i.e.,
>         Match a token on the char stream.
>                        /// </summary>
>                        public virtual IToken NextToken()
>                        {
>                                while (true)
>                                {
>                                        state.token = null;
>                                        state.channel =
>         Token.DEFAULT_CHANNEL;
>                                        state.tokenStartCharIndex =
>         input.Index;
>                                      
>          state.tokenStartCharPositionInLine = input.CharPositionInLine;
>                                        state.tokenStartLine = input.Line;
>                                        state.text = null;
>                                        if (input.LA(1) ==
>         (int)CharStreamConstants.EOF)
>                                        {
>                                                return Token.EOF_TOKEN;
>                                        }
>                                        try
>                                        {
>                                                mTokens();
>                                                if (state.token == null)
>                                                {
>                                                        Emit();
>                                                }
>                                                else if (state.token ==
>         Token.SKIP_TOKEN)
>                                                {
>                                                        continue;
>                                                }
>                                                return state.token;
>                                        }
>                                        catch (NoViableAltException nva) {
>                                                ReportError(nva);
>                                                Recover(nva); // throw
>         out current char and try again
>                                        }
>                                        catch (RecognitionException re) {
>                                                ReportError(re);
>                                                // Match() routine has
>         already called Recover()
>                                        }
>                                }
>                        }
>
>         Note the RecognitionException clause.  This is the clause
>         which will
>         catch the FailedPredicateException().  Unfortunately, because the
>         FailedPredicateException gets thrown just before Match()
>         occurs in the
>         rule, Recover will *not* have been called by the rule or its
>         callees,
>         and therefore the DFA will continue to try processing the same
>         token.
>         It would appear that there should instead be a specific
>         FailedPredicateException clause which does the same thing as the
>         NoViableAltException clause.
>
>         I have seen two other people ask questions about this error,
>         and in
>         neither case was a suitable response given.  Has this bug been
>         fixed
>         in non-released builds?  Can someone give me an up-or-down on
>         whether
>         this is a correct and appropriate fix?
>
>         Thanks.
>
>         - Cliff
>
>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>          
>
>
>     -- 
>     Ron Hunter-Duvar | Software Developer V | 403-272-6580
>     Oracle Service Engineering
>     Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
>
>     All opinions expressed here are mine, and do not necessarily represent
>     those of my employer.
>
>

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From ketancmaheshwari at gmail.com  Tue Mar 30 11:20:29 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Tue, 30 Mar 2010 20:20:29 +0200
Subject: [antlr-interest] expressing URL in ANTLR grammar
In-Reply-To: <30dde8ce1003301001l5d719488n5659b82d44670b1e@mail.gmail.com>
References: <8e487b941003300518u213eed2bq4ac2b5e8c9377985@mail.gmail.com>
	<30dde8ce1003301001l5d719488n5659b82d44670b1e@mail.gmail.com>
Message-ID: <8e487b941003301120ob6948aft855b006b9d8a7393@mail.gmail.com>

Bart,
Thanks for your suggestion. I think its a really involved task to define URL
per the specification. For the timebeing I will do with my lightweight spec
:)

Ron
Thanks for the insight. Indeed, it would be interesting to dig into java's
URL class spec to get some info on how they manage it.

cheers
Ketan

On Tue, Mar 30, 2010 at 7:01 PM, Ron Burk <ronburk at gmail.com> wrote:

> > Actually this is my lame attempt to ask if someone can help me express
> URL
> > in ANTLR grammar. :-)
>
> It's a bit of a fuzzy goal, since the URL spec is kinda hierarchical,
> branched by numerous different "schemes".  For example, if you
> want to parse the detailed bits out of a Windows file: scheme,
> that's a whole other spec to chase down and decipher (introducing
> drive letters, share names,  UNC, different length restrictions
> depending on the context and syntax, ugh).
>
> If you "just" want to parse http: URLs, that seems like more of a
> regular expression than a grammar. The library for your favorite
> interpreted language probably already has a function (or regular
> expression) to do it for you...
>

From jimi at temporal-wave.com  Tue Mar 30 11:34:42 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 30 Mar 2010 11:34:42 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <4BB23BC3.9020101@oracle.com>
Message-ID: <d559651d5db9bc4da1eb311ba2eae3d4@temporal-wave.com>

Actually, I did not dispute that the hang was a bug, but stated that it was really somewhat irrelevant because the bug is in your predicate specifications. Lexers should not really be throwing exceptions but should be coded to deal with any input in a controlled manner. Your code was looked at, but as there has been no release since you reported your bug, I am not sure what you expect just at the moment.

Of course, while debugging, it would be better if the lexer did not go in to an endless loop; that is an oversight and we should do something about that (in the next release - but I have not recently even had time to raise the JIRA). But you should not be relying on exceptions and recovery in the lexer; especially not in something that is commercial. Fix your predicates/rules/etc and cater for the error cases; your error messages will be commensurately better and your users will thank you in kind.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ron Hunter-Duvar
> Sent: Tuesday, March 30, 2010 10:58 AM
> To: Cliff Hudson
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] FailedPredicateException leads to
> infinite loop - bug in the Lexer?
> 
> The message title was: "Antlr Bug: Failed semantic predicate in lexer
> triggers endless loop"
> 
> Basically, the bug is in the nextToken() method in Antlr's Lexer class.
> If a NoViableAlt exception is thrown, the method calls the recover
> method, which consumes one character before trying again. But if any
> other RecognitionException (including a FailedPredicateException) is
> thrown, it doesn't call recover, it just reports the exception and
> loops
> back to try again at the same point, which of course results in the
> same
> exception, because nothing has changed. I just added a recover call to
> the second catch block, and it solved the problem.
> 
> As I mentioned, I did this as an overriding method in a custom
> superclass. You could also fix it directly in the Antlr source, but
> then
> you'd have to rebuild Antlr.
> 
> I'm not sure this ever got reported as an official bug. Jim Idle
> disputed whether it was an Antlr bug. I sent proof, but not sure it was
> even looked at. Unfortunately, because of the (quite reasonable) legal
> agreement required to submit bug reports, and the fact that I'm doing
> this as an employee, I can't submit bug reports or fixes until I get
> approval to do so (seems ridiculous at first glance, but in today's
> legal climate I can't take chances).
> 
> Ron
> 
> 
> Cliff Hudson wrote:
> > I've been all over the archives, but perhaps my search terms were
> > inadequate.  I'll look again with that date in mind.  Thanks.
> >
> > On Tue, Mar 30, 2010 at 8:11 AM, Ron Hunter-Duvar
> > <ron.hunter-duvar at oracle.com <mailto:ron.hunter-duvar at oracle.com>>
> wrote:
> >
> >     Hi Cliff,
> >
> >     I reported this same problem on February 10 on this list. It's an
> >     Antlr bug, and my emails on it had the work around (which
> requires
> >     you to implement a custom superclass if you haven't already). If
> >     you search the list archives you should be able to find it.
> >
> >     Ron
> >
> >
> >     Cliff Hudson wrote:
> >
> >         I have been trying to work through an issue with an infinite
> >         loop caused
> >         when no tokens can be matched because a predicate has failed
> >         its test.  The
> >         problem appears to be in the Lexer.NextToken() (looking at
> >         CSharp2 sources)
> >         method, which I have copied here for reference:
> >
> >                        /// <summary>
> >                        /// Return a token from this source; i.e.,
> >         Match a token on the char stream.
> >                        /// </summary>
> >                        public virtual IToken NextToken()
> >                        {
> >                                while (true)
> >                                {
> >                                        state.token = null;
> >                                        state.channel =
> >         Token.DEFAULT_CHANNEL;
> >                                        state.tokenStartCharIndex =
> >         input.Index;
> >
> >          state.tokenStartCharPositionInLine =
> input.CharPositionInLine;
> >                                        state.tokenStartLine =
> input.Line;
> >                                        state.text = null;
> >                                        if (input.LA(1) ==
> >         (int)CharStreamConstants.EOF)
> >                                        {
> >                                                return
> Token.EOF_TOKEN;
> >                                        }
> >                                        try
> >                                        {
> >                                                mTokens();
> >                                                if (state.token ==
> null)
> >                                                {
> >                                                        Emit();
> >                                                }
> >                                                else if (state.token
> ==
> >         Token.SKIP_TOKEN)
> >                                                {
> >                                                        continue;
> >                                                }
> >                                                return state.token;
> >                                        }
> >                                        catch (NoViableAltException
> nva) {
> >                                                ReportError(nva);
> >                                                Recover(nva); // throw
> >         out current char and try again
> >                                        }
> >                                        catch (RecognitionException
> re) {
> >                                                ReportError(re);
> >                                                // Match() routine has
> >         already called Recover()
> >                                        }
> >                                }
> >                        }
> >
> >         Note the RecognitionException clause.  This is the clause
> >         which will
> >         catch the FailedPredicateException().  Unfortunately, because
> the
> >         FailedPredicateException gets thrown just before Match()
> >         occurs in the
> >         rule, Recover will *not* have been called by the rule or its
> >         callees,
> >         and therefore the DFA will continue to try processing the
> same
> >         token.
> >         It would appear that there should instead be a specific
> >         FailedPredicateException clause which does the same thing as
> the
> >         NoViableAltException clause.
> >
> >         I have seen two other people ask questions about this error,
> >         and in
> >         neither case was a suitable response given.  Has this bug
> been
> >         fixed
> >         in non-released builds?  Can someone give me an up-or-down on
> >         whether
> >         this is a correct and appropriate fix?
> >
> >         Thanks.
> >
> >         - Cliff
> >
> >         List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >         Unsubscribe:
> >         http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
> >
> >
> >
> >
> >     --
> >     Ron Hunter-Duvar | Software Developer V | 403-272-6580
> >     Oracle Service Engineering
> >     Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P
> 3C5
> >
> >     All opinions expressed here are mine, and do not necessarily
> represent
> >     those of my employer.
> >
> >
> 
> --
> Ron Hunter-Duvar | Software Developer V | 403-272-6580
> Oracle Service Engineering
> Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
> 
> All opinions expressed here are mine, and do not necessarily represent
> those of my employer.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From cliff.s.hudson at gmail.com  Tue Mar 30 11:45:18 2010
From: cliff.s.hudson at gmail.com (Cliff Hudson)
Date: Tue, 30 Mar 2010 11:45:18 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <d559651d5db9bc4da1eb311ba2eae3d4@temporal-wave.com>
References: <4BB23BC3.9020101@oracle.com>
	<d559651d5db9bc4da1eb311ba2eae3d4@temporal-wave.com>
Message-ID: <1c0448551003301145p24f87a9aod9a43284887c84db@mail.gmail.com>

It's certainly possible that I have a bug in my lexer, since it has been
*ages* since I did any language programming.  I posted on here a repro
scenario based on the sample XML lexer/parser provided on the ANTLR website.
 The issue is that with that parser, the following input causes an infinite
loop:

<Program><</Program>

The issue is that the <</ sequence leads to a problem where no predicates
will match, so you cannot recover.  The first < in the sequence enters tag
mode, and then all subsequent tokens are invalid in tag mode.  PCDATA
matches, but its predicate forbids it to run.  My question is then what is
the appropriate way to construct the lexer such that it will recover
gracefully from that invalid input and NOT go into the infinite loop state
caused by the thrown exception?


On Tue, Mar 30, 2010 at 11:34 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Actually, I did not dispute that the hang was a bug, but stated that it was
> really somewhat irrelevant because the bug is in your predicate
> specifications. Lexers should not really be throwing exceptions but should
> be coded to deal with any input in a controlled manner. Your code was looked
> at, but as there has been no release since you reported your bug, I am not
> sure what you expect just at the moment.
>
> Of course, while debugging, it would be better if the lexer did not go in
> to an endless loop; that is an oversight and we should do something about
> that (in the next release - but I have not recently even had time to raise
> the JIRA). But you should not be relying on exceptions and recovery in the
> lexer; especially not in something that is commercial. Fix your
> predicates/rules/etc and cater for the error cases; your error messages will
> be commensurately better and your users will thank you in kind.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ron Hunter-Duvar
> > Sent: Tuesday, March 30, 2010 10:58 AM
> > To: Cliff Hudson
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] FailedPredicateException leads to
> > infinite loop - bug in the Lexer?
> >
> > The message title was: "Antlr Bug: Failed semantic predicate in lexer
> > triggers endless loop"
> >
> > Basically, the bug is in the nextToken() method in Antlr's Lexer class.
> > If a NoViableAlt exception is thrown, the method calls the recover
> > method, which consumes one character before trying again. But if any
> > other RecognitionException (including a FailedPredicateException) is
> > thrown, it doesn't call recover, it just reports the exception and
> > loops
> > back to try again at the same point, which of course results in the
> > same
> > exception, because nothing has changed. I just added a recover call to
> > the second catch block, and it solved the problem.
> >
> > As I mentioned, I did this as an overriding method in a custom
> > superclass. You could also fix it directly in the Antlr source, but
> > then
> > you'd have to rebuild Antlr.
> >
> > I'm not sure this ever got reported as an official bug. Jim Idle
> > disputed whether it was an Antlr bug. I sent proof, but not sure it was
> > even looked at. Unfortunately, because of the (quite reasonable) legal
> > agreement required to submit bug reports, and the fact that I'm doing
> > this as an employee, I can't submit bug reports or fixes until I get
> > approval to do so (seems ridiculous at first glance, but in today's
> > legal climate I can't take chances).
> >
> > Ron
> >
> >
> > Cliff Hudson wrote:
> > > I've been all over the archives, but perhaps my search terms were
> > > inadequate.  I'll look again with that date in mind.  Thanks.
> > >
> > > On Tue, Mar 30, 2010 at 8:11 AM, Ron Hunter-Duvar
> > > <ron.hunter-duvar at oracle.com <mailto:ron.hunter-duvar at oracle.com>>
> > wrote:
> > >
> > >     Hi Cliff,
> > >
> > >     I reported this same problem on February 10 on this list. It's an
> > >     Antlr bug, and my emails on it had the work around (which
> > requires
> > >     you to implement a custom superclass if you haven't already). If
> > >     you search the list archives you should be able to find it.
> > >
> > >     Ron
> > >
> > >
> > >     Cliff Hudson wrote:
> > >
> > >         I have been trying to work through an issue with an infinite
> > >         loop caused
> > >         when no tokens can be matched because a predicate has failed
> > >         its test.  The
> > >         problem appears to be in the Lexer.NextToken() (looking at
> > >         CSharp2 sources)
> > >         method, which I have copied here for reference:
> > >
> > >                        /// <summary>
> > >                        /// Return a token from this source; i.e.,
> > >         Match a token on the char stream.
> > >                        /// </summary>
> > >                        public virtual IToken NextToken()
> > >                        {
> > >                                while (true)
> > >                                {
> > >                                        state.token = null;
> > >                                        state.channel =
> > >         Token.DEFAULT_CHANNEL;
> > >                                        state.tokenStartCharIndex =
> > >         input.Index;
> > >
> > >          state.tokenStartCharPositionInLine =
> > input.CharPositionInLine;
> > >                                        state.tokenStartLine =
> > input.Line;
> > >                                        state.text = null;
> > >                                        if (input.LA(1) ==
> > >         (int)CharStreamConstants.EOF)
> > >                                        {
> > >                                                return
> > Token.EOF_TOKEN;
> > >                                        }
> > >                                        try
> > >                                        {
> > >                                                mTokens();
> > >                                                if (state.token ==
> > null)
> > >                                                {
> > >                                                        Emit();
> > >                                                }
> > >                                                else if (state.token
> > ==
> > >         Token.SKIP_TOKEN)
> > >                                                {
> > >                                                        continue;
> > >                                                }
> > >                                                return state.token;
> > >                                        }
> > >                                        catch (NoViableAltException
> > nva) {
> > >                                                ReportError(nva);
> > >                                                Recover(nva); // throw
> > >         out current char and try again
> > >                                        }
> > >                                        catch (RecognitionException
> > re) {
> > >                                                ReportError(re);
> > >                                                // Match() routine has
> > >         already called Recover()
> > >                                        }
> > >                                }
> > >                        }
> > >
> > >         Note the RecognitionException clause.  This is the clause
> > >         which will
> > >         catch the FailedPredicateException().  Unfortunately, because
> > the
> > >         FailedPredicateException gets thrown just before Match()
> > >         occurs in the
> > >         rule, Recover will *not* have been called by the rule or its
> > >         callees,
> > >         and therefore the DFA will continue to try processing the
> > same
> > >         token.
> > >         It would appear that there should instead be a specific
> > >         FailedPredicateException clause which does the same thing as
> > the
> > >         NoViableAltException clause.
> > >
> > >         I have seen two other people ask questions about this error,
> > >         and in
> > >         neither case was a suitable response given.  Has this bug
> > been
> > >         fixed
> > >         in non-released builds?  Can someone give me an up-or-down on
> > >         whether
> > >         this is a correct and appropriate fix?
> > >
> > >         Thanks.
> > >
> > >         - Cliff
> > >
> > >         List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >         Unsubscribe:
> > >         http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> > >
> > >
> > >
> > >
> > >     --
> > >     Ron Hunter-Duvar | Software Developer V | 403-272-6580
> > >     Oracle Service Engineering
> > >     Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P
> > 3C5
> > >
> > >     All opinions expressed here are mine, and do not necessarily
> > represent
> > >     those of my employer.
> > >
> > >
> >
> > --
> > Ron Hunter-Duvar | Software Developer V | 403-272-6580
> > Oracle Service Engineering
> > Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5
> >
> > All opinions expressed here are mine, and do not necessarily represent
> > those of my employer.
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rdadolf at gmail.com  Tue Mar 30 15:30:06 2010
From: rdadolf at gmail.com (Bob Adolf)
Date: Tue, 30 Mar 2010 15:30:06 -0700
Subject: [antlr-interest] Bug in Python target while using multiple lexers +
	island grammar
Message-ID: <69E15F5F-5854-4E94-AA20-3E767D800C37@gmail.com>

I probably should've posted this a while ago, but I didn't get around  
to it.

There is a bug in the CommonTokenStream.getTokens() function in the  
Python target version 3.1.2 (it looks like there is a 3.2 version in  
the bug database, but 3.1.2 is the released python runtime and it  
shouldn't affect the bug anyways). The array reference that selects  
which tokens to return uses this:
	self.tokens[start:stop]
which drops the last token. My guess is that in normal cases, this is  
overlooked because the last token is EOF, and if you're calling  
getTokens() after the fact, EOF has already served its primary purpose  
and terminated the lexer. A cursory look at the java code makes me  
think that it won't have this problem, but I have not test it. A port  
of the included reproducer could answer that.

The workaround is to use the tokens list inside the CommonTokenStream  
class directly instead of getTokens().

On a side note, there is also a bug (sort of) in the code given on the  
wiki page for emitting multiple tokens (http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497 
). The method proposed builds up an array of tokens and then emits  
them one by one as it continues to go through the file. This is fine  
for non-island grammars, but if you use multiple-emit inside an island  
grammar, the lexer will happily continue munching input as it cleans  
out its emit buffer even after the EOF token is "emitted". This either  
leads to the island lexer throwing away input (since it terminates on  
EOF and tosses the remaining multi-emit buffer) or throwing an error  
(if it runs across input that it cannot understand).

I've included a reproducer (in python) which can demonstrate and gives  
a workaround for both.

Thanks,

   -Bob



-------------- next part --------------
A non-text attachment was scrubbed...
Name: BUG_python_island_grammar.tgz
Type: application/octet-stream
Size: 1918 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100330/f9738592/attachment.obj 
-------------- next part --------------


From andi.clemens at gmx.net  Tue Mar 30 22:51:06 2010
From: andi.clemens at gmx.net (Andi Clemens)
Date: Wed, 31 Mar 2010 07:51:06 +0200
Subject: [antlr-interest] Adding custom functions to the parser in a C target
Message-ID: <201003310751.06654.andi.clemens@gmx.net>

Hi,

I want to use the PLSQL grammar from antlr.org with some modifications to 
detect table names in statements. I want to check, whenever I hit the 
"table_spec" rule, if this table name is in a whitelist and perform further 
actions.

I have a problem now: How can I add global variables to the parser?
I need to give the parser a pointer to the whitelist in memory and some other 
variables for detecting valid / invalid table names.

Defining variables in @members doesn't help, I am not able to access this from 
outside of the parser code.
In Java it seems to be much easier, since you have a class where you can add 
public members, but in C I have no clue how to do it (yes, I need to use C, 
and I never programmed in that language, only in C++ and Python so far).

I want to do something like this.
In the parser rule "table_spec", I want to check the table name:
{
    char result[256];
    strcat(result, s.tree ? s.tree->getText(s.tree)->chars : "");
    strcat(result, s.tree ? "." : "");
    strcat(result, t.tree ? t.tree->getText(t.tree)->chars : "");
    isValid = checkForValidTable(result);
}

"isValid" and "checkForValidTable" are defined in @members, but the check 
function needs some statement handlers and other stuff coming from the 
outside. In the end, I wanted to have something like this in my main.cpp:

[...]
parser->setStmtHandle(some pointer);
parser->setWhiteListHandle(some pointer);
parser->sql_statement(parser); // this is the main function I would use from 
the PL/SQL grammar file
bool isValid = parser->isValid();
[...]


Is it possible to do something like that? If not, how can I fix this problem?
I need to get those handles inside of the parser somehow? 
Any ideas?

Andi

From bychkov.anton at gmail.com  Wed Mar 31 02:20:43 2010
From: bychkov.anton at gmail.com (Anton Bychkov)
Date: Wed, 31 Mar 2010 14:20:43 +0500
Subject: [antlr-interest] Empty complement set?
Message-ID: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>

Hi.

The following grammar does not generate target code.
It says "error(139): skipper.g: set complement is empty".

grammar skipper;

options
{
	language = C;
}

skipper		
	@init {
		int braceCount = 1;
	}
	: (
	'('
	{
		braceCount ++;
	}
	| ')'
	{
		braceCount --;
		if(braceCount == 0)
		{
			LTOKEN = EOF_TOKEN;
		}
	}
	| ~('('|')')
	) *
	;

What's wrong with it?

From bkiers at gmail.com  Wed Mar 31 02:31:46 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 31 Mar 2010 11:31:46 +0200
Subject: [antlr-interest] Empty complement set?
In-Reply-To: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
References: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
Message-ID: <w2paf443a971003310231j1d742571mf661be1d7c3ffc4a@mail.gmail.com>

On Wed, Mar 31, 2010 at 11:20 AM, Anton Bychkov <bychkov.anton at gmail.com>wrote:

> Hi.
>
> The following grammar does not generate target code.
> It says "error(139): skipper.g: set complement is empty".
>

Try adding the lexer rules:

LParen : '(';
RParen : ')';

Regards,

Bart.

From bychkov.anton at gmail.com  Wed Mar 31 02:47:21 2010
From: bychkov.anton at gmail.com (Anton Bychkov)
Date: Wed, 31 Mar 2010 14:47:21 +0500
Subject: [antlr-interest] Empty complement set?
In-Reply-To: <w2paf443a971003310231j1d742571mf661be1d7c3ffc4a@mail.gmail.com>
References: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
	<w2paf443a971003310231j1d742571mf661be1d7c3ffc4a@mail.gmail.com>
Message-ID: <i2m1363099f1003310247j521c99e7sec4bad9dd275c27c@mail.gmail.com>

> Try adding the lexer rules:
>
> LParen : '(';
> RParen : ')';
>

It didn't helped.
New grammar file:

grammar skipper;

options
{
	language = C;
}

LParen : '(';
RParen : ')';

skipper		
	@init {
		int braceCount = 1;
	}
	: (
	LParen
	{
		braceCount ++;
	}
	| RParen
	{
		braceCount --;
		if(braceCount == 0)
		{
			LTOKEN = EOF_TOKEN;
		}
	}
	| ~(LParen|RParen)
	) *
	;

Antlrwoks reports the same error on 28 line which is
	| ~(LParen|RParen)

There is also a strange thing in rule view, it looks like antlr does
not see LParen and RParen in twiddle operator.
I attached screenshot with it.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: grammar.png
Type: image/png
Size: 5583 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20100331/fe79c545/attachment.png 

From bkiers at gmail.com  Wed Mar 31 03:01:36 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 31 Mar 2010 12:01:36 +0200
Subject: [antlr-interest] Empty complement set?
In-Reply-To: <i2m1363099f1003310247j521c99e7sec4bad9dd275c27c@mail.gmail.com>
References: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
	<w2paf443a971003310231j1d742571mf661be1d7c3ffc4a@mail.gmail.com>
	<i2m1363099f1003310247j521c99e7sec4bad9dd275c27c@mail.gmail.com>
Message-ID: <h2naf443a971003310301pbd4ca743z94f6a63e10723a17@mail.gmail.com>

On Wed, Mar 31, 2010 at 11:47 AM, Anton Bychkov <bychkov.anton at gmail.com>wrote:

> ...
> There is also a strange thing in rule view, it looks like antlr does
> not see LParen and RParen in twiddle operator.
> I attached screenshot with it.
>

Ah, I see. There are no other tokens than '(' and ')' defined, so
~(LParen|RParen) is wrong. Try adding a "fall through" DOT in your lexer
grammar:

skipper
       @init {
               int braceCount = 1;
       }
       : (
       LParen
       {
               braceCount ++;
       }
       | RParen
       {
               braceCount --;
               if(braceCount == 0)
               {
                       LTOKEN = EOF_TOKEN;
               }
       }
       | Other
       ) *
       ;

LParen : '(' ;
RParen : ')' ;
Other  :  .  ;

From bkiers at gmail.com  Wed Mar 31 03:03:41 2010
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 31 Mar 2010 12:03:41 +0200
Subject: [antlr-interest] Fwd:  Empty complement set?
In-Reply-To: <h2naf443a971003310301pbd4ca743z94f6a63e10723a17@mail.gmail.com>
References: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
	<w2paf443a971003310231j1d742571mf661be1d7c3ffc4a@mail.gmail.com>
	<i2m1363099f1003310247j521c99e7sec4bad9dd275c27c@mail.gmail.com>
	<h2naf443a971003310301pbd4ca743z94f6a63e10723a17@mail.gmail.com>
Message-ID: <y2haf443a971003310303gf3bd2250l9b169cf279f5b915@mail.gmail.com>

---------- Forwarded message ----------
From: Bart Kiers <bkiers at gmail.com>
Date: Wed, Mar 31, 2010 at 12:01 PM
Subject: Re: [antlr-interest] Empty complement set?
To: antlr-interest at antlr.org




On Wed, Mar 31, 2010 at 11:47 AM, Anton Bychkov <bychkov.anton at gmail.com>wrote:

> ...
>
> There is also a strange thing in rule view, it looks like antlr does
> not see LParen and RParen in twiddle operator.
> I attached screenshot with it.
>

Ah, I see. There are no other tokens than '(' and ')' defined, so
~(LParen|RParen) is wrong. Try adding a "fall through" DOT in your lexer
grammar:

skipper
       @init {
               int braceCount = 1;
       }
       : (
       LParen
       {
               braceCount ++;
       }
       | RParen
       {
               braceCount --;
               if(braceCount == 0)
               {
                       LTOKEN = EOF_TOKEN;
               }
       }
       | Other
       ) *
       ;

LParen : '(' ;
RParen : ')' ;
Other  :  .  ;

Or like this:

LParen : '(';
RParen : ')';
Other  : ~(LParen | RParen);

From bychkov.anton at gmail.com  Wed Mar 31 05:24:46 2010
From: bychkov.anton at gmail.com (Anton Bychkov)
Date: Wed, 31 Mar 2010 17:24:46 +0500
Subject: [antlr-interest] Fwd: Empty complement set?
In-Reply-To: <y2haf443a971003310303gf3bd2250l9b169cf279f5b915@mail.gmail.com>
References: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
	<w2paf443a971003310231j1d742571mf661be1d7c3ffc4a@mail.gmail.com>
	<i2m1363099f1003310247j521c99e7sec4bad9dd275c27c@mail.gmail.com>
	<h2naf443a971003310301pbd4ca743z94f6a63e10723a17@mail.gmail.com>
	<y2haf443a971003310303gf3bd2250l9b169cf279f5b915@mail.gmail.com>
Message-ID: <q2r1363099f1003310524m3a574e1es78df10b5f84413a5@mail.gmail.com>

> Or like this:
>
> LParen : '(';
> RParen : ')';
> Other ?: ~(LParen | RParen);
>

Thank you, that worked.

From Stefan.Chrobot at sabre.com  Wed Mar 31 05:34:48 2010
From: Stefan.Chrobot at sabre.com (Chrobot, Stefan)
Date: Wed, 31 Mar 2010 13:34:48 +0100
Subject: [antlr-interest] ANTLR crash with C# target and rewrite rules
Message-ID: <664A13B770987A4BB77A103AF4174ECC040F27B6@sglonms01.Global.ad.sabre.com>

Hello!

 

I'm using the C# target of ANTLR and have some problems with it.

I'm rewriting the input to the output, but on my way I need to collect
some information about the input (to create StringTemplates on the fly).
I want the $id.text to return the rewritten text of the rule. And I
suppose this should happen, but the runtime crashes instead.

 

What am I doing wrong?

 

 

The grammar:

 

grammar Test;

 

options {

                language = CSharp2;

                output = template;

                rewrite = true;

}

 

start_rule

                :               id+                          {
System.Console.WriteLine($id.text); } // I need to access the text here

                ;

 

id            :               ID                            -> { new
StringTemplate("id") }

                ;

 

ID  :        ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*

    ;

 

WS  :   ( ' ' | '\t' | '\r' | '\n' ) {$channel=HIDDEN;}

    ;

 

The driver:

 

using System;

using Antlr.Runtime;

 

namespace RewriteTest

{

    public class Program

    {

        public static void Main(string[] args)

        {

            string input = "ab cd ef gh";

            

            var stream = new ANTLRStringStream(input);

            var lexer = new TestLexer(stream);

 

            var tokenStream = new TokenRewriteStream(lexer);

            var parser = new TestParser(tokenStream);

 

            parser.start_rule();

 

 
Console.WriteLine("----------------------------------------------");

 

            Console.WriteLine(tokenStream.ToOriginalString());

            Console.WriteLine(tokenStream.ToString());

        }

    }

}

 

The result:

 

Unhandled Exception: System.InvalidCastException: Unable to cast object
of type 'ReplaceOp' to type 'InsertBeforeOp'.

   at Antlr.Runtime.TokenRewriteStream.ToString(String programName,
Int32 start,  Int32 end)

   at Antlr.Runtime.TokenRewriteStream.ToString(Int32 start, Int32 end)

   at Antlr.Runtime.CommonTokenStream.ToString(IToken start, IToken
stop)

   at TestParser.start_rule() in C:\Tests\RewriteTest\TestParser.cs:line
147

   at RewriteTest.Program.Main(String[] args) in
C:\Tests\RewriteTest\Program.cs:line 18


From cconway at cs.nyu.edu  Wed Mar 31 07:35:53 2010
From: cconway at cs.nyu.edu (Christopher L Conway)
Date: Wed, 31 Mar 2010 10:35:53 -0400
Subject: [antlr-interest] Adding custom functions to the parser in a C
	target
In-Reply-To: <201003310751.06654.andi.clemens@gmx.net>
References: <201003310751.06654.andi.clemens@gmx.net>
Message-ID: <x2g4a051d931003310735if90c7319h8361d224418258c5@mail.gmail.com>

Andi,

I think you'll find the void* field super in ANTLR3_PARSER_struct,
accessible in the grammar via PARSER->super, is a good place to stick
implementation data. AFAICT, it is never set by the generated code.

-Chris

On Wed, Mar 31, 2010 at 1:51 AM, Andi Clemens <andi.clemens at gmx.net> wrote:
> Hi,
>
> I want to use the PLSQL grammar from antlr.org with some modifications to
> detect table names in statements. I want to check, whenever I hit the
> "table_spec" rule, if this table name is in a whitelist and perform further
> actions.
>
> I have a problem now: How can I add global variables to the parser?
> I need to give the parser a pointer to the whitelist in memory and some other
> variables for detecting valid / invalid table names.
>
> Defining variables in @members doesn't help, I am not able to access this from
> outside of the parser code.
> In Java it seems to be much easier, since you have a class where you can add
> public members, but in C I have no clue how to do it (yes, I need to use C,
> and I never programmed in that language, only in C++ and Python so far).
>
> I want to do something like this.
> In the parser rule "table_spec", I want to check the table name:
> {
> ? ?char result[256];
> ? ?strcat(result, s.tree ? s.tree->getText(s.tree)->chars : "");
> ? ?strcat(result, s.tree ? "." : "");
> ? ?strcat(result, t.tree ? t.tree->getText(t.tree)->chars : "");
> ? ?isValid = checkForValidTable(result);
> }
>
> "isValid" and "checkForValidTable" are defined in @members, but the check
> function needs some statement handlers and other stuff coming from the
> outside. In the end, I wanted to have something like this in my main.cpp:
>
> [...]
> parser->setStmtHandle(some pointer);
> parser->setWhiteListHandle(some pointer);
> parser->sql_statement(parser); // this is the main function I would use from
> the PL/SQL grammar file
> bool isValid = parser->isValid();
> [...]
>
>
> Is it possible to do something like that? If not, how can I fix this problem?
> I need to get those handles inside of the parser somehow?
> Any ideas?
>
> Andi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Mar 31 07:38:35 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 31 Mar 2010 07:38:35 -0700
Subject: [antlr-interest] Empty complement set?
In-Reply-To: <t2p1363099f1003310220xba85d829ya5d2d72f82bad81@mail.gmail.com>
Message-ID: <94f5815721ddbb468489675304f5720f@temporal-wave.com>

You cannot use set complements in parser rules. That is for lexer rules only. In the next release, ANTLR will tell you about this. But don't use 'literals' while you are learning as it is too easy to get confused as to what they mean in terms of lexer vs parser.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Anton Bychkov
> Sent: Wednesday, March 31, 2010 2:21 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Empty complement set?
> 
> Hi.
> 
> The following grammar does not generate target code.
> It says "error(139): skipper.g: set complement is empty".
> 
> grammar skipper;
> 
> options
> {
> 	language = C;
> }
> 
> skipper
> 	@init {
> 		int braceCount = 1;
> 	}
> 	: (
> 	'('
> 	{
> 		braceCount ++;
> 	}
> 	| ')'
> 	{
> 		braceCount --;
> 		if(braceCount == 0)
> 		{
> 			LTOKEN = EOF_TOKEN;
> 		}
> 	}
> 	| ~('('|')')
> 	) *
> 	;
> 
> What's wrong with it?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From ketancmaheshwari at gmail.com  Wed Mar 31 07:46:57 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Wed, 31 Mar 2010 16:46:57 +0200
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <e31a32c055960e4daab10b713a2d4151@temporal-wave.com>
References: <8e487b941003290917p4b32c557j50c5a62f3738db51@mail.gmail.com>
	<e31a32c055960e4daab10b713a2d4151@temporal-wave.com>
Message-ID: <k2r8e487b941003310746gf0c5a089k53885578d09d7e50@mail.gmail.com>

Hi Jim, Hi All

I searched but still am struggling to really get the parsertree object for
my grammar.

My goal is to get the parser tree object just as being shown in the GUI and
put its elements in another object that I need to construct based upon the
tree.

But after a lot of search I still have no clue how do I get the ParserTree
object with a *hierarchy of rules* and leaf nodes as the actual *tokens* of
my program!


Many thanks for any help with this.

Regards
Ketan

On Mon, Mar 29, 2010 at 6:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Ah. You are asking for the parser tree, not a representation of the AST?
> Search the mailing list for this. Such a tree is not generally useful for
> doing things with (so if you are looking for this information because you
> want to use it to generate code or something, then you are probably looking
> at your problem incorrectly), but it is very useful for debugging the tree.
>
>
>
> http://antlr.markmail.org/search/?q=parse+tree
>
>
>
>
>
> If all you want is information in the nodes, then get the payload of the
> leaf node (usually CommonToken) and ask for it, but that?s what the code you
> looked at is doing.
>
>
>
> Jim
>
>
>
>
>
> From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
> Sent: Monday, March 29, 2010 9:18 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to get GUI like tree structure
>
>
>
> Jim
>
>
>
> Thanks again for your answer.
>
>
>
> 1. I checked the DOTTreeGenerator.java code but I do not seem to know how
> it finds all the info about a tree. Also I am confused with its use of both
> the stringtemplates and trees (are'nt they mutually exclusive?).
>
>
>
> 2. Yes, the toStringTree() method prints the tree but it only gives the
> leaf nodes, that is the program itself. I have no info about which rule a
> given token belongs to.
>
>
>
> To be more clear, see the attached snapshot. My question is how can I
> capture this parse tree in a some kind of java data structure and walk
> through it.
>
>
>
> Many Thanks again for all your help.
>
> Ketan
>
>
>
> On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Look at the code for DOTTreeGenerator.java or use toStringTree() if that
> gives you a good enough representation.
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ketan Maheshwari
> > Sent: Monday, March 29, 2010 7:36 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] How to get GUI like tree structure
> >
> > Hello Friends
> >
> > I am trying to use the CommonTree generated by the parser of my grammar
> > against a test code.
> >
> > Using the getChild(index).toString method, I get the tokens well.
> >
> > However, I do not know how can I also get a hierarchy of the rule to
> > which
> > they belong to. Similar to what we get in the ANTLRworks GUI.
> >
> > Any clue how can I get a tree such that it shows complete hierarchy of
> > the
> > grammar and the tokens as leaf nodes only.
> >
> > Am I using the correct Data Structure (CommonTree) ?
> >
> > Thanks for any clues.
> >
> > Regards
> > Ketan
> >
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Mar 31 07:56:05 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 31 Mar 2010 07:56:05 -0700
Subject: [antlr-interest] Adding custom functions to the parser in a C
	target
In-Reply-To: <x2g4a051d931003310735if90c7319h8361d224418258c5@mail.gmail.com>
Message-ID: <317b561353e3e949971827a8e194da73@temporal-wave.com>

No it isn't in case you want to encapsulate it elsewhere. However for context level elements you want to use the mechanism I established and not hijack super really (though super is meant for your own stuff).

So:


@parser::context
{
// A pointer to the blah that we blargle into a gargle
//
pBLAH                   papi;
}

@parser::apifuncs
{
	ctx->pBLAH = NULL;
}

@parser::includes
{
// Include the BLAH interface specifications, so we know how to call
// an implementation to have it do work for us.
//
#include <blah.h>

// Create a macro to make references to the BLAH pointer easier
//
#define BLAH CTX->pBLAH
}


Now in your actions you can use:

{
   BLAH->number = 666;
   BLAH->myCall(BLAH, 666);
 
   // And so on...

}


You use the context pointers because 'global' data is exactly what you don't want as you instantly destroy the free threading, which is built into the code generation and the runtime. Here you get one pBLAH per thread:

psr	    = MyParserNew(tstream);

    if (psr == NULL) ...
    
    // Install a BLAH interface
    //
    psr->blah   = getBlah();
    if  (psr->blah == NULL) ...

    if  ((retCode = psr->blah->blahInitialize(psr->blah)) != 0)...


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christopher L Conway
> Sent: Wednesday, March 31, 2010 7:36 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Adding custom functions to the parser in
> a C target
> 
> Andi,
> 
> I think you'll find the void* field super in ANTLR3_PARSER_struct,
> accessible in the grammar via PARSER->super, is a good place to stick
> implementation data. AFAICT, it is never set by the generated code.
> 
> -Chris
> 
> On Wed, Mar 31, 2010 at 1:51 AM, Andi Clemens <andi.clemens at gmx.net>
> wrote:
> > Hi,
> >
> > I want to use the PLSQL grammar from antlr.org with some
> modifications to
> > detect table names in statements. I want to check, whenever I hit the
> > "table_spec" rule, if this table name is in a whitelist and perform
> further
> > actions.
> >
> > I have a problem now: How can I add global variables to the parser?
> > I need to give the parser a pointer to the whitelist in memory and
> some other
> > variables for detecting valid / invalid table names.
> >
> > Defining variables in @members doesn't help, I am not able to access
> this from
> > outside of the parser code.
> > In Java it seems to be much easier, since you have a class where you
> can add
> > public members, but in C I have no clue how to do it (yes, I need to
> use C,
> > and I never programmed in that language, only in C++ and Python so
> far).
> >
> > I want to do something like this.
> > In the parser rule "table_spec", I want to check the table name:
> > {
> > ? ?char result[256];
> > ? ?strcat(result, s.tree ? s.tree->getText(s.tree)->chars : "");
> > ? ?strcat(result, s.tree ? "." : "");
> > ? ?strcat(result, t.tree ? t.tree->getText(t.tree)->chars : "");
> > ? ?isValid = checkForValidTable(result);
> > }
> >
> > "isValid" and "checkForValidTable" are defined in @members, but the
> check
> > function needs some statement handlers and other stuff coming from
> the
> > outside. In the end, I wanted to have something like this in my
> main.cpp:
> >
> > [...]
> > parser->setStmtHandle(some pointer);
> > parser->setWhiteListHandle(some pointer);
> > parser->sql_statement(parser); // this is the main function I would
> use from
> > the PL/SQL grammar file
> > bool isValid = parser->isValid();
> > [...]
> >
> >
> > Is it possible to do something like that? If not, how can I fix this
> problem?
> > I need to get those handles inside of the parser somehow?
> > Any ideas?
> >
> > Andi
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




From jimi at temporal-wave.com  Wed Mar 31 07:58:33 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 31 Mar 2010 07:58:33 -0700
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <k2r8e487b941003310746gf0c5a089k53885578d09d7e50@mail.gmail.com>
Message-ID: <f76f361457edc848b6fee56ed44aae06@temporal-wave.com>

I think you are looking for the wrong thing. You are unlikely to need the parse tree in order to operate upon the input. You are almost certainly in need of an AST that you build yourself using the ANTLR tree building constructs.

 

Did you search the WIKI:

 

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760

 

Jim

 

 

From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com] 
Sent: Wednesday, March 31, 2010 7:47 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure

 

Hi Jim, Hi All

 

I searched but still am struggling to really get the parsertree object for my grammar. 

 

My goal is to get the parser tree object just as being shown in the GUI and put its elements in another object that I need to construct based upon the tree.

 

But after a lot of search I still have no clue how do I get the ParserTree object with a *hierarchy of rules* and leaf nodes as the actual *tokens* of my program!

 

Many thanks for any help with this.

 

Regards

Ketan

 

On Mon, Mar 29, 2010 at 6:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Ah. You are asking for the parser tree, not a representation of the AST? Search the mailing list for this. Such a tree is not generally useful for doing things with (so if you are looking for this information because you want to use it to generate code or something, then you are probably looking at your problem incorrectly), but it is very useful for debugging the tree.



http://antlr.markmail.org/search/?q=parse+tree





If all you want is information in the nodes, then get the payload of the leaf node (usually CommonToken) and ask for it, but that?s what the code you looked at is doing.



Jim





From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
Sent: Monday, March 29, 2010 9:18 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure




Jim



Thanks again for your answer.



1. I checked the DOTTreeGenerator.java code but I do not seem to know how it finds all the info about a tree. Also I am confused with its use of both the stringtemplates and trees (are'nt they mutually exclusive?).



2. Yes, the toStringTree() method prints the tree but it only gives the leaf nodes, that is the program itself. I have no info about which rule a given token belongs to.



To be more clear, see the attached snapshot. My question is how can I capture this parse tree in a some kind of java data structure and walk through it.



Many Thanks again for all your help.

Ketan



On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Look at the code for DOTTreeGenerator.java or use toStringTree() if that gives you a good enough representation.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ketan Maheshwari
> Sent: Monday, March 29, 2010 7:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get GUI like tree structure
>
> Hello Friends
>
> I am trying to use the CommonTree generated by the parser of my grammar
> against a test code.
>
> Using the getChild(index).toString method, I get the tokens well.
>
> However, I do not know how can I also get a hierarchy of the rule to
> which
> they belong to. Similar to what we get in the ANTLRworks GUI.
>
> Any clue how can I get a tree such that it shows complete hierarchy of
> the
> grammar and the tokens as leaf nodes only.
>
> Am I using the correct Data Structure (CommonTree) ?
>
> Thanks for any clues.
>
> Regards
> Ketan
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address






List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 




From ketancmaheshwari at gmail.com  Wed Mar 31 08:11:35 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Wed, 31 Mar 2010 17:11:35 +0200
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <f76f361457edc848b6fee56ed44aae06@temporal-wave.com>
References: <k2r8e487b941003310746gf0c5a089k53885578d09d7e50@mail.gmail.com>
	<f76f361457edc848b6fee56ed44aae06@temporal-wave.com>
Message-ID: <l2r8e487b941003310811u9a399b20lef4a13cfb97f0337@mail.gmail.com>

Jim

Thanks for your quick answer. The code shown uses the -debug option to
generate parser and lexer classes, but I have problems with the debug option
that when I use it the parser just hangs and does not go ahead.

Any solution as to generate a ParseTree without using the debug option.

Ketan

On Wed, Mar 31, 2010 at 4:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> I think you are looking for the wrong thing. You are unlikely to need the
> parse tree in order to operate upon the input. You are almost certainly in
> need of an AST that you build yourself using the ANTLR tree building
> constructs.
>
>
>
> Did you search the WIKI:
>
>
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
>
>
>
> Jim
>
>
>
>
>
> From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
> Sent: Wednesday, March 31, 2010 7:47 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to get GUI like tree structure
>
>
>
> Hi Jim, Hi All
>
>
>
> I searched but still am struggling to really get the parsertree object for
> my grammar.
>
>
>
> My goal is to get the parser tree object just as being shown in the GUI and
> put its elements in another object that I need to construct based upon the
> tree.
>
>
>
> But after a lot of search I still have no clue how do I get the ParserTree
> object with a *hierarchy of rules* and leaf nodes as the actual *tokens* of
> my program!
>
>
>
> Many thanks for any help with this.
>
>
>
> Regards
>
> Ketan
>
>
>
> On Mon, Mar 29, 2010 at 6:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Ah. You are asking for the parser tree, not a representation of the AST?
> Search the mailing list for this. Such a tree is not generally useful for
> doing things with (so if you are looking for this information because you
> want to use it to generate code or something, then you are probably looking
> at your problem incorrectly), but it is very useful for debugging the tree.
>
>
>
> http://antlr.markmail.org/search/?q=parse+tree
>
>
>
>
>
> If all you want is information in the nodes, then get the payload of the
> leaf node (usually CommonToken) and ask for it, but that?s what the code you
> looked at is doing.
>
>
>
> Jim
>
>
>
>
>
> From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
> Sent: Monday, March 29, 2010 9:18 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to get GUI like tree structure
>
>
>
>
> Jim
>
>
>
> Thanks again for your answer.
>
>
>
> 1. I checked the DOTTreeGenerator.java code but I do not seem to know how
> it finds all the info about a tree. Also I am confused with its use of both
> the stringtemplates and trees (are'nt they mutually exclusive?).
>
>
>
> 2. Yes, the toStringTree() method prints the tree but it only gives the
> leaf nodes, that is the program itself. I have no info about which rule a
> given token belongs to.
>
>
>
> To be more clear, see the attached snapshot. My question is how can I
> capture this parse tree in a some kind of java data structure and walk
> through it.
>
>
>
> Many Thanks again for all your help.
>
> Ketan
>
>
>
> On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
> Look at the code for DOTTreeGenerator.java or use toStringTree() if that
> gives you a good enough representation.
>
> Jim
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ketan Maheshwari
> > Sent: Monday, March 29, 2010 7:36 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] How to get GUI like tree structure
> >
> > Hello Friends
> >
> > I am trying to use the CommonTree generated by the parser of my grammar
> > against a test code.
> >
> > Using the getChild(index).toString method, I get the tokens well.
> >
> > However, I do not know how can I also get a hierarchy of the rule to
> > which
> > they belong to. Similar to what we get in the ANTLRworks GUI.
> >
> > Any clue how can I get a tree such that it shows complete hierarchy of
> > the
> > grammar and the tokens as leaf nodes only.
> >
> > Am I using the correct Data Structure (CommonTree) ?
> >
> > Thanks for any clues.
> >
> > Regards
> > Ketan
> >
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ketancmaheshwari at gmail.com  Wed Mar 31 08:26:41 2010
From: ketancmaheshwari at gmail.com (Ketan Maheshwari)
Date: Wed, 31 Mar 2010 17:26:41 +0200
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <l2r8e487b941003310811u9a399b20lef4a13cfb97f0337@mail.gmail.com>
References: <k2r8e487b941003310746gf0c5a089k53885578d09d7e50@mail.gmail.com>
	<f76f361457edc848b6fee56ed44aae06@temporal-wave.com>
	<l2r8e487b941003310811u9a399b20lef4a13cfb97f0337@mail.gmail.com>
Message-ID: <n2v8e487b941003310826v5cf0b7d5g78b33cc074400807@mail.gmail.com>

Jim

About the purpose of having ParseTree : I need to know what tokens are
children of a given rule in my input so that I can separate tokens based on
the rules and put them into places in a customized object which in turn is
required to generate  output in xml format!

So, essentially I am building a translator from my DSL to its xml
representation for which an xml writer exists. I just need to give it
correct java object!

I think a ParseTree only can do this since ASTs does not have rule names
they just have the tokens arranged in a tree.

Regards
Ketan


On Wed, Mar 31, 2010 at 5:11 PM, Ketan Maheshwari <
ketancmaheshwari at gmail.com> wrote:

> Jim
>
> Thanks for your quick answer. The code shown uses the -debug option to
> generate parser and lexer classes, but I have problems with the debug option
> that when I use it the parser just hangs and does not go ahead.
>
> Any solution as to generate a ParseTree without using the debug option.
>
> Ketan
>
> On Wed, Mar 31, 2010 at 4:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> I think you are looking for the wrong thing. You are unlikely to need the
>> parse tree in order to operate upon the input. You are almost certainly in
>> need of an AST that you build yourself using the ANTLR tree building
>> constructs.
>>
>>
>>
>> Did you search the WIKI:
>>
>>
>>
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760
>>
>>
>>
>> Jim
>>
>>
>>
>>
>>
>> From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
>> Sent: Wednesday, March 31, 2010 7:47 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] How to get GUI like tree structure
>>
>>
>>
>> Hi Jim, Hi All
>>
>>
>>
>> I searched but still am struggling to really get the parsertree object for
>> my grammar.
>>
>>
>>
>> My goal is to get the parser tree object just as being shown in the GUI
>> and put its elements in another object that I need to construct based upon
>> the tree.
>>
>>
>>
>> But after a lot of search I still have no clue how do I get the ParserTree
>> object with a *hierarchy of rules* and leaf nodes as the actual *tokens* of
>> my program!
>>
>>
>>
>> Many thanks for any help with this.
>>
>>
>>
>> Regards
>>
>> Ketan
>>
>>
>>
>> On Mon, Mar 29, 2010 at 6:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>>
>> Ah. You are asking for the parser tree, not a representation of the AST?
>> Search the mailing list for this. Such a tree is not generally useful for
>> doing things with (so if you are looking for this information because you
>> want to use it to generate code or something, then you are probably looking
>> at your problem incorrectly), but it is very useful for debugging the tree.
>>
>>
>>
>> http://antlr.markmail.org/search/?q=parse+tree
>>
>>
>>
>>
>>
>> If all you want is information in the nodes, then get the payload of the
>> leaf node (usually CommonToken) and ask for it, but that?s what the code you
>> looked at is doing.
>>
>>
>>
>> Jim
>>
>>
>>
>>
>>
>> From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
>> Sent: Monday, March 29, 2010 9:18 AM
>> To: Jim Idle
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] How to get GUI like tree structure
>>
>>
>>
>>
>> Jim
>>
>>
>>
>> Thanks again for your answer.
>>
>>
>>
>> 1. I checked the DOTTreeGenerator.java code but I do not seem to know how
>> it finds all the info about a tree. Also I am confused with its use of both
>> the stringtemplates and trees (are'nt they mutually exclusive?).
>>
>>
>>
>> 2. Yes, the toStringTree() method prints the tree but it only gives the
>> leaf nodes, that is the program itself. I have no info about which rule a
>> given token belongs to.
>>
>>
>>
>> To be more clear, see the attached snapshot. My question is how can I
>> capture this parse tree in a some kind of java data structure and walk
>> through it.
>>
>>
>>
>> Many Thanks again for all your help.
>>
>> Ketan
>>
>>
>>
>> On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>>
>> Look at the code for DOTTreeGenerator.java or use toStringTree() if that
>> gives you a good enough representation.
>>
>> Jim
>>
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Ketan Maheshwari
>> > Sent: Monday, March 29, 2010 7:36 AM
>> > To: antlr-interest at antlr.org
>> > Subject: [antlr-interest] How to get GUI like tree structure
>> >
>> > Hello Friends
>> >
>> > I am trying to use the CommonTree generated by the parser of my grammar
>> > against a test code.
>> >
>> > Using the getChild(index).toString method, I get the tokens well.
>> >
>> > However, I do not know how can I also get a hierarchy of the rule to
>> > which
>> > they belong to. Similar to what we get in the ANTLRworks GUI.
>> >
>> > Any clue how can I get a tree such that it shows complete hierarchy of
>> > the
>> > grammar and the tokens as leaf nodes only.
>> >
>> > Am I using the correct Data Structure (CommonTree) ?
>> >
>> > Thanks for any clues.
>> >
>> > Regards
>> > Ketan
>> >
>>
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> > email-address
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Wed Mar 31 08:26:53 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 31 Mar 2010 08:26:53 -0700
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <l2r8e487b941003310811u9a399b20lef4a13cfb97f0337@mail.gmail.com>
Message-ID: <85a86d13a7eafe4bbf6c2c454f7f7d69@temporal-wave.com>

If you sue the code shown, it won?t hang. But, I assure you that you almost certainly do not want the parse tree. Read up on ASTs.

 

Jim

 

From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com] 
Sent: Wednesday, March 31, 2010 8:12 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure

 

Jim

 

Thanks for your quick answer. The code shown uses the -debug option to generate parser and lexer classes, but I have problems with the debug option that when I use it the parser just hangs and does not go ahead.


Any solution as to generate a ParseTree without using the debug option.

 

Ketan

 

On Wed, Mar 31, 2010 at 4:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:

I think you are looking for the wrong thing. You are unlikely to need the parse tree in order to operate upon the input. You are almost certainly in need of an AST that you build yourself using the ANTLR tree building constructs.



Did you search the WIKI:



http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760




Jim





From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]

Sent: Wednesday, March 31, 2010 7:47 AM

To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure



Hi Jim, Hi All



I searched but still am struggling to really get the parsertree object for my grammar.



My goal is to get the parser tree object just as being shown in the GUI and put its elements in another object that I need to construct based upon the tree.



But after a lot of search I still have no clue how do I get the ParserTree object with a *hierarchy of rules* and leaf nodes as the actual *tokens* of my program!



Many thanks for any help with this.



Regards

Ketan



On Mon, Mar 29, 2010 at 6:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Ah. You are asking for the parser tree, not a representation of the AST? Search the mailing list for this. Such a tree is not generally useful for doing things with (so if you are looking for this information because you want to use it to generate code or something, then you are probably looking at your problem incorrectly), but it is very useful for debugging the tree.



http://antlr.markmail.org/search/?q=parse+tree





If all you want is information in the nodes, then get the payload of the leaf node (usually CommonToken) and ask for it, but that?s what the code you looked at is doing.



Jim





From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
Sent: Monday, March 29, 2010 9:18 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure




Jim



Thanks again for your answer.



1. I checked the DOTTreeGenerator.java code but I do not seem to know how it finds all the info about a tree. Also I am confused with its use of both the stringtemplates and trees (are'nt they mutually exclusive?).



2. Yes, the toStringTree() method prints the tree but it only gives the leaf nodes, that is the program itself. I have no info about which rule a given token belongs to.



To be more clear, see the attached snapshot. My question is how can I capture this parse tree in a some kind of java data structure and walk through it.



Many Thanks again for all your help.

Ketan



On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Look at the code for DOTTreeGenerator.java or use toStringTree() if that gives you a good enough representation.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ketan Maheshwari
> Sent: Monday, March 29, 2010 7:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get GUI like tree structure
>
> Hello Friends
>
> I am trying to use the CommonTree generated by the parser of my grammar
> against a test code.
>
> Using the getChild(index).toString method, I get the tokens well.
>
> However, I do not know how can I also get a hierarchy of the rule to
> which
> they belong to. Similar to what we get in the ANTLRworks GUI.
>
> Any clue how can I get a tree such that it shows complete hierarchy of
> the
> grammar and the tokens as leaf nodes only.
>
> Am I using the correct Data Structure (CommonTree) ?
>
> Thanks for any clues.
>
> Regards
> Ketan
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address






List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address






List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 




From jimi at temporal-wave.com  Wed Mar 31 08:27:31 2010
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 31 Mar 2010 08:27:31 -0700
Subject: [antlr-interest] How to get GUI like tree structure
In-Reply-To: <n2v8e487b941003310826v5cf0b7d5g78b33cc074400807@mail.gmail.com>
Message-ID: <1564a62c837243418d18ce9953ab1eed@temporal-wave.com>

The AST ahs whatever information in it that you give it. You don?t need the rule names, they are just an abstraction for parsing.

 

Jim

 

From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com] 
Sent: Wednesday, March 31, 2010 8:27 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure

 

Jim

 

About the purpose of having ParseTree : I need to know what tokens are children of a given rule in my input so that I can separate tokens based on the rules and put them into places in a customized object which in turn is required to generate  output in xml format! 

So, essentially I am building a translator from my DSL to its xml representation for which an xml writer exists. I just need to give it correct java object!

 

I think a ParseTree only can do this since ASTs does not have rule names they just have the tokens arranged in a tree.

 

Regards

Ketan

 

 

On Wed, Mar 31, 2010 at 5:11 PM, Ketan Maheshwari <ketancmaheshwari at gmail.com> wrote:

Jim

 

Thanks for your quick answer. The code shown uses the -debug option to generate parser and lexer classes, but I have problems with the debug option that when I use it the parser just hangs and does not go ahead.


Any solution as to generate a ParseTree without using the debug option.

 

Ketan

 

On Wed, Mar 31, 2010 at 4:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:

I think you are looking for the wrong thing. You are unlikely to need the parse tree in order to operate upon the input. You are almost certainly in need of an AST that you build yourself using the ANTLR tree building constructs.



Did you search the WIKI:



http://www.antlr.org/wiki/pages/viewpage.action?pageId=1760




Jim





From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]

Sent: Wednesday, March 31, 2010 7:47 AM

To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure



Hi Jim, Hi All



I searched but still am struggling to really get the parsertree object for my grammar.



My goal is to get the parser tree object just as being shown in the GUI and put its elements in another object that I need to construct based upon the tree.



But after a lot of search I still have no clue how do I get the ParserTree object with a *hierarchy of rules* and leaf nodes as the actual *tokens* of my program!



Many thanks for any help with this.



Regards

Ketan



On Mon, Mar 29, 2010 at 6:30 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Ah. You are asking for the parser tree, not a representation of the AST? Search the mailing list for this. Such a tree is not generally useful for doing things with (so if you are looking for this information because you want to use it to generate code or something, then you are probably looking at your problem incorrectly), but it is very useful for debugging the tree.



http://antlr.markmail.org/search/?q=parse+tree





If all you want is information in the nodes, then get the payload of the leaf node (usually CommonToken) and ask for it, but that?s what the code you looked at is doing.



Jim





From: Ketan Maheshwari [mailto:ketancmaheshwari at gmail.com]
Sent: Monday, March 29, 2010 9:18 AM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to get GUI like tree structure




Jim



Thanks again for your answer.



1. I checked the DOTTreeGenerator.java code but I do not seem to know how it finds all the info about a tree. Also I am confused with its use of both the stringtemplates and trees (are'nt they mutually exclusive?).



2. Yes, the toStringTree() method prints the tree but it only gives the leaf nodes, that is the program itself. I have no info about which rule a given token belongs to.



To be more clear, see the attached snapshot. My question is how can I capture this parse tree in a some kind of java data structure and walk through it.



Many Thanks again for all your help.

Ketan



On Mon, Mar 29, 2010 at 5:41 PM, Jim Idle <jimi at temporal-wave.com> wrote:

Look at the code for DOTTreeGenerator.java or use toStringTree() if that gives you a good enough representation.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ketan Maheshwari
> Sent: Monday, March 29, 2010 7:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] How to get GUI like tree structure
>
> Hello Friends
>
> I am trying to use the CommonTree generated by the parser of my grammar
> against a test code.
>
> Using the getChild(index).toString method, I get the tokens well.
>
> However, I do not know how can I also get a hierarchy of the rule to
> which
> they belong to. Similar to what we get in the ANTLRworks GUI.
>
> Any clue how can I get a tree such that it shows complete hierarchy of
> the
> grammar and the tokens as leaf nodes only.
>
> Am I using the correct Data Structure (CommonTree) ?
>
> Thanks for any clues.
>
> Regards
> Ketan
>

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address




List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address






List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address






List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 

 




From kunalsawlani at gmail.com  Wed Mar 31 10:55:10 2010
From: kunalsawlani at gmail.com (Kunal Sawlani)
Date: Wed, 31 Mar 2010 13:55:10 -0400
Subject: [antlr-interest] Reusing an existing Parse Tree rather than
	reconstructing one
Message-ID: <h2w9a93847b1003311055h1c116391obd567bbda1b9ccf@mail.gmail.com>

Hi,
I have a parse tree which gets constructed as the user types in his input.
This seems to be working fine, but the problem is it reconstructs the tree
every time the user types in something, which is undesirable.
Is there a way to modify the existing parse tree, for better efficiency
purposes. And also, I want to maintain information in the tree whether a
node is stale, i.e, changed, from before when the user finishes typing his
input.
I was looking into the TreeWizard, but could not quite come up with a
solution.

Any ideas for this, or a work around for achieving the same would be really
appreciated.

Thanks
-- 
Kunal Sawlani

From ronburk at gmail.com  Wed Mar 31 11:27:09 2010
From: ronburk at gmail.com (Ron Burk)
Date: Wed, 31 Mar 2010 11:27:09 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <1c0448551003301145p24f87a9aod9a43284887c84db@mail.gmail.com>
References: <4BB23BC3.9020101@oracle.com>
	<d559651d5db9bc4da1eb311ba2eae3d4@temporal-wave.com>
	<1c0448551003301145p24f87a9aod9a43284887c84db@mail.gmail.com>
Message-ID: <o2q30dde8ce1003311127l5b7d0a94i2eb7858b654fe525@mail.gmail.com>

> My question is then what is
> the appropriate way to construct the lexer such that it will recover
> gracefully from that invalid input and NOT go into the infinite loop state
> caused by the thrown exception?

Personally, I try to keep "modes" in the lexer and
out of the parser. I probably would have had the
lexer looking past any initial '<' to distinguish the
various types of things it presages (especially
since the XML spec seems to make that relatively
easy). So, for example, this:

> <Program><</Program>

would have returned a token stream like:

TK_START_TAG
TK_IDENT
TK_GT
TK_ILLEGAL
TK_END_TAG
TK_IDENT
TK_GT

I would keep modes like CDATA in the lexer.
YMMV, many ways to skin a cat, etc.

From scott at javadude.com  Wed Mar 31 11:32:19 2010
From: scott at javadude.com (Scott Stanchfield)
Date: Wed, 31 Mar 2010 14:32:19 -0400
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <o2q30dde8ce1003311127l5b7d0a94i2eb7858b654fe525@mail.gmail.com>
References: <4BB23BC3.9020101@oracle.com>
	<d559651d5db9bc4da1eb311ba2eae3d4@temporal-wave.com>
	<1c0448551003301145p24f87a9aod9a43284887c84db@mail.gmail.com>
	<o2q30dde8ce1003311127l5b7d0a94i2eb7858b654fe525@mail.gmail.com>
Message-ID: <q2nd19d16481003311132r9b085e54x3b86f47b3ada0cef@mail.gmail.com>

When I wrote ANTXR (my XML parser derivative of ANTLR 2.x) I had it
use SAX or XMLPull as the scanner rather than using an ANTLR scanner.
Much simpler for dealing with things like CDATA...
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com



On Wed, Mar 31, 2010 at 2:27 PM, Ron Burk <ronburk at gmail.com> wrote:
>> My question is then what is
>> the appropriate way to construct the lexer such that it will recover
>> gracefully from that invalid input and NOT go into the infinite loop state
>> caused by the thrown exception?
>
> Personally, I try to keep "modes" in the lexer and
> out of the parser. I probably would have had the
> lexer looking past any initial '<' to distinguish the
> various types of things it presages (especially
> since the XML spec seems to make that relatively
> easy). So, for example, this:
>
>> <Program><</Program>
>
> would have returned a token stream like:
>
> TK_START_TAG
> TK_IDENT
> TK_GT
> TK_ILLEGAL
> TK_END_TAG
> TK_IDENT
> TK_GT
>
> I would keep modes like CDATA in the lexer.
> YMMV, many ways to skin a cat, etc.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cliff.s.hudson at gmail.com  Wed Mar 31 12:13:57 2010
From: cliff.s.hudson at gmail.com (Cliff Hudson)
Date: Wed, 31 Mar 2010 12:13:57 -0700
Subject: [antlr-interest] FailedPredicateException leads to infinite
	loop - bug in the Lexer?
In-Reply-To: <o2q30dde8ce1003311127l5b7d0a94i2eb7858b654fe525@mail.gmail.com>
References: <4BB23BC3.9020101@oracle.com>
	<d559651d5db9bc4da1eb311ba2eae3d4@temporal-wave.com>
	<1c0448551003301145p24f87a9aod9a43284887c84db@mail.gmail.com>
	<o2q30dde8ce1003311127l5b7d0a94i2eb7858b654fe525@mail.gmail.com>
Message-ID: <g2w1c0448551003311213s8b52026o11cf40c1a273a08e@mail.gmail.com>

So I ended up doing something I think a little similar to this, except that
I get START_TAG followed by UNEXPECTED rather than the other way around - I
could probably fix this by having an action which tosses the appropriate
token or something.  I have managed to keep all modes strictly in the lexer
though, and it is now tolerant of every syntax error I've thrown at it.

Thanks for the assistance.

On Wed, Mar 31, 2010 at 11:27 AM, Ron Burk <ronburk at gmail.com> wrote:

> > My question is then what is
> > the appropriate way to construct the lexer such that it will recover
> > gracefully from that invalid input and NOT go into the infinite loop
> state
> > caused by the thrown exception?
>
> Personally, I try to keep "modes" in the lexer and
> out of the parser. I probably would have had the
> lexer looking past any initial '<' to distinguish the
> various types of things it presages (especially
> since the XML spec seems to make that relatively
> easy). So, for example, this:
>
> > <Program><</Program>
>
> would have returned a token stream like:
>
> TK_START_TAG
> TK_IDENT
> TK_GT
> TK_ILLEGAL
> TK_END_TAG
> TK_IDENT
> TK_GT
>
> I would keep modes like CDATA in the lexer.
> YMMV, many ways to skin a cat, etc.
>

From alsergbox at gmail.com  Wed Mar 31 12:43:35 2010
From: alsergbox at gmail.com (Aleksey Sergushichev)
Date: Wed, 31 Mar 2010 23:43:35 +0400
Subject: [antlr-interest] Non-recognition errors raising
Message-ID: <4BB3A5E7.4000003@gmail.com>

Hello,
how can I raise an error not connected with recognition, e.g. redefining
variable, undefined variable etc.?
There is a mysterious 'throws' keyword in ANTLR Cheat Sheet, but I
can't figure out how to use it.

-- 
Best regards,
    Aleksey Sergushichev


From andi.clemens at gmx.net  Wed Mar 31 13:40:08 2010
From: andi.clemens at gmx.net (Andi Clemens)
Date: Wed, 31 Mar 2010 22:40:08 +0200
Subject: [antlr-interest] Adding custom functions to the parser in a C
	target
In-Reply-To: <317b561353e3e949971827a8e194da73@temporal-wave.com>
References: <317b561353e3e949971827a8e194da73@temporal-wave.com>
Message-ID: <201003312240.08503.andi.clemens@gmx.net>

Hi,

thank you... I will take a look at your example, maybe I can use this.

Andi

On Wednesday 31 March 2010 16:56:05 Jim Idle wrote:
> No it isn't in case you want to encapsulate it elsewhere. However for
> context level elements you want to use the mechanism I established and not
> hijack super really (though super is meant for your own stuff).
> 
> So:
> 
> 
> @parser::context
> {
> // A pointer to the blah that we blargle into a gargle
> //
> pBLAH                   papi;
> }
> 
> @parser::apifuncs
> {
> 	ctx->pBLAH = NULL;
> }
> 
> @parser::includes
> {
> // Include the BLAH interface specifications, so we know how to call
> // an implementation to have it do work for us.
> //
> #include <blah.h>
> 
> // Create a macro to make references to the BLAH pointer easier
> //
> #define BLAH CTX->pBLAH
> }
> 
> 
> Now in your actions you can use:
> 
> {
>    BLAH->number = 666;
>    BLAH->myCall(BLAH, 666);
> 
>    // And so on...
> 
> }
> 
> 
> You use the context pointers because 'global' data is exactly what you
> don't want as you instantly destroy the free threading, which is built
> into the code generation and the runtime. Here you get one pBLAH per
> thread:
> 
> psr	    = MyParserNew(tstream);
> 
>     if (psr == NULL) ...
> 
>     // Install a BLAH interface
>     //
>     psr->blah   = getBlah();
>     if  (psr->blah == NULL) ...
> 
>     if  ((retCode = psr->blah->blahInitialize(psr->blah)) != 0)...
> 
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Christopher L Conway
> > Sent: Wednesday, March 31, 2010 7:36 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Adding custom functions to the parser in
> > a C target
> > 
> > Andi,
> > 
> > I think you'll find the void* field super in ANTLR3_PARSER_struct,
> > accessible in the grammar via PARSER->super, is a good place to stick
> > implementation data. AFAICT, it is never set by the generated code.
> > 
> > -Chris
> > 
> > On Wed, Mar 31, 2010 at 1:51 AM, Andi Clemens <andi.clemens at gmx.net>
> > 
> > wrote:
> > > Hi,
> > > 
> > > I want to use the PLSQL grammar from antlr.org with some
> > 
> > modifications to
> > 
> > > detect table names in statements. I want to check, whenever I hit the
> > > "table_spec" rule, if this table name is in a whitelist and perform
> > 
> > further
> > 
> > > actions.
> > > 
> > > I have a problem now: How can I add global variables to the parser?
> > > I need to give the parser a pointer to the whitelist in memory and
> > 
> > some other
> > 
> > > variables for detecting valid / invalid table names.
> > > 
> > > Defining variables in @members doesn't help, I am not able to access
> > 
> > this from
> > 
> > > outside of the parser code.
> > > In Java it seems to be much easier, since you have a class where you
> > 
> > can add
> > 
> > > public members, but in C I have no clue how to do it (yes, I need to
> > 
> > use C,
> > 
> > > and I never programmed in that language, only in C++ and Python so
> > 
> > far).
> > 
> > > I want to do something like this.
> > > In the parser rule "table_spec", I want to check the table name:
> > > {
> > >    char result[256];
> > >    strcat(result, s.tree ? s.tree->getText(s.tree)->chars : "");
> > >    strcat(result, s.tree ? "." : "");
> > >    strcat(result, t.tree ? t.tree->getText(t.tree)->chars : "");
> > >    isValid = checkForValidTable(result);
> > > }
> > > 
> > > "isValid" and "checkForValidTable" are defined in @members, but the
> > 
> > check
> > 
> > > function needs some statement handlers and other stuff coming from
> > 
> > the
> > 
> > > outside. In the end, I wanted to have something like this in my
> > 
> > main.cpp:
> > > [...]
> > > parser->setStmtHandle(some pointer);
> > > parser->setWhiteListHandle(some pointer);
> > > parser->sql_statement(parser); // this is the main function I would
> > 
> > use from
> > 
> > > the PL/SQL grammar file
> > > bool isValid = parser->isValid();
> > > [...]
> > > 
> > > 
> > > Is it possible to do something like that? If not, how can I fix this
> > 
> > problem?
> > 
> > > I need to get those handles inside of the parser somehow?
> > > Any ideas?
> > > 
> > > Andi
> > > 
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > 
> > interest/your-email-address
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From iannone at cs.manchester.ac.uk  Wed Mar 31 15:29:47 2010
From: iannone at cs.manchester.ac.uk (Luigi Iannone)
Date: Wed, 31 Mar 2010 23:29:47 +0100
Subject: [antlr-interest] Importing problems
Message-ID: <C43E6284-5DED-43E7-A5F5-21454FCD25E1@cs.manchester.ac.uk>

Hi

I have built a lexer grammar, and a combined one which should import it.
The problem is that as soon as I try to import using the following code in my combined grammar

grammar ManchesterOWLSyntax;
import  ManchesterOWLSyntaxLexer ;

  
main:
	 IDENTIFIER  
	;

I get the following error

ANTLR Parser Generator 3.2 Sep 23, 2009 12:02:23.
Using project classpath: Yes.
Grammar: /Users/luigi/Documents/workspace/Parsers/src/ManchesterOWLSyntax.g
error(163): /Parsers/src/ManchesterOWLSyntax.g:2:9: combined grammar ManchesterOWLSyntax and imported lexer grammar ManchesterOWLSyntaxLexer both generate ManchesterOWLSyntax_ManchesterOWLSyntaxLexer; import ignored
 |---> import  ManchesterOWLSyntaxLexer ;


I wonder what am I doing wrong. Any clue?

Thanks,

Luigi

From iannone at cs.manchester.ac.uk  Wed Mar 31 16:24:49 2010
From: iannone at cs.manchester.ac.uk (Luigi Iannone)
Date: Thu, 1 Apr 2010 00:24:49 +0100
Subject: [antlr-interest] Importing problems
In-Reply-To: <C43E6284-5DED-43E7-A5F5-21454FCD25E1@cs.manchester.ac.uk>
References: <C43E6284-5DED-43E7-A5F5-21454FCD25E1@cs.manchester.ac.uk>
Message-ID: <CB224F51-F182-440B-98B3-EC8F26DB329D@cs.manchester.ac.uk>

Hi,

strangely enough, I changed the name of the lexer to one which is not a sub-string of the combined grammar's name and it works fine.

Luigi
On 31 Mar 2010, at 23:29, Luigi Iannone wrote:

> Hi
> 
> I have built a lexer grammar, and a combined one which should import it.
> The problem is that as soon as I try to import using the following code in my combined grammar
> 
> grammar ManchesterOWLSyntax;
> import  ManchesterOWLSyntaxLexer ;
> 
> 
> main:
> 	 IDENTIFIER  
> 	;
> 
> I get the following error
> 
> ANTLR Parser Generator 3.2 Sep 23, 2009 12:02:23.
> Using project classpath: Yes.
> Grammar: /Users/luigi/Documents/workspace/Parsers/src/ManchesterOWLSyntax.g
> error(163): /Parsers/src/ManchesterOWLSyntax.g:2:9: combined grammar ManchesterOWLSyntax and imported lexer grammar ManchesterOWLSyntaxLexer both generate ManchesterOWLSyntax_ManchesterOWLSyntaxLexer; import ignored
> |---> import  ManchesterOWLSyntaxLexer ;
> 
> 
> I wonder what am I doing wrong. Any clue?
> 
> Thanks,
> 
> Luigi
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ron.hunter-duvar at oracle.com  Wed Mar 31 16:57:34 2010
From: ron.hunter-duvar at oracle.com (Ron Hunter-Duvar)
Date: Wed, 31 Mar 2010 17:57:34 -0600
Subject: [antlr-interest] Importing problems
In-Reply-To: <C43E6284-5DED-43E7-A5F5-21454FCD25E1@cs.manchester.ac.uk>
References: <C43E6284-5DED-43E7-A5F5-21454FCD25E1@cs.manchester.ac.uk>
Message-ID: <4BB3E16E.80508@oracle.com>

Luigi,

Are you trying to import your lexer grammar into your parser grammar? If 
so, I don't think that is correct. What you should do to have your 
parser grammar use the tokens defined by your lexer is to use the 
tokenVocab option, something like this:

grammar ManchesterOWLSyntax;
options {
  tokenVocab=ManchesterOWLSyntaxLexer;
}


Ron


Luigi Iannone wrote:
> Hi
>
> I have built a lexer grammar, and a combined one which should import it.
> The problem is that as soon as I try to import using the following code in my combined grammar
>
> grammar ManchesterOWLSyntax;
> import  ManchesterOWLSyntaxLexer ;
>
>   
> main:
> 	 IDENTIFIER  
> 	;
>
> I get the following error
>
> ANTLR Parser Generator 3.2 Sep 23, 2009 12:02:23.
> Using project classpath: Yes.
> Grammar: /Users/luigi/Documents/workspace/Parsers/src/ManchesterOWLSyntax.g
> error(163): /Parsers/src/ManchesterOWLSyntax.g:2:9: combined grammar ManchesterOWLSyntax and imported lexer grammar ManchesterOWLSyntaxLexer both generate ManchesterOWLSyntax_ManchesterOWLSyntaxLexer; import ignored
>  |---> import  ManchesterOWLSyntaxLexer ;
>
>
> I wonder what am I doing wrong. Any clue?
>
> Thanks,
>
> Luigi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

-- 
Ron Hunter-Duvar | Software Developer V | 403-272-6580
Oracle Service Engineering
Gulf Canada Square 401 - 9th Avenue S.W., Calgary, AB, Canada T2P 3C5

All opinions expressed here are mine, and do not necessarily represent
those of my employer.


From jab.antlr at species.org  Wed Mar 31 20:06:17 2010
From: jab.antlr at species.org (James Briant)
Date: Wed, 31 Mar 2010 20:06:17 -0700
Subject: [antlr-interest] crash with tree filter
Message-ID: <v2ne063fb511003312006z8f11dc74h1f431e531861b1dd@mail.gmail.com>

error(10):  internal error:
com/binaryfinery/comb/javaparser/generated/JavaDef.g :
java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 50
java.util.Vector.set(Vector.java:712)
org.antlr.analysis.DFA.createMinMaxTables(DFA.java:531)
org.antlr.analysis.DFA.createStateTables(DFA.java:435)
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:653)
org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1018)
org.antlr.grammar.v2.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:797)
org.antlr.grammar.v2.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:588)
org.antlr.grammar.v2.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:530)
org.antlr.grammar.v2.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:336)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:432)
org.antlr.Tool.generateRecognizer(Tool.java:641)
org.antlr.Tool.process(Tool.java:454)
org.antlr.mojo.antlr3.Antlr3Mojo.execute(Antlr3Mojo.java:391)
org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:558)
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeStandaloneGoal(DefaultLifecycleExecutor.java:512)
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:482)
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:330)
org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:291)
org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:142)
org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
java.lang.reflect.Method.invoke(Method.java:597)
org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
org.codehaus.classworlds.Launcher.main(Launcher.java:375)

This is where it tanks:

switchBlockLabels
    :   ^(SWITCH_BLOCK_LABEL_LIST switchCaseLabels* )
    ;

switchCaseLabels
    :   ^(CASE expression blockStatement*)
    | ^(DEFAULT blockStatement*)
    ;

Any ideas?

Thanks,

Jamie

From jab.antlr at species.org  Wed Mar 31 21:25:55 2010
From: jab.antlr at species.org (James Briant)
Date: Wed, 31 Mar 2010 21:25:55 -0700
Subject: [antlr-interest] hack for crash
Message-ID: <q2he063fb511003312125mfdc2d40ey973696f87d8a701e@mail.gmail.com>

in the org.antlr.analysis.DFA class, I hacked in the for loop. Total hackery
on my part, but it works. Fixes symptoms not disease.

public int getNumberOfStates() {
if ( getUserMaxLookahead()>0 ) {
// if using fixed lookahead then uniqueSets not set
return states.size();
}
for(int i = 0; i < states.size(); ++i) {
DFAState state = states.get(i);
int s = state.stateNumber;
if ( s>=numberOfStates) {
numberOfStates=s+1;
}
}
return numberOfStates;
}

From jab.antlr at species.org  Wed Mar 31 23:03:54 2010
From: jab.antlr at species.org (James Briant)
Date: Wed, 31 Mar 2010 23:03:54 -0700
Subject: [antlr-interest] nope. doesnt fix it. :-(
Message-ID: <n2ue063fb511003312303l4d01062fv1651bdb13d3aa3bc@mail.gmail.com>

that last hack doesn't fix it. now it runs but creates a dodgy parser.

jamie

From jab.antlr at species.org  Wed Mar 31 23:51:41 2010
From: jab.antlr at species.org (James Briant)
Date: Wed, 31 Mar 2010 23:51:41 -0700
Subject: [antlr-interest] narrowing it down
Message-ID: <w2ue063fb511003312351n45dad665l4bf3a1c9639bc5f4@mail.gmail.com>

A NonLLStarDecisionException was being throw in the DFA constructor, but
then the DecisionProbe was not printing any information because in

public void issueWarnings() {
// NONREGULAR DUE TO RECURSION > 1 ALTS
// Issue this before aborted analysis, which might also occur
// if we take too long to terminate
if ( nonLLStarDecision && !dfa.getAutoBacktrackMode() ) {
ErrorManager.nonLLStarDecision(this);
}

the if clause was ( true && false). so dfa.getAutoBacktrackMode is returning
true. When I nuked that part of the test I got this error message:

error(211): JavaDef.g:378:5: [fatal] rule statement has non-LL(*) decision
due to recursive rule invocations reachable from alts 2,3.  Resolve by
left-factoring or using syntactic predicates or using backtrack=true option.

The DFA that had this problem in the constructor is the one failing later
because the resetStateNumbersToBeContiguous() method was never called.

