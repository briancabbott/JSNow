From mblp at mega.ist.utl.pt  Sun Apr  1 13:21:49 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Sun, 1 Apr 2007 21:21:49 +0100
Subject: [antlr-interest] Get rule text only if rule was applied
In-Reply-To: <ab0bf2c00703311922j55190acfrfc0a296f26d24578@mail.gmail.com>
References: <ab0bf2c00703311314y12c567f4r9affecdaf8aa5d3d@mail.gmail.com>
	<9da4f4520703311322p5059ee89x614682f87f9095ab@mail.gmail.com>
	<ab0bf2c00703311922j55190acfrfc0a296f26d24578@mail.gmail.com>
Message-ID: <ab0bf2c00704011321g7d830a2cncd4fc6aceadd2bef@mail.gmail.com>

Just in case someone wants to know how I solved (:


tableAlias
	: (schemaName DOT)? tableName (AT_SIGN linkName)? (aliasLabel=alias)?
	  {refs.notityTableRef($tableName.text, aliasLabel == null ? null :
$aliasLabel.text, this.scope);}
	;



On 4/1/07, Miguel Ping <mblp at mega.ist.utl.pt> wrote:
> That was the first thing I tried, didn't work :)
>
> On 3/31/07, Oliver Zeigermann <oliver.zeigermann at gmail.com> wrote:
> > I have not tried this, but doesn't
> >
> > tableAlias
> >         : (schemaName DOT)? tableName  alias?
> >           {refs.notityTableRef($tableName.text, $alias == null ? null
> > : $alias.text, this.scope);}
> >         ;
> >
> > work?
> >
> > HTH
> >
> > Oliver
> >
> > 2007/3/31, Miguel Ping <mblp at mega.ist.utl.pt>:
> > > Hi all,
> > >
> > > I got this rule:
> > >
> > >
> > > tableAlias
> > >         : (schemaName DOT)? tableName  alias?
> > >           {refs.notityTableRef($tableName.text, $alias.text, this.scope);}
> > >
> > > But as you can see, if  the alias? part was not applied, $alias.text
> > > throws me a NullPointerException (of course, because $alias does not
> > > exist). How can I check if alias rule was applied?
> > >
> > > Thanks,
> > > Miguel Ping
> > >
> >
>

From parrt at cs.usfca.edu  Sun Apr  1 13:51:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Apr 2007 13:51:28 -0700
Subject: [antlr-interest] Manipulating lexer text output
In-Reply-To: <20070331232629.38AEC190750@www.antlr.org>
References: <20070331232629.38AEC190750@www.antlr.org>
Message-ID: <2972EE77-D1E1-4923-8B65-0F1D33B02DA9@cs.usfca.edu>

I think it's in the faq:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461

Ter
On Mar 31, 2007, at 4:26 PM, Gavin Lambert wrote:

> Ok, next question :)
>
> Is there some way for a lexer rule to manipulate the output text of  
> the lexer token, when it's not the rule responsible for generating  
> that token?  (I'm using the C language target, if that makes a  
> difference.)
>
> For example, imagine this grammar fragment:
>
> fragment
> EscapeSequence
>   : '\\'
>     (  '\\'
>     |  'n'
>     |  ('\r' | '\n') WS?
>     )
>   ;
> STRING
>   : '"' (~('"' | '\\') | EscapeSequence)* '"'
>   ;
>
> This works as is, but the result is identical to the source text,  
> including all escape sequences and quotes.  What I'd like to have  
> instead is the semantic equivalent -- ie. output a STRING token  
> where the quotes are removed and the escape sequences have been  
> resolved, ie. \\ is converted to a single backslash, \n to a real  
> newline character, and the final alt's text is removed entirely  
> (that's a line-folding escape).  This means that parsing only has  
> to be done once, instead of having to reparse the token text  
> outside of ANTLR.
>
> Rewriting rules sound like the sort of thing that would help here,  
> but they don't seem to work in the lexer.  And I tried calling  
> emitNew from the subrule, but that resulted in replacing the entire  
> string, not just the substring matched by the subtoken.  Any ideas?
>


From tomseago at gmail.com  Sun Apr  1 18:34:42 2007
From: tomseago at gmail.com (Tom Seago)
Date: Sun, 1 Apr 2007 18:34:42 -0700
Subject: [antlr-interest] throws clause
Message-ID: <516da7160704011834s36b6ec19na3aeaf58aaf0262f@mail.gmail.com>

In ANTLR v3, does the <<throws-clause>> portion of a rule definition
actually do anything?

I was expecting that it would let me define additional exceptions to be
thrown by a rule, but that doesn't seem to be what it does.  I figured
asking was going to be faster than trying to grok all the internals of ANTLR
to find an answer :)
-- 
                                         (-: Tom ;-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070401/6bd91098/attachment.html 

From Das.Linux at gmx.de  Sun Apr  1 20:33:18 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Mon, 2 Apr 2007 05:33:18 +0200
Subject: [antlr-interest] C-Target $label.text / toString malfunction
In-Reply-To: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
Message-ID: <CD674FC7-2F52-49EC-BC05-BF1F8BF94734@gmx.de>

Hi again,


Am 2007-03-31 um 18:25 schrieb Tobias Pape:

> Hi guys, hi Jim in particular.
>
>
>
[..]
> into the @init block of my first parser rule,
> but later patched the C.stg to say
> ==============================================
> <else>
> strStream->toStringSS(strStream,(ANTLR3_INT32)(<scope>.start- 
> >getTokenIndex(<scope>.start)),(ANTLR3_INT32)(<scope>.stop- 
> >getTokenIndex(<scope>.stop)))
> <endif>
> ==============================================
> instead of
> ==============================================
> <else>
> strStream->toString(<scope>.start,<scope>.stop)
> <endif>
> ==============================================
>
[..]

I tweaked it again, to really get the token:
<else>
<scope>.start->getText(<scope>.start)
<endif>

this merely looks even more like a hack ;)
but, finally, it does what I expect it to do..
It seems now, "multi-token tokens" will not return what expected,
(hence <scope>.start and <scope>.end in every _return-struce)
but until now, I haven't figured out, what this should be anyway.
( at this very moment i think of a problem I'm having, kind-of multi  
token,
but, heck it's in the lexer

here I go again:)

My problem today is my lexer generating "wrong" tokens.
Lexer:
==============================================

// Grammar productions
WhiteSpace
   : ( Space | Tab | Form )     { $channel=99; }
   | ( '\r' | '\n' | '\r''\n' ) { /*newline(); */ $channel=99; }
   ;

Comment
   : '\"'
     /* ( : ~('\"'|'\n'|'\r')
       | '\n'     { newline(); }
       | '\r'     { newline(); }
       //| '\r''\n' { newline(); }
     )*
     */
     ( options {greedy=false;} : . )*
     '\"' { $channel=99; }
   ;


KeywordOrIdentifier
	:	( Primitive ) => Primitive
	|	( KeywordSelector ) => KeywordSelector	
	|	( Keyword ) => Keyword
	|	Identifier
	;


Primitive
   : 'primitive' { $type=Primitive;  }
   ;



KeywordSelector
   :// sould be used twice, or its a keyword ( Keyword )+  
{ $type=KeywordSelector; }
   Keyword ( Keyword )+ { $type=KeywordSelector; }
   ;

Keyword
   : Identifier Colon { $type=Keyword;    }
   ;

Identifier
   : Letter ( Letter | Digit | '_' )* { $type=Identifier; }
   ;


fragment Letter
   : Upper | Lower
   ;

fragment Upper
   : 'A' .. 'Z'
   ;

fragment Lower
   : 'a' .. 'z'
   ;

fragment Digit
   : '0' .. '9'
   ;

Integer
   : ( Digit )+
   ;

String
   : ( '\'' ( ~'\'' )* '\'' )
   ;

NewBlock : '[' ;
EndBlock : ']' ;
Colon    : ':' ;
Period   : '.' ;
Exit     : '^' ;
Assign   : ':=' ;
NewTerm  : '(' ;
EndTerm  : ')' ;
Pound    : '#' ;

fragment Space : ' '  ;
fragment Tab   : '\t' ;
fragment Form   : '\f';


Not   : '~' {$type=SingleOperator;};
And   : '&' {$type=SingleOperator;};
Or    : '|' {$type=Or;};
Star  : '*' {$type=SingleOperator;};
Div   : '/' {$type=SingleOperator;};
Mod   : '\\' {$type=SingleOperator;};
Plus  : '+' {$type=SingleOperator;};
Minus : '-' {$type=Minus;};
Equal : '='  {$type=Equal;};
// We must obviously match the = counterpatr aka <> extra,
// because otherwise, < is treated as Op and > as Arg:
// Differ	:	'<>' {$type=SingleOperator;};
Differ	:	'<>' {$type=OperatorSequence;};
More  : '>' {$type=SingleOperator;};
Less  : '<' {$type=SingleOperator;};
Comma : ',' {$type=Comma;};
At    : '@' {$type=SingleOperator;};
Per   : '%' {$type=SingleOperator;};

Separator :
   Minus Minus Minus Minus ( Minus )* {$type=Separator;}
;


fragment  SingleOperator :
   Not | And | Or | Star | Div | Mod | Plus |
   Equal | More | Less | Comma | At | Per
   | Differ
;

OperatorSequence :
// ( SingleOperator )+ {$type=OperatorSequence;} // shouldn't this be  
the following? i.e. one op is _no_ op-sequence ;)
   SingleOperator ( SingleOperator )+ {$type=OperatorSequence;}
//  | SingleOperator* Differ SingeOperator* { $type=OperatorSequence; }
;
==============================================

As you see, I already insertet a "Differ" rule, because my <> wasn't  
matched as OperatorSequence.
Another Example was, that "error:", which  should be a "Keyword" was  
matched as "Identifier"
(discarding the : in the parser an generating errors then xD).

in the "orginal" v2-Grammar, there was lot of ( .. )=>, which i  
removed after
Gavin Lamberts suggest:<D1C0EC74-2D50-4E28-B9EE-1A00916D9404 at gmx.de>

for your information, the "old" Lexer:
==============================================
/ Grammar productions
WhiteSpace
   : ( Space | Tab | Form )     { $setType(Token.SKIP); }
   | ( '\r' | '\n' | '\r''\n' ) { newline(); $setType(Token.SKIP); }
   ;

Comment
   : '\"'
     (
       options
       {
         generateAmbigWarnings=false;
       }

       : ~('\"'|'\n'|'\r')
       | '\n'     { newline(); }
       | '\r'     { newline(); }
       | '\r''\n' { newline(); }
     )*
     '\"' { $setType(Token.SKIP); }
   ;

KeywordOrIdentifier
   : ( Keyword Keyword) => KeywordSelector { $setType 
(KeywordSelector); }
   | ( Keyword )        => Keyword         { $setType(Keyword);    }
   | ( Primitive )      => Primitive       { $setType(Primitive);  }
   | Identifier                            { $setType(Identifier); }
   ;

protected Identifier
   : Letter ( Letter | Digit | '_' )*
   ;

protected Primitive
   : "primitive"
   ;

protected Keyword
   : Identifier Colon
   ;

protected KeywordSelector
   : ( Keyword )+
   ;

protected Letter
   : Upper | Lower
   ;

protected Upper
   : 'A' .. 'Z'
   ;

protected Lower
   : 'a' .. 'z'
   ;

protected Digit
   : '0' .. '9'
   ;

Integer
   : ( Digit )+
   ;

String
   : ( '\'' ( ~'\'' )* '\'' )
   ;

NewBlock : '[' ;
EndBlock : ']' ;
Colon    : ':' ;
Period   : '.' ;
Exit     : '^' ;
Assign   : ":=" ;
NewTerm  : '(' ;
EndTerm  : ')' ;
Pound    : '#' ;

protected Space : ' '  ;
protected Tab   : '\t' ;
protected Form   : '\f';

BinarySelector :
( Minus Minus Minus Minus ) =>
   Separator {$setType(Separator);}
|
( SingleOperator SingleOperator ) =>
   OperatorSequence {$setType(OperatorSequence);}
|
( Minus SingleOperator ) =>
   Minus OperatorSequence {$setType(OperatorSequence);}
|
( Minus ) =>
   Minus {$setType(Minus);}
|
( Comma ) =>
   Comma {$setType(Comma);}
|
( Or ) =>
   Or {$setType(Or);}
|
( Equal ) =>
   Equal {$setType(Equal);}
|
   SingleOperator {$setType(SingleOperator);}
;

protected Separator :
   Minus Minus Minus Minus ( Minus )*
;

protected OperatorSequence :
   ( SingleOperator )+
;

protected SingleOperator :
   Not | And | Or | Star | Div | Mod | Plus |
   Equal | More | Less | Comma | At | Per
;

protected Not   : '~' ;
protected And   : '&' ;
protected Or    : '|' ;
protected Star  : '*' ;
protected Div   : '/' ;
protected Mod   : '\\' ;
protected Plus  : '+' ;
protected Minus : '-' ;
protected Equal : '=' ;
protected More  : '>' ;
protected Less  : '<' ;
protected Comma : ',' ;
protected At    : '@' ;
protected Per   : '%' ;
==============================================


whatever I'm doing wrong, I managed to obfuscate the orgin of the  
errors behing the conversion done :(.

any help apreciated,
thank you
	-Tobias


-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070402/a94e325b/attachment.bin 

From firatkucuk at gmail.com  Mon Apr  2 01:15:09 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Mon, 2 Apr 2007 11:15:09 +0300
Subject: [antlr-interest] rule rewrite
Message-ID: <7385e6fe0704020115x120a4d91iabfda11fec20bf06@mail.gmail.com>

this is simple sample inline calculator grammar:

start : operation ((PLUS^ | MINUS^) operation)* ;
operation : NUMBER ((ASTERISK^ | SLASH^) NUMBER)* ;

but i need:

start : operation ((ADDITION^ | SUBTRACTION^) operation)*;

how can i rewrite this rules without changing rule.

i tried to seperate to 2 rules:

start : additionOperation | subtractionOperation
additionOperation : operation (PLUS operation)* -> ^(ADDITION operation+)
subtractionOperation : operation (MINUS operation)* -> ^(SUBTRACTION
operation+)

any solution?




-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070402/aad2cd7e/attachment.html 

From Das.Linux at gmx.de  Mon Apr  2 01:28:14 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Mon, 2 Apr 2007 10:28:14 +0200
Subject: [antlr-interest] C-Target $label.text / toString malfunction
In-Reply-To: <CD674FC7-2F52-49EC-BC05-BF1F8BF94734@gmx.de>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
	<CD674FC7-2F52-49EC-BC05-BF1F8BF94734@gmx.de>
Message-ID: <D8C67A19-FE11-4DDE-9BC2-B80737277269@gmx.de>


Am 2007-04-02 um 05:33 schrieb Tobias Pape:

>
> As you see, I already insertet a "Differ" rule, because my <>  
> wasn't matched as OperatorSequence.
> Another Example was, that "error:", which  should be a "Keyword"  
> was matched as "Identifier"
> (discarding the : in the parser an generating errors then xD).
>
> in the "orginal" v2-Grammar, there was lot of ( .. )=>, which i  
> removed after
> Gavin Lamberts suggest:<D1C0EC74-2D50-4E28-B9EE-1A00916D9404 at gmx.de>
>


arg, memo to myself: don't patch too much in the C.stg -.-

apology, apology,
	-Tobias

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070402/a5394653/attachment.bin 

From dave at badgers-in-foil.co.uk  Mon Apr  2 02:21:31 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 2 Apr 2007 09:21:31 +0000
Subject: [antlr-interest] rule rewrite
In-Reply-To: <7385e6fe0704020115x120a4d91iabfda11fec20bf06@mail.gmail.com>
References: <7385e6fe0704020115x120a4d91iabfda11fec20bf06@mail.gmail.com>
Message-ID: <20070402092131.GA30280@badgers-in-foil.co.uk>

On Mon, Apr 02, 2007 at 11:15:09AM +0300, F?rat K???K wrote:
> this is simple sample inline calculator grammar:
> 
> start : operation ((PLUS^ | MINUS^) operation)* ;
> operation : NUMBER ((ASTERISK^ | SLASH^) NUMBER)* ;
> 
> but i need:
> 
> start : operation ((ADDITION^ | SUBTRACTION^) operation)*;
> 
> how can i rewrite this rules without changing rule.

Do you mean like this,

  start : operation (additionOperator^ operation)* ;
  additionOperator : PLUS -> ADDITION | MINUS -> SUBTRACTION ;

(untested)


-- 
http://david.holroyd.me.uk/

From firatkucuk at gmail.com  Mon Apr  2 02:35:27 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Mon, 2 Apr 2007 12:35:27 +0300
Subject: [antlr-interest] rule rewrite
In-Reply-To: <20070402092131.GA30280@badgers-in-foil.co.uk>
References: <7385e6fe0704020115x120a4d91iabfda11fec20bf06@mail.gmail.com>
	<20070402092131.GA30280@badgers-in-foil.co.uk>
Message-ID: <7385e6fe0704020235q3079c46an49380afd0694c546@mail.gmail.com>

wonderful :)
thanks a lot.

2007/4/2, David Holroyd <dave at badgers-in-foil.co.uk>:
>
> On Mon, Apr 02, 2007 at 11:15:09AM +0300, F?rat K???K wrote:
> > this is simple sample inline calculator grammar:
> >
> > start : operation ((PLUS^ | MINUS^) operation)* ;
> > operation : NUMBER ((ASTERISK^ | SLASH^) NUMBER)* ;
> >
> > but i need:
> >
> > start : operation ((ADDITION^ | SUBTRACTION^) operation)*;
> >
> > how can i rewrite this rules without changing rule.
>
> Do you mean like this,
>
>   start : operation (additionOperator^ operation)* ;
>   additionOperator : PLUS -> ADDITION | MINUS -> SUBTRACTION ;
>
> (untested)
>
>
> --
> http://david.holroyd.me.uk/
>



-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070402/64d4c0eb/attachment-0001.html 

From ric.klaren at gmail.com  Mon Apr  2 04:46:06 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Mon, 2 Apr 2007 13:46:06 +0200
Subject: [antlr-interest] C++ code target
In-Reply-To: <01cd01c773e5$3d667ba0$b83372e0$@com>
References: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com>
	<bc607a4e0703260116o3adc75ckbe02ec579b7991ed@mail.gmail.com>
	<01cd01c773e5$3d667ba0$b83372e0$@com>
Message-ID: <bc607a4e0704020446g55cfd5d6o78ded418ebb817e1@mail.gmail.com>

Hi,

On 4/1/07, Don Caton <dcaton at shorelinesoftware.com> wrote:
> > fashion. Currently I intend to drop unicode support for now and first
> > get a 8 bit version out.
>
> Ric:
>
> Please don't do that.  One of the biggest limitations in Antlr 2 is the lack
> of proper Unicode support.
>
> Why should the code have any dependence on the size of a character?  Please
> don't make the same mistake in 3.0.  The lexer class should be a template
> class that takes the size of a character as a template parameter.  Then
> there will be no need to go back and make another version for Unicode.  It
> should not make any difference whether you are parsing 8 bit characters or
> 16 bit characters or characters of any arbitrary length.

I should rephrase my statement I think, I'll try and prepare as much
as possible for unicode support and key datatypes will be configurable
(maybe not at first but I'll make sure to make it easy to lift them up
to template parameters). But a first release will probably not have an
easy switch to unicode.

> Wish I had time to contribute some code but I won't for the next 4-5 months.
> I could probably help with code design and review though, as time permits.

Design/Code review would be very valuable already. I'll poll you when
I have again something worth looking at.

Cheers,

Ric

From parrt at cs.usfca.edu  Mon Apr  2 09:22:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Apr 2007 09:22:48 -0700
Subject: [antlr-interest] throws clause
In-Reply-To: <516da7160704011834s36b6ec19na3aeaf58aaf0262f@mail.gmail.com>
References: <516da7160704011834s36b6ec19na3aeaf58aaf0262f@mail.gmail.com>
Message-ID: <466CC684-EFDE-4177-A743-8985CA7AC4B9@cs.usfca.edu>


On Apr 1, 2007, at 6:34 PM, Tom Seago wrote:

> In ANTLR v3, does the <<throws-clause>> portion of a rule  
> definition actually do anything?
>
> I was expecting that it would let me define additional exceptions  
> to be thrown by a rule, but that doesn't seem to be what it does.   
> I figured asking was going to be faster than trying to grok all the  
> internals of ANTLR to find an answer :)
>

Hi Tom, i don't think it's impl. yet.  added:

http://www.antlr.org:8888/browse/ANTLR-100

Ter


From jhvdven at xs4all.nl  Mon Apr  2 09:48:01 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Mon, 02 Apr 2007 18:48:01 +0200
Subject: [antlr-interest] Very general question,
 might require a book as an answer
In-Reply-To: <ab0bf2c00704011606h7fafa808gb9b02593c943a8f5@mail.gmail.com>
References: <45B3E8E6.6040905@xs4all.nl>
	<ab0bf2c00704011606h7fafa808gb9b02593c943a8f5@mail.gmail.com>
Message-ID: <461133C1.4090504@xs4all.nl>

Thanks Miguel,


You can see how much of your ideas I already implemented at 
http://sourceforge.net/projects/quantum
and then check out cvs. Look for 
/quantum-plugin/src/com/quantum/core/sql/grammar

Regards,

Jan

Miguel Ping wrote:
> Hey there,
>
> Sorry for replying just now, I must confess until recently i haven't
> lost much time with the antlr mailing list. I'm trying to develop an
> antlr grammar for sql for some personal stuff, and since I didn't know
> nothing of antlr, I'm learning antlr also. So if it's not too late :p
> I'll try and answer your questions based on my short experience.
>
>> 1) Should I be using antlr, or should I stick with the stuff eclipse 
>> offers?
> Antlr makes it really easy to build your language tools. I dunno what
> eclipse offers except a jdom toolkit for manipulating java asts...
>> 2) Is antlr the right tool of choice for a project in which each
>> database vendor speaks its own dialect? In other words will the
>> inheritance feature deliver the promise of less coding? And of course,
>> what should be the base grammar of this all? And could we have one 
>> lexer?
> My guess is that  inheritance will indeed solve many problems. I think
> the base grammar should be a plain ANSI SQL'92 grammar reduced to the
> minimum common denominator of all dialects. As for the lexer, one
> lexer may not suffice because of special keywords of the several
> dialects. In one dialect you want to recognize a keyword as a
> function, in other it may be an identifer...
>> 3) We would like to support scripts, some dialects have statement
>> separators, others do not. Does this mean I need to write something that
>> separates the statements first, or is there a smarter way?
> Dunno
>> 4) I never used the tree walker classes in antlr. I must admit, I do not
>> understand the value of it yet. However I think they are what I need
>> because after lexing and parsing I want to interpret the results. So far
>> my AST is not a tree but a list. What are the benefits of using tree
>> walkers?
> I haven't written a tree walker, but for some languages I guess it's
> more easy to do stuff with structured trees. for instance, determining
> scopes, operator precedence, etc.
>> 5) Why should I upgrade to v3?
> V3 deals with some problems of V2 both in terms of design and
> internals , and it's faster and the algorithm is alot more powerful.
> in v2 you must specify lookahead, v3 has a LL(*) algorithm that has
> infinite lookahead.
>
> Bear in mind that I am a antlr newbie and I am still learning lots of
> stuff, so the answers I provided may not be the correct answers to
> your questions...
>
> On 1/21/07, Jan van der Ven <jhvdven at xs4all.nl> wrote:
>> Dear list,
>>
>>
>>
>> I am involved in the Quantum DB eclipse plugin  for quite some time now.
>> This is a plugin for uniform access to databases that have a JDBC driver
>> (http://sourceforge.net/projects/quantum). I joined the development team
>> for the frustration I kept getting with queries that contained errors
>> that could have been solved at 'compile' time rather than at 'runtime'.
>> This, imho, means that the syntax of the statement(s) need to be
>> checked, which means a parser.
>>
>> As you may be aware SQL comes in many dialects and our plugin aims to
>> offer support for all of them.
>>
>> So, I looked around and found antlr. It seemed very fit for the job as
>> it allows inheritance. As plugin developers we deliver a base and allow
>> others to enhance/specialize that for their specific database.
>>
>> I got started, looked at some .g files, borrowed some constructs and got
>> stuck on a very basic point: all the tables, columns, aliases and so on,
>> were recognized as identifiers only. Once the statement was parsed
>> 'successfully', it was not possible to reason about it as the parser did
>> not deliver tables involved, columns belonging to those tables and so
>> on. (I think you would call this an interpreter...)
>>
>> I posted to this list about 'promoting' certain tokens, and of course
>> and thank you all, received an answer: promote them by adding an action:
>>
>> <pre>
>> column_alias
>>     :
>>     i:id {#i.setType(COLUMN_IDENTIFIER_ALIAS);}
>>     ;
>> </pre>
>>
>> So that my id gets promoted to a column alias whenever this rule 
>> executes.
>>
>> I got this to work, finding out errors even when the syntax worked out
>> ok (misspelled table and column names, wrong relationships), but it
>> seemed to me that I had not unleashed the complete power of antlr.
>>
>> So, now, finally, I come to the questions that may require a book (or
>> 2)  to answer:
>>
>> 1) Should I be using antlr, or should I stick with the stuff eclipse 
>> offers?
>> 2) Is antlr the right tool of choice for a project in which each
>> database vendor speaks its own dialect? In other words will the
>> inheritance feature deliver the promise of less coding? And of course,
>> what should be the base grammar of this all? And could we have one 
>> lexer?
>> 3) We would like to support scripts, some dialects have statement
>> separators, others do not. Does this mean I need to write something that
>> separates the statements first, or is there a smarter way?
>> 4) I never used the tree walker classes in antlr. I must admit, I do not
>> understand the value of it yet. However I think they are what I need
>> because after lexing and parsing I want to interpret the results. So far
>> my AST is not a tree but a list. What are the benefits of using tree
>> walkers?
>> 5) Why should I upgrade to v3?
>>
>> If anyone could find the time to answer even one of my questions, that
>> would be greatly appreciated.
>>
>> Kind regards,
>>
>>
>>
>>
>> Jan
>>
>>
>>
>>
>
>


From mblp at mega.ist.utl.pt  Mon Apr  2 09:59:13 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Mon, 2 Apr 2007 17:59:13 +0100
Subject: [antlr-interest] Very general question,
	might require a book as an answer
In-Reply-To: <461133C1.4090504@xs4all.nl>
References: <45B3E8E6.6040905@xs4all.nl>
	<ab0bf2c00704011606h7fafa808gb9b02593c943a8f5@mail.gmail.com>
	<461133C1.4090504@xs4all.nl>
Message-ID: <ab0bf2c00704020959h1ca4de91sc3ebfa7a8e7393b2@mail.gmail.com>

Err I keep forgetting to reply to antlr list, so I think my previous
mail was only to you...
Anyway, when I get home I'll grab the latest from cvs, and who knows
maybe I can use some of your stuff on my things. Glad you made a
sourceforge proj :) and not a closed source.

On 4/2/07, Jan van der Ven <jhvdven at xs4all.nl> wrote:
> Thanks Miguel,
>
>
> You can see how much of your ideas I already implemented at
> http://sourceforge.net/projects/quantum
> and then check out cvs. Look for
> /quantum-plugin/src/com/quantum/core/sql/grammar
>
> Regards,
>
> Jan
>
> Miguel Ping wrote:
> > Hey there,
> >
> > Sorry for replying just now, I must confess until recently i haven't
> > lost much time with the antlr mailing list. I'm trying to develop an
> > antlr grammar for sql for some personal stuff, and since I didn't know
> > nothing of antlr, I'm learning antlr also. So if it's not too late :p
> > I'll try and answer your questions based on my short experience.
> >
> >> 1) Should I be using antlr, or should I stick with the stuff eclipse
> >> offers?
> > Antlr makes it really easy to build your language tools. I dunno what
> > eclipse offers except a jdom toolkit for manipulating java asts...
> >> 2) Is antlr the right tool of choice for a project in which each
> >> database vendor speaks its own dialect? In other words will the
> >> inheritance feature deliver the promise of less coding? And of course,
> >> what should be the base grammar of this all? And could we have one
> >> lexer?
> > My guess is that  inheritance will indeed solve many problems. I think
> > the base grammar should be a plain ANSI SQL'92 grammar reduced to the
> > minimum common denominator of all dialects. As for the lexer, one
> > lexer may not suffice because of special keywords of the several
> > dialects. In one dialect you want to recognize a keyword as a
> > function, in other it may be an identifer...
> >> 3) We would like to support scripts, some dialects have statement
> >> separators, others do not. Does this mean I need to write something that
> >> separates the statements first, or is there a smarter way?
> > Dunno
> >> 4) I never used the tree walker classes in antlr. I must admit, I do not
> >> understand the value of it yet. However I think they are what I need
> >> because after lexing and parsing I want to interpret the results. So far
> >> my AST is not a tree but a list. What are the benefits of using tree
> >> walkers?
> > I haven't written a tree walker, but for some languages I guess it's
> > more easy to do stuff with structured trees. for instance, determining
> > scopes, operator precedence, etc.
> >> 5) Why should I upgrade to v3?
> > V3 deals with some problems of V2 both in terms of design and
> > internals , and it's faster and the algorithm is alot more powerful.
> > in v2 you must specify lookahead, v3 has a LL(*) algorithm that has
> > infinite lookahead.
> >
> > Bear in mind that I am a antlr newbie and I am still learning lots of
> > stuff, so the answers I provided may not be the correct answers to
> > your questions...
> >
> > On 1/21/07, Jan van der Ven <jhvdven at xs4all.nl> wrote:
> >> Dear list,
> >>
> >>
> >>
> >> I am involved in the Quantum DB eclipse plugin  for quite some time now.
> >> This is a plugin for uniform access to databases that have a JDBC driver
> >> (http://sourceforge.net/projects/quantum). I joined the development team
> >> for the frustration I kept getting with queries that contained errors
> >> that could have been solved at 'compile' time rather than at 'runtime'.
> >> This, imho, means that the syntax of the statement(s) need to be
> >> checked, which means a parser.
> >>
> >> As you may be aware SQL comes in many dialects and our plugin aims to
> >> offer support for all of them.
> >>
> >> So, I looked around and found antlr. It seemed very fit for the job as
> >> it allows inheritance. As plugin developers we deliver a base and allow
> >> others to enhance/specialize that for their specific database.
> >>
> >> I got started, looked at some .g files, borrowed some constructs and got
> >> stuck on a very basic point: all the tables, columns, aliases and so on,
> >> were recognized as identifiers only. Once the statement was parsed
> >> 'successfully', it was not possible to reason about it as the parser did
> >> not deliver tables involved, columns belonging to those tables and so
> >> on. (I think you would call this an interpreter...)
> >>
> >> I posted to this list about 'promoting' certain tokens, and of course
> >> and thank you all, received an answer: promote them by adding an action:
> >>
> >> <pre>
> >> column_alias
> >>     :
> >>     i:id {#i.setType(COLUMN_IDENTIFIER_ALIAS);}
> >>     ;
> >> </pre>
> >>
> >> So that my id gets promoted to a column alias whenever this rule
> >> executes.
> >>
> >> I got this to work, finding out errors even when the syntax worked out
> >> ok (misspelled table and column names, wrong relationships), but it
> >> seemed to me that I had not unleashed the complete power of antlr.
> >>
> >> So, now, finally, I come to the questions that may require a book (or
> >> 2)  to answer:
> >>
> >> 1) Should I be using antlr, or should I stick with the stuff eclipse
> >> offers?
> >> 2) Is antlr the right tool of choice for a project in which each
> >> database vendor speaks its own dialect? In other words will the
> >> inheritance feature deliver the promise of less coding? And of course,
> >> what should be the base grammar of this all? And could we have one
> >> lexer?
> >> 3) We would like to support scripts, some dialects have statement
> >> separators, others do not. Does this mean I need to write something that
> >> separates the statements first, or is there a smarter way?
> >> 4) I never used the tree walker classes in antlr. I must admit, I do not
> >> understand the value of it yet. However I think they are what I need
> >> because after lexing and parsing I want to interpret the results. So far
> >> my AST is not a tree but a list. What are the benefits of using tree
> >> walkers?
> >> 5) Why should I upgrade to v3?
> >>
> >> If anyone could find the time to answer even one of my questions, that
> >> would be greatly appreciated.
> >>
> >> Kind regards,
> >>
> >>
> >>
> >>
> >> Jan
> >>
> >>
> >>
> >>
> >
> >
>
>

From me262c at gmail.com  Mon Apr  2 12:02:30 2007
From: me262c at gmail.com (me 262)
Date: Mon, 2 Apr 2007 12:02:30 -0700
Subject: [antlr-interest] Newbie: How to debug in C++?
Message-ID: <b9fb3efe0704021202kc439fd7s1db626f4b3f0a74c@mail.gmail.com>

Hi,

  I tried to convert Alex Miller's examples into C++ (MSVC7)
http://tech.puredanger.com/2007/01/13/implementing-a-scripting-language-with-antlr-part-1-lexer/

  The lexer went OK, the Parser is missing DumpASTVisitor in C++, but
otherwise OK too. The script.g however got a lot of error in
ScriptWalker.hpp. Here is the *.g file for C++ (you can find the java
version on Alex's blog, part 2).

  A Main.cpp for testing is also attached.

  It would not compile at all. Can someone point out what went wrong here?

Thanks

/* ############################## L E X E R ############################ */
options {
	language="Cpp";
}


class ScriptLexer extends Lexer;

	options {
		k=1; 	// Only 1 lookahead character required
	}
	
	// Define string values - either simple unquoted or complex quoted
	STRING : ('a'..'z'|'A'..'Z'|'0'..'9'|'_')+
			| ('"' (~'"')* '"');
	
	// Ignore all whitespace
	WS     :
	    (' '
	    | '\t'
	    | '\r' '\n' { newline(); }
	    | '\n'      { newline(); }
	    )
	    { $setType(antlr::Token::SKIP); } ;
	
	// Single-line comment
	LINE_COMMENT : '#' (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
		{ $setType(antlr::Token::SKIP); newline(); } ;
	
	// Punctuation
	LBRACE : '{';
	RBRACE : '}';
	EQUALS : '=';
	SEMI : ';';


/* ############################## P A R S E R ############################ */

class ScriptParser extends Parser;

	options {
		buildAST=true; 		// Automatically build the AST while parsing
		k=2; 				// Need lookahead of two for props without keys (to check for the =)
	}
	
	tokens {
		SCRIPT;				// Imaginary token inserted at the root of the script
		BLOCK;				// Imaginary token inserted at the root of a block
		COMMAND;			// Imaginary token inserted at the root of a command
		PROPERTY;			// Imaginary token inserted at the root of a property
	}
	
	/**
	 * Parse a script, which consists of 0 or more blocks.  The AST
produced will contain an imaginary
	 * SCRIPT node at the root with child block ASTs.
	 */
	script : (block)*
		{#script = #([SCRIPT, "SCRIPT"], #script);};		// Magic to insert the
imgainary SCRIPT node
	
	/**
	 * Parse a block, which consists of a block name then 0 or more
commands in { }.  The AST produced
	 * will contain an imaginary BLOCK node at the root with children
which are the block name followed
	 * by an AST for each child command.  The { } are not included in the AST.
	 */
	block : (STRING LBRACE! (command)* RBRACE!)
		{#block = #([BLOCK, "BLOCK"], #block);};

	/**
	 * Parse a command, which consists of a command name, followed by 0
or more command properties and
	 * terminated with a semicolon.
	 */
	command : (STRING (property)* SEMI!)
		{#command = #([COMMAND, "COMMAND"], #command);};
	
	/**
	 * Parse a property definition, which consists either of an unkeyed value
	 * or as a key-value pair.  The AST produced will contain an
imaginary PROPERTY token node at the root
	 * with either one child (for a non-keyed value) or two children if
there is a key and a value.
	 * The = is not included in the AST.
	 */
	property : ( (STRING EQUALS!)? STRING)
		{#property = #([PROPERTY, "PROPERTY"], #property);};


/* ############################## T R E E  W A L K E R
############################ */

class ScriptWalker extends TreeParser;

{
	/**
	 * Helper method to remove quotes from a quoted string.
	 * @param value The value to remove quotes from
	 * @return The value with surrounding quotes (if any) removed
	 */

    std::string removeQuotes(std::string &value) {
       // if(value != null && value.startsWith("\"")) {
       //     return value.substring(1, value.length()-1);
       // }
        return value;
    }
}

	/**
	 * Look for SCRIPT node with child BLOCK ASTs and return a Script object
	 * @return Script object, never null
	 */
	script returns [Script script]
	{
		script = new Script();
	}
		:	#( SCRIPT (block[script] )* );
		
	/**
	 * Look for BLOCK node with child COMMAND ASTs and add any block
found to the blocks list.
	 * @param blocks The blocks being collected
	 */
	block [Script script]
	{
		Block block = null;
	}
		:	#( 	BLOCK
				 (
					b:STRING
					{
						block = new Block(removeQuotes(b->getText()));
					}
					(command[block])*
				)
			)
			{ script->addBlock(block); }
		;
	
	/**
	 * Look for COMMAND node with child command name and properties and
add the command
	 * info to the block.
	 * @param block The block being parsed
	 */
	command [Block block]
	{
		Command command = null;
	}
		:	#( 	COMMAND
				(
					c:STRING
					{
						command = new Command(removeQuotes(c->getText()));
						block->addCommand(command);
					}
					(property[command])*
				)
			);
	
	/**
	 * Look for PROPERTY node with child (optional) key and value and add
the property
	 * to the current CommandInfo.
	 * @param command The current command
	 */
	property [Command command]
		: 	#( PROPERTY
				(
					p1:STRING (p2:STRING)?
					{
						if(p2 == null) {
							command->addProperty(removeQuotes(p1->getText()));
						} else {
							command->addProperty(removeQuotes(p1->getText()),
removeQuotes(p2->getText()));
						}
					}
				)
			);
	

//--------------------------------------------------------------------------------
// The main.cpp
//--------------------------------------------------------------------------------
/* Calculate an expression read from stdin or from the arguments passed to
 * the program (using stringstream's)
 */
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>

#include "antlr/CommonAST.hpp"
#include "antlr/AST.hpp"
#include "ScriptLexer.hpp"
#include "ScriptParser.hpp"
#include "ScriptWalker.hpp"

using namespace std;

string getTokenType(int tokenType)
{
        switch(tokenType) {

		case ScriptLexerTokenTypes::STRING: return "STRING";
		case ScriptLexerTokenTypes::LBRACE: return "LBRACE";
		case ScriptLexerTokenTypes::RBRACE: return "RBRACE";
		case ScriptLexerTokenTypes::EQUALS: return "EQUALS";
		case ScriptLexerTokenTypes::SEMI: return "SEMI";

        default: return "OTHER";
        }
 }

int main( int argc, char* argv[] )
{
	ANTLR_USING_NAMESPACE(std)
	ANTLR_USING_NAMESPACE(antlr)
	try
	{
		ifstream in(argv[1],ios::in);
		ScriptLexer lexer(in);
     /*
		RefToken token = lexer.nextToken();
		while(token->getType() != ScriptLexerTokenTypes::EOF_) {
            cout << "\t" + getTokenType(token->getType()) + "\t\t" +
token->getText()<<endl;
            token = lexer.nextToken();
        }
	 */

		ScriptParser parser(lexer);

		ASTFactory ast_factory;
		parser.initializeASTFactory(ast_factory);
		parser.setASTFactory(&ast_factory);

		parser.script();

		RefAST ast = (RefAST) parser.getAST();
	
		/*
		DumpASTVisitor visitor;
		visitor.visit(ast);
		*/

	}
	catch(ANTLRException& e)
	{
		cerr << "Parse exception: " << e.toString() << endl;
		return -1;
	}
	catch(exception& e)
	{
		cerr << "exception: " << e.what() << endl;
		return -1;
	}
	return 0;
}
-------------- next part --------------
A non-text attachment was scrubbed...
Name: script.g
Type: application/octet-stream
Size: 4751 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070402/c6a7a416/attachment.obj 
-------------- next part --------------
/* Calculate an expression read from stdin or from the arguments passed to
 * the program (using stringstream's)
 */
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>

#include "antlr/CommonAST.hpp"
#include "antlr/AST.hpp"
#include "ScriptLexer.hpp"
#include "ScriptParser.hpp"
#include "ScriptWalker.hpp"

using namespace std;

string getTokenType(int tokenType) 
{
        switch(tokenType) {

		case ScriptLexerTokenTypes::STRING: return "STRING";
		case ScriptLexerTokenTypes::LBRACE: return "LBRACE";
		case ScriptLexerTokenTypes::RBRACE: return "RBRACE";
		case ScriptLexerTokenTypes::EQUALS: return "EQUALS";
		case ScriptLexerTokenTypes::SEMI: return "SEMI";

        default: return "OTHER";
        }
 }

int main( int argc, char* argv[] )
{
	ANTLR_USING_NAMESPACE(std)
	ANTLR_USING_NAMESPACE(antlr)
	try
	{
		ifstream in(argv[1],ios::in);
		ScriptLexer lexer(in);
     /*  
		RefToken token = lexer.nextToken();
		while(token->getType() != ScriptLexerTokenTypes::EOF_) {
            cout << "\t" + getTokenType(token->getType()) + "\t\t" + token->getText()<<endl;
            token = lexer.nextToken();
        }
	 */

		ScriptParser parser(lexer);

		ASTFactory ast_factory;
		parser.initializeASTFactory(ast_factory);
		parser.setASTFactory(&ast_factory);

		parser.script();

		RefAST ast = (RefAST) parser.getAST();
	
		/*
		DumpASTVisitor visitor;
		visitor.visit(ast);
		*/

	}
	catch(ANTLRException& e)
	{
		cerr << "Parse exception: " << e.toString() << endl;
		return -1;
	}
	catch(exception& e)
	{
		cerr << "exception: " << e.what() << endl;
		return -1;
	}
	return 0;
}

From parrt at cs.usfca.edu  Mon Apr  2 12:26:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Apr 2007 12:26:07 -0700
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
Message-ID: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>

Hi,

I'm thinking of using generics for ANTLR internals.  The generated  
code will be 1.4 compatible, but the version number will be wrong for  
VM.  So, probably still 1.5 would be required to run antlr.  Do I  
need to keep 1.4 compatible or is it ok to go to 1.5 nowadays do you  
think?

For now, i can keep the runtime 1.4 compatible, however.

Thanks,
Ter

From john.howard9 at btinternet.com  Mon Apr  2 12:46:45 2007
From: john.howard9 at btinternet.com (John Howard)
Date: Mon, 02 Apr 2007 20:46:45 +0100
Subject: [antlr-interest] Newbie Parser/Lexer question
Message-ID: <46115DA5.7060408@btinternet.com>

I am trying to develop a grammar for a description of a bidding system 
for the card game Bridge.  Ideally I want to provide a grammar that 
closely resembles how the rule are written:

e.g.

Category - Openings
1C 11+HCP 4+C ->1CResp
1D 11+HCP 4+D ->1DResp

Category - 1CResp
1D 6-10HCP 4D

The key problem I have with this approach is that the meaning of a token 
is different dependant on it's location.  e.g.  The 4D token would be a 
bid if it was at the start of the line, but otherwise it would mean a 
hand with 4 cards that were diamonds.

Having played with ANTLR I'm not sure that this is possible and is 
probably against the spirit of a well constructed grammar. 

An alternate approach would be the following but this is less user friendly

Category - Openings
1C HCP(11+) C(4+) ->1CResp
1D HCP(11+) D(4+) ->1DResp

Category - 1CResp
1D HCP(6-10) 4D

Before I move to the above I just wanted to check that there isn't a way 
to make this work.  e.g. Could I pre-parse and create an intermediate 
state that could be more easily parsed.

Thanks,

John



From antlr at mirality.co.nz  Mon Apr  2 13:29:02 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 03 Apr 2007 08:29:02 +1200
Subject: [antlr-interest] Newbie Parser/Lexer question
In-Reply-To: <46115DA5.7060408@btinternet.com>
References: <46115DA5.7060408@btinternet.com>
Message-ID: <20070402202917.349611907F8@www.antlr.org>

At 07:46 3/04/2007, John Howard wrote:
 >I am trying to develop a grammar for a description of a bidding
 >system for the card game Bridge.  Ideally I want to provide a
 >grammar that closely resembles how the rule are written:
 >
 >e.g.
 >
 >Category - Openings
 >1C 11+HCP 4+C ->1CResp
 >1D 11+HCP 4+D ->1DResp
 >
 >Category - 1CResp
 >1D 6-10HCP 4D
 >
 >The key problem I have with this approach is that the meaning of 
a
 >token is different dependant on it's location.  e.g.  The 4D 
token
 >would be a bid if it was at the start of the line, but otherwise 
it
 >would mean a hand with 4 cards that were diamonds.

Tokens don't necessarily have to be assigned meaning.  In your 
case it might be easier to have very basic tokens (eg. NUMBER and 
LETTERS) and work everything else out in the parser, where you've 
got contextual information.  You might have to use semantic 
predicates in a couple of places, though, if your context allows a 
specific subset of numbers or letters rather than accepting 
anything.

Although (not being familiar with bridge), is the 1C at the start 
(the bid) also representing "one diamond", or is it a different 
D?  If so, then you could make a combined token (CARDSET or 
something).  Though that would end up comprising most of the 
lexing output, from the looks of things.


From mblp at mega.ist.utl.pt  Mon Apr  2 13:51:02 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Mon, 2 Apr 2007 21:51:02 +0100
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
Message-ID: <ab0bf2c00704021351l1441aadfsdd45f32b73373e15@mail.gmail.com>

My .2? is "go for it".I guess the 1.5 vm should have some neat
improvements over 1.4, like reduced memory footprint, faster runtime
and faster startup.
BTW, is it hard to change the java template to take use generics? Or
one must rewrite some antlr internal stuff? I think generics could be
useful in some exposed parts of antlr, like in tree nodes for
instance. I have this:

public class SQLTreeAdaptor extends CommonTreeAdaptor {
	public Object create(Token payload) {
		return new SQLTree(payload);
	}
}

But I would like this:
public class SQLTreeAdaptor extends CommonTreeAdaptor<SQLTree> {
	public SQLTreecreate(Token payload) {
		return new SQLTree(payload);
	}
}

where CommonTree adaptor is a class<T extends CommonTree>.
and with some work I would get rid of this cast:

grammar.setTreeAdaptor(new SQLTreeAdaptor());
SQLParser.startRule_return retTree = grammar.startRule();
SQLTree tree = (SQLTree) retTree.getTree(); //dummy cast

Tks in advance,
Miguel Ping

On 4/2/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi,
>
> I'm thinking of using generics for ANTLR internals.  The generated
> code will be 1.4 compatible, but the version number will be wrong for
> VM.  So, probably still 1.5 would be required to run antlr.  Do I
> need to keep 1.4 compatible or is it ok to go to 1.5 nowadays do you
> think?
>
> For now, i can keep the runtime 1.4 compatible, however.
>
> Thanks,
> Ter
>

From antlr at mirality.co.nz  Tue Apr  3 02:31:32 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 03 Apr 2007 21:31:32 +1200
Subject: [antlr-interest] Ambiguous tokens
Message-ID: <20070403093144.E6C1819078B@www.antlr.org>

I've just been pondering an ambiguity problem I've been having in 
the lexer I'm working on, and an idea occurred to me.  How 
feasible would it be to add support for specifically ambiguous 
lexer tokens to ANTLR?

What I mean by that is when there are several top-level lexer 
rules that could match a given bit of text equally well, rather 
than choosing one of them and going with that, it would be helpful 
to generate a token for *all* the types.

For example, the snippet "34" could be either a Decimal or a 
HexByte, and "D2" could be a HexByte or an Identifier.  The lexer 
can't really tell; the parser needs to decide based on surrounding 
context.

Of course this could get tricky if the tokens could be different 
lengths -- I doubt that'd really work.  In this example, HexByte 
is really the only ambiguous one -- sometimes it looks like a 
Decimal, sometimes like an Identifier, but it is always exactly 
two characters long (meaning shorter or longer blocks can't be 
HexBytes), and Decimals and Identifiers themselves don't overlap.

The current workaround (I think -- I haven't actually tried it 
yet, so improvements would be appreciated) would be to generate 
yet another token for each of the intersection cases (eg. 
HexByteOrDecimal, HexByteOrIdentifier) and get the grammar to 
accept both where it normally accepts the basic token.  But it 
would be nice if there was some more automatic way of expressing 
this sort of relationship.


From regis at lebrette.net  Tue Apr  3 02:59:06 2007
From: regis at lebrette.net (=?ISO-8859-1?Q?R=E9gis_Le_Brettevillois?=)
Date: Tue, 3 Apr 2007 11:59:06 +0200 (CEST)
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <mailman.415.1175592706.1993.antlr-interest@antlr.org>
Message-ID: <12069077.21175594346125.JavaMail.SYSTEM@paradise>

Hi,

I'm thinking of using generics for ANTLR internals.  The generated  
code will be 1.4 compatible, but the version number will be wrong for  
VM.  So, probably still 1.5 would be required to run antlr.  Do I  
need to keep 1.4 compatible or is it ok to go to 1.5 nowadays do you  
think?

For now, i can keep the runtime 1.4 compatible, however.

Thanks,
Ter

It's ok for me, it makes code cleaner. At our side we even currently use 1.5 in the generated grammars. We make them backward compatible by using RetroTranslator.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/3e679db6/attachment.html 

From jameselliot at gmail.com  Tue Apr  3 04:05:20 2007
From: jameselliot at gmail.com (James)
Date: Tue, 3 Apr 2007 12:05:20 +0100
Subject: [antlr-interest] Antlr Token Issue
Message-ID: <e25ae93e0704030405y2631f537r127fd82c50302cd4@mail.gmail.com>

Hi,

I am having a problem with keywords being extracted to tokens and then
matching against more general requirements.

Is there a simple way to stop this in my grammar or do I need to reconsider
my rules?


An example grammar is:

=====================================================
grammar expr;
options {
    k=2;
    backtrack=true;
    memoize=true;
}

@header {
    package tests;
}

@lexer::header {
    package tests;
}

aprog    :    (WS | anitem)+
    ;
anitem    :     'hello' EQUALS QUOTE CHARS QUOTE
        {
            System.out.println("Have quoted text :  " + $CHARS.text);
        }
    ;
CHARS     :     ('a'..'z'|'A'..'Z')+
    ;
QUOTE    :    '"'
    ;
EQUALS    :    '='
    ;
WS    :    (' ' | '\t' | '\n') +
    ;
=========================================================================

A test class is:
========================================================================
package tests;

import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CommonTokenStream;

public class DoTest {

    public static void main(String[] args) throws Throwable {
        if (args.length == 0) {
            System.out.println("Please provide input on command line");
        }
        else {
            exprLexer l = new exprLexer(new ANTLRStringStream(args[0]));
            CommonTokenStream tokens = new CommonTokenStream();
            tokens.setTokenSource(l);
            exprParser p = new exprParser(tokens);


            p.aprog();
        }
    }
}

========================================================================
Sample usage is:
========================================================================

$ java tests.DoTest "hello=\"there\""

Have quoted text :  there

$ java tests.DoTest "hello=\"hello\""

line 1:7 mismatched input 'hello' expecting CHARS
line 1:12 mismatched input '"' expecting EQUALS
line 0:-1 mismatched input '<EOF>' expecting CHARS

========================================================================

I am guessing that the second "hello" is matched by the tokenizer as type
HELLO.  Can I tell the tokenizer not to do this?
Or is there a simple way to refactor this?

Thank you,

James.

(All files attached).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/e4a82410/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: DoTest.java
Type: text/x-java
Size: 509 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/e4a82410/attachment.bin 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: expr.g
Type: application/octet-stream
Size: 377 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/e4a82410/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build.xml
Type: text/xml
Size: 436 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/e4a82410/attachment.xml 

From davec at postgresintl.com  Tue Apr  3 05:51:29 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Tue, 3 Apr 2007 08:51:29 -0400
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
Message-ID: <A2A43454-8980-4A62-A581-9DC127C6A75B@postgresintl.com>


On 2-Apr-07, at 3:26 PM, Terence Parr wrote:

> Hi,
>
> I'm thinking of using generics for ANTLR internals.  The generated  
> code will be 1.4 compatible, but the version number will be wrong  
> for VM.  So, probably still 1.5 would be required to run antlr.  Do  
> I need to keep 1.4 compatible or is it ok to go to 1.5 nowadays do  
> you think?
>
> For now, i can keep the runtime 1.4 compatible, however.

I definitely need the runtime 1.4 compatible. My target is an  
embedded arm which doesn't run 1.5

>
> Thanks,
> Ter


From deepsky99 at gmail.com  Tue Apr  3 06:59:05 2007
From: deepsky99 at gmail.com (deepsky99)
Date: Tue, 3 Apr 2007 08:59:05 -0500
Subject: [antlr-interest] Questions on conversion to ANTLR
Message-ID: <7ed46e460704030659pfaef8ei884317899ddec51b@mail.gmail.com>

I have been playing wiht ANTLR 3, and have the beta version of Terrence's
book, which is really good by the way.

I am thinking of converting some old YACC/FLEX stuff over, and have a
question on start states.  We have a package that converts COBOL copybook
definitions into a XML structure for importing into java code, and it makes
heavy use of start states.  We use this to basically turn LEXER rules on and
off.  I see no start states in ANTLR, but I'm sure there is a way to
accomplish the same thing.  Can anyone point me in the right direction?

Is there a way to have a lexer rule return a different token type based upon
its context?

The main reason is some keywords are only keywords at certain times.  I cant
seem to get the grammar to distinguish between it being an ID and a
Keyword.  in certain places in the data anything I want any token to be an
ID, no matter what it is.  Exclusive start states in lex allowed that.
There was an entry in the Wiki that showed an example :

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741

I didn't have much success at that
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/1b7bfa71/attachment.html 

From jaluber at gmx.de  Tue Apr  3 07:57:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Apr 2007 16:57:57 +0200
Subject: [antlr-interest] Java doesn't find class definition
Message-ID: <46126B75.2080401@gmx.de>

Hello,

whenever I want to start a test program via "java Test" or similar on
the command line, java complains: "Exception in thread "main"
java.lang.NoClassDefFoundError: Test".

I can get the ANTLR tools running and in Eclipse I can start those
programs, too, but for whatever reason it doesn't work on the command
line. As Eclipse doesn't compile some projects because it believes that
a class doesn't have all referenced members, I have to compile those
files on the command line - without problems. But switching back and
forth isn't improving my productivity and getting on my nerves. I'm open
for suggestions how to fix the situation. I'm running Windows XP and the
following JRE:

"java version "1.6.0"
Java(TM) SE Runtime Environment (build 1.6.0-b105)
Java HotSpot(TM) Client VM (build 1.6.0-b105, mixed mode)"

The ANTLR libs are in the classpath which the ANTLR tools can access. So
I don't believe that the problem lies in there. If additional
information is required simply ask me.

Thanks in advance,
Johannes Luber

From mblp at mega.ist.utl.pt  Tue Apr  3 08:55:20 2007
From: mblp at mega.ist.utl.pt (mblp at mega.ist.utl.pt)
Date: Tue, 3 Apr 2007 16:55:20 +0100
Subject: [antlr-interest] Java doesn't find class definition
In-Reply-To: <46126B75.2080401@gmx.de>
References: <46126B75.2080401@gmx.de>
Message-ID: <ab0bf2c00704030855k675eafd4h2487f04e05fd87bb@mail.gmail.com>

As for eclipse, all required classes should be on the project's build
path - this includes jars also, as well as a JDK. You must've ment
that eclipse doesn't run the Test class, no?

As for "java Test", that only works if you are in your project's bin
directory (the dir with the .class files), and you do not use jars,
which of course you should use, if you are using antlr.

you should type "java -classpath
path/to/build/dir;path/to/jar1.jar;path/to/jar2.jar;... Test
the java command should know where are the .class files(wheter in a
dir or in a jar) that it should search in order to run things; that's
why you need to pass all referenced jars to classpath parameter.

Do you know the ant tool? http://ant.apache.org/ it really helps to
automate build processes.

Miguel Ping

On 4/3/07, Johannes Luber <jaluber at gmx.de> wrote:
> Hello,
>
> whenever I want to start a test program via "java Test" or similar on
> the command line, java complains: "Exception in thread "main"
> java.lang.NoClassDefFoundError: Test".
>
> I can get the ANTLR tools running and in Eclipse I can start those
> programs, too, but for whatever reason it doesn't work on the command
> line. As Eclipse doesn't compile some projects because it believes that
> a class doesn't have all referenced members, I have to compile those
> files on the command line - without problems. But switching back and
> forth isn't improving my productivity and getting on my nerves. I'm open
> for suggestions how to fix the situation. I'm running Windows XP and the
> following JRE:
>
> "java version "1.6.0"
> Java(TM) SE Runtime Environment (build 1.6.0-b105)
> Java HotSpot(TM) Client VM (build 1.6.0-b105, mixed mode)"
>
> The ANTLR libs are in the classpath which the ANTLR tools can access. So
> I don't believe that the problem lies in there. If additional
> information is required simply ask me.
>
> Thanks in advance,
> Johannes Luber
>

From bryce.alcock at sungard.com  Tue Apr  3 09:57:54 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Tue, 3 Apr 2007 11:57:54 -0500
Subject: [antlr-interest] += Output Option clarification
Message-ID: <OF51EA74AB.80B355DF-ON862572B2.005C9CC0-052572B2.005D3A36@sungard.com>

I get the following error in my TreeWalker Grammar file:

error(134): ExprWalker.g:43:14: rule '+=' list labels are not allowed w/o 
output option: lids

I noticed the release notes state the following:
-----------------------------------------------------------------------------------------------
>From the Antlr v3 early access release notes at:
http://www.antlr.org/v3/README.txt

January 1, 2007

* += labels for rules only work for output option; previously elements
  of list were the return value structs, but are now either the tree or
  StringTemplate return value.  You can label different rules now
  x+=a x+=b.
------------------------------------------------------------------------------------------------



Here is what i am trying to do:

compoundExpr returns [int value] :
        ^(COMPOUND (lids+=condExpr)+ )
        { 
                             ..........
                };



Can I get some clarification or direction about what I should try to do 
in this situation.


Thanks in advance
Bryce
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/fbfe6c56/attachment-0001.html 

From amohombe at yahoo.com  Tue Apr  3 10:20:10 2007
From: amohombe at yahoo.com (Ahmed Mohombe)
Date: Tue, 03 Apr 2007 19:20:10 +0200
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
Message-ID: <euu2cb$bue$1@sea.gmane.org>

> I'm thinking of using generics for ANTLR internals.  The generated code 
> will be 1.4 compatible, but the version number will be wrong for VM.  
> So, probably still 1.5 would be required to run antlr.  Do I need to 
> keep 1.4 compatible or is it ok to go to 1.5 nowadays do you think?
IMHO it's OK to go with 1.5.

There are tools to convert to 1.4.

Ahmed.



From jimi at temporal-wave.com  Tue Apr  3 10:57:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 10:57:03 -0700
Subject: [antlr-interest] @init actions in "C Target " have problems
	with MSVS compilers
In-Reply-To: <20070323083705.B8B261907D5@www.antlr.org>
References: <b653a8b20703220634i13b4eba3n3f75728e49ab513b@mail.gmail.com><4602d5f1.2bfba7b6.0649.78a9SMTPIN_ADDED@mx.google.com><b653a8b20703222140m5d217386oc2a191cb46aa4a18@mail.gmail.com><FC9ED3F2-FCD8-4B8C-BA30-B9742E144B8F@gmx.de><b653a8b20703230125u52cb1b2cp632dc3e34322e7e3@mail.gmail.com>
	<20070323083705.B8B261907D5@www.antlr.org>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522BD@wavemachine.temporal-wave.com>

I will look at why that is - perhaps I am missing a template, but I
thought that this was all up to date so it must be something trivial.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Friday, March 23, 2007 1:37 AM
To: Alexander Stasenko; Tobias Pape
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] @init actions in "C Target " have problems
with MSVS compilers

At 20:25 23/03/2007, Alexander Stasenko wrote:
 >No, in "C target" it is "_channel" and to my knowledge HIDDEN
 >macro (or something similar) is not defined.

Actually the latest versions accept $channel as well.  But still 
not HIDDEN (you need to use 99 for the moment instead).


From jimi at temporal-wave.com  Tue Apr  3 11:10:04 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 11:10:04 -0700
Subject: [antlr-interest] fragments..
In-Reply-To: <B1A81012-1F81-415A-BB6D-8B114814F3BB@gmx.de>
References: <B1A81012-1F81-415A-BB6D-8B114814F3BB@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522BE@wavemachine.temporal-wave.com>

Tobais,

Why are you doing:

	 // THIS IS A DIRTY HACK!
	 #define toString(A,B) toStringTT(theInput(),(A),(B))

?


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tobias Pape


Consider the following Grammar:

----in the Parser ----
// Grammar productions
classdef returns [ pASTClass c ]
   @init {
	 // seems to be buggy in \$label.text implementation
	 // THIS IS A DIRTY HACK!
	 #define toString(A,B) toStringTT(theInput(),(A),(B))
	}

From jimi at temporal-wave.com  Tue Apr  3 11:49:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 11:49:09 -0700
Subject: [antlr-interest] C++ code target
In-Reply-To: <01cd01c773e5$3d667ba0$b83372e0$@com>
References: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com><bc607a4e0703260116o3adc75ckbe02ec579b7991ed@mail.gmail.com>
	<01cd01c773e5$3d667ba0$b83372e0$@com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522BF@wavemachine.temporal-wave.com>

What the C implementation does is deal with everything internally a
UTF-32, you can then supply an input stream that provides each character
as a 32 bit value, regardless of the input encoding (which the input
stream is responsible for dealing with). Because all the library code
then deal with 32 bit characters regardless of the input stream, there
is no need for anything to know about the size of th incoming characters
except the input stream itself, which may need to know how to rest to a
specific character offset etc. The advantage is that there is little if
any overhead. The token stream holds offsets that the input stream knows
how to convert to 'strings' if they are referenced. There is currently
support for latin-1 and UTF-16 (UCS2 I suppose) input streams and string
manipulations for both (which will probably be easier to handle in C++ I
suspect ;-).

If you really need a C++ interface and cannot wait for Ric's
implementation, then you could use the C output and create a wrapper
class for it? I was thinking of adding this to the output for C anyway
in fact so that you could include the header and it would be a class
definition if asked for.

Ter - perhaps we can consider that ability for a target to define
multiple output files (call lots of templates like headerfile() with the
same input as headerfile/outputfile ?). This would make it a bit neater
to generate a COM interface for instance - however it can all be done in
the same header file in the end of course, with # define.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Don Caton
Sent: Saturday, March 31, 2007 3:38 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C++ code target

> fashion. Currently I intend to drop unicode support for now and first
> get a 8 bit version out.

Ric:

Please don't do that.  One of the biggest limitations in Antlr 2 is the
lack
of proper Unicode support.  

Why should the code have any dependence on the size of a character?
Please
don't make the same mistake in 3.0.  The lexer class should be a
template
class that takes the size of a character as a template parameter.  Then
there will be no need to go back and make another version for Unicode.
It
should not make any difference whether you are parsing 8 bit characters
or
16 bit characters or characters of any arbitrary length.




From jimi at temporal-wave.com  Tue Apr  3 11:54:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 11:54:09 -0700
Subject: [antlr-interest] Manipulating lexer text output
In-Reply-To: <20070331232629.38AEC190750@www.antlr.org>
References: <20070331232629.38AEC190750@www.antlr.org>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522C0@wavemachine.temporal-wave.com>

Yeah - this has come up a lot and really the solution at the moment is
to do this in the parser. However you could at least do this in the
STRING rule with a call to a small function that removed this stuff and
then emit the token with the result as the text.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Saturday, March 31, 2007 4:26 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Manipulating lexer text output

Ok, next question :)

Is there some way for a lexer rule to manipulate the output text 
of the lexer token, when it's not the rule responsible for 
generating that token?  (I'm using the C language target, if that 
makes a difference.)

For example, imagine this grammar fragment:

fragment
EscapeSequence
   : '\\'
     (  '\\'
     |  'n'
     |  ('\r' | '\n') WS?
     )
   ;
STRING
   : '"' (~('"' | '\\') | EscapeSequence)* '"'
   ;

This works as is, but the result is identical to the source text, 
including all escape sequences and quotes.  What I'd like to have 
instead is the semantic equivalent -- ie. output a STRING token 
where the quotes are removed and the escape sequences have been 
resolved, ie. \\ is converted to a single backslash, \n to a real 
newline character, and the final alt's text is removed entirely 
(that's a line-folding escape).  This means that parsing only has 
to be done once, instead of having to reparse the token text 
outside of ANTLR.

Rewriting rules sound like the sort of thing that would help here, 
but they don't seem to work in the lexer.  And I tried calling 
emitNew from the subrule, but that resulted in replacing the 
entire string, not just the substring matched by the 
subtoken.  Any ideas?


From jimi at temporal-wave.com  Tue Apr  3 11:59:40 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 11:59:40 -0700
Subject: [antlr-interest] C-Target $label.text / toString malfunction
In-Reply-To: <D8C67A19-FE11-4DDE-9BC2-B80737277269@gmx.de>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de><CD674FC7-2F52-49EC-BC05-BF1F8BF94734@gmx.de>
	<D8C67A19-FE11-4DDE-9BC2-B80737277269@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522C1@wavemachine.temporal-wave.com>

Yeah - although it looks simple, and is once you know what to type in
there ;-), there can be lots of unexpected side effects. Perhaps you can
tell me offline why you thought (and may indeed have found some error of
course) that you needed to patch the toString() call?

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Tobias Pape
Sent: Monday, April 02, 2007 1:28 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C-Target $label.text / toString
malfunction


Am 2007-04-02 um 05:33 schrieb Tobias Pape:

>
> As you see, I already insertet a "Differ" rule, because my <> wasn't 
> matched as OperatorSequence.
> Another Example was, that "error:", which  should be a "Keyword"  
> was matched as "Identifier"
> (discarding the : in the parser an generating errors then xD).
>
> in the "orginal" v2-Grammar, there was lot of ( .. )=>, which i 
> removed after Gavin Lamberts 
> suggest:<D1C0EC74-2D50-4E28-B9EE-1A00916D9404 at gmx.de>
>


arg, memo to myself: don't patch too much in the C.stg -.-

apology, apology,
	-Tobias


From jimi at temporal-wave.com  Tue Apr  3 12:29:45 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 12:29:45 -0700
Subject: [antlr-interest] C-Target $label.text / toString malfunction
In-Reply-To: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522C3@wavemachine.temporal-wave.com>

OK - I see what you are getting at - should be an easy fix (I think) -
have to give me a few days though as I just got back from vacation and
have lots of things piled up.

Jim

-----Original Message-----
From: Tobias Pape [mailto:Das.Linux at gmx.de] 
Sent: Saturday, March 31, 2007 9:26 AM
To: antlr-interest at antlr.org
Cc: Jim Idle
Subject: C-Target $label.text / toString malfunction

Hi guys, hi Jim in particular.


I've recently got a nasty behavoir in my generated Lexer/Parser.

example grammar snippet:
==============================================
unaryPattern returns [ pASTPattern p ]
   : s=unarySelector
     { $p = (pASTPattern) ASTUnaryPattern_new((char *) $s.text-
>chars); }
   ;

binaryPattern returns [ pASTPattern p  ]
   : s=binarySelector v=argument
     { $p = (pASTPattern) ASTBinaryPattern_new((char *) $s.text-
>chars, v.v); }
   ;

keywordPattern returns [ pASTKeywordPattern p ]
   : (s=keyword v=argument {
   	$p = ASTKeywordPattern_new();
   	$p->add_argument($p,(char *)  $s.text->chars, v.v);
   } )+
   ;
==============================================

as you see, i reference the s-label (as suggested to me by Jim) to then
get the chars out of it.

At this point, i have particular serious problems:
 >>
 >> warning: passing argument 1 of 'ctx->pParser->tstream->toString'  
from incompatible pointer type
 >>
I looked into the code and found:
==============================================
            	            /* End: ruleRef
(rule,label,elementIndex,args) */
             	            if ( backtracking == 0 )
             	            {
             	
             	                  	retval.p=
ASTKeywordPattern_new();
             	                  	retval.p->add_argument(retval.p,
(char *)  strStream->toString(s.start,s.stop)->chars, v.v);
             	
             	            }
==============================================

as you see, it's from the keywordPattern-rule.
the problem is, as of b6/b7 (which I tried) one can't call toString like
this.
I found some toString functions in the antlr3tokenstream,h connected to
what strStream should return:
==============================================
    /** Return the text of all the tokens in the stream, as the old
tramp in
      *  Leeds market used to say; "Get the lot!"
      */
     pANTLR3_STRING	    (*toString)		(struct  
ANTLR3_TOKEN_STREAM_struct * tokenStream);

     /** Return the text of all tokens from start to stop, inclusive.
      *  If the stream does not buffer all the tokens then it can just
      *  return an empty ANTLR3_STRING or NULL;  Grammars should not
access $ruleLabel.text in
      *  an action in that case.
      */
     pANTLR3_STRING	    (*toStringSS)	(struct  
ANTLR3_TOKEN_STREAM_struct * tokenStream, ANTLR3_UINT64 start,
ANTLR3_UINT64 stop);

     /** Because the user is not required to use a token with an index
stored
      *  in it, we must provide a means for two token objects themselves
to
      *  indicate the start/end location.  Most often this will just
delegate
      *  to the other toString(int,int).  This is also parallel with
      *  the pTREENODE_STREAM->toString(Object,Object).
      */
     pANTLR3_STRING	    (*toStringTT)	(struct  
ANTLR3_TOKEN_STREAM_struct * tokenStream, pANTLR3_COMMON_TOKEN start,
pANTLR3_COMMON_TOKEN stop);

==============================================



therefore I included
==============================================
	 //seems to be buggy in \$label.text implementation
	 //THIS IS A DIRTY HACK!
	 #define toString(A,B) toStringTT(strStream,(A),(B))
==============================================

into the @init block of my first parser rule, but later patched the
C.stg to say ==============================================
<else>
strStream->toStringSS(strStream,(ANTLR3_INT32)(<scope>.start-
 >getTokenIndex(<scope>.start)),(ANTLR3_INT32)(<scope>.stop-
 >getTokenIndex(<scope>.stop)))
<endif>
==============================================
instead of
==============================================
<else>
strStream->toString(<scope>.start,<scope>.stop)
<endif>
==============================================


this maked my Source compile, but nasty, nasty, now _every_ reference in
the form of $label.text (irrespective of the label) turns out to be the
same string (i.e. for me, the Text of the first non-hidden Token).

can somebody try to reproduce or tell me, where im wrong?
I suspect this a bug in either the C.stg or in the libantlr3c (or both).

thaks for listening to me,
have a nice Sunday,
	-Tobias









From fowler at acm.org  Tue Apr  3 13:38:45 2007
From: fowler at acm.org (Martin Fowler)
Date: Tue, 03 Apr 2007 16:38:45 -0400
Subject: [antlr-interest] Unable to find generated parser: "cannot find
	symbol"
Message-ID: <4612BB55.2040909@acm.org>

Actually this isn't a question, since I found the source of my stupidity 
myself. I just I'd post it here so that Google might help out some other 
poor sap who blunders around as much as I do.

I wrote a grammar and generated the resulting parser file with 
everything fine. I then tried to use the parser from Java. IntelliJ 
would give me the pop up for the generated class, but once I accepted it 
, the new text went red. Compilation failed with the message "cannot 
find symbol" and the name of my generated class. I tried javac, thinking 
it might be an intellij problem, still wouldn't compile. I did a clean 
gen and compile with ant - still couldn't find the symbol. I checked the 
generated file and it had generated the source file in the correct 
place. Other generated items in the same location worked just fine.

For those who haven't got it yet - I forgot to put the package 
declaration in the header of the grammar file.

(Of course javac could have said something more helpful....)
-- 
Martin Fowler
http://martinfowler.com

From antlr at mirality.co.nz  Tue Apr  3 14:00:10 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Apr 2007 09:00:10 +1200
Subject: [antlr-interest] Manipulating lexer text output
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362522C0@wavemachine.tempora
	l-wave.com>
References: <20070331232629.38AEC190750@www.antlr.org>
	<B36CCC332A32904F8FA3DE134A2353362522C0@wavemachine.temporal-wave.com>
Message-ID: <20070403210023.C22431907E4@www.antlr.org>

At 06:54 4/04/2007, Jim Idle wrote:
 >Yeah - this has come up a lot and really the solution at the 
moment
 >is to do this in the parser. However you could at least do this 
in
 >the STRING rule with a call to a small function that removed 
this stuff
 >and then emit the token with the result as the text.

That'd still require double-parsing the input though (once via 
ANTLR's normal processing, and once after the fact to resolve 
escape sequences).  Which makes it no better than doing it outside 
ANTLR entirely.


From antlr at mirality.co.nz  Tue Apr  3 14:06:28 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Apr 2007 09:06:28 +1200
Subject: [antlr-interest] += Output Option clarification
In-Reply-To: <OF51EA74AB.80B355DF-ON862572B2.005C9CC0-052572B2.005D3A36@
	sungard.com>
References: <OF51EA74AB.80B355DF-ON862572B2.005C9CC0-052572B2.005D3A36@sungard.com>
Message-ID: <20070403210643.ECA5D1907EA@www.antlr.org>

At 04:57 4/04/2007, bryce.alcock at sungard.com wrote:

>I get the following error in my TreeWalker Grammar file:
>
>error(134): ExprWalker.g:43:14: rule '+=' list labels are not 
>allowed w/o output option: lids
[...]
>Can I get some clarification or direction about what I should try 
>to do
>in this situation.

I think it means you need to put this at the top of your grammar 
(assuming you are generating StringTemplate-based output, of 
course):

options {
   output = template;
}


From antlr at mirality.co.nz  Tue Apr  3 14:07:35 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Apr 2007 09:07:35 +1200
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <A2A43454-8980-4A62-A581-9DC127C6A75B@postgresintl.com>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
	<A2A43454-8980-4A62-A581-9DC127C6A75B@postgresintl.com>
Message-ID: <20070403210747.DB2301907EA@www.antlr.org>

At 00:51 4/04/2007, Dave Cramer wrote:
 >I definitely need the runtime 1.4 compatible. My target is an
 >embedded arm which doesn't run 1.5

I'm surprised you're not using the C target for an embedded 
system.  It ought to end up smaller :)


From jimi at temporal-wave.com  Tue Apr  3 14:37:45 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Apr 2007 14:37:45 -0700
Subject: [antlr-interest] Manipulating lexer text output
In-Reply-To: <WAVEMACHINERGryWtII00000056@wavemachine.temporal-wave.com>
References: <20070331232629.38AEC190750@www.antlr.org>
	<B36CCC332A32904F8FA3DE134A2353362522C0@wavemachine.temporal-wave.com>
	<WAVEMACHINERGryWtII00000056@wavemachine.temporal-wave.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522C4@wavemachine.temporal-wave.com>

Well, perhaps, but the lexer is just looking at one character at a time
anyway and does not produce a string with that stuff in it unless you
ask for it - if you don't then you just get a token that says where the
start and stop is. So it isn't overly inefficient and if you set the
text explicitly then there is probably little difference in execution
time.

Jim



-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Tuesday, April 03, 2007 2:00 PM
To: Jim Idle; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Manipulating lexer text output

At 06:54 4/04/2007, Jim Idle wrote:
 >Yeah - this has come up a lot and really the solution at the 
moment
 >is to do this in the parser. However you could at least do this 
in
 >the STRING rule with a call to a small function that removed 
this stuff
 >and then emit the token with the result as the text.

That'd still require double-parsing the input though (once via 
ANTLR's normal processing, and once after the fact to resolve 
escape sequences).  Which makes it no better than doing it outside 
ANTLR entirely.


From bryce.alcock at sungard.com  Tue Apr  3 15:10:58 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Tue, 3 Apr 2007 17:10:58 -0500
Subject: [antlr-interest] += Output Option clarification
In-Reply-To: <20070403210645.AAD54CE8063@mail94-blu.bigfish.com>
Message-ID: <OF8576F3D7.D43047F1-ON862572B2.0078E5CA-052572B2.0079E3DC@sungard.com>

To the best of my knowledge I am not using that.
I have the following  in my options section:
tree grammar ExprWalker;// START:stat 
options {
        tokenVocab=Expr;
        ASTLabelType=CommonTree;
        }



I changed it to the following:  (I Have Included the code of what I am 
trying to do....)
// START:expr 
compoundExpr returns [int value, List lim] :
    ^(COMPOUND (lids+=condExpr)+ )
    { 
        java.util.Iterator iter = $lids.iterator();
        boolean hasException = false;
        while(iter.hasNext()){
            Integer nextVal = (Integer)iter.next();
            if(nextVal.intValue() == FALSE){
                hasException=true;
            }
        }
        if(hasException){
            $value=TRUE;
        }else{
            $value=FALSE;
        }
    }
;


And it KINDA works with 1 PROBLEM,
every time after I generate the Tree walker file, I have to go in and 
change

 RuleReturnScope lids = null;
to
 Integer lids = null;
 
in a method called:
 public compoundExpr_return compoundExpr() throws RecognitionException {

Otherwise it is working.
Is there some way I could fix this so that I don't have to keep doing 
that.

BTW the line that was causing the java compile error is:
lids=condExpr();

and the Compile Error is :
Compiling 1 source file to /home/balcock/projects/build/classes
/home/balcock/projects/src/com/sungard/sims/[package 
path....]/ExprWalker.java:225: incompatible types
found   : java.lang.Integer
required: org.antlr.runtime.RuleReturnScope
                    lids=condExpr(); 


At 04:57 4/04/2007, bryce.alcock at sungard.com wrote:

>I get the following error in my TreeWalker Grammar file:
>
>error(134): ExprWalker.g:43:14: rule '+=' list labels are not 
>allowed w/o output option: lids
[...]
>Can I get some clarification or direction about what I should try 
>to do
>in this situation.

I think it means you need to put this at the top of your grammar 
(assuming you are generating StringTemplate-based output, of 
course):

options {
   output = template;
}




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070403/d943d24d/attachment-0001.html 

From parrt at cs.usfca.edu  Tue Apr  3 18:29:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 Apr 2007 18:29:35 -0700
Subject: [antlr-interest] += Output Option clarification
In-Reply-To: <OF51EA74AB.80B355DF-ON862572B2.005C9CC0-052572B2.005D3A36@sungard.com>
References: <OF51EA74AB.80B355DF-ON862572B2.005C9CC0-052572B2.005D3A36@sungard.com>
Message-ID: <2E227598-A843-42FE-848A-20070B8316DB@cs.usfca.edu>


On Apr 3, 2007, at 9:57 AM, bryce.alcock at sungard.com wrote:

>
> I get the following error in my TreeWalker Grammar file:
>
> error(134): ExprWalker.g:43:14: rule '+=' list labels are not  
> allowed w/o output option: lids

Hi. I decided that += only makes sense to track templates or ASTs.   
If the rule returns ints, for example, should I make an int list or  
text of rule?  As it's ambig, i decided to only have it make sense  
for output option.

Ter

>
> I noticed the release notes state the following:

> Here is what i am trying to do:
>
> compoundExpr returns [int value] :
>         ^(COMPOUND (lids+=condExpr)+ )
>         {
>                              ..........
>                 };

what does condExpr return?


Ter

From davec at postgresintl.com  Tue Apr  3 19:40:22 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Tue, 3 Apr 2007 22:40:22 -0400
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <20070403211210.4CD691580612@beaver.fastcrypt.com>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
	<A2A43454-8980-4A62-A581-9DC127C6A75B@postgresintl.com>
	<20070403211210.4CD691580612@beaver.fastcrypt.com>
Message-ID: <F3469413-3299-4FCA-A9EC-CAA9A29B4996@postgresintl.com>


On 3-Apr-07, at 5:07 PM, Gavin Lambert wrote:

> At 00:51 4/04/2007, Dave Cramer wrote:
> >I definitely need the runtime 1.4 compatible. My target is an
> >embedded arm which doesn't run 1.5
>
> I'm surprised you're not using the C target for an embedded  
> system.  It ought to end up smaller :)
>
This is actually one of the attractive things about ANTLR. I have the  
flexibility to migrate there eventually, but at the moment much of  
the existing code is in java.

There's other reasons as well. Google's GWT runs on it as well as  
it's much easier to write code for network stuff.


Dave


From jameselliot at gmail.com  Wed Apr  4 00:26:17 2007
From: jameselliot at gmail.com (James)
Date: Wed, 4 Apr 2007 08:26:17 +0100
Subject: [antlr-interest] Antlr Token Issue
In-Reply-To: <e25ae93e0704030405y2631f537r127fd82c50302cd4@mail.gmail.com>
References: <e25ae93e0704030405y2631f537r127fd82c50302cd4@mail.gmail.com>
Message-ID: <e25ae93e0704040026l3a19e32ew3cb687daa03b483e@mail.gmail.com>

This was a non-determinisim issue then.  It requires me to change my grammer
so that 'hello' can only match one rule.  One way to do this would be:

=====================================================
grammar expr;
options {
    k=2;
    backtrack=true;
    memoize=true;
}

@header {
    package tests;
}

@lexer::header {
    package tests;
}

aprog    :    (WS | anitem)+
         ;
anitem   :    SM_CHARS EQUALS QUOTE CHARS QUOTE
              {
                if ($SM_CHARS.text.equals("hello")) {
                    System.out.println("Have quoted text :  " +
$CHARS.text);
                }
                else {
                    reportError("Invalid keyword \"" + $SM_CHARS.text + "\"
expecting \"hello\"");
                }
              }
         ;
CHARS    :    (SM_CHARS|CP_CHARS)+
         ;
SM_CHARS :    ('a'..'z')+
         ;
CP_CHARS :    ('A'..'Z')+
         ;
QUOTE    :    '"'
         ;
EQUALS   :    '='
         ;
WS       :    (' ' | '\t' | '\n') +
         ;
============================================================


On 4/3/07, James <jameselliot at gmail.com> wrote:
>
> Hi,
>
> I am having a problem with keywords being extracted to tokens and then
> matching against more general requirements.
>
> Is there a simple way to stop this in my grammar or do I need to
> reconsider my rules?
>
>
> An example grammar is:
>
> =====================================================
> grammar expr;
> options {
>     k=2;
>     backtrack=true;
>     memoize=true;
> }
>
> @header {
>     package tests;
> }
>
> @lexer::header {
>     package tests;
> }
>
> aprog    :    (WS | anitem)+
>     ;
> anitem    :     'hello' EQUALS QUOTE CHARS QUOTE
>         {
>             System.out.println("Have quoted text :  " + $CHARS.text);
>         }
>     ;
> CHARS     :     ('a'..'z'|'A'..'Z')+
>     ;
> QUOTE    :    '"'
>     ;
> EQUALS    :    '='
>     ;
> WS    :    (' ' | '\t' | '\n') +
>     ;
> =========================================================================
>
> A test class is:
> ========================================================================
> package tests;
>
> import org.antlr.runtime.ANTLRStringStream;
> import org.antlr.runtime.CommonTokenStream;
>
> public class DoTest {
>
>     public static void main(String[] args) throws Throwable {
>         if (args.length == 0) {
>             System.out.println("Please provide input on command line");
>         }
>         else {
>             exprLexer l = new exprLexer(new ANTLRStringStream(args[0]));
>             CommonTokenStream tokens = new CommonTokenStream();
>             tokens.setTokenSource(l);
>             exprParser p = new exprParser(tokens);
>
>
>             p.aprog();
>         }
>     }
> }
>
> ========================================================================
> Sample usage is:
> ========================================================================
>
> $ java tests.DoTest "hello=\"there\""
>
> Have quoted text :  there
>
> $ java tests.DoTest "hello=\"hello\""
>
> line 1:7 mismatched input 'hello' expecting CHARS
> line 1:12 mismatched input '"' expecting EQUALS
> line 0:-1 mismatched input '<EOF>' expecting CHARS
>
> ========================================================================
>
> I am guessing that the second "hello" is matched by the tokenizer as type
> HELLO.  Can I tell the tokenizer not to do this?
> Or is there a simple way to refactor this?
>
> Thank you,
>
> James.
>
> (All files attached).
>
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070404/8788ff4f/attachment.html 

From mail at martin-probst.com  Wed Apr  4 00:49:12 2007
From: mail at martin-probst.com (Martin Probst)
Date: Wed, 4 Apr 2007 09:49:12 +0200
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
Message-ID: <162F692B-A7A0-4144-9B62-34A53DF7902C@martin-probst.com>

> Do I need to keep 1.4 compatible or is it ok to go to 1.5 nowadays  
> do you think?

Java 1.4 must die :-)

Seriously, we have been targeting 1.4 from 1.5 sources using  
'Retroweaver' for some time, and while it was not always completely  
painless, it worked. Since like half a year we have stopped doing  
that as no one seemed to need that backwards compatibility anymore.

Regards,
Martin



From Eric.Deplagne at loria.fr  Wed Apr  4 01:04:55 2007
From: Eric.Deplagne at loria.fr (Eric Deplagne)
Date: Wed, 4 Apr 2007 10:04:55 +0200
Subject: [antlr-interest] can ANTLR tool itself use 1.5?
In-Reply-To: <162F692B-A7A0-4144-9B62-34A53DF7902C@martin-probst.com>
References: <491FF204-3856-4D07-A84C-7DEC6503F6D2@cs.usfca.edu>
	<162F692B-A7A0-4144-9B62-34A53DF7902C@martin-probst.com>
Message-ID: <20070404080455.GA9961@goldorak3.eric.deplagne.name>

On mer, 04 avr 2007 09:49:12 +0200, Martin Probst wrote:
> >Do I need to keep 1.4 compatible or is it ok to go to 1.5 nowadays  
> >do you think?
> 
> Java 1.4 must die :-)
> 
> Seriously, we have been targeting 1.4 from 1.5 sources using  
> 'Retroweaver' for some time, and while it was not always completely  
> painless, it worked. Since like half a year we have stopped doing  
> that as no one seemed to need that backwards compatibility anymore.

  I'm using Linux on a ppc box (powerbook G4), and thus can only use
  free JVM, and those are 1.4.

-- 
  Eric Deplagne
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070404/3b192c9c/attachment.bin 

From Das.Linux at gmx.de  Wed Apr  4 01:36:54 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Wed, 4 Apr 2007 10:36:54 +0200
Subject: [antlr-interest] C-Target $label.text / toString malfunction
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362522C3@wavemachine.temporal-wave.com>
References: <3D4F4785-9107-4319-ABF1-3FBECC8D5EE3@gmx.de>
	<B36CCC332A32904F8FA3DE134A2353362522C3@wavemachine.temporal-wave.com>
Message-ID: <2108775B-8C9F-4180-8FD9-2FDC70F3D942@gmx.de>

Hi Jim,

Am 2007-04-03 um 21:29 schrieb Jim Idle:
> OK - I see what you are getting at - should be an easy fix (I think) -
> have to give me a few days though as I just got back from vacation and
> have lots of things piled up.
>
> Jim


No problem. it's working with "the patch" at the moment ;)

	-Tobias
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070404/14183d1f/attachment.bin 

From antlr at mirality.co.nz  Wed Apr  4 01:43:18 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Apr 2007 20:43:18 +1200
Subject: [antlr-interest] Manipulating lexer text output
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362522C4@wavemachine.tempora
	l-wave.com>
References: <20070331232629.38AEC190750@www.antlr.org>
	<B36CCC332A32904F8FA3DE134A2353362522C0@wavemachine.temporal-wave.com>
	<WAVEMACHINERGryWtII00000056@wavemachine.temporal-wave.com>
	<B36CCC332A32904F8FA3DE134A2353362522C4@wavemachine.temporal-wave.com>
Message-ID: <20070404084331.76B931907CF@www.antlr.org>

At 09:37 4/04/2007, Jim Idle wrote:
 >Well, perhaps, but the lexer is just looking at 
one character at a
 >time anyway and does not produce a string with that stuff in it
 >unless you ask for it - if you don't then you 
just get a token that
 >says where the start and stop is. So it isn't 
overly inefficient and
 >if you set the text explicitly then there is probably little
 >difference in execution time.

Imagine the following input stream, though:

   "test\tone\u00B2\r\nline \
      two"

The result, of course, should be:
   (String test<TAB>one?<CR><LF>line two)

All the bits starting with a \ are escape 
sequences and are handled by the EscapeSequence 
rule -- the String rule itself doesn't know how 
they are structured.  At present the 
EscapeSequence rule has no means of communicating 
the "real" value of the text it has just matched 
back out to the String rule, however.  It doesn't 
generate a token, because that's optimised out 
for subrules (and if it generates one anyway then 
it replaces the entire String instead of just 
that subrule's portion of the input); the return 
type is fixed, so it can't pass additional data 
back -- there's simply nothing it can do.

What I think should happen is that if the subrule 
*does* generate a token (which will only be 
because someone explicitly wrote some code to do 
so [or put in a rewrite rule or ! operator, if 
those start working in the lexer] -- it won't be 
the common case) then the parent rule should 
detect that and stitch the result into its own customised token.

To explain that a bit more, here's a couple of 
example cases (for the sake of example though I'm 
going to assume the top-level rule doesn't want 
to strip off the surrounding quotes):

1. The simple case, where the input is something 
like "test" -- ie. no escape sequences.  The 
String rule calls the Character rule (or just 
matches characters directly), but either way, 
nothing actually generates a token, so the String 
rule doesn't need to do any extra work and 
behaves exactly as it does now -- returning a 
token with no explicit text and just start & stop 
indexes into the input stream.

2. The complex case, with input as above.  In 
this case, String should start out as before, 
tracking characters but not doing anything much 
about it.  When it calls EscapeSequence to match 
the "\t", though, that rule generates a token 
starting at the \ and stopping at the t, but with 
explicit text set to a tab character.  When 
control returns to String, it detects that a 
token was generated and then immediately 
generates one of its own (starting at the quote 
and stopping at the 't' of the tab escape in the 
input), also with explicit text, containing the 
quote, the word "test", and the tab character 
(from the subtoken).  Then it should proceed 
through the rest of the input it would normally 
match, either appending directly (and extending 
the stop point) or appending the text from the 
subtoken (or the text between the start and stop 
point for the subrule if it doesn't generate a 
token of its own).  Alternatively, if it's 
simpler or more performant, the String rule could 
just keep track of all the components and stitch 
everything together only at the end (this might 
be better if failure and backtracking is fairly 
common).  Either way, if any subrule generates 
explicit text then the parent rule will have to 
do so as well.  And in this example, it should 
finally generate a single token containing the 
explicit text shown above (though with the quotes too).

I don't think this would be too hard to 
implement, and it should still remain performant 
(because it'd only be used when explicitly 
requested by the grammar), and it'd allow a lot more flexibility.


From jaluber at gmx.de  Wed Apr  4 06:27:05 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 04 Apr 2007 15:27:05 +0200
Subject: [antlr-interest] Java doesn't find class definition
In-Reply-To: <46126EF2.7040700@relivethefuture.com>
References: <46126B75.2080401@gmx.de> <46126EF2.7040700@relivethefuture.com>
Message-ID: <4613A7A9.6030209@gmx.de>

Hello,

Sorry for the lateness, but I needed to do some additional experiments
to exclude some potential bug causes.

Martin Wood-Mitrovski wrote:
>> I can get the ANTLR tools running and in Eclipse I can start those
>> programs, too, but for whatever reason it doesn't work on the command
>> line. As Eclipse doesn't compile some projects because it believes that
>> a class doesn't have all referenced members, 
> 
> you should be able to get everything running from eclipse just fine.

Eclipse has a bug which sometimes causes it not to load all available
class definitions. A friend of mine experiences this behaviour for a
project, which works on three other machines just fine. So when this bug
appears, I have to uses the javac on the command line. Furthermore, the
examples in the Beta Book read always from System.in and I haven't found
a way to do this while running Eclipse.

> How are you generating the code from your grammar? are you using ANT ?

I use ANTLRworks for generating my grammar - but it doesn't work
strangely for the 2pass grammar from the Beta Book, when I want to
generate the tree parser. Not sure why it doesn't locate the right
tokens file, as the path copied from the error message works fine.

A bit background info regarding my project: I attempt to create a C#
parser. As the C# support is lacking, I decided to check if for my needs
a Java implementation is sufficient. Being more a C# programmer than
Java I'm not that familiar with Eclipse, so I may overlook available
options. Because I was reading the Beta Book I've decided to test the
2pass grammar, where I stumbled upon my problem. In preparation of this
email I tested my own grammar (as far I got with it). I have the same
problem there - and found at least one ANTLR bug... Arrg. The last part
of my email shows the details.

Regarding ANT: For the few files I don't need ANT, just a batch file,
as when I'll switch back to C# I can run that batch from VS2005. So it
would be more useful to me, if I could run a Java program from the
command line.

> This might be obvious but you have to manually refresh the resource
> tree after running an ANT build otherwise eclipse doesnt notice the
> changes.

In my case it didn't help. The ExprLexer class inherits ruleNestingLevel
from Lexer, but Eclipse doesn't find it. And if Eclipse doesn't find it,
the file won't be compiled in Eclipse. In such cases it looks easier to
compile the files on the command line, too.

Regarding the ANTLR bugs mentioned above: The generated file creates
three errors. I've used the most recent build of March 30th for ANTLR to
generate the file.

The rule

NEW_LINE
	:	'\u000D' // Carriage return character
	|	'\u000A' // Line feed character
	|	'\u000D\u000A' // Carriage return character followed by line feed
character
	|	'\u0085' // Next line character
	|	'\u2028' // Line separator character
	|	'\u2029' // Paragraph separator character
	;

generates for the '\r\n'/'\u000D\u000A' alternative:

                case 3 :
                    //
D:\\Studium\\Diplomarbeit\\CSharpML\\CSharp3.g:65:4: '\\u000D\\u000A'
                    {
                    match("\u000D\u000A");
                    }
		    break;

I receive two errors from javac:

"CSharp3Lexer.java:1485: unclosed string literal
                    match("\u000D\u000A");
                          ^
CSharp3Lexer.java:1485: unclosed string literal
                    match("\u000D\u000A");
                                       ^"

Can't one use unicode escape sequences in a string? Or do I have to use
a workaround for the alternative like '\u000D' '\u000A' or '\r\n' or
'\r' '\n'?

The last error is for the rule

SIMPLE_ESCAPE_SEQUENCE
	:	'\\\''
	|	'\\\"'
	|	'\\\\'
	|	'\\0'
	|	'\\a'
	|	'\\b'
	|	'\\f'
	|	'\\n'
	|	'\\r'
	|	'\\t'
	|	'\\v'
	;

This is the generated code for '\\\"':

                case 2 :
                    //
D:\\Studium\\Diplomarbeit\\CSharpML\\CSharp3.g:507:4: '\\\\\\\"'
                    {
                    match("\\\\"");

For whatever reason there is now one backslash more than required.

Thanks in advance,
Johannes Luber


From jaluber at gmx.de  Wed Apr  4 06:27:17 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 04 Apr 2007 15:27:17 +0200
Subject: [antlr-interest] Java doesn't find class definition
In-Reply-To: <ab0bf2c00704030855k675eafd4h2487f04e05fd87bb@mail.gmail.com>
References: <46126B75.2080401@gmx.de>
	<ab0bf2c00704030855k675eafd4h2487f04e05fd87bb@mail.gmail.com>
Message-ID: <4613A7B5.8000407@gmx.de>

mblp at mega.ist.utl.pt wrote:
> As for eclipse, all required classes should be on the project's build
> path - this includes jars also, as well as a JDK. You must've ment
> that eclipse doesn't run the Test class, no?

I've included the ANTLR-jars in the project properties already.
Interestingly Eclipse doesn't complain about other ANTLR exclusive stuff.

> As for "java Test", that only works if you are in your project's bin
> directory (the dir with the .class files), and you do not use jars,
> which of course you should use, if you are using antlr.
> 
> you should type "java -classpath
> path/to/build/dir;path/to/jar1.jar;path/to/jar2.jar;... Test
> the java command should know where are the .class files(wheter in a
> dir or in a jar) that it should search in order to run things; that's
> why you need to pass all referenced jars to classpath parameter.

I've tested it with my specific paths and it worked, until I entered ^Z.

"^Z
Exception in thread "main" java.lang.Error: Unresolved compilation problems:
        ruleNestingLevel cannot be resolved
        ruleNestingLevel cannot be resolved
        The method emit(Token) in the type Lexer is not applicable for
the arguments (int, int, int, int, int, int)
        ruleNestingLevel cannot be resolved

        at ExprLexer.mID(ExprLexer.java:204)
        at ExprLexer.mTokens(ExprLexer.java:603)
        at org.antlr.runtime.Lexer.nextToken(Lexer.java:109)
        at
org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java
:95)
        at
org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
        at ExprParser.prog(ExprParser.java:59)
        at Test.main(Test.java:27)

I've searched the source for ANTLR for ruleNestingLevel. The only
references were in ActionTranslationLexer.java and in the target .stgs.
The class Lexer itself doesn't contain a definition, as the other files
do. Did I stumble over an ANTLR bug which hasn't been noticed by anyone
else? If yes, then Eclipse does work correctly.

Thanks again,
Johannes Luber

From femtowin at gmail.com  Wed Apr  4 06:45:03 2007
From: femtowin at gmail.com (femto gary)
Date: Wed, 4 Apr 2007 21:45:03 +0800
Subject: [antlr-interest] for grammar tail recursion
Message-ID: <91170ee40704040645wcda9309pcdd3cf1d67b167a1@mail.gmail.com>

Hi all, I'm trying to migrate from antlr 2.7.6 to antlr 3 for XRuby project,
I'm reading the antlr beta book and trying something from book
'compiler construction principles and practice', that's  example 3.7:
(rewritten using antlr's
grammar and make it compact).
slist:s';'slist | ;
s:'s';
//ignore WS rule
but when I try it in antlrWorks, it would tell me the second
alternative is unreachable, and it will misintepret 's;' to
NoViableAltException, (which
should be correct). generating the Lexer/Parser to test is also
not correct. anyone has any ideas about this? Thanks.

From bryce.alcock at sungard.com  Wed Apr  4 07:01:52 2007
From: bryce.alcock at sungard.com (bryce.alcock at sungard.com)
Date: Wed, 4 Apr 2007 09:01:52 -0500
Subject: [antlr-interest] += Output Option clarification
In-Reply-To: <2E227598-A843-42FE-848A-20070B8316DB@cs.usfca.edu>
Message-ID: <OF0030F508.D6166B8E-ON862572B3.0046FF1E-052572B3.004D1C89@sungard.com>

condExpr returns a java.lang.Integer.

In Reality, it either returns:
TRUE or FALSE
where TRUE is 'new java.lang.Integer(1);'
and FALSE is 'new java.lang.Integer(0);'

There may be a better way to do this:
Here is a summary of this portion of the system...

The basic problem is a conditional 
expression.  These conditionals (i.e. condExpr) can be 
chained together with the 'AND' key word, in which case
all condExpr must return TRUE.
These chained condExpr(s) are called a compoundExpr.
The code you are looking at 
evaluates the return of each condExpr,
and if any fail it records a failure.

SAMPLE GRAMMAR
(e.g.  (NAV+0.10*NAV>DELTA_NAV) AND (ACTION_DATE>TODAY-30)   )

I can't change the current language grammar 
because of a requirement for backwards 
compatibility.

Bryce





On Apr 3, 2007, at 9:57 AM, bryce.alcock at sungard.com wrote:

>
> I get the following error in my TreeWalker Grammar file:
>
> error(134): ExprWalker.g:43:14: rule '+=' list labels are not 
> allowed w/o output option: lids

Hi. I decided that += only makes sense to track templates or ASTs. 
If the rule returns ints, for example, should I make an int list or 
text of rule?  As it's ambig, i decided to only have it make sense 
for output option.

Ter

>
> I noticed the release notes state the following:

> Here is what i am trying to do:
>
> compoundExpr returns [int value] :
>         ^(COMPOUND (lids+=condExpr)+ )
>         {
>                              ..........
>                 };

what does condExpr return?


Ter



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070404/513a0331/attachment.html 

From jbb at acm.org  Wed Apr  4 13:01:35 2007
From: jbb at acm.org (John B. Brodie)
Date: Wed, 04 Apr 2007 16:01:35 -0400
Subject: [antlr-interest] for grammar tail recursion
In-Reply-To: <91170ee40704040645wcda9309pcdd3cf1d67b167a1@mail.gmail.com>
	(message from femto gary on Wed, 04 Apr 2007 21:45:03 +0800)
References: <91170ee40704040645wcda9309pcdd3cf1d67b167a1@mail.gmail.com>
Message-ID: <E1HZBfj-00059e-00@gecko>

>Hi all, I'm trying to migrate from antlr 2.7.6 to antlr 3 for XRuby project,
>I'm reading the antlr beta book and trying something from book
>'compiler construction principles and practice', that's  example 3.7:
>(rewritten using antlr's
>grammar and make it compact).
>slist:s';'slist | ;
>s:'s';
>//ignore WS rule
>but when I try it in antlrWorks, it would tell me the second
>alternative is unreachable, and it will misintepret 's;' to
>NoViableAltException, (which
>should be correct). generating the Lexer/Parser to test is also
>not correct. anyone has any ideas about this? Thanks.

Hello!

I tried your grammar under an old v3 - 3.b05 from November 2006 from
the command line, not from antlrWorks.

After adding a viable Start Rule - to satisfy Antlr's complaint, I got
no errors or warnings from the antlr.org.Tool

And the generated parser/lexer accepted 's;' and rejected 's;s' as
expected.

Hope this helps...
   -jbb

From richard.bown at ferventsoftware.com  Wed Apr  4 13:16:40 2007
From: richard.bown at ferventsoftware.com (Richard Bown)
Date: Wed, 04 Apr 2007 21:16:40 +0100
Subject: [antlr-interest] lexer or parser for comments and remarks?
Message-ID: <461407A8.8050207@ferventsoftware.com>

Hi,

I've got a lexer non-determinism which is making me go back and forward 
between trying to fix the lexer or trying to write a good parser rule 
for the problem - neither of which I can seem to get right.  This is 
with Antlr 2.7.5 producing C#.  Apologies for the lengthy explanation.

The rules are for handling SQL comments and similar one liners (I'm 
treating these all as single line statements).   Whilst this is 
relatively simple for non-alphabetic characters - you can write a lexer 
rule such as this:

COMMENT :
	'-' '-' ( ~('\r' | '\n') )* NEWLINE { setType(Token.SKIP); }
;

If you then define say a similar line for "rem" statements:

REMARK :
	'r' 'e' 'm' ( ~( '\r' | '\n' ) ) * NEWLINE
{ setType(Token.SKIP); }
;

This is fine - but if you also have a lexer rule for matching 
identifiers i.e. (slightly simplified):

ID :
	'A-Z' | 'a-z' | '_' | '0'..'9'
;

You get non-determinisms of course with the "rem" rule and any other 
rules that use alphanumerics.

The other way I've attempted to solve this is to just catch the 'rem' 
elements in the parser.   This is fine (and it would be a more useful 
solution if I wanted to do some simple processing of the comment lines) 
but then if there are any interesting and unusual characters in the 
remainder of the "rem" line then the parser doesn't match on these 
elements.  I've tried to be exhaustive about the type of 'words' that 
the remainder of the comment lines can contain but then I start to trip 
over lexer rules again and we go around in circles.

So I've been going back to the lexer to solve this - and whilst with the 
non-determinisms things almost work, the lexer rules also greedily slurp 
  up parts of legitimate ids.   One thing to fix that is to force the 
lexer to match from the start of the line only I s'pose... but it all 
seems like putting one hack on top of another.

Any clues how to handle this elegantly in the parser?   To me it would 
make sense to dump these lexer rules and handle all of these types in 
the parser - I just need an equivalent to "match from here to end of 
line" for the parser perhaps?

Rgds,
Richard Bown

From antlr at mirality.co.nz  Wed Apr  4 13:40:58 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 05 Apr 2007 08:40:58 +1200
Subject: [antlr-interest] Java doesn't find class definition
In-Reply-To: <4613A7B5.8000407@gmx.de>
References: <46126B75.2080401@gmx.de>
	<ab0bf2c00704030855k675eafd4h2487f04e05fd87bb@mail.gmail.com>
	<4613A7B5.8000407@gmx.de>
Message-ID: <20070404204112.0C5B01907B6@www.antlr.org>

At 01:27 5/04/2007, Johannes Luber wrote:
 >I've tested it with my specific paths and it worked, until I
 >entered ^Z.

I'm not quite sure what you mean by that, but under Windows ^Z is 
an end-of-file marker, so you shouldn't include it anywhere within 
a file as a character literal.  Use a backslash escape instead.


From antlr at mirality.co.nz  Wed Apr  4 13:49:42 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 05 Apr 2007 08:49:42 +1200
Subject: [antlr-interest] Tree output syntax
Message-ID: <20070404204957.5CB271907D1@www.antlr.org>

I can't quite work out how to do the tree output syntax for an 
optional case.

I've got a rule like this:

compoundString: STRING (PLUS^ STRING)*;

but that fails with "unexpected end of subtree" at compilation 
time.  What I'd like it to do is to output just a flat string when 
no PLUS is present, otherwise output trees like (PLUS string1 
string2) or either (PLUS string1 (PLUS string2 string3)) or (PLUS 
string1 string2 string3) -- don't really care which, as long as it 
only puts the PLUS in when it's actually present in the input.


From jaluber at gmx.de  Wed Apr  4 14:02:05 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 04 Apr 2007 23:02:05 +0200
Subject: [antlr-interest] Java doesn't find class definition
In-Reply-To: <20070404204113.9445gmx1@mx010.gmx.net>
References: <46126B75.2080401@gmx.de>
	<ab0bf2c00704030855k675eafd4h2487f04e05fd87bb@mail.gmail.com>
	<4613A7B5.8000407@gmx.de> <20070404204113.9445gmx1@mx010.gmx.net>
Message-ID: <4614124D.2070305@gmx.de>

Gavin Lambert wrote:
> At 01:27 5/04/2007, Johannes Luber wrote:
>>I've tested it with my specific paths and it worked, until I
>>entered ^Z.
> 
> I'm not quite sure what you mean by that, but under Windows ^Z is an
> end-of-file marker, so you shouldn't include it anywhere within a file
> as a character literal.  Use a backslash escape instead.

The ^Z terminated my test input - in other words, until the InputStream
was closed, the program worked fine. Sorry for the confusion. :(

Best regards,
Johannes Luber


From parrt at cs.usfca.edu  Wed Apr  4 15:16:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 4 Apr 2007 15:16:58 -0700
Subject: [antlr-interest] any download/network issues?
Message-ID: <25A6CC6A-AB91-4B65-B82E-72221FD8B8B7@cs.usfca.edu>

Hi, is everything better now?  I need to report to the IT group  
soon.  If you are still having download problems from antlr.org,  
please respond to me directly.

Thanks!
Ter

From eric at ebruno.org  Wed Apr  4 21:29:56 2007
From: eric at ebruno.org (Eric Bruno)
Date: Wed, 04 Apr 2007 21:29:56 -0700
Subject: [antlr-interest] Antlr and Erlang
Message-ID: <46147B44.1040505@ebruno.org>

We use Erlang (http://www.erlang.org) at work.   Erlang has feature 
called EDoc which is similar to JavaDoc, but
not as powerful.  It also is not as powerful as Doxygen 
(http://www.doxygen.org).  I am thinking about writing a
Erlang parser which would provide Doxygen with the inputs it to needs to 
do it's magic.   I was wondering anyone has done
any work on a Erlang grammar with Antlr?

Eric Bruno

From femtowin at gmail.com  Thu Apr  5 03:44:08 2007
From: femtowin at gmail.com (femto gary)
Date: Thu, 5 Apr 2007 18:44:08 +0800
Subject: [antlr-interest] for grammar tail recursion
In-Reply-To: <E1HZBfj-00059e-00@gecko>
References: <91170ee40704040645wcda9309pcdd3cf1d67b167a1@mail.gmail.com>
	<E1HZBfj-00059e-00@gecko>
Message-ID: <91170ee40704050344x33c1eb25qf057cf7d6ae4082a@mail.gmail.com>

Hi John, yes I also tried adding a start rule,
start:slist; to the grammar file,
and it's ok now (both in antlrWorks and outside it).

but it's weird, shouldn't antlr3 just recognize the grammar slist?
why doesn't it need a seperate start rule (maybe it's a bug?).
because I'm reading the antlr beta book now and didn't find
that it says special handling must be treated for start rule. weird.

On 4/5/07, John B. Brodie <jbb at acm.org> wrote:
> >Hi all, I'm trying to migrate from antlr 2.7.6 to antlr 3 for XRuby project,
> >I'm reading the antlr beta book and trying something from book
> >'compiler construction principles and practice', that's  example 3.7:
> >(rewritten using antlr's
> >grammar and make it compact).
> >slist:s';'slist | ;
> >s:'s';
> >//ignore WS rule
> >but when I try it in antlrWorks, it would tell me the second
> >alternative is unreachable, and it will misintepret 's;' to
> >NoViableAltException, (which
> >should be correct). generating the Lexer/Parser to test is also
> >not correct. anyone has any ideas about this? Thanks.
>
> Hello!
>
> I tried your grammar under an old v3 - 3.b05 from November 2006 from
> the command line, not from antlrWorks.
>
> After adding a viable Start Rule - to satisfy Antlr's complaint, I got
> no errors or warnings from the antlr.org.Tool
>
> And the generated parser/lexer accepted 's;' and rejected 's;s' as
> expected.
>
> Hope this helps...
>   -jbb
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From antlr at mirality.co.nz  Thu Apr  5 04:00:10 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 05 Apr 2007 23:00:10 +1200
Subject: [antlr-interest] for grammar tail recursion
In-Reply-To: <91170ee40704050344x33c1eb25qf057cf7d6ae4082a@mail.gmail.co
 m>
References: <91170ee40704040645wcda9309pcdd3cf1d67b167a1@mail.gmail.com>
	<E1HZBfj-00059e-00@gecko>
	<91170ee40704050344x33c1eb25qf057cf7d6ae4082a@mail.gmail.com>
Message-ID: <20070405110023.9AAF71907D4@www.antlr.org>

At 22:44 5/04/2007, femto gary wrote:
 >Hi John, yes I also tried adding a start rule,
 >start:slist; to the grammar file,
 >and it's ok now (both in antlrWorks and outside it).
 >
 >but it's weird, shouldn't antlr3 just recognize the grammar 
slist?
 >why doesn't it need a seperate start rule (maybe it's a bug?).
 >because I'm reading the antlr beta book now and didn't find
 >that it says special handling must be treated for start rule.
 >weird.

The normal trick is to make your top-level rule have EOF at the 
end, which forces ANTLR to match end-of-file after the rest of the 
text or fail.


From antlr at mirality.co.nz  Thu Apr  5 04:41:16 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 05 Apr 2007 23:41:16 +1200
Subject: [antlr-interest] Tree output syntax
In-Reply-To: <20070404204957.5CB271907D1@www.antlr.org>
References: <20070404204957.5CB271907D1@www.antlr.org>
Message-ID: <20070405114129.E54081907D7@www.antlr.org>

Yesterday, I wrote:
 >I can't quite work out how to do the tree output syntax for an
 >optional case.
[...]
 >compoundString: STRING (PLUS^ STRING)*;

In fact that syntax as a whole seems to give grief -- for example 
when I try to do this:

declaration
   :  K_CLASS^ classDef
   |  K_FIELD^ fieldDef
   |  K_PROP^  propertyDef
   ;

ANTLR simply spews this out:

error(100): .\Test.g3:0:0: syntax error: assign.types: <AST>:0:0: 
unexpected end of subtree
error(10):  internal error: .\Test.g3 : 
java.lang.ClassCastException: antlr.ASTNULLType
org.antlr.tool.AssignTokenTypesWalker.block(AssignTokenTypesWalker.java:1215)
org.antlr.tool.AssignTokenTypesWalker.rule(AssignTokenTypesWalker.java:1030)
org.antlr.tool.AssignTokenTypesWalker.rules(AssignTokenTypesWalker.java:610)
org.antlr.tool.AssignTokenTypesWalker.grammarSpec(AssignTokenTypesWalker.java:492)
org.antlr.tool.AssignTokenTypesWalker.grammar(AssignTokenTypesWalker.java:363)
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:533)
org.antlr.tool.Grammar.<init>(Grammar.java:443)
org.antlr.Tool.getGrammar(Tool.java:331)
org.antlr.Tool.process(Tool.java:267)
org.antlr.Tool.main(Tool.java:70)

(Note in particular that there's no line information for the 
grammar file, which made this *really* hard to track down the 
first time I encountered it).


From the_e57 at yahoo.com  Thu Apr  5 05:24:33 2007
From: the_e57 at yahoo.com (Eugen Cazacu)
Date: Thu, 5 Apr 2007 05:24:33 -0700 (PDT)
Subject: [antlr-interest] ANTLR in C++
In-Reply-To: <b9fb3efe0704041348w29fbd933r5ddf6a657dae4fbd@mail.gmail.com>
Message-ID: <384433.19919.qm@web52109.mail.re2.yahoo.com>

Hello,
I hope you don't mind cc the group, because I am also
giving this answer to the community, and for anyone
who needs explanation about how antlr C++ memory
management works.

Thank you for the appreciation. I haven't done any
antlr working recently so I am a bit rusty, so my
answers might not be very exact. Here are some point
you need to understand in order to understand my
problem and its solution, if you don't know any of
them, you should look it up:
1) Any tree can be represented as a binary tree with
first child and next sibling children, and this is how
antlr implements the AST.
2) C++ antlr has a reference counting mechanism which
is managing the memory. A newly created pointer in the
create (not sure about the function name) is wrapped
in the RefCount template class and it will
automatically delete the pointer when the counter
comes to 0. The RefCount<AST> can be used just like
any pointer, but because there are no actual pointers
in the code, there are also no deletes. The delete
operation is executed by the RefCount. You can look
through it if you are good with templates in C++,
otherwise it will be quite difficult to understand.
Basically it is a template class that takes the type
of the pointer it is managing as its parameter, just
like auto_ptr in C++, only smarter. Each time the
refcount is moved around, replicated, or deleted an
operator/constructor/function in refcount is invoked
and modifies the counter of the pointer. This is done
behind the scene and you just use it just as a regular
reference (just like in Java. Note: RefCount is not a
garbage collector, the gc in Java is much more complex
and handles some cases where the RefCount fails. the
occurrence of circular references).
3) The problem: because of the two above the following
happens: When a tree root exits a scope an has to be
destroyed, the destructor of the refcount is invoked,
this causes the destructor of the node to be invoked,
which in order to exit succesfully invokes all of its
children destructors, one of which is the nextSibling
member. This is also a refcount and does the same for
all of its members, and also has a next sibling, and
so on. When the number of siblings is close to 30.000
or more this generates a stack overflow because of the
function recursions (destructor of refcount and
destructor of the AST node). The same thing happens
also with a big depth, but usually this is not a
problem because the first child is much less used than
next sibling. A good example would be for a C++
parser:
{ int a1;
  {int a2;
  .....
    { int a30000;
    }
  }
}
The above is has a little probability to happen.
However the following structure is very much real:
{ int a1; int a2; .... int a30000; }
Some languages might have a very big linear trees like
this with a lot of siblings. An as you can see the
space complexity of the destruction of such a
structure is O(n).

4) The solution: use my own destruct function for the
tree node which will hold the temporary data in the
heap memory, not the stack memory. In my function I do
this by holding the temporary data in a queue
structure, but it might as well be a stack or
something else. By holding the nextsibling and the
firstchild of each node in such a structure, I force
the refcount not to invoke the destructor for them
because I am creating a +1 for each of them in the
counter, and when the root node is destroyed, it
doesn't recurse in destroying its children, the next
step is to destroy each child by hand using the same
method.

PS: There are no destructors because there are no
actual pointers in the code. RefCount does that job

I hope this answers your question, or at least help
you understand were to find the answer.

--- me 262 <me262c at gmail.com> wrote:

> Hi Eugen,
> 
>   I saw your posting last year on ANTLR's memory
> management. Did the
> problem get resolved in 2.7.7?
> 
>   We develop in MSVC7. I am new to parsing. In the
> past week I looked
> at ANTLR, Spirit, Lex/Yacc and others in the zoo.
> ANTLR is nice for
> Java but I can't understand how memories are
> managed. For example,
> none of the generated classes have destructors.
> 
> A appreciate your comments on the suitability of
> ANTLR for C++ projects.
> 
> Thanks in advance,
> 
> M. E.
> 
> Santa Clara, CA
> 



 
____________________________________________________________________________________
It's here! Your new message!  
Get new email alerts with the free Yahoo! Toolbar.
http://tools.search.yahoo.com/toolbar/features/mail/

From parrt at cs.usfca.edu  Thu Apr  5 10:05:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Apr 2007 10:05:57 -0700
Subject: [antlr-interest] Tree output syntax
In-Reply-To: <20070405114129.E54081907D7@www.antlr.org>
References: <20070404204957.5CB271907D1@www.antlr.org>
	<20070405114129.E54081907D7@www.antlr.org>
Message-ID: <BD18E7A6-F580-45E0-B2E1-2E6769210C7C@cs.usfca.edu>

Works for me.

Ter
--------------
/tmp $ java org.antlr.Tool A.g
ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
error(106): A.g:7:15: reference to undefined rule: propertyDef
error(106): A.g:6:15: reference to undefined rule: fieldDef
error(106): A.g:5:15: reference to undefined rule: classDef
error(105): A.g:7:6: no lexer rule corresponding to token: K_PROP
error(105): A.g:5:6: no lexer rule corresponding to token: K_CLASS
error(105): A.g:6:6: no lexer rule corresponding to token: K_FIELD

/tmp $ cat A.g
grammar A;
options {output=AST;}

declaration
   :  K_CLASS^ classDef
   |  K_FIELD^ fieldDef
   |  K_PROP^  propertyDef
   ;


On Apr 5, 2007, at 4:41 AM, Gavin Lambert wrote:

> Yesterday, I wrote:
> >I can't quite work out how to do the tree output syntax for an
> >optional case.
> [...]
> >compoundString: STRING (PLUS^ STRING)*;
>
> In fact that syntax as a whole seems to give grief -- for example  
> when I try to do this:
>
> declaration
>   :  K_CLASS^ classDef
>   |  K_FIELD^ fieldDef
>   |  K_PROP^  propertyDef
>   ;
>
> ANTLR simply spews this out:
>
> error(100): .\Test.g3:0:0: syntax error: assign.types: <AST>:0:0:  
> unexpected end of subtree
> error(10):  internal error: .\Test.g3 :  
> java.lang.ClassCastException: antlr.ASTNULLType
> org.antlr.tool.AssignTokenTypesWalker.block 
> (AssignTokenTypesWalker.java:1215)
> org.antlr.tool.AssignTokenTypesWalker.rule 
> (AssignTokenTypesWalker.java:1030)
> org.antlr.tool.AssignTokenTypesWalker.rules 
> (AssignTokenTypesWalker.java:610)
> org.antlr.tool.AssignTokenTypesWalker.grammarSpec 
> (AssignTokenTypesWalker.java:492)
> org.antlr.tool.AssignTokenTypesWalker.grammar 
> (AssignTokenTypesWalker.java:363)
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:533)
> org.antlr.tool.Grammar.<init>(Grammar.java:443)
> org.antlr.Tool.getGrammar(Tool.java:331)
> org.antlr.Tool.process(Tool.java:267)
> org.antlr.Tool.main(Tool.java:70)
>
> (Note in particular that there's no line information for the  
> grammar file, which made this *really* hard to track down the first  
> time I encountered it).
>


From jimi at temporal-wave.com  Thu Apr  5 10:35:30 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 5 Apr 2007 10:35:30 -0700
Subject: [antlr-interest] Tree output syntax
In-Reply-To: <BD18E7A6-F580-45E0-B2E1-2E6769210C7C@cs.usfca.edu>
References: <20070404204957.5CB271907D1@www.antlr.org><20070405114129.E54081907D7@www.antlr.org>
	<BD18E7A6-F580-45E0-B2E1-2E6769210C7C@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522DF@wavemachine.temporal-wave.com>

Me too and has done so for the last year. Usually these types of
exceptions come from a small typo somewhere else in the grammar (error
reporting will improve once ANTLR3 is using itself to parse the grammar
files etc - it is a bit raw right now, everyone knows that and it is on
Ter's huge list of things to improve.

So, I suspect that you have to do a 'binary chop' through the grammar,
commenting out one rule after another until you work out what it is
actually complaining about.

Things I have found you need to look for are:

Missing '}' on actions
Missing ; sometimes falls over
Incorrect order of things like @init and scopes (though this is a lot
better these days)

And so on. I also find the frequent check-ins to perforce allow me to
work out what typo I added that caused the failure.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Thursday, April 05, 2007 10:06 AM
To: ANTLR Interest
Subject: Re: [antlr-interest] Tree output syntax

Works for me.

Ter
--------------
/tmp $ java org.antlr.Tool A.g
ANTLR Parser Generator  Version 3.0b7 (??, 2007)  1989-2007
error(106): A.g:7:15: reference to undefined rule: propertyDef
error(106): A.g:6:15: reference to undefined rule: fieldDef
error(106): A.g:5:15: reference to undefined rule: classDef
error(105): A.g:7:6: no lexer rule corresponding to token: K_PROP
error(105): A.g:5:6: no lexer rule corresponding to token: K_CLASS
error(105): A.g:6:6: no lexer rule corresponding to token: K_FIELD

/tmp $ cat A.g
grammar A;
options {output=AST;}

declaration
   :  K_CLASS^ classDef
   |  K_FIELD^ fieldDef
   |  K_PROP^  propertyDef
   ;


On Apr 5, 2007, at 4:41 AM, Gavin Lambert wrote:

> Yesterday, I wrote:
> >I can't quite work out how to do the tree output syntax for an
> >optional case.
> [...]
> >compoundString: STRING (PLUS^ STRING)*;
>
> In fact that syntax as a whole seems to give grief -- for example  
> when I try to do this:
>
> declaration
>   :  K_CLASS^ classDef
>   |  K_FIELD^ fieldDef
>   |  K_PROP^  propertyDef
>   ;
>
> ANTLR simply spews this out:
>
> error(100): .\Test.g3:0:0: syntax error: assign.types: <AST>:0:0:  
> unexpected end of subtree
> error(10):  internal error: .\Test.g3 :  
> java.lang.ClassCastException: antlr.ASTNULLType
> org.antlr.tool.AssignTokenTypesWalker.block 
> (AssignTokenTypesWalker.java:1215)
> org.antlr.tool.AssignTokenTypesWalker.rule 
> (AssignTokenTypesWalker.java:1030)
> org.antlr.tool.AssignTokenTypesWalker.rules 
> (AssignTokenTypesWalker.java:610)
> org.antlr.tool.AssignTokenTypesWalker.grammarSpec 
> (AssignTokenTypesWalker.java:492)
> org.antlr.tool.AssignTokenTypesWalker.grammar 
> (AssignTokenTypesWalker.java:363)
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:533)
> org.antlr.tool.Grammar.<init>(Grammar.java:443)
> org.antlr.Tool.getGrammar(Tool.java:331)
> org.antlr.Tool.process(Tool.java:267)
> org.antlr.Tool.main(Tool.java:70)
>
> (Note in particular that there's no line information for the  
> grammar file, which made this *really* hard to track down the first  
> time I encountered it).
>


From parrt at cs.usfca.edu  Thu Apr  5 11:49:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Apr 2007 11:49:46 -0700
Subject: [antlr-interest] 1.5 vs 1.4
Message-ID: <BD673426-8A7E-4A88-9FC9-B5DB3DA08381@cs.usfca.edu>

Hi. It seems that the majority of people are fine with me moving to  
Java 1.5 so that I can use type arguments on my data structures  
internally to the ANTLR tool itself.  I think this is a good idea for  
maintenance reasons.  As I look at my data structures now, I  
constantly have to wonder what my maps have in them as data types.   
In fact, I usually have a comment that says "Map<String, State>". ;)

For now, let's leave the run time as 1.4 and moved to 1.5 for the  
tool itself.  Ilia Kantor has graciously shown me the secret and  
undocumented -target jsr14 option to the Java 1.5 compiler.  I have  
added this to the build.xml file in the depot as well. Therefore, we  
should be able to build .class files compatible with 1.4 and yet  
still use the 1.5 generics.

Thanks,
Ter

From antlr at mirality.co.nz  Thu Apr  5 12:40:37 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 06 Apr 2007 07:40:37 +1200
Subject: [antlr-interest] Tree output syntax
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362522DF@wavemachine.tempora
	l-wave.com>
References: <20070404204957.5CB271907D1@www.antlr.org>
	<20070405114129.E54081907D7@www.antlr.org>
	<BD18E7A6-F580-45E0-B2E1-2E6769210C7C@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A2353362522DF@wavemachine.temporal-wave.com>
Message-ID: <20070405194052.D90BF1907D7@www.antlr.org>

At 05:35 6/04/2007, Jim Idle wrote:
 >So, I suspect that you have to do a 'binary chop' through the
 >grammar, commenting out one rule after another until you work
 >out what it is actually complaining about.

That's my point though -- if I remove the ^ characters from that 
snippet I posted then the error stops happening.

It seems happy with the ^s if I use them on a rule with exactly 
one alt, and the ^ is not within a sub-block.  Putting them 
anywhere else leads to this.


From antlr at mirality.co.nz  Thu Apr  5 13:10:04 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 06 Apr 2007 08:10:04 +1200
Subject: [antlr-interest] Tree output syntax
In-Reply-To: <BD18E7A6-F580-45E0-B2E1-2E6769210C7C@cs.usfca.edu>
References: <20070404204957.5CB271907D1@www.antlr.org>
	<20070405114129.E54081907D7@www.antlr.org>
	<BD18E7A6-F580-45E0-B2E1-2E6769210C7C@cs.usfca.edu>
Message-ID: <20070405201019.6ADB91907CB@www.antlr.org>

At 05:05 6/04/2007, Terence Parr wrote:
 >Works for me.
[...]
 >grammar A;
 >options {output=AST;}
 >
 >declaration
 >   :  K_CLASS^ classDef
 >   |  K_FIELD^ fieldDef
 >   |  K_PROP^  propertyDef
 >   ;

Try putting in 'backtrack=true;' as well.  That seems to be one of 
the triggers, after further experimentation.


From prashant.deva at gmail.com  Thu Apr  5 17:59:37 2007
From: prashant.deva at gmail.com (Prashant Deva)
Date: Thu, 5 Apr 2007 17:59:37 -0700
Subject: [antlr-interest] [antlr-dev] 1.5 vs 1.4
In-Reply-To: <BD673426-8A7E-4A88-9FC9-B5DB3DA08381@cs.usfca.edu>
References: <BD673426-8A7E-4A88-9FC9-B5DB3DA08381@cs.usfca.edu>
Message-ID: <41fed8f80704051759l73a1c03by52ccc1f7585e9229@mail.gmail.com>

there is actually a whole article on ibm developerworks on using java 5
features with java 4 vm.

You might wanna take a look at that.

On 4/5/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Hi. It seems that the majority of people are fine with me moving to
> Java 1.5 so that I can use type arguments on my data structures
> internally to the ANTLR tool itself.  I think this is a good idea for
> maintenance reasons.  As I look at my data structures now, I
> constantly have to wonder what my maps have in them as data types.
> In fact, I usually have a comment that says "Map<String, State>". ;)
>
> For now, let's leave the run time as 1.4 and moved to 1.5 for the
> tool itself.  Ilia Kantor has graciously shown me the secret and
> undocumented -target jsr14 option to the Java 1.5 compiler.  I have
> added this to the build.xml file in the depot as well. Therefore, we
> should be able to build .class files compatible with 1.4 and yet
> still use the 1.5 generics.
>
> Thanks,
> Ter
> _______________________________________________
> antlr-dev mailing list
> antlr-dev at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-dev
>



-- 
Prashant Deva
Creator, ANTLR Studio, Virtual Ant
Founder, Placid Systems, www.placidsystems.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070405/516d562b/attachment.html 

From me262c at gmail.com  Thu Apr  5 18:45:53 2007
From: me262c at gmail.com (me 262)
Date: Thu, 5 Apr 2007 18:45:53 -0700
Subject: [antlr-interest] Heterogeneous AST: returns [ Tom/Jerry]
Message-ID: <b9fb3efe0704051845m7c43877dx12d85a269c257d6@mail.gmail.com>

Hi,

  In the calc example, we saw an int gets transformed into a float
(see below). But what if we want  to do this:

expr returns [Tom tom] .....

expr returns [Jerry jerry] ....

Do we need write Tom and Jerry into strings and read back? Can we
return a void * and cast it in different ways?

Any more examples besides the good old calc?

//------------------------------------------------

expr returns [float r]
{
	float a,b;
	r=0;
}
	:	#(PLUS a=expr b=expr)	{r = a+b;}
	|	#(STAR a=expr b=expr)	{r = a*b;}
	|	i:INT			{r = atof(i->getText().c_str());}
	;

From Das.Linux at gmx.de  Fri Apr  6 02:33:13 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Fri, 6 Apr 2007 11:33:13 +0200
Subject: [antlr-interest] Heterogeneous AST: returns [ Tom/Jerry]
In-Reply-To: <b9fb3efe0704051845m7c43877dx12d85a269c257d6@mail.gmail.com>
References: <b9fb3efe0704051845m7c43877dx12d85a269c257d6@mail.gmail.com>
Message-ID: <3BFA76E8-81F3-42A6-AF48-ED7F805BFB3F@gmx.de>

Hi me 262


Am 2007-04-06 um 03:45 schrieb me 262:


>
> expr returns [float r]
> {
> 	float a,b;
> 	r=0;
> }
> 	:	#(PLUS a=expr b=expr)	{r = a+b;}
> 	|	#(STAR a=expr b=expr)	{r = a*b;}
> 	|	i:INT			{r = atof(i->getText().c_str());}
> 	;

what about:


expr returns [comic C]
	:	( TOM ) => t=TOM { C=(comic)t; }
	|	( JERRY ) => j=JERRY { C=(comic)j; }
	;

if Tom and jerry have a common super/parent class.

hth,
	-Tobias
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070406/2c7ee258/attachment.bin 

From tirelli at post.com  Fri Apr  6 09:22:40 2007
From: tirelli at post.com (Edson Tirelli)
Date: Fri, 6 Apr 2007 13:22:40 -0300
Subject: [antlr-interest] JavaEmitter for antlr3?
Message-ID: <e6dd5ba30704060922p7237dd7fw44266cfd08617a68@mail.gmail.com>

   Does anyone has a version of JavaEmitter working for antlr3?

http://www.jazillian.com/antlr/emitter.html

   Thank you,
      Edson


-- 
  Edson Tirelli
  Software Engineer - JBoss Rules Core Developer
  Office: +55 11 3124-6000
  Mobile: +55 11 9218-4151
  JBoss, a division of Red Hat @ www.jboss.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070406/614a94cf/attachment.html 

From dave at badgers-in-foil.co.uk  Fri Apr  6 12:23:33 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 6 Apr 2007 19:23:33 +0000
Subject: [antlr-interest] [ANN] Maven-2 ANTLRv3 plugin, 0.1 release
Message-ID: <20070406192333.GA10768@badgers-in-foil.co.uk>

Hi all,

Here is a plugin for Maven 2 to do ANTLRv3 grammar processing.  It's
quite basic, but tries to manage build dependencies so that the grammar
isn't re-processed if the output files are all up to date.

You can see some documentation here,

  http://maven.badgers-in-foil.co.uk/sites/maven-antlr3-plugin/

and the plugin can be accessed by adding this repository to your
project's pom.xml:

  <pluginRepositories>
    <pluginRepository>
      <url>http://maven.badgers-in-foil.co.uk/maven2/</url>
    </pluginRepository>
  </pluginRepositories>

Note that I've not installed ANTLRv3 into that repository, and I don't
know of anyone distributing recent ANTLR releases in this form.  In the
meantime, you'll need to download and install ANTLR into your local
repository by hand,

  http://www.antlr.org/download/build/antlr-03-30-2007.14.tar.gz


This is my first Maven plugin.  Please report bugs :)


ta,
dave

-- 
http://david.holroyd.me.uk/

From nisha.nagendran at gmail.com  Fri Apr  6 12:48:51 2007
From: nisha.nagendran at gmail.com (nisha nagendran)
Date: Fri, 6 Apr 2007 15:48:51 -0400
Subject: [antlr-interest] To print the AST as seperate lines and not in a
	list (LISP notation)
Message-ID: <8179e30c0704061248q21301b2ag2bd75f80996cfa4b@mail.gmail.com>

Hi,

   I am new to ANTLR and i am getting used to it. I need to parse java
source code and produce a parse tree for each line in the source file along
with the line number. I was able to produce the AST with the use of the Java
grammar and tree grammar present in the examples. But the produced output is
in LISP notation as :

 ( CLASS_DEF ( MODIFIERS public ) [Sample,<IDENT>] EXTENDS_CLAUSE
IMPLEMENTS_CLA
USE ( OBJBLOCK ( METHOD_DEF ( MODIFIERS public static ) ( TYPE void )
[main,<IDE
NT>] ( PARAMETERS ( PARAMETER_DEF MODIFIERS ( TYPE ( [[,<ARRAY_DECLARATOR>]
[Str
ing,<IDENT>] ) ) [args,<IDENT>] ) ) ( [{,<SLIST>] ( VARIABLE_DEF MODIFIERS (
TYP
E int ) [i,<IDENT>] ( [=,<ASSIGN>] ( EXPR [0,<NUM_INT>] ) ) ) ( VARIABLE_DEF
MOD
IFIERS ( TYPE int ) [j,<IDENT>] ( [=,<ASSIGN>] ( EXPR [1,<NUM_INT>] ) ) ) (
VARI
ABLE_DEF MODIFIERS ( TYPE int ) [k,<IDENT>] ( [=,<ASSIGN>] ( EXPR (
[+,<PLUS>] [
i,<IDENT>] [j,<IDENT>] ) ) ) ) ( EXPR ( [(,<METHOD_CALL>] ( [.,<DOT>] (
[.,<DOT>
] [System,<IDENT>] [out,<IDENT>] ) [println,<IDENT>] ) ( ELIST ( EXPR (
[+,<PLUS
>] ["the number is ",<STRING_LITERAL>] [k,<IDENT>] ) ) ) ) ) ) ) ) )


But i want it to be produced seperately for every line in the source program
on different lines along with the line numbers as

1. CLASS_DEF ( MODIFIERS public ) [Sample,<IDENT>] EXTENDS_CLAUSE
IMPLEMENTS_CLAUSE
2.( OBJBLOCK ( METHOD_DEF ( MODIFIERS public static ) ( TYPE void )
[main,<IDENT>] ( PARAMETERS ( PARAMETER_DEF MODIFIERS ( TYPE
([[,<ARRAY_DECLARATOR>] [String,<IDENT>] ) ) [args,<IDENT>] ) )
3.....
4....

and so on.
Can anyone suggest what i could do in order to get the same. I am sorry if
such questions were discussed earlier in the discussion group. I am new to
this group.

Thanks,
Nisha.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070406/b005a14a/attachment.html 

From parrt at cs.usfca.edu  Fri Apr  6 12:59:39 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Apr 2007 12:59:39 -0700
Subject: [antlr-interest] To print the AST as seperate lines and not in
	a list (LISP notation)
In-Reply-To: <8179e30c0704061248q21301b2ag2bd75f80996cfa4b@mail.gmail.com>
References: <8179e30c0704061248q21301b2ag2bd75f80996cfa4b@mail.gmail.com>
Message-ID: <49594241-E9C8-4667-931F-8CB30798637E@cs.usfca.edu>

Hi, DOT/graphviz works great.  See  
org.antlr.runtime.tree.DOTTreeGenerator:

DOTTreeGenerator gen = new DOTTreeGenerator();
StringTemplate st = gen.toDOT(t);
System.out.println(st);

Ter


From antlr at jazillian.com  Fri Apr  6 12:58:27 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 06 Apr 2007 15:58:27 -0400
Subject: [antlr-interest] JavaEmitter for antlr3?
In-Reply-To: <e6dd5ba30704060922p7237dd7fw44266cfd08617a68@mail.gmail.com>
References: <e6dd5ba30704060922p7237dd7fw44266cfd08617a68@mail.gmail.com>
Message-ID: <4616A663.1060109@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070406/88b3ee7a/attachment.html 

From dcaton at shorelinesoftware.com  Fri Apr  6 15:10:58 2007
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Fri, 6 Apr 2007 18:10:58 -0400
Subject: [antlr-interest] C++ code target
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362522BF@wavemachine.temporal-wave.com>
References: <595c43a60703250048y1b43de6en25070cf9fb2b81d4@mail.gmail.com><bc607a4e0703260116o3adc75ckbe02ec579b7991ed@mail.gmail.com>	<01cd01c773e5$3d667ba0$b83372e0$@com>
	<B36CCC332A32904F8FA3DE134A2353362522BF@wavemachine.temporal-wave.com>
Message-ID: <00a801c77898$7534b8a0$5f9e29e0$@com>

Jim:

I don't really _need_ a C++ interface, I was just hoping to convince Ric not
to make the same mistake again with Antlr 3.  I can understand not going
back and adding Unicode support to Antlr 2.x, but IMO there is no good
reason for not building in Unicode support right from the start in any new
implementation.  

This is 2007 after all.  Unicode isn't something new, and we're long past
the point where everyone using a computer uses an 8-bit character set.  It
just doesn't make sense for a parsing tool like Antlr to be restricted to
parsing 8-bit characters.  I have a feeling most of the people around here
aren't Windows programmers, but surely the Mac and Linux are Unicode by now,
aren't they?

In any case, sounds like you've got it covered in the C implementation.
Unfortunately, it's too late to consider using Antlr 3 for our product as we
are going to ship by July 30 and it would be suicide to rewrite all our
parsers right now (there are 5 of them).  I'll have a look at the C
implementation for our next release though.

--
Don


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Tuesday, April 03, 2007 2:49 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C++ code target
> 
> What the C implementation does is deal with everything internally a
> UTF-32, you can then supply an input stream that provides each
> character
> as a 32 bit value, regardless of the input encoding (which the input
> stream is responsible for dealing with). Because all the library code
> then deal with 32 bit characters regardless of the input stream,
> there
> is no need for anything to know about the size of th incoming
> characters
> except the input stream itself, which may need to know how to rest to
> a
> specific character offset etc. The advantage is that there is little
> if
> any overhead. The token stream holds offsets that the input stream
> knows
> how to convert to 'strings' if they are referenced. There is
> currently
> support for latin-1 and UTF-16 (UCS2 I suppose) input streams and
> string
> manipulations for both (which will probably be easier to handle in
> C++ I
> suspect ;-).
> 
> If you really need a C++ interface and cannot wait for Ric's
> implementation, then you could use the C output and create a wrapper
> class for it? I was thinking of adding this to the output for C
> anyway
> in fact so that you could include the header and it would be a class
> definition if asked for.
> 
> Ter - perhaps we can consider that ability for a target to define
> multiple output files (call lots of templates like headerfile() with
> the
> same input as headerfile/outputfile ?). This would make it a bit
> neater
> to generate a COM interface for instance - however it can all be done
> in
> the same header file in the end of course, with # define.
> 
> Jim
> 




From tirelli at post.com  Fri Apr  6 18:55:32 2007
From: tirelli at post.com (Edson Tirelli)
Date: Fri, 6 Apr 2007 22:55:32 -0300
Subject: [antlr-interest] JavaEmitter for antlr3?
In-Reply-To: <4616A663.1060109@jazillian.com>
References: <e6dd5ba30704060922p7237dd7fw44266cfd08617a68@mail.gmail.com>
	<4616A663.1060109@jazillian.com>
Message-ID: <e6dd5ba30704061855l46a6082csd1d290990df65da0@mail.gmail.com>

   Andy,

   Thanks for the feedback and good luck! :) A pretty big endeavor! :)

   Regards,
     Edson

2007/4/6, Andy Tripp <antlr at jazillian.com>:
>
>  I don't have a version of JavaEmitter for ANTLR3 yet, but I started
> working on one a few
> days ago. My plan is to make this version work with an ANTLR AST holding
> ANY
> language :)
>
> The bad news...you could see this coming I'm sure...is I don't know when
> I'll finish.
>
> Andy
>
> Edson Tirelli wrote:
>
>
>    Does anyone has a version of JavaEmitter working for antlr3?
>
> http://www.jazillian.com/antlr/emitter.html
>
>    Thank you,
>       Edson
>
>
> --
>   Edson Tirelli
>   Software Engineer - JBoss Rules Core Developer
>   Office: +55 11 3124-6000
>   Mobile: +55 11 9218-4151
>   JBoss, a division of Red Hat @ www.jboss.com
>
>
>


-- 
  Edson Tirelli
  Software Engineer - JBoss Rules Core Developer
  Office: +55 11 3124-6000
  Mobile: +55 11 9218-4151
  JBoss, a division of Red Hat @ www.jboss.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070406/7ca76b41/attachment.html 

From antlr at shmuelhome.mine.nu  Fri Apr  6 11:29:28 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri, 06 Apr 2007 21:29:28 +0300
Subject: [antlr-interest] Simple grammar seems to produce infinite loop
Message-ID: <46169188.7060707@shmuelhome.mine.nu>

I accidentally wrote a grammar that produces a token based on nothing. 
The generated lexer will accept the nothing and keep going. This, of 
course, doesn't consume any characters, hence the infinite loop. Antlr 
should probably reject the grammar. The problem occurs both with 
antlrworks 1.0b8 and antlr-03-30-2007.14.jar.

sample grammar:
grammar boo;
what    :    What;
What    :    Why|;
fragment Why
    :    'y';



From parrt at cs.usfca.edu  Sat Apr  7 11:33:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Apr 2007 11:33:26 -0700
Subject: [antlr-interest] Simple grammar seems to produce infinite loop
In-Reply-To: <46169188.7060707@shmuelhome.mine.nu>
References: <46169188.7060707@shmuelhome.mine.nu>
Message-ID: <C806DC7A-A38C-4E37-83E6-37F66A3C7D71@cs.usfca.edu>

oops. added:

http://www.antlr.org:8888/browse/ANTLR-102
Ter
On Apr 6, 2007, at 11:29 AM, shmuel siegel wrote:

> I accidentally wrote a grammar that produces a token based on  
> nothing. The generated lexer will accept the nothing and keep  
> going. This, of course, doesn't consume any characters, hence the  
> infinite loop. Antlr should probably reject the grammar. The  
> problem occurs both with antlrworks 1.0b8 and antlr-03-30-2007.14.jar.
>
> sample grammar:
> grammar boo;
> what    :    What;
> What    :    Why|;
> fragment Why
>    :    'y';
>
>


From sohail at taggedtype.net  Sat Apr  7 11:34:54 2007
From: sohail at taggedtype.net (sohail at taggedtype.net)
Date: Sat, 7 Apr 2007 13:34:54 -0500 (CDT)
Subject: [antlr-interest] C target not working?
Message-ID: <33327.207.6.126.240.1175970894.squirrel@taggedtype.net>

Hi, am I doing something wrong here or is the C-target borked?

Thanks.

$ cat Test.g
grammar Test;

options
{
    language=C;
}

A : 'A' ;

$ export
CLASSPATH=../antlr-3.0b6/lib/antlr-2.7.7.jar:../antlr-3.0b6/lib/antlr-3.0b6.jar:../antlr-3.0b6/lib/stringtemplate-3.0.jar

$ java org.antlr.Tool Test.g

ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)  1989-2007
error(10):  internal error: group C does not satisfy interface ANTLRCore:
missing templates [lexerRulePropertyRef_stop]

error(10):  internal error: group C does not satisfy interface ANTLRCore:
mismatched arguments on these templates [outputFile(LEXER, PARSER,
TREE_PARSER, actionScope, actions, docComment, recognizer, name, tokens,
tokenNames, rules, cyclicDFAs, bitsets, buildTemplate, buildAST, rewrite,
profile, backtracking, synpreds, memoize, numRules, fileName,
ANTLRVersion, generatedTimestamp, trace, scopes, superClass, literals),
optional headerFile(LEXER, PARSER, TREE_PARSER, actionScope, actions,
docComment, recognizer, name, tokens, tokenNames, rules, cyclicDFAs,
bitsets, buildTemplate, buildAST, rewrite, profile, backtracking,
synpreds, memoize, numRules, fileName, ANTLRVersion, generatedTimestamp,
trace, scopes, superClass, literals), listLabel(label, elem)]

error(10):  internal error: Test.g : java.util.NoSuchElementException: no
such attribute: buildAST in template context [headerFile]
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.java:739)
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java:600)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:341)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)


From sohail at taggedtype.net  Sat Apr  7 11:56:45 2007
From: sohail at taggedtype.net (sohail at taggedtype.net)
Date: Sat, 7 Apr 2007 13:56:45 -0500 (CDT)
Subject: [antlr-interest] C target not working?
In-Reply-To: <33327.207.6.126.240.1175970894.squirrel@taggedtype.net>
References: <33327.207.6.126.240.1175970894.squirrel@taggedtype.net>
Message-ID: <41866.207.6.126.240.1175972205.squirrel@taggedtype.net>

> Hi, am I doing something wrong here or is the C-target borked?

Nevermind, I just got one of the "daily builds"

From antlr at shmuelhome.mine.nu  Sat Apr  7 04:56:14 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Sat, 07 Apr 2007 14:56:14 +0300
Subject: [antlr-interest] Lexer lookahead overoptimizes
Message-ID: <461786DE.6000801@shmuelhome.mine.nu>

Among other rules, I have these two lexer rules.
 SHIN:
    '\u00d7' '\u00a9' ('\u00d7' '\u0081')? ('\u00d7' '\u0082')?;
 TUF:
    '\u00d7' '\u00aa';

The code produced for "SHIN" properly recognizes that the optional first 
parenthesis needs two terms to match but the second parenthesis will try 
to match if the first character matches. Therefore I get a recognition 
exception from the sequence '\u00d7' '\u00a9' '\u00d7' '\u00aa'.

What I am saying will probably be clearer upon looking at the code 
produced for "SHIN". Note that it just checks for '\u00d7' and then 
wants to match '\u00d7' '\u0082'.
    // $ANTLR start SHIN
    public final void mSHIN() throws RecognitionException {
        try {
            int _type = SHIN;
            // 
E:\\downloads\\Eclipse\\learning\\Tamei\\grammar\\Miqroh.g:154:2: ( 
'\\u00d7' '\\u00a9' ( '\\u00d7' '\\u0081' )? ( '\\u00d7' '\\u0082' )? )
            // 
E:\\downloads\\Eclipse\\learning\\Tamei\\grammar\\Miqroh.g:154:2: 
'\\u00d7' '\\u00a9' ( '\\u00d7' '\\u0081' )? ( '\\u00d7' '\\u0082' )?
            {
            match('\u00D7');
            match('\u00A9');
            // 
E:\\downloads\\Eclipse\\learning\\Tamei\\grammar\\Miqroh.g:154:20: ( 
'\\u00d7' '\\u0081' )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0=='\u00D7') ) {
                int LA9_1 = input.LA(2);

                if ( (LA9_1=='\u0081') ) {
                    alt9=1;
                }
            }
            switch (alt9) {
                case 1 :
                    // 
E:\\downloads\\Eclipse\\learning\\Tamei\\grammar\\Miqroh.g:154:21: 
'\\u00d7' '\\u0081'
                    {
                    match('\u00D7');
                    match('\u0081');

                    }
                    break;

            }

            // 
E:\\downloads\\Eclipse\\learning\\Tamei\\grammar\\Miqroh.g:154:41: ( 
'\\u00d7' '\\u0082' )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0=='\u00D7') ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // 
E:\\downloads\\Eclipse\\learning\\Tamei\\grammar\\Miqroh.g:154:42: 
'\\u00d7' '\\u0082'
                    {
                    match('\u00D7');
                    match('\u0082');

                    }
                    break;

            }


            }

            this.type = _type;
        }
        finally {
        }
    }
    // $ANTLR end SHIN



From jimi at temporal-wave.com  Sun Apr  8 08:43:44 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 8 Apr 2007 08:43:44 -0700
Subject: [antlr-interest] C target not working?
In-Reply-To: <33327.207.6.126.240.1175970894.squirrel@taggedtype.net>
References: <33327.207.6.126.240.1175970894.squirrel@taggedtype.net>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362522F4@wavemachine.temporal-wave.com>

You need the latest snapshot (although the group interface error can be
ignored). See the download page.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of
sohail at taggedtype.net
Sent: Saturday, April 07, 2007 11:35 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C target not working?

Hi, am I doing something wrong here or is the C-target borked?

Thanks.

$ cat Test.g
grammar Test;

options
{
    language=C;
}

A : 'A' ;

$ export
CLASSPATH=../antlr-3.0b6/lib/antlr-2.7.7.jar:../antlr-3.0b6/lib/antlr-3.
0b6.jar:../antlr-3.0b6/lib/stringtemplate-3.0.jar

$ java org.antlr.Tool Test.g

ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)  1989-2007
error(10):  internal error: group C does not satisfy interface
ANTLRCore:
missing templates [lexerRulePropertyRef_stop]

error(10):  internal error: group C does not satisfy interface
ANTLRCore:
mismatched arguments on these templates [outputFile(LEXER, PARSER,
TREE_PARSER, actionScope, actions, docComment, recognizer, name, tokens,
tokenNames, rules, cyclicDFAs, bitsets, buildTemplate, buildAST,
rewrite,
profile, backtracking, synpreds, memoize, numRules, fileName,
ANTLRVersion, generatedTimestamp, trace, scopes, superClass, literals),
optional headerFile(LEXER, PARSER, TREE_PARSER, actionScope, actions,
docComment, recognizer, name, tokens, tokenNames, rules, cyclicDFAs,
bitsets, buildTemplate, buildAST, rewrite, profile, backtracking,
synpreds, memoize, numRules, fileName, ANTLRVersion, generatedTimestamp,
trace, scopes, superClass, literals), listLabel(label, elem)]

error(10):  internal error: Test.g : java.util.NoSuchElementException:
no
such attribute: buildAST in template context [headerFile]
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.j
ava:739)
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java
:600)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:341)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)


From john.howard9 at btinternet.com  Mon Apr  9 03:24:54 2007
From: john.howard9 at btinternet.com (John Howard)
Date: Mon, 09 Apr 2007 11:24:54 +0100
Subject: [antlr-interest] Lexer question
Message-ID: <461A1476.9000003@btinternet.com>

With Gavin Lambert input (Many thanks Gavin) I have moved my grammar 
forward, but still have an issue with one aspect.  I'm trying to parse 
tokens such as '53xx' '6xxx' '3334' and the following simple grammar 
works if I have token SHAPE defined, but if I use shapeDist I get a 
mis-match of against ID for the first 'x'.  333x parses OK, but 33xx 
doesn't.  I can's use SHAPE, because that causes other problems with the 
grammar.  Is there any way I can get shapeDist to work?

Thanks,

John

// This works
dist    
:    '^' SHAPE
;

ID : ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;
SHAPE     :(DIGIT (DIGIT|'*'|'x'|'X') (DIGIT|'*'|'x'|'X') 
(DIGIT|'*'|'x'|'X'));    
DIGIT     : ('0'..'9')    ;
WS  : (' '|'\r'|'\t'|'\n')+{$channel=HIDDEN;} ;



// This fails
dist    
:    '^' shapeDist
;

shapeDist
: (DIGIT (DIGIT|'*'|'x'|'X') (DIGIT|'*'|'x'|'X') (DIGIT|'*'|'x'|'X'))
;

ID : ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;
DIGIT     : ('0'..'9')    ;
WS  : (' '|'\r'|'\t'|'\n')+{$channel=HIDDEN;} ;




From jaluber at gmx.de  Mon Apr  9 03:15:24 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 09 Apr 2007 12:15:24 +0200
Subject: [antlr-interest] Lexer question
In-Reply-To: <461A1476.9000003@btinternet.com>
References: <461A1476.9000003@btinternet.com>
Message-ID: <461A123C.3020107@gmx.de>

John Howard wrote:
> With Gavin Lambert input (Many thanks Gavin) I have moved my grammar
> forward, but still have an issue with one aspect.  I'm trying to parse
> tokens such as '53xx' '6xxx' '3334' and the following simple grammar
> works if I have token SHAPE defined, but if I use shapeDist I get a
> mis-match of against ID for the first 'x'.  333x parses OK, but 33xx
> doesn't.  I can's use SHAPE, because that causes other problems with the
> grammar.  Is there any way I can get shapeDist to work?
> 
> Thanks,
> 
> John
> 
> // This works
> dist    :    '^' SHAPE
> ;
> 
> ID : ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;
> SHAPE     :(DIGIT (DIGIT|'*'|'x'|'X') (DIGIT|'*'|'x'|'X')
> (DIGIT|'*'|'x'|'X'));    DIGIT     : ('0'..'9')    ;
> WS  : (' '|'\r'|'\t'|'\n')+{$channel=HIDDEN;} ;
> 
> 
> 
> // This fails
> dist    :    '^' shapeDist
> ;
> 
> shapeDist
> : (DIGIT (DIGIT|'*'|'x'|'X') (DIGIT|'*'|'x'|'X') (DIGIT|'*'|'x'|'X'))
> ;
> 
> ID : ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')+;
> DIGIT     : ('0'..'9')    ;
> WS  : (' '|'\r'|'\t'|'\n')+{$channel=HIDDEN;} ;

I haven't test my suggestions (without the whole grammar it may be
useless anyway), but maybe the problem is a non-determinism or an
ambiguity as described on page 287 of the Beta Book. The difference
between SHAPE and shapeDist is, that SHAPE is a lexer rule and shapeDist
is a parser rule. When using SHAPE, DIGIT may have to be a fragment rule.

Three other things I've noticed in your grammar: The first one is that
ID doesn't allow single character identifiers, as you use + and not *.
This looks as an oversight to me. The second thing that you should
factor (DIGIT|'*'|'x'|'X') out into another rule (possibly making it
also fragment). Lastly, you shouldn't use parentheses to group rules
elements, unless necessary. It is distracting over long rules like
SHAPE/shapeDist.

Best regards,
Johannes Luber

From vidar at hawkis.com  Mon Apr  9 06:05:39 2007
From: vidar at hawkis.com (Vidar =?ISO-8859-1?Q?H=E5kestad?=)
Date: Mon, 09 Apr 2007 15:05:39 +0200
Subject: [antlr-interest]  charScanner panic.
In-Reply-To: B1180416E5C44E49AE556D23DBB45B290EE62E@webmail.starthis.com
Message-ID: <1176123939.23476.5.camel@falcon>

This might have to do with another problem too, which I found out.

When extending AST/Token classes, be sure to declare a default
constructor in your extending class:

public class MyToken extends antlr.Token {

   public MyToken() {
      // If this constuctor is not defined
      // panic() will be called because
      // the classloader cannot instantiate
      // the class.
   }

      :
      :
}

This problem is quite an annoyance, because if panic() is called, the
running JVM (including my JBoss instance) just halts.


Regards
Hawkis


From vidar at hawkis.com  Mon Apr  9 06:31:34 2007
From: vidar at hawkis.com (Vidar =?ISO-8859-1?Q?H=E5kestad?=)
Date: Mon, 09 Apr 2007 15:31:34 +0200
Subject: [antlr-interest]  charScanner panic.
In-Reply-To: B1180416E5C44E49AE556D23DBB45B290EE62E@webmail.starthis.com
Message-ID: <1176125494.23476.11.camel@falcon>

There might be another problem that causes the panic() to be called:
If your AST/Token extensions have no default constructor, the panic()
will be called by the class loader, because it hav no way of default
constructing your class. So you have to:

public class MyToken extends antlr.Token {

   pulblic MyToken() {
      // Declare this constructor in order for
      // the class loader to instanciate your class
   }

      :
      :
}

The fact that there are code in the library that calls System.exit() is
quite annoying because it effectively kills any JVM it is part of,
including my JBoss application server.


Regards
hawkis


From christianhofmann_de at yahoo.de  Mon Apr  9 06:41:45 2007
From: christianhofmann_de at yahoo.de (Christian Ulrich)
Date: Mon, 9 Apr 2007 15:41:45 +0200 (CEST)
Subject: [antlr-interest] Problem creating CSharp output
Message-ID: <874426.21489.qm@web26514.mail.ukl.yahoo.com>

Hello,

I'm new to ANTLR and AntlrWorks.
So, I've tried a very simple grammar by scratch.
Using the java code generation from the command line
and from Antlrworks the tool generates the java
output. 
By switching to CSharp code generation the tool won't
generate any output.
Does anyone know why this problem occure?
Any help is appreciated.
Thanks

Here's the grammar:
grammar BarcodeValidator;

options {
	language=CSharp;
	k=1;
}

@header {
}

/* class BarcodeLexer extends Lexer; */

BEGIN_SECTION : '['
	;
	
END_SECTION : ']'
	;
	
EQUAL	: '='
	;
		
WS      : (' ' | '\t' | '\n' {newline();} | '\r')+
/*	  { $setType(Token.SKIP); } */
        ;
		
HEADER 	: 'HEADER'
	;
	
INT	: ('0'..'9')+	
	;	
	
DOCUMENT : 'DOC' ('0'..'9')+
	;	

BLOCKID : 'CF_' ('0'..'9')+
	;
	
BLOCKID_KEY :	'BLOCKID'
	;
		
/* class BarcodeParser extends Parser; */

header_section 	: head_sec
	;
	
protected 
head_sec : BEGIN_SECTION HEADER END_SECTION
	 BLOCKID_KEY EQUAL (BLOCKID|)
	;
	

and here are the error message(s):
no such locale file
org/antlr/tool/templates/messages/languages/de.stg
retrying with English locale ANTLR Parser Generator 
Version 3.0b6 (Jan 31, 2007)  1989-2007
error(10):  internal error: group CSharp does not
satisfy interface ANTLRCore: missing templates
[lexerRulePropertyRef_start,
lexerRulePropertyRef_stop]

error(10):  internal error: group CSharp does not
satisfy interface ANTLRCore: mismatched arguments on
these templates [outputFile(LEXER, PARSER,TREE_PARSER,
actionScope, actions, docComment, recognizer, name,
tokens, tokenNames, rules, cyclicDFAs, bitsets,
buildTemplate, buildAST, rewrite, profile,
backtracking, synpreds, memoize, numRules, fileName,
ANTLRVersion, generatedTimestamp, trace, scopes,
superClass, literals), listLabel(label, elem)]

error(10):  internal error: BarcodeValidator.g :
java.util.NoSuchElementException: no such attribute:
buildAST in template context [outputFile]
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.java:739)

org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java:600)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:342)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)



		
___________________________________________________________ 
Telefonate ohne weitere Kosten vom PC zum PC: http://messenger.yahoo.de

From jaluber at gmx.de  Mon Apr  9 07:43:47 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 09 Apr 2007 16:43:47 +0200
Subject: [antlr-interest] Problem creating CSharp output
In-Reply-To: <874426.21489.qm@web26514.mail.ukl.yahoo.com>
References: <874426.21489.qm@web26514.mail.ukl.yahoo.com>
Message-ID: <461A5123.6090605@gmx.de>

Christian Ulrich wrote:
> Hello,
> 
> I'm new to ANTLR and AntlrWorks.
> So, I've tried a very simple grammar by scratch.
> Using the java code generation from the command line
> and from Antlrworks the tool generates the java
> output. 
> By switching to CSharp code generation the tool won't
> generate any output.
> Does anyone know why this problem occure?
> Any help is appreciated.
> Thanks

Right now the CSharp language target isn't working. I don't know any
estimates when this is changed. The best one can do is use Java for now
and switch later to CSharp if you don't want to wait for it.
Furthermore, ANTLRworks may not generate other languages besides Java in
general - I remember that at least part of its functionality doesn't
extend beyond Java.

Best regards,
Johannes Luber

From jaluber at gmx.de  Tue Apr 10 05:01:31 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 10 Apr 2007 14:01:31 +0200
Subject: [antlr-interest] Where to put general intialisation logic for a
	parser?
Message-ID: <461B7C9B.9020409@gmx.de>

Hello,

I have to load a few files to initialize some variables at the beginning
of the parsing, but I'm not sure where to put this code. As I need to do
execute this code only once, I've looked for an action similar to
@members, but didn't found it. The closest I've come seems to be an
@init action at the start rule. Unfortunately, using @init doesn't seem
right for this purpose. So I've wondered if deriving a special Parser
class would be the right thing to do. I am right? If yes, is there
anything I have to be aware of?

Best regards,
Johannes Luber

From lbiondi at olijo.com  Tue Apr 10 06:14:53 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Tue, 10 Apr 2007 15:14:53 +0200
Subject: [antlr-interest] ANTLRWorks problem
Message-ID: <200704101514.53432.lbiondi@olijo.com>

Ok, I could safely ignore a warning in the combined lexer/parser grammar I'm working on,
but it prevents me from using ANTLRWorks. And,  admitting I can't live by now without it
(great work Terence & Jean, it's very handy :-), I just need to resolve the error.

So, that's the matter

I'm getting a "no lexer rule corresponding to token: FLOAT_CONST" error message, but 
don't know how to overcome this. All things seem right in the grammar, and it works even ;-)

The token FLOAT_CONST is present in all files generated by antlr, and I have tried as well
different ways for setting the rule type
    setType(FLOAT_CONST)
    $type = FLOAT_CONST
but the error message persists.

Googling I found this old answer by Ter but it doesn't help me.

>> I also don't know what to do about the 'no lexer rule corresponding  
>> to token: >> VISIT_IDENTIFIER' warning.

> Hmm...yes, should not get a warning in this case...added to list.

Any hints ? Am I missing some new antlr3 rule ?
thanks in advance

Lucio


grammar Givvy;
...

tokens {
    FLOAT_CONST;	// Imaginary
}
...

atom
    :	FLOAT_CONST
...
    ;
/**** LEXER ****/

INT_CONST
    :	'1'..'9' ('0'..'9')* ((IS_FLOAT_CONST) => { _type = FLOAT_CONST; })?
...
    ;

fragment
IS_FLOAT_CONST
    :	'.' {  input.LA(1) >= '0' && input.LA(1) <= '9'}? => DIGITS EXPONENT? FLOAT_SUFFIX?
    |	EXPONENT FLOAT_SUFFIX?
    |	FLOAT_SUFFIX
    ;

From ssiegel at finjan.com  Tue Apr 10 08:58:47 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 10 Apr 2007 18:58:47 +0300
Subject: [antlr-interest] ANTLRWorks problem
In-Reply-To: <200704101514.53432.lbiondi@olijo.com>
References: <200704101514.53432.lbiondi@olijo.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C01AEF872@exmail1.finjan.com>

A quick and dirty fix for you to continue. Write a lexer rule that
generates FLOAT_CONST on something that can't happen. Something like

FLOAT_CONST: '\u0001';


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lucio Biondi
Sent: Tuesday, April 10, 2007 4:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLRWorks problem

Ok, I could safely ignore a warning in the combined lexer/parser grammar
I'm working on,
but it prevents me from using ANTLRWorks. And,  admitting I can't live
by now without it
(great work Terence & Jean, it's very handy :-), I just need to resolve
the error.

So, that's the matter

I'm getting a "no lexer rule corresponding to token: FLOAT_CONST" error
message, but 
don't know how to overcome this. All things seem right in the grammar,
and it works even ;-)

The token FLOAT_CONST is present in all files generated by antlr, and I
have tried as well
different ways for setting the rule type
    setType(FLOAT_CONST)
    $type = FLOAT_CONST
but the error message persists.

Googling I found this old answer by Ter but it doesn't help me.

>> I also don't know what to do about the 'no lexer rule corresponding  
>> to token: >> VISIT_IDENTIFIER' warning.

> Hmm...yes, should not get a warning in this case...added to list.

Any hints ? Am I missing some new antlr3 rule ?
thanks in advance

Lucio


grammar Givvy;
...

tokens {
    FLOAT_CONST;	// Imaginary
}
...

atom
    :	FLOAT_CONST
...
    ;
/**** LEXER ****/

INT_CONST
    :	'1'..'9' ('0'..'9')* ((IS_FLOAT_CONST) => { _type = FLOAT_CONST;
})?
...
    ;

fragment
IS_FLOAT_CONST
    :	'.' {  input.LA(1) >= '0' && input.LA(1) <= '9'}? => DIGITS
EXPONENT? FLOAT_SUFFIX?
    |	EXPONENT FLOAT_SUFFIX?
    |	FLOAT_SUFFIX
    ;



From lbiondi at olijo.com  Tue Apr 10 09:01:28 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Tue, 10 Apr 2007 18:01:28 +0200
Subject: [antlr-interest] ANTLRWorks problem
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C01AEF872@exmail1.finjan.com>
References: <200704101514.53432.lbiondi@olijo.com>
	<E344C433F006AB45A306D422F9C3EB4C01AEF872@exmail1.finjan.com>
Message-ID: <200704101801.28527.lbiondi@olijo.com>

> A quick and dirty fix for you to continue. Write a lexer rule that
> generates FLOAT_CONST on something that can't happen. Something like
> 
> FLOAT_CONST: '\u0001';

Yep, that's another way I'll try

Thanks

Lucio

From bfarrell at raytheon.com  Tue Apr 10 10:07:44 2007
From: bfarrell at raytheon.com (Robert E Farrell)
Date: Tue, 10 Apr 2007 12:07:44 -0500
Subject: [antlr-interest] Problem compiling VHDL-AMS grammar file
Message-ID: <OF1602F809.AA38AE08-ON862572B9.00586A85-862572B9.005E17B8@mck.us.ray.com>

I am a newbie to ANTLR having installed 2.7.7 yesterday. I was trying to
run the VHDL-AMS example grammar posted on the ANTLR web site and get the
following: (command line and result with paths shorted for readability.)

[72]%  /home/farrell/ANTLR/antlr-2.7.7_build/scripts/antlr.sh
/home/farrell/ANTLR/VHDL_AMS/vams.g

/apps/local/as/bin/java -classpath /home/farrell/ANTLR/antlr-2.7.7
_build/antlr/antlr.jar antlr.Tool /home/farrell/ANTLR/VHDL_AMS/vams.g
ANTLR Parser Generator   Version 2.7.7 (20070409)   1989-2005
error: Token stream error reading grammar(s):
/home/farrell/ANTLR/VHDL_AMS/vams.g:26:14: expecting '*', found 'a'
TokenStreamException: expecting '*', found 'a'


This is was compiled on a Solaris machine. The vams.g file at line 26 is in
the middle of a big comment so I didn't know what it might be looking at.

Background: Trying to update a program that reads VHDL files and pulls out
some information about each one. The current program uses flex/bison with
an elaborate scheme to skip over things that it thinks are "uninteresting"
for the task at hand. Since it has a number of problems not the least of
which is that it can only read a severe subset of VHDL I thought to update
to a more complete VHDL reader even though much of the information is
thrown away. Since the language is inherently ambiguous, LALR(1) parsers,
although I understand them, would take a lot of work to be useable.

I started investigating using a LL(1) or recursive descent parser and
thought that this is going to be easier to work. I tried Coco but was left
with a huge pile of conflicts which I was willing to momentarily ignore
except the generated C++ code would not compile. (It had case statements
where each statement was labeled with the same huge list of cases.)

I then switched to trying Antlr. I got really excited over the fact there
was a VHDL-AMS grammar posted. But now this problem.

Thanks for any help.

Bob Farrell


From parrt at cs.usfca.edu  Tue Apr 10 10:16:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Apr 2007 10:16:56 -0700
Subject: [antlr-interest] ANTLRWorks problem
In-Reply-To: <200704101514.53432.lbiondi@olijo.com>
References: <200704101514.53432.lbiondi@olijo.com>
Message-ID: <17D9E2EB-7A6C-4457-9439-00F34928638A@cs.usfca.edu>


On Apr 10, 2007, at 6:14 AM, Lucio Biondi wrote:

> Ok, I could safely ignore a warning in the combined lexer/parser  
> grammar I'm working on,
> but it prevents me from using ANTLRWorks. And,  admitting I can't  
> live by now without it
> (great work Terence & Jean, it's very handy :-), I just need to  
> resolve the error.
>
> So, that's the matter
>
> I'm getting a "no lexer rule corresponding to token: FLOAT_CONST"  
> error message, but
> don't know how to overcome this. All things seem right in the  
> grammar, and it works even ;-)

It's just a warning...it's an imaginary token.

> The token FLOAT_CONST is present in all files generated by antlr,  
> and I have tried as well
> different ways for setting the rule type
>     setType(FLOAT_CONST)
>     $type = FLOAT_CONST
> but the error message persists.

It's should be a warning.  Just ignore ;)

Ter


From lbiondi at olijo.com  Tue Apr 10 10:23:55 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Tue, 10 Apr 2007 19:23:55 +0200
Subject: [antlr-interest] ANTLRWorks problem
In-Reply-To: <17D9E2EB-7A6C-4457-9439-00F34928638A@cs.usfca.edu>
References: <200704101514.53432.lbiondi@olijo.com>
	<17D9E2EB-7A6C-4457-9439-00F34928638A@cs.usfca.edu>
Message-ID: <200704101923.56030.lbiondi@olijo.com>

> It's just a warning...it's an imaginary token.
> 
> It's should be a warning.  Just ignore ;)

Yes, Terence, but with ANTLRWorks ? It seems to me
that after an antlr error I can't use the debugger and so on..
or am I wrong ?

Ok, I will check it better...

Lucio

From parrt at cs.usfca.edu  Tue Apr 10 10:48:44 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Apr 2007 10:48:44 -0700
Subject: [antlr-interest] ANTLRWorks problem
In-Reply-To: <200704101923.56030.lbiondi@olijo.com>
References: <200704101514.53432.lbiondi@olijo.com>
	<17D9E2EB-7A6C-4457-9439-00F34928638A@cs.usfca.edu>
	<200704101923.56030.lbiondi@olijo.com>
Message-ID: <728D5B40-F98E-475F-BAC4-164CF1A9665E@cs.usfca.edu>

On Apr 10, 2007, at 10:23 AM, Lucio Biondi wrote:
>> It's just a warning...it's an imaginary token.
>>
>> It's should be a warning.  Just ignore ;)
>
> Yes, Terence, but with ANTLRWorks ? It seems to me
> that after an antlr error I can't use the debugger and so on..
> or am I wrong ?

Ah. Ok, well Jean is going to do another release of AW shortly.  I'll  
fix this warning/error right now.

Ter

From lbiondi at olijo.com  Tue Apr 10 10:57:39 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Tue, 10 Apr 2007 19:57:39 +0200
Subject: [antlr-interest] ANTLRWorks problem
In-Reply-To: <728D5B40-F98E-475F-BAC4-164CF1A9665E@cs.usfca.edu>
References: <200704101514.53432.lbiondi@olijo.com>
	<200704101923.56030.lbiondi@olijo.com>
	<728D5B40-F98E-475F-BAC4-164CF1A9665E@cs.usfca.edu>
Message-ID: <200704101957.39227.lbiondi@olijo.com>

> Ah. Ok, well Jean is going to do another release of AW shortly.  I'll  
> fix this warning/error right now.

Thank you, Terence; always very helpful..

Lucio


From dave at badgers-in-foil.co.uk  Tue Apr 10 11:58:05 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 10 Apr 2007 18:58:05 +0000
Subject: [antlr-interest] Where to put general intialisation logic for a
	parser?
In-Reply-To: <461B7C9B.9020409@gmx.de>
References: <461B7C9B.9020409@gmx.de>
Message-ID: <20070410185804.GA14075@badgers-in-foil.co.uk>

On Tue, Apr 10, 2007 at 02:01:31PM +0200, Johannes Luber wrote:
> I have to load a few files to initialize some variables at the beginning
> of the parsing, but I'm not sure where to put this code. As I need to do
> execute this code only once, I've looked for an action similar to
> @members, but didn't found it.

How about putting a (dirty dirty!) instance initialiser block into
@members?

i.e.,

  @members {
    {
      ...init statements here...
    {
  }

That'll confuse anyone who looks at the grammar :)


ta,
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Tue Apr 10 12:09:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Apr 2007 12:09:00 -0700
Subject: [antlr-interest] Where to put general intialisation logic for a
	parser?
In-Reply-To: <461B7C9B.9020409@gmx.de>
References: <461B7C9B.9020409@gmx.de>
Message-ID: <AE2B1793-C3B6-4E46-B1E2-8D0B4354A335@cs.usfca.edu>


On Apr 10, 2007, at 5:01 AM, Johannes Luber wrote:

> Hello,
>
> I have to load a few files to initialize some variables at the  
> beginning
> of the parsing, but I'm not sure where to put this code. As I need  
> to do
> execute this code only once, I've looked for an action similar to
> @members, but didn't found it. The closest I've come seems to be an
> @init action at the start rule. Unfortunately, using @init doesn't  
> seem
> right for this purpose. So I've wondered if deriving a special Parser
> class would be the right thing to do. I am right? If yes, is there
> anything I have to be aware of?

How about defining an overloaded constructor?

Ter


From russell.contact at gmail.com  Tue Apr 10 13:05:12 2007
From: russell.contact at gmail.com (Russell)
Date: Tue, 10 Apr 2007 22:05:12 +0200
Subject: [antlr-interest] Need help with a simple grammer.
Message-ID: <123199050704101305j198adc4du241bf5bfb15dcf7e@mail.gmail.com>

I am new to Antlr and am trying to create a parser that will parse a syntax
similar to the
WHERE clause of an sql statement.

eg. SalesOrderNumber of SalesOrder = SalesOrderNumber of Invoice

It also needs to support parenthesis and the logical operators AND and
OR

eg. (CaptureDate of SalesOrder = CaptureDate of Invoice) and
    (CaptureDate of Invoice = Date of PublicHolidays)

I created and tested simple grammer using the GOLD Parser
Builder<http://www.devincook.com/GOLDParser/index.htm>
 as
follows

*      "Start Symbol" = <Condition>

      <Condition> ::=
                    <Condition> 'or' <AndCondition>
                    | <AndCondition>

      <AndCondition> ::=
                   <AndCondition> 'and' <NegCondition>
                    | <NegCondition>

      <NegCondition> ::=
                     'not' <SimpleCondition>
                     | <SimpleCondition>

      <SimpleCondition> ::=
                       <TableField> '=' <TableField>
                        | '(' <Condition> ')'

      <TableField>  ::=
                      ID 'of' ID


      ID = {Letter}{Alphanumeric}*

*Which seems to work fine in GOLD. Then I tried converting it to Antlr with
the following grammer:

*      class KOParser extends Parser;

      condition : condition LOR andcondition
                  | andcondition
      ;

      andcondition : andcondition LAND negcondition
                     | negcondition
      ;

      negcondition : NOT simplecondition
                     | simplecondition
      ;

      simplecondition : tablefield EQUALS tablefield
                        | LPAREN condition RPAREN
      ;

      tablefield  : ID "of" ID
      ;


      class KOLexer extends Lexer;

      tokens {
        LAND = "and";
        LOR = "or";
        NOT = "not";
        EQUALS = "=";
      }

      LPAREN : '(';
      RPAREN : ')';


      ID:
      (('A'..'Z') | ('a'..'z'))+ ('0'..'9')*
      ;

      WS:
      (' '|'\n') {$setType(Token.SKIP);}
      ;

*However when I try to build this I get the following errors:

C:\Java\Workspaces\NetBeans\RuleParser\src>java -cp
C:\antlr\277\lib\antlr.jar a
ntlr.Tool koParse.g
ANTLR Parser Generator   Version 2.7.7 (20060930)   1989-2005
koParse.g:6:13: infinite recursion to rule condition from rule condition
koParse.g:10:16: infinite recursion to rule andcondition from rule
andcondition
koParse.g:7:15: infinite recursion to rule andcondition from rule condition
koParse.g:6:13: infinite recursion to rule condition from rule condition
koParse.g:7:15: infinite recursion to rule andcondition from rule condition
koParse.g:6: warning:nondeterminism between alts 1 and 2 of block upon
koParse.g:6:     k==1:"not",LPAREN,ID
Exiting due to errors.

If anybody point me in the right direction it would be much appreciated.

Thanks in advance,
Russell.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070410/d2f92677/attachment.html 

From lgcraymer at yahoo.com  Tue Apr 10 13:14:27 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 10 Apr 2007 13:14:27 -0700 (PDT)
Subject: [antlr-interest] Need help with a simple grammer.
In-Reply-To: <123199050704101305j198adc4du241bf5bfb15dcf7e@mail.gmail.com>
Message-ID: <565470.8673.qm@web55913.mail.re3.yahoo.com>

In LALR BNF parsers (like yacc and GOLD), left
recursion is commonly used for implementing iterative
constructs via recursion.  In LL parsers, left
recursion is evil.

Change your definition of condition to

condition:
     and_condition (LOR and_condition)*
     ;

and that should make ANTLR happy; do the equivalent
for each of the other left-recursive definitions and
your problems should disappear (for this round, at
least).

--Loring

--- Russell <russell.contact at gmail.com> wrote:

> I am new to Antlr and am trying to create a parser
> that will parse a syntax
> similar to the
> WHERE clause of an sql statement.
> 
> eg. SalesOrderNumber of SalesOrder =
> SalesOrderNumber of Invoice
> 
> It also needs to support parenthesis and the logical
> operators AND and
> OR
> 
> eg. (CaptureDate of SalesOrder = CaptureDate of
> Invoice) and
>     (CaptureDate of Invoice = Date of
> PublicHolidays)
> 
> I created and tested simple grammer using the GOLD
> Parser
>
Builder<http://www.devincook.com/GOLDParser/index.htm>
>  as
> follows
> 
> *      "Start Symbol" = <Condition>
> 
>       <Condition> ::=
>                     <Condition> 'or' <AndCondition>
>                     | <AndCondition>
> 
>       <AndCondition> ::=
>                    <AndCondition> 'and'
> <NegCondition>
>                     | <NegCondition>
> 
>       <NegCondition> ::=
>                      'not' <SimpleCondition>
>                      | <SimpleCondition>
> 
>       <SimpleCondition> ::=
>                        <TableField> '=' <TableField>
>                         | '(' <Condition> ')'
> 
>       <TableField>  ::=
>                       ID 'of' ID
> 
> 
>       ID = {Letter}{Alphanumeric}*
> 
> *Which seems to work fine in GOLD. Then I tried
> converting it to Antlr with
> the following grammer:
> 
> *      class KOParser extends Parser;
> 
>       condition : condition LOR andcondition
>                   | andcondition
>       ;
> 
>       andcondition : andcondition LAND negcondition
>                      | negcondition
>       ;
> 
>       negcondition : NOT simplecondition
>                      | simplecondition
>       ;
> 
>       simplecondition : tablefield EQUALS tablefield
>                         | LPAREN condition RPAREN
>       ;
> 
>       tablefield  : ID "of" ID
>       ;
> 
> 
>       class KOLexer extends Lexer;
> 
>       tokens {
>         LAND = "and";
>         LOR = "or";
>         NOT = "not";
>         EQUALS = "=";
>       }
> 
>       LPAREN : '(';
>       RPAREN : ')';
> 
> 
>       ID:
>       (('A'..'Z') | ('a'..'z'))+ ('0'..'9')*
>       ;
> 
>       WS:
>       (' '|'\n') {$setType(Token.SKIP);}
>       ;
> 
> *However when I try to build this I get the
> following errors:
> 
> C:\Java\Workspaces\NetBeans\RuleParser\src>java -cp
> C:\antlr\277\lib\antlr.jar a
> ntlr.Tool koParse.g
> ANTLR Parser Generator   Version 2.7.7 (20060930)  
> 1989-2005
> koParse.g:6:13: infinite recursion to rule condition
> from rule condition
> koParse.g:10:16: infinite recursion to rule
> andcondition from rule
> andcondition
> koParse.g:7:15: infinite recursion to rule
> andcondition from rule condition
> koParse.g:6:13: infinite recursion to rule condition
> from rule condition
> koParse.g:7:15: infinite recursion to rule
> andcondition from rule condition
> koParse.g:6: warning:nondeterminism between alts 1
> and 2 of block upon
> koParse.g:6:     k==1:"not",LPAREN,ID
> Exiting due to errors.
> 
> If anybody point me in the right direction it would
> be much appreciated.
> 
> Thanks in advance,
> Russell.
> 



       
____________________________________________________________________________________
Expecting? Get great news right away with email Auto-Check. 
Try the Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/newmail_tools.html 

From me262c at gmail.com  Tue Apr 10 13:19:33 2007
From: me262c at gmail.com (me 262)
Date: Tue, 10 Apr 2007 13:19:33 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
Message-ID: <b9fb3efe0704101319v689de30evd0a2600ed1ea13d@mail.gmail.com>

Hi,

 I know this is very basic.  I am trying to parse the following two commands:

  mystr val;
  val = wolf;

  I am getting NoViableAltException on the first line.

  The grammar looks like this:

	command : (op_command) => op_command
	        | def_command
	    {#command = #([COMMAND, "COMMAND"], #command);};
	
	def_command : (	STRING SEMI!)
		{#def_command = #([DEFCOMMAND, "DEFCOMMAND"], #def_command);};
	
	op_command : ( STRING EQUALS! rhs SEMI!)
		{#op_command = #([OPCOMMAND, "OPCOMMAND"], #op_command);};	

Thanks in advance!

From lgcraymer at yahoo.com  Tue Apr 10 13:23:53 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 10 Apr 2007 13:23:53 -0700 (PDT)
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <b9fb3efe0704101319v689de30evd0a2600ed1ea13d@mail.gmail.com>
Message-ID: <110966.64594.qm@web55911.mail.re3.yahoo.com>

Your first input line is STRING STRING SEMI, not the
STRING SEMI expected by your grammar.  Fix
def_command.

--Loring

--- me 262 <me262c at gmail.com> wrote:

> Hi,
> 
>  I know this is very basic.  I am trying to parse
> the following two commands:
> 
>   mystr val;
>   val = wolf;
> 
>   I am getting NoViableAltException on the first
> line.
> 
>   The grammar looks like this:
> 
> 	command : (op_command) => op_command
> 	        | def_command
> 	    {#command = #([COMMAND, "COMMAND"],
> #command);};
> 	
> 	def_command : (	STRING SEMI!)
> 		{#def_command = #([DEFCOMMAND, "DEFCOMMAND"],
> #def_command);};
> 	
> 	op_command : ( STRING EQUALS! rhs SEMI!)
> 		{#op_command = #([OPCOMMAND, "OPCOMMAND"],
> #op_command);};	
> 
> Thanks in advance!
> 



       
____________________________________________________________________________________
Expecting? Get great news right away with email Auto-Check. 
Try the Yahoo! Mail Beta.
http://advision.webevents.yahoo.com/mailbeta/newmail_tools.html 

From weixian_shen at hotmail.com  Tue Apr 10 14:51:58 2007
From: weixian_shen at hotmail.com (Weixian Shen)
Date: Tue, 10 Apr 2007 14:51:58 -0700
Subject: [antlr-interest] Antlr grammer for C preprocessor
Message-ID: <BAY124-W1027FF734D9B1049BAA30BE5580@phx.gbl>

Hi,I am planning to implement a "specialized" C preprocessor using Antlr. The C preprocessor should not be limited to processing C source file only, and does not need to build tokens to pass to C compiler. It only need to 1) strip comment blocks 2) handle back-slash newline sequence 3) understand C preprocessor directives, macros, and builds an AST tree. Only C preprocessor directives need to be included in the tree node. Non-preprocessor related stuff such as C code can be ignored.I tried to start from the C preprocessor example done by "Youngki KU" but it doesn't seem to compile (with antlr 3.0 or 2.77). Is there any full-fledged project based on antlr for C preprocessor I can take a look at? If not, is there a full-fledged grammer files that works with antlr 2.77 (preferred) or 3.0? I was able to build a very basic preprocessor but I am having difficulty processing macro, string contact, etc.Vincent
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070410/af760c67/attachment.html 

From jaluber at gmx.de  Tue Apr 10 14:55:08 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 10 Apr 2007 23:55:08 +0200
Subject: [antlr-interest] Where to put general intialisation logic for a
 parser?
In-Reply-To: <20070410185804.GA14075@badgers-in-foil.co.uk>
References: <461B7C9B.9020409@gmx.de>
	<20070410185804.GA14075@badgers-in-foil.co.uk>
Message-ID: <461C07BC.8000703@gmx.de>

David Holroyd wrote:
> How about putting a (dirty dirty!) instance initialiser block into
> @members?
> 
> i.e.,
> 
>   @members {
>     {
>       ...init statements here...
>     {
>   }

Compared to the extra constructor suggestion of Terrence it has the
definitive advantage, that one doesn't need a dummy argument to
distinguish between the the normal variant and the modified one.
Unfortunately it isn't convertible to C# (though I use Java until C# has
been finished), so I'll use constructor overloading.

But this causes a small problem - is the class name always "GrammarName"
+ "Parser"? What if one changes the base class? It looks to me, as if a
special variable $ctor available in @members and filled with the current
class name would be a good idea. To use this variable would immunize the
code against grammar name changes, too. Bugs caused by innocent changes
are the worst to find. :(

> That'll confuse anyone who looks at the grammar :)

Guaranteed! I had to look up, what instance initialisers were because I
haven't used them myself. I can understand that the syntax is simply a
static initialiser without static, but it is cryptic nonetheless and a
violation of the expectation that no {} can come up without being in a
function (or associated with a class).

Thanks for your tips,
Johannes Luber

From dave at badgers-in-foil.co.uk  Tue Apr 10 15:58:41 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 10 Apr 2007 22:58:41 +0000
Subject: [antlr-interest] Where to put general intialisation logic for a
	parser?
In-Reply-To: <461C07BC.8000703@gmx.de>
References: <461B7C9B.9020409@gmx.de>
	<20070410185804.GA14075@badgers-in-foil.co.uk>
	<461C07BC.8000703@gmx.de>
Message-ID: <20070410225841.GA19199@badgers-in-foil.co.uk>

On Tue, Apr 10, 2007 at 11:55:08PM +0200, Johannes Luber wrote:
> David Holroyd wrote:
> > How about putting a (dirty dirty!) instance initialiser block into
> > @members?

> > That'll confuse anyone who looks at the grammar :)
> 
> Guaranteed! I had to look up, what instance initialisers were because I
> haven't used them myself.

I only know about this Java feature from having seen that the 'static'
is optional, while reading some grammar or other.  I've never used it,
other then to prove to myself that javac actually accepts the syntax :)

Anyway, a more basic option; just add some setter-methods and use a
'builder' pattern to obtain parser instances?  Might be easier to write
unit tests that way...

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Tue Apr 10 17:13:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Apr 2007 17:13:21 -0700
Subject: [antlr-interest] wiki public signup available
Message-ID: <42462EBF-32C8-41C5-8FC9-54929E528776@cs.usfca.edu>

Hi,

I've decided to reopen public signup for the wiki.  Too much of a  
hassle for people to sign up otherwise.  I was getting bogus signups  
(from a bot) that consumed all 200 users every time I deleted them.   
So, I'll just keep deleting them.  Please sign up quick if you want  
to be able to add FAQ entries or other content to the wiki.

http://www.antlr.org/wiki/signup.action

Thanks!
Ter

From mblp at mega.ist.utl.pt  Tue Apr 10 17:30:40 2007
From: mblp at mega.ist.utl.pt (Miguel Ping)
Date: Wed, 11 Apr 2007 01:30:40 +0100
Subject: [antlr-interest] Where to put general intialisation logic for a
	parser?
In-Reply-To: <20070410225841.GA19199@badgers-in-foil.co.uk>
References: <461B7C9B.9020409@gmx.de>
	<20070410185804.GA14075@badgers-in-foil.co.uk>
	<461C07BC.8000703@gmx.de>
	<20070410225841.GA19199@badgers-in-foil.co.uk>
Message-ID: <ab0bf2c00704101730m542a64fat271d0288f90f0e26@mail.gmail.com>

Another (maybe not so frequent) problem is that if you load a class
and explicitly do not initialize it(the 2nd parameter in forName()),
the static {} block never runs...

Class.forName("sample.Test", false, Random.class.getClassLoader());


On 4/10/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Tue, Apr 10, 2007 at 11:55:08PM +0200, Johannes Luber wrote:
> > David Holroyd wrote:
> > > How about putting a (dirty dirty!) instance initialiser block into
> > > @members?
>
> > > That'll confuse anyone who looks at the grammar :)
> >
> > Guaranteed! I had to look up, what instance initialisers were because I
> > haven't used them myself.
>
> I only know about this Java feature from having seen that the 'static'
> is optional, while reading some grammar or other.  I've never used it,
> other then to prove to myself that javac actually accepts the syntax :)
>
> Anyway, a more basic option; just add some setter-methods and use a
> 'builder' pattern to obtain parser instances?  Might be easier to write
> unit tests that way...
>
> --
> http://david.holroyd.me.uk/
>

From tegan at gnometank.net  Tue Apr 10 17:50:04 2007
From: tegan at gnometank.net (Matt Holmes)
Date: Tue, 10 Apr 2007 19:50:04 -0500
Subject: [antlr-interest] Wrapping my head around ANTLR v3
Message-ID: <461C30BC.1090202@gnometank.net>

First off, let me say hello. This is my first message to the list. I 
recently discovered ANTLR as I was looking for tools to help my 
implement a scripting language in a C#/.NET project I am working on. I 
started writing my lexer and parser with v2, when I realized that v3 was 
available at seemed stable enough to use.

The first thing I noticed is that the lexer and parser in all of the v3 
examples seemed to be combined in a single grammar file now. Is this a 
required situation, or can I split them across multiple grammar files to 
keep the grammar clean and easy to read? Is there any particular reason 
to keep them combined? Perhaps I am too "attached to the old school", 
the ole' yacc/lex days when you not only put them in separate files, you 
used separate tools, hehe. Perhaps I am over analyzing this and keeping 
them in a single grammar file is not that big an issue, I am just 
curious if it's still possible.

Also, I noticed that in many grammars, tokens are no longer defined 
(such as tokens { FOR="for"; WHILE="while"; } ), but instead single 
parser rules are used to define those tokens (e.g. FOR: 'for'; ). Is 
there a technical reason behind this? Is it simply a conscious choice by 
the developer, or is something gained by using this method?

Apologies if this are extremely novice questions, I am just trying to 
understand some of the things that seem "odd" to me as a past user of 
older lexical tools.

Thanks,

Matt Holmes

From parrt at cs.usfca.edu  Tue Apr 10 18:05:34 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Apr 2007 18:05:34 -0700
Subject: [antlr-interest] pushed a build with fixes
Message-ID: <357847A8-401D-40E8-9DB0-4BA219A9F3A0@cs.usfca.edu>

Hi.   This build:

http://www.antlr.org/download/build/antlr-04-10-2007.18.tar.gz

has a number of bug fixes.  For example, see enclosed.

Ter
----------------
April 10, 2007

* Allows -> {...} actions now when building ASTs.  Fixed ANTLR-14.

* Allows ! on sets and wildcard now during output=AST option. Fixed  
ANTLR-17.

* Fixed ANTLR-92 bug.  Couldn't use sets with -> tree construction.

* No lexer rule for a token type is now a warning.

* Fixed set labels in lexer; ANTLR-60 bug

* Fixed problem with duplicate state variable definitions in switch-case

April 9, 2007

* Gated predicates didn't work properly in cyclic DFA.

April 7, 2007

* Couldn't have more than one set per rule it seems.  Fixed.

April 3, 2007

* Fix a problem in my unused label optimization.  Added new
   pass over actions to examine them.

* RuleReturnScope has method back:
   /** Has a value potentially if output=template; Don't use  
StringTemplate
    *  type as it then causes a dependency with ST lib.
    */
   public Object getTemplate() { return null; }

March 30, 2007

* Fixed ANTLR-8.  Labels to rules w/o return values caused compile  
errors.

* Fixed ANTLR-89; semantic predicates in lexer sometimes
   caused exception in code gen.

* Fixed ANTLR-36; remove runtime dependency with ST

March 29, 2007

* Over last few days, I've gutted how ANTLR handles sets of chars or
   tokens.  I cleaned up a lot of stuff in the grammars and added lots
   of unit tests.

....
See the README.txt

From me262c at gmail.com  Tue Apr 10 22:54:07 2007
From: me262c at gmail.com (me 262)
Date: Tue, 10 Apr 2007 22:54:07 -0700
Subject: [antlr-interest] Reading trace output and debugging in general
Message-ID: <b9fb3efe0704102254vb796a0fxd28d30eece45c0bf@mail.gmail.com>

Hi,

  I am having problems debugging grammar. I cannot find out which part
went wrong: Lexer, parser, or tree walker.

  Where can I find example/doc about the output of -traceLexer,
-traceparser, -traceTreeParser, and -traceTreeWalker options?

  Is there something similar to DumpASTVisitor in C++?

Thanks,

ME

From steve at orcldba.com  Tue Apr 10 22:56:37 2007
From: steve at orcldba.com (Steve Karam)
Date: Wed, 11 Apr 2007 01:56:37 -0400
Subject: [antlr-interest] Need help with simple grammar
Message-ID: <461C7895.9080005@orcldba.com>

I've never worked with any sort of parsing engine before; I think I am 
getting this, but still getting caught up with the huge amount of 
syntax.  Could anyone help me with a basic grammar file that can handle 
these basic types of commands?

get data from file
put data in file
change data in file
get metadata about file
change metadata about file
get dependencies of file
get dependents of file
get statistics of file

Basically it boils down to:  command what preposition target.  There 
will of course be more than this in the end, but I really need this 
basic understanding first before I can even think about what else I'll 
need to tackle.

What would a grammar file for this look like?  I'd prefer using C++, but 
I don't mind Java if that's all you know!

From lbiondi at olijo.com  Wed Apr 11 00:07:32 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Wed, 11 Apr 2007 09:07:32 +0200
Subject: [antlr-interest] pushed a build with fixes
In-Reply-To: <357847A8-401D-40E8-9DB0-4BA219A9F3A0@cs.usfca.edu>
References: <357847A8-401D-40E8-9DB0-4BA219A9F3A0@cs.usfca.edu>
Message-ID: <200704110907.32254.lbiondi@olijo.com>

> http://www.antlr.org/download/build/antlr-04-10-2007.18.tar.gz
> 
> has a number of bug fixes.  For example, see enclosed.

Great Terence, I'm gonna check it immediately... ;-)

From jaluber at gmx.de  Wed Apr 11 06:06:08 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Apr 2007 15:06:08 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461C7895.9080005@orcldba.com>
References: <461C7895.9080005@orcldba.com>
Message-ID: <461CDD40.9080509@gmx.de>

Steve Karam wrote:
> I've never worked with any sort of parsing engine before; I think I am
> getting this, but still getting caught up with the huge amount of
> syntax.  Could anyone help me with a basic grammar file that can handle
> these basic types of commands?
> 
> get data from file
> put data in file
> change data in file
> get metadata about file
> change metadata about file
> get dependencies of file
> get dependents of file
> get statistics of file
> 
> Basically it boils down to:  command what preposition target.  There
> will of course be more than this in the end, but I really need this
> basic understanding first before I can even think about what else I'll
> need to tackle.
> 
> What would a grammar file for this look like?  I'd prefer using C++, but
> I don't mind Java if that's all you know!
> 

A basic ANTLR3 grammar without semantic checks (i.e. invalid sentences
still allowed) would be:

grammar CommandLanguage;

tokens {
	GET='get';
	PUT='put';
	CHANGE='change';
	DATA='data';
	METADATA='metadata';
	DEPENDENCIES='dependencies';
	DEPENDENTS='dependents';
	STATISTICS='statistics';
	FROM='from';
	IN='in';
	ABOUT='about';
	OF='of';
	FILE='file';
}

command
	:	sentence*;

sentence
	:	verb object preposition target
	;

verb
	:	GET
	|	PUT
	|	CHANGE
	;

object
	:	DATA
	|	METADATA
	|	DEPENDENCIES
	|	DEPENDENTS
	|	STATISTICS
	;

preposition
	:	FROM
	|	IN
	|	ABOUT
	|	OF
	;

target
	:	FILE
	;

You still have to change the target rule to allow arbitrary filenames
and include predicates which filter the invalid sentences out (supposing
all your examples were entirely inclusive). I suggest to buy the Beta
Book (http://www.pragmaticprogrammer.com/titles/tpantlr/index.html) for
more in-depth information.

Best regards,
Johannes Luber

From jaluber at gmx.de  Wed Apr 11 06:19:32 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Apr 2007 15:19:32 +0200
Subject: [antlr-interest] Where to put general intialisation logic for
 a	parser?
In-Reply-To: <20070410225841.GA19199@badgers-in-foil.co.uk>
References: <461B7C9B.9020409@gmx.de>	<20070410185804.GA14075@badgers-in-foil.co.uk>	<461C07BC.8000703@gmx.de>
	<20070410225841.GA19199@badgers-in-foil.co.uk>
Message-ID: <461CE064.1050605@gmx.de>

David Holroyd wrote:
> Anyway, a more basic option; just add some setter-methods and use a
> 'builder' pattern to obtain parser instances?  Might be easier to write
> unit tests that way...
> 

You mean to write another class which does the parsing of the additional
files and giving the result to the actual parser class? I like it! :)
Keeps some of the bookkeeping out of the grammar.

Best regards,
Johannes Luber

From jaluber at gmx.de  Wed Apr 11 06:32:22 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Apr 2007 15:32:22 +0200
Subject: [antlr-interest] Wrapping my head around ANTLR v3
In-Reply-To: <461C30BC.1090202@gnometank.net>
References: <461C30BC.1090202@gnometank.net>
Message-ID: <461CE366.9070507@gmx.de>

Matt Holmes wrote:
> First off, let me say hello. This is my first message to the list. I
> recently discovered ANTLR as I was looking for tools to help my
> implement a scripting language in a C#/.NET project I am working on. I
> started writing my lexer and parser with v2, when I realized that v3 was
> available at seemed stable enough to use.

The C# language target for ANTLR 3 is not working yet, so switching over
should be postponed.

> The first thing I noticed is that the lexer and parser in all of the v3
> examples seemed to be combined in a single grammar file now. Is this a
> required situation, or can I split them across multiple grammar files to
> keep the grammar clean and easy to read? Is there any particular reason
> to keep them combined? Perhaps I am too "attached to the old school",
> the ole' yacc/lex days when you not only put them in separate files, you
> used separate tools, hehe. Perhaps I am over analyzing this and keeping
> them in a single grammar file is not that big an issue, I am just
> curious if it's still possible.

As I don't know ANTLR 2 I can't answer this question. It is possible to
create multipass grammars, which reside in separate files, but those may
not be the same thing.

> Also, I noticed that in many grammars, tokens are no longer defined
> (such as tokens { FOR="for"; WHILE="while"; } ), but instead single
> parser rules are used to define those tokens (e.g. FOR: 'for'; ). Is
> there a technical reason behind this? Is it simply a conscious choice by
> the developer, or is something gained by using this method?

The tokens { ... } is still working and useful in situations where one
wants to define the keywords of the programming language. It isn't
required to define everything at this place because you may not need it
otherwise or it is easier to use and to read a short string or character
in the rule.

> Apologies if this are extremely novice questions, I am just trying to
> understand some of the things that seem "odd" to me as a past user of
> older lexical tools.

If you want to use ANTLR 3 in a more intense way than now I suggest to
buy the Definitive Guide at
http://www.pragmaticprogrammer.com/titles/tpantlr/index.html
. Definitely worth the price and able to answer most of your questions. :)

Best regards,
Johannes Luber

From steve at orcldba.com  Wed Apr 11 07:00:31 2007
From: steve at orcldba.com (Steve Karam)
Date: Wed, 11 Apr 2007 10:00:31 -0400
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461CDD40.9080509@gmx.de>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
Message-ID: <461CE9FF.4000400@orcldba.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070411/4e0b174a/attachment-0001.html 

From jaluber at gmx.de  Wed Apr 11 07:22:10 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Apr 2007 16:22:10 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461CE9FF.4000400@orcldba.com>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<461CE9FF.4000400@orcldba.com>
Message-ID: <461CEF12.4070901@gmx.de>

Steve Karam wrote:
> Thanks Johannes, this compiled great as Java...any idea how I can
> compile it as C?
> 
> I tried adding this:
> 
> options {
>     language=C;
> }
> 
> But I received these errors:

The last beta has an outdated C target. Try
http://www.antlr.org/download/build/antlr-04-10-2007.18.tar.gz , if the
problem still persists. The C target has been updated in one of the
daily builds, but in case it is broken again look for an older one.

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Wed Apr 11 07:38:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Apr 2007 07:38:46 -0700
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461CDD40.9080509@gmx.de>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
Message-ID: <056A00BA-0DA4-4D2D-B86B-E935F3F9FBEB@cs.usfca.edu>

Hi Johannes,

This would be an AWESOME little FAQ or tutorial or somethign on the  
wiki.  Can you join and add?  I'm afraid I'm going to need help  
getting some doc together for v3 before we release. ;)

Thanks!
Ter

From jimi at temporal-wave.com  Wed Apr 11 09:44:43 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Apr 2007 09:44:43 -0700
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461CE9FF.4000400@orcldba.com>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<461CE9FF.4000400@orcldba.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252328@wavemachine.temporal-wave.com>

Steve,

 

In the beta 6 release I was out of sync with the codegen template
interface. Please download the latest snapshot and you will find that it
works as advertised.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Steve Karam
Sent: Wednesday, April 11, 2007 7:01 AM
To: Johannes Luber
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Need help with simple grammar

 

Thanks Johannes, this compiled great as Java...any idea how I can
compile it as C?

I tried adding this:

options {
    language=C;
}

But I received these errors:

ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)  1989-2007
error(10):  internal error: group C does not satisfy interface
ANTLRCore: missing templates [lexerRulePropertyRef_stop]

error(10):  internal error: group C does not satisfy interface
ANTLRCore: mismatched arguments on these templates [outputFile(LEXER,
PARSER, TREE_PARSER, actionScope, actions, docComment, recognizer, name,
tokens, tokenNames, rules, cyclicDFAs, bitsets, buildTemplate, buildAST,
rewrite, profile, backtracking, synpreds, memoize, numRules, fileName,
ANTLRVersion, generatedTimestamp, trace, scopes, superClass, literals),
optional headerFile(LEXER, PARSER, TREE_PARSER, actionScope, actions,
docComment, recognizer, name, tokens, tokenNames, rules, cyclicDFAs,
bitsets, buildTemplate, buildAST, rewrite, profile, backtracking,
synpreds, memoize, numRules, fileName, ANTLRVersion, generatedTimestamp,
trace, scopes, superClass, literals), listLabel(label, elem)]

error(10):  internal error: mql.g : java.util.NoSuchElementException: no
such attribute: buildAST in template context [headerFile]
org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.j
ava:739)
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java
:600)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:341)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)

I know that this is probably because I'm missing class declarations in
the language file...but I thought grammar files were always
cross-platform?  Maybe I'm expecting too much.  ;)

Johannes Luber wrote: 

Steve Karam wrote:
  

	I've never worked with any sort of parsing engine before; I
think I am
	getting this, but still getting caught up with the huge amount
of
	syntax.  Could anyone help me with a basic grammar file that can
handle
	these basic types of commands?
	 
	get data from file
	put data in file
	change data in file
	get metadata about file
	change metadata about file
	get dependencies of file
	get dependents of file
	get statistics of file
	 
	Basically it boils down to:  command what preposition target.
There
	will of course be more than this in the end, but I really need
this
	basic understanding first before I can even think about what
else I'll
	need to tackle.
	 
	What would a grammar file for this look like?  I'd prefer using
C++, but
	I don't mind Java if that's all you know!
	 
	    

 
A basic ANTLR3 grammar without semantic checks (i.e. invalid sentences
still allowed) would be:
 
grammar CommandLanguage;
 
tokens {
        GET='get';
        PUT='put';
        CHANGE='change';
        DATA='data';
        METADATA='metadata';
        DEPENDENCIES='dependencies';
        DEPENDENTS='dependents';
        STATISTICS='statistics';
        FROM='from';
        IN='in';
        ABOUT='about';
        OF='of';
        FILE='file';
}
 
command
        :       sentence*;
 
sentence
        :       verb object preposition target
        ;
 
verb
        :       GET
        |       PUT
        |       CHANGE
        ;
 
object
        :       DATA
        |       METADATA
        |       DEPENDENCIES
        |       DEPENDENTS
        |       STATISTICS
        ;
 
preposition
        :       FROM
        |       IN
        |       ABOUT
        |       OF
        ;
 
target
        :       FILE
        ;
 
You still have to change the target rule to allow arbitrary filenames
and include predicates which filter the invalid sentences out (supposing
all your examples were entirely inclusive). I suggest to buy the Beta
Book (http://www.pragmaticprogrammer.com/titles/tpantlr/index.html) for
more in-depth information.
 
Best regards,
Johannes Luber
 
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070411/d6d39cf9/attachment.html 

From jaluber at gmx.de  Wed Apr 11 11:19:29 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Apr 2007 20:19:29 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <056A00BA-0DA4-4D2D-B86B-E935F3F9FBEB@cs.usfca.edu>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<056A00BA-0DA4-4D2D-B86B-E935F3F9FBEB@cs.usfca.edu>
Message-ID: <461D26B1.9080904@gmx.de>

Terence Parr wrote:
> Hi Johannes,
> 
> This would be an AWESOME little FAQ or tutorial or somethign on the
> wiki.  Can you join and add?  I'm afraid I'm going to need help getting
> some doc together for v3 before we release. ;)
> 
> Thanks!
> Ter

Not a problem on my side, but the login of your wiki says, that
everything I add must be free of third-party rights. So can I use the
task in Steve Karam's email without violating this (at least the part
with the language spec)? It would be nice, if he could give me explicit
permission to use relevant bits.

Otherwise, I could add a short treatise on EBNFs, difference between
lexer and parser rules, choosing a real filename and when to use the
tokens specifications.

Lastly, I've added 8 erratas after the freeze - maybe you can still look
over them and mail a changed version to your editor? As all erratas are
in the last 100 pages the layout person won't probably have to do any
rework. After that, are you going to work through all the open issues in
the emails? I haven't looked yet, if your latest build solves my
mentioned problems, as I was busy with finishing your book.

Best regards,
Johannes Luber


From steve at orcldba.com  Wed Apr 11 11:49:12 2007
From: steve at orcldba.com (Steve Karam)
Date: Wed, 11 Apr 2007 14:49:12 -0400
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461D26B1.9080904@gmx.de>
References: <461C7895.9080005@orcldba.com>
	<461CDD40.9080509@gmx.de>	<056A00BA-0DA4-4D2D-B86B-E935F3F9FBEB@cs.usfca.edu>
	<461D26B1.9080904@gmx.de>
Message-ID: <461D2DA8.8030400@orcldba.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070411/39f4a972/attachment.html 

From parrt at cs.usfca.edu  Wed Apr 11 12:07:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Apr 2007 12:07:27 -0700
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461D26B1.9080904@gmx.de>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<056A00BA-0DA4-4D2D-B86B-E935F3F9FBEB@cs.usfca.edu>
	<461D26B1.9080904@gmx.de>
Message-ID: <6698F9B9-64DB-48FF-8F07-C8E21194FF77@cs.usfca.edu>


On Apr 11, 2007, at 11:19 AM, Johannes Luber wrote:
> Lastly, I've added 8 erratas after the freeze - maybe you can still  
> look
> over them and mail a changed version to your editor? As all erratas  
> are

Just got word from publisher; they will try to let me work on them.   
It's in layout.

> in the last 100 pages the layout person won't probably have to do any
> rework. After that, are you going to work through all the open  
> issues in
> the emails? I haven't looked yet, if your latest build solves my
> mentioned problems, as I was busy with finishing your book.

Have I added them as bugs?  If not, can you point me at them? I'll add.

Ter


From jaluber at gmx.de  Wed Apr 11 14:50:05 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 11 Apr 2007 23:50:05 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <6698F9B9-64DB-48FF-8F07-C8E21194FF77@cs.usfca.edu>
References: <461C7895.9080005@orcldba.com>
	<461CDD40.9080509@gmx.de>	<056A00BA-0DA4-4D2D-B86B-E935F3F9FBEB@cs.usfca.edu>	<461D26B1.9080904@gmx.de>
	<6698F9B9-64DB-48FF-8F07-C8E21194FF77@cs.usfca.edu>
Message-ID: <461D580D.2050400@gmx.de>

Terence Parr wrote:
> On Apr 11, 2007, at 11:19 AM, Johannes Luber wrote:
>> in the last 100 pages the layout person won't probably have to do any
>> rework. After that, are you going to work through all the open issues in
>> the emails? I haven't looked yet, if your latest build solves my
>> mentioned problems, as I was busy with finishing your book.
> 
> Have I added them as bugs?  If not, can you point me at them? I'll add.

It doesn't seem, as if you had added them already. Furthermore I don't
have the confirmation, that the issues lie with ANTLR, but that's where
I lost the trace. Look into the last emails with the subject "Java
doesn't find class definition" which I wrote. Two of them contain the
required descriptions. Regarding the wiki tutorial - I'll write it in
the next two days or so because of time constraints. Just FYI.

Best regards,
Johannes Luber

From porcelli at uol.com.br  Wed Apr 11 19:43:02 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Wed, 11 Apr 2007 23:43:02 -0300
Subject: [antlr-interest] Problemns with Predicate using last version...
Message-ID: <ee873c070704111943r32be06eco5b50f2f805777ebe@mail.gmail.com>

I started today develop a Visual Basic 6 grammar based using ANTLR v3
(last build).

I started with just the lexer rules... here is my job result:

grammar VBGrammar;

@lexer::members
{
boolean isLineContinuation = false;
}

compilationUnit
	:	statementList*
	;

statementList
	:	identifier
	|	numeric
	|	label
	;

identifier
	:	IDENTIFIER
	;

numeric	:	NUMERIC
	;

label	:	LABEL_STATEMENT
	;

LABEL_STATEMENT
	: {!isLineContinuation && getCharPositionInLine() == 0}?=> WS?
(LABEL_NAME|DIGIT+ { token = Token.SKIP_TOKEN;})
	;

COMMENT
	:	'\'' (ANY_EXCLUDING_NL
	{
		if(input.LA(1) == '_' && (input.LA(2) == '\r' || input.LA(2) == '\n')){
		    input.consume();
		    input.consume();
		    if (input.LA(1) == '\n'){
			input.consume();
		    }
		}
	})*
		{token = Token.SKIP_TOKEN;}
	;

IDENTIFIER
	: (DIGIT|'_')* LETTER ('-' | LETTER|DIGIT|'_' | '$' | '#')*
	;

NUMERIC
	:	DIGIT+ ('.' DIGIT+)
	|	DIGIT+
	;

WS      : (' ' | '\t' )+
	{ token = Token.SKIP_TOKEN;}
        ;

LINE_CONTINUATION
	:	'_' F_NL
	{ isLineContinuation = true; }
	;

NL 	: ('\r' | '\n')+
	{ token = Token.SKIP_TOKEN; isLineContinuation = false;}
    	;

fragment
LABEL_NAME
	: LETTER (LETTER | '_' | DIGIT)+ ':'
	;

fragment
LETTER
	: 'a'..'z' | 'A'..'Z'
	;

fragment
DIGIT
	: '0'..'9'
	;

fragment
ANY_EXCLUDING_NL
	: '\u0000'..'\t'|'\u000B'..'\f'|'\u000E'..'\uFFFE'
	;

fragment
F_NL 	: ('\r' | '\n')+
	;

I use to test this grammar this file:

'teste
'dkjshfkjs ksjdhf lksjhdf lskjhf lskjdhf ldfsdf _
dsdfsgfhsffd _
asdkjhskjdhfhkj _
soghskjs djkfhglksj lkjshdf glkjhsdf gsfg sdfg


20 teste _
30 teste _
40 sss
50 asdsdfsdf dsfad fjjh
label: teste

Everything seens to be fine... but I got this error when I try to test
this grammar:

line 8:2 no viable alternative at character ' '
line 8:3 no viable alternative at character 't'
line 8:4 no viable alternative at character 'e'
line 8:5 no viable alternative at character 's'
line 8:6 no viable alternative at character 't'
line 8:7 no viable alternative at character 'e'
line 8:8 no viable alternative at character ' '
line 9:0 no viable alternative at character '3'
line 9:1 no viable alternative at character '0'
line 9:2 no viable alternative at character ' '
line 9:3 no viable alternative at character 't'
line 9:4 no viable alternative at character 'e'
line 9:5 no viable alternative at character 's'
line 9:6 no viable alternative at character 't'
line 9:7 no viable alternative at character 'e'
line 9:8 no viable alternative at character ' '
line 10:0 no viable alternative at character '4'
line 10:1 no viable alternative at character '0'
line 10:2 no viable alternative at character ' '
line 10:3 no viable alternative at character 's'
line 10:4 no viable alternative at character 's'
line 10:5 no viable alternative at character 's'
line 11:2 no viable alternative at character ' '
line 11:3 no viable alternative at character 'a'
line 11:4 no viable alternative at character 's'
line 11:5 no viable alternative at character 'd'
line 11:6 no viable alternative at character 's'
line 11:7 no viable alternative at character 'd'
line 11:8 no viable alternative at character 'f'
line 11:9 no viable alternative at character 's'
line 11:10 no viable alternative at character 'd'
line 11:11 no viable alternative at character 'f'
line 11:12 no viable alternative at character ' '
line 11:13 no viable alternative at character 'd'
line 11:14 no viable alternative at character 's'
line 11:15 no viable alternative at character 'f'
line 11:16 no viable alternative at character 'a'
line 11:17 no viable alternative at character 'd'
line 11:18 no viable alternative at character ' '
line 11:19 no viable alternative at character 'f'
line 11:20 no viable alternative at character 'j'
line 11:21 no viable alternative at character 'j'
line 11:22 no viable alternative at character 'h'
line 12:5 no viable alternative at character ':'
line 12:6 no viable alternative at character ' '
line 12:7 no viable alternative at character 't'
line 12:8 no viable alternative at character 'e'
line 12:9 no viable alternative at character 's'
line 12:10 no viable alternative at character 't'
line 12:11 no viable alternative at character 'e'

Any suggestion?

Best Regards,
Alexandre Porcelli

From Mariusz_Buras at mentor.com  Thu Apr 12 01:35:33 2007
From: Mariusz_Buras at mentor.com (Buras, Mariusz)
Date: Thu, 12 Apr 2007 10:35:33 +0200
Subject: [antlr-interest]  Newbie problem..
In-Reply-To: <ee873c070704111943r32be06eco5b50f2f805777ebe@mail.gmail.com>
References: <ee873c070704111943r32be06eco5b50f2f805777ebe@mail.gmail.com>
Message-ID: <0A404B2A01F376419FCAC6F3C25FEDC50184D88A@svr-dem-exc-02.mgc.mentorg.com>

Hi,

First of all I'd like to apologize for spamming the list but I'm facing
the wall and You are my last resort :)
Namely, I'm facing a problem with antlr 2.77 runtime library not linking
against my project. I did ./configure and make to build the library
(libantl.a) then to put it into my lib directory. Upon link I get this:
http://amnesty.scene.pl/~sqward/sq/output.txt
I compile under Cygwin. My first guess was wrong name space and later I
suspected broken binutils (well, last resort thinking...). Are there
additional dependencies I have to consider ? It looks pretty odd as I
can find all missing symbols (or at least its names) in the hex editor
all right. Can a good soul hint me on this? I know this is boring and
probably was discussed here a hundred times, but antlr-interest archive
is broken for me :/

Greetings,
M.Buras

From crickett at lanl.gov  Thu Apr 12 09:56:25 2007
From: crickett at lanl.gov (Christopher D. Rickett)
Date: Thu, 12 Apr 2007 10:56:25 -0600 (MDT)
Subject: [antlr-interest] generated class/file names..
Message-ID: <Pine.LNX.4.64.0704121051180.22702@lennox.lanl.gov>

hi all,

i asked a while back how to get antlr 3.0b6 to use the grammar names 
provided for the names of the generated classes/files, but did not get a 
response, so i'll ask again.  i have separate grammars for the lexer and 
parser, and would like antlr to generate the class names to match the 
names provided.  this is what antlr-3.0b4/5 did.  is there a way to make 
3.0b6 behave the same way?

thanks.
Chris


From chriswood at iname.com  Thu Apr 12 10:47:11 2007
From: chriswood at iname.com (Chris Wood)
Date: Thu, 12 Apr 2007 18:47:11 +0100
Subject: [antlr-interest] Antlr v3: Custom actions and custom tokens
Message-ID: <859C3393906553D0FA6656E5@[192.168.1.100]>


Dear all,

Are there any docs or posts explaining how to implement and then use custom 
actions (to modify a returned token) in ANTLR v3? I assume that a custom 
token class will be required and that this must somehow be fitted into the 
grammar in question. I have searched for advice across the ANTLR site 
without much success so far!

Thanks a lot in advance for any pointers.

Kind regards,

Chris Wood





From parrt at cs.usfca.edu  Thu Apr 12 12:02:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 12:02:09 -0700
Subject: [antlr-interest] Java doesn't find class definition
In-Reply-To: <4613A7A9.6030209@gmx.de>
References: <46126B75.2080401@gmx.de> <46126EF2.7040700@relivethefuture.com>
	<4613A7A9.6030209@gmx.de>
Message-ID: <ACFCA36D-5DE2-4CFD-9460-067CE1E7F123@cs.usfca.edu>


On Apr 4, 2007, at 6:27 AM, Johannes Luber wrote:
> Regarding the ANTLR bugs mentioned above: The generated file creates
> three errors. I've used the most recent build of March 30th for  
> ANTLR to
> generate the file.
>
> The rule
>
> NEW_LINE
> 	:	'\u000D' // Carriage return character
> 	|	'\u000A' // Line feed character
> 	|	'\u000D\u000A' // Carriage return character followed by line feed
> character
> 	|	'\u0085' // Next line character
> 	|	'\u2028' // Line separator character
> 	|	'\u2029' // Paragraph separator character
> 	;

Generated code won't work as \u000D is translated early (before  
compilation) by java compiler:

String s = "\u000D\u000A";

won't compile for example.  It sees a newline in a string literal.

This is a Java "issue" really.  I think you'll have to use \r and \n.

> The last error is for the rule
>
> SIMPLE_ESCAPE_SEQUENCE
> 	:	'\\\''
> 	|	'\\\"'
> 	|	'\\\\'
> 	|	'\\0'
> 	|	'\\a'
> 	|	'\\b'
> 	|	'\\f'
> 	|	'\\n'
> 	|	'\\r'
> 	|	'\\t'
> 	|	'\\v'
> 	;

Weird

SIMPLE_ESCAPE_SEQUENCE
         :       '\"'
         ;

generates:

match('\"');

but

SIMPLE_ESCAPE_SEQUENCE
         :       '\\\"'
         ;

gens

match("\\\\"");

Added to list.

http://www.antlr.org:8888/browse/ANTLR-105

Ter

From parrt at cs.usfca.edu  Thu Apr 12 12:03:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 12:03:04 -0700
Subject: [antlr-interest] generated class/file names..
In-Reply-To: <Pine.LNX.4.64.0704121051180.22702@lennox.lanl.gov>
References: <Pine.LNX.4.64.0704121051180.22702@lennox.lanl.gov>
Message-ID: <682336C0-3799-41CF-9DEC-751A89EC1E03@cs.usfca.edu>


On Apr 12, 2007, at 9:56 AM, Christopher D. Rickett wrote:

> hi all,
>
> i asked a while back how to get antlr 3.0b6 to use the grammar  
> names provided for the names of the generated classes/files, but  
> did not get a response, so i'll ask again.  i have separate  
> grammars for the lexer and parser, and would like antlr to generate  
> the class names to match the names provided.  this is what  
> antlr-3.0b4/5 did.  is there a way to make 3.0b6 behave the same way?

Nope.  grammar T goes to TParser or TLexer or T for parser, lexer,  
and tree grammars.

Ter


From parrt at cs.usfca.edu  Thu Apr 12 12:09:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 12:09:13 -0700
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
References: <461786DE.6000801@shmuelhome.mine.nu>
	<E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
Message-ID: <E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>


On Apr 12, 2007, at 2:58 AM, Shmuel Siegel wrote:
> Among other rules, I have these two lexer rules.
>  SHIN:
>     '\u00d7' '\u00a9' ('\u00d7' '\u0081')? ('\u00d7' '\u0082')?;
>  TUF:
>     '\u00d7' '\u00aa';
>
> The code produced for "SHIN" properly recognizes that the optional  
> first
>
> parenthesis needs two terms to match but the second parenthesis  
> will try
>
> to match if the first character matches. Therefore I get a recognition
> exception from the sequence '\u00d7' '\u00a9' '\u00d7' '\u00aa'.

Yep, ANTLR is doing what I would expect; just not would you want. ;)

ANTLR decides that upon '\u00d7' '\u00a9' it should predict SHIN and  
upon '\u00d7' '\u00aa' it should predict TUF.  Once inside SHIN,  
ANTLR cannot predict which token will come next.  That's not  
something lexers specify (parsers do that).  ANY token can follow.   
So, ANTLR matches greedily.  You need a backtracking parser or maybe  
try k=2 in the second subrule.

Ter



From porcelli at uol.com.br  Thu Apr 12 12:13:37 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Thu, 12 Apr 2007 16:13:37 -0300
Subject: [antlr-interest] Problemns with Predicate using last version...
In-Reply-To: <ee873c070704121211q7a535841iab7ab477497b3197@mail.gmail.com>
References: <ee873c070704111943r32be06eco5b50f2f805777ebe@mail.gmail.com>
	<ee873c070704121211q7a535841iab7ab477497b3197@mail.gmail.com>
Message-ID: <ee873c070704121213he9d4da2s5939f7e3d903e742@mail.gmail.com>

I still trying to fix it.. and I could observe that when I change the
following Lexical Rules using a simple semantic predicate, it works
(the result is OK):

 LABEL_STATEMENT
         : {!isLineContinuation && getCharPositionInLine() == 0}? WS? LABEL_NAME
         ;

 LINE_NUMBER
         : {!isLineContinuation && getCharPositionInLine() == 0}? WS?
LINE_NUMBER_DIGIT
         { token = Token.SKIP_TOKEN;}
         ;

 But... I got an output messages reporting some problems with a failed
predicate:

  line 8:2 rule LABEL_STATEMENT failed predicate: {!isLineContinuation
 && getCharPositionInLine() == 0}?
  line 9:2 rule LABEL_STATEMENT failed predicate: {!isLineContinuation
 && getCharPositionInLine() == 0}?
  line 10:2 rule LABEL_STATEMENT failed predicate:
{!isLineContinuation  && getCharPositionInLine() == 0}?
  line 11:2 rule LABEL_STATEMENT failed predicate:
{!isLineContinuation  && getCharPositionInLine() == 0}?
  line 11:12 rule LABEL_STATEMENT failed predicate:
{!isLineContinuation  && getCharPositionInLine() == 0}?
  line 11:18 rule LABEL_STATEMENT failed predicate:
{!isLineContinuation  && getCharPositionInLine() == 0}?
  line 12:6 rule LABEL_STATEMENT failed predicate:
{!isLineContinuation  && getCharPositionInLine() == 0}?

Any suggestion? Any help is welcomed!

Thanks in Advance!
Alexandre Porcelli

>
> On 4/11/07, Alexandre Porcelli <porcelli at uol.com.br> wrote:
> > I started today develop a Visual Basic 6 grammar based using ANTLR v3
> > (last build).
> >
> > I started with just the lexer rules... here is my job result:
> >
> > grammar VBGrammar;
> >
> > @lexer::members
> > {
> > boolean isLineContinuation = false;
> > }
> >
> > compilationUnit
> >         :       statementList*
> >         ;
> >
> > statementList
> >         :       identifier
> >         |       numeric
> >         |       label
> >         ;
> >
> > identifier
> >         :       IDENTIFIER
> >         ;
> >
> > numeric :       NUMERIC
> >         ;
> >
> > label   :       LABEL_STATEMENT
> >         ;
> >
> > LABEL_STATEMENT
> >         : {!isLineContinuation && getCharPositionInLine() == 0}?=> WS?
> > (LABEL_NAME|DIGIT+ { token = Token.SKIP_TOKEN;})
> >         ;
> >
> > COMMENT
> >         :       '\'' (ANY_EXCLUDING_NL
> >         {
> >                 if(input.LA(1) == '_' && (input.LA(2) == '\r' || input.LA(2) == '\n')){
> >                     input.consume();
> >                     input.consume();
> >                     if (input.LA(1) == '\n'){
> >                         input.consume();
> >                     }
> >                 }
> >         })*
> >                 {token = Token.SKIP_TOKEN;}
> >         ;
> >
> > IDENTIFIER
> >         : (DIGIT|'_')* LETTER ('-' | LETTER|DIGIT|'_' | '$' | '#')*
> >         ;
> >
> > NUMERIC
> >         :       DIGIT+ ('.' DIGIT+)
> >         |       DIGIT+
> >         ;
> >
> > WS      : (' ' | '\t' )+
> >         { token = Token.SKIP_TOKEN;}
> >         ;
> >
> > LINE_CONTINUATION
> >         :       '_' F_NL
> >         { isLineContinuation = true; }
> >         ;
> >
> > NL      : ('\r' | '\n')+
> >         { token = Token.SKIP_TOKEN; isLineContinuation = false;}
> >         ;
> >
> > fragment
> > LABEL_NAME
> >         : LETTER (LETTER | '_' | DIGIT)+ ':'
> >         ;
> >
> > fragment
> > LETTER
> >         : 'a'..'z' | 'A'..'Z'
> >         ;
> >
> > fragment
> > DIGIT
> >         : '0'..'9'
> >         ;
> >
> > fragment
> > ANY_EXCLUDING_NL
> >         : '\u0000'..'\t'|'\u000B'..'\f'|'\u000E'..'\uFFFE'
> >         ;
> >
> > fragment
> > F_NL    : ('\r' | '\n')+
> >         ;
> >
> > I use to test this grammar this file:
> >
> > 'teste
> > 'dkjshfkjs ksjdhf lksjhdf lskjhf lskjdhf ldfsdf _
> > dsdfsgfhsffd _
> > asdkjhskjdhfhkj _
> > soghskjs djkfhglksj lkjshdf glkjhsdf gsfg sdfg
> >
> >
> > 20 teste _
> > 30 teste _
> > 40 sss
> > 50 asdsdfsdf dsfad fjjh
> > label: teste
> >
> > Everything seens to be fine... but I got this error when I try to test
> > this grammar:
> >
> > line 8:2 no viable alternative at character ' '
> > line 8:3 no viable alternative at character 't'
> > line 8:4 no viable alternative at character 'e'
> > line 8:5 no viable alternative at character 's'
> > line 8:6 no viable alternative at character 't'
> > line 8:7 no viable alternative at character 'e'
> > line 8:8 no viable alternative at character ' '
> > line 9:0 no viable alternative at character '3'
> > line 9:1 no viable alternative at character '0'
> > line 9:2 no viable alternative at character ' '
> > line 9:3 no viable alternative at character 't'
> > line 9:4 no viable alternative at character 'e'
> > line 9:5 no viable alternative at character 's'
> > line 9:6 no viable alternative at character 't'
> > line 9:7 no viable alternative at character 'e'
> > line 9:8 no viable alternative at character ' '
> > line 10:0 no viable alternative at character '4'
> > line 10:1 no viable alternative at character '0'
> > line 10:2 no viable alternative at character ' '
> > line 10:3 no viable alternative at character 's'
> > line 10:4 no viable alternative at character 's'
> > line 10:5 no viable alternative at character 's'
> > line 11:2 no viable alternative at character ' '
> > line 11:3 no viable alternative at character 'a'
> > line 11:4 no viable alternative at character 's'
> > line 11:5 no viable alternative at character 'd'
> > line 11:6 no viable alternative at character 's'
> > line 11:7 no viable alternative at character 'd'
> > line 11:8 no viable alternative at character 'f'
> > line 11:9 no viable alternative at character 's'
> > line 11:10 no viable alternative at character 'd'
> > line 11:11 no viable alternative at character 'f'
> > line 11:12 no viable alternative at character ' '
> > line 11:13 no viable alternative at character 'd'
> > line 11:14 no viable alternative at character 's'
> > line 11:15 no viable alternative at character 'f'
> > line 11:16 no viable alternative at character 'a'
> > line 11:17 no viable alternative at character 'd'
> > line 11:18 no viable alternative at character ' '
> > line 11:19 no viable alternative at character 'f'
> > line 11:20 no viable alternative at character 'j'
> > line 11:21 no viable alternative at character 'j'
> > line 11:22 no viable alternative at character 'h'
> > line 12:5 no viable alternative at character ':'
> > line 12:6 no viable alternative at character ' '
> > line 12:7 no viable alternative at character 't'
> > line 12:8 no viable alternative at character 'e'
> > line 12:9 no viable alternative at character 's'
> > line 12:10 no viable alternative at character 't'
> > line 12:11 no viable alternative at character 'e'
> >
> > Any suggestion?
> >
> > Best Regards,
> > Alexandre Porcelli
> >
>

From parrt at cs.usfca.edu  Thu Apr 12 12:21:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 12:21:42 -0700
Subject: [antlr-interest] should TokenStream interface have a size() method?
Message-ID: <0213082F-9666-4CF5-96E7-AE2BEC03B26F@cs.usfca.edu>

Not always meaningful but it is for common case where we buffer  
everything up.

/** A stream of tokens accessing tokens from a TokenSource */
public interface TokenStream extends IntStream {...}

Ter

From parrt at cs.usfca.edu  Thu Apr 12 12:33:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 12:33:56 -0700
Subject: [antlr-interest] should TokenStream interface have a size()
	method?
In-Reply-To: <0213082F-9666-4CF5-96E7-AE2BEC03B26F@cs.usfca.edu>
References: <0213082F-9666-4CF5-96E7-AE2BEC03B26F@cs.usfca.edu>
Message-ID: <3FC8E314-DB7A-4106-B68E-155AECB9F9FB@cs.usfca.edu>

never mind...duh.  The IntStream has it! :)

Ter
On Apr 12, 2007, at 12:21 PM, Terence Parr wrote:

> Not always meaningful but it is for common case where we buffer  
> everything up.
>
> /** A stream of tokens accessing tokens from a TokenSource */
> public interface TokenStream extends IntStream {...}
>
> Ter


From parrt at cs.usfca.edu  Thu Apr 12 12:40:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 12:40:33 -0700
Subject: [antlr-interest] Antlr v3: Custom actions and custom tokens
In-Reply-To: <859C3393906553D0FA6656E5@[192.168.1.100]>
References: <859C3393906553D0FA6656E5@[192.168.1.100]>
Message-ID: <8C4F340A-E80D-4FE3-9084-38883EC71488@cs.usfca.edu>


On Apr 12, 2007, at 10:47 AM, Chris Wood wrote:

>
> Dear all,
>
> Are there any docs or posts explaining how to implement and then  
> use custom actions (to modify a returned token) in ANTLR v3? I  
> assume that a custom token class will be required and that this  
> must somehow be fitted into the grammar in question. I have  
> searched for advice across the ANTLR site without much success so far!
>
> Thanks a lot in advance for any pointers.

I added a FAQ entry:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844

Ter


From bfarrell at raytheon.com  Thu Apr 12 14:12:01 2007
From: bfarrell at raytheon.com (Robert E Farrell)
Date: Thu, 12 Apr 2007 16:12:01 -0500
Subject: [antlr-interest] antlr-v3 getting started learning curve steep
Message-ID: <OF2D06FAD3.F8439626-ON862572BB.007354C2-862572BB.007474FF@mck.us.ray.com>

First confession time: I'm a newbie to Antlr and I don't speak Java.

I was trying to use Antlr 2.7.7 but had some bugs in my grammar where it
would not recognize things I thought it should.

Because of the availablity of interactive antlrworks, got that plus
antlr-3.0b6.

Was able to use antlrworks to figure out some of the problems. Now want to
compile it to C++ which I can compile/link into a standalone recogniser
which I can run against my around 1000 test files.

But... the directions on installing/running v3 from the command line don't
work or are out of date: I don't have any jar files in .../antlr-3.0b6.
When I try to build using the directions in README, I max out at 100
errors. like:

org/antlr/tool/Grammar.java:42: package org.antlr.stringtemplate does not
exist
import org.antlr.stringtemplate.StringTemplate;
                                ^
org/antlr/tool/Grammar.java:43: package org.antlr.stringtemplate.language
does not exist
import org.antlr.stringtemplate.language.AngleBracketTemplateLexer;
                                         ^
org/antlr/tool/GrammarAST.java:37: package org.antlr.stringtemplate does
not exist
import org.antlr.stringtemplate.StringTemplate;
                                ^

Thanks for your help.

Bob Farrell


From parrt at cs.usfca.edu  Thu Apr 12 14:15:02 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 14:15:02 -0700
Subject: [antlr-interest] antlr-v3 getting started learning curve steep
In-Reply-To: <OF2D06FAD3.F8439626-ON862572BB.007354C2-862572BB.007474FF@mck.us.ray.com>
References: <OF2D06FAD3.F8439626-ON862572BB.007354C2-862572BB.007474FF@mck.us.ray.com>
Message-ID: <CF40763A-62C7-49A5-8C07-5BAFE186771B@cs.usfca.edu>

Hi. You'll need to add all the lib/*.jar files.  This includes  
StringTemplate. :)  Note that the C++ output of v3 is not ready yet.
Ter
On Apr 12, 2007, at 2:12 PM, Robert E Farrell wrote:

> First confession time: I'm a newbie to Antlr and I don't speak Java.
>
> I was trying to use Antlr 2.7.7 but had some bugs in my grammar  
> where it
> would not recognize things I thought it should.
>
> Because of the availablity of interactive antlrworks, got that plus
> antlr-3.0b6.
>
> Was able to use antlrworks to figure out some of the problems. Now  
> want to
> compile it to C++ which I can compile/link into a standalone  
> recogniser
> which I can run against my around 1000 test files.
>
> But... the directions on installing/running v3 from the command  
> line don't
> work or are out of date: I don't have any jar files in .../ 
> antlr-3.0b6.
> When I try to build using the directions in README, I max out at 100
> errors. like:
>
> org/antlr/tool/Grammar.java:42: package org.antlr.stringtemplate  
> does not
> exist
> import org.antlr.stringtemplate.StringTemplate;
>                                 ^
> org/antlr/tool/Grammar.java:43: package  
> org.antlr.stringtemplate.language
> does not exist
> import org.antlr.stringtemplate.language.AngleBracketTemplateLexer;
>                                          ^
> org/antlr/tool/GrammarAST.java:37: package org.antlr.stringtemplate  
> does
> not exist
> import org.antlr.stringtemplate.StringTemplate;
>                                 ^
>
> Thanks for your help.
>
> Bob Farrell
>


From parrt at cs.usfca.edu  Thu Apr 12 14:30:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 14:30:25 -0700
Subject: [antlr-interest] looking for compiler guru with ANTLR experience
References: <55ABAEA849135644BD15A3B63CC986FF782592@xmbco501.northgrum.com>
Message-ID: <24134FAF-4FB4-49C6-B972-8E241F652FCE@cs.usfca.edu>

Hi,

Northrop Grumman is looking for a contract or employee type  
relationship for a compiler maniac with ANTLR experience.   
Nationality might be an issue long term.  Contact is CC'd above.

Regards,
Terence

Begin forwarded message:

> From: "Repetto, Gary \(Mission Systems\)" <Gary.Repetto at ngc.com>
> Date: April 3, 2007 9:43:46 AM PDT
> To: <parrt at cs.usfca.edu>
> Subject: Request for suggestions
>
> Hello Dr. Parr,
>
> I am with Northrop Grumman in Aurora, CO and I was searching the  
> Internet for information about ANTLR. We have a major program  
> developing a network security system. Part of my recruiting  
> assignment is to find good college students interested in  
> developing network security software and growing with this program.  
> We've especially had success at schools with programs in this  
> field, including Purdue University. We are using ANTLR. Any  
> suggestions on colleges I might contact, or any other suggestions,  
> would be much appreciated. Thank you for your attention.
>
> Gary Repetto
> Recruiting Manager
> Northrop Grumman Data Systems Operations
> Aurora, CO
> 720-744-7029
>


From antlr at shmuelhome.mine.nu  Thu Apr 12 14:40:56 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri, 13 Apr 2007 00:40:56 +0300
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>
References: <461786DE.6000801@shmuelhome.mine.nu>	<E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
	<E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>
Message-ID: <461EA768.7050100@shmuelhome.mine.nu>

Terence Parr wrote:
>
> On Apr 12, 2007, at 2:58 AM, Shmuel Siegel wrote:
>> Among other rules, I have these two lexer rules.
>>  SHIN:
>>     '\u00d7' '\u00a9' ('\u00d7' '\u0081')? ('\u00d7' '\u0082')?;
>>  TUF:
>>     '\u00d7' '\u00aa';
>>
>> The code produced for "SHIN" properly recognizes that the optional first
>>
>> parenthesis needs two terms to match but the second parenthesis will try
>>
>> to match if the first character matches. Therefore I get a recognition
>> exception from the sequence '\u00d7' '\u00a9' '\u00d7' '\u00aa'.
>
> Yep, ANTLR is doing what I would expect; just not would you want. ;)
>
> ANTLR decides that upon '\u00d7' '\u00a9' it should predict SHIN and 
> upon '\u00d7' '\u00aa' it should predict TUF.  Once inside SHIN, ANTLR 
> cannot predict which token will come next.  That's not something 
> lexers specify (parsers do that).  ANY token can follow.  So, ANTLR 
> matches greedily.  You need a backtracking parser or maybe try k=2 in 
> the second subrule.
>
> Ter
>
>
That leaves me confused as to what "?" means on a sequence. I thought 
that it means optional sequence but find that here it only means 
optional if the beginning of the sequence is not matched. It surprises 
me that it is possible for an optional sequence to throw a recognition 
exception. Why is the '\u00d7' optional but not the full sequence?


From parrt at cs.usfca.edu  Thu Apr 12 14:40:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 14:40:49 -0700
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <461EA768.7050100@shmuelhome.mine.nu>
References: <461786DE.6000801@shmuelhome.mine.nu>	<E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
	<E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>
	<461EA768.7050100@shmuelhome.mine.nu>
Message-ID: <547FB531-ABAD-4BE1-8066-62F5D1BFDC1A@cs.usfca.edu>


On Apr 12, 2007, at 2:40 PM, shmuel siegel wrote:
> That leaves me confused as to what "?" means on a sequence. I  
> thought that it means optional sequence but find that here it only  
> means optional if the beginning of the sequence is not matched. It  
> surprises me that it is possible for an optional sequence to throw  
> a recognition exception. Why is the '\u00d7' optional but not the  
> full sequence?

If it sees the first item, the predictor does not need to see the  
next one.  It can't see past a token boundary.

Ter


From parrt at cs.usfca.edu  Thu Apr 12 14:43:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 14:43:05 -0700
Subject: [antlr-interest] ANTLR-3.0b7 released
Message-ID: <D9D7A335-3E38-4165-A7BD-CBE073CCCB33@cs.usfca.edu>

Woohoo!  Getting closer.

http://www.antlr.org/download/antlr-3.0b7.tar.gz

Expect ANTLRWorks update (will  include 3.0b7 antlr) this weekend.

Ter

From antlr at mirality.co.nz  Thu Apr 12 14:54:09 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 13 Apr 2007 09:54:09 +1200
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <461EA768.7050100@shmuelhome.mine.nu>
References: <461786DE.6000801@shmuelhome.mine.nu>
	<E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
	<E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>
	<461EA768.7050100@shmuelhome.mine.nu>
Message-ID: <20070412215430.AFB43190719@www.antlr.org>

At 09:40 13/04/2007, shmuel siegel wrote:
 >Terence Parr wrote:
 >> Yep, ANTLR is doing what I would expect; just not would you 
want.
 >>;)
 >>
 >> ANTLR decides that upon '\u00d7' '\u00a9' it should predict 
SHIN
 >> and upon '\u00d7' '\u00aa' it should predict TUF.  Once inside 

 >> SHIN, ANTLR cannot predict which token will come next.  That's 

 >> not something lexers specify (parsers do that).  ANY token can 

 >> follow.  So, ANTLR matches greedily.  You need a backtracking
 >> parser or maybe try k=2 in the second subrule.
 >>
 >That leaves me confused as to what "?" means on a sequence. I
 >thought that it means optional sequence but find that here it
 >only means optional if the beginning of the sequence is not
 >matched. It surprises me that it is possible for an optional
 >sequence to throw a recognition exception. Why is the '\u00d7'
 >optional but not the full sequence?

Try removing any k= options from your lexer; you shouldn't need 
them in v3 since by default it's LL(*), which should work this 
sort of thing out automatically.  (At least as I understand it.)

With the input '\u00d7' '\u00a9' '\u00d7' '\u00aa', ANTLR should 
be predicting SHIN based on the first two characters, then (still 
within SHIN), test *both* the following characters and see they 
don't match either of the optional clauses in SHIN, so should 
generate the token and exit SHIN.  Then the next call should pick 
up those unconsumed characters as a TUF, which is what you'd 
expect.

If you've set k=1, though, that'll prevent it from doing 
sufficient lookahead to resolve this case, so you'll get the sort 
of problems you're describing.

(I don't know whether ANTLR is actually working this way or not, 
of course -- if it still doesn't work when you haven't specified 
any k= options then I would consider it a bug.)


From jimi at temporal-wave.com  Thu Apr 12 15:03:10 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Apr 2007 15:03:10 -0700
Subject: [antlr-interest] Newbie problem..
In-Reply-To: <0A404B2A01F376419FCAC6F3C25FEDC50184D88A@svr-dem-exc-02.mgc.mentorg.com>
References: <ee873c070704111943r32be06eco5b50f2f805777ebe@mail.gmail.com>
	<0A404B2A01F376419FCAC6F3C25FEDC50184D88A@svr-dem-exc-02.mgc.mentorg.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625233E@wavemachine.temporal-wave.com>

Are you sure that:
g++ -lantlr -L./lib/ -g obj/*.o -o build/test.exe

Should not just be:

g++ -L./lib/ -lantlr -g obj/*.o -o build/test.exe

Assuming that this is where your libantlr.a is actually living (and that
the libantl.a you mention below is just a typo). Also try the verbose
options for g++.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buras, Mariusz
Sent: Thursday, April 12, 2007 1:36 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Newbie problem..

Hi,

First of all I'd like to apologize for spamming the list but I'm facing
the wall and You are my last resort :)
Namely, I'm facing a problem with antlr 2.77 runtime library not linking
against my project. I did ./configure and make to build the library
(libantl.a) then to put it into my lib directory. Upon link I get this:
http://amnesty.scene.pl/~sqward/sq/output.txt
I compile under Cygwin. My first guess was wrong name space and later I
suspected broken binutils (well, last resort thinking...). Are there
additional dependencies I have to consider ? It looks pretty odd as I
can find all missing symbols (or at least its names) in the hex editor
all right. Can a good soul hint me on this? I know this is boring and
probably was discussed here a hundred times, but antlr-interest archive
is broken for me :/

Greetings,
M.Buras

From antlr at shmuelhome.mine.nu  Thu Apr 12 15:26:17 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri, 13 Apr 2007 01:26:17 +0300
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <14060EE0-4F9F-45DD-90BD-C034FCE8780E@shmuelhome.mine.nu>
References: <461786DE.6000801@shmuelhome.mine.nu>
	<E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
	<E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>
	<461EA768.7050100@shmuelhome.mine.nu>
	<14060EE0-4F9F-45DD-90BD-C034FCE8780E@shmuelhome.mine.nu>
Message-ID: <461EB209.3040402@shmuelhome.mine.nu>

Gavin Lambert wrote:
>
> (I don't know whether ANTLR is actually working this way or not, of 
> course -- if it still doesn't work when you haven't specified any k= 
> options then I would consider it a bug.)
>

Thanks for the confirmation of my sanity. But I wouldn't call it a bug 
when it is doing exactly what Terence expects. It is more of a "feature" 
that you and I disagree with. Anyway, try the following grammar. It 
demonstrates that it is not honoring my desire that ('\u00d7' '\u0081')? 
is optional when '\u00d7' matches.

Terence, this has nothing to do with greedy/ not greedy. I would not 
expect SHIN to throw an exception on the sequence '\u00d7' '\u00a9' 
'\u00d7' '\u0035', although mTokens should throw a noViableAltException 
since it doesn't know what to do with '\u00d7' '\u0035'.

grammar miqroh;
letter:    SHIN | BOO;

 SHIN:
    '\u00d7' '\u00a9' ('\u00d7' '\u0081')?;
 TUF:
    '\u00d7' '\u00aa';


I get the following for the SHIN rule
            match('\u00D7');
            match('\u00A9');
            // C:\\Documents and Settings\\shmuels\\My 
Documents\\miqroh.g:8:20: ( '\\u00d7' '\\u0081' )?
            int alt1=2;
            int LA1_0 = input.LA(1);
            if ( (LA1_0=='\u00D7') ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // C:\\Documents and Settings\\shmuels\\My 
Documents\\miqroh.g:8:21: '\\u00d7' '\\u0081'
                    {
                    match('\u00D7');
                    match('\u0081');

                    }
                    break;

            }



From parrt at cs.usfca.edu  Thu Apr 12 15:28:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Apr 2007 15:28:42 -0700
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <461EB209.3040402@shmuelhome.mine.nu>
References: <461786DE.6000801@shmuelhome.mine.nu>
	<E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com>
	<E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu>
	<461EA768.7050100@shmuelhome.mine.nu>
	<14060EE0-4F9F-45DD-90BD-C034FCE8780E@shmuelhome.mine.nu>
	<461EB209.3040402@shmuelhome.mine.nu>
Message-ID: <EBCBE1FB-C447-4E4A-AB34-8EBE3C3DFD1F@cs.usfca.edu>


On Apr 12, 2007, at 3:26 PM, shmuel siegel wrote:

> Gavin Lambert wrote:
>>
>> (I don't know whether ANTLR is actually working this way or not,  
>> of course -- if it still doesn't work when you haven't specified  
>> any k= options then I would consider it a bug.)
>>
>
> Thanks for the confirmation of my sanity. But I wouldn't call it a  
> bug when it is doing exactly what Terence expects. It is more of a  
> "feature" that you and I disagree with. Anyway, try the following  
> grammar. It demonstrates that it is not honoring my desire that  
> ('\u00d7' '\u0081')? is optional when '\u00d7' matches.
>
> Terence, this has nothing to do with greedy/ not greedy. I would  
> not expect SHIN to throw an exception on the sequence '\u00d7'  
> '\u00a9' '\u00d7' '\u0035', although mTokens should throw a  
> noViableAltException since it doesn't know what to do with '\u00d7'  
> '\u0035'.

Well, ANTLR cannot know how much lookahead to use when you cannot see  
past the end of the token. consequently it merely sees the first  
symbol as the predictor.  Without information to the contrary, this  
is the only reasonable decision antlr can make. It is doing exactly  
as I intended it to do even if it is not what you want. ;) Did you  
try the k=2? on that subrule?  Actually that probably won't work.   
ANTLR will optimize it down. You will have use a syntax predicate on  
that last alternative I would say to indicate the context in which  
antlr should match the final optional subrule.

Ter

From porcelli at uol.com.br  Thu Apr 12 16:21:52 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Thu, 12 Apr 2007 20:21:52 -0300
Subject: [antlr-interest] Problemns with Predicate using last version...
In-Reply-To: <ee873c070704121213he9d4da2s5939f7e3d903e742@mail.gmail.com>
References: <ee873c070704111943r32be06eco5b50f2f805777ebe@mail.gmail.com>
	<ee873c070704121211q7a535841iab7ab477497b3197@mail.gmail.com>
	<ee873c070704121213he9d4da2s5939f7e3d903e742@mail.gmail.com>
Message-ID: <ee873c070704121621j20803128x833b84627ca74ee6@mail.gmail.com>

I could solve this problem... I just did the following:

LABEL_STATEMENT
	: {getCharPositionInLine() == 0}? {!isLineContinuation}? LABEL_NAME
	;

LINE_NUMBER
	: {!isLineContinuation && getCharPositionInLine() == 0}? LINE_NUMBER_DIGIT
	{ token = Token.SKIP_TOKEN;}
	;

On 4/12/07, Alexandre Porcelli <porcelli at uol.com.br> wrote:
> I still trying to fix it.. and I could observe that when I change the
> following Lexical Rules using a simple semantic predicate, it works
> (the result is OK):
>
>  LABEL_STATEMENT
>          : {!isLineContinuation && getCharPositionInLine() == 0}? WS? LABEL_NAME
>          ;
>
>  LINE_NUMBER
>          : {!isLineContinuation && getCharPositionInLine() == 0}? WS?
> LINE_NUMBER_DIGIT
>          { token = Token.SKIP_TOKEN;}
>          ;
>
>  But... I got an output messages reporting some problems with a failed
> predicate:
>
>   line 8:2 rule LABEL_STATEMENT failed predicate: {!isLineContinuation
>  && getCharPositionInLine() == 0}?
>   line 9:2 rule LABEL_STATEMENT failed predicate: {!isLineContinuation
>  && getCharPositionInLine() == 0}?
>   line 10:2 rule LABEL_STATEMENT failed predicate:
> {!isLineContinuation  && getCharPositionInLine() == 0}?
>   line 11:2 rule LABEL_STATEMENT failed predicate:
> {!isLineContinuation  && getCharPositionInLine() == 0}?
>   line 11:12 rule LABEL_STATEMENT failed predicate:
> {!isLineContinuation  && getCharPositionInLine() == 0}?
>   line 11:18 rule LABEL_STATEMENT failed predicate:
> {!isLineContinuation  && getCharPositionInLine() == 0}?
>   line 12:6 rule LABEL_STATEMENT failed predicate:
> {!isLineContinuation  && getCharPositionInLine() == 0}?
>
> Any suggestion? Any help is welcomed!
>
> Thanks in Advance!
> Alexandre Porcelli
>
> >
> > On 4/11/07, Alexandre Porcelli <porcelli at uol.com.br> wrote:
> > > I started today develop a Visual Basic 6 grammar based using ANTLR v3
> > > (last build).
> > >
> > > I started with just the lexer rules... here is my job result:
> > >
> > > grammar VBGrammar;
> > >
> > > @lexer::members
> > > {
> > > boolean isLineContinuation = false;
> > > }
> > >
> > > compilationUnit
> > >         :       statementList*
> > >         ;
> > >
> > > statementList
> > >         :       identifier
> > >         |       numeric
> > >         |       label
> > >         ;
> > >
> > > identifier
> > >         :       IDENTIFIER
> > >         ;
> > >
> > > numeric :       NUMERIC
> > >         ;
> > >
> > > label   :       LABEL_STATEMENT
> > >         ;
> > >
> > > LABEL_STATEMENT
> > >         : {!isLineContinuation && getCharPositionInLine() == 0}?=> WS?
> > > (LABEL_NAME|DIGIT+ { token = Token.SKIP_TOKEN;})
> > >         ;
> > >
> > > COMMENT
> > >         :       '\'' (ANY_EXCLUDING_NL
> > >         {
> > >                 if(input.LA(1) == '_' && (input.LA(2) == '\r' || input.LA(2) == '\n')){
> > >                     input.consume();
> > >                     input.consume();
> > >                     if (input.LA(1) == '\n'){
> > >                         input.consume();
> > >                     }
> > >                 }
> > >         })*
> > >                 {token = Token.SKIP_TOKEN;}
> > >         ;
> > >
> > > IDENTIFIER
> > >         : (DIGIT|'_')* LETTER ('-' | LETTER|DIGIT|'_' | '$' | '#')*
> > >         ;
> > >
> > > NUMERIC
> > >         :       DIGIT+ ('.' DIGIT+)
> > >         |       DIGIT+
> > >         ;
> > >
> > > WS      : (' ' | '\t' )+
> > >         { token = Token.SKIP_TOKEN;}
> > >         ;
> > >
> > > LINE_CONTINUATION
> > >         :       '_' F_NL
> > >         { isLineContinuation = true; }
> > >         ;
> > >
> > > NL      : ('\r' | '\n')+
> > >         { token = Token.SKIP_TOKEN; isLineContinuation = false;}
> > >         ;
> > >
> > > fragment
> > > LABEL_NAME
> > >         : LETTER (LETTER | '_' | DIGIT)+ ':'
> > >         ;
> > >
> > > fragment
> > > LETTER
> > >         : 'a'..'z' | 'A'..'Z'
> > >         ;
> > >
> > > fragment
> > > DIGIT
> > >         : '0'..'9'
> > >         ;
> > >
> > > fragment
> > > ANY_EXCLUDING_NL
> > >         : '\u0000'..'\t'|'\u000B'..'\f'|'\u000E'..'\uFFFE'
> > >         ;
> > >
> > > fragment
> > > F_NL    : ('\r' | '\n')+
> > >         ;
> > >
> > > I use to test this grammar this file:
> > >
> > > 'teste
> > > 'dkjshfkjs ksjdhf lksjhdf lskjhf lskjdhf ldfsdf _
> > > dsdfsgfhsffd _
> > > asdkjhskjdhfhkj _
> > > soghskjs djkfhglksj lkjshdf glkjhsdf gsfg sdfg
> > >
> > >
> > > 20 teste _
> > > 30 teste _
> > > 40 sss
> > > 50 asdsdfsdf dsfad fjjh
> > > label: teste
> > >
> > > Everything seens to be fine... but I got this error when I try to test
> > > this grammar:
> > >
> > > line 8:2 no viable alternative at character ' '
> > > line 8:3 no viable alternative at character 't'
> > > line 8:4 no viable alternative at character 'e'
> > > line 8:5 no viable alternative at character 's'
> > > line 8:6 no viable alternative at character 't'
> > > line 8:7 no viable alternative at character 'e'
> > > line 8:8 no viable alternative at character ' '
> > > line 9:0 no viable alternative at character '3'
> > > line 9:1 no viable alternative at character '0'
> > > line 9:2 no viable alternative at character ' '
> > > line 9:3 no viable alternative at character 't'
> > > line 9:4 no viable alternative at character 'e'
> > > line 9:5 no viable alternative at character 's'
> > > line 9:6 no viable alternative at character 't'
> > > line 9:7 no viable alternative at character 'e'
> > > line 9:8 no viable alternative at character ' '
> > > line 10:0 no viable alternative at character '4'
> > > line 10:1 no viable alternative at character '0'
> > > line 10:2 no viable alternative at character ' '
> > > line 10:3 no viable alternative at character 's'
> > > line 10:4 no viable alternative at character 's'
> > > line 10:5 no viable alternative at character 's'
> > > line 11:2 no viable alternative at character ' '
> > > line 11:3 no viable alternative at character 'a'
> > > line 11:4 no viable alternative at character 's'
> > > line 11:5 no viable alternative at character 'd'
> > > line 11:6 no viable alternative at character 's'
> > > line 11:7 no viable alternative at character 'd'
> > > line 11:8 no viable alternative at character 'f'
> > > line 11:9 no viable alternative at character 's'
> > > line 11:10 no viable alternative at character 'd'
> > > line 11:11 no viable alternative at character 'f'
> > > line 11:12 no viable alternative at character ' '
> > > line 11:13 no viable alternative at character 'd'
> > > line 11:14 no viable alternative at character 's'
> > > line 11:15 no viable alternative at character 'f'
> > > line 11:16 no viable alternative at character 'a'
> > > line 11:17 no viable alternative at character 'd'
> > > line 11:18 no viable alternative at character ' '
> > > line 11:19 no viable alternative at character 'f'
> > > line 11:20 no viable alternative at character 'j'
> > > line 11:21 no viable alternative at character 'j'
> > > line 11:22 no viable alternative at character 'h'
> > > line 12:5 no viable alternative at character ':'
> > > line 12:6 no viable alternative at character ' '
> > > line 12:7 no viable alternative at character 't'
> > > line 12:8 no viable alternative at character 'e'
> > > line 12:9 no viable alternative at character 's'
> > > line 12:10 no viable alternative at character 't'
> > > line 12:11 no viable alternative at character 'e'
> > >
> > > Any suggestion?
> > >
> > > Best Regards,
> > > Alexandre Porcelli
> > >
> >
>

From jimi at temporal-wave.com  Thu Apr 12 16:47:20 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Apr 2007 16:47:20 -0700
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <461EB209.3040402@shmuelhome.mine.nu>
References: <461786DE.6000801@shmuelhome.mine.nu><E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com><E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu><461EA768.7050100@shmuelhome.mine.nu><14060EE0-4F9F-45DD-90BD-C034FCE8780E@shmuelhome.mine.nu>
	<461EB209.3040402@shmuelhome.mine.nu>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252340@wavemachine.temporal-wave.com>

I think that what Ter is trying to tell you is that you are not really
supplying quite enough information for the lexer analyser to work things
out without making a 'mistake', so the behavior, without any further
information, is as you see it.

I think that you need a predicate on your rule, such as this:

SHIN : '\u00d7' '\u00a9' ( ('\u00d7' '\u0081')=> ('\u00d7' '\u0081'))? '

You might need the very latest snapshot for this predicate, but probably
not. 

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of shmuel siegel
Sent: Thursday, April 12, 2007 3:26 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Lexer lookahead overoptimizes

Gavin Lambert wrote:
>
> (I don't know whether ANTLR is actually working this way or not, of 
> course -- if it still doesn't work when you haven't specified any k= 
> options then I would consider it a bug.)
>

Thanks for the confirmation of my sanity. But I wouldn't call it a bug 
when it is doing exactly what Terence expects. It is more of a "feature"

that you and I disagree with. Anyway, try the following grammar. It 
demonstrates that it is not honoring my desire that ('\u00d7' '\u0081')?

is optional when '\u00d7' matches.

Terence, this has nothing to do with greedy/ not greedy. I would not 
expect SHIN to throw an exception on the sequence '\u00d7' '\u00a9' 
'\u00d7' '\u0035', although mTokens should throw a noViableAltException 
since it doesn't know what to do with '\u00d7' '\u0035'.

grammar miqroh;
letter:    SHIN | BOO;

 SHIN:
    '\u00d7' '\u00a9' ('\u00d7' '\u0081')?;
 TUF:
    '\u00d7' '\u00aa';


I get the following for the SHIN rule
            match('\u00D7');
            match('\u00A9');
            // C:\\Documents and Settings\\shmuels\\My 
Documents\\miqroh.g:8:20: ( '\\u00d7' '\\u0081' )?
            int alt1=2;
            int LA1_0 = input.LA(1);
            if ( (LA1_0=='\u00D7') ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // C:\\Documents and Settings\\shmuels\\My 
Documents\\miqroh.g:8:21: '\\u00d7' '\\u0081'
                    {
                    match('\u00D7');
                    match('\u0081');

                    }
                    break;

            }



From naimal_khan at hotmail.com  Fri Apr 13 02:36:23 2007
From: naimal_khan at hotmail.com (Naimal Khan)
Date: Fri, 13 Apr 2007 14:36:23 +0500
Subject: [antlr-interest] CFG tool for Java
Message-ID: <BAY23-F16EDFD52B3DA1ECD44A8D19A5D0@phx.gbl>

Hi..
Is there a contrl flow graph analysis tool available for Java written in 
ANTLR? Can you kindly give me some guidance how to begin writing one of my 
own?
Thanks a lot
Naim

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From miguel.ping at gmail.com  Fri Apr 13 03:10:39 2007
From: miguel.ping at gmail.com (Miguel Ping)
Date: Fri, 13 Apr 2007 11:10:39 +0100
Subject: [antlr-interest] CFG tool for Java
In-Reply-To: <BAY23-F16EDFD52B3DA1ECD44A8D19A5D0@phx.gbl>
References: <BAY23-F16EDFD52B3DA1ECD44A8D19A5D0@phx.gbl>
Message-ID: <ab0bf2c00704130310g1b9583daue6b858fb61389e9b@mail.gmail.com>

Hi,

What do you mean with a control flow graph analysis? a tool that can
interpret a control flow description and infer something? My guess is
that's a graph problem, and there should be a library somewhere on the
web that does that :) Anyway, if you want to write your own, you
should first specify the language that specifies the graph.
Eventually, something like this:

startRule: graphComponent+ EOF;
graphComponent : conditional | functional | etc...
conditional : 'IF' exprDescr THEN nextState ELSE nextState;
(...)

For what I recall of UML, control graphs only have simple units, that
either do something or are conditionals. So, after figuring the
grammar for the language of your control structures, either with an
approach like the one i presented, or another (hey, you can define a
control graph in xml - maybe some apps can export a control graph to
xml), antlr can kick in and help you parse the control graph language
definition, whatever that will be.

Hope it helps,
Miguel Ping


On 4/13/07, Naimal Khan <naimal_khan at hotmail.com> wrote:
> Hi..
> Is there a contrl flow graph analysis tool available for Java written in
> ANTLR? Can you kindly give me some guidance how to begin writing one of my
> own?
> Thanks a lot
> Naim
>
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's FREE!
> http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
>
>

From chriswood at iname.com  Fri Apr 13 04:41:21 2007
From: chriswood at iname.com (Chris Wood)
Date: Fri, 13 Apr 2007 12:41:21 +0100
Subject: [antlr-interest] Antlr v3: Custom actions and custom tokens
In-Reply-To: <8C4F340A-E80D-4FE3-9084-38883EC71488@cs.usfca.edu>
References: <859C3393906553D0FA6656E5@[192.168.1.100]>
	<8C4F340A-E80D-4FE3-9084-38883EC71488@cs.usfca.edu>
Message-ID: <8C95E687E172FCABF07CCE8A@[192.168.1.100]>


Terence,

>> Are there any docs or posts explaining how to implement and then
>> use custom actions (to modify a returned token) in ANTLR v3? I
>> assume that a custom token class will be required and that this
>> must somehow be fitted into the grammar in question. I have
>> searched for advice across the ANTLR site without much success so far!
>>
>> Thanks a lot in advance for any pointers.
>
> I added a FAQ entry:
>
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1844

Thanks a lot for adding that - that works great for creating a custom token 
class, though I used a full signature for the emit method, i.e. emit(int 
tokenType, int line, int charPosition, int channel, int start, int stop) 
rather than emit().


Follow-up question:

I remain confused about how to use actions with the new custom token type.

Specifically, what I am trying to do is alter the example Python grammar 
(now outputting AST) so that multiple colno and lineno pairs can be carried 
in a single new token.

In the grammar I have:

atom: ...
    | LBRACK (listmaker)? RBRACK -> ^(List (listmaker)?)
      ...

and would like List to be annotated with the colno and lineno data from 
both LBRACK and RBRACK.

I thought that to do this I could create a custom token type (as solved 
above) with additional fields and then use an action to populate those 
fields from the attributes of LBRACK and RBRACK. But I am unsure how to use 
any custom actions. Where and how should they be added?

Or am I going about this completely the wrong way? Thanks again for any 
advice.

Regards,

Chris Wood





From antlr at shmuelhome.mine.nu  Fri Apr 13 06:30:34 2007
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri, 13 Apr 2007 16:30:34 +0300
Subject: [antlr-interest] Lexer lookahead overoptimizes
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252340@wavemachine.temporal-wave.com>
References: <461786DE.6000801@shmuelhome.mine.nu><E344C433F006AB45A306D422F9C3EB4C01AF0299@exmail1.finjan.com><E1C23831-3394-4533-92D1-7B97DF8837DA@cs.usfca.edu><461EA768.7050100@shmuelhome.mine.nu><14060EE0-4F9F-45DD-90BD-C034FCE8780E@shmuelhome.mine.nu>
	<461EB209.3040402@shmuelhome.mine.nu>
	<B36CCC332A32904F8FA3DE134A235336252340@wavemachine.temporal-wave.com>
Message-ID: <461F85FA.2070308@shmuelhome.mine.nu>

Jim Idle wrote:
> I think that what Ter is trying to tell you is that you are not really
> supplying quite enough information for the lexer analyser to work things
> out without making a 'mistake', so the behavior, without any further
> information, is as you see it.
>
> I think that you need a predicate on your rule, such as this:
>
> SHIN : '\u00d7' '\u00a9' ( ('\u00d7' '\u0081')=> ('\u00d7' '\u0081'))? '
>
> You might need the very latest snapshot for this predicate, but probably
> not. 
>
> Jim
>
>   
I understand what Ter is saying; that is why I referred to it as a 
feature that I disagree with rather than a bug. I think that Ter is 
making the mistake of having implementation issues drive functional 
specifications. To my mind, EBNF '?' means optional, and optional 
clauses can't fire recognition exceptions. In the notation that you have 
used, Ter has essentially defined

('\u00d7' '\u0081')?

 as

( ('\u00d7')=> ('\u00d7' '\u0081'))?

I don't think that that matches anybody's expectation. The way I look at 
it, Ter has restricted my usage of '?' to single elements, otherwise, 
its behavior is unpredictable.
 From a practical point of view, I will get around the problem by 
promoting my optional term to the status of a full token and letting the 
parser deal with the optional nature.
The bottom line is that I think that Ter needs to document '?' very 
carefully, both in his book and in the Wiki, if he expects to not run 
into a lot of problems. This will be just as bad as ANTLR2's linear 
approximate look ahead! Of course, by definition, Ter wins this debate.

Shmuel


From jaluber at gmx.de  Fri Apr 13 07:16:07 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 13 Apr 2007 16:16:07 +0200
Subject: [antlr-interest] Quick Starter on Parser Grammars
Message-ID: <461F90A7.1040507@gmx.de>

Hello,

I've posted the tutorial "Quick Starter on Parser Grammars - No Past
Experience Required" on the wiki at
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>.
I am interested in praise, opinions, corrections, suggestions,
complaints about how I managed to abuse the English comma rules :P -
practically everything to improve my work, as I'm not sure if I can
actually reach my target audience. Unlike Terence I don't have much
teaching experience and I tend to complicate things with the inclusion
of extraneous details. So I simply hope, I could meet his expectations. :)

Best regards,
Johannes Luber

P.S.: I hope you don't mind that I cannibalized your book for a few
grammar examples, Terence. :)

From jaluber at gmx.de  Fri Apr 13 07:23:34 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 13 Apr 2007 16:23:34 +0200
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <461F90A7.1040507@gmx.de>
References: <461F90A7.1040507@gmx.de>
Message-ID: <461F9266.7070904@gmx.de>

Johannes Luber wrote:
> Hello,
> 
> I've posted the tutorial "Quick Starter on Parser Grammars - No Past
> Experience Required" on the wiki at
> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>.
> I am interested in praise, opinions, corrections, suggestions,
> complaints about how I managed to abuse the English comma rules :P -
> practically everything to improve my work, as I'm not sure if I can
> actually reach my target audience. Unlike Terence I don't have much
> teaching experience and I tend to complicate things with the inclusion
> of extraneous details. So I simply hope, I could meet his expectations. :)
> 
> Best regards,
> Johannes Luber
> 
> P.S.: I hope you don't mind that I cannibalized your book for a few
> grammar examples, Terence. :)
> 

For whatever reason my entry doesn't show up as a child to the tutorials
page. I'd appreciate it, if someone could correct this as I can't figure
that out.

Thanks,
Johannes Luber

From porcelli at uol.com.br  Fri Apr 13 07:26:53 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Fri, 13 Apr 2007 11:26:53 -0300
Subject: [antlr-interest] Quick Starter on Parser Grammars
Message-ID: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>

I think this initiative very nice! Another think that I would like to
suggest is to add to the wiki  some "common extensions" (ex: how-to
emit more than a token per lex rule) and "patterns"  (ex:
expressions).

Bets Regards,
Alexandre Porcelli

From antlr at jazillian.com  Fri Apr 13 07:27:42 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 13 Apr 2007 10:27:42 -0400
Subject: [antlr-interest] CFG tool for Java
In-Reply-To: <BAY23-F16EDFD52B3DA1ECD44A8D19A5D0@phx.gbl>
References: <BAY23-F16EDFD52B3DA1ECD44A8D19A5D0@phx.gbl>
Message-ID: <461F935E.7030208@jazillian.com>

You might want to check out the new Java Compiler API (JSR199).
Here's one start point:
http://blogs.sun.com/ahe/entry/java_compiler_api_who

Using that, you can get at all the info that javac has.

Andy

Naimal Khan wrote:
> Hi..
> Is there a contrl flow graph analysis tool available for Java written 
> in ANTLR? Can you kindly give me some guidance how to begin writing 
> one of my own?
> Thanks a lot
> Naim
>
> _________________________________________________________________
> Express yourself instantly with MSN Messenger! Download today it's 
> FREE! http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/
>


From corellian.c at gmail.com  Fri Apr 13 08:17:09 2007
From: corellian.c at gmail.com (Corellian)
Date: Fri, 13 Apr 2007 17:17:09 +0200
Subject: [antlr-interest]  C++ generated parser dependencies
Message-ID: <3edc2fbd0704130817q229979f4mb90025cb893f97c@mail.gmail.com>

Hi,

First of all, I've to say I'm new to the mailing list. I'm an ANTLR beginner
:)

I've to generate a parser (in C++) which libraries it will depend my
generated parser?
In java would be the antlr.jar, isn't it?

Thanks,
Cristian.

-- 
GPG Key-ID: 0x564903FA - JID: corellian at swissjabber.ch
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070413/83c28ea0/attachment.html 

From corellian.c at gmail.com  Fri Apr 13 08:36:37 2007
From: corellian.c at gmail.com (Corellian)
Date: Fri, 13 Apr 2007 17:36:37 +0200
Subject: [antlr-interest] C++ generated parser dependencies
In-Reply-To: <3edc2fbd0704130817q229979f4mb90025cb893f97c@mail.gmail.com>
References: <3edc2fbd0704130817q229979f4mb90025cb893f97c@mail.gmail.com>
Message-ID: <3edc2fbd0704130836tff5e7f7p4fb26b53b20f63a2@mail.gmail.com>

Sorry, I've found that in documentation, my apologies!

Cris

2007/4/13, Corellian <corellian.c at gmail.com>:
>
> Hi,
>
> First of all, I've to say I'm new to the mailing list. I'm an ANTLR
> beginner :)
>
> I've to generate a parser (in C++) which libraries it will depend my
> generated parser?
> In java would be the antlr.jar, isn't it?
>
> Thanks,
> Cristian.
>
> --
> GPG Key-ID: 0x564903FA - JID: corellian at swissjabber.ch




-- 
GPG Key-ID: 0x564903FA - JID: corellian at swissjabber.ch
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070413/1773fce9/attachment-0001.html 

From Steven.Colby at ftc.usda.gov  Fri Apr 13 08:55:44 2007
From: Steven.Colby at ftc.usda.gov (Colby, Steven - Fort Collins, CO)
Date: Fri, 13 Apr 2007 09:55:44 -0600
Subject: [antlr-interest] C# and ANTLR 3.0?
Message-ID: <5BFB5B5CFE89A4429A93DAC79E8041F401C9C0E8@COFORTCOL2S303>

Hi all - I hate to be a pest, but will ANTLR 3.0 (and especially the
ANTLRWorks IDE) have "fully cooked" C# support?  We're using 2.7.x to
generate C# at the moment, and I'm wondering where to put my efforts
going forward...
 
Thanks!
Steven Colby
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070413/fd06fb25/attachment.html 

From jaluber at gmx.de  Fri Apr 13 13:16:07 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 13 Apr 2007 22:16:07 +0200
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
Message-ID: <461FE507.400@gmx.de>

Alexandre Porcelli wrote:
> I think this initiative very nice! Another think that I would like to
> suggest is to add to the wiki  some "common extensions" (ex: how-to
> emit more than a token per lex rule) and "patterns"  (ex:
> expressions).

I'm not familiar with common extensions in general - for this I am too
new to ANTLR. The same for those patterns with the exception of
expressions, if you mean, how one does change the precedence of
operators and left- and right-association. There is already a treatment
about this in the ANTLR book so I wouldn't know if it is okay with
Terence if I practically publish this part of the book (even if I write
the accompanying text myself). I'd say, it would be simpler if Terence
simply used the book text as starting point for a tutorial himself.

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Fri Apr 13 15:08:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Apr 2007 15:08:57 -0700
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <461FE507.400@gmx.de>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
	<461FE507.400@gmx.de>
Message-ID: <B9C3F201-DA83-4D1F-B7BD-F6465001B2E1@cs.usfca.edu>


On Apr 13, 2007, at 1:16 PM, Johannes Luber wrote:

> Alexandre Porcelli wrote:
>> I think this initiative very nice! Another think that I would like to
>> suggest is to add to the wiki  some "common extensions" (ex: how-to
>> emit more than a token per lex rule) and "patterns"  (ex:
>> expressions).
>
> I'm not familiar with common extensions in general - for this I am too
> new to ANTLR. The same for those patterns with the exception of
> expressions, if you mean, how one does change the precedence of
> operators and left- and right-association. There is already a  
> treatment
> about this in the ANTLR book so I wouldn't know if it is okay with
> Terence if I practically publish this part of the book (even if I  
> write
> the accompanying text myself). I'd say, it would be simpler if Terence
> simply used the book text as starting point for a tutorial himself.

Yeah, the publisher actually owns the copyright so I can't post  
examples even w/o their permission.  I'll have to do something else. ;)

Ter


From rschulz at sonic.net  Fri Apr 13 15:34:20 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Apr 2007 15:34:20 -0700
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <B9C3F201-DA83-4D1F-B7BD-F6465001B2E1@cs.usfca.edu>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
	<461FE507.400@gmx.de>
	<B9C3F201-DA83-4D1F-B7BD-F6465001B2E1@cs.usfca.edu>
Message-ID: <200704131534.20766.rschulz@sonic.net>

On Friday 13 April 2007 15:08, Terence Parr wrote:
> ...
>
> Yeah, the publisher actually owns the copyright so I can't post
> examples even w/o their permission.  I'll have to do something else.
> ;)

Oh, come one. Surely that would be fair use, no?


> Ter


Randall Schulz

From parrt at cs.usfca.edu  Fri Apr 13 16:51:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Apr 2007 16:51:19 -0700
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <200704131534.20766.rschulz@sonic.net>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
	<461FE507.400@gmx.de>
	<B9C3F201-DA83-4D1F-B7BD-F6465001B2E1@cs.usfca.edu>
	<200704131534.20766.rschulz@sonic.net>
Message-ID: <5F27FA5C-A04D-4841-8815-514DB5A41AE6@cs.usfca.edu>


On Apr 13, 2007, at 3:34 PM, Randall R Schulz wrote:

> On Friday 13 April 2007 15:08, Terence Parr wrote:
>> ...
>>
>> Yeah, the publisher actually owns the copyright so I can't post
>> examples even w/o their permission.  I'll have to do something else.
>> ;)
>
> Oh, come one. Surely that would be fair use, no?

Probably not. ;)  The publisher could easily claim it would hurt  
their market etc...  Anyway, have no feart!  We'll gradually build up  
the xamples and doc as we go.  I'm just finishing last major  
component I need to fix before we release.  Then I can do some more  
FAQ entries and  simple doc.  I'm meeting with publisher early in  
week to discuss what I can use from book on site. :)

Ter


From rschulz at sonic.net  Fri Apr 13 17:19:36 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Apr 2007 17:19:36 -0700
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <5F27FA5C-A04D-4841-8815-514DB5A41AE6@cs.usfca.edu>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
	<200704131534.20766.rschulz@sonic.net>
	<5F27FA5C-A04D-4841-8815-514DB5A41AE6@cs.usfca.edu>
Message-ID: <200704131719.36320.rschulz@sonic.net>

On Friday 13 April 2007 16:51, Terence Parr wrote:
> On Apr 13, 2007, at 3:34 PM, Randall R Schulz wrote:
> > On Friday 13 April 2007 15:08, Terence Parr wrote:
> >> ...
> >>
> >> Yeah, the publisher actually owns the copyright so I can't post
> >> examples even w/o their permission.  I'll have to do something
> >> else. ;)
> >
> > Oh, come one. Surely that would be fair use, no?
>
> Probably not. ;)  The publisher could easily claim it would hurt
> their market etc...

To which you respond that it will only increase sales of the printed 
book, as people will have a reason to believe there's (more) good, 
practical, useful information therein.

Did you ask the publisher whether you could disseminate some of the 
book's illustrations (i.e., examples)?


> ...
>
> Ter


Randall Schulz

From parrt at cs.usfca.edu  Fri Apr 13 17:28:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Apr 2007 17:28:48 -0700
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <200704131719.36320.rschulz@sonic.net>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
	<200704131534.20766.rschulz@sonic.net>
	<5F27FA5C-A04D-4841-8815-514DB5A41AE6@cs.usfca.edu>
	<200704131719.36320.rschulz@sonic.net>
Message-ID: <B9362D7A-743A-4116-8E3C-C94636BA3A75@cs.usfca.edu>


On Apr 13, 2007, at 5:19 PM, Randall R Schulz wrote:

>
> Did you ask the publisher whether you could disseminate some of the
> book's illustrations (i.e., examples)?

I'm talking with them early next week.
Ter

From cummings at kjchome.homeip.net  Fri Apr 13 18:33:08 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Fri, 13 Apr 2007 21:33:08 -0400
Subject: [antlr-interest] ANTLR 2.7.7 TreeParser transformation question
Message-ID: <46202F54.4020607@kjchome.homeip.net>

language = C++

I'm trying to do a tree transformation before I generate some code from 
the resulting tree.  So, I have the following set of rules in my tree 
walker:

> bexpr : #( AND a1:bexpr a2:bexpr )
>       | #( OR  o1:bexpr o2:bexpr )
>       | #( NOT n:bexpr )
>       | #( LESSTHAN lt1:aexpr lt2:aexpr )
>       | #( LE       le1:aexpr le2:aexpr )
>       | #( GT       gt1:aexpr gt2:aexpr )
>       | #( GE       ge1:aexpr ge2:aexpr )
>       | #( EQ       eq1:aexpr eq2:aexpr )
>       | #( NE       ne1:aexpr ne2:aexpr )
>       ;
> 
> // Lets fold constant expressions out below
> // and emit the final code for aexpr when they get used above.
> aexpr :! #( PLUS  p1:aexpr p2:aexpr )
>          { 
>          // Anything plus 0 is Anything
>            if (isZero(p1))
>               { 
>                 #aexpr = #p2;
>               }
>            else if (isZero(p2))
>               { 
>                 #aexpr = #p1;
>               }
>            else
>               { 
>                 #aexpr = #(PLUS, p1, p2);
>               }
>          }
>       |! ( #( MINUS aexpr aexpr ) )=> #( minus:MINUS m1:aexpr m2:aexpr )
>       |! #( mult:MULT mu1:aexpr mu2:aexpr )
>       |! #( div:DIV d1:aexpr d2:aexpr )
>       |! #( neg:MINUS n:aexpr )
>       | NUM
>       | STRING
>       ;

What I'm trying to do is transform the tree passed into aexpr in those 
cases when I can remove complexity.  My isZero() method is correctly 
recognizing those NUM trees which contain the number "0".
If I examine #aexpr before leaving this rule, I can see that:
	(PLUS 2 0)
is correctly reduced to just
         2

My problem is that the assignment to #aexpr appears in the .cpp code as
a reference to:   aexpr_AST_in, but it is never used again after it gets 
assigned!

The end of the case continues with assigning _retTree = _t and not my 
new tree.  The result of this is that when I examine my aexpr subtree in 
the bexpr rule, it is the original (PLUS 2 0) tree!  Not the transformed 
one!

So what's the point of assigning it if it never gets returned?

Am I doing something wrong?

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From anshumaligupta at yahoo.com  Fri Apr 13 21:20:45 2007
From: anshumaligupta at yahoo.com (Anshu Gupta)
Date: Fri, 13 Apr 2007 21:20:45 -0700 (PDT)
Subject: [antlr-interest] how to read data from the input buffer without the
	lexer processing it
Message-ID: <859690.4452.qm@web51103.mail.re2.yahoo.com>

Hello,
   
  I have a statement as follows:
   
  DataLine
   
  1 ABC
  2 DEF
  ;
   
  Here DataLine is a keyword and the remaining is data until the ';'
   
  The data is to be read as is without whitespace being filtered and without the lexer forming any tokens. How can I directly read the characters from input buffer without having this stream of characters processed by lexer?
   
  Thanks
  Anshu

       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070413/4483025a/attachment.html 

From antlr at mirality.co.nz  Fri Apr 13 22:44:05 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 14 Apr 2007 17:44:05 +1200
Subject: [antlr-interest] C# and ANTLR 3.0?
In-Reply-To: <5BFB5B5CFE89A4429A93DAC79E8041F401C9C0E8@COFORTCOL2S303>
References: <5BFB5B5CFE89A4429A93DAC79E8041F401C9C0E8@COFORTCOL2S303>
Message-ID: <20070414054442.8D4EF1908A7@www.antlr.org>

At 03:55 14/04/2007, Colby, Steven - Fort Collins, CO wrote:
>Hi all - I hate to be a pest, but will ANTLR 3.0 (and especially 
>the ANTLRWorks IDE) have "fully cooked" C# support?  We're using 
>2.7.x to generate C# at the moment, and I'm wondering where to 
>put my efforts going forward...

As far as I know, AntlrWorks is unashamedly Java-only, and the C# 
target support for ANTLR 3 is sort of doughy -- not fully cooked 
yet ;-) 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070414/4ddcec3b/attachment.html 

From parrt at cs.usfca.edu  Sat Apr 14 08:33:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 14 Apr 2007 08:33:15 -0700
Subject: [antlr-interest] C# and ANTLR 3.0?
In-Reply-To: <20070414054442.8D4EF1908A7@www.antlr.org>
References: <5BFB5B5CFE89A4429A93DAC79E8041F401C9C0E8@COFORTCOL2S303>
	<20070414054442.8D4EF1908A7@www.antlr.org>
Message-ID: <691BDDAF-448F-478E-8C8E-718522D96B8A@cs.usfca.edu>


On Apr 13, 2007, at 10:44 PM, Gavin Lambert wrote:

> At 03:55 14/04/2007, Colby, Steven - Fort Collins, CO wrote:
>> Hi all - I hate to be a pest, but will ANTLR 3.0 (and especially  
>> the ANTLRWorks IDE) have "fully cooked" C# support?  We're using  
>> 2.7.x to generate C# at the moment, and I'm wondering where to put  
>> my efforts going forward...
>
> As far as I know, AntlrWorks is unashamedly Java-only, and the C#  
> target support for ANTLR 3 is sort of doughy -- not fully cooked  
> yet ;-)

ANTLRWorks can be used with any target language (even the debugger  
via the socket interface), but can compile/test automatically only java.

C# is not ready though the authors claim it will be ready for 3.0.

Ter

From antlr at thewolery.demon.co.uk  Sat Apr 14 11:42:57 2007
From: antlr at thewolery.demon.co.uk (Anthony W. Youngman)
Date: Sat, 14 Apr 2007 19:42:57 +0100
Subject: [antlr-interest] Quick Starter on Parser Grammars
In-Reply-To: <B9C3F201-DA83-4D1F-B7BD-F6465001B2E1@cs.usfca.edu>
References: <ee873c070704130726tefa5e71s3f0d0f84878c9635@mail.gmail.com>
	<461FE507.400@gmx.de>
	<B9C3F201-DA83-4D1F-B7BD-F6465001B2E1@cs.usfca.edu>
Message-ID: <$lMBkZExCSIGFwHp@thewolery.demon.co.uk>

In message <B9C3F201-DA83-4D1F-B7BD-F6465001B2E1 at cs.usfca.edu>, Terence 
Parr <parrt at cs.usfca.edu> writes
>
>On Apr 13, 2007, at 1:16 PM, Johannes Luber wrote:
>
>> Alexandre Porcelli wrote:
>>> I think this initiative very nice! Another think that I would like to
>>> suggest is to add to the wiki  some "common extensions" (ex: how-to
>>> emit more than a token per lex rule) and "patterns"  (ex:
>>> expressions).
>>
>> I'm not familiar with common extensions in general - for this I am too
>> new to ANTLR. The same for those patterns with the exception of
>> expressions, if you mean, how one does change the precedence of
>> operators and left- and right-association. There is already a 
>>treatment
>> about this in the ANTLR book so I wouldn't know if it is okay with
>> Terence if I practically publish this part of the book (even if I 
>>write
>> the accompanying text myself). I'd say, it would be simpler if Terence
>> simply used the book text as starting point for a tutorial himself.
>
>Yeah, the publisher actually owns the copyright so I can't post 
>examples even w/o their permission.  I'll have to do something else. ;)
>
I know it's normal practice, but it sucks.

Are you expecting much on royalties? If you're not expecting much, Baen 
is a good publisher - and you might even get more via them than a normal 
publisher!

Cheers,
Wol
-- 
Anthony W. Youngman - anthony at thewolery.demon.co.uk


From lsakaray at us.ibm.com  Sat Apr 14 15:06:45 2007
From: lsakaray at us.ibm.com (Lakshman Sakaray)
Date: Sat, 14 Apr 2007 16:06:45 -0600
Subject: [antlr-interest] Lakshman Sakaray/Lenexa/IBM is out of the office.
Message-ID: <OFF0D38077.269CA41A-ON872572BD.007977FF-872572BD.00797800@us.ibm.com>


I will be out of the office starting  04/14/2007 and will not return until
04/29/2007.

I will respond to your message when I return.
If need any immediate response please contact to my manager Bill Theus
"wtheus at us.ibm.com" and for technical issues Rekha Nair "nrekha at us.ibm.com"
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070414/7afb37e2/attachment.html 

From aaron.feng at gmail.com  Sat Apr 14 19:38:42 2007
From: aaron.feng at gmail.com (Aaron Feng)
Date: Sat, 14 Apr 2007 22:38:42 -0400
Subject: [antlr-interest] PL/SQL create script via C# like language
Message-ID: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>

I did a simple translator that will read in C# like language and
output PL/SQL for creating tables.  Someone new to ANTLR might find it
interesting.  The example can be found
http://www.aaronfeng.com/articles/2007/04/14/csharp-to-pl-sql

I'm fairly new to ANTLR, so all comments are welcome.

Aaron

From steve at orcldba.com  Sat Apr 14 19:44:29 2007
From: steve at orcldba.com (Steve Karam)
Date: Sat, 14 Apr 2007 22:44:29 -0400
Subject: [antlr-interest] PL/SQL create script via C# like language
In-Reply-To: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>
References: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>
Message-ID: <4621918D.1040102@orcldba.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070414/ca0e54b7/attachment.html 

From richard.bown at ferventsoftware.com  Sun Apr 15 01:11:00 2007
From: richard.bown at ferventsoftware.com (Richard Bown)
Date: Sun, 15 Apr 2007 09:11:00 +0100
Subject: [antlr-interest] lexer or parser for comments and remarks?
In-Reply-To: <461407A8.8050207@ferventsoftware.com>
References: <461407A8.8050207@ferventsoftware.com>
Message-ID: <4621DE14.3060900@ferventsoftware.com>

Maybe I was blathering a bit too much there - is this so simple and 
stoopid it's in a FAQ or an example that I've missed?  Anyone got any 
recommendations or pointers?   Even a RTFM would do.

Richard


Richard Bown wrote:
> Hi,
> 
> I've got a lexer non-determinism which is making me go back and forward 
> between trying to fix the lexer or trying to write a good parser rule 
> for the problem - neither of which I can seem to get right.  This is 
> with Antlr 2.7.5 producing C#.  Apologies for the lengthy explanation.
> 
> The rules are for handling SQL comments and similar one liners (I'm 
> treating these all as single line statements).   Whilst this is 
> relatively simple for non-alphabetic characters - you can write a lexer 
> rule such as this:
> 
> COMMENT :
>     '-' '-' ( ~('\r' | '\n') )* NEWLINE { setType(Token.SKIP); }
> ;
> 
> If you then define say a similar line for "rem" statements:
> 
> REMARK :
>     'r' 'e' 'm' ( ~( '\r' | '\n' ) ) * NEWLINE
> { setType(Token.SKIP); }
> ;
> 
> This is fine - but if you also have a lexer rule for matching 
> identifiers i.e. (slightly simplified):
> 
> ID :
>     'A-Z' | 'a-z' | '_' | '0'..'9'
> ;
> 
> You get non-determinisms of course with the "rem" rule and any other 
> rules that use alphanumerics.
> 
> The other way I've attempted to solve this is to just catch the 'rem' 
> elements in the parser.   This is fine (and it would be a more useful 
> solution if I wanted to do some simple processing of the comment lines) 
> but then if there are any interesting and unusual characters in the 
> remainder of the "rem" line then the parser doesn't match on these 
> elements.  I've tried to be exhaustive about the type of 'words' that 
> the remainder of the comment lines can contain but then I start to trip 
> over lexer rules again and we go around in circles.
> 
> So I've been going back to the lexer to solve this - and whilst with the 
> non-determinisms things almost work, the lexer rules also greedily slurp 
>  up parts of legitimate ids.   One thing to fix that is to force the 
> lexer to match from the start of the line only I s'pose... but it all 
> seems like putting one hack on top of another.
> 
> Any clues how to handle this elegantly in the parser?   To me it would 
> make sense to dump these lexer rules and handle all of these types in 
> the parser - I just need an equivalent to "match from here to end of 
> line" for the parser perhaps?
> 
> Rgds,
> Richard Bown
> 

From femtowin at gmail.com  Sun Apr 15 03:05:32 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 18:05:32 +0800
Subject: [antlr-interest] antlr should throw NoViableAltException
Message-ID: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>

Hi all, for following grammar,

grammar Rubyv3;

options {
        output=AST;
}
tokens {
	// 'imaginary' tokens
	STATEMENT_LIST;
	STATEMENT;
	RPAREN_IN_METHOD_DEFINATION;
	BODY;
	CALL;
	ARG;
	//COMPSTMT;
	SYMBOL;
	BLOCK;
	MULTIPLE_ASSIGN;
	MULTIPLE_ASSIGN_WITH_EXTRA_COMMA;
	BLOCK_ARG;
	BLOCK_ARG_WITH_EXTRA_COMMA;
	MRHS;
	NESTED_LHS;
	SINGLETON_METHOD;
	STRING;
}

/*@rulecatch {
catch (RecognitionException e) {
throw e;
}
}*/

@header {
package com.xruby.compiler.parser;
}
@lexer::header {
package com.xruby.compiler.parser;
}

@members{
	private int can_be_command_ = 0;

	protected void enterScope()	{assert(false);}
	protected void enterBlockScope()	{assert(false);}
	protected void leaveScope()	{assert(false);}
	protected void addVariable(Token id)	{assert(false);}
	protected void setIsInNestedMultipleAssign(boolean v)	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingMethodparameters()	{assert(false);}
	protected void tellLexerWeHaveFinishedParsingSymbol()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingStringExpressionSubstituation()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingRegexExpressionSubstituation()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingHeredocExpressionSubstituation()	{assert(false);}

	
}

@lexer::members
{
	//The following methods are to be implemented in the subclass.
	//In fact they should be 'abstract', but antlr refuses to generate
	//abstract class. We can either insert 'abstract' keyword manually
	//after the lexer is generated, or simply use assert() to prevent
	//these function to run (so you have to overide them). I choosed
	//the later approach.
	protected boolean expectOperator(int k) throws
Exception		{assert(false);return false;}
	protected boolean expectUnary()	 throws
Exception			{assert(false);return false;}
	protected boolean expectHash()					{assert(false);return false;}
	protected boolean expectHeredoc()				{assert(false);return false;}
	protected boolean expectLeadingColon2()		{assert(false);return false;}
	protected boolean expectArrayAccess()				{assert(false);return false;}
	protected boolean lastTokenIsDotOrColon2()		{assert(false);return false;}
	protected boolean lastTokenIsSemi()				{assert(false);return false;}
	protected boolean
lastTokenIsKeywordDefOrColonWithNoFollowingSpace()			{assert(false);return
false;}
	protected boolean
lastTokenIsColonWithNoFollowingSpace()			{assert(false);return false;}
	protected boolean shouldIgnoreLinebreak()			{assert(false);return false;}
	protected int trackDelimiterCount(char next_char, char delimeter, int
delimeter_count)	{assert(false);return 0;}
	protected boolean isDelimiter(String next_line, String
delimiter)	{assert(false);return false;}
	protected boolean isAsciiValueTerminator(char
value)	{assert(false);return false;}
	protected boolean justSeenWhitespace()	{assert(false);return false;}
	protected void setSeenWhitespace()			{assert(false);}
	protected boolean expressionSubstitutionIsNext()	throws
Exception	{assert(false);return false;}
	protected boolean spaceIsNext()	throws Exception	{assert(false);return false;}
	protected void setCurrentSpecialStringDelimiter(char delimiter, int
delimiter_count)	{assert(false);}
	protected void updateCurrentSpecialStringDelimiterCount(int
delimiter_count)	{assert(false);}
}

program
		:	statement_list
		;

statement_list
		:	statement* -> ^(STATEMENT_LIST statement*)
			;

/*terminal
		:	SEMI!
		|	LINE_BREAK!
		;*/
statement
	:	expression (modifier_line)* SEMI? -> ^(STATEMENT expression
(modifier_line)*)
	|       SEMI!
	;

modifier_line
	:(IF_MODIFIER|UNLESS_MODIFIER|WHILE_MODIFIER|UNTIL_MODIFIER|RESCUE_MODIFIER)^
expression
/*statement
		:	body=statementWithoutModifier
									(IF_MODIFIER^		if_condition=expression	{#statement =
#(#[LITERAL_if, 'if'], if_condition, #(#[COMPSTMT, 'COMPSTMT'],
#body));}
									|UNLESS_MODIFIER^	unless_condition=expression	{#statement =
#(#[LITERAL_unless, 'unless'], unless_condition, #(#[COMPSTMT,
'COMPSTMT'], #body));}
									|WHILE_MODIFIER^	while_condition=expression	{#statement =
#(#[LITERAL_while, 'while'], while_condition, #(#[COMPSTMT,
'COMPSTMT'], #body));}
									|UNTIL_MODIFIER^	until_condition=expression	{#statement =
#(#[LITERAL_until, 'until'], until_condition, #(#[COMPSTMT,
'COMPSTMT'], #body));}
									|RESCUE_MODIFIER^	rescue_condition=expression	{#statement =
#(#[LITERAL_rescue, 'rescue'], rescue_condition, #(#[COMPSTMT,
'COMPSTMT'], #body));}
									)**/
		;
IF_MODIFIER     :  'if';
UNLESS_MODIFIER :  'unless';
WHILE_MODIFIER  :  'while';
UNTIL_MODIFIER  :  'until';
RESCUE_MODIFIER :  'resuce';

SEMI	:';'
	;

LINE_BREAK
	:'\r'? '\n'{skip();}
	;
//OMIT_LINE_BREAK
//	:	LINE_BREAK* {skip();}
//	;
//emptyable_expression
//	:	expression|;
expression
	:	'expression0' | 'expression1' | 'expression2';
	
WS	:	(' ' | '\t') { skip(); }
	;
ID	:	('a'..'z' | 'A'..'Z') (('a'..'z' | 'A'..'Z') | ('0'..'9'))*
	;
----------------------------------------------------------------------------
ruby should throw NoViableAltException when meeting input
"if expression1; ",
this is the test drive:

package com.xruby.compiler.parser;

import org.antlr.runtime.*;
import org.antlr.runtime.tree.CommonTree;

import java.io.StringReader;
import java.io.StringBufferInputStream;
import java.io.IOException;

import junit.framework.TestCase;

/**
 * Copyright 2005-2007 femto
 * Distributed under the GNU General Public License 2.0
 */
public class Rubyv3Test extends TestCase {
    public void test_parse() throws Exception {
        assert_parse("", "STATEMENT_LIST");
        assert_parse(";", "STATEMENT_LIST");
        assert_parse("  ", "STATEMENT_LIST");
        assert_parse(";\n;\n;\n;\n", "STATEMENT_LIST");
        assert_parse("expression0 \tif expression1 if expression2; ",
"(STATEMENT_LIST (STATEMENT expression0 (if expression1) (if
expression2)))");
        assert_parse("expression0 \tif\nexpression1 if expression2;",
"(STATEMENT_LIST (STATEMENT expression0 (if expression1) (if
expression2)))");
        assert_parse("expression0 \tif\nexpression1 if expression2",
"(STATEMENT_LIST (STATEMENT expression0 (if expression1) (if
expression2)))");
        assert_parse("expression0 \tif expression1 if expression2\n
expression0", "(STATEMENT_LIST (STATEMENT expression0 (if expression1)
(if expression2)) (STATEMENT expression0))");
        assert_parse("expression0 \tif expression1 if expression2;
expression0", "(STATEMENT_LIST (STATEMENT expression0 (if expression1)
(if expression2)) (STATEMENT expression0))");
        assert_parse("expression0 \tif expression1 if expression2;;
expression0", "(STATEMENT_LIST (STATEMENT expression0 (if expression1)
(if expression2)) (STATEMENT expression0))");
        assert_parse("if expression1; ", "");
    }
    public void assert_parse(String text, String expectedTree) throws
IOException

    {
        ANTLRInputStream input =
                new ANTLRInputStream(new StringBufferInputStream(text));

        Rubyv3Lexer lexer = new Rubyv3Lexer(input);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        Rubyv3Parser parser = new Rubyv3Parser(tokens);
        Rubyv3Parser.program_return result = null;
        try {
            result = parser.program();
        } catch (NoViableAltException e) {
            e.printStackTrace();
        }
        catch (RecognitionException e) {
            e.printStackTrace();
        }
        assertEquals(expectedTree, ((CommonTree)result.tree).toStringTree());
        //System.out.println("tree:" +
((CommonTree)result.tree).toStringTree());
    }

}
//besides, in Antlrworks interpreter mode, it will produce NoViableAltException,
so I think it is a bug in main program.(antlr should throw Exception,
but instead
nothing happened).

From jaluber at gmx.de  Sun Apr 15 04:38:30 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 15 Apr 2007 13:38:30 +0200
Subject: [antlr-interest] lexer or parser for comments and remarks?
In-Reply-To: <4621DE14.3060900@ferventsoftware.com>
References: <461407A8.8050207@ferventsoftware.com>
	<4621DE14.3060900@ferventsoftware.com>
Message-ID: <46220EB6.4060104@gmx.de>

Richard Bown wrote:
> Maybe I was blathering a bit too much there - is this so simple and
> stoopid it's in a FAQ or an example that I've missed?  Anyone got any
> recommendations or pointers?   Even a RTFM would do.
> 
> Richard

How about using the tokens command to define a REM token like so?

tokens {
   REM="rem";
}

And using

REMARK :
   REM ( ~( '\r' | '\n' ) ) * NEWLINE
   { setType(Token.SKIP); }
   ;

should favor "rem" for REMARK instead to recognize an ID token. At least
that should work for ANTLR 3 - I don't know much about the difference to
ANTLR 2.7.7.

Best regards,
Johannes Luber

> Richard Bown wrote:
>> Hi,
>>
>> I've got a lexer non-determinism which is making me go back and
>> forward between trying to fix the lexer or trying to write a good
>> parser rule for the problem - neither of which I can seem to get
>> right.  This is with Antlr 2.7.5 producing C#.  Apologies for the
>> lengthy explanation.
>>
>> The rules are for handling SQL comments and similar one liners (I'm
>> treating these all as single line statements).   Whilst this is
>> relatively simple for non-alphabetic characters - you can write a
>> lexer rule such as this:
>>
>> COMMENT :
>>     '-' '-' ( ~('\r' | '\n') )* NEWLINE { setType(Token.SKIP); }
>> ;
>>
>> If you then define say a similar line for "rem" statements:
>>
>> REMARK :
>>     'r' 'e' 'm' ( ~( '\r' | '\n' ) ) * NEWLINE
>> { setType(Token.SKIP); }
>> ;
>>
>> This is fine - but if you also have a lexer rule for matching
>> identifiers i.e. (slightly simplified):
>>
>> ID :
>>     'A-Z' | 'a-z' | '_' | '0'..'9'
>> ;
>>
>> You get non-determinisms of course with the "rem" rule and any other
>> rules that use alphanumerics.
>>
>> The other way I've attempted to solve this is to just catch the 'rem'
>> elements in the parser.   This is fine (and it would be a more useful
>> solution if I wanted to do some simple processing of the comment
>> lines) but then if there are any interesting and unusual characters in
>> the remainder of the "rem" line then the parser doesn't match on these
>> elements.  I've tried to be exhaustive about the type of 'words' that
>> the remainder of the comment lines can contain but then I start to
>> trip over lexer rules again and we go around in circles.
>>
>> So I've been going back to the lexer to solve this - and whilst with
>> the non-determinisms things almost work, the lexer rules also greedily
>> slurp  up parts of legitimate ids.   One thing to fix that is to force
>> the lexer to match from the start of the line only I s'pose... but it
>> all seems like putting one hack on top of another.
>>
>> Any clues how to handle this elegantly in the parser?   To me it would
>> make sense to dump these lexer rules and handle all of these types in
>> the parser - I just need an equivalent to "match from here to end of
>> line" for the parser perhaps?
>>
>> Rgds,
>> Richard Bown
>>
> 


From femtowin at gmail.com  Sun Apr 15 05:11:39 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 20:11:39 +0800
Subject: [antlr-interest] antlr should throw NoViableAltException
In-Reply-To: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
References: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
Message-ID: <91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>

also, generating parser will also produce the following warning:
[20:08:36] warning(200): Rubyv3.g:101:32: Decision can match input
such as "SEMI" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input

but for the grammar:
statement
	:	expression (modifier_line)* SEMI? -> ^(STATEMENT expression
(modifier_line)*)
	|       SEMI!
	;
input SEMI shouldn't cause an ambiguity, because expression can't be empty,
so either match the alt1 or alt2, why does it will report that warning.
Anybody has any ideas? Thanks.

On 4/15/07, femto gary <femtowin at gmail.com> wrote:
> Hi all, for following grammar,
>
> grammar Rubyv3;
>
> options {
>         output=AST;
> }
> tokens {
>         // 'imaginary' tokens
>         STATEMENT_LIST;
>         STATEMENT;
>         RPAREN_IN_METHOD_DEFINATION;
>         BODY;
>         CALL;
>         ARG;
>         //COMPSTMT;
>         SYMBOL;
>         BLOCK;
>         MULTIPLE_ASSIGN;
>         MULTIPLE_ASSIGN_WITH_EXTRA_COMMA;
>         BLOCK_ARG;
>         BLOCK_ARG_WITH_EXTRA_COMMA;
>         MRHS;
>         NESTED_LHS;
>         SINGLETON_METHOD;
>         STRING;
> }
>
> /*@rulecatch {
> catch (RecognitionException e) {
> throw e;
> }
> }*/
>
> @header {
> package com.xruby.compiler.parser;
> }
> @lexer::header {
> package com.xruby.compiler.parser;
> }
>
> @members{
>         private int can_be_command_ = 0;
>
>         protected void enterScope()     {assert(false);}
>         protected void enterBlockScope()        {assert(false);}
>         protected void leaveScope()     {assert(false);}
>         protected void addVariable(Token id)    {assert(false);}
>         protected void setIsInNestedMultipleAssign(boolean v)   {assert(false);}
>         protected void
> tellLexerWeHaveFinishedParsingMethodparameters()        {assert(false);}
>         protected void tellLexerWeHaveFinishedParsingSymbol()   {assert(false);}
>         protected void
> tellLexerWeHaveFinishedParsingStringExpressionSubstituation()   {assert(false);}
>         protected void
> tellLexerWeHaveFinishedParsingRegexExpressionSubstituation()    {assert(false);}
>         protected void
> tellLexerWeHaveFinishedParsingHeredocExpressionSubstituation()  {assert(false);}
>
>
> }
>
> @lexer::members
> {
>         //The following methods are to be implemented in the subclass.
>         //In fact they should be 'abstract', but antlr refuses to generate
>         //abstract class. We can either insert 'abstract' keyword manually
>         //after the lexer is generated, or simply use assert() to prevent
>         //these function to run (so you have to overide them). I choosed
>         //the later approach.
>         protected boolean expectOperator(int k) throws
> Exception               {assert(false);return false;}
>         protected boolean expectUnary()  throws
> Exception                       {assert(false);return false;}
>         protected boolean expectHash()                                  {assert(false);return false;}
>         protected boolean expectHeredoc()                               {assert(false);return false;}
>         protected boolean expectLeadingColon2()         {assert(false);return false;}
>         protected boolean expectArrayAccess()                           {assert(false);return false;}
>         protected boolean lastTokenIsDotOrColon2()              {assert(false);return false;}
>         protected boolean lastTokenIsSemi()                             {assert(false);return false;}
>         protected boolean
> lastTokenIsKeywordDefOrColonWithNoFollowingSpace()                      {assert(false);return
> false;}
>         protected boolean
> lastTokenIsColonWithNoFollowingSpace()                  {assert(false);return false;}
>         protected boolean shouldIgnoreLinebreak()                       {assert(false);return false;}
>         protected int trackDelimiterCount(char next_char, char delimeter, int
> delimeter_count)        {assert(false);return 0;}
>         protected boolean isDelimiter(String next_line, String
> delimiter)      {assert(false);return false;}
>         protected boolean isAsciiValueTerminator(char
> value)  {assert(false);return false;}
>         protected boolean justSeenWhitespace()  {assert(false);return false;}
>         protected void setSeenWhitespace()                      {assert(false);}
>         protected boolean expressionSubstitutionIsNext()        throws
> Exception       {assert(false);return false;}
>         protected boolean spaceIsNext() throws Exception        {assert(false);return false;}
>         protected void setCurrentSpecialStringDelimiter(char delimiter, int
> delimiter_count)        {assert(false);}
>         protected void updateCurrentSpecialStringDelimiterCount(int
> delimiter_count)        {assert(false);}
> }
>
> program
>                 :       statement_list
>                 ;
>
> statement_list
>                 :       statement* -> ^(STATEMENT_LIST statement*)
>                         ;
>
> /*terminal
>                 :       SEMI!
>                 |       LINE_BREAK!
>                 ;*/
> statement
>         :       expression (modifier_line)* SEMI? -> ^(STATEMENT expression
> (modifier_line)*)
>         |       SEMI!
>         ;
>
> modifier_line
>         :(IF_MODIFIER|UNLESS_MODIFIER|WHILE_MODIFIER|UNTIL_MODIFIER|RESCUE_MODIFIER)^
> expression
> /*statement
>                 :       body=statementWithoutModifier
>                                                                         (IF_MODIFIER^           if_condition=expression {#statement =
> #(#[LITERAL_if, 'if'], if_condition, #(#[COMPSTMT, 'COMPSTMT'],
> #body));}
>                                                                         |UNLESS_MODIFIER^       unless_condition=expression     {#statement =
> #(#[LITERAL_unless, 'unless'], unless_condition, #(#[COMPSTMT,
> 'COMPSTMT'], #body));}
>                                                                         |WHILE_MODIFIER^        while_condition=expression      {#statement =
> #(#[LITERAL_while, 'while'], while_condition, #(#[COMPSTMT,
> 'COMPSTMT'], #body));}
>                                                                         |UNTIL_MODIFIER^        until_condition=expression      {#statement =
> #(#[LITERAL_until, 'until'], until_condition, #(#[COMPSTMT,
> 'COMPSTMT'], #body));}
>                                                                         |RESCUE_MODIFIER^       rescue_condition=expression     {#statement =
> #(#[LITERAL_rescue, 'rescue'], rescue_condition, #(#[COMPSTMT,
> 'COMPSTMT'], #body));}
>                                                                         )**/
>                 ;
> IF_MODIFIER     :  'if';
> UNLESS_MODIFIER :  'unless';
> WHILE_MODIFIER  :  'while';
> UNTIL_MODIFIER  :  'until';
> RESCUE_MODIFIER :  'resuce';
>
> SEMI    :';'
>         ;
>
> LINE_BREAK
>         :'\r'? '\n'{skip();}
>         ;
> //OMIT_LINE_BREAK
> //      :       LINE_BREAK* {skip();}
> //      ;
> //emptyable_expression
> //      :       expression|;
> expression
>         :       'expression0' | 'expression1' | 'expression2';
>
> WS      :       (' ' | '\t') { skip(); }
>         ;
> ID      :       ('a'..'z' | 'A'..'Z') (('a'..'z' | 'A'..'Z') | ('0'..'9'))*
>         ;
> ----------------------------------------------------------------------------
> ruby should throw NoViableAltException when meeting input
> "if expression1; ",
> this is the test drive:
>
> package com.xruby.compiler.parser;
>
> import org.antlr.runtime.*;
> import org.antlr.runtime.tree.CommonTree;
>
> import java.io.StringReader;
> import java.io.StringBufferInputStream;
> import java.io.IOException;
>
> import junit.framework.TestCase;
>
> /**
>  * Copyright 2005-2007 femto
>  * Distributed under the GNU General Public License 2.0
>  */
> public class Rubyv3Test extends TestCase {
>     public void test_parse() throws Exception {
>         assert_parse("", "STATEMENT_LIST");
>         assert_parse(";", "STATEMENT_LIST");
>         assert_parse("  ", "STATEMENT_LIST");
>         assert_parse(";\n;\n;\n;\n", "STATEMENT_LIST");
>         assert_parse("expression0 \tif expression1 if expression2; ",
> "(STATEMENT_LIST (STATEMENT expression0 (if expression1) (if
> expression2)))");
>         assert_parse("expression0 \tif\nexpression1 if expression2;",
> "(STATEMENT_LIST (STATEMENT expression0 (if expression1) (if
> expression2)))");
>         assert_parse("expression0 \tif\nexpression1 if expression2",
> "(STATEMENT_LIST (STATEMENT expression0 (if expression1) (if
> expression2)))");
>         assert_parse("expression0 \tif expression1 if expression2\n
> expression0", "(STATEMENT_LIST (STATEMENT expression0 (if expression1)
> (if expression2)) (STATEMENT expression0))");
>         assert_parse("expression0 \tif expression1 if expression2;
> expression0", "(STATEMENT_LIST (STATEMENT expression0 (if expression1)
> (if expression2)) (STATEMENT expression0))");
>         assert_parse("expression0 \tif expression1 if expression2;;
> expression0", "(STATEMENT_LIST (STATEMENT expression0 (if expression1)
> (if expression2)) (STATEMENT expression0))");
>         assert_parse("if expression1; ", "");
>     }
>     public void assert_parse(String text, String expectedTree) throws
> IOException
>
>     {
>         ANTLRInputStream input =
>                 new ANTLRInputStream(new StringBufferInputStream(text));
>
>         Rubyv3Lexer lexer = new Rubyv3Lexer(input);
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>         Rubyv3Parser parser = new Rubyv3Parser(tokens);
>         Rubyv3Parser.program_return result = null;
>         try {
>             result = parser.program();
>         } catch (NoViableAltException e) {
>             e.printStackTrace();
>         }
>         catch (RecognitionException e) {
>             e.printStackTrace();
>         }
>         assertEquals(expectedTree, ((CommonTree)result.tree).toStringTree());
>         //System.out.println("tree:" +
> ((CommonTree)result.tree).toStringTree());
>     }
>
> }
> //besides, in Antlrworks interpreter mode, it will produce NoViableAltException,
> so I think it is a bug in main program.(antlr should throw Exception,
> but instead
> nothing happened).
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From femtowin at gmail.com  Sun Apr 15 05:17:21 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 20:17:21 +0800
Subject: [antlr-interest] Antlr3b6 [bug?] Can't find template
	matchSetTrack.st
Message-ID: <91170ee40704150517o3ab5c907xf8228c2dee313c70@mail.gmail.com>

for the following grammar, antlr reports error:
ANTLR Parser Generator  Version 3.0b6 (Jan 31, 2007)  1989-2007
warning(200): Rubyv3.g:101:32: Decision can match input such as "SEMI" using mul
tiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
error(10):  internal error: Rubyv3.g : java.lang.IllegalArgumentException: Can't
 find template matchSetTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.
java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.
java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.
java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.
java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.j
ava:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160
)
org.antlr.codegen.CodeGenTreeWalker.set(CodeGenTreeWalker.java:2557)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2243)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1370)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1115)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:999)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:725)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:458)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:305)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:415)
org.antlr.Tool.processGrammar(Tool.java:329)
org.antlr.Tool.process(Tool.java:266)
org.antlr.Tool.main(Tool.java:69)

doing a google search reveals somebody has also this problem:
http://www.antlr.org/pipermail/antlr-interest/2007-January/019038.html,
is this an antlr3b6 bug?

grammar Rubyv3;

options {
        output=AST;
}
tokens {
	// 'imaginary' tokens
	STATEMENT_LIST;
	STATEMENT;
	IF;
	RPAREN_IN_METHOD_DEFINATION;
	BODY;
	CALL;
	ARG;
	//COMPSTMT;
	SYMBOL;
	BLOCK;
	MULTIPLE_ASSIGN;
	MULTIPLE_ASSIGN_WITH_EXTRA_COMMA;
	BLOCK_ARG;
	BLOCK_ARG_WITH_EXTRA_COMMA;
	MRHS;
	NESTED_LHS;
	SINGLETON_METHOD;
	STRING;
}

/*@rulecatch {
catch (RecognitionException e) {
throw e;
}
}*/

@header {
package com.xruby.compiler.parser;
}
@lexer::header {
package com.xruby.compiler.parser;
}

@members{
	private int can_be_command_ = 0;

	protected void enterScope()	{assert(false);}
	protected void enterBlockScope()	{assert(false);}
	protected void leaveScope()	{assert(false);}
	protected void addVariable(Token id)	{assert(false);}
	protected void setIsInNestedMultipleAssign(boolean v)	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingMethodparameters()	{assert(false);}
	protected void tellLexerWeHaveFinishedParsingSymbol()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingStringExpressionSubstituation()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingRegexExpressionSubstituation()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingHeredocExpressionSubstituation()	{assert(false);}

	
}

@lexer::members
{
	//The following methods are to be implemented in the subclass.
	//In fact they should be 'abstract', but antlr refuses to generate
	//abstract class. We can either insert 'abstract' keyword manually
	//after the lexer is generated, or simply use assert() to prevent
	//these function to run (so you have to overide them). I choosed
	//the later approach.
	protected boolean expectOperator(int k) throws
Exception		{assert(false);return false;}
	protected boolean expectUnary()	 throws
Exception			{assert(false);return false;}
	protected boolean expectHash()					{assert(false);return false;}
	protected boolean expectHeredoc()				{assert(false);return false;}
	protected boolean expectLeadingColon2()		{assert(false);return false;}
	protected boolean expectArrayAccess()				{assert(false);return false;}
	protected boolean lastTokenIsDotOrColon2()		{assert(false);return false;}
	protected boolean lastTokenIsSemi()				{assert(false);return false;}
	protected boolean
lastTokenIsKeywordDefOrColonWithNoFollowingSpace()			{assert(false);return
false;}
	protected boolean
lastTokenIsColonWithNoFollowingSpace()			{assert(false);return false;}
	protected boolean shouldIgnoreLinebreak()			{assert(false);return false;}
	protected int trackDelimiterCount(char next_char, char delimeter, int
delimeter_count)	{assert(false);return 0;}
	protected boolean isDelimiter(String next_line, String
delimiter)	{assert(false);return false;}
	protected boolean isAsciiValueTerminator(char
value)	{assert(false);return false;}
	protected boolean justSeenWhitespace()	{assert(false);return false;}
	protected void setSeenWhitespace()			{assert(false);}
	protected boolean expressionSubstitutionIsNext()	throws
Exception	{assert(false);return false;}
	protected boolean spaceIsNext()	throws Exception	{assert(false);return false;}
	protected void setCurrentSpecialStringDelimiter(char delimiter, int
delimiter_count)	{assert(false);}
	protected void updateCurrentSpecialStringDelimiterCount(int
delimiter_count)	{assert(false);}
}

program
		:	statement_list
		;

statement_list
		:	statement* -> ^(STATEMENT_LIST statement*)
			;

/*terminal
		:	SEMI!
		|	LINE_BREAK!
		;*/
statement
	:	expression (modifier_line)* SEMI? -> ^(STATEMENT expression
(modifier_line)*)
	|       SEMI!
	;

modifier_line
	:(IF_MODIFIER|UNLESS_MODIFIER|WHILE_MODIFIER|UNTIL_MODIFIER|RESCUE_MODIFIER)^
expression
		;
IF_MODIFIER     :  'if';
UNLESS_MODIFIER :  'unless';
WHILE_MODIFIER  :  'while';
UNTIL_MODIFIER  :  'until';
RESCUE_MODIFIER :  'resuce';

SEMI	:';'
	;

LINE_BREAK
	:'\r'? '\n'{skip();}
	;
//OMIT_LINE_BREAK
//	:	LINE_BREAK* {skip();}
//	;
//emptyable_expression
//	:	expression|;
expression
	:	'expression0' | 'expression1' | 'expression2'|boolean_expression|
block_expression|if_expression|unless_expression;
	
block_expression
	:	'begin' body 'end';
body	:	statement_list;
boolean_expression
	:	'false'|'nil'|'true';
if_expression
	:	'if' b=boolean_expression ('then'|':'|LINE_BREAK)
	        body0=body ('elsif' b1=boolean_expression
('then'|':'|LINE_BREAK) body1+=body)*
	        ('else' body2=body)?
	        'end' -> ^(IF $b $body0 $b1* $body1* $body2? )
	        ;
unless_expression
	:	'unless' boolean_expression ('then'|':'|LINE_BREAK)
	        body
	        ('else' body)?
	        'end';	
	
WS	:	(' ' | '\t') { skip(); }
	;
ID	:	('a'..'z' | 'A'..'Z') (('a'..'z' | 'A'..'Z') | ('0'..'9'))*
	;

From dave at badgers-in-foil.co.uk  Sun Apr 15 07:04:39 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 15 Apr 2007 14:04:39 +0000
Subject: [antlr-interest] antlr should throw NoViableAltException
In-Reply-To: <91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>
References: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
	<91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>
Message-ID: <20070415140439.GA11003@badgers-in-foil.co.uk>

On Sun, Apr 15, 2007 at 08:11:39PM +0800, femto gary wrote:
> also, generating parser will also produce the following warning:
> [20:08:36] warning(200): Rubyv3.g:101:32: Decision can match input
> such as "SEMI" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> 
> but for the grammar:
> statement
> 	:	expression (modifier_line)* SEMI? -> ^(STATEMENT expression
> (modifier_line)*)
> 	|       SEMI!
> 	;
> input SEMI shouldn't cause an ambiguity, because expression can't be empty,
> so either match the alt1 or alt2, why does it will report that warning.
> Anybody has any ideas? Thanks.

I think that since the grammar allows,

  statement*

the ambiguity is between the alternatives of,

 1) matching 'SEMI?' right now, in this invocation of 'statement', and,

 2) not matching 'SEMI?', exiting this invocation of the 'statement' rule
    and then matching the 'SEMI!' alternative the next time around the
    'statement*' loop

Is "1;" to be parsed as

  (STATEMENT 1) (STATEMENT ;)
or
  (STATEMENT 1;)



i.e. the decision being referred to in the message is probably the one
at the '?', not the one at the '|', if that helps at all :)


ta,
dave

-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Sun Apr 15 07:19:03 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 15 Apr 2007 14:19:03 +0000
Subject: [antlr-interest] Antlr3b6 [bug?] Can't find template
	matchSetTrack.st
In-Reply-To: <91170ee40704150517o3ab5c907xf8228c2dee313c70@mail.gmail.com>
References: <91170ee40704150517o3ab5c907xf8228c2dee313c70@mail.gmail.com>
Message-ID: <20070415141903.GB11003@badgers-in-foil.co.uk>

On Sun, Apr 15, 2007 at 08:17:21PM +0800, femto gary wrote:
> for the following grammar, antlr reports error:

> Can't find template matchSetTrack.st

> doing a google search reveals somebody has also this problem:
> http://www.antlr.org/pipermail/antlr-interest/2007-January/019038.html,
> is this an antlr3b6 bug?

I can't say for sure which parser rule is causing the error, but this
looks a bit suspicious,

> if_expression
> 	:	'if' b=boolean_expression ('then'|':'|LINE_BREAK)
> 	        body0=body ('elsif' b1=boolean_expression
> ('then'|':'|LINE_BREAK) body1+=body)*
> 	        ('else' body2=body)?
> 	        'end' -> ^(IF $b $body0 $b1* $body1* $body2? )
> 	        ;

simply because if I recall correctly, the construction

  (... b1=boolean_expression ...)*

will overwrite b1 each time that ()* subrule matches, so that only the
last boolean_expression matched will appear in the result tree.  Might
be better for you to create a new rule to build the "elsif" subtree.


ta,
dave

-- 
http://david.holroyd.me.uk/

From femtowin at gmail.com  Sun Apr 15 07:30:25 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 22:30:25 +0800
Subject: [antlr-interest] Antlr3b6 [bug?] Can't find template
	matchSetTrack.st
In-Reply-To: <20070415141903.GB11003@badgers-in-foil.co.uk>
References: <91170ee40704150517o3ab5c907xf8228c2dee313c70@mail.gmail.com>
	<20070415141903.GB11003@badgers-in-foil.co.uk>
Message-ID: <91170ee40704150730v78640522xa990ed17e0d3bfb8@mail.gmail.com>

Hi David, this is a bug in antlr3b6, I've downloaded
the daily build, Terence has fixed it.

On 4/15/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Sun, Apr 15, 2007 at 08:17:21PM +0800, femto gary wrote:
> > for the following grammar, antlr reports error:
>
> > Can't find template matchSetTrack.st
>
> > doing a google search reveals somebody has also this problem:
> > http://www.antlr.org/pipermail/antlr-interest/2007-January/019038.html,
> > is this an antlr3b6 bug?
>
> I can't say for sure which parser rule is causing the error, but this
> looks a bit suspicious,
>
> > if_expression
> >       :       'if' b=boolean_expression ('then'|':'|LINE_BREAK)
> >               body0=body ('elsif' b1=boolean_expression
> > ('then'|':'|LINE_BREAK) body1+=body)*
> >               ('else' body2=body)?
> >               'end' -> ^(IF $b $body0 $b1* $body1* $body2? )
> >               ;
>
> simply because if I recall correctly, the construction
>
>  (... b1=boolean_expression ...)*
>
> will overwrite b1 each time that ()* subrule matches, so that only the
> last boolean_expression matched will appear in the result tree.  Might
> be better for you to create a new rule to build the "elsif" subtree.
>
>
> ta,
> dave
>
> --
> http://david.holroyd.me.uk/
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From femtowin at gmail.com  Sun Apr 15 07:38:15 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 22:38:15 +0800
Subject: [antlr-interest] antlr should throw NoViableAltException
In-Reply-To: <20070415140439.GA11003@badgers-in-foil.co.uk>
References: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
	<91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>
	<20070415140439.GA11003@badgers-in-foil.co.uk>
Message-ID: <91170ee40704150738m4ff74cd2k6738a7b58e599f5e@mail.gmail.com>

Hi David, thanks for the information,
I'll check it out.

On 4/15/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Sun, Apr 15, 2007 at 08:11:39PM +0800, femto gary wrote:
> > also, generating parser will also produce the following warning:
> > [20:08:36] warning(200): Rubyv3.g:101:32: Decision can match input
> > such as "SEMI" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >
> > but for the grammar:
> > statement
> >       :       expression (modifier_line)* SEMI? -> ^(STATEMENT expression
> > (modifier_line)*)
> >       |       SEMI!
> >       ;
> > input SEMI shouldn't cause an ambiguity, because expression can't be empty,
> > so either match the alt1 or alt2, why does it will report that warning.
> > Anybody has any ideas? Thanks.
>
> I think that since the grammar allows,
>
>  statement*
>
> the ambiguity is between the alternatives of,
>
>  1) matching 'SEMI?' right now, in this invocation of 'statement', and,
>
>  2) not matching 'SEMI?', exiting this invocation of the 'statement' rule
>    and then matching the 'SEMI!' alternative the next time around the
>    'statement*' loop
>
> Is "1;" to be parsed as
>
>  (STATEMENT 1) (STATEMENT ;)
> or
>  (STATEMENT 1;)
>
>
>
> i.e. the decision being referred to in the message is probably the one
> at the '?', not the one at the '|', if that helps at all :)
>
>
> ta,
> dave
>
> --
> http://david.holroyd.me.uk/
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From femtowin at gmail.com  Sun Apr 15 07:51:50 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 22:51:50 +0800
Subject: [antlr-interest] antlr should throw NoViableAltException
In-Reply-To: <91170ee40704150738m4ff74cd2k6738a7b58e599f5e@mail.gmail.com>
References: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
	<91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>
	<20070415140439.GA11003@badgers-in-foil.co.uk>
	<91170ee40704150738m4ff74cd2k6738a7b58e599f5e@mail.gmail.com>
Message-ID: <91170ee40704150751p23be6be6hd77e36998701ac09@mail.gmail.com>

besides, do you know how to conditionally pipe a token to
differnent channel?
   I mean, for the following grammar:
grammar Rubyv3;

options {
        output=AST;
}
tokens {
	// 'imaginary' tokens
	STATEMENT_LIST;
	STATEMENT;
	IF;
	RPAREN_IN_METHOD_DEFINATION;
	BODY;
	CALL;
	ARG;
	//COMPSTMT;
	SYMBOL;
	BLOCK;
	MULTIPLE_ASSIGN;
	MULTIPLE_ASSIGN_WITH_EXTRA_COMMA;
	BLOCK_ARG;
	BLOCK_ARG_WITH_EXTRA_COMMA;
	MRHS;
	NESTED_LHS;
	SINGLETON_METHOD;
	STRING;
}

@rulecatch {
catch (RecognitionException e) {
throw e;
}
}

@header {
package com.xruby.compiler.parser;
}
@lexer::header {
package com.xruby.compiler.parser;
}

@members{
	private int can_be_command_ = 0;
	private Rubyv3Lexer lexer;
        protected void enterScope()	{assert(false);}
	protected void enterBlockScope()	{assert(false);}
	protected void leaveScope()	{assert(false);}
	protected void addVariable(Token id)	{assert(false);}
	protected void setIsInNestedMultipleAssign(boolean v)	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingMethodparameters()	{assert(false);}
	protected void tellLexerWeHaveFinishedParsingSymbol()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingStringExpressionSubstituation()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingRegexExpressionSubstituation()	{assert(false);}
	protected void
tellLexerWeHaveFinishedParsingHeredocExpressionSubstituation()	{assert(false);}
}

@lexer::members
{
	//The following methods are to be implemented in the subclass.
	//In fact they should be 'abstract', but antlr refuses to generate
	//abstract class. We can either insert 'abstract' keyword manually
	//after the lexer is generated, or simply use assert() to prevent
	//these function to run (so you have to overide them). I choosed
	//the later approach.
	public int line_break_channel = HIDDEN;
	public void openLineBreakChannel() {
        line_break_channel = DEFAULT_TOKEN_CHANNEL;
        }

	protected boolean expectOperator(int k) throws
Exception		{assert(false);return false;}
	protected boolean expectUnary()	 throws
Exception			{assert(false);return false;}
	protected boolean expectHash()					{assert(false);return false;}
	protected boolean expectHeredoc()				{assert(false);return false;}
	protected boolean expectLeadingColon2()		{assert(false);return false;}
	protected boolean expectArrayAccess()				{assert(false);return false;}
	protected boolean lastTokenIsDotOrColon2()		{assert(false);return false;}
	protected boolean lastTokenIsSemi()				{assert(false);return false;}
	protected boolean
lastTokenIsKeywordDefOrColonWithNoFollowingSpace()			{assert(false);return
false;}
	protected boolean
lastTokenIsColonWithNoFollowingSpace()			{assert(false);return false;}
	protected boolean shouldIgnoreLinebreak()			{assert(false);return false;}
	protected int trackDelimiterCount(char next_char, char delimeter, int
delimeter_count)	{assert(false);return 0;}
	protected boolean isDelimiter(String next_line, String
delimiter)	{assert(false);return false;}
	protected boolean isAsciiValueTerminator(char
value)	{assert(false);return false;}
	protected boolean justSeenWhitespace()	{assert(false);return false;}
	protected void setSeenWhitespace()			{assert(false);}
	protected boolean expressionSubstitutionIsNext()	throws
Exception	{assert(false);return false;}
	protected boolean spaceIsNext()	throws Exception	{assert(false);return false;}
	protected void setCurrentSpecialStringDelimiter(char delimiter, int
delimiter_count)	{assert(false);}
	protected void updateCurrentSpecialStringDelimiterCount(int
delimiter_count)	{assert(false);}
}


program
@init
{
  lexer = (Rubyv3Lexer) getTokenStream().getTokenSource();
}               :	statement_list
		;

statement_list
		:	statement* -> ^(STATEMENT_LIST statement*)
			;

/*terminal
		:	SEMI!
		|	LINE_BREAK!
		;*/
statement
	:	expression (modifier_line)* SEMI? -> ^(STATEMENT expression
(modifier_line)*)
	|       SEMI!
	;

modifier_line
	:(IF_MODIFIER|UNLESS_MODIFIER|WHILE_MODIFIER|UNTIL_MODIFIER|RESCUE_MODIFIER)^
expression
		;
IF_MODIFIER     :  'if';
UNLESS_MODIFIER :  'unless';
WHILE_MODIFIER  :  'while';
UNTIL_MODIFIER  :  'until';
RESCUE_MODIFIER :  'resuce';

SEMI	:';'
	;

LINE_BREAK
	:'\r'? '\n'{$channel=line_break_channel;}
	;
//OMIT_LINE_BREAK
//	:	LINE_BREAK* {skip();}
//	;
//emptyable_expression
//	:	expression|;
expression
	:	'expression0' | 'expression1' | 'expression2'|boolean_expression|
block_expression|if_expression|unless_expression;
	
block_expression
	:	'begin' body 'end';
body	:	statement_list;
boolean_expression
	:	'false'|'nil'|'true';
if_expression
	:	'if' b=boolean_expression
{lexer.openLineBreakChannel();}('then'|':'|LINE_BREAK)
	        body0=body ('elsif' b1=boolean_expression
('then'|':'|LINE_BREAK) body1+=body)*
	        ('else' body2=body)?
	        'end' -> ^(IF $b $body0 $b1* $body1* $body2? )
	        ;
unless_expression
	:	'unless' boolean_expression ('then'|':'|LINE_BREAK)
	        body
	        ('else' body)?
	        'end';	
	
WS	:	(' ' | '\t') { skip(); }
	;
ID	:	('a'..'z' | 'A'..'Z') (('a'..'z' | 'A'..'Z') | ('0'..'9'))*
	;
I want to openLineBreakChannel in if_expression,
{lexer.openLineBreakChannel();}, so after if boolean_expression
the line_break or 'then'|':' are mandatory, not skip() or channel HIDDEN,
but I've tried this, found nothing happened.
it seems Lexer all parse out token stream then handle it to parser, so
parser can't affect lexer thru call to
lexer.openLineBreakChannel();

On 4/15/07, femto gary <femtowin at gmail.com> wrote:
> Hi David, thanks for the information,
> I'll check it out.
>
> On 4/15/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> > On Sun, Apr 15, 2007 at 08:11:39PM +0800, femto gary wrote:
> > > also, generating parser will also produce the following warning:
> > > [20:08:36] warning(200): Rubyv3.g:101:32: Decision can match input
> > > such as "SEMI" using multiple alternatives: 1, 2
> > > As a result, alternative(s) 2 were disabled for that input
> > >
> > > but for the grammar:
> > > statement
> > >       :       expression (modifier_line)* SEMI? -> ^(STATEMENT expression
> > > (modifier_line)*)
> > >       |       SEMI!
> > >       ;
> > > input SEMI shouldn't cause an ambiguity, because expression can't be empty,
> > > so either match the alt1 or alt2, why does it will report that warning.
> > > Anybody has any ideas? Thanks.
> >
> > I think that since the grammar allows,
> >
> >  statement*
> >
> > the ambiguity is between the alternatives of,
> >
> >  1) matching 'SEMI?' right now, in this invocation of 'statement', and,
> >
> >  2) not matching 'SEMI?', exiting this invocation of the 'statement' rule
> >    and then matching the 'SEMI!' alternative the next time around the
> >    'statement*' loop
> >
> > Is "1;" to be parsed as
> >
> >  (STATEMENT 1) (STATEMENT ;)
> > or
> >  (STATEMENT 1;)
> >
> >
> >
> > i.e. the decision being referred to in the message is probably the one
> > at the '?', not the one at the '|', if that helps at all :)
> >
> >
> > ta,
> > dave
> >
> > --
> > http://david.holroyd.me.uk/
> >
>
>
> --
> Best Regards
> XRuby http://xruby.com
> femto http://hi.baidu.com/femto
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From femtowin at gmail.com  Sun Apr 15 08:19:41 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 15 Apr 2007 23:19:41 +0800
Subject: [antlr-interest] antlr should throw NoViableAltException
In-Reply-To: <91170ee40704150751p23be6be6hd77e36998701ac09@mail.gmail.com>
References: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
	<91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>
	<20070415140439.GA11003@badgers-in-foil.co.uk>
	<91170ee40704150738m4ff74cd2k6738a7b58e599f5e@mail.gmail.com>
	<91170ee40704150751p23be6be6hd77e36998701ac09@mail.gmail.com>
Message-ID: <91170ee40704150819h677999b5q8804598a2f0f8c93@mail.gmail.com>

actually I found why SEMI is ambuity.
when matching statement thru alt1,
after matching expression, modifier_line,
if it meets a SEMI, it can either match on SEMI?
or just ends this statement , starting a new matching
(which means a new statement just match SEMI),
so this is ambuity.
anyway, thanks for David,
you point me the right direction, thanks.

On 4/15/07, femto gary <femtowin at gmail.com> wrote:
> besides, do you know how to conditionally pipe a token to
> differnent channel?
>   I mean, for the following grammar:
> grammar Rubyv3;
>
> options {
>        output=AST;
> }
> tokens {
>        // 'imaginary' tokens
>        STATEMENT_LIST;
>        STATEMENT;
>        IF;
>        RPAREN_IN_METHOD_DEFINATION;
>        BODY;
>        CALL;
>        ARG;
>        //COMPSTMT;
>        SYMBOL;
>        BLOCK;
>        MULTIPLE_ASSIGN;
>        MULTIPLE_ASSIGN_WITH_EXTRA_COMMA;
>        BLOCK_ARG;
>        BLOCK_ARG_WITH_EXTRA_COMMA;
>        MRHS;
>        NESTED_LHS;
>        SINGLETON_METHOD;
>        STRING;
> }
>
> @rulecatch {
> catch (RecognitionException e) {
> throw e;
> }
> }
>
> @header {
> package com.xruby.compiler.parser;
> }
> @lexer::header {
> package com.xruby.compiler.parser;
> }
>
> @members{
>        private int can_be_command_ = 0;
>        private Rubyv3Lexer lexer;
>        protected void enterScope()     {assert(false);}
>        protected void enterBlockScope()        {assert(false);}
>        protected void leaveScope()     {assert(false);}
>        protected void addVariable(Token id)    {assert(false);}
>        protected void setIsInNestedMultipleAssign(boolean v)   {assert(false);}
>        protected void
> tellLexerWeHaveFinishedParsingMethodparameters()        {assert(false);}
>        protected void tellLexerWeHaveFinishedParsingSymbol()   {assert(false);}
>        protected void
> tellLexerWeHaveFinishedParsingStringExpressionSubstituation()   {assert(false);}
>        protected void
> tellLexerWeHaveFinishedParsingRegexExpressionSubstituation()    {assert(false);}
>        protected void
> tellLexerWeHaveFinishedParsingHeredocExpressionSubstituation()  {assert(false);}
> }
>
> @lexer::members
> {
>        //The following methods are to be implemented in the subclass.
>        //In fact they should be 'abstract', but antlr refuses to generate
>        //abstract class. We can either insert 'abstract' keyword manually
>        //after the lexer is generated, or simply use assert() to prevent
>        //these function to run (so you have to overide them). I choosed
>        //the later approach.
>        public int line_break_channel = HIDDEN;
>        public void openLineBreakChannel() {
>        line_break_channel = DEFAULT_TOKEN_CHANNEL;
>        }
>
>        protected boolean expectOperator(int k) throws
> Exception               {assert(false);return false;}
>        protected boolean expectUnary()  throws
> Exception                       {assert(false);return false;}
>        protected boolean expectHash()                                  {assert(false);return false;}
>        protected boolean expectHeredoc()                               {assert(false);return false;}
>        protected boolean expectLeadingColon2()         {assert(false);return false;}
>        protected boolean expectArrayAccess()                           {assert(false);return false;}
>        protected boolean lastTokenIsDotOrColon2()              {assert(false);return false;}
>        protected boolean lastTokenIsSemi()                             {assert(false);return false;}
>        protected boolean
> lastTokenIsKeywordDefOrColonWithNoFollowingSpace()                      {assert(false);return
> false;}
>        protected boolean
> lastTokenIsColonWithNoFollowingSpace()                  {assert(false);return false;}
>        protected boolean shouldIgnoreLinebreak()                       {assert(false);return false;}
>        protected int trackDelimiterCount(char next_char, char delimeter, int
> delimeter_count)        {assert(false);return 0;}
>        protected boolean isDelimiter(String next_line, String
> delimiter)      {assert(false);return false;}
>        protected boolean isAsciiValueTerminator(char
> value)  {assert(false);return false;}
>        protected boolean justSeenWhitespace()  {assert(false);return false;}
>        protected void setSeenWhitespace()                      {assert(false);}
>        protected boolean expressionSubstitutionIsNext()        throws
> Exception       {assert(false);return false;}
>        protected boolean spaceIsNext() throws Exception        {assert(false);return false;}
>        protected void setCurrentSpecialStringDelimiter(char delimiter, int
> delimiter_count)        {assert(false);}
>        protected void updateCurrentSpecialStringDelimiterCount(int
> delimiter_count)        {assert(false);}
> }
>
>
> program
> @init
> {
>  lexer = (Rubyv3Lexer) getTokenStream().getTokenSource();
> }               :       statement_list
>                ;
>
> statement_list
>                :       statement* -> ^(STATEMENT_LIST statement*)
>                        ;
>
> /*terminal
>                :       SEMI!
>                |       LINE_BREAK!
>                ;*/
> statement
>        :       expression (modifier_line)* SEMI? -> ^(STATEMENT expression
> (modifier_line)*)
>        |       SEMI!
>        ;
>
> modifier_line
>        :(IF_MODIFIER|UNLESS_MODIFIER|WHILE_MODIFIER|UNTIL_MODIFIER|RESCUE_MODIFIER)^
> expression
>                ;
> IF_MODIFIER     :  'if';
> UNLESS_MODIFIER :  'unless';
> WHILE_MODIFIER  :  'while';
> UNTIL_MODIFIER  :  'until';
> RESCUE_MODIFIER :  'resuce';
>
> SEMI    :';'
>        ;
>
> LINE_BREAK
>        :'\r'? '\n'{$channel=line_break_channel;}
>        ;
> //OMIT_LINE_BREAK
> //      :       LINE_BREAK* {skip();}
> //      ;
> //emptyable_expression
> //      :       expression|;
> expression
>        :       'expression0' | 'expression1' | 'expression2'|boolean_expression|
> block_expression|if_expression|unless_expression;
>
> block_expression
>        :       'begin' body 'end';
> body    :       statement_list;
> boolean_expression
>        :       'false'|'nil'|'true';
> if_expression
>        :       'if' b=boolean_expression
> {lexer.openLineBreakChannel();}('then'|':'|LINE_BREAK)
>                body0=body ('elsif' b1=boolean_expression
> ('then'|':'|LINE_BREAK) body1+=body)*
>                ('else' body2=body)?
>                'end' -> ^(IF $b $body0 $b1* $body1* $body2? )
>                ;
> unless_expression
>        :       'unless' boolean_expression ('then'|':'|LINE_BREAK)
>                body
>                ('else' body)?
>                'end';
>
> WS      :       (' ' | '\t') { skip(); }
>        ;
> ID      :       ('a'..'z' | 'A'..'Z') (('a'..'z' | 'A'..'Z') | ('0'..'9'))*
>        ;
> I want to openLineBreakChannel in if_expression,
> {lexer.openLineBreakChannel();}, so after if boolean_expression
> the line_break or 'then'|':' are mandatory, not skip() or channel HIDDEN,
> but I've tried this, found nothing happened.
> it seems Lexer all parse out token stream then handle it to parser, so
> parser can't affect lexer thru call to
> lexer.openLineBreakChannel();
>
> On 4/15/07, femto gary <femtowin at gmail.com> wrote:
> > Hi David, thanks for the information,
> > I'll check it out.
> >
> > On 4/15/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> > > On Sun, Apr 15, 2007 at 08:11:39PM +0800, femto gary wrote:
> > > > also, generating parser will also produce the following warning:
> > > > [20:08:36] warning(200): Rubyv3.g:101:32: Decision can match input
> > > > such as "SEMI" using multiple alternatives: 1, 2
> > > > As a result, alternative(s) 2 were disabled for that input
> > > >
> > > > but for the grammar:
> > > > statement
> > > >       :       expression (modifier_line)* SEMI? -> ^(STATEMENT expression
> > > > (modifier_line)*)
> > > >       |       SEMI!
> > > >       ;
> > > > input SEMI shouldn't cause an ambiguity, because expression can't be empty,
> > > > so either match the alt1 or alt2, why does it will report that warning.
> > > > Anybody has any ideas? Thanks.
> > >
> > > I think that since the grammar allows,
> > >
> > >  statement*
> > >
> > > the ambiguity is between the alternatives of,
> > >
> > >  1) matching 'SEMI?' right now, in this invocation of 'statement', and,
> > >
> > >  2) not matching 'SEMI?', exiting this invocation of the 'statement' rule
> > >    and then matching the 'SEMI!' alternative the next time around the
> > >    'statement*' loop
> > >
> > > Is "1;" to be parsed as
> > >
> > >  (STATEMENT 1) (STATEMENT ;)
> > > or
> > >  (STATEMENT 1;)
> > >
> > >
> > >
> > > i.e. the decision being referred to in the message is probably the one
> > > at the '?', not the one at the '|', if that helps at all :)
> > >
> > >
> > > ta,
> > > dave
> > >
> > > --
> > > http://david.holroyd.me.uk/
> > >
> >
> >
> > --
> > Best Regards
> > XRuby http://xruby.com
> > femto http://hi.baidu.com/femto
> >
>
>
> --
> Best Regards
> XRuby http://xruby.com
> femto http://hi.baidu.com/femto
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From dave at badgers-in-foil.co.uk  Sun Apr 15 13:53:16 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 15 Apr 2007 20:53:16 +0000
Subject: [antlr-interest] antlr should throw NoViableAltException
In-Reply-To: <91170ee40704150751p23be6be6hd77e36998701ac09@mail.gmail.com>
References: <91170ee40704150305w470832f0i2cea2c80732c6f3b@mail.gmail.com>
	<91170ee40704150511m5002b43es5fde9dad785692d0@mail.gmail.com>
	<20070415140439.GA11003@badgers-in-foil.co.uk>
	<91170ee40704150738m4ff74cd2k6738a7b58e599f5e@mail.gmail.com>
	<91170ee40704150751p23be6be6hd77e36998701ac09@mail.gmail.com>
Message-ID: <20070415205316.GA15899@badgers-in-foil.co.uk>

On Sun, Apr 15, 2007 at 10:51:50PM +0800, femto gary wrote:
> I want to openLineBreakChannel in if_expression,
> {lexer.openLineBreakChannel();}, so after if boolean_expression
> the line_break or 'then'|':' are mandatory, not skip() or channel HIDDEN,
> but I've tried this, found nothing happened.
> it seems Lexer all parse out token stream then handle it to parser, so
> parser can't affect lexer thru call to
> lexer.openLineBreakChannel();

Just in case you've not already read the warnings: controlling the lexer
from the parser is hard, in general.  First, there's the TokenStream
implementation sitting between the parser and lexer.  Second, the parser
may have already see several tokens past the 'current' position in the
token stream, due to lookahead.

As you've discovered, the ANTLR CommonTokenStream tokenizes the entire
input at the start or parsing, so when your method runs, the lexer is
already at EOF.  

You might be able to make your approach work if you poke around in the
guts of the CommonTokenStream implementation; some combination of
input.get(i) and input.rewind(i) to find and modify the LINE_BREAK,
perhaps?


ta,
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Sun Apr 15 15:10:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 15 Apr 2007 15:10:58 -0700
Subject: [antlr-interest] PL/SQL create script via C# like language
In-Reply-To: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>
References: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>
Message-ID: <6222A01E-3D68-4747-A0B8-B5FB23C1B280@cs.usfca.edu>

Added to article list :)
Thanks,
Ter
On Apr 14, 2007, at 7:38 PM, Aaron Feng wrote:

> I did a simple translator that will read in C# like language and
> output PL/SQL for creating tables.  Someone new to ANTLR might find it
> interesting.  The example can be found
> http://www.aaronfeng.com/articles/2007/04/14/csharp-to-pl-sql
>
> I'm fairly new to ANTLR, so all comments are welcome.
>
> Aaron


From antlr-list at arizona-software.ch  Sun Apr 15 22:35:43 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 15 Apr 2007 22:35:43 -0700
Subject: [antlr-interest] ANTLRWorks 1.0b10 available!
Message-ID: <85CA2255-0CC3-4B55-A367-3374B7980C7A@arizona-software.ch>

Hello,

ANTLRWorks 1.0b10 is now available (with ANTLR 3.0b7):

http://www.antlr.org/works/index.html

The changes for this version are:

- requires Java 1.5
- new Online Help (in progress)
- can now display the line numbers in the grammar editor
- simple print capability
- ability to debug again (after having launched the debugger once in  
the current session)
- syntax coloring parser has been rewritten
- ability to jump to tokens defined in the options block
- reverted file extension to *.g only
- Mac OS X document icon (thanks Abe)
- save the last used path in the open/save dialogs
- minor UI and table enhancement
- fixed a bug when double-clicking a word: selection would be incorrect
- fixed a bug when trying to generate a parser/lexer from a tree  
grammar (would loop forever)

Bug fixes:
[AW-1] - Rename fails to rename reference inside rewrite rule
[AW-5] - Tree highlight in Windows is too dark
[AW-6] - Incorrect syntax error with double-quoted string inside ST  
function
[AW-7] - Invalid syntax error for double-quoted string in ST
[AW-9] - Null pointer exception when displaying the DFA for the  
decision in rule a
[AW-19] - Make the personal info dialog optional
[AW-22] - AST node not found in specific situation
[AW-23] - Debugger panels are incorrectly resized when a split pane  
divider is moved

Note that ANTLRWorks now requires Java 1.5 to run. Also, new online  
help has been added (and is still in progress):

http://www.antlr.org/works/help/index.html

Regards,

Jean


From tegan at gnometank.net  Sun Apr 15 23:47:45 2007
From: tegan at gnometank.net (Matt Holmes)
Date: Mon, 16 Apr 2007 01:47:45 -0500
Subject: [antlr-interest] Tree parsers and real world example
Message-ID: <46231C11.4030707@gnometank.net>

While I am waiting for 3.0 to have better CSharp output support, so I 
can continue my project, I am continuing to learn ANTLR 2.77 and develop 
a parser for my language. I am trying to wrap my head around tree 
parsers, and it's just not clicking for me yet. I've looked in the ANTLR 
wiki and read the docs, but I am curious if anyone knows of a real good 
"real world" example of one in use? Preferably how (or if?) they are 
involved in the code generation* process for a scripting language. I 
have a working parser that gives me back basic expressions and the like, 
and now I am trying to figure out how I would interface that with my 
(soon to be written) code generator. I sense that tree parsers are meant 
to ease this, but looking at the examples in the CSharp examples with 
2.77 and reading the docs, I am just not grasping it. I am hoping to see 
it "in action" to give me a better idea of how it all fits together.

* In this case, by code generation, I mean turning the parsed AST in to 
byte code to be later executed by my VM.

Thanks,

Matt

From davec at postgresintl.com  Mon Apr 16 06:41:17 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Mon, 16 Apr 2007 09:41:17 -0400
Subject: [antlr-interest] I have an example of an arbitrary DSL I'd like to
	contribute
Message-ID: <735CBBCC-17C0-4101-BA44-DB3580B9913E@postgresintl.com>

We've written a DSL which has expressions, looping, if, else, etc.

I'd like to contribute it to the examples. (Obviously without my  
proprietary bits)

How, and what disclaimers do you need ?

Dave

From jaluber at gmx.de  Mon Apr 16 06:56:43 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 16 Apr 2007 15:56:43 +0200
Subject: [antlr-interest] I have an example of an arbitrary DSL I'd like
 to	contribute
In-Reply-To: <735CBBCC-17C0-4101-BA44-DB3580B9913E@postgresintl.com>
References: <735CBBCC-17C0-4101-BA44-DB3580B9913E@postgresintl.com>
Message-ID: <4623809B.2060509@gmx.de>

Dave Cramer wrote:
> We've written a DSL which has expressions, looping, if, else, etc.
> 
> I'd like to contribute it to the examples. (Obviously without my
> proprietary bits)
> 
> How, and what disclaimers do you need ?
> 
> Dave
> 

On http://www.antlr.org/wiki/dashboard.action you can create an account.
While doing so you can read the license under which contributions may be
made.

Best regards,
Johannes Luber

From fowler at acm.org  Mon Apr 16 08:58:07 2007
From: fowler at acm.org (Martin Fowler)
Date: Mon, 16 Apr 2007 11:58:07 -0400
Subject: [antlr-interest] Change in output location with 3.0b7
Message-ID: <46239D0F.5000802@acm.org>

I've just upgraded to 3.0b7 and I noticed a change in where Antlr puts 
its output files (didn't spot it in the update log.)

Previously if you specified an output directory with -o and you had a 
grammar in a subdirectory it would put the output in the corresponding 
subdirectory in the output directory. Now it just puts it directly in 
the subdirectory. I'm not saying this is wrong, but I thought I'd point 
it out as it's caused my stuff to break :-(

I've been intending to write a little program to walk my src directory 
and use the API to generate output files if necessary in a corresponding 
gen directory (which I can keep out of version control). (I have a lot 
of them as I'm exploring lots of alternative langauges and parsers 
within the same project). If nothing else I guess this makes me want to 
do it. But if there's an easier way to do this or someone's already done 
it do let me know ;-)
-- 
Martin Fowler
http://martinfowler.com

From antlr at jazillian.com  Mon Apr 16 10:35:42 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 16 Apr 2007 13:35:42 -0400
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <46239D0F.5000802@acm.org>
References: <46239D0F.5000802@acm.org>
Message-ID: <4623B3EE.9020503@jazillian.com>

Martin Fowler wrote:
> I've just upgraded to 3.0b7 and I noticed a change in where Antlr puts 
> its output files (didn't spot it in the update log.)
>
> Previously if you specified an output directory with -o and you had a 
> grammar in a subdirectory it would put the output in the corresponding 
> subdirectory in the output directory. Now it just puts it directly in 
> the subdirectory. I'm not saying this is wrong, but I thought I'd 
> point it out as it's caused my stuff to break :-(
>
> I've been intending to write a little program to walk my src directory 
> and use the API to generate output files if necessary in a 
> corresponding gen directory (which I can keep out of version control). 
> (I have a lot of them as I'm exploring lots of alternative langauges 
> and parsers within the same project). If nothing else I guess this 
> makes me want to do it. But if there's an easier way to do this or 
> someone's already done it do let me know ;-)
I'm not sure exactly what you're trying to do, but if you just need a 
nice, easy way to get info on Java source files,
use the doclet API. Javadoc is a doclet, for example.

From eitan.suez at gmail.com  Mon Apr 16 10:41:27 2007
From: eitan.suez at gmail.com (Eitan Suez)
Date: Mon, 16 Apr 2007 12:41:27 -0500
Subject: [antlr-interest] Special-Purpose CSS Implementation
Message-ID: <a21b55590704161041w78b37b5mbfe56402655987ba@mail.gmail.com>

Hi All,

  I have just posted a special-purpose implementation
  of a subset of CSS using antlr (3.0beta6).

  It's a CSS engine for swing.

  You can get the grammar (CSS.g) and the entire
  project (source code, build file, and all) at:

  http://svn.jmatter.og/css4swing

Thanks,
/ Eitan
--
Eitan Suez

From zhixueyong at hotmail.com  Mon Apr 16 11:04:02 2007
From: zhixueyong at hotmail.com (Xue Yong Zhi)
Date: Mon, 16 Apr 2007 14:04:02 -0400
Subject: [antlr-interest] Tree parsers and real world example
In-Reply-To: <46231C11.4030707@gnometank.net>
References: <46231C11.4030707@gnometank.net>
Message-ID: <f00dq0$o1d$1@sea.gmane.org>

Matt Holmes wrote:
> While I am waiting for 3.0 to have better CSharp output support, so I 
> can continue my project, I am continuing to learn ANTLR 2.77 and develop 
> a parser for my language. I am trying to wrap my head around tree 
> parsers, and it's just not clicking for me yet. I've looked in the ANTLR 
> wiki and read the docs, but I am curious if anyone knows of a real good 
> "real world" example of one in use? Preferably how (or if?) they are 
> involved in the code generation* process for a scripting language. I 
> have a working parser that gives me back basic expressions and the like, 
> and now I am trying to figure out how I would interface that with my 
> (soon to be written) code generator. I sense that tree parsers are meant 
> to ease this, but looking at the examples in the CSharp examples with 
> 2.77 and reading the docs, I am just not grasping it. I am hoping to see 
> it "in action" to give me a better idea of how it all fits together.
> 
> * In this case, by code generation, I mean turning the parsed AST in to 
> byte code to be later executed by my VM.
> 

ANTLR (2.x) is being used in several compiler projects:
http://seclib.blogspot.com/2005/06/parser-generator-used-for-popular.html

You can check their source code to see how they handle it.

For simple language, you can embed code generator in the semantic 
actions of treeparser (even parser). In my own project (XRuby), I used 
treeparser to turn ANTLR's AST into a DOM-like structure, then use 
Visitor approach to generate bytecode:
http://xruby.googlecode.com/svn/trunk/src/com/xruby/compiler/parser/ruby.tree.g

-- 
Xue Yong Zhi
XRuby (Ruby to Java bytecode compiler):
http://xruby.blogspot.com


From jaluber at gmx.de  Mon Apr 16 11:05:29 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 16 Apr 2007 20:05:29 +0200
Subject: [antlr-interest] Grammar ambiguity
Message-ID: <4623BAE9.2090508@gmx.de>

Hello,

I have been removing grammar ambiguities of my C# grammar, but I've
stumbled over one case where I have no idea how I can solve it.

The situation is basically:

input: token*;

token: real_literal;

real_literal:
   DECIMAL_DIGIT+ '.' DECIMAL_DIGIT+ EXPONENT_PART? REAL_TYPE_SUFFIX?
   ;

ANTLR doesn't if there are two or more DECIMAL_DIGITs after '.', if
those belong to the same real_literal or if they start a second
real_literal (which has a DECIMAL_DIGIT as start token), as ANTLR can
generate an arbitrary number of tokens.

Hmm, writing about this gave me the idea that I could change the second
DECIMAL_DIGIT into another rule like FRACTIONAL_DECIMAL_DIGIT, but then
I'd get probably an non-determinism between FRACTIONAL_DECIMAL_DIGIT and
DECIMAL_DIGIT.

Any ideas?

Best regards,
Johannes Luber

From win at wincent.com  Mon Apr 16 11:20:50 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 16 Apr 2007 20:20:50 +0200
Subject: [antlr-interest] Embedding one language within another
Message-ID: <5A260CBC-0014-4F95-924B-5C3DA48CC7A7@wincent.com>

Hi all,

I'm trying to write a recognizer for a Cheetah-like[1] templating  
language which effectively allows one language to be "embedded"  
within another. Templates are mostly plain text and only a few tokens  
have special meaning (directives starting with "#", placeholders  
starting with "$", and escape sequences starting with "\"). So that  
much is easy to lex/parse. The tricky bit is that many directives  
take Ruby expressions as parameters, and that means I have to parse  
at least a subset of Ruby as well.

I have a working prototype which is itself written in Ruby[2] but it  
is both slow and memory hungry (due to memoization) so I am now  
looking to re-implement the parser in compiled language, specifically  
using ANTLR targeting C so that I can incorporate the generated  
parser into a Ruby extension.

I'm new to ANTLR and have only been working on this for the last 24  
hours; I've read as much of the new ANTLR book as I can but I'm not  
really sure what the best approach is... My original pre-ANTLR  
implementation uses an integrated lexer/parser (not separate phases)  
and so can easily switch between Ruby and not-Ruby modes. But given  
that ANTLR uses two separate phases I am not aware of how to proceed:  
what constitutes a token is context-dependent depending on what the  
preceding tokens are; for example in the main body of the template  
"foo.bar" has no special meaning at all, but inside a Ruby section it  
is a message send (message "bar" sent to object "foo").

My lexer rules are starting to look nastily complicated and parser- 
like; in the end there'll be nothing left in the parser! Can I write  
two lexers and switch to the right one depending on what tokens  
arrive on the input stream? Is it likely that I'll be able to do this  
with a single lexer if I very carefully prioritize my rules (rule  
precendence is determined by order of appearance in the grammar file,  
right?). Is there some other way around this issue that I haven't  
thought of yet? I've seen some posts in the archives about parsing  
"here documents", which is a similar issue, but the posts in the  
archives are very old and I'm not sure how things stand in ANTLR v3.

Cheers,
Wincent

[1] http://cheetahtemplate.org/
[2] http://walrus.wincent.com/


From michael.gerz at teststep.org  Mon Apr 16 11:42:44 2007
From: michael.gerz at teststep.org (Michael Gerz)
Date: Mon, 16 Apr 2007 20:42:44 +0200
Subject: [antlr-interest] Lexer Problem - ANTLR bug or my stupidity?
Message-ID: <4623C3A4.4030306@teststep.org>

Terence, all,

could you please have a look at this simple lexer grammar, please? (It 
is a stripped-down version of a much more reasonable grammar :-) )

+++++++++++++++++++++++++++++++++++++

grammar Foo;

fragment CHAR :
      NON_SPECIAL_CHAR
    | OVERRIDER OVERRIDER
    ;

fragment NON_SPECIAL_CHAR :
    'a'
    ;

CHAR_STRING :
    CHAR ( CHAR )*
    ;

OVERRIDER :
    '#'
    ;

++++++++++++++++++++++++++++++++++++++++

IMHO, for a given input

   a##a#a

 FooLexer should output three tokens

  a##a
  #
  a

Unfortunately, it does not but raises an error instead. If you look at 
the generated lexer code, it becomes clear why:

    public final void mCHAR_STRING() throws RecognitionException {
        try {
            int _type = CHAR_STRING;
            // ReplicationTransaction.g:45:2: ( CHAR ( CHAR )* )
            // ReplicationTransaction.g:45:2: CHAR ( CHAR )*
            {
            mCHAR();
            // ReplicationTransaction.g:45:7: ( CHAR )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);
                if ( (LA2_0=='#'||LA2_0=='a') ) {
                    alt2=1;
                }
                switch (alt2) {
                case 1 :
                    // ReplicationTransaction.g:45:9: CHAR
                    {
                    mCHAR();

                    }
                    break;
                default :
                    break loop2;
                }
            } while (true);
            }
            this.type = _type;
        }
        finally {
        }
    }

Once the lexer has entered mCHAR_STRING is uses a lookahead of 1! In 
other words, it does not check what's behind the # ! Since ANTLR claims 
to use LL(*), this looks like a real bug to me.

In any case, does anybody have a clever workaround?

A thousand thanks in advance!

Michael


From parrt at cs.usfca.edu  Mon Apr 16 12:05:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Apr 2007 12:05:42 -0700
Subject: [antlr-interest] ANTLRWorks 1.0b10 available!
In-Reply-To: <85CA2255-0CC3-4B55-A367-3374B7980C7A@arizona-software.ch>
References: <85CA2255-0CC3-4B55-A367-3374B7980C7A@arizona-software.ch>
Message-ID: <F205C4D6-2338-4E51-98E7-0B1F548BFA4E@cs.usfca.edu>


On Apr 15, 2007, at 10:35 PM, Jean Bovet wrote:

> Hello,
>
> ANTLRWorks 1.0b10 is now available (with ANTLR 3.0b7):
>
> http://www.antlr.org/works/index.html

Congratulations, Jean!  Great work.

I can confirm that the new version is really great.  The new  
incremental parser is MUCH faster.  Lots of bugs are fixed.

Ter


From jimi at temporal-wave.com  Mon Apr 16 12:03:07 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2007 12:03:07 -0700
Subject: [antlr-interest] Embedding one language within another
In-Reply-To: <5A260CBC-0014-4F95-924B-5C3DA48CC7A7@wincent.com>
References: <5A260CBC-0014-4F95-924B-5C3DA48CC7A7@wincent.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625234F@wavemachine.temporal-wave.com>

Take a look at the example of island grammars in the downloadable
examples. I have yet to convert these to C, but it isn't difficult, just
time (and probably some bug fixes ;-).

It sounds like you can use this as a template for your work. The key is
that you have to trigger this from the lexer as ANTLR will not let you
do syntax directed lexing (have the parser tell the lexer what to do
next). 

But say your directive is:

Nyscriptlang
Myscriptland
#doruby ruby-expression-that does-something
Myscriptlang
Etc

Then your lexer should see #doruby and call another lexer/parser
combination. It can then skip the line, or return it as a special token
like DIRECTIVE or something. Here is an example (using C target of doing
this, for a language I had to paresr where there was a pattern matching
operator, which was too stupid for words and basically needed a second
grammar to deal with it (which was then a trivial grammar):

In the first parser/lexer grammar I have (in the lexer spec):

OPMATCH		: '?' 
		{
		    /* To make parsing of COS pattern matching simpler
and so that the COS
		     * parser can also validate the patterns, we call an
island grammar that
		     * feeds off the current input stream.
		     */
		    cosPatternLexer	cl	    = new
cosPatternLexer(input);
		    CommonTokenStream	patTok    = new
CommonTokenStream(cl);
		    cosPatternParser	cp	    = new
cosPatternParser(patTok);
		    cp.pattern();
                    
                    /* Whatever character (1 + recover consume) caused
the end of the pattern parse, we can guarantee
                     * that it was meant for this parser, so we seek
back to it.
                     */
                    input.seek(input.index()-2);

		    ... destroy parser we made on the fly, skip this
token in this lexer, etc...


Note that I just reuse the current input stream (input is predefined for
you) in the lexer rule, then create a new parser on the fly (which you
might be able to cache rather than create and destroy each time). The
parser I called will actually return an AST for the pattern, but you can
do whatever you want of course. The grammar that was called is
completely separate grammar and nows nothing of the caller. It just
stops parsing at some point (in your case, probably EOL of some sort).

Jim


		





-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wincent Colaiuta
Sent: Monday, April 16, 2007 11:21 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Embedding one language within another

Hi all,

I'm trying to write a recognizer for a Cheetah-like[1] templating  
language which effectively allows one language to be "embedded"  
within another. Templates are mostly plain text and only a few tokens  
have special meaning (directives starting with "#", placeholders  
starting with "$", and escape sequences starting with "\"). So that  
much is easy to lex/parse. The tricky bit is that many directives  
take Ruby expressions as parameters, and that means I have to parse  
at least a subset of Ruby as well.

I have a working prototype which is itself written in Ruby[2] but it  
is both slow and memory hungry (due to memoization) so I am now  
looking to re-implement the parser in compiled language, specifically  
using ANTLR targeting C so that I can incorporate the generated  
parser into a Ruby extension.

I'm new to ANTLR and have only been working on this for the last 24  
hours; I've read as much of the new ANTLR book as I can but I'm not  
really sure what the best approach is... My original pre-ANTLR  
implementation uses an integrated lexer/parser (not separate phases)  
and so can easily switch between Ruby and not-Ruby modes. But given  
that ANTLR uses two separate phases I am not aware of how to proceed:  
what constitutes a token is context-dependent depending on what the  
preceding tokens are; for example in the main body of the template  
"foo.bar" has no special meaning at all, but inside a Ruby section it  
is a message send (message "bar" sent to object "foo").

My lexer rules are starting to look nastily complicated and parser- 
like; in the end there'll be nothing left in the parser! Can I write  
two lexers and switch to the right one depending on what tokens  
arrive on the input stream? Is it likely that I'll be able to do this  
with a single lexer if I very carefully prioritize my rules (rule  
precendence is determined by order of appearance in the grammar file,  
right?). Is there some other way around this issue that I haven't  
thought of yet? I've seen some posts in the archives about parsing  
"here documents", which is a similar issue, but the posts in the  
archives are very old and I'm not sure how things stand in ANTLR v3.

Cheers,
Wincent

[1] http://cheetahtemplate.org/
[2] http://walrus.wincent.com/


From jimi at temporal-wave.com  Mon Apr 16 12:06:30 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2007 12:06:30 -0700
Subject: [antlr-interest] Lexer Problem - ANTLR bug or my stupidity?
In-Reply-To: <4623C3A4.4030306@teststep.org>
References: <4623C3A4.4030306@teststep.org>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252350@wavemachine.temporal-wave.com>

Try:


fragment CHAR :
      NON_SPECIAL_CHAR
    | (OVERRIDER OVERRIDER)=> OVERRIDER OVERRIDER
    ;


The first OVERRIDER is used to predict the second alternative of
NON_SPECIAL_CHAR and so it takes that path. It can't see beyond the end
of the token, so without a predicate you get behavior that you did not
expect. This is not an LL(*) issue per se.

Jim



-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Michael Gerz
Sent: Monday, April 16, 2007 11:43 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Lexer Problem - ANTLR bug or my stupidity?

Terence, all,

could you please have a look at this simple lexer grammar, please? (It 
is a stripped-down version of a much more reasonable grammar :-) )

+++++++++++++++++++++++++++++++++++++

grammar Foo;

fragment CHAR :
      NON_SPECIAL_CHAR
    | OVERRIDER OVERRIDER
    ;

fragment NON_SPECIAL_CHAR :
    'a'
    ;

CHAR_STRING :
    CHAR ( CHAR )*
    ;

OVERRIDER :
    '#'
    ;

++++++++++++++++++++++++++++++++++++++++

IMHO, for a given input

   a##a#a

 FooLexer should output three tokens

  a##a
  #
  a

Unfortunately, it does not but raises an error instead. If you look at 
the generated lexer code, it becomes clear why:

    public final void mCHAR_STRING() throws RecognitionException {
        try {
            int _type = CHAR_STRING;
            // ReplicationTransaction.g:45:2: ( CHAR ( CHAR )* )
            // ReplicationTransaction.g:45:2: CHAR ( CHAR )*
            {
            mCHAR();
            // ReplicationTransaction.g:45:7: ( CHAR )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);
                if ( (LA2_0=='#'||LA2_0=='a') ) {
                    alt2=1;
                }
                switch (alt2) {
                case 1 :
                    // ReplicationTransaction.g:45:9: CHAR
                    {
                    mCHAR();

                    }
                    break;
                default :
                    break loop2;
                }
            } while (true);
            }
            this.type = _type;
        }
        finally {
        }
    }

Once the lexer has entered mCHAR_STRING is uses a lookahead of 1! In 
other words, it does not check what's behind the # ! Since ANTLR claims 
to use LL(*), this looks like a real bug to me.

In any case, does anybody have a clever workaround?

A thousand thanks in advance!

Michael


From parrt at cs.usfca.edu  Mon Apr 16 12:10:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Apr 2007 12:10:12 -0700
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <46239D0F.5000802@acm.org>
References: <46239D0F.5000802@acm.org>
Message-ID: <FACE5FAD-0E15-4B2C-B9EF-5B2D4013B623@cs.usfca.edu>


On Apr 16, 2007, at 8:58 AM, Martin Fowler wrote:

> I've just upgraded to 3.0b7 and I noticed a change in where Antlr  
> puts its output files (didn't spot it in the update log.)

Hi Martin. :)

Sorry 'bout that.  I was futzing with that stuff to build the -depend  
option, which prints all the dependencies.

> Previously if you specified an output directory with -o and you had  
> a grammar in a subdirectory it would put the output in the  
> corresponding subdirectory in the output directory. Now it just  
> puts it directly in the subdirectory. I'm not saying this is wrong,  
> but I thought I'd point it out as it's caused my stuff to break :-(

Ah.  Ok, so

$ java org.antlr.Tool -o /tmp T.g

generates /tmp/TParser.java and so does:

$ java org.antlr.Tool -o /tmp subdir/T.g

rather than /tmp/subdir/TParser

What do people think?  I sort of like the idea that I can force  
output to a specific directory.

Can you get away with being explicit like this?

$ java org.antlr.Tool -o /tmp/subdir subdir/T.g

> I've been intending to write a little program to walk my src  
> directory and use the API to generate output files if necessary in  
> a corresponding gen directory (which I can keep out of version  
> control). (I have a lot of them as I'm exploring lots of  
> alternative langauges and parsers within the same project). If  
> nothing else I guess this makes me want to do it. But if there's an  
> easier way to do this or someone's already done it do let me know ;-)

Can the BuildDependencyGenerator.java class help you or -depend?

Thanks,
Ter


From richard.bown at ferventsoftware.com  Mon Apr 16 11:59:40 2007
From: richard.bown at ferventsoftware.com (Richard Bown)
Date: Mon, 16 Apr 2007 19:59:40 +0100
Subject: [antlr-interest] lexer or parser for comments and remarks?
In-Reply-To: <46220EB6.4060104@gmx.de>
References: <461407A8.8050207@ferventsoftware.com>	<4621DE14.3060900@ferventsoftware.com>
	<46220EB6.4060104@gmx.de>
Message-ID: <4623C79C.6000004@ferventsoftware.com>

I've defined the "rem" as a token but I still get non-determinisms in
the lexer between this and the REGULAR_ID.   I'm not sure this is a red
herring but the REGULAR_ID is declaring testLiteralsTable as follows
(based on Lubos Vnuk's SqlSQL2/DmlSQL2 grammar):

REGULAR_ID :
	( ( NATIONAL_CHAR_STRING_LIT 		{$setType(NATIONAL_CHAR_STRING_LIT);}
	  | BIT_STRING_LIT {$setType(BIT_STRING_LIT);}
	  | HEX_STRING_LIT {$setType(HEX_STRING_LIT);} 	)
	| (SIMPLE_LETTER) (SIMPLE_ID)* {$setType(testLiteralsTable(REGULAR_ID));} )
;

If I add the following rule:

REMARK :
	"rem" ( ~( '\r' | '\n' ) ) * NEWLINE { $setType(Token.SKIP); }
;

then I get non-determinisms between the two even if "rem" is in the
imported token table (or even explicitly defined in tokens {} ).

Conversely if I put the "rem" statement in the parser then I can't
define a stream of catch-all-until-the-end-of-the-line token.

Of course my fundamental problem is I'm hacking grammars without
actually learning what's going on under the covers too much (very
naughty) - treating it as regexps etc.  So forgive my laziness but still 
happy to take pointers to RTFMs etc.

I might in fact use this as an excuse to download Ter's book.   I 
presume that Antlr 3.0 and 2.7.5 have enough similarities to make it 
worth my while at this time.

Rgds,
Richard



Johannes Luber wrote:
> Richard Bown wrote:
>> Maybe I was blathering a bit too much there - is this so simple and
>> stoopid it's in a FAQ or an example that I've missed?  Anyone got any
>> recommendations or pointers?   Even a RTFM would do.
>>
>> Richard
> 
> How about using the tokens command to define a REM token like so?
> 
> tokens {
>    REM="rem";
> }
> 
> And using
> 
> REMARK :
>    REM ( ~( '\r' | '\n' ) ) * NEWLINE
>    { setType(Token.SKIP); }
>    ;
> 
> should favor "rem" for REMARK instead to recognize an ID token. At least
> that should work for ANTLR 3 - I don't know much about the difference to
> ANTLR 2.7.7.
> 
> Best regards,
> Johannes Luber
> 
>> Richard Bown wrote:
>>> Hi,
>>>
>>> I've got a lexer non-determinism which is making me go back and
>>> forward between trying to fix the lexer or trying to write a good
>>> parser rule for the problem - neither of which I can seem to get
>>> right.  This is with Antlr 2.7.5 producing C#.  Apologies for the
>>> lengthy explanation.
>>>
>>> The rules are for handling SQL comments and similar one liners (I'm
>>> treating these all as single line statements).   Whilst this is
>>> relatively simple for non-alphabetic characters - you can write a
>>> lexer rule such as this:
>>>
>>> COMMENT :
>>>     '-' '-' ( ~('\r' | '\n') )* NEWLINE { setType(Token.SKIP); }
>>> ;
>>>
>>> If you then define say a similar line for "rem" statements:
>>>
>>> REMARK :
>>>     'r' 'e' 'm' ( ~( '\r' | '\n' ) ) * NEWLINE
>>> { setType(Token.SKIP); }
>>> ;
>>>
>>> This is fine - but if you also have a lexer rule for matching
>>> identifiers i.e. (slightly simplified):
>>>
>>> ID :
>>>     'A-Z' | 'a-z' | '_' | '0'..'9'
>>> ;
>>>
>>> You get non-determinisms of course with the "rem" rule and any other
>>> rules that use alphanumerics.
>>>
>>> The other way I've attempted to solve this is to just catch the 'rem'
>>> elements in the parser.   This is fine (and it would be a more useful
>>> solution if I wanted to do some simple processing of the comment
>>> lines) but then if there are any interesting and unusual characters in
>>> the remainder of the "rem" line then the parser doesn't match on these
>>> elements.  I've tried to be exhaustive about the type of 'words' that
>>> the remainder of the comment lines can contain but then I start to
>>> trip over lexer rules again and we go around in circles.
>>>
>>> So I've been going back to the lexer to solve this - and whilst with
>>> the non-determinisms things almost work, the lexer rules also greedily
>>> slurp  up parts of legitimate ids.   One thing to fix that is to force
>>> the lexer to match from the start of the line only I s'pose... but it
>>> all seems like putting one hack on top of another.
>>>
>>> Any clues how to handle this elegantly in the parser?   To me it would
>>> make sense to dump these lexer rules and handle all of these types in
>>> the parser - I just need an equivalent to "match from here to end of
>>> line" for the parser perhaps?
>>>
>>> Rgds,
>>> Richard Bown
>>>
> 


From parrt at cs.usfca.edu  Mon Apr 16 12:49:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Apr 2007 12:49:58 -0700
Subject: [antlr-interest] network stalling?
Message-ID: <E8ED435D-05E2-47F0-8BC6-04D22F30DF84@cs.usfca.edu>

Hi,
my network connection to the antlr.org box is stalling again.  Can  
you folks try to download some tarballs or something from antlr.org  
and report to me if you are seeing super slow or stalled connections  
again?  They claim netenforcer is still offline...maybe it's just my  
line.

you can email me directly, not the list.

Thanks!
Ter

From jimi at temporal-wave.com  Mon Apr 16 12:52:12 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2007 12:52:12 -0700
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <FACE5FAD-0E15-4B2C-B9EF-5B2D4013B623@cs.usfca.edu>
References: <46239D0F.5000802@acm.org>
	<FACE5FAD-0E15-4B2C-B9EF-5B2D4013B623@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625235B@wavemachine.temporal-wave.com>

Ter,

We had some discussions of this and you made a second option that would
always ignore subdirectories, intending that the -o option would mirror
the input directories. It could be that you did it the other way around
etc.

however, I needed this because Visual Studio build rules can't cope with
making the subdirectories in the output. Hence I think that we already
have what we need (was the option -od or something?).

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, April 16, 2007 12:10 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] Change in output location with 3.0b7


On Apr 16, 2007, at 8:58 AM, Martin Fowler wrote:

> I've just upgraded to 3.0b7 and I noticed a change in where Antlr  
> puts its output files (didn't spot it in the update log.)

Hi Martin. :)

Sorry 'bout that.  I was futzing with that stuff to build the -depend  
option, which prints all the dependencies.

> Previously if you specified an output directory with -o and you had  
> a grammar in a subdirectory it would put the output in the  
> corresponding subdirectory in the output directory. Now it just  
> puts it directly in the subdirectory. I'm not saying this is wrong,  
> but I thought I'd point it out as it's caused my stuff to break :-(

Ah.  Ok, so

$ java org.antlr.Tool -o /tmp T.g

generates /tmp/TParser.java and so does:

$ java org.antlr.Tool -o /tmp subdir/T.g

rather than /tmp/subdir/TParser

What do people think?  I sort of like the idea that I can force  
output to a specific directory.

Can you get away with being explicit like this?

$ java org.antlr.Tool -o /tmp/subdir subdir/T.g

> I've been intending to write a little program to walk my src  
> directory and use the API to generate output files if necessary in  
> a corresponding gen directory (which I can keep out of version  
> control). (I have a lot of them as I'm exploring lots of  
> alternative langauges and parsers within the same project). If  
> nothing else I guess this makes me want to do it. But if there's an  
> easier way to do this or someone's already done it do let me know ;-)

Can the BuildDependencyGenerator.java class help you or -depend?

Thanks,
Ter


From parrt at cs.usfca.edu  Mon Apr 16 13:18:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Apr 2007 13:18:21 -0700
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625235B@wavemachine.temporal-wave.com>
References: <46239D0F.5000802@acm.org>
	<FACE5FAD-0E15-4B2C-B9EF-5B2D4013B623@cs.usfca.edu>
	<B36CCC332A32904F8FA3DE134A23533625235B@wavemachine.temporal-wave.com>
Message-ID: <08F1F316-41B0-424E-B98C-FBF517551E72@cs.usfca.edu>


On Apr 16, 2007, at 12:52 PM, Jim Idle wrote:

> Ter,
>
> We had some discussions of this and you made a second option that  
> would
> always ignore subdirectories, intending that the -o option would  
> mirror
> the input directories. It could be that you did it the other way  
> around
> etc.
>
> however, I needed this because Visual Studio build rules can't cope  
> with
> making the subdirectories in the output. Hence I think that we already
> have what we need (was the option -od or something?).

Oh, right!  We have

   -o outputDir          specify output directory where all output is  
generated
   -fo outputDir         same as -o but force even files with  
relative paths to dir

So, if -o is doing as Martin suggests then either I have these  
backwards or I introduced a bug!

Damn...looks like -o does not add the subdir.

$ java org.antlr.Tool -o /tmp subdir/T.g

$ java org.antlr.Tool -fo /tmp subdir/T.g

both put TParser.java into /tmp.  Crap.  Apparently my intention in - 
depend is as we had before:

$ java org.antlr.Tool -depend -o /tmp subdir/T.g
ANTLR Parser Generator  Version 3.0b8 (??, 2007)  1989-2007
/tmp/subdir/TParser.java : subdir/T.g
/tmp/subdir/T.tokens : subdir/T.g
/tmp/subdir/TLexer.java : subdir/T.g

$ java org.antlr.Tool -depend -fo /tmp subdir/T.g
ANTLR Parser Generator  Version 3.0b8 (??, 2007)  1989-2007
/tmp/TParser.java : subdir/T.g
/tmp/T.tokens : subdir/T.g
/tmp/TLexer.java : subdir/T.g

Ok, I see the problem.  Added a bug report to fix asap.  Gotta  
prepare for a meeting tonight.

Ter


From dave at badgers-in-foil.co.uk  Mon Apr 16 13:57:46 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 16 Apr 2007 20:57:46 +0000
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <46239D0F.5000802@acm.org>
References: <46239D0F.5000802@acm.org>
Message-ID: <20070416205746.GA2127@badgers-in-foil.co.uk>

On Mon, Apr 16, 2007 at 11:58:07AM -0400, Martin Fowler wrote:
> I've been intending to write a little program to walk my src directory 
> and use the API to generate output files if necessary in a corresponding 
> gen directory (which I can keep out of version control). (I have a lot 
> of them as I'm exploring lots of alternative langauges and parsers 
> within the same project). If nothing else I guess this makes me want to 
> do it. But if there's an easier way to do this or someone's already done 
> it do let me know ;-)

Maven?  Here's a plugin for ANTLRv3,

  http://maven.badgers-in-foil.co.uk/sites/maven-antlr3-plugin/

I just released 0.2 to create the output files in the 'right' place,
thinking that this change in recent ANTLRs was intended :-)

It implements dependant builds, but does not yet use inter-grammar
dependencies to control the build order for multiple grammars.


ta,
dave

-- 
http://david.holroyd.me.uk/

From miguel.ping at gmail.com  Mon Apr 16 14:34:00 2007
From: miguel.ping at gmail.com (Miguel Ping)
Date: Mon, 16 Apr 2007 22:34:00 +0100
Subject: [antlr-interest] network stalling?
In-Reply-To: <E8ED435D-05E2-47F0-8BC6-04D22F30DF84@cs.usfca.edu>
References: <E8ED435D-05E2-47F0-8BC6-04D22F30DF84@cs.usfca.edu>
Message-ID: <ab0bf2c00704161434i628dc4e2x73cf8aa99cdffcd4@mail.gmail.com>

I can't see any page in antlr wiki... I also got this exception from
you app server, maybe u guys are redeploying or so...?

javax.servlet.ServletException:
/usr/local/resin-lime/webapps/wiki/WEB-INF/web.xml:356:
java.lang.ClassNotFoundException:
com.atlassian.confluence.setup.ConfluenceConfigurationListener
	at com.caucho.server.http.Application.error(Application.java:3961)
	at com.caucho.server.http.Application.configureServlets(Application.java:849)
	at com.caucho.server.http.Application.configure(Application.java:578)
	at com.caucho.server.http.Application.<init>(Application.java:326)
	at com.caucho.server.http.WebAppMap$Entry.createApplication(WebAppMap.java:599)
	at com.caucho.server.http.VirtualHost.startApplication(VirtualHost.java:1204)
	at com.caucho.server.http.VirtualHost.getInvocation(VirtualHost.java:1004)
	at com.caucho.server.http.ServletServer.getInvocation(ServletServer.java:1225)
	at com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:243)
	at com.caucho.server.http.HttpRequest.handleConnection(HttpRequest.java:163)
	at com.caucho.server.TcpConnection.run(TcpConnection.java:139)
	at java.lang.Thread.run(Thread.java:595)

On 4/16/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi,
> my network connection to the antlr.org box is stalling again.  Can
> you folks try to download some tarballs or something from antlr.org
> and report to me if you are seeing super slow or stalled connections
> again?  They claim netenforcer is still offline...maybe it's just my
> line.
>
> you can email me directly, not the list.
>
> Thanks!
> Ter
>

From parrt at cs.usfca.edu  Mon Apr 16 14:36:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Apr 2007 14:36:06 -0700
Subject: [antlr-interest] network stalling?
In-Reply-To: <ab0bf2c00704161434i628dc4e2x73cf8aa99cdffcd4@mail.gmail.com>
References: <E8ED435D-05E2-47F0-8BC6-04D22F30DF84@cs.usfca.edu>
	<ab0bf2c00704161434i628dc4e2x73cf8aa99cdffcd4@mail.gmail.com>
Message-ID: <AE0A3EB6-5AC0-4E65-A577-7A8E9868CF04@cs.usfca.edu>

I just reboot the thing :)
Ter
On Apr 16, 2007, at 2:34 PM, Miguel Ping wrote:

> I can't see any page in antlr wiki... I also got this exception from
> you app server, maybe u guys are redeploying or so...?
>
> javax.servlet.ServletException:
> /usr/local/resin-lime/webapps/wiki/WEB-INF/web.xml:356:
> java.lang.ClassNotFoundException:
> com.atlassian.confluence.setup.ConfluenceConfigurationListener
> 	at com.caucho.server.http.Application.error(Application.java:3961)
> 	at com.caucho.server.http.Application.configureServlets 
> (Application.java:849)
> 	at com.caucho.server.http.Application.configure(Application.java:578)
> 	at com.caucho.server.http.Application.<init>(Application.java:326)
> 	at com.caucho.server.http.WebAppMap$Entry.createApplication 
> (WebAppMap.java:599)
> 	at com.caucho.server.http.VirtualHost.startApplication 
> (VirtualHost.java:1204)
> 	at com.caucho.server.http.VirtualHost.getInvocation 
> (VirtualHost.java:1004)
> 	at com.caucho.server.http.ServletServer.getInvocation 
> (ServletServer.java:1225)
> 	at com.caucho.server.http.HttpRequest.handleRequest 
> (HttpRequest.java:243)
> 	at com.caucho.server.http.HttpRequest.handleConnection 
> (HttpRequest.java:163)
> 	at com.caucho.server.TcpConnection.run(TcpConnection.java:139)
> 	at java.lang.Thread.run(Thread.java:595)
>
> On 4/16/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi,
>> my network connection to the antlr.org box is stalling again.  Can
>> you folks try to download some tarballs or something from antlr.org
>> and report to me if you are seeing super slow or stalled connections
>> again?  They claim netenforcer is still offline...maybe it's just my
>> line.
>>
>> you can email me directly, not the list.
>>
>> Thanks!
>> Ter
>>


From davec at postgresintl.com  Mon Apr 16 16:23:16 2007
From: davec at postgresintl.com (Dave Cramer)
Date: Mon, 16 Apr 2007 19:23:16 -0400
Subject: [antlr-interest] network stalling?
In-Reply-To: <AE0A3EB6-5AC0-4E65-A577-7A8E9868CF04@cs.usfca.edu>
References: <E8ED435D-05E2-47F0-8BC6-04D22F30DF84@cs.usfca.edu>
	<ab0bf2c00704161434i628dc4e2x73cf8aa99cdffcd4@mail.gmail.com>
	<AE0A3EB6-5AC0-4E65-A577-7A8E9868CF04@cs.usfca.edu>
Message-ID: <1D88BD7B-F2DB-4196-AC7C-1A8CF11D1067@postgresintl.com>

confluence isn't known for it's robustness.... :(

Dave
On 16-Apr-07, at 5:36 PM, Terence Parr wrote:

> I just reboot the thing :)
> Ter
> On Apr 16, 2007, at 2:34 PM, Miguel Ping wrote:
>
>> I can't see any page in antlr wiki... I also got this exception from
>> you app server, maybe u guys are redeploying or so...?
>>
>> javax.servlet.ServletException:
>> /usr/local/resin-lime/webapps/wiki/WEB-INF/web.xml:356:
>> java.lang.ClassNotFoundException:
>> com.atlassian.confluence.setup.ConfluenceConfigurationListener
>> 	at com.caucho.server.http.Application.error(Application.java:3961)
>> 	at com.caucho.server.http.Application.configureServlets 
>> (Application.java:849)
>> 	at com.caucho.server.http.Application.configure(Application.java: 
>> 578)
>> 	at com.caucho.server.http.Application.<init>(Application.java:326)
>> 	at com.caucho.server.http.WebAppMap$Entry.createApplication 
>> (WebAppMap.java:599)
>> 	at com.caucho.server.http.VirtualHost.startApplication 
>> (VirtualHost.java:1204)
>> 	at com.caucho.server.http.VirtualHost.getInvocation 
>> (VirtualHost.java:1004)
>> 	at com.caucho.server.http.ServletServer.getInvocation 
>> (ServletServer.java:1225)
>> 	at com.caucho.server.http.HttpRequest.handleRequest 
>> (HttpRequest.java:243)
>> 	at com.caucho.server.http.HttpRequest.handleConnection 
>> (HttpRequest.java:163)
>> 	at com.caucho.server.TcpConnection.run(TcpConnection.java:139)
>> 	at java.lang.Thread.run(Thread.java:595)
>>
>> On 4/16/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Hi,
>>> my network connection to the antlr.org box is stalling again.  Can
>>> you folks try to download some tarballs or something from antlr.org
>>> and report to me if you are seeing super slow or stalled connections
>>> again?  They claim netenforcer is still offline...maybe it's just my
>>> line.
>>>
>>> you can email me directly, not the list.
>>>
>>> Thanks!
>>> Ter
>>>
>


From miguel.ping at gmail.com  Mon Apr 16 16:40:13 2007
From: miguel.ping at gmail.com (Miguel Ping)
Date: Tue, 17 Apr 2007 00:40:13 +0100
Subject: [antlr-interest] Antlr bug?
Message-ID: <ab0bf2c00704161640h469d873ao5d20964bc4367baa@mail.gmail.com>

Hi all,

I'm writing a sql 2 java translator, and I have a strange bug.

I got this query:

SELECT  p.prop1, a.prop2, b.prop3, c.prop4 from properties
>

and antlr generates me this tree:

select
> SELECT_LIST
>    COLUMN_REFERENCE_LIST
>       TABLE_ID
>          p
>       .
>       prop1
>    ,
>    COLUMN_REFERENCE_LIST
>       TABLE_ID
>          c
>       .
>       prop4
>    ,
>    COLUMN_REFERENCE_LIST
>       TABLE_ID
>          c
>       .
>       prop4
>    ,
>    COLUMN_REFERENCE_LIST
>       TABLE_ID
>          c
>       .
>       prop4
> from
> TABLE_REFERENCE_LIST
>    TABLE_ID
>       properties


If you notice carefully, antlr is replacing all identifiers (table and
column ids)with the last one, except for the first. the tree should be
reading p,a,b,c TABLE_ID's and prop1,2,3,4 . This happens for an arbitrarily
big column list; only the first one gets it right. I think I may have a bug
with some list creation in my parser, but debugging in antlrworks (great
work btw, debugger is really neat) shows me the correct identifiers.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070417/0a262323/attachment.html 

From jimi at temporal-wave.com  Mon Apr 16 17:00:22 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 16 Apr 2007 17:00:22 -0700
Subject: [antlr-interest] Antlr bug?
In-Reply-To: <ab0bf2c00704161640h469d873ao5d20964bc4367baa@mail.gmail.com>
References: <ab0bf2c00704161640h469d873ao5d20964bc4367baa@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252369@wavemachine.temporal-wave.com>

Miguel,

 

I remember seeing this somewhere, but I now do not remember if it was a
bug in my own grammar or indeed a code generation error. Anyway, I was
fairly sure that this was fixed (but I could be going mad). If it was
fixed, then in theory using the very latest ANLTRWorks will fix it,
unless it is really an ANTLRWorks bug. 

 

However, if you are running this in translation mode, try instead, the
debug mode (which is working again on ANTLRWorks b10).

 

I also recommend inserting an action to print out what you believe you
are gathering and running from the command line - this will tell you if
your grammar is sound etc.

 

Hope this helps a little.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Miguel Ping
Sent: Monday, April 16, 2007 4:40 PM
To: ANTLR Interest
Subject: [antlr-interest] Antlr bug?

 

Hi all,

I'm writing a sql 2 java translator, and I have a strange bug.

I got this query:

SELECT  p.prop1, a.prop2, b.prop3, c.prop4 from properties


and antlr generates me this tree:

select
SELECT_LIST
   COLUMN_REFERENCE_LIST
      TABLE_ID
         p
      .
      prop1
   ,
   COLUMN_REFERENCE_LIST
      TABLE_ID
         c
      .
      prop4
   ,
   COLUMN_REFERENCE_LIST 
      TABLE_ID
         c
      .
      prop4
   ,
   COLUMN_REFERENCE_LIST
      TABLE_ID
         c
      .
      prop4
from
TABLE_REFERENCE_LIST
   TABLE_ID
      properties


If you notice carefully, antlr is replacing all identifiers (table and
column ids)with the last one, except for the first. the tree should be
reading p,a,b,c TABLE_ID's and prop1,2,3,4 . This happens for an
arbitrarily big column list; only the first one gets it right. I think I
may have a bug with some list creation in my parser, but debugging in
antlrworks (great work btw, debugger is really neat) shows me the
correct identifiers. 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070416/4ffe00b0/attachment-0001.html 

From xkrebstarx at gmail.com  Mon Apr 16 20:11:39 2007
From: xkrebstarx at gmail.com (xkrebstarx)
Date: Mon, 16 Apr 2007 23:11:39 -0400
Subject: [antlr-interest] Newbie Rule Rewrite
Message-ID: <47213a9b0704162011p55d31b24t77feffc90aabd1fc@mail.gmail.com>

Hey guys,

I am stuck on how to rewrite a rule like this. Can anyone help

rule     ( a | b | c | d ) ( e | f | g }*

Thanx

From dave at badgers-in-foil.co.uk  Tue Apr 17 00:18:10 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 17 Apr 2007 07:18:10 +0000
Subject: [antlr-interest] Newbie Rule Rewrite
In-Reply-To: <47213a9b0704162011p55d31b24t77feffc90aabd1fc@mail.gmail.com>
References: <47213a9b0704162011p55d31b24t77feffc90aabd1fc@mail.gmail.com>
Message-ID: <20070417071810.GA9608@badgers-in-foil.co.uk>

On Mon, Apr 16, 2007 at 11:11:39PM -0400, xkrebstarx wrote:
> I am stuck on how to rewrite a rule like this. Can anyone help
> 
> rule     ( a | b | c | d ) ( e | f | g }*

What do you want thhe output to look like?


-- 
http://david.holroyd.me.uk/

From xdecoret at free.fr  Tue Apr 17 00:49:27 2007
From: xdecoret at free.fr (=?ISO-8859-1?Q?Xavier_D=E9coret?=)
Date: Tue, 17 Apr 2007 09:49:27 +0200
Subject: [antlr-interest] Unsuscribe
Message-ID: <46247C07.208@free.fr>



From fowler at acm.org  Tue Apr 17 06:00:58 2007
From: fowler at acm.org (Martin Fowler)
Date: Tue, 17 Apr 2007 09:00:58 -0400
Subject: [antlr-interest] Problem using += operator in actions
Message-ID: <4624C50A.60200@acm.org>

This is another one of those problems I ended up solving myself but I 
post here to help others.

I wanted to collect together some words using the += operator. I used a 
grammar line like this:

item	: 'item'  w += WORD+ ';'
	{System.out.println("name is: " + $w);}
	 ;

The problem was that $w ended up being null.

My mistake was that the phrase w+=WORD needed to be contained in 
parentheses before applying the +, like so:

item	: 'item'  (w += WORD)+ ';'
	{System.out.println("name is: " + $w);}
	 ;


-- 
Martin Fowler
http://martinfowler.com

From miguel.ping at gmail.com  Tue Apr 17 06:41:35 2007
From: miguel.ping at gmail.com (Miguel Ping)
Date: Tue, 17 Apr 2007 14:41:35 +0100
Subject: [antlr-interest] Problem using += operator in actions
In-Reply-To: <4624C50A.60200@acm.org>
References: <4624C50A.60200@acm.org>
Message-ID: <ab0bf2c00704170641q65e65d8dr4d9a8250b2ad1e47@mail.gmail.com>

I guess antlr is a little obscure on the syntax. I had some trouble
with trees and with actions order. For instance, I tried to do this:

rule: partA pb=partB? partC -> ^(partA ^($pb? ) partC )

but it seems that the ^ should contain only the ref:

(...) -> ^(partA ^($pb)? partC .

I also got some trouble with synpreds => and parenthesis, with members
order (the lexer at member:: and parser at member stuff), and with tree
rewrite rules. I guess all of us eventually figure a way to solve
things, and it ends up in our common sense, instead of maybe being in
the wiki ;)

Maybe we can gather this common mistakes, and make a "check this
before going nuts" page or so...

On 4/17/07, Martin Fowler <fowler at acm.org> wrote:
> This is another one of those problems I ended up solving myself but I
> post here to help others.
>
> I wanted to collect together some words using the += operator. I used a
> grammar line like this:
>
> item	: 'item'  w += WORD+ ';'
> 	{System.out.println("name is: " + $w);}
> 	 ;
>
> The problem was that $w ended up being null.
>
> My mistake was that the phrase w+=WORD needed to be contained in
> parentheses before applying the +, like so:
>
> item	: 'item'  (w += WORD)+ ';'
> 	{System.out.println("name is: " + $w);}
> 	 ;
>
>
> --
> Martin Fowler
> http://martinfowler.com
>

From win at wincent.com  Tue Apr 17 07:41:43 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 17 Apr 2007 16:41:43 +0200
Subject: [antlr-interest] C target examples
Message-ID: <066C28DE-F288-4517-AE57-57714A7AFCF0@wincent.com>

Does anyone have any examples at all for the C target?

I know that there will eventually be official examples included with  
ANTLR but for the time being I'm wondering if someone can point me to  
a Subversion repository or other place where I can take a look at  
some working (or even non-working examples). So far I've only found  
snippets in the mailing list archives, and some really out-of-date  
stuff using the Google Code search engine.

I'm currently trying to figure out how it all works by trial and  
error, and poring over the generated source and the C target runtime  
source and headers, but the going is very slow and if it's taking me  
a long time to figure out how to do even basic stuff like detecting  
lexing and parsing errors. I've got the Definitive ANTLR Reference,  
but that's obviously Java-centric.

If anyone can direct me to an example, short or long, broken or  
working, I'd be very grateful.

Cheers,
Wincent


From parrt at cs.usfca.edu  Tue Apr 17 09:43:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 09:43:46 -0700
Subject: [antlr-interest] ok, try network again
Message-ID: <94EEA7FA-9954-454E-9171-EF9F9B940557@cs.usfca.edu>

I am now using resin (http server) not my java components to push out  
files under /download/...

Let me know if you see a difference.

I'm seeing stalls with rsync so I'm guessing it's not my software,  
but let's see if this helps.

Ter

From parrt at cs.usfca.edu  Tue Apr 17 09:50:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 09:50:58 -0700
Subject: [antlr-interest] Problem using += operator in actions
In-Reply-To: <ab0bf2c00704170641q65e65d8dr4d9a8250b2ad1e47@mail.gmail.com>
References: <4624C50A.60200@acm.org>
	<ab0bf2c00704170641q65e65d8dr4d9a8250b2ad1e47@mail.gmail.com>
Message-ID: <A3E0766B-F682-4378-BA99-F49A45F2973E@cs.usfca.edu>


On Apr 17, 2007, at 6:41 AM, Miguel Ping wrote:

> I guess antlr is a little obscure on the syntax.

Only if you don't have the definition. ;)  There are some bugs /  
stuff to fix like the precedence of += as Martin discovered (I'll  
respond separately).


> I had some trouble
> with trees and with actions order. For instance, I tried to do this:
>
> rule: partA pb=partB? partC -> ^(partA ^($pb? ) partC )

^(foo) makes no sense.  A tree with a root and no children is exactly  
the root.  ^(foo?) is same as foo?  makes no sense to have an  
optional root anyway.

> I also got some trouble with synpreds => and parenthesis, with members
> order (the lexer at member:: and parser at member stuff), and with tree
> rewrite rules. I guess all of us eventually figure a way to solve
> things, and it ends up in our common sense, instead of maybe being in
> the wiki ;)
>
> Maybe we can gather this common mistakes, and make a "check this
> before going nuts" page or so...

A lot of it is just stuff to clean up or simply learnign the rules.

Ter


From parrt at cs.usfca.edu  Tue Apr 17 10:49:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 10:49:15 -0700
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <46239D0F.5000802@acm.org>
References: <46239D0F.5000802@acm.org>
Message-ID: <53ED436B-2CC0-4913-ABC5-E2A24D9B4305@cs.usfca.edu>


On Apr 16, 2007, at 8:58 AM, Martin Fowler wrote:

> I've just upgraded to 3.0b7 and I noticed a change in where Antlr  
> puts its output files (didn't spot it in the update log.)
>
> Previously if you specified an output directory with -o and you had  
> a grammar in a subdirectory it would put the output in the  
> corresponding subdirectory in the output directory. Now it just  
> puts it directly in the subdirectory. I'm not saying this is wrong,  
> but I thought I'd point it out as it's caused my stuff to break :-(

Fixed.  Now puts it in the subdir.  I cannot push a new build yet  
because I have gutted the tree rewrite mechanism and I did not use a  
separate development branch.  I should be finished soon, however.   
Here is a new faq entry that hopefully clears things up

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1862

Ter

From parrt at cs.usfca.edu  Tue Apr 17 11:25:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 11:25:31 -0700
Subject: [antlr-interest] how to do exceptions quickly
Message-ID: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>

Hi,

I had a long conversation at Google last night with Neal Gafter, the  
guy who built the javac compiler when he was at Sun. He told me that  
exceptions can be made to execute very quickly.  The only thing you  
have to avoid is the actual exception object creation which has to do  
all of the expensive stack trace creation and so on.  He says that  
the actual throwing of the exception itself is not a problem.  This  
might be something to look at later to see if it goes quickly,  
because it results in cleaner backtracking code.  Anyway, we can  
create some singleton objects, which will solve the problem.  Hooray!

Anyway, this might be useful to people in general.  I thought was  
pass along this interesting trick.

He confirmed that -target jsr14 should be okay for us to use generics  
in the antler tool and generate 1.4 compatible.class files.  He is  
the author of all that, so I believe. ;)

Ter

From rschulz at sonic.net  Tue Apr 17 11:44:20 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 17 Apr 2007 11:44:20 -0700
Subject: [antlr-interest] how to do exceptions quickly
In-Reply-To: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
Message-ID: <200704171144.21188.rschulz@sonic.net>

On Tuesday 17 April 2007 11:25, Terence Parr wrote:
> Hi,
>
> I had a long conversation at Google last night with Neal Gafter, the
> guy who built the javac compiler when he was at Sun. He told me that
> exceptions can be made to execute very quickly.  The only thing you
> have to avoid is the actual exception object creation which has to do
> all of the expensive stack trace creation and so on.  He says that
> the actual throwing of the exception itself is not a problem.  This
> might be something to look at later to see if it goes quickly,
> because it results in cleaner backtracking code.  Anyway, we can
> create some singleton objects, which will solve the problem.  Hooray!
>
> Anyway, this might be useful to people in general.  I thought was
> pass along this interesting trick.

Those are good things to know about, of course. If you have no need to 
know the precise locus of the origination of an exception, and very 
often that is the case (debugging being the only real exception, I 
imagine), then a pre-built instance is just fine. You can still set 
descriptive attributes in the Exception (subclass) instance, with the 
caveat that they must be retrieved before the same instance is again 
thrown. It seems that in practice this is an easily accommodated 
requirement.


> He confirmed that -target jsr14 should be okay for us to use generics
> in the antler tool and generate 1.4 compatible.class files.  He is
> the author of all that, so I believe. ;)

I'm not so sure about that. Backward compatibility was the original goal 
and a significant constraint on the design of the Java 5 generic 
mechanism, but as I recall, there turned out to be some issues and 
that's why there's a distinct class file version identifier for classes 
compiled for language version 5 and those classes will not load in a 
1.4-series JVM.

I'd test these things out before committing to any scheme that uses 
generics and purports to produce 1.4-compatible class files.


> Ter


Randall Schulz

From xkrebstarx at gmail.com  Tue Apr 17 12:37:00 2007
From: xkrebstarx at gmail.com (xkrebstarx)
Date: Tue, 17 Apr 2007 15:37:00 -0400
Subject: [antlr-interest] Newbie Rule Rewrite
Message-ID: <47213a9b0704171237s5451c7afgbaa894ee3ad4bd0c@mail.gmail.com>

>What do you want thhe output to look like?

I am using ANTLR v3 and I would like the rule to look like this...

rule      ( identifier | b | c | d ) ( '[' subscript ']' | f | g )*
        ;


and the input tokens a[i][j] would give me something like


sub
    sub
        a
        i
    j


The tough part is figuring out how the first set ( a,b,c,d ) and the
second set ( e,f,g ) would be represented in the rewrite. That sounds
a big vague, let me try to explain a little more.

If I do something this

      rule     ( a | b | c | d )
                       ( e  -> ^('sub' a e)
                         | f  -> rewrite
                         | g -> rewrite
                       }*


how do I know what a,b,c or d was used. I get an error.

Or conversely, if I use

rule     ( a | b | c | d ) ( e | f | g )* -> rewrite

how do I know what e,f,g, if any, were used. I have read the
Definitive reference over and over and cannot figure out how to put
this together properly.

Thanx

>>On Mon, Apr 16, 2007 at 11:11:39PM -0400, xkrebstarx wrote:
>> I am stuck on how to rewrite a rule like this. Can anyone help
>>
>> rule     ( a | b | c | d ) ( e | f | g }*

From dave at badgers-in-foil.co.uk  Tue Apr 17 13:16:33 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 17 Apr 2007 20:16:33 +0000
Subject: [antlr-interest] Newbie Rule Rewrite
In-Reply-To: <47213a9b0704171237s5451c7afgbaa894ee3ad4bd0c@mail.gmail.com>
References: <47213a9b0704171237s5451c7afgbaa894ee3ad4bd0c@mail.gmail.com>
Message-ID: <20070417201633.GA20927@badgers-in-foil.co.uk>

On Tue, Apr 17, 2007 at 03:37:00PM -0400, xkrebstarx wrote:
> >What do you want thhe output to look like?
> 
> I am using ANTLR v3 and I would like the rule to look like this...
> 
> rule      ( identifier | b | c | d ) ( '[' subscript ']' | f | g )*
>        ;
> 
> 
> and the input tokens a[i][j] would give me something like
> 
> 
> sub
>    sub
>        a
>        i
>    j
> 
> 
> The tough part is figuring out how the first set ( a,b,c,d ) and the
> second set ( e,f,g ) would be represented in the rewrite. That sounds
> a big vague, let me try to explain a little more.
> 
> If I do something this
> 
>      rule     ( a | b | c | d )
>                       ( e  -> ^('sub' a e)
>                         | f  -> rewrite
>                         | g -> rewrite
>                       }*
> 
> 
> how do I know what a,b,c or d was used. I get an error.

How about simplifying the rule by extracting the prefix set?

rule
	:	p=rule_prefix
	(	e -> ^(SUB $p e)
	|	f -> rewrite
	|	g -> rewrite
	)*

rule_prefix
	:	a | b | c | d


The problem then is that it still doesn't handle the (..)* so that
recursive SUB trees are built, so you need the rewrites specified not in
terms of the prefix ($p, above), but in terms of the existing result
tree, which you can do like this,

rule
	:	rule_prefix -> rule_prefix
	(	'[' subscript ']' -> ^(SUB $rule e)
	|	f -> rewrite
	|	g -> rewrite
	)*

The trick above is the 'rule_prefix -> rule_prefix', as without that
construction, $rule will be a null tree at the point when the parser
enters the (..)*.

Hope that helps, and the examples I gave are actually correct :)


ta,
dave

-- 
http://david.holroyd.me.uk/

From pink at odahoda.de  Tue Apr 17 13:49:12 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 17 Apr 2007 22:49:12 +0200
Subject: [antlr-interest] how to do exceptions quickly
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
Message-ID: <f03bs8$cvq$1@sea.gmane.org>

Terence Parr wrote:

> I had a long conversation at Google last night with Neal Gafter, the
> guy who built the javac compiler when he was at Sun. He told me that
> exceptions can be made to execute very quickly.  The only thing you
> have to avoid is the actual exception object creation which has to do
> all of the expensive stack trace creation and so on.  He says that
> the actual throwing of the exception itself is not a problem.  This
> might be something to look at later to see if it goes quickly,
> because it results in cleaner backtracking code.

In fact this is already in my TODO as one of the possible optimizations for
the Python target :) In Python exceptions have very little overhead and it
is not frowned upon (as in Java or C++) to use them regularily.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From dave at badgers-in-foil.co.uk  Tue Apr 17 14:50:34 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 17 Apr 2007 21:50:34 +0000
Subject: [antlr-interest] Regression? antlr-03-30-2007.14 ->
	antlr-04-10-2007.18
Message-ID: <20070417215034.GA21859@badgers-in-foil.co.uk>

With the 03-30-2007.14 build, my for-loops worked and the following
syntax was accepted:

  for (var b=1;b<=10;b++) { bar(); }

with 04-10-2007.18, they don't parse any more, with NoViableAltException
reported at the 'var'.

Here is the slightly simplified rule:

forStatement
    :   f=FOR
        LPAREN
        (    (forInClauseDecl IN)=>forInClause -> ^(FOR_IN[$f] forInClause)
        |    traditionalForClause -> ^($f traditionalForClause)
        )
        RPAREN
        statement -> $forStatement statement
    ;

[The actual grammar uses,

  scope InOperator {
      boolean allowed;
  }

to track whether IN is allowed to appear in an expression or not (i.e.
for the above to work, IN must not appear in the traditionalForClause)
so the problem might be related to that?]


A difference I notice in the generated code is that the top level
alternative logic used to simply test LA(1) for the alternatives
following LPAREN, whereas the newer code does an equivalent test &&
synpred3() in all cases.  [synpred3() is the '(forInClauseDecl IN)=>']


Full grammar attached...


ta,
dave

-- 
http://david.holroyd.me.uk/
-------------- next part --------------

	
/**********************************************************
 * ActionScript Development Tool 
 * Copyright (C) 2005 asdt.org 
 * 
 * http://www.asdt.org
 * http://sourceforge.net/projects/aseclipseplugin/
 *
 * This program is free software; 
 * you can redistribute it and/or modify it under the terms of 
 * the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, 
 * or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the 
 * Free Software Foundation, Inc., 
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA. 
 * 
 * Created on 29 sept 2005
 * 
 **********************************************************


**
 *	@author Martin Schnabel
 */
grammar AS3;

options {
	k = 2;
	output=AST;
	ASTLabelType=LinkedListTree;
}

tokens {
	COMPILATION_UNIT;
	TYPE_BLOCK; METHOD_DEF; VAR_DEF;
	ANNOTATIONS; ANNOTATION; ANNOTATION_PARAMS; ANNOTATION_PARAM;
	MODIFIERS; NAMESPACE_DEF;
	CLASS_DEF; INTERFACE_DEF;
	PARAMS;
	PARAM; TYPE_SPEC;
	BLOCK; ELIST;
	CONDITION; ARGUMENTS;
	EXPR_STMNT;
	ENCPS_EXPR;
	VAR_INIT;
	METHOD_CALL; PROPERTY_OR_IDENTIFIER; PROPERTY_ACCESS; TYPE_NAME;
	ARRAY_ACC;
	UNARY_PLUS; UNARY_MINUS; POST_INC; POST_DEC; PRE_INC; PRE_DEC;
	ARRAY_LITERAL;
	ELEMENT; OBJECT_LITERAL;
	OBJECT_FIELD; FUNC_DEF;
	FOR_INIT; FOR_CONDITION; FOR_ITERATOR;
	FOR_EACH; FOR_IN;
	SWITCH_STATEMENT_LIST;
	IDENTIFIER;
	DEFAULT_XML_NAMESPACE;
	
	VIRTUAL_PLACEHOLDER;
}

scope InOperator {
	boolean allowed;
}

@parser::header {
package org.asdt.core.internal.antlr;

import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTree;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTreeAdaptor;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListToken;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTokenStream;
import uk.co.badgersinfoil.metaas.impl.antlr.LinkedListTokenSource;
import java.io.StringReader;
import java.io.Reader;
import java.io.IOException;
import uk.co.badgersinfoil.metaas.impl.parser.E4XHelper;
import uk.co.badgersinfoil.metaas.impl.parser.RegexSimpleHelper;
import uk.co.badgersinfoil.metaas.impl.TokenBuilder;
import uk.co.badgersinfoil.metaas.impl.ASTUtils;
}
@lexer::header {
package org.asdt.core.internal.antlr;
}

// disable standard error handling; be strict
@rulecatch { }

@parser::members {

	public static final int CHANNEL_PLACEHOLDER = 999;

	protected void mismatch(IntStream input, int ttype, BitSet follow)
		throws RecognitionException
	{
		throw new MismatchedTokenException(ttype, input);
	}
	
	private AS3Lexer lexer;
	private CharStream cs;

	public void setInput(AS3Lexer lexer, CharStream cs) {
		this.lexer = lexer;
		this.cs = cs;
	}

	/**
	 * Handle 'island grammar' for embeded XML-literal elements.
	 */
	private LinkedListTree parseXMLLiteral(LinkedListToken startMarker) throws RecognitionException {
		return E4XHelper.parseXMLLiteral(startMarker, lexer, cs, (LinkedListTokenStream)input);
	}

	/**
	 * Handle 'island grammar' for skipping over embeded
	 * regular-expression-literal values.
	 */
	private LinkedListTree parseRegexpLiteral(LinkedListToken startMarker) throws RecognitionException {
		return RegexSimpleHelper.parseRegexpLiteral(startMarker, lexer, cs, (LinkedListTokenStream)input);
	}

	private boolean virtualSemi() {
		LinkedListToken tok = ((LinkedListToken)input.LT(1)).getPrev();
		while (tok.getType() == WS) {
			tok = tok.getPrev();
		}
		return tok.getType() == NL;
	}
	
	/**
	 * Adds a placeholder token into the stream, corresponding to the
	 * location of the given AST node, if the given AST node has no
	 * children.  Only use this function with 'imaginary' nodes, not with
	 * nodes that already correspond to a concrete Token.
	 */
	private void placeholder(LinkedListTree imaginary) {
		if (imaginary.getChildCount() > 0) {
			// one of this node's children will presumably have
			// some tokens of its own, so there's no need for us
			// to synthesize one,
			return;
		}

		// Since this this AST node is 'imaginary', it does not directly
		// correspond to any Token in the input stream.  Also, since
		// it has no children, there is nothing anchoring it to a
		// position in the token-stream, which will make it difficult to
		// know where new tokens should be inserted if the calling app
		// adds a child to this node.  We therefore insert a virtual
		// token at this point in the stream just so that the AST node
		// can remember its own location.

		LinkedListToken tok = (LinkedListToken)input.LT(1);
		LinkedListToken placeholder = TokenBuilder.newPlaceholder();
		tok.beforeInsert(placeholder);
		imaginary.setStartToken(placeholder);
		imaginary.setStopToken(placeholder);
	}
}


/**
 * this is the start rule for this parser
 */
compilationUnit
	:	(	as2CompilationUnit
		|	as3CompilationUnit
		) -> ^(COMPILATION_UNIT as2CompilationUnit? as3CompilationUnit?)
	;

as2CompilationUnit
	:	importDefinition*
		as2Type
	;

as2Type
	:	annos=annotations! mods=modifiers!
	(	as2ClassDefinition[$annos.tree,$mods.tree]
	|	as2InterfaceDefinition[$annos.tree,$mods.tree]
	)
	;

as3CompilationUnit
	:	packageDecl
		packageBlockEntry*
		EOF!
	;

packageDecl
	:	PACKAGE^ identifier?
		packageBlock
	;

packageBlock
	:	LCURLY
		packageBlockEntry*
		RCURLY
		-> ^(BLOCK packageBlockEntry*)
	;

packageBlockEntry
	:	(	importDefinition
//		|	includeDirective  This is in 'annos' instead
		|	annos=annotations! mods=modifiers!
			(	classDefinition[$annos.tree,$mods.tree]
			|	interfaceDefinition[$annos.tree,$mods.tree]
			|	variableDefinition[$annos.tree,$mods.tree]
			|	methodDefinition[$annos.tree,$mods.tree]
			|	namespaceDefinition[$annos.tree,$mods.tree]
			|	useNamespaceDirective
			)
		|	SEMI!
//		|	statement
		)
	;

endOfFile
	:	EOF!
	;

importDefinition
	:	IMPORT^ identifierStar semi
	;

semi
	:	SEMI!
//	|	{ virtualSemi() }?
	;	

classDefinition[LinkedListTree annos, LinkedListTree mods]
	:	CLASS ident
		classExtendsClause
		implementsClause
		typeBlock
		-> ^(CLASS_DEF {$mods} CLASS ident classExtendsClause implementsClause typeBlock)
	;

as2ClassDefinition[LinkedListTree annos, LinkedListTree mods]
	:	CLASS identifier
		classExtendsClause
		implementsClause
		typeBlock
		-> ^(CLASS_DEF {$mods} CLASS identifier classExtendsClause implementsClause typeBlock)
	;

interfaceDefinition[LinkedListTree annos, Tree mods]
	:	INTERFACE ident
		interfaceExtendsClause
		typeBlock
		-> ^(INTERFACE_DEF {$mods} INTERFACE ident interfaceExtendsClause typeBlock)
	;

as2InterfaceDefinition[LinkedListTree annos, Tree mods]
	:	INTERFACE identifier
		interfaceExtendsClause
		typeBlock
		-> ^(INTERFACE_DEF INTERFACE identifier interfaceExtendsClause typeBlock) // TODO: mods?
	;

classExtendsClause
	:	(EXTENDS^ identifier)?
	;
interfaceExtendsClause
	:	(EXTENDS^ identifier ( COMMA! identifier)*)?
	;
implementsClause
	:	(IMPLEMENTS^ identifier ( COMMA! identifier)*)?
	;
typeBlock
	:	LCURLY
		typeBlockEntry*
		RCURLY
		-> ^(TYPE_BLOCK typeBlockEntry*)
	;

typeBlockEntry
	:	/*statement
	|	(LBRACK)=>*/ annotatableDirective
	|	importDefinition
	|	as2IncludeDirective
//	|	includeDirective  This is in 'annos' instead
	;

annotatableDirective
	:	a=annotations! m=modifiers!
		(	variableDefinition[$a.tree,$m.tree]
		|	methodDefinition[$a.tree,$m.tree]
		)
	;

as2IncludeDirective
	:	INCLUDE_DIRECTIVE
		STRING_LITERAL
	;

includeDirective
	:	'include'
		STRING_LITERAL
		semi
	;


methodDefinition[LinkedListTree annos, Tree mods]
	:	functionDecl ident
		parameterDeclarationList
		typeExpression?
		(block|semi)
		-> ^(METHOD_DEF {$annos} {$mods}
		                functionDecl ident
				parameterDeclarationList
				typeExpression?
				block?)
	;

functionDecl
	:	FUNCTION^ (role=accessorRole)?
	;

accessorRole
	:	GET | SET
	;

namespaceDefinition[LinkedListTree annos, Tree mods]
	:	NAMESPACE ident
		-> ^(NAMESPACE_DEF {$annos} {$mods} NAMESPACE ident)
	;

useNamespaceDirective
	:	USE NAMESPACE ident semi
	;

variableDefinition[LinkedListTree annos, Tree mods]
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	decl=varOrConst variableDeclarator
		(COMMA variableDeclarator)*
		semi
		-> ^(VAR_DEF {$annos} {$mods} $decl variableDeclarator+)
	;

varOrConst
	:	VAR | CONST
	;

variableDeclarator
	:	ident^ typeExpression? variableInitializer?
	;
declaration
	:	varOrConst^ variableDeclarator
		declarationTail
	;

declarationTail
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	(COMMA! variableDeclarator)*
	;

variableInitializer
	:	ASSIGN^ assignmentExpression
	;

// A list of formal parameters
// TODO: shouldn't the 'rest' parameter only be allowed in the last position?
parameterDeclarationList
	:	LPAREN
		(	parameterDeclaration
			(COMMA parameterDeclaration)*
		)?
		RPAREN
		-> ^(PARAMS parameterDeclaration*)
	;


parameterDeclaration
	:	basicParameterDeclaration | parameterRestDeclaration
	;

basicParameterDeclaration
	:	CONST? ident typeExpression? parameterDefault?
		-> ^(PARAM CONST? ident typeExpression? parameterDefault?)
	;

parameterDefault
scope InOperator;
@init {
	$InOperator::allowed = true;
}
		// TODO: can we be more strict about allowed values?
	:	ASSIGN^ assignmentExpression
	;

parameterRestDeclaration
	:	REST ident?
		-> ^(PARAM REST ident?)
	;
block
	:	LCURLY blockEntry* RCURLY
		-> ^(BLOCK blockEntry*)
	;

blockEntry
	:
/*options { k=*; }
	:	a=annotations! m=modifiers!
		(	variableDefinition[$a.tree,$m.tree]
		|	methodDefinition[$a.tree,$m.tree]
		)
	|*/	statement
	;

condition
	:	LPAREN expression RPAREN
		-> ^(CONDITION expression)
	;

statement
	:	(LCURLY)=> block
	|	declarationStatement
	|	expressionStatement
	|	ifStatement
	// For statement
	|	forEachStatement
	|	forStatement

	// While statement
	|	whileStatement

	// do-while statement
	|	doWhileStatement
	
	// with statement
	|	withStatement
	
	// switch statement
	|	switchStatement
	
	// get out of a loop (or switch)
	|	breakStatement

	// do next iteration of a loop
	|	continueStatement

	// Return an expression
	|	returnStatement

	// throw an exception
	|	throwStatement
	
	// handle exceptions
	|	tryStatement
	
	// handle 'default xml namespace = "foo"'
	|	defaultXMLNamespaceStatement

	// empty statement
	|	SEMI!
	;

declarationStatement
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	declaration semi
	;

expressionStatement
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList semi
		-> ^(EXPR_STMNT expressionList)
	;
	
ifStatement
	:	IF^ condition statement
		((ELSE)=>ELSE statement)?
	;

throwStatement
	:	'throw'^ expression semi
	;

tryStatement
	:	'try'
		block
		catchBlock*
		finallyBlock?
	;

catchBlock
	:	'catch' LPAREN! ident typeExpression? RPAREN!
		block
	;

finallyBlock
	:	'finally' block
	;

returnStatement
	:	RETURN^ expression? semi
	;
		
continueStatement
	:	CONTINUE^ semi
	;

breakStatement
	:	BREAK^ semi
	;

switchStatement
	:	SWITCH^ condition
		switchBlock
	;

switchBlock
	:	LCURLY
		(caseStatement)*
		(defaultStatement)?
		RCURLY
		-> ^(BLOCK caseStatement* defaultStatement?)
	;

caseStatement
	:	CASE^ expression COLON! switchStatementList
	;
	
defaultStatement
	:	DEFAULT^ COLON! switchStatementList
	;

switchStatementList
	:	statement* -> ^(SWITCH_STATEMENT_LIST statement*)
	;

forEachStatement
	:	FOR EACH
		LPAREN
		forInClause
		RPAREN
		statement
		-> ^(FOR_EACH forInClause statement)
	;
forStatement
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	f=FOR
		LPAREN
		(	(forInClauseDecl IN)=>forInClause -> ^(FOR_IN[$f] forInClause)
		|	traditionalForClause -> ^($f traditionalForClause)
		)
		RPAREN
		statement -> $forStatement statement	// statement to loop over
	;
traditionalForClause
	:	a=forInit {placeholder($a.tree);} SEMI!	// initializer
		b=forCond {placeholder($b.tree);} SEMI!	// condition test
		c=forIter {placeholder($c.tree);}		// updater
	;

forInClause
	:	forInClauseDecl IN forInClauseTail
	;

forInClauseDecl
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	declaration | ident
	;


forInClauseTail
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList
	;

// The initializer for a for loop
forInit	
scope InOperator;
@init {
	$InOperator::allowed = false;
}
	:	(declaration | expressionList )?
		-> ^(FOR_INIT declaration? expressionList?)
	;

forCond
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList?
		-> ^(FOR_CONDITION expressionList?)
	;

forIter
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	expressionList?
		-> ^(FOR_ITERATOR expressionList?)
	;

whileStatement
	:	WHILE^ condition statement
	;

doWhileStatement
	:	DO^ statement WHILE! condition semi
	;

withStatement
	:	WITH^ condition statement
	;

defaultXMLNamespaceStatement
	:	DEFAULT XML NAMESPACE ASSIGN expression semi
		-> ^(DEFAULT_XML_NAMESPACE expression)
	;

typeExpression
	:	c=COLON
		// TODO: identifier allows namespaces, and I suspect a type:spec shouldn't
		(identifier | 'void' | STAR)
		-> ^(TYPE_SPEC[$c] identifier? 'void'? STAR?)
	;	

identifier 
	:	qualifiedIdent
		(	options{greedy=true;}
		: 	DOT qualifiedIdent
		)*
		-> ^(IDENTIFIER qualifiedIdent+)
	;

qualifiedIdent
	:	(namespaceName DBL_COLON)? ident 
	;

namespaceName
	:	IDENT | reservedNamespace
	;

reservedNamespace
	:	PUBLIC
	|	PRIVATE
	|	'protected'
	|	'internal'
	;

identifierStar
	:	ident
		(	options{greedy=true;}
		:	DOT ident
		)* 
		(	DOT STAR
		)?
		-> ^(IDENTIFIER ident+ STAR?)
	;

annotations
	:	(	annotation
		|	includeDirective
		)*
		-> ^(ANNOTATIONS annotation*)
	;

annotation
	:	LBRACK
		ident
		annotationParamList?
		RBRACK
		-> ^(ANNOTATION ident annotationParamList?)
	;

annotationParamList
	:
		LPAREN
		(	annotationParam
			(COMMA annotationParam)*
		)?
		RPAREN
		-> ^(ANNOTATION_PARAMS annotationParam*)
	;

/*
[Inspectable(name="Icon Offset", verbose = 1,type=Boolean, defaultValue=true)]
[Inspectable(defaultValue="circular")]
[Bindable]
[ChangeEvent("event")]
[Inspectable("danger", 1, true, maybe)] 
[InspectableList("flavorStr","colorStr")]
[Event("click")]
[Collection (name="name", variable="varname", collectionClass="mx.utils.CollectionImpl", collectionItem="coll-item-classname", identifier="string")] 
*/

annotationParam
	:
		ident ASSIGN constant -> ^(ASSIGN ident constant)
	|	constant -> constant
	|	ident -> ident
	;

modifiers
	:	modifier*
		-> ^(MODIFIERS modifier*)
	;

modifier
	:	namespaceName
	|	STATIC
	|	'final'
	|	'enumerable'
	|	'explicit'
	|	'override'
	|	DYNAMIC
	|	'intrinsic'
	;

arguments
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	LPAREN expressionList RPAREN
		-> ^(ARGUMENTS expressionList)
	|	LPAREN RPAREN
		-> ARGUMENTS
	;
// This is an initializer used to set up an array.
arrayLiteral
	:	LBRACK elementList? RBRACK
		-> ^(ARRAY_LITERAL elementList?)
	;
		
elementList
	:	COMMA!
	|	nonemptyElementList
	;
nonemptyElementList
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression (COMMA! assignmentExpression)*
	;

element
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression
		-> ^(ELEMENT assignmentExpression)
	;

// This is an initializer used to set up an object.
objectLiteral
	:	LCURLY fieldList? RCURLY
		-> ^(OBJECT_LITERAL fieldList?)
	;
	
fieldList
	:	literalField (COMMA! literalField?)*
	;
	
literalField 
	: 	fieldName COLON element
		-> ^(OBJECT_FIELD fieldName element)
	;
	
fieldName
	:	ident
	|	number
	;

// the mother of all expressions
expression
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	assignmentExpression
	;

// This is a list of expressions.
expressionList
	:	assignmentExpression (COMMA assignmentExpression)*
		-> ^(ELIST assignmentExpression+)
	;

// assignment expression (level 13)
assignmentExpression
	:	conditionalExpression
	(	(assignmentOperator)=> assignmentOperator
		assignmentExpression
	)*
	;

assignmentOperator
	:	ASSIGN
	| 	STAR_ASSIGN
	|	DIV_ASSIGN
	|	MOD_ASSIGN
	|	PLUS_ASSIGN
	|	MINUS_ASSIGN
	|	SL_ASSIGN
	|	SR_ASSIGN
	|	BSR_ASSIGN
	|	BAND_ASSIGN
	|	BXOR_ASSIGN
	|	BOR_ASSIGN
	|	LAND_ASSIGN
	|	LOR_ASSIGN
	;

// conditional test (level 12)
conditionalExpression
	:	(logicalOrExpression -> logicalOrExpression)
		(
			QUESTION
			conditionalSubExpression
			-> ^(QUESTION $conditionalExpression conditionalSubExpression)
		)?
	;
conditionalSubExpression
	:	assignmentExpression COLON^ assignmentExpression
	;

// TODO: should 'and'/'or' have same precidence as '&&'/'||' ?

// logical or (||)  (level 11)
logicalOrExpression
	:	logicalAndExpression
		(logicalOrOperator^ logicalAndExpression)*
	;

logicalOrOperator
	:	LOR | 'or'
	;

// logical and (&&)  (level 10)
logicalAndExpression
	:	bitwiseOrExpression
		(logicalAndOperator^ bitwiseOrExpression)*
	;

logicalAndOperator
	:	LAND | 'and'
	;

// bitwise or non-short-circuiting or (|)  (level 9)
bitwiseOrExpression
	:	bitwiseXorExpression
		(BOR^ bitwiseXorExpression)*
	;

// exclusive or (^)  (level 8)
bitwiseXorExpression
	:	bitwiseAndExpression
		(BXOR^ bitwiseAndExpression)*
	;

// bitwise or non-short-circuiting and (&)  (level 7)
bitwiseAndExpression
	:	equalityExpression
		(BAND^ equalityExpression)*
	;

// equality/inequality (==/!=) (level 6)
equalityExpression
	:	relationalExpression
	(	equalityOperator^
		relationalExpression
	)*
	;

equalityOperator
	:	STRICT_EQUAL | STRICT_NOT_EQUAL | NOT_EQUAL | EQUAL
	;
	
// boolean relational expressions (level 5)
relationalExpression
	:	shiftExpression
		((relationalOperator)=> relationalOperator^ shiftExpression)*
	;

relationalOperator
	:	{$InOperator::allowed}? IN
	|	LT | GT | LE | GE | IS | AS | 'instanceof'
	;

// bit shift expressions (level 4)
shiftExpression
	:	additiveExpression
		(shiftOperator^ additiveExpression)*
	;

shiftOperator
	:	SL | SR | BSR
	;

// binary addition/subtraction (level 3)
additiveExpression
	:	multiplicativeExpression
		(additiveOperator^ multiplicativeExpression )*
	;

additiveOperator
	:	PLUS | MINUS
	;

// multiplication/division/modulo (level 2)
multiplicativeExpression
	:	unaryExpression
		(	multiplicativeOperator^
			unaryExpression
		)*
	;

multiplicativeOperator
	:	STAR | DIV | MOD
	;

//	(level 1)
unaryExpression
	:	in=INC unaryExpression -> ^(PRE_INC[$in] unaryExpression)
	|	de=DEC unaryExpression -> ^(PRE_DEC[$de] unaryExpression)
	|	MINUS unaryExpression -> ^(UNARY_MINUS unaryExpression)
	|	PLUS unaryExpression -> ^(UNARY_PLUS unaryExpression)
	|	unaryExpressionNotPlusMinus
	;

unaryExpressionNotPlusMinus
	:	'delete' postfixExpression -> ^('delete' postfixExpression)
	|	'void' unaryExpression -> ^('void' unaryExpression)
	|	'typeof' unaryExpression -> ^('typeof' unaryExpression)
	|	LNOT unaryExpression -> ^(LNOT unaryExpression)
	|	BNOT unaryExpression -> ^(BNOT unaryExpression)
	|	postfixExpression
	;

// qualified names, array expressions, method invocation, post inc/dec
postfixExpression
	:	(primaryExpression -> primaryExpression)
		(	poi=propOrIdent[root_0, retval.start] -> $poi
		|	DOT e4xExpression
		|	LBRACK expression RBRACK -> ^(ARRAY_ACC $postfixExpression expression)
		|	E4X_DESC e4xExpression
		|	arguments -> ^(METHOD_CALL $postfixExpression arguments)
		)*

		( 	in=INC -> ^(POST_INC[$in] $postfixExpression)
	 	|	de=DEC -> ^(POST_DEC[$de] $postfixExpression)
		)?
 	;

e4xExpression
	:	STAR^
	|	e4xAttributeIdentifier
	|	e4xFilterPredicate
	;

e4xAttributeIdentifier
	:	E4X_ATTRI
		(	qualifiedIdent
		|	STAR
		|	LBRACK expression RBRACK
		)
	;

e4xFilterPredicate
	:	LPAREN!
		expression
		RPAREN!
	;

primaryExpression
	:	'undefined'
	|	constant
	|	arrayLiteral
	|	objectLiteral
	|	functionDefinition
	|	newExpression
	|	encapsulatedExpression
	|	e4xAttributeIdentifier
	|	qualifiedIdent
	;


//identPrimary
//	:	(qualifiedIdent -> qualifiedIdent)
//		(	options{greedy=true;}
//			/* yuk! tree building doesn't set the start/stop values
//			   we need without some hand-holding, */
//		:	(	poi=propOrIdent[root_0, retval.start] -> $poi
//			)
//		|	(	LBRACK expr=expression RBRACK
//				-> ^(ARRAY_ACC $identPrimary $expr)
//			)
//		)*
//		(	options {greedy=true;}
//		:	a=arguments
//			-> ^(METHOD_CALL $identPrimary $a)
//		)*
//    ;

propOrIdent[LinkedListTree identPrimary, Token startToken]
	:	
		{ retval.start = startToken; }
		DOT propId=qualifiedIdent
		/* without further semantic analysis, we can't
		   tell if a.b is an access of the property 'b'
		   from the var 'a' or a reference to the type
		   'b' in the package 'a'.  (This could be
		   resolved in an AST post-processing step) */
		-> ^(PROPERTY_OR_IDENTIFIER {$identPrimary} $propId)
	;

constant
	:	xmlLiteral
	|	regexpLiteral
	|	number
	|	STRING_LITERAL
	|	TRUE
	|	FALSE
	|	NULL
	;

number	:	HEX_LITERAL
	|	DECIMAL_LITERAL
	|	OCTAL_LITERAL
	|	FLOAT_LITERAL
	;

	
xmlLiteral
	@init {
		LinkedListTree xml = null;
	}
	:	s=LT { xml=parseXMLLiteral((LinkedListToken)$s); }
		-> ^({xml})
	;

regexpLiteral
	@init {
		LinkedListTree regexp = null;
	}
	:	s=DIV { regexp=parseRegexpLiteral((LinkedListToken)$s); }
		-> ^({regexp})
	;

newExpression
	:	NEW^ fullNewSubexpression arguments
	;

fullNewSubexpression
	:	(	primaryExpression -> primaryExpression
		)
		(	DOT qualifiedIdent -> ^(DOT $fullNewSubexpression qualifiedIdent)
		|	brackets -> ^(ARRAY_ACC $fullNewSubexpression brackets)
		)*
	;

propertyOperator
	:	DOT^ qualifiedIdent
	|	brackets
	;

brackets
@init {
	$InOperator::allowed = true;
}
	:	LBRACK expressionList RBRACK
	;

superExpression
	:	SUPER^ arguments?
	;

encapsulatedExpression
scope InOperator;
@init {
	$InOperator::allowed = true;
}
	:	LPAREN assignmentExpression RPAREN
		-> ^(ENCPS_EXPR assignmentExpression)
	;

// TODO: should anonymous and named functions have seperate definitions so that
// we can dissallow named functions in expressions?

functionDefinition
	:	FUNCTION parameterDeclarationList typeExpression? block
		-> ^(FUNC_DEF parameterDeclarationList typeExpression? block)
	;


ident
	:	IDENT
	|	i=USE -> IDENT[$i]
	|	i=XML -> IDENT[$i]
	|	i=DYNAMIC -> IDENT[$i]
	|	i=NAMESPACE -> IDENT[$i]
	|	i=IS -> IDENT[$i]
	|	i=AS -> IDENT[$i]
	|	i=GET -> IDENT[$i]
	|	i=SET -> IDENT[$i]
	;


PACKAGE		:	'package';
PUBLIC		:	'public';
PRIVATE		:	'private';
FUNCTION	:	'function';
EXTENDS		:	'extends';
IMPLEMENTS	:	'implements';
VAR		:	'var';
STATIC		:	'static';
IF		:	'if';
IMPORT		:	'import';
FOR		:	'for';
EACH		:	'each';
IN		:	'in';
WHILE		:	'while';
DO		:	'do';
SWITCH		:	'switch';
CASE		:	'case';
DEFAULT		:	'default';
ELSE		:	'else';
CONST		:	'const';
CLASS		:	'class';
INTERFACE	:	'interface';
TRUE		:	'true';
FALSE		:	'false';
DYNAMIC		:	'dynamic';
USE		:	'use';
XML		:	'xml';
NAMESPACE	:	'namespace';
IS		:	'is';
AS		:	'as';
GET		:	'get';
SET		:	'set';
WITH		:	'with';
RETURN		:	'return';
CONTINUE	:	'continue';
BREAK		:	'break';
NULL		:	'null';
NEW		:	'new';
SUPER		:	'super';

// OPERATORS
QUESTION		:	'?'	;
LPAREN			:	'('	;
RPAREN			:	')'	;
LBRACK			:	'['	;
RBRACK			:	']'	;
LCURLY			:	'{'	;
RCURLY			:	'}'	;
COLON			:	':'	;
DBL_COLON		:	'::'	;
COMMA			:	','	;
ASSIGN			:	'='	;
EQUAL			:	'=='	;
STRICT_EQUAL		:	'==='	;
LNOT			:	'!'	;
BNOT			:	'~'	;
NOT_EQUAL		:	'!='	;
STRICT_NOT_EQUAL	:	'!=='	;
DIV			:	'/'	;
DIV_ASSIGN		:	'/='	;
PLUS			:	'+'	;
PLUS_ASSIGN		:	'+='	;
INC			:	'++'	;
MINUS			:	'-'	;
MINUS_ASSIGN		:	'-='	;
DEC			:	'--'	;
STAR			:	'*'	;
STAR_ASSIGN		:	'*='	;
MOD			:	'%'	;
MOD_ASSIGN		:	'%='	;
SR			:	'>>'	;
SR_ASSIGN		:	'>>='	;
BSR			:	'>>>'	;
BSR_ASSIGN		:	'>>>='	;
GE			:	'>='	;
GT			:	'>'	;
SL			:	'<<'	;
SL_ASSIGN		:	'<<='	;
LE			:	'<='	;
LT			:	'<'	;
BXOR			:	'^'	;
BXOR_ASSIGN		:	'^='	;
BOR			:	'|'	;
BOR_ASSIGN		:	'|='	;
LOR			:	'||'	;
BAND			:	'&'	;
BAND_ASSIGN		:	'&='	;
LAND			:	'&&'	;
LAND_ASSIGN		:	'&&='	;
LOR_ASSIGN		:	'||='	;
E4X_ATTRI		:	'@'	; 
SEMI			:	';'	;


DOT		:	'.'	;
E4X_DESC	:	'..'	;
REST		:	'...'	;

IDENT
	:	UNICODE_IDENTIFIER_START
		UNICODE_IDENTIFIER_PART*
	;

// The UNICODE_IDENTIFIER_START and UNICODE_IDENTIFIER_PART rules where machine-
// generated by testing all characters from \0000 to \ffff using the methods
// of the UCharacter class from the ICU framework.

fragment UNICODE_IDENTIFIER_START
	:	'\u0041'..'\u005a' | '\u005f' | '\u0061'..'\u007a' |
		'\u00aa' | '\u00b5' | '\u00ba' | '\u00c0'..'\u00d6' |
		'\u00d8'..'\u00f6' | '\u00f8'..'\u02c1' | '\u02c6'..'\u02d1' |
		'\u02e0'..'\u02e4' | '\u02ee' | '\u037a'..'\u037d' | '\u0386' |
		'\u0388'..'\u038a' | '\u038c' | '\u038e'..'\u03a1' |
		'\u03a3'..'\u03ce' | '\u03d0'..'\u03f5' | '\u03f7'..'\u0481' |
		'\u048a'..'\u0513' | '\u0531'..'\u0556' | '\u0559' |
		'\u0561'..'\u0587' | '\u05d0'..'\u05ea' | '\u05f0'..'\u05f2' |
		'\u0621'..'\u063a' | '\u0640'..'\u064a' | '\u066e'..'\u066f' |
		'\u0671'..'\u06d3' | '\u06d5' | '\u06e5'..'\u06e6' |
		'\u06ee'..'\u06ef' | '\u06fa'..'\u06fc' | '\u06ff' | '\u0710' |
		'\u0712'..'\u072f' | '\u074d'..'\u076d' | '\u0780'..'\u07a5' |
		'\u07b1' | '\u07ca'..'\u07ea' | '\u07f4'..'\u07f5' | '\u07fa' |
		'\u0904'..'\u0939' | '\u093d' | '\u0950' | '\u0958'..'\u0961' |
		'\u097b'..'\u097f' | '\u0985'..'\u098c' | '\u098f'..'\u0990' |
		'\u0993'..'\u09a8' | '\u09aa'..'\u09b0' | '\u09b2' |
		'\u09b6'..'\u09b9' | '\u09bd' | '\u09ce' | '\u09dc'..'\u09dd' |
		'\u09df'..'\u09e1' | '\u09f0'..'\u09f1' | '\u0a05'..'\u0a0a' |
		'\u0a0f'..'\u0a10' | '\u0a13'..'\u0a28' | '\u0a2a'..'\u0a30' |
		'\u0a32'..'\u0a33' | '\u0a35'..'\u0a36' | '\u0a38'..'\u0a39' |
		'\u0a59'..'\u0a5c' | '\u0a5e' | '\u0a72'..'\u0a74' |
		'\u0a85'..'\u0a8d' | '\u0a8f'..'\u0a91' | '\u0a93'..'\u0aa8' |
		'\u0aaa'..'\u0ab0' | '\u0ab2'..'\u0ab3' | '\u0ab5'..'\u0ab9' |
		'\u0abd' | '\u0ad0' | '\u0ae0'..'\u0ae1' | '\u0b05'..'\u0b0c' |
		'\u0b0f'..'\u0b10' | '\u0b13'..'\u0b28' | '\u0b2a'..'\u0b30' |
		'\u0b32'..'\u0b33' | '\u0b35'..'\u0b39' | '\u0b3d' |
		'\u0b5c'..'\u0b5d' | '\u0b5f'..'\u0b61' | '\u0b71' | '\u0b83' |
		'\u0b85'..'\u0b8a' | '\u0b8e'..'\u0b90' | '\u0b92'..'\u0b95' |
		'\u0b99'..'\u0b9a' | '\u0b9c' | '\u0b9e'..'\u0b9f' |
		'\u0ba3'..'\u0ba4' | '\u0ba8'..'\u0baa' | '\u0bae'..'\u0bb9' |
		'\u0c05'..'\u0c0c' | '\u0c0e'..'\u0c10' | '\u0c12'..'\u0c28' |
		'\u0c2a'..'\u0c33' | '\u0c35'..'\u0c39' | '\u0c60'..'\u0c61' |
		'\u0c85'..'\u0c8c' | '\u0c8e'..'\u0c90' | '\u0c92'..'\u0ca8' |
		'\u0caa'..'\u0cb3' | '\u0cb5'..'\u0cb9' | '\u0cbd' | '\u0cde' |
		'\u0ce0'..'\u0ce1' | '\u0d05'..'\u0d0c' | '\u0d0e'..'\u0d10' |
		'\u0d12'..'\u0d28' | '\u0d2a'..'\u0d39' | '\u0d60'..'\u0d61' |
		'\u0d85'..'\u0d96' | '\u0d9a'..'\u0db1' | '\u0db3'..'\u0dbb' |
		'\u0dbd' | '\u0dc0'..'\u0dc6' | '\u0e01'..'\u0e30' |
		'\u0e32'..'\u0e33' | '\u0e40'..'\u0e46' | '\u0e81'..'\u0e82' |
		'\u0e84' | '\u0e87'..'\u0e88' | '\u0e8a' | '\u0e8d' |
		'\u0e94'..'\u0e97' | '\u0e99'..'\u0e9f' | '\u0ea1'..'\u0ea3' |
		'\u0ea5' | '\u0ea7' | '\u0eaa'..'\u0eab' | '\u0ead'..'\u0eb0' |
		'\u0eb2'..'\u0eb3' | '\u0ebd' | '\u0ec0'..'\u0ec4' | '\u0ec6' |
		'\u0edc'..'\u0edd' | '\u0f00' | '\u0f40'..'\u0f47' |
		'\u0f49'..'\u0f6a' | '\u0f88'..'\u0f8b' | '\u1000'..'\u1021' |
		'\u1023'..'\u1027' | '\u1029'..'\u102a' | '\u1050'..'\u1055' |
		'\u10a0'..'\u10c5' | '\u10d0'..'\u10fa' | '\u10fc' |
		'\u1100'..'\u1159' | '\u115f'..'\u11a2' | '\u11a8'..'\u11f9' |
		'\u1200'..'\u1248' | '\u124a'..'\u124d' | '\u1250'..'\u1256' |
		'\u1258' | '\u125a'..'\u125d' | '\u1260'..'\u1288' |
		'\u128a'..'\u128d' | '\u1290'..'\u12b0' | '\u12b2'..'\u12b5' |
		'\u12b8'..'\u12be' | '\u12c0' | '\u12c2'..'\u12c5' |
		'\u12c8'..'\u12d6' | '\u12d8'..'\u1310' | '\u1312'..'\u1315' |
		'\u1318'..'\u135a' | '\u1380'..'\u138f' | '\u13a0'..'\u13f4' |
		'\u1401'..'\u166c' | '\u166f'..'\u1676' | '\u1681'..'\u169a' |
		'\u16a0'..'\u16ea' | '\u16ee'..'\u16f0' | '\u1700'..'\u170c' |
		'\u170e'..'\u1711' | '\u1720'..'\u1731' | '\u1740'..'\u1751' |
		'\u1760'..'\u176c' | '\u176e'..'\u1770' | '\u1780'..'\u17b3' |
		'\u17d7' | '\u17dc' | '\u1820'..'\u1877' | '\u1880'..'\u18a8' |
		'\u1900'..'\u191c' | '\u1950'..'\u196d' | '\u1970'..'\u1974' |
		'\u1980'..'\u19a9' | '\u19c1'..'\u19c7' | '\u1a00'..'\u1a16' |
		'\u1b05'..'\u1b33' | '\u1b45'..'\u1b4b' | '\u1d00'..'\u1dbf' |
		'\u1e00'..'\u1e9b' | '\u1ea0'..'\u1ef9' | '\u1f00'..'\u1f15' |
		'\u1f18'..'\u1f1d' | '\u1f20'..'\u1f45' | '\u1f48'..'\u1f4d' |
		'\u1f50'..'\u1f57' | '\u1f59' | '\u1f5b' | '\u1f5d' |
		'\u1f5f'..'\u1f7d' | '\u1f80'..'\u1fb4' | '\u1fb6'..'\u1fbc' |
		'\u1fbe' | '\u1fc2'..'\u1fc4' | '\u1fc6'..'\u1fcc' |
		'\u1fd0'..'\u1fd3' | '\u1fd6'..'\u1fdb' | '\u1fe0'..'\u1fec' |
		'\u1ff2'..'\u1ff4' | '\u1ff6'..'\u1ffc' | '\u2071' | '\u207f' |
		'\u2090'..'\u2094' | '\u2102' | '\u2107' | '\u210a'..'\u2113' |
		'\u2115' | '\u2119'..'\u211d' | '\u2124' | '\u2126' | '\u2128'
		| '\u212a'..'\u212d' | '\u212f'..'\u2139' | '\u213c'..'\u213f'
		| '\u2145'..'\u2149' | '\u214e' | '\u2160'..'\u2184' |
		'\u2c00'..'\u2c2e' | '\u2c30'..'\u2c5e' | '\u2c60'..'\u2c6c' |
		'\u2c74'..'\u2c77' | '\u2c80'..'\u2ce4' | '\u2d00'..'\u2d25' |
		'\u2d30'..'\u2d65' | '\u2d6f' | '\u2d80'..'\u2d96' |
		'\u2da0'..'\u2da6' | '\u2da8'..'\u2dae' | '\u2db0'..'\u2db6' |
		'\u2db8'..'\u2dbe' | '\u2dc0'..'\u2dc6' | '\u2dc8'..'\u2dce' |
		'\u2dd0'..'\u2dd6' | '\u2dd8'..'\u2dde' | '\u3005'..'\u3007' |
		'\u3021'..'\u3029' | '\u3031'..'\u3035' | '\u3038'..'\u303c' |
		'\u3041'..'\u3096' | '\u309d'..'\u309f' | '\u30a1'..'\u30fa' |
		'\u30fc'..'\u30ff' | '\u3105'..'\u312c' | '\u3131'..'\u318e' |
		'\u31a0'..'\u31b7' | '\u31f0'..'\u31ff' | '\u3400'..'\u4db5' |
		'\u4e00'..'\u9fbb' | '\ua000'..'\ua48c' | '\ua717'..'\ua71a' |
		'\ua800'..'\ua801' | '\ua803'..'\ua805' | '\ua807'..'\ua80a' |
		'\ua80c'..'\ua822' | '\ua840'..'\ua873' | '\uac00'..'\ud7a3' |
		'\uf900'..'\ufa2d' | '\ufa30'..'\ufa6a' | '\ufa70'..'\ufad9' |
		'\ufb00'..'\ufb06' | '\ufb13'..'\ufb17' | '\ufb1d' |
		'\ufb1f'..'\ufb28' | '\ufb2a'..'\ufb36' | '\ufb38'..'\ufb3c' |
		'\ufb3e' | '\ufb40'..'\ufb41' | '\ufb43'..'\ufb44' |
		'\ufb46'..'\ufbb1' | '\ufbd3'..'\ufd3d' | '\ufd50'..'\ufd8f' |
		'\ufd92'..'\ufdc7' | '\ufdf0'..'\ufdfb' | '\ufe70'..'\ufe74' |
		'\ufe76'..'\ufefc' | '\uff21'..'\uff3a' | '\uff41'..'\uff5a' |
		'\uff66'..'\uffbe' | '\uffc2'..'\uffc7' | '\uffca'..'\uffcf' |
		'\uffd2'..'\uffd7' | '\uffda'..'\uffdc'
	;
fragment UNICODE_IDENTIFIER_PART
	:	'\u0000'..'\u0008' | '\u000e'..'\u001b' |
		'\u0030'..'\u0039' | '\u0041'..'\u005a' | '\u005f' |
		'\u0061'..'\u007a' | '\u007f'..'\u009f' | '\u00aa' | '\u00ad' |
		'\u00b5' | '\u00ba' | '\u00c0'..'\u00d6' | '\u00d8'..'\u00f6' |
		'\u00f8'..'\u02c1' | '\u02c6'..'\u02d1' | '\u02e0'..'\u02e4' |
		'\u02ee' | '\u0300'..'\u036f' | '\u037a'..'\u037d' | '\u0386' |
		'\u0388'..'\u038a' | '\u038c' | '\u038e'..'\u03a1' |
		'\u03a3'..'\u03ce' | '\u03d0'..'\u03f5' | '\u03f7'..'\u0481' |
		'\u0483'..'\u0486' | '\u048a'..'\u0513' | '\u0531'..'\u0556' |
		'\u0559' | '\u0561'..'\u0587' | '\u0591'..'\u05bd' | '\u05bf' |
		'\u05c1'..'\u05c2' | '\u05c4'..'\u05c5' | '\u05c7' |
		'\u05d0'..'\u05ea' | '\u05f0'..'\u05f2' | '\u0600'..'\u0603' |
		'\u0610'..'\u0615' | '\u0621'..'\u063a' | '\u0640'..'\u065e' |
		'\u0660'..'\u0669' | '\u066e'..'\u06d3' | '\u06d5'..'\u06dd' |
		'\u06df'..'\u06e8' | '\u06ea'..'\u06fc' | '\u06ff' |
		'\u070f'..'\u074a' | '\u074d'..'\u076d' | '\u0780'..'\u07b1' |
		'\u07c0'..'\u07f5' | '\u07fa' | '\u0901'..'\u0939' |
		'\u093c'..'\u094d' | '\u0950'..'\u0954' | '\u0958'..'\u0963' |
		'\u0966'..'\u096f' | '\u097b'..'\u097f' | '\u0981'..'\u0983' |
		'\u0985'..'\u098c' | '\u098f'..'\u0990' | '\u0993'..'\u09a8' |
		'\u09aa'..'\u09b0' | '\u09b2' | '\u09b6'..'\u09b9' |
		'\u09bc'..'\u09c4' | '\u09c7'..'\u09c8' | '\u09cb'..'\u09ce' |
		'\u09d7' | '\u09dc'..'\u09dd' | '\u09df'..'\u09e3' |
		'\u09e6'..'\u09f1' | '\u0a01'..'\u0a03' | '\u0a05'..'\u0a0a' |
		'\u0a0f'..'\u0a10' | '\u0a13'..'\u0a28' | '\u0a2a'..'\u0a30' |
		'\u0a32'..'\u0a33' | '\u0a35'..'\u0a36' | '\u0a38'..'\u0a39' |
		'\u0a3c' | '\u0a3e'..'\u0a42' | '\u0a47'..'\u0a48' |
		'\u0a4b'..'\u0a4d' | '\u0a59'..'\u0a5c' | '\u0a5e' |
		'\u0a66'..'\u0a74' | '\u0a81'..'\u0a83' | '\u0a85'..'\u0a8d' |
		'\u0a8f'..'\u0a91' | '\u0a93'..'\u0aa8' | '\u0aaa'..'\u0ab0' |
		'\u0ab2'..'\u0ab3' | '\u0ab5'..'\u0ab9' | '\u0abc'..'\u0ac5' |
		'\u0ac7'..'\u0ac9' | '\u0acb'..'\u0acd' | '\u0ad0' |
		'\u0ae0'..'\u0ae3' | '\u0ae6'..'\u0aef' | '\u0b01'..'\u0b03' |
		'\u0b05'..'\u0b0c' | '\u0b0f'..'\u0b10' | '\u0b13'..'\u0b28' |
		'\u0b2a'..'\u0b30' | '\u0b32'..'\u0b33' | '\u0b35'..'\u0b39' |
		'\u0b3c'..'\u0b43' | '\u0b47'..'\u0b48' | '\u0b4b'..'\u0b4d' |
		'\u0b56'..'\u0b57' | '\u0b5c'..'\u0b5d' | '\u0b5f'..'\u0b61' |
		'\u0b66'..'\u0b6f' | '\u0b71' | '\u0b82'..'\u0b83' |
		'\u0b85'..'\u0b8a' | '\u0b8e'..'\u0b90' | '\u0b92'..'\u0b95' |
		'\u0b99'..'\u0b9a' | '\u0b9c' | '\u0b9e'..'\u0b9f' |
		'\u0ba3'..'\u0ba4' | '\u0ba8'..'\u0baa' | '\u0bae'..'\u0bb9' |
		'\u0bbe'..'\u0bc2' | '\u0bc6'..'\u0bc8' | '\u0bca'..'\u0bcd' |
		'\u0bd7' | '\u0be6'..'\u0bef' | '\u0c01'..'\u0c03' |
		'\u0c05'..'\u0c0c' | '\u0c0e'..'\u0c10' | '\u0c12'..'\u0c28' |
		'\u0c2a'..'\u0c33' | '\u0c35'..'\u0c39' | '\u0c3e'..'\u0c44' |
		'\u0c46'..'\u0c48' | '\u0c4a'..'\u0c4d' | '\u0c55'..'\u0c56' |
		'\u0c60'..'\u0c61' | '\u0c66'..'\u0c6f' | '\u0c82'..'\u0c83' |
		'\u0c85'..'\u0c8c' | '\u0c8e'..'\u0c90' | '\u0c92'..'\u0ca8' |
		'\u0caa'..'\u0cb3' | '\u0cb5'..'\u0cb9' | '\u0cbc'..'\u0cc4' |
		'\u0cc6'..'\u0cc8' | '\u0cca'..'\u0ccd' | '\u0cd5'..'\u0cd6' |
		'\u0cde' | '\u0ce0'..'\u0ce3' | '\u0ce6'..'\u0cef' |
		'\u0d02'..'\u0d03' | '\u0d05'..'\u0d0c' | '\u0d0e'..'\u0d10' |
		'\u0d12'..'\u0d28' | '\u0d2a'..'\u0d39' | '\u0d3e'..'\u0d43' |
		'\u0d46'..'\u0d48' | '\u0d4a'..'\u0d4d' | '\u0d57' |
		'\u0d60'..'\u0d61' | '\u0d66'..'\u0d6f' | '\u0d82'..'\u0d83' |
		'\u0d85'..'\u0d96' | '\u0d9a'..'\u0db1' | '\u0db3'..'\u0dbb' |
		'\u0dbd' | '\u0dc0'..'\u0dc6' | '\u0dca' | '\u0dcf'..'\u0dd4' |
		'\u0dd6' | '\u0dd8'..'\u0ddf' | '\u0df2'..'\u0df3' |
		'\u0e01'..'\u0e3a' | '\u0e40'..'\u0e4e' | '\u0e50'..'\u0e59' |
		'\u0e81'..'\u0e82' | '\u0e84' | '\u0e87'..'\u0e88' | '\u0e8a' |
		'\u0e8d' | '\u0e94'..'\u0e97' | '\u0e99'..'\u0e9f' |
		'\u0ea1'..'\u0ea3' | '\u0ea5' | '\u0ea7' | '\u0eaa'..'\u0eab' |
		'\u0ead'..'\u0eb9' | '\u0ebb'..'\u0ebd' | '\u0ec0'..'\u0ec4' |
		'\u0ec6' | '\u0ec8'..'\u0ecd' | '\u0ed0'..'\u0ed9' |
		'\u0edc'..'\u0edd' | '\u0f00' | '\u0f18'..'\u0f19' |
		'\u0f20'..'\u0f29' | '\u0f35' | '\u0f37' | '\u0f39' |
		'\u0f3e'..'\u0f47' | '\u0f49'..'\u0f6a' | '\u0f71'..'\u0f84' |
		'\u0f86'..'\u0f8b' | '\u0f90'..'\u0f97' | '\u0f99'..'\u0fbc' |
		'\u0fc6' | '\u1000'..'\u1021' | '\u1023'..'\u1027' |
		'\u1029'..'\u102a' | '\u102c'..'\u1032' | '\u1036'..'\u1039' |
		'\u1040'..'\u1049' | '\u1050'..'\u1059' | '\u10a0'..'\u10c5' |
		'\u10d0'..'\u10fa' | '\u10fc' | '\u1100'..'\u1159' |
		'\u115f'..'\u11a2' | '\u11a8'..'\u11f9' | '\u1200'..'\u1248' |
		'\u124a'..'\u124d' | '\u1250'..'\u1256' | '\u1258' |
		'\u125a'..'\u125d' | '\u1260'..'\u1288' | '\u128a'..'\u128d' |
		'\u1290'..'\u12b0' | '\u12b2'..'\u12b5' | '\u12b8'..'\u12be' |
		'\u12c0' | '\u12c2'..'\u12c5' | '\u12c8'..'\u12d6' |
		'\u12d8'..'\u1310' | '\u1312'..'\u1315' | '\u1318'..'\u135a' |
		'\u135f' | '\u1380'..'\u138f' | '\u13a0'..'\u13f4' |
		'\u1401'..'\u166c' | '\u166f'..'\u1676' | '\u1681'..'\u169a' |
		'\u16a0'..'\u16ea' | '\u16ee'..'\u16f0' | '\u1700'..'\u170c' |
		'\u170e'..'\u1714' | '\u1720'..'\u1734' | '\u1740'..'\u1753' |
		'\u1760'..'\u176c' | '\u176e'..'\u1770' | '\u1772'..'\u1773' |
		'\u1780'..'\u17d3' | '\u17d7' | '\u17dc'..'\u17dd' |
		'\u17e0'..'\u17e9' | '\u180b'..'\u180d' | '\u1810'..'\u1819' |
		'\u1820'..'\u1877' | '\u1880'..'\u18a9' | '\u1900'..'\u191c' |
		'\u1920'..'\u192b' | '\u1930'..'\u193b' | '\u1946'..'\u196d' |
		'\u1970'..'\u1974' | '\u1980'..'\u19a9' | '\u19b0'..'\u19c9' |
		'\u19d0'..'\u19d9' | '\u1a00'..'\u1a1b' | '\u1b00'..'\u1b4b' |
		'\u1b50'..'\u1b59' | '\u1b6b'..'\u1b73' | '\u1d00'..'\u1dca' |
		'\u1dfe'..'\u1e9b' | '\u1ea0'..'\u1ef9' | '\u1f00'..'\u1f15' |
		'\u1f18'..'\u1f1d' | '\u1f20'..'\u1f45' | '\u1f48'..'\u1f4d' |
		'\u1f50'..'\u1f57' | '\u1f59' | '\u1f5b' | '\u1f5d' |
		'\u1f5f'..'\u1f7d' | '\u1f80'..'\u1fb4' | '\u1fb6'..'\u1fbc' |
		'\u1fbe' | '\u1fc2'..'\u1fc4' | '\u1fc6'..'\u1fcc' |
		'\u1fd0'..'\u1fd3' | '\u1fd6'..'\u1fdb' | '\u1fe0'..'\u1fec' |
		'\u1ff2'..'\u1ff4' | '\u1ff6'..'\u1ffc' | '\u200b'..'\u200f' |
		'\u202a'..'\u202e' | '\u203f'..'\u2040' | '\u2054' |
		'\u2060'..'\u2063' | '\u206a'..'\u206f' | '\u2071' | '\u207f' |
		'\u2090'..'\u2094' | '\u20d0'..'\u20dc' | '\u20e1' |
		'\u20e5'..'\u20ef' | '\u2102' | '\u2107' | '\u210a'..'\u2113' |
		'\u2115' | '\u2119'..'\u211d' | '\u2124' | '\u2126' | '\u2128'
		| '\u212a'..'\u212d' | '\u212f'..'\u2139' | '\u213c'..'\u213f'
		| '\u2145'..'\u2149' | '\u214e' | '\u2160'..'\u2184' |
		'\u2c00'..'\u2c2e' | '\u2c30'..'\u2c5e' | '\u2c60'..'\u2c6c' |
		'\u2c74'..'\u2c77' | '\u2c80'..'\u2ce4' | '\u2d00'..'\u2d25' |
		'\u2d30'..'\u2d65' | '\u2d6f' | '\u2d80'..'\u2d96' |
		'\u2da0'..'\u2da6' | '\u2da8'..'\u2dae' | '\u2db0'..'\u2db6' |
		'\u2db8'..'\u2dbe' | '\u2dc0'..'\u2dc6' | '\u2dc8'..'\u2dce' |
		'\u2dd0'..'\u2dd6' | '\u2dd8'..'\u2dde' | '\u3005'..'\u3007' |
		'\u3021'..'\u302f' | '\u3031'..'\u3035' | '\u3038'..'\u303c' |
		'\u3041'..'\u3096' | '\u3099'..'\u309a' | '\u309d'..'\u309f' |
		'\u30a1'..'\u30fa' | '\u30fc'..'\u30ff' | '\u3105'..'\u312c' |
		'\u3131'..'\u318e' | '\u31a0'..'\u31b7' | '\u31f0'..'\u31ff' |
		'\u3400'..'\u4db5' | '\u4e00'..'\u9fbb' | '\ua000'..'\ua48c' |
		'\ua717'..'\ua71a' | '\ua800'..'\ua827' | '\ua840'..'\ua873' |
		'\uac00'..'\ud7a3' | '\uf900'..'\ufa2d' | '\ufa30'..'\ufa6a' |
		'\ufa70'..'\ufad9' | '\ufb00'..'\ufb06' | '\ufb13'..'\ufb17' |
		'\ufb1d'..'\ufb28' | '\ufb2a'..'\ufb36' | '\ufb38'..'\ufb3c' |
		'\ufb3e' | '\ufb40'..'\ufb41' | '\ufb43'..'\ufb44' |
		'\ufb46'..'\ufbb1' | '\ufbd3'..'\ufd3d' | '\ufd50'..'\ufd8f' |
		'\ufd92'..'\ufdc7' | '\ufdf0'..'\ufdfb' | '\ufe00'..'\ufe0f' |
		'\ufe20'..'\ufe23' | '\ufe33'..'\ufe34' | '\ufe4d'..'\ufe4f' |
		'\ufe70'..'\ufe74' | '\ufe76'..'\ufefc' | '\ufeff' |
		'\uff10'..'\uff19' | '\uff21'..'\uff3a' | '\uff3f' |
		'\uff41'..'\uff5a' | '\uff66'..'\uffbe' | '\uffc2'..'\uffc7' |
		'\uffca'..'\uffcf' | '\uffd2'..'\uffd7' | '\uffda'..'\uffdc' |
		'\ufff9'..'\ufffb'
	;

STRING_LITERAL
	:	'"' (ESC|~('"'|'\\'|'\n'|'\r'))* '"'
	|	'\'' (ESC|~('\''|'\\'|'\n'|'\r'))* '\''
	;

HEX_LITERAL	:	'0' ('x'|'X') HEX_DIGIT+ ;

DECIMAL_LITERAL	:	('0' | '1'..'9' '0'..'9'*) ;

OCTAL_LITERAL	:	'0' ('0'..'7')+ ;

FLOAT_LITERAL
    :   ('0'..'9')+ '.' ('0'..'9')* EXPONENT?
    |   '.' ('0'..'9')+ EXPONENT?
	;


// whitespace -- ignored
WS	:	(
			' '
		|	'\t'
		|	'\f'
		)+
		{$channel=HIDDEN;}
	;
NL	
	:	(
			'\r' '\n'  	// DOS
		|	'\r'    	// Mac
		|	'\n'    	// Unix
		)
		{$channel=HIDDEN;}
	;
	
// skip BOM bytes
BOM	:	(	'\u00EF'  '\u00BB' '\u00BF'
		|	'\uFEFF'
		)
		{ $channel=HIDDEN; };

// might be better to filter this out as a preprocessing step
INCLUDE_DIRECTIVE
	:	'#include'
	;

// single-line comments
SL_COMMENT
	:	'//' (~('\n'|'\r'))* ('\n'|'\r'('\n')?)?
		{$channel=HIDDEN;}
	;
// multiple-line comments
ML_COMMENT
	:	'/*' ( options {greedy=false;} : . )* '*/'
		{$channel=HIDDEN;}
	;

fragment EXPONENT
	:	('e'|'E') ('+'|'-')? ('0'..'9')+
	;
fragment HEX_DIGIT
	:	('0'..'9'|'A'..'F'|'a'..'f')
	;

fragment OCT_DIGIT
	:	'0'..'7'
	;
	
fragment ESC
	:   CTRLCHAR_ESC
	|   UNICODE_ESC
	|   OCTAL_ESC
	;

fragment CTRLCHAR_ESC
	:	'\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
	;

fragment OCTAL_ESC
	:   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
	|   '\\' ('0'..'7') ('0'..'7')
	|   '\\' ('0'..'7')
	;

fragment UNICODE_ESC
	:   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	;

From parrt at cs.usfca.edu  Tue Apr 17 15:25:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 15:25:50 -0700
Subject: [antlr-interest] Regression? antlr-03-30-2007.14 ->
	antlr-04-10-2007.18
In-Reply-To: <20070417215034.GA21859@badgers-in-foil.co.uk>
References: <20070417215034.GA21859@badgers-in-foil.co.uk>
Message-ID: <E0209F8A-7F60-4090-9B38-08061D685F95@cs.usfca.edu>

On Apr 17, 2007, at 2:50 PM, David Holroyd wrote:
> With the 03-30-2007.14 build, my for-loops worked and the following
> syntax was accepted:
>
>   for (var b=1;b<=10;b++) { bar(); }
>
> with 04-10-2007.18, they don't parse any more, with  
> NoViableAltException
> reported at the 'var'.
>
> Here is the slightly simplified rule:
>
> forStatement
>     :   f=FOR
>         LPAREN
>         (    (forInClauseDecl IN)=>forInClause -> ^(FOR_IN[$f]  
> forInClause)
>         |    traditionalForClause -> ^($f traditionalForClause)
>         )
>         RPAREN
>         statement -> $forStatement statement
>     ;
>

> A difference I notice in the generated code is that the top level
> alternative logic used to simply test LA(1) for the alternatives
> following LPAREN, whereas the newer code does an equivalent test &&
> synpred3() in all cases.  [synpred3() is the '(forInClauseDecl IN)=>']

Yeah, i had to make synpreds always evaluate but they do so now on  
every DFA transition...

Ok, DFA looks correct but the synpred mechanism might not be working  
properly...I'll try to make some more examples.

Ter

From parrt at cs.usfca.edu  Tue Apr 17 15:36:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 15:36:16 -0700
Subject: [antlr-interest] Regression? antlr-03-30-2007.14 ->
	antlr-04-10-2007.18
In-Reply-To: <E0209F8A-7F60-4090-9B38-08061D685F95@cs.usfca.edu>
References: <20070417215034.GA21859@badgers-in-foil.co.uk>
	<E0209F8A-7F60-4090-9B38-08061D685F95@cs.usfca.edu>
Message-ID: <0D712DE2-FCF5-46B4-A6C9-898B65C837C0@cs.usfca.edu>


On Apr 17, 2007, at 3:25 PM, Terence Parr wrote:
> Yeah, i had to make synpreds always evaluate but they do so now on  
> every DFA transition...
>
> Ok, DFA looks correct but the synpred mechanism might not be  
> working properly...I'll try to make some more examples.

Crap.  synpreds with k>1 don't work.  synpreds need to eval from  
start of decision not current point.  First one starts at position 0  
but next evaluation starts at position 1 (wrong).  Both must start at 0.

I'm on it.

Ter

From parrt at cs.usfca.edu  Tue Apr 17 17:06:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 17 Apr 2007 17:06:06 -0700
Subject: [antlr-interest] Regression? antlr-03-30-2007.14 ->
	antlr-04-10-2007.18
In-Reply-To: <0D712DE2-FCF5-46B4-A6C9-898B65C837C0@cs.usfca.edu>
References: <20070417215034.GA21859@badgers-in-foil.co.uk>
	<E0209F8A-7F60-4090-9B38-08061D685F95@cs.usfca.edu>
	<0D712DE2-FCF5-46B4-A6C9-898B65C837C0@cs.usfca.edu>
Message-ID: <2394E584-22DC-436F-AC21-C7091255A4D7@cs.usfca.edu>

Ok, i changed my mind.  works for acyclic DFA lookahead:

             if ( ((LA41_0>=VAR && LA41_0<=CONST)) && (synpred3())) {
                 switch ( input.LA(2) ) {
                 case IDENT:
                     int LA41_36 = input.LA(3);

                     if ( (synpred3()) ) {
                         alt41=1;
                     }
                     else if ( (true) ) {
                         alt41=2;
                     }
                     else error;
                     break;
			...

The code does not advance the lookahead through the DFA simulation.   
Cyclic DFA will.  Checking now...

ok, can't push a build as I'm not done with AST rewrite stuff; almost  
sent you the patch, but it got complicated.  ALmost ready for a new  
build.  Probably thursday

Ter

On Apr 17, 2007, at 3:36 PM, Terence Parr wrote:

>
> On Apr 17, 2007, at 3:25 PM, Terence Parr wrote:
>> Yeah, i had to make synpreds always evaluate but they do so now on  
>> every DFA transition...
>>
>> Ok, DFA looks correct but the synpred mechanism might not be  
>> working properly...I'll try to make some more examples.
>
> Crap.  synpreds with k>1 don't work.  synpreds need to eval from  
> start of decision not current point.  First one starts at position  
> 0 but next evaluation starts at position 1 (wrong).  Both must  
> start at 0.
>
> I'm on it.
>
> Ter


From jimi at temporal-wave.com  Tue Apr 17 23:23:23 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Apr 2007 23:23:23 -0700
Subject: [antlr-interest] Example projects for C output
Message-ID: <B36CCC332A32904F8FA3DE134A235336252379@wavemachine.temporal-wave.com>

I have added a VS2005 .sln to the examples folder in the ANTLR source
tree. This currently includes:

 

C parser example, with examples of using global dynamic scopes and ANTLR
runtime supplied hash tables for symbol tracking (now finally fixed for
those who were waiting for this - sorry for delay, but alimony to pay J)

Dynamic scope example - small example of using a rule scope for tracking
embedded methods;

 

In progress, may be done by the time you read this:

 

Fuzzy java grammar.

 

To follow:

 

All the rest of the examples that do not use java based string templates
(needs some thought on that I think - I might use JNI or something to
make it work, though it would be dependant on Java).

 

 

To use the examples, you must first build or install the ANTLR3 C
runtime - the .sln and projects assume that they are built relative to
the ANTLR tree, but you will be able to work out how to change the
project configurations easily enough - at runtime, the .dlls must be in
your PATH somewhere.

 

Although the examples are configured using Visual Studio 2005, there is
no reliance on Windows for the actual examples. In *NIX  then all you
need do is run the ANTLR tool on the .g3pl files (suffix is optional but
makes visual studio custom rules files (see .rules file in source tree
under lib/C/vs2005/rulefiles) easier to manage with those suffixes,
though I may change these to be nearer the more usually accepted
suffices for grammar files. The output will be 4 (usually) files, being
2 .c files and 2 .h files. Tree examples will produce slightly different
files. Then, gcc (or your compiler) the .c files, with -I. and -I
path/to/antlr/includes and -L path/to/antlr/libs -lantlr3c{d}. You will
need to set LIBPATH/LD_LIBRARY_PATH/SHLIB_PATH according to the whims of
your system.

 

Each examples comes with a main.c that shows you how to construct the
input streams and so on, then call the parsers.

 

Tarball should update in FishEye (see ANTLR3 home page) shortly.

 

I think that for the C target there is only the following outstanding:

 

1)      Make memorization work - not a big job, I just forgot to do it;

2)      Simplify provision of hints for small, medium, large, huge input
files (saves on memory if you need to do that);

3)      Re-profile and memory check with Devpartner Studio (I wish
Compuware would let me have the Windows Vista beta so I don't have to
configure a Virtual machine!!!)

4)      Review all bug fixes by Ter to make sure they made it to C
target;

5)      Incorporate template changes to move lexer rule code from
generated code into the token stream 'class' and therefore reduce size
of generated code;

6)      Fix outstanding C target bugs (only a few);

 

So, this should be ready for release by the end of this month, along
with the Java target, ANTLR3 1.0 (or whatever Ter calls it) and Peter
Jones as The Book;

 

Don't Panic,

 

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070417/e84543ba/attachment.html 

From a.shneyderman at gmail.com  Wed Apr 18 03:03:53 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 18 Apr 2007 12:03:53 +0200
Subject: [antlr-interest] how to do exceptions quickly
In-Reply-To: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
Message-ID: <693a69ba0704180303k5d63f840v78437699e5500302@mail.gmail.com>

Just tom make sure I understand you. Is this what you mean?

public class TestExceptions {
	
	public static void main(String[] args) {
		long start, end;
		start = System.currentTimeMillis();
		for (int i = 1; i <= TOTAL_ITERATIONS; i++) {
			try {
				throw new Exception ("");
			} catch (Exception e) {
			}
		}
		end = System.currentTimeMillis();
		System.out.println("[" + TOTAL_ITERATIONS + "] Total time with
non-static exceptions: " + (end - start));
		
		start = System.currentTimeMillis();
		for (int i = 1; i <= TOTAL_ITERATIONS; i++) {
			try {
				throw staticException;
			} catch (Exception e) {
			}
		}
		end = System.currentTimeMillis();
		System.out.println("[" + TOTAL_ITERATIONS + "] Total time with
static exceptions: " + (end - start));
	}
	
	private static int TOTAL_ITERATIONS = 1000000;
	private static Exception staticException = new Exception ();

}

the output
[1000000] Total time with non-static exceptions: 2662
[1000000] Total time with static exceptions: 155

If not could you elaborate on this a bit?

On 4/17/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi,
>
> I had a long conversation at Google last night with Neal Gafter, the
> guy who built the javac compiler when he was at Sun. He told me that
> exceptions can be made to execute very quickly.  The only thing you
> have to avoid is the actual exception object creation which has to do
> all of the expensive stack trace creation and so on.  He says that
> the actual throwing of the exception itself is not a problem.  This
> might be something to look at later to see if it goes quickly,
> because it results in cleaner backtracking code.  Anyway, we can
> create some singleton objects, which will solve the problem.  Hooray!
>
> Anyway, this might be useful to people in general.  I thought was
> pass along this interesting trick.
>
> He confirmed that -target jsr14 should be okay for us to use generics
> in the antler tool and generate 1.4 compatible.class files.  He is
> the author of all that, so I believe. ;)
>
> Ter

From ric.klaren at gmail.com  Wed Apr 18 03:59:25 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Wed, 18 Apr 2007 12:59:25 +0200
Subject: [antlr-interest] ANTLR 2.7.7 TreeParser transformation question
In-Reply-To: <46202F54.4020607@kjchome.homeip.net>
References: <46202F54.4020607@kjchome.homeip.net>
Message-ID: <bc607a4e0704180359xaf0840aq3a2aab2b69f9f91b@mail.gmail.com>

Hi,

On 4/14/07, Kevin J. Cummings <cummings at kjchome.homeip.net> wrote:
> > aexpr :! #( PLUS  p1:aexpr p2:aexpr )
> >          {
> >          // Anything plus 0 is Anything
> >            if (isZero(p1))
> >               {
> >                 #aexpr = #p2;
> >               }
> >            else if (isZero(p2))
> >               {
> >                 #aexpr = #p1;
> >               }
> >            else
> >               {
> >                 #aexpr = #(PLUS, p1, p2);
> >               }
> >          }
> >       |! ( #( MINUS aexpr aexpr ) )=> #( minus:MINUS m1:aexpr m2:aexpr )
> >       |! #( mult:MULT mu1:aexpr mu2:aexpr )
> >       |! #( div:DIV d1:aexpr d2:aexpr )
> >       |! #( neg:MINUS n:aexpr )
> >       | NUM
> >       | STRING
> >       ;
>
> What I'm trying to do is transform the tree passed into aexpr in those
> cases when I can remove complexity.  My isZero() method is correctly
> recognizing those NUM trees which contain the number "0".
> If I examine #aexpr before leaving this rule, I can see that:
>         (PLUS 2 0)
> is correctly reduced to just
>          2
>
> My problem is that the assignment to #aexpr appears in the .cpp code as
> a reference to:   aexpr_AST_in, but it is never used again after it gets
> assigned!
>
> The end of the case continues with assigning _retTree = _t and not my
> new tree.  The result of this is that when I examine my aexpr subtree in
> the bexpr rule, it is the original (PLUS 2 0) tree!  Not the transformed
> one!

Try using ## in stead of #aexpr. Does removing the ! from the first
alternative work as well?

Cheers,

Ric

From service at sharpplus.com  Wed Apr 18 07:34:26 2007
From: service at sharpplus.com (=?iso-8859-1?Q?service?=)
Date: Wed, 18 Apr 2007 14:34:26 +0000
Subject: [antlr-interest] whether antlr supports the yyfallback function to
	reuse the keyword as identifier
Message-ID: <20070418143426.20656.qmail@server314.com>

Dear friends

         I am a newbaby of antlr, now I want to know whether antlr supports the yyfallback function to reuse the keyword as identifier, like the following sqlite parser:

/* The next table maps tokens into fallback tokens.  If a construct
** like the following:
** 
**      %fallback ID X Y Z.
**
** appears in the grammer, then ID becomes a fallback token for X, Y,
** and Z.  Whenever one of the tokens X, Y, or Z is input to the parser
** but it does not parse, the type of the token is changed to ID and
** the parse is retried before an error is thrown.
*/
#ifdef YYFALLBACK
static const YYCODETYPE yyFallback[] = {
    0,  /*          $ => nothing */
    0,  /*       SEMI => nothing */
   23,  /*    EXPLAIN => ID */
   23,  /*      QUERY => ID */
   23,  /*       PLAN => ID */
....
}

static int yy_find_shift_action(
  yyParser *pParser,        /* The parser */
  YYCODETYPE iLookAhead     /* The look-ahead token */
){
  int i;
  int stateno = pParser->yystack[pParser->yyidx].stateno;
 
  if( stateno>YY_SHIFT_MAX || (i = yy_shift_ofst[stateno])==YY_SHIFT_USE_DFLT ){
    return yy_default[stateno];
  }
  if( iLookAhead==YYNOCODE ){
    return YY_NO_ACTION;
  }
  i += iLookAhead;
  if( i<0 || i>=YY_SZ_ACTTAB || yy_lookahead[i]!=iLookAhead ){
    if( iLookAhead>0 ){
#ifdef YYFALLBACK
      int iFallback;            /* Fallback token */
      if( iLookAhead<sizeof(yyFallback)/sizeof(yyFallback[0])
             && (iFallback = yyFallback[iLookAhead])!=0 ){
#ifndef NDEBUG
        if( yyTraceFILE ){
          fprintf(yyTraceFILE, "%sFALLBACK %s => %s\n",
             yyTracePrompt, yyTokenName[iLookAhead], yyTokenName[iFallback]);
        }
#endif
        return yy_find_shift_action(pParser, iFallback);
      }
#endif
#ifdef YYWILDCARD
      {
        int j = i - iLookAhead + YYWILDCARD;
        if( j>=0 && j<YY_SZ_ACTTAB && yy_lookahead[j]==YYWILDCARD ){
#ifndef NDEBUG
          if( yyTraceFILE ){
            fprintf(yyTraceFILE, "%sWILDCARD %s => %s\n",
               yyTracePrompt, yyTokenName[iLookAhead], yyTokenName[YYWILDCARD]);
          }
#endif /* NDEBUG */
          return yy_action[j];
        }
      }
#endif /* YYWILDCARD */
    }
    return yy_default[stateno];
  }else{
    return yy_action[i];
  }
}

Thanks in advance

From rschulz at sonic.net  Wed Apr 18 07:36:19 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 18 Apr 2007 07:36:19 -0700
Subject: [antlr-interest] how to do exceptions quickly
In-Reply-To: <693a69ba0704180303k5d63f840v78437699e5500302@mail.gmail.com>
References: <EB805B4B-7864-476D-B2DF-4D1526DAD501@cs.usfca.edu>
	<693a69ba0704180303k5d63f840v78437699e5500302@mail.gmail.com>
Message-ID: <200704180736.19311.rschulz@sonic.net>

On Wednesday 18 April 2007 03:03, Alex Shneyderman wrote:
> ...
>
> the output
> [1000000] Total time with non-static exceptions: 2662
> [1000000] Total time with static exceptions: 155

You will probably find a some dependency of the cost of constructing a 
Throwable (which includes calling Throwable.fillInStackTrace()) on the 
depth of the stack nesting at the point of construction. (Exception is 
a direct subclass of Throwable.)


Randall Schulz

From femtowin1 at gmail.com  Wed Apr 18 08:01:42 2007
From: femtowin1 at gmail.com (femtowin1)
Date: Wed, 18 Apr 2007 08:01:42 -0700 (PDT)
Subject: [antlr-interest] Change in output location with 3.0b7
Message-ID: <0215b3c92cd9428b9a7f3dd7602850f8@750e456af7af450eb2f233f6bf7c0599>

I haven't use this feature so doesn't know how much this inconvenience is.
  but my personal taste, or rather, unlike place of antlr is that:
it uses StringTemplate and StringTemplate's grammar is quite unintuive
. personally I would prefer something like velocity or freemarker,
because these template engine are all well accepted and the grammar for variable is ${var}, very much like many other template language.
(actually, most templete language use this syntax, and StringTemplate uses quite exotic grammar).
  
  XRuby http://xruby.com
  femto http://hi.baidu.com/femto
______________________________________
Sent from my www.pageflakes.com startpage

From zxrvillain at gmail.com  Wed Apr 18 08:44:10 2007
From: zxrvillain at gmail.com (Xiaorui Zhang)
Date: Wed, 18 Apr 2007 17:44:10 +0200
Subject: [antlr-interest] Do you know how to work it out?
Message-ID: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>

Hi, guys
A problem occured when I tried to use xtext of the
openarchitectureware in my project. There was an error message :"no such
locale file org/antlr/tool/templates/messages/languages/zh.stg retrying with
English
locale". For Antrl is the building dependency of openarchitectureware, I
turn to this maillist to ask if there is anyone who encountered the same
problem as me. And how to work it out?

According to the error message, I guess it related with the language
type,for I am using a Chinese windows XP. Plus, my Eclipse and all the
plug-ins are English version.

Looking forward to your help, thank you in advance.

Sincerely yours,
Zhang Xiaorui
Master student of ICT
Agder University College
mob: +47 9429 8603
mailTo: zxrvillain at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070418/c41d56b9/attachment.html 

From parrt at cs.usfca.edu  Wed Apr 18 11:46:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2007 11:46:13 -0700
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
References: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
Message-ID: <07B9BE54-D2C0-4830-82D0-9118B6D279F1@cs.usfca.edu>


On Apr 18, 2007, at 8:44 AM, Xiaorui Zhang wrote:

> Hi, guys
> A problem occured when I tried to use xtext of the  
> openarchitectureware in my project. There was an error message :"no  
> such locale file org/antlr/tool/templates/messages/languages/zh.stg  
> retrying with English locale". For Antrl is the building dependency  
> of openarchitectureware, I turn to this maillist to ask if there is  
> anyone who encountered the same problem as me. And how to work it out?

Hi. That should be just a warning and ANTLR will work no problem.
Terence
>
> According to the error message, I guess it related with the  
> language type,for I am using a Chinese windows XP. Plus, my Eclipse  
> and all the plug-ins are English version.
>
> Looking forward to your help, thank you in advance.
>
> Sincerely yours,
> Zhang Xiaorui
> Master student of ICT
> Agder University College
> mob: +47 9429 8603
> mailTo: zxrvillain at gmail.com
>
>
>
>


From parrt at cs.usfca.edu  Wed Apr 18 11:47:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2007 11:47:37 -0700
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <0215b3c92cd9428b9a7f3dd7602850f8@750e456af7af450eb2f233f6bf7c0599>
References: <0215b3c92cd9428b9a7f3dd7602850f8@750e456af7af450eb2f233f6bf7c0599>
Message-ID: <EBE16E30-780A-4F16-A76C-4CAC3B48BD41@cs.usfca.edu>


On Apr 18, 2007, at 8:01 AM, femtowin1 wrote:

> I haven't use this feature so doesn't know how much this  
> inconvenience is.
>   but my personal taste, or rather, unlike place of antlr is that:
> it uses StringTemplate and StringTemplate's grammar is quite unintuive
> . personally I would prefer something like velocity or freemarker,
> because these template engine are all well accepted and the grammar  
> for variable is ${var}, very much like many other template language.
> (actually, most templete language use this syntax, and  
> StringTemplate uses quite exotic grammar).

Yes, but they all violate model-view separation and therefore cannot  
guarantee retargetability like ST can.  You should read: "Enforcing  
Strict Model-View Separation in Template Engines":

http://www.cs.usfca.edu/~parrt/papers/mvc.templates.pdf

Ter

From parrt at cs.usfca.edu  Wed Apr 18 11:49:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2007 11:49:33 -0700
Subject: [antlr-interest] whether antlr supports the yyfallback function
	to reuse the keyword as identifier
In-Reply-To: <20070418143426.20656.qmail@server314.com>
References: <20070418143426.20656.qmail@server314.com>
Message-ID: <3E294F03-B50F-4918-A9D0-5DB044764C67@cs.usfca.edu>


On Apr 18, 2007, at 7:34 AM, service wrote:

> Dear friends
>
>          I am a newbaby of antlr, now I want to know whether antlr  
> supports the yyfallback function to reuse the keyword as  
> identifier, like the following sqlite parser:
>

Hi. that's "old school". ;)  Try:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741

Ter

From miguel.ping at gmail.com  Wed Apr 18 10:53:41 2007
From: miguel.ping at gmail.com (Miguel Ping)
Date: Wed, 18 Apr 2007 18:53:41 +0100
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
References: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
Message-ID: <ab0bf2c00704181053m60a929e0ra9829b56e2354a42@mail.gmail.com>

I guess antlr checks the locale on your computer and tries to find the
appropriate template, probably for some sort of localization (maybe to
show appropriate error messages or other stuff). I have the same
problem since my locale is pt-PT, but since it finds the english there
should be no problem in your build. I think it's only a warning.

I can't open any file now but I suppose it should only a matter of
translating the english .stg template and create your own zh.stg
template if you want to use localized messages and stuff.

Hope it helps,
Miguel Ping

On 4/18/07, Xiaorui Zhang <zxrvillain at gmail.com> wrote:
> Hi, guys
> A problem occured when I tried to use xtext of the
> openarchitectureware in my project. There was an error message :"no such
> locale file org/antlr/tool/templates/messages/languages/zh.stg retrying with
> English
> locale". For Antrl is the building dependency of openarchitectureware, I
> turn to this maillist to ask if there is anyone who encountered the same
> problem as me. And how to work it out?
>
> According to the error message, I guess it related with the language
> type,for I am using a Chinese windows XP. Plus, my Eclipse and all the
> plug-ins are English version.
>
> Looking forward to your help, thank you in advance.
>
> Sincerely yours,
> Zhang Xiaorui
> Master student of ICT
> Agder University College
> mob: +47 9429 8603
> mailTo: zxrvillain at gmail.com
>

From parrt at cs.usfca.edu  Wed Apr 18 11:56:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2007 11:56:26 -0700
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <ab0bf2c00704181053m60a929e0ra9829b56e2354a42@mail.gmail.com>
References: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
	<ab0bf2c00704181053m60a929e0ra9829b56e2354a42@mail.gmail.com>
Message-ID: <32DC07FC-C843-44B3-B8CB-066E1A72F28B@cs.usfca.edu>


On Apr 18, 2007, at 10:53 AM, Miguel Ping wrote:

> I guess antlr checks the locale on your computer and tries to find the
> appropriate template, probably for some sort of localization (maybe to
> show appropriate error messages or other stuff). I have the same
> problem since my locale is pt-PT, but since it finds the english there
> should be no problem in your build. I think it's only a warning.
>
> I can't open any file now but I suppose it should only a matter of
> translating the english .stg template and create your own zh.stg
> template if you want to use localized messages and stuff.

Hi. Miguel is correct.  If you folks do translations, please forward  
them to me and I'll add to build.  Please submit through:

http://www.antlr.org/misc/feedback

Ter

From jhvdven at xs4all.nl  Wed Apr 18 11:32:46 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Wed, 18 Apr 2007 20:32:46 +0200
Subject: [antlr-interest] Lack of understanding with importVocab
Message-ID: <4626644E.6010506@xs4all.nl>

Dear list,


I am still working with 2.7.6. And I am tweaking a known grammar 
(DmlSQL2 and SqlSQL2) to the needs of our eclipse pluging QuantumDB. I 
also use AntlrStudio and I have the book. I definitely invested in this 
technology ;-).

Mr Vnuk (the author of DmlSQL2/SqlSQL2) made the one grammar inherit 
from the other, but Prashant's AntlrStudio plugin does not support this 
(and from what I read Antlr 3 will also not support inheritance), so I 
am merging the two of them now. I started with Dml (data manipulation) 
because a select is what we use most. The Sql grammar deals with data 
definition and alter statements and so on. The latter has an import 
vocabulary that is larger than the import vocabulary of dml and as far 
as I can see the two do not conflict (==same value for different tokens).

However, when I change the original dml import vocabulary to the sql 
vocabulary, all my JUnit tests fail for data manipulation, and succeed 
for data definition. If I change it back, the situation is reversed. 
That, I think I understand: the tokens for data definition are not 
defined. But I really do not understand why adding more tokens to a 
lexer, would cause the parser to throw NoViableAltExceptions.

Can someone tell me what it is I am missing here?

Thanks in advance,


Jan


From aaron.feng at gmail.com  Wed Apr 18 12:09:08 2007
From: aaron.feng at gmail.com (Aaron Feng)
Date: Wed, 18 Apr 2007 15:09:08 -0400
Subject: [antlr-interest] PL/SQL create script via C# like language
In-Reply-To: <6222A01E-3D68-4747-A0B8-B5FB23C1B280@cs.usfca.edu>
References: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>
	<6222A01E-3D68-4747-A0B8-B5FB23C1B280@cs.usfca.edu>
Message-ID: <4e3934860704181209p63973aadl369218ed9959347e@mail.gmail.com>

The commenting was broken on my blog, it has been fixed.  I'm planning on
posting the second part of the tranlation in a couple of days that uses AST
instead of string template.

On 4/15/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Added to article list :)
> Thanks,
> Ter
> On Apr 14, 2007, at 7:38 PM, Aaron Feng wrote:
>
> > I did a simple translator that will read in C# like language and
> > output PL/SQL for creating tables.  Someone new to ANTLR might find it
> > interesting.  The example can be found
> > http://www.aaronfeng.com/articles/2007/04/14/csharp-to-pl-sql
> >
> > I'm fairly new to ANTLR, so all comments are welcome.
> >
> > Aaron
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070418/99ded980/attachment.html 

From lgcraymer at yahoo.com  Wed Apr 18 10:34:45 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 18 Apr 2007 10:34:45 -0700 (PDT)
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
Message-ID: <392435.8010.qm@web55905.mail.re3.yahoo.com>

You can ignore the error message; ANTLR error messages
are configurable, but only English is supported at the
moment.  Under org/antlr/tools/messages/languages you
will find en.stg.  In theory, you could create a
zh.stg with Chinese error messages and put it in this
directory.  In practice, that would not
work--StringTemplate would have to be modified to read
unicode input first.

--Loring

--- Xiaorui Zhang <zxrvillain at gmail.com> wrote:

> Hi, guys
> A problem occured when I tried to use xtext of the
> openarchitectureware in my project. There was an
> error message :"no such
> locale file
> org/antlr/tool/templates/messages/languages/zh.stg
> retrying with
> English
> locale". For Antrl is the building dependency of
> openarchitectureware, I
> turn to this maillist to ask if there is anyone who
> encountered the same
> problem as me. And how to work it out?
> 
> According to the error message, I guess it related
> with the language
> type,for I am using a Chinese windows XP. Plus, my
> Eclipse and all the
> plug-ins are English version.
> 
> Looking forward to your help, thank you in advance.
> 
> Sincerely yours,
> Zhang Xiaorui
> Master student of ICT
> Agder University College
> mob: +47 9429 8603
> mailTo: zxrvillain at gmail.com
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From parrt at cs.usfca.edu  Wed Apr 18 12:39:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Apr 2007 12:39:47 -0700
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <392435.8010.qm@web55905.mail.re3.yahoo.com>
References: <392435.8010.qm@web55905.mail.re3.yahoo.com>
Message-ID: <9F24E455-B9A2-40B3-9BD7-F438A0D8D780@cs.usfca.edu>


On Apr 18, 2007, at 10:34 AM, Loring Craymer wrote:

> You can ignore the error message; ANTLR error messages
> are configurable, but only English is supported at the
> moment.  Under org/antlr/tools/messages/languages you
> will find en.stg.  In theory, you could create a
> zh.stg with Chinese error messages and put it in this
> directory.  In practice, that would not
> work--StringTemplate would have to be modified to read
> unicode input first.

Really?  Works no problem.  Even have a unit test.  You can even  
specify the encoding. :)  The stuff outside of <...> and $...$  
expressions can be anything.  I ignore it.

Ter


From lgcraymer at yahoo.com  Wed Apr 18 12:55:40 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 18 Apr 2007 12:55:40 -0700 (PDT)
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <9F24E455-B9A2-40B3-9BD7-F438A0D8D780@cs.usfca.edu>
Message-ID: <257057.56253.qm@web55905.mail.re3.yahoo.com>

Ah--I stand corrected.  I hadn't checked the ST lexer
source.

--Loring

--- Terence Parr <parrt at cs.usfca.edu> wrote:

> 
> On Apr 18, 2007, at 10:34 AM, Loring Craymer wrote:
> 
> > You can ignore the error message; ANTLR error
> messages
> > are configurable, but only English is supported at
> the
> > moment.  Under org/antlr/tools/messages/languages
> you
> > will find en.stg.  In theory, you could create a
> > zh.stg with Chinese error messages and put it in
> this
> > directory.  In practice, that would not
> > work--StringTemplate would have to be modified to
> read
> > unicode input first.
> 
> Really?  Works no problem.  Even have a unit test. 
> You can even  
> specify the encoding. :)  The stuff outside of <...>
> and $...$  
> expressions can be anything.  I ignore it.
> 
> Ter
> 
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From jimi at temporal-wave.com  Wed Apr 18 14:13:48 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Apr 2007 14:13:48 -0700
Subject: [antlr-interest] Do you know how to work it out?
In-Reply-To: <07B9BE54-D2C0-4830-82D0-9118B6D279F1@cs.usfca.edu>
References: <7434acb00704180844o7ba64f27p400ea8cb8e081ec8@mail.gmail.com>
	<07B9BE54-D2C0-4830-82D0-9118B6D279F1@cs.usfca.edu>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252384@wavemachine.temporal-wave.com>

Xiaorui (err..., I think I will just call you X ;-),

It would be very cool if you could take the English en.stg and translate
it to zh.stg (Chinese error messages), same goes for those who are
French (I can make a Franglais one), German, Russian and so on, if
anybody would like to make a contribution? You can get the English file
from the FishEye site.

Many people might like to make the Chinese version the default error
message file, for all they can make sense out of the US English one ;-).
I have produced a UK English one, but that was easy as I just made all
the messages one of "Time for a spot of Tiffin?", "Beer on that?" or
"Vegetable rights and peace! I wish we all lived a pastoral existence;
carrots and beans don't deliberately cool you out and go 'failed
predicate at 45:6 {@9]' in your ear".

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Wednesday, April 18, 2007 11:46 AM
To: ANTLR Interest
Subject: Re: [antlr-interest] Do you know how to work it out?


On Apr 18, 2007, at 8:44 AM, Xiaorui Zhang wrote:

> Hi, guys
> A problem occured when I tried to use xtext of the  
> openarchitectureware in my project. There was an error message :"no  
> such locale file org/antlr/tool/templates/messages/languages/zh.stg  
> retrying with English locale". For Antrl is the building dependency  
> of openarchitectureware, I turn to this maillist to ask if there is  
> anyone who encountered the same problem as me. And how to work it out?

Hi. That should be just a warning and ANTLR will work no problem.
Terence
>
> According to the error message, I guess it related with the  
> language type,for I am using a Chinese windows XP. Plus, my Eclipse  
> and all the plug-ins are English version.
>
> Looking forward to your help, thank you in advance.
>
> Sincerely yours,
> Zhang Xiaorui
> Master student of ICT
> Agder University College
> mob: +47 9429 8603
> mailTo: zxrvillain at gmail.com
>
>
>
>


From cummings at kjchome.homeip.net  Wed Apr 18 19:52:56 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 18 Apr 2007 22:52:56 -0400
Subject: [antlr-interest] ANTLR 2.7.7 TreeParser transformation question
In-Reply-To: <bc607a4e0704180359xaf0840aq3a2aab2b69f9f91b@mail.gmail.com>
References: <46202F54.4020607@kjchome.homeip.net>
	<bc607a4e0704180359xaf0840aq3a2aab2b69f9f91b@mail.gmail.com>
Message-ID: <4626D988.2000802@kjchome.homeip.net>

Ric Klaren wrote:
> Hi,
> 
> On 4/14/07, Kevin J. Cummings <cummings at kjchome.homeip.net> wrote:
>> > aexpr :! #( PLUS  p1:aexpr p2:aexpr )
>> >          {
>> >          // Anything plus 0 is Anything
>> >            if (isZero(p1))
>> >               {
>> >                 #aexpr = #p2;
>> >               }
>> >            else if (isZero(p2))
>> >               {
>> >                 #aexpr = #p1;
>> >               }
>> >            else
>> >               {
>> >                 #aexpr = #(PLUS, p1, p2);
>> >               }
>> >          }
>> >       |! ( #( MINUS aexpr aexpr ) )=> #( minus:MINUS m1:aexpr
>> m2:aexpr )
>> >       |! #( mult:MULT mu1:aexpr mu2:aexpr )
>> >       |! #( div:DIV d1:aexpr d2:aexpr )
>> >       |! #( neg:MINUS n:aexpr )
>> >       | NUM
>> >       | STRING
>> >       ;
>>
>> What I'm trying to do is transform the tree passed into aexpr in those
>> cases when I can remove complexity.  My isZero() method is correctly
>> recognizing those NUM trees which contain the number "0".
>> If I examine #aexpr before leaving this rule, I can see that:
>>         (PLUS 2 0)
>> is correctly reduced to just
>>          2
>>
>> My problem is that the assignment to #aexpr appears in the .cpp code as
>> a reference to:   aexpr_AST_in, but it is never used again after it gets
>> assigned!
>>
>> The end of the case continues with assigning _retTree = _t and not my
>> new tree.  The result of this is that when I examine my aexpr subtree in
>> the bexpr rule, it is the original (PLUS 2 0) tree!  Not the transformed
>> one!
> 
> Try using ## in stead of #aexpr. Does removing the ! from the first
> alternative work as well?

Using ## generates:

	aexpr_AST = RefGenevaAST(currentAST.root);

before the actions for the rule, but neither aexpr_AST nor currentAST
are declared inside the code blocks in which they are used, and G++
complains about this.

It doesn't seem to matter if I take the ! off the production rule or not.

> Cheers,
> 
> Ric
> 


-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From femtowin1 at gmail.com  Wed Apr 18 20:14:37 2007
From: femtowin1 at gmail.com (femtowin1)
Date: Wed, 18 Apr 2007 20:14:37 -0700 (PDT)
Subject: [antlr-interest] Can lex token return value?
Message-ID: <f5bc35a8b41a4d71aaf0296e3a336570@526cd7ec8bd54968a6035efaceb4177e>

Hi, I was trying to define the following grammar:

int
	:	'-'?(DECIMAL|HEX|BINARY|OCTAL | ESCAPE_INT) {token = createIntToken();}
	;

DECIMAL returns [int value]	:	('0d')?('0'..'9') ('_'? '0'..'9')* {$value = parseInt($text);};

HEX	:	...;
BINARY	:	...;
OCTAL	:	...;
ESCAPE_INT
	:       ...  
	;

the generated Lexer file is:

public final void mDECIMAL() throws RecognitionException {
        int value = 0;

        try {
            int _type = DECIMAL;
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:31: ( ( '0d' )? ( '0' .. '9' ) ( ( '_' )? '0' .. '9' )* )
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:31: ( '0d' )? ( '0' .. '9' ) ( ( '_' )? '0' .. '9' )*
            {
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:31: ( '0d' )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0=='0') ) {
                int LA3_1 = input.LA(2);

                if ( (LA3_1=='d') ) {
                    alt3=1;
                }
            }
            switch (alt3) {
                case 1 :
                    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:32: '0d'
                    {
                    match("0d"); 


                    }
                    break;

            }

            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:38: ( '0' .. '9' )
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:39: '0' .. '9'
            {
            matchRange('0','9'); 

            }

            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:49: ( ( '_' )? '0' .. '9' )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( ((LA5_0>='0' && LA5_0<='9')||LA5_0=='_') ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:50: ( '_' )? '0' .. '9'
            	    {
            	    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:50: ( '_' )?
            	    int alt4=2;
            	    int LA4_0 = input.LA(1);

            	    if ( (LA4_0=='_') ) {
            	        alt4=1;
            	    }
            	    switch (alt4) {
            	        case 1 :
            	            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:50: '_'
            	            {
            	            match('_'); 

            	            }
            	            break;

            	    }

            	    matchRange('0','9'); 

            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            value = parseInt(getText());

            }

            this.type = _type;
        }
        finally {
        }

it seems can't return value from Lex, is that true?
______________________________________
Sent from my www.pageflakes.com startpage

From jimi at temporal-wave.com  Wed Apr 18 21:06:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Apr 2007 21:06:03 -0700
Subject: [antlr-interest] Can lex token return value?
In-Reply-To: <f5bc35a8b41a4d71aaf0296e3a336570@526cd7ec8bd54968a6035efaceb4177e>
References: <f5bc35a8b41a4d71aaf0296e3a336570@526cd7ec8bd54968a6035efaceb4177e>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252386@wavemachine.temporal-wave.com>

ANTLR3 does not allow lexer rules to return values I am afraid, but generally you won't need to do this. If you really want to do it (though it is probably just as easy to do this in the parser, but there are varying opinions on this ;-), then try:


@lexer::members {
 public static int value;
}

DECIMAL	:	('0d')?('0'..'9') ('_'? '0'..'9')* {value = parseInt($text);};

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of femtowin1
Sent: Wednesday, April 18, 2007 8:15 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can lex token return value?

Hi, I was trying to define the following grammar:

int
	:	'-'?(DECIMAL|HEX|BINARY|OCTAL | ESCAPE_INT) {token = createIntToken();}
	;

DECIMAL returns [int value]	:	('0d')?('0'..'9') ('_'? '0'..'9')* {$value = parseInt($text);};

HEX	:	...;
BINARY	:	...;
OCTAL	:	...;
ESCAPE_INT
	:       ...  
	;

the generated Lexer file is:

public final void mDECIMAL() throws RecognitionException {
        int value = 0;

        try {
            int _type = DECIMAL;
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:31: ( ( '0d' )? ( '0' .. '9' ) ( ( '_' )? '0' .. '9' )* )
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:31: ( '0d' )? ( '0' .. '9' ) ( ( '_' )? '0' .. '9' )*
            {
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:31: ( '0d' )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0=='0') ) {
                int LA3_1 = input.LA(2);

                if ( (LA3_1=='d') ) {
                    alt3=1;
                }
            }
            switch (alt3) {
                case 1 :
                    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:32: '0d'
                    {
                    match("0d"); 


                    }
                    break;

            }

            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:38: ( '0' .. '9' )
            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:39: '0' .. '9'
            {
            matchRange('0','9'); 

            }

            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:49: ( ( '_' )? '0' .. '9' )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( ((LA5_0>='0' && LA5_0<='9')||LA5_0=='_') ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:50: ( '_' )? '0' .. '9'
            	    {
            	    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:50: ( '_' )?
            	    int alt4=2;
            	    int LA4_0 = input.LA(1);

            	    if ( (LA4_0=='_') ) {
            	        alt4=1;
            	    }
            	    switch (alt4) {
            	        case 1 :
            	            // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3.g:162:50: '_'
            	            {
            	            match('_'); 

            	            }
            	            break;

            	    }

            	    matchRange('0','9'); 

            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            value = parseInt(getText());

            }

            this.type = _type;
        }
        finally {
        }

it seems can't return value from Lex, is that true?
______________________________________
Sent from my www.pageflakes.com startpage

From win at wincent.com  Wed Apr 18 23:56:04 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 19 Apr 2007 08:56:04 +0200
Subject: [antlr-interest] Using ! operator in lexer rules
Message-ID: <D18618BA-266E-491A-B774-450DFC4FB37A@wincent.com>

This[1] wonderful ANTLR 2 tutorial shows the use of a ! operator in  
lexer rules to omit characters from a token's text value:

CHARLIT : '\''! . '\''! ; // enclosing quotes omitted

I've tried this in ANTLR 3 and the operator seems to have no effect  
at all. The new Definitive ANTLR Reference shows many examples using  
the operator, but only in the context of parser rules which output  
AST nodes.

As an example, I have an escaped backslash token. I want it to  
recognize the \\ sequence in the input stream and emit a token whose  
text value is just \. The only way I've found to do this is to  
manually invoke setText from within an action:

ESCAPED_BACKSLASH : BACKSLASH BACKSLASH { setText("\\"); };

The simpler alternative doesn't work:

ESCAPED_BACKSLASH : BACKSLASH! BACKSLASH;

Likewise for literals:

ESCAPED_BACKSLASH : '\\'! '\\';

So is it correct that the ! operator no longer works in lexer rules  
in ANTLR 3, or am I missing something here?

Cheers,
Wincent

[1] <http://javadude.com/articles/antlrtut/>


From cummings at kjchome.homeip.net  Thu Apr 19 00:13:17 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 19 Apr 2007 03:13:17 -0400
Subject: [antlr-interest] ANTLR 2.7.7 TreeParser transformation question
In-Reply-To: <4626D988.2000802@kjchome.homeip.net>
References: <46202F54.4020607@kjchome.homeip.net>	<bc607a4e0704180359xaf0840aq3a2aab2b69f9f91b@mail.gmail.com>
	<4626D988.2000802@kjchome.homeip.net>
Message-ID: <4627168D.8000808@kjchome.homeip.net>

Never mind!  My bad!  I forgot to put (back?) the buildAST=true; option.
(I *hate* it when I do that!)  Things are working *much* better now.

Kevin J. Cummings wrote:
> Ric Klaren wrote:
>> Hi,
>>
>> On 4/14/07, Kevin J. Cummings <cummings at kjchome.homeip.net> wrote:
>>>> aexpr :! #( PLUS  p1:aexpr p2:aexpr )
>>>>          {
>>>>          // Anything plus 0 is Anything
>>>>            if (isZero(p1))
>>>>               {
>>>>                 #aexpr = #p2;
>>>>               }
>>>>            else if (isZero(p2))
>>>>               {
>>>>                 #aexpr = #p1;
>>>>               }
>>>>            else
>>>>               {
>>>>                 #aexpr = #(PLUS, p1, p2);
>>>>               }
>>>>          }
>>>>       |! ( #( MINUS aexpr aexpr ) )=> #( minus:MINUS m1:aexpr
>>> m2:aexpr )
>>>>       |! #( mult:MULT mu1:aexpr mu2:aexpr )
>>>>       |! #( div:DIV d1:aexpr d2:aexpr )
>>>>       |! #( neg:MINUS n:aexpr )
>>>>       | NUM
>>>>       | STRING
>>>>       ;
>>> What I'm trying to do is transform the tree passed into aexpr in those
>>> cases when I can remove complexity.  My isZero() method is correctly
>>> recognizing those NUM trees which contain the number "0".
>>> If I examine #aexpr before leaving this rule, I can see that:
>>>         (PLUS 2 0)
>>> is correctly reduced to just
>>>          2
>>>
>>> My problem is that the assignment to #aexpr appears in the .cpp code as
>>> a reference to:   aexpr_AST_in, but it is never used again after it gets
>>> assigned!
>>>
>>> The end of the case continues with assigning _retTree = _t and not my
>>> new tree.  The result of this is that when I examine my aexpr subtree in
>>> the bexpr rule, it is the original (PLUS 2 0) tree!  Not the transformed
>>> one!
>> Try using ## in stead of #aexpr. Does removing the ! from the first
>> alternative work as well?
> 
> Using ## generates:
> 
> 	aexpr_AST = RefGenevaAST(currentAST.root);
> 
> before the actions for the rule, but neither aexpr_AST nor currentAST
> are declared inside the code blocks in which they are used, and G++
> complains about this.
> 
> It doesn't seem to matter if I take the ! off the production rule or not.
> 
>> Cheers,
>>
>> Ric
>>
> 
> 

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From win at wincent.com  Thu Apr 19 03:07:51 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 19 Apr 2007 12:07:51 +0200
Subject: [antlr-interest] Lexer rules and unreachable alternatives (trying
	to understand lexer)
Message-ID: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>

Given a lexer with a single rule:

	OTHER : .+ ;

Why would ANTLR issue this warning?

	warning(201): T.g:8:9: The following alternatives are unreachable: 1

The warning goes away if I instead write:

	OTHER : .* ;

Looking at the syntax diagram in ANTLRWorks I see something like this:

	 /-------------------------\
	v                           |
OTHER -------> '\u0000'..'\uFFFE' ---===>

The final part of the rightmost arrow is highlighted in red.

If I write the rule like this, the warning goes away:

	OTHER : '\u0000'..'\uFFFE'+ ;

What am I misunderstanding here?

Cheers,
Wincent


From jaluber at gmx.de  Thu Apr 19 03:15:27 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Apr 2007 12:15:27 +0200
Subject: [antlr-interest] Lexer rules and unreachable alternatives
 (trying to understand lexer)
In-Reply-To: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>
References: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>
Message-ID: <4627413F.7050209@gmx.de>

Wincent Colaiuta wrote:
> Given a lexer with a single rule:
> 
>     OTHER : .+ ;
> 
> Why would ANTLR issue this warning?
> 
>     warning(201): T.g:8:9: The following alternatives are unreachable: 1
> 
> The warning goes away if I instead write:
> 
>     OTHER : .* ;
> 
> Looking at the syntax diagram in ANTLRWorks I see something like this:
> 
>      /-------------------------\
>     v                           |
> OTHER -------> '\u0000'..'\uFFFE' ---===>
> 
> The final part of the rightmost arrow is highlighted in red.
> 
> If I write the rule like this, the warning goes away:
> 
>     OTHER : '\u0000'..'\uFFFE'+ ;
> 
> What am I misunderstanding here?
> 
> Cheers,
> Wincent

The problem is, that your first OTHER rule is ambiguous - it can match
everything, even the keywords, etc. defined in the other rules. With .*
the OTHER rule becomes optional. I suggest to either change your
grammar, so that it doesn't need the OTHER rule, or to use syntactic
predicates, which prevent that OTHER matches anything what another rule
could match.

Best regards,
Johannes Luber


From win at wincent.com  Thu Apr 19 04:32:06 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 19 Apr 2007 13:32:06 +0200
Subject: [antlr-interest] Lexer rules and unreachable alternatives
	(trying to understand lexer)
In-Reply-To: <4627413F.7050209@gmx.de>
References: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>
	<4627413F.7050209@gmx.de>
Message-ID: <8B5A1C81-364E-49B9-B474-C1314419C9C6@wincent.com>

El 19/4/2007, a las 12:15, Johannes Luber escribi?:

> Wincent Colaiuta wrote:
>> Given a lexer with a single rule:
>>
>>     OTHER : .+ ;
>
> The problem is, that your first OTHER rule is ambiguous - it can match
> everything, even the keywords, etc. defined in the other rules.  
> With .*
> the OTHER rule becomes optional. I suggest to either change your
> grammar, so that it doesn't need the OTHER rule, or to use syntactic
> predicates, which prevent that OTHER matches anything what another  
> rule
> could match.

Ok, the funny thing is that there are no other rules at all. I made a  
lexer with that single rule in it because I was trying to figure out  
what it did under the covers... Given that no ambiguity is possible  
with only one rule, I wonder if ANTLR has a hard-coded response to  
lexer rules like ".+"...

The thing which motivated me to start exploring this was a set of  
questions about lexer precedence (by which I mean, how the lexer  
chooses which rules to try) and I had a set of rules which looked  
something like this:

WS : ' '+ ;
FOO : ~('x' | 'y' | 'z')+ ;

At first I mistakenly thought that the lexer would try lexer rules in  
order (WS first and then FOO), but it doesn't. It calls a predict  
method and the predication always goes for FOO without fail. My  
understanding is now that the prediction method favors a greedy  
match, and so even typing "     \n" into the test rig is enough to  
make it prefer FOO over WS (because of the trailing newline). I  
played around with greedy=false but that yielded single characters  
rather than a string of non-whitespace characters. In any case,  
exploring the issue I eventually got down to a minimal lexer  
containing that lone OTHER rule...

I still have a lot to learn about ANTLR lexers!

Cheers,
Wincent


From zxrvillain at gmail.com  Thu Apr 19 05:17:02 2007
From: zxrvillain at gmail.com (Xiaorui Zhang)
Date: Thu, 19 Apr 2007 14:17:02 +0200
Subject: [antlr-interest] Again, about the error message.
Message-ID: <7434acb00704190517o7103fa14w7d21087ee250b067@mail.gmail.com>

Hi, guys,
First thank you very much for all your earnest help on my problem with the "
no such locale file org/antlr/tool/templates/messages/languages/zh.stg
retrying with English locale".

I wonder if any of you use Xtext of OpenArchitectureWare as well, because
this error message occured everytime I ran the . xtxt file. And without the
generated editor I expected. I don't know if this error message leads to
this failure although most of you said it would be just a warning. But I
noticed that along with this error message, there are some skipped writing
of some outlet files.

Actually I didn't install the antlr plug in in my Eclipse, just because*Xtext
* builds dependent on* ATL( Atlas Transformation Language)*, and in the ATL
plugin, there are some *antlr* files as additional library. Plus I *cannot*
 find *org/antlr/tool/templates/messages/languages/en.stg *in my plugin
folder.

Therefore, I install the antlr plugin in Eclipse( with org.antlr.doc_2.7.6,
org.antlr.eclipse.core_4.1.0, org.antlr.eclipse.ui_4.1.1, org.antlr_2.7.6,
org.antlr_3.0.0.b6). Then I retried but got the same error message.

I know that my problem a bit beyond the antlr, but help on
that will be appreciated a lot.

Thank you in advance. For some of you suggest me to make Chinese
translation, I'd like to but it seems that I am totally new to Antlr and
need some time to get familiar with it.


-- 
Best regards!
Sincerely yours,
Zhang Xiaorui
Master student of ICT,
Agder University College
mob: +47 9429 8603
mailTo : zxrvillain at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070419/a424bfa7/attachment.html 

From jaluber at gmx.de  Thu Apr 19 05:38:22 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Apr 2007 14:38:22 +0200
Subject: [antlr-interest] Lexer rules and unreachable alternatives
 (trying to understand lexer)
In-Reply-To: <8B5A1C81-364E-49B9-B474-C1314419C9C6@wincent.com>
References: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>
	<4627413F.7050209@gmx.de>
	<8B5A1C81-364E-49B9-B474-C1314419C9C6@wincent.com>
Message-ID: <462762BE.2060201@gmx.de>

Wincent Colaiuta wrote:
> Ok, the funny thing is that there are no other rules at all. I made a
> lexer with that single rule in it because I was trying to figure out
> what it did under the covers... Given that no ambiguity is possible with
> only one rule, I wonder if ANTLR has a hard-coded response to lexer
> rules like ".+"...
> 
> The thing which motivated me to start exploring this was a set of
> questions about lexer precedence (by which I mean, how the lexer chooses
> which rules to try) and I had a set of rules which looked something like
> this:
> 
> WS : ' '+ ;
> FOO : ~('x' | 'y' | 'z')+ ;

Did you have a parser rule like

start
   :  WS
   |  FOO
   ;

in your example? Otherwise ANTLR may choose the superset rule in favor
of subset rule on its own.

> At first I mistakenly thought that the lexer would try lexer rules in
> order (WS first and then FOO), but it doesn't. It calls a predict method
> and the predication always goes for FOO without fail. My understanding
> is now that the prediction method favors a greedy match, and so even
> typing "     \n" into the test rig is enough to make it prefer FOO over
> WS (because of the trailing newline). I played around with greedy=false
> but that yielded single characters rather than a string of
> non-whitespace characters. In any case, exploring the issue I eventually
> got down to a minimal lexer containing that lone OTHER rule...

With greedy=false you can't get token with more than one character,
unless you have some kind of stopping character. After all, the WS rule
is satisfied with just one space.

WS: ' '+ ~' ';


With this rule WS should get all consecutive spaces. But I haven't
tested if FOO is still chosen over WS. Maybe

start
   : (WS)=> WS
   |  FOO
   ;

is still needed.

Best regards,
Johannes Luber

From femtowin at gmail.com  Thu Apr 19 05:50:38 2007
From: femtowin at gmail.com (femto gary)
Date: Thu, 19 Apr 2007 20:50:38 +0800
Subject: [antlr-interest] Change in output location with 3.0b7
In-Reply-To: <EBE16E30-780A-4F16-A76C-4CAC3B48BD41@cs.usfca.edu>
References: <0215b3c92cd9428b9a7f3dd7602850f8@750e456af7af450eb2f233f6bf7c0599>
	<EBE16E30-780A-4F16-A76C-4CAC3B48BD41@cs.usfca.edu>
Message-ID: <91170ee40704190550q498b5129w4ba31a570539a036@mail.gmail.com>

read the paper, thanks for the information,
but two practical considerations,

one,how do I, say, test the template?
in freemarker, I can just set template variable,
even when business back end has not been written,
I can test the template and see what it looks like,

two, still the grammar, the synatx is very counter-intuitive,
hard to capture by eyes where is dynamic content
and where is regular text.

On 4/19/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Apr 18, 2007, at 8:01 AM, femtowin1 wrote:
>
> > I haven't use this feature so doesn't know how much this
> > inconvenience is.
> >   but my personal taste, or rather, unlike place of antlr is that:
> > it uses StringTemplate and StringTemplate's grammar is quite unintuive
> > . personally I would prefer something like velocity or freemarker,
> > because these template engine are all well accepted and the grammar
> > for variable is ${var}, very much like many other template language.
> > (actually, most templete language use this syntax, and
> > StringTemplate uses quite exotic grammar).
>
> Yes, but they all violate model-view separation and therefore cannot
> guarantee retargetability like ST can.  You should read: "Enforcing
> Strict Model-View Separation in Template Engines":
>
> http://www.cs.usfca.edu/~parrt/papers/mvc.templates.pdf
>
> Ter
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From jaluber at gmx.de  Thu Apr 19 06:24:14 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Apr 2007 15:24:14 +0200
Subject: [antlr-interest] Lexer rules and unreachable alternatives
 (trying to understand lexer)
In-Reply-To: <462762BE.2060201@gmx.de>
References: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>	<4627413F.7050209@gmx.de>	<8B5A1C81-364E-49B9-B474-C1314419C9C6@wincent.com>
	<462762BE.2060201@gmx.de>
Message-ID: <46276D7E.80007@gmx.de>

Johannes Luber wrote:
> start
>    :  WS
>    |  FOO
>    ;
> 
> in your example? Otherwise ANTLR may choose the superset rule in favor
> of subset rule on its own.

Oops, the start rule has to be something like

start : (WS | FOO)* EOF;

or it can't recognize whitespace separated strings. Unfortunately, when
I was testing the grammar in ANTLRworks, it chose FOO over WS, until I
added the space as non-FOO character.

Even then I didn't manage to "degreedy" the WS rule - what did you do
exactly? Here my latest try.

start
   :  (WS |  FOO)* EOF
   ;

WS : (options {greedy=false;} : ' '+) ;
FOO : ~('x' | 'y' | 'z' | ' ')+ ;

And as you are new with ANTLR I can recommend the following tutorial
(which I incidentally wrote):

http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required

Maybe Terence should put a more prominent link on the webpage to it...

Best regards,
Johannes Luber

From win at wincent.com  Thu Apr 19 07:25:04 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 19 Apr 2007 16:25:04 +0200
Subject: [antlr-interest] Lexer rules and unreachable alternatives
	(trying to understand lexer)
In-Reply-To: <462762BE.2060201@gmx.de>
References: <E60AD38C-CB30-4988-943F-1ADD1C871EDE@wincent.com>
	<4627413F.7050209@gmx.de>
	<8B5A1C81-364E-49B9-B474-C1314419C9C6@wincent.com>
	<462762BE.2060201@gmx.de>
Message-ID: <37D28E9D-A371-4480-9B9E-64A9EE59DBC9@wincent.com>

El 19/4/2007, a las 14:38, Johannes Luber escribi?:

> With this rule WS should get all consecutive spaces. But I haven't
> tested if FOO is still chosen over WS. Maybe
>
> start
>    : (WS)=> WS
>    |  FOO
>    ;
>
> is still needed.

I think the problem is that by the time the start rule is run in the  
parser, lexing has already taken place, so by then it is too late for  
the predicate to influence the outcome (you already have either a WS  
or a FOO token).

I did some more testing, and these are the results; for start rules  
like this:

	start : WS | FOO ; // order of WS and FOO in parser rule irrelevant
	start : (WS | FOO)+ ;
	start : .+ ;

If your input is *only* spaces then, all else being equal, the first- 
listed lexer rule wins.

But if your input contains more than just spaces (like "foo bar",  
"foo   ", "    bar"), the FOO is always going to win, regardless of  
the order of the lexer rules.

As you commented, the only way to overcome this greedy matching  
behaviour seems to be to explicitly disallow spaces in FOO. No big  
deal, but my natural inclination was to specify my lexer rules like  
this:

SPECIFIC_RULE : ....
LESS_SPECIFIC_RULE : ...
GENERAL_RULE : ...

And let "lexer precedence" sort out which one matches. This doesn't  
work, though, because if the a more general rule subsumes a more  
specific one, then the general rule will always win (a single greedy  
match) instead of yielding two smaller matches. In the end it looks  
like predicates in the lexer rules or some other workaround will have  
to step in.

> And as you are new with ANTLR I can recommend the following tutorial
> (which I incidentally wrote):
>
> http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser 
> +Grammars+-+No+Past+Experience+Required

Yes, I had already read it, actually. It is a nice introduction to  
the topic! The main thing which I'm having trouble coming to grips  
with is achieving total separation between the lexer and the parser;  
my previous experience was with integrated lexer/parsers, so the  
lexer always knew exactly where it was and what kinds of symbols to  
look for in the current context. But in ANTLR the lexer has to do its  
scanning from start to finish without any help from the parser; I  
understand that you can get it to do what you want using predicates,  
but it's probably going to take me a while to get the hang of it.

Cheers,
Wincent



From eric.elliott at gmail.com  Thu Apr 19 08:39:22 2007
From: eric.elliott at gmail.com (Eric Elliott)
Date: Thu, 19 Apr 2007 11:39:22 -0400
Subject: [antlr-interest] Auto-complete using ANTLR v3
Message-ID: <2c9874d50704190839x5aa8946fjb6bd066fbda31dce@mail.gmail.com>

I'm trying to implement a relatively simple auto-complete using ANTLR v3.
Can anyone point me to examples or give a general overview of what is
involved in getting Antlr to give back what tokens are valid at a
particular point in an input?

As a simple example, say I have:

expr:  val ('+' val)*;

val:  '1' | ( 'Sin(' val ')' ) | ( ' Cos(' val ')');

If the user has typed 1, I should be able to present '+'.
if the user has typed 1 +, I should be able to present '1', 'Sin(', or 'Cos('.

Thanks for any input.

-- 
Eric Elliott
eric.elliott at gmail.com

From jimi at temporal-wave.com  Thu Apr 19 09:29:13 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Apr 2007 09:29:13 -0700
Subject: [antlr-interest] Auto-complete using ANTLR v3
In-Reply-To: <2c9874d50704190839x5aa8946fjb6bd066fbda31dce@mail.gmail.com>
References: <2c9874d50704190839x5aa8946fjb6bd066fbda31dce@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A23533625238B@wavemachine.temporal-wave.com>

Well, if you override the error reporting for the parser, when you
trigger an error, you will be provided with an expecting token set,
which would normally be used for error reporting:

        1
Error at ^ expecting one of '1', 'Sin', 'Cos' ... 

Instead of printing the error, just return an array of strings that
represent the tokens. For displaying such things, you may want to
classify the tokens rather than just print out all of them. If you are
in an expression, you might have 30 functions, or an unknown element if
you can do X = myexternalfunc(...)

But, I suspect that this is your first shot at the title. You can also
use rule actions of course, or a combination of things.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Eric Elliott
Sent: Thursday, April 19, 2007 8:39 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Auto-complete using ANTLR v3

I'm trying to implement a relatively simple auto-complete using ANTLR
v3.
Can anyone point me to examples or give a general overview of what is
involved in getting Antlr to give back what tokens are valid at a
particular point in an input?

As a simple example, say I have:

expr:  val ('+' val)*;

val:  '1' | ( 'Sin(' val ')' ) | ( ' Cos(' val ')');

If the user has typed 1, I should be able to present '+'.
if the user has typed 1 +, I should be able to present '1', 'Sin(', or
'Cos('.

Thanks for any input.

-- 
Eric Elliott
eric.elliott at gmail.com

From Das.Linux at gmx.de  Thu Apr 19 12:52:02 2007
From: Das.Linux at gmx.de (Tobias Pape)
Date: Thu, 19 Apr 2007 21:52:02 +0200
Subject: [antlr-interest] fisheye down?
Message-ID: <88262F7D-62F1-4C84-B6F7-4599E1E3C060@gmx.de>

Hi Terrence, hi all,

I'm currently unable to reach the repository at cenqua.
about 5 h earlier , it said, "repository was disabled by administrator"
and in this very moment I'm experiencing timeouts.

can somebody scond that?

thanks
	-Tobias
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PGP.sig
Type: application/pgp-signature
Size: 186 bytes
Desc: Signierter Teil der Nachricht
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070419/b19b7315/attachment.bin 

From pink at odahoda.de  Thu Apr 19 13:36:36 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 19 Apr 2007 22:36:36 +0200
Subject: [antlr-interest] fisheye down?
References: <88262F7D-62F1-4C84-B6F7-4599E1E3C060@gmx.de>
Message-ID: <f08jsk$5b9$1@sea.gmane.org>

Tobias Pape wrote:

> Hi Terrence, hi all,
> 
> I'm currently unable to reach the repository at cenqua.
> about 5 h earlier , it said, "repository was disabled by administrator"
> and in this very moment I'm experiencing timeouts.
> 
> can somebody scond that?

Works for me. You probably hit a temporary maintainance downtime.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From dMaier at genome.stanford.edu  Thu Apr 19 14:01:16 2007
From: dMaier at genome.stanford.edu (Don Maier)
Date: Thu, 19 Apr 2007 14:01:16 -0700
Subject: [antlr-interest] Submitting bug report?
Message-ID: <187F70FD-9859-4497-AA7B-205D0670ED52@genome.stanford.edu>

Hi friends,

Please forgive this note to the group from a newcomer.

I'd like to submit a bug report describing a case where antlr-3.0b7  
generates invalid Java code for the lexer (incorrectly constructed if- 
then-else statements),   I find myself unable to get the issue  
navigator to do anything but let me view existing defect reports --  
which appear not to describe the problem I've encountered.   Can  
anyone supply me with a few hints?

Thanks!

Don Maier
Sr. Software Designer/Research
Dept. of Biochemistry
Stanford University School of Medicine


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070419/eb6688dc/attachment.html 

From parrt at cs.usfca.edu  Thu Apr 19 15:13:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Apr 2007 15:13:49 -0700
Subject: [antlr-interest] Submitting bug report?
In-Reply-To: <187F70FD-9859-4497-AA7B-205D0670ED52@genome.stanford.edu>
References: <187F70FD-9859-4497-AA7B-205D0670ED52@genome.stanford.edu>
Message-ID: <59E9B48B-8432-49FF-9076-FB62D834B4A8@cs.usfca.edu>


On Apr 19, 2007, at 2:01 PM, Don Maier wrote:

> Hi friends,
>
> Please forgive this note to the group from a newcomer.
>
> I'd like to submit a bug report describing a case where antlr-3.0b7  
> generates invalid Java code for the lexer (incorrectly constructed  
> if-then-else statements),   I find myself unable to get the issue  
> navigator to do anything but let me view existing defect reports --  
> which appear not to describe the problem I've encountered.   Can  
> anyone supply me with a few hints?

Hi Don,

please post bugs to the list so we can decide if they really are ;)

Thanks,
Ter


From dMaier at genome.stanford.edu  Thu Apr 19 16:28:02 2007
From: dMaier at genome.stanford.edu (Don Maier)
Date: Thu, 19 Apr 2007 16:28:02 -0700
Subject: [antlr-interest] Submitting bug report?
In-Reply-To: <59E9B48B-8432-49FF-9076-FB62D834B4A8@cs.usfca.edu>
References: <187F70FD-9859-4497-AA7B-205D0670ED52@genome.stanford.edu>
	<59E9B48B-8432-49FF-9076-FB62D834B4A8@cs.usfca.edu>
Message-ID: <9CE1CFE6-0FDC-4E84-BEDB-08C9F8BDCECF@genome.stanford.edu>

Sure enough:

The grammar IDF.g is pasted below.  The recipe for failure is:

1)  Place grammar in ANTLRWorks 1.0b10.
2)  Check the grammar.   (ANTLRWorks reports "ok".)
3)  Generate the code, also using in ANTLRWorks.
4)  IDFLexer.java has two errors, at ll. 435, 509 due to a missing  
'}' in an 'if' statement.
5) IDFParser.java has an error at l. 227 because the variable  
'rowheader' is undefined.
7) Both generated java files have a first line comment indicating  
their antlr-3.0b7 provenance.   This makes me think that this problem  
is unlikely to be one in ANTLRWorks, and not in ANTLR proper.

My apologies, in advance, if this problem is the result of a  
beginner's fumble.

Also, I've not attached any files to avoid getting this message  
entangled in spam blockers.   But I'm happy to supply the grammar  
file, and the generated java files as attachments, if you wish.

Regards,
Don Maier

----------------------------------------------------

grammar IDF;
options { k=1; }

tokens {
	LSB = '[';
         RSB = ']';
         Q   = '"';
         SP  = ' ';
	TAB = '\t';
}

@lexer::header {

}	

@header {

}

@members {
public static int lineNumber = 1;
}

file    : record (RECORD_SEPARATOR record)* EOF
         { System.out.println("*** IDF Parse complete"); }
        	;
record  :
	{ System.out.print("*** Line " + lineNumber + ": "); }
	  header (cell_separator cell)*
	| empty_record
         { System.out.println("\n"); lineNumber++; }
        	;
header  : rowHeader = standard_header
	| rowHeader = comment_header
	{ System.out.print("Header = " + rowHeader); }
	;
standard_header
	: INVESTIGATION TITLE
	;		
comment_header
	: COMMENT LSB BRACKETED_CONTENT RSB
	;

empty_record
	: (SP|TAB)*
	;	
cell    : empty_cell
	| content = cell_content
    	| content = quoted_cell_content
	;
empty_cell
	: (SP)*
	;
cell_content
	: CONTENT
	;
quoted_cell_content
	: QUOTED_CONTENT
	;
cell_separator
	: TAB
	;
		
// Keyword terminals

INVESTIGATION
	: 'Investigation'
	;
TITLE	: 'Title'
	;
COMMENT : 'Comment'
	;
			
// Lexer

/* A sequence of one or more non-']' characters beginning and ending  
with a non-space
* character.
*/
BRACKETED_CONTENT
	: ((~(RSB|SP|TAB|'\r'|'\n')) (~(RSB|TAB|'\r'|'\n'))*)? (~(RSB|SP| 
TAB|'\r'|'\n'))
	;
/* A sequence of one or more characters starting with a non-quote,  
non-space character,
* and ending with a non-space character (which could be the first  
character).
*/
CONTENT
	: (~(Q|SP|TAB|'\r'|'\n')) ((~(TAB|'\r'|'\n'))* (~(SP|TAB|'\r'|'\n')))?
	;
/* A quote-bracketed sequence of non-quote characters, though  
permitting embedded
* escaped quotes in the forma of '\"'.
*/
QUOTED_CONTENT
	: Q! (~(Q|TAB|'\r'|'\n'))* (('\\'Q) (~(Q|TAB|'\r'|'\n'))*)* Q!
	;
RECORD_SEPARATOR
	: ( '\r''\n' ) => '\r''\n' // Windows
         | '\r'                     // Mac
         | '\n'                     // Unix
         ;
		
WS      : (SP)+
	{ $channel = HIDDEN; }
	;


----------------------------------------------------

On Apr 19, 2007, at 3:13 PM, Terence Parr wrote:

>
> On Apr 19, 2007, at 2:01 PM, Don Maier wrote:
>
>> Hi friends,
>>
>> Please forgive this note to the group from a newcomer.
>>
>> I'd like to submit a bug report describing a case where  
>> antlr-3.0b7 generates invalid Java code for the lexer (incorrectly  
>> constructed if-then-else statements),   I find myself unable to  
>> get the issue navigator to do anything but let me view existing  
>> defect reports -- which appear not to describe the problem I've  
>> encountered.   Can anyone supply me with a few hints?
>
> Hi Don,
>
> please post bugs to the list so we can decide if they really are ;)
>
> Thanks,
> Ter



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070419/26360248/attachment.html 

From jimi at temporal-wave.com  Thu Apr 19 18:30:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Apr 2007 18:30:03 -0700
Subject: [antlr-interest] C Target updates
Message-ID: <B36CCC332A32904F8FA3DE134A235336252398@wavemachine.temporal-wave.com>

The C target has been substantially updated over the last few days, with
a number of improvements and bug fixes as well as the addition of
examples for using the C target (should be available from FishEye
shortly, examples tree was missing from FishEye and Ter has now
requested it as an addition).

 

However, until Ter releases a formal update, which I will assumed is b9,
if you want to take advantage of the examples, you will need to get the
latest distribution from the source tree (tagged as b8, but I realize
now that it should be b9 really, and I will correct this shortly) and
build the runtime yourself, and you will also need to build the ANTLR
jar so as to include the new C.stg file. It may be easier to wait for
b9, which is not too far away I would imagine (post Ter's changes to
tree rewriting I guess).

 

I shall be adding the rest of the example tree to the source as soon as
possible, which I hope will engender/enable more use of the C target and
aid those of you who have been struggling a little without some formal
examples. Currently, the examples include: C Parser, Java Parser, island
grammar (how to step out of the lexer and parse a completely different
'language' then revert to the originating language), global and rule
dynamic scope, hoisted predicates, and filtering lexer. There are a few
remaining examples to convert to the C target but they are more repeats
of the same thing, other than those that use stringtemplates, to whit I
must decide on a strategy yet.

 

For those that have grammars targeted at C, you should not the following
changes, which may affect your existing grammars, so this is a heads up
to help solve any seemingly strange issues, or help you provide feedback
to me on anything that used to work that now does not. Firstly, things
that have changed that probably won't affect you negatively:

 

1)      The memorize option now works. This obviously affects code
generation a little, so it is possible that I broke something while
implementing this, though I don't predict this to be the case;

2)      The backtracking option is now 'fully' tested, especially in
conjunction with memorize=true; Again, this affects code generation;
though I have tested what I can, it is possible that I have broken
things - the changes were minor, so I do not expect this to be the case;

3)      Error recovery is based on bitsets defining tokens that can
follow any particular point. I finally got around to making these static
declarations, which speeds up the initialization process for
{Tree}Parsers. If your error recovery/reporting changes at all, please
let me know. My next task is to update the default error reporting
functions which I know have at least 2 bugs that could cause sigsegv,
though I expect most people will override these.

4)      I have noticed, by virtue of the C grammar which both backtracks
and memoizes, that at least in debug mode, the code executes slower than
I would like. I think I know why (default options for hashtables) but I
am using Vista as a development platform and Compuware won't let me have
the beta that supports that platform and Parallels for Windows has bugs
that their pathetic support is not helping me with - I need to buy
another MAC!).

 

There is only one change that may well affect your grammars as they
stand, and that is that I have changed all the macros defined for both
easier code generation and ease of use by C grammar programmers from
camel case to the more traditional UPPER case used by C programmers. My
original idea was that the Java examples would more easily translate to
C usage, but I now find that it is too annoying for C programmers (I.E.
me) so instead of getText() you now have GETTEXT() which is more
obviously a macro. Anythign like this that used to work is probably
solved by UPPER casing what you have.

 

Things to do:

 

1)      Profile and memory check again with BoundsChecker;

2)      Verfiy codegen on more platforms - should not be an issue, but
thanks to those that have access to C compilers that I do not such as
the Intel compiler;

3)      Update the wiki with extensive explanation on how to do things;

4)      Correct typos in comments - I have had more feedback on this
than anything else, and my explanation is that I type at the furious
rate of 100000000 characters a second, but most of what I type is <BS>
;-)

5)      Sell soul to devil;

 

Feedback with respect always appreciated,

 

Jim

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070419/852b14b7/attachment-0001.html 

From parrt at cs.usfca.edu  Thu Apr 19 18:51:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Apr 2007 18:51:12 -0700
Subject: [antlr-interest] C Target updates
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252398@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A235336252398@wavemachine.temporal-wave.com>
Message-ID: <62852084-890F-471D-8FDF-67B44D637C7D@cs.usfca.edu>


On Apr 19, 2007, at 6:30 PM, Jim Idle wrote:
> However, until Ter releases a formal update, which I will assumed  
> is b9, if you want to take advantage of the examples, you will need  
> to get the latest distribution from the source tree (tagged as b8,  
> but I realize now that it should be b9 really, and I will correct  
> this shortly)

Actually 3.0b7 was just released...i upped it to 3.0b8 in  
anticipation of next release already ;)
Ter

From parrt at cs.usfca.edu  Thu Apr 19 18:54:18 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Apr 2007 18:54:18 -0700
Subject: [antlr-interest] Problem using += operator in actions
In-Reply-To: <4624C50A.60200@acm.org>
References: <4624C50A.60200@acm.org>
Message-ID: <B8202677-423F-47E4-BB3C-5CF9AD291F0A@cs.usfca.edu>

Hi Martin,

This has been fixed.  Added a slew of unit tests.  It will magically  
appear in next build when I push.  I am *almost* satisfied that my  
new AST rewrite implementation correct.  Soon as I add yet more unit  
tests for this stuff I'll push.

Thanks for the impetus to fix this annoying bug.  It now binds +=  
tighter than + and * loops etc...

Ter
On Apr 17, 2007, at 6:00 AM, Martin Fowler wrote:

> This is another one of those problems I ended up solving myself but  
> I post here to help others.
>
> I wanted to collect together some words using the += operator. I  
> used a grammar line like this:
>
> item	: 'item'  w += WORD+ ';'
> 	{System.out.println("name is: " + $w);}
> 	 ;
>
> The problem was that $w ended up being null.
>
> My mistake was that the phrase w+=WORD needed to be contained in  
> parentheses before applying the +, like so:
>
> item	: 'item'  (w += WORD)+ ';'
> 	{System.out.println("name is: " + $w);}
> 	 ;
>
>
> -- 
> Martin Fowler
> http://martinfowler.com


From win at wincent.com  Fri Apr 20 04:36:44 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 20 Apr 2007 13:36:44 +0200
Subject: [antlr-interest] Using ! operator in lexer rules
In-Reply-To: <D18618BA-266E-491A-B774-450DFC4FB37A@wincent.com>
References: <D18618BA-266E-491A-B774-450DFC4FB37A@wincent.com>
Message-ID: <78EBBD08-42DA-4527-975C-FE10F58087B3@wincent.com>

Replying to my own post with a more fleshed-out example grammar. My  
question is, does the ! operator no longer have any effect in lexer  
rules in ANTLR 3?

Here's the example ANTLR 3 grammar which you can paste into  
ANTLRWorks and try running under the debugger with input like: "foo"  
"bar" "baz"

grammar T;
words : (WORD { System.out.println("WORD: " + $WORD.text); } )* EOF ;
WORD : '"'! 'a'..'z'+ '"'!;
WS : (' ')+ { $channel = HIDDEN; } ;

I would expect the WORD tokens to have the values: foo, bar and baz;  
but instead they have "foo", "bar" and "baz" (ie. with the quotes)

To make this work under ANTLR 3 I have to take this kind of route  
instead, doing it without the ! operator:

grammar T;
words : (WORD { System.out.println("WORD: " + $WORD.text); } )* EOF ;
fragment CONTENT : 'a'..'z'+;
WORD : '"' t=CONTENT '"' { setText($CONTENT.text); };
WS : (' ')+ { $channel = HIDDEN; } ;

This correctly prints: foo, bar and baz (no enclosing quotes).

Here's the equivalent ANTLR 2 grammar which uses the ! operator and  
also correctly prints the input words without the enclosing quotes:

class TParser extends Parser;
words : (w:WORD { System.out.println("WORD: " + w.getText()); } )*;
class TLexer extends Lexer;
WORD : '\"'! ('a'..'z')+ '\"'! ;
WS : (' ')+ { $setType(Token.SKIP); } ;

So I am correct that the function of the ! operator in lexer rules  
has changed in the move from ANTLR 2 to ANTLR 3, or am I  
misunderstanding the way it did/does work?

Cheers,
Wincent

El 19/4/2007, a las 8:56, Wincent Colaiuta escribi?:

> This[1] wonderful ANTLR 2 tutorial shows the use of a ! operator in  
> lexer rules to omit characters from a token's text value:
>
> CHARLIT : '\''! . '\''! ; // enclosing quotes omitted
>
> I've tried this in ANTLR 3 and the operator seems to have no effect  
> at all. The new Definitive ANTLR Reference shows many examples  
> using the operator, but only in the context of parser rules which  
> output AST nodes.
>
> As an example, I have an escaped backslash token. I want it to  
> recognize the \\ sequence in the input stream and emit a token  
> whose text value is just \. The only way I've found to do this is  
> to manually invoke setText from within an action:
>
> ESCAPED_BACKSLASH : BACKSLASH BACKSLASH { setText("\\"); };
>
> The simpler alternative doesn't work:
>
> ESCAPED_BACKSLASH : BACKSLASH! BACKSLASH;
>
> Likewise for literals:
>
> ESCAPED_BACKSLASH : '\\'! '\\';
>
> So is it correct that the ! operator no longer works in lexer rules  
> in ANTLR 3, or am I missing something here?
>
> Cheers,
> Wincent
>
> [1] <http://javadude.com/articles/antlrtut/>


From craig at palantir.co.za  Fri Apr 20 07:06:43 2007
From: craig at palantir.co.za (craig at palantir.co.za)
Date: Fri, 20 Apr 2007 16:06:43 +0200
Subject: [antlr-interest] (no subject)
Message-ID: <20070420160643.i0wd4r1mo084sgo0@webmail.palantir.co.za>

Hi,

Why does the grammar below mismatch on the space in the following test input.

grammar csv;
options {
   language=java;
}

r  : ID (COMMA ID)+ EOF;
ID : 'a'..'z' + ;
COMMA              :               ',';
WS  :  (' '|'\r'|'\t'|'\u000C'|'\n')+ {$channel=HIDDEN;}
    ;

When I run with
test, testing, testagain

It is not ignoring the whitespace? Should $channel=HIDDEN not do the trick here?

Regards
Craig


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.



From win at wincent.com  Fri Apr 20 07:49:44 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 20 Apr 2007 16:49:44 +0200
Subject: [antlr-interest] (no subject)
In-Reply-To: <20070420160643.i0wd4r1mo084sgo0@webmail.palantir.co.za>
References: <20070420160643.i0wd4r1mo084sgo0@webmail.palantir.co.za>
Message-ID: <40877ED3-7A16-41BB-A881-B5B981898984@wincent.com>

El 20/4/2007, a las 16:06, craig at palantir.co.za escribi?:

> When I run with
> test, testing, testagain
>
> It is not ignoring the whitespace? Should $channel=HIDDEN not do  
> the trick here?

Are you running under the ANTLRWorks interpreter by any chance?

I am very new to ANTLR myself, but one thing I've discovered is that  
running things under the ANTLRWorks "Interpreter" tab is not the same  
as running them under the debugger or from a compiled tool.

Things like setting the channel don't work in the interpreter,  
presumably because nothing is actually compiled before the  
interpreter starts; as such any actions you define that set channels  
or do anything else will have no effect. This is why your rules fail  
to work when you have whitespace in your input.

But if you run them under the debugger, your grammar is actually  
compiled before running, and your actions will indeed be invoked.

Cheers,
Wincent


From alessandro1.leonardi at telecomitalia.it  Fri Apr 20 07:53:49 2007
From: alessandro1.leonardi at telecomitalia.it (Alessandro Leonardi)
Date: Fri, 20 Apr 2007 16:53:49 +0200
Subject: [antlr-interest] antlr - sub ast tree
Message-ID: <009601c7835b$b4a7b1e0$5f16dc0a@telecomitalia.local>

Hi,

 

I'm working about an existing antlr grammar.

 

I'm using java.

 

In the Tree Parser Class are defined 2 method:

expr and exprs

 

 

class ExpressionTreeWalker extends TreeParser;

.

expr  returns [double r]

.

strs returns [String r]

.

 

Expr implements the ast evalutation on numeric operators, Strs on string
operators.

 

Some AST subtree nodes should be calculated by expr and some others by strs
but if I use this syntax, 

 

    CommonAST parseTree = (CommonAST) this.getAST();

    ExpressionTreeWalker walker = new ExpressionTreeWalker();

    String r = walker.expr(parseTree);

 

all tree will be evaluated by expr method.

How is possible to force the ast evaluation to use strs to traverse a
particular subtree?

 

Example: 

 

..

relExpression:

   expr ^EQ expr

 

.

 

tokens {

..

EQ:"="

..

}

 

class ExpressionTreeWalker extends TreeParser;

.

 

  expr returns [double r]

  { double  a,b; r=0; String str,str1,str2; 

  }

#EQ (a=expr b=expr) {

// number relation

}

.

 

 

 

  strs returns [double r]

  { String  a,b; r=0; String str,str1,str2; 

  }

#EQ (a= strs b= strs) {

// strings relation

}

.

 

 

// java ast evaluation 

    CommonAST parseTree = (CommonAST) this.getAST();

    ExpressionTreeWalker walker = new ExpressionTreeWalker();

    String r = walker.expr(parseTree);

 

How is possible to force the relExpression evaluation using the strs.EQ
instead expr.EQ ? ( for example if a code variable indicated this )

 

 

 

I hope to be clear,

 

Thanks a lot!

Bye

Alessandro 

 

 

 

 

 

--------------------------------------------------------------------

CONFIDENTIALITY NOTICE

This message and its attachments are addressed solely to the persons above and may contain confidential information. If you have received the message in error, be informed that any use of the content hereof is prohibited. Please return it immediately to the sender and delete the message. Should you have any questions, please contact us by replying to webmaster at telecomitalia.it.

        Thank you

                                        www.telecomitalia.it

--------------------------------------------------------------------
                        
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070420/37fb67af/attachment-0001.html 

From Thomas.Jackson at microfocus.com  Fri Apr 20 08:17:44 2007
From: Thomas.Jackson at microfocus.com (Thomas Jackson III)
Date: Fri, 20 Apr 2007 11:17:44 -0400
Subject: [antlr-interest] AntlrWorks+Idea Question
Message-ID: <8818ADCA969F2F4DA513CEE078066DCA032F60A7@rock-exchange.microfocus.com>

This may have been covered before but I can't seem to find it so I
apologize if it has.

 

I am using AntlrWork 1.0b10 inside IntelliJ 5.1.2 and am getting a
compile error after generating the code.  It keeps telling me
ruleNestingLevel is undefined.  I have generated it from outside of IDEA
from just AntlrWorks itself and the code for the ruleNestingLevel is not
there (which is probably why it worked in Eclipse for me).

 

Any suggestions?

 

Thanks

Thomas


Micro Focus World 2007
 
focus on...application modernization & management
 
30 April - 2 May
Royal Pacific Resort, Orlando, Florida, USA
www.microfocusworld.com

-------------------------------------------------

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070420/ffdcb68f/attachment.html 

From parrt at cs.usfca.edu  Fri Apr 20 08:31:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 08:31:36 -0700
Subject: [antlr-interest] AntlrWorks+Idea Question
In-Reply-To: <8818ADCA969F2F4DA513CEE078066DCA032F60A7@rock-exchange.microfocus.com>
References: <8818ADCA969F2F4DA513CEE078066DCA032F60A7@rock-exchange.microfocus.com>
Message-ID: <EB941BE6-FB22-4600-8767-D47851F31755@cs.usfca.edu>


On Apr 20, 2007, at 8:17 AM, Thomas Jackson III wrote:

> This may have been covered before but I can?t seem to find it so I  
> apologize if it has.
>
>
>
> I am using AntlrWork 1.0b10 inside IntelliJ 5.1.2 and am getting a  
> compile error after generating the code.  It keeps telling me  
> ruleNestingLevel is undefined.  I have generated it from outside of  
> IDEA from just AntlrWorks itself and the code for the  
> ruleNestingLevel is not there (which is probably why it worked in  
> Eclipse for me).
Hi. Make sure to regenerate all lexers, which no longer should ref  
that rule nesting thing.  It works on all my tests etc..., but, that  
said, when I tried to rebuild the mantra language example yesterday i  
got similar issues...can you try antlr from command line?  Try to  
reduce to a simple grammar and send to me if it still fails.
thanks!
Ter

From Thomas.Jackson at microfocus.com  Fri Apr 20 09:43:15 2007
From: Thomas.Jackson at microfocus.com (Thomas Jackson III)
Date: Fri, 20 Apr 2007 12:43:15 -0400
Subject: [antlr-interest] AntlrWorks+Idea Question
In-Reply-To: <EB941BE6-FB22-4600-8767-D47851F31755@cs.usfca.edu>
References: <8818ADCA969F2F4DA513CEE078066DCA032F60A7@rock-exchange.microfocus.com>
	<EB941BE6-FB22-4600-8767-D47851F31755@cs.usfca.edu>
Message-ID: <8818ADCA969F2F4DA513CEE078066DCA032F6142@rock-exchange.microfocus.com>

I am attaching zip file that contains 3 Subdirectories... Each one
contains a readme.txt that illustrates what I did.  The generated output
should be there as well.


FYI...The only Lexer that is "wrong" is the one generated from
AntlrWorks from Within Idea(AntlrWorksInIdea subdirectory).  Which means
it's probably something between the Environemnt on IntelliJ and the
AntlrWorks plugin.

I hope this helps.

Thanks
Thomas

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Friday, April 20, 2007 11:32 AM
To: ANTLR Interest
Subject: Re: [antlr-interest] AntlrWorks+Idea Question


On Apr 20, 2007, at 8:17 AM, Thomas Jackson III wrote:

> This may have been covered before but I can't seem to find it so I  
> apologize if it has.
>
>
>
> I am using AntlrWork 1.0b10 inside IntelliJ 5.1.2 and am getting a  
> compile error after generating the code.  It keeps telling me  
> ruleNestingLevel is undefined.  I have generated it from outside of  
> IDEA from just AntlrWorks itself and the code for the  
> ruleNestingLevel is not there (which is probably why it worked in  
> Eclipse for me).
Hi. Make sure to regenerate all lexers, which no longer should ref  
that rule nesting thing.  It works on all my tests etc..., but, that  
said, when I tried to rebuild the mantra language example yesterday i  
got similar issues...can you try antlr from command line?  Try to  
reduce to a simple grammar and send to me if it still fails.
thanks!
Ter

This message has been scanned for viruses by MailController -
www.MailController.altohiway.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.zip
Type: application/x-zip-compressed
Size: 13028 bytes
Desc: test.zip
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070420/35d3ec7e/attachment.bin 

From parrt at cs.usfca.edu  Fri Apr 20 10:54:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 10:54:19 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <20070420160643.i0wd4r1mo084sgo0@webmail.palantir.co.za>
References: <20070420160643.i0wd4r1mo084sgo0@webmail.palantir.co.za>
Message-ID: <F7CBCCBA-30C5-4212-898A-9B774149D9F9@cs.usfca.edu>


On Apr 20, 2007, at 7:06 AM, craig at palantir.co.za wrote:

> Hi,
>
> Why does the grammar below mismatch on the space in the following  
> test input.

Looks ok to me. What exactly was the exception you got and which  
character position?

Ter
>
> grammar csv;
> options {
>    language=java;
> }
>
> r  : ID (COMMA ID)+ EOF;
> ID : 'a'..'z' + ;
> COMMA              :               ',';
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n')+ {$channel=HIDDEN;}
>     ;
>
> When I run with
> test, testing, testagain
>
> It is not ignoring the whitespace? Should $channel=HIDDEN not do  
> the trick here?
>
> Regards
> Craig
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>


From parrt at cs.usfca.edu  Fri Apr 20 10:54:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 10:54:50 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <40877ED3-7A16-41BB-A881-B5B981898984@wincent.com>
References: <20070420160643.i0wd4r1mo084sgo0@webmail.palantir.co.za>
	<40877ED3-7A16-41BB-A881-B5B981898984@wincent.com>
Message-ID: <A2BF5E79-1FAE-4F10-8DC6-817BDBD5051A@cs.usfca.edu>


On Apr 20, 2007, at 7:49 AM, Wincent Colaiuta wrote:

> El 20/4/2007, a las 16:06, craig at palantir.co.za escribi?:
>
>> When I run with
>> test, testing, testagain
>>
>> It is not ignoring the whitespace? Should $channel=HIDDEN not do  
>> the trick here?
>
> Are you running under the ANTLRWorks interpreter by any chance?
>
> I am very new to ANTLR myself, but one thing I've discovered is  
> that running things under the ANTLRWorks "Interpreter" tab is not  
> the same as running them under the debugger or from a compiled tool.
>
> Things like setting the channel don't work in the interpreter,  
> presumably because nothing is actually compiled before the  
> interpreter starts; as such any actions you define that set  
> channels or do anything else will have no effect. This is why your  
> rules fail to work when you have whitespace in your input.

Ah. you have to tell AW which rules of the whitespace or tell it to  
guess which ones.
Ter


From parrt at cs.usfca.edu  Fri Apr 20 10:56:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 10:56:21 -0700
Subject: [antlr-interest] Using ! operator in lexer rules
In-Reply-To: <78EBBD08-42DA-4527-975C-FE10F58087B3@wincent.com>
References: <D18618BA-266E-491A-B774-450DFC4FB37A@wincent.com>
	<78EBBD08-42DA-4527-975C-FE10F58087B3@wincent.com>
Message-ID: <DAEB399F-E1BD-430E-A386-8EC5D22C7497@cs.usfca.edu>


On Apr 20, 2007, at 4:36 AM, Wincent Colaiuta wrote:

> Replying to my own post with a more fleshed-out example grammar. My  
> question is, does the ! operator no longer have any effect in lexer  
> rules in ANTLR 3?

  At the moment, it does not work in version 3.
Ter


From parrt at cs.usfca.edu  Fri Apr 20 11:47:50 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 11:47:50 -0700
Subject: [antlr-interest] Submitting bug report?
In-Reply-To: <9CE1CFE6-0FDC-4E84-BEDB-08C9F8BDCECF@genome.stanford.edu>
References: <187F70FD-9859-4497-AA7B-205D0670ED52@genome.stanford.edu>
	<59E9B48B-8432-49FF-9076-FB62D834B4A8@cs.usfca.edu>
	<9CE1CFE6-0FDC-4E84-BEDB-08C9F8BDCECF@genome.stanford.edu>
Message-ID: <D2BF158D-64F7-4900-A485-58100B45078B@cs.usfca.edu>

Hi.  I have confirmed that this is a bug:

http://www.antlr.org:8888/browse/ANTLR-113

I know the issue. will fix soon.
Ter

On Apr 19, 2007, at 4:28 PM, Don Maier wrote:

> Sure enough:
>
> The grammar IDF.g is pasted below.  The recipe for failure is:
>
> 1)  Place grammar in ANTLRWorks 1.0b10.
> 2)  Check the grammar.   (ANTLRWorks reports "ok".)
> 3)  Generate the code, also using in ANTLRWorks.
> 4)  IDFLexer.java has two errors, at ll. 435, 509 due to a missing  
> '}' in an 'if' statement.
> 5) IDFParser.java has an error at l. 227 because the variable  
> 'rowheader' is undefined.
> 7) Both generated java files have a first line comment indicating  
> their antlr-3.0b7 provenance.   This makes me think that this  
> problem is unlikely to be one in ANTLRWorks, and not in ANTLR proper.
>
> My apologies, in advance, if this problem is the result of a  
> beginner's fumble.
>
> Also, I've not attached any files to avoid getting this message  
> entangled in spam blockers.   But I'm happy to supply the grammar  
> file, and the generated java files as attachments, if you wish.
>
> Regards,
> Don Maier
>
> ----------------------------------------------------
>
> grammar IDF;
> options { k=1; }
>
> tokens {
> 	LSB = '[';
>         RSB = ']';
>         Q   = '"';
>         SP  = ' ';
> 	TAB = '\t';
> }
>
> @lexer::header {
>
> }	
>
> @header {
>
> }
>
> @members {
> public static int lineNumber = 1;
> }
>
> file    : record (RECORD_SEPARATOR record)* EOF
>         { System.out.println("*** IDF Parse complete"); }
>        	;
> record  :
> 	{ System.out.print("*** Line " + lineNumber + ": "); }
> 	  header (cell_separator cell)*
> 	| empty_record
>         { System.out.println("\n"); lineNumber++; }
>        	;
> header  : rowHeader = standard_header
> 	| rowHeader = comment_header
> 	{ System.out.print("Header = " + rowHeader); }
> 	;
> standard_header
> 	: INVESTIGATION TITLE
> 	;		
> comment_header
> 	: COMMENT LSB BRACKETED_CONTENT RSB
> 	;
>
> empty_record
> 	: (SP|TAB)*
> 	;	
> cell    : empty_cell
> 	| content = cell_content
>    	| content = quoted_cell_content
> 	;
> empty_cell
> 	: (SP)*
> 	;
> cell_content
> 	: CONTENT
> 	;
> quoted_cell_content
> 	: QUOTED_CONTENT
> 	;
> cell_separator
> 	: TAB
> 	;
> 		
> // Keyword terminals
>
> INVESTIGATION
> 	: 'Investigation'
> 	;
> TITLE	: 'Title'
> 	;
> COMMENT : 'Comment'
> 	;
> 			
> // Lexer
>
> /* A sequence of one or more non-']' characters beginning and  
> ending with a non-space
> * character.
> */
> BRACKETED_CONTENT
> 	: ((~(RSB|SP|TAB|'\r'|'\n')) (~(RSB|TAB|'\r'|'\n'))*)? (~(RSB|SP| 
> TAB|'\r'|'\n'))
> 	;
> /* A sequence of one or more characters starting with a non-quote,  
> non-space character,
> * and ending with a non-space character (which could be the first  
> character).
> */
> CONTENT
> 	: (~(Q|SP|TAB|'\r'|'\n')) ((~(TAB|'\r'|'\n'))* (~(SP| 
> TAB|'\r'|'\n')))?
> 	;
> /* A quote-bracketed sequence of non-quote characters, though  
> permitting embedded
> * escaped quotes in the forma of '\"'.
> */
> QUOTED_CONTENT
> 	: Q! (~(Q|TAB|'\r'|'\n'))* (('\\'Q) (~(Q|TAB|'\r'|'\n'))*)* Q!
> 	;
> RECORD_SEPARATOR
> 	: ( '\r''\n' ) => '\r''\n' // Windows
>         | '\r'                     // Mac
>         | '\n'                     // Unix
>         ;
> 		
> WS      : (SP)+
> 	{ $channel = HIDDEN; }
> 	;
>
>
> ----------------------------------------------------
>
> On Apr 19, 2007, at 3:13 PM, Terence Parr wrote:
>
>>
>> On Apr 19, 2007, at 2:01 PM, Don Maier wrote:
>>
>>> Hi friends,
>>>
>>> Please forgive this note to the group from a newcomer.
>>>
>>> I'd like to submit a bug report describing a case where  
>>> antlr-3.0b7 generates invalid Java code for the lexer  
>>> (incorrectly constructed if-then-else statements),   I find  
>>> myself unable to get the issue navigator to do anything but let  
>>> me view existing defect reports -- which appear not to describe  
>>> the problem I've encountered.   Can anyone supply me with a few  
>>> hints?
>>
>> Hi Don,
>>
>> please post bugs to the list so we can decide if they really are ;)
>>
>> Thanks,
>> Ter
>
>
>


From parrt at cs.usfca.edu  Fri Apr 20 12:02:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 12:02:48 -0700
Subject: [antlr-interest] Submitting bug report?
In-Reply-To: <D2BF158D-64F7-4900-A485-58100B45078B@cs.usfca.edu>
References: <187F70FD-9859-4497-AA7B-205D0670ED52@genome.stanford.edu>
	<59E9B48B-8432-49FF-9076-FB62D834B4A8@cs.usfca.edu>
	<9CE1CFE6-0FDC-4E84-BEDB-08C9F8BDCECF@genome.stanford.edu>
	<D2BF158D-64F7-4900-A485-58100B45078B@cs.usfca.edu>
Message-ID: <AE904DA6-C29E-4B45-85F6-75C255DB98F1@cs.usfca.edu>


On Apr 20, 2007, at 11:47 AM, Terence Parr wrote:

> Hi.  I have confirmed that this is a bug:
>
> http://www.antlr.org:8888/browse/ANTLR-113
>
> I know the issue. will fix soon.

Ok, fixed.  Tweak Java.stg.  Change this template:

/** A DFA state that is actually the loopback decision of a closure
*  loop.  If end-of-token (EOT) predicts any of the targets then it
*  should act like a default clause (i.e., no error can be generated).
*  This is used only in the lexer so that for ('a')* on the end of a  
rule
*  anything other than 'a' predicts exiting.
*/
dfaLoopbackState 
(k,edges,eotPredictsAlt,description,stateNumber,semPredState) ::= <<
int LA<decisionNumber>_<stateNumber> = input.LA(<k>);<\n>
<edges; separator="\nelse "><\n>
<if(eotPredictsAlt)>
<if(!edges)>
alt<decisionNumber>=<eotPredictsAlt>; <! if no edges, don't need else !>
<else>
else {
     alt<decisionNumber>=<eotPredictsAlt>;
}<\n>
<endif>
<endif>
 >>

It now avoids an ELSE if no edges.

Ter

From fw at deneb.enyo.de  Fri Apr 20 12:51:10 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Fri, 20 Apr 2007 21:51:10 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <461CDD40.9080509@gmx.de> (Johannes Luber's message of "Wed, 11
	Apr 2007 15:06:08 +0200")
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
Message-ID: <87bqhig6z5.fsf@mid.deneb.enyo.de>

* Johannes Luber:

> tokens {
> 	GET='get';
> 	PUT='put';

> target
> 	:	FILE
> 	;
>
> You still have to change the target rule to allow arbitrary filenames
> and include predicates which filter the invalid sentences out (supposing
> all your examples were entirely inclusive).

By the way, is there an easy way to accept any non-empty,
non-whitespace string for FILE, including "get", "put", etc.?

From ma_laver at ciise.concordia.ca  Fri Apr 20 13:03:32 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Fri, 20 Apr 2007 16:03:32 -0400
Subject: [antlr-interest] Using AntlrWorks as our own language's editor?
Message-ID: <46291C94.1070602@ciise.concordia.ca>

Hello folks,

I've got around to implement my grammar with AntlrWorks, and I'm asked 
by my supervisor to essentially create a quick IDE for the language I 
created.

Now, how feasible would it be to modify AntlrWorks to make it deal with 
user-created languages as well as the Antlr language? Anybody ever tried?

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From lgcraymer at yahoo.com  Fri Apr 20 13:09:59 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 20 Apr 2007 13:09:59 -0700 (PDT)
Subject: [antlr-interest] Using AntlrWorks as our own language's editor?
In-Reply-To: <46291C94.1070602@ciise.concordia.ca>
Message-ID: <178474.97139.qm@web55912.mail.re3.yahoo.com>

Jean will have to answer for ANTLRWorks, but you might
take a look at the tools for developing plugin editors
for eclipse.  The last time I looked, the hard part
was lack of documentation and the implementation was
relatively easy.  There are also examples out there
for Python, Perl, and other language editors written
as eclipse plugins.

--Loring

--- Marc-Andr? Laverdi?re
<ma_laver at ciise.concordia.ca> wrote:

> Hello folks,
> 
> I've got around to implement my grammar with
> AntlrWorks, and I'm asked 
> by my supervisor to essentially create a quick IDE
> for the language I 
> created.
> 
> Now, how feasible would it be to modify AntlrWorks
> to make it deal with 
> user-created languages as well as the Antlr
> language? Anybody ever tried?
> 
> -- 
> Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in
> progress)
> Computer Security Laboratory - Laboratoire de
> s?curit? informatique
> CIISE, Universit? Concordia University, Montr?al,
> Qu?bec, Canada
> www.ciise.concordia.ca
> 
> /"\
> \ /    ASCII Ribbon Campaign
>   X      against HTML e-mail
> / \
> 
> "Perseverance must finish its work so that you may
> be mature and 
> complete, not lacking anything." -James 1:4
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From jaluber at gmx.de  Fri Apr 20 13:16:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 20 Apr 2007 22:16:57 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <87bqhig6z5.fsf@mid.deneb.enyo.de>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<87bqhig6z5.fsf@mid.deneb.enyo.de>
Message-ID: <46291FB9.1020703@gmx.de>

Florian Weimer wrote:
 > By the way, is there an easy way to accept any non-empty,
> non-whitespace string for FILE, including "get", "put", etc.?
> 

Your wish is my command :D

<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>

Best regards,
Johannes Luber

From jaluber at gmx.de  Fri Apr 20 14:01:17 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 20 Apr 2007 23:01:17 +0200
Subject: [antlr-interest] Bug in ANTLR with +=, the second
Message-ID: <46292A1D.8070506@gmx.de>

Hello,

I think, I've discovered another bug. The rule
HEXADECIMAL_ESCAPE_SEQUENCE in the following grammar:

grammar Test2;

start
   :	HEXADECIMAL_ESCAPE_SEQUENCE
   ;

HEXADECIMAL_ESCAPE_SEQUENCE
	:	'\\x' (h+=HEX_DIGIT)+ {$h.size()<=4}? // Restrict the number of
HEX_DIGITs to a maximum of 4
	;
fragment HEX_DIGIT
	:	'0'..'9'
	|	'A'..'F'
	|	'a'..'f'
	;

generates the following code:

   public final void mHEXADECIMAL_ESCAPE_SEQUENCE() throws
RecognitionException {
        try {
            int _type = HEXADECIMAL_ESCAPE_SEQUENCE;
            // D:\\tmp\\antlrworks\\Test2.g:12:4: ( '\\\\x' (h+=
HEX_DIGIT )+ {...}?)
            // D:\\tmp\\antlrworks\\Test2.g:12:4: '\\\\x' (h+= HEX_DIGIT
)+ {...}?
            {
            match("\\x");

            // D:\\tmp\\antlrworks\\Test2.g:12:10: (h+= HEX_DIGIT )+
            int cnt1=0;
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( ((LA1_0>='0' && LA1_0<='9')||(LA1_0>='A' &&
LA1_0<='F')||(LA1_0>='a' && LA1_0<='f')) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // D:\\tmp\\antlrworks\\Test2.g:12:11: h+= HEX_DIGIT
            	    {
            	    int hStart = getCharIndex();
            	    mHEX_DIGIT();
            	    Token h = new CommonToken(input,
Token.INVALID_TOKEN_TYPE, Token.DEFAULT_CHANNEL, hStart, getCharIndex()-1);

            	    }
            	    break;

            	default :
            	    if ( cnt1 >= 1 ) break loop1;
                        EarlyExitException eee =
                            new EarlyExitException(1, input);
                        throw eee;
                }
                cnt1++;
            } while (true);

            if ( !(list_h.size()<=4) ) {
                throw new FailedPredicateException(input,
"HEXADECIMAL_ESCAPE_SEQUENCE", "$h.size()<=4");
            }

            }

            this.type = _type;
        }
        finally {
        }
    }
    // $ANTLR end HEXADECIMAL_ESCAPE_SEQUENCE

As you may not see, the validating predicate references the variable
list_h, which is neither defined nor receives the h tokens.

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Fri Apr 20 14:17:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Apr 2007 14:17:27 -0700
Subject: [antlr-interest] Bug in ANTLR with +=, the second
In-Reply-To: <46292A1D.8070506@gmx.de>
References: <46292A1D.8070506@gmx.de>
Message-ID: <7D88E5ED-3743-44A1-9E1D-D07DE4DE01EF@cs.usfca.edu>


On Apr 20, 2007, at 2:01 PM, Johannes Luber wrote:

> Hello,
>
> I think, I've discovered another bug. The rule
> HEXADECIMAL_ESCAPE_SEQUENCE in the following grammar:
>
> grammar Test2;
>
> start
>    :	HEXADECIMAL_ESCAPE_SEQUENCE
>    ;
>
> HEXADECIMAL_ESCAPE_SEQUENCE
> 	:	'\\x' (h+=HEX_DIGIT)+ {$h.size()<=4}? // Restrict the number of
> HEX_DIGITs to a maximum of 4
> 	;
> fragment HEX_DIGIT
> 	:	'0'..'9'
> 	|	'A'..'F'
> 	|	'a'..'f'
> 	;

Thanks. I have a reproduced and will fix before I push this next  
build.  I'm just verifying a few more things.  I also have school  
duties til about 1pm tomorrow starting now :(

Ter


From bace.spam at gmx.net  Fri Apr 20 14:48:14 2007
From: bace.spam at gmx.net (bace.spam at gmx.net)
Date: Fri, 20 Apr 2007 23:48:14 +0200
Subject: [antlr-interest] grammar notation (every char except...)
Message-ID: <20070420214814.66440@gmx.net>

Hi all,

I am totally new to antlr, but I have some practice with other parser gernerators. I want to recognize something like 

"// comment/goes^&on //" and
"## comment/goes^&on ##"

So I want to allow everything inside, except the "//" and except the "##". It is a principle to let the tokens as much as atomic as possible, isn't it. I think 

TOKEN_COMMENT : "//" .* "//";

is not recommended. Better should be

TOKEN_SLASH : '/';

I could also imagine to define

TOKEN_TAG : "//";

instead of TOKEN_SLASH.


How can I specify the content (all chars allowed, except "//") in the grammar with antlr (I use 2.7.7)?

comment
  :  TOKEN_TAG ~("//" | "##")* TOKEN_TAG
  ;

and a lot of other further notations like ( . | ~"//" | ~"##" )* are not accepted. Has anyone an idea to get this problem solved?

Thank you very much and looking forward to your reply,
Markus
-- 
"Feel free" - 10 GB Mailbox, 100 FreeSMS/Monat ...
Jetzt GMX TopMail testen: http://www.gmx.net/de/go/topmail

From jaluber at gmx.de  Fri Apr 20 15:08:16 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 21 Apr 2007 00:08:16 +0200
Subject: [antlr-interest] grammar notation (every char except...)
In-Reply-To: <20070420214814.66440@gmx.net>
References: <20070420214814.66440@gmx.net>
Message-ID: <462939D0.7050300@gmx.de>

bace.spam at gmx.net wrote:
> Hi all,
> 
> I am totally new to antlr, but I have some practice with other parser gernerators. I want to recognize something like 

I can help only with parser grammars for v3, which will be probably
released next month as a final, so I suggest to learn v3 instead. You
can download the betas, though, and use ANTLRworks. A few points of
interest are shown here:
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
If you still prefer 2.7.7, you may get a few pointers nonetheless.

A general difference between ANTLR 3 and 2.7.7, that v3 uses '' instead
"" as string delimiters.
> 
> "// comment/goes^&on //" and
> "## comment/goes^&on ##"
> 
> So I want to allow everything inside, except the "//" and except the "##". It is a principle to let the tokens as much as atomic as possible, isn't it. I think 

Do you want to allow '##' in '//' comments and the other way around? It
looks that way.

> TOKEN_COMMENT : "//" .* "//";
> 
> is not recommended. Better should be
> 
> TOKEN_SLASH : '/';
> 
> I could also imagine to define
> 
> TOKEN_TAG : "//";
> 
> instead of TOKEN_SLASH.
> 
> 
> How can I specify the content (all chars allowed, except "//") in the grammar with antlr (I use 2.7.7)?
> 
> comment
>   :  TOKEN_TAG ~("//" | "##")* TOKEN_TAG
>   ;

Adapting the ML_COMMENT rule from the tutorial:

TOKEN_COMMENT : '//' ( options {greedy=false;} : . )* '//' ;

This matches multiline comments, as . recognizes the '\n'.

> and a lot of other further notations like ( . | ~"//" | ~"##" )* are not accepted. Has anyone an idea to get this problem solved?

( . | ~"//" | ~"##" )* would recognize everything. (~( '//' | '##' ))*
may result in your desired behaviour, so I can't guarantee that ~ works
on strings, too.

Best regards,
Johannes Luber

From bace.spam at gmx.net  Fri Apr 20 15:49:01 2007
From: bace.spam at gmx.net (bace.spam at gmx.net)
Date: Sat, 21 Apr 2007 00:49:01 +0200
Subject: [antlr-interest] grammar notation (every char except...)
In-Reply-To: <462939D0.7050300@gmx.de>
References: <20070420214814.66440@gmx.net> <462939D0.7050300@gmx.de>
Message-ID: <20070420224901.286410@gmx.net>

> > Hi all,
> > 
> > I am totally new to antlr, but I have some practice with other parser
> gernerators. I want to recognize something like 
> 
> I can help only with parser grammars for v3, which will be probably
> released next month as a final, so I suggest to learn v3 instead. You
> can download the betas, though, and use ANTLRworks. A few points of
> interest are shown here:
> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
> If you still prefer 2.7.7, you may get a few pointers nonetheless.

Okay I will change ;) I didn't use v3 because there is no eclipse integration available.

> 
> A general difference between ANTLR 3 and 2.7.7, that v3 uses '' instead
> "" as string delimiters.
> > 
> > "// comment/goes^&on //" and
> > "## comment/goes^&on ##"
> > 
> > So I want to allow everything inside, except the "//" and except the
> "##". It is a principle to let the tokens as much as atomic as possible, isn't
> it. I think 
> 
> Do you want to allow '##' in '//' comments and the other way around? It
> looks that way.

Yes I want, that is similar to a markup language, allow lot of tags between normal text, but the text is not restricted to letter, digits. So I would like to use the other way: allow everything, except these 2-3 character tags.

> 
> > TOKEN_COMMENT : "//" .* "//";
> > 
> > is not recommended. Better should be
> > 
> > TOKEN_SLASH : '/';
> > 
> > I could also imagine to define
> > 
> > TOKEN_TAG : "//";
> > 
> > instead of TOKEN_SLASH.
> > 
> > 
> > How can I specify the content (all chars allowed, except "//") in the
> grammar with antlr (I use 2.7.7)?
> > 
> > comment
> >   :  TOKEN_TAG ~("//" | "##")* TOKEN_TAG
> >   ;
> 
> Adapting the ML_COMMENT rule from the tutorial:
> 
> TOKEN_COMMENT : '//' ( options {greedy=false;} : . )* '//' ;
> 
> This matches multiline comments, as . recognizes the '\n'.
> 

Yes I tried this to, but (as above) I want to allow some other recognized tags within the comment, example:
"// bla ## bla ## bla //"


> > and a lot of other further notations like ( . | ~"//" | ~"##" )* are not
> accepted. Has anyone an idea to get this problem solved?
> 
> ( . | ~"//" | ~"##" )* would recognize everything. (~( '//' | '##' ))*
> may result in your desired behaviour, so I can't guarantee that ~ works
> on strings, too.
>

not in 2.7.7 ;)
 
> Best regards,
> Johannes Luber

THANKS,
Markus
-- 
"Feel free" - 10 GB Mailbox, 100 FreeSMS/Monat ...
Jetzt GMX TopMail testen: http://www.gmx.net/de/go/topmail

-- 
"Feel free" - 10 GB Mailbox, 100 FreeSMS/Monat ...
Jetzt GMX TopMail testen: http://www.gmx.net/de/go/topmail

From jaluber at gmx.de  Fri Apr 20 15:53:43 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 21 Apr 2007 00:53:43 +0200
Subject: [antlr-interest] How to use LT and LA in predicates?
Message-ID: <46294477.9070808@gmx.de>

Hello,

in the beta book Terence wrote, that one has to define the isTypeName()
method in this rule somewhere else:

type_id
   :  {isTypeName(input.LT(1).getText())}? ID
   ;

Problem is, that LT seems to return only an integer after Eclipse syntax
analyzer. So how do I get the text? In another example

primary
  :  {isType(input.LT(1))}? ID '(' expr ')' //ctor-styletypecast
  ;

the getText() method doesn't seem needed. How does that work? Are there
any tutorials explaining the use of those methods in more detail? The
beta book is lacking there. Another thing I miss is a description how
actions like @header work and how many there are of them.

Best regards,
Johannes Luber

From fw at deneb.enyo.de  Sat Apr 21 03:04:34 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Sat, 21 Apr 2007 12:04:34 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <46291FB9.1020703@gmx.de> (Johannes Luber's message of "Fri, 20
	Apr 2007 22:16:57 +0200")
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<87bqhig6z5.fsf@mid.deneb.enyo.de> <46291FB9.1020703@gmx.de>
Message-ID: <87fy6u9h71.fsf@mid.deneb.enyo.de>

* Johannes Luber:

> Florian Weimer wrote:
>  > By the way, is there an easy way to accept any non-empty,
>> non-whitespace string for FILE, including "get", "put", etc.?
>> 
>
> Your wish is my command :D
>
> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>

Thanks, but I don't think it's that easy.  For instance, the grammar
does not parse "get data from data".

From dave at badgers-in-foil.co.uk  Sat Apr 21 08:05:16 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 21 Apr 2007 15:05:16 +0000
Subject: [antlr-interest] How to use LT and LA in predicates?
In-Reply-To: <46294477.9070808@gmx.de>
References: <46294477.9070808@gmx.de>
Message-ID: <20070421150516.GA20198@badgers-in-foil.co.uk>

On Sat, Apr 21, 2007 at 12:53:43AM +0200, Johannes Luber wrote:
> in the beta book Terence wrote, that one has to define the isTypeName()
> method in this rule somewhere else:
> 
> type_id
>    :  {isTypeName(input.LT(1).getText())}? ID
>    ;
> 
> Problem is, that LT seems to return only an integer after Eclipse syntax
> analyzer. So how do I get the text?

In the parser, 'input' is a TokenStream instance, which defines,

  LT(k) => Token

and (via IntStream, its superclass),

  LA(k) => int


Something must be mixed up?


ta,
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Sat Apr 21 18:00:13 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Apr 2007 18:00:13 -0700
Subject: [antlr-interest] new daily build available
Message-ID: <70A9E98B-5078-466E-BB6E-AC34F7C1413A@cs.usfca.edu>

Hi,

I just pushed a new build with a huge number of bug fixes and, more  
importantly, a complete reconstruction of the AST rewrite mechanism.   
The new mechanism underneath is much better and more consistent.   
This passes all my unit tests (added a whole bunch more as well) and  
passes all of the usual examples.  Please grab it and see if it works  
on your Java stuff.  Naturally, the other targets are now broken for  
this build until they can catch up with this   group of template  
updates.

http://www.antlr.org/download/build/antlr-04-21-2007.17.tar.gz

See the following post for more information on the update:

http://www.antlr.org/pipermail/antlr-dev/2007-April/001060.html

As usual the README.txt file has more information as well.

Ter

From parrt at cs.usfca.edu  Sat Apr 21 18:04:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 21 Apr 2007 18:04:27 -0700
Subject: [antlr-interest] v3 final release projection
Message-ID: <B54941F9-9A8C-4DC5-A9AC-9814754B0540@cs.usfca.edu>

Hi,

This latest push is my last major fix I needed to do.  So now, it's  
all about little bug fixes and getting some more doc up on the site.   
Oh, I will have to think about how the site should change for the v3  
final release.

Book is still on schedule to be printed early May.  I think the  
software will be ready once the target developers finish.

It's almost "done"!  Four years of obsessive research and  
develop...almost coming to an close.  I'll naturally have to keep  
working on the software, but it's in the useful stage now once we  
shake out any little issues.  Woohoo!

Ter

From antlr-list at arizona-software.ch  Sat Apr 21 19:45:02 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sat, 21 Apr 2007 19:45:02 -0700
Subject: [antlr-interest] Using AntlrWorks as our own language's editor?
In-Reply-To: <178474.97139.qm@web55912.mail.re3.yahoo.com>
References: <178474.97139.qm@web55912.mail.re3.yahoo.com>
Message-ID: <E72E7A8E-0598-49E9-B9D2-02A2110CB7AE@arizona-software.ch>

Yes, I think you better look at existing tools dedicated for that  
purpose... ANTLRWorks is specifically designed for ANTLR 3 grammar.

Regards,

Jean

On Apr 20, 2007, at 1:09 PM, Loring Craymer wrote:

> Jean will have to answer for ANTLRWorks, but you might
> take a look at the tools for developing plugin editors
> for eclipse.  The last time I looked, the hard part
> was lack of documentation and the implementation was
> relatively easy.  There are also examples out there
> for Python, Perl, and other language editors written
> as eclipse plugins.
>
> --Loring
>
> --- Marc-Andr? Laverdi?re
> <ma_laver at ciise.concordia.ca> wrote:
>
>> Hello folks,
>>
>> I've got around to implement my grammar with
>> AntlrWorks, and I'm asked
>> by my supervisor to essentially create a quick IDE
>> for the language I
>> created.
>>
>> Now, how feasible would it be to modify AntlrWorks
>> to make it deal with
>> user-created languages as well as the Antlr
>> language? Anybody ever tried?
>>
>> -- 
>> Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in
>> progress)
>> Computer Security Laboratory - Laboratoire de
>> s?curit? informatique
>> CIISE, Universit? Concordia University, Montr?al,
>> Qu?bec, Canada
>> www.ciise.concordia.ca
>>
>> /"\
>> \ /    ASCII Ribbon Campaign
>>   X      against HTML e-mail
>> / \
>>
>> "Perseverance must finish its work so that you may
>> be mature and
>> complete, not lacking anything." -James 1:4
>>
>
>
> __________________________________________________
> Do You Yahoo!?
> Tired of spam?  Yahoo! Mail has the best spam protection around
> http://mail.yahoo.com


From jaluber at gmx.de  Sun Apr 22 13:57:46 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 22 Apr 2007 22:57:46 +0200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <87fy6u9h71.fsf@mid.deneb.enyo.de>
References: <461C7895.9080005@orcldba.com>
	<461CDD40.9080509@gmx.de>	<87bqhig6z5.fsf@mid.deneb.enyo.de>
	<46291FB9.1020703@gmx.de> <87fy6u9h71.fsf@mid.deneb.enyo.de>
Message-ID: <462BCC4A.6020702@gmx.de>

Florian Weimer wrote:
> * Johannes Luber:
> 
>> Florian Weimer wrote:
>>  > By the way, is there an easy way to accept any non-empty,
>>> non-whitespace string for FILE, including "get", "put", etc.?
>>>
>> Your wish is my command :D
>>
>> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
> 
> Thanks, but I don't think it's that easy.  For instance, the grammar
> does not parse "get data from data".

Oh, I thought you didn't want only to parse "file" at the end. As it is,
 the grammar disallows keywords as filenames. If you want to allow
really everything, you have to apply the following steps:

1. Create a rule

ID : ('a'..'z'|'A'..'Z'|'.'}+;

Add additional characters at your leisure.

2. Change FILE to

FILE : ID;

3. Exchange all token rules with normal grammar rules like:

GET : {input.LT(1).getText().equals("get")}? ID;

Best regards,
Johannes Luber

From jaluber at gmx.de  Sun Apr 22 14:25:53 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 22 Apr 2007 23:25:53 +0200
Subject: [antlr-interest] How to use LT and LA in predicates?
In-Reply-To: <20070421150516.GA20198@badgers-in-foil.co.uk>
References: <46294477.9070808@gmx.de>
	<20070421150516.GA20198@badgers-in-foil.co.uk>
Message-ID: <462BD2E1.1080200@gmx.de>

David Holroyd wrote:
> On Sat, Apr 21, 2007 at 12:53:43AM +0200, Johannes Luber wrote:
>> in the beta book Terence wrote, that one has to define the isTypeName()
>> method in this rule somewhere else:
>>
>> type_id
>>    :  {isTypeName(input.LT(1).getText())}? ID
>>    ;
>>
>> Problem is, that LT seems to return only an integer after Eclipse syntax
>> analyzer. So how do I get the text?
> 
> In the parser, 'input' is a TokenStream instance, which defines,
> 
>   LT(k) => Token
> 
> and (via IntStream, its superclass),
> 
>   LA(k) => int
> 
> 
> Something must be mixed up?

I've been trying to use in my grammar a few predicates to determine the
correctness of some input. The first problem was that I defined the
functions all in the parser, but for the following rule I got the error,
that the function isn't defined in the lexer class:

fragment UNICODE_ESCAPE_SEQUENCE[String unicodeClass]
	:	'\\u' {isInCharacterClass($unicodeClass, input.LT(1).getText() +
input.LT(2).getText()
+ input.LT(3).getText() + input.LT(4).getText())}?
HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	;

isInCharacterClass() takes to parameters: The first one is the character
class to which the second one may belong. Both are strings and for the
second one the format is simply XXXX (or XXXXXXXX for the second
alternative which I deleted for space reasons).

Moving this function and all accompanying functionality to the lexer
solved the first problem, but then LT() seems only to return an integer
alone.

Here is the generated code for the above rule:

/* D:\\Studium\\Diplomarbeit\\CSharpML\\CSharp3.g:539:4: '\\\\u' {...}?
HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT */
                    {
                    match("\\u"); if (failed) return ;

                    if ( !(isInCharacterClass(unicodeClass,
input.LT(1).getText() + input.LT(2).getText() + input.LT(3).getText() +
input.LT(4).getText())) ) {
                        if (backtracking>0) {failed=true; return ;}
                        throw new FailedPredicateException(input,
"UNICODE_ESCAPE_SEQUENCE", "isInCharacterClass($unicodeClass,
input.LT(1).getText() + input.LT(2).getText()\r\n\t\t\t   +
input.LT(3).getText() + input.LT(4).getText())");
                    }
                    mHEX_DIGIT(); if (failed) return ;
                    mHEX_DIGIT(); if (failed) return ;
                    mHEX_DIGIT(); if (failed) return ;
                    mHEX_DIGIT(); if (failed) return ;

                    }

The third problem I have is with these rules:

identifier
	:	{!isKeyword(input.LT(1).getText())}?=> AVAILABLE_IDENTIFIER
	|	'@' IDENTIFIER_OR_KEYWORD
	;
	
fragment AVAILABLE_IDENTIFIER
	:	IDENTIFIER_OR_KEYWORD /* An identifier_or_keyword that is not a
keyword */
	;

I have used {}?=> to enforce the use of the predicate, as otherwise the
presence or absence of an @ distinguishes between the cases. Now I
receive the error, that the class IntStream doesn't have the method
getText(). The following rule snippet is generated:

else if ( (LA58_0==AVAILABLE_IDENTIFIER) &&
(!isKeyword(input.LT(1).getText()))) {s = 3;}

So what I am doing wrong?

Best regards,
Johannes Luber

From thomas at tzis.net  Sun Apr 22 14:24:11 2007
From: thomas at tzis.net (Thomas Zangl - Home)
Date: Sun, 22 Apr 2007 23:24:11 +0200
Subject: [antlr-interest] Help with AST
Message-ID: <SAK20070422$7F1B7A01.$0A86AC0C@helio>

 
Dear List!

I created a simple grammer based upon the pascal grammer in the dragon
book. Let's consider this rule:

(This are the options:
class PascalParser extends Parser;
options {
  k = 2;                           // two token lookahead
  exportVocab=Pascal;              // Call its vocabulary "Pascal"
  codeGenMakeSwitchThreshold = 999;  // Some optimizations
  codeGenBitsetTestThreshold = 999;
  defaultErrorHandler = true;      // Do generate parser error handlers
  buildAST = true;
  ASTLabelType = "org.cb.PascalAST";
}
)

program:   PROGRAM^<AST=org.cb.PROGRAMNode> ID args SEM!
			declerations
			subprogram_declerations
			compound_statement
			DOT
    ;      
    
args: (LPAREN^<AST=org.cb.ARGNode> identifier_list RPAREN!)?;
identifier_list: ID<AST=org.cb.TEMPNode> (COMMA! ID<AST=org.cb.TEMPNode>)*;
declerations: (VAR^<AST=org.cb.VARNode> (identifier_list COLON! type
SEM^)*)?; type: standard_type
      | ARRAY LBRACK NUM TYPELIST NUM RBRACK OF standard_type ;
standard_type: INTEGER<AST=org.cb.INTEGERNode> | REAL;
subprogram_declerations: (subprogram_decleration SEM!)*;
subprogram_decleration: subprogram_head declerations compound_statement;

Here are my questions:

What does the ^ and the ! mean? 
How can I create an AST which looks like this:

VAR  -> Variable1 (of type standard_type)
    |-> Variable2 (of type standard_type2)
etc.?

So, the VAR node is the root (lets call it VARLIST) and each children is
a decleration (lets call it VARIABLE) which has a type. Sample pascal
code would be: 

var
  intOne, intTwo: Integer;
  floatOne, floatTwo: Real;

The desired tree would be:
VARLIST -> VAR(intOne, Integer)
        |-> VAR(intTwo, Integer)
        |-> VAR(floatOne, Real)
        |-> VAR(floatTwo, Real)

How to define this in ANTLR?

The next step would be some kind of visitor pattern (or is it called
treewalker in antlr?) which traverses a given AST. I need to react on
each kind of statement: e.g. I need to print the program name when I
encounter a PROGRAMNODE, I need to collect all children and its type if
I encounter a VARLIST node, etc.

Please help! I would really appriciate source code and samples which
clear up things. Please be as verbose as possible. I read a lot of
ANTLR docs but they are more confusing then helpful. 

Best regards,
-- 
----------------------------------------------------------------
,yours Thomas Zangl, Bakk.rer.soc.oec. - thomas at tzis.net -
- Freelancer - IT Consulting & Software Development -
- Student of Software Development-Economy (Master) -

From lgcraymer at yahoo.com  Sun Apr 22 15:07:17 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 22 Apr 2007 15:07:17 -0700 (PDT)
Subject: [antlr-interest] How to use LT and LA in predicates?
In-Reply-To: <462BD2E1.1080200@gmx.de>
Message-ID: <283368.32755.qm@web55912.mail.re3.yahoo.com>

In the parser, input is a TokenStream.  In a Lexer, it
is an IntStream and returns ints (characters).

--Loring

--- Johannes Luber <jaluber at gmx.de> wrote:

> David Holroyd wrote:
> > On Sat, Apr 21, 2007 at 12:53:43AM +0200, Johannes
> Luber wrote:
> >> in the beta book Terence wrote, that one has to
> define the isTypeName()
> >> method in this rule somewhere else:
> >>
> >> type_id
> >>    :  {isTypeName(input.LT(1).getText())}? ID
> >>    ;
> >>
> >> Problem is, that LT seems to return only an
> integer after Eclipse syntax
> >> analyzer. So how do I get the text?
> > 
> > In the parser, 'input' is a TokenStream instance,
> which defines,
> > 
> >   LT(k) => Token
> > 
> > and (via IntStream, its superclass),
> > 
> >   LA(k) => int
> > 
> > 
> > Something must be mixed up?
> 
> I've been trying to use in my grammar a few
> predicates to determine the
> correctness of some input. The first problem was
> that I defined the
> functions all in the parser, but for the following
> rule I got the error,
> that the function isn't defined in the lexer class:
> 
> fragment UNICODE_ESCAPE_SEQUENCE[String
> unicodeClass]
> 	:	'\\u' {isInCharacterClass($unicodeClass,
> input.LT(1).getText() +
> input.LT(2).getText()
> + input.LT(3).getText() + input.LT(4).getText())}?
> HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
> 	;
> 
> isInCharacterClass() takes to parameters: The first
> one is the character
> class to which the second one may belong. Both are
> strings and for the
> second one the format is simply XXXX (or XXXXXXXX
> for the second
> alternative which I deleted for space reasons).
> 
> Moving this function and all accompanying
> functionality to the lexer
> solved the first problem, but then LT() seems only
> to return an integer
> alone.
> 
> Here is the generated code for the above rule:
> 
> /*
>
D:\\Studium\\Diplomarbeit\\CSharpML\\CSharp3.g:539:4:
> '\\\\u' {...}?
> HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT */
>                     {
>                     match("\\u"); if (failed) return
> ;
> 
>                     if (
> !(isInCharacterClass(unicodeClass,
> input.LT(1).getText() + input.LT(2).getText() +
> input.LT(3).getText() +
> input.LT(4).getText())) ) {
>                         if (backtracking>0)
> {failed=true; return ;}
>                         throw new
> FailedPredicateException(input,
> "UNICODE_ESCAPE_SEQUENCE",
> "isInCharacterClass($unicodeClass,
> input.LT(1).getText() +
> input.LT(2).getText()\r\n\t\t\t   +
> input.LT(3).getText() + input.LT(4).getText())");
>                     }
>                     mHEX_DIGIT(); if (failed) return
> ;
>                     mHEX_DIGIT(); if (failed) return
> ;
>                     mHEX_DIGIT(); if (failed) return
> ;
>                     mHEX_DIGIT(); if (failed) return
> ;
> 
>                     }
> 
> The third problem I have is with these rules:
> 
> identifier
> 	:	{!isKeyword(input.LT(1).getText())}?=>
> AVAILABLE_IDENTIFIER
> 	|	'@' IDENTIFIER_OR_KEYWORD
> 	;
> 	
> fragment AVAILABLE_IDENTIFIER
> 	:	IDENTIFIER_OR_KEYWORD /* An identifier_or_keyword
> that is not a
> keyword */
> 	;
> 
> I have used {}?=> to enforce the use of the
> predicate, as otherwise the
> presence or absence of an @ distinguishes between
> the cases. Now I
> receive the error, that the class IntStream doesn't
> have the method
> getText(). The following rule snippet is generated:
> 
> else if ( (LA58_0==AVAILABLE_IDENTIFIER) &&
> (!isKeyword(input.LT(1).getText()))) {s = 3;}
> 
> So what I am doing wrong?
> 
> Best regards,
> Johannes Luber
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From christianhofmann_de at yahoo.de  Sun Apr 22 15:12:25 2007
From: christianhofmann_de at yahoo.de (Christian Ulrich)
Date: Mon, 23 Apr 2007 00:12:25 +0200 (CEST)
Subject: [antlr-interest] need help on simple grammar
Message-ID: <59214.65815.qm@web26514.mail.ukl.yahoo.com>

Hello,

I'm thinking about a simple problem and how to solve
it using ANTLR (I'm a beginner ....).
I'd like to parse an initialisation file e.g.
"win.ini". 
The file contains sections "[section_name]" and
key-value pairs "key=value".
Not all sections and key-value pairs are known and so
I'd like to find only some interesting of them.

I used ANTLRWorks interpreter with this sample input:
(KeyX could be any non-ambiguous identifier)
On 'Key1' or 'Key4' I'd like to call a special rule
and parse the value. Other key-values should be
skipped.

[MySection]
Key1=val1
Key2=val2
Key3=val3
:
KeyX=valX

At the first step I omitted the "=value"
Here are some definitions I've made:

BEGIN_SECTION : '[' ;
END_SECTION : ']' ;
MYSECTION : 'MySection' ;
KEY1 : 'Key1';
KEY4 : 'Key4';
KEYX : ('a'..'z'|'A'..'Z'|'_')+ ; // match other keys

ini_file :	
	my_section
	( section_keys )+;

my_section 	: 
	BEGIN_SECTION MYSECTION END_SECTION
	;

section_keys :
	  { KEY1 }? key_1
	| { KEY4 }? key_4
	| { KEYX }? key_x;

key_1 : ...;

key_4 : ...;

key_x : ...; // skip

It does not work!
Maybe anyone could give me a hint to solve such a
problem using ANTLR.

Thanks in advance

Regards
Christian


      __________________________________  Kennt man wirklich jeden ?ber 3 Ecken? Die Antworten gibt's bei Yahoo! Clever. www.yahoo.de/clever

From antlr at mirality.co.nz  Mon Apr 23 01:05:34 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 23 Apr 2007 20:05:34 +1200
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <462BCC4A.6020702@gmx.de>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<87bqhig6z5.fsf@mid.deneb.enyo.de> <46291FB9.1020703@gmx.de>
	<87fy6u9h71.fsf@mid.deneb.enyo.de> <462BCC4A.6020702@gmx.de>
Message-ID: <20070423080527.7CDE619052B@www.antlr.org>

At 08:57 23/04/2007, Johannes Luber wrote:
 >FILE : ID;
 >
 >3. Exchange all token rules with normal grammar rules like:
 >
 >GET : {input.LT(1).getText().equals("get")}? ID;

Another approach, which avoids the predicate (and so is slightly 
more "pure" grammar) is to do something like this:

tokens {
   GET = 'get';
   PUT = 'put';
}
...
keyword: GET | PUT;
target: ID | keyword;

This is a bit more work, since every time you add a keyword you 
not only have to add it as a token but you also have to add it to 
the keyword rule.  You also need to get the order of lexer token 
definitions correct, because despite what someone posted last week 
it does appear to make a difference (at least it did when I tried 
it).

Plus, while this will match "get" as a filename, the token type 
will still be GET, not ID.  If that's important to you, I think 
you can override that with rewrite rules, but I haven't played 
with those long enough to give you a concrete example.


From dave at badgers-in-foil.co.uk  Mon Apr 23 03:40:57 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 23 Apr 2007 10:40:57 +0000
Subject: [antlr-interest] Need help with simple grammar
In-Reply-To: <20070423080527.7CDE619052B@www.antlr.org>
References: <461C7895.9080005@orcldba.com> <461CDD40.9080509@gmx.de>
	<87bqhig6z5.fsf@mid.deneb.enyo.de> <46291FB9.1020703@gmx.de>
	<87fy6u9h71.fsf@mid.deneb.enyo.de> <462BCC4A.6020702@gmx.de>
	<20070423080527.7CDE619052B@www.antlr.org>
Message-ID: <20070423104057.GA19301@badgers-in-foil.co.uk>

On Mon, Apr 23, 2007 at 08:05:34PM +1200, Gavin Lambert wrote:
> At 08:57 23/04/2007, Johannes Luber wrote:
> >FILE : ID;
> >
> >3. Exchange all token rules with normal grammar rules like:
> >
> >GET : {input.LT(1).getText().equals("get")}? ID;
> 
> Another approach, which avoids the predicate (and so is slightly 
> more "pure" grammar) is to do something like this:
> 
> tokens {
>   GET = 'get';
>   PUT = 'put';
> }
> ...
> keyword: GET | PUT;
> target: ID | keyword;
> 
> This is a bit more work, since every time you add a keyword you 
> not only have to add it as a token but you also have to add it to 
> the keyword rule.  You also need to get the order of lexer token 
> definitions correct, because despite what someone posted last week 
> it does appear to make a difference (at least it did when I tried 
> it).
> 
> Plus, while this will match "get" as a filename, the token type 
> will still be GET, not ID.  If that's important to you, I think 
> you can override that with rewrite rules, but I haven't played 
> with those long enough to give you a concrete example.

I use rewrites like this in my grammar,

ident
	:	IDENT
	|	i=USE -> IDENT[$i]
	|	i=XML -> IDENT[$i]
	|	i=DYNAMIC -> IDENT[$i]
	|	i=NAMESPACE -> IDENT[$i]
	|	i=IS -> IDENT[$i]
	|	i=AS -> IDENT[$i]
	|	i=GET -> IDENT[$i]
	|	i=SET -> IDENT[$i]
	;

I switched to this method, having used the predicate-style,

foo: {input.LT(1).getText().equals("foo")}? IDENT

method before, because I found it helped me debug various ambiguity
problems in my grammar (lots of messages that say "could match input
such as IDENT IDENT IDENT using multiple alternatives" were just
confusing for me :)

ta,
dave

-- 
http://david.holroyd.me.uk/

From porcelli at uol.com.br  Mon Apr 23 07:20:15 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 23 Apr 2007 11:20:15 -0300
Subject: [antlr-interest] Problem with Lexer.. may be a bug
Message-ID: <ee873c070704230720p4dd740c9y9be317b441d8d50f@mail.gmail.com>

Hi All,

  I have a problem with my lex rules... I have 5 similar rules... when
I try to use all of then.. i got the following error message:

"ANTLR could not analyze this decision in rule Tokens; often this is
because of recursive rule references visible from the left edge of
alternatives.  ANTLR will re-analyze the decision with a fixed
lookahead of k=1.  Consider using "options {k=1;}" for that decision
and possibly adding a syntactic predicate."

  I could solve this problem (transforming all the 5 rules in just
one). Is this a bug? (attached the grammars).

PS: I'm using the latest version (antlr-04-21-2007.17)...

Best Regards,
Alexandre Porcelli
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ProblemCobolGrammar.g
Type: application/octet-stream
Size: 7404 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070423/1e84239a/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: FixedCobolGrammar.g
Type: application/octet-stream
Size: 4502 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070423/1e84239a/attachment-0003.obj 

From porcelli at uol.com.br  Mon Apr 23 07:41:32 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 23 Apr 2007 11:41:32 -0300
Subject: [antlr-interest] Bug ANTLRWorks 1.0b10 using Groups
Message-ID: <ee873c070704230741w451261f1i5232acbfe53516c8@mail.gmail.com>

I think that ANTLRWorks is a great product and I try to use most of
the resources available.. but in the last version (1.0b10) the "Group"
feature stopped to work... when I try to open a file that has a Group
Tag... the following error occurs:

Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError:
Java heap space

This error occurs even if you try to add a group in a grammar during editing...

Best Regards,
Alexandre Porcelli

From porcelli at uol.com.br  Mon Apr 23 07:56:26 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 23 Apr 2007 11:56:26 -0300
Subject: [antlr-interest] Bug ANTLRWorks 1.0b10 using Groups
In-Reply-To: <ab0bf2c00704230751k5d721983w7bcfd46f1a5204b3@mail.gmail.com>
References: <ee873c070704230741w451261f1i5232acbfe53516c8@mail.gmail.com>
	<ab0bf2c00704230751k5d721983w7bcfd46f1a5204b3@mail.gmail.com>
Message-ID: <ee873c070704230756k35230e48gbb2ba7f87b88ff72@mail.gmail.com>

I'm already using a good memory to execute ANTLRWorks.. my command line is:

java -Xms256M -Xmx380M -jar antlrworks-1.0b10.jar

On 4/23/07, Miguel Ping <miguel.ping at gmail.com> wrote:
> That's an out of memory error, try to give antlrworks more memory by passing
> parameters to jvm when starting up antlrworks:
>
> java (...) -Xmx256m -Xms256m
>
> or whatever size you want. If you use ant you can pass parameters to java
> target. This is my ant snippet for antlrworks:
>
>     <!-- antlrworks launcher -->
>     <target name="launch-antlr-works" description="launchers antlr works">
>         <java jar="${tools.dir}/${antlr.works.jar}" fork="true">
>             <jvmarg value="-Xms${antlr.works.memsize}"/>
>             <jvmarg value="-Xmx${antlr.works.memsize}"/>
>        </java>
>     </target>
>
> just figure out the variables :)
>
>
> On 4/23/07, Alexandre Porcelli <porcelli at uol.com.br> wrote:
> > I think that ANTLRWorks is a great product and I try to use most of
> > the resources available.. but in the last version (1.0b10) the "Group"
> > feature stopped to work... when I try to open a file that has a Group
> > Tag... the following error occurs:
> >
> > Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError:
> > Java heap space
> >
> > This error occurs even if you try to add a group in a grammar during
> editing...
> >
> > Best Regards,
> > Alexandre Porcelli
> >
>
>

From jaluber at gmx.de  Mon Apr 23 09:24:09 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 23 Apr 2007 18:24:09 +0200
Subject: [antlr-interest] How to use LT and LA in predicates?
In-Reply-To: <283368.32755.qm@web55912.mail.re3.yahoo.com>
References: <283368.32755.qm@web55912.mail.re3.yahoo.com>
Message-ID: <462CDDA9.1010203@gmx.de>

Loring Craymer wrote:
> In the parser, input is a TokenStream.  In a Lexer, it
> is an IntStream and returns ints (characters).
> 
> --Loring

Is there an easier way to turn the ints into strings than using new
String(new char[]{(char) input.LT(1)})? And do I truly get the character
(couldn't test that yet)?

After further investigation of my last problem (pasted below for
reference) I saw that I overlooked that with {}?=> the predicate isn't
tested in the parser but in a nested DFA class, which has only as
function signature

public int specialStateTransition(int s, IntStream input) {}

So here input isn't a TokenStream but only an IntStream. How can I
change that? I don't want to implement another parser for the
recognition of the next token alone.

Best regards,
Johannes Luber

--------
The third problem I have is with these rules:

identifier
	:	{!isKeyword(input.LT(1).getText())}?=> AVAILABLE_IDENTIFIER
	|	'@' IDENTIFIER_OR_KEYWORD
	;
	
fragment AVAILABLE_IDENTIFIER
	:	IDENTIFIER_OR_KEYWORD /* An identifier_or_keyword that is not a
keyword */
	;

I have used {}?=> to enforce the use of the predicate, as otherwise the
presence or absence of an @ distinguishes between the cases. Now I
receive the error, that the class IntStream doesn't have the method
getText(). The following rule snippet is generated:

else if ( (LA58_0==AVAILABLE_IDENTIFIER) &&
(!isKeyword(input.LT(1).getText()))) {s = 3;}

From antlr-list at arizona-software.ch  Mon Apr 23 21:25:23 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 23 Apr 2007 21:25:23 -0700
Subject: [antlr-interest] ANTLRWorks 1.0b11 available
Message-ID: <9F224CA4-4DEC-42DE-943B-21A9947B04AA@arizona-software.ch>

Hello,

ANTLRWorks 1.0b11 is now available (with ANTLR 3.0b7):

http://www.antlr.org/works/index.html

The changes for this version are:

New feature:
     [AW-8] - Backup file
     [AW-15] - Use the Tab key to indent/unindent text
     [AW-25] - Add command-line options for ANTLR
     [AW-33] - Optional generation and compilation step before debugging

Bug fix:
     [AW-26] - Null pointer exception when generating a tree parser  
grammar
     [AW-28] - Syntax coloring does take into account empty rewrite  
syntax
     [AW-29] - Syntax coloring reports an error when using double- 
quoted string in an argument block
     [AW-30] - Interpreter does not ignore rules with $channel=HIDDEN;
     [AW-34] - Plugin in IntelliJ for Windows reports incorrect  
grammar name while it is correct
     [AW-35] - Error when compiling a grammar within IntelliJ on Windows
     [AW-36] - Rules grouping causes ANTLRWorks to run out of heap space

Note that ANTLRWorks now requires Java 1.5 to run. Also, new online  
help has been added (and is still in progress):

http://www.antlr.org/works/help/index.html

The plugin for IntelliJ will be updated later tonight when the  
website of Jetbrains for the plugin will be again accessible :-)

Regards,

Jean


From aah at roarmouse.org  Mon Apr 23 21:55:51 2007
From: aah at roarmouse.org (Andrew Houghton)
Date: Mon, 23 Apr 2007 21:55:51 -0700
Subject: [antlr-interest] simple(?) grammar question using antlrworks
Message-ID: <A7227F24-837C-4C87-A76B-8A80AFDD6C42@roarmouse.org>

Never done this before, no idea what I'm doing, etc.

I'm in need of a way of reading a stream of characters and creating a  
java Map based on the input.  The grammar is simple, and basically  
defines some delimiters, a key (alpha, no whitespace), a value (a  
number, or alphanum w/ spaces, or a list of values, or a Map).  For  
example:

{ a: 'b', c: 4, d: [ 'e', 'f', 5, 'g' ] }

represents a Map with three keys, one of which is a list of values.  
It's likely that I'll need to expand the legal characters in a value  
to allow punctuation, but for now simple alphanum and whitespace  
works (or would work) fine.

I thought this would be fairly simple, and proceeded to flail about  
in ANTLRWorks, but I can't seem to get the grammar to do what I  
want.  Everything compiles, but I keep getting "NoViableAltException"  
and at this point I'm simply confused.  Could I get a brief  
explanation of what I'm doing wrong here?  Thanks for any help..  - a.

grammar PropsHash;

propsHash
	:	LBRACE atom (COMMA atom)* RBRACE EOF
	;
atom
	:	KSTRING COLON value
	;
value
	: NUMBER
	| vstring
	| propsList
	| propsHash
	;
propsList
	:	LBRACKET value (COMMA value)* RBRACKET
	;
vstring
	:	QUOTE VSTRING QUOTE
	;
	
QUOTE 	:	'"' ;
COMMA		:	',' ;
COLON		:	':'	;
LBRACKET:	'['	;
RBRACKET:	']'	;
LBRACE	:	'{'	;
RBRACE	:	'}'	;
NUMBER	:	INT ('.' INT)? ;
protected INT			:	'0'..'9'+ ;
KSTRING	:	( 'a'..'z' |
						'A'..'Z'
					)+ ;
VSTRING	:	( 'a'..'z'
				|		'A'..'Z'
				|		' '
				|		'\t'
				|		'0'..'9'
					)+ ;
WS    	: ( ' '
				|	'\r' '\n'
				|	'\n'
				|	'\t'
					)	;



From bace.spam at gmx.net  Tue Apr 24 00:34:55 2007
From: bace.spam at gmx.net (bace.spam at gmx.net)
Date: Tue, 24 Apr 2007 09:34:55 +0200
Subject: [antlr-interest] simple URL extractor
Message-ID: <20070424073455.281740@gmx.net>

Hi all,

I want to extract an URL from a text with antlr v3. To separate the URL from the remaining, I want to search for each occurrence of 'http://'.

So I defined the lexer rule:
HTTP_INDICATOR : 'http://';

and parser rule:
url : HTTP_INDICATOR host (port)? (SLASH path)*;


If I uses this definition, and input something like
'text http://www.goolge.com/index.html further text'
then the parser doesn't work as I imagined. The error message is that 't' was expected instead of 'm'. (The parser wants to match the 'html' with 'http://') But why?

Has anyone an idea how I can tell the lexer to search for the 'http://'?

And as I tried to put the 'http://' in this parser rule (instead of the HTTP_INDICATOR) I get an exception. Is it true that I cannot use literals in parser rules (I got every time an exception)? But in the examples for antlr v3 are literals in parser rules used?!

Best,
Markus
-- 
"Feel free" - 10 GB Mailbox, 100 FreeSMS/Monat ...
Jetzt GMX TopMail testen: http://www.gmx.net/de/go/topmail

From ilia at obnovlenie.ru  Tue Apr 24 02:56:19 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Tue, 24 Apr 2007 13:56:19 +0400
Subject: [antlr-interest] ANTLRWorks 1.0b11 available
In-Reply-To: <9F224CA4-4DEC-42DE-943B-21A9947B04AA@arizona-software.ch>
References: <9F224CA4-4DEC-42DE-943B-21A9947B04AA@arizona-software.ch>
Message-ID: <200704241356.19693.ilia@obnovlenie.ru>


Thanks a lot, Jean.

Where is bugzilla for Antlr Works ?

There is a number of bugs still remains unfixed till very early versions of this plugin

-> when I press ctrl-z (undo), IDEA hangs I have to restart it and loose a bunch of changes

-> rewrite + tokens still buggy

E.g check this grammar against input of

#{ok.b.c}

NullPointerExceptions gonna follow.

---------------------------------------------

grammar GetScopeValue;

options {
output=AST;
}

tokens {
	TEXT;
	GET_PROPERTY_VALUE;
}

LCURL	:	'{';
RCURL	:	'}';

GET_SCOPE_VALUE
	:	'#';
	

DOT	:	'.';



MINUS
	:	'-';

GT	:	'>';

SPECIAL_CHAR
	:	'`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |  
	'+' | '=' | '[' | ']' | ';' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' |
	 '/' | '?';
	


fragment WS_CHAR  :
       (' '|'\r'|'\t'|'\u000C'|'\n' )
    ;
    
WS	:	WS_CHAR+;

// not SPECIAL_CHAR not WS_CHAR
WORD:	
	(~ ('`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |  
	'+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' | '/' | '?'
	| '{' 
	| '~'
	| '}'
	| '#'
	| ';'
	| '.'
	| '-'
	| '>'	
	| ' '|'\r'|'\t'|'\u000C'|'\n' ) )+ 
;



document
	:	exprs;


exprs:
        (expr)+
;


expr
        :
                text | rule_call
        ;


rule_call: GET_SCOPE_VALUE WORD -> ^(GET_SCOPE_VALUE WORD) |
	GET_SCOPE_VALUE LCURL WORD rule_long_def_part* RCURL -> ^(GET_SCOPE_VALUE WORD rule_long_def_part*)
	;
	

	
rule_long_def_part
	:	MINUS GT WORD -> ^(GET_PROPERTY_VALUE WORD) | 
		DOT WORD -> ^(GET_SCOPE_VALUE WORD)
	;


text:
	DOT -> TEXT[$DOT] | MINUS -> TEXT[$MINUS] | WORD -> TEXT[$WORD] 
	| WS -> TEXT[$WS] | GT -> TEXT[$GT] | SPECIAL_CHAR -> TEXT[$SPECIAL_CHAR]
;

--------------------------------
 
> ANTLRWorks 1.0b11 is now available (with ANTLR 3.0b7):
> 
> http://www.antlr.org/works/index.html
> 
> The changes for this version are:
> 
> New feature:
>      [AW-8] - Backup file
>      [AW-15] - Use the Tab key to indent/unindent text
>      [AW-25] - Add command-line options for ANTLR
>      [AW-33] - Optional generation and compilation step before debugging
> 
> Bug fix:
>      [AW-26] - Null pointer exception when generating a tree parser  
> grammar
>      [AW-28] - Syntax coloring does take into account empty rewrite  
> syntax
>      [AW-29] - Syntax coloring reports an error when using double- 
> quoted string in an argument block
>      [AW-30] - Interpreter does not ignore rules with $channel=HIDDEN;
>      [AW-34] - Plugin in IntelliJ for Windows reports incorrect  
> grammar name while it is correct
>      [AW-35] - Error when compiling a grammar within IntelliJ on Windows
>      [AW-36] - Rules grouping causes ANTLRWorks to run out of heap space
> 
> Note that ANTLRWorks now requires Java 1.5 to run. Also, new online  
> help has been added (and is still in progress):
> 
> http://www.antlr.org/works/help/index.html
> 
> The plugin for IntelliJ will be updated later tonight when the  
> website of Jetbrains for the plugin will be again accessible :-)
> 
> Regards,
> 
> Jean
> 
> 



From jaluber at gmx.de  Tue Apr 24 03:33:11 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 24 Apr 2007 12:33:11 +0200
Subject: [antlr-interest] simple URL extractor
In-Reply-To: <20070424073455.281740@gmx.net>
References: <20070424073455.281740@gmx.net>
Message-ID: <462DDCE7.3030504@gmx.de>

bace.spam at gmx.net wrote:
> Hi all,
> 
> I want to extract an URL from a text with antlr v3. To separate the URL from the remaining, I want to search for each occurrence of 'http://'.
> 
> So I defined the lexer rule:
> HTTP_INDICATOR : 'http://';
> 
> and parser rule:
> url : HTTP_INDICATOR host (port)? (SLASH path)*;
> 
> 
> If I uses this definition, and input something like
> 'text http://www.goolge.com/index.html further text'
> then the parser doesn't work as I imagined. The error message is that 't' was expected instead of 'm'. (The parser wants to match the 'html' with 'http://') But why?
> 
> Has anyone an idea how I can tell the lexer to search for the 'http://'?

I suppose, that you need to set the option filter=true; to implicitly
discard all text not of your interest. Otherwise your first grammar
looks fine.

> And as I tried to put the 'http://' in this parser rule (instead of
> the HTTP_INDICATOR) I get an exception. Is it true that I cannot use
> literals in parser rules (I got every time an exception)? But in the
> examples for antlr v3 are literals in parser rules used?!

Parser rules may contain literals BUT not exclusively! You have to call
another rule in a parser rule, otherwise it is a lexer rule.

Best regards,
Johannes Luber

From jaluber at gmx.de  Tue Apr 24 04:03:36 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 24 Apr 2007 13:03:36 +0200
Subject: [antlr-interest] simple(?) grammar question using antlrworks
In-Reply-To: <A7227F24-837C-4C87-A76B-8A80AFDD6C42@roarmouse.org>
References: <A7227F24-837C-4C87-A76B-8A80AFDD6C42@roarmouse.org>
Message-ID: <462DE408.2050505@gmx.de>

Andrew Houghton wrote:
> Never done this before, no idea what I'm doing, etc.
> 
> I'm in need of a way of reading a stream of characters and creating a
> java Map based on the input.  The grammar is simple, and basically
> defines some delimiters, a key (alpha, no whitespace), a value (a
> number, or alphanum w/ spaces, or a list of values, or a Map).  For
> example:
> 
> { a: 'b', c: 4, d: [ 'e', 'f', 5, 'g' ] }
> 
> represents a Map with three keys, one of which is a list of values. It's
> likely that I'll need to expand the legal characters in a value to allow
> punctuation, but for now simple alphanum and whitespace works (or would
> work) fine.
> 
> I thought this would be fairly simple, and proceeded to flail about in
> ANTLRWorks, but I can't seem to get the grammar to do what I want. 
> Everything compiles, but I keep getting "NoViableAltException" and at
> this point I'm simply confused.  Could I get a brief explanation of what
> I'm doing wrong here?  Thanks for any help..  - a.

There are two things I've noticed. The first one is that you used
"protected" instead "fragment". ANTLRworks uses ANTLR3 so it shouldn't
have worked ever. The second one is that you put EOF at the end of a
recursive rule. Obviously you end to have EOF everytime you enter a new
recursion level, making in the end alternatives unavailable. The
solution is create a separate start rule like I did below. BTW, may I
use parts of your grammar in my tutorial
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>?
I believe you applied my advice about EOF there and I have overlooked
this special case while writing the text.

Best regards,
Johannes Luber


input
	:	propsHash EOF
	;

propsHash
    :    LBRACE atom (COMMA atom)* RBRACE
    ;
atom
    :    KSTRING COLON value
    ;
value
    : NUMBER
    | vstring
    | propsList
    | propsHash
    ;
propsList
    :    LBRACKET value (COMMA value)* RBRACKET
    ;
vstring
    :    QUOTE VSTRING QUOTE
    ;

QUOTE     :    '"' ;
COMMA        :    ',' ;
COLON        :    ':'    ;
LBRACKET:    '['    ;
RBRACKET:    ']'    ;
LBRACE    :    '{'    ;
RBRACE    :    '}'    ;
NUMBER    :    INT ('.' INT)? ;
fragment INT            :    '0'..'9'+ ;
KSTRING    :    ( 'a'..'z' |
                        'A'..'Z'
                    )+ ;
VSTRING    :    ( 'a'..'z'
                |        'A'..'Z'
                |        ' '
                |        '\t'
                |        '0'..'9'
                    )+ ;
WS        : ( ' '
                |    '\r' '\n'
                |    '\n'
                |    '\t'
                    )    ;


From antlr at mirality.co.nz  Tue Apr 24 04:05:33 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 24 Apr 2007 23:05:33 +1200
Subject: [antlr-interest] Problem with Lexer.. may be a bug
In-Reply-To: <ee873c070704230720p4dd740c9y9be317b441d8d50f@mail.gmail.co
 m>
References: <ee873c070704230720p4dd740c9y9be317b441d8d50f@mail.gmail.com>
Message-ID: <20070424110525.82FFB190825@www.antlr.org>

At 02:20 24/04/2007, Alexandre Porcelli wrote:
 >  I have a problem with my lex rules... I have 5 similar 
rules...
 >when I try to use all of then.. i got the following error 
message:
 >
 >"ANTLR could not analyze this decision in rule Tokens; often 
this
 >is because of recursive rule references visible from the left 
edge
 >of alternatives.  ANTLR will re-analyze the decision with a 
fixed
 >lookahead of k=1.  Consider using "options {k=1;}" for that
 >decision and possibly adding a syntactic predicate."

Well, I'm not sure why it'd generate that particular message (it 
doesn't for me), but the grammars you attached appear to declare 
and use COMMENTED_TEXT without actually defining it, which is 
illegal.


From ilia at obnovlenie.ru  Tue Apr 24 05:40:51 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Tue, 24 Apr 2007 16:40:51 +0400
Subject: [antlr-interest] Grammar refuses to compile (Simple ANTLR gotcha)
Message-ID: <200704241640.51259.ilia@obnovlenie.ru>


Hello,

Haven't used antlr for a bit... And need to write a grammar once again =)
Version is:3.0b7

This grammar doesn't compile (ambiguitiy)

I want "rule_call" to match "#a.b.c" from arbitrary text

Could you please explain what's the reason of error I have here and how to fix it ?

warning(200): My.g:8:24: Decision can match input such as "DOT WORD" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(200): My.g:8:24: Decision can match input such as "MINUS GT WORD" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input


-----------------------------------------

document:
	(text | rule_call)+;
        
rule_call: 
		GET_SCOPE_VALUE WORD rule_long_def_part+;
	
rule_long_def_part
	:	
	(MINUS GT WORD) => MINUS GT WORD | 
	(DOT WORD) => DOT WORD;
	

text:
	DOT | MINUS | WORD | WS| GT | SPECIAL_CHAR ;




LCURL	:	'{';
RCURL	:	'}';

GET_SCOPE_VALUE
	:	'#';
	

DOT	:	'.';



MINUS
	:	'-';

GT	:	'>';

SPECIAL_CHAR
	:	'`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |  
	'+' | '=' | '[' | ']' | ';' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' |
	 '/' | '?';
	


fragment WS_CHAR  :
       (' '|'\r'|'\t'|'\u000C'|'\n' )
    ;
    
WS	:	WS_CHAR+;

// not SPECIAL_CHAR not WS_CHAR
WORD:	
	(~ ('`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |  
	'+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' | '/' | '?'
	| '{' | '~' | '}' | '#' | ';' | '.' | '-' | '>'	| ' '|'\r'|'\t'|'\u000C'|'\n' ) )+ 
;


From dave at badgers-in-foil.co.uk  Tue Apr 24 06:31:00 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 24 Apr 2007 13:31:00 +0000
Subject: [antlr-interest] Grammar refuses to compile (Simple ANTLR
	gotcha)
In-Reply-To: <200704241640.51259.ilia@obnovlenie.ru>
References: <200704241640.51259.ilia@obnovlenie.ru>
Message-ID: <20070424133100.GB5533@badgers-in-foil.co.uk>

On Tue, Apr 24, 2007 at 04:40:51PM +0400, Ilia Kantor wrote:
> This grammar doesn't compile (ambiguitiy)
> 
> I want "rule_call" to match "#a.b.c" from arbitrary text
> 
> Could you please explain what's the reason of error I have here and how to fix it ?
> 
> warning(200): My.g:8:24: Decision can match input such as "DOT WORD" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(200): My.g:8:24: Decision can match input such as "MINUS GT WORD" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> 
> 
> -----------------------------------------
> 
> document:
> 	(text | rule_call)+;
>         
> rule_call: 
> 		GET_SCOPE_VALUE WORD rule_long_def_part+;
> 	
> rule_long_def_part
> 	:	
> 	(MINUS GT WORD) => MINUS GT WORD | 
> 	(DOT WORD) => DOT WORD;
> 	
> 
> text:
> 	DOT | MINUS | WORD | WS| GT | SPECIAL_CHAR ;

I'd try adding,

  ((rule_long_def_part)=> rule_long_def_part)+

to make ANTLR match that content 'now', rather than exiting rule_call
and matching the tokens with text+ in the document rule.  I guess you
don't need the predicates in rule_long_def_part itself?

[I didn't test that though.]

dave

-- 
http://david.holroyd.me.uk/

From porcelli at uol.com.br  Tue Apr 24 06:55:46 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Tue, 24 Apr 2007 10:55:46 -0300
Subject: [antlr-interest] Problem with Lexer.. may be a bug
In-Reply-To: <20070424110536.8670F614@starfury19.uol.com.br>
References: <ee873c070704230720p4dd740c9y9be317b441d8d50f@mail.gmail.com>
	<20070424110536.8670F614@starfury19.uol.com.br>
Message-ID: <ee873c070704240655n6bff1412t4bf6efd52a96dfcf@mail.gmail.com>

Hi...

  About the COMMENTED_TEXT, I declared it in Tokens sections, and I'm
using it in: AUTHOR, INSTALLATION, DATE_WRITTEN, DATE_COMPILED,
SECURITY and REMARKS (ProblemCobolGrammar.g).... I'm generating this
lex rule manually (ex: see lines 140-142).
  I'm using the ANTLRWorks, I tried to compile and debug directly..
and works without error messages... but the lexer seems that is not
working properly, generating the following the following error errors
messages during a test execution:

line 1:9 mismatched character 'd' expecting 's'
line 1:11 no viable alternative at character 'n'
line 1:23 rule DATE_WRITTEN failed predicate: {getCharPositionInLine()
>= 7 && getCharPositionInLine() <= 10}?
line 1:25 mismatched character 'v' expecting 's'
line 1:27 rule SECURITY failed predicate: {getCharPositionInLine() >=
7 && getCharPositionInLine() <= 10}?
line 1:29 mismatched character 'o' expecting 's'
line 1:12 mismatched input 'tification' expecting ID_DIVISION

I tested using this text:

        identification division.
        program-id. teste.
        author. ahg asjdhfg kshjdfg kadfka dhj
        environment

Best Regards,
Alexandre Porcelli

On 4/24/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 02:20 24/04/2007, Alexandre Porcelli wrote:
>  >  I have a problem with my lex rules... I have 5 similar
> rules...
>  >when I try to use all of then.. i got the following error
> message:
>  >
>  >"ANTLR could not analyze this decision in rule Tokens; often
> this
>  >is because of recursive rule references visible from the left
> edge
>  >of alternatives.  ANTLR will re-analyze the decision with a
> fixed
>  >lookahead of k=1.  Consider using "options {k=1;}" for that
>  >decision and possibly adding a syntactic predicate."
>
> Well, I'm not sure why it'd generate that particular message (it
> doesn't for me), but the grammars you attached appear to declare
> and use COMMENTED_TEXT without actually defining it, which is
> illegal.
>
>

From ma_laver at ciise.concordia.ca  Tue Apr 24 07:49:21 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Tue, 24 Apr 2007 10:49:21 -0400
Subject: [antlr-interest] Compiling the Generated Code
Message-ID: <462E18F1.7010202@ciise.concordia.ca>

Hello,

I generated the code from my grammar using ANTLRWorks 1.0b11 and I've 
imported the code in my Eclipse project. There are compiler errors that 
I don't understand.

They happen in the parser: one of my rules has {greedy=false;}, and this 
is put in the Java code, but the compiler complains that greedy doesn't 
exist. When I comment it out, it complains about a RecognitionException 
that can't be thrown, so I'd have to remove the try, catch and finally 
structure. Is it supposed to be like that?

Further, looking at that code, I don't see how it is supposed to act in 
a non-greedy manner! It is a (.)* rule, non-greedy, that should stop 
when a given token is read.

It works fine in AntlrWorks, btw (tested in 1.0b10). So, its a bit of a 
surprise here.

Thanks a ton in advance. This is my first excursion in the field of 
programming language design, and I hope it won't be a too painful one!

Regards,


-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From antlr at mirality.co.nz  Tue Apr 24 07:55:28 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 25 Apr 2007 02:55:28 +1200
Subject: [antlr-interest] Compiling the Generated Code
In-Reply-To: <462E18F1.7010202@ciise.concordia.ca>
References: <462E18F1.7010202@ciise.concordia.ca>
Message-ID: <20070424145519.5F99A190810@www.antlr.org>

At 02:49 25/04/2007, you wrote:
 >They happen in the parser: one of my rules has {greedy=false;}, 
and
 >this is put in the Java code, but the compiler complains that 
greedy
 >doesn't exist. When I comment it out, it complains about a
 >RecognitionException that can't be thrown, so I'd have to remove 

 >the try, catch and finally structure. Is it supposed to be like 
that?

You need to put 'options' before the greedy bit, and a colon 
after, like so:

rulename: (options { greedy=false; }: .)+;

Without those it'd be interpreted as a raw code snippet you wanted 
to add to the generated code.


From jaluber at gmx.de  Tue Apr 24 07:57:44 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 24 Apr 2007 16:57:44 +0200
Subject: [antlr-interest] Compiling the Generated Code
In-Reply-To: <462E18F1.7010202@ciise.concordia.ca>
References: <462E18F1.7010202@ciise.concordia.ca>
Message-ID: <462E1AE8.5020000@gmx.de>

Marc-Andr? Laverdi?re wrote:
> Hello,
> 
> I generated the code from my grammar using ANTLRWorks 1.0b11 and I've
> imported the code in my Eclipse project. There are compiler errors that
> I don't understand.
> 
> They happen in the parser: one of my rules has {greedy=false;}, and this
> is put in the Java code, but the compiler complains that greedy doesn't
> exist. When I comment it out, it complains about a RecognitionException
> that can't be thrown, so I'd have to remove the try, catch and finally
> structure. Is it supposed to be like that?
> 
> Further, looking at that code, I don't see how it is supposed to act in
> a non-greedy manner! It is a (.)* rule, non-greedy, that should stop
> when a given token is read.
> 
> It works fine in AntlrWorks, btw (tested in 1.0b10). So, its a bit of a
> surprise here.

Can you post the relevant parts of the grammar? Makes it easier to see
if you have a syntax error, which is now discovered, or if ANTLRworks
got a new bug. Your rule should look like this: "( options
{greedy=false;} : . )*".

> Thanks a ton in advance. This is my first excursion in the field of
> programming language design, and I hope it won't be a too painful one!

Did you read this tutorial (and the others)
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
already?

Best regards,
Johannes Luber

From bace.spam at gmx.net  Tue Apr 24 09:53:52 2007
From: bace.spam at gmx.net (bace.spam at gmx.net)
Date: Tue, 24 Apr 2007 18:53:52 +0200
Subject: [antlr-interest] simple URL extractor
In-Reply-To: <462DDCE7.3030504@gmx.de>
References: <20070424073455.281740@gmx.net> <462DDCE7.3030504@gmx.de>
Message-ID: <20070424165352.192740@gmx.net>


> > Hi all,
> > 
> > I want to extract an URL from a text with antlr v3. To separate the URL
> from the remaining, I want to search for each occurrence of 'http://'.
> > 
> > So I defined the lexer rule:
> > HTTP_INDICATOR : 'http://';
> > 
> > and parser rule:
> > url : HTTP_INDICATOR host (port)? (SLASH path)*;
> > 
> > 
> > If I uses this definition, and input something like
> > 'text http://www.goolge.com/index.html further text'
> > then the parser doesn't work as I imagined. The error message is that
> 't' was expected instead of 'm'. (The parser wants to match the 'html' with
> 'http://') But why?
> > 
> > Has anyone an idea how I can tell the lexer to search for the 'http://'?
> 
> I suppose, that you need to set the option filter=true; to implicitly
> discard all text not of your interest. Otherwise your first grammar
> looks fine.


No, unfortunately I cannot discard the remaining text. I know the grammar looks fine - but does not work. I get the same inappropriate behavior if I set backtrack=true; at the beginning. Do you know how I can set the backtrack-option for only one rule in antlr v3:

rule
(options {backtrack=true;})
    : alter1 | ... | alterN
    ;


> 
> > And as I tried to put the 'http://' in this parser rule (instead of
> > the HTTP_INDICATOR) I get an exception. Is it true that I cannot use
> > literals in parser rules (I got every time an exception)? But in the
> > examples for antlr v3 are literals in parser rules used?!
> 
> Parser rules may contain literals BUT not exclusively! You have to call
> another rule in a parser rule, otherwise it is a lexer rule.
> 
> Best regards,
> Johannes Luber


Best and thanks,
Markus
-- 
"Feel free" - 10 GB Mailbox, 100 FreeSMS/Monat ...
Jetzt GMX TopMail testen: http://www.gmx.net/de/go/topmail

From aah at roarmouse.org  Tue Apr 24 10:02:38 2007
From: aah at roarmouse.org (Andrew Houghton)
Date: Tue, 24 Apr 2007 10:02:38 -0700
Subject: [antlr-interest] simple(?) grammar question using antlrworks
In-Reply-To: <462DE408.2050505@gmx.de>
References: <A7227F24-837C-4C87-A76B-8A80AFDD6C42@roarmouse.org>
	<462DE408.2050505@gmx.de>
Message-ID: <468F1D18-9276-469A-BDC5-4340B3882254@roarmouse.org>

On Apr 24, 2007, at 4:03 AM, Johannes Luber wrote:

>
> There are two things I've noticed. The first one is that you used
> "protected" instead "fragment". ANTLRworks uses ANTLR3 so it shouldn't
> have worked ever. The second one is that you put EOF at the end of a
> recursive rule. Obviously you end to have EOF everytime you enter a  
> new
> recursion level, making in the end alternatives unavailable. The
> solution is create a separate start rule like I did below. BTW, may I
> use parts of your grammar in my tutorial
> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser 
> +Grammars+-+No+Past+Experience+Required>?
> I believe you applied my advice about EOF there and I have overlooked
> this special case while writing the text.
>
> Best regards,
> Johannes Luber
>

Johannes --

Thank you for the response -- I *did* use your tutorial, and the EOF  
addition was a late-night shot in the dark.  I know it didn't make  
sense from a recursion standpoint, but I was hoping that ANTLR  
somehow applied magic to that.

In any case, you're welcome to use my grammar as you see fit.  I'm  
reading up on ANTLR3, I hadn't realized that it was significantly  
different than ANTLR2, which is what all the tutorials I've seen seem  
to use.

Thanks again,

- Andrew



From jaluber at gmx.de  Tue Apr 24 10:11:16 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 24 Apr 2007 19:11:16 +0200
Subject: [antlr-interest] simple URL extractor
In-Reply-To: <20070424165352.192740@gmx.net>
References: <20070424073455.281740@gmx.net> <462DDCE7.3030504@gmx.de>
	<20070424165352.192740@gmx.net>
Message-ID: <462E3A34.9080102@gmx.de>

bace.spam at gmx.net wrote:
> 
> No, unfortunately I cannot discard the remaining text. I know the grammar looks fine - but does not work. I get the same inappropriate behavior if I set backtrack=true; at the beginning. Do you know how I can set the backtrack-option for only one rule in antlr v3:

Do you have rules which apply to the remaining text?

> rule
> (options {backtrack=true;})
>     : alter1 | ... | alterN
>     ;

Remove the () and the rule should be fine. I recommend though to add
memoize=true; to speed speed up the parser.

Best regards,
Johannes Luber

From ilia at obnovlenie.ru  Tue Apr 24 10:48:15 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Tue, 24 Apr 2007 21:48:15 +0400
Subject: [antlr-interest] Grammar refuses to compile (Simple ANTLR
	gotcha)
In-Reply-To: <20070424133100.GB5533@badgers-in-foil.co.uk>
References: <200704241640.51259.ilia@obnovlenie.ru>
	<20070424133100.GB5533@badgers-in-foil.co.uk>
Message-ID: <200704242148.16173.ilia@obnovlenie.ru>


Thanks, David, 

You were right, actually I put predicates one level lower then they should be =)
Works fine with suggested fix.

> On Tue, Apr 24, 2007 at 04:40:51PM +0400, Ilia Kantor wrote:
> > This grammar doesn't compile (ambiguitiy)
> > 
> > I want "rule_call" to match "#a.b.c" from arbitrary text
> > 
> > Could you please explain what's the reason of error I have here and how to fix it ?
> > 
> > warning(200): My.g:8:24: Decision can match input such as "DOT WORD" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > warning(200): My.g:8:24: Decision can match input such as "MINUS GT WORD" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> > 
> > 
> > -----------------------------------------
> > 
> > document:
> > 	(text | rule_call)+;
> >         
> > rule_call: 
> > 		GET_SCOPE_VALUE WORD rule_long_def_part+;
> > 	
> > rule_long_def_part
> > 	:	
> > 	(MINUS GT WORD) => MINUS GT WORD | 
> > 	(DOT WORD) => DOT WORD;
> > 	
> > 
> > text:
> > 	DOT | MINUS | WORD | WS| GT | SPECIAL_CHAR ;
> 
> I'd try adding,
> 
>   ((rule_long_def_part)=> rule_long_def_part)+
> 
> to make ANTLR match that content 'now', rather than exiting rule_call
> and matching the tokens with text+ in the document rule.  I guess you
> don't need the predicates in rule_long_def_part itself?
> 
> [I didn't test that though.]
> 
> dave
> 
> -- 
> http://david.holroyd.me.uk/
> 



From ma_laver at ciise.concordia.ca  Tue Apr 24 15:08:05 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Tue, 24 Apr 2007 18:08:05 -0400
Subject: [antlr-interest] Compiling the Generated Code
In-Reply-To: <462E1AE8.5020000@gmx.de>
References: <462E18F1.7010202@ciise.concordia.ca> <462E1AE8.5020000@gmx.de>
Message-ID: <462E7FC5.9060307@ciise.concordia.ca>

Hello,

It looks like I replied to Johannes only! My apologies! I used his 
suggestion, which takes care of the greedy problem, but the code won't 
compile unless I comment out the code about error handling here. This is 
obviously not a showstopper, but should be fixed.

I used Antlrworks b11, generating code in Java. My IDE is Eclipse 
running Sun Java 1.6.0.1.

I didn't see this in the bug tracking... I would file the bug myself, 
but I can't get an account ;)

 From the grammar:
sh_behavior
     :    'BeginBehavior' sh_code_blob 'EndBehavior';
sh_primitive_parameter
     :    '<' sh_code_blob '>';
sh_code_blob
     :    ( options {greedy=false;} : . )*;    // can we disable the 
white space analysis for this?

Here is the function in the parser where Java complains...

     // $ANTLR start sh_code_blob
     // C:\\Documents and Settings\\marc-andre\\Desktop\\SHL.g:72:1: 
sh_code_blob : ( options {greedy=false; } : . )* ;
     public final void sh_code_blob() throws RecognitionException {
         try {
             // C:\\Documents and 
Settings\\marc-andre\\Desktop\\SHL.g:73:4: ( ( options {greedy=false; } 
: . )* )
             // C:\\Documents and 
Settings\\marc-andre\\Desktop\\SHL.g:73:4: ( options {greedy=false; } : . )*
             {
             // C:\\Documents and 
Settings\\marc-andre\\Desktop\\SHL.g:73:4: ( options {greedy=false; } : . )*
             loop18:
             do {
                 int alt18=2;
                 switch ( input.LA(1) ) {
                 case 19:
                     {
                     switch ( input.LA(2) ) {
                     case 17:
                         {
                         alt18=2;
                         }
                         break;
                     case 33:
                     case 34:
                     case 35:
                         {
                         alt18=2;
                         }
                         break;
                     case ID:
                     case FILE:
                     case INT:
                     case WS:
                     case 8:
                     case 9:
                     case 10:
                     case 11:
                     case 12:
                     case 13:
                     case 14:
                     case 15:
                     case 16:
                     case 18:
                     case 19:
                     case 20:
                     case 21:
                     case 22:
                     case 23:
                     case 24:
                     case 25:
                     case 26:
                     case 27:
                     case 28:
                     case 29:
                     case 30:
                     case 31:
                     case 32:
                     case 36:
                     case 37:
                     case 38:
                     case 39:
                     case 40:
                     case 41:
                         {
                         alt18=1;
                         }
                         break;

                     }

                     }
                     break;
                 case 32:
                     {
                     switch ( input.LA(2) ) {
                     case 28:
                         {
                         alt18=2;
                         }
                         break;
                     case 26:
                         {
                         alt18=2;
                         }
                         break;
                     case 27:
                         {
                         alt18=2;
                         }
                         break;
                     case 38:
                     case 39:
                         {
                         alt18=2;
                         }
                         break;
                     case 18:
                         {
                         alt18=2;
                         }
                         break;
                     case 29:
                         {
                         alt18=2;
                         }
                         break;
                     case 32:
                         {
                         alt18=2;
                         }
                         break;
                     case ID:
                     case FILE:
                     case INT:
                     case WS:
                     case 8:
                     case 9:
                     case 10:
                     case 11:
                     case 12:
                     case 13:
                     case 14:
                     case 15:
                     case 16:
                     case 17:
                     case 19:
                     case 20:
                     case 21:
                     case 22:
                     case 23:
                     case 24:
                     case 25:
                     case 30:
                     case 31:
                     case 33:
                     case 34:
                     case 35:
                     case 36:
                     case 37:
                     case 40:
                     case 41:
                         {
                         alt18=1;
                         }
                         break;

                     }

                     }
                     break;
                 case ID:
                 case FILE:
                 case INT:
                 case WS:
                 case 8:
                 case 9:
                 case 10:
                 case 11:
                 case 12:
                 case 13:
                 case 14:
                 case 15:
                 case 16:
                 case 17:
                 case 18:
                 case 20:
                 case 21:
                 case 22:
                 case 23:
                 case 24:
                 case 25:
                 case 26:
                 case 27:
                 case 28:
                 case 29:
                 case 30:
                 case 31:
                 case 33:
                 case 34:
                 case 35:
                 case 36:
                 case 37:
                 case 38:
                 case 39:
                 case 40:
                 case 41:
                     {
                     alt18=1;
                     }
                     break;

                 }

                 switch (alt18) {
                 case 1 :
                     // C:\\Documents and 
Settings\\marc-andre\\Desktop\\SHL.g:73:32: .
                     {
                     matchAny(input);

                     }
                     break;

                 default :
                     break loop18;
                 }
             } while (true);


             }

         }
         catch (RecognitionException re) {
             reportError(re);
             recover(input,re);
         }
         finally {
         }
         return ;
     }
     // $ANTLR end sh_code_blob

Johannes Luber wrote:
> Marc-Andr? Laverdi?re wrote:
>> Hello,
>>
>> I generated the code from my grammar using ANTLRWorks 1.0b11 and I've
>> imported the code in my Eclipse project. There are compiler errors that
>> I don't understand.
>>
>> They happen in the parser: one of my rules has {greedy=false;}, and this
>> is put in the Java code, but the compiler complains that greedy doesn't
>> exist. When I comment it out, it complains about a RecognitionException
>> that can't be thrown, so I'd have to remove the try, catch and finally
>> structure. Is it supposed to be like that?
>>
>> Further, looking at that code, I don't see how it is supposed to act in
>> a non-greedy manner! It is a (.)* rule, non-greedy, that should stop
>> when a given token is read.
>>
>> It works fine in AntlrWorks, btw (tested in 1.0b10). So, its a bit of a
>> surprise here.
> 
> Can you post the relevant parts of the grammar? Makes it easier to see
> if you have a syntax error, which is now discovered, or if ANTLRworks
> got a new bug. Your rule should look like this: "( options
> {greedy=false;} : . )*".
> 
>> Thanks a ton in advance. This is my first excursion in the field of
>> programming language design, and I hope it won't be a too painful one!
> 
> Did you read this tutorial (and the others)
> <http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
> already?
> 
> Best regards,
> Johannes Luber

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From aliaazimi at yahoo.com  Wed Apr 25 04:07:46 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 25 Apr 2007 04:07:46 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <865793.39174.qm@web58108.mail.re3.yahoo.com>

Hi,
  could you enable me to join mailing list?
  Thanks

       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070425/dc2e567b/attachment.html 

From aliaazimi at yahoo.com  Wed Apr 25 04:15:51 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 25 Apr 2007 04:15:51 -0700 (PDT)
Subject: [antlr-interest] Help please
Message-ID: <515670.55529.qm@web58115.mail.re3.yahoo.com>

  Hi,
    
  Currently, I study at an MSc level in Computing. For my individual project, I Intend to write a program which takes SDL-PR input files which is a textual representation and displays them as SDL/GR. 
   

I need to write a parser in ANTLR for the purpose of this project and then use ANTLR's tree grammar mechanism to generate an XML output format which can be processed by some graphics/graph/UML tool.

 
  However I have no knowledge as to how I can proceed with this task (writing ANTLR). Could you please give me some advice? Once I produce the parser in ANTLR how can I use ANTLR's tree grammar mechanism to generate an XML output format? 
   
   
  Kind Regards,
   
  Ali
  aliaazimi at yahoo.com


  



       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070425/0ad8b2f3/attachment.html 

From jaluber at gmx.de  Wed Apr 25 04:55:36 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 25 Apr 2007 13:55:36 +0200
Subject: [antlr-interest] Help please
In-Reply-To: <515670.55529.qm@web58115.mail.re3.yahoo.com>
References: <515670.55529.qm@web58115.mail.re3.yahoo.com>
Message-ID: <462F41B8.70701@gmx.de>

ali azimi wrote:
> 
> Hi,
>   
> Currently, I study at an MSc level in Computing. For my individual
> project, I Intend to write a program which takes SDL-PR input files
> which is a textual representation and displays them as SDL/GR.
>  
> 
> I need to write a parser in ANTLR for the purpose of this project and then use ANTLR's tree grammar mechanism to generate an XML output format which can be processed by some graphics/graph/UML
>  tool.
> 
>  
> 
> However I have no knowledge as to how I can proceed with this task
> (writing ANTLR). Could you please give me some advice? Once I produce
> the parser in ANTLR how can I use ANTLR's tree grammar mechanism to
> generate an XML output format?

As I never heard of SDL-PR and SDL/GR I can't give you specific advice
on implementing such a grammar. Maybe someone posted already a grammar
on the ANTLR website here http://www.antlr.org/grammar/list. If yes, it
may be still for ANTLR 2 but there is a converter to ANTLR 3. Otherwise
I suggest to read
<http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required>
and look at the other tutorials available which cover more advanced topics.

Best regards,
Johannes Luber

From ma_laver at ciise.concordia.ca  Wed Apr 25 07:40:13 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Wed, 25 Apr 2007 10:40:13 -0400
Subject: [antlr-interest] output=AST vs output=template
Message-ID: <462F684D.1050407@ciise.concordia.ca>

Hello,

I finally found out that buildAST was not a legal option anymore... but 
I see that now we have two options to have an option.

With AST, I need a tree adapter, with template, we're using 
stringtemplates... I don't know really either at all, and I'm wondering 
what I should use.

My first short term objective is to parse in order to find out if there 
are syntactical errors. Long term, I'm interested in translating from my 
domain-specific language to a more concrete language, but in a 
parametrized fashion.

Which approach is best for me?

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From jaluber at gmx.de  Wed Apr 25 07:45:36 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 25 Apr 2007 16:45:36 +0200
Subject: [antlr-interest] output=AST vs output=template
In-Reply-To: <462F684D.1050407@ciise.concordia.ca>
References: <462F684D.1050407@ciise.concordia.ca>
Message-ID: <462F6990.9080201@gmx.de>

Marc-Andr? Laverdi?re wrote:
> Hello,
> 
> I finally found out that buildAST was not a legal option anymore... but
> I see that now we have two options to have an option.
> 
> With AST, I need a tree adapter, with template, we're using
> stringtemplates... I don't know really either at all, and I'm wondering
> what I should use.
> 
> My first short term objective is to parse in order to find out if there
> are syntactical errors. Long term, I'm interested in translating from my
> domain-specific language to a more concrete language, but in a
> parametrized fashion.
> 
> Which approach is best for me?

For my own parser I chose the following:

1. The first pass is to create an AST. This should show up syntactical
errors.
2. The second pass processes the AST to discover semantical errors.
3. The third pass processes the AST again and generates the target with
StringTemplate.

Hope this helps,
Johannes Luber

From lbiondi at olijo.com  Wed Apr 25 07:54:58 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Wed, 25 Apr 2007 16:54:58 +0200
Subject: [antlr-interest] output=AST vs output=template
In-Reply-To: <462F6990.9080201@gmx.de>
References: <462F684D.1050407@ciise.concordia.ca> <462F6990.9080201@gmx.de>
Message-ID: <200704251654.58736.lbiondi@olijo.com>

I guess it depends, as well, whether your language has to be compiled
or just interpreted. In the latter case, an AST is all you need.

Lucio

From bmf1972 at fastmail.fm  Wed Apr 25 07:59:19 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Wed, 25 Apr 2007 17:59:19 +0300
Subject: [antlr-interest] not closed multi-line comment cause infinite
	looping
Message-ID: <f0nqdd$3k4$1@sea.gmane.org>

Hi all,

I am using antlr 2.7.6 and one of the Java grammars to build a parser 
for my own language.

I decided to start with an empty grammar and add rules from that Java 
grammar while applying required adaptations for my language.

There is a ML_COMMENT lexer rule which causes an infinite loop when the 
its instance is left open (i.e. without a closing */). This happens even 
when I am testing it in the context of the original Java grammar.

/* For example:
not closed multi-line comment -- parsing never completes
package foo.bar.oji8.fds;

Adrian.


From jimi at temporal-wave.com  Wed Apr 25 09:28:06 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Apr 2007 09:28:06 -0700
Subject: [antlr-interest] simple URL extractor
In-Reply-To: <462E3A34.9080102@gmx.de>
References: <20070424073455.281740@gmx.net>
	<462DDCE7.3030504@gmx.de><20070424165352.192740@gmx.net>
	<462E3A34.9080102@gmx.de>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362523C8@wavemachine.temporal-wave.com>

You should note that backtracking, even with memorize turned on should
be a last resort or used to get things working until you come back and
hone things down a bit. It probably isn't so bad for a single rule,
depending what it is, but full backtracking causes the recognizer to do
a lot more work of course.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Tuesday, April 24, 2007 10:11 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] simple URL extractor

bace.spam at gmx.net wrote:
> 
> No, unfortunately I cannot discard the remaining text. I know the
grammar looks fine - but does not work. I get the same inappropriate
behavior if I set backtrack=true; at the beginning. Do you know how I
can set the backtrack-option for only one rule in antlr v3:

Do you have rules which apply to the remaining text?

> rule
> (options {backtrack=true;})
>     : alter1 | ... | alterN
>     ;

Remove the () and the rule should be fine. I recommend though to add
memoize=true; to speed speed up the parser.

Best regards,
Johannes Luber

From aliaazimi at yahoo.com  Wed Apr 25 09:52:06 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 25 Apr 2007 09:52:06 -0700 (PDT)
Subject: [antlr-interest] Installing antlworks!
Message-ID: <157427.53813.qm@web58105.mail.re3.yahoo.com>

Dear all,
  
I need to install ANTLRWorks. I have downloaded antlrworks-1.0b11 as a sip file. In the help page, I read the following:
 
"This archive contains everything needed to work with ANTLRWorks (it
includes ANTLR 3.x, StringTemplate, XJLibrary, ANTLR 2.x, etc.).
  To run ANTLRWorks, simply double-click on the antlrworks.jar
file.  From the command line, type "java -jar antlrworks.jar"."
 
when I unzip the ANTLRWorks with winrar and do a search I can not find a file called "antlworks.jar" so how should I run ANTLRWorks?

  Kind regards

       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070425/3e8291cc/attachment.html 

From aliaazimi at yahoo.com  Wed Apr 25 10:48:23 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 25 Apr 2007 10:48:23 -0700 (PDT)
Subject: [antlr-interest] installing antlr
Message-ID: <566653.81044.qm@web58110.mail.re3.yahoo.com>

Dear all,
   
  I have downloaded antlr-2.7.7.jar and when I double click on it, the following error message appears:
  "Invalid or corrupt jarfile C:\Document and Settings\ali\Desktop\antlr-2.7.7.jar"
  I do not think there is anything wrong with the jar file, it does not matter if I download again and again even for anlr-2.7.6. Could you please help?
   
  Kind regards,
  Ali

       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070425/0578544f/attachment.html 

From ma_laver at ciise.concordia.ca  Wed Apr 25 11:30:46 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Wed, 25 Apr 2007 14:30:46 -0400
Subject: [antlr-interest] Architectural Suggestion: Pluggable Error Reporting
Message-ID: <462F9E56.1010606@ciise.concordia.ca>

Hello,

In the Java implementation, I'm seeing BaseRecognizer.emitErrorMessage, 
that prints to stderr by default. I was thinking of this, and the 
related functions, and saw that I could recommend something.

Maybe the error reporting logic could be delegated to an overridable 
BaseErrorDisplayer class. The BaseRecognizer would have a set/get pair 
to deal with it. It would not have much performance overhead and would 
give us some customization for people like me who would like to report 
directly to a GUI.

What do you think of this idea?

Regards,

-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From porcelli at uol.com.br  Wed Apr 25 12:04:31 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Wed, 25 Apr 2007 16:04:31 -0300
Subject: [antlr-interest] Architectural Suggestion: Pluggable Error
	Reporting
In-Reply-To: <462F9E56.1010606@ciise.concordia.ca>
References: <462F9E56.1010606@ciise.concordia.ca>
Message-ID: <ee873c070704251204w4b971412qe150d659adc3e8a@mail.gmail.com>

You can just override the emitErrorMessage method and report directly
on any place that you want (log4j for example).

Regards,
Alexandre Porcelli

On 4/25/07, Marc-Andr? Laverdi?re <ma_laver at ciise.concordia.ca> wrote:
> Hello,
>
> In the Java implementation, I'm seeing BaseRecognizer.emitErrorMessage,
> that prints to stderr by default. I was thinking of this, and the
> related functions, and saw that I could recommend something.
>
> Maybe the error reporting logic could be delegated to an overridable
> BaseErrorDisplayer class. The BaseRecognizer would have a set/get pair
> to deal with it. It would not have much performance overhead and would
> give us some customization for people like me who would like to report
> directly to a GUI.
>
> What do you think of this idea?
>
> Regards,
>
> --
> Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
> Computer Security Laboratory - Laboratoire de s?curit? informatique
> CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
> www.ciise.concordia.ca
>
> /"\
> \ /    ASCII Ribbon Campaign
>   X      against HTML e-mail
> / \
>
> "Perseverance must finish its work so that you may be mature and
> complete, not lacking anything." -James 1:4
>

From dave at badgers-in-foil.co.uk  Wed Apr 25 12:27:40 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Wed, 25 Apr 2007 19:27:40 +0000
Subject: [antlr-interest] Architectural Suggestion: Pluggable Error
	Reporting
In-Reply-To: <462F9E56.1010606@ciise.concordia.ca>
References: <462F9E56.1010606@ciise.concordia.ca>
Message-ID: <20070425192739.GA32589@badgers-in-foil.co.uk>

On Wed, Apr 25, 2007 at 02:30:46PM -0400, Marc-Andr? Laverdi?re wrote:
> Maybe the error reporting logic could be delegated to an overridable 
> BaseErrorDisplayer class. The BaseRecognizer would have a set/get pair 
> to deal with it. It would not have much performance overhead and would 
> give us some customization for people like me who would like to report 
> directly to a GUI.

+1

Though I'd go for ErrorDisplayer interface, and maybe an
ErrorDisplayer.DEFAULT instance that sends to stderr, as currently.


ta,
dave

-- 
http://david.holroyd.me.uk/

From antlr at mirality.co.nz  Wed Apr 25 13:09:59 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 26 Apr 2007 08:09:59 +1200
Subject: [antlr-interest] installing antlr
In-Reply-To: <566653.81044.qm@web58110.mail.re3.yahoo.com>
References: <566653.81044.qm@web58110.mail.re3.yahoo.com>
Message-ID: <20070425200956.DA4DB19090E@www.antlr.org>

At 05:48 26/04/2007, ali azimi wrote:
>I have downloaded antlr-2.7.7.jar and when I double click on it, 
>the following error message appears:
>"Invalid or corrupt jarfile C:\Document and 
>Settings\ali\Desktop\antlr-2.7.7.jar"
>I do not think there is anything wrong with the jar file, it does 
>not matter if I download again and again even for anlr-2.7.6. 
>Could you please help?

This is normal.  ANTLR is designed to be used from the command 
line (or another program) and cannot be run directly from Windows, 
as it has no GUI of its own.  Either use ANTLRworks (only for v3) 
or see the usage instructions in the readme.


From vgusev at graphlogic.com  Wed Apr 25 13:32:02 2007
From: vgusev at graphlogic.com (Vladimir Gusev)
Date: Wed, 25 Apr 2007 16:32:02 -0400
Subject: [antlr-interest] Architectural Suggestion: Pluggable
	ErrorReporting
In-Reply-To: <20070425192739.GA32589@badgers-in-foil.co.uk>
References: <462F9E56.1010606@ciise.concordia.ca>
	<20070425192739.GA32589@badgers-in-foil.co.uk>
Message-ID: <000901c78778$c82e20c0$4a6fa8c0@graphlogic.com>

As far as I remember, the error output behaviour is overridable via grammar
file. This is how I do it in the parser part:

....
  private ErrorReporter errorReporter;

	public CalcParser(TokenStream lexer, ErrorReporter errorReporter) {
	  this(lexer, 4);
	  this.errorReporter = errorReporter;
	}

	public void reportError(RecognitionException e) {
		errorReporter.reportError(e.getMessage(),
                                   e.getLine(),
                                   e.getColumn());
	}

   }
.....
ErrorReporter is a simple adapter which does arbitrary error output.

Vladimir


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Holroyd
Sent: Wednesday, April 25, 2007 3:28 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Architectural Suggestion: Pluggable
ErrorReporting

On Wed, Apr 25, 2007 at 02:30:46PM -0400, Marc-Andr? Laverdi?re wrote:
> Maybe the error reporting logic could be delegated to an overridable 
> BaseErrorDisplayer class. The BaseRecognizer would have a set/get pair 
> to deal with it. It would not have much performance overhead and would 
> give us some customization for people like me who would like to report 
> directly to a GUI.

+1

Though I'd go for ErrorDisplayer interface, and maybe an
ErrorDisplayer.DEFAULT instance that sends to stderr, as currently.


ta,
dave

--
http://david.holroyd.me.uk/


From aliaazimi at yahoo.com  Wed Apr 25 13:49:22 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 25 Apr 2007 13:49:22 -0700 (PDT)
Subject: [antlr-interest] Help please!
Message-ID: <490425.23258.qm@web58109.mail.re3.yahoo.com>

 
  Dear all,
   
  I know that my questions are so trivial which might not persuade some of you to reply to me. 
  I have downloaded ?antlrworks-1.0b11.zip?. However I am not able to or I should say I do not know how to get it to work. (When I unzip it there are some files. No executable files so I can click on it. So how should I install it? I apologize for this very trivial question.)
  I really appreciate any help.
   
  Kind regards,
   
  Ali

       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070425/af652bad/attachment.html 

From jaluber at gmx.de  Wed Apr 25 13:52:50 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 25 Apr 2007 22:52:50 +0200
Subject: [antlr-interest] Help please!
In-Reply-To: <490425.23258.qm@web58109.mail.re3.yahoo.com>
References: <490425.23258.qm@web58109.mail.re3.yahoo.com>
Message-ID: <462FBFA2.1030704@gmx.de>

ali azimi wrote:
>  
> Dear all,
>  
> I know that my questions are so trivial which might not persuade some of
> you to reply to me.
> I have downloaded ?antlrworks-1.0b11.zip?. However I am not able to or I
> should say I do not know how to get it to work. (When I unzip it there
> are some files. No executable files so I can click on it. So how should
> I install it? I apologize for this very trivial question.)
> I really appreciate any help.

As I wrote already in the private email, please rename the file
?antlrworks-1.0b11.zip? to "?antlrworks-1.0b11.jar?. Afterwards you can
click on it.

Best regards,
Johannes Luber

From ma_laver at ciise.concordia.ca  Wed Apr 25 14:38:29 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Wed, 25 Apr 2007 17:38:29 -0400
Subject: [antlr-interest] Reccomended method: actions or TreeAdaptor?
Message-ID: <462FCA55.9030300@ciise.concordia.ca>

Hello,

I guess you can tell by now that I'm a newbie to the world of 
programming languages/compilation.

My objective is to translate the raw AST into something that fits in a 
class diagram that represents my program logic, so that I can write some 
code interfacing with it and handling it.

I was discussing with a colleague who used yacc who told me that I 
should modify the AST using actions. Yet, the Wiki hints that the 
TreeAdaptor is the way to go now...

Some articles on the website (from Antlr2) talk about tree grammars as 
well, so I end up not knowing what's the best way to do what I have to do.

What are the options, the pros and the cons?

Thanks!


-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From fanyang32 at gmail.com  Wed Apr 25 16:17:10 2007
From: fanyang32 at gmail.com (fan yang)
Date: Wed, 25 Apr 2007 19:17:10 -0400
Subject: [antlr-interest] Where can I find the article "Parsers,
	Part IV: A Java Cross-Reference Tool"?
Message-ID: <1a85efe40704251617o74183668maad8f5fd090d58f6@mail.gmail.com>

Hi All,

I read the article "Parsers, Part IV: A Java Cross-Reference Tool"
long time ago, recently I want to read this article again, but the
link was broken, the original link is
http://developer.java.sun.com/developer/technicalArticles/Parser/SeriesPt4/.
Does anyone have the article? Would you please send me an copy of it?
Thanks.

Fan

From parrt at cs.usfca.edu  Wed Apr 25 17:11:49 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Apr 2007 17:11:49 -0700
Subject: [antlr-interest] Where can I find the article "Parsers,
	Part IV: A Java Cross-Reference Tool"?
In-Reply-To: <1a85efe40704251617o74183668maad8f5fd090d58f6@mail.gmail.com>
References: <1a85efe40704251617o74183668maad8f5fd090d58f6@mail.gmail.com>
Message-ID: <900B2CAF-6A28-4A74-B0B2-DACD60D2AAFB@cs.usfca.edu>

Hi. There are many better articles at this point that referred to  
more recent versions of ANTLR. I would check the getting started  
document in the documentation section of the site.
Ter
On Apr 25, 2007, at 4:17 PM, fan yang wrote:

> Hi All,
>
> I read the article "Parsers, Part IV: A Java Cross-Reference Tool"
> long time ago, recently I want to read this article again, but the
> link was broken, the original link is
> http://developer.java.sun.com/developer/technicalArticles/Parser/ 
> SeriesPt4/.
> Does anyone have the article? Would you please send me an copy of it?
> Thanks.
>
> Fan


From jimi at temporal-wave.com  Wed Apr 25 18:03:54 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Apr 2007 18:03:54 -0700
Subject: [antlr-interest] Reccomended method: actions or TreeAdaptor?
In-Reply-To: <462FCA55.9030300@ciise.concordia.ca>
References: <462FCA55.9030300@ciise.concordia.ca>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362523D5@wavemachine.temporal-wave.com>

Your colleague is correct. Unless you need some weird and wonderful elements to form the tree, you don't need your won tree adaptor or anything. You can specify the type of object that is passed around in the tree, so long as it inherits from BaseTree, but I doubt you need that either.

What you should do is download the ANTLR examples. In there you will find a small tree example.

Bon Chance,
Jim


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marc-Andr? Laverdi?re
Sent: Wednesday, April 25, 2007 2:38 PM
To: ANTLR Interest
Subject: [antlr-interest] Reccomended method: actions or TreeAdaptor?

Hello,

I guess you can tell by now that I'm a newbie to the world of 
programming languages/compilation.

My objective is to translate the raw AST into something that fits in a 
class diagram that represents my program logic, so that I can write some 
code interfacing with it and handling it.

I was discussing with a colleague who used yacc who told me that I 
should modify the AST using actions. Yet, the Wiki hints that the 
TreeAdaptor is the way to go now...

Some articles on the website (from Antlr2) talk about tree grammars as 
well, so I end up not knowing what's the best way to do what I have to do.

What are the options, the pros and the cons?

Thanks!


-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From antlr-list at arizona-software.ch  Wed Apr 25 20:04:55 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 25 Apr 2007 20:04:55 -0700
Subject: [antlr-interest] Help please!
In-Reply-To: <490425.23258.qm@web58109.mail.re3.yahoo.com>
References: <490425.23258.qm@web58109.mail.re3.yahoo.com>
Message-ID: <28CDCFC6-3899-4F48-9353-2933ECC2E616@arizona-software.ch>

Hi,

If you are running on Mac OS X, download the zip file (http:// 
www.antlr.org/download/antlrworks-1.0b11.zip), otherwise download the  
jar file (http://www.antlr.org/download/antlrworks-1.0b11.jar). If  
you are downloading on Windows, make sure that the browser recognized  
the jar file extension and does not convert it into zip.

Once you downloaded the jar file, either double-click on it if you  
configured Windows to run jar file or use the command line with the  
command "java -jar antlrworks-1.0b11.jar".

Regards,

Jean

On Apr 25, 2007, at 1:49 PM, ali azimi wrote:

>
> Dear all,
>
> I know that my questions are so trivial which might not persuade  
> some of you to reply to me.
> I have downloaded ?antlrworks-1.0b11.zip?. However I am not able to  
> or I should say I do not know how to get it to work. (When I unzip  
> it there are some files. No executable files so I can click on it.  
> So how should I install it? I apologize for this very trivial  
> question.)
> I really appreciate any help.
>
> Kind regards,
>
> Ali
>
> Ahhh...imagining that irresistible "new car" smell?
> Check out new cars at Yahoo! Autos.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070425/1b4646cd/attachment-0001.html 

From ivojimenez at gmail.com  Thu Apr 26 02:27:46 2007
From: ivojimenez at gmail.com (Ivo Jimenez)
Date: Thu, 26 Apr 2007 02:27:46 -0700
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
Message-ID: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>

Hi all,

First of all, let me say that ANTLR rules the whole universe (at least the
parser generator one).

I'm writing the grammar for a superset of a subset of the SQL language,
everything works fine in ANTLRWorks (1.0b11)  but when calling ANTLR from
the command line with:

java -cp antlr-2.7.7.jar:antlr-3.0b7.jar:stringtemplate-3.0.jar
org.antlr.Tool SqlV3.g

I get the following:

error(10):  internal error: examples-v3/SqlV3.g :
java.lang.IllegalArgumentException: Can't find template tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(
StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(
StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(
StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java
:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1970)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1599)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1434)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1224)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1009)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:725)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:458)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:305)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:409)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)

So you know how can I fix this? This happens also if I run the Debug feature
of the ANTLRWorks IDE.

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070426/addf0171/attachment.html 

From ivojimenez at gmail.com  Thu Apr 26 04:19:30 2007
From: ivojimenez at gmail.com (Ivo Jimenez)
Date: Thu, 26 Apr 2007 04:19:30 -0700
Subject: [antlr-interest] Fwd: Can't find template tokenRefRuleRoot.st
In-Reply-To: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
References: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
Message-ID: <86d8a57b0704260419h5d9fe85rc88482ea650188f8@mail.gmail.com>

I'm sorry, I forgot to mention that I'm using Linux. Thanks for your answer
though :)


On 4/26/07, Miguel Ping <miguel.ping at gmail.com> wrote:
>
> I guess the classpath element separator is the ';' not the ':'
>
> :) Try using ';' instead.
>
> On 4/26/07, Ivo Jimenez < ivojimenez at gmail.com> wrote:
> >
> > Hi all,
> >
> > First of all, let me say that ANTLR rules the whole universe (at least
> > the parser generator one).
> >
> > I'm writing the grammar for a superset of a subset of the SQL language,
> > everything works fine in ANTLRWorks ( 1.0b11)  but when calling ANTLR
> > from the command line with:
> >
> > java -cp antlr-2.7.7.jar:antlr-3.0b7.jar:stringtemplate-3.0.jar
> > org.antlr.Tool SqlV3.g
> >
> > I get the following:
> >
> > error(10):  internal error: examples-v3/SqlV3.g :
> > java.lang.IllegalArgumentException: Can't find template
> > tokenRefRuleRoot.st
> > org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate (
> > StringTemplateGroup.java:485)
> > org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(
> > StringTemplateGroup.java:372)
> > org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(
> > StringTemplateGroup.java:384)
> > org.antlr.codegen.CodeGenTreeWalker.getTokenElementST (
> > CodeGenTreeWalker.java:160)
> > org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1970)
> > org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1599)
> > org.antlr.codegen.CodeGenTreeWalker.element (CodeGenTreeWalker.java
> > :1434)
> > org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java
> > :1224)
> > org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1009)
> > org.antlr.codegen.CodeGenTreeWalker.rule (CodeGenTreeWalker.java:725)
> > org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)
> > org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java
> > :458)
> > org.antlr.codegen.CodeGenTreeWalker.grammar (CodeGenTreeWalker.java:305)
> > org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:409)
> > org.antlr.Tool.processGrammar(Tool.java:347)
> > org.antlr.Tool.process(Tool.java:268)
> > org.antlr.Tool.main(Tool.java :70)
> >
> > So you know how can I fix this? This happens also if I run the Debug
> > feature of the ANTLRWorks IDE.
> >
> > Thanks.
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070426/2f91e53b/attachment.html 

From rbharath24 at yahoo.com  Thu Apr 26 04:25:05 2007
From: rbharath24 at yahoo.com (Bharath R)
Date: Thu, 26 Apr 2007 04:25:05 -0700 (PDT)
Subject: [antlr-interest] Specifying limit on number of digits in the
	Grammar in ANTLR
Message-ID: <153373.61013.qm@web36205.mail.mud.yahoo.com>

Hi,

      I'm a newbie to ANTLR. 
        I am trying to write a simple parser, that accepts number whose number of digits vary from 1 to 5. 

    Below is the ABNF format  ID: 1*5(DIGIT)
 DIGIT: '0'..'9'
 
 i.e the ID can be any number varying from a 1 digit number to a max of 5digit number. Each digit varying between 0 and 9.  
 How do I achieve this in ANTLR? I have been trying to write an equivalent EBNF format but without success. 
 Thanks for you help. 



Regards,
Bharath


       
---------------------------------
Ahhh...imagining that irresistible "new car" smell?
 Check outnew cars at Yahoo! Autos.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070426/933e1069/attachment.html 

From lbiondi at olijo.com  Thu Apr 26 04:30:44 2007
From: lbiondi at olijo.com (Lucio Biondi)
Date: Thu, 26 Apr 2007 13:30:44 +0200
Subject: [antlr-interest] Fwd: Can't find template tokenRefRuleRoot.st
In-Reply-To: <86d8a57b0704260419h5d9fe85rc88482ea650188f8@mail.gmail.com>
References: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
	<86d8a57b0704260419h5d9fe85rc88482ea650188f8@mail.gmail.com>
Message-ID: <200704261330.44994.lbiondi@olijo.com>

Hi Ivo,

I also got this error, some time ago.

Sorry, I don't remember the cause (I guess only
Terence could explain it), but anyway is something
relative to the grammar. Try to add/sub rules until you catch it.

Lucio

From porcelli at uol.com.br  Thu Apr 26 04:40:43 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Thu, 26 Apr 2007 08:40:43 -0300
Subject: [antlr-interest] Specifying limit on number of digits in the
	Grammar in ANTLR
In-Reply-To: <153373.61013.qm@web36205.mail.mud.yahoo.com>
References: <153373.61013.qm@web36205.mail.mud.yahoo.com>
Message-ID: <ee873c070704260440g57975c3cjc7a534e542493765@mail.gmail.com>

This problem is well described in the new Ter book (page 292, in my
last beta version).

In fact there is 3 ways to do it:

1) Simple context-free grammar

ID: DIGIT DIGIT DIGIT DIGIT DIGIT
| DIGIT DIGIT DIGIT DIGIT
| DIGIT DIGIT DIGIT
| DIGIT DIGIT
| DIGIT
;

2) Verify the size using actions

ID: ( d+=DIGIT)+ {if ( $d.size() > 5 ) <<error action>> }?
;


3) Using validating semantic predicate

ID: ( d+=DIGIT)+ {$d.size() <= 5}?
;


What is the best solution? It always depends (on my point of view) but
if sometimes you will need to change your grammar to accept 7 instead
of 5 digits? I would choose the third one.

Alexandre Porcelli


On 4/26/07, Bharath R <rbharath24 at yahoo.com> wrote:
> Hi,
>
>       I'm a newbie to ANTLR.
>         I am trying to write a simple parser, that accepts number whose
> number of digits vary from 1 to 5.
>
>     Below is the ABNF format
>  ID: 1*5(DIGIT)
>  DIGIT: '0'..'9'
>
>  i.e the ID can be any number varying from a 1 digit number to a max of
> 5digit number. Each digit varying between 0 and 9.
>  How do I achieve this in ANTLR? I have been trying to write an equivalent
> EBNF format but without success.
>  Thanks for you help.
>
> Regards,
> Bharath
>
>
>  ________________________________
> Ahhh...imagining that irresistible "new car" smell?
>  Check out new cars at Yahoo! Autos.
>
>

From fesh at VerariSoft.Com  Thu Apr 26 06:36:40 2007
From: fesh at VerariSoft.Com (Eric Fesh)
Date: Thu, 26 Apr 2007 08:36:40 -0500
Subject: [antlr-interest] Specifying limit on number of digits in the
 Grammar in ANTLR
In-Reply-To: <ee873c070704260440g57975c3cjc7a534e542493765@mail.gmail.com>
References: <153373.61013.qm@web36205.mail.mud.yahoo.com>
	<ee873c070704260440g57975c3cjc7a534e542493765@mail.gmail.com>
Message-ID: <4630AAE8.9030704@verarisoft.com>

I'm currently using V2 until V3 comes out of beta. Does option 3 work with V2?

--

Eric Fesh
Software Engineer
Verari Systems Software, Inc.
110 12th Street North, Suite D103
Birmingham, AL 35203
Phone +1-205-397-3141 ext. 3151
Fax +1-205-397-3142
fesh at verarisoft.com
http://www.verarisoft.com/

The information contained in this communication may be confidential and is
intended only for the use of the recipient(s) named above.  If the reader of
this communication is not the intended recipient(s), you are hereby notified
that any dissemination, distribution, or copying of this communication, or
any of its contents, is strictly prohibited.  If you are not a named
recipient or received this communication by mistake, please notify the sender
and delete the communication and all copies of it.


Alexandre Porcelli wrote:
> This problem is well described in the new Ter book (page 292, in my
> last beta version).
> 
> In fact there is 3 ways to do it:
> 
> 1) Simple context-free grammar
> 
> ID: DIGIT DIGIT DIGIT DIGIT DIGIT
> | DIGIT DIGIT DIGIT DIGIT
> | DIGIT DIGIT DIGIT
> | DIGIT DIGIT
> | DIGIT
> ;
> 
> 2) Verify the size using actions
> 
> ID: ( d+=DIGIT)+ {if ( $d.size() > 5 ) <<error action>> }?
> ;
> 
> 
> 3) Using validating semantic predicate
> 
> ID: ( d+=DIGIT)+ {$d.size() <= 5}?
> ;
> 
> 
> What is the best solution? It always depends (on my point of view) but
> if sometimes you will need to change your grammar to accept 7 instead
> of 5 digits? I would choose the third one.
> 
> Alexandre Porcelli
> 
> 
> On 4/26/07, Bharath R <rbharath24 at yahoo.com> wrote:
>> Hi,
>>
>>       I'm a newbie to ANTLR.
>>         I am trying to write a simple parser, that accepts number whose
>> number of digits vary from 1 to 5.
>>
>>     Below is the ABNF format
>>  ID: 1*5(DIGIT)
>>  DIGIT: '0'..'9'
>>
>>  i.e the ID can be any number varying from a 1 digit number to a max of
>> 5digit number. Each digit varying between 0 and 9.
>>  How do I achieve this in ANTLR? I have been trying to write an 
>> equivalent
>> EBNF format but without success.
>>  Thanks for you help.
>>
>> Regards,
>> Bharath
>>
>>
>>  ________________________________
>> Ahhh...imagining that irresistible "new car" smell?
>>  Check out new cars at Yahoo! Autos.
>>
>>

From parrt at cs.usfca.edu  Thu Apr 26 08:34:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 26 Apr 2007 08:34:00 -0700
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
References: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
Message-ID: <A67CF53D-261B-4899-B01B-6EF1F7DACB74@cs.usfca.edu>


On Apr 26, 2007, at 2:27 AM, Ivo Jimenez wrote:

> Hi all,
>
> First of all, let me say that ANTLR rules the whole universe (at  
> least the parser generator one).
>
> I'm writing the grammar for a superset of a subset of the SQL  
> language, everything works fine in ANTLRWorks ( 1.0b11)  but when  
> calling ANTLR from the command line with:
>
> java -cp antlr-2.7.7.jar:antlr-3.0b7.jar:stringtemplate-3.0.jar  
> org.antlr.Tool SqlV3.g

Then it's a classpath issue. ;)

Ter
>
>


From jimi at temporal-wave.com  Thu Apr 26 10:10:33 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Apr 2007 10:10:33 -0700
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
References: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362523DE@wavemachine.temporal-wave.com>

I think that this is fixed now, but if you are using the latest antlr
works you are using a newer version of ANTLR3 and should try your
grammar with that version of the jara and not the b7 one you have.
Antlrworks contains antlr, so issue the same command but instead of
antlr-3.0b7, use the antlrworks jar. If that has a fixed version of
antlr, then it will work for you.

 

That said, you may find that it is ok in interpreting mode in Antlr
Works, but not when you try to code gen. I no longer remember exactly
what construct in the grammar triggers this, but it is something like
having output=AST; then using ^ on a rule reference rather than a token.
Again, I believe that Ter's new tree re-writing changes have fixed all
that. But if you use -> instead of ^ then it will go away I think.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ivo Jimenez
Sent: Thursday, April 26, 2007 2:28 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st

 

Hi all,

First of all, let me say that ANTLR rules the whole universe (at least
the parser generator one).

I'm writing the grammar for a superset of a subset of the SQL language,
everything works fine in ANTLRWorks ( 1.0b11)  but when calling ANTLR
from the command line with:

java -cp antlr-2.7.7.jar:antlr-3.0b7.jar:stringtemplate-3.0.jar
org.antlr.Tool SqlV3.g


I get the following:

error(10):  internal error: examples-v3/SqlV3.g :
java.lang.IllegalArgumentException: Can't find template
tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate
(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplat
eGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplat
eGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST
(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1970)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1599)
org.antlr.codegen.CodeGenTreeWalker.element
(CodeGenTreeWalker.java:1434)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1
224)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1009)
org.antlr.codegen.CodeGenTreeWalker.rule (CodeGenTreeWalker.java:725)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:4
58)
org.antlr.codegen.CodeGenTreeWalker.grammar (CodeGenTreeWalker.java:305)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:409)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java :70)

So you know how can I fix this? This happens also if I run the Debug
feature of the ANTLRWorks IDE.

Thanks.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070426/f1bd9e4f/attachment-0001.html 

From antlr at jazillian.com  Thu Apr 26 11:12:21 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 26 Apr 2007 14:12:21 -0400
Subject: [antlr-interest] Reccomended method: actions or TreeAdaptor?
In-Reply-To: <462FCA55.9030300@ciise.concordia.ca>
References: <462FCA55.9030300@ciise.concordia.ca>
Message-ID: <4630EB85.6070405@jazillian.com>

Here's a paper that advocates walking the AST "manually" rather
than using ANTLR actions or treewalkers:
http://www.jazillian.com/articles/treewalkers.html

It's for nonconformists and perpetual-ANTLR-newbies :)
Andy

From ma_laver at ciise.concordia.ca  Thu Apr 26 11:22:26 2007
From: ma_laver at ciise.concordia.ca (=?ISO-8859-1?Q?Marc-Andr=E9_Laverdi=E8re?=)
Date: Thu, 26 Apr 2007 14:22:26 -0400
Subject: [antlr-interest] Reccomended method: actions or TreeAdaptor?
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362523D5@wavemachine.temporal-wave.com>
References: <462FCA55.9030300@ciise.concordia.ca>
	<B36CCC332A32904F8FA3DE134A2353362523D5@wavemachine.temporal-wave.com>
Message-ID: <4630EDE2.8060000@ciise.concordia.ca>

Hello,

I tried putting in some classes in a {} pair at the beginning, to no 
avail. AntlrWorks doesn't like the grammar.

I was thinking of having something like
a: b[$$]
b[classA a]: ... {a.addB(new B ($$));}

Would that work in V3? I'm getting a bit frustrated by the small 
documentation online, and I don't have the budget to buy the book. I 
really want to spare myself the pain of using Bison (and its annoying 
generated C/C++ code).

Just negotiating a deal here: if I can make this work (and I'll need 
help for that), I'll write an article on the Wiki titled "My grammar 
works, what do I do now?".

MA

Jim Idle wrote:
> Your colleague is correct. Unless you need some weird and wonderful elements to form the tree, you don't need your won tree adaptor or anything. You can specify the type of object that is passed around in the tree, so long as it inherits from BaseTree, but I doubt you need that either.
> 
> What you should do is download the ANTLR examples. In there you will find a small tree example.
> 
> Bon Chance,

Bonne chance :P

> <snip>
-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From jimi at temporal-wave.com  Thu Apr 26 12:05:55 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 26 Apr 2007 12:05:55 -0700
Subject: [antlr-interest] Reccomended method: actions or TreeAdaptor?
In-Reply-To: <4630EDE2.8060000@ciise.concordia.ca>
References: <462FCA55.9030300@ciise.concordia.ca>
	<B36CCC332A32904F8FA3DE134A2353362523D5@wavemachine.temporal-wave.com>
	<4630EDE2.8060000@ciise.concordia.ca>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362523E0@wavemachine.temporal-wave.com>

Marc,

The easiest thing to do would be to download the samples here:
http://www.antlr.org/download/examples-v3.tar.gz

and look at the example in there called simplecTreeParser. All you need do is expand on that example I think.

Jim

-----Original Message-----
From: Marc-Andr? Laverdi?re [mailto:ma_laver at ciise.concordia.ca] 
Sent: Thursday, April 26, 2007 11:22 AM
To: Jim Idle
Cc: ANTLR Interest
Subject: Re: [antlr-interest] Reccomended method: actions or TreeAdaptor?

Hello,

I tried putting in some classes in a {} pair at the beginning, to no 
avail. AntlrWorks doesn't like the grammar.

I was thinking of having something like
a: b[$$]
b[classA a]: ... {a.addB(new B ($$));}

Would that work in V3? I'm getting a bit frustrated by the small 
documentation online, and I don't have the budget to buy the book. I 
really want to spare myself the pain of using Bison (and its annoying 
generated C/C++ code).

Just negotiating a deal here: if I can make this work (and I'll need 
help for that), I'll write an article on the Wiki titled "My grammar 
works, what do I do now?".

MA

Jim Idle wrote:
> Your colleague is correct. Unless you need some weird and wonderful elements to form the tree, you don't need your won tree adaptor or anything. You can specify the type of object that is passed around in the tree, so long as it inherits from BaseTree, but I doubt you need that either.
> 
> What you should do is download the ANTLR examples. In there you will find a small tree example.
> 
> Bon Chance,

Bonne chance :P

> <snip>
-- 
Marc-Andr? LAVERDI?RE, B. Eng., M. A. Sc. (in progress)
Computer Security Laboratory - Laboratoire de s?curit? informatique
CIISE, Universit? Concordia University, Montr?al, Qu?bec, Canada
www.ciise.concordia.ca

/"\
\ /    ASCII Ribbon Campaign
  X      against HTML e-mail
/ \

"Perseverance must finish its work so that you may be mature and 
complete, not lacking anything." -James 1:4

From porcelli at uol.com.br  Thu Apr 26 12:41:36 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Thu, 26 Apr 2007 16:41:36 -0300
Subject: [antlr-interest] ANTLRWorks 1.b11 bug
Message-ID: <ee873c070704261241p69679d4by83d3bf40e22eb318@mail.gmail.com>

The attached grammar generates the following error:

[16:34:01] teste.g:12:5: unexpected char: '>'

It is because my last line has a close group element : "// $>". I
think it is a simple bug.

PS: A workaround is to add a blank line at end of the file!

[]s,
Alexandre Porcelli
-------------- next part --------------
A non-text attachment was scrubbed...
Name: teste.g
Type: application/octet-stream
Size: 104 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070426/fccad363/attachment.obj 

From bmf1972 at fastmail.fm  Thu Apr 26 12:48:54 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Thu, 26 Apr 2007 22:48:54 +0300
Subject: [antlr-interest] subrules and testLiterals=true
Message-ID: <f0qvoe$e6v$1@sea.gmane.org>

Hi all,

I am trying to make the following lexer rules work:

PACKAGE_QNAME
	:	PACKAGE_NAME { $setType( PACKAGE_NAME ); } ( DOT PACKAGE_NAME { 
$setType( PACKAGE_QNAME ); } )*
	;

PACKAGE_NAME
	options {testLiterals = true;}
	:	'a'..'z' ('a'..'z'|'0'..'9')*
	;

In the parser I have:

packageDefinition
	:	"package" PACKAGE_QNAME SEMI!
	;


I cannot find a way to apply the testLiterals=true option to the 
PACKAGE_NAME subrule in the PACKAGE_QNAME rule.

Please help,
Adrian.


From jhvdven at xs4all.nl  Thu Apr 26 14:25:40 2007
From: jhvdven at xs4all.nl (Jan van der Ven)
Date: Thu, 26 Apr 2007 23:25:40 +0200
Subject: [antlr-interest] Repeating pieces of a tree.
Message-ID: <463118D4.4020006@xs4all.nl>

Dear list,


I am working on a SQL-92 (from Mr. Vnuk) grammar in 2.7.7.

In SQL you can define a relation that spans more than one column:
ALTER TABLE mySchema.myTable ADD FOREIGN KEY (B,C,D) REFERENCES 
ourServer.yourSchema.Table (COL1, COl2, COL3);

I am trying to create a tree that repeats: ourServer.yourSchema.Table 
for each column (COL1, COL2, COL3).

What I have tried so far was not very successfull (why post otherwise?):
//  Rule #439 <ref_column_list> was replace by <column_name_list>
//{ Rule #435 <refd_table_and_columns>
refd_table_and_columns :
//    tn:table_name (LEFT_PAREN! 
/*ref_column_list*/(r1:REGULAR_ID^|d1:DELIMITED_ID^) (COMMA! 
(r2:REGULAR_ID^|d2:DELIMITED_ID^))* RIGHT_PAREN!)?
//    tn:table_name! (LEFT_PAREN! 
/*ref_column_list*/(r1:REGULAR_ID!{##=#([COLUMN_LIST, 
"jopie"],#r1,#tn);}|d1:DELIMITED_ID^)  (COMMA! 
(r2:REGULAR_ID!{##=#([COLUMN_LIST, 
"pietje"],#r2,#tn);}|d2:DELIMITED_ID^))* RIGHT_PAREN!)?
//    tn:table_name (LEFT_PAREN! 
/*ref_column_list*/(r1:REGULAR_ID^|d1:DELIMITED_ID^)  (COMMA! 
(r2:REGULAR_ID^|d2:DELIMITED_ID^))* RIGHT_PAREN!)?
    tn:table_name! (LEFT_PAREN! 
/*ref_column_list*/(r1:REGULAR_ID!{##=#(#r1, #tn);}|d1:DELIMITED_ID^)  
(COMMA! (r2:REGULAR_ID!{##=#(#r2, #tn);}|d2:DELIMITED_ID^))* RIGHT_PAREN!)?
;

I am going for a tree with the column tops and a child table and a 
schema child of that and a server child of the schema. The table_name 
rule handles schema and server.

My best try gave me a tree that listed COL3, and then COL2 as a child 
and the COL1 and then the table,schema, server stuff.

Any advise would be greatly appreciated.


Kind regards,


Jan



From ilia at obnovlenie.ru  Thu Apr 26 14:50:25 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Fri, 27 Apr 2007 01:50:25 +0400
Subject: [antlr-interest] Current antlr bugs [b7]
Message-ID: <200704270150.25613.ilia@obnovlenie.ru>


Hello, 

Tokens location is fixed, that's fine.. 
But all other locations cause strange errors.


$ ./antlr.sh BugToken.g
no such locale file org/antlr/tool/templates/messages/languages/ru.stg retrying with English locale
ANTLR Parser Generator  Version 3.0b7 (April 12, 2007)  1989-2007
error(100): BugToken.g:12:1: syntax error: antlr: BugToken.g:12:1: unexpected token: options {
error(10):  internal error: BugToken.g : java.lang.NullPointerException
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:516)
org.antlr.tool.Grammar.<init>(Grammar.java:448)
org.antlr.Tool.getGrammar(Tool.java:331)
org.antlr.Tool.process(Tool.java:267)
org.antlr.Tool.main(Tool.java:70)

grammar BugToken;


tokens {
        IF;
        THEN;
        ELSE;
        EVAL;
        TEXT;
}

options {
        superClass=CommandParentParser;
        output=AST;
}



From ilia at obnovlenie.ru  Thu Apr 26 14:57:10 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Fri, 27 Apr 2007 01:57:10 +0400
Subject: [antlr-interest] Latest antlr minor problem [b7]
Message-ID: <200704270157.10477.ilia@obnovlenie.ru>


There is a warning, maybe there should be a correct way to avoid it ?


./antlr.sh BugType.g
warning(105): BugType.g:22:4: no lexer rule corresponding to token: IF

=======================

grammar A;

tokens {
	IF;
}

WORD: 'a' { $type=IF; } ;

document	:	IF;

========================

I used to change tokens { .. } section into this to remove warning:

IF: {false}? .;

But feels dirty.

V/R
Ilia Kantor








From aaron.feng at gmail.com  Thu Apr 26 20:04:30 2007
From: aaron.feng at gmail.com (Aaron Feng)
Date: Thu, 26 Apr 2007 23:04:30 -0400
Subject: [antlr-interest] PL/SQL create script via C# like language
In-Reply-To: <4e3934860704181209p63973aadl369218ed9959347e@mail.gmail.com>
References: <4e3934860704141938j7c1e08a6o4db941702a233876@mail.gmail.com>
	<6222A01E-3D68-4747-A0B8-B5FB23C1B280@cs.usfca.edu>
	<4e3934860704181209p63973aadl369218ed9959347e@mail.gmail.com>
Message-ID: <4e3934860704262004v67808dbbve38c2d4e1531625e@mail.gmail.com>

Here is the follow up that uses AST for the translation instead of
String Template:

http://aaronfeng.com/articles/2007/04/26/translation-part-2-via-abstract-syntax-tree

Aaron

On 4/18/07, Aaron Feng <aaron.feng at gmail.com> wrote:
> The commenting was broken on my blog, it has been fixed.  I'm planning on
> posting the second part of the tranlation in a couple of days that uses AST
> instead of string template.
>
>
> On 4/15/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> > Added to article list :)
> > Thanks,
> > Ter
> > On Apr 14, 2007, at 7:38 PM, Aaron Feng wrote:
> >
> > > I did a simple translator that will read in C# like language and
> > > output PL/SQL for creating tables.  Someone new to ANTLR might find it
> > > interesting.  The example can be found
> > >
> http://www.aaronfeng.com/articles/2007/04/14/csharp-to-pl-sql
> > >
> > > I'm fairly new to ANTLR, so all comments are welcome.
> > >
> > > Aaron
> >
> >
>
>

From femtowin1 at gmail.com  Thu Apr 26 23:25:06 2007
From: femtowin1 at gmail.com (femtowin1)
Date: Thu, 26 Apr 2007 23:25:06 -0700 (PDT)
Subject: [antlr-interest] how to let parser control lexer state.
Message-ID: <e11a0c0a5d8c4e8bb637fafe1fca3131@5c28fdff2ae74498ac1e2fd57f725ed1>

Hi all, in antlr3, can parser control lexer state
and decide how lexer lexing? some grammar has ambiguity
decided upon by parser knowledge.
  for ruby grammar <<
x << 1
test
1
if x is a variable, then << is shift operator,
otherwise it is a heredoc. so lexing must know
from the symbol table whether x has been defined
beforehand. But current antlrv3 implementation,
lexer lexing to a constant token stream, and feed
it into parser, so can't achieve this effect.
______________________________________
Sent from my www.pageflakes.com startpage

From ivojimenez at gmail.com  Fri Apr 27 02:22:14 2007
From: ivojimenez at gmail.com (Ivo Jimenez)
Date: Fri, 27 Apr 2007 02:22:14 -0700
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <B36CCC332A32904F8FA3DE134A2353362523DE@wavemachine.temporal-wave.com>
References: <86d8a57b0704260227t3fa965dfmdc93b5ae13d6f04e@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A2353362523DE@wavemachine.temporal-wave.com>
Message-ID: <86d8a57b0704270222p40d291d6g4572a3644bae231e@mail.gmail.com>

Hi,

I did have output=AST; and ^ in the grammar. I removed them and everything
works fine now, I mean, the code is generated.

Thanks a lot for your answers.



On 4/26/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>  I think that this is fixed now, but if you are using the latest antlr
> works you are using a newer version of ANTLR3 and should try your grammar
> with that version of the jar and not the b7 one you have. Antlrworks
> contains antlr, so issue the same command but instead of antlr-3.0b7, use
> the antlrworks jar. If that has a fixed version of antlr, then it will work
> for you.
>
>
>
> That said, you may find that it is ok in interpreting mode in Antlr Works,
> but not when you try to code gen. I no longer remember exactly what
> construct in the grammar triggers this, but it is something like having
> output=AST; then using ^ on a rule reference rather than a token. Again, I
> believe that Ter's new tree re-writing changes have fixed all that. But if
> you use -> instead of ^ then it will go away I think.
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Ivo Jimenez
> *Sent:* Thursday, April 26, 2007 2:28 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Can't find template tokenRefRuleRoot.st
>
>
>
> Hi all,
>
> First of all, let me say that ANTLR rules the whole universe (at least the
> parser generator one).
>
> I'm writing the grammar for a superset of a subset of the SQL language,
> everything works fine in ANTLRWorks ( 1.0b11)  but when calling ANTLR from
> the command line with:
>
> java -cp antlr-2.7.7.jar:antlr-3.0b7.jar:stringtemplate-3.0.jar
> org.antlr.Tool SqlV3.g
>
>
> I get the following:
>
> error(10):  internal error: examples-v3/SqlV3.g :
> java.lang.IllegalArgumentException: Can't find template
> tokenRefRuleRoot.st
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate (
> StringTemplateGroup.java:485)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(
> StringTemplateGroup.java:372)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(
> StringTemplateGroup.java:384)
> org.antlr.codegen.CodeGenTreeWalker.getTokenElementST (
> CodeGenTreeWalker.java:160)
> org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1970)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1599)
> org.antlr.codegen.CodeGenTreeWalker.element (CodeGenTreeWalker.java:1434)
> org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java
> :1224)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1009)
> org.antlr.codegen.CodeGenTreeWalker.rule (CodeGenTreeWalker.java:725)
> org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:516)
> org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java
> :458)
> org.antlr.codegen.CodeGenTreeWalker.grammar (CodeGenTreeWalker.java:305)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:409)
> org.antlr.Tool.processGrammar(Tool.java:347)
> org.antlr.Tool.process(Tool.java:268)
> org.antlr.Tool.main(Tool.java :70)
>
> So you know how can I fix this? This happens also if I run the Debug
> feature of the ANTLRWorks IDE.
>
> Thanks.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070427/4ce48278/attachment-0001.html 

From ivojimenez at gmail.com  Fri Apr 27 02:51:46 2007
From: ivojimenez at gmail.com (Ivo Jimenez)
Date: Fri, 27 Apr 2007 02:51:46 -0700
Subject: [antlr-interest] ANTLR 3 newbie question: Decision can match using
	multiple alternatives
Message-ID: <86d8a57b0704270251o2378ff84p3112f05a1d59568f@mail.gmail.com>

Hi,

I have a question regarding a non-determinism. I'm new to ANTLR 3 and
I'm trying to write the grammar for SQL. I don't want to put the whole
set of rules since I have implemented only a subset of the select and
create statements and its already 800 lines long but if you consider
that it would be better if I post it please let me know. Well, so I
will try to explain myself using only the non-deterministic rules.

Everything was going fine until I decided to expand the language and
include the recognition of expression lists (that appear in the where
condition), for example I want to recognize something like this:

select partnumber, vendornumber
   from purchdb.supplyprice
   where partnumber = any ('1343-d-01', '1623-td-01', '1723-ad-01',
'1733-ad-01')
      and not vendornumber = 9011;

I need to recognize a expression list (which can or can't be enclosed
by parenthesis), where each expression is separated by a comma.

The rules I have for these are the following:

predicate
   : row_value_constructor ( comparison_predicate | in_predicate |
null_predicate )
   | exists_predicate
   ;

comparison_predicate
   : ( '=' | '<>' | '<' | '<=' | '>' | '>=' ) ( quantifier )?
            ( row_value_constructor | '(' subquery ')' )
   ;

in_predicate
   : ('not')? 'in' '(' subquery ')'
   ;

null_predicate
   : 'is' ('not')? 'null'
   ;

exists_predicate
   : 'exists' '(' subquery ')'
   ;

row_value_constructor
   : expression_list
   ;

quantifier
   : 'any' | 'some' | 'all'
   ;

expression_list
   : expression ( ',' expression )*
   ;

expression
   : character_expression
   | numeric_expression
   ;

character_expression
   : atom ( '|' '|' atom )*
   ;

numeric_expression
   : numeric_term ( ( '+' | '-' ) numeric_term )*
   ;

numeric_term
   : numeric_factor ( ( '*' | '\\' ) numeric_factor )*
   ;

numeric_factor
   : ( '+' | '-' )? atom
   ;

atom
   : NUMBER
   | STRING
   | column_reference
   | aggregate_function
   | other_function
   | '(' expression ')'
   ;

// Lexer
WS    : (' ' |'\t' |'\n' |'\r' )+ { skip(); } ;
NL    : '\r' ? '\n';
NUMBER: ( '0'..'9' )+ ( '.' ( '0'..'9' )+ )?;
STRING: '\'' ( LETTER | '0'..'9' | '_' | '\\' | ' ' | '-' | '>' | '='
| '<' | '+' )+ '\'';
ID    : LETTER ( LETTER | '0'..'9' | '_' )*;
LETTER: ('a'..'z' | 'A'..'Z');

When I call ANTLR I get the following:

ANTLR Parser Generator  Version 3.0b7 (April 12, 2007)  1989-2007
warning(200): SqlV3.g:248:34: Decision can match input such as "','
{ID, 'avg'..'nullifzero'}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(208): SqlV3.g:842:1: The following token definitions are
unreachable: NL,LETTER

Where line 248 is the expression_list: expression ( ',' expression )*;
line and 842 the LETTER line. I've even bought the ANTLR 3 book in
search of an answer and I know it is there (section 11.5 Ambiguities
and Non-determinisms) but I can't see it.

Thanks a lot for your time.

-Ivo

From dave at badgers-in-foil.co.uk  Fri Apr 27 04:11:38 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 27 Apr 2007 11:11:38 +0000
Subject: [antlr-interest] ANTLR 3 newbie question: Decision can match
	using multiple alternatives
In-Reply-To: <86d8a57b0704270251o2378ff84p3112f05a1d59568f@mail.gmail.com>
References: <86d8a57b0704270251o2378ff84p3112f05a1d59568f@mail.gmail.com>
Message-ID: <20070427111137.GA28214@badgers-in-foil.co.uk>

On Fri, Apr 27, 2007 at 02:51:46AM -0700, Ivo Jimenez wrote:
> The rules I have for these are the following:
> 
> predicate
>   : row_value_constructor ( comparison_predicate | in_predicate |
> null_predicate )
>   | exists_predicate
>   ;
> 
> comparison_predicate
>   : ( '=' | '<>' | '<' | '<=' | '>' | '>=' ) ( quantifier )?
>            ( row_value_constructor | '(' subquery ')' )
>   ;
> 
> in_predicate
>   : ('not')? 'in' '(' subquery ')'
>   ;
> 
> null_predicate
>   : 'is' ('not')? 'null'
>   ;
> 
> exists_predicate
>   : 'exists' '(' subquery ')'
>   ;
> 
> row_value_constructor
>   : expression_list
>   ;
> 
> quantifier
>   : 'any' | 'some' | 'all'
>   ;
> 
> expression_list
>   : expression ( ',' expression )*
>   ;
> 
> expression
>   : character_expression
>   | numeric_expression
>   ;
> 
> character_expression
>   : atom ( '|' '|' atom )*
>   ;
> 
> numeric_expression
>   : numeric_term ( ( '+' | '-' ) numeric_term )*
>   ;
> 
> numeric_term
>   : numeric_factor ( ( '*' | '\\' ) numeric_factor )*
>   ;
> 
> numeric_factor
>   : ( '+' | '-' )? atom
>   ;
> 
> atom
>   : NUMBER
>   | STRING
>   | column_reference
>   | aggregate_function
>   | other_function
>   | '(' expression ')'
>   ;
> 
> // Lexer
> WS    : (' ' |'\t' |'\n' |'\r' )+ { skip(); } ;
> NL    : '\r' ? '\n';
> NUMBER: ( '0'..'9' )+ ( '.' ( '0'..'9' )+ )?;
> STRING: '\'' ( LETTER | '0'..'9' | '_' | '\\' | ' ' | '-' | '>' | '='
> | '<' | '+' )+ '\'';
> ID    : LETTER ( LETTER | '0'..'9' | '_' )*;
> LETTER: ('a'..'z' | 'A'..'Z');
> 
> When I call ANTLR I get the following:
> 
> ANTLR Parser Generator  Version 3.0b7 (April 12, 2007)  1989-2007
> warning(200): SqlV3.g:248:34: Decision can match input such as "','
> {ID, 'avg'..'nullifzero'}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> warning(208): SqlV3.g:842:1: The following token definitions are
> unreachable: NL,LETTER
> 
> Where line 248 is the expression_list: expression ( ',' expression )*;
> line and 842 the LETTER line. I've even bought the ANTLR 3 book in
> search of an answer and I know it is there (section 11.5 Ambiguities
> and Non-determinisms) but I can't see it.

Is ',' allowed elsewhere in your grammar?  I can't see the problem in
the snippet given (could just be that I missed it ;) so maybe more
context is needed.

Have you tried using the grammar visualisation tools in ANTLRWorks to
debug the issue?


ta,
dave

-- 
http://david.holroyd.me.uk/

From ilia at obnovlenie.ru  Fri Apr 27 06:51:55 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Fri, 27 Apr 2007 17:51:55 +0400
Subject: [antlr-interest]  Current antlr bugs [b7]
Message-ID: <200704271751.56034.ilia@obnovlenie.ru>


And more bugs to go.... I guess such exception is not normal:

Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: -1
	at org.antlr.runtime.DFA.predict(DFA.java:43)
	at GetScopeValueCleanParser.rule_long_def_part(GetScopeValueCleanParser.java:554)
	at GetScopeValueCleanParser.synpred1_fragment(GetScopeValueCleanParser.java:1352)
	at GetScopeValueCleanParser.synpred1(GetScopeValueCleanParser.java:1392)
	at GetScopeValueCleanParser.rule_call(GetScopeValueCleanParser.java:182)
	at GetScopeValueCleanParser.expr_simple(GetScopeValueCleanParser.java:1307)
	at GetScopeValueCleanParser.expr_no_semi(GetScopeValueCleanParser.java:1137)
	at GetScopeValueCleanParser.expr(GetScopeValueCleanParser.java:946)
	at GetScopeValueCleanParser.exprs(GetScopeValueCleanParser.java:862)
	at GetScopeValueCleanParser.document(GetScopeValueCleanParser.java:76)
	at GrammarScopeValueCleanTest.main(GrammarScopeValueCleanTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)

=============== grammar =============

grammar GetScopeValueClean;

options {
   	output=AST;
}


tokens {
	TEXT;
	GET_PROPERTY_VALUE;
	GET_PROPERTY_ARGUMENTS;
	EVAL;	
}


LCURL	:	'{';
RCURL	:	'}';

GET_SCOPE_VALUE
	:	'#';
	

CONTROL
        :       '~';

SEMI:   ';';

DOT	:	'.';



MINUS
	:	'-';

GT	:	'>';


SPECIAL_CHAR
        :       '`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |
        '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' |
         '/' | '?';



fragment WS_CHAR  :
       (' '|'\r'|'\t'|'\u000C'|'\n' )
    ;

WS      :       WS_CHAR+;

// not SPECIAL_CHAR not WS_CHAR
WORD:

        (~ ('`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |
        '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' | '/' | '?'
        | '{'
        | '~'
        | '}'
        | '#'
        | ';'
        | '.'
        | '-'
        | '>'
        | ' '|'\r'|'\t'|'\u000C'|'\n' ) )+

;



document
	:	exprs;



rule_call: GET_SCOPE_VALUE WORD ((rule_long_def_part)=>rule_long_def_part)* -> ^(GET_SCOPE_VALUE WORD rule_long_def_part*) |
	GET_SCOPE_VALUE LCURL WORD rule_long_def_part* RCURL -> ^(GET_SCOPE_VALUE WORD rule_long_def_part*)
	;


get_property_arguments
        :
         LCURL exprs? RCURL -> ^(GET_PROPERTY_ARGUMENTS exprs?)
;
	
rule_long_def_part
	:	  MINUS GT WORD ((get_property_arguments)=>get_property_arguments)* -> ^(GET_PROPERTY_VALUE WORD get_property_arguments*) | 
		  DOT WORD  -> ^(GET_SCOPE_VALUE WORD)
	;

text:
	DOT | MINUS | WORD | WS | GT | SPECIAL_CHAR 
;


curly_block
        :
         LCURL exprs? RCURL -> LCURL exprs? RCURL
;

exprs:
        (expr)+
;


expr:
(
        expr_no_semi -> expr_no_semi |
        SEMI -> TEXT[$SEMI]
)
;

exprs_no_semi
        :       (expr_no_semi)+
;


expr_no_semi
        :
                (expr_simple) | (curly_block)
        ;

exprs_simple
        :       (expr_simple)+
        ;

/* expression without curl at start and ; */
expr_simple
        :
         rule_call
        | text
;


============== input ================
cdsd #rere->a{#c+1}{2 2} kljkl


Hope this bug is simple one!

Happy fixing
V/R
Ilia Kantor




From jimi at temporal-wave.com  Fri Apr 27 08:14:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 27 Apr 2007 08:14:35 -0700
Subject: [antlr-interest] ANTLR 3 newbie question: Decision can match
	usingmultiple alternatives
In-Reply-To: <86d8a57b0704270251o2378ff84p3112f05a1d59568f@mail.gmail.com>
References: <86d8a57b0704270251o2378ff84p3112f05a1d59568f@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A2353362523EB@wavemachine.temporal-wave.com>

First your lexer issues:

warning(208): SqlV3.g:842:1: The following token definitions are
unreachable: NL,LETTER

This is happening because your lexer is not defined quite correctly. In
these rules:

WS    : (' ' |'\t' |'\n' |'\r' )+ { skip(); } ;
NL    : '\r' ? '\n';

You are saying that '\n' and '\r' can be both WS and NL, and they can
only be in one rule. If you want NL to show up as a token then take
these out of the WS spec. But then remember that you have to code the
parser rules to see the NL anywhere that is possible. If you want the
newline related characters to just disappear then delete the NL rule
altogether. It is more likely that you want to hide the tokens but
distinguish the newlines in some way, so probably what you want is:


WS    : (' ' |'\t' )+	{ $channel = HIDDEN; } ;
NL    : '\r' ? '\n'	{ $channel = HIDDEN; mynewlineaction(); }

The LETTER issue is because this lexer rule should probably be marked a
'fragment'. You can think of a fragment as if it were a lexer
subroutine. It doesn't generate a token itself, but can be inserted in
other rules to save you typing out the lexeme it defines in many places.
If you use it like you are then the analyzer sees that it is being asked
to produce a token for LETTER, but that you are also trying to use the
same thing in other rules and this means it is impossible to work out
what you mean (it could guess I suppose, but would probably be wrong
most of the time ;-). So:

STRING: '\'' ( LETTER | '0'..'9' | '_' | '\\' | ' ' | '-' | '>' | '='
| '<' | '+' )+ '\'';
ID    : LETTER ( LETTER | '0'..'9' | '_' )*;

fragment
LETTER: ('a'..'z' | 'A'..'Z');

However your string token is only allowing a subset of characters in a
string and I doubt this is what you want. You probably want anything at
all that isn't the string terminator:

STRING: '\'' ( ~'\'' )* '\'' ;

If you want escaped characters in there, look at the example grammars
(download from ANTLR3 page) for the lexer for say Java or C.

Your parser is more complicated. First I would strongly recommend that
you do not tackle SQL as your first project as it is a difficult thing
to parse correctly and is highly ambiguous. ANTLR3 can do it, but it is
a tricky one. I would suggest that you study the examples first, make
sure you understand the book, then as an aid to understanding the book,
try something a little less complicated such as making up your own
language on the fly in small increments.

However, to solve the ambiguities, you basically have to inform the
analyzer which of n alternatives you wish it to assume with a given
input set. But, your issue might be that your grammar needs restating,
rather than an ambiguity you have discovered in SQL (though there enough
that this is certainly possible ;-). So, you could end up struggling to
fix something with predicates that is really needing a grammar
reorganization.

At a guess here though (your snippet does not give enough information),
what you have found is that you have a conflict between:

ANY comma_sep_list

And 

ANY expression

This is because in our atom rule you correctly allow precedence
establishing '('. So the parser cannot decide which this can be. It is
probably guessing correctly and taking the comma list option, but you do
want to get rid of any ambiguities of course. So, try this:

ANY ( ('(')=> comma_sep_list

That may not be the issue, but it might give you a start.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ivo Jimenez
Sent: Friday, April 27, 2007 2:52 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR 3 newbie question: Decision can match
usingmultiple alternatives

Hi,

I have a question regarding a non-determinism. I'm new to ANTLR 3 and
I'm trying to write the grammar for SQL. I don't want to put the whole
set of rules since I have implemented only a subset of the select and
create statements and its already 800 lines long but if you consider
that it would be better if I post it please let me know. Well, so I
will try to explain myself using only the non-deterministic rules.

Everything was going fine until I decided to expand the language and
include the recognition of expression lists (that appear in the where
condition), for example I want to recognize something like this:

select partnumber, vendornumber
   from purchdb.supplyprice
   where partnumber = any ('1343-d-01', '1623-td-01', '1723-ad-01',
'1733-ad-01')
      and not vendornumber = 9011;

I need to recognize a expression list (which can or can't be enclosed
by parenthesis), where each expression is separated by a comma.

The rules I have for these are the following:

predicate
   : row_value_constructor ( comparison_predicate | in_predicate |
null_predicate )
   | exists_predicate
   ;

comparison_predicate
   : ( '=' | '<>' | '<' | '<=' | '>' | '>=' ) ( quantifier )?
            ( row_value_constructor | '(' subquery ')' )
   ;

in_predicate
   : ('not')? 'in' '(' subquery ')'
   ;

null_predicate
   : 'is' ('not')? 'null'
   ;

exists_predicate
   : 'exists' '(' subquery ')'
   ;

row_value_constructor
   : expression_list
   ;

quantifier
   : 'any' | 'some' | 'all'
   ;

expression_list
   : expression ( ',' expression )*
   ;

expression
   : character_expression
   | numeric_expression
   ;

character_expression
   : atom ( '|' '|' atom )*
   ;

numeric_expression
   : numeric_term ( ( '+' | '-' ) numeric_term )*
   ;

numeric_term
   : numeric_factor ( ( '*' | '\\' ) numeric_factor )*
   ;

numeric_factor
   : ( '+' | '-' )? atom
   ;

atom
   : NUMBER
   | STRING
   | column_reference
   | aggregate_function
   | other_function
   | '(' expression ')'
   ;

// Lexer
WS    : (' ' |'\t' |'\n' |'\r' )+ { skip(); } ;
NL    : '\r' ? '\n';
NUMBER: ( '0'..'9' )+ ( '.' ( '0'..'9' )+ )?;
STRING: '\'' ( LETTER | '0'..'9' | '_' | '\\' | ' ' | '-' | '>' | '='
| '<' | '+' )+ '\'';
ID    : LETTER ( LETTER | '0'..'9' | '_' )*;
LETTER: ('a'..'z' | 'A'..'Z');

When I call ANTLR I get the following:

ANTLR Parser Generator  Version 3.0b7 (April 12, 2007)  1989-2007
warning(200): SqlV3.g:248:34: Decision can match input such as "','
{ID, 'avg'..'nullifzero'}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(208): SqlV3.g:842:1: The following token definitions are
unreachable: NL,LETTER

Where line 248 is the expression_list: expression ( ',' expression )*;
line and 842 the LETTER line. I've even bought the ANTLR 3 book in
search of an answer and I know it is there (section 11.5 Ambiguities
and Non-determinisms) but I can't see it.

Thanks a lot for your time.

-Ivo

From lgcraymer at yahoo.com  Fri Apr 27 10:42:24 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 27 Apr 2007 10:42:24 -0700 (PDT)
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <e11a0c0a5d8c4e8bb637fafe1fca3131@5c28fdff2ae74498ac1e2fd57f725ed1>
Message-ID: <188596.85521.qm@web55902.mail.re3.yahoo.com>

That's what semantic predicates (in the parser) are
for--there are no lexical issues involved in this
case.  You want to do the symbol table lookup and test
in a predicate.

--Loring

--- femtowin1 <femtowin1 at gmail.com> wrote:

> Hi all, in antlr3, can parser control lexer state
> and decide how lexer lexing? some grammar has
> ambiguity
> decided upon by parser knowledge.
>   for ruby grammar <<
> x << 1
> test
> 1
> if x is a variable, then << is shift operator,
> otherwise it is a heredoc. so lexing must know
> from the symbol table whether x has been defined
> beforehand. But current antlrv3 implementation,
> lexer lexing to a constant token stream, and feed
> it into parser, so can't achieve this effect.
> ______________________________________
> Sent from my www.pageflakes.com startpage
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From bace.spam at gmx.net  Fri Apr 27 14:38:23 2007
From: bace.spam at gmx.net (bace.spam at gmx.net)
Date: Fri, 27 Apr 2007 23:38:23 +0200
Subject: [antlr-interest] what causes the Group of rules
Message-ID: <20070427213823.73410@gmx.net>

Hi all.

Just a short question, I am using antlr v3 and antlr.works. In antlr.works I found out that you can group parser and lexer rules. 

// $<Group
NEWLINE??? ??? ??? ??? ??? : (('\r')? '\n' | '\r');
// $>

What does it mean? Is it only to support overview or has this some consequences to the parser/lexer behavior?

Thank you very much!
Markus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070427/70512d45/attachment.html 

From hnakamur at gmail.com  Fri Apr 27 14:48:27 2007
From: hnakamur at gmail.com (Hiroaki Nakamura)
Date: Sat, 28 Apr 2007 06:48:27 +0900
Subject: [antlr-interest] Java.g: variableModifier should be used in
	formalParameterDecls, localVariableDeclaration, forInit,
	and forVarControl
Message-ID: <394dc22a0704271448v1982e72cxa01d17cebc8ef3e6@mail.gmail.com>

Hi, here is a patch for Java.g.
I think variableModifier should be used in formalParameterDecls,
localVariableDeclaration, forInit, and forVarControl.

Unfortunately, Chapter 18 in JLS contains many bugs.
CHAPTER 18 Syntax
http://java.sun.com/docs/books/jls/third_edition/html/syntax.html

For correct definitions, please see other chapters in JLS.

8.4.1 Formal Parameters
http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4.1

14.4 Local Variable Declaration Statements
http://java.sun.com/docs/books/jls/third_edition/html/statements.html#14.4

14.14.1 The basic for Statement
http://java.sun.com/docs/books/jls/third_edition/html/statements.html#14.14.1

14.14.2 The enhanced for statement
http://java.sun.com/docs/books/jls/third_edition/html/statements.html#14.14.2

-- 
)Hiroaki Nakamura) hnakamur at gmail.com

--- examples-v3/Java/Java/Java.g.orig	2007-03-15 07:14:09.000000000 +0900
+++ examples-v3/Java/Java/Java.g	2007-04-28 06:18:36.269430400 +0900
@@ -360,7 +360,7 @@
 	;
 	
 formalParameterDecls
-	:	'final'? annotations? type formalParameterDeclsRest?
+	:	variableModifier* type formalParameterDeclsRest?
 	;
 	
 formalParameterDeclsRest
@@ -482,7 +482,7 @@
 	;
 	
 localVariableDeclaration
-	:	('final' | annotation)* type variableDeclarators ';'
+	:	variableModifier* type variableDeclarators ';'
 	;
 	
 statement
@@ -545,12 +545,12 @@
 	;

 forInit
-	:	'final'? (annotation)? type variableDeclarators
+	:	variableModifier* type variableDeclarators
     |   expressionList
 	;
 	
 forVarControl
-	:	'final'? type Identifier ':' expression
+	:	variableModifier* type Identifier ':' expression
 	;

 forUpdate

From ilia at obnovlenie.ru  Fri Apr 27 14:50:27 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 28 Apr 2007 01:50:27 +0400
Subject: [antlr-interest] Grammar for antlr 3b7/3b8
Message-ID: <200704280150.28237.ilia@obnovlenie.ru>


Hello, 

I'm making a simple grammar to process commands like
#r->a{1}{2}

It should work fine with both #r->a and #r->a{1} too, so syntax predicates are used.

Unfortunately after 2+ days of struggling I still can't make it work. 
Is that ANTLR problems or do I miss anything?

The input is:#r->a{1}{2}
The output should put {..} into separate subdirs, but it actually ignores it and gives them as plain text!

If you uncomment/comment last 2 strings, everything works just fine!
What's the matter eh ?

in the grammar,
rule rule_long_def_part matches #...  , that's just what is needed.
seems, the problem is digged somewhere in curly_block.



============ Grammar cleaned up ===================

grammar GetScopeValueClean;

options {
        output=AST;
}


tokens {
        TEXT;
        GET_PROPERTY_VALUE;
        GET_PROPERTY_ARGUMENTS;
}

LCURL   :       '{';
RCURL   :       '}';

GET_SCOPE_VALUE :       '#';

SEMI:   ';';

DOT     :       '.';

MINUS
        :       '-';

GT      :       '>';

SPECIAL_CHAR
        :       '`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |
        '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' |
         '/' | '?';

fragment WS_CHAR  :       (' '|'\r'|'\t'|'\u000C'|'\n' )    ;

WS      :       WS_CHAR+;

// not SPECIAL_CHAR not WS_CHAR
WORD:
        (~ ('`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |
        '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' | '/' | '?'
        | '{' | '~' | '}' | '#' | ';' | '.' | '-' | '>' | ' '|'\r'|'\t'|'\u000C'|'\n' ) )+;


document: exprs;

exprs: expr+;

expr: expr_simple | curly_block;

exprs_simple: expr_simple+;

expr_simple: rule_call | text;


rule_call: GET_SCOPE_VALUE WORD ((rule_long_def_part)=>rule_long_def_part)* -> ^(GET_SCOPE_VALUE WORD rule_long_def_part*) |
        GET_SCOPE_VALUE LCURL WORD rule_long_def_part* RCURL -> ^(GET_SCOPE_VALUE WORD rule_long_def_part*)
        ;


get_property_arguments: LCURL exprs? RCURL -> ^(GET_PROPERTY_ARGUMENTS exprs?);

rule_long_def_part
        :         MINUS GT WORD ((get_property_arguments) => get_property_arguments)* -> ^(GET_PROPERTY_VALUE WORD get_property_arguments*) |
                  DOT WORD  -> ^(GET_SCOPE_VALUE WORD)
        ;


text: DOT | MINUS | WORD | WS | GT | SPECIAL_CHAR;

// uncomment this and comment lower string to see all working fine
//curly_block: SEMI;
curly_block: LCURL exprs? RCURL -> TEXT[$LCURL] exprs? TEXT[$RCURL];

From ilia at obnovlenie.ru  Fri Apr 27 14:57:26 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 28 Apr 2007 01:57:26 +0400
Subject: [antlr-interest] Grammar for antlr 3b7/3b8
In-Reply-To: <200704280150.28237.ilia@obnovlenie.ru>
References: <200704280150.28237.ilia@obnovlenie.ru>
Message-ID: <200704280157.26110.ilia@obnovlenie.ru>


The problem from my previous letter was:

The input is:#r->a{1}{2}
The output should put {..} into separate subtrees:

^(GET_PROPERTY_ARGUMENTS 1)
^(GET_PROPERTY_ARGUMENTS 2)

But actually it goes wrong branch and reads ->a{1}{2} as plain text, or
another bad thing happens, not sure what's going on.

Thanks!

From dave at badgers-in-foil.co.uk  Fri Apr 27 15:30:07 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Fri, 27 Apr 2007 22:30:07 +0000
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <188596.85521.qm@web55902.mail.re3.yahoo.com>
References: <e11a0c0a5d8c4e8bb637fafe1fca3131@5c28fdff2ae74498ac1e2fd57f725ed1>
	<188596.85521.qm@web55902.mail.re3.yahoo.com>
Message-ID: <20070427223006.GA5471@badgers-in-foil.co.uk>

On Fri, Apr 27, 2007 at 10:42:24AM -0700, Loring Craymer wrote:
> That's what semantic predicates (in the parser) are
> for--there are no lexical issues involved in this
> case.  You want to do the symbol table lookup and test
> in a predicate.

Here-docs are a lexing problem, I think -- content on subsequent lines
must not be interpreted with normal lexer rules until the document
terminator is seen..?

> --- femtowin1 <femtowin1 at gmail.com> wrote:
> 
> > Hi all, in antlr3, can parser control lexer state
> > and decide how lexer lexing? some grammar has
> > ambiguity
> > decided upon by parser knowledge.
> >   for ruby grammar <<
> > x << 1
> > test
> > 1
> > if x is a variable, then << is shift operator,
> > otherwise it is a heredoc. so lexing must know
> > from the symbol table whether x has been defined
> > beforehand. But current antlrv3 implementation,
> > lexer lexing to a constant token stream, and feed
> > it into parser, so can't achieve this effect.

-- 
http://david.holroyd.me.uk/

From femtowin at gmail.com  Fri Apr 27 20:47:14 2007
From: femtowin at gmail.com (femto gary)
Date: Sat, 28 Apr 2007 11:47:14 +0800
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <20070427223006.GA5471@badgers-in-foil.co.uk>
References: <e11a0c0a5d8c4e8bb637fafe1fca3131@5c28fdff2ae74498ac1e2fd57f725ed1>
	<188596.85521.qm@web55902.mail.re3.yahoo.com>
	<20070427223006.GA5471@badgers-in-foil.co.uk>
Message-ID: <91170ee40704272047h55c94da5u4e1d1de9b65f839b@mail.gmail.com>

yes, so that's the problem.
syntax predicate or semantic predicate all happpens at parser level
and can't be used. because lex tokenStream are already constanted..

On 4/28/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Fri, Apr 27, 2007 at 10:42:24AM -0700, Loring Craymer wrote:
> > That's what semantic predicates (in the parser) are
> > for--there are no lexical issues involved in this
> > case.  You want to do the symbol table lookup and test
> > in a predicate.
>
> Here-docs are a lexing problem, I think -- content on subsequent lines
> must not be interpreted with normal lexer rules until the document
> terminator is seen..?
>
> > --- femtowin1 <femtowin1 at gmail.com> wrote:
> >
> > > Hi all, in antlr3, can parser control lexer state
> > > and decide how lexer lexing? some grammar has
> > > ambiguity
> > > decided upon by parser knowledge.
> > >   for ruby grammar <<
> > > x << 1
> > > test
> > > 1
> > > if x is a variable, then << is shift operator,
> > > otherwise it is a heredoc. so lexing must know
> > > from the symbol table whether x has been defined
> > > beforehand. But current antlrv3 implementation,
> > > lexer lexing to a constant token stream, and feed
> > > it into parser, so can't achieve this effect.
>
> --
> http://david.holroyd.me.uk/
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From bace.spam at gmx.net  Fri Apr 27 23:29:58 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Sat, 28 Apr 2007 08:29:58 +0200
Subject: [antlr-interest] is it a bug, or am I too stupid?
Message-ID: <20070428062958.158710@gmx.net>

Hi everybody,

Please can you help me with this problem on the following grammar:

- I have a separator **** on a single line (blanks before and after are optinal).
- The * is also used for the bullets, they have to be placed at the beginning of the line, followed by some text.
So I tried to use the backtrack- and lookahead-option, but it won't work. 
I tried to define 4 asterisks as one lexer rule, but when I have only 2 asterisks in the input, he wants to have 2 futher asterisk which won't match (here too, backtrack helps not)

Using this grammar and this input, the parser will match the separator **** only as a nested bullet item.

////////////////////////////////////////////////////////////////
grammar ambg;

ASTERISK????????? :??? '*';
NEWLINE?????????? :??? (('\r')? '\n' | '\r');
BLANKS??????????? :??? (' ' | '\t')+;
ELSE????????????? :??? .;


page????????????? :??? (page_element)+;

page_element options {k=6; backtrack=true; memoize=true;}
??? ?? ?? ??? ??? :??? (separator | bullet_hierarchie) newline;

separator???????? :??? (BLANKS)? ASTERISK ASTERISK ASTERISK ASTERISK (BLANKS)? NEWLINE;

bullet_hierarchie :??? (bullet_item? newline)+;

bullet_item??? ?? :??? ASTERISK? content;

content??? ??? ?? :??? ASTERISK? content
??? ??? ??? ????? |??? text;

text??? ??? ????? :??? ~(NEWLINE | ASTERISK)+;
??? 
newline??? ??? ?? :??? NEWLINE | EOF;
/////////////////////////////////////////////////////////////////

the input is:
*1
**2
*** 3
**** ??? ?4
*****?? ??? 5
******6
**7
*8
****


Strange is (for me) that if I insert a newline before the separator in the last inputline then it works.
If I forgot any important information for you, please let me know, this is really important for me.
Thanks everybody for reading and I hope you can give me a hint (I am searching a solution for some days now :-( )
Markus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070428/f5e1bb83/attachment.html 

From lgcraymer at yahoo.com  Fri Apr 27 23:31:45 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 27 Apr 2007 23:31:45 -0700 (PDT)
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <20070427223006.GA5471@badgers-in-foil.co.uk>
Message-ID: <944273.21772.qm@web55907.mail.re3.yahoo.com>

You are correct; I hadn't been aware of heredoc.  It
is still not a problem that needs tieing parser and
lexer together.  Instead, you need a lexer rule that
either matches a heredoc or returns "<<".  Something
like (ANTLR 2 version:  that could be made to work.)

SHIFT
    :
    "<<"
    (  (HEREDOC)=> HEREDOC { _ttype = HEREDOC; }
    |
    )
    ;

protected
HEREDOC
    :
    DOCTEXT
    { capture doc string here in function returning
true }?
    ( ~'\n' )+ '\n'
    { mark start of string here in function returning
true }?
    LINES
    ;

protected
LINES
    :
    (ENDTEXT)=> DOCTEXT
    |  (~'\n')+ '\n' LINES
    ;

ENDTEXT
    :
    { mark text start in function returning true}?
    DOCTEXT
    { check if text matches text in function }?
    '\n'
    ;

protected
DOCTEXT
    :
    ('a' .. 'z' | 'A' .. 'Z')+
    ;

Very ugly; most of the sempreds are actions which must
be evaluated, but would not otherwise be inside of a
synpred.  Alternatively, all of the HEREDOC mechanism
could be in a handwritten parse routine (returning
true or false and setting token type if true is
returned:

SHIFT
    :
    "<<"
    (    { heredoc() }? .
    |
    )
    ;

This second aproach should be workable in ANTLR 3;
note that heredoc() unwinds one character so that
antlr can match it as a wildcard--that may be
necessary.

Nasty problem.  It is amazing how often really bad
ideas are adopted.

--Loring


--- David Holroyd <dave at badgers-in-foil.co.uk> wrote:

> On Fri, Apr 27, 2007 at 10:42:24AM -0700, Loring
> Craymer wrote:
> > That's what semantic predicates (in the parser)
> are
> > for--there are no lexical issues involved in this
> > case.  You want to do the symbol table lookup and
> test
> > in a predicate.
> 
> Here-docs are a lexing problem, I think -- content
> on subsequent lines
> must not be interpreted with normal lexer rules
> until the document
> terminator is seen..?
> 
> > --- femtowin1 <femtowin1 at gmail.com> wrote:
> > 
> > > Hi all, in antlr3, can parser control lexer
> state
> > > and decide how lexer lexing? some grammar has
> > > ambiguity
> > > decided upon by parser knowledge.
> > >   for ruby grammar <<
> > > x << 1
> > > test
> > > 1
> > > if x is a variable, then << is shift operator,
> > > otherwise it is a heredoc. so lexing must know
> > > from the symbol table whether x has been defined
> > > beforehand. But current antlrv3 implementation,
> > > lexer lexing to a constant token stream, and
> feed
> > > it into parser, so can't achieve this effect.
> 
> -- 
> http://david.holroyd.me.uk/
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From dave at badgers-in-foil.co.uk  Sat Apr 28 05:14:45 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 28 Apr 2007 12:14:45 +0000
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <944273.21772.qm@web55907.mail.re3.yahoo.com>
References: <20070427223006.GA5471@badgers-in-foil.co.uk>
	<944273.21772.qm@web55907.mail.re3.yahoo.com>
Message-ID: <20070428121445.GA14370@badgers-in-foil.co.uk>

On Fri, Apr 27, 2007 at 11:31:45PM -0700, Loring Craymer wrote:
> You are correct; I hadn't been aware of heredoc.  It
> is still not a problem that needs tieing parser and
> lexer together.
[...]
> Nasty problem.  It is amazing how often really bad
> ideas are adopted.

And yet, there is more!

  # syntax on the same line is not part of the here-doc yet,
  func1(<<HERE).func2()
  text blah
  HERE

  # multiple here-docs,
  puts(<<HERE, <<THERE)
  foo
  HERE
  bar
  THERE


And-yet-and-yet, going back to the OP, Ruby also treats these two
examples as different syntax,

  # a here-doc, because 'puts' is a method (predefined in Ruby runtime)
  puts <<HERE
  foo
  HERE

and,

  puts = 1
  # now, a left-shift operator, because we've created a 'puts' local var
  puts <<HERE
  foo
  HERE
  # (gives error as 'HERE' is not defined, but that's not the point)


Naturally, the syntax is also sensitive to whitespace on either side of
the '<<'  :-)


-- 
http://david.holroyd.me.uk/

From dave at badgers-in-foil.co.uk  Sat Apr 28 05:47:40 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sat, 28 Apr 2007 12:47:40 +0000
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <20070428121445.GA14370@badgers-in-foil.co.uk>
References: <20070427223006.GA5471@badgers-in-foil.co.uk>
	<944273.21772.qm@web55907.mail.re3.yahoo.com>
	<20070428121445.GA14370@badgers-in-foil.co.uk>
Message-ID: <20070428124740.GA15673@badgers-in-foil.co.uk>

On Sat, Apr 28, 2007 at 12:14:45PM +0000, David Holroyd wrote:
> On Fri, Apr 27, 2007 at 11:31:45PM -0700, Loring Craymer wrote:
> > You are correct; I hadn't been aware of heredoc.  It
> > is still not a problem that needs tieing parser and
> > lexer together.
> [...]
> > Nasty problem.  It is amazing how often really bad
> > ideas are adopted.
> 
> And yet, there is more!

Another knotty syntax example,

  ----8<----
  a=1
  [<<HERE, <<'THERE', <<-WHERE].each {|str| puts "value: #{str.inspect}"}
  foo #{a}
  HERE
  bar #{a}
  THERE
  foo
    and
      bar
        WHERE
  ---->8----

When run,

  value: "foo 1\n"
  value: "bar \#{a}\n"
  value: "foo\n  and\n    bar\n"


Makes the brain itch!


ta,
dave

-- 
http://david.holroyd.me.uk/

From klists at saphor.de  Sat Apr 28 06:06:20 2007
From: klists at saphor.de (Marc)
Date: Sat, 28 Apr 2007 15:06:20 +0200
Subject: [antlr-interest] Problems with C++-target
Message-ID: <463346CC.2060000@saphor.de>

Hi!

Using a small grammar with antlr 3.0b7 that generates Java-files without
problems I tried the language option Cpp. and get the following error
message:

--------

error(10):  internal error: group Cpp does not satisfy interface
ANTLRCore: missing templates [parameterSetAttributeRef,
scopeSetAttributeRef, returnSetAttributeRef, lexerRulePropertyRef_text,
lexerRulePropertyRef_type, lexerRulePropertyRef_line,
lexerRulePropertyRef_pos, lexerRulePropertyRef_index,
lexerRulePropertyRef_channel, lexerRulePropertyRef_start,
lexerRulePropertyRef_stop, ruleSetPropertyRef_tree, ruleSetPropertyRef_st]

error(10):  internal error: group Cpp does not satisfy interface
ANTLRCore: mismatched arguments on these templates [outputFile(LEXER,
PARSER, TREE_PARSER, actionScope, actions, docComment, recognizer, name,
tokens, tokenNames, rules, cyclicDFAs, bitsets, buildTemplate, buildAST,
rewrite, profile, backtracking, synpreds, memoize, numRules, fileName,
ANTLRVersion, generatedTimestamp, trace, scopes, superClass, literals),
optional headerFile(LEXER, PARSER, TREE_PARSER, actionScope, actions,
docComment, recognizer, name, tokens, tokenNames, rules, cyclicDFAs,
bitsets, buildTemplate, buildAST, rewrite, profile, backtracking,
synpreds, memoize, numRules, fileName, ANTLRVersion, generatedTimestamp,
trace, scopes, superClass, literals), rule(ruleName, ruleDescriptor,
block, emptyRule, description, exceptions, finally, memoize),
listLabel(label, elem), lexerRuleRef(rule, label, args, elementIndex)]

error(10):  internal error: FILE.g : java.util.NoSuchElementException:
no such attribute: buildAST in template context
[headerFile]org.antlr.stringtemplate.StringTemplate.rawSetAttribute(StringTemplate.java:739)
org.antlr.stringtemplate.StringTemplate.setAttribute(StringTemplate.java:600)
org.antlr.codegen.CodeGenerator.genRecognizer(Unknown Source)
org.antlr.Tool.processGrammar(Unknown Source)
org.antlr.Tool.process(Unknown Source)
org.antlr.Tool.main(Unknown Source)

---

No C++ files are generated.

A similar error war reported on April 7th for the C target where it was
suggested to use the latest daily build. The latest I could find on the
page was dated April 21st and still exhibits this error.

Any ideas what I should do? Thanks in advance for any advice!

Best regards,

Marc


From jaluber at gmx.de  Sat Apr 28 06:31:20 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 28 Apr 2007 15:31:20 +0200
Subject: [antlr-interest] Problems with C++-target
In-Reply-To: <463346CC.2060000@saphor.de>
References: <463346CC.2060000@saphor.de>
Message-ID: <46334CA8.9080001@gmx.de>

Marc wrote:
> Hi!
> 
> Using a small grammar with antlr 3.0b7 that generates Java-files without
> problems I tried the language option Cpp. and get the following error
> message:
> 
> --------
> 
> No C++ files are generated.
> 
> A similar error war reported on April 7th for the C target where it was
> suggested to use the latest daily build. The latest I could find on the
> page was dated April 21st and still exhibits this error.
> 
> Any ideas what I should do? Thanks in advance for any advice!
> 
> Best regards,
> 
> Marc
> 

As far as I know, the latest daily build broke all targets besides Java.
I don't know when the other developers will catch up. The only advice I
can give you is to switch to Java for the time being or to wait until
the catching up.

Best regards,
Johannes Luber

From pink at odahoda.de  Sat Apr 28 07:23:33 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 28 Apr 2007 16:23:33 +0200
Subject: [antlr-interest] how to let parser control lexer state.
References: <e11a0c0a5d8c4e8bb637fafe1fca3131@5c28fdff2ae74498ac1e2fd57f725ed1>
Message-ID: <f0vld5$2u3$1@sea.gmane.org>

femtowin1 wrote:

> Hi all, in antlr3, can parser control lexer state
> and decide how lexer lexing? some grammar has ambiguity
> decided upon by parser knowledge.
>   for ruby grammar <<
> x << 1
> test
> 1
> if x is a variable, then << is shift operator,
> otherwise it is a heredoc. so lexing must know
> from the symbol table whether x has been defined
> beforehand. But current antlrv3 implementation,
> lexer lexing to a constant token stream, and feed
> it into parser, so can't achieve this effect.

What you need is a TokenStream class that does not tokenize and buffer the
complete input stream, but calls nextToken() only on demand.
I built such a TokenStream for the Python target, because the SGML parser I
am working on has similar problems. My version seems to work for me so far,
but it may break, if the parser needs to look ahead too far (the parser
would request k tokens, which are parsed in state X, then consume n<k
tokens and change lexer state to Y - then token n+1 was tokenized in state
X, but should have been in Y). If that cannot happen, then you're rather
lucky. Otherwise the TokenStream would probably have to keep track of the
lexer state for each token and rewind the input stream and re-tokenize with
a different state, if needed. 
If you want, I can send you my 'LazyTokenStream.py'. I may help you to
implement the corresponding Java version.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From ric.klaren at gmail.com  Sat Apr 28 07:37:39 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Sat, 28 Apr 2007 16:37:39 +0200
Subject: [antlr-interest] Problems with C++-target
In-Reply-To: <463346CC.2060000@saphor.de>
References: <463346CC.2060000@saphor.de>
Message-ID: <bc607a4e0704280737u10522069m6a28a851d8acbff0@mail.gmail.com>

Hi,

On 4/28/07, Marc <klists at saphor.de> wrote:
> Using a small grammar with antlr 3.0b7 that generates Java-files without
> problems I tried the language option Cpp. and get the following error
> message:

The ANTLR3 C++ target isn't finished yet.

Cheers,

Ric

From ilia at obnovlenie.ru  Sat Apr 28 10:45:00 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Sat, 28 Apr 2007 21:45:00 +0400
Subject: [antlr-interest] synpred/DFA error
Message-ID: <200704282145.00136.ilia@obnovlenie.ru>


Hello,


There is a rule in my grammar:
rule_long_def_part:
	  MINUS GT WORD ((get_property_arguments)=> get_property_arguments)* |
	  DOT WORD 
	;

If backtracking = true
	ANTLR generates synpred for
	( ( get_property_arguments )=> get_property_arguments )*

!!	That works correctly.

If backtracking is off, 
	ANTLR generates DFA and calls predict() method.

?? 	That gives wrong alt.


I'm not sure where to dig, is the overall behavior sane ?

No errors/warnings in both cases, Java files are essentially same excepts DFA/synpred difference.

                    

From bace.spam at gmx.net  Sat Apr 28 11:15:36 2007
From: bace.spam at gmx.net (Markus Kuhla)
Date: Sat, 28 Apr 2007 20:15:36 +0200
Subject: [antlr-interest] is it a bug, or am I too stupid?
Message-ID: <20070428181536.20960@gmx.net>

Hi,

thanks for your reply! You're absolutely right concerning the newlines? I fixed it, but it still won't work. The Parser recognizes the separator **** as a bullet-hierarchie and this fails, because after **** is no text (text is required after the bullet *'s). But if the parser gets an error, why is there no backtracking? I actually told him to do this at the decision (separator | bullet-hierarchie). I cannot enable backtracking for the whole grammar, because it's really big. Please can you help me, how to enable backtrack for this decision, or what I'm doing wrong with the grammar:

grammar ambg;

ASTERISK?? ? ? ?? :??? '*';
NEWLINE??? ? ? ?? :??? (('\r')? '\n' | '\r');
BLANKS??? ? ?? ?? :??? (' ' | '\t')+;
ELSE??? ? ? ? ??? :??? .;


page??? ??? ? ? ? :??? (page_element)+;

page_element options {backtrack=true; memoize=true;}
??? ??? ??? ? ? ? :??? (separator | bullet_hierarchie);

separator??? ? ?? :??? (BLANKS)? ASTERISK ASTERISK ASTERISK ASTERISK (BLANKS)? NEWLINE;

bullet_hierarchie : ?? (bullet_item)+;

bullet_item??? ?? :??? ASTERISK? content;

content??? ??? ?? :??? ASTERISK? content
??? ??? ??? ????? |??? text;

text??? ??? ????? :??? ~(NEWLINE | ASTERISK)+ NEWLINE;
??? 
newline??? ??? ?? :??? NEWLINE | EOF;



the input is:
*1
**2
*** 3
**** ??? ?4
*****?? ??? 5
******6
**7
*8
****



Thank you very much!!!!
Best, Markus

Miguel Ping schrieb: 
>   Hi there,
> 
> From what I can see, you are requiring a newline in these 3 rules:
> 
> page_element????? :??? (separator | bullet_hierarchie) newline;
> separator???????? :??? (BLANKS)? ASTERISK ASTERISK ASTERISK ASTERISK (BLANKS)? NEWLINE; 
> bullet_hierarchie :??? (bullet_item? newline)+;
> 
> So when bullet_hierarchie ends, you require a newline before exiting rule page_element. Try removing newline from rules separator and bullet_hierarchie, so that page_element handles newlines and the other rules handle only what matters. 
> 
> Btw, i take it you are using antlr v3, if so, you don't need to specify lookahead? with the k=6 statement in the options
> 
> Happy parsing,
> 
> Miguel Ping
>  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070428/32eee397/attachment.html 

From klists at saphor.de  Sat Apr 28 10:16:56 2007
From: klists at saphor.de (Marc)
Date: Sat, 28 Apr 2007 19:16:56 +0200
Subject: [antlr-interest] Problems with C++-target
In-Reply-To: <46334CA8.9080001@gmx.de>
References: <463346CC.2060000@saphor.de> <46334CA8.9080001@gmx.de>
Message-ID: <46338188.8010304@saphor.de>

Hi!
>>
>> Using a small grammar with antlr 3.0b7 that generates Java-files without
>> problems I tried the language option Cpp. and get the following error
>> message:
>>
>> --------
>>
>> No C++ files are generated.
>>
>> A similar error war reported on April 7th for the C target where it was
>> suggested to use the latest daily build. The latest I could find on the
>> page was dated April 21st and still exhibits this error.
>>
>> Any ideas what I should do? Thanks in advance for any advice!
>>
>> Best regards,
>>
>> Marc
>>
>>     
>
> As far as I know, the latest daily build broke all targets besides Java.
> I don't know when the other developers will catch up. The only advice I
> can give you is to switch to Java for the time being or to wait until
> the catching up.
>
>   
Many thanks for the information! So, let's play with Java for now and
wait until the C++-target matures. Any idea, however rough, when that
might be?

Best regards,

Marc


From jaluber at gmx.de  Sat Apr 28 14:05:15 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 28 Apr 2007 23:05:15 +0200
Subject: [antlr-interest] Problems with C++-target
In-Reply-To: <46338188.8010304@saphor.de>
References: <463346CC.2060000@saphor.de> <46334CA8.9080001@gmx.de>
	<46338188.8010304@saphor.de>
Message-ID: <4633B70B.1090007@gmx.de>

Marc wrote:
>> As far as I know, the latest daily build broke all targets besides Java.
>> I don't know when the other developers will catch up. The only advice I
>> can give you is to switch to Java for the time being or to wait until
>> the catching up.
>>
>>   
> Many thanks for the information! So, let's play with Java for now and
> wait until the C++-target matures. Any idea, however rough, when that
> might be?

You have to ask the developer of the C++-target for that information. :(

Best regards,
Johannes Luber

From jimi at temporal-wave.com  Sat Apr 28 14:54:51 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 28 Apr 2007 14:54:51 -0700
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <91170ee40704272047h55c94da5u4e1d1de9b65f839b@mail.gmail.com>
References: <e11a0c0a5d8c4e8bb637fafe1fca3131@5c28fdff2ae74498ac1e2fd57f725ed1><188596.85521.qm@web55902.mail.re3.yahoo.com><20070427223006.GA5471@badgers-in-foil.co.uk>
	<91170ee40704272047h55c94da5u4e1d1de9b65f839b@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252401@wavemachine.temporal-wave.com>

Take a look at the island grammar example if you want the lexer to jump
out and call a different parse stream until some termination point is
reached, then jump back in to the main stream. Otherwise you can just
hide the text in the lexer by setting a token { $type = HIDDEN }

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of femto gary
Sent: Friday, April 27, 2007 8:47 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] how to let parser control lexer state.

yes, so that's the problem.
syntax predicate or semantic predicate all happpens at parser level
and can't be used. because lex tokenStream are already constanted..

On 4/28/07, David Holroyd <dave at badgers-in-foil.co.uk> wrote:
> On Fri, Apr 27, 2007 at 10:42:24AM -0700, Loring Craymer wrote:
> > That's what semantic predicates (in the parser) are
> > for--there are no lexical issues involved in this
> > case.  You want to do the symbol table lookup and test
> > in a predicate.
>
> Here-docs are a lexing problem, I think -- content on subsequent lines
> must not be interpreted with normal lexer rules until the document
> terminator is seen..?
>
> > --- femtowin1 <femtowin1 at gmail.com> wrote:
> >
> > > Hi all, in antlr3, can parser control lexer state
> > > and decide how lexer lexing? some grammar has
> > > ambiguity
> > > decided upon by parser knowledge.
> > >   for ruby grammar <<
> > > x << 1
> > > test
> > > 1
> > > if x is a variable, then << is shift operator,
> > > otherwise it is a heredoc. so lexing must know
> > > from the symbol table whether x has been defined
> > > beforehand. But current antlrv3 implementation,
> > > lexer lexing to a constant token stream, and feed
> > > it into parser, so can't achieve this effect.
>
> --
> http://david.holroyd.me.uk/
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From jimi at temporal-wave.com  Sat Apr 28 15:12:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 28 Apr 2007 15:12:03 -0700
Subject: [antlr-interest] is it a bug, or am I too stupid?
In-Reply-To: <20070428181536.20960@gmx.net>
References: <20070428181536.20960@gmx.net>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252402@wavemachine.temporal-wave.com>

Try this:

 

grammar T;

 

tokens

{

BULLET;

}

 

test : (  s=SEPARATOR { System.out.println("Sep is " + $s.text); }

                                | b=BULLET

                   )+

                 ;

                 

SEPARATOR : '*' 

                                                (

                                                                  '***'
( ~('\n' | '\r') )* 

                                                                | {
$type = BULLET ; }

                                                )

                                ;

 

WS : '\r'? '\n' | ' ' | '\t' { $channel = HIDDEN; } ;

 

This assumes that blanks are not allowed between the '*', but if they
are then you easily make a fragment rule for WS and allow WS*, though
you might need a predicate then. The code above will cause ANTLR to
falsely warn you that there is no lexer token BULLET, but you can ignore
that.

 

Jim

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Markus Kuhla
Sent: Saturday, April 28, 2007 11:16 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] is it a bug, or am I too stupid?

 

Hi,

thanks for your reply! You're absolutely right concerning the newlines?
I fixed it, but it still won't work. The Parser recognizes the separator
**** as a bullet-hierarchie and this fails, because after **** is no
text (text is required after the bullet *'s). But if the parser gets an
error, why is there no backtracking? I actually told him to do this at
the decision (separator | bullet-hierarchie). I cannot enable
backtracking for the whole grammar, because it's really big. Please can
you help me, how to enable backtrack for this decision, or what I'm
doing wrong with the grammar:

grammar ambg;

ASTERISK          :    '*';
NEWLINE           :    (('\r')? '\n' | '\r');
BLANKS            :    (' ' | '\t')+;
ELSE              :    .;


page              :    (page_element)+;

page_element options {backtrack=true; memoize=true;}
                  :    (separator | bullet_hierarchie);

separator         :    (BLANKS)? ASTERISK ASTERISK ASTERISK ASTERISK
(BLANKS)? NEWLINE;

bullet_hierarchie :    (bullet_item)+;

bullet_item       :    ASTERISK  content;

content           :    ASTERISK  content
                  |    text;

text              :    ~(NEWLINE | ASTERISK)+ NEWLINE;
    
newline           :    NEWLINE | EOF;



the input is:
*1
**2
*** 3
****      4
*****       5
******6
**7
*8
****



Thank you very much!!!!
Best, Markus

Miguel Ping schrieb: 

Hi there,

>From what I can see, you are requiring a newline in these 3 rules:

page_element      :    (separator | bullet_hierarchie) newline;
separator         :    (BLANKS)? ASTERISK ASTERISK ASTERISK ASTERISK
(BLANKS)? NEWLINE; 
bullet_hierarchie :    (bullet_item  newline)+;

So when bullet_hierarchie ends, you require a newline before exiting
rule page_element. Try removing newline from rules separator and
bullet_hierarchie, so that page_element handles newlines and the other
rules handle only what matters. 

Btw, i take it you are using antlr v3, if so, you don't need to specify
lookahead  with the k=6 statement in the options

Happy parsing,

Miguel Ping

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070428/7d7f4732/attachment.html 

From jimi at temporal-wave.com  Sat Apr 28 15:23:52 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 28 Apr 2007 15:23:52 -0700
Subject: [antlr-interest] Problems with C++-target
In-Reply-To: <463346CC.2060000@saphor.de>
References: <463346CC.2060000@saphor.de>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252403@wavemachine.temporal-wave.com>

Do you have a specific need for C++? You could just declare the C
functions you need as extern "C". In fact, I should really add that to
the C output so that it just happens by including the generated .h file.
Though I suppose the fact that you can use C++ in actions is attractive
- I ought to play with this, perhaps you can just compile the output as
C++ and use C++ in actions anyway... why do I keep making more work for
myself? ;-)

C examples are now up to date and include VS2005 .sln and projects and
have been tested to death with DevPartner studio (though I don't have
complete coverage yet). A lot of work went into getting
backtrack/memorization to work without the enormous overhead it could be
with 2MB java input files :-).

If you are using the C target, you need to use a .jar that predates
Ter's recent tree rewrite stuff... however you also need the latest
template. I am working on the tree re-write stuff now, so possibly by
the end of the weekend it will be back in sync. I will post if it is.

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marc
Sent: Saturday, April 28, 2007 6:06 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problems with C++-target

Hi!

Using a small grammar with antlr 3.0b7 that generates Java-files without
problems I tried the language option Cpp. and get the following error
message:

--------

error(10):  internal error: group Cpp does not satisfy interface
ANTLRCore: missing templates [parameterSetAttributeRef,

A similar error war reported on April 7th for the C target where it was
suggested to use the latest daily build. The latest I could find on the
page was dated April 21st and still exhibits this error.

Any ideas what I should do? Thanks in advance for any advice!

Best regards,

Marc


From lgcraymer at yahoo.com  Sat Apr 28 16:04:03 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sat, 28 Apr 2007 16:04:03 -0700 (PDT)
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <20070428121445.GA14370@badgers-in-foil.co.uk>
Message-ID: <215287.10478.qm@web55907.mail.re3.yahoo.com>

So, basically:  where Java uses jar archives for
packaging, Ruby uses a crippled version of shar and
embeds it in the language?

Amazing!  I thought the industry had learned something
since the days of lexing FORTRAN!

--Loring

--- David Holroyd <dave at badgers-in-foil.co.uk> wrote:

> On Fri, Apr 27, 2007 at 11:31:45PM -0700, Loring
> Craymer wrote:
> > You are correct; I hadn't been aware of heredoc. 
> It
> > is still not a problem that needs tieing parser
> and
> > lexer together.
> [...]
> > Nasty problem.  It is amazing how often really bad
> > ideas are adopted.
> 
> And yet, there is more!
> 
>   # syntax on the same line is not part of the
> here-doc yet,
>   func1(<<HERE).func2()
>   text blah
>   HERE
> 
>   # multiple here-docs,
>   puts(<<HERE, <<THERE)
>   foo
>   HERE
>   bar
>   THERE
> 
> 
> And-yet-and-yet, going back to the OP, Ruby also
> treats these two
> examples as different syntax,
> 
>   # a here-doc, because 'puts' is a method
> (predefined in Ruby runtime)
>   puts <<HERE
>   foo
>   HERE
> 
> and,
> 
>   puts = 1
>   # now, a left-shift operator, because we've
> created a 'puts' local var
>   puts <<HERE
>   foo
>   HERE
>   # (gives error as 'HERE' is not defined, but
> that's not the point)
> 
> 
> Naturally, the syntax is also sensitive to
> whitespace on either side of
> the '<<'  :-)
> 
> 
> -- 
> http://david.holroyd.me.uk/
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam
protection around 
http://mail.yahoo.com 

__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

From rschulz at sonic.net  Sat Apr 28 16:08:50 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 28 Apr 2007 16:08:50 -0700
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <215287.10478.qm@web55907.mail.re3.yahoo.com>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com>
Message-ID: <200704281608.51055.rschulz@sonic.net>

On Saturday 28 April 2007 16:04, Loring Craymer wrote:
> ...
>
> > > Nasty problem.  It is amazing how often really bad
> > > ideas are adopted.
> >
> > And yet, there is more!
> >
> > ...
> >
> > Naturally, the syntax is also sensitive to
> > whitespace on either side of
> > the '<<'  :-)

This is what happens when pet languages escape their creators and become 
feral...


RRS

From femtowin at gmail.com  Sat Apr 28 23:25:35 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 29 Apr 2007 14:25:35 +0800
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <91170ee40704282107k5963b3e8vfe3b0a56acf8cb99@mail.gmail.com>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com>
	<200704281608.51055.rschulz@sonic.net>
	<91170ee40704282029r4a8ffc11uec0bc54d9be0147e@mail.gmail.com>
	<91170ee40704282107k5963b3e8vfe3b0a56acf8cb99@mail.gmail.com>
Message-ID: <91170ee40704282325v661ee0eend02c31ae371a0359@mail.gmail.com>

Hi Benjamin, actually I'm also begining writing this
lazy/rewindable tokenSource/tokenStream,
I don't think it is too difficult, will contact
you if I need help, Thanks.
and Jim Idle, the island grammar in the download
doesn't helps too, because lexing need parser's info,
while in the example, lexing doesn't need parser's info,
just new a island-grammar parser and its job will be done.
(actually , the wiki provides an island-grammar example which
lexing will be controlled by parser, but I feel it is a bit complex
so would like to write my own solution. besides, I can't find
the whole source code of metaas, (in their homepage, they
just put bin download, and in svn trunk, I can't find whole source code.)


(besides, can the reply-to address be configured in this mailing list?
I click reply and reply to just one person and become off mailing list).

From questionhelper at gmail.com  Sun Apr 29 00:03:54 2007
From: questionhelper at gmail.com (=?GB2312?B?x/Czyc2p?=)
Date: Sun, 29 Apr 2007 15:03:54 +0800
Subject: [antlr-interest] Please help me!
Message-ID: <df252c050704290003y5a1f61e3vb3c9e584dd445e45@mail.gmail.com>

Hi !   I  am a beginner? I  have some question to ask you about the
examples from antlr-2.7.7\examples;

source code as follow:
#include <iostream>

#include "T.hpp"

int main( int, char** )
{
    ANTLR_USING_NAMESPACE(std)
    ANTLR_USING_NAMESPACE(antlr)

    try
    {
        T lexer(cin);

        for(;;)
        {
            RefToken t = lexer.nextToken();

            if ( t->getType() == Token::EOF_TYPE )
                break;

            cout << "Token: " << t->toString() << endl;
        }
        cout << "done lexing..." << endl;
    }
    catch( ANTLRException& e )
    {
        cerr << "exception: " << e.getMessage() << endl;
        return -1;
    }
    catch( exception& e )
    {
        cerr << "exception: " << e.what() << endl;
        return -1;
    }
    return 0;
}

Questions as follow:
1. What do the ANTLR_USING_NAMESPACE(std)  and
NTLR_USING_NAMESPACE(antlr)  mean ?  Where could I find more
information?

2. RefToken t = lexer.nextToken();
   where can I find the documents about RefToken and nextToken ;

3. Where could I find the detailed information about the examples form
antlr-2.7.7\examples;

Many thanks for your help, I am looking forward for your reply.

From jimi at temporal-wave.com  Sun Apr 29 00:24:59 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Apr 2007 00:24:59 -0700
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <200704281608.51055.rschulz@sonic.net>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com>
	<200704281608.51055.rschulz@sonic.net>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252404@wavemachine.temporal-wave.com>

Indeed. Perhaps, someday, the world can require that any 'new' [insert
post-modernistic interpolation of 'reality' here ;-)] languages have to
have a sane ANTLR parser as proof of their ability not to drive anyone
with any sense mad and generally propagate the idea that languages
should be 'useful' on their own terms - 'useful' being really "I can't
be bothered to learn how to do this properly, so pass me the magic
bullet". I will be the first to program the windows Vista gun gadget
control to shoot anyone deciding that indenting should be
lexically/grammatically significant on the vague justification that it
makes people format code - something that a good programmer should do
naturally anyway.

<duck>

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Saturday, April 28, 2007 4:09 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] how to let parser control lexer state.

On Saturday 28 April 2007 16:04, Loring Craymer wrote:
> ...
>
> > > Nasty problem.  It is amazing how often really bad
> > > ideas are adopted.
> >
> > And yet, there is more!
> >
> > ...
> >
> > Naturally, the syntax is also sensitive to
> > whitespace on either side of
> > the '<<'  :-)

This is what happens when pet languages escape their creators and become

feral...


RRS

From jimi at temporal-wave.com  Sun Apr 29 00:28:02 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Apr 2007 00:28:02 -0700
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <91170ee40704282325v661ee0eend02c31ae371a0359@mail.gmail.com>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com><200704281608.51055.rschulz@sonic.net><91170ee40704282029r4a8ffc11uec0bc54d9be0147e@mail.gmail.com><91170ee40704282107k5963b3e8vfe3b0a56acf8cb99@mail.gmail.com>
	<91170ee40704282325v661ee0eend02c31ae371a0359@mail.gmail.com>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252405@wavemachine.temporal-wave.com>

Syntax directed lexing opens up whole bags of worms. Perhaps we should
just delete languages that require it? ;-). But I suppose ANTLR should
be able to convert them into something sane ;-).

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of femto gary
Sent: Saturday, April 28, 2007 11:26 PM
To: ANTLR Interest
Subject: Re: [antlr-interest] how to let parser control lexer state.

Hi Benjamin, actually I'm also begining writing this
lazy/rewindable tokenSource/tokenStream,
I don't think it is too difficult, will contact
you if I need help, Thanks.
and Jim Idle, the island grammar in the download
doesn't helps too, because lexing need parser's info,
while in the example, lexing doesn't need parser's info,
just new a island-grammar parser and its job will be done.
(actually , the wiki provides an island-grammar example which
lexing will be controlled by parser, but I feel it is a bit complex
so would like to write my own solution. besides, I can't find
the whole source code of metaas, (in their homepage, they
just put bin download, and in svn trunk, I can't find whole source
code.)


(besides, can the reply-to address be configured in this mailing list?
I click reply and reply to just one person and become off mailing list).

From ric.klaren at gmail.com  Sun Apr 29 02:06:55 2007
From: ric.klaren at gmail.com (Ric Klaren)
Date: Sun, 29 Apr 2007 11:06:55 +0200
Subject: [antlr-interest] Please help me!
In-Reply-To: <df252c050704290003y5a1f61e3vb3c9e584dd445e45@mail.gmail.com>
References: <df252c050704290003y5a1f61e3vb3c9e584dd445e45@mail.gmail.com>
Message-ID: <bc607a4e0704290206p2a4f6565hafc72ce4df5d1053@mail.gmail.com>

Hi,

On 4/29/07, ??? <questionhelper at gmail.com> wrote:
> 1. What do the ANTLR_USING_NAMESPACE(std)  and
> NTLR_USING_NAMESPACE(antlr)  mean ?  Where could I find more
> information?

They are macro's that expand to std:: or antlr:: when the used
compiler supports it. They're defined in config.hpp if I'm not
mistaken.

> 2. RefToken t = lexer.nextToken();
>    where can I find the documents about RefToken and nextToken ;

The C++ runtime mimics the java runtime so you should start with
reading the included docs of the java runtime (doc directory). There
should also be doxygen compatible comments in most of the C++ code, so
you could run doxygen (www.doxygen.org) on it to extract
documentation.

> 3. Where could I find the detailed information about the examples form
> antlr-2.7.7\examples;

There's not much documentation on them since they're pretty simple
(except for the bigger grammars that is) But you can ask questions on
the list ;)

HTH,

Ric

From femtowin at gmail.com  Sun Apr 29 03:05:30 2007
From: femtowin at gmail.com (femto gary)
Date: Sun, 29 Apr 2007 18:05:30 +0800
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252405@wavemachine.temporal-wave.com>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com>
	<200704281608.51055.rschulz@sonic.net>
	<91170ee40704282029r4a8ffc11uec0bc54d9be0147e@mail.gmail.com>
	<91170ee40704282107k5963b3e8vfe3b0a56acf8cb99@mail.gmail.com>
	<91170ee40704282325v661ee0eend02c31ae371a0359@mail.gmail.com>
	<B36CCC332A32904F8FA3DE134A235336252405@wavemachine.temporal-wave.com>
Message-ID: <91170ee40704290305v4e258950j4ca04b06f16ccda8@mail.gmail.com>

hehe, actually I've written a BaseLexer and BaseTokenStream
to handle rewindable/lazy tokenSource.
so for me, the generated RubyLexer must be inherited from BaseLexer,
not from the default Lexer, do anybody know how to do it?Thanks.
(it seems in v2 you can directly write someLexer/Parser extends
someLexer/Parser).

On 4/29/07, Jim Idle <jimi at temporal-wave.com> wrote:
> Syntax directed lexing opens up whole bags of worms. Perhaps we should
> just delete languages that require it? ;-). But I suppose ANTLR should
> be able to convert them into something sane ;-).
>
> Jim
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of femto gary
> Sent: Saturday, April 28, 2007 11:26 PM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] how to let parser control lexer state.
>
> Hi Benjamin, actually I'm also begining writing this
> lazy/rewindable tokenSource/tokenStream,
> I don't think it is too difficult, will contact
> you if I need help, Thanks.
> and Jim Idle, the island grammar in the download
> doesn't helps too, because lexing need parser's info,
> while in the example, lexing doesn't need parser's info,
> just new a island-grammar parser and its job will be done.
> (actually , the wiki provides an island-grammar example which
> lexing will be controlled by parser, but I feel it is a bit complex
> so would like to write my own solution. besides, I can't find
> the whole source code of metaas, (in their homepage, they
> just put bin download, and in svn trunk, I can't find whole source
> code.)
>
>
> (besides, can the reply-to address be configured in this mailing list?
> I click reply and reply to just one person and become off mailing list).
>


-- 
Best Regards
XRuby http://xruby.com
femto http://hi.baidu.com/femto

From pink at odahoda.de  Sun Apr 29 03:48:34 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 29 Apr 2007 12:48:34 +0200
Subject: [antlr-interest] how to let parser control lexer state.
References: <215287.10478.qm@web55907.mail.re3.yahoo.com>
	<200704281608.51055.rschulz@sonic.net>
	<B36CCC332A32904F8FA3DE134A235336252404@wavemachine.temporal-wave.com>
Message-ID: <f11t62$djo$1@sea.gmane.org>

Jim Idle wrote:

> Indeed. Perhaps, someday, the world can require that any 'new' [insert
> post-modernistic interpolation of 'reality' here ;-)] languages have to
> have a sane ANTLR parser as proof of their ability not to drive anyone
> with any sense mad and generally propagate the idea that languages
> should be 'useful' on their own terms - 'useful' being really "I can't
> be bothered to learn how to do this properly, so pass me the magic
> bullet". I will be the first to program the windows Vista gun gadget
> control to shoot anyone deciding that indenting should be
> lexically/grammatically significant on the vague justification that it
> makes people format code - something that a good programmer should do
> naturally anyway.

(High level) Languages are primarily designed for humans. That's why I
consider 'blocking by indention' more important than {..}, BEGIN..END or
whatever. Why should millions of language users be bothered with
maintaining two ways to define blocks - one for humans and one for the
compiler, if one is sufficient? Just to make those few poor souls happier,
who want to build parsers for these languages? IMHO: no.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From dave at badgers-in-foil.co.uk  Sun Apr 29 03:56:23 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 29 Apr 2007 10:56:23 +0000
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <91170ee40704282325v661ee0eend02c31ae371a0359@mail.gmail.com>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com>
	<200704281608.51055.rschulz@sonic.net>
	<91170ee40704282029r4a8ffc11uec0bc54d9be0147e@mail.gmail.com>
	<91170ee40704282107k5963b3e8vfe3b0a56acf8cb99@mail.gmail.com>
	<91170ee40704282325v661ee0eend02c31ae371a0359@mail.gmail.com>
Message-ID: <20070429105623.GA1685@badgers-in-foil.co.uk>

On Sun, Apr 29, 2007 at 02:25:35PM +0800, femto gary wrote:
> (actually , the wiki provides an island-grammar example which
> lexing will be controlled by parser, but I feel it is a bit complex
> so would like to write my own solution. besides, I can't find
> the whole source code of metaas, (in their homepage, they
> just put bin download, and in svn trunk, I can't find whole source code.)

I'm the author of that stuff (sorry; should have pointed you at the
example on the wiki before).  All the code is in svn!  :)  Please ask if
there's something specific you can't find.


The main grammar,

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/antlr/org/asdt/core/internal/antlr/AS3.g3

the supporting ANTLR implementation classes (including a token stream
with lazyness and a few other bits),

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/java/uk/co/badgersinfoil/metaas/impl/antlr/

the 'helper' classes used by the main grammar to process some of the
island grammars,

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/java/uk/co/badgersinfoil/metaas/impl/parser/

the island grammars themselves,

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/antlr/uk/co/badgersinfoil/metaas/impl/parser/
  ('regex' is broken; don't bother with it)


ta,
dave

-- 
http://david.holroyd.me.uk/

From jimi at temporal-wave.com  Sun Apr 29 09:11:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Apr 2007 09:11:09 -0700
Subject: [antlr-interest] how to let parser control lexer state.
In-Reply-To: <f11t62$djo$1@sea.gmane.org>
References: <215287.10478.qm@web55907.mail.re3.yahoo.com><200704281608.51055.rschulz@sonic.net><B36CCC332A32904F8FA3DE134A235336252404@wavemachine.temporal-wave.com>
	<f11t62$djo$1@sea.gmane.org>
Message-ID: <B36CCC332A32904F8FA3DE134A235336252406@wavemachine.temporal-wave.com>

Because human languages developed in a hap-hazard fashion and this seems
intuitively the wrong way to write languages that are used to express a
formal thing like a good program? High-level languages are not designed
[well for some languages we could stop there ;-)] for humans, they are
designed for humans to write programs with.

If it is difficult for the parser to report errors as accurately as
possible, or for the human eye to scan a program and make sense of it,
then the language is going to be harder to develop and debug in. It
isn't anything to do with how hard it is for the guy the wrote the
parser - parsing C and C++ is inherently complicated, but I can see the
difference between
{
And
{
	{

A lot easier than I can
	
and
		

And again, that isn't really a compiler aid - it is quite difficult to
correctly identify the position of a missing } in C. If the position of
something in the 'line' is thought to be a significant aid to
programming, then let's just use virtual 80 column cards and write in
COBOL. I just don't accept the tenet that making whitespace significant
in some places and not in others is somehow an aid for humans to program
in - we don't use space grammatically, when writing human language, we
use things like - () ; {} [] : - 

In point of fact though, it is, and should be, a matter of personal
choice. However, what tends to happen is that programs knocked up to do
a simple task, in a language that is good for that task, tend to
demonstrate the "I've got a hammer" theory and be used everywhere for
everything. I don't despise languages like this, I am a big fan of tools
like awk and sed, but I think they should not be used for any task you
have going on, any more than you should write an application in C. 

Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Benjamin Niemann
Sent: Sunday, April 29, 2007 3:49 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] how to let parser control lexer state.

Jim Idle wrote:

> Indeed. Perhaps, someday, the world can require that any 'new' [insert
> post-modernistic interpolation of 'reality' here ;-)] languages have
to
> have a sane ANTLR parser as proof of their ability not to drive anyone
> with any sense mad and generally propagate the idea that languages
> should be 'useful' on their own terms - 'useful' being really "I can't
> be bothered to learn how to do this properly, so pass me the magic
> bullet". I will be the first to program the windows Vista gun gadget
> control to shoot anyone deciding that indenting should be
> lexically/grammatically significant on the vague justification that it
> makes people format code - something that a good programmer should do
> naturally anyway.

(High level) Languages are primarily designed for humans. That's why I
consider 'blocking by indention' more important than {..}, BEGIN..END or
whatever. Why should millions of language users be bothered with
maintaining two ways to define blocks - one for humans and one for the
compiler, if one is sufficient? Just to make those few poor souls
happier,
who want to build parsers for these languages? IMHO: no.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From open.zone at virgin.net  Sun Apr 29 09:36:28 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 29 Apr 2007 17:36:28 +0100
Subject: [antlr-interest] Tree parsers and real world example
In-Reply-To: <f00dq0$o1d$1@sea.gmane.org>
Message-ID: <000b01c78a7c$8abe17c0$c704a8c0@hercules>

Hi,

> ANTLR (2.x) is being used in several compiler projects: 
> http://seclib.blogspot.com/2005/06/parser-generator-used-for-popular.html
> 
> You can check their source code to see how they handle it.
> 
> For simple language, you can embed code generator in the semantic 
> actions of treeparser (even parser). In my own project (XRuby), I used 
> treeparser to turn ANTLR's AST into a DOM-like structure, then use 
> Visitor approach to generate bytecode:
http://xruby.googlecode.com/svn/trunk/src/com/xruby/compiler/parser/ruby.tre
e.g

The intermediate AST-to-DOM step sounds like it would require extra
resources compared to simply processing the original AST. Was this the case
for you?

Why did you choose this design over just using treeparser(s) to walk the
ANTLR AST?

Did you consider using custom AST nodes (and manual tree generation actions)
that your visitors could use directly?


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From bharath.mail.list at gmail.com  Sun Apr 29 11:12:37 2007
From: bharath.mail.list at gmail.com (Bharath R)
Date: Sun, 29 Apr 2007 23:42:37 +0530
Subject: [antlr-interest] Specifying limit on number of digits in the
	Grammar in ANTLR
Message-ID: <3559c760704291112k6aa3072cta5aab94dad0cc6e0@mail.gmail.com>

Hi,

     Thanks for this solution. I've upgraded to V3 and using the
solution-3 given below. I'm now successfully able to parse for 5 digit
numbers.
  i.e i've used the following:

  ID: ( d+=DIGIT)+ {$d.size() <= 5}?

  Next step, I want to display the detected number. I've written the
following to display the entire number detected.

  id: (d+=DIGIT)+ {$d.size() <= 5}?
    { String resultStr = new String();
   	  java.util.Iterator iter = $d.iterator();
   	  while(iter.hasNext())
   	  {
   	 	Token tok = (Token)iter.next();
   	 	resultStr+=tok.getText();
   	 }

      System.out.println("Digit="+resultStr);
    }
    ;

DIGIT :	('0'..'9')
    ;


   Is this the right way to display detected number? Is there any
simpler way to achieve this?

Thanks for your help.


Regards,
Bharath




>This problem is well described in the new Ter book (page 292, in my
last beta version).

>In fact there is 3 ways to do it:

>1) Simple context-free grammar

>ID: DIGIT DIGIT DIGIT DIGIT DIGIT
>| DIGIT DIGIT DIGIT DIGIT
>| DIGIT DIGIT DIGIT
>| DIGIT DIGIT
>| DIGIT
>;

>2) Verify the size using actions

>ID: ( d+=DIGIT)+ {if ( $d.size() > 5 ) <<error action>> }?
>;


>3) Using validating semantic predicate

>ID: ( d+=DIGIT)+ {$d.size() <= 5}?
>;


>What is the best solution? It always depends (on my point of view) but
>if sometimes you will need to change your grammar to accept 7 instead
>of 5 digits? I would choose the third one.

>Alexandre Porcelli


On 4/26/07, Bharath R <rbharath24 at yahoo.com> wrote:
> Hi,
>
>       I'm a newbie to ANTLR.
>         I am trying to write a simple parser, that accepts number
whose
> number of digits vary from 1 to 5.
>
>     Below is the ABNF format
>  ID: 1*5(DIGIT)
>  DIGIT: '0'..'9'
>
>  i.e the ID can be any number varying from a 1 digit number to a max
of
> 5digit number. Each digit varying between 0 and 9.
>  How do I achieve this in ANTLR? I have been trying to write an
equivalent
> EBNF format but without success.
>  Thanks for you help.
>
> Regards,
> Bharath
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070429/4ed56415/attachment.html 

From jluh at cellfire.com  Sun Apr 29 11:51:52 2007
From: jluh at cellfire.com (Jack Luh)
Date: Sun, 29 Apr 2007 11:51:52 -0700
Subject: [antlr-interest] Resolving special key words during processing of
	AST
Message-ID: <7480DB7A264F334691336D364EB3131E43D7FB@hq-ex-1.corp.cellfire.com>

Hello,

 

I've recently started using ANTLR and have run across a problem that I
can't seem to solve.

 

I've create a simple logical expression grammar, lex, AST.

 

I would like to evaluate the following language:

 

<key_word> OPERATOR <value>

 

e.g.

 

today > 20070101 & today < 20071231

 

I'm currently able to parse and evaluate the Boolean results.  The issue
is that I now need to tie this into my business logic where I would
resolve my <key_word> into something meaningful.  In the example above,
"today" would resolve to today date.  Another keyword could resolve into
the user's date of birth.  I currently have a static method
(Variable.resolve()) which I put into the current grammer file.  It
takes a single parameter which is the name of the current keyword.  For
something non-related to the system, business logic or any user, I can
simple just return the value.  However, in the case where I need to look
up a user and return user data how do I pass the user object to the AST
parser so that I can get this information back when I need to resolve
the keyword?  I would like to do something like the following:

 

        FilterTreeParser treeParser = new FilterTreeParser();

        result = treeParser.expr(t, user);  // Is there a way I can pass
user parameter here?

 

If I'm going about this all wrong is there a better approach?

 

Thanks,
Jack

 

 


==========================[Start Grammer file]==========================

// defines the language

class FilterParser extends Parser;

 

options {

        buildAST=true;

}

 

expr: mexpr ((AND^|OR^) mexpr)*

    ;

 

mexpr:      atom (EQ^|NEQ^|GT^|GTE^|LT^|LTE^) atom

      |     LPAREN! expr RPAREN!

    ;

 

atom: VAR

      |     INT

      ;

 

 // defines the tokens (i.e. words)

class FilterLexer extends Lexer;

 

options {

    k=2; // needed for newline junk

    charVocabulary='\u0000'..'\u007F'; // allow ascii

}

 

LPAREN      : '(' ;

RPAREN      : ')' ;

AND         : '&';

OR          : '|';

EQ          : '=';

NEQ         : "!=";

GT          : '>';

GTE         : ">=";

LT          : '<';

LTE         : "<=";

INT         : ('0'..'9')+ ;

VAR         : ('a'..'z')+('_'(('a'..'z')|('0'..'9'))+)*;

WS          : ( ' ' | '\r' '\n' | '\n' | '\t' )

        {$setType(Token.SKIP);}

            ;    

 

// used to evaluate the expressions

class FilterTreeParser extends TreeParser;

 

options {

    importVocab=FilterParser;

}

 

@header {

import com.cellfire.jack;

}

 

// handles the logical operators

expr returns [boolean r=false]

{ boolean a,b; }

    :   #(AND  a=expr b=expr)  {r = a&&b;}

    |   #(OR a=expr b=expr)  {r = a||b;}   

    | (a=mexpr) {r=a;} 

    ;

 

// handles the comparison operators

mexpr returns [boolean r=false]

{ String a,b; }

    : #(EQ  a=atom b=atom)  {r = a.equalsIgnoreCase(b);}

    |   #(NEQ  a=atom b=atom)  {r = !a.equalsIgnoreCase(b);}

    |   #(LT  a=atom b=atom)  {r = (a.compareToIgnoreCase(b)<0);}

    |   #(LTE  a=atom b=atom)  {r = (a.compareToIgnoreCase(b)<=0);}

    |   #(GT  a=atom b=atom)  {r = (a.compareToIgnoreCase(b)>0);}

    |   #(GTE  a=atom b=atom)  {r = (a.compareToIgnoreCase(b)>=0);}

      ;

 

// handles the variables and values

atom returns [String r=null]

    :   i:INT     {r = i.getText();}

      |     j:VAR {r = Variable.resolve(j.getText());} //
Variable.Resolve() is the tie to business logic

      ;

==========================[End Grammer file]==========================

 

 

==========================[Start Main Method]==========================

    private boolean executeFilter(String expr) {

        boolean result = false;

        StringReader rdr = new StringReader(expr);

        FilterLexer lexer = new FilterLexer(rdr);

        FilterParser parser = new FilterParser(lexer);

        try {

            parser.expr();

        }

        catch (Exception ex) {

            assertTrue(ex.getMessage(), true);

        }

        

        AST t = parser.getAST();

                

        FilterTreeParser treeParser = new FilterTreeParser();

        try {

            result = treeParser.expr(t);  // can I pass other parameters
here?

        }

        catch (Exception ex) {

            assertTrue(ex.getMessage(), true);

        }

        

        System.out.println("Expr: " + expr);

        System.out.println("Tree: " + t.toStringTree());

        System.out.println("Result: " + result);

        return result;

    }

==========================[End Main Method]==========================

 

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

 

Teach your phone new tricks

Go to cellfire.com <http://www.cellfire.com/>  or text '110' to 22888

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070429/4baaf01a/attachment-0001.html 

From parrt at cs.usfca.edu  Sun Apr 29 14:48:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 29 Apr 2007 14:48:01 -0700
Subject: [antlr-interest] Current antlr bugs [b7]
In-Reply-To: <200704270150.25613.ilia@obnovlenie.ru>
References: <200704270150.25613.ilia@obnovlenie.ru>
Message-ID: <35AC8DC5-E139-47F8-8ADC-E5D027FEA09C@cs.usfca.edu>

Hi Ilia,

  yes, I believe that the order is significant, unfortunately.  Put  
the options first I think.
Ter
On Apr 26, 2007, at 2:50 PM, Ilia Kantor wrote:
> Hello,
>
> Tokens location is fixed, that's fine..
> But all other locations cause strange errors.
>
>
> $ ./antlr.sh BugToken.g
> no such locale file org/antlr/tool/templates/messages/languages/ 
> ru.stg retrying with English locale
> ANTLR Parser Generator  Version 3.0b7 (April 12, 2007)  1989-2007
> error(100): BugToken.g:12:1: syntax error: antlr: BugToken.g:12:1:  
> unexpected token: options {
> error(10):  internal error: BugToken.g :  
> java.lang.NullPointerException
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:516)
> org.antlr.tool.Grammar.<init>(Grammar.java:448)
> org.antlr.Tool.getGrammar(Tool.java:331)
> org.antlr.Tool.process(Tool.java:267)
> org.antlr.Tool.main(Tool.java:70)
>
> grammar BugToken;
>
>
> tokens {
>         IF;
>         THEN;
>         ELSE;
>         EVAL;
>         TEXT;
> }
>
> options {
>         superClass=CommandParentParser;
>         output=AST;
> }
>
>


From parrt at cs.usfca.edu  Sun Apr 29 14:53:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 29 Apr 2007 14:53:26 -0700
Subject: [antlr-interest] Current antlr bugs [b7]
In-Reply-To: <200704271751.56034.ilia@obnovlenie.ru>
References: <200704271751.56034.ilia@obnovlenie.ru>
Message-ID: <A799AEDE-2481-4143-94C5-C500A3147BA2@cs.usfca.edu>

Hi. Works  No problem for me.

Thank you for your bug reports, but I have a request:

1.  please make the grammar as small as you can make it that still  
exhibits the error.
2.  please tell me which rule you invoked as the start symbol and/or
3.  please send the test invocation as well so that I may know if you  
are using a strange token stream or something

Regards,
Terence
On Apr 27, 2007, at 6:51 AM, Ilia Kantor wrote:

>
> And more bugs to go.... I guess such exception is not normal:
>
> Exception in thread "main"  
> java.lang.ArrayIndexOutOfBoundsException: -1
> 	at org.antlr.runtime.DFA.predict(DFA.java:43)
> 	at GetScopeValueCleanParser.rule_long_def_part 
> (GetScopeValueCleanParser.java:554)
> 	at GetScopeValueCleanParser.synpred1_fragment 
> (GetScopeValueCleanParser.java:1352)
> 	at GetScopeValueCleanParser.synpred1(GetScopeValueCleanParser.java: 
> 1392)
> 	at GetScopeValueCleanParser.rule_call 
> (GetScopeValueCleanParser.java:182)
> 	at GetScopeValueCleanParser.expr_simple 
> (GetScopeValueCleanParser.java:1307)
> 	at GetScopeValueCleanParser.expr_no_semi 
> (GetScopeValueCleanParser.java:1137)
> 	at GetScopeValueCleanParser.expr(GetScopeValueCleanParser.java:946)
> 	at GetScopeValueCleanParser.exprs(GetScopeValueCleanParser.java:862)
> 	at GetScopeValueCleanParser.document(GetScopeValueCleanParser.java: 
> 76)
> 	at GrammarScopeValueCleanTest.main(GrammarScopeValueCleanTest.java: 
> 39)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
> 	at sun.reflect.NativeMethodAccessorImpl.invoke 
> (NativeMethodAccessorImpl.java:39)
> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke 
> (DelegatingMethodAccessorImpl.java:25)
> 	at java.lang.reflect.Method.invoke(Method.java:597)
> 	at com.intellij.rt.execution.application.AppMain.main(AppMain.java: 
> 90)
>
> =============== grammar =============
>
> grammar GetScopeValueClean;
>
> options {
>    	output=AST;
> }
>
>
> tokens {
> 	TEXT;
> 	GET_PROPERTY_VALUE;
> 	GET_PROPERTY_ARGUMENTS;
> 	EVAL;	
> }
>
>
> LCURL	:	'{';
> RCURL	:	'}';
>
> GET_SCOPE_VALUE
> 	:	'#';
> 	
>
> CONTROL
>         :       '~';
>
> SEMI:   ';';
>
> DOT	:	'.';
>
>
>
> MINUS
> 	:	'-';
>
> GT	:	'>';
>
>
> SPECIAL_CHAR
>         :       '`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '('  
> | ')' |
>         '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ','  
> | '<' |
>          '/' | '?';
>
>
>
> fragment WS_CHAR  :
>        (' '|'\r'|'\t'|'\u000C'|'\n' )
>     ;
>
> WS      :       WS_CHAR+;
>
> // not SPECIAL_CHAR not WS_CHAR
> WORD:
>
>         (~ ('`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' |  
> ')' |
>         '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ','  
> | '<' | '/' | '?'
>         | '{'
>         | '~'
>         | '}'
>         | '#'
>         | ';'
>         | '.'
>         | '-'
>         | '>'
>         | ' '|'\r'|'\t'|'\u000C'|'\n' ) )+
>
> ;
>
>
>
> document
> 	:	exprs;
>
>
>
> rule_call: GET_SCOPE_VALUE WORD ((rule_long_def_part) 
> =>rule_long_def_part)* -> ^(GET_SCOPE_VALUE WORD  
> rule_long_def_part*) |
> 	GET_SCOPE_VALUE LCURL WORD rule_long_def_part* RCURL -> ^ 
> (GET_SCOPE_VALUE WORD rule_long_def_part*)
> 	;
>
>
> get_property_arguments
>         :
>          LCURL exprs? RCURL -> ^(GET_PROPERTY_ARGUMENTS exprs?)
> ;
> 	
> rule_long_def_part
> 	:	  MINUS GT WORD ((get_property_arguments) 
> =>get_property_arguments)* -> ^(GET_PROPERTY_VALUE WORD  
> get_property_arguments*) |
> 		  DOT WORD  -> ^(GET_SCOPE_VALUE WORD)
> 	;
>
> text:
> 	DOT | MINUS | WORD | WS | GT | SPECIAL_CHAR
> ;
>
>
> curly_block
>         :
>          LCURL exprs? RCURL -> LCURL exprs? RCURL
> ;
>
> exprs:
>         (expr)+
> ;
>
>
> expr:
> (
>         expr_no_semi -> expr_no_semi |
>         SEMI -> TEXT[$SEMI]
> )
> ;
>
> exprs_no_semi
>         :       (expr_no_semi)+
> ;
>
>
> expr_no_semi
>         :
>                 (expr_simple) | (curly_block)
>         ;
>
> exprs_simple
>         :       (expr_simple)+
>         ;
>
> /* expression without curl at start and ; */
> expr_simple
>         :
>          rule_call
>         | text
> ;
>
>
> ============== input ================
> cdsd #rere->a{#c+1}{2 2} kljkl
>
>
> Hope this bug is simple one!
>
> Happy fixing
> V/R
> Ilia Kantor
>
>
>


From parrt at cs.usfca.edu  Sun Apr 29 15:24:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 29 Apr 2007 15:24:16 -0700
Subject: [antlr-interest] How to use LT and LA in predicates?
In-Reply-To: <462CDDA9.1010203@gmx.de>
References: <283368.32755.qm@web55912.mail.re3.yahoo.com>
	<462CDDA9.1010203@gmx.de>
Message-ID: <143EDB29-7D8F-4A40-81DF-8CB70441162E@cs.usfca.edu>


On Apr 23, 2007, at 9:24 AM, Johannes Luber wrote:

> Loring Craymer wrote:
>> In the parser, input is a TokenStream.  In a Lexer, it
>> is an IntStream and returns ints (characters).
>>
>> --Loring
>
> Is there an easier way to turn the ints into strings than using new
> String(new char[]{(char) input.LT(1)})? And do I truly get the  
> character
> (couldn't test that yet)?

> After further investigation of my last problem (pasted below for
> reference) I saw that I overlooked that with {}?=> the predicate isn't
> tested in the parser but in a nested DFA class, which has only as
> function signature
>
> public int specialStateTransition(int s, IntStream input) {}

Yes, the book talks about this problem for syntactic predicates, but  
apparently I didn't for semantic predicates.  Strange.  I thought I  
had described this issue.

> So here input isn't a TokenStream but only an IntStream. How can I

  in the lexer the lookahead is only a character. unless you go match  
an identifier, you will not have that text.  There is no such thing  
as the lookahead text in a lexer. I suspect that you need to have  
your predicates in the parser not the lexer.

Ter

> change that? I don't want to implement another parser for the
> recognition of the next token alone.
>
> Best regards,
> Johannes Luber
>
> --------
> The third problem I have is with these rules:
>
> identifier
> 	:	{!isKeyword(input.LT(1).getText())}?=> AVAILABLE_IDENTIFIER
> 	|	'@' IDENTIFIER_OR_KEYWORD
> 	;
> 	
> fragment AVAILABLE_IDENTIFIER
> 	:	IDENTIFIER_OR_KEYWORD /* An identifier_or_keyword that is not a
> keyword */
> 	;
>
> I have used {}?=> to enforce the use of the predicate, as otherwise  
> the
> presence or absence of an @ distinguishes between the cases. Now I
> receive the error, that the class IntStream doesn't have the method
> getText(). The following rule snippet is generated:
>
> else if ( (LA58_0==AVAILABLE_IDENTIFIER) &&
> (!isKeyword(input.LT(1).getText()))) {s = 3;}


From klists at saphor.de  Sun Apr 29 22:36:16 2007
From: klists at saphor.de (Marc)
Date: Mon, 30 Apr 2007 07:36:16 +0200
Subject: [antlr-interest] Problems with C++-target
In-Reply-To: <B36CCC332A32904F8FA3DE134A235336252403@wavemachine.temporal-wave.com>
References: <463346CC.2060000@saphor.de>
	<B36CCC332A32904F8FA3DE134A235336252403@wavemachine.temporal-wave.com>
Message-ID: <46358050.7030608@saphor.de>

Jim Idle wrote:
> Do you have a specific need for C++? You could just declare the C
> functions you need as extern "C". In fact, I should really add that to
> the C output so that it just happens by including the generated .h file.
> Though I suppose the fact that you can use C++ in actions is attractive
> - I ought to play with this, perhaps you can just compile the output as
> C++ and use C++ in actions anyway... why do I keep making more work for
> myself? ;-)
>
> C examples are now up to date and include VS2005 .sln and projects and
> have been tested to death with DevPartner studio (though I don't have
> complete coverage yet). A lot of work went into getting
> backtrack/memorization to work without the enormous overhead it could be
> with 2MB java input files :-).
>
> If you are using the C target, you need to use a .jar that predates
> Ter's recent tree rewrite stuff... however you also need the latest
> template. I am working on the tree re-write stuff now, so possibly by
> the end of the weekend it will be back in sync. I will post if it is.
>   

Many thanks for this tip! That'll be a way to try out at least as an
intermediate step. I've already checked that my mini-example runs
through with the C target, and it does. Now I'll have to play around how
to compile the generated code (study README under lib/C, library
dependencies, if any, file order etc.) with gcc, but that should
hopefully not be much of a deal.

Best regards,

Marc

> Jim
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marc
> Sent: Saturday, April 28, 2007 6:06 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problems with C++-target
>
> Hi!
>
> Using a small grammar with antlr 3.0b7 that generates Java-files without
> problems I tried the language option Cpp. and get the following error
> message:
>
> --------
>
> error(10):  internal error: group Cpp does not satisfy interface
> ANTLRCore: missing templates [parameterSetAttributeRef,
>
> A similar error war reported on April 7th for the C target where it was
> suggested to use the latest daily build. The latest I could find on the
> page was dated April 21st and still exhibits this error.
>
> Any ideas what I should do? Thanks in advance for any advice!
>
> Best regards,
>
> Marc
>
>
>
>   




From femtowin1 at gmail.com  Mon Apr 30 01:58:23 2007
From: femtowin1 at gmail.com (femtowin1)
Date: Mon, 30 Apr 2007 01:58:23 -0700 (PDT)
Subject: [antlr-interest] Some Problem with tree parser
Message-ID: <5f4b9495e84d4224aa43ed400fa96921@45198ea468654afdadab3815e8d2354c>

Hi, while trying the following tree grammar:

tree grammar Rubyv3Tree;

options {
tokenVocab=Rubyv3; // reuse token types
ASTLabelType=CommonTree; // $label will have type CommonTree
}
@header {
package com.xruby.compiler.parser;

import com.xruby.compiler.codedom.*;
}

program	returns[Program p]
@init{List statements=new ArrayList();}:	^(STATEMENT_LIST s=statement* {statements.add($s);}) {p=new Program(statements);} ;

statement returns[String s]
	: ^(STATEMENT 'expression0') {s="expression0";};
------------------------------------------
actually the STATEMENT_LIST Tree will contains 0 or more statement, but the problem is, I can't collect value return from statement*, (Program is a class defined by me and not related to antlr).
  I've tried s+=statement*, statement{statements.add($statement)}* (antlr reports and error when generating parser)
or statement{statements.add(statement)}*,
the problem is that in final generating code,
it is always like this:
switch (alt1) {
                	case 1 :
                	    // C:\\toolset\\ruby\\xruby-trunk\\src\\com\\xruby\\compiler\\parser\\Rubyv3Tree.g:14:61: statement
                	    {
                	    pushFollow(FOLLOW_statement_in_program45);
                	    statement(); //here
                	    _fsp--;


                	    }
                	    break;

                	default :
                	    break loop1;
                    }
                } while (true);

without any code collection the value returned from
statement, it is weird and anybody knows what the problem is or is it an antlr bug? Thanks.
______________________________________
Sent from my www.pageflakes.com startpage

From dave at badgers-in-foil.co.uk  Mon Apr 30 02:14:45 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 30 Apr 2007 09:14:45 +0000
Subject: [antlr-interest] Some Problem with tree parser
In-Reply-To: <5f4b9495e84d4224aa43ed400fa96921@45198ea468654afdadab3815e8d2354c>
References: <5f4b9495e84d4224aa43ed400fa96921@45198ea468654afdadab3815e8d2354c>
Message-ID: <20070430091444.GA17688@badgers-in-foil.co.uk>

On Mon, Apr 30, 2007 at 01:58:23AM -0700, femtowin1 wrote:
> options {
> tokenVocab=Rubyv3; // reuse token types
> ASTLabelType=CommonTree; // $label will have type CommonTree
> }

>   I've tried s+=statement*

I don't use the += operator, but could it be that you need output=AST;
in your options section?


ta,
dave

-- 
http://david.holroyd.me.uk/

From femtowin1 at gmail.com  Mon Apr 30 02:21:12 2007
From: femtowin1 at gmail.com (femtowin1)
Date: Mon, 30 Apr 2007 02:21:12 -0700 (PDT)
Subject: [antlr-interest] Some Problem with tree parser
Message-ID: <7327232c2e044ea5ba89c4273422a29c@7eb8e3bbe0b7409da6b28d60037c391a>

actually this is already a tree grammar.

program:^(STATEMENT_LIST s=statement* 
  ....


>On Mon, Apr 30, 2007 at 01:58:23AM -0700, femtowin1 wrote:
>> options {
>> tokenVocab=Rubyv3; // reuse token types
>> ASTLabelType=CommonTree; // $label will have type CommonTree
>> }
>
>>   I've tried s+=statement*
>
>I don't use the += operator, but could it be that you need output=AST;
>in your options section?
>
>
>ta,
>dave
>
>-- 
>http://david.holroyd.me.uk/
>
______________________________________
Sent from my www.pageflakes.com startpage

From dave at badgers-in-foil.co.uk  Mon Apr 30 02:32:30 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 30 Apr 2007 09:32:30 +0000
Subject: [antlr-interest] Some Problem with tree parser
In-Reply-To: <7327232c2e044ea5ba89c4273422a29c@7eb8e3bbe0b7409da6b28d60037c391a>
References: <7327232c2e044ea5ba89c4273422a29c@7eb8e3bbe0b7409da6b28d60037c391a>
Message-ID: <20070430093230.GB17688@badgers-in-foil.co.uk>

On Mon, Apr 30, 2007 at 02:21:12AM -0700, femtowin1 wrote:
> actually this is already a tree grammar.
> 
> program:^(STATEMENT_LIST s=statement* 
>   ....

Ah, sorry.  I've got no tree-grammar experience either :(


> >On Mon, Apr 30, 2007 at 01:58:23AM -0700, femtowin1 wrote:
> >> options {
> >> tokenVocab=Rubyv3; // reuse token types
> >> ASTLabelType=CommonTree; // $label will have type CommonTree
> >> }
> >
> >>   I've tried s+=statement*
> >
> >I don't use the += operator, but could it be that you need output=AST;
> >in your options section?


-- 
http://david.holroyd.me.uk/

From imus at linuxmail.org  Mon Apr 30 04:46:24 2007
From: imus at linuxmail.org (Isabelle Muszynski)
Date: Mon, 30 Apr 2007 19:46:24 +0800
Subject: [antlr-interest] Need help parsing text format
Message-ID: <20070430114624.369BC4409B@ws5-1.us4.outblaze.com>

Hi everyone,

I need to parse text of the form 

BCS123/12.LT12ZX/HAM-BRE.1/bla&&^^%%$$bla.3

where the 1st and 3rd pieces are alphanumeric.

My grammar is shown at the end of this mail.
The problem is that it won't parse the cases where alphanumeric fields only contain for ex. letters :

BCSABC/12.CHARLIE/HAM-BRE.1/bla&&^^%%$$bla.3

I don't understand what I'm doing wrong :-(

TIA,
Isabelle

/*** GRAMMAR ***/
grammar Tokens;

SLASH :       '/';
DASH:   '-' ;
DOT     :       '.';

fragment SPECIAL_CHAR :	
          '`' | '!' | '@' | '$' | '%' | '^' | '&' | '*' | '(' | ')' |
         '+' | '=' | '[' | ']' | ':' | '\'' | '"' | '\\' | '|' | ',' | '<' | '?' ;

fragment DIGIT 	: '0'..'9'	;
	
fragment LETTER :	'a'..'z' | 'A'..'Z' ;	

fragment ALPHA 	:	LETTER | DIGIT;

fragment ANY_CHAR :	ALPHA | SPECIAL_CHAR ;

fragment WS_CHAR  : (' ' | '\t' | '\u000C' ) ;

WS      :       WS_CHAR+;

NEWLINE  : '\r'? '\n' ;

LETTER_WORD :	LETTER+ ;
NUMBER_WORD  :	DIGIT+ ;
ALPHA_WORD  : ALPHA+ ;
FREE_WORD : ANY_CHAR+ ;

load	:	
	ALPHA_WORD
	SLASH
	NUMBER_WORD
	DOT 
	ALPHA_WORD
	SLASH
	LETTER_WORD
	DASH
	LETTER_WORD
	DOT
	NUMBER_WORD
	SLASH
	FREE_WORD
	(DOT NUMBER_WORD)?
	NEWLINE
	;

=
HIPAA compliant Digital Transcription
V-Safes with V-800: Share and receive files (DSS, WAV, RTF, DOC) from phone (V-800), handheld-recorders (Olympus). HIPAA compliance. AES encryption. Batch print and download.
http://a8-asy.a8ww.net/a8-ads/adftrclick?redirectid=091a5e152e265f0b42e2fc00947b1a35


-- 
Powered by Outblaze

From antlr at mirality.co.nz  Mon Apr 30 05:00:53 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 01 May 2007 00:00:53 +1200
Subject: [antlr-interest] Need help parsing text format
In-Reply-To: <20070430114624.369BC4409B@ws5-1.us4.outblaze.com>
References: <20070430114624.369BC4409B@ws5-1.us4.outblaze.com>
Message-ID: <20070430120044.3044D1907B0@www.antlr.org>

At 23:46 30/04/2007, Isabelle Muszynski wrote:
 >My grammar is shown at the end of this mail.
 >The problem is that it won't parse the cases where alphanumeric
 >fields only contain for ex. letters :
 >
 >BCSABC/12.CHARLIE/HAM-BRE.1/bla&&^^%%$$bla.3
[...]
 >fragment DIGIT 	: '0'..'9'	;
 >	
 >fragment LETTER :	'a'..'z' | 'A'..'Z' ;	
 >
 >fragment ALPHA 	:	LETTER | DIGIT;
 >
 >fragment ANY_CHAR :	ALPHA | SPECIAL_CHAR ;
 >
 >fragment WS_CHAR  : (' ' | '\t' | '\u000C' ) ;
 >
 >WS      :       WS_CHAR+;
 >
 >NEWLINE  : '\r'? '\n' ;
 >
 >LETTER_WORD :	LETTER+ ;
 >NUMBER_WORD  :	DIGIT+ ;
 >ALPHA_WORD  : ALPHA+ ;
 >FREE_WORD : ANY_CHAR+ ;

I think this is the problem: there is ambiguity between ALPHA_WORD 
and both of LETTER_WORD and NUMBER_WORD, since each is a subset of 
ALPHA_WORD.  Since they're all productions and it can't change its 
mind and become a different token later on, it has to guess which 
one to use.  I suspect (given the order here) it'll pick 
LETTER_WORD if it consists only of letters, and NUMBER_WORD if it 
consists only of numbers.  It might pick ALPHA_WORD for mixed 
cases but then it also might generate a combination of 
LETTER_WORDs and NUMBER_WORDs instead -- that's another ambiguity.

The same applies for FREE_WORD, since that's another superset.

There are dodges you can use to get around this sort of thing, but 
in this case since your grammar is so interwoven I think you might 
be better off making a minimalist lexer and do most of the heavy 
lifting in the parser instead.  In other words, remove the ALPHA, 
ALPHA_WORD, ANY_CHAR, and FREE_WORD rules, and make SPECIAL_CHAR 
an output rule (not a fragment).  Then make equivalents to 
ALPHA_WORD, and FREE_WORD as parser rules instead of lexer rules.

You could even remove all the WORD rules and make each lexer token 
only contain a single character (except possibly for 
whitespace).  Probably wouldn't make a lot of difference in this 
case :)


From imus at linuxmail.org  Mon Apr 30 05:44:38 2007
From: imus at linuxmail.org (Isabelle Muszynski)
Date: Mon, 30 Apr 2007 20:44:38 +0800
Subject: [antlr-interest] Need help parsing text format
Message-ID: <20070430124438.5734B7AEB8@ws5-10.us4.outblaze.com>

Thanks.
I had done something like that in my first attempts, but I figured there must be a better way.
Before I tried parsing this "grammar" with Antlr, I was doing it with regular expressions, which allowed me to do all I needed. And if 
now I pretty much have to read each char separately, or read bunches of any char, and do the equivalent of a regular expression check 
afterwards, I seem to be back to square one.

I'll try to do it as you suggest.

Isabelle

> ----- Original Message -----
> From: "Gavin Lambert" <antlr at mirality.co.nz>
> To: "Isabelle Muszynski" <imus at linuxmail.org>, antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Need help parsing text format
> Date: Tue, 01 May 2007 00:00:53 +1200
> 
> 
> At 23:46 30/04/2007, Isabelle Muszynski wrote:
>  >My grammar is shown at the end of this mail.
>  >The problem is that it won't parse the cases where alphanumeric
>  >fields only contain for ex. letters :
>  >
>  >BCSABC/12.CHARLIE/HAM-BRE.1/bla&&^^%%$$bla.3
> [...]
>  >fragment DIGIT 	: '0'..'9'	;
>  >	
>  >fragment LETTER :	'a'..'z' | 'A'..'Z' ;	
>  >
>  >fragment ALPHA 	:	LETTER | DIGIT;
>  >
>  >fragment ANY_CHAR :	ALPHA | SPECIAL_CHAR ;
>  >
>  >fragment WS_CHAR  : (' ' | '\t' | '\u000C' ) ;
>  >
>  >WS      :       WS_CHAR+;
>  >
>  >NEWLINE  : '\r'? '\n' ;
>  >
>  >LETTER_WORD :	LETTER+ ;
>  >NUMBER_WORD  :	DIGIT+ ;
>  >ALPHA_WORD  : ALPHA+ ;
>  >FREE_WORD : ANY_CHAR+ ;
> 
> I think this is the problem: there is ambiguity between ALPHA_WORD 
> and both of LETTER_WORD and NUMBER_WORD, since each is a subset of 
> ALPHA_WORD.  Since they're all productions and it can't change its 
> mind and become a different token later on, it has to guess which 
> one to use.  I suspect (given the order here) it'll pick 
> LETTER_WORD if it consists only of letters, and NUMBER_WORD if it 
> consists only of numbers.  It might pick ALPHA_WORD for mixed cases 
> but then it also might generate a combination of LETTER_WORDs and 
> NUMBER_WORDs instead -- that's another ambiguity.
> 
> The same applies for FREE_WORD, since that's another superset.
> 
> There are dodges you can use to get around this sort of thing, but 
> in this case since your grammar is so interwoven I think you might 
> be better off making a minimalist lexer and do most of the heavy 
> lifting in the parser instead.  In other words, remove the ALPHA, 
> ALPHA_WORD, ANY_CHAR, and FREE_WORD rules, and make SPECIAL_CHAR an 
> output rule (not a fragment).  Then make equivalents to ALPHA_WORD, 
> and FREE_WORD as parser rules instead of lexer rules.
> 
> You could even remove all the WORD rules and make each lexer token 
> only contain a single character (except possibly for whitespace).  
> Probably wouldn't make a lot of difference in this case :)

>


=


-- 
Powered by Outblaze

From kjz at cypress.com  Mon Apr 30 09:54:19 2007
From: kjz at cypress.com (Jeff Skaanland)
Date: Mon, 30 Apr 2007 09:54:19 -0700
Subject: [antlr-interest] Concept Problem with recognizing Tokens
In-Reply-To: <mailman.3488.1177872717.1993.antlr-interest@antlr.org>
References: <mailman.3488.1177872717.1993.antlr-interest@antlr.org>
Message-ID: <001801c78b48$32291d90$967b58b0$@com>

Hopefully this isn't just something I've been overlooking in my searches
but....

I'm processing a type of assembly language and am running into a problem.
Outside of Labels, there is a set amount of vocabulary for the language
which I defined as tokens (MAC = "mac"; ALU = "alu"; ...).

Problem I face:
         When I intentionally put an error into the input stream, for
example use 'Mcdonalds' as command, instead of saying "found MCDONALDS,
expected MAC" it reports "found 'c', expected 'a'.  To fix this, I wished to
process every word into a token, but then I can't figure out how to take a
token, INSTRUCTION, and then check to see if it's actually a MAC token or
ALU token and, if not, spit out "Found MCDONALDS, expected RUTHS_CHRIS" (Or
expected MAC again...)	

Thanks for setting me straight,

	 JT



From rschulz at sonic.net  Mon Apr 30 12:04:58 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 30 Apr 2007 12:04:58 -0700
Subject: [antlr-interest] NetBeans Library Module
Message-ID: <200704301204.59106.rschulz@sonic.net>

Hi,

I recently installed NetBeans to avail myself of its profiler (it being 
the best free profiler I can find--if there's a better one, _please_ 
let me know!).

Today when I was going through the modules update dialog, I noticed that 
in the "Libraries" section there's an Antlr (sic) module. The 
descriptive text reads:

Release date: 2007/03/22
Contains Antlr 2.7.2 development libraries


Perhaps whoever is responsible for this could produce an ANTLR 3.x 
counterpart?

I'm not asking for this, 'cause I use IDEA for my development (apart 
from profiling), but I thought I'd point it out.


Randall Schulz

From ifnubima at gmail.com  Mon Apr 30 12:09:27 2007
From: ifnubima at gmail.com (Ifnu _)
Date: Tue, 1 May 2007 02:09:27 +0700
Subject: [antlr-interest] new Exception API in antlr v3
Message-ID: <769fc4f00704301209y2ee91994kbb54c5a3a05a7a89@mail.gmail.com>

hi all,

i'm currently working on org.antlr.runtime.BaseRecognizer to provide
localize error message in indonesian language, but i'm bit surprised
by the fact that exception API in antlr v3 is not the same as in antlr
v2

can i have proper explenation or resource about the new exception API
in antlr v3?

thank you for your help :D

-- 
http://www.nagasakti.or.id/roller/ifnu
regards

From parrt at cs.usfca.edu  Mon Apr 30 13:04:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Apr 2007 13:04:40 -0700
Subject: [antlr-interest] new Exception API in antlr v3
In-Reply-To: <769fc4f00704301209y2ee91994kbb54c5a3a05a7a89@mail.gmail.com>
References: <769fc4f00704301209y2ee91994kbb54c5a3a05a7a89@mail.gmail.com>
Message-ID: <440C147F-8B62-4763-BED2-7F519EC993ED@cs.usfca.edu>


On Apr 30, 2007, at 12:09 PM, Ifnu _ wrote:

> hi all,
>
> i'm currently working on org.antlr.runtime.BaseRecognizer to provide
> localize error message in indonesian language, but i'm bit surprised
> by the fact that exception API in antlr v3 is not the same as in antlr
> v2

it's better in v3 :)  No fixed English strings.

> can i have proper explenation or resource about the new exception API
> in antlr v3?

I need to build that. until that time, can you look at the Java Doc  
inside the source code?

Thanks!
Ter
>
> thank you for your help :D
>
> -- 
> http://www.nagasakti.or.id/roller/ifnu
> regards


From parrt at cs.usfca.edu  Mon Apr 30 13:05:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Apr 2007 13:05:58 -0700
Subject: [antlr-interest] Some Problem with tree parser
In-Reply-To: <7327232c2e044ea5ba89c4273422a29c@7eb8e3bbe0b7409da6b28d60037c391a>
References: <7327232c2e044ea5ba89c4273422a29c@7eb8e3bbe0b7409da6b28d60037c391a>
Message-ID: <DE78AA42-F5A6-4BCF-8C13-7439E06854E6@cs.usfca.edu>

Tree grammars cannot create new trees at this point.  One of the big  
things to fix of the summer after the first release.
Ter
On Apr 30, 2007, at 2:21 AM, femtowin1 wrote:

> actually this is already a tree grammar.
>
> program:^(STATEMENT_LIST s=statement*
>   ....
>
>
>> On Mon, Apr 30, 2007 at 01:58:23AM -0700, femtowin1 wrote:
>>> options {
>>> tokenVocab=Rubyv3; // reuse token types
>>> ASTLabelType=CommonTree; // $label will have type CommonTree
>>> }
>>
>>>   I've tried s+=statement*
>>
>> I don't use the += operator, but could it be that you need  
>> output=AST;
>> in your options section?
>>
>>
>> ta,
>> dave
>>
>> -- 
>> http://david.holroyd.me.uk/
>>
> ______________________________________
> Sent from my www.pageflakes.com startpage


From parrt at cs.usfca.edu  Mon Apr 30 13:06:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Apr 2007 13:06:55 -0700
Subject: [antlr-interest] Concept Problem with recognizing Tokens
In-Reply-To: <001801c78b48$32291d90$967b58b0$@com>
References: <mailman.3488.1177872717.1993.antlr-interest@antlr.org>
	<001801c78b48$32291d90$967b58b0$@com>
Message-ID: <FDA7409C-FD6D-413C-8274-19A9EAA9F9BD@cs.usfca.edu>

Seems you are doing everything in the lexer.  Send identifiers or  
keywords to the parser and then have the parser apply the appropriate  
grammatical structure.  Then, you will automatically get your  
messages you seek. :)
Ter
On Apr 30, 2007, at 9:54 AM, Jeff Skaanland wrote:

> Hopefully this isn't just something I've been overlooking in my  
> searches
> but....
>
> I'm processing a type of assembly language and am running into a  
> problem.
> Outside of Labels, there is a set amount of vocabulary for the  
> language
> which I defined as tokens (MAC = "mac"; ALU = "alu"; ...).
>
> Problem I face:
>          When I intentionally put an error into the input stream, for
> example use 'Mcdonalds' as command, instead of saying "found  
> MCDONALDS,
> expected MAC" it reports "found 'c', expected 'a'.  To fix this, I  
> wished to
> process every word into a token, but then I can't figure out how to  
> take a
> token, INSTRUCTION, and then check to see if it's actually a MAC  
> token or
> ALU token and, if not, spit out "Found MCDONALDS, expected  
> RUTHS_CHRIS" (Or
> expected MAC again...)	
>
> Thanks for setting me straight,
>
> 	 JT
>
>


From ilia at obnovlenie.ru  Mon Apr 30 15:03:37 2007
From: ilia at obnovlenie.ru (Ilia Kantor)
Date: Tue, 1 May 2007 02:03:37 +0400
Subject: [antlr-interest] syntax predicate strange behavior
Message-ID: <200705010203.37675.ilia@obnovlenie.ru>


Hello, I have a rule


command_user_body:	
	 (LCURL) => LCURL command_arguments? RCURL -> ^(USER_COMMAND command_arguments?) |		 			
	 -> USER_COMMAND
;

On input LCURL WS WORD WS MINUS GT...
this gives me exception from DFA.noViableAlt at first WORD token.

How can that happen ?

I guess, it should match LCURL and go first alternative and match it happily no ?


By the way, this works fine:

command_user_body
options {backtrack=true;}:	
	LCURL command_arguments? RCURL -> ^(USER_COMMAND command_arguments?) |		 			
	 -> USER_COMMAND
;



Best wishes
Ilia

