From antlr at mirality.co.nz  Mon Dec  1 03:03:57 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 02 Dec 2008 00:03:57 +1300
Subject: [antlr-interest] The problem of return struct
In-Reply-To: <5a92ffb60811302347x3b199459xec2c01662494775@mail.gmail.com
 >
References: <5a92ffb60811302347x3b199459xec2c01662494775@mail.gmail.com>
Message-ID: <20081201110404.9844411EA97@www.antlr.org>

At 20:47 1/12/2008, chain one wrote:
>entity_id returns [String eid]
>@init{ eid=null; }
>     : { isFirst }? id=IDENT { eid=id.getText(); 
> /*addId(eid,ENTITY_IDENT);*/ }-> ^(ENTITY_ID[]  $id)
>              |  id2=ENTITY_IDENT { 
> eid=id2.getText();$id2.setType(IDENT);} -> ^(ENTITY_IDENT[] $id2)
>              ;
>
>variable eid would be undefined when compiling the generated Java 
>code.
[...]
>I am looking for a method that could avoid this kind of problem 
>(not modify the Java code directly : ) )

Whenever you refer to a label, parameter, rule, or return value 
(something defined in ANTLR space) in a code fragment, you need to 
use $.

So using $eid will solve your problem.

(And instead of using id.getText() etc, you should be using 
$id.text.) 


From jimi at temporal-wave.com  Mon Dec  1 08:14:39 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 01 Dec 2008 08:14:39 -0800
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <20081201073059.DF69F11E9F6@www.antlr.org>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
	<20081201073059.DF69F11E9F6@www.antlr.org>
Message-ID: <1228148079.14131.69.camel@jimi>

On Mon, 2008-12-01 at 20:30 +1300, Gavin Lambert wrote:

> At 18:56 1/12/2008, virg g wrote:
> >If the command is



> Step 3: notice how your 'literal' rule doesn't mention any of the 
> other literal tokens mentioned in step 1, so it's not surprising 
> that it doesn't match them.
> 
> Step 4: realise that you can now fix it.
> 
> ...


Gavin,

You must be new here. This should read:

5: ???
6: Profit!

Jim

> 
> Step N: profit!  :)
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081201/8222ca13/attachment.html 

From parrt at cs.usfca.edu  Mon Dec  1 08:43:34 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Dec 2008 08:43:34 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <20081201071555.33BE7F055C@mail.cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
Message-ID: <E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>


On Nov 30, 2008, at 11:15 PM, Gavin Lambert wrote:

> At 09:29 1/12/2008, Terence Parr wrote:
> >not sure.  I guess i left out as it's weird.  When would you write:
> >
> >^(. ID).  It's always the root that says what kind of thing it is,
> >
> >right?
>
> This is a completely fabricated example, but your tree structure  
> might dictate that at that position you know it's either a  
> ^(ORDER1FN ID) or a ^(ORDER2FN ID) or a ^(ORDER3FN ID).  In one tree  
> grammar you care about the distinction, while in another you don't.

'.' is great to avoid a subtree or any random operand node you don't  
care about.  As a root, it can only be a node so it's pretty easy to  
give the set of valid roots if necessary.  Operands can be subtrees  
and those can be whole grammars; harder to ignore.  Remember that AST  
construction is all about identifying the ops and pseudo-ops in your  
program, then making them roots.  Why would you ever want to ingore  
what operation your looking at?

Oh, I just found one.  You want to find all ID refs...well, actually  
that is just:

id : ID ;

If you don't care about the root, just don't give it, right?

x : ^(. ID) ;

is identical to ID except it won't match ID as a root but plain ID  
would.

See my drift here?  Random root with known children == children.

> Of course you could just write ^((ORDER1FN | ORDER2FN | ORDER3FN)  
> ID), but if you know that there will never be any other  
> possibilities then it's simpler to just write ^(. ID), especially as  
> the number of variations increases.
>
>
> And then of course there's Oliver's example, where he just wanted to  
> traverse the (sub)tree regardless of structure (presumably to pretty- 
> print it or something).

If you don't care about structure, one could argue why you're using a  
grammar to do that ;)

> They might be unusual cases, admittedly, but they seem reasonable.

I'm still unconvinced I'm afraid. ;)

Ter


From sharwell at pixelminegames.com  Mon Dec  1 09:57:29 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 1 Dec 2008 11:57:29 -0600
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu><20081021070213.DA48111EB00@www.antlr.org><8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu><9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com><492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com><9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com><5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu><9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com><20081129232335.85F37F04D7@mail.cs.usfca.edu><A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu><9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com><E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu><20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E985@Bloodymary.ironwillgames.com>

Here's a fictional example of why you might want to distinguish "any
node or tree" from "any node" in a tree parser.

Input: (3)+(2)
Resulting Tree: ^(+ ^(expr 3) ^(expr 2))
Goal: pattern rewrite in a filter tree parser to remove some nodes
resulting from unnecessary parentheses.

Pattern:

remove_parens_atomicblock
  : ^(binary_op ^(expr left=.) ^(expr right=.))
    -> ^(binary_op $left $right)
  ;

Result: ^(+ 3 2)

This works as long as '.' means "any node", but may fail due to order of
operations if the parenthesized expression is not a primary expression.

On a sidenote, the reason I said ^(.) is not currently allowed in a tree
parser earlier is this:

ANTLR.g3 line 534:

tree_
	:	TREE_BEGIN^
		treeRoot ( element )+
		RPAREN!
	;

One possible resolution add a 'WILDCARD_TREE' rule in ANTLR.g3 as
follows, and add it as an alt to 'terminal'. This clears up both the
wildcard-as-root issue and the "any node"/"any node or tree" ambiguity.
It would be allowed anywhere in a tree parser except as a tree root.

WILDCARD_TREE : '^.';

This has the added advantage in the Tool's source that WILDCARD always
refers to a single element of the source stream.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
Sent: Monday, December 01, 2008 10:44 AM
To: Gavin Lambert
Cc: antlr-interest Interest
Subject: Re: [antlr-interest] wildcard in tree grammar


On Nov 30, 2008, at 11:15 PM, Gavin Lambert wrote:

> At 09:29 1/12/2008, Terence Parr wrote:
> >not sure.  I guess i left out as it's weird.  When would you write:
> >
> >^(. ID).  It's always the root that says what kind of thing it is,
> >
> >right?
>
> This is a completely fabricated example, but your tree structure  
> might dictate that at that position you know it's either a  
> ^(ORDER1FN ID) or a ^(ORDER2FN ID) or a ^(ORDER3FN ID).  In one tree  
> grammar you care about the distinction, while in another you don't.

'.' is great to avoid a subtree or any random operand node you don't  
care about.  As a root, it can only be a node so it's pretty easy to  
give the set of valid roots if necessary.  Operands can be subtrees  
and those can be whole grammars; harder to ignore.  Remember that AST  
construction is all about identifying the ops and pseudo-ops in your  
program, then making them roots.  Why would you ever want to ingore  
what operation your looking at?

Oh, I just found one.  You want to find all ID refs...well, actually  
that is just:

id : ID ;

If you don't care about the root, just don't give it, right?

x : ^(. ID) ;

is identical to ID except it won't match ID as a root but plain ID  
would.

See my drift here?  Random root with known children == children.

> Of course you could just write ^((ORDER1FN | ORDER2FN | ORDER3FN)  
> ID), but if you know that there will never be any other  
> possibilities then it's simpler to just write ^(. ID), especially as  
> the number of variations increases.
>
>
> And then of course there's Oliver's example, where he just wanted to  
> traverse the (sub)tree regardless of structure (presumably to pretty- 
> print it or something).

If you don't care about structure, one could argue why you're using a  
grammar to do that ;)

> They might be unusual cases, admittedly, but they seem reasonable.

I'm still unconvinced I'm afraid. ;)

Ter


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From oliver.zeigermann at gmail.com  Mon Dec  1 10:16:45 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon, 1 Dec 2008 19:16:45 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
Message-ID: <9da4f4520812011016o1b3f2cees1caa6ab517b9295f@mail.gmail.com>

2008/12/1 Terence Parr <parrt at cs.usfca.edu>:
>
> On Nov 30, 2008, at 11:15 PM, Gavin Lambert wrote:
>>
>> And then of course there's Oliver's example, where he just wanted to
>> traverse the (sub)tree regardless of structure (presumably to pretty-print
>> it or something).
>
> If you don't care about structure, one could argue why you're using a
> grammar to do that ;)

Maybe you care about structure, but only in certain sections of the
tree and still want to touch every single node of the tree (which
makes this different from the new cool partial tree matching in 3.2)

treee
       : ^(ID treee*)  { do something very different with $ID here and
maybe also something with the children}
       | ^(a=. treee* ) { do something meaningful with $a here }
       ;

Does that make sense?

Oliver

From parrt at cs.usfca.edu  Mon Dec  1 11:26:06 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Dec 2008 11:26:06 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520812011016o1b3f2cees1caa6ab517b9295f@mail.gmail.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
	<9da4f4520812011016o1b3f2cees1caa6ab517b9295f@mail.gmail.com>
Message-ID: <4B0EDA4F-88E5-4EDE-BA8E-949D169019E9@cs.usfca.edu>


On Dec 1, 2008, at 10:16 AM, Oliver Zeigermann wrote:

> 2008/12/1 Terence Parr <parrt at cs.usfca.edu>:
>>
>> On Nov 30, 2008, at 11:15 PM, Gavin Lambert wrote:
>>>
>>> And then of course there's Oliver's example, where he just wanted to
>>> traverse the (sub)tree regardless of structure (presumably to  
>>> pretty-print
>>> it or something).
>>
>> If you don't care about structure, one could argue why you're using a
>> grammar to do that ;)
>
> Maybe you care about structure, but only in certain sections of the
> tree and still want to touch every single node of the tree (which
> makes this different from the new cool partial tree matching in 3.2)
>
> treee
>       : ^(ID treee*)  { do something very different with $ID here and
> maybe also something with the children}
>       | ^(a=. treee* ) { do something meaningful with $a here }
>       ;
>
> Does that make sense?

It seems to me like you're saying "do x on ID or y on any other  
node".  remember that once you match a node, you can ask for child  
list or even parent.

Ter

From parrt at cs.usfca.edu  Mon Dec  1 11:37:27 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Dec 2008 11:37:27 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E985@Bloodymary.ironwillgames.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu><20081021070213.DA48111EB00@www.antlr.org><8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu><9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com><492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com><9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com><5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu><9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com><20081129232335.85F37F04D7@mail.cs.usfca.edu><A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu><9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com><E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu><20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
	<86403CA0939415448BCCB83855EFE09A64E985@Bloodymary.ironwillgames.com>
Message-ID: <024B5DE3-AD4E-4048-BA08-C8EBE6A72C45@cs.usfca.edu>


On Dec 1, 2008, at 9:57 AM, Sam Harwell wrote:

> Here's a fictional example of why you might want to distinguish "any
> node or tree" from "any node" in a tree parser.
>
> Input: (3)+(2)
> Resulting Tree: ^(+ ^(expr 3) ^(expr 2))
> Goal: pattern rewrite in a filter tree parser to remove some nodes
> resulting from unnecessary parentheses.
>
> Pattern:
>
> remove_parens_atomicblock
>  : ^(binary_op ^(expr left=.) ^(expr right=.))
>    -> ^(binary_op $left $right)
>  ;
>
> Result: ^(+ 3 2)
>
> This works as long as '.' means "any node", but may fail due to  
> order of
> operations if the parenthesized expression is not a primary  
> expression.

Yes, you must predicate the -> to ensure operator prec isn't an issue.

But you don't have a '.' in root position here.

>
>
> On a sidenote, the reason I said ^(.) is not currently allowed in a  
> tree
> parser earlier is this:
>
> ANTLR.g3 line 534:
>
> tree_
> 	:	TREE_BEGIN^
> 		treeRoot ( element )+
> 		RPAREN!
> 	;
>
> One possible resolution add a 'WILDCARD_TREE' rule in ANTLR.g3 as
> follows, and add it as an alt to 'terminal'. This clears up both the
> wildcard-as-root issue and the "any node"/"any node or tree"  
> ambiguity.
> It would be allowed anywhere in a tree parser except as a tree root.
>
> WILDCARD_TREE : '^.';

Yeah, i'll be looking into it.

Ter

From antlr at mirality.co.nz  Mon Dec  1 11:51:14 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 02 Dec 2008 08:51:14 +1300
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
Message-ID: <20081201195122.46AB511EA8A@www.antlr.org>

At 05:43 2/12/2008, Terence Parr wrote:
 >'.' is great to avoid a subtree or any random operand node
 >you don't care about.  As a root, it can only be a node so
 >it's pretty easy to give the set of valid roots if necessary.

"Easy" is a relative term, depending on how many of them there are 
:)

 >Remember that AST construction is all about identifying the
 >ops and pseudo-ops in your program, then making them roots.
 >Why would you ever want to ingore what operation your looking 
at?

That's not the only use for them.  They can be used to indicate 
types or categories as well -- and in some contexts you care, 
while in others you might not.  This is especially true when you 
have multiple tree parsers reading a single AST input, since 
different walkers might care about different things.

 >Oh, I just found one.  You want to find all ID refs...well,
 >actually that is just:
 >
 >id : ID ;
 >
 >If you don't care about the root, just don't give it, right?
 >
 >x : ^(. ID) ;
 >
 >is identical to ID except it won't match ID as a root but
 >plain ID would.

If ID on its own can match a tree of ^(FOO ID), then that's a bug.

 >If you don't care about structure, one could argue why you're 
using
 >a grammar to do that ;)

You might not care *sometimes*, in *some contexts*.  But you care 
a lot about other contexts.


From parrt at cs.usfca.edu  Mon Dec  1 14:28:44 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Dec 2008 14:28:44 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <20081201195122.46AB511EA8A@www.antlr.org>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<20081021070213.DA48111EB00@www.antlr.org>
	<8A421E28-6639-4361-BD30-D2E7D4A8C103@cs.usfca.edu>
	<9da4f4520811261214n552cf982y88ab39216eff598@mail.gmail.com>
	<492db40b.8c53f10a.380a.6d58SMTPIN_ADDED@mx.google.com>
	<9da4f4520811261245x5b8cbb1cu3a6b51338d0aca79@mail.gmail.com>
	<5D573E7D-BAB1-4FA4-849A-405071BB90D5@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
	<20081201195122.46AB511EA8A@www.antlr.org>
Message-ID: <7C03DA7B-CD3D-43F5-A1A6-ED77EFD0EE99@cs.usfca.edu>


On Dec 1, 2008, at 11:51 AM, Gavin Lambert wrote:
> If ID on its own can match a tree of ^(FOO ID), then that's a bug.

not in a tree pattern matching (filter=true) mode.

>> If you don't care about structure, one could argue why you're
> using
>> a grammar to do that ;)
>
> You might not care *sometimes*, in *some contexts*.  But you care
> a lot about other contexts.

Ok, well, I'll look at it, but I haven't seen a real example yet :)

Ter

From Philip.Moetteli at tele2.ch  Mon Dec  1 14:46:10 2008
From: Philip.Moetteli at tele2.ch (=?ISO-8859-1?Q?Philip_M=F6tteli?=)
Date: Mon, 1 Dec 2008 23:46:10 +0100
Subject: [antlr-interest] =?windows-1252?q?Sorry=2C_one_more_try=2C_now_wi?=
 =?windows-1252?q?th_more_information=85?=
Message-ID: <12500D23-6A7C-4E76-BE31-12F48495F382@tele2.ch>

Hi,


I'm a complete newbie to ANTLR and so I thought to start with the  
simple 'Expression Evaluator Tutorial'. I downloaded the most recent  
version of ANTLRworks for Mac OS X (I run the most recent version  
10.5.5), pasted the grammar into the editor, picked 'prog', entered  
'2+3*4' and pressed start. Instead of building the parse tree,  
ANTLRworks just says: "The interpreter does not run actions nor  
evaluate syntactic predicates. Use the debugger if you want to use  
these ANTLR features." Apart from the fact, that I wonder what the  
interpreter then would like to do, I can't enter anything in the  
debugger. The panes don't accept input.

Can anybody explain a newbie what he should do?


Thanks
Phil


BTW: This is the console output:

java.lang.NullPointerException
	at org.antlr.xjlib.foundation.XJUtils.concatPath(Unknown Source)
	at org.antlr.xjlib.foundation.XJUtils.concatPath(Unknown Source)
	at  
org 
.antlr 
.works.components.editor.ComponentEditorGrammar.getOutputPath(Unknown  
Source)
	at  
org 
.antlr 
.works.components.editor.ComponentEditorGrammar.getANTLRTool(Unknown  
Source)
	at  
org.antlr.works.grammar.engine.GrammarEngineImpl.getANTLRTool(Unknown  
Source)
	at  
org 
.antlr 
.works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar(Unknown  
Source)
	at  
org 
.antlr 
.works 
.grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar(Unknown  
Source)
	at  
org 
.antlr 
.works 
.grammar.antlr.ANTLRGrammarEngineImpl.createCombinedGrammar(Unknown  
Source)
	at  
org 
.antlr 
.works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars(Unknown  
Source)
	at  
org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(Unknown  
Source)
	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(Unknown  
Source)
	at org.antlr.works.interpreter.EditorInterpreter.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:613)

From parrt at cs.usfca.edu  Mon Dec  1 14:56:33 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 1 Dec 2008 14:56:33 -0800
Subject: [antlr-interest]
 =?windows-1252?q?Sorry=2C_one_more_try=2C_now_wi?=
 =?windows-1252?q?th_more_information=85?=
In-Reply-To: <12500D23-6A7C-4E76-BE31-12F48495F382@tele2.ch>
References: <12500D23-6A7C-4E76-BE31-12F48495F382@tele2.ch>
Message-ID: <77B7FD97-CD42-464F-894F-3ACCAF0B59D9@cs.usfca.edu>

Hi. that error is what happens when you do what exactly?

You must say "debug" to get the dialog up to enter info.  The debugger  
pane is for seeing what the lexer is emitting; it's not an input  
pane.  though it is confusing.

Interpreter was just warning you that it can't handle those things...   
for pure grammar (and no backtracking) you can get the interp to show  
parse tree for that input.

Ter
On Dec 1, 2008, at 2:46 PM, Philip M?tteli wrote:

> Hi,
>
>
> I'm a complete newbie to ANTLR and so I thought to start with the
> simple 'Expression Evaluator Tutorial'. I downloaded the most recent
> version of ANTLRworks for Mac OS X (I run the most recent version
> 10.5.5), pasted the grammar into the editor, picked 'prog', entered
> '2+3*4' and pressed start. Instead of building the parse tree,
> ANTLRworks just says: "The interpreter does not run actions nor
> evaluate syntactic predicates. Use the debugger if you want to use
> these ANTLR features." Apart from the fact, that I wonder what the
> interpreter then would like to do, I can't enter anything in the
> debugger. The panes don't accept input.
>
> Can anybody explain a newbie what he should do?
>
>
> Thanks
> Phil
>
>
> BTW: This is the console output:
>
> java.lang.NullPointerException
> 	at org.antlr.xjlib.foundation.XJUtils.concatPath(Unknown Source)
> 	at org.antlr.xjlib.foundation.XJUtils.concatPath(Unknown Source)
> 	at
> org
> .antlr
> .works.components.editor.ComponentEditorGrammar.getOutputPath(Unknown
> Source)
> 	at
> org
> .antlr
> .works.components.editor.ComponentEditorGrammar.getANTLRTool(Unknown
> Source)
> 	at
> org.antlr.works.grammar.engine.GrammarEngineImpl.getANTLRTool(Unknown
> Source)
> 	at
> org
> .antlr
> .works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar(Unknown
> Source)
> 	at
> org
> .antlr
> .works
> .grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar(Unknown
> Source)
> 	at
> org
> .antlr
> .works
> .grammar.antlr.ANTLRGrammarEngineImpl.createCombinedGrammar(Unknown
> Source)
> 	at
> org
> .antlr
> .works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars(Unknown
> Source)
> 	at
> org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(Unknown
> Source)
> 	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(Unknown
> Source)
> 	at org.antlr.works.interpreter.EditorInterpreter.run(Unknown Source)
> 	at java.lang.Thread.run(Thread.java:613)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From diligent.warrior at gmail.com  Mon Dec  1 16:27:58 2008
From: diligent.warrior at gmail.com (Diligent Warrior)
Date: Tue, 2 Dec 2008 00:27:58 +0000
Subject: [antlr-interest] Help converting a parser grammar to a tree grammar
Message-ID: <93572fab0812011627s402c9d7ds3e141423b210ce15@mail.gmail.com>

Hello everyone,

I'm working on a grammar for a Java-like language and I'm stuck at this one
part. I'm looking to write the tree grammar from this parser grammar:

callExpression
    :    (primary -> primary) (s=selector -> ^(CALL $callExpression $s))*
    ;

The code would look like:

nodeObject.getLeft().getValue();

And the tree would look like:

( CALL ( CALL nodeObject getLeft ) getValue )

...or in other words:

( CALL ( CALL primary selector ) selector )

Theoretically, the tree should be as deep as it needs to be.

My initial two attempts at the tree grammar were these:

callExpression
    :    primary (^(CALL callExpression selector))*
    ;

callExpression
    :    ( ^( CALL ( primary | callExpression ) selector? ) )
    ;

But after giving them some thought, they don't make sense. Am I at least on
the right track?

So my questions are:
A) Is there a way to translate my parser grammar into a tree grammar?
B) If not, Is there a better way to write my parser grammar?

Ugh, now I'm beginning to doubt my parser grammar isn't even correct.

Any thoughts?

Oh, and for the sake of completeness, here is my tree grammars for primary
and selector

primary
    :    THIS
    |    TRUE
    |    FALSE
    |    INTLIT
    |    ID
    |    ^( CREATE OBJECT ID )
    ;

selector
    :    ^( ID ( ( expression )+ )? )
    ;

As you probably can tell, the only types I have are int, boolean and
objects.

//Thanks for you time,
//DW
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/e669cca5/attachment.html 

From jimi at temporal-wave.com  Mon Dec  1 17:02:42 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 01 Dec 2008 17:02:42 -0800
Subject: [antlr-interest] Help converting a parser grammar to a tree
 grammar
In-Reply-To: <93572fab0812011627s402c9d7ds3e141423b210ce15@mail.gmail.com>
References: <93572fab0812011627s402c9d7ds3e141423b210ce15@mail.gmail.com>
Message-ID: <1228179762.14131.143.camel@jimi>

On Tue, 2008-12-02 at 00:27 +0000, Diligent Warrior wrote:

> Hello everyone,
> 
> I'm working on a grammar for a Java-like language and I'm stuck at
> this one part. I'm looking to write the tree grammar from this parser
> grammar:
> 
> callExpression
>     :    (primary -> primary) (s=selector -> ^(CALL $callExpression
> $s))*
>     ;
> 
> The code would look like:
> 
> nodeObject.getLeft().getValue();
> 
> And the tree would look like:
> 
> ( CALL ( CALL nodeObject getLeft ) getValue )
> 
> ...or in other words:
> 
> ( CALL ( CALL primary selector ) selector )
> 
> Theoretically, the tree should be as deep as it needs to be.



callExpression
  : primary
  | selector
  | ^(CALL callExpression callExpression)
  ;

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081201/e7cf98b8/attachment.html 

From antlr-list at arizona-software.ch  Mon Dec  1 20:03:35 2008
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Mon, 1 Dec 2008 20:03:35 -0800
Subject: [antlr-interest]
 =?windows-1252?q?Sorry=2C_one_more_try=2C_now_wi?=
 =?windows-1252?q?th_more_information=85?=
In-Reply-To: <12500D23-6A7C-4E76-BE31-12F48495F382@tele2.ch>
References: <12500D23-6A7C-4E76-BE31-12F48495F382@tele2.ch>
Message-ID: <F1DCD0A6-33A7-47B8-8841-4BB47B4063E2@arizona-software.ch>

There is indeed a problem in ANTLRWorks. This will be fixed for the  
next release. In the meantime, you can use the following workaround:  
save the project to the disk and it will work fine.

Regards,

Jean

On Dec 1, 2008, at 2:46 PM, Philip M?tteli wrote:

> Hi,
>
>
> I'm a complete newbie to ANTLR and so I thought to start with the
> simple 'Expression Evaluator Tutorial'. I downloaded the most recent
> version of ANTLRworks for Mac OS X (I run the most recent version
> 10.5.5), pasted the grammar into the editor, picked 'prog', entered
> '2+3*4' and pressed start. Instead of building the parse tree,
> ANTLRworks just says: "The interpreter does not run actions nor
> evaluate syntactic predicates. Use the debugger if you want to use
> these ANTLR features." Apart from the fact, that I wonder what the
> interpreter then would like to do, I can't enter anything in the
> debugger. The panes don't accept input.
>
> Can anybody explain a newbie what he should do?
>
>
> Thanks
> Phil
>
>
> BTW: This is the console output:
>
> java.lang.NullPointerException
> 	at org.antlr.xjlib.foundation.XJUtils.concatPath(Unknown Source)
> 	at org.antlr.xjlib.foundation.XJUtils.concatPath(Unknown Source)
> 	at
> org
> .antlr
> .works.components.editor.ComponentEditorGrammar.getOutputPath(Unknown
> Source)
> 	at
> org
> .antlr
> .works.components.editor.ComponentEditorGrammar.getANTLRTool(Unknown
> Source)
> 	at
> org.antlr.works.grammar.engine.GrammarEngineImpl.getANTLRTool(Unknown
> Source)
> 	at
> org
> .antlr
> .works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar(Unknown
> Source)
> 	at
> org
> .antlr
> .works
> .grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar(Unknown
> Source)
> 	at
> org
> .antlr
> .works
> .grammar.antlr.ANTLRGrammarEngineImpl.createCombinedGrammar(Unknown
> Source)
> 	at
> org
> .antlr
> .works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars(Unknown
> Source)
> 	at
> org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(Unknown
> Source)
> 	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(Unknown
> Source)
> 	at org.antlr.works.interpreter.EditorInterpreter.run(Unknown Source)
> 	at java.lang.Thread.run(Thread.java:613)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From g.r.vansickle at att.net  Mon Dec  1 20:17:46 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 1 Dec 2008 22:17:46 -0600
Subject: [antlr-interest] C runtime const correctness
Message-ID: <F55F36339AB542F2961B3250E95AE02A@DFW5RB41>

Shouldn't this:

    ANTLR3_API pANTLR3_INPUT_STREAM antlr3AsciiFileStreamNew(pANTLR3_UINT8
fileName);

Really be this:

    ANTLR3_API pANTLR3_INPUT_STREAM antlr3AsciiFileStreamNew(const
pANTLR3_UINT8 fileName);

?

-- 
Gary R. Van Sickle


From matt.jazz at laposte.net  Tue Dec  2 01:05:17 2008
From: matt.jazz at laposte.net (matt.jazz at laposte.net)
Date: Tue,  2 Dec 2008 10:05:17 +0100 (CET)
Subject: [antlr-interest] token definitions can never be matched
	because	prior tokens match the same input
Message-ID: <9562424.1461621228208717975.JavaMail.www@wwinf8204>

Thanks for your help !

It works for me but i have a more general question :

I'm building a translator, and i would like to know the steps i need to follow. I'have a lots of
context rules to implement, so i think i must use a tree grammar, but i don't no if i should
create a parser grammar before.

 Thanks a lot

Matt



> Message du 29/11/08 00:25
> De : "Randall R Schulz"
> A : antlr-interest at antlr.org
> Copie ? :
> Objet : Re: [antlr-interest] token definitions can never be matched becauseprior tokens match the same input
>
>
> On Friday 28 November 2008 15:15, Randall R Schulz wrote:
> > ...
> >
> > The next less will be to understand that the scanner / lexer fully
> > processes the input (breaking it into a sequence of tokens) and
> > completes its work before the parser begins executing.
>
> D'Oh!
>
> Make that "The next _lesson_ will be ..."
>
>
> RRS
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> 

 Cr?ez votre adresse ?lectronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/1895f9c0/attachment.html 

From mail at martin-probst.com  Tue Dec  2 01:05:39 2008
From: mail at martin-probst.com (Martin Probst)
Date: Tue, 2 Dec 2008 10:05:39 +0100
Subject: [antlr-interest] Suggestion for List size in BaseTree
Message-ID: <6dca08520812020105m1150ba8fpa0844d575ba1c90a@mail.gmail.com>

Hi all,

I have a suggestion for the java.util.List children in
org.antlr.runtime.tree.BaseTree.

It appears to be constructed with the default ArrayList constructor,
which will give you an empty list with space for 10 elements.

In my personal experience, for 99% of my language's statements this is
complete overkill: most have either two or three children, very few
ones have more. Constructing the tree with smaller array sizes might
have a noticeable impact on memory usage (and thus performance) of the
system.

A CommonTree currently has 3 int fields, plus a reference to parent, a
reference to token, and the reference to the children array, which in
turn has a reference to the array, a size and a modcount field. So for
each AST node we have 4x reference size plus 5x int size, e.g., on a
64 bit system about 52 bytes, plus the object and array overhead of
the JVM (something like 32 bytes?). So that's 84 bytes not counting
the contents of the array. This calculation is entirely done on a
rumours and phantasies basis, but I think it should be roughly giving
the right direction.

Now if the array is size == 3 by default, we have 24 bytes addition,
if it's size 10 by default, we have 80 bytes, giving 108 bytes against
168 bytes. If you're AST is entirely 3 children or less, you'll save
~60% of memory (not counting token objects).

Of course this is a difficult tradeoff, and it totally depends on the
application in case. Functional languages will probably get much
larger savings than procedural, where you commonly have many
statements as children of a function body. Still, all your typical
expressions (arithmetic, boolean, ...) will usually have two children,
most function calls have less than ten parameters, and so forth. Also,
the "global" performance characteristics depend on how expensive it is
to increase the array size (no clue about that), relative to the cost
of the memory.

So maybe there should be some way to change BaseTree's behaviour here?
Or a reasonable default that's significantly lower?

Martin

From oliver.zeigermann at gmail.com  Tue Dec  2 02:58:25 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 2 Dec 2008 11:58:25 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <4B0EDA4F-88E5-4EDE-BA8E-949D169019E9@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
	<9da4f4520812011016o1b3f2cees1caa6ab517b9295f@mail.gmail.com>
	<4B0EDA4F-88E5-4EDE-BA8E-949D169019E9@cs.usfca.edu>
Message-ID: <9da4f4520812020258m6feb4e67kba50b5acb4e49a84@mail.gmail.com>

2008/12/1 Terence Parr <parrt at cs.usfca.edu>:
>
> On Dec 1, 2008, at 10:16 AM, Oliver Zeigermann wrote:
>
>> 2008/12/1 Terence Parr <parrt at cs.usfca.edu>:
>>>
>>> On Nov 30, 2008, at 11:15 PM, Gavin Lambert wrote:
>>>>
>>>> And then of course there's Oliver's example, where he just wanted to
>>>> traverse the (sub)tree regardless of structure (presumably to
>>>> pretty-print
>>>> it or something).
>>>
>>> If you don't care about structure, one could argue why you're using a
>>> grammar to do that ;)
>>
>> Maybe you care about structure, but only in certain sections of the
>> tree and still want to touch every single node of the tree (which
>> makes this different from the new cool partial tree matching in 3.2)
>>
>> treee
>>      : ^(ID treee*)  { do something very different with $ID here and
>> maybe also something with the children}
>>      | ^(a=. treee* ) { do something meaningful with $a here }
>>      ;
>>
>> Does that make sense?
>
> It seems to me like you're saying "do x on ID or y on any other node".
>  remember that once you match a node, you can ask for child list or even
> parent.

Here is what I want to do:

>>Traverse a *full tree* (i.e. from tree root down to each and every leaf), having access to each and every single node and handle certain nodes differently.<<

How would you do that? My grammar above would do the job (I know as it
used to work in ANTLR 2).

Oliver

From lars.vonwedel at bayertechnology.com  Tue Dec  2 03:07:06 2008
From: lars.vonwedel at bayertechnology.com (lars.vonwedel at bayertechnology.com)
Date: Tue, 2 Dec 2008 12:07:06 +0100
Subject: [antlr-interest] Using an external source for token definitions
Message-ID: <OFAC0E2F6F.CF7E3389-ONC1257513.003A1573-C1257513.003D133D@bayer.de>

Hello,

I have successfully implemented an ANTLR grammar for a small part of the 
input language for a tool I am about to reengineer. However, I am a bit 
unsure how to scale my current state to the full input language which has 
several hundred keywords. 

Luckily, all keywords are already available in a machine readable form and 
it would be easy to generate a .tokens file from that source.  However, 
that additional pre-build step is somehow annoying me. Further, I would 
need to generate rules of the form

        statementKeyword : Keyword1 | Keyword2 | ... | KeywordN;

I would like to have (or implement) a rule of the form

        statementKeyword : Keyword1 .. KeywordN;

as it is possible in the lexer, but it seems impossible in the parser. 
This would avoid an extra generation step for the grammar.

Can I subclass the parser and override the statementKeyword method to 
perform a lookup in my existing keywords list ?

Or are there any better ideas ?

Best Regards
Lars von Wedel
_________________________________________

Bayer Technology Services GmbH
BTS-PT-PD-ES
Leverkusen, E 41
Phone: +49 214 30 56456
Fax: +49 214 30 62677
E-mail: lars.vonwedel at bayertechnology.com
Web: www.bayertechnology.com

Gesch?ftsf?hrer: Achim Noack
Aufsichtsratsvorsitzender: Dr. Wolfgang Plischke
Sitz der Gesellschaft: Leverkusen   |   Eintragung: Amtsgericht K?ln, HRB 
49896
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/fcde9b27/attachment.html 

From chainone at gmail.com  Tue Dec  2 05:52:11 2008
From: chainone at gmail.com (chain one)
Date: Tue, 2 Dec 2008 21:52:11 +0800
Subject: [antlr-interest]  How the get the token value of 'ONEOF'
Message-ID: <5a92ffb60812020552i3f918306r970751580788a80d@mail.gmail.com>

Hello:
I have a question about the token value, the question is :

In the generated Java file, the token values are defined in this way:
 public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>","ENTITY_VAR_IDENT",
"RULE_ID","INTERVAL_ITEM","'ONEOF'"
    };
    public static final int ENTITY_VAR_IDENT=4;
    public static final int RULE_ID=5;
    public static final int INTERVAL_ITEM=6;
    public static final int T__7=7;



if I want to identify a token , I can type this:

Grammar:
{ input.LA(1)== ENTITY_VAR_IDENT}?

Generated Code:
int LA1_0 = input.LA(1);
if ( (LA1_0==ENTITY_VAR_IDENT) )
{
   alt1=1;
}


that is OK

But what if I want to check if the token is 'ONEOF'?
How could I know T__7 stands for 'ONEOF' and its value is 7?

Thanks for your help!
Best Regards,
chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/d37d693e/attachment.html 

From jared.bunting at peachjean.com  Tue Dec  2 05:55:55 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Tue, 02 Dec 2008 07:55:55 -0600
Subject: [antlr-interest] How the get the token value of 'ONEOF'
In-Reply-To: <5a92ffb60812020552i3f918306r970751580788a80d@mail.gmail.com>
References: <5a92ffb60812020552i3f918306r970751580788a80d@mail.gmail.com>
Message-ID: <49353E6B.4010007@peachjean.com>

I can't see your grammar, but I believe that the "T__N" tokens are 
generated when you define lexical tokens directly in your parser rules.  
So basically, define it explicitly in the tokens section rather than in 
a parser rule.  Then, it will have a name. 

-Jared

chain one wrote:
> Hello:
> I have a question about the token value, the question is :
>  
> In the generated Java file, the token values are defined in this way:
>
>  public static final String[] tokenNames = new String[] {
>         "<invalid>", "<EOR>", "<DOWN>", "<UP>","ENTITY_VAR_IDENT", 
> "RULE_ID","INTERVAL_ITEM","'ONEOF'"
>     };
>     public static final int ENTITY_VAR_IDENT=4;
>     public static final int RULE_ID=5;
>     public static final int INTERVAL_ITEM=6;
>     public static final int T__7=7;
>
>
>
> if I want to identify a token , I can type this:
>
> Grammar:
> { input.LA(1)== ENTITY_VAR_IDENT}?
>
> Generated Code:
> int LA1_0 = input.LA(1);
> if ( (LA1_0==ENTITY_VAR_IDENT) )
> {
>    alt1=1;
> }
>
>
> that is OK
>
> But what if I want to check if the token is 'ONEOF'?
> How could I know T__7 stands for 'ONEOF' and its value is 7?
>
> Thanks for your help!
> Best Regards,
> chainone
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From chainone at gmail.com  Tue Dec  2 06:07:18 2008
From: chainone at gmail.com (chain one)
Date: Tue, 2 Dec 2008 22:07:18 +0800
Subject: [antlr-interest] How the get the token value of 'ONEOF'
In-Reply-To: <49353E6B.4010007@peachjean.com>
References: <5a92ffb60812020552i3f918306r970751580788a80d@mail.gmail.com>
	<49353E6B.4010007@peachjean.com>
Message-ID: <5a92ffb60812020607h4f8b8e79wc80316491abe6735@mail.gmail.com>

Hi Jared Bunting:

Thanks for your quick response.
Your suggestion must work. But there are so many tokens just like 'ONEOF' in
my grammar right now, to explicitly  define all of this kind of tokens is
quiet a bit boring.
I am wondering if there is another way to do this? If not, I will define
them : )


2008/12/2 Jared Bunting <jared.bunting at peachjean.com>

> I can't see your grammar, but I believe that the "T__N" tokens are
> generated when you define lexical tokens directly in your parser rules.  So
> basically, define it explicitly in the tokens section rather than in a
> parser rule.  Then, it will have a name.
> -Jared
>
> chain one wrote:
>
>> Hello:
>> I have a question about the token value, the question is :
>>  In the generated Java file, the token values are defined in this way:
>>
>>  public static final String[] tokenNames = new String[] {
>>        "<invalid>", "<EOR>", "<DOWN>", "<UP>","ENTITY_VAR_IDENT",
>> "RULE_ID","INTERVAL_ITEM","'ONEOF'"
>>    };
>>    public static final int ENTITY_VAR_IDENT=4;
>>    public static final int RULE_ID=5;
>>    public static final int INTERVAL_ITEM=6;
>>    public static final int T__7=7;
>>
>>
>>
>> if I want to identify a token , I can type this:
>>
>> Grammar:
>> { input.LA(1)== ENTITY_VAR_IDENT}?
>>
>> Generated Code:
>> int LA1_0 = input.LA(1);
>> if ( (LA1_0==ENTITY_VAR_IDENT) )
>> {
>>   alt1=1;
>> }
>>
>>
>> that is OK
>>
>> But what if I want to check if the token is 'ONEOF'?
>> How could I know T__7 stands for 'ONEOF' and its value is 7?
>>
>> Thanks for your help!
>> Best Regards,
>> chainone
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/da2233eb/attachment.html 

From jared.bunting at peachjean.com  Tue Dec  2 06:50:58 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Tue, 02 Dec 2008 08:50:58 -0600
Subject: [antlr-interest] How the get the token value of 'ONEOF'
In-Reply-To: <5a92ffb60812020607h4f8b8e79wc80316491abe6735@mail.gmail.com>
References: <5a92ffb60812020552i3f918306r970751580788a80d@mail.gmail.com>	
	<49353E6B.4010007@peachjean.com>
	<5a92ffb60812020607h4f8b8e79wc80316491abe6735@mail.gmail.com>
Message-ID: <49354B52.3070200@peachjean.com>

Not that I'm aware of.  However, I have found that having all of my 
tokens in one place has been very helpful for debugging and refactoring, 
as well as simply presenting a clear picture of the grammar.

-Jared

chain one wrote:
> Hi Jared Bunting:
>
> Thanks for your quick response.
> Your suggestion must work. But there are so many tokens just like 
> 'ONEOF' in my grammar right now, to explicitly  define all of this 
> kind of tokens is quiet a bit boring.
> I am wondering if there is another way to do this? If not, I will 
> define them : )
>  
>
> 2008/12/2 Jared Bunting <jared.bunting at peachjean.com 
> <mailto:jared.bunting at peachjean.com>>
>
>     I can't see your grammar, but I believe that the "T__N" tokens are
>     generated when you define lexical tokens directly in your parser
>     rules.  So basically, define it explicitly in the tokens section
>     rather than in a parser rule.  Then, it will have a name.
>     -Jared
>
>     chain one wrote:
>
>         Hello:
>         I have a question about the token value, the question is :
>          In the generated Java file, the token values are defined in
>         this way:
>
>          public static final String[] tokenNames = new String[] {
>                "<invalid>", "<EOR>", "<DOWN>",
>         "<UP>","ENTITY_VAR_IDENT", "RULE_ID","INTERVAL_ITEM","'ONEOF'"
>            };
>            public static final int ENTITY_VAR_IDENT=4;
>            public static final int RULE_ID=5;
>            public static final int INTERVAL_ITEM=6;
>            public static final int T__7=7;
>
>
>
>         if I want to identify a token , I can type this:
>
>         Grammar:
>         { input.LA(1)== ENTITY_VAR_IDENT}?
>
>         Generated Code:
>         int LA1_0 = input.LA(1);
>         if ( (LA1_0==ENTITY_VAR_IDENT) )
>         {
>           alt1=1;
>         }
>
>
>         that is OK
>
>         But what if I want to check if the token is 'ONEOF'?
>         How could I know T__7 stands for 'ONEOF' and its value is 7?
>
>         Thanks for your help!
>         Best Regards,
>         chainone
>         ------------------------------------------------------------------------
>
>
>         List: http://www.antlr.org/mailman/listinfo/antlr-interest
>         Unsubscribe:
>         http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>          
>
>

From lgcraymer at yahoo.com  Tue Dec  2 07:31:22 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 2 Dec 2008 07:31:22 -0800 (PST)
Subject: [antlr-interest] Suggestion for List size in BaseTree
References: <6dca08520812020105m1150ba8fpa0844d575ba1c90a@mail.gmail.com>
Message-ID: <191167.32875.qm@web55906.mail.re3.yahoo.com>

Memory allocators do not tend to allocate exact sizes; they allocate in blocks and pick the nearest block size to what was requested.  Java is a memory hog, and I expect that blocks are allocated in 128 or 256-byte increments--if not larger--which would mean that your suggested change would have no impact on actual allocation sizes.

--Loring



----- Original Message ----
> From: Martin Probst <mail at martin-probst.com>
> To: antlr-interest at antlr.org
> Sent: Tuesday, December 2, 2008 1:05:39 AM
> Subject: [antlr-interest] Suggestion for List size in BaseTree
> 
> Hi all,
> 
> I have a suggestion for the java.util.List children in
> org.antlr.runtime.tree.BaseTree.
> 
> It appears to be constructed with the default ArrayList constructor,
> which will give you an empty list with space for 10 elements.
> 
> In my personal experience, for 99% of my language's statements this is
> complete overkill: most have either two or three children, very few
> ones have more. Constructing the tree with smaller array sizes might
> have a noticeable impact on memory usage (and thus performance) of the
> system.
> 
> A CommonTree currently has 3 int fields, plus a reference to parent, a
> reference to token, and the reference to the children array, which in
> turn has a reference to the array, a size and a modcount field. So for
> each AST node we have 4x reference size plus 5x int size, e.g., on a
> 64 bit system about 52 bytes, plus the object and array overhead of
> the JVM (something like 32 bytes?). So that's 84 bytes not counting
> the contents of the array. This calculation is entirely done on a
> rumours and phantasies basis, but I think it should be roughly giving
> the right direction.
> 
> Now if the array is size == 3 by default, we have 24 bytes addition,
> if it's size 10 by default, we have 80 bytes, giving 108 bytes against
> 168 bytes. If you're AST is entirely 3 children or less, you'll save
> ~60% of memory (not counting token objects).
> 
> Of course this is a difficult tradeoff, and it totally depends on the
> application in case. Functional languages will probably get much
> larger savings than procedural, where you commonly have many
> statements as children of a function body. Still, all your typical
> expressions (arithmetic, boolean, ...) will usually have two children,
> most function calls have less than ten parameters, and so forth. Also,
> the "global" performance characteristics depend on how expensive it is
> to increase the array size (no clue about that), relative to the cost
> of the memory.
> 
> So maybe there should be some way to change BaseTree's behaviour here?
> Or a reasonable default that's significantly lower?
> 
> Martin
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From jimi at temporal-wave.com  Tue Dec  2 09:38:28 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 02 Dec 2008 09:38:28 -0800
Subject: [antlr-interest] C runtime const correctness
In-Reply-To: <F55F36339AB542F2961B3250E95AE02A@DFW5RB41>
References: <F55F36339AB542F2961B3250E95AE02A@DFW5RB41>
Message-ID: <1228239508.14131.160.camel@jimi>

On Mon, 2008-12-01 at 22:17 -0600, Gary R. Van Sickle wrote:

> Shouldn't this:
> 
>     ANTLR3_API pANTLR3_INPUT_STREAM antlr3AsciiFileStreamNew(pANTLR3_UINT8
> fileName);
> 
> Really be this:
> 
>     ANTLR3_API pANTLR3_INPUT_STREAM antlr3AsciiFileStreamNew(const
> pANTLR3_UINT8 fileName);
> 
> ?
> 

Not all C compilers support that as it is , though I suspect that for
other reasons, a C compiler that did not probably would not compile the
runtime anyway. So strictly speaking yes, but I would not spend too much
time worrying about this :-)

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/0c3ab453/attachment.html 

From jimi at temporal-wave.com  Tue Dec  2 09:51:01 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 02 Dec 2008 09:51:01 -0800
Subject: [antlr-interest] Using an external source for token definitions
In-Reply-To: <OFAC0E2F6F.CF7E3389-ONC1257513.003A1573-C1257513.003D133D@bayer.de>
References: <OFAC0E2F6F.CF7E3389-ONC1257513.003A1573-C1257513.003D133D@bayer.de>
Message-ID: <1228240261.14131.168.camel@jimi>

On Tue, 2008-12-02 at 12:07 +0100, lars.vonwedel at bayertechnology.com
wrote:

> 
> Hello, 
> 
> I have successfully implemented an ANTLR grammar for a small part of
> the input language for a tool I am about to reengineer. However, I am
> a bit unsure how to scale my current state to the full input language
> which has several hundred keywords. 
> 
> Luckily, all keywords are already available in a machine readable form
> and it would be easy to generate a .tokens file from that source. 


Why don't you just generate the lexer rules and the statementKeyword
rule instead of the .tokens file? Assuming that you are not changing the
language every week, then it is a one off operation and far simpler than
trying to override the generated code (which you will then have to mess
with every time ANTLR changes). You can then import the generated lexer
and parser rules.


> Can I subclass the parser and override the statementKeyword method to
> perform a lookup in my existing keywords list ? 
> 

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/da1c1497/attachment.html 

From jimi at temporal-wave.com  Tue Dec  2 09:53:20 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 02 Dec 2008 09:53:20 -0800
Subject: [antlr-interest] How the get the token value of 'ONEOF'
In-Reply-To: <5a92ffb60812020607h4f8b8e79wc80316491abe6735@mail.gmail.com>
References: <5a92ffb60812020552i3f918306r970751580788a80d@mail.gmail.com>
	<49353E6B.4010007@peachjean.com>
	<5a92ffb60812020607h4f8b8e79wc80316491abe6735@mail.gmail.com>
Message-ID: <1228240400.14131.169.camel@jimi>

On Tue, 2008-12-02 at 22:07 +0800, chain one wrote:
> Hi Jared Bunting:
> 
> 
> Thanks for your quick response.
> Your suggestion must work. But there are so many tokens just like
> 'ONEOF' in my grammar right now, to explicitly  define all of this
> kind of tokens is quiet a bit boring.
> I am wondering if there is another way to do this? If not, I will
> define them : )


AntlrWorks will convert parser literals into lexer rules for you IIRC.

Jim


> 
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/19be57f0/attachment.html 

From parrt at cs.usfca.edu  Tue Dec  2 10:49:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 2 Dec 2008 10:49:24 -0800
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <9da4f4520812020258m6feb4e67kba50b5acb4e49a84@mail.gmail.com>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<9da4f4520811291258pa49b883qc082ba165259c66c@mail.gmail.com>
	<20081129232335.85F37F04D7@mail.cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
	<9da4f4520812011016o1b3f2cees1caa6ab517b9295f@mail.gmail.com>
	<4B0EDA4F-88E5-4EDE-BA8E-949D169019E9@cs.usfca.edu>
	<9da4f4520812020258m6feb4e67kba50b5acb4e49a84@mail.gmail.com>
Message-ID: <D380C08B-CAD9-4518-BA6B-7041E91A393D@cs.usfca.edu>


On Dec 2, 2008, at 2:58 AM, Oliver Zeigermann wrote:
> Here is what I want to do:
>
>>> Traverse a *full tree* (i.e. from tree root down to each and every  
>>> leaf), having access to each and every single node and handle  
>>> certain nodes differently.<<
>
> How would you do that? My grammar above would do the job (I know as it
> used to work in ANTLR 2).

You are looking at the tree as a node stream, which is fine. A simple  
tree visitor does that. A grammar specify structure; don't use a  
grammar to serialize a tree. The new tree pattern matching is what you  
want. Just list all of the special nodes and given action or a  
rewrite. Will that work for you?

Ter

From Ernest.Pasour at sas.com  Tue Dec  2 11:52:47 2008
From: Ernest.Pasour at sas.com (Ernest Pasour)
Date: Tue, 2 Dec 2008 14:52:47 -0500
Subject: [antlr-interest] running a second lexer on unbounded input
Message-ID: <15412A37E8C9574393B24ADD991FAA760A78F9A335@MERCMBX14.na.sas.com>

I have been working with a grammar for ActionScript, which is a rather freeform language.  One expression type that is allowed in the source code is raw xml.  For instance, the following code is legal:

var x:XML=<a>
   </a>;

Or

//note the lack of semicolon
var x:XML=<a>
   </a>
var i:int;

What is the best Antlr strategy for running a second lexer ?  I'm not an Antlr expert, but I think I want a second lexer that will process the same input stream that the main lexer started with (as opposed to having to hand-code an XML lexer to consume text inside an action or creating a separate input stream from the rest of the input document).   Will a sub-lexer work if the input has "extra" input on the end?  Is there a standard strategy for this type of problem in Antlr?

Thanks,
Ernest



From antlr at mirality.co.nz  Tue Dec  2 12:15:38 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 03 Dec 2008 09:15:38 +1300
Subject: [antlr-interest] running a second lexer on unbounded input
In-Reply-To: <15412A37E8C9574393B24ADD991FAA760A78F9A335@MERCMBX14.na.sa s.com>
References: <15412A37E8C9574393B24ADD991FAA760A78F9A335@MERCMBX14.na.sas.com>
Message-ID: <20081202201725.DF08211EB66@www.antlr.org>

At 08:52 3/12/2008, Ernest Pasour wrote:
 >I have been working with a grammar for ActionScript, which is a
 >rather freeform language.  One expression type that is allowed 
in
 >the source code is raw xml.  For instance, the following code is 

 >legal:
 >
 >var x:XML=<a>
 >   </a>;

If you can detect the use of XML purely at the lexer level, then 
you can use a lexer "island grammar" -- see the ANTLR example 
grammars for more info.

If you can't detect it until it reaches the parser, then things 
get a lot more complicated, but have a look here:
   <<http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control>http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control>


From oliver.zeigermann at gmail.com  Tue Dec  2 12:54:38 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 2 Dec 2008 21:54:38 +0100
Subject: [antlr-interest] wildcard in tree grammar
In-Reply-To: <D380C08B-CAD9-4518-BA6B-7041E91A393D@cs.usfca.edu>
References: <59B5D09B-0C80-4F82-8ED3-91B02962AF10@cs.usfca.edu>
	<A6A4613B-7F0A-4ACA-BCA3-8BE3E1D74D17@cs.usfca.edu>
	<9da4f4520811300155y3bffeee3y968a86c6a7d88fc1@mail.gmail.com>
	<E35AD492-7D3F-4430-A3A5-163DFC9B3ECC@cs.usfca.edu>
	<20081201071555.33BE7F055C@mail.cs.usfca.edu>
	<E3DE1227-AFE3-4E00-9FD9-C7459C6E82A6@cs.usfca.edu>
	<9da4f4520812011016o1b3f2cees1caa6ab517b9295f@mail.gmail.com>
	<4B0EDA4F-88E5-4EDE-BA8E-949D169019E9@cs.usfca.edu>
	<9da4f4520812020258m6feb4e67kba50b5acb4e49a84@mail.gmail.com>
	<D380C08B-CAD9-4518-BA6B-7041E91A393D@cs.usfca.edu>
Message-ID: <9da4f4520812021254g6a5b08ddlb7822f9972701388@mail.gmail.com>

2008/12/2 Terence Parr <parrt at cs.usfca.edu>:
>
> On Dec 2, 2008, at 2:58 AM, Oliver Zeigermann wrote:
>>
>> Here is what I want to do:
>>
>>>> Traverse a *full tree* (i.e. from tree root down to each and every
>>>> leaf), having access to each and every single node and handle certain nodes
>>>> differently.<<
>>
>> How would you do that? My grammar above would do the job (I know as it
>> used to work in ANTLR 2).
>
> You are looking at the tree as a node stream, which is fine. A simple tree
> visitor does that. A grammar specify structure; don't use a grammar to
> serialize a tree. The new tree pattern matching is what you want. Just list
> all of the special nodes and given action or a rewrite. Will that work for
> you?

It will work and it does work with the new tree pattern matching. My
problem is already solved.

But more generally: Why not using a grammar to serialize a tree (given
there are some structure sensitive exceptions?).

Is it really that hard to implement that root wildcard? Maybe just for
the sake of completeness?

Anyway, I won't bother any more.

Oliver

From jimi at temporal-wave.com  Tue Dec  2 13:49:20 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 02 Dec 2008 13:49:20 -0800
Subject: [antlr-interest] running a second lexer on unbounded input
In-Reply-To: <15412A37E8C9574393B24ADD991FAA760A78F9A335@MERCMBX14.na.sas.com>
References: <15412A37E8C9574393B24ADD991FAA760A78F9A335@MERCMBX14.na.sas.com>
Message-ID: <1228254560.14131.249.camel@jimi>

On Tue, 2008-12-02 at 14:52 -0500, Ernest Pasour wrote:

> I have been working with a grammar for ActionScript, which is a rather freeform language.  One expression type that is allowed in the source code is raw xml.  For instance, the following code is legal:
> 
> var x:XML=<a>
>    </a>;
> 
> Or
> 
> //note the lack of semicolon
> var x:XML=<a>
>    </a>
> var i:int;
> 
> What is the best Antlr strategy for running a second lexer ?  I'm not an Antlr expert, but I think I want a second lexer that will process the same input stream that the main lexer started with (as opposed to having to hand-code an XML lexer to consume text inside an action or creating a separate input stream from the rest of the input document).   Will a sub-lexer work if the input has "extra" input on the end?  Is there a standard strategy for this type of problem in Antlr?


A second lexer is the best strategy. I used this approach for VB.Net for
instance. Essentially the lexer does all the work of finding the end of
the XML string and returns XML as a token, then you hand off XML parsing
to something else. Just be careful about encoding error detection
strategies into the lexer rules or error recovery is tough. Getting the
trigger points for the second lexer is also a little tricky as you need
to do it with minimal context. But as XML can only follow certain
things, such as '=', then =< is a trigger point and so on.

Jim


> 
> Thanks,
> Ernest
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081202/c2ce9c6b/attachment.html 

From g.r.vansickle at att.net  Tue Dec  2 19:38:22 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Tue, 2 Dec 2008 21:38:22 -0600
Subject: [antlr-interest] C runtime const correctness
In-Reply-To: <1228239508.14131.160.camel@jimi>
References: <F55F36339AB542F2961B3250E95AE02A@DFW5RB41>
	<1228239508.14131.160.camel@jimi>
Message-ID: <50847BF28CE0494BA59B9543E316C8FB@DFW5RB41>

> From: Jim Idle
> 
> On Mon, 2008-12-01 at 22:17 -0600, Gary R. Van Sickle wrote: 
> 
> 	
> 	Shouldn't this:
> 	
> 	    ANTLR3_API pANTLR3_INPUT_STREAM 
> antlr3AsciiFileStreamNew(pANTLR3_UINT8
> 	fileName);
> 	
> 	Really be this:
> 	
> 	    ANTLR3_API pANTLR3_INPUT_STREAM 
> antlr3AsciiFileStreamNew(const
> 	pANTLR3_UINT8 fileName);
> 	
> 	?
> 	
> 
> Not all C compilers support that as it is , though I suspect 
> that for other reasons, a C compiler that did not probably 
> would not compile the runtime anyway.

*Now* do you believe me when I say it's not really the 21st century? ;-)

I'm not quite sure what you mean though.  It sounds like you're saying these
olde-tyme compilers can't even handle that without the constification of the
pointer.  If that's true, well, what's another mouthful of water when you're
already drowned?

But I suspect you're really talking about compilers not supporting const.
Well, yeah, back in the Cretaceous they didn't, but:

1.  That's what "#if IM_A_CRUSTY_OLD_COMPILER/#define const/#endif" was
invented for.
2.  You're already using const on lines 428 and 434 of the same header.

> So strictly speaking 
> yes, but I would not spend too much time worrying about this :-)
> 

Granted, such time would be better spent on getting my kickin'-it-oldschool
autotools+script-fu installer and command-line-helper contributed ;-), but
const-non-correctness forces me to worry about it, because now not only do I
have to do this in my C++ program (which is bad enough, but that's
Stroustrups' fault):

	input = antlr3AsciiFileStreamNew(input_files[i].c_str()); //
input_files is a vector of strings.

...but I have to cast away string::c_str()'s const-ness, thus:

	input =
antlr3AsciiFileStreamNew((pANTLR3_UINT8)(input_files[i].c_str()));

...which I think we can all agree is quite unbecoming a 20th century
computer language.

So anywhoo, please take it under advisement the next time you're in there.

Now, how the heck do I contribute this awesome autotools/script action I got
going on here?  Lessee... "ANTLR contributors certificate of origin"...?
Snailmail...?  "Fax"...?  Do fax machines even exist anymore?  Grumble, I
was sort of hoping the whole BSD license thing would have covered all the
necessary legalities :-/.

> Jim 
> 

-- 
Gary R. Van Sickle
 


From 06virg at gmail.com  Tue Dec  2 21:28:56 2008
From: 06virg at gmail.com (virg g)
Date: Wed, 3 Dec 2008 10:58:56 +0530
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <493392b2.060bca0a.734f.ffffe9b2SMTPIN_ADDED@mx.google.com>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
	<493392b2.060bca0a.734f.ffffe9b2SMTPIN_ADDED@mx.google.com>
Message-ID: <3df0db9f0812022128v738bd5adpdce0395c9047a3@mail.gmail.com>

On Mon, Dec 1, 2008 at 1:00 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 18:56 1/12/2008, virg g wrote:
>
>> If the command is
>> TESTCMD CNT=2 VAL=TYPE:CNT
>>
>> It returs error "EarlyExitException" , if i change lexer rules i get
>> Mismatchtokenexception. But command is never successful. I have figured out
>> that If the literal contains any of these keywords CNT, VAL, TYPE, RTEST
>> parsing fails, that means it igonres these tokens while parsing by parser
>> eventhough these tokens(eg CNT) is/are created by Lexer.
>> How can i resolve this kind of problems. I cannot avoid having these
>> tokens in my command as the literal can be any of form. Really i am stuck
>> here.
>>
>
> Step 1: realise that using quoted literals in parser rules results in
> automatic creation of corresponding lexer rules with a funny name.  It's
> often clearer if you try to avoid doing this.


ok. Is there anyway i can mention the commands and its paramters without
mentioning them in the quotes?


>
> Step 2: realise that in ANTLR, the lexer runs to completion up front and
> outside of parser control.  So parser context has no influence on how things
> get tokenised.
>
> Step 3: notice how your 'literal' rule doesn't mention any of the other
> literal tokens mentioned in step 1, so it's not surprising that it doesn't
> match them.


The literal rule is combination of "OR" of Number, ALPHA and STRING. So for
the command " TESTCMD CNT=2 VAL=TYPE:CNT" where for VAL  paramters CNT will
match ALPHA lexer rule right? as it works if it is "TEST". Otherwise i have
to add expilcitely all the quoted values to "literal" rule like this. sorry
if understanding is wrong.

literal    : (NUMBER|ALPHA|STRING |TESTCMD|'CNT'|'VAL'|'TYPE')



> Step 4: realise that you can now fix it.
>
> ...
>
> Step N: profit!  :)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/f8380a03/attachment.html 

From antlr at mirality.co.nz  Tue Dec  2 22:43:13 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 03 Dec 2008 19:43:13 +1300
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <3df0db9f0812022128v738bd5adpdce0395c9047a3@mail.gmail.com>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
	<493392b2.060bca0a.734f.ffffe9b2SMTPIN_ADDED@mx.google.com>
	<3df0db9f0812022128v738bd5adpdce0395c9047a3@mail.gmail.com>
Message-ID: <20081203064329.DB26811EB3A@www.antlr.org>

At 18:28 3/12/2008, virg g wrote:
>ok. Is there anyway i can mention the commands and its paramters 
>without mentioning them in the quotes?

Yes -- either declare a named token for it instead (as you did for 
TESTCMD) or define an explicit lexer rule:

   CMD : 'CMD';

Then you can refer to it as CMD in all the parser rules instead of 
'CMD', and it'll have a nicer name in the generated code to boot.

Eliminating quoted constants from parser rules like this will also 
let you group all of your lexer rules together in one place, 
making it easier to spot surprises and harder to forget that ANTLR 
is not a scannerless parser.

>The literal rule is combination of "OR" of Number, ALPHA and 
>STRING. So for the command " TESTCMD CNT=2 VAL=TYPE:CNT" where 
>for VAL  paramters CNT will match ALPHA lexer rule right? as it 
>works if it is "TEST". Otherwise i have to add expilcitely all 
>the quoted values to "literal" rule like this. sorry if 
>understanding is wrong.
>
>literal    : (NUMBER|ALPHA|STRING |TESTCMD|'CNT'|'VAL'|'TYPE')

Nope, that's exactly right (that you do have to explicitly mention 
them, I mean).  As each of those are unique token types, if you 
want 'literal' to match all of them then you have to actually 
mention all of them.

Despite the string "CNT" being *compatible* with the rule ALPHA, 
the simple fact is that when the lexer ran it didn't generate an 
ALPHA, it generated a CNT (or a T14, or whatever).  The parser 
doesn't know that this is acceptable where an ALPHA is unless you 
tell it.



From chainone at gmail.com  Tue Dec  2 22:48:23 2008
From: chainone at gmail.com (chain one)
Date: Wed, 3 Dec 2008 14:48:23 +0800
Subject: [antlr-interest] How to translate this V2 Lexer rule to V3 Lexer
	rule?
Message-ID: <5a92ffb60812022248q782786e7mf5a3b7008b7b4eee@mail.gmail.com>

The V2 Lexer rule is:
IDENT

: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
{
 if (!parser.isFirst) $setType(globalSearchId($getText()));
}
;


I searched in the ANTLR V3 book but failed to find the way to get the Lexer
rule's Text and Type directly from its alternatives.

Anyone who knows , could you please drop me an email?
Thanks very much!
Best Regards,
Chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/982f85e0/attachment.html 

From chainone at gmail.com  Tue Dec  2 22:57:09 2008
From: chainone at gmail.com (chain one)
Date: Wed, 3 Dec 2008 14:57:09 +0800
Subject: [antlr-interest] How to translate this V2 Lexer rule to V3
	Lexer rule?
In-Reply-To: <5a92ffb60812022248q782786e7mf5a3b7008b7b4eee@mail.gmail.com>
References: <5a92ffb60812022248q782786e7mf5a3b7008b7b4eee@mail.gmail.com>
Message-ID: <5a92ffb60812022257y3e455c36n4aaddef21f282952@mail.gmail.com>

Sorry for spaming
I noticed that only to remove the '$' in front of getText and setType()
would work.
What a stupid question! : )

2008/12/3 chain one <chainone at gmail.com>

> The V2 Lexer rule is:
> IDENT
>
> : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>  {
>  if (!parser.isFirst) $setType(globalSearchId($getText()));
> }
>  ;
>
>
> I searched in the ANTLR V3 book but failed to find the way to get the Lexer
> rule's Text and Type directly from its alternatives.
>
> Anyone who knows , could you please drop me an email?
> Thanks very much!
> Best Regards,
> Chainone
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/542e9f0c/attachment.html 

From antlr at mirality.co.nz  Tue Dec  2 23:24:34 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 03 Dec 2008 20:24:34 +1300
Subject: [antlr-interest] How to translate this V2 Lexer rule to V3
 Lexer rule?
In-Reply-To: <5a92ffb60812022257y3e455c36n4aaddef21f282952@mail.gmail.co
 m>
References: <5a92ffb60812022248q782786e7mf5a3b7008b7b4eee@mail.gmail.com>
	<5a92ffb60812022257y3e455c36n4aaddef21f282952@mail.gmail.com>
Message-ID: <20081203072447.1ADD711EB23@www.antlr.org>

At 19:57 3/12/2008, chain one wrote:
>I noticed that only to remove the '$' in front of getText and 
>setType() would work.
>What a stupid question! : )

It might work, but it's not correct.

The correct syntax is to use $text and $type.


From chainone at gmail.com  Wed Dec  3 01:41:48 2008
From: chainone at gmail.com (chain one)
Date: Wed, 3 Dec 2008 17:41:48 +0800
Subject: [antlr-interest]  Help! Predicate failed messages
Message-ID: <5a92ffb60812030141q75b253a8y3d8c7b5bb882edc8@mail.gmail.com>

procedure_id
     : { isFirst }? id=IDENT { addId($id.getText(),PROCEDURE_IDENT); }
             |  nid=PROCEDURE_IDENT { $nid.setType(IDENT);} ->
^(PROCEDURE_ID[] PROCEDURE_IDENT)
             ;
In the first pass, isFirst  is true, and in the second pass, isFirst is set
to be false.
When running the generated Java code, it seems every time
the predicate fails, there will be an error message coming out like this:

line 43:41 rule named_types failed predicate: { isFirst }?

Could it be ignored? or there is something wrong with my grammar file?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/7f0dc171/attachment.html 

From chainone at gmail.com  Wed Dec  3 01:49:50 2008
From: chainone at gmail.com (chain one)
Date: Wed, 3 Dec 2008 17:49:50 +0800
Subject: [antlr-interest] Help! Predicate failed messages
In-Reply-To: <5a92ffb60812030141q75b253a8y3d8c7b5bb882edc8@mail.gmail.com>
References: <5a92ffb60812030141q75b253a8y3d8c7b5bb882edc8@mail.gmail.com>
Message-ID: <5a92ffb60812030149n2a45acbdh4971aa6039dbbca0@mail.gmail.com>

And there are a lot of  error tag in the final printed tree like this:
 (TYPE_DECL <error: temperature>

Is it caused by the failure of the predicate?


2008/12/3 chain one <chainone at gmail.com>

> procedure_id
>      : { isFirst }? id=IDENT { addId($id.getText(),PROCEDURE_IDENT); }
>              |  nid=PROCEDURE_IDENT { $nid.setType(IDENT);} ->
> ^(PROCEDURE_ID[] PROCEDURE_IDENT)
>              ;
> In the first pass, isFirst  is true, and in the second pass, isFirst is set
> to be false.
> When running the generated Java code, it seems every time
> the predicate fails, there will be an error message coming out like this:
>
> line 43:41 rule named_types failed predicate: { isFirst }?
>
> Could it be ignored? or there is something wrong with my grammar file?
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/e7ec5fc9/attachment.html 

From 06virg at gmail.com  Wed Dec  3 02:05:31 2008
From: 06virg at gmail.com (virg g)
Date: Wed, 3 Dec 2008 15:35:31 +0530
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <49362a8f.040bca0a.50ee.ffffe5deSMTPIN_ADDED@mx.google.com>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
	<493392b2.060bca0a.734f.ffffe9b2SMTPIN_ADDED@mx.google.com>
	<3df0db9f0812022128v738bd5adpdce0395c9047a3@mail.gmail.com>
	<49362a8f.040bca0a.50ee.ffffe5deSMTPIN_ADDED@mx.google.com>
Message-ID: <3df0db9f0812030205i59d31cd4s25dc1d5797b9a018@mail.gmail.com>

Thanks for your very quick response. Now i have understood how lexer and
parser works.
1.  As i have set of commands to parse
if there is any unknown command found it breaks the parsing and returns with
the error. But how to continue the parsing  even though it finds unknown
command after returning the error.

I have added the functions "getErrorMessage(RecognitionException e, String[]
tokenNames), getTokenErrorDisplay(Token t) to  a grammar file.

2. Added package at the beginning of header to grammar code. I could see the
package name for parser file but not for the lexer. Why?
- regards
Virg

On Wed, Dec 3, 2008 at 12:13 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 18:28 3/12/2008, virg g wrote:
>
>> ok. Is there anyway i can mention the commands and its paramters without
>> mentioning them in the quotes?
>>
>
> Yes -- either declare a named token for it instead (as you did for TESTCMD)
> or define an explicit lexer rule:
>
>  CMD : 'CMD';
>
> Then you can refer to it as CMD in all the parser rules instead of 'CMD',
> and it'll have a nicer name in the generated code to boot.
>
> Eliminating quoted constants from parser rules like this will also let you
> group all of your lexer rules together in one place, making it easier to
> spot surprises and harder to forget that ANTLR is not a scannerless parser.
>
>  The literal rule is combination of "OR" of Number, ALPHA and STRING. So
>> for the command " TESTCMD CNT=2 VAL=TYPE:CNT" where for VAL  paramters CNT
>> will match ALPHA lexer rule right? as it works if it is "TEST". Otherwise i
>> have to add expilcitely all the quoted values to "literal" rule like this.
>> sorry if understanding is wrong.
>>
>> literal    : (NUMBER|ALPHA|STRING |TESTCMD|'CNT'|'VAL'|'TYPE')
>>
>
> Nope, that's exactly right (that you do have to explicitly mention them, I
> mean).  As each of those are unique token types, if you want 'literal' to
> match all of them then you have to actually mention all of them.
>
> Despite the string "CNT" being *compatible* with the rule ALPHA, the simple
> fact is that when the lexer ran it didn't generate an ALPHA, it generated a
> CNT (or a T14, or whatever).  The parser doesn't know that this is
> acceptable where an ALPHA is unless you tell it.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/7718eeb5/attachment.html 

From micha-1 at fantasymail.de  Wed Dec  3 02:17:30 2008
From: micha-1 at fantasymail.de (micha)
Date: Wed, 3 Dec 2008 11:17:30 +0100
Subject: [antlr-interest] lexing nested comments
Message-ID: <200812031117.31043.micha-1@fantasymail.de>

Hi,

I don't get the lexer rules correct to lex my nested comments.
As a workaround I use the following, see below. What are the right rules for 
this ?

thanks
 Michael


------------------------------------------

one lexer rule:

MULTI_COMMENT: '/*'  { nestedComment(0); skip(); }


and in the @members section (my STRINGs don't allow escapes):

	private final void nestedComment(int nest) throws RecognitionException {
	
		System.err.println("reading Comment nesting level " + nest);
		while (true) {
			int la = input.LA(1);
			if (la == '/') {
				input.consume();
				la = input.LA(1);
				if (la == '*') {input.consume(); nestedComment(nest+1);}
			}
			else if (la == '*') {
				input.consume();
				la = input.LA(1);
				if (la == '/') {input.consume(); return;}
			}
			else if (la == '"') {
				mSTRING();
			} else
				input.consume(); 
			
		}
	
	}
	

From antlr at mirality.co.nz  Wed Dec  3 02:56:01 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 03 Dec 2008 23:56:01 +1300
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <3df0db9f0812030205i59d31cd4s25dc1d5797b9a018@mail.gmail.co
 m>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
	<493392b2.060bca0a.734f.ffffe9b2SMTPIN_ADDED@mx.google.com>
	<3df0db9f0812022128v738bd5adpdce0395c9047a3@mail.gmail.com>
	<49362a8f.040bca0a.50ee.ffffe5deSMTPIN_ADDED@mx.google.com>
	<3df0db9f0812030205i59d31cd4s25dc1d5797b9a018@mail.gmail.com>
Message-ID: <20081203105615.73D6A11EB83@www.antlr.org>

At 23:05 3/12/2008, virg g wrote:
>1.  As i have set of commands to parse
>if there is any unknown command found it breaks the parsing and 
>returns with the error. But how to continue the parsing  even 
>though it finds unknown command after returning the error.

Normally ANTLR will try to continue regardless, though it depends 
on how your grammar is structured and which version of ANTLR 
you're using.

>2. Added package at the beginning of header to grammar code. I 
>could see the package name for parser file but not for the lexer. 
>Why?

@header { foo } is just shorthand for @parser::header { foo }, 
when used in a combined grammar.

It's better to explicitly use @parser::header { foo } and 
@lexer::header { bar }.


From chainone at gmail.com  Wed Dec  3 03:41:11 2008
From: chainone at gmail.com (chain one)
Date: Wed, 3 Dec 2008 19:41:11 +0800
Subject: [antlr-interest] Help! Predicate failed messages
In-Reply-To: <5a92ffb60812030149n2a45acbdh4971aa6039dbbca0@mail.gmail.com>
References: <5a92ffb60812030141q75b253a8y3d8c7b5bb882edc8@mail.gmail.com>
	<5a92ffb60812030149n2a45acbdh4971aa6039dbbca0@mail.gmail.com>
Message-ID: <5a92ffb60812030341g3d7fe192vbc2901633e0b5aca@mail.gmail.com>

I noticed the first time parse is OK.But when turning isFirst to false, this
kind of error message keep coming out.
I don't know why the  failure of a predicate would lead to an error.

2008/12/3 chain one <chainone at gmail.com>

> And there are a lot of  error tag in the final printed tree like this:
>  (TYPE_DECL <error: temperature>
>
> Is it caused by the failure of the predicate?
>
>
> 2008/12/3 chain one <chainone at gmail.com>
>
> procedure_id
>>      : { isFirst }? id=IDENT { addId($id.getText(),PROCEDURE_IDENT); }
>>              |  nid=PROCEDURE_IDENT { $nid.setType(IDENT);} ->
>> ^(PROCEDURE_ID[] PROCEDURE_IDENT)
>>              ;
>> In the first pass, isFirst  is true, and in the second pass, isFirst is
>> set to be false.
>> When running the generated Java code, it seems every time
>> the predicate fails, there will be an error message coming out like this:
>>
>> line 43:41 rule named_types failed predicate: { isFirst }?
>>
>> Could it be ignored? or there is something wrong with my grammar file?
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/19d60f07/attachment.html 

From 06virg at gmail.com  Wed Dec  3 03:43:39 2008
From: 06virg at gmail.com (virg g)
Date: Wed, 3 Dec 2008 17:13:39 +0530
Subject: [antlr-interest] help - Parser problem
In-Reply-To: <493665cd.010bca0a.5774.5c40SMTPIN_ADDED@mx.google.com>
References: <3df0db9f0811302156n39ae21c5mb98005d7696fd49f@mail.gmail.com>
	<493392b2.060bca0a.734f.ffffe9b2SMTPIN_ADDED@mx.google.com>
	<3df0db9f0812022128v738bd5adpdce0395c9047a3@mail.gmail.com>
	<49362a8f.040bca0a.50ee.ffffe5deSMTPIN_ADDED@mx.google.com>
	<3df0db9f0812030205i59d31cd4s25dc1d5797b9a018@mail.gmail.com>
	<493665cd.010bca0a.5774.5c40SMTPIN_ADDED@mx.google.com>
Message-ID: <3df0db9f0812030343pd3f2c92v2c3b1ce8870161f7@mail.gmail.com>

On Wed, Dec 3, 2008 at 4:26 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 23:05 3/12/2008, virg g wrote:
>
>> 1.  As i have set of commands to parse
>> if there is any unknown command found it breaks the parsing and returns
>> with the error. But how to continue the parsing  even though it finds
>> unknown command after returning the error.
>>
>
> Normally ANTLR will try to continue regardless, though it depends on how
> your grammar is structured and which version of ANTLR you're using.


I am using antlr 3.1

>
>
>  2. Added package at the beginning of header to grammar code. I could see
>> the package name for parser file but not for the lexer. Why?
>>
>
> @header { foo } is just shorthand for @parser::header { foo }, when used in
> a combined grammar.
>
> It's better to explicitly use @parser::header { foo } and @lexer::header {
> bar }.
>

Ok, Thanks, I am able to see package in the lexer file
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/b181d40a/attachment.html 

From oliver.zeigermann at gmail.com  Wed Dec  3 03:45:43 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Wed, 3 Dec 2008 12:45:43 +0100
Subject: [antlr-interest] Parser/Lexer rules final in generated code /
	manually implemented rules
Message-ID: <9da4f4520812030345m76947698o8c9e673d51c7c921@mail.gmail.com>

Folks!

Any idea why parser and lexer rules are final in generated code? If it
is for performance I doubt it does any significant speed up.

Anyway, how do I manually implement a certain lexer or parser rule? I
though of subclassing and overriding the specific rule. Which does not
work because of the final modifier.

Any chance to achieve this? Especially, when thinking of first and
follow computation for prediction code? Maybe one could specify this
manually?

Any hints welcome.

Cheers

Oliver

From chainone at gmail.com  Wed Dec  3 05:41:43 2008
From: chainone at gmail.com (chain one)
Date: Wed, 3 Dec 2008 21:41:43 +0800
Subject: [antlr-interest]  TokenStream in ANTLR V3
Message-ID: <5a92ffb60812030541oe9db3bq12f3fd6cba9954e7@mail.gmail.com>

I found in ANTLR V3, before Parser rules began to be appiled, all the tokens
have been recognized(That is also to say that all the Lexer Rules have been
applied.).

Such as this rule:


IDENT

: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
{
     $type=globalSearchId($text);
}
;

globalSearchId() will be called N times before any parser rule is about to
be appiled


Is it right?
Is there any way to let the Lexer rule of the token to be applied just
before this token is met by the Parser?

If it works in this way, in the above example, globalSearchId will be called
once the IDENT is met in the Parser Rule like:

type_id :  id=IDENT { addId($id.getText(),TYPE_IDENT); $s=$id.getText(); }


As far as I know, ANTLR V2 works in this way.
Is there any way to do that in ANTLR V3?


Thanks very much.

Best Regards,
chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/93f6a73c/attachment.html 

From sharwell at pixelminegames.com  Wed Dec  3 06:27:29 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 3 Dec 2008 08:27:29 -0600
Subject: [antlr-interest] lexing nested comments
In-Reply-To: <200812031117.31043.micha-1@fantasymail.de>
References: <200812031117.31043.micha-1@fantasymail.de>
Message-ID: <86403CA0939415448BCCB83855EFE09A64E9C8@Bloodymary.ironwillgames.com>

MULTI_COMMENT
	:	'/*'
		{
			$channel=HIDDEN;
		}
		(	~('/'|'*')
			|	('/' ~'*') => '/'
			|	('*' ~'/') => '*'
			|	MULTI_COMMENT
		)*
		'*/'
	;


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of micha
Sent: Wednesday, December 03, 2008 4:18 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexing nested comments

Hi,

I don't get the lexer rules correct to lex my nested comments.
As a workaround I use the following, see below. What are the right rules
for 
this ?

thanks
 Michael


------------------------------------------

one lexer rule:

MULTI_COMMENT: '/*'  { nestedComment(0); skip(); }


and in the @members section (my STRINGs don't allow escapes):

	private final void nestedComment(int nest) throws
RecognitionException {
	
		System.err.println("reading Comment nesting level " +
nest);
		while (true) {
			int la = input.LA(1);
			if (la == '/') {
				input.consume();
				la = input.LA(1);
				if (la == '*') {input.consume();
nestedComment(nest+1);}
			}
			else if (la == '*') {
				input.consume();
				la = input.LA(1);
				if (la == '/') {input.consume();
return;}
			}
			else if (la == '"') {
				mSTRING();
			} else
				input.consume(); 
			
		}
	
	}
	

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From micha-1 at fantasymail.de  Wed Dec  3 06:57:58 2008
From: micha-1 at fantasymail.de (micha)
Date: Wed, 3 Dec 2008 15:57:58 +0100
Subject: [antlr-interest] lexing nested comments
In-Reply-To: <86403CA0939415448BCCB83855EFE09A64E9C8@Bloodymary.ironwillgames.com>
References: <200812031117.31043.micha-1@fantasymail.de>
	<86403CA0939415448BCCB83855EFE09A64E9C8@Bloodymary.ironwillgames.com>
Message-ID: <200812031557.58940.micha-1@fantasymail.de>

On Wednesday 03 December 2008 15:27:29 you wrote:
>
> 			|	('/' ~'*') => '/'
> 			|	('*' ~'/') => '*'
> 			|	MULTI_COMMENT

..with a syntactic predicate, nice.

thanks,
 Michael


From jimi at temporal-wave.com  Wed Dec  3 07:25:54 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Dec 2008 07:25:54 -0800
Subject: [antlr-interest] How to translate this V2 Lexer rule to V3
 Lexer rule?
In-Reply-To: <5a92ffb60812022257y3e455c36n4aaddef21f282952@mail.gmail.com>
References: <5a92ffb60812022248q782786e7mf5a3b7008b7b4eee@mail.gmail.com>
	<5a92ffb60812022257y3e455c36n4aaddef21f282952@mail.gmail.com>
Message-ID: <1228317954.14131.276.camel@jimi>

On Wed, 2008-12-03 at 14:57 +0800, chain one wrote:

> Sorry for spaming
> 
> 
> 
> I noticed that only to remove the '$' in front of getText and
> setType() would work.
> What a stupid question! : )
> 


Actually, you should not do that in V3 lexers :-) You hsoudl use:

System.out.println($text);

and

$type = MY_INT_TYPE;

Jim

> 2008/12/3 chain one <chainone at gmail.com>
> 
>         The V2 Lexer rule is:
>         
>         
>         
>         IDENT
>         
>         
>         : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
>         { 
>         if (!parser.isFirst) $setType(globalSearchId($getText()));
>         }
>         ;
>         
>         
>         
>         
>         I searched in the ANTLR V3 book but failed to find the way to
>         get the Lexer rule's Text and Type directly from
>         its alternatives.
>         
>         
>         Anyone who knows , could you please drop me an email?
>         Thanks very much!
>         Best Regards,
>         Chainone
>         
>         
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/491e7257/attachment.html 

From jimi at temporal-wave.com  Wed Dec  3 07:31:37 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Dec 2008 07:31:37 -0800
Subject: [antlr-interest] Help! Predicate failed messages
In-Reply-To: <5a92ffb60812030141q75b253a8y3d8c7b5bb882edc8@mail.gmail.com>
References: <5a92ffb60812030141q75b253a8y3d8c7b5bb882edc8@mail.gmail.com>
Message-ID: <1228318297.14131.281.camel@jimi>

On Wed, 2008-12-03 at 17:41 +0800, chain one wrote:
> procedure_id
>     : { isFirst }? id=IDENT { addId($id.getText(),PROCEDURE_IDENT); } 
>              |  nid=PROCEDURE_IDENT { $nid.setType(IDENT);} ->
> ^(PROCEDURE_ID[] PROCEDURE_IDENT)
>              ;
> In the first pass, isFirst  is true, and in the second pass, isFirst
> is set to be false. 
> When running the generated Java code, it seems every time
> the predicate fails, there will be an error message coming out like
> this:
> 
> 
> line 43:41 rule named_types failed predicate: { isFirst }?
> 
> 
> 
> Could it be ignored? or there is something wrong with my grammar file?
> 


You need to use a gated semantic predicate not a semantic predicate.

{ isFirst }?=>

You should also read through the getting started with ANTLR 3 links on
antlr.org as they will save you a lot of time.

Jim

> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/a5201b7f/attachment.html 

From jimi at temporal-wave.com  Wed Dec  3 07:55:12 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Dec 2008 07:55:12 -0800
Subject: [antlr-interest] Parser/Lexer rules final in generated code /
 manually implemented rules
In-Reply-To: <9da4f4520812030345m76947698o8c9e673d51c7c921@mail.gmail.com>
References: <9da4f4520812030345m76947698o8c9e673d51c7c921@mail.gmail.com>
Message-ID: <1228319712.14131.291.camel@jimi>

On Wed, 2008-12-03 at 12:45 +0100, Oliver Zeigermann wrote:

> Folks!
> 
> Any idea why parser and lexer rules are final in generated code? If it
> is for performance I doubt it does any significant speed up.
> 
> Anyway, how do I manually implement a certain lexer or parser rule? I
> though of subclassing and overriding the specific rule. Which does not
> work because of the final modifier.
> 
> Any chance to achieve this? Especially, when thinking of first and
> follow computation for prediction code? Maybe one could specify this
> manually?
> 
> Any hints welcome.


Generally you should not have to do this, and Ter has a design for
specific error recovery alts that will make things in the parser a lot
easier. 

The way to gain access to first and follow sets is to call an empty rule
is your alt at the specific place you want the first set and you will
find that that the stacked follow set for the rule is the first set for
the that point in the rule. You can then implement code (better to call
an super method really) that can do things like consume until LA(1) is
in the followset (which is the first set for the point you invoke the
rule). There is a fairly obscure bug with followset caching in 3.1.1,
that is triggered by this though - you get too many things in the
followset, but this is fixed in the development snapshots.

So:

rule : CLASS emptyRule (member emptyRule)* '}' ;

emptyRule

@init
{
   // do your stuff here
}
  :
  ;


I can't think off hand of anything one would need to do by overriding a
rule to be honest. Do you have anything specific in mind? Also,
overriding a rule might result in incorrect predictions or at least,
calling a rule that wasn't really predicted by analysis would need to be
documented all to hell ;-)


Jim

> 
> Cheers
> 
> Oliver
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/4543f5c6/attachment.html 

From hlship at gmail.com  Wed Dec  3 09:49:15 2008
From: hlship at gmail.com (Howard Lewis Ship)
Date: Wed, 3 Dec 2008 09:49:15 -0800
Subject: [antlr-interest] Getting started with Antlr: Resolving a
	conflicting lexer rule
Message-ID: <ecd0e3310812030949sf0b8d5id75b45717d0bdbf8@mail.gmail.com>

I'm working on an improved property expression language for Tapestry
5.1. My first step was to recreate what T5.0 accepted in the past
(using an ad-hoc parser based on regular expressions).

lexer grammar PELexer;


@header
{
package propexp;
}



fragment LETTER
	:	('a'..'z'|'A'..'Z');
fragment DIGIT
	:	'0'..'9';	
fragment SIGN
	:	('+'|'-')?;
LPAREN 	:	'(';
RPAREN 	:	')';

LBRACKET
	:	 '[';
RBRACKET:	']';

LBRACE	:	'{';
RBRACE	:	'}';

IDENTIFIER
	:	LETTER (LETTER | DIGIT | '_')+;
DEREF 	:	 '.';
SAFEDEREF
	:	'?.';

RANGEOP :	'.' (options { greedy = true; } : '.');

INT 	:	SIGN DIGIT+;
FLOAT	:	SIGN DIGIT?  '.' DIGIT+;


NULL 	:	'null';
TRUE	:	'true';
FALSE	:	'false';
THIS	:	'this';

WS 	:	(' '|'\t'|'\n'|'\r')+ { skip(); };


My problem is a conflict between FLOAT and RANGEOP in my parser grammar:

parser grammar PEParser;


options
{
  tokenVocab=PELexer;	
  output=AST;		
  ASTLabelType=CommonTree;
}

tokens
{
  INVOKE;
}


@header
{
package propexp;
}



	
start 	:	expression^ EOF!;
			
expression
	:	term DEREF expression -> ^(DEREF term expression)
	|	term SAFEDEREF expression -> ^(SAFEDEREF term expression)
	|	term;
	
term	:	reservedliteral
	|	range
	|	INT
	|	FLOAT
	|	IDENTIFIER
	|	id=IDENTIFIER LPAREN RPAREN -> ^(INVOKE $id)
	;
	
reservedliteral: NULL | TRUE | FALSE | THIS;
	
range 	:	from=INT RANGEOP to=INT  -> ^(RANGEOP $from $to);	


(Obviosly, I've been playing around with this, trying different
options, such as greedy).

Everything works fine except for ranges:

     input: 1..10
line 1:2 required (...)+ loop did not match anything at character '.'
       AST: .10


In other words, I can't get it to see that a RANGE (i.e. "1..10")
should take precedence over a FLOAT (i.e., "1.234") ... it gets as far
as the "1." in a FLOAT, then gags on the extra ".".

I'm at a loss as to fixing this; I've been working through the book
and the FAQ and haven't stumbled over a solution yet.

Thanks in advance for any help!


-- 
Howard M. Lewis Ship

Creator Apache Tapestry and Apache HiveMind

From carl.crowder at gmail.com  Wed Dec  3 10:10:51 2008
From: carl.crowder at gmail.com (Carl Crowder)
Date: Wed, 3 Dec 2008 18:10:51 +0000
Subject: [antlr-interest] Getting started with Antlr: Resolving a
	conflicting lexer rule
In-Reply-To: <ecd0e3310812030949sf0b8d5id75b45717d0bdbf8@mail.gmail.com>
References: <ecd0e3310812030949sf0b8d5id75b45717d0bdbf8@mail.gmail.com>
Message-ID: <dc0a0a350812031010p796d5fdcm5f0b33d4f5e20efa@mail.gmail.com>



I believe using lookahead would work - options { k=2; } 

Carl

On 3 Dec 2008, 5:52 PM, "Howard Lewis Ship" <hlship at gmail.com> wrote:

I'm working on an improved property expression language for Tapestry
5.1. My first step was to recreate what T5.0 accepted in the past
(using an ad-hoc parser based on regular expressions).

lexer grammar PELexer;


@header
{
package propexp;
}



fragment LETTER
       :       ('a'..'z'|'A'..'Z');
fragment DIGIT
       :       '0'..'9';
fragment SIGN
       :       ('+'|'-')?;
LPAREN  :       '(';
RPAREN  :       ')';

LBRACKET
       :        '[';
RBRACKET:       ']';

LBRACE  :       '{';
RBRACE  :       '}';

IDENTIFIER
       :       LETTER (LETTER | DIGIT | '_')+;
DEREF   :        '.';
SAFEDEREF
       :       '?.';

RANGEOP :       '.' (options { greedy = true; } : '.');

INT     :       SIGN DIGIT+;
FLOAT   :       SIGN DIGIT?  '.' DIGIT+;


NULL    :       'null';
TRUE    :       'true';
FALSE   :       'false';
THIS    :       'this';

WS      :       (' '|'\t'|'\n'|'\r')+ { skip(); };


My problem is a conflict between FLOAT and RANGEOP in my parser grammar:

parser grammar PEParser;


options
{
 tokenVocab=PELexer;
 output=AST;
 ASTLabelType=CommonTree;
}

tokens
{
 INVOKE;
}


@header
{
package propexp;
}




start   :       expression^ EOF!;

expression
       :       term DEREF expression -> ^(DEREF term expression)
       |       term SAFEDEREF expression -> ^(SAFEDEREF term expression)
       |       term;

term    :       reservedliteral
       |       range
       |       INT
       |       FLOAT
       |       IDENTIFIER
       |       id=IDENTIFIER LPAREN RPAREN -> ^(INVOKE $id)
       ;

reservedliteral: NULL | TRUE | FALSE | THIS;

range   :       from=INT RANGEOP to=INT  -> ^(RANGEOP $from $to);


(Obviosly, I've been playing around with this, trying different
options, such as greedy).

Everything works fine except for ranges:

    input: 1..10
line 1:2 required (...)+ loop did not match anything at character '.'
      AST: .10


In other words, I can't get it to see that a RANGE (i.e. "1..10")
should take precedence over a FLOAT (i.e., "1.234") ... it gets as far
as the "1." in a FLOAT, then gags on the extra ".".

I'm at a loss as to fixing this; I've been working through the book
and the FAQ and haven't stumbled over a solution yet.

Thanks in advance for any help!


--
Howard M. Lewis Ship

Creator Apache Tapestry and Apache HiveMind

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/610c7de8/attachment.html 

From jimi at temporal-wave.com  Wed Dec  3 11:27:18 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Dec 2008 11:27:18 -0800
Subject: [antlr-interest] Getting started with Antlr: Resolving a
 conflicting lexer rule
In-Reply-To: <ecd0e3310812030949sf0b8d5id75b45717d0bdbf8@mail.gmail.com>
References: <ecd0e3310812030949sf0b8d5id75b45717d0bdbf8@mail.gmail.com>
Message-ID: <1228332438.14131.296.camel@jimi>

On Wed, 2008-12-03 at 09:49 -0800, Howard Lewis Ship wrote:

> I'm working on an improved property expression language for Tapestry
> 5.1. My first step was to recreate what T5.0 accepted in the past
> (using an ad-hoc parser based on regular expressions).



> 
> 
> My problem is a conflict between FLOAT and RANGEOP in my parser grammar:
> 

Please refer to teh FAQ example:

http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating
+point%2C+dot%2C+range%2C+time+specs 


This covers more than you need so you can cull it down to just range vs
dot.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/b20ddd81/attachment.html 

From jimi at temporal-wave.com  Wed Dec  3 14:02:27 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Dec 2008 14:02:27 -0800
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
Message-ID: <1228341747.14131.316.camel@jimi>

I have just released org.antlr - antlr3-maven-plugin version 3.1.1.1,
which should sync up with Maven central no later than 4 hours from now
(depending on when in the sync cycle I deployed the artifacts).

This release incorporates a few donated re-jigs, but more importantly I
have re-implemented the dependency checking code as the previous
implementations were using Collection sorting, which cannot handle
interdependencies correctly. The dependency resolution is now evaluated
using a topological sort and seems to work well.

The release numbering reflects that this is the first revision to the
plugin that processes .g files using ANTLR 3.1.1.

Please let me know if you find errors of course. The generated usage web
site will be updated and deployed to somewhere on www.antlr.org when the
hardware for the web site is upgraded sometime this week.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/e3a514df/attachment.html 

From mike at mpagel.de  Wed Dec  3 15:14:44 2008
From: mike at mpagel.de (Mike Pagel)
Date: Thu, 04 Dec 2008 00:14:44 +0100
Subject: [antlr-interest] Generating text from models
Message-ID: <493712E4.1000505@mpagel.de>

Hi there,

first of all: I am pretty new to ANTLR and to this mailing list. I did 
search the archive for information but could not find anything 
addressing my question. If it's in there, just send the link, please...

Now:

I am coming from a modeling (UML-like, graphical DSLs) background, where 
you typically design the abstract syntax of a language in form of a 
meta-model consisting of meta-classes, their attributes and relations 
among each other. I have used a number of code generators before but I 
am wondering whether ANTLR can also generate code from models 
(=meta-model instances). By this I mean by using grammars similar to how 
ASTs are walked in a tree grammar.

Does something like this already exist? That way you could also generate 
code from business objects (POJOs) through reflection...

Any input and direction is welcome. If this is something not 
done/possible so far I might try and explore this route a bit.

Thanks a lot,
Mike


From parrt at cs.usfca.edu  Wed Dec  3 15:28:57 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 3 Dec 2008 15:28:57 -0800
Subject: [antlr-interest] Generating text from models
In-Reply-To: <493712E4.1000505@mpagel.de>
References: <493712E4.1000505@mpagel.de>
Message-ID: <461801ED-5CFF-4FE7-ABF9-4DA8C605B043@cs.usfca.edu>

Hi Mike, I've currently got a nice example in my upcoming language  
design patterns book where I build a poor man's object relational  
database model using reflection. The basic idea is that you iterate  
over the list of methods in a class or whatever and build up the  
output (using templates optimally).

Ter
On Dec 3, 2008, at 3:14 PM, Mike Pagel wrote:

> Hi there,
>
> first of all: I am pretty new to ANTLR and to this mailing list. I did
> search the archive for information but could not find anything
> addressing my question. If it's in there, just send the link,  
> please...
>
> Now:
>
> I am coming from a modeling (UML-like, graphical DSLs) background,  
> where
> you typically design the abstract syntax of a language in form of a
> meta-model consisting of meta-classes, their attributes and relations
> among each other. I have used a number of code generators before but I
> am wondering whether ANTLR can also generate code from models
> (=meta-model instances). By this I mean by using grammars similar to  
> how
> ASTs are walked in a tree grammar.
>
> Does something like this already exist? That way you could also  
> generate
> code from business objects (POJOs) through reflection...
>
> Any input and direction is welcome. If this is something not
> done/possible so far I might try and explore this route a bit.
>
> Thanks a lot,
> Mike
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From oliver.zeigermann at gmail.com  Wed Dec  3 16:21:54 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 4 Dec 2008 01:21:54 +0100
Subject: [antlr-interest] Survey: Places where parsers and compilers are
	used practically
Message-ID: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.com>

Folks!

I need your support as I want to figure out where parsers and/or
compilers are practically used these days.

Any input highly appreciated.

Cheers and thanks in advance

Oliver

From asoka250 at gmail.com  Wed Dec  3 18:26:36 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Wed, 03 Dec 2008 20:26:36 -0600
Subject: [antlr-interest] errors in embedding grammar files in maven project
	- regd.
Message-ID: <49373FDC.8040507@gmail.com>

Hi List,

I encapsulated antlr grammar files in a eclipse maven project. The 
compilation task of grammar files is done at maven compile time. I 
specified the output directory to be the following :-

    * target/generated-sources/antlr 

        * dot.grammar
              o dot.tokens
              o dotlexer.java
              o dotparser.java

    where *dot.grammar* is the package name I specified in the dot.g file
    @header {
    package prefuse.parser.dotparser;
    }
    @lexer::header {
      package prefuse.parser.dotparser;
    }

    But when I did a maven compile, the generated files are generated in
    the output folder but with no package name.

        * target/generated-sources/antlr 
              o dot.tokens
              o dotlexer.java
              o dotparser.java

    The geenrated files are not part of any package anymore. Can anyone
    help me with this. All the configuration instructions in a maven
    project are specified in a pom.xml file.



-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From asoka250 at gmail.com  Wed Dec  3 18:29:19 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Wed, 03 Dec 2008 20:29:19 -0600
Subject: [antlr-interest] errors in embedding grammar files in maven
	project - regd.
In-Reply-To: <49373FDC.8040507@gmail.com>
References: <49373FDC.8040507@gmail.com>
Message-ID: <4937407F.9050200@gmail.com>

Ashok Varikuti wrote:
> Hi List,
>
> I encapsulated antlr grammar files in a eclipse maven project. The 
> compilation task of grammar files is done at maven compile time. I 
> specified the output directory to be the following :-
>
>    * target/generated-sources/antlr
>        * dot.grammar
>              o dot.tokens
>              o dotlexer.java
>              o dotparser.java
>
>    where *dot.grammar* is the package name I specified in the dot.g file
>    @header {
>    package prefuse.parser.dotparser;
>    }
>    @lexer::header {
>      package prefuse.parser.dotparser;
>    }
>
>    But when I did a maven compile, the generated files are generated in
>    the output folder but with no package name.
>
>        * target/generated-sources/antlr              o dot.tokens
>              o dotlexer.java
>              o dotparser.java
>
>    The geenrated files are not part of any package anymore. Can anyone
>    help me with this. All the configuration instructions in a maven
>    project are specified in a pom.xml file.
>
>
>
Sorry substitute the package name as below:-

@header {
   package dot.grammar;
   }
   @lexer::header {
     package dot.grammar;
   }

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From chainone at gmail.com  Wed Dec  3 19:01:53 2008
From: chainone at gmail.com (chain one)
Date: Thu, 4 Dec 2008 11:01:53 +0800
Subject: [antlr-interest]  How to set the token buffer length?
Message-ID: <5a92ffb60812031901s651f1bd7nfe99b1a7ef60a46e@mail.gmail.com>

I just found that ANTLR V3 would firstly turn input file stream into tokens,
then the parser started to work.Is there anyway to set the token buffer
length?
Check the following Lexer rule:

IDENT

: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
{
if (!parser.isFirst) $type=globalSearchId($text);
}
;

Function globalSearchId depends on what the current scope is to search the
ID. Current scope is already recorded in the first pass and is updated when
parser moving forward.
So in the second pass if the token stream buffer is very long, before
feeding the tokens to Parser, all tokens have been recognized and
globalSearchId has been called N times. However, because Parser hasn't
started to work, the current scope couldn't be updated. So
calling globalSearchId always returns null.

I checked the Java target Runtime DOC , found no such interfaces to modify
the token stream buffer length.


Best Regards,
chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081204/507c3652/attachment.html 

From monty at codetransform.com  Wed Dec  3 19:31:08 2008
From: monty at codetransform.com (Monty Zukowski)
Date: Wed, 3 Dec 2008 19:31:08 -0800
Subject: [antlr-interest] Survey: Places where parsers and compilers are
	used practically
In-Reply-To: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.com>
References: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.com>
Message-ID: <73e8e3430812031931p3a5f3304o53e995c0a8cfaab@mail.gmail.com>

At Temboo we're using ANTLR & ANTXR parsing and tree transformation
for our visual language and our expression language.

Monty

On Wed, Dec 3, 2008 at 4:21 PM, Oliver Zeigermann
<oliver.zeigermann at gmail.com> wrote:
> Folks!
>
> I need your support as I want to figure out where parsers and/or
> compilers are practically used these days.
>
> Any input highly appreciated.
>
> Cheers and thanks in advance
>
> Oliver
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From jimi at temporal-wave.com  Wed Dec  3 20:30:02 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 03 Dec 2008 20:30:02 -0800
Subject: [antlr-interest] errors in embedding grammar files in maven
 project - regd.
In-Reply-To: <49373FDC.8040507@gmail.com>
References: <49373FDC.8040507@gmail.com>
Message-ID: <1228365002.4072.20.camel@jimi>

On Wed, 2008-12-03 at 20:26 -0600, Ashok Varikuti wrote:

> Hi List,
> 
> I encapsulated antlr grammar files in a eclipse maven project. The 
> compilation task of grammar files is done at maven compile time. I 
> specified the output directory to be the following :-


Here is a sample configuration for antlr3-maven-plugin version 3.1.1.1,
which is now synced with Maven central (because I just used it ;-).



            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1.1</version>
                <configuration>
                    <sourceDirectory>src/main/java/com/temporalwave/parsers/aspdotnet</sourceDirectory>
                    <outputDirectory>target/generated-sources/aspdotnetjava/com/temporalwave/parsers/aspdotnet</outputDirectory>
                    <libDirectory>src/main/java/com/temporalwave/parsers/aspdotnet</libDirectory>
                    <excludes>
                        <exclude>commonwalker.g</exclude>
                    </excludes>
                </configuration>
                
                <executions>

                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>


If you do not specify a source and output directory then it looks for
grammar in the ./antlr directory and the output files should be in:

target/generated-sources/nameofyourartifact/antlr

But your package is:


    @header {
    package prefuse.parser.dotparser;
    }
    @lexer::header {
      package prefuse.parser.dotparser;
    }


So you want your grammar files to be in the directory:


   <sourceDirectory>src/main/java/prefuse/parser/dotparser</sourceDirectory>


and your output files should be:


   <outputDirectory>target/generated-sources/yourartifactname/prefuse/parser/dotparser</outputDirectory>


Then it will all work. Be sure to use version 3.1.1.1 of the plugin if
you have dependent grammars (tokenVocab option) as the 3.1.1 version and
below do not calculate dependencies correctly.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/9604bd52/attachment.html 

From rschulz at sonic.net  Wed Dec  3 21:06:17 2008
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 3 Dec 2008 21:06:17 -0800
Subject: [antlr-interest] Survey: Places where parsers and compilers are
	used practically
In-Reply-To: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.com>
References: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.com>
Message-ID: <200812032106.17959.rschulz@sonic.net>

On Wednesday 03 December 2008 16:21, Oliver Zeigermann wrote:
> Folks!
>
> I need your support as I want to figure out where parsers
> and/or compilers are practically used these days.
>
> Any input highly appreciated.

Wouldn't the list of where they're used
_impractically_ be a lot shorter?


> Cheers and thanks in advance
>
> Oliver


RRS

From jared.bunting at peachjean.com  Wed Dec  3 21:17:32 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Wed, 3 Dec 2008 23:17:32 -0600
Subject: [antlr-interest] errors in embedding grammar files in maven
	project - regd.
In-Reply-To: <49375E5C.5060700@gmail.com>
References: <49373FDC.8040507@gmail.com> <4937407F.9050200@gmail.com>
	<b15aaba10812031947n4e362e21oee7451a63f498970@mail.gmail.com>
	<49375E5C.5060700@gmail.com>
Message-ID: <b15aaba10812032117p58ce1237u4b558734522cbf10@mail.gmail.com>

I guess I'm a bit confused about the issue you're having then.  Between
having the package statement "package dot.grammar" and having your source
code in a "dot/grammar" folder structure, your classes should be in the
package.  Do you actually have folders named "dot.grammar" ?  But basically,
whatever directory you want the output source to be in (underneath
"target/generated-sources/antlr"), put it in that directory underneath
"src/main/antlr".

If this doesn't help, maybe you could zip up a project and send it to me?
I'm pretty sure I do what you're trying to do fairly often and I haven't had
any trouble with it.

-Jared

On Wed, Dec 3, 2008 at 10:36 PM, Ashok Varikuti <asoka250 at gmail.com> wrote:

> Jared Bunting wrote:
>
>> Not sure how your files are setup, but if I recall correctly, the maven
>> plugin places the output files in folders based on where your input files
>> are.  So, place your dot.g file in src/main/antlr/dot/grammar (just like you
>> would *.java files in a package) - then the output should end up in
>> target/generated-sources/antlr/dot/grammar.  Also, I would check to be sure
>> you are using the new version of the maven plugin (3.1.1.1 <
>> http://3.1.1.1>) - I believe I recall that version 3.1.1 had some
>> consistency issues with output directories.
>>
>> -Jared
>>
>>
>> On Wed, Dec 3, 2008 at 9:29 PM, Ashok Varikuti <asoka250 at gmail.com<mailto:
>> asoka250 at gmail.com>> wrote:
>>
>>    Ashok Varikuti wrote:
>>    > Hi List,
>>    >
>>    > I encapsulated antlr grammar files in a eclipse maven project. The
>>    > compilation task of grammar files is done at maven compile time. I
>>    > specified the output directory to be the following :-
>>    >
>>    >    * target/generated-sources/antlr
>>    >        * dot.grammar
>>    >              o dot.tokens
>>    >              o dotlexer.java
>>    >              o dotparser.java
>>    >
>>    >    where *dot.grammar* is the package name I specified in the
>>    dot.g file
>>    >    @header {
>>    >    package prefuse.parser.dotparser;
>>    >    }
>>    >    @lexer::header {
>>    >      package prefuse.parser.dotparser;
>>    >    }
>>    >
>>    >    But when I did a maven compile, the generated files are
>>    generated in
>>    >    the output folder but with no package name.
>>    >
>>    >        * target/generated-sources/antlr              o dot.tokens
>>    >              o dotlexer.java
>>    >              o dotparser.java
>>    >
>>    >    The geenrated files are not part of any package anymore. Can
>>    anyone
>>    >    help me with this. All the configuration instructions in a maven
>>    >    project are specified in a pom.xml file.
>>    >
>>    >
>>    >
>>    Sorry substitute the package name as below:-
>>
>>    @header {
>>      package dot.grammar;
>>      }
>>      @lexer::header {
>>        package dot.grammar;
>>      }
>>
>>    --
>>    Ashok R Varikuti
>>    Graduate Research Assistant
>>    CIS Dept, Kansas State University
>>    785-304-2401
>>    ashokv at ksu.edu <mailto:ashokv at ksu.edu>
>>
>>
>>
>>    List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>    Unsubscribe:
>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>  Hi Jared,
>
> Thank you for the answer. You are right on target when u said that the
> *output should end up in target/generated-sources/antlr/dot/grammar.* But I
> needed the output files to be part of package rather. For now this is how
> its generated:-
>
>   * target/generated-sources/antlr/dot/grammar
>         o (default package)
>               + dot.tokens
>               + dotparser.java
>               + dotlexer.java
>
> I want the structure to be something like this :-
>   * target/generated-sources/antlr
>         o dot.grammar
>               + dot.tokens
>               + dotparser.java
>               + dotlexer.java
>
>
>   * src/main/java
>         o dot.util.grammar
>               + dotOp.java --> here I need to use dotparser.java,
>                 which is not possible when  --> the file is generated
>                 in a default package.
>
>
>
> As you can observe, the main difference being the output files are part of
> package "dot.grammar" as I mentioned in the grammar file. When the files are
> generated are generated in a default package, I have no way to import them
> and use elsewhere since I can't refer to them and they aren't even part of a
> source folder either. I need to import the java
> files(dotparser.java,dotlexer.java) into my packages in src/main/java.
>
> --
> Ashok R Varikuti
> Graduate Research Assistant
> CIS Dept, Kansas State University
> 785-304-2401
> ashokv at ksu.edu
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081203/b07880bc/attachment.html 

From antlr at quantdev.com  Wed Dec  3 21:55:00 2008
From: antlr at quantdev.com (Michael Lee)
Date: Thu, 04 Dec 2008 00:55:00 -0500
Subject: [antlr-interest] Tree Parser Rule - 'throws' my-own-exception is
	silently ignored
In-Reply-To: <4931D15B.5030405@internet.lu>
References: <4931D15B.5030405@internet.lu>
Message-ID: <493770B4.9050708@quantdev.com>

Hi,

I am troubling to throw my-own-exception during tree parsing.

I have a tree rule - nothing too complicated.

Here is the snippet

expression returns [ Expression exp ] *throws* *ExpressionParseException*
: ^(op='+' a=expression b=expression ) { $exp = 
NumericOperationExpression.createOperation( op.getText().charAt(0) , 
(NumericExpression) dynamicToNumeric(a) , (NumericExpression) 
dynamicToNumeric(b)); }


However the antlr generates

/*/ src/main/antlr/Eval.g:63:1: expression returns [ Expression exp ] : 
*( ^(op= '+' a= expression b= expression ) ....
public final Expression expression() *throws RecognitionException* {
Expression exp = null;

It looks like it is silently dropping 'throws' my-own-exception.

Is it a bug? Or am I doing wrong?

Thanks in advance.


Michael Lee

From mike at mpagel.de  Wed Dec  3 23:30:04 2008
From: mike at mpagel.de (Mike Pagel)
Date: Thu, 4 Dec 2008 08:30:04 +0100 (CET)
Subject: [antlr-interest] Generating text from models
Message-ID: <749586431.565373.1228375804548.JavaMail.webmailer@webmail.1and1.com>

Hi Terrence,

does that approach require extensions to ANTLR or ST? Are you defining the object traversal in a declarative grammar instead of plain procedural code? Can you specify predicates like "only process methods that have a certain Java annotation applied"?

Could you just leak a bit more? :-)

When is your book up for grabs?

Mike

Terence Parr schrieb: 


Hi Mike, I've currently got a nice example in my upcoming language  
design patterns book where I build a poor man's object relational  
database model using reflection. The basic idea is that you iterate  
over the list of methods in a class or whatever and build up the  
output (using templates optimally).

Ter
On Dec 3, 2008, at 3:14 PM, Mike Pagel wrote:

> Hi there,
>
> first of all: I am pretty new to ANTLR and to this mailing list. I did
> search the archive for information but could not find anything
> addressing my question. If it's in there, just send the link,  
> please...
>
> Now:
>
> I am coming from a modeling (UML-like, graphical DSLs) background,  
> where
> you typically design the abstract syntax of a language in form of a
> meta-model consisting of meta-classes, their attributes and relations
> among each other. I have used a number of code generators before but I
> am wondering whether ANTLR can also generate code from models
> (=meta-model instances). By this I mean by using grammars similar to  
> how
> ASTs are walked in a tree grammar.
>
> Does something like this already exist? That way you could also  
> generate
> code from business objects (POJOs) through reflection...
>
> Any input and direction is welcome. If this is something not
> done/possible so far I might try and explore this route a bit.
>
> Thanks a lot,
> Mike
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081204/b4b0027f/attachment.html 

From Philip.Moetteli at tele2.ch  Thu Dec  4 00:07:21 2008
From: Philip.Moetteli at tele2.ch (=?ISO-8859-1?Q?Philip_M=F6tteli?=)
Date: Thu, 04 Dec 2008 09:07:21 +0100
Subject: [antlr-interest] Objective-C
Message-ID: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>

Hello,


Thanks Jean and Terence for your help!

I writing my first grammar and would like to use as language target  
Objective-C. I see, that quite some work has been done for Objective-C  
by Kay R?pke. Unfortunately the download URL is not valid any more. So  
I tried to contact Kay R?pke @classdump.org ? to no avail.
Does anybody know, where I could download the binaries or sources for  
the language translation to Objective-C, some examples  and ev. the  
Xcode plugin?


Thanks
Phil


From matt.jazz at laposte.net  Thu Dec  4 05:17:16 2008
From: matt.jazz at laposte.net (matt.jazz)
Date: Thu,  4 Dec 2008 14:17:16 +0100 (CET)
Subject: [antlr-interest] Token size rule
Message-ID: <19669347.6014.1228396636516.JavaMail.www@wwinf8304>

Hello,

I would like to know how to include a token size rule in the grammar. Is it in the lexer rules or in the parser
rules. Is it possible to get some examples please ?

Thanks a lot

Matt



 Cr?ez votre adresse ?lectronique prenom.nom at laposte.net 
 1 Go d'espace de stockage, anti-spam et anti-virus int?gr?s.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081204/1f9d5232/attachment.html 

From asoka250 at gmail.com  Thu Dec  4 06:29:24 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Thu, 04 Dec 2008 08:29:24 -0600
Subject: [antlr-interest] errors in embedding grammar files in maven
 project - regd.
In-Reply-To: <1228365002.4072.20.camel@jimi>
References: <49373FDC.8040507@gmail.com> <1228365002.4072.20.camel@jimi>
Message-ID: <4937E944.5010201@gmail.com>

Jim Idle wrote:
> On Wed, 2008-12-03 at 20:26 -0600, Ashok Varikuti wrote:
>> Hi List,
>>
>> I encapsulated antlr grammar files in a eclipse maven project. The 
>> compilation task of grammar files is done at maven compile time. I 
>> specified the output directory to be the following :-
>>     
>
> Here is a sample configuration for antlr3-maven-plugin version 
> 3.1.1.1, which is now synced with Maven central (because I just used 
> it ;-).
>
>
>             <plugin>
>                 <groupId>org.antlr</groupId>
>                 <artifactId>antlr3-maven-plugin</artifactId>
>                 <version>3.1.1.1</version>
>                 <configuration>
>                     <sourceDirectory>src/main/java/com/temporalwave/parsers/aspdotnet</sourceDirectory>
>                     <outputDirectory>target/generated-sources/aspdotnetjava/com/temporalwave/parsers/aspdotnet</outputDirectory>
>                     <libDirectory>src/main/java/com/temporalwave/parsers/aspdotnet</libDirectory>
>                     <excludes>
>                         <exclude>commonwalker.g</exclude>
>                     </excludes>
>                 </configuration>
>                 
>                 <executions>
>
>                     <execution>
>                         <goals>
>                             <goal>antlr</goal>
>                         </goals>
>                     </execution>
>                 </executions>
>
>             </plugin>
>   
>
> If you do not specify a source and output directory then it looks for 
> grammar in the ./antlr directory and the output files should be in:
>
> target/generated-sources/nameofyourartifact/antlr
>
> But your package is:
>
>     @header {
>     package prefuse.parser.dotparser;
>     }
>     @lexer::header {
>       package prefuse.parser.dotparser;
>     }
>   
>
> So you want your grammar files to be in the directory:
>
>    <sourceDirectory>src/main/java/prefuse/parser/dotparser</sourceDirectory>
>   
>
> and your output files should be:
>
>    <outputDirectory>target/generated-sources/yourartifactname/prefuse/parser/dotparser</outputDirectory>
>   
>
> Then it will all work. Be sure to use version 3.1.1.1 of the plugin if 
> you have dependent grammars (tokenVocab option) as the 3.1.1 version 
> and below do not calculate dependencies correctly.
>
> Jim
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   
Hi Jim,

Thank you for the reply. Can you give me the location of the repository 
of the antlr3-maven-plugin, which I  need to specify  in the  repository 
tag.

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From Ernest.Pasour at sas.com  Thu Dec  4 07:09:32 2008
From: Ernest.Pasour at sas.com (Ernest Pasour)
Date: Thu, 4 Dec 2008 10:09:32 -0500
Subject: [antlr-interest] running a second lexer on unbounded input
In-Reply-To: <20081202201723.D422718D8075@mail161-va3.bigfish.com>
References: <15412A37E8C9574393B24ADD991FAA760A78F9A335@MERCMBX14.na.sas.com>
	<20081202201723.D422718D8075@mail161-va3.bigfish.com>
Message-ID: <15412A37E8C9574393B24ADD991FAA760A7E39FC56@MERCMBX14.na.sas.com>

Gavin,

Thanks for the suggestion.  The parser strategy may be too complicated for me, but at least I have some ideas about how it can be done now.

-Ernest

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz]
Sent: Tuesday, December 02, 2008 3:16 PM
To: Ernest Pasour; antlr-interest at antlr.org
Subject: Re: [antlr-interest] running a second lexer on unbounded input

At 08:52 3/12/2008, Ernest Pasour wrote:
 >I have been working with a grammar for ActionScript, which is a
 >rather freeform language.  One expression type that is allowed
in
 >the source code is raw xml.  For instance, the following code is

 >legal:
 >
 >var x:XML=<a>
 >   </a>;

If you can detect the use of XML purely at the lexer level, then
you can use a lexer "island grammar" -- see the ANTLR example
grammars for more info.

If you can't detect it until it reaches the parser, then things
get a lot more complicated, but have a look here:
   <<http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control>http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control>



From asoka250 at gmail.com  Thu Dec  4 07:22:06 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Thu, 04 Dec 2008 09:22:06 -0600
Subject: [antlr-interest] errors in embedding grammar files in maven
 project - regd.
In-Reply-To: <4937F56E.4040402@gmail.com>
References: <49373FDC.8040507@gmail.com> <1228365002.4072.20.camel@jimi>
	<4937F56E.4040402@gmail.com>
Message-ID: <4937F59E.8040003@gmail.com>

Ashok Varikuti wrote:
> Jim Idle wrote:
>> On Wed, 2008-12-03 at 20:26 -0600, Ashok Varikuti wrote:
>>> Hi List,
>>>
>>> I encapsulated antlr grammar files in a eclipse maven project. The 
>>> compilation task of grammar files is done at maven compile time. I 
>>> specified the output directory to be the following :-
>>>     
>>
>> Here is a sample configuration for antlr3-maven-plugin version 
>> 3.1.1.1, which is now synced with Maven central (because I just used 
>> it ;-).
>>
>>
>>             <plugin>
>>                 <groupId>org.antlr</groupId>
>>                 <artifactId>antlr3-maven-plugin</artifactId>
>>                 <version>3.1.1.1</version>
>>                 <configuration>
>>                     
>> <sourceDirectory>src/main/java/com/temporalwave/parsers/aspdotnet</sourceDirectory> 
>>
>>                     
>> <outputDirectory>target/generated-sources/aspdotnetjava/com/temporalwave/parsers/aspdotnet</outputDirectory> 
>>
>>                     
>> <libDirectory>src/main/java/com/temporalwave/parsers/aspdotnet</libDirectory> 
>>
>>                     <excludes>
>>                         <exclude>commonwalker.g</exclude>
>>                     </excludes>
>>                 </configuration>
>>                                 <executions>
>>
>>                     <execution>
>>                         <goals>
>>                             <goal>antlr</goal>
>>                         </goals>
>>                     </execution>
>>                 </executions>
>>
>>             </plugin>
>>  
>> If you do not specify a source and output directory then it looks for 
>> grammar in the ./antlr directory and the output files should be in:
>>
>> target/generated-sources/nameofyourartifact/antlr
>>
>> But your package is:
>>
>>     @header {
>>     package prefuse.parser.dotparser;
>>     }
>>     @lexer::header {
>>       package prefuse.parser.dotparser;
>>     }
>>  
>> So you want your grammar files to be in the directory:
>>
>>    
>> <sourceDirectory>src/main/java/prefuse/parser/dotparser</sourceDirectory> 
>>
>>  
>> and your output files should be:
>>
>>    
>> <outputDirectory>target/generated-sources/yourartifactname/prefuse/parser/dotparser</outputDirectory> 
>>
>>  
>> Then it will all work. Be sure to use version 3.1.1.1 of the plugin 
>> if you have dependent grammars (tokenVocab option) as the 3.1.1 
>> version and below do not calculate dependencies correctly.
>>
>> Jim
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 
>>
>>
>>   
> Hi Jim,
>
> I was able to figure out what you are talking. It did work for me. 
> Cheers.
>
Hi Jim,

I was able to figure out what you are talking about. It did work for me. 
Cheers.


-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401
ashokv at ksu.edu



From jimi at temporal-wave.com  Thu Dec  4 08:20:48 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 04 Dec 2008 08:20:48 -0800
Subject: [antlr-interest] Objective-C
In-Reply-To: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
Message-ID: <1228407648.4072.67.camel@jimi>

On Thu, 2008-12-04 at 09:07 +0100, Philip M?tteli wrote:

> Hello,
> 
> 
> Thanks Jean and Terence for your help!
> 
> I writing my first grammar and would like to use as language target  
> Objective-C. I see, that quite some work has been done for Objective-C  
> by Kay R?pke. Unfortunately the download URL is not valid any more. So  
> I tried to contact Kay R?pke @classdump.org ? to no avail.
> Does anybody know, where I could download the binaries or sources for  
> the language translation to Objective-C, some examples  and ev. the  
> Xcode plugin?
> 
> 


I don't think that Objective-C has been abandoned , but it has not been
updated for a long time hence I doubt it is useful at the moment.
Hopefully someone will pick it up again. In the meantime, you will need
to use the C target I think.

Jim

> Thanks
> Phil
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081204/12831d0e/attachment.html 

From jimi at temporal-wave.com  Thu Dec  4 08:27:07 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 04 Dec 2008 08:27:07 -0800
Subject: [antlr-interest] errors in embedding grammar files in maven
 project - regd.
In-Reply-To: <4937E944.5010201@gmail.com>
References: <49373FDC.8040507@gmail.com> <1228365002.4072.20.camel@jimi>
	<4937E944.5010201@gmail.com>
Message-ID: <1228408027.4072.76.camel@jimi>

On Thu, 2008-12-04 at 08:29 -0600, Ashok Varikuti wrote:

> Jim Idle wrote:
> > On Wed, 2008-12-03 at 20:26 -0600, Ashok Varikuti wrote:



> >   
> Hi Jim,
> 
> Thank you for the reply. Can you give me the location of the repository 
> of the antlr3-maven-plugin, which I  need to specify  in the  repository 
> tag.
> 

It is in the standard maven central repository, so you should not need
to specify the repository.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081204/474bf85c/attachment.html 

From aheller at gmx.at  Thu Dec  4 10:24:08 2008
From: aheller at gmx.at (Arnulf Heller)
Date: Thu, 04 Dec 2008 19:24:08 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <493712E4.1000505@mpagel.de>
References: <493712E4.1000505@mpagel.de>
Message-ID: <20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>

Xtext is a good example of an open source tool that translates models 
into code using ANTLR
http://wiki.eclipse.org/Xtext

it's part of openArchitectureWare
http://www.openarchitectureware.org/

which in turn is part of topcased (I think):
http://topcased.gforge.enseeiht.fr/

At 00:14 04.12.2008, Mike Pagel wrote:
>Hi there,
>
>first of all: I am pretty new to ANTLR and to this mailing list. I did
>search the archive for information but could not find anything
>addressing my question. If it's in there, just send the link, please...
>
>Now:
>
>I am coming from a modeling (UML-like, graphical DSLs) background, where
>you typically design the abstract syntax of a language in form of a
>meta-model consisting of meta-classes, their attributes and relations
>among each other. I have used a number of code generators before but I
>am wondering whether ANTLR can also generate code from models
>(=meta-model instances). By this I mean by using grammars similar to how
>ASTs are walked in a tree grammar.
>
>Does something like this already exist? That way you could also generate
>code from business objects (POJOs) through reflection...
>
>Any input and direction is welcome. If this is something not
>done/possible so far I might try and explore this route a bit.
>
>Thanks a lot,
>Mike
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From aheller at gmx.at  Thu Dec  4 10:32:34 2008
From: aheller at gmx.at (Arnulf Heller)
Date: Thu, 04 Dec 2008 19:32:34 +0100
Subject: [antlr-interest] Survey: Places where parsers and compilers are
 used practically
In-Reply-To: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.co
 m>
References: <9da4f4520812031621n3c805c7eu216effb9fa4e570a@mail.gmail.com>
Message-ID: <20081204183240.FOOK29018.viefep15-int.chello.at@edge01.upc.biz>

we use it mostly for simple DSLs

text files in these languages provide descriptions for protocols, 
menus, GUI, data flow networks, ...

which are parsed statically and produce source code with stringtemplate

now I know that this is called "model driven [software] design" :-)


At 01:21 04.12.2008, Oliver Zeigermann wrote:
>Folks!
>
>I need your support as I want to figure out where parsers and/or
>compilers are practically used these days.
>
>Any input highly appreciated.
>
>Cheers and thanks in advance
>
>Oliver
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From oliver.zeigermann at gmail.com  Thu Dec  4 10:32:54 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 4 Dec 2008 19:32:54 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
Message-ID: <9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>

I think what you were looking for is not Xtext, but raher Xpand2:

http://www.eclipse.org/gmt/oaw/doc/4.3/html/contents/core_reference.html#xpand_reference_introduction

which allows you to generate code from models (there are different
types of models you can use). Especially, you can use EMF models based
on XMI exported by many UML tools.

Xtext instead allows you to define a simple grammar and generates a
- meta model,
- parser, and
- graphical editor based on Eclipse RCP

Cheers

Oliver

2008/12/4 Arnulf Heller <aheller at gmx.at>:
> Xtext is a good example of an open source tool that translates models
> into code using ANTLR
> http://wiki.eclipse.org/Xtext
>
> it's part of openArchitectureWare
> http://www.openarchitectureware.org/
>
> which in turn is part of topcased (I think):
> http://topcased.gforge.enseeiht.fr/
>
> At 00:14 04.12.2008, Mike Pagel wrote:
>>Hi there,
>>
>>first of all: I am pretty new to ANTLR and to this mailing list. I did
>>search the archive for information but could not find anything
>>addressing my question. If it's in there, just send the link, please...
>>
>>Now:
>>
>>I am coming from a modeling (UML-like, graphical DSLs) background, where
>>you typically design the abstract syntax of a language in form of a
>>meta-model consisting of meta-classes, their attributes and relations
>>among each other. I have used a number of code generators before but I
>>am wondering whether ANTLR can also generate code from models
>>(=meta-model instances). By this I mean by using grammars similar to how
>>ASTs are walked in a tree grammar.
>>
>>Does something like this already exist? That way you could also generate
>>code from business objects (POJOs) through reflection...
>>
>>Any input and direction is welcome. If this is something not
>>done/possible so far I might try and explore this route a bit.
>>
>>Thanks a lot,
>>Mike
>>
>>
>>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>Unsubscribe:
>>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From hlship at gmail.com  Thu Dec  4 12:33:40 2008
From: hlship at gmail.com (Howard Lewis Ship)
Date: Thu, 4 Dec 2008 12:33:40 -0800
Subject: [antlr-interest] Getting started with Antlr: Resolving a
	conflicting lexer rule
In-Reply-To: <1228332438.14131.296.camel@jimi>
References: <ecd0e3310812030949sf0b8d5id75b45717d0bdbf8@mail.gmail.com>
	<1228332438.14131.296.camel@jimi>
Message-ID: <ecd0e3310812041233k51bfcacbge488ffa0bd2dc8b6@mail.gmail.com>

I've taken the liberty of adding my example to the FAQ:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=13828121

On Wed, Dec 3, 2008 at 11:27 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Wed, 2008-12-03 at 09:49 -0800, Howard Lewis Ship wrote:
>
> I'm working on an improved property expression language for Tapestry
> 5.1. My first step was to recreate what T5.0 accepted in the past
> (using an ad-hoc parser based on regular expressions).
>
>
>
> My problem is a conflict between FLOAT and RANGEOP in my parser grammar:
>
> Please refer to teh FAQ example:
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point%2C+dot%2C+range%2C+time+specs
>
>
> This covers more than you need so you can cull it down to just range vs dot.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>



-- 
Howard M. Lewis Ship

Creator Apache Tapestry and Apache HiveMind

From mike at mpagel.de  Thu Dec  4 13:01:29 2008
From: mike at mpagel.de (Mike Pagel)
Date: Thu, 04 Dec 2008 22:01:29 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
References: <493712E4.1000505@mpagel.de>	
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
Message-ID: <49384529.7000601@mpagel.de>

Hi Oliver,

you are right, this is what I want to do achieve, but: I was wondering 
whether this could be done the ANTLR way, i.e. through grammars and ST 
templates, instead of using a whole different templating mechanism.

One of the main reasons I am after this is that my platform is actually 
not Java but C#, for which XPAND is not available. The Microsoft 
template engine T4 from their DSL tools is still in a pretty early 
state, so... since there is ANTLR with a C# target and ST#, I was trying 
to see whether you could select model fragments declaratively through a 
grammar and then emit templates from it. Would be pretty cool I think.

Of course, the model is already much like an AST so what you'd need is 
something like a tree grammar to walk the model.

Best,
Mike

Oliver Zeigermann schrieb:
> I think what you were looking for is not Xtext, but raher Xpand2:
>
> http://www.eclipse.org/gmt/oaw/doc/4.3/html/contents/core_reference.html#xpand_reference_introduction
>
> which allows you to generate code from models (there are different
> types of models you can use). Especially, you can use EMF models based
> on XMI exported by many UML tools.
>
> Xtext instead allows you to define a simple grammar and generates a
> - meta model,
> - parser, and
> - graphical editor based on Eclipse RCP
>
> Cheers
>
> Oliver
>
> 2008/12/4 Arnulf Heller <aheller at gmx.at>:
>   
>> Xtext is a good example of an open source tool that translates models
>> into code using ANTLR
>> http://wiki.eclipse.org/Xtext
>>
>> it's part of openArchitectureWare
>> http://www.openarchitectureware.org/
>>
>> which in turn is part of topcased (I think):
>> http://topcased.gforge.enseeiht.fr/
>>
>> At 00:14 04.12.2008, Mike Pagel wrote:
>>     
>>> Hi there,
>>>
>>> first of all: I am pretty new to ANTLR and to this mailing list. I did
>>> search the archive for information but could not find anything
>>> addressing my question. If it's in there, just send the link, please...
>>>
>>> Now:
>>>
>>> I am coming from a modeling (UML-like, graphical DSLs) background, where
>>> you typically design the abstract syntax of a language in form of a
>>> meta-model consisting of meta-classes, their attributes and relations
>>> among each other. I have used a number of code generators before but I
>>> am wondering whether ANTLR can also generate code from models
>>> (=meta-model instances). By this I mean by using grammars similar to how
>>> ASTs are walked in a tree grammar.
>>>
>>> Does something like this already exist? That way you could also generate
>>> code from business objects (POJOs) through reflection...
>>>
>>> Any input and direction is welcome. If this is something not
>>> done/possible so far I might try and explore this route a bit.
>>>
>>> Thanks a lot,
>>> Mike
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>       
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>     

From oliver.zeigermann at gmail.com  Thu Dec  4 13:55:45 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 4 Dec 2008 22:55:45 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <49384529.7000601@mpagel.de>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de>
Message-ID: <9da4f4520812041355w4675bb51we453a24c664464e5@mail.gmail.com>

Hi Mike!

I see Xpand as a combination of a template language and tree walker.
You both specify how to walk the model and which data is emitted in
which template slot. So: Why not combining ANTLR tree grammars with
template output rules? Same thing.

But: How to create the model (=AST)?

Oliver

2008/12/4 Mike Pagel <mike at mpagel.de>:
> Hi Oliver,
>
> you are right, this is what I want to do achieve, but: I was wondering
> whether this could be done the ANTLR way, i.e. through grammars and ST
> templates, instead of using a whole different templating mechanism.
>
> One of the main reasons I am after this is that my platform is actually
> not Java but C#, for which XPAND is not available. The Microsoft
> template engine T4 from their DSL tools is still in a pretty early
> state, so... since there is ANTLR with a C# target and ST#, I was trying
> to see whether you could select model fragments declaratively through a
> grammar and then emit templates from it. Would be pretty cool I think.
>
> Of course, the model is already much like an AST so what you'd need is
> something like a tree grammar to walk the model.
>
> Best,
> Mike
>
> Oliver Zeigermann schrieb:
>> I think what you were looking for is not Xtext, but raher Xpand2:
>>
>> http://www.eclipse.org/gmt/oaw/doc/4.3/html/contents/core_reference.html#xpand_reference_introduction
>>
>> which allows you to generate code from models (there are different
>> types of models you can use). Especially, you can use EMF models based
>> on XMI exported by many UML tools.
>>
>> Xtext instead allows you to define a simple grammar and generates a
>> - meta model,
>> - parser, and
>> - graphical editor based on Eclipse RCP
>>
>> Cheers
>>
>> Oliver
>>
>> 2008/12/4 Arnulf Heller <aheller at gmx.at>:
>>
>>> Xtext is a good example of an open source tool that translates models
>>> into code using ANTLR
>>> http://wiki.eclipse.org/Xtext
>>>
>>> it's part of openArchitectureWare
>>> http://www.openarchitectureware.org/
>>>
>>> which in turn is part of topcased (I think):
>>> http://topcased.gforge.enseeiht.fr/
>>>
>>> At 00:14 04.12.2008, Mike Pagel wrote:
>>>
>>>> Hi there,
>>>>
>>>> first of all: I am pretty new to ANTLR and to this mailing list. I did
>>>> search the archive for information but could not find anything
>>>> addressing my question. If it's in there, just send the link, please...
>>>>
>>>> Now:
>>>>
>>>> I am coming from a modeling (UML-like, graphical DSLs) background, where
>>>> you typically design the abstract syntax of a language in form of a
>>>> meta-model consisting of meta-classes, their attributes and relations
>>>> among each other. I have used a number of code generators before but I
>>>> am wondering whether ANTLR can also generate code from models
>>>> (=meta-model instances). By this I mean by using grammars similar to how
>>>> ASTs are walked in a tree grammar.
>>>>
>>>> Does something like this already exist? That way you could also generate
>>>> code from business objects (POJOs) through reflection...
>>>>
>>>> Any input and direction is welcome. If this is something not
>>>> done/possible so far I might try and explore this route a bit.
>>>>
>>>> Thanks a lot,
>>>> Mike
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From kenny_leung at pobox.com  Thu Dec  4 22:46:10 2008
From: kenny_leung at pobox.com (Kenny Leung)
Date: Thu, 4 Dec 2008 22:46:10 -0800
Subject: [antlr-interest] newbie request for help
Message-ID: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>

Hi All.

I thought I would get my feet wet by writing a parser for Objective-C  
type encodings. I thought it would be pretty easy for such a brief  
"language", but it is turning out to be pretty difficult.

One of the problems lies in parsing something like this:

     {vids=^vids}

which means a struct named "vids", which is composed of void * (^v),  
int, double, and short.

After the "{", I need to interpret vids as a single token, and after  
the "=", I need to interpret the characters as separate tokens.

One of the interesting things I found was that this is legal:

     NUMBER : '0'..'9';

but this is not:

     number : '0'..'9';

I bumped into this because I thought I'd "inline" the rule for the  
name after the "{". Can someone explain this?

Is there a way I can say, "use tokenizer rule A after the "{", but use  
tokenizer rule B after the "=".

AntlrWorks has been great for learning by playing. Thanks for any help!

-Kenny


From micha-1 at fantasymail.de  Fri Dec  5 00:28:54 2008
From: micha-1 at fantasymail.de (micha)
Date: Fri, 5 Dec 2008 09:28:54 +0100
Subject: [antlr-interest] newbie request for help
In-Reply-To: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
References: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
Message-ID: <200812050928.55628.micha-1@fantasymail.de>

On Friday 05 December 2008 07:46:10 Kenny Leung wrote:
> Hi All.
>
> One of the interesting things I found was that this is legal:
>
>      NUMBER : '0'..'9';

that's a lexer rule

> but this is not:
>
>      number : '0'..'9';

that's a parser rule, the ".." syntax is only allowed in lexer rules.

> Is there a way I can say, "use tokenizer rule A after the "{", but use
> tokenizer rule B after the "=".

for context switching the lexer,  I have two ideas (which both may be wrong 
:-) ) :

let the lexer allways return charaters as token and  combine them in parser 
rules like (examples):

id: LETTER (LETTER | DIGIT )*
type_id:  I | D | S | CARET | V
type_encoding = LEFT_BRACE id EQUAl type_id+ RIGHT_BRACE


or try a syntactic predicate in the lexer like:

fragment ID: LETTER (LETTER | DIGIT)*

NAME: ;
TYPE: ;
EQUAL:;
V:;

NAME_or_TYPE: 
	  (ID '=') => ID { type = NAME; }
	| '=' { type = EQUAL; }
	| 'v'  { type = V;}
	...

but I don't know if this works  in nested cases.


 Michael


From antlr at mirality.co.nz  Fri Dec  5 03:30:57 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 06 Dec 2008 00:30:57 +1300
Subject: [antlr-interest] newbie request for help
In-Reply-To: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
References: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
Message-ID: <20081205113119.02BA911ED4C@www.antlr.org>

At 19:46 5/12/2008, Kenny Leung wrote:
 >One of the problems lies in parsing something like this:
 >
 >     {vids=^vids}
 >
 >which means a struct named "vids", which is composed of void *
 >(^v), int, double, and short.
 >
 >After the "{", I need to interpret vids as a single token, and
 >after the "=", I need to interpret the characters as separate
 >tokens.

Nope, you don't :)  Just treat it as one bigger token at the lexer 
level, and then split it up at the parser level when creating the 
AST or output.  Much simpler.

(There are techniques for doing the split at the lexer level, but 
for something like this I think it's more complicated than it's 
worth.)


From mike at mpagel.de  Fri Dec  5 04:57:04 2008
From: mike at mpagel.de (Mike Pagel)
Date: Fri, 05 Dec 2008 13:57:04 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <49384529.7000601@mpagel.de>
References: <493712E4.1000505@mpagel.de>		<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de>
Message-ID: <49392520.6010000@mpagel.de>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081205/a460c91f/attachment.html 

From oliver.zeigermann at gmail.com  Fri Dec  5 05:00:58 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri, 5 Dec 2008 14:00:58 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <49392520.6010000@mpagel.de>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de> <49392520.6010000@mpagel.de>
Message-ID: <9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>

Ah. So you pass in the root of your POJO graph and let ST do the rest?
Without using a tree walker?

And the static POJO structure is your metamodel?

Cool idea.

Thanks for sharing :)

Oliver

P.S.: Can you share a demo template that shows this?

2008/12/5 Mike Pagel <mike at mpagel.de>:
> Hi there,
>
> actually, I just noticed that ST *is* able to pull properties (in the C# or
> Java beans sense) into the template, which it obviously done through
> reflection. That way, I am already able to use any kind of model expressed
> in for form of bean-like metamodel classes...
>
> Love it.
>
> Mike
>
> Mike Pagel schrieb:
>
> Hi Oliver,
>
> you are right, this is what I want to do achieve, but: I was wondering
> whether this could be done the ANTLR way, i.e. through grammars and ST
> templates, instead of using a whole different templating mechanism.
>
> One of the main reasons I am after this is that my platform is actually
> not Java but C#, for which XPAND is not available. The Microsoft
> template engine T4 from their DSL tools is still in a pretty early
> state, so... since there is ANTLR with a C# target and ST#, I was trying
> to see whether you could select model fragments declaratively through a
> grammar and then emit templates from it. Would be pretty cool I think.
>
> Of course, the model is already much like an AST so what you'd need is
> something like a tree grammar to walk the model.
>
> Best,
> Mike
>
> Oliver Zeigermann schrieb:
>
>
> I think what you were looking for is not Xtext, but raher Xpand2:
>
> http://www.eclipse.org/gmt/oaw/doc/4.3/html/contents/core_reference.html#xpand_reference_introduction
>
> which allows you to generate code from models (there are different
> types of models you can use). Especially, you can use EMF models based
> on XMI exported by many UML tools.
>
> Xtext instead allows you to define a simple grammar and generates a
> - meta model,
> - parser, and
> - graphical editor based on Eclipse RCP
>
> Cheers
>
> Oliver
>
> 2008/12/4 Arnulf Heller <aheller at gmx.at>:
>
>
>
> Xtext is a good example of an open source tool that translates models
> into code using ANTLR
> http://wiki.eclipse.org/Xtext
>
> it's part of openArchitectureWare
> http://www.openarchitectureware.org/
>
> which in turn is part of topcased (I think):
> http://topcased.gforge.enseeiht.fr/
>
> At 00:14 04.12.2008, Mike Pagel wrote:
>
>
>
> Hi there,
>
> first of all: I am pretty new to ANTLR and to this mailing list. I did
> search the archive for information but could not find anything
> addressing my question. If it's in there, just send the link, please...
>
> Now:
>
> I am coming from a modeling (UML-like, graphical DSLs) background, where
> you typically design the abstract syntax of a language in form of a
> meta-model consisting of meta-classes, their attributes and relations
> among each other. I have used a number of code generators before but I
> am wondering whether ANTLR can also generate code from models
> (=meta-model instances). By this I mean by using grammars similar to how
> ASTs are walked in a tree grammar.
>
> Does something like this already exist? That way you could also generate
> code from business objects (POJOs) through reflection...
>
> Any input and direction is welcome. If this is something not
> done/possible so far I might try and explore this route a bit.
>
> Thanks a lot,
> Mike
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From kenny_leung at pobox.com  Fri Dec  5 07:10:12 2008
From: kenny_leung at pobox.com (Kenny Leung)
Date: Fri, 5 Dec 2008 07:10:12 -0800
Subject: [antlr-interest] newbie request for help
In-Reply-To: <20081205113109.905D54001F1@cobalt.pobox.com>
References: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
	<20081205113109.905D54001F1@cobalt.pobox.com>
Message-ID: <829E823B-60D5-41CD-88F4-59ED865096BC@pobox.com>


On Dec 5, 2008, at 3:30 AM, Gavin Lambert wrote:

> At 19:46 5/12/2008, Kenny Leung wrote:
> >One of the problems lies in parsing something like this:
> >
> >     {vids=^vids}
> >
> >which means a struct named "vids", which is composed of void *
> >(^v), int, double, and short.
> >
> >After the "{", I need to interpret vids as a single token, and
> >after the "=", I need to interpret the characters as separate
> >tokens.
>
> Nope, you don't :)  Just treat it as one bigger token at the lexer  
> level, and then split it up at the parser level when creating the  
> AST or output.  Much simpler.

That feels rather hacky and unsatisfying. I wanted to used antlr so I  
wouldn't feel hacky and unsatisfying. Anyway, I don't think that would  
work, since the left part is a normal C identifier, which would look  
something like

     ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

and the right part is composed of characters in the set

     c, i, s, l, q, C, I, S, L, Q, f, d, B, v, *, @, #, : ?

Thanks!

-Kenny


From Philip.Moetteli at tele2.ch  Fri Dec  5 07:22:51 2008
From: Philip.Moetteli at tele2.ch (=?ISO-8859-1?Q?Philip_M=F6tteli?=)
Date: Fri, 05 Dec 2008 16:22:51 +0100
Subject: [antlr-interest] Objective-C
In-Reply-To: <1228407648.4072.67.camel@jimi>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
Message-ID: <1BD4CA76-00A2-43F3-9D45-2A2E68416ABF@tele2.ch>

Hello,


Am 04.12.2008 um 17:20 schrieb Jim Idle:

> On Thu, 2008-12-04 at 09:07 +0100, Philip M?tteli wrote:
>>
>> I writing my first grammar and would like to use as language target
>> Objective-C. I see, that quite some work has been done for  
>> Objective-C
>> by Kay R?pke. Unfortunately the download URL is not valid any more.  
>> So
>> I tried to contact Kay R?pke @classdump.org ? to no avail.
>> Does anybody know, where I could download the binaries or sources for
>> the language translation to Objective-C, some examples  and ev. the
>> Xcode plugin?
> I don't think that Objective-C has been abandoned , but it has not  
> been updated for a long time hence I doubt it is useful at the  
> moment. Hopefully someone will pick it up again.

Where could I pick it up?


Thanks



From jimi at temporal-wave.com  Fri Dec  5 08:48:17 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 05 Dec 2008 08:48:17 -0800
Subject: [antlr-interest] newbie request for help
In-Reply-To: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
References: <B17A7599-F52C-4926-B1B3-7AED9F8D6993@pobox.com>
Message-ID: <1228495697.4072.253.camel@jimi>

On Thu, 2008-12-04 at 22:46 -0800, Kenny Leung wrote:

> Hi All.
> 
> I thought I would get my feet wet by writing a parser for Objective-C  
> type encodings. I thought it would be pretty easy for such a brief  
> "language", but it is turning out to be pretty difficult.
> 
> One of the problems lies in parsing something like this:
> 
>      {vids=^vids}
> 
> which means a struct named "vids", which is composed of void * (^v),  
> int, double, and short.
> 
> After the "{", I need to interpret vids as a single token, and after  
> the "=", I need to interpret the characters as separate tokens.
> 
> One of the interesting things I found was that this is legal:
> 
>      NUMBER : '0'..'9';
> 

This is a lexer rule that turns a stream of characters into a token for
the parser. Lexer rules start with an upper case letter.

> but this is not:
> 
>      number : '0'..'9';


This is a parser rule (starts with a lower case letter. Hence you cannot
use ranges because you cannot guarantee that the two separate tokens '0'
and '9', which this rule auto-creates, have any meaning as a range. 

> 
> I bumped into this because I thought I'd "inline" the rule for the  
> name after the "{". Can someone explain this?
> 
> Is there a way I can say, "use tokenizer rule A after the "{", but use  
> tokenizer rule B after the "=".


No. The lexer (all the UpperCase rules) runs first and creates all the
tokens, then the parser runs (all the lowerCase rules) against the
pre-determined tokens.

The thing that almost everyone runs in to is that the parser cannot
influence the lexer as the lexer has already run. Don't use 'XXX' in
your parser rules, create a token:

XXX : 'XXX'

and use the symbol XXX in your parser rules.

For problems like the above you need a rule set something like:

// Lexer
POINT : '^' ;
OPEQ : '=';
LBRACE : '{';
RBRACE: '}';
ID : ('a'..'z'|'A'..'Z') +;
WS : (' '|'\t')+ { $channel=HIDDEN; }

// Parser
struct : LBRACE ID OPEQ structSpec RBRACE ;

strcutSpec : ( i=ID { checkIdChars($i.text); } | p=POINT
{ checkPointer(); )+ ;


Instead of trying to get the individual characters of the type spec,
just consume as a set of natural tokens, then separate everything out
afterwards, or you will get into a mess. Don't try to think of hte
paresr in human terms, try to think of what the easiest token set to
produce is, then what this stream of tokens is going to look like in the
parser. The parser should accept any syntax that is potentially valid
and apply semantic checks. For instance above, any ID is accepted, then
you check the character spec. This allows you to issue an error such as:
"Invalid type specification character at line n, offset y", instead of
"Syntax error."

Make sure you read the FAQs and getting started articles on the Wiki,
and if you have the money, buy the book. Inspecting the example grammars
and contributed grammars is a good idea too.

Jim



> 
> AntlrWorks has been great for learning by playing. Thanks for any help!
> 
> -Kenny
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081205/dafea9ef/attachment.html 

From parrt at cs.usfca.edu  Fri Dec  5 09:16:33 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 5 Dec 2008 09:16:33 -0800
Subject: [antlr-interest] Generating text from models
In-Reply-To: <9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de> <49392520.6010000@mpagel.de>
	<9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>
Message-ID: <306DA0B3-B8B2-4B2D-928F-0099D938DAFC@cs.usfca.edu>


On Dec 5, 2008, at 5:00 AM, Oliver Zeigermann wrote:

> Ah. So you pass in the root of your POJO graph and let ST do the rest?
> Without using a tree walker?
>
> And the static POJO structure is your metamodel?
>
> Cool idea.
>
> Thanks for sharing :)
>
> Oliver
>
> P.S.: Can you share a demo template that shows this?
>>

I'm sure I've done this myself somewhere.  It's easy and cool.

<obj.methods:{ m | method <m.name>}>

etc...

ST easily walks the java reflection structures.

Ter

From hlship at gmail.com  Fri Dec  5 09:57:31 2008
From: hlship at gmail.com (Howard Lewis Ship)
Date: Fri, 5 Dec 2008 09:57:31 -0800
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
In-Reply-To: <1228498778.4072.259.camel@jimi>
References: <1228341747.14131.316.camel@jimi>
	<ecd0e3310812050930m67982842t677c5be2fea9666@mail.gmail.com>
	<1228498778.4072.259.camel@jimi>
Message-ID: <ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>

Is this the right plugin artiface?

  <groupId>org.codehaus.mojo</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1.1</version>


On Fri, Dec 5, 2008 at 9:39 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Fri, 2008-12-05 at 09:30 -0800, Howard Lewis Ship wrote:
>
> I don't see it here:
>
> http://mirrors.ibiblio.org/pub/mirrors/maven2/org/codehaus/mojo/antlr3-maven-plugin/
>
> Where do you think it ended up?
>
> It is no longer in the codehaus repository, but maven central. Just
> reference it and it will be pulled in. It works for me and others on the
> list.
>
> Jim
>
> PS: There will be a 3.1.1.2 shortly as I found that 3.1.1.1 did not respect
> the conversionTimeout configuration.
>
> Jim
>
> On Wed, Dec 3, 2008 at 2:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> I have just released org.antlr - antlr3-maven-plugin version 3.1.1.1,
>> which
>> should sync up with Maven central no later than 4 hours from now
>> (depending
>> on when in the sync cycle I deployed the artifacts).
>>
>> This release incorporates a few donated re-jigs, but more importantly I
>> have
>> re-implemented the dependency checking code as the previous
>> implementations
>> were using Collection sorting, which cannot handle interdependencies
>> correctly. The dependency resolution is now evaluated using a topological
>> sort and seems to work well.
>>
>> The release numbering reflects that this is the first revision to the
>> plugin
>> that processes .g files using ANTLR 3.1.1.
>>
>> Please let me know if you find errors of course. The generated usage web
>> site will be updated and deployed to somewhere on www.antlr.org when the
>> hardware for the web site is upgraded sometime this week.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
>
>
>
>



-- 
Howard M. Lewis Ship

Creator Apache Tapestry and Apache HiveMind

From jared.bunting at peachjean.com  Fri Dec  5 10:00:04 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Fri, 05 Dec 2008 12:00:04 -0600
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
In-Reply-To: <ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>
References: <1228341747.14131.316.camel@jimi>	<ecd0e3310812050930m67982842t677c5be2fea9666@mail.gmail.com>	<1228498778.4072.259.camel@jimi>
	<ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>
Message-ID: <49396C24.9030002@peachjean.com>

No.  Use:

<groupId>org.antlr</groupId>
<artifactId>antlr3-maven-plugin</artifactId>
<version>3.1.1.1</version>

This plugin is derived from the original plugin at codehaus, but has 
been incorporated in the antlr project.

-Jared

Howard Lewis Ship wrote:
> Is this the right plugin artiface?
>
>   <groupId>org.codehaus.mojo</groupId>
>                 <artifactId>antlr3-maven-plugin</artifactId>
>                 <version>3.1.1.1</version>
>
>
> On Fri, Dec 5, 2008 at 9:39 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>   
>> On Fri, 2008-12-05 at 09:30 -0800, Howard Lewis Ship wrote:
>>
>> I don't see it here:
>>
>> http://mirrors.ibiblio.org/pub/mirrors/maven2/org/codehaus/mojo/antlr3-maven-plugin/
>>
>> Where do you think it ended up?
>>
>> It is no longer in the codehaus repository, but maven central. Just
>> reference it and it will be pulled in. It works for me and others on the
>> list.
>>
>> Jim
>>
>> PS: There will be a 3.1.1.2 shortly as I found that 3.1.1.1 did not respect
>> the conversionTimeout configuration.
>>
>> Jim
>>
>> On Wed, Dec 3, 2008 at 2:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>>     
>>> I have just released org.antlr - antlr3-maven-plugin version 3.1.1.1,
>>> which
>>> should sync up with Maven central no later than 4 hours from now
>>> (depending
>>> on when in the sync cycle I deployed the artifacts).
>>>
>>> This release incorporates a few donated re-jigs, but more importantly I
>>> have
>>> re-implemented the dependency checking code as the previous
>>> implementations
>>> were using Collection sorting, which cannot handle interdependencies
>>> correctly. The dependency resolution is now evaluated using a topological
>>> sort and seems to work well.
>>>
>>> The release numbering reflects that this is the first revision to the
>>> plugin
>>> that processes .g files using ANTLR 3.1.1.
>>>
>>> Please let me know if you find errors of course. The generated usage web
>>> site will be updated and deployed to somewhere on www.antlr.org when the
>>> hardware for the web site is upgraded sometime this week.
>>>
>>> Jim
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>>
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>>
>>>       
>>
>>
>>
>>     
>
>
>
>   

From hlship at gmail.com  Fri Dec  5 10:02:38 2008
From: hlship at gmail.com (Howard Lewis Ship)
Date: Fri, 5 Dec 2008 10:02:38 -0800
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
In-Reply-To: <1228498778.4072.259.camel@jimi>
References: <1228341747.14131.316.camel@jimi>
	<ecd0e3310812050930m67982842t677c5be2fea9666@mail.gmail.com>
	<1228498778.4072.259.camel@jimi>
Message-ID: <ecd0e3310812051002o47b16e98gc425c3255b3672d9@mail.gmail.com>

Got it ... missed that the groupId had changed:

  <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1.2</version>


On Fri, Dec 5, 2008 at 9:39 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Fri, 2008-12-05 at 09:30 -0800, Howard Lewis Ship wrote:
>
> I don't see it here:
>
> http://mirrors.ibiblio.org/pub/mirrors/maven2/org/codehaus/mojo/antlr3-maven-plugin/
>
> Where do you think it ended up?
>
> It is no longer in the codehaus repository, but maven central. Just
> reference it and it will be pulled in. It works for me and others on the
> list.
>
> Jim
>
> PS: There will be a 3.1.1.2 shortly as I found that 3.1.1.1 did not respect
> the conversionTimeout configuration.
>
> Jim
>
> On Wed, Dec 3, 2008 at 2:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>> I have just released org.antlr - antlr3-maven-plugin version 3.1.1.1,
>> which
>> should sync up with Maven central no later than 4 hours from now
>> (depending
>> on when in the sync cycle I deployed the artifacts).
>>
>> This release incorporates a few donated re-jigs, but more importantly I
>> have
>> re-implemented the dependency checking code as the previous
>> implementations
>> were using Collection sorting, which cannot handle interdependencies
>> correctly. The dependency resolution is now evaluated using a topological
>> sort and seems to work well.
>>
>> The release numbering reflects that this is the first revision to the
>> plugin
>> that processes .g files using ANTLR 3.1.1.
>>
>> Please let me know if you find errors of course. The generated usage web
>> site will be updated and deployed to somewhere on www.antlr.org when the
>> hardware for the web site is upgraded sometime this week.
>>
>> Jim
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
>
>
>
>



-- 
Howard M. Lewis Ship

Creator Apache Tapestry and Apache HiveMind

From jimi at temporal-wave.com  Fri Dec  5 10:13:17 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 05 Dec 2008 10:13:17 -0800
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
In-Reply-To: <ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>
References: <1228341747.14131.316.camel@jimi>
	<ecd0e3310812050930m67982842t677c5be2fea9666@mail.gmail.com>
	<1228498778.4072.259.camel@jimi>
	<ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>
Message-ID: <1228500797.4072.260.camel@jimi>

On Fri, 2008-12-05 at 09:57 -0800, Howard Lewis Ship wrote:

> Is this the right plugin artiface?
> 
>   <groupId>org.codehaus.mojo</groupId>
>                 <artifactId>antlr3-maven-plugin</artifactId>
>                 <version>3.1.1.1</version>
> 


No it is org.antlr as per teh post to the group:

            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1.2</version>

                <configuration>
...
                </configuration>

                <executions>

                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                    
                </executions>

            </plugin>

> 
> On Fri, Dec 5, 2008 at 9:39 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> > On Fri, 2008-12-05 at 09:30 -0800, Howard Lewis Ship wrote:
> >
> > I don't see it here:
> >
> > http://mirrors.ibiblio.org/pub/mirrors/maven2/org/codehaus/mojo/antlr3-maven-plugin/
> >
> > Where do you think it ended up?
> >
> > It is no longer in the codehaus repository, but maven central. Just
> > reference it and it will be pulled in. It works for me and others on the
> > list.
> >
> > Jim
> >
> > PS: There will be a 3.1.1.2 shortly as I found that 3.1.1.1 did not respect
> > the conversionTimeout configuration.
> >
> > Jim
> >
> > On Wed, Dec 3, 2008 at 2:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> >> I have just released org.antlr - antlr3-maven-plugin version 3.1.1.1,
> >> which
> >> should sync up with Maven central no later than 4 hours from now
> >> (depending
> >> on when in the sync cycle I deployed the artifacts).
> >>
> >> This release incorporates a few donated re-jigs, but more importantly I
> >> have
> >> re-implemented the dependency checking code as the previous
> >> implementations
> >> were using Collection sorting, which cannot handle interdependencies
> >> correctly. The dependency resolution is now evaluated using a topological
> >> sort and seems to work well.
> >>
> >> The release numbering reflects that this is the first revision to the
> >> plugin
> >> that processes .g files using ANTLR 3.1.1.
> >>
> >> Please let me know if you find errors of course. The generated usage web
> >> site will be updated and deployed to somewhere on www.antlr.org when the
> >> hardware for the web site is upgraded sometime this week.
> >>
> >> Jim
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >>
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >>
> >>
> >
> >
> >
> >
> >
> 
> 
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081205/644ecfc8/attachment.html 

From parrt at cs.usfca.edu  Fri Dec  5 10:29:59 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 5 Dec 2008 10:29:59 -0800
Subject: [antlr-interest] new tool by Yang Jiang
Message-ID: <07269EF9-0C89-4BF1-AC50-C97FBEA1421C@cs.usfca.edu>

Hi, here is a nice gui tool from Yang that shows relationship between  
Java parse trees and source code:

http://www.antlr.org/wiki/display/ANTLR3/Tool+showing+grammatical+structure+of+Java+code

Ter

From hlship at gmail.com  Fri Dec  5 11:47:48 2008
From: hlship at gmail.com (Howard Lewis Ship)
Date: Fri, 5 Dec 2008 11:47:48 -0800
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
In-Reply-To: <1228500797.4072.260.camel@jimi>
References: <1228341747.14131.316.camel@jimi>
	<ecd0e3310812050930m67982842t677c5be2fea9666@mail.gmail.com>
	<1228498778.4072.259.camel@jimi>
	<ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>
	<1228500797.4072.260.camel@jimi>
Message-ID: <ecd0e3310812051147q1fb36eb9yff4420a9a731875d@mail.gmail.com>

I'm having a problem; I need to split my grammar into a lexer grammar
and a parser grammar so I can specify a superClass option for the
lexer grammar.

My source files are
src/main/antlr/org/apache/tapestry5/internal/antlr/PropertyTokens.g
and PropertyExpression.g.

The plugin generates a PropertyTokens.tokens file as
target/generated-sources/antlr/org/apache/tapestry5/internal/antlr/PropertyTokens.token

So far, so good.

However, in my PropertyExpression.g file I've tried

options { tokenVocab=PropertyTokens; }

and

options {
  tokenVocab="org/apache/tapestry5/internal/antlr/PropertyTokens";
}

and both fail.  The first should work, but gets:

[INFO] [antlr3:antlr {execution: default}]
org/apache/tapestry5/internal/antlr/PropertyTokens.g
org/apache/tapestry5/internal/antlr/PropertyExpression.g
[ERROR] error(3):  cannot find tokens file
/Users/Howard/work/tapestry5/tapestry-core/target/generated-sources/antlr/PropertyTokens.tokens


I think the plugin is not setting the -lib option correctly (see
Definitive ANTLR Reference, p. 110).

My workaround:


  <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                        <configuration>
                            <!-- This is a hack so that the parser
grammar can locate the tokens file generated
                                 by the lexer grammar. -->

<libDirectory>target/generated-sources/antlr/org/apache/tapestry5/internal/antlr</libDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

This feels like a bug in either the Maven plugin or in ANTLR; it
should be able to find the .tokens file for a lexer grammar generated
from the same package folder.  If I ended up having multiple grammars
in my project, I would have to put them all in a single package folder
for the build to work.


On Fri, Dec 5, 2008 at 10:13 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Fri, 2008-12-05 at 09:57 -0800, Howard Lewis Ship wrote:
>
> Is this the right plugin artiface?
>
>   <groupId>org.codehaus.mojo</groupId>
>                 <artifactId>antlr3-maven-plugin</artifactId>
>                 <version>3.1.1.1</version>
>
>
> No it is org.antlr as per teh post to the group:
>
>             <plugin>
>                 <groupId>org.antlr</groupId>
>                 <artifactId>antlr3-maven-plugin</artifactId>
>                 <version>3.1.1.2</version>
>
>                 <configuration>
> ...
>                 </configuration>
>
>                 <executions>
>
>                     <execution>
>                         <goals>
>                             <goal>antlr</goal>
>                         </goals>
>                     </execution>
>
>                 </executions>
>
>             </plugin>
>
> On Fri, Dec 5, 2008 at 9:39 AM, Jim Idle <jimi at temporal-wave.com> wrote:
>> On Fri, 2008-12-05 at 09:30 -0800, Howard Lewis Ship wrote:
>>
>> I don't see it here:
>>
>>
>> http://mirrors.ibiblio.org/pub/mirrors/maven2/org/codehaus/mojo/antlr3-maven-plugin/
>>
>> Where do you think it ended up?
>>
>> It is no longer in the codehaus repository, but maven central. Just
>> reference it and it will be pulled in. It works for me and others on the
>> list.
>>
>> Jim
>>
>> PS: There will be a 3.1.1.2 shortly as I found that 3.1.1.1 did not
>> respect
>> the conversionTimeout configuration.
>>
>> Jim
>>
>> On Wed, Dec 3, 2008 at 2:02 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>>> I have just released org.antlr - antlr3-maven-plugin version 3.1.1.1,
>>> which
>>> should sync up with Maven central no later than 4 hours from now
>>> (depending
>>> on when in the sync cycle I deployed the artifacts).
>>>
>>> This release incorporates a few donated re-jigs, but more importantly I
>>> have
>>> re-implemented the dependency checking code as the previous
>>> implementations
>>> were using Collection sorting, which cannot handle interdependencies
>>> correctly. The dependency resolution is now evaluated using a topological
>>> sort and seems to work well.
>>>
>>> The release numbering reflects that this is the first revision to the
>>> plugin
>>> that processes .g files using ANTLR 3.1.1.
>>>
>>> Please let me know if you find errors of course. The generated usage web
>>> site will be updated and deployed to somewhere on www.antlr.org when the
>>> hardware for the web site is upgraded sometime this week.
>>>
>>> Jim
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>>
>>>
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>>
>>>
>>
>>
>>
>>
>>
>
>
>
>
>



-- 
Howard M. Lewis Ship

Creator Apache Tapestry and Apache HiveMind

From jimi at temporal-wave.com  Fri Dec  5 11:53:10 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 05 Dec 2008 11:53:10 -0800
Subject: [antlr-interest] New Maven artifact for compiling antlr grammars
In-Reply-To: <ecd0e3310812051147q1fb36eb9yff4420a9a731875d@mail.gmail.com>
References: <1228341747.14131.316.camel@jimi>
	<ecd0e3310812050930m67982842t677c5be2fea9666@mail.gmail.com>
	<1228498778.4072.259.camel@jimi>
	<ecd0e3310812050957l7f2c2007ue8b135c9dda3c643@mail.gmail.com>
	<1228500797.4072.260.camel@jimi>
	<ecd0e3310812051147q1fb36eb9yff4420a9a731875d@mail.gmail.com>
Message-ID: <1228506790.4072.275.camel@jimi>

On Fri, 2008-12-05 at 11:47 -0800, Howard Lewis Ship wrote:

> I'm having a problem; I need to split my grammar into a lexer grammar
> and a parser grammar so I can specify a superClass option for the
> lexer grammar.
> 
> My source files are
> src/main/antlr/org/apache/tapestry5/internal/antlr/PropertyTokens.g
> and PropertyExpression.g.
> 
> The plugin generates a PropertyTokens.tokens file as
> target/generated-sources/antlr/org/apache/tapestry5/internal/antlr/PropertyTokens.token
> 
> So far, so good.
> 
> However, in my PropertyExpression.g file I've tried
> 
> options { tokenVocab=PropertyTokens; }
> 
> and
> 
> options {
>   tokenVocab="org/apache/tapestry5/internal/antlr/PropertyTokens";
> }
> 
> and both fail.  The first should work, but gets:
> 
> [INFO] [antlr3:antlr {execution: default}]
> org/apache/tapestry5/internal/antlr/PropertyTokens.g
> org/apache/tapestry5/internal/antlr/PropertyExpression.g
> [ERROR] error(3):  cannot find tokens file
> /Users/Howard/work/tapestry5/tapestry-core/target/generated-sources/antlr/PropertyTokens.tokens


If you are using an IDE like Netbeans, then when you edit pom.xml, and
type a '<' inside the configuration, you will see that it gives you all
the options. In this case, as your grammar files are in a package, it
cannot infer the lib directory. So you need:

            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>3.1.1.2</version>

                <configuration>

<libDirectory>${basedir}/target/generated-sources/antlr/org/apache/tapestry5/internal/antlr</libDirectory>
                </configuration>

                <executions>

                    <execution>
                        <goals>
                            <goal>antlr</goal>
                        </goals>
                    </execution>
                    
                </executions>

            </plugin>

I was playing with trying to make the plugin perform a better guess for
the lib directory and may come up with something yet, but for now, you
must specify it if it is not antlr/

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081205/6b3c00f5/attachment.html 

From mike at mpagel.de  Fri Dec  5 12:21:17 2008
From: mike at mpagel.de (Mike Pagel)
Date: Fri, 05 Dec 2008 21:21:17 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <306DA0B3-B8B2-4B2D-928F-0099D938DAFC@cs.usfca.edu>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de> <49392520.6010000@mpagel.de>
	<9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>
	<306DA0B3-B8B2-4B2D-928F-0099D938DAFC@cs.usfca.edu>
Message-ID: <49398D3D.9060701@mpagel.de>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081205/decaf128/attachment.html 

From parrt at cs.usfca.edu  Fri Dec  5 12:33:42 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 5 Dec 2008 12:33:42 -0800
Subject: [antlr-interest] Generating text from models
In-Reply-To: <49398D3D.9060701@mpagel.de>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de> <49392520.6010000@mpagel.de>
	<9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>
	<306DA0B3-B8B2-4B2D-928F-0099D938DAFC@cs.usfca.edu>
	<49398D3D.9060701@mpagel.de>
Message-ID: <1E6E5680-962E-4633-A946-CB67A7E93F50@cs.usfca.edu>

ha!  I knew I have done this:

http://www.codegeneration.net/tiki-read_article.php?articleId=65

IGenerate Java and XML code from the reflection API.

>
> thanks a lot. For a full model-to-text transformation you can then  
> merge the model's object tree and the corresponding template at the  
> top of the hierarchy, and the latter then pulls in further more fine- 
> grained templates as it is proceeds. And this is exactly what XPAND  
> or much rather oAW does, where you also (in their workflow XML)  
> associate model root and template root. I know (or better I have  
> read a bit) that oAW can do a lot of very advanced things, but I  
> currently feel that ST is much easier to get to. Needless to say  
> that I am living in .NET country most of the time... :-) So thanks  
> for this tool.

my pleasure

> Still have an issue left though: on a different project I am using  
> Microsoft's T4 code generator from their DSL tools. If you don't  
> know anything about it just think of ASP/JSP generators or JET in  
> Eclipse, templates look like "<% code %> literal text <%= value %>"  
> and so forth. The ability to put in code does allow for bad style,  
> but:
>
> In addition to just querying attributes from the context, you can  
> also pass parameters to (query) functions. And this is mandatory in  
> our case. Our input data is XML and the templates emit portions from  
> the XML by referring to XML nodes through XPATH. So in a template  
> you might find something like
>
> DoIt() first parameter: <%= Value( "//Method[@name='DoIt']/ 
> Parameters[0]" ) %>.
>
> Where Value( string xpathExpr ) is such a query operation to get the  
> referenced data from the XML. The problem is that we have a lot of  
> templates that all need different data portions so hardcoding those  
> queries in form of getters is not an option.
>
> Can ST do this as well?

Well, it depends on what the arguments are.  if it's an attribute or  
string of some kind, you can use the format option and a renderer.

Any time I need to pass an argument back into the model from the  
template, I ask myself whether I am allowing the model to leak into  
the template. If it looks the program, it probably is. That is not  
something you want to happen to your template. In your case, It's hard  
to tell. But, xpath stuff to pull specific nodes from a data structure  
makes me a bit nervous unless you are just descending through the  
various nodes. One could argue that the template should simply be  
displaying data, not encoding how to jump around and ask about tree.  
One test is to ask whether or not you could use that template with  
another data structure. just something to think about.

Ter

From mike at mpagel.de  Fri Dec  5 12:53:32 2008
From: mike at mpagel.de (Mike Pagel)
Date: Fri, 05 Dec 2008 21:53:32 +0100
Subject: [antlr-interest] Generating text from models
In-Reply-To: <1E6E5680-962E-4633-A946-CB67A7E93F50@cs.usfca.edu>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de> <49392520.6010000@mpagel.de>
	<9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>
	<306DA0B3-B8B2-4B2D-928F-0099D938DAFC@cs.usfca.edu>
	<49398D3D.9060701@mpagel.de>
	<1E6E5680-962E-4633-A946-CB67A7E93F50@cs.usfca.edu>
Message-ID: <493994CC.40700@mpagel.de>


>> Can ST do this as well?
> Well, it depends on what the arguments are.  if it's an attribute or 
> string of some kind, you can use the format option and a renderer.
That would probably work but look a little weird I guess.
> Any time I need to pass an argument back into the model from the 
> template, I ask myself whether I am allowing the model to leak into 
> the template. If it looks the program, it probably is. That is not 
> something you want to happen to your template. In your case, It's hard 
> to tell. But, xpath stuff to pull specific nodes from a data structure 
> makes me a bit nervous unless you are just descending through the 
> various nodes. One could argue that the template should simply be 
> displaying data, not encoding how to jump around and ask about tree. 
> One test is to ask whether or not you could use that template with 
> another data structure. just something to think about.
I hear you. However not only the structure but also the higher level 
node values of the processed XML are part of a standardized format, 
where only certain leaf nodes contain variable configuration values. In 
that case I think it is justified to have templates that pull out 
particular values at the given position and generate code for 
corresponding constants for it.

But I do see that this is a really special case... Thanks a lot, I 
really appreciate your thoughts.

Mike

From jdmitchell at gmail.com  Fri Dec  5 16:34:41 2008
From: jdmitchell at gmail.com (John D. Mitchell)
Date: Fri, 5 Dec 2008 16:34:41 -0800
Subject: [antlr-interest] [stringtemplate-interest] Generating text from
	models
In-Reply-To: <1E6E5680-962E-4633-A946-CB67A7E93F50@cs.usfca.edu>
References: <493712E4.1000505@mpagel.de>
	<20081204182421.FDCV29018.viefep15-int.chello.at@edge02.upc.biz>
	<9da4f4520812041032p636cad0fgbcead43c33804706@mail.gmail.com>
	<49384529.7000601@mpagel.de> <49392520.6010000@mpagel.de>
	<9da4f4520812050500u2a6f7757x4c8798985ce51792@mail.gmail.com>
	<306DA0B3-B8B2-4B2D-928F-0099D938DAFC@cs.usfca.edu>
	<49398D3D.9060701@mpagel.de>
	<1E6E5680-962E-4633-A946-CB67A7E93F50@cs.usfca.edu>
Message-ID: <E67837D7-2D8D-4002-840F-20B304304E54@gmail.com>

On Friday 2008.12.05, at 12:33 , Terence Parr wrote:
[...]
>> In addition to just querying attributes from the context, you can
>> also pass parameters to (query) functions. And this is mandatory in
>> our case. Our input data is XML and the templates emit portions from
>> the XML by referring to XML nodes through XPATH. So in a template
>> you might find something like
>>
>> DoIt() first parameter: <%= Value( "//Method[@name='DoIt']/
>> Parameters[0]" ) %>.
>>
>> Where Value( string xpathExpr ) is such a query operation to get the
>> referenced data from the XML. The problem is that we have a lot of
>> templates that all need different data portions so hardcoding those
>> queries in form of getters is not an option.
>>
>> Can ST do this as well?
>
> Well, it depends on what the arguments are.  if it's an attribute or
> string of some kind, you can use the format option and a renderer.
>
> Any time I need to pass an argument back into the model from the
> template, I ask myself whether I am allowing the model to leak into
> the template. If it looks the program, it probably is. That is not
> something you want to happen to your template. In your case, It's hard
> to tell. But, xpath stuff to pull specific nodes from a data structure
> makes me a bit nervous unless you are just descending through the
> various nodes. One could argue that the template should simply be
> displaying data, not encoding how to jump around and ask about tree.
> One test is to ask whether or not you could use that template with
> another data structure. just something to think about.

In addition to Ter's very good points, I can add that in terms of the  
XML'ish nature of this question that switching from a hacked template  
approach to using XQuery is a very good option.

I.e., processing XML and generating X(HT)ML is much more "natural" and  
easier using XQuery than trying to deal with the latest (weirdo :-)  
JSP/ASP/etc. abomination.

To be clear, I still like the enforced separation of the ST approach  
in general but for a lot of XML hacking, XQuery allows for the  
relatively controlled intermingling of processing, structure, and  
hacking that seems to be very prevalent in XML processing (think:  
multi-stage pipelines that aren't clearly thought of as pipelines).   
We use XQuery on the backend of http://markmail.org/ and it generates  
XHTML, JSON, RSS, etc. for the various types of data streams.

Hope this helps,
John


From chainone at gmail.com  Fri Dec  5 22:54:36 2008
From: chainone at gmail.com (chain one)
Date: Sat, 6 Dec 2008 14:54:36 +0800
Subject: [antlr-interest] Turing the option(output=AST) on and off at run
	time
Message-ID: <5a92ffb60812052254y75461a7ejbf4de817ab1c262a@mail.gmail.com>

Is that possible?Due to the memory consuming issue, in the first pass, I
only want to grab some data to be used in the second pass  and at the second
pass, the AST is built up using the same grammar file.
So I need to  turn on  the option(output=AST) at the begin of the second
pass.

Is that possible to do that in ANTLR V3?

Thanks very much!
Best Regards,
Young
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081206/8b1278da/attachment.html 

From iar73 at freemail.hu  Sat Dec  6 08:47:24 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sat, 6 Dec 2008 17:47:24 +0100 (CET)
Subject: [antlr-interest] Experience with Eclipse Antlr plugins?
Message-ID: <freemail.20081106174724.45892@fm26.freemail.hu>

Hello all,

Do you use an Eclipse plugin for developing with Antlr? Did you try more than one? Can you please share some experience, pros and cons, how they match up with the services that AntlrWorks provide?


Thanks,
  Andr?s


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081206/a387d1b3/attachment.html 

From jaluber at gmx.de  Sat Dec  6 09:30:30 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 06 Dec 2008 18:30:30 +0100
Subject: [antlr-interest] Tree Parser Rule - 'throws' my-own-exception
 is	silently ignored
In-Reply-To: <493770B4.9050708@quantdev.com>
References: <4931D15B.5030405@internet.lu> <493770B4.9050708@quantdev.com>
Message-ID: <493AB6B6.2060400@gmx.de>

Michael Lee schrieb:
> Hi,
> 
> I am troubling to throw my-own-exception during tree parsing.
> 
> I have a tree rule - nothing too complicated.
> 
> Here is the snippet
> 
> expression returns [ Expression exp ] *throws* *ExpressionParseException*
> : ^(op='+' a=expression b=expression ) { $exp = 
> NumericOperationExpression.createOperation( op.getText().charAt(0) , 
> (NumericExpression) dynamicToNumeric(a) , (NumericExpression) 
> dynamicToNumeric(b)); }
> 
> 
> However the antlr generates
> 
> /*/ src/main/antlr/Eval.g:63:1: expression returns [ Expression exp ] : 
> *( ^(op= '+' a= expression b= expression ) ....
> public final Expression expression() *throws RecognitionException* {
> Expression exp = null;
> 
> It looks like it is silently dropping 'throws' my-own-exception.
> 
> Is it a bug? Or am I doing wrong?
> 
> Thanks in advance.

It's bug. Just derive your exception from RecognitionException.

Johannes
> 
> Michael Lee
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From iar73 at freemail.hu  Sat Dec  6 13:40:14 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sat, 6 Dec 2008 22:40:14 +0100 (CET)
Subject: [antlr-interest] How to use inline templating with the
	StringTemplate interface
Message-ID: <freemail.20081106224014.78376@fm26.freemail.hu>

Hi,

I'm checking out the templating output feature of Antlr. I started with CMinus.g grammar found in examples-v3.tar.gz. Based on this grammar I created another one, which call templates defined in an external stg file. For example my assignment rule is:

assignment : leftValue DEFINES rightValue -> assignment(left={$leftValue.text}, right={$rightValue.text});

As my grammar is quite simple, I'd like to get rid of the external file. Is there a way I can do all the templating inline?


Thanks,
  Andr?s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081206/26743738/attachment.html 

From jared.bunting at peachjean.com  Sat Dec  6 13:44:28 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Sat, 06 Dec 2008 15:44:28 -0600
Subject: [antlr-interest] How to use inline templating with the
 StringTemplate interface
In-Reply-To: <freemail.20081106224014.78376@fm26.freemail.hu>
References: <freemail.20081106224014.78376@fm26.freemail.hu>
Message-ID: <493AF23C.8040703@peachjean.com>

assignment : leftValue DEFINES rightValue -> 
template(left={$leftValue.text}, right={$rightValue.text}) "content of 
template here";

should work...  (the use of "template" instead of the template name is 
key...)

-Jared

Imre Andr?s wrote:
> Hi,
>
> I'm checking out the templating output feature of Antlr. I started 
> with CMinus.g grammar found in examples-v3.tar.gz. Based on this 
> grammar I created another one, which call templates defined in an 
> external stg file. For example my assignment rule is:
>
> assignment : leftValue DEFINES rightValue -> 
> assignment(left={$leftValue.text}, right={$rightValue.text});
>
> As my grammar is quite simple, I'd like to get rid of the external 
> file. Is there a way I can do all the templating inline?
>
>
> Thanks,
>   Andr?s
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From iar73 at freemail.hu  Sat Dec  6 13:50:54 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sat, 6 Dec 2008 22:50:54 +0100 (CET)
Subject: [antlr-interest] How to use inline templating with the
	StringTemplate interface
In-Reply-To: <493AF23C.8040703@peachjean.com>
Message-ID: <freemail.20081106225054.5542@fm26.freemail.hu>

It works, thanks!

Andr?s


Jared Bunting <jared.bunting at peachjean.com> ?rta: 


> assignment : leftValue DEFINES rightValue -> 
> template(left={$leftValue.text}, right={$rightValue.text}) "content of 
> template here";
> 
> should work...  (the use of "template" instead of the template name is 
> key...)
> 
> -Jared
> 
> Imre Andr?s wrote:
> > Hi,
> >
> > I'm checking out the templating output feature of Antlr. I started 
> > with CMinus.g grammar found in examples-v3.tar.gz. Based on this 
> > grammar I created another one, which call templates defined in an 
> > external stg file. For example my assignment rule is:
> >
> > assignment : leftValue DEFINES rightValue -> 
> > assignment(left={$leftValue.text}, right={$rightValue.text});
> >
> > As my grammar is quite simple, I'd like to get rid of the external 
> > file. Is there a way I can do all the templating inline?
> >
> >
> > Thanks,
> >   Andr?s
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >   
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081206/18936282/attachment.html 

From iar73 at freemail.hu  Sat Dec  6 15:36:25 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sun, 7 Dec 2008 00:36:25 +0100 (CET)
Subject: [antlr-interest] Autoloading an stg file
Message-ID: <freemail.20081107003625.6880@fm26.freemail.hu>

Hi,

Is there an automatic way of loading an stg template group file for a parser?

Lets suppose I have a grammar called MyGrammar.g. The generated MyGrammarParser will automatically have a template group assigned to it, named MyGrammarParserTemplates. It would be nice to have a way to load it from a likely named stg file, without the need of explicitly specifying that filename.


Thanks,
  Andr?s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081207/c62f78e0/attachment.html 

From iar73 at freemail.hu  Sat Dec  6 18:59:39 2008
From: iar73 at freemail.hu (=?ISO-8859-2?Q?Imre_Andr=E1s?=)
Date: Sun, 7 Dec 2008 03:59:39 +0100 (CET)
Subject: [antlr-interest] Ways of collecting result templates
Message-ID: <freemail.20081107035939.2935@fm26.freemail.hu>

Hi,

My grammar processes an assignment list. Collecting result templates in the following way works:

prog : (s+=assignment)+ -> template(in={$s}) "<in>";


The above handles the assignment list as a whole. Now I'd like to do something with each assignment individually. I changed the grammar:

prog : assignmentList -> template(in={$assignmentList.st}) "<in>";
assignmentList : assignment al=assignmentList? -> template(in={$assignment.st}, in2={$al.st}) "[<in>]<\n><in2>";

This results in an error: java.lang.IllegalArgumentException: cannot embed template anonymous in itself


Is there a way to solve this with anonymous templates, or do I have to say goodbye to inline templates at this point?


Thanks,
  Andr?s
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081207/4c4bb1b5/attachment.html 

From vl.homutov at gmail.com  Sun Dec  7 07:35:24 2008
From: vl.homutov at gmail.com (`VL)
Date: Sun, 7 Dec 2008 18:35:24 +0300
Subject: [antlr-interest] Explanation about EOF needed
Message-ID: <aec22fc50812070735i1aba98c0s8a82c20c8defa5@mail.gmail.com>

Hello.

I'm trying to include comments information into my grammar and have
some problems.
Below is the minimal example i have:

========== Cut =================
grammar simple;

// the whole thing: all stuff till the end of file
prog :   commented_kw+ EOF;

// Keyword with optional comment before it or just comment or empty line
commented_kw: COMMENT* varspec* NL;

// key=val
varspec: TKN '=' (TKN);

// token for keys and values
TKN:  ('a'..'z'|'A'..'Z'| '0'..'9')+;

// newline separator
NL : '\n' ;

// whitespace are thrown away
WS:     (' '|'\t'| '\r')+ { $channel=HIDDEN; };

// comment goes till end of line, including it
COMMENT : (' '|'\t')* ( '#' (~'\n')*  ) NL;
========== Cut =================

Here is the input (generic configuration file):

========== Cut =================


# This is one-line comment (global for file)

# This is many one-line comments (global)
# This is many one-line comments (global)
# This is many one-line comments (global)
# This is many one-line comments (global)

# This is comment to var
var=value

# This is comment to many vars
var=value var=value var=value

var=value
# After-var comment

# Pre-Var 1
# Pre-Var 2
# Pre-Var 3
var=value
# After-Var 1
# After-Var 2


# LAST LINE - no newline at the END
========== Cut =================

Everything goes fine, except i'm getting
MismatchedTokenException(0!=0) on the last line.

Well, using such grammar it is expected error, since my comment is
defined to end with NL
and it can't be found.

I tried to modify COMMENT lexer rule to end with (NL|EOF). No effect.
But i have one more
required NL, in commented_kw rule, i changed it to (NL|EOF), and got
error about unreachable
alternative in 'prog' rule. I tried a lot of more variants, trying to
move COMMENT rule into parser
level and more, but i can't understand what's going on.

I'm satisfied with first variant of grammar, but it gives me an error.
How should i modify it to
make it work? Where is my error when i tried to achive my goals?

Thanks.

From jimi at temporal-wave.com  Sun Dec  7 09:07:45 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 07 Dec 2008 09:07:45 -0800
Subject: [antlr-interest] Explanation about EOF needed
In-Reply-To: <aec22fc50812070735i1aba98c0s8a82c20c8defa5@mail.gmail.com>
References: <aec22fc50812070735i1aba98c0s8a82c20c8defa5@mail.gmail.com>
Message-ID: <1228669665.4072.446.camel@jimi>

On Sun, 2008-12-07 at 18:35 +0300, `VL wrote:

> Hello.

Having a newline at the end of a file defines a text file in UNIX, not
having one is basically creating a special condition that you have to
rejig your grammar to accommodate. I find that it generally isn't worth
it and just append a newline to the input source so that it will always
have one. This is much simpler.

Jim

> 
> I'm trying to include comments information into my grammar and have
> some problems.
> Below is the minimal example i have:
> 
> ========== Cut =================
> grammar simple;
> 
> // the whole thing: all stuff till the end of file
> prog :   commented_kw+ EOF;
> 
> // Keyword with optional comment before it or just comment or empty line
> commented_kw: COMMENT* varspec* NL;
> 
> // key=val
> varspec: TKN '=' (TKN);
> 
> // token for keys and values
> TKN:  ('a'..'z'|'A'..'Z'| '0'..'9')+;
> 
> // newline separator
> NL : '\n' ;
> 
> // whitespace are thrown away
> WS:     (' '|'\t'| '\r')+ { $channel=HIDDEN; };
> 
> // comment goes till end of line, including it
> COMMENT : (' '|'\t')* ( '#' (~'\n')*  ) NL;
> ========== Cut =================
> 
> Here is the input (generic configuration file):
> 
> ========== Cut =================
> 
> 
> # This is one-line comment (global for file)
> 
> # This is many one-line comments (global)
> # This is many one-line comments (global)
> # This is many one-line comments (global)
> # This is many one-line comments (global)
> 
> # This is comment to var
> var=value
> 
> # This is comment to many vars
> var=value var=value var=value
> 
> var=value
> # After-var comment
> 
> # Pre-Var 1
> # Pre-Var 2
> # Pre-Var 3
> var=value
> # After-Var 1
> # After-Var 2
> 
> 
> # LAST LINE - no newline at the END
> ========== Cut =================
> 
> Everything goes fine, except i'm getting
> MismatchedTokenException(0!=0) on the last line.
> 
> Well, using such grammar it is expected error, since my comment is
> defined to end with NL
> and it can't be found.
> 
> I tried to modify COMMENT lexer rule to end with (NL|EOF). No effect.
> But i have one more
> required NL, in commented_kw rule, i changed it to (NL|EOF), and got
> error about unreachable
> alternative in 'prog' rule. I tried a lot of more variants, trying to
> move COMMENT rule into parser
> level and more, but i can't understand what's going on.
> 
> I'm satisfied with first variant of grammar, but it gives me an error.
> How should i modify it to
> make it work? Where is my error when i tried to achive my goals?
> 
> Thanks.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081207/71a224f4/attachment.html 

From peter_maciver at hotmail.com  Sun Dec  7 13:54:19 2008
From: peter_maciver at hotmail.com (Peter Maciver)
Date: Sun, 7 Dec 2008 21:54:19 +0000
Subject: [antlr-interest] AntlrWorks Connection Refused
Message-ID: <BAY123-W370E60B1CDD5DD77E718F581FC0@phx.gbl>


Hi there,
 
I have just downloaded AntlrWorks-1.2.2, and am unable to launch the "debugger".
 
Environment Details: 
Windows XP
JDK 1.5
 
I launch the application as 
 
java -Xmx512 -classpath antlrWorks-1.2.2.jar org.antlr.works.IDE
 
Follow the tutorial instructions that loads the "Expr.g" file
 
And when I launch the Debugger, I get the following error:
 
java.net.ConnectException: Connection refused: connect
 
I have changed the port number from 49153 to 49100, to no effect.
 
When I run "netstat", it says that neither port is in use.
 
Any ideas ?
 
pmi
_________________________________________________________________
Get Windows Live Messenger on your Mobile
http://clk.atdmt.com/UKM/go/msnnkmgl0010000001ukm/direct/01/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081207/212b4b96/attachment.html 

From parrt at cs.usfca.edu  Sun Dec  7 14:00:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Dec 2008 14:00:24 -0800
Subject: [antlr-interest] AntlrWorks Connection Refused
In-Reply-To: <BAY123-W370E60B1CDD5DD77E718F581FC0@phx.gbl>
References: <BAY123-W370E60B1CDD5DD77E718F581FC0@phx.gbl>
Message-ID: <50AB38D3-09EA-4CC3-9D8B-E1B6262405E6@cs.usfca.edu>

local firewall issue? try restarting AW.
Ter


From sohail at taggedtype.net  Sun Dec  7 14:21:42 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun, 07 Dec 2008 14:21:42 -0800
Subject: [antlr-interest] sub-tree tree parsing
Message-ID: <ghhi9m$o64$1@ger.gmane.org>

Hi,

I've been out of ANTLR for a little while but I seem to recall that
sub-tree tree parsing was going to be made possible. That is, given a
tree grammar, you could write a parser that would only need to
understand a part of it. This was in contrast to replicating the whole
grammar in each tree parser.

You could call it a "rule-based" tree parser.

Did this ever occur or did I dream it?

-- 
Sohail Somani
http://uint32t.blogspot.com


From parrt at cs.usfca.edu  Sun Dec  7 14:29:27 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Dec 2008 14:29:27 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <ghhi9m$o64$1@ger.gmane.org>
References: <ghhi9m$o64$1@ger.gmane.org>
Message-ID: <408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>


On Dec 7, 2008, at 2:21 PM, Sohail Somani wrote:

> Hi,
>
> I've been out of ANTLR for a little while but I seem to recall that
> sub-tree tree parsing was going to be made possible. That is, given a
> tree grammar, you could write a parser that would only need to
> understand a part of it. This was in contrast to replicating the whole
> grammar in each tree parser.
>
> You could call it a "rule-based" tree parser.
>
> Did this ever occur or did I dream it?

Welcome back Sohail!  Heh, just happened (in my dev branch).  Search  
for tree pattern matching in archives for link to code.

see this too

http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree 
+rewriting+with+patterns
http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree 
+pattern+matching%2C+rewriting+a+reality

Ter

From jaluber at gmx.de  Sun Dec  7 14:52:24 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 07 Dec 2008 23:52:24 +0100
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
References: <ghhi9m$o64$1@ger.gmane.org>
	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
Message-ID: <493C53A8.2030103@gmx.de>

Terence Parr schrieb:
> On Dec 7, 2008, at 2:21 PM, Sohail Somani wrote:
> 
>> Hi,
>>
>> I've been out of ANTLR for a little while but I seem to recall that
>> sub-tree tree parsing was going to be made possible. That is, given a
>> tree grammar, you could write a parser that would only need to
>> understand a part of it. This was in contrast to replicating the whole
>> grammar in each tree parser.
>>
>> You could call it a "rule-based" tree parser.
>>
>> Did this ever occur or did I dream it?
> 
> Welcome back Sohail!  Heh, just happened (in my dev branch).  Search  
> for tree pattern matching in archives for link to code.
> 
> see this too
> 
> http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree 
> +rewriting+with+patterns
> http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree 
> +pattern+matching%2C+rewriting+a+reality
> 
> Ter

Ter, please put your links into "<...>". Otherwise your overly long
links have to pieced together manually, instead being clickable. Compare
above link with

<http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree+pattern+matching%2C+rewriting+a+reality>

Johannes
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From sohail at taggedtype.net  Sun Dec  7 14:56:25 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun, 07 Dec 2008 14:56:25 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
References: <ghhi9m$o64$1@ger.gmane.org>
	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
Message-ID: <ghhkap$u24$1@ger.gmane.org>

Terence Parr wrote:
> On Dec 7, 2008, at 2:21 PM, Sohail Somani wrote:
> 
>> Hi,
>>
>> I've been out of ANTLR for a little while but I seem to recall that
>> sub-tree tree parsing was going to be made possible. That is, given a
>> tree grammar, you could write a parser that would only need to
>> understand a part of it. This was in contrast to replicating the whole
>> grammar in each tree parser.
>>
>> You could call it a "rule-based" tree parser.
>>
>> Did this ever occur or did I dream it?
> 
> Welcome back Sohail!  Heh, just happened (in my dev branch).  Search  
> for tree pattern matching in archives for link to code.
> 
> see this too
> 
> <http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree+rewriting+with+patterns>
> <http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree+pattern+matching%2C+rewriting+a+reality>

Hey Terence,

Thanks for the quick reply. The timing of the addition in your branch is
a nice coincidence!

Is the idea that the rest of the tree passes through unchanged, except
for the parts I am interested in?

-- 
Sohail Somani
http://uint32t.blogspot.com


From parrt at cs.usfca.edu  Sun Dec  7 15:01:59 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Dec 2008 15:01:59 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <493C5452.6030904@taggedtype.net>
References: <ghhi9m$o64$1@ger.gmane.org>
	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
	<493C5452.6030904@taggedtype.net>
Message-ID: <AB4F6EB8-F0CF-4A14-83A1-79DF8144CA1A@cs.usfca.edu>


On Dec 7, 2008, at 2:55 PM, Sohail Somani wrote:
> Thanks for the quick reply. The timing of the addition in your  
> branch is
> a nice coincidence!
>
> Is the idea that the rest of the tree passes through unchanged, except
> for the parts I am interested in?

Indeed.  It does the rewrite in place too. no creating an entirely new  
tree.  i love it.

Ter

From sohail at taggedtype.net  Sun Dec  7 15:17:52 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun, 07 Dec 2008 15:17:52 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <AB4F6EB8-F0CF-4A14-83A1-79DF8144CA1A@cs.usfca.edu>
References: <ghhi9m$o64$1@ger.gmane.org>	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>	<493C5452.6030904@taggedtype.net>
	<AB4F6EB8-F0CF-4A14-83A1-79DF8144CA1A@cs.usfca.edu>
Message-ID: <ghhlj0$1hs$1@ger.gmane.org>

Terence Parr wrote:
> On Dec 7, 2008, at 2:55 PM, Sohail Somani wrote:
>> Thanks for the quick reply. The timing of the addition in your  
>> branch is
>> a nice coincidence!
>>
>> Is the idea that the rest of the tree passes through unchanged, except
>> for the parts I am interested in?
> 
> Indeed.  It does the rewrite in place too. no creating an entirely new  
> tree.  i love it.

Whoo.. That is nice.

It isn't entirely clear but are topdown and bottomup special rules
(understood by ANTLR) here? I'm assuming that the bottomup rule
corresponds to the downup "strategy".

The last time I used ANTLR was ANTLR2 when ANTLR3 only had a Java
target. Looks like I got a bit of reading to do :-)

Sohail


From parrt at cs.usfca.edu  Sun Dec  7 15:28:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Dec 2008 15:28:54 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <ghhlj0$1hs$1@ger.gmane.org>
References: <ghhi9m$o64$1@ger.gmane.org>	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>	<493C5452.6030904@taggedtype.net>
	<AB4F6EB8-F0CF-4A14-83A1-79DF8144CA1A@cs.usfca.edu>
	<ghhlj0$1hs$1@ger.gmane.org>
Message-ID: <5482B72C-FA3B-454F-9FCA-D7B1836F5280@cs.usfca.edu>


On Dec 7, 2008, at 3:17 PM, Sohail Somani wrote:

> Terence Parr wrote:
>> On Dec 7, 2008, at 2:55 PM, Sohail Somani wrote:
>>> Thanks for the quick reply. The timing of the addition in your
>>> branch is
>>> a nice coincidence!
>>>
>>> Is the idea that the rest of the tree passes through unchanged,  
>>> except
>>> for the parts I am interested in?
>>
>> Indeed.  It does the rewrite in place too. no creating an entirely  
>> new
>> tree.  i love it.
>
> Whoo.. That is nice.
>
> It isn't entirely clear but are topdown and bottomup special rules
> (understood by ANTLR) here?

yep. it says which rules to do on its way up or down.

> I'm assuming that the bottomup rule
> corresponds to the downup "strategy".

both are done during downup strategy.  don't do topdown rule if you  
only want bottomup pass.

> The last time I used ANTLR was ANTLR2 when ANTLR3 only had a Java
> target. Looks like I got a bit of reading to do :-)

You sure do!  Look at ANTLRWorks too

Ter

From marek.dudek at gmail.com  Sun Dec  7 15:35:28 2008
From: marek.dudek at gmail.com (Marek Dudek)
Date: Mon, 8 Dec 2008 00:35:28 +0100
Subject: [antlr-interest] Time-out error while running examples
Message-ID: <13afd200812071535peea0dfcv9a74c530d4034d8a@mail.gmail.com>

Hello

I'm reading "The Definitive Antlr Reference..." and doing examples, ones
from "A Quick Tour for the Impatient", Expr.g and Eval.g.
I cannot run the second one, I always get error message saying "Cannot
launch the debugger. Time-out waiting to connect to the remote parser."
and it happens despite the fact that I do not use "Debug Remote" but simply
"Debug". I cannot run it even from command line, program does not respond, I
thing for the same reason
by looking at the code.

I tried with files that I downloaded via links in PDF and it still doesn't
work.

Can anyone help me, please

TIA

Marek Dudek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081208/c5db8dde/attachment.html 

From parrt at cs.usfca.edu  Sun Dec  7 15:42:54 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Dec 2008 15:42:54 -0800
Subject: [antlr-interest] Time-out error while running examples
In-Reply-To: <13afd200812071535peea0dfcv9a74c530d4034d8a@mail.gmail.com>
References: <13afd200812071535peea0dfcv9a74c530d4034d8a@mail.gmail.com>
Message-ID: <66E44274-BD82-4D37-A32A-DE0535758EEE@cs.usfca.edu>

Another java parser dbg process running? I think there might be a case  
where AW leaves a process running. restart AW?
Ter
On Dec 7, 2008, at 3:35 PM, Marek Dudek wrote:

> Hello
>
> I'm reading "The Definitive Antlr Reference..." and doing examples,  
> ones from "A Quick Tour for the Impatient", Expr.g and Eval.g.
> I cannot run the second one, I always get error message saying  
> "Cannot launch the debugger. Time-out waiting to connect to the  
> remote parser."
> and it happens despite the fact that I do not use "Debug Remote" but  
> simply "Debug". I cannot run it even from command line, program does  
> not respond, I thing for the same reason
> by looking at the code.
>
> I tried with files that I downloaded via links in PDF and it still  
> doesn't work.
>
> Can anyone help me, please
>
> TIA
>
> Marek Dudek
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From sohail at taggedtype.net  Sun Dec  7 17:28:02 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Sun, 07 Dec 2008 17:28:02 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
References: <ghhi9m$o64$1@ger.gmane.org>
	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
Message-ID: <ghht73$i42$1@ger.gmane.org>

Terence Parr wrote:
> Welcome back Sohail!  Heh, just happened (in my dev branch).  Search  
> for tree pattern matching in archives for link to code.
> 
> see this too
> 
> http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree 
> +rewriting+with+patterns
> http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree 
> +pattern+matching%2C+rewriting+a+reality

Is it likely that the C target will work with your branch and this new
tree matching code? How do I get access to this development branch?

Thanks!


From parrt at cs.usfca.edu  Sun Dec  7 19:16:52 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 7 Dec 2008 19:16:52 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <ghht73$i42$1@ger.gmane.org>
References: <ghhi9m$o64$1@ger.gmane.org>
	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
	<ghht73$i42$1@ger.gmane.org>
Message-ID: <3BC9E616-4EC0-41A3-9586-456416AB042C@cs.usfca.edu>


On Dec 7, 2008, at 5:28 PM, Sohail Somani wrote:

> Terence Parr wrote:
>> Welcome back Sohail!  Heh, just happened (in my dev branch).  Search
>> for tree pattern matching in archives for link to code.
>>
>> see this too
>>
>> http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree
>> +rewriting+with+patterns
>> http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree
>> +pattern+matching%2C+rewriting+a+reality
>
> Is it likely that the C target will work with your branch and this new
> tree matching code?

it's in my private parrt.dev branch.  I'll be folding in once we get a  
3.1.2 release out.  S, no C version yet, though the code gen changes  
are trivial :)  Just a bit of support code.

Ter

> How do I get access to this development branch?
>
> Thanks!
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Sun Dec  7 21:51:56 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 07 Dec 2008 21:51:56 -0800
Subject: [antlr-interest] sub-tree tree parsing
In-Reply-To: <ghht73$i42$1@ger.gmane.org>
References: <ghhi9m$o64$1@ger.gmane.org>
	<408DBDA7-E819-4E01-902E-94FC41252ED6@cs.usfca.edu>
	<ghht73$i42$1@ger.gmane.org>
Message-ID: <1228715516.4072.450.camel@jimi>

On Sun, 2008-12-07 at 17:28 -0800, Sohail Somani wrote:

> Terence Parr wrote:
> > Welcome back Sohail!  Heh, just happened (in my dev branch).  Search  
> > for tree pattern matching in archives for link to code.
> > 
> > see this too
> > 
> > http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree 
> > +rewriting+with+patterns
> > http://www.antlr.org/wiki/display/~admin/2008/11/29/Woohoo%21+Tree 
> > +pattern+matching%2C+rewriting+a+reality
> 
> Is it likely that the C target will work with your branch and this new
> tree matching code? 


No - I have to write the equivalent code and I won't be in a position to
do that until we have released 3.1.2 and Ter has merged his development
branch back in to the mainline. 


> How do I get access to this development branch?


I see Ter answered already...

Jim

> 
> Thanks!
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081207/90a032f2/attachment.html 

From qwizv9b02 at sneakemail.com  Mon Dec  8 04:15:07 2008
From: qwizv9b02 at sneakemail.com (Hendrik Maryns)
Date: Mon, 08 Dec 2008 13:15:07 +0100
Subject: [antlr-interest] Experience with Eclipse Antlr plugins?
In-Reply-To: <freemail.20081106174724.45892@fm26.freemail.hu>
References: <freemail.20081106174724.45892@fm26.freemail.hu>
Message-ID: <ghj34b$b49$1@ger.gmane.org>

Imre Andr?s schreef:
> Hello all,
> 
> Do you use an Eclipse plugin for developing with Antlr? Did you try more
> than one? Can you please share some experience, pros and cons, how they
> match up with the services that AntlrWorks provide?

I have experimented with AntlrWorks and ANTLR IDE, and after a while
settled for the latter.  Probably the fact that I can do everything
inside Eclipse has also influenced me in this decision.

It is not perfect, though, but the developer of ANTLR IDE has been very
responsive on my bug reports and comments.

H.
-- 
Hendrik Maryns
http://tcl.sfs.uni-tuebingen.de/~hendrik/
==================
Ask smart questions, get good answers:
http://www.catb.org/~esr/faqs/smart-questions.html

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 257 bytes
Desc: OpenPGP digital signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081208/0d86c398/attachment.bin 

From parrt at cs.usfca.edu  Wed Dec 10 16:28:26 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 10 Dec 2008 16:28:26 -0800
Subject: [antlr-interest] hmm...antlr-interest down?
Message-ID: <BBDE7AC3-3CAC-45C3-87CB-FCD5A9770E47@cs.usfca.edu>

Hi, just testing. Don't bother to respond. I will see if it pops up.  
We will be moving to better hardware And upgraded software next week I  
hope. I'm wondering if mailman is hosed even though it says it's okay.

Ter

From lloy0076 at adam.com.au  Thu Dec 11 01:42:58 2008
From: lloy0076 at adam.com.au (David Lloyd)
Date: Thu, 11 Dec 2008 20:12:58 +1030
Subject: [antlr-interest] Objective-C
In-Reply-To: <1228407648.4072.67.camel@jimi>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
Message-ID: <1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>


Jim,

On 05/12/2008, at 2:50 AM, Jim Idle wrote:
> I don't think that Objective-C has been abandoned , but it has not  
> been updated for a long time hence I doubt it is useful at the  
> moment. Hopefully someone will pick it up again. In the meantime,  
> you will need to use the C target I think.

It's still well supported on OS X (i.e. Apple); I tried to get GnuStep  
to behave itself but eventually gave up because it would do all sorts  
of weird stuff to me. That said, the fact a language hasn't been  
updated for a long time doesn't always indicate it's dead (Cobol is  
still there and in frightening places; a supplier bank claimed their  
code was all in Java now but I pointed out their documentation which  
was clearly lifted straight from a COBOL program itself).

DSL

From Philip.Moetteli at tele2.ch  Thu Dec 11 01:54:04 2008
From: Philip.Moetteli at tele2.ch (=?ISO-8859-1?Q?Philip_M=F6tteli?=)
Date: Thu, 11 Dec 2008 10:54:04 +0100
Subject: [antlr-interest] Objective-C
In-Reply-To: <1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
Message-ID: <F09C1DCD-7093-4E5D-BFDD-A47C7540EA3B@tele2.ch>

Am 11.12.2008 um 10:42 schrieb David Lloyd:

> On 05/12/2008, at 2:50 AM, Jim Idle wrote:
>> I don't think that Objective-C has been abandoned , but it has not
>> been updated for a long time hence I doubt it is useful at the
>> moment. Hopefully someone will pick it up again. In the meantime,
>> you will need to use the C target I think.
>
> It's still well supported on OS X (i.e. Apple);

So, where could I get it? Some examples would also help me. I even  
heard of an Xcode plugin?


> I tried to get GnuStep

So you're talking about GSANTLR?
That would be a possibility.


Thanks


From egor at sun.com  Thu Dec 11 03:41:44 2008
From: egor at sun.com (Egor Ushakov)
Date: Thu, 11 Dec 2008 14:41:44 +0300
Subject: [antlr-interest] grammar highlighting in Netbeans
Message-ID: <4940FC78.20209@sun.com>

Hi all,

I've just found a nice Netbeans plugin adding support for .g files:
http://plugins.netbeans.org/PluginPortal/faces/PluginDetailPage.jsp?pluginid=14444

As I understand development has just started, so for now it only can 
highlight .g file and fill navigator.
But it is much more easier to edit grammar files with that!

Egor

From sven.van.echelpoel at empolis.com  Thu Dec 11 06:17:58 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Thu, 11 Dec 2008 15:17:58 +0100
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary nodes from
	real tokens
Message-ID: <1229005078.5865.20.camel@cartman>

Hi,

According to the book you can derive imaginary nodes from real tokens to
take over attributes (such as line number) from the latter. The syntax
for this is :

foo : b='bar' -> ^( BAR[ $b ] )
    ;

However, when you do this with the C target, no line numbers or anything
gets set. After some sleuthing I found the templates in AST.stg that
might be relevant to this. They look like this:

createImaginaryNode(tokenType,hetero,args) ::= <<
<if(hetero)>
<! new MethodNode(IDLabel, args) !>
<hetero>New(<tokenType><if(args)>, <args; separator=", "><endif>)
<else>
<if(args)>

#if <length(args)> == 2
	(<ASTLabelType>)ADAPTOR->createTypeTokenText(ADAPTOR, <tokenType>,
TOKTEXT(<args; separator=", ">))
#else
	(<ASTLabelType>)ADAPTOR->createTypeText(ADAPTOR, <tokenType>,
(pANTLR3_UINT8)<args; separator=", ">)
#endif

<else>
(<ASTLabelType>)ADAPTOR->createTypeText(ADAPTOR, <tokenType>,
(pANTLR3_UINT8)"<tokenType>")
<endif>
<endif>
>>

createRewriteNodeFromElement(token,hetero,args) ::= <<
<if(hetero)>
<hetero>New(stream_<token>->nextToken(stream_<token>)<if(args)>, <args;
separator=", "><endif>)
<else>
<if(args)> <! must create new node from old !>

#if	<length(args)> == 2
(<ASTLabelType>)ADAPTOR->createTypeTokenText(ADAPTOR,
<token>->getType(<token>, TOKTEXT(<token>, <args; separator=", ">)) /*
JIMI */
#else
ADAPTOR->createTypeToken(ADAPTOR, <token>->getType(<token>, <token>,
<args; separator=", ">)
#endif

<else>
stream_<token>->nextNode(stream_<token>)
<endif>
<endif>
>>

In the first one, createImaginaryNode, if you pass one argument to it,
which I'm assuming to be the case, a type from a text is created. In the
second one, createRewriteNodeFromElement, a type from a token is created
with the same number of arguments.

Although I have not dug any further, I can tell from examining the
generated parser code that in an AST rewrite, the createImaginaryNode is
used, resulting in nothing (the cast to pANTLR3_UINT8 probably and
luckily makes it point to a zero, immediately terminating the string).

It can be made to work by passing the second argument (the text), even
though I have no use for that.

foo : b='bar' -> ^( BAR[ $b, "" ] )
    ;

Am I missing something, or should that normally work as advertised? 

Sven


From jimi at temporal-wave.com  Thu Dec 11 08:13:10 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 11 Dec 2008 08:13:10 -0800
Subject: [antlr-interest] Objective-C
In-Reply-To: <1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
Message-ID: <1229011990.8483.1.camel@jimi>

On Thu, 2008-12-11 at 20:12 +1030, David Lloyd wrote:

> Jim,
> 
> On 05/12/2008, at 2:50 AM, Jim Idle wrote:
> > I don't think that Objective-C has been abandoned , but it has not  
> > been updated for a long time hence I doubt it is useful at the  
> > moment. Hopefully someone will pick it up again. In the meantime,  
> > you will need to use the C target I think.
> 
> It's still well supported on OS X (i.e. Apple); I tried to get GnuStep  
> to behave itself but eventually gave up because it would do all sorts  
> of weird stuff to me. That said, the fact a language hasn't been  
> updated for a long time doesn't always indicate it's dead (Cobol is  
> still there and in frightening places; a supplier bank claimed their  
> code was all in Java now but I pointed out their documentation which  
> was clearly lifted straight from a COBOL program itself).
> 
> DSL

You mis-understand - I didn't meant that Objective-C itself was in any
doubt - just that the Objective-C target for ANTLR was a little behind
and I am not clear if anyone is actively working on it at the
moment :-). Personally I don't think any language ever dies a death
really - there is always someone using it somewhere ;-)

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081211/c921654d/attachment.html 

From jimi at temporal-wave.com  Thu Dec 11 08:18:11 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 11 Dec 2008 08:18:11 -0800
Subject: [antlr-interest] grammar highlighting in Netbeans
In-Reply-To: <4940FC78.20209@sun.com>
References: <4940FC78.20209@sun.com>
Message-ID: <1229012291.8483.4.camel@jimi>

On Thu, 2008-12-11 at 14:41 +0300, Egor Ushakov wrote:

> Hi all,
> 
> I've just found a nice Netbeans plugin adding support for .g files:
> http://plugins.netbeans.org/PluginPortal/faces/PluginDetailPage.jsp?pluginid=14444
> 
> As I understand development has just started, so for now it only can 
> highlight .g file and fill navigator.
> But it is much more easier to edit grammar files with that!
> 


That looks like a good start. I also noticed this:

http://hudson.gotdns.com/wiki/display/HUDSON/NetBeansPlugin

Which will be at least of passing interest once we have new hardware and
put Hudson back online at antlr.org (current hardware and configuration
does not have enough resources for Hudson, Confluence, JIRA, Fisheye and
the web site all at once, without a good reconfigure).

Jim


> Egor
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081211/70c52811/attachment.html 

From jimi at temporal-wave.com  Thu Dec 11 08:25:34 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 11 Dec 2008 08:25:34 -0800
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary nodes
 from real tokens
In-Reply-To: <1229005078.5865.20.camel@cartman>
References: <1229005078.5865.20.camel@cartman>
Message-ID: <1229012734.8483.11.camel@jimi>

On Thu, 2008-12-11 at 15:17 +0100, Sven Van Echelpoel wrote:

> Hi,
> 
> According to the book you can derive imaginary nodes from real tokens to
> take over attributes (such as line number) from the latter. The syntax
> for this is :
> 
> foo : b='bar' -> ^( BAR[ $b ] )
>     ;
> 
> However, when you do this with the C target, no line numbers or anything
> gets set. After some sleuthing I found the templates in AST.stg that

...

> 
> It can be made to work by passing the second argument (the text), even
> though I have no use for that.
> 
> foo : b='bar' -> ^( BAR[ $b, "" ] )
>     ;
> 
> Am I missing something, or should that normally work as advertised? 
> 

I'll take a look - does that snippet of code above reproduce it? What
options {} have you got set etc? If you have the time, then a small, but
complete, grammar would be helpful :-)

Jim

> Sven
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081211/8756609c/attachment.html 

From sven.van.echelpoel at empolis.com  Fri Dec 12 00:40:37 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Fri, 12 Dec 2008 09:40:37 +0100
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary
	nodes	from real tokens
In-Reply-To: <1229012734.8483.11.camel@jimi>
References: <1229005078.5865.20.camel@cartman> <1229012734.8483.11.camel@jimi>
Message-ID: <1229071237.6309.9.camel@cartman>

[...]
> > 
> I'll take a look - does that snippet of code above reproduce it? What
> options {} have you got set etc? If you have the time, then a small,
> but complete, grammar would be helpful :-)
> 
It does. I have attached the grammar and and the resulting C file. With
1 argument, this is the code that is generated from that template:

#if 1 == 2
(pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR, BAR,
TOKTEXT(b))
#else        	
(pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, BAR,
(pANTLR3_UINT8)b)
#endif

While, on the other hand, with 2 arguments you get this:

#if 2 == 2
(pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR, BAR, TOKTEXT(b,
""))
#else
(pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, BAR,
(pANTLR3_UINT8)b, "")
#endif

With one argument, you can see that a node is created from the text,
while with 2 arguments the token along with the text is passed.

Thanks for looking into this, even though there is an easy workaround.

Sven

-------------- next part --------------
grammar imgnodes;


options {
  language = C ; 
  output=AST ; 
  
  ASTLabelType = pANTLR3_BASE_TREE;  
}

tokens {
  BAR;
}

//foo : b='bar' -> ^( BAR[ $b, "" ] )
foo : b='bar' -> ^( BAR[ $b ] )
    ;
-------------- next part --------------
A non-text attachment was scrubbed...
Name: imgnodesParser.c
Type: text/x-csrc
Size: 13635 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081212/25c10de8/attachment.bin 

From antlr at mirality.co.nz  Fri Dec 12 02:37:26 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 12 Dec 2008 23:37:26 +1300
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary nodes
 from real tokens
In-Reply-To: <1229005078.5865.20.camel@cartman>
References: <1229005078.5865.20.camel@cartman>
Message-ID: <20081212103736.70B5111EBD4@www.antlr.org>

At 03:17 12/12/2008, Sven Van Echelpoel wrote:
 >According to the book you can derive imaginary nodes from real
 >tokens to take over attributes (such as line number) from the
 >latter. The syntax for this is :
 >
 >foo : b='bar' -> ^( BAR[ $b ] )
 >    ;
[...]
 >In the first one, createImaginaryNode, if you pass one argument 
to
 >it, which I'm assuming to be the case, a type from a text is 
created.
 >In the second one, createRewriteNodeFromElement, a type from a 
token
 >is created with the same number of arguments.
 >
 >Although I have not dug any further, I can tell from examining 
the
 >generated parser code that in an AST rewrite, the
 >createImaginaryNode is used, resulting in nothing (the cast to
 >pANTLR3_UINT8 probably and luckily makes it point to a zero,
 >immediately terminating the string).
 >
 >It can be made to work by passing the second argument (the 
text),
 >even though I have no use for that.

This is just a guess, but I suspect the reason for this is the 
lack of the ability to have overloaded methods in C :)

In Java, you can have one method that accepts two different types 
of parameters, so the template code for the version that passes in 
a string and the version that passes in a token can be identical, 
leaving it up to the Java compiler to figure out which one you 
meant to call.

In C, however, there's no overloading so this is not 
possible.  The template will have to generate calls to 
differently-named functions depending on whether you are passing 
in a string or a token -- and unfortunately, since this is 
target-specific code, there's no (reliable) way for ANTLR to 
detect the type of a single parameter.  So the only option left 
open to it is to settle for detecting whether you're passing one 
parameter or two.

(A native C++ target could remove this limitation again, of 
course.)

The workaround would be to change BAR[$b] to BAR[$b, $b.text], I 
think.


From sven.van.echelpoel at empolis.com  Fri Dec 12 02:49:00 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Fri, 12 Dec 2008 11:49:00 +0100
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary
	nodes	from real tokens
In-Reply-To: <20081212103737.96048434C@pmx11.bertelsmann.de>
References: <1229005078.5865.20.camel@cartman>
	<20081212103737.96048434C@pmx11.bertelsmann.de>
Message-ID: <1229078940.6309.16.camel@cartman>

[...]
> This is just a guess, but I suspect the reason for this is the 
> lack of the ability to have overloaded methods in C :)
> 
Yes
> In Java, you can have one method that accepts two different types 
> of parameters, so the template code for the version that passes in 
> a string and the version that passes in a token can be identical, 
> leaving it up to the Java compiler to figure out which one you 
> meant to call.
> 
> In C, however, there's no overloading so this is not 
> possible.  The template will have to generate calls to 
> differently-named functions depending on whether you are passing 
> in a string or a token -- and unfortunately, since this is 
> target-specific code, there's no (reliable) way for ANTLR to 
> detect the type of a single parameter.  So the only option left 
> open to it is to settle for detecting whether you're passing one 
> parameter or two.

Indeed it does, but the single argument case can never be a text, it is
always a token, at least if I understand this correctly. There are in
fact two templates in AST.stg. There is one that does the right thing
when a single argument is passed, while the other (which is
unfortunately the one that gets invoked in my case) does not.

> 
> (A native C++ target could remove this limitation again, of 
> course.)
> 
> The workaround would be to change BAR[$b] to BAR[$b, $b.text], I 
> think.
> 
Or, the one I picked BAR[$b, "" ], as I have no use for the text.

Sven


From antlr at mirality.co.nz  Fri Dec 12 03:09:30 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 13 Dec 2008 00:09:30 +1300
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary nodes
 from real tokens
In-Reply-To: <1229078940.6309.16.camel@cartman>
References: <1229005078.5865.20.camel@cartman>
	<20081212103737.96048434C@pmx11.bertelsmann.de>
	<1229078940.6309.16.camel@cartman>
Message-ID: <20081212110939.C5BB811EBDA@www.antlr.org>

At 23:49 12/12/2008, Sven Van Echelpoel wrote:
 >Indeed it does, but the single argument case can never be a
 >text, it is always a token, at least if I understand this
 >correctly.

No, I believe you are mistaken there.

   -> FOO["bar"]
   -> FOO[$bar]
   -> FOO[$bar, "baz"]
   -> FOO[FigureSomethingOut($bar, $baz)]
   -> FOO

All of these are perfectly valid ANTLR syntax, and only the first, 
third, and last cases are obvious to ANTLR.  (The second could 
possibly be guessed if a label is being referenced, but if it's a 
parameter then it gets complicated again.  The fourth is just 
impossible.)

 >There are in fact two templates in AST.stg. There is one that
 >does the right thing when a single argument is passed, while
 >the other (which is unfortunately the one that gets invoked
 >in my case) does not.

I haven't actually looked at the templates myself, so I'm just 
going by what you've posted earlier, but this is how it looks to 
me:

Template "createImaginaryNode":
   - if two parameters, call createTypeTokenText, passing in a 
type, a token, and some text.
   - if one parameter, call createTypeText, passing in a type and 
some text.
   - if no parameters, call createTypeText, passing in a type and 
the stringified type.

This template ought to (always!) be called by rewrites of the 
forms shown above.

Template "createRewriteNodeFromElement":
   - if two parameters, call createTypeTokenText, passing in a 
type, a token, and some text.
   - if one parameter, call createTypeToken, passing in a type and 
a token.
   - if no parameters, insert it directly.

This template ought to be called by rewrites of the following 
forms:
   -> FOO
   -> $b
   -> $b["foo"]

(The first one I'm not entirely sure about; if it can produce this 
then it'll only be if there was a FOO matched on the left side of 
the rewrite.  If there couldn't be one then it'll definitely have 
to use the first template instead.)


From oliver.zeigermann at gmail.com  Fri Dec 12 04:36:39 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Fri, 12 Dec 2008 13:36:39 +0100
Subject: [antlr-interest] Complex AST transformaton
Message-ID: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>

Folks!

I am struggeling to how to make a complex AST1 -> AST2 transformation
where the token types of AST1 are completely different from those in
AST2. How do I specify "tokenVocab" in this case? Do I have to create
a token file manually?

Any hints welcome :)

Oliver

From sven.van.echelpoel at empolis.com  Fri Dec 12 04:52:04 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Fri, 12 Dec 2008 13:52:04 +0100
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary
	nodes	from real tokens
In-Reply-To: <20081212110941.445CB75454@pmx3.bertelsmann.de>
References: <1229005078.5865.20.camel@cartman>
	<20081212103737.96048434C@pmx11.bertelsmann.de>
	<1229078940.6309.16.camel@cartman>
	<20081212110941.445CB75454@pmx3.bertelsmann.de>
Message-ID: <1229086324.6309.30.camel@cartman>

On Sat, 2008-12-13 at 00:09 +1300, Gavin Lambert wrote:
> At 23:49 12/12/2008, Sven Van Echelpoel wrote:
>  >Indeed it does, but the single argument case can never be a
>  >text, it is always a token, at least if I understand this
>  >correctly.
> 
> No, I believe you are mistaken there.
> 
>    -> FOO["bar"]
>    -> FOO[$bar]
>    -> FOO[$bar, "baz"]
>    -> FOO[FigureSomethingOut($bar, $baz)]
>    -> FOO
> 
> All of these are perfectly valid ANTLR syntax, and only the first, 
> third, and last cases are obvious to ANTLR.  

OK, I'm willing to believe you there, but this is the table I found on
page 189 of the ANTLR 3 book:

Imaginary Node Constructor Tree Adapter Invocation
T                          adaptor.create(T, "T" )
T []                       adaptor.create(T, "T" )
T [token-ref ]             adaptor.create(T, token-ref )
T [token-ref, "text"]      adaptor.create(T, token-ref, "text" )

It doesn't mention 1 and 4 (your list above), although 4 would work if a
token was returned. 

I just reasoned from the book and, as I did not try to generate Java
(beyond a toy application or two), I assumed that what was in the book
was correct. Still, no harm done, bar[ $b, "" ] works for me.

> 
>  >There are in fact two templates in AST.stg. There is one that
>  >does the right thing when a single argument is passed, while
>  >the other (which is unfortunately the one that gets invoked
>  >in my case) does not.
> 
> I haven't actually looked at the templates myself, so I'm just 
> going by what you've posted earlier, but this is how it looks to 
> me:
> 
> Template "createImaginaryNode":
>    - if two parameters, call createTypeTokenText, passing in a 
> type, a token, and some text.
>    - if one parameter, call createTypeText, passing in a type and 
> some text.
>    - if no parameters, call createTypeText, passing in a type and 
> the stringified type.
> 
> This template ought to (always!) be called by rewrites of the 
> forms shown above.
> 
> Template "createRewriteNodeFromElement":
>    - if two parameters, call createTypeTokenText, passing in a 
> type, a token, and some text.
>    - if one parameter, call createTypeToken, passing in a type and 
> a token.
>    - if no parameters, insert it directly.
> 
> This template ought to be called by rewrites of the following 
> forms:
>    -> FOO
>    -> $b
>    -> $b["foo"]
> 
Ah, I wondered why there were two forms of the template. Can you really
pass constructor arguments to nodes created from token references? Why
would you want to use the info of another token (I can buy the text), as
in the following 2 argument call:

-> $b[ $c, "c" ]

Maybe there are situations I cannot envision right now where this would
be useful. In any case, the examples with the token references you give
above only work with the semantics of createImaginaryNode and not
createRewriteNodeFromElement (3 would not work, as it needs a token
reference)

> (The first one I'm not entirely sure about; if it can produce this 
> then it'll only be if there was a FOO matched on the left side of 
> the rewrite.  If there couldn't be one then it'll definitely have 
> to use the first template instead.)
> 


From Philip.Moetteli at tele2.ch  Fri Dec 12 12:30:15 2008
From: Philip.Moetteli at tele2.ch (=?ISO-8859-1?Q?Philip_M=F6tteli?=)
Date: Fri, 12 Dec 2008 21:30:15 +0100
Subject: [antlr-interest] Checkout ANTLR from CVS or SVN?
In-Reply-To: <1229011990.8483.1.camel@jimi>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
	<1229011990.8483.1.camel@jimi>
Message-ID: <BF5F92FC-2A0B-410B-BF12-8544C17B4ED8@tele2.ch>

Hello,


Is there a CVS or SVN repository, where one can checkout the most  
recent source?


Thanks


From parrt at cs.usfca.edu  Fri Dec 12 14:31:35 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 12 Dec 2008 14:31:35 -0800
Subject: [antlr-interest] Complex AST transformaton
In-Reply-To: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
Message-ID: <B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>

Try a grammar import (from where the new tokens come from).  that  
hsould give a union of AST1/AST2 token types.
Ter
On Dec 12, 2008, at 4:36 AM, Oliver Zeigermann wrote:

> Folks!
>
> I am struggeling to how to make a complex AST1 -> AST2 transformation
> where the token types of AST1 are completely different from those in
> AST2. How do I specify "tokenVocab" in this case? Do I have to create
> a token file manually?
>
> Any hints welcome :)
>
> Oliver
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Fri Dec 12 14:32:26 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 12 Dec 2008 14:32:26 -0800
Subject: [antlr-interest] Checkout ANTLR from CVS or SVN?
In-Reply-To: <BF5F92FC-2A0B-410B-BF12-8544C17B4ED8@tele2.ch>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
	<1229011990.8483.1.camel@jimi>
	<BF5F92FC-2A0B-410B-BF12-8544C17B4ED8@tele2.ch>
Message-ID: <0B957C8E-898D-4081-99E1-DA5716BF186A@cs.usfca.edu>

we have perforce if you want an account.  also:

http://fisheye2.atlassian.com/browse/antlr

but slow to download big tarballs.

Ter
On Dec 12, 2008, at 12:30 PM, Philip M?tteli wrote:

> Hello,
>
>
> Is there a CVS or SVN repository, where one can checkout the most
> recent source?
>
>
> Thanks
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From jimi at temporal-wave.com  Fri Dec 12 15:11:23 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 12 Dec 2008 15:11:23 -0800
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary nodes
 from real tokens
In-Reply-To: <1229071237.6309.9.camel@cartman>
References: <1229005078.5865.20.camel@cartman>
	<1229012734.8483.11.camel@jimi>  <1229071237.6309.9.camel@cartman>
Message-ID: <1229123483.8483.184.camel@jimi>

On Fri, 2008-12-12 at 09:40 +0100, Sven Van Echelpoel wrote:

> [...]
> > > 
> > I'll take a look - does that snippet of code above reproduce it? What
> > options {} have you got set etc? If you have the time, then a small,
> > but complete, grammar would be helpful :-)
> > 
> It does. I have attached the grammar and and the resulting C file. With
> 1 argument, this is the code that is generated from that template:
> 
> #if 1 == 2
> (pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR, BAR,
> TOKTEXT(b))
> #else        	
> (pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, BAR,
> (pANTLR3_UINT8)b)
> #endif
> 
> While, on the other hand, with 2 arguments you get this:
> 
> #if 2 == 2
> (pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR, BAR, TOKTEXT(b,
> ""))
> #else
> (pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, BAR,
> (pANTLR3_UINT8)b, "")
> #endif
> 
> With one argument, you can see that a node is created from the text,
> while with 2 arguments the token along with the text is passed.
> 
> Thanks for looking into this, even though there is an easy workaround.



Ah yes -  I should have documented this better (and will), but there is
no workaround in the templates for this because the code generator
relies on overloaded functions in Java/C# etc. With one argument, I have
to assume the one type, and with 2 arguments, the other. Unless we
change how this is generated in templates (I think I raised this issue
before but forget), it will have to remain this way I am afraid.

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081212/1e69b51f/attachment.html 

From Philip.Moetteli at tele2.ch  Fri Dec 12 15:14:23 2008
From: Philip.Moetteli at tele2.ch (=?WINDOWS-1252?Q?Philip_M=F6tteli?=)
Date: Sat, 13 Dec 2008 00:14:23 +0100
Subject: [antlr-interest] Checkout ANTLR from CVS or SVN?
In-Reply-To: <0B957C8E-898D-4081-99E1-DA5716BF186A@cs.usfca.edu>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
	<1229011990.8483.1.camel@jimi>
	<BF5F92FC-2A0B-410B-BF12-8544C17B4ED8@tele2.ch>
	<0B957C8E-898D-4081-99E1-DA5716BF186A@cs.usfca.edu>
Message-ID: <04B0AA77-1212-4587-A40E-A20ACBE52EAC@tele2.ch>

Am 12.12.2008 um 23:32 schrieb Terence Parr:

> we have perforce if you want an account.

If there's read access anonymously, I would prefer. If not, I also  
happily use an account.
Perhaps I will be able one day to help out with the ObjC target?


> also:
>
> http://fisheye2.atlassian.com/browse/antlr
>
> but slow to download big tarballs.

I tried it, but just couldn't find out how to check out more than one  
single file at once. Is there a way to check out a complete directory?  
Do I need a login? Is that the problem?


Thanks



From parrt at cs.usfca.edu  Fri Dec 12 15:55:37 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 12 Dec 2008 15:55:37 -0800
Subject: [antlr-interest] Checkout ANTLR from CVS or SVN?
In-Reply-To: <04B0AA77-1212-4587-A40E-A20ACBE52EAC@tele2.ch>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
	<1229011990.8483.1.camel@jimi>
	<BF5F92FC-2A0B-410B-BF12-8544C17B4ED8@tele2.ch>
	<0B957C8E-898D-4081-99E1-DA5716BF186A@cs.usfca.edu>
	<04B0AA77-1212-4587-A40E-A20ACBE52EAC@tele2.ch>
Message-ID: <F367EBEE-7D92-4F8D-82B4-87E32E362D33@cs.usfca.edu>

wow. I don't see the download anymore either!  Well, hudson is down  
right now because it is taking too much memory. My box died and I'm  
waiting on a replacement. It will have more memory and we will install  
all the latest software. In the meantime, send me a private e-mail  
with the userid You want. No password will be necessary.

perforce is antlr.org:666

Ter
On Dec 12, 2008, at 3:14 PM, Philip M?tteli wrote:

> Am 12.12.2008 um 23:32 schrieb Terence Parr:
>
>> we have perforce if you want an account.
>
> If there's read access anonymously, I would prefer. If not, I also
> happily use an account.
> Perhaps I will be able one day to help out with the ObjC target?
>
>
>> also:
>>
>> http://fisheye2.atlassian.com/browse/antlr
>>
>> but slow to download big tarballs.
>
> I tried it, but just couldn't find out how to check out more than one
> single file at once. Is there a way to check out a complete directory?
> Do I need a login? Is that the problem?
>
>
> Thanks
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From bill at qswtools.com  Fri Dec 12 16:10:08 2008
From: bill at qswtools.com (Bill Cox)
Date: Fri, 12 Dec 2008 16:10:08 -0800
Subject: [antlr-interest] antlr on Mac OS X
Message-ID: <f7372f920812121610s7ee96b63i8a8b4de7b452b99c@mail.gmail.com>

Hi Folks,

The Definitive ANTLR Reference says that antlr is shipped with Mac OS
X.  I have a machine with 10.4 (Tiger) and Xcode installed on it, and
can't find what PATH and CLASSPATH should point to it.

Anybody else running MAC OS X?  Where's the ANTLR installation, please?


TIA!
Bill

From parrt at cs.usfca.edu  Fri Dec 12 16:17:24 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 12 Dec 2008 16:17:24 -0800
Subject: [antlr-interest] antlr on Mac OS X
In-Reply-To: <f7372f920812121610s7ee96b63i8a8b4de7b452b99c@mail.gmail.com>
References: <f7372f920812121610s7ee96b63i8a8b4de7b452b99c@mail.gmail.com>
Message-ID: <8FEF1CA6-286D-4A34-B734-3EA246F7AD3A@cs.usfca.edu>

It's used in X code, numbers, and so on. I'm not sure that they make  
the tools available. Regardless, it will be an old version. You should  
just grab the latest from the download page.

Ter
On Dec 12, 2008, at 4:10 PM, Bill Cox wrote:

> Hi Folks,
>
> The Definitive ANTLR Reference says that antlr is shipped with Mac OS
> X.  I have a machine with 10.4 (Tiger) and Xcode installed on it, and
> can't find what PATH and CLASSPATH should point to it.
>
> Anybody else running MAC OS X?  Where's the ANTLR installation,  
> please?
>
>
> TIA!
> Bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From antlr at mirality.co.nz  Fri Dec 12 18:40:05 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 13 Dec 2008 15:40:05 +1300
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary nodes
 from real tokens
In-Reply-To: <1229086324.6309.30.camel@cartman>
References: <1229005078.5865.20.camel@cartman>
	<20081212103737.96048434C@pmx11.bertelsmann.de>
	<1229078940.6309.16.camel@cartman>
	<20081212110941.445CB75454@pmx3.bertelsmann.de>
	<1229086324.6309.30.camel@cartman>
Message-ID: <20081213024018.6A05D11EBFA@www.antlr.org>

At 01:52 13/12/2008, Sven Van Echelpoel wrote:
 >Ah, I wondered why there were two forms of the template. Can you 

 >really pass constructor arguments to nodes created from token
 >references?  Why would you want to use the info of another token 

 >(I can buy the text), as in the following 2 argument call:
 >
 >-> $b[ $c, "c" ]

I think you've misinterpreted what I was saying.  I'm fairly sure 
that what you've posted there is *not* legal (it doesn't make 
sense to pass two tokens into one construction expression).

As far as I know, the following are the only valid token 
construction expressions (I could be wrong about some of the 
specifics, though):

   -> FOO
Copy existing token FOO, or create imaginary token FOO with no 
context.

   -> FOO["bar"]
Copy existing token FOO but give it "bar" as text, or create 
imaginary token FOO with "bar" as text and no context.

   -> FOO[$b]
Copy existing token in $b but change the type to FOO.

   -> FOO[$b, "bar"]
Copy existing token in $b but change the type to FOO and the text 
to "bar".

   -> $b
Copy existing token in $b.

   -> $b["bar"]
Copy existing token in $b, but change the text to "bar".

(And unfortunately, the C target can't distinguish between #2 and 
#3 because the expression can be such that it can't statically 
tell whether it returns a string or a token.)


From lloy0076 at adam.com.au  Fri Dec 12 20:32:00 2008
From: lloy0076 at adam.com.au (David Lloyd)
Date: Sat, 13 Dec 2008 15:02:00 +1030
Subject: [antlr-interest] Objective-C
In-Reply-To: <1229011990.8483.1.camel@jimi>
References: <D93F580E-3936-4DDA-9923-1E1374A3386A@tele2.ch>
	<1228407648.4072.67.camel@jimi>
	<1A8CF699-B32F-493B-8EA6-1CC85369222B@adam.com.au>
	<1229011990.8483.1.camel@jimi>
Message-ID: <40E1D0D4-F3F6-4541-B40C-8FAE769E7207@adam.com.au>


Jim,

On 12/12/2008, at 2:43 AM, Jim Idle wrote:
>> You mis-understand - I didn't meant that Objective-C itself was in  
>> any doubt - just that the Objective-C target for ANTLR was a little  
>> behind and I am not clear if anyone is actively working on it at  
>> the moment :-). Personally I don't think any language ever dies a  
>> death really - there is always someone using it somewhere ;-)
Oops - sorry I thought you meant the "language" not the Antlr port for  
it.

DSL
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081213/ce784879/attachment.html 

From oliver.zeigermann at gmail.com  Sat Dec 13 03:07:05 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 13 Dec 2008 12:07:05 +0100
Subject: [antlr-interest] Complex AST transformaton
In-Reply-To: <B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
	<B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>
Message-ID: <9da4f4520812130307y7de11b9ag33cc28bd37513076@mail.gmail.com>

Oh, I did not know about grammar import. Nice.

Thanks for the help!

I have not properly described my problem, though. I have the following
processing chain:

Input --Lexer--> Token Stream

--Parser--> AST0

--Tree Transformer--> AST1 (still having the token types of defined in
the parser)

--Tree Translator--> AST2 (having a completely new set of token types)

--Tree Template Emitter--> Final Output

As the token types used in AST1 are defined in the parser, how could I
use grammar import from AST2? I guess that does not work, right? There
will be a clash of token types anyway?!

Oliver

2008/12/12 Terence Parr <parrt at cs.usfca.edu>:
> Try a grammar import (from where the new tokens come from).  that hsould
> give a union of AST1/AST2 token types.
> Ter
> On Dec 12, 2008, at 4:36 AM, Oliver Zeigermann wrote:
>
>> Folks!
>>
>> I am struggeling to how to make a complex AST1 -> AST2 transformation
>> where the token types of AST1 are completely different from those in
>> AST2. How do I specify "tokenVocab" in this case? Do I have to create
>> a token file manually?
>>
>> Any hints welcome :)
>>
>> Oliver
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From oliver.zeigermann at gmail.com  Sat Dec 13 03:18:56 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 13 Dec 2008 12:18:56 +0100
Subject: [antlr-interest] Again wildcards in tree grammars
Message-ID: <9da4f4520812130318l54ffff14j97e4cb977e188b96@mail.gmail.com>

This rule in a tree grammar

child : childNode=. {System.out.println("Child="+$childNode.text);} ;

is accepted by the ANTLR tool without problems, but the generated code
is broken, as there is a catch block for an exception
(RecognitionException) that is never thrown:

    public final SQLEmitter.child_return child() throws RecognitionException {
        SQLEmitter.child_return retval = new SQLEmitter.child_return();
        retval.start = input.LT(1);

        CommonTree childNode=null;

        try {
            // T:\\FlexOCL\\workspace\\OCL\\SQLEmitter.g:17:7: (childNode= . )
            // T:\\FlexOCL\\workspace\\OCL\\SQLEmitter.g:17:9: childNode= .
            {
            childNode=(CommonTree)input.LT(1);
            matchAny(input);
            System.out.println("Child="+(childNode!=null?childNode.getText():null));

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return retval;
    }


Error: Unreachable catch block for RecognitionException. This
exception is never thrown from the try statement body.

This seems to be a problem in the Java emitter templates, right?

Oliver

From oliver.zeigermann at gmail.com  Sat Dec 13 04:03:51 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sat, 13 Dec 2008 13:03:51 +0100
Subject: [antlr-interest] AST construction: partial null trees
Message-ID: <9da4f4520812130403j2fbb9738r908fdd91ae0c3f17@mail.gmail.com>

I have not investigated why, but including partial null trees often
makes the whole generated ASTs null which makes debugging really hard.

Am I doing anything wrong, or could that indeed be handled more
gracefully by ANTLR?

As an example have a look at such a parser grammar rule creating an AST

quantorCall
	: quantor parameters -> ^( QUANTORCALL quantor parameters)
	;

which indeed would mess up my complete parsetree for reasons that are
not obvious at first glance.

However, even though parameters are not syntactically optional, they
can still return a null tree when the list of parameters is empty. If
so, the whole tree is messed up.

Of course, adding a '?' to the tree generation part of parameters fixes this:

quantorCall
	: quantor parameters -> ^( QUANTORCALL quantor parameters?)
	;

But should that really be necessary?

Or is it even considered bad style to return a null tree from a subrule?

Any input welcome!

Cheers

Oliver

From mario.prada at gmail.com  Sat Dec 13 11:42:30 2008
From: mario.prada at gmail.com (Mario Prada)
Date: Sat, 13 Dec 2008 20:42:30 +0100
Subject: [antlr-interest] How to distinguish between integer an binary
	number?
Message-ID: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>

I need to distinguish between integer an binary number in my grammar.<P>
In Lexer I have this code:
<P>
<font size=2><pre>
BINARIO : (BIN_DIGIT)+;
INT :   DIGIT+ ;
fragment BIN_DIGIT
: '0'|'1';
fragment DIGIT
    :    '0'..'9';
</pre></font>
<P>
and in Parser, when I have a grammar rule with an INT token, it seems to
work, but this error appears:
<P>
mismatched input '1' expecting INT
<P>
How can I solve this problem?

Thanks in advance.

-- 
Mario Prada Arroyo
----------------------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081213/c3e8eb33/attachment.html 

From jaluber at gmx.de  Sat Dec 13 12:31:33 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 13 Dec 2008 21:31:33 +0100
Subject: [antlr-interest] How to distinguish between integer an binary
 number?
In-Reply-To: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
References: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
Message-ID: <49441BA5.9060301@gmx.de>

Mario Prada schrieb:
> I need to distinguish between integer an binary number in my grammar.<P>
> In Lexer I have this code:
> <P>
> <font size=2><pre>
> BINARIO : (BIN_DIGIT)+;
> INT :   DIGIT+ ;
> fragment BIN_DIGIT
> : '0'|'1';
> fragment DIGIT
>     :    '0'..'9';
> </pre></font>
> <P>
> and in Parser, when I have a grammar rule with an INT token, it seems to
> work, but this error appears:
> <P>
> mismatched input '1' expecting INT
> <P>
> How can I solve this problem?

You actually can't do that in the lexer. ANTLR does lexing all in-front,
before even the parser sees the first token. Thus all numbers fitting
the binary pattern are BINARIOs, even if they are supposed to be normal
numbers. The solution is make one lexer rule for all kinds of numbers
and to check only in the parser, if a number contains only zeros and ones.

Johannes
> 
> Thanks in advance.
> 
> -- 
> Mario Prada Arroyo
> ----------------------------------------------------------------------------------------------------------
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From sohail at taggedtype.net  Sat Dec 13 12:40:31 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Sat, 13 Dec 2008 12:40:31 -0800
Subject: [antlr-interest] How to distinguish between integer an binary
	number?
In-Reply-To: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
References: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
Message-ID: <gi16jv$jpn$1@ger.gmane.org>

You can use a prefix or a suffix to distinguish. I find it hard to
determine whether 1001 is 1001 base 2 or 1001 base 10. A good compromise
could be #b1001 to indicate numbers in base 2.

Mario Prada wrote:
> I need to distinguish between integer an binary number in my grammar.<P>
> In Lexer I have this code:
> <P>
> <font size=2><pre>
> BINARIO : (BIN_DIGIT)+;
> INT :   DIGIT+ ;
> fragment BIN_DIGIT
> : '0'|'1';
> fragment DIGIT
>     :    '0'..'9';
> </pre></font>
> <P>
> and in Parser, when I have a grammar rule with an INT token, it seems to
> work, but this error appears:
> <P>
> mismatched input '1' expecting INT
> <P>
> How can I solve this problem?
> 
> Thanks in advance.


From mario.prada at gmail.com  Sat Dec 13 14:39:56 2008
From: mario.prada at gmail.com (Mario Prada)
Date: Sat, 13 Dec 2008 23:39:56 +0100
Subject: [antlr-interest] How to distinguish between integer an binary
	number?
In-Reply-To: <49441BA5.9060301@gmx.de>
References: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
	<49441BA5.9060301@gmx.de>
Message-ID: <42afe7630812131439x5169920bw85487369aec134ad@mail.gmail.com>

Thanks all for the quick responses.
I?ll try to maintain the two lexer rules, and manage them from the parser.


Mario Prada

On Sat, Dec 13, 2008 at 9:31 PM, Johannes Luber <jaluber at gmx.de> wrote:

> Mario Prada schrieb:
> > I need to distinguish between integer an binary number in my grammar.<P>
> > In Lexer I have this code:
> > <P>
> > <font size=2><pre>
> > BINARIO : (BIN_DIGIT)+;
> > INT :   DIGIT+ ;
> > fragment BIN_DIGIT
> > : '0'|'1';
> > fragment DIGIT
> >     :    '0'..'9';
> > </pre></font>
> > <P>
> > and in Parser, when I have a grammar rule with an INT token, it seems to
> > work, but this error appears:
> > <P>
> > mismatched input '1' expecting INT
> > <P>
> > How can I solve this problem?
>
> You actually can't do that in the lexer. ANTLR does lexing all in-front,
> before even the parser sees the first token. Thus all numbers fitting
> the binary pattern are BINARIOs, even if they are supposed to be normal
> numbers. The solution is make one lexer rule for all kinds of numbers
> and to check only in the parser, if a number contains only zeros and ones.
>
> Johannes
> >
> > Thanks in advance.
> >
> > --
> > Mario Prada Arroyo
> >
> ----------------------------------------------------------------------------------------------------------
> >
> >
> > ------------------------------------------------------------------------
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081213/e8719451/attachment.html 

From antlr at mirality.co.nz  Sat Dec 13 15:15:17 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 14 Dec 2008 12:15:17 +1300
Subject: [antlr-interest] How to distinguish between integer an binary
 number?
In-Reply-To: <49441BA5.9060301@gmx.de>
References: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
	<49441BA5.9060301@gmx.de>
Message-ID: <20081213231530.2DFC611EBDD@www.antlr.org>

At 09:31 14/12/2008, Johannes Luber wrote:
 >Mario Prada schrieb:
 >> I need to distinguish between integer an binary number in
 >> my grammar.<P>
[...]
 >You actually can't do that in the lexer. ANTLR does lexing all
 >in-front, before even the parser sees the first token. Thus
 >all numbers fitting the binary pattern are BINARIOs, even if
 >they are supposed to be normal numbers. The solution is make
 >one lexer rule for all kinds of numbers and to check only in
 >the parser, if a number contains only zeros and ones.

Another possibility is to replace all usages of "INT" in the 
parser with "integer", then define a new rule like so:

integer : INT | BINARIO;

This way the lexer will still generate distinct INT and BINARIO 
tokens, but if the parser context is expecting an integer, it will 
accept both.  (If you're building an AST, you will probably also 
want to add a rewrite to convert the BINARIO token to an INT token 
for the AST.)

As Sohail said, though, if you have the luxury of (re)defining the 
language then you should consider adding some lexically-obvious 
prefix or suffix to distinguish binary constants from decimal 
constants.  That should help to remove some of the confusion both 
on ANTLR's part and potentially that of anyone reading the input 
file.


From lgcraymer at yahoo.com  Sat Dec 13 19:16:35 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sat, 13 Dec 2008 19:16:35 -0800 (PST)
Subject: [antlr-interest] Complex AST transformaton
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
	<B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>
	<9da4f4520812130307y7de11b9ag33cc28bd37513076@mail.gmail.com>
Message-ID: <70110.78596.qm@web55905.mail.re3.yahoo.com>

What Ter meant was to import the AST2 token types into the lexer (and, indirectly, into the parser).  Basically, reserve the AST2 types before the parser token types are determined.

--Loring



----- Original Message ----
> From: Oliver Zeigermann <oliver.zeigermann at gmail.com>
> To: Terence Parr <parrt at cs.usfca.edu>
> Cc: antlr-interest Interest <antlr-interest at antlr.org>
> Sent: Saturday, December 13, 2008 3:07:05 AM
> Subject: Re: [antlr-interest] Complex AST transformaton
> 
> Oh, I did not know about grammar import. Nice.
> 
> Thanks for the help!
> 
> I have not properly described my problem, though. I have the following
> processing chain:
> 
> Input --Lexer--> Token Stream
> 
> --Parser--> AST0
> 
> --Tree Transformer--> AST1 (still having the token types of defined in
> the parser)
> 
> --Tree Translator--> AST2 (having a completely new set of token types)
> 
> --Tree Template Emitter--> Final Output
> 
> As the token types used in AST1 are defined in the parser, how could I
> use grammar import from AST2? I guess that does not work, right? There
> will be a clash of token types anyway?!
> 
> Oliver
> 
> 2008/12/12 Terence Parr :
> > Try a grammar import (from where the new tokens come from).  that hsould
> > give a union of AST1/AST2 token types.
> > Ter
> > On Dec 12, 2008, at 4:36 AM, Oliver Zeigermann wrote:
> >
> >> Folks!
> >>
> >> I am struggeling to how to make a complex AST1 -> AST2 transformation
> >> where the token types of AST1 are completely different from those in
> >> AST2. How do I specify "tokenVocab" in this case? Do I have to create
> >> a token file manually?
> >>
> >> Any hints welcome :)
> >>
> >> Oliver
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From bill at qswtools.com  Sat Dec 13 22:04:18 2008
From: bill at qswtools.com (Bill Cox)
Date: Sat, 13 Dec 2008 22:04:18 -0800
Subject: [antlr-interest] possible type in The Definitive ...
Message-ID: <f7372f920812132204o48dd1122i7b00f697b39ff63b@mail.gmail.com>

Hi Folks,

The CLASSPATH definition on page 10 of TDAR seems to mean that the
class files that you create must be in pne pf the antlr installation
folders.  Am I missing something?  Wouldn't the CLASSPATH be more
useful if it included the current folder, like this"

/usr/local/antlr/lib/antlr-3.1.1.jar:/usr/local/antlr/lib/antlr-2.7.7.jar:/usr/local/antlr/lib/antlr-3.1.1-runtime.jar:/usr/local/antlr/lib/stringtemplate-3.2.jar:.

See the colon and period at the end?  This will allow the java command
to search the current folder, where presumably the reader has typed in
the example .java files.

It seems to me that the book's examples around page 10 would work
better if this were true.
Or (more likely) I've missed something...

Regards,
Bill

From oliver.zeigermann at gmail.com  Sun Dec 14 02:46:46 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 14 Dec 2008 11:46:46 +0100
Subject: [antlr-interest] Complex AST transformaton
In-Reply-To: <70110.78596.qm@web55905.mail.re3.yahoo.com>
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
	<B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>
	<9da4f4520812130307y7de11b9ag33cc28bd37513076@mail.gmail.com>
	<70110.78596.qm@web55905.mail.re3.yahoo.com>
Message-ID: <9da4f4520812140246x3feb4d16m2ad8668ec4b35f2a@mail.gmail.com>

How can I import tree token types into a lexer? Importing a tree
grammar into a lexer grammar is no allowd.

Oliver

2008/12/14 Loring Craymer <lgcraymer at yahoo.com>:
> What Ter meant was to import the AST2 token types into the lexer (and, indirectly, into the parser).  Basically, reserve the AST2 types before the parser token types are determined.
>
> --Loring
>
>
>
> ----- Original Message ----
>> From: Oliver Zeigermann <oliver.zeigermann at gmail.com>
>> To: Terence Parr <parrt at cs.usfca.edu>
>> Cc: antlr-interest Interest <antlr-interest at antlr.org>
>> Sent: Saturday, December 13, 2008 3:07:05 AM
>> Subject: Re: [antlr-interest] Complex AST transformaton
>>
>> Oh, I did not know about grammar import. Nice.
>>
>> Thanks for the help!
>>
>> I have not properly described my problem, though. I have the following
>> processing chain:
>>
>> Input --Lexer--> Token Stream
>>
>> --Parser--> AST0
>>
>> --Tree Transformer--> AST1 (still having the token types of defined in
>> the parser)
>>
>> --Tree Translator--> AST2 (having a completely new set of token types)
>>
>> --Tree Template Emitter--> Final Output
>>
>> As the token types used in AST1 are defined in the parser, how could I
>> use grammar import from AST2? I guess that does not work, right? There
>> will be a clash of token types anyway?!
>>
>> Oliver
>>
>> 2008/12/12 Terence Parr :
>> > Try a grammar import (from where the new tokens come from).  that hsould
>> > give a union of AST1/AST2 token types.
>> > Ter
>> > On Dec 12, 2008, at 4:36 AM, Oliver Zeigermann wrote:
>> >
>> >> Folks!
>> >>
>> >> I am struggeling to how to make a complex AST1 -> AST2 transformation
>> >> where the token types of AST1 are completely different from those in
>> >> AST2. How do I specify "tokenVocab" in this case? Do I have to create
>> >> a token file manually?
>> >>
>> >> Any hints welcome :)
>> >>
>> >> Oliver
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>
>> >
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>
>

From antlr at mirality.co.nz  Sun Dec 14 03:01:12 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 15 Dec 2008 00:01:12 +1300
Subject: [antlr-interest] Complex AST transformaton
In-Reply-To: <9da4f4520812140246x3feb4d16m2ad8668ec4b35f2a@mail.gmail.co
 m>
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
	<B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>
	<9da4f4520812130307y7de11b9ag33cc28bd37513076@mail.gmail.com>
	<70110.78596.qm@web55905.mail.re3.yahoo.com>
	<9da4f4520812140246x3feb4d16m2ad8668ec4b35f2a@mail.gmail.com>
Message-ID: <20081214110123.B8DDA11EAE0@www.antlr.org>

At 23:46 14/12/2008, Oliver Zeigermann wrote:
 >How can I import tree token types into a lexer? Importing a tree
 >grammar into a lexer grammar is no allowd.

I'm fairly sure that you can import a .tokens file into a lexer 
via the importVocab option.


From oliver.zeigermann at gmail.com  Sun Dec 14 08:06:50 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 14 Dec 2008 17:06:50 +0100
Subject: [antlr-interest] Complex AST transformaton
In-Reply-To: <4944e783.0b0bca0a.6c1e.ffffb041SMTPIN_ADDED@mx.google.com>
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>
	<B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>
	<9da4f4520812130307y7de11b9ag33cc28bd37513076@mail.gmail.com>
	<70110.78596.qm@web55905.mail.re3.yahoo.com>
	<9da4f4520812140246x3feb4d16m2ad8668ec4b35f2a@mail.gmail.com>
	<4944e783.0b0bca0a.6c1e.ffffb041SMTPIN_ADDED@mx.google.com>
Message-ID: <9da4f4520812140806l5f6b4086g3d78c4f6f511a4ec@mail.gmail.com>

importVocab is ANTLR2, but there is tokenVocab for ANTLR3. You can use
it to define the complete token set, but it does not seem to do a
merge of token types, though.

2008/12/14 Gavin Lambert <antlr at mirality.co.nz>:
> At 23:46 14/12/2008, Oliver Zeigermann wrote:
>>How can I import tree token types into a lexer? Importing a tree
>>grammar into a lexer grammar is no allowd.
>
> I'm fairly sure that you can import a .tokens file into a lexer via the
> importVocab option.
>
>

From jaluber at gmx.de  Sun Dec 14 08:58:34 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 14 Dec 2008 17:58:34 +0100
Subject: [antlr-interest] Complex AST transformaton
In-Reply-To: <9da4f4520812140806l5f6b4086g3d78c4f6f511a4ec@mail.gmail.com>
References: <9da4f4520812120436x2dcd128o3edabbf00170668f@mail.gmail.com>	<B043B88C-8ABF-4B61-B869-8F472CFE9DEF@cs.usfca.edu>	<9da4f4520812130307y7de11b9ag33cc28bd37513076@mail.gmail.com>	<70110.78596.qm@web55905.mail.re3.yahoo.com>	<9da4f4520812140246x3feb4d16m2ad8668ec4b35f2a@mail.gmail.com>	<4944e783.0b0bca0a.6c1e.ffffb041SMTPIN_ADDED@mx.google.com>
	<9da4f4520812140806l5f6b4086g3d78c4f6f511a4ec@mail.gmail.com>
Message-ID: <49453B3A.4010407@gmx.de>

Oliver Zeigermann schrieb:
> importVocab is ANTLR2, but there is tokenVocab for ANTLR3. You can use
> it to define the complete token set, but it does not seem to do a
> merge of token types, though.

I suppose you have to import the tokens in the lexer of the second
grammar already.

L1 -> P1 -> AST1

T1 -> L2 -> P2 -> AST2

should clarify the order.

Johannes
> 
> 2008/12/14 Gavin Lambert <antlr at mirality.co.nz>:
>> At 23:46 14/12/2008, Oliver Zeigermann wrote:
>>> How can I import tree token types into a lexer? Importing a tree
>>> grammar into a lexer grammar is no allowd.
>> I'm fairly sure that you can import a .tokens file into a lexer via the
>> importVocab option.
>>
>>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From chainone at gmail.com  Sun Dec 14 22:19:42 2008
From: chainone at gmail.com (chain one)
Date: Mon, 15 Dec 2008 14:19:42 +0800
Subject: [antlr-interest] How to throw out what it just matched in ANTLR3C
	target?
Message-ID: <5a92ffb60812142219o70789d1x1d31b2d991877459@mail.gmail.com>

Hello,       When the target language is Java, we use "skip()" to  throw out
what it just matched.
But what about the situation when the target language is C?
I failed to find such kind of functions in ANTLR3 C Runtime API Document.
Could anyone who is familiar with ANTLR3 C Runtime tell me which function is
what I want?
Thanks very much!


Chainone
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081215/9eee126c/attachment.html 

From sven.van.echelpoel at empolis.com  Mon Dec 15 00:09:56 2008
From: sven.van.echelpoel at empolis.com (Sven Van Echelpoel)
Date: Mon, 15 Dec 2008 09:09:56 +0100
Subject: [antlr-interest] [C target] [3.1.1] Deriving imaginary
	nodes	from real tokens
In-Reply-To: <20081213024019.53C8E7570C@pmx3.bertelsmann.de>
References: <1229005078.5865.20.camel@cartman>
	<20081212103737.96048434C@pmx11.bertelsmann.de>
	<1229078940.6309.16.camel@cartman>
	<20081212110941.445CB75454@pmx3.bertelsmann.de>
	<1229086324.6309.30.camel@cartman>
	<20081213024019.53C8E7570C@pmx3.bertelsmann.de>
Message-ID: <1229328596.6275.4.camel@cartman>

[...]
>    -> FOO["bar"]
> Copy existing token FOO but give it "bar" as text, or create 
> imaginary token FOO with "bar" as text and no context.

OK, I looked at the overload set of the Java API and this is indeed in
there:

Object create (int tokenType, Token fromToken);
Object create (int tokenType, Token fromToken, String text);
Object create (int tokenType, String text);

However, as I said before, this is not what is explained in the book
and, as I'm programming against the C target, this is what I used at
first to reason from. It does not even mention the ability to set only
the text of a node.

Thanks for taking the time to explain me all of this

Sven


From g.r.vansickle at att.net  Mon Dec 15 06:44:57 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 15 Dec 2008 08:44:57 -0600
Subject: [antlr-interest] Flattening lists?
Message-ID: <1301A52C9A8C404EB6905AAC1DD3A2C2@DFW5RB41>

Hi all,

Not sure if this is something that should be obvious or not, but is there a
way, completely in ANTLR 3.x (C backend FWIW), to flatten a list of
"things"?  What I mean is, say I have a language I'm trying to parse with
constructs something like this:

	// Declare a bunch of variables.
	int varA, varB, varC;

Now, it's pretty straightforward to convert this via lexer->parser->tree
parser into:

	(VAR_DECL int (INITIALIZER varA) (INITIALIZER varB) (INITIALIZER
varC))

But is there a way to get this instead?:

	(VAR_DECL int varA) (VAR_DECL int varB) (VAR_DECL int varC)

Of course once I have the AST I can traverse it with C &&/|| C++, but it
would sure be nice if ANTLR was able to flatten these sort of constructs for
me.

Thanks,

-- 
Gary R. Van Sickle


From mario.prada at gmail.com  Mon Dec 15 06:59:01 2008
From: mario.prada at gmail.com (Mario Prada)
Date: Mon, 15 Dec 2008 15:59:01 +0100
Subject: [antlr-interest] How to distinguish between integer an binary
	number?
In-Reply-To: <49444211.050bca0a.5251.ffffe1cdSMTPIN_ADDED@mx.google.com>
References: <42afe7630812131142x4e63f4b8kcd324a8ce60453a2@mail.gmail.com>
	<49441BA5.9060301@gmx.de>
	<49444211.050bca0a.5251.ffffe1cdSMTPIN_ADDED@mx.google.com>
Message-ID: <42afe7630812150659g1bb602a1v994853aec4823baa@mail.gmail.com>

Finally, I implemented the proposed new rule, and it works fine :-)
(redefining the language wan?t an option)

Thanks all.


On Sun, Dec 14, 2008 at 12:15 AM, Gavin Lambert <antlr at mirality.co.nz>wrote:

> At 09:31 14/12/2008, Johannes Luber wrote:
> >Mario Prada schrieb:
> >> I need to distinguish between integer an binary number in
> >> my grammar.<P>
> [...]
> >You actually can't do that in the lexer. ANTLR does lexing all
> >in-front, before even the parser sees the first token. Thus
> >all numbers fitting the binary pattern are BINARIOs, even if
> >they are supposed to be normal numbers. The solution is make
> >one lexer rule for all kinds of numbers and to check only in
> >the parser, if a number contains only zeros and ones.
>
> Another possibility is to replace all usages of "INT" in the parser with
> "integer", then define a new rule like so:
>
> integer : INT | BINARIO;
>
> This way the lexer will still generate distinct INT and BINARIO tokens, but
> if the parser context is expecting an integer, it will accept both.  (If
> you're building an AST, you will probably also want to add a rewrite to
> convert the BINARIO token to an INT token for the AST.)
>
> As Sohail said, though, if you have the luxury of (re)defining the language
> then you should consider adding some lexically-obvious prefix or suffix to
> distinguish binary constants from decimal constants.  That should help to
> remove some of the confusion both on ANTLR's part and potentially that of
> anyone reading the input file.
>
>


-- 
Mario Prada Arroyo
----------------------------------------------------------------------------------------------------------
Todo hombre tiene una mujer que lo espera, el caso es llegar a tiempo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081215/7194164d/attachment.html 

From jimi at temporal-wave.com  Mon Dec 15 08:40:36 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 15 Dec 2008 08:40:36 -0800
Subject: [antlr-interest] Flattening lists?
In-Reply-To: <1301A52C9A8C404EB6905AAC1DD3A2C2@DFW5RB41>
References: <1301A52C9A8C404EB6905AAC1DD3A2C2@DFW5RB41>
Message-ID: <1229359236.5844.3.camel@jimi>

On Mon, 2008-12-15 at 08:44 -0600, Gary R. Van Sickle wrote:

> Hi all,
> 
> Not sure if this is something that should be obvious or not, but is there a
> way, completely in ANTLR 3.x (C backend FWIW), to flatten a list of
> "things"?  What I mean is, say I have a language I'm trying to parse with
> constructs something like this:
> 
> 	// Declare a bunch of variables.
> 	int varA, varB, varC;
> 
> Now, it's pretty straightforward to convert this via lexer->parser->tree
> parser into:
> 
> 	(VAR_DECL int (INITIALIZER varA) (INITIALIZER varB) (INITIALIZER
> varC))
> 
> But is there a way to get this instead?:
> 
> 	(VAR_DECL int varA) (VAR_DECL int varB) (VAR_DECL int varC)
> 
> Of course once I have the AST I can traverse it with C &&/|| C++, but it
> would sure be nice if ANTLR was able to flatten these sort of constructs for
> me.
> 
> Thanks,
> 



rule : INT i+=ID (COMMA i+=ID)  ->^(VAR_DECL INT $i)+
  ;


Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081215/aaa872d2/attachment.html 

From james.abley at gmail.com  Mon Dec 15 12:41:04 2008
From: james.abley at gmail.com (James Abley)
Date: Mon, 15 Dec 2008 20:41:04 +0000
Subject: [antlr-interest] Problems defining StringLiteral processing in a
	grammar
Message-ID: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>

Hi,

My grammar contains the following rule:

stringLiteral	:	'"'  (~'"')* '"'
	|	'\'' (~'\'')* '\''
	;


I'm building my project using maven 2 and the antlr3-maven-plugin 1.0.
Using the ANTLR 3.0.1 runtime, I'm seeing unexpected behaviour in that
having certain characters; e.g. '?', '!'; in my literal strings are
proving problematic.

line 1:27 no viable alternative at character '!'
line 1:61 no viable alternative at character '?'

Please can someone help point out the gaps in my understanding of what
the above productions actually mean?

Secondly, if I try to use the ANTLR 3.1.1 runtime to build my project,
I get compile errors:

[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

/home/jabley/work/eclipse/main-3.4/contentoptimizer/contentoptimizer-core/target/generated-sources/antlr/com/example/contentoptimizer/expression/ExprParser.java:[88,17]
cannot find symbol
symbol  : variable _fsp
location: class com.example.contentoptimizer.expression.ExprParser


Am I missing some configuration, or is this a known issue with the plugin?

Cheers,

James

From oliver.zeigermann at gmail.com  Mon Dec 15 13:18:05 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon, 15 Dec 2008 22:18:05 +0100
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR conference
	2009?
Message-ID: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>

Folks!

I was just wondering if anyone would be interested in an ANTLR
conference in 2009? (I am not saying there will be one, though)

What I am especially interested in:

(1) What would you like to discuss / learn about?
(2) What can you tell us about?

Cheers

Oliver

From parrt at cs.usfca.edu  Mon Dec 15 13:20:21 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 15 Dec 2008 13:20:21 -0800
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR
	conference 2009?
In-Reply-To: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
References: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
Message-ID: <2CDFF210-CC6C-40A4-91F7-9D08A1BFCBE6@cs.usfca.edu>


On Dec 15, 2008, at 1:18 PM, Oliver Zeigermann wrote:

> Folks!
>
> I was just wondering if anyone would be interested in an ANTLR
> conference in 2009? (I am not saying there will be one, though)
>
> What I am especially interested in:
>
> (1) What would you like to discuss / learn about?
> (2) What can you tell us about?

We'd have to hold it in San Francisco area, probably at the University  
of San Francisco. To make logistics easier, it would have to be during  
the summer (i.e., next June or July).

Ter

From jared.bunting at peachjean.com  Mon Dec 15 13:23:01 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 15 Dec 2008 15:23:01 -0600
Subject: [antlr-interest] Problems defining StringLiteral processing in
 a grammar
In-Reply-To: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
References: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
Message-ID: <4946CAB5.4030907@peachjean.com>

The plugin from codehaus (I'm assuming this based on version 1.0) 
doesn't support antlr 3.1 and later.  The code has since been merged 
into the antlr project.

Instead, use:

<plugin>
  <groupId>org.antlr</groupId>
  <artifactId>antlr3-maven-plugin</artifactId>
  <version>3.1.1.2</version>
</plugin>

-Jared

James Abley wrote:
> Hi,
>
> My grammar contains the following rule:
>
> stringLiteral	:	'"'  (~'"')* '"'
> 	|	'\'' (~'\'')* '\''
> 	;
>
>
> I'm building my project using maven 2 and the antlr3-maven-plugin 1.0.
> Using the ANTLR 3.0.1 runtime, I'm seeing unexpected behaviour in that
> having certain characters; e.g. '?', '!'; in my literal strings are
> proving problematic.
>
> line 1:27 no viable alternative at character '!'
> line 1:61 no viable alternative at character '?'
>
> Please can someone help point out the gaps in my understanding of what
> the above productions actually mean?
>
> Secondly, if I try to use the ANTLR 3.1.1 runtime to build my project,
> I get compile errors:
>
> [INFO] ------------------------------------------------------------------------
> [ERROR] BUILD FAILURE
> [INFO] ------------------------------------------------------------------------
> [INFO] Compilation failure
>
> /home/jabley/work/eclipse/main-3.4/contentoptimizer/contentoptimizer-core/target/generated-sources/antlr/com/example/contentoptimizer/expression/ExprParser.java:[88,17]
> cannot find symbol
> symbol  : variable _fsp
> location: class com.example.contentoptimizer.expression.ExprParser
>
>
> Am I missing some configuration, or is this a known issue with the plugin?
>
> Cheers,
>
> James
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From oliver.zeigermann at gmail.com  Mon Dec 15 13:28:44 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Mon, 15 Dec 2008 22:28:44 +0100
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR
	conference 2009?
In-Reply-To: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
References: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
Message-ID: <9da4f4520812151328j737429f2mb8899271fe873938@mail.gmail.com>

2008/12/15 Oliver Zeigermann <oliver.zeigermann at gmail.com>:
> (1) What would you like to discuss / learn about?
> (2) What can you tell us about?

I would like to learn about as much practical experience as possible.
- How do your ASTs look like?
- How do you avoid duplication?
- How do you share work in compiler design? How do you work as a team?
- What are your everyday problems with parser / compiler design in ANTLR?
- What tools do you use and which do you like best?

And that's also pretty much the area where I could share my experience
and knowledge.

Oliver

From Leonid_Ilyevsky at ml.com  Mon Dec 15 13:30:34 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Mon, 15 Dec 2008 16:30:34 -0500
Subject: [antlr-interest] C target help
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14C3@MLNYC20MB053.amrs.win.ml.com>

I am new to antlr and I need some help with using it in C/C++.

I already created a grammar that I want to use and tested it with
antlr-works, and then I generated the C files from it.

Now I need to write a program that uses the parser, and unfortunately it
is far from obvious of how do I even start. I tried to find help in the
documentation, and I tried to guess by looking at the generated files.

I expect that it should be pretty much straightforward, so I need a
simple example.

I understand that basically I need to do the following:

1. Prepare the text to be parsed. In my case it will be a text string in
memory (not a disk file). Should it be just a "const char *"? 

2. Invoke a call to the parser and pass my string to it. How does it
look like? How do I get back the status code and the parsing errors?

3. Get the tree root. How?

4. Walk through the tree. Need an example how this is done. On each node
I will need to figure out what kind of node that is (looks like the
integer constants are defined in generated code for each node type). If
a node represents some value, need to get it.

If I can do the above procedure, I can generate whatever I need based on
the tree.

Thanks in advance for your help.

- Leonid

--------------------------------------------------------------------------
This message w/attachments (message) may be privileged, confidential or proprietary, and if you are not an intended recipient, please notify the sender, do not use or share it and delete it. Unless specifically indicated, this message is not an offer to sell or a solicitation of any investment products or other financial product or service, an official confirmation of any transaction, or an official statement of Merrill Lynch. Subject to applicable law, Merrill Lynch may monitor, review and retain e-communications (EC) traveling through its networks/systems. The laws of the country of each sender/recipient may impact the handling of EC, and EC may be archived, supervised and produced in countries other than the country in which you are located. This message cannot be guaranteed to be secure or error-free. This message is subject to terms available at the following link: http://www.ml.com/e-communications_terms/. By messaging with Merrill Lynch you consent to the foregoing.
--------------------------------------------------------------------------
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081215/ab407ce2/attachment.html 

From james.abley at gmail.com  Mon Dec 15 14:11:42 2008
From: james.abley at gmail.com (James Abley)
Date: Mon, 15 Dec 2008 22:11:42 +0000
Subject: [antlr-interest] Problems defining StringLiteral processing in
	a grammar
In-Reply-To: <4946CAB5.4030907@peachjean.com>
References: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
	<4946CAB5.4030907@peachjean.com>
Message-ID: <23fce8e60812151411y31c06792md8098e9f5f3c4ac6@mail.gmail.com>

Thank you, that's cleared up my maven issue. I'm still getting the
problem with the production though.

My understanding is that it means a " character, then optionally
anything that's not a " character, and then a closing " character, OR
a ' character, then optionally anything not a ' character, and then a
closing character.

Is that correct?

Cheers,

James

2008/12/15 Jared Bunting <jared.bunting at peachjean.com>:
> The plugin from codehaus (I'm assuming this based on version 1.0) doesn't
> support antlr 3.1 and later.  The code has since been merged into the antlr
> project.
>
> Instead, use:
>
> <plugin>
>  <groupId>org.antlr</groupId>
>  <artifactId>antlr3-maven-plugin</artifactId>
>  <version>3.1.1.2</version>
> </plugin>
>
> -Jared
>
> James Abley wrote:
>>
>> Hi,
>>
>> My grammar contains the following rule:
>>
>> stringLiteral   :       '"'  (~'"')* '"'
>>        |       '\'' (~'\'')* '\''
>>        ;
>>
>>
>> I'm building my project using maven 2 and the antlr3-maven-plugin 1.0.
>> Using the ANTLR 3.0.1 runtime, I'm seeing unexpected behaviour in that
>> having certain characters; e.g. '?', '!'; in my literal strings are
>> proving problematic.
>>
>> line 1:27 no viable alternative at character '!'
>> line 1:61 no viable alternative at character '?'
>>
>> Please can someone help point out the gaps in my understanding of what
>> the above productions actually mean?
>>
>> Secondly, if I try to use the ANTLR 3.1.1 runtime to build my project,
>> I get compile errors:
>>
>> [INFO]
>> ------------------------------------------------------------------------
>> [ERROR] BUILD FAILURE
>> [INFO]
>> ------------------------------------------------------------------------
>> [INFO] Compilation failure
>>
>>
>> /home/jabley/work/eclipse/main-3.4/contentoptimizer/contentoptimizer-core/target/generated-sources/antlr/com/example/contentoptimizer/expression/ExprParser.java:[88,17]
>> cannot find symbol
>> symbol  : variable _fsp
>> location: class com.example.contentoptimizer.expression.ExprParser
>>
>>
>> Am I missing some configuration, or is this a known issue with the plugin?
>>
>> Cheers,
>>
>> James
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From jimi at temporal-wave.com  Mon Dec 15 14:24:26 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 15 Dec 2008 14:24:26 -0800
Subject: [antlr-interest] C target help
In-Reply-To: <3E72421F68C8FA4EA34571EA154D67E8024C14C3@MLNYC20MB053.amrs.win.ml.com>
References: <3E72421F68C8FA4EA34571EA154D67E8024C14C3@MLNYC20MB053.amrs.win.ml.com>
Message-ID: <op.ul75u0oyi0hb2k@jimi>

On Mon, 15 Dec 2008 13:30:34 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> I am new to antlr and I need some help with using it in C/C++.
>
> I already created a grammar that I want to use and tested it with
> antlr-works, and then I generated the C files from it.
>
> Now I need to write a program that uses the parser, and unfortunately it
> is far from obvious of how do I even start. I tried to find help in the
> documentation, and I tried to guess by looking at the generated files.

Examples are in the documentation:

http://www.antlr.org/api/C/index.html

and also, more likely to be useful, in the C examples. Download the  
examples tar from the downloads page, exampand and look at the examples  
under teh C directory.

Also, please use the list search for things like this :-) See support page.

Jim

From jimi at temporal-wave.com  Mon Dec 15 14:26:31 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 15 Dec 2008 14:26:31 -0800
Subject: [antlr-interest] Problems defining StringLiteral processing in
 a grammar
In-Reply-To: <23fce8e60812151411y31c06792md8098e9f5f3c4ac6@mail.gmail.com>
References: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
	<4946CAB5.4030907@peachjean.com>
	<23fce8e60812151411y31c06792md8098e9f5f3c4ac6@mail.gmail.com>
Message-ID: <op.ul75yhzfi0hb2k@jimi>

On Mon, 15 Dec 2008 14:11:42 -0800, James Abley <james.abley at gmail.com>  
wrote:

> Thank you, that's cleared up my maven issue. I'm still getting the
> problem with the production though.
>
> My understanding is that it means a " character, then optionally
> anything that's not a " character, and then a closing " character, OR
> a ' character, then optionally anything not a ' character, and then a
> closing character.
>
> Is that correct?
>

Yes but you have made a parser rule not a lexer rule. Reade the getting  
started articles and the 5 minute tutorials.

Lexer rules start with UPPER case, paresr rules start with LOWER case.


>>>
>>> My grammar contains the following rule:
>>>
>>> stringLiteral   :       '"'  (~'"')* '"'
>>>        |       '\'' (~'\'')* '\''
>>>        ;
>>>

STRING   : ...etc

Jim

From Leonid_Ilyevsky at ml.com  Mon Dec 15 14:40:19 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Mon, 15 Dec 2008 17:40:19 -0500
Subject: [antlr-interest] C target help
In-Reply-To: <op.ul75u0oyi0hb2k@jimi>
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14C4@MLNYC20MB053.amrs.win.ml.com>


 Thanks Jim

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, December 15, 2008 5:24 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

On Mon, 15 Dec 2008 13:30:34 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> I am new to antlr and I need some help with using it in C/C++.
>
> I already created a grammar that I want to use and tested it with
> antlr-works, and then I generated the C files from it.
>
> Now I need to write a program that uses the parser, and unfortunately
it
> is far from obvious of how do I even start. I tried to find help in
the
> documentation, and I tried to guess by looking at the generated files.

Examples are in the documentation:

http://www.antlr.org/api/C/index.html

and also, more likely to be useful, in the C examples. Download the  
examples tar from the downloads page, exampand and look at the examples

under teh C directory.

Also, please use the list search for things like this :-) See support
page.

Jim

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


--------------------------------------------------------------------------
This message w/attachments (message) may be privileged, confidential or proprietary, and if you are not an intended recipient, please notify the sender, do not use or share it and delete it. Unless specifically indicated, this message is not an offer to sell or a solicitation of any investment products or other financial product or service, an official confirmation of any transaction, or an official statement of Merrill Lynch. Subject to applicable law, Merrill Lynch may monitor, review and retain e-communications (EC) traveling through its networks/systems. The laws of the country of each sender/recipient may impact the handling of EC, and EC may be archived, supervised and produced in countries other than the country in which you are located. This message cannot be guaranteed to be secure or error-free. This message is subject to terms available at the following link: http://www.ml.com/e-communications_terms/. By messaging with Merrill Lynch you consent to the foregoing.
--------------------------------------------------------------------------
 

From Leonid_Ilyevsky at ml.com  Mon Dec 15 15:10:31 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Mon, 15 Dec 2008 18:10:31 -0500
Subject: [antlr-interest] C target help
In-Reply-To: <op.ul75u0oyi0hb2k@jimi>
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14C5@MLNYC20MB053.amrs.win.ml.com>

Jim,

Just few more questions.
I looked at your example in main.c, and it seems I can follow the story
there.
Except that I would like some more details around the end of it.
After you invoke the parser

	psr->translation_unit(psr);

You say that we can finish there, and this is what I don't quite
understand. I believe, at this point I want to look at the parsing
result, walk along the tree and generate my output. How this is done?
By looking at the files generated by antlr, I see that there are some
functions defined on the parser structure, and they return pointers to
the structures with "start", "stop" and "tree". Not clear how this is
used.

Thanks,

Leonid

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, December 15, 2008 5:24 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

On Mon, 15 Dec 2008 13:30:34 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> I am new to antlr and I need some help with using it in C/C++.
>
> I already created a grammar that I want to use and tested it with
> antlr-works, and then I generated the C files from it.
>
> Now I need to write a program that uses the parser, and unfortunately
it
> is far from obvious of how do I even start. I tried to find help in
the
> documentation, and I tried to guess by looking at the generated files.

Examples are in the documentation:

http://www.antlr.org/api/C/index.html

and also, more likely to be useful, in the C examples. Download the  
examples tar from the downloads page, exampand and look at the examples

under teh C directory.

Also, please use the list search for things like this :-) See support
page.

Jim

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


--------------------------------------------------------------------------
This message w/attachments (message) may be privileged, confidential or proprietary, and if you are not an intended recipient, please notify the sender, do not use or share it and delete it. Unless specifically indicated, this message is not an offer to sell or a solicitation of any investment products or other financial product or service, an official confirmation of any transaction, or an official statement of Merrill Lynch. Subject to applicable law, Merrill Lynch may monitor, review and retain e-communications (EC) traveling through its networks/systems. The laws of the country of each sender/recipient may impact the handling of EC, and EC may be archived, supervised and produced in countries other than the country in which you are located. This message cannot be guaranteed to be secure or error-free. This message is subject to terms available at the following link: http://www.ml.com/e-communications_terms/. By messaging with Merrill Lynch you consent to the foregoing.
--------------------------------------------------------------------------
 

From jimi at temporal-wave.com  Mon Dec 15 15:24:01 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 15 Dec 2008 15:24:01 -0800
Subject: [antlr-interest] C target help
In-Reply-To: <3E72421F68C8FA4EA34571EA154D67E8024C14C5@MLNYC20MB053.amrs.win.ml.com>
References: <3E72421F68C8FA4EA34571EA154D67E8024C14C5@MLNYC20MB053.amrs.win.ml.com>
Message-ID: <op.ul78mbroi0hb2k@jimi>

On Mon, 15 Dec 2008 15:10:31 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> Jim,
>
> Just few more questions.
> I looked at your example in main.c, and it seems I can follow the story
> there.
> Except that I would like some more details around the end of it.
> After you invoke the parser
>
> 	psr->translation_unit(psr);
>
> You say that we can finish there, and this is what I don't quite

Look at the tree parsing examples, or the polydiff example.

Jim

From porcelli at uol.com.br  Mon Dec 15 16:18:16 2008
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Mon, 15 Dec 2008 22:18:16 -0200
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR
	conference 2009?
In-Reply-To: <9da4f4520812151328j737429f2mb8899271fe873938@mail.gmail.com>
References: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
	<9da4f4520812151328j737429f2mb8899271fe873938@mail.gmail.com>
Message-ID: <ee873c070812151618p1b774803y135b4015cda6f2ff@mail.gmail.com>

It would be GREAT!

(1) What would you like to discuss / learn about?
 - Better understand of DFA
 - ANTLR Roadmap
(2) What can you tell us about?
 - I could show something about OpenSpotLight... an open source tool
that will be around in March.... OpenSpotLight is an open source SOA
Governance Platform, that uses, a lot, ANTLR to parse different kind
of sources!
 - I could tell about the chalanges faced during grammar development
in Drools project (I'm drools parser developer)

ps: My sugestion for a schedule would be just after (or before) JavaOne.

Regards,
Alexandre Porcelli

From parrt at cs.usfca.edu  Mon Dec 15 16:26:18 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 15 Dec 2008 16:26:18 -0800
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR
	conference 2009?
In-Reply-To: <ee873c070812151618p1b774803y135b4015cda6f2ff@mail.gmail.com>
References: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
	<9da4f4520812151328j737429f2mb8899271fe873938@mail.gmail.com>
	<ee873c070812151618p1b774803y135b4015cda6f2ff@mail.gmail.com>
Message-ID: <BA40B4C5-4947-425D-994A-6C7BE49E3130@cs.usfca.edu>


On Dec 15, 2008, at 4:18 PM, Alexandre Porcelli wrote:

> It would be GREAT!
>
> (1) What would you like to discuss / learn about?
> - Better understand of DFA
> - ANTLR Roadmap
> (2) What can you tell us about?
> - I could show something about OpenSpotLight... an open source tool
> that will be around in March.... OpenSpotLight is an open source SOA
> Governance Platform, that uses, a lot, ANTLR to parse different kind
> of sources!
> - I could tell about the chalanges faced during grammar development
> in Drools project (I'm drools parser developer)
>
> ps: My sugestion for a schedule would be just after (or before)  
> JavaOne.

Excellent point.  That's June 2-5, 2009.  I guess the two days  
afterwards would work, right? June 6, 7?

Ter

From asoka250 at gmail.com  Mon Dec 15 16:42:02 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Mon, 15 Dec 2008 18:42:02 -0600
Subject: [antlr-interest] jobs in language recognizers development - regd.
Message-ID: <4946F95A.5060200@gmail.com>

Hi List,

I am a recent graduate in computer science looking out for jobs. What is 
the best possible way for me to hunt for jobs in language 
recognizer's/parser development using ANTLR. Also what would be the best 
possible way to showcase by skills in this field, I mean are there any 
certification exams on ANTLR, if not, can it be done in the future.

-- 
Ashok R Varikuti





From sohail at taggedtype.net  Mon Dec 15 17:06:47 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon, 15 Dec 2008 17:06:47 -0800
Subject: [antlr-interest] jobs in language recognizers development -
	regd.
In-Reply-To: <4946F95A.5060200@gmail.com>
References: <4946F95A.5060200@gmail.com>
Message-ID: <gi6uv7$bgm$1@ger.gmane.org>

Ashok Varikuti wrote:
> Hi List,
> 
> I am a recent graduate in computer science looking out for jobs. What is 
> the best possible way for me to hunt for jobs in language 
> recognizer's/parser development using ANTLR. Also what would be the best 
> possible way to showcase by skills in this field, I mean are there any 
> certification exams on ANTLR, if not, can it be done in the future.

Good question. In my experience, highly technical work inevitably leads
to writing a parser if not a full-on compiler even if it was not
originally envisioned. So I would not suggest you limit your scope to
"ANTLR-jobs" but link it with some non-tech field you are interested in
that requires highly technical solutions.

If that makes /any/ sense whatsoever :-)

-- 
Sohail Somani
http://uint32t.blogspot.com


From robert.soule at gmail.com  Mon Dec 15 17:09:19 2008
From: robert.soule at gmail.com (Robert Soule)
Date: Mon, 15 Dec 2008 20:09:19 -0500
Subject: [antlr-interest] pretty printing in the c target
Message-ID: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>

Hi,

I am trying to write a pretty printer for my input language. In java,
I read in the source, convert to the AST, then use a tree grammar
to call the StringTemplates, and everything works fine. However,
I need to use C as the target language, and there isn't a StringTemplate
implementation in C.

I looked at the examples that are available on the antlr.org website,
but the only ones that pretty print are toy examples, and simple append
the character strings to the text contained in the token literals. This
isn't really a feasible approach in my language. So, what I've ended up
doing is following a pattern more or less like the following:

someRule
returns [pANTLR3_STRING result]
@init {result = factory->newRaw(factory);}
: ^(SOMETOKEN anotherRule thirdRule)
{
  $result->append($result, "Start\n");
  $result->appendS($result, $anotherRule.result);
  factory->destroy(factory, $aotherRule.result);
  $result->appendS($result, $thirdRule.result);
  factory->destroy(factory, $thirdRule.result);
  $result->append($result, "\n\n");
}

However, I've encountered a few problems with this approach. First,
when I call factory->close(..) at the end of my program, I get a double
free problem, and I don't see in the API where I can call remove on
the string from the factory. However, more troubling is that when the
return of one of the rules like anotherRule is composed of only
small literal strings (like "()"),  then calling destroy on the result sometimes
frees too much memory, so that I cause problems for "thirdRule".
Moreover, this just seems like an awkward way to build up my output
string.

Since this seems like a pretty common task, I was wondering if
there is a common, recommended way of doing this?

thank you,
Robert
thank you,
Robert

From asoka250 at gmail.com  Mon Dec 15 17:15:41 2008
From: asoka250 at gmail.com (Ashok Varikuti)
Date: Mon, 15 Dec 2008 19:15:41 -0600
Subject: [antlr-interest] jobs in language recognizers development
	-	regd.
In-Reply-To: <gi6uv7$bgm$1@ger.gmane.org>
References: <4946F95A.5060200@gmail.com> <gi6uv7$bgm$1@ger.gmane.org>
Message-ID: <4947013D.9080106@gmail.com>

Hi Sohail,

Thankx for the response. Yeah being prepared to write a full grown 
compiler will definitely improve the scenario. Can you elaborate on this 
comment when u said "link it with some non-tech field you are interested 
in that requires highly technical solutions".
Sohail Somani wrote:
> Ashok Varikuti wrote:
>   
>> Hi List,
>>
>> I am a recent graduate in computer science looking out for jobs. What is 
>> the best possible way for me to hunt for jobs in language 
>> recognizer's/parser development using ANTLR. Also what would be the best 
>> possible way to showcase by skills in this field, I mean are there any 
>> certification exams on ANTLR, if not, can it be done in the future.
>>     
>
> Good question. In my experience, highly technical work inevitably leads
> to writing a parser if not a full-on compiler even if it was not
> originally envisioned. So I would not suggest you limit your scope to
> "ANTLR-jobs" but link it with some non-tech field you are interested in
> that requires highly technical solutions.
>
> If that makes /any/ sense whatsoever :-)
>
>   

-- 
Ashok R Varikuti
Graduate Research Assistant
CIS Dept, Kansas State University
785-304-2401




From sohail at taggedtype.net  Mon Dec 15 17:19:07 2008
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon, 15 Dec 2008 17:19:07 -0800
Subject: [antlr-interest] jobs in language recognizers development -
	regd.
In-Reply-To: <4947013D.9080106@gmail.com>
References: <4946F95A.5060200@gmail.com> <gi6uv7$bgm$1@ger.gmane.org>
	<4947013D.9080106@gmail.com>
Message-ID: <gi6vmb$d7e$1@ger.gmane.org>

Probably getting off-topic for this NG. My point was that when you
require highly specialized and technical solutions, a new compiler is
just around the corner. Sometimes you are unlucky and it takes the form
of XML but important to recognize that you are still writing a compiler :-)

Atleast IME.

I think this should be the last post in this topic otherwise it will get
too off-topic.

Ashok Varikuti wrote:
> Hi Sohail,
> 
> Thankx for the response. Yeah being prepared to write a full grown 
> compiler will definitely improve the scenario. Can you elaborate on this 
> comment when u said "link it with some non-tech field you are interested 
> in that requires highly technical solutions".
> Sohail Somani wrote:
>> Ashok Varikuti wrote:
>>   
>>> Hi List,
>>>
>>> I am a recent graduate in computer science looking out for jobs. What is 
>>> the best possible way for me to hunt for jobs in language 
>>> recognizer's/parser development using ANTLR. Also what would be the best 
>>> possible way to showcase by skills in this field, I mean are there any 
>>> certification exams on ANTLR, if not, can it be done in the future.
>>>     
>> Good question. In my experience, highly technical work inevitably leads
>> to writing a parser if not a full-on compiler even if it was not
>> originally envisioned. So I would not suggest you limit your scope to
>> "ANTLR-jobs" but link it with some non-tech field you are interested in
>> that requires highly technical solutions.
>>
>> If that makes /any/ sense whatsoever :-)


From jimi at temporal-wave.com  Mon Dec 15 18:37:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 15 Dec 2008 18:37:43 -0800
Subject: [antlr-interest] pretty printing in the c target
In-Reply-To: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>
References: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>
Message-ID: <op.ul8hk5mci0hb2k@jimi>

On Mon, 15 Dec 2008 17:09:19 -0800, Robert Soule <robert.soule at gmail.com>  
wrote:

> Hi,
>
> I am trying to write a pretty printer for my input language. In java,
> I read in the source, convert to the AST, then use a tree grammar
> to call the StringTemplates, and everything works fine. However,
> I need to use C as the target language, and there isn't a StringTemplate
> implementation in C.
>
> I looked at the examples that are available on the antlr.org website,
> but the only ones that pretty print are toy examples, and simple append
> the character strings to the text contained in the token literals. This
> isn't really a feasible approach in my language. So, what I've ended up
> doing is following a pattern more or less like the following:
>
> someRule
> returns [pANTLR3_STRING result]
> @init {result = factory->newRaw(factory);}
> : ^(SOMETOKEN anotherRule thirdRule)
> {
>   $result->append($result, "Start\n");
>   $result->appendS($result, $anotherRule.result);
>   factory->destroy(factory, $aotherRule.result);
>   $result->appendS($result, $thirdRule.result);
>   factory->destroy(factory, $thirdRule.result);
>   $result->append($result, "\n\n");
> }
>
> However, I've encountered a few problems with this approach. First,
> when I call factory->close(..) at the end of my program, I get a double
> free problem,


You should not be calling the factory->destroy. Just close the factory,  
and if you use the
parsers factory, you don't need to do that. When you are done, just memcpy  
(or strdup) the
chars pointer from teh final string. All the other memory will be  
discarded for you. If you
are just going to write out the result, then fwrite the chars pointer and  
close as normal - all memmory
will be freed for you. You are trying to do too much:

>   $result->append($result, "Start\n");
>   $result->appendS($result, $anotherRule.result);;
>   $result->appendS($result, $thirdRule.result);
>   $result->append($result, "\n\n");
     fwrite(... $result->chars ...);
     factory->close(factory); // But only if this is your own factory,  
which there is no need for really.




  and I don't see in the API where I can call remove on
> the string from the factory. However, more troubling is that when the
> return of one of the rules like anotherRule is composed of only
> small literal strings (like "()"),  then calling destroy on the result  
> sometimes
> frees too much memory,

You don't use destroy() like this, so next time you try to use it, you have
already corrupted the memory.

so that I cause problems for "thirdRule".
> Moreover, this just seems like an awkward way to build up my output
> string.

That is because you are sassuming that you have to do oall the management.  
You don't do that,
you just let the factory take care of it all. When you close, it has  
trcked all the mmemory and
it frees it all for you. You just use teh strings and forget about them as  
if they were Java
objects. Use the factory in the parser (see C examples for poly for  
instance), and you don't even
need to close your own factory.

>
> Since this seems like a pretty common task, I was wondering if
> there is a common, recommended way of doing this?

Read the API docs for more info :-) However, not that you do not NEED to  
use teh string factory stuff
it is really just a convenience. You can copy the input text yourself  
suign teh token supplied offests.

Jim

From George.Shannon at raphaelanalytics.com  Mon Dec 15 20:49:17 2008
From: George.Shannon at raphaelanalytics.com (George J. Shannon)
Date: Mon, 15 Dec 2008 22:49:17 -0600
Subject: [antlr-interest] Status of C++ runtime
Message-ID: <C330D7D93BDA4C6A8CD7114DFABDF7E2@raphael01>

I have not been on the email list for a while.  I wanted to send out a
question on the status of the C++ version for the runtime - when is it
expected to be released.

Thanks,

George

 

George Shannon

President, Raphael Analytics, Inc.

16 Spur Drive

Fenton, MO 63026

(314) 550-5589 (cell)

 <mailto:George.Shannon at raphaelanalytics.com>
George.Shannon at raphaelanalytics.com

 <http://www.raphaelanalytics.com> www.raphaelanalytics.com

 

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material.  Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited.   If you received
this in error, please contact the sender and delete the material from any
computer.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081215/3d780b3d/attachment.html 

From antlr at mirality.co.nz  Mon Dec 15 23:21:53 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 16 Dec 2008 20:21:53 +1300
Subject: [antlr-interest] Problems defining StringLiteral processing in
 a grammar
In-Reply-To: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.co
 m>
References: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
Message-ID: <20081216072203.4B03E11ECCB@www.antlr.org>

At 09:41 16/12/2008, James Abley wrote:
 >My grammar contains the following rule:
 >
 >stringLiteral	:	'"'  (~'"')* '"'
 >	|	'\'' (~'\'')* '\''
 >	;
[...]
 >Using the ANTLR 3.0.1 runtime, I'm seeing unexpected behaviour 
in
 >that having certain characters; e.g. '?', '!'; in my literal
 >strings are proving problematic.
 >
 >line 1:27 no viable alternative at character '!'
 >line 1:61 no viable alternative at character '?'

This needs to be a lexer rule (initial capital letter, eg. 
StringLiteral) in order to work.  Using ~ in a parser rule means 
"any *token* except these" and is almost never what you really 
want.


From chainone at gmail.com  Mon Dec 15 23:32:25 2008
From: chainone at gmail.com (chain one)
Date: Tue, 16 Dec 2008 15:32:25 +0800
Subject: [antlr-interest] Why does Lexer of C++ run time target eat so much
	memory
Message-ID: <5a92ffb60812152332w730e1086xae39e39cc4c4a451@mail.gmail.com>

Hi,
These days I am writing a parser for a kind of data file using C++. The
format of the data file is simple, so the rules are simple.
But when I feed a about 20M-size data file to the parser, the parser eats
almost  600M+ memory.
I am surprised by this result and I found most memory and time were consumed
by the Lexer.

Is there anything wrong with my grammar or it is the performance issue of
ANTLR3 C++ runtime?
I hope there is some way to get my parser  more lightweight.

I attached the .g file to this mail and the data file(.txt format) could be
got from this link:https://download.yousendit.com/Q01FSU5ONEhZY1IzZUE9PQ

The test main function is:
========================================
     int main(int argc, char * argv[])
     {
        pANTLR3_INPUT_STREAM           input;
        pExpressDataLexer               lex;
        pANTLR3_COMMON_TOKEN_STREAM    tokens;
        pExpressDataParser              parser;

        input  = antlr3AsciiFileStreamNew          ((pANTLR3_UINT8)argv[1]);
        lex    = ExpressDataLexerNew                (input);
        tokens = antlr3CommonTokenStreamSourceNew  (ANTLR3_SIZE_HINT,
TOKENSOURCE(lex));
        parser = ExpressDataParserNew               (tokens);

        parser  ->syntax(parser);

        parser ->free(parser);
        tokens ->free(tokens);
        lex    ->free(lex);
        input  ->close(input);

        return 0;
     }
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/8c63e969/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ExpressData.g
Type: application/octet-stream
Size: 3384 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/8c63e969/attachment.obj 

From antlr at mirality.co.nz  Mon Dec 15 23:35:11 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 16 Dec 2008 20:35:11 +1300
Subject: [antlr-interest] pretty printing in the c target
In-Reply-To: <op.ul8hk5mci0hb2k@jimi>
References: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>
	<op.ul8hk5mci0hb2k@jimi>
Message-ID: <20081216073522.28DF111ECD5@www.antlr.org>

At 15:37 16/12/2008, Jim Idle wrote:
 >You don't do that, you just let the factory take care of
 >it all. When you close, it has trcked all the mmemory and
 >it frees it all for you. You just use teh strings and forget
 >about them as if they were Java objects. Use the factory in
 >the parser (see C examples for poly for instance), and you
 >don't even need to close your own factory.

What if you've got lots of temporary strings though (or a big 
input file)?  Wouldn't the memory usage add up quickly?


From oliver.zeigermann at gmail.com  Tue Dec 16 01:26:49 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Tue, 16 Dec 2008 10:26:49 +0100
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR
	conference 2009?
In-Reply-To: <BA40B4C5-4947-425D-994A-6C7BE49E3130@cs.usfca.edu>
References: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
	<9da4f4520812151328j737429f2mb8899271fe873938@mail.gmail.com>
	<ee873c070812151618p1b774803y135b4015cda6f2ff@mail.gmail.com>
	<BA40B4C5-4947-425D-994A-6C7BE49E3130@cs.usfca.edu>
Message-ID: <9da4f4520812160126w5e3e402vb1196798149fca4b@mail.gmail.com>

2008/12/16 Terence Parr <parrt at cs.usfca.edu>:
>
> On Dec 15, 2008, at 4:18 PM, Alexandre Porcelli wrote:
>
>> It would be GREAT!
>>
>> (1) What would you like to discuss / learn about?
>> - Better understand of DFA
>> - ANTLR Roadmap
>> (2) What can you tell us about?
>> - I could show something about OpenSpotLight... an open source tool
>> that will be around in March.... OpenSpotLight is an open source SOA
>> Governance Platform, that uses, a lot, ANTLR to parse different kind
>> of sources!
>> - I could tell about the chalanges faced during grammar development
>> in Drools project (I'm drools parser developer)
>>
>> ps: My sugestion for a schedule would be just after (or before)
>> JavaOne.
>
> Excellent point.  That's June 2-5, 2009.  I guess the two days
> afterwards would work, right? June 6, 7?

June 6 and 7 are Saturday and Sunday. Not sure if people will come on
weekends. What about June 8 and 9?

Oliver

From antlr at mirality.co.nz  Tue Dec 16 03:46:32 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 17 Dec 2008 00:46:32 +1300
Subject: [antlr-interest] Problems defining StringLiteral processing in
 a grammar
In-Reply-To: <23fce8e60812160255se81a924ve03e7bfc7e059d6d@mail.gmail.com
 >
References: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
	<4947571b.030bca0a.2a4f.ffffc682SMTPIN_ADDED@mx.google.com>
	<23fce8e60812160255se81a924ve03e7bfc7e059d6d@mail.gmail.com>
Message-ID: <20081216114645.1E07F11EC42@www.antlr.org>

[Don't forget to use Reply All to keep messages on-list.]

At 23:55 16/12/2008, James Abley wrote:
 >I did see that in the Java5 grammar, but am still not 100% clear 

 >on the distinction between lexer rules and parser rules.

Lexer rules take characters as input and produce tokens, and have 
an uppercase initial letter.  (By convention, token names are 
usually totally uppercase, but that's optional.)

Parser rules take tokens as input and either have no output (just 
executing embedded actions), text output (via StringTemplate), or 
tree output (via output=AST).  They have a lowercase initial 
letter.

Tree parser rules are just like parser rules except they take an 
AST as input.  (And in 3.0 they can't output a second AST; in 3.1 
that restriction is removed.)

 >My grammar builds an AST. I don't think it's possible to use
 >an action within that grammar, to strip quotes as per
 >http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461

Of course it is (although you might want to split your rule up 
into two separate tokens if you want to preserve some distinction 
between single-quoted and double-quoted strings).  That's also 
done at the lexer level, and the lexer isn't the bit that's 
responsible for building the AST anyway.

Stripping surrounding quotes is trivial, as shown on the wiki 
page.  Processing escape sequences is a bit trickier, but can be 
done in a similar fashion.

(Although usually you'd use "$text = x" rather than "setText(x)" 
and "$text" instead of "getText()" nowadays.  I think the wiki 
page is out of date.)

One caveat to stripping the text during lexer processing though is 
that this can lead to confusing error messages (if you want to 
print the token text as part of the error), since it won't have 
the quotes/escapes any more.


From jg.escribano at uam.es  Tue Dec 16 03:52:42 2008
From: jg.escribano at uam.es (Javier Gomez Escribano)
Date: Tue, 16 Dec 2008 12:52:42 +0100
Subject: [antlr-interest] Rule for ISO 8601 - Duration Standar
In-Reply-To: <cbda2c930812160350g2d500fale9db931e1e9d47e1@mail.gmail.com>
References: <cbda2c930812160350g2d500fale9db931e1e9d47e1@mail.gmail.com>
Message-ID: <cbda2c930812160352o2c6b1bbcvaa6c20f2556a9f67@mail.gmail.com>

Hello!

I'm trying to parse a "duration string" which is in format ISO 8601:
*PnnYnnMnnDTnnHnnMnnS* (*P*1*Y*0*M*27*DT*11*H*9*M*11*S*)
where *nn* are numbers.
(A reference to ISO 8601 for durations...
http://en.wikipedia.org/wiki/ISO_8601)

The problem is that I have to put a white space between letters and numbers.
And it is something I'd like to avoid.

Here is part of my code

duration    :    (P_TOKEN (year=number Y_TOKEN)? (month=number M_TOKEN)?
(day=number D_TOKEN)?)?(T_TOKEN (hour=number H_TOKEN)? (min=number M_TOKEN)?
(sec=number S_TOKEN)?)? -> ^(YEAR $year)? ^(MONTH $month)? ^(DAY $day)?
^(HOUR $hour)? ^(MINUTE $min)? ^(SECOND $sec)?    ;

number   :    value=INT -> ^($value)    ;
INT   :  ('0'..'9')+;

Any recommendations?

Thank you

-- 
Javier Gomez Escribano
http://rincon.uam.es/dir?cw=782003784179687



-- 
Javier Gomez Escribano
http://rincon.uam.es/dir?cw=782003784179687
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/e38f21b0/attachment.html 

From james.abley at gmail.com  Tue Dec 16 04:37:37 2008
From: james.abley at gmail.com (James Abley)
Date: Tue, 16 Dec 2008 12:37:37 +0000
Subject: [antlr-interest] Problems defining StringLiteral processing in
	a grammar
In-Reply-To: <49479525.090bca0a.2a90.ffff9affSMTPIN_ADDED@mx.google.com>
References: <23fce8e60812151241o3738bed1of8ff7b2d7e54245a@mail.gmail.com>
	<4947571b.030bca0a.2a4f.ffffc682SMTPIN_ADDED@mx.google.com>
	<23fce8e60812160255se81a924ve03e7bfc7e059d6d@mail.gmail.com>
	<49479525.090bca0a.2a90.ffff9affSMTPIN_ADDED@mx.google.com>
Message-ID: <23fce8e60812160437j58b5c0e0k9ac212fa335d90ff@mail.gmail.com>

2008/12/16 Gavin Lambert <antlr at mirality.co.nz>:
> [Don't forget to use Reply All to keep messages on-list.]

Sorry!

>
> At 23:55 16/12/2008, James Abley wrote:
>>I did see that in the Java5 grammar, but am still not 100% clear
>>on the distinction between lexer rules and parser rules.
>
> Lexer rules take characters as input and produce tokens, and have an
> uppercase initial letter.  (By convention, token names are usually totally
> uppercase, but that's optional.)
>
> Parser rules take tokens as input and either have no output (just executing
> embedded actions), text output (via StringTemplate), or tree output (via
> output=AST).  They have a lowercase initial letter.
>
> Tree parser rules are just like parser rules except they take an AST as
> input.  (And in 3.0 they can't output a second AST; in 3.1 that restriction
> is removed.)
>
>>My grammar builds an AST. I don't think it's possible to use
>>an action within that grammar, to strip quotes as per
>>http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461
>
> Of course it is (although you might want to split your rule up into two
> separate tokens if you want to preserve some distinction between
> single-quoted and double-quoted strings).  That's also done at the lexer
> level, and the lexer isn't the bit that's responsible for building the AST
> anyway.
>
> Stripping surrounding quotes is trivial, as shown on the wiki page.
>  Processing escape sequences is a bit trickier, but can be done in a similar
> fashion.

So the lexer would have the code for processing any escape sequence
that I want? I think I'll check out the JavaFX sources to see if I can
find a good example. IIRC, Java processes unicode escape sequences in
source files prior to feeding anything else to the compiler. It's a
separate stage. Not sure that's something to be emulated...

http://74.125.77.132/search?q=cache:nKOkLkJvcoIJ:www.javapuzzlers.com/java-puzzlers-sampler.pdf+java+puzzlers+unicode&hl=en&ct=clnk&cd=3&gl=uk#6

>
> (Although usually you'd use "$text = x" rather than "setText(x)" and "$text"
> instead of "getText()" nowadays.  I think the wiki page is out of date.)
>
> One caveat to stripping the text during lexer processing though is that this
> can lead to confusing error messages (if you want to print the token text as
> part of the error), since it won't have the quotes/escapes any more.
>
>

Thanks for your comprehensive responses.

Cheers,

James

From Leonid_Ilyevsky at ml.com  Tue Dec 16 09:46:57 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Tue, 16 Dec 2008 12:46:57 -0500
Subject: [antlr-interest] C target help
In-Reply-To: <op.ul78mbroi0hb2k@jimi>
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14C7@MLNYC20MB053.amrs.win.ml.com>

Hi Jim,

I made some progress since yesterday, so now I am doing some testing.

Here is the next problem I hit. If the text to parse is good, then it
goes through OK (I did not come to analyze the result yet). But if there
is an error, then the program just dies after logging the error message.
For example:

-memory-(1)  : error 1 : Unexpected token

Yes, indeed, there is an unexpected token there, but why does it die? It
happens inside the psr->statement(psr) call.
The psr is my parser and "statement" is the top expression.

Any suggestions? 

Thanks,

Leonid

-----Original Message-----
From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Monday, December 15, 2008 6:24 PM
To: Ilyevsky, Leonid (Equity Trading); antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

On Mon, 15 Dec 2008 15:10:31 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> Jim,
>
> Just few more questions.
> I looked at your example in main.c, and it seems I can follow the
story
> there.
> Except that I would like some more details around the end of it.
> After you invoke the parser
>
> 	psr->translation_unit(psr);
>
> You say that we can finish there, and this is what I don't quite

Look at the tree parsing examples, or the polydiff example.

Jim

--------------------------------------------------------------------------
This message w/attachments (message) may be privileged, confidential or proprietary, and if you are not an intended recipient, please notify the sender, do not use or share it and delete it. Unless specifically indicated, this message is not an offer to sell or a solicitation of any investment products or other financial product or service, an official confirmation of any transaction, or an official statement of Merrill Lynch. Subject to applicable law, Merrill Lynch may monitor, review and retain e-communications (EC) traveling through its networks/systems. The laws of the country of each sender/recipient may impact the handling of EC, and EC may be archived, supervised and produced in countries other than the country in which you are located. This message cannot be guaranteed to be secure or error-free. This message is subject to terms available at the following link: http://www.ml.com/e-communications_terms/. By messaging with Merrill Lynch you consent to the foregoing.
--------------------------------------------------------------------------
 

From Leonid_Ilyevsky at ml.com  Tue Dec 16 10:10:15 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Tue, 16 Dec 2008 13:10:15 -0500
Subject: [antlr-interest] C target help
In-Reply-To: <3E72421F68C8FA4EA34571EA154D67E8024C14C7@MLNYC20MB053.amrs.win.ml.com>
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14C8@MLNYC20MB053.amrs.win.ml.com>

Jim,

I have a hunch about why it dies. When creating an input object, I do
this:

input = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8) query,
strlen(query), NULL);

where query is a regular C-string (const char *). Maybe it tries to
deallocate it upon error, and this creates a problem?

In any case, it seems that I should use ANTLR3_STRING_FACTORY to create
a string, but I don't know how to do it from the const char *.


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ilyevsky, Leonid
(Equity Trading)
Sent: Tuesday, December 16, 2008 12:47 PM
To: Jim Idle; antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

Hi Jim,

I made some progress since yesterday, so now I am doing some testing.

Here is the next problem I hit. If the text to parse is good, then it
goes through OK (I did not come to analyze the result yet). But if there
is an error, then the program just dies after logging the error message.
For example:

-memory-(1)  : error 1 : Unexpected token

Yes, indeed, there is an unexpected token there, but why does it die? It
happens inside the psr->statement(psr) call.
The psr is my parser and "statement" is the top expression.

Any suggestions? 

Thanks,

Leonid

-----Original Message-----
From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Monday, December 15, 2008 6:24 PM
To: Ilyevsky, Leonid (Equity Trading); antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

On Mon, 15 Dec 2008 15:10:31 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> Jim,
>
> Just few more questions.
> I looked at your example in main.c, and it seems I can follow the
story
> there.
> Except that I would like some more details around the end of it.
> After you invoke the parser
>
> 	psr->translation_unit(psr);
>
> You say that we can finish there, and this is what I don't quite

Look at the tree parsing examples, or the polydiff example.

Jim

------------------------------------------------------------------------
--
This message w/attachments (message) may be privileged, confidential or
proprietary, and if you are not an intended recipient, please notify the
sender, do not use or share it and delete it. Unless specifically
indicated, this message is not an offer to sell or a solicitation of any
investment products or other financial product or service, an official
confirmation of any transaction, or an official statement of Merrill
Lynch. Subject to applicable law, Merrill Lynch may monitor, review and
retain e-communications (EC) traveling through its networks/systems. The
laws of the country of each sender/recipient may impact the handling of
EC, and EC may be archived, supervised and produced in countries other
than the country in which you are located. This message cannot be
guaranteed to be secure or error-free. This message is subject to terms
available at the following link:
http://www.ml.com/e-communications_terms/. By messaging with Merrill
Lynch you consent to the foregoing.
------------------------------------------------------------------------
--
 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From antlr at mirality.co.nz  Tue Dec 16 10:37:03 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 17 Dec 2008 07:37:03 +1300
Subject: [antlr-interest] Rule for ISO 8601 - Duration Standar
In-Reply-To: <cbda2c930812160352o2c6b1bbcvaa6c20f2556a9f67@mail.gmail.co
 m>
References: <cbda2c930812160350g2d500fale9db931e1e9d47e1@mail.gmail.com>
	<cbda2c930812160352o2c6b1bbcvaa6c20f2556a9f67@mail.gmail.com>
Message-ID: <20081216183715.1E8FF11EB4D@www.antlr.org>

At 00:52 17/12/2008, Javier Gomez Escribano wrote:
>I'm trying to parse a "duration string" which is in format ISO 
>8601:
>PnnYnnMnnDTnnHnnMnnS (P1Y0M27DT11H9M11S)
>where nn are numbers.
>(A reference to ISO 8601 for durations... 
>http://en.wikipedia.org/wiki/ISO_8601)
>
>The problem is that I have to put a white space between letters 
>and numbers. And it is something I'd like to avoid.
>
>Here is part of my code
>
>duration    :    (P_TOKEN (year=number Y_TOKEN)? (month=number 
>M_TOKEN)? (day=number D_TOKEN)?)?(T_TOKEN (hour=number H_TOKEN)? 
>(min=number M_TOKEN)? (sec=number S_TOKEN)?)? -> ^(YEAR $year)? 
>^(MONTH $month)? ^(DAY $day)? ^(HOUR $hour)? ^(MINUTE $min)? 
>^(SECOND $sec)?    ;

You should make this a lexer rule, to recognise the entire thing 
as a single token.  (Trying to use invididual letters as tokens 
like you're doing here quickly leads to complications.)

After that you can still split it up again in the parser for AST 
generation; just manually parse it at that point.  This will also 
let you produce better error messages in the cases of bad 
structure or out of range values.


From mnedelescu at versasys.com  Tue Dec 16 10:36:49 2008
From: mnedelescu at versasys.com (Marian Nedelescu)
Date: Tue, 16 Dec 2008 13:36:49 -0500
Subject: [antlr-interest] Filter lexer with a rewriting parser
Message-ID: <F4F5D0614301AD4E89A51DF6EF3B6693A46CB8@exchange.versa.versasys.com>

Hi,

 

I would like to know if it is possible to combine a filter lexer with a
rewriting parser without loosing the all content.

I need this because I want to create a utility that parse some xdoclets
commands from java file and rewrite some attribute. 

So I need if it is possible to define only my rules with rewriting and
all other things to go the the TokenRewriteStream (like 9.7 Rewriting
the Token Buffer In-Place from the book Definitive Antlr).

 

Thank you,

Marian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/ae3ffe0b/attachment.html 

From antlr at jazillian.com  Tue Dec 16 10:51:46 2008
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 16 Dec 2008 13:51:46 -0500
Subject: [antlr-interest] pretty printing in the c target
In-Reply-To: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>
References: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>
Message-ID: <4947F8C2.1070309@jazillian.com>

You could start with plain Java code that prints a Java AST:
http://www.jazillian.com/antlr/emitter.html
...and just change the "case" statements in JavaEmitter.print() to
their C equivalents.

Andy


Robert Soule wrote:
> Hi,
> 
> I am trying to write a pretty printer for my input language. In java,
> I read in the source, convert to the AST, then use a tree grammar
> to call the StringTemplates, and everything works fine. However,
> I need to use C as the target language, and there isn't a StringTemplate
> implementation in C.
> 
> I looked at the examples that are available on the antlr.org website,
> but the only ones that pretty print are toy examples, and simple append
> the character strings to the text contained in the token literals. This
> isn't really a feasible approach in my language. So, what I've ended up
> doing is following a pattern more or less like the following:
> 
> someRule
> returns [pANTLR3_STRING result]
> @init {result = factory->newRaw(factory);}
> : ^(SOMETOKEN anotherRule thirdRule)
> {
>   $result->append($result, "Start\n");
>   $result->appendS($result, $anotherRule.result);
>   factory->destroy(factory, $aotherRule.result);
>   $result->appendS($result, $thirdRule.result);
>   factory->destroy(factory, $thirdRule.result);
>   $result->append($result, "\n\n");
> }
> 
> However, I've encountered a few problems with this approach. First,
> when I call factory->close(..) at the end of my program, I get a double
> free problem, and I don't see in the API where I can call remove on
> the string from the factory. However, more troubling is that when the
> return of one of the rules like anotherRule is composed of only
> small literal strings (like "()"),  then calling destroy on the result sometimes
> frees too much memory, so that I cause problems for "thirdRule".
> Moreover, this just seems like an awkward way to build up my output
> string.
> 
> Since this seems like a pretty common task, I was wondering if
> there is a common, recommended way of doing this?
> 
> thank you,
> Robert
> thank you,
> Robert
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Tue Dec 16 11:09:33 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 11:09:33 -0800
Subject: [antlr-interest] pretty printing in the c target
In-Reply-To: <20081216072941.7A6B8120113E@msf1.dnsmadeeasy.com>
References: <d1316fd70812151709u5d92660fxeffebe51a2c108cb@mail.gmail.com>
	<op.ul8hk5mci0hb2k@jimi>
	<20081216072941.7A6B8120113E@msf1.dnsmadeeasy.com>
Message-ID: <op.ul9rh7d7i0hb2k@jimi>

On Mon, 15 Dec 2008 23:35:11 -0800, Gavin Lambert <ANTLR at mirality.co.nz>  
wrote:

> At 15:37 16/12/2008, Jim Idle wrote:
>  >You don't do that, you just let the factory take care of
>  >it all. When you close, it has trcked all the mmemory and
>  >it frees it all for you. You just use teh strings and forget
>  >about them as if they were Java objects. Use the factory in
>  >the parser (see C examples for poly for instance), and you
>  >don't even need to close your own factory.
>
> What if you've got lots of temporary strings though (or a big input  
> file)?  Wouldn't the memory usage add up quickly?
>

Depends how you use it, but of course this isn't the most efficient way.

That is why it is only a convenience thing and if you have megabytes of  
text to build up and cannot afford the memory space then you should use  
the tokens and extract the strings yourself.

To be honest though, my experience has been that it is relatively small  
beer for an average size program.

Jim


From parrt at cs.usfca.edu  Tue Dec 16 11:38:09 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 16 Dec 2008 11:38:09 -0800
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR
	conference 2009?
In-Reply-To: <9da4f4520812160126w5e3e402vb1196798149fca4b@mail.gmail.com>
References: <9da4f4520812151318i16648feay6de4a98e47fb3a7e@mail.gmail.com>
	<9da4f4520812151328j737429f2mb8899271fe873938@mail.gmail.com>
	<ee873c070812151618p1b774803y135b4015cda6f2ff@mail.gmail.com>
	<BA40B4C5-4947-425D-994A-6C7BE49E3130@cs.usfca.edu>
	<9da4f4520812160126w5e3e402vb1196798149fca4b@mail.gmail.com>
Message-ID: <3D7738A5-8C2D-4485-A352-7A93569A4553@cs.usfca.edu>

Many will be at javaone and have to head back sunday night for work on  
monday though.
T
On Dec 16, 2008, at 1:26 AM, Oliver Zeigermann wrote:

> 2008/12/16 Terence Parr <parrt at cs.usfca.edu>:
>>
>> On Dec 15, 2008, at 4:18 PM, Alexandre Porcelli wrote:
>>
>>> It would be GREAT!
>>>
>>> (1) What would you like to discuss / learn about?
>>> - Better understand of DFA
>>> - ANTLR Roadmap
>>> (2) What can you tell us about?
>>> - I could show something about OpenSpotLight... an open source tool
>>> that will be around in March.... OpenSpotLight is an open source SOA
>>> Governance Platform, that uses, a lot, ANTLR to parse different kind
>>> of sources!
>>> - I could tell about the chalanges faced during grammar development
>>> in Drools project (I'm drools parser developer)
>>>
>>> ps: My sugestion for a schedule would be just after (or before)
>>> JavaOne.
>>
>> Excellent point.  That's June 2-5, 2009.  I guess the two days
>> afterwards would work, right? June 6, 7?
>
> June 6 and 7 are Saturday and Sunday. Not sure if people will come on
> weekends. What about June 8 and 9?
>
> Oliver


From Leonid_Ilyevsky at ml.com  Tue Dec 16 11:44:52 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Tue, 16 Dec 2008 14:44:52 -0500
Subject: [antlr-interest] C target help
In-Reply-To: <3E72421F68C8FA4EA34571EA154D67E8024C14C7@MLNYC20MB053.amrs.win.ml.com>
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14CA@MLNYC20MB053.amrs.win.ml.com>


 Jim,

I did some debugging of your antlr code (just using the print
statements), and I found a problem. It is in antlr3baserecognizer.c,
around line 1025.

The fragment is below.

First of all, "theToken" is checked for NULL after it is used for
evaluating ttext. So I tried to move the ttext evaluation inside the
"else" block, just before it is used. Unfortunately, I found that in my
case theToken is not NULL, but the program still died somewhere inside
"theToken->toString(theToken)" call.

So I just commented that ttext evaluation out, and it does not die now.

Obviously this is not a proper fix, so please look into that.

Regards,

Leonid



=============================================
 switch  (recognizer->type)
        {
        case    ANTLR3_TYPE_PARSER:

                // Prepare the knowledge we know we have
                //
                parser      = (pANTLR3_PARSER) (recognizer->super);
                tparser     = NULL;
                is                      = parser->tstream->istream;
                theToken    =
(pANTLR3_COMMON_TOKEN)(recognizer->state->exception->token);
                ttext       = theToken->toString(theToken);

                ANTLR3_FPRINTF(stderr, ", at offset %d",
recognizer->state->exception->charPositionInLine);
                if  (theToken != NULL)
                {
                        if (theToken->type == ANTLR3_TOKEN_EOF)
                        {
                                ANTLR3_FPRINTF(stderr, ", at <EOF>");
                        }
                        else
                        {
                                // Guard against null text in a token
                                //
                                ANTLR3_FPRINTF(stderr, "\n    near %s\n
", ttext == NULL ? (pANTLR3_UINT8)"<no text for the token>" :
ttext->chars);
                        }
                }
                break;

=============================================


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ilyevsky, Leonid
(Equity Trading)
Sent: Tuesday, December 16, 2008 12:47 PM
To: Jim Idle; antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

Hi Jim,

I made some progress since yesterday, so now I am doing some testing.

Here is the next problem I hit. If the text to parse is good, then it
goes through OK (I did not come to analyze the result yet). But if there
is an error, then the program just dies after logging the error message.
For example:

-memory-(1)  : error 1 : Unexpected token

Yes, indeed, there is an unexpected token there, but why does it die? It
happens inside the psr->statement(psr) call.
The psr is my parser and "statement" is the top expression.

Any suggestions? 

Thanks,

Leonid

-----Original Message-----
From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Monday, December 15, 2008 6:24 PM
To: Ilyevsky, Leonid (Equity Trading); antlr-interest at antlr.org
Subject: Re: [antlr-interest] C target help

On Mon, 15 Dec 2008 15:10:31 -0800, Ilyevsky, Leonid (Equity Trading)  
<Leonid_Ilyevsky at ml.com> wrote:

> Jim,
>
> Just few more questions.
> I looked at your example in main.c, and it seems I can follow the
story
> there.
> Except that I would like some more details around the end of it.
> After you invoke the parser
>
> 	psr->translation_unit(psr);
>
> You say that we can finish there, and this is what I don't quite

Look at the tree parsing examples, or the polydiff example.

Jim

------------------------------------------------------------------------
--
This message w/attachments (message) may be privileged, confidential or
proprietary, and if you are not an intended recipient, please notify the
sender, do not use or share it and delete it. Unless specifically
indicated, this message is not an offer to sell or a solicitation of any
investment products or other financial product or service, an official
confirmation of any transaction, or an official statement of Merrill
Lynch. Subject to applicable law, Merrill Lynch may monitor, review and
retain e-communications (EC) traveling through its networks/systems. The
laws of the country of each sender/recipient may impact the handling of
EC, and EC may be archived, supervised and produced in countries other
than the country in which you are located. This message cannot be
guaranteed to be secure or error-free. This message is subject to terms
available at the following link:
http://www.ml.com/e-communications_terms/. By messaging with Merrill
Lynch you consent to the foregoing.
------------------------------------------------------------------------
--
 

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
ess


From George.Shannon at raphaelanalytics.com  Tue Dec 16 12:34:53 2008
From: George.Shannon at raphaelanalytics.com (George J. Shannon)
Date: Tue, 16 Dec 2008 14:34:53 -0600
Subject: [antlr-interest] Looking for examples to walk parser tree or AST
	with C runtime
Message-ID: <DB3F544385B6440BAF174A3438037AF9@raphael01>

I need to extract C++ objects from tree that will result from C runtime.

Would anyone mind sharing examples of walking the AST information extracted
by the C runtime?  I'm just looking for something to give me a jumpstart.

I have the grammar/lexicon working just fine in Java.  I don't know if it
has value or not, but I'm attaching the ANTLR .g file.

The examples that Jim so kindly put together for the C runtime don't appear
to apply to my case in that I do not need to verify the language - I'm
parsing code that is extracted from another IDE that has already verified
the text as being compliant against the ENBF rules.  What I need to do is
determine which rules apply for a particular sequence of text, and extract
different C++ objects depending upon which ENBF rules were fired.  Hence
what I need is more like a parse tree than an AST tree.

In the early summer/late spring someone was kind enough to provide such an
example, but Outlook ate my archival files and I was unable to recover it
(yes teacher, the dog really did eat my homework).

And, as always, it would be really nice to know when the promised C++
version of the C runtime will be made available to see if the C++ version
helps simplify things.

Thanks so much for the assistance,

Regards,

George

 

George Shannon

President, Raphael Analytics, Inc.

16 Spur Drive

Fenton, MO 63026

(314) 550-5589 (cell)

 <mailto:George.Shannon at raphaelanalytics.com>
George.Shannon at raphaelanalytics.com

 <http://www.raphaelanalytics.com> www.raphaelanalytics.com

 

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material.  Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited.   If you received
this in error, please contact the sender and delete the material from any
computer.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/c0874d5b/attachment.html 

From George.Shannon at raphaelanalytics.com  Tue Dec 16 12:37:35 2008
From: George.Shannon at raphaelanalytics.com (George J. Shannon)
Date: Tue, 16 Dec 2008 14:37:35 -0600
Subject: [antlr-interest] Looking for examples to walk parser tree or
	ASTwith C runtime
In-Reply-To: <DB3F544385B6440BAF174A3438037AF9@raphael01>
References: <DB3F544385B6440BAF174A3438037AF9@raphael01>
Message-ID: <58DCA955DC0C4F698ECE33A89A141838@raphael01>

.g file I neglected to attach.

 

George Shannon

President, Raphael Analytics, Inc.

16 Spur Drive

Fenton, MO 63026

(314) 550-5589 (cell)

 <mailto:George.Shannon at raphaelanalytics.com>
George.Shannon at raphaelanalytics.com

 <http://www.raphaelanalytics.com> www.raphaelanalytics.com

 

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material.  Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited.   If you received
this in error, please contact the sender and delete the material from any
computer.

  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of George J. Shannon
Sent: Tuesday, December 16, 2008 2:35 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Looking for examples to walk parser tree or
ASTwith C runtime

 

I need to extract C++ objects from tree that will result from C runtime.

Would anyone mind sharing examples of walking the AST information extracted
by the C runtime?  I'm just looking for something to give me a jumpstart.

I have the grammar/lexicon working just fine in Java.  I don't know if it
has value or not, but I'm attaching the ANTLR .g file.

The examples that Jim so kindly put together for the C runtime don't appear
to apply to my case in that I do not need to verify the language - I'm
parsing code that is extracted from another IDE that has already verified
the text as being compliant against the ENBF rules.  What I need to do is
determine which rules apply for a particular sequence of text, and extract
different C++ objects depending upon which ENBF rules were fired.  Hence
what I need is more like a parse tree than an AST tree.

In the early summer/late spring someone was kind enough to provide such an
example, but Outlook ate my archival files and I was unable to recover it
(yes teacher, the dog really did eat my homework).

And, as always, it would be really nice to know when the promised C++
version of the C runtime will be made available to see if the C++ version
helps simplify things.

Thanks so much for the assistance,

Regards,

George

 

George Shannon

President, Raphael Analytics, Inc.

16 Spur Drive

Fenton, MO 63026

(314) 550-5589 (cell)

 <mailto:George.Shannon at raphaelanalytics.com>
George.Shannon at raphaelanalytics.com

 <http://www.raphaelanalytics.com> www.raphaelanalytics.com

 

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material.  Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited.   If you received
this in error, please contact the sender and delete the material from any
computer.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/958eaeef/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: RungNoActions.g
Type: application/octet-stream
Size: 3131 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/958eaeef/attachment.obj 

From jason.terhune at thomsonreuters.com  Tue Dec 16 13:50:26 2008
From: jason.terhune at thomsonreuters.com (jason.terhune at thomsonreuters.com)
Date: Tue, 16 Dec 2008 15:50:26 -0600
Subject: [antlr-interest] Small input and grammar causes out of memory error
	(Java)
Message-ID: <FBD82033119D79469016E85C41DA791B18D17D14@TLRUSMNEAGMBX23.ERF.THOMSON.COM>

Hi all,

I was playing with the TDD example on the wiki, and I was surprised to
see an out of memory error with my trivial grammar and input using
v3.1.1.  After I fixed my grammar by adding a space to the NONBREAKING
definition, the problem went away:
NONBREAKING : ('a'..'z' | 'A'..'Z' | ' ');

I won't pretend to understand parser generators, but it seems like this
problem should fail fast instead of consuming a bunch of memory.  Is
there an option I can set to avoid this?  Should I submit this as a bug?
I've pasted the grammar, test case and stack trace below.

Thanks,
Jason


--- grammar ---

grammar CSV;

options {
	language = Java;
}

@header {
  package com.trgr.parser;
}

@lexer::header {package com.trgr.parser;}

line returns [List<String> result]
@init {
    result = new ArrayList<String>();
}
:  term NEWLINE;

term returns [String parsedItem]
  : f=TERM { $parsedItem = $f.text;}
  |   // nothing
  ;

NEWLINE : '\r'? '\n';

NONBREAKING : ('a'..'z' | 'A'..'Z');

TERM : NONBREAKING*;


--- junit test ---

package com.trgr.parser;

public class CSVParserTest {
	@Test
	public void testMultipleWords() throws IOException,
RecognitionException {
	    CSVParser parser = createParser("Red Blue\n");
	    List<String> result = parser.line();
	    assertEquals(2, result.size());
	    assertEquals("Red", result);
	    assertEquals("Blue", result);
	}
	
	private CSVParser createParser(String testString) throws
IOException {
	    CharStream stream = new ANTLRStringStream(testString);
	    CSVLexer lexer = new CSVLexer(stream);
	    CommonTokenStream tokens = new CommonTokenStream(lexer);
	    CSVParser parser = new CSVParser(tokens);
	    return parser;
	}
}

--- exception ---

java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Unknown Source)
	at java.util.Arrays.copyOf(Unknown Source)
	at java.util.ArrayList.ensureCapacity(Unknown Source)
	at java.util.ArrayList.add(Unknown Source)
	at
org.antlr.runtime.CommonTokenStream.fillBuffer(CommonTokenStream.java:11
6)
	at
org.antlr.runtime.CommonTokenStream.LT(CommonTokenStream.java:238)
	at
org.antlr.runtime.CommonTokenStream.LA(CommonTokenStream.java:300)


From matthew.e.boyce at gmail.com  Tue Dec 16 15:29:01 2008
From: matthew.e.boyce at gmail.com (Matthew E. Boyce)
Date: Tue, 16 Dec 2008 15:29:01 -0800
Subject: [antlr-interest] Writing Token Vocab from a combined lexer/parser
Message-ID: <3EE6B644-D6BF-4FF2-A252-F9EA91DF4BC8@gmail.com>

I've defined a lexer and parser in the same file, which doesn't by  
default seem to produce the .tokens file I would expect.  The list  
includes a number of T__*=* tokens, the lexer names I'd expect, and  
numbers for the literals defined in the parser.  This is all well and  
good, but it seems that nowhere in the file do the tokens declared in  
my tokens section appear.  Which causes obvious problems for my tree  
parser... so my question is what am I missing... how do I force these  
tokens which are being used for AST creation to be written?

~MEB

From jimi at temporal-wave.com  Tue Dec 16 15:31:52 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 15:31:52 -0800
Subject: [antlr-interest] Small input and grammar causes out of memory
 error (Java)
In-Reply-To: <FBD82033119D79469016E85C41DA791B18D17D14@TLRUSMNEAGMBX23.ERF.THOMSON.COM>
References: <FBD82033119D79469016E85C41DA791B18D17D14@TLRUSMNEAGMBX23.ERF.THOMSON.COM>
Message-ID: <op.ul93nezji0hb2k@jimi>

On Tue, 16 Dec 2008 13:50:26 -0800, <jason.terhune at thomsonreuters.com>  
wrote:

> Hi all,
>
> I was playing with the TDD example on the wiki, and I was surprised to
> see an out of memory error with my trivial grammar and input using
> v3.1.1.  After I fixed my grammar by adding a space to the NONBREAKING
> definition, the problem went away:
> NONBREAKING : ('a'..'z' | 'A'..'Z' | ' ');
>

That is a by prodcut of your reall error, which is that you have a lexer  
rule that can match nothing and so will (depending on your other rules),  
continue to match nohting forever:

> TERM : NONBREAKING*;


That should be a + not a *

Also, you cannot have two lexer rules matching the same thing, which  
NONBREAKING and TERM are doing as you have them. Perhaps you want  
NONBREAKING to be a fragment rule? Then it won't try to generate its own  
token match, fragment just means that you will use it in other rules.

Jim

From jimi at temporal-wave.com  Tue Dec 16 15:34:23 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 15:34:23 -0800
Subject: [antlr-interest] Writing Token Vocab from a combined
	lexer/parser
In-Reply-To: <3EE6B644-D6BF-4FF2-A252-F9EA91DF4BC8@gmail.com>
References: <3EE6B644-D6BF-4FF2-A252-F9EA91DF4BC8@gmail.com>
Message-ID: <op.ul93rliui0hb2k@jimi>

On Tue, 16 Dec 2008 15:29:01 -0800, Matthew E. Boyce  
<matthew.e.boyce at gmail.com> wrote:

> I've defined a lexer and parser in the same file, which doesn't by
> default seem to produce the .tokens file I would expect.  The list
> includes a number of T__*=* tokens, the lexer names I'd expect, and
> numbers for the literals defined in the parser.  This is all well and
> good, but it seems that nowhere in the file do the tokens declared in
> my tokens section appear.  Which causes obvious problems for my tree
> parser... so my question is what am I missing... how do I force these
> tokens which are being used for AST creation to be written?


You will probably need to post the grammars as it works as you expect it  
to.

Jim

>
> ~MEB
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:  
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/

From chainone at gmail.com  Tue Dec 16 15:54:58 2008
From: chainone at gmail.com (chain one)
Date: Wed, 17 Dec 2008 07:54:58 +0800
Subject: [antlr-interest] Why does Lexer of C++ run time target eat so
	much memory
In-Reply-To: <5a92ffb60812152332w730e1086xae39e39cc4c4a451@mail.gmail.com>
References: <5a92ffb60812152332w730e1086xae39e39cc4c4a451@mail.gmail.com>
Message-ID: <5a92ffb60812161554v49c52882v69743f9266d54159@mail.gmail.com>

Still waiting for help
I just wanna know, if c runtime target is  suitable for large input?

On 12/16/08, chain one <chainone at gmail.com> wrote:
> Hi,
> These days I am writing a parser for a kind of data file using C++. The
> format of the data file is simple, so the rules are simple.
> But when I feed a about 20M-size data file to the parser, the parser eats
> almost  600M+ memory.
> I am surprised by this result and I found most memory and time were consumed
> by the Lexer.
>
> Is there anything wrong with my grammar or it is the performance issue of
> ANTLR3 C++ runtime?
> I hope there is some way to get my parser  more lightweight.
>
> I attached the .g file to this mail and the data file(.txt format) could be
> got from this link:https://download.yousendit.com/Q01FSU5ONEhZY1IzZUE9PQ
>
> The test main function is:
> ========================================
>      int main(int argc, char * argv[])
>      {
>         pANTLR3_INPUT_STREAM           input;
>         pExpressDataLexer               lex;
>         pANTLR3_COMMON_TOKEN_STREAM    tokens;
>         pExpressDataParser              parser;
>
>         input  = antlr3AsciiFileStreamNew          ((pANTLR3_UINT8)argv[1]);
>         lex    = ExpressDataLexerNew                (input);
>         tokens = antlr3CommonTokenStreamSourceNew  (ANTLR3_SIZE_HINT,
> TOKENSOURCE(lex));
>         parser = ExpressDataParserNew               (tokens);
>
>         parser  ->syntax(parser);
>
>         parser ->free(parser);
>         tokens ->free(tokens);
>         lex    ->free(lex);
>         input  ->close(input);
>
>         return 0;
>      }
>

-- 
Sent from my mobile device

From jimi at temporal-wave.com  Tue Dec 16 16:09:41 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 16:09:41 -0800
Subject: [antlr-interest] Why does Lexer of C++ run time target eat so
 much memory
Message-ID: <op.ul95efswi0hb2k@jimi>

On Tue, 16 Dec 2008 15:54:58 -0800, chain one <chainone at gmail.com> wrote:

> Still waiting for help
> I just wanna know, if c runtime target is suitable for large input?

Yes.


>
> On 12/16/08, chain one <chainone at gmail.com> wrote:
>> Hi,
>> These days I am writing a parser for a kind of data file using C++. The
>> format of the data file is simple, so the rules are simple.
>> But when I feed a about 20M-size data file to the parser, the parser 
>> eats
>> almost 600M+ memory.
>> I am surprised by this result and I found most memory and time were 
>> consumed
>> by the Lexer.

There is possibly something not quite right with this then. 

However, a 20M input file is going to generate a lot of tokens and you need all of tokens in order to 
parse the input, hence you are using a lot of memory - especially if a lot of your tokens are just a few characters. If all your tokens were one character then you would need 20M tokens - that would be the worst case and your case will be something less than this. 

One way to reduce the number of tokens is to use the SKIP(); macro on tokens that you don't need the parser to see, such as ',' or ' ' and so on. Otherwise they are sitting in your token stream for no reason. Only mark them as hidden and keep them in the token stream if you will need to examine them later. Otherwise SKIP them.

>>
>> Is there anything wrong with my grammar or it is the performance issue 
>> of
>> ANTLR3 C++ runtime?
>> I hope there is some way to get my parser more lightweight.
>>
>> I attached the .g file to this mail and the data file(.txt format) 
>> could be

I must have missed the original emails, sorry about that. Can you resend me your .g file?

Jim
>> got from this link:https://download.yousendit.com/Q01FSU5ONEhZY1IzZUE9PQ
>>
>> The test main function is:
>> ========================================
>> int main(int argc, char * argv[])
>> {



-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/d95158d6/attachment.html 

From Leonid_Ilyevsky at ml.com  Tue Dec 16 16:27:38 2008
From: Leonid_Ilyevsky at ml.com (Ilyevsky, Leonid (Equity Trading))
Date: Tue, 16 Dec 2008 19:27:38 -0500
Subject: [antlr-interest] C target help
In-Reply-To: <3E72421F68C8FA4EA34571EA154D67E8024C14CA@MLNYC20MB053.amrs.win.ml.com>
Message-ID: <3E72421F68C8FA4EA34571EA154D67E8024C14CB@MLNYC20MB053.amrs.win.ml.com>

 
Jim,

I found another issue. I am just following the example, parsing the
string, getting the tree and trying to print it out. The code is below.

The program dies at the line

cout << "Tree: " << ast.tree->toStringTree(ast.tree)->chars << endl;

As I put some debugging in the antlr core code, I see that the problem
is corrupted token object.
Here is my test output:

-----------------------------------------------
QUERY: select from TestCache where X = 123
Init parser
About to parse
Parsing done
Parser succeeded
src/antlr3basetree.c:255
src/antlr3basetree.c:269
src/antlr3commontree.c:423
src/antlr3commontree.c:434
src/antlr3commontoken.c:346
src/antlr3commontoken.c:367
Token: Tz Start: -1612541768 End: -1612541760
Process died unexpectedly .....
-----------------------------------------------

I am not sure what should be the start and stop number in the token, but
those huge negative numbers do not look right.





==========================================

/* 
 * File:   QueryProcessor.h
 * Author: lilyevsk
 *
 * Created on December 16, 2008, 9:33 AM
 */

#ifndef _QUERYPROCESSOR_H
#define	_QUERYPROCESSOR_H

#include <c8queryLexer.h>
#include <c8queryParser.h>

class QueryProcessor {
public:

    void testQuery(const char * query) {
        cout << __FILE__ << ":" << __LINE__ << endl;
        pANTLR3_INPUT_STREAM input;
        pc8queryLexer lxr;
        pANTLR3_COMMON_TOKEN_STREAM qstream;
        pc8queryParser psr;

        try {
            cout << __FILE__ << ":" << __LINE__ << endl;

            //ANTLR3_STRING_FACTORY factory;

            cout << "QUERY: " << query << endl;

            //pANTLR3_STRING queryStr = factory.newStr8(&factory,
(pANTLR3_UINT8) query);

            input = antlr3NewAsciiStringInPlaceStream((pANTLR3_UINT8)
query, strlen(query), NULL);

            lxr = c8queryLexerNew(input);

            if (lxr == NULL) {
                cerr << "Unable to create the lexer due to malloc()
failure" << endl;
                return;
            }
            qstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
TOKENSOURCE(lxr));

            if (qstream == NULL) {
                cerr << "Out of memory trying to allocate token stream"
<< endl;
                return;
            }

            cout << "Init parser" << endl;

            psr = c8queryParserNew(qstream);

            cout << "About to parse" << endl;

            c8queryParser_statement_return ast = psr->statement(psr);

            cout << "Parsing done" << endl;

            if (psr->pParser->rec->state->errorCount > 0) {
                cerr << "The parser returned " <<
                        psr->pParser->rec->state->errorCount <<
                        " errors, tree walking aborted." << endl;
                return;

            } else {
                cout << "Parser succeeded" << endl;
            }

            cout << "Tree: " << ast.tree->toStringTree(ast.tree)->chars
<< endl;

            pANTLR3_COMMON_TREE_NODE_STREAM nodes =
                    antlr3CommonTreeNodeStreamNewTree(ast.tree,
ANTLR3_SIZE_HINT);

            cout << "Initialized nodes" << endl;
                       
            
            nodes ->free(nodes);
            nodes = NULL;
            

            // Cleanup
            psr ->free(psr);
            psr = NULL;
            qstream ->free(qstream);
            qstream = NULL;
            lxr ->free(lxr);
            lxr = NULL;
            input->reset(input);

            cout << __FILE__ << ":" << __LINE__ << endl;

        } catch (exception& e) {
            cerr << "exception: " << e.what() << endl;
        }

    }
};


#endif	/* _QUERYPROCESSOR_H */

==========================================

--------------------------------------------------------------------------
This message w/attachments (message) may be privileged, confidential or proprietary, and if you are not an intended recipient, please notify the sender, do not use or share it and delete it. Unless specifically indicated, this message is not an offer to sell or a solicitation of any investment products or other financial product or service, an official confirmation of any transaction, or an official statement of Merrill Lynch. Subject to applicable law, Merrill Lynch may monitor, review and retain e-communications (EC) traveling through its networks/systems. The laws of the country of each sender/recipient may impact the handling of EC, and EC may be archived, supervised and produced in countries other than the country in which you are located. This message cannot be guaranteed to be secure or error-free. This message is subject to terms available at the following link: http://www.ml.com/e-communications_terms/. By messaging with Merrill Lynch you consent to the foregoing.
--------------------------------------------------------------------------
 

From jimi at temporal-wave.com  Tue Dec 16 17:48:01 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 17:48:01 -0800
Subject: [antlr-interest] C target help
Message-ID: <op.ul99ybzci0hb2k@jimi>

On Tue, 16 Dec 2008 16:27:38 -0800, Ilyevsky, Leonid (Equity Trading) <Leonid_Ilyevsky at ml.com> wrote:

>Jim,
>
> I found another issue. I am just following the example, parsing the
> string, getting the tree and trying to print it out. The code is below.
>

I think that you should first check your own memory usage with valgrind to be honest. The other possibility is that you are trying to use text from tokens that do not have anything in them, such as imaginary tokens.

Remove any action code and make sure your lexer is not trying to set the token text. The get the feel of this with a very simple grammar.

Then see if you can print the tree. Imaginary tokens with incorrect text are my bet though. Might be a left over from my change from calloc to malloc, or the new way that imaginary tokens store their text in 3.1.1. Will try to look at the possibilities tomorrow. 


Jim

> The program dies at the line
>
> cout << "Tree: " << ast.tree->toStringTree(ast.tree)->chars << endl;
>
> As I put some debugging in the antlr core code, I see that the problem
> is corrupted token object.
> Here is my test output:
>
> -----------------------------------------------
> QUERY: select from TestCache where X = 123
> Init parser
> About to parse
> Parsing done
> Parser succeeded
> src/antlr3basetree.c:255
> src/antlr3basetree.c:269
> src/antlr3commontree.c:423
> src/antlr3commontree.c:434
> src/antlr3commontoken.c:346
> src/antlr3commontoken.c:367
> Token: Tz Start: -1612541768 End: -1612541760
> Process died unexpectedly .....
> -----------------------------------------------
>
> I am not sure what should be the start and stop number in the token, but
> those huge negative numbers do not look right.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/d203148f/attachment.html 

From chainone at gmail.com  Tue Dec 16 18:28:50 2008
From: chainone at gmail.com (chain one)
Date: Wed, 17 Dec 2008 10:28:50 +0800
Subject: [antlr-interest] Why does Lexer of C++ run time target eat so
	much memory
In-Reply-To: <op.ul95efswi0hb2k@jimi>
References: <op.ul95efswi0hb2k@jimi>
Message-ID: <5a92ffb60812161828t3c376392h38f544574a5b92c3@mail.gmail.com>

Thanks Jim,Your suggestion is very helpful to me.
I have checked my grammar according to your advice and SKIP some useless
tokens.
After doing this, the peak memory usage decrease  from 660M to 480M.
However 480M is still a very large number to me.

And I found some strange behaviors of Lexer of ANTLR3 C Runtime.

The first two rules of my grammar to be called  when parsing  is:
syntax
: ISO_HEADER  header_sec data_sec ISO_END
;
header_sec
: HEADER  file_des file_name file_schema END_SEC
;

I placed breakpoints in both functions.
And the first parameter of function "antlr3CommonTokenStreamSourceNew"
 which I think is used to adjust the token buffer size is left to the
default value ANTLR3_SIZE_HINT(1025).
            tokens = antlr3CommonTokenStreamSourceNew  (ANTLR3_SIZE_HINT,
TOKENSOURCE(lex));

I believe the number of tokens will never exceed 1025 when parsing, but what
happened later makes me doubt about this.

When debugging, I found the breakpoint in syntax rule( top rule) was
triggered right after parser started to work.
That's OK, because synatx() is called in the main function

But what's strange was , the breakpoint in header_sec was not be triggered
until the memory kept increasing to 478M!!
It is believed that the Lexer kept all the tokens recognized from the large
input file in buffer before parser really started to work.
Am I right? If I am, then what does ANTLR3_SIZE_HINT mean? How to adjust the
buffer size in C runtime?


2008/12/17 Jim Idle <jimi at temporal-wave.com>

> On Tue, 16 Dec 2008 15:54:58 -0800, chain one <chainone at gmail.com> wrote:
>
> > Still waiting for help
> > I just wanna know, if c runtime target is suitable for large input?
>
> Yes.
>
>
> >
> > On 12/16/08, chain one <chainone at gmail.com> wrote:
> >> Hi,
> >> These days I am writing a parser for a kind of data file using C++. The
> >> format of the data file is simple, so the rules are simple.
> >> But when I feed a about 20M-size data file to the parser, the parser
> >> eats
> >> almost 600M+ memory.
> >> I am surprised by this result and I found most memory and time were
> >> consumed
> >> by the Lexer.
>
> There is possibly something not quite right with this then.
>
> However, a 20M input file is going to generate a lot of tokens and you need
> all of tokens in order to
> parse the input, hence you are using a lot of memory - especially if a lot
> of your tokens are just a few characters. If all your tokens were one
> character then you would need 20M tokens - that would be the worst case and
> your case will be something less than this.
>
> One way to reduce the number of tokens is to use the SKIP(); macro on
> tokens that you don't need the parser to see, such as ',' or ' ' and so on.
> Otherwise they are sitting in your token stream for no reason. Only mark
> them as hidden and keep them in the token stream if you will need to examine
> them later. Otherwise SKIP them.
>
> >>
> >> Is there anything wrong with my grammar or it is the performance issue
> >> of
> >> ANTLR3 C++ runtime?
> >> I hope there is some way to get my parser more lightweight.
> >>
> >> I attached the .g file to this mail an d the data file(.txt format)
> >> could be
>
> I must have missed the original emails, sorry about that. Can you resend me
> your .g file?
>
> Jim
> >> got from this link:
> https://download.yousendit.com/Q01FSU5ONEhZY1IzZUE9PQ
> >>
> >> The test main function is:
> >> ========================================
> >> int main(int argc, char * argv[])
> >> {
>
>
>
> --
> Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/fb48d914/attachment.html 

From George.Shannon at raphaelanalytics.com  Tue Dec 16 19:04:27 2008
From: George.Shannon at raphaelanalytics.com (George J. Shannon)
Date: Tue, 16 Dec 2008 21:04:27 -0600
Subject: [antlr-interest] Looking for examples to walk parser tree or
	AST with C runtime
Message-ID: <62CBD7ECBBF740FDBC30081E1ECD557B@raphael01>

Still hoping to get information - any responses on the availability of C++
classes for the C runtime or examples of walking tree output?

 

George Shannon

.

  _____  

From: George J. Shannon [mailto:George.Shannon at raphaelanalytics.com] 
Sent: Tuesday, December 16, 2008 2:35 PM
To: 'antlr-interest at antlr.org'
Subject: Looking for examples to walk parser tree or AST with C runtime

 

I need to extract C++ objects from tree that will result from C runtime.

Would anyone mind sharing examples of walking the AST information extracted
by the C runtime?  I'm just looking for something to give me a jumpstart.

I have the grammar/lexicon working just fine in Java.  I don't know if it
has value or not, but I'm attaching the ANTLR .g file.

The examples that Jim so kindly put together for the C runtime don't appear
to apply to my case in that I do not need to verify the language - I'm
parsing code that is extracted from another IDE that has already verified
the text as being compliant against the ENBF rules.  What I need to do is
determine which rules apply for a particular sequence of text, and extract
different C++ objects depending upon which ENBF rules were fired.  Hence
what I need is more like a parse tree than an AST tree.

In the early summer/late spring someone was kind enough to provide such an
example, but Outlook ate my archival files and I was unable to recover it
(yes teacher, the dog really did eat my homework).

And, as always, it would be really nice to know when the promised C++
version of the C runtime will be made available to see if the C++ version
helps simplify things.

Thanks so much for the assistance,

Regards,

George

 

George Shannon

President, Raphael Analytics, Inc.

16 Spur Drive

Fenton, MO 63026

(314) 550-5589 (cell)

 <mailto:George.Shannon at raphaelanalytics.com>
George.Shannon at raphaelanalytics.com

 <http://www.raphaelanalytics.com> www.raphaelanalytics.com

 

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material.  Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited.   If you received
this in error, please contact the sender and delete the material from any
computer.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/1eb1e027/attachment.html 

From jimi at temporal-wave.com  Tue Dec 16 19:08:49 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 19:08:49 -0800
Subject: [antlr-interest] Why does Lexer of C++ run time target eat so
 much memory
Message-ID: <op.umadozf7i0hb2k@jimi>

On Tue, 16 Dec 2008 18:28:50 -0800, chain one <chainone at gmail.com> wrote:


Thanks Jim,


Your suggestion is very helpful to me.
I have checked my grammar according to your advice and SKIP some useless tokens.
After doing this, the peak memory usage decrease ? from 660M to 480M.
However 480M is still a very large number to me.

And I found some strange behaviors of Lexer of ANTLR3 C Runtime.? 

The first two rules of my grammar to be called ? when parsing ? is:
syntax
	: ISO_HEADER ? header_sec data_sec ISO_END? 
	;
header_sec
	: HEADER ? file_des file_name file_schema END_SEC? 
	;

I placed breakpoints in both functions.
And the first parameter of function "antlr3CommonTokenStreamSourceNew" ? which I think is used to adjust the token buffer size is left to the default value? ANTLR3_SIZE_HINT(1025).
? ?  ?  ?  ?  ?  ? tokens = antlr3CommonTokenStreamSourceNew ? (ANTLR3_SIZE_HINT, TOKENSOURCE(lex));

I believe the number of tokens will never exceed 1025 when parsing, but what happened later makes me doubt about this.



When debugging, I found the breakpoint in? syntax rule( top rule) was? triggered? right after parser started to work.
That's OK, because synatx() is called in the main function

But what's strange was , the breakpoint in? header_sec was not be? triggered?  until the memory kept increasing to 478M!!
It is believed that the Lexer kept all the tokens recognized from the large input file in buffer before parser really started to work.
Am I right? If I am, then what does ANTLR3_SIZE_HINT mean? How to adjust the buffer size in C runtime?


2008/12/17 Jim Idle <jimi at temporal-wave.com>
On Tue, 16 Dec 2008 15:54:58 -0800, chain one <chainone at gmail.com> wrote:

> Still waiting for help
> I just wanna know, if c runtime target is suitable for large input?

Yes.



>
> On 12/16/08, chain one <chainone at gmail.com> wrote:
 >> Hi,
>> These days I am writing a parser for a kind of data file using C++. The
>> format of the data file is simple, so the rules are simple.
>> But when I feed a about 20M-size data file to the parser, the parser 
 >> eats
>> almost 600M+ memory.
>> I am surprised by this result and I found most memory and time were 
>> consumed
>> by the Lexer.

There is possibly something not quite right with this then. 

However, a 20M input file is going to generate a lot of tokens and you need all of tokens in order to 
parse the input, hence you are using a lot of memory - especially if a lot of your tokens are just a few characters. If all your tokens were one character then you would need 20M tokens - that would be the worst case and your case will be something less than this.? 

One way to reduce the number of tokens is to use the SKIP(); macro on tokens that you don't need the parser to see, such as ',' or ' ' and so on. Otherwise they are sitting in your token stream for no reason. Only mark them as hidden and keep them in the token stream if you will need to examine them later. Otherwise SKIP them.

I think you are not understanding the interaction. The lexer will run first and will produce a collection of ALL the tokens in the files. ONce it has done this, THEN the parser will run. Hence you have a HUGE number of tokens - many many more than 1024. You don't really need to change the size hint, this is just how many tokens the lexer token factory pre-allocates in one chunk. Increasing it will not change anything much as only the tokens are getting allocated anyway (it is just faster to allocate them in chunks like this).

Looking at what you are parsing tends to make me think you would be better off with a filtering lexer and avoiding the parser altogether. Then you don't need to deal with any tokens, as you can SKIP them all. Or perhaps this language does not lend it self to this kind of lexer/parser interaction if you cannot deal with the huge memory.

Here is another way though and that is to hand craft a lexer that does not pre-allocate tokens like that and override the token stream etc.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/4a1e6cf3/attachment.html 

From jimi at temporal-wave.com  Tue Dec 16 19:10:21 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 16 Dec 2008 19:10:21 -0800
Subject: [antlr-interest] Looking for examples to walk parser tree or
 AST with C runtime
Message-ID: <op.umadrjqni0hb2k@jimi>

On Tue, 16 Dec 2008 19:04:27 -0800, George J. Shannon <George.Shannon at raphaelanalytics.com> wrote:


Still hoping to get information - any responses on the availability of C++ classes for the C runtime or examples of walking tree output?

 


-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
\
Walk the ttree using a tree grammar as per the examples. C++ is still a way off as effort went into the build process and related tools.

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/5a3ce32d/attachment.html 

From chainone at gmail.com  Tue Dec 16 19:49:40 2008
From: chainone at gmail.com (chain one)
Date: Wed, 17 Dec 2008 11:49:40 +0800
Subject: [antlr-interest] Why does Lexer of C++ run time target eat so
	much memory
In-Reply-To: <op.umadozf7i0hb2k@jimi>
References: <op.umadozf7i0hb2k@jimi>
Message-ID: <5a92ffb60812161949o162383d6t25f57cd6d2cd4bfc@mail.gmail.com>

Thanks Jim.After your patient explanation, I think I am clear about where
the problem is.

I think in the current C runtime target, a huge file leads to a huge number
of tokens need to be pre-stored in memory. That fact makes ANTLR C runtime
not suitable for huge file input due to the huge memory consuming issue.

I think the best choice is definitely to hand craft a lexer(having a token
buffer) and override the token stream. I believe that would be very useful
especially in the scenarios of input couldn't be got by once such as
socket-based input.

2008/12/17 Jim Idle <jimi at temporal-wave.com>

> On Tue, 16 Dec 2008 18:28:50 -0800, chain one <chainone at gmail.com> wrote:
>
> Thanks Jim,
>
>
> Your suggestion is very helpful to me.
> I have checked my grammar according to your advice and SKIP some useless
> tokens.
> After doing this, the peak memory usage decrease ? from 660M to 480M.
> However 480M is still a very large number to me.
>
> And I found some strange behaviors of Lexer of ANTLR3 C Runtime.?
>
> The first two rules of my grammar to be called ? when parsing ? is:
> syntax
> : ISO_HEADER ? header_sec data_sec ISO_END?
> ;
> header_sec
>  : HEADER ? file_des file_name file_schema END_SEC?
> ;
>
> I placed breakpoints in both functions.
> And the first parameter of function "antlr3CommonTokenStreamSourceNew"
> ? which I think is used to adjust the token buffer size is left to the
> default value? ANTLR3_SIZE_HINT(1025).
> ? ?  ?  ?  ?  ?  ? tokens = antlr3CommonTokenStreamSourceNew
> ? (ANTLR3_SIZE_HINT, TOKENSOURCE(lex));
>
> I believe the number of tokens will never exceed 1025 when parsing, but
> what happened later makes me doubt about this.
>
>
>
> When debugging, I found the breakpoint in? syntax rule( top rule) was?
> triggered? right after parser started to work.
> That's OK, because synatx() is called in the main function
>
> But what's strange was , the breakpoint in? header_sec was not be? triggered?
> until the memory kept increasing to 478M!!
> It is believed that the Lexer kept all the tokens recognized from the large
> input file in buffer before parser really started to work.
> Am I right? If I am, then what does ANTLR3_SIZE_HINT mean? How to adjust
> the buffer size in C runtime?
>
>
> 2008/12/17 Jim Idle <jimi at temporal-wave.com>
>
>> On Tue, 16 Dec 2008 15:54:58 -0800, chain one <chainone at gmail.com> wrote:
>>
>> > Still waiting for help
>> > I just wanna know, if c runtime target is suitable for large input?
>>
>> Yes.
>>
>>
>> >
>> > On 12/16/08, chain one <chainone at gmail.com> wrote:
>> >> Hi,
>> >> These days I am writing a parser for a kind of data file using C++. The
>> >> format of the data file is simple, so the rules are simple.
>> >> But when I feed a about 20M-size data file to the parser, the parser
>> >> eats
>> >> almost 600M+ memory.
>> >> I am surprised by this result and I found most memory and time were
>> >> consumed
>> >> by the Lexer.
>>
>> There is possibly something not quite right with this then.
>>
>> However, a 20M input file is going to generate a lot of tokens and you
>> need all of tokens in order to
>> parse the input, hence you are using a lot of memory - especially if a lot
>> of your tokens are just a few characters. If all your tokens were one
>> character then you would need 20M tokens - that would be the worst case and
>> your case will be something less than this.?
>>
>> One way to reduce the number of tokens is to use the SKIP(); macro on
>> tokens that you don't need the parser to see, such as ',' or ' ' and so on.
>> Otherwise they are sitting in your token stream for no reason. Only mark
>> them as hidden and keep them in the token stream if you will need to examine
>> them later. Otherwise SKIP them.
>>
>
> I think you are not understanding the interaction. The lexer will run first
> and will produce a collection of ALL the tokens in the files. ONce it has
> done this, THEN the parser will run. Hence you have a HUGE number of tokens
> - many many more than 1024. You don't really need to change the size hint,
> this is just how many tokens the lexer token factory pre-allocates in one
> chunk. Increasing it will not change anything much as only the tokens are
> getting allocated anyway (it is just faster to allocate them in chunks like
> this).
>
> Looking at what you are parsing tends to make me think you would be better
> off with a filtering lexer and avoiding the parser altogether. Then you
> don't need to deal with any tokens, as you can SKIP them all. Or perhaps
> this language does not lend it self to this kind of lexer/parser interaction
> if you cannot deal with the huge memory.
>
> Here is another way though and that is to hand craft a lexer that does not
> pre-allocate tokens like that and override the token stream etc.
>
> Jim
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/692e934d/attachment.html 

From belayda at gmail.com  Tue Dec 16 23:51:29 2008
From: belayda at gmail.com (Bernardo Elayda)
Date: Tue, 16 Dec 2008 23:51:29 -0800
Subject: [antlr-interest] Survey: Anyone interested in an ANTLR conference
	2009?
Message-ID: <3e5ed32f0812162351j24aa8a41jcb30a5212eb73917@mail.gmail.com>

What I am especially interested in:

(1) What would you like to discuss / learn about?
*I would be interested in seeing benchmarks between the various Antlr target
languages.  I would like to see footprint size and compile time compared.*

(2) What can you tell us about?
*I can describe my experienceses using Antlr as a tool for parsing data
files for embedded systems.*

I concur with other comments that a conference in the summer of 09 would be
best.  I would prefer something after Java One, too.

regards,
Bernie Elayda
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081216/d1de7db6/attachment.html 

From viridium at gmail.com  Wed Dec 17 09:42:39 2008
From: viridium at gmail.com (Mihai Danila)
Date: Wed, 17 Dec 2008 12:42:39 -0500
Subject: [antlr-interest] Greedy Token Matching?
Message-ID: <b00576380812170942m4178e1b9ub4a119cfb2ba2e4f@mail.gmail.com>

Hello,

As part of a language I'm writing a parser for, I use ISO date that may have
this form (spaces added for clarity):

yyyy-MM-dd ( T hh:mm:ss (+/- HH:MM)? )?

The language also allows for dash-separated ranges of dates, like
this: date-date, or, like in DMQL, date- (meaning "date" or less).

The arrangement that seemed to best work for me specified ISO dates as
tokens. In other words, an ISO date is matched by a token, not by a rule.
This all works fine, except for expressions of the form

2008-10-21T00:00:00-2008-10-21T00:00:01

which cause the ANTLR lexer to drop the date rule when it detects the range
dash.

2008-10-21T00:00:00-

The lexer goes as far as here but then it assumes the dash is part of the
date token and chokes later on, instead of keeping the "2008-10-21T00:00:00"
portion and giving the range rule a chance to match the dash as a range
dash.

I realize that promoting tokens to rules may solve this, but I'd rather
understand what all the options are before going that route. That route
would impact the grammar in more than one way. Are there any options or
massaging that can be done at the token level?

Here's a sample grammar that parses "2008-10-21T00:00:00 -
2008-10-21T00:00:01" but not "2008-10-21T00:00:00-2008-10-21T00:00:01". Of
course, in the real world grammar, a range can contain ISO-times, not just
dates, which can further complicate matters.

start: range;
range: period '-' period;
period: ISODateTime;

fragment D: ('0'..'9');
fragment TZO: ('+' | '-') D D ':' D D;
ISODate: D D D D '-' D D '-' D D;
ISOTime: D D ':' D D ':' D D ('.' D)?;
ISODateTime: (ISODate ('T' ISOTime ('Z' | TZO)?)?);

Whitespace: ' ' { $channel = HIDDEN; };


Thanks,
Mihai
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/99b4b256/attachment.html 

From sharwell at pixelminegames.com  Wed Dec 17 09:51:54 2008
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 17 Dec 2008 11:51:54 -0600
Subject: [antlr-interest] Greedy Token Matching?
In-Reply-To: <b00576380812170942m4178e1b9ub4a119cfb2ba2e4f@mail.gmail.com>
References: <b00576380812170942m4178e1b9ub4a119cfb2ba2e4f@mail.gmail.com>
Message-ID: <86403CA0939415448BCCB83855EFE09A64EB18@Bloodymary.ironwillgames.com>

Add a synpred to the ISODateTime rule:

 

ISODateTime:  (ISODate ('T' ISOTime ('Z' | (TZO) => TZO)?)?);

 

The lexer hits the range dash and eats it, entering the TZO fragment.
I'm not sure whether or not this is the intended behavior since if TZO
and DASH were top-level lexer rules, it would only enter TZO if
LA(4)==':'.

 

Sam

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mihai Danila
Sent: Wednesday, December 17, 2008 11:43 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Greedy Token Matching?

 

 

Hello,

 

As part of a language I'm writing a parser for, I use ISO date that may
have this form (spaces added for clarity):

 

yyyy-MM-dd ( T hh:mm:ss (+/- HH:MM)? )?

 

The language also allows for dash-separated ranges of dates, like this:
date-date, or, like in DMQL, date- (meaning "date" or less).

 

The arrangement that seemed to best work for me specified ISO dates as
tokens. In other words, an ISO date is matched by a token, not by a
rule. This all works fine, except for expressions of the form

 

2008-10-21T00:00:00-2008-10-21T00:00:01

 

which cause the ANTLR lexer to drop the date rule when it detects the
range dash.

 

2008-10-21T00:00:00-

 

The lexer goes as far as here but then it assumes the dash is part of
the date token and chokes later on, instead of keeping the
"2008-10-21T00:00:00" portion and giving the range rule a chance to
match the dash as a range dash.

 

I realize that promoting tokens to rules may solve this, but I'd rather
understand what all the options are before going that route. That route
would impact the grammar in more than one way. Are there any options or
massaging that can be done at the token level?

 

Here's a sample grammar that parses "2008-10-21T00:00:00 -
2008-10-21T00:00:01" but not "2008-10-21T00:00:00-2008-10-21T00:00:01".
Of course, in the real world grammar, a range can contain ISO-times, not
just dates, which can further complicate matters.

 

start:        range;

range:        period '-' period;

period:       ISODateTime;

 

fragment D:   ('0'..'9');

fragment TZO: ('+' | '-') D D ':' D D;

ISODate:  D D D D '-' D D '-' D D;

ISOTime:  D D ':' D D ':' D D ('.' D)?;

ISODateTime:  (ISODate ('T' ISOTime ('Z' | TZO)?)?);

 

Whitespace:   ' ' { $channel = HIDDEN; };

 

 

Thanks,

Mihai

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/626803d7/attachment.html 

From viridium at gmail.com  Wed Dec 17 11:57:41 2008
From: viridium at gmail.com (Mihai Danila)
Date: Wed, 17 Dec 2008 14:57:41 -0500
Subject: [antlr-interest] Syntax for Merging AST Nodes / Rule Text as AST
	Node
Message-ID: <b00576380812171157ka2960dep8ca849c01dabec93@mail.gmail.com>

Hi,

An AST-producing grammar I've been using generates many nodes that I'd like
joined into one node. Is there syntax for joining nodes at a certain level
into one node? Alternatively, is there a way to specify that the entire text
matched by a rule be put in an AST node?

For example, the rule in the grammar below will produce as many nodes as
there are characters matched in all the rules that use it, whereas I'd
prefer the text alone to be used to simplify grammars that consume the AST:
(well, maybe grammars that use the AST can match the whole subtree and be
able to obtain the text over an entire subtree, in which case they're good,
but I'd still like to have a smaller AST for better debugging)

alphanumeric: (A | D)+;

A: 'A'..'Z' | 'a'..'z';
D: '0'..'9';
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/17163e3e/attachment.html 

From jared.bunting at peachjean.com  Wed Dec 17 12:10:02 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Wed, 17 Dec 2008 14:10:02 -0600
Subject: [antlr-interest] Syntax for Merging AST Nodes / Rule Text as
 AST Node
In-Reply-To: <b00576380812171157ka2960dep8ca849c01dabec93@mail.gmail.com>
References: <b00576380812171157ka2960dep8ca849c01dabec93@mail.gmail.com>
Message-ID: <49495C9A.4060104@peachjean.com>

Is there a reason that "alphanumeric" is a parser rule?  Making it a 
lexer rule would reduce it to one token.

-Jared

Mihai Danila wrote:
>
> Hi,
>
> An AST-producing grammar I've been using generates many nodes that I'd 
> like joined into one node. Is there syntax for joining nodes at a 
> certain level into one node? Alternatively, is there a way to specify 
> that the entire text matched by a rule be put in an AST node?
>
> For example, the rule in the grammar below will produce as many nodes 
> as there are characters matched in all the rules that use it, whereas 
> I'd prefer the text alone to be used to simplify grammars that consume 
> the AST: (well, maybe grammars that use the AST can match the whole 
> subtree and be able to obtain the text over an entire subtree, in 
> which case they're good, but I'd still like to have a smaller AST for 
> better debugging)
>
> alphanumeric: (A | D)+;
>
> A: 'A'..'Z' | 'a'..'z';
> D: '0'..'9';
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>   

From viridium at gmail.com  Wed Dec 17 12:15:48 2008
From: viridium at gmail.com (Mihai Danila)
Date: Wed, 17 Dec 2008 15:15:48 -0500
Subject: [antlr-interest] Syntax for Merging AST Nodes / Rule Text as
	AST Node
In-Reply-To: <49495C9A.4060104@peachjean.com>
References: <b00576380812171157ka2960dep8ca849c01dabec93@mail.gmail.com>
	<49495C9A.4060104@peachjean.com>
Message-ID: <b00576380812171215y687f345erbe83efaceb2c0801@mail.gmail.com>

Yup, this has to do with another message I've just posted; I'm having
problems with certain tokens and I've promoted them to parser rules to avoid
those problems. In any case, it seems to work with the bracket and
additional imaginary token, so I'm happy with it right now.

In short, it seems that rule matching and "backtracking" is smart enough to
overcome those difficulties (which have to do with ISO dates and ranges that
are specified as date-date or number-number, where the range dash will cause
a token not to be matched because it just so happens the token could be
continued with a dash in some cases).


Mihai


On Wed, Dec 17, 2008 at 3:10 PM, Jared Bunting
<jared.bunting at peachjean.com>wrote:

> Is there a reason that "alphanumeric" is a parser rule?  Making it a lexer
> rule would reduce it to one token.
>
> -Jared
>
> Mihai Danila wrote:
>
>>
>> Hi,
>>
>> An AST-producing grammar I've been using generates many nodes that I'd
>> like joined into one node. Is there syntax for joining nodes at a certain
>> level into one node? Alternatively, is there a way to specify that the
>> entire text matched by a rule be put in an AST node?
>>
>> For example, the rule in the grammar below will produce as many nodes as
>> there are characters matched in all the rules that use it, whereas I'd
>> prefer the text alone to be used to simplify grammars that consume the AST:
>> (well, maybe grammars that use the AST can match the whole subtree and be
>> able to obtain the text over an entire subtree, in which case they're good,
>> but I'd still like to have a smaller AST for better debugging)
>>
>> alphanumeric: (A | D)+;
>>
>> A: 'A'..'Z' | 'a'..'z';
>> D: '0'..'9';
>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/20187bcf/attachment.html 

From viridium at gmail.com  Wed Dec 17 12:13:06 2008
From: viridium at gmail.com (Mihai Danila)
Date: Wed, 17 Dec 2008 15:13:06 -0500
Subject: [antlr-interest] Syntax for Merging AST Nodes / Rule Text as
	AST Node
In-Reply-To: <b00576380812171157ka2960dep8ca849c01dabec93@mail.gmail.com>
References: <b00576380812171157ka2960dep8ca849c01dabec93@mail.gmail.com>
Message-ID: <b00576380812171213k4c8162beo95feb30098dedbc2@mail.gmail.com>

I seem to have found a solution to the problem. For the grammar above (which
I paste again for completeness):

grammar Test;
options { output=AST; }
tokens { Start; }
startRule: alphanumeric -> ^(Start alphanumeric);
alphanumeric: (A | D)+;
A: 'A'..'Z' | 'a'..'z';
D: '0'..'9';

Use the bracket notation with a special token type:
grammar Test;
options { output=AST; }
tokens { Start; Constant; }
startRule: alphanumeric -> ^(Start alphanumeric);
alphanumeric: (A | D)+ -> Constant[$alphanumeric.text];
A: 'A'..'Z' | 'a'..'z';
D: '0'..'9';

which instead of adding a lot of children under Start, will add a single
child with the whole alphanumeric text. Let me know if there are other
options that you think might work. Perhaps there's an option that doesn't
require an additional token? (I've tried ->
alphanumeric[$alphanumeric.text]to no avail.)


Mihai


On Wed, Dec 17, 2008 at 2:57 PM, Mihai Danila <viridium at gmail.com> wrote:

>
> Hi,
>
> An AST-producing grammar I've been using generates many nodes that I'd like
> joined into one node. Is there syntax for joining nodes at a certain level
> into one node? Alternatively, is there a way to specify that the entire text
> matched by a rule be put in an AST node?
>
> For example, the rule in the grammar below will produce as many nodes as
> there are characters matched in all the rules that use it, whereas I'd
> prefer the text alone to be used to simplify grammars that consume the AST:
> (well, maybe grammars that use the AST can match the whole subtree and be
> able to obtain the text over an entire subtree, in which case they're good,
> but I'd still like to have a smaller AST for better debugging)
>
> alphanumeric: (A | D)+;
>
> A: 'A'..'Z' | 'a'..'z';
> D: '0'..'9';
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/3c7f051d/attachment.html 

From zenzike at gmail.com  Wed Dec 17 14:51:34 2008
From: zenzike at gmail.com (Zenzike)
Date: Wed, 17 Dec 2008 22:51:34 +0000
Subject: [antlr-interest] Faster expression parsing for ANTLR
Message-ID: <31e910dd0812171451l204d3031n264a5bf2e207749@mail.gmail.com>

I have just started playing with ANTLR, and it's been a pretty fun ride so far,
but I'm having troubles with a gated semantic predicate that has a
rule parameter
in it -- when it gets hoisted, the parameter goes out of scope.

I am trying to describe a language that allows arbitrary operator creation,
with a specified precedence and associativity. I thought I struck
gold when I saw Ter's wiki post [1], but sadly, it won't work
in my grammar since I need backtracking, and the

{prec[input.LA(1)]>=p}?=>

part of my grammar is getting hoisted out of context (variable p is a
rule parameter).

I'm looking into implementing Sam's way of doing this [2],
since no semantic predicates are used, but I was wondering
if there was any way of suppressing hoisting (I haven't thought
about the implications of that yet, so it might be a terrible idea).

Thanks,

zenzike

[1] http://www.antlr.org/wiki/display/~admin/2008/03/23/Faster+expression+parsing+for+ANTLR
[2] http://antlr.org/wiki/display/ANTLR3/Operator+precedence+parser

From bill at qswtools.com  Wed Dec 17 15:57:11 2008
From: bill at qswtools.com (Bill Cox)
Date: Wed, 17 Dec 2008 15:57:11 -0800
Subject: [antlr-interest] Apparent bug in antlr 3.1.1
Message-ID: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>

Hi Folks,

Working through the exercises in section 3.2 of TDAR, I get the following error,
compiling ExprParser.java:

 java org.antlr.Tool Expr.g
ANTLR Parser Generator  Version 3.1.1
javac ExprTest.java ExprLexer.java ExprParser.java
ExprParser.java:417: cannot find symbol
symbol  : method expr6()
location: class ExprParser
                     value = expr6();
                             ^
Note: ExprParser.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 error
make: *** [ETest.class] Error 1

By changing the java file as shown in the following diff, I was able
to build and run the example parser.

thoris:~/src/antlr bill$ diff ExprParser.java ExprParser.java.patched
1c1
< // $ANTLR 3.1.1 Expr.g 2008-12-17 15:43:40
---
> // $ANTLR 3.1.1 Expr.g 2008-12-17 15:35:34
417c417
<                      value = expr6();
---
> 		    value = expr6;  // removed parens before semicolon
461c461
< }
\ No newline at end of file
---
> }

It looks as if antlr 3.1.1 is making a method call where it should be
making a scalar variable reference to expr6, which is declared and assigned-to
in these lines:

>fgrep expr6 ExprParser.java
        int expr6 = 0;
                    expr6=expr();
                     value = expr6();

I looked on altlr.org for the machine-readable Expr.g file to check my
data-entry, and I didn't find it.

CAVEAT: I'm learning java and antlr at the same time here, and could
be wildly off base.

Comments?

Regards,
Bill

From bill at qswtools.com  Wed Dec 17 15:56:21 2008
From: bill at qswtools.com (Bill Cox)
Date: Wed, 17 Dec 2008 15:56:21 -0800
Subject: [antlr-interest] Apparent bug in antlr 3.1.1
Message-ID: <f7372f920812171556l15c2c713r76a991736ecf9f78@mail.gmail.com>

Hi Folks,

Working through the exercises in section 3.2 of TDAR, I get the following error,
compiling ExprParser.java:

 java org.antlr.Tool Expr.g
ANTLR Parser Generator  Version 3.1.1
javac ExprTest.java ExprLexer.java ExprParser.java
ExprParser.java:417: cannot find symbol
symbol  : method expr6()
location: class ExprParser
                     value = expr6();
                             ^
Note: ExprParser.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 error
make: *** [ETest.class] Error 1

By changing the java file as shown in the following diff, I was able
to build and run the example parser.

thoris:~/src/antlr bill$ diff ExprParser.java ExprParser.java.patched
1c1
< // $ANTLR 3.1.1 Expr.g 2008-12-17 15:43:40
---
> // $ANTLR 3.1.1 Expr.g 2008-12-17 15:35:34
417c417
<                      value = expr6();
---
> 		    value = expr6;  // removed parens before semicolon
461c461
< }
\ No newline at end of file
---
> }

It looks as if antlr 3.1.1 is making a method call where it should be
making a scalar variable reference to expr6, which is declared and assigned-to
in these lines:

>fgrep expr6 ExprParser.java
        int expr6 = 0;
                    expr6=expr();
                     value = expr6();

I looked on altlr.org for the machine-readable Expr.g file to check my
data-entry, and I didn't find it.

CAVEAT: I'm learning java and antlr at the same time here, and could
be wildly off base.

Comments?

Regards,
Bill

From jimi at temporal-wave.com  Wed Dec 17 16:15:43 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 17 Dec 2008 16:15:43 -0800
Subject: [antlr-interest] Faster expression parsing for ANTLR
Message-ID: <op.umb0chk2i0hb2k@jimi>

On Wed, 17 Dec 2008 14:51:34 -0800, Zenzike <zenzike at gmail.com> wrote:

> I have just started playing with ANTLR, and it's been a pretty fun ride 
> so far,
> but I'm having troubles with a gated semantic predicate that has a
> rule parameter
> in it -- when it gets hoisted, the parameter goes out of scope.
>


Instead of using a rule parameter in the predicate, assign the rule parameter to a scope variable. The 'scope' is never out of scope unless you found a path to a rule where it was not created. 

Jim

-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/a5736da2/attachment.html 

From parrt at cs.usfca.edu  Wed Dec 17 16:19:21 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 17 Dec 2008 16:19:21 -0800
Subject: [antlr-interest] Apparent bug in antlr 3.1.1
In-Reply-To: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
Message-ID: <09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>

Hi Bill, can you send me the typed in grammar personally so I can  
check it out?
Thanks,
T
On Dec 17, 2008, at 3:57 PM, Bill Cox wrote:

> Hi Folks,
>
> Working through the exercises in section 3.2 of TDAR, I get the  
> following error,
> compiling ExprParser.java:
>
> java org.antlr.Tool Expr.g
> ANTLR Parser Generator  Version 3.1.1
> javac ExprTest.java ExprLexer.java ExprParser.java
> ExprParser.java:417: cannot find symbol
> symbol  : method expr6()
> location: class ExprParser
>                     value = expr6();
>                             ^
> Note: ExprParser.java uses unchecked or unsafe operations.
> Note: Recompile with -Xlint:unchecked for details.
> 1 error
> make: *** [ETest.class] Error 1
>
> By changing the java file as shown in the following diff, I was able
> to build and run the example parser.
>
> thoris:~/src/antlr bill$ diff ExprParser.java ExprParser.java.patched
> 1c1
> < // $ANTLR 3.1.1 Expr.g 2008-12-17 15:43:40
> ---
>> // $ANTLR 3.1.1 Expr.g 2008-12-17 15:35:34
> 417c417
> <                      value = expr6();
> ---
>> 		    value = expr6;  // removed parens before semicolon
> 461c461
> < }
> \ No newline at end of file
> ---
>> }
>
> It looks as if antlr 3.1.1 is making a method call where it should be
> making a scalar variable reference to expr6, which is declared and  
> assigned-to
> in these lines:
>
>> fgrep expr6 ExprParser.java
>        int expr6 = 0;
>                    expr6=expr();
>                     value = expr6();
>
> I looked on altlr.org for the machine-readable Expr.g file to check my
> data-entry, and I didn't find it.
>
> CAVEAT: I'm learning java and antlr at the same time here, and could
> be wildly off base.
>
> Comments?
>
> Regards,
> Bill
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From micke at online.no  Wed Dec 17 16:25:30 2008
From: micke at online.no (Michael Fogeborg)
Date: Thu, 18 Dec 2008 01:25:30 +0100 (MET)
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com> 
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
Message-ID: <32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>

What about an Antlr seminar in Europe ?
Maybe in Finland ?

From parrt at cs.usfca.edu  Wed Dec 17 16:34:32 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 17 Dec 2008 16:34:32 -0800
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
Message-ID: <B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>


On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:

> What about an Antlr seminar in Europe ?
> Maybe in Finland ?

Might be fun to do one in europe sometime...what country is considered  
centrally located?

Ter

From parrt at cs.usfca.edu  Wed Dec 17 16:50:55 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 17 Dec 2008 16:50:55 -0800
Subject: [antlr-interest] Apparent bug in antlr 3.1.1
In-Reply-To: <f7372f920812171644h7fca43b5sedd3419997f15d32@mail.gmail.com>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<f7372f920812171644h7fca43b5sedd3419997f15d32@mail.gmail.com>
Message-ID: <C0624D6F-E4BE-4CC8-BC91-95986C447265@cs.usfca.edu>

	
On Dec 17, 2008, at 4:44 PM, Bill Cox wrote:

> Sure!  Attached.  I'm doing this on a Mac.   I thought the EOLs would
> be odd, but
> 'od -x Expr.g' only shows newlines, so it should be directly usable.

Typo in my grammar

     | '(' expr ')'          { $value = $expr.value(); }


should be

     | '(' expr ')'          { $value = $expr.value; }

Can you add to errata where you found the bug?

http://www.pragprog.com/titles/tpantlr/errata/add

Thanks!
Ter

From viridium at gmail.com  Wed Dec 17 17:20:59 2008
From: viridium at gmail.com (Mihai Danila)
Date: Wed, 17 Dec 2008 20:20:59 -0500
Subject: [antlr-interest] "Context Sensitive" Tokens
Message-ID: <b00576380812171720pdd7d334r66cb4741fdceedea@mail.gmail.com>

Hi,

I have a fairly straightforward grammar that, unlike most mainstream formal
languages, doesn't quote strings. It also features two alphanumeric strings
(TODAY and NOW) with a special meaning as dates:

query:    field '=' value;
field:    (DIGIT | ALPHA | '_')+;
value:    string | date;
date:     isoDate | 'TODAY' | 'NOW';
string:   (DIGIT | ALPHA)+;
isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
DIGIT:    '0'..'9';
ALPHA:    'a'..'z' | 'A'..'Z';

The problem with this grammar is that TODAY and NOW become their own tokens
and can't be used as string literals or as field names. These work:
field=TODAY, field=NOW, but these don't: TODAY=string (TODAY is a valid
field name) and field=TODAY (TODAY is a valid string).

The nasty solution is to extend the field and string rules to match these
tokens:

query:    field '=' value;
field:    (DIGIT | ALPHA | '_')+ | TODAY | NOW;
value:    string | date;
date:     isoDate | TODAY | NOW;
string:   (DIGIT | ALPHA)+ | TODAY | NOW;
isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
DIGIT:    '0'..'9';
ALPHA:    'a'..'z' | 'A'..'Z';
TODAY:    'TODAY';
NOW:      'NOW';

But these are nasty and I'd rather not use them. Fragments didn't seem to
work for me. What is the standard solution to this problem, if any?

I realize I could rewrite the grammar to use very longer tokens like
STRING_OR_NUMBER, but that would pose the same problem; moreover, using
these would reduce the readability of the grammar even further.


Thanks,
Mihai
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/fa5631a8/attachment.html 

From viridium at gmail.com  Wed Dec 17 18:15:15 2008
From: viridium at gmail.com (Mihai Danila)
Date: Wed, 17 Dec 2008 21:15:15 -0500
Subject: [antlr-interest] "Context Sensitive" Tokens
In-Reply-To: <b00576380812171720pdd7d334r66cb4741fdceedea@mail.gmail.com>
References: <b00576380812171720pdd7d334r66cb4741fdceedea@mail.gmail.com>
Message-ID: <b00576380812171815q77ba6374kafdd61d858738581@mail.gmail.com>

I guess in a more formal formulation, my problem boils down to the problem
of using a keyword as a variable in a context-free grammar, something that
is apparently handled by semantic predicates.

One solution, according to the book, would be to drop the 'TODAY' and 'NOW'
tokens, make the date rule match any alphanumeric, and use semantic
predicates to restrict the domain of matched values for that rule. Something
akin to:

query:    field '=' value;
field:    (DIGIT | ALPHA | '_')+;
value:    string | date;
date:     isoDate | { "NOW".equals(input.LT(1).getText()) ||
"TODAY".equals(input.LT(1).getText()) }? string;
string:   (DIGIT | ALPHA)+;
isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
DIGIT:    '0'..'9';
ALPHA:    'a'..'z' | 'A'..'Z';

However, according to the book, "the DFA will evaluate the predicates only
upon ambiguous sequences" which means the date rule now has the potential of
matching any alphanumeric input; certainly not what is intended.

Are there any options guys?


On Wed, Dec 17, 2008 at 8:20 PM, Mihai Danila <viridium at gmail.com> wrote:

>
> Hi,
>
> I have a fairly straightforward grammar that, unlike most mainstream formal
> languages, doesn't quote strings. It also features two alphanumeric strings
> (TODAY and NOW) with a special meaning as dates:
>
> query:    field '=' value;
> field:    (DIGIT | ALPHA | '_')+;
> value:    string | date;
> date:     isoDate | 'TODAY' | 'NOW';
> string:   (DIGIT | ALPHA)+;
> isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
> DIGIT:    '0'..'9';
> ALPHA:    'a'..'z' | 'A'..'Z';
>
> The problem with this grammar is that TODAY and NOW become their own tokens
> and can't be used as string literals or as field names. These work:
> field=TODAY, field=NOW, but these don't: TODAY=string (TODAY is a valid
> field name) and field=TODAY (TODAY is a valid string).
>
> The nasty solution is to extend the field and string rules to match these
> tokens:
>
> query:    field '=' value;
> field:    (DIGIT | ALPHA | '_')+ | TODAY | NOW;
> value:    string | date;
> date:     isoDate | TODAY | NOW;
> string:   (DIGIT | ALPHA)+ | TODAY | NOW;
> isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
> DIGIT:    '0'..'9';
> ALPHA:    'a'..'z' | 'A'..'Z';
> TODAY:    'TODAY';
> NOW:      'NOW';
>
> But these are nasty and I'd rather not use them. Fragments didn't seem to
> work for me. What is the standard solution to this problem, if any?
>
> I realize I could rewrite the grammar to use very longer tokens like
> STRING_OR_NUMBER, but that would pose the same problem; moreover, using
> these would reduce the readability of the grammar even further.
>
>
> Thanks,
> Mihai
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081217/af1b7d2a/attachment.html 

From antlr at mirality.co.nz  Wed Dec 17 23:44:40 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 18 Dec 2008 20:44:40 +1300
Subject: [antlr-interest] "Context Sensitive" Tokens
In-Reply-To: <b00576380812171720pdd7d334r66cb4741fdceedea@mail.gmail.com
 >
References: <b00576380812171720pdd7d334r66cb4741fdceedea@mail.gmail.com>
Message-ID: <20081218074450.12EDD11EB4C@www.antlr.org>

At 14:20 18/12/2008, Mihai Danila wrote:
>The problem with this grammar is that TODAY and NOW become their 
>own tokens and can't be used as string literals or as field 
>names. These work: field=TODAY, field=NOW, but these don't: 
>TODAY=string (TODAY is a valid field name) and field=TODAY (TODAY 
>is a valid string).
>
>The nasty solution is to extend the field and string rules to 
>match these tokens:
>
>query:    field '=' value;
>field:    (DIGIT | ALPHA | '_')+ | TODAY | NOW;
>value:    string | date;
>date:     isoDate | TODAY | NOW;
>string:   (DIGIT | ALPHA)+ | TODAY | NOW;
>isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
>DIGIT:    '0'..'9';
>ALPHA:    'a'..'z' | 'A'..'Z';
>TODAY:    'TODAY';
>NOW:      'NOW';
>
>But these are nasty and I'd rather not use them. Fragments didn't 
>seem to work for me. What is the standard solution to this 
>problem, if any?

My standard solution is to do exactly that (although normally I 
would try to consolidate DIGIT and ALPHA into single multi-digit 
and alphanumeric tokens).  If, in the context of a "field", you 
can match either a DIGIT or an ALPHA or a TODAY then that's what 
the rule should express.  (If you like, when you match a TODAY you 
can convert it to a different token type [eg. multiple ALPHAs] 
when constructing an AST.  If you *are* constructing an AST, of 
course.)


From oliver.zeigermann at gmail.com  Wed Dec 17 23:58:07 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Thu, 18 Dec 2008 08:58:07 +0100
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
Message-ID: <9da4f4520812172358o6cb8257cl4dbaea78110ba1@mail.gmail.com>

Germany :)

2008/12/18 Terence Parr <parrt at cs.usfca.edu>:
>
> On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:
>
>> What about an Antlr seminar in Europe ?
>> Maybe in Finland ?
>
> Might be fun to do one in europe sometime...what country is considered
> centrally located?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From rusinskystanislas at yahoo.fr  Thu Dec 18 00:35:01 2008
From: rusinskystanislas at yahoo.fr (Stanislas Rusinsky)
Date: Thu, 18 Dec 2008 08:35:01 +0000 (GMT)
Subject: [antlr-interest] Re :  ANTLR seminar in Europe
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
	<9da4f4520812172358o6cb8257cl4dbaea78110ba1@mail.gmail.com>
Message-ID: <573399.94022.qm@web26505.mail.ukl.yahoo.com>

I have the feeling it is a bit more complicated than that: http://en.wikipedia.org/wiki/Geographical_centre_of_Europe

Perhaps in Belgium? 

It is at the crossing of the high speed trains (Thalys.com, Eurostar.com); Brussels has the European commission, I live in Belgium, (oops... betrailed myself); Devoxx,formerly Javapolis, the largest european Java event takes place in Antwerp, there are still red deers in Belgium (see map http://en.wikipedia.org/wiki/Red_Deer) - but no mooses.

Is there any country were there is a larger user base or even an Antlr User Group?

Stan.



----- Message d'origine ----
De : Oliver Zeigermann <oliver.zeigermann at gmail.com>
? : Terence Parr <parrt at cs.usfca.edu>
Cc : Bill Cox <bill at qswtools.com>; antlr-interest at antlr.org
Envoy? le : Jeudi, 18 D?cembre 2008, 8h58mn 07s
Objet : Re: [antlr-interest] ANTLR seminar in Europe

Germany :)

2008/12/18 Terence Parr <parrt at cs.usfca.edu>:
>
> On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:
>
>> What about an Antlr seminar in Europe ?
>> Maybe in Finland ?
>
> Might be fun to do one in europe sometime...what country is considered
> centrally located?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


      

From lgcraymer at yahoo.com  Thu Dec 18 01:02:43 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 18 Dec 2008 01:02:43 -0800 (PST)
Subject: [antlr-interest] Re :  ANTLR seminar in Europe
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
	<9da4f4520812172358o6cb8257cl4dbaea78110ba1@mail.gmail.com>
	<573399.94022.qm@web26505.mail.ukl.yahoo.com>
Message-ID: <560993.52731.qm@web55904.mail.re3.yahoo.com>

Might I suggest that any organization that offers to sponsor such an event (from the early ANTLR workshops, sponsorship translates to "provide a meeting place") be allowed to define itself as being at the center of Europe?

--Loring




----- Original Message ----
> From: Stanislas Rusinsky <rusinskystanislas at yahoo.fr>
> To: Oliver Zeigermann <oliver.zeigermann at gmail.com>; Terence Parr <parrt at cs.usfca.edu>
> Cc: Bill Cox <bill at qswtools.com>; antlr-interest at antlr.org
> Sent: Thursday, December 18, 2008 12:35:01 AM
> Subject: [antlr-interest] Re :  ANTLR seminar in Europe
> 
> I have the feeling it is a bit more complicated than that: 
> http://en.wikipedia.org/wiki/Geographical_centre_of_Europe
> 
> Perhaps in Belgium? 
> 
> It is at the crossing of the high speed trains (Thalys.com, Eurostar.com); 
> Brussels has the European commission, I live in Belgium, (oops... betrailed 
> myself); Devoxx,formerly Javapolis, the largest european Java event takes place 
> in Antwerp, there are still red deers in Belgium (see map 
> http://en.wikipedia.org/wiki/Red_Deer) - but no mooses.
> 
> Is there any country were there is a larger user base or even an Antlr User 
> Group?
> 
> Stan.
> 
> 
> 
> ----- Message d'origine ----
> De : Oliver Zeigermann 
> ? : Terence Parr 
> Cc : Bill Cox ; antlr-interest at antlr.org
> Envoy? le : Jeudi, 18 D?cembre 2008, 8h58mn 07s
> Objet : Re: [antlr-interest] ANTLR seminar in Europe
> 
> Germany :)
> 
> 2008/12/18 Terence Parr :
> >
> > On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:
> >
> >> What about an Antlr seminar in Europe ?
> >> Maybe in Finland ?
> >
> > Might be fun to do one in europe sometime...what country is considered
> > centrally located?
> >
> > Ter
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
>       
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From zenzike at gmail.com  Thu Dec 18 01:18:38 2008
From: zenzike at gmail.com (Zenzike)
Date: Thu, 18 Dec 2008 09:18:38 +0000
Subject: [antlr-interest] Faster expression parsing for ANTLR
Message-ID: <31e910dd0812180118o4078c6e4l1a961e07d8d71ec6@mail.gmail.com>

Thanks for the reply.

> Instead of using a rule parameter in the predicate, assign the rule parameter to a scope variable. The 'scope' is never out of scope unless you found a path to a > rule where it was not created.

I thought about that, but I wasn't sure it would work -- wouldn't the
scope be shared between the recursive calls to e[]?

e[int p]
   :   (primary->primary)
       (   {prec[input.LA(1)]>=p}?=>     bop r=e[nextp(p)] -> ^(bop $e $r)
       |   {postprec[input.LA(1)]>=p}?=> suffix[$e.tree]   -> {$suffix.tree}
       )*
   ;

If the parameter p were scoped, rather than passed, then we forget the
call-tree that gets us to our current position don't we?
My understanding might be wrong -- I thought scoped in the grammar
became static variables in the target language, is that true?

zenzike

From micke at online.no  Thu Dec 18 01:25:40 2008
From: micke at online.no (Michael Fogeborg)
Date: Thu, 18 Dec 2008 10:25:40 +0100
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
Message-ID: <op.umcps2i2ehpkpf@mickes>

I guess a topographic map of the user-base in europe gives the answer ?


On Thu, 18 Dec 2008 01:34:32 +0100, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:
>
>> What about an Antlr seminar in Europe ?
>> Maybe in Finland ?
>
> Might be fun to do one in europe sometime...what country is considered
> centrally located?
>
> Ter
>
>
>
> 



-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/mail/


From lars.vonwedel at bayertechnology.com  Thu Dec 18 01:54:19 2008
From: lars.vonwedel at bayertechnology.com (lars.vonwedel at bayertechnology.com)
Date: Thu, 18 Dec 2008 10:54:19 +0100
Subject: [antlr-interest] Single quote and MismatchedTokenException
Message-ID: <OF3847F044.7625D689-ONC1257523.003521D0-C1257523.003669ED@bayer.de>

Hello,

I have a lexer where a quote is defined as

QUOTE   :       '\''; 

running some simple text through the lexer (just repeatedly calling 
NextToken) works fine.

However, when I run that lexer as part of an application (a Visual Studio 
Language Service in fact), the line 

   Match( '\'' );

in the generated Lexer method mQUOTE() throws an 
Antlr.Runtime.MismatchedTokenException.

Any ideas what goes wrong here and what I can try to solve that problem ?

Freundliche Gr??e / Best Regards
Lars von Wedel
_________________________________________

Bayer Technology Services GmbH
BTS-PT-PD-ES
Leverkusen, E 41
Phone: +49 214 30 56456
Fax: +49 214 30 62677
E-mail: lars.vonwedel at bayertechnology.com
Web: www.bayertechnology.com

Gesch?ftsf?hrer: Achim Noack
Aufsichtsratsvorsitzender: Dr. Wolfgang Plischke
Sitz der Gesellschaft: Leverkusen   |   Eintragung: Amtsgericht K?ln, HRB 
49896
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/472f7b1a/attachment.html 

From lars.vonwedel at bayertechnology.com  Thu Dec 18 02:54:30 2008
From: lars.vonwedel at bayertechnology.com (lars.vonwedel at bayertechnology.com)
Date: Thu, 18 Dec 2008 11:54:30 +0100
Subject: [antlr-interest] Antwort: Single quote and MismatchedTokenException
In-Reply-To: <OF3847F044.7625D689-ONC1257523.003521D0-C1257523.003669ED@bayer.de>
Message-ID: <OFA435CFB1.6B70CE76-ONC1257523.003BCDFA-C1257523.003BEC49@bayer.de>

Mmmh, seems like it the quote rule is competing with the string rule which 
has quotes as delimiters and expects another quote at the end of the 
string. Now that I have stripped a trailing \n at the end of the line to 
scan, it seems to work.

Regards,
Lars 
_________________________________________




lars.vonwedel at bayertechnology.com 
Gesendet von: antlr-interest-bounces at antlr.org
18.12.2008 10:54

An
antlr-interest at antlr.org
Kopie

Thema
[antlr-interest] Single quote and MismatchedTokenException







Hello, 

I have a lexer where a quote is defined as 

QUOTE        :        '\''; 

running some simple text through the lexer (just repeatedly calling 
NextToken) works fine. 

However, when I run that lexer as part of an application (a Visual Studio 
Language Service in fact), the line 

   Match( '\'' ); 

in the generated Lexer method mQUOTE() throws an 
Antlr.Runtime.MismatchedTokenException. 

Any ideas what goes wrong here and what I can try to solve that problem ? 

Freundliche Gr??e / Best Regards
Lars


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/63abc8c6/attachment.html 

From thats_me23 at live.nl  Thu Dec 18 04:48:20 2008
From: thats_me23 at live.nl (M. C.)
Date: Thu, 18 Dec 2008 13:48:20 +0100
Subject: [antlr-interest] C target difficulties
Message-ID: <BLU106-W56FAFB0C6A3E6B5C3729E6ECF30@phx.gbl>


Hi all,
 
 
I have been working with ANTLR for some weeks now, but I'm having some difficulties getting the generated code to work.
 
I'm using ANTLRworks 1.2.2 under Fedora linux 8. and installed the runtime library "libantlr3c-3.1.1", which works perfectly. 
 
I generate code for the C target, and made my own main.c using the example on the ANTLR website, this code compiles well without errors (and some warnings about not used variables, but that isn't harmfull I guess)
 
Whats the problem then? Well I've got a question about the section just above the main, "int ANTLR3_CDECL" what is it good for? when I comment this part out, the source compiles well, but if I don't it generates the following error:
 
"main.c:8: Warning: two or more data types in declaration specifiers"
 
Then I've got a somewhat more serious problem, my code hangs when feeding an input file. I checked with some printf statements where it hangs, but it doesn't do anything after the  " psr = testParserNew(tstream); " line. The program doesn't shutdown, but also doesn't do anything else. 
 
And is  psr->program(psr);  the right way to invoke the parser? 
So that the outputs I made in the .g file (like detecting a number and then printf("number found"); actually get printed in the terminal?
 
I've been trying things for some time now, but really can't find the problem. Does someone else maybe know what i'm doing wrong?
 
Thanx in advance!!
 
 
Here is a copy of my main.c
---------------------------------------
 
#include "testLexer.h"#include "testParser.h"
int  ANTLR3_CDECL
int main(int argc, char *argv[]){    pANTLR3_UINT8           fName;  // filename in char 8 format    pANTLR3_INPUT_STREAM    input;  // input stream    ptestLexer lxr;    pANTLR3_COMMON_TOKEN_STREAM     tstream;    ptestParser psr;
    if (argc < 2 || argv[1] == NULL)    {        fName   =(pANTLR3_UINT8)"./input";    }    else    {                fName   = (pANTLR3_UINT8)argv[1];    }
    input       = antlr3AsciiFileStreamNew(fName);
    if ( input == NULL)    {            fprintf(stderr, "Failed to open file %s\n", (char *)fName);            exit(1);    }
   lxr      = testLexerNew(input);        // CLexerNew is generated by ANTLR
    if ( lxr == NULL )    {            fprintf(stderr, "Unable to create the lexer due to malloc() failure1\n");            exit(1);    }
   tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lxr));
    if (tstream == NULL)    {        fprintf(stderr, "Out of memory trying to allocate token stream\n");        exit(1);    }
    psr     = testParserNew(tstream);  // CParserNew is generated by ANTLR3
 
// SOFTWARE HANGS HERE........
 
 
    if (psr == NULL)    {        fprintf(stderr, "Out of memory trying to allocate parser\n");        exit(ANTLR3_ERR_NOMEM);    }
    psr->program(psr);                                    
-----------------------------------------------------
 
_________________________________________________________________
Download de nieuwste emoticons voor in je Messenger
http://www.msnmessengerexperience.nl/chuck/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/26c8ed7d/attachment.html 

From viridium at gmail.com  Thu Dec 18 06:20:51 2008
From: viridium at gmail.com (Mihai Danila)
Date: Thu, 18 Dec 2008 09:20:51 -0500
Subject: [antlr-interest] "Context Sensitive" Tokens
In-Reply-To: <4949ff72.020bca0a.53d9.1a47SMTPIN_ADDED@mx.google.com>
References: <b00576380812171720pdd7d334r66cb4741fdceedea@mail.gmail.com>
	<4949ff72.020bca0a.53d9.1a47SMTPIN_ADDED@mx.google.com>
Message-ID: <b00576380812180620j27f638b8of71e20ae583f319a@mail.gmail.com>

Hi Gavin,
In fact, this is what I ended up doing. I did create an additional umbrella
rule for all these tokens, to avoid duplicating tokens like TODAY and NOW
beyond this rule:

alphanumericToken: ALPHA | DIGIT | TODAY | NOW | ... ;
field: ('_' | alphanumericToken)+;
string: alphanumericToken+;

I understand your observation about what the rule can match, but the new
rule interpretation is now shifted from the natural interpretation of rules:
date - matches ISO dates or the string TODAY or the string NOW.
string - matches any alphanumeric string.

Here, there is no mention of the string TODAY, the string NOW, or AND, NOT,
and OR (which also happen to be tokens the actual grammar) in the context of
a string rule. A reader of the formal grammar will have to stop and think
about why the string rule includes TODAY and NOW; are these special strings?

As another disadvantage, note that this approach forces a more strict
management of the tokens. One can no longer add new tokens such as
'CURRENT_TIME' in the body of other rules without extending
alphanumericToken accordingly; I don't see this as a problem for my current
gramar, as I expect little maintenance, but in general the method adds
maintenance overhead.


Mihai


On Thu, Dec 18, 2008 at 2:44 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 14:20 18/12/2008, Mihai Danila wrote:
>
>> The problem with this grammar is that TODAY and NOW become their own
>> tokens and can't be used as string literals or as field names. These work:
>> field=TODAY, field=NOW, but these don't: TODAY=string (TODAY is a valid
>> field name) and field=TODAY (TODAY is a valid string).
>>
>> The nasty solution is to extend the field and string rules to match these
>> tokens:
>
>
>>
>> query:    field '=' value;
>> field:    (DIGIT | ALPHA | '_')+ | TODAY | NOW;
>> value:    string | date;
>> date:     isoDate | TODAY | NOW;
>> string:   (DIGIT | ALPHA)+ | TODAY | NOW;
>> isoDate:  DIGIT DIGIT '-' DIGIT DIGIT '-' DIGIT DIGIT;
>> DIGIT:    '0'..'9';
>> ALPHA:    'a'..'z' | 'A'..'Z';
>> TODAY:    'TODAY';
>> NOW:      'NOW';
>>
>> But these are nasty and I'd rather not use them. Fragments didn't seem to
>> work for me. What is the standard solution to this problem, if any?
>>
>
> My standard solution is to do exactly that (although normally I would try
> to consolidate DIGIT and ALPHA into single multi-digit and alphanumeric
> tokens).  If, in the context of a "field", you can match either a DIGIT or
> an ALPHA or a TODAY then that's what the rule should express.  (If you like,
> when you match a TODAY you can convert it to a different token type [eg.
> multiple ALPHAs] when constructing an AST.  If you *are* constructing an
> AST, of course.)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/d57b5b91/attachment.html 

From jimi at temporal-wave.com  Thu Dec 18 09:16:30 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Dec 2008 09:16:30 -0800
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
Message-ID: <op.umdblswui0hb2k@jimi>

On Wed, 17 Dec 2008 16:34:32 -0800, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:
>
>> What about an Antlr seminar in Europe ?
>> Maybe in Finland ?
>
> Might be fun to do one in europe sometime...what country is considered
> centrally located?
>


Tuva :-)

Jim

From vhawargi at gmail.com  Thu Dec 18 09:56:19 2008
From: vhawargi at gmail.com (Vishwanath Hawargi)
Date: Thu, 18 Dec 2008 11:56:19 -0600
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <op.umdblswui0hb2k@jimi>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
	<op.umdblswui0hb2k@jimi>
Message-ID: <4c63b36c0812180956v67f6bacfw85e2152a761286ab@mail.gmail.com>

Do we have a demographical stats? like how many ANTLR users in a given location?
Probably having a conference in high-antlr-user-density-location would
be great..

How about Bangalore ;) ?

On Thu, Dec 18, 2008 at 11:16 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> On Wed, 17 Dec 2008 16:34:32 -0800, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>>
>> On Dec 17, 2008, at 4:25 PM, Michael Fogeborg wrote:
>>
>>> What about an Antlr seminar in Europe ?
>>> Maybe in Finland ?
>>
>> Might be fun to do one in europe sometime...what country is considered
>> centrally located?
>>
>
>
> Tuva :-)
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From zenzike at gmail.com  Thu Dec 18 10:04:55 2008
From: zenzike at gmail.com (Zenzike)
Date: Thu, 18 Dec 2008 18:04:55 +0000
Subject: [antlr-interest] Occasionally match hidden channel
Message-ID: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>

I'm trying to make it so that input only occasionally matches tokens
that are sent to the hidden channel.
My grammar has something along the following:

SLASHSLASH : '\\\\' {$channel=HIDDEN};     // For the symbols "\\"

This is regarded as whitespace in the language I'm trying to define,
and should be able to
appear between any two tokens. However, occasionally, I want to make
sure that there is definitely
a SLASHSLASH token between two other tokens.

As far as I can tell, the way to do this is to hide the SLASHSLASH
(which I have done),
and in places where it is needed, I should query the hidden channel --
but I can't find
any documentation about how this done (although there seems to be
plenty saying that it is possible!)

Something like this would be ideal:

rule : TOKEN1 {channel.hidden.match(SLASHSLASH)} TOKEN2 ;

What is the right syntax?

Many thanks!

zenzike

From jimi at temporal-wave.com  Thu Dec 18 09:33:54 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Dec 2008 09:33:54 -0800
Subject: [antlr-interest] C target difficulties
In-Reply-To: <BLU106-W56FAFB0C6A3E6B5C3729E6ECF30@phx.gbl>
References: <BLU106-W56FAFB0C6A3E6B5C3729E6ECF30@phx.gbl>
Message-ID: <1229621634.27289.9.camel@jimi>

On Thu, 2008-12-18 at 13:48 +0100, M. C. wrote:

> Hi all,
>  
>  
> I have been working with ANTLR for some weeks now, but I'm having some
> difficulties getting the generated code to work.
>  
> I'm using ANTLRworks 1.2.2 under Fedora linux 8. and installed the
> runtime library "libantlr3c-3.1.1", which works perfectly. 
>  
> I generate code for the C target, and made my own main.c using the
> example on the ANTLR website, this code compiles well without errors
> (and some warnings about not used variables, but that isn't harmfull I
> guess)
>  
> Whats the problem then? Well I've got a question about the section
> just above the main, "int ANTLR3_CDECL" what is it good for? when I
> comment this part out, the source compiles well, but if I don't it
> generates the following error:
>  
> "main.c:8: Warning: two or more data types in declaration specifiers"


You are not using it correctly. The runtime will define this is empty on
UNIX and as the proper cdecl spec for exporting functions from DLLs on
windows. So, apart from the fact that you can't export main() from a DLL
like that, look at your code - it is incorrect you have int in there
twice. Use this macro if you want to export your own functions from DLLs
- it is a convenience for you but a necessity for the runtime functions.



>  
> Then I've got a somewhat more serious problem, my code hangs when
> feeding an input file. I checked with some printf statements where it
> hangs, but it doesn't do anything after the  " psr =
> testParserNew(tstream); " line. The program doesn't shutdown, but also
> doesn't do anything else. 

I suggest that this means there is something wrong with the grammar or
the way your are compiling it etc. 

>  
> And is  psr->program(psr);  the right way to invoke the parser? 


In your code below you are saying that it hangs on the parser
constructor, but here you are suggesting that it is hanging on
invocation of the parser? I assume the latter is correct?


> So that the outputs I made in the .g file (like detecting a number and
> then printf("number found"); actually get printed in the terminal?
>  
> I've been trying things for some time now, but really can't find the
> problem. Does someone else maybe know what i'm doing wrong?


Do you absolutely need to use the C target? I would suggest that you
learn using Java just because it will keep you out of trouble, then come
back to the C target.

>  
> Thanx in advance!!
>  




> int  ANTLR3_CDECL
> int main(int argc, char *argv[])


See that you have 

int ANTLR3_CDECL int main...

?


>    tstream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
> TOKENSOURCE(lxr));
>     if (tstream == NULL)
>     {
>         fprintf(stderr, "Out of memory trying to allocate token stream
> \n");
>         exit(1);
>     }
>     psr     = testParserNew(tstream);  // CParserNew is generated by
> ANTLR3
>  
> // SOFTWARE HANGS HERE........


I don't think you mean here?

>  
>  
>     if (psr == NULL)
>     {
>         fprintf(stderr, "Out of memory trying to allocate parser\n");
>         exit(ANTLR3_ERR_NOMEM);
>     }


I think that you mean here?

>     psr->program(psr);


You probably need to post your grammar so that we can look for errors
within it.

Jim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/f61acd64/attachment.html 

From zenzike at gmail.com  Thu Dec 18 10:13:48 2008
From: zenzike at gmail.com (Nicolas Wu)
Date: Thu, 18 Dec 2008 18:13:48 +0000
Subject: [antlr-interest] Occasionally match hidden channel
In-Reply-To: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>
References: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>
Message-ID: <c1a7c3060812181013k75525248hef25212b125b6d13@mail.gmail.com>

To make things worse, sometimes I want to make sure that there is
definitely no SLASHSLASH between elements.

I know it sounds like it should just be an ordinary token, but it isn't,
since there are only two specific places in the grammar where
these funny requirements crop up. The rest of the time,
SLASHSLASH is invisible.

Thanks again,

zenzike

On Thu, Dec 18, 2008 at 6:04 PM, Zenzike <zenzike at gmail.com> wrote:
> I'm trying to make it so that input only occasionally matches tokens
> that are sent to the hidden channel.
> My grammar has something along the following:
>
> SLASHSLASH : '\\\\' {$channel=HIDDEN};     // For the symbols "\\"

From antlr at mirality.co.nz  Thu Dec 18 10:38:04 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 19 Dec 2008 07:38:04 +1300
Subject: [antlr-interest] Faster expression parsing for ANTLR
In-Reply-To: <31e910dd0812180118o4078c6e4l1a961e07d8d71ec6@mail.gmail.co
 m>
References: <31e910dd0812180118o4078c6e4l1a961e07d8d71ec6@mail.gmail.com>
Message-ID: <20081218183814.BA9ED11EDF2@www.antlr.org>

At 22:18 18/12/2008, Zenzike wrote:
 >I thought about that, but I wasn't sure it would work -- 
wouldn't
 >the scope be shared between the recursive calls to e[]?
[...]
 >If the parameter p were scoped, rather than passed, then we 
forget
 >the call-tree that gets us to our current position don't we?
 >My understanding might be wrong -- I thought scoped in the 
grammar
 >became static variables in the target language, is that true?

Yes, but they're represented as stacks rather than discrete 
values.  So recursive usage of them is safe.  (Have a look at the 
reference for $ values to see the syntax to refer to earlier items 
in the stack.)


From jimi at temporal-wave.com  Thu Dec 18 10:40:41 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Dec 2008 10:40:41 -0800
Subject: [antlr-interest] Occasionally match hidden channel
In-Reply-To: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>
References: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>
Message-ID: <1229625641.19573.11.camel@jimi>

On Thu, 2008-12-18 at 18:04 +0000, Zenzike wrote:

> I'm trying to make it so that input only occasionally matches tokens
> that are sent to the hidden channel.
> My grammar has something along the following:
> 
> SLASHSLASH : '\\\\' {$channel=HIDDEN};     // For the symbols "\\"
> 
> This is regarded as whitespace in the language I'm trying to define,
> and should be able to
> appear between any two tokens. However, occasionally, I want to make
> sure that there is definitely
> a SLASHSLASH token between two other tokens.
> 
> As far as I can tell, the way to do this is to hide the SLASHSLASH
> (which I have done),
> and in places where it is needed, I should query the hidden channel --
> but I can't find
> any documentation about how this done (although there seems to be
> plenty saying that it is possible!)
> 
> Something like this would be ideal:
> 
> rule : TOKEN1 {channel.hidden.match(SLASHSLASH)} TOKEN2 ;
> 
> What is the right syntax?


This will do it:

((TokenStream)input ).get( input.index()-1 ).sometokenmethodsuchasgetType() == SLASHSLASH

Jim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/1fa8081d/attachment.html 

From jimi at temporal-wave.com  Thu Dec 18 10:42:18 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 18 Dec 2008 10:42:18 -0800
Subject: [antlr-interest] Occasionally match hidden channel
In-Reply-To: <c1a7c3060812181013k75525248hef25212b125b6d13@mail.gmail.com>
References: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>
	<c1a7c3060812181013k75525248hef25212b125b6d13@mail.gmail.com>
Message-ID: <1229625738.19573.13.camel@jimi>

On Thu, 2008-12-18 at 18:13 +0000, Nicolas Wu wrote:

> To make things worse, sometimes I want to make sure that there is
> definitely no SLASHSLASH between elements.
> 
> I know it sounds like it should just be an ordinary token, but it isn't,
> since there are only two specific places in the grammar where
> these funny requirements crop up. The rest of the time,
> SLASHSLASH is invisible.


To predicate on it not being there use this:

r : SOMETHING {(TokenStream)input ).get( input.index()-1 ).getType() !=
SLASHSLASH) }?=> SOMETHINGELSE
;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081218/34e1d120/attachment.html 

From antlr at mirality.co.nz  Thu Dec 18 10:54:09 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 19 Dec 2008 07:54:09 +1300
Subject: [antlr-interest] C target difficulties
In-Reply-To: <BLU106-W56FAFB0C6A3E6B5C3729E6ECF30@phx.gbl>
References: <BLU106-W56FAFB0C6A3E6B5C3729E6ECF30@phx.gbl>
Message-ID: <20081218185418.DE06111EE46@www.antlr.org>

At 01:48 19/12/2008, M. C. wrote:
>Then I've got a somewhat more serious problem, my code hangs when 
>feeding an input file. I checked with some printf statements 
>where it hangs, but it doesn't do anything after the  " psr = 
>testParserNew(tstream); " line. The program doesn't shutdown, but 
>also doesn't do anything else.

Did you compile the grammar with -debug?  If so, then hanging is 
normal, since it's waiting for a connection from the debugger 
(ANTLRworks).

If you don't want it to do that, then ensure you're not compiling 
it with -debug.


From parrt at cs.usfca.edu  Thu Dec 18 11:23:08 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 18 Dec 2008 11:23:08 -0800
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <4c63b36c0812180956v67f6bacfw85e2152a761286ab@mail.gmail.com>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
	<B9D6DE1D-1377-45E4-AC95-AD9D84F8BF85@cs.usfca.edu>
	<op.umdblswui0hb2k@jimi>
	<4c63b36c0812180956v67f6bacfw85e2152a761286ab@mail.gmail.com>
Message-ID: <09449369-B429-4F1D-B9B5-E3E0E992A54D@cs.usfca.edu>


On Dec 18, 2008, at 9:56 AM, Vishwanath Hawargi wrote:

> Do we have a demographical stats? like how many ANTLR users in a  
> given location?
> Probably having a conference in high-antlr-user-density-location would
> be great..

we do. germany then france in europe but it's probably just by  
population size.

> How about Bangalore ;) ?

India and China are between France/Germany.

Ter

From parrt at antlr.org  Thu Dec 18 11:23:39 2008
From: parrt at antlr.org (Terence Parr)
Date: Thu, 18 Dec 2008 11:23:39 -0800
Subject: [antlr-interest] antlr.org going down for a few days
Message-ID: <CD261428-1620-45D3-AFA9-0335BDB0BFE4@antlr.org>

going to be rebuilding it with latest software and consolidating  
server software.

Ter

From parrt at cs.usfca.edu  Fri Dec 19 18:12:37 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 19 Dec 2008 18:12:37 -0800
Subject: [antlr-interest] still working on it
Message-ID: <26924CB0-BD45-4A17-A01A-4E7196B9C491@cs.usfca.edu>

wiki, jira are back, trying to rebuild antlr.org sites.
Ter

From parrt at cs.usfca.edu  Fri Dec 19 20:00:40 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 19 Dec 2008 20:00:40 -0800
Subject: [antlr-interest] will fix tomorrow
Message-ID: <76C20580-80B8-4FD2-975C-8D5E9908E064@cs.usfca.edu>

howdy. ALMOST got it working but not quite. must go home. left it down  
to avoid corruption.  will get it back tomorrow for sure.
Ter

From g.r.vansickle at att.net  Sat Dec 20 00:46:57 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Sat, 20 Dec 2008 02:46:57 -0600
Subject: [antlr-interest] Flattening lists?
In-Reply-To: <1229359236.5844.3.camel@jimi>
References: <1301A52C9A8C404EB6905AAC1DD3A2C2@DFW5RB41>
	<1229359236.5844.3.camel@jimi>
Message-ID: <8CC28F84F27146A1A3715A33544AA05B@DFW5RB41>

> From: Jim Idle
> 
> On Mon, 2008-12-15 at 08:44 -0600, Gary R. Van Sickle wrote: 
> 
> 	
> 	Hi all,
> 	
> 	Not sure if this is something that should be obvious or 
> not, but is there a
> 	way, completely in ANTLR 3.x (C backend FWIW), to 
> flatten a list of
> 	"things"?  What I mean is, say I have a language I'm 
> trying to parse with
> 	constructs something like this:
> 	
> 		// Declare a bunch of variables.
> 		int varA, varB, varC;
> 	
> 	Now, it's pretty straightforward to convert this via 
> lexer->parser->tree
> 	parser into:
> 	
> 		(VAR_DECL int (INITIALIZER varA) (INITIALIZER 
> varB) (INITIALIZER
> 	varC))
> 	
> 	But is there a way to get this instead?:
> 	
> 		(VAR_DECL int varA) (VAR_DECL int varB) 
> (VAR_DECL int varC)
> 	
> 	Of course once I have the AST I can traverse it with C 
> &&/|| C++, but it
> 	would sure be nice if ANTLR was able to flatten these 
> sort of constructs for
> 	me.
> 	
> 	Thanks,
> 	
> 
> 
> 
> rule : INT i+=ID (COMMA i+=ID)  ->^(VAR_DECL INT $i)+
>   ;
> 
> 
> Jim 

Thanks Jim, but what I'm looking at is a bit more complicated.  What I have
currently for a parser grammer looks in part like this:


[...]
declaration
    : ts=type_specifier idl=init_declarator_list ';' -> ^(VAR_DECL $ts $idl)
    ;

init_declarator_list
    : init_declarator (',' init_declarator)* -> ^(init_declarator)+
    ;

init_declarator
    : declarator ('=' initializer)? -> ^(INITIALIZER declarator
initializer?)
    ;
[...]

(i.e. a slightly simplified version of the C variable declaration syntax)


I suppose I could flatten my *grammar* by eliminating the
init_declarator_list entirely and doing something like this:


[...]
declaration
    : ts=type_specifier idl+=init_declarator (',' idl+=init_declarator)* ';'
-> ^(VAR_DECL $ts $idl)+
    ;
[...]


But this seems like a step backwards, and something that either the rewrite
rule itself should be able to handle without flattening the grammar, or
something the tree parser should be able to handle (i.e. match the VAR_DECL
subtree and then 'iterate' over the children in the init_declarator_list and
taking some action for each one).

Is there really no other way to do this other than flattening the grammar
itself?  I can especially see that as being unworkable if one's language
supported "lists of lists" and you wanted to do this sort of flattening.

Thanks again,

-- 
Gary R. Van Sickle
 


From tbrandonau at gmail.com  Sat Dec 20 02:23:36 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 20 Dec 2008 21:23:36 +1100
Subject: [antlr-interest] Flattening lists?
In-Reply-To: <8CC28F84F27146A1A3715A33544AA05B@DFW5RB41>
References: <1301A52C9A8C404EB6905AAC1DD3A2C2@DFW5RB41>
	<1229359236.5844.3.camel@jimi>
	<8CC28F84F27146A1A3715A33544AA05B@DFW5RB41>
Message-ID: <ebc876d70812200223o26b10a17nbb3b050dbb5a46cf@mail.gmail.com>

On Sat, Dec 20, 2008 at 7:46 PM, Gary R. Van Sickle
<g.r.vansickle at att.net>wrote:

> > From: Jim Idle
> >
> > On Mon, 2008-12-15 at 08:44 -0600, Gary R. Van Sickle wrote:
> >
> >
> >       Hi all,
> >
> >       Not sure if this is something that should be obvious or
> > not, but is there a
> >       way, completely in ANTLR 3.x (C backend FWIW), to
> > flatten a list of
> >       "things"?  What I mean is, say I have a language I'm
> > trying to parse with
> >       constructs something like this:
> >
> >               // Declare a bunch of variables.
> >               int varA, varB, varC;
> >
> >       Now, it's pretty straightforward to convert this via
> > lexer->parser->tree
> >       parser into:
> >
> >               (VAR_DECL int (INITIALIZER varA) (INITIALIZER
> > varB) (INITIALIZER
> >       varC))
> >
> >       But is there a way to get this instead?:
> >
> >               (VAR_DECL int varA) (VAR_DECL int varB)
> > (VAR_DECL int varC)
> >
> >       Of course once I have the AST I can traverse it with C
> > &&/|| C++, but it
> >       would sure be nice if ANTLR was able to flatten these
> > sort of constructs for
> >       me.
> >
> >       Thanks,
> >
> >
> >
> >
> > rule : INT i+=ID (COMMA i+=ID)  ->^(VAR_DECL INT $i)+
> >   ;
> >
> >
> > Jim
>
> Thanks Jim, but what I'm looking at is a bit more complicated.  What I have
> currently for a parser grammer looks in part like this:
>
>
> [...]
> declaration
>    : ts=type_specifier idl=init_declarator_list ';' -> ^(VAR_DECL $ts $idl)
>    ;
>
> init_declarator_list
>    : init_declarator (',' init_declarator)* -> ^(init_declarator)+
>    ;
>
> init_declarator
>    : declarator ('=' initializer)? -> ^(INITIALIZER declarator
> initializer?)
>    ;
> [...]
>
> (i.e. a slightly simplified version of the C variable declaration syntax)
>
>
> I suppose I could flatten my *grammar* by eliminating the
> init_declarator_list entirely and doing something like this:
>
>
> [...]
> declaration
>    : ts=type_specifier idl+=init_declarator (',' idl+=init_declarator)* ';'
> -> ^(VAR_DECL $ts $idl)+
>    ;
> [...]
>
>
> But this seems like a step backwards, and something that either the rewrite
> rule itself should be able to handle without flattening the grammar, or
> something the tree parser should be able to handle (i.e. match the VAR_DECL
> subtree and then 'iterate' over the children in the init_declarator_list
> and
> taking some action for each one).

You can use rewrite rules but as rewrite rules rewrite the input not the AST
you produce (which in your rules deviates from the desired output) you must
pass the type down to init_declarator_list as a parameter. Like:
declaration
   : ts=type_specifier idl=init_declarator_list[$ts.tree] ';' -> $idl+
   ;

init_declarator_list[Object type]
   : init_declarator (',' init_declarator)* -> ^(VAR_DECL {(Tree)$type}
init_declarator)+
   ;

init_declarator
   : declarator ('=' initializer)? -> declarator initializer?
    ;

(You have to pass an object down as the tree attribute is an object to avoid
an AST dependence and ANTLR incorrectly interprets a parameter of
"(Tree)$ts.tree" as two different parameters, outputting "(Tree),
((Object)ts.tree)", this seems like a bug in ANTLR, thouge perhaps a tough
one to deal with given ANTLR's limited knowledge of the target language).)

Though given the simplicity of the rules it seems simpler to simply collapse
the rules as Jim suggested.
Or you could take the second option you propose and simply handle it in the
tree parser which should also be easy enough.

Tom.

>
>
> Is there really no other way to do this other than flattening the grammar
> itself?  I can especially see that as being unworkable if one's language
> supported "lists of lists" and you wanted to do this sort of flattening.
>
> Thanks again,
>
> --
> Gary R. Van Sickle
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081220/4f0cdb7f/attachment.html 

From zenzike at gmail.com  Sat Dec 20 05:32:29 2008
From: zenzike at gmail.com (Zenzike)
Date: Sat, 20 Dec 2008 13:32:29 +0000
Subject: [antlr-interest] Occasionally match hidden channel
In-Reply-To: <1229625641.19573.11.camel@jimi>
References: <31e910dd0812181004u16d899bn1d203416e77e49bc@mail.gmail.com>
	<1229625641.19573.11.camel@jimi>
Message-ID: <31e910dd0812200532l26e57651lad35f9ff305ad829@mail.gmail.com>

> This will do it:
>
> ((TokenStream)input ).get( input.index()-1 ).sometokenmethodsuchasgetType()
> == SLASHSLASH

Thanks! I'm amazed at how friendly and quick to reply this community is!

Unfortunately, the problem is a little more subtle than that; there
might be real whitespace elements that I don't want to parse between
SLASHSLASH and OTHER.
However, I thought I solved this by using:

!((CommonTokenStream)input).getTokens(input.LT(-1).getTokenIndex(),
input.LT(1).getTokenIndex(), SLASHSLASH).isEmpty()

But it turns out the problem is more subtle than this ... consider the
following snippet of my grammar (the whole this is rather huge, but
hopefully this will be enough):

display
  : BDISPLAY item
      (  sep item
      | {!((CommonTokenStream)input).getTokens(input.LT(-1).getTokenIndex(),
input.LT(1).getTokenIndex(), SLASHSLASH).isEmpty()}?=>
//        {((LateChannelTokenStream)input).setTokenTypeChannel(SLASHSLASH,
Token.DEFAULT_CHANNEL);}
//        SLASHSLASH+
//        {((LateChannelTokenStream)input).resetTokenTypeChannel(SLASHSLASH);}
//        item
      )* EDISPLAY            -> ^(DISPLAY item+)
  ;

sep
  : SEMICOLON ;
...
SLASHSLASH : '\\\\' {$channel=HIDDEN;};


The trouble is that matching "item" by itself, rather than "sep item",
causes the "multiple alternatives" problem elsewhere in the grammar --
a separation token like "sep" is really needed
in this case. The trouble is that as it stands, the grammar seems
fine, but compiling gives me the following error (due to the semantic
predicate above):

Error creating resources for Aztex. Cause
java.util.NoSuchElementException: no such attribute: description in
template context [outputFile parser genericParser(...) cyclicDFA
if(dfa.specialStateSTs)_subtemplate anonymous cyclicDFAState
cyclicDFAEdge notPredicate evalPredicate(...)]

I expect this is because we need to tell the DFA that there is no
ambiguity here -- which wouldn't be possible for it to detect, since
SLASHSLASH is in the hidden channel.
to try and solve this I implemented a LateChannelTokenStream, that has
the following methods:

	protected int skipOffTokenChannels(int i) {
		int n = tokens.size();
		
		while ( i<n && ((Token)tokens.get(i)).getChannel()!=channel ) {
			if (channelOverrideMap!=null) {
				Integer channelI = (Integer)
					channelOverrideMap.get(new Integer(((Token)tokens.get(i)).getChannel()));
				
				if (channelI.intValue() == channel) {
					((Token)tokens.get(i)).setChannel(channel);
					break;
				}
			}
			i++;
		}
		return i;
	}
	
	public void resetTokenTypeChannel(int ttype) {
		if (channelOverrideMap != null)
			channelOverrideMap.remove(new Integer(ttype));
	}

The idea is to add the SLASHSLASH token to the default channel by
using setTokenTypeChannel(SLASHSLASH, DEFAULT_CHANNEL) where
necessary, then switching it back off with resetTokenTypeChannel()
when it isn't.

For some reason this isn't working at all, though I expect it's
because the DFA isn't enabling the actions when doing a lookahead, and
so the hidden SLASHSLASH isn't visible, and the DFA fails.

To try and counter this, I tried to force backtracking, with the
options {k=0; backtrack=true;} set for this rule, but that doesn't
seem to have helped either.

I know this is a fairly involved problem -- I can supply the rest of
my grammar if it helps, but does anybody have any suggestions?

Thanks lots,

zenzike

From mike at mpagel.de  Sat Dec 20 07:45:01 2008
From: mike at mpagel.de (Mike Pagel)
Date: Sat, 20 Dec 2008 16:45:01 +0100
Subject: [antlr-interest] Organization of complex template structures
Message-ID: <494D12FD.6050008@mpagel.de>

Hi there,

I am wondering how to best go about structuring complex sets of string 
templates. As I understand the current mechanisms, a template group is 
pretty much a class with its templates being the class methods. You can 
build inheritance structures between groups and thereby overriding 
templates (the methods) and call super group (class) templates.

This allows to build up some structure in terms of reusing basic 
templates and if required specialize certain pieces. But in the end, you 
always call a template (method) that is part of or being inherited by a 
specific leaf template group (class). Once the thread of control is 
within a template group there is no means to call templates in other 
groups, except for the groups which belong to inheritance line of the 
leaf group (if I'm not missing anything).

So far I find this limiting, e.g. if my model describes (Java) classes 
and I want to generate the class code. Then my leaf template group may 
be a "class.stg" with all kinds of templates like "generateMethods()" 
and "generateAttributes()". The implementation of those template now 
should invoke templates from a group "Methods.stg" and another group 
"Attributes.stg". (This example may not be pressing the issue but it's 
easy to follow.)

Now I cannot derive "Class.stg" from both other groups, nor can I 
somehow call into these groups (like calling static members functions of 
another class in code). What would be a good way to express this with 
the current mechanisms or is there actually a limitation?

Thanks a lot,
Mike

From sidharth.kuruvila at gmail.com  Sat Dec 20 08:57:14 2008
From: sidharth.kuruvila at gmail.com (Sidharth Kuruvila)
Date: Sat, 20 Dec 2008 22:27:14 +0530
Subject: [antlr-interest] Error with lexer unable to find comment tokens
Message-ID: <2ab2ed550812200857p2c569d48gcb733a568291f43f@mail.gmail.com>

I get the following result when iterating through the tokens from my lexer.

[@-1,0:4='<?php',<6>,1:0]
line 1:18 no viable alternative at character ''
line 1:6 no viable alternative at character '*'
line 1:14 no viable alternative at character '*'
line 1:16 no viable alternative at character '?'
[@-1,7:13='comment',<4>,1:7]
[@-1,16:17='?>',<6>,1:16]

This is for the input <?php/*comment*/?>. The lexer appears to be unable to
match comments.  The comment matching works fine when I remove the start
condition from BodyString.

This might be an issue with the DFA, it matches the comment, but continues
to try and match the charector after the comment.

Test.g
--------

grammar Test;

options {
    backtrack = true;
    memoize = true;
}

@lexer::members{
    boolean start=true;
}


test: Identifier;


BodyString :
    ({start}?=> ( options {greedy=false;} : . )* '<?php' {start = false;})|
    '?>' ((BodyStringTest)=>( options {greedy=false;} : . )* '<?php' | (~'<'
| '<' ~'?')*)
    ;


fragment
BodyStringTest :
    ( options {greedy=false;} : . )* '<?php';


Multiline    :    '/*' ( options {greedy=false;} : . )* '*/'
{$channel=HIDDEN;}
    ;

Identifier
    : '$'*('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;

WhiteSpace
@init{
    $channel=HIDDEN;
}
    :    ' '| '\t'| '\n'|'\r'
    ;

Test.Java
-------------
import org.antlr.runtime.*;
//import arg.antlr.runtime.ANTLRStringStream;
//import org.antlr.runtime.CommonTokenStream;

public class Test{
    public static void main(String[] args)throws Exception{
        ANTLRStringStream ass = new ANTLRStringStream("<?php/*comment*/?>");
        TestLexer tpl = new TestLexer(ass);
        System.out.println(tpl.nextToken());
        System.out.println(tpl.nextToken());
        System.out.println(tpl.nextToken());
    }
}

-- 
I am but a man.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081220/67c489ee/attachment.html 

From jared.bunting at peachjean.com  Sat Dec 20 10:34:47 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Sat, 20 Dec 2008 12:34:47 -0600
Subject: [antlr-interest] Error with lexer unable to find comment tokens
In-Reply-To: <2ab2ed550812200857p2c569d48gcb733a568291f43f@mail.gmail.com>
References: <2ab2ed550812200857p2c569d48gcb733a568291f43f@mail.gmail.com>
Message-ID: <494D3AC7.6000404@peachjean.com>

I was able to get it to work by changing your Multiline rule:

Multiline    :    '/*' ('*'~'/'|~'*')* '*/' {$channel=HIDDEN;} ;

-Jared

Sidharth Kuruvila wrote:
> I get the following result when iterating through the tokens from my 
> lexer.
>
> [@-1,0:4='<?php',<6>,1:0]
> line 1:18 no viable alternative at character ''
> line 1:6 no viable alternative at character '*'
> line 1:14 no viable alternative at character '*'
> line 1:16 no viable alternative at character '?'
> [@-1,7:13='comment',<4>,1:7]
> [@-1,16:17='?>',<6>,1:16]
>
> This is for the input <?php/*comment*/?>. The lexer appears to be 
> unable to match comments.  The comment matching works fine when I 
> remove the start condition from BodyString.
>
> This might be an issue with the DFA, it matches the comment, but 
> continues to try and match the charector after the comment.
>
> Test.g
> --------
>
> grammar Test;
>
> options {
>     backtrack = true;
>     memoize = true;
> }
>
> @lexer::members{
>     boolean start=true;
> }
>
>
> test: Identifier;
>
>
> BodyString :
>     ({start}?=> ( options {greedy=false;} : . )* '<?php' {start = 
> false;})|
>     '?>' ((BodyStringTest)=>( options {greedy=false;} : . )* '<?php' | 
> (~'<' | '<' ~'?')*)
>     ;
>
>
> fragment
> BodyStringTest :
>     ( options {greedy=false;} : . )* '<?php';
>
>
> Multiline    :    '/*' ( options {greedy=false;} : . )* '*/' 
> {$channel=HIDDEN;}
>     ;
>
> Identifier
>     : '$'*('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>     ;
>
> WhiteSpace
> @init{
>     $channel=HIDDEN;
> }
>     :    ' '| '\t'| '\n'|'\r'
>     ;
>
> Test.Java
> -------------
> import org.antlr.runtime.*;
> //import arg.antlr.runtime.ANTLRStringStream;
> //import org.antlr.runtime.CommonTokenStream;
>
> public class Test{
>     public static void main(String[] args)throws Exception{
>         ANTLRStringStream ass = new 
> ANTLRStringStream("<?php/*comment*/?>");
>         TestLexer tpl = new TestLexer(ass);
>         System.out.println(tpl.nextToken());
>         System.out.println(tpl.nextToken());
>         System.out.println(tpl.nextToken());
>     }
> }
>
> -- 
> I am but a man.
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

From parrt at antlr.org  Sat Dec 20 15:29:11 2008
From: parrt at antlr.org (Terence Parr)
Date: Sat, 20 Dec 2008 15:29:11 -0800
Subject: [antlr-interest] ok, leaving site up for now
Message-ID: <CBC9675C-8D4A-410B-91A1-17C1E1B96A4B@antlr.org>

ST and antlr2.org are messed up and parr.us is too.

heh, added favicon.ico too. :)

Will fix rest tomorrow. non v3 downloads are hosed at moment for  
example.

please report other weird behavior.

Ter

From lgcraymer at yahoo.com  Sat Dec 20 23:17:42 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sat, 20 Dec 2008 23:17:42 -0800 (PST)
Subject: [antlr-interest] Organization of complex template structures
References: <494D12FD.6050008@mpagel.de>
Message-ID: <955291.46031.qm@web55904.mail.re3.yahoo.com>

Your understanding is flawed--template groups are not classes, nor are
templates methods.  Treating them as such is likely to cause you
grief.  Think rather that template groups are a convenience for
argument checking against a template interface.  That way, changing
template groups makes it possible to switch from, say, generating Java
code to C# just by switching template groups.  Template groups are a
mechanism for retargeting.  Switching individual template groups within
an application while leaving others unchanged is not a common usage
pattern.

Instead of thinking of templates as methods, take a
simpler view:  arguments fill "holes" in templates and the arguments
should be thought of in "instantiated" form.  Thinking of arguments as
dynamically invoked methods misses an important level of abstraction: 
argument evaluation is independent of template evaluation and is
side-effect free.  [It is possible to implement side-effects as the
result of evaluation through reflection, but the results are
unpredictable.  Do not do this!]

It is possible to invoke other
templates in the same group from within a template, but you should see
this as a macro invocation, and the facility as a convenience to allow
factoring.  Almost always, the invoked template is local to the
template group (not declared in the interface).  Such invocations tend
to be uncommon.

--Loring




----- Original Message ----
> From: Mike Pagel <mike at mpagel.de>
> To: antlr-interest at antlr.org
> Sent: Saturday, December 20, 2008 7:45:01 AM
> Subject: [antlr-interest] Organization of complex template structures
> 
> Hi there,
> 
> I am wondering how to best go about structuring complex sets of string 
> templates. As I understand the current mechanisms, a template group is 
> pretty much a class with its templates being the class methods. You can 
> build inheritance structures between groups and thereby overriding 
> templates (the methods) and call super group (class) templates.
> 
> This allows to build up some structure in terms of reusing basic 
> templates and if required specialize certain pieces. But in the end, you 
> always call a template (method) that is part of or being inherited by a 
> specific leaf template group (class). Once the thread of control is 
> within a template group there is no means to call templates in other 
> groups, except for the groups which belong to inheritance line of the 
> leaf group (if I'm not missing anything).
> 
> So far I find this limiting, e.g. if my model describes (Java) classes 
> and I want to generate the class code. Then my leaf template group may 
> be a "class.stg" with all kinds of templates like "generateMethods()" 
> and "generateAttributes()". The implementation of those template now 
> should invoke templates from a group "Methods.stg" and another group 
> "Attributes.stg". (This example may not be pressing the issue but it's 
> easy to follow.)
> 
> Now I cannot derive "Class.stg" from both other groups, nor can I 
> somehow call into these groups (like calling static members functions of 
> another class in code). What would be a good way to express this with 
> the current mechanisms or is there actually a limitation?
> 
> Thanks a lot,
> Mike
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From mike at mpagel.de  Sun Dec 21 02:05:01 2008
From: mike at mpagel.de (Mike Pagel)
Date: Sun, 21 Dec 2008 11:05:01 +0100
Subject: [antlr-interest] Organization of complex template structures
In-Reply-To: <955291.46031.qm@web55904.mail.re3.yahoo.com>
References: <494D12FD.6050008@mpagel.de>
	<955291.46031.qm@web55904.mail.re3.yahoo.com>
Message-ID: <494E14CD.2040904@mpagel.de>

Thanks for your explanation. But even if I set aside the class/method 
analogy: how would I organize my templates then? From what you wrote I 
basically see that typically a template calls other templates within the 
same group. So how can I reuse a template for instance across different 
projects? Copy and paste it into the other project's template group 
file? Merge this and the other project's group files?

You are basically saying that all templates reside in a single group 
with inheritance being a feature to be used mainly for retargeting, but 
that's not practical for large scale projects. Other template engines 
like XPAND (open architectureware), T4 from MS DSL Tools, MD Workbench 
from Sodius, JET, ... *all* support splitting up your template project 
into trees of template files that can call each into each other. This 
way a template that knows how to serialize an attribute to something 
like "int i" can be used for class attributes as well as for method 
arguments, without the whole template zoo residing in a single group.

Another example: if a want to create the three elements of an MVP style 
application I will create at least three files, one for the business 
object model, one for the view and one for the presenter. Would I create 
three different template groups, one for each file? But how do those 
groups then share common templates? By (single) inheritance? Or would I 
have to put all templates into a single group? That's gonna be some file!

Is it really true that ST assumes most of the templates for a given 
project sit inside a single group?

Mike



Loring Craymer schrieb:
> Your understanding is flawed--template groups are not classes, nor are
> templates methods.  Treating them as such is likely to cause you
> grief.  Think rather that template groups are a convenience for
> argument checking against a template interface.  That way, changing
> template groups makes it possible to switch from, say, generating Java
> code to C# just by switching template groups.  Template groups are a
> mechanism for retargeting.  Switching individual template groups within
> an application while leaving others unchanged is not a common usage
> pattern.
>
> Instead of thinking of templates as methods, take a
> simpler view:  arguments fill "holes" in templates and the arguments
> should be thought of in "instantiated" form.  Thinking of arguments as
> dynamically invoked methods misses an important level of abstraction: 
> argument evaluation is independent of template evaluation and is
> side-effect free.  [It is possible to implement side-effects as the
> result of evaluation through reflection, but the results are
> unpredictable.  Do not do this!]
>
> It is possible to invoke other
> templates in the same group from within a template, but you should see
> this as a macro invocation, and the facility as a convenience to allow
> factoring.  Almost always, the invoked template is local to the
> template group (not declared in the interface).  Such invocations tend
> to be uncommon.
>
> --Loring
>
>
>
>
> ----- Original Message ----
>   
>> From: Mike Pagel <mike at mpagel.de>
>> To: antlr-interest at antlr.org
>> Sent: Saturday, December 20, 2008 7:45:01 AM
>> Subject: [antlr-interest] Organization of complex template structures
>>
>> Hi there,
>>
>> I am wondering how to best go about structuring complex sets of string 
>> templates. As I understand the current mechanisms, a template group is 
>> pretty much a class with its templates being the class methods. You can 
>> build inheritance structures between groups and thereby overriding 
>> templates (the methods) and call super group (class) templates.
>>
>> This allows to build up some structure in terms of reusing basic 
>> templates and if required specialize certain pieces. But in the end, you 
>> always call a template (method) that is part of or being inherited by a 
>> specific leaf template group (class). Once the thread of control is 
>> within a template group there is no means to call templates in other 
>> groups, except for the groups which belong to inheritance line of the 
>> leaf group (if I'm not missing anything).
>>
>> So far I find this limiting, e.g. if my model describes (Java) classes 
>> and I want to generate the class code. Then my leaf template group may 
>> be a "class.stg" with all kinds of templates like "generateMethods()" 
>> and "generateAttributes()". The implementation of those template now 
>> should invoke templates from a group "Methods.stg" and another group 
>> "Attributes.stg". (This example may not be pressing the issue but it's 
>> easy to follow.)
>>
>> Now I cannot derive "Class.stg" from both other groups, nor can I 
>> somehow call into these groups (like calling static members functions of 
>> another class in code). What would be a good way to express this with 
>> the current mechanisms or is there actually a limitation?
>>
>> Thanks a lot,
>> Mike
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>     
>
>
>
>       
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

From peter at pjstirling.plus.com  Sun Dec 21 03:20:20 2008
From: peter at pjstirling.plus.com (Peter Stirling)
Date: Sun, 21 Dec 2008 11:20:20 +0000
Subject: [antlr-interest] Organization of complex template structures
In-Reply-To: <494E14CD.2040904@mpagel.de>
References: <494D12FD.6050008@mpagel.de>
	<955291.46031.qm@web55904.mail.re3.yahoo.com>
	<494E14CD.2040904@mpagel.de>
Message-ID: <CF69F29A-4016-4D1E-8031-A4A964489A58@pjstirling.plus.com>

It appears that the 'expected' use of StringTemplate is that templates  
used together are all written by a single organisation, if not single  
programmer, am I wrong in this belief? That composition through  
inheritance is available, but existing only for replacing elements in  
ways that both parent and child groups are aware will happen?


My understanding of what he has brought up is that template groups  
don't appear to support programming in-the-large.

I have a web-site, while writing the actual content I also build a  
library of templates that do html in my style.

	Libraries are good.

If I want to write a second web-site which re-uses these short-cuts  
then the stringtemplate 'way' is to move the shared elements into  
their own group and then both sites will need to inherit from this  
group.

Fictitious example ahoy!

A site creator wishes to use two libraries, one for pure html  
convenience, the second with useful trivia about all things nautical.  
Neither library was written by our hapless author.
StringTemplate currently only offers single-inheritance for group  
composition, and it should be fairly obvious that these groups do not  
share a meaningful inheritance relationship (but as StringTemplate  
only offers single inheritance then you would be forced to linear-ise  
a relationship between them and the client templates favouring one or  
the other). Worse is yet to come.

The html library contains a $anchor()$ template which does various  
sensible things with urls.

The nautical library has a $anchor()$ template that evaluates to  
description in agonising detail of the various forms of metal hooks  
used for tethering ships.

By changing the order of inheritance you can decide which template  
will 'win', but if the goal is to access both in different contexts  
then your only recourse is a manual rename of one of them. These  
libraries are unlikely to have been written by the same person  
(otherwise the names wouldn't conflict) this means that new versions  
of either library will require our hapless author to find out whether  
new template name conflicts have occurred and then perform more manual  
renames (in addition to any that he identified from previous versions).

For this use-case it makes sense (to me) to have a different kind of  
group that you can inherit from, one that will recognise a prefix  
(that the client templates will use) that maps to a particular group,  
from which to return the actual template instance.

Something along the lines of:

bag = new StringTemplateGroupBag()
bag.put( "ships", new StringTemplateGroup( ... ) );
bag.put( "html", new StringTemplateGroup( ... ) );

client = new StringTemplateGroup( ... );
client.setSuperGroup( bag );

And then the client templates can access templates from one or the  
other with some kind of absolute syntax $/html.anchor()$ perhaps?.

Or am I missing something in the API?

On 21 Dec 2008, at 10:05 am, Mike Pagel wrote:

> Thanks for your explanation. But even if I set aside the class/method
> analogy: how would I organize my templates then? From what you wrote I
> basically see that typically a template calls other templates within  
> the
> same group. So how can I reuse a template for instance across  
> different
> projects? Copy and paste it into the other project's template group
> file? Merge this and the other project's group files?
>
> You are basically saying that all templates reside in a single group
> with inheritance being a feature to be used mainly for retargeting,  
> but
> that's not practical for large scale projects. Other template engines
> like XPAND (open architectureware), T4 from MS DSL Tools, MD Workbench
> from Sodius, JET, ... *all* support splitting up your template project
> into trees of template files that can call each into each other. This
> way a template that knows how to serialize an attribute to something
> like "int i" can be used for class attributes as well as for method
> arguments, without the whole template zoo residing in a single group.
>
> Another example: if a want to create the three elements of an MVP  
> style
> application I will create at least three files, one for the business
> object model, one for the view and one for the presenter. Would I  
> create
> three different template groups, one for each file? But how do those
> groups then share common templates? By (single) inheritance? Or  
> would I
> have to put all templates into a single group? That's gonna be some  
> file!
>
> Is it really true that ST assumes most of the templates for a given
> project sit inside a single group?
>
> Mike
>
>
>
> Loring Craymer schrieb:
>> Your understanding is flawed--template groups are not classes, nor  
>> are
>> templates methods.  Treating them as such is likely to cause you
>> grief.  Think rather that template groups are a convenience for
>> argument checking against a template interface.  That way, changing
>> template groups makes it possible to switch from, say, generating  
>> Java
>> code to C# just by switching template groups.  Template groups are a
>> mechanism for retargeting.  Switching individual template groups  
>> within
>> an application while leaving others unchanged is not a common usage
>> pattern.
>>
>> Instead of thinking of templates as methods, take a
>> simpler view:  arguments fill "holes" in templates and the arguments
>> should be thought of in "instantiated" form.  Thinking of arguments  
>> as
>> dynamically invoked methods misses an important level of abstraction:
>> argument evaluation is independent of template evaluation and is
>> side-effect free.  [It is possible to implement side-effects as the
>> result of evaluation through reflection, but the results are
>> unpredictable.  Do not do this!]
>>
>> It is possible to invoke other
>> templates in the same group from within a template, but you should  
>> see
>> this as a macro invocation, and the facility as a convenience to  
>> allow
>> factoring.  Almost always, the invoked template is local to the
>> template group (not declared in the interface).  Such invocations  
>> tend
>> to be uncommon.
>>
>> --Loring
>>
>>
>>
>>
>> ----- Original Message ----
>>
>>> From: Mike Pagel <mike at mpagel.de>
>>> To: antlr-interest at antlr.org
>>> Sent: Saturday, December 20, 2008 7:45:01 AM
>>> Subject: [antlr-interest] Organization of complex template  
>>> structures
>>>
>>> Hi there,
>>>
>>> I am wondering how to best go about structuring complex sets of  
>>> string
>>> templates. As I understand the current mechanisms, a template  
>>> group is
>>> pretty much a class with its templates being the class methods.  
>>> You can
>>> build inheritance structures between groups and thereby overriding
>>> templates (the methods) and call super group (class) templates.
>>>
>>> This allows to build up some structure in terms of reusing basic
>>> templates and if required specialize certain pieces. But in the  
>>> end, you
>>> always call a template (method) that is part of or being inherited  
>>> by a
>>> specific leaf template group (class). Once the thread of control is
>>> within a template group there is no means to call templates in other
>>> groups, except for the groups which belong to inheritance line of  
>>> the
>>> leaf group (if I'm not missing anything).
>>>
>>> So far I find this limiting, e.g. if my model describes (Java)  
>>> classes
>>> and I want to generate the class code. Then my leaf template group  
>>> may
>>> be a "class.stg" with all kinds of templates like  
>>> "generateMethods()"
>>> and "generateAttributes()". The implementation of those template now
>>> should invoke templates from a group "Methods.stg" and another group
>>> "Attributes.stg". (This example may not be pressing the issue but  
>>> it's
>>> easy to follow.)
>>>
>>> Now I cannot derive "Class.stg" from both other groups, nor can I
>>> somehow call into these groups (like calling static members  
>>> functions of
>>> another class in code). What would be a good way to express this  
>>> with
>>> the current mechanisms or is there actually a limitation?
>>>
>>> Thanks a lot,
>>> Mike
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at mpagel.de  Sun Dec 21 03:38:17 2008
From: mike at mpagel.de (Mike Pagel)
Date: Sun, 21 Dec 2008 12:38:17 +0100
Subject: [antlr-interest] Organization of complex template structures
In-Reply-To: <CF69F29A-4016-4D1E-8031-A4A964489A58@pjstirling.plus.com>
References: <494D12FD.6050008@mpagel.de>
	<955291.46031.qm@web55904.mail.re3.yahoo.com>
	<494E14CD.2040904@mpagel.de>
	<CF69F29A-4016-4D1E-8031-A4A964489A58@pjstirling.plus.com>
Message-ID: <494E2AA9.9080407@mpagel.de>

Nice example!

What you describe and especially the suggested solution does come back 
to the class method analogy: your solution is exactly how multiple 
inheritance is solved in languages like C++. If you have methods (here 
templates) with identical names in two inherited classes (here groups), 
you have to prefix them with the class (here group) name.

I would be careful though to suggest such an approach as multiple 
inheritance does have drawbacks in terms of maintenance.

Since you always can mimic inheritance through composition, your 
template group could simply refer or use the "nautic" as well as the 
"html" group/library. So instead of adding multiple inheritance I would 
rather see a feature to have group "imports" (as done in Java). They 
could trigger the group loading mechanism just done when inheriting a 
group and add the imported group's templates to the namespace of the 
current group. To avoid confusion and name clashes the imported 
templates should require scoping when called, just as done in your example:

---- pseudo template group ----

group myappgroup;

import html;
import nautic;

generate() ::=
<<
...
<html.anchor()>
...
<nautic.anchor()>
...
 >>

---- template group end ----

I think that would be a clean approach without entangling in multiple 
inheritance's diamond of death, which will add benefit by allowing to 
cleanly structure your template libraries.

Mike


Peter Stirling schrieb:
> It appears that the 'expected' use of StringTemplate is that templates 
> used together are all written by a single organisation, if not single 
> programmer, am I wrong in this belief? That composition through 
> inheritance is available, but existing only for replacing elements in 
> ways that both parent and child groups are aware will happen?
>
>
> My understanding of what he has brought up is that template groups 
> don't appear to support programming in-the-large.
>
> I have a web-site, while writing the actual content I also build a 
> library of templates that do html in my style.
>
>     Libraries are good.
>
> If I want to write a second web-site which re-uses these short-cuts 
> then the stringtemplate 'way' is to move the shared elements into 
> their own group and then both sites will need to inherit from this group.
>
> Fictitious example ahoy!
>
> A site creator wishes to use two libraries, one for pure html 
> convenience, the second with useful trivia about all things nautical. 
> Neither library was written by our hapless author.
> StringTemplate currently only offers single-inheritance for group 
> composition, and it should be fairly obvious that these groups do not 
> share a meaningful inheritance relationship (but as StringTemplate 
> only offers single inheritance then you would be forced to linear-ise 
> a relationship between them and the client templates favouring one or 
> the other). Worse is yet to come.
>
> The html library contains a $anchor()$ template which does various 
> sensible things with urls.
>
> The nautical library has a $anchor()$ template that evaluates to 
> description in agonising detail of the various forms of metal hooks 
> used for tethering ships.
>
> By changing the order of inheritance you can decide which template 
> will 'win', but if the goal is to access both in different contexts 
> then your only recourse is a manual rename of one of them. These 
> libraries are unlikely to have been written by the same person 
> (otherwise the names wouldn't conflict) this means that new versions 
> of either library will require our hapless author to find out whether 
> new template name conflicts have occurred and then perform more manual 
> renames (in addition to any that he identified from previous versions).
>
> For this use-case it makes sense (to me) to have a different kind of 
> group that you can inherit from, one that will recognise a prefix 
> (that the client templates will use) that maps to a particular group, 
> from which to return the actual template instance.
>
> Something along the lines of:
>
> bag = new StringTemplateGroupBag()
> bag.put( "ships", new StringTemplateGroup( ... ) );
> bag.put( "html", new StringTemplateGroup( ... ) );
>
> client = new StringTemplateGroup( ... );
> client.setSuperGroup( bag );
>
> And then the client templates can access templates from one or the 
> other with some kind of absolute syntax $/html.anchor()$ perhaps?.
>
> Or am I missing something in the API?
>
> On 21 Dec 2008, at 10:05 am, Mike Pagel wrote:
>
>> Thanks for your explanation. But even if I set aside the class/method
>> analogy: how would I organize my templates then? From what you wrote I
>> basically see that typically a template calls other templates within the
>> same group. So how can I reuse a template for instance across different
>> projects? Copy and paste it into the other project's template group
>> file? Merge this and the other project's group files?
>>
>> You are basically saying that all templates reside in a single group
>> with inheritance being a feature to be used mainly for retargeting, but
>> that's not practical for large scale projects. Other template engines
>> like XPAND (open architectureware), T4 from MS DSL Tools, MD Workbench
>> from Sodius, JET, ... *all* support splitting up your template project
>> into trees of template files that can call each into each other. This
>> way a template that knows how to serialize an attribute to something
>> like "int i" can be used for class attributes as well as for method
>> arguments, without the whole template zoo residing in a single group.
>>
>> Another example: if a want to create the three elements of an MVP style
>> application I will create at least three files, one for the business
>> object model, one for the view and one for the presenter. Would I create
>> three different template groups, one for each file? But how do those
>> groups then share common templates? By (single) inheritance? Or would I
>> have to put all templates into a single group? That's gonna be some 
>> file!
>>
>> Is it really true that ST assumes most of the templates for a given
>> project sit inside a single group?
>>
>> Mike
>>
>>
>>
>> Loring Craymer schrieb:
>>> Your understanding is flawed--template groups are not classes, nor are
>>> templates methods.  Treating them as such is likely to cause you
>>> grief.  Think rather that template groups are a convenience for
>>> argument checking against a template interface.  That way, changing
>>> template groups makes it possible to switch from, say, generating Java
>>> code to C# just by switching template groups.  Template groups are a
>>> mechanism for retargeting.  Switching individual template groups within
>>> an application while leaving others unchanged is not a common usage
>>> pattern.
>>>
>>> Instead of thinking of templates as methods, take a
>>> simpler view:  arguments fill "holes" in templates and the arguments
>>> should be thought of in "instantiated" form.  Thinking of arguments as
>>> dynamically invoked methods misses an important level of abstraction:
>>> argument evaluation is independent of template evaluation and is
>>> side-effect free.  [It is possible to implement side-effects as the
>>> result of evaluation through reflection, but the results are
>>> unpredictable.  Do not do this!]
>>>
>>> It is possible to invoke other
>>> templates in the same group from within a template, but you should see
>>> this as a macro invocation, and the facility as a convenience to allow
>>> factoring.  Almost always, the invoked template is local to the
>>> template group (not declared in the interface).  Such invocations tend
>>> to be uncommon.
>>>
>>> --Loring
>>>
>>>
>>>
>>>
>>> ----- Original Message ----
>>>
>>>> From: Mike Pagel <mike at mpagel.de>
>>>> To: antlr-interest at antlr.org
>>>> Sent: Saturday, December 20, 2008 7:45:01 AM
>>>> Subject: [antlr-interest] Organization of complex template structures
>>>>
>>>> Hi there,
>>>>
>>>> I am wondering how to best go about structuring complex sets of string
>>>> templates. As I understand the current mechanisms, a template group is
>>>> pretty much a class with its templates being the class methods. You 
>>>> can
>>>> build inheritance structures between groups and thereby overriding
>>>> templates (the methods) and call super group (class) templates.
>>>>
>>>> This allows to build up some structure in terms of reusing basic
>>>> templates and if required specialize certain pieces. But in the 
>>>> end, you
>>>> always call a template (method) that is part of or being inherited 
>>>> by a
>>>> specific leaf template group (class). Once the thread of control is
>>>> within a template group there is no means to call templates in other
>>>> groups, except for the groups which belong to inheritance line of the
>>>> leaf group (if I'm not missing anything).
>>>>
>>>> So far I find this limiting, e.g. if my model describes (Java) classes
>>>> and I want to generate the class code. Then my leaf template group may
>>>> be a "class.stg" with all kinds of templates like "generateMethods()"
>>>> and "generateAttributes()". The implementation of those template now
>>>> should invoke templates from a group "Methods.stg" and another group
>>>> "Attributes.stg". (This example may not be pressing the issue but it's
>>>> easy to follow.)
>>>>
>>>> Now I cannot derive "Class.stg" from both other groups, nor can I
>>>> somehow call into these groups (like calling static members 
>>>> functions of
>>>> another class in code). What would be a good way to express this with
>>>> the current mechanisms or is there actually a limitation?
>>>>
>>>> Thanks a lot,
>>>> Mike
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sun Dec 21 14:45:25 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 21 Dec 2008 14:45:25 -0800
Subject: [antlr-interest] antlr.org, stringtemplate.org
Message-ID: <60FC4377-4483-47B2-B26C-01164A809A73@cs.usfca.edu>

Should be back to normal now. Let me know if you have trouble.
Ter

From lgcraymer at yahoo.com  Sun Dec 21 22:16:16 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Sun, 21 Dec 2008 22:16:16 -0800 (PST)
Subject: [antlr-interest] Organization of complex template structures
References: <494D12FD.6050008@mpagel.de>
	<955291.46031.qm@web55904.mail.re3.yahoo.com>
	<494E14CD.2040904@mpagel.de>
Message-ID: <750309.7904.qm@web55904.mail.re3.yahoo.com>

Mike--

The key points that drive template organization are probably
1.)  group templates that would be swapped out as a group for retargeting.
2.)  group templates whose evaluation is driven by common control variables used in conditionals.  (for example, templates containing "<if(backtracking)> ... <endif>" should usually be grouped)
3.)  Template evaluation has (or should have) no side effects.  It is perfectly feasible to use multiple StringTemplateGroups in constructing a template instance to be evaluated (containing template instance from one group, arguments from others).
4.)  A StringTemplateGroup can load multiple template groups, so any large group can be split up into several smaller groups and all can be loaded into a single StringTemplateGroup.  [I have not had reason to do this; it seems more common to override some templates in one group with another.]

Having an include mechanism for templates would make sense if StringTemplate were an application rather than a library; Ter designed StringTemplate to work inside a Java controller program, so inclusion capability is folded into the StringTemplateGroupLoader rather than the template language.

As to your examples:  tree structuring would make sense if templates were tightly coupled, but they rarely are; multiple template groups are handled through the Java (or other target) StringTemplateGroup, and that gives considerable flexibility.

--Loring




----- Original Message ----
> From: Mike Pagel <mike at mpagel.de>
> To: antlr-interest at antlr.org
> Sent: Sunday, December 21, 2008 2:05:01 AM
> Subject: Re: [antlr-interest] Organization of complex template structures
> 
> Thanks for your explanation. But even if I set aside the class/method 
> analogy: how would I organize my templates then? From what you wrote I 
> basically see that typically a template calls other templates within the 
> same group. So how can I reuse a template for instance across different 
> projects? Copy and paste it into the other project's template group 
> file? Merge this and the other project's group files?
> 
> You are basically saying that all templates reside in a single group 
> with inheritance being a feature to be used mainly for retargeting, but 
> that's not practical for large scale projects. Other template engines 
> like XPAND (open architectureware), T4 from MS DSL Tools, MD Workbench 
> from Sodius, JET, ... *all* support splitting up your template project 
> into trees of template files that can call each into each other. This 
> way a template that knows how to serialize an attribute to something 
> like "int i" can be used for class attributes as well as for method 
> arguments, without the whole template zoo residing in a single group.
> 
> Another example: if a want to create the three elements of an MVP style 
> application I will create at least three files, one for the business 
> object model, one for the view and one for the presenter. Would I create 
> three different template groups, one for each file? But how do those 
> groups then share common templates? By (single) inheritance? Or would I 
> have to put all templates into a single group? That's gonna be some file!
> 
> Is it really true that ST assumes most of the templates for a given 
> project sit inside a single group?
> 
> Mike
> 
> 
> 
> Loring Craymer schrieb:
> > Your understanding is flawed--template groups are not classes, nor are
> > templates methods.  Treating them as such is likely to cause you
> > grief.  Think rather that template groups are a convenience for
> > argument checking against a template interface.  That way, changing
> > template groups makes it possible to switch from, say, generating Java
> > code to C# just by switching template groups.  Template groups are a
> > mechanism for retargeting.  Switching individual template groups within
> > an application while leaving others unchanged is not a common usage
> > pattern.
> >
> > Instead of thinking of templates as methods, take a
> > simpler view:  arguments fill "holes" in templates and the arguments
> > should be thought of in "instantiated" form.  Thinking of arguments as
> > dynamically invoked methods misses an important level of abstraction: 
> > argument evaluation is independent of template evaluation and is
> > side-effect free.  [It is possible to implement side-effects as the
> > result of evaluation through reflection, but the results are
> > unpredictable.  Do not do this!]
> >
> > It is possible to invoke other
> > templates in the same group from within a template, but you should see
> > this as a macro invocation, and the facility as a convenience to allow
> > factoring.  Almost always, the invoked template is local to the
> > template group (not declared in the interface).  Such invocations tend
> > to be uncommon.
> >
> > --Loring
> >
> >
> >
> >
> > ----- Original Message ----
> >  
> >> From: Mike Pagel 
> >> To: antlr-interest at antlr.org
> >> Sent: Saturday, December 20, 2008 7:45:01 AM
> >> Subject: [antlr-interest] Organization of complex template structures
> >>
> >> Hi there,
> >>
> >> I am wondering how to best go about structuring complex sets of string 
> >> templates. As I understand the current mechanisms, a template group is 
> >> pretty much a class with its templates being the class methods. You can 
> >> build inheritance structures between groups and thereby overriding 
> >> templates (the methods) and call super group (class) templates.
> >>
> >> This allows to build up some structure in terms of reusing basic 
> >> templates and if required specialize certain pieces. But in the end, you 
> >> always call a template (method) that is part of or being inherited by a 
> >> specific leaf template group (class). Once the thread of control is 
> >> within a template group there is no means to call templates in other 
> >> groups, except for the groups which belong to inheritance line of the 
> >> leaf group (if I'm not missing anything).
> >>
> >> So far I find this limiting, e.g. if my model describes (Java) classes 
> >> and I want to generate the class code. Then my leaf template group may 
> >> be a "class.stg" with all kinds of templates like "generateMethods()" 
> >> and "generateAttributes()". The implementation of those template now 
> >> should invoke templates from a group "Methods.stg" and another group 
> >> "Attributes.stg". (This example may not be pressing the issue but it's 
> >> easy to follow.)
> >>
> >> Now I cannot derive "Class.stg" from both other groups, nor can I 
> >> somehow call into these groups (like calling static members functions of 
> >> another class in code). What would be a good way to express this with 
> >> the current mechanisms or is there actually a limitation?
> >>
> >> Thanks a lot,
> >> Mike
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: 
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>    
> >
> >
> >
> >      
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >  
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From mike at mpagel.de  Sun Dec 21 23:48:05 2008
From: mike at mpagel.de (Mike Pagel)
Date: Mon, 22 Dec 2008 08:48:05 +0100
Subject: [antlr-interest] Organization of complex template structures
In-Reply-To: <750309.7904.qm@web55904.mail.re3.yahoo.com>
References: <494D12FD.6050008@mpagel.de>
	<955291.46031.qm@web55904.mail.re3.yahoo.com>
	<494E14CD.2040904@mpagel.de>
	<750309.7904.qm@web55904.mail.re3.yahoo.com>
Message-ID: <494F4635.4030905@mpagel.de>

Hey Loring,

maybe I missed a feature of ST so far. You said:

> 4.)  A StringTemplateGroup can load multiple template groups, so any large group can be split up into several smaller groups and all can be loaded into a single StringTemplateGroup.  [I have not had reason to do this; it seems more common to override some templates in one group with another.]
>   
I thought you'd have to load a *single* group file into a 
StringTemplateGroup and the only way to combine it with other groups is 
through static (in the group file) or dynamic (through the loader) 
inheritance. How do you load let's say three template groups "a.stg", 
"b.stg" and "c.stg" and can they then call into each other?

Your phrasing ("large group can be split up into smaller groups") could 
imply hierarchical groups containing groups containing templates, but 
this is not possible, right?

I am sorry if I actually missed those parts of the docs, any links or 
samples are appreciated.


Thanks,
Mike

From lgcraymer at yahoo.com  Mon Dec 22 00:52:19 2008
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 22 Dec 2008 00:52:19 -0800 (PST)
Subject: [antlr-interest] Organization of complex template structures
References: <494D12FD.6050008@mpagel.de>
	<955291.46031.qm@web55904.mail.re3.yahoo.com>
	<494E14CD.2040904@mpagel.de>
	<750309.7904.qm@web55904.mail.re3.yahoo.com>
	<494F4635.4030905@mpagel.de>
Message-ID: <322573.1618.qm@web55906.mail.re3.yahoo.com>

Mike--

StringTemplateGroupLoader.loadGroup(String name, StringTemplateGroup base) returns a StringTemplateGroup that has the "name" template group loaded on top of (can override) base.  The readily available example is in org.antlr.codegen.CodeGenerator.loadTemplates().

Templates can only invoke templates from within the same group--the lookup mechanism enforces this--but this should be rare.  The normal approach is to use template instances as arguments, so that template instances are constructed hierarchically.  Templates are abstracted from their arguments, but not from any called templates.  The antlr source is fairly good about following this principle.

When I wrote about splitting groups, I meant that Group A can be sliced into Group B, C, and  D; if A fully satisfies interface I, then B, C and D each satisfy a part of I but jointly satisfy all of I.  Templates within groups are loosely coupled, so the dividing points would usually be arbitrarily chosen.

--Loring



----- Original Message ----
> From: Mike Pagel <mike at mpagel.de>
> To: antlr-interest at antlr.org
> Sent: Sunday, December 21, 2008 11:48:05 PM
> Subject: Re: [antlr-interest] Organization of complex template structures
> 
> Hey Loring,
> 
> maybe I missed a feature of ST so far. You said:
> 
> > 4.)  A StringTemplateGroup can load multiple template groups, so any large 
> group can be split up into several smaller groups and all can be loaded into a 
> single StringTemplateGroup.  [I have not had reason to do this; it seems more 
> common to override some templates in one group with another.]
> >  
> I thought you'd have to load a *single* group file into a 
> StringTemplateGroup and the only way to combine it with other groups is 
> through static (in the group file) or dynamic (through the loader) 
> inheritance. How do you load let's say three template groups "a.stg", 
> "b.stg" and "c.stg" and can they then call into each other?
> 
> Your phrasing ("large group can be split up into smaller groups") could 
> imply hierarchical groups containing groups containing templates, but 
> this is not possible, right?
> 
> I am sorry if I actually missed those parts of the docs, any links or 
> samples are appreciated.
> 
> 
> Thanks,
> Mike
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



      

From asaake at hotmail.de  Mon Dec 22 01:54:20 2008
From: asaake at hotmail.de (A. Saake)
Date: Mon, 22 Dec 2008 10:54:20 +0100
Subject: [antlr-interest] Progressive Slowdown in Parsing
Message-ID: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>

Hi,

I'm new to ANTLR, but with support of the "The Definitive Reference ...", the great tool ANTRLWorks and much optimism I got all problems solved, so far. 
ANTLR is a very impressive tool and probably will help me to migrate legacy 4GL code to C#, as I hope.

But now I'm facing a problem, where help would be very appreciated !

I'm converting a 4GL "local function" with 3500 lines of code, mainly constisting of assignments (SET ... TO ...), simple IF's and embedded SQL Selects. This means, there are many flat, not deep statements.

The first 2000 lines can be processed in under 1 min. If I parse the whole script, time increases to 15 minutes. For a correct migration of this script (it's an include file), I would have to embed it into another 3500 lines code script, and I'm afraid that it will need a very long time. Because of the variable system of the 4GL (declaration of variables is not necessary, so there's no scope, I have to estimate it from context), I will have to run it many times.

To find out, if the slowdown is from my grammar, I tried lot's of syntactic predicates and so on, until I used a profiler, which names GetKindOfOps as responsible for nearly 80% of the runtime. 

My grammar is a combined lexer and parser, output is template and I use the token rewrite mechanism.

Can you give me a hint, what I can do for more speed? 
Would building an output tree and then generating templates be faster?

Many thanks in advance !

Andreas 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/160861e6/attachment.html 

From JALuber at gmx.de  Mon Dec 22 02:11:31 2008
From: JALuber at gmx.de (Johannes Luber)
Date: Mon, 22 Dec 2008 11:11:31 +0100
Subject: [antlr-interest] Progressive Slowdown in Parsing
In-Reply-To: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
Message-ID: <20081222101131.47020@gmx.net>

> Hi,
> 
> I'm new to ANTLR, but with support of the "The Definitive Reference ...",
> the great tool ANTRLWorks and much optimism I got all problems solved, so
> far. 
> ANTLR is a very impressive tool and probably will help me to migrate
> legacy 4GL code to C#, as I hope.
> 
> But now I'm facing a problem, where help would be very appreciated !
> 
> I'm converting a 4GL "local function" with 3500 lines of code, mainly
> constisting of assignments (SET ... TO ...), simple IF's and embedded SQL
> Selects. This means, there are many flat, not deep statements.
> 
> The first 2000 lines can be processed in under 1 min. If I parse the whole
> script, time increases to 15 minutes.

This sounds, if the the runtime of your program is O(n^2).

> For a correct migration of this
> script (it's an include file), I would have to embed it into another 3500 lines
> code script, and I'm afraid that it will need a very long time. Because of
> the variable system of the 4GL (declaration of variables is not necessary,
> so there's no scope, I have to estimate it from context), I will have to
> run it many times.
> 
> To find out, if the slowdown is from my grammar, I tried lot's of
> syntactic predicates and so on, until I used a profiler, which names GetKindOfOps
> as responsible for nearly 80% of the runtime. 
> 
> My grammar is a combined lexer and parser, output is template and I use
> the token rewrite mechanism.
> 
> Can you give me a hint, what I can do for more speed? 
> Would building an output tree and then generating templates be faster?

The question is if you can cache the results of GetKindOfOps(). If yes then using an output tree with a symbol table seems to be a good choice. But as 4GL is probably very different from C#, the use of TokenRewriteStream is a bad choice. After all, TokenRewriteStream is meant only for small surgical changes on the input and not for complete translations. Changing the grammar to TokenStream could mean a speedup alone.

Johannes
> 
> Many thanks in advance !
> 
> Andreas 

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From antlr at mirality.co.nz  Mon Dec 22 02:21:44 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 22 Dec 2008 23:21:44 +1300
Subject: [antlr-interest] Progressive Slowdown in Parsing
In-Reply-To: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
Message-ID: <20081222102153.DBA163418447@www.antlr.org>

At 22:54 22/12/2008, A. Saake wrote:
>The first 2000 lines can be processed in under 1 min. If I parse 
>the whole script, time increases to 15 minutes. For a correct 
>migration of this script (it's an include file), I would have to 
>embed it into another 3500 lines code script, and I'm afraid that 
>it will need a very long time. Because of the variable system of 
>the 4GL (declaration of variables is not necessary, so there's no 
>scope, I have to estimate it from context), I will have to run it 
>many times.
>
>To find out, if the slowdown is from my grammar, I tried lot's of 
>syntactic predicates and so on, until I used a profiler, which 
>names GetKindOfOps as responsible for nearly 80% of the runtime.
>
>My grammar is a combined lexer and parser, output is template and 
>I use the token rewrite mechanism.

Do you use backtracking at all, or large syntactic 
predicates?  Either will reduce the parsing speed of a grammar.

Additionally, the smaller your tokens are the more work the parser 
is typically required to do (so single-character tokens are 
generally a bad idea).

It's hard to be more specific without seeing your grammar, though.


From asaake at hotmail.de  Mon Dec 22 02:44:10 2008
From: asaake at hotmail.de (A. Saake)
Date: Mon, 22 Dec 2008 11:44:10 +0100
Subject: [antlr-interest] Progressive Slowdown in Parsing
In-Reply-To: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
	<20081222101131.47020@gmx.net>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
	<20081222101131.47020@gmx.net>
Message-ID: <COL101-DS4D41D3D4904BF3A1C313AB3EF0@phx.gbl>

Thanks for the suggestions.

Can you please give me a hint, what GetKindOfOps is responsible for? My 
impression is, that (not scientific spoken) "all ealier rewrites are visited 
again". Is that possible?

My first attempt was to generate an AST and then process it with a tree 
grammar.

But the more my grammar growed, the more difficult it was to maintain the 
tree grammar. And so I concentrated on a single grammar with embedded 
templates, supported by some external tables and functions.

But if an AST output is the solution, I will try it again.

The 4GL itself is not very far away from C#, as the sample below may show. 
Here is a sample of the 4GL code:

        LOCAL VOID FUNCTION set_envment()

        LOCAL $durchl,	$konf_wert,	$konf_kz1, $baudb_cmd, $kasto,
	$aktionsstr, $aktionskunden, $pos,
	$prov_regel, $prov_grp, $prov_bereich, $prov_regzusatz
        BEGIN

	 /*-------Basisw{hrung und Euro-W"hrungs-K?rzel und Euro-W"hrungs-Kurs*/
	SET $str_basis, $basis_kz_z, $basis_kz2_z TO
		SELECT konf_wert, konf_kz1, konf_kz2
		FROM kon
		WHERE konf_feld = 'Basiswaehrung'
		  AND konf_zen = $zent_id_z;

	IF $str_basis IS UNDEFINED AND $zent_id_z > 1 THEN
		SET $str_basis, $basis_kz_z, $basis_kz2_z TO
			SELECT konf_wert, konf_kz1, konf_kz2
			FROM kon
			WHERE konf_feld = 'Basiswaehrung'
			  AND konf_zen = 1;

	IF $str_basis IS UNDEFINED OR strlen$($str_basis) = 0 THEN
		SET $str_basis TO 'DM;EUR;DM'

                ... and so on

 and that is my C# result so far:

	  	private void set_envment() {
	  	  /* LOCAL $durchl,	$konf_wert,	$konf_kz1, $baudb_cmd, $kasto,
	  	  	$aktionsstr, $aktionskunden, $pos,
	  	  	$prov_regel, $prov_grp, $prov_bereich, $prov_regzusatz */

 	  	      using (UnitradeContext ctx = new UnitradeContext()) {
 	  	              ctx.ObjectTrackingEnabled = false;

 	  	              var q = (from c in ctx.KON
 	  	                            where (c.KONF_FELD == "Basiswaehrung" && 
c.KONF_ZEN == MainForm.zent_id_z)
  		                             select c).First();

 	  	              if (q != null) {
 	  	                str_basis = q.KONF_WERT;
 	  	                MainForm.basis_kz_z = q.KONF_KZ1;
 	  	                MainForm.basis_kz2_z = q.KONF_KZ2;
 	  	              }
 	  	          }

 	  	          if (str_basis == null && MainForm.zent_id_z > 1) {
  		            using (UnitradeContext ctx = new UnitradeContext()) {
 	  	  	ctx.ObjectTrackingEnabled = false;

 	  	  	var q = (from c in ctx.KON
 	  	  	              where (c.KONF_FELD == "Basiswaehrung" && c.KONF_ZEN == 
1)
  		                              select c).First();

 	  	                if (q != null) {
 	  	  	   str_basis = q.KONF_WERT;
 	  	  	   MainForm.basis_kz_z = q.KONF_KZ1;
 	  	  	   MainForm.basis_kz2_z = q.KONF_KZ2;
  		               }
 	  	           }
 	  	      }

		     if (str_basis == null || Sysfunc.Strlen(str_basis) == 0) {
 	  	        str_basis = "DM;EUR;DM";
 	  	    }

Thanks for your help!

Andreas

--------------------------------------------------
From: "Johannes Luber" <JALuber at gmx.de>
Sent: Monday, December 22, 2008 11:11 AM
To: "A. Saake" <asaake at hotmail.de>; <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Progressive Slowdown in Parsing

>> Hi,
>>
>> I'm new to ANTLR, but with support of the "The Definitive Reference ...",
>> the great tool ANTRLWorks and much optimism I got all problems solved, so
>> far.
>> ANTLR is a very impressive tool and probably will help me to migrate
>> legacy 4GL code to C#, as I hope.
>>
>> But now I'm facing a problem, where help would be very appreciated !
>>
>> I'm converting a 4GL "local function" with 3500 lines of code, mainly
>> constisting of assignments (SET ... TO ...), simple IF's and embedded SQL
>> Selects. This means, there are many flat, not deep statements.
>>
>> The first 2000 lines can be processed in under 1 min. If I parse the 
>> whole
>> script, time increases to 15 minutes.
>
> This sounds, if the the runtime of your program is O(n^2).
>
>> For a correct migration of this
>> script (it's an include file), I would have to embed it into another 3500 
>> lines
>> code script, and I'm afraid that it will need a very long time. Because 
>> of
>> the variable system of the 4GL (declaration of variables is not 
>> necessary,
>> so there's no scope, I have to estimate it from context), I will have to
>> run it many times.
>>
>> To find out, if the slowdown is from my grammar, I tried lot's of
>> syntactic predicates and so on, until I used a profiler, which names 
>> GetKindOfOps
>> as responsible for nearly 80% of the runtime.
>>
>> My grammar is a combined lexer and parser, output is template and I use
>> the token rewrite mechanism.
>>
>> Can you give me a hint, what I can do for more speed?
>> Would building an output tree and then generating templates be faster?
>
> The question is if you can cache the results of GetKindOfOps(). If yes 
> then using an output tree with a symbol table seems to be a good choice. 
> But as 4GL is probably very different from C#, the use of 
> TokenRewriteStream is a bad choice. After all, TokenRewriteStream is meant 
> only for small surgical changes on the input and not for complete 
> translations. Changing the grammar to TokenStream could mean a speedup 
> alone.
>
> Johannes
>>
>> Many thanks in advance !
>>
>> Andreas
>
> -- 
> Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: 
> http://www.gmx.net/de/go/multimessenger
> 

From asaake at hotmail.de  Mon Dec 22 02:54:45 2008
From: asaake at hotmail.de (A. Saake)
Date: Mon, 22 Dec 2008 11:54:45 +0100
Subject: [antlr-interest] Progressive Slowdown in Parsing
In-Reply-To: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
	<BAY0-MC5-F4BN0SWnCH0036a2cd@bay0-mc5-f4.bay0.hotmail.com>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
	<BAY0-MC5-F4BN0SWnCH0036a2cd@bay0-mc5-f4.bay0.hotmail.com>
Message-ID: <COL101-DS1716B5249AEDA1534A96E1B3EF0@phx.gbl>

Yes,  I have the option backtracking turned on on the grammar level.

My test with syntactic predicates based on tokens like below, so they were 
not very complicated, but they resulted in no performance gain.

Here is the start of my grammar:

grammar VisionForm;

options {
    	language=CSharp2;
	backtrack=true;
//	memoize=true;
	rewrite=true;
	output=template;
}

tokens {
	ACCEPT			=	'ACCEPT';
	ACTION			=	'ACTION';
	ADD			=	'ADD';
	AFTER			= 	'AFTER';
	ALL			=	'ALL';
	AMOUNT		=	'AMOUNT';
	AND			=	'AND';
	ARE			=	'ARE';
	AS			=	'AS';
	ASC			=	'ASC';
	AUD_ACTION		=	'AUD_ACTION';
	AUD_ON_ENTRY		=	'AUD_ON_ENTRY';
	AUTO_COMMIT		=	'AUTO_COMMIT';
	AUTO_ZOOM		=	'AUTO_ZOOM';
	BACKGROUND		=	'BACKGROUND';
	BEFORE			=	'BEFORE';
	BEGIN			=	'BEGIN';
	BEGIN_SQL		=	'BEGIN_SQL';
	BETWEEN		=	'BETWEEN';
	BINARY			=	'BINARY';


The grammar itself is quite long (1800 lines), because it parses 4GL and 
(partially) SQL code.

I can post it, if it helps.

Thanks for your help !

Andreas

--------------------------------------------------
From: "Gavin Lambert" <antlr at mirality.co.nz>
Sent: Monday, December 22, 2008 11:21 AM
To: "A. Saake" <asaake at hotmail.de>; <antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Progressive Slowdown in Parsing

> At 22:54 22/12/2008, A. Saake wrote:
>>The first 2000 lines can be processed in under 1 min. If I parse the whole 
>>script, time increases to 15 minutes. For a correct migration of this 
>>script (it's an include file), I would have to embed it into another 3500 
>>lines code script, and I'm afraid that it will need a very long time. 
>>Because of the variable system of the 4GL (declaration of variables is not 
>>necessary, so there's no scope, I have to estimate it from context), I 
>>will have to run it many times.
>>
>>To find out, if the slowdown is from my grammar, I tried lot's of 
>>syntactic predicates and so on, until I used a profiler, which names 
>>GetKindOfOps as responsible for nearly 80% of the runtime.
>>
>>My grammar is a combined lexer and parser, output is template and I use 
>>the token rewrite mechanism.
>
> Do you use backtracking at all, or large syntactic predicates?  Either 
> will reduce the parsing speed of a grammar.
>
> Additionally, the smaller your tokens are the more work the parser is 
> typically required to do (so single-character tokens are generally a bad 
> idea).
>
> It's hard to be more specific without seeing your grammar, though.
>
> 

From fabio at simula.com.br  Mon Dec 22 03:36:45 2008
From: fabio at simula.com.br (Fabio Braga de Oliveira)
Date: Mon, 22 Dec 2008 09:36:45 -0200
Subject: [antlr-interest] Some site grammars are inaccessible!
Message-ID: <1229945805.10256.10.camel@localhost>

Hi list, Terr!

I was using some grammar examples while learning the ANTLR, but some of
them are inaccessible now. In the url http://www.antlr.org/grammar/list
the grammars "MS SQL Select Statement", "DmlSQL2" and "SqlSQL2".

Is there any reason for the removal?

Thanks always for the great job, you are awesome! 


-- 
Fabio Braga de Oliveira
Gerente de Projetos de Software
Work:   +55 19 3295-2111
Mobile: +55 19 9270-6574
E-mail: fabio at simula.com.br

S?mula Sistemas de Planejamento e Com?rcio Ltda.
Url:     http://www.simula.com.br
Address: Av. Jos? Bonif?cio, 2510
         Zipcode 13093-240
         Campinas - SP - Brazil




From JALuber at gmx.de  Mon Dec 22 05:17:52 2008
From: JALuber at gmx.de (Johannes Luber)
Date: Mon, 22 Dec 2008 14:17:52 +0100
Subject: [antlr-interest] Progressive Slowdown in Parsing
In-Reply-To: <COL101-DS1716B5249AEDA1534A96E1B3EF0@phx.gbl>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl>
	<BAY0-MC5-F4BN0SWnCH0036a2cd@bay0-mc5-f4.bay0.hotmail.com>
	<COL101-DS1716B5249AEDA1534A96E1B3EF0@phx.gbl>
Message-ID: <20081222131752.267490@gmx.net>

> Yes,  I have the option backtracking turned on on the grammar level.
> 
> My test with syntactic predicates based on tokens like below, so they were
> not very complicated, but they resulted in no performance gain.
> 
> Here is the start of my grammar:
> 
> grammar VisionForm;
> 
> options {
>     	language=CSharp2;
> 	backtrack=true;
> //	memoize=true;
> 	rewrite=true;
> 	output=template;
> }

There's already one problem - memoize is turned off. Without it, backtracking is far slower than it has to be, as memoizing is nothing but caching of earlier results. Of course, the trade-off is higher memory consumption, but I doubt that it will be a real problem. Possibly <http://antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar> helps. 

Regarding your question in your other email what GetKindOfOps does: I've never used TokenRewriteStream, so I've never looked into that method. But considering your translation example I take it that 4GL requires a full tree. If you have problems with your AST, you may need several passes. The first pass to create a rudimentary AST and collect required information, a second pass to make new AST ith using the collected information, then use templates for output. Possibly more than one transformation pass is required. Doing things in passes simplifies the design in general.

Johannes
> 
> tokens {
> 	ACCEPT			=	'ACCEPT';
> 	ACTION			=	'ACTION';
> 	ADD			=	'ADD';
> 	AFTER			= 	'AFTER';
> 	ALL			=	'ALL';
> 	AMOUNT		=	'AMOUNT';
> 	AND			=	'AND';
> 	ARE			=	'ARE';
> 	AS			=	'AS';
> 	ASC			=	'ASC';
> 	AUD_ACTION		=	'AUD_ACTION';
> 	AUD_ON_ENTRY		=	'AUD_ON_ENTRY';
> 	AUTO_COMMIT		=	'AUTO_COMMIT';
> 	AUTO_ZOOM		=	'AUTO_ZOOM';
> 	BACKGROUND		=	'BACKGROUND';
> 	BEFORE			=	'BEFORE';
> 	BEGIN			=	'BEGIN';
> 	BEGIN_SQL		=	'BEGIN_SQL';
> 	BETWEEN		=	'BETWEEN';
> 	BINARY			=	'BINARY';
> 
> 
> The grammar itself is quite long (1800 lines), because it parses 4GL and 
> (partially) SQL code.
> 
> I can post it, if it helps.
> 
> Thanks for your help !
> 
> Andreas
> 
> --------------------------------------------------
> From: "Gavin Lambert" <antlr at mirality.co.nz>
> Sent: Monday, December 22, 2008 11:21 AM
> To: "A. Saake" <asaake at hotmail.de>; <antlr-interest at antlr.org>
> Subject: Re: [antlr-interest] Progressive Slowdown in Parsing
> 
> > At 22:54 22/12/2008, A. Saake wrote:
> >>The first 2000 lines can be processed in under 1 min. If I parse the
> whole 
> >>script, time increases to 15 minutes. For a correct migration of this 
> >>script (it's an include file), I would have to embed it into another
> 3500 
> >>lines code script, and I'm afraid that it will need a very long time. 
> >>Because of the variable system of the 4GL (declaration of variables is
> not 
> >>necessary, so there's no scope, I have to estimate it from context), I 
> >>will have to run it many times.
> >>
> >>To find out, if the slowdown is from my grammar, I tried lot's of 
> >>syntactic predicates and so on, until I used a profiler, which names 
> >>GetKindOfOps as responsible for nearly 80% of the runtime.
> >>
> >>My grammar is a combined lexer and parser, output is template and I use 
> >>the token rewrite mechanism.
> >
> > Do you use backtracking at all, or large syntactic predicates?  Either 
> > will reduce the parsing speed of a grammar.
> >
> > Additionally, the smaller your tokens are the more work the parser is 
> > typically required to do (so single-character tokens are generally a bad
> > idea).
> >
> > It's hard to be more specific without seeing your grammar, though.
> >
> > 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From thn-d at gmx.de  Mon Dec 22 06:57:16 2008
From: thn-d at gmx.de (Thomas N.)
Date: Mon, 22 Dec 2008 15:57:16 +0100
Subject: [antlr-interest] parsing binary files
Message-ID: <20081222145716.305560@gmx.net>

Hi,

I'm updating the Classfile.g grammar to Antlr 3.1.1 and run into some time consuming difficulties. It seems that Antlr3 is not designed to develop byte parsers, but I thing in case of Java class files it makes sense. (I'm from the ArgoUML project btw, and we're using Antlr for a long time in our classfile import module.)

Can you help me and give feedback on the following two approaches?

The first attempt is to let the Lexer read a stream on bytes. I miserably failed doing so because a Lexer always deals with CharTokens, which is a huge obstacle. Also, all provided XXXStream classes are based on chars. Can I abandon using a lexer, or is this still the way to go? How?

The second approach is: don't use a lexer at all (why having a lexer for a byte stream anyway?). I made a ByteTokenStream and fed the parser with it, and my grammar has no lexer rule at all. Then I run into the problem of dealing with literals, so I created a list of 256 tokens X00..XFF (!) and utilized tha fact that there is a direct mapping from the token type to the byte value (one constant offset). It works, but is this fine?

If you want to see some code, I can attach some working stuff (approach 2).

Thanks in advance,
Thomas Neustupny
-- 
Psssst! Schon vom neuen GMX MultiMessenger geh?rt? Der kann`s mit allen: http://www.gmx.net/de/go/multimessenger

From thn-d at gmx.de  Mon Dec 22 07:11:21 2008
From: thn-d at gmx.de (Thomas N.)
Date: Mon, 22 Dec 2008 16:11:21 +0100
Subject: [antlr-interest] AST migration question
Message-ID: <20081222151121.305530@gmx.net>

Hi,

I'm migrating AST building/parsing from an Antlr 2 grammar to Antlr 3.1.1, but the documentation on this is not too verbose (I've read them many times). I must admit that I'm not an AST expert and avoided them wherever I could, so maybe my question is not that keen...

Here is an Antlr2 example:

version_number!
{ short minor=0,major=0; String verStr=null; }
    : minor=u2 major=u2 { verStr = ""+major+"."+minor; #version_number = #[VERSION,verStr]; }
    ;

So, how is this done in Antlr 3.1.1?

Thomas Neustupny
-- 
Sensationsangebot verl?ngert: GMX FreeDSL - Telefonanschluss + DSL 
f?r nur 16,37 Euro/mtl.!* http://dsl.gmx.de/?ac=OM.AD.PD003K1308T4569a

From cowang at comcast.net  Mon Dec 22 09:52:01 2008
From: cowang at comcast.net (George S. Cowan)
Date: Mon, 22 Dec 2008 12:52:01 -0500
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
	defined in Lexer
Message-ID: <ED9BED2848094F64A0A2023A838C479A@gsce0ae1cfad8d>

Using ANTLR 3.1.1 on Windows XP, I was unable to split Yang Jiang's java.g
(http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g) into
separate parser and lexer grammars for a composite grammar. The following
grammar distilled from that one works, but not if the PUBLIC rule is
uncommented. The file Debug_DebugLex.java is not generated; however, there
is no warning or error message.
 
The pattern seems to be that the grammar fails when all the tokens used in
the parse grammar have a lex grammar rule defined for them. 
 
------------ begin Debug.g -----------
 grammar Debug;
 
options { 
          backtrack=true;
          memoize=true;
        }
 
import DebugParse
     , DebugLex
     ;
 
interfaceHeader 
    :   modifiers 'interface' IDENTIFIER
    ;

------------- end Debug.g ------------
 
------------ begin DebugLex.g -----------
lexer grammar DebugLex;
       
INTERFACE
    :   'interface'
    ;
 
// PUBLIC
//     :   'public'
//     ;
 
              
IDENTIFIER
    :   IdentifierStart IdentifierPart*
    ;

fragment
IdentifierStart
    :   'a'..'z' | 'A'..'Z'
    ;                
                       
fragment 
IdentifierPart
    :   'a'..'z' | 'A'..'Z' | '0'..'9'
    ;
 
WS  
    :   (
             ' '
        |    '\r'
        |    '\t'
        |    '\u000C'
        |    '\n'
        ) 
            {
                skip();
            }          
    ;

------------- end DebugLex.g ------------
 
------------ begin DebugParse.g -----------
parser grammar DebugParse;
 
modifiers  
    :
    (   'public'
    )*
    ;
 
interfaceHeader 
    :   modifiers 'interface' IDENTIFIER
    ;

------------- end DebugParse.g ------------
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/2a7989a9/attachment.html 

From cowang at comcast.net  Mon Dec 22 11:03:01 2008
From: cowang at comcast.net (George S. Cowan)
Date: Mon, 22 Dec 2008 14:03:01 -0500
Subject: [antlr-interest] Broken links to antlr-interest from search
Message-ID: <50116978BA2B432DB4306D64CB066E86@gsce0ae1cfad8d>

When I search from the middle of the ANTLR home page, all the links to
antlr-interest have an extra "" in them, e.g.,
 
http://www.antlr.org/pipermail/antlr-interest/2008-October/031027.html
instead of
  http://www.antlr.org/pipermail/antlr-interest/2008-October/031027.html
 
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/8302b219/attachment.html 

From prabha_pady at comcast.net  Mon Dec 22 11:42:36 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 22 Dec 2008 14:42:36 -0500
Subject: [antlr-interest] antlr: beginner question...
Message-ID: <CAA248B59C354141BEA19B3B944C78A8@PADYLAPTOP>


Started using antlr this weekend...so please bear my lack of understanding 
( i did buy terence's book and am on page 70... )...

I wrote my first grammar...cut & paste from terence's java grammar...a 
subset just to handle if-else statements...

When I generate java from this ( using antlrworks also ), I get the 
following warnings which I dont understand - can somebody explain...

[14:29:59] warning(200): gwf.g:10:34: Decision can match input such as 
"'else'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
[14:30:00] warning(200): C:\projects\antlr\gwf\gwf.g:10:34: Decision can 
match input such as "'else'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input


what are the alternatives ? i cannot figure out how someone can get to 
'else' without going through just the 2nd alternative of "statement" rule 
below ? I have also attached the complete grammar ( not sure if this mailing 
list allows attachments... )



Grammar:


prog
 : statement+
 ;


statement
 :  statementExpression ';'
 | 'if' boolExpression statement (options {k=1;}:'else' statement)?
 | '{' statement* '}'
 ;

boolExpression
 : '(' expression ')'
 ;

statementExpression
 :  function '(' expressionList ')'
 |  Identifier('.' Identifier)* assignmentOperator expression
 ;

function
 : 'sendEmail'
 | 'loadData'
 | 'loadAllUsers'
 | 'loadUsersFromRole'
 ;

expressionList
    :   expression (',' expression)*
    ;

...
...


Thx

-- pady 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gwf.g
Type: application/octet-stream
Size: 4150 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/d233e32d/attachment.obj 

From parrt at cs.usfca.edu  Mon Dec 22 11:58:17 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Dec 2008 11:58:17 -0800
Subject: [antlr-interest] Organization of complex template structures
In-Reply-To: <494D12FD.6050008@mpagel.de>
References: <494D12FD.6050008@mpagel.de>
Message-ID: <3E6314E2-0F2E-4555-9673-680908369F91@cs.usfca.edu>


On Dec 20, 2008, at 7:45 AM, Mike Pagel wrote:

> Hi there,
>
> I am wondering how to best go about structuring complex sets of string
> templates. As I understand the current mechanisms, a template group is
> pretty much a class with its templates being the class methods. You  
> can
> build inheritance structures between groups and thereby overriding
> templates (the methods) and call super group (class) templates.

Contrary to some comments, that is exactly how i think of them.  
Polymorphism works etc...  template A in super invoking B (overridden  
in sub) invokes the sub.B

> This allows to build up some structure in terms of reusing basic
> templates and if required specialize certain pieces. But in the end,  
> you
> always call a template (method) that is part of or being inherited  
> by a
> specific leaf template group (class). Once the thread of control is
> within a template group there is no means to call templates in other
> groups, except for the groups which belong to inheritance line of the
> leaf group (if I'm not missing anything).

Correct.  No delegation model exists at this time, but multi- 
inheritance type thing can be done with a simple StringTemplateGroup  
multiplexor type thing.

> So far I find this limiting, e.g. if my model describes (Java) classes
> and I want to generate the class code. Then my leaf template group may
> be a "class.stg" with all kinds of templates like "generateMethods()"
> and "generateAttributes()". The implementation of those template now
> should invoke templates from a group "Methods.stg" and another group
> "Attributes.stg". (This example may not be pressing the issue but it's
> easy to follow.)

Usually generateAttributes  and similar will be grouped lgoically for  
one target. Why not put in a subclass.  You just override the abstract  
versions from class.stg.

> Now I cannot derive "Class.stg" from both other groups,

could invent a multiplexor ;)

> nor can I
> somehow call into these groups (like calling static members  
> functions of
> another class in code). What would be a good way to express this with
> the current mechanisms or is there actually a limitation?

Logically they belong together so might as well make them physically  
close (in same group file).

Ter


From parrt at cs.usfca.edu  Mon Dec 22 12:00:07 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Dec 2008 12:00:07 -0800
Subject: [antlr-interest] Some site grammars are inaccessible!
In-Reply-To: <1229945805.10256.10.camel@localhost>
References: <1229945805.10256.10.camel@localhost>
Message-ID: <BC5CC79A-F9BD-49CA-ADBD-E08FF605F26B@cs.usfca.edu>

bug in site. sorry...will try to fix...hang on.
T
On Dec 22, 2008, at 3:36 AM, Fabio Braga de Oliveira wrote:

> Hi list, Terr!
>
> I was using some grammar examples while learning the ANTLR, but some  
> of
> them are inaccessible now. In the url http://www.antlr.org/grammar/ 
> list
> the grammars "MS SQL Select Statement", "DmlSQL2" and "SqlSQL2".
>
> Is there any reason for the removal?
>
> Thanks always for the great job, you are awesome!
>
>
> -- 
> Fabio Braga de Oliveira
> Gerente de Projetos de Software
> Work:   +55 19 3295-2111
> Mobile: +55 19 9270-6574
> E-mail: fabio at simula.com.br
>
> S?mula Sistemas de Planejamento e Com?rcio Ltda.
> Url:     http://www.simula.com.br
> Address: Av. Jos? Bonif?cio, 2510
>         Zipcode 13093-240
>         Campinas - SP - Brazil
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Mon Dec 22 12:00:40 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Dec 2008 12:00:40 -0800
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
	defined in Lexer
In-Reply-To: <ED9BED2848094F64A0A2023A838C479A@gsce0ae1cfad8d>
References: <ED9BED2848094F64A0A2023A838C479A@gsce0ae1cfad8d>
Message-ID: <696BDFBE-91EF-452E-86DF-BE67472A33EE@cs.usfca.edu>

what error?
Ter

From parrt at cs.usfca.edu  Mon Dec 22 12:01:23 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Dec 2008 12:01:23 -0800
Subject: [antlr-interest] Broken links to antlr-interest from search
In-Reply-To: <50116978BA2B432DB4306D64CB066E86@gsce0ae1cfad8d>
References: <50116978BA2B432DB4306D64CB066E86@gsce0ae1cfad8d>
Message-ID: <F1CF7BB7-0AD2-4564-943E-E9A7ECBDFCA6@cs.usfca.edu>

crap. hmm...well, we have to wait for google to respider I think.
Ter
On Dec 22, 2008, at 11:03 AM, George S. Cowan wrote:

> When I search from the middle of the ANTLR home page, all the links  
> to antlr-interest have an extra "" in them, e.g.,
>   http://www.antlr.org/pipermail/antlr-interest/2008-October/031027.html 
>  instead of
>   http://www.antlr.org/pipermail/antlr-interest/2008-October/031027.html
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From indhubharathi at gmail.com  Mon Dec 22 12:08:19 2008
From: indhubharathi at gmail.com (indhu bharathi)
Date: Tue, 23 Dec 2008 01:38:19 +0530
Subject: [antlr-interest] Bringing hidden tokens into default channel
Message-ID: <54985e480812221208p60fa71b1t3facd58c51dbfa1c@mail.gmail.com>

Hi,
Suppose I'm having white spaces (WS) in the hidden channel right now. And
for a particular rule alone, I want white spaces also to be considered, is
it possible to bring WS to the default channel for that particular rule
alone?

Cheers, Indhu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081223/5f9d3de0/attachment.html 

From jbb at acm.org  Mon Dec 22 12:51:10 2008
From: jbb at acm.org (John B. Brodie)
Date: Mon, 22 Dec 2008 15:51:10 -0500
Subject: [antlr-interest] antlr: beginner question...
In-Reply-To: <CAA248B59C354141BEA19B3B944C78A8@PADYLAPTOP>
References: <CAA248B59C354141BEA19B3B944C78A8@PADYLAPTOP>
Message-ID: <200812221551.10449.jbb@acm.org>

> Started using antlr this weekend...so please bear my lack of understanding
> ( i did buy terence's book and am on page 70... )...
>
> I wrote my first grammar...cut & paste from terence's java grammar...a
> subset just to handle if-else statements...
>
> When I generate java from this ( using antlrworks also ), I get the
> following warnings which I dont understand - can somebody explain...
>
> [14:29:59] warning(200): gwf.g:10:34: Decision can match input such as
> "'else'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
> [14:30:00] warning(200): C:\projects\antlr\gwf\gwf.g:10:34: Decision can
> match input such as "'else'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>
>
> what are the alternatives ? i cannot figure out how someone can get to
> 'else' without going through just the 2nd alternative of "statement" rule
> below ? I have also attached the complete grammar ( not sure if this
> mailing list allows attachments... )
>

I think this is the classic ambiguity with an if-then-else statement.

Consider a sentence in your language of this form:

if P if Q S1 else S2

where P and Q are some valid boolExpression's and S1 and S2 are valid 
statment's.

Now, to which 'if' does the 'else' to belong?

Your grammar does not specify.

It could be that the "if P" has no else and therefore the else that is present 
belongs to the "if Q" or it could be that the "if Q" has no else and therefore 
the else belongs to the  "if P".

i believe that common practice holds the first interpretation, e.g. an else 
belongs to the last if seen. but your grammar does not specify this.

doesn't java require braces ({}) to surround the then-part and else-part? 
having some bracketing syntax resolves the ambiguity.

if P { if Q { S1 } } else { S2 }

or braxket via an ending keyword (e.g.  if bool s (else s)? fi)

if P if Q S1 fi else S2 fi

(in both of the above the else clearly belongs to the if P).

>
> Grammar:
>
>
> prog
> ?: statement+
> ?;
>
>
> statement
> ?: ?statementExpression ';'
> ?| 'if' boolExpression statement (options {k=1;}:'else' statement)?
> ?| '{' statement* '}'
> ?;
>
> boolExpression
> ?: '(' expression ')'
> ?;
>
> statementExpression
> ?: ?function '(' expressionList ')'
> ?| ?Identifier('.' Identifier)* assignmentOperator expression
> ?;
>
> function
> ?: 'sendEmail'
> ?| 'loadData'
> ?| 'loadAllUsers'
> ?| 'loadUsersFromRole'
> ?;
>
> expressionList
> ? ? : ? expression (',' expression)*
> ? ? ;
>
> ...
> ...

Hope this helps...
---
   -jbb


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/287fe6f8/attachment.html 

From prabha_pady at comcast.net  Mon Dec 22 13:42:16 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 22 Dec 2008 16:42:16 -0500
Subject: [antlr-interest] antlr: beginner question...
References: <CAA248B59C354141BEA19B3B944C78A8@PADYLAPTOP>
	<200812221551.10449.jbb@acm.org>
Message-ID: <027BC3BDC4E047C5AC059A1880111EAC@PADYLAPTOP>


Thx john for ur reply. I assumed I achieved it using the third alternative of the "statement" rule. But that is not enough clearly. Let me think more abt this. Thx for your clarification.

Thx

-- pady

  ----- Original Message ----- 
  From: John B. Brodie 
  To: antlr-interest at antlr.org 
  Sent: Monday, December 22, 2008 3:51 PM
  Subject: Re: [antlr-interest] antlr: beginner question...


  > Started using antlr this weekend...so please bear my lack of understanding

  > ( i did buy terence's book and am on page 70... )...

  >

  > I wrote my first grammar...cut & paste from terence's java grammar...a

  > subset just to handle if-else statements...

  >

  > When I generate java from this ( using antlrworks also ), I get the

  > following warnings which I dont understand - can somebody explain...

  >

  > [14:29:59] warning(200): gwf.g:10:34: Decision can match input such as

  > "'else'" using multiple alternatives: 1, 2

  > As a result, alternative(s) 2 were disabled for that input

  > [14:30:00] warning(200): C:\projects\antlr\gwf\gwf.g:10:34: Decision can

  > match input such as "'else'" using multiple alternatives: 1, 2

  > As a result, alternative(s) 2 were disabled for that input

  >

  >

  > what are the alternatives ? i cannot figure out how someone can get to

  > 'else' without going through just the 2nd alternative of "statement" rule

  > below ? I have also attached the complete grammar ( not sure if this

  > mailing list allows attachments... )

  >


  I think this is the classic ambiguity with an if-then-else statement.


  Consider a sentence in your language of this form:


  if P if Q S1 else S2


  where P and Q are some valid boolExpression's and S1 and S2 are valid statment's.


  Now, to which 'if' does the 'else' to belong?


  Your grammar does not specify.


  It could be that the "if P" has no else and therefore the else that is present belongs to the "if Q" or it could be that the "if Q" has no else and therefore the else belongs to the "if P".


  i believe that common practice holds the first interpretation, e.g. an else belongs to the last if seen. but your grammar does not specify this.


  doesn't java require braces ({}) to surround the then-part and else-part? having some bracketing syntax resolves the ambiguity.


  if P { if Q { S1 } } else { S2 }


  or braxket via an ending keyword (e.g. if bool s (else s)? fi)


  if P if Q S1 fi else S2 fi


  (in both of the above the else clearly belongs to the if P).


  >

  > Grammar:

  >

  >

  > prog

  >  : statement+

  >  ;

  >

  >

  > statement

  >  :  statementExpression ';'

  >  | 'if' boolExpression statement (options {k=1;}:'else' statement)?

  >  | '{' statement* '}'

  >  ;

  >

  > boolExpression

  >  : '(' expression ')'

  >  ;

  >

  > statementExpression

  >  :  function '(' expressionList ')'

  >  |  Identifier('.' Identifier)* assignmentOperator expression

  >  ;

  >

  > function

  >  : 'sendEmail'

  >  | 'loadData'

  >  | 'loadAllUsers'

  >  | 'loadUsersFromRole'

  >  ;

  >

  > expressionList

  >     :   expression (',' expression)*

  >     ;

  >

  > ...

  > ...


  Hope this helps...

  ---

  -jbb





------------------------------------------------------------------------------



  List: http://www.antlr.org/mailman/listinfo/antlr-interest
  Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/25b2b18e/attachment.html 

From prabha_pady at comcast.net  Mon Dec 22 14:25:09 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 22 Dec 2008 17:25:09 -0500
Subject: [antlr-interest] antlr: beginner question...
References: <CAA248B59C354141BEA19B3B944C78A8@PADYLAPTOP>
	<200812221551.10449.jbb@acm.org>
Message-ID: <98EED7F374C94AC28D32E187802C0E1F@PADYLAPTOP>


I changed to the below and it seems to be working...although this allows input like "{ { something } }"...


prog 
 : statement+
 ;     
     
statement
 :  statementExpression ';'
 | 'if' boolExpression ifStatementBlock (options {k=1;}:'else' statement)?
 | '{' statement* '}'
 ;
 
ifStatementBlock
 : statementExpression ';'
 | '{' statement '}'
 ;
  
boolExpression
 : '(' expression ')'
 ;
 


Thanks

-- pady


  ----- Original Message ----- 
  From: John B. Brodie 
  To: antlr-interest at antlr.org 
  Sent: Monday, December 22, 2008 3:51 PM
  Subject: Re: [antlr-interest] antlr: beginner question...


  > Started using antlr this weekend...so please bear my lack of understanding

  > ( i did buy terence's book and am on page 70... )...

  >

  > I wrote my first grammar...cut & paste from terence's java grammar...a

  > subset just to handle if-else statements...

  >

  > When I generate java from this ( using antlrworks also ), I get the

  > following warnings which I dont understand - can somebody explain...

  >

  > [14:29:59] warning(200): gwf.g:10:34: Decision can match input such as

  > "'else'" using multiple alternatives: 1, 2

  > As a result, alternative(s) 2 were disabled for that input

  > [14:30:00] warning(200): C:\projects\antlr\gwf\gwf.g:10:34: Decision can

  > match input such as "'else'" using multiple alternatives: 1, 2

  > As a result, alternative(s) 2 were disabled for that input

  >

  >

  > what are the alternatives ? i cannot figure out how someone can get to

  > 'else' without going through just the 2nd alternative of "statement" rule

  > below ? I have also attached the complete grammar ( not sure if this

  > mailing list allows attachments... )

  >


  I think this is the classic ambiguity with an if-then-else statement.


  Consider a sentence in your language of this form:


  if P if Q S1 else S2


  where P and Q are some valid boolExpression's and S1 and S2 are valid statment's.


  Now, to which 'if' does the 'else' to belong?


  Your grammar does not specify.


  It could be that the "if P" has no else and therefore the else that is present belongs to the "if Q" or it could be that the "if Q" has no else and therefore the else belongs to the "if P".


  i believe that common practice holds the first interpretation, e.g. an else belongs to the last if seen. but your grammar does not specify this.


  doesn't java require braces ({}) to surround the then-part and else-part? having some bracketing syntax resolves the ambiguity.


  if P { if Q { S1 } } else { S2 }


  or braxket via an ending keyword (e.g. if bool s (else s)? fi)


  if P if Q S1 fi else S2 fi


  (in both of the above the else clearly belongs to the if P).


  >

  > Grammar:

  >

  >

  > prog

  >  : statement+

  >  ;

  >

  >

  > statement

  >  :  statementExpression ';'

  >  | 'if' boolExpression statement (options {k=1;}:'else' statement)?

  >  | '{' statement* '}'

  >  ;

  >

  > boolExpression

  >  : '(' expression ')'

  >  ;

  >

  > statementExpression

  >  :  function '(' expressionList ')'

  >  |  Identifier('.' Identifier)* assignmentOperator expression

  >  ;

  >

  > function

  >  : 'sendEmail'

  >  | 'loadData'

  >  | 'loadAllUsers'

  >  | 'loadUsersFromRole'

  >  ;

  >

  > expressionList

  >     :   expression (',' expression)*

  >     ;

  >

  > ...

  > ...


  Hope this helps...

  ---

  -jbb





------------------------------------------------------------------------------



  List: http://www.antlr.org/mailman/listinfo/antlr-interest
  Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081222/e3f44a15/attachment.html 

From parrt at cs.usfca.edu  Mon Dec 22 16:32:01 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 22 Dec 2008 16:32:01 -0800
Subject: [antlr-interest] ok, sites should all be back to normal
Message-ID: <8948769B-5FEE-4B10-941C-965936E5242F@cs.usfca.edu>

major surgery done inside but should all be working properly now. :)  
sites, wiki, etc... should be ok. please let me know if not.

Ter

From cowang at comcast.net  Tue Dec 23 05:34:44 2008
From: cowang at comcast.net (George S. Cowan)
Date: Tue, 23 Dec 2008 08:34:44 -0500
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
	defined in Lexer
In-Reply-To: <696BDFBE-91EF-452E-86DF-BE67472A33EE@cs.usfca.edu>
Message-ID: <163739F116D848118D7A12FB46FB05C6@gsce0ae1cfad8d>

Ummm...

Terence, I'm not clear what you tried. I submitted working code that
contains the work-around, and in order to get the error you will need to
uncomment the PUBLIC rule before running. When I do that, the file
Debug_DebugLex.java is quietly not generated.

(Once I think about it, it does seem odd that I submitted working code in a
bug report.)

George


-----Ter's reply-----
Subject: Re: [antlr-interest] Bug report: Composite grammar with all tokens
defined in Lexer


what error?
Ter


---------- Original Message ---------------
Using ANTLR 3.1.1 on Windows XP, I was unable to split Yang Jiang's java.g
(http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g) into
separate parser and lexer grammars for a composite grammar. The following
grammar distilled from that one works, but not if the PUBLIC rule is
uncommented. The file Debug_DebugLex.java is not generated; however, there
is no warning or error message.
 
The pattern seems to be that the grammar fails when all the tokens used in
the parse grammar have a lex grammar rule defined for them. 
 
------------ begin Debug.g -----------
 grammar Debug;
 
options { 
          backtrack=true;
          memoize=true;
        }
 
import DebugParse
     , DebugLex
     ;
 
interfaceHeader 
    :   modifiers 'interface' IDENTIFIER
    ;

------------- end Debug.g ------------
 
------------ begin DebugLex.g -----------
lexer grammar DebugLex;
       
INTERFACE
    :   'interface'
    ;
 
// PUBLIC
//     :   'public'
//     ;
 
              
IDENTIFIER
    :   IdentifierStart IdentifierPart*
    ;

fragment
IdentifierStart
    :   'a'..'z' | 'A'..'Z'
    ;                
                       
fragment 
IdentifierPart
    :   'a'..'z' | 'A'..'Z' | '0'..'9'
    ;
 
WS  
    :   (
             ' '
        |    '\r'
        |    '\t'
        |    '\u000C'
        |    '\n'
        ) 
            {
                skip();
            }          
    ;

------------- end DebugLex.g ------------
 
------------ begin DebugParse.g -----------
parser grammar DebugParse;
 
modifiers  
    :
    (   'public'
    )*
    ;
 
interfaceHeader 
    :   modifiers 'interface' IDENTIFIER
    ;

------------- end DebugParse.g ------------
 
 


From Erik.Putrycz at nrc-cnrc.gc.ca  Tue Dec 23 10:15:36 2008
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Tue, 23 Dec 2008 13:15:36 -0500
Subject: [antlr-interest] bug with maven plugin and outputDirectory
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E90783203A@nrccenexb1.nrc.ca>

I have the following configuration in my maven file:

                                    <plugin>

 
<groupId>org.antlr</groupId>

 
<artifactId>antlr3-maven-plugin</artifactId>

                                                <version>3.1.1</version>

                                                <configuration>

 
<outputDirectory>${basedir}/src/main/java/nrc/cobol/antlr3</outputDirect
ory>

                                                </configuration>

                                    </plugin>

 

The outputDirectory directive is never working and all the generated
code ends in target/generated-sources/antlr

I tried to find the source code for the plugin and cannot find it
anywhere. This used to work with the mojo plugin.

 

Erik.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081223/0d985ba9/attachment.html 

From antlr at mirality.co.nz  Tue Dec 23 12:33:40 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 24 Dec 2008 09:33:40 +1300
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
 defined in Lexer
In-Reply-To: <ED9BED2848094F64A0A2023A838C479A@gsce0ae1cfad8d>
References: <ED9BED2848094F64A0A2023A838C479A@gsce0ae1cfad8d>
Message-ID: <20081223203351.3029D3418453@www.antlr.org>

At 06:52 23/12/2008, George S. Cowan wrote:
>Using ANTLR 3.1.1 on Windows XP, I was unable to split Yang 
>Jiang's java.g 
>(http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g) 
>into separate parser and lexer grammars for a composite grammar. 
>The following grammar distilled from that one works, but not if 
>the PUBLIC rule is uncommented. The file Debug_DebugLex.java is 
>not generated; however, there is no warning or error message.
[...]
>------------ begin DebugParse.g -----------
>parser grammar DebugParse;
>
>modifiers
>     :
>     (   'public'
>     )*
>     ;
>
>interfaceHeader
>     :   modifiers 'interface' IDENTIFIER
>     ;
>------------- end DebugParse.g ------------

It's illegal to use quoted strings in a parser-only grammar.  (And 
it ought to produce an error, but it doesn't at the 
moment.)  It'll most definitely produce an unparsable grammar if 
you do so when your lexer defines proper rules for these strings, 
as the token type produced by the lexer will be different than the 
token type the parser is using to match.

Also, if this were a standalone grammar then you'd need to use the 
tokenVocab option in the parser.  I'm not sure if this is 
necessary or not when you're importing it into another grammar, 
though.


From cowang at comcast.net  Tue Dec 23 14:39:41 2008
From: cowang at comcast.net (George S. Cowan)
Date: Tue, 23 Dec 2008 17:39:41 -0500
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
	defined in Lexer
Message-ID: <F78C9C6672494B8FA0ACA99FE3793BE8@gsce0ae1cfad8d>

Gavin Lambert said:
>It's illegal to use quoted strings in a parser-only grammar.

On p. 81 of the ANTLR Reference, in Figure 4.1, it says that a literal can
be used in any grammar. Is that the same thing that you mean by a "quoted
string"? I wonder, is there a difference here between ANTLR 2 and ANTLR 3?

Also, the error still happens when I substitute the token/rule-name for each
literal in the parser grammar. So I don't think this is the problem.

>It'll most definitely produce an unparsable grammar if 
>you do so when your lexer defines proper rules for these strings, 
>as the token type produced by the lexer will be different than the 
>token type the parser is using to match.

I've always felt uncomfortable about this, and I haven't seen a clear
statement on it in any documentation. But I still don't think we have the
problem nailed down here because the problem is with the generation of the
lexer code, not it's execution. Also, when I remove ONE lexer rule, the
lexer is generated and works on my tests. So, in that case, the lexer and
parser must be agreeing on the token types.

>Also, if this were a standalone grammar then you'd need to use the 
>tokenVocab option in the parser.  I'm not sure if this is 
>necessary or not when you're importing it into another grammar, 
>though.

Yes, but in http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars,
right before the last example, Terence says 'Parser grammars don't need to
explicitly import the lexer grammar they rely on, this is done only once in
the root composite grammar which "glues" its dependant grammars.'

I feel a little like I'm playing "Gotcha" here, Gavin, and I do want you to
know that I appreciate your taking the time to help me think through what's
going on.

George



-----Original Message-----
At 06:52 23/12/2008, George S. Cowan wrote:
>Using ANTLR 3.1.1 on Windows XP, I was unable to split Yang 
>Jiang's java.g 
>(http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g) 
>into separate parser and lexer grammars for a composite grammar. 
>The following grammar distilled from that one works, but not if 
>the PUBLIC rule is uncommented. The file Debug_DebugLex.java is 
>not generated; however, there is no warning or error message.
[...]
>------------ begin DebugParse.g -----------
>parser grammar DebugParse;
>
>modifiers
>     :
>     (   'public'
>     )*
>     ;
>
>interfaceHeader
>     :   modifiers 'interface' IDENTIFIER
>     ;
>------------- end DebugParse.g ------------

It's illegal to use quoted strings in a parser-only grammar.  (And 
it ought to produce an error, but it doesn't at the 
moment.)  It'll most definitely produce an unparsable grammar if 
you do so when your lexer defines proper rules for these strings, 
as the token type produced by the lexer will be different than the 
token type the parser is using to match.

Also, if this were a standalone grammar then you'd need to use the 
tokenVocab option in the parser.  I'm not sure if this is 
necessary or not when you're importing it into another grammar, 
though.


From mats.ekberg at arcticgroup.se  Wed Dec 24 06:35:34 2008
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Wed, 24 Dec 2008 15:35:34 +0100
Subject: [antlr-interest] Pattern to macth if no other match
Message-ID: <1230129334.4799.4.camel@meg-laptop>

I want to have one action being executed if no patterns match, like:


stat:
	'SWAP'	{ fh.swap();}
|	'DROP'	{ fh.drop();}
|       <default>{ fh.print(text);}


on SWAP fh.swap() gets executed.
on DROP fh.drop()
and if no match i want fh.print() be called with the text that did  not match anytihng else.

Can someone help me wit hthis one?

/mats
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081224/6cf78a77/attachment.html 

From refsdal.ivar at gmail.com  Wed Dec 24 07:08:17 2008
From: refsdal.ivar at gmail.com (Ivar Refsdal)
Date: Wed, 24 Dec 2008 10:08:17 -0500
Subject: [antlr-interest] Creating a simple expression language
In-Reply-To: <23fce8e60811251413t4a226462m72fa94b6a1ade481@mail.gmail.com>
References: <23fce8e60811100348t7a769e49s1314ede97d4b5f00@mail.gmail.com>	<49186F9A.6090402@quantdev.com>	<23fce8e60811110148x4601f439ie2fe422e18cc76b3@mail.gmail.com>	<23fce8e60811180413u30224e73t15088145d87d8ed0@mail.gmail.com>	<23fce8e60811231320x7fc4dc9dyaa26959947fc42fd@mail.gmail.com>	<4929D72B.6090600@gmail.com>
	<23fce8e60811251413t4a226462m72fa94b6a1ade481@mail.gmail.com>
Message-ID: <49525061.6050505@gmail.com>


>
> Hi Ivar,
>
> Thanks for the response. The Dragon book is good, isn't it? I skimmed
> it last year, but probably need to go through it again and do more of
> the exercises this time. Ditto Programming Language Pragmatics by
> Michael Scott and Essentials of Programming Languages. I am doing the
> latter at the moment, exercises and all, but it's Scheme, so it's
> great, but not immediately applicable to using ANTLR.
>
> I think I'm fairly happy with the grammar in terms of it parsing my
> expected input. Doubtless I will refine it as my understanding grows.
> Where I'm stuck is how to evaluate my AST; i.e. Eval.g is where I'm
> not sure how to procee, rather than Expr.g.
>
> I think k=1 is the right choice. My understanding is that you want the
> smallest possible value of k for performance reasons. You can use a
> higher value (ideally scoped by production) to resolve ambiguities,
> etc; but you should always strive to resolve that by using
> left-factoring, semantic or syntactic predicate. Similarly for
> backtracking; it's powerful and useful, but there are other options.
>
> So in summary, I'm still stuck and looking for an example of how to
> register and execute my functions. I intuitively feel that my
> tree-walking approach is wrong, but I'm not sure what the idiomatic,
> best-practice for ANTLR would be.
>
> Cheers,
>
> James
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   


Hi James,

Thanks for your response.

I had a second go (without any tree things as I'm not familiar with
that yet):
http://pastie.org/pastes/346265

this input:	
square(add( add(5,5,5), add(2,2,2)))

should give this output:	
method: add [5, 5, 5] -> 15
method: add [2, 2, 2] -> 6
method: add [15, 6] -> 21
method: square [21] -> 441


The functions look like this:

class PublicFunctions {
	public Integer square(Integer x) { return x*x; }
	public Integer addfive(Integer x) { return x+5; }
	
	public Integer add(Integer...arguments) {
		Integer sum = new Integer(0);
		for (Integer x : arguments) {
			sum+= x;
		}
		return sum;
	}
}



It's just a small modification of this grammar:
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator

	fn=ID  '(' (fexpr=expr { args.add( new Integer($fexpr.value)); } 		// is there a better way to do this?
	              (',' aexpr=expr { args.add( new Integer($aexpr.value)); } )*	// is there a better way to do this?
	           )? ')'
	{

I tried using var+=expr, but couldn't get it to work... Any tips?

Any tips on Java coding style is also appreciated... :)

Good luck and happy holidays :-)


Ivar

From jared.bunting at peachjean.com  Wed Dec 24 09:34:14 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Wed, 24 Dec 2008 11:34:14 -0600
Subject: [antlr-interest] bug with maven plugin and outputDirectory
In-Reply-To: <E4D07AB09F5F044299333C8D0FEB45E90783203A@nrccenexb1.nrc.ca>
References: <E4D07AB09F5F044299333C8D0FEB45E90783203A@nrccenexb1.nrc.ca>
Message-ID: <49527296.3080307@peachjean.com>

I'm not sure why this wouldn't work - I justed tested it with version 
3.1.1.2 and it worked well - maybe a bug that was fixed?  I'd suggest 
trying that. 

Also, there is a fisheye repository with both the maven plugin and the 
ant task: http://fisheye2.atlassian.com/browse/antlr-buildtools

-Jared

Putrycz, Erik wrote:
>
> I have the following configuration in my maven file:
>
>                                     <plugin>
>
>                                                 
> <groupId>org.antlr</groupId>
>
>                                                 
> <artifactId>antlr3-maven-plugin</artifactId>
>
>                                                 <version>3.1.1</version>
>
>                                                 <configuration>
>
>                                                             
> <outputDirectory>${basedir}/src/main/java/nrc/cobol/antlr3</outputDirectory>
>
>                                                 </configuration>
>
>                                     </plugin>
>
>  
>
> The outputDirectory directive is never working and all the generated 
> code ends in target/generated-sources/antlr
>
> I tried to find the source code for the plugin and cannot find it 
> anywhere. This used to work with the mojo plugin.
>
>  
>
> Erik.
>
>  
>
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

From antlr at mirality.co.nz  Wed Dec 24 11:11:59 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 25 Dec 2008 08:11:59 +1300
Subject: [antlr-interest] Pattern to macth if no other match
In-Reply-To: <1230129334.4799.4.camel@meg-laptop>
References: <1230129334.4799.4.camel@meg-laptop>
Message-ID: <20081224191211.332013418457@www.antlr.org>

At 03:35 25/12/2008, Mats Ekberg wrote:
>I want to have one action being executed if no patterns match, 
>like:
>
>stat:
>   'SWAP'  { fh.swap();}
>| 'DROP'  { fh.drop();}
>|       <default>{ fh.print(text);}

That's pretty much it, if you want to have a zero-length match 
(don't consume any of the input, but execute something if the next 
token isn't either SWAP or DROP):

stat
   : 'SWAP' { fh.swap(); }
   | 'DROP' { fh.drop(); }
   |        { fh.print(text); }
   ;

If you do want to consume the next token (and print the text of 
that), then you'd use this:

stat
   : 'SWAP' { fh.swap(); }
   | 'DROP' { fh.drop(); }
   | x=.    { fh.print($x.text); }
   ;


From g.r.vansickle at att.net  Wed Dec 24 14:11:08 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Wed, 24 Dec 2008 16:11:08 -0600
Subject: [antlr-interest] Merry Xmas Terence!
Message-ID: <27632C39DF2C4FEBB9A2601BAF219913@DFW5RB41>

You sold another book - my freshly-minted copy arrived yesterday! ;-)

Definitely answered many questions, raised others.  Bottom line is, as I
know others less lingustic-analysis-ly challenged than myself have said, it
looks to me like you really have something game-changing here.  All the
LL/LR/GLR/etc/etc/etc theory aside, you have created a tool that is far more
usable than lex/yacc/flex/bison, while at the same time is significantly
more powerful.

I also want to compliment you on your writing.  Your book is extremely well
written and organized, which simply can't be said for the vast bulk of
CS-targetted books.  It hits exactly the right balance between "here's how
to use the tool", "here's what's going on under-the-hood", and "here's the
underlying theory".  Truth be told, I haven't read the section on LL(*)
theory yet, but that's exactly what I'm getting at - I didn't have to in
order to get what I needed from the book.

One specific thing I'd like to comment on: I've seen others on the Internet
(you heard of this thing?  It's on computers now. ;-)) claim the book is too
"Java-centric", but I can't really say that's a valid criticism.  Yes, all
the non-ANTLR-grammar code is Java, but I came to learn about ANTLR, and
that's what I got.  The Java that's there isn't anything heavy-duty, and
mostly is either boilerplate to run the built recognizers, or short,
easy-to-understand code in the actions.  It simply isn't going to trip up
anyone who is going to be capable of taking away anything from the meat of
the book anyway.  And anyway, you had to pick *some* languge, and Java is
probably as good as any for this pedagogical purpose.  And this is coming
from a guy who has absolutely zero love for Java.

What I would suggest is the addition of an Appendix showing the mappings
between the Java constructs shown in the book and how you have to do things
if you're target language is something other than Java.  I'm thinking about
things like Java: "$id.text" => C: "$id.text->chars", maybe in nice tables,
one for each "Java Target => LanguageX Target" mapping.  I know this may be
a quickly moving target, so maybe make it a web-only thing and direct people
to it in the book.

Here's to a job well done, and continued success in the new year!  I can't
wait for ANTLR V4[1], so I don't have to flatten my list grammars (;-))!

-- 
Gary R. Van Sickle
[1] Rumor control: No, there's no ANTLR V4 being worked on that I'm aware
of, see the smiley at the end of that sentence.


From jaluber at gmx.de  Wed Dec 24 14:33:58 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 24 Dec 2008 23:33:58 +0100
Subject: [antlr-interest] Merry Xmas Terence!
In-Reply-To: <27632C39DF2C4FEBB9A2601BAF219913@DFW5RB41>
References: <27632C39DF2C4FEBB9A2601BAF219913@DFW5RB41>
Message-ID: <4952B8D6.3010106@gmx.de>

Gary R. Van Sickle schrieb:
...
> What I would suggest is the addition of an Appendix showing the mappings
> between the Java constructs shown in the book and how you have to do things
> if you're target language is something other than Java.  I'm thinking about
> things like Java: "$id.text" => C: "$id.text->chars", maybe in nice tables,
> one for each "Java Target => LanguageX Target" mapping.  I know this may be
> a quickly moving target, so maybe make it a web-only thing and direct people
> to it in the book.

While C may be a bit special, other language targets work the same as
Java. As long one uses the provided mappings, that is. The only
non-mapped but often-used attribute is count(), so one could think about
adding a language agnostic version, too.

Johannes

From antlr at mirality.co.nz  Wed Dec 24 16:54:51 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 25 Dec 2008 13:54:51 +1300
Subject: [antlr-interest] Pattern to macth if no other match
In-Reply-To: <1230151053.4799.7.camel@meg-laptop>
References: <1230129334.4799.4.camel@meg-laptop>
	<20081224200704.4F93E90116@mail.arcticgroup.se>
	<1230151053.4799.7.camel@meg-laptop>
Message-ID: <20081225005504.97F423418454@www.antlr.org>

[Don't forget to use Reply All to keep your responses on-list!]

At 09:37 25/12/2008, Mats Ekberg wrote:
>stat:
>expr{ fh.lit(new BigDecimal($expr.text));}
>|'DUP'{ fh.dup();}
>|'SWAP'{ fh.swap();}
>|'DROP'{ fh.drop();}
>|x=.{ fh.lookup($x.text);}
>;
>
>if I have a input text "1 2 3 BBBB" I get (the 1 2 and 3 is 
>correctly parsed as expr):
>
>line 1:6 no viable alternative at character 'B'
>line 1:7 no viable alternative at character 'B'
>line 1:8 no viable alternative at character 'B'
>line 1:9 no viable alternative at character 'B'

The error indicates that you don't have a lexer rule that can 
match a 'B' (or a sequence of 'B's).

Remember that using the . wildcard in a parser rule means "any 
token" -- you still must have an appropriate lexer rule to 
generate the tokens in the first place. 


From gokul007 at gmail.com  Wed Dec 24 23:27:52 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 25 Dec 2008 12:57:52 +0530
Subject: [antlr-interest] Match the start and end of a line
Message-ID: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>

Hi,
    I am a beginner in ANTLR and i went through the documentation available
fairly. But i am not able to find the proper way of matching the beginning
and end of a line in ANTLR. Can someone help me on that?

Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/b6d241d9/attachment.html 

From g.r.vansickle at att.net  Thu Dec 25 01:17:43 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Thu, 25 Dec 2008 03:17:43 -0600
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
Message-ID: <CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>

> From: Gokulakannan Somasundaram
> 
> Hi,
>     I am a beginner in ANTLR and i went through the 
> documentation available fairly. But i am not able to find the 
> proper way of matching the beginning and end of a line in 
> ANTLR. Can someone help me on that?
> 
> Thanks,
> Gokul.

If I may quote one Mr. Homer Simpson, "it looks like ketchup, it tastes like
ketchup, but brother, IT AIN'T KETCHUP!"  ANTLR's lexer isn't doing regular
expression matching, even though it's using many of the same operators for
very similar purposes.  What you want to do is something like the following:

1.  Have the lexer detect EOLs and send a token up to the parser.  A lexer
rule something like this is what you're looking for:

EOL : ('\r'|'\n')+
    ;

This is untested, but should be what you want for this: eat up any number of
carraige returns and linefeeds, in any combination, and send up a token
named "EOL".

2.  With EOLs now coming up, this might be all you need, if in fact you only
need the end-of-lane anchor behavior.  You'd write your parser rules
something like this and you're done:

translation_unit
    : (statement EOL)+
    ;

3.  If you really need that start-of-line anchor (e.g. if you can't skip
whitespace at the beginning of your lines), FAQ #... this one:
<http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497>... can
probably help you out.  Each EOL implies a BOL (beginning of line)
immediately after it, so "simply" emit both an EOL and a BOL token from the
('\r'|'\n')+ match in the lexer, then make your parser rules look like this:

translation_unit
    : (BOL statement EOL)+
    ;

You'd have to be throwing up WS tokens as well though for that to be buying
you anything.

Hope that helps some.

-- 
Gary R. Van Sickle
 


From antlr at mirality.co.nz  Thu Dec 25 01:58:21 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 25 Dec 2008 22:58:21 +1300
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
Message-ID: <20081225095834.05E3D3418453@www.antlr.org>

At 22:17 25/12/2008, Gary R. Van Sickle wrote:
 >translation_unit
 >    : (BOL statement EOL)+
 >    ;
 >
 >You'd have to be throwing up WS tokens as well though for
 >that to be buying you anything.

Actually even in that case it doesn't really buy you anything, 
unless EOLs can occur in other contexts as well.  (And even then 
it's doubtful -- it'd just make parsing harder.)


But I think the OP would need to explain a bit more about *why* 
they're interested in line beginnings and endings before we can be 
of more help.


From g.r.vansickle at att.net  Thu Dec 25 08:18:05 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Thu, 25 Dec 2008 10:18:05 -0600
Subject: [antlr-interest] Match the start and end of a line
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41> 
Message-ID: <39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>

> From: Gavin Lambert
> 
> At 22:17 25/12/2008, Gary R. Van Sickle wrote:
>  >translation_unit
>  >    : (BOL statement EOL)+
>  >    ;
>  >
>  >You'd have to be throwing up WS tokens as well though for  
> >that to be buying you anything.
> 
> Actually even in that case it doesn't really buy you 
> anything, unless EOLs can occur in other contexts as well.  
> (And even then it's doubtful -- it'd just make parsing harder.)
> 

It would make parsing harder no doubt, but I'm thinking of cases such as in
SPICE, where (at least for some definitions of the term "SPICE"), the first
token on a line must start in the first column, i.e.:

OK:
"R1 0 1 1k\n"

Not valid:
"    R1 0 1 1k\n"

Some crusty old C preprocessors want the "#" in the first column as well.
Now, the utility of such restrictions my be dubious if you're writing a
recognizer, but maybe you're writing a validator to determine if the given
SPICE deck or C file will get through the crustiest of the crusty old
SPICEes or C preprocessors.

So having slept on it, and given the above rationale, rules like these would
make some sort of sense:

spice_resistor_declaration
    : BOL name=ID WS node0=ID WS node1=ID WS value=ID WS EOL
        // PS: Yeah, a SPICE deck is a virtually-unparseable atrocity of a
"language".
        // Without some form of context tracking or feedback from the
parser, it's simply
        // not possible for the lexer to tell a component-type-plus-name
from a node ID from a literal value.
        // Welcome to my world ;-(.
    ;

cpp_define
    : BOL '#' WS 'define' WS ID WS ( '(' WS define_param_list WS ')' )? WS
define_body WS EOL
    ;

So, yeah, it buys you a mess, that's for sure.  Or wait, I think I see your
point, are you saying that if you're explicitly handling WS's in the parser,
the BOL buys you nothing?  I think you're right, these would I think be
equivalent to the above, and require no BOL complications:

spice_resistor_declaration
    : name=ID WS node0=ID WS node1=ID WS value=ID WS EOL
    ;

cpp_define
    : '#' WS 'define' WS ID WS ( '(' WS define_param_list WS ')' )? WS
define_body WS EOL
    ;

> 
> But I think the OP would need to explain a bit more about 
> *why* they're interested in line beginnings and endings 
> before we can be of more help.
> 

Indeed.  One thing I do know is that it would make parsing SPICE a bit more
tractable.  If you could do something like this, it would be one small step
for man:

RESISTOR_ID : ^R[[:alnum:]_]+ ;

spice_resistor_declaration
    : RESISTOR_ID node0=ID node1=ID value=ID
        // Hey hey, welcome to 1973!  We can at least tell our component
types from our node IDs and literal values now!
    ;

Wouldn't need explicit EOLs either.

Is there a reason why the ANTLR lexer doesn't/can't support full regexes?

-- 
Gary R. Van Sickle
 



From ymo.mail at gmail.com  Thu Dec 25 08:28:56 2008
From: ymo.mail at gmail.com (Ymo)
Date: Thu, 25 Dec 2008 11:28:56 -0500
Subject: [antlr-interest] Removing parse trees from antlr grammars.
Message-ID: <7196ed5b0812250828h641c5192me802296ae1d855f3@mail.gmail.com>

Hi.

I discovered this tool ...
http://www.antlr.org/wiki/display/ANTLR3/Tool+showing+grammatical+structure+of+Java+code

This tool depends on the Antlrv3 grammar with all the tree construction code
striped.

1) is there a way i can automatically remove all the tree construction code
from any grammar? I don't know if the person that wrote the tool did this by
hand but i found it was very tedious.

2) Is there an API in the antlr source code for parsing and "visiting" antlr
grammars ? Where should i start in the source code if there is no such API ?

3) I saw few versions of the Java.g grammar. Which one is the "official" or
recommended one ?

First there is http://antlr.org/grammar/1152141644268/Java.g
And then http://antlr.org/grammar/1207932239307/Java1_5Grammars
and now there is the Java.g grammar at :
http://openjdk.java.net/projects/compiler-grammar/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/88ab0d1a/attachment.html 

From gokul007 at gmail.com  Thu Dec 25 09:13:44 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 25 Dec 2008 22:43:44 +0530
Subject: [antlr-interest] Fwd:  Match the start and end of a line
In-Reply-To: <9362e74e0812250905l6042d7c2j993ce7784cfaa0c@mail.gmail.com>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
	<20081225095834.05E3D3418453@www.antlr.org>
	<9362e74e0812250905l6042d7c2j993ce7784cfaa0c@mail.gmail.com>
Message-ID: <9362e74e0812250913y3652750eudb90ed97c6d9ce88@mail.gmail.com>

Pressed 'Reply' instead of 'Reply All'

On Thu, Dec 25, 2008 at 3:28 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 22:17 25/12/2008, Gary R. Van Sickle wrote:
>
> But I think the OP would need to explain a bit more about *why*
> they're interested in line beginnings and endings before we can be
> of more help.
>

Hi,
   I am trying to convert the pl/pgsql parser from Lex/Bison to AntLR, to
check whether it would make parsing will get simpler. Just to give some
background, pl/pgsql is a equivalent of PL/SQL in the open source database
postgresql. While i was trying that, there was Flex token, that has the
beginning of line as one of its condition. I couldn't find the equivalent in
AntLR and i raised the doubt in the forum. When i went ahead and checked it,
this one is un-documented option called "#option dump" where '#' has been
mentioned as a rule like this *^#option* in flex.
  So i really don't know, why it was decided to be at the beginning of line
and i failed trying to think of a reason.

Thanks,
Gokul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/75f716ac/attachment.html 

From gokul007 at gmail.com  Thu Dec 25 09:21:19 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 25 Dec 2008 22:51:19 +0530
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
	<39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>
Message-ID: <9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>

Hi Gary,
         Thanks a lot for your detailed response. I have one doubt from your
second mail. I have listed it below.

>
> spice_resistor_declaration
>    : name=ID WS node0=ID WS node1=ID WS value=ID WS EOL
>    ;
>
> cpp_define
>    : '#' WS 'define' WS ID WS ( '(' WS define_param_list WS ')' )? WS
> define_body WS EOL
>     ;
>

I can't understand, how we can omit BOL here, if we are handling white
spaces. Can you tell me, how i should handle the white space to omit the
BOL?

One more question. I see a Token  attribute called 'pos' - Can we make use
of this to check BOL?


>
> Is there a reason why the ANTLR lexer doesn't/can't support full regexes?
>

I second the same question. Why is a parser with such cool features should
avoid support for regex? I think this support would enable lot of people who
currently have the parsers written in Flex/Bison to migrate fast.

 Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/6592c342/attachment.html 

From jimi at temporal-wave.com  Thu Dec 25 11:42:46 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Dec 2008 11:42:46 -0800
Subject: [antlr-interest] Pattern to macth if no other match
In-Reply-To: <20081225005504.97F423418454@www.antlr.org>
References: <1230129334.4799.4.camel@meg-laptop>	<20081224200704.4F93E90116@mail.arcticgroup.se>	<1230151053.4799.7.camel@meg-laptop>
	<20081225005504.97F423418454@www.antlr.org>
Message-ID: <4953E236.3040509@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/457d1d79/attachment.html 

From jaluber at gmx.de  Thu Dec 25 11:56:04 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 25 Dec 2008 20:56:04 +0100
Subject: [antlr-interest] Pattern to macth if no other match
In-Reply-To: <4953E236.3040509@temporal-wave.com>
References: <1230129334.4799.4.camel@meg-laptop>	<20081224200704.4F93E90116@mail.arcticgroup.se>	<1230151053.4799.7.camel@meg-laptop>	<20081225005504.97F423418454@www.antlr.org>
	<4953E236.3040509@temporal-wave.com>
Message-ID: <4953E553.5050309@gmx.de>

Jim Idle schrieb:
> ANY : '.';

Shouldn't that be

ANY: .;

instead?

Johannes
> 
> Jim
> 
> 
> ------------------------------------------------------------------------
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Thu Dec 25 12:02:46 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Dec 2008 12:02:46 -0800
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>	<39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>
	<9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>
Message-ID: <4953E6E6.8050502@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/37e0d029/attachment.html 

From jimi at temporal-wave.com  Thu Dec 25 12:09:32 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Dec 2008 12:09:32 -0800
Subject: [antlr-interest] Pattern to macth if no other match
In-Reply-To: <4953E553.5050309@gmx.de>
References: <1230129334.4799.4.camel@meg-laptop>	<20081224200704.4F93E90116@mail.arcticgroup.se>	<1230151053.4799.7.camel@meg-laptop>	<20081225005504.97F423418454@www.antlr.org>
	<4953E236.3040509@temporal-wave.com> <4953E553.5050309@gmx.de>
Message-ID: <4953E87C.1070803@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/ea30ebbb/attachment.html 

From gokul007 at gmail.com  Thu Dec 25 12:58:10 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 26 Dec 2008 02:28:10 +0530
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <4953E6E6.8050502@temporal-wave.com>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
	<39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>
	<9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>
	<4953E6E6.8050502@temporal-wave.com>
Message-ID: <9362e74e0812251258w336d8325n61750cd8e0290091@mail.gmail.com>

>
> grammar t;
>
> @lexer::members
> {
>     boolean canStart = true;
> }
>
> tu
>     : line+ EOF
>     ;
>
> line
>     :    BOL STUFF* EOL
>     ;
>
> BOL    : { canStart  }?=> { input.mark(); canStart = false; } . {
> input.rewind(); } ;
>
> EOL :    '\r'? '\n'    { canStart = true; } ;
>
> WS  : (' ' | '\t')+ { $channel = HIDDEN; };
>
> STUFF
>     :     ('a'..'z'|'A'..'Z')+ ;
>
>
> I don't know the internals of ANTLR. But I think this approach incurs an
overhead of manipulating the 'canStart' for every line, even when i don't
need the condition. I think, if i follow an approach like this, it would
incur the overhead only necessary.

Suppose i need #include to always to be in the beginning of line

INCLUDE : '#include';

stmtInclude :  INCLUDE { if ($INCLUDE.pos!=0)  <<error>> };

Is my idea correct?  Or does it have any disadvantage?

Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081226/c8ff84c0/attachment.html 

From gokul007 at gmail.com  Thu Dec 25 13:23:11 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 26 Dec 2008 02:53:11 +0530
Subject: [antlr-interest] A Question on FAQ
Message-ID: <9362e74e0812251323m27e50a45s122f788273c95b68@mail.gmail.com>

Hi,
   I was going through the FAQ "How can I allow keywords as identifiers?".
The example is like this

*grammar Pred;

prog: stat+ ;

stat: keyIF expr stat
   | keyCALL ID ';'
   | ';'
   ;

expr: ID
   ;

keyIF : {input.LT(1).getText().equals("if")}? ID ;

keyCALL : {input.LT(1).getText().equals("call")}? ID ;

ID : 'a'..'z'+ ;
WS : (' '|'\n')+ {$channel=HIDDEN;} ;

*
My doubt is, why can't we write KeyIF and KeyCall as

KEYIF : 'if';

KEYCALL : 'call';

instead of writing like the above one. Or am i just repeating what is
already told in the second alternative in the same FAQ?

Thanks,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081226/87c8885c/attachment.html 

From jimi at temporal-wave.com  Thu Dec 25 13:04:26 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Dec 2008 13:04:26 -0800
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <9362e74e0812251258w336d8325n61750cd8e0290091@mail.gmail.com>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>	
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>	
	<39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>	
	<9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>	
	<4953E6E6.8050502@temporal-wave.com>
	<9362e74e0812251258w336d8325n61750cd8e0290091@mail.gmail.com>
Message-ID: <4953F55A.40909@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/48a62c9a/attachment.html 

From antlr at mirality.co.nz  Thu Dec 25 15:43:15 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 26 Dec 2008 12:43:15 +1300
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <9362e74e0812251258w336d8325n61750cd8e0290091@mail.gmail.co
 m>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
	<39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>
	<9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>
	<4953E6E6.8050502@temporal-wave.com>
	<9362e74e0812251258w336d8325n61750cd8e0290091@mail.gmail.com>
Message-ID: <20081225234325.B13283418419@www.antlr.org>

At 09:58 26/12/2008, Gokulakannan Somasundaram wrote:
>Suppose i need #include to always to be in the beginning of line
>
>INCLUDE : '#include';
>
>stmtInclude :  INCLUDE { if ($INCLUDE.pos!=0)  <<error>> };
>
>Is my idea correct?  Or does it have any disadvantage?

The way I would prefer to go is similar to this, but performs the 
check at the lexer level:

INCLUDE
   : { $pos == 0 }? => '#include';

or alternatively:

fragment INCLUDE: '#include';
HASH
   : '#'
     ( {$pos == 1}? =>
       ( ('include') => 'include' { $type = INCLUDE; }
       )
     )?
   ;

This way an INCLUDE token is only generated if the # is at the 
correct column.  (I'm not entirely certain about the syntax of 
$pos, though.  You might need to play with that a bit.)


From antlr at mirality.co.nz  Thu Dec 25 15:49:45 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 26 Dec 2008 12:49:45 +1300
Subject: [antlr-interest] A Question on FAQ
In-Reply-To: <9362e74e0812251323m27e50a45s122f788273c95b68@mail.gmail.co
 m>
References: <9362e74e0812251323m27e50a45s122f788273c95b68@mail.gmail.com>
Message-ID: <20081225234957.0BB013418419@www.antlr.org>

At 10:23 26/12/2008, Gokulakannan Somasundaram wrote:
>I was going through the FAQ "How can I allow keywords as 
>identifiers?". The example is like this
[...]
>My doubt is, why can't we write KeyIF and KeyCall as
>
>KEYIF : 'if';
>
>KEYCALL : 'call';
>
>instead of writing like the above one. Or am i just repeating 
>what is already told in the second alternative in the same FAQ?

Pretty much.

The two alternatives mentioned in the FAQ are:

1. Avoid matching the keywords directly in the lexer, instead 
recognising them only as IDs.  Then in the parser (where you have 
context) check the actual text of the ID tokens you find to 
determine whether they're keywords or not.

2. Match the keywords directly in the lexer (so you have IF and 
CALL tokens, and ID tokens are only generated for words that don't 
match a keyword).  Then in the parser you never refer to ID 
directly -- wherever an id may appear you instead refer to a 
parser rule like this:
   id : ID | IF | CALL | ... other keyword tokens ... ;

I tend to prefer this second approach, since I try to minimise the 
number of predicates (especially semantic predicates) used in my 
grammars.  But it does mean that whenever you add a keyword to the 
language you have to add it in two places (which is not the case 
with the first approach).  So which one you go for is mostly just 
a matter of taste.


From padysrini at hotmail.com  Thu Dec 25 18:47:11 2008
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Thu, 25 Dec 2008 21:47:11 -0500
Subject: [antlr-interest] ast rewrite rule beginner question...
Message-ID: <BAY142-DAV57BBD81A432EEAA0A51D2ACEB0@phx.gbl>



I am reading terence's book and am in "tree construction" chapter...but i
am not sure whether i found an example for a rule as the one below and how
to write the rewrite rule...

expression
    :   conditionalOrExpression (assignmentOperator expression)?
    ;

I wrote the rewrite rule as...

expression
    :   conditionalOrExpression (assignmentOperator expression)?
       --> ^(assignmentOperator? conditionalOrExpression expression? )
    ;

I get an error about the "?" after assignmentOperator in the rewrite rule.
Not sure what is the right format ? Or should i use a imaginary node for the
root like...

expression
    :   conditionalOrExpression (assignmentOperator expression)?
       --> ^(OPER conditionalOrExpression assignmentOperator? expression? )
    ;



Thx

-- pady


From gokul007 at gmail.com  Thu Dec 25 19:07:32 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 26 Dec 2008 08:37:32 +0530
Subject: [antlr-interest] A Question on FAQ
In-Reply-To: <49541c25.010bca0a.7b28.ffffacb8SMTPIN_ADDED@mx.google.com>
References: <9362e74e0812251323m27e50a45s122f788273c95b68@mail.gmail.com>
	<49541c25.010bca0a.7b28.ffffacb8SMTPIN_ADDED@mx.google.com>
Message-ID: <9362e74e0812251907n6d8fc227yf5d42e5955134cf@mail.gmail.com>

Thanks a lot Gavin for the quick response.

On Fri, Dec 26, 2008 at 5:19 AM, Gavin Lambert <antlr at mirality.co.nz> wrote:

> At 10:23 26/12/2008, Gokulakannan Somasundaram wrote:
>
>> I was going through the FAQ "How can I allow keywords as identifiers?".
>> The example is like this
>>
> [...]
>
>> My doubt is, why can't we write KeyIF and KeyCall as
>>
>> KEYIF : 'if';
>>
>> KEYCALL : 'call';
>>
>> instead of writing like the above one. Or am i just repeating what is
>> already told in the second alternative in the same FAQ?
>>
>
> Pretty much.
>
> The two alternatives mentioned in the FAQ are:
>
> 1. Avoid matching the keywords directly in the lexer, instead recognising
> them only as IDs.  Then in the parser (where you have context) check the
> actual text of the ID tokens you find to determine whether they're keywords
> or not.
>
> 2. Match the keywords directly in the lexer (so you have IF and CALL
> tokens, and ID tokens are only generated for words that don't match a
> keyword).  Then in the parser you never refer to ID directly -- wherever an
> id may appear you instead refer to a parser rule like this:
>  id : ID | IF | CALL | ... other keyword tokens ... ;
>
> I tend to prefer this second approach, since I try to minimise the number
> of predicates (especially semantic predicates) used in my grammars.  But it
> does mean that whenever you add a keyword to the language you have to add it
> in two places (which is not the case with the first approach).  So which one
> you go for is mostly just a matter of taste.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081226/3328cb4b/attachment.html 

From jimi at temporal-wave.com  Thu Dec 25 19:11:29 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 25 Dec 2008 19:11:29 -0800
Subject: [antlr-interest] ast rewrite rule beginner question...
In-Reply-To: <BAY142-DAV57BBD81A432EEAA0A51D2ACEB0@phx.gbl>
References: <BAY142-DAV57BBD81A432EEAA0A51D2ACEB0@phx.gbl>
Message-ID: <49544B61.5080901@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081225/0ecf060f/attachment.html 

From antlr at mirality.co.nz  Thu Dec 25 20:27:28 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 26 Dec 2008 17:27:28 +1300
Subject: [antlr-interest] ast rewrite rule beginner question...
In-Reply-To: <49544B61.5080901@temporal-wave.com>
References: <BAY142-DAV57BBD81A432EEAA0A51D2ACEB0@phx.gbl>
	<49544B61.5080901@temporal-wave.com>
Message-ID: <20081226042738.0E1AD3418447@www.antlr.org>

At 16:11 26/12/2008, Jim Idle wrote:
>Just use:
>
>expression
>     :   conditionalOrExpression (assignmentOperator^ 
> expression)?
>
>         ;

Or the explicit form:

expression
   : ( a=conditionalOrExpression -> $a )
     ( o=assignmentOperator b=expression -> ^($o $a $b) )?
   ;

(Note that for either of these to work, assignmentOperator must 
match exactly one token.)


From gokul007 at gmail.com  Thu Dec 25 23:02:30 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 26 Dec 2008 12:32:30 +0530
Subject: [antlr-interest] Match the start and end of a line
In-Reply-To: <49541a9c.010bca0a.4ffc.0550SMTPIN_ADDED@mx.google.com>
References: <9362e74e0812242327g7febcc20o324cc87a536e6c92@mail.gmail.com>
	<CC9F0AA992BC4B9087805B3E5DC4A971@DFW5RB41>
	<39DDE8E875CA43BE9F76C10FBCAF7546@DFW5RB41>
	<9362e74e0812250921l568903a4occd1d052c8e1d2ae@mail.gmail.com>
	<4953E6E6.8050502@temporal-wave.com>
	<9362e74e0812251258w336d8325n61750cd8e0290091@mail.gmail.com>
	<49541a9c.010bca0a.4ffc.0550SMTPIN_ADDED@mx.google.com>
Message-ID: <9362e74e0812252302m740b39eehbfb52c24b18a73fa@mail.gmail.com>

That was very helpful Gavin. I would proceed with your first alternative, as
it looks lot more simple. I checked it and its working fine.

Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081226/7d7210e8/attachment.html 

From chainone at gmail.com  Fri Dec 26 00:45:15 2008
From: chainone at gmail.com (chain one)
Date: Fri, 26 Dec 2008 16:45:15 +0800
Subject: [antlr-interest]  Which one is quicker?
Message-ID: <5a92ffb60812260045y2608c08el34a93b4a88dc344a@mail.gmail.com>

1.INT :   '-'? DIGIT+
;
FLOAT

:   ('-'|'+')? DIGIT+  '.' DIGIT* (('e' | 'E') ('+' | '-')? (DIGIT)+)?
     ;

2.
INT_OR_FLOAT
  : '-'? DIGIT+ FLOAT?
 ;

fragment
FLOAT

:   '.' DIGIT* EXPONENT?
     ;

fragment
EXPONENT: ('e' | 'E') ('+' | '-')? (DIGIT)+;


Which one is quicker?
I think the 2th is quicker. Because in the 1st lex rule, A DFA is needed to
predict if it is a INT or FLOAT.
Am I right?


Thanks
Best Regards,
Young
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081226/ea117c14/attachment.html 

From jaluber at gmx.de  Fri Dec 26 03:09:14 2008
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 26 Dec 2008 12:09:14 +0100
Subject: [antlr-interest] Which one is quicker?
In-Reply-To: <5a92ffb60812260045y2608c08el34a93b4a88dc344a@mail.gmail.com>
References: <5a92ffb60812260045y2608c08el34a93b4a88dc344a@mail.gmail.com>
Message-ID: <4954BB5A.9090505@gmx.de>

chain one schrieb:
> 1.
> INT
> :   '-'? DIGIT+                  
> ;
> FLOAT
> 
> :   ('-'|'+')? DIGIT+  '.' DIGIT* (('e' | 'E') ('+' | '-')? (DIGIT)+)?
>      ;
> 
> 2.
> INT_OR_FLOAT
>   : '-'? DIGIT+ FLOAT?
>  ;
> 
> fragment
> FLOAT
> 
> :   '.' DIGIT* EXPONENT?
>      ;
>     
> fragment
> EXPONENT: ('e' | 'E') ('+' | '-')? (DIGIT)+;
> 
> 
> Which one is quicker?
> I think the 2th is quicker. Because in the 1st lex rule, A DFA is needed
> to predict if it is a INT or FLOAT.
> Am I right?
> 
> 
> Thanks
> Best Regards,
> Young

Did you benchmark the code? I've heard that people don't see the true
bottlenecks just by looking at code alone. Run the recognition a million
times and you should see a difference.

Johannes

From piyush.thakker at tcs.com  Fri Dec 26 03:18:27 2008
From: piyush.thakker at tcs.com (piyush.thakker at tcs.com)
Date: Fri, 26 Dec 2008 16:48:27 +0530
Subject: [antlr-interest] Java to C source converter
Message-ID: <OF4F30BC6F.0BEFE87C-ON6525752B.003DE7ED-6525752B.003E1DE6@tcs.com>

Hi, 

I am new to anltr. I wanted to convert Java source code to C source using 
antlr. I downloaded the java and java tree grammar from the antlr.org. How 
do I proceed from here. What should be the approach in order to print 
equivalent C code for the Java Code? 

I have read about AST to AST transformation being cumbersome. Is there any 
alternate way to convert Java code to C code?

--Piyush
=====-----=====-----=====
Notice: The information contained in this e-mail
message and/or attachments to it may contain 
confidential or privileged information. If you are 
not the intended recipient, any dissemination, use, 
review, distribution, printing or copying of the 
information contained in this e-mail message 
and/or attachments to it are strictly prohibited. If 
you have received this communication in error, 
please notify us by reply e-mail or telephone and 
immediately and permanently delete the message 
and any attachments. Thank you


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081226/62b855ee/attachment.html 

From jfabiani at yolo.com  Sat Dec 27 11:10:03 2008
From: jfabiani at yolo.com (johnf)
Date: Sat, 27 Dec 2008 11:10:03 -0800
Subject: [antlr-interest] newbie - before I start
Message-ID: <200812271110.03286.jfabiani@yolo.com>

Hi,
Before I start my journey into the new (to me) world of translating code. I 
thought I had better ask if someone had already done the work I need.  I 
don't want to re-invent the wheel.

Has anyone done the following:
converted VB6 to python?
converted VFP (visual FoxPro) to python?
converted MsSQL (procedures/triggers) to Postgres (functions/triggers)?

When I say "convert" I'm talking about code and not visual controls such as 
buttons and text boxes.

I have need to convert VFP code into python.  But I doubt anyone has actually 
done that so I asked for VB6.  VB6 has a close enough structure that I think 
I can change the grammar to work with VFP.  

In my effort to move away from M$ I would also like to convert MsSQL 
Transact-SQL to Postgres. 

So I'm hoping some kind soul will jump start me in the right direction.  I 
have ordered the book and hope to have it in a few days.  The book along with 
a working translation will get me a long way.

thanks in advance!


-- 
John Fabiani

From asaake at hotmail.de  Sat Dec 27 11:50:57 2008
From: asaake at hotmail.de (A. Saake)
Date: Sat, 27 Dec 2008 20:50:57 +0100
Subject: [antlr-interest] Progressive Slowdown in Parsing (code change
	proposal)
In-Reply-To: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl><BAY0-MC5-F4BN0SWnCH0036a2cd@bay0-mc5-f4.bay0.hotmail.com>
	<COL101-DS1716B5249AEDA1534A96E1B3EF0@phx.gbl>
	<20081222131752.267490@gmx.net>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl><BAY0-MC5-F4BN0SWnCH0036a2cd@bay0-mc5-f4.bay0.hotmail.com>
	<COL101-DS1716B5249AEDA1534A96E1B3EF0@phx.gbl>
	<20081222131752.267490@gmx.net>
Message-ID: <COL101-DS4A78D9C74F5BA1A0481F3B3E80@phx.gbl>

After changing my grammar to avoid backtracking there was no performance 
gain. I didn't want to change everything to an AST output, because my actual 
grammar works fine and I didn't want to repeat all tests I have done so far.

So I went back to the profiler and had a look to the C# sources from 
TokenRewriteStream. My problem was the code in 
ReduceToSingleOperationPerIndex and GetKindOfOps.

I have to confess that I didn't try to understand the full 
TokenRewriteStream mechanism, but only the mentioned procedures. After some 
tests with my grammar I found a solution, which seems to result in nearly 
linear performance with my grammar. I'm back at 1 minute (was 18 minutes 
before) for my 3500 lines of code!

The change was to start with two empty arraylists in 
ReduceToSingleOperationPerIndex, one for InsertBeforeOps, one for RelaceOps. 
Then follow the loops as in original code. But in this loops the two 
arraylists grow with every processed rewrite, so no need for calling 
GetKindOfOps exists. The purpose of this loops is to eliminate rewrites by 
setting them to null. This has to be done in the new arraylists, too. And 
the arraylists were traversed backwards, what is a difference to the 
original code.

The only part I'm having a bad feeling about is the "continue"-statement 
after "rewrites[i] = null;", probably because I don't understand the whole 
thing. But it was part of the original code, so I didn't change it. Perhaps 
some one with more insight can verify that this is intended behaviour.

Here is my code:

    protected IDictionary ReduceToSingleOperationPerIndex(IList rewrites) {
      ArrayList insertBeforeOps = new ArrayList();
      ArrayList replaceOps = new ArrayList();

      // WALK REPLACES
      for (int i = 0, ni = rewrites.Count; i < ni; i++) {
        object op = rewrites[i];

        //ignored null'd ops
        if (op == null) continue;

        //InsertBeforeOp added to ArrayList, but ignored
        if (op is InsertBeforeOp) {
          insertBeforeOps.Add(op);
          continue;
        }

        //process only, when ReplaceOp
        ReplaceOp rop = op as ReplaceOp;
        if (rop == null) continue;

        //GetKindOfOps(rewrites, insertBeforeOps, replaceOps, lastVisited, 
i);

        // Wipe prior inserts within range
        for (int j = insertBeforeOps.Count -1; j >= 0; j--) {
          InsertBeforeOp iop = (InsertBeforeOp)insertBeforeOps[j];
          if (iop.index >= rop.index && iop.index <= rop.lastIndex) {
            // delete insert as it's a no-op.
            rewrites[iop.instructionIndex] = null;
            insertBeforeOps.RemoveAt(j);
          }
        }

        // Drop any prior replaces contained within
        for (int j = replaceOps.Count-1; j >= 0; j--) {
          ReplaceOp prevRop = (ReplaceOp)replaceOps[j];
          if (prevRop.index >= rop.index && prevRop.lastIndex <= 
rop.lastIndex) {
            // delete replace as it's a no-op.
            rewrites[prevRop.instructionIndex] = null;
            replaceOps.RemoveAt(j);
            continue;
          }

          // throw exception unless disjoint or identical
          bool disjoint =
            prevRop.lastIndex < rop.index || prevRop.index > rop.lastIndex;
          bool same =
            prevRop.index == rop.index && prevRop.lastIndex == 
rop.lastIndex;
          if (!disjoint && !same) {
            throw new ArgumentOutOfRangeException("replace op boundaries of 
" + rop +
                               " overlap with previous " + prevRop);
          }
        }
        //we are sure, it's a ReplaceOp, so add it to replaceOps list
        replaceOps.Add(rop);
      }

      //Reset lists
      insertBeforeOps = new ArrayList();
      replaceOps = new ArrayList();

      // WALK INSERTS
      for (int i = 0, ni = rewrites.Count; i < ni; i++) {
        object op = rewrites[i];

        //ignored null'd ops
        if (op == null) continue;

        //ReplaceOp added to ArrayList, but ignored
        if (op is ReplaceOp) {
          replaceOps.Add(op);
          continue;
        }

        //process only, when InsertBeforeOp
        InsertBeforeOp iop = rewrites[i] as InsertBeforeOp;
        if (iop == null) continue;

        //GetKindOfOps(rewrites, insertBeforeOps, replaceOps, lastVisited, 
i);

        for (int j = insertBeforeOps.Count - 1; j >= 0; j--) {
          InsertBeforeOp prevIop = (InsertBeforeOp)insertBeforeOps[j];
          if (prevIop.index == iop.index) { // combine objects
            // convert to strings...we're in process of toString'ing
            // whole token buffer so no lazy eval issue with any templates
            iop.text = CatOpText(iop.text, prevIop.text);
            // delete redundant prior insert
            rewrites[prevIop.instructionIndex] = null;
            insertBeforeOps.RemoveAt(j);
          }
        }

        //foreach (ReplaceOp rop in replaceOps) {
        for (int j = replaceOps.Count - 1; j >= 0; j--) {
          ReplaceOp rop = (ReplaceOp)replaceOps[j];
          if (iop.index == rop.index) {
            rop.text = CatOpText(iop.text, rop.text);
            rewrites[i] = null;  // delete current insert
            continue;
          }
          if (iop.index >= rop.index && iop.index <= rop.lastIndex) {
            throw new ArgumentOutOfRangeException("insert op " + iop +
                               " within boundaries of previous " + rop);
          }
        }
        if (rewrites[i] != null) {
          insertBeforeOps.Add(iop);
        }
      }

      // System.out.println("rewrites after="+rewrites);
      IDictionary m = new Hashtable();
      for (int i = 0; i < rewrites.Count; i++) {
        RewriteOperation op = (RewriteOperation)rewrites[i];
        if (op == null)
          continue; // ignore deleted ops
        if (m[op.index] != null) {
          throw new Exception("should only be one op per index");
        }
        m[op.index] = op;
      }
      //System.out.println("index to op: "+m);
      return m;
    }


I'd be happy if it would be part of the code base, if it's acceptable and I 
haven't overseen something important.

Best regards,

Andreas Saake

 


From parrt at cs.usfca.edu  Sat Dec 27 13:14:13 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 27 Dec 2008 13:14:13 -0800
Subject: [antlr-interest] Progressive Slowdown in Parsing (code change
	proposal)
In-Reply-To: <COL101-DS4A78D9C74F5BA1A0481F3B3E80@phx.gbl>
References: <COL101-DS1004514CB576FDB8D61C8FB3EF0@phx.gbl><BAY0-MC5-F4BN0SWnCH0036a2cd@bay0-mc5-f4.bay0.hotmail.com>
	<COL101-DS1716B5249AEDA1534A96E1B3EF0@phx.gbl>
	<20081222131752.267490@gmx.net>
	<COL101-DS4A78D9C74F5BA1A0481F3B3E80@phx.gbl>
Message-ID: <ACB1A8A6-42D4-4B8B-90C1-440274E91B9E@cs.usfca.edu>

Hi.thanks for the hints... there is a nonlinearity in my algorithm. I  
was hoping nobody would get hit by it, but I have added an improvement  
request:

http://www.antlr.org/jira/browse/ANTLR-371

Ter

From cowang at comcast.net  Sun Dec 28 11:00:54 2008
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 28 Dec 2008 14:00:54 -0500
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
	defined in Lexer
Message-ID: <DED813F509D44DD1AF9AF55A66DD2858@gsce0ae1cfad8d>

The same error happens with the grammar at the end of the Composite Grammar
page on the wiki.
  http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars

The CLexer.java file is not generated for the grammars as written.

But we can generate the CLexer.java file if we comment out the SPACE rule in
grammar L and, in grammar P1, change rule spaces to
  spaces: ' '+ ;

For convenience here are the files that I copied from the Composite Grammar
page.

-------------------- begin L.g --------------
lexer grammar L ;

LETTER : 'a'..'z' ;
SPACE : ' ' ;

---- begin P1.g (note: changed grammer to grammar) ---
parser grammar P1 ;

letter : LETTER ;
spaces : SPACE+ ;

--- begin P2.g (note: changed grammer to grammar) ---
parser grammar P2 ;
import P1 ;

letters : letter+ ;

--------------- begin C.g ---------
grammar C ;
import L, P2 ;

stuff : ( letters spaces )+ ;

--------- end grammar files ------------

I ran my tests on Windows XP using the command line
  java -cp C:\Java\ANTLR\antlr-3.1.1.jar org.antlr.Tool -o work C.g.


Regards,
George


From parrt at cs.usfca.edu  Sun Dec 28 12:54:15 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 28 Dec 2008 12:54:15 -0800
Subject: [antlr-interest] Bug report: Composite grammar with all tokens
	defined in Lexer
In-Reply-To: <DED813F509D44DD1AF9AF55A66DD2858@gsce0ae1cfad8d>
References: <DED813F509D44DD1AF9AF55A66DD2858@gsce0ae1cfad8d>
Message-ID: <F55B9A8B-535E-49D0-B816-9C5B4CC94C29@cs.usfca.edu>

Wow. I broke something. doh. Adding bug report. thanks,
Ter
On Dec 28, 2008, at 11:00 AM, George S. Cowan wrote:

> The same error happens with the grammar at the end of the Composite  
> Grammar
> page on the wiki.
>  http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars
>
> The CLexer.java file is not generated for the grammars as written.
>
> But we can generate the CLexer.java file if we comment out the SPACE  
> rule in
> grammar L and, in grammar P1, change rule spaces to
>  spaces: ' '+ ;
>
> For convenience here are the files that I copied from the Composite  
> Grammar
> page.
>
> -------------------- begin L.g --------------
> lexer grammar L ;
>
> LETTER : 'a'..'z' ;
> SPACE : ' ' ;
>
> ---- begin P1.g (note: changed grammer to grammar) ---
> parser grammar P1 ;
>
> letter : LETTER ;
> spaces : SPACE+ ;
>
> --- begin P2.g (note: changed grammer to grammar) ---
> parser grammar P2 ;
> import P1 ;
>
> letters : letter+ ;
>
> --------------- begin C.g ---------
> grammar C ;
> import L, P2 ;
>
> stuff : ( letters spaces )+ ;
>
> --------- end grammar files ------------
>
> I ran my tests on Windows XP using the command line
>  java -cp C:\Java\ANTLR\antlr-3.1.1.jar org.antlr.Tool -o work C.g.
>
>
> Regards,
> George
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gokul007 at gmail.com  Sun Dec 28 22:13:47 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 29 Dec 2008 11:43:47 +0530
Subject: [antlr-interest] Passing information into the parser
Message-ID: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>

Hi,
         I have a requirement, where in before starting the parsing, i need
to tell the parser whether the first token is T_FUNCTION / T_TRIGGER(say
callType). (i.e) this token is not available as part of the text to be
parsed. In Bison, it is just declared with %token T_FUNCTION and %token
T_TRIGGER. The scanner makes sure that it emits the callType token before it
emits the tokens to be parsed. Although, i am able to come up with some ways
to do this, they are too ugly.
            Can someone provide me a clean way of passing information into
the parser and make the scanner emit that as the first token, even before
the actual tokens are emitted? I am trying to do this in C-Language target.

Thanks in Advance,
Gokul.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081229/4c48021e/attachment.html 

From antlr at mirality.co.nz  Sun Dec 28 22:21:15 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 29 Dec 2008 19:21:15 +1300
Subject: [antlr-interest] Passing information into the parser
In-Reply-To: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.co
 m>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
Message-ID: <20081229062126.7B83D3418446@www.antlr.org>

At 19:13 29/12/2008, Gokulakannan Somasundaram wrote:
>          I have a requirement, where in before starting the 
> parsing, i need to tell the parser whether the first token is 
> T_FUNCTION / T_TRIGGER(say callType). (i.e) this token is not 
> available as part of the text to be parsed. In Bison, it is just 
> declared with %token T_FUNCTION and %token T_TRIGGER. The 
> scanner makes sure that it emits the callType token before it 
> emits the tokens to be parsed. Although, i am able to come up 
> with some ways to do this, they are too ugly.
>             Can someone provide me a clean way of passing 
> information into the parser and make the scanner emit that as 
> the first token, even before the actual tokens are emitted? I am 
> trying to do this in C-Language target.

If you want to emit custom tokens from the lexer due to arbitrary 
conditions then you need to override the lexer's nextToken method.

You can see an example of doing this (albeit for a different 
reason) here:
   <http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497>

That should hopefully get you started.  (Basically, the first time 
nextToken is called you should create and return your extra token, 
and then on all subsequent calls just call the base method.)


From gokul007 at gmail.com  Sun Dec 28 22:31:18 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 29 Dec 2008 12:01:18 +0530
Subject: [antlr-interest] Passing information into the parser
In-Reply-To: <49586c66.020bca0a.7982.ffffcddbSMTPIN_ADDED@mx.google.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<49586c66.020bca0a.7982.ffffcddbSMTPIN_ADDED@mx.google.com>
Message-ID: <9362e74e0812282231u22b1dc7dkdb722c675354afee@mail.gmail.com>

Hi Gavin,
           Can you also give me some pointers on how to pass arguments into
the parser from external code?

Thanks,
Gokul.

On Mon, Dec 29, 2008 at 11:51 AM, Gavin Lambert <antlr at mirality.co.nz>wrote:

> At 19:13 29/12/2008, Gokulakannan Somasundaram wrote:
>
>>         I have a requirement, where in before starting the parsing, i need
>> to tell the parser whether the first token is T_FUNCTION / T_TRIGGER(say
>> callType). (i.e) this token is not available as part of the text to be
>> parsed. In Bison, it is just declared with %token T_FUNCTION and %token
>> T_TRIGGER. The scanner makes sure that it emits the callType token before it
>> emits the tokens to be parsed. Although, i am able to come up with some ways
>> to do this, they are too ugly.
>>            Can someone provide me a clean way of passing information into
>> the parser and make the scanner emit that as the first token, even before
>> the actual tokens are emitted? I am trying to do this in C-Language target.
>>
>
> If you want to emit custom tokens from the lexer due to arbitrary
> conditions then you need to override the lexer's nextToken method.
>
> You can see an example of doing this (albeit for a different reason) here:
>  <http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497>
>
> That should hopefully get you started.  (Basically, the first time
> nextToken is called you should create and return your extra token, and then
> on all subsequent calls just call the base method.)
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081229/9cf76956/attachment.html 

From antlr at mirality.co.nz  Sun Dec 28 22:37:39 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 29 Dec 2008 19:37:39 +1300
Subject: [antlr-interest] Passing information into the parser
In-Reply-To: <9362e74e0812282231u22b1dc7dkdb722c675354afee@mail.gmail.co
 m>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<49586c66.020bca0a.7982.ffffcddbSMTPIN_ADDED@mx.google.com>
	<9362e74e0812282231u22b1dc7dkdb722c675354afee@mail.gmail.com>
Message-ID: <20081229063751.172053418446@www.antlr.org>

At 19:31 29/12/2008, Gokulakannan Somasundaram wrote:
>Can you also give me some pointers on how to pass arguments into 
>the parser from external code?

Just define an additional constructor, or (easier) add some member 
variables.

Don't forget though that the parser cannot influence the operation 
of the lexer.  The lexer runs independently and up front. 


From jimi at temporal-wave.com  Mon Dec 29 05:19:15 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 29 Dec 2008 05:19:15 -0800
Subject: [antlr-interest] Passing information into the parser
In-Reply-To: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
Message-ID: <4958CE53.9070204@temporal-wave.com>

Gokulakannan Somasundaram wrote:
> Hi,
>          I have a requirement, where in before starting the parsing, i 
> need to tell the parser whether the first token is T_FUNCTION / 
> T_TRIGGER(say callType). (i.e) this token is not available as part of 
> the text to be parsed. In Bison, it is just declared with %token 
> T_FUNCTION and %token T_TRIGGER. The scanner makes sure that it emits 
> the callType token before it emits the tokens to be parsed. Although, 
> i am able to come up with some ways to do this, they are too ugly.
>             Can someone provide me a clean way of passing information 
> into the parser and make the scanner emit that as the first token, 
> even before the actual tokens are emitted? I am trying to do this in 
> C-Language target.
I think that it is unlikely that you need to do this as some of the 
reasons that you would do this in bison are not limitations in ANTLR. 
For parsing you only need a token type and then access to the text that 
this represents, then you may or may not require a custom token type for 
an AST node for your tree.

So, you can change token types in the lexer by looking ahead in the 
character stream and making decisions on what you see (which is 
sometimes required), or more likely, just return something generic like 
ID, and let the parser work out what this represents.

You can emit() multiple tokens if you really need to, but the chances 
are fairly slim that you really need to I think. Gavin pointed out where 
you start, but the code needed to implement this is fairly involved and 
I bet if you just rethink your lexer/parser in an 'ANTLR' way, you will 
find you don't need to do it.

Jim

From mats.ekberg at arcticgroup.se  Mon Dec 29 05:41:05 2008
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Mon, 29 Dec 2008 14:41:05 +0100
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <4958CE53.9070204@temporal-wave.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<4958CE53.9070204@temporal-wave.com>
Message-ID: <1230558065.13005.42.camel@meg-laptop>

Lets say a three letter word in uppercase can mean one of two tings
like:

  10  EUR
where EUR means a monetary unit
  
  10 EUR / TNE
where EUR still means a monetary unit but the three letters TNE now
means a measurement uniot.

How can that be expressed in a grammar??

/mats
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081229/dfa29844/attachment.html 

From g.r.vansickle at att.net  Mon Dec 29 06:10:38 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 29 Dec 2008 08:10:38 -0600
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <1230558065.13005.42.camel@meg-laptop>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com><4958CE53.9070204@temporal-wave.com>
	<1230558065.13005.42.camel@meg-laptop>
Message-ID: <9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>

> From: Mats Ekberg
> 
> Lets say a three letter word in uppercase can mean one of two 
> tings like:
> 
>   10  EUR
> where EUR means a monetary unit
>   
>   10 EUR / TNE
> where EUR still means a monetary unit but the three letters 
> TNE now means a measurement uniot.
> 
> How can that be expressed in a grammar??
> 
> /mats 

Your question must be missing some information, because what you're asking
is the most basic of lexing/parsing issues:


Lexer does something like this:

NUMBER : [0..9]+ ;

EUR : 'EUR' ;

TNE : 'TNE' ;


Parser does something like this:

num_with_monetary_unit_and_optional_per_unit
    : NUMBER monetary_unit ('/' measurement_unit)?
    ;

monetary_unit
    : EUR
    | <<whatever other monies you support>>
    ;

measurement_unit
    : TNE
    | <<whatever other measurement units you support>>
    ;


But was that really your question?

-- 
Gary R. Van Sickle
 


From drshade at gmail.com  Mon Dec 29 06:15:04 2008
From: drshade at gmail.com (Tom Wells)
Date: Mon, 29 Dec 2008 09:15:04 -0500
Subject: [antlr-interest] Building an HTTP parser
Message-ID: <ed756d900812290615q70efb70v531a1f9fff3aa977@mail.gmail.com>

Hello Antlr List

I am working on a project and tasked with writing an HTTP parser in C
running on an embedded hardware device. I am loathe to hand-code this
obviously and it seems like ANTLR might be my best bet for generating
the parser. Does anyone have any opinions as to the suitability of
using something like ANTLR for this kind of parsing, and/or done
anything similar? I am clearly pretty new to writing grammars and most
examples are of programming language parsers so it's difficult to
understand how this might relate to something which seems more
structured, with clearly seperated status, header and body sections,
such as HTTP.

Any suggestions, advice or pointers gladly appreciated!
Thanks,
Tom

-- 
http://www.tomwells.org

From g.r.vansickle at att.net  Mon Dec 29 06:31:30 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Mon, 29 Dec 2008 08:31:30 -0600
Subject: [antlr-interest] Building an HTTP parser
In-Reply-To: <ed756d900812290615q70efb70v531a1f9fff3aa977@mail.gmail.com>
References: <ed756d900812290615q70efb70v531a1f9fff3aa977@mail.gmail.com>
Message-ID: <01440A53DC824C6AB4C99E4E5159FB64@DFW5RB41>

> From: Tom Wells
> 
> Hello Antlr List
> 
> I am working on a project and tasked with writing an HTTP 
> parser in C running on an embedded hardware device.

How embedded?  Are we talking "HC11 with 4K of RAM and 16K of OTP ROM"
embedded or "Coldfire with all the RAM and FLASH I could ever possibly need"
embedded?

> I am 
> loathe to hand-code this obviously and it seems like ANTLR 
> might be my best bet for generating the parser.

If the answer to my question above leans toward the former, I strongly
suggest you roll up those sleeves and get to hand-coding ;-).  If the
latter, ANTLR is probably the best way to go.

> Does anyone 
> have any opinions as to the suitability of using something 
> like ANTLR for this kind of parsing, and/or done anything 
> similar? I am clearly pretty new to writing grammars and most 
> examples are of programming language parsers so it's 
> difficult to understand how this might relate to something 
> which seems more structured, with clearly seperated status, 
> header and body sections, such as HTTP.
> 

ANTLR (and for that matter the LEXes and YACCs of the world) are eminently
suitable for doing exactly what you propose.  The "unstructured vs.
structured" concern you stated is largely beside the point.  Parsing is, by
definition, the taking of a stream of text with some sort of defined
structure and interpreting it.  The only variable is how complex and/or
sloppy the specification of the language in question is.  Parsing HTML with
tools such as ANTLR should be a relatively straightforward endeavor.

> Any suggestions, advice or pointers gladly appreciated!
> Thanks,
> Tom

Hope this helps Tom.

-- 
Gary R. Van Sickle


From drshade at gmail.com  Mon Dec 29 07:02:11 2008
From: drshade at gmail.com (Tom Wells)
Date: Mon, 29 Dec 2008 10:02:11 -0500
Subject: [antlr-interest] Building an HTTP parser
In-Reply-To: <01440A53DC824C6AB4C99E4E5159FB64@DFW5RB41>
References: <ed756d900812290615q70efb70v531a1f9fff3aa977@mail.gmail.com>
	<01440A53DC824C6AB4C99E4E5159FB64@DFW5RB41>
Message-ID: <ed756d900812290702la0faf3cu385006cea237bd64@mail.gmail.com>

> How embedded?  Are we talking "HC11 with 4K of RAM and 16K of OTP ROM"
> embedded or "Coldfire with all the RAM and FLASH I could ever possibly need"
> embedded?

The device is a PCI card running a PowerPC based CPU with approx 140MB
usable RAM, it runs a stripped BSD based kernel cross-compiled with a
custom GCC compiler. I doubt that we will have a problem running the
code generated by ANTLR/C, and brief eye-balling on the genned code
doesn't raise any red flags at this stage.

> ANTLR (and for that matter the LEXes and YACCs of the world) are eminently
> suitable for doing exactly what you propose.  The "unstructured vs.
> structured" concern you stated is largely beside the point.  Parsing is, by
> definition, the taking of a stream of text with some sort of defined
> structure and interpreting it.  The only variable is how complex and/or
> sloppy the specification of the language in question is.  Parsing HTML with
> tools such as ANTLR should be a relatively straightforward endeavor.

I don't care about the HTML contained in the body, and I might only
ever be interested in breaking up POST body data in an HTTP request. I
am however interested in the HTTP status (first line), headers
(KEY=VALUE) and obtaining the body in it's entirety as a blob. The
HTTP spec is pretty daunting, but as far as I can see should be simply
breaking up tokens based on CRLF's in the input.

> Hope this helps Tom.

Thanks Greg, this does indeed. My next steps will be to try and get my
hands on the antlr book, and see if I can hunt down my 10 year old
varsity course notes on BNF and compiler-compilers.

All the best for 2009!

-- 
http://www.tomwells.org

From jimi at temporal-wave.com  Mon Dec 29 07:20:41 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 29 Dec 2008 07:20:41 -0800
Subject: [antlr-interest] Building an HTTP parser
In-Reply-To: <ed756d900812290702la0faf3cu385006cea237bd64@mail.gmail.com>
References: <ed756d900812290615q70efb70v531a1f9fff3aa977@mail.gmail.com>	<01440A53DC824C6AB4C99E4E5159FB64@DFW5RB41>
	<ed756d900812290702la0faf3cu385006cea237bd64@mail.gmail.com>
Message-ID: <4958EAC9.5060704@temporal-wave.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081229/1cfdf5da/attachment.html 

From prabha_pady at comcast.net  Mon Dec 29 08:06:14 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 29 Dec 2008 11:06:14 -0500
Subject: [antlr-interest] if-else if ast question...
Message-ID: <C8978316FCE049F1848CD1F5E7772E58@PADYLAPTOP>


I have an if-else if grammar as follows ( showing only the main 
sections )...

statement
 :  statementExpression ';'  -> statementExpression
 | 'if' boolExpression ifStatementBlock (options {k=1;}:'else' 
elseStmt=statement)?
   -> ^('if' boolExpression ifStatementBlock $elseStmt ?)
 | compoundStatement
 ;

compoundStatement
 : '{' statement* '}' -> statement*
 ;

ifStatementBlock
 : statementExpression ';' -> statementExpression
 | compoundStatement
 ;

boolExpression
 : '(' expression ')' -> expression
 ;

...
...


When my input is


if ( field1.oldValue > 4 or
 ( field2.oldValue == "hello" and field3.newValue != "World" )
   ) {
     loadUsersFromRole(field1.newValue);
} else if ( field2.newValue == "world" ) {
     sendEmail("user1");
     sendEmail("user2");
} else {
     loadData("Hello World");
}


The generated ast is...

(if
     (or
          (> field1 . oldValue 4)
          (and
           (== field2 . oldValue "hello")
           (!= field3 . newValue "World")
          )
     )
     (loadUsersFromRole field1 . newValue)
     (if
      (== field2 . newValue "world")
      (sendEmail "user1")
      (sendEmail "user2")
      (loadData "Hello World")
     )
)


The problem I see are:

1. The else-if node is inside the "if" node.
2. The else node is inside the "else if" node.

How do I make this as if the 3 nodes appear so that one can walk the tree 
and figure out that this is an if/else if/else block ?

Any ideas appreciated.


Thx

-- pady



From padysrini at hotmail.com  Mon Dec 29 09:59:28 2008
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Mon, 29 Dec 2008 12:59:28 -0500
Subject: [antlr-interest] ast or not...
Message-ID: <BAY142-DAV123E3D8A79FD3AC84319B9ACE60@phx.gbl>


Hi,

I am a beginner with antlr and dynamic languages. I am reading terence's 
antlr book. The language I am trying to develop is a simple if-elseif 
language and some actions based on that. This will be interpreted at run 
time. There will be some input ( model objects ) to the parser and then 
based on this data, the if/elseif conditions will be evaluated at runtime, 
and then the actions executed - and some new model objects returned after 
the actions. I dont have to emit any source code. So given this situation, 
would I need to be developing an ast/tree grammer etc ? For simple 
interpreted languages, is an ast/tree grammer etc really needed ? Can I just 
do something like the expression parser with the actions as listed in 
Terence's book ?

Thx

-- pady


From mnedelescu at versasys.com  Mon Dec 29 10:15:52 2008
From: mnedelescu at versasys.com (Marian Nedelescu)
Date: Mon, 29 Dec 2008 13:15:52 -0500
Subject: [antlr-interest] Look ahead for the end of rule token
Message-ID: <F4F5D0614301AD4E89A51DF6EF3B6693A46FDF@exchange.versa.versasys.com>

Hi,

 

I need to parse xdoclet tags that start with @ and doesn't have any end
token.

What I know is that this tag end at EOF or when another tag starts with
'@'.

How can I specify that the ending token of the rule is '@' and then to
put is pack or to look ahead to the next token?

 

I have tried this:

grammar Test;

start :     xdoclet_statement*

      ;

 

xdoclet_statement

      :     '@' (options {greedy=false;}:.)*  END

      ;

 

END   :     ~'@'

      ;

 

 

But it didn't work.

 

Thanks,

Marian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081229/51c4dad4/attachment.html 

From mats.ekberg at arcticgroup.se  Mon Dec 29 10:18:39 2008
From: mats.ekberg at arcticgroup.se (Mats Ekberg)
Date: Mon, 29 Dec 2008 19:18:39 +0100
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<4958CE53.9070204@temporal-wave.com>
	<1230558065.13005.42.camel@meg-laptop>
	<9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>
Message-ID: <1230574719.13005.45.camel@meg-laptop>

Ok, maybe I was a bit unsharp.
Monetary units are expressed as three-letter words; EUR GBP and so on.
Measurement unitts are also expressed with three letters; TNE KGM and so
on.

The only way to know which is which is where the three letters are
located. In one location its a monetary and another its a measurement.

ok?

regards
mats

m?n 2008-12-29 klockan 08:10 -0600 skrev Gary R. Van Sickle:

> > From: Mats Ekberg
> > 
> > Lets say a three letter word in uppercase can mean one of two 
> > tings like:
> > 
> >   10  EUR
> > where EUR means a monetary unit
> >   
> >   10 EUR / TNE
> > where EUR still means a monetary unit but the three letters 
> > TNE now means a measurement uniot.
> > 
> > How can that be expressed in a grammar??
> > 
> > /mats 
> 
> Your question must be missing some information, because what you're asking
> is the most basic of lexing/parsing issues:
> 
> 
> Lexer does something like this:
> 
> NUMBER : [0..9]+ ;
> 
> EUR : 'EUR' ;
> 
> TNE : 'TNE' ;
> 
> 
> Parser does something like this:
> 
> num_with_monetary_unit_and_optional_per_unit
>     : NUMBER monetary_unit ('/' measurement_unit)?
>     ;
> 
> monetary_unit
>     : EUR
>     | <<whatever other monies you support>>
>     ;
> 
> measurement_unit
>     : TNE
>     | <<whatever other measurement units you support>>
>     ;
> 
> 
> But was that really your question?
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081229/49994fd9/attachment.html 

From jared.bunting at peachjean.com  Mon Dec 29 10:54:34 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Mon, 29 Dec 2008 12:54:34 -0600
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <1230574719.13005.45.camel@meg-laptop>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>	<4958CE53.9070204@temporal-wave.com>	<1230558065.13005.42.camel@meg-laptop>	<9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>
	<1230574719.13005.45.camel@meg-laptop>
Message-ID: <49591CEA.3070801@peachjean.com>

If the three-letter words can be anything, can you just define one token 
that matches 3 uppercase letters?  Your parser should be able to tell 
what's what based on context.

maybe something like this?

expression : NUMBER SYMBOL ('/' SYMBOL)? ;

SYMBOL : A-Z A-Z A-Z ;

-Jared

Mats Ekberg wrote:
> Ok, maybe I was a bit unsharp.
> Monetary units are expressed as three-letter words; EUR GBP and so on.
> Measurement unitts are also expressed with three letters; TNE KGM and 
> so on.
>
> The only way to know which is which is where the three letters are 
> located. In one location its a monetary and another its a measurement.
>
> ok?
>
> regards
> mats
>
> m?n 2008-12-29 klockan 08:10 -0600 skrev Gary R. Van Sickle:
>> > From: Mats Ekberg
>> > 
>> > Lets say a three letter word in uppercase can mean one of two 
>> > tings like:
>> > 
>> >   10  EUR
>> > where EUR means a monetary unit
>> >   
>> >   10 EUR / TNE
>> > where EUR still means a monetary unit but the three letters 
>> > TNE now means a measurement uniot.
>> > 
>> > How can that be expressed in a grammar??
>> > 
>> > /mats 
>>
>> Your question must be missing some information, because what you're asking
>> is the most basic of lexing/parsing issues:
>>
>>
>> Lexer does something like this:
>>
>> NUMBER : [0..9]+ ;
>>
>> EUR : 'EUR' ;
>>
>> TNE : 'TNE' ;
>>
>>
>> Parser does something like this:
>>
>> num_with_monetary_unit_and_optional_per_unit
>>     : NUMBER monetary_unit ('/' measurement_unit)?
>>     ;
>>
>> monetary_unit
>>     : EUR
>>     | <<whatever other monies you support>>
>>     ;
>>
>> measurement_unit
>>     : TNE
>>     | <<whatever other measurement units you support>>
>>     ;
>>
>>
>> But was that really your question?
>>
>>     
> ------------------------------------------------------------------------
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>   

From prabha_pady at comcast.net  Mon Dec 29 11:10:55 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 29 Dec 2008 14:10:55 -0500
Subject: [antlr-interest] tree grammar question...
Message-ID: <F10BAC6EF51F4A519BF4DDEEB4616C19@PADYLAPTOP>


In my parser, I have rules like...

statement
 : assignment
 | ifStatement
 | compoundStatement
 ;

compoundStatement
 : '{' statement* '}' -> statement*
 ;

In the equivalent tree grammar, I have

statement
 : assignment
 | ifStatement
 | compoundStatement
 ;

compoundStatement
 : statement* // using the rewrite rule alone...
 ;

But when i build my tree grammar, I get a "mutually left-recursive" rule 
error between statement/compoundStatement. I dont get this error when 
building the parser grammar. I understand the issue, but I am not sure how 
this can be resolved. I saw a similar rule in the java tree grammar in the 
antlr grammar list. Not sure how the tree grammar there will avoid this 
left-recursive error.

Thanks

-- pady


From antlr at mirality.co.nz  Mon Dec 29 13:06:37 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 10:06:37 +1300
Subject: [antlr-interest] Building an HTTP parser
In-Reply-To: <ed756d900812290702la0faf3cu385006cea237bd64@mail.gmail.com
 >
References: <ed756d900812290615q70efb70v531a1f9fff3aa977@mail.gmail.com>
	<01440A53DC824C6AB4C99E4E5159FB64@DFW5RB41>
	<ed756d900812290702la0faf3cu385006cea237bd64@mail.gmail.com>
Message-ID: <20081229210649.4F6AA3418447@www.antlr.org>

At 04:02 30/12/2008, Tom Wells wrote:
 >I don't care about the HTML contained in the body, and I might
 >only ever be interested in breaking up POST body data in an
 >HTTP request. I am however interested in the HTTP status (first
 >line), headers (KEY=VALUE) and obtaining the body in it's
 >entirety as a blob. The HTTP spec is pretty daunting, but as
 >far as I can see should be simply breaking up tokens based on
 >CRLF's in the input.

Hand rolling a parser for an HTTP/1.0 envelope (which is usually 
sufficient) is fairly trivial, although the spec can be a bit hard 
to read in places.  (I've done it a few times before.)

Supporting HTTP/1.1 (with chunked encoding and persistent 
connections) is a bit trickier, but probably still doable.  (I 
usually haven't bothered though, but it depends on what your 
specific requirements are.)

But as Jim said, there are quite a few HTTP-capable libraries 
already out there, unsurprisingly enough.  He already mentioned 
libcurl; their own site mentions a few more:
   <http://curl.haxx.se/libcurl/competitors.html>

Regardless, while it's certainly *possible* to parse HTTP in 
ANTLR, it's probably not something I would use it for; it seems 
like overkill.


From antlr at mirality.co.nz  Mon Dec 29 13:14:27 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 10:14:27 +1300
Subject: [antlr-interest] ast or not...
In-Reply-To: <BAY142-DAV123E3D8A79FD3AC84319B9ACE60@phx.gbl>
References: <BAY142-DAV123E3D8A79FD3AC84319B9ACE60@phx.gbl>
Message-ID: <20081229211440.DB1163418447@www.antlr.org>

At 06:59 30/12/2008, Pady Srinivasan wrote:
 >I am a beginner with antlr and dynamic languages. I am reading
 >terence's antlr book. The language I am trying to develop is a
 >simple if-elseif language and some actions based on that.
[...]
 >So given this situation, would I need to be developing an
 >ast/tree grammer etc ? For simple interpreted languages, is
 >an ast/tree grammer etc really needed ?

You never *need* an AST and/or tree grammar, and using the former 
does not imply you need to use the latter (though you can't use 
the latter without the former).  They're just options available 
for use if they are more convenient or tidier than the 
alternatives.

When I first started using ANTLR, I carried out all the actions in 
the parser directly, since I found that simpler to work with and I 
didn't have to worry about figuring out how ASTs and tree grammars 
worked.  Now that I'm more experienced with ANTLR, I tend to 
favour using ASTs and tree grammars, mostly because it leaves the 
parser grammar looking a bit tidier, and it opens up some 
possibilities for doing tree manipulation to locate or rearrange 
some constructs (which admittedly I haven't made much use of as 
yet, but the theory sounds cool).

But basically: just use whatever you're most comfortable with.


From antlr at mirality.co.nz  Mon Dec 29 13:18:19 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 10:18:19 +1300
Subject: [antlr-interest] Look ahead for the end of rule token
In-Reply-To: <F4F5D0614301AD4E89A51DF6EF3B6693A46FDF@exchange.versa.vers
	asys.com>
References: <F4F5D0614301AD4E89A51DF6EF3B6693A46FDF@exchange.versa.versasys.com>
Message-ID: <20081229211829.80C1C3418447@www.antlr.org>

At 07:15 30/12/2008, Marian Nedelescu wrote:
>I need to parse xdoclet tags that start with @ and doesn't have 
>any end token.
>What I know is that this tag end at EOF or when another tag 
>starts with '@'.
>How can I specify that the ending token of the rule is '@' and 
>then to put is pack or to look ahead to the next token?

xdoclet_statement
     :  '@' (~('@' | EOF))*
     ;

Bear in mind though that since this is a parser rule, your lexer 
must still be able to generate some kind of token for all the 
content that will be matched by this rule.


From prabha_pady at comcast.net  Mon Dec 29 13:19:12 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 29 Dec 2008 16:19:12 -0500
Subject: [antlr-interest] ast or not...
References: <BAY142-DAV123E3D8A79FD3AC84319B9ACE60@phx.gbl>
	<20081229211440.DB1163418447@www.antlr.org>
Message-ID: <29A82A898A2F4C158826853C90810137@PADYLAPTOP>


Thx for the encouraging response. I was almost going to give up because the 
tree grammar syntax is just too confusing.
Meaning, merging the rewrite rules etc is just not obvious and intuitive.


Thanks

-- pady


----- Original Message ----- 
From: "Gavin Lambert" <antlr at mirality.co.nz>
To: "Pady Srinivasan" <padysrini at hotmail.com>; <antlr-interest at antlr.org>
Sent: Monday, December 29, 2008 4:14 PM
Subject: Re: [antlr-interest] ast or not...


> At 06:59 30/12/2008, Pady Srinivasan wrote:
> >I am a beginner with antlr and dynamic languages. I am reading
> >terence's antlr book. The language I am trying to develop is a
> >simple if-elseif language and some actions based on that.
> [...]
> >So given this situation, would I need to be developing an
> >ast/tree grammer etc ? For simple interpreted languages, is
> >an ast/tree grammer etc really needed ?
>
> You never *need* an AST and/or tree grammar, and using the former
> does not imply you need to use the latter (though you can't use
> the latter without the former).  They're just options available
> for use if they are more convenient or tidier than the
> alternatives.
>
> When I first started using ANTLR, I carried out all the actions in
> the parser directly, since I found that simpler to work with and I
> didn't have to worry about figuring out how ASTs and tree grammars
> worked.  Now that I'm more experienced with ANTLR, I tend to
> favour using ASTs and tree grammars, mostly because it leaves the
> parser grammar looking a bit tidier, and it opens up some
> possibilities for doing tree manipulation to locate or rearrange
> some constructs (which admittedly I haven't made much use of as
> yet, but the theory sounds cool).
>
> But basically: just use whatever you're most comfortable with.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 


From antlr at mirality.co.nz  Mon Dec 29 13:23:00 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 10:23:00 +1300
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <1230574719.13005.45.camel@meg-laptop>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<4958CE53.9070204@temporal-wave.com>
	<1230558065.13005.42.camel@meg-laptop>
	<9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>
	<1230574719.13005.45.camel@meg-laptop>
Message-ID: <20081229212313.9B8B73418447@www.antlr.org>

At 07:18 30/12/2008, Mats Ekberg wrote:
>Ok, maybe I was a bit unsharp.
>Monetary units are expressed as three-letter words; EUR GBP and 
>so on.
>Measurement unitts are also expressed with three letters; TNE KGM 
>and so on.
>
>The only way to know which is which is where the three letters 
>are located. In one location its a monetary and another its a 
>measurement.

As Gary said earlier, I'm not sure why you think this is a 
problem.

If the complete set of possible monetary units and measurement 
units are known in advance, then you can make them keywords 
recognised by the lexer (as Gary's email showed); then at parse 
time you can make sure that they only used a valid measurement 
unit in the spot where you were expecting one, and so forth.

If the complete set of units is not known in advance, then you can 
simply match them in the lexer as an id (whether general form or 
restricted to exactly three uppercase letters depends on what else 
you need your lexer to match) and have the parser figure out what 
they mean based on the context (though you wouldn't be able to 
validate in that case, obviously).


From padysrini at hotmail.com  Mon Dec 29 13:27:12 2008
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Mon, 29 Dec 2008 16:27:12 -0500
Subject: [antlr-interest] error in tree grammar syntax...
Message-ID: <BAY142-DAV2CAB8D4298A0630FEFF3CACE60@phx.gbl>


I have a parser grammar as...

statement
 : assignment
 | 'if' boolExpression ( assignment | '{' s1+=statement* '}')
     (options {k=1;}:'else' ( s2=statement | '{' s3=statement '}' ) )?
   -> ^('if' boolExpression assignment? $s1* ^('else' ($s2)? ($s3)? )? )
 ;



When I try something like this in my tree grammar, I get an error:

statement
 : assignment
 | ^('if' boolExpression assignment? statement* ^('else' (statement)? 
(statement)? )? )
 ;


error(100): GwfWalker.g:32:85: syntax error: antlr: GwfWalker.g:32:85: 
expecting RPAREN, found '?'
error(100): GwfWalker.g:32:87: syntax error: antlr: GwfWalker.g:32:87: 
expecting SEMI, found ')'
error(106): GwfWalker.g:26:4: reference to undefined rule: statement


Thx

-- pady 


From antlr at mirality.co.nz  Mon Dec 29 13:28:08 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 10:28:08 +1300
Subject: [antlr-interest] tree grammar question...
In-Reply-To: <F10BAC6EF51F4A519BF4DDEEB4616C19@PADYLAPTOP>
References: <F10BAC6EF51F4A519BF4DDEEB4616C19@PADYLAPTOP>
Message-ID: <20081229212819.7BE5834184C2@www.antlr.org>

At 08:10 30/12/2008, pady wrote:
 >In my parser, I have rules like...
 >
 >statement
 > : assignment
 > | ifStatement
 > | compoundStatement
 > ;
 >
 >compoundStatement
 > : '{' statement* '}' -> statement*
 > ;
 >
 >In the equivalent tree grammar, I have
 >
 >statement
 > : assignment
 > | ifStatement
 > | compoundStatement
 > ;
 >
 >compoundStatement
 > : statement* // using the rewrite rule alone...
 > ;
 >
 >But when i build my tree grammar, I get a "mutually 
left-recursive"
 >rule error between statement/compoundStatement. I dont get this
 >error when building the parser grammar. I understand the issue, 
but
 >I am not sure how this can be resolved. I saw a similar rule in 
the
 >java tree grammar in the antlr grammar list. Not sure how the 
tree
 >grammar there will avoid this left-recursive error.

You need to include a bit more structure in the AST, so that it 
doesn't get itself into an infinite loop trying to work out where 
the compoundStatements end and the statements begin.  The simplest 
way to do that is to use an imaginary token:

tokens { BLOCK; }

compoundStatement
   : '{' statement* '}' -> ^(BLOCK statement*)
   ;

...

compoundStatement
   : ^(BLOCK statement*)
   ;


From prabha_pady at comcast.net  Mon Dec 29 13:31:25 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 29 Dec 2008 16:31:25 -0500
Subject: [antlr-interest] tree grammar question...
Message-ID: <6F8ABD8125EB4935910181E78A22F0F8@PADYLAPTOP>


Thank you. 


-- pady


----- Original Message ----- 
From: "Gavin Lambert" <antlr at mirality.co.nz>
To: "pady" <prabha_pady at comcast.net>; <antlr-interest at antlr.org>
Sent: Monday, December 29, 2008 4:28 PM
Subject: Re: [antlr-interest] tree grammar question...


> At 08:10 30/12/2008, pady wrote:
> >In my parser, I have rules like...
> >
> >statement
> > : assignment
> > | ifStatement
> > | compoundStatement
> > ;
> >
> >compoundStatement
> > : '{' statement* '}' -> statement*
> > ;
> >
> >In the equivalent tree grammar, I have
> >
> >statement
> > : assignment
> > | ifStatement
> > | compoundStatement
> > ;
> >
> >compoundStatement
> > : statement* // using the rewrite rule alone...
> > ;
> >
> >But when i build my tree grammar, I get a "mutually 
> left-recursive"
> >rule error between statement/compoundStatement. I dont get this
> >error when building the parser grammar. I understand the issue, 
> but
> >I am not sure how this can be resolved. I saw a similar rule in 
> the
> >java tree grammar in the antlr grammar list. Not sure how the 
> tree
> >grammar there will avoid this left-recursive error.
> 
> You need to include a bit more structure in the AST, so that it 
> doesn't get itself into an infinite loop trying to work out where 
> the compoundStatements end and the statements begin.  The simplest 
> way to do that is to use an imaginary token:
> 
> tokens { BLOCK; }
> 
> compoundStatement
>   : '{' statement* '}' -> ^(BLOCK statement*)
>   ;
> 
> ...
> 
> compoundStatement
>   : ^(BLOCK statement*)
>   ;
>

From laurent.caillette at gmail.com  Mon Dec 29 13:32:05 2008
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Mon, 29 Dec 2008 22:32:05 +0100
Subject: [antlr-interest] ast or not...
In-Reply-To: <20081229211440.DB1163418447@www.antlr.org>
References: <BAY142-DAV123E3D8A79FD3AC84319B9ACE60@phx.gbl>
	<20081229211440.DB1163418447@www.antlr.org>
Message-ID: <3b7c64070812291332w6bb9bb9bva2ad7db6f4ac77c1@mail.gmail.com>

Hi all,

I've developed a small language of my own, based on an ANTLR grammar.
It is twofold: there is a wiki-like grammar for parsing source
documents (named Parts) and a very simple imperative language for
assembling the Parts in a single document. Both are in the same file
because they have some features in common and imports don't work as I
expected in ANTLR-3.1.1 + ANTLRWorks.

The tree grammar made my day because its result is very close to what
I need to feed the document renderer (transformation to XML through
SAX events is trivial). Understanding the rewrite rules is definitely
worth the effort. Don't forget to use ANTLRWorks in debug mode, as it
provides a nice graphical display of generated AST.

I found that instead of expressing everything in a very complex
grammar, it's better to twist the AST afterwards. This also helps
ANTLR to generate clearer error messages. For example, I don't try to
define a paragraph as a subrule of chapter rule. Instead, chapter and
paragraph rules appear at the same level. I attach paragraphs to the
chapters during AST postprocessing.

http://novelang.sf.net
http://github.com/caillette/novelang/tree/master/src/antlr/Novelang.g

Hope this helps,

c.

On Mon, Dec 29, 2008 at 10:14 PM, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 06:59 30/12/2008, Pady Srinivasan wrote:
>  >I am a beginner with antlr and dynamic languages. I am reading
>  >terence's antlr book. The language I am trying to develop is a
>  >simple if-elseif language and some actions based on that.
> [...]
>  >So given this situation, would I need to be developing an
>  >ast/tree grammer etc ? For simple interpreted languages, is
>  >an ast/tree grammer etc really needed ?
>
> You never *need* an AST and/or tree grammar, and using the former
> does not imply you need to use the latter (though you can't use
> the latter without the former).  They're just options available
> for use if they are more convenient or tidier than the
> alternatives.
>
> When I first started using ANTLR, I carried out all the actions in
> the parser directly, since I found that simpler to work with and I
> didn't have to worry about figuring out how ASTs and tree grammars
> worked.  Now that I'm more experienced with ANTLR, I tend to
> favour using ASTs and tree grammars, mostly because it leaves the
> parser grammar looking a bit tidier, and it opens up some
> possibilities for doing tree manipulation to locate or rearrange
> some constructs (which admittedly I haven't made much use of as
> yet, but the theory sounds cool).
>
> But basically: just use whatever you're most comfortable with.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From antlr at mirality.co.nz  Mon Dec 29 13:41:26 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 10:41:26 +1300
Subject: [antlr-interest] error in tree grammar syntax...
In-Reply-To: <BAY142-DAV2CAB8D4298A0630FEFF3CACE60@phx.gbl>
References: <BAY142-DAV2CAB8D4298A0630FEFF3CACE60@phx.gbl>
Message-ID: <20081229214135.86BA73418490@www.antlr.org>

At 10:27 30/12/2008, Pady Srinivasan wrote:
 >When I try something like this in my tree grammar, I get an 
error:
 >
 >statement
 > : assignment
 > | ^('if' boolExpression assignment? statement* ^('else'
 >   (statement)? (statement)? )? )
 > ;
 >
 >
 >error(100): GwfWalker.g:32:85: syntax error: antlr:
 >GwfWalker.g:32:85: expecting RPAREN, found '?'
 >error(100): GwfWalker.g:32:87: syntax error: antlr:
 >GwfWalker.g:32:87: expecting SEMI, found ')'
 >error(106): GwfWalker.g:26:4: reference to undefined rule:
 >statement

Did you try removing the parentheses around "statement"?

Also, you're going to have trouble with a construct like 
that.  Having two optional statements in series -- when only one 
statement is present in the input tree, which is it?  The first or 
the second?  You need to either put more structure in your AST or 
change the nesting so that it's obvious which one is "more 
optional" than the other, when only one of the two is present.

You'll have similar trouble with "assignment? statement*", since 
an assignment is a statement.  This is a redundancy, and those 
almost always lead to ambiguity and weird behaviour.


From prabha_pady at comcast.net  Mon Dec 29 13:51:03 2008
From: prabha_pady at comcast.net (pady)
Date: Mon, 29 Dec 2008 16:51:03 -0500
Subject: [antlr-interest] error in tree grammar syntax...
References: <BAY142-DAV2CAB8D4298A0630FEFF3CACE60@phx.gbl>
	<20081229214135.86BA73418490@www.antlr.org>
Message-ID: <A5AA062F368F461DAF41AB18C1BB8357@PADYLAPTOP>


I was under the assumption that the paranthesis is what makes the parser 
choose different paths...so to differentiate input like

if ( bool )
  var = val;  // assignment

if ( bool ) {
  var = val; // assignment
  if ( bool2 ) // statement
   var2 = val2; // assignment
}

I have unit tested some cases like above and it seems to be working. About 
the "optional statements", this is where my understanding on rewrite rules 
is poor...i dont understand how to differentiate the 2 optional statements 
using more structure in the ast...ie the syntax
to use is what i am not clear on.


Thanks

-- pady


----- Original Message ----- 
From: "Gavin Lambert" <antlr at mirality.co.nz>
To: "Pady Srinivasan" <padysrini at hotmail.com>; <antlr-interest at antlr.org>
Sent: Monday, December 29, 2008 4:41 PM
Subject: Re: [antlr-interest] error in tree grammar syntax...


> At 10:27 30/12/2008, Pady Srinivasan wrote:
> >When I try something like this in my tree grammar, I get an
> error:
> >
> >statement
> > : assignment
> > | ^('if' boolExpression assignment? statement* ^('else'
> >   (statement)? (statement)? )? )
> > ;
> >
> >
> >error(100): GwfWalker.g:32:85: syntax error: antlr:
> >GwfWalker.g:32:85: expecting RPAREN, found '?'
> >error(100): GwfWalker.g:32:87: syntax error: antlr:
> >GwfWalker.g:32:87: expecting SEMI, found ')'
> >error(106): GwfWalker.g:26:4: reference to undefined rule:
> >statement
>
> Did you try removing the parentheses around "statement"?
>
> Also, you're going to have trouble with a construct like
> that.  Having two optional statements in series -- when only one
> statement is present in the input tree, which is it?  The first or
> the second?  You need to either put more structure in your AST or
> change the nesting so that it's obvious which one is "more
> optional" than the other, when only one of the two is present.
>
> You'll have similar trouble with "assignment? statement*", since
> an assignment is a statement.  This is a redundancy, and those
> almost always lead to ambiguity and weird behaviour.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address 


From skisoid at ut.ee  Mon Dec 29 13:56:58 2008
From: skisoid at ut.ee (Andrus Salumets)
Date: Mon, 29 Dec 2008 23:56:58 +0200
Subject: [antlr-interest] Java-to-Java transformation/refactoring
Message-ID: <495947AA.7080806@ut.ee>


Hi,

I'm an ANTLR(and parsers) beginner and I'm trying to translate
Java JDBC code into Spring JdbcTemplate. I use
a Java tree grammar available in the ANTLR site.

I'll get it probably done with my current attept by
using the rewrite option and StringTemplates but it
doesn't feel right because it's kind of string manipulation.
I suspect that some kind of tree transformation would
be a better tool...

So my question is:
Is there any better solution doing this kind of
refactoring using ANTLR?

Thanks in advance,
Andrus Salumets

From antlr at mirality.co.nz  Mon Dec 29 14:18:25 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 11:18:25 +1300
Subject: [antlr-interest] error in tree grammar syntax...
In-Reply-To: <A5AA062F368F461DAF41AB18C1BB8357@PADYLAPTOP>
References: <BAY142-DAV2CAB8D4298A0630FEFF3CACE60@phx.gbl>
	<20081229214135.86BA73418490@www.antlr.org>
	<A5AA062F368F461DAF41AB18C1BB8357@PADYLAPTOP>
Message-ID: <20081229221836.240D23418470@www.antlr.org>

At 10:51 30/12/2008, pady wrote:
 >I was under the assumption that the paranthesis is what makes 
the
 >parser choose different paths...so to differentiate input like
[...]
 >About the "optional statements", this is where my understanding 
on
 >rewrite rules is poor...i dont understand how to differentiate
 >the 2 optional statements using more structure in the ast...ie
 >the syntax to use is what i am not clear on.

statement
   : assignment
   | ^('if' boolExpression statement*
       ^('else' (statement statement?)? )? )
   ;

This will permit zero, one, or two statements in the "else" 
section; if only one statement is supplied then it will 
unambiguously be recognised as the first of the two.  I also 
removed the redundant assignment from the "if" section.

I'm still not sure why you'd want to define the else block like 
that, though; generally the if and else blocks should be symmetric 
-- they should both either only accept one statement (which might 
be a composite block) or any number of statements (depending on 
how you choose to write the parser rule and how you want to 
structure the AST).  It's a little strange to make one side open 
and the other restricted like that.


From prabha_pady at comcast.net  Mon Dec 29 21:55:53 2008
From: prabha_pady at comcast.net (pady)
Date: Tue, 30 Dec 2008 00:55:53 -0500
Subject: [antlr-interest] skipping tokens...
Message-ID: <79D3E8CB6FD24C90A0E0740160863761@PADYLAPTOP>


I am a beginner antlr user. In my tree grammar, I have a rule like...

ifStatement

: ^('if' b=boolExpression statementBlock ^(ELSE statement) )

;



if the boolExpression returns false, I would like to skip execution of 
"statementBlock" but make the current token move to the "else" part for 
matching. Can this be done using antlr syntax ? Or should i have to do this 
through some java code ( ie passing the status to statementBlock and all its 
children etc ).



Thanks

-- pady


From antlr at mirality.co.nz  Mon Dec 29 23:55:11 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 30 Dec 2008 20:55:11 +1300
Subject: [antlr-interest] skipping tokens...
In-Reply-To: <79D3E8CB6FD24C90A0E0740160863761@PADYLAPTOP>
References: <79D3E8CB6FD24C90A0E0740160863761@PADYLAPTOP>
Message-ID: <20081230075523.9CB17341845C@www.antlr.org>

At 18:55 30/12/2008, pady wrote:
 >ifStatement
 >: ^('if' b=boolExpression statementBlock ^(ELSE statement) )
 >;
 >
 >if the boolExpression returns false, I would like to skip
 >execution of "statementBlock" but make the current token move
 >to the "else" part for matching. Can this be done using antlr
 >syntax ? Or should i have to do this through some java code
 >( ie passing the status to statementBlock and all its
 >children etc ).

That's certainly one way you could do it (and passing parameters 
into subrules is part of the standard ANTLR syntax), but provided 
that the statementBlock consists of exactly one subtree you can 
write something like this:

ifStatement
   :  ^('if' b=boolExpression
        ( { $b.value }? => statementBlock ^(ELSE .        )
        |                  .              ^(ELSE statement)
        )
      )
   ;


From gokul007 at gmail.com  Tue Dec 30 03:11:14 2008
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 30 Dec 2008 16:41:14 +0530
Subject: [antlr-interest] Passing information into the parser
In-Reply-To: <4958CE53.9070204@temporal-wave.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<4958CE53.9070204@temporal-wave.com>
Message-ID: <9362e74e0812300311g3be56fc6pa5968fb280be9325@mail.gmail.com>

Hi Jim,
        In this case, the problem goes like this
The client will request
-- Execute this Object.

The object has a type and a text(to be parsed). So the parsing depends on
the type of the object. So in the code, external to the parser, i have to
find out the type of the object. In Bison, this type is being sent as the
first token. After attempting at it for sometime, i decided to store it as
one of the variables inside the Parser Scope(as this is a C-language Target
and requires thread-safety).  So there will be a function in members that
will set this variable, before parsing starts and i will query it during
parsing.

Please let me know, whether my approach is right.

I have just completed the grammar part.I will post the entire source after
completing it. I also would like to know, if i can post the grammar in the
"Grammars section".

Thanks,
Gokul.

On Mon, Dec 29, 2008 at 6:49 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Gokulakannan Somasundaram wrote:
> > Hi,
> >          I have a requirement, where in before starting the parsing, i
> > need to tell the parser whether the first token is T_FUNCTION /
> > T_TRIGGER(say callType). (i.e) this token is not available as part of
> > the text to be parsed. In Bison, it is just declared with %token
> > T_FUNCTION and %token T_TRIGGER. The scanner makes sure that it emits
> > the callType token before it emits the tokens to be parsed. Although,
> > i am able to come up with some ways to do this, they are too ugly.
> >             Can someone provide me a clean way of passing information
> > into the parser and make the scanner emit that as the first token,
> > even before the actual tokens are emitted? I am trying to do this in
> > C-Language target.
> I think that it is unlikely that you need to do this as some of the
> reasons that you would do this in bison are not limitations in ANTLR.
> For parsing you only need a token type and then access to the text that
> this represents, then you may or may not require a custom token type for
> an AST node for your tree.
>
> So, you can change token types in the lexer by looking ahead in the
> character stream and making decisions on what you see (which is
> sometimes required), or more likely, just return something generic like
> ID, and let the parser work out what this represents.
>
> You can emit() multiple tokens if you really need to, but the chances
> are fairly slim that you really need to I think. Gavin pointed out where
> you start, but the code needed to implement this is fairly involved and
> I bet if you just rethink your lexer/parser in an 'ANTLR' way, you will
> find you don't need to do it.
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081230/8f84db40/attachment.html 

From cowang at comcast.net  Tue Dec 30 07:16:32 2008
From: cowang at comcast.net (George S. Cowan)
Date: Tue, 30 Dec 2008 10:16:32 -0500
Subject: [antlr-interest] Bug Report: Composite Grammar does not delegate
	Lexer methods (like mLETTER)
Message-ID: <C908F7E09D4146AF80189241732A8466@gsce0ae1cfad8d>

The generated lexer for composite grammars does not generate the delegation
methods for lexer rules in the topmost grammar. This is only a problem if
one is directly calling the lexer methods, for instance, in unit testing
and, in particular, testing lexer rules in gUnit.
 
Here is the example grammar from the Composite Grammar page (
<http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars>
http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars) with slight
modifications so it will work:
 
-------------------- begin L.g --------------
lexer grammar L ;
LETTER : 'a'..'z' ;
---- begin P1.g  ---
parser grammar P1 ;
letter : LETTER ;
spaces : ' '+ ;
--- begin P2.g ---
parser grammar P2 ;
import P1 ;
letters : letter+ ;
--------- begin C.g ---------
grammar C ;
import L, P2 ;
stuff : ( letters spaces )+ ;
--------- end grammar files ------------
 
Here is the gUnit test file and the exception:
------ CTest.testsuite -----
gunit C;
LETTER
: "a"   OK
  "A"   FAIL
------------------------ runtime exception -------------------------------
java.lang.NoSuchMethodException: CLexer.mLETTER()
        at java.lang.Class.getMethod(Unknown Source)
        at org.antlr.gunit.gUnitExecuter.runLexer(gUnitExecuter.java:211)
        at
org.antlr.gunit.gUnitExecuter.runCorrectParser(gUnitExecuter.java:131)
        at
org.antlr.gunit.gUnitExecuter.executeTests(gUnitExecuter.java:149)
        at org.antlr.gunit.gUnitExecuter.execTest(gUnitExecuter.java:97)
        at org.antlr.gunit.Interp.main(Interp.java:62)
------------------------ END
--------------------------------------------------

 
I ran my tests on Windows XP SP3 using the following command lines:
 
del /Q work\*
java -cp C:\Java\ANTLR\antlr-3.1.1.jar org.antlr.Tool -o work C.g.
cd work
javac -cp C:\Java\ANTLR\antlr-3.1.1.jar;. *.java
java -cp C:\Java\ANTLR\gunit-1.0.4.jar;C:\Java\ANTLR\antlr-3.1.1.jar;.
org.antlr.gunit.Interp ..\CTest.testsuite
 
 
Thanks for ANTLR. I'm looking forward to making some real progress in my
language work.
 
Regards,
George
 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081230/c3b515f0/attachment.html 

From jimi at temporal-wave.com  Tue Dec 30 09:39:24 2008
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 30 Dec 2008 09:39:24 -0800
Subject: [antlr-interest] Passing information into the parser
In-Reply-To: <9362e74e0812300311g3be56fc6pa5968fb280be9325@mail.gmail.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>	
	<4958CE53.9070204@temporal-wave.com>
	<9362e74e0812300311g3be56fc6pa5968fb280be9325@mail.gmail.com>
Message-ID: <495A5CCC.6080008@temporal-wave.com>

Gokulakannan Somasundaram wrote:
> Hi Jim,
>         In this case, the problem goes like this
> The client will request
> -- Execute this Object.
>
> The object has a type and a text(to be parsed). So the parsing depends 
> on the type of the object. So in the code, external to the parser, i 
> have to find out the type of the object. In Bison, this type is being 
> sent as the first token. After attempting at it for sometime, i 
> decided to store it as one of the variables inside the Parser Scope(as 
> this is a C-language Target and requires thread-safety).  So there 
> will be a function in members that will set this variable, before 
> parsing starts and i will query it during parsing.
>  
> Please let me know, whether my approach is right.
>
> I have just completed the grammar part.I will post the entire source 
> after completing it. I also would like to know, if i can post the 
> grammar in the "Grammars section".
There is nothing wrong with that approach really. Other ways would be to 
declare the invocation rule as having an input parameter and set the 
flag in the invocation rule. This keeps the parser scope variables 
isolated from external code. This is really just pretending to be 
objects though and there is no  requirement to do it that way.

Anyone can submit a grammar for posting to the grammars section. Make 
sure you add the license you want it to be covered by. If you just want 
anyone to use it for anything, then you can use the BSD license that 
ANTLR uses.

Jim

From parrt at cs.usfca.edu  Tue Dec 30 10:56:43 2008
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 30 Dec 2008 10:56:43 -0800
Subject: [antlr-interest] Bug Report: Composite Grammar does not
	delegate Lexer methods (like mLETTER)
In-Reply-To: <C908F7E09D4146AF80189241732A8466@gsce0ae1cfad8d>
References: <C908F7E09D4146AF80189241732A8466@gsce0ae1cfad8d>
Message-ID: <B2BDD11D-779A-477B-ACDA-C9653D74CC88@cs.usfca.edu>

Hi. you'll have to call the lexer methods directly on the generated  
lexer not using delegates I think
Ter
On Dec 30, 2008, at 7:16 AM, George S. Cowan wrote:

> The generated lexer for composite grammars does not generate the  
> delegation methods for lexer rules in the topmost grammar. This is  
> only a problem if one is directly calling the lexer methods, for  
> instance, in unit testing and, in particular, testing lexer rules in  
> gUnit.
>
> Here is the example grammar from the Composite Grammar page (http://www.antlr.org/wiki/display/ANTLR3/Composite+Grammars 
> ) with slight modifications so it will work:
>
> -------------------- begin L.g --------------
> lexer grammar L ;
> LETTER : 'a'..'z' ;
> ---- begin P1.g  ---
> parser grammar P1 ;
> letter : LETTER ;
> spaces : ' '+ ;
> --- begin P2.g ---
> parser grammar P2 ;
> import P1 ;
> letters : letter+ ;
> --------- begin C.g ---------
> grammar C ;
> import L, P2 ;
> stuff : ( letters spaces )+ ;
> --------- end grammar files ------------
>
> Here is the gUnit test file and the exception:
> ------ CTest.testsuite -----
> gunit C;
> LETTER
> : "a"   OK
>   "A"   FAIL
> ------------------------ runtime exception  
> -------------------------------
> java.lang.NoSuchMethodException: CLexer.mLETTER()
>         at java.lang.Class.getMethod(Unknown Source)
>         at org.antlr.gunit.gUnitExecuter.runLexer(gUnitExecuter.java: 
> 211)
>         at  
> org.antlr.gunit.gUnitExecuter.runCorrectParser(gUnitExecuter.java:131)
>         at  
> org.antlr.gunit.gUnitExecuter.executeTests(gUnitExecuter.java:149)
>         at org.antlr.gunit.gUnitExecuter.execTest(gUnitExecuter.java: 
> 97)
>         at org.antlr.gunit.Interp.main(Interp.java:62)
> ------------------------ END  
> --------------------------------------------------
>
>
> I ran my tests on Windows XP SP3 using the following command lines:
>
> del /Q work\*
> java -cp C:\Java\ANTLR\antlr-3.1.1.jar org.antlr.Tool -o work C.g.
> cd work
> javac -cp C:\Java\ANTLR\antlr-3.1.1.jar;. *.java
> java -cp C:\Java\ANTLR\gunit-1.0.4.jar;C:\Java\ANTLR 
> \antlr-3.1.1.jar;. org.antlr.gunit.Interp ..\CTest.testsuite
>
>
> Thanks for ANTLR. I'm looking forward to making some real progress  
> in my language work.
>
> Regards,
> George
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ddewaleffe at gmail.com  Tue Dec 30 12:08:32 2008
From: ddewaleffe at gmail.com (Dominique de Waleffe)
Date: Tue, 30 Dec 2008 21:08:32 +0100
Subject: [antlr-interest] ANTLR seminar in Europe
In-Reply-To: <32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
References: <f7372f920812171557s63e2e395tf3d8a65b758c95b6@mail.gmail.com>
	<09A01844-0B4F-4581-BD23-8499D0BBFC19@cs.usfca.edu>
	<32442665.89409.1229559930499.JavaMail.adm-moff@moffice9.nsc.no>
Message-ID: <ec0e752e0812301208w3e68afe5v5fdcd1b28621010c@mail.gmail.com>

I vote for Belgium... lots of easy connection by train to France,
Germany, The Netherlands, UK....
Very central place...

D.

On Thu, Dec 18, 2008 at 1:25 AM, Michael Fogeborg <micke at online.no> wrote:
> What about an Antlr seminar in Europe ?
> Maybe in Finland ?
>

--
Dominique de Waleffe
ddewaleffe -at- gmail -dot- com
domi -at- dewaleffe -dot- org

From padysrini at hotmail.com  Tue Dec 30 15:47:19 2008
From: padysrini at hotmail.com (Pady Srinivasan)
Date: Tue, 30 Dec 2008 18:47:19 -0500
Subject: [antlr-interest] passing parameters...
Message-ID: <BAY142-DAV5DA66CF9F3640CCE51D63ACE70@phx.gbl>


In my tree grammar, I have rules as follows:

statement
 : ifStatement | statementBlock[true]
 ;

statementBlock[boolean result]
 : assignment[$result]  | compoundStatement[$result]
 ;

compoundStatement[boolean result]
 : ({$result}?=> ^(BLOCK statement*) )
 ;

assignment[boolean result]
 : ({$result}?=> ^(EVAL statementExpression) )
 ;


In the generated java class, I see code generated in the statement() method 
as follows: ( and is not compiling )

..
             else if ( (LA2_0==BLOCK||LA2_0==EVAL) && ((result))) {
                 alt2=2;
            }
..

Where did the "result" variable come into the statement() method ? I am 
confused on whether I am not passing the params correctly ( although I saw a 
similar example in antlr book for passing parameters ).



Thanks

-- pady 


From antlr at mirality.co.nz  Tue Dec 30 16:32:35 2008
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 31 Dec 2008 13:32:35 +1300
Subject: [antlr-interest] passing parameters...
In-Reply-To: <BAY142-DAV5DA66CF9F3640CCE51D63ACE70@phx.gbl>
References: <BAY142-DAV5DA66CF9F3640CCE51D63ACE70@phx.gbl>
Message-ID: <20081231003245.7ECAE341845D@www.antlr.org>

At 12:47 31/12/2008, Pady Srinivasan wrote:
 >statementBlock[boolean result]
 > : assignment[$result]  | compoundStatement[$result]
 > ;
 >
 >compoundStatement[boolean result]
 > : ({$result}?=> ^(BLOCK statement*) )
 > ;
 >
 >assignment[boolean result]
 > : ({$result}?=> ^(EVAL statementExpression) )
 > ;
 >
 >In the generated java class, I see code generated in the
 >statement() method as follows: ( and is not compiling )
 >
 >..
 >             else if ( (LA2_0==BLOCK||LA2_0==EVAL) && 
((result)))
 >{
 >                 alt2=2;
 >            }
 >..
 >
 >Where did the "result" variable come into the statement() method 
?

Predicates (especially left-edge predicates) may be hoisted out of 
the containing rule into parent rules, as an aid to 
disambiguation.  The presumption is that any predicate in that 
position is helping to determine whether or not the rule is 
appropriate to be invoked at all, and as such should generally 
restrict itself to checking the input stream and internal parsing 
state.

Using parameters (or return values) in such predicates is 
problematic because they're not accessible in the parent 
rule.  You can use scopes to work around this, but:

... this isn't really an appropriate use of the predicates 
anyway.  The nodes will still be in the incoming input stream -- 
you can't simply skip the rule if you don't care about them, 
you'll end up getting confused since you haven't dealt with the 
subtree and moved on.  A better way to write these rules, if you 
still want to use a parameter-based approach, would be something 
like this:

compoundStatement[boolean process]
   : ^(BLOCK ({$process}? => statement* | .*))
   ;

assignment[boolean process]
   : ^(EVAL ({$process}? => statementExpression | .))
   ;

Of course, it'd be even tidier if you got rid of the parameters 
entirely and just used the approach I mentioned yesterday.


From jared.bunting at peachjean.com  Tue Dec 30 22:08:02 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Wed, 31 Dec 2008 00:08:02 -0600
Subject: [antlr-interest] code too large error
Message-ID: <495B0C42.3090205@peachjean.com>

Hello All,

I am currently working on a parser for a language with predefined 
specifications.  Currently, for my "operation" rule, I am getting a 
"code too large" error from the compiler in the DFA...I am a bit 
confused by this, and I'm not sure that I understand why the prediction 
is so complicated - is there any way I can make this rule more 
explicit?  From my perspective, there really should be zero prediction 
going on other than what my gated semantic predicates do.

Also, I would note that this is the beginning, and I am using the scoped 
variables because eventually I will be adding essentially user defined 
operations that can defined min and max number of arguments.

And, for anyone not familiar, code too large occurs when a java method 
is to large (i believe the limit is 64k).

Any help or insight would be much appreciated.

Thanks,
Jared


parser grammar MyParser;

options {
  output=AST;
  ASTLabelType=CommonTree;
  tokenVocab=MyLexer;
}

tokens {
  OPERATION_ARGS;
}

@header {
package com.example;
}

expression
    :    operation
    | literal
    ;
   
operation
scope {
  int minArgs;
  int maxArgs;
}
    :    operator
    ( {$operation::maxArgs > 0}?=> limitedArgList
    | {$operation::maxArgs < 0}?=> unlimitedArgList
    )
    ;
   
limitedArgList
scope {
  int argCount;
}
@init {
  $limitedArgList::argCount = 0;
}
    :    ( {$limitedArgList::argCount < $operation::maxArgs}?=> 
expression { $limitedArgList::argCount++; } )*
    {$limitedArgList::argCount >= $operation::minArgs}? -> 
^(OPERATION_ARGS expression*)
    ;
   
unlimitedArgList
scope {
  int argCount;
}
@init {
  $unlimitedArgList::argCount = 0;
}
    : (expression { $unlimitedArgList::argCount++; })* argListTerminator
    { $unlimitedArgList::argCount >= $operation::minArgs }? -> 
^(OPERATION_ARGS expression*)
    ;
   
argListTerminator
    :
    {input.LA(1) == EOS}?=> ARG_LIST_TERM?
    | ARG_LIST_TERM
    ;
   
operator
    :    operatorBinary
    | operatorUnary
    | operatorMulti
    ;
   
operatorMulti
@init {
  $operation::minArgs = 1;
  $operation::maxArgs = -1;
}
    :    ALL
    |    ANY
    |    CONCATENATE
    ;

operatorBinary
@init {
  $operation::minArgs = 2;
  $operation::maxArgs = 2;
}
    :    SUM
    |    SUBTRACT
    |    MULTIPLY
    |    DIVIDE
    |    MOD
    |    MAX
    |    MIN
    |    AND
    |    OR
    |    XOR
    |    EQUALS
    |    NOT_EQUALS
    ;

operatorUnary
@init {
  $operation::minArgs = 1;
  $operation::maxArgs = 1;
}
    :    NOT
    | INCREMENT
    | DECREMENT
    ;

literal
    :    STRING
    |    INTEGER
    |    FLOAT
    |    boolean
    ;
   
boolean
     :    TRUE
     | FALSE
    ;
   




From tbrandonau at gmail.com  Wed Dec 31 00:05:45 2008
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 31 Dec 2008 19:05:45 +1100
Subject: [antlr-interest] code too large error
In-Reply-To: <495B0C42.3090205@peachjean.com>
References: <495B0C42.3090205@peachjean.com>
Message-ID: <ebc876d70812310005n4dc31636g4fac13fb43905cf9@mail.gmail.com>

ANTLR combines predicates and the token lookahead when creating DFAs
so it will still have a predictor. It will also hoist predicates from
called rules into parent rules to disambiguate. So those rules will
generate a fairly complex predictor.
I would say you are better to just accept any number of arguments and
then use action code to check for the correct number of arguments,
either in the parser or a subsequent tree parser phase. This will
relieve the errror, probably result in simpler, better performing code
and simplify error handling as you can just issue a warning in your
checking code rather than having to trap the error resulting from
failed predicates and produce a meaningful error message.

Tom.
On Wed, Dec 31, 2008 at 5:08 PM, Jared Bunting
<jared.bunting at peachjean.com> wrote:
> Hello All,
>
> I am currently working on a parser for a language with predefined
> specifications.  Currently, for my "operation" rule, I am getting a
> "code too large" error from the compiler in the DFA...I am a bit
> confused by this, and I'm not sure that I understand why the prediction
> is so complicated - is there any way I can make this rule more
> explicit?  From my perspective, there really should be zero prediction
> going on other than what my gated semantic predicates do.
>
> Also, I would note that this is the beginning, and I am using the scoped
> variables because eventually I will be adding essentially user defined
> operations that can defined min and max number of arguments.
>
> And, for anyone not familiar, code too large occurs when a java method
> is to large (i believe the limit is 64k).
>
> Any help or insight would be much appreciated.
>
> Thanks,
> Jared
>
>
> parser grammar MyParser;
>
> options {
>  output=AST;
>  ASTLabelType=CommonTree;
>  tokenVocab=MyLexer;
> }
>
> tokens {
>  OPERATION_ARGS;
> }
>
> @header {
> package com.example;
> }
>
> expression
>    :    operation
>    | literal
>    ;
>
> operation
> scope {
>  int minArgs;
>  int maxArgs;
> }
>    :    operator
>    ( {$operation::maxArgs > 0}?=> limitedArgList
>    | {$operation::maxArgs < 0}?=> unlimitedArgList
>    )
>    ;
>
> limitedArgList
> scope {
>  int argCount;
> }
> @init {
>  $limitedArgList::argCount = 0;
> }
>    :    ( {$limitedArgList::argCount < $operation::maxArgs}?=>
> expression { $limitedArgList::argCount++; } )*
>    {$limitedArgList::argCount >= $operation::minArgs}? ->
> ^(OPERATION_ARGS expression*)
>    ;
>
> unlimitedArgList
> scope {
>  int argCount;
> }
> @init {
>  $unlimitedArgList::argCount = 0;
> }
>    : (expression { $unlimitedArgList::argCount++; })* argListTerminator
>    { $unlimitedArgList::argCount >= $operation::minArgs }? ->
> ^(OPERATION_ARGS expression*)
>    ;
>
> argListTerminator
>    :
>    {input.LA(1) == EOS}?=> ARG_LIST_TERM?
>    | ARG_LIST_TERM
>    ;
>
> operator
>    :    operatorBinary
>    | operatorUnary
>    | operatorMulti
>    ;
>
> operatorMulti
> @init {
>  $operation::minArgs = 1;
>  $operation::maxArgs = -1;
> }
>    :    ALL
>    |    ANY
>    |    CONCATENATE
>    ;
>
> operatorBinary
> @init {
>  $operation::minArgs = 2;
>  $operation::maxArgs = 2;
> }
>    :    SUM
>    |    SUBTRACT
>    |    MULTIPLY
>    |    DIVIDE
>    |    MOD
>    |    MAX
>    |    MIN
>    |    AND
>    |    OR
>    |    XOR
>    |    EQUALS
>    |    NOT_EQUALS
>    ;
>
> operatorUnary
> @init {
>  $operation::minArgs = 1;
>  $operation::maxArgs = 1;
> }
>    :    NOT
>    | INCREMENT
>    | DECREMENT
>    ;
>
> literal
>    :    STRING
>    |    INTEGER
>    |    FLOAT
>    |    boolean
>    ;
>
> boolean
>     :    TRUE
>     | FALSE
>    ;
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jared.bunting at peachjean.com  Wed Dec 31 05:52:21 2008
From: jared.bunting at peachjean.com (Jared Bunting)
Date: Wed, 31 Dec 2008 07:52:21 -0600
Subject: [antlr-interest] code too large error
In-Reply-To: <ebc876d70812310005n4dc31636g4fac13fb43905cf9@mail.gmail.com>
References: <495B0C42.3090205@peachjean.com>
	<ebc876d70812310005n4dc31636g4fac13fb43905cf9@mail.gmail.com>
Message-ID: <b15aaba10812310552w233565c8kd4950587ce95e08@mail.gmail.com>

Unfortunately I can't accept any number of arguments - the language just
won't work that way as the only way to specify when the list of arguments
ends is the number of arguments.  For instance:

+ * 3 4 5

should be interpreted as essentially:

(3*4)+5

(3 & 4 are arguments to *, while "* 3 4" and 5 are arguments to +)

likewise,

* + 3 4 5
is
(3+4)*5

I don't see any way to parse this by checking the number of arguments after
the fact.

I guess I don't understand what antlr is trying to disambiguate by hoisting
those predicates into the parent rule.  In the operation rule, if the
operator is seen, then the rule to be invoked is predetermined - is there
any way to tell antlr this?

Thanks,
Jared

On Wed, Dec 31, 2008 at 2:05 AM, Thomas Brandon <tbrandonau at gmail.com>wrote:

> ANTLR combines predicates and the token lookahead when creating DFAs
> so it will still have a predictor. It will also hoist predicates from
> called rules into parent rules to disambiguate. So those rules will
> generate a fairly complex predictor.
> I would say you are better to just accept any number of arguments and
> then use action code to check for the correct number of arguments,
> either in the parser or a subsequent tree parser phase. This will
> relieve the errror, probably result in simpler, better performing code
> and simplify error handling as you can just issue a warning in your
> checking code rather than having to trap the error resulting from
> failed predicates and produce a meaningful error message.
>
> Tom.
> On Wed, Dec 31, 2008 at 5:08 PM, Jared Bunting
> <jared.bunting at peachjean.com> wrote:
> > Hello All,
> >
> > I am currently working on a parser for a language with predefined
> > specifications.  Currently, for my "operation" rule, I am getting a
> > "code too large" error from the compiler in the DFA...I am a bit
> > confused by this, and I'm not sure that I understand why the prediction
> > is so complicated - is there any way I can make this rule more
> > explicit?  From my perspective, there really should be zero prediction
> > going on other than what my gated semantic predicates do.
> >
> > Also, I would note that this is the beginning, and I am using the scoped
> > variables because eventually I will be adding essentially user defined
> > operations that can defined min and max number of arguments.
> >
> > And, for anyone not familiar, code too large occurs when a java method
> > is to large (i believe the limit is 64k).
> >
> > Any help or insight would be much appreciated.
> >
> > Thanks,
> > Jared
> >
> >
> > parser grammar MyParser;
> >
> > options {
> >  output=AST;
> >  ASTLabelType=CommonTree;
> >  tokenVocab=MyLexer;
> > }
> >
> > tokens {
> >  OPERATION_ARGS;
> > }
> >
> > @header {
> > package com.example;
> > }
> >
> > expression
> >    :    operation
> >    | literal
> >    ;
> >
> > operation
> > scope {
> >  int minArgs;
> >  int maxArgs;
> > }
> >    :    operator
> >    ( {$operation::maxArgs > 0}?=> limitedArgList
> >    | {$operation::maxArgs < 0}?=> unlimitedArgList
> >    )
> >    ;
> >
> > limitedArgList
> > scope {
> >  int argCount;
> > }
> > @init {
> >  $limitedArgList::argCount = 0;
> > }
> >    :    ( {$limitedArgList::argCount < $operation::maxArgs}?=>
> > expression { $limitedArgList::argCount++; } )*
> >    {$limitedArgList::argCount >= $operation::minArgs}? ->
> > ^(OPERATION_ARGS expression*)
> >    ;
> >
> > unlimitedArgList
> > scope {
> >  int argCount;
> > }
> > @init {
> >  $unlimitedArgList::argCount = 0;
> > }
> >    : (expression { $unlimitedArgList::argCount++; })* argListTerminator
> >    { $unlimitedArgList::argCount >= $operation::minArgs }? ->
> > ^(OPERATION_ARGS expression*)
> >    ;
> >
> > argListTerminator
> >    :
> >    {input.LA(1) == EOS}?=> ARG_LIST_TERM?
> >    | ARG_LIST_TERM
> >    ;
> >
> > operator
> >    :    operatorBinary
> >    | operatorUnary
> >    | operatorMulti
> >    ;
> >
> > operatorMulti
> > @init {
> >  $operation::minArgs = 1;
> >  $operation::maxArgs = -1;
> > }
> >    :    ALL
> >    |    ANY
> >    |    CONCATENATE
> >    ;
> >
> > operatorBinary
> > @init {
> >  $operation::minArgs = 2;
> >  $operation::maxArgs = 2;
> > }
> >    :    SUM
> >    |    SUBTRACT
> >    |    MULTIPLY
> >    |    DIVIDE
> >    |    MOD
> >    |    MAX
> >    |    MIN
> >    |    AND
> >    |    OR
> >    |    XOR
> >    |    EQUALS
> >    |    NOT_EQUALS
> >    ;
> >
> > operatorUnary
> > @init {
> >  $operation::minArgs = 1;
> >  $operation::maxArgs = 1;
> > }
> >    :    NOT
> >    | INCREMENT
> >    | DECREMENT
> >    ;
> >
> > literal
> >    :    STRING
> >    |    INTEGER
> >    |    FLOAT
> >    |    boolean
> >    ;
> >
> > boolean
> >     :    TRUE
> >     | FALSE
> >    ;
> >
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20081231/bf00124a/attachment.html 

From spamhole at gmx.at  Wed Dec 31 09:22:29 2008
From: spamhole at gmx.at (Markus Stoeger)
Date: Wed, 31 Dec 2008 18:22:29 +0100
Subject: [antlr-interest] Problem with disambiguating semantic predicates
 and the decision DFA
Message-ID: <495BAA55.3040104@gmx.at>

First of all, a happy new year to everyone!

I'm writing a grammar for one of those twisted languages, written by 
social deviants, that allow keywords to be used as variables.

The solution provided in the ANTLR Reference book on page 287 ("Keywords 
as Variables") seems to work fine in most cases.

However I have found one case where my tests fail:

Please have a look at the attached grammar in keywords.g. Debug it with 
the start symbol "procedureDecl" and feed it the input "PROCEDURE Proc; 
FORWARD;"

The problem happens in "subroutineBlock" where the decision dfa chooses 
the wrong alternative 3 (asmBlock) instead of 2 (forward).

To me the generated decision DFA for the symbol "subroutineBlock" (also 
attached) looks erroneous. It correctly evaluates the disambiguating 
semantic predicates for alternatives 1 (external) and 2 (forward), but 
it skips the evaluation for alternative 3 (asmBlock) and makes its 
decision based on the SEMICOLON token, which is wrong because the 
semicolon can belong to the outer procedureDecl.

I have tested this with the latest stable version of the ANTLRWorks 
bundle (1.2.2).

thanks for any hints,
Markus

-------------- next part --------------
A non-text attachment was scrubbed...
Name: dfa.png
Type: image/png
Size: 12649 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081231/abcd3ddd/attachment.png 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: input.txt
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20081231/abcd3ddd/attachment.txt 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: keywords.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20081231/abcd3ddd/attachment.pl 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: tree.png
Type: image/png
Size: 8844 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20081231/abcd3ddd/attachment-0001.png 

From oliver.zeigermann at gmail.com  Wed Dec 31 09:30:52 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Wed, 31 Dec 2008 18:30:52 +0100
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <49591CEA.3070801@peachjean.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<4958CE53.9070204@temporal-wave.com>
	<1230558065.13005.42.camel@meg-laptop>
	<9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>
	<1230574719.13005.45.camel@meg-laptop>
	<49591CEA.3070801@peachjean.com>
Message-ID: <9da4f4520812310930k66e55a8keeb7f909e11732ec@mail.gmail.com>

Hi Mats!

If you really need to distinguish monetary from measurement unit in
the _lexer_ - which I doubt for the same reasons as the others
answering - you could add a semantic predicate.

Modifying Jared's grammar might lead to this:

@lexer::members {
  protected boolean isMonetarySymbol = true;
}


expression : NUMBER MONETARY_SYMBOL (SLASH MEASUREMENT_SYMBOL)? ;

SLASH : '/' { isMonetarySymbol = false; };

MONETARY_SYMBOL
   : {isMonetarySymbol}? SYMBOL
   ;

MEASUREMENT_SYMBOL
   : {!isMonetarySymbol}? SYMBOL { isMonetarySymbol = true; }
   ;

fragment SYMBOL : A-Z A-Z A-Z ;


Be careful to set the predicate in the lexer, though!

Oliver

2008/12/29 Jared Bunting <jared.bunting at peachjean.com>:
> If the three-letter words can be anything, can you just define one token
> that matches 3 uppercase letters?  Your parser should be able to tell
> what's what based on context.
>
> maybe something like this?
>
> expression : NUMBER SYMBOL ('/' SYMBOL)? ;
>
> SYMBOL : A-Z A-Z A-Z ;
>
> -Jared
>
> Mats Ekberg wrote:
>> Ok, maybe I was a bit unsharp.
>> Monetary units are expressed as three-letter words; EUR GBP and so on.
>> Measurement unitts are also expressed with three letters; TNE KGM and
>> so on.
>>
>> The only way to know which is which is where the three letters are
>> located. In one location its a monetary and another its a measurement.
>>
>> ok?
>>
>> regards
>> mats
>>
>> m?n 2008-12-29 klockan 08:10 -0600 skrev Gary R. Van Sickle:
>>> > From: Mats Ekberg
>>> >
>>> > Lets say a three letter word in uppercase can mean one of two
>>> > tings like:
>>> >
>>> >   10  EUR
>>> > where EUR means a monetary unit
>>> >
>>> >   10 EUR / TNE
>>> > where EUR still means a monetary unit but the three letters
>>> > TNE now means a measurement uniot.
>>> >
>>> > How can that be expressed in a grammar??
>>> >
>>> > /mats
>>>
>>> Your question must be missing some information, because what you're asking
>>> is the most basic of lexing/parsing issues:
>>>
>>>
>>> Lexer does something like this:
>>>
>>> NUMBER : [0..9]+ ;
>>>
>>> EUR : 'EUR' ;
>>>
>>> TNE : 'TNE' ;
>>>
>>>
>>> Parser does something like this:
>>>
>>> num_with_monetary_unit_and_optional_per_unit
>>>     : NUMBER monetary_unit ('/' measurement_unit)?
>>>     ;
>>>
>>> monetary_unit
>>>     : EUR
>>>     | <<whatever other monies you support>>
>>>     ;
>>>
>>> measurement_unit
>>>     : TNE
>>>     | <<whatever other measurement units you support>>
>>>     ;
>>>
>>>
>>> But was that really your question?
>>>
>>>
>> ------------------------------------------------------------------------
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From oliver.zeigermann at gmail.com  Wed Dec 31 09:36:33 2008
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Wed, 31 Dec 2008 18:36:33 +0100
Subject: [antlr-interest] Location dependent token?
In-Reply-To: <9da4f4520812310930k66e55a8keeb7f909e11732ec@mail.gmail.com>
References: <9362e74e0812282213t585d9bc7p5d08fc142c41e792@mail.gmail.com>
	<4958CE53.9070204@temporal-wave.com>
	<1230558065.13005.42.camel@meg-laptop>
	<9AFE2D7CCBC94DDD84BDA23E140E6B23@DFW5RB41>
	<1230574719.13005.45.camel@meg-laptop>
	<49591CEA.3070801@peachjean.com>
	<9da4f4520812310930k66e55a8keeb7f909e11732ec@mail.gmail.com>
Message-ID: <9da4f4520812310936s4d6f051apa818f001c6e22726@mail.gmail.com>

Well, looking at this now, this is far too complicated. Just do:

expression : NUMBER MONETARY_SYMBOL (MEASUREMENT_SYMBOL)? ;

MONETARY_SYMBOL
  : SYMBOL
  ;

MEASUREMENT_SYMBOL
  : '/' SYMBOL { /* A little bit of Java code that strips the leading '/' }
  ;

fragment SYMBOL : A-Z A-Z A-Z ;

- Oliver

2008/12/31 Oliver Zeigermann <oliver.zeigermann at gmail.com>:
> Hi Mats!
>
> If you really need to distinguish monetary from measurement unit in
> the _lexer_ - which I doubt for the same reasons as the others
> answering - you could add a semantic predicate.
>
> Modifying Jared's grammar might lead to this:
>
> @lexer::members {
>  protected boolean isMonetarySymbol = true;
> }
>
>
> expression : NUMBER MONETARY_SYMBOL (SLASH MEASUREMENT_SYMBOL)? ;
>
> SLASH : '/' { isMonetarySymbol = false; };
>
> MONETARY_SYMBOL
>   : {isMonetarySymbol}? SYMBOL
>   ;
>
> MEASUREMENT_SYMBOL
>   : {!isMonetarySymbol}? SYMBOL { isMonetarySymbol = true; }
>   ;
>
> fragment SYMBOL : A-Z A-Z A-Z ;
>
>
> Be careful to set the predicate in the lexer, though!
>
> Oliver
>
> 2008/12/29 Jared Bunting <jared.bunting at peachjean.com>:
>> If the three-letter words can be anything, can you just define one token
>> that matches 3 uppercase letters?  Your parser should be able to tell
>> what's what based on context.
>>
>> maybe something like this?
>>
>> expression : NUMBER SYMBOL ('/' SYMBOL)? ;
>>
>> SYMBOL : A-Z A-Z A-Z ;
>>
>> -Jared
>>
>> Mats Ekberg wrote:
>>> Ok, maybe I was a bit unsharp.
>>> Monetary units are expressed as three-letter words; EUR GBP and so on.
>>> Measurement unitts are also expressed with three letters; TNE KGM and
>>> so on.
>>>
>>> The only way to know which is which is where the three letters are
>>> located. In one location its a monetary and another its a measurement.
>>>
>>> ok?
>>>
>>> regards
>>> mats
>>>
>>> m?n 2008-12-29 klockan 08:10 -0600 skrev Gary R. Van Sickle:
>>>> > From: Mats Ekberg
>>>> >
>>>> > Lets say a three letter word in uppercase can mean one of two
>>>> > tings like:
>>>> >
>>>> >   10  EUR
>>>> > where EUR means a monetary unit
>>>> >
>>>> >   10 EUR / TNE
>>>> > where EUR still means a monetary unit but the three letters
>>>> > TNE now means a measurement uniot.
>>>> >
>>>> > How can that be expressed in a grammar??
>>>> >
>>>> > /mats
>>>>
>>>> Your question must be missing some information, because what you're asking
>>>> is the most basic of lexing/parsing issues:
>>>>
>>>>
>>>> Lexer does something like this:
>>>>
>>>> NUMBER : [0..9]+ ;
>>>>
>>>> EUR : 'EUR' ;
>>>>
>>>> TNE : 'TNE' ;
>>>>
>>>>
>>>> Parser does something like this:
>>>>
>>>> num_with_monetary_unit_and_optional_per_unit
>>>>     : NUMBER monetary_unit ('/' measurement_unit)?
>>>>     ;
>>>>
>>>> monetary_unit
>>>>     : EUR
>>>>     | <<whatever other monies you support>>
>>>>     ;
>>>>
>>>> measurement_unit
>>>>     : TNE
>>>>     | <<whatever other measurement units you support>>
>>>>     ;
>>>>
>>>>
>>>> But was that really your question?
>>>>
>>>>
>>> ------------------------------------------------------------------------
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>

From g.r.vansickle at att.net  Wed Dec 31 20:05:14 2008
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Wed, 31 Dec 2008 22:05:14 -0600
Subject: [antlr-interest] Problem with disambiguating semantic
	predicates and the decision DFA
In-Reply-To: <495BAA55.3040104@gmx.at>
References: <495BAA55.3040104@gmx.at>
Message-ID: <B043DA81A6404C04B80A55170AD0E939@DFW5RB41>

> From:  Markus Stoeger
> 
> First of all, a happy new year to everyone!
> 
> I'm writing a grammar for one of those twisted languages, 
> written by social deviants, that allow keywords to be used as 
> variables.
>

Well, at least it ain't SPICE, where keywords (e.g. in
"Rname_of_the_resistor", the "R" is the "keyword"), "variable" (node and
model) names, and even numerical values cannot be distinguished at
lexer-time.  Yeah.  Plus, there are a few instances where you don't even
know how many of these indistinguishable items to expect, so you can't say
"if it's a BJT, take in 3 or 4 node names, then one model name, then maybe
some optional stuff that's equally ill-defined" in any simple manner.  And
just to add insult to injury, the line continuation character is not placed
at the end of the line to be continued, but at the *beginning* of the *next*
line.

I think the whole CompSci field needs to institute a housecleaning policy,
whereby every say 5 years or so we completely start over, undo the sins of
our forefathers, and never look back lest we turn into pillars of salt, so
that we aren't forced to live with such atrocities indefinitely.

But enough of my rant of woe ;-).
 
> The solution provided in the ANTLR Reference book on page 287 
> ("Keywords as Variables") seems to work fine in most cases.

This brings up a semi-rhetorical question (in my mind anyway): In general,
isn't one of the strengths of the top-down parsing approach that it is able
to handle exactly this sort of ambiguity effortlessly, since there is
implicit context maintaned during the parse that isn't there in a bottom-up
approach?  It seems that the current "lex 'em all and let the parser sort
'em out" lexer implementation used by ANTLR results in a system which
needlessly suffers the limitations involved with the top-down approach and
prevents it from taking advantage of some of the benefits.

Idle New Years' Eve thinking-out-loud, FWIW.

-- 
Gary R. Van Sickle


