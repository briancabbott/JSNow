From jshellman at gmail.com  Wed Aug  1 01:10:13 2007
From: jshellman at gmail.com (Joel Shellman)
Date: Wed, 1 Aug 2007 01:10:13 -0700
Subject: [antlr-interest] Fixed width field
Message-ID: <975a94850708010110n5732aafenda7308c3ca6e8626@mail.gmail.com>

Is there a way to specify a number of matches of something?

So,

rule : CHAR;

would match 1 char,

rule2 : CHAR+;

is 1 or more,

rule3 : CHAR*;

is 0 or more, but what if I want to specify a certain number, like:

rule4: CHAR CHAR CHAR;

I know this would do 3 times, but it's rather unwieldy especially if I
had 36 or 150 or something like that. Is there some syntax to specify
to match n times?

Thanks.

From antlr at mirality.co.nz  Wed Aug  1 01:26:20 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 01 Aug 2007 20:26:20 +1200
Subject: [antlr-interest] Fixed width field
In-Reply-To: <975a94850708010110n5732aafenda7308c3ca6e8626@mail.gmail.co
 m>
References: <975a94850708010110n5732aafenda7308c3ca6e8626@mail.gmail.com>
Message-ID: <20070801082628.AF0BA11EB16@www.antlr.org>

At 20:10 1/08/2007, Joel Shellman wrote:
 >Is there a way to specify a number of matches of something?
[...]
 >rule4: CHAR CHAR CHAR;
 >
 >I know this would do 3 times, but it's rather unwieldy 
especially
 >if I had 36 or 150 or something like that. Is there some syntax
 >to specify to match n times?

Nope.  But you can composite them if you really need to:

char5: CHAR CHAR CHAR CHAR CHAR;
char10: char5 char5;
char50: char10 char10 char10 char10 char10;
char150: char50 char50 char50;

Although for really fixed-width input you'd probably want to do it 
in the lexer.  Or not use ANTLR at all, since fixed-width is easy 
:)


From email at kortmann.de  Wed Aug  1 01:57:42 2007
From: email at kortmann.de (Martin Kortmann)
Date: Wed, 01 Aug 2007 10:57:42 +0200
Subject: [antlr-interest] =?iso-8859-15?q?How_to_parse_Several_Option_in_o?=
 =?iso-8859-15?q?ne_group_in_d=EDfferent_order?=
Message-ID: <46B04B06.1020501@kortmann.de>

Hi,

I have to parse a textfile which is divided in several
groups. Inside of this groups where several options.
This option can occur in any order, but only zero or
one times. I have this construction:

header:	BEG 'HEADER'
           ( project_no version
           | version project_no
           | version
           | project_no
           |
           )
         END 'HEADER'
       ;

This is OK for only two options, but i have also
sections with mor than ten options.

How can i made this rule easier? Does i have to track
this by hand?

Martin

From tbrandonau at gmail.com  Wed Aug  1 02:08:43 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 1 Aug 2007 19:08:43 +1000
Subject: [antlr-interest] Fixed width field
In-Reply-To: <20070801082628.AF0BA11EB16@www.antlr.org>
References: <975a94850708010110n5732aafenda7308c3ca6e8626@mail.gmail.com>
	<20070801082628.AF0BA11EB16@www.antlr.org>
Message-ID: <ebc876d70708010208y2530e2c1g2a21761e75a0d95f@mail.gmail.com>

On 8/1/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 20:10 1/08/2007, Joel Shellman wrote:
>  >Is there a way to specify a number of matches of something?
> [...]
>  >rule4: CHAR CHAR CHAR;
>  >
>  >I know this would do 3 times, but it's rather unwieldy
> especially
>  >if I had 36 or 150 or something like that. Is there some syntax
>  >to specify to match n times?
>
> Nope.  But you can composite them if you really need to:
>
> char5: CHAR CHAR CHAR CHAR CHAR;
> char10: char5 char5;
> char50: char10 char10 char10 char10 char10;
> char150: char50 char50 char50;
>
Or use a semantic predicate. Off the top of my head, something like:
fixedChars[int count]
@init {
    int c = 0;
}
    : ( {c++ < $count}? CHAR )+ {c == $count}?
    ;

Or move count to the init section of you don't need to vary it.
Or it might be better to replace the second predicate with an action
to report the error to avoid having to handle the resulting predicate
failure exception.
Depending on how it's being used you may also want to remove the count
check in the first predicate and let the rule match any number of
CHARs and just report any mismatch. This will ease error recovery but
is not applicable if you need to partition a sequence of CHARs into
groups of n.

Tom.

> Although for really fixed-width input you'd probably want to do it
> in the lexer.  Or not use ANTLR at all, since fixed-width is easy
> :)
>
>

From tbrandonau at gmail.com  Wed Aug  1 02:14:31 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 1 Aug 2007 19:14:31 +1000
Subject: [antlr-interest]
	=?iso-8859-1?q?How_to_parse_Several_Option_in_on?=
	=?iso-8859-1?q?e_group_in_d=EDfferent_order?=
In-Reply-To: <46B04B06.1020501@kortmann.de>
References: <46B04B06.1020501@kortmann.de>
Message-ID: <ebc876d70708010214w1d298442w47b16f39e82afcd6@mail.gmail.com>

On 8/1/07, Martin Kortmann <email at kortmann.de> wrote:
> Hi,
>
> I have to parse a textfile which is divided in several
> groups. Inside of this groups where several options.
> This option can occur in any order, but only zero or
> one times. I have this construction:
>
> header: BEG 'HEADER'
>            ( project_no version
>            | version project_no
>            | version
>            | project_no
>            |
>            )
>          END 'HEADER'
>        ;
>
> This is OK for only two options, but i have also
> sections with mor than ten options.
>
> How can i made this rule easier? Does i have to track
> this by hand?
Yes. Add an action to track seen options. You could add a semantic
predicate that only allowed an option that hadn't been seen, but are
probably best just using an action to report any duplicates as you
probably don't want to generate a parser error when an option is
duplicated.

Tom.
>
> Martin
>

From sshkedy at hotmail.com  Wed Aug  1 09:11:02 2007
From: sshkedy at hotmail.com (Sagi Shkedy)
Date: Wed, 1 Aug 2007 16:11:02 +0000
Subject: [antlr-interest] ANTLR C# Consulting Project
Message-ID: <BAY115-W12048BEA72B52BD567917CB4E80@phx.gbl>


I need some help on an ANTLR C# project. I have very little expirence with building compiler/interpreters so am guessing it will be easier for an exprienced ANTLR user to do this in a fairly short time. Please contact me at sagis at dmipartners.com if you are interested in the project and ball park the price and time. If you have suggestions for grammer changes I am open to those as well.
Specification:
This should ball park it - I was not fully formal or consistent inthe notation but I got granular wherever I thought there might beambiguity. If you take on the project we can go over this ingreater details. All the functions can easily mapped to simple C#functions.
I want to create a compiler/expression evaluator that given a stringwill evaluate it and return a string
A. I want to allow operations on 5 different data types:
   1. Quoted Strings "Hello World"      need to be able to escape parenthesis somehow
   2. Numbers: 1 1.235653.
   3. dates: #7/7/2008# #7/7/2008 5:55PM#
   4. Boolean eg: true false
   5. List 0 or more of the preceding separated by commas encased in brackets ( ["A", "B", "C"] )
B. I want to allow the following:
   1. Basic arithmetic on the numbers + - / *  parenthesis ( () )
   2. basic Boolean logic (AND, OR , NOT, &&, ||, !)
   3. Casting (number) (string) (datetime)
   4. Shorthand if statements IIF(a, b,c) (if a is true then b otherwise c) shorthand C# would work also a?b:c
   5. comparison for date and time > = < => <= != etc.                e.g. ( #1/1/2007# > #5/1/2006#  )
   6. comparison for numbers 5 > 3 etc.
   7. comparison of string (only = and != need be implemented)
   8. String functions:
      a. + for concatenation                e.g. "hello" + " " +  "world" ==> "hello world"
      b. SUBSTRING(Source, StartLocation, NumberOfChars)                e.g. SUBSTRING("HELLO", 0, 2) ==>  "HE" maps to the C# String.Substring() function
      c. UPPER(string), LOWER(string)  PROPPER(string),                e.g. UPPER("hello") ==> "HELLO",                     LOWER("HELLO") ==> "hello",                     PROPPER("hello") ==> "Hello"
      d. bool RegExMatch(string, string)                e.g. RegExMatch("HELLO", "H[a-zA-Z]+") ==> true,                     case insensitive maps to System.Text.RegularExpressions.RegEx.IsMatch() function
      e. string RegExExract(string, string)                e.g. RegExExtract("HELLO WORLD", "H[a-zA-Z]") ==> "HE"                     case insensitive also maps to a C# function don't remember which one
      f. string Replace(string, string, string) 
   9. Date time functions:
      a. NOW() returns DateTime.Now
      b. DateAdd(string, number, date) - just like in C#
      c. DateFormat(string, date) equivalent to the ToString(string)         method of the DateTime object in C#
   10. Misc functions:
       a. In list function bool IsInList(value, List)                e.g. IsInList("PA", "PA", "CA", "NY") ==> true
       b. bool IsEmpty(string)
       c. string IfEmpty(string, string)                e.g. ifEmpty("","e") ==> "e"
I think this is it in a nutshell so a sample input would be:
    UPPER("Hello") + " " + IIF(NOW() >= #1/1/2008#, " 2008 ", " 2007 ") + " " + (string)(5+5)
would return:
    "HELLO 2007 10"
_________________________________________________________________
See what you?re getting into?before you go there.
http://newlivehotmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070801/edb62283/attachment.html 

From manjus3 at yahoo.com  Wed Aug  1 09:34:43 2007
From: manjus3 at yahoo.com (Manju Shekhar)
Date: Wed, 1 Aug 2007 09:34:43 -0700 (PDT)
Subject: [antlr-interest] Possible bug in ANTLR 3.0 code generation ?
Message-ID: <255159.52591.qm@web56102.mail.re3.yahoo.com>

 I have a rule defined like so in my grammar file 
  services_r returns [HashMap<String, Service> svcs] 
         @init { $svcs = new HashMap<String, Service>(); }
         :
         ^( SERVICES (s=service_r)+ ) 
         ;
  However the above generates the following snippet of java code: 
  public static class services_r_return extends 
TreeRuleReturnScope { 
         public HashMap<String; 
         public Service> svcs; 
         public StringTemplate st;
         public Object getTemplate() { return st; } 
         public String toString() 
         { return st==null?null:st.toString(); } 
 };
 
 You can see how the "HashMap<String"; line has got truncated & continues erroneously on the next line. Is this a bug or am I missing something? 
 
 Thanks
 Manju

       
---------------------------------
Pinpoint customers who are looking for what you sell. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070801/678dd92f/attachment.html 

From kroepke at classdump.org  Wed Aug  1 09:39:20 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 1 Aug 2007 18:39:20 +0200
Subject: [antlr-interest] Possible bug in ANTLR 3.0 code generation ?
In-Reply-To: <255159.52591.qm@web56102.mail.re3.yahoo.com>
References: <255159.52591.qm@web56102.mail.re3.yahoo.com>
Message-ID: <83404ED2-0D1E-4FF9-889E-BFF319AE66C8@classdump.org>


On Aug 1, 2007, at 6:34 PM, Manju Shekhar wrote:

>  You can see how the "HashMap<String"; line has got truncated &  
> continues erroneously on the next line. Is this a bug or am I  
> missing something?

Yes, this is a bug. It has the same cause as the recently discussed  
"String[] strArray" issue. ANTLR splits params and returns at ',' and  
unfortunately doesn't allow escaping characters yet.

-k

P.S.: Do we have a issue in JIRA for this yet?
-- 
Kay R?pke
http://classdump.org/





From email at kortmann.de  Wed Aug  1 10:09:57 2007
From: email at kortmann.de (Martin Kortmann)
Date: Wed, 01 Aug 2007 19:09:57 +0200
Subject: [antlr-interest] Bug in ANTLRWorks V1.1.1
Message-ID: <46B0BE65.8070403@kortmann.de>

Hi,

I found a problem in ANTLRWorks Version 1.1.1
When i start the debugger and choose "file" in
the "Input Text Dialog" then everything is OK.
Then when i stop the debugger, start it again and choose
a new file in the Dialog, the old file ist used.
To switch to another inputfile, i have to switch to
"text", run the debugger, stop it and switch back to
file input.

Martin

From parrt at cs.usfca.edu  Wed Aug  1 10:35:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Aug 2007 10:35:52 -0700
Subject: [antlr-interest] Bug in ANTLRWorks V1.1.1
In-Reply-To: <46B0BE65.8070403@kortmann.de>
References: <46B0BE65.8070403@kortmann.de>
Message-ID: <47F802DB-28E2-41BB-BD55-5B8086BF736F@cs.usfca.edu>

Ok, thanks... CC'ing Jean.
Ter
On Aug 1, 2007, at 10:09 AM, Martin Kortmann wrote:

> Hi,
>
> I found a problem in ANTLRWorks Version 1.1.1
> When i start the debugger and choose "file" in
> the "Input Text Dialog" then everything is OK.
> Then when i stop the debugger, start it again and choose
> a new file in the Dialog, the old file ist used.
> To switch to another inputfile, i have to switch to
> "text", run the debugger, stop it and switch back to
> file input.
>
> Martin


From parrt at cs.usfca.edu  Wed Aug  1 10:38:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Aug 2007 10:38:09 -0700
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
	<693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
Message-ID: <DCFA9F92-DFE4-49B2-81A8-3856A1B27499@cs.usfca.edu>


On Jul 31, 2007, at 8:51 AM, Alex Shneyderman wrote:

>> It's unsupported.  May i ask why you want them?
>> Ter
>
> I have a language where new lines can be significant or not depending
> on the type of curlies they are in. So, if say we are in {} new lines
> are significant but if we are in () or [] they are ignored.
>
> Currently, v2 grammar keeps a stack in lexer to keep track of this.
> Every time there is { the levelNumber is pushed onto the stack and
> levelNumber member var of lexer is set to 0. If } is read we pop the
> stack and assign the value popped to the levelNumber instance member
> of the lexer. If we see [ or ( we increment levelNumber; seeing ) or ]
> we decrement the levelNumber.
>
> Now if we see a new line and levelNumber != 0 then we skip the new
> line otherwise we emit a NL (as it is significant) token.

can you get away with just a simple counter for level overall, one  
for each kind of nesting?

> Comparing the code generated for parser's global scope it is
> practically identical to what the hackish stack solution looks like
> with v2 grammar.

Interesting...well, the stack was not meant to work across lexer  
nextToken calls, only nested function calls.  The dyn scoping here is  
for nesting not for stacks across method calls.

Ter

From parrt at cs.usfca.edu  Wed Aug  1 10:40:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Aug 2007 10:40:21 -0700
Subject: [antlr-interest] Using the TokenRewriteStream
In-Reply-To: <E1IFcEv-0007qg-1r@elasmtp-kukur.atl.sa.earthlink.net>
References: <E1IFcEv-0007qg-1r@elasmtp-kukur.atl.sa.earthlink.net>
Message-ID: <6D7F82E1-A700-455F-8CCF-19433CEFCC4B@cs.usfca.edu>


On Jul 30, 2007, at 1:53 PM, Susan Jolly wrote:

> However, I'm probably going to need modify  
> TokenRewriteStream.toString() to
> use and return a buffer that is a List (of imaginary and real  
> Tokens) rather
> than a StringBuffer.

Yeah, I have some thoughts on token stream rewrite on the blog.

> One of the things I need to be able to do is to interline the input  
> (which
> is print text) with its braille translation.  ("Interline" means  
> alternating
> a line of print with a line of braille.) This requires adding line  
> breaks to
> the input so as to keep it in sync with the braille since each line  
> of the
> braille translation has a maximum length and must be terminated by  
> a hard
> return.  (The print lines typically have more characters than the  
> braille
> lines.) This alone I could do by estimating the length of a braille  
> line by
> totaling the String length of the real Tokens and then invoking  
> toString
> again with a smaller "end" index if the imaginary Tokens added by the
> Rewrite make the line too long. (I can't put the line breaks in at  
> a later
> point because I'd lose the synchronization with the input.)
>
> However, there are multiple ways to represent braille and a sighted  
> user
> might want more than one of them. In other words, the general case  
> is that
> the output consists of sets of lines where each set has one or more  
> of the
> following: a line of print, a line of standard braille (that  
> controls the
> line length), and possibly additional lines with other alternatives.
>
> This is (I think) easier to do if I associate each Token with an  
> object that
> has all these multiple alternatives which is why I want to get a  
> List of the
> Tokens rather than the concatenated text.
>
> The pictures at the tops of these two pages show what the output  
> looks like
> except that the first one doesn't include the original print text.
> http://www.dotlessbraille.org/screencap.htm
> http://www.dotlessbraille.org/gemini.htm

Interesting.  Well, a first pass to rewrite the token stream is a  
decent idea.  Then process the altered stream with another parser.
Ter

From benji at benjismith.net  Wed Aug  1 12:15:03 2007
From: benji at benjismith.net (Benji Smith)
Date: Wed, 1 Aug 2007 15:15:03 -0400
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <DCFA9F92-DFE4-49B2-81A8-3856A1B27499@cs.usfca.edu>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
	<693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
	<DCFA9F92-DFE4-49B2-81A8-3856A1B27499@cs.usfca.edu>
Message-ID: <b46e0d5e0708011215s1322d25dk4859a737e5434445@mail.gmail.com>

If I understand the problem correctly, then I think I have another
iteresting example: parsing regular expressions.

Normally, curly braces are used for quantifiers, like this:

  a{2, 3}  # Means "the char 'a' at least twice, but no more than three times"

And to specify a literal curly brace, it usually has to be backslash
escaped, like this:

  \{{3}  # Means "the char '{' exactly three times"

But within square brackets, the lexing rules change, and a backslash
is no longer required to specify a literal curly brace

  [{}]{3} # Means "any of the characters '{' or '}', exactly three times"

When I've implemented a regex parser in JavaCC, it was easy to create
a stack of lexical scopes, where curly brace characters as different
types of tokens depending on the lexical scope. Within a character
class, a curly brace is just a regular character literal, but in any
other lexical scope, it's a START_QUANTIFIER token.

I'm not sure of the best mechanism for handling those kinds of cases
in ANTLR, but it seems like the same kind of problem as Alex's example
with semantically-significant whitespace in some lexical scopes, but
not in others.

Hope that info helps :)

--benji

From jshellman at gmail.com  Wed Aug  1 13:01:03 2007
From: jshellman at gmail.com (Joel Shellman)
Date: Wed, 1 Aug 2007 13:01:03 -0700
Subject: [antlr-interest] Combining into single token
Message-ID: <975a94850708011301y41924f33xa223f84a641e6e0d@mail.gmail.com>

This grammar:

grammar SimpleTest;
options {
    output=AST;
}

root	:	'a'+ 'D' 'a'+ 'D';

If you input aaDaaD to this grammar, it will result in a tree of ^(nil
a a D a a D). Each letter is a different node in the tree. How can I
change this so that the above would result in ^(nil aaDaaD), with all
the letters being just one token/node in the tree?

Thanks.

From matthew.j.diehl at intel.com  Wed Aug  1 13:05:39 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 1 Aug 2007 13:05:39 -0700
Subject: [antlr-interest] Combining into single token
In-Reply-To: <975a94850708011301y41924f33xa223f84a641e6e0d@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20264E035@orsmsx417.amr.corp.intel.com>

> root	:	'a'+ 'D' 'a'+ 'D';
> 
> If you input aaDaaD to this grammar, it will result in a tree of ^(nil
> a a D a a D). Each letter is a different node in the tree. How can I
> change this so that the above would result in ^(nil aaDaaD), with all
> the letters being just one token/node in the tree?

Isn't that what fragments do? (not quite sure as I just use them
blindly, lol)

root : aDaD_rule;

fragment
aDaD_rule : 'a'+ 'D' 'a'+ 'D';

Matt

From parrt at cs.usfca.edu  Wed Aug  1 13:11:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Aug 2007 13:11:26 -0700
Subject: [antlr-interest] Combining into single token
In-Reply-To: <975a94850708011301y41924f33xa223f84a641e6e0d@mail.gmail.com>
References: <975a94850708011301y41924f33xa223f84a641e6e0d@mail.gmail.com>
Message-ID: <A9704F43-415F-4E0B-A4B7-26F7AB19C159@cs.usfca.edu>


On Aug 1, 2007, at 1:01 PM, Joel Shellman wrote:

> This grammar:
>
> grammar SimpleTest;
> options {
>     output=AST;
> }
>
> root	:	'a'+ 'D' 'a'+ 'D';
>
> If you input aaDaaD to this grammar, it will result in a tree of ^(nil
> a a D a a D). Each letter is a different node in the tree. How can I
> change this so that the above would result in ^(nil aaDaaD), with all
> the letters being just one token/node in the tree?

change root to ROOT and then have

root : ROOT ;

You get a one token tree then.

Ter


From Stephen_Hardy at rabbit.com  Wed Aug  1 13:14:33 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Wed, 1 Aug 2007 13:14:33 -0700
Subject: [antlr-interest] Request option to check for undefined tokens in
	tree grammar, Antlr 3.0
In-Reply-To: <6D7F82E1-A700-455F-8CCF-19433CEFCC4B@cs.usfca.edu>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F041@dvs-sms-mail01.digi.com>

I made a typo in my tree grammar where a token was misspelt.
Unfortunately, ANTLR happily added that never-to-be-used token to the
list, so no error was flagged and it took a little time to track down
the error.

Would it be possible to add an option to a tree grammar to make Antlr
issue a warning if tokens were defined but not defined in the *.tokens
file?  I would recommend enabling the warning by default, since most
users (I think) would not want to define additional tokens in the tree
grammar which weren't in the parser grammar.

Regards,
SJH

From antlr at jazillian.com  Wed Aug  1 13:46:22 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 01 Aug 2007 16:46:22 -0400
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <b46e0d5e0708011215s1322d25dk4859a737e5434445@mail.gmail.com>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>	<693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>	<DCFA9F92-DFE4-49B2-81A8-3856A1B27499@cs.usfca.edu>
	<b46e0d5e0708011215s1322d25dk4859a737e5434445@mail.gmail.com>
Message-ID: <46B0F11E.6040601@jazillian.com>

If we're listing places where lexer behavior depends on context, here's 
another one...
In COBOL, you can specify the set of valid input chars by saying
"ALPHABET IS ASCII" or "ALPHABET IS EBCDIC" within the file that
you're lexing. You can also list specific characters and ranges after 
"ALPHABET IS..."

Also, you can say "CURRENCY SIGN IS <char>", which has the effect of
using some character to replace '$' in the grammar. Similarly,
"DECIMAL-POINT IS COMMA" switches all the ','s and '.'s.

And, of course, there's the fixed-format issue: COBOL code can either be 
"free-format"
or "fixed-format" (where the first 7 chars of each column are ignored). 
Though this is
normally an option when running a COBOL compiler, there are also 
non-standard
constructs within a file itself to say "this file is fixed format".

All of these are pretty easy to handle with a simple preprocessor.

From jshellman at gmail.com  Wed Aug  1 13:52:57 2007
From: jshellman at gmail.com (Joel Shellman)
Date: Wed, 1 Aug 2007 13:52:57 -0700
Subject: [antlr-interest] Combining into single token
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20264E035@orsmsx417.amr.corp.intel.com>
References: <975a94850708011301y41924f33xa223f84a641e6e0d@mail.gmail.com>
	<A10CD303B51F814DB568A8AAF02174C20264E035@orsmsx417.amr.corp.intel.com>
Message-ID: <975a94850708011352y76a60fbeof08dd86263fb2b92@mail.gmail.com>

On 8/1/07, Diehl, Matthew J <matthew.j.diehl at intel.com> wrote:
> > root  :       'a'+ 'D' 'a'+ 'D';
> >
> > If you input aaDaaD to this grammar, it will result in a tree of ^(nil
> > a a D a a D). Each letter is a different node in the tree. How can I
> > change this so that the above would result in ^(nil aaDaaD), with all
> > the letters being just one token/node in the tree?
>
> Isn't that what fragments do? (not quite sure as I just use them
> blindly, lol)
>
> root : aDaD_rule;
>
> fragment
> aDaD_rule : 'a'+ 'D' 'a'+ 'D';


No, that's not what fragments do--they make rules non-global--only
accessible from other rules (a very handy thing). That said, I found I
did need fragments for the full grammar I was doing--so thanks for the
tip!

Terrence's post did exactly what I wanted.

Thanks!

From antlr at mirality.co.nz  Wed Aug  1 13:56:18 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 02 Aug 2007 08:56:18 +1200
Subject: [antlr-interest] Request option to check for undefined tokens
 in tree grammar, Antlr 3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F041@dvs-sms-mail01.digi .com>
References: <6D7F82E1-A700-455F-8CCF-19433CEFCC4B@cs.usfca.edu>
	<62BABE024B7C074E9194E9727A418979C4F041@dvs-sms-mail01.digi.com>
Message-ID: <20070801205647.113E511EB90@www.antlr.org>

At 08:14 2/08/2007, Hardy, Stephen wrote:
 >Would it be possible to add an option to a tree grammar to make
 >Antlr issue a warning if tokens were defined but not defined in
 >the *.tokens file?  I would recommend enabling the warning by
 >default, since most users (I think) would not want to define
 >additional tokens in the tree grammar which weren't in the
 >parser grammar.

I recall suggesting something similar a while back, except for 
tokens mentioned in the parser of a combined grammar but without a 
lexer rule or an entry in the tokens block.  Bit me a few times :)

It'd be handy to have a strict mode to avoid this sort of 
thing.  It's much better to have a compile-time error if you use 
something undeclared than to have it magically create whatever 
you're referring to -- especially when that reference was 
unintended.


From kverma at yahoo.com  Wed Aug  1 14:21:51 2007
From: kverma at yahoo.com (Kamal Verma)
Date: Wed, 1 Aug 2007 14:21:51 -0700 (PDT)
Subject: [antlr-interest] Simple grammar help needed
Message-ID: <87376.21072.qm@web54607.mail.re2.yahoo.com>

thanks again; I have ordered the book I think that will help, meanwhile it arrives, I started working to first recognize following constructs,

1) Name1="Value1" 
2) Name2=/Value2/

Once this works I will weave them into the conditional expression. Using following grammar, but now It recognizes (1) but has MismatchToken in the (2). Attached is the grammar created. Now the question is,

1) Any better way to do this ?
2) In the grammar below can I do like regex:  SLASH NOT_SLASH SLASH ?? if yes, can you please point me out on that ?

----------
grammar ExParser;

regexCompare
    : propName '=' REG_EXP_CHARS 
    ;

fragment REG_EXP_CHARS
    :    '/'!   
        (    REG_EXP_CHAR
        )*   
        '/'!
        ;

propCompare
    : propName '=' STRING_LITERAL 
    ;

propName
    :    IDENTIFIER
    ;

fragment REG_EXP_CHAR
    : (IDENTIFIER_PART_CHARACTER|'^'|'+'|'*'|'.') 
    ;
    

IDENTIFIER
    :    IDENTIFIER_START_CHARACTER (IDENTIFIER_PART_CHARACTER)*
    ;

IDENTIFIER_START_CHARACTER
    :    ('a'..'z'|'A'..'Z'|'_'|'$') 
    ;

IDENTIFIER_PART_CHARACTER
    :    ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$') 
    ;


STRING_LITERAL
    :    REGULAR_STRING_LITERAL
    |    VERBATIM_STRING_LITERAL
    ;
    
fragment REGULAR_STRING_LITERAL
    :    '\"'!   
        (    REGULAR_STRING_LITERAL_CHARACTER
        )*   
        '\"'!
    ;

fragment REGULAR_STRING_LITERAL_CHARACTER
    :    SINGLE_REGULAR_STRING_LITERAL_CHARACTER
    |    SIMPLE_ESCAPE_SEQUENCE
    ;
    
fragment SINGLE_REGULAR_STRING_LITERAL_CHARACTER
    :     ~( '\"' | '\\' | '\u000D' | '\u000A' | '\u2028' | '\u2029')
    ;

fragment VERBATIM_STRING_LITERAL
    :
    ~('\"' | '\\')
    ;

fragment SIMPLE_ESCAPE_SEQUENCE
    :    '\'' | '\\"' | '\\\\' | '\\0' | '\\a'  
    |    '\\b' | '\\f'  | '\\n'  | '\\r' | '\\t' | '\\v'
    ;
-----------

Any ideas ?

Thanks in advance,
_K



----- Original Message ----
From: "Diehl, Matthew J" <matthew.j.diehl at intel.com>
To: Kamal Verma <kverma at yahoo.com>
Sent: Wednesday, August 1, 2007 1:05:48 PM
Subject: RE: [antlr-interest] Simple grammar help needed



 
DIV {
MARGIN:0px;}



Kamal,

 

sorry, for the lack of time, I'll just write out real quick 
how I'd approach this...and you'll have to correct my code yourself 
:)

 

It looks like you can use any number of ANDs and ORs, 
so:

 

grammar test;

options {

  output=AST;

  ASTLabelType=CommonTree;

}

 

tokens {

  OR='OR';

  AND='AND';

  NOT='NOT';

}

 

input

  : expression* //(actually, I don't know how 
you're separating your individual lines of expressions, so you'd have to do 
something different here maybe)

  ;

 

expression

  : NOT? simpleExpression //not sure if this is legal, 
but this allows parens or no parens for: NOT (Name1=/regex/) or NOT 
Name1=/regex/

  ;

 

simpleExpression

  : assignment ( (OR | AND) 
simpleExpression)

  ;

 

assignment

  : '(' ID '=' REGEX ')'

  | ID '=' REGEX

  ;

 

And then you've just got to define the lexer, which with all of the sample grammars online, shouldn't be too hard

Best of luck!

Matt





  
  
  From: Kamal Verma [mailto:kverma at yahoo.com] 
  
Sent: Tuesday, July 31, 2007 7:17 PM
To: Diehl, Matthew 
  J
Subject: Re: [antlr-interest] Simple grammar help 
  needed



  

  
  thanks 
  Matt,
I was wondering if you an example on how to approach it? Anyone with 
  an starting grammer can be of help!
Thanks a tons in advance.
-K


  ----- 
  Original Message ----
From: "Diehl, Matthew J" 
  <matthew.j.diehl at intel.com>
To: Kamal Verma 
  <kverma at yahoo.com>
Sent: Tuesday, July 31, 2007 6:25:19 
  PM
Subject: RE: [antlr-interest] Simple grammar help needed


  DIV {
MARGIN:0px;}


  Kamal

   

  too simple as in: too simple due to the learning curve of 
  ANTLR?  -> maybe

  too simple as in: too simple to 
  do -> definitely not :)  I'm fully converted to using ANTLR on 
  things that are a little too complex to do with grep or perl 
  'easily'.

   

  If it was me, I would do it in ANTLR, especially since 
  I've used it for over a couple months, and am very comfortable with it, and 
  new projects use a lot of similar code (so a lot of cutting and pasting 
  between different projects makes it easy).  If I hadn't used ANTLR 
  before, maybe I wouldn't, and would just try to hand-write it in java or 
  something like that...

   

  Matt


  
    
    
    From: antlr-interest-bounces at antlr.org 
    [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kamal 
    Verma
Sent: Tuesday, July 31, 2007 2:55 PM
To: 
    antlr-interest at antlr.org
Subject: [antlr-interest] Simple grammar 
    help needed



    

    
    I am new to the ANTLR, I have a requirement to parse following kind of 
    input,


(Name1=/regex/) AND (Name2='value')
(Name1=/regex/) 
    OR  (Name2='value')
NOT (Name1=/regex/) 
((Name1=/regex/) 
    OR  (Name2='value')) AND Name2='value'


Do you think it is 
    too simple to try to write a lexer and parser for this ?

Thanks in 
    the advance,
-K





    
    Fussy? Opinionated? Impossible to please? Perfect. Join Yahoo!'s user panel and lay it on us. 
  





  
  Be a better Globetrotter. Get 
  better travel answers from someone who knows.
Yahoo! Answers - Check it 
  out. 





       
____________________________________________________________________________________
Moody friends. Drama queens. Your life? Nope! - their life, your story. Play Sims Stories at Yahoo! Games.
http://sims.yahoo.com/  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070801/f945dc1b/attachment-0001.html 

From antlr-list at arizona-software.ch  Wed Aug  1 21:32:30 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 1 Aug 2007 21:32:30 -0700
Subject: [antlr-interest] Bug in ANTLRWorks V1.1.1
In-Reply-To: <46B0BE65.8070403@kortmann.de>
References: <46B0BE65.8070403@kortmann.de>
Message-ID: <F3D09E68-A1DF-49F1-B065-C4DC8EB1914B@arizona-software.ch>

Thanks. It has been fixed. I hope to release version 1.1.2 tonight or  
tomorrow.

Regards,

Jean

On Aug 1, 2007, at 10:09 AM, Martin Kortmann wrote:

> Hi,
>
> I found a problem in ANTLRWorks Version 1.1.1
> When i start the debugger and choose "file" in
> the "Input Text Dialog" then everything is OK.
> Then when i stop the debugger, start it again and choose
> a new file in the Dialog, the old file ist used.
> To switch to another inputfile, i have to switch to
> "text", run the debugger, stop it and switch back to
> file input.
>
> Martin


From a.shneyderman at gmail.com  Thu Aug  2 00:38:20 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Thu, 2 Aug 2007 09:38:20 +0200
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <DCFA9F92-DFE4-49B2-81A8-3856A1B27499@cs.usfca.edu>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
	<693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
	<DCFA9F92-DFE4-49B2-81A8-3856A1B27499@cs.usfca.edu>
Message-ID: <693a69ba0708020038g52896089we16d33dec4474f9@mail.gmail.com>

> Interesting...well, the stack was not meant to work across lexer
> nextToken calls, only nested function calls.  The dyn scoping here is
> for nesting not for stacks across method calls.

.... ahh yes global scopes will not help me as I do not have a lexer
rule that starts with '{' and ends with '}'. I guess that would be one
silly lexer anyway.

I guess the hackish solution as it exists is the best we can do for now.
Thanks, for making me think through this :-)

Alex.

From obdrzalek at gmail.com  Thu Aug  2 05:46:18 2007
From: obdrzalek at gmail.com (Jan Obdrzalek)
Date: Thu, 2 Aug 2007 14:46:18 +0200
Subject: [antlr-interest] Rewrite rule for multiple alternatives
Message-ID: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.com>

Hi,

what is the correct way to write this rewrite rule?

   :    '{' (a | b | c)* '}'  -> ^(COMPOUND (a | b | c)*)

I.e. I want to have a tree with the root COMPOUND and with the children
given by the rules a,b,c in the original order. ANTLRv3 does not like my
intuitive notation :( And I do not want to change the grammar much. The
examples in the book are all a little bit different (unless I missed some).

Thanks for all suggestions,
    Jan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/db8938a5/attachment.html 

From aliaazimi at yahoo.com  Thu Aug  2 05:58:50 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 2 Aug 2007 05:58:50 -0700 (PDT)
Subject: [antlr-interest] Rewrite rule for multiple alternatives
In-Reply-To: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.com>
Message-ID: <80381.57141.qm@web58102.mail.re3.yahoo.com>

Hi,
   
  I would do the following:
   
  rule: lc='{' subRule* '}'  -> ^(COMPOUND[$lc,"COMPOUND"] subRule*)
     ;
   
  subRule
      :a
    |b
    |c 
    ;
   
  Best wishes,
   
  Al

Jan Obdrzalek <obdrzalek at gmail.com> wrote:
  Hi,

what is the correct way to write this rewrite rule?

   :    '{' (a | b | c)* '}'  -> ^(COMPOUND (a | b | c)*)

I.e. I want to have a tree with the root COMPOUND and with the children given by the rules a,b,c in the original order. ANTLRv3 does not like my intuitive notation :( And I do not want to change the grammar much. The examples in the book are all a little bit different (unless I missed some). 

Thanks for all suggestions,
    Jan


       
---------------------------------
Shape Yahoo! in your own image.  Join our Network Research Panel today!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/e995f2b8/attachment.html 

From antlr at mirality.co.nz  Thu Aug  2 05:59:26 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 03 Aug 2007 00:59:26 +1200
Subject: [antlr-interest] Rewrite rule for multiple alternatives
In-Reply-To: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.co
 m>
References: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.com>
Message-ID: <20070802125933.1B73111EBBB@www.antlr.org>

At 00:46 3/08/2007, Jan Obdrzalek wrote:
>what is the correct way to write this rewrite rule?
>
>    :    '{' (a | b | c)* '}'  -> ^(COMPOUND (a | b | c)*)

Haven't tried it, but this ought to work:

x : '{' y* '}' -> ^(COMPOUND y*);
y : a | b | c;


From email at kortmann.de  Thu Aug  2 08:23:27 2007
From: email at kortmann.de (Martin Kortmann)
Date: Thu, 02 Aug 2007 17:23:27 +0200
Subject: [antlr-interest] how to "eat" something in the parser?
Message-ID: <46B1F6EF.50509@kortmann.de>

Hi,

My parser grows and the problems also ;-)
The fileformat that i would like to parse is divided
into sections, each limited by an start and stop symbol.
I like to ignore some of this sections an tried the
following construction:

grammar test;

// start rule
projectfile
	:	(section | eatthis)*
	;
	
section	:	START 'section'
			Parameter=INT
		END 'section'
	;
	
eatthis	:	START 'eatthis'
			.*
		END 'eatthis'
	;
	
START	:	'start';
END	:	'end';
INT	:	('0'..'9')+;
WS	:	(' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;};

Testinput is:

start section
  1
end section
start eatthis
 this ist some text to ignore (blubb) [0] {};
end eatthis
start section
  2
end section

The first problem: "eatthis" doesnt work :-(
The second Problem, if it would work, then it should
also work for text like

start eatthis
  start innersection
    start some_other
      forget about everything between start and stop eatthis.
    end some_other
  end innersection
end eatthis

whould someone so nice and put me into the right direction?

Thanks Martin

From ihok at hotmail.com  Thu Aug  2 09:26:00 2007
From: ihok at hotmail.com (Jack Tanner)
Date: Thu, 2 Aug 2007 16:26:00 +0000 (UTC)
Subject: [antlr-interest] wildcard isn't?
Message-ID: <loom.20070802T182231-642@post.gmane.org>

I have the following grammar:

line	:	comment? EOL ;
comment	:	'#' .* ;
EOL	:	'\r' | '\n' | '\r\n' ;

It fails on this input:

# foo/bar

The error relates to the slash between foo and bar. I can modify the grammar as
follows:

comment	:	'#' ( . | '/')* ;

It works fine then, but it seems bizarre that the . wildcard doesn't consume the
slash. Is that a bug, or am I misunderstanding the wildcard?



From rschulz at sonic.net  Thu Aug  2 09:36:21 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 2 Aug 2007 09:36:21 -0700
Subject: [antlr-interest] wildcard isn't?
In-Reply-To: <loom.20070802T182231-642@post.gmane.org>
References: <loom.20070802T182231-642@post.gmane.org>
Message-ID: <200708020936.21496.rschulz@sonic.net>

On Thursday 02 August 2007 09:26, Jack Tanner wrote:
> I have the following grammar:
>
> line	:	comment? EOL ;
> comment	:	'#' .* ;
> EOL	:	'\r' | '\n' | '\r\n' ;
>
> It fails on this input:
>
> # foo/bar
>
> The error relates to the slash between foo and bar. I can modify the
> grammar as follows:
>
> comment	:	'#' ( . | '/')* ;
>
> It works fine then, but it seems bizarre that the . wildcard doesn't
> consume the slash. Is that a bug, or am I misunderstanding the
> wildcard?

If the grammar you showed in your email is really what you're using, 
then the problem is that these are _parser_ rules and the '.' wildcard 
is a _token_ wildcard, not a character wildcard as it would be a lexer 
rule.

Lexer rules must be named with their first letter upper case.


Randall Schulz

From jimi at temporal-wave.com  Thu Aug  2 09:36:40 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 2 Aug 2007 09:36:40 -0700
Subject: [antlr-interest] wildcard isn't?
In-Reply-To: <loom.20070802T182231-642@post.gmane.org>
References: <loom.20070802T182231-642@post.gmane.org>
Message-ID: <051466DAA0D608439E196797955018D76F65@wavemachine.temporal-wave.com>

Wildcard in a parser rule (that starts with lower case) means "Any
defined token", but you don't have any token defined for '/'. A LEXER
rule starts with an Upper Case letter and there, '.' also means anything
in your character set, hence . means any character.

So you want something like:

COMMENT: '#' ~('\n'|'\r')*

Then you can use the COMMENT token in your parser rule.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jack Tanner
> Sent: Thursday, August 02, 2007 9:26 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] wildcard isn't?
> 
> I have the following grammar:
> 
> line	:	comment? EOL ;
> comment	:	'#' .* ;
> EOL	:	'\r' | '\n' | '\r\n' ;
> 
> It fails on this input:
> 
> # foo/bar
> 
> The error relates to the slash between foo and bar. I can modify the
> grammar as
> follows:
> 
> comment	:	'#' ( . | '/')* ;
> 
> It works fine then, but it seems bizarre that the . wildcard doesn't
> consume the
> slash. Is that a bug, or am I misunderstanding the wildcard?
> 


From kroepke at classdump.org  Thu Aug  2 09:36:50 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 2 Aug 2007 18:36:50 +0200
Subject: [antlr-interest] wildcard isn't?
In-Reply-To: <loom.20070802T182231-642@post.gmane.org>
References: <loom.20070802T182231-642@post.gmane.org>
Message-ID: <073E6CB0-CC2B-4311-8C4E-DE58A9951A83@classdump.org>


On Aug 2, 2007, at 6:26 PM, Jack Tanner wrote:

> It works fine then, but it seems bizarre that the . wildcard  
> doesn't consume the
> slash. Is that a bug, or am I misunderstanding the wildcard?

There's a distinction between what happens in lexer vs. parser rules  
(rules starting with a lowercase
letter are always parser rules).

The . in parser rules consumes tokens and not individual characters,  
so what happens in

line	:	comment? EOL ;
comment	:	'#' .* ;
EOL	:	'\r' | '\n' | '\r\n' ;

is that ANTLR consumes any number of any token in comment. What  
tokens does you lexer emit?
In lexer grammars the . means any character.

Surely this is not the entire grammar, right?

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From ihok at hotmail.com  Thu Aug  2 09:48:53 2007
From: ihok at hotmail.com (Jack Tanner)
Date: Thu, 2 Aug 2007 16:48:53 +0000 (UTC)
Subject: [antlr-interest] wildcard isn't?
References: <loom.20070802T182231-642@post.gmane.org>
	<051466DAA0D608439E196797955018D76F65@wavemachine.temporal-wave.com>
Message-ID: <loom.20070802T184737-177@post.gmane.org>

Randall, Jim, and Kay, thank you all for your comments. This is my first ANTLR
project (can you tell?), and it's starting to make a bit more sense.


From marcosmarin at gmail.com  Thu Aug  2 10:48:12 2007
From: marcosmarin at gmail.com (=?ISO-8859-1?Q?Marcos_Mar=EDn?=)
Date: Thu, 2 Aug 2007 12:48:12 -0500
Subject: [antlr-interest] The filter option
Message-ID: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>

Hello, I'm new to ANTLR, what I'm trying to do is a very simple parser to
keep track of variables in a C/C++ source file and what function they are
declared in (if any).
This is my grammar so far (I'm mostly just testing, it's not complete):

grammar cvartracker;

options {
    language = CSharp;
    filter = true;
}

tokens {
    SEMI = ';' ;
}

@lexer::namespace {
CVarTracker
}

@parser::namespace {
CVarTracker
}

@header {
using System.Collections.Generic;
}

@members {
public struct Variable
{
    public string Name;
    public string Type;
    public string Function;
}

Dictionary<string, List<Variable>> variables = new Dictionary<string,
List<Variable>> ();
string current_function = string.Empty;
int curly_level = 0;

public Dictionary<string, List<Variable>> Variables {
    get { return variables; }
}

}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

parse
    : (sentence)* EOF
    ;

sentence
    : function_declaration { System.Console.WriteLine ("function: '{0}'",
$function_declaration.text); }
    | variable_declaration { System.Console.WriteLine ("variable: '{0}'",
$variable_declaration.text); }
    ;

function_declaration
    : PRIMITIVE IDENTIFIER '(' PRIMITIVE IDENTIFIER (',' PRIMITIVE
IDENTIFIER)* ')'
    ;

variable_declaration
    : PRIMITIVE IDENTIFIER SEMI
    | PRIMITIVE IDENTIFIER '=' .* SEMI
    ;


/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

PRIMITIVE
    : 'int'
    | 'float'
    | 'char'
    ;

IDENTIFIER
    : (ALPHANUMERIC)+
    ;

WS : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; } ;

COMMENT : '/*' .* '*/' { $channel=HIDDEN; } ;

LINE_COMMENT : '//' ~('\n'|'\r')* '\r'? '\n' { $channel=HIDDEN; } ;

fragment ALPHANUMERIC : ('a'..'z'|'A'..'Z'|'_'|'0'..'9') ;


Running this very simple test case:

int main (int arg)
{
    int some_int;
}

Nothing happens (ie, the System.Console.WriteLine() that is supposed to be
called when there is a function or variable declaration is not called). If I
turn the filter option off it does work, but then it complains about other
things I'm not interested in. Anyone have any ideas on what I can do?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/5b5d1e44/attachment.html 

From Stephen_Hardy at rabbit.com  Thu Aug  2 11:06:43 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Thu, 2 Aug 2007 11:06:43 -0700
Subject: [antlr-interest] "new CommonToken" issued in Java target in spite
	of setting TokenLabelType to something else
Message-ID: <62BABE024B7C074E9194E9727A418979C4F043@dvs-sms-mail01.digi.com>

There seems to be a bug in the Java target string template.  Even though
I set TokenLabelType = MyToken in the parser/lexer options, the lexer
template is generating code like

            MyToken DECIMAL_LITERAL1=null;
		...
            DECIMAL_LITERAL1 = new CommonToken(input,
Token.INVALID_TOKEN_TYPE, 
                 Token.DEFAULT_CHANNEL, 
                 DECIMAL_LITERAL1Start1480, getCharIndex()-1);		

(which causes a type mismatch compile error) for .g file input like

LINE_COMMAND 
	: '#' WSNONL+ 
		DECIMAL_LITERAL 
		{
			line_offset =
Integer.parseInt($DECIMAL_LITERAL.text) - tokenStartLine;
		}
		WSNONL+ 
		STRING_LITERAL 
		{
			currentFile = $STRING_LITERAL.text;
			file_changed = true;
		}
		~('\n'|'\r')* '\r'? '\n' {skip();}
    ;

The error seems to be fixable by modifying the Java.stg (string
template) file in the source, however I have not had previous success in
modifying the templates owing to my abysmal lack of understanding of
Java etc.

Can anyone tell me (preferably in words of 1 syllable or less) how to
get Antlr to actually read a modified template file?  Where do I have to
stick it to get it to be read?  Somebody mentioned putting it in the
classpath, but the classpath is not really a path but a list of jar
files.  How do I add the template files to a jar file??!!??

Regards,
SJH

From jimi at temporal-wave.com  Thu Aug  2 11:20:41 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 2 Aug 2007 11:20:41 -0700
Subject: [antlr-interest] The filter option
In-Reply-To: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>

Marcos,

 

The C parser in the downloadable examples does something almost exactly like this. Why don't you start there as you will have a much more complete grammar that way too?

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Marcos Mar?n
Sent: Thursday, August 02, 2007 10:48 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] The filter option

 

Hello, I'm new to ANTLR, what I'm trying to do is a very simple parser to keep track of variables in a C/C++ source file and what function they are declared in (if any).
This is my grammar so far (I'm mostly just testing, it's not complete): 

grammar cvartracker;

options {
    language = CSharp;
    filter = true;

 

 
Nothing happens (ie, the System.Console.WriteLine() that is supposed to be called when there is a function or variable declaration is not called). If I turn the filter option off it does work, but then it complains about other things I'm not interested in. Anyone have any ideas on what I can do? 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/231eca3a/attachment.html 

From email at kortmann.de  Thu Aug  2 12:10:00 2007
From: email at kortmann.de (Martin Kortmann)
Date: Thu, 02 Aug 2007 21:10:00 +0200
Subject: [antlr-interest] ANTLRWorks 1.1.1, Java Exception on debug end
Message-ID: <46B22C08.6040207@kortmann.de>

Hi,

I see an Java Exception at the end of every debug run
inside the "Console" Window. Does this mean anything special?

Martin

[21:07:10] javax.swing.text.BadLocationException: Position not
represented by view
	at javax.swing.text.CompositeView.modelToView(Unknown Source)
	at javax.swing.text.BoxView.modelToView(Unknown Source)
	at javax.swing.plaf.basic.BasicTextUI$RootView.modelToView(Unknown Source)
	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
	at javax.swing.plaf.basic.BasicTextUI.modelToView(Unknown Source)
	at javax.swing.text.JTextComponent.modelToView(Unknown Source)
	at org.antlr.works.debugger.input.DBInputProcessorToken$1.run(Unknown
Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)



From Stephen_Hardy at rabbit.com  Thu Aug  2 12:24:05 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Thu, 2 Aug 2007 12:24:05 -0700
Subject: [antlr-interest] "new CommonToken" issued in Java target in
	spiteof setting TokenLabelType to something else
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F043@dvs-sms-mail01.digi.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F044@dvs-sms-mail01.digi.com>

OK, don't bother answering.  For the record, here is how to modify a
string template.  Replace / with \ if on windows.

Suppose you have installed in c:/antlr-3.0.

Go to c:/antlr-3.0/src/org/antlr/codegen/templates
and make a new directory (e.g. JavaFix).  Copy all .stg files from the
broken set (say, Java) and make modifications as desired.

Go to c:/antlr-3.0/src and issue the command
  jar cf ../lib/JavaFix.jar org/antlr/codegen/templates/JavaFix

The 'jar' command is found in your JDK distribution e.g. c:/program
files/java/jdk1.6.0_02/bin.

The ../lib directory is where all the antlr jar files are kept.  Add
JavaFix.jar to the classpath when running Antlr.

Modify your .g file to add the language=JavaFix option to the main
options section.

Most of the above is explained in TDAR and other places, but I have
never found a step-by-step guide for dummies like me.

Regards,
SJH

PS: unfortunately, replacing "CommonToken" in Java.stg with <LabelType>
fixed the original error, but now I have another puzzler in that
imaginary tokens seem to be created with a base Token type, not MyToken.
Sigh...


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
> Sent: Thursday, August 02, 2007 11:07 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] "new CommonToken" issued in Java 
> target in spiteof setting TokenLabelType to something else
> 
> There seems to be a bug in the Java target string template.  
> Even though
> I set TokenLabelType = MyToken in the parser/lexer options, the lexer
> template is generating code like
> 
>             MyToken DECIMAL_LITERAL1=null;
> 		...
>             DECIMAL_LITERAL1 = new CommonToken(input,
> Token.INVALID_TOKEN_TYPE, 
>                  Token.DEFAULT_CHANNEL, 
>                  DECIMAL_LITERAL1Start1480, 
> getCharIndex()-1);		
> 
> (which causes a type mismatch compile error) for .g file input like
> 
> LINE_COMMAND 
> 	: '#' WSNONL+ 
> 		DECIMAL_LITERAL 
> 		{
> 			line_offset =
> Integer.parseInt($DECIMAL_LITERAL.text) - tokenStartLine;
> 		}
> 		WSNONL+ 
> 		STRING_LITERAL 
> 		{
> 			currentFile = $STRING_LITERAL.text;
> 			file_changed = true;
> 		}
> 		~('\n'|'\r')* '\r'? '\n' {skip();}
>     ;
> 
> The error seems to be fixable by modifying the Java.stg (string
> template) file in the source, however I have not had previous 
> success in
> modifying the templates owing to my abysmal lack of understanding of
> Java etc.
> 
> Can anyone tell me (preferably in words of 1 syllable or less) how to
> get Antlr to actually read a modified template file?  Where 
> do I have to
> stick it to get it to be read?  Somebody mentioned putting it in the
> classpath, but the classpath is not really a path but a list of jar
> files.  How do I add the template files to a jar file??!!??
> 
> Regards,
> SJH
> 

From antlr at jazillian.com  Thu Aug  2 12:36:24 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Aug 2007 15:36:24 -0400
Subject: [antlr-interest] book errata?
Message-ID: <46B23238.8090003@jazillian.com>

Is there anywhere a list of errata for the ANTLR book?

On page 181 of the PDF and page 168 of the dead-tree version, we have:

variableDefinition
: modifiers type ID ('=' expression)? ';'
-> {inMethod}? ^(VARIABLE ID modifier* type expression?)
-> ^(FIELD ID modifier* type expression?)
;

...where "modifiers" should be changed to "modifier*" (or vice-versa).



From parrt at cs.usfca.edu  Thu Aug  2 12:44:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Aug 2007 12:44:25 -0700
Subject: [antlr-interest] "new CommonToken" issued in Java target in
	spite of setting TokenLabelType to something else
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F043@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F043@dvs-sms-mail01.digi.com>
Message-ID: <93014D15-7F5D-4BFF-81AF-5A051DD15356@cs.usfca.edu>


On Aug 2, 2007, at 11:06 AM, Hardy, Stephen wrote:

> There seems to be a bug in the Java target string template.  Even  
> though
> I set TokenLabelType = MyToken in the parser/lexer options, the lexer
> template is generating code like
>
>             MyToken DECIMAL_LITERAL1=null;
> 		...
>             DECIMAL_LITERAL1 = new CommonToken(input,
> Token.INVALID_TOKEN_TYPE,
>                  Token.DEFAULT_CHANNEL,
>                  DECIMAL_LITERAL1Start1480, getCharIndex()-1);		
>
> (which causes a type mismatch compile error) for .g file input like

Ack. added bug:

http://www.antlr.org:8888/browse/ANTLR-170

Ter

From antlr at jazillian.com  Thu Aug  2 12:46:22 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Aug 2007 15:46:22 -0400
Subject: [antlr-interest] Rewrite rule for multiple alternatives
In-Reply-To: <20070802125933.1B73111EBBB@www.antlr.org>
References: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.com>
	<20070802125933.1B73111EBBB@www.antlr.org>
Message-ID: <46B2348E.7060305@jazillian.com>

Gavin Lambert wrote:
> At 00:46 3/08/2007, Jan Obdrzalek wrote:
>> what is the correct way to write this rewrite rule?
>>
>>    :    '{' (a | b | c)* '}'  -> ^(COMPOUND (a | b | c)*)
>
> Haven't tried it, but this ought to work:
>
> x : '{' y* '}' -> ^(COMPOUND y*);
> y : a | b | c;

I find myself doing this refactoring a lot. It's a shame having to 
refactor the grammar
to make the rewrite rule do what you want. I wonder if ANTLR could be 
enhanced
to allow the sort of thing that Jan has above? If not, how about 
allowing him to assign
a name to any arbirarily complex expression on the left like this:

'{' mystuff=(a | b | c)* '}'  -> ^(COMPOUND $mystuff )


From parrt at cs.usfca.edu  Thu Aug  2 12:55:08 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Aug 2007 12:55:08 -0700
Subject: [antlr-interest] book errata?
In-Reply-To: <46B23238.8090003@jazillian.com>
References: <46B23238.8090003@jazillian.com>
Message-ID: <4E19D248-803E-4944-8471-568CBFC0C1E9@cs.usfca.edu>

oops.

http://books.pragprog.com/titles/tpantlr/errata

just did a reprint...missed by a week ;)  can u add to list?

Ter
On Aug 2, 2007, at 12:36 PM, Andy Tripp wrote:

> Is there anywhere a list of errata for the ANTLR book?
>
> On page 181 of the PDF and page 168 of the dead-tree version, we have:
>
> variableDefinition
> : modifiers type ID ('=' expression)? ';'
> -> {inMethod}? ^(VARIABLE ID modifier* type expression?)
> -> ^(FIELD ID modifier* type expression?)
> ;
>
> ...where "modifiers" should be changed to "modifier*" (or vice-versa).
>
>


From parrt at cs.usfca.edu  Thu Aug  2 12:56:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Aug 2007 12:56:28 -0700
Subject: [antlr-interest] Rewrite rule for multiple alternatives
In-Reply-To: <46B2348E.7060305@jazillian.com>
References: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.com>
	<20070802125933.1B73111EBBB@www.antlr.org>
	<46B2348E.7060305@jazillian.com>
Message-ID: <26C83ED4-E090-40DA-B8F6-57118F87D6FD@cs.usfca.edu>


On Aug 2, 2007, at 12:46 PM, Andy Tripp wrote:

> Gavin Lambert wrote:
>> At 00:46 3/08/2007, Jan Obdrzalek wrote:
>>> what is the correct way to write this rewrite rule?
>>>
>>>    :    '{' (a | b | c)* '}'  -> ^(COMPOUND (a | b | c)*)
>>
>> Haven't tried it, but this ought to work:
>>
>> x : '{' y* '}' -> ^(COMPOUND y*);
>> y : a | b | c;
>
> I find myself doing this refactoring a lot. It's a shame having to  
> refactor the grammar
> to make the rewrite rule do what you want. I wonder if ANTLR could  
> be enhanced
> to allow the sort of thing that Jan has above? If not, how about  
> allowing him to assign
> a name to any arbirarily complex expression on the left like this:
>
> '{' mystuff=(a | b | c)* '}'  -> ^(COMPOUND $mystuff )

Here ya go :)

'{' (x+=a | x+=b | x+=c)* '}'  -> ^(COMPOUND $x*)

Ter

From antlr at mirality.co.nz  Thu Aug  2 13:02:32 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 03 Aug 2007 08:02:32 +1200
Subject: [antlr-interest] Rewrite rule for multiple alternatives
In-Reply-To: <46B2348E.7060305@jazillian.com>
References: <66cce1fb0708020546x225d45bawb0817b7bf5a57948@mail.gmail.com>
	<20070802125933.1B73111EBBB@www.antlr.org>
	<46B2348E.7060305@jazillian.com>
Message-ID: <20070802200238.E0A2A11EC55@www.antlr.org>

At 07:46 3/08/2007, Andy Tripp wrote:
 >I wonder if ANTLR could be enhanced to allow the sort of
 >thing that Jan has above? If not, how about allowing him
 >to assign a name to any arbirarily complex expression
 >on the left like this:
 >
 >'{' mystuff=(a | b | c)* '}'  -> ^(COMPOUND $mystuff )

Again, I haven't tried it, but IIRC something like this works too:

'{' (mystuff+=(a | b | c))* '}' -> ^(COMPOUND $mystuff*)


From marcosmarin at gmail.com  Thu Aug  2 13:23:38 2007
From: marcosmarin at gmail.com (=?ISO-8859-1?Q?Marcos_Mar=EDn?=)
Date: Thu, 2 Aug 2007 15:23:38 -0500
Subject: [antlr-interest] The filter option
In-Reply-To: <051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
Message-ID: <f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>

On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>  You are probably missing something but were you trying to use a filtering
> lexer with a parser? A filtering lexer is currently stand alone.
>

So you mean that I can't use a parser if I specify the filter option? if
this is the case, is there any way I can ignore everything else without the
filter option?

I'm sorry, this is all very new and confusing to me.

Jim
>
>
>
> *From:* Marcos Mar?n [mailto:marcosmarin at gmail.com]
> *Sent:* Thursday, August 02, 2007 12:54 PM
> *To:* Jim Idle
> *Subject:* Re: [antlr-interest] The filter option
>
>
>
> Thanks again for your help.
>
> I have looked at both C and C++ parser you mentioned and they are really
> much more than I would want, the C one is useless for me because I require
> to parse C++ files too, and the C++ parser is way to complicated for what I
> need.
>
> All I really want is to ignore *everything* except for lines that look
> like a variable declaration and function definitions. I don't really even
> care if the types are correct.
>
> I thought the filter option would help me with this, but apparently when I
> use it it ignores everything, am I using it wrong or am I missing something?
>
>
> On 8/2/07, *Jim Idle* <jimi at temporal-wave.com> wrote:
>
> The parser, or the example? The parser does not as C++ is a much less
> trivial problem than C, but there is a C++ grammar posted on the web site
> somewhere too.
>
>
>
> Jim
>
>
>
> *From:* Marcos Mar?n [mailto:marcosmarin at gmail.com]
> *Sent:* Thursday, August 02, 2007 11:40 AM
> *To:* Jim Idle
> *Subject:* Re: [antlr-interest] The filter option
>
>
>
> Thanks, I'll have a look at it.
>
> Does it work with C++ too?
>
> On 8/2/07, *Jim Idle* <jimi at temporal-wave.com > wrote:
>
> Marcos,
>
>
>
> The C parser in the downloadable examples does something almost exactly
> like this. Why don't you start there as you will have a much more complete
> grammar that way too?
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org]
> *On Behalf Of *Marcos Mar?n
> *Sent:* Thursday, August 02, 2007 10:48 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] The filter option
>
>
>
> Hello, I'm new to ANTLR, what I'm trying to do is a very simple parser to
> keep track of variables in a C/C++ source file and what function they are
> declared in (if any).
> This is my grammar so far (I'm mostly just testing, it's not complete):
>
> *grammar cvartracker;
>
> options {
>     language = CSharp;
>     filter = true;*
>
> * *
>
> *
> *Nothing happens (ie, the System.Console.WriteLine() that is supposed to
> be called when there is a function or variable declaration is not called).
> If I turn the filter option off it does work, but then it complains about
> other things I'm not interested in. Anyone have any ideas on what I can do?
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/cee41916/attachment-0001.html 

From antlr at jazillian.com  Thu Aug  2 13:33:34 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Aug 2007 16:33:34 -0400
Subject: [antlr-interest] character ranges in parser rules
Message-ID: <46B23F9E.3060505@jazillian.com>

I had this parser rule:

labelStatement:
    (LETTER (LETTER| '_'| '0'..'9')+ ':')
    ;

and of course somewhere else:
INT:
    ('0'..'9')+

...inadvertently putting a character range in a parser rule rather than 
a lexer rule.
That caused '0' and '9' to be parsed as individual tokens, not at all 
what I wanted.
Is it invalid to put a character range in a parser rule like this? Seems 
like an error
message would have been nice when antlr-compiling.

Then I changed it to:

labelStatement:
    (LETTER (LETTER| '_'|  ('0'..'9'))+ ':')
    ;

...and then ANTLR produces parser code with a matchRange() call in it, 
but matchRange()
is in the Lexer base class, not Parser. Again, a "you can't put ranges 
in a parser rule" msg
would have been nice.

Finally, changed it to:

labelStatement:
    (LETTER (LETTER| '_'| INT)+ ':')
    ;

And all is good :)

From antlr at mirality.co.nz  Thu Aug  2 14:22:43 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 03 Aug 2007 09:22:43 +1200
Subject: [antlr-interest] The filter option
In-Reply-To: <f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.co
 m>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
Message-ID: <20070802212255.D0DC611EC43@www.antlr.org>

At 08:23 3/08/2007, Marcos Mar?n wrote:
>So you mean that I can't use a parser if I 
>specify the filter option? if this is the case, 
>is there any way I can ignore everything else 
>without the filter option?

You can't use filtering in a combined 
lexer/parser grammar.  But you can create a 
standalone filtering lexer, then consume the 
tokens it generates using a separate standalone 
parser.  (See the tokenVocab option.) 


From email at kortmann.de  Thu Aug  2 14:28:52 2007
From: email at kortmann.de (Martin Kortmann)
Date: Thu, 02 Aug 2007 23:28:52 +0200
Subject: [antlr-interest] The filter option
In-Reply-To: <20070802212255.D0DC611EC43@www.antlr.org>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<20070802212255.D0DC611EC43@www.antlr.org>
Message-ID: <46B24C94.4010803@kortmann.de>

Gavin Lambert schrieb:
> At 08:23 3/08/2007, Marcos Mar?n wrote:
>> So you mean that I can't use a parser if I specify the filter option?
>> if this is the case, is there any way I can ignore everything else
>> without the filter option?
> 
> You can't use filtering in a combined lexer/parser grammar.  But you can
> create a standalone filtering lexer, then consume the tokens it
> generates using a separate standalone parser.  (See the tokenVocab option.)
> 

Where is the problem? It seems to work for me.

Martin

From marcosmarin at gmail.com  Thu Aug  2 14:34:10 2007
From: marcosmarin at gmail.com (=?ISO-8859-1?Q?Marcos_Mar=EDn?=)
Date: Thu, 2 Aug 2007 16:34:10 -0500
Subject: [antlr-interest] The filter option
In-Reply-To: <051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
Message-ID: <f31182ab0708021434p6596f668i54ee79b7ba2b25f3@mail.gmail.com>

On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>  As the last rule in your lexer you could use:
>
>
>
> ANY : . { $channel = HIDDEN; }
>

Thanks Jim, this worked perfectly :)

Thanks also to Gavin and Martin.


Which preserves the text but the parser won't see it. You can also use
> skip(); (Java target, I think).
>
>
>
> Jim
>
>
>
> *From:* Marcos Mar?n [mailto:marcosmarin at gmail.com]
> *Sent:* Thursday, August 02, 2007 1:24 PM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] The filter option
>
>
>
>
>
> On 8/2/07, *Jim Idle* <jimi at temporal-wave.com> wrote:
>
> You are probably missing something but were you trying to use a filtering
> lexer with a parser? A filtering lexer is currently stand alone.
>
>
> So you mean that I can't use a parser if I specify the filter option? if
> this is the case, is there any way I can ignore everything else without the
> filter option?
>
> I'm sorry, this is all very new and confusing to me.
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/1d0a1b40/attachment.html 

From jimi at temporal-wave.com  Thu Aug  2 14:40:08 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 2 Aug 2007 14:40:08 -0700
Subject: [antlr-interest] The filter option
In-Reply-To: <46B24C29.9080505@t-online.de>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<46B24C29.9080505@t-online.de>
Message-ID: <051466DAA0D608439E196797955018D702358C@wavemachine.temporal-wave.com>

Can't be in a combined grammar is what I meant :-)

> -----Original Message-----
> From: Martin Kortmann [mailto:Martin.Kortmann at t-online.de]
> 
> 
> ohh, i am using a filtering lexe with a parser and it seems to work.
> 
> Martin

From PascalJulien at gmx.de  Thu Aug  2 14:43:35 2007
From: PascalJulien at gmx.de (Pascal Julien)
Date: Thu, 02 Aug 2007 23:43:35 +0200
Subject: [antlr-interest] Syntactic predicates
Message-ID: <46B25007.5010305@gmx.de>

Hi,

I'm trying to define the following rule with a syntactic predicate:

bracket[StringTemplate st]
  : (')' TEXT)=> ')' {st.setAttribute("characters", ") ");}
  | ')' {st.setAttribute("characters", ")");}
  ;

But when I execute the grammar, I get an ANTLR error:
line 55:1 mismatched input ')' expecting '{'

The line contains the first ')' token of the input, but the following 
token is not a TEXT, but '{'.

Any idea, what's wrong with my rule?


Thanks in advance,
Pascal

From jshellman at gmail.com  Thu Aug  2 15:11:57 2007
From: jshellman at gmail.com (Joel Shellman)
Date: Thu, 2 Aug 2007 15:11:57 -0700
Subject: [antlr-interest] Multibyte character sets
Message-ID: <975a94850708021511pd4c0e6fu3ba10f196917e838@mail.gmail.com>

I did various searches and can't seem to find anything definitive on
ANTLR and StringTemplate's current support for multibyte character
sets such as UTF, shift-jis, etc.

Can I use ANTLR for it? If so, is there anything special that needs to
be done for it to work?

Thanks.

From antlr at jazillian.com  Thu Aug  2 15:24:44 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 02 Aug 2007 18:24:44 -0400
Subject: [antlr-interest] Syntactic predicates
In-Reply-To: <46B25007.5010305@gmx.de>
References: <46B25007.5010305@gmx.de>
Message-ID: <46B259AC.4000804@jazillian.com>

That first left paren, right after the colon, has no matching right paren.

Pascal Julien wrote:
> Hi,
>
> I'm trying to define the following rule with a syntactic predicate:
>
> bracket[StringTemplate st]
>  : (')' TEXT)=> ')' {st.setAttribute("characters", ") ");}
>  | ')' {st.setAttribute("characters", ")");}
>  ;
>
> But when I execute the grammar, I get an ANTLR error:
> line 55:1 mismatched input ')' expecting '{'
>
> The line contains the first ')' token of the input, but the following 
> token is not a TEXT, but '{'.
>
> Any idea, what's wrong with my rule?
>
>
> Thanks in advance,
> Pascal
>


From PascalJulien at gmx.de  Thu Aug  2 15:44:43 2007
From: PascalJulien at gmx.de (Pascal Julien)
Date: Fri, 03 Aug 2007 00:44:43 +0200
Subject: [antlr-interest] Syntactic predicates
Message-ID: <46B25E5B.1070905@gmx.de>

It has (right after TEXT).
Perhaps my explanation was not clear.
The error I get is no syntax error from ANTLR, but from the executed 
code generated by ANTLR.

Andy Tripp schrieb:
> That first left paren, right after the colon, has no matching right 
> paren.
>
> Pascal Julien wrote:
>> Hi,
>>
>> I'm trying to define the following rule with a syntactic predicate:
>>
>> bracket[StringTemplate st]
>>  : (')' TEXT)=> ')' {st.setAttribute("characters", ") ");}
>>  | ')' {st.setAttribute("characters", ")");}
>>  ;
>>
>> But when I execute the grammar, I get an ANTLR error:
>> line 55:1 mismatched input ')' expecting '{'
>>
>> The line contains the first ')' token of the input, but the following 
>> token is not a TEXT, but '{'.
>>
>> Any idea, what's wrong with my rule?
>>
>>
>> Thanks in advance,
>> Pascal
>>
>


From kroepke at classdump.org  Thu Aug  2 15:48:32 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 3 Aug 2007 00:48:32 +0200
Subject: [antlr-interest] Syntactic predicates
In-Reply-To: <46B25E5B.1070905@gmx.de>
References: <46B25E5B.1070905@gmx.de>
Message-ID: <57E508AC-0FFB-4338-BEAB-BCC5E024EEA9@classdump.org>


On Aug 3, 2007, at 12:44 AM, Pascal Julien wrote:

> The error I get is no syntax error from ANTLR, but from the  
> executed code generated by ANTLR.

What is the input and what are the other rules involved? Why do you  
think this rule is in fault?
It's too hard to say with just this rule and the error message.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From marcosmarin at gmail.com  Thu Aug  2 16:30:24 2007
From: marcosmarin at gmail.com (=?ISO-8859-1?Q?Marcos_Mar=EDn?=)
Date: Thu, 2 Aug 2007 18:30:24 -0500
Subject: [antlr-interest] The filter option
In-Reply-To: <051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
Message-ID: <f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>

On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>  As the last rule in your lexer you could use:
>
>
>
> ANY : . { $channel = HIDDEN; }
>


Actually, after testing more this does not work, it no longer complains
about curly braces but it does complain about anything else that is not one
of my rules. My guess is it does not complain about curly braces and it does
of other things because curly braces is only one char, so I tried ANY: .+
{$channel = HIDDEN;} ; but it gave me a warning of the rule being
unreachable.

I'm going to try creating a standalone lexer and parser.

Which preserves the text but the parser won't see it. You can also use
> skip(); (Java target, I think).
>
>
>
> Jim
>
>
>
> *From:* Marcos Mar?n [mailto:marcosmarin at gmail.com]
> *Sent:* Thursday, August 02, 2007 1:24 PM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] The filter option
>
>
>
>
>
> On 8/2/07, *Jim Idle* <jimi at temporal-wave.com> wrote:
>
> You are probably missing something but were you trying to use a filtering
> lexer with a parser? A filtering lexer is currently stand alone.
>
>
> So you mean that I can't use a parser if I specify the filter option? if
> this is the case, is there any way I can ignore everything else without the
> filter option?
>
> I'm sorry, this is all very new and confusing to me.
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/fa3e6881/attachment-0001.html 

From jimi at temporal-wave.com  Thu Aug  2 16:33:19 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 2 Aug 2007 16:33:19 -0700
Subject: [antlr-interest] The filter option
In-Reply-To: <f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
	<f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702358E@wavemachine.temporal-wave.com>

You can't use  .+ like that in a lexer J. What that (kind of) means is that the first character to trigger the rule would try and eat everything up to the end of the text.

 

Perhaps you are better off using a filtering lexer in a stand alone grammar and then calling it from your parser.

 

Jim

 

From: Marcos Mar?n [mailto:marcosmarin at gmail.com] 
Sent: Thursday, August 02, 2007 4:30 PM
To: Jim Idle
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] The filter option

 

 

On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:

As the last rule in your lexer you could use:

 

ANY : . { $channel = HIDDEN; }



Actually, after testing more this does not work, it no longer complains about curly braces but it does complain about anything else that is not one of my rules. My guess is it does not complain about curly braces and it does of other things because curly braces is only one char, so I tried ANY: .+ {$channel = HIDDEN;} ; but it gave me a warning of the rule being unreachable. 

I'm going to try creating a standalone lexer and parser.

	 

	Which preserves the text but the parser won't see it. You can also use skip(); (Java target, I think).

	 

	Jim

	 

	From: Marcos Mar?n [mailto:marcosmarin at gmail.com] 
	Sent: Thursday, August 02, 2007 1:24 PM
	To: Jim Idle
	Cc: antlr-interest at antlr.org
	Subject: Re: [antlr-interest] The filter option

	 

	 

	On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:

	You are probably missing something but were you trying to use a filtering lexer with a parser? A filtering lexer is currently stand alone.

	
	So you mean that I can't use a parser if I specify the filter option? if this is the case, is there any way I can ignore everything else without the filter option? 
	
	I'm sorry, this is all very new and confusing to me.

		 

	 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/8ab9443a/attachment.html 

From warnero at gmail.com  Thu Aug  2 16:37:13 2007
From: warnero at gmail.com (Warner Onstine)
Date: Thu, 2 Aug 2007 16:37:13 -0700
Subject: [antlr-interest] compilation error on grammar
Message-ID: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>

Hi all,
Just to preface this, I am very new to grammars (and ANTLR
specifically). I am attempting to convert a Groovy DSL that I wrote to
an external DSL piece by piece. Here is the current error I'm running
into with this grammar:
grammar Model;

prog	:	package WS? model
	;
	
package	:	'package' WS name=QIDStar NEWLINE
		{System.out.println("found package " + $name.text);}
	;

imports :	'imports' WS? '{' WS? import+ '}'
		{System.out.println("found imports");}
	;
	
import	:	name=QIDStar NEWLINE
		{System.out.println("found import " + $name.text);}
	;
	
model	:	'model' WS name=ID WS? '{' WS? '}'
		{System.out.println("found model " + $name.text);}
	;
	

ID	:	('a'..'z'|'A'..'Z')+ ;
QIDStar
	:	ID ('.' ID)* '.*'?
	;
INT	:	'0'..'9'+ ;
NEWLINE	:	'\r'? '\n' ;
WSNoNewline
	:	(' '|'\t')+ {skip();} ;
WS	:	(' '|'\t'|'\n'|'\r')+ {skip();} ;

When I generate the java class files for the grammer I get an error in
my ModelParser.java file here:
    // $ANTLR start prog
    // C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:1:
prog : package ( WS )? model ;
    public final void prog() throws RecognitionException {
        try {
            // C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:8:
( package ( WS )? model )
            // C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:8:
package ( WS )? model
            {
            pushFollow(FOLLOW_package_in_prog10);
            package();
            _fsp--;

on the package(); call Eclipse (and a normal build) is telling me that:
illegal start of an expression
<identifier>(or this) expected
'(' expected

any help is greatly appreciated

-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From rschulz at sonic.net  Thu Aug  2 16:43:03 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 2 Aug 2007 16:43:03 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
Message-ID: <200708021643.03970.rschulz@sonic.net>

On Thursday 02 August 2007 16:37, Warner Onstine wrote:
> Hi all,
> Just to preface this, I am very new to grammars (and ANTLR
> specifically). I am attempting to convert a Groovy DSL that I wrote
> to an external DSL piece by piece. Here is the current error I'm
> running into with this grammar:
> grammar Model;
>
> ...
>
> When I generate the java class files for the grammer I get an error
> in my ModelParser.java file here:
>     // $ANTLR start prog
>     //
> C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:1: prog
> : package ( WS )? model ;
>     public final void prog() throws RecognitionException {
>         try {
>             //
> C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:8: (
> package ( WS )? model )
>             //
> C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:8:
> package ( WS )? model
>             {
>             pushFollow(FOLLOW_package_in_prog10);
>             package();
>             _fsp--;
>
> on the package(); call Eclipse (and a normal build) is telling me
> that: illegal start of an expression
> <identifier>(or this) expected
> '(' expected

I advise against using line comments in the actions of ANTLR grammars. 
All the lines of an action are passed through, without regard to 
whether they happen to be partially or fully commented. The problem 
comes from the fact that ANTLR (the target language-specific string 
templates, I guess) sometimes expand portions of the actions with 
content that includes a newline, thus prematurely terminating the 
comment.

Instead, use only /* explicitly bounded */ comments inside actions.


> any help is greatly appreciated


Randall Schulz

From warnero at gmail.com  Thu Aug  2 16:52:41 2007
From: warnero at gmail.com (Warner Onstine)
Date: Thu, 2 Aug 2007 16:52:41 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <200708021643.03970.rschulz@sonic.net>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021643.03970.rschulz@sonic.net>
Message-ID: <d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>

On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Thursday 02 August 2007 16:37, Warner Onstine wrote:
> > Hi all,
> > Just to preface this, I am very new to grammars (and ANTLR
> > specifically). I am attempting to convert a Groovy DSL that I wrote
> > to an external DSL piece by piece. Here is the current error I'm
> > running into with this grammar:
> > grammar Model;
> >
> > ...
> >
> > When I generate the java class files for the grammer I get an error
> > in my ModelParser.java file here:
> >     // $ANTLR start prog
> >     //
> > C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:1: prog
> > : package ( WS )? model ;
> >     public final void prog() throws RecognitionException {
> >         try {
> >             //
> > C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:8: (
> > package ( WS )? model )
> >             //
> > C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:8:
> > package ( WS )? model
> >             {
> >             pushFollow(FOLLOW_package_in_prog10);
> >             package();
> >             _fsp--;
> >
> > on the package(); call Eclipse (and a normal build) is telling me
> > that: illegal start of an expression
> > <identifier>(or this) expected
> > '(' expected
>
> I advise against using line comments in the actions of ANTLR grammars.
> All the lines of an action are passed through, without regard to
> whether they happen to be partially or fully commented. The problem
> comes from the fact that ANTLR (the target language-specific string
> templates, I guess) sometimes expand portions of the actions with
> content that includes a newline, thus prematurely terminating the
> comment.
>
> Instead, use only /* explicitly bounded */ comments inside actions.
>

Ok, how do I turn this off? I'm not doing any comments in the Model.g
file itself, all of the comments that show up in Java are generated by
antlr. (If that's the problem you're referring to).

-warner

>
> > any help is greatly appreciated
>
>
> Randall Schulz
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From rschulz at sonic.net  Thu Aug  2 16:59:14 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 2 Aug 2007 16:59:14 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021643.03970.rschulz@sonic.net>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
Message-ID: <200708021659.14331.rschulz@sonic.net>

On Thursday 02 August 2007 16:52, Warner Onstine wrote:
> On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > ...
> >
> > I advise against using line comments in the actions of ANTLR
> > grammars. All the lines of an action are passed through, without
> > regard to whether they happen to be partially or fully commented.
> > The problem comes from the fact that ANTLR (the target
> > language-specific string templates, I guess) sometimes expand
> > portions of the actions with content that includes a newline, thus
> > prematurely terminating the comment.
> >
> > Instead, use only /* explicitly bounded */ comments inside actions.
>
> Ok, how do I turn this off? I'm not doing any comments in the Model.g
> file itself, all of the comments that show up in Java are generated
> by antlr. (If that's the problem you're referring to).

Sorry. I didn't notice where your grammar ended and the excerpted Java 
code began.

Since you didn't have any line comments in your grammar, that's not the 
problem.

Unfortunately, since you didn't turn off line wrapping when you posted 
your message, it's not clear what the code really looked like. Perhaps 
you could re-post it as a text attachment or without line wrapping?


> -warner


Randall Schulz

From warnero at gmail.com  Thu Aug  2 17:01:47 2007
From: warnero at gmail.com (Warner Onstine)
Date: Thu, 2 Aug 2007 17:01:47 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <200708021659.14331.rschulz@sonic.net>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021643.03970.rschulz@sonic.net>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
	<200708021659.14331.rschulz@sonic.net>
Message-ID: <d76a9c0d0708021701r490e74afj2238896a06a8fb5c@mail.gmail.com>

On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Thursday 02 August 2007 16:52, Warner Onstine wrote:
> > On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > > ...
> > >
> > > I advise against using line comments in the actions of ANTLR
> > > grammars. All the lines of an action are passed through, without
> > > regard to whether they happen to be partially or fully commented.
> > > The problem comes from the fact that ANTLR (the target
> > > language-specific string templates, I guess) sometimes expand
> > > portions of the actions with content that includes a newline, thus
> > > prematurely terminating the comment.
> > >
> > > Instead, use only /* explicitly bounded */ comments inside actions.
> >
> > Ok, how do I turn this off? I'm not doing any comments in the Model.g
> > file itself, all of the comments that show up in Java are generated
> > by antlr. (If that's the problem you're referring to).
>
> Sorry. I didn't notice where your grammar ended and the excerpted Java
> code began.
>
> Since you didn't have any line comments in your grammar, that's not the
> problem.
>
> Unfortunately, since you didn't turn off line wrapping when you posted
> your message, it's not clear what the code really looked like. Perhaps
> you could re-post it as a text attachment or without line wrapping?

Sure (I don't think Gmail has an option for line-wrapping). I've
attached the grammar and the generated parser class.

-warner

>
>
> > -warner
>
>
> Randall Schulz
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 640 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/b6750b98/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ModelParser.java
Type: application/octet-stream
Size: 11010 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/b6750b98/attachment-0003.obj 

From kroepke at classdump.org  Thu Aug  2 17:01:26 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 3 Aug 2007 02:01:26 +0200
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021643.03970.rschulz@sonic.net>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
Message-ID: <8B0F0BA5-8EFF-407B-9F3F-AE97C4CB48F3@classdump.org>


On Aug 3, 2007, at 1:52 AM, Warner Onstine wrote:

>>>             pushFollow(FOLLOW_package_in_prog10);
>>>             package();
>>>             _fsp--;
>>>
>>> on the package(); call Eclipse (and a normal build) is telling me
>>> that: illegal start of an expression
>>> <identifier>(or this) expected
>>> '(' expected
>>
>> I advise against using line comments in the actions of ANTLR  
>> grammars.
>> All the lines of an action are passed through, without regard to
>> whether they happen to be partially or fully commented. The problem
>> comes from the fact that ANTLR (the target language-specific string
>> templates, I guess) sometimes expand portions of the actions with
>> content that includes a newline, thus prematurely terminating the
>> comment.
>>
>> Instead, use only /* explicitly bounded */ comments inside actions.
>>
>
> Ok, how do I turn this off? I'm not doing any comments in the Model.g
> file itself, all of the comments that show up in Java are generated by
> antlr. (If that's the problem you're referring to).

You can't turn it off, and it is not causing your problem. The  
comments are
just annotations and are comments after all.

You do have a rule called 'package', right?

I guess that Java doesn't like that as a method name (which ANTLR  
will turn
parser rule names into). I suggest renaming that rule.

Please provide the complete error message in your posts (or at least  
the line number
reported). It took me a while of hard staring to sort through the  
wrapped source code
to actually figure out why this code would be invalid or where the  
error was supposed
to be.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Thu Aug  2 17:03:19 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 3 Aug 2007 02:03:19 +0200
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
Message-ID: <78B25413-7A88-4DFC-8CEE-BE40E0C2F961@classdump.org>


On Aug 3, 2007, at 1:37 AM, Warner Onstine wrote:

> on the package(); call Eclipse (and a normal build) is telling me  
> that:

doh! I apologize, you did mention where the error was. Sorry!
(But turning off line wrapping still helps the readability with long  
lines, to save my ass at least a bit here ;))

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From warnero at gmail.com  Thu Aug  2 17:04:41 2007
From: warnero at gmail.com (Warner Onstine)
Date: Thu, 2 Aug 2007 17:04:41 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <8B0F0BA5-8EFF-407B-9F3F-AE97C4CB48F3@classdump.org>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021643.03970.rschulz@sonic.net>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
	<8B0F0BA5-8EFF-407B-9F3F-AE97C4CB48F3@classdump.org>
Message-ID: <d76a9c0d0708021704of175da5tdfa990e1c5a8a787@mail.gmail.com>

On 8/2/07, Kay Roepke <kroepke at classdump.org> wrote:
>
> On Aug 3, 2007, at 1:52 AM, Warner Onstine wrote:
>
> >>>             pushFollow(FOLLOW_package_in_prog10);
> >>>             package();
> >>>             _fsp--;
> >>>
> >>> on the package(); call Eclipse (and a normal build) is telling me
> >>> that: illegal start of an expression
> >>> <identifier>(or this) expected
> >>> '(' expected
> >>
> >> I advise against using line comments in the actions of ANTLR
> >> grammars.
> >> All the lines of an action are passed through, without regard to
> >> whether they happen to be partially or fully commented. The problem
> >> comes from the fact that ANTLR (the target language-specific string
> >> templates, I guess) sometimes expand portions of the actions with
> >> content that includes a newline, thus prematurely terminating the
> >> comment.
> >>
> >> Instead, use only /* explicitly bounded */ comments inside actions.
> >>
> >
> > Ok, how do I turn this off? I'm not doing any comments in the Model.g
> > file itself, all of the comments that show up in Java are generated by
> > antlr. (If that's the problem you're referring to).
>
> You can't turn it off, and it is not causing your problem. The
> comments are
> just annotations and are comments after all.
>
> You do have a rule called 'package', right?

Correct.

>
> I guess that Java doesn't like that as a method name (which ANTLR
> will turn
> parser rule names into). I suggest renaming that rule.
>
> Please provide the complete error message in your posts (or at least
> the line number
> reported). It took me a while of hard staring to sort through the
> wrapped source code
> to actually figure out why this code would be invalid or where the
> error was supposed
> to be.

This did fix the problem, thanks much! Gotta watch those Java-naming
conventions (gotten me more than once!)

-warner

>
> HTH,
> -k
> --
> Kay R?pke
> http://classdump.org/
>
>
>
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From warnero at gmail.com  Thu Aug  2 17:09:13 2007
From: warnero at gmail.com (Warner Onstine)
Date: Thu, 2 Aug 2007 17:09:13 -0700
Subject: [antlr-interest] next problem - kindof
Message-ID: <d76a9c0d0708021709l26e170edv3c491d01e67d6537@mail.gmail.com>

Ok, so I have a unit test on my grammar to just call the grammar (for
right now) so I can see where it is matching stuff.

The printlns are working properly, but I get alot of errors from antlr
as well. This time I'm attaching the revised grammar and the test file
I'm using, and here are the errors/printlns I'm getting.

found package org.chama.test.models
found model Band
line 1:0 mismatched input '\r\n' expecting 'package'
line 2:6 mismatched input 'Band' expecting WS
line 2:12 mismatched input '\r\n' expecting '}'
line 1:8 mismatched input 'org.chama.test.models' expecting WS
line 3:0 mismatched input 'model' expecting NEWLINE
line 3:6 mismatched input 'Band' expecting WS

When I was walking through the antlr 3 book I was not getting any
errors like this so I know it's not normal just trying to figure out
what I'm doing wrong in the grammar.

Thanks again for the help, really appreciate it!

-warner

-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 666 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/7fad3fce/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: package.model
Type: application/octet-stream
Size: 50 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/7fad3fce/attachment-0001.obj 

From matthew.j.diehl at intel.com  Thu Aug  2 17:15:41 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Thu, 2 Aug 2007 17:15:41 -0700
Subject: [antlr-interest] next problem - kindof
In-Reply-To: <d76a9c0d0708021709l26e170edv3c491d01e67d6537@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20264EC26@orsmsx417.amr.corp.intel.com>

You're using the WS in your grammar...but the lexer is skipping them.
The parser only reads tokens on a certain channel (and doesn't read
skipped ones), so if you skip tokens or put them on a separate channel,
the parser does not have access to them.

Matt 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Warner Onstine
> Sent: Thursday, August 02, 2007 5:09 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] next problem - kindof
> 
> Ok, so I have a unit test on my grammar to just call the grammar (for
> right now) so I can see where it is matching stuff.
> 
> The printlns are working properly, but I get alot of errors from antlr
> as well. This time I'm attaching the revised grammar and the test file
> I'm using, and here are the errors/printlns I'm getting.
> 
> found package org.chama.test.models
> found model Band
> line 1:0 mismatched input '\r\n' expecting 'package'
> line 2:6 mismatched input 'Band' expecting WS
> line 2:12 mismatched input '\r\n' expecting '}'
> line 1:8 mismatched input 'org.chama.test.models' expecting WS
> line 3:0 mismatched input 'model' expecting NEWLINE
> line 3:6 mismatched input 'Band' expecting WS
> 
> When I was walking through the antlr 3 book I was not getting any
> errors like this so I know it's not normal just trying to figure out
> what I'm doing wrong in the grammar.
> 
> Thanks again for the help, really appreciate it!
> 
> -warner
> 
> -- 
> Warner Onstine - Programmer/Author
> New book on Tapestry 4!
> Tapestry 101 available at
> http://sourcebeat.com/books/tapestrylive.html
> warner at warneronstine.com
> http://warneronstine.com/blog
> 

From rschulz at sonic.net  Thu Aug  2 17:20:59 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 2 Aug 2007 17:20:59 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <8B0F0BA5-8EFF-407B-9F3F-AE97C4CB48F3@classdump.org>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
	<8B0F0BA5-8EFF-407B-9F3F-AE97C4CB48F3@classdump.org>
Message-ID: <200708021720.59875.rschulz@sonic.net>

On Thursday 02 August 2007 17:01, Kay Roepke wrote:
> ...
>
> You do have a rule called 'package', right?

Which is the problem. That renders the Java invalid, since "package" is 
a Java keyword.

Ironically, the parser is not declared in a package, which is no way to 
handle programming-in-the-large.


> ...


Randall Schulz

From kroepke at classdump.org  Thu Aug  2 17:22:26 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 3 Aug 2007 02:22:26 +0200
Subject: [antlr-interest] next problem - kindof
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20264EC26@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C20264EC26@orsmsx417.amr.corp.intel.com>
Message-ID: <A6F5AD5A-A07B-437B-954E-743BC71FF179@classdump.org>


On Aug 3, 2007, at 2:15 AM, Diehl, Matthew J wrote:

> You're using the WS in your grammar...but the lexer is skipping them.
> The parser only reads tokens on a certain channel (and doesn't read
> skipped ones), so if you skip tokens or put them on a separate  
> channel,
> the parser does not have access to them.

Additionally, if you removed the skip() calls you will get in trouble  
because
WSNoNewline will be matched in favor of WS, thus causing mismatched  
token exceptions
because the parser is looking for WS tokens.

Do you really need to spell out the whitespace? In general that is  
not necessary, you
can either skip() those tokens or put them on the hiddel channel by  
using
$channel=HIDDEN; in place of skip().

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From warnero at gmail.com  Thu Aug  2 17:40:04 2007
From: warnero at gmail.com (Warner Onstine)
Date: Thu, 2 Aug 2007 17:40:04 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <200708021720.59875.rschulz@sonic.net>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
	<8B0F0BA5-8EFF-407B-9F3F-AE97C4CB48F3@classdump.org>
	<200708021720.59875.rschulz@sonic.net>
Message-ID: <d76a9c0d0708021740u43f20983q2aad639cdf7ed25f@mail.gmail.com>

On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> On Thursday 02 August 2007 17:01, Kay Roepke wrote:
> > ...
> >
> > You do have a rule called 'package', right?
>
> Which is the problem. That renders the Java invalid, since "package" is
> a Java keyword.
>
> Ironically, the parser is not declared in a package, which is no way to
> handle programming-in-the-large.

Definitely, I know I've seen the option for declaring a package in the
grammar in one of the examples, but have been unable to find it to
correct that particular issue.

-warner

>
>
> > ...
>
>
> Randall Schulz
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From siemsen at UCAR.EDU  Thu Aug  2 17:51:57 2007
From: siemsen at UCAR.EDU (Pete Siemsen)
Date: Thu, 2 Aug 2007 18:51:57 -0600
Subject: [antlr-interest] book errata?
In-Reply-To: <4E19D248-803E-4944-8471-568CBFC0C1E9@cs.usfca.edu>
References: <46B23238.8090003@jazillian.com>
	<4E19D248-803E-4944-8471-568CBFC0C1E9@cs.usfca.edu>
Message-ID: <FDE81302-345B-4A2C-B950-38826B2729D6@UCAR.EDU>

That web page shows page numbers in the PDF version, and the page  
numbers don't match up with the printed version.  I can't see how to  
go through and correct my printed copy (P1).

-- Pete



On Aug 2, 2007, at 1:55 PM, Terence Parr wrote:

> oops.
>
> http://books.pragprog.com/titles/tpantlr/errata
>
> just did a reprint...missed by a week ;)  can u add to list?
>
> Ter
> On Aug 2, 2007, at 12:36 PM, Andy Tripp wrote:
>
>> Is there anywhere a list of errata for the ANTLR book?
>>
>> On page 181 of the PDF and page 168 of the dead-tree version, we  
>> have:
>>
>> variableDefinition
>> : modifiers type ID ('=' expression)? ';'
>> -> {inMethod}? ^(VARIABLE ID modifier* type expression?)
>> -> ^(FIELD ID modifier* type expression?)
>> ;
>>
>> ...where "modifiers" should be changed to "modifier*" (or vice- 
>> versa).
>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/72f29fe6/attachment-0001.html 

From rschulz at sonic.net  Thu Aug  2 17:56:54 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 2 Aug 2007 17:56:54 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <d76a9c0d0708021740u43f20983q2aad639cdf7ed25f@mail.gmail.com>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021720.59875.rschulz@sonic.net>
	<d76a9c0d0708021740u43f20983q2aad639cdf7ed25f@mail.gmail.com>
Message-ID: <200708021756.54736.rschulz@sonic.net>

On Thursday 02 August 2007 17:40, Warner Onstine wrote:
> On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > On Thursday 02 August 2007 17:01, Kay Roepke wrote:
> > > ...
> > >
> > > You do have a rule called 'package', right?
> >
> > Which is the problem. That renders the Java invalid, since
> > "package" is a Java keyword.
> >
> > Ironically, the parser is not declared in a package, which is no
> > way to handle programming-in-the-large.
>
> Definitely, I know I've seen the option for declaring a package in
> the grammar in one of the examples, but have been unable to find it
> to correct that particular issue.

@header {
package			this.that.thenextthing;

...
}


> -warner


Randall Schulz

From kroepke at classdump.org  Thu Aug  2 18:02:32 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 3 Aug 2007 03:02:32 +0200
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <200708021756.54736.rschulz@sonic.net>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com>
	<200708021720.59875.rschulz@sonic.net>
	<d76a9c0d0708021740u43f20983q2aad639cdf7ed25f@mail.gmail.com>
	<200708021756.54736.rschulz@sonic.net>
Message-ID: <9991CCC0-B2CB-4C96-945E-63CDE7F2383C@classdump.org>


On Aug 3, 2007, at 2:56 AM, Randall R Schulz wrote:

>> Definitely, I know I've seen the option for declaring a package in
>> the grammar in one of the examples, but have been unable to find it
>> to correct that particular issue.
>
> @header {
> package			this.that.thenextthing;
>
> ...
> }

while that is the correct usage, it doesn't answer the question :\

the answer: you can't name parser rules the same as reserved words in  
Java,
as the rule name is used as a method name. So anything like return,  
if, package
and the like are out.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From jimi at temporal-wave.com  Thu Aug  2 18:39:11 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 2 Aug 2007 18:39:11 -0700
Subject: [antlr-interest] compilation error on grammar
In-Reply-To: <d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
References: <d76a9c0d0708021637q28eed9as7f56da0b57b199aa@mail.gmail.com><200708021643.03970.rschulz@sonic.net>
	<d76a9c0d0708021652r4248d859p4ba962bd94b02fd2@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702358F@wavemachine.temporal-wave.com>

The issue here might be your use of the java keyword 'package' for your
rule name. Try using a different name :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Warner Onstine
> Sent: Thursday, August 02, 2007 4:53 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] compilation error on grammar
> 
> On 8/2/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > On Thursday 02 August 2007 16:37, Warner Onstine wrote:
> > > Hi all,
> > > Just to preface this, I am very new to grammars (and ANTLR
> > > specifically). I am attempting to convert a Groovy DSL that I
wrote
> > > to an external DSL piece by piece. Here is the current error I'm
> > > running into with this grammar:
> > > grammar Model;
> > >
> > > ...
> > >
> > > When I generate the java class files for the grammer I get an
error
> > > in my ModelParser.java file here:
> > >     // $ANTLR start prog
> > >     //
> > > C:\\java\\projects\\chama-antlr\\src\\main\\antlr\\Model.g:3:1:
> prog
> > > : package ( WS )? model ;


From rdclark at gmail.com  Thu Aug  2 20:33:17 2007
From: rdclark at gmail.com (Richard Clark)
Date: Thu, 2 Aug 2007 20:33:17 -0700
Subject: [antlr-interest]
	=?iso-8859-1?q?How_to_parse_Several_Option_in_on?=
	=?iso-8859-1?q?e_group_in_d=EDfferent_order?=
In-Reply-To: <46B04B06.1020501@kortmann.de>
References: <46B04B06.1020501@kortmann.de>
Message-ID: <d3992d900708022033l6151765eld0d8c17f5ab193c2@mail.gmail.com>

On 8/1/07, Martin Kortmann <email at kortmann.de> wrote:

> This option can occur in any order, but only zero or
> one times.
[snip]
> How can i made this rule easier? Does i have to track
> this by hand?

Yes, you have to track this by hand. You could do something like this:

header returns [Set options}
@init { $options = new HashSet(); }
 : ( ( t=project | t =no_version)
     { if ($options.contains($t.text) ...
        /* Signal an error, probably w/ an exception */
       else $options.add($t.text)
     }
    )*
    ;

 ...Richard

From aliaazimi at yahoo.com  Thu Aug  2 20:40:32 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 2 Aug 2007 20:40:32 -0700 (PDT)
Subject: [antlr-interest] (newbie) Code too large problem
Message-ID: <907097.42406.qm@web58108.mail.re3.yahoo.com>

Hi,
   
  I have this error message and have been spending much time to remedy it without success. I have another grammar which is much bigger than this one and works perfectly. Could you please advice me? The code is big and I can not post it on the forum. However if anyone wants kindly to have a look at it I can mail. It must be some kind of looping happening in it. When I exclude some parts of the grammar by turning them to comments the debugger lets me to carry on.
   
  Thank you in advance. I appreciate it alot.
   
  Best regards,
   
  Al
   
  The error message:
   
  [04:26:33] 1 error
[04:26:54] \tmp\antlrworks\FpCif4Lexer.java:4551: code too large
[04:26:54]     public void mTokens() throws RecognitionException {
[04:26:54]                 ^
[04:26:55] 1 error


       
---------------------------------
Be a better Globetrotter. Get better travel answers from someone who knows.
Yahoo! Answers - Check it out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/bf5e4466/attachment.html 

From parrt at cs.usfca.edu  Thu Aug  2 21:20:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 2 Aug 2007 21:20:53 -0700
Subject: [antlr-interest] (newbie) Code too large problem
In-Reply-To: <907097.42406.qm@web58108.mail.re3.yahoo.com>
References: <907097.42406.qm@web58108.mail.re3.yahoo.com>
Message-ID: <F2D6E322-C926-47CA-B700-C3CE9A40D903@cs.usfca.edu>

Hmm...yeah, must have million keywords or other tokens in your grammar.

I'm working on the solution (for v3.1) but that won't be available  
for a while.  I'd suggest doing a bunch of fragment rules and then  
having a non-fragment rule invoke a bunch of other rules that call  
all the fragment tokens...try to break up into functions.  Look at  
output java code.
Ter

On Aug 2, 2007, at 8:40 PM, ali azimi wrote:

> Hi,
>
> I have this error message and have been spending much time to  
> remedy it without success. I have another grammar which is much  
> bigger than this one and works perfectly. Could you please advice  
> me? The code is big and I can not post it on the forum. However if  
> anyone wants kindly to have a look at it I can mail. It must be  
> some kind of looping happening in it. When I exclude some parts of  
> the grammar by turning them to comments the debugger lets me to  
> carry on.
>
> Thank you in advance. I appreciate it alot.
>
> Best regards,
>
> Al
>
> The error message:
>
> [04:26:33] 1 error
> [04:26:54] \tmp\antlrworks\FpCif4Lexer.java:4551: code too large
> [04:26:54]     public void mTokens() throws RecognitionException {
> [04:26:54]                 ^
> [04:26:55] 1 error
>
> Be a better Globetrotter. Get better travel answers from someone  
> who knows.
> Yahoo! Answers - Check it out.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070802/d3a10c34/attachment.html 

From tbrandonau at gmail.com  Thu Aug  2 23:41:07 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 3 Aug 2007 16:41:07 +1000
Subject: [antlr-interest] (newbie) Code too large problem
In-Reply-To: <F2D6E322-C926-47CA-B700-C3CE9A40D903@cs.usfca.edu>
References: <907097.42406.qm@web58108.mail.re3.yahoo.com>
	<F2D6E322-C926-47CA-B700-C3CE9A40D903@cs.usfca.edu>
Message-ID: <ebc876d70708022341x18e18638mce97cf2a5e3925ea@mail.gmail.com>

On 8/3/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hmm...yeah, must have million keywords or other tokens in your grammar.
>
> I'm working on the solution (for v3.1) but that won't be available for a
> while.  I'd suggest doing a bunch of fragment rules and then having a
> non-fragment rule invoke a bunch of other rules that call all the fragment
> tokens...try to break up into functions.  Look at output java code.
> Ter
>
As Ter says, check the generated mTokens and see where the complexity is.
If it's a complicated prediction between a few rules, try moving them
into fragments accessed through a single rule as Ter says.
Or if you have a lot of keywords you could make them fragments and
have a single rule matching idents and keywords. Like:
fragment KEYWORD1: 'keyword1';
fragment KEYWORD2: 'keyword2';
ID: KEYWORD1 {$type=KEYWORD1;}
   | KEYWORD2 {$type=KEYWORD2;}
   | 'a'..'z'
   ;

Or you could replace keywords with a hashtable lookup in your
identifier rule. e.g.
ID: 'a'..'z' {$type = lookupKeyword($text);};
And in your members:
Map<String,Integer) keywords;
void initKeywords() {
  keywords = new HashMap<String,Integer>();
  keywords.put("keyword1", KEYWORD1);
  keywords.put("keyword2", KEYWORD2);
  ...
}
int lookupKeyword(String text) {
  Integer type = keywords.get(text);
  if(type != null)
    return type.intValue();
  else
    return ID;
}
With KEYWORD1 and KEYWORD2 in your tokens section.

Tom.
>
> On Aug 2, 2007, at 8:40 PM, ali azimi wrote:
>
> Hi,
>
> I have this error message and have been spending much time to remedy it
> without success. I have another grammar which is much bigger than this one
> and works perfectly. Could you please advice me? The code is big and I can
> not post it on the forum. However if anyone wants kindly to have a look at
> it I can mail. It must be some kind of looping happening in it. When I
> exclude some parts of the grammar by turning them to comments the debugger
> lets me to carry on.
>
> Thank you in advance. I appreciate it alot.
>
> Best regards,
>
> Al
>
> The error message:
>
> [04:26:33] 1 error
> [04:26:54] \tmp\antlrworks\FpCif4Lexer.java:4551: code too
> large
> [04:26:54]     public void mTokens() throws RecognitionException {
> [04:26:54]                 ^
> [04:26:55] 1 error
>
> ________________________________
> Be a better Globetrotter. Get better travel answers from someone who knows.
> Yahoo! Answers - Check it out.
>

From ohumbel at gmail.com  Fri Aug  3 02:03:10 2007
From: ohumbel at gmail.com (Oti)
Date: Fri, 3 Aug 2007 11:03:10 +0200
Subject: [antlr-interest] superClass option for lexer in a combined grammar ?
Message-ID: <ba90a0a90708030203v92796b9q56582a2352e05ac1@mail.gmail.com>

Hi,

trying out the superClass option (pages 104, 111/112) from the book.
In a combined grammar the parser gets the specified super class.

Is there a way to specify the lexer superClass, too ?

Thanks,
and best wishes,
Oti.

From JB0284 at att.com  Fri Aug  3 05:54:48 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Fri, 3 Aug 2007 05:54:48 -0700
Subject: [antlr-interest] StringTemplate conditional
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802F25CDC@BD01MSXMB021.US.Cingular.Net>

I'm working on a project that specifies a platform independent UI. We
are using StringTemplate for the platform specific html rendering. We
abstract the data fields in the form to a Form object. There are several
cases where the user selects one of a group of things, lets call it
selectedThing. There is a get/set selectedThing pair in the form. This
represents state in the form. StringTemplate conditional processing is
limited to either $if(somethingExists) text$ or $if(myBoolean) text$.
Neither fits the paradigm of having a selectedThing comparison:
$if(thing=selectedThing) text$.

Here is what I want to do more explicitly:

import org.antlr.stringtemplate.StringTemplateGroup;
import org.antlr.stringtemplate.StringTemplate;

public class Test
{
    static class User {
        String name;
        public String getName() {
            return name;
        }
    }

    static class Form {
        User[] users;
        User selectedUser;
        public User[] getUsers() { return users; }
        public User getSelectedUser() { return selectedUser; }
    }

    public static void main(String[] args)
    {
        User[] users = new User[2];
        users[0] = new User();
        users[0].name = "Terence";
        users[1] = new User();
        users[1].name = "Parr";

        Form f = new Form();
        f.users = users;
        f.selectedUser = users[1];

        StringTemplate s = new StringTemplate("$form.users:{user |
<option"+ 
               "$if(user=form.selectedUser)$ selected$endif$>" +
               "$user.name$</option>};separator=\"\n\"$");
        st.setAttribute("form", f);
        System.out.println(f.toString());        
    }
}

The StringTemplate declaration is not valid. Does this break model/view
separation? Why doesn't StringTemplate support this? Is there another
way to conceptualize this problem?

Regards,
Jeff

From kroepke at classdump.org  Fri Aug  3 06:42:17 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 3 Aug 2007 15:42:17 +0200
Subject: [antlr-interest] StringTemplate conditional
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802F25CDC@BD01MSXMB021.US.Cingular.Net>
References: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802F25CDC@BD01MSXMB021.US.Cingular.Net>
Message-ID: <A21CD234-DB29-48D2-AF6F-CC53E98D16A2@classdump.org>

Hi Jeff!

On Aug 3, 2007, at 2:54 PM, Barnes, Jeff wrote:

> The StringTemplate declaration is not valid. Does this break model/ 
> view
> separation?

Sort of, yes.

> Why doesn't StringTemplate support this? Is there another
> way to conceptualize this problem?

StringTemplate doesn't support arbitrary comparisons. (The  
user=form.selectedUser is throwing it off.)

You will have to pass in the information whether a user is selected  
or not, doing the actual comparison
in code. This ensures that no (business) logic is in the view.  
StringTemplate is very rigorous with this,
providing (almost) no means to cirumvent this. But you wouldn't wanna  
do that anyway.

So, what are your options?
You could add a controller layer to shield your User object from  
needing to know whether it is selected or not.
That would add a lot of overhead, though.

Disclaimer: Written in mail, might not compile or might bring the  
world to an end.

It'd look like this (adding to your example):

	static class FormController {
		Form form;
		public FormController(Form form) { this.form = form; }
		public UserController[] getUsers() {
			int numUsers = form.getUsers().length;
			UserController[] users = new UserController[numUsers];
			for (int i=0; i<numUsers; i++) {
				User user = form.getUsers()[i];
				users[i] = new UserController(user, form.getSelectedUser() == user);
			}
			return users;
		}
	}
	
	static class UserController {
		User user;
		boolean selected;
		public UserController(User user, boolean selected) { this.user =  
user; this.selected = selected;}
		public String getName() { return user.getName(); }
		public boolean getSelected() { return selected; }
	}

     public static void main(String[] args)
     {
         User[] users = new User[2];
         users[0] = new User();
         users[0].name = "Terence";
         users[1] = new User();
         users[1].name = "Parr";

         Form f = new Form();
         f.users = users;
         f.selectedUser = users[1];

         StringTemplate st = new StringTemplate("$form.users:{user |  
<option"+
                "$if(user.selected)$ selected$endif$>" +
                "$user.name$</option>};separator=\"\n\"$");
         st.setAttribute("form", new FormController(f));
         System.out.println(st.toString());
     }

That prints the correct string, but is adding a lot of overhead.
Alternatively, if you are comfortable with adding presentation code  
to Form, you can do this:

import org.antlr.stringtemplate.StringTemplateGroup;
import org.antlr.stringtemplate.StringTemplate;

public class Test
{
     static class User {
         String name;
         public String getName() {
             return name;
         }
     }

     static class Form {
         User[] users;
         User selectedUser;
         public User[] getUsers() { return users; }
         public User getSelectedUser() { return selectedUser; }

		public StringTemplate[] getUserTemplates() {
			StringTemplate[] ts = new StringTemplate[users.length];
			for (int i = 0; i < users.length; i++) {
				ts[i] = new StringTemplate("<option$if(selected)$ selected$endif$> 
$name$</option>");
				ts[i].setAttribute("selected", users[i] == selectedUser);
				ts[i].setAttribute("name", users[i].getName());
			}
			return ts;
		}
     }

     public static void main(String[] args)
     {
         User[] users = new User[2];
         users[0] = new User();
         users[0].name = "Terence";
         users[1] = new User();
         users[1].name = "Parr";

         Form f = new Form();
         f.users = users;
         f.selectedUser = users[1];

         StringTemplate st = new StringTemplate 
("$form.userTemplates;separator=\"\n\"$");
         st.setAttribute("form", f);
         System.out.println(st.toString());
     }
}


Or naturally any abstraction you'd like to see.

OTOH if you do not depend on the order of the options (though most  
probably you do), you could
iterate over two different lists (one for the unselected users and on  
for the selected ones).
But I think iterating over one "annotated list" is better. It just  
depends on how you structure your
code, so that you have a clean separation of model and view in your  
Java code. But then again, this
is just another example of MVC at work :)

HTH,
-k

P.S.: This mail probably belongs on stringtemplate-interest but I  
didn't bother to crosspost or
set the reply-to. It's a bit off-topic for antlr-interest.
-- 
Kay R?pke
http://classdump.org/





From antlr at jazillian.com  Fri Aug  3 08:55:13 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 03 Aug 2007 11:55:13 -0400
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <B36CCC332A32904F8FA3DE134A23533625206D@wavemachine.temporal-wave.com>
References: <B36CCC332A32904F8FA3DE134A23533625206D@wavemachine.temporal-wave.com>
Message-ID: <46B34FE1.4010903@jazillian.com>

So there was this thread back in May about supporting case sensitivity 
in antlrV3.
Is there any support yet?
If not, has anyone managed to write a CaseInsensitiveLexer?
And barring that, is it actually just as simple as changing this one 
line in BaseRecognizer from this:
        if ( input.LA(1)==ttype ) {
...to this...
       if (Character.toUpperCase(input.LA(1)) == 
Character.toUpperCase(ttype)) {

Andy



From parrt at cs.usfca.edu  Fri Aug  3 08:59:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 3 Aug 2007 08:59:07 -0700
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <46B34FE1.4010903@jazillian.com>
References: <B36CCC332A32904F8FA3DE134A23533625206D@wavemachine.temporal-wave.com>
	<46B34FE1.4010903@jazillian.com>
Message-ID: <97B2794D-2C90-45E1-A033-773ACA129737@cs.usfca.edu>


On Aug 3, 2007, at 8:55 AM, Andy Tripp wrote:

> So there was this thread back in May about supporting case  
> sensitivity in antlrV3.
> Is there any support yet?
> If not, has anyone managed to write a CaseInsensitiveLexer?
> And barring that, is it actually just as simple as changing this  
> one line in BaseRecognizer from this:
>        if ( input.LA(1)==ttype ) {
> ...to this...
>       if (Character.toUpperCase(input.LA(1)) ==  
> Character.toUpperCase(ttype)) {

Actually, that should work. :)    All tests use LA(i).

Ter


From tbrandonau at gmail.com  Fri Aug  3 09:26:53 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 4 Aug 2007 02:26:53 +1000
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <46B34FE1.4010903@jazillian.com>
References: <B36CCC332A32904F8FA3DE134A23533625206D@wavemachine.temporal-wave.com>
	<46B34FE1.4010903@jazillian.com>
Message-ID: <ebc876d70708030926y6fe5dd6am768d6e95097825ea@mail.gmail.com>

On 8/4/07, Andy Tripp <antlr at jazillian.com> wrote:
> So there was this thread back in May about supporting case sensitivity
> in antlrV3.
> Is there any support yet?
> If not, has anyone managed to write a CaseInsensitiveLexer?
> And barring that, is it actually just as simple as changing this one
> line in BaseRecognizer from this:
>         if ( input.LA(1)==ttype ) {
> ...to this...
>        if (Character.toUpperCase(input.LA(1)) ==
> Character.toUpperCase(ttype)) {
>
> Andy
>
Looks like match in BaseRecognizer is only used by the parser. You
want match(int), match(String) and matchRange in Lexer where similar
changes should work. Or you could make a custom InputStream that
returned lower case in LA instead and use all lower case in your
literals. As all token text is gotten using substring this won't
affect that.

Tom.

From jimi at temporal-wave.com  Fri Aug  3 09:29:25 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 3 Aug 2007 09:29:25 -0700
Subject: [antlr-interest] case sensitivity for ANTLR v3 lexers
In-Reply-To: <46B34FE1.4010903@jazillian.com>
References: <B36CCC332A32904F8FA3DE134A23533625206D@wavemachine.temporal-wave.com>
	<46B34FE1.4010903@jazillian.com>
Message-ID: <051466DAA0D608439E196797955018D7023595@wavemachine.temporal-wave.com>

Andy, that is one way. I have also posted code that overrides LA, which
is probably best. This means that it matches only UPPER case in the
lexer but preserves the case for the tokens, which is usually what you
want.

The code, and variants, can be found:

http://www.antlr.org/pipermail/antlr-interest/2007-January/019008.h
tml

and:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: Friday, August 03, 2007 8:55 AM
> To: ANTLR Interest
> Cc: antlr at jazillian.com
> Subject: Re: [antlr-interest] case sensitivity for ANTLR v3 lexers
> 
> So there was this thread back in May about supporting case sensitivity
> in antlrV3.
> Is there any support yet?
> If not, has anyone managed to write a CaseInsensitiveLexer?
> And barring that, is it actually just as simple as changing this one
> line in BaseRecognizer from this:
>         if ( input.LA(1)==ttype ) {
> ...to this...
>        if (Character.toUpperCase(input.LA(1)) ==
> Character.toUpperCase(ttype)) {
> 
> Andy
> 


From jklemail at gmail.com  Fri Aug  3 11:08:54 2007
From: jklemail at gmail.com (John Leung)
Date: Fri, 3 Aug 2007 10:08:54 -0800
Subject: [antlr-interest] How to tell antlr to use stg in generated
	__Test__.java?
Message-ID: <f5252be20708031108l2a7cef84q4875ae032f735785@mail.gmail.com>

Hi,
  I tried the simple T.g grammar in chapter 9 of the book that uses stg.
When I debug it, it gives me the error "Can't find template assign.st" (from
rule ... -> assign(x=...); ).  I know I can specify it to use "T.stg"
instead in __Test__.java, but everytime I do that, it overwrites my editing
when I run debug.  Is there anyway to tell antlrworks to debug using my
Test.java instead?   Better yet, why can't antlr generate a __Test__.java
that uses stg instead of st, or at least let me specify it to do so..  I
couldn't believe that no one's been asking this yet (I can't find it).
Maybe I'm just missing something here?

thanks so much,
john
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/cfd16b4f/attachment.html 

From parrt at cs.usfca.edu  Fri Aug  3 11:14:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 3 Aug 2007 11:14:05 -0700
Subject: [antlr-interest] How to tell antlr to use stg in generated
	__Test__.java?
In-Reply-To: <f5252be20708031108l2a7cef84q4875ae032f735785@mail.gmail.com>
References: <f5252be20708031108l2a7cef84q4875ae032f735785@mail.gmail.com>
Message-ID: <6D1A7126-B179-46BE-8DA1-283A71580AE0@cs.usfca.edu>

AW's test harness cannot possibly know where your templates are.  Use  
-debug and use your own test rig.  Then debug remote with AW.
Ter
On Aug 3, 2007, at 11:08 AM, John Leung wrote:

> Hi,
>   I tried the simple T.g grammar in chapter 9 of the book that uses  
> stg.  When I debug it, it gives me the error "Can't find template  
> assign.st" (from rule ... -> assign(x=...); ).  I know I can  
> specify it to use " T.stg" instead in __Test__.java, but everytime  
> I do that, it overwrites my editing when I run debug.  Is there  
> anyway to tell antlrworks to debug using my Test.java instead?    
> Better yet, why can't antlr generate a __Test__.java that uses stg  
> instead of st, or at least let me specify it to do so..  I couldn't  
> believe that no one's been asking this yet (I can't find it).   
> Maybe I'm just missing something here?
>
> thanks so much,
> john

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/33153745/attachment.html 

From jklemail at gmail.com  Fri Aug  3 11:58:40 2007
From: jklemail at gmail.com (John Leung)
Date: Fri, 3 Aug 2007 10:58:40 -0800
Subject: [antlr-interest] How to tell antlr to use stg in generated
	__Test__.java?
In-Reply-To: <6D1A7126-B179-46BE-8DA1-283A71580AE0@cs.usfca.edu>
References: <f5252be20708031108l2a7cef84q4875ae032f735785@mail.gmail.com>
	<6D1A7126-B179-46BE-8DA1-283A71580AE0@cs.usfca.edu>
Message-ID: <f5252be20708031158pb4ba627u2294209a0e6869d5@mail.gmail.com>

Thanks for the fast reply!

I tried to do my own test rig exactly the same as is in the book, but I'm
getting the following compilation error msg:

incompatible types
found: java.lang.Object
Required: org.antlr.stringtemplate.StringTemplate
  StringTemplate output = r.getTemplate();
                                                         ^

I found the reason for this is that the generated parser.java declares
getTemplate() to be:
        public Object getTemplate() { return st; }

Do you know why it's not declared as StringTemplate instead?

thanks,
john


On 8/3/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> AW's test harness cannot possibly know where your templates are.  Use
> -debug and use your own test rig.  Then debug remote with AW.Ter
> On Aug 3, 2007, at 11:08 AM, John Leung wrote:
>
> Hi,
>   I tried the simple T.g grammar in chapter 9 of the book that uses stg.
> When I debug it, it gives me the error "Can't find template assign.st"
> (from rule ... -> assign(x=...); ).  I know I can specify it to use "
> T.stg" instead in __Test__.java, but everytime I do that, it overwrites my
> editing when I run debug.  Is there anyway to tell antlrworks to debug using
> my Test.java instead?   Better yet, why can't antlr generate a
> __Test__.java that uses stg instead of st, or at least let me specify it to
> do so..  I couldn't believe that no one's been asking this yet (I can't find
> it).  Maybe I'm just missing something here?
>
> thanks so much,
> john
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/bf772ea7/attachment-0001.html 

From parrt at cs.usfca.edu  Fri Aug  3 12:12:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 3 Aug 2007 12:12:27 -0700
Subject: [antlr-interest] How to tell antlr to use stg in generated
	__Test__.java?
In-Reply-To: <f5252be20708031158pb4ba627u2294209a0e6869d5@mail.gmail.com>
References: <f5252be20708031108l2a7cef84q4875ae032f735785@mail.gmail.com>
	<6D1A7126-B179-46BE-8DA1-283A71580AE0@cs.usfca.edu>
	<f5252be20708031158pb4ba627u2294209a0e6869d5@mail.gmail.com>
Message-ID: <138483A9-700D-48F2-A897-7E4296B3D035@cs.usfca.edu>


On Aug 3, 2007, at 11:58 AM, John Leung wrote:

> Thanks for the fast reply!
>
> I tried to do my own test rig exactly the same as is in the book,  
> but I'm getting the following compilation error msg:
>
> incompatible types
> found: java.lang.Object
> Required: org.antlr.stringtemplate
> .StringTemplate
>   StringTemplate output = r.getTemplate();
>                                                          ^
>
> I found the reason for this is that the generated parser.java  
> declares getTemplate() to be:
>         public Object getTemplate() { return st; }
>
> Do you know why it's not declared as StringTemplate instead?
>

yep. to avoid a type dependence on ST lib if you don't use it.

Ter


From antlr at jazillian.com  Fri Aug  3 13:06:04 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 03 Aug 2007 16:06:04 -0400
Subject: [antlr-interest] comments, newlines, and emit()
Message-ID: <46B38AAC.40402@jazillian.com>

I'm parsing a language (visual basic), in which newlines are significant,
and it also allows single line comments. My comment rule is the standard
one that matches a single quote up to and including the next newline:

LINE_COMMENT
    : '\'' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
    ;

The problem is that need to keep the '\n' on the DEFAULT channel, and
put the rest on the HIDDEN channel.

According to the "Emitting More Than One Token per Lexer Rule" section 
of the book,
it seems like I should be able to emit the newline on the DEFAULT 
channel like this:

LINE_COMMENT
    : '\'' ~('\n'|'\r')* '\r'? newline='\n' {emit(newline); 
$channel=HIDDEN;}
    ;

Yet that generates an emit() call that takes an int, which doesn't compile.

There must be an easy way to either emit an extra newline token here.
Anyone?

Andy


From email at kortmann.de  Fri Aug  3 13:26:32 2007
From: email at kortmann.de (Martin Kortmann)
Date: Fri, 03 Aug 2007 22:26:32 +0200
Subject: [antlr-interest] different behavior java vs c?
Message-ID: <46B38F78.80208@kortmann.de>

Hi,

I think that i have found and error in the C-target.
It is possible that this is really my fault (i am
absolutely new to ANTLR) but please check this:


The following grammar works fine with the java target:

grammar java_vs_c;

options{
output=AST;
filter=true;
// language=C;
ASTLabelType=CommonTree;
}

// Start Rule
test	:	testentry secondentry
	;
	
testentry
	:	'TEST' num1=INT num2=INT
	;
	
secondentry
	:	'SECOND' num1=INT
	;
	
INT	:	('0' | '1'..'9') '0'..'9'*
	;
	
WS	:	(' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;}
	;

ANYOTHER:	. ;


Input text:

TEST 1 2
SECOND 3

but it fails with language=C.

The C-Lexer recgnized die tokens, but fillBuffer
(in antlrtokenstream.c) adds only the first
three tokens to the tokenStream ('TEST', ' ' and INT)
and then ignores everything that follows.

I have testet this with GCC and MSVC .Net 2003.

Martin

From jklemail at gmail.com  Fri Aug  3 13:26:54 2007
From: jklemail at gmail.com (John Leung)
Date: Fri, 3 Aug 2007 12:26:54 -0800
Subject: [antlr-interest] How to tell antlr to use stg in generated
	__Test__.java?
In-Reply-To: <138483A9-700D-48F2-A897-7E4296B3D035@cs.usfca.edu>
References: <f5252be20708031108l2a7cef84q4875ae032f735785@mail.gmail.com>
	<6D1A7126-B179-46BE-8DA1-283A71580AE0@cs.usfca.edu>
	<f5252be20708031158pb4ba627u2294209a0e6869d5@mail.gmail.com>
	<138483A9-700D-48F2-A897-7E4296B3D035@cs.usfca.edu>
Message-ID: <f5252be20708031326r16c1dd26j3607cc7687a1c8a9@mail.gmail.com>

Hmm, ok, so I got it to work by casting it to StringTemplate.  But this
means the code from the book won't work as is, and readers won't be able to
get around it without digging into the parser file..

But returning to the main point.  You say using stg requires remote
debugging.  I've looked at
http://www.antlr.org/wiki/display/ANTLR3/Antlr+3+CSharp+Target
and some other pages but still have a hard time trying to see how to get
remote debugging to work.  For example, can you please let me know how to
get remote debugging to work for the simple T.g example in chap.9?

Also, how difficult would it be for AW to let user to specify the
test.javato use instead of forcing them to use either __Test__.java or
remote
debugging?  If it's simple pointing to user file instead of __Test__.java,
then would you please make it happen?

thanks,
john

On 8/3/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Aug 3, 2007, at 11:58 AM, John Leung wrote:
>
> > Thanks for the fast reply!
> >
> > I tried to do my own test rig exactly the same as is in the book,
> > but I'm getting the following compilation error msg:
> >
> > incompatible types
> > found: java.lang.Object
> > Required: org.antlr.stringtemplate
> > .StringTemplate
> >   StringTemplate output = r.getTemplate();
> >                                                          ^
> >
> > I found the reason for this is that the generated parser.java
> > declares getTemplate() to be:
> >         public Object getTemplate() { return st; }
> >
> > Do you know why it's not declared as StringTemplate instead?
> >
>
> yep. to avoid a type dependence on ST lib if you don't use it.
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/37607c48/attachment.html 

From jimi at temporal-wave.com  Fri Aug  3 13:32:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 3 Aug 2007 13:32:35 -0700
Subject: [antlr-interest] comments, newlines, and emit()
In-Reply-To: <46B38AAC.40402@jazillian.com>
References: <46B38AAC.40402@jazillian.com>
Message-ID: <051466DAA0D608439E196797955018D702359B@wavemachine.temporal-wave.com>

Andy,

If you need the new line, then why not remove it from the match?

LINE_COMMENT
    : '\'' ~('\n'|'\r')* {$channel=HIDDEN;}
    ;

The normal rule for newline should then pick it up.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: Friday, August 03, 2007 1:06 PM
> To: antlr-interest; Andy Tripp
> Subject: [antlr-interest] comments, newlines, and emit()
> 
> I'm parsing a language (visual basic), in which newlines are
> significant,
> and it also allows single line comments. My comment rule is the
> standard
> one that matches a single quote up to and including the next newline:
> 
> LINE_COMMENT
>     : '\'' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>     ;
> 
> The problem is that need to keep the '\n' on the DEFAULT channel, and
> put the rest on the HIDDEN channel.
> 
> According to the "Emitting More Than One Token per Lexer Rule" section
> of the book,
> it seems like I should be able to emit the newline on the DEFAULT
> channel like this:
> 
> LINE_COMMENT
>     : '\'' ~('\n'|'\r')* '\r'? newline='\n' {emit(newline);
> $channel=HIDDEN;}
>     ;
> 
> Yet that generates an emit() call that takes an int, which doesn't
> compile.
> 
> There must be an easy way to either emit an extra newline token here.
> Anyone?
> 
> Andy


From alessandro.feriani at gmail.com  Fri Aug  3 13:59:30 2007
From: alessandro.feriani at gmail.com (Alessandro Feriani)
Date: Fri, 3 Aug 2007 22:59:30 +0200
Subject: [antlr-interest] Problem on Common C++ code for Different Parsers
Message-ID: <7c9a95830708031359t50d2a995g36a599c785c67ea3@mail.gmail.com>

Hi All
I am parsing a langauge( use C++) with 3 different parsers.
The problem is that those 3 parsers share some C++ code ( dumping, queries
...).
For the moment I implemented the same code for all of them but it's a very
ugly solution.
Is there another way to do it?

I would like to do

class CommonParser extends Parser
    ----no rules  (here i implemented only C++ code )

class MyParserA extends CommonParser ....rules implemented

 class MyParserB extends CommonParser ....

class MyParserC extends CommonParser ....

How can I do by using C++?
Is it possible to inherit Parser class from my CMyBAseClass?

Plese advice me
Alessandro
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/13a307ae/attachment.html 

From antlr at jazillian.com  Fri Aug  3 14:03:02 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 03 Aug 2007 17:03:02 -0400
Subject: [antlr-interest] comments, newlines, and emit()
In-Reply-To: <051466DAA0D608439E196797955018D702359B@wavemachine.temporal-wave.com>
References: <46B38AAC.40402@jazillian.com>
	<051466DAA0D608439E196797955018D702359B@wavemachine.temporal-wave.com>
Message-ID: <46B39806.10804@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/ec9f05f7/attachment.html 

From jimi at temporal-wave.com  Fri Aug  3 14:12:10 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 3 Aug 2007 14:12:10 -0700
Subject: [antlr-interest] different behavior java vs c?
In-Reply-To: <46B38F78.80208@kortmann.de>
References: <46B38F78.80208@kortmann.de>
Message-ID: <051466DAA0D608439E196797955018D702359C@wavemachine.temporal-wave.com>

I'll take a look, though the only thing I have seen similar is that it
seems a recognition error is not printed at a tope rule on the last
reference. This is because the java model throws an exception and the C
just sets up a flag to say it has seen an exception, which the next rule
up the chain will display. Until I have though through what to do about
that, I recommend an extra top rule to ensure that you see all errors.

You can end up failing silently basically, which I will fix. Also, there
are a lot of tiny bug fixes accrued for the next release.

Try this, just to see if you get a difference:

start : test ;

test : testentry secondentry EOF;

...

> -----Original Message-----
> From: Martin Kortmann [mailto:email at kortmann.de]
> Sent: Friday, August 03, 2007 1:27 PM
> To: antlr-interest at antlr.org
> Cc: Jim Idle
> Subject: different behavior java vs c?
> 
> Hi,
> 
> I think that i have found and error in the C-target.
> It is possible that this is really my fault (i am
> absolutely new to ANTLR) but please check this:
> 
> 
> The following grammar works fine with the java target:
> 
> grammar java_vs_c;
> 
> options{
> output=AST;
> filter=true;
> // language=C;
> ASTLabelType=CommonTree;
> }
> 
> // Start Rule
> test	:	testentry secondentry
> 	;
> 
> testentry
> 	:	'TEST' num1=INT num2=INT
> 	;
> 
> secondentry
> 	:	'SECOND' num1=INT
> 	;
> 
> INT	:	('0' | '1'..'9') '0'..'9'*
> 	;
> 
> WS	:	(' '|'\t'|'\r'|'\n')+ {$channel=HIDDEN;}
> 	;
> 
> ANYOTHER:	. ;
> 
> 
> Input text:
> 
> TEST 1 2
> SECOND 3
> 
> but it fails with language=C.
> 
> The C-Lexer recgnized die tokens, but fillBuffer
> (in antlrtokenstream.c) adds only the first
> three tokens to the tokenStream ('TEST', ' ' and INT)
> and then ignores everything that follows.
> 
> I have testet this with GCC and MSVC .Net 2003.
> 
> Martin

From jimi at temporal-wave.com  Fri Aug  3 14:17:07 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 3 Aug 2007 14:17:07 -0700
Subject: [antlr-interest] comments, newlines, and emit()
In-Reply-To: <46B39806.10804@jazillian.com>
References: <46B38AAC.40402@jazillian.com><051466DAA0D608439E196797955018D702359B@wavemachine.temporal-wave.com>
	<46B39806.10804@jazillian.com>
Message-ID: <051466DAA0D608439E196797955018D702359D@wavemachine.temporal-wave.com>

I should mention for the C wallas, that this is built in to the input
stream. If you spec your tokens all in upper case, then you can do this:

 

 

input = antlr3NewAsciiStringInPlaceStream(charptr, len, "name");

input->setUcaseLA(input, ANTLR3_TRUE);

 

and it all happens magically for you. The LA function can also be
overridden of course in case your upper case conversion is not defined
by the C library toupper() function.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
Sent: Friday, August 03, 2007 2:03 PM
Cc: antlr-interest
Subject: Re: [antlr-interest] comments, newlines, and emit()

 

Yes, that does it.
Thanks, Jim. Thanks for the other answer on case sensitivity, too!

Andy

Jim Idle wrote: 

Andy,
 
If you need the new line, then why not remove it from the match?
 
LINE_COMMENT
    : '\'' ~('\n'|'\r')* {$channel=HIDDEN;}
    ;
 
The normal rule for newline should then pick it up.
 
Jim
 
  

	-----Original Message-----
	From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
	bounces at antlr.org] On Behalf Of Andy Tripp
	Sent: Friday, August 03, 2007 1:06 PM
	To: antlr-interest; Andy Tripp
	Subject: [antlr-interest] comments, newlines, and emit()
	 
	I'm parsing a language (visual basic), in which newlines are
	significant,
	and it also allows single line comments. My comment rule is the
	standard
	one that matches a single quote up to and including the next
newline:
	 
	LINE_COMMENT
	    : '\'' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
	    ;
	 
	The problem is that need to keep the '\n' on the DEFAULT
channel, and
	put the rest on the HIDDEN channel.
	 
	According to the "Emitting More Than One Token per Lexer Rule"
section
	of the book,
	it seems like I should be able to emit the newline on the
DEFAULT
	channel like this:
	 
	LINE_COMMENT
	    : '\'' ~('\n'|'\r')* '\r'? newline='\n' {emit(newline);
	$channel=HIDDEN;}
	    ;
	 
	Yet that generates an emit() call that takes an int, which
doesn't
	compile.
	 
	There must be an easy way to either emit an extra newline token
here.
	Anyone?
	 
	Andy
	    

 
 
  

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070803/c577cfb6/attachment-0001.html 

From aliaazimi at yahoo.com  Sat Aug  4 06:53:55 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sat, 4 Aug 2007 06:53:55 -0700 (PDT)
Subject: [antlr-interest] (newbie) very basic grammar for simple text and
	integer
Message-ID: <456983.70609.qm@web58106.mail.re3.yahoo.com>

Hi,
   
  Thank you very much in advance for reading this.
   
  I am trying to write a simple grammar which can parse something like:
   
  SIGNAL
  Newgame,Probe,Result,
  Endgame,Win,Lose,Score(Integer),Bump (144, 4665);
   
  Just a simple text and a double integer at the end.
   
  For this purpose I wrote the following which is a part of much larger grammar. It seems that I can not figure out how to write a simple grammar for text and integers which causes problem for the rest of the grammar.
   
  Is rule for space ok?
  Is rule for INT ok? (integer starts from 0)
   
  The grammar is:
   
  textDigit: 'text' Text DoubleInteger;
   
  fragment DoubleInteger: '(' INT ',' INT' )' ;
  fragment Special      :'+'|'-'|'!'|'/'|'>'|'8'|'('|')'|'"'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';
  fragment Text         :(AlphaNumeric|Special|Space|Apostrophe)*          ;
  fragment AlphaNumeric :Uppercase|National|Lowercase|Decimaldigit;
  fragment Decimaldigit :'0'..'9' ;
  fragment National     :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
  fragment Lowercase    :'a'..'z' ;
  fragment Uppercase    :'A'..'Z' ;
  fragment INT          :('0'..'9')+;
  fragment Space       :(' ')+;
  fragment Apostrophe   :'\'';
   
  I appreciate a lot.
   
  Best regards,
   
  Al         

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070804/6ce01edd/attachment.html 

From jaluber at gmx.de  Sat Aug  4 09:47:18 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 04 Aug 2007 18:47:18 +0200
Subject: [antlr-interest] (newbie) very basic grammar for simple text
 and	integer
In-Reply-To: <456983.70609.qm@web58106.mail.re3.yahoo.com>
References: <456983.70609.qm@web58106.mail.re3.yahoo.com>
Message-ID: <46B4AD96.8080509@gmx.de>

ali azimi wrote:
> Hi,
>  
> Thank you very much in advance for reading this.
>  
> I am trying to write a simple grammar which can parse something like:
>  
> SIGNAL
> Newgame,Probe,Result,
> Endgame,Win,Lose,Score(Integer),Bump (144, 4665);
>  
> Just a simple text and a double integer at the end.
>  
> For this purpose I wrote the following which is a part of much larger
> grammar. It seems that I can not figure out how to write a simple
> grammar for text and integers which causes problem for the rest of the
> grammar.
>  
> Is rule for space ok?
> Is rule for INT ok? (integer starts from 0)
>  
> The grammar is:
>  
> textDigit: 'text' Text DoubleInteger;
>  
> fragment DoubleInteger: '(' INT ',' INT' )' ;
> fragment Special     
> :'+'|'-'|'!'|'/'|'>'|'8'|'('|')'|'"'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';
> fragment Text         :(AlphaNumeric|Special|Space|Apostrophe)*          ;
> fragment AlphaNumeric :Uppercase|National|Lowercase|Decimaldigit;
> fragment Decimaldigit :'0'..'9' ;
> fragment National     :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
> fragment Lowercase    :'a'..'z' ;
> fragment Uppercase    :'A'..'Z' ;
> fragment INT          :('0'..'9')+;
> fragment Space       :(' ')+;
> fragment Apostrophe   :'\'';
>  
> I appreciate a lot.
>  
> Best regards,
>  
> Al        

Without testing I may overlook some problems, but the error I noted is
that you call fragment rules from a parser rule. Only lexer rules may
call them. So remove fragment at least from Text and DoubleInteger. And
possibly change INT to "fragment INT : Decimaldigit+;". I don't see any
problem with Space.

Best regards,
Johannes Luber

From corellian.c at gmail.com  Sat Aug  4 11:37:10 2007
From: corellian.c at gmail.com (Corellian)
Date: Sat, 4 Aug 2007 20:37:10 +0200
Subject: [antlr-interest] When is planned to be ready the ANTLR v3 C++
	target?
Message-ID: <3edc2fbd0708041137v5bb3870dqa5e74d2c791068cc@mail.gmail.com>

Hi,

I'm using ANTLR for an university project and I expect to have it finished
for December, is it recommended to use ANTLR v3 if I need the C++ generation
target? Is there a date planned to finish the C++ target for ANTLR v3?

Thanks :)

-- 
GPG Key-ID: 0x564903FA - JID: corellian at swissjabber.ch
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070804/4fda3c40/attachment.html 

From jaluber at gmx.de  Sat Aug  4 15:47:51 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 05 Aug 2007 00:47:51 +0200
Subject: [antlr-interest] Lexing troubles
Message-ID: <46B50217.2090703@gmx.de>

Hello!

I've been finally testing my C#-Lexer and after changing some rules I've
got it working. But there are a few details I'm not happy about.

The first is that I have to use the filter option. Otherwise I can't get
the lexer to work. It seems to be the same issue as in the thread
"Understanding priorities in lexing (newbie)". Unfortunately I have to
use a catch-all EVERYTHING_ELSE rule. If no one has an idea how I can do
the lexer without filtering then I'd appreciate suggestions how I should
do error reporting here.

Another issue is that I have to change the constructor as I have to do
some additional initialization. Right now I have an extra function named
Init(), which I call after the object construction but this is clumsy. I
could use a static constructor but I don't really want to hardwire the
grammar name into the file. Should someone rename it the same grammar
will generate a failing file. At least now the dependency is obvious.
I'm missing a general mechanism to adapt constructors to the grammar
authors needs.

For those, who want to test the attached file themselves: The current C#
target doesn't support lexer scopes. I've transposed the Java fix so you
have to use a self-build ANTLR. Unless you manage to convince it
otherwise to use the fixed .stg. It may be possible that the C# target
is still broken in the newest sources (didn't test them) so I'd be
willing to send my local copy of the sources if the need arises.

Best regards,
Johannes Luber

-------------- next part --------------
A non-text attachment was scrubbed...
Name: CSharp3Lexer.zip
Type: application/x-zip
Size: 16926 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/3d1edb73/attachment.bin 

From antlr-list at arizona-software.ch  Sat Aug  4 16:47:00 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sat, 4 Aug 2007 16:47:00 -0700
Subject: [antlr-interest] ANTLRWorks 1.1.2 released
Message-ID: <A90BAB00-4064-4B5F-ADA4-2D20E7682D7D@arizona-software.ch>

Hi,

A maintenance release of ANTLRWorks has been released to fix the  
following issues:

Bug fix:
     [AW-100] - Debugger does not take into account the input file  
path if it is changed after debugging at least once
     [AW-101] - Closing a window using the menu command in desktop  
mode causes the main menu bar to disappear

Improvement:
     [AW-102] - Export all rules into eps or bitmap files
     [AW-103] - New application and Mac OS X document icon

It can be downloaded from the usual place www.antlr.org/works.

Regards,

Jean

From imaband at comcast.net  Sat Aug  4 18:01:11 2007
From: imaband at comcast.net (Jeff Stroup)
Date: Sat, 4 Aug 2007 21:01:11 -0400
Subject: [antlr-interest] FW: Basic Questions - again!
Message-ID: <000801c7d6fc$1e38f3a0$3b0b010a@imaband>

 
 
-----Original Message-----
From: Jeff Stroup [mailto:imaband at comcast.net] 
Sent: Saturday, August 04, 2007 7:20 PM
To: 'antlr-interest at antlr.org'
Subject: Basic Questions
 
Hi,
 
I've loaded up the jars and have successfully ran a simple template by
loading the template from a template group, assigning it's attributes,
and then outputting it. I want to go a few steps further.
 
1.	I want to grab the attribute values for the template from a file
as well - or do I have to read and parse the file myself? No big deal if
I have to but thought there might be some mechanism that I just haven't
discovered. Specifically I'm writing Java wrapper classes for database
tables and want to suck in the create script and spit out the wrapper.
It would also be nice to suck in an alter script and have it diff the
wrapper as well. Wouldn't THAT be cool?! 
 
2.	Is there a mechanism in ST to specify where the output will go?
Right now I just have a string in a variable. Can I surround existing
source files with special tokens that can be replace with that output?
Or do I have to copy and paste the text in manually from the generated
file. If I do it's not big deal because it beats manually typing it all.
It's always disturbed me that developers are perfectly happy to fat
finger in what is basically THE SAME data - with the only real
difference being syntax or slight nomenclature disconnects - in multiple
places. Speaking of which, would the mapping feature of ST handle the
case where the same concept is referred to by different names? 


3.	Ultimately I'd like to trigger the template engine from within
Eclipse by invoking it from a custom plug in where I have access to the
AST (Abstract Syntax Tree) and insert template output directly into the
source. Does anyone know if something like this already exists? XDoclet
seems to be able to generate NEW code (if you can wire it correctly to
ANT), but falls down when you


a.	Want to regenerate only a section of a source file or add a
single field - e.g. a getter, setter, field combination.


b.	Have added comments and annotations to your template generated
source and want to run the generation again (entirely or partially) but
don't want to destroy the comments.
 
Thanks in advance for any response or direction.
 
Back to experimenting! :-)
 
 
Jeff
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070804/8de0e227/attachment-0001.html 

From cummings at kjchome.homeip.net  Sat Aug  4 19:29:30 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Sat, 04 Aug 2007 22:29:30 -0400
Subject: [antlr-interest] Access Violation in InitLiterals()
Message-ID: <46B5360A.8090201@kjchome.homeip.net>

Hi Folks,
	I writing my 3rd of 4 grammars using ANTLR 2.7.7.  The first 2 are
done, and because they don't involve any IDENTs, all Keywords were
defined in the Lexer with TOKEN names.  In my 3rd and 5th grammars, the
Keywords must co-exist with the IDENTs, so I'm using literals in my
grammar to avoid the non-determinism between my IDENTs and the keywords.

	I tested this grammar on my Linux system without many actions in either
the Parser or the TreeWalker.  Runs just fine.

	BUT, I am developing this in VC++ on a Windows XP system.  When I
attempted to run it for the first time, it dies, in InitLiterals() on
the following statement (the first assignment in this routine):

> 	literals["ends_with"] = 61;

By following the backtrace, I find myself in the following code in
CharScanner.h:

> inline bool CharScannerLiteralsLess::operator() (const ANTLR_USE_NAMESPACE(std)string& x,const ANTLR_USE_NAMESPACE(std)string& y) const
> {
> 	if (scanner->getCaseSensitiveLiterals())
> 		return ANTLR_USE_NAMESPACE(std)less<ANTLR_USE_NAMESPACE(std)string>()(x,y);
> 	else
> 	{
> #ifdef NO_STRCASECMP
> 		return (stricmp(x.c_str(),y.c_str())<0);
> #else
> 		return (strcasecmp(x.c_str(),y.c_str())<0);
> #endif
> 	}
> }

On the call to stricmp(), the y.c_str() argument appears to be
un-initialized (the value of the pointer is 0xcdcdcdcd).

What really bugs me is why does this work on Linux and not on windows.
My first 2 grammars don't use literals, so this routine is empty in those.

Does anyone have any advice on what I can do to make this work?

Thanks!

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From hanasaki at hanaden.com  Sat Aug  4 19:58:39 2007
From: hanasaki at hanaden.com (hanasaki)
Date: Sat, 04 Aug 2007 22:58:39 -0400
Subject: [antlr-interest] problem building json grammar maven2 + antlr3
Message-ID: <46B53CDF.8040501@hanaden.com>

Building json grammar below with the maven2 plugin for antlr3 and netbeans6
http://www.antlr.org/wiki/pages/viewpageattachments.action?pageId=819220
http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2

[antrun:run {execution: default}]
Executing tasks
     [java] ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
     [java] error(8):  file JsonTree.g contains grammar JSONTree; names
must be identical
     [java] error(3):  cannot find tokens file ./JSON.tokens
     [java] warning(138): JsonTree.g:0:0: grammar JSONTree: no start
rule (no rule can obviously be followed by EOF)



From ruth.karl at gmx.de  Sat Aug  4 23:27:18 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Sun, 05 Aug 2007 08:27:18 +0200
Subject: [antlr-interest] ANTLRWorks 1.1.2 released
In-Reply-To: <A90BAB00-4064-4B5F-ADA4-2D20E7682D7D@arizona-software.ch>
References: <A90BAB00-4064-4B5F-ADA4-2D20E7682D7D@arizona-software.ch>
Message-ID: <46B56DC6.6010006@gmx.de>

Great! Thanks! :-)

Jean Bovet schrieb:
> Hi,
>
> A maintenance release of ANTLRWorks has been released to fix the 
> following issues:
>
> Bug fix:
>     [AW-100] - Debugger does not take into account the input file path 
> if it is changed after debugging at least once
>     [AW-101] - Closing a window using the menu command in desktop mode 
> causes the main menu bar to disappear
>
> Improvement:
>     [AW-102] - Export all rules into eps or bitmap files
>     [AW-103] - New application and Mac OS X document icon
>
> It can be downloaded from the usual place www.antlr.org/works.
>
> Regards,
>
> Jean
>

From aliaazimi at yahoo.com  Sun Aug  5 04:27:12 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 5 Aug 2007 04:27:12 -0700 (PDT)
Subject: [antlr-interest] (newbie) very basic grammar for simple text
	and integer
In-Reply-To: <46B4AD96.8080509@gmx.de>
Message-ID: <205221.76236.qm@web58113.mail.re3.yahoo.com>

Hi,
   
  Thank you so much for replying to me. I have tried the indstructions, however the problem still remains. I am simply not able to make the following grammar understand to parse a simple text or integer. When being debugged, and inputed some simple text or integer, the grammar emits the "MismatchedTokenException" error message.
   
  Could you please help me?
   
  The grammar is:
  
text  :Text;
integer :Integer;
 
Text      :(AlphaNumeric|Special|Space|Apostrophe)* ;
Integer       :Decimaldigit+ ;
   
  fragment Apostrophe:'\'';
fragment Space           :(' ')*;
fragment Word            : '.'* AlphaNumeric ( AlphaNumeric | '.' )* ;
fragment CHARACTERSTRING : '\'' ( options{greedy=false;}: (~('\''|'\r'|'\n')| '\'' '\''))* '\'';
fragment Special         :'+'|'-'|'!'|'/'|'>'|'8'|'('|')'|'"'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';  
fragment AlphaNumeric    :Uppercase|National|Lowercase|Decimaldigit;
fragment Decimaldigit    :'0'..'9' ;
fragment National        :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
fragment Lowercase       :'a'..'z' ;
fragment Uppercase       :'A'..'Z' ;
   
  NEWLINE:'\r' ? '\n' {skip();};
WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;

   
  I am very grateful.
   
  Best regard,
   
  Al
  
Johannes Luber <jaluber at gmx.de> wrote:
  ali azimi wrote:
> Hi,
> 
> Thank you very much in advance for reading this.
> 
> I am trying to write a simple grammar which can parse something like:
> 
> SIGNAL
> Newgame,Probe,Result,
> Endgame,Win,Lose,Score(Integer),Bump (144, 4665);
> 
> Just a simple text and a double integer at the end.
> 
> For this purpose I wrote the following which is a part of much larger
> grammar. It seems that I can not figure out how to write a simple
> grammar for text and integers which causes problem for the rest of the
> grammar.
> 
> Is rule for space ok?
> Is rule for INT ok? (integer starts from 0)
> 
> The grammar is:
> 
> textDigit: 'text' Text DoubleInteger;
> 
> fragment DoubleInteger: '(' INT ',' INT' )' ;
> fragment Special 
> :'+'|'-'|'!'|'/'|'>'|'8'|'('|')'|'"'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';
> fragment Text :(AlphaNumeric|Special|Space|Apostrophe)* ;
> fragment AlphaNumeric :Uppercase|National|Lowercase|Decimaldigit;
> fragment Decimaldigit :'0'..'9' ;
> fragment National :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
> fragment Lowercase :'a'..'z' ;
> fragment Uppercase :'A'..'Z' ;
> fragment INT :('0'..'9')+;
> fragment Space :(' ')+;
> fragment Apostrophe :'\'';
> 
> I appreciate a lot.
> 
> Best regards,
> 
> Al 

Without testing I may overlook some problems, but the error I noted is
that you call fragment rules from a parser rule. Only lexer rules may
call them. So remove fragment at least from Text and DoubleInteger. And
possibly change INT to "fragment INT : Decimaldigit+;". I don't see any
problem with Space.

Best regards,
Johannes Luber


       
---------------------------------
Boardwalk for $500? In 2007? Ha! 
Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/0f5790e0/attachment.html 

From warnero at gmail.com  Sun Aug  5 11:37:42 2007
From: warnero at gmail.com (Warner Onstine)
Date: Sun, 5 Aug 2007 11:37:42 -0700
Subject: [antlr-interest] bad matching in grammar
Message-ID: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>

Ok, I've done some reworking and am running into some issues with my
grammar and I can't seem to figure out what I'm doing wrong. Here are
the current errors I'm getting with the attached grammar and test
file.

line 1:11 no viable alternative at character '.'
line 3:10 no viable alternative at character ' '
line 1:0 mismatched input 'package org' expecting 'package'
line 3:0 mismatched input 'model Band' expecting 'model'

Thanks for all the help in understanding what in the world I'm doing wrong ;-).

-warner

-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: package.model
Type: application/octet-stream
Size: 50 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/b5edd214/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 1059 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/b5edd214/attachment-0001.obj 

From email at kortmann.de  Sun Aug  5 11:55:26 2007
From: email at kortmann.de (Martin Kortmann)
Date: Sun, 05 Aug 2007 20:55:26 +0200
Subject: [antlr-interest] bad matching in grammar
In-Reply-To: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
References: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
Message-ID: <46B61D1E.403@kortmann.de>

Warner Onstine schrieb:
> Ok, I've done some reworking and am running into some issues with my
> grammar and I can't seem to figure out what I'm doing wrong. Here are
> the current errors I'm getting with the attached grammar and test
> file.
> 
> line 1:11 no viable alternative at character '.'
> line 3:10 no viable alternative at character ' '
> line 1:0 mismatched input 'package org' expecting 'package'
> line 3:0 mismatched input 'model Band' expecting 'model'
> 
> Thanks for all the help in understanding what in the world I'm doing wrong ;-).

Why the WS, NEWLINE and QIDStar rules?

Martin
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Model.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/9f0baebb/attachment.pl 

From email at kortmann.de  Sun Aug  5 11:59:43 2007
From: email at kortmann.de (Martin Kortmann)
Date: Sun, 05 Aug 2007 20:59:43 +0200
Subject: [antlr-interest] bad matching in grammar
In-Reply-To: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
References: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
Message-ID: <46B61E1F.9060205@kortmann.de>

Warner Onstine schrieb:
> Ok, I've done some reworking and am running into some issues with my
> grammar and I can't seem to figure out what I'm doing wrong. Here are
> the current errors I'm getting with the attached grammar and test
> file.
> 
> line 1:11 no viable alternative at character '.'
> line 3:10 no viable alternative at character ' '
> line 1:0 mismatched input 'package org' expecting 'package'
> line 3:0 mismatched input 'model Band' expecting 'model'
> 
> Thanks for all the help in understanding what in the world I'm doing wrong ;-).


And i think that WS should not be a fragment.

Martin
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Model.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/012f0b83/attachment-0001.pl 

From a.shneyderman at gmail.com  Sun Aug  5 12:25:25 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Sun, 5 Aug 2007 21:25:25 +0200
Subject: [antlr-interest] bad matching in grammar
In-Reply-To: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
References: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
Message-ID: <693a69ba0708051225m47bcc346sb68b6f141277b3e6@mail.gmail.com>

There is something messy about the lexer (I find it the hardest part
of ANTLR to comprehend). A quick way to see this is
to run your input through the lexer only:

package org.chama.builder.model.antlr;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.Token;

public class Tester {

	private static Map tokens = new HashMap();
	
	static {
		tokens.put(new Integer(8), "TYPE");
		tokens.put(new Integer(6), "QIDStar");
		tokens.put(new Integer(11), "INT");
		tokens.put(new Integer(9), "ARG");
		tokens.put(new Integer(4), "WS");
		tokens.put(new Integer(10), "QID");
		tokens.put(new Integer(5), "NEWLINE");
		tokens.put(new Integer(7), "ID");
		tokens.put(new Integer(18), ",");
		tokens.put(new Integer(17), "(");
		tokens.put(new Integer(19), ")");
		tokens.put(new Integer(12), "package");
		tokens.put(new Integer(13), "imports");
		tokens.put(new Integer(16), "model");
		tokens.put(new Integer(15), "}");
		tokens.put(new Integer(14), "{");
	}
	
	public static void main(String[] args) throws RecognitionException,
IOException {
		ModelLexer lexer = new ModelLexer (new ANTLRStringStream (
"package org.chama.test.models\n" +
"\n" +
"model Band {\n" +
"\n" +
"}\n" +
""
		));
		
		Token token = lexer.nextToken();
		while(token.getType() != Token.EOF) {
			System.out.println("Token:'" + token.getText() + "' : " +
tokens.get(new Integer(token.getType())));
			token = lexer.nextToken();
		}
	}
	
}

you will see the output will be something like so:
Token:'package org' : ARG
Token:'chama.test.models' : QID
Token:'
' : NEWLINE
Token:'
' : NEWLINE
Token:'model Band' : ARG
Token:'{' : {
Token:'
' : NEWLINE
Token:'
' : NEWLINE
Token:'}' : }
Token:'
' : NEWLINE

As you can see ARG token is messing things up a bit. Why don't you set
the lexer to ignore WS and NEWLINE's then grammar will be cleaner.
(Unless in your grammar these are significant). Also, QID and QIDStar
are in conflict - QIDStar can match exactly what QID would, so you
have to deal with this somehow.

HTH,
Alex.

On 8/5/07, Warner Onstine <warnero at gmail.com> wrote:
> Ok, I've done some reworking and am running into some issues with my
> grammar and I can't seem to figure out what I'm doing wrong. Here are
> the current errors I'm getting with the attached grammar and test
> file.
>
> line 1:11 no viable alternative at character '.'
> line 3:10 no viable alternative at character ' '
> line 1:0 mismatched input 'package org' expecting 'package'
> line 3:0 mismatched input 'model Band' expecting 'model'
>
> Thanks for all the help in understanding what in the world I'm doing wrong ;-).
>
> -warner

From warnero at gmail.com  Sun Aug  5 13:01:05 2007
From: warnero at gmail.com (Warner Onstine)
Date: Sun, 5 Aug 2007 13:01:05 -0700
Subject: [antlr-interest] bad matching in grammar
In-Reply-To: <693a69ba0708051225m47bcc346sb68b6f141277b3e6@mail.gmail.com>
References: <d76a9c0d0708051137r78eef114h8684b0536df426df@mail.gmail.com>
	<693a69ba0708051225m47bcc346sb68b6f141277b3e6@mail.gmail.com>
Message-ID: <d76a9c0d0708051301m4a806bafqcd6e2f6d0c75d369@mail.gmail.com>

Thanks to everyone for clarifying. I had thought that in order for me
to match on NEWLINEs that I couldn't hide it. Thanks especially to
Martin for cleaning up my grammar so that it works as I expected it to
;-).

Sorry for the newbie questions but just learning how to do grammars.

-warner

On 8/5/07, Alex Shneyderman <a.shneyderman at gmail.com> wrote:
> There is something messy about the lexer (I find it the hardest part
> of ANTLR to comprehend). A quick way to see this is
> to run your input through the lexer only:
>
> package org.chama.builder.model.antlr;
>
> import java.io.IOException;
> import java.util.HashMap;
> import java.util.Map;
>
> import org.antlr.runtime.ANTLRStringStream;
> import org.antlr.runtime.RecognitionException;
> import org.antlr.runtime.Token;
>
> public class Tester {
>
>         private static Map tokens = new HashMap();
>
>         static {
>                 tokens.put(new Integer(8), "TYPE");
>                 tokens.put(new Integer(6), "QIDStar");
>                 tokens.put(new Integer(11), "INT");
>                 tokens.put(new Integer(9), "ARG");
>                 tokens.put(new Integer(4), "WS");
>                 tokens.put(new Integer(10), "QID");
>                 tokens.put(new Integer(5), "NEWLINE");
>                 tokens.put(new Integer(7), "ID");
>                 tokens.put(new Integer(18), ",");
>                 tokens.put(new Integer(17), "(");
>                 tokens.put(new Integer(19), ")");
>                 tokens.put(new Integer(12), "package");
>                 tokens.put(new Integer(13), "imports");
>                 tokens.put(new Integer(16), "model");
>                 tokens.put(new Integer(15), "}");
>                 tokens.put(new Integer(14), "{");
>         }
>
>         public static void main(String[] args) throws RecognitionException,
> IOException {
>                 ModelLexer lexer = new ModelLexer (new ANTLRStringStream (
> "package org.chama.test.models\n" +
> "\n" +
> "model Band {\n" +
> "\n" +
> "}\n" +
> ""
>                 ));
>
>                 Token token = lexer.nextToken();
>                 while(token.getType() != Token.EOF) {
>                         System.out.println("Token:'" + token.getText() + "' : " +
> tokens.get(new Integer(token.getType())));
>                         token = lexer.nextToken();
>                 }
>         }
>
> }
>
> you will see the output will be something like so:
> Token:'package org' : ARG
> Token:'chama.test.models' : QID
> Token:'
> ' : NEWLINE
> Token:'
> ' : NEWLINE
> Token:'model Band' : ARG
> Token:'{' : {
> Token:'
> ' : NEWLINE
> Token:'
> ' : NEWLINE
> Token:'}' : }
> Token:'
> ' : NEWLINE
>
> As you can see ARG token is messing things up a bit. Why don't you set
> the lexer to ignore WS and NEWLINE's then grammar will be cleaner.
> (Unless in your grammar these are significant). Also, QID and QIDStar
> are in conflict - QIDStar can match exactly what QID would, so you
> have to deal with this somehow.
>
> HTH,
> Alex.
>
> On 8/5/07, Warner Onstine <warnero at gmail.com> wrote:
> > Ok, I've done some reworking and am running into some issues with my
> > grammar and I can't seem to figure out what I'm doing wrong. Here are
> > the current errors I'm getting with the attached grammar and test
> > file.
> >
> > line 1:11 no viable alternative at character '.'
> > line 3:10 no viable alternative at character ' '
> > line 1:0 mismatched input 'package org' expecting 'package'
> > line 3:0 mismatched input 'model Band' expecting 'model'
> >
> > Thanks for all the help in understanding what in the world I'm doing wrong ;-).
> >
> > -warner
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From jaluber at gmx.de  Sun Aug  5 16:34:00 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 01:34:00 +0200
Subject: [antlr-interest] (newbie) very basic grammar for simple text
 and integer
In-Reply-To: <205221.76236.qm@web58113.mail.re3.yahoo.com>
References: <205221.76236.qm@web58113.mail.re3.yahoo.com>
Message-ID: <46B65E68.3040003@gmx.de>

ali azimi wrote:
> Hi,
>  
> Thank you so much for replying to me. I have tried the indstructions,
> however the problem still remains. I am simply not able to make the
> following grammar understand to parse a simple text or integer. When
> being debugged, and inputed some simple text or integer, the grammar
> emits the "MismatchedTokenException" error message.
>  
> Could you please help me?
>  
> The grammar is:
> 
> text  :Text;
> integer :Integer;
>  
> Text      :(AlphaNumeric|Special|Space|Apostrophe)* ;
> Integer       :Decimaldigit+ ;
>  
> fragment Apostrophe:'\'';
> fragment Space           :(' ')*;
> fragment Word            : '.'* AlphaNumeric ( AlphaNumeric | '.' )* ;
> fragment CHARACTERSTRING : '\'' ( options{greedy=false;}:
> (~('\''|'\r'|'\n')| '\'' '\''))* '\'';
> fragment Special        
> :'+'|'-'|'!'|'/'|'>'|'8'|'('|')'|'"'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';  
> fragment AlphaNumeric    :Uppercase|National|Lowercase|Decimaldigit;
> fragment Decimaldigit    :'0'..'9' ;
> fragment National        :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
> fragment Lowercase       :'a'..'z' ;
> fragment Uppercase       :'A'..'Z' ;
>  
> NEWLINE:'\r' ? '\n' {skip();};
> WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;
>  
> I am very grateful.
>  
> Best regard,
>  
> Al
>

I've removed from Special all doubles of National. Furthermore I turned
all * into +, if they allowed the lexer rule to be empty. I'd also
advise to remove from Special ',' if you plan to separate the tokens
with commas. As it stands the WS rule is useless for spaces, as they end
as text tokens. You may want to exclude space as an allowed character
for the first position in Text. Also Word is unused, although I changed
it into a more correct version, if I gathered your intent correctly.

Best regards,
Johannes Luber


input_data  : (Text|Integer)*;

Text      :(AlphaNumeric|Special|Space|Apostrophe)+ ;
Integer       :Decimaldigit+ ;

fragment Apostrophe:'\'';
fragment Space           :' ';
fragment Word            : ( AlphaNumeric | '.' )+ ;
fragment CHARACTERSTRING : '\'' ( options{greedy=false;}:
(~('\''|'\r'|'\n')| '\'' '\''))* '\'';
fragment Special
:'+'|'-'|'!'|'/'|'>'|'('|')'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';
fragment AlphaNumeric    :Uppercase|National|Lowercase|Decimaldigit;
fragment Decimaldigit    :'0'..'9' ;
fragment National        :'#'|'@'|'\"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
fragment Lowercase       :'a'..'z' ;
fragment Uppercase       :'A'..'Z' ;

NEWLINE:'\r' ? '\n' {skip();};
WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;

From aliaazimi at yahoo.com  Sun Aug  5 20:40:31 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 5 Aug 2007 20:40:31 -0700 (PDT)
Subject: [antlr-interest] (newbie) very basic grammar for simple text
	and integer
In-Reply-To: <46B65E68.3040003@gmx.de>
Message-ID: <515327.34750.qm@web58115.mail.re3.yahoo.com>

Hi,
   
  Thank you very much for your advice. I appreciate it alot.Could you also advise me for the following?
   
  I need to change my grammar slightly. I need to make my grammar understand to recognise two integers and parenthesis and comma in this form:
   
  ( INT , INT ). I need my parser create different tokens for ?(? ?)?, comma and INTs. 
   
  For this purpose, the suggested grammar will not work properly. Since, both AlphaNumeric and Integer rules use Decimaldigit rule. As a result the parser uses the Text rule to parse something like ( INT , INT ), so I will not have different tokens for INTs which I want.(I eventually need to extract the INTs from AST)In another word the parser will parse something like ( 2 , 4 ) not like ?(? ?2? ?,? ?4? ?)? but like ?( 2 , 4 )? as one token (as a text). How can I tell the parser to use this rule: LPAR  INT COMMA INT RPAR to parse something like (2,4) not  the rule Text?
   
  And also with the suggested grammar, a simple text like following is parsed and put in three different nodes, How can I tell the parser to put all the text in one token so that I will have one node for whole the sentence not three.
   
  SIGNAL
  Newgame,Probe,Result,
  Endgame,Win,Lose,Score(Integer),Bump;
   
  Best regards,
   
  Al


Johannes Luber <jaluber at gmx.de> wrote:   ali azimi wrote:
> Hi,
> 
> Thank you so much for replying to me. I have tried the indstructions,
> however the problem still remains. I am simply not able to make the
> following grammar understand to parse a simple text or integer. When
> being debugged, and inputed some simple text or integer, the grammar
> emits the "MismatchedTokenException" error message.
> 
> Could you please help me?
> 
> The grammar is:
> 
> text :Text;
> integer :Integer;
> 
> Text :(AlphaNumeric|Special|Space|Apostrophe)* ;
> Integer :Decimaldigit+ ;
> 
> fragment Apostrophe:'\'';
> fragment Space :(' ')*;
> fragment Word : '.'* AlphaNumeric ( AlphaNumeric | '.' )* ;
> fragment CHARACTERSTRING : '\'' ( options{greedy=false;}:
> (~('\''|'\r'|'\n')| '\'' '\''))* '\'';
> fragment Special 
> :'+'|'-'|'!'|'/'|'>'|'8'|'('|')'|'"'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_'; 
> fragment AlphaNumeric :Uppercase|National|Lowercase|Decimaldigit;
> fragment Decimaldigit :'0'..'9' ;
> fragment National :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
> fragment Lowercase :'a'..'z' ;
> fragment Uppercase :'A'..'Z' ;
> 
> NEWLINE:'\r' ? '\n' {skip();};
> WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;
> 
> I am very grateful.
> 
> Best regard,
> 
> Al
>

I've removed from Special all doubles of National. Furthermore I turned
all * into +, if they allowed the lexer rule to be empty. I'd also
advise to remove from Special ',' if you plan to separate the tokens
with commas. As it stands the WS rule is useless for spaces, as they end
as text tokens. You may want to exclude space as an allowed character
for the first position in Text. Also Word is unused, although I changed
it into a more correct version, if I gathered your intent correctly.

Best regards,
Johannes Luber


input_data : (Text|Integer)*;

Text :(AlphaNumeric|Special|Space|Apostrophe)+ ;
Integer :Decimaldigit+ ;

fragment Apostrophe:'\'';
fragment Space :' ';
fragment Word : ( AlphaNumeric | '.' )+ ;
fragment CHARACTERSTRING : '\'' ( options{greedy=false;}:
(~('\''|'\r'|'\n')| '\'' '\''))* '\'';
fragment Special
:'+'|'-'|'!'|'/'|'>'|'('|')'|','|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';
fragment AlphaNumeric :Uppercase|National|Lowercase|Decimaldigit;
fragment Decimaldigit :'0'..'9' ;
fragment National :'#'|'@'|'\"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
fragment Lowercase :'a'..'z' ;
fragment Uppercase :'A'..'Z' ;

NEWLINE:'\r' ? '\n' {skip();};
WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;


       
---------------------------------
Yahoo! oneSearch: Finally,  mobile search that gives answers, not web links. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070805/337c5290/attachment.html 

From martin.kohl at gmail.com  Mon Aug  6 01:39:43 2007
From: martin.kohl at gmail.com (Martin Kohl)
Date: Mon, 6 Aug 2007 10:39:43 +0200
Subject: [antlr-interest]  error(211)
Message-ID: <6d93992c0708060139x5c10072dv71b75174d11129ec@mail.gmail.com>

Hi all,

I've stumbled upon an error:
error(211): Expr.g:490:3: [fatal] rule rule_name has non-LL(*) decision due
to recursive rule invocations reachable from alts 1,4.  Resolve by
left-factoring or using syntactic predicates or using backtrack=true option.

I've had this error in a few other places and I resolved it by setting the
backtrack=true option. However this doesn't work for this rule:
        (    expression ','
        |    '*' ','
        |    ','
        )*
        expression ':'

The Line Reference of the error message points to the second expression. If
I remove the * or the second expression the error is resolved.

I'd be very grateful for any advice as to how to resolve this problem.
Kind Regards,
Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/00be6728/attachment-0001.html 

From win at wincent.com  Mon Aug  6 02:28:23 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 6 Aug 2007 11:28:23 +0200
Subject: [antlr-interest] The filter option
In-Reply-To: <f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
	<f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
Message-ID: <23B44CC3-E4E2-4B41-87FE-0C3D2BC555A5@wincent.com>

El 3/8/2007, a las 1:30, Marcos Mar?n escribi?:

> On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:
>>
>>  As the last rule in your lexer you could use:
>>
>>
>>
>> ANY : . { $channel = HIDDEN; }
>>
>
>
> Actually, after testing more this does not work, it no longer  
> complains
> about curly braces but it does complain about anything else that is  
> not one
> of my rules. My guess is it does not complain about curly braces  
> and it does
> of other things because curly braces is only one char, so I tried  
> ANY: .+
> {$channel = HIDDEN;} ; but it gave me a warning of the rule being
> unreachable.
>
> I'm going to try creating a standalone lexer and parser.

For reference, this has come up in the past. In my opinion this is a  
bug in ANTLR, so I sent in a patch for this back in June but nobody  
replied:

http://www.antlr.org/pipermail/antlr-interest/2007-June/021243.html

Cheers,
Wincent


From kroepke at classdump.org  Mon Aug  6 02:31:42 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 6 Aug 2007 11:31:42 +0200
Subject: [antlr-interest] The filter option
In-Reply-To: <23B44CC3-E4E2-4B41-87FE-0C3D2BC555A5@wincent.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
	<f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
	<23B44CC3-E4E2-4B41-87FE-0C3D2BC555A5@wincent.com>
Message-ID: <9CE19870-70E4-4B5B-9F09-740B84288FD8@classdump.org>


On Aug 6, 2007, at 11:28 AM, Wincent Colaiuta wrote:

>  In my opinion this is a bug in ANTLR, so I sent in a patch for  
> this back in June but nobody replied:

I will look at it again, thanks for the patch and sorry for the  
silence :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Mon Aug  6 02:33:35 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 06 Aug 2007 21:33:35 +1200
Subject: [antlr-interest] error(211)
In-Reply-To: <6d93992c0708060139x5c10072dv71b75174d11129ec@mail.gmail.co
 m>
References: <6d93992c0708060139x5c10072dv71b75174d11129ec@mail.gmail.com>
Message-ID: <20070806093346.8014311E9E9@www.antlr.org>

At 20:39 6/08/2007, Martin Kohl wrote:
>I've stumbled upon an error:
>error(211): Expr.g:490:3: [fatal] rule rule_name has non-LL(*) 
>decision due to recursive rule invocations reachable from alts 
>1,4.  Resolve by left-factoring or using syntactic predicates or 
>using backtrack=true option.
>
>I've had this error in a few other places and I resolved it by 
>setting the backtrack=true option. However this doesn't work for 
>this rule:
>         (    expression ','
>         |    '*' ','
>         |    ','
>         )*
>         expression ':'
>
>The Line Reference of the error message points to the second 
>expression. If I remove the * or the second expression the error 
>is resolved.

I'm assuming that this fragment is part of the 'expression' rule, 
or that the expression rule either directly or indirectly contains 
whichever rule that is.

It's hard to give you anything specific without seeing more of the 
grammar, but basically you need to make sure that your rules 
aren't left-recursive -- ie. that there's always at least one 
token to consume in each recursive "loop", and thus the loop 
becomes bounded instead of infinite. 


From firatkucuk at gmail.com  Mon Aug  6 02:36:28 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Mon, 6 Aug 2007 12:36:28 +0300
Subject: [antlr-interest] error handling howto?
Message-ID: <7385e6fe0708060236j29df254fjce72224671c7aa8e@mail.gmail.com>

Hi,

How may i change exception handling in .g grammar file?



-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From jaluber at gmx.de  Mon Aug  6 03:30:58 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 12:30:58 +0200
Subject: [antlr-interest] (newbie) very basic grammar for simple text
 and integer
In-Reply-To: <515327.34750.qm@web58115.mail.re3.yahoo.com>
References: <515327.34750.qm@web58115.mail.re3.yahoo.com>
Message-ID: <46B6F862.2080608@gmx.de>

ali azimi wrote:
> Hi,
>  
> Thank you very much for your advice. I appreciate it alot.Could you also
> advise me for the following?
>  
> I need to change my grammar slightly. I need to make my grammar
> understand to recognise two integers and parenthesis and comma in this form:
>  
> ( INT , INT ). I need my parser create different tokens for ?(? ?)?,
> comma and INTs.
>  
> For this purpose, the suggested grammar will not work properly. Since,
> both AlphaNumeric and Integer rules use Decimaldigit rule. As a result
> the parser uses the Text rule to parse something like ( INT , INT ), so
> I will not have different tokens for INTs which I want.(I eventually
> need to extract the INTs from AST)In another word the parser will parse
> something like ( 2 , 4 ) not like ?(? ?2? ?,? ?4? ?)? but like ?( 2 , 4
> )? as one token (as a text). How can I tell the parser to use this rule:
> LPAR  INT COMMA INT RPAR to parse something like (2,4) not  the rule Text?

I had to remove from Special '(', ')' and ',', so Text won't be able to
match these double integers any more. The restriction is that in the
double integer no space may be included. If that is a requirement you
have remove Space from text entirely. If you can't evade this through
the usage of CHARACTERSTRING, then you have to test Text.getText() on
the equivalence to Integer (with trailing spaces) and to change the
token type in this case.

> And also with the suggested grammar, a simple text like following is
> parsed and put in three different nodes, How can I tell the parser to
> put all the text in one token so that I will have one node for whole the
> sentence not three.
>  
> SIGNAL
> Newgame,Probe,Result,
> Endgame,Win,Lose,Score(Integer),Bump;

The following grammar treats NEWLINE as part of Text.

Best regards,
Johannes Luber

input_data  : (LeftParen Integer Comma Integer RightParen
	|	Text
	|	Integer)*;

Integer       :Decimaldigit+ ;
Text      :	(AlphaNumeric|Special|Apostrophe|NEWLINE)
(AlphaNumeric|Special|Space|Apostrophe|NEWLINE)+ ;

fragment Apostrophe:'\'';
fragment Space           : ' ';
fragment Word            : ( AlphaNumeric | '.' )+ ;
fragment CHARACTERSTRING : '\'' ( options{greedy=false;}:
(~('\''|'\r'|'\n')| '\'' '\''))* '\'';
fragment Special
:'+'|'-'|'!'|'/'|'>'|';'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_';
fragment AlphaNumeric    :Uppercase|National|Lowercase|Decimaldigit;
fragment Decimaldigit    :'0'..'9' ;
fragment National        :'#'|'@'|'\"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
fragment Lowercase       :'a'..'z' ;
fragment Uppercase       :'A'..'Z' ;
LeftParen	:	'(';
RightParen	:	')';
Comma	:	',';

fragment NEWLINE:'\r' ? '\n';
WS : (' ' |'\t')+ {skip();} ;

From jaluber at gmx.de  Mon Aug  6 03:59:41 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 12:59:41 +0200
Subject: [antlr-interest] Names of generated files and classes
Message-ID: <46B6FF1D.8030507@gmx.de>

Hello!

I've noticed that for separate lexer and parser grammars the generated
files still attach Lexer and Parser to the class names. As I already
named mu grammars CSharp3Lexer.g and CSharp3Parser.g, I end up with
CSharp3LexerLexer and CSharp3ParserParser. My suggestion is to leave the
grammar names as they are, because the generated files won't have a
naming conflict.

I've talked with Ter about this and he said that the behaviour wasn't
changed before because the book was written for the old behaviour
(actually, I remember an example which showed my suggested behaviour so
nobody should be surprised. Maybe a editor thought that the source code
was wrong there.). But as for 3.1 the bets are off.

The biggest question is how much the existing code would break. I rename
the generated files and classes every time because I can't stand the
names aesthetically. In my case no code would break. Other people will
have to rename the types in their rigs or add Lexer and Parser to the
grammar names. Both are one time operations and done via Search&Replace
(if necessary at all) so it isn't a big deal.

What are your opionions?

Best regards,
Johannes Luber

From tbrandonau at gmail.com  Mon Aug  6 04:13:29 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 6 Aug 2007 21:13:29 +1000
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <46B6FF1D.8030507@gmx.de>
References: <46B6FF1D.8030507@gmx.de>
Message-ID: <ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>

On 8/6/07, Johannes Luber <jaluber at gmx.de> wrote:
> Hello!
>
> I've noticed that for separate lexer and parser grammars the generated
> files still attach Lexer and Parser to the class names. As I already
> named mu grammars CSharp3Lexer.g and CSharp3Parser.g, I end up with
> CSharp3LexerLexer and CSharp3ParserParser. My suggestion is to leave the
> grammar names as they are, because the generated files won't have a
> naming conflict.
>
> I've talked with Ter about this and he said that the behaviour wasn't
> changed before because the book was written for the old behaviour
> (actually, I remember an example which showed my suggested behaviour so
> nobody should be surprised. Maybe a editor thought that the source code
> was wrong there.). But as for 3.1 the bets are off.
>
> The biggest question is how much the existing code would break. I rename
> the generated files and classes every time because I can't stand the
> names aesthetically. In my case no code would break. Other people will
> have to rename the types in their rigs or add Lexer and Parser to the
> grammar names. Both are one time operations and done via Search&Replace
> (if necessary at all) so it isn't a big deal.
>
> What are your opionions?
As combined grammars will still need to append Lexer and Parser this
will complicate a mapping from .g file names to generated file names
that tools may need. They would need to analyse the grammars to
determine the files they generate.
An alternate solution is to name your files MyGrammar.g3l,
MyGrammar.g3p and MyGrammar.g3t for lexer, parser and tree parser.

Tom.
>
> Best regards,
> Johannes Luber
>

From kroepke at classdump.org  Mon Aug  6 04:15:25 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 6 Aug 2007 13:15:25 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <46B6FF1D.8030507@gmx.de>
References: <46B6FF1D.8030507@gmx.de>
Message-ID: <D0783880-8D82-4AA8-ACE8-13120EBE70E7@classdump.org>


On Aug 6, 2007, at 12:59 PM, Johannes Luber wrote:

> I've noticed that for separate lexer and parser grammars the generated
> files still attach Lexer and Parser to the class names. As I already
> named mu grammars CSharp3Lexer.g and CSharp3Parser.g, I end up with
> CSharp3LexerLexer and CSharp3ParserParser. My suggestion is to  
> leave the
> grammar names as they are, because the generated files won't have a
> naming conflict.

Here we go again...you do realize that this will go down the "heated  
discussion" path,
right?

> I've talked with Ter about this and he said that the behaviour wasn't
> changed before because the book was written for the old behaviour
> (actually, I remember an example which showed my suggested  
> behaviour so
> nobody should be surprised. Maybe a editor thought that the source  
> code
> was wrong there.). But as for 3.1 the bets are off.

And we couldn't agree what people actually wanted, IIRC. This has  
been the case with
grammar file suffixes, too. Annoying. We eventually ended up at the  
starting point...

> The biggest question is how much the existing code would break. I  
> rename
> the generated files and classes every time because I can't stand the
> names aesthetically. In my case no code would break. Other people will
> have to rename the types in their rigs or add Lexer and Parser to the
> grammar names. Both are one time operations and done via  
> Search&Replace
> (if necessary at all) so it isn't a big deal.

In some cases the names actually propagate further than that, but  
that's target
specific, I guess (at least for ObjC this is the case - this has to  
do with the
token name defines and name of rule return values' classes).
But I agree that "getting it right" should have priority.

> What are your opionions?

A sensible default (such as it is now, IMHO) plus the ability to  
specify the output filename,
that's my opinion. I envision a grammar level option that gives ANTLR  
the name of the file(s)
to generate.
I think I have made this suggestion earlier, but I don't remember the  
reaction. Probably it
wasn't received so well, since it never made it into the tool.
Previously there has been concern with tools not being able to figure  
out the generated file names,
but since we have the -depend option nowadays, that's covered.

So my suggestion still stands:
grammar Name; generates NameLexer, NameParser
lexer grammar Name; generates Name
parser grammar Name; generates Name
treeparser grammar Name; generates Name

add an option to the grammar:

grammar Name;
options {
	lexer::filename=NameTokenizer;
	// parser::filename may be omitted and defaults to NameParser
}

lexer grammar NameLexer;
options {
	filename=NameLexer;	// output filename not NameLexerLexer! lexer::  
prefix may be omitted
}

and so on.

bring on the flame war, I'm off to lunch.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From firatkucuk at gmail.com  Mon Aug  6 04:52:44 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Mon, 6 Aug 2007 14:52:44 +0300
Subject: [antlr-interest] throws does not work
Message-ID: <7385e6fe0708060452x414ac83fid1124765e5188f57@mail.gmail.com>

ruleName throws NullPointerException
     :  blablaRule
     ;


this parser rule does not generate method:

public final void jdkHome() throws NullPointerException {
}

what should i do?

-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY

From kroepke at classdump.org  Mon Aug  6 05:53:31 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 6 Aug 2007 14:53:31 +0200
Subject: [antlr-interest] throws does not work
In-Reply-To: <7385e6fe0708060452x414ac83fid1124765e5188f57@mail.gmail.com>
References: <7385e6fe0708060452x414ac83fid1124765e5188f57@mail.gmail.com>
Message-ID: <6F9F3037-2126-4E38-B0B7-A1A921AD3F1D@classdump.org>


On Aug 6, 2007, at 1:52 PM, F?rat K???K wrote:

> ruleName throws NullPointerException
>      :  blablaRule
>      ;
>
>
> this parser rule does not generate method:
>
> public final void jdkHome() throws NullPointerException {
> }


true, ANTLR parses the throws but doesn't use them right now.

I don't know what the book says about this, but there is a bug for it
in JIRA <http://www.antlr.org:8888/browse/ANTLR-100>.

> what should i do?

I'm afraid it isn't possible right now. You might be able to do  
something fancy with
catch handlers and rethrowing Runtime exceptions, but that's probably  
not what you want.
It's a bad hack anyway.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From jaluber at gmx.de  Mon Aug  6 06:18:52 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 15:18:52 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
Message-ID: <46B71FBC.5040603@gmx.de>

Thomas Brandon wrote:
> As combined grammars will still need to append Lexer and Parser this
> will complicate a mapping from .g file names to generated file names
> that tools may need. They would need to analyse the grammars to
> determine the files they generate.
> An alternate solution is to name your files MyGrammar.g3l,
> MyGrammar.g3p and MyGrammar.g3t for lexer, parser and tree parser.
> 
> Tom.

Adding a different suffix isn't scalable. Suppose you got two tree
grammars - a likely case for modern languages. How should they be named?
MyGrammar.g3t1 and MyGrammar.g3t2? Really cryptic.

As suggested in the other email, I've looked for the depend option and
found this email:
<http://www.antlr.org/pipermail/antlr-interest/2007-February/019344.html>.
Unfortunately is the output format not top notch. One has to parse the
lines for the generated class files and look for known endings and that
wouldn't work even with simple exclusion of .g and .tokens, as new file
endings may be generated later. I suggest to output this in XML, along
with an attribute to denote the kind of files.

TParser.java : T.g
T.tokens : T.g
T__.g : T.g
U.g: T.tokens
U.java : U.g
U.tokens : U.g

That would become:

<MappingList>
	<Mapping>
		<Dependee kind="Source">TParser.java</Dependee>
		<Dependor kind="Grammar">T.g</Dependor>
	</Mapping>
	<Mapping>
		<Dependee kind="Tokens">T.tokens</Dependee>
		<Dependor kind="Grammar">T.g</Dependor>
	</Mapping>
	<Mapping>
		<Dependee kind="Grammar">T__.g</Dependee>
		<Dependor kind="Grammar">T.g</Dependor>
	</Mapping>
	<Mapping>
		<Dependee kind="Grammar">U.g</Dependee>
		<Dependor kind="Tokens">T.tokens</Dependor>
	</Mapping>
	<Mapping>
		<Dependee kind="Source">U.java</Dependee>
		<Dependor kind="Grammar">U.g</Dependor>
	</Mapping>
	<Mapping>
		<Dependee kind="Tokens">U.tokens</Dependee>
		<Dependor kind="Grammar">U.g</Dependor>
	</Mapping>
</Mappings>

And no escaping for spaces is necessary. (Are '\' also escaped?) I know
that Ter doesn't like XML that much, but as it is meant for programs
anyway, I think it is the best and simplest way.

Best regards,
Johannes Luber

From jaluber at gmx.de  Mon Aug  6 06:46:46 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 15:46:46 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <D0783880-8D82-4AA8-ACE8-13120EBE70E7@classdump.org>
References: <46B6FF1D.8030507@gmx.de>
	<D0783880-8D82-4AA8-ACE8-13120EBE70E7@classdump.org>
Message-ID: <46B72646.1090003@gmx.de>

Kay Roepke wrote:
> 
> Here we go again...you do realize that this will go down the "heated
> discussion" path,
> right?

I have been warned, but this is the easiest way to get others' opinions
- and to challenge old assumptions.

> And we couldn't agree what people actually wanted, IIRC. This has been
> the case with
> grammar file suffixes, too. Annoying. We eventually ended up at the
> starting point...

Wait a minute. It should be clear what people want - at least on the
mailing list. After all they tell it. And if they tell it after the
discussion has ended, then either they change their way or the tool
becomes more flexible. And speculating, what non-participating people
could maybe need, should result in "keeping our options open" or have
none influence at all. After all it can be safely assumed that important
requirements would be voiced. (Of course, this excludes the question if
that, what people want, is also that, what people need.)
> 
>> The biggest question is how much the existing code would break. I rename
>> the generated files and classes every time because I can't stand the
>> names aesthetically. In my case no code would break. Other people will
>> have to rename the types in their rigs or add Lexer and Parser to the
>> grammar names. Both are one time operations and done via Search&Replace
>> (if necessary at all) so it isn't a big deal.
> 
> In some cases the names actually propagate further than that, but that's
> target
> specific, I guess (at least for ObjC this is the case - this has to do
> with the
> token name defines and name of rule return values' classes).
> But I agree that "getting it right" should have priority.

Wouldn't a regeneration propagate the right names? Or does client code
access those internals?

> A sensible default (such as it is now, IMHO) plus the ability to specify
> the output filename,
> that's my opinion. I envision a grammar level option that gives ANTLR
> the name of the file(s)
> to generate.
> I think I have made this suggestion earlier, but I don't remember the
> reaction. Probably it
> wasn't received so well, since it never made it into the tool.
> Previously there has been concern with tools not being able to figure
> out the generated file names,
> but since we have the -depend option nowadays, that's covered.
> 
> So my suggestion still stands:
> grammar Name; generates NameLexer, NameParser
> lexer grammar Name; generates Name
> parser grammar Name; generates Name
> treeparser grammar Name; generates Name

So far it is like mine.

> add an option to the grammar:
> 
> grammar Name;
> options {
>     lexer::filename=NameTokenizer;
>     // parser::filename may be omitted and defaults to NameParser
> }
> 
> lexer grammar NameLexer;
> options {
>     filename=NameLexer;    // output filename not NameLexerLexer!
> lexer:: prefix may be omitted
> }
> 
> and so on.

I have nothing against that additional option. May be certainly useful
at times.

Best regards,
Johannes Luber

From tbrandonau at gmail.com  Mon Aug  6 06:56:58 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 6 Aug 2007 23:56:58 +1000
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <46B71FBC.5040603@gmx.de>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
	<46B71FBC.5040603@gmx.de>
Message-ID: <ebc876d70708060656p791a7275t45d2fd78aeb0af96@mail.gmail.com>

On 8/6/07, Johannes Luber <jaluber at gmx.de> wrote:
> Thomas Brandon wrote:
> > As combined grammars will still need to append Lexer and Parser this
> > will complicate a mapping from .g file names to generated file names
> > that tools may need. They would need to analyse the grammars to
> > determine the files they generate.
> > An alternate solution is to name your files MyGrammar.g3l,
> > MyGrammar.g3p and MyGrammar.g3t for lexer, parser and tree parser.
> >
> > Tom.
>
> Adding a different suffix isn't scalable. Suppose you got two tree
> grammars - a likely case for modern languages. How should they be named?
> MyGrammar.g3t1 and MyGrammar.g3t2? Really cryptic.
>
If there are multiple tree parsers you would name them appropriately
based on what they are doing (e.g. ANTLR would have action.g3t and
define.g3t) as in the current scheme or the scheme you advocate which
would not allow two MyGrammar.g or MyGrammarTreeParser.g's.

Tom.
>
> Best regards,
> Johannes Luber
>

From kroepke at classdump.org  Mon Aug  6 07:25:53 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 6 Aug 2007 16:25:53 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <46B72646.1090003@gmx.de>
References: <46B6FF1D.8030507@gmx.de>
	<D0783880-8D82-4AA8-ACE8-13120EBE70E7@classdump.org>
	<46B72646.1090003@gmx.de>
Message-ID: <D256BAE1-C1E2-431E-9FEE-17394A5FB213@classdump.org>


On Aug 6, 2007, at 3:46 PM, Johannes Luber wrote:

> Kay Roepke wrote:
>>
>> Here we go again...you do realize that this will go down the "heated
>> discussion" path,
>> right?
>
> I have been warned, but this is the easiest way to get others'  
> opinions
> - and to challenge old assumptions.

:)

>> And we couldn't agree what people actually wanted, IIRC. This has  
>> been
>> the case with
>> grammar file suffixes, too. Annoying. We eventually ended up at the
>> starting point...
>
> Wait a minute. It should be clear what people want - at least on the
> mailing list. After all they tell it. And if they tell it after the
> discussion has ended, then either they change their way or the tool
> becomes more flexible. And speculating, what non-participating people
> could maybe need, should result in "keeping our options open" or have
> none influence at all. After all it can be safely assumed that  
> important
> requirements would be voiced. (Of course, this excludes the  
> question if
> that, what people want, is also that, what people need.)

IIRC, it we couldn't agree. Some people wanted this, others wanted that.

>> In some cases the names actually propagate further than that, but  
>> that's
>> target
>> specific, I guess (at least for ObjC this is the case - this has  
>> to do
>> with the
>> token name defines and name of rule return values' classes).
>> But I agree that "getting it right" should have priority.
>
> Wouldn't a regeneration propagate the right names? Or does client code
> access those internals?

E.g. the class names of rule return structures have a prefix of the  
parser class
name to prevent name clashes, since ObjC doesn't have namespaces.  
Likewise with
the defines for token types.
There's not really a way around that, but it might not be a hard  
thing to fix either.
It just crossed my mind.

>> So my suggestion still stands:
>> grammar Name; generates NameLexer, NameParser
>> lexer grammar Name; generates Name
>> parser grammar Name; generates Name
>> treeparser grammar Name; generates Name
>
> So far it is like mine.

Yes, but by making this the default we should, IMHO, give the user  
the option to
change the name of the generated classes (or at least the file names  
for languages that
aren't so anal about what code a file contains...)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Mon Aug  6 07:30:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Aug 2007 07:30:15 -0700
Subject: [antlr-interest] The filter option
In-Reply-To: <23B44CC3-E4E2-4B41-87FE-0C3D2BC555A5@wincent.com>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
	<f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
	<23B44CC3-E4E2-4B41-87FE-0C3D2BC555A5@wincent.com>
Message-ID: <567D4341-DD92-4F45-A624-83F6D260BAA0@cs.usfca.edu>


On Aug 6, 2007, at 2:28 AM, Wincent Colaiuta wrote:

> El 3/8/2007, a las 1:30, Marcos Mar?n escribi?:
>
>> On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:
>>>
>>>  As the last rule in your lexer you could use:
>>>
>>>
>>>
>>> ANY : . { $channel = HIDDEN; }
>>>
>>
>>
>> Actually, after testing more this does not work, it no longer  
>> complains
>> about curly braces but it does complain about anything else that  
>> is not one
>> of my rules. My guess is it does not complain about curly braces  
>> and it does
>> of other things because curly braces is only one char, so I tried  
>> ANY: .+
>> {$channel = HIDDEN;} ; but it gave me a warning of the rule being
>> unreachable.
>>
>> I'm going to try creating a standalone lexer and parser.
>
> For reference, this has come up in the past. In my opinion this is  
> a bug in ANTLR, so I sent in a patch for this back in June but  
> nobody replied:
>
> http://www.antlr.org/pipermail/antlr-interest/2007-June/ 
> 021243.html

 From your post:

2. "filter = true" doesn't work for lexer grammars which are declared
in a separate file as "lexer grammars"

That is strange as that is the only place they work for me: n the  
lexer alone.

See the fuzzyjava example.

Ter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/3d1b9e2f/attachment.html 

From kroepke at classdump.org  Mon Aug  6 07:35:42 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 6 Aug 2007 16:35:42 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <46B71FBC.5040603@gmx.de>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
	<46B71FBC.5040603@gmx.de>
Message-ID: <1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>


On Aug 6, 2007, at 3:18 PM, Johannes Luber wrote:

> And no escaping for spaces is necessary. (Are '\' also escaped?) I  
> know
> that Ter doesn't like XML that much, but as it is meant for programs
> anyway, I think it is the best and simplest way.

There cannot be any spaces in the grammar name anyway, so escaping is  
a non-issue.
Probably every filesystem in significant use can work with ANTLR  
grammar names as is, no escaping
necessary.

Not every tool wants to parse XML. In most cases you specifically do  
not want to parse XML (and handrolling an XML lexer/parser is  
significantly more work than writing one for the current output!)

A tool that uses the depend information of ANTLR will be tied to  
ANTLR anyway, so I don't think we have an issue of hypothetically  
changing suffixes. Build tools would need to be updated then in any  
case.
Plus, no tool should need to know what the .tokens file is good for.  
It is just in the -depend output because ANTLR generates. If the  
build system doesn't have any build rules for .tokens files then it  
gets ignored. The only thing you really need to know is what grammar  
suffixes are valid (you can get away with .g) and how the source  
files depend on that. I don't see any need to update the -depend  
output at this point (though I might revert my opinion when I look at  
the Xcode plugin again - but I'm sure it will only need tweaks if at  
all. Certainly I will not require XML...)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Mon Aug  6 07:43:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Aug 2007 07:43:21 -0700
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
	<46B71FBC.5040603@gmx.de>
	<1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>
Message-ID: <FF4F0035-FEDD-4267-AF1E-F6DB076FC0C1@cs.usfca.edu>

Guys, I'm liking Johannes' proposal to go back to "type grammar X;"  
generating X.java or X.c etc...  Only combined grammars would get the  
suffix Parser / Lexer as they *need* a way to distinguishes the  
classes.  Note that tree grammars are already "tree grammar X" ->  
X.java.  The -depend option will tell build tools all about the output.

If we changed for 3.1, then regenerating code from noncombined  
grammars would require a change in the invocation code perhaps, but  
combined is the common case.  The impact would be minimal either  
way.  It's messy right now:

lexer grammar TLexer;

generates TLexerLexer.java

Ter

From jbb at acm.org  Mon Aug  6 06:58:21 2007
From: jbb at acm.org (John B. Brodie)
Date: Mon, 06 Aug 2007 09:58:21 -0400
Subject: [antlr-interest] error(211)
In-Reply-To: <6d93992c0708060139x5c10072dv71b75174d11129ec@mail.gmail.com>
	(martin.kohl@gmail.com)
References: <6d93992c0708060139x5c10072dv71b75174d11129ec@mail.gmail.com>
Message-ID: <E1II36D-0005e2-G3@gecko.home.org>


on Mon, 6 Aug 2007 10:39:43 +0200, Martin Kohl asked:
>I've stumbled upon an error:
>error(211): Expr.g:490:3: [fatal] rule rule_name has non-LL(*) decision due
>to recursive rule invocations reachable from alts 1,4.  Resolve by
>left-factoring or using syntactic predicates or using backtrack=true option.
>
>I've had this error in a few other places and I resolved it by setting the
>backtrack=true option. However this doesn't work for this rule:
>        (    expression ','
>        |    '*' ','
>        |    ','
>        )*
>        expression ':'
>
>The Line Reference of the error message points to the second expression. If
>I remove the * or the second expression the error is resolved.

It is hard to be really definitive without seeing your entire grammar.
But you might try left-factoring (un-tested):

rule_near_line_490
    : (('*' | ',') expression_tail )
    | expression ( ':'
                 | expression_tail )
    ;

expression_tail
    : ',' ( ( '*'? expression_tail )
          | ( expression ( ':'
                         | expression_tail) )
          )
    ;




   -jbb

From jaluber at gmx.de  Mon Aug  6 08:22:25 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 17:22:25 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
	<46B71FBC.5040603@gmx.de>
	<1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>
Message-ID: <46B73CB1.2040201@gmx.de>

Kay Roepke wrote:
> 
> On Aug 6, 2007, at 3:18 PM, Johannes Luber wrote:
> 
>> And no escaping for spaces is necessary. (Are '\' also escaped?) I know
>> that Ter doesn't like XML that much, but as it is meant for programs
>> anyway, I think it is the best and simplest way.
> 
> There cannot be any spaces in the grammar name anyway, so escaping is a
> non-issue.
> Probably every filesystem in significant use can work with ANTLR grammar
> names as is, no escaping
> necessary.

In the case that directories are output with spaces they will be
escaped. IIRC, Unix can use both backslashes and colons in filenames.
The usage of the proprietary format doesn't protect you from such cases
and even forces to do the unquoting by yourself. Not to mention that the
output format in XML can at least add information without breaking every
application.

> Not every tool wants to parse XML. In most cases you specifically do not
> want to parse XML (and handrolling an XML lexer/parser is significantly
> more work than writing one for the current output!)

It doesn't have necessarily to be XML, but nonetheless the current
output lacks two columns with the semantic information. At least the
output needs to be changed to:

TParser.java	: Source	: T.g		: Grammar
T.tokens	: Tokens	: T.g		: Grammar
T__.g		: Grammar	: T.g		: Grammar
U.g		: Grammar	: T.tokens	: Tokens
U.java		: Source	: U.g		: Grammar
U.tokens	: Tokens	: U.g		: Grammar

> A tool that uses the depend information of ANTLR will be tied to ANTLR
> anyway, so I don't think we have an issue of hypothetically changing
> suffixes. Build tools would need to be updated then in any case.
> Plus, no tool should need to know what the .tokens file is good for.

That is wrong. First of all, tools may want to treat token files
differently from source files. I can imagine a grammar explorer which
shows the file dependencies as a tree and wants to color tokens, grammar
and source files differently. With my annotated format there is no
guessing, to which kind each entry belongs to.

Secondly, I've written a tool, which reads token files, so I don't have
to add the rule names all by myself. The rules are annotated how the
appropriate rule is to be translated into RELAX NG. If I couldn't read
token files in, I'd have certainly lots of work.

Best regards,
Johannes Luber

From david.llewellyn at ideaworks3d.com  Mon Aug  6 08:23:21 2007
From: david.llewellyn at ideaworks3d.com (David Llewellyn)
Date: Mon, 06 Aug 2007 16:23:21 +0100
Subject: [antlr-interest] Antlr 3.0 on Windows - starting troubles error
	org.antlr.tool.ErrorManager.setLocale(ErrorManager.java:393)
Message-ID: <46B73CE9.1020404@ideaworks3d.com>

Hello There Everybody,

I have recently started to use Antlr 3.0 on Windows XP to construct a 
parser for some configuration files in a project I am working on.

However I've been faced with a seemingly insurmountable problem before I 
even get started.  I had resolved my initial CLASSPATH
issues and then found myself facing this problem

C:> java -classpath 
c:\antlr-3.0\lib\antlr-3.0.jar;c:\antlr-3.0\lib\stringtemplate-3.0.jar 
org.antlr.Tool
Exception in thread "main" java.lang.NoClassDefFoundError: antlr/TokenStream
        at org.antlr.tool.ErrorManager.setLocale(ErrorManager.java:393)
        at org.antlr.tool.ErrorManager.<clinit>(ErrorManager.java:355)
        at org.antlr.Tool.main(Tool.java:67)


Unfortunately I am no Java expert, but reviewing the 
ErrorManager.java:393, the problem seems to be coming when it tried to 
create a new StringTemplateGroup.

Has anybody else experienced this problem?  Can anybody make any 
suggestions on how to remedy this? 

My initial searches in to this error on the net came up fruitless, hence 
my I am posting here
( the slightly worrying solution I have at the moment is to go back to 
antlr-2.7.7.jar which seems to work fine, but means I cant utilise 
AntlrWorks anymore :( and am forced to use the old syntax etc)

Here are some pertinent details about my machine

Microsoft Windows XP [Version 5.1.2600]

java version "1.6.0_02"
Java(TM) SE Runtime Environment (build 1.6.0_02-b06)
Java HotSpot(TM) Client VM (build 1.6.0_02-b06, mixed mode, sharing)

As always thanks in advance for any help that might be forthcoming



David Llewellyn

Ideaworks3d Ltd

From parrt at cs.usfca.edu  Mon Aug  6 08:34:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Aug 2007 08:34:10 -0700
Subject: [antlr-interest] Antlr 3.0 on Windows - starting troubles error
	org.antlr.tool.ErrorManager.setLocale(ErrorManager.java:393)
In-Reply-To: <46B73CE9.1020404@ideaworks3d.com>
References: <46B73CE9.1020404@ideaworks3d.com>
Message-ID: <286CFAF2-7CE3-4C91-A634-C73611A9B346@cs.usfca.edu>

add antlr-2.7.7.jar to your path; check the lib dir.
Ter

From kroepke at classdump.org  Mon Aug  6 08:50:27 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 6 Aug 2007 17:50:27 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <46B73CB1.2040201@gmx.de>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
	<46B71FBC.5040603@gmx.de>
	<1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>
	<46B73CB1.2040201@gmx.de>
Message-ID: <18353ADA-00C3-4EDC-BE3A-2F41BDBF680C@classdump.org>


On Aug 6, 2007, at 5:22 PM, Johannes Luber wrote:

> Kay Roepke wrote:
>>
>> There cannot be any spaces in the grammar name anyway, so escaping  
>> is a
>> non-issue.
>> Probably every filesystem in significant use can work with ANTLR  
>> grammar
>> names as is, no escaping
>> necessary.
>
> In the case that directories are output with spaces they will be
> escaped. IIRC, Unix can use both backslashes and colons in filenames.
> The usage of the proprietary format doesn't protect you from such  
> cases
> and even forces to do the unquoting by yourself. Not to mention  
> that the
> output format in XML can at least add information without breaking  
> every
> application.

Ok. So you mean using the -fo or -o options might introduce  
characters that need to be escaped, I missed that.
Unfortunately I think there's a bug in there as I have not been able  
to actually specify a -fo directory containing
a space character (even with the proper escaping). That's most likely  
a shortcoming of ANTLR's option parsing
code.

>> Not every tool wants to parse XML. In most cases you specifically  
>> do not
>> want to parse XML (and handrolling an XML lexer/parser is  
>> significantly
>> more work than writing one for the current output!)
>
> It doesn't have necessarily to be XML, but nonetheless the current
> output lacks two columns with the semantic information. At least the
> output needs to be changed to:
>
> TParser.java	: Source	: T.g		: Grammar
> T.tokens	: Tokens	: T.g		: Grammar
> T__.g		: Grammar	: T.g		: Grammar
> U.g		: Grammar	: T.tokens	: Tokens
> U.java		: Source	: U.g		: Grammar
> U.tokens	: Tokens	: U.g		: Grammar

Why do we need that information? It seems a superflous to me. ANTLR will
always use .g as the suffix for intermediate grammars (the T__.g file  
is scheduled for removal, BTW, i.e.
we should remove it after generating the lexer). Also the suffix of  
the tokens file is not likely to
ever change. Everything else is a source file. The tool that invokes  
ANTLR can easily know these things.

>> A tool that uses the depend information of ANTLR will be tied to  
>> ANTLR
>> anyway, so I don't think we have an issue of hypothetically changing
>> suffixes. Build tools would need to be updated then in any case.
>> Plus, no tool should need to know what the .tokens file is good for.
>
> That is wrong. First of all, tools may want to treat token files
> differently from source files. I can imagine a grammar explorer which
> shows the file dependencies as a tree and wants to color tokens,  
> grammar
> and source files differently. With my annotated format there is no
> guessing, to which kind each entry belongs to.

That application would be geared towards ANTLR and I would expect it  
to know quite a bit about ANTLR.
For example the name the tokens file will have, as well as the  
internal layout of that file.
Even with XML (or any other annotated format) you still have to  
encode knowledge in the calling program.
Given that the file suffixes are so unlikely to change, I don't think  
we need such a verbose format, IMHO.

> Secondly, I've written a tool, which reads token files, so I don't  
> have
> to add the rule names all by myself. The rules are annotated how the
> appropriate rule is to be translated into RELAX NG. If I couldn't read
> token files in, I'd have certainly lots of work.

Well, you can. It's pretty easy to do so. It's the grammar name with  
a 'tokens' suffix.

> Best regards,
> Johannes Luber


best,

-k
-- 
Kay R?pke
http://classdump.org/





From vbar at comp.cz  Mon Aug  6 09:00:40 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Mon, 06 Aug 2007 18:00:40 +0200
Subject: [antlr-interest] throws does not work
In-Reply-To: <6F9F3037-2126-4E38-B0B7-A1A921AD3F1D@classdump.org>
References: <7385e6fe0708060452x414ac83fid1124765e5188f57@mail.gmail.com>
	<6F9F3037-2126-4E38-B0B7-A1A921AD3F1D@classdump.org>
Message-ID: <46B745A8.7000103@comp.cz>

Kay Roepke wrote:
> On Aug 6, 2007, at 1:52 PM, F?rat K???K wrote:
> 
>> ruleName throws NullPointerException
>>      :  blablaRule
>>      ;
>>
>> this parser rule does not generate method:
>>
>> public final void jdkHome() throws NullPointerException {
>> }
> true, ANTLR parses the throws but doesn't use them right now.
> I don't know what the book says about this, but there is a bug for it
> in JIRA <http://www.antlr.org:8888/browse/ANTLR-100>.
>> what should i do?
> I'm afraid it isn't possible right now. You might be able to do 
> something fancy with catch handlers and rethrowing Runtime exceptions,
> but that's probably not what you want.
> It's a bad hack anyway.
Would it be possible to change the template to generate
throws Exception
on every method? I suppose that isn't all that clean either, but well, 
whatever works...

	Bye
		Vasek


From win at wincent.com  Mon Aug  6 08:56:32 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 6 Aug 2007 17:56:32 +0200
Subject: [antlr-interest] The filter option
In-Reply-To: <567D4341-DD92-4F45-A624-83F6D260BAA0@cs.usfca.edu>
References: <f31182ab0708021048o10ce2001s2189ad0454653002@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023588@wavemachine.temporal-wave.com>
	<f31182ab0708021140p73fb0ce8s915749de0dc33bd8@mail.gmail.com>
	<051466DAA0D608439E196797955018D7023589@wavemachine.temporal-wave.com>
	<f31182ab0708021253t61f87b94i830041b2798f3f51@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358A@wavemachine.temporal-wave.com>
	<f31182ab0708021323n575703c9r495aa3dbeb92fa23@mail.gmail.com>
	<051466DAA0D608439E196797955018D702358B@wavemachine.temporal-wave.com>
	<f31182ab0708021630m3e20e680me644337b506d3d3e@mail.gmail.com>
	<23B44CC3-E4E2-4B41-87FE-0C3D2BC555A5@wincent.com>
	<567D4341-DD92-4F45-A624-83F6D260BAA0@cs.usfca.edu>
Message-ID: <2D202C22-AD89-4C2E-9971-C15AA5640E70@wincent.com>

El 6/8/2007, a las 16:30, Terence Parr escribi?:

> On Aug 6, 2007, at 2:28 AM, Wincent Colaiuta wrote:
>
>> El 3/8/2007, a las 1:30, Marcos Mar?n escribi?:
>>
>>> On 8/2/07, Jim Idle <jimi at temporal-wave.com> wrote:
>>>>
>>>>  As the last rule in your lexer you could use:
>>>>
>>>>
>>>>
>>>> ANY : . { $channel = HIDDEN; }
>>>>
>>>
>>>
>>> Actually, after testing more this does not work, it no longer  
>>> complains
>>> about curly braces but it does complain about anything else that  
>>> is not one
>>> of my rules. My guess is it does not complain about curly braces  
>>> and it does
>>> of other things because curly braces is only one char, so I tried  
>>> ANY: .+
>>> {$channel = HIDDEN;} ; but it gave me a warning of the rule being
>>> unreachable.
>>>
>>> I'm going to try creating a standalone lexer and parser.
>>
>> For reference, this has come up in the past. In my opinion this is  
>> a bug in ANTLR, so I sent in a patch for this back in June but  
>> nobody replied:
>>
>> http://www.antlr.org/pipermail/antlr-interest/2007-June/ 
>> 021243.html
>
> From your post:
>
> 2. "filter = true" doesn't work for lexer grammars which are declared
> in a separate file as "lexer grammars"
>
> That is strange as that is the only place they work for me: n the  
> lexer alone.
>
> See the fuzzyjava example.

Note sure exactly why I wrote that. I believe that at the time I did  
a simple test and compared the lexer generated from a combined  
grammar with an effectively identical one written as a lexer-only  
grammar and there were some differences; but now on repeating that  
same test the generated code is identical for both ways (tried with  
Java target and confirmed with C target just to be sure), so right  
now I can't remember why I wrote that...

:-|
Wincent



From thechrisproject.lists at gmail.com  Mon Aug  6 10:19:54 2007
From: thechrisproject.lists at gmail.com (Chris Norris)
Date: Mon, 6 Aug 2007 12:19:54 -0500
Subject: [antlr-interest] newbie: can't enter input in the ANTLRWorks
	debugger
Message-ID: <79713eeb0708061019m126f273dy9e6431fbc86924e2@mail.gmail.com>

I'm a total newbie to ANTLR.  I started doing this tutorial:
http://www.antlr.org/works/help/tutorial/calculator.html

I'm using ANTLRWorks 1.1.2 on Windows Vista.
As far as I can tell, this is the basic getting started tutorial.  Any other
starting points for people like me would be useful to know about.  So the
interpreter stage of the tutorial went fine, but when I get to the debugger
stage, I can't enter input.  The instructions state, "Now let's use the
debugger to single step through the parse. Invoke the debugger (CTRL-F9) and
enter the same input text as with the interpreter "2+3*4" followed by
return."

The input area won't let me enter anything.  I click on it and type things,
but nothing happens.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/36499a39/attachment.html 

From jaluber at gmx.de  Mon Aug  6 11:06:32 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 20:06:32 +0200
Subject: [antlr-interest] newbie: can't enter input in the ANTLRWorks
 debugger
In-Reply-To: <79713eeb0708061019m126f273dy9e6431fbc86924e2@mail.gmail.com>
References: <79713eeb0708061019m126f273dy9e6431fbc86924e2@mail.gmail.com>
Message-ID: <46B76328.8080807@gmx.de>

Chris Norris wrote:
> I'm a total newbie to ANTLR.  I started doing this tutorial:
> http://www.antlr.org/works/help/tutorial/calculator.html
>  
> I'm using ANTLRWorks 1.1.2 on Windows Vista.
> As far as I can tell, this is the basic getting started tutorial.  Any
> other starting points for people like me would be useful to know about. 
> So the interpreter stage of the tutorial went fine, but when I get to
> the debugger stage, I can't enter input.  The instructions state, " Now
> let's use the debugger to single step through the parse. Invoke the
> debugger (CTRL-F9) and enter the same input text as with the interpreter
> "2+3*4" followed by return."
>  
> The input area won't let me enter anything.  I click on it and type
> things, but nothing happens. 

There should be a dialog which allows to enter input text or to point to
a file. Maybe you need to go over the debug menu. It isn't possible to
insert text into that input area directly.

Best regards,
Johannes Luber

From dirty at apple.com  Mon Aug  6 13:58:18 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 6 Aug 2007 13:58:18 -0700
Subject: [antlr-interest] Treewalker output, as input to another treewalker
Message-ID: <7348F18B-6F02-47DE-99BE-C6F476F15DBC@apple.com>

Is it possible to feed the output of one tree walker as the input of  
another tree walker?

I'm starting to add some stuff to my project that would involve  
modifying the AST.  Optimizations and the such.  I was wondering if  
it would be possible to define different tree grammars that would  
apply different AST modifications.  And then run them, one after  
another.

Is it possible to do this?

Cameron Esfahani
dirty at apple.com

"Americans are very skilled at creating a custom meaning from  
something that's mass-produced."

Ann Powers


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/6a6c44c9/attachment.html 

From dirty at apple.com  Mon Aug  6 13:58:31 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 6 Aug 2007 13:58:31 -0700
Subject: [antlr-interest] C Runtime - Duplicate symbols defined in parser
	and lexer
Message-ID: <860F1A82-4AA6-44E7-BAE0-D9BDE58A086E@apple.com>

I made a small change to my grammar and now there is a duplicate  
symbol defined in both the generated parser and lexer files.

Specifically, the symbol is named cdfa14.  And sure enough, when I  
open TParser.c and TLexer.c, there is a symbol named that in both.

Anyone have any ideas?

Cameron Esfahani
dirty at apple.com

"Americans are very skilled at creating a custom meaning from  
something that's mass-produced."

Ann Powers


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/6a9d6a39/attachment.html 

From parrt at cs.usfca.edu  Mon Aug  6 14:07:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Aug 2007 14:07:10 -0700
Subject: [antlr-interest] Treewalker output,
	as input to another treewalker
In-Reply-To: <7348F18B-6F02-47DE-99BE-C6F476F15DBC@apple.com>
References: <7348F18B-6F02-47DE-99BE-C6F476F15DBC@apple.com>
Message-ID: <B6996044-A7F9-4204-8B65-D7388FF74AF2@cs.usfca.edu>


On Aug 6, 2007, at 1:58 PM, Cameron Esfahani wrote:

> Is it possible to feed the output of one tree walker as the input  
> of another tree walker?

not yet.  3.1 being baked right now :)

Ter


From dirty at apple.com  Mon Aug  6 14:07:17 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 6 Aug 2007 14:07:17 -0700
Subject: [antlr-interest] Treewalker output,
	as input to another treewalker
In-Reply-To: <B6996044-A7F9-4204-8B65-D7388FF74AF2@cs.usfca.edu>
References: <7348F18B-6F02-47DE-99BE-C6F476F15DBC@apple.com>
	<B6996044-A7F9-4204-8B65-D7388FF74AF2@cs.usfca.edu>
Message-ID: <88AA925D-0381-4390-A037-1D57B6D2B715@apple.com>

Sweet.  I think that feature would be very fine...

On Aug 6, 2007, at 2:07 PM, Terence Parr wrote:

>
> On Aug 6, 2007, at 1:58 PM, Cameron Esfahani wrote:
>
>> Is it possible to feed the output of one tree walker as the input  
>> of another tree walker?
>
> not yet.  3.1 being baked right now :)
>
> Ter
>

Cameron Esfahani
dirty at apple.com

"There are times in the life of a nation when the only place a decent  
man can find himself is in prison."



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/5acc5421/attachment.html 

From parrt at cs.usfca.edu  Mon Aug  6 14:18:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 6 Aug 2007 14:18:48 -0700
Subject: [antlr-interest] ST-3.1b1 available
Message-ID: <22905D68-5DFB-4E64-BBC2-68DBA413618A@cs.usfca.edu>

Hi, just pushing an interim release...

http://www.stringtemplate.org/download/stringtemplate-3.1b1.tar.gz

see:

http://www.stringtemplate.org/CHANGES.txt

Ter

From dirty at apple.com  Mon Aug  6 14:23:09 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 6 Aug 2007 14:23:09 -0700
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <FF4F0035-FEDD-4267-AF1E-F6DB076FC0C1@cs.usfca.edu>
References: <46B6FF1D.8030507@gmx.de>
	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>
	<46B71FBC.5040603@gmx.de>
	<1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>
	<FF4F0035-FEDD-4267-AF1E-F6DB076FC0C1@cs.usfca.edu>
Message-ID: <DCD01781-FA66-40C3-953F-3BA1E958DB59@apple.com>

One thing that I'd like to see is the ability to specify an output  
directory.  I'd rather not have the outputs of ANTLR be in the same  
directory as my grammar files.  I'd really like to be able to supply  
a directory path.

On Aug 6, 2007, at 7:43 AM, Terence Parr wrote:

> Guys, I'm liking Johannes' proposal to go back to "type grammar X;"  
> generating X.java or X.c etc...  Only combined grammars would get  
> the suffix Parser / Lexer as they *need* a way to distinguishes the  
> classes.  Note that tree grammars are already "tree grammar X" ->  
> X.java.  The -depend option will tell build tools all about the  
> output.
>
> If we changed for 3.1, then regenerating code from noncombined  
> grammars would require a change in the invocation code perhaps, but  
> combined is the common case.  The impact would be minimal either  
> way.  It's messy right now:
>
> lexer grammar TLexer;
>
> generates TLexerLexer.java
>
> Ter

Cameron Esfahani
dirty at apple.com

"In the elder days of Art, Builders wrought with greatest care each  
minute and unseen part; For the gods see everywhere."

"The Builders", H. W. Longfellow



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/dacdd0cb/attachment.html 

From lgcraymer at yahoo.com  Mon Aug  6 14:26:42 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 6 Aug 2007 14:26:42 -0700 (PDT)
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <FF4F0035-FEDD-4267-AF1E-F6DB076FC0C1@cs.usfca.edu>
Message-ID: <6650.55979.qm@web55910.mail.re3.yahoo.com>

Ter--

How about just adding a "LexerName" option to combined
grammars?  Then the parser could get the base grammar
name, and users would have complete control over the
naming and (should) stop complaining.

--Loring

--- Terence Parr <parrt at cs.usfca.edu> wrote:

> Guys, I'm liking Johannes' proposal to go back to
> "type grammar X;"  
> generating X.java or X.c etc...  Only combined
> grammars would get the  
> suffix Parser / Lexer as they *need* a way to
> distinguishes the  
> classes.  Note that tree grammars are already "tree
> grammar X" ->  
> X.java.  The -depend option will tell build tools
> all about the output.
> 
> If we changed for 3.1, then regenerating code from
> noncombined  
> grammars would require a change in the invocation
> code perhaps, but  
> combined is the common case.  The impact would be
> minimal either  
> way.  It's messy right now:
> 
> lexer grammar TLexer;
> 
> generates TLexerLexer.java
> 
> Ter
> 



       
____________________________________________________________________________________Ready for the edge of your seat? 
Check out tonight's top picks on Yahoo! TV. 
http://tv.yahoo.com/

From jaluber at gmx.de  Mon Aug  6 14:27:26 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 06 Aug 2007 23:27:26 +0200
Subject: [antlr-interest] Names of generated files and classes
In-Reply-To: <DCD01781-FA66-40C3-953F-3BA1E958DB59@apple.com>
References: <46B6FF1D.8030507@gmx.de>	<ebc876d70708060413i45be5838gbe59257682ce77c2@mail.gmail.com>	<46B71FBC.5040603@gmx.de>	<1A20D491-E1ED-4B4D-AF76-9BD95226F34E@classdump.org>	<FF4F0035-FEDD-4267-AF1E-F6DB076FC0C1@cs.usfca.edu>
	<DCD01781-FA66-40C3-953F-3BA1E958DB59@apple.com>
Message-ID: <46B7923E.9010903@gmx.de>

Cameron Esfahani wrote:
> One thing that I'd like to see is the ability to specify an output
> directory.  I'd rather not have the outputs of ANTLR be in the same
> directory as my grammar files.  I'd really like to be able to supply a
> directory path.
> 
Look for the -o and -fo options for org-antlr.Tool (I'm not sure what
-fo differentiates from -o, though).

Best regards,
Johannes Luber

From dave at badgers-in-foil.co.uk  Mon Aug  6 16:23:52 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 6 Aug 2007 23:23:52 +0000
Subject: [antlr-interest] problem building json grammar maven2 + antlr3
In-Reply-To: <46B53CDF.8040501@hanaden.com>
References: <46B53CDF.8040501@hanaden.com>
Message-ID: <20070806232351.GA15986@badgers-in-foil.co.uk>

On Sat, Aug 04, 2007 at 10:58:39PM -0400, hanasaki wrote:
> Building json grammar below with the maven2 plugin for antlr3 and netbeans6
> http://www.antlr.org/wiki/pages/viewpageattachments.action?pageId=819220
> http://www.antlr.org/wiki/display/ANTLR3/Using+ANTLR+3+with+Maven+2
> 
> [antrun:run {execution: default}]

I see you're using the antrun recipe, rather than the actual plugin
code.  (A good thing actually, given the second problem below...)

> Executing tasks
>      [java] ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
>      [java] error(8):  file JsonTree.g contains grammar JSONTree; names must be identical

The above seems to indicate that the name of the file you've saved from
the wiki differs from the original "JSON" vs "Json".

>      [java] error(3):  cannot find tokens file ./JSON.tokens

Hmm, I didn't allow for that in the Maven plugin yet.  I'll make a
testcase with that grammar and try to get it working.

To get it working using antrun should be a matter of adding a,

  <arg line="-lib ${project.build.directory}/generated-sources/antlr"/>

to the <java> invocation.


>      [java] warning(138): JsonTree.g:0:0: grammar JSONTree: no start rule (no rule can obviously be followed by EOF)

Hopefully, be above is due to one of the earlier errors.


ta,
dave

-- 
http://david.holroyd.me.uk/

From dirty at apple.com  Mon Aug  6 20:32:03 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 6 Aug 2007 20:32:03 -0700
Subject: [antlr-interest] (no subject)
Message-ID: <ECFAB39A-FFB6-4F00-9C12-F6CA2D7F9973@apple.com>

I'm trying to add support for arithmetic operations to my grammar.  I  
took the rules from the C grammar.  Everything seems fine in my  
parser grammar, but when I try and add the relevant pieces to my tree  
grammar, I get the following error:

error(210):  The following sets of rules are mutually left-recursive  
[exclusive_or_expression, unary_expression, primary_expression,  
shift_expression, inclusive_or_expression, numeric_expression,  
and_expression, cast_expression, multiplicative_expression,  
additive_expression, postfix_expression]

Here is the portion from the parser grammar:

numeric_expression
	:	inclusive_or_expression
	;

inclusive_or_expression
	:	exclusive_or_expression ( whitespace! '|'^ whitespace!  
exclusive_or_expression )*
	;

exclusive_or_expression
	:	and_expression ( whitespace! '^'^ whitespace! and_expression )*
	;

and_expression
	:	shift_expression ( whitespace! '&'^ whitespace! shift_expression )*
	;

shift_expression
	:	additive_expression
		(
			whitespace!
			( '<<'^ | '>>'^ ) whitespace! additive_expression
		)*
	;

additive_expression
	:	multiplicative_expression
		(
			whitespace!
			( '+'^ | '-'^ ) whitespace! multiplicative_expression
		)*
	;

multiplicative_expression
	:	cast_expression
		(
			whitespace!
			( '*'^ | '/'^ | '%'^ ) whitespace! cast_expression
		)*
	;

cast_expression
	:	unary_expression
	;

unary_expression
	:	postfix_expression
	|	unary_operator whitespace! cast_expression
	;

postfix_expression
	:	primary_expression
	;

unary_operator
	:	'~'
	|	'!'
	;

primary_expression
	:	number_size -> ^( T_NUM number_size )
	|	'('! whitespace! numeric_expression whitespace! ')'!
	;

and here is the portion from the tree grammar:

numeric_expression
	:	inclusive_or_expression
	;

inclusive_or_expression
	:	exclusive_or_expression ( '|'^ exclusive_or_expression )*
	;

exclusive_or_expression
	:	and_expression ( '^'^ and_expression )*
	;

and_expression
	:	shift_expression ( '&'^ shift_expression )*
	;

shift_expression
	:	additive_expression
		(
			( '<<'^ | '>>'^ ) additive_expression
		)*
	;

additive_expression
	:	multiplicative_expression
		(
			( '+'^ | '-'^ ) multiplicative_expression
		)*
	;

multiplicative_expression
	:	cast_expression
		(
			( '*'^ | '/'^ | '%'^ ) cast_expression
		)*
	;

cast_expression
	:	unary_expression
	;

unary_expression
	:	postfix_expression
	|	unary_operator cast_expression
	;

postfix_expression
	:	primary_expression
	;

unary_operator
	:	'~'
	|	'!'
	;

primary_expression
	:	^( T_NUM number_size )
	|	numeric_expression
	;

Did I do it correctly?

Cameron Esfahani
dirty at apple.com

Linus is dumb.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070806/96e832c7/attachment.html 

From kroepke at classdump.org  Tue Aug  7 01:05:24 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 7 Aug 2007 10:05:24 +0200
Subject: [antlr-interest] C Runtime - Duplicate symbols defined in
	parser and lexer
In-Reply-To: <860F1A82-4AA6-44E7-BAE0-D9BDE58A086E@apple.com>
References: <860F1A82-4AA6-44E7-BAE0-D9BDE58A086E@apple.com>
Message-ID: <CCE2A138-C24C-4951-94EB-EE18BB17706A@classdump.org>


On Aug 6, 2007, at 10:58 PM, Cameron Esfahani wrote:

> Specifically, the symbol is named cdfa14.  And sure enough, when I  
> open TParser.c and TLexer.c, there is a symbol named that in both.
>
> Anyone have any ideas?

Those are global arrays, right? Maybe the C target should use  
different prefixes for DFAs in lexers and parsers. That's what I did  
with ObjC.
I simply prefix all generated global symbols with the recognizer's  
name (arrays CLexer_DFA42, @class CParser_program_return, etc.) to  
work around
this issue.

You might get away with changing the C.stg template file and sticking  
that in front of the classpath, until this issue is resolved.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Tue Aug  7 02:14:32 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 07 Aug 2007 21:14:32 +1200
Subject: [antlr-interest] (no subject)
In-Reply-To: <ECFAB39A-FFB6-4F00-9C12-F6CA2D7F9973@apple.com>
References: <ECFAB39A-FFB6-4F00-9C12-F6CA2D7F9973@apple.com>
Message-ID: <20070807091448.7F1E611EB23@www.antlr.org>

At 15:32 7/08/2007, Cameron Esfahani wrote:
>error(210):  The following sets of rules are mutually 
>left-recursive [exclusive_or_expression, unary_expression, 
>primary_expression, shift_expression, inclusive_or_expression, 
>numeric_expression, and_expression, cast_expression, 
>multiplicative_expression, additive_expression, 
>postfix_expression]
>
>Here is the portion from the parser grammar:
>
>numeric_expression
>:inclusive_or_expression
>;
[...]
>primary_expression
>:number_size -> ^( T_NUM number_size )
>|'('! whitespace! numeric_expression whitespace! ')'!
>;
>
>and here is the portion from the tree grammar:
>
>numeric_expression
>:inclusive_or_expression
>;
[...]
>primary_expression
>:^( T_NUM number_size )
>|numeric_expression
>;

This looks like the problem.  primary_expression can be the first 
component of numeric_expression, and numeric_expression can be the 
first component of primary_expression.  That's mutual left 
recursion right there.

Since the output of your grammar rule is a T_NUM, that's what you 
should be looking for in the tree grammar, not jumping back up to 
numeric_expression. 


From ganelin at mail.com  Tue Aug  7 05:06:52 2007
From: ganelin at mail.com (pganelin)
Date: Tue, 07 Aug 2007 08:06:52 -0400
Subject: [antlr-interest] Repeated explicit evaluation of the tree in ANTLR3.
Message-ID: <46B8605C.5050508@mail.com>


After I switched from ANTLR V2 to ANTL v3 I found that I can not walk 
repeatedly over the same tree multiple times within tree walker. To 
illustrate the problem I choose (Visual) Basic as a well known 
interpreted language.

Let's consider DO WHILE loop. Suppose that I am ?lazy? and do not worry 
too much about the performance. Instead of creating intermediate p-code 
for the program execution I just keep my ANTLR tree as a run time 
representation. For ?while evaluation? it means walking the tree all 
over again during the execution phase of the program. In ANTLR2 I had 
something like this

class BasicTree extends TreeParser;

doWhile:
      #(WHILE e:. b:.)
      {
         boolean cond=false;
         do {
             boolean cond = expression(e);
             if (!cond) break;
             block(b);
         }
         while(true);
      }
;

expression returns [boolean cond]:
#(EXPR ?)
;

block:
#(SLIST ?)
;


where ?expression? evaluates the Boolean condition "and block" executes 
the statements.

Please note that I can trick the ANTLR2 into repeatedly walking the tree 
by explicitly passing the first parameter ? sub tree to walk.

In ANTLR v3 I do not have the option of passing subtree as the first 
parameter of grammar rule. Instead I need to create the token stream in 
advance and pass it in tree constructor. I tried some ugly hack like this

doWhile:
      ^(WHILE e=. b=.)
      {
         boolean cond=false;
         do {
	push($e);
             boolean cond = expression();
	pop()
             if (!cond) break;
	push($b);
             block();
	pop()
         }
         while (cond != 0);     }
;

expression:
^(EXPR ?)
;
block:
^(SLIST ?)

     private void pop() {
         input =stack.pop());
     }

     private void push(Tree e) {
         stack.push(input);
         CommonTreeNodeStream nodes = new CommonTreeNodeStream(e);
         nodes.setTokenStream(input.getTokenStream());
         input = nodes;

     }

but failed to make it work. Also I suspect it would be extremely 
inefficient even in my case.

Maybe I should be able to push and pop input stream state? I was not 
able to figure out how to do it.

Any suggestions how to solve this problem in ANTLR3 would be greatly 
appreciated.

Thanks,
Pavel






From jaluber at gmx.de  Tue Aug  7 05:13:35 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 07 Aug 2007 14:13:35 +0200
Subject: [antlr-interest] Lexing troubles
In-Reply-To: <46B50217.2090703@gmx.de>
References: <46B50217.2090703@gmx.de>
Message-ID: <46B861EF.8010007@gmx.de>

Has no one an idea? Or did I send the email on the wrong day?

Johannes Luber wrote:
> Hello!
> 
> I've been finally testing my C#-Lexer and after changing some rules I've
> got it working. But there are a few details I'm not happy about.
> 
> The first is that I have to use the filter option. Otherwise I can't get
> the lexer to work. It seems to be the same issue as in the thread
> "Understanding priorities in lexing (newbie)". Unfortunately I have to
> use a catch-all EVERYTHING_ELSE rule. If no one has an idea how I can do
> the lexer without filtering then I'd appreciate suggestions how I should
> do error reporting here.
> 
> Another issue is that I have to change the constructor as I have to do
> some additional initialization. Right now I have an extra function named
> Init(), which I call after the object construction but this is clumsy. I
> could use a static constructor but I don't really want to hardwire the
> grammar name into the file. Should someone rename it the same grammar
> will generate a failing file. At least now the dependency is obvious.
> I'm missing a general mechanism to adapt constructors to the grammar
> authors needs.
> 
> For those, who want to test the attached file themselves: The current C#
> target doesn't support lexer scopes. I've transposed the Java fix so you
> have to use a self-build ANTLR. Unless you manage to convince it
> otherwise to use the fixed .stg. It may be possible that the C# target
> is still broken in the newest sources (didn't test them) so I'd be
> willing to send my local copy of the sources if the need arises.
> 
> Best regards,
> Johannes Luber
> 


From yuesefa at gmail.com  Tue Aug  7 06:37:43 2007
From: yuesefa at gmail.com (Haofei)
Date: Tue, 7 Aug 2007 21:37:43 +0800
Subject: [antlr-interest] warning for 'no lexer rule corresponding to token'
Message-ID: <707eb1470708070637v70858478v5c0b7fa2a3c22b74@mail.gmail.com>

for example, a lexer rule like

COLON    :    ':'        {if (!spaceIsNext())
{$type=COLON_WITH_NO_FOLLOWING_SPACE;}};

if the token is a colon with no following space, I just change it type to
that. but when i generate the java code, there's a warning like

warning(105):  no lexer rule corresponding to token:
COLON_WITH_NO_FOLLOWING_SPACE

Is there any way to fix this warning? thanks a lot :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070807/fc30999e/attachment.html 

From dave.raskin at rimage.com  Tue Aug  7 08:27:57 2007
From: dave.raskin at rimage.com (Dave Raskin)
Date: Tue, 7 Aug 2007 10:27:57 -0500
Subject: [antlr-interest] Spaces in names
Message-ID: <1D603DEEEE680240A57C26F32DD1665F025BC9B3@dopey.Rimage.com>

Hello, I have a fairly simple grammar (attached) to parse things like 
 
    name='value' 
 
type statement. Essentially it's a very simplified version of the SQL
WHERE clause.
 
Everything works well, except that values cannot accept spaces (' ') in
the string. I would like to be able to parse statements such as 
 
    name=' value value1'
 
I am using Antlr version 2.7.5.
 
Am I doing something wrong in the grammar?
 
Thanks in advance!
 
Dave Raskin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070807/3f87aec2/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: SelectGrammar.g
Type: application/octet-stream
Size: 1604 bytes
Desc: SelectGrammar.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070807/3f87aec2/attachment.obj 

From ihok at hotmail.com  Tue Aug  7 08:53:33 2007
From: ihok at hotmail.com (Jack Tanner)
Date: Tue, 7 Aug 2007 15:53:33 +0000 (UTC)
Subject: [antlr-interest] antlr.org wiki problem
Message-ID: <loom.20070807T175034-14@post.gmane.org>

See http://www.antlr.org/wiki/display/ANTLR3/Rule+and+subrule+options

The left-hand column ("option") displays correctly in IE6, but not in Firefox
2.0.0.6.


From parrt at cs.usfca.edu  Tue Aug  7 09:45:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 7 Aug 2007 09:45:36 -0700
Subject: [antlr-interest] Repeated explicit evaluation of the tree in
	ANTLR3.
In-Reply-To: <46B8605C.5050508@mail.com>
References: <46B8605C.5050508@mail.com>
Message-ID: <D7FFA096-D89B-4354-88CF-AF39BDE8C3C0@cs.usfca.edu>


On Aug 7, 2007, at 5:06 AM, pganelin wrote:

>
> After I switched from ANTLR V2 to ANTL v3 I found that I can not  
> walk repeatedly over the same tree multiple times within tree  
> walker. To illustrate the problem I choose (Visual) Basic as a well  
> known interpreted language.


see my tutorial.  seek on the stream.
Ter

From Tom.Ball at Sun.COM  Tue Aug  7 10:39:12 2007
From: Tom.Ball at Sun.COM (Tom Ball)
Date: Tue, 07 Aug 2007 10:39:12 -0700
Subject: [antlr-interest] Can ANTLR aid grammar documentation?
Message-ID: <46B8AE40.6000201@sun.com>

I hope this isn't a FAQ, but it's not on the list nor could I find any 
archive references.  Does anyone have tips on ways to generate 
documentation for an ANTLR-based grammar?  Not a complete language 
specification, of course (that's what specification languages are for), 
but we're interested in any documentation (or testing) artifacts that 
can be generated -- bitmap files of the syntax diagrams ANTLRWorks 
displays would be useful, for example.

Tom

From paul at paulkeir.com  Tue Aug  7 10:50:45 2007
From: paul at paulkeir.com (Paul Keir)
Date: Tue, 07 Aug 2007 18:50:45 +0100
Subject: [antlr-interest] Parser vs. Recognizer
Message-ID: <46B8B0F5.40708@paulkeir.com>

Hey there,

Is there any difference between a parser, and a recognizer?

Cheers,
Paul


From win at wincent.com  Tue Aug  7 11:31:26 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 7 Aug 2007 20:31:26 +0200
Subject: [antlr-interest] Parser vs. Recognizer
In-Reply-To: <46B8B0F5.40708@paulkeir.com>
References: <46B8B0F5.40708@paulkeir.com>
Message-ID: <49417326-DFDC-4D99-8171-583278EF7549@wincent.com>

El 7/8/2007, a las 19:50, Paul Keir escribi?:

> Hey there,
>
> Is there any difference between a parser, and a recognizer?
>
> Cheers,
> Paul

In ANTLR speak, a parser is one of the three different kinds of  
recognizers that ANTLR can produce.

Lexers and tree parsers are the others.

Cheers,
Wincent


From paul at paulkeir.com  Tue Aug  7 12:32:04 2007
From: paul at paulkeir.com (Paul Keir)
Date: Tue, 07 Aug 2007 20:32:04 +0100
Subject: [antlr-interest] Parser vs. Recognizer
In-Reply-To: <49417326-DFDC-4D99-8171-583278EF7549@wincent.com>
References: <49417326-DFDC-4D99-8171-583278EF7549@wincent.com>
Message-ID: <46B8C8B4.8080804@paulkeir.com>

Brilliant! Thanks very much Wincent.
Paul

From antlr at mirality.co.nz  Tue Aug  7 14:01:58 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 08 Aug 2007 09:01:58 +1200
Subject: [antlr-interest] warning for 'no lexer rule corresponding to
 token'
In-Reply-To: <707eb1470708070637v70858478v5c0b7fa2a3c22b74@mail.gmail.co
 m>
References: <707eb1470708070637v70858478v5c0b7fa2a3c22b74@mail.gmail.com>
Message-ID: <20070807210316.82E6411EB23@www.antlr.org>

At 01:37 8/08/2007, Haofei wrote:
>for example, a lexer rule like
>
>COLON    :    ':'        {if (!spaceIsNext()) 
>{$type=COLON_WITH_NO_FOLLOWING_SPACE;}};
>
>if the token is a colon with no following space, I just change it 
>type to that. but when i generate the java code, there's a 
>warning like
>
>warning(105):  no lexer rule corresponding to token: 
>COLON_WITH_NO_FOLLOWING_SPACE

Add COLON_WITH_NO_FOLLOWING_SPACE to your tokens block at the top 
of the file.  Also make sure that no other lexer rules refer to 
it.  It's ok to refer to it from parser rules, though. 


From antlr at mirality.co.nz  Tue Aug  7 14:07:52 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 08 Aug 2007 09:07:52 +1200
Subject: [antlr-interest] Spaces in names
In-Reply-To: <1D603DEEEE680240A57C26F32DD1665F025BC9B3@dopey.Rimage.com>
References: <1D603DEEEE680240A57C26F32DD1665F025BC9B3@dopey.Rimage.com>
Message-ID: <20070807210834.9C5E411EB3B@www.antlr.org>

At 03:27 8/08/2007, Dave Raskin wrote:
>Everything works well, except that values cannot accept spaces (' 
>') in the string. I would like to be able to parse statements 
>such as
>
>     name=' value value1'
>
>I am using Antlr version 2.7.5.

This is happening because the WS rule is skipping whitespace 
tokens, so they're never making it into the parser.  Instead, 
you're getting "value" as one NAME token and "value1" as another 
NAME token, and your value rule specifies that only one NAME is 
permitted between two TICKs.  Hence why it'll fail to match.

You could change it so that multiple NAMEs are allowed, but that 
will result in collapsing the whitespace and changing the query 
string, which is probably not what you want.  Instead, you should 
change 'value' into a lexer rule so that it can match an entire 
quoted string as a single token.  See the example grammars 
provided with ANTLR -- this sort of thing is fairly common. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070808/85934a19/attachment.html 

From cummings at kjchome.homeip.net  Tue Aug  7 14:44:51 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Tue, 07 Aug 2007 17:44:51 -0400
Subject: [antlr-interest] Access Violation in InitLiterals()
In-Reply-To: <46B5360A.8090201@kjchome.homeip.net>
References: <46B5360A.8090201@kjchome.homeip.net>
Message-ID: <46B8E7D3.5030503@kjchome.homeip.net>

Kevin J. Cummings wrote:
> 	BUT, I am developing this in VC++ on a Windows XP system.  When I
> attempted to run it for the first time, it dies, in InitLiterals() on
> the following statement (the first assignment in this routine):
> 
>> 	literals["ends_with"] = 61;
> 
> By following the backtrace, I find myself in the following code in
> CharScanner.h:
> 
>> inline bool CharScannerLiteralsLess::operator() (const ANTLR_USE_NAMESPACE(std)string& x,const ANTLR_USE_NAMESPACE(std)string& y) const
>> {
>> 	if (scanner->getCaseSensitiveLiterals())
>> 		return ANTLR_USE_NAMESPACE(std)less<ANTLR_USE_NAMESPACE(std)string>()(x,y);
>> 	else
>> 	{
>> #ifdef NO_STRCASECMP
>> 		return (stricmp(x.c_str(),y.c_str())<0);
>> #else
>> 		return (strcasecmp(x.c_str(),y.c_str())<0);
>> #endif
>> 	}
>> }
> 
> On the call to stricmp(), the y.c_str() argument appears to be
> un-initialized (the value of the pointer is 0xcdcdcdcd).

Some more information about my project in case it helps.  ANTLR is built
as a VC++ project as a DLL.  My project is also being built as a DLL.
I'm building both DLLs with /MDd /W3 /Gm /GX /ZI /Od and linking to the
appropriate .lib files to build the executable.  In case it matters, its
VC++ 98 that's being used.

Does anyone have any experience doing this with ANTLR to know if this
will or won't work?

> What really bugs me is why does this work on Linux and not on windows.
> My first 2 grammars don't use literals, so this routine is empty in those.

> Does anyone have any advice on what I can do to make this work?

No one?

> Thanks!

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From antlr at jazillian.com  Tue Aug  7 15:10:25 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 07 Aug 2007 18:10:25 -0400
Subject: [antlr-interest] overriding CommonTree.dupNode()
Message-ID: <46B8EDD1.9090809@jazillian.com>

I just spent a lot of time tracking down why I was getting a few 
CommonTree objects
in my AST even though I'm using my own FancyTree class and a 
FancyTreeAdaptor.
As I'm sure Terrence would guess, I didn't realize I had to override 
CommonTree.dupNode().

I see CommonTreeAdaptor.dupNode() apologizes for not doing better, 
saying in a comment that it could
use reflection, but that would be slow. Well, I grudgingly accept the 
apology, but still would still
like to see a little more effort :) How about adding this to 
CommonTreeAdaptor.dupNode():

if (treeNode instanceof CommonNode) {
    return create(((CommonNode) treeNode).getToken());
}

In this way, one isn't forced to override CommonTree.dupNode() in 
addition to CommonTree.create().

If not, at least change the book (p170 of the PDF version) to say that 
you need to override both
dupNode and create.

Andy

From dirty at apple.com  Tue Aug  7 15:26:52 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Tue, 7 Aug 2007 15:26:52 -0700
Subject: [antlr-interest] error(10): internal error: TWalker.g :
	java.lang.IllegalArgumentException: Can't find template
	tokenRefRuleRoot.st
Message-ID: <382129CB-5E96-418E-8A7B-75D54FA84095@apple.com>

Thanks to Gavin Lambert, I fixed the "error(210):  The following sets  
of rules are mutually left-recursive" error I had earlier.

But now I get the following:

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(10):  internal error: TWalker.g :  
java.lang.IllegalArgumentException: Can't find template  
tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST 
(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1992)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.alternative 
(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative 
(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec 
(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:321)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)

I have no idea even where to begin looking.  Anyone have any ideas?

Cameron Esfahani
dirty at apple.com

"Most people are bad programmers," says Joy. "The honest truth is  
that having a lot of people staring at the code does not find the  
really nasty bugs. The really nasty bugs are found by a couple of  
really smart people who just kill themselves. Most people looking at  
the code won't see anything ... You can't have thousands of people  
contributing and achieve a high standard."

Bill Joy on the myth of Linux's much touted "power in the masses"  
development benefits.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070807/8d681fb4/attachment.html 

From jonathan.thomas at ca.com  Tue Aug  7 17:27:06 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Wed, 08 Aug 2007 10:27:06 +1000
Subject: [antlr-interest] antlr.org wiki problem
In-Reply-To: <loom.20070807T175034-14@post.gmane.org>
References: <loom.20070807T175034-14@post.gmane.org>
Message-ID: <46B90DDA.5010809@ca.com>

OK now it should look ok in both firefox and IE6.
It's a continuing problem with the theme wherever Ter wants to use 
'code' markup in the first column of a table.

Cheers,
JT

Jack Tanner said the following on 8/08/2007 1:53 AM:
> See http://www.antlr.org/wiki/display/ANTLR3/Rule+and+subrule+options
>
> The left-hand column ("option") displays correctly in IE6, but not in Firefox
> 2.0.0.6.
>
>
>   

From parrt at cs.usfca.edu  Tue Aug  7 17:34:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 7 Aug 2007 17:34:11 -0700
Subject: [antlr-interest] antlr.org wiki problem
In-Reply-To: <46B90DDA.5010809@ca.com>
References: <loom.20070807T175034-14@post.gmane.org> <46B90DDA.5010809@ca.com>
Message-ID: <2C628176-99E6-4568-AFDE-13F4E5CA4D85@cs.usfca.edu>


On Aug 7, 2007, at 5:27 PM, Jonathan Thomas wrote:

> OK now it should look ok in both firefox and IE6.
> It's a continuing problem with the theme wherever Ter wants to use  
> 'code' markup in the first column of a table.

ah. ok, noted.

Ter


From ganelin at mail.com  Tue Aug  7 18:00:55 2007
From: ganelin at mail.com (pganelin)
Date: Tue, 07 Aug 2007 21:00:55 -0400
Subject: [antlr-interest] Repeated explicit evaluation of the tree in
	ANTLR3.
Message-ID: <46B915C7.7020309@mail.com>

After I switched from ANTLR V2 to ANTL v3 I found that I can not  
> walk repeatedly over the same tree multiple times within tree  
> walker. To illustrate the problem I choose (Visual) Basic as a well  
> known interpreted language.



>>see my tutorial.  seek on the stream.
>>Ter
>  
>

Terence,
Do you mean this reference?

http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter

with the example how to process CALL?

It does answers the original question, but I still have a more general question: 

What was the reason for dropping first argument from all tree calls. Using push/pop method to essentially pass a parameter has some disadvantages. 
The most evident: the call to pop should be within the "finally" clause to guard against mismatched pop in case of exception.

PS. I thought all the answers should be in the paid-for book not in some free materials on Internet  :-) 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070807/6ab90c86/attachment-0001.html 

From fasmith718 at gmail.com  Tue Aug  7 20:34:03 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Tue, 7 Aug 2007 23:34:03 -0400
Subject: [antlr-interest] ANTLR bug??? ReportError not called on
	"NonViableAltException"
Message-ID: <dea571e70708072034t172eda5cs358094a026fa7bca@mail.gmail.com>

Hi all.  I recently uncovered a problem with my parser where i'm doing
something illegal and ReportError is never called.  ANTLRworks' interpreter
window shows that there is a Nonviable alt, but the breakpoint i put in
RecognitionError is never reached on code execution.

This is a big problem because I am trying to make my language fail
immediately on parse errors, but I can't do this if they are never thrown by
the generated antlr code!

Here is the sample program - you should not be able to put a statement
outside of a function :
fun wave main()
    print "main";
end fun
x = 1;

yet this compiles without reporting an error.  However, putting it in
ANTLRWorks' interpreter shows it to be wrong (which is what i want, darn
it!)

Here is my entire .g file.  If someone could just past it into their
antrlworks and explain this discrepancy i would be highly highly
appreciative.  This is for a project and I need to know if I should pass
this off as a bug in ANTRL generated code... :-/

Thanks a million times in advance!!!
     Frank

grammar ASML;

options{output = AST;
 ASTLabelType=CommonTree;}

tokens{ //tokens to act as artificial roots for structures wo/keywords or
operators
    DECLRT;
    PARAMRT;
    CALLRT;
    BLOCKRT;
}
@header {package asml;}
@members{
    public boolean hasError = false;

    public void setHasError(boolean aHasError){
        hasError = aHasError;
    }

@Override
    public void reportError(RecognitionException e){
        super.reportError(e);
        hasError = true;
    }

    @Override
    protected void mismatch(IntStream input, int ttype, BitSet follow)
        throws RecognitionException{
        throw new MismatchedTokenException(ttype, input);
    }

    @Override
    public void recoverFromMismatchedSet(IntStream input,
        RecognitionException e, BitSet follow) throws RecognitionException{
        throw e;
    }
}

@rulecatch {
    catch (RecognitionException e) {
        reportError(e);
        throw e;
    }
}

@lexer::header {package asml;}
@lexer::members{
    public String stripEscapeChars(String in){
        String newStr = in.replaceAll("\\\\\"", "\"");

            char[] formSlashes = new char[newStr.length()];
            int charsAdded = 0;
            for(int i=0; i<newStr.length(); i++){
                if((newStr.charAt(i) == '\\') &&
                        (newStr.charAt(i+1) == '\\')){
                    formSlashes[charsAdded++] = newStr.charAt(++i);

                }//end if
                else{
                    formSlashes[charsAdded++] = newStr.charAt(i);

                }//end else
            }//end for
            newStr = new String(formSlashes);
            newStr = newStr.substring(0, charsAdded);

            return newStr;
    }
}

program    :    (include_stmt)*(fun_decl)+;

include_stmt
    :     INCLUDE^ STRING SEMI!;
fun_decl:    FUN TYPE ID LPARENS params? RPARENS block FUN -> ^(FUN TYPE ID
params? block);

block    :    stmt* END     -> ^(BLOCKRT stmt*);

//stmts     :    (stmt stmts)?;
stmt    :    decl SEMI!
    |    expr SEMI!
    |    if_stmt
    |    while_stmt
    |    for_stmt
    |    print_stmt
    |    return_stmt;

if_stmt    :    IF^ LPARENS! expr RPARENS! block (ELSE! block)? IF!;

for_stmt:    FOR^ LPARENS! expr SEMI! expr SEMI! expr RPARENS! block FOR!;
while_stmt
    :    WHILE^ LPARENS! expr RPARENS! block WHILE!;
return_stmt
    :    RETURN^ expr SEMI!;
print_stmt:    PRINT^ expr SEMI!;


params    :    param (COMMA! params)?;
param    :    TYPE ID        -> ^(PARAMRT TYPE ID);
decl    :
    TYPE ID (ASSIGN expr)?    -> ^(DECLRT TYPE ID expr?);

expr_list
    :    expr (COMMA! expr_list)?;
expr    :    log_expr (ASSIGN^ expr)?;
log_expr:    rel_expr (LOG_OP^ rel_expr)*;
rel_expr:    add_expr (REL_OP^ add_expr)*;
add_expr:    mult_expr ((ADD_OP^ | SUB_OP^) mult_expr)*;
mult_expr
    :    unary_expr ((MULT_OP^ | DIV_OP^ | MOD_OP^) unary_expr )*;
unary_expr
    :    ('!'^ | '-'^ | AMPLOF^)? at_expr;
at_expr    :    fun_call (AT^ fun_call (TO! fun_call)?)*;

fun_call:    ID LPARENS expr_list? RPARENS     -> ^(CALLRT ID expr_list?)
        | top_expr            -> top_expr;

top_expr:    LPARENS! expr RPARENS! | NUMBER | STRING | ID;



COMMENT    :    '/*' (options{greedy = false;}: .)* '*/'{skip();};

ADD_OP    :    '+';
SUB_OP    :    '-';
MULT_OP    :     '*';
DIV_OP    :    '/';
MOD_OP    :    '%';
ASSIGN    :    '=';

REL_OP    :    '<' | '>' | '<=' | '>=' | '==' | '!=';
LOG_OP    :    '||' | '&&';



LPARENS    :     '(';
RPARENS    :    ')';
COMMA    :    ',';
SEMI    :    ';';

fragment LETTER
    :    ('a'..'z')|('A'..'Z');
fragment DIGIT
    :    ('0'..'9');
fragment INTEGER
    :    (DIGIT)+;
fragment FRAC
    :    '.'(INTEGER);

/*CONSTANT:    NUMBER;*/

NUMBER     :    INTEGER /*set type to int*/
        ('Hz'/*set type to freq*/
        |'ms'/*set type to time*/)?
    | INTEGER? FRAC /*set type to float*/
        ('a' /*set type to ampl*/
        |'Hz'/*set type to freq*/
        |'ms'/*set type to time*/)?;


TYPE    :    'ampl'|'float'|'freq'|'int'|'time'|'wave';

/*fragment STR_QUOTE
    :    '\\' '"' { setText("\"");};
fragment STR_BACKSLASH
    :    '\\' '\\' { setText("\\");};*/
fragment STR_CONTENT
    :    (('\\''"') | ('\\''\\') | ~('"'|'\\'))*;
STRING    :    '"' t = STR_CONTENT '"'
{setText(stripEscapeChars($STR_CONTENT.text));};

WS    :    (' ' | '\t' | '\n' | '\r')+ {skip();};


AMPLOF    :    'amplof';
AT    :    'at';
ELSE    :     'else';
END    :    'end';
FOR    :    'for';
FUN    :    'fun';
IF    :    'if';
INCLUDE    :    'include';
PRINT    :    'print';
RETURN    :    'return';
TO    :    'to';
WHILE     :    'while';

ID    :     (LETTER|'_')(LETTER|'_'|DIGIT)*;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070807/8eb0f023/attachment.html 

From tbrandonau at gmail.com  Tue Aug  7 21:12:11 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 8 Aug 2007 14:12:11 +1000
Subject: [antlr-interest] ANTLR bug??? ReportError not called on
	"NonViableAltException"
In-Reply-To: <dea571e70708072034t172eda5cs358094a026fa7bca@mail.gmail.com>
References: <dea571e70708072034t172eda5cs358094a026fa7bca@mail.gmail.com>
Message-ID: <ebc876d70708072112j63e9cb1fk4c37c41e22358e78@mail.gmail.com>

On 8/8/07, Frank Smith <fasmith718 at gmail.com> wrote:
> Hi all.  I recently uncovered a problem with my parser where i'm doing
> something illegal and ReportError is never called.  ANTLRworks' interpreter
> window shows that there is a Nonviable alt, but the breakpoint i put in
> RecognitionError is never reached on code execution.
>
> This is a big problem because I am trying to make my language fail
> immediately on parse errors, but I can't do this if they are never thrown by
> the generated antlr code!
>
> Here is the sample program - you should not be able to put a statement
> outside of a function :
> fun wave main()
>     print "main";
> end fun
> x = 1;
>
> yet this compiles without reporting an error.  However, putting it in
> ANTLRWorks' interpreter shows it to be wrong (which is what i want, darn
> it!)
>
> Here is my entire .g file.  If someone could just past it into their
> antrlworks and explain this discrepancy i would be highly highly
> appreciative.  This is for a project and I need to know if I should pass
> this off as a bug in ANTRL generated code... :-/
>
> Thanks a million times in advance!!!
>      Frank
>
> program    :    (include_stmt)*(fun_decl)+;
I think the problem is that this needs to be:
program    :    (include_stmt)*(fun_decl)+ EOF;
otherwise ANTLR will just decide the first error means the end of what
it needs to parse.
Though the difference of behaviour in the interpreter is still an issue.

Tom.

From waldemarsauer at hotmail.com  Wed Aug  8 00:42:54 2007
From: waldemarsauer at hotmail.com (Waldemar Sauer)
Date: Wed, 8 Aug 2007 03:42:54 -0400
Subject: [antlr-interest] Possible antlr bug
In-Reply-To: <mailman.1120.1186423597.3040.antlr-interest@antlr.org>
Message-ID: <BAY136-DAV171BB751FFEE972F01AC89BAE70@phx.gbl>

The following snippet creates a compile time C# error.  I suspect the same
bug will persist for Java output also.  The problem is that because
backtracking is on, r0 appears to be wrapped in a syntactic predicate
function.  However, the parameter x never makes it that far.

--- grammar snippet ---
grammar zcpp;

options
{
    k=2;
    language=CSharp;
    backtrack=true;
}

// PARSER RULES
r0 [int x]: '*'*;
r1 [int x]: IDENT (r0[x])?;

// LEXER RULES
IDENT :	('a'..'z')+;
--- grammar snippet ---


 - Waldemar



From volatil3_ at hotmail.com  Wed Aug  8 01:55:33 2007
From: volatil3_ at hotmail.com (Adnan Siddiqi)
Date: Wed, 08 Aug 2007 08:55:33 +0000
Subject: [antlr-interest] Newbie questions
Message-ID: <BAY140-F35BC6F25861FFC1BCEC7DEC6E70@phx.gbl>

Hi all

I just joined the list as well as started exploring ANTLR. I had studied 
compiler construction back in 98 during university days so trying my best ti 
get familiar with relevant things. I also admit i was not so good at 
Compiler Construction course in uni but since now I have been assigned some 
work so I have to take it seriously

I am going thru the tutorial by "JavaDude". So far so good!. What I have 
learnt so far that ANTLR just helps you to create grammer and generate 
equivalent Parse code in Java language. The thnig which is very confusion 
for me that how to extract data after successful parsing?

Let me explain you further that I have to create a SQL QUERY like language 
for a web portal where different 'custom objects' would be add/retrieved by 
using SQL like language. for example:

"Select objModule from Module Respositoary where @type='entertainment' "

now lets suppose i successfully generate grammer and parse as well by using 
ANTLR generated code. Now How do I pick required 'objModule' of type 
='entertainment'? can ANTLR allows to make custom functions  which should be 
parsed after successful parsing? if not then should I pick values from 
SYMBOL TABLE?

Please clarify this to me. I would be greatful to you.

/A

_________________________________________________________________
More photos, more messages, more storage?get 2GB with Windows Live Hotmail. 
http://imagine-windowslive.com/hotmail/?locale=en-us&ocid=TXT_TAGHM_migration_HM_mini_2G_0507


From vbar at comp.cz  Wed Aug  8 02:42:22 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Wed, 08 Aug 2007 11:42:22 +0200
Subject: [antlr-interest] Newbie questions
In-Reply-To: <BAY140-F35BC6F25861FFC1BCEC7DEC6E70@phx.gbl>
References: <BAY140-F35BC6F25861FFC1BCEC7DEC6E70@phx.gbl>
Message-ID: <46B98FFE.90207@comp.cz>

Adnan Siddiqi wrote:
 > confusion for me that how to extract data after successful parsing?
Well, there's a couple of ways...

 > Let me explain you further that I have to create a SQL QUERY like
 > language for a web portal where different 'custom objects' would be
 > add/retrieved by using SQL like language. for example:
 >
 > "Select objModule from Module Respositoary where @type='entertainment' "
 >
 > now lets suppose i successfully generate grammer and parse as well by
 > using ANTLR generated code. Now How do I pick required 'objModule' of
 > type ='entertainment'? can ANTLR allows to make custom functions
 > which should be parsed after successful parsing? if not then should I
Yes, that's one way - they're called actions, can be specified as part 
of your grammar and can contain any Java code you need at that point.

 > pick values from SYMBOL TABLE?
There's another way, where you just generate AST (abstract syntax tree)
and work on it outside the grammar (i.e. by writing _another_ so called
tree parser), but I really wouldn't recommend that - that way didn't 
exist in 1998 (other than as a gleam in some computer scientist's eye 
:-) ), so you haven't seen it before, and I fail to see the advantages 
of complicating my parsing that way - but of course, perhaps it's just 
because I don't understand...

	Bye
		Vasek

P.S.: If you're doing something like SQL, there's an SQL grammar (for 
the previous version of ANTLR) at 
http://www.antlr.org/grammar/1062280680642/MS_SQL_SELECT.html , which I 
found quite useful.


From email at kortmann.de  Wed Aug  8 06:56:45 2007
From: email at kortmann.de (Martin Kortmann)
Date: Wed, 08 Aug 2007 15:56:45 +0200
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
Message-ID: <46B9CB9D.4000606@kortmann.de>

Hi,

I am using ANTLRWorks for a few weeks now, and i am
very impressed about the possibilities of ANTLR and
ANTLRWorks. You are doing a fine job on this.

But i'am also wondering about the support of
programming languages other than java.
Currently there is a good working C Target and a C-Runtime
library. Jim has done a very good job on both of this.
And i like the idea of ANTLRWorks, it helps a lot
in my daily work. ANTLR itself is competitionless anyway.
But there is currently no kind of integration into the
ANTLRWorks debugger. The C runtime library is very fast.
But it is not very good documented (behind the source)
and it seems to generate a big parser (in contrast to
my handwritten parser - ok, not a fair comparison - or
an bison parser). The C++ target seems to be far away
from released.

Is there some kind of community behind all the things
or is this a three man show? (Terence, Jim and Jean). I hope
that you dont misunderstood me, the tools are very fine
and usefull, and every question will be answered in a very
short time. But there are some things left (outside java)
and you cannot work on all things at the same time. Is there
nothing that can be done by other persons?

Martin

From kroepke at classdump.org  Wed Aug  8 07:21:24 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 8 Aug 2007 16:21:24 +0200
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
In-Reply-To: <46B9CB9D.4000606@kortmann.de>
References: <46B9CB9D.4000606@kortmann.de>
Message-ID: <F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>


On Aug 8, 2007, at 3:56 PM, Martin Kortmann wrote:

> Is there some kind of community behind all the things
> or is this a three man show? (Terence, Jim and Jean). I hope
> that you dont misunderstood me, the tools are very fine
> and usefull, and every question will be answered in a very
> short time. But there are some things left (outside java)
> and you cannot work on all things at the same time. Is there
> nothing that can be done by other persons?

Well, there are other targets, you know...

And while Ter does the main work on ANTLR it actually happens that we
guys talk about things. So far the main reason the C++ target (for  
example) isn't
there yet, is that Jim just recently took over. I'm sure he'd  
appreciate help with
that (that probably is true for any other target as well).

I'm not sure that the C target cannot be used with ANTLRWorks  
(actually it would suprise
me a lot if it doesn't work). It's true, you cannot use the  
interpreter mode and ANTLRWorks
can't compile your recognizers, but that's true with any target other  
than Java. It's
just to much work and there are too many details to make it feasible.

What you can do, though, is to use the -debug switch of ANTLR and  
then "Debug remote..."
in ANTLRWorks. I use that with my ObjC stuff all the time. I'm pretty  
sure that's implemented
in the C target as well.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From dave.raskin at rimage.com  Wed Aug  8 07:41:38 2007
From: dave.raskin at rimage.com (Dave Raskin)
Date: Wed, 8 Aug 2007 09:41:38 -0500
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
Message-ID: <1D603DEEEE680240A57C26F32DD1665F025BC9BC@dopey.Rimage.com>

There is a C# target as well. I am using it with antlr 2.7.5
 
Dave Raskin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070808/baed77e8/attachment.html 

From email at kortmann.de  Wed Aug  8 07:44:44 2007
From: email at kortmann.de (Martin Kortmann)
Date: Wed, 08 Aug 2007 16:44:44 +0200
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
In-Reply-To: <F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>
References: <46B9CB9D.4000606@kortmann.de>
	<F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>
Message-ID: <46B9D6DC.1060804@kortmann.de>

Hello Kai,

Kay Roepke schrieb:
> 
> On Aug 8, 2007, at 3:56 PM, Martin Kortmann wrote:
> 
> 
> Well, there are other targets, you know...


Yes i know, C#, ObjectiveC, Phyton an Ruby seems to work.
I'am working in my projects with C++, C, perl, and m-script ;-)


> I'm not sure that the C target cannot be used with ANTLRWorks (actually
> it would suprise
> me a lot if it doesn't work). It's true, you cannot use the interpreter
> mode and ANTLRWorks
> can't compile your recognizers, but that's true with any target other
> than Java. It's
> just to much work and there are too many details to make it feasible.
> 
> What you can do, though, is to use the -debug switch of ANTLR and then
> "Debug remote..."
> in ANTLRWorks. I use that with my ObjC stuff all the time. I'm pretty
> sure that's implemented
> in the C target as well.

Adding the -debug option in ANTLRWors brings the message
"Cannot create Grammar: template outputFile has no region
called imports", ANTLR native also, and there are Java
fragments inside the C-Source.

Martin

From jaluber at gmx.de  Wed Aug  8 07:48:24 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 08 Aug 2007 16:48:24 +0200
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
In-Reply-To: <46B9D6DC.1060804@kortmann.de>
References: <46B9CB9D.4000606@kortmann.de>	<F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>
	<46B9D6DC.1060804@kortmann.de>
Message-ID: <46B9D7B8.1060705@gmx.de>

Martin Kortmann wrote:
> 
> Adding the -debug option in ANTLRWors brings the message
> "Cannot create Grammar: template outputFile has no region
> called imports", ANTLR native also, and there are Java
> fragments inside the C-Source.
> 
> Martin
> 

I believe you have to use the command line version of ANTLR, not via
ANTLRworks.

Best regards,
Johannes Luber

From warren.madden at lmco.com  Wed Aug  8 07:59:11 2007
From: warren.madden at lmco.com (Madden, Warren)
Date: Wed, 08 Aug 2007 10:59:11 -0400
Subject: [antlr-interest] problem with semantic predicates,
	local declarations, and hoisting
Message-ID: <96B09C31BB3969458305F4269B2D410F08881C86@emss06m08.mar.lmco.com>

Greetings!

 

I'm trying to write a grammar that recognizes a particular data format
that includes some fixed length and some variable length fields.  I'm
running into problems with my semantic predicates being hoisted up, and
moving out of the context of my local variables.  Hoping someone can
point me in the right direction to solve my problem.

 

Below is a sample grammar.  It should recognize a fixed length field of
either 12 or 18 characters, then a space, and then a variable length
number string:

 

 

grammar predtest;

            

parent

            :           mandatory_child SPACE NUMBER+ (CR|LF)?EOF;

 

mandatory_child  @init { int n = 0; }

            :           ( { n <= 17 }?=>

                        ~(CR|LF)

                        { n++; })+

                        {System.out.println("text is " + $text + ", n is
" + n );}

                        {n == 12 || n == 18}?;

 

alphanum

            :           LETTER | NUMBER;

 

LETTER            :           ('a'..'z' | 'A'..'Z');

NUMBER          :           '0'..'9';

SLASH :           '/';

SPACE :           ' ';

TAB      :           '\t';

CR        :           '\r';

LF        :           '\n';

ASCIICHAR 

            :           '\u0003'..'\u0377';

 

 

The technique in mandatory_child is taken from page 286 of the ANTLR
book, with a slight modification to force the string to be either 12 or
18 chars.

 

When I try to compile, I get the following errors:

 

 

$ ant

Buildfile: build.xml

 

compile:

    [javac] Compiling 2 source files

    [javac] d:\java\predtest\predtestParser.java:285: cannot find symbol

    [javac] symbol  : variable n

    [javac] location: class predtestParser.DFA3

    [javac]                         else if (
(LA3_1==SPACE||(LA3_1>=LETTER && L

A3_1<=ASCIICHAR)) && ( n <= 17 )) {s = 2;}

    [javac]

                       ^

    [javac] d:\java\predtest\predtestParser.java:300: cannot find symbol

    [javac] symbol  : variable n

    [javac] location: class predtestParser.DFA3

    [javac]                         else if (
(LA3_0==NUMBER||(LA3_0>=LETTER &&

LA3_0<=ASCIICHAR)) && ( n <= 17 )) {s = 2;}

    [javac]

                        ^

    [javac] d:\java\predtest\predtestParser.java:313: cannot find symbol

    [javac] symbol  : variable n

    [javac] location: class predtestParser.DFA3

    [javac]                         if ( (LA3_3==SPACE||(LA3_3>=LETTER
&& LA3_3<

=ASCIICHAR)) && ( n <= 17 )) {s = 2;}

    [javac]

                  ^

    [javac] 3 errors

 

BUILD FAILED

d:\java\predtest\build.xml:8: Compile failed; see the compiler error
output for

details.

 

Total time: 1 second

 

 

It appears that ANTLR is taking my predicate and moving it into a DFA,
but not carrying the declaration of n along with it.  Any ideas how I
can fix this?  Should I make n a class variable using @members, rather
than using @init as shown in the example?

 

Thanks!

 

Warren Madden

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070808/e186d7e0/attachment-0001.html 

From email at kortmann.de  Wed Aug  8 07:59:23 2007
From: email at kortmann.de (Martin Kortmann)
Date: Wed, 08 Aug 2007 16:59:23 +0200
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
In-Reply-To: <46B9D7B8.1060705@gmx.de>
References: <46B9CB9D.4000606@kortmann.de>	<F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>	<46B9D6DC.1060804@kortmann.de>
	<46B9D7B8.1060705@gmx.de>
Message-ID: <46B9DA4B.3030907@kortmann.de>

Johannes Luber schrieb:
> Martin Kortmann wrote:
>> Adding the -debug option in ANTLRWors brings the message
>> "Cannot create Grammar: template outputFile has no region
>> called imports", ANTLR native also, and there are Java
>> fragments inside the C-Source.
>>
>> Martin
>>
> 
> I believe you have to use the command line version of ANTLR, not via
> ANTLRworks.

D:\Martins\Entwicklung\test_antlr>java -cp
antlr-3.0.jar;antlr-runtime-3.0.jar;stringtemplate-3.0.j
ar;antlr-2.7.7.jar org.antlr.Tool -debug -o outdir test.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(10):  internal error: group CDbg line 33: template outputFile has
no region called imports

error(10):  internal error: group CDbg line 78: template genericParser
has no region called superClassName

error(10):  internal error: group CDbg line 160: template dfaState has
no region called noViableAltException

error(10):  internal error: group CDbg line 162: template dfaStateSwitch
has no region called noViableAltException

D:\Martins\Entwicklung\test_antlr>



Thank you, the same problem

Martin

From cameron.palmer at gmail.com  Wed Aug  8 08:09:57 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Wed, 8 Aug 2007 17:09:57 +0200
Subject: [antlr-interest] AST to Rewrite and StringTemplate Example needs
	enlightenment
Message-ID: <bc4938830708080809uf87f574ia44811a73943c4a2@mail.gmail.com>

I have contrived an example of what I guess illustrates a
misconception about how ANTLR works and would like to ask others how
they would cope with such a grammar?

Here is my sample input file:

begin main
statement: foo bar
statement: coffee mug
end
begin sub
statement: jelly bean
statement: jumping jack
end

The lexing and parsing are straight forward. The grammar outputs an
AST like this:
(PROGRAM (BLOCK main (statement bar foo) (statement mug coffee))
(BLOCK sub (statement bean jelly) (statement jack jumping)))

The parameters to statement were reversed for the fun of it.

Now let's say you walk the tree and want to output text in the format of:
main
stmt bar foo
stmt mug coffee
sub
stmt bean jelly
stmt jack jumping

Generating the output for the stmt lines is quite easy with a
StringTemplate. What is tricky is how to eliminate the begin and end's
from the input stream and output just the name of the code block.

if your grammar looks like:
grammar SampleAST;
options { output=AST; }
tokens { PROGRAM; BLOCK; }
program : block+ -> ^(PROGRAM block+);
block   : lc='begin' blockTag NL stat+ 'end' NL -> ^(BLOCK[$lc,
"BLOCK"] blockTag stat+);
blockTag : ID;
stat    : 'statement' COLON a=ID b=ID NL -> ^('statement' $b $a);
ID      : 'a'..'z' ('a'..'z')*;
COLON   : ':';
NL      : '\n';
WS      : (' ' | '\t') {$channel = HIDDEN;};

and your tree walker looks like:
tree grammar SampleASTWalker;
options { tokenVocab=SampleAST; ASTLabelType=CommonTree; rewrite=true;
output=template; }
program : ^(PROGRAM block+);
block   : ^(BLOCK blockTag stat+);
blockTag : ID -> block(a={$ID.text});
stat    : ^('statement' a=ID b=ID) -> stmt(a={$a.text},b={$b.text});

My original thinking was that the AST output from the first meant that
dropped tokens were gone, but that just isn't the case. It is clear
that the output AST still references the original token stream (duh)
and that when you make your final call to toString, you will get a mix
of the original input and the rewriting done in the walker.

See that the stmt lines and the blockTags were rewritten. However the
begin and end tag have reappeared after disappearing in the AST
construction.
begin rw: main

stmt bar foo
stmt mug coffee
end
begin rw: sub

stmt bean jelly
stmt jack jumping
end

So now how do you get rid of the tokens from the original stream that
were more or less syntactic sugar? I have found two ways to do this,
pass the unwanted tokens in the AST and rewrite them in the walker, or
keep track of the unwanted tokens index position and delete them for
TokenStream before calling toString(). The latter is evil, and the
former is just ugly. What is the pretty way to do this?

Thank you,

Cameron Palmer
University of North Texas

PS This is the test harness:
import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;
import java.io.*;

public class Main {
        public static void main(String args[]) throws Exception {
                FileReader SampleFileR = new FileReader("SampleAST.stg");
                StringTemplateGroup templates = new
StringTemplateGroup(SampleFileR);
                SampleFileR.close();

                // Parse input and build AST
                ANTLRInputStream input = new ANTLRInputStream(System.in);
                SampleASTLexer lexer = new SampleASTLexer(input);
                TokenRewriteStream tokens = new TokenRewriteStream(lexer);
                SampleASTParser parser = new SampleASTParser(tokens);
                SampleASTParser.program_return r = parser.program();
                System.out.println(tokens.toString());

                // Walk AST
                CommonTree t = (CommonTree)r.getTree();

                System.out.println(t.toStringTree());

                CommonTreeNodeStream nodes = new CommonTreeNodeStream(t);
                nodes.setTokenStream(tokens);
                SampleASTWalker walker = new SampleASTWalker(nodes);
                walker.setTemplateLib(templates);
                SampleASTWalker.program_return r2 = walker.program();
                System.out.println(tokens.toString());
        }
}

From tbrandonau at gmail.com  Wed Aug  8 08:22:51 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 9 Aug 2007 01:22:51 +1000
Subject: [antlr-interest] problem with semantic predicates,
	local declarations, and hoisting
In-Reply-To: <96B09C31BB3969458305F4269B2D410F08881C86@emss06m08.mar.lmco.com>
References: <96B09C31BB3969458305F4269B2D410F08881C86@emss06m08.mar.lmco.com>
Message-ID: <ebc876d70708080822g61108da1l1fba09680290212d@mail.gmail.com>

On 8/9/07, Madden, Warren <warren.madden at lmco.com> wrote:
>
>
>
>
> Greetings!
>
>
>
> I'm trying to write a grammar that recognizes a particular data format that
> includes some fixed length and some variable length fields.  I'm running
> into problems with my semantic predicates being hoisted up, and moving out
> of the context of my local variables.  Hoping someone can point me in the
> right direction to solve my problem.
>
This is a known bug\issue (not sure which, i.e. whether it will be
fixed). Use a field as you suggest, or (probably cleaner) a dynamic
scope instead. Something like:
> mandatory_child
scope {
    int n;
}
@init { mandatory_child::n = 0; }
>
>             :           ( { mandatory_child::n <= 17 }?=>
>
>                         ~(CR|LF)
>
>                         { mandatory_child::n++; })+
>
>                         {System.out.println("text is " + $text + ", n is " +
> mandatory_child::n );}
>
>                         {mandatory_child::n == 12 || mandatory_child::n == 18}?;
>
> It appears that ANTLR is taking my predicate and moving it into a DFA, but
> not carrying the declaration of n along with it.  Any ideas how I can fix
> this?  Should I make n a class variable using @members, rather than using
> @init as shown in the example?
>
>
>
> Thanks!
>
>
>
> Warren Madden

From jaluber at gmx.de  Wed Aug  8 08:59:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 08 Aug 2007 17:59:57 +0200
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
In-Reply-To: <46B9DA4B.3030907@kortmann.de>
References: <46B9CB9D.4000606@kortmann.de>	<F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>	<46B9D6DC.1060804@kortmann.de>
	<46B9D7B8.1060705@gmx.de> <46B9DA4B.3030907@kortmann.de>
Message-ID: <46B9E87D.2020605@gmx.de>

Martin Kortmann wrote:
> D:\Martins\Entwicklung\test_antlr>java -cp
> antlr-3.0.jar;antlr-runtime-3.0.jar;stringtemplate-3.0.j
> ar;antlr-2.7.7.jar org.antlr.Tool -debug -o outdir test.g
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> error(10):  internal error: group CDbg line 33: template outputFile has
> no region called imports
> 
> error(10):  internal error: group CDbg line 78: template genericParser
> has no region called superClassName
> 
> error(10):  internal error: group CDbg line 160: template dfaState has
> no region called noViableAltException
> 
> error(10):  internal error: group CDbg line 162: template dfaStateSwitch
> has no region called noViableAltException
> 
> D:\Martins\Entwicklung\test_antlr>
> 
> 
> 
> Thank you, the same problem
> 
> Martin

I just remembered that the newest daily build broke all languages
(except Java) at least for debugging. I'm not sure when that is fixed
but for now you can use an older version and hope that you don't stumble
on an already fixed bug.

Best regards,
Johannes Luber

From rschulz at sonic.net  Wed Aug  8 09:41:16 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 8 Aug 2007 09:41:16 -0700
Subject: [antlr-interest] ANTLR.org RSS Feed
Message-ID: <200708080941.16177.rschulz@sonic.net>

Hi,

Has the ANTLR RSS news feed at <http://www.antlr.org/news/rss> been 
discontinued? It's showing an error in my news reader and there appears 
to be no mention of it on the antlr.org Web site.


Randall Schulz

From tbrandonau at gmail.com  Wed Aug  8 10:56:33 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 9 Aug 2007 03:56:33 +1000
Subject: [antlr-interest] Lexer superclass not supported
Message-ID: <ebc876d70708081056r49015d0cvab7f79d265a4096f@mail.gmail.com>

This was brought up in relation to combined grammars a few days ago
but the problem also applies to standalone lexers. Currently there is
no support for the superclass option in lexers.
The fix for standalone lexers is simple. Change the first couple of
lines of lexer in Java.stg to:
lexer(grammar, name, tokens, scopes, rules, numRules, labelType="Token",
      filterMode, superClass="Lexer") ::= <<
public class <name> extends <@superClassName><superClass><@end> {

Then add superClass to lexer arguments in ANTLRCore.sti. Other targets
would need to be updated as well to avoid ST interface mismatches.

Supporting it in combined grammars looks more involved. Currently
there does not look to be any way to have options go only to the
lexer. The Grammar.doNotCopyOptionsToLexer set stops parser only
options in combined files going to the lexer but I couldn't see any
way of having options go only to the lexer.

Tom.

From firatkucuk at gmail.com  Wed Aug  8 13:02:50 2007
From: firatkucuk at gmail.com (=?ISO-8859-9?Q?F=FDrat_K=DC=C7=DCK?=)
Date: Wed, 8 Aug 2007 23:02:50 +0300
Subject: [antlr-interest] Javy Programming Language
Message-ID: <7385e6fe0708081302n3102f437ub1fcc4cc253b0783@mail.gmail.com>

Hi,

I am working on a new Java based OPENSOURCE (LGPL) scripting language.

It has an easily __customizable__ grammar. You can change default grammar
file and load your new syntax.

and works with antlr v3 grammar.

simply change javy.g antlr v3 grammar and just type:

javy> :gr mygrammar /home/path/to/Javy.g
GRAMMAR GENERATED
javy> :sg
ACTIVE GRAMMAR : javy

and start to use

this is the default javy grammar:

You may checkout:

svn co https://javy.svn.sourceforge.net/svnroot/javy javy

and compile with:

ant jar


this is the basic shell usage:

javy> println("hello javy");
javy> :ev

you may use :ev, :evaluate, :run for evaluate codes

and these are the other samples:

javy> writeToScreen = println;
javy> writeToScreen("hello world");

javy> println("hello world"[6:][::-1]);
javy> :ev
dlrow

javy> j = java.lang;
javy> println(j.String("012345678901234567890").substring(8, 15)[:-2]);
javy> :ev
89012

javy> St = java.lang.String;
javy> type(println(St("sample")));
javy> :ev

javy> javax.swing.JFrame("hello").setVisible(true);
javy> :ev

javy> println("-=" * 20);
javy> :ev
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

transfering method action:
type -> println

javy> a = println;
javy> a.setName("type");
javy> println(a("ali"));
javy> :ev
class javy.lang.String

I need your support and advices to improve this open-source project.


-- 
??r. G?r. F?rat K???K
ADAMYO Distance Learning
SAKARYA University / TURKEY
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070808/6c36368a/attachment.html 

From lgcraymer at yahoo.com  Wed Aug  8 13:48:05 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 8 Aug 2007 13:48:05 -0700 (PDT)
Subject: [antlr-interest] LL(*) conjectures
Message-ID: <378939.67641.qm@web55907.mail.re3.yahoo.com>

I have reworked the java grammar for processing
without the backtracking options.  At the moment, I
have 12 synpreds but some of those should go away with
a bit more refactoring.  As I had expected from other
postings, the percentage of generated code devoted to
DFAs was larger than for the smaller grammars I had
been working with.  That makes sense:  the larger the
grammar, the harder it is to express in LL(1) form. 
Thinking along those lines led me to

1.)  DFA growth is non-linear in the number of
tokens/rules that comprise grammars.
2.)  Automated backtracking generates synpreds
non-linearly with grammar size.
3.)  This growth can be countered by refactoring
grammars towards an LL(1) form.

Assuming that these conjectures are correct, then the
proper way of keeping generated files to a manageable
size is to generate DFA code into separate files from
the main body of code.  Effort should be invested to
provide better analysis/reporting for identifying
decision points that might benefit from refactoring,
and in the codification of useful refactorings for
incorporation into ANTLRWorks and similar tools.

--Loring


      ____________________________________________________________________________________
Park yourself in front of a world of choices in alternative vehicles. Visit the Yahoo! Auto Green Center.
http://autos.yahoo.com/green_center/ 

From antlr at mirality.co.nz  Wed Aug  8 13:49:15 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 09 Aug 2007 08:49:15 +1200
Subject: [antlr-interest] Spaces in names
Message-ID: <20070808204930.3CD6A11EAD4@www.antlr.org>

At 01:56 9/08/2007, Dave Raskin wrote:
>Gavin, thanks for the reply!

First of all, make sure you hit the "Reply to All" button so that 
your reply goes to the list as well.  You're more likely to get a 
response that way.

>BTW, I am using C# generated code - could this be an issue?

No, this is a grammar problem, not a target problem.

>name_blank_name
>: NAME ( BLANK NAME )*
>;

That won't work, because BLANK tokens will still be getting 
skipped (or if they're not, then it'll mess up other bits of your 
grammar).  As I said, if you want to skip whitespace most of the 
time but treat it as significant sometimes, then you have to do it 
in the lexer.


>I also tried changing the lexer rule, but got a compile error:

What was the error?

>NAME_BLANK_NAME
>: NAME ( BLANK NAME )*
>;

It's not quite as easy as that; since NAME can contain an 
arbitrary number of characters, there's ambiguity between NAME and 
NAME_BLANK_NAME.  You'd have to write a hybrid type-changing rule 
if you wanted to do it this way.

But as I said in my original message, if you're trying to 
represent a string value then this is completely the wrong 
approach, since it will collapse whitespace.  ie. it would have no 
way of representing "hello  world" (two spaces) -- it would always 
translate it into "hello world" (one space).  Plus, the above 
doesn't take leading or trailing space into account.

You need to make the lexer match an entire string (including the 
quotes) as a whole.  That way you can preserve the exact contents 
of the string.

>Is there an example grammer you can point to, I haven't found one 
>yet...

Have a look at examples/csharp/tinyc/lexer.g, specifically at the 
CHAR_LITERAL and STRING_LITERAL rules.  You basically want a 
hybrid of the two, though you can probably simplify the escape 
handling (only supporting escaping backslashes and single quotes; 
though that depends on your particular dialect).


From matthew.j.diehl at intel.com  Wed Aug  8 14:16:17 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 8 Aug 2007 14:16:17 -0700
Subject: [antlr-interest] Extending TreeRuleReturnScope
Message-ID: <A10CD303B51F814DB568A8AAF02174C2026D7ABB@orsmsx417.amr.corp.intel.com>

Hi,

So I'm using Java as a target language (and am very green when using
Java), and I have no idea how to (or even what to search for) have my
tree walker return one more value for each node.  For example, currently
my abstract_literal parser rule returns:

public static class abstract_literal_return extends TreeRuleReturnScope
{
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

I would like each of my rules to have something like:

public static class abstract_literal_return extends TreeRuleReturnScope
{
        public VectorInfo vi; //or something like that...
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

How do I make this print automatically for each parser rule?

Thanks, Matt

From dave.raskin at rimage.com  Wed Aug  8 14:54:18 2007
From: dave.raskin at rimage.com (Dave Raskin)
Date: Wed, 8 Aug 2007 16:54:18 -0500
Subject: [antlr-interest] Spaces in names
In-Reply-To: <DOPEYDskqC5EtrUVYKk00004efb@smtp.Rimage.com>
References: <DOPEYDskqC5EtrUVYKk00004efb@smtp.Rimage.com>
Message-ID: <1D603DEEEE680240A57C26F32DD1665F025BC9C2@dopey.Rimage.com>

Gavin, thanks for suggestions! Clearly I was sleeping during my compiler
class at school ;-)

I will take a look at the examples,

Dave Raskin 

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Wednesday, August 08, 2007 3:49 PM
To: Dave Raskin
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] Spaces in names

At 01:56 9/08/2007, Dave Raskin wrote:
>Gavin, thanks for the reply!

First of all, make sure you hit the "Reply to All" button so that your
reply goes to the list as well.  You're more likely to get a response
that way.

>BTW, I am using C# generated code - could this be an issue?

No, this is a grammar problem, not a target problem.

>name_blank_name
>: NAME ( BLANK NAME )*
>;

That won't work, because BLANK tokens will still be getting skipped (or
if they're not, then it'll mess up other bits of your grammar).  As I
said, if you want to skip whitespace most of the time but treat it as
significant sometimes, then you have to do it in the lexer.


>I also tried changing the lexer rule, but got a compile error:

What was the error?

>NAME_BLANK_NAME
>: NAME ( BLANK NAME )*
>;

It's not quite as easy as that; since NAME can contain an arbitrary
number of characters, there's ambiguity between NAME and
NAME_BLANK_NAME.  You'd have to write a hybrid type-changing rule if you
wanted to do it this way.

But as I said in my original message, if you're trying to represent a
string value then this is completely the wrong approach, since it will
collapse whitespace.  ie. it would have no way of representing "hello
world" (two spaces) -- it would always translate it into "hello world"
(one space).  Plus, the above doesn't take leading or trailing space
into account.

You need to make the lexer match an entire string (including the
quotes) as a whole.  That way you can preserve the exact contents of the
string.

>Is there an example grammer you can point to, I haven't found one 
>yet...

Have a look at examples/csharp/tinyc/lexer.g, specifically at the
CHAR_LITERAL and STRING_LITERAL rules.  You basically want a hybrid of
the two, though you can probably simplify the escape handling (only
supporting escaping backslashes and single quotes; though that depends
on your particular dialect).



From parrt at cs.usfca.edu  Wed Aug  8 15:12:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 8 Aug 2007 15:12:00 -0700
Subject: [antlr-interest] ANTLR.org RSS Feed
In-Reply-To: <200708080941.16177.rschulz@sonic.net>
References: <200708080941.16177.rschulz@sonic.net>
Message-ID: <B62992CE-75D4-48DE-B213-8DBF9A352D55@cs.usfca.edu>

  I am going to start putting stuff into the wiki news; not sure why  
that news RSS is broken.
Ter
On Aug 8, 2007, at 9:41 AM, Randall R Schulz wrote:

> Hi,
>
> Has the ANTLR RSS news feed at <http://www.antlr.org/news/rss> been
> discontinued? It's showing an error in my news reader and there  
> appears
> to be no mention of it on the antlr.org Web site.
>
>
> Randall Schulz


From matthew.j.diehl at intel.com  Wed Aug  8 15:42:04 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 8 Aug 2007 15:42:04 -0700
Subject: [antlr-interest] Extending TreeRuleReturnScope
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2026D7ABB@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C2026D7ABB@orsmsx417.amr.corp.intel.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C202712226@orsmsx417.amr.corp.intel.com>

> I would like each of my rules to have something like:
> 
> public static class abstract_literal_return extends 
> TreeRuleReturnScope
> {
>         public VectorInfo vi; //or something like that...
>         public StringTemplate st;
>         public Object getTemplate() { return st; }
>         public String toString() { return 
> st==null?null:st.toString(); }
>     };

Nevermind, I decided to just make a perl script to add it, lol.  

Matt

From aliaazimi at yahoo.com  Wed Aug  8 18:16:43 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 8 Aug 2007 18:16:43 -0700 (PDT)
Subject: [antlr-interest] (Newbie) tree walker emits
	"GrammarSanity.traceStatesLookingForLeftRecursion "
Message-ID: <739680.82167.qm@web58112.mail.re3.yahoo.com>

Hi,
   
  Thank you in advance for any advice.
   
  When I run my tree walker I receive some error messages which can be seen at the bottom of this page. The grammar is too long and can not be posted. I have tried to make sure that the grammar does not have any left recursion problem. The error messages do not give me adequate information as to where these errors are likely to be originated from. What would you suggest me to do?
   
  I appreciate any help a lot.
   
  Best regards,
   
  Al
   
  Errors:
   
  Check Grammar failed:
   
  (10): internal error: C:\Documents and Settings\ali\Desktop\antlr\FpCif12Walker.g: java.lang.NullPointerException
   
  Org.antlr.tool.GrammarSanity.traceStatesLookingForLeftRecursion (Unknown Source)
  Org.antlr.tool.GrammarSanity.checkAllRulesForLeftRecursion (Unknown Source)
   
  Org.antlr.tool.Grammar. checkAllRulesForLeftRecursion (Unknown Source)
   
  Org.antlr.codegen.CodeGenerator.genRecognizer (Unknown Source)
   
  Org.antlr.Tool.processGrammar (Unknown Source)
   
  Org.antlr.Tool. process (Unknown Source)
   
  Org.antlr.works.generate.CodeGenerate.generate (CodeGenerate.java:125)
   
  Org.antlr.works.generate.CodeGenerate.run (CodeGenerate.java:251)
   
  Java.lang.Thread.run (Unknown Source)
   

       
---------------------------------
Be a better Globetrotter. Get better travel answers from someone who knows.
Yahoo! Answers - Check it out.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070808/a7b18b2b/attachment-0001.html 

From kroepke at classdump.org  Wed Aug  8 22:00:53 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 9 Aug 2007 07:00:53 +0200
Subject: [antlr-interest] Extending TreeRuleReturnScope
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C202712226@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C2026D7ABB@orsmsx417.amr.corp.intel.com>
	<A10CD303B51F814DB568A8AAF02174C202712226@orsmsx417.amr.corp.intel.com>
Message-ID: <386FA4A1-8ED0-4984-A36A-C0343C5B4E23@classdump.org>


On Aug 9, 2007, at 12:42 AM, Diehl, Matthew J wrote:

> Nevermind, I decided to just make a perl script to add it, lol.

Normally, you'd have to implement your own Tree class and TreeAdaptor to
go along with it. That's the supported way.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From vbar at comp.cz  Wed Aug  8 22:16:08 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 9 Aug 2007 07:16:08 +0200
Subject: [antlr-interest] throws does not work
In-Reply-To: <7385e6fe0708081251k4c41a9a3k36c76ec7fc5f3063@mail.gmail.com>
References: <7385e6fe0708060452x414ac83fid1124765e5188f57@mail.gmail.com>
	<200708082116.38056.vbar@comp.cz>
	<7385e6fe0708081251k4c41a9a3k36c76ec7fc5f3063@mail.gmail.com>
Message-ID: <200708090716.08653.vbar@comp.cz>

On Wednesday 08 August 2007 21:51, you wrote:
> send it to antlr-dev list or to directly Kay.
There's little point - the patch is trivial, may not be suitable for general 
use and ANTLR devs already know about the problem.

	Bye
	        Vasek

> 2007/8/8, Vaclav Barta <vbar at comp.cz>:
> > The attached patch (simply replacing "throws RecognitionException" in the
> > Java
> > template by "throws Exception") works for me, but YMMV.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: throws.diff
Type: text/x-diff
Size: 1744 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/656a9bcd/attachment.bin 

From kroepke at classdump.org  Wed Aug  8 22:19:02 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 9 Aug 2007 07:19:02 +0200
Subject: [antlr-interest] Extending TreeRuleReturnScope
In-Reply-To: <386FA4A1-8ED0-4984-A36A-C0343C5B4E23@classdump.org>
References: <A10CD303B51F814DB568A8AAF02174C2026D7ABB@orsmsx417.amr.corp.intel.com>
	<A10CD303B51F814DB568A8AAF02174C202712226@orsmsx417.amr.corp.intel.com>
	<386FA4A1-8ED0-4984-A36A-C0343C5B4E23@classdump.org>
Message-ID: <758398E4-CAB0-4BC7-9150-6E25719C9CFB@classdump.org>


On Aug 9, 2007, at 7:00 AM, Kay Roepke wrote:

>
> On Aug 9, 2007, at 12:42 AM, Diehl, Matthew J wrote:
>
>> Nevermind, I decided to just make a perl script to add it, lol.
>
> Normally, you'd have to implement your own Tree class and  
> TreeAdaptor to
> go along with it. That's the supported way.

Doh!

That, of course, was complete and utter bull. Sorry for that.
I didn't realize that you wanted to add to return scopes, not trees.

The normal way for that should be something like (similar to how  
adding members
to recognizers work):

grammar RuleReturnMembers;

options {
	output=AST;
}

@parser::ruleReturnMembers {
	public String getName() {
		return name;
	}
}

rule returns [String name]
	:	'A'
	;


but it turns out that it isn't implemented. Shouldn't be hard to do,  
but isn't there yet.
Seems like your Perl solution is the only that works right now.

I'll add a bug for this.

Thanks for reporting,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Aug  8 22:21:17 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 9 Aug 2007 07:21:17 +0200
Subject: [antlr-interest] throws does not work
In-Reply-To: <200708090716.08653.vbar@comp.cz>
References: <7385e6fe0708060452x414ac83fid1124765e5188f57@mail.gmail.com>
	<200708082116.38056.vbar@comp.cz>
	<7385e6fe0708081251k4c41a9a3k36c76ec7fc5f3063@mail.gmail.com>
	<200708090716.08653.vbar@comp.cz>
Message-ID: <D3E11A7B-9030-406A-8C6B-E0268410A8BC@classdump.org>


On Aug 9, 2007, at 7:16 AM, Vaclav Barta wrote:

> On Wednesday 08 August 2007 21:51, you wrote:
>> send it to antlr-dev list or to directly Kay.
> There's little point - the patch is trivial, may not be suitable  
> for general
> use and ANTLR devs already know about the problem.
>
>> 2007/8/8, Vaclav Barta <vbar at comp.cz>:
>>> The attached patch (simply replacing "throws  
>>> RecognitionException" in the
>>> Java
>>> template by "throws Exception") works for me, but YMMV.

Yes, Ter decided to do this when switching to the ANTLR v3 grammar  
internally. Not much
point to keep adding to the current v2 grammars (which is a bit  
tedious ;))

So the easiest option is to change it to Exception, sorry.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Aug  8 22:28:28 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 9 Aug 2007 07:28:28 +0200
Subject: [antlr-interest] Extending TreeRuleReturnScope
In-Reply-To: <758398E4-CAB0-4BC7-9150-6E25719C9CFB@classdump.org>
References: <A10CD303B51F814DB568A8AAF02174C2026D7ABB@orsmsx417.amr.corp.intel.com>
	<A10CD303B51F814DB568A8AAF02174C202712226@orsmsx417.amr.corp.intel.com>
	<386FA4A1-8ED0-4984-A36A-C0343C5B4E23@classdump.org>
	<758398E4-CAB0-4BC7-9150-6E25719C9CFB@classdump.org>
Message-ID: <4CF4FDBE-9AB9-4918-A1A6-C26A0F21375E@classdump.org>


On Aug 9, 2007, at 7:19 AM, Kay Roepke wrote:

> I'll add a bug for this.

If you desperately need it:

==== //depot/code/antlr/main/src/org/antlr/codegen/templates/Java/ 
Java.stg#110 - /Users/kroepke/Projects/antlr3/code/antlr/main/src/org/ 
antlr/codegen/templates/Java/Java.stg ====
@@ -1083,6 +1083,7 @@
<if(ruleDescriptor.hasMultipleReturnValues)>
public static class <returnType()> extends <if(TREE_PARSER) 
 >Tree<else>Parser<endif>RuleReturnScope {
      <scope.attributes:{public <it.decl>;}; separator="\n">
+    <actions.(actionScope).ruleReturnMembers>
      <@ruleReturnMembers()>
};
<endif>


just apply this patch to Java.stg and use the example I sent just  
minutes ago. That works :)
In case the patch is mangled, it's in template returnScope() in  
Java.stg. Simple addition.
I'll check with Ter whether to include this.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From cameron.palmer at gmail.com  Wed Aug  8 22:59:21 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Thu, 9 Aug 2007 07:59:21 +0200
Subject: [antlr-interest] (Newbie) tree walker emits
	"GrammarSanity.traceStatesLookingForLeftRecursion "
In-Reply-To: <739680.82167.qm@web58112.mail.re3.yahoo.com>
References: <739680.82167.qm@web58112.mail.re3.yahoo.com>
Message-ID: <bc4938830708082259t5711d0a9rde785b97e4486f80@mail.gmail.com>

It sounds like your Main program isn't correctly handing off the
output of the Lexer-Parser to the Walker. I would verify that is
correct. I think the error message you are seeing is just a
consequence of the Null Pointer Exception.

Cameron Palmer
University of North Texas

On 8/9/07, ali azimi <aliaazimi at yahoo.com> wrote:
> Hi,
>
> Thank you in advance for any advice.
>
> When I run my tree walker I receive some error messages which can be seen at
> the bottom of this page. The grammar is too long and can not be posted. I
> have tried to make sure that the grammar does not have any left recursion
> problem. The error messages do not give me adequate information as to where
> these errors are likely to be originated from. What would you suggest me to
> do?
>
> I appreciate any help a lot.
>
> Best regards,
>
> Al
>
> Errors:
>
> Check Grammar failed:
>
> (10): internal error: C:\Documents and
> Settings\ali\Desktop\antlr\FpCif12Walker.g:
> java.lang.NullPointerException
>
> Org.antlr.tool.GrammarSanity.traceStatesLookingForLeftRecursion
> (Unknown Source)
> Org.antlr.tool.GrammarSanity.checkAllRulesForLeftRecursion
> (Unknown Source)
>
> Org.antlr.tool.Grammar. checkAllRulesForLeftRecursion (Unknown Source)
>
> Org.antlr.codegen.CodeGenerator.genRecognizer (Unknown
> Source)
>
> Org.antlr.Tool.processGrammar (Unknown Source)
>
> Org.antlr.Tool. process (Unknown Source)
>
> Org.antlr.works.generate.CodeGenerate.generate
> (CodeGenerate.java:125)
>
> Org.antlr.works.generate.CodeGenerate.run
> (CodeGenerate.java:251)
>
> Java.lang.Thread.run (Unknown Source)
>
>
>  ________________________________
> Be a better Globetrotter. Get better travel answers from someone who knows.
> Yahoo! Answers - Check it out.
>
>

From joshscholar at nightstudies.net  Wed Aug  8 23:15:27 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Wed, 8 Aug 2007 23:15:27 -0700
Subject: [antlr-interest] Is there a way to decompose subrule's trees while
	building a tree?
Message-ID: <75939f220708082315j7befefa8q1885cf9759638c64@mail.gmail.com>

It would be helpful to be able to CAR and CDR your way through subrule
AST trees inside of rewrite rules, or for other things like making an
imaginary token that has the line and column information of a token
from a subrule (or replacing a token from a subrule match).

For instance inside of this rule:

arg1    :    (argScope -> argScope)
         ( biop=('.'|'->') argScope -> ^($biop $arg1  argScope)

*** LOOK HERE ****
            | b  ( l=list -> ^(AT[cdr($l)] $arg1 car($l))
                     | app='(' (expr (',' expr)*)? ')' )
->^(APPLY[$app] $arg1 expr+)
            | post=('++'|'--') ->^(POSTOP[$post] $post $arg1)
          )*
         ;

Josh Scholar

From joshscholar at nightstudies.net  Wed Aug  8 23:19:12 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Wed, 8 Aug 2007 23:19:12 -0700
Subject: [antlr-interest] oops got that backwards (was is there a way to
	decompose ASTs)
Message-ID: <75939f220708082319p2ae20ce7m337ff4f751ea21bb@mail.gmail.com>

At the last minute I decided to edit my example rule to make CAR and
CDR lower case so they wouldn't look like tokens - and at that point
reversed the two.  I meant:

It would be helpful to be able to CAR and CDR your way through subrule
AST trees inside of rewrite rules, or for other things like making an
imaginary token that has the line and column information of a token
from a subrule (or replacing a token from a subrule match).

For instance inside of this rule:

arg1    :    (argScope -> argScope)
        ( biop=('.'|'->') argScope -> ^($biop $arg1  argScope)

*** LOOK HERE ****
           | b  ( l=list -> ^(AT[car($l)] $arg1 cdr($l))
                    | app='(' (expr (',' expr)*)? ')' )
->^(APPLY[$app] $arg1 expr+)
           | post=('++'|'--') ->^(POSTOP[$post] $post $arg1)
         )*
        ;

From joshscholar at nightstudies.net  Thu Aug  9 01:01:39 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Thu, 9 Aug 2007 01:01:39 -0700
Subject: [antlr-interest] For the documentation, perhaps
Message-ID: <75939f220708090101l60a94c37we88c5a86efbbb43@mail.gmail.com>

This wasn't exactly what I was expecting, so maybe it should be
documented ( I did buy the book by the way - but I probably skimmed
too much):

If you set a variable inside of an EBNF iterator but use it outside of
that iterator, it only gets the final value.  Maybe attempting that
should be an error.

For instance, the following grammar, given "[a,b,c . d];" as input
returns (LIST A C (DOT D)) instead of (LIST A B C (DOT D)).

grammar simplelistgrammar;

options {
output=AST;
}

tokens {LIST;DOT;}

prog    :        statement *;
statement       :               atom? ';'! ;

#****the problem is $rest:
list    :h='['  ( head=atom (',' rest=atom)* ('.' dot=atom)? )?   ']'
->^(LIST $head? $rest* ^(DOT $dot)?) ;

atom    :SYMBOL|list;
SYMBOL :  ('a'..'z'|'A'..'Z')+;
WS  :   (' '|'\t')+ {$channel=HIDDEN;} ;

......
What works is
...
sublist : (','! atom)*;
list    :h='['  ( head=atom  rest=sublist ('.' dot=atom)? )?   ']'
->^(LIST $head? $rest ^(DOT
$dot)?) ;
...

I wouldn't sure that second one would work even for something "[X.Y];"
where "sublist" is empty, but it does.  The rewrite rules are smart
enough to avoid creating a link for an empty rule.

It might be complicated to make the parser understand some sort of
algebra of EBNF operators so that when you use a variable outside of
iterator it collects the values from the iteration into their
respective variables so that the original example just works.

Joshua Scholar

From tbrandonau at gmail.com  Thu Aug  9 01:18:52 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 9 Aug 2007 18:18:52 +1000
Subject: [antlr-interest] For the documentation, perhaps
In-Reply-To: <75939f220708090101l60a94c37we88c5a86efbbb43@mail.gmail.com>
References: <75939f220708090101l60a94c37we88c5a86efbbb43@mail.gmail.com>
Message-ID: <ebc876d70708090118t4951cd08n275a3660369ac055@mail.gmail.com>

On 8/9/07, Josh Scholar <joshscholar at nightstudies.net> wrote:
> This wasn't exactly what I was expecting, so maybe it should be
> documented ( I did buy the book by the way - but I probably skimmed
> too much):
>
> If you set a variable inside of an EBNF iterator but use it outside of
> that iterator, it only gets the final value.  Maybe attempting that
> should be an error.
>
> For instance, the following grammar, given "[a,b,c . d];" as input
> returns (LIST A C (DOT D)) instead of (LIST A B C (DOT D)).
>
> grammar simplelistgrammar;
>
> options {
> output=AST;
> }
>
> tokens {LIST;DOT;}
>
> prog    :        statement *;
> statement       :               atom? ';'! ;
>
> #****the problem is $rest:
> list    :h='['  ( head=atom (',' rest=atom)* ('.' dot=atom)? )?   ']'
> ->^(LIST $head? $rest* ^(DOT $dot)?) ;

This is the correct behaviour. You've told ANTLR you only want a
single rest. You want to use += instead, telling ANTLR you want to
collect all rests, like:
list    :h='['  ( head=atom (',' rest+=atom)* ('.' dot=atom)? )?   ']'
 ->^(LIST $head? $rest* ^(DOT $dot)?) ;
Then it should behave as you expect.
>
> atom    :SYMBOL|list;
> SYMBOL :  ('a'..'z'|'A'..'Z')+;
> WS  :   (' '|'\t')+ {$channel=HIDDEN;} ;
>
> ......
> What works is
> ...
> sublist : (','! atom)*;
> list    :h='['  ( head=atom  rest=sublist ('.' dot=atom)? )?   ']'
> ->^(LIST $head? $rest ^(DOT
> $dot)?) ;
> ...
>
> I wouldn't sure that second one would work even for something "[X.Y];"
> where "sublist" is empty, but it does.  The rewrite rules are smart
> enough to avoid creating a link for an empty rule.
Actually I think here ANTLR will create a label for sublist and add
all it's children into your tree, but in such a case it has no
children. A slightly cleaner way is:
sublist : (','! atom)+;
list    :h='['  ( head=atom  (rest=sublist)? ('.' dot=atom)? )?   ']'
 ->^(LIST $head? $rest? ^(DOT $dot)?) ;

> It might be complicated to make the parser understand some sort of
> algebra of EBNF operators so that when you use a variable outside of
> iterator it collects the values from the iteration into their
> respective variables so that the original example just works.
>
It would be hard to make ANTLR guess what you wanted, instead
correctly tell it want you want and it will do it ;).

Tom.
> Joshua Scholar
>

From cameron.palmer at gmail.com  Thu Aug  9 01:39:45 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Thu, 9 Aug 2007 10:39:45 +0200
Subject: [antlr-interest] For the documentation, perhaps
In-Reply-To: <75939f220708090101l60a94c37we88c5a86efbbb43@mail.gmail.com>
References: <75939f220708090101l60a94c37we88c5a86efbbb43@mail.gmail.com>
Message-ID: <bc4938830708090139y336ad81dtadf707462a6a1df4@mail.gmail.com>

+= operator gets what you want. Page 132 and 148 of The Book.

prog : statement *;
statement : atom? ';'! ;

list : h='[' ( head=atom (',' rest+=atom)* ('.' dot=atom)? )? ']'
        -> ^(LIST $head? $rest* ^(DOT $dot)?) ;

atom : SYMBOL | list;
SYMBOL : ('a'..'z'|'A'..'Z')+;
WS : (' '|'\t'|'\n')+ {$channel=HIDDEN;} ;

Cameron Palmer
University of North Texas

On 8/9/07, Josh Scholar <joshscholar at nightstudies.net> wrote:
> This wasn't exactly what I was expecting, so maybe it should be
> documented ( I did buy the book by the way - but I probably skimmed
> too much):
>
> If you set a variable inside of an EBNF iterator but use it outside of
> that iterator, it only gets the final value.  Maybe attempting that
> should be an error.
>
> For instance, the following grammar, given "[a,b,c . d];" as input
> returns (LIST A C (DOT D)) instead of (LIST A B C (DOT D)).
>
> grammar simplelistgrammar;
>
> options {
> output=AST;
> }
>
> tokens {LIST;DOT;}
>
> prog    :        statement *;
> statement       :               atom? ';'! ;
>
> #****the problem is $rest:
> list    :h='['  ( head=atom (',' rest=atom)* ('.' dot=atom)? )?   ']'
> ->^(LIST $head? $rest* ^(DOT $dot)?) ;
>
> atom    :SYMBOL|list;
> SYMBOL :  ('a'..'z'|'A'..'Z')+;
> WS  :   (' '|'\t')+ {$channel=HIDDEN;} ;
>
> ......
> What works is
> ...
> sublist : (','! atom)*;
> list    :h='['  ( head=atom  rest=sublist ('.' dot=atom)? )?   ']'
> ->^(LIST $head? $rest ^(DOT
> $dot)?) ;
> ...
>
> I wouldn't sure that second one would work even for something "[X.Y];"
> where "sublist" is empty, but it does.  The rewrite rules are smart
> enough to avoid creating a link for an empty rule.
>
> It might be complicated to make the parser understand some sort of
> algebra of EBNF operators so that when you use a variable outside of
> iterator it collects the values from the iteration into their
> respective variables so that the original example just works.
>
> Joshua Scholar
>

From cameron.palmer at gmail.com  Thu Aug  9 01:57:20 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Thu, 9 Aug 2007 10:57:20 +0200
Subject: [antlr-interest] error(10): internal error: TWalker.g :
	java.lang.IllegalArgumentException: Can't find template
	tokenRefRuleRoot.st
In-Reply-To: <382129CB-5E96-418E-8A7B-75D54FA84095@apple.com>
References: <382129CB-5E96-418E-8A7B-75D54FA84095@apple.com>
Message-ID: <bc4938830708090157w1171dad2ofe849807e3640109@mail.gmail.com>

This is a painful error because it seems to be meaningless. In my
grammar I eliminated the error by finding places that I got carat
happy:

rule : x^ this that
       | y^
       ;

CHANGED TO

rule : x^ this that
       | y
       ;



On 8/8/07, Cameron Esfahani <dirty at apple.com> wrote:
> Thanks to Gavin Lambert, I fixed the "error(210):  The following sets of
> rules are mutually left-recursive" error I had earlier.
>
> But now I get the following:
>
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> error(10):  internal error: TWalker.g :
> java.lang.IllegalArgumentException: Can't find template
> tokenRefRuleRoot.st
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
> org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
> org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1992)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
> org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
> org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
> org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
> org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
> org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:321)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
> org.antlr.Tool.processGrammar(Tool.java:347)
> org.antlr.Tool.process(Tool.java:268)
> org.antlr.Tool.main(Tool.java:70)
>
> I have no idea even where to begin looking.  Anyone have any ideas?
>
>
> Cameron Esfahani
> dirty at apple.com
>
> "Most people are bad programmers," says Joy. "The honest truth is that
> having a lot of people staring at the code does not find the really nasty
> bugs. The really nasty bugs are found by a couple of really smart people who
> just kill themselves. Most people looking at the code won't see anything ...
> You can't have thousands of people contributing and achieve a high
> standard."
>
> Bill Joy on the myth of Linux's much touted "power in the masses"
> development benefits.
>
>

From tbrandonau at gmail.com  Thu Aug  9 02:09:38 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 9 Aug 2007 19:09:38 +1000
Subject: [antlr-interest] error(10): internal error: TWalker.g :
	java.lang.IllegalArgumentException: Can't find template
	tokenRefRuleRoot.st
In-Reply-To: <bc4938830708090157w1171dad2ofe849807e3640109@mail.gmail.com>
References: <382129CB-5E96-418E-8A7B-75D54FA84095@apple.com>
	<bc4938830708090157w1171dad2ofe849807e3640109@mail.gmail.com>
Message-ID: <ebc876d70708090209x66238324wfe9df7c2814e8636@mail.gmail.com>

On 8/9/07, Cameron Palmer <cameron.palmer at gmail.com> wrote:
> This is a painful error because it seems to be meaningless. In my
> grammar I eliminated the error by finding places that I got carat
> happy:
>
> rule : x^ this that
>        | y^
>        ;
>
> CHANGED TO
>
> rule : x^ this that
>        | y
>        ;
>
The error occurs when you mix rewrites and tree operators (! or ^) in
a single rule. In this case as the template is tokenRefRuleRoot.st it
means a misplaced ^, a misplaced ! will result in the same error but
for tokenRefRuleBang.st.

Unfortunately due to the lack of location information it is annoying
to find. The fix is waiting on the rewrite of the ANTLR grammar in v3.
You can try commenting out\in rules to track it down but this can be
annoying as you have to deal with the missing references to commented
out rules.
Or, as ANTLR reports the first occurence of the error in the file if
you insert the other tree operator in a rule with a rewrite above the
error the error will switch. So you can use this to track it down.
e.g. Given rules:
rule1: a -> a;
rule2: b -> b;
rule3: c -> c
       | c2^;
rule4: d -> d;
You get the tokenRefRuleRoot message, because of rule3. If you changed
rule2 to "b! -> b"  then the error will switch to tokenRefRuleBang,
telling you the error is below rule2. Reverting rule2 then changing
rule4 to "d! -> d" the error will not change. Showing you the error is
above rule4. Using this method you can track it down to a small area
of your code and scan that. Hope that's clear.

Tom.

>
>
> On 8/8/07, Cameron Esfahani <dirty at apple.com> wrote:
> > Thanks to Gavin Lambert, I fixed the "error(210):  The following sets of
> > rules are mutually left-recursive" error I had earlier.
> >
> > But now I get the following:
> >
> > ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> > error(10):  internal error: TWalker.g :
> > java.lang.IllegalArgumentException: Can't find template
> > tokenRefRuleRoot.st
> > org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
> > org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
> > org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
> > org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
> > org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1992)
> > org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
> > org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
> > org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
> > org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> > org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
> > org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
> > org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
> > org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> > org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
> > org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
> > org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
> > org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:321)
> > org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
> > org.antlr.Tool.processGrammar(Tool.java:347)
> > org.antlr.Tool.process(Tool.java:268)
> > org.antlr.Tool.main(Tool.java:70)
> >
> > I have no idea even where to begin looking.  Anyone have any ideas?
> >
> >
> > Cameron Esfahani
> > dirty at apple.com
> >
> > "Most people are bad programmers," says Joy. "The honest truth is that
> > having a lot of people staring at the code does not find the really nasty
> > bugs. The really nasty bugs are found by a couple of really smart people who
> > just kill themselves. Most people looking at the code won't see anything ...
> > You can't have thousands of people contributing and achieve a high
> > standard."
> >
> > Bill Joy on the myth of Linux's much touted "power in the masses"
> > development benefits.
> >
> >
>

From cameron.palmer at gmail.com  Thu Aug  9 02:11:36 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Thu, 9 Aug 2007 11:11:36 +0200
Subject: [antlr-interest] Can ANTLR aid grammar documentation?
In-Reply-To: <46B8AE40.6000201@sun.com>
References: <46B8AE40.6000201@sun.com>
Message-ID: <bc4938830708090211n51cf060cu5dc1338ebfa615f3@mail.gmail.com>

In ANTLRWorks under File->Export All Rules you can have it spit out
either EPS or Bitmaps of the rules.

Cameron Palmer
University of North Texas

On 8/7/07, Tom Ball <Tom.Ball at sun.com> wrote:
> I hope this isn't a FAQ, but it's not on the list nor could I find any
> archive references.  Does anyone have tips on ways to generate
> documentation for an ANTLR-based grammar?  Not a complete language
> specification, of course (that's what specification languages are for),
> but we're interested in any documentation (or testing) artifacts that
> can be generated -- bitmap files of the syntax diagrams ANTLRWorks
> displays would be useful, for example.
>
> Tom
>

From aliaazimi at yahoo.com  Thu Aug  9 06:03:08 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 9 Aug 2007 06:03:08 -0700 (PDT)
Subject: [antlr-interest] (Newbie) tree walker emits
	"GrammarSanity.traceStatesLookingForLeftRecursion "
In-Reply-To: <bc4938830708082259t5711d0a9rde785b97e4486f80@mail.gmail.com>
Message-ID: <96651.58289.qm@web58105.mail.re3.yahoo.com>

 
  Hi,
   
  Thank you so much for your advice. What do you think the NullPointer error message would be for? I checked my grammar again and again, however without any success. I produced another tree walker very similar to this one and also as large. It works perfectly. I recall that I had some NullPointer error messages for previous one. I sorted it out by putting some imaginary nodes as roots for some rules when needed. I am a newbie and started to learn whole of this subject nearly a month ago. I think an expert eye would pick the problem very quickly. Could you give me another advice so that I will not sit in front of my laptop and stare at the codes emotionlessly?
   
  Thank you all a million time. Without you I would not have been able to come even this far.
  Best regards,
   
  Al

Cameron Palmer <cameron.palmer at gmail.com> wrote:
   
  It sounds like your Main program isn't correctly handing off the
output of the Lexer-Parser to the Walker. I would verify that is
correct. I think the error message you are seeing is just a
consequence of the Null Pointer Exception.

Cameron Palmer
University of North Texas

On 8/9/07, ali azimi wrote:
> Hi,
>
> Thank you in advance for any advice.
>
> When I run my tree walker I receive some error messages which can be seen at
> the bottom of this page. The grammar is too long and can not be posted. I
> have tried to make sure that the grammar does not have any left recursion
> problem. The error messages do not give me adequate information as to where
> these errors are likely to be originated from. What would you suggest me to
> do?
>
> I appreciate any help a lot.
>
> Best regards,
>
> Al
>
> Errors:
>
> Check Grammar failed:
>
> (10): internal error: C:\Documents and
> Settings\ali\Desktop\antlr\FpCif12Walker.g:
> java.lang.NullPointerException
>
> Org.antlr.tool.GrammarSanity.traceStatesLookingForLeftRecursion
> (Unknown Source)
> Org.antlr.tool.GrammarSanity.checkAllRulesForLeftRecursion
> (Unknown Source)
>
> Org.antlr.tool.Grammar. checkAllRulesForLeftRecursion (Unknown Source)
>
> Org.antlr.codegen.CodeGenerator.genRecognizer (Unknown
> Source)
>
> Org.antlr.Tool.processGrammar (Unknown Source)
>
> Org.antlr.Tool. process (Unknown Source)
>
> Org.antlr.works.generate.CodeGenerate.generate
> (CodeGenerate.java:125)
>
> Org.antlr.works.generate.CodeGenerate.run
> (CodeGenerate.java:251)
>
> Java.lang.Thread.run (Unknown Source)
>
>
> ________________________________
> Be a better Globetrotter. Get better travel answers from someone who knows.
> Yahoo! Answers - Check it out.
>
>


       
---------------------------------
Sick sense of humor? Visit Yahoo! TV's Comedy with an Edge to see what's on, when. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/1cb3f845/attachment.html 

From oouc at yahoo.com  Thu Aug  9 06:44:14 2007
From: oouc at yahoo.com (Oouc)
Date: Thu, 9 Aug 2007 06:44:14 -0700 (PDT)
Subject: [antlr-interest] Easiest way to search this list for how to do
	Python code output?
Message-ID: <581866.97307.qm@web30803.mail.mud.yahoo.com>

What is the easiest way to search this list? 
I am interested in the Java to Python source code that 
Troy Melhase said in Feb 07 he was able to translate.
I have been unsuccessful thusfar in trying to 
contact him.
Thanks for any help,
Oouc


From warren.madden at lmco.com  Thu Aug  9 06:53:16 2007
From: warren.madden at lmco.com (Madden, Warren)
Date: Thu, 09 Aug 2007 09:53:16 -0400
Subject: [antlr-interest] Easiest way to search this list for how to
	do	Python code output?
In-Reply-To: <581866.97307.qm@web30803.mail.mud.yahoo.com>
References: <581866.97307.qm@web30803.mail.mud.yahoo.com>
Message-ID: <96B09C31BB3969458305F4269B2D410F08881C89@emss06m08.mar.lmco.com>


I've found the following link very useful for searching the archives of
this list:

http://groups.google.com/group/il-antlr-interest?lnk=sg&hl=en

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Oouc
Sent: Thursday, August 09, 2007 9:44 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Easiest way to search this list for how to do
Python code output?

What is the easiest way to search this list? 
I am interested in the Java to Python source code that 
Troy Melhase said in Feb 07 he was able to translate.
I have been unsuccessful thusfar in trying to 
contact him.
Thanks for any help,
Oouc


From mschnelte at gmx.de  Thu Aug  9 06:59:34 2007
From: mschnelte at gmx.de (mschnelte at gmx.de)
Date: Thu, 09 Aug 2007 15:59:34 +0200
Subject: [antlr-interest] Dynamic tokens
Message-ID: <20070809135934.124760@gmx.net>

Hello everyone,

Consider the following grammar:

expr: IF element value THEN;

element: 'bla1 bla2' | 'xyz';
value: 'abc';


So? "IF bla1 bla2 abc THEN" would be a correct expression.
Nothing special, but this is static. I'd like to add elements and values 
during runtime.

What I mean is, that all elements and values known so far are stored in a 
Set instead of being hardcoded in the grammar.
And elements and values can be composed out of more than one word.

Is this possible?

Thank you!

Matthias


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/e19820dd/attachment-0001.html 

From antlr at jazillian.com  Thu Aug  9 08:33:56 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 09 Aug 2007 11:33:56 -0400
Subject: [antlr-interest] need help with predicates
Message-ID: <46BB33E4.3080804@jazillian.com>

The language I'm parsing, visual basic, lets an identifier have a '!' 
suffix:

Identifier:
    '['? LETTER (LETTER| DECIMAL_LITERAL)* ('%'|'#'|'$'|'&'|'!')? ']'?
    ;

But it also lets you use '!' as a "separator" the way C/C++/Java/etc. 
use '.'
In the midst of a hierarchy of rules dealing with expressions, I have 
this rule:

dotOpExpression:
    unaryOps (
          DOT^ dotOperand?
        | BANG^ anyName?
        )*
    ;

Here, the unaryOps, dotOperand, and anyName rules all eventually refer 
to Identifier.
So the problem is that during the dotOpExpression processing, the 
unaryOps consumes
the Identifier, including the '!'. So in trying to match "a!b", it 
fails, because it took "a!"
as the Identifier and couldn't match the rest.

So one solution is to take the '!' out of the Identifier rule, perhaps 
now calling it IdentifierNoBang,
and then have alternative versions of other rules (unaryOpsNoBang, 
dotOperandNoBang, anyNameNoBang, etc).
But that would be a huge mess.

It seems like a syntactic predicate with "backtrack=true" should work 
here, but I can't quite see how.
I want to say, in dotOpExpression, "try to match this pattern, but if 
that doesn't work, try again, but this
time don't allow a '!' at the end of unaryOps". I can't see how to do 
that without all that rework to
remove the '!' from Identifier.

Any ideas?
Thanks,
Andy





From cameron.palmer at gmail.com  Thu Aug  9 08:55:34 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Thu, 9 Aug 2007 17:55:34 +0200
Subject: [antlr-interest] (Newbie) tree walker emits
	"GrammarSanity.traceStatesLookingForLeftRecursion "
In-Reply-To: <96651.58289.qm@web58105.mail.re3.yahoo.com>
References: <bc4938830708082259t5711d0a9rde785b97e4486f80@mail.gmail.com>
	<96651.58289.qm@web58105.mail.re3.yahoo.com>
Message-ID: <bc4938830708090855t2dad293eg2b523a8fdf0d56f2@mail.gmail.com>

You have two Lexer rules (DIR and ENDDIR) in your walker. If you
delete them the error goes away.

cameron.

On 8/9/07, ali azimi <aliaazimi at yahoo.com> wrote:
>
> Hi,
>
> Thank you so much for your advice. What do you think the NullPointer error
> message would be for? I checked my grammar again and again, however without
> any success. I produced another tree walker very similar to this one and
> also as large. It works perfectly. I recall that I had some NullPointer
> error messages for previous one. I sorted it out by putting some imaginary
> nodes as roots for some rules when needed. I am a newbie and started to
> learn whole of this subject nearly a month ago. I think an expert eye would
> pick the problem very quickly. Could you give me another advice so that I
> will not sit in front of my laptop and stare at the codes emotionlessly?
>
> Thank you all a million time. Without you I would not have been able to come
> even this far.
> Best regards,
>
> Al
>
> Cameron Palmer <cameron.palmer at gmail.com> wrote:
>
> It sounds like your Main program isn't correctly handing off the
> output of the Lexer-Parser to the Walker. I would verify that is
> correct. I think the error message you are seeing is just a
> consequence of the Null Pointer Exception.
>
> Cameron Palmer
> University of North Texas
>
> On 8/9/07, ali azimi wrote:
> > Hi,
> >
> > Thank you in advance for any advice.
> >
> > When I run my tree walker I receive some error messages which can be seen
> at
> > the bottom of this page. The grammar is too long and can not be posted. I
> > have tried to make sure that the grammar does not have any left recursion
> > problem. The error messages do not give me adequate information as to
> where
> > these errors are likely to be originated from. What would you suggest me
> to
> > do?
> >
> > I appreciate any help a lot.
> >
> > Best regards,
> >
> > Al
> >
> > Errors:
> >
> > Check Grammar failed:
> >
> > (10): internal error: C:\Documents and
> > Settings\ali\Desktop\antlr\FpCif12Walker.g:
> > java.lang.NullPointerException
> >
> >
> Org.antlr.tool.GrammarSanity.traceStatesLookingForLeftRecursion
> > (Unknown Source)
> >
> Org.antlr.tool.GrammarSanity.checkAllRulesForLeftRecursion
> > (Unknown Source)
> >
> > Org.antlr.tool.Grammar. checkAllRulesForLeftRecursion (Unknown Source)
> >
> > Org.antlr.codegen.CodeGenerator.genRecognizer (Unknown
> > Source)
> >
> > Org.antlr.Tool.processGrammar (Unknown Source)
> >
> > Org.antlr.Tool. process (Unknown Source)
> >
> > Org.antlr.works.generate.CodeGenerate.generate
> > (CodeGenerate.java:125)
> >
> > Org.antlr.works.generate.CodeGenerate.run
> > (CodeGenerate.java:251)
> >
> > Java.lang.Thread.run (Unknown Source)
> >
> >
> > ________________________________
> > Be a better Globetrotter. Get better travel answers from someone who
> knows.
> > Yahoo! Answers - Check it out.
> >
> >
>
>
>
>  ________________________________
> Sick sense of humor? Visit Yahoo! TV's Comedy with an Edge to see what's on,
> when.
>
>

From rdclark at gmail.com  Thu Aug  9 09:06:38 2007
From: rdclark at gmail.com (Richard Clark)
Date: Thu, 9 Aug 2007 09:06:38 -0700
Subject: [antlr-interest] need help with predicates
In-Reply-To: <46BB33E4.3080804@jazillian.com>
References: <46BB33E4.3080804@jazillian.com>
Message-ID: <d3992d900708090906q12653a22q7087ea65f99d15cb@mail.gmail.com>

The usual answer to dealing with context-dependant elements is to move
the decision from the lexer into the parser.

You might do this:

identifier: (ID_FRAGMENT '!' ID_FRAGMENT) => ID_FRAGMENT '!' ID_FRAGMENT
             | ID_FRAGMENT
             /* You still have to deal with the other suffixes */
             ;

ID_FRAGMENT: LETTER (LETTER| DECIMAL_LITERAL)* ;

 ...Richard

From porcelli at uol.com.br  Thu Aug  9 09:39:03 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Thu, 9 Aug 2007 13:39:03 -0300
Subject: [antlr-interest] Fwd:  need help with predicates
In-Reply-To: <ee873c070708090938r70f51964l52826037251bb78a@mail.gmail.com>
References: <46BB33E4.3080804@jazillian.com>
	<d3992d900708090906q12653a22q7087ea65f99d15cb@mail.gmail.com>
	<ee873c070708090938r70f51964l52826037251bb78a@mail.gmail.com>
Message-ID: <ee873c070708090939y2a39331dhf7c3c25ab9fc324f@mail.gmail.com>

Hi Andy and All..

 As you are working with visual basic... I think you could create
something like it:

expression //just for this sample
        :       data_reference
        |       LITERAL
        ;

data_reference
        :       IDENTIFIER
        |       IDENTIFIER '!' IDENTIFIER
        |       IDENTIFIER '!' '[' expression ']'
        |       IDENTIFIER '(' expression ')'
        ;

LITERAL //With scape logic
        :       '"'
        {
                if (input.LA(1) == '"' && input.LA(2) == '"'){
                        matchAny();
                        matchAny();
                }
        }
        (options {greedy=false;} : .
        {
                if (input.LA(1) == '"' && input.LA(2) == '"'){
                        matchAny();
                        matchAny();
                }
        }
        )* '"'
        ;

IDENTIFIER
        :       LETTER (LETTER|DIGIT|'_')* DATA_TYPE?
        ;

fragment
DATA_TYPE
        :       '%'|'#'|'$'|'&'|'@'
        ;

fragment
LETTER
        :       'a'..'z' | '\u0080'..'\ufffe'
        ;

fragment
DIGIT
        :       '0'..'9'
        ;

wdyt?

Best Regards,
Alexandre Porcelli

On 8/9/07, Richard Clark <rdclark at gmail.com> wrote:
> The usual answer to dealing with context-dependant elements is to move
> the decision from the lexer into the parser.
>
> You might do this:
>
> identifier: (ID_FRAGMENT '!' ID_FRAGMENT) => ID_FRAGMENT '!' ID_FRAGMENT
>              | ID_FRAGMENT
>              /* You still have to deal with the other suffixes */
>              ;
>
> ID_FRAGMENT: LETTER (LETTER| DECIMAL_LITERAL)* ;
>
>  ...Richard
>

From tbrandonau at gmail.com  Thu Aug  9 09:45:43 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 10 Aug 2007 02:45:43 +1000
Subject: [antlr-interest] need help with predicates
In-Reply-To: <46BB33E4.3080804@jazillian.com>
References: <46BB33E4.3080804@jazillian.com>
Message-ID: <ebc876d70708090945u60d13caelb1871d174d4f9f35@mail.gmail.com>

On 8/10/07, Andy Tripp <antlr at jazillian.com> wrote:
> The language I'm parsing, visual basic, lets an identifier have a '!'
> suffix:
>
> Identifier:
>     '['? LETTER (LETTER| DECIMAL_LITERAL)* ('%'|'#'|'$'|'&'|'!')? ']'?
>     ;
>
> But it also lets you use '!' as a "separator" the way C/C++/Java/etc.
> use '.'
> In the midst of a hierarchy of rules dealing with expressions, I have
> this rule:
>
> dotOpExpression:
>     unaryOps (
>           DOT^ dotOperand?
>         | BANG^ anyName?
>         )*
>     ;
>
> Here, the unaryOps, dotOperand, and anyName rules all eventually refer
> to Identifier.
> So the problem is that during the dotOpExpression processing, the
> unaryOps consumes
> the Identifier, including the '!'. So in trying to match "a!b", it
> fails, because it took "a!"
> as the Identifier and couldn't match the rest.
>
> So one solution is to take the '!' out of the Identifier rule, perhaps
> now calling it IdentifierNoBang,
> and then have alternative versions of other rules (unaryOpsNoBang,
> dotOperandNoBang, anyNameNoBang, etc).
> But that would be a huge mess.
>
> It seems like a syntactic predicate with "backtrack=true" should work
> here, but I can't quite see how.
> I want to say, in dotOpExpression, "try to match this pattern, but if
> that doesn't work, try again, but this
> time don't allow a '!' at the end of unaryOps". I can't see how to do
> that without all that rework to
> remove the '!' from Identifier.
Syntactic predicates only help ANTLR decide between alternatives, so
you still need to be able to specify the alternates as standard rules.
So you need some way to a specify an identifier with or without bang.
Apart from duplicated rules the option is a gated semantic predicate
with either a field or a rule parameters or a scope.
I think with a field you might run into nesting issues, though not sure there.
With parameters:
dotOpExpression
    :    (identifier[false] BANG identifier[true])=>identifier BANG
dotOpExpression
    |    unaryOps (DOT^ dotOperand?)
    ;

identifier[boolean allowBang]
    :    'a'..'z'+
        (    {allowBang}?=>BANG
        |    // Epsilon
        )
    ;

Though then you have to always pass allowBang to your identifier rule,
and will need to pass it down through various rules to get to
identifier.

You might be able to use scopes, but I think then you'd need to put
them in a rule that all calls to identifier went through or else they
wouldn't exist. So, I don't think dynamic scopes are suitable (I
assume there is access to identifier not through dotOpExpression).
Maybe you could add:
scope IdentiferBang {
boolean allow;
}
Then do:
start
scope identifierBang;
@init {
    identifierBang::allow = true;
}
    :    ...
    ;

dotOpExprssion
scope identifierBang;
    :   { identifierBang::allow = false; }
        (unaryOps BANG anyName)=>unaryOps BANG^ dotOpExpression
    |   { identifierBang::allow = true; }
        unaryOps (DOT^ dotOperand?)
    ;

identifier
    :    'a'..'z'+
        (    { identifierBang::allow }?=>BANG
        |    // Epsilon
        )
So if there's a call to dotOpExpression on the way to identifier it
will get that copy of the scope, otherwise it will get the default
copy of the scope from the start rule.
Not especially clean, but it might work in lieu of a nicer solution.

Tom.
>
> Any ideas?
> Thanks,
> Andy
>
>
>
>
>

From davidshepherd at rocketmail.com  Thu Aug  9 12:35:10 2007
From: davidshepherd at rocketmail.com (david shepherd)
Date: Thu, 9 Aug 2007 12:35:10 -0700 (PDT)
Subject: [antlr-interest] can antlr handle some ambiguity,
	specifically this one...
Message-ID: <447630.57739.qm@web51404.mail.re2.yahoo.com>

 I have really enjoyed using ANTLR and ANTLRWorks, but have run into  
 problems because of the LL parsing technology.  I thought that  
 antlr should be able to parse:

 ES -> CE | PE | E
 CE -> PE E
 PE -> n | PE n
 E  -> e

 because it can lookahead k tokens and decide to reduce ES -> CE or ES -> PE.
 In practice, I can't get anltr to handle the ambiguity in ES -> CE | PE | E .

It wants to always reduce to CE, even when PE is necessary.  I thought
that the LL(*), or the * lookahead would allow it to parse 'n n e n',
but it cannot parse this.

 Am I doing something wrong, or is this a consequence of LL grammars?

 Thanks,
 David Shepherd
 Postdoctoral Fellow at UBC

PS-I
have gotten an LR parser to parse this example, but the antlr and
antlrworks environment is much preferred, if it can handle this issue.




From davidshepherd at rocketmail.com  Thu Aug  9 12:35:10 2007
From: davidshepherd at rocketmail.com (david shepherd)
Date: Thu, 9 Aug 2007 12:35:10 -0700 (PDT)
Subject: [antlr-interest] can antlr handle some ambiguity,
	specifically this one...
Message-ID: <447630.57739.qm@web51404.mail.re2.yahoo.com>

 I have really enjoyed using ANTLR and ANTLRWorks, but have run into  
 problems because of the LL parsing technology.  I thought that  
 antlr should be able to parse:

 ES -> CE | PE | E
 CE -> PE E
 PE -> n | PE n
 E  -> e

 because it can lookahead k tokens and decide to reduce ES -> CE or ES -> PE.
 In practice, I can't get anltr to handle the ambiguity in ES -> CE | PE | E .

It wants to always reduce to CE, even when PE is necessary.  I thought
that the LL(*), or the * lookahead would allow it to parse 'n n e n',
but it cannot parse this.

 Am I doing something wrong, or is this a consequence of LL grammars?

 Thanks,
 David Shepherd
 Postdoctoral Fellow at UBC

PS-I
have gotten an LR parser to parse this example, but the antlr and
antlrworks environment is much preferred, if it can handle this issue.




From rdclark at gmail.com  Thu Aug  9 13:27:40 2007
From: rdclark at gmail.com (Richard Clark)
Date: Thu, 9 Aug 2007 13:27:40 -0700
Subject: [antlr-interest] can antlr handle some ambiguity,
	specifically this one...
In-Reply-To: <447630.57739.qm@web51404.mail.re2.yahoo.com>
References: <447630.57739.qm@web51404.mail.re2.yahoo.com>
Message-ID: <d3992d900708091327s3c7cbd1aj90677650d5e62d05@mail.gmail.com>

Hi David,

When you say:
> it can lookahead k tokens and decide
> to reduce ES -> CE or ES -> PE
it sounds like you're expecting ANTLR to look for the longest match
(a/k/a the best match). That's not automatically provided in ANTLR (it
takes the first unambiguous match it can.) What you want would require
trying the longer possible paths and backtracking if they don't fit.

You can add this backtracking yourself, either with syntactic
predicates or by enabling the backtracking option. In this case, it
sounds like you could resolve your issues by explicitly giving PE
precedence via a syntactic predicate:

es: (pe) => pe
   | ce
   | E
  ;

which means "try out pe speculatively. If it works, use it, otherwise
try the remaining options."

If you turn on backtracking globally, it implicitly adds these
predicates all over the place,  complicating the generated code. It's
considered good style to either enable backtracking ona  rule by rule
bacis or supply your own syntactic predicates.

BTW, I wasn't able to reproduce your problem fully as I suspect your
example grammar isn't quite what you intended. "PE -> n | PE n" is
left-recursive and reduces down to "PE -> n+", which is probably not
what you had in mind.

Take care,

 ...Richard


On 8/9/07, david shepherd <davidshepherd at rocketmail.com> wrote:
>
>  ES -> CE | PE | E
>  CE -> PE E
>  PE -> n | PE n
>  E  -> e
>
>  because it can lookahead k tokens and decide to reduce ES -> CE or ES -> PE.
>  In practice, I can't get anltr to handle the ambiguity in ES -> CE | PE | E .

From joshscholar at nightstudies.net  Thu Aug  9 13:29:01 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Thu, 9 Aug 2007 13:29:01 -0700
Subject: [antlr-interest] can antlr handle some ambiguity,
	specifically this one...
In-Reply-To: <447630.57739.qm@web51404.mail.re2.yahoo.com>
References: <447630.57739.qm@web51404.mail.re2.yahoo.com>
Message-ID: <75939f220708091329y6afe5b31re48b474f9871af0b@mail.gmail.com>

The problem is that PE is left recursive, and even with backtracking
on, Antlr won't accept left recursive grammars.  But it will
automatically rewrite the rule for you using EBNF iteration replacing
left recursion if you place the cursor on the rule and select the menu
item "Refactor->Remove Left Recursion".

So the grammar, in Antlr syntax starts as:

es      :        ce | pe | E;
ce      :        pe E;
pe      :        'n' | pe 'n';
E       :        'e';

and becomes:

es      :        ce | pe | E;
ce      :        pe E;
pe      :        ('n') ('n')*;
E       :        'e';

Note that rule names should not lower case in Antlr, that's reserved
for token names.

On 8/9/07, david shepherd <davidshepherd at rocketmail.com> wrote:
>  I have really enjoyed using ANTLR and ANTLRWorks, but have run into
>  problems because of the LL parsing technology.  I thought that
>  antlr should be able to parse:
>
>  ES -> CE | PE | E
>  CE -> PE E
>  PE -> n | PE n
>  E  -> e
>
>  because it can lookahead k tokens and decide to reduce ES -> CE or ES -> PE.
>  In practice, I can't get anltr to handle the ambiguity in ES -> CE | PE | E .
>
> It wants to always reduce to CE, even when PE is necessary.  I thought
> that the LL(*), or the * lookahead would allow it to parse 'n n e n',
> but it cannot parse this.
>
>  Am I doing something wrong, or is this a consequence of LL grammars?
>
>  Thanks,
>  David Shepherd
>  Postdoctoral Fellow at UBC
>
> PS-I
> have gotten an LR parser to parse this example, but the antlr and
> antlrworks environment is much preferred, if it can handle this issue.
>
>
>
>
>

From jaluber at gmx.de  Thu Aug  9 09:40:46 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 09 Aug 2007 18:40:46 +0200
Subject: [antlr-interest] need help with predicates
In-Reply-To: <46BB33E4.3080804@jazillian.com>
References: <46BB33E4.3080804@jazillian.com>
Message-ID: <46BB438E.8040001@gmx.de>

Andy Tripp wrote:
> The language I'm parsing, visual basic, lets an identifier have a '!'
> suffix:
> 
> Identifier:
>    '['? LETTER (LETTER| DECIMAL_LITERAL)* ('%'|'#'|'$'|'&'|'!')? ']'?
>    ;
> 
> But it also lets you use '!' as a "separator" the way C/C++/Java/etc.
> use '.'
> In the midst of a hierarchy of rules dealing with expressions, I have
> this rule:
> 
> dotOpExpression:
>    unaryOps (
>          DOT^ dotOperand?
>        | BANG^ anyName?
>        )*
>    ;
> 
> Here, the unaryOps, dotOperand, and anyName rules all eventually refer
> to Identifier.
> So the problem is that during the dotOpExpression processing, the
> unaryOps consumes
> the Identifier, including the '!'. So in trying to match "a!b", it
> fails, because it took "a!"
> as the Identifier and couldn't match the rest.
> 
> So one solution is to take the '!' out of the Identifier rule, perhaps
> now calling it IdentifierNoBang,
> and then have alternative versions of other rules (unaryOpsNoBang,
> dotOperandNoBang, anyNameNoBang, etc).
> But that would be a huge mess.
> 
> It seems like a syntactic predicate with "backtrack=true" should work
> here, but I can't quite see how.
> I want to say, in dotOpExpression, "try to match this pattern, but if
> that doesn't work, try again, but this
> time don't allow a '!' at the end of unaryOps". I can't see how to do
> that without all that rework to
> remove the '!' from Identifier.
> 
> Any ideas?
> Thanks,
> Andy
> 

Why don't you test, when you encounter at the identifier the bang, if
input.LT(1) is a space? If not then it can't be a suffixed bang. (What
does "a!" actually mean in VB?) Regarding your thought to do
backtracking: It won't work. Please look for my email "Lexing troubles",
which details my encountering of the problem and how my workaround is -
which I have only solved to the biggest part. I'm not sure how to do
error messages but I believe you know this. :)

Best regards,
Johannes Luber

From antlr at mirality.co.nz  Thu Aug  9 13:44:42 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 10 Aug 2007 08:44:42 +1200
Subject: [antlr-interest] can antlr handle some ambiguity,
 specifically this one...
In-Reply-To: <75939f220708091329y6afe5b31re48b474f9871af0b@mail.gmail.co
 m>
References: <447630.57739.qm@web51404.mail.re2.yahoo.com>
	<75939f220708091329y6afe5b31re48b474f9871af0b@mail.gmail.com>
Message-ID: <20070809204503.2293B11EB81@www.antlr.org>

At 08:29 10/08/2007, Josh Scholar wrote:
 >pe      :        ('n') ('n')*;

Though you can replace that one with just:

pe       :        'n'+;


From antlr at jazillian.com  Thu Aug  9 14:19:25 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 09 Aug 2007 17:19:25 -0400
Subject: [antlr-interest] need help with predicates
In-Reply-To: <46BB438E.8040001@gmx.de>
References: <46BB33E4.3080804@jazillian.com> <46BB438E.8040001@gmx.de>
Message-ID: <46BB84DD.5060404@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/9e2cb39f/attachment.html 

From antlr at jazillian.com  Thu Aug  9 14:25:28 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 09 Aug 2007 17:25:28 -0400
Subject: [antlr-interest] need help with predicates
In-Reply-To: <d3992d900708090906q12653a22q7087ea65f99d15cb@mail.gmail.com>
References: <46BB33E4.3080804@jazillian.com>
	<d3992d900708090906q12653a22q7087ea65f99d15cb@mail.gmail.com>
Message-ID: <46BB8648.8010200@jazillian.com>

Richard Clark wrote:
> The usual answer to dealing with context-dependant elements is to move
> the decision from the lexer into the parser.
>
> You might do this:
>
> identifier: (ID_FRAGMENT '!' ID_FRAGMENT) => ID_FRAGMENT '!' ID_FRAGMENT
>              | ID_FRAGMENT
>              /* You still have to deal with the other suffixes */
>              ;
>
> ID_FRAGMENT: LETTER (LETTER| DECIMAL_LITERAL)* ;
>
>  ...Richard
>
>   
Hmmm. I tried this, and thought it didn't work, because when I have 
something like:

Dim a!
Dim b

...since keywords such as 'Dim' are also identifiers, "a ! Dim" would be 
considered an identifier.
But thinking about it now, that shouldn't be a problem. "Dim" should not 
match ID_FRAGMENT, as
it can only match its specific token:
DIM='Dim';

I'll look into it more, thanks for the suggestion.

From antlr at jazillian.com  Thu Aug  9 14:41:00 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 09 Aug 2007 17:41:00 -0400
Subject: [antlr-interest] need help with predicates
In-Reply-To: <ebc876d70708090945u60d13caelb1871d174d4f9f35@mail.gmail.com>
References: <46BB33E4.3080804@jazillian.com>
	<ebc876d70708090945u60d13caelb1871d174d4f9f35@mail.gmail.com>
Message-ID: <46BB89EC.9060906@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/bc0b7058/attachment-0001.html 

From antlr at jazillian.com  Thu Aug  9 14:45:44 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 09 Aug 2007 17:45:44 -0400
Subject: [antlr-interest] need help with predicates
In-Reply-To: <ee873c070708090938r70f51964l52826037251bb78a@mail.gmail.com>
References: <46BB33E4.3080804@jazillian.com>	
	<d3992d900708090906q12653a22q7087ea65f99d15cb@mail.gmail.com>
	<ee873c070708090938r70f51964l52826037251bb78a@mail.gmail.com>
Message-ID: <46BB8B08.4080001@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/4841b985/attachment.html 

From aliaazimi at yahoo.com  Thu Aug  9 15:46:49 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 9 Aug 2007 15:46:49 -0700 (PDT)
Subject: [antlr-interest] (Newbie) java error messages when running the test
	rig
Message-ID: <764228.62935.qm@web58112.mail.re3.yahoo.com>

Hi,
   
  Thank you so much in advance for your advice. I am facing some java error messages which I do not know what they are all about as the output from test rig looks allright. (The output is here at the bottom of this page). Why do you think the java produces errors while producing the right output?
   
  Best regards,
   
  Al
   
  The error messages: (cifDescriptionA1 is the first rule in my grammar).
   
  Exception in thread "main" java.lang.NoSuchMethodError: antlr.RecognitionException.<init>(Lorg/antlr/runtime/IntStream;)V
          at org.antlr.runtime.MismatchedTreeNodeException.<init>(MismatchedTreeNodeException.java:16)
          at org.antlr.runtime.tree.TreeParser.mismatch(TreeParser.java:72)
          at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:100)
          at fpCif12.FpCif12Walker.cifDescriptionA1(FpCif12Walker.java:235)
          at fpCif12.Test.main(Test.java:50)
  Java Result: 1
  BUILD SUCCESSFUL (total time: 18 seconds)
   
  
   The output from running the test rig:
   
  (CIFDESA1 (DIADESA2 (SLIST (DIASTART3 SystemDiagram) (B3 Page 1 ( 1150 , 1000 )) (System DemonGame)) (A18 /* CIF (DefaultSize ( 300 , 200 ))) (A18 /* CIF (Text (B24 ( 400 , 100 ) ( 600 , 100 )) SIGNAL,Newgame,Probe,Result,Endgame,Win,Lose,Score(Integer),Bump; /* CIF End Text)) (A18 /* CIF (Channel (B22 ( 550 , 700 ) ( 550 , 500 )) (TextPosition ( 575 , 551 )) (TextPosition ( 575 , 600 ) SignalList1) (channel A (from (CHANLENDPNT (SLIST DemonBlock)) to (CHANLENDPNT (SLIST GameBlock)) with (SGNLSET (SLIST Bump))) endchannel A))) (A18 /* CIF (Channel (B22 ( 400 , 475 ) ( 34 , 475 )) (TextPosition ( 150 , 425 )) (TextPosition ( 62 , 500 ) SignalList1) (channel B (from (CHANLENDPNT (SLIST GameBlock)) to (CHANLENDPNT env) with (SGNLSET (SLIST Win) (SLIST Lose) (SLIST Score))) endchannel B))) (A18 /* CIF (Channel (B22 ( 56 , 325 ) ( 400 , 325 )) (TextPosition ( 212 , 250 )) (TextPosition ( 50 , 350 ) SignalList1) (channel C (from (CHANLENDPNT env) to (CHANLENDPNT (SLIST
 GameBlock)) with (SGNLSET (SLIST Newgame) (SLIST Probe) (SLIST Result) (SLIST Endgame))) endchannel C))) (A18 /* CIF (Block (B24 ( 400 , 700 )) (block DemonBlock referenced))) (A18 /* CIF (Block (B24 ( 400 , 300 )) (block GameBlock referenced))) (End /* CIF (SystemDiagram (endsystem DemonGame)))))
   
   
   

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/2d993f26/attachment.html 

From pink at odahoda.de  Thu Aug  9 13:41:41 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 09 Aug 2007 22:41:41 +0200
Subject: [antlr-interest] Easiest way to search this list for how to do
	Python code output?
References: <581866.97307.qm@web30803.mail.mud.yahoo.com>
Message-ID: <f9fu65$lap$1@sea.gmane.org>

Hi,

Oouc wrote:

> What is the easiest way to search this list?
> I am interested in the Java to Python source code that
> Troy Melhase said in Feb 07 he was able to translate.
> I have been unsuccessful thusfar in trying to
> contact him.

Are you talking about this: <http://code.google.com/p/java2python/>?


HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From tbrandonau at gmail.com  Thu Aug  9 18:28:09 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 10 Aug 2007 11:28:09 +1000
Subject: [antlr-interest] need help with predicates
In-Reply-To: <46BB89EC.9060906@jazillian.com>
References: <46BB33E4.3080804@jazillian.com>
	<ebc876d70708090945u60d13caelb1871d174d4f9f35@mail.gmail.com>
	<46BB89EC.9060906@jazillian.com>
Message-ID: <ebc876d70708091828h7c6aa3a9h7f915768c90f1b89@mail.gmail.com>

On 8/10/07, Andy Tripp <antlr at jazillian.com> wrote:
>
>  I'm trying Tom's suggestion to use a "global scope".
>  I define my scope outside of all rules like this:
>
>  scope identifierBang {
>      boolean allow;
>  }
>
>  Inside my identifier rule, I make sure never to consume a '!' char unless
> this flag is true:
>  identifier
>  scope identifierBang;
>      : {! $identifierBang::allow}? => '['? ID_FRAGMENT ']'?
>      | '['? ID_FRAGMENT BANG? ']'?
>      ;
I think you shouldn't declare the use of the scope here. I believe
that makes ANTLR push a new copy of the scope onto the stack. So here
where you just want to use it you shouldn't declare it.

Tom.
>
>  In my rule where I'm having the problem, I say "try it first without
> consuming the '!', and then
>  again normally" (global backtracking option is turned on):
>
>  dotOpExpression
>  @after {
>      $identifierBang::allow = true;
>  }
>  scope identifierBang;
>      : {$identifierBang::allow=false;} unaryOps dot2*
>      | {$identifierBang::allow=true;} unaryOps dot2*
>      ;
>
>  ...and that produces EmptyStackExceptions, so it appears that I have to put
> something on the stack initially:
>
>  compilationUnit
>  scope identifierBang;
>  @init {
>      identifierBang::allow = true;
>  }
>      : ...and so on
>      ;
>
>  And what happens? As soon as it encounters "Dim A!", I get a "mismatched
> input" exception.
>
>  So, I'll take a fresh look at it tomorrow.
>  Seems like maybe just passing args down might be the only way to go.
>  The scopes ideas seems good, but, as always, I'm left scratching my head
> when things don't work as expected.
>  And the code generated by ANTLR is looking more like YACC output as the
> years go by and I get older
>  and dumber :)
>
>  Thanks for the help,
>  Andy
>
>  p.s. you're right, dynamic scopes wont work, as there are ways to get to
> identifer other than
>  through this particular rule.
>
>
>  Thomas Brandon wrote:
>  On 8/10/07, Andy Tripp <antlr at jazillian.com> wrote:
>
>
>  The language I'm parsing, visual basic, lets an identifier have a '!'
> suffix:
>
> Identifier:
>  '['? LETTER (LETTER| DECIMAL_LITERAL)* ('%'|'#'|'$'|'&'|'!')? ']'?
>  ;
>
> But it also lets you use '!' as a "separator" the way C/C++/Java/etc.
> use '.'
> In the midst of a hierarchy of rules dealing with expressions, I have
> this rule:
>
> dotOpExpression:
>  unaryOps (
>  DOT^ dotOperand?
>  | BANG^ anyName?
>  )*
>  ;
>
> Here, the unaryOps, dotOperand, and anyName rules all eventually refer
> to Identifier.
> So the problem is that during the dotOpExpression processing, the
> unaryOps consumes
> the Identifier, including the '!'. So in trying to match "a!b", it
> fails, because it took "a!"
> as the Identifier and couldn't match the rest.
>
> So one solution is to take the '!' out of the Identifier rule, perhaps
> now calling it IdentifierNoBang,
> and then have alternative versions of other rules (unaryOpsNoBang,
> dotOperandNoBang, anyNameNoBang, etc).
> But that would be a huge mess.
>
> It seems like a syntactic predicate with "backtrack=true" should work
> here, but I can't quite see how.
> I want to say, in dotOpExpression, "try to match this pattern, but if
> that doesn't work, try again, but this
> time don't allow a '!' at the end of unaryOps". I can't see how to do
> that without all that rework to
> remove the '!' from Identifier.
>
>  Syntactic predicates only help ANTLR decide between alternatives, so
> you still need to be able to specify the alternates as standard rules.
> So you need some way to a specify an identifier with or without bang.
> Apart from duplicated rules the option is a gated semantic predicate
> with either a field or a rule parameters or a scope.
> I think with a field you might run into nesting issues, though not sure
> there.
> With parameters:
> dotOpExpression
>  : (identifier[false] BANG identifier[true])=>identifier BANG
> dotOpExpression
>  | unaryOps (DOT^ dotOperand?)
>  ;
>
> identifier[boolean allowBang]
>  : 'a'..'z'+
>  ( {allowBang}?=>BANG
>  | // Epsilon
>  )
>  ;
>
> Though then you have to always pass allowBang to your identifier rule,
> and will need to pass it down through various rules to get to
> identifier.
>
> You might be able to use scopes, but I think then you'd need to put
> them in a rule that all calls to identifier went through or else they
> wouldn't exist. So, I don't think dynamic scopes are suitable (I
> assume there is access to identifier not through dotOpExpression).
> Maybe you could add:
> scope IdentiferBang {
> boolean allow;
> }
> Then do:
> start
> scope identifierBang;
> @init {
>  identifierBang::allow = true;
> }
>  : ...
>  ;
>
> dotOpExprssion
> scope identifierBang;
>  : { identifierBang::allow = false; }
>  (unaryOps BANG anyName)=>unaryOps BANG^ dotOpExpression
>  | { identifierBang::allow = true; }
>  unaryOps (DOT^ dotOperand?)
>  ;
>
> identifier
>  : 'a'..'z'+
>  ( { identifierBang::allow }?=>BANG
>  | // Epsilon
>  )
> So if there's a call to dotOpExpression on the way to identifier it
> will get that copy of the scope, otherwise it will get the default
> copy of the scope from the start rule.
> Not especially clean, but it might work in lieu of a nicer solution.
>
> Tom.
>
>
>  Any ideas?
> Thanks,
> Andy
>
>
>
>
>
>
>
>
>

From rdclark at gmail.com  Thu Aug  9 18:40:01 2007
From: rdclark at gmail.com (Richard Clark)
Date: Thu, 9 Aug 2007 18:40:01 -0700
Subject: [antlr-interest] need help with predicates
In-Reply-To: <ebc876d70708091828h7c6aa3a9h7f915768c90f1b89@mail.gmail.com>
References: <46BB33E4.3080804@jazillian.com>
	<ebc876d70708090945u60d13caelb1871d174d4f9f35@mail.gmail.com>
	<46BB89EC.9060906@jazillian.com>
	<ebc876d70708091828h7c6aa3a9h7f915768c90f1b89@mail.gmail.com>
Message-ID: <d3992d900708091840p531476cah9ac90f907fde14e5@mail.gmail.com>

On 8/9/07, Thomas Brandon <tbrandonau at gmail.com> wrote:

> I think you shouldn't declare the use of the scope here. I believe
> that makes ANTLR push a new copy of the scope onto the stack. So here
> where you just want to use it you shouldn't declare it.

If you're declaring values to pass to subrules, declare it. If you're
reading values set by a parent or ancestor, don't declare it.

 ...Richard

From dirty at apple.com  Thu Aug  9 19:50:08 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Thu, 9 Aug 2007 19:50:08 -0700
Subject: [antlr-interest] error(10): internal error: TWalker.g :
	java.lang.IllegalArgumentException: Can't find
	template	tokenRefRuleRoot.st
In-Reply-To: <ebc876d70708090209x66238324wfe9df7c2814e8636@mail.gmail.com>
References: <382129CB-5E96-418E-8A7B-75D54FA84095@apple.com>
	<bc4938830708090157w1171dad2ofe849807e3640109@mail.gmail.com>
	<ebc876d70708090209x66238324wfe9df7c2814e8636@mail.gmail.com>
Message-ID: <D1DE26DF-158A-4320-AD5B-02F2FCF40D23@apple.com>

Based on some comments, I realized that I didn't understand tree  
grammars as well as I thought.  So looking back at section 8.2 in the  
ANTLR book, specifically at the implementations of CMinus.g and  
CMinusWalker.g, I realized that more complicated tree grammars don't  
look very similar to the parser grammar.

Here is the relevant portion from my parser grammar:

numeric_expression
	:	inclusive_or_expression
	;

inclusive_or_expression
	:	exclusive_or_expression ( whitespace! '|'^ whitespace!  
exclusive_or_expression )*
	;

exclusive_or_expression
	:	and_expression ( whitespace! '^'^ whitespace! and_expression )*
	;

and_expression
	:	shift_expression ( whitespace! '&'^ whitespace! shift_expression )*
	;

shift_expression
	:	additive_expression
		(
			whitespace!
			( '<<'^ | '>>'^ ) whitespace! additive_expression
		)*
	;

additive_expression
	:	multiplicative_expression
		(
			whitespace!
			( '+'^ | '-'^ ) whitespace! multiplicative_expression
		)*
	;

multiplicative_expression
	:	cast_expression
		(
			whitespace!
			( '*'^ | '/'^ | '%'^ ) whitespace! cast_expression
		)*
	;

cast_expression
	:	unary_expression
	;

unary_expression
	:	postfix_expression
	|	( '~'^ | '!'^ ) whitespace! cast_expression
	;

postfix_expression
	:	primary_expression
	;

primary_expression
	:	number_size -> ^( T_NUM number_size )
	|	'('! whitespace! numeric_expression whitespace! ')'!
	;

and here is the corresponding portion from the tree grammar:

numeric_expression
	:	^( '|' numeric_expression numeric_expression )
	|	^( '^' numeric_expression numeric_expression )
	|	^( '&' numeric_expression numeric_expression )
	|	^( '<<' numeric_expression numeric_expression )
	|	^( '>>' numeric_expression numeric_expression )
	|	^( '+' numeric_expression numeric_expression )
	|	^( '-' numeric_expression numeric_expression )
	|	^( '*' numeric_expression numeric_expression )
	|	^( '/' numeric_expression numeric_expression )
	|	^( '%' numeric_expression numeric_expression )
	|	^( '~' numeric_expression )
	|	^( '!' numeric_expression )
	|	^( T_NUM number_size )
	;

It doesn't give me that warning anymore, and I think it is correct...

Any comments?

Cameron Esfahani
dirty at apple.com

"Most people are bad programmers," says Joy. "The honest truth is  
that having a lot of people staring at the code does not find the  
really nasty bugs. The really nasty bugs are found by a couple of  
really smart people who just kill themselves. Most people looking at  
the code won't see anything ... You can't have thousands of people  
contributing and achieve a high standard."

Bill Joy on the myth of Linux's much touted "power in the masses"  
development benefits.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070809/10c29889/attachment-0001.html 

From tbrandonau at gmail.com  Thu Aug  9 20:46:53 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 10 Aug 2007 13:46:53 +1000
Subject: [antlr-interest] error(10): internal error: TWalker.g :
	java.lang.IllegalArgumentException: Can't find template
	tokenRefRuleRoot.st
In-Reply-To: <D1DE26DF-158A-4320-AD5B-02F2FCF40D23@apple.com>
References: <382129CB-5E96-418E-8A7B-75D54FA84095@apple.com>
	<bc4938830708090157w1171dad2ofe849807e3640109@mail.gmail.com>
	<ebc876d70708090209x66238324wfe9df7c2814e8636@mail.gmail.com>
	<D1DE26DF-158A-4320-AD5B-02F2FCF40D23@apple.com>
Message-ID: <ebc876d70708092046j684dc285p3d91821dfc0aae14@mail.gmail.com>

On 8/10/07, Cameron Esfahani <dirty at apple.com> wrote:
>
> Based on some comments, I realized that I didn't understand tree grammars as
> well as I thought.  So looking back at section 8.2 in the ANTLR book,
> specifically at the implementations of CMinus.g and CMinusWalker.g, I
> realized that more complicated tree grammars don't look very similar to the
> parser grammar.
>
> Here is the relevant portion from my parser grammar:
>
> numeric_expression
>  : inclusive_or_expression
>  ;
>
> inclusive_or_expression
>  : exclusive_or_expression ( whitespace! '|'^ whitespace!
> exclusive_or_expression )*
>  ;
>
> exclusive_or_expression
>  : and_expression ( whitespace! '^'^ whitespace! and_expression )*
>  ;
>
> and_expression
>  : shift_expression ( whitespace! '&'^ whitespace! shift_expression )*
>  ;
>
> shift_expression
>  : additive_expression
>  (
>  whitespace!
>  ( '<<'^ | '>>'^ ) whitespace! additive_expression
>  )*
>  ;
>
> additive_expression
>  : multiplicative_expression
>  (
>  whitespace!
>  ( '+'^ | '-'^ ) whitespace! multiplicative_expression
>  )*
>  ;
>
> multiplicative_expression
>  : cast_expression
>  (
>  whitespace!
>  ( '*'^ | '/'^ | '%'^ ) whitespace! cast_expression
>  )*
>  ;
>
> cast_expression
>  : unary_expression
>  ;
>
> unary_expression
>  : postfix_expression
>  | ( '~'^ | '!'^ ) whitespace! cast_expression
>  ;
>
> postfix_expression
>  : primary_expression
>  ;
>
> primary_expression
>  : number_size -> ^( T_NUM number_size )
>  | '('! whitespace! numeric_expression whitespace! ')'!
>  ;
>
> and here is the corresponding portion from the tree grammar:
>
> numeric_expression
>  : ^( '|' numeric_expression numeric_expression )
>  | ^( '^' numeric_expression numeric_expression )
>  | ^( '&' numeric_expression numeric_expression )
>  | ^( '<<' numeric_expression numeric_expression )
>  | ^( '>>' numeric_expression numeric_expression )
>  | ^( '+' numeric_expression numeric_expression )
>  | ^( '-' numeric_expression numeric_expression )
>  | ^( '*' numeric_expression numeric_expression )
>  | ^( '/' numeric_expression numeric_expression )
>  | ^( '%' numeric_expression numeric_expression )
>  | ^( '~' numeric_expression )
>  | ^( '!' numeric_expression )
>  | ^( T_NUM number_size )
>  ;
>
> It doesn't give me that warning anymore, and I think it is correct...
>
> Any comments?
Ah right, your error was in a tree grammar. Then the error would be
that you cannot use ^ and ! operators in a tree grammar at all (well,
when tree rewrites are introduced you may be able to, assuming
operators are allowed as well as rewrites). You use the ^( ... )
construct instead of TOKEN^ and ! is not allowed in tree parsers.
Using rewrite rules rather than operators in your parser is
particularly useful when you have a tree grammar after your parser as
then you just need to remove the LHS of all rewrites in order to
derive the tree grammar rather than the larger scale rewriting the use
of operators entails.

e.g. where:
and_expression:
  shift_expression ( whitespace! '&'^ whitespace! shift_expression )*
  ;
must be changed to something like:
and_expression:
  ^( '&' numeric_expression numeric_expression )
  ;

If you have:
and_expression:
  shift_expression (whitespace '&' whitespace shift_expression
    -> ^( '&' shift_expression shift_expression )
  ;
Then this you just remove the LHS to get:
and_expression:
  ^( '&' shift_expression shift_expression )
  ;
(Of course you can also collapse the expression hierarchy like you did
by converting everything to numeric_expression)

Tom.
>
> Cameron Esfahani
> dirty at apple.com
>
> "Most people are bad programmers," says Joy. "The honest truth is that
> having a lot of people staring at the code does not find the really nasty
> bugs. The really nasty bugs are found by a couple of really smart people who
> just kill themselves. Most people looking at the code won't see anything ...
> You can't have thousands of people contributing and achieve a high
> standard."
>
> Bill Joy on the myth of Linux's much touted "power in the masses"
> development benefits.
>
>

From jimi at temporal-wave.com  Thu Aug  9 22:34:17 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 9 Aug 2007 22:34:17 -0700
Subject: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
In-Reply-To: <46B9E87D.2020605@gmx.de>
References: <46B9CB9D.4000606@kortmann.de>	<F6DA0944-A2AC-48E1-913D-E27BADC8063C@classdump.org>	<46B9D6DC.1060804@kortmann.de><46B9D7B8.1060705@gmx.de>
	<46B9DA4B.3030907@kortmann.de> <46B9E87D.2020605@gmx.de>
Message-ID: <051466DAA0D608439E196797955018D70235AD@wavemachine.temporal-wave.com>

ANTLRWorks debugging for the C target is not yet implemented. In general
I use Visual Studio or gdb and debug the C directly. It will be
forthcoming, but there are 50 other things to do too :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Wednesday, August 08, 2007 9:00 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLR V3, ANTLRWorks and C/C++ Target
> 
> Martin Kortmann wrote:
> > D:\Martins\Entwicklung\test_antlr>java -cp
> > antlr-3.0.jar;antlr-runtime-3.0.jar;stringtemplate-3.0.j
> > ar;antlr-2.7.7.jar org.antlr.Tool -debug -o outdir test.g
> > ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> > error(10):  internal error: group CDbg line 33: template outputFile
> has
> > no region called imports
> >
> > error(10):  internal error: group CDbg line 78: template
> genericParser
> > has no region called superClassName
> >
> > error(10):  internal error: group CDbg line 160: template dfaState
> has
> > no region called noViableAltException
> >
> > error(10):  internal error: group CDbg line 162: template
> dfaStateSwitch
> > has no region called noViableAltException
> >
> > D:\Martins\Entwicklung\test_antlr>
> >
> >
> >
> > Thank you, the same problem
> >
> > Martin
> 
> I just remembered that the newest daily build broke all languages
> (except Java) at least for debugging. I'm not sure when that is fixed
> but for now you can use an older version and hope that you don't
> stumble
> on an already fixed bug.
> 
> Best regards,
> Johannes Luber

From jimi at temporal-wave.com  Thu Aug  9 22:36:47 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 9 Aug 2007 22:36:47 -0700
Subject: [antlr-interest] C Runtime - Duplicate symbols defined inparser
	and lexer
In-Reply-To: <CCE2A138-C24C-4951-94EB-EE18BB17706A@classdump.org>
References: <860F1A82-4AA6-44E7-BAE0-D9BDE58A086E@apple.com>
	<CCE2A138-C24C-4951-94EB-EE18BB17706A@classdump.org>
Message-ID: <051466DAA0D608439E196797955018D70235AE@wavemachine.temporal-wave.com>

This is actually already fixed in the current source - it was just that the cdfa was not declared static and should have been.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kay Roepke
> Sent: Tuesday, August 07, 2007 1:05 AM
> To: Cameron Esfahani
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C Runtime - Duplicate symbols defined
> inparser and lexer
> 
> 
> On Aug 6, 2007, at 10:58 PM, Cameron Esfahani wrote:
> 
> > Specifically, the symbol is named cdfa14.  And sure enough, when I
> > open TParser.c and TLexer.c, there is a symbol named that in both.
> >
> > Anyone have any ideas?
> 
> Those are global arrays, right? Maybe the C target should use
> different prefixes for DFAs in lexers and parsers. That's what I did
> with ObjC.
> I simply prefix all generated global symbols with the recognizer's
> name (arrays CLexer_DFA42, @class CParser_program_return, etc.) to
> work around
> this issue.
> 
> You might get away with changing the C.stg template file and sticking
> that in front of the classpath, until this issue is resolved.
> 
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 


From eric.crahen.lists at gmail.com  Fri Aug 10 11:09:25 2007
From: eric.crahen.lists at gmail.com (Eric Crahen)
Date: Fri, 10 Aug 2007 11:09:25 -0700
Subject: [antlr-interest] Creating an AST from a Parsers output
Message-ID: <ed0c429e0708101109i1cf8ebe3s8aff25642fe3b2a3@mail.gmail.com>

I'd like to create an AST representation of a Java source file, not the
grammar for the language, a source file. I can't seem to find any way to
actually convert the output of a Lexer or Parser into a Tree. One of the
classes in the tree package, DOTTreeGenerator seems like it might have been
a step in this direction, but the Lexer and Parser classes generated with
ANTRL 3.0 don't have the e() method.

/** A utility class to generate DOT diagrams (graphviz) from
 *  arbitrary trees.  You can pass in your own templates and
 *  can pass in any kind of tree or use Tree interface method.
 *  I wanted this separator so that you don't have to include
 *  ST just to use the org.antlr.runtime.tree.* package.
 *  This is a set of non-static methods so you can subclass
 *  to override.  For example, here is an invocation:
 *
 *      CharStream input = new ANTLRInputStream(System.in);
 *      TLexer lex = new TLexer(input);
 *      CommonTokenStream tokens = new CommonTokenStream(lex);
 *      TParser parser = new TParser(tokens);
 *      TParser.e_return r = parser.e();
 *      Tree t = (Tree)r.tree;
 *      System.out.println(t.toStringTree());
 *      DOTTreeGenerator gen = new DOTTreeGenerator();
 *      StringTemplate st = gen.toDOT(t);
 *      System.out.println(st);
 */

Is there any way to accomplish this with ANTLR?

-- 

- Eric
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070810/0620015f/attachment.html 

From antlr at jazillian.com  Fri Aug 10 13:20:45 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 10 Aug 2007 16:20:45 -0400
Subject: [antlr-interest] need help with predicates
In-Reply-To: <46BB438E.8040001@gmx.de>
References: <46BB33E4.3080804@jazillian.com> <46BB438E.8040001@gmx.de>
Message-ID: <46BCC89D.5080007@jazillian.com>

Johannes Luber wrote
>> Why don't you test, when you encounter at the identifier the bang, if
>> input.LT(1) is a space? If not then it can't be a suffixed bang. (What
>> does "a!" actually mean in VB?)
>>     
Yes, Alexandre pointed out that spacing does matter in VB.
The "!" operator can't be followed by a space.
On the other hand, the "!" suffix isn't necessarily followed by a space 
either.
So, I've added a simple syntactic predicate. If the character after the "!"
is a letter, I assume the "!" is the binary operator, otherwise its the 
suffix:

Identifier:
         ...
          ('!' ~(LETTER)) => '!'
        ...

Thanks Johannes, Tom, and Alexandre!
Andy

From ayende at ayende.com  Fri Aug 10 20:04:07 2007
From: ayende at ayende.com (Ayende Rahien)
Date: Sat, 11 Aug 2007 05:04:07 +0200
Subject: [antlr-interest] Combining += with returns and actions
Message-ID: <27d8d0930708102004h1555a680t5b9679e72db3c5ec@mail.gmail.com>

I have run into a snag when building a dialect with ANTLR 3, I have the
following:

selectClause[Query q]
    :    SELECT
        mr+=memberReference (COMMA mr+=memberReference)*
        {
            q.AddSelection($mr);
        }
    ;

Where memberReference is defined as:

memberReference returns[MemberReferenceExpression Reference]
    :    ids+=IDENTIFIER (DOT ids+=IDENTIFIER)?
    {
        $Reference = new MemberReferenceExpression();
        foreach(IToken token in $ids)
        {
            $Reference.AddReference(token.Text);
        }

    };


My problem is that I would like to get a list of MemberReferenceExpression,
but what I end up getting is a list of tree.
The problem is here:
PushFollow(FOLLOW_memberReference_in_selectClause76);
mr = memberReference();
followingStackPointer_--;

adaptor.AddChild(root_0, mr.Tree);
if (list_mr == null) list_mr = new ArrayList();
list_mr.Add(mr.Tree); // <-- I want to get mr.Reference, not mr.Tree

Any idea how to solve that?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070811/1b298ca3/attachment.html 

From ayende at ayende.com  Fri Aug 10 20:15:32 2007
From: ayende at ayende.com (Ayende Rahien)
Date: Sat, 11 Aug 2007 05:15:32 +0200
Subject: [antlr-interest] Combining += with returns and actions
In-Reply-To: <27d8d0930708102004h1555a680t5b9679e72db3c5ec@mail.gmail.com>
References: <27d8d0930708102004h1555a680t5b9679e72db3c5ec@mail.gmail.com>
Message-ID: <27d8d0930708102015m3742734at81734df86cc05f04@mail.gmail.com>

Never mind about that, solved it with:
memberReference[IClauseWithMember clause]
    :    ids+=IDENTIFIER (DOT ids+=IDENTIFIER)?
    {
        MemberReferenceExpression r= new MemberReferenceExpression();
        foreach(IToken token in $ids)
        {
            r.AddReference(token.Text);
        }
        clause.AddReference(r);
    };

On 8/11/07, Ayende Rahien <ayende at ayende.com> wrote:
>
> I have run into a snag when building a dialect with ANTLR 3, I have the
> following:
>
> selectClause[Query q]
>     :    SELECT
>         mr+=memberReference (COMMA mr+=memberReference)*
>         {
>             q.AddSelection ($mr);
>         }
>     ;
>
> Where memberReference is defined as:
>
> memberReference returns[MemberReferenceExpression Reference]
>     :    ids+=IDENTIFIER (DOT ids+=IDENTIFIER)?
>     {
>         $Reference = new MemberReferenceExpression();
>         foreach(IToken token in $ids)
>         {
>             $Reference.AddReference(token.Text);
>         }
>
>     };
>
>
> My problem is that I would like to get a list of
> MemberReferenceExpression, but what I end up getting is a list of tree.
> The problem is here:
> PushFollow(FOLLOW_memberReference_in_selectClause76);
> mr = memberReference();
> followingStackPointer_--;
>
> adaptor.AddChild(root_0, mr.Tree);
> if (list_mr == null) list_mr = new ArrayList();
> list_mr.Add(mr.Tree); // <-- I want to get mr.Reference, not mr.Tree
>
> Any idea how to solve that?
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070811/51525798/attachment.html 

From ulf at ofahrt.de  Sat Aug 11 11:50:50 2007
From: ulf at ofahrt.de (Ulf Ochsenfahrt)
Date: Sat, 11 Aug 2007 20:50:50 +0200
Subject: [antlr-interest] specialStateTransition too big for Java
	(AntLR3)
Message-ID: <46BE050A.8010004@ofahrt.de>

Hi there,

I'm also currently building an antlr php grammar and have run into the
very same problem. The problem is that antlr generates an extremely long
specialStateTransition method (over 10000 lines) when a couple of lexer
rules (13 rules) have semantic predicates.

Has anyone solved this problem?

Cheers,

-- Ulf

> Hi,
> 
> The problem is common and it has to do with the generated method tht
> is is too big.
> In fact, found this on the jvm spec:
> http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.html
> (..)
> The static constraints on the instructions in the code array are as follows:
>     * The value of the code_length item must be less than 65536.
> (...)
> 
> You can break the rule that's giving you that error in two rules. I
> just though on posting the jvm spec here so people don't think it's a
> antlr error, but instead a feature specified by the jvm spec.
> 
> Greetings,
> Miguel Ping
> 
> On 5/4/07, Ruben Fonseca <rubenfonseca at di.uminho.pt> wrote:
>> Hi!
>>
>> I'm using AntLR3 to build a PHP parser. I need to get rid of HTML. In
>> order to do this I implemented a syntatic predicate on my Lexer, to see
>> if I'm getting HTML or PHP tokens (see an example
>> http://svn.perl.org/viewcvs/parrot/trunk/languages/plumhead/src/antlr3/Plumhead.g?view=markup
>> )
>>
>> The problem is that when I generate the Java code with AntLR3, I can't
>> compile the code, because of the following error:
>>
>> The code of method specialStateTransition(int, IntStream) is exceeding
>> the 65535 bytes limit	WebAppViewer/antlr3/php	phpLexer.java	line 3894
>>
>> I'm guessing my Lexer is too complex or has too many tokens? Does anyone
>> experienced the same problem before? Thanks for the advice.
>>
>> Ruben.
>>
>>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3715 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070811/4963640b/attachment.bin 

From jimi at temporal-wave.com  Sat Aug 11 12:08:39 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 11 Aug 2007 12:08:39 -0700
Subject: [antlr-interest] Combining += with returns and actions
In-Reply-To: <27d8d0930708102004h1555a680t5b9679e72db3c5ec@mail.gmail.com>
References: <27d8d0930708102004h1555a680t5b9679e72db3c5ec@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D70235D9@wavemachine.temporal-wave.com>

Try

 

mr1=memberReference {q.AddSelect($mr1.Reference) } (COMMA
m2=memberReference {q.AddSelect($mr2.Reference) })*

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ayende Rahien
Sent: Friday, August 10, 2007 8:04 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Combining += with returns and actions

 

I have run into a snag when building a dialect with ANTLR 3, I have the
following:

selectClause[Query q]
    :    SELECT 
        mr+=memberReference (COMMA mr+=memberReference)*
        {
            q.AddSelection ($mr);
        }
    ;

Where memberReference is defined as:

memberReference returns[MemberReferenceExpression Reference]
    :    ids+=IDENTIFIER (DOT ids+=IDENTIFIER)? 
    {
        $Reference = new MemberReferenceExpression(); 
        foreach(IToken token in $ids)
        {
            $Reference.AddReference(token.Text);
        }
        
    };


My problem is that I would like to get a list of
MemberReferenceExpression, but what I end up getting is a list of tree. 
The problem is here:
PushFollow(FOLLOW_memberReference_in_selectClause76);
mr = memberReference();
followingStackPointer_--;

adaptor.AddChild(root_0, mr.Tree);
if (list_mr == null) list_mr = new ArrayList(); 
list_mr.Add(mr.Tree); // <-- I want to get mr.Reference, not mr.Tree

Any idea how to solve that?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070811/00c9bf68/attachment.html 

From jimi at temporal-wave.com  Sat Aug 11 12:09:57 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 11 Aug 2007 12:09:57 -0700
Subject: [antlr-interest] specialStateTransition too big for Java(AntLR3)
In-Reply-To: <46BE050A.8010004@ofahrt.de>
References: <46BE050A.8010004@ofahrt.de>
Message-ID: <051466DAA0D608439E196797955018D70235DA@wavemachine.temporal-wave.com>

Show us your lexer rules and maybe we can help simplify them a little.
That usually helps as you can express the differences in a more natural
manner and reduce the number of lexer states.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ulf Ochsenfahrt
> Sent: Saturday, August 11, 2007 11:51 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] specialStateTransition too big for
> Java(AntLR3)
> 
> Hi there,
> 
> I'm also currently building an antlr php grammar and have run into the
> very same problem. The problem is that antlr generates an extremely
> long
> specialStateTransition method (over 10000 lines) when a couple of
lexer
> rules (13 rules) have semantic predicates.
> 
> Has anyone solved this problem?
> 
> Cheers,
> 
> -- Ulf
> 
> > Hi,
> >
> > The problem is common and it has to do with the generated method tht
> > is is too big.
> > In fact, found this on the jvm spec:
> >
>
http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.h
> tml
> > (..)
> > The static constraints on the instructions in the code array are as
> follows:
> >     * The value of the code_length item must be less than 65536.
> > (...)
> >
> > You can break the rule that's giving you that error in two rules. I
> > just though on posting the jvm spec here so people don't think it's
a
> > antlr error, but instead a feature specified by the jvm spec.
> >
> > Greetings,
> > Miguel Ping
> >
> > On 5/4/07, Ruben Fonseca <rubenfonseca at di.uminho.pt> wrote:
> >> Hi!
> >>
> >> I'm using AntLR3 to build a PHP parser. I need to get rid of HTML.
> In
> >> order to do this I implemented a syntatic predicate on my Lexer, to
> see
> >> if I'm getting HTML or PHP tokens (see an example
> >>
>
http://svn.perl.org/viewcvs/parrot/trunk/languages/plumhead/src/antlr3/
> Plumhead.g?view=markup
> >> )
> >>
> >> The problem is that when I generate the Java code with AntLR3, I
> can't
> >> compile the code, because of the following error:
> >>
> >> The code of method specialStateTransition(int, IntStream) is
> exceeding
> >> the 65535 bytes limit	WebAppViewer/antlr3/php	phpLexer.java
> 	line 3894
> >>
> >> I'm guessing my Lexer is too complex or has too many tokens? Does
> anyone
> >> experienced the same problem before? Thanks for the advice.
> >>
> >> Ruben.
> >>
> >>

From ulf at ofahrt.de  Sat Aug 11 12:55:40 2007
From: ulf at ofahrt.de (Ulf Ochsenfahrt)
Date: Sat, 11 Aug 2007 21:55:40 +0200
Subject: [antlr-interest] specialStateTransition too big for Java(AntLR3)
In-Reply-To: <051466DAA0D608439E196797955018D70235DA@wavemachine.temporal-wave.com>
References: <46BE050A.8010004@ofahrt.de>
	<051466DAA0D608439E196797955018D70235DA@wavemachine.temporal-wave.com>
Message-ID: <46BE143C.9050402@ofahrt.de>

Jim Idle wrote:
> Show us your lexer rules and maybe we can help simplify them a little.
> That usually helps as you can express the differences in a more natural
> manner and reduce the number of lexer states.
> 
> Jim

Sure.

The grammar is here:
http://users.conquer-space.net/~ulf/jphp/Php.g3
(for now, I assume that the grammar falls under the PHP license)

The state enum for the lexer is here:
http://users.conquer-space.net/~ulf/jphp/LexicalState.java

If you want to compile the parser, you'll have to remove the actions 
from the parser rules.

The lexer is far from complete, and it needs several states (I count 13 
different states in the original PHP grammar). If you know a way to 
achieve the same with fewer or no lexer states, I'd be very interested 
to hear that.

The goal is for the grammar to accept the same language as the original 
PHP grammar. I believe that it does not do it right now: the keywords 
probably also need to be predicated on the current lexer state. I havn't 
tested it, but at this time, they probably also match T_INLINE_HTML tokens.

Any feedback is welcome.

Cheers,

-- Ulf
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3715 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070811/6d8c1950/attachment.bin 

From xkrebstarx at gmail.com  Sat Aug 11 14:51:56 2007
From: xkrebstarx at gmail.com (xkrebstarx)
Date: Sat, 11 Aug 2007 17:51:56 -0400
Subject: [antlr-interest] Rule rewrite confusion!
Message-ID: <47213a9b0708111451x20bd68f0k36ae2d4cdd4aff1e@mail.gmail.com>

Hey everybody,

The problem in general is a production of the form, where A,B,C,X,Y,Z are
either non-terminals or terminals and the ^ attribute indicates that we
would like this terminal or non-terminal to be the root of the AST

    A    :    B ( X^ | Y^ | Z^ ) C
        ;

where

    X    :     X -> ^(IMAGINARY_NODE X)

and I would like to include the IMAGINARY_NODE as part of production A and
not of production X.



A production like this is a problem when writing the AST since we must
specify the AST's form after the rule, like this...

    A    :    B ( X | Y | Z ) C
            -> ^( (IMAGINARY_NODE X)|Y|Z ) B C
        ;

However, we cannot have a choice in a rewrite as the root node for an AST.
We can write the rewrite mid-rule, like this...

    A    :    B ( X -> ^(IMAGINARY_NODE X B C)
            | Y   -> ^(Y B C)
            | Z   -> ^(Z B C)
            ) C
        ;

    X    :    X
        ;
but we do not know what C is yet.

How can this be fixed?

Thanks,
xkrebstarx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070811/cf8531bf/attachment.html 

From kroepke at classdump.org  Sat Aug 11 15:04:44 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 12 Aug 2007 00:04:44 +0200
Subject: [antlr-interest] Rule rewrite confusion!
In-Reply-To: <47213a9b0708111451x20bd68f0k36ae2d4cdd4aff1e@mail.gmail.com>
References: <47213a9b0708111451x20bd68f0k36ae2d4cdd4aff1e@mail.gmail.com>
Message-ID: <47DE37DA-9026-46A9-8165-741EE1DB105A@classdump.org>

Hi!

On Aug 11, 2007, at 11:51 PM, xkrebstarx wrote:

> However, we cannot have a choice in a rewrite as the root node for  
> an AST.
> We can write the rewrite mid-rule, like this...
>
>     A    :    B ( X -> ^(IMAGINARY_NODE X B C)
>             | Y   -> ^(Y B C)
>             | Z   -> ^(Z B C)
>             ) C
>         ;
>
>     X    :    X
>         ;
> but we do not know what C is yet.
>
> How can this be fixed?

Rewrite rules always set the tree for the whole rule. Because of that  
you can refer to the previously built tree using $rulename.
Please note that in ANTLR parser rules must begin with a lowercase  
letter, thus your example is bound to cause confusion.

In ANTLR notation you'd do something like this:

a  :  B
       (  x   -> ^(IMAGINARY_NODE x B)
       |  Y   -> ^(Y B)
       |  Z   -> ^(Z B)
       )
       C  -> ^($a C)
    ;

x  :  X
    ;


This will built the tree you want by refering to the result of the  
rewrite rule of one of the alts.
Of course, any sort of nesting would work if you have complex  
requirements. You can also insert actions
into rewrite rules, if you have requirements that cannot (easily) be  
expressed declaratively.


HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From mbarringer at suse.de  Sat Aug 11 17:34:22 2007
From: mbarringer at suse.de (Matt Barringer)
Date: Sat, 11 Aug 2007 17:34:22 -0700 (PDT)
Subject: [antlr-interest] syntactic predicates in the lexer
Message-ID: <Pine.LNX.4.64.0708111712510.14901@eluvium.int.wirex.com>

Hi,

I'm trying to parse some strange syntax that looks like this:

# Comment
#Comment
#include <file>
include <file>
# include (this is a valid comment)

Where lines 1, 2, and 5 should be COMMENT tokens, as they need to remain 
on the main token stream with all the others, and lines 3 & 4 need to be 
INCLUDE tokens.

With ANTLR2, I used a predicate like this, which worked fine:

COMMENT_OR_INCLUDE 
	:
( '#' "include" (' '|'<'))=>INCLUDE 
	{ $setType(INCLUDE); }
| ( COMMENT{ $setType(COMMENT); } )
        ;

Trying that predicate using the C target of ANTLR 3 causes a compiler 
error about a missing REWINDFULL() function or something, so I tried this 
with no success, as COMMENT tokens are all that are found:

COMMENT_OR_INCLUDE
	: '#' ('include')=>INCLUDE
		{ $type = INCLUDE; }
	| '#' COMMENT
		{ $type=COMMENT; }
	;

fragment
COMMENT
	: (~('\n'|'\r'))* ('\n'|'\r'('\n')?)
	;

Trying variations on this didn't work, either:

COMMENT_OR_INCLUDE
	: '#'
	( INCLUDE
	| COMMENT )
	;

Does the lexer no longer support syntactic predicates?  Is there a better 
way to distinguish '# include' from '#include' in the lexer?

Thanks,
Matt

From jimi at temporal-wave.com  Sat Aug 11 22:02:44 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 11 Aug 2007 22:02:44 -0700
Subject: [antlr-interest] syntactic predicates in the lexer
In-Reply-To: <Pine.LNX.4.64.0708111712510.14901@eluvium.int.wirex.com>
References: <Pine.LNX.4.64.0708111712510.14901@eluvium.int.wirex.com>
Message-ID: <051466DAA0D608439E196797955018D70235DE@wavemachine.temporal-wave.com>

You need the latest and greatest to get rid of that macro error, however
the answer to this does not lie specifically with the C target but just
the lexing in general. The thing to do is to consider how/if you can
write the rules without the predicates (which although they are 'always
execute', can be discarded in the analysis phase if there appears to be
just one decision.

So, here you have a number of tokesn that start with '#' (well, 2 I
guess) and the key is to key one rule from the '#' and then set the
token type once you discover what comes next:

// Make some fragments to define the token and avoid
// the warning about tokens not being defined if they
// are only specified as imaginary in the tokens{} section
//
fragment
COMMENT: (~('\n'|'\r'))*;
fragment
INCLUDE: 'include;

C_OR_I: '#'
		(
			  (('include')=>'include')	{ $type =
INCLUDE; }
			| COMMENT				{ $type
= COMMENT;}
		)
	;

Should do what you wish (you can obviously modify the COMMENT rule if
you wish it to consume the EOL sequence).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Matt Barringer
> Sent: Saturday, August 11, 2007 5:34 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] syntactic predicates in the lexer
> 
> Hi,
> 
> I'm trying to parse some strange syntax that looks like this:
> 
> # Comment
> #Comment
> #include <file>
> include <file>
> # include (this is a valid comment)
> 
> Where lines 1, 2, and 5 should be COMMENT tokens, as they need to
> remain
> on the main token stream with all the others, and lines 3 & 4 need to
> be
> INCLUDE tokens.
> 
> With ANTLR2, I used a predicate like this, which worked fine:
> 
> COMMENT_OR_INCLUDE
> 	:
> ( '#' "include" (' '|'<'))=>INCLUDE
> 	{ $setType(INCLUDE); }
> | ( COMMENT{ $setType(COMMENT); } )
>         ;
> 
> Trying that predicate using the C target of ANTLR 3 causes a compiler
> error about a missing REWINDFULL() function or something, so I tried
> this
> with no success, as COMMENT tokens are all that are found:
> 
> COMMENT_OR_INCLUDE
> 	: '#' ('include')=>INCLUDE
> 		{ $type = INCLUDE; }
> 	| '#' COMMENT
> 		{ $type=COMMENT; }
> 	;
> 
> fragment
> COMMENT
> 	: (~('\n'|'\r'))* ('\n'|'\r'('\n')?)
> 	;
> 
> Trying variations on this didn't work, either:
> 
> COMMENT_OR_INCLUDE
> 	: '#'
> 	( INCLUDE
> 	| COMMENT )
> 	;
> 
> Does the lexer no longer support syntactic predicates?  Is there a
> better
> way to distinguish '# include' from '#include' in the lexer?
> 
> Thanks,
> Matt

From dave at badgers-in-foil.co.uk  Sun Aug 12 04:13:31 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Sun, 12 Aug 2007 11:13:31 +0000
Subject: [antlr-interest] Creating an AST from a Parsers output
In-Reply-To: <ed0c429e0708101109i1cf8ebe3s8aff25642fe3b2a3@mail.gmail.com>
References: <ed0c429e0708101109i1cf8ebe3s8aff25642fe3b2a3@mail.gmail.com>
Message-ID: <20070812111331.GA24684@badgers-in-foil.co.uk>

On Fri, Aug 10, 2007 at 11:09:25AM -0700, Eric Crahen wrote:
> I'd like to create an AST representation of a Java source file, not the
> grammar for the language, a source file. I can't seem to find any way to
> actually convert the output of a Lexer or Parser into a Tree. One of the
> classes in the tree package, DOTTreeGenerator seems like it might have been
> a step in this direction, but the Lexer and Parser classes generated with
> ANTRL 3.0 don't have the e() method.

The reference to an 'e()' method is based on an example grammar defining
a rule called 'e'.  You should replace e() with a method call relevant
to the grammar you are using, e.g. compilationUnit().

To have ANTLRv3 parser create AST's, you need the grammar to specify the
option 'output=AST'.  With this option enabled, it becomes possible to
retrieve the AST produced by a rule from the rule return value (i.e. the
'Tree t = (Tree)r.tree' line in the example you found).

IIRC, the example Java grammars supplied with ANTLR don't build trees,
but I think someone on this list was working on a version that does..?


ta,
dave

-- 
http://david.holroyd.me.uk/

From chris at lambrou.net  Sun Aug 12 15:58:40 2007
From: chris at lambrou.net (Chris Lambrou)
Date: Sun, 12 Aug 2007 23:58:40 +0100
Subject: [antlr-interest] New member
In-Reply-To: <70bbae280708121549g1acb6687wddc3dd39e9a30b81@mail.gmail.com>
References: <70bbae280708121549g1acb6687wddc3dd39e9a30b81@mail.gmail.com>
Message-ID: <70bbae280708121558l3472f3d5t72aa8c337f2be110@mail.gmail.com>

Hi all,

I'm new to ANTLR and new to this list, and am having some frustrating
problems with recursion in grammar definitions. Is there an easy way to
search through old messages posted to this mailing list? The only access I
can find to old postings is via
http://www.antlr.org/pipermail/antlr-interest/, which doesn't appear to
offer a search facility. I don't want to spam this mail list with trivial
questions if the answers can be easily found in the archives.

Thanks,

Chris


P.S. Sorry if this message is a duplicate. I've been having problems with
message filtering on this list and GMail's from: and reply-to: address
behaviour.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070812/5f1a9ce5/attachment.html 

From porcelli at uol.com.br  Sun Aug 12 17:21:38 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Sun, 12 Aug 2007 21:21:38 -0300
Subject: [antlr-interest] New member
In-Reply-To: <70bbae280708121558l3472f3d5t72aa8c337f2be110@mail.gmail.com>
References: <70bbae280708121549g1acb6687wddc3dd39e9a30b81@mail.gmail.com>
	<70bbae280708121558l3472f3d5t72aa8c337f2be110@mail.gmail.com>
Message-ID: <ee873c070708121721i7e8f0d7ah2fb9d7a56f88d151@mail.gmail.com>

Try it: http://groups.google.com/group/il-antlr-interest

On 8/12/07, Chris Lambrou <chris at lambrou.net> wrote:
> Hi all,
>
> I'm new to ANTLR and new to this list, and am having some frustrating
> problems with recursion in grammar definitions. Is there an easy way to
> search through old messages posted to this mailing list? The only access I
> can find to old postings is via
> http://www.antlr.org/pipermail/antlr-interest/, which
> doesn't appear to offer a search facility. I don't want to spam this mail
> list with trivial questions if the answers can be easily found in the
> archives.
>
> Thanks,
>
> Chris
>
>
> P.S. Sorry if this message is a duplicate. I've been having problems with
> message filtering on this list and GMail's from: and reply-to: address
> behaviour.
>

From andrew at pietschy.com  Sun Aug 12 17:59:53 2007
From: andrew at pietschy.com (Andrew Pietsch)
Date: Mon, 13 Aug 2007 10:59:53 +1000
Subject: [antlr-interest] (newbie) Grammar question
Message-ID: <c56870600708121759gaef31c7ldad963b7d33f7215@mail.gmail.com>

Hi all,

I've created a simple grammar for a value model binding framework I've been
playing with.  It's working well and currently lets me evaluated simple
statements for Javabean properties like:

bean1.enabled = bean2.value && !bean2.value

Now I'd like to add support for null and numerical tests like:

bean1.enabled = bean2.value != null && bean3.value > 0

My main issue is how to allow statements like !bean.enabled while preventing
statements like bean.value < !5.

Any advise on standard approaches to this kind of thing is greatly
appreciated.  My current grammar file is as follows:

stat    : PROPERTY '='! expr;
expr    : natom (oper^ natom)*;
natom    :    NOT^? atom;
atom    : PROPERTY | '(' expr ')' -> expr
    ;
oper    :  AND | OR | EQ | NEQ;

PROPERTY : ID ('.' ID)?;
WS      : ( ' ' | '\t' | '\n' | '\r' )  { $channel = HIDDEN; };

LPAREN  :     '(' ;
RPAREN  :     ')' ;
AND    :     '&&';
OR    :     '||';
EQ    :    '==';
NEQ     :    '!=';
LT    :    '<';
LTE    :    '<=';
GT    :    '>';
GTE    :    '>=';
NOT    :    '!';

fragment ID   : ALPHA (ALPHA | NON_ALPHA)*;

fragment ALPHA  :   ('a'..'z'|'A'..'Z')+ ;

fragment NON_ALPHA
    :    INT
    |     '-'
    |     '_'
    ;

fragment INT :   '0'..'9'+;

Thanks in advance
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/94b653d0/attachment.html 

From chris at lambrou.net  Sun Aug 12 19:25:58 2007
From: chris at lambrou.net (Chris Lambrou)
Date: Mon, 13 Aug 2007 03:25:58 +0100
Subject: [antlr-interest] error(211) in grammars with recursion
Message-ID: <70bbae280708121925q1072f29bnae4fa6ab8e29641f@mail.gmail.com>

Hi,

I'm trying to create a parser for Java-like expressions, and have started
using the Java.g file presented on the ANTLR web site (
http://www.antlr.org/grammar/1152141644268/Java.g) as a base to work from.
I've been running into error(211) and I'm not sure what the problem is. The
full error text is:

rule Tokens has non-LL(*) decision due to recursive rule invocations
reachable from alts 1,2,3.  Resolve by left-factoring or using syntactic
predicates or using backtrack=true option.

I've managed to duplicate the error in a much simpler grammar, shown below.
The grammar is for simple arithmetic rules that only involve numbers, the
plus and minus operators, and parentheses, e.g.  (5 + 9) - (3 + (4 - 1)) -
the key rules that relate to the problem are Expression, UnaryExpression and
ParenthesisedExpression. The error message suggests three approaches to
solving the problem: left-factoring, use of syntactic predicates or use of
the backtrack option. The backtrack option doesn't help (backtrack=true is
already specified), I don't see how left-factoring will help, and I don't
yet understand syntactic predicates, or how they might apply to the problem.

Having searched the mailing list archives, the only relevant comment seems
to be from Gavin Lambert (
http://groups.google.com/group/il-antlr-interest/browse_thread/thread/490707b7757767f3/34a5244b839c5deb?lnk=gst&q=decision+due+to+recursive+rule+invocations+reachable&rnum=3#34a5244b839c5deb)
who explains that the problem is that the grammar is left-recursive. I'm
afraid I don't quite understand the problem, and would appreciate an
explanation and an indication of how the Simple grammar can be modified to
resolve the error.

Chris



grammar Simple;
options {
    k = 2;
    backtrack = true;
    memoize = true;
}

Expression
    : UnaryExpression (Operator UnaryExpression)*
    ;

UnaryExpression
    : Number
    | ParenthesisedExpression  // This is the line that introduces recursion
into the grammar.
    ;

ParenthesisedExpression
    : '(' Expression ')'
    ;

Operator
    : '+' | '-'
    ;

Number
    : ('0'..'9')+
    ;

Whitespace
    : (' ' | '\r' | '\t' | '\f' | '\n')+  {$channel=HIDDEN;}
    ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/fc8c0880/attachment.html 

From lgcraymer at yahoo.com  Mon Aug 13 00:31:02 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 13 Aug 2007 00:31:02 -0700 (PDT)
Subject: [antlr-interest] error(211) in grammars with recursion
In-Reply-To: <70bbae280708121925q1072f29bnae4fa6ab8e29641f@mail.gmail.com>
Message-ID: <641515.69083.qm@web55903.mail.re3.yahoo.com>

Actually, you are seeing two problems.  The problem
with your Sample grammar is the capitalization of the
first letter of your parser rules:  they are
interpreted as lexer rules, and the recursion occurs
because the generated Token rule introduces ambiguity
between it and the ParExpression rule.  If you just
lowercase the rule names, your Sample grammar should
work.

The problem with the Java.g grammar is that it was
originally a showcase for the backtracking option.  It
was derived from the canonical LR grammar.  You can
either add "backtracking = true;" to your options
section or (better) start with the ANTLR 2 java
grammar as a basis for your expression parser.

--Loring


--- Chris Lambrou <chris at lambrou.net> wrote:

> Hi,
> 
> I'm trying to create a parser for Java-like
> expressions, and have started
> using the Java.g file presented on the ANTLR web
> site (
> http://www.antlr.org/grammar/1152141644268/Java.g)
> as a base to work from.
> I've been running into error(211) and I'm not sure
> what the problem is. The
> full error text is:
> 
> rule Tokens has non-LL(*) decision due to recursive
> rule invocations
> reachable from alts 1,2,3.  Resolve by
> left-factoring or using syntactic
> predicates or using backtrack=true option.
> 
> I've managed to duplicate the error in a much
> simpler grammar, shown below.
> The grammar is for simple arithmetic rules that only
> involve numbers, the
> plus and minus operators, and parentheses, e.g.  (5
> + 9) - (3 + (4 - 1)) -
> the key rules that relate to the problem are
> Expression, UnaryExpression and
> ParenthesisedExpression. The error message suggests
> three approaches to
> solving the problem: left-factoring, use of
> syntactic predicates or use of
> the backtrack option. The backtrack option doesn't
> help (backtrack=true is
> already specified), I don't see how left-factoring
> will help, and I don't
> yet understand syntactic predicates, or how they
> might apply to the problem.
> 
> Having searched the mailing list archives, the only
> relevant comment seems
> to be from Gavin Lambert (
>
http://groups.google.com/group/il-antlr-interest/browse_thread/thread/490707b7757767f3/34a5244b839c5deb?lnk=gst&q=decision+due+to+recursive+rule+invocations+reachable&rnum=3#34a5244b839c5deb)
> who explains that the problem is that the grammar is
> left-recursive. I'm
> afraid I don't quite understand the problem, and
> would appreciate an
> explanation and an indication of how the Simple
> grammar can be modified to
> resolve the error.
> 
> Chris
> 
> 
> 
> grammar Simple;
> options {
>     k = 2;
>     backtrack = true;
>     memoize = true;
> }
> 
> Expression
>     : UnaryExpression (Operator UnaryExpression)*
>     ;
> 
> UnaryExpression
>     : Number
>     | ParenthesisedExpression  // This is the line
> that introduces recursion
> into the grammar.
>     ;
> 
> ParenthesisedExpression
>     : '(' Expression ')'
>     ;
> 
> Operator
>     : '+' | '-'
>     ;
> 
> Number
>     : ('0'..'9')+
>     ;
> 
> Whitespace
>     : (' ' | '\r' | '\t' | '\f' | '\n')+ 
> {$channel=HIDDEN;}
>     ;
> 



       
____________________________________________________________________________________
Yahoo! oneSearch: Finally, mobile search 
that gives answers, not web links. 
http://mobile.yahoo.com/mobileweb/onesearch?refer=1ONXIC

From mschnelte at gmx.de  Mon Aug 13 05:38:06 2007
From: mschnelte at gmx.de (mschnelte at gmx.de)
Date: Mon, 13 Aug 2007 14:38:06 +0200
Subject: [antlr-interest] Error reporting
Message-ID: <20070813123806.168540@gmx.net>

Hi everyone,

I have the following grammar:

===
sp2: WENN condition DANN;


condition? :??? simpleCondition (('und' ^|'oder' ^) simpleCondition)*;

simpleCondition :??? ie iv 'ist';

ie ??? :??? QUOTE! .+ QUOTE!;
iv??? :??? QUOTE! .+ QUOTE!;


If the parser reads the following string: "wenn "bla" "blub" ist" it 
reports as error:

"mismatched input '<EOF>' expecting DANN"

Ok, "DANN" would produce a correct statement but "und" or "oder" can follow 
a simpleCondition as well.
How can I get the parser to print out all possible inputs on a decision 
point?
I want to implement a code completion and such thing would of course be 
very useful.

Matthias

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/e22d2470/attachment-0001.html 

From Stephen_Hardy at rabbit.com  Mon Aug 13 08:37:02 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Mon, 13 Aug 2007 08:37:02 -0700
Subject: [antlr-interest] Skipping or ignoring whole subtrees in a tree
	grammar
Message-ID: <62BABE024B7C074E9194E9727A418979C4F051@dvs-sms-mail01.digi.com>

Hi all,

supposing I have a tree grammar which includes something like

foo
   : ^(FOO          bar  { some action... } )
   | ^(DELETED_FOO  bar)
   ;

Suppose bar is a complex, deeply recursive, subtree; and I wish to avoid
as much as possible the overhead of parsing it in the DELETED_FOO case.
(Imagine that DELETED_FOO was once a FOO, but the parser or application
decided after the fact that it was an irrelevant part of the input, and
changed the token to mark it as deleted, but without actually removing
the subtree.  Why not delete the tree?  Well, a different tree grammar
may still want to see the contents, just not this one.)

Is there a way of telling ANTLR to basically 'skip' any analysis of the
subtree under DELETED_FOO?  For example, a routine which simply consumes
tokens from the DOWN which immediately follows DELETED_FOO until the
matching (balanced) UP token is seen?

I seem to recall a mention of something like this in TDAR, but darned if
I can locate it.

Regards,
SJH


From fasmith718 at gmail.com  Mon Aug 13 08:43:17 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Mon, 13 Aug 2007 11:43:17 -0400
Subject: [antlr-interest] Skipping or ignoring whole subtrees in a tree
	grammar
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F051@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F051@dvs-sms-mail01.digi.com>
Message-ID: <dea571e70708130843t124e05c3t6e9112b164a301e2@mail.gmail.com>

Use the wild card.  That causes a tree grammar to skip a token e.g.:

...
| ^(DELETED_FOO .)
...

you can still access bar if you want by using DELETED_FOO.start.getChild(0);
if you want to use it in an action somehow, but not be stepped through
automatically by the walker.  I used this a lot- works great.

Best regards,
     Frank

On 8/13/07, Hardy, Stephen <Stephen_Hardy at rabbit.com> wrote:
>
> Hi all,
>
> supposing I have a tree grammar which includes something like
>
> foo
>    : ^(FOO          bar  { some action... } )
>    | ^(DELETED_FOO  bar)
>    ;
>
> Suppose bar is a complex, deeply recursive, subtree; and I wish to avoid
> as much as possible the overhead of parsing it in the DELETED_FOO case.
> (Imagine that DELETED_FOO was once a FOO, but the parser or application
> decided after the fact that it was an irrelevant part of the input, and
> changed the token to mark it as deleted, but without actually removing
> the subtree.  Why not delete the tree?  Well, a different tree grammar
> may still want to see the contents, just not this one.)
>
> Is there a way of telling ANTLR to basically 'skip' any analysis of the
> subtree under DELETED_FOO?  For example, a routine which simply consumes
> tokens from the DOWN which immediately follows DELETED_FOO until the
> matching (balanced) UP token is seen?
>
> I seem to recall a mention of something like this in TDAR, but darned if
> I can locate it.
>
> Regards,
> SJH
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/aa7b4a3c/attachment.html 

From fasmith718 at gmail.com  Mon Aug 13 08:44:21 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Mon, 13 Aug 2007 11:44:21 -0400
Subject: [antlr-interest] Skipping or ignoring whole subtrees in a tree
	grammar
In-Reply-To: <dea571e70708130843t124e05c3t6e9112b164a301e2@mail.gmail.com>
References: <62BABE024B7C074E9194E9727A418979C4F051@dvs-sms-mail01.digi.com>
	<dea571e70708130843t124e05c3t6e9112b164a301e2@mail.gmail.com>
Message-ID: <dea571e70708130844g5e18b21eq5b485f584459b548@mail.gmail.com>

my mistake: you can access bar by doing foo.start.getChild(0);

Sorry for the mixup

--Frank

On 8/13/07, Frank Smith <fasmith718 at gmail.com> wrote:
>
> Use the wild card.  That causes a tree grammar to skip a token e.g.:
>
> ...
> | ^(DELETED_FOO .)
> ...
>
> you can still access bar if you want by using
> DELETED_FOO.start.getChild(0); if you want to use it in an action somehow,
> but not be stepped through automatically by the walker.  I used this a lot-
> works great.
>
> Best regards,
>      Frank
>
> On 8/13/07, Hardy, Stephen <Stephen_Hardy at rabbit.com> wrote:
> >
> > Hi all,
> >
> > supposing I have a tree grammar which includes something like
> >
> > foo
> >    : ^(FOO          bar  { some action... } )
> >    | ^(DELETED_FOO  bar)
> >    ;
> >
> > Suppose bar is a complex, deeply recursive, subtree; and I wish to avoid
> > as much as possible the overhead of parsing it in the DELETED_FOO case.
> > (Imagine that DELETED_FOO was once a FOO, but the parser or application
> > decided after the fact that it was an irrelevant part of the input, and
> > changed the token to mark it as deleted, but without actually removing
> > the subtree.  Why not delete the tree?  Well, a different tree grammar
> > may still want to see the contents, just not this one.)
> >
> > Is there a way of telling ANTLR to basically 'skip' any analysis of the
> > subtree under DELETED_FOO?  For example, a routine which simply consumes
> >
> > tokens from the DOWN which immediately follows DELETED_FOO until the
> > matching (balanced) UP token is seen?
> >
> > I seem to recall a mention of something like this in TDAR, but darned if
> > I can locate it.
> >
> > Regards,
> > SJH
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/3d873796/attachment.html 

From Stephen_Hardy at rabbit.com  Mon Aug 13 08:50:58 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Mon, 13 Aug 2007 08:50:58 -0700
Subject: [antlr-interest] Skipping or ignoring whole subtrees in a tree
	grammar
In-Reply-To: <dea571e70708130844g5e18b21eq5b485f584459b548@mail.gmail.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F052@dvs-sms-mail01.digi.com>

Frank,

thanks for the response!  It seems that '.' is a bit more magic than I
thought.  That is, the semantics seem to be that '.' matches the token
plus any subtree that it may have, not just the 'root' token itself
(although I stand open to correction on this interpretation).

Regards,
SJH


> -----Original Message-----
> From: Frank Smith [mailto:fasmith718 at gmail.com] 
> Sent: Monday, August 13, 2007 8:44 AM
> To: Hardy, Stephen
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Skipping or ignoring whole 
> subtrees in a tree grammar
> 
> my mistake: you can access bar by doing foo.start.getChild(0);
> 
> Sorry for the mixup
> 
> --Frank
> 
> 
> On 8/13/07, Frank Smith <fasmith718 at gmail.com> wrote:
> 
> 	Use the wild card.  That causes a tree grammar to skip 
> a token e.g.:
> 	
> 	...
> 	| ^(DELETED_FOO .)
> 	...
> 	
> 	you can still access bar if you want by using 
> DELETED_FOO.start.getChild(0); if you want to use it in an 
> action somehow, but not be stepped through automatically by 
> the walker.  I used this a lot- works great. 
> 	
> 	Best regards,
> 	     Frank
> 	
> 	
> 	
> 	On 8/13/07, Hardy, Stephen < Stephen_Hardy at rabbit.com 
> <mailto:Stephen_Hardy at rabbit.com> > wrote: 
> 
> 		Hi all,
> 		
> 		supposing I have a tree grammar which includes 
> something like
> 		
> 		foo
> 		   : ^(FOO          bar  { some action... } ) 
> 		   | ^(DELETED_FOO  bar)
> 		   ;
> 		
> 		Suppose bar is a complex, deeply recursive, 
> subtree; and I wish to avoid
> 		as much as possible the overhead of parsing it 
> in the DELETED_FOO case.
> 		(Imagine that DELETED_FOO was once a FOO, but 
> the parser or application 
> 		decided after the fact that it was an 
> irrelevant part of the input, and
> 		changed the token to mark it as deleted, but 
> without actually removing
> 		the subtree.  Why not delete the tree?  Well, a 
> different tree grammar 
> 		may still want to see the contents, just not this one.)
> 		
> 		Is there a way of telling ANTLR to basically 
> 'skip' any analysis of the
> 		subtree under DELETED_FOO?  For example, a 
> routine which simply consumes 
> 		tokens from the DOWN which immediately follows 
> DELETED_FOO until the
> 		matching (balanced) UP token is seen?
> 		
> 		I seem to recall a mention of something like 
> this in TDAR, but darned if
> 		I can locate it.
> 		
> 		Regards,
> 		SJH
> 		
> 		
> 
> 
> 
> 

From fyaoxy at gmail.com  Mon Aug 13 09:50:49 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 14 Aug 2007 00:50:49 +0800
Subject: [antlr-interest] strange? eat not match char
Message-ID: <91dd9a4f0708130950r22687cffv5b808e76cf65e505@mail.gmail.com>

Hi, I do a simple grammar, as follows,
and do follow tests with antlrworks interpreter, and because message
whitespace, and I bracket string message with[] pair,
interpreter with "strings" rule:
1,[hello world] [ hello world] --->[hello world], ok
2,[ hello word ][ hello word ,][ hello word , ]-->NoViableAltException
3,[ hello word ,s]-->[ hello word ,s]
4,[ hello word , s]-->[s]
why get 3 and 4 result, it let me questionfull:)
at 3, comma not a char, but it present
at 4, message before comma eated, I not understand.
Could someone give helps?
Thanks.


grammar On16;

/*
options{
    k=2;
    output=AST;
}
*/
tokens{
COMMA    =    ',';
SEMI    =    ';';
COLON    =    ':';
LBAK    =    '{';
RBAK    =    '}';
SQUOTE    =    '\'';
DQUOTE    =    '"';
}
@header{package on;}
@lexer::header{package on;}

//document:    string|strings|object|objects|pairs;
/*******************************************
* parser rulers
********************************************/
strings    :    string  (COMMA string)* COMMA?;
name    :    words|WORD;
string    :    words|WORD|STRING;
words    :    WORDS;

WORDS    :    WORD (WHITE WORD)+;
//idname returns [string s] {s = " ";}:
// t=ID { s += t.getText(); }
//(options{greedy=true;}: ws=WS { s += ws.getText(); } t2=ID! { s +=
t2.getText(); } )*;

//must not be fragment
WORD    :    CHAR+;
STRING    :    SQUOTE (~(SQUOTE))* SQUOTE
    |    DQUOTE (~(DQUOTE))* DQUOTE
    ;

/*******************************************
* lexer rulers
********************************************/
fragment
WHITE    :    SPACE+ {$channel=0;};
WS    :    (SPACE | LINE)+ {$channel=HIDDEN;};
//META CHARACTOR;
fragment
CHAR    :    ~(COMMA | SEMI | COLON | LBAK | RBAK | SQUOTE | DQUOTE | SPACE);
fragment
SPACE    :    ' ' | '\t' | '\f';
fragment
CRLF    :    '\r' | '\n';
LINE    :    '\r'? '\n';
//WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+;


-- 
??
???

From fasmith718 at gmail.com  Mon Aug 13 10:36:52 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Mon, 13 Aug 2007 13:36:52 -0400
Subject: [antlr-interest] Skipping or ignoring whole subtrees in a tree
	grammar
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F052@dvs-sms-mail01.digi.com>
References: <dea571e70708130844g5e18b21eq5b485f584459b548@mail.gmail.com>
	<62BABE024B7C074E9194E9727A418979C4F052@dvs-sms-mail01.digi.com>
Message-ID: <dea571e70708131036q13dfa2cevccd405698a48618c@mail.gmail.com>

The wildcard is an interesting beast.

Only use it on the bare minimum amount of stuff in your grammar (e.g. only
the rule you need skipped!), because I had some seemingly unrelated errors
crop up in my grammar that I ended up tracing back to overusing the wildcard
in some rules.

in my case it was:

^('fun' TYPE ID param* block)

worked perfectly with:
^('fun' TYPE ID param* .)

and caused all kinds of heartache with:
^('fun' TYPE ID . .)

so even though i didn't use param in the action that followed i left it in
there for the sake of it actually working :)

good luck with yours

On 8/13/07, Hardy, Stephen <Stephen_Hardy at rabbit.com> wrote:
>
> Frank,
>
> thanks for the response!  It seems that '.' is a bit more magic than I
> thought.  That is, the semantics seem to be that '.' matches the token
> plus any subtree that it may have, not just the 'root' token itself
> (although I stand open to correction on this interpretation).
>
> Regards,
> SJH
>
>
> > -----Original Message-----
> > From: Frank Smith [mailto:fasmith718 at gmail.com]
> > Sent: Monday, August 13, 2007 8:44 AM
> > To: Hardy, Stephen
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Skipping or ignoring whole
> > subtrees in a tree grammar
> >
> > my mistake: you can access bar by doing foo.start.getChild(0);
> >
> > Sorry for the mixup
> >
> > --Frank
> >
> >
> > On 8/13/07, Frank Smith <fasmith718 at gmail.com> wrote:
> >
> >       Use the wild card.  That causes a tree grammar to skip
> > a token e.g.:
> >
> >       ...
> >       | ^(DELETED_FOO .)
> >       ...
> >
> >       you can still access bar if you want by using
> > DELETED_FOO.start.getChild(0); if you want to use it in an
> > action somehow, but not be stepped through automatically by
> > the walker.  I used this a lot- works great.
> >
> >       Best regards,
> >            Frank
> >
> >
> >
> >       On 8/13/07, Hardy, Stephen < Stephen_Hardy at rabbit.com
> > <mailto:Stephen_Hardy at rabbit.com> > wrote:
> >
> >               Hi all,
> >
> >               supposing I have a tree grammar which includes
> > something like
> >
> >               foo
> >                  : ^(FOO          bar  { some action... } )
> >                  | ^(DELETED_FOO  bar)
> >                  ;
> >
> >               Suppose bar is a complex, deeply recursive,
> > subtree; and I wish to avoid
> >               as much as possible the overhead of parsing it
> > in the DELETED_FOO case.
> >               (Imagine that DELETED_FOO was once a FOO, but
> > the parser or application
> >               decided after the fact that it was an
> > irrelevant part of the input, and
> >               changed the token to mark it as deleted, but
> > without actually removing
> >               the subtree.  Why not delete the tree?  Well, a
> > different tree grammar
> >               may still want to see the contents, just not this one.)
> >
> >               Is there a way of telling ANTLR to basically
> > 'skip' any analysis of the
> >               subtree under DELETED_FOO?  For example, a
> > routine which simply consumes
> >               tokens from the DOWN which immediately follows
> > DELETED_FOO until the
> >               matching (balanced) UP token is seen?
> >
> >               I seem to recall a mention of something like
> > this in TDAR, but darned if
> >               I can locate it.
> >
> >               Regards,
> >               SJH
> >
> >
> >
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/f864bd55/attachment-0001.html 

From Stephen_Hardy at rabbit.com  Mon Aug 13 10:43:52 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Mon, 13 Aug 2007 10:43:52 -0700
Subject: [antlr-interest] Skipping or ignoring whole subtrees in a tree
	grammar
In-Reply-To: <dea571e70708131036q13dfa2cevccd405698a48618c@mail.gmail.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F053@dvs-sms-mail01.digi.com>

Maybe you needed

  ^('fun' TYPE ID .+)

since ". ."  would only match two subtrees, which would only be the case
if you had exactly one "param".  As I understand it, the * or +
modifiers create flat lists, not a single root node with * or + number
of subtrees, since the dummy "nil" root gets flattened out by rule
post-processing.

Regards,
SJH



> -----Original Message-----
> From: Frank Smith [mailto:fasmith718 at gmail.com] 
> Sent: Monday, August 13, 2007 10:37 AM
> To: Hardy, Stephen
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Skipping or ignoring whole 
> subtrees in a tree grammar
> 
> The wildcard is an interesting beast.
> 
> Only use it on the bare minimum amount of stuff in your 
> grammar (e.g. only the rule you need skipped!), because I had 
> some seemingly unrelated errors crop up in my grammar that I 
> ended up tracing back to overusing the wildcard in some rules. 
> 
> in my case it was:
> 
> ^('fun' TYPE ID param* block)
> 
> worked perfectly with:
> ^('fun' TYPE ID param* .)
> 
> and caused all kinds of heartache with:
> ^('fun' TYPE ID . .)
> 
> so even though i didn't use param in the action that followed 
> i left it in there for the sake of it actually working :)
> 
> good luck with yours

From matthew.j.diehl at intel.com  Mon Aug 13 13:28:08 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 13 Aug 2007 13:28:08 -0700
Subject: [antlr-interest] (newbie) Grammar question
In-Reply-To: <c56870600708121759gaef31c7ldad963b7d33f7215@mail.gmail.com>
References: <c56870600708121759gaef31c7ldad963b7d33f7215@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2027507E0@orsmsx417.amr.corp.intel.com>

> Now I'd like to add support for null and numerical tests like:
> 
> bean1.enabled = bean2.value != null && bean3.value > 0
> 
> My main issue is how to allow statements like !bean.enabled 
> while preventing statements like bean.value < !5.
> 


It sounds like you need split it into two rules: One for boolean
relationships, and the other for expressions.  The '!' can only come
before relationships and cannot come in the middle of an expression.

relationship
  : NEQ? expr //this does not allow nested like: !(this && that), so
you'd have to change.
  | expr relationship_sign expr
  ;

relationship_sign : LessThan | GreaterThan | LEqual | GEqual ;




stat    : PROPERTY '='! (expr | relationship); //allows both values or
booleans
expr    : natom (oper^ natom)*;
natom    :    NOT^? atom;
atom    : PROPERTY | '(' expr ')' -> expr 
    ;
oper    :  AND | OR | EQ | NEQ; 

From matthew.j.diehl at intel.com  Mon Aug 13 13:39:53 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 13 Aug 2007 13:39:53 -0700
Subject: [antlr-interest] strange? eat not match char
In-Reply-To: <91dd9a4f0708130950r22687cffv5b808e76cf65e505@mail.gmail.com>
References: <91dd9a4f0708130950r22687cffv5b808e76cf65e505@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20275080B@orsmsx417.amr.corp.intel.com>


I ran your grammar, and the lexer rules just mashed all of the text in example 1 in to one BIG token:
[hello world] [ hello world] --->[hello world] [ hello world] 

Also, to let it work I had to change:
> LBAK    =    '{';
> RBAK    =    '}';
To
LBAK : '[';  RBAK : ']';
Because it wasn't doing anything with the brackets (I thought you said the brackets were important...?).

I would suggest not giving the lexer so much power in determining the results.  As for checking for white space...just keep it as hidden (and heaped together), then just check to see if there was white space on the hidden channel:

SPACE    :    (' ' | '\t' | '\f')+ {$channel=2;};
LINE    :    ('\r'? '\n')+{$channel=HIDDEN;};

//check the syntax on this...I'm just making it up
words 
  : WORD {((Token)input.LT(-1)).getChannel()==2}? WORD 
  | WORD
  ;

The less power you give to the lexer, the more flexible the parser can be.  It's a whole lot easier to play with the parser (and there's a lot more visual support with the parser in ANTLRWorks, too).  I'm sure there's a lot better ways than above, but that's just one way.

Good luck,

Matt

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of ???
> Sent: Monday, August 13, 2007 9:51 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] strange? eat not match char
> 
> Hi, I do a simple grammar, as follows,
> and do follow tests with antlrworks interpreter, and because message
> whitespace, and I bracket string message with[] pair,
> interpreter with "strings" rule:
> 1,[hello world] [ hello world] --->[hello world], ok
> 2,[ hello word ][ hello word ,][ hello word , ]-->NoViableAltException
> 3,[ hello word ,s]-->[ hello word ,s]
> 4,[ hello word , s]-->[s]
> why get 3 and 4 result, it let me questionfull:)
> at 3, comma not a char, but it present
> at 4, message before comma eated, I not understand.
> Could someone give helps?
> Thanks.
> 
> 
> grammar On16;
> 
> /*
> options{
>     k=2;
>     output=AST;
> }
> */
> tokens{
> COMMA    =    ',';
> SEMI    =    ';';
> COLON    =    ':';
> LBAK    =    '{';
> RBAK    =    '}';
> SQUOTE    =    '\'';
> DQUOTE    =    '"';
> }
> @header{package on;}
> @lexer::header{package on;}
> 
> //document:    string|strings|object|objects|pairs;
> /*******************************************
> * parser rulers
> ********************************************/
> strings    :    string  (COMMA string)* COMMA?;
> name    :    words|WORD;
> string    :    words|WORD|STRING;
> words    :    WORDS;
> 
> WORDS    :    WORD (WHITE WORD)+;
> //idname returns [string s] {s = " ";}:
> // t=ID { s += t.getText(); }
> //(options{greedy=true;}: ws=WS { s += ws.getText(); } t2=ID! { s +=
> t2.getText(); } )*;
> 
> //must not be fragment
> WORD    :    CHAR+;
> STRING    :    SQUOTE (~(SQUOTE))* SQUOTE
>     |    DQUOTE (~(DQUOTE))* DQUOTE
>     ;
> 
> /*******************************************
> * lexer rulers
> ********************************************/
> fragment
> WHITE    :    SPACE+ {$channel=0;};
> WS    :    (SPACE | LINE)+ {$channel=HIDDEN;};
> //META CHARACTOR;
> fragment
> CHAR    :    ~(COMMA | SEMI | COLON | LBAK | RBAK | SQUOTE | 
> DQUOTE | SPACE);
> fragment
> SPACE    :    ' ' | '\t' | '\f';
> fragment
> CRLF    :    '\r' | '\n';
> LINE    :    '\r'? '\n';
> //WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+;
> 
> 
> -- 
> ??
> ???
> 

From alastairpatrick at gmail.com  Mon Aug 13 13:51:16 2007
From: alastairpatrick at gmail.com (Alastair Patrick)
Date: Mon, 13 Aug 2007 13:51:16 -0700
Subject: [antlr-interest] ANTLRReaderStream constructor hangs when passed a
	StringReader (C#)
Message-ID: <2051c0600708131351q2541b0a9q89684e839cc8f4e1@mail.gmail.com>

This program hangs indefinitely.

using System.IO;
using Antlr.Runtime;

namespace ANTLRRepro
{
    class Program
    {
        static void Main(string[] args)
        {
            StringReader reader = new StringReader("hello");
            ANTLRReaderStream stream = new ANTLRReaderStream(reader);
        }
    }
}

I'm using the latest C# runtime. I know I can use ANTLRStringStream in this
case but I think this is still a bug.

Thanks

Al
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/4555ba41/attachment.html 

From dave at badgers-in-foil.co.uk  Mon Aug 13 14:01:31 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 13 Aug 2007 21:01:31 +0000
Subject: [antlr-interest] Path for tokenVocab
Message-ID: <20070813210130.GA32729@badgers-in-foil.co.uk>

In a multi-grammar project, I might have grammars under,

  org/example/SomeGrammar.g
  com/bigcorp/OtherGrammar.g

They are located in folders like this so that their folder structure
matches the package structure for the generated classes (i.e.
org.example.SomeGrammarParser and com.bigcorp.OtherGrammarParser).

However, I need to use the 'tokenVocab' option in OtherGrammar.g to get
at SomeGrammar.g's token definitions.  The difficulty is that in order
to set the '-lib' option to a reasonable value to find SomeGrammar.tokens
when processing OtherGrammar.g, the build tool will need to do some
fairly fiddly path munging, or the user will have to explicitly tell the
build tool to look in 'org/example' (and a good build tool should just
know these things, really).

The generated files all get put under the folder
target/generated-sources/antlr, so it super easy for the build tool to
set the option "-lib target/generated-sources/antlr".  However the
folder structure created there matches the folder structure of the
source grammars, i.e.

  target/generated-sources/antlr/org/example/SomeGrammar.*
  target/generated-sources/antlr/com/bigcorp/OtherGrammar.*

so this isn't enough on its own.


So, it would be *really* nice if the tokenVocab option value could take
a 'package prefix',

e.g.
  tokenVocab=org/example/SomeGrammar;
or
  tokenVocab=org.example.SomeGrammar;


Is a change like this possible?  Should I try to implement it?



thanks!
dave

-- 
http://david.holroyd.me.uk/

From parrt at cs.usfca.edu  Mon Aug 13 15:18:18 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 13 Aug 2007 15:18:18 -0700
Subject: [antlr-interest] Path for tokenVocab
In-Reply-To: <20070813210130.GA32729@badgers-in-foil.co.uk>
References: <20070813210130.GA32729@badgers-in-foil.co.uk>
Message-ID: <F187AAC1-83CF-4EC5-BBD7-06A3B152B945@cs.usfca.edu>


On Aug 13, 2007, at 2:01 PM, David Holroyd wrote:
> So, it would be *really* nice if the tokenVocab option value could  
> take
> a 'package prefix',
>
> e.g.
>   tokenVocab=org/example/SomeGrammar;
> or
>   tokenVocab=org.example.SomeGrammar;
>
>
> Is a change like this possible?  Should I try to implement it?

Hi David, an interesting suggestion.  I am just trying to catch up on  
e-mail now that I'm back from Colorado...

Hmm...the problem is that I envisioned the tokenVocab as a grammar  
name not a file name.  We'd really need org/example/ 
SomeGrammar.tokens...hmm...Can you list multiple patterns in the -lib  
option? (can't remember if I have implemented that).
Ter

From dirty at apple.com  Mon Aug 13 15:17:32 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 13 Aug 2007 15:17:32 -0700
Subject: [antlr-interest] C Runtime - list container suggestions
Message-ID: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>

Jim,
I've noticed two problems with the antlr3List "class" in  
antlr3collections.c:

- Nearly all of the routines take a "key" parameter: get, put, delete  
and remove.  But, the add routine doesn't return a key.  After  
calling add, there is no way to determine where in the list the  
element was put.

- The list uses the size of the hash as it's key.  This is a problem  
if elements are removed from the list.  You will get hash  
collisions.  In my case, I did the following operations:
	add
	add
	add
	delete first add
	delete second add
	add

then the next add would return an error because it would hash to the  
same value.

Cameron Esfahani
dirty at apple.com

"With or without religion, good people can behave well and bad people  
can do evil; but for good people to do evil - that takes religion."

Steven Weinberg



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/dceedec1/attachment.html 

From jimi at temporal-wave.com  Mon Aug 13 15:29:28 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 13 Aug 2007 15:29:28 -0700
Subject: [antlr-interest] C Runtime - list container suggestions
In-Reply-To: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>
References: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>
Message-ID: <051466DAA0D608439E196797955018D70235F9@wavemachine.temporal-wave.com>

Cameron,

 

This email reminds me that I need to fix that. I was going to change it
to use ANTLR3_VECTOR, but something prompted me not to do this and I
have to look at my notes as to why. The List was once of the first
structures I wrote, before I had decided that these things would
probably be useful for C grammar programmers in general, hence it only
did what I needed it to do for ANTLR, where such a sequence would not
come up.

 

I will implement a temporary fix, then look at changing to vectors,
which are faster than the hash table for this anyway. I think my doubts
were whether you should be able to delete an element from the list and
expect the keys to be preserved, or whether the key should be an
ordinal, in that you can delete list entry #1 as many times as there is
a list entry #1 left. I need to decide which it should be then implement
either a key field in the structure (so that it does not reuse the same
key in the hashtable), or change to vectors and make the key ordinal
(which is what I think a list means actually). 

 

In the meantime, look at the vector, as this is more likely what you
want if you were using this sequence.

 

Jim

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Monday, August 13, 2007 3:18 PM
To: antlr-interest Interest
Subject: [antlr-interest] C Runtime - list container suggestions

 

Jim,

I've noticed two problems with the antlr3List "class" in
antlr3collections.c:

 

- Nearly all of the routines take a "key" parameter: get, put, delete
and remove.  But, the add routine doesn't return a key.  After calling
add, there is no way to determine where in the list the element was put.

 

- The list uses the size of the hash as it's key.  This is a problem if
elements are removed from the list.  You will get hash collisions.  In
my case, I did the following operations:

          add

          add

          add

          delete first add

          delete second add

          add

 

then the next add would return an error because it would hash to the
same value.

 

Cameron Esfahani

dirty at apple.com

 

"With or without religion, good people can behave well and bad people
can do evil; but for good people to do evil - that takes religion."

 

Steven Weinberg

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070813/4d7d5d97/attachment-0001.html 

From parrt at cs.usfca.edu  Mon Aug 13 15:51:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 13 Aug 2007 15:51:26 -0700
Subject: [antlr-interest] ANTLR 3.0.1 released
Message-ID: <08C7D176-B937-417B-BB9A-CD180CD9EEF5@cs.usfca.edu>

Howdy!  Heh, thanks to the hard work of the target developers, 3.0.1  
is now available:

http://www.antlr.org/download.html

Java, C, Python, C# targets are available; others coming.

Here are the changes:

http://www.antlr.org/doc/README.txt

Essentially, this is a bug fix release with a number of improvements  
to the debugging protocol that communicates with ANTLRWorks.  Oh, and  
I added:

org/antlr/runtime/tree/TreeWizard.java

Here are the target pages:

http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets

I and madly at work building 3.1, which will include grammar imports,  
tree construction for tree grammars and heterogeneous tree nodes.

Ter
PS	I believe ANTLRWorks 1.0.2 as this latest version of antlr in there.


From jshellman at gmail.com  Mon Aug 13 16:26:05 2007
From: jshellman at gmail.com (Joel Shellman)
Date: Mon, 13 Aug 2007 16:26:05 -0700
Subject: [antlr-interest] Going from grammar to parser to parsing without
	compiler
Message-ID: <975a94850708131626i2700cebbjeed6d0b663d05043@mail.gmail.com>

Is there any built in mechanism in ANTLR to go from my grammar as a
string, and running data through that grammar without having to
generate and compile Java files (or any language) in between?

Thanks!

From parrt at cs.usfca.edu  Mon Aug 13 16:29:08 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 13 Aug 2007 16:29:08 -0700
Subject: [antlr-interest] Going from grammar to parser to parsing
	without compiler
In-Reply-To: <975a94850708131626i2700cebbjeed6d0b663d05043@mail.gmail.com>
References: <975a94850708131626i2700cebbjeed6d0b663d05043@mail.gmail.com>
Message-ID: <FD7C2185-E775-426F-BC7A-E68D4D73188C@cs.usfca.edu>


On Aug 13, 2007, at 4:26 PM, Joel Shellman wrote:

> Is there any built in mechanism in ANTLR to go from my grammar as a
> string, and running data through that grammar without having to
> generate and compile Java files (or any language) in between?

Yep, see the Interp or is it Interpreter thing.

Ter


From antlr at mirality.co.nz  Tue Aug 14 01:09:25 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 14 Aug 2007 20:09:25 +1200
Subject: [antlr-interest] C Runtime - list container suggestions
In-Reply-To: <051466DAA0D608439E196797955018D70235F9@wavemachine.tempora
	l-wave.com>
References: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>
	<051466DAA0D608439E196797955018D70235F9@wavemachine.temporal-wave.com>
Message-ID: <20070814080941.3F67B11EA87@www.antlr.org>

At 10:29 14/08/2007, Jim Idle wrote:
>I will implement a temporary fix, then look at changing to 
>vectors, which are faster than the hash table for this anyway. I 
>think my doubts were whether you should be able to delete an 
>element from the list and expect the keys to be preserved, or 
>whether the key should be an ordinal, in that you can delete list 
>entry #1 as many times as there is a list entry #1 left. I need 
>to decide which it should be then implement either a key field in 
>the structure (so that it does not reuse the same key in the 
>hashtable), or change to vectors and make the key ordinal (which 
>is what I think a list means actually).

By normal definitions, a "list" could either be a "linked list" or 
a "vector"; either way it's logically unkeyed (though frequently 
they are implicitly keyed by their position in the 
collection).  So for a "list" I think everyone would expect the 
behaviour that if you deleted item #1 then item #2 would "move" to 
become the new item #1.  (Which is not what it does right now.)

I imagine hashtables could still be useful in some places (eg. the 
string factory), but I suspect most of the public stuff should 
probably be dealing with lists.


From vidarsvans at gmail.com  Tue Aug 14 01:42:15 2007
From: vidarsvans at gmail.com (=?ISO-8859-1?Q?Vi=F0ar_Svansson?=)
Date: Tue, 14 Aug 2007 09:42:15 +0100
Subject: [antlr-interest] Python runtime download
Message-ID: <af8252920708140142r2d835a82m5b2470f974325e41@mail.gmail.com>

Hi

Is it possible to have the Python runtime package as a separate
download, or even upload it to http://cheeseshop.python.org ?

That way tools build with the antlr3 python generator could be easily
distributed.

Vi?ar

From mschnelte at gmx.de  Tue Aug 14 01:44:16 2007
From: mschnelte at gmx.de (Matthias Schnelte)
Date: Tue, 14 Aug 2007 10:44:16 +0200
Subject: [antlr-interest] Error reporting
In-Reply-To: <20070813123806.168540@gmx.net>
References: <20070813123806.168540@gmx.net>
Message-ID: <20070814084416.9540@gmx.net>

No ideas? anybody?
I have tried the same grammar with javacc and it reports all the three 
possibilities as error message.
Any idea how to implement this in ANTLR?

Matthias

> ----- Urspr?ngliche Nachricht -----
> Von: mschnelte at gmx.de
> Gesendet: 13.08.07 13:38 Uhr
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Error reporting
> 
> Hi everyone,
> 
> I have the following grammar:
> 
> ===
> sp2: WENN condition DANN;
> 
> 
> condition? :??? simpleCondition (('und' ^|'oder' ^) 
> simpleCondition)*;
> 
> simpleCondition :??? ie iv 'ist';
> 
> ie ??? :??? QUOTE! .+ QUOTE!;
> iv??? :??? QUOTE! .+ QUOTE!;
> 
> 
> If the parser reads the following string: "wenn "bla" "blub" ist" it 
> reports as error:
> 
> "mismatched input '<EOF>' expecting DANN"
> 
> Ok, "DANN" would produce a correct statement but "und" or "oder" can 
> follow a simpleCondition as well.
> How can I get the parser to print out all possible inputs on a decision 
> point?
> I want to implement a code completion and such thing would of course be 
> very useful.
> 
> Matthias
> 
> 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070814/78eaa244/attachment.html 

From Gerz at fgan.de  Tue Aug 14 02:12:25 2007
From: Gerz at fgan.de (Gerz, Michael)
Date: Tue, 14 Aug 2007 11:12:25 +0200
Subject: [antlr-interest] ANTLR 3.0.1 with StringTemplate 3.1b1?
Message-ID: <EF2ED99C54B0FD4188B64423658925EDBE20F6@mailserv.lorien.fkie.fgan.de>

Hi,

the source distribution of ANTLR 3.0.1 contains StringTemplate3.1b1.

Is this OK? The README file says that ANTLR 3.0.1 requires StringTemplate 3.0.

Best regards,

Michael

************************************************************************
Dr. Michael Gerz                                                        
FGAN e.V.                                      Phone:  +49 228 9435-414 
Department FKIE/ITF                            Fax:    +49 228 9435-685 
Neuenahrer Stra?e 20                           E-Mail: gerz at fgan.de     
53343 Wachtberg-Werthhoven                     WWW:    www.fgan.de     

From tbrandonau at gmail.com  Tue Aug 14 02:44:33 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 14 Aug 2007 19:44:33 +1000
Subject: [antlr-interest] Error reporting
In-Reply-To: <20070814084416.9540@gmx.net>
References: <20070813123806.168540@gmx.net> <20070814084416.9540@gmx.net>
Message-ID: <ebc876d70708140244q308ac9b1keb1de0f22ceb071d@mail.gmail.com>

On 8/14/07, Matthias Schnelte <mschnelte at gmx.de> wrote:
>
>  No ideas? anybody?
> I have tried the same grammar with javacc and it reports all the three
> possibilities as error message.
> Any idea how to implement this in ANTLR?
>
> Matthias
> ----- Urspr?ngliche Nachricht -----
> Von: mschnelte at gmx.de
> Gesendet: 13.08.07 13:38 Uhr
> An: antlr-interest at antlr.org
> Betreff: [antlr-interest] Error reporting
>
>
>  Hi everyone,
>
> I have the following grammar:
>
> ===
> sp2: WENN condition DANN;
>
>
> condition  :    simpleCondition (('und' ^|'oder' ^) simpleCondition)*;
>
> simpleCondition :    ie iv 'ist';
>
> ie     :    QUOTE! .+ QUOTE!;
> iv    :    QUOTE! .+ QUOTE!;
>
>
> If the parser reads the following string: "wenn "bla" "blub" ist" it reports
> as error:
>
> "mismatched input '<EOF>' expecting DANN"
>
> Ok, "DANN" would produce a correct statement but "und" or "oder" can follow
> a simpleCondition as well.
> How can I get the parser to print out all possible inputs on a decision
> point?
> I want to implement a code completion and such thing would of course be very
> useful.
I think the issue might be that ANTLR has already decided that
condition has ended when it reports the error. Not sure, you should
confirm by checking the generated source. But I think that at the end
of the closure in condition ANTLR is checking the LA to see if it is
'und' or 'oder' to decide whether to run round the loop again. Upon
seeing EOF it exits closure and then the condition rule. Then in sp2
it checks the lookahead, finds it isn't 'DANN' so gives an error. At
this point another simpleCondition isn't a valid alternative as it's
already decided condition has ended, so it doesn't list that as an
option. It looks like JavaCC either does it's lookahead checks
differently or keeps the follow sets for exited closures\rules around.
Not sure how difficult it would be to have ANTLR provide this
information. ANTLR has follow sets for each available token invocation
(or maybe just a subset, not sure there) and uses them to dynamically
maintain a current follow set. You could maintain your own follow set
that gave the information you wanted. Not sure how complicated the
algorithm would be. You could do this by creating a custom target to
avoid repetitive actions. Or you might be able to create a modified
target that pre-calculated this information (or generated methods to
do so at runtime).
Comparing JavaCCs implementation with ANTLR's should show how to get
the same level of information it provides.

Tom.
>
> Matthias
>
>

From pink at odahoda.de  Tue Aug 14 03:42:48 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 14 Aug 2007 12:42:48 +0200
Subject: [antlr-interest] Python runtime download
References: <af8252920708140142r2d835a82m5b2470f974325e41@mail.gmail.com>
Message-ID: <f9s0v8$keo$1@sea.gmane.org>

Hi,

Vi?ar Svansson wrote:

> Is it possible to have the Python runtime package as a separate
> download, or even upload it to http://cheeseshop.python.org ?

I'm planning to upload it to cheeseshop.
Separate downloads on antlr.org would be nice, too - not just Python, but
the other targets as well. Will need to bug Ter about this.

> That way tools build with the antlr3 python generator could be easily
> distributed.

If you distribute the generated parsers, it's probably best to include the
runtime in your tool package (it's BSD licensed, so that should not be an
issue), because there may be dependencies on a specific version.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From ohumbel at gmail.com  Tue Aug 14 06:39:56 2007
From: ohumbel at gmail.com (Oti)
Date: Tue, 14 Aug 2007 15:39:56 +0200
Subject: [antlr-interest] ANTLR 3.0.1 with StringTemplate 3.1b1?
In-Reply-To: <EF2ED99C54B0FD4188B64423658925EDBE20F6@mailserv.lorien.fkie.fgan.de>
References: <EF2ED99C54B0FD4188B64423658925EDBE20F6@mailserv.lorien.fkie.fgan.de>
Message-ID: <ba90a0a90708140639p9b988d5o60b22be2330386c5@mail.gmail.com>

Hi,

just switched to the new version, regenerated lexer, parser and tree
parser, and ran my JUnit tests: all green.
So - in this limited use case - it is ok.

best wishes,
Oti.

On 8/14/07, Gerz, Michael <Gerz at fgan.de> wrote:
> Hi,
>
> the source distribution of ANTLR 3.0.1 contains StringTemplate3.1b1.
>
> Is this OK? The README file says that ANTLR 3.0.1 requires StringTemplate 3.0.
>
> Best regards,
>
> Michael
>
> ************************************************************************
> Dr. Michael Gerz
> FGAN e.V.                                      Phone:  +49 228 9435-414
> Department FKIE/ITF                            Fax:    +49 228 9435-685
> Neuenahrer Stra?e 20                           E-Mail: gerz at fgan.de
> 53343 Wachtberg-Werthhoven                     WWW:    www.fgan.de
>

From parrt at cs.usfca.edu  Tue Aug 14 07:03:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 14 Aug 2007 07:03:33 -0700
Subject: [antlr-interest] ANTLR 3.0.1 with StringTemplate 3.1b1?
In-Reply-To: <EF2ED99C54B0FD4188B64423658925EDBE20F6@mailserv.lorien.fkie.fgan.de>
References: <EF2ED99C54B0FD4188B64423658925EDBE20F6@mailserv.lorien.fkie.fgan.de>
Message-ID: <7F0C93A4-A7AB-4B53-94AE-3962A558EC1F@cs.usfca.edu>


On Aug 14, 2007, at 2:12 AM, Gerz, Michael wrote:

> Hi,
>
> the source distribution of ANTLR 3.0.1 contains StringTemplate3.1b1.
>
> Is this OK? The README file says that ANTLR 3.0.1 requires  
> StringTemplate 3.0.

Ooops. sorry. yeah, I recently flipped locally to the new version of  
ST with all the bug fixes.  It's fine; it's what I use locally.
Ter


From parrt at cs.usfca.edu  Tue Aug 14 07:04:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 14 Aug 2007 07:04:53 -0700
Subject: [antlr-interest] ANTLR 3.0.1 with StringTemplate 3.1b1?
In-Reply-To: <ba90a0a90708140639p9b988d5o60b22be2330386c5@mail.gmail.com>
References: <EF2ED99C54B0FD4188B64423658925EDBE20F6@mailserv.lorien.fkie.fgan.de>
	<ba90a0a90708140639p9b988d5o60b22be2330386c5@mail.gmail.com>
Message-ID: <864BBDE9-BD8A-4D5F-BC63-33CD9F35906B@cs.usfca.edu>


On Aug 14, 2007, at 6:39 AM, Oti wrote:

> Hi,
>
> just switched to the new version, regenerated lexer, parser and tree
> parser, and ran my JUnit tests: all green.
> So - in this limited use case - it is ok.

Hooray!  Good confirmation.  I've been in my dev branch for a month  
so I had trouble remembering mainline (3.0.1) stability ;)

Ter


From jimi at temporal-wave.com  Tue Aug 14 09:18:32 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 14 Aug 2007 09:18:32 -0700
Subject: [antlr-interest] C Runtime - list container suggestions
In-Reply-To: <WAVEMACHINEJpojG7230000001a@wavemachine.temporal-wave.com>
References: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>
	<051466DAA0D608439E196797955018D70235F9@wavemachine.temporal-wave.com>
	<WAVEMACHINEJpojG7230000001a@wavemachine.temporal-wave.com>
Message-ID: <051466DAA0D608439E196797955018D70235FE@wavemachine.temporal-wave.com>

Yes - this is my thought too.

> -----Original Message-----
> From: Gavin Lambert [mailto:antlr at mirality.co.nz]
> Sent: Tuesday, August 14, 2007 1:09 AM
> To: Jim Idle; antlr-interest Interest
> Subject: Re: [antlr-interest] C Runtime - list container suggestions
> 
> At 10:29 14/08/2007, Jim Idle wrote:
> >I will implement a temporary fix, then look at changing to
> >vectors, which are faster than the hash table for this anyway. I
> >think my doubts were whether you should be able to delete an
> >element from the list and expect the keys to be preserved, or
> >whether the key should be an ordinal, in that you can delete list
> >entry #1 as many times as there is a list entry #1 left. I need
> >to decide which it should be then implement either a key field in
> >the structure (so that it does not reuse the same key in the
> >hashtable), or change to vectors and make the key ordinal (which
> >is what I think a list means actually).
> 
> By normal definitions, a "list" could either be a "linked list" or
> a "vector"; either way it's logically unkeyed (though frequently
> they are implicitly keyed by their position in the
> collection).  So for a "list" I think everyone would expect the
> behaviour that if you deleted item #1 then item #2 would "move" to
> become the new item #1.  (Which is not what it does right now.)
> 
> I imagine hashtables could still be useful in some places (eg. the
> string factory), but I suspect most of the public stuff should
> probably be dealing with lists.


From parrt at cs.usfca.edu  Tue Aug 14 09:59:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 14 Aug 2007 09:59:53 -0700
Subject: [antlr-interest] Error reporting
In-Reply-To: <20070814084416.9540@gmx.net>
References: <20070813123806.168540@gmx.net> <20070814084416.9540@gmx.net>
Message-ID: <5A60EEF9-6A35-40BD-8970-8BBEE3869FC1@cs.usfca.edu>

Hi.

.+ consumes until EOF I think in parser...match strings in lexer.

Ter
On Aug 14, 2007, at 1:44 AM, Matthias Schnelte wrote:

> No ideas? anybody?
> I have tried the same grammar with javacc and it reports all the  
> three possibilities as error message.
> Any idea how to implement this in ANTLR?
>
> Matthias
>> ----- Urspr?ngliche Nachricht -----
>> Von: mschnelte at gmx.de
>> Gesendet: 13.08.07 13:38 Uhr
>> An: antlr-interest at antlr.org
>> Betreff: [antlr-interest] Error reporting
>>
>> Hi everyone,
>>
>> I have the following grammar:
>>
>> ===
>> sp2: WENN condition DANN;
>>
>>
>> condition  :    simpleCondition (('und' ^|'oder' ^)  
>> simpleCondition)*;
>>
>> simpleCondition :    ie iv 'ist';
>>
>> ie     :    QUOTE! .+ QUOTE!;
>> iv    :    QUOTE! .+ QUOTE!;
>>
>>
>> If the parser reads the following string: "wenn "bla" "blub" ist"  
>> it reports as error:
>>
>> "mismatched input '<EOF>' expecting DANN"
>>
>> Ok, "DANN" would produce a correct statement but "und" or "oder"  
>> can follow a simpleCondition as well.
>> How can I get the parser to print out all possible inputs on a  
>> decision point?
>> I want to implement a code completion and such thing would of  
>> course be very useful.
>>
>> Matthias
>>


From parrt at cs.usfca.edu  Tue Aug 14 10:42:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 14 Aug 2007 10:42:48 -0700
Subject: [antlr-interest] Python runtime download
In-Reply-To: <200708141905.18174.pink@odahoda.de>
References: <af8252920708140142r2d835a82m5b2470f974325e41@mail.gmail.com>
	<f9s0v8$keo$1@sea.gmane.org>
	<FA99EFD2-7F86-4AAC-B56F-4FD428C16D62@cs.usfca.edu>
	<200708141905.18174.pink@odahoda.de>
Message-ID: <F2D6D74B-D85E-4874-B397-E9E3D3E68C69@cs.usfca.edu>

Hi. Updated

http://www.antlr.org/download.html

to have links to C and Python runtime binary distributions.

Ter


From mbarringer at suse.de  Tue Aug 14 13:34:58 2007
From: mbarringer at suse.de (Matt Barringer)
Date: Tue, 14 Aug 2007 13:34:58 -0700 (PDT)
Subject: [antlr-interest] syntactic predicates in the lexer
In-Reply-To: <051466DAA0D608439E196797955018D70235DE@wavemachine.temporal-wave.com>
References: <Pine.LNX.4.64.0708111712510.14901@eluvium.int.wirex.com>
	<051466DAA0D608439E196797955018D70235DE@wavemachine.temporal-wave.com>
Message-ID: <Pine.LNX.4.64.0708131331140.26366@eluvium.int.wirex.com>

On Sat, 11 Aug 2007, Jim Idle wrote:

> So, here you have a number of tokesn that start with '#' (well, 2 I
> guess) and the key is to key one rule from the '#' and then set the
> token type once you discover what comes next:

That worked perfectly, thanks!

Matt

From Stephen_Hardy at rabbit.com  Tue Aug 14 13:49:10 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Tue, 14 Aug 2007 13:49:10 -0700
Subject: [antlr-interest] What's this NoClassDefFoundError nonsense?
Message-ID: <62BABE024B7C074E9194E9727A418979C4F05A@dvs-sms-mail01.digi.com>

Java really gets me sometimes...

Can anyone tell me what I'm doing wrong?  Here is the command I'm
running (from the DOS prompt):

"c:\program files\java\jdk1.6.0_02\bin\java" -classpath
c:\antlr-3.0\lib\antlr-runtime-3.0.jar;c:\antlr-3.0\lib\stringtemplate-3
.0.jar;  -jar c2dc.jar

c2dc.jar is my app, which happily compiles (and _was_ running in the
NetBeans IDE).  I can list (jar -tf) the contents of both
antlr-runtime-3.0.jar and c2dc.jar and they appear to be ship shape and
bristol fashion.  However, when I run the above command it gets the
NoClassDefFoundError exception when doing something with
org/antlr/runtime/CharStream, even though CharStream is clearly in the
classpath.

Of course, something must be terribly broken.  Any suggestions?

Another clue: after performing a 'make clean' Ant target in Netbeans, I
can no longer get it to run.  However in this case I am entirely using
the command-line tools, no IDE.  Something is really screwed up - should
I reinstall the JDK?

Regards,
SJH

From ulf at ofahrt.de  Tue Aug 14 14:12:02 2007
From: ulf at ofahrt.de (Ulf Ochsenfahrt)
Date: Tue, 14 Aug 2007 23:12:02 +0200
Subject: [antlr-interest] What's this NoClassDefFoundError nonsense?
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F05A@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F05A@dvs-sms-mail01.digi.com>
Message-ID: <46C21AA2.7060408@ofahrt.de>

Hardy, Stephen wrote:
> Java really gets me sometimes...
> 
> Can anyone tell me what I'm doing wrong?  Here is the command I'm
> running (from the DOS prompt):
> 
> "c:\program files\java\jdk1.6.0_02\bin\java" -classpath
> c:\antlr-3.0\lib\antlr-runtime-3.0.jar;c:\antlr-3.0\lib\stringtemplate-3
> .0.jar;  -jar c2dc.jar

If I remember correctly, You can't use both -classpath and -jar. If you 
use -jar, the -classpath option is ignored. Try listing c2dc.jar with 
the -classpath option and then name the main class directly. 
Alternatively, you can try adding the classpath reference to the antlr 
runtime to your MANIFEST. I don't know the syntax offhand, but can look 
it up if you can't figure it out.

> c2dc.jar is my app, which happily compiles (and _was_ running in the
> NetBeans IDE).  I can list (jar -tf) the contents of both
> antlr-runtime-3.0.jar and c2dc.jar and they appear to be ship shape and
> bristol fashion.  However, when I run the above command it gets the
> NoClassDefFoundError exception when doing something with
> org/antlr/runtime/CharStream, even though CharStream is clearly in the
> classpath.

Cheers,

-- Ulf

From ohumbel at gmail.com  Tue Aug 14 14:12:36 2007
From: ohumbel at gmail.com (Oti)
Date: Tue, 14 Aug 2007 23:12:36 +0200
Subject: [antlr-interest] What's this NoClassDefFoundError nonsense?
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F05A@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F05A@dvs-sms-mail01.digi.com>
Message-ID: <ba90a0a90708141412g4fbd84c2hc1cc448f90b13798@mail.gmail.com>

Stephen,

IMHO you cannot mix -classpath and -jar options when starting the java VM.
Either say
  java -jar your_jar
and add the other necessary .jar files to the classpath in the
MANIFEST of your_jar,
or put every .jar file after the -classpath option and indicate the
main class on the command line.

HTH a little.

Best wishes,
Oti.

On 8/14/07, Hardy, Stephen <Stephen_Hardy at rabbit.com> wrote:
> Java really gets me sometimes...
>
> Can anyone tell me what I'm doing wrong?  Here is the command I'm
> running (from the DOS prompt):
>
> "c:\program files\java\jdk1.6.0_02\bin\java" -classpath
> c:\antlr-3.0\lib\antlr-runtime-3.0.jar;c:\antlr-3.0\lib\stringtemplate-3
> .0.jar;  -jar c2dc.jar
>
> c2dc.jar is my app, which happily compiles (and _was_ running in the
> NetBeans IDE).  I can list (jar -tf) the contents of both
> antlr-runtime-3.0.jar and c2dc.jar and they appear to be ship shape and
> bristol fashion.  However, when I run the above command it gets the
> NoClassDefFoundError exception when doing something with
> org/antlr/runtime/CharStream, even though CharStream is clearly in the
> classpath.
>
> Of course, something must be terribly broken.  Any suggestions?
>
> Another clue: after performing a 'make clean' Ant target in Netbeans, I
> can no longer get it to run.  However in this case I am entirely using
> the command-line tools, no IDE.  Something is really screwed up - should
> I reinstall the JDK?
>
> Regards,
> SJH
>

From robermann at gmail.com  Tue Aug 14 14:44:53 2007
From: robermann at gmail.com (Roberto Mannai)
Date: Tue, 14 Aug 2007 23:44:53 +0200
Subject: [antlr-interest] What's this NoClassDefFoundError nonsense?
In-Reply-To: <ba90a0a90708141412g4fbd84c2hc1cc448f90b13798@mail.gmail.com>
References: <62BABE024B7C074E9194E9727A418979C4F05A@dvs-sms-mail01.digi.com>
	<ba90a0a90708141412g4fbd84c2hc1cc448f90b13798@mail.gmail.com>
Message-ID: <414e44f70708141444g3423f594wadfd760e4c3f1a51@mail.gmail.com>

Hi Stephen,
Try using "bootclasspath" option:

c:\program files\java\jdk1.6.0_02\bin\java -Xbootclasspath/a:"c:\antlr-
3.0\lib\antlr-runtime-3.0.jar;c:\antlr-3.0\lib\stringtemplate-3.0.jar;"
-jar "c2dc.jar"

I also faced your problem and that option worked.

Roberto


> On 8/14/07, Hardy, Stephen <Stephen_Hardy at rabbit.com> wrote:
> > Java really gets me sometimes...
> >
> > Can anyone tell me what I'm doing wrong?  Here is the command I'm
> > running (from the DOS prompt):
> >
> > "c:\program files\java\jdk1.6.0_02\bin\java" -classpath
> > c:\antlr-3.0\lib\antlr-runtime-3.0.jar;c:\antlr-3.0\lib\stringtemplate-3
> > .0.jar;  -jar c2dc.jar
> >
> > c2dc.jar is my app, which happily compiles (and _was_ running in the
> > NetBeans IDE).  I can list (jar -tf) the contents of both
> > antlr-runtime-3.0.jar and c2dc.jar and they appear to be ship shape and
> > bristol fashion.  However, when I run the above command it gets the
> > NoClassDefFoundError exception when doing something with
> > org/antlr/runtime/CharStream, even though CharStream is clearly in the
> > classpath.
> >
> > Of course, something must be terribly broken.  Any suggestions?
> >
> > Another clue: after performing a 'make clean' Ant target in Netbeans, I
> > can no longer get it to run.  However in this case I am entirely using
> > the command-line tools, no IDE.  Something is really screwed up - should
> > I reinstall the JDK?
> >
> > Regards,
> > SJH
> >
>



-- 
Are you tired of making software? Play it! (http://www.codesounding.org)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070814/41a4bee0/attachment.html 

From Stephen_Hardy at rabbit.com  Tue Aug 14 15:17:03 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Tue, 14 Aug 2007 15:17:03 -0700
Subject: [antlr-interest] What's this NoClassDefFoundError nonsense?
In-Reply-To: <414e44f70708141444g3423f594wadfd760e4c3f1a51@mail.gmail.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F05B@dvs-sms-mail01.digi.com>

Roberto, Oti & Ulf,

thanks a million - that fixed it!

One minor problem remains, in that I need to add antlr-2.7.7.jar to the
path otherwise it fails to find class antlr/TokenStream.  I would have
thought only the runtime and stringtemplate jars would be required.
Anyway, doesn't matter since it works now...

Regards,
SJH


> -----Original Message-----
> From: Roberto Mannai [mailto:robermann at gmail.com] 
> Sent: Tuesday, August 14, 2007 2:45 PM
> To: Oti
> Cc: Hardy, Stephen; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] What's this 
> NoClassDefFoundError nonsense?
> 
> Hi Stephen,
> Try using "bootclasspath" option:
> 
> c:\program files\java\jdk1.6.0_02\bin\java 
> -Xbootclasspath/a:"c:\antlr-3.0\lib\antlr-runtime-3.0.jar;c:\a
> ntlr-3.0\lib\stringtemplate-3.0.jar;"   -jar " c2dc.jar" 
> 
> I also faced your problem and that option worked.
> 
> Roberto
> 
> 
> 
> 
> 	On 8/14/07, Hardy, Stephen <Stephen_Hardy at rabbit.com> wrote:
> 	> Java really gets me sometimes...
> 	>
> 	> Can anyone tell me what I'm doing wrong?  Here is the 
> command I'm 
> 	> running (from the DOS prompt):
> 	>
> 	> "c:\program files\java\jdk1.6.0_02\bin\java" -classpath
> 	> 
> c:\antlr-3.0\lib\antlr-runtime-3.0.jar;c:\antlr-3.0\lib\string
> template-3
> 	> .0.jar;  -jar c2dc.jar
> 	>
> 	> c2dc.jar is my app, which happily compiles (and _was_ 
> running in the
> 	> NetBeans IDE).  I can list (jar -tf) the contents of both
> 	> antlr-runtime-3.0.jar and c2dc.jar and they appear to 
> be ship shape and 
> 	> bristol fashion.  However, when I run the above 
> command it gets the
> 	> NoClassDefFoundError exception when doing something with
> 	> org/antlr/runtime/CharStream, even though CharStream 
> is clearly in the
> 	> classpath.
> 	>
> 	> Of course, something must be terribly broken.  Any 
> suggestions?
> 	>
> 	> Another clue: after performing a 'make clean' Ant 
> target in Netbeans, I
> 	> can no longer get it to run.  However in this case I 
> am entirely using 
> 	> the command-line tools, no IDE.  Something is really 
> screwed up - should
> 	> I reinstall the JDK?
> 	>
> 	> Regards,
> 	> SJH
> 	>
> 	
> 
> 
> 
> 
> -- 
> Are you tired of making software? Play it! ( 
> http://www.codesounding.org) 
> 

From kroepke at classdump.org  Tue Aug 14 15:59:21 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 15 Aug 2007 00:59:21 +0200
Subject: [antlr-interest] What's this NoClassDefFoundError nonsense?
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F05B@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F05B@dvs-sms-mail01.digi.com>
Message-ID: <B8B49B0B-DF91-4AE1-A32A-CAEED4AD62D8@classdump.org>


On Aug 15, 2007, at 12:17 AM, Hardy, Stephen wrote:

> One minor problem remains, in that I need to add antlr-2.7.7.jar to  
> the
> path otherwise it fails to find class antlr/TokenStream.  I would have
> thought only the runtime and stringtemplate jars would be required.

Not at the moment, unfortunately. Both StringTemplate and ANTLR are
implemented in terms of v2 at the moment.
ANTLR will definitely switch to being self hosted at some point in the
future (there is an experimental ANTLRv3.g written in v3 already) but
what the timeframe for ST is, I don't know.

I'm actively working on a ST grammar in v3, but right now my goal is not
to reimplement Java ST in v3, but rather being able to recognize ST in
Objective C. It might trickle down into ST mainline, though. We haven't
discussed that yet.

cheers,
-l
-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Tue Aug 14 18:56:38 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 14 Aug 2007 18:56:38 -0700
Subject: [antlr-interest] ANTLRWorks Is Psychic!
Message-ID: <200708141856.38705.rschulz@sonic.net>

Hi,

I just launched ANTLRWorks for the fist time in a couple of weeks and it 
notified me that a new version was available (version 1.1.2). I clicked 
the "Download" button, expecting to be taken to a browser window from 
which I could perform the download. Instead, ANLTRWorks did the 
download itself and, and here's where it gets interesting, put the JAR 
file it retrieved in the same directory I use for downloads. And this 
is not a name that could be guessed as a typical download directory.

How did it know??


Randall Schulz

From rschulz at sonic.net  Tue Aug 14 18:58:07 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 14 Aug 2007 18:58:07 -0700
Subject: [antlr-interest] ANTLRWorks Is Psychic!
In-Reply-To: <200708141856.38705.rschulz@sonic.net>
References: <200708141856.38705.rschulz@sonic.net>
Message-ID: <200708141858.07104.rschulz@sonic.net>

On Tuesday 14 August 2007 18:56, Randall R Schulz wrote:
> Hi,
>
> ...
>
> How did it know??

Ah. I see. I told it: Preferences -> Updates.


RRS

From qr at tut.by  Wed Aug 15 01:56:55 2007
From: qr at tut.by (=?windows-1251?Q?=C8=E2=E0=ED_=CF=E5=F2=F0=EE=E2?=)
Date: Wed, 15 Aug 2007 11:56:55 +0300
Subject: [antlr-interest] Newbie: where is the C# runtime binary?
Message-ID: <web-373508989@speedy.tutby.com>

Hi everyone, I have just tried antlr with C# and could not find the 
runtime support for the generated parsers. From what I found on the web, 
it should be antlr.runtime.dll or antlr3.runtime.dll, but there is no such 
file in antlr-3.0.1.jar, nor in antlr-3.0.1.tar.gz and 
antlrworks-1.1.2.jar and Antlr.Tool.zip. The download section on antlr.org 
does not mention it, and the relevant page in the wiki is empty.

Can anyone please point me in the correct direction?
  


From kroepke at classdump.org  Wed Aug 15 02:20:00 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 15 Aug 2007 11:20:00 +0200
Subject: [antlr-interest] Newbie: where is the C# runtime binary?
In-Reply-To: <web-373508989@speedy.tutby.com>
References: <web-373508989@speedy.tutby.com>
Message-ID: <D22AE686-9764-4FF5-B3A5-0F2EDF16244C@classdump.org>


On Aug 15, 2007, at 10:56 AM, ???? ?????? wrote:

> Hi everyone, I have just tried antlr with C# and could not find the  
> runtime support for the generated parsers. From what I found on the  
> web, it should be antlr.runtime.dll or antlr3.runtime.dll, but  
> there is no such file in antlr-3.0.1.jar, nor in antlr-3.0.1.tar.gz  
> and antlrworks-1.1.2.jar and Antlr.Tool.zip. The download section  
> on antlr.org does not mention it, and the relevant page in the wiki  
> is empty.
>
> Can anyone please point me in the correct direction?

I just looked, and the C# stuff is included in the antlr-3.0.1.tar.gz  
found on the download page.
Look inside the runtime/CSharp directory. All runtime support is  
there, Java, too.

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From qr at tut.by  Wed Aug 15 02:38:43 2007
From: qr at tut.by (=?windows-1251?Q?=C8=E2=E0=ED_=CF=E5=F2=F0=EE=E2?=)
Date: Wed, 15 Aug 2007 12:38:43 +0300
Subject: [antlr-interest] Newbie: where is the C# runtime binary?
In-Reply-To: <D22AE686-9764-4FF5-B3A5-0F2EDF16244C@classdump.org>
References: <web-373508989@speedy.tutby.com>
	<D22AE686-9764-4FF5-B3A5-0F2EDF16244C@classdump.org>
Message-ID: <web-373528656@speedy.tutby.com>

Thank you very much, it's there, I must have been blind.

Wed, 15 Aug 2007 11:20:00 +0200, Kay Roepke <kroepke at classdump.org> 
?????(?):

> 
> On Aug 15, 2007, at 10:56 AM, ???? ?????? wrote:
> 
>> Hi everyone, I have just tried antlr with C# and could not find the  
>> runtime support for the generated parsers. From what I found on the  
>> web, it should be antlr.runtime.dll or antlr3.runtime.dll, but  
>> there is no such file in antlr-3.0.1.jar, nor in antlr-3.0.1.tar.gz  
>> and antlrworks-1.1.2.jar and Antlr.Tool.zip. The download section  
>> on antlr.org does not mention it, and the relevant page in the wiki  
>> is empty.
>>
>> Can anyone please point me in the correct direction?
> 
> I just looked, and the C# stuff is included in the antlr-3.0.1.tar.gz 
> found on the download page.
> Look inside the runtime/CSharp directory. All runtime support is  there, 
>Java, too.
> 
> HTH,
> -k
> 
> -- 
> Kay R?pke
> http://classdump.org/
> 
> 
> 
> 

  


From doebel at tudos.org  Wed Aug 15 02:56:54 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Wed, 15 Aug 2007 11:56:54 +0200
Subject: [antlr-interest] ANTLR Tree to Graphviz translator
Message-ID: <46C2CDE6.7050800@tudos.org>

Hi,

I'm currently trying to build a larger ANTLR tree parser. For learning und
debugging I found it handy to visualize the string representations ANTLR
prints for my trees, so I wrote a small grammar and tool to translate it
into the Dot language used by GraphViz.

I know this is nothing new or complex and that there is the ANTLR studio
that can aid in debugging much more efficiently. Anyway, if someone prefers
to use ANTLR from the command line and wants some visualization, you might
want to try it out http://os.inf.tu-dresden.de/~doebel/Tree2Dot/

Regards,
Bjoern

From doebel at tudos.org  Wed Aug 15 04:21:13 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Wed, 15 Aug 2007 13:21:13 +0200
Subject: [antlr-interest] ANTLR Tree to Graphviz translator
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2027A564E@orsmsx417.amr.corp.intel.com>
References: <46C2CDE6.7050800@tudos.org>
	<A10CD303B51F814DB568A8AAF02174C2027A564E@orsmsx417.amr.corp.intel.com>
Message-ID: <46C2E1A9.5090108@tudos.org>

Diehl, Matthew J wrote:
> Wow, that's sweet!  I wanted to have something like this about 2 months
> ago!  I hope they add it into the ANTLRWorks for everyone (with your
> permission of course) ;)

I wouldn't have any objections, if people like it. ;)

Bjoern


From fyaoxy at gmail.com  Wed Aug 15 04:33:54 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Wed, 15 Aug 2007 19:33:54 +0800
Subject: [antlr-interest] Is a bug if multiple groups comments
In-Reply-To: <91dd9a4f0708150432s61accae8l32c849e794af5785@mail.gmail.com>
References: <91dd9a4f0708150432s61accae8l32c849e794af5785@mail.gmail.com>
Message-ID: <91dd9a4f0708150433k245e94c1y39bf238d029906d7@mail.gmail.com>

Hi, given this grammar piece:
begin
/*******************************************
* keywords refine
********************************************/
//keySTRING:{input.LT(1).getText().equals("string");}WORD;

/*******************************************
* all lexer rulers
********************************************/
end;

antlr report "unexpected token ....
/*******************************************
* all lexer rulers
********************************************/
"
is this a bug?
I think it is acceptable to allow this style.

-- 
??
???

From tbrandonau at gmail.com  Wed Aug 15 05:04:39 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 15 Aug 2007 22:04:39 +1000
Subject: [antlr-interest] Is a bug if multiple groups comments
In-Reply-To: <91dd9a4f0708150433k245e94c1y39bf238d029906d7@mail.gmail.com>
References: <91dd9a4f0708150432s61accae8l32c849e794af5785@mail.gmail.com>
	<91dd9a4f0708150433k245e94c1y39bf238d029906d7@mail.gmail.com>
Message-ID: <ebc876d70708150504m2e7c8252h4a93e6dcfdc8fab5@mail.gmail.com>

On 8/15/07, ??? <fyaoxy at gmail.com> wrote:
> Hi, given this grammar piece:
> begin
> /*******************************************
> * keywords refine
> ********************************************/
> //keySTRING:{input.LT(1).getText().equals("string");}WORD;
>
> /*******************************************
> * all lexer rulers
> ********************************************/
> end;
>
> antlr report "unexpected token ....
> /*******************************************
> * all lexer rulers
> ********************************************/
> "
> is this a bug?
> I think it is acceptable to allow this style.
ANTLR's grammar does not handle multiple javadoc comments per rule. As
your comments start with /** ANTLR is treating them as javadoc
comments and as there is no rule in between them this causes an error.
Changing them to "//********..." or to "/* *****..." should work.
This could perhaps be improved in the antlr grammar rewrite, putting
javadoc comments on their own channel.

Tom.
>
> --
> ??
> ???
>

From warren.madden at lmco.com  Wed Aug 15 05:44:45 2007
From: warren.madden at lmco.com (Madden, Warren)
Date: Wed, 15 Aug 2007 08:44:45 -0400
Subject: [antlr-interest] ANTLRWorks Is Psychic!
In-Reply-To: <200708141858.07104.rschulz@sonic.net>
References: <200708141856.38705.rschulz@sonic.net>
	<200708141858.07104.rschulz@sonic.net>
Message-ID: <96B09C31BB3969458305F4269B2D410F08881C91@emss06m08.mar.lmco.com>

Ah, but is it psychic enough to realize that a new version of ANTLR has
been released and incorporate it into the ANTLRworks jar file? :-)

Warren Madden

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Randall R Schulz
Sent: Tuesday, August 14, 2007 9:58 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLRWorks Is Psychic!

On Tuesday 14 August 2007 18:56, Randall R Schulz wrote:
> Hi,
>
> ...
>
> How did it know??

Ah. I see. I told it: Preferences -> Updates.


RRS

From a.shneyderman at gmail.com  Wed Aug 15 05:46:32 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 15 Aug 2007 14:46:32 +0200
Subject: [antlr-interest] ANTLR 2 lexer rule confusion
Message-ID: <693a69ba0708150546ud6ccd27q1f6562aa81b6e3d2@mail.gmail.com>

I am a bit slow today but could anyone explain what this rule is matching?

protected
STRING_CTOR_END[boolean tripleQuote]
    :
        (
            options {  greedy = true;  }:
              STRING_CH
            | ESC
            | '\''
            | STRING_NL
            | ('"' (~'"' | '"' ~'"')) => {tripleQuote}? '"'
        )*
        (
              ( { !tripleQuote }? "\""! | {  tripleQuote }? "\"\"\""! )
           |  '$'
        )
    ;

I am struggling to understand this construct:

| ('"' (~'"' | '"' ~'"')) => {tripleQuote}? '"'

Any ideas?


-- 
Thanks,
Alex.

From a.shneyderman at gmail.com  Wed Aug 15 08:09:46 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 15 Aug 2007 17:09:46 +0200
Subject: [antlr-interest] ANTLRWorks - lexer run only?
Message-ID: <693a69ba0708150809q3541e96i706e5047a8063cb0@mail.gmail.com>

I find it sometimes useful to see what is the sequnce of tokens that
gets produced by the lexer with no parser involvment. I wonder if
there is a way to do this in ANTLRWorks?

-- 
Thanks,
Alex.

From parrt at cs.usfca.edu  Wed Aug 15 08:16:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Aug 2007 08:16:31 -0700
Subject: [antlr-interest] ANTLRWorks - lexer run only?
In-Reply-To: <693a69ba0708150809q3541e96i706e5047a8063cb0@mail.gmail.com>
References: <693a69ba0708150809q3541e96i706e5047a8063cb0@mail.gmail.com>
Message-ID: <3DD6147E-345D-46D9-9F7D-A817F23A1709@cs.usfca.edu>


On Aug 15, 2007, at 8:09 AM, Alex Shneyderman wrote:

> I find it sometimes useful to see what is the sequnce of tokens that
> gets produced by the lexer with no parser involvment. I wonder if
> there is a way to do this in ANTLRWorks?

use a single rule in parser:

start : .+ ;

Ter


From tbrandonau at gmail.com  Wed Aug 15 09:30:10 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 16 Aug 2007 02:30:10 +1000
Subject: [antlr-interest] Is a bug if multiple groups comments
In-Reply-To: <91dd9a4f0708150914g7858d2f5lc34e62008222e680@mail.gmail.com>
References: <91dd9a4f0708150432s61accae8l32c849e794af5785@mail.gmail.com>
	<91dd9a4f0708150433k245e94c1y39bf238d029906d7@mail.gmail.com>
	<ebc876d70708150504m2e7c8252h4a93e6dcfdc8fab5@mail.gmail.com>
	<91dd9a4f0708150914g7858d2f5lc34e62008222e680@mail.gmail.com>
Message-ID: <ebc876d70708150930i21f4c39ax5b37e657f0ba8695@mail.gmail.com>

On 8/16/07, ??? <fyaoxy at gmail.com> wrote:
> Thank you :)
> Do you think multiple comments in one rule is necessary?
> Sometimes people may wanna comment something just like which that
> piece represented.
Multiple comments certainly, and they are supported. The issue only
affects multiple javadoc comments. Multiple javadoc comments are a
different matter. Only one javadoc comment for each rule can be used
so multiple javadoc comments isn't really useful, and having
non-javadoc comments such as yours using the javadoc pattern probably
isn't the best approach. In your case the first rule in your commented
block would have the block comment as a javadoc comment, not what you
want.
Currently the javadoc handling is rather simplistic with anything but
a single javadoc comment immediately proceeding a rule causing an
error. It may be nicer if ANTLR ignored all but the last javadoc
comment for a rule, this is what javac seems to do, without any
warning. Perhaps a warning could be given though I don't know thats
necessary. At least ANTLR could give a better error message about the
problem.

Tom.
>
> 2007/8/15, Thomas Brandon <tbrandonau at gmail.com>:
> > On 8/15/07, ??? <fyaoxy at gmail.com> wrote:
> > > Hi, given this grammar piece:
> > > begin
> > > /*******************************************
> > > * keywords refine
> > > ********************************************/
> > > //keySTRING:{input.LT(1).getText().equals("string");}WORD;
> > >
> > > /*******************************************
> > > * all lexer rulers
> > > ********************************************/
> > > end;
> > >
> > > antlr report "unexpected token ....
> > > /*******************************************
> > > * all lexer rulers
> > > ********************************************/
> > > "
> > > is this a bug?
> > > I think it is acceptable to allow this style.
> > ANTLR's grammar does not handle multiple javadoc comments per rule. As
> > your comments start with /** ANTLR is treating them as javadoc
> > comments and as there is no rule in between them this causes an error.
> > Changing them to "//********..." or to "/* *****..." should work.
> > This could perhaps be improved in the antlr grammar rewrite, putting
> > javadoc comments on their own channel.
> >
> > Tom.
> > >
> > > --
> > > ??
> > > ???
> > >
> >
>
>
> --
> ??
> ???
>

From snouto at gmail.com  Wed Aug 15 10:20:06 2007
From: snouto at gmail.com (Mohammed Ibrahim)
Date: Wed, 15 Aug 2007 20:20:06 +0300
Subject: [antlr-interest] C# Antlr Problem (HANGED UP ANTLRInputStream)
Message-ID: <001f01c7df60$8f8ee6b0$0201a8c0@robtronix>

Hello  Everybody in this great Mailing list of antlr.

Im have been working with antlr from short time , i used it effectively in Java but i would like to use it in C# in Vs.Net 2005 , i wrote this piece of Too simple Grammar for antlr Tool 
Here is the Grammar

======================================
Hello.g
======

grammar hello;
options
{
   language = CSharp;
}
prog : stat+;
stat returns [string value] : GREETING{$value = $GREETING.text;} (LETTER{$value +=" "+$LETTER.text; })+;
GREETING: 'welcome'|'greeting'|'hello';
LETTER : ('a'..'z')+;
WS : ('"'|' '|'\r'|'\n'|'\t')+ {skip();};

===============================================

It Generated  helloLexer and HelloParser code Pages , But when i use it in C# it hangs at ANTLRInputStream Code line.

Here is the code.

===============================================================================
 using System;

 using System.Collections.Generic;

 using System.Text;

 using Antlr.StringTemplate;

 using antlr;

 using Antlr.Runtime;

 namespace ConsoleApplication2

 {

 class Program

 {

 static void Main(string[] args)

 {

 helloLexer Currentlexer = new helloLexer((ICharStream)new CharBuffer (Console.In));  

 /* here is the error professor it  
 gives me an exception telling me that Charbuffer cant be converted  
 into ICharStream , and i found that logically correct but i don't  
 know how to get things work in C# in java i used ANLTRInputStream but when i use it in C# it hangs at that line and  
the application becomes no longer responsive. i would like to know what is the problem ,  i need to have a good  
working code in v3.0 in C# like getting inputted data and then  
parsing it .
 

*/


 
helloParser Currentparser = new helloParser(new CommonTokenStream 
 (Currentlexer));

string result = Currentparser.stat();

 Console.WriteLine(result);

 Console.ReadLine();

 }

 }

 }



You see Console.In  Line when i expects Data from the user , The program Crashes There and gives me Exceptions Finally it stops.

How can i Pass this exception , I don't know what did i do to raise this exception ???????????????????????????

Second , i really want to know how to pass Data to the ANTLRInputStream Class in C# because in C# there is no StringBufferInputStream as in java ??????????????????????? To accept Data from the user as i did in Java here is the code in java


===============================================================
input = args[0];
ANTLRInputStream AntlrStream = new ANTLRInputStream(new StringBufferInputStream(input));
    helloLexer CurrentLexer = new helloLexer(AntlrStream);
    helloParser CurrentParser = new helloParser(new CommonTokenStream(CurrentLexer));
    String result = CurrentParser.stat();
    System.out.println(result);





Please Help me in this problem :(( i would like to effectively use Antlr in C# as i did in java ????????????????????????????/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070815/f491c20a/attachment-0001.html 

From snouto at gmail.com  Wed Aug 15 10:21:53 2007
From: snouto at gmail.com (Mohammed Ibrahim)
Date: Wed, 15 Aug 2007 20:21:53 +0300
Subject: [antlr-interest] C# Antlr Problem (HANGED UP ANTLRInputStream)
Message-ID: <002d01c7df60$c7a6f290$0201a8c0@robtronix>


  ----- Original Message ----- 
  From: Mohammed Ibrahim 
  To: antlr-interest at antlr.org 
  Sent: Wednesday, August 15, 2007 8:20 PM
  Subject: C# Antlr Problem (HANGED UP ANTLRInputStream)


  Hello  Everybody in this great Mailing list of antlr.

  Im have been working with antlr from short time , i used it effectively in Java but i would like to use it in C# in Vs.Net 2005 , i wrote this piece of Too simple Grammar for antlr Tool 
  Here is the Grammar

  ======================================
  Hello.g
  ======

  grammar hello;
  options
  {
     language = CSharp;
  }
  prog : stat+;
  stat returns [string value] : GREETING{$value = $GREETING.text;} (LETTER{$value +=" "+$LETTER.text; })+;
  GREETING: 'welcome'|'greeting'|'hello';
  LETTER : ('a'..'z')+;
  WS : ('"'|' '|'\r'|'\n'|'\t')+ {skip();};

  ===============================================

  It Generated  helloLexer and HelloParser code Pages , But when i use it in C# it hangs at ANTLRInputStream Code line.

  Here is the code.

  ===============================================================================
   using System;

   using System.Collections.Generic;

   using System.Text;

   using Antlr.StringTemplate;

   using antlr;

   using Antlr.Runtime;

   namespace ConsoleApplication2

   {

   class Program

   {

   static void Main(string[] args)

   {

   helloLexer Currentlexer = new helloLexer((ICharStream)new CharBuffer (Console.In));  

   /* here is the error professor it  
  gives me an exception telling me that Charbuffer cant be converted  
  into ICharStream , and i found that logically correct but i don't  
  know how to get things work in C# in java i used ANLTRInputStream but when i use it in C# it hangs at that line and  
  the application becomes no longer responsive. i would like to know what is the problem ,  i need to have a good  
  working code in v3.0 in C# like getting inputted data and then  
  parsing it .
   

  */


   
  helloParser Currentparser = new helloParser(new CommonTokenStream 
  (Currentlexer));

  string result = Currentparser.stat();

   Console.WriteLine(result);

   Console.ReadLine();

   }

   }

   }



  You see Console.In  Line when i expects Data from the user , The program Crashes There and gives me Exceptions Finally it stops.

  How can i Pass this exception , I don't know what did i do to raise this exception ???????????????????????????

  Second , i really want to know how to pass Data to the ANTLRInputStream Class in C# because in C# there is no StringBufferInputStream as in java ??????????????????????? To accept Data from the user as i did in Java here is the code in java


  ===============================================================
  input = args[0];
  ANTLRInputStream AntlrStream = new ANTLRInputStream(new StringBufferInputStream(input));
      helloLexer CurrentLexer = new helloLexer(AntlrStream);
      helloParser CurrentParser = new helloParser(new CommonTokenStream(CurrentLexer));
      String result = CurrentParser.stat();
      System.out.println(result);





  Please Help me in this problem :(( i would like to effectively use Antlr in C# as i did in java ????????????????????????????/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070815/c811938d/attachment.html 

From dirty at apple.com  Wed Aug 15 11:56:27 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Wed, 15 Aug 2007 11:56:27 -0700
Subject: [antlr-interest] C Runtime - list container suggestions
In-Reply-To: <20070814080941.3F67B11EA87@www.antlr.org>
References: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>
	<051466DAA0D608439E196797955018D70235F9@wavemachine.temporal-wave.com>
	<20070814080941.3F67B11EA87@www.antlr.org>
Message-ID: <42F2AB91-0E33-4956-9CBB-3ECFF7BA0E61@apple.com>

Interesting.

Then what would the difference between a list and a vector be?

Personally, I thought that vector would do what you describe.  That  
things would move up in the container as items were deleted.

The reason I thought that list would supported persistent IDs is that  
the list routines are built on top of Jim's hash table routines.

If that's the case, then one way to fix list to handle persistent IDs  
would be to use an increasing integer value as the key, supplied by  
list add(), to the hash routine.  Right now, it uses the size of the  
hash, which means it can decrease when items are deleted, causing  
keys to collide.

This is how I solved it.  I stopped using the list routines and just  
created a hash with an integer key that increased each time I called  
add().

On Aug 14, 2007, at 1:09 AM, Gavin Lambert wrote:

> At 10:29 14/08/2007, Jim Idle wrote:
>> I will implement a temporary fix, then look at changing to  
>> vectors, which are faster than the hash table for this anyway. I  
>> think my doubts were whether you should be able to delete an  
>> element from the list and expect the keys to be preserved, or  
>> whether the key should be an ordinal, in that you can delete list  
>> entry #1 as many times as there is a list entry #1 left. I need to  
>> decide which it should be then implement either a key field in the  
>> structure (so that it does not reuse the same key in the  
>> hashtable), or change to vectors and make the key ordinal (which  
>> is what I think a list means actually).
>
> By normal definitions, a "list" could either be a "linked list" or  
> a "vector"; either way it's logically unkeyed (though frequently  
> they are implicitly keyed by their position in the collection).  So  
> for a "list" I think everyone would expect the behaviour that if  
> you deleted item #1 then item #2 would "move" to become the new  
> item #1.  (Which is not what it does right now.)
>
> I imagine hashtables could still be useful in some places (eg. the  
> string factory), but I suspect most of the public stuff should  
> probably be dealing with lists.
>

Cameron Esfahani
dirty at apple.com

"With or without religion, good people can behave well and bad people  
can do evil; but for good people to do evil - that takes religion."

Steven Weinberg



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070815/ffd28b5a/attachment.html 

From dave at badgers-in-foil.co.uk  Wed Aug 15 12:26:58 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Wed, 15 Aug 2007 19:26:58 +0000
Subject: [antlr-interest] Path for tokenVocab
In-Reply-To: <F187AAC1-83CF-4EC5-BBD7-06A3B152B945@cs.usfca.edu>
References: <20070813210130.GA32729@badgers-in-foil.co.uk>
	<F187AAC1-83CF-4EC5-BBD7-06A3B152B945@cs.usfca.edu>
Message-ID: <20070815192645.GA2054@badgers-in-foil.co.uk>

On Mon, Aug 13, 2007 at 03:18:18PM -0700, Terence Parr wrote:
> 
> On Aug 13, 2007, at 2:01 PM, David Holroyd wrote:
> >So, it would be *really* nice if the tokenVocab option value could  
> >take a 'package prefix',
> >
> >e.g.
> >  tokenVocab=org/example/SomeGrammar;
> >or
> >  tokenVocab=org.example.SomeGrammar;

> Hmm...the problem is that I envisioned the tokenVocab as a grammar  
> name not a file name.  We'd really need org/example/ 
> SomeGrammar.tokens...hmm...Can you list multiple patterns in the -lib  
> option? (can't remember if I have implemented that).

Tool.java only allows for a single libDirectory.  Even if multiple dirs
could be specified, it would be nice to accommodate the pathological case
of trying to support multiple grammars with the same name (maybe other
people wrote the grammars, and I'm just trying to use the .tokens
files).

Regarding grammar-name vs. file-name, is it reasonable to use the same
sort of translation as for Java class files.  e.g.

  tokenVocab = org.example.SomeGrammar
  token file = ${lib}/org/example/SomeGrammar.tokens

That should be backwards compatible with the current tokenVocab usage, I
think?

ta,
dave

-- 
http://david.holroyd.me.uk/

From vidarsvans at gmail.com  Wed Aug 15 14:31:25 2007
From: vidarsvans at gmail.com (=?ISO-8859-1?Q?Vi=F0ar_Svansson?=)
Date: Wed, 15 Aug 2007 22:31:25 +0100
Subject: [antlr-interest] ANTLRWorks - lexer run only?
In-Reply-To: <3DD6147E-345D-46D9-9F7D-A817F23A1709@cs.usfca.edu>
References: <693a69ba0708150809q3541e96i706e5047a8063cb0@mail.gmail.com>
	<3DD6147E-345D-46D9-9F7D-A817F23A1709@cs.usfca.edu>
Message-ID: <af8252920708151431pda87d9es22d3a018223d3ed9@mail.gmail.com>

On 8/15/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> start : .+ ;

Can I use this to match "any text" token and access its content in the
action? I need something to to match:

start : ID '=' ANYTEXT ';' ;

And then just access the ANYTEXT value in the action.

Vi?ar

From dave.raskin at rimage.com  Wed Aug 15 15:03:49 2007
From: dave.raskin at rimage.com (Dave Raskin)
Date: Wed, 15 Aug 2007 17:03:49 -0500
Subject: [antlr-interest] Spaces in names
In-Reply-To: <DOPEYDskqC5EtrUVYKk00004efb@smtp.Rimage.com>
References: <DOPEYDskqC5EtrUVYKk00004efb@smtp.Rimage.com>
Message-ID: <1D603DEEEE680240A57C26F32DD1665F025BC9E5@dopey.Rimage.com>

I am back on this and have spent a day trying different things, looking
at the sample that you suggested, but no luck with recognizing the ' '
as part of the string. 

I made all changes in the lexer. 
I got rid of WS lexer rule. 

When I pass in an expression like this: 

	daver='some thing'

I get an error back:

expecting ''', found '<EOF>'
   at Rms.Messaging.Selector.SelectLexer.nextToken() in
C:\work\VS8\Messaging\Server\Rms\Messaging\Selector\SelectLexer.cs:line
134
   at antlr.TokenBuffer.fill(Int32 amount)
   at antlr.TokenBuffer.LT(Int32 i)
   at antlr.LLkParser.LT(Int32 i)
   at Rms.Messaging.Selector.SelectParser.value() in
C:\work\VS8\Messaging\Server\Rms\Messaging\Selector\SelectParser.cs:line
239
   at Rms.Messaging.Selector.SelectParser.bool_expr() in
C:\work\VS8\Messaging\Server\Rms\Messaging\Selector\SelectParser.cs:line
175
   at Rms.Messaging.Selector.SelectParser.and_expr() in
C:\work\VS8\Messaging\Server\Rms\Messaging\Selector\SelectParser.cs:line
123
   at Rms.Messaging.Selector.SelectParser.expr() in
C:\work\VS8\Messaging\Server\Rms\Messaging\Selector\SelectParser.cs:line
82
   at Rms.Messaging.Selector.MessageSelector..ctor(String selector) in
C:\work\VS8\Messaging\Server\Rms\Messaging\Selector\MessageSelector.cs:l
ine 16

I attached my changed grammar. Please help!!

Thanks,

Dave Raskin 

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Wednesday, August 08, 2007 3:49 PM
To: Dave Raskin
Cc: antlr-interest at antlr.org
Subject: RE: [antlr-interest] Spaces in names

At 01:56 9/08/2007, Dave Raskin wrote:
>Gavin, thanks for the reply!

First of all, make sure you hit the "Reply to All" button so that your
reply goes to the list as well.  You're more likely to get a response
that way.

>BTW, I am using C# generated code - could this be an issue?

No, this is a grammar problem, not a target problem.

>name_blank_name
>: NAME ( BLANK NAME )*
>;

That won't work, because BLANK tokens will still be getting skipped (or
if they're not, then it'll mess up other bits of your grammar).  As I
said, if you want to skip whitespace most of the time but treat it as
significant sometimes, then you have to do it in the lexer.


>I also tried changing the lexer rule, but got a compile error:

What was the error?

>NAME_BLANK_NAME
>: NAME ( BLANK NAME )*
>;

It's not quite as easy as that; since NAME can contain an arbitrary
number of characters, there's ambiguity between NAME and
NAME_BLANK_NAME.  You'd have to write a hybrid type-changing rule if you
wanted to do it this way.

But as I said in my original message, if you're trying to represent a
string value then this is completely the wrong approach, since it will
collapse whitespace.  ie. it would have no way of representing "hello
world" (two spaces) -- it would always translate it into "hello world"
(one space).  Plus, the above doesn't take leading or trailing space
into account.

You need to make the lexer match an entire string (including the
quotes) as a whole.  That way you can preserve the exact contents of the
string.

>Is there an example grammer you can point to, I haven't found one 
>yet...

Have a look at examples/csharp/tinyc/lexer.g, specifically at the
CHAR_LITERAL and STRING_LITERAL rules.  You basically want a hybrid of
the two, though you can probably simplify the escape handling (only
supporting escaping backslashes and single quotes; though that depends
on your particular dialect).


-------------- next part --------------
A non-text attachment was scrubbed...
Name: SelectGrammar.g
Type: application/octet-stream
Size: 1720 bytes
Desc: SelectGrammar.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070815/61e69f48/attachment.obj 

From parrt at cs.usfca.edu  Wed Aug 15 15:29:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Aug 2007 15:29:12 -0700
Subject: [antlr-interest] ANTLRWorks - lexer run only?
In-Reply-To: <af8252920708151431pda87d9es22d3a018223d3ed9@mail.gmail.com>
References: <693a69ba0708150809q3541e96i706e5047a8063cb0@mail.gmail.com>
	<3DD6147E-345D-46D9-9F7D-A817F23A1709@cs.usfca.edu>
	<af8252920708151431pda87d9es22d3a018223d3ed9@mail.gmail.com>
Message-ID: <BBAA0FF6-5836-4C61-A330-CAEEA3C209FE@cs.usfca.edu>


On Aug 15, 2007, at 2:31 PM, Vi?ar Svansson wrote:

> On 8/15/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>> start : .+ ;
>
> Can I use this to match "any text" token and access its content in the
> action? I need something to to match:
>
> start : ID '=' ANYTEXT ';' ;
>
> And then just access the ANYTEXT value in the action.

Sure as long as ANYTEXT doesn't collide with the other tokens.
Ter


From parrt at cs.usfca.edu  Wed Aug 15 16:37:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 15 Aug 2007 16:37:56 -0700
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
Message-ID: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>

Howdy.  Martin Bravenboer gave me a look at his nice grammar testing  
facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last  
year.  He inspired me to build one for ANTLR.  Fortunately, I found a  
very capable graduate student, Leon Su, that was able to implement it  
this summer.  Here is the wiki with code attached. :)

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

Please direct feedback to the group and/or Leon so we can improve  
it.  I think you'll find it is a very nice tool.  Has both  
interpreted and gUnit->jUnit code gen modes. :)

Terence

From shaohua.wen at gmail.com  Wed Aug 15 20:14:08 2007
From: shaohua.wen at gmail.com (=?UTF-8?B?5paH5bCR5Y2O?=)
Date: Thu, 16 Aug 2007 11:14:08 +0800
Subject: [antlr-interest] ANTLR3 with -Xmultithreaded problem?
Message-ID: <5694af40708152014p6ddc539cy12476ea273ac9f62@mail.gmail.com>

Dear gurus,
  I just created a grammar for TNSDL language, and it has a grammar like:

 range://p84
    closedRange -> ^(Range closedRange)
    |openRange  -> ^(Range openRange)
;

closedRange://p84
    e1=expression ':' e2=expression
    -> ^(ClosedRange $e1 $e2)
;

openRange://p84
    relationSymbol? expression
    -> ^(OpenRange  relationSymbol? expression)
;

 expression:
 .....
;

 When I tried to generate code with antlr 3.0.1(3.0 also tried), the
generated code will not compile with errors like:
  [javac] Compiling 15 source files to bin
    [javac] TNSDLParser.java:69328: code too large for try statement
    [javac]         catch (RecognitionException re) {
    [javac]         ^
    [javac]TNSDLParser.java:38965: code too large for try statement
    [javac]         try {
    [javac]             ^
    [javac] TNSDLParser.java:38952: code too large
    [javac]     public final range_return range() throws
RecognitionException {
    [javac]                               ^

After I looked into the range() method,I found that it has about 30000
lines.

But if I generage java code using antlr with -Xmultithreaded parameter with
jdk 1.6 in linux (redhat ES4, SOME Times the generated code for range()
method is only about 300 lines,and the compiler
can happily compile the generated code.

This is really strange, I don't know if it's a bug of  ANTLR, Can any one
help to analyze it?

The grammar file has been attached to the mail.

Any suggestions on correct my grammar will be highly appreciated also!

Best Regards,
Holy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/dc422e76/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: TNSDL.g3
Type: application/octet-stream
Size: 26860 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/dc422e76/attachment-0001.obj 

From vbar at comp.cz  Thu Aug 16 00:27:31 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 16 Aug 2007 09:27:31 +0200
Subject: [antlr-interest] How to stop lexer reporting errors to standard
	output?
Message-ID: <46C3FC63.8060201@comp.cz>

Hi,

I'm writing a library (parsing SQL, among other things) using ANTLR 
(3.0, C# target), and I'd like it not to try any error recovery, but 
just throw an exception on invalid input (so that the library user can 
decide what to do about the error). I've managed to suppress error 
recovery by specifying an empty @rulecatch, but I still occasionally get 
warnings on standard output, i.e.

SELECT '''

results in

line 1:10 mismatched character '<EOF>' expecting '''

How do I get rid of the message (while still failing to parse the 
invalid input, of course)?

The lexer rule is AFAIK quite conventional

fragment
StringRun :
	(~ '\'' )+
	;

ASCIIStringLiteral :
	'\'' { text = ""; }
	( s = StringRun { text = $s.text; } )? '\''
	( '\'' {
			text = text + "\'";
		} ( s = StringRun { text = text + $s.text; } )? '\''
	)*
	;

if that helps.

	Bye
		Vasek

From tbrandonau at gmail.com  Thu Aug 16 00:52:28 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 16 Aug 2007 17:52:28 +1000
Subject: [antlr-interest] How to stop lexer reporting errors to standard
	output?
In-Reply-To: <46C3FC63.8060201@comp.cz>
References: <46C3FC63.8060201@comp.cz>
Message-ID: <ebc876d70708160052h397cd71ck2ec02c84264f4a0c@mail.gmail.com>

On 8/16/07, Vaclav Barta <vbar at comp.cz> wrote:
> Hi,
>
> I'm writing a library (parsing SQL, among other things) using ANTLR
> (3.0, C# target), and I'd like it not to try any error recovery, but
> just throw an exception on invalid input (so that the library user can
> decide what to do about the error). I've managed to suppress error
> recovery by specifying an empty @rulecatch, but I still occasionally get
> warnings on standard output, i.e.
>
> SELECT '''
>
> results in
>
> line 1:10 mismatched character '<EOF>' expecting '''
>
> How do I get rid of the message (while still failing to parse the
> invalid input, of course)?
Override reportError in your lexer and do general handling there.

Tom.
>
> The lexer rule is AFAIK quite conventional
>
> fragment
> StringRun :
>         (~ '\'' )+
>         ;
>
> ASCIIStringLiteral :
>         '\'' { text = ""; }
>         ( s = StringRun { text = $s.text; } )? '\''
>         ( '\'' {
>                         text = text + "\'";
>                 } ( s = StringRun { text = text + $s.text; } )? '\''
>         )*
>         ;
>
> if that helps.
>
>         Bye
>                 Vasek
>

From vbar at comp.cz  Thu Aug 16 01:10:51 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 16 Aug 2007 10:10:51 +0200
Subject: [antlr-interest] How to stop lexer reporting errors to standard
 output?
In-Reply-To: <ebc876d70708160052h397cd71ck2ec02c84264f4a0c@mail.gmail.com>
References: <46C3FC63.8060201@comp.cz>
	<ebc876d70708160052h397cd71ck2ec02c84264f4a0c@mail.gmail.com>
Message-ID: <46C4068B.3090602@comp.cz>

Thomas Brandon wrote:
> On 8/16/07, Vaclav Barta <vbar at comp.cz> wrote:
>> I'm writing a library (parsing SQL, among other things) using ANTLR
>> (3.0, C# target), and I'd like it not to try any error recovery, but
>> just throw an exception on invalid input (so that the library user can
>> decide what to do about the error). I've managed to suppress error
>> recovery by specifying an empty @rulecatch, but I still occasionally get
>> warnings on standard output, i.e.
> Override reportError in your lexer and do general handling there.
Err, how?

@lexer::override {
	public override void ReportError(RecognitionException e)
	{
	}
}

(method signature taken from Antlr.Runtime.BaseRecognizer) compiles OK 
but makes no difference.

	Bye
		Vasek


From tbrandonau at gmail.com  Thu Aug 16 01:20:58 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 16 Aug 2007 18:20:58 +1000
Subject: [antlr-interest] How to stop lexer reporting errors to standard
	output?
In-Reply-To: <46C4068B.3090602@comp.cz>
References: <46C3FC63.8060201@comp.cz>
	<ebc876d70708160052h397cd71ck2ec02c84264f4a0c@mail.gmail.com>
	<46C4068B.3090602@comp.cz>
Message-ID: <ebc876d70708160120r788eb4cen50f6f4df9c029264@mail.gmail.com>

On 8/16/07, Vaclav Barta <vbar at comp.cz> wrote:
> Thomas Brandon wrote:
> > On 8/16/07, Vaclav Barta <vbar at comp.cz> wrote:
> >> I'm writing a library (parsing SQL, among other things) using ANTLR
> >> (3.0, C# target), and I'd like it not to try any error recovery, but
> >> just throw an exception on invalid input (so that the library user can
> >> decide what to do about the error). I've managed to suppress error
> >> recovery by specifying an empty @rulecatch, but I still occasionally get
> >> warnings on standard output, i.e.
> > Override reportError in your lexer and do general handling there.
> Err, how?
>
> @lexer::override {
>         public override void ReportError(RecognitionException e)
>         {
>         }
> }
>
> (method signature taken from Antlr.Runtime.BaseRecognizer) compiles OK
> but makes no difference.
Not familiar with C# runtime but I think that should be
@lexer::members not @lexer::override. Couldn't see any reference to
override action scope in the C# target. But if it's spitting out the
code in the generated file then that should work too. It looks like
the C# target funnels all errors through Lexer.ReportError so
something like this should work.

Tom.
>
>         Bye
>                 Vasek
>
>

From vbar at comp.cz  Thu Aug 16 01:52:27 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 16 Aug 2007 10:52:27 +0200
Subject: [antlr-interest] How to stop lexer reporting errors to standard
 output?
In-Reply-To: <ebc876d70708160120r788eb4cen50f6f4df9c029264@mail.gmail.com>
References: <46C3FC63.8060201@comp.cz>	<ebc876d70708160052h397cd71ck2ec02c84264f4a0c@mail.gmail.com>	<46C4068B.3090602@comp.cz>
	<ebc876d70708160120r788eb4cen50f6f4df9c029264@mail.gmail.com>
Message-ID: <46C4104B.6020203@comp.cz>

Thomas Brandon wrote:
> On 8/16/07, Vaclav Barta <vbar at comp.cz> wrote:
>> Thomas Brandon wrote:
>>> On 8/16/07, Vaclav Barta <vbar at comp.cz> wrote:
>>>> I'm writing a library (parsing SQL, among other things) using ANTLR
>>>> (3.0, C# target), and I'd like it not to try any error recovery, but
>>>> just throw an exception on invalid input (so that the library user can
>>>> decide what to do about the error). I've managed to suppress error
>>>> recovery by specifying an empty @rulecatch, but I still occasionally get
>>>> warnings on standard output, i.e.
>>> Override reportError in your lexer and do general handling there.
>> Err, how?
> Not familiar with C# runtime but I think that should be
> @lexer::members not @lexer::override. Couldn't see any reference to
> override action scope in the C# target. But if it's spitting out the
> code in the generated file then that should work too. It looks like
Yes,

@lexer::members {
	public override void ReportError(RecognitionException e)
	{
	}
}

does it - many thanks.

          Bye
                  Vasek


From antlr at mirality.co.nz  Thu Aug 16 01:49:49 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 16 Aug 2007 20:49:49 +1200
Subject: [antlr-interest] C Runtime - list container suggestions
In-Reply-To: <42F2AB91-0E33-4956-9CBB-3ECFF7BA0E61@apple.com>
References: <2F3969D9-5408-40F5-87B1-198C097EC1AE@apple.com>
	<051466DAA0D608439E196797955018D70235F9@wavemachine.temporal-wave.com>
	<20070814080941.3F67B11EA87@www.antlr.org>
	<42F2AB91-0E33-4956-9CBB-3ECFF7BA0E61@apple.com>
Message-ID: <20070816085428.3216711E9F1@www.antlr.org>

At 06:56 16/08/2007, Cameron Esfahani wrote:
>Then what would the difference between a list and a vector be?

"List" is a more general term and is frequently used to describe 
any sort of collection, although it is more commonly used to 
describe an ordered collection rather than a hashed one (those 
tend to be called "hashtables", "maps", or "dictionaries").

Or if you prefer, "list" is an abstract base class, of which one 
implementation is "vector" and another is "linked list".  (This is 
not really accurate, it's just using the terms in evil ways to try 
to present a point.)

>The reason I thought that list would supported persistent IDs is 
>that the list routines are built on top of Jim's hash table 
>routines.

I wasn't really referring to any of the current implementation -- 
I was just saying what those particular terms mean to me, and how 
I've commonly heard them used in the wider world -- and so 
consequently what sort of behaviour people would tend to expect 
when presented with a class-like structure that called itself a 
"list".

>If that's the case, then one way to fix list to handle persistent 
>IDs would be to use an increasing integer value as the key, 
>supplied by list add(), to the hash routine.  Right now, it uses 
>the size of the hash, which means it can decrease when items are 
>deleted, causing keys to collide.

That solves the collision problem but doesn't solve the indexing 
problem (where if the first element is "list[0]" and then you 
delete it, you expect to see the former second element become 
"list[0]").

I just don't think that something that calls itself a list should 
exhibit dictionary-like behaviour.  And I don't think 
dictionary-like behaviour is necessary in something like a list or 
tree of tokens.

As always, though, this is just my opinion :)  Offer void where 
prohibited. 


From antlr at mirality.co.nz  Thu Aug 16 01:58:16 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 16 Aug 2007 20:58:16 +1200
Subject: [antlr-interest] How to stop lexer reporting errors to standard
 output?
In-Reply-To: <ebc876d70708160120r788eb4cen50f6f4df9c029264@mail.gmail.co
 m>
References: <46C3FC63.8060201@comp.cz>
	<ebc876d70708160052h397cd71ck2ec02c84264f4a0c@mail.gmail.com>
	<46C4068B.3090602@comp.cz>
	<ebc876d70708160120r788eb4cen50f6f4df9c029264@mail.gmail.com>
Message-ID: <20070816085822.CFC7411E923@www.antlr.org>

At 20:20 16/08/2007, Thomas Brandon wrote:
 >Not familiar with C# runtime but I think that should be
 >@lexer::members not @lexer::override. Couldn't see any reference 

 >to override action scope in the C# target.

Actually that reminds me: maybe ANTLR should emit a warning if an 
action is present in the grammar but not used anywhere in the 
target language template file?  That'd help catch typos and 
related confusion.


From ohumbel at gmail.com  Thu Aug 16 02:07:16 2007
From: ohumbel at gmail.com (Oti)
Date: Thu, 16 Aug 2007 11:07:16 +0200
Subject: [antlr-interest] Spaces in names
In-Reply-To: <1D603DEEEE680240A57C26F32DD1665F025BC9E5@dopey.Rimage.com>
References: <DOPEYDskqC5EtrUVYKk00004efb@smtp.Rimage.com>
	<1D603DEEEE680240A57C26F32DD1665F025BC9E5@dopey.Rimage.com>
Message-ID: <ba90a0a90708160207t4a174789gd4f70aba50f46a44@mail.gmail.com>

Hi,

Vasek recently posted (in the thread 'How to stop lexer reporting
errors to standard output?') an example of an ASCIIStringLiteral which
might get you started:


fragment
StringRun :
       (~ '\'' )+
       ;

ASCIIStringLiteral :
       '\'' { text = ""; }
       ( s = StringRun { text = $s.text; } )? '\''
       ( '\'' {
                       text = text + "\'";
               } ( s = StringRun { text = text + $s.text; } )? '\''
       )*
       ;


best wishes,
Oti.


On 8/16/07, Dave Raskin <dave.raskin at rimage.com> wrote:
> I am back on this and have spent a day trying different things, looking
> at the sample that you suggested, but no luck with recognizing the ' '
> as part of the string.
>
> I made all changes in the lexer.
> I got rid of WS lexer rule.
>
> When I pass in an expression like this:
>
>         daver='some thing'
>
> I get an error back:

From doebel at tudos.org  Thu Aug 16 07:32:47 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Thu, 16 Aug 2007 16:32:47 +0200
Subject: [antlr-interest] Error: "Can't find template wildcardTrack.st"
Message-ID: <46C4600F.506@tudos.org>

Hi all,

I have a grammar with only one rule that I try to pass to ANTLR 3.0.1:

== START ==
grammar ml;

options {
    output=AST;
}

ml_comment : '/*' .* '*/';
== STOP ==

This runs fine:
$> java org.antlr.Tool ml.g
ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007

Now I modify the grammar to produce some AST output:

== START ==
grammar ml;

options {
    output=AST;
}

tokens {
    COMMENT;
}

ml_comment : '/*' .* '*/' -> ^(COMMENT);
== STOP ==

which leads to the following error:
$> java org.antlr.Tool ml.g
error(10):  internal error: ml.g : java.lang.IllegalArgumentException:
Can't find template wildcardTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.getWildcardST(CodeGenTreeWalker.java:113)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:2034)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)

Any ideas?

Regards,
Bjoern

From feraudyh at yahoo.com  Thu Aug 16 08:11:06 2007
From: feraudyh at yahoo.com (Henri De Feraudy)
Date: Thu, 16 Aug 2007 08:11:06 -0700 (PDT)
Subject: [antlr-interest] Manually Specifying Exception Handlers (in C#)
Message-ID: <154076.63816.qm@web50106.mail.re2.yahoo.com>

Hello,
    I'm working in C# and I wanted to copy the idea in the definitive Antlr reference 
  by appending this to the end of a rule:
  catch [RecognitionException re] {
  reportError(re);
  consumeUntil(input, SEMI); // throw away all until ';'
  input.consume(); // eat the ';'
  This came from section 10.5
  In some discussion I saw that consume has to be replaced by Consume, but compilation still complains:
  Both reportError and consumeUntil are unknown. 
  What should I do?
  thanks
  Henri


To boldly go photographing where everyone has been before.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/773ae6e4/attachment-0001.html 

From ulf at ofahrt.de  Thu Aug 16 08:21:36 2007
From: ulf at ofahrt.de (Ulf Ochsenfahrt)
Date: Thu, 16 Aug 2007 17:21:36 +0200
Subject: [antlr-interest] Label.hashCode not consistant with equals
Message-ID: <46C46B80.3060706@ofahrt.de>

Hi,

I was looking though the antlr source searching for a place to fix the 
issue with the overlong specialStateTransition method, when I realized 
that the Label.hashCode is _not_ consistant with its equals method. In 
particular, the java.lang.Object JavaDocs state:

If two objects are equal according to the equals(Object) method, then 
calling the hashCode method on each of the two objects must produce the 
same integer result.

The following test case should thus pass:
package org.antlr.test;

import junit.framework.TestCase;

import org.antlr.analysis.Label;
import org.antlr.analysis.SemanticContext.Predicate;
import org.antlr.analysis.SemanticContext.TruePredicate;
import org.antlr.tool.GrammarAST;

public class TestLabel extends TestCase
{
	
	public void testLabelEquals() throws Exception {
		Label l0 = new Label(new Predicate(new GrammarAST(3, "abc")));
		Label l1 = new Label(new TruePredicate());
		if (l0.equals(l1))
			assertEquals(l0.hashCode(), l1.hashCode());
	}
	
}

If the labels are equal, they should have identical hash codes. This is 
- unfortunately - not the case, because the equals method in Label does 
not check the SemanticContext if it is a semantic predicate. I believe 
the following three lines would fix that:

if ( label==SEMPRED ) {
	return this.predicate.equals(((Label)o).predicate);
}

Also, equals implementations often test on object equality first, 
because this is very fast, i.e.: if ( this == o ) return true;

Cheers,

-- Ulf
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3613 bytes
Desc: S/MIME Cryptographic Signature
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/d0bb17e4/attachment.bin 

From snouto at gmail.com  Thu Aug 16 09:20:47 2007
From: snouto at gmail.com (Mohammed Ibrahim)
Date: Thu, 16 Aug 2007 19:20:47 +0300
Subject: [antlr-interest] ANTLR C# Example Demanded
Message-ID: <000f01c7e021$6a15e1b0$0201a8c0@robtronix>

Please Everybody in this group , i would like to have a good working C# code written for This simple grammar File 
==========================================
grammar hello;
options
{
   language = CSharp;
}
prog : stat+;
stat returns [string value] : GREETING{$value = $GREETING.text;} (LETTER{$value +=" "+$LETTER.text; })+;
GREETING: 'welcome'|'greeting'|'hello';
LETTER : ('a'..'z')+;
WS : ('"'|' '|'\r'|'\n'|'\t')+ {skip();};

======================================

Please Suppose that the Output Lexer and Parser files are named HelloLexer and HelloParser respectively .

Can anybody Show me a working C# Code for this simple Grammar File.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/f21c9afc/attachment.html 

From jimi at temporal-wave.com  Thu Aug 16 09:40:26 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 16 Aug 2007 09:40:26 -0700
Subject: [antlr-interest] ANTLR C# Example Demanded
In-Reply-To: <000f01c7e021$6a15e1b0$0201a8c0@robtronix>
References: <000f01c7e021$6a15e1b0$0201a8c0@robtronix>
Message-ID: <051466DAA0D608439E196797955018D7023610@wavemachine.temporal-wave.com>

Well,

 

Assuming that this grammar is correct then all you need do is look at
the example calling code in the C# wiki, but:

using System;

using System.Text;

using Antlr.Runtime;

...

            try

            {

                string stringThatIsYourInput;

 

                // First create a string stream with which to parse the
expression

                // 

                Antlr.Runtime.ANTLRStringStream input = new
Antlr.Runtime.ANTLRStringStream(stringThatIsYourInput);

 

                // We can now create the lexer for the expression

                //

                HelloLexer lex = new HelloLexer(input);

 

                // And now the token stream

                //

                CommonTokenStream tokens = new CommonTokenStream(lex);

 

                // And finally, the parser

                //

                HelloParser parser = new HelloParser(tokens);

 

                try

                {

                    string retval;  

 

                    retval = parser.stat();

 

                    return retval;

                }

                catch (RecognitionException recEx)

                {

                    Console.Out.WriteLine(recEx.StackTrace);

 

                    return "Invalid expression";

                }

            }

            catch(Exception ex)

            {

                Console.Out.WriteLine(ex.Message);

                return "Unable to create parser";

            }

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mohammed Ibrahim
Sent: Thursday, August 16, 2007 9:21 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR C# Example Demanded

 

Please Everybody in this group , i would like to have a good working C#
code written for This simple grammar File 

==========================================

grammar hello;
options
{
   language = CSharp;
}
prog : stat+;
stat returns [string value] : GREETING{$value = $GREETING.text;}
(LETTER{$value +=" "+$LETTER.text; })+;
GREETING: 'welcome'|'greeting'|'hello';
LETTER : ('a'..'z')+;
WS : ('"'|' '|'\r'|'\n'|'\t')+ {skip();};

 

======================================

 

Please Suppose that the Output Lexer and Parser files are named
HelloLexer and HelloParser respectively .

 

Can anybody Show me a working C# Code for this simple Grammar File.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/956ddd6d/attachment-0001.html 

From parrt at cs.usfca.edu  Thu Aug 16 09:48:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 16 Aug 2007 09:48:17 -0700
Subject: [antlr-interest] Label.hashCode not consistant with equals
In-Reply-To: <46C46B80.3060706@ofahrt.de>
References: <46C46B80.3060706@ofahrt.de>
Message-ID: <C9D21D57-3F79-45F3-BD99-2B6A20792A48@cs.usfca.edu>

Added bug to investigate...probably ok according to how i use it, but  
should fix.
Ter

From antlr at mirality.co.nz  Thu Aug 16 12:57:12 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 17 Aug 2007 07:57:12 +1200
Subject: [antlr-interest] Error: "Can't find template wildcardTrack.st"
In-Reply-To: <46C4600F.506@tudos.org>
References: <46C4600F.506@tudos.org>
Message-ID: <20070816195720.7856C11E9F0@www.antlr.org>

At 02:32 17/08/2007, Bjoern Doebel wrote:
 >I have a grammar with only one rule that I try to pass to ANTLR
 >3.0.1:
 >
 >== START ==
 >grammar ml;
 >
 >options {
 >    output=AST;
 >}
 >
 >ml_comment : '/*' .* '*/';
 >== STOP ==

Well, I don't know about the error, but this probably ought to be 
a lexer rule (capital letters).


From jaluber at gmx.de  Thu Aug 16 14:40:02 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 16 Aug 2007 23:40:02 +0200
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
Message-ID: <46C4C432.60601@gmx.de>

Terence Parr wrote:
> Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> very capable graduate student, Leon Su, that was able to implement it
> this summer.  Here is the wiki with code attached. :)
> 
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
> 
> Please direct feedback to the group and/or Leon so we can improve it.  I
> think you'll find it is a very nice tool.  Has both interpreted and
> gUnit->jUnit code gen modes. :)
> 
> Terence

I haven't tested the the program myself, so I comment on what I've read
on the wiki.

The first thing I noticed is that you don't explain the test suite
example. Someone with no knowledge of gUnit won't be able to decipher
your example. Look at those lines:

variable: // test rule:variable with 2 tests
"int x" FAIL

"int x" -> ""

What is meant with both results? How can they differ for the same input?
Or do you want to demonstrate two abilities of gUnit? And what is the
meaning of the '->'? (The mention in the "gUnit grammar" section is too
far away. And what kind of output do you mean? System.out.println()
calls? Or the result of a StringTemplate?)

Then you show us the result of the test run. I noticed that you number
the tests internally, but there is no visible mapping for the human eye.
Suppose a file with several hundreds of tests. How do you know which one
is the 186th one? You show only the grammar rule but the actual culprit
has still to be inferred.

Another problem is that the test results aren't that visibly distinctive
from each other. There aren't signature characters to scan for. I'd like
to see even such characters for the expected input and output lines so
it isn't to confusing if the output goes over several lines. It makes
also easier to discriminate between the gUnit program output and the
test suite outputs. NUnit has a nice syntax for it. Maybe you can use
theirs?

The last point: Are other target languages also supported? Or do only
Java grammars work for now?

Best regards,
Johannes Luber

From fyaoxy at gmail.com  Thu Aug 16 16:01:57 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 17 Aug 2007 07:01:57 +0800
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
Message-ID: <91dd9a4f0708161601j6b86a176l931667becd4da44f@mail.gmail.com>

Wawo, so great!  gunit so pretty!
I tried, all passed. it make me happy.

gunit On;

words:
"h" OK
"hello" OK
"hello " OK
"hello world" OK
"hello world " OK
"hello world     " OK
" hello world " OK
"hello " -> "hello"
"hello world" -> "hello world"
"hello world    " -> "hello world"
"    hello world    " -> "hello world"

name:
"hello,world" OK
"hello,world" ->"(NAME (TSTRING hello) (TSTRING world))"
" hello ,    world " ->"(NAME (TSTRING hello) (TSTRING world))"

<<" hello
world ">> -><<(NAME (TSTRING  hello
world ))>>

though my last test infinite loop:)

And I have idea:
I use package name in my grammar, current gunit just take grammar name. so
do a hard code in it, I would like to deep into this tool.
I wanna enhance testcase with additional message, like I do before:
/*string test*/
//valid single test
a
1
\n
word
??
//invalid single test
,
"

{
}
:
//valid multiple test
a aaaa
123 abc
123 abc
//quoted test
"abc1"

seems "input ouput" triple can be done "message input output" or "input
output message"
even:
group message{
test
test
}

Thank you again:)


2007/8/16, Terence Parr <parrt at cs.usfca.edu>:
>
> Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> very capable graduate student, Leon Su, that was able to implement it
> this summer.  Here is the wiki with code attached. :)
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>
> Please direct feedback to the group and/or Leon so we can improve
> it.  I think you'll find it is a very nice tool.  Has both
> interpreted and gUnit->jUnit code gen modes. :)
>
> Terence
>



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/d12392d5/attachment.html 

From fyaoxy at gmail.com  Thu Aug 16 16:15:31 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 17 Aug 2007 07:15:31 +0800
Subject: [antlr-interest] spaces in name again
Message-ID: <91dd9a4f0708161615o75ea4b2eu21e2690ff4b22889@mail.gmail.com>

suppose has a string like follows:
hello world
Grammar Unit Testing
Firstname lastname

I found not so good result after google or search in antlr site, and check
out jboss rules way, I return without more got, jboss rules had discard
inherited TokenStream class and its new version changed.
After times tries, I got a way:

grammar TestSpace;
words    :    WORDS;

WORDS    :    WORD (WS WORD)* WS?
    {
        $channel=0;
        setText($text.trim());
    };
fragment
WORD    :    CHAR+;
WS    :    SPACE+ {$channel=HIDDEN;};
fragment
CHAR    :    ~(COMMA | SEMI | COLON | LBAK | RBAK | SQUOTE | DQUOTE | SPACE
| CRLF);
fragment
SPACE    :    ' ' | '\t' | '\u000C';
COMMA    :    ',';
SEMI    :    ';';
COLON    :    ':';
LBAK    :    '{';
RBAK    :    '}';
SQUOTE    :    '\'';
DQUOTE    :    '"';
fragment
CRLF    :    '\r' | '\n';

default all whitespace ignored, but in some lexer phase, I recover it again.
In my grammar, it works fine.

Anyone some other idea?

-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/c85737b3/attachment.html 

From hubdog at gmail.com  Thu Aug 16 17:00:42 2007
From: hubdog at gmail.com (Hub Dog)
Date: Fri, 17 Aug 2007 09:00:42 +0900
Subject: [antlr-interest] How to implement case insensitive keyword in antlr3
Message-ID: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.com>

Dear Friends,

        I am just porting an antlr v2 project to antlr3.The keyword of
language is  case insensitive.In the antlr v2, there is a
caseSensitiveLiterals option for lexer.
But it seems there is not such an option in v3. Does someone know how to
implement case insensitive keyword  in antlr3 .


best regards
ma lifang
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/c291f26e/attachment.html 

From aliaazimi at yahoo.com  Thu Aug 16 17:07:24 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 16 Aug 2007 17:07:24 -0700 (PDT)
Subject: [antlr-interest] (newbie) Unsolved lexer problem
Message-ID: <171845.59911.qm@web58101.mail.re3.yahoo.com>

Hi,
   
  Thank you so much for any help you might give me. I have a long grammar and tree walker which work fine. However I have some problems at lexer level which I have not managed to solve for ages.
   
  The grammar at the bottom of this page, is a small part of the grammar which I have written. When debugging:
   
  1) If I give a pair of digit in the form of (x,y), I receive a mismatched error. So I need to remove Decimaldigit from Alphanumeric ( which I don?t want to). If I remove it, and  give the input (x,y) where x or y or both of them are a single digit, It gives me mismatched error. 
   
  2) Rule textinTextSymbol give me mismatched error with any text at any time.
   
  Could you please help me?
   
  1) I need my grammar to match (x,y) where x and y are integers which start from 0.
  2)I need my grammar to match texts.
  3)I need my grammar to match names.
   
  I appreciate so much.
   
  Best regards,
   
  Al
   
   
   
  grammar Crazy;
   
  textInTextSymbol:Text ;
   
  name    :NAME;
   
  b26      :'('INT ',' INT ')';
   
  Decimaldigit:'0'..'9';
   
  INT      :Decimaldigit+;
   
  NAME: Word ( '_' Word )*;
   
  fragment Special      :('+'|'-'|'!'|'>'|';'|'('|')'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_'|',')+; 
   
  fragment Word:  '.'* AlphaNumeric+ '.'* ;
   
  Text     :(AlphaNumeric|Special|'.'|'_'|Space|'\'')*;          
   
  fragment Space :' ';
   
  fragment AlphaNumeric :(Uppercase|National|Lowercase|Decimaldigit);
   
  fragment National     :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
   
  fragment CharacterString :'\'' ( options{greedy=false;}: (~('\''|'\r'|'\n')| '\'' '\''))* '\'';
                   
  fragment Lowercase       :'a'..'z' ;
   
  fragment Uppercase       :'A'..'Z' ;
   
  fragment  Apostrophe   :'\'';
   
  fragment NEWLINE:'\r' ? '\n' {skip();};
   
  WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;
   
   
   

       
---------------------------------
Ready for the edge of your seat? Check out tonight's top picks on Yahoo! TV. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070816/04fc2e1a/attachment-0001.html 

From fyaoxy at gmail.com  Thu Aug 16 18:25:51 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 17 Aug 2007 09:25:51 +0800
Subject: [antlr-interest] (newbie) Unsolved lexer problem
In-Reply-To: <171845.59911.qm@web58101.mail.re3.yahoo.com>
References: <171845.59911.qm@web58101.mail.re3.yahoo.com>
Message-ID: <91dd9a4f0708161825q6fc58223yd836103882ae3368@mail.gmail.com>

Hi, from string literal  view your english seem no problem, but I not sure I
so clear get you meaning:)
I newbie antlr too, :) In my practice , I used to check grammar with
interpreter first, then debug it. now can be gunit it. more convene(e18n
style:))
if more tokens, I would add fragment limiter, else I let it be.
try try this.

grammar Crazy;

textInTextSymbol:Text ;

name    :NAME;

b26      :'('INT ',' INT ')';


INT      :Decimaldigit+;


NAME: Word ( '_' Word )*;


Text     :(AlphaNumeric|Special|Space|'\'')*;


Word:  '.'* AlphaNumeric+ '.'* ;

Space :' ';

AlphaNumeric :(Uppercase|National|Lowercase);

National     :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;

CharacterString :'\'' ( options{greedy=false;}: (~('\''|'\r'|'\n')| '\''
'\''))* '\'';

Lowercase       :'a'..'z' ;

Uppercase       :'A'..'Z' ;

Apostrophe   :'\'';
Decimaldigit:'0'..'9';

Special
:('+'|'-'|'!'|'>'|';'|'('|')'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_'|',')+;


NEWLINE:'\r' ? '\n' {skip();};

WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;

2007/8/17, ali azimi <aliaazimi at yahoo.com>:
>
> Hi,
>
> Thank you so much for any help you might give me. I have a long grammar
> and tree walker which work fine. However I have some problems at lexer level
> which I have not managed to solve for ages.
>
> The grammar at the bottom of this page, is a small part of the grammar
> which I have written. When debugging:
>
> 1) If I give a pair of digit in the form of (x,y), I receive a mismatched
> error. So I need to remove Decimaldigit from Alphanumeric ( which I don't
> want to). If I remove it, and  give the input (x,y) where x or y or both
> of them are a single digit, It gives me mismatched error.
>
> 2) Rule textinTextSymbol give me mismatched error with any text at any
> time.
>
> Could you please help me?
>
> 1) I need my grammar to match (x,y) where x and y are integers which start
> from 0.
> 2)I need my grammar to match texts.
> 3)I need my grammar to match names.
>
> I appreciate so much.
>
> Best regards,
>
> Al
>
>
>
> grammar Crazy;
>
> textInTextSymbol:Text ;
>
> name    :NAME;
>
> b26      :'('INT ',' INT ')';
>
> Decimaldigit:'0'..'9';
>
> INT      :Decimaldigit+;
>
> NAME: Word ( '_' Word )*;
>
> fragment Special      :('+'|'-'|'!'|'>'|';'|'('|')'|'<'|'='|':'|'?'|'&'|'%'|'.'|'_'|',')+;
>
>
> fragment Word:  '.'* AlphaNumeric+ '.'* ;
>
> Text     :(AlphaNumeric|Special|'.'|'_'|Space|'\'')*;
>
> fragment Space :' ';
>
> fragment AlphaNumeric :(Uppercase|National|Lowercase|Decimaldigit);
>
> fragment National     :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~' ;
>
> fragment CharacterString :'\'' ( options{greedy=false;}:
> (~('\''|'\r'|'\n')| '\'' '\''))* '\'';
>
> fragment Lowercase       :'a'..'z' ;
>
> fragment Uppercase       :'A'..'Z' ;
>
> fragment  Apostrophe   :'\'';
>
> fragment NEWLINE:'\r' ? '\n' {skip();};
>
> WS : (' ' |'\t' |'\n' |'\r' )+ {skip();} ;
>
>
>
>
> ------------------------------
> Ready for the edge of your seat? Check out tonight's top picks<http://us.rd.yahoo.com/evt=48220/*http://tv.yahoo.com/>on Yahoo! TV.
>
>


-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/7988f093/attachment.html 

From shaohua.wen at gmail.com  Thu Aug 16 18:26:20 2007
From: shaohua.wen at gmail.com (=?UTF-8?B?5paH5bCR5Y2O?=)
Date: Fri, 17 Aug 2007 09:26:20 +0800
Subject: [antlr-interest] Fwd: How to implement case insensitive keyword in
	antlr3
In-Reply-To: <5694af40708161744o5cd008cdh9ef9a653e59b5edf@mail.gmail.com>
References: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.com>
	<5694af40708161744o5cd008cdh9ef9a653e59b5edf@mail.gmail.com>
Message-ID: <5694af40708161826u56c1c321yaa15ff3acbf429f0@mail.gmail.com>

You can check thread : *ANTLR3 with -Xmultithreaded problem?
In the attachment of that message, I've implemented a keyword case
insensitive grammar.
but for other IDs are case sensitive.

BR.Holy
*
On 8/17/07, Hub Dog <hubdog at gmail.com> wrote:
>
> Dear Friends,
>
>         I am just porting an antlr v2 project to antlr3.The keyword of
> language is  case insensitive.In the antlr v2, there is a
> caseSensitiveLiterals option for lexer.
> But it seems there is not such an option in v3. Does someone know how to
> implement case insensitive keyword  in antlr3 .
>
>
> best regards
> ma lifang
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/9de5ba19/attachment.html 

From antlr at mirality.co.nz  Fri Aug 17 01:35:16 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 17 Aug 2007 20:35:16 +1200
Subject: [antlr-interest] How to implement case insensitive keyword in
 antlr3
In-Reply-To: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.co
 m>
References: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.com>
Message-ID: <20070817083526.0A3EC11E968@www.antlr.org>

At 12:00 17/08/2007, Hub Dog wrote:
>         I am just porting an antlr v2 project to antlr3.The 
> keyword of language is  case insensitive.In the antlr v2, there 
> is a caseSensitiveLiterals option for lexer.
>But it seems there is not such an option in v3. Does someone know 
>how to implement case insensitive keyword  in antlr3 .

The two main approaches I've heard mentioned for this are:

1. override the standard lexer matching and lookahead routines and 
get them to do case-insensitive matching

2. write your rules in this sort of format:

   PRINT: ('P'|'p')('R'|'r')('I'|'i')('N'|'n')('T'|'t');

(This last one is a bit of a hassle but even if you've got lots of 
tokens it's pretty easy to knock up a one-shot codegen program 
that takes a list of keywords and outputs something like the 
above.)

Not that I've ever actually done either of these, since for the 
most part I'm only parsing languages I've invented myself, so I 
chose to make them case-sensitive :)


From tbrandonau at gmail.com  Fri Aug 17 02:04:07 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 17 Aug 2007 19:04:07 +1000
Subject: [antlr-interest] How to implement case insensitive keyword in
	antlr3
In-Reply-To: <20070817083526.0A3EC11E968@www.antlr.org>
References: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.com>
	<20070817083526.0A3EC11E968@www.antlr.org>
Message-ID: <ebc876d70708170204s19352b66nd340134e571d50e0@mail.gmail.com>

On 8/17/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 12:00 17/08/2007, Hub Dog wrote:
> >         I am just porting an antlr v2 project to antlr3.The
> > keyword of language is  case insensitive.In the antlr v2, there
> > is a caseSensitiveLiterals option for lexer.
Or probably better, implement a case insensitive input stream. You
just need to override LA in CharStream, or better delegate to a passed
in CharStream and alter the handling of LA to return either lower or
upper case versions of the base streams return.
Token text is retrieved through the substring() method so will not be affected.

Tom.

> >But it seems there is not such an option in v3. Does someone know
> >how to implement case insensitive keyword  in antlr3 .
>
> The two main approaches I've heard mentioned for this are:
>
> 1. override the standard lexer matching and lookahead routines and
> get them to do case-insensitive matching
>
> 2. write your rules in this sort of format:
>
>    PRINT: ('P'|'p')('R'|'r')('I'|'i')('N'|'n')('T'|'t');

>
> (This last one is a bit of a hassle but even if you've got lots of
> tokens it's pretty easy to knock up a one-shot codegen program
> that takes a list of keywords and outputs something like the
> above.)
>
> Not that I've ever actually done either of these, since for the
> most part I'm only parsing languages I've invented myself, so I
> chose to make them case-sensitive :)
>
>

From hubdog at gmail.com  Fri Aug 17 06:49:16 2007
From: hubdog at gmail.com (Hub Dog)
Date: Fri, 17 Aug 2007 22:49:16 +0900
Subject: [antlr-interest] How to implement case insensitive keyword in
	antlr3
In-Reply-To: <5694af40708161744o5cd008cdh9ef9a653e59b5edf@mail.gmail.com>
References: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.com>
	<5694af40708161744o5cd008cdh9ef9a653e59b5edf@mail.gmail.com>
Message-ID: <4de0b9580708170649id578cbew50ef45e5c4434501@mail.gmail.com>

Thank all friends very much for your quick answer.

best regards
ma lifang

On 8/17/07, ??? <shaohua.wen at gmail.com> wrote:
>
> You can check thread : *ANTLR3 with -Xmultithreaded problem?
> In the attachment of that message, I've implemented a keyword case
> insensitive grammar.
> but for other IDs are case sensitive.
>
> BR.Holy
> *
> On 8/17/07, Hub Dog <hubdog at gmail.com> wrote:
> >
> > Dear Friends,
> >
> >         I am just porting an antlr v2 project to antlr3.The keyword of
> > language is  case insensitive.In the antlr v2, there is a
> > caseSensitiveLiterals option for lexer.
> > But it seems there is not such an option in v3. Does someone know how to
> > implement case insensitive keyword  in antlr3 .
> >
> >
> > best regards
> > ma lifang
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/ded740bb/attachment.html 

From shaohua.wen at gmail.com  Fri Aug 17 08:19:10 2007
From: shaohua.wen at gmail.com (=?UTF-8?B?5paH5bCR5Y2O?=)
Date: Fri, 17 Aug 2007 23:19:10 +0800
Subject: [antlr-interest] ANTLR3 with -Xmultithreaded problem?
In-Reply-To: <5694af40708152014p6ddc539cy12476ea273ac9f62@mail.gmail.com>
References: <5694af40708152014p6ddc539cy12476ea273ac9f62@mail.gmail.com>
Message-ID: <5694af40708170819u3dd55952j45542cd5c8276f83@mail.gmail.com>

I was so sad that it seems that there is no body want to have a try on my
reported problem?
:(


On 8/16/07, ??? <shaohua.wen at gmail.com> wrote:
>
> Dear gurus,
>   I just created a grammar for TNSDL language, and it has a grammar like:
>
>  range://p84
>     closedRange -> ^(Range closedRange)
>     |openRange  -> ^(Range openRange)
> ;
>
> closedRange://p84
>     e1=expression ':' e2=expression
>     -> ^(ClosedRange $e1 $e2)
> ;
>
> openRange://p84
>     relationSymbol? expression
>     -> ^(OpenRange  relationSymbol? expression)
> ;
>
>  expression:
>  .....
> ;
>
>  When I tried to generate code with antlr 3.0.1(3.0 also tried), the
> generated code will not compile with errors like:
>   [javac] Compiling 15 source files to bin
>     [javac] TNSDLParser.java:69328: code too large for try statement
>     [javac]         catch (RecognitionException re) {
>     [javac]         ^
>     [javac]TNSDLParser.java:38965: code too large for try statement
>     [javac]         try {
>     [javac]             ^
>     [javac] TNSDLParser.java:38952: code too large
>     [javac]     public final range_return range() throws
> RecognitionException {
>     [javac]                               ^
>
> After I looked into the range() method,I found that it has about 30000
> lines.
>
> But if I generage java code using antlr with -Xmultithreaded parameter
> with jdk 1.6 in linux (redhat ES4, SOME Times the generated code for
> range() method is only about 300 lines,and the compiler
> can happily compile the generated code.
>
> This is really strange, I don't know if it's a bug of  ANTLR, Can any one
> help to analyze it?
>
> The grammar file has been attached to the mail.
>
> Any suggestions on correct my grammar will be highly appreciated also!
>
> Best Regards,
> Holy
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/9b4c03fe/attachment.html 

From antlr at jazillian.com  Fri Aug 17 08:46:03 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 17 Aug 2007 11:46:03 -0400
Subject: [antlr-interest] antlr exception when adding rewrite
Message-ID: <46C5C2BB.2060506@jazillian.com>

When I have this parser rule:

guid:
    '{' ~('}')* '}'
    ;

...when I try to add any sort of rewrite rule, such as just "->" or 
"->^(WHATEVER)",
I get the following exception when running antlr.
Is this an ANTLR bug?


ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(10):  internal error: VB.g : java.lang.IllegalArgumentException: 
Can't find template matchSetTrack.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.notElement(CodeGenTreeWalker.java:1742)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1502)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)

From parrt at cs.usfca.edu  Fri Aug 17 08:49:52 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Aug 2007 08:49:52 -0700
Subject: [antlr-interest] antlr exception when adding rewrite
In-Reply-To: <46C5C2BB.2060506@jazillian.com>
References: <46C5C2BB.2060506@jazillian.com>
Message-ID: <B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>

add output=AST option
Ter
On Aug 17, 2007, at 8:46 AM, Andy Tripp wrote:

> When I have this parser rule:
>
> guid:
>    '{' ~('}')* '}'
>    ;
>
> ...when I try to add any sort of rewrite rule, such as just "->" or  
> "->^(WHATEVER)",
> I get the following exception when running antlr.
> Is this an ANTLR bug?
>
>
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> error(10):  internal error: VB.g :  
> java.lang.IllegalArgumentException: Can't find template  
> matchSetTrack.st
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
> (StringTemplateGroup.java:485)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
> (StringTemplateGroup.java:372)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
> (StringTemplateGroup.java:384)
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
> (StringTemplateGroup.java:464)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
> (StringTemplateGroup.java:372)
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
> (StringTemplateGroup.java:384)
> org.antlr.codegen.CodeGenTreeWalker.getTokenElementST 
> (CodeGenTreeWalker.java:160)
> org.antlr.codegen.CodeGenTreeWalker.notElement 
> (CodeGenTreeWalker.java:1742)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java: 
> 1502)
> org.antlr.codegen.CodeGenTreeWalker.alternative 
> (CodeGenTreeWalker.java:1252)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java: 
> 1637)
> org.antlr.codegen.CodeGenTreeWalker.alternative 
> (CodeGenTreeWalker.java:1252)
> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
> org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
> org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
> org.antlr.codegen.CodeGenTreeWalker.grammarSpec 
> (CodeGenTreeWalker.java:486)
> org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java: 
> 333)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
> org.antlr.Tool.processGrammar(Tool.java:347)
> org.antlr.Tool.process(Tool.java:268)
> org.antlr.Tool.main(Tool.java:70)


From jimi at temporal-wave.com  Fri Aug 17 08:51:59 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 17 Aug 2007 08:51:59 -0700
Subject: [antlr-interest] How to implement case insensitive keyword
	inantlr3
In-Reply-To: <4de0b9580708170649id578cbew50ef45e5c4434501@mail.gmail.com>
References: <4de0b9580708161700y101e1eafw81c8b6f6113c42db@mail.gmail.com><5694af40708161744o5cd008cdh9ef9a653e59b5edf@mail.gmail.com>
	<4de0b9580708170649id578cbew50ef45e5c4434501@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D7023612@wavemachine.temporal-wave.com>

For C, there is a function/method available on the input stream:

 

input->setUCaseLA(input, ANTLR3_TRUE);

 

Which causes all the tokens to be matched against UPPER CASE, so you specify your keywords in upper case and it will match any mixed case, while preserving the case for the actual text of the token.

 

In java (and I believe this was adapted for C# easily, but not sure about the other targets, see:

 

http://www.antlr.org/pipermail/antlr-interest/2007-January/019008.html

 

C# example at:

 

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782

 

Again, you specify your keywords in UPPER case only.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hub Dog
Sent: Friday, August 17, 2007 6:49 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to implement case insensitive keyword inantlr3

 

Thank all friends very much for your quick answer.

best regards
ma lifang 

On 8/17/07, ??? <shaohua.wen at gmail.com > wrote:

You can check thread : ANTLR3 with -Xmultithreaded problem? 
In the attachment of that message, I've implemented a keyword case insensitive grammar.
but for other IDs are case sensitive. 

BR.Holy

 

On 8/17/07, Hub Dog < hubdog at gmail.com <mailto:hubdog at gmail.com> > wrote:

Dear Friends,

        I am just porting an antlr v2 project to antlr3.The keyword of language is  case insensitive.In the antlr v2, there is a caseSensitiveLiterals option for lexer.
But it seems there is not such an option in v3. Does someone know how to implement case insensitive keyword  in antlr3 . 


best regards
ma lifang

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/30d71dae/attachment-0001.html 

From antlr at jazillian.com  Fri Aug 17 08:54:42 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 17 Aug 2007 11:54:42 -0400
Subject: [antlr-interest] antlr exception when adding rewrite
In-Reply-To: <B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>
References: <46C5C2BB.2060506@jazillian.com>
	<B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>
Message-ID: <46C5C4C2.8030905@jazillian.com>

I do have output=AST already.

Terence Parr wrote:
> add output=AST option
> Ter
> On Aug 17, 2007, at 8:46 AM, Andy Tripp wrote:
>
>> When I have this parser rule:
>>
>> guid:
>>    '{' ~('}')* '}'
>>    ;
>>
>> ...when I try to add any sort of rewrite rule, such as just "->" or 
>> "->^(WHATEVER)",
>> I get the following exception when running antlr.
>> Is this an ANTLR bug?
>>
>>
>> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
>> error(10):  internal error: VB.g : 
>> java.lang.IllegalArgumentException: Can't find template matchSetTrack.st
>> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485) 
>>
>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372) 
>>
>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384) 
>>
>> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464) 
>>
>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372) 
>>
>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384) 
>>
>> org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160) 
>>
>> org.antlr.codegen.CodeGenTreeWalker.notElement(CodeGenTreeWalker.java:1742) 
>>
>> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1502)
>> org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252) 
>>
>> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
>> org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1804)
>> org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1637)
>> org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252) 
>>
>> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
>> org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
>> org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
>> org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486) 
>>
>> org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:333)
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
>> org.antlr.Tool.processGrammar(Tool.java:347)
>> org.antlr.Tool.process(Tool.java:268)
>> org.antlr.Tool.main(Tool.java:70)
>


From parrt at cs.usfca.edu  Fri Aug 17 09:09:57 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Aug 2007 09:09:57 -0700
Subject: [antlr-interest] antlr exception when adding rewrite
In-Reply-To: <46C5C4C2.8030905@jazillian.com>
References: <46C5C2BB.2060506@jazillian.com>
	<B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>
	<46C5C4C2.8030905@jazillian.com>
Message-ID: <85B2EF68-6489-4FD3-B896-A93C219D04C2@cs.usfca.edu>

hmm...try 3.0.1  I think i added some missing templates...
Ter
On Aug 17, 2007, at 8:54 AM, Andy Tripp wrote:

> I do have output=AST already.
>
> Terence Parr wrote:
>> add output=AST option
>> Ter
>> On Aug 17, 2007, at 8:46 AM, Andy Tripp wrote:
>>
>>> When I have this parser rule:
>>>
>>> guid:
>>>    '{' ~('}')* '}'
>>>    ;
>>>
>>> ...when I try to add any sort of rewrite rule, such as just "->"  
>>> or "->^(WHATEVER)",
>>> I get the following exception when running antlr.
>>> Is this an ANTLR bug?
>>>
>>>
>>> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
>>> error(10):  internal error: VB.g :  
>>> java.lang.IllegalArgumentException: Can't find template  
>>> matchSetTrack.st
>>> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
>>> (StringTemplateGroup.java:485)
>>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
>>> (StringTemplateGroup.java:372)
>>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
>>> (StringTemplateGroup.java:384)
>>> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate 
>>> (StringTemplateGroup.java:464)
>>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
>>> (StringTemplateGroup.java:372)
>>> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf 
>>> (StringTemplateGroup.java:384)
>>> org.antlr.codegen.CodeGenTreeWalker.getTokenElementST 
>>> (CodeGenTreeWalker.java:160)
>>> org.antlr.codegen.CodeGenTreeWalker.notElement 
>>> (CodeGenTreeWalker.java:1742)
>>> org.antlr.codegen.CodeGenTreeWalker.element 
>>> (CodeGenTreeWalker.java:1502)
>>> org.antlr.codegen.CodeGenTreeWalker.alternative 
>>> (CodeGenTreeWalker.java:1252)
>>> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java: 
>>> 1037)
>>> org.antlr.codegen.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java: 
>>> 1804)
>>> org.antlr.codegen.CodeGenTreeWalker.element 
>>> (CodeGenTreeWalker.java:1637)
>>> org.antlr.codegen.CodeGenTreeWalker.alternative 
>>> (CodeGenTreeWalker.java:1252)
>>> org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java: 
>>> 1037)
>>> org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
>>> org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java: 
>>> 544)
>>> org.antlr.codegen.CodeGenTreeWalker.grammarSpec 
>>> (CodeGenTreeWalker.java:486)
>>> org.antlr.codegen.CodeGenTreeWalker.grammar 
>>> (CodeGenTreeWalker.java:333)
>>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java: 
>>> 406)
>>> org.antlr.Tool.processGrammar(Tool.java:347)
>>> org.antlr.Tool.process(Tool.java:268)
>>> org.antlr.Tool.main(Tool.java:70)
>>
>


From parrt at cs.usfca.edu  Fri Aug 17 09:11:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Aug 2007 09:11:53 -0700
Subject: [antlr-interest] antlr exception when adding rewrite
In-Reply-To: <46C5C4C2.8030905@jazillian.com>
References: <46C5C2BB.2060506@jazillian.com>
	<B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>
	<46C5C4C2.8030905@jazillian.com>
Message-ID: <368126E1-B73F-4E3A-BE04-F1DEDECE76F2@cs.usfca.edu>

Shoot. actually i think i added in my 3.1 dev branch.  Arg!  Yep,  
then bug.

Ter

From antlr at jazillian.com  Fri Aug 17 09:15:19 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 17 Aug 2007 12:15:19 -0400
Subject: [antlr-interest] tree grammar question: how to say "anything"
Message-ID: <46C5C997.2090705@jazillian.com>

If I have the following parser rule, with no rewrite:

guid:
   '{' ~('}')* '}'
   ;

...and assume I have some other parser rule:

otherRule:
    'A' ^(GUID guid) 'B'
    ;

What would my tree grammar rule for guid look like?
I need Something like:

myGuidTreeRule:
    GUID blah*
    ;

...where I want "blah" to mean "any AST whatsoever" (or I guess
actually "any AST other than a StringLiteral with text '}')
Does the treegrammar grammar have any such construct? If not,
can I do it "by hand" somehow?

From jimi at temporal-wave.com  Fri Aug 17 09:26:02 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 17 Aug 2007 09:26:02 -0700
Subject: [antlr-interest] antlr exception when adding rewrite
In-Reply-To: <46C5C4C2.8030905@jazillian.com>
References: <46C5C2BB.2060506@jazillian.com><B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>
	<46C5C4C2.8030905@jazillian.com>
Message-ID: <051466DAA0D608439E196797955018D7023617@wavemachine.temporal-wave.com>

Doesn't this usually happen when you try to mix rewrites with the
rewrite operators? For instance if you have ^ or ! in your rule spec,
then add a -> rule as well. Look for that and take out the ^ and ! if
you have them in the rule and are also trying to rewrite it. 

It may well be something different of course, but that is the usual
issue.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: Friday, August 17, 2007 8:55 AM
> To: Terence Parr
> Cc: antlr-interest
> Subject: Re: [antlr-interest] antlr exception when adding rewrite
> 
> I do have output=AST already.
> 
> Terence Parr wrote:
> > add output=AST option
> > Ter
> > On Aug 17, 2007, at 8:46 AM, Andy Tripp wrote:
> >
> >> When I have this parser rule:
> >>
> >> guid:
> >>    '{' ~('}')* '}'
> >>    ;
> >>
> >> ...when I try to add any sort of rewrite rule, such as just "->" or
> >> "->^(WHATEVER)",
> >> I get the following exception when running antlr.
> >> Is this an ANTLR bug?
> >>
> >>
> >> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> >> error(10):  internal error: VB.g :
> >> java.lang.IllegalArgumentException: Can't find template
> matchSetTrack.st
> >>
>
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTempl
> ateGroup.java:485)


From antlr at jazillian.com  Fri Aug 17 09:36:26 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 17 Aug 2007 12:36:26 -0400
Subject: [antlr-interest] treewalker question: Identifiers
Message-ID: <46C5CE8A.6040904@jazillian.com>

I have a parser rule where Identifiers and literals can have special
prefixes and suffixes:

formValue:
    formPrefix? (literal^ | Identifier^) HEX_DISPLACEMENT?
    ;

And now, writing my treewalker, I take the parser rule for literal:

literal:
    integerLiteral
    | LongLiteral
    | floatingPointLiteral
    | StringLiteral
    | DATE_LITERAL
    | TRUE
    | FALSE
    ;

...and say "ok, when treewalking, literal can also be a root node with
optional prefix or suffix:

literal:
    (integerLiteral
    | LongLiteral
    | floatingPointLiteral
    | StringLiteral
    | DATE_LITERAL
    | TRUE
    | FALSE
    ) formPrefix? HEX_DISPLACEMENT?
    ;

Does that look right? OK, good, that's just a warmup for the real issue: 
Identifier.
We have this slightly ugly lexer rule for Identifier:

Identifier:
    '['? LETTER (LETTER| DECIMAL_LITERAL)*
        ('%'|'#'|'$'|'&'|
          ('!' ~(LETTER)) => '!'
        )? ']'?
    ;

...and now what should the treewalker rule for Identifier be? Should I 
even have
a treewalker rule that corresponds to a lexer rule? If so, do I just do 
this:

Identifier:
    ( '['? LETTER (LETTER| DECIMAL_LITERAL)*
        ('%'|'#'|'$'|'&'|
          ('!' ~(LETTER)) => '!'
        )? ']'?
    ; ) formPrefix? HEX_DISPLACEMENT?

That doesn't seem right, especially with the predicate "=>" in there.

Treewalkers make my head hurt :)






From antlr at jazillian.com  Fri Aug 17 09:39:24 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 17 Aug 2007 12:39:24 -0400
Subject: [antlr-interest] antlr exception when adding rewrite
In-Reply-To: <051466DAA0D608439E196797955018D7023617@wavemachine.temporal-wave.com>
References: <46C5C2BB.2060506@jazillian.com><B8ABF47E-2B12-47A0-AC03-1024891FF636@cs.usfca.edu>	<46C5C4C2.8030905@jazillian.com>
	<051466DAA0D608439E196797955018D7023617@wavemachine.temporal-wave.com>
Message-ID: <46C5CF3C.6080106@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/1b0e24f2/attachment.html 

From cgorski at cgorski.org  Fri Aug 17 10:17:31 2007
From: cgorski at cgorski.org (cgorski at cgorski.org)
Date: Fri, 17 Aug 2007 10:17:31 -0700
Subject: [antlr-interest] assigning preference to one of two intersecting
	rules
Message-ID: <web-22812004@mail.blueboxgrid.com>

In the grammar that follows, I am attempting to match all 
strings such as:

"54"
"a54"
"#75"
"n.ob89"

I'd like to be able to extract the Prefix and Number 
values for later use in a parser.  What's the best way to 
go about this?  How do I tell
ANTLR to attempt to match first the first rule in 
BoxNumberComplete?


BoxNumberComplete : BoxNumberPrefix BoxNumber
                   | BoxNumber
                   ;

fragment
BoxNumberPrefix : 'number'
                 | 'n''.'*'o''.'*
                 | '#'
                 ;
fragment
BoxNumber : (Alpha|Digit)+;

fragment
Alpha : 'a'..'z';

fragment
Digit : '0'..'9';

Thanks,
Chris



From matthew.j.diehl at intel.com  Fri Aug 17 10:26:01 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Fri, 17 Aug 2007 10:26:01 -0700
Subject: [antlr-interest] assigning preference to one of two
	intersectingrules
In-Reply-To: <web-22812004@mail.blueboxgrid.com>
References: <web-22812004@mail.blueboxgrid.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2027E23DA@orsmsx417.amr.corp.intel.com>

> 
> In the grammar that follows, I am attempting to match all 
> strings such as:
> 
> "54"
> "a54"
> "#75"
> "n.ob89"
> 
> I'd like to be able to extract the Prefix and Number 
> values for later use in a parser.  What's the best way to 
> go about this?  How do I tell
> ANTLR to attempt to match first the first rule in 
> BoxNumberComplete?

I don't think you can tell it to match the first...but since your lexer
already works, don't change it and in the parser just analyze the string
and get the location of the split manually:

identifier :
  BoxNumberComplete
{
  String tmp = BoxNumberComplete.text;
  int i;
  for(i = tmp.length(); i >= 0; i--){
    if (!Character.isAlphaNumeric(tmp.charAt(i))) //or something like
that
      break;
  }
  //i is the location of the end of your first rule in
BoxNumberComplete.
}
  ;

I like modifying the parser a lot better than the lexer.
Good luck,
Matt

From Kevin.Braun at fnis.com  Fri Aug 17 11:02:12 2007
From: Kevin.Braun at fnis.com (Braun, Kevin T)
Date: Fri, 17 Aug 2007 13:02:12 -0500
Subject: [antlr-interest] Bug with predicates and DFAs? (ANTLR 3.0)
Message-ID: <5A03163702DD0945A5DC1324E9FDDEF1787E85@CMBFISLTC05.FNFIS.COM>

Hi,

I tried using this rule:

keywordSet

            :           {setCanBeId &&
input.LT(1).getText().equals("set")}? IDENT;

 

in order to allow "set" to appear either as a keyword or as an
identifier.  The rule where keywordSet is used ends up being involved in
an LL(*) decision.  In the generated parser, the code in the DFA has a
method specialStateTransition declared as:

public int specialStateTransition(int s, IntStream input) throws
NoViableAltException

 

The predicate from keywordSet ends up in this specialStateTransition
method (I guess that's the predicate hoisting), but this results in
invalid code: inside this method, input is an IntStream and
IntStream.LT() returns an int, not a token object.  That makes
input.LT(1).getText() invalid.

 

Regards,

Kevin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/aae6d685/attachment-0001.html 

From florianpasco.ml at gmail.com  Fri Aug 17 11:35:07 2007
From: florianpasco.ml at gmail.com (Florian Pasco)
Date: Fri, 17 Aug 2007 20:35:07 +0200
Subject: [antlr-interest] ANTLR 3.0.1 C Runtime - Bug and possible
	correction in displayRecognitionError()
Message-ID: <9cd6557d0708171135j662ba64eub18d97b093fa0673@mail.gmail.com>

I've had invalid memory access errors in the C runtime of ANTLR 3.0.1
during tests where the parser was fed invalid inputs. These errors
occurred in displayRecognitionError() in antlr3baserecognizer.c (line
822) :
		fprintf(stderr, " : expected %s ...\n", tokenNames[ex->expecting]);
when ex->expecting was 0xFFFFFFFF, which is the token for EOF. The
error would then be an array access with an index of -1.

To correct this, I've then set my own error display handler via
@apifuncs and used an exact copy of displayRecognitionError() with
just the offending line replaced by these 2 lines (C++ instead of C
used here) :
            ANTLR3_UINT8* tokenName = ex->expecting ==
ANTLR3_TOKEN_EOF ? (ANTLR3_UINT8*)"<EOF>" : tokenNames[ex->expecting];
            fprintf(stderr, " : expected %s ...\n", tokenName);
and everything runs just fine.

I'm not sure this is the best way to handle this since if there are
accesses to the table pointed to by tokenNames elsewhere in the code,
the same bug will happen. The cleanest way would be to prevent any
token from having a negative value but the EOF token seems to be
hardcoded to 0xFFFFFFFF for a reason.

From cgorski at cgorski.org  Fri Aug 17 12:49:29 2007
From: cgorski at cgorski.org (cgorski at cgorski.org)
Date: Fri, 17 Aug 2007 12:49:29 -0700
Subject: [antlr-interest] assigning preference to one of two
 intersectingrules
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2027E23DA@orsmsx417.amr.corp.intel.com>
References: <web-22812004@mail.blueboxgrid.com>
	<A10CD303B51F814DB568A8AAF02174C2027E23DA@orsmsx417.amr.corp.intel.com>
Message-ID: <web-22819604@mail.blueboxgrid.com>

Thanks.  I suppose my real question is, "is it considered 
acceptable practice to have ambiguities similar to those 
that I specified?"

I think I read the following in some documentation and got 
it in my head that every ambiguity warning has some 
elegant resolution drastically different from what what I 
was doing:

"What happens when the same character predicts more than a 
single lexical rule? ANTLR generates an nondeterminism 
warning between the offending rules, indicating you need 
to make sure your rules do not have common left-prefixes. 
ANTLR does not follow the common lexer rule of "first 
definition wins" (the alternatives within a rule, however, 
still follow this rule). Instead, sufficient power is 
given to handle the two most common cases of ambiguity, 
namely "keywords vs. identifiers", and "common prefixes"; 
and for especially nasty cases you can use syntactic or 
semantic predicates."

-Chris


On Fri, 17 Aug 2007 10:26:01 -0700
  "Diehl, Matthew J" <matthew.j.diehl at intel.com> wrote:
>> 
>> In the grammar that follows, I am attempting to match 
>>all 
>> strings such as:
>> 
>> "54"
>> "a54"
>> "#75"
>> "n.ob89"
>> 
>> I'd like to be able to extract the Prefix and Number 
>> values for later use in a parser.  What's the best way 
>>to 
>> go about this?  How do I tell
>> ANTLR to attempt to match first the first rule in 
>> BoxNumberComplete?
> 
> I don't think you can tell it to match the first...but 
>since your lexer
> already works, don't change it and in the parser just 
>analyze the string
> and get the location of the split manually:
> 
> identifier :
>  BoxNumberComplete
> {
>  String tmp = BoxNumberComplete.text;
>  int i;
>  for(i = tmp.length(); i >= 0; i--){
>    if (!Character.isAlphaNumeric(tmp.charAt(i))) //or 
>something like
> that
>      break;
>  }
>  //i is the location of the end of your first rule in
> BoxNumberComplete.
> }
>  ;
> 
> I like modifying the parser a lot better than the lexer.
> Good luck,
> Matt


From parrt at cs.usfca.edu  Fri Aug 17 13:06:58 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Aug 2007 13:06:58 -0700
Subject: [antlr-interest] tree grammar question: how to say "anything"
In-Reply-To: <46C5C997.2090705@jazillian.com>
References: <46C5C997.2090705@jazillian.com>
Message-ID: <98CBC684-111B-484C-AFE8-AB0BA880C34D@cs.usfca.edu>


On Aug 17, 2007, at 9:15 AM, Andy Tripp wrote:

> If I have the following parser rule, with no rewrite:
>
> guid:
>   '{' ~('}')* '}'
>   ;
>
> ...and assume I have some other parser rule:
>
> otherRule:
>    'A' ^(GUID guid) 'B'
>    ;

that ^(...) is in a tree parser, right?

> What would my tree grammar rule for guid look like?
> I need Something like:
>
> myGuidTreeRule:
>    GUID blah*
>    ;

wildcard . matches either a single node if leaf or whole subtree if  
root.  will that help?

Ter

>
> ...where I want "blah" to mean "any AST whatsoever" (or I guess
> actually "any AST other than a StringLiteral with text '}')
> Does the treegrammar grammar have any such construct? If not,
> can I do it "by hand" somehow?


From parrt at cs.usfca.edu  Fri Aug 17 13:44:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 17 Aug 2007 13:44:05 -0700
Subject: [antlr-interest] Bug with predicates and DFAs? (ANTLR 3.0)
In-Reply-To: <5A03163702DD0945A5DC1324E9FDDEF1787E85@CMBFISLTC05.FNFIS.COM>
References: <5A03163702DD0945A5DC1324E9FDDEF1787E85@CMBFISLTC05.FNFIS.COM>
Message-ID: <50B52412-A223-4E78-842B-69FC73FF909E@cs.usfca.edu>

Yes, predicates can be hoisted outside of their defining rule. You  
should assume that it is safe only to use expressions that are a  
function of input symbols or globally visible values such as fields  
and methods.
Ter
On Aug 17, 2007, at 11:02 AM, Braun, Kevin T wrote:

> Hi,
>
> I tried using this rule:
>
> keywordSet
>
>             :           {setCanBeId && input.LT(1).getText().equals 
> ("set")}? IDENT;
>
>
>
> in order to allow "set" to appear either as a keyword or as an  
> identifier.  The rule where keywordSet is used ends up being  
> involved in an LL(*) decision.  In the generated parser, the code  
> in the DFA has a method specialStateTransition declared as:
>
> public int specialStateTransition(int s, IntStream input) throws  
> NoViableAltException
>
>
>
> The predicate from keywordSet ends up in this  
> specialStateTransition method (I guess that's the predicate  
> hoisting), but this results in invalid code: inside this method,  
> input is an IntStream and IntStream.LT() returns an int, not a  
> token object.  That makes input.LT(1).getText() invalid.
>
>
>
> Regards,
>
> Kevin
>
>


From Stephen.Hardy at digi.com  Fri Aug 17 13:49:05 2007
From: Stephen.Hardy at digi.com (Hardy, Stephen)
Date: Fri, 17 Aug 2007 13:49:05 -0700
Subject: [antlr-interest] tree grammar question: how to say "anything"
In-Reply-To: <46C5C997.2090705@jazillian.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F066@dvs-sms-mail01.digi.com>

Andy,

a similar thread came up recently.  Without actually trying it, I think
your tree parser rule should be something like:

myGuidTreeRule:
     ^( GUID '{' .* '}' )
     ;

since you did not exclude the brace tokens from the initial tree
construction.  Of course, there's probably no need for those tokens so
the parser rule could be

guid:
    '{'! ~('}')* '}'!
    ;

which would simplify the tree rule to 

myGuidTreeRule:
     ^( GUID .* )
     ;

Regards,
SJH
 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
> Sent: Friday, August 17, 2007 9:15 AM
> To: antlr-interest
> Subject: [antlr-interest] tree grammar question: how to say "anything"
> 
> If I have the following parser rule, with no rewrite:
> 
> guid:
>    '{' ~('}')* '}'
>    ;
> 
> ...and assume I have some other parser rule:
> 
> otherRule:
>     'A' ^(GUID guid) 'B'
>     ;
> 
> What would my tree grammar rule for guid look like?
> I need Something like:
> 
> myGuidTreeRule:
>     GUID blah*
>     ;
> 
> ...where I want "blah" to mean "any AST whatsoever" (or I guess
> actually "any AST other than a StringLiteral with text '}')
> Does the treegrammar grammar have any such construct? If not,
> can I do it "by hand" somehow?
> 

From mbarringer at suse.de  Fri Aug 17 16:30:06 2007
From: mbarringer at suse.de (Matt Barringer)
Date: Fri, 17 Aug 2007 16:30:06 -0700 (PDT)
Subject: [antlr-interest] @rulecatch overriding @after [C target]
Message-ID: <Pine.LNX.4.64.0708171622110.15136@eluvium.pdx.novell.com>

Hello,

It seems that @rulecatch causes @after to be ignored when using the C 
target in ANTLR 3.0.1.  For example, with a grammar that does not have an 
@rulecatch block like:

exampleRule
	@after {
		/* Stuff goes here */
	}
	: TOKEN
	;

The code generated will be:

    if (HASEXCEPTION())
    {
        PREPORTERROR();
        PRECOVER();
    }
    else
    {
        {
		/* Stuff goes here */                
        }
    }


But when using a grammar *with* @rulecatch like:

@rulecatch {
	if (HASEXCEPTION())
	{
		/* Catch exceptions here */
	}
}

exampleRule
	@after {
		/* Stuff goes here */
	}
	: TOKEN
	;

the generated code will be simply be:

        if (HASEXCEPTION())
        {
                /* Catch exceptions here */
        }


Is that intentional?  I haven't tried any of the other output targets to 
see what their behaviour is.

Thanks,
Matt

From dirty at apple.com  Fri Aug 17 16:53:32 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Fri, 17 Aug 2007 16:53:32 -0700
Subject: [antlr-interest] Small bug in 3.0.1 C runtime source
	antlr3filestream.c
Message-ID: <D7A58DD1-2ED3-4CA6-A1AA-29F1C39CC888@apple.com>

Jim,
I was going through the 3.0.1 sources to see what changed and I  
noticed the following around line 38 of antlr3filestream.c:

     if	(fileName == NULL)
     {
	(pANTLR3_INPUT_STREAM) ANTLR3_FUNC_PTR(ANTLR3_ERR_NOFILE);
     }

It should be:

     if	(fileName == NULL)
     {
	return (pANTLR3_INPUT_STREAM) ANTLR3_FUNC_PTR(ANTLR3_ERR_NOFILE);
     }

Cameron Esfahani
dirty at apple.com

"With or without religion, good people can behave well and bad people  
can do evil; but for good people to do evil - that takes religion."

Steven Weinberg



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/695a9df6/attachment.html 

From dirty at apple.com  Fri Aug 17 17:31:26 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Fri, 17 Aug 2007 17:31:26 -0700
Subject: [antlr-interest] C Runtime: using include file mechanism.
Message-ID: <5E5A9302-AEFB-4B08-B5A2-048370295527@apple.com>

Jim,
I just tried using the include file mechanism you added a little  
while ago with this latest 3.0.1 release and it still isn't working  
for me...

Cameron Esfahani
dirty at apple.com

"It is the spirit and not the form of law that keeps justice alive."

Earl Warren



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070817/dbcf70b2/attachment.html 

From fyaoxy at gmail.com  Sat Aug 18 01:45:21 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Sat, 18 Aug 2007 16:45:21 +0800
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <BAY104-W1DBB4CDF75A1BBC8178BCCBD90@phx.gbl>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<91dd9a4f0708161601j6b86a176l931667becd4da44f@mail.gmail.com>
	<BAY104-W1DBB4CDF75A1BBC8178BCCBD90@phx.gbl>
Message-ID: <91dd9a4f0708180145p235fce23t69ae62ae358a47e8@mail.gmail.com>

Hi,
I change gUnit.g heading grammar as follows:

gUnitDef:    'gunit' g1=target
    {interpreter.grammarName = $g1.text;}
    (
    'walks' g2=target
    {interpreter.grammarName =  $g2.text;}
    )? ';'
        header? suite+ ;
target    :    ID EXT*; //TODO: make a choid between lexer and parser.

and in my target grammar:

grammar On;
@header{package xy.object.notation;}
@lexer::header{package xy.object.notation;}

and my grammar gUnit testsuite:

gunit xy.object.notation.On;

It works fine.
But there is question I not sure, that is just that TODO:
target    :    ID EXT*; //TODO: make a choid between lexer and parser.
I not sure which way is the best.



2007/8/18, Leon Su <leonsu at msn.com>:
>
> Hi,
>
> Thanks for your trying and the suggestions.
> I'll consider your points for improving the tool :)
>
> Leon
>
> ------------------------------
> Date: Fri, 17 Aug 2007 07:01:57 +0800
> From: fyaoxy at gmail.com
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
>
> Wawo, so great!  gunit so pretty!
> I tried, all passed. it make me happy.
>
> gunit On;
>
> words:
> "h" OK
> "hello" OK
> "hello " OK
> "hello world" OK
> "hello world " OK
> "hello world     " OK
> " hello world " OK
> "hello " -> "hello"
> "hello world" -> "hello world"
> "hello world    " -> "hello world"
> "    hello world    " -> "hello world"
>
> name:
> "hello,world" OK
> "hello,world" ->"(NAME (TSTRING hello) (TSTRING world))"
> " hello ,    world " ->"(NAME (TSTRING hello) (TSTRING world))"
>
> <<" hello
> world ">> -><<(NAME (TSTRING  hello
> world ))>>
>
> though my last test infinite loop:)
>
> And I have idea:
> I use package name in my grammar, current gunit just take grammar name. so
> do a hard code in it, I would like to deep into this tool.
> I wanna enhance testcase with additional message, like I do before:
> /*string test*/
> //valid single test
> a
> 1
> \n
> word
> ??
> //invalid single test
> ,
> "
>
> {
> }
> :
> //valid multiple test
> a aaaa
> 123 abc
> 123 abc
> //quoted test
> "abc1"
>
> seems "input ouput" triple can be done "message input output" or "input
> output message"
> even:
> group message{
> test
> test
> }
>
> Thank you again:)
>
>
> 2007/8/16, Terence Parr <parrt at cs.usfca.edu>:
>
> Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> very capable graduate student, Leon Su, that was able to implement it
> this summer.  Here is the wiki with code attached. :)
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>
> Please direct feedback to the group and/or Leon so we can improve
> it.  I think you'll find it is a very nice tool.  Has both
> interpreted and gUnit->jUnit code gen modes. :)
>
> Terence
>
>
>
>
> --
> ??
> ???
>
>


-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/b39f666b/attachment-0001.html 

From shaohua.wen at gmail.com  Sat Aug 18 02:08:53 2007
From: shaohua.wen at gmail.com (=?UTF-8?B?5paH5bCR5Y2O?=)
Date: Sat, 18 Aug 2007 17:08:53 +0800
Subject: [antlr-interest]  announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <5694af40708180208h668c7aadj1165268da5c50d1e@mail.gmail.com>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<5694af40708180208h668c7aadj1165268da5c50d1e@mail.gmail.com>
Message-ID: <5694af40708180208y2420a640md0bd8f2adc221ac4@mail.gmail.com>

Does it have an Ant task like Junit?
Can it generate xml/html report like junit?

On 8/16/07, Terence Parr <parrt at cs.usfca.edu > wrote:
>
> Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> very capable graduate student, Leon Su, that was able to implement it
> this summer.  Here is the wiki with code attached. :)
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>
> Please direct feedback to the group and/or Leon so we can improve
> it.  I think you'll find it is a very nice tool.  Has both
> interpreted and gUnit->jUnit code gen modes. :)
>
> Terence
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/29550c20/attachment.html 

From fyaoxy at gmail.com  Sat Aug 18 03:09:58 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Sat, 18 Aug 2007 18:09:58 +0800
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <5694af40708180208y2420a640md0bd8f2adc221ac4@mail.gmail.com>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<5694af40708180208h668c7aadj1165268da5c50d1e@mail.gmail.com>
	<5694af40708180208y2420a640md0bd8f2adc221ac4@mail.gmail.com>
Message-ID: <91dd9a4f0708180309s39469856hbdd7c8f970401b7c@mail.gmail.com>

current both not.
but can use -o option generate junit code which can be run in junit tasks.

<java classname="org.antlr.gunit.Interp">
<arg line="-o src/xy/object/notation/On.testsuite"/>
</java>
just gen junit code.


2007/8/18, ??? <shaohua.wen at gmail.com>:
>
> Does it have an Ant task like Junit?
> Can it generate xml/html report like junit?
>
> On 8/16/07, Terence Parr <parrt at cs.usfca.edu > wrote:
> >
> > Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> > facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> > year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> > very capable graduate student, Leon Su, that was able to implement it
> > this summer.  Here is the wiki with code attached. :)
> >
> > http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
> >
> > Please direct feedback to the group and/or Leon so we can improve
> > it.  I think you'll find it is a very nice tool.  Has both
> > interpreted and gUnit->jUnit code gen modes. :)
> >
> > Terence
> >
>
>


-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/b566a7f3/attachment.html 

From jimi at temporal-wave.com  Sat Aug 18 07:24:12 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 18 Aug 2007 07:24:12 -0700
Subject: [antlr-interest] ANTLR 3.0.1 C Runtime - Bug and
	possiblecorrection in displayRecognitionError()
In-Reply-To: <9cd6557d0708171135j662ba64eub18d97b093fa0673@mail.gmail.com>
References: <9cd6557d0708171135j662ba64eub18d97b093fa0673@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702361C@wavemachine.temporal-wave.com>

I believe this was corrected in the 3.0.1 source code, but I will take a
look. You should remember though that that function is just an example,
and you should provide a 'real' function for your own error messages.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Florian Pasco
> Sent: Friday, August 17, 2007 11:35 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR 3.0.1 C Runtime - Bug and
> possiblecorrection in displayRecognitionError()
> 
> I've had invalid memory access errors in the C runtime of ANTLR 3.0.1
> during tests where the parser was fed invalid inputs. These errors
> occurred in displayRecognitionError() in antlr3baserecognizer.c (line
> 822) :
> 		fprintf(stderr, " : expected %s ...\n", tokenNames[ex-
> >expecting]);
> when ex->expecting was 0xFFFFFFFF, which is the token for EOF. The
> error would then be an array access with an index of -1.
> 
> To correct this, I've then set my own error display handler via
> @apifuncs and used an exact copy of displayRecognitionError() with
> just the offending line replaced by these 2 lines (C++ instead of C
> used here) :
>             ANTLR3_UINT8* tokenName = ex->expecting ==
> ANTLR3_TOKEN_EOF ? (ANTLR3_UINT8*)"<EOF>" : tokenNames[ex->expecting];
>             fprintf(stderr, " : expected %s ...\n", tokenName);
> and everything runs just fine.
> 
> I'm not sure this is the best way to handle this since if there are
> accesses to the table pointed to by tokenNames elsewhere in the code,
> the same bug will happen. The cleanest way would be to prevent any
> token from having a negative value but the EOF token seems to be
> hardcoded to 0xFFFFFFFF for a reason.

From jimi at temporal-wave.com  Sat Aug 18 07:26:07 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 18 Aug 2007 07:26:07 -0700
Subject: [antlr-interest] @rulecatch overriding @after [C target]
In-Reply-To: <Pine.LNX.4.64.0708171622110.15136@eluvium.pdx.novell.com>
References: <Pine.LNX.4.64.0708171622110.15136@eluvium.pdx.novell.com>
Message-ID: <051466DAA0D608439E196797955018D702361D@wavemachine.temporal-wave.com>

Not so much intentional as that there are no exceptions as such so I
have not really addressed this. Probably something to look in to as I
thought it would just work at some point. Maybe moving things around
recently in the rule generation template has broken this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Matt Barringer
> Sent: Friday, August 17, 2007 4:30 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] @rulecatch overriding @after [C target]
> 
> Hello,
> 
> It seems that @rulecatch causes @after to be ignored when using the C
> target in ANTLR 3.0.1.  For example, with a grammar that does not have
> an
> @rulecatch block like:
> 
> exampleRule
> 	@after {
> 		/* Stuff goes here */
> 	}
> 	: TOKEN
> 	;
> 
> The code generated will be:
> 
>     if (HASEXCEPTION())
>     {
>         PREPORTERROR();
>         PRECOVER();
>     }
>     else
>     {
>         {
> 		/* Stuff goes here */
>         }
>     }
> 
> 
> But when using a grammar *with* @rulecatch like:
> 
> @rulecatch {
> 	if (HASEXCEPTION())
> 	{
> 		/* Catch exceptions here */
> 	}
> }
> 
> exampleRule
> 	@after {
> 		/* Stuff goes here */
> 	}
> 	: TOKEN
> 	;
> 
> the generated code will be simply be:
> 
>         if (HASEXCEPTION())
>         {
>                 /* Catch exceptions here */
>         }
> 
> 
> Is that intentional?  I haven't tried any of the other output targets
> to
> see what their behaviour is.
> 
> Thanks,
> Matt

From jimi at temporal-wave.com  Sat Aug 18 07:26:36 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 18 Aug 2007 07:26:36 -0700
Subject: [antlr-interest] Small bug in 3.0.1 C runtime
	sourceantlr3filestream.c
In-Reply-To: <D7A58DD1-2ED3-4CA6-A1AA-29F1C39CC888@apple.com>
References: <D7A58DD1-2ED3-4CA6-A1AA-29F1C39CC888@apple.com>
Message-ID: <051466DAA0D608439E196797955018D702361E@wavemachine.temporal-wave.com>

So it should! J

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Friday, August 17, 2007 4:54 PM
To: antlr-interest Interest
Subject: [antlr-interest] Small bug in 3.0.1 C runtime
sourceantlr3filestream.c

 

Jim,

I was going through the 3.0.1 sources to see what changed and I noticed
the following around line 38 of antlr3filestream.c:

 

    if    (fileName == NULL)

    {

          (pANTLR3_INPUT_STREAM) ANTLR3_FUNC_PTR(ANTLR3_ERR_NOFILE);

    }

 

It should be:

 

    if    (fileName == NULL)

    {

          return (pANTLR3_INPUT_STREAM)
ANTLR3_FUNC_PTR(ANTLR3_ERR_NOFILE);

    }

 

Cameron Esfahani

dirty at apple.com

 

"With or without religion, good people can behave well and bad people
can do evil; but for good people to do evil - that takes religion."

 

Steven Weinberg

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/0c123568/attachment.html 

From jimi at temporal-wave.com  Sat Aug 18 08:06:16 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 18 Aug 2007 08:06:16 -0700
Subject: [antlr-interest] C Runtime: using include file mechanism.
In-Reply-To: <5E5A9302-AEFB-4B08-B5A2-048370295527@apple.com>
References: <5E5A9302-AEFB-4B08-B5A2-048370295527@apple.com>
Message-ID: <051466DAA0D608439E196797955018D702361F@wavemachine.temporal-wave.com>

Did you ever send me your source? It works in 2 or 3 of my own parsers
so there is probably some difference in the way it is being used.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Friday, August 17, 2007 5:31 PM
To: antlr-interest Interest
Subject: [antlr-interest] C Runtime: using include file mechanism.

 

Jim,

I just tried using the include file mechanism you added a little while
ago with this latest 3.0.1 release and it still isn't working for me...

 

Cameron Esfahani

dirty at apple.com

 

"It is the spirit and not the form of law that keeps justice alive."

 

Earl Warren

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/ddea27b4/attachment-0001.html 

From antlr at mirality.co.nz  Sat Aug 18 14:36:00 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 19 Aug 2007 09:36:00 +1200
Subject: [antlr-interest] @rulecatch overriding @after [C target]
In-Reply-To: <Pine.LNX.4.64.0708171622110.15136@eluvium.pdx.novell.com>
References: <Pine.LNX.4.64.0708171622110.15136@eluvium.pdx.novell.com>
Message-ID: <20070818213607.9841611EB2C@www.antlr.org>

At 11:30 18/08/2007, Matt Barringer wrote:
 >It seems that @rulecatch causes @after to be ignored when using 
the
 >C target in ANTLR 3.0.1.  For example, with a grammar that does 
not
 >have an @rulecatch block like:
[...]
 >the generated code will be simply be:
 >
 >        if (HASEXCEPTION())
 >        {
 >                /* Catch exceptions here */
 >        }
 >
 >
 >Is that intentional?  I haven't tried any of the other output
 >targets to see what their behaviour is.

Does the C target support something like @finally?  (I'm rusty on 
all these special actions, so maybe that's what @after is for, but 
at least on the face of it I can see an argument for @after being 
"after successfully matching" while @finally would be "when 
leaving the rule, successfully or not"...  not that I know whether 
that's actually the case or not :))


From corellian.c at gmail.com  Sat Aug 18 18:05:20 2007
From: corellian.c at gmail.com (Corellian)
Date: Sun, 19 Aug 2007 03:05:20 +0200
Subject: [antlr-interest]  Does it make sense a "fragment parser rule"?
Message-ID: <3edc2fbd0708181805y797fe453q4759c7b777f126e7@mail.gmail.com>

Here a (probably) stupid question:

When I'm writing a parser rule like:

   identifierList: ID (COMMA ID)* ;

and then, another parser rule like:

   variableDeclaration: type identifierList SEMI ;

does it make sense declaring the "identifierList" as a "fragment" rule?

Thanks.

-- 
GPG Key-ID: 0x564903FA - JID: corellian at swissjabber.ch

From leonsu at msn.com  Sat Aug 18 19:24:06 2007
From: leonsu at msn.com (Leon Su)
Date: Sat, 18 Aug 2007 19:24:06 -0700
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <46C6CA3B.8010506@gmx.de>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<46C4C432.60601@gmx.de> <BAY104-W1501A67ED6E8401882C1DDCBD90@phx.gbl>
	<46C6CA3B.8010506@gmx.de>
Message-ID: <BAY104-W21D66A6A943D4AE4AD84AECBDA0@phx.gbl>

Hi, I think I forgot to reply to the ANTLR mail list. I updated the gUnit wiki page and will have some more modifications later.
Currently we only plan to implement gUnit on Java first, but I believe professor Ter will have plans for supporting other targets eventually.

Thanks,
Leon

> Date: Sat, 18 Aug 2007 12:30:19 +0200
> From: jaluber at gmx.de
> To: leonsu at msn.com
> Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
> 
> Leon Su wrote:
> > Hi Johannes,
> > 
> > Thanks for your comments. I'll add more explanations for gUnit examples
> > on the wiki.
> > The suggestions on the test results of gUnit are great. I already added
> > it to my todo list :)
> > In addition, gUnit only supports Java currently.
> > 
> > Regards,
> > Leon
> 
> Did you mean me as the only recipient or did the behaviour of the ANTLR
> list surprise you? In any case, will be there support for other targets,
> too, eventually?
> 
> Best regards,
> Johannes Luber
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/aaf8ceec/attachment.html 

From leonsu at msn.com  Sat Aug 18 19:37:49 2007
From: leonsu at msn.com (Leon Su)
Date: Sat, 18 Aug 2007 19:37:49 -0700
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <91dd9a4f0708181109q68769002jf3f9a9c445d9ac59@mail.gmail.com>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<91dd9a4f0708161601j6b86a176l931667becd4da44f@mail.gmail.com>
	<BAY104-W1DBB4CDF75A1BBC8178BCCBD90@phx.gbl> 
	<91dd9a4f0708181109q68769002jf3f9a9c445d9ac59@mail.gmail.com>
Message-ID: <BAY104-W74CF6AF1260DD1E49D4B4CBDA0@phx.gbl>

Thanks for the report. I redirected system.err to another class in order to collect error messages for each single test.
If xParser failed, there should be some error messages displayed on the test results.
If not, could you give me more information on your grammar and gUnit testsuite that I can fix the possible bug.

Leon
Date: Sun, 19 Aug 2007 02:09:42 +0800
From: fyaoxy at gmail.com
To: leonsu at msn.com
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing

Hi,
In some case, when xParser failed, gUnitExecutor pipe stuff would make a deak lock on system.err. I done a little finding, no result, and not deep dig into.:)
I tring another way:)


2007/8/18, Leon Su <leonsu at msn.com>:



Hi,

Thanks for your trying and the suggestions. 
I'll consider your points for improving the tool :)

Leon
Date: Fri, 17 Aug 2007 07:01:57 +0800

From: fyaoxy at gmail.com
To: 
antlr-interest at antlr.org
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing

Wawo, so great!  gunit so pretty!
I tried, all passed. it make me happy.


gunit On;

words:
"h" OK
"hello" OK
"hello " OK
"hello world" OK
"hello world " OK

"hello world     " OK
" hello world " OK
"hello " -> "hello"
"hello world" -> "hello world"
"hello world    " -> "hello world"

"    hello world    " -> "hello world"

name:
"hello,world" OK
"hello,world" ->"(NAME (TSTRING hello) (TSTRING world))"
" hello ,    world " ->"(NAME (TSTRING hello) (TSTRING world))"


<<" hello
world ">> -><<(NAME (TSTRING  hello
world ))>>

though my last test infinite loop:)

And I have idea: 
I
use package name in my grammar, current gunit just take grammar name.
so do a hard code in it, I would like to deep into this tool.

I wanna enhance testcase with additional message, like I do before:
/*string test*/
//valid single test
a
1
\n
word
??
//invalid single test
,
"

{
}
:
//valid multiple test

a aaaa
123 abc
123 abc 
//quoted test
"abc1"

seems "input ouput" triple can be done "message input output" or "input output message"
even:
group message{

test 
test
}

Thank you again:)


2007/8/16, Terence Parr <parrt at cs.usfca.edu
>:
Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
year.  He inspired me to build one for ANTLR.  Fortunately, I found a
very capable graduate student, Leon Su, that was able to implement it

this summer.  Here is the wiki with code attached. :)

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing



Please direct feedback to the group and/or Leon so we can improve
it.  I think you'll find it is a very nice tool.  Has both
interpreted and gUnit->jUnit code gen modes. :)

Terence




-- 
??
???



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070818/9fab5ae5/attachment.html 

From fyaoxy at gmail.com  Sat Aug 18 22:41:23 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Sun, 19 Aug 2007 13:41:23 +0800
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <BAY104-W74CF6AF1260DD1E49D4B4CBDA0@phx.gbl>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<91dd9a4f0708161601j6b86a176l931667becd4da44f@mail.gmail.com>
	<BAY104-W1DBB4CDF75A1BBC8178BCCBD90@phx.gbl>
	<91dd9a4f0708181109q68769002jf3f9a9c445d9ac59@mail.gmail.com>
	<BAY104-W74CF6AF1260DD1E49D4B4CBDA0@phx.gbl>
Message-ID: <91dd9a4f0708182241r297087bcha54b702e0bb1283c@mail.gmail.com>

Hi,
I changed something in my current work version.
You can get its svn revision from
https://on.dev.java.net/svn/on/trunk/eclipse
it's a eclipse project. the last version is 59. I not sure it is
reproducable.
but the privous revision 50..57 should reproduct it.
testcase in build.xml,
to run it, execute task: generate, compile, gunit

2007/8/19, Leon Su <leonsu at msn.com>:
>
> Thanks for the report. I redirected system.err to another class in order
> to collect error messages for each single test.
> If xParser failed, there should be some error messages displayed on the
> test results.
> If not, could you give me more information on your grammar and gUnit
> testsuite that I can fix the possible bug.
>
> Leon
>
> ------------------------------
> Date: Sun, 19 Aug 2007 02:09:42 +0800
> From: fyaoxy at gmail.com
> To: leonsu at msn.com
> Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
>
> Hi,
> In some case, when xParser failed, gUnitExecutor pipe stuff would make a
> deak lock on system.err. I done a little finding, no result, and not deep
> dig into.:)
> I tring another way:)
>
> 2007/8/18, Leon Su <leonsu at msn.com>:
>
> Hi,
>
> Thanks for your trying and the suggestions.
> I'll consider your points for improving the tool :)
>
> Leon
>
> ------------------------------
> Date: Fri, 17 Aug 2007 07:01:57 +0800
> From: fyaoxy at gmail.com
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
>
> Wawo, so great!  gunit so pretty!
> I tried, all passed. it make me happy.
>
> gunit On;
>
> words:
> "h" OK
> "hello" OK
> "hello " OK
> "hello world" OK
> "hello world " OK
> "hello world     " OK
> " hello world " OK
> "hello " -> "hello"
> "hello world" -> "hello world"
> "hello world    " -> "hello world"
> "    hello world    " -> "hello world"
>
> name:
> "hello,world" OK
> "hello,world" ->"(NAME (TSTRING hello) (TSTRING world))"
> " hello ,    world " ->"(NAME (TSTRING hello) (TSTRING world))"
>
> <<" hello
> world ">> -><<(NAME (TSTRING  hello
> world ))>>
>
> though my last test infinite loop:)
>
> And I have idea:
> I use package name in my grammar, current gunit just take grammar name. so
> do a hard code in it, I would like to deep into this tool.
> I wanna enhance testcase with additional message, like I do before:
> /*string test*/
> //valid single test
> a
> 1
> \n
> word
> ??
> //invalid single test
> ,
> "
>
> {
> }
> :
> //valid multiple test
> a aaaa
> 123 abc
> 123 abc
> //quoted test
> "abc1"
>
> seems "input ouput" triple can be done "message input output" or "input
> output message"
> even:
> group message{
> test
> test
> }
>
> Thank you again:)
>
>
> 2007/8/16, Terence Parr <parrt at cs.usfca.edu >:
>
> Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> very capable graduate student, Leon Su, that was able to implement it
> this summer.  Here is the wiki with code attached. :)
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>
> Please direct feedback to the group and/or Leon so we can improve
> it.  I think you'll find it is a very nice tool.  Has both
> interpreted and gUnit->jUnit code gen modes. :)
>
> Terence
>
>
>
>
> --
> ??
> ???
>
>
>
>
> --
> ??
> ???
>
>


-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070819/39f47035/attachment-0001.html 

From vbar at comp.cz  Sat Aug 18 23:13:19 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Sun, 19 Aug 2007 08:13:19 +0200
Subject: [antlr-interest] Token stream in semantic predicates
Message-ID: <200708190813.19871.vbar@comp.cz>

Hi,

I'm trying to recognize special-case strings via semantic predicates:

command_name
	: { "java".equals(input.LT(1).getText()) }? => string -> ^( JAVA )
	| n = string -> ^( COMMAND[$n.value] )
	;

("java" isn't a real token because it's special only as a command; in other 
parts of the grammar, it's a string literal like any other.) But, the 
generated parser won't compile:

    [javac] /home/vb/antlr/antmaker/src/LoaderParser.java:2031: cannot find 
symbol
    [javac] symbol  : method LT(int)
    [javac] location: interface org.antlr.runtime.IntStream
    [javac]                         if (
( "java".equals(input.LT(1).getText()) ) ) {s = 13;}

(Repeated in couple of places.) What is the correct syntax for getting at the 
text of the current token?

Funny thing is, I can write

@parser::members {
	boolean is_at(String special) {
		return special.equals(input.LT(1).getText());
	}
}

command_name
	: { is_at("java") }? => string -> ^( JAVA )
	| n = string -> ^( COMMAND[$n.value] )
	;

which it compiles OK and works as expected (as far as I can tell) - but why do 
I have to define the extra method?

	Bye
		Vasek

From antlr at mirality.co.nz  Sat Aug 18 23:25:25 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 19 Aug 2007 18:25:25 +1200
Subject: [antlr-interest] Does it make sense a "fragment parser  rule"?
In-Reply-To: <3edc2fbd0708181805y797fe453q4759c7b777f126e7@mail.gmail.co
 m>
References: <3edc2fbd0708181805y797fe453q4759c7b777f126e7@mail.gmail.com>
Message-ID: <20070819062536.0348911EB2C@www.antlr.org>

At 13:05 19/08/2007, Corellian wrote:
 >Here a (probably) stupid question:
 >
 >When I'm writing a parser rule like:
 >
 >   identifierList: ID (COMMA ID)* ;
 >
 >and then, another parser rule like:
 >
 >   variableDeclaration: type identifierList SEMI ;
 >
 >does it make sense declaring the "identifierList" as a 
"fragment"
 >rule?

It doesn't make any difference to ANTLR itself (fragment rules 
only change behaviour in the lexer, not the parser), but depending 
on your target language making a parser rule a fragment can turn 
it into a private (or otherwise hidden a bit more) method, thus 
making it harder to accidentally call from your main app.  So you 
may find it useful, but it's totally up to you :)


From a.shneyderman at gmail.com  Sun Aug 19 00:20:03 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Sun, 19 Aug 2007 09:20:03 +0200
Subject: [antlr-interest] Does it make sense a "fragment parser rule"?
In-Reply-To: <20070819062536.0348911EB2C@www.antlr.org>
References: <3edc2fbd0708181805y797fe453q4759c7b777f126e7@mail.gmail.com>
	<20070819062536.0348911EB2C@www.antlr.org>
Message-ID: <693a69ba0708190020h51fe6d09pcc0aab4d93352dbc@mail.gmail.com>

I guess the problem Corellian has is that even if you declare the
parser rule as fragment the corresponding method of the parser is
still public (v3.0 from May). I think it makes sense to have those
fragments for parsers as often I create a rule for as a predicate
only. Obviously no class but the parser itself should ever call it.

On 8/19/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
> At 13:05 19/08/2007, Corellian wrote:
>  >Here a (probably) stupid question:
>  >
>  >When I'm writing a parser rule like:
>  >
>  >   identifierList: ID (COMMA ID)* ;
>  >
>  >and then, another parser rule like:
>  >
>  >   variableDeclaration: type identifierList SEMI ;
>  >
>  >does it make sense declaring the "identifierList" as a
> "fragment"
>  >rule?
>
> It doesn't make any difference to ANTLR itself (fragment rules
> only change behaviour in the lexer, not the parser), but depending
> on your target language making a parser rule a fragment can turn
> it into a private (or otherwise hidden a bit more) method, thus
> making it harder to accidentally call from your main app.  So you
> may find it useful, but it's totally up to you :)
>
>


-- 
Thanks,
Alex.

From nightwolf at email.it  Sun Aug 19 02:21:27 2007
From: nightwolf at email.it (Mauro Pellicioli)
Date: Sun, 19 Aug 2007 11:21:27 +0200
Subject: [antlr-interest] Problems with lexer/grammar rules
Message-ID: <c7ed660538ee324a8bad82c05456aecb@87.14.77.231>

Hi everyone, I\'ve tried this simple grammar:


grammar Imdb;
@header {
package grammatiche;
}
@lexer::header {
package grammatiche;
}
document: (WS)* \'<html>\' (WS)* head (WS|COMMENT)* BODY (WS)* \'</html>\'
(WS)*;
head : \'<head>\' (WS|title|META|LINK)+ \'</head>\';
title:\'<title>\' STRING \'</title>\';
META:\'<meta\' (options {greedy=false;} : .)* \'>\';
LINK: \'<link\'(options {greedy=false;} : .)* \'>\';
BODY: \'<body\' (options {greedy=false;} : .)*\'</body>\';
STRING:(\'0\'..\'9\'|\'a\'..\'z\'|\'A\'..\'Z\'|\' \'| \'\\\'\'
|\'#\'|\'.\'|\':\'|\';\'|\'&\'|\',\'|\'-\'|\'!\'|\'(\'|\')\')+;
WS : \' \' | \'\\r\' | \'\\n\' ;



on the html page http://www.imdb.com/find?s=all&q=taxi+driver (see source
with the browser),it doesn\'t work and gives this error message:



line 7:0 mismatched input \' \' expecting \'</head>\'
line 8:0 mismatched input \' \' expecting BODY

while the same grammar with all lexer rules:



grammar Imdb;
@header {
package grammatiche;
}
@lexer::header {
package grammatiche;
}
document: (WS)* \'<html>\' (WS)* HEAD (WS|COMMENT)* BODY (WS)* \'</html>\'
(WS)*;
HEAD : \'<head>\' (WS|TITLE|META|LINK)+ \'</head>\';
TITLE:\'<title>\' STRING \'</title>\';
META:\'<meta\' (options {greedy=false;} : .)* \'>\';
LINK: \'<link\'(options {greedy=false;} : .)* \'>\';
BODY: \'<body\' (options {greedy=false;} : .)*\'</body>\';
COMMENT:   \'<!--\' (options {greedy=false;} : .)* \'-->\';
STRING:(\'0\'..\'9\'|\'a\'..\'z\'|\'A\'..\'Z\'|\' \'| \'\\\'\'
|\'#\'|\'.\'|\':\'|\';\'|\'&\'|\',\'|\'-\'|\'!\'|\'(\'|\')\')+;
WS : \' \' | \'\\r\' | \'\\n\';

works fine; I want to make \'head\' and \'title\' parser rules because I
need an action to store \'STRING\' value (the title of the HTML page) in a
parser local variable and then return it to \'document\' caller. How i
should proceed?

Thanks for help. 
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 In REGALO un GIOCO! Scegli GPBikes 3D,Bubble Boom, Rock City Empire
 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=6732&d=20070819

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070819/4d10a6fe/attachment.html 

From jrc at skylon.demon.co.uk  Sun Aug 19 04:47:45 2007
From: jrc at skylon.demon.co.uk (John Connett)
Date: Sun, 19 Aug 2007 12:47:45 +0100
Subject: [antlr-interest] ANTLR v3 RPMs?
Message-ID: <1187524065.6339.15.camel@gateway.home>

Has anyone produced RPMs for ANTLR v3?  I found RPMs for ANTLR 2.7.7 as
part of the JPackage Project (http://www.jpackage.org/).

This message has been copied (Bcc) to the packager of the JPackage ANTLR
RPMs.

The existing JPackage RPMs are:

antlr-2.7.7-1jpp:         ANother Tool for Language Recognition
antlr-javadoc-2.7.7-1jpp: Javadoc for antlr
antlr-jedit-2.7.7-1jpp:   ANTLR mode for jEdit
antlr-manual-2.7.7-1jpp:  Manual for antlr

Should the runtime be in a separate RPM from the tool?

Regards
--
John Connett


From Waverly.Edwards at genesys.com  Sun Aug 19 17:52:01 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Sun, 19 Aug 2007 20:52:01 -0400
Subject: [antlr-interest] lexer: compound keywords with a twist
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>


Hello,

I'm a first time ANTLR user and I have some questions that I need some
assistanc with.
I am replicating an existing procedural BASIC dialect language compiler.
I actually have
multiple issues to overcome but this is the first one.  The language has
*hundreds* of keywords.
Many of the keywords are actually compound keywords

Edit = numericVar
Edit Field
Edit Field Close
Edit Menu
Edit Text
Compile Long If


1.  How would you define compound keywords?  The keyword "Edit" has 5
different starts
and the longest usage is a combination of three words


2.  Is it possible to deal with variable length keywords at the lexer
level.

stringVar = Edit$( vNumParam )
Edit$( vNumParam ) = stringVar

I have two instances where Edit$ ( different from Edit ) can be used.
One as a function
and the other a procedure.  If Edit$ is on the left side of a variable
it's a procedure and
if on the right it's a function.  The perform different tasks.  Is there
a way at the lexer
level that I can pass the parser something like EditStatement vs
EditFunction depending
on what the lexer sees first.

Thank you,


W.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070819/446baa73/attachment.html 

From fyaoxy at gmail.com  Sun Aug 19 18:03:49 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Mon, 20 Aug 2007 09:03:49 +0800
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
Message-ID: <91dd9a4f0708191803q4be3ee17k323109ca2e347824@mail.gmail.com>

Hi,
As a just now newbie of antlr, my advice is just not let me faraway, closer
and closer to tutorials.
and as to language, do you real think that selection is necesary?
for parameter consideration, the way is good, but not necessary in my sight.
just IMHO:)

2007/8/20, Edwards, Waverly <Waverly.Edwards at genesys.com>:
>
>
> Hello,
>
> I'm a first time ANTLR user and I have some questions that I need some
> assistanc with.
> I am replicating an existing procedural BASIC dialect language compiler.
> I actually have
> multiple issues to overcome but this is the first one.  The language has
> *hundreds* of keywords.
> Many of the keywords are actually compound keywords
>
> Edit = numericVar
> Edit Field
> Edit Field Close
> Edit Menu
> Edit Text
> Compile Long If
>
> 1.  How would you define compound keywords?  The keyword "Edit" has 5
> different starts
> and the longest usage is a combination of three words
>
> 2.  Is it possible to deal with variable length keywords at the lexer
> level.
>
> stringVar = Edit$( vNumParam )
> Edit$( vNumParam ) = stringVar
>
> I have two instances where Edit$ ( different from Edit ) can be used.  One
> as a function
> and the other a procedure.  If Edit$ is on the left side of a variable
> it's a procedure and
> if on the right it's a function.  The perform different tasks.  Is there a
> way at the lexer
> level that I can pass the parser something like EditStatement vs
> EditFunction depending
> on what the lexer sees first.
>
> Thank you,
>
> W.
>



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/af2642a2/attachment.html 

From Waverly.Edwards at genesys.com  Sun Aug 19 19:28:49 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Sun, 19 Aug 2007 22:28:49 -0400
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3029@navamane001.ad.internal.corp>

stringVar = Edit$( vNumParam ) 
 
Sorry, vNumParam is actually a variable number of parameters ( up to 5
).
 
 
W.

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Sunday, August 19, 2007 8:52 PM
To: antlr
Subject: [antlr-interest] lexer: compound keywords with a twist




Hello, 

I'm a first time ANTLR user and I have some questions that I need some
assistanc with. 
I am replicating an existing procedural BASIC dialect language compiler.
I actually have 
multiple issues to overcome but this is the first one.  The language has
*hundreds* of keywords. 
Many of the keywords are actually compound keywords 

Edit = numericVar 
Edit Field 
Edit Field Close 
Edit Menu 
Edit Text 
Compile Long If 


1.  How would you define compound keywords?  The keyword "Edit" has 5
different starts 
and the longest usage is a combination of three words 


2.  Is it possible to deal with variable length keywords at the lexer
level. 

stringVar = Edit$( vNumParam ) 
Edit$( vNumParam ) = stringVar 

I have two instances where Edit$ ( different from Edit ) can be used.
One as a function 
and the other a procedure.  If Edit$ is on the left side of a variable
it's a procedure and 
if on the right it's a function.  The perform different tasks.  Is there
a way at the lexer 
level that I can pass the parser something like EditStatement vs
EditFunction depending 
on what the lexer sees first. 

Thank you, 


W. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070819/ac9a60a7/attachment.html 

From easjolly at ix.netcom.com  Sun Aug 19 20:42:56 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Sun, 19 Aug 2007 21:42:56 -0600
Subject: [antlr-interest] lexer: compound keywords with a twist
Message-ID: <E1IMy9m-0001QF-BK@elasmtp-galgo.atl.sa.earthlink.net>

This might be a case where you want to take advantage of the ability to emit
more than one token per lexer rule as explained in the ANTLR book starting
on page 95.

If you use a lexer rule similar to 

KEYWORD = ('a'..'z'| 'A'..'Z'| ' '| '$')+;

it will get all of your "compound" keywords plus, of course, other
sequences.

Then you include your own emit() method in your lexer that emits this token
if the token text actually is a keyword.  If not, you use a custom
"mini-lexer" to rescan the token text and emit the correct sequence of
tokens. Of course, you wouldn't want to do this unless the "mini-lexer" is
very simple.

I had a situation where the "mini-lexer" simply had to emit each character
as a separate token so this strategy worked really well.



From sam.ellis at arm.com  Mon Aug 20 00:14:46 2007
From: sam.ellis at arm.com (Sam Ellis)
Date: Mon, 20 Aug 2007 08:14:46 +0100
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
Message-ID: <C2EEFDF6.1493F%sam.ellis@arm.com>

On 20/8/07 01:52, "Edwards, Waverly" <Waverly.Edwards at genesys.com> wrote:
> 2.  Is it possible to deal with variable length keywords at the lexer
> level.
> 
> stringVar = Edit$( vNumParam )
> Edit$( vNumParam ) = stringVar

In my grammar, I solve this by using a semantic predicate in my parser to
call a method that knows how to identify my keywords. For example my
isKeyword() method takes an argument containing a description of the
expected keyword (where text to the left of '*' represents the minimum stem
to be matched and text afterwards is optional):

statement
    :    {isKeyword("enum*eration", input.LT(1))}? keyword EQUALS value

To do this in the lexer instead you could either explicitly code all the
combinations:

ENUM: 'enum' ('e' ('r' ('a' ('t' ('i' ('o' ('n')? )? )? )? )? )? )?

Or as the previous poster suggested, defining a generic lexer rule that
matches on any keyword, with an action to perform disambiguation and return
the correct token type.

I chose to do my checking in the parser because my language allows keywords
as variable names, so I need further context to disambiguate between the two
usages.


-- 
Sam Ellis, RVDK Team Leader,
DevSys Product Engineering Group,          Tel: +44 (0) 1223 400516
ARM Ltd., 110 Fulbourn Road,               Fax: +44 (0) 1223 400887
Cambridge, CB1 9NJ                         mailto:Sam.Ellis at arm.com



-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From ashwini.bagaitkar at coreobjects.com  Mon Aug 20 00:09:28 2007
From: ashwini.bagaitkar at coreobjects.com (Ashwini Bagaitkar)
Date: Mon, 20 Aug 2007 12:39:28 +0530
Subject: [antlr-interest]  Do we need an antlr tutorial
Message-ID: <CORW2EX029cAgjHXwKH00000ed9@CORW2EX02.coreobjects.com>

Hi,

 

Has anyone tried implementing version of HOC (described in Unix Programming
Environment), using ANTLR?

I want to implement an interpreter for language similar to HOC5 / HOC6 using
ANTLR in C#.

If anyone can provide some information, it would be helpful. 

 

Thanks,

Ashwini

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/75037ca0/attachment-0001.html 

From Waverly.Edwards at genesys.com  Mon Aug 20 01:09:20 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 04:09:20 -0400
Subject: [antlr-interest] lexing: case insensitivity
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA302A@navamane001.ad.internal.corp>


In ANTLR is it possible to manage the file stream *before* the lexer
handles it?

I'd like to show you what I did with my original hand-written lexer and
offer as a solution of sorts, though I don't know if it can be
implemented
directly in ANTLR.


I am replicating a dialect of the BASIC language that is case
insensitve.  

I have read the article on

http://www.antlr.org/pipermail/antlr-interest/2007-January/019008.h
tml

For me I need a different way of handling the input stream.  I
originally
hand-wrote a lexer for my dialect that contains hundreds of keywords.
The way I dealt with case-insensitivity was to make a first pass on the
input stream, removing all of the comments by remapping the characters
to spaces so I wouldn't loose any file position info AND uppercasing
anything
that was not in quotes.  It was not really necessary to remove the 
comments but it made the logic for the real lexer much simpler since I
didn't 
need to keep the comments for any reason because I'm not doing source to

source translation.  How I uppercase the input stream was to setup an
array, 
uppercase it and use it to remap for all the characters in the input
stream.
Done to satisfy an ASCII character set but I don't know of any reason
why
the same could not be done for unicode, ( never tried it ).

WARNING: pseudocode mixed with real code.  Also my Java is a bit crude.

pseudo mixed because I don't recall how to do this in Java off the top
of my head as this was originally done in BASIC and a bit simpler.

        // deal with ASCII  but COULD use unicode set
        static final int  _charSetSize = 256;// ASCII but could be
unicode
        String asciiStr = null;
        char asciiMap[] = new char [ _charSetSize ];
        char charInInputStream, charPos;
        for ( charPos = 0; charPos < _charSetSize; charPos++ )
            asciiStr = asciiStr + charPos;
        
        asciiStr = asciiStr.toUpperCase(); // change to uppercase

       // remap the initial array so there is no method call overhead
       // when it is time to remap the input array
        for ( charPos = 0; charPos < _charSetSize; charPos++ )
            asciiMap[charPos] = asciiStr.charAt(charPos);
        
        // replace all characters not inside a string
        // replace characters don't bother deciding if it needs to be
uppercased
        // since the branch decision causes more overhead than its worth
        while ( charInInputStream != EOF ) {
            if ( characterNotInsideString == true ) {
                charInInputStream = streamArray[charPos];
                streamArray[charPos] = arrayMap[charInInputStream] ;
            }
        }


Because lexing takes 25% or more of a compilers times I couldn't
repeatedly
invoke a procedure that would likely double my overhead but went for a 
remapping the input stream.  I went character by character because, one 
I have no choice and two in a lexer I have to touch each character
anyway.  
Initially treating input stream as an array of characters speeds up
lexing 
**tremendously** by getting rid of ALL of the overhead associated with 
the toUpperCase method call and allowing you to make pre-processing 
decisions along the way.

I thought I would throw that out there for anyone who needs an idea for
case insensitivity.


Now the question remains:  
In ANTLR Is it possible to manage the file stream *before* the lexer
handles it?


W.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/0232ec1e/attachment.html 

From Waverly.Edwards at genesys.com  Mon Aug 20 01:25:20 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 04:25:20 -0400
Subject: [antlr-interest] lexer: suffixes and case insensitivity
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA302B@navamane001.ad.internal.corp>


is there a way to deal with old style BASIC variables?

I am replicating a dialect of BASIC that optionally uses suffixes for
variable types.

varName   // no suffix, determined by dim type, dim varName as type
varName$  // string
varName$$ // container ( like a string but much bigger )
varName#  // double precision
varName!  // single precision
varName`  // signed byte
varName%  // signed integer
varName&  // signed long integer
varName`` // unsigned byte
varName%` // unsigned integer
varName&` // unsigned long integer

Three ways that I can type a primitive variable type

dim as unsigned long varName   // typed as unsigned long
dim varName as unsigned long  // typed as unsigned long
dim varName&`                        // also and unsigned long by way of
suffix "&`"

Can this type of mapping be handled by the ANTLR lexer where
the lexer knows how to match varName%` before varName%

Still reading the site, still learning.


Thank you,


W.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/f3b15fc3/attachment.html 

From kroepke at classdump.org  Mon Aug 20 01:31:16 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Aug 2007 10:31:16 +0200
Subject: [antlr-interest] lexing: case insensitivity
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA302A@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA302A@navamane001.ad.internal.corp>
Message-ID: <56736A58-29F1-44F7-A45F-38702FFDCB6A@classdump.org>


On Aug 20, 2007, at 10:09 AM, Edwards, Waverly wrote:

> In ANTLR Is it possible to manage the file stream *before* the lexer
> handles it?

That's probably not your best option, since you actually lose the  
character's
case (for pretty printing/error messages etc).

For the C target what Jim has done was to modify the input stream to  
always return
uppercase characters so that ANTLR is tricked into thinking  
everything was uppercase,
even though the actual input wasn't.

He provided <http://www.antlr.org/pipermail/antlr-interest/2007- 
January/019008.html>
in the discussion. Take a look :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From Sam.Ellis at arm.com  Mon Aug 20 01:33:40 2007
From: Sam.Ellis at arm.com (Sam Ellis)
Date: Mon, 20 Aug 2007 09:33:40 +0100
Subject: [antlr-interest] lexing: case insensitivity
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA302A@navamane001.ad.internal.corp>
Message-ID: <89A528FE6DB0FA44877BB2F05B8467180612D69B@ZIPPY.Emea.Arm.com>

antlr-interest-bounces at antlr.org wrote:
> Now the question remains:
> In ANTLR Is it possible to manage the file stream *before*
> the lexer handles it?

Yes. My solution to this involves extending ANTLRInputStream, and then
implementing the load() method to load the data and then process the
data[] array:

public class MyInputStream extends ANTLRInputStream {

   ... other methods ...

   public void load(Reader r, int sizem int readChunkSize) throws
IOException {
       super.load(r, size, readChunkSize);

       /* Now process data[0..n-1]. */
   }
}

The length of the data is stored in a field called 'n'. I find the
choice of name 'n' slightly annoying as I commonly use 'n' as a loop
iterator. Perhaps a better name could be used, 'dataLength'.

In any case, you can then pass an instance of your new class to the
constructor of your lexer. An alternative, which I was using previously,
was to process the stream on the fly before it is read by
ANTLRInputStream, e.g. extend InputStream. However, in my case, I found
it more efficient to use the apparach outlined above as I can operate on
the whole input in a single operation.


-- 
Sam Ellis, RVDK Team Leader,
Product Engineering Group,                 Tel: +44 (0) 1223 400516
System Design Division,                    Fax: +44 (0) 1223 400887
ARM Ltd., 110 Fulbourn Road,               skype:armsamellis
Cambridge, CB1 9NJ                         mailto:sam.ellis at arm.com

-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From kroepke at classdump.org  Mon Aug 20 01:33:43 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Aug 2007 10:33:43 +0200
Subject: [antlr-interest] lexer: suffixes and case insensitivity
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA302B@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA302B@navamane001.ad.internal.corp>
Message-ID: <BCDAC9D7-B70C-4834-A213-2A551F854115@classdump.org>


On Aug 20, 2007, at 10:25 AM, Edwards, Waverly wrote:

> Can this type of mapping be handled by the ANTLR lexer where
> the lexer knows how to match varName%` before varName%

Just to throw it in: I'd probably do it with semantic predicates that
do some manual lookahead (with calling LA() and comparing that to the
individual suffixes you have).

Then you can force ANTLR to take specific ways through your lexer  
alternatives.

I think on of the examples in the distribution does something  
related, and I'm
sure the list archives also have something like this.

HTH,
-k

P.S.: Sorry for the terse posts, I'm in a hurry... :)
-- 
Kay R?pke
http://classdump.org/





From Waverly.Edwards at genesys.com  Mon Aug 20 01:48:28 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 04:48:28 -0400
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <E1IMy9m-0001QF-BK@elasmtp-galgo.atl.sa.earthlink.net>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA302C@navamane001.ad.internal.corp>


Unfortunately I do not comprehend.  I'm sort of struggling
as my knowledge of ANTLR is infantile but I *may* have an idea of what
you mean.

I really want the lexer to do the compound keyword recognition so the
parser
only has to worry about single tokens.  Basically the lexer works harder
so
the parser doesn't need to.  I decided on this because I wanted the
parser
and the lexer to be more reusable for another project, keeping keyword 
recognition in the lexer.

I would actually like to reuse the lexer for syntax aware editor.


I will look into this as you have suggested.


Thank you,


W.
  

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Susan Jolly
Sent: Sunday, August 19, 2007 11:43 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexer: compound keywords with a twist

This might be a case where you want to take advantage of the ability to
emit more than one token per lexer rule as explained in the ANTLR book
starting on page 95.

If you use a lexer rule similar to 

KEYWORD = ('a'..'z'| 'A'..'Z'| ' '| '$')+;

it will get all of your "compound" keywords plus, of course, other
sequences.

Then you include your own emit() method in your lexer that emits this
token if the token text actually is a keyword.  If not, you use a custom
"mini-lexer" to rescan the token text and emit the correct sequence of
tokens. Of course, you wouldn't want to do this unless the "mini-lexer"
is very simple.

I had a situation where the "mini-lexer" simply had to emit each
character as a separate token so this strategy worked really well.



From Sam.Ellis at arm.com  Mon Aug 20 01:54:52 2007
From: Sam.Ellis at arm.com (Sam Ellis)
Date: Mon, 20 Aug 2007 09:54:52 +0100
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA302C@navamane001.ad.internal.corp>
Message-ID: <89A528FE6DB0FA44877BB2F05B8467180612D6EB@ZIPPY.Emea.Arm.com>

antlr-interest-bounces at antlr.org wrote:
> Unfortunately I do not comprehend.  I'm sort of struggling
> as my knowledge of ANTLR is infantile but I *may* have an idea of
> what you mean. 

There is some information on this topic (variable length keywords) on
the wiki:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1802308


-- 
Sam Ellis, RVDK Team Leader,
Product Engineering Group,                 Tel: +44 (0) 1223 400516
System Design Division,                    Fax: +44 (0) 1223 400887
ARM Ltd., 110 Fulbourn Road,               skype:armsamellis
Cambridge, CB1 9NJ                         mailto:sam.ellis at arm.com

-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From Waverly.Edwards at genesys.com  Mon Aug 20 02:11:34 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 05:11:34 -0400
Subject: [antlr-interest] lexing: case insensitivity
In-Reply-To: <56736A58-29F1-44F7-A45F-38702FFDCB6A@classdump.org>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA302D@navamane001.ad.internal.corp>

 
Ahhh, but it is an option?  I've pondered a syntax aware editor and error messages.
A syntax aware editor is going to require some type of style array which include
case that is separate from the actual text.  Speed is critical here.
For error messages, speed is not an issue, so I can reread the lines of text
from disk since I will have all error in one file before I reach another. My modified
text still matches the original text positions character for character.  I coalesce
all the errors then read the original text from the files so the user doesn't see the
difference.  I get all the speed I can out of the lexer and only have to deal with
case at error message time.

Now I just have to see how to implement it.


Thanks,


W.

-----Original Message-----
From: Kay Roepke [mailto:kroepke at classdump.org] 
Sent: Monday, August 20, 2007 4:31 AM
To: Edwards, Waverly
Cc: antlr
Subject: Re: [antlr-interest] lexing: case insensitivity


On Aug 20, 2007, at 10:09 AM, Edwards, Waverly wrote:

> In ANTLR Is it possible to manage the file stream *before* the lexer 
> handles it?

That's probably not your best option, since you actually lose the character's case (for pretty printing/error messages etc).

For the C target what Jim has done was to modify the input stream to always return uppercase characters so that ANTLR is tricked into thinking everything was uppercase, even though the actual input wasn't.

He provided <http://www.antlr.org/pipermail/antlr-interest/2007-
January/019008.html>
in the discussion. Take a look :)

cheers,
-k
--
Kay R?pke
http://classdump.org/





From Waverly.Edwards at genesys.com  Mon Aug 20 02:15:15 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 05:15:15 -0400
Subject: [antlr-interest] lexing: case insensitivity
In-Reply-To: <89A528FE6DB0FA44877BB2F05B8467180612D69B@ZIPPY.Emea.Arm.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA302E@navamane001.ad.internal.corp>

 
Outstanding!

I will definitely have to look into this.

Thanks,


W.

-----Original Message-----
From: Sam Ellis [mailto:Sam.Ellis at arm.com] 
Sent: Monday, August 20, 2007 4:34 AM
To: Edwards, Waverly; antlr
Subject: RE: [antlr-interest] lexing: case insensitivity

antlr-interest-bounces at antlr.org wrote:
> Now the question remains:
> In ANTLR Is it possible to manage the file stream *before* the lexer 
> handles it?

Yes. My solution to this involves extending ANTLRInputStream, and then
implementing the load() method to load the data and then process the
data[] array:

public class MyInputStream extends ANTLRInputStream {

   ... other methods ...

   public void load(Reader r, int sizem int readChunkSize) throws
IOException {
       super.load(r, size, readChunkSize);

       /* Now process data[0..n-1]. */
   }
}

The length of the data is stored in a field called 'n'. I find the
choice of name 'n' slightly annoying as I commonly use 'n' as a loop
iterator. Perhaps a better name could be used, 'dataLength'.

In any case, you can then pass an instance of your new class to the
constructor of your lexer. An alternative, which I was using previously,
was to process the stream on the fly before it is read by
ANTLRInputStream, e.g. extend InputStream. However, in my case, I found
it more efficient to use the apparach outlined above as I can operate on
the whole input in a single operation.


--
Sam Ellis, RVDK Team Leader,
Product Engineering Group,                 Tel: +44 (0) 1223 400516
System Design Division,                    Fax: +44 (0) 1223 400887
ARM Ltd., 110 Fulbourn Road,               skype:armsamellis
Cambridge, CB1 9NJ                         mailto:sam.ellis at arm.com

--
IMPORTANT NOTICE: The contents of this email and any attachments are
confidential and may also be privileged. If you are not the intended
recipient, please notify the sender immediately and do not disclose the
contents to any other person, use it for any purpose, or store or copy
the information in any medium.  Thank you.



From guillaume.chavanon at systemsvip.com  Mon Aug 20 02:44:39 2007
From: guillaume.chavanon at systemsvip.com (Guillaume Chavanon)
Date: Mon, 20 Aug 2007 11:44:39 +0200
Subject: [antlr-interest] Lexer rule match keyword or identifier depending
 on the previous token
Message-ID: <46C96287.70001@systemsvip.com>

Hi all,

I am writing a grammar for a language that allow some keywords to be 
identifiers if they are preceded by a special character.
Is it possible to add gated semantic predicate in a lexer rule that will 
test the previous token ?
I would like to do something like this :

IDENTIFIER
    : { previousToken != ... }?=> 'KEYWORD1' {$type=KEYWORD1;}
    | { previousToken != ... }?=> 'KEYWORD2' {$type=KEYWORD2;}
    | 'A'..'Z' ( '_'? ( 'A'..'Z' | '0'..'9' ) )*
    ;

Thanks in advance,
Guillaume Chavanon

From oouc at yahoo.com  Mon Aug 20 03:35:20 2007
From: oouc at yahoo.com (Oouc)
Date: Mon, 20 Aug 2007 03:35:20 -0700 (PDT)
Subject: [antlr-interest] Can anyone please give more examples for Java that
	has been translated to Python
In-Reply-To: <mailman.3677.1187599722.3040.antlr-interest@antlr.org>
Message-ID: <744617.33080.qm@web30812.mail.mud.yahoo.com>

If you have something that has been translated from Java to Python and 
would like to contribute to the free and open source body of translation 
knowledge then here is an opportunity to see your material published 
with credit given to you.

On September 20, 2007 http://www.pyconuk.org/news/  says.
"Translating Java to Python

Johnny Stovall is giving a talk on translating Java into Python code using
state of the art tools. He will explain the tools and show example output. The
ability to translate the many Java public domain programs into Python has great
potential benefit for education, social development and business. Any one who
has experienced Johnny's compulsive presentations will be looking forward to
this one.
"

All kinds of programs translated from source to source using any
technique will be considered.
You can showcase your product 
in this presentation.  Just send some sample Java source and how it has 
translated it into Python.  Some or all of it will be used and will be set up 
on a webpage with a link to http://www.semdesigns.com/ if you desire. 

If you want even more free advertisement then please attach step by step 
instructions showing how much easier it is to do this than with other
techniques and 
an overview or the whole process will be included in this one hour long talk 
that is presently scheduled to follow the extremely popular PyPy talk.

Cordially,
Oouc




From antlr at mirality.co.nz  Mon Aug 20 03:46:12 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 20 Aug 2007 22:46:12 +1200
Subject: [antlr-interest] Lexer rule match keyword or identifier
 depending on the previous token
In-Reply-To: <46C96287.70001@systemsvip.com>
References: <46C96287.70001@systemsvip.com>
Message-ID: <20070820104621.2B21211EA98@www.antlr.org>

At 21:44 20/08/2007, Guillaume Chavanon wrote:
 >I am writing a grammar for a language that allow some keywords 
to
 >be identifiers if they are preceded by a special character.
 >Is it possible to add gated semantic predicate in a lexer rule 
that
 >will test the previous token ?

Possibly, but wouldn't it be easier to match the special character 
and then say "anything after this must be an identifier"?


From antlr at mirality.co.nz  Mon Aug 20 04:02:51 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 20 Aug 2007 23:02:51 +1200
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.inte
	rnal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
Message-ID: <20070820110259.0586A11E9F1@www.antlr.org>

At 12:52 20/08/2007, Edwards, Waverly wrote:
>I'm a first time ANTLR user and I have some questions that I need 
>some assistanc with.
>I am replicating an existing procedural BASIC dialect language 
>compiler.  I actually have
>multiple issues to overcome but this is the first one.  The 
>language has *hundreds* of keywords.
>Many of the keywords are actually compound keywords
>
>Edit = numericVar
>Edit Field
>Edit Field Close
>Edit Menu
>Edit Text
>Compile Long If

For that case, my first cut attempt would be something along these 
lines (not sure if it'll compile without warnings, but I think 
it's close):

EDIT_FIELD
   : 'Edit'
       (WS
         ('Field'
           (WS 'Close' { $type = EDIT_FIELD_CLOSE; }
           | /*nothing -- EDIT_FIELD*/
           )
         | 'Menu' { $type = EDIT_MENU; }
         | 'Text' { $type = EDIT_TEXT; }
         )
       | /* nothing */ { $type = IDENTIFIER; }
       )
   ;

(Where WS is defined to exclude newlines, unless your language 
supports these multi-word keywords being broken across lines too.)

This is basically the "how you'd parse it by eye" 
approach.  (Though iIt'll be more complicated if you want to be 
case-insensitive as well...)

The last case I'm a little unsure about.  It's easy enough to 
handle 'Compile' as identifier vs. 'Compile Long' as keyword, but 
treating 'Compile Long If' as a keyword and 'Compile Long Foo' as 
three identifiers would be tricky, and would probably require 
emitting multiple tokens from a single lexer rule.  (It becomes 
easier again if you can treat some of these cases as illegal.)

>2.  Is it possible to deal with variable length keywords at the 
>lexer level.
>
>stringVar = Edit$( vNumParam )
>Edit$( vNumParam ) = stringVar

Possibly, but that seems more like a job for the parser.  At the 
parser level you can examine the surrounding context and then emit 
an EditStatement or EditFunction into the AST. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/d5a85eda/attachment.html 

From oouc at yahoo.com  Mon Aug 20 04:21:48 2007
From: oouc at yahoo.com (Oouc)
Date: Mon, 20 Aug 2007 04:21:48 -0700 (PDT)
Subject: [antlr-interest] Opportunity to link your good website,
	if you please send more examples for Java that has been translated
	to Python
In-Reply-To: <mailman.3677.1187599722.3040.antlr-interest@antlr.org>
Message-ID: <404913.40186.qm@web30807.mail.mud.yahoo.com>

Any information about example source or others who translate can be sent 
to oouc adsign DELETECAPS yahoo dot com and will be greatly appreciated.

Sorry, last post did not correctly reference where you showcase your work.
If you have something that has been translated from Java to Python and 
would like to contribute to the free and open source body of translation 
knowledge then here is an opportunity to see your material published 
with credit given to you.

On September 20, 2007 http://www.pyconuk.org/news/  says.
"Translating Java to Python

Johnny Stovall is giving a talk on translating Java into Python code using
state of the art tools. He will explain the tools and show example output. The
ability to translate the many Java public domain programs into Python has great
potential benefit for education, social development and business. Any one who
has experienced Johnny's compulsive presentations will be looking forward to
this one.
"

All kinds of programs translated from source to source using any
technique will be considered.  You can showcase your handcoding or product 
in this presentation.  Just send some sample Java source and how it has 
translated it into Python.  Some or all of it will be used and will be set up 
on a webpage with a link to 'YOURwebsite' if it is not promoting bad morals
or something we just feel we don't want to link to. 

If you want even more free advertisement then please attach step by step 
instructions showing how much easier or better it is to do this than with other
techniques and an overview of your process will be included in this one hour 
long talk that is presently scheduled to follow the extremely popular 
PyPy talk.

Cordially,
Oouc


From Waverly.Edwards at genesys.com  Mon Aug 20 06:21:30 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 09:21:30 -0400
Subject: [antlr-interest] Lexer rule match keyword or identifier
	depending on the previous token
In-Reply-To: <46C96287.70001@systemsvip.com>
References: <46C96287.70001@systemsvip.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3061@navamane001.ad.internal.corp>

 
Is this different that looking ahead?  If you are at token B and token A
determines
how your respond to token B then wouldn't this be the same as being at
token A, looking
ahead and seeing token B then responding the same way?  I don't know the
circumstance
so I don't really know.  I haven't figured out how the lookahead in
ANTLR works just yet 
but I know it exists.


W.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Guillaume
Chavanon
Sent: Monday, August 20, 2007 5:45 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Lexer rule match keyword or identifier
depending on the previous token

Hi all,

I am writing a grammar for a language that allow some keywords to be
identifiers if they are preceded by a special character.
Is it possible to add gated semantic predicate in a lexer rule that will
test the previous token ?
I would like to do something like this :

IDENTIFIER
    : { previousToken != ... }?=> 'KEYWORD1' {$type=KEYWORD1;}
    | { previousToken != ... }?=> 'KEYWORD2' {$type=KEYWORD2;}
    | 'A'..'Z' ( '_'? ( 'A'..'Z' | '0'..'9' ) )*
    ;

Thanks in advance,
Guillaume Chavanon

From Kevin.Braun at fnis.com  Mon Aug 20 06:45:24 2007
From: Kevin.Braun at fnis.com (Braun, Kevin T)
Date: Mon, 20 Aug 2007 08:45:24 -0500
Subject: [antlr-interest] Bug with predicates and DFAs?
In-Reply-To: <mailman.3304.1187426724.3040.antlr-interest@antlr.org>
References: <mailman.3304.1187426724.3040.antlr-interest@antlr.org>
Message-ID: <5A03163702DD0945A5DC1324E9FDDEF1787F7C@CMBFISLTC05.FNFIS.COM>

Ter,

Just to make sure I was clear, it is the input.LT(1).getText() part of
the predicate that causes a problem when hoisted, since the DFA is using
an IntStream and not a TokenStream.  Since you mention "function of
input symbols", I wasn't sure if I got my point across or not.
 
Thanks,
Kevin

Date: Fri, 17 Aug 2007 13:44:05 -0700
From: Terence Parr <parrt at cs.usfca.edu>
Subject: Re: [antlr-interest] Bug with predicates and DFAs? (ANTLR
	3.0)
To: antlr-interest Interest <antlr-interest at antlr.org>
Message-ID: <50B52412-A223-4E78-842B-69FC73FF909E at cs.usfca.edu>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed

Yes, predicates can be hoisted outside of their defining rule. You  
should assume that it is safe only to use expressions that are a  
function of input symbols or globally visible values such as fields  
and methods.
Ter


On Aug 17, 2007, at 11:02 AM, Braun, Kevin T wrote:

> Hi,
>
> I tried using this rule:
>
> keywordSet
>
>             :           {setCanBeId && input.LT(1).getText().equals 
> ("set")}? IDENT;
>
>
>
> in order to allow "set" to appear either as a keyword or as an  
> identifier.  The rule where keywordSet is used ends up being  
> involved in an LL(*) decision.  In the generated parser, the code  
> in the DFA has a method specialStateTransition declared as:
>
> public int specialStateTransition(int s, IntStream input) throws  
> NoViableAltException
>
>
>
> The predicate from keywordSet ends up in this  
> specialStateTransition method (I guess that's the predicate  
> hoisting), but this results in invalid code: inside this method,  
> input is an IntStream and IntStream.LT() returns an int, not a  
> token object.  That makes input.LT(1).getText() invalid.
>
>
>
> Regards,
>
> Kevin
>
>

From Waverly.Edwards at genesys.com  Mon Aug 20 06:56:02 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 09:56:02 -0400
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <NACODENE001r7Fopsbz0001ae2e@denmailNA.genesys.com>
References: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
	<NACODENE001r7Fopsbz0001ae2e@denmailNA.genesys.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA307C@navamane001.ad.internal.corp>

 
Actually Edit = numericVar is a case where Edit is also a reserved word,
it just performs another function but I starting to understand how this
works now.
"Compile Long If" is only one of roughly 60 three token keywords.  I
don't know how many two token keyword there are.
 
>It's easy enough to handle 'Compile' as identifier vs. 'Compile Long'
as keyword, but...
 
Fortunately for me,  'Compile Long' is not legal so I can throw some of
those cases out.
 
>>Possibly, but that seems more like a job for the parser.  At the
parser level you can examine the surrounding context and then emit an
EditStatement or >>EditFunction into the AST. 
 
I will study this all very carefully.
 
 
Thank you,
 
 
W.
 

________________________________

From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Monday, August 20, 2007 7:03 AM
To: Edwards, Waverly; antlr
Subject: Re: [antlr-interest] lexer: compound keywords with a twist


At 12:52 20/08/2007, Edwards, Waverly wrote:


	I'm a first time ANTLR user and I have some questions that I
need some assistanc with. 
	I am replicating an existing procedural BASIC dialect language
compiler.  I actually have 
	multiple issues to overcome but this is the first one.  The
language has *hundreds* of keywords. 
	Many of the keywords are actually compound keywords 
	
	Edit = numericVar 
	Edit Field 
	Edit Field Close 
	Edit Menu 
	Edit Text 
	Compile Long If 


For that case, my first cut attempt would be something along these lines
(not sure if it'll compile without warnings, but I think it's close):

EDIT_FIELD
  : 'Edit'
      (WS
        ('Field'
          (WS 'Close' { $type = EDIT_FIELD_CLOSE; }
          | /*nothing -- EDIT_FIELD*/
          )
        | 'Menu' { $type = EDIT_MENU; }
        | 'Text' { $type = EDIT_TEXT; }
        )
      | /* nothing */ { $type = IDENTIFIER; }
      )
  ;

(Where WS is defined to exclude newlines, unless your language supports
these multi-word keywords being broken across lines too.)

This is basically the "how you'd parse it by eye" approach.  (Though
iIt'll be more complicated if you want to be case-insensitive as
well...)

The last case I'm a little unsure about.  It's easy enough to handle
'Compile' as identifier vs. 'Compile Long' as keyword, but treating
'Compile Long If' as a keyword and 'Compile Long Foo' as three
identifiers would be tricky, and would probably require emitting
multiple tokens from a single lexer rule.  (It becomes easier again if
you can treat some of these cases as illegal.)



	2.  Is it possible to deal with variable length keywords at the
lexer level. 
	
	stringVar = Edit$( vNumParam ) 
	Edit$( vNumParam ) = stringVar 


Possibly, but that seems more like a job for the parser.  At the parser
level you can examine the surrounding context and then emit an
EditStatement or EditFunction into the AST. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/e37bf2fa/attachment.html 

From jimi at temporal-wave.com  Mon Aug 20 07:57:56 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 20 Aug 2007 07:57:56 -0700
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
Message-ID: <051466DAA0D608439E196797955018D7023624@wavemachine.temporal-wave.com>

It sounds like you are falling in to the trap of trying to do too much
with the lexer. Valid combinations of keywords should be specified in
the parser rules basically, and the lexer should just pick out words
from the input stream and tokenize them. This includes making '$' a
token and specifying that the edit keyword followed by $ is a valid
atomic expression in the 'last' rule of your expression handler. You can
crib expression handling from say the Java or X example grammars (pick
whichever language seems closest to expressions in your language and
just cull out the bits you don't need/support.

 

It looks like you may need case insensitivity, so override the LA
function in the input (as per wiki article) to make it return UPPER CASE
only  (the lexer will then match any case for tokens but return the
original text for the token if asked.

 

So, this will give you something like:

 

statement

                : assignment

                | edit_stuff

                ;

 

assignment

                : var_keyw OPEQ expr

                ;

 

edit_stuff

                : EDIT FIELD

                                statsforthat

                  EDIT FIELD CLOSE

                | EDIT MENU ... etc

                ;

 

var_keyw

                : ID

                | EDIT

                ;

 

expr       : ....

 

atom

                : func_keyw DOLLAR LPAREN expr_list* RPAREN

                | ...

 

EDIT       : 'EDIT' ;

FIELD     : 'FIELD' ;

TEXT      : 'TEXT' ;

DOLLAS                : '$' ;

 

Etc.

 

In other words, if it isn't obvious how to deal with things in the
lexer, then you are likely trying to build a context sensitive lexer,
which USUALLY means that you need to construct the rules in the parser.

 

The parser will USUALLY not try to verify things semantically, so for
instance it might accept anything that looks like a function reference,
ten when it has said that this is valid syntactically, it may pass on a
tree to a tree walker that works out if the function has been declared,
is a valid intrinsic and so on and reject things that are semantically
invalid even though they look fine syntactically.

 

Hope that helps.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Sunday, August 19, 2007 5:52 PM
To: antlr
Subject: [antlr-interest] lexer: compound keywords with a twist

 

 

Hello, 

I'm a first time ANTLR user and I have some questions that I need some
assistanc with. 
I am replicating an existing procedural BASIC dialect language compiler.
I actually have 
multiple issues to overcome but this is the first one.  The language has
*hundreds* of keywords. 
Many of the keywords are actually compound keywords 

Edit = numericVar 
Edit Field 
Edit Field Close 
Edit Menu 
Edit Text 
Compile Long If 

 

1.  How would you define compound keywords?  The keyword "Edit" has 5
different starts 
and the longest usage is a combination of three words 

 

2.  Is it possible to deal with variable length keywords at the lexer
level. 

stringVar = Edit$( vNumParam ) 
Edit$( vNumParam ) = stringVar 

I have two instances where Edit$ ( different from Edit ) can be used.
One as a function 
and the other a procedure.  If Edit$ is on the left side of a variable
it's a procedure and 
if on the right it's a function.  The perform different tasks.  Is there
a way at the lexer 
level that I can pass the parser something like EditStatement vs
EditFunction depending 
on what the lexer sees first. 

Thank you, 

 

W. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/a13f277a/attachment-0001.html 

From Waverly.Edwards at genesys.com  Mon Aug 20 08:28:29 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 20 Aug 2007 11:28:29 -0400
Subject: [antlr-interest] lexer: compound keywords with a twist
In-Reply-To: <051466DAA0D608439E196797955018D7023624@wavemachine.temporal-wave.com>
References: <FF993752CB890B4EB591BE5450C37BF1AA3028@navamane001.ad.internal.corp>
	<051466DAA0D608439E196797955018D7023624@wavemachine.temporal-wave.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA30BA@navamane001.ad.internal.corp>

>> In other words, if it isn't obvious how to deal with things in the
lexer, then you are likely trying to build a context sensitive lexer, 
>> which USUALLY means that you need to construct the rules in the
parser.


Wow, another way to look at it.  Looks I'll be putting together
something much sooner than I thought.

I will study well.

 

Thank you,

 

W.


________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Monday, August 20, 2007 10:58 AM
To: antlr
Subject: Re: [antlr-interest] lexer: compound keywords with a twist



It sounds like you are falling in to the trap of trying to do too much
with the lexer. Valid combinations of keywords should be specified in
the parser rules basically, and the lexer should just pick out words
from the input stream and tokenize them. This includes making '$' a
token and specifying that the edit keyword followed by $ is a valid
atomic expression in the 'last' rule of your expression handler. You can
crib expression handling from say the Java or X example grammars (pick
whichever language seems closest to expressions in your language and
just cull out the bits you don't need/support.

 

It looks like you may need case insensitivity, so override the LA
function in the input (as per wiki article) to make it return UPPER CASE
only  (the lexer will then match any case for tokens but return the
original text for the token if asked.

 

So, this will give you something like:

 

statement

                : assignment

                | edit_stuff

                ;

 

assignment

                : var_keyw OPEQ expr

                ;

 

edit_stuff

                : EDIT FIELD

                                statsforthat

                  EDIT FIELD CLOSE

                | EDIT MENU ... etc

                ;

 

var_keyw

                : ID

                | EDIT

                ;

 

expr       : ....

 

atom

                : func_keyw DOLLAR LPAREN expr_list* RPAREN

                | ...

 

EDIT       : 'EDIT' ;

FIELD     : 'FIELD' ;

TEXT      : 'TEXT' ;

DOLLAS                : '$' ;

 

Etc.

 

In other words, if it isn't obvious how to deal with things in the
lexer, then you are likely trying to build a context sensitive lexer,
which USUALLY means that you need to construct the rules in the parser.

 

The parser will USUALLY not try to verify things semantically, so for
instance it might accept anything that looks like a function reference,
ten when it has said that this is valid syntactically, it may pass on a
tree to a tree walker that works out if the function has been declared,
is a valid intrinsic and so on and reject things that are semantically
invalid even though they look fine syntactically.

 

Hope that helps.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Sunday, August 19, 2007 5:52 PM
To: antlr
Subject: [antlr-interest] lexer: compound keywords with a twist

 

 

Hello, 

I'm a first time ANTLR user and I have some questions that I need some
assistanc with. 
I am replicating an existing procedural BASIC dialect language compiler.
I actually have 
multiple issues to overcome but this is the first one.  The language has
*hundreds* of keywords. 
Many of the keywords are actually compound keywords 

Edit = numericVar 
Edit Field 
Edit Field Close 
Edit Menu 
Edit Text 
Compile Long If 

 

1.  How would you define compound keywords?  The keyword "Edit" has 5
different starts 
and the longest usage is a combination of three words 

 

2.  Is it possible to deal with variable length keywords at the lexer
level. 

stringVar = Edit$( vNumParam ) 
Edit$( vNumParam ) = stringVar 

I have two instances where Edit$ ( different from Edit ) can be used.
One as a function 
and the other a procedure.  If Edit$ is on the left side of a variable
it's a procedure and 
if on the right it's a function.  The perform different tasks.  Is there
a way at the lexer 
level that I can pass the parser something like EditStatement vs
EditFunction depending 
on what the lexer sees first. 

Thank you, 

 

W. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/8921bde1/attachment.html 

From john.ridgway at trincoll.edu  Mon Aug 20 09:03:08 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Mon, 20 Aug 2007 12:03:08 -0400
Subject: [antlr-interest] libantlr3c version
Message-ID: <09C8D3A0-E57A-43F4-B0F9-C76B3454F33B@trincoll.edu>

Friends -
Is there a good reason why the Antlr 3 C runtime library is built  
with the -avoid-version flag?  I'm trying to build a Fink package  
description for it, and Fink wants the version information in the  
library.  If there's a good reason then I'll document it and leave it  
alone.  If there's no good reason is there a chance that it will get  
changed?  What would the appropriate versioning information be --  
since I can patch things for the Fink installation.

For those who don't know -- Fink provides an easy way to install a  
lot of useful software on MacOS X boxes, but it needs appropriate  
packaging information.

Peace
- John


From ryan at darksleep.com  Mon Aug 20 10:26:16 2007
From: ryan at darksleep.com (Ryan Daum)
Date: Mon, 20 Aug 2007 13:26:16 -0400
Subject: [antlr-interest] Stuck
Message-ID: <1187630776.13163.5.camel@teak>

Hi all,

I'm writing a fairly simple grammar for the following protocol:

http://www.belfry.com/fuzzball/trebuchet/mcp.html

However, I'm stuck on a problem at the lexer level that I can't seem to
solve.  I believe it's my final issue before I have a working parser.

Basically, I have a number of rules which can match a combination of
characters:

        fragment
        LINE 	:	(LINE_CHAR)* EOF;
        IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON |
        OTHER_CHAR))* ;
        
        
        UNQUOTED_STRING 
        	:	SIMPLE_CHAR+;
        
        QUOTED_STRING 
        	:	'"' (SIMPLE_CHAR | SPACE | '\\' QUOTE_CHAR | COLON | STAR)*
        '"';
        
This is all fine, individually they work well.  However, in the rule: 

        messageContinue
          	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE 
          		-> ^(MESSAGE_CONTINUE datatag LINE);

Working against the following line:

        * 9b76 text: This is some sample text.

I always get a MismatchedTokenException because the parser seems to want
to turn everything after SPACE into an IDENT, rather than a line.  The
intention of "LINE" is just to collect all input after the SPACE in a
messageContinue; I do not want the rest of the lexer's rules to apply at
all.  

I'm not that adapt with this stuff, but I haven't had many problems
until now.  Can anybody help me with this?  Is this a token precedence
problem?  Is this even possible with Antlr v3?  I've attached the entire
grammar, which works inside AntlrWorks.  The test failure can be
replicated with the example line above.

Ryan

-------------- next part --------------
grammar Mcp;

options {
output=AST;
backtrack=true;
memoize=true;
backtrack=true;
filter=true;
}

tokens {
MESSAGE_START;
MESSAGE_CONTINUE;
MESSAGE_END;
KEY_VALUES;
KEY;
CONTINUE_KEY;
}

@header {
package com.thimbleware.cometMoo;
}

@lexer::header {
package com.thimbleware.cometMoo;
}


// Tree grammar

// Grammar

message        :	(messageStart  | messageContinue | messageEnd) ;
messageStart
	:	IDENT SPACE authKey keyVals? EOF -> ^(MESSAGE_START authKey keyVals?)
;

messageContinue
  	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE 
  		-> ^(MESSAGE_CONTINUE datatag LINE);

	
messageEnd	:	COLON SPACE datatag EOF;


authKey	:	UNQUOTED_STRING;
datatag	:	UNQUOTED_STRING;
keyVals	:	(SPACE keyval)+ -> ^(KEY_VALUES keyval+);
keyval	:	key !(COLON) !(SPACE) value ;

value	:	(UNQUOTED_STRING | QUOTED_STRING | IDENT)
	;


key	:	regularKey | continueKey;

regularKey
	:	IDENT -> ^(KEY IDENT);
continueKey
	:	IDENT STAR -> ^(CONTINUE_KEY IDENT);
	


// Lexer

fragment
LINE 	:	(LINE_CHAR)* EOF;
IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON | OTHER_CHAR))* ;



UNQUOTED_STRING 
	:	SIMPLE_CHAR+;
	
QUOTED_STRING 
	:	'"' (SIMPLE_CHAR | SPACE | '\\' QUOTE_CHAR | COLON | STAR)* '"';


SPACE 	:	' ';

fragment
QUOTE_CHAR
	:	('"' | '\\');

fragment
SIMPLE_CHAR
	:	ALPHA | DIGIT | OTHER_CHAR;

fragment
OTHER_CHAR
	:	'-' | '~' | '`' | '!' | '@' |  '$' | '%' | '^'
        | '&' | '(' | ')' | '=' | '+' | '{' | '}' | '[' | ']' | '|' 
        | '\'' | ';' | '?' | '/' | '>' | '<' | '.' | ',' | '#'
	;

fragment
LINE_CHAR
	:	SIMPLE_CHAR | QUOTE_CHAR | SPACE | COLON | STAR;
	
STAR	:	'*';

fragment
ALPHA
	:	('A'..'Z'
	|	'a'..'z'
	|	'_')
	;
	



DIGIT	:	'0'..'9'
		;
		

COLON
	:	':'
	;


From andreas.bartho at inf.tu-dresden.de  Mon Aug 20 11:00:26 2007
From: andreas.bartho at inf.tu-dresden.de (Andreas Bartho)
Date: Mon, 20 Aug 2007 20:00:26 +0200
Subject: [antlr-interest] Problems overriding lookahead
Message-ID: <46C9D6BA.2060400@inf.tu-dresden.de>

Hi,

as far as I know it is allowed to set the k option on a per-rule basis.
I'm currently dealing with a huge grammar (C#) for which I cannot use
LL(*). (Parser creation takes ages, I cancelled it after 30 minutes or
so). Using k=2 the parser creation takes only 2 minutes or so.

There are, however, some nasty rules that require LL(*).

I would like to override k for those rules, but I don't get it to work.
I made a test grammar that contain only the LL(*) rules, the resulting
compiler works as it should. Then, as a test I tried to set global k=2
and for each rule k=*.

The resulting parser behaves differently, but still not the same as if
k=* was set globally. This little example illustrates the point:

grammar csharpstatement_snip;
options {output=AST; k=2; backtrack=true;}


expr
options {k=*;}
	:	expra
	|	exprb
	;
	

expra
options {k=*;}
	:	rec '(' ')'
	;

exprb
options {k=*;}
	:	rec '++'
	;

//rule has originally been introduced to remove left recursion
//therefore name rec
rec
options {k=*;}
	: ( '(' ')' | '++' )*
	;

The resulting parser returns for input "()" the following error message:
recoverFromMismatchedToken
BR.recoverFromMismatchedToken
line 0:-1 mismatched input '<EOF>' expecting '('

When the rule options are removed, the following error message appears:

recoverFromMismatchedToken
BR.recoverFromMismatchedToken
line 0:-1 mismatched input '<EOF>' expecting '++'

The parse trees shown by ANTLRWorks are also quite different from each
other.

Setting k=* in the global options works fine

What is my mistake here?

Andreas




From jbb at acm.org  Mon Aug 20 11:07:36 2007
From: jbb at acm.org (John B. Brodie)
Date: Mon, 20 Aug 2007 14:07:36 -0400
Subject: [antlr-interest] Stuck
In-Reply-To: <1187630776.13163.5.camel@teak> (message from Ryan Daum on Mon,
	20 Aug 2007 13:26:16 -0400)
References: <1187630776.13163.5.camel@teak>
Message-ID: <E1INBf6-0002d5-Gl@gecko.home.org>

Ryan Daum asked (in part):
>Hi all,

Greetings!

>I'm writing a fairly simple grammar for the following protocol:
>
>http://www.belfry.com/fuzzball/trebuchet/mcp.html
>
>However, I'm stuck on a problem at the lexer level that I can't seem to
>solve.  I believe it's my final issue before I have a working parser.
>
>Basically, I have a number of rules which can match a combination of
>characters:
>
>        fragment
>        LINE 	:	(LINE_CHAR)* EOF;
>        IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON |
>        OTHER_CHAR))* ;

...snipped...        

>This is all fine, individually they work well.  However, in the rule: 
>
>        messageContinue
>          	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE 
>          		-> ^(MESSAGE_CONTINUE datatag LINE);
>
>Working against the following line:
>
>        * 9b76 text: This is some sample text.
>
>I always get a MismatchedTokenException because the parser seems to want
>to turn everything after SPACE into an IDENT, rather than a line.  The
>intention of "LINE" is just to collect all input after the SPACE in a
>messageContinue; I do not want the rest of the lexer's rules to apply at
>all.  
>

I have not really looked too much at your grammar...

But right off I see that LINE is a fragment. This means that the
Parser will never see a LINE token.

Could that be your problem?

HTH
   -jbb

From ryan at darksleep.com  Mon Aug 20 11:19:18 2007
From: ryan at darksleep.com (Ryan Daum)
Date: Mon, 20 Aug 2007 14:19:18 -0400
Subject: [antlr-interest] Stuck
In-Reply-To: <E1INBf6-0002d5-Gl@gecko.home.org>
References: <1187630776.13163.5.camel@teak> <E1INBf6-0002d5-Gl@gecko.home.org>
Message-ID: <1187633958.13163.8.camel@teak>

Thanks John... However, when I remove the 'fragment' qualifier, it
doesn't help :-(

Ryan

On Mon, 2007-20-08 at 14:07 -0400, John B. Brodie wrote:
> Ryan Daum asked (in part):
> >Hi all,
> 
> Greetings!
> 
> >I'm writing a fairly simple grammar for the following protocol:
> >
> >http://www.belfry.com/fuzzball/trebuchet/mcp.html
> >
> >However, I'm stuck on a problem at the lexer level that I can't seem to
> >solve.  I believe it's my final issue before I have a working parser.
> >
> >Basically, I have a number of rules which can match a combination of
> >characters:
> >
> >        fragment
> >        LINE 	:	(LINE_CHAR)* EOF;
> >        IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON |
> >        OTHER_CHAR))* ;
> 
> ...snipped...        
> 
> >This is all fine, individually they work well.  However, in the rule: 
> >
> >        messageContinue
> >          	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE 
> >          		-> ^(MESSAGE_CONTINUE datatag LINE);
> >
> >Working against the following line:
> >
> >        * 9b76 text: This is some sample text.
> >
> >I always get a MismatchedTokenException because the parser seems to want
> >to turn everything after SPACE into an IDENT, rather than a line.  The
> >intention of "LINE" is just to collect all input after the SPACE in a
> >messageContinue; I do not want the rest of the lexer's rules to apply at
> >all.  
> >
> 
> I have not really looked too much at your grammar...
> 
> But right off I see that LINE is a fragment. This means that the
> Parser will never see a LINE token.
> 
> Could that be your problem?
> 
> HTH
>    -jbb
> 


From jimi at temporal-wave.com  Mon Aug 20 11:22:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 20 Aug 2007 11:22:09 -0700
Subject: [antlr-interest] libantlr3c version
In-Reply-To: <09C8D3A0-E57A-43F4-B0F9-C76B3454F33B@trincoll.edu>
References: <09C8D3A0-E57A-43F4-B0F9-C76B3454F33B@trincoll.edu>
Message-ID: <051466DAA0D608439E196797955018D702362D@wavemachine.temporal-wave.com>

Personally I prefer the versioning, however I had a lot of complaints
that people were trying to use the versioned shared libraries with
packages and systems that could not support it, hence I took it out. It
seems that not having versioned libraries is less of a problem for
people than having versioned libraries - though I suspect that in many
cases this is actually a lack of understanding. If I ever get time to
document what to do with versioned libraries then I might go back to
them.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John Ridgway
> Sent: Monday, August 20, 2007 9:03 AM
> To: antlr-interest
> Cc: John Ridgway
> Subject: [antlr-interest] libantlr3c version
> 
> Friends -
> Is there a good reason why the Antlr 3 C runtime library is built
> with the -avoid-version flag?  I'm trying to build a Fink package
> description for it, and Fink wants the version information in the
> library.  If there's a good reason then I'll document it and leave it
> alone.  If there's no good reason is there a chance that it will get
> changed?  What would the appropriate versioning information be --
> since I can patch things for the Fink installation.
> 
> For those who don't know -- Fink provides an easy way to install a
> lot of useful software on MacOS X boxes, but it needs appropriate
> packaging information.
> 
> Peace
> - John


From jimi at temporal-wave.com  Mon Aug 20 11:29:45 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 20 Aug 2007 11:29:45 -0700
Subject: [antlr-interest] Stuck
In-Reply-To: <E1INBf6-0002d5-Gl@gecko.home.org>
References: <1187630776.13163.5.camel@teak> <E1INBf6-0002d5-Gl@gecko.home.org>
Message-ID: <051466DAA0D608439E196797955018D702362E@wavemachine.temporal-wave.com>

You are trying to make your lexer context sensitive. If this must be
done in the lexer, then you will have to keep a flag to say that it is
time to return LINE, which will match everything up to the end of file
(are you sure you mean end of file?)

However, assuming that you really man end of file, then just get rid of
LINE and match .+ EOF in the parser:

messageContinue
    	:	STAR SPACE datatag SPACE IDENT COLON SPACE line=toEof
			-> ^(MESSAGE_CONTINUE datatag $line)
	;

toEof : .+ EOF;

Or some similar variant.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John B. Brodie
> Sent: Monday, August 20, 2007 11:08 AM
> To: Ryan Daum
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Stuck
> 
> Ryan Daum asked (in part):
> >Hi all,
> 
> Greetings!
> 
> >I'm writing a fairly simple grammar for the following protocol:
> >
> >http://www.belfry.com/fuzzball/trebuchet/mcp.html
> >
> >However, I'm stuck on a problem at the lexer level that I can't seem
> to
> >solve.  I believe it's my final issue before I have a working parser.
> >
> >Basically, I have a number of rules which can match a combination of
> >characters:
> >
> >        fragment
> >        LINE 	:	(LINE_CHAR)* EOF;
> >        IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON |
> >        OTHER_CHAR))* ;
> 
> ...snipped...
> 
> >This is all fine, individually they work well.  However, in the rule:
> >
> >        messageContinue
> >          	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE
> >          		-> ^(MESSAGE_CONTINUE datatag LINE);
> >
> >Working against the following line:
> >
> >        * 9b76 text: This is some sample text.
> >
> >I always get a MismatchedTokenException because the parser seems to
> want
> >to turn everything after SPACE into an IDENT, rather than a line.
The
> >intention of "LINE" is just to collect all input after the SPACE in a
> >messageContinue; I do not want the rest of the lexer's rules to apply
> at
> >all.
> >
> 
> I have not really looked too much at your grammar...
> 
> But right off I see that LINE is a fragment. This means that the
> Parser will never see a LINE token.
> 
> Could that be your problem?
> 
> HTH
>    -jbb

From leonsu at msn.com  Mon Aug 20 12:05:40 2007
From: leonsu at msn.com (Leon Su)
Date: Mon, 20 Aug 2007 12:05:40 -0700
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing /
 gUnit grammar updated
In-Reply-To: <91dd9a4f0708180145p235fce23t69ae62ae358a47e8@mail.gmail.com>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<91dd9a4f0708161601j6b86a176l931667becd4da44f@mail.gmail.com>
	<BAY104-W1DBB4CDF75A1BBC8178BCCBD90@phx.gbl> 
	<91dd9a4f0708180145p235fce23t69ae62ae358a47e8@mail.gmail.com>
Message-ID: <BAY104-W25E38D865B92F39D82B81ECBDB0@phx.gbl>

Hi,
please download the new version of gUnit on wiki first, then try this new syntax of gUnit: (the following script is based on your testsuite)

gunit On;
@header{xy.object.notation;}
your testsuites...

Now, it should work on the grammar using package :)

Leon
Date: Sat, 18 Aug 2007 16:45:21 +0800
From: fyaoxy at gmail.com
To: leonsu at msn.com; antlr-interest at antlr.org
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing

Hi,
I change gUnit.g heading grammar as follows:

gUnitDef:    'gunit' g1=target
    {interpreter.grammarName = $g1.text;} 
    (
    'walks' g2=target
    {interpreter.grammarName =  $g2.text;}

    )? ';' 
        header? suite+ ;
target    :    ID EXT*; //TODO: make a choid between lexer and parser.

and in my target grammar:

grammar On;
@header{package xy.object.notation;}

@lexer::header{package xy.object.notation;}

and my grammar gUnit testsuite:

gunit xy.object.notation.On;

It works fine.
But there is question I not sure, that is just that TODO:
target    :    ID EXT*; //TODO: make a choid between lexer and parser.

I not sure which way is the best.



2007/8/18, Leon Su <leonsu at msn.com>:




Hi,

Thanks for your trying and the suggestions. 
I'll consider your points for improving the tool :)

Leon
Date: Fri, 17 Aug 2007 07:01:57 +0800

From: fyaoxy at gmail.com
To: 
antlr-interest at antlr.org
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing

Wawo, so great!  gunit so pretty!
I tried, all passed. it make me happy.


gunit On;

words:
"h" OK
"hello" OK
"hello " OK
"hello world" OK
"hello world " OK

"hello world     " OK
" hello world " OK
"hello " -> "hello"
"hello world" -> "hello world"
"hello world    " -> "hello world"

"    hello world    " -> "hello world"

name:
"hello,world" OK
"hello,world" ->"(NAME (TSTRING hello) (TSTRING world))"
" hello ,    world " ->"(NAME (TSTRING hello) (TSTRING world))"


<<" hello
world ">> -><<(NAME (TSTRING  hello
world ))>>

though my last test infinite loop:)

And I have idea: 
I
use package name in my grammar, current gunit just take grammar name.
so do a hard code in it, I would like to deep into this tool.

I wanna enhance testcase with additional message, like I do before:
/*string test*/
//valid single test
a
1
\n
word
??
//invalid single test
,
"

{
}
:
//valid multiple test

a aaaa
123 abc
123 abc 
//quoted test
"abc1"

seems "input ouput" triple can be done "message input output" or "input output message"
even:
group message{

test 
test
}

Thank you again:)


2007/8/16, Terence Parr <parrt at cs.usfca.edu
>:
Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
year.  He inspired me to build one for ANTLR.  Fortunately, I found a
very capable graduate student, Leon Su, that was able to implement it

this summer.  Here is the wiki with code attached. :)

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing



Please direct feedback to the group and/or Leon so we can improve
it.  I think you'll find it is a very nice tool.  Has both
interpreted and gUnit->jUnit code gen modes. :)

Terence




-- 
??
???



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/7c6d5ab9/attachment.html 

From james at mansionfamily.plus.com  Mon Aug 20 12:57:43 2007
From: james at mansionfamily.plus.com (James Mansion)
Date: Mon, 20 Aug 2007 20:57:43 +0100
Subject: [antlr-interest] AST manipulation
Message-ID: <46C9F237.3070906@mansionfamily.plus.com>

I have the book and its very hot on the template output - but I'd like 
to write some passes
over the AST that manipulate its structure in-place, changing some node 
types, creatiing
new nodes, and generally swizzling things around.

Are there any examples of tree parsers that do this - or is that the 
wrong approach?

James


From kroepke at classdump.org  Mon Aug 20 13:01:26 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Aug 2007 22:01:26 +0200
Subject: [antlr-interest] Bug with predicates and DFAs?
In-Reply-To: <5A03163702DD0945A5DC1324E9FDDEF1787F7C@CMBFISLTC05.FNFIS.COM>
References: <mailman.3304.1187426724.3040.antlr-interest@antlr.org>
	<5A03163702DD0945A5DC1324E9FDDEF1787F7C@CMBFISLTC05.FNFIS.COM>
Message-ID: <0CDCC43B-472F-4EB1-9C3C-4C5999C86368@classdump.org>

Hi!

On Aug 20, 2007, at 3:45 PM, Braun, Kevin T wrote:

> Just to make sure I was clear, it is the input.LT(1).getText() part of
> the predicate that causes a problem when hoisted, since the DFA is  
> using
> an IntStream and not a TokenStream.  Since you mention "function of
> input symbols", I wasn't sure if I got my point across or not.

you should be able to cast it to TokenStream, actually. if you are in  
a parser
then the stream would always be implementing TokenStream, so it should
be safe, too.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Mon Aug 20 13:04:21 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 20 Aug 2007 22:04:21 +0200
Subject: [antlr-interest] AST manipulation
In-Reply-To: <46C9F237.3070906@mansionfamily.plus.com>
References: <46C9F237.3070906@mansionfamily.plus.com>
Message-ID: <09D6ECCC-89B0-4176-BB03-D26D6E284D5F@classdump.org>

Hi!

On Aug 20, 2007, at 9:57 PM, James Mansion wrote:

> I have the book and its very hot on the template output - but I'd  
> like to write some passes
> over the AST that manipulate its structure in-place, changing some  
> node types, creatiing
> new nodes, and generally swizzling things around.
>
> Are there any examples of tree parsers that do this - or is that  
> the wrong approach?

That feature is forthcoming in the next ANTLR release (3.1). Ter has  
just pushed his
development branch to the main line and the target developers are now  
integrating his
changes for the different targets.

I think there's something in the wiki for that matter, but I'm not sure.

For now I think you can only build new trees or use custom actions to  
manipulate the
tree. Though that will probably cause trouble right now (as the tree  
parser will probably
be very confused by the changes).

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From atif.azad at hotmail.com  Mon Aug 20 13:33:54 2007
From: atif.azad at hotmail.com (atif azad)
Date: Tue, 21 Aug 2007 01:33:54 +0500
Subject: [antlr-interest] Getting Unexpected token @ as errors building
	examples
Message-ID: <BLU105-F22801EA91CE4447ADA3D3DE5DB0@phx.gbl>


Dears friends
I am a masters student and  I need little help .
When i try to run the examples from the antlr.org website i get the 
following  errors while running the java example SimpleC.g grammer
Although my class path contains all the jars from version 2.7.7 and version 
3 also. I am listing the errors here when i run the command

java antlr.Tool SimpleC.g




ANTLR Parser Generator   Version 2.7.7 (20070812)   1989-2005
SimpleC.g:1:1: unexpected token: grammar
error: Token stream error reading grammar(s):
SimpleC.g:33:1: unexpected char: '@'
SimpleC.g:1:1: rule grammar trapped:
SimpleC.g:1:1: unexpected token: grammar
TokenStreamException: unexpected char: '@'



I will be greatful if some one helps me.

here is the  grammer file I am running

grammar SimpleC;

program
    :   declaration+
    ;

/** In this rule, the functionHeader left prefix on the last two
*  alternatives is not LL(k) for a fixed k.  However, it is
*  LL(*).  The LL(*) algorithm simply scans ahead until it sees
*  either the ';' or the '{' of the block and then it picks
*  the appropriate alternative.  Lookhead can be arbitrarily
*  long in theory, but is <=10 in most cases.  Works great.
*  Use ANTLRWorks to see the lookahead use (step by Location)
*  and look for blue tokens in the input window pane. :)
*/
declaration
    :   variable
    |   functionHeader ';'
	{System.out.println($functionHeader.name+" is a declaration");}
    |   functionHeader block
	{System.out.println($functionHeader.name+" is a definition");}
    ;

variable
    :   type declarator ';'
    ;

declarator
    :   ID
    ;

functionHeader returns [String name]
@init {
    name=null; // for now you must init here rather than in 'returns'
}
    :   type ID '(' ( formalParameter ( ',' formalParameter )* )? ')'
	{$name = $ID.text;}
    ;

formalParameter
    :   type declarator
    ;

type
    :   'int'
    |   'char'
    |   'void'
    |   ID
    ;

block
    :   '{'
            variable*
            stat*
        '}'
    ;

stat: forStat
    | expr ';'
    | block
    | assignStat ';'
    | ';'
    ;

forStat
    :   'for' '(' assignStat ';' expr ';' assignStat ')' block
    ;

assignStat
    :   ID '=' expr
    ;

expr:   condExpr
    ;

condExpr
    :   aexpr ( ('==' | '<') aexpr )?
    ;

aexpr
    :   atom ( '+' atom )*
    ;

atom
    : ID
    | INT
    | '(' expr ')'
    ;

ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;

INT :	('0'..'9')+
    ;

WS  :   (   ' '
        |   '\t'
        |   '\r'
        |   '\n'
        )+
        { $channel=HIDDEN; }
    ;



Regards
Atif Azad

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From antlr at mirality.co.nz  Mon Aug 20 13:48:44 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 21 Aug 2007 08:48:44 +1200
Subject: [antlr-interest] Getting Unexpected token @ as errors building
 examples
In-Reply-To: <BLU105-F22801EA91CE4447ADA3D3DE5DB0@phx.gbl>
References: <BLU105-F22801EA91CE4447ADA3D3DE5DB0@phx.gbl>
Message-ID: <20070820204856.1BF6E11EAF7@www.antlr.org>

At 08:33 21/08/2007, atif azad wrote:
 >Although my class path contains all the jars from version 2.7.7 
and
 >version 3 also. I am listing the errors here when i run the 
command
 >
 >java antlr.Tool SimpleC.g
 >
 >
 >
 >
 >ANTLR Parser Generator   Version 2.7.7 (20070812)   1989-2005
 >SimpleC.g:1:1: unexpected token: grammar
[...]

Well, you're running the 2.7.7 ANTLR compiler, not the 3.0 
compiler.  You need to use "org.antlr.Tool" on the command line, 
not "antlr.Tool".


From ryan at darksleep.com  Mon Aug 20 14:01:10 2007
From: ryan at darksleep.com (Ryan Daum)
Date: Mon, 20 Aug 2007 17:01:10 -0400
Subject: [antlr-interest] Stuck
In-Reply-To: <051466DAA0D608439E196797955018D702362E@wavemachine.temporal-wave.com>
References: <1187630776.13163.5.camel@teak> <E1INBf6-0002d5-Gl@gecko.home.org>
	<051466DAA0D608439E196797955018D702362E@wavemachine.temporal-wave.com>
Message-ID: <1187643670.13163.11.camel@teak>

I see exactly what you mean now; I was able to do as you say with the
toEof piece, but now as I am realizing I probably will want to keep the
same lexer/parser/walker around for multiple lines, I am running up
against a situation where toEof of course eats everything until the end
of file.  Are you saying that it is not possible to tell it to just eat
to the next EOL character without the context sensitive flagging?  If
so, is there a good place for me to look for tips on how to do this?

Ryan

On Mon, 2007-20-08 at 11:29 -0700, Jim Idle wrote:
> You are trying to make your lexer context sensitive. If this must be
> done in the lexer, then you will have to keep a flag to say that it is
> time to return LINE, which will match everything up to the end of file
> (are you sure you mean end of file?)
> 
> However, assuming that you really man end of file, then just get rid of
> LINE and match .+ EOF in the parser:
> 
> messageContinue
>     	:	STAR SPACE datatag SPACE IDENT COLON SPACE line=toEof
> 			-> ^(MESSAGE_CONTINUE datatag $line)
> 	;
> 
> toEof : .+ EOF;
> 
> Or some similar variant.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of John B. Brodie
> > Sent: Monday, August 20, 2007 11:08 AM
> > To: Ryan Daum
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Stuck
> > 
> > Ryan Daum asked (in part):
> > >Hi all,
> > 
> > Greetings!
> > 
> > >I'm writing a fairly simple grammar for the following protocol:
> > >
> > >http://www.belfry.com/fuzzball/trebuchet/mcp.html
> > >
> > >However, I'm stuck on a problem at the lexer level that I can't seem
> > to
> > >solve.  I believe it's my final issue before I have a working parser.
> > >
> > >Basically, I have a number of rules which can match a combination of
> > >characters:
> > >
> > >        fragment
> > >        LINE 	:	(LINE_CHAR)* EOF;
> > >        IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON |
> > >        OTHER_CHAR))* ;
> > 
> > ...snipped...
> > 
> > >This is all fine, individually they work well.  However, in the rule:
> > >
> > >        messageContinue
> > >          	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE
> > >          		-> ^(MESSAGE_CONTINUE datatag LINE);
> > >
> > >Working against the following line:
> > >
> > >        * 9b76 text: This is some sample text.
> > >
> > >I always get a MismatchedTokenException because the parser seems to
> > want
> > >to turn everything after SPACE into an IDENT, rather than a line.
> The
> > >intention of "LINE" is just to collect all input after the SPACE in a
> > >messageContinue; I do not want the rest of the lexer's rules to apply
> > at
> > >all.
> > >
> > 
> > I have not really looked too much at your grammar...
> > 
> > But right off I see that LINE is a fragment. This means that the
> > Parser will never see a LINE token.
> > 
> > Could that be your problem?
> > 
> > HTH
> >    -jbb
> 


From ryan at darksleep.com  Mon Aug 20 14:45:29 2007
From: ryan at darksleep.com (Ryan Daum)
Date: Mon, 20 Aug 2007 17:45:29 -0400
Subject: [antlr-interest] Stuck
In-Reply-To: <051466DAA0D608439E196797955018D702362E@wavemachine.temporal-wave.com>
References: <1187630776.13163.5.camel@teak> <E1INBf6-0002d5-Gl@gecko.home.org>
	<051466DAA0D608439E196797955018D702362E@wavemachine.temporal-wave.com>
Message-ID: <1187646329.13163.14.camel@teak>

One other question here, should I use this approach (which works if I
create/invoke the parser separately for each line of the input stream),
how can I retrieve the entire "line" as a text stream inside my tree
grammar?  Right now:

        messageContinue : ^(MESSAGE_CONTINUE datatag=UNQUOTED_STRING
        line EOF) 

Gives me a $line whose "text" contains the value of the last value in
the received string.

Ryan

On Mon, 2007-20-08 at 11:29 -0700, Jim Idle wrote:
> You are trying to make your lexer context sensitive. If this must be
> done in the lexer, then you will have to keep a flag to say that it is
> time to return LINE, which will match everything up to the end of file
> (are you sure you mean end of file?)
> 
> However, assuming that you really man end of file, then just get rid of
> LINE and match .+ EOF in the parser:
> 
> messageContinue
>     	:	STAR SPACE datatag SPACE IDENT COLON SPACE line=toEof
> 			-> ^(MESSAGE_CONTINUE datatag $line)
> 	;
> 
> toEof : .+ EOF;
> 
> Or some similar variant.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of John B. Brodie
> > Sent: Monday, August 20, 2007 11:08 AM
> > To: Ryan Daum
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Stuck
> > 
> > Ryan Daum asked (in part):
> > >Hi all,
> > 
> > Greetings!
> > 
> > >I'm writing a fairly simple grammar for the following protocol:
> > >
> > >http://www.belfry.com/fuzzball/trebuchet/mcp.html
> > >
> > >However, I'm stuck on a problem at the lexer level that I can't seem
> > to
> > >solve.  I believe it's my final issue before I have a working parser.
> > >
> > >Basically, I have a number of rules which can match a combination of
> > >characters:
> > >
> > >        fragment
> > >        LINE 	:	(LINE_CHAR)* EOF;
> > >        IDENT 	:	ALPHA (ALPHA|DIGIT|'-' ~(SPACE | COLON |
> > >        OTHER_CHAR))* ;
> > 
> > ...snipped...
> > 
> > >This is all fine, individually they work well.  However, in the rule:
> > >
> > >        messageContinue
> > >          	:	STAR SPACE datatag SPACE IDENT COLON SPACE LINE
> > >          		-> ^(MESSAGE_CONTINUE datatag LINE);
> > >
> > >Working against the following line:
> > >
> > >        * 9b76 text: This is some sample text.
> > >
> > >I always get a MismatchedTokenException because the parser seems to
> > want
> > >to turn everything after SPACE into an IDENT, rather than a line.
> The
> > >intention of "LINE" is just to collect all input after the SPACE in a
> > >messageContinue; I do not want the rest of the lexer's rules to apply
> > at
> > >all.
> > >
> > 
> > I have not really looked too much at your grammar...
> > 
> > But right off I see that LINE is a fragment. This means that the
> > Parser will never see a LINE token.
> > 
> > Could that be your problem?
> > 
> > HTH
> >    -jbb
> 


From leonsu at msn.com  Mon Aug 20 16:16:26 2007
From: leonsu at msn.com (Leon Su)
Date: Mon, 20 Aug 2007 16:16:26 -0700
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <91dd9a4f0708182241r297087bcha54b702e0bb1283c@mail.gmail.com>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
	<91dd9a4f0708161601j6b86a176l931667becd4da44f@mail.gmail.com>
	<BAY104-W1DBB4CDF75A1BBC8178BCCBD90@phx.gbl>
	<91dd9a4f0708181109q68769002jf3f9a9c445d9ac59@mail.gmail.com>
	<BAY104-W74CF6AF1260DD1E49D4B4CBDA0@phx.gbl> 
	<91dd9a4f0708182241r297087bcha54b702e0bb1283c@mail.gmail.com>
Message-ID: <BAY104-W935006F74004A8162CD99CBDB0@phx.gbl>

Sorry, I made a typo mistake in previous mail...
For adding package in your gUnit script, it should be:

@header{package xy.object.notation;}

Leon
Date: Sun, 19 Aug 2007 13:41:23 +0800
From: fyaoxy at gmail.com
To: leonsu at msn.com; antlr-interest at antlr.org
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing

Hi, 
I changed something in my current work version.
You can get its svn revision from https://on.dev.java.net/svn/on/trunk/eclipse
it's a eclipse project. the last version is 59. I not sure it is reproducable.

but the privous revision 50..57 should reproduct it.
testcase in build.xml,
to run it, execute task: generate, compile, gunit

2007/8/19, Leon Su <
leonsu at msn.com>:



Thanks for the report. I redirected system.err to another class in order to collect error messages for each single test.
If xParser failed, there should be some error messages displayed on the test results.

If not, could you give me more information on your grammar and gUnit testsuite that I can fix the possible bug.

Leon
Date: Sun, 19 Aug 2007 02:09:42 +0800
From: 
fyaoxy at gmail.com
To: leonsu at msn.com
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing


Hi,
In some case, when xParser failed, gUnitExecutor pipe stuff would make a deak lock on system.err. I done a little finding, no result, and not deep dig into.:)
I tring another way:)


2007/8/18, Leon Su <leonsu at msn.com>:



Hi,

Thanks for your trying and the suggestions. 
I'll consider your points for improving the tool :)

Leon
Date: Fri, 17 Aug 2007 07:01:57 +0800

From: fyaoxy at gmail.com
To: 

antlr-interest at antlr.org
Subject: Re: [antlr-interest] announcing gUnit: ANTLR grammar unit testing

Wawo, so great!  gunit so pretty!
I tried, all passed. it make me happy.


gunit On;

words:
"h" OK
"hello" OK
"hello " OK
"hello world" OK
"hello world " OK

"hello world     " OK
" hello world " OK
"hello " -> "hello"
"hello world" -> "hello world"
"hello world    " -> "hello world"

"    hello world    " -> "hello world"

name:
"hello,world" OK
"hello,world" ->"(NAME (TSTRING hello) (TSTRING world))"
" hello ,    world " ->"(NAME (TSTRING hello) (TSTRING world))"


<<" hello
world ">> -><<(NAME (TSTRING  hello
world ))>>

though my last test infinite loop:)

And I have idea: 
I
use package name in my grammar, current gunit just take grammar name.
so do a hard code in it, I would like to deep into this tool.

I wanna enhance testcase with additional message, like I do before:
/*string test*/
//valid single test
a
1
\n
word
??
//invalid single test
,
"

{
}
:
//valid multiple test

a aaaa
123 abc
123 abc 
//quoted test
"abc1"

seems "input ouput" triple can be done "message input output" or "input output message"
even:
group message{

test 
test
}

Thank you again:)


2007/8/16, Terence Parr <parrt at cs.usfca.edu
>:
Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
year.  He inspired me to build one for ANTLR.  Fortunately, I found a
very capable graduate student, Leon Su, that was able to implement it

this summer.  Here is the wiki with code attached. :)

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing



Please direct feedback to the group and/or Leon so we can improve
it.  I think you'll find it is a very nice tool.  Has both
interpreted and gUnit->jUnit code gen modes. :)

Terence





-- 
??
???



-- 
??
???



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070820/2ba780f5/attachment.html 

From joshscholar at nightstudies.net  Tue Aug 21 00:06:02 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Tue, 21 Aug 2007 00:06:02 -0700
Subject: [antlr-interest] Help, I can't download C target
Message-ID: <75939f220708210006wf822a0cr4baf8d6005e46115@mail.gmail.com>

When I download the C code distribution, I get incomplete files
(according to gzip).

The 3707 version is coming in at 172,984 bytes (at a maximum) and only
lists files from "aclocal.m4"-"configure"

The 3695 version is 148,420 bytes and Winrar can't get a file
structure at all.  The files seem to be different sizes every time I
download.

I've tried downloading with GetRight, with wget and with firefox directly.

I've tried uncompressing them with winrar, msys/gzip and a stand alone
windows gzip.

The URL I'm using for 3707 is
http://fisheye2.cenqua.com/browse/~raw,r=3707/antlr/lib/C/dist/libantlr3c-3.0.0-rc8.tar.gz

and the URL for 3695 is
http://fisheye2.cenqua.com/browse/~raw,r=3695/antlr/lib/C/dist/libantlr3c-3.0.0-rc8.tar.gz

Josh Scholar

From joshscholar at nightstudies.net  Tue Aug 21 00:32:13 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Tue, 21 Aug 2007 00:32:13 -0700
Subject: [antlr-interest] AST generating grammar not building for C target
Message-ID: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>

I solved my earlier problem by downloading the full source
distribution rather than getting the C code from FishEye (though it
would still be nice to keep up with development).

But my first test, an AST making grammar the compiles under Java isn't
compiling in Visual C++ 2005.

Whether I use the 3.0 or the 3.0.1 C include code (and using the
latest AntlrWorks) I get:

c:\assembler\antlr3\scratch\scratch\stuffparser.c(3008) : warning
C4003: not enough actual parameters for macro 'TOKTEXT'
c:\assembler\antlr3\scratch\scratch\stuffparser.c(3008) : error C2059:
syntax error : ')'

for line 3008 in the generated "[grammar name]parser.c"

            	        root_1 = ADAPTOR->becomeRoot(ADAPTOR,
ADAPTOR->createTypeTokenText(ADAPTOR, LIST, TOKTEXT(h)), root_1);


or for a bit more context:

            /* AST REWRITE
             * elements          : head, dot, rest
             * token labels      :
             * rule labels       : retval, rest, head, dot
             * token list labels :
             * rule list labels  :
             */
            if ( BACKTRACKING==0 )
            {
            	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_retval;
            	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_rest;
            	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_head;
            	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_dot;

            	stream_retval=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
(pANTLR3_UINT8)"token retval", retval.tree != NULL ? retval.tree :
NULL);
            	stream_rest=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
(pANTLR3_UINT8)"token rest", rest.tree != NULL ? rest.tree : NULL);
            	stream_head=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
(pANTLR3_UINT8)"token head", head.tree != NULL ? head.tree : NULL);
            	stream_dot=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
(pANTLR3_UINT8)"token dot", dot.tree != NULL ? dot.tree : NULL);

            	root_0			    = ADAPTOR->nil(ADAPTOR);
            	retval.tree    = root_0;
            	// 29:78: -> ^( LIST[$h] ( $head)? ( $rest)* ( ^( DOT[$d]
$dot) )? )
            	{
            	    //
C:\\assembler\\antlr3\\scratch\\scratch\\stuff.g:29:80: ^( LIST[$h] (
$head)? ( $rest)* ( ^( DOT[$d] $dot) )? )
            	    {
            	        pANTLR3_BASE_TREE root_1 = ADAPTOR->nil(ADAPTOR);
            	        root_1 = ADAPTOR->becomeRoot(ADAPTOR,
ADAPTOR->createTypeTokenText(ADAPTOR, LIST, TOKTEXT(h)), root_1);

            	        //
C:\\assembler\\antlr3\\scratch\\scratch\\stuff.g:29:91: ( $head)?
            	        {
            	        	if ( stream_head->hasNext(stream_head) )
            	        	{
            	        		ADAPTOR->addChild(ADAPTOR, root_1,
stream_head->next(stream_head));

            	        	}
            	        	stream_head->reset(stream_head);

            	        }

From joshscholar at nightstudies.net  Tue Aug 21 01:00:15 2007
From: joshscholar at nightstudies.net (Josh Scholar)
Date: Tue, 21 Aug 2007 01:00:15 -0700
Subject: [antlr-interest] AST generating grammar not building for C
	target
In-Reply-To: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>
References: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>
Message-ID: <75939f220708210100n52899aeayb5b8455966b2ab2a@mail.gmail.com>

By the way I can see that the offending macro is defined in the same
generated file as:

#define         TOKTEXT(tok, txt)                               tok,
(pANTLR3_UINT8)txt

so the error is that only one parameter is passed to a two parameter macro.

From JB0284 at att.com  Tue Aug 21 08:24:05 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Tue, 21 Aug 2007 08:24:05 -0700
Subject: [antlr-interest] Example anyone?
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB480321E60E@BD01MSXMB021.US.Cingular.Net>

I'm looking to implement a language that has the following features (not
complete):

event : 
    "@event" ID (POPEN args PCLOSE)? 
    ( SQBOPEN guardExpr SQBCLOSE )? TRANSITION ID 
    ( SLASH actionExpr )?
;

args :
    ID ID ( ',' ID ID )*
;

POPEN : "(";
PCLOSE : ")";
SQBOPEN : "[";
SQBCLOSE : "]";
TRANSITION: "->";


I'm having a little trouble figuring out how to do the guardExpr because
it can have SQBCLOSE in it (an array index for example). I like the way
UML specifies guard expressions, so I'd like to stick with that. But the
guardExpr can be any valid java boolean expression.

Is this going to be like the example for javadoc comments? Or is there
another more pertinent example.

Thanks for any pointers.

Jeff

From jimi at temporal-wave.com  Tue Aug 21 08:36:46 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Aug 2007 08:36:46 -0700
Subject: [antlr-interest] Help, I can't download C target
In-Reply-To: <75939f220708210006wf822a0cr4baf8d6005e46115@mail.gmail.com>
References: <75939f220708210006wf822a0cr4baf8d6005e46115@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702363A@wavemachine.temporal-wave.com>

I don't suggest keeping up with development this way particularly as
there is no guarantee that the distribution in perforce is a good one -
it may be just me testing it on Linux vs Windows etc. Sometimes I may
say you should do this, if I fix a bug that someone needs, but other
than that, stick to the tgz on the downloads page.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Josh Scholar
> Sent: Tuesday, August 21, 2007 12:06 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Help, I can't download C target
> 
> When I download the C code distribution, I get incomplete files
> (according to gzip).
> 
> The 3707 version is coming in at 172,984 bytes (at a maximum) and only
> lists files from "aclocal.m4"-"configure"
> 
> The 3695 version is 148,420 bytes and Winrar can't get a file
> structure at all.  The files seem to be different sizes every time I
> download.
> 
> I've tried downloading with GetRight, with wget and with firefox
> directly.
> 
> I've tried uncompressing them with winrar, msys/gzip and a stand alone
> windows gzip.
> 
> The URL I'm using for 3707 is
>
http://fisheye2.cenqua.com/browse/~raw,r=3707/antlr/lib/C/dist/libantlr
> 3c-3.0.0-rc8.tar.gz
> 
> and the URL for 3695 is
>
http://fisheye2.cenqua.com/browse/~raw,r=3695/antlr/lib/C/dist/libantlr
> 3c-3.0.0-rc8.tar.gz
> 
> Josh Scholar

From jimi at temporal-wave.com  Tue Aug 21 08:38:21 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Aug 2007 08:38:21 -0700
Subject: [antlr-interest] AST generating grammar not building for C
	target
In-Reply-To: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>
References: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702363B@wavemachine.temporal-wave.com>

What version of ANTLR are you using to generate the code. This is fixed
in the latest template I believe and this should be a part of the latest
ANTLR tool. Maybe it is not a part of the ANTLRWorks version you are
using. I will check the template though. Try downloading the examples
and using the .sln files there to see how it integrates with VS2005.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Josh Scholar
> Sent: Tuesday, August 21, 2007 12:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] AST generating grammar not building for C
> target
> 
> I solved my earlier problem by downloading the full source
> distribution rather than getting the C code from FishEye (though it
> would still be nice to keep up with development).
> 
> But my first test, an AST making grammar the compiles under Java isn't
> compiling in Visual C++ 2005.
> 
> Whether I use the 3.0 or the 3.0.1 C include code (and using the
> latest AntlrWorks) I get:
> 
> c:\assembler\antlr3\scratch\scratch\stuffparser.c(3008) : warning
> C4003: not enough actual parameters for macro 'TOKTEXT'
> c:\assembler\antlr3\scratch\scratch\stuffparser.c(3008) : error C2059:
> syntax error : ')'
> 
> for line 3008 in the generated "[grammar name]parser.c"
> 
>             	        root_1 = ADAPTOR->becomeRoot(ADAPTOR,
> ADAPTOR->createTypeTokenText(ADAPTOR, LIST, TOKTEXT(h)), root_1);
> 
> 
> or for a bit more context:
> 
>             /* AST REWRITE
>              * elements          : head, dot, rest
>              * token labels      :
>              * rule labels       : retval, rest, head, dot
>              * token list labels :
>              * rule list labels  :
>              */
>             if ( BACKTRACKING==0 )
>             {
>             	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_retval;
>             	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_rest;
>             	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_head;
>             	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_dot;
> 
> 
> 	stream_retval=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
> (pANTLR3_UINT8)"token retval", retval.tree != NULL ? retval.tree :
> NULL);
> 
> 	stream_rest=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
> (pANTLR3_UINT8)"token rest", rest.tree != NULL ? rest.tree : NULL);
> 
> 	stream_head=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
> (pANTLR3_UINT8)"token head", head.tree != NULL ? head.tree : NULL);
> 
> 	stream_dot=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
> (pANTLR3_UINT8)"token dot", dot.tree != NULL ? dot.tree : NULL);
> 
>             	root_0			    = ADAPTOR->nil(ADAPTOR);
>             	retval.tree    = root_0;
>             	// 29:78: -> ^( LIST[$h] ( $head)? ( $rest)* ( ^(
> DOT[$d]
> $dot) )? )
>             	{
>             	    //
> C:\\assembler\\antlr3\\scratch\\scratch\\stuff.g:29:80: ^( LIST[$h] (
> $head)? ( $rest)* ( ^( DOT[$d] $dot) )? )
>             	    {
>             	        pANTLR3_BASE_TREE root_1 = ADAPTOR-
> >nil(ADAPTOR);
>             	        root_1 = ADAPTOR->becomeRoot(ADAPTOR,
> ADAPTOR->createTypeTokenText(ADAPTOR, LIST, TOKTEXT(h)), root_1);
> 
>             	        //
> C:\\assembler\\antlr3\\scratch\\scratch\\stuff.g:29:91: ( $head)?
>             	        {
>             	        	if ( stream_head->hasNext(stream_head) )
>             	        	{
>             	        		ADAPTOR->addChild(ADAPTOR,
root_1,
> stream_head->next(stream_head));
> 
>             	        	}
>             	        	stream_head->reset(stream_head);
> 
>             	        }

From jimi at temporal-wave.com  Tue Aug 21 08:43:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Aug 2007 08:43:09 -0700
Subject: [antlr-interest] AST generating grammar not building for C
	target
In-Reply-To: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>
References: <75939f220708210032n324d2d97ybbe3ef4594cddd33@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702363C@wavemachine.temporal-wave.com>

Can you let me have the rule you are using here so I can check that it
is not in fact a bug?

Cheers,

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Josh Scholar
> Sent: Tuesday, August 21, 2007 12:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] AST generating grammar not building for C
> target
> 
> c:\assembler\antlr3\scratch\scratch\stuffparser.c(3008) : warning
> C4003: not enough actual parameters for macro 'TOKTEXT'
> c:\assembler\antlr3\scratch\scratch\stuffparser.c(3008) : error C2059:
> syntax error : ')'
> 

From xkrebstarx at gmail.com  Tue Aug 21 08:50:07 2007
From: xkrebstarx at gmail.com (xkrebstarx)
Date: Tue, 21 Aug 2007 11:50:07 -0400
Subject: [antlr-interest] Token rewrite
Message-ID: <47213a9b0708210850u16a52a73tc7566d40d78665cd@mail.gmail.com>

Hey guys,

I have a token in my grammar...

NUMBER    :        INTEGER | FLOAT
                  ;

where,

fragment INTEGER     :    '0'..'9'+|'#'('0'..'9'|'A'..'F'|'a'..'f')+ ;
fragment FLOAT        :
'0'..'9'+('.''0'..'9'+|(('e'|'E')('+'|'-')?'0'..'9'+'.''0'..'9'+)) ;

and I wanted to note the type in the AST, through rewrites and an imaginary
node, such as this...


NUMBER   :        INTEGER -> ^(INT_TAG INTEGER)
                          FLOAT -> ^(FLT_TAG FLOAT)
                 ;


How can I do something like this?

thanx,
xkrebstarx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070821/7b665b4f/attachment.html 

From darach at gmail.com  Tue Aug 21 08:53:07 2007
From: darach at gmail.com (Darach Ennis)
Date: Tue, 21 Aug 2007 16:53:07 +0100
Subject: [antlr-interest] Example anyone?
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB480321E60E@BD01MSXMB021.US.Cingular.Net>
References: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB480321E60E@BD01MSXMB021.US.Cingular.Net>
Message-ID: <4d596d820708210853ub490ea1l819a5e48719c4f1@mail.gmail.com>

Hi Jeff,

SMC for java (smc.sourceforge.net) supports a similar syntax for
guarded transitions, however it does not use antlr. The (minimal) EBNF
may however be inspiring:

http://smc.cvs.sourceforge.net/smc/smc/net/sf/smc/SmcEBNF.txt?view=markup

Failing that, the state machines are available too:

http://smc.cvs.sourceforge.net/smc/smc/net/sf/smc/SmcLexer.sm?revision=1.8&view=markup
http://smc.cvs.sourceforge.net/smc/smc/net/sf/smc/SmcParser.sm?revision=1.17&view=markup

Perhaps try plugging in the java productions for boolean expressions
and see what happens
with your grammar above?

Regards,

Darach.

On 8/21/07, Barnes, Jeff <JB0284 at att.com> wrote:
> I'm looking to implement a language that has the following features (not
> complete):
>
> event :
>     "@event" ID (POPEN args PCLOSE)?
>     ( SQBOPEN guardExpr SQBCLOSE )? TRANSITION ID
>     ( SLASH actionExpr )?
> ;
>
> args :
>     ID ID ( ',' ID ID )*
> ;
>
> POPEN : "(";
> PCLOSE : ")";
> SQBOPEN : "[";
> SQBCLOSE : "]";
> TRANSITION: "->";
>
>
> I'm having a little trouble figuring out how to do the guardExpr because
> it can have SQBCLOSE in it (an array index for example). I like the way
> UML specifies guard expressions, so I'd like to stick with that. But the
> guardExpr can be any valid java boolean expression.
>
> Is this going to be like the example for javadoc comments? Or is there
> another more pertinent example.
>
> Thanks for any pointers.
>
> Jeff
>

From xkrebstarx at gmail.com  Tue Aug 21 08:57:12 2007
From: xkrebstarx at gmail.com (xkrebstarx)
Date: Tue, 21 Aug 2007 11:57:12 -0400
Subject: [antlr-interest] Token rewrite
In-Reply-To: <47213a9b0708210850u16a52a73tc7566d40d78665cd@mail.gmail.com>
References: <47213a9b0708210850u16a52a73tc7566d40d78665cd@mail.gmail.com>
Message-ID: <47213a9b0708210857h1fcc6a20m17e032866f8bda1d@mail.gmail.com>

Also,

I have two productions, such as this

a          :   ( (x -> ^(IMG_NODE x))
                | (y -> ^(IMG_NODE y))
                | (z -> ^(IMG_NODE z))
                )
           ;

b         :    a? c
           ;


Where I want the rewrite for b to have c as the subtree root if a is not
there and a to be the subtree root if it is there. But, I would like to have
these as one production such as this...

a          :   ( (x -> ^(IMG_NODE x))
                | (y -> ^(IMG_NODE y))
                | (z -> ^(IMG_NODE z))
                ) c -> ^($a? c)
           ;



Can this be done?

thanx again,
xkrebstarx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070821/04da95bb/attachment.html 

From bmf1972 at fastmail.fm  Tue Aug 21 09:05:06 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Tue, 21 Aug 2007 19:05:06 +0300
Subject: [antlr-interest] exceptions in the lexer
In-Reply-To: <D685A43C-4AFD-11D9-86C1-000A95891192@cs.usfca.edu>
References: <Pine.LNX.4.44.0412101424540.5327-100000@g4.pauljlucas.org>
	<D685A43C-4AFD-11D9-86C1-000A95891192@cs.usfca.edu>
Message-ID: <faf2fk$fof$1@sea.gmane.org>

Hi,

I have the same problem with antlr 2.7.6...
I have used this (ugly) workaround:

try {
   myParser.myStartRule();
} catch (final ANTLRException e) {
   if (e instanceof TokenStreamRecognitionException) {
     final TokenStreamRecognitionException tsre =
       (TokenStreamRecognitionException) e;
       myParser.reportError(tsre.recog);
   } else {
     throw new MyInternalError(e.getMessage());
   }
}

Anyone found a better approach?

Adrian.

P.S. I also think that it is somehow related to some syntactic predicate 
in my lexer...
I tried for an hour to understand why my lexer throws that exception and 
I am still wondering...

Terence Parr wrote:
> 
> On Dec 10, 2004, at 2:25 PM, Paul J. Lucas wrote:
>> On Fri, 10 Dec 2004, Terence Parr wrote:
>>
>>> Hm...perhaps I should just make it catch ANTLRException, the root,
>>> instead?
>> 	That would work also (and should fix the problem once and for
>> 	all).
> 
> Oh, I think I remember now.  Definitely had to do with 
> TokenRetryException.  I wanted to be able to blast out of the lexer 
> entirely on an exception to force the a token stream switch to flip to 
> another lexer and retry.  If I made that part of the same hierarchy 
> under RecognitionException then you couldn't do the retry.  I 
> specifically made it separate.  Hmm...seems like we need it.
> 
>  From the comment on the interface, "Anything that goes wrong while 
> generating a stream of tokens", I think I meant to be different than 
> recognition issues.  For the life of me though, I can't remember 
> expecting lexer *recognition* exceptions to make it to the parser.  
> Yet, that is what the code says.  Bizarre.  The lexer should just look 
> for another token.
> 
> Ok, i'll look into it.
> Ter
> --
> CS Professor & Grad Director, University of San Francisco
> Creator, ANTLR Parser Generator, http://www.antlr.org
> Cofounder, http://www.jguru.com
> Cofounder, http://www.knowspam.net enjoy email again!
> 
> 
> 
> 
> 
>  


From bmf1972 at fastmail.fm  Tue Aug 21 12:32:56 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Tue, 21 Aug 2007 22:32:56 +0300
Subject: [antlr-interest] retrieving the length of a production match
Message-ID: <fafelb$sgr$1@sea.gmane.org>

Hi all,

I want to embed my parser in an IDE. One of the required features is to 
provide error markers. The markers framework API requires the length of 
the error besides of the line and column.

I have looked into the AST API and couldn't find nothing to help with 
this task... Searched the group and google, but still nothing :-(

Please help,
Adrian.


From rschulz at sonic.net  Tue Aug 21 12:48:29 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Aug 2007 12:48:29 -0700
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <fafelb$sgr$1@sea.gmane.org>
References: <fafelb$sgr$1@sea.gmane.org>
Message-ID: <200708211248.29232.rschulz@sonic.net>

On Tuesday 21 August 2007 12:32, Adrian Herscu wrote:
> Hi all,
>
> I want to embed my parser in an IDE. One of the required features is
> to provide error markers. The markers framework API requires the
> length of the error besides of the line and column.

Technically speaking, parse errors don't have a length. There is a point 
(a single token) at which the parser can detect ungrammatical input. 
After that, it's all over.

Of course, people often try to go beyond that elementary kind of yes / 
no parsing and add some kind recovery. My favorite "universal" 
(non-parser-tool-dependent) technique is to write production for 
explicitly non-grammatical (but usually common) errors so that you can 
report them and continue parsing.

Other more sophisticated, parser-generator-specific techniques are 
possible, but I'm not up on them. The topic is covered extensively in 
TDAR.


> I have looked into the AST API and couldn't find nothing to help with
> this task... Searched the group and google, but still nothing :-(

If nothing else, you can just use the length of the token at which the 
parse failed.


> Please help,
> Adrian.


Randall Schulz

From kenny at kmdconsulting.ca  Tue Aug 21 12:49:43 2007
From: kenny at kmdconsulting.ca (Kenny MacDermid)
Date: Tue, 21 Aug 2007 15:49:43 -0400
Subject: [antlr-interest] NoViableAltException - Am I trying to do too much
	with the Lexer?
Message-ID: <8367efd50708211249q7072a234j6dbc82e141766367@mail.gmail.com>

Hello all,

I'm looking to developer (in Antlr 3, using TDD) a lexer and parser for a
grammar that contains (among others):

Numbers - Start with a '1'..'9',  or are just the digit '0'
Real Numbers - Start with anything. May contain a decimal part. May contain
an exponent part.
Range - '..'
Ellipsis - '...'

I've been messing with everything I can think of for lexer rules, but always
end up getting NoViableAltException's. This is what I currently have:

NUMBER
        : ( ('1' .. '9' DIGIT* '..')=> DIGIT*
          | ('0' (~(DIGIT) | EOF))=> '0'
          | ('1' .. '9' DIGIT*)
          )
        ;

fragment
REALNUMBEREXP
        : ( ('e' | 'E') '-'? NUMBER )
        ;

fragment
REALNUMBERDOTREM
        : '.' DIGIT* REALNUMBEREXP?
        ;

REALNUMBER
        : ( (DIGIT+ ('.' (~('.') | EOF)))=> DIGIT+ REALNUMBERDOTREM
          | (DIGIT+ ('e' | 'E'))=> DIGIT+ REALNUMBEREXP
          | ('0'+ '1'..'9')=> DIGIT+ REALNUMBERDOTREM?
          )
        ;


This is resulting in:

NoViableAltException(48!=[167:4: ( ( '1' .. '9' ( DIGIT )* '..' )=> ( DIGIT
)* | ( '0' (~ ( DIGIT ) | EOF ) )=> '0' | (
'1' .. '9' ( DIGIT )* ) )])

from the location of: Lexer.mNUMBER() on the attempted lexing of:

testLexerToken("0123", "0123", REALNUMBER);
(testLexerToken takes: input, expected output, expected type)

So, am I expecting too much from my lexer to have it distinguish between a
number and a real number? I could just have it return one token for either
and work it out later at the parsing level, although this does sound kludgy
to me. Does anyone have any tips on how to go about solving this?

Thanks,

Kenny
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070821/c1267ed0/attachment.html 

From kroepke at classdump.org  Tue Aug 21 12:50:44 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 21 Aug 2007 21:50:44 +0200
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <fafelb$sgr$1@sea.gmane.org>
References: <fafelb$sgr$1@sea.gmane.org>
Message-ID: <E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>


On Aug 21, 2007, at 9:32 PM, Adrian Herscu wrote:

> I want to embed my parser in an IDE. One of the required features  
> is to provide error markers. The markers framework API requires the  
> length of the error besides of the line and column.
>
> I have looked into the AST API and couldn't find nothing to help  
> with this task... Searched the group and google, but still nothing :-(

A tree node has the start and stop token index (in the sense that in  
a tree like ^(+ 3 4) the + encompasses everything below). From that  
you can get the tokens from the token stream and eventually figure  
out the length of the matched string in the character stream :)

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Tue Aug 21 13:13:10 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 22 Aug 2007 08:13:10 +1200
Subject: [antlr-interest] Example anyone?
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB480321E60E@BD01MSXMB021.US.C
	ingular.Net>
References: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB480321E60E@BD01MSXMB021.US.Cingular.Net>
Message-ID: <20070821201321.27A7911EB42@www.antlr.org>

At 03:24 22/08/2007, Barnes, Jeff wrote:
 >I'm looking to implement a language that has the following 
features
 >(not complete):
[...]
 >I'm having a little trouble figuring out how to do the guardExpr 

 >because it can have SQBCLOSE in it (an array index for example). 


Depends on whether you want to validate the expression within the 
guard clause or whether you just want to pass it through verbatim 
and let the Java compiler deal with it.  If the former, you'll 
have to import some kind of expression rule from a Java grammar; 
if the latter, then you just need to maintain a count (or nesting 
structure) to make sure you don't exit the guardExpr until you've 
seen a balanced number of SQBCLOSEs.

I haven't tried this, but something along these lines ought to 
work for the latter case:

guardExpr
   :  ( ~(SQBOPEN | SQBCLOSE)
      | SQBOPEN guardExpr SQBCLOSE
      )*
   ;


From bmf1972 at fastmail.fm  Tue Aug 21 13:29:21 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Tue, 21 Aug 2007 23:29:21 +0300
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <200708211248.29232.rschulz@sonic.net>
References: <fafelb$sgr$1@sea.gmane.org> <200708211248.29232.rschulz@sonic.net>
Message-ID: <fafhv4$8k7$1@sea.gmane.org>

Hi Randall, and thanks for your fast reply.
Please see my comments inline.
Adrian.

Randall R Schulz wrote:
> On Tuesday 21 August 2007 12:32, Adrian Herscu wrote:
>> Hi all,
>>
>> I want to embed my parser in an IDE. One of the required features is
>> to provide error markers. The markers framework API requires the
>> length of the error besides of the line and column.
> 
> Technically speaking, parse errors don't have a length. There is a point 
> (a single token) at which the parser can detect ungrammatical input. 
> After that, it's all over.

I can deal with parsing errors by extracting the token from the 
exception. The problem is with things beyond the syntax, like type checking.

I will rephrase the question. On a syntactically correct input, is it 
possible to retrieve the textual length of each production match and 
store it in the AST during parsing?

> 
> Of course, people often try to go beyond that elementary kind of yes / 
> no parsing and add some kind recovery. My favorite "universal" 
> (non-parser-tool-dependent) technique is to write production for 
> explicitly non-grammatical (but usually common) errors so that you can 
> report them and continue parsing.
> 
> Other more sophisticated, parser-generator-specific techniques are 
> possible, but I'm not up on them. The topic is covered extensively in 
> TDAR.
> 

What is "TDAR"?


From rschulz at sonic.net  Tue Aug 21 13:37:39 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Aug 2007 13:37:39 -0700
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <fafhv4$8k7$1@sea.gmane.org>
References: <fafelb$sgr$1@sea.gmane.org> <200708211248.29232.rschulz@sonic.net>
	<fafhv4$8k7$1@sea.gmane.org>
Message-ID: <200708211337.39090.rschulz@sonic.net>

On Tuesday 21 August 2007 13:29, Adrian Herscu wrote:
> ...
>
> I can deal with parsing errors by extracting the token from the
> exception. The problem is with things beyond the syntax, like type
> checking.
>
> I will rephrase the question. On a syntactically correct input, is it
> possible to retrieve the textual length of each production match and
> store it in the AST during parsing?

In which case, Kay's answer seems germane. But it does assume you're 
using a 2nd-pass tree parser. Are you? If not, check it out. They're a 
fantastic innovation in ANTLR.


> > ...
> >
> > Other more sophisticated, parser-generator-specific techniques are
> > possible, but I'm not up on them. The topic is covered extensively
> > in TDAR.
>
> What is "TDAR"?

"The Definitive ANTLR Reference," (published Pragmatic Bookshelf; ISBN 
0-9787392-5-6 or 978-0-9787392-5-6) by none other than Terence Parr, 
the principal author of ANTLR and all its ancestors. The book is 
available in print and as a PDF. I have both (one for searching, the 
other for actually reading...)


Randall Schulz

From bmf1972 at fastmail.fm  Tue Aug 21 13:52:38 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Tue, 21 Aug 2007 23:52:38 +0300
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>
References: <fafelb$sgr$1@sea.gmane.org>
	<E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>
Message-ID: <fafjao$d9o$1@sea.gmane.org>

Thanks for the suggestion, Kay.

Kay Roepke wrote:
> 
> On Aug 21, 2007, at 9:32 PM, Adrian Herscu wrote:
> 
>> I want to embed my parser in an IDE. One of the required features is 
>> to provide error markers. The markers framework API requires the 
>> length of the error besides of the line and column.
>>
>> I have looked into the AST API and couldn't find nothing to help with 
>> this task... Searched the group and google, but still nothing :-(
> 
> A tree node has the start and stop token index (in the sense that in a 
> tree like ^(+ 3 4) the + encompasses everything below). From that you 
> can get the tokens from the token stream and eventually figure out the 
> length of the matched string in the character stream :)

I couldn't find a method that returns the stop token...
But having an AST, it seems possible to iterate over its children using 
getNextSibling() till the last child... then iterate over its children 
till the last child... and so on, till the so called "stop token"... 
awful! Is there something that I am missing?

Thinking...
Hmmm, that information is already available during the AST construction...

> 
> HTH,
> -k


From bmf1972 at fastmail.fm  Tue Aug 21 13:56:46 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Tue, 21 Aug 2007 23:56:46 +0300
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <200708211337.39090.rschulz@sonic.net>
References: <fafelb$sgr$1@sea.gmane.org>
	<200708211248.29232.rschulz@sonic.net>	<fafhv4$8k7$1@sea.gmane.org>
	<200708211337.39090.rschulz@sonic.net>
Message-ID: <fafjig$d9o$2@sea.gmane.org>



>>>
>>> Other more sophisticated, parser-generator-specific techniques are
>>> possible, but I'm not up on them. The topic is covered extensively
>>> in TDAR.
>> What is "TDAR"?
> 
> "The Definitive ANTLR Reference," (published Pragmatic Bookshelf; ISBN 
> 0-9787392-5-6 or 978-0-9787392-5-6) by none other than Terence Parr, 
> the principal author of ANTLR and all its ancestors. The book is 
> available in print and as a PDF. I have both (one for searching, the 
> other for actually reading...)
> 

Read that from cover to cover... I do not remember anything relevant. 
Can you send a pointer please?

> 
> Randall Schulz
> 


From jimi at temporal-wave.com  Tue Aug 21 14:06:42 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 21 Aug 2007 14:06:42 -0700
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <fafjao$d9o$1@sea.gmane.org>
References: <fafelb$sgr$1@sea.gmane.org><E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>
	<fafjao$d9o$1@sea.gmane.org>
Message-ID: <051466DAA0D608439E196797955018D7023643@wavemachine.temporal-wave.com>

Just refer to $start and $stop in a rule or more likely for you
$rulelabel.start and $rulelabel.stop. 

These are the actual tokens, which will give you the offset of their
text start in your input stream, which will give you the length in terms
of the input text as well as the start point.

Also, if you determine that there is a semantic error (say an incorrect
cast or something), then you presumably know the tokens involved and can
use their text offsets to determine the length of the text that
indicates the error?

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Adrian Herscu
> Sent: Tuesday, August 21, 2007 1:53 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] retrieving the length of a production
> match
> 
> Thanks for the suggestion, Kay.
> 
> Kay Roepke wrote:
> >
> > On Aug 21, 2007, at 9:32 PM, Adrian Herscu wrote:
> >
> >> I want to embed my parser in an IDE. One of the required features
is
> >> to provide error markers. The markers framework API requires the
> >> length of the error besides of the line and column.
> >>
> >> I have looked into the AST API and couldn't find nothing to help
> with
> >> this task... Searched the group and google, but still nothing :-(
> >
> > A tree node has the start and stop token index (in the sense that in
> a
> > tree like ^(+ 3 4) the + encompasses everything below). From that
you
> > can get the tokens from the token stream and eventually figure out
> the
> > length of the matched string in the character stream :)
> 
> I couldn't find a method that returns the stop token...
> But having an AST, it seems possible to iterate over its children
using
> getNextSibling() till the last child... then iterate over its children
> till the last child... and so on, till the so called "stop token"...
> awful! Is there something that I am missing?
> 
> Thinking...
> Hmmm, that information is already available during the AST
> construction...
> 
> >
> > HTH,
> > -k


From kroepke at classdump.org  Tue Aug 21 14:11:12 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 21 Aug 2007 23:11:12 +0200
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <fafjao$d9o$1@sea.gmane.org>
References: <fafelb$sgr$1@sea.gmane.org>
	<E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>
	<fafjao$d9o$1@sea.gmane.org>
Message-ID: <816B8E49-971C-4143-9993-5699E2ABC74B@classdump.org>


On Aug 21, 2007, at 10:52 PM, Adrian Herscu wrote:

> I couldn't find a method that returns the stop token...
> But having an AST, it seems possible to iterate over its children  
> using getNextSibling() till the last child... then iterate over its  
> children till the last child... and so on, till the so called "stop  
> token"... awful! Is there something that I am missing?
>
> Thinking...
> Hmmm, that information is already available during the AST  
> construction...

Yes, it is.  But the tree only stores the indices into the token  
stream. So you can call tree.getTokenStartIndex() and  
getTokenStopIndex() to get that info.
Then ask the tree adaptor that built the tree for its tokenSource and  
get the tokens associated with the indices. That get's you the  
appropriate positions and stuff.

mmh. maybe this should be made easier...

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Tue Aug 21 14:12:06 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 21 Aug 2007 23:12:06 +0200
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <051466DAA0D608439E196797955018D7023643@wavemachine.temporal-wave.com>
References: <fafelb$sgr$1@sea.gmane.org><E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>
	<fafjao$d9o$1@sea.gmane.org>
	<051466DAA0D608439E196797955018D7023643@wavemachine.temporal-wave.com>
Message-ID: <A6B35A00-12AE-4833-AB36-31254E7562CD@classdump.org>


On Aug 21, 2007, at 11:06 PM, Jim Idle wrote:

> Just refer to $start and $stop in a rule or more likely for you
> $rulelabel.start and $rulelabel.stop.

ah, I though this was supposed to be outside the actual grammar, but  
I might have misunderstood the OP.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From gbr at newtechlaw.com  Tue Aug 21 14:08:11 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Tue, 21 Aug 2007 14:08:11 -0700
Subject: [antlr-interest] Will TDAR be updated to cover the new Tree Parsers
Message-ID: <200708212116.l7LLGmWo007651@tach.newtechlaw.com>


Ter,

What are your plans on documenting the new TreeParser capability in 
3.1?  Will it be documented in an update to TDAR (or should that be 
"the TDAR"?), or just the Wiki pages?

Thanks,
Gerald
----
Gerald B. Rosenberg, Esq.
NewTechLaw
260 Sheridan Ave., Suite 208
Palo Alto, CA  94306-2009

650.325.2100  (office)  /  650.703.1724  (cell)
650.325.2107  (facsimile)

www.newtechlaw.com


CONFIDENTIALITY NOTICE:  This email message (including any 
attachments) is being sent by an attorney, is for the sole use of the 
intended recipient, and may contain confidential and privileged 
information.  Any unauthorized review, use, disclosure or 
distribution is prohibited.  If you are not the intended recipient, 
please contact the sender immediately by reply email and delete all 
copies of this message and any attachments without retaining a copy.  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070821/ca408a37/attachment.html 

From monstermanual at gmail.com  Tue Aug 21 14:20:38 2007
From: monstermanual at gmail.com (Jan-Willem van den Broek)
Date: Tue, 21 Aug 2007 23:20:38 +0200
Subject: [antlr-interest] Newbie conundrums
Message-ID: <a75d6a110708211420j7adb6a7etce14019a4e0e572b@mail.gmail.com>

Hi all,

I'm fairly new to ANTLR and parser generators in general, so maybe my
problems are obvious ones. Any feedback is much appreciated though :-)

Consider a text consisting of three blocks. The first is a code of
exactly 30 digits. This is followed by a time in the hh:mm:ss format.
Finally there is a number of unspecified length. The goal is to get
all three values.

(Note: I know that ANTLR is overkill for this problem. This is pure exercise.)

The grammar below describes this text:

grammar Silly;

line : CODE TIME NUMBER ;

CODE : D D D D D D D D D D D D D D D D D D D D D D D D D D D D D D ;
TIME : D D C D D C D D ;
NUMBER : D+ ;

fragment D : '0'..'9' ;
fragment C : ':' ;

Now, there are two things about this grammar that I find awkward and
one thing that really surprises me.

The first awkward thing is that I have to specify each individual
digit for the CODE rule. This would get really cumbersome if I needed
a really large number of digits. Is there maybe a regex-like notation
to specify the number of tokens? (In most regex dialects you can say
d{30} to specify 30 occurrances of 'd'.)

The second awkward thing is that this grammar doesn't work :-)

If I test it (in ANTLRWorks) on
"01234567890123456789012345678912:59:300123456789012345678901234567",
then everything before the ":" is matched by the NUMBER rule. Of
course this is completely logical for the lexer to do, but it still
sucks. The filter option (and giving precedence to CODE over NUMBER)
doesn't really solve the problem either, since it's perfectly valid to
have the number be of length 30 too, and in that scenario the number
would result in a CODE token.

What's the way to go about this? The context makes the choice
unambiguous, but to take that into account I have to pull CODE and
NUMBER into the parser and have the lexer produce single-digit tokens.
That sounds rather ugly. And not particularly efficient either :-(

Is there a better way? (Predicates?)

Finally, the surprising thing is that if I try this parser (again in
ANTLRWorks) on the following input below (notice the "fff" between the
code and the time), then it parses code, time, and number, without
complain, ignoring the "ffff" in the process. Is this automatic error
correction? If so, can I turn on warnings somewhere?

The input is: "012345678901234567890123456789fff12:59:300123456789012345678901234567"

Sorry if these issues are obvious or if I've done something stupid.
Much obliged for any feedback :-)

Cheers!
JW

From rschulz at sonic.net  Tue Aug 21 14:22:59 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 21 Aug 2007 14:22:59 -0700
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <fafjig$d9o$2@sea.gmane.org>
References: <fafelb$sgr$1@sea.gmane.org> <200708211337.39090.rschulz@sonic.net>
	<fafjig$d9o$2@sea.gmane.org>
Message-ID: <200708211422.59551.rschulz@sonic.net>

On Tuesday 21 August 2007 13:56, Adrian Herscu wrote:
> ...
>
> > "The Definitive ANTLR Reference," (published Pragmatic Bookshelf;
> > ISBN 0-9787392-5-6 or 978-0-9787392-5-6) by none other than Terence
> > Parr, the principal author of ANTLR and all its ancestors. The book
> > is available in print and as a PDF. I have both (one for searching,
> > the other for actually reading...)
>
> Read that from cover to cover... I do not remember anything relevant.
> Can you send a pointer please?

Chapter 10. "Error Reporting and Recovery"


Randall Schulz

From cgorski at cgorski.org  Tue Aug 21 20:48:14 2007
From: cgorski at cgorski.org (Christopher Gorski)
Date: Tue, 21 Aug 2007 23:48:14 -0400
Subject: [antlr-interest] Newbie conundrums
In-Reply-To: <a75d6a110708211420j7adb6a7etce14019a4e0e572b@mail.gmail.com>
References: <a75d6a110708211420j7adb6a7etce14019a4e0e572b@mail.gmail.com>
Message-ID: <46CBB1FE.5030208@cgorski.org>

Jan-Willem van den Broek wrote:


> The grammar below describes this text:
> 
> grammar Silly;
> 
> line : CODE TIME NUMBER ;
> 
> CODE : D D D D D D D D D D D D D D D D D D D D D D D D D D D D D D ;
> TIME : D D C D D C D D ;
> NUMBER : D+ ;
> 
> fragment D : '0'..'9' ;
> fragment C : ':' ;
 >
 > The second awkward thing is that this grammar doesn't work :-)
 >

In this case, you probably want to handle everything in the lexer. 
Replace "line" with "LINE" and you will find that ANTLR does what you 
want it to do.

 > If I test it (in ANTLRWorks) on
 > "01234567890123456789012345678912:59:300123456789012345678901234567",
 > then everything before the ":" is matched by the NUMBER rule. Of
 > course this is completely logical for the lexer to do, but it still
 > sucks. The filter option (and giving precedence to CODE over NUMBER)
 > doesn't really solve the problem either, since it's perfectly valid to
 > have the number be of length 30 too, and in that scenario the number
 > would result in a CODE token.

In ANTLR, the lexer and the parser are really the same mechanism.  To 
understand the behavior above, think of your grammar as two separate 
programs.  You have the lexer trying to parse CODE, TIME, and NUMBER. 
The lexer doesn't know the parser exists.  It reads a long string of 
numbers, hits a ":", and thinks "ok, everything up to the ":" fits 
nothing but NUMBER, so make that string a number."  It has no idea that 
you are interested in putting a TIME after a CODE.  It just matches the 
longest string that it can.

If you put LINE in the lexer, now the lexer understands what context you 
want CODE, TIME, and NUMBER.

 > Finally, the surprising thing is that if I try this parser (again in
 > ANTLRWorks) on the following input below (notice the "fff" between the
 > code and the time), then it parses code, time, and number, without
 > complain, ignoring the "ffff" in the process. Is this automatic error
 > correction? If so, can I turn on warnings somewhere?
 >
 > The input is: 
"012345678901234567890123456789fff12:59:300123456789012345678901234567"

In this case the exact same thing is happening that happened above.  The 
lexer does not match the "fff" to a token because "fff" doesn't match 
anything in your grammar, but it does serve to break up your string. 
ANTLR hits the "f" and thinks, "geez, now nothing matches, but before 
the 'f' the first match I could make is a CODE, so lets tokenize it as a 
CODE."  Note that if you placed NUMBER before CODE in the grammar, this 
string would match as a NUMBER and nothing would match as a CODE.  ANTLR 
then ignores the remaining 'f' and then starts matching the TIME and 
NUMBER.  "CODE TIME NUMBER" is returned to the parser and your parser 
finds a match.

When you are trying break complex strings into parts I have found that 
it is always best to deal with it in the lexer.  Depending on your app, 
you may not even need a parser.

-Chris



From bmf1972 at fastmail.fm  Wed Aug 22 01:59:40 2007
From: bmf1972 at fastmail.fm (Adrian Herscu)
Date: Wed, 22 Aug 2007 11:59:40 +0300
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <051466DAA0D608439E196797955018D7023643@wavemachine.temporal-wave.com>
References: <fafelb$sgr$1@sea.gmane.org><E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org>	<fafjao$d9o$1@sea.gmane.org>
	<051466DAA0D608439E196797955018D7023643@wavemachine.temporal-wave.com>
Message-ID: <fagttv$sbl$1@sea.gmane.org>

Hmmm... It means that I must touch all the parsing rules. Am I right?
(hoped that there is some trick... just a one liner...)

Regarding the "$rulelabel.start and $rulelabel.stop"... I haven't 
specified in my question that I am still using ANTLR 2.7.6. I am looking 
at the 3.0 API and now I am discovering these... Anything similar in 2.7.6?

Adrian.


Jim Idle wrote:
> Just refer to $start and $stop in a rule or more likely for you
> $rulelabel.start and $rulelabel.stop. 
> 
> These are the actual tokens, which will give you the offset of their
> text start in your input stream, which will give you the length in terms
> of the input text as well as the start point.
> 
> Also, if you determine that there is a semantic error (say an incorrect
> cast or something), then you presumably know the tokens involved and can
> use their text offsets to determine the length of the text that
> indicates the error?
> 
> Jim
> 


From alexandre.hamez at lip6.fr  Wed Aug 22 03:29:32 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Wed, 22 Aug 2007 12:29:32 +0200
Subject: [antlr-interest] [Newbie] Parsing exactly N characters
Message-ID: <7BB798E8-5B45-4E43-9F20-14DB6816A5AE@lip6.fr>

Hi everybody,

I need to parse instructions like that:
	TR( CAMI_STRING )
or	OC( CAMI_STRING , CAMI_STRING , CAMI_STRING)

Where CAMI_STRING has the form
	INTEGER:STRING.
INTEGER is the size of the following STRING which could contains any  
ASCII character, except '\n'.

My problem is that I can have something like that:
	TR(5:ab)d)
or  	OC(2:ab,3:a;c,2:ac)
	
	So strings can have an embedded ',' or ')', but with no particular  
meaning.

	I was hopping that something dummy as the following  would be  
sufficient, but indeed it doesn't work:

> /*------------------------------------------------------------------
> * PARSER RULES
> *------------------------------------------------------------------*/
>
>
> cami	:	
> 	command*
> 	;
>
> command 	:
> 	open_connection |
> 	trace_message
> 	;
>
> open_connection		:
> 	'OC(' cami_string ',' cami_string ',' cami_string ')'	
> 	;
>
> trace_message	:
> 	'TR(' cami_string ')'
> 	;
>
> cami_string
> 	:	
> 	NUMBER ':' STRING
> 	;
>
> /*------------------------------------------------------------------
> * LEXER RULES
> *------------------------------------------------------------------*/
>
> NUMBER	
> 	: 	
> 	('0'..'9')+
> 	;
>
> STRING	
> 	:
> 	(
> 	'a'..'z' |
> 	' ' 	 |
> 	')' 	 |
> 	','
> 	)+
> 	;
>
> NEWLINE
> 	: 	
> 	( '\r' | '\n' )+ 	
> 	{ $channel = HIDDEN; }
> 	;
>
>

With such a parser, I end up with the following error:
> TR(5:abcde)
> BR.recoverFromMismatchedToken
> line 0:-1 mismatched input '<EOF>' expecting ')'


So, is it possible to use the value of the NUMBER to parser exactly  
NUMBER characters? Or is there a smarter parser rule I can write? I  
tried to use the greedy option, but it doesn't change anything.

Any help would be gladly appreciated :-)

------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070822/060746b0/attachment.bin 

From obdrzalek at gmail.com  Wed Aug 22 03:41:30 2007
From: obdrzalek at gmail.com (Jan Obdrzalek)
Date: Wed, 22 Aug 2007 12:41:30 +0200
Subject: [antlr-interest] Non-imaginary tokens in rewrite rules
Message-ID: <66cce1fb0708220341s37651f9ldcec1d8155f32b0a@mail.gmail.com>

Hello,

I arrived at the following problem. Consider this rule:

foobar:
   'foo' -> ^(FB 'foo')
|  'bar' -> ^(FB 'foo')
;

Here FB is an imaginary token. It goes through antlr with no complaints, but
crashes when encountering 'bar' during parsing. looking at the generated
code, it looks as though ANTLR treats imaginary and non-imaginary tokens on
the right hand side differently: If a token is imaginary (FB), it is created
using adaptor.create. If not, it is read from the corresponding stream_xx
using stream_xx.next(). However, that stream is filled at the beginning of
the rule __only__ if there is such token in the input. [In other words if
the token number of  'foo' is 41 and of 'bar' is 42, what happens is that
the stream_42 is filled with 'bar' token, but the stream_41 (which is empty)
is read, resulting in an exception] This puzzles me quite a lot. Why not
just create 'foo' using adaptor.create, as it is the case for imaginary
tokens?

Any ideas, comments?

Regards,
Jan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070822/83538747/attachment-0001.html 

From jimi at temporal-wave.com  Wed Aug 22 07:24:56 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 22 Aug 2007 07:24:56 -0700
Subject: [antlr-interest] retrieving the length of a production match
In-Reply-To: <A6B35A00-12AE-4833-AB36-31254E7562CD@classdump.org>
References: <fafelb$sgr$1@sea.gmane.org><E61FD5C3-35DB-4A88-91DB-84D582E8A6F8@classdump.org><fafjao$d9o$1@sea.gmane.org><051466DAA0D608439E196797955018D7023643@wavemachine.temporal-wave.com>
	<A6B35A00-12AE-4833-AB36-31254E7562CD@classdump.org>
Message-ID: <051466DAA0D608439E196797955018D7023644@wavemachine.temporal-wave.com>

Maybe you did, or maybe I did ;-) But the general point is that if you have a token, it will tell you where it starts in the input stream, so if you have discovered something semantically rather than syntactically (this is what I thought was being asked), then knowing the tokens will allow you to determine the run length for things you want to underline in green or whatever. :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kay Roepke
> Sent: Tuesday, August 21, 2007 2:12 PM
> To: ANTLR-Interest Interest
> Subject: Re: [antlr-interest] retrieving the length of a production
> match
> 
> 
> On Aug 21, 2007, at 11:06 PM, Jim Idle wrote:
> 
> > Just refer to $start and $stop in a rule or more likely for you
> > $rulelabel.start and $rulelabel.stop.
> 
> ah, I though this was supposed to be outside the actual grammar, but
> I might have misunderstood the OP.
> 
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 


From andreas.bartho at inf.tu-dresden.de  Wed Aug 22 08:47:36 2007
From: andreas.bartho at inf.tu-dresden.de (Andreas Bartho)
Date: Wed, 22 Aug 2007 17:47:36 +0200
Subject: [antlr-interest] Problems with AST construction
Message-ID: <46CC5A98.5090907@inf.tu-dresden.de>

Hello,

I'm currently trying to remove left recursion from a large Grammar (C#). 
I've run into some problems, however, and would be grateful for any help.

This is an edited excerpt of the grammar.

primary : 	Identifier | invocation | increment;	
	
invocation :	primary invocation_rest;
	
increment  :	primary increment_rest;	

invocation_rest : '(' '.'? ')';
	
increment_rest : '++';	

Identifier :   'a'..'z'*;


An AST for i()() should look like (Invocation (Invocation Identifier '(' 
')' ) '(' ')' ).
There are rules not displayed here that can refer to either primary or 
invocation/increment.


To remove left recursion I have experimented with repetition operators, 
but to no avail.

A grammar like the following works, but only for this toy example.

primary : 	primary_rec | Identifier;	
	
primary_rec :	Identifier (invocationrest | incrementrest)*;	

invocation :	primary invocationrest;
	
increment  : 	primary	'++';	
	
invocationrest : '(' '.'? ')' ;

incrementrest :	'++';	

Identifier: 'a'..'z'*;

Once the grammar gets bigger, ANTLR runs into problems, because it can't 
decide, for example, whether it should match an invocationrest in rule 
primary_rec or in rule invocation.

Using right-recursion seems to work:

tokens {
	Invocation;
	Increment;
}

primary : primary_start primary_rec*;	
	
primary_start :	Identifier;
	
primary_rec :	invocation_rest	| increment_rest;	


invocation
	:	primary_start invocation_rec
	->	^(Invocation primary_start invocation_rec)
	;
	
invocation_rec
	:	primary_rec invocation_rec
	//makes AST right associative
	//->	^(Invocation primary_rec invocation_rec)
	|	invocation_rest
	;	
			
invocation_rest : '(' '.'? ')';

increment
	: 	primary_start increment_rec
	->	^(Increment primary_start increment_rec)	
	;	

increment_rec
	:	primary_rec increment_rec
	//makes AST right associative	
	//->  ^(Increment primary_rec increment_rec)
	|	increment_rest
	;	
		
increment_rest : '++';	

Identifier :   'a'..'z'*;

The problem is that due to the right-recursion the resulting trees are 
right-associative, yielding a tree like (Invocation Identifier 
(Invocation '(' ')' '(' ')' ) )
Furthermore, the trees must also be created when rule 'primary' is 
called, leaving only 'primary_rec' for tree construction. But I just 
don't get iterative AST construction to work here. Does anyone have an idea?

Andreas

From lgcraymer at yahoo.com  Wed Aug 22 12:21:02 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 22 Aug 2007 12:21:02 -0700 (PDT)
Subject: [antlr-interest] Problems with AST construction
In-Reply-To: <46CC5A98.5090907@inf.tu-dresden.de>
Message-ID: <170056.6269.qm@web55907.mail.re3.yahoo.com>

The steps you need to take are to first expand the
elements of primary:

primary
    :
    Identifier
    |
        primary
        (
             invocation_rest
             |
                  increment_rest
        )
    ;

and from this, Identifier is the non-recursive form,
so

primary
    :
    Identifier
    (
         invocation_rest
         |
              increment_rest
    )*
    ;


--- Andreas Bartho <andreas.bartho at inf.tu-dresden.de>
wrote:

> Hello,
> 
> I'm currently trying to remove left recursion from a
> large Grammar (C#). 
> I've run into some problems, however, and would be
> grateful for any help.
> 
> This is an edited excerpt of the grammar.
> 
> primary : 	Identifier | invocation | increment;	
> 	
> invocation :	primary invocation_rest;
> 	
> increment  :	primary increment_rest;	
> 
> invocation_rest : '(' '.'? ')';
> 	
> increment_rest : '++';	
> 
> Identifier :   'a'..'z'*;
> 
> 
> An AST for i()() should look like (Invocation
> (Invocation Identifier '(' 
> ')' ) '(' ')' ).
> There are rules not displayed here that can refer to
> either primary or 
> invocation/increment.
> 
> 
> To remove left recursion I have experimented with
> repetition operators, 
> but to no avail.
> 
> A grammar like the following works, but only for
> this toy example.
> 
> primary : 	primary_rec | Identifier;	
> 	
> primary_rec :	Identifier (invocationrest |
> incrementrest)*;	
> 
> invocation :	primary invocationrest;
> 	
> increment  : 	primary	'++';	
> 	
> invocationrest : '(' '.'? ')' ;
> 
> incrementrest :	'++';	
> 
> Identifier: 'a'..'z'*;
> 
> Once the grammar gets bigger, ANTLR runs into
> problems, because it can't 
> decide, for example, whether it should match an
> invocationrest in rule 
> primary_rec or in rule invocation.
> 
> Using right-recursion seems to work:
> 
> tokens {
> 	Invocation;
> 	Increment;
> }
> 
> primary : primary_start primary_rec*;	
> 	
> primary_start :	Identifier;
> 	
> primary_rec :	invocation_rest	| increment_rest;	
> 
> 
> invocation
> 	:	primary_start invocation_rec
> 	->	^(Invocation primary_start invocation_rec)
> 	;
> 	
> invocation_rec
> 	:	primary_rec invocation_rec
> 	//makes AST right associative
> 	//->	^(Invocation primary_rec invocation_rec)
> 	|	invocation_rest
> 	;	
> 			
> invocation_rest : '(' '.'? ')';
> 
> increment
> 	: 	primary_start increment_rec
> 	->	^(Increment primary_start increment_rec)	
> 	;	
> 
> increment_rec
> 	:	primary_rec increment_rec
> 	//makes AST right associative	
> 	//->  ^(Increment primary_rec increment_rec)
> 	|	increment_rest
> 	;	
> 		
> increment_rest : '++';	
> 
> Identifier :   'a'..'z'*;
> 
> The problem is that due to the right-recursion the
> resulting trees are 
> right-associative, yielding a tree like (Invocation
> Identifier 
> (Invocation '(' ')' '(' ')' ) )
> Furthermore, the trees must also be created when
> rule 'primary' is 
> called, leaving only 'primary_rec' for tree
> construction. But I just 
> don't get iterative AST construction to work here.
> Does anyone have an idea?
> 
> Andreas
> 



       
____________________________________________________________________________________
Choose the right car based on your needs.  Check out Yahoo! Autos new Car Finder tool.
http://autos.yahoo.com/carfinder/

From monstermanual at gmail.com  Wed Aug 22 12:22:43 2007
From: monstermanual at gmail.com (Jan-Willem van den Broek)
Date: Wed, 22 Aug 2007 21:22:43 +0200
Subject: [antlr-interest] Newbie conundrums
In-Reply-To: <46CBB1FE.5030208@cgorski.org>
References: <a75d6a110708211420j7adb6a7etce14019a4e0e572b@mail.gmail.com>
	<46CBB1FE.5030208@cgorski.org>
Message-ID: <a75d6a110708221222v38d68ae0l1fcd05e49f18db09@mail.gmail.com>

>
> In this case, you probably want to handle everything in the lexer.
> Replace "line" with "LINE" and you will find that ANTLR does what you
> want it to do.
>

Hmm, I hadn't thought of that. It does process the input like a charm.
Thanks for the idea!

But what would I do if I wanted those three individual values at a
higher level? Now they're just a single token. As a workaround I tried
putting them in return values, but that doesn't seem to be supported
in the lexer...

JW

From parrt at cs.usfca.edu  Wed Aug 22 14:04:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 22 Aug 2007 14:04:46 -0700
Subject: [antlr-interest] antlr.org server bouncing...
Message-ID: <9B158103-4C4E-4B12-BFE6-2D0C8568B833@cs.usfca.edu>

...be back up shortly.
Ter

From lothar at b-welcome.de  Wed Aug 22 14:17:23 2007
From: lothar at b-welcome.de (Lothar Burow)
Date: Wed, 22 Aug 2007 23:17:23 +0200
Subject: [antlr-interest] Need help on optional rule parts and
	stringtemplates
Message-ID: <7BD924D523D2405D821CBD224D7F5CDA@Hobbit>

Gurus,

I hope that's not too much an RTFM (or RTDAR :-)) question, but as a new ANTLR fan, I'm stuck with the problem below and would appreciate any help.

I'm trying to use ANTLR and Stringtemplates (great!) to write a little compiler for a 20 year-old processor, understanding an assembly-like language for process control systems. I would like to implement a sort of step chain with an if-else construct. My AST has the following structure:
^('if' ^(EXPR logExp) statement (^('elsif' ^(EXPR logExp) statement))*)

(where 'statement' is also a block of statements).

How do I need to set up my string templates in order to get the optional elsif subtrees emitted? I could probably split up the rule (first hack didn't work for me, though), but this looks not quite elegant to me. Is there a way to translate those constructs directly to stringtemplate syntax?

My next problem then is that I need to identify (and pass it to the stringtemplate) the "current block number" I'm in, while executing the statement block, to implement some memory management (number to be used as a reference to a memory cell). Any good advice on how to do this?

Any help will be very much appriciated. I'm a real newbie (and,yes, a book reader) in ANTLR and I like it very much, since I've collected some experience with lex and yacc in the "good old days" :-)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070822/5154e463/attachment.html 

From Waverly.Edwards at genesys.com  Wed Aug 22 14:29:48 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Wed, 22 Aug 2007 17:29:48 -0400
Subject: [antlr-interest] lexer: embedded quotes assistance
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>

This is probably pretty simple but I'm not getting it.
Would mind assisting me with a way to create a lex rule that
turns my original quoted string into the two versions below?

History...
I am replicating an existing language that uses embedded quotes
to indicate a quote character.  In addition to embedded quotes
the quoted material may span multiple lines by using the ?
character followed by a CR.  Now a rule for treating ?CR as
whitespace is not an issue as I just create a rule

CONTINUATION:
     :     '?'CR
     ;

because I need it for the language anyway but inside of a quote
is another matter.


original text: "I said, ""Hello."""

quote rule 1: "I said, "Hello.""

quote rule 2: I said, "Hello."

------------

My second problem is that the character ? followed immediately 
by a CR is used for line continuation

myString = "line ?
""continuation."""

print myString

result is: line "continuation"

How would I create a rule that would return the resulting string?



Suggestions are not just welcome they are highly sought after.


Thank you,


W.



From rschulz at sonic.net  Wed Aug 22 14:09:57 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 22 Aug 2007 14:09:57 -0700
Subject: [antlr-interest] antlr.org server bouncing...
In-Reply-To: <9B158103-4C4E-4B12-BFE6-2D0C8568B833@cs.usfca.edu>
References: <9B158103-4C4E-4B12-BFE6-2D0C8568B833@cs.usfca.edu>
Message-ID: <200708221409.57978.rschulz@sonic.net>


Just how elastic _is_ the ANTLR.org server??


RRS

From cgorski at cgorski.org  Wed Aug 22 14:34:12 2007
From: cgorski at cgorski.org (cgorski at cgorski.org)
Date: Wed, 22 Aug 2007 14:34:12 -0700
Subject: [antlr-interest] Newbie conundrums
In-Reply-To: <a75d6a110708221222v38d68ae0l1fcd05e49f18db09@mail.gmail.com>
References: <a75d6a110708211420j7adb6a7etce14019a4e0e572b@mail.gmail.com>
	<46CBB1FE.5030208@cgorski.org>
	<a75d6a110708221222v38d68ae0l1fcd05e49f18db09@mail.gmail.com>
Message-ID: <web-23016381@mail.blueboxgrid.com>

On Wed, 22 Aug 2007 21:22:43 +0200
  "Jan-Willem van den Broek" <monstermanual at gmail.com> 
wrote:
> But what would I do if I wanted those three individual 
>values at a
> higher level? Now they're just a single token. As a 
>workaround I tried
> putting them in return values, but that doesn't seem to 
>be supported
> in the lexer...
> 
> JW

Everything that you can do in the parser, you can do in 
the lexer.  What I would do is use return values and place 
them in some sort of data structure.  If isn't working for 
you, it's you, not ANTLR.

Look here:

http://www.cs.bris.ac.uk/Teaching/Resources/General/antlr/doc/lexer.html

and search for "A Surprising Use" on the page.  It has an 
example of the lexer returning values.  Keep in mind that 
the example uses an older version of ANTLR, but the 
general idea is the same.

-Chris


From sproctor at gmail.com  Wed Aug 22 16:59:24 2007
From: sproctor at gmail.com (Sean Proctor)
Date: Wed, 22 Aug 2007 19:59:24 -0400
Subject: [antlr-interest] parsing InputStream from a socket
Message-ID: <ca2a7adf0708221659g1eddcc2ck550c775ccc41048e@mail.gmail.com>

Hello,

I'm tasked with parsing a protocol that resembles XML. I was using a SAX
parser and fixing up the input to be valid XML. I switched from this to an
ANTLR lexer/parser that handles the data as it comes in. I can't figure out
how to get ANTLR to start parsing as soon as it has enough data to determine
what to do. I tried writing a CharStream that would serve this purpose, but
it seems that the tokenizer wants to keep going until the EOF. I haven't
spent too much time on it to determine if this is necessarily true, but I
think it's a good assumption. So my questions are: Does anyone have any
pointers on how to implement a tokenizer that will exhibit the behavior that
I desire? If I do that, will the parser do anything before it gets an EOF?
Are there any SAX implementations written in ANTLR that I could adapt or use
for reference?

Thanks,
Sean
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070822/05e6d0a8/attachment.html 

From martin.kohl at gmail.com  Wed Aug 22 17:53:15 2007
From: martin.kohl at gmail.com (Martin Kohl)
Date: Thu, 23 Aug 2007 02:53:15 +0200
Subject: [antlr-interest]  error(106)
Message-ID: <6d93992c0708221753m6246e0ffu74320163a05c9e30@mail.gmail.com>

Hello again,

I'm currently trying to get a grammar to compile so as to get an ExprLexer
and ExprParser out of it. The only errors I have left are called
error(106): Expr.g:Line:Pos: reference to undefined rule: ruleName

Every time I try to run the grammar, I get the same references, however
always in a different order. Ie. one time I'll get

C:\Expr\antlr-java>java -Xms32m -Xmx1000m org.antlr.Tool Expr.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(106): Expr.g:2:1: reference to undefined rule: ruleA
error(106): Expr.g:5:20: reference to undefined rule: ruleB
error(106): Expr.g:4:2: reference to undefined rule: ruleB
error(106): Expr.g:6:30: reference to undefined rule: ruleB
error(106): Expr.g:8:5: reference to undefined rule: ruleC
error(106): Expr.g:10:8: reference to undefined rule: ruleD
error(106): Expr.g:3:16: reference to undefined rule: ruleD
error(106): Expr.g:1:17: reference to undefined rule: ruleB
error(106): Expr.g:9:23: reference to undefined rule: ruleC

the next time I'll get:

C:\Expr\antlr-java>java -Xms32m -Xmx1000m org.antlr.Tool Expr.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(106): Expr.g:3:16: reference to undefined rule: ruleD
error(106): Expr.g:5:20: reference to undefined rule: ruleB
error(106): Expr.g:1:17: reference to undefined rule: ruleB
error(106): Expr.g:9:23: reference to undefined rule: ruleC
error(106): Expr.g:10:8: reference to undefined rule: ruleD
error(106): Expr.g:2:1: reference to undefined rule: ruleA
error(106): Expr.g:8:5: reference to undefined rule: ruleC
error(106): Expr.g:6:30: reference to undefined rule: ruleB
error(106): Expr.g:4:2: reference to undefined rule: ruleB

I also have references to these rules at other locations in the grammar
file, however these are never marked as erroneous. I always get the same
references, and always in a different order.

I've looked through the mailing list archives and haven't found any
solutions to this particular error. The whole file has the backtrack=true
option set.

I'd appreciate any ideas you guys have as to where this error may stem from
and what I can do to correct it.

Many thanks and kind Regards,
Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/23aef93a/attachment-0001.html 

From Waverly.Edwards at genesys.com  Wed Aug 22 19:06:46 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Wed, 22 Aug 2007 22:06:46 -0400
Subject: [antlr-interest] Lexer rule match keyword or
	identifierdepending on the previous token
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3061@navamane001.ad.internal.corp>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3461@navamane001.ad.internal.corp>


Interesting enough.  This afternoon I thought of a 
case that I will need to deal with that works exactly
like what you described.  Looking ahead is not going
to be the same as looking back or at the very least
the logic is going to be more complicated looking
ahead than looking back.  When I get to that point in
my grammar I'll let you know what I did.  I want to
deal with the case in the lexer and not the parser so
this should be interesting.  I don't know if there is
a 'previousToken' ( I doubt it ) since storing each token
seems like a waste I'll try to come up with something


W.


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Monday, August 20, 2007 9:22 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lexer rule match keyword or
identifierdepending on the previous token

 
Is this different that looking ahead?  If you are at token B and token A
determines how your respond to token B then wouldn't this be the same as
being at token A, looking ahead and seeing token B then responding the
same way?  I don't know the circumstance so I don't really know.  I
haven't figured out how the lookahead in ANTLR works just yet but I know
it exists.


W.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Guillaume
Chavanon
Sent: Monday, August 20, 2007 5:45 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Lexer rule match keyword or identifier
depending on the previous token

Hi all,

I am writing a grammar for a language that allow some keywords to be
identifiers if they are preceded by a special character.
Is it possible to add gated semantic predicate in a lexer rule that will
test the previous token ?
I would like to do something like this :

IDENTIFIER
    : { previousToken != ... }?=> 'KEYWORD1' {$type=KEYWORD1;}
    | { previousToken != ... }?=> 'KEYWORD2' {$type=KEYWORD2;}
    | 'A'..'Z' ( '_'? ( 'A'..'Z' | '0'..'9' ) )*
    ;

Thanks in advance,
Guillaume Chavanon

From tbrandonau at gmail.com  Wed Aug 22 20:00:15 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 23 Aug 2007 13:00:15 +1000
Subject: [antlr-interest] Newbie conundrums
In-Reply-To: <web-23016381@mail.blueboxgrid.com>
References: <a75d6a110708211420j7adb6a7etce14019a4e0e572b@mail.gmail.com>
	<46CBB1FE.5030208@cgorski.org>
	<a75d6a110708221222v38d68ae0l1fcd05e49f18db09@mail.gmail.com>
	<web-23016381@mail.blueboxgrid.com>
Message-ID: <ebc876d70708222000m1c3e71edw5fc5edbacff11b76@mail.gmail.com>

On 8/23/07, cgorski at cgorski.org <cgorski at cgorski.org> wrote:
> On Wed, 22 Aug 2007 21:22:43 +0200
>   "Jan-Willem van den Broek" <monstermanual at gmail.com>
> wrote:
> > But what would I do if I wanted those three individual
> >values at a
> > higher level? Now they're just a single token. As a
> >workaround I tried
> > putting them in return values, but that doesn't seem to
> >be supported
> > in the lexer...
> >
> > JW
>
> Everything that you can do in the parser, you can do in
> the lexer.  What I would do is use return values and place
> them in some sort of data structure.  If isn't working for
> you, it's you, not ANTLR.
>
> Look here:
>
> http://www.cs.bris.ac.uk/Teaching/Resources/General/antlr/doc/lexer.html
>
> and search for "A Surprising Use" on the page.  It has an
> example of the lexer returning values.  Keep in mind that
> the example uses an older version of ANTLR, but the
> general idea is the same.
ANTLR 3 does not support return values in the lexer.
By overriding emit and nextToken you can have ANTLR allow multiple
tokens to be emitted from a single rule which would be one way to
solve this issue. The basic idea is to replace the token variable with
a list of tokens.

Tom.
>
> -Chris
>
>

From nick.lee at nwlsolutions.com  Thu Aug 23 02:09:46 2007
From: nick.lee at nwlsolutions.com (Nick Lee (NWL Solutions Limited))
Date: Thu, 23 Aug 2007 10:09:46 +0100
Subject: [antlr-interest] String Template - doing a substring?
Message-ID: <000901c7e565$5ba92da0$12fb88e0$@lee@nwlsolutions.com>

Hi all,

I'm using the c# String Template and it seems a fantastic powerful piece of
software, which I'm sure I have only scratched the surface on.

 

I've got a very simple template where I would like to check the length of an
attribute passed (easily done using the c# strings length property). However
if this length is over a specified amount I would like to substring the
value.

 

I've looked at the docs and examples but cannot find how to call the sc#
string substring method etc, does anybody have any examples of comparing the
length of a string and then doing a substring?

 

For example .

$if(obj.description.Length()>20)$

obj.description.substring(0,20)

$else$

obj.description

$endif$

 

Any guidance is much appreciated.

 

Kind regards,

Nick

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/6dfb9936/attachment.html 

From jaluber at gmx.de  Thu Aug 23 02:56:54 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 23 Aug 2007 11:56:54 +0200
Subject: [antlr-interest] parsing InputStream from a socket
In-Reply-To: <ca2a7adf0708221659g1eddcc2ck550c775ccc41048e@mail.gmail.com>
References: <ca2a7adf0708221659g1eddcc2ck550c775ccc41048e@mail.gmail.com>
Message-ID: <46CD59E6.3010306@gmx.de>

Sean Proctor wrote:
> Hello,
> 
> I'm tasked with parsing a protocol that resembles XML. I was using a SAX
> parser and fixing up the input to be valid XML. I switched from this to
> an ANTLR lexer/parser that handles the data as it comes in. I can't
> figure out how to get ANTLR to start parsing as soon as it has enough
> data to determine what to do. I tried writing a CharStream that would
> serve this purpose, but it seems that the tokenizer wants to keep going
> until the EOF. I haven't spent too much time on it to determine if this
> is necessarily true, but I think it's a good assumption. So my questions
> are: Does anyone have any pointers on how to implement a tokenizer that
> will exhibit the behavior that I desire? If I do that, will the parser
> do anything before it gets an EOF? Are there any SAX implementations
> written in ANTLR that I could adapt or use for reference?
> 
> Thanks,
> Sean

The ANTLR lexer does tokenize the entire input at once. The only
solution is to overwrite nextToken() to prevent the call of fillBuffer()
(both methods should be in the lexer) and to implement yourself the
desired behaviour.

Best regards,
Johannes Luber

From jaluber at gmx.de  Thu Aug 23 03:01:21 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 23 Aug 2007 12:01:21 +0200
Subject: [antlr-interest] error(106)
In-Reply-To: <6d93992c0708221753m6246e0ffu74320163a05c9e30@mail.gmail.com>
References: <6d93992c0708221753m6246e0ffu74320163a05c9e30@mail.gmail.com>
Message-ID: <46CD5AF1.6020003@gmx.de>

Martin Kohl wrote:
> Hello again,
> 
> I'm currently trying to get a grammar to compile so as to get an
> ExprLexer and ExprParser out of it. The only errors I have left are called
> error(106): Expr.g:Line:Pos: reference to undefined rule: ruleName
> 
> Every time I try to run the grammar, I get the same references, however
> always in a different order. Ie. one time I'll get
> 
...
> 
> I'd appreciate any ideas you guys have as to where this error may stem
> from and what I can do to correct it.
> 
> Many thanks and kind Regards,
> Martin

Without posting your entire grammar it seems unlikely that we can help
you. If the error wasn't posted in the mailing list then it hasn't been
probably encountered before.

Best regards,
Johannes Luber

From guillaume.chavanon at systemsvip.com  Thu Aug 23 05:26:46 2007
From: guillaume.chavanon at systemsvip.com (Guillaume Chavanon)
Date: Thu, 23 Aug 2007 14:26:46 +0200
Subject: [antlr-interest] Lexer rule match keyword
 or	identifierdepending on the previous token
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3461@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3461@navamane001.ad.internal.corp>
Message-ID: <46CD7D06.9040802@systemsvip.com>

Hi,

I just wrote a function (in java) that look for the special character (a 
caret) backward in the TokenStream. We have to pass it as a lexer member.
The function skip hidden tokens. It can be use in a gated semantic 
predicate in the lexer to match "int", "char" or "string" as keyword or 
identifier.
I have successfully parse the following input :

int i1 = 30 ;
char c1 = 'h' ;
int i2 = c^int ;
string s1 = "hello" ;
char c2 = s1^ char(2) ;
int i3 = s1^char(2)^int ;

Where "int" and "char" after a caret are set as IDENTIFIER tokens 
whereas others are tokens of type INT, CHAR or STRING.
Even second "char" in line 5 witch previous token is a WS.

See attach grammar for more details.

Guillaume Chavanon


Edwards, Waverly wrote:
> Interesting enough.  This afternoon I thought of a 
> case that I will need to deal with that works exactly
> like what you described.  Looking ahead is not going
> to be the same as looking back or at the very least
> the logic is going to be more complicated looking
> ahead than looking back.  When I get to that point in
> my grammar I'll let you know what I did.  I want to
> deal with the case in the lexer and not the parser so
> this should be interesting.  I don't know if there is
> a 'previousToken' ( I doubt it ) since storing each token
> seems like a waste I'll try to come up with something
>
>
> W.
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
> Sent: Monday, August 20, 2007 9:22 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer rule match keyword or
> identifierdepending on the previous token
>
>  
> Is this different that looking ahead?  If you are at token B and token A
> determines how your respond to token B then wouldn't this be the same as
> being at token A, looking ahead and seeing token B then responding the
> same way?  I don't know the circumstance so I don't really know.  I
> haven't figured out how the lookahead in ANTLR works just yet but I know
> it exists.
>
>
> W.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Guillaume
> Chavanon
> Sent: Monday, August 20, 2007 5:45 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer rule match keyword or identifier
> depending on the previous token
>
> Hi all,
>
> I am writing a grammar for a language that allow some keywords to be
> identifiers if they are preceded by a special character.
> Is it possible to add gated semantic predicate in a lexer rule that will
> test the previous token ?
> I would like to do something like this :
>
> IDENTIFIER
>     : { previousToken != ... }?=> 'KEYWORD1' {$type=KEYWORD1;}
>     | { previousToken != ... }?=> 'KEYWORD2' {$type=KEYWORD2;}
>     | 'A'..'Z' ( '_'? ( 'A'..'Z' | '0'..'9' ) )*
>     ;
>
> Thanks in advance,
> Guillaume Chavanon
>   
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Keyword_As_Identifier.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/0c9359e1/attachment.pl 

From andreas.bartho at inf.tu-dresden.de  Thu Aug 23 05:47:39 2007
From: andreas.bartho at inf.tu-dresden.de (Andreas Bartho)
Date: Thu, 23 Aug 2007 14:47:39 +0200
Subject: [antlr-interest] Problems with AST construction
In-Reply-To: <170056.6269.qm@web55907.mail.re3.yahoo.com>
References: <170056.6269.qm@web55907.mail.re3.yahoo.com>
Message-ID: <46CD81EB.1060302@inf.tu-dresden.de>

Hi Loring,

thank you for your answer.
I have tried something similar (see middle part of my original mail), 
unfortunately this will fail when the grammar gets bigger (I have not 
yet identified the real reason for this).

After a good night's sleep I finally managed to find a solution which 
I'd like to share in case anyone runs into similar problems.

The main thought is to inline all recursive rules (invocation, 
increment, decrement in my case). This is ugly, but it works. Even stuff 
like i()++(j--)(i()++(u--))--++++ is parsed correctly.

Cheers
	Andreas


grammar recstatement;
options {output=AST; k=*; backtrack=true;}
	
tokens {
	Invocation;
	SimpleName;
	Increment;
	Decrement;
}
	

primary : invocation | increment | decrement | nonrec ;

nonrec  : simplename ;
	
invocation
	:	(nonrec -> nonrec)
		(
			(
				increment_rest -> ^(Increment $invocation increment_rest)
			|	decrement_rest -> ^(Decrement $invocation decrement_rest)
			)*
			
			invocation_rest -> ^(Invocation $invocation invocation_rest))+
	;	
	
increment
	:	(nonrec -> nonrec)
		(
			(
				invocation_rest -> ^(Invocation $increment invocation_rest)
			|	decrement_rest -> ^(Decrement $increment decrement_rest)	
			)*
			
			increment_rest -> ^(Increment $increment increment_rest))+
	;	

decrement
	:	(nonrec -> nonrec)
		(
			(
				invocation_rest -> ^(Invocation $decrement invocation_rest)
			|	increment_rest -> ^(Increment $decrement increment_rest)	
			)*
			
			decrement_rest -> ^(Decrement $decrement decrement_rest))+
	;	
	

invocation_rest : '(' primary* ')' ;
	
increment_rest : '++' ;
	
decrement_rest : '--' ;		

simplename : Identifier  -> ^(SimpleName Identifier)
	;

Identifier
     :   'a'..'z'*
     ;


From Abhijit_Ghonge at infosys.com  Thu Aug 23 05:48:51 2007
From: Abhijit_Ghonge at infosys.com (Abhijit Nandkumar Ghonge)
Date: Thu, 23 Aug 2007 18:18:51 +0530
Subject: [antlr-interest] implementing 'if' and 'while' grammar with actions
Message-ID: <13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A7@BLRKECMBX05.ad.infosys.com>


Hi all,

I want to implement parser grammar for 'if' and 'while' statement with actions in it.
My script is :

var1=10
if ( var1 < 9 ) then
var1++
print (var1)
endif

How do I skip the execution of the statements if the "if-condition" is false as in the above case?

I searched for the grammar implementation in the site, but all examples where implementing grammar rules for "if" and "while" without actions in them. I want to embed actions in the grammars.
Please give some pointers to "if" or "while" grammar implementation with actions in it.
Please Help.

thanks,
Abhijit


**************** CAUTION - Disclaimer *****************
This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended solely for the use of the addressee(s). If you are not the intended recipient, please notify the sender by e-mail and delete the original message. Further, you are not to copy, disclose, or distribute this e-mail or its contents to any other person and any such actions are unlawful. This e-mail may contain viruses. Infosys has taken every reasonable precaution to minimize this risk, but is not liable for any damage you may sustain as a result of any virus in this e-mail. You should carry out your own virus checks before opening the e-mail or attachment. Infosys reserves the right to monitor and review the content of all messages sent to or from this e-mail address. Messages sent to or from this e-mail address may be stored on the Infosys e-mail system.
***INFOSYS******** End of Disclaimer ********INFOSYS***
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/d41165ea/attachment-0001.html 

From JB0284 at att.com  Thu Aug 23 06:02:27 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Thu, 23 Aug 2007 06:02:27 -0700
Subject: [antlr-interest] String Template - doing a substring?
In-Reply-To: <000901c7e565$5ba92da0$12fb88e0$@lee@nwlsolutions.com>
References: <000901c7e565$5ba92da0$12fb88e0$@lee@nwlsolutions.com>
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB480321EB7F@BD01MSXMB021.US.Cingular.Net>

Stringtemplate does not have comparison capability like what you
describe. You have to do your business logic in code. 

 

Best regards,

Jeff

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Nick Lee (NWL
Solutions Limited)
Sent: Thursday, August 23, 2007 5:10 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] String Template - doing a substring?

 

Hi all,

I'm using the c# String Template and it seems a fantastic powerful piece
of software, which I'm sure I have only scratched the surface on.

 

I've got a very simple template where I would like to check the length
of an attribute passed (easily done using the c# strings length
property). However if this length is over a specified amount I would
like to substring the value.

 

I've looked at the docs and examples but cannot find how to call the sc#
string substring method etc, does anybody have any examples of comparing
the length of a string and then doing a substring?

 

For example ...

$if(obj.description.Length()>20)$

obj.description.substring(0,20)

$else$

obj.description

$endif$

 

Any guidance is much appreciated.

 

Kind regards,

Nick

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/767af59c/attachment.html 

From parrt at cs.usfca.edu  Thu Aug 23 09:19:39 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Aug 2007 09:19:39 -0700
Subject: [antlr-interest] optional rule refs
Message-ID: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>

Howdy,

When obtained results from optional rule refs in template generation,  
you can get a null ptr:

		^('if' completeExpression s=statement (el=statement)?)
		-> if(cond={$completeExpression.st}, stat={$s.st}, elsestat={$el.st})

here, el is optional and hence null sometimes.  $el.st will cause an  
exception.  There is no way to test $el by itself as it needs a  
property.  There is no other token/node to test either.

I propose that all refs to rule properties become the equivalent of:

$rr!=null?$rr.property:null

It causes a lot of branching unnecessarily when rr is not null, but  
makes life much easier.  A number of people have run into this.  I  
suppose if it's too "inefficient" for some, they can tweak the  
templates to remove the ?: operation.

Comments?

Ter

From matthew.j.diehl at intel.com  Thu Aug 23 09:33:27 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Thu, 23 Aug 2007 09:33:27 -0700
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
Message-ID: <A10CD303B51F814DB568A8AAF02174C202866FA9@orsmsx417.amr.corp.intel.com>

> History...
> I am replicating an existing language that uses embedded quotes
> to indicate a quote character.  

I'll show you something I wrote that worked...but there's probably some other simpler ways using '.'
My quoted text can only use graphic characters (a-z 0-9 SpaceCharacters, and other graphic characters (\u00a1 - \u00ff).

StringLiteral
  :Quote GraphicCharacter* Quote
  ;
fragment
GraphicCharacter
  : UpperCaseLetter | LowerCaseLetter | Digit | SpecialCharacter | SpaceCharacter | (Quote Quote)
  ;

But since it matches double quotes, it will continue when it sees one

> In addition to embedded quotes
> the quoted material may span multiple lines by using the ?
> character followed by a CR.  Now a rule for treating ?CR as
> whitespace is not an issue as I just create a rule

I'm sure if you include the CR rule above, it would work as well

Ok,

Matt

From jaluber at gmx.de  Thu Aug 23 09:39:55 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 23 Aug 2007 18:39:55 +0200
Subject: [antlr-interest] optional rule refs
In-Reply-To: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
References: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
Message-ID: <46CDB85B.3080603@gmx.de>

Terence Parr wrote:
> Howdy,
> 
> When obtained results from optional rule refs in template generation,
> you can get a null ptr:
> 
>         ^('if' completeExpression s=statement (el=statement)?)
>         -> if(cond={$completeExpression.st}, stat={$s.st},
> elsestat={$el.st})
> 
> here, el is optional and hence null sometimes.  $el.st will cause an
> exception.  There is no way to test $el by itself as it needs a
> property.  There is no other token/node to test either.
> 
> I propose that all refs to rule properties become the equivalent of:
> 
> $rr!=null?$rr.property:null
> 
> It causes a lot of branching unnecessarily when rr is not null, but
> makes life much easier.  A number of people have run into this.  I
> suppose if it's too "inefficient" for some, they can tweak the templates
> to remove the ?: operation.
> 
> Comments?
> 
> Ter
> 

I like this. I've looked over my uses and I used either your pattern or
implemented my own. For the first your proposal simplifies things and
the other cases don't seem do be affected negatively.

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Thu Aug 23 09:57:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Aug 2007 09:57:47 -0700
Subject: [antlr-interest] optional rule refs
In-Reply-To: <46CDB85B.3080603@gmx.de>
References: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
	<46CDB85B.3080603@gmx.de>
Message-ID: <FC49AF99-742E-4245-969B-BE5D2B1E5765@cs.usfca.edu>


On Aug 23, 2007, at 9:39 AM, Johannes Luber wrote:
> I like this. I've looked over my uses and I used either your  
> pattern or
> implemented my own. For the first your proposal simplifies things and
> the other cases don't seem do be affected negatively.

Ok, i'll try it out.  It's driving me nuts remembering when I need  
the ?:

Ter

From ganelin at mail.com  Thu Aug 23 11:02:07 2007
From: ganelin at mail.com (Pavel Ganelin)
Date: Thu, 23 Aug 2007 14:02:07 -0400
Subject: [antlr-interest] If statement for Tree-based Interpreter: is it the
 correct way to do it?
Message-ID: <46CDCB9F.2050301@mail.com>


Hi,

I found that in ANTLR v3 it is more difficult to skip the child for tree 
walker compare with v2. Is it true or it is just learning curve?

Below I attached how I process if statement for a tree-based 
interpreter. Please note that I had to add artificial token EOL while 
building the tree in the parser so that I could position the cursor just 
before Token.UP. I did not find a way to move the pointer to the last 
node of the the given tree ($s in the example below). Start and Stop 
indexes in the tree node point to the original token tree, not the 
CommonTreeNodeStream.

Is it the way it is supposed to be implemented? If not what is the 
correct approach

PS. I did read  
http://www.antlr.org/wiki/display/ANTLR3/Simple+tree-based+interpeter. 
It does not cover this question.

Thanks,
Pavel
==================================================== grammar 
==========================
ifStatement
:
   ^(s=IF  e=eval
        /*
          ^(then=SLIST)
          ^(els=SLIST )
          EOL // artificial token added by parser to help position
              // stream after evaluation

        */
   {
        CommonTreeNodeStream stream = (CommonTreeNodeStream) input;
        Tree then=$s.getChild(1);
        Tree els =$s.getChild(2);

        if ($e.value) {
            input.seek(stream.getNodeIndex(then));
            slist(queue);
        }
        else {
            input.seek(stream.getNodeIndex(els));
            slist(queue);
        }
        input.seek(stream.getNodeIndex($s.getChild(3)));
   }
   EOL)
;

//   evaluates the expression

eval returns [bool value] :
^(EXPR
    ....

);

//   process statements:
  ^(SLIST
....

)
;



From parrt at cs.usfca.edu  Thu Aug 23 11:31:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Aug 2007 11:31:32 -0700
Subject: [antlr-interest] If statement for Tree-based Interpreter: is it
	the correct way to do it?
In-Reply-To: <46CDCB9F.2050301@mail.com>
References: <46CDCB9F.2050301@mail.com>
Message-ID: <6B7FCD1D-D88C-407F-B1A0-179067D9B42E@cs.usfca.edu>


On Aug 23, 2007, at 11:02 AM, Pavel Ganelin wrote:

>
> Hi,
>
> I found that in ANTLR v3 it is more difficult to skip the child for  
> tree walker compare with v2. Is it true or it is just learning curve?
>
> Below I attached how I process if statement for a tree-based  
> interpreter. Please note that I had to add artificial token EOL  
> while building the tree in the parser so that I could position the  
> cursor just before Token.UP. I did not find a way to move the  
> pointer to the last node of the the given tree ($s in the example  
> below). Start and Stop indexes in the tree node point to the  
> original token tree, not the CommonTreeNodeStream.
>
> Is it the way it is supposed to be implemented? If not what is the  
> correct approach
>
> PS. I did read  http://www.antlr.org/wiki/display/ANTLR3/Simple 
> +tree-based+interpeter. It does not cover this question.

Hi Pavel,

 From that page:

^(FUNC name=ID arg=ID .)

The dot skips the body subtree :)

Ter

From kenny at kmdconsulting.ca  Thu Aug 23 11:58:17 2007
From: kenny at kmdconsulting.ca (Kenny MacDermid)
Date: Thu, 23 Aug 2007 14:58:17 -0400
Subject: [antlr-interest] NoViableAltException - Am I trying to do too
	much with the Lexer?
In-Reply-To: <8367efd50708211249q7072a234j6dbc82e141766367@mail.gmail.com>
References: <8367efd50708211249q7072a234j6dbc82e141766367@mail.gmail.com>
Message-ID: <8367efd50708231158r5dbb746dgecbe2ac2bad80766@mail.gmail.com>

Okay, I've got a solution that passes the tests, but I'm not a fan of it.

I've added to REALNUMBER:
    | ('0' '..')=> '0' { $type = NUMBER; }

and to NUMBER:
     | ('0' '0'..'9')=> DIGIT+ { $type = REALNUMBER; }

So now the rules are interdependent. Can anyone suggest a cleaner solution?

Kenny

On 8/21/07, Kenny MacDermid <kenny at kmdconsulting.ca> wrote:
>
> Hello all,
>
> I'm looking to developer (in Antlr 3, using TDD) a lexer and parser for a
> grammar that contains (among others):
>
> Numbers - Start with a '1'..'9',  or are just the digit '0'
> Real Numbers - Start with anything. May contain a decimal part. May
> contain an exponent part.
> Range - '..'
> Ellipsis - '...'
>
> I've been messing with everything I can think of for lexer rules, but
> always end up getting NoViableAltException's. This is what I currently have:
>
>
> NUMBER
>         : ( ('1' .. '9' DIGIT* '..')=> DIGIT*
>           | ('0' (~(DIGIT) | EOF))=> '0'
>           | ('1' .. '9' DIGIT*)
>           )
>         ;
>
> fragment
> REALNUMBEREXP
>         : ( ('e' | 'E') '-'? NUMBER )
>         ;
>
> fragment
> REALNUMBERDOTREM
>         : '.' DIGIT* REALNUMBEREXP?
>         ;
>
> REALNUMBER
>         : ( (DIGIT+ ('.' (~('.') | EOF)))=> DIGIT+ REALNUMBERDOTREM
>           | (DIGIT+ ('e' | 'E'))=> DIGIT+ REALNUMBEREXP
>           | ('0'+ '1'..'9')=> DIGIT+ REALNUMBERDOTREM?
>           )
>         ;
>
>
> This is resulting in:
>
> NoViableAltException(48!=[167:4: ( ( '1' .. '9' ( DIGIT )* '..' )=> (
> DIGIT )* | ( '0' (~ ( DIGIT ) | EOF ) )=> '0' | (
> '1' .. '9' ( DIGIT )* ) )])
>
> from the location of: Lexer.mNUMBER() on the attempted lexing of:
>
> testLexerToken("0123", "0123", REALNUMBER);
> (testLexerToken takes: input, expected output, expected type)
>
> So, am I expecting too much from my lexer to have it distinguish between a
> number and a real number? I could just have it return one token for either
> and work it out later at the parsing level, although this does sound kludgy
> to me. Does anyone have any tips on how to go about solving this?
>
> Thanks,
>
> Kenny
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/6c2b8ce6/attachment-0001.html 

From monty at codetransform.com  Thu Aug 23 12:03:51 2007
From: monty at codetransform.com (Monty Zukowski)
Date: Thu, 23 Aug 2007 12:03:51 -0700
Subject: [antlr-interest] new tree question
Message-ID: <598864c70708231203l281b3c5al191d7bc36d0aaf3c@mail.gmail.com>

logicExpr
    : relExpr
      ( llogicOperator^
        relExpr
      )*
    ;


I can't quite get my head around how to write this in the new tree
rewrite-> syntax.  I realize that the above will work, but I'm curious
to know how it would look in the new syntax.

Monty

From toacy.oliveira at pucrs.br  Thu Aug 23 12:04:43 2007
From: toacy.oliveira at pucrs.br (Toacy Cavalcante de Oliveira)
Date: Thu, 23 Aug 2007 16:04:43 -0300
Subject: [antlr-interest] Executing commands
Message-ID: <09643FFF9FDFA440973A987BAC67ACD803B66BF1@ENIF.portoalegre.pucrsnet.br>

Hi all,
 
I'm planning to use it within my research scenario. I have developed a languange that operates on UML Models in an I have a pretty basic environment that executes scripts in that language.  The idead of using ANTLR is to create a full scale environment that is realized as an Eclipse plugin. I read your book and I found that creating a AST Walker will help me to execute the commands in my language such as assignments, loops and UML Model manipulation. Do you think this is feasible with ANTLR and AST Walkers?  
 
cheers
 
--------------------------------------------------------------------------------------
Toacy C. Oliveira, PhD
Associate Professor
www.inf.pucrs.br/~toacy <http://www.inf.pucrs.br/~toacy>  
www.inf.pucrs.br/~sofa <http://www.inf.pucrs.br/~sofa> 
Faculty of Informatics PUCRS
Pontifical Catholic University of Rio Grande do Sul
Av. Ipiranga 6681, Pr?dio 32, S. 644
Porto Alegre - RS , Brazil - ZIP 90619-900
Phone : 55-51-3320-3558 ext 8644
Aviso de confidencialidade: Esta mensagem ? destinada para uso exclusivo do (s) destinat?rio (s). ? proibido qualquer uso, altera??o, reprodu??o e distribui??o n?o autorizados. Se voc? n?o ? o destinat?rio correto, por favor entre em contato com o remetente e apague todas as c?pias.
Warning: This message is meant only for the intended recipient of the transmission. It is forbidden any unauthorized use, alteration, reproduction and distribution. If you are not the correct recipient, please notify us immediately by return e-mail and delete this message from your system

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070823/a73bbc4f/attachment.html 

From Waverly.Edwards at genesys.com  Thu Aug 23 12:39:26 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Thu, 23 Aug 2007 15:39:26 -0400
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>


Well after a lot more reading it is still not easy.  Below is what I've done to capture the quoted text.  I'm hoping someone can assist me.  My grammar is very short as at this point I just need to get past capturing quotations with embedded quotes.  Below that is the code I used to test what I was doing was correct ( or seemingly correct ).  The code below the grammar works just fine.  I decided that instead of making an exception to allow the continuation across lines I would throw an error if there was not one, thereby saving myself more headaches.

I'm hoping someone has some ideas on how I can get over this hurdle.


Thanks,


W.


grammar QUOTETEST;


prog	:	start+ ;

start	:	NEWLINE
	|	DBLQUOTE
	;
	
NEWLINE	:	'\r'? '\n';
   
DBLQUOTE :   ('"' ( options {  greedy=false; }: . )  '"') 
//DBLQUOTE  : '"' ( options {greedy=false;} : . )* '"'
	  {
	        
		int where, lastCharPos;
        	String quote, dblDblQuote;
        	StringBuffer txt;
        	char quoteChr = 34;
        
        	dblDblQuote = "\"\"";
		txt = new StringBuffer(getText());
        	lastCharPos = txt.length( )-1;
        
        // Remove first and last double-quote if they exist
        	if ( txt.charAt(0) == quoteChr ) txt.deleteCharAt(0);
        	if ( txt.charAt( lastCharPos ) == quoteChr ) txt.deleteCharAt( lastCharPos );
        
        // -------------
        // DO SOMETHING HERE TO HANDLE UNTERMINATED STRING
        // -------------
        
        	while (( where = txt.lastIndexOf( dblDblQuote ) ) >= 0) {
            		txt.deleteCharAt(where);
        	}
        
		setText(txt.toString()); 
        	System.out.println(txt.toString());
        

	  };
	

// ----------------------------------------------------------------


package quotedstrings;

public class Main {
    
    public static void showQuotedStringWithWrap(String testStr ) {
        int where, lastCharPos;
        String quote, dblDblQuote;
        StringBuffer txt;
        char quoteChr = 34;
        
//        quote = Character.toString(quoteChr);
//        dblDblQuote = Character.toString(quoteChr) + Character.toString(quoteChr);
        dblDblQuote = "\"\"";
        txt = new StringBuffer( testStr );
        lastCharPos = txt.length( )-1;
        
        // Remove first and last double-quote if they exist
        if ( txt.charAt(0) == quoteChr ) txt.deleteCharAt(0);
        if ( txt.charAt( lastCharPos ) == quoteChr ) txt.deleteCharAt( lastCharPos );
        
        // -------------
        // DO SOMETHING HERE TO HANDLE UNTERMINATED STRING
        // -------------
        
        while (( where = txt.lastIndexOf( dblDblQuote ) ) >= 0) {
            txt.deleteCharAt(where);
        }
        
        System.out.println(txt.toString());
        
    }
    
    
    public static void showDoubleQuotedString(String testStr ) {
        int where, lastCharPos;
        String quote, dblDblQuote;
        StringBuffer txt;
        char quoteChr = 34;
        
//        quote = Character.toString(quoteChr);
//        dblDblQuote = Character.toString(quoteChr) + Character.toString(quoteChr);
        dblDblQuote = "\"\"";
        txt = new StringBuffer( testStr );
        lastCharPos = txt.length( )-1;
        
        // Remove first and last double-quote if they exist
        if ( txt.charAt(0) == quoteChr ) txt.deleteCharAt(0);
        if ( txt.charAt( lastCharPos ) == quoteChr ) txt.deleteCharAt( lastCharPos );
        
        // -------------
        // DO SOMETHING HERE TO HANDLE UNTERMINATED STRING
        // -------------
        
        while (( where = txt.lastIndexOf( dblDblQuote ) ) >= 0) {
            txt.deleteCharAt(where);
        }
        
        System.out.println(txt.toString());
        
    }
    
    /** Creates a new instance of Main */
    public Main() {
    }
    
    public static void main(String[] args) {
        char cr = 34;
        String testStr, quote, dblDblQuote;
        quote = "\"";
//        String dblDblQuote = Character.toString(cr) + Character.toString(cr);
        dblDblQuote = "\"\"";
        testStr = "Hello, is it me your looking for?";
        showDoubleQuotedString( testStr );
        testStr = "I said, " + dblDblQuote + "Hello." + dblDblQuote;
        showDoubleQuotedString( testStr );
        testStr = "I said, " + quote + "Hello." + quote;
        showDoubleQuotedString( testStr );
    }
}
 



-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Wednesday, August 22, 2007 5:30 PM
To: antlr
Subject: [antlr-interest] lexer: embedded quotes assistance

This is probably pretty simple but I'm not getting it.
Would mind assisting me with a way to create a lex rule that turns my original quoted string into the two versions below?

History...
I am replicating an existing language that uses embedded quotes to indicate a quote character.  In addition to embedded quotes the quoted material may span multiple lines by using the ? character followed by a CR.  Now a rule for treating ?CR as whitespace is not an issue as I just create a rule

CONTINUATION:
     :     '?'CR
     ;

because I need it for the language anyway but inside of a quote is another matter.


original text: "I said, ""Hello."""

quote rule 1: "I said, "Hello.""

quote rule 2: I said, "Hello."

------------

My second problem is that the character ? followed immediately by a CR is used for line continuation

myString = "line ?
""continuation."""

print myString

result is: line "continuation"

How would I create a rule that would return the resulting string?



Suggestions are not just welcome they are highly sought after.


Thank you,


W.



From antlr at mirality.co.nz  Thu Aug 23 12:41:37 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 24 Aug 2007 07:41:37 +1200
Subject: [antlr-interest] optional rule refs
In-Reply-To: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
References: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
Message-ID: <20070823194147.68BC111EB25@www.antlr.org>

At 04:19 24/08/2007, Terence Parr wrote:
 >		^('if' completeExpression s=statement (el=statement)?)
 >		-> if(cond={$completeExpression.st}, stat={$s.st},
 >elsestat={$el.st})
 >
 >here, el is optional and hence null sometimes.  $el.st will 
cause
 >an exception.  There is no way to test $el by itself as it needs 
a
 >property.  There is no other token/node to test either.
 >
 >I propose that all refs to rule properties become the equivalent 

 >of:
 >
 >$rr!=null?$rr.property:null
 >
 >It causes a lot of branching unnecessarily when rr is not null,
 >but makes life much easier.  A number of people have run into
 >this.  I suppose if it's too "inefficient" for some, they can
 >tweak the templates to remove the ?: operation.

To remove some of the branching, ANTLR could remember whether a 
given label is used within an optional construct or not.  (Where 
"optional construct" means a ? block, * block, or an alt that 
doesn't assign it -- basically whether any path on the DFA exists 
between rule start and the point of label use where the label may 
not be assigned.)  That way it would only need to inject the null 
check if it knows that null is a possibility.

This is probably going a little overboard, though -- and the 
difference will most likely be negligible unless you're processing 
megabytes of source files.


From rschulz at sonic.net  Thu Aug 23 12:41:49 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 23 Aug 2007 12:41:49 -0700
Subject: [antlr-interest] optional rule refs
In-Reply-To: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
References: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
Message-ID: <200708231241.49721.rschulz@sonic.net>

On Thursday 23 August 2007 09:19, Terence Parr wrote:
> Howdy,
>
> When obtained results from optional rule refs in template generation,
> you can get a null ptr:
>
> ...
>
> I propose that all refs to rule properties become the equivalent of:
>
> $rr!=null?$rr.property:null
>
> ...

Someone's been looking into Groovy?

It has a ?. dereference operator which has precisely the semantics 
you're describing.


> Comments?
>
> Ter


Randall Schulz

From Waverly.Edwards at genesys.com  Thu Aug 23 12:43:01 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Thu, 23 Aug 2007 15:43:01 -0400
Subject: [antlr-interest] Lexer rule match keyword
	or	identifierdepending on the previous token
In-Reply-To: <46CD7D06.9040802@systemsvip.com>
References: <FF993752CB890B4EB591BE5450C37BF1AA3461@navamane001.ad.internal.corp>
	<46CD7D06.9040802@systemsvip.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3593@navamane001.ad.internal.corp>

 
I'll have to look this over quite a few times.
I'm not savvy enough yet to understand how this works.


W.

-----Original Message-----
From: Guillaume Chavanon [mailto:guillaume.chavanon at systemsvip.com] 
Sent: Thursday, August 23, 2007 8:27 AM
To: Edwards, Waverly
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lexer rule match keyword or
identifierdepending on the previous token

Hi,

I just wrote a function (in java) that look for the special character (a
caret) backward in the TokenStream. We have to pass it as a lexer
member.
The function skip hidden tokens. It can be use in a gated semantic
predicate in the lexer to match "int", "char" or "string" as keyword or
identifier.
I have successfully parse the following input :

int i1 = 30 ;
char c1 = 'h' ;
int i2 = c^int ;
string s1 = "hello" ;
char c2 = s1^ char(2) ;
int i3 = s1^char(2)^int ;

Where "int" and "char" after a caret are set as IDENTIFIER tokens
whereas others are tokens of type INT, CHAR or STRING.
Even second "char" in line 5 witch previous token is a WS.

See attach grammar for more details.

Guillaume Chavanon


Edwards, Waverly wrote:
> Interesting enough.  This afternoon I thought of a case that I will 
> need to deal with that works exactly like what you described.  Looking

> ahead is not going to be the same as looking back or at the very least

> the logic is going to be more complicated looking ahead than looking 
> back.  When I get to that point in my grammar I'll let you know what I

> did.  I want to deal with the case in the lexer and not the parser so 
> this should be interesting.  I don't know if there is a 
> 'previousToken' ( I doubt it ) since storing each token seems like a 
> waste I'll try to come up with something
>
>
> W.
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, 
> Waverly
> Sent: Monday, August 20, 2007 9:22 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Lexer rule match keyword or 
> identifierdepending on the previous token
>
>  
> Is this different that looking ahead?  If you are at token B and token

> A determines how your respond to token B then wouldn't this be the 
> same as being at token A, looking ahead and seeing token B then 
> responding the same way?  I don't know the circumstance so I don't 
> really know.  I haven't figured out how the lookahead in ANTLR works 
> just yet but I know it exists.
>
>
> W.
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Guillaume 
> Chavanon
> Sent: Monday, August 20, 2007 5:45 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer rule match keyword or identifier 
> depending on the previous token
>
> Hi all,
>
> I am writing a grammar for a language that allow some keywords to be 
> identifiers if they are preceded by a special character.
> Is it possible to add gated semantic predicate in a lexer rule that 
> will test the previous token ?
> I would like to do something like this :
>
> IDENTIFIER
>     : { previousToken != ... }?=> 'KEYWORD1' {$type=KEYWORD1;}
>     | { previousToken != ... }?=> 'KEYWORD2' {$type=KEYWORD2;}
>     | 'A'..'Z' ( '_'? ( 'A'..'Z' | '0'..'9' ) )*
>     ;
>
> Thanks in advance,
> Guillaume Chavanon
>   

From Waverly.Edwards at genesys.com  Thu Aug 23 12:46:12 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Thu, 23 Aug 2007 15:46:12 -0400
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C202866FA9@orsmsx417.amr.corp.intel.com>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
	<A10CD303B51F814DB568A8AAF02174C202866FA9@orsmsx417.amr.corp.intel.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA3596@navamane001.ad.internal.corp>


I *think* I understand.  I will have to try it out, run it through the
debugger to ensure I understand how it works.  Its much more elegant
than my solution, which strangely enough doesn't even work.


W. 

-----Original Message-----
From: Diehl, Matthew J [mailto:matthew.j.diehl at intel.com] 
Sent: Thursday, August 23, 2007 12:33 PM
To: Edwards, Waverly; antlr
Subject: RE: [antlr-interest] lexer: embedded quotes assistance

> History...
> I am replicating an existing language that uses embedded quotes to 
> indicate a quote character.

I'll show you something I wrote that worked...but there's probably some other simpler ways using '.'
My quoted text can only use graphic characters (a-z 0-9 SpaceCharacters, and other graphic characters (\u00a1 - \u00ff).

StringLiteral
  :Quote GraphicCharacter* Quote
  ;
fragment
GraphicCharacter
  : UpperCaseLetter | LowerCaseLetter | Digit | SpecialCharacter | SpaceCharacter | (Quote Quote)
  ;

But since it matches double quotes, it will continue when it sees one

> In addition to embedded quotes
> the quoted material may span multiple lines by using the ? character 
> followed by a CR.  Now a rule for treating ?CR as whitespace is not an 
> issue as I just create a rule

I'm sure if you include the CR rule above, it would work as well

Ok,

Matt

From antlr at mirality.co.nz  Thu Aug 23 12:46:46 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 24 Aug 2007 07:46:46 +1200
Subject: [antlr-interest] NoViableAltException - Am I trying to do too
 much with the Lexer?
In-Reply-To: <8367efd50708231158r5dbb746dgecbe2ac2bad80766@mail.gmail.co
 m>
References: <8367efd50708211249q7072a234j6dbc82e141766367@mail.gmail.com>
	<8367efd50708231158r5dbb746dgecbe2ac2bad80766@mail.gmail.com>
Message-ID: <20070823194651.CCD9211EB6E@www.antlr.org>

At 06:58 24/08/2007, Kenny MacDermid wrote:
>Okay, I've got a solution that passes the tests, but I'm not a 
>fan of it.
>
>I've added to REALNUMBER:
>     | ('0' '..')=> '0' { $type = NUMBER; }
>
>and to NUMBER:
>      | ('0' '0'..'9')=> DIGIT+ { $type = REALNUMBER; }
>
>So now the rules are interdependent. Can anyone suggest a cleaner 
>solution?

The usual approach is to make one a fake token (declared in the 
tokens block) and put all the actual rule code into one rule 
(usually the simplest one), in a similar style to how you'd "parse 
it by eye".  In your case:

NUMBER
   :  DIGIT+
     ('.' DIGIT+ { $type = REALNUMBER; })?
   ;

(You'll need to expand on this to get the other cases you want to 
accept, but this should give you a starting point.) 


From antlr at mirality.co.nz  Thu Aug 23 13:02:01 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 24 Aug 2007 08:02:01 +1200
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.inte
	rnal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>
Message-ID: <20070823200209.4579C11EACE@www.antlr.org>

At 07:39 24/08/2007, Edwards, Waverly wrote:
 >Well after a lot more reading it is still not 
easy.  Below is what
 >I've done to capture the quoted text.  I'm hoping someone can
 >assist me.  My grammar is very short as at this 
point I just need
 >to get past capturing quotations with embedded 
quotes.  Below that
 >is the code I used to test what I was doing was correct ( or
 >seemingly correct ).  The code below the 
grammar works just fine.
 >I decided that instead of making an exception to allow the
 >continuation across lines I would throw an 
error if there was not
 >one, thereby saving myself more headaches.

Not tested, but this ought to do what you want:

DBLQUOTE
   :  '"'
      (~'"' | '""')*
      '"'
   ;

(This will also permit line breaks inside 
strings.  If you want to disallow that then just 
change the ~'"' into ~('"' | NEWLINE).)

This will match the entire string properly 
(detecting embedded double-quotes vs. the string 
terminator), but won't strip the surrounding 
quotes nor remove one of each quote pair.  I'm 
not a Javaite, so I can't give you exact code, 
but something along these lines ought to do that:

   String original = $getText();
   String text = original.substring(1, original.length() - 2);
   text = text.replace("\"\"", "\"");
   $setText(text);

To do your line continuation you just need to add 
an extra alt into the main rule:
   ... | '?' NEWLINE ...
And then add additional 'replace' calls in the 
action code to replace "?\r\n" or "?\n" with "".


From Stephen.Hardy at digi.com  Thu Aug 23 14:34:39 2007
From: Stephen.Hardy at digi.com (Hardy, Stephen)
Date: Thu, 23 Aug 2007 14:34:39 -0700
Subject: [antlr-interest] optional rule refs
In-Reply-To: <EDB629F7-8317-4E09-BE2E-7C657A0FEA44@cs.usfca.edu>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F074@dvs-sms-mail01.digi.com>

Terence,

I'm glad you are adding this feature.  The ?: operator is all over my
tree parser code like a rash, so I would certainly appreciate the
improved tidiness.

 
> I propose that all refs to rule properties become the equivalent of:
> 
> $rr!=null?$rr.property:null
> 

Regards,
SJH

From parrt at cs.usfca.edu  Thu Aug 23 15:10:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 23 Aug 2007 15:10:09 -0700
Subject: [antlr-interest] optional rule refs
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F074@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F074@dvs-sms-mail01.digi.com>
Message-ID: <F69C3E4C-10AE-48C1-9176-A743A19D0A7F@cs.usfca.edu>


On Aug 23, 2007, at 2:34 PM, Hardy, Stephen wrote:

> Terence,
>
> I'm glad you are adding this feature.  The ?: operator is all over my
> tree parser code like a rash, so I would certainly appreciate the
> improved tidiness.

Yep. Agreed.  It's already in the mainline for 3.1

Ter


From fyaoxy at gmail.com  Thu Aug 23 19:59:37 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 24 Aug 2007 10:59:37 +0800
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <20070823200209.4579C11EACE@www.antlr.org>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>
	<20070823200209.4579C11EACE@www.antlr.org>
Message-ID: <91dd9a4f0708231959w7bea0e92rf6ea2a31fb9074ce@mail.gmail.com>

IMHO we can use two style without others.
QString: (DQ (~DQ)* DQ) |  (SQ (~SQ)* SQ);
DQ:'"';
SQ:'\'';
it works fine.
we can do this
"abc'sdfsa"
'abc"123"
or newline included
"ab
c'sdfsa"
'ab
c"123"

2007/8/24, Gavin Lambert <antlr at mirality.co.nz>:
>
> At 07:39 24/08/2007, Edwards, Waverly wrote:
> >Well after a lot more reading it is still not
> easy.  Below is what
> >I've done to capture the quoted text.  I'm hoping someone can
> >assist me.  My grammar is very short as at this
> point I just need
> >to get past capturing quotations with embedded
> quotes.  Below that
> >is the code I used to test what I was doing was correct ( or
> >seemingly correct ).  The code below the
> grammar works just fine.
> >I decided that instead of making an exception to allow the
> >continuation across lines I would throw an
> error if there was not
> >one, thereby saving myself more headaches.
>
> Not tested, but this ought to do what you want:
>
> DBLQUOTE
>    :  '"'
>       (~'"' | '""')*
>       '"'
>    ;
>
> (This will also permit line breaks inside
> strings.  If you want to disallow that then just
> change the ~'"' into ~('"' | NEWLINE).)
>
> This will match the entire string properly
> (detecting embedded double-quotes vs. the string
> terminator), but won't strip the surrounding
> quotes nor remove one of each quote pair.  I'm
> not a Javaite, so I can't give you exact code,
> but something along these lines ought to do that:
>
>    String original = $getText();
>    String text = original.substring(1, original.length() - 2);
>    text = text.replace("\"\"", "\"");
>    $setText(text);
>
> To do your line continuation you just need to add
> an extra alt into the main rule:
>    ... | '?' NEWLINE ...
> And then add additional 'replace' calls in the
> action code to replace "?\r\n" or "?\n" with "".
>
>


-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/bb5f45b2/attachment.html 

From fyaoxy at gmail.com  Thu Aug 23 20:04:58 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 24 Aug 2007 11:04:58 +0800
Subject: [antlr-interest] new tree question
In-Reply-To: <598864c70708231203l281b3c5al191d7bc36d0aaf3c@mail.gmail.com>
References: <598864c70708231203l281b3c5al191d7bc36d0aaf3c@mail.gmail.com>
Message-ID: <91dd9a4f0708232004h11db0d65i372b558508ca2441@mail.gmail.com>

Hi,
you can test with gunit test, just use -> style.
for example
"expr relexpr expr...." ->()
gunit can show that result to you.
BTW, if you not get right result, maybe you can just svn my on project
eclipse folder, run ant gunit gunit2
Most advice, use gunit for grammar test

2007/8/24, Monty Zukowski <monty at codetransform.com>:
>
> logicExpr
>     : relExpr
>       ( llogicOperator^
>         relExpr
>       )*
>     ;
>
>
> I can't quite get my head around how to write this in the new tree
> rewrite-> syntax.  I realize that the above will work, but I'm curious
> to know how it would look in the new syntax.
>
> Monty
>



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/0e7f6e0c/attachment.html 

From shaohua.wen at gmail.com  Thu Aug 23 20:23:07 2007
From: shaohua.wen at gmail.com (=?UTF-8?B?5paH5bCR5Y2O?=)
Date: Fri, 24 Aug 2007 11:23:07 +0800
Subject: [antlr-interest] announcing gUnit: ANTLR grammar unit testing
In-Reply-To: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
References: <E02967B5-6C5E-4488-B3F6-D007CFD57C4A@cs.usfca.edu>
Message-ID: <5694af40708232023m7b2cfd5bm533ede3ccd9e6a6b@mail.gmail.com>

I tried it and found that it requires jdk 1.5,
Is it possible to make it generated code that could be compiled/run in jdk
1.4?

Thanks!

On 8/16/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> Howdy.  Martin Bravenboer gave me a look at his nice grammar testing
> facilities for a GLR-based parser generator (ASF+SDF) at OOPSLA last
> year.  He inspired me to build one for ANTLR.  Fortunately, I found a
> very capable graduate student, Leon Su, that was able to implement it
> this summer.  Here is the wiki with code attached. :)
>
> http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing
>
> Please direct feedback to the group and/or Leon so we can improve
> it.  I think you'll find it is a very nice tool.  Has both
> interpreted and gUnit->jUnit code gen modes. :)
>
> Terence
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/fc1da93f/attachment.html 

From Abhijit_Ghonge at infosys.com  Thu Aug 23 22:58:05 2007
From: Abhijit_Ghonge at infosys.com (Abhijit Nandkumar Ghonge)
Date: Fri, 24 Aug 2007 11:28:05 +0530
Subject: [antlr-interest] implementing 'if' and 'while' grammar with
 actions
In-Reply-To: <13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A7@BLRKECMBX05.ad.infosys.com>
References: <13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A7@BLRKECMBX05.ad.infosys.com>
Message-ID: <13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A8@BLRKECMBX05.ad.infosys.com>

Hi,

I managed to skip the statements for "if" statement implementation using stack concept. Now, I want to implement looping in "while" statement. My rule for while statement is:

whilestatement:
                        'while' LPAREN expr RPAREN 'do' NEWLINE
                        {
                                    //action to push the outcome of expr on stack
                        } statement* done
                        {
                                    // peep the top of the stack
                                    // if expr is true reposition the line number of parser to start of while statement
                                    // else pop the top of the stack and continue ahead
                        }

I'm stuck at the logic to be put for the bold comments above. Is there something like yylineno as in yacc parser, which, if I set the line number of while statement, it loops back?

Please help.

Regards,
Abhijit.



________________________________
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Abhijit Nandkumar Ghonge
Sent: Thursday, August 23, 2007 6:19 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] implementing 'if' and 'while' grammar with actions
Importance: High

Hi all,

I want to implement parser grammar for 'if' and 'while' statement with actions in it.
My script is :

var1=10
if ( var1 < 9 ) then
var1++
print (var1)
endif

How do I skip the execution of the statements if the "if-condition" is false as in the above case?

I searched for the grammar implementation in the site, but all examples where implementing grammar rules for "if" and "while" without actions in them. I want to embed actions in the grammars.
Please give some pointers to "if" or "while" grammar implementation with actions in it.
Please Help.

thanks,
Abhijit
**************** CAUTION - Disclaimer *****************
This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended solely for the use of the addressee(s). If you are not the intended recipient, please notify the sender by e-mail and delete the original message. Further, you are not to copy, disclose, or distribute this e-mail or its contents to any other person and any such actions are unlawful. This e-mail may contain viruses. Infosys has taken every reasonable precaution to minimize this risk, but is not liable for any damage you may sustain as a result of any virus in this e-mail. You should carry out your own virus checks before opening the e-mail or attachment. Infosys reserves the right to monitor and review the content of all messages sent to or from this e-mail address. Messages sent to or from this e-mail address may be stored on the Infosys e-mail system.
***INFOSYS******** End of Disclaimer ********INFOSYS***

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/c7b6b69e/attachment-0001.html 

From fyaoxy at gmail.com  Thu Aug 23 23:31:30 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 24 Aug 2007 14:31:30 +0800
Subject: [antlr-interest] implementing 'if' and 'while' grammar with
	actions
In-Reply-To: <13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A8@BLRKECMBX05.ad.infosys.com>
References: <13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A7@BLRKECMBX05.ad.infosys.com>
	<13CAB19CBE2BDD49BC741F05E9FA4B5A07FD9845A8@BLRKECMBX05.ad.infosys.com>
Message-ID: <91dd9a4f0708232331k42188a4aqc45f0f770ecc0415@mail.gmail.com>

Hi,
If I get you right, I think maybe there is a tree walker needed.
If I do that I would let lexer and parser do thing simply, and create a tree
grammar in which I can  do more thing.




2007/8/24, Abhijit Nandkumar Ghonge <Abhijit_Ghonge at infosys.com>:
>
>  Hi,
>
>
>
> I managed to skip the statements for "if" statement implementation using
> stack concept. Now, I want to implement looping in "while" statement. My
> rule for while statement is:
>
>
>
> whilestatement:
>
>                         'while' LPAREN expr RPAREN 'do' NEWLINE
>
>                         {
>
>                                     //action to push the outcome of expr
> on stack
>
>                         } statement* done
>
>                         {
>
>                                     // peep the top of the stack
>
>                                     // *if expr is true reposition the
> line number of parser to start of while statement*
>
>                                     // else pop the top of the stack and
> continue ahead
>
>                         }
>
>
>
> I'm stuck at the logic to be put for the *bold* comments above. *Is there
> something like yylineno as in yacc parser, which, if I set the line number
> of while statement, it loops back?*
>
> * *
>
> *Please help.*
>
> * *
>
> Regards,
>
> Abhijit.
>
>
>
>
>
>
>  ------------------------------
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Abhijit Nandkumar Ghonge
> *Sent:* Thursday, August 23, 2007 6:19 PM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] implementing 'if' and 'while' grammar with
> actions
> *Importance:* High
>
>
>
> Hi all,
>
>
>
> I want to implement parser grammar for 'if' and 'while' statement *with
> actions in it*.
>
> My script is :
>
>
>
> var1=10
>
> if ( var1 < 9 ) then
>
> var1++
>
> print (var1)
>
> endif
>
>
>
> How do I skip the execution of the statements if the "if-condition" is
> false as in the above case?
>
>
>
> I searched for the grammar implementation in the site, but all examples
> where implementing grammar rules for "if" and "while" without actions in
> them. I want to embed actions in the grammars.
>
> Please give some pointers to "if" or "while" grammar implementation with *actions
> in it.*
>
> Please Help.
>
>
>
> thanks,
>
> Abhijit
>  **************** CAUTION - Disclaimer *****************
> This e-mail contains PRIVILEGED AND CONFIDENTIAL INFORMATION intended
> solely for the use of the addressee(s). If you are not the intended
> recipient, please notify the sender by e-mail and delete the original
> message. Further, you are not to copy, disclose, or distribute this e-mail
> or its contents to any other person and any such actions are unlawful. This
> e-mail may contain viruses. Infosys has taken every reasonable precaution to
> minimize this risk, but is not liable for any damage you may sustain as a
> result of any virus in this e-mail. You should carry out your own virus
> checks before opening the e-mail or attachment. Infosys reserves the right
> to monitor and review the content of all messages sent to or from this
> e-mail address. Messages sent to or from this e-mail address may be stored
> on the Infosys e-mail system.
> ***INFOSYS******** End of Disclaimer ********INFOSYS***
>



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/1baf6274/attachment.html 

From hs4233 at mail.mn-solutions.de  Fri Aug 24 03:38:41 2007
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Fri, 24 Aug 2007 12:38:41 +0200
Subject: [antlr-interest] lots of warnings C runtime in antlr 3.0.1
Message-ID: <200708241238.41565.hs4233@mail.mn-solutions.de>

Hi Jim !

Did you ever compile your code with -Wall -Wextra ?  I get a huge
number of warnings in this case, some probably hinting to real
problems.

You can do this by calling make like this

$ make CFLAGS="-Wall -Wextra -O2"


After this, we'll see a ton of "warning: unused parameter 'recognizer'"
errors. A way to get rid of them would be to define

   #define ANTLR3_UNUSED(var) (void)var;

in antrl3defs.h and then using ANTRL3_UNUSED(recognizer) in the bodies
of functions that don't use this variable. Of course you could also use
__attribute__((unused)) with GCC compilers ...



Another class of warnings are this:


src/antlr3baserecognizer.c: In function 'memoize':
src/antlr3baserecognizer.c:1592: warning: signed and unsigned type in conditional expression

src/antlr3baserecognizer.c:1392: warning: 'freeList' defined but not used

src/antlr3bitset.c: In function 'antlr3BitsetList':
src/antlr3bitset.c:190: warning: dereferencing type-punned pointer will break strict-aliasing rules

src/antlr3commontreenodestream.c:558: warning: 'rewindLast' defined but not used

src/antlr3cyclicdfa.c: In function 'antlr3dfapredict':
src/antlr3cyclicdfa.c:138: warning: comparison between signed and unsigned

src/antlr3filestream.c:38: warning: statement with no effect

src/antlr3inputstream.c:23: warning: 'antlr3InputFileName' declared 'static' but never defined

src/antlr3lexer.c:21: warning: 'matchs_ucase' declared 'static' but never defined
src/antlr3lexer.c:22: warning: 'matchc_ucase' declared 'static' but never defined
src/antlr3lexer.c:23: warning: 'setUpperCompare' declared 'static' but never defined

src/antlr3string.c:297: warning: 'stringInitUTF8' defined but not used

src/antlr3tokenstream.c:119: warning: 'freeEofTOken' defined but not used

src/antlr3treeparser.c:13: warning: 'displayRecognitionError' declared 'static' but never defined
src/antlr3treeparser.c:14: warning: 'recover' declared 'static' but never defined

src/antlr3rewritestreams.c:423: warning: suggest parentheses around && within ||



Also, antlr3-constructed code has warnings:

axelLexer.c: In function 'mCHAR_VALUE':
axelLexer.c:20634: warning: comparison of unsigned expression >= 0 is always true
axelLexer.c: In function 'mSTRING_VALUE':
axelLexer.c:20716: warning: comparison of unsigned expression >= 0 is always true
axelLexer.c: In function 'mEND_COMMENT':
axelLexer.c:21059: warning: comparison of unsigned expression >= 0 is always true
axelLexer.c: In function 'mLINE_COMMENT':
axelLexer.c:21150: warning: comparison of unsigned expression >= 0 is always true

At axelLexer.c, line 20634, antlr3 made this code:

        // axel.g:453:8: (~ '\"' )
        // axel.g:453:9: ~ '\"'
        {
            if ( ((LA(1) >= 0x0000) && (LA(1) <= '!')) || ((LA(1) >= '#') && (LA(1) <= 0xFFFE)) )
            {
                CONSUME();

            }

axelParser.c:451: warning: missing initializer
axelParser.c:451: warning: (near initialization for 'FOLLOW_stmt_in_prog52.clone')
axelParser.c:454: warning: missing initializer
axelParser.c:454: warning: (near initialization for 'FOLLOW_LINE_COMMENT_in_prog59.clone')
axelParser.c:457: warning: missing initializer
axelParser.c:457: warning: (near initialization for 'FOLLOW_EOL_in_prog70.clone')

At axelParser.c, line 451, antrl3 made this code:

/** Bitset defining follow set for error recovery in rule state: FOLLOW_stmt_in_prog52  */
static  ANTLR3_BITWORD FOLLOW_stmt_in_prog52_bits[]     = { ANTLR3_UINT64_LIT(0x0000000000000020) };
static  ANTLR3_BITSET FOLLOW_stmt_in_prog52     = { FOLLOW_stmt_in_prog52_bits, 1       };

so I guess GCC 4.1.2 complains that not all fields of the bitset struct are set.

From hs4233 at mail.mn-solutions.de  Fri Aug 24 04:26:16 2007
From: hs4233 at mail.mn-solutions.de (Holger Schurig)
Date: Fri, 24 Aug 2007 13:26:16 +0200
Subject: [antlr-interest] [C runtime] don't compare pointer for negative
	return values !
Message-ID: <200708241326.16945.hs4233@mail.mn-solutions.de>

In the examples there is a file examples/C/main.c which contains 
this code:

   input       = antlr3AsciiFileStreamNew(fName);

   // The input will be created successfully, providing that
   // there is enough memory and the file exists etc


That is utterly nonsense.

When I get something and cast this something to "unsigned", how 
can this new value (which is unsigned by the cast!) now ever be 
smaller than zero?

BTW, GCC 4.1.2 emits this as warning

Second: the return value for antlr3AsciiFileStreamNew() is a 
pointer. Comparing this for < 0 is nonsense again, because the 
c-runtime could as well give you back 0xD00C0020 as address for 
this pointer. This, seen as a signed value, would be smaller 
than zero. Yet the object has been successfully created.



So the whole interface idea isn't sane.  You can't really, in a 
platform independend way, encode return values into 
pointer-returning functions.

Suggestion:

All the xxxxxNew()-Functions that normally return a pointer 
should return NULL as error condition. You could have an 
antlr3errorid variable somewhere, where higher levels could 
refer to to find out why the xxxxxNew()-Function failed.

If you don't like a global variable, then change the calling of 
the xxxxxNew() functions to something like this:

    pANTLS_POINTER xxxxNew(ANTLR3_INT32 *errCode);

so the end-user can specify where to store the error condition 
code.

From rhill03 at eds.com  Fri Aug 24 04:55:22 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Fri, 24 Aug 2007 13:55:22 +0200
Subject: [antlr-interest] If statement for Tree-based Interpreter: is
	itthe correct way to do it?
In-Reply-To: <6B7FCD1D-D88C-407F-B1A0-179067D9B42E@cs.usfca.edu>
Message-ID: <09C516FD181E28418B31B9D3A0242DC021BB77@derum205.emea.corp.eds.com>

Er... When did V3 acquire the ability to skip subtrees?.. Did this
happen when V3 went live? Or was it in the beta's?

Cheers,
Rob


Robert Hill
Information Analyst (C/C++,C#,.NET,Java)
Agile Alliance Member
UKIMEA Technical Capabilities ADU
UKIMEA RABU
Application Services Field Operations EMEA

Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

This email contains information which is confidential and may be
privileged. Unless you are the intended addressee (or authorised to
receive for the addressee) you may not use, forward, copy or disclose to
anyone this email or any information contained in this email. If you
have received this email in error, please advise the sender by reply
email immediately and delete this email.

Electronic Data Systems Ltd
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419
VAT number: 432 99 5915


 

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
>Sent: 23 August 2007 19:32
>To: antlr-interest Interest
>Subject: Re: [antlr-interest] If statement for Tree-based 
>Interpreter: is itthe correct way to do it?
>
>
>On Aug 23, 2007, at 11:02 AM, Pavel Ganelin wrote:
>
>>
>> Hi,
>>
>> I found that in ANTLR v3 it is more difficult to skip the child for 
>> tree walker compare with v2. Is it true or it is just learning curve?
>>
>> Below I attached how I process if statement for a tree-based 
>> interpreter. Please note that I had to add artificial token 
>EOL while 
>> building the tree in the parser so that I could position the cursor 
>> just before Token.UP. I did not find a way to move the 
>pointer to the 
>> last node of the the given tree ($s in the example below). Start and 
>> Stop indexes in the tree node point to the original token tree, not 
>> the CommonTreeNodeStream.
>>
>> Is it the way it is supposed to be implemented? If not what is the 
>> correct approach
>>
>> PS. I did read  http://www.antlr.org/wiki/display/ANTLR3/Simple
>> +tree-based+interpeter. It does not cover this question.
>
>Hi Pavel,
>
> From that page:
>
>^(FUNC name=ID arg=ID .)
>
>The dot skips the body subtree :)
>
>Ter
>

From rhill03 at eds.com  Fri Aug 24 04:57:45 2007
From: rhill03 at eds.com (Hill, Robert)
Date: Fri, 24 Aug 2007 13:57:45 +0200
Subject: [antlr-interest] If statement for Tree-based Interpreter: is
	itthe correct way to do it?
In-Reply-To: <6B7FCD1D-D88C-407F-B1A0-179067D9B42E@cs.usfca.edu>
Message-ID: <09C516FD181E28418B31B9D3A0242DC021BB7A@derum205.emea.corp.eds.com>

D'Oh. Ok, I should have looked at that page *before* posting!..

"The wildcard says skip the entire subtree (new in 3.0b6)."

Sorry for the static!

Cheers!

Rob


Robert Hill
Information Analyst (C/C++,C#,.NET,Java)
Agile Alliance Member
UKIMEA Technical Capabilities ADU
UKIMEA RABU
Application Services Field Operations EMEA

Hallamshire Business Park, 100 Napier St, Sheffield. S11 8HD
email:	rhill03 at eds.com
Office:	+44 114 291 1928
Mobile:	+44 7903 185 516

This email contains information which is confidential and may be
privileged. Unless you are the intended addressee (or authorised to
receive for the addressee) you may not use, forward, copy or disclose to
anyone this email or any information contained in this email. If you
have received this email in error, please advise the sender by reply
email immediately and delete this email.

Electronic Data Systems Ltd
Registered Office:, Lansdowne House, Berkeley Square, London  W1J 6ER 
Registered in England no: 53419
VAT number: 432 99 5915


 

>-----Original Message-----
>From: antlr-interest-bounces at antlr.org 
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
>Sent: 23 August 2007 19:32
>To: antlr-interest Interest
>Subject: Re: [antlr-interest] If statement for Tree-based 
>Interpreter: is itthe correct way to do it?
>
>
>On Aug 23, 2007, at 11:02 AM, Pavel Ganelin wrote:
>
>>
>> Hi,
>>
>> I found that in ANTLR v3 it is more difficult to skip the child for 
>> tree walker compare with v2. Is it true or it is just learning curve?
>>
>> Below I attached how I process if statement for a tree-based 
>> interpreter. Please note that I had to add artificial token 
>EOL while 
>> building the tree in the parser so that I could position the cursor 
>> just before Token.UP. I did not find a way to move the 
>pointer to the 
>> last node of the the given tree ($s in the example below). Start and 
>> Stop indexes in the tree node point to the original token tree, not 
>> the CommonTreeNodeStream.
>>
>> Is it the way it is supposed to be implemented? If not what is the 
>> correct approach
>>
>> PS. I did read  http://www.antlr.org/wiki/display/ANTLR3/Simple
>> +tree-based+interpeter. It does not cover this question.
>
>Hi Pavel,
>
> From that page:
>
>^(FUNC name=ID arg=ID .)
>
>The dot skips the body subtree :)
>
>Ter
>

From antlr at mirality.co.nz  Fri Aug 24 05:22:13 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 25 Aug 2007 00:22:13 +1200
Subject: [antlr-interest] [C runtime] don't compare pointer for negative
 return values !
In-Reply-To: <200708241326.16945.hs4233@mail.mn-solutions.de>
References: <200708241326.16945.hs4233@mail.mn-solutions.de>
Message-ID: <20070824122223.BD4ED11EB08@www.antlr.org>

At 23:26 24/08/2007, Holger Schurig wrote:
 >Second: the return value for antlr3AsciiFileStreamNew() is a
 >pointer. Comparing this for < 0 is nonsense again, because the
 >c-runtime could as well give you back 0xD00C0020 as address for
 >this pointer. This, seen as a signed value, would be smaller
 >than zero. Yet the object has been successfully created.

This one annoyed me a bit too.  The workaround I tend to use is to 
define this at the top of my program:

#define ANTLR_FAILED(x)		((int)(x) < 0 && (int)(x) > -100)

This is a bit crude, but permits up to 100 different error levels 
(arbitrarily chosen number) while reducing the possibility of 
collision with a real pointer value.  (The chances of getting a 
pointer at 0xFFFFFFxx are vanishingly small.)

Make sure you only pass it a pointer variable, though -- don't 
wrap it around a function call directly or it'll end up invoking 
the function twice.  (gcc provides a syntax that can be used to 
avoid this effect, but sadly it's not portable.)


I tend to agree with you, though.  The normal behaviour for 
anything that returns a pointer should be to return NULL on 
failure, with (if necessary) a call to an additional function if 
you really care about the error code involved.  Or an output 
parameter, though those are a bit ugly too.


From Kevin.Braun at fnis.com  Fri Aug 24 05:22:52 2007
From: Kevin.Braun at fnis.com (Braun, Kevin T)
Date: Fri, 24 Aug 2007 07:22:52 -0500
Subject: [antlr-interest] superClass option for lexer in a combined
	grammar ?
Message-ID: <5A03163702DD0945A5DC1324E9FDDEF17E3A02@CMBFISLTC05.FNFIS.COM>

Here is what I am doing to solve this; it seems it will work.  When
ANTLR generates the lexer and parser, it (fortunately) just says
"extends Parser" or "extends Lexer", with package qualification (it
imports org.antlr.runtime.*).  In the header I specify my own package
for the generated lexer and parser.  I then extend ANTLR's Lexer and
Parser with classes also called Lexer and Parser, in that same package.
As a result, the generated classes extend my Lexer and Parser classes
instead of ANTLR's.

--------
Oti ohumbel at gmail.com 
Fri Aug 3 02:03:10 PDT 2007
 
Hi,

trying out the superClass option (pages 104, 111/112) from the book.
In a combined grammar the parser gets the specified super class.

Is there a way to specify the lexer superClass, too ?

Thanks,
and best wishes,
Oti.


From dev.null.nix at gmail.com  Fri Aug 24 05:33:22 2007
From: dev.null.nix at gmail.com (dev.null.nix at gmail.com)
Date: Fri, 24 Aug 2007 14:33:22 +0200
Subject: [antlr-interest] C Runtime and Strings
Message-ID: <46CED012.80205@gmail.com>

Hi,

I have a rule like this in a C target language grammar:

scoped_identifier : NAMESPACE_COLON? (IDENTIFIER NAMESPACE_COLON)* 
IDENTIFIER;

I would like to return the string representing scoped_identifier.

Is there any way to access the buffer location of a token in the input 
buffer (like storing a pointer to the first and the last char).

And if there is a way, is the input buffer read into one big buffer so 
that it is valid for the whole parser?

Thanks,
Stefan

From antlr at mirality.co.nz  Fri Aug 24 06:30:38 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 25 Aug 2007 01:30:38 +1200
Subject: [antlr-interest] C Runtime and Strings
In-Reply-To: <46CED012.80205@gmail.com>
References: <46CED012.80205@gmail.com>
Message-ID: <20070824133047.C745D11EA83@www.antlr.org>

At 00:33 25/08/2007, dev.null.nix at gmail.com wrote:
 >scoped_identifier : NAMESPACE_COLON? (IDENTIFIER 
NAMESPACE_COLON)*
 >IDENTIFIER;
 >
 >I would like to return the string representing 
scoped_identifier.
 >
 >Is there any way to access the buffer location of a token in the 

 >input buffer (like storing a pointer to the first and the last 
char).

 From within a rule, you can just use $text, I think.  (Or maybe 
it's $getText(), or $scoped_identifier.text.  I'm a little fuzzy 
now, it's been a while.)  From outside the rule you can either use 
that last one or assign a label to it and use that instead.

 >And if there is a way, is the input buffer read into one big 
buffer
 >so that it is valid for the whole parser?

Yep.


From Waverly.Edwards at genesys.com  Fri Aug 24 09:23:31 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Fri, 24 Aug 2007 12:23:31 -0400
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <20070823200209.4579C11EACE@www.antlr.org>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp><FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>
	<20070823200209.4579C11EACE@www.antlr.org>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1AA368D@navamane001.ad.internal.corp>


Thank you very much Gavin.  This was the key to success!
I would also like to thank Matthew and fyaoxy and there
replies also proved valuable in my education.

Gavin, your solution kept me from pulling out my hair out.
I researched the greedy=false option and how to obtain a string
using it but was far from successful.

I haven't figured out how to get ANTLR to tell me the string is
unterminated but I will.

Based on your rule DBLQUOTE I was able to retrieve the whole
of the quoted material and parse it.  I also didn't need a
NEWLINE or ?NEWLINE rule as a part of DBLQUOTE.  I made my
adjustments after I received all of the quoted text.

OUTSTANDING!!! 

( You can tell I'm a newbie can't you? )

Attached for anyone's benefit is the final solution with testing
text file.


Thanks again



W.


-----Original Message-----
Gavin Lambert wrote:

[snip]

Not tested, but this ought to do what you want:

DBLQUOTE
   :  '"'
      (~'"' | '""')*
      '"'
   ;

[snip]

-------------- next part --------------
A non-text attachment was scrubbed...
Name: QUOTECONTINUATION.g
Type: application/octet-stream
Size: 1625 bytes
Desc: QUOTECONTINUATION.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/1e64f08b/attachment.obj 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: quotedText.txt
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/1e64f08b/attachment.txt 

From parrt at cs.usfca.edu  Fri Aug 24 11:06:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 24 Aug 2007 11:06:25 -0700
Subject: [antlr-interest] ANTLR architect needed
Message-ID: <30EFD508-2549-4D1B-8D32-4E5B10F58A82@cs.usfca.edu>

Hi, here is an opportunity for a senior architect:

> Project - 8 months minimum to rewrite a fortune 100 insurance  
> company's policy administration system.
> Team of 4 architects
> Location: Chicago area
>
> Senior Architect:
> experienced in Java >7 years
> ANTLR experience required
> Spring and Groovy preferred

Contact info:

> * Alejandro Marshall *
> * Avature *
> * Global Recruiting Services *
> www.avature.net <http://www.avature.net>
> alejandrom at avature.net <mailto:alejandrom at avature.net>
> (212) 380-4160 ext.457

Terence

From standard.jack at yahoo.com  Fri Aug 24 11:57:02 2007
From: standard.jack at yahoo.com (Gerald Halstead)
Date: Fri, 24 Aug 2007 11:57:02 -0700 (PDT)
Subject: [antlr-interest] trying to parse retrievalware search queries
Message-ID: <763398.10175.qm@web37106.mail.mud.yahoo.com>

I trying to translate queries written for the commercial retrievalware search engine
into the queries for the open source Lucene search engine.

The best retrievalware documentation I can find is online is at:

    http://www.ant.kiev.ua:7273/Work8/helppages/ru/Boolean.htm

and

    http://www.ant.kiev.ua:7273/Work8/helppages/ru/Wildcards.htm

which are summarized below:



Operator      Syntax                         Precedence  Description
--------      ------                         ----------  -----------

()            (word1 or word2) and word3     1           Override precedence of other operators.
                                                         Can be nested to any depth.
                                                         
not           not word                       2           word must not be in doc.             
^             ^word

and           word1 and word2                3           Both word1 and word2 must be in doc.     
  
&             word1 & word2                              This is the default operator.
but           word1 but word2

within        word1 word2 within N           4           word1 must be within N words of word2.

adj           word1 word2 adj N              4           same as "within" except word1 precedes
word2.

between       word1 between word2 and word3  4           word1 between word2 and word3
inside        word1 insdieword2 and word3    4           word1 between word2 and word3

or            word1 or word2                 5           Either word1 or word2 must be in doc.
|             word1 | word2                  5           Either word1 or word2 must be in doc.


Apparently the within syntax allows for an "AND" as follows:

    network AND security WITHIN 1

    (general electric WITHIN 3) AND (westinghouse electric WITHIN 3) WITHIN 40

Operators may be all lower or all upper case.
And exact phrase is enclosed in double quotes.

Words may contain the following wildcards:

Wildcard Description                              Example
-------- -----------                              -------

*        Match anything or nothing.               pharma*

?        Match exactly one character.             la?er

_        Match one or no character.               colo_r

@        Match exactly one alphabetic character.  c at er

#        Match exactly one numeric character.     #600

\        Wildcard escape.                         joe\@home

^        Match any character except the next one. 199[^7]

[ ]      Match one character from set.            [aeiou]
                                                  A[1-5]



Lucene query syntax:

    http://lucene.apache.org/java/docs/queryparsersyntax.html


I realize that a precise translation is impossible.

I'm not a grammar meister and could use some help creating a antlr
grammar for retrievalware.  Here's the dysfunctional grammar
I've created so far:





grammar Rware;

@header {
package test;
import java.util.HashMap;
}

@lexer::header {package test;}

@members {
/** Map variable name to Integer object holding value */
HashMap memory = new HashMap();
}

query
	: orExpression
	;
	
orExpression
	: hackExpression (('or' | 'OR' | '|') hackExpression)*
	;
	
hackExpression
	: withinExpression
	| adjExpression
	| betweenExpression
	| andExpression
	;

withinExpression
	: primary ('and' | 'AND')? primary ('within' | 'WITHIN') INT
	;
	
adjExpression
	: andExpression andExpression ('adj' | 'ADJ') INT
	;
	
betweenExpression
	: andExpression ('between' | 'BETWEEN' | 'inside' | 'INSIDE') andExpression  ('and' | 'AND')
andExpression
	;

andExpression
	: unaryExpression (('and' | 'AND' | 'but' | 'BUT' | '&')? unaryExpression)*
	;
	
unaryExpression
	: ('not' | 'NOT' | '^') unaryExpression
	| primary
	;
	
parExpression
	: '(' orExpression ')'
	;	
	
primary
	: parExpression
	| WORD
	| STRING_LITERAL
	;

WORD
	: LETTER+
	;

STRING_LITERAL
	:  '"' ( EscapeSequence | ~('\\'|'"') )* '"'
	;
    
fragment
EscapeSequence
	:   '\\' ('!'|'~'|'?'|'*'|'_'|'@'|'#'|'^'|'\"'|'\''|'\\')
	;    

fragment
LETTER
	:	'$'
	|	'A'..'Z'
	|	'a'..'z'
	|       '0'..'9'
	|	'_'
	;
    
INT
	: ('0' | '1'..'9' '0'..'9'*)
	;

WS
	:  (' '|'\r'|'\t'|'\u000C'|'\n') { skip(); }
	;




       
____________________________________________________________________________________
Pinpoint customers who are looking for what you sell. 
http://searchmarketing.yahoo.com/

From Cyang at infobal.com  Fri Aug 24 12:33:23 2007
From: Cyang at infobal.com (Charlie Yang)
Date: Fri, 24 Aug 2007 15:33:23 -0400
Subject: [antlr-interest] question about V3 AST rewriting ?
Message-ID: <96AD91D781CCD511A66000B0D0D15C49036DB07C@EXSVR1>

Hi, I have problem to find a way to rewrite AST when repeated subrules
occured.
The example I found online is:
	'<html>' html_header html_body '</html>' -> ^('doc' html_header
html_body);
It works fine, however, when I try to implement others, say Java1.5 for V3

Q1: Given Grammar like this:
	type	: Identifier (typeArguments)? ('.' Identifier
(typeArguments)? )* ('[' ']')*  

both "Identifier" and "typeArguments" occurred multi-times, how can I bring
it back in AST like 
->^(TYPE Identifier1 typeArguments1 Identifier2? typeArguments2? ...)


Q2:And second question, given rule like below:
primitiveType
    :   'boolean'
    |	'char'
    |	'byte'
    |	'short'
    |	'int'

It the an easy way to rewrite AST like ^(PRIMITIVE 'boolean'|'char'|....)
rather than:
    :   'boolean'  ->^(PRIMITIVE 'boolean')
    |	'char'	->^(PRIMITIVE 'char')
	...


Now I'm so missing old style grammar as 2.7.5 which at least I know how to
fully control the AST. Anywhere I can find a detail instruction about how to
rewrite AST for V3?




From antlr at mirality.co.nz  Fri Aug 24 14:42:28 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 25 Aug 2007 09:42:28 +1200
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1AA368D@navamane001.ad.inte
	rnal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>
	<20070823200209.4579C11EACE@www.antlr.org>
	<FF993752CB890B4EB591BE5450C37BF1AA368D@navamane001.ad.internal.corp>
Message-ID: <20070824214237.3737111EB14@www.antlr.org>

At 04:23 25/08/2007, Edwards, Waverly wrote:
 >I haven't figured out how to get ANTLR to tell me the string is
 >unterminated but I will.

Well, by the first definition (that permits embedded NEWLINEs), 
the only way a string could possibly be unterminated is if an EOF 
occurs before the final quote -- in which case it should throw 
some kind of RecognitionException, because it can't match the 
final quote.

If embedded NEWLINEs are only permitted following the line 
continuation character, then you really should add that to the 
rule the way I described, to avoid having typos make strings 
consume the remainder of the file.


I'm also a little surprised at how involved your replace calls 
are.  Doesn't Java have a "replace all" function already?


From Waverly.Edwards at genesys.com  Fri Aug 24 14:56:34 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Fri, 24 Aug 2007 17:56:34 -0400
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <EUUKCROE003Qxal0MXx00010f2d@cromaileu.genesys.com>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>
	<20070823200209.4579C11EACE@www.antlr.org>
	<FF993752CB890B4EB591BE5450C37BF1AA368D@navamane001.ad.internal.corp>
	<EUUKCROE003Qxal0MXx00010f2d@cromaileu.genesys.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04CF1@navamane001.ad.internal.corp>


>>>
Well, by the first definition (that permits embedded NEWLINEs), the only
way a string could possibly be unterminated is if an EOF occurs before
the final quote -- in which case it should throw some kind of
RecognitionException, because it can't match the final quote.
<<<

I intentionally left out the closing quote to see what would happen.  I
got an error message, but have forgotten what it was.  I was looking to
see how to intercept the existing error message for one that works
better for me.

>>>
If embedded NEWLINEs are only permitted following the line continuation
character, then you really should add that to the rule the way I
described, to avoid having typos make strings consume the remainder of
the file.
<<<

Ah, I see what you mean.

>>... Doesn't Java have a "replace all" function already?

I looked and didn't find one.  I had to work for that one a little
didn't I?
It would definitely make for shorter, prettier code.


Thanks,


W.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Friday, August 24, 2007 5:42 PM
To: Edwards, Waverly; antlr
Subject: RE: [antlr-interest] lexer: embedded quotes assistance

At 04:23 25/08/2007, Edwards, Waverly wrote:
 >I haven't figured out how to get ANTLR to tell me the string is
>unterminated but I will.

Well, by the first definition (that permits embedded NEWLINEs), the only
way a string could possibly be unterminated is if an EOF occurs before
the final quote -- in which case it should throw some kind of
RecognitionException, because it can't match the final quote.

If embedded NEWLINEs are only permitted following the line continuation
character, then you really should add that to the rule the way I
described, to avoid having typos make strings consume the remainder of
the file.


I'm also a little surprised at how involved your replace calls are.
Doesn't Java have a "replace all" function already?


From jaluber at gmx.de  Fri Aug 24 15:14:21 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 25 Aug 2007 00:14:21 +0200
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04CF1@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>	<FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>	<20070823200209.4579C11EACE@www.antlr.org>	<FF993752CB890B4EB591BE5450C37BF1AA368D@navamane001.ad.internal.corp>	<EUUKCROE003Qxal0MXx00010f2d@cromaileu.genesys.com>
	<FF993752CB890B4EB591BE5450C37BF1B04CF1@navamane001.ad.internal.corp>
Message-ID: <46CF583D.7070305@gmx.de>

Edwards, Waverly wrote:
> 
>>> ... Doesn't Java have a "replace all" function already?
> 
> I looked and didn't find one.  I had to work for that one a little
> didn't I?
> It would definitely make for shorter, prettier code.
> 

Not having looked at your code I guess you mean to replace text in a
string. In that case, have a look at
<http://java.sun.com/javase/6/docs/api/java/lang/String.html#replaceAll(java.lang.String,%20java.lang.String)>.

Best regards,
Johannes Luber

From Waverly.Edwards at genesys.com  Fri Aug 24 15:18:10 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Fri, 24 Aug 2007 18:18:10 -0400
Subject: [antlr-interest] lexer: embedded quotes assistance
In-Reply-To: <46CF583D.7070305@gmx.de>
References: <FF993752CB890B4EB591BE5450C37BF1AA3455@navamane001.ad.internal.corp>	<FF993752CB890B4EB591BE5450C37BF1AA358D@navamane001.ad.internal.corp>	<20070823200209.4579C11EACE@www.antlr.org>	<FF993752CB890B4EB591BE5450C37BF1AA368D@navamane001.ad.internal.corp>	<EUUKCROE003Qxal0MXx00010f2d@cromaileu.genesys.com><FF993752CB890B4EB591BE5450C37BF1B04CF1@navamane001.ad.internal.corp>
	<46CF583D.7070305@gmx.de>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04CF8@navamane001.ad.internal.corp>

 
That would make for much shorter code.  I guess I didn't look well
enough.


Thank you,


W.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Friday, August 24, 2007 6:14 PM
Cc: antlr
Subject: Re: [antlr-interest] lexer: embedded quotes assistance

Edwards, Waverly wrote:
> 
>>> ... Doesn't Java have a "replace all" function already?
> 
> I looked and didn't find one.  I had to work for that one a little 
> didn't I?
> It would definitely make for shorter, prettier code.
> 

Not having looked at your code I guess you mean to replace text in a
string. In that case, have a look at
<http://java.sun.com/javase/6/docs/api/java/lang/String.html#replaceAll(
java.lang.String,%20java.lang.String)>.

Best regards,
Johannes Luber

From matthew.j.diehl at intel.com  Fri Aug 24 15:23:34 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Fri, 24 Aug 2007 15:23:34 -0700
Subject: [antlr-interest] ANTLRWorks in Unix for first time bug?
Message-ID: <A10CD303B51F814DB568A8AAF02174C2028A5464@orsmsx417.amr.corp.intel.com>

Has anyone else come across this?

I can run ANTLRWorks fine in windows...but when I run it in Unix for the
first time on a system, the splash screen never dies.  I can click
'send' or 'don't send', but it just freezes.  Somehow I got by this one
time on one system (forgot how), but I can't seem to get by it on this
new unix system I'm working on.

Any ideas on how to skip the splash screen?  Where does it store the
'not_first_time_to_be_opened' variable?

......
....
OK, just kidding, found a way past it (my replacement (Amrendra) found a
way.  He clicked one of the buttons and it froze, and then he ran
another instance of it while the other was frozen, and then killed the
first one (or tried to).

Don't know if anyone else had trouble with it...

Matt

From Waverly.Edwards at genesys.com  Fri Aug 24 15:29:44 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Fri, 24 Aug 2007 18:29:44 -0400
Subject: [antlr-interest] ANTLR BUG
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04CF9@navamane001.ad.internal.corp>



> I don> '> t know if this is an ANTLR or an Antlrworks bug 1.1.2
> 
> I am using Antlrworks  1.1.2  and get the following message 
> when debugging the below grammar.
> 
> 
> "Cannot launch the debugger.
> Time-out waiting to connect to the remote parser."
> 
> 
> I Googled the error and found out that if there is something
> wrong with the grammar or the code block that you can get
> this message.  I've had times where something incorrect
> about my Java usage in the action code block and received
> this alert.  Ok, I'm not happy about it but I've accepted that
> Antlrworks doesn> '> t tell me where the problem is, it just tosses
> up this dialog which isn't very helpful.  I would consider this a
> bug BUT here is the real BUG.
> 
> 
> BUG ALERT:
> The below code is valid.  I have tested the action code block
> using the NetBeans IDE a number of times.  I just replace
> getText() with a valid string.  The following two lines seem to
> be offensive.
> 
> if ( txt.charAt(0) == quoteChr ) txt.deleteCharAt(0);
> if ( txt.charAt( lastCharPos ) == quoteChr ) txt.deleteCharAt( lastCharPos );
> 
> If either or both of these lines are commented out the debugger works.
> If both of these lines are uncommented the debugger fails, giving the
> "Cannot launch the debugger> ...> " message.  Separately they pose no
> threat but together they generate a failure.  It would seem that Antlrworks
> is to blame but I don> '> t know this since I don> '> t know how the underlying
> architecture works, as the problem may really be ANTLR which is why
> I entitled the message "ANTLR BUG"
> 
> Thank you for your time,
> 
> 
> 
> W.
> 
> Interesting that "Google" or "Googling" is a verb.
> 
> 
> 
> grammar  QUOTETEST;
> 
> 
> prog	:	start+ ;
> 
> start	:	(ID | INTEGER | DBLQUOTE | SYMBOL | NEWLINE )
> 	;
> 	
> NEWLINE	:	'\r'? '\n';
> WS	:	(' ' | '\t' | '\n' | '\r') {$channel=HIDDEN;}
> 	;
> ID	:	Letter (Letter | Digit)*
> 	;
> INTEGER
> 	:	Digit (Digit)*
> 	;
> SYMBOL  :	('+' | '-' | '=')*
> 	;
> 	
> fragment
> Letter  :	'a'..'z' | 'A'..'Z'
> 	;
> fragment	
> Digit	:	'0'..'9'
> 	;
> 
> 
> DBLQUOTE
>    :  '"'
>       (~'"' | '""')*
>       '"'
> 	  {
> 	        
> 		int where, lastCharPos;
>         	String quote, dblDblQuote, cont;
>         	StringBuffer txt;
>         	char quoteChr = 34;
> 
>         	cont = "?\r\n"; // window continuation
>         	//cont = "?\r" // mac continuation
>         	//cont = "?\n" // unix continuation
>         	dblDblQuote = "\"\"";
>         	quote = "\n";
> 		txt = new StringBuffer(getText());
>         	lastCharPos = txt.length( )-1;
>         
>         // Remove first and last double-quote
>         	if ( txt.charAt(0) == quoteChr ) txt.deleteCharAt(0);
>        // 	if ( txt.charAt( lastCharPos ) == quoteChr ) txt.deleteCharAt( lastCharPos );
>   		System.out.println( txt.toString() );      
> 	  } 
> 	  ;
> 
> >  <<quotedText.txt>> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/2c8d2592/attachment-0001.html 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: quotedText.txt
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/2c8d2592/attachment-0001.txt 

From Waverly.Edwards at genesys.com  Fri Aug 24 15:45:29 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Fri, 24 Aug 2007 18:45:29 -0400
Subject: [antlr-interest] lexer: display all rules matched
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp>



Is there a way to display all rules or tokens matched without making one
big chain and assigning an action to it?
I have a couple hundred keywords and in experimenting I would like to
output every time a rule/token is matched
so I can compare it to a text file.  I can then figure out what I'm
missing or what doesn't work.


Thank you,


W.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070824/70cd0448/attachment.html 

From martin.kohl at gmail.com  Sat Aug 25 03:50:24 2007
From: martin.kohl at gmail.com (Martin Kohl)
Date: Sat, 25 Aug 2007 12:50:24 +0200
Subject: [antlr-interest]  Java Keywords and Rule-Naming conflicts
Message-ID: <6d93992c0708250350wa616f4fx8a0ea8bec70d129d@mail.gmail.com>

Hi again :)

Not sure that this is an actual bug, I had a parser rule called goto in my
grammar. Now the ExprParser.java has a method called goto(), however as goto
is a java keyword it cannot be used to name methods or instances, which
turns up as an error when trying to compile the java source.

Obviously, the problem can be resolved by renaming the rule goto to
something less controversial. I was thinking it might be an idea to compare
rule names with keywords of the target language prior to generating the java
files, alternatively, just leave it up to the user to figure out ;)

Greetz,
Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070825/d388b4b9/attachment.html 

From jaluber at gmx.de  Sat Aug 25 05:22:25 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 25 Aug 2007 14:22:25 +0200
Subject: [antlr-interest] Java Keywords and Rule-Naming conflicts
In-Reply-To: <6d93992c0708250350wa616f4fx8a0ea8bec70d129d@mail.gmail.com>
References: <6d93992c0708250350wa616f4fx8a0ea8bec70d129d@mail.gmail.com>
Message-ID: <46D01F01.8050701@gmx.de>

Martin Kohl wrote:
> Hi again :)
> 
> Not sure that this is an actual bug, I had a parser rule called goto in
> my grammar. Now the ExprParser.java has a method called goto(), however
> as goto is a java keyword it cannot be used to name methods or
> instances, which turns up as an error when trying to compile the java
> source.
> 
> Obviously, the problem can be resolved by renaming the rule goto to
> something less controversial. I was thinking it might be an idea to
> compare rule names with keywords of the target language prior to
> generating the java files, alternatively, just leave it up to the user
> to figure out ;)
> 
> Greetz,
> Martin

This naming conflict actually extends to names like input in OOP
languages. The solution, name mangling, is still on the todo list. :(

Best regards,
Johannes Luber

From nightwolf at email.it  Sat Aug 25 09:47:13 2007
From: nightwolf at email.it (Mauro Pellicioli)
Date: Sat, 25 Aug 2007 18:47:13 +0200
Subject: [antlr-interest] Newbie question:using lexer grammar
Message-ID: <d69c20db05eae3f984694b0f7153e25c@87.15.4.77>

Hi everyone,as the subject says: how do I use a lexer grammar with the
option filter=true?There is no method to call like when I use a parser.

Thanks for help. 
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 Prestiti: con Prometeo fino a 30.000 Euro, senza spese e senza attese!
Richiedi subito l?importo e la rata che desideri, basta un clic!
 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=6914&d=20070825



From jaluber at gmx.de  Sat Aug 25 09:51:51 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 25 Aug 2007 18:51:51 +0200
Subject: [antlr-interest] Newbie question:using lexer grammar
In-Reply-To: <d69c20db05eae3f984694b0f7153e25c@87.15.4.77>
References: <d69c20db05eae3f984694b0f7153e25c@87.15.4.77>
Message-ID: <46D05E27.90704@gmx.de>

Mauro Pellicioli wrote:
> Hi everyone,as the subject says: how do I use a lexer grammar with the
> option filter=true?There is no method to call like when I use a parser.
> 
> Thanks for help. 

Usually, you don't call the lexer directly, but use the parser. This
happens regardless of the type of the lexer. Why do you want to call the
lexer directly anyways?

Best regards,
Johannes Luber

From dev.null.nix at gmail.com  Sat Aug 25 10:00:55 2007
From: dev.null.nix at gmail.com (Stefan Klinger)
Date: Sat, 25 Aug 2007 19:00:55 +0200
Subject: [antlr-interest] C Runtime and Strings
In-Reply-To: <46cedd88.05ed300a.5f86.1643SMTPIN_ADDED@mx.google.com>
References: <46CED012.80205@gmail.com>
	<46cedd88.05ed300a.5f86.1643SMTPIN_ADDED@mx.google.com>
Message-ID: <46D06047.1080600@gmail.com>

Gavin Lambert wrote:
> >And if there is a way, is the input buffer read into one big buffer
> >so that it is valid for the whole parser?
>
> Yep.
So it should be valid to return something like this from such a rule 
(with the advantace that nothing needs to be allocated):

scoped_identifier : NAMESPACE_COLON? (IDENTIFIER NAMESPACE_COLON)* 
IDENTIFIER;

struct MyReturn {
    pANTLR3_UINT8 *begin_of_rule;
    pANTLR3_UINT8 *end_of_rule;
};

for e.g. the input "12 + my::identifier::name + 34"

begin_of_rule should be pointing to 'm' and end_of_rule to 'e'.


If someone could give me a hint how i can accomplish that it would be great.

Thanks,

Stefan


From nightwolf at email.it  Sat Aug 25 10:12:26 2007
From: nightwolf at email.it (Mauro Pellicioli)
Date: Sat, 25 Aug 2007 19:12:26 +0200
Subject: [antlr-interest]  Newbie question:using lexer grammar
Message-ID: <3ac3f516ab36842c971d2bd4395c4a84@87.15.4.77>

I'm trying to figure out what is the use of the option filter=true, in fact
i need only to build a grammar that matches any character until it sees in
the input one of the sequences: 'sequence A' or 'sequence B' or 'sequence
C'.

Thanks for clarifications.
Regards.

------- Original Message --------
	Da: Johannes Luber <jaluber at gmx.de>
	To: 
	        Cc: antlr-interest at antlr.org
	Oggetto: Re: [antlr-interest] Newbie question:using lexer grammar
	Data: 25/08/07 18:52
	
	> 
> 
> 
> Mauro Pellicioli wrote:
> > Hi everyone,as the subject says: how do I use a lexer grammar with the
> > option filter=true?There is no method to call like when I use a parser.
> > 
> > Thanks for help. 
> 
> Usually, you don't call the lexer directly, but use the parser. This
> happens regardless of the type of the lexer. Why do you want to call the
> lexer directly anyways?
> 
> Best regards,
> Johannes Luber
> 
> 
>  
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 Vuoi giocare?In REGALO x te GPBikes 3D,Bubble Boom,Rock City Empire
 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=6731&d=20070825



From jimi at temporal-wave.com  Sat Aug 25 10:26:49 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 25 Aug 2007 10:26:49 -0700
Subject: [antlr-interest] lots of warnings C runtime in antlr 3.0.1
In-Reply-To: <200708241238.41565.hs4233@mail.mn-solutions.de>
References: <200708241238.41565.hs4233@mail.mn-solutions.de>
Message-ID: <051466DAA0D608439E196797955018D702364E@wavemachine.temporal-wave.com>

I usually do compile with -wall, however I did not have time to do this
for 3.0.1, however most, if not all of these are innocuous. I have
changed some types from signed to unsigned or vice versa and so some
things like the examples need a tweak or too (where I type U
automatically I think).

The unused parameters for recognizer probably require that the relevant
pragmas be used. The use of -wall with the generated code is a 'goal'
(it is good for W4 in VS2005 for instance), but not something I am
absolutely requiring of myself just yet as things are still changing.

JIm

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Holger Schurig
> Sent: Friday, August 24, 2007 3:39 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] lots of warnings C runtime in antlr 3.0.1
> 
> Hi Jim !
> 
> Did you ever compile your code with -Wall -Wextra ?  I get a huge
> number of warnings in this case, some probably hinting to real
> problems.
> 
> You can do this by calling make like this
> 
> $ make CFLAGS="-Wall -Wextra -O2"
> 
> 
> After this, we'll see a ton of "warning: unused parameter
'recognizer'"
> errors. A way to get rid of them would be to define
> 
>    #define ANTLR3_UNUSED(var) (void)var;
> 
> in antrl3defs.h and then using ANTRL3_UNUSED(recognizer) in the bodies
> of functions that don't use this variable. Of course you could also
use
> __attribute__((unused)) with GCC compilers ...
> 
> 
> 
> Another class of warnings are this:
> 
> 
> src/antlr3baserecognizer.c: In function 'memoize':
> src/antlr3baserecognizer.c:1592: warning: signed and unsigned type in
> conditional expression
> 
> src/antlr3baserecognizer.c:1392: warning: 'freeList' defined but not
> used
> 
> src/antlr3bitset.c: In function 'antlr3BitsetList':
> src/antlr3bitset.c:190: warning: dereferencing type-punned pointer
will
> break strict-aliasing rules
> 
> src/antlr3commontreenodestream.c:558: warning: 'rewindLast' defined
but
> not used
> 
> src/antlr3cyclicdfa.c: In function 'antlr3dfapredict':
> src/antlr3cyclicdfa.c:138: warning: comparison between signed and
> unsigned
> 
> src/antlr3filestream.c:38: warning: statement with no effect
> 
> src/antlr3inputstream.c:23: warning: 'antlr3InputFileName' declared
> 'static' but never defined
> 
> src/antlr3lexer.c:21: warning: 'matchs_ucase' declared 'static' but
> never defined
> src/antlr3lexer.c:22: warning: 'matchc_ucase' declared 'static' but
> never defined
> src/antlr3lexer.c:23: warning: 'setUpperCompare' declared 'static' but
> never defined
> 
> src/antlr3string.c:297: warning: 'stringInitUTF8' defined but not used
> 
> src/antlr3tokenstream.c:119: warning: 'freeEofTOken' defined but not
> used
> 
> src/antlr3treeparser.c:13: warning: 'displayRecognitionError' declared
> 'static' but never defined
> src/antlr3treeparser.c:14: warning: 'recover' declared 'static' but
> never defined
> 
> src/antlr3rewritestreams.c:423: warning: suggest parentheses around &&
> within ||
> 
> 
> 
> Also, antlr3-constructed code has warnings:
> 
> axelLexer.c: In function 'mCHAR_VALUE':
> axelLexer.c:20634: warning: comparison of unsigned expression >= 0 is
> always true
> axelLexer.c: In function 'mSTRING_VALUE':
> axelLexer.c:20716: warning: comparison of unsigned expression >= 0 is
> always true
> axelLexer.c: In function 'mEND_COMMENT':
> axelLexer.c:21059: warning: comparison of unsigned expression >= 0 is
> always true
> axelLexer.c: In function 'mLINE_COMMENT':
> axelLexer.c:21150: warning: comparison of unsigned expression >= 0 is
> always true
> 
> At axelLexer.c, line 20634, antlr3 made this code:
> 
>         // axel.g:453:8: (~ '\"' )
>         // axel.g:453:9: ~ '\"'
>         {
>             if ( ((LA(1) >= 0x0000) && (LA(1) <= '!')) || ((LA(1) >=
> '#') && (LA(1) <= 0xFFFE)) )
>             {
>                 CONSUME();
> 
>             }
> 
> axelParser.c:451: warning: missing initializer
> axelParser.c:451: warning: (near initialization for
> 'FOLLOW_stmt_in_prog52.clone')
> axelParser.c:454: warning: missing initializer
> axelParser.c:454: warning: (near initialization for
> 'FOLLOW_LINE_COMMENT_in_prog59.clone')
> axelParser.c:457: warning: missing initializer
> axelParser.c:457: warning: (near initialization for
> 'FOLLOW_EOL_in_prog70.clone')
> 
> At axelParser.c, line 451, antrl3 made this code:
> 
> /** Bitset defining follow set for error recovery in rule state:
> FOLLOW_stmt_in_prog52  */
> static  ANTLR3_BITWORD FOLLOW_stmt_in_prog52_bits[]     = {
> ANTLR3_UINT64_LIT(0x0000000000000020) };
> static  ANTLR3_BITSET FOLLOW_stmt_in_prog52     = {
> FOLLOW_stmt_in_prog52_bits, 1       };
> 
> so I guess GCC 4.1.2 complains that not all fields of the bitset
struct
> are set.

From jimi at temporal-wave.com  Sat Aug 25 10:30:13 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 25 Aug 2007 10:30:13 -0700
Subject: [antlr-interest] [C runtime] don't compare pointer for
	negativereturn values !
In-Reply-To: <200708241326.16945.hs4233@mail.mn-solutions.de>
References: <200708241326.16945.hs4233@mail.mn-solutions.de>
Message-ID: <051466DAA0D608439E196797955018D702364F@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Holger Schurig
> Sent: Friday, August 24, 2007 4:26 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [C runtime] don't compare pointer for
> negativereturn values !
> 
> In the examples there is a file examples/C/main.c which contains
> this code:
> 
>    input       = antlr3AsciiFileStreamNew(fName);
> 
>    // The input will be created successfully, providing that
>    // there is enough memory and the file exists etc
> 
> 
> That is utterly nonsense.
>

Errr, thanks for your delicate comments. As I said earlier, I cast the
pointer to unsigned by accident in the examples and thy just need
changing to signed.
 
> Second: the return value for antlr3AsciiFileStreamNew() is a
> pointer. Comparing this for < 0 is nonsense again, because the
> c-runtime could as well give you back 0xD00C0020 as address for
> this pointer. This, seen as a signed value, would be smaller
> than zero. Yet the object has been successfully created.

Yep - I know. However, the functions you call already catch this and
specifically return -1 and -2, which will not be valid pointers.

> 
> 
> 
> So the whole interface idea isn't sane.  You can't really, in a
> platform independend way, encode return values into
> pointer-returning functions.
> 
> Suggestion:
> 
> All the xxxxxNew()-Functions that normally return a pointer

Suggestion - why don't you write your own as you know everything?

Jim

From jimi at temporal-wave.com  Sat Aug 25 10:35:21 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 25 Aug 2007 10:35:21 -0700
Subject: [antlr-interest] C Runtime and Strings
In-Reply-To: <46D06047.1080600@gmail.com>
References: <46CED012.80205@gmail.com><46cedd88.05ed300a.5f86.1643SMTPIN_ADDED@mx.google.com>
	<46D06047.1080600@gmail.com>
Message-ID: <051466DAA0D608439E196797955018D7023650@wavemachine.temporal-wave.com>

>From a rule, you can return the pANTLR3_STRING (which is generated by a
reference to a .text in an attribute) or the char pointer that it
references.

There is no requirement to use the pANTLR3_STRING stuff, it just makes
things easier and the runtime uses it for rule text etc.

The offsets in the tokens will tell you the absolute addresses when
combined with the start of your input text and you are better using
those as a STRING may not always be pointing into the input, though it
usually is.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stefan Klinger
> Sent: Saturday, August 25, 2007 10:01 AM
> To: Gavin Lambert
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C Runtime and Strings
> 
> Gavin Lambert wrote:
> > >And if there is a way, is the input buffer read into one big buffer
> > >so that it is valid for the whole parser?
> >
> > Yep.
> So it should be valid to return something like this from such a rule
> (with the advantace that nothing needs to be allocated):
> 
> scoped_identifier : NAMESPACE_COLON? (IDENTIFIER NAMESPACE_COLON)*
> IDENTIFIER;
> 
> struct MyReturn {
>     pANTLR3_UINT8 *begin_of_rule;
>     pANTLR3_UINT8 *end_of_rule;
> };
> 
> for e.g. the input "12 + my::identifier::name + 34"
> 
> begin_of_rule should be pointing to 'm' and end_of_rule to 'e'.
> 
> 
> If someone could give me a hint how i can accomplish that it would be
> great.
> 
> Thanks,
> 
> Stefan


From jimi at temporal-wave.com  Sat Aug 25 10:38:15 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 25 Aug 2007 10:38:15 -0700
Subject: [antlr-interest] C Runtime and Strings
In-Reply-To: <46CED012.80205@gmail.com>
References: <46CED012.80205@gmail.com>
Message-ID: <051466DAA0D608439E196797955018D7023651@wavemachine.temporal-wave.com>

This is just:

I1=IDENTIFIER
{
  //here $I1.text returns the string for it as ANTLR3_STRING
 //      $I1.text->chars is the actual pointer

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of dev.null.nix at gmail.com
> Sent: Friday, August 24, 2007 5:33 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C Runtime and Strings
> 
> Hi,
> 
> I have a rule like this in a C target language grammar:
> 
> scoped_identifier : NAMESPACE_COLON? (IDENTIFIER NAMESPACE_COLON)*
> IDENTIFIER;
> 
> I would like to return the string representing scoped_identifier.
> 
> Is there any way to access the buffer location of a token in the input
> buffer (like storing a pointer to the first and the last char).
> 
> And if there is a way, is the input buffer read into one big buffer so
> that it is valid for the whole parser?
> 
> Thanks,
> Stefan

From nightwolf at email.it  Sat Aug 25 10:50:34 2007
From: nightwolf at email.it (Mauro Pellicioli)
Date: Sat, 25 Aug 2007 19:50:34 +0200
Subject: [antlr-interest] Newbie question:using lexer grammar
Message-ID: <2eafd32668e23b06db7c2d95a7dce85c@87.15.4.77>

For example, I don't know why this grammar:


document:	DOCUMENT;

DOCUMENT: '<' (options {greedy=false;} : .)* ALTERNATIVE (options
{greedy=false;} : .)* '</html>' WS*;

ALTERNATIVE:	'Destination not found' {System.out.println("OK 1");}
                | 'Please make your choice by clicking on the destination
name below' {System.out.println("OK 2");}
		| 'Hotels found' {System.out.println("OK 3");};
     
WS : ' ' | '\r' | '\n' |'\t' ;	

on this html page:

http://www.booking.com/searchresults.html?return_url=http%3A%2F%2Fwww.booking.com%2Fsearchresults.html&found_addresses=&error_url=http%3A%2F%2Fwww.booking.com%2Findex.html%3Flabel%3Dshort-index.htmlerrorc_search_in_invalid%253Dsi%3Bsid%3D19361acb03c3fe7f1def5374b839e6a9%3B&label=short-index.htmlerrorc_search_in_invalid%3Dsi&sid=19361acb03c3fe7f1def5374b839e6a9&order=&addressAddress=&addressCity=&addressZIP=&addressCountry=&si=ai%2Cco%2Cci%2Cre&ss=xyz&checkin_monthday=25&checkin_year_month=2007-8&checkout_monthday=26&checkout_year_month=2007-8&radius=

gives me the error:

line 1:0 mismatched input '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0
Transitional//EN"\n  "http://www.w3.org/T.....

even if the test prints out the correct kind of page. 

Is there an error in the grammar?

--------- Original Message --------
	Da: Johannes Luber <jaluber at gmx.de>
	To: 
	        Cc: antlr-interest at antlr.org
	Oggetto: Re: [antlr-interest] Newbie question:using lexer grammar
	Data: 25/08/07 18:52
	
	> 
> 
> 
> Mauro Pellicioli wrote:
> > Hi everyone,as the subject says: how do I use a lexer grammar with the
> > option filter=true?There is no method to call like when I use a parser.
> > 
> > Thanks for help. 
> 
> Usually, you don't call the lexer directly, but use the parser. This
> happens regardless of the type of the lexer. Why do you want to call the
> lexer directly anyways?
> 
> Best regards,
> Johannes Luber
> 
> 
>  
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 Non perderti nella giungla di facili promesse, Logos ti da credito sempre!

 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=6559&d=20070825



From dev.null.nix at gmail.com  Sat Aug 25 13:33:30 2007
From: dev.null.nix at gmail.com (Stefan Klinger)
Date: Sat, 25 Aug 2007 22:33:30 +0200
Subject: [antlr-interest] C Runtime and Strings
In-Reply-To: <051466DAA0D608439E196797955018D7023651@wavemachine.temporal-wave.com>
References: <46CED012.80205@gmail.com>
	<051466DAA0D608439E196797955018D7023651@wavemachine.temporal-wave.com>
Message-ID: <46D0921A.5070008@gmail.com>

Jim Idle wrote:
> This is just:
> 
> I1=IDENTIFIER
> {
>   //here $I1.text returns the string for it as ANTLR3_STRING
>  //      $I1.text->chars is the actual pointer


But this seems to return a null terminated string, so it can't be of the 
input buffer directly.

My idea was that i refer to the input buffer directly so that i can 
simply get the range of match directly of the input buffer.

Because if i allocate a buffer for the combined tokens i have to free it 
in the calling rule, and this would be error prone and slower than 
directly referring to the input buffer.

Is there any way to to this?


To explain the idea a bit more verbose (not actually working code):

struct CombinedString {
	char *begin;
	char *end;
};

Append(CombinedString *buffer, char *ptr, size_t length) {
	if(!buffer->begin) {
		buffer->begin = ptr;
	}
	buffer->end = ptr + length;
}

scoped_identifier returns [CombinedString name]
	@init { name.begin = NULL; name.end = NULL; }
	: ((a=NAMESPACE_COLON {Append($name, $a, $a.length);} )?
	((b=IDENTIFIER c=NAMESPACE_COLON) {Append($name, $b, $b.length); 
Append($name, $c, $c.length);} )*
	d=IDENTIFIER {Append($name, $d, $d.length);} );

> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of dev.null.nix at gmail.com
>> Sent: Friday, August 24, 2007 5:33 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] C Runtime and Strings
>>
>> Hi,
>>
>> I have a rule like this in a C target language grammar:
>>
>> scoped_identifier : NAMESPACE_COLON? (IDENTIFIER NAMESPACE_COLON)*
>> IDENTIFIER;
>>
>> I would like to return the string representing scoped_identifier.
>>
>> Is there any way to access the buffer location of a token in the input
>> buffer (like storing a pointer to the first and the last char).
>>
>> And if there is a way, is the input buffer read into one big buffer so
>> that it is valid for the whole parser?
>>
>> Thanks,
>> Stefan
> 


From matthew.j.diehl at intel.com  Sat Aug 25 14:13:05 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Sat, 25 Aug 2007 14:13:05 -0700
Subject: [antlr-interest] Lexer predicates...why don't they work for me?
Message-ID: <A10CD303B51F814DB568A8AAF02174C2028A55EA@orsmsx417.amr.corp.intel.com>

Hi,

The lexer is the part of ANTLR that I do not understand at all.  I think
I understand what it's doing, but obviously I don't.  It always feels
like it is a LL(1) lexer.  For instance if I have the following rules:

Apostrophe : '\''
CharacterLiteral : Apostrophe (.) Apostrophe ;

Given an input of:
foo = '0'; --works fine (token = CharacterLiteral)
Foo = signalA'RANGE --doesn't work.  It throws a lexer error saying that
'A' is not an apostrophe (''')
In this case I would like it to just return ''' as Apostrophe.

I tried using predicates:
CharacterLiteral : (Apostrophe (.) Apostrophe)=> Apostrophe (.)
Apostrophe ;

And also:
CharacterLiteral : Apostrophe (.) Apostrophe
                 | Apostrophe {$type=Apostrophe;} ;
   /*same error as above*/
CharacterLiteral : {input.LA(3)==Apostrophe}? Apostrophe (.) Apostrophe
;
   /*threw a 'did not pass predicate' error */

But none of it's working.  What am I doing wrong?  Thanks for your time
and consideration.

Matt

From jimi at temporal-wave.com  Sat Aug 25 17:04:26 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 25 Aug 2007 17:04:26 -0700
Subject: [antlr-interest] C Runtime and Strings
In-Reply-To: <46D0921A.5070008@gmail.com>
References: <46CED012.80205@gmail.com>
	<051466DAA0D608439E196797955018D7023651@wavemachine.temporal-wave.com>
	<46D0921A.5070008@gmail.com>
Message-ID: <051466DAA0D608439E196797955018D7023652@wavemachine.temporal-wave.com>

Yes, you can do that too, the token returned by I1=IDENT... does exactly
this, specifying only the start and stop index. $I1.xxxx where xxx is
the thing you want from the token as per examples and the published book
etc. For instance, with $I1 you can use getStartIndex and getStopIndex.

However, the string from .text is not actualized until it is asked for,
for performance reasons. Once you have a ANTLR3_STRING though, you can
use things like append8, addc, length, substring and so on. The string
is contracted from the input buffer in the way you want, though doing it
yourself can be more efficient.

Jim

> -----Original Message-----
> From: Stefan Klinger [mailto:dev.null.nix at gmail.com]
> Sent: Saturday, August 25, 2007 1:34 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C Runtime and Strings
> 
> Jim Idle wrote:
> > This is just:
> >
> > I1=IDENTIFIER
> > {
> >   //here $I1.text returns the string for it as ANTLR3_STRING
> >  //      $I1.text->chars is the actual pointer
> 
> 
> But this seems to return a null terminated string, so it can't be of
> the
> input buffer directly.
> 
> My idea was that i refer to the input buffer directly so that i can
> simply get the range of match directly of the input buffer.
> 
> Because if i allocate a buffer for the combined tokens i have to free
> it
> in the calling rule, and this would be error prone and slower than
> directly referring to the input buffer.
> 
> Is there any way to to this?
> 
> 
> To explain the idea a bit more verbose (not actually working code):
> 
> struct CombinedString {
> 	char *begin;
> 	char *end;
> };
> 
> Append(CombinedString *buffer, char *ptr, size_t length) {
> 	if(!buffer->begin) {
> 		buffer->begin = ptr;
> 	}
> 	buffer->end = ptr + length;
> }
> 
> scoped_identifier returns [CombinedString name]
> 	@init { name.begin = NULL; name.end = NULL; }
> 	: ((a=NAMESPACE_COLON {Append($name, $a, $a.length);} )?
> 	((b=IDENTIFIER c=NAMESPACE_COLON) {Append($name, $b, $b.length);
> Append($name, $c, $c.length);} )*
> 	d=IDENTIFIER {Append($name, $d, $d.length);} );
> 
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of dev.null.nix at gmail.com
> >> Sent: Friday, August 24, 2007 5:33 AM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] C Runtime and Strings
> >>
> >> Hi,
> >>
> >> I have a rule like this in a C target language grammar:
> >>
> >> scoped_identifier : NAMESPACE_COLON? (IDENTIFIER NAMESPACE_COLON)*
> >> IDENTIFIER;
> >>
> >> I would like to return the string representing scoped_identifier.
> >>
> >> Is there any way to access the buffer location of a token in the
> input
> >> buffer (like storing a pointer to the first and the last char).
> >>
> >> And if there is a way, is the input buffer read into one big buffer
> so
> >> that it is valid for the whole parser?
> >>
> >> Thanks,
> >> Stefan
> >


From fyaoxy at gmail.com  Sat Aug 25 17:08:53 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Sun, 26 Aug 2007 08:08:53 +0800
Subject: [antlr-interest] Lexer predicates...why don't they work for me?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2028A55EA@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C2028A55EA@orsmsx417.amr.corp.intel.com>
Message-ID: <91dd9a4f0708251708r19075728pf76ba59ca948f3c@mail.gmail.com>

Hi,
Your example, you can goto antlr site, click document link to go that,
search
greedy
you will see documents which give samples like this: T
(options{greedy=false;}:.)* T
and you can search maillist check out some subject about lexer and parser
and difference between those.

and you can search filter about usage.

2007/8/26, Diehl, Matthew J <matthew.j.diehl at intel.com>:
>
> Hi,
>
> The lexer is the part of ANTLR that I do not understand at all.  I think
> I understand what it's doing, but obviously I don't.  It always feels
> like it is a LL(1) lexer.  For instance if I have the following rules:
>
> Apostrophe : '\''
> CharacterLiteral : Apostrophe (.) Apostrophe ;
>
> Given an input of:
> foo = '0'; --works fine (token = CharacterLiteral)
> Foo = signalA'RANGE --doesn't work.  It throws a lexer error saying that
> 'A' is not an apostrophe (''')
> In this case I would like it to just return ''' as Apostrophe.
>
> I tried using predicates:
> CharacterLiteral : (Apostrophe (.) Apostrophe)=> Apostrophe (.)
> Apostrophe ;
>
> And also:
> CharacterLiteral : Apostrophe (.) Apostrophe
>                  | Apostrophe {$type=Apostrophe;} ;
>    /*same error as above*/
> CharacterLiteral : {input.LA(3)==Apostrophe}? Apostrophe (.) Apostrophe
> ;
>    /*threw a 'did not pass predicate' error */
>
> But none of it's working.  What am I doing wrong?  Thanks for your time
> and consideration.
>
> Matt
>



-- 
??
???
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070826/0de90f93/attachment.html 

From jaluber at gmx.de  Sun Aug 26 06:40:24 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 26 Aug 2007 15:40:24 +0200
Subject: [antlr-interest] Newbie question:using lexer grammar
In-Reply-To: <2eafd32668e23b06db7c2d95a7dce85c@87.15.4.77>
References: <2eafd32668e23b06db7c2d95a7dce85c@87.15.4.77>
Message-ID: <46D182C8.6090900@gmx.de>

Mauro Pellicioli wrote:
> For example, I don't know why this grammar:
> 
> 
> document:	DOCUMENT;
> 
> DOCUMENT: '<' (options {greedy=false;} : .)* ALTERNATIVE (options
> {greedy=false;} : .)* '</html>' WS*;
> 
> ALTERNATIVE:	'Destination not found' {System.out.println("OK 1");}
>                 | 'Please make your choice by clicking on the destination
> name below' {System.out.println("OK 2");}
> 		| 'Hotels found' {System.out.println("OK 3");};
>      
> WS : ' ' | '\r' | '\n' |'\t' ;	
> 
> on this html page:
> 
> http://www.booking.com/searchresults.html?return_url=http%3A%2F%2Fwww.booking.com%2Fsearchresults.html&found_addresses=&error_url=http%3A%2F%2Fwww.booking.com%2Findex.html%3Flabel%3Dshort-index.htmlerrorc_search_in_invalid%253Dsi%3Bsid%3D19361acb03c3fe7f1def5374b839e6a9%3B&label=short-index.htmlerrorc_search_in_invalid%3Dsi&sid=19361acb03c3fe7f1def5374b839e6a9&order=&addressAddress=&addressCity=&addressZIP=&addressCountry=&si=ai%2Cco%2Cci%2Cre&ss=xyz&checkin_monthday=25&checkin_year_month=2007-8&checkout_monthday=26&checkout_year_month=2007-8&radius=
> 
> gives me the error:
> 
> line 1:0 mismatched input '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0
> Transitional//EN"\n  "http://www.w3.org/T.....
> 
> even if the test prints out the correct kind of page. 
> 
> Is there an error in the grammar?

Testing your grammar in the debugger on the saved page doesn't result in
any error. It may be possible that your version of the saved file has
something else at the begin of the text file than '<'. If you saved it
in UTF 16 then there will certainly a BOM (Byte Order Mark) at the
beginning, but the Java file reader may swallow that already. Or other
whitespace may have been found. The general error recovery strategy of
ANTLR is to delete superfluous tokens and to give an error message like
you seen.

The best method is to remove the '<', as it isn't interesting to you:

DOCUMENT: (options {greedy=false;} : .)* ALTERNATIVE (options
{greedy=false;} : .)* '</html>' WS*;

The removal of the trailing part causes a mismatched exception with EOF
- a strange error. Another point I noticed is the hardcoding of the
search text. Any change on the displayed on the webpage can cause your
scanner to fail. How about searching for HTML classes like "<h1
class="sorth1">" near the displayed text? Those constructs won't change
as often as the displayed text.

In any case, your goal is suitable for the filter option. The filter
option causes the lexer to skip any input, which doesn't match a token.
In your case, you would need three tokens, one for each alternative, and
a parser rule, which matches one occurrence of those tokens.

grammar MauroTest;

options {
	filter=true;
}

ALTERNATIVE1:	'Destination not found';
ALTERNATIVE2:	'Please make your choice by clicking on the destination
name below';
ALTERNATIVE3:	'Hotels found';

document
	:	ALTERNATIVE1 {System.out.println("OK 1");}
	|	ALTERNATIVE2 {System.out.println("OK 2");}
	|	ALTERNATIVE3 {System.out.println("OK 3");}
	;

For whatever reason, there was no output of "OK 1", despite ALTERNATIVE1
being recognized. Maybe one has to use separate lexer and parser grammars...

Best regards,
Johannes Luber

From jimi at temporal-wave.com  Sun Aug 26 09:16:12 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 26 Aug 2007 09:16:12 -0700
Subject: [antlr-interest] Lexer predicates...why don't they work for me?
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2028A55EA@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C2028A55EA@orsmsx417.amr.corp.intel.com>
Message-ID: <051466DAA0D608439E196797955018D7023653@wavemachine.temporal-wave.com>

Try:

fragment APOSTROPHE : '\'';

CHARLIT : '\''
            (
                 (. '\'')=> . '\''
               | { $type = APOSTROPHE; }
            )
        ;

ANTLR cannot see beyond the end of the rule/outside the rule, and you
created two rules that can trigger the use of '\''. Hence it decided
that if it sees '\'' it will start looking down the CharacterLiteral
path. Your predicate (you could use that in the rule above of course)
merely serves to tell the rule that this isn't what it should be
matching, but gives it no alternative, hence you get a failed predicate
error. So, what you want is to trigger both tokens by their common root
'\'', then distinguish between the two at that point. Then you supply
two alternatives distinguished by your predicate and it should all work
as you require.

Of course, this does not distinguish: 'C''''

Which would become 2 CHARLITS and may not be what you want. You might
need to process '\'' for instance?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Diehl, Matthew J
> Sent: Saturday, August 25, 2007 2:13 PM
> To: antlr
> Subject: [antlr-interest] Lexer predicates...why don't they work for
> me?
> 
> Hi,
> 
> The lexer is the part of ANTLR that I do not understand at all.  I
> think
> I understand what it's doing, but obviously I don't.  It always feels
> like it is a LL(1) lexer.  For instance if I have the following rules:
> 
> Apostrophe : '\''
> CharacterLiteral : Apostrophe (.) Apostrophe ;
> 
> Given an input of:
> foo = '0'; --works fine (token = CharacterLiteral)
> Foo = signalA'RANGE --doesn't work.  It throws a lexer error saying
> that
> 'A' is not an apostrophe (''')
> In this case I would like it to just return ''' as Apostrophe.
> 
> I tried using predicates:
> CharacterLiteral : (Apostrophe (.) Apostrophe)=> Apostrophe (.)
> Apostrophe ;
> 
> And also:
> CharacterLiteral : Apostrophe (.) Apostrophe
>                  | Apostrophe {$type=Apostrophe;} ;
>    /*same error as above*/
> CharacterLiteral : {input.LA(3)==Apostrophe}? Apostrophe (.)
Apostrophe
> ;
>    /*threw a 'did not pass predicate' error */
> 
> But none of it's working.  What am I doing wrong?  Thanks for your
time
> and consideration.
> 
> Matt

From antlr at mirality.co.nz  Sun Aug 26 13:19:36 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 27 Aug 2007 08:19:36 +1200
Subject: [antlr-interest] Newbie question:using lexer grammar
In-Reply-To: <46D182C8.6090900@gmx.de>
References: <2eafd32668e23b06db7c2d95a7dce85c@87.15.4.77>
	<46D182C8.6090900@gmx.de>
Message-ID: <20070826201950.9E6CE11EB55@www.antlr.org>

At 01:40 27/08/2007, Johannes Luber wrote:
 >grammar MauroTest;
 >
 >options {
 >	filter=true;
 >}
 >
 >ALTERNATIVE1:	'Destination not found';
 >ALTERNATIVE2:	'Please make your choice by clicking on the
 >destination name below';
 >ALTERNATIVE3:	'Hotels found';
 >
 >document
 >	:	ALTERNATIVE1 {System.out.println("OK 1");}
 >	|	ALTERNATIVE2 {System.out.println("OK 2");}
 >	|	ALTERNATIVE3 {System.out.println("OK 3");}
 >	;
 >
 >For whatever reason, there was no output of "OK 1", despite
 >ALTERNATIVE1 being recognized. Maybe one has to use separate
 >lexer and parser grammars...

Yes, "filter = true" requires "lexer grammar".  (And removing the 
'document' rule entirely; you can put the printlns on the lexer 
rules instead.)


From Waverly.Edwards at genesys.com  Sun Aug 26 17:14:15 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Sun, 26 Aug 2007 20:14:15 -0400
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D03@navamane001.ad.internal.corp>


This doesn't seem to translate well into email but the use of the curly
quote characters ( not the double quote )
but the ones like you would generate in MS Word generates an error in
Antlrworks.  


fragment
QuoteChar     :	('"'|'"'|'"') ; 
// allowable quote characters.  
//Am I doing anyone favors by allowing all these characters?


Interestingly enough even if I comment out the offending lines the
errors are still generated.  A grammar check gives me a "sucessful"
dialog but I still get the below errors.

Shouldn't I be able to use the curly quotes?  Is this a bug?

Maybe a better question, should I allow the user to use curly quotes?

Is this the correct place to note such issues?


W.

[19:55:56] Checking Grammar...
[19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
	at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
	at
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:1
61)
	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
	at antlr.LLkParser.LA(LLkParser.java:52)
	at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
	at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
	at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
	at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
	at
org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
	at
org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
	at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
Source)
	at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
	at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

[19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
	at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
	at
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:1
61)
	at antlr.TokenBuffer.fill(TokenBuffer.java:69)
	at antlr.TokenBuffer.LA(TokenBuffer.java:80)
	at antlr.LLkParser.LA(LLkParser.java:52)
	at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
	at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
	at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
	at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
	at
org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
	at
org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
	at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
Source)
	at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
	at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070826/bf4c95a3/attachment.html 

From atif.azad at hotmail.com  Sun Aug 26 18:52:00 2007
From: atif.azad at hotmail.com (atif azad)
Date: Mon, 27 Aug 2007 06:52:00 +0500
Subject: [antlr-interest] help regrading actions in antlr grammer
Message-ID: <BLU105-F39B1D556A5496B3CAEA4F7E5D20@phx.gbl>



Hello Dear
I am a student .And I am trying to add actions to this grammer as below.
I want to get a list of OPCODES and then operands on the terminal.
Can any one plz help me how can I do it without using the string Template 
and will be useful if also using the string template.
i will be greatful.


Here is the grammer

grammar assemb;
options {output=template; rewrite=true;}


program
    :   (stat)+

    ;

stat:    OPCODE operands

    ;
operands
    :REGISTER SEMI
     | REGISTER  COMMA REGISTER  SEMI
    ;

OPCODE :
     'add'
	|'store'
	|'load'
	|'call'
	|'ret'
	|'print' ;

REGISTER :
	   'r1'
           |'r2'
	   |'r3'
           |'r4'   ;

NUM  :    '[0-9]+' ;
ID   :    '[a-zA-Z]+' ;

EOL
    : (('\r')? '\n') ;

WS
    : (
    | (' ' | '\t')
    ) { $channel=HIDDEN; }
    ;
SEMI:
     ';'
    ;
COMMA:
      ','
      ;



Regards
Azad , Atif

_________________________________________________________________
Express yourself instantly with MSN Messenger! Download today it's FREE! 
http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/


From mitsu at syntheticzero.com  Sun Aug 26 22:47:38 2007
From: mitsu at syntheticzero.com (Mitsu Hadeishi)
Date: Mon, 27 Aug 2007 01:47:38 -0400
Subject: [antlr-interest] Character literals in ANTLR 3?
Message-ID: <8E8B4E9F-B601-4E32-9CD8-CCA37D981F19@syntheticzero.com>

Hi,

I hope this is the right list to post this question.  I've just been  
attempting to convert a grammar from ANTLR 2 to ANTLR 3 --- I am an  
ANTLR newbie, however, so forgive me if this is a stupid  question  
--- but I am trying to convert the following from a lexer rule:

  '\177'..'\377'

ANTLR 3 doesn't recognize that syntax for string literals.  I  
searched the wiki and the ANTLR 3 documentation page and did not see  
any mention of the exact definition of the escape sequences that  
ANTLR 3 recognizes (for octal character constants in particular).   
What is the ANTLR 3 equivalent of the above?

Mitsu


From alexandre.hamez at lip6.fr  Mon Aug 27 00:33:26 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Mon, 27 Aug 2007 09:33:26 +0200
Subject: [antlr-interest] Reading a string of fixed size
Message-ID: <35D0B9D3-9507-4ECE-A709-32B75113AA1B@lip6.fr>

Hi everybody,

	I need to read a string of a fixed size. For example : '5:abcde'.  
The size of the string to be read is given by the number before the  
':'. So I've written the following:

CAMI_STRING
	:
	NUMBER ':'
	{
		// Get the current position in stream
		int start  = input.getCharPositionInLine();
		// Computing the position of the last character of the STRING to be  
read
		int end = start + Integer.parseInt($NUMBER.text) - 1;
		// Set the value of the returned value to STRING
		setText(input.substring(start,end));
		// Update the position in the stream
		input.seek(end+1);
	}
	;
	
NUMBER	
	: 	
	'0'..'9'+
	;


It works quite well until the string to be read contains a number  
itself. Have you an idea on this problem? Thanks for you help!


------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/0060e9aa/attachment.bin 

From martin.kohl at gmail.com  Mon Aug 27 00:51:01 2007
From: martin.kohl at gmail.com (Martin Kohl)
Date: Mon, 27 Aug 2007 09:51:01 +0200
Subject: [antlr-interest]  caseSensitive=false?
Message-ID: <6d93992c0708270051g6532342bvb36c70277fc41225@mail.gmail.com>

Hello once more :)

I can't get this option (caseSensitive) to work properly... My grammar is
all in one file, I haven't seperated the Lexer from the Parser. Is that a
requirement for this option to be used? Why can't I just set the option into
the main options section at the start of the grammar, or specifically add it
to a rule in a rule-options block?

I appreciate that there's alot of work connected with providing these
options, I just find it a shame that I can't seem to use such a useful
option in my current grammar. Maybe writing the Lexer and Parser into the
same grammar file just isn't good form, in which case maybe I should
consider separating the two,.. it's just quite a bit of work and apart from
this issue it already works quite well the way it is :P

I'd appreciate any information you can throw my way as to the proper use of
the caseSensitive option :)
Kind regards,
Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/ade948a0/attachment-0001.html 

From doebel at tudos.org  Mon Aug 27 02:38:28 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Mon, 27 Aug 2007 11:38:28 +0200
Subject: [antlr-interest] help regrading actions in antlr grammer
In-Reply-To: <BLU105-F39B1D556A5496B3CAEA4F7E5D20@phx.gbl>
References: <BLU105-F39B1D556A5496B3CAEA4F7E5D20@phx.gbl>
Message-ID: <46D29B94.4070303@tudos.org>

Hi,

> Hello Dear
> I am a student .And I am trying to add actions to this grammer as below.

So assuming input like

add foo, bar ;

you want to print

add foo bar

in your terminal? Just add some print statements to your parser rules.

> I want to get a list of OPCODES and then operands on the terminal.
> Can any one plz help me how can I do it without using the string
> Template and will be useful if also using the string template.
> i will be greatful.
> 
> 
> Here is the grammer
> 
> grammar assemb;
> options {output=template; rewrite=true;}

You don't need these options.

> program
>    :   (stat)+
> 
>    ;
> 
> stat:    OPCODE operands

rewrite to:

stat : OPCODE operands {print $OPCODE.text} ;

> 
>    ;
> operands
>    :REGISTER SEMI
>     | REGISTER  COMMA REGISTER  SEMI
>    ;

operands:
	REGISTER SEMI	{ print $REGISTER.text }
      | r1=REGISTER COMMA r2=REGISTER SEMI { print r1.text, r2.text }

> OPCODE :
>     'add'
>     |'store'
>     |'load'
>     |'call'
>     |'ret'
>     |'print' ;
> 
> REGISTER :
>        'r1'
>           |'r2'
>        |'r3'
>           |'r4'   ;
> 
> NUM  :    '[0-9]+' ;
> ID   :    '[a-zA-Z]+' ;
> 
> EOL
>    : (('\r')? '\n') ;
> 
> WS
>    : (
>    | (' ' | '\t')
>    ) { $channel=HIDDEN; }
>    ;

Do you really want to catch EOL? Otherwise you could include it into the
ignored whitespace rule.

Regards,
Bjoern

From jaluber at gmx.de  Mon Aug 27 02:51:42 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 11:51:42 +0200
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D03@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04D03@navamane001.ad.internal.corp>
Message-ID: <46D29EAE.9050207@gmx.de>

Edwards, Waverly wrote:
> 
> This doesn?t seem to translate well into email but the use of the curly
> quote characters ( not the double quote )
> but the ones like you would generate in MS Word generates an error in
> Antlrworks. 
> 
> 
> fragment
> QuoteChar     : ('"'|'?'|'?') ;
> // allowable quote characters. 
> //Am I doing anyone favors by allowing all these characters?
> 
> 
> Interestingly enough even if I comment out the offending lines the
> errors are still generated.  A grammar check gives me a "sucessful"
> dialog but I still get the below errors.
> 
> Shouldn?t I be able to use the curly quotes?  Is this a bug?
> 
> Maybe a better question, should I allow the user to use curly quotes?
> 
> Is this the correct place to note such issues?
> 
> 
> W.
> 

Yes, it is the correct place for bug reports, but this isn't a bug.
ANTLR can only process ASCII characters, not Unicode, until version 3.1.
The reason is that the 3.0 series uses the old 2.7.7 ANTLR to parse
grammars and the old version was limited in the input range, even if the
offending characters are in comments (something, which should change in
3.1). A workaround is to find the Unicode value for the offending
characters and employ the '\uXXXX' syntax.

Best regards,
Johannes Luber

> [19:55:56] Checking Grammar...
> [19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
>         at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
>         at
> antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:161)
>         at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>         at antlr.TokenBuffer.LA(TokenBuffer.java:80)
>         at antlr.LLkParser.LA(LLkParser.java:52)
>         at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
>         at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
>         at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
>         at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
>         at
> org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
>         at
> org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown Source)
>         at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
> Source)
>         at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
>         at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
>         at java.lang.Thread.run(Unknown Source)
> 
> [19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
>         at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
>         at
> antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:161)
>         at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>         at antlr.TokenBuffer.LA(TokenBuffer.java:80)
>         at antlr.LLkParser.LA(LLkParser.java:52)
>         at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
>         at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
>         at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
>         at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
>         at
> org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
>         at
> org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown Source)
>         at org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
> Source)
>         at org.antlr.works.grammar.EngineGrammar.analyze(Unknown Source)
>         at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
>         at java.lang.Thread.run(Unknown Source)
> 


From Waverly.Edwards at genesys.com  Mon Aug 27 02:52:30 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 05:52:30 -0400
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <35D0B9D3-9507-4ECE-A709-32B75113AA1B@lip6.fr>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D04@navamane001.ad.internal.corp>


Here is something that is functional.  

I'm a newbie at all of this, ANTLR and Regular expressions so don't take this as the Gospel.  You'll want to check this out carefully.

I didn't even know you could do this:  Integer.parseInt($NUMBER.text)

If you can, this code could be shorter and I will have learned something else useful.


W.



grammar  TESTCAMISTRING;

fragment
Letter        :	'a'..'z' | 'A'..'Z' ;
	
fragment	
Digit	      :	'0'..'9' ;

fragment
AlphaNum      :	Letter | Digit ;

prog	      :	start+ ;

start         : CAMI_STRING
              ; 
NEWLINE	:	('\r\n'|'\r'|'\n') ; 

	
CAMI_STRING   : Digit+ ':' Letter AlphaNum*
    {
        String wholeStr,numStr,fixLenStr;
        int colonLoc, num;
        boolean validate;
        
        wholeStr  = getText().toString();
        colonLoc  = wholeStr.indexOf(":");
        numStr    = wholeStr.substring(0, colonLoc);
        num       = Integer.parseInt(numStr);
        fixLenStr = wholeStr.substring(colonLoc+1);
        validate  = (num == fixLenStr.length() );
        if ( validate == true )
            System.out.println(numStr + "," + fixLenStr);
        else
            System.out.println("ERROR: num:Str length mismatch");
    };


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alexandre Hamez
Sent: Monday, August 27, 2007 3:33 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Reading a string of fixed size

Hi everybody,

	I need to read a string of a fixed size. For example : '5:abcde'.  
The size of the string to be read is given by the number before the ':'. So I've written the following:

CAMI_STRING
	:
	NUMBER ':'
	{
		// Get the current position in stream
		int start  = input.getCharPositionInLine();
		// Computing the position of the last character of the STRING to be read
		int end = start + Integer.parseInt($NUMBER.text) - 1;
		// Set the value of the returned value to STRING
		setText(input.substring(start,end));
		// Update the position in the stream
		input.seek(end+1);
	}
	;
	
NUMBER	
	: 	
	'0'..'9'+
	;


It works quite well until the string to be read contains a number itself. Have you an idea on this problem? Thanks for you help!


------------------------------------------------------------------------
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris http://www-src.lip6.fr/~Alexandre.Hamez



From angela.k.ns at gmail.com  Mon Aug 27 02:59:32 2007
From: angela.k.ns at gmail.com (a.k.n.s)
Date: Mon, 27 Aug 2007 02:59:32 -0700
Subject: [antlr-interest] Access AST created by parser
Message-ID: <6d7cf9470708270259t4593581dm3c421e95ecbb39b7@mail.gmail.com>

I am very, very new to antlr, so perhaps I'm missing something simple - but
I seem to be unable to access the AST representation of my input file.

The basics of my grammar are as follows:

grammar Model;

options {
    language=CSharp;
    output=AST;
}

deck
    :   (statement)+
    ;

statement
    :   (welldef|modelSize)
    ;

welldef
    :   'WELLDEF'^ declarator+ EOL
    ;

modelSize: 'MODELSIZE'^ xSize ySize zSize EOL
    ;

....

I use AntlrWorks to generate the Parser and Lexer.

My input file looks like this:

WELLDEF SS001
WELLDEF PN001 ERER001 P33001 AA001
MODELSIZE  53  79  67
WELLDEF PN0014444

I'm only able to access the tree of the first row (by calling parser.deck())
- is there a parser function I can call to get a tree representation of the
entire file? I would really appreciate it if someone could point me in the
right direction.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/52f1fdc0/attachment.html 

From jaluber at gmx.de  Mon Aug 27 03:04:41 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 12:04:41 +0200
Subject: [antlr-interest] Character literals in ANTLR 3?
In-Reply-To: <8E8B4E9F-B601-4E32-9CD8-CCA37D981F19@syntheticzero.com>
References: <8E8B4E9F-B601-4E32-9CD8-CCA37D981F19@syntheticzero.com>
Message-ID: <46D2A1B9.7070704@gmx.de>

Mitsu Hadeishi wrote:
> Hi,
> 
> I hope this is the right list to post this question.  I've just been
> attempting to convert a grammar from ANTLR 2 to ANTLR 3 --- I am an
> ANTLR newbie, however, so forgive me if this is a stupid  question ---
> but I am trying to convert the following from a lexer rule:
> 
>  '\177'..'\377'
> 
> ANTLR 3 doesn't recognize that syntax for string literals.  I searched
> the wiki and the ANTLR 3 documentation page and did not see any mention
> of the exact definition of the escape sequences that ANTLR 3 recognizes
> (for octal character constants in particular).  What is the ANTLR 3
> equivalent of the above?
> 
> Mitsu
> 

I don't believe that I have seen the octal notation in the TDAR, but you
can use the Unicode notation instead: '\u007f'..'\u00FF'.

Best regards,
Johannes Luber

From jaluber at gmx.de  Mon Aug 27 03:07:54 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 12:07:54 +0200
Subject: [antlr-interest] caseSensitive=false?
In-Reply-To: <6d93992c0708270051g6532342bvb36c70277fc41225@mail.gmail.com>
References: <6d93992c0708270051g6532342bvb36c70277fc41225@mail.gmail.com>
Message-ID: <46D2A27A.2090105@gmx.de>

Martin Kohl wrote:
> Hello once more :)
> 
> I can't get this option (caseSensitive) to work properly... My grammar
> is all in one file, I haven't seperated the Lexer from the Parser. Is
> that a requirement for this option to be used? Why can't I just set the
> option into the main options section at the start of the grammar, or
> specifically add it to a rule in a rule-options block?
> 
> I appreciate that there's alot of work connected with providing these
> options, I just find it a shame that I can't seem to use such a useful
> option in my current grammar. Maybe writing the Lexer and Parser into
> the same grammar file just isn't good form, in which case maybe I should
> consider separating the two,.. it's just quite a bit of work and apart
> from this issue it already works quite well the way it is :P
> 
> I'd appreciate any information you can throw my way as to the proper use
> of the caseSensitive option :)
> Kind regards,
> Martin

There is no caseSensitive option in ANTLR 3. Please search the mailing
list for this discussion and the appropriate solution. (This seems to be
a FAQ.)

Best regards,
Johannes Luber

From Waverly.Edwards at genesys.com  Mon Aug 27 03:24:34 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 06:24:34 -0400
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D04@navamane001.ad.internal.corp>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>

I gave it another chance, not knowing you could used rules as variables.  Here is something a little more terse CAMI_STRING2 though I generate an error which I don't understand how to get rid of.  It didn't happen in the CAMI_STRING version.

The error:
line 1:0 required (...)+ loop did not match anything at input '5:abcde'


W.

grammar  TESTCAMISTRING;

fragment
Letter        :	'a'..'z' | 'A'..'Z' ;
	
fragment	
Digit	      :	'0'..'9' ;

fragment
AlphaNum      :	Letter | Digit ;

fragment
Number        : Digit+ ;

fragment
AlphaNumStr   : Letter AlphaNum* ;


prog	      :	start+ ;

start         : CAMI_STRING2
              ; 
NEWLINE	:	('\r\n'|'\r'|'\n') ; 


// works just fine but is not as efficient or terse as CAMI_STRING2	
CAMI_STRING   : Digit+ ':' Letter AlphaNum*
    {
        String wholeStr,numStr,fixLenStr;
        int colonLoc, num;
        boolean validate;
        
        wholeStr  = getText().toString();
        colonLoc  = wholeStr.indexOf(":");
        numStr    = wholeStr.substring(0, colonLoc);
        num       = Integer.parseInt(numStr);
        fixLenStr = wholeStr.substring(colonLoc+1);
        validate  = (num == fixLenStr.length() );
        if ( validate == true )
            System.out.println(numStr + "," + fixLenStr );
        else
            System.out.println("ERROR: num:Str length mismatch");
    };


CAMI_STRING2   : Number ':' AlphaNumStr
    {        
        int num           = Integer.parseInt($Number.text);
        String fixLenStr  = $AlphaNumStr.text;
        boolean validate  = (num == fixLenStr.length() );
        if ( validate == true )
            System.out.println( num + "," + fixLenStr );
        else
            System.out.println("ERROR: num:Str length mismatch");
    }; 


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Monday, August 27, 2007 5:53 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading a string of fixed size


Here is something that is functional.  

I'm a newbie at all of this, ANTLR and Regular expressions so don't take this as the Gospel.  You'll want to check this out carefully.

I didn't even know you could do this:  Integer.parseInt($NUMBER.text)

If you can, this code could be shorter and I will have learned something else useful.


W.



grammar  TESTCAMISTRING;

fragment
Letter        :	'a'..'z' | 'A'..'Z' ;
	
fragment	
Digit	      :	'0'..'9' ;

fragment
AlphaNum      :	Letter | Digit ;

prog	      :	start+ ;

start         : CAMI_STRING
              ; 
NEWLINE	:	('\r\n'|'\r'|'\n') ; 

	
CAMI_STRING   : Digit+ ':' Letter AlphaNum*
    {
        String wholeStr,numStr,fixLenStr;
        int colonLoc, num;
        boolean validate;
        
        wholeStr  = getText().toString();
        colonLoc  = wholeStr.indexOf(":");
        numStr    = wholeStr.substring(0, colonLoc);
        num       = Integer.parseInt(numStr);
        fixLenStr = wholeStr.substring(colonLoc+1);
        validate  = (num == fixLenStr.length() );
        if ( validate == true )
            System.out.println(numStr + "," + fixLenStr);
        else
            System.out.println("ERROR: num:Str length mismatch");
    };


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alexandre Hamez
Sent: Monday, August 27, 2007 3:33 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Reading a string of fixed size

Hi everybody,

	I need to read a string of a fixed size. For example : '5:abcde'.  
The size of the string to be read is given by the number before the ':'. So I've written the following:

CAMI_STRING
	:
	NUMBER ':'
	{
		// Get the current position in stream
		int start  = input.getCharPositionInLine();
		// Computing the position of the last character of the STRING to be read
		int end = start + Integer.parseInt($NUMBER.text) - 1;
		// Set the value of the returned value to STRING
		setText(input.substring(start,end));
		// Update the position in the stream
		input.seek(end+1);
	}
	;
	
NUMBER	
	: 	
	'0'..'9'+
	;


It works quite well until the string to be read contains a number itself. Have you an idea on this problem? Thanks for you help!


------------------------------------------------------------------------
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris http://www-src.lip6.fr/~Alexandre.Hamez



From Waverly.Edwards at genesys.com  Mon Aug 27 03:29:29 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 06:29:29 -0400
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
In-Reply-To: <46D29EAE.9050207@gmx.de>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D06@navamane001.ad.internal.corp>

 
I didn't know those characters were unicode characters.  I thought they
were in the upper part of the ascii set.

Thank you for the response.


W.


Oh, how wise is it to allow such characters a synonyms for quote marks?

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Monday, August 27, 2007 5:52 AM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?

Edwards, Waverly wrote:
> 
> This doesn't seem to translate well into email but the use of the 
> curly quote characters ( not the double quote ) but the ones like you 
> would generate in MS Word generates an error in Antlrworks.
> 
> 
> fragment
> QuoteChar     : ('"'|'"'|'"') ;
> // allowable quote characters. 
> //Am I doing anyone favors by allowing all these characters?
> 
> 
> Interestingly enough even if I comment out the offending lines the 
> errors are still generated.  A grammar check gives me a "sucessful"
> dialog but I still get the below errors.
> 
> Shouldn't I be able to use the curly quotes?  Is this a bug?
> 
> Maybe a better question, should I allow the user to use curly quotes?
> 
> Is this the correct place to note such issues?
> 
> 
> W.
> 

Yes, it is the correct place for bug reports, but this isn't a bug.
ANTLR can only process ASCII characters, not Unicode, until version 3.1.
The reason is that the 3.0 series uses the old 2.7.7 ANTLR to parse
grammars and the old version was limited in the input range, even if the
offending characters are in comments (something, which should change in
3.1). A workaround is to find the Unicode value for the offending
characters and employ the '\uXXXX' syntax.

Best regards,
Johannes Luber

> [19:55:56] Checking Grammar...
> [19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
>         at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
>         at
>
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:1
61)
>         at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>         at antlr.TokenBuffer.LA(TokenBuffer.java:80)
>         at antlr.LLkParser.LA(LLkParser.java:52)
>         at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
>         at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
>         at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
>         at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
>         at
> org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
>         at
> org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
>         at 
> org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
> Source)
>         at org.antlr.works.grammar.EngineGrammar.analyze(Unknown
Source)
>         at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
>         at java.lang.Thread.run(Unknown Source)
> 
> [19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
>         at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
>         at
>
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:1
61)
>         at antlr.TokenBuffer.fill(TokenBuffer.java:69)
>         at antlr.TokenBuffer.LA(TokenBuffer.java:80)
>         at antlr.LLkParser.LA(LLkParser.java:52)
>         at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
>         at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
>         at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
>         at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
>         at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
>         at
> org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
>         at
> org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
Source)
>         at 
> org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
> Source)
>         at org.antlr.works.grammar.EngineGrammar.analyze(Unknown
Source)
>         at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
>         at java.lang.Thread.run(Unknown Source)
> 


From Waverly.Edwards at genesys.com  Mon Aug 27 03:35:30 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 06:35:30 -0400
Subject: [antlr-interest] Antlrworks BUG - Export as EPS or Bitmap Image
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D07@navamane001.ad.internal.corp>


Export as Bitmap Image does nothing in Antlrworks 1.1.2 and an exception
is thrown when you export as EPS
I went to a previous version to check that functionality and it was
present.


W.


[06:32:37] java.lang.NullPointerException
	at
org.antlr.xjlib.appkit.gview.object.GElement.isVisibleInClip(Unknown
Source)
	at org.antlr.xjlib.appkit.gview.object.GLink.draw(Unknown
Source)
	at
org.antlr.xjlib.appkit.gview.object.GElement.drawRecursive(Unknown
Source)
	at
org.antlr.xjlib.appkit.gview.object.GElement.drawRecursive(Unknown
Source)
	at org.antlr.xjlib.appkit.gview.GView.getEPS(Unknown Source)
	at org.antlr.works.menu.MenuExport.exportGViewAsEPS(Unknown
Source)
	at org.antlr.works.menu.MenuExport.exportAsEPS(Unknown Source)
	at org.antlr.works.editor.EditorMenu.handleMenuExport(Unknown
Source)
	at org.antlr.works.editor.EditorMenu.handleMenuEvent(Unknown
Source)
	at
org.antlr.xjlib.appkit.menu.XJMenuItem$MenuActionListener.actionPerforme
d(Unknown Source)
	at javax.swing.AbstractButton.fireActionPerformed(Unknown
Source)
	at javax.swing.AbstractButton$Handler.actionPerformed(Unknown
Source)
	at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown
Source)
	at javax.swing.DefaultButtonModel.setPressed(Unknown Source)
	at javax.swing.AbstractButton.doClick(Unknown Source)
	at javax.swing.plaf.basic.BasicMenuItemUI.doClick(Unknown
Source)
	at
javax.swing.plaf.basic.BasicMenuItemUI$Handler.mouseReleased(Unknown
Source)
	at java.awt.Component.processMouseEvent(Unknown Source)
	at javax.swing.JComponent.processMouseEvent(Unknown Source)
	at java.awt.Component.processEvent(Unknown Source)
	at java.awt.Container.processEvent(Unknown Source)
	at java.awt.Component.dispatchEventImpl(Unknown Source)
	at java.awt.Container.dispatchEventImpl(Unknown Source)
	at java.awt.Component.dispatchEvent(Unknown Source)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown
Source)
	at java.awt.LightweightDispatcher.processMouseEvent(Unknown
Source)
	at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)
	at java.awt.Container.dispatchEventImpl(Unknown Source)
	at java.awt.Window.dispatchEventImpl(Unknown Source)
	at java.awt.Component.dispatchEvent(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown
Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown
Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown
Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/ccfc034f/attachment.html 

From doebel at tudos.org  Mon Aug 27 03:52:47 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Mon, 27 Aug 2007 12:52:47 +0200
Subject: [antlr-interest] C-style includes: problem with parser vs. lexer
	rules
Message-ID: <46D2ACFF.9070207@tudos.org>

Hi,

I want to parse C-style #include statements and got a working version like
this:

fragment DIGIT  : '0'..'9';
fragment CHAR : 'a'..'z' | 'A'..'Z';

IMPORT : '#include' ;
GT : '>' ;
LT : '<' ;
WORD : CHAR (CHAR|DIGIT|'_'|'-')*;
WS     : (' '|'\t'|'\n'|'\r')+ { self.skip(); } ;

filename : WORD ('/' WORD)* '.' WORD ;

import_r : IMPORT LT filename GT ;


This works, but now I'd like to transfer the filename rule into a lexer
rule, so I get only one single token from it. Therefore, I change the last
two rules:

FNAME : WORD ('/' WORD)* '.' WORD ;

import_r : IMPORT LT FNAME GT;

But when I run it with e.g., "#include <foo/bar/baz.h>", I get an error:
line 1:8 mismatched input 'foo/baz/bar.h' expecting FNAME

What am I doing wrong and why does the lexer not recognize the filename as
FNAME?

Regards,
Bjoern

From rbuck at verisign.com  Mon Aug 27 04:31:11 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Mon, 27 Aug 2007 07:31:11 -0400
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D06@navamane001.ad.internal.corp>
Message-ID: <B408B6F6E3DEB04681E207B528821D498A544E@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Hi Waverly,

Beware of cutting and pasting any text from Microsoft products; many
Microsoft products exhibit this behavior. There are many characters that
Microsoft automatically convert from US-ASCII (< 0x7f) to other
characters in the spec. Microsoft often treats characters in the Unicode
spec as a general grab bag of "glyphs" to coerce fancier fonts in a
document, rather than having the user change the font of the text
itself. Some would argue this is a serious design flaw of their
products; I think you will find that Microsoft will call it a "feature".

When I worked back at MathWorks on MATLAB, customers frequently ran into
this, sometimes on a daily basis.

Good luck,

Bob

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Edwards, Waverly
> Sent: Monday, August 27, 2007 6:29 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
> 
>  
> I didn't know those characters were unicode characters.  I 
> thought they were in the upper part of the ascii set.
> 
> Thank you for the response.
> 
> 
> W.
> 
> 
> Oh, how wise is it to allow such characters a synonyms for 
> quote marks?
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Monday, August 27, 2007 5:52 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
> 
> Edwards, Waverly wrote:
> > 
> > This doesn't seem to translate well into email but the use of the 
> > curly quote characters ( not the double quote ) but the 
> ones like you 
> > would generate in MS Word generates an error in Antlrworks.
> > 
> > 
> > fragment
> > QuoteChar     : ('"'|'"'|'"') ;
> > // allowable quote characters. 
> > //Am I doing anyone favors by allowing all these characters?
> > 
> > 
> > Interestingly enough even if I comment out the offending lines the 
> > errors are still generated.  A grammar check gives me a "sucessful"
> > dialog but I still get the below errors.
> > 
> > Shouldn't I be able to use the curly quotes?  Is this a bug?
> > 
> > Maybe a better question, should I allow the user to use 
> curly quotes?
> > 
> > Is this the correct place to note such issues?
> > 
> > 
> > W.
> > 
> 
> Yes, it is the correct place for bug reports, but this isn't a bug.
> ANTLR can only process ASCII characters, not Unicode, until 
> version 3.1.
> The reason is that the 3.0 series uses the old 2.7.7 ANTLR to 
> parse grammars and the old version was limited in the input 
> range, even if the offending characters are in comments 
> (something, which should change in 3.1). A workaround is to 
> find the Unicode value for the offending characters and 
> employ the '\uXXXX' syntax.
> 
> Best regards,
> Johannes Luber
> 
> > [19:55:56] Checking Grammar...
> > [19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
> >         at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
> >         at
> >
> antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEng
> ine.java:1
> 61)
> >         at antlr.TokenBuffer.fill(TokenBuffer.java:69)
> >         at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> >         at antlr.LLkParser.LA(LLkParser.java:52)
> >         at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
> >         at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
> >         at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
> >         at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
> >         at 
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
> >         at 
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
> >         at
> > 
> org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
> >         at
> > org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
> Source)
> >         at
> > org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
> > Source)
> >         at org.antlr.works.grammar.EngineGrammar.analyze(Unknown
> Source)
> >         at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
> >         at java.lang.Thread.run(Unknown Source)
> > 
> > [19:55:56] HEX_OCT_BIN.g:87:24: expecting '*', found '''
> >         at org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
> >         at
> >
> antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEng
> ine.java:1
> 61)
> >         at antlr.TokenBuffer.fill(TokenBuffer.java:69)
> >         at antlr.TokenBuffer.LA(TokenBuffer.java:80)
> >         at antlr.LLkParser.LA(LLkParser.java:52)
> >         at org.antlr.tool.ANTLRParser.altList(ANTLRParser.java:1464)
> >         at org.antlr.tool.ANTLRParser.rule(ANTLRParser.java:1236)
> >         at org.antlr.tool.ANTLRParser.rules(ANTLRParser.java:655)
> >         at org.antlr.tool.ANTLRParser.grammar(ANTLRParser.java:389)
> >         at 
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:521)
> >         at 
> org.antlr.tool.Grammar.setGrammarContent(Grammar.java:497)
> >         at
> > 
> org.antlr.works.grammar.EngineGrammar.createNewGrammar(Unknown Source)
> >         at
> > org.antlr.works.grammar.EngineGrammar.createCombinedGrammar(Unknown
> Source)
> >         at
> > org.antlr.works.grammar.EngineGrammar.createGrammars(Unknown
> > Source)
> >         at org.antlr.works.grammar.EngineGrammar.analyze(Unknown
> Source)
> >         at org.antlr.works.grammar.CheckGrammar.run(Unknown Source)
> >         at java.lang.Thread.run(Unknown Source)
> > 
> 
> 

From jaluber at gmx.de  Mon Aug 27 05:32:04 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 14:32:04 +0200
Subject: [antlr-interest] C-style includes: problem with parser vs.
 lexer rules
In-Reply-To: <46D2ACFF.9070207@tudos.org>
References: <46D2ACFF.9070207@tudos.org>
Message-ID: <46D2C444.2060502@gmx.de>

Bjoern Doebel wrote:
> Hi,
> 
> I want to parse C-style #include statements and got a working version like
> this:
> 
> fragment DIGIT  : '0'..'9';
> fragment CHAR : 'a'..'z' | 'A'..'Z';
> 
> IMPORT : '#include' ;
> GT : '>' ;
> LT : '<' ;
> WORD : CHAR (CHAR|DIGIT|'_'|'-')*;
> WS     : (' '|'\t'|'\n'|'\r')+ { self.skip(); } ;
> 
> filename : WORD ('/' WORD)* '.' WORD ;
> 
> import_r : IMPORT LT filename GT ;
> 
> 
> This works, but now I'd like to transfer the filename rule into a lexer
> rule, so I get only one single token from it. Therefore, I change the last
> two rules:
> 
> FNAME : WORD ('/' WORD)* '.' WORD ;
> 
> import_r : IMPORT LT FNAME GT;
> 
> But when I run it with e.g., "#include <foo/bar/baz.h>", I get an error:
> line 1:8 mismatched input 'foo/baz/bar.h' expecting FNAME
> 
> What am I doing wrong and why does the lexer not recognize the filename as
> FNAME?
> 
> Regards,
> Bjoern
> 

My guess is that FNAME should be a parser rule, not a lexer rule. Or
WORD hat do be changed into a fragment rule.

Best regards,
Johannes Luber

From jaluber at gmx.de  Mon Aug 27 05:39:28 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 14:39:28 +0200
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D06@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04D06@navamane001.ad.internal.corp>
Message-ID: <46D2C600.7000006@gmx.de>

Edwards, Waverly wrote:
>  
> I didn't know those characters were unicode characters.  I thought they
> were in the upper part of the ascii set.
> 
> Thank you for the response.
> 
> 
> W.
> 
> 
> Oh, how wise is it to allow such characters a synonyms for quote marks?

I haven't heard from any programming language to allow other quotation
marks than ' and ". To allow those Microsoft replacements may be a
disfavor to your users, once they switch to other systems.

Best regards,
Johannes Luber

From antlr at mirality.co.nz  Mon Aug 27 06:01:33 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 28 Aug 2007 01:01:33 +1200
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.inte
	rnal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04D04@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
Message-ID: <20070827130145.7E71E11EB4B@www.antlr.org>

At 22:24 27/08/2007, Edwards, Waverly wrote:
 >The error:
 >line 1:0 required (...)+ loop did not match anything at input
 >'5:abcde'
[...]
 >start         : CAMI_STRING2
[...]
 >CAMI_STRING   : Digit+ ':' Letter AlphaNum*
[...]
 >CAMI_STRING2   : Number ':' AlphaNumStr

This error is because you have both CAMI_STRING and CAMI_STRING2 
in your lexer, and they conflict.  The result is that the lexer 
will be outputting CAMI_STRING tokens (since they both consume the 
same amount, the first listed one wins), and your parser will only 
accept CAMI_STRING2 tokens, which don't exist.

Comment out the CAMI_STRING rule and it should work.

(The important thing to bear in mind is that all lexing is done 
before parsing begins.  The parser cannot influence the lexer in 
any way.)


From Waverly.Edwards at genesys.com  Mon Aug 27 06:23:23 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 09:23:23 -0400
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
In-Reply-To: <46D2C600.7000006@gmx.de>
References: <FF993752CB890B4EB591BE5450C37BF1B04D06@navamane001.ad.internal.corp>
	<46D2C600.7000006@gmx.de>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D28@navamane001.ad.internal.corp>

 
I ran into this accidentally.  I cut some stuff out of a PDF file for
testing and 
though the text looked perfectly fine in the editor I had trouble lexing
some 
characters.  After a bit of head scratching I started guessing the where
the 
lexer would stop were ASCII characters other that looked the same but
were 
different.  I thought maybe I should allow those characters and as I
attempted 
to use them I ran into a brick wall.

Strange how you find some issue.


>> ...may be a disfavor to your users, once they switch to other
systems.


Excellent thought!!


W.

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
Sent: Monday, August 27, 2007 8:39 AM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?

Edwards, Waverly wrote:
>  
> I didn't know those characters were unicode characters.  I thought 
> they were in the upper part of the ascii set.
> 
> Thank you for the response.
> 
> 
> W.
> 
> 
> Oh, how wise is it to allow such characters a synonyms for quote
marks?

I haven't heard from any programming language to allow other quotation
marks than ' and ". To allow those Microsoft replacements may be a
disfavor to your users, once they switch to other systems.

Best regards,
Johannes Luber

From doebel at tudos.org  Mon Aug 27 06:37:55 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Mon, 27 Aug 2007 15:37:55 +0200
Subject: [antlr-interest] C-style includes: problem with parser vs.
 lexer rules
In-Reply-To: <46D2C444.2060502@gmx.de>
References: <46D2ACFF.9070207@tudos.org> <46D2C444.2060502@gmx.de>
Message-ID: <46D2D3B3.3070007@tudos.org>

Hi,

Johannes Luber wrote:
> My guess is that FNAME should be a parser rule, not a lexer rule. Or
> WORD hat do be changed into a fragment rule.

Thanks. I already had it working with FNAME being a parser rule and
changing WORD to a fragment also made it work the other way round. However,
this is kind of inconvenient, because if WORD is a fragment rule, it cannot
be used from parser rules directly, unless I duplicate a rule and have it
as a fragment and a normal lexer rule:

fragment DIGIT  : '0'..'9';
fragment CHAR : 'a'..'z' | 'A'..'Z';

IMPORT : ''#include' ;
GT : '>' ;
LT : '<' ;
WS     : (' '|'\t'|'\n'|'\r')+ { self.skip(); } ;

WORD : CHAR (CHAR|DIGIT|'_')*;
fragment WORD2 : CHAR (CHAR|DIGIT|'_')*;

FNAME : WORD2 ('/' WORD2)* '.' WORD2 ;

import_r : IMPORT LT f=FNAME GT;

stat : w=WORD+ ';' ;

entry : (import_r | stat)+
    ;



Can we improve this?

Sincerely,
Bjoern

From Waverly.Edwards at genesys.com  Mon Aug 27 06:41:01 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 09:41:01 -0400
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <NACODENE001jmJkvE6R0001cbe6@denmailNA.genesys.com>
References: <FF993752CB890B4EB591BE5450C37BF1B04D04@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
	<NACODENE001jmJkvE6R0001cbe6@denmailNA.genesys.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04D30@navamane001.ad.internal.corp>



>>This error is because you have both CAMI_STRING and CAMI_STRING2 in
your lexer, and they conflict....

Excellent.  I'm learning more and more daily.  Before I know it, I'll
have something
that is fully functional.  I'm still learning how ANTLR works. 

Thanks,


W.

-----Original Message-----
From: Gavin Lambert [mailto:antlr at mirality.co.nz] 
Sent: Monday, August 27, 2007 9:02 AM
To: Edwards, Waverly; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading a string of fixed size

At 22:24 27/08/2007, Edwards, Waverly wrote:
 >The error:
 >line 1:0 required (...)+ loop did not match anything at input
>'5:abcde'
[...]
 >start         : CAMI_STRING2
[...]
 >CAMI_STRING   : Digit+ ':' Letter AlphaNum*
[...]
 >CAMI_STRING2   : Number ':' AlphaNumStr

This error is because you have both CAMI_STRING and CAMI_STRING2 in your
lexer, and they conflict.  The result is that the lexer will be
outputting CAMI_STRING tokens (since they both consume the same amount,
the first listed one wins), and your parser will only accept
CAMI_STRING2 tokens, which don't exist.

Comment out the CAMI_STRING rule and it should work.

(The important thing to bear in mind is that all lexing is done before
parsing begins.  The parser cannot influence the lexer in any way.)


From doebel at tudos.org  Mon Aug 27 07:05:10 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Mon, 27 Aug 2007 16:05:10 +0200
Subject: [antlr-interest] C-style includes: problem with parser
 vs.	lexer rules
In-Reply-To: <1188223125.31083.11.camel@ENGDT2UA761F3V>
References: <46D2ACFF.9070207@tudos.org> <46D2C444.2060502@gmx.de>	
	<46D2D3B3.3070007@tudos.org>
	<1188223125.31083.11.camel@ENGDT2UA761F3V>
Message-ID: <46D2DA16.9090004@tudos.org>

Hi,

Kenneth D Weinert wrote:
> This has nothing to do with your parsing question, I just thought that
> I'd point out that your pattern won't match:
> 
> * files or directories with spaces in their name
> * files or directories with dots in their name (aside from the dot prior
>   to the extension)
> * local include files where you use double quotes to delimit the path
>   instead of < and >
> 

true, but I thought, I'd just sort out the other things, before taking care
of this stuff (which is of course necessary).

Bjoern

From jaluber at gmx.de  Mon Aug 27 07:09:18 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 16:09:18 +0200
Subject: [antlr-interest] C-style includes: problem with parser vs.
 lexer rules
In-Reply-To: <46D2D3B3.3070007@tudos.org>
References: <46D2ACFF.9070207@tudos.org> <46D2C444.2060502@gmx.de>
	<46D2D3B3.3070007@tudos.org>
Message-ID: <46D2DB0E.8020106@gmx.de>

Bjoern Doebel wrote:
> Hi,
> 
> Johannes Luber wrote:
>> My guess is that FNAME should be a parser rule, not a lexer rule. Or
>> WORD hat do be changed into a fragment rule.
> 
> Thanks. I already had it working with FNAME being a parser rule and
> changing WORD to a fragment also made it work the other way round. However,
> this is kind of inconvenient, because if WORD is a fragment rule, it cannot
> be used from parser rules directly, unless I duplicate a rule and have it
> as a fragment and a normal lexer rule:
> 
...
> Can we improve this?
> 
> Sincerely,
> Bjoern
> 

How about using WORD2 in WORD, too?

Best regards,
Johannes Luber

From angela.k.ns at gmail.com  Mon Aug 27 07:29:04 2007
From: angela.k.ns at gmail.com (a.k.n.s)
Date: Mon, 27 Aug 2007 07:29:04 -0700
Subject: [antlr-interest] Access AST created by parser
Message-ID: <6d7cf9470708270729n2d54a83es1b6299f4d4839f8a@mail.gmail.com>

I am very, very new to antlr, so perhaps I'm missing something simple - but
I seem to be unable to access the AST representation of my input file.

The basics of my grammar are as follows:

grammar Model;

options {
    language=CSharp;
    output=AST;
}

deck
    :   (statement)+
    ;

statement
    :   (welldef|modelSize)
    ;

welldef
    :   'WELLDEF'^ declarator+ EOL
    ;

modelSize: 'MODELSIZE'^ xSize ySize zSize EOL
    ;

....

I use AntlrWorks to generate the Parser and Lexer.

My input file looks like this:

WELLDEF SS001
WELLDEF PN001 ERER001 P33001 AA001
MODELSIZE  53  79  67
WELLDEF PN0014444

I'm only able to access the tree of the first row (by calling parser.deck())
- is there a parser function I can call to get a tree representation of the
entire file? I would really appreciate it if someone could point me in the
right direction.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/163511d5/attachment.html 

From tbrandonau at gmail.com  Mon Aug 27 07:29:30 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 28 Aug 2007 00:29:30 +1000
Subject: [antlr-interest] C-style includes: problem with parser vs.
	lexer rules
In-Reply-To: <46D2ACFF.9070207@tudos.org>
References: <46D2ACFF.9070207@tudos.org>
Message-ID: <ebc876d70708270729o51ee253dpd8ef9b71934ce422@mail.gmail.com>

On 8/27/07, Bjoern Doebel <doebel at tudos.org> wrote:
> Hi,
>
> I want to parse C-style #include statements and got a working version like
> this:
>
> fragment DIGIT  : '0'..'9';
> fragment CHAR : 'a'..'z' | 'A'..'Z';
>
> IMPORT : '#include' ;
> GT : '>' ;
> LT : '<' ;
> WORD : CHAR (CHAR|DIGIT|'_'|'-')*;
> WS     : (' '|'\t'|'\n'|'\r')+ { self.skip(); } ;
>
> filename : WORD ('/' WORD)* '.' WORD ;
>
> import_r : IMPORT LT filename GT ;
>
>
> This works, but now I'd like to transfer the filename rule into a lexer
> rule, so I get only one single token from it. Therefore, I change the last
> two rules:
>
> FNAME : WORD ('/' WORD)* '.' WORD ;
>
> import_r : IMPORT LT FNAME GT;
>
> But when I run it with e.g., "#include <foo/bar/baz.h>", I get an error:
> line 1:8 mismatched input 'foo/baz/bar.h' expecting FNAME
>
> What am I doing wrong and why does the lexer not recognize the filename as
> FNAME?
You probably don't want to move this into the lexer in this way as it
will cause issues. For instance input like "a.b" in any code will be
recognised as a filename which likely isn't what you want.
You can either keep it in the parser or have the whole include
statement handled as a single token in the lexer, like:
IMPORT : '#include' WS* LT FILENAME GT ;
GT : '>' ;
LT : '<' ;
WORD : CHAR (CHAR|DIGIT|'_'|'-')*;
WS     : (' '|'\t'|'\n'|'\r')+ { self.skip(); } ;
fragment
FILENAME : WORD ('/' WORD)* '.' WORD ;

Also, note that I think your current grammar will cause issues as as
soon as ANTLR see's a '.' or '/' following a word it will assume it
must be a FILENAME. This is because ANTLR does not look past the end
of rules when predicting alternatives. So for instance "a/3" will
cause an error as upon seeing the '/' ANTLR will try and match a
filename which will fail. To solve this you need to combine the WORD
and FILENAME rules like:
WORD: WORD_PART ( ('/' WORD_PART)* '.' WORD_PART)?

fragment
WORD_PART:CHAR (CHAR|DIGIT|'_'|'-')*;

Tom.
>
> Regards,
> Bjoern
>

From rbuck at verisign.com  Mon Aug 27 08:36:22 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Mon, 27 Aug 2007 11:36:22 -0400
Subject: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D28@navamane001.ad.internal.corp>
Message-ID: <B408B6F6E3DEB04681E207B528821D499235FD@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Yes, this is an issue with Microsoft products, not with ANTLR Works. If
you type in a single or double quote in a Microsoft Product, it
automatically converts it to what I believe is a Wide Katakana character
that looks nearly the same. Then when you paste from Word, for example,
you have useless junk.

The same thing happens with mathematical symbols (+ - / *) in Microsoft
products, and it is equally frustrating for engineering environments
such as MATLAB.

ANTLR Works allows you to cut and paste from other applications. It
cannot predict what misfeatures Microsoft adds, and I should think it
probably should not try to deal with them by automatically converting
these back to US-ASCII either. It's a Microsoft mess that people need to
be aware of.

/bob

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Edwards, Waverly
> Sent: Monday, August 27, 2007 9:23 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
> 
>  
> I ran into this accidentally.  I cut some stuff out of a PDF 
> file for testing and though the text looked perfectly fine in 
> the editor I had trouble lexing some characters.  After a bit 
> of head scratching I started guessing the where the lexer 
> would stop were ASCII characters other that looked the same 
> but were different.  I thought maybe I should allow those 
> characters and as I attempted to use them I ran into a brick wall.
> 
> Strange how you find some issue.
> 
> 
> >> ...may be a disfavor to your users, once they switch to other
> systems.
> 
> 
> Excellent thought!!
> 
> 
> W.
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Monday, August 27, 2007 8:39 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlrworks BUG? --- Do I note bugs here?
> 
> Edwards, Waverly wrote:
> >  
> > I didn't know those characters were unicode characters.  I thought 
> > they were in the upper part of the ascii set.
> > 
> > Thank you for the response.
> > 
> > 
> > W.
> > 
> > 
> > Oh, how wise is it to allow such characters a synonyms for quote
> marks?
> 
> I haven't heard from any programming language to allow other 
> quotation marks than ' and ". To allow those Microsoft 
> replacements may be a disfavor to your users, once they 
> switch to other systems.
> 
> Best regards,
> Johannes Luber
> 

From alexandre.hamez at lip6.fr  Mon Aug 27 09:02:15 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Mon, 27 Aug 2007 18:02:15 +0200
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
Message-ID: <6C79D166-7BEC-417D-B5EC-1028EACB925A@lip6.fr>

Thanks for your interest. But the fact is that I want to create a  
Token with exactly NUMBER characters. The following characters will  
match for other token. It's not an error if there are characters  
which follow. Its mean that I can have something like that:

	CAMI_STRING (',' CAMI_STRING)*

( for newcomers: CAMI_STRING : NUMBER ':' STRING where the size of  
STRING is given by NUMBER).


Moreover, as a strange side effect of the following code, newlines  
make the parser completely mad:

> CAMI_STRING
> 	:
> 	NUMBER ':'
> 	{
> 		// Get the current position in stream
> 		int start  = input.getCharPositionInLine();
> 		// Computing the position of the last character of the STRING to  
> be read
> 		int end = start + Integer.parseInt($NUMBER.text) - 1;
> 		// Set the value of the returned value to STRING
> 		setText(input.substring(start,end));
> 		// Update the position in the stream
> 		input.seek(end+1);
> 	}
> 	;




On 27 ao?t 07, at 12:24, Edwards, Waverly wrote:

> I gave it another chance, not knowing you could used rules as  
> variables.  Here is something a little more terse CAMI_STRING2  
> though I generate an error which I don't understand how to get rid  
> of.  It didn't happen in the CAMI_STRING version.
>
> The error:
> line 1:0 required (...)+ loop did not match anything at input  
> '5:abcde'
>
>
> W.
>
> grammar  TESTCAMISTRING;
>
> fragment
> Letter        :	'a'..'z' | 'A'..'Z' ;
> 	
> fragment	
> Digit	      :	'0'..'9' ;
>
> fragment
> AlphaNum      :	Letter | Digit ;
>
> fragment
> Number        : Digit+ ;
>
> fragment
> AlphaNumStr   : Letter AlphaNum* ;
>
>
> prog	      :	start+ ;
>
> start         : CAMI_STRING2
>               ;
> NEWLINE	:	('\r\n'|'\r'|'\n') ;
>
>
> // works just fine but is not as efficient or terse as CAMI_STRING2	
> CAMI_STRING   : Digit+ ':' Letter AlphaNum*
>     {
>         String wholeStr,numStr,fixLenStr;
>         int colonLoc, num;
>         boolean validate;
>
>         wholeStr  = getText().toString();
>         colonLoc  = wholeStr.indexOf(":");
>         numStr    = wholeStr.substring(0, colonLoc);
>         num       = Integer.parseInt(numStr);
>         fixLenStr = wholeStr.substring(colonLoc+1);
>         validate  = (num == fixLenStr.length() );
>         if ( validate == true )
>             System.out.println(numStr + "," + fixLenStr );
>         else
>             System.out.println("ERROR: num:Str length mismatch");
>     };
>
>
> CAMI_STRING2   : Number ':' AlphaNumStr
>     {
>         int num           = Integer.parseInt($Number.text);
>         String fixLenStr  = $AlphaNumStr.text;
>         boolean validate  = (num == fixLenStr.length() );
>         if ( validate == true )
>             System.out.println( num + "," + fixLenStr );
>         else
>             System.out.println("ERROR: num:Str length mismatch");
>     };
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Edwards, Waverly
> Sent: Monday, August 27, 2007 5:53 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading a string of fixed size
>
>
> Here is something that is functional.
>
> I'm a newbie at all of this, ANTLR and Regular expressions so don't  
> take this as the Gospel.  You'll want to check this out carefully.
>
> I didn't even know you could do this:  Integer.parseInt($NUMBER.text)
>
> If you can, this code could be shorter and I will have learned  
> something else useful.
>
>
> W.
>
>
>
> grammar  TESTCAMISTRING;
>
> fragment
> Letter        :	'a'..'z' | 'A'..'Z' ;
> 	
> fragment	
> Digit	      :	'0'..'9' ;
>
> fragment
> AlphaNum      :	Letter | Digit ;
>
> prog	      :	start+ ;
>
> start         : CAMI_STRING
>               ;
> NEWLINE	:	('\r\n'|'\r'|'\n') ;
>
> 	
> CAMI_STRING   : Digit+ ':' Letter AlphaNum*
>     {
>         String wholeStr,numStr,fixLenStr;
>         int colonLoc, num;
>         boolean validate;
>
>         wholeStr  = getText().toString();
>         colonLoc  = wholeStr.indexOf(":");
>         numStr    = wholeStr.substring(0, colonLoc);
>         num       = Integer.parseInt(numStr);
>         fixLenStr = wholeStr.substring(colonLoc+1);
>         validate  = (num == fixLenStr.length() );
>         if ( validate == true )
>             System.out.println(numStr + "," + fixLenStr);
>         else
>             System.out.println("ERROR: num:Str length mismatch");
>     };
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Alexandre Hamez
> Sent: Monday, August 27, 2007 3:33 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Reading a string of fixed size
>
> Hi everybody,
>
> 	I need to read a string of a fixed size. For example : '5:abcde'.
> The size of the string to be read is given by the number before the  
> ':'. So I've written the following:
>
> CAMI_STRING
> 	:
> 	NUMBER ':'
> 	{
> 		// Get the current position in stream
> 		int start  = input.getCharPositionInLine();
> 		// Computing the position of the last character of the STRING to  
> be read
> 		int end = start + Integer.parseInt($NUMBER.text) - 1;
> 		// Set the value of the returned value to STRING
> 		setText(input.substring(start,end));
> 		// Update the position in the stream
> 		input.seek(end+1);
> 	}
> 	;
> 	
> NUMBER	
> 	: 	
> 	'0'..'9'+
> 	;
>
>
> It works quite well until the string to be read contains a number  
> itself. Have you an idea on this problem? Thanks for you help!
>
>
> ---------------------------------------------------------------------- 
> --
> ---
> Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
> LIP6: tel: +33 1 44 27 31 92  / Bureau 818
> 104 Avenue du Pr?sident Kennedy 75016 Paris http://www-src.lip6.fr/ 
> ~Alexandre.Hamez
>
>
>

------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/242fbc5d/attachment-0001.bin 

From Waverly.Edwards at genesys.com  Mon Aug 27 09:32:08 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Mon, 27 Aug 2007 12:32:08 -0400
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <6C79D166-7BEC-417D-B5EC-1028EACB925A@lip6.fr>
References: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
	<6C79D166-7BEC-417D-B5EC-1028EACB925A@lip6.fr>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04DD9@navamane001.ad.internal.corp>

 
Unfortunately I am not comprehending what you want to do.
You just want to get rid of the number and the colon?

If you want to change the text associated with the rule you
can use setText( String );

 CAMI_STRING2   : Number ':' AlphaNumStr
     {
         String fixLenStr  = $AlphaNumStr.text;
         setText( fixLenStr );
         setText( $AlphaNumStr.text.toString( ) ); // or may be just this [UNTESTED]

     };


W.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Alexandre Hamez
Sent: Monday, August 27, 2007 12:02 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading a string of fixed size

Thanks for your interest. But the fact is that I want to create a Token with exactly NUMBER characters. The following characters will match for other token. It's not an error if there are characters which follow. Its mean that I can have something like that:

	CAMI_STRING (',' CAMI_STRING)*

( for newcomers: CAMI_STRING : NUMBER ':' STRING where the size of STRING is given by NUMBER).


Moreover, as a strange side effect of the following code, newlines make the parser completely mad:

> CAMI_STRING
> 	:
> 	NUMBER ':'
> 	{
> 		// Get the current position in stream
> 		int start  = input.getCharPositionInLine();
> 		// Computing the position of the last character of the STRING to be 
> read
> 		int end = start + Integer.parseInt($NUMBER.text) - 1;
> 		// Set the value of the returned value to STRING
> 		setText(input.substring(start,end));
> 		// Update the position in the stream
> 		input.seek(end+1);
> 	}
> 	;




On 27 ao?t 07, at 12:24, Edwards, Waverly wrote:

> I gave it another chance, not knowing you could used rules as  
> variables.  Here is something a little more terse CAMI_STRING2  
> though I generate an error which I don't understand how to get rid  
> of.  It didn't happen in the CAMI_STRING version.
>
> The error:
> line 1:0 required (...)+ loop did not match anything at input  
> '5:abcde'
>
>
> W.
>
> grammar  TESTCAMISTRING;
>
> fragment
> Letter        :	'a'..'z' | 'A'..'Z' ;
> 	
> fragment	
> Digit	      :	'0'..'9' ;
>
> fragment
> AlphaNum      :	Letter | Digit ;
>
> fragment
> Number        : Digit+ ;
>
> fragment
> AlphaNumStr   : Letter AlphaNum* ;
>
>
> prog	      :	start+ ;
>
> start         : CAMI_STRING2
>               ;
> NEWLINE	:	('\r\n'|'\r'|'\n') ;
>
>
> // works just fine but is not as efficient or terse as CAMI_STRING2	
> CAMI_STRING   : Digit+ ':' Letter AlphaNum*
>     {
>         String wholeStr,numStr,fixLenStr;
>         int colonLoc, num;
>         boolean validate;
>
>         wholeStr  = getText().toString();
>         colonLoc  = wholeStr.indexOf(":");
>         numStr    = wholeStr.substring(0, colonLoc);
>         num       = Integer.parseInt(numStr);
>         fixLenStr = wholeStr.substring(colonLoc+1);
>         validate  = (num == fixLenStr.length() );
>         if ( validate == true )
>             System.out.println(numStr + "," + fixLenStr );
>         else
>             System.out.println("ERROR: num:Str length mismatch");
>     };
>
>
> CAMI_STRING2   : Number ':' AlphaNumStr
>     {
>         int num           = Integer.parseInt($Number.text);
>         String fixLenStr  = $AlphaNumStr.text;
>         boolean validate  = (num == fixLenStr.length() );
>         if ( validate == true )
>             System.out.println( num + "," + fixLenStr );
>         else
>             System.out.println("ERROR: num:Str length mismatch");
>     };
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Edwards, Waverly
> Sent: Monday, August 27, 2007 5:53 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading a string of fixed size
>
>
> Here is something that is functional.
>
> I'm a newbie at all of this, ANTLR and Regular expressions so don't  
> take this as the Gospel.  You'll want to check this out carefully.
>
> I didn't even know you could do this:  Integer.parseInt($NUMBER.text)
>
> If you can, this code could be shorter and I will have learned  
> something else useful.
>
>
> W.
>
>
>
> grammar  TESTCAMISTRING;
>
> fragment
> Letter        :	'a'..'z' | 'A'..'Z' ;
> 	
> fragment	
> Digit	      :	'0'..'9' ;
>
> fragment
> AlphaNum      :	Letter | Digit ;
>
> prog	      :	start+ ;
>
> start         : CAMI_STRING
>               ;
> NEWLINE	:	('\r\n'|'\r'|'\n') ;
>
> 	
> CAMI_STRING   : Digit+ ':' Letter AlphaNum*
>     {
>         String wholeStr,numStr,fixLenStr;
>         int colonLoc, num;
>         boolean validate;
>
>         wholeStr  = getText().toString();
>         colonLoc  = wholeStr.indexOf(":");
>         numStr    = wholeStr.substring(0, colonLoc);
>         num       = Integer.parseInt(numStr);
>         fixLenStr = wholeStr.substring(colonLoc+1);
>         validate  = (num == fixLenStr.length() );
>         if ( validate == true )
>             System.out.println(numStr + "," + fixLenStr);
>         else
>             System.out.println("ERROR: num:Str length mismatch");
>     };
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
> bounces at antlr.org] On Behalf Of Alexandre Hamez
> Sent: Monday, August 27, 2007 3:33 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Reading a string of fixed size
>
> Hi everybody,
>
> 	I need to read a string of a fixed size. For example : '5:abcde'.
> The size of the string to be read is given by the number before the  
> ':'. So I've written the following:
>
> CAMI_STRING
> 	:
> 	NUMBER ':'
> 	{
> 		// Get the current position in stream
> 		int start  = input.getCharPositionInLine();
> 		// Computing the position of the last character of the STRING to  
> be read
> 		int end = start + Integer.parseInt($NUMBER.text) - 1;
> 		// Set the value of the returned value to STRING
> 		setText(input.substring(start,end));
> 		// Update the position in the stream
> 		input.seek(end+1);
> 	}
> 	;
> 	
> NUMBER	
> 	: 	
> 	'0'..'9'+
> 	;
>
>
> It works quite well until the string to be read contains a number  
> itself. Have you an idea on this problem? Thanks for you help!
>
>
> ---------------------------------------------------------------------- 
> --
> ---
> Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
> LIP6: tel: +33 1 44 27 31 92  / Bureau 818
> 104 Avenue du Pr?sident Kennedy 75016 Paris http://www-src.lip6.fr/ 
> ~Alexandre.Hamez
>
>
>

------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez



From tbrandonau at gmail.com  Mon Aug 27 09:41:52 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 28 Aug 2007 02:41:52 +1000
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <6C79D166-7BEC-417D-B5EC-1028EACB925A@lip6.fr>
References: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
	<6C79D166-7BEC-417D-B5EC-1028EACB925A@lip6.fr>
Message-ID: <ebc876d70708270941o7ddfdcb1g2738914c895adfa1@mail.gmail.com>

On 8/28/07, Alexandre Hamez <alexandre.hamez at lip6.fr> wrote:
> Thanks for your interest. But the fact is that I want to create a
> Token with exactly NUMBER characters. The following characters will
> match for other token. It's not an error if there are characters
> which follow. Its mean that I can have something like that:
>
>         CAMI_STRING (',' CAMI_STRING)*
>
> ( for newcomers: CAMI_STRING : NUMBER ':' STRING where the size of
> STRING is given by NUMBER).
>
>
> Moreover, as a strange side effect of the following code, newlines
> make the parser completely mad:
>
> > CAMI_STRING
> >       :
> >       NUMBER ':'
> >       {
> >               // Get the current position in stream
> >               int start  = input.getCharPositionInLine();
> >               // Computing the position of the last character of the STRING to
> > be read
> >               int end = start + Integer.parseInt($NUMBER.text) - 1;
> >               // Set the value of the returned value to STRING
> >               setText(input.substring(start,end));
> >               // Update the position in the stream
> >               input.seek(end+1);
> >       }
> >       ;
Seek takes an absolute index in the stream so you should get the
location from input.index() rather than input.getCharPositionInLine().
Also, you are going to get exceptions calling substring if a length is
specified that extends past the end of the stream. You could call
seek, which won't seek past the end of the stream and then check the
resulting input to determine how many characters could actually be
found. Or repeatedly call consume and check for EOF.
Or a better solution might be to use predicates to handle the
matching. Something like:
CAMI_STRING
    :   NUMBER ':' fs=FIXED_LENGTH_STRING[Integer.parseInt($NUMBER.text)]
        { setText($fs.text); }
    ;

fragment
FIXED_LENGTH_STRING[int len]
    :   ( { len-- > 0 }?=> .)+ { len == 0 }?
    ;
should work. Or you may want to replace the second predicate in
FIXED_LENGTH_STRING with code to record an error if all characters
could not be matched, rather than handling the resulting predicate
failure exception.

Tom.

From matthew.j.diehl at intel.com  Mon Aug 27 10:23:14 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 27 Aug 2007 10:23:14 -0700
Subject: [antlr-interest] Lexer predicates...why don't they work for me?
In-Reply-To: <051466DAA0D608439E196797955018D7023653@wavemachine.temporal-wave.com>
References: <A10CD303B51F814DB568A8AAF02174C2028A55EA@orsmsx417.amr.corp.intel.com>
	<051466DAA0D608439E196797955018D7023653@wavemachine.temporal-wave.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2028A59A8@orsmsx417.amr.corp.intel.com>

Jim,

That's EXACTLY what I've been trying to get it to do for the past 4
months!  I just checked and it works!  I've made a whole bunch of
work-arounds, but finally I hit some text that none of my work arounds
could handle, lol.  Thanks!  (and thanks for the info on how the lexer
works as well)

Matt 

> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Sunday, August 26, 2007 9:16 AM
> To: Diehl, Matthew J; antlr
> Subject: RE: [antlr-interest] Lexer predicates...why don't 
> they work for me?
> 
> Try:
> 
> fragment APOSTROPHE : '\'';
> 
> CHARLIT : '\''
>             (
>                  (. '\'')=> . '\''
>                | { $type = APOSTROPHE; }
>             )
>         ;
> 
> ANTLR cannot see beyond the end of the rule/outside the rule, and you
> created two rules that can trigger the use of '\''. Hence it decided
> that if it sees '\'' it will start looking down the CharacterLiteral
> path. Your predicate (you could use that in the rule above of course)
> merely serves to tell the rule that this isn't what it should be
> matching, but gives it no alternative, hence you get a failed 
> predicate
> error. So, what you want is to trigger both tokens by their 
> common root
> '\'', then distinguish between the two at that point. Then you supply
> two alternatives distinguished by your predicate and it 
> should all work
> as you require.
> 
> Of course, this does not distinguish: 'C''''
> 
> Which would become 2 CHARLITS and may not be what you want. You might
> need to process '\'' for instance?
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Diehl, Matthew J
> > Sent: Saturday, August 25, 2007 2:13 PM
> > To: antlr
> > Subject: [antlr-interest] Lexer predicates...why don't they work for
> > me?
> > 
> > Hi,
> > 
> > The lexer is the part of ANTLR that I do not understand at all.  I
> > think
> > I understand what it's doing, but obviously I don't.  It 
> always feels
> > like it is a LL(1) lexer.  For instance if I have the 
> following rules:
> > 
> > Apostrophe : '\''
> > CharacterLiteral : Apostrophe (.) Apostrophe ;
> > 
> > Given an input of:
> > foo = '0'; --works fine (token = CharacterLiteral)
> > Foo = signalA'RANGE --doesn't work.  It throws a lexer error saying
> > that
> > 'A' is not an apostrophe (''')
> > In this case I would like it to just return ''' as Apostrophe.
> > 
> > I tried using predicates:
> > CharacterLiteral : (Apostrophe (.) Apostrophe)=> Apostrophe (.)
> > Apostrophe ;
> > 
> > And also:
> > CharacterLiteral : Apostrophe (.) Apostrophe
> >                  | Apostrophe {$type=Apostrophe;} ;
> >    /*same error as above*/
> > CharacterLiteral : {input.LA(3)==Apostrophe}? Apostrophe (.)
> Apostrophe
> > ;
> >    /*threw a 'did not pass predicate' error */
> > 
> > But none of it's working.  What am I doing wrong?  Thanks for your
> time
> > and consideration.
> > 
> > Matt
> 

From warnero at gmail.com  Mon Aug 27 10:48:05 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 10:48:05 -0700
Subject: [antlr-interest] stuck on templates
Message-ID: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>

I've been reading through the book and the CMinus example included in
the v3 zip example set and I must be missing something because I can't
get anything to work at all.

Here is what I gathered from the book and from the site and
(hopefully) you can tell me where my mistake is.

First a rule like this:
packageDecl
	:	'package' name=QID
	;

can be translated to something like this:
packageDecl
	:	'package' name=QID -> package_name(name=name.text)
	;

Where package_name() is declared in my stg file like this:

package_name ::= "package <name>;"

Is this right? If so, why do I keep getting an error in ANTLRWorks
saying "Undefined reference 'package_name'".

I also tried to do something similar to the CMinus example here:

program
scope {
  List globals;
  List functions;
}
@init {
  $program::globals = new ArrayList();
  $program::functions = new ArrayList();
}

But when I did that ANTLRWorks first complains about "program" being
defined already (in the @init section) and it then complains about not
finding ArrayList (even though I added it in the @header section.

Thanks for any help, just trying to wrap my head around this stuff.

-warner
-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From parrt at cs.usfca.edu  Mon Aug 27 10:56:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 27 Aug 2007 10:56:36 -0700
Subject: [antlr-interest] stuck on templates
In-Reply-To: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
Message-ID: <6E88709A-B9BD-4F77-8708-0E66D60CBF6B@cs.usfca.edu>


On Aug 27, 2007, at 10:48 AM, Warner Onstine wrote:
> can be translated to something like this:
> packageDecl
> 	:	'package' name=QID -> package_name(name=name.text)
> 	;
>
> Where package_name() is declared in my stg file like this:
>
> package_name ::= "package <name>;"

Hi Warner,

try:

package_name(name) ::= "package <name>;"

Ter



From jaluber at gmx.de  Mon Aug 27 10:58:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 19:58:57 +0200
Subject: [antlr-interest] stuck on templates
In-Reply-To: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
Message-ID: <46D310E1.2020701@gmx.de>

Warner Onstine wrote:
> I also tried to do something similar to the CMinus example here:
> 
> program
> scope {
>   List globals;
>   List functions;
> }
> @init {
>   $program::globals = new ArrayList();
>   $program::functions = new ArrayList();
> }
> 
> But when I did that ANTLRWorks first complains about "program" being
> defined already (in the @init section) and it then complains about not
> finding ArrayList (even though I added it in the @header section.
> 
> Thanks for any help, just trying to wrap my head around this stuff.
> 
> -warner

Is program supposed to be a rule or a scope? The syntax is a mixture of
both. Can you post your grammar here? It would be helpful in finding the
cause and the correct fix.

Best regards,
Johannes Luber


From warnero at gmail.com  Mon Aug 27 11:02:40 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 11:02:40 -0700
Subject: [antlr-interest] stuck on templates
In-Reply-To: <6E88709A-B9BD-4F77-8708-0E66D60CBF6B@cs.usfca.edu>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
	<6E88709A-B9BD-4F77-8708-0E66D60CBF6B@cs.usfca.edu>
Message-ID: <d76a9c0d0708271102h46adf60ao4ad944db70428ebc@mail.gmail.com>

On 8/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Aug 27, 2007, at 10:48 AM, Warner Onstine wrote:
> > can be translated to something like this:
> > packageDecl
> >       :       'package' name=QID -> package_name(name=name.text)
> >       ;
> >
> > Where package_name() is declared in my stg file like this:
> >
> > package_name ::= "package <name>;"
>
> Hi Warner,
>
> try:
>
> package_name(name) ::= "package <name>;"

Sorry, that was a typo on my part. The issue I'm having in ANTLRWorks
is that it complains about this declaration (package_name) "Undefined
reference 'package_name'" in the grammar file.

-warner

>
> Ter
>
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From warnero at gmail.com  Mon Aug 27 11:03:59 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 11:03:59 -0700
Subject: [antlr-interest] stuck on templates
In-Reply-To: <46D310E1.2020701@gmx.de>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
	<46D310E1.2020701@gmx.de>
Message-ID: <d76a9c0d0708271103j42399d0bv5bc1c6c604103537@mail.gmail.com>

On 8/27/07, Johannes Luber <jaluber at gmx.de> wrote:
> Warner Onstine wrote:
> > I also tried to do something similar to the CMinus example here:
> >
> > program
> > scope {
> >   List globals;
> >   List functions;
> > }
> > @init {
> >   $program::globals = new ArrayList();
> >   $program::functions = new ArrayList();
> > }
> >
> > But when I did that ANTLRWorks first complains about "program" being
> > defined already (in the @init section) and it then complains about not
> > finding ArrayList (even though I added it in the @header section.
> >
> > Thanks for any help, just trying to wrap my head around this stuff.
> >
> > -warner
>
> Is program supposed to be a rule or a scope? The syntax is a mixture of
> both. Can you post your grammar here? It would be helpful in finding the
> cause and the correct fix.

That grammar comes straight from the CMinus.g file in the v3
downloads. If you want I can attach it, but it seems that those demo
grammars *should* be right. If they aren't they need to be fixed.

-warner

>
> Best regards,
> Johannes Luber
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From jaluber at gmx.de  Mon Aug 27 11:17:24 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 20:17:24 +0200
Subject: [antlr-interest] stuck on templates
In-Reply-To: <d76a9c0d0708271103j42399d0bv5bc1c6c604103537@mail.gmail.com>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>	<46D310E1.2020701@gmx.de>
	<d76a9c0d0708271103j42399d0bv5bc1c6c604103537@mail.gmail.com>
Message-ID: <46D31534.4070908@gmx.de>

Warner Onstine wrote:
> On 8/27/07, Johannes Luber <jaluber at gmx.de> wrote:
>> Warner Onstine wrote:
>>> I also tried to do something similar to the CMinus example here:
>>>
>>> program
>>> scope {
>>>   List globals;
>>>   List functions;
>>> }
>>> @init {
>>>   $program::globals = new ArrayList();
>>>   $program::functions = new ArrayList();
>>> }
>>>
>>> But when I did that ANTLRWorks first complains about "program" being
>>> defined already (in the @init section) and it then complains about not
>>> finding ArrayList (even though I added it in the @header section.
>>>
>>> Thanks for any help, just trying to wrap my head around this stuff.
>>>
>>> -warner
>> Is program supposed to be a rule or a scope? The syntax is a mixture of
>> both. Can you post your grammar here? It would be helpful in finding the
>> cause and the correct fix.
> 
> That grammar comes straight from the CMinus.g file in the v3
> downloads. If you want I can attach it, but it seems that those demo
> grammars *should* be right. If they aren't they need to be fixed.
> 
> -warner
> 

Upps, I just got confused local rule scopes with the global scopes,
which I've been using. The grammar *is* actually correct and ANDLRworks
doesn't complain about any error when generating the file. Does
generating of your copy cause an error? Or does your changed version
cause the error? If the latter, please post the changed rule/grammar.

Best regards,
Johannes Luber

From jaluber at gmx.de  Mon Aug 27 11:21:23 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 27 Aug 2007 20:21:23 +0200
Subject: [antlr-interest] Access AST created by parser
In-Reply-To: <6d7cf9470708270729n2d54a83es1b6299f4d4839f8a@mail.gmail.com>
References: <6d7cf9470708270729n2d54a83es1b6299f4d4839f8a@mail.gmail.com>
Message-ID: <46D31623.6070309@gmx.de>

a.k.n.s wrote:
> I am very, very new to antlr, so perhaps I'm missing something simple -
> but I seem to be unable to access the AST representation of my input file.
> 
> The basics of my grammar are as follows:
> 
> grammar Model;
> 
> options {
>     language=CSharp;
>     output=AST;
> }
> 
> deck
>     :   (statement)+
>     ;
> 
> statement
>     :   (welldef|modelSize)
>     ;
> 
> welldef
>     :   'WELLDEF'^ declarator+ EOL
>     ;
>    
> modelSize: 'MODELSIZE'^ xSize ySize zSize EOL
>     ;
> 
> ....
> 
> I use AntlrWorks to generate the Parser and Lexer.
> 
> My input file looks like this:
> 
> WELLDEF SS001
> WELLDEF PN001 ERER001 P33001 AA001
> MODELSIZE  53  79  67
> WELLDEF PN0014444
> 
> I'm only able to access the tree of the first row (by calling
> parser.deck()) - is there a parser function I can call to get a tree
> representation of the entire file? I would really appreciate it if
> someone could point me in the right direction.
> 
> Thanks!

I can distantly remember that someone mentioned doing something like
this on this list. Unfortunately, I can only recommend to search the
list. IIRC, Ter confused the question with the DOT file generation.
Maybe this helps to find the correct thread.

Best regards,
Johannes Luber

From alexandre.hamez at lip6.fr  Mon Aug 27 11:22:23 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Mon, 27 Aug 2007 20:22:23 +0200
Subject: [antlr-interest] Reading a string of fixed size
In-Reply-To: <ebc876d70708270941o7ddfdcb1g2738914c895adfa1@mail.gmail.com>
References: <FF993752CB890B4EB591BE5450C37BF1B04D05@navamane001.ad.internal.corp>
	<6C79D166-7BEC-417D-B5EC-1028EACB925A@lip6.fr>
	<ebc876d70708270941o7ddfdcb1g2738914c895adfa1@mail.gmail.com>
Message-ID: <924F9C83-1C27-450C-9E2E-43EF11484930@lip6.fr>

Thanks, you help me a lot! I had to change a few things in order to  
make it run:

First, the value passed to FIXED_LENGTH_STRING must be computed in an  
action directly after the recognition of NUMBER.

CAMI_STRING
	@init{int nbToRead = 0;}
     	:
	NUMBER {nbToRead = Integer.parseInt($NUMBER.text);}
	':'
	fs=FIXED_LENGTH_STRING[nbToRead]
	{
		setText($fs.text);
	}
	;

The boolean expression in the predicate must not change the value  
tested because this part is called several time in the generated  
code, in the same loop. So I've decremented the value of len after  
each consumption of a character.

fragment
FIXED_LENGTH_STRING
	[int len]
	:
	( { len > 0 }?=> .{len--;})+
	;


On 27 ao?t 07, at 18:41, Thomas Brandon wrote:

> On 8/28/07, Alexandre Hamez <alexandre.hamez at lip6.fr> wrote:
>> Thanks for your interest. But the fact is that I want to create a
>> Token with exactly NUMBER characters. The following characters will
>> match for other token. It's not an error if there are characters
>> which follow. Its mean that I can have something like that:
>>
>>         CAMI_STRING (',' CAMI_STRING)*
>>
>> ( for newcomers: CAMI_STRING : NUMBER ':' STRING where the size of
>> STRING is given by NUMBER).
>>
>>
>> Moreover, as a strange side effect of the following code, newlines
>> make the parser completely mad:
>>
>>> CAMI_STRING
>>>       :
>>>       NUMBER ':'
>>>       {
>>>               // Get the current position in stream
>>>               int start  = input.getCharPositionInLine();
>>>               // Computing the position of the last character of  
>>> the STRING to
>>> be read
>>>               int end = start + Integer.parseInt($NUMBER.text) - 1;
>>>               // Set the value of the returned value to STRING
>>>               setText(input.substring(start,end));
>>>               // Update the position in the stream
>>>               input.seek(end+1);
>>>       }
>>>       ;
> Seek takes an absolute index in the stream so you should get the
> location from input.index() rather than input.getCharPositionInLine().
> Also, you are going to get exceptions calling substring if a length is
> specified that extends past the end of the stream. You could call
> seek, which won't seek past the end of the stream and then check the
> resulting input to determine how many characters could actually be
> found. Or repeatedly call consume and check for EOF.
> Or a better solution might be to use predicates to handle the
> matching. Something like:
> CAMI_STRING
>     :   NUMBER ':' fs=FIXED_LENGTH_STRING[Integer.parseInt 
> ($NUMBER.text)]
>         { setText($fs.text); }
>     ;
>
> fragment
> FIXED_LENGTH_STRING[int len]
>     :   ( { len-- > 0 }?=> .)+ { len == 0 }?
>     ;
> should work. Or you may want to replace the second predicate in
> FIXED_LENGTH_STRING with code to record an error if all characters
> could not be matched, rather than handling the resulting predicate
> failure exception.
>
> Tom.
>

------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/d57d25de/attachment.bin 

From antlr at jazillian.com  Mon Aug 27 11:47:46 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 27 Aug 2007 14:47:46 -0400
Subject: [antlr-interest] lexer hangs on empty input
Message-ID: <46D31C52.8000603@jazillian.com>

My lexer is hanging when I feed it an empty file to lex.
It hangs at CommonTreeNodeStream.java line 413
It happens in both 3.0 and 3.0.1.
Is this a known bug?

From warnero at gmail.com  Mon Aug 27 11:51:47 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 11:51:47 -0700
Subject: [antlr-interest] stuck on templates
In-Reply-To: <46D31534.4070908@gmx.de>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
	<46D310E1.2020701@gmx.de>
	<d76a9c0d0708271103j42399d0bv5bc1c6c604103537@mail.gmail.com>
	<46D31534.4070908@gmx.de>
Message-ID: <d76a9c0d0708271151o550446b5q9c79b8ec4da7238@mail.gmail.com>

Ok, when I tried this I get a syntax error when trying to generate
(which I'm not sure if it's this or something else - probably
something else, but help is greatly appreciated). (The error is from
the maven2 antlr3 plugin, but I get a similar error when trying to
generate from inside ANTLRWorks). I've attached the grammar.

error(100): C:\java\projects\chama-antlr2\src\main\antlr\Model.g:19:1:
syntax error: antlr:
C:\java\projects\chama-antlr2\src\main\antlr\Model.g:19:1: expecting
COLON, found 'prog'

Thanks for all the help!

-warner

On 8/27/07, Johannes Luber <jaluber at gmx.de> wrote:
> Upps, I just got confused local rule scopes with the global scopes,
> which I've been using. The grammar *is* actually correct and ANDLRworks
> doesn't complain about any error when generating the file. Does
> generating of your copy cause an error? Or does your changed version
> cause the error? If the latter, please post the changed rule/grammar.
>
> Best regards,
> Johannes Luber
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 1605 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/4f41d89f/attachment.obj 

From warnero at gmail.com  Mon Aug 27 11:55:57 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 11:55:57 -0700
Subject: [antlr-interest] stuck on templates
In-Reply-To: <d76a9c0d0708271151o550446b5q9c79b8ec4da7238@mail.gmail.com>
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
	<46D310E1.2020701@gmx.de>
	<d76a9c0d0708271103j42399d0bv5bc1c6c604103537@mail.gmail.com>
	<46D31534.4070908@gmx.de>
	<d76a9c0d0708271151o550446b5q9c79b8ec4da7238@mail.gmail.com>
Message-ID: <d76a9c0d0708271155g4fa95910p27d8cdd87340ea42@mail.gmail.com>

Doh! Found my issue (went back and looked at the code for CMinus and
it was declaring program, not something different as I thought it
was). I changed my prog entry and ANTLRWorks stopped complaining.
Onward!

-warner

On 8/27/07, Warner Onstine <warnero at gmail.com> wrote:
> Ok, when I tried this I get a syntax error when trying to generate
> (which I'm not sure if it's this or something else - probably
> something else, but help is greatly appreciated). (The error is from
> the maven2 antlr3 plugin, but I get a similar error when trying to
> generate from inside ANTLRWorks). I've attached the grammar.
>
> error(100): C:\java\projects\chama-antlr2\src\main\antlr\Model.g:19:1:
> syntax error: antlr:
> C:\java\projects\chama-antlr2\src\main\antlr\Model.g:19:1: expecting
> COLON, found 'prog'
>
> Thanks for all the help!
>
> -warner
>
> On 8/27/07, Johannes Luber <jaluber at gmx.de> wrote:
> > Upps, I just got confused local rule scopes with the global scopes,
> > which I've been using. The grammar *is* actually correct and ANDLRworks
> > doesn't complain about any error when generating the file. Does
> > generating of your copy cause an error? Or does your changed version
> > cause the error? If the latter, please post the changed rule/grammar.
> >
> > Best regards,
> > Johannes Luber
> >
>
>
> --
> Warner Onstine - Programmer/Author
> New book on Tapestry 4!
> Tapestry 101 available at
> http://sourcebeat.com/books/tapestrylive.html
> warner at warneronstine.com
> http://warneronstine.com/blog
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From antlr at mirality.co.nz  Mon Aug 27 13:17:42 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 28 Aug 2007 08:17:42 +1200
Subject: [antlr-interest] stuck on templates
In-Reply-To: <d76a9c0d0708271151o550446b5q9c79b8ec4da7238@mail.gmail.com
 >
References: <d76a9c0d0708271048q37d33c45se5ec5ffa67001131@mail.gmail.com>
	<46D310E1.2020701@gmx.de>
	<d76a9c0d0708271103j42399d0bv5bc1c6c604103537@mail.gmail.com>
	<46D31534.4070908@gmx.de>
	<d76a9c0d0708271151o550446b5q9c79b8ec4da7238@mail.gmail.com>
Message-ID: <20070827202059.F1C7811EB01@www.antlr.org>

At 06:51 28/08/2007, Warner Onstine wrote:
 >error(100):
 >C:\java\projects\chama-antlr2\src\main\antlr\Model.g:19:1:
 >syntax error: antlr:
 >C:\java\projects\chama-antlr2\src\main\antlr\Model.g:19:1:
 >expecting COLON, found 'prog'

Well, it's right.  A snippet from your grammar file:

 >program
 >scope {
 >  List methods;
 >  List imports;
 >}
 >@init {
 >  $program::methods = new ArrayList();
 >  $program::imports = new ArrayList();
 >}
 >
 >prog	:	packageDecl importsDecl? model
 >	;

You're starting out declaring the 'program' rule but never finish 
it, then start declaring the 'prog' rule in the middle of it.

Either merge the two rules or convert 'program' into a global 
scope instead of a rule.


From trunkel at gmail.com  Mon Aug 27 13:49:02 2007
From: trunkel at gmail.com (troy runkel)
Date: Mon, 27 Aug 2007 16:49:02 -0400
Subject: [antlr-interest] Problems debugging large grammar in Visual
	Studio 2005
In-Reply-To: <620da58c0707131055i3c31b9b1uaca9694e6b2636a5@mail.gmail.com>
References: <620da58c0707131055i3c31b9b1uaca9694e6b2636a5@mail.gmail.com>
Message-ID: <620da58c0708271349x2327be6v77ffba5858354f37@mail.gmail.com>

I wanted to follow up on this issue and report what I've learned in
case anybody else runs across this problem.  I contacted Microsoft
Support and opened a case regarding this issue.  It turns out that the
Visual Studio 2005 debugger uses an unsigned short to track line
number information.  This means that the debugger will only work on
source files up to 64k lines long.  The next release of Visual Studio
is code named Orcas; the one after that Orcas+1.  Microsoft is not
planning to fix this limitation until Orcas+1, which could be several
years.

Microsoft Support suggested a couple of workarounds for this issue.

1) Use WinDbg instead of the Visual Studio debugger.  Apparently the
code in WinDbg is more recent and uses 32-bit variables to track line
number information.

2) Break up the ANTLR generated lexer and parser files into multiple
source files each less than 64k lines long.

Does ANTLR already have a good method of breaking up the generated files?

Troy Runkel


On 7/13/07, troy runkel <trunkel at gmail.com> wrote:
> I've applied VS2005 SP1 but that doesn't seem to have resolved the
> problem.  I'll check the hotfixes next and see if they have any
> applicable.  Thanks.
>
> --Troy
>
> >
> > Message: 6
> > Date: Fri, 13 Jul 2007 09:56:58 -0700
> > From: "Jim Idle" <jimi at temporal-wave.com>
> > Subject: Re: [antlr-interest] Problems debugging large grammar in
> >         Visual  Studio2005
> > To: "ANTLR mail-list" <antlr-interest at antlr.org>
> > Message-ID:
> >         <051466DAA0D608439E196797955018D76ECB at wavemachine.temporal-wave.com>
> > Content-Type: text/plain;       charset="US-ASCII"
> >
> > Have you applied SP1? There may also be some hotfixes on the VS2005 site
> > (I have loaded some of the performance related ones, but do not remember
> > loading anything for this type of error and my T-SQL parser is getting
> > on for that size.
> >
> > Perhaps you should not step into functions in the bottom half of the
> > file? ;-)
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of troy runkel
> > > Sent: Friday, July 13, 2007 8:38 AM
> > > To: ANTLR mail-list
> > > Subject: [antlr-interest] Problems debugging large grammar in Visual
> > > Studio2005
> > >
> > > I'm using ANTLR v3 and the C target.  I have a large grammar file
> > > (2500 lines) which builds into an even larger C parser file (107000
> > > lines).  When debugging the generated parser in Visual Studio 2005, if
> > > I attempt to step into a function located in the bottom half of the
> > > file the debugger won't display the correct source location.  This
> > > behavior is fairly consistent.  I can step through/into functions in
> > > the top half of the file without problems.  As soon as I step into a
> > > function in the bottom half of the file the debugger displays
> > > incorrect source information.  I can debug at the assembly level, but
> > > that's a bit of a pain.
> > >
> > > I realize this is more of a compiler issue than an ANTLR issue, but
> > > before I attempt to navigate through the labyrinth of Microsoft
> > > technical support I thought I'd check here first.  Has anybody seen
> > > this sort of behavior?  Thanks.
> > >
> > > Troy Runkel
>

From trunkel at gmail.com  Mon Aug 27 14:31:41 2007
From: trunkel at gmail.com (troy runkel)
Date: Mon, 27 Aug 2007 17:31:41 -0400
Subject: [antlr-interest] Need advice resolving internal error from
	createLookaheadDFA
Message-ID: <620da58c0708271431m29c3529dgee78bb44e3c3bf3d@mail.gmail.com>

I'm working on a large grammar and I'm seeing the following error
message on several rules.

error(10):  internal error:
org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:864): could not
even do k=1 for decision 197

Using the -Xwatchconversion ANTLR option I'm able to determine which
rule the error message applies to.  However, I'm not sure how to
resolve the problem.

Can anybody tell me what this error means and offer advice on how to
resolve it.  Thanks.

Troy Runkel

From antlr at jazillian.com  Mon Aug 27 15:01:53 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Mon, 27 Aug 2007 18:01:53 -0400
Subject: [antlr-interest] Need advice resolving internal error
	from	createLookaheadDFA
In-Reply-To: <620da58c0708271431m29c3529dgee78bb44e3c3bf3d@mail.gmail.com>
References: <620da58c0708271431m29c3529dgee78bb44e3c3bf3d@mail.gmail.com>
Message-ID: <46D349D1.5000209@jazillian.com>

I just struggled with this error today, too.

In my case, it was with a treewalker (not that it matters, I guess).
I had a rule like this:

a:  b*
  ;

b: (c d e)?
  ;

...where I have one rule refering to "zero or more" of another, and this 
other rule could be empty.
I simply made sure that the other rule could no longer be empty (removed 
the "?" from rule b).

And IIRC, the rule that seemed to be producing the error (the one that 
-Xwatchconversion shows)
was not the problem rule.

Andy


troy runkel wrote:
> I'm working on a large grammar and I'm seeing the following error
> message on several rules.
>
> error(10):  internal error:
> org.antlr.tool.Grammar.createLookaheadDFA(Grammar.java:864): could not
> even do k=1 for decision 197
>
> Using the -Xwatchconversion ANTLR option I'm able to determine which
> rule the error message applies to.  However, I'm not sure how to
> resolve the problem.
>
> Can anybody tell me what this error means and offer advice on how to
> resolve it.  Thanks.
>
> Troy Runkel
>
>   


From jimi at temporal-wave.com  Mon Aug 27 15:11:58 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 27 Aug 2007 15:11:58 -0700
Subject: [antlr-interest] Problems debugging large grammar in
	VisualStudio 2005
In-Reply-To: <620da58c0708271349x2327be6v77ffba5858354f37@mail.gmail.com>
References: <620da58c0707131055i3c31b9b1uaca9694e6b2636a5@mail.gmail.com>
	<620da58c0708271349x2327be6v77ffba5858354f37@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D702365E@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Monday, August 27, 2007 1:49 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Problems debugging large grammar in
> VisualStudio 2005
> 
> I wanted to follow up on this issue and report what I've learned in
> case anybody else runs across this problem.  I contacted Microsoft
> Support and opened a case regarding this issue.  It turns out that the
> Visual Studio 2005 debugger uses an unsigned short to track line
> number information.  This means that the debugger will only work on
> source files up to 64k lines long.  The next release of Visual Studio
> is code named Orcas; the one after that Orcas+1.  Microsoft is not
> planning to fix this limitation until Orcas+1, which could be several
> years.
> 
> Microsoft Support suggested a couple of workarounds for this issue.
> 
> 1) Use WinDbg instead of the Visual Studio debugger.  Apparently the
> code in WinDbg is more recent and uses 32-bit variables to track line
> number information.
> 
> 2) Break up the ANTLR generated lexer and parser files into multiple
> source files each less than 64k lines long.
> 
> Does ANTLR already have a good method of breaking up the generated
> files?

No ;-).

However I am going to work on reducing the number of lines I guess ;-) Also the next release may reduce the number of lines too.

Jim 

No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.484 / Virus Database: 269.12.9/975 - Release Date: 8/26/2007 9:34 PM
 

From warnero at gmail.com  Mon Aug 27 16:29:38 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 16:29:38 -0700
Subject: [antlr-interest] still dealing with ST
Message-ID: <d76a9c0d0708271629g58557b7fg282c7b33c8c2a476@mail.gmail.com>

Ok, got around a few of my earlier issues and have started to create
my template and rules for rewriting things, but I'm stuck on (I think)
one of the last assignments. I will attach the grammar, but I want to
highlight the section I'm currently having an issue with.

	
variableAssignment
	:	variableName=(variableDecl|ID) '='
variableValue=(selectStatement|updateStatement|deleteStatement|ID) ->
variable_assignment(var={$variableName.st},
valueToAssign={$variableValue.st})
	;

No matter what I do the Java that is generated has issues here:

            {
                retval.st = templateLib.getInstanceOf("variable_assignment",
              new STAttrMap().put("var",
variableName.st).put("valueToAssign", variableValue.st));

            }

It keeps saying that variableName.st and variableValue.st cannot be
resolved. Further up in the file they are set to:
        Token variableName=null;
        Token variableValue=null;

And I realize that I may doing something completely wrong here, but
what I'm trying to do is to pass off the rendered template (sorry if
the terminology is incorrect just stating it how I see it) to the
calling template function (variable_assignment in this case). the
variable_assignment function (in the STG file) shouldn't have to know
what kind of variable is getting assigned etc. to actually just spit
out the rendered text.

Let me know if you want the generated Java file.

-warner
-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 1852 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/b7d1f26d/attachment.obj 

From parrt at cs.usfca.edu  Mon Aug 27 18:48:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 27 Aug 2007 18:48:19 -0700
Subject: [antlr-interest] still dealing with ST
In-Reply-To: <d76a9c0d0708271629g58557b7fg282c7b33c8c2a476@mail.gmail.com>
References: <d76a9c0d0708271629g58557b7fg282c7b33c8c2a476@mail.gmail.com>
Message-ID: <0E6176BB-E6F8-46DB-8A4A-88703BEC7E09@cs.usfca.edu>

Hi.

why the extra parens?

variableName=(variableDecl|ID)

That means result of a subrule not rule, which doesn't return  
anything (at least for now).

Ter
On Aug 27, 2007, at 4:29 PM, Warner Onstine wrote:

> Ok, got around a few of my earlier issues and have started to create
> my template and rules for rewriting things, but I'm stuck on (I think)
> one of the last assignments. I will attach the grammar, but I want to
> highlight the section I'm currently having an issue with.
>
> 	
> variableAssignment
> 	:	variableName=(variableDecl|ID) '='
> variableValue=(selectStatement|updateStatement|deleteStatement|ID) ->
> variable_assignment(var={$variableName.st},
> valueToAssign={$variableValue.st})
> 	;
>
> No matter what I do the Java that is generated has issues here:
>
>             {
>                 retval.st = templateLib.getInstanceOf 
> ("variable_assignment",
>               new STAttrMap().put("var",
> variableName.st).put("valueToAssign", variableValue.st));
>
>             }
>
> It keeps saying that variableName.st and variableValue.st cannot be
> resolved. Further up in the file they are set to:
>         Token variableName=null;
>         Token variableValue=null;
>
> And I realize that I may doing something completely wrong here, but
> what I'm trying to do is to pass off the rendered template (sorry if
> the terminology is incorrect just stating it how I see it) to the
> calling template function (variable_assignment in this case). the
> variable_assignment function (in the STG file) shouldn't have to know
> what kind of variable is getting assigned etc. to actually just spit
> out the rendered text.
>
> Let me know if you want the generated Java file.
>
> -warner
> -- 
> Warner Onstine - Programmer/Author
> New book on Tapestry 4!
> Tapestry 101 available at
> http://sourcebeat.com/books/tapestrylive.html
> warner at warneronstine.com
> http://warneronstine.com/blog
> <Model.g>


From warnero at gmail.com  Mon Aug 27 19:25:07 2007
From: warnero at gmail.com (Warner Onstine)
Date: Mon, 27 Aug 2007 19:25:07 -0700
Subject: [antlr-interest] still dealing with ST
In-Reply-To: <0E6176BB-E6F8-46DB-8A4A-88703BEC7E09@cs.usfca.edu>
References: <d76a9c0d0708271629g58557b7fg282c7b33c8c2a476@mail.gmail.com>
	<0E6176BB-E6F8-46DB-8A4A-88703BEC7E09@cs.usfca.edu>
Message-ID: <d76a9c0d0708271925q7a44be5bj308f42323851b346@mail.gmail.com>

On 8/27/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi.
>
> why the extra parens?
>
> variableName=(variableDecl|ID)
>
> That means result of a subrule not rule, which doesn't return
> anything (at least for now).
Ahh, ok.

What I'm trying to do is give developers this option:
def someVar = someValue
def someVar (from the earlier variableDecl)
someVar = someValue

I've changed this section to this:
variableAssignment
	:	atom '=' statementValue -> variable_assignment(var={$atom.st},
value={$statementValue.st})
	;

atom	: 	variableDecl 	-> variable_decl(variable={$variableDecl.st})
	|	ID		-> {new StringTemplate($ID.text)}
	;

statementValue
	:	selectStatement
	|	updateStatement	
	|	deleteStatement	
	|	ID		-> {new StringTemplate($ID.text)}
	;

(not sure what to do with the selectStatement, updateStatement, etc. yet. )

When I run my test (which I'm attaching) I get this NullPointerException:
java.lang.NullPointerException
	at ModelParser.variableDecl(ModelParser.java:667)
	at ModelParser.atom(ModelParser.java:780)
	at ModelParser.variableAssignment(ModelParser.java:709)
	at ModelParser.body(ModelParser.java:573)
	at ModelParser.method(ModelParser.java:460)
	at ModelParser.model(ModelParser.java:332)
	at ModelParser.prog(ModelParser.java:114)

I'm sure there are better ways to do what I want to do, just looking
for some pointers.

>
> Ter
> On Aug 27, 2007, at 4:29 PM, Warner Onstine wrote:
>
> > Ok, got around a few of my earlier issues and have started to create
> > my template and rules for rewriting things, but I'm stuck on (I think)
> > one of the last assignments. I will attach the grammar, but I want to
> > highlight the section I'm currently having an issue with.
> >
> >
> > variableAssignment
> >       :       variableName=(variableDecl|ID) '='
> > variableValue=(selectStatement|updateStatement|deleteStatement|ID) ->
> > variable_assignment(var={$variableName.st},
> > valueToAssign={$variableValue.st})
> >       ;
> >
> > No matter what I do the Java that is generated has issues here:
> >
> >             {
> >                 retval.st = templateLib.getInstanceOf
> > ("variable_assignment",
> >               new STAttrMap().put("var",
> > variableName.st).put("valueToAssign", variableValue.st));
> >
> >             }
> >
> > It keeps saying that variableName.st and variableValue.st cannot be
> > resolved. Further up in the file they are set to:
> >         Token variableName=null;
> >         Token variableValue=null;
> >
> > And I realize that I may doing something completely wrong here, but
> > what I'm trying to do is to pass off the rendered template (sorry if
> > the terminology is incorrect just stating it how I see it) to the
> > calling template function (variable_assignment in this case). the
> > variable_assignment function (in the STG file) shouldn't have to know
> > what kind of variable is getting assigned etc. to actually just spit
> > out the rendered text.
> >
> > Let me know if you want the generated Java file.
> >
> > -warner
> > --
> > Warner Onstine - Programmer/Author
> > New book on Tapestry 4!
> > Tapestry 101 available at
> > http://sourcebeat.com/books/tapestrylive.html
> > warner at warneronstine.com
> > http://warneronstine.com/blog
> > <Model.g>
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 2002 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/e93b3e78/attachment-0002.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ModelTest.java
Type: application/octet-stream
Size: 1651 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070827/e93b3e78/attachment-0003.obj 

From fyaoxy at gmail.com  Mon Aug 27 19:36:25 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 28 Aug 2007 10:36:25 +0800
Subject: [antlr-interest] AST imaganary node in tree parser
Message-ID: <91dd9a4f0708271936w19f76499q9df3efab0dd62ed3@mail.gmail.com>

Hi,
In my ON grammar, there is a rewrited imaginary node, and I want to
make a tree parser, but I found I try times but cannot get a right
result.
Could someone give me a handle:)

grammar Imaginary;
options{output=AST; ASTLabelType=CommonTree;}
tokens{ARRAY;STRING;STR;}
stringArray:string (',' string)* ','?->^(ARRAY string+);
string: words->^(STR[$text]);
words: WORD+;
WORD:(~(' '| '\t'))+;
WS    :    (' ' | '\t')+ {$channel=HIDDEN;};

there are 2 points in above grammar:
1,string:words; because I need quoted string, like
string:words|QSTRING; in this case ignored.
2,I cannot state my mean with tree parser grammar, because I not know
how to handle string rule in tree parser, and I need help :-)

Thanks

-- 
??
???

From fyaoxy at gmail.com  Mon Aug 27 20:01:53 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 28 Aug 2007 11:01:53 +0800
Subject: [antlr-interest] greedy options on parser rule or look ahead
	sematics predicate
Message-ID: <91dd9a4f0708272001i683b32d5hcf99a277c88de71b@mail.gmail.com>

Hi,
I have a grammar with conflict semantics, I cannot handle this right.
here is grammar.

grammar OnGreedy;
options{output=AST; ASTLabelType=CommonTree;}
tokens{ARRAY;STRING;STR;}
pairs	:	pair (':' pair)* (';' | LINE);
pair	:	stringArray ':' stringArray;
stringArray:string (options{greedy=false;}:',' LINE? string)* ','
LINE?->^(ARRAY string+);

string: words->^(STR[$text]);
words: WORD+;
WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
WS	:	(' ' | '\t')+ {$channel=HIDDEN;};
LINE	:	('\r'?'\n')+
//	{$channel=HIDDEN;}
	;

Supported input:
name:a,b,c,
a,b,c,
a,b,c:value;

As you see, I hope this parsed result is :
name:a,b,c,a,b,c;
a,b,c:value;
Yes, I hope pair rule's value part (stringArray) greedy, and make
closest rule match next to a new pair.

My questions are:
1, I hope greedy options can work fine like in lexer. seems I cannot
get right result.
2, I wanna use semantics predicate like some syntactics predicate rewrite rule,
(stringArray !pair)=>stringArray
3, maybe in code do this work, but there need handle newline, and
match follow rule, I not sure if it is acceptable or effective.

There are some good ways to handle this case?
Thanks

-- 
??
???

From fyaoxy at gmail.com  Mon Aug 27 20:09:41 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 28 Aug 2007 11:09:41 +0800
Subject: [antlr-interest] greedy options on parser rule or look ahead
	sematics predicate
In-Reply-To: <91dd9a4f0708272001i683b32d5hcf99a277c88de71b@mail.gmail.com>
References: <91dd9a4f0708272001i683b32d5hcf99a277c88de71b@mail.gmail.com>
Message-ID: <91dd9a4f0708272009x6d5ba8b0k9fabff4d8259cae3@mail.gmail.com>

So Sooooorry, this grammar should be this,

grammar OnGreedy;
options{output=AST; ASTLabelType=CommonTree;}
tokens{ARRAY;STRING;STR;}
pairs	:	pair (';' pair)* (';' | LINE);
pair	:	stringArray ':' stringArray;
stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
|LINE)?->^(ARRAY string+);

string: words->^(STR[$text]);
words: WORD+;
WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
WS	:	(' ' | '\t')+ {$channel=HIDDEN;};
LINE	:	('\r'?'\n')+
//	{$channel=HIDDEN;}
	;

Questions is yet that questions:)
I mistake at extracting it from full grammar.
Thanks

2007/8/28, ??? <fyaoxy at gmail.com>:
> Hi,
> I have a grammar with conflict semantics, I cannot handle this right.
> here is grammar.
>
> grammar OnGreedy;
> options{output=AST; ASTLabelType=CommonTree;}
> tokens{ARRAY;STRING;STR;}
> pairs   :       pair (':' pair)* (';' | LINE);
> pair    :       stringArray ':' stringArray;
> stringArray:string (options{greedy=false;}:',' LINE? string)* ','
> LINE?->^(ARRAY string+);
>
> string: words->^(STR[$text]);
> words: WORD+;
> WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> LINE    :       ('\r'?'\n')+
> //      {$channel=HIDDEN;}
>         ;
>
> Supported input:
> name:a,b,c,
> a,b,c,
> a,b,c:value;
>
> As you see, I hope this parsed result is :
> name:a,b,c,a,b,c;
> a,b,c:value;
> Yes, I hope pair rule's value part (stringArray) greedy, and make
> closest rule match next to a new pair.
>
> My questions are:
> 1, I hope greedy options can work fine like in lexer. seems I cannot
> get right result.
> 2, I wanna use semantics predicate like some syntactics predicate rewrite rule,
> (stringArray !pair)=>stringArray
> 3, maybe in code do this work, but there need handle newline, and
> match follow rule, I not sure if it is acceptable or effective.
>
> There are some good ways to handle this case?
> Thanks
>
> --
> ??
> ???
>


-- 
??
???

From fyaoxy at gmail.com  Mon Aug 27 20:27:25 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 28 Aug 2007 11:27:25 +0800
Subject: [antlr-interest] greedy options on parser rule or look ahead
	sematics predicate
In-Reply-To: <91dd9a4f0708272009x6d5ba8b0k9fabff4d8259cae3@mail.gmail.com>
References: <91dd9a4f0708272001i683b32d5hcf99a277c88de71b@mail.gmail.com>
	<91dd9a4f0708272009x6d5ba8b0k9fabff4d8259cae3@mail.gmail.com>
Message-ID: <91dd9a4f0708272027o30ce340bn2da824910177e279@mail.gmail.com>

oops, soooorry again, this test grammar should be this,
grammar OnGreedy;
options{output=AST; ASTLabelType=CommonTree;}
tokens{ARRAY;STRING;STR;}
pairs	:	pair (';'LINE? pair)* (';' | LINE)?;
pair	:	stringArray ':' stringArray;
stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
|LINE)?->^(ARRAY string+);

string: words->^(STR[$text]);

words: WORD+;
WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
WS	:	(' ' | '\t')+ {$channel=HIDDEN;};
LINE	:	('\r'?'\n')+
//	{$channel=HIDDEN;}
	;

Sooooorry:)
Questions is questions:)

2007/8/28, ??? <fyaoxy at gmail.com>:
> So Sooooorry, this grammar should be this,
>
> grammar OnGreedy;
> options{output=AST; ASTLabelType=CommonTree;}
> tokens{ARRAY;STRING;STR;}
> pairs   :       pair (';' pair)* (';' | LINE);
> pair    :       stringArray ':' stringArray;
> stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
> |LINE)?->^(ARRAY string+);
>
> string: words->^(STR[$text]);
> words: WORD+;
> WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> LINE    :       ('\r'?'\n')+
> //      {$channel=HIDDEN;}
>         ;
>
> Questions is yet that questions:)
> I mistake at extracting it from full grammar.
> Thanks
>
> 2007/8/28, ??? <fyaoxy at gmail.com>:
> > Hi,
> > I have a grammar with conflict semantics, I cannot handle this right.
> > here is grammar.
> >
> > grammar OnGreedy;
> > options{output=AST; ASTLabelType=CommonTree;}
> > tokens{ARRAY;STRING;STR;}
> > pairs   :       pair (':' pair)* (';' | LINE);
> > pair    :       stringArray ':' stringArray;
> > stringArray:string (options{greedy=false;}:',' LINE? string)* ','
> > LINE?->^(ARRAY string+);
> >
> > string: words->^(STR[$text]);
> > words: WORD+;
> > WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> > WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> > LINE    :       ('\r'?'\n')+
> > //      {$channel=HIDDEN;}
> >         ;
> >
> > Supported input:
> > name:a,b,c,
> > a,b,c,
> > a,b,c:value;
> >
> > As you see, I hope this parsed result is :
> > name:a,b,c,a,b,c;
> > a,b,c:value;
> > Yes, I hope pair rule's value part (stringArray) greedy, and make
> > closest rule match next to a new pair.
> >
> > My questions are:
> > 1, I hope greedy options can work fine like in lexer. seems I cannot
> > get right result.
> > 2, I wanna use semantics predicate like some syntactics predicate rewrite rule,
> > (stringArray !pair)=>stringArray
> > 3, maybe in code do this work, but there need handle newline, and
> > match follow rule, I not sure if it is acceptable or effective.
> >
> > There are some good ways to handle this case?
> > Thanks
> >
> > --
> > ??
> > ???
> >
>
>
> --
> ??
> ???
>


-- 
??
???

From fyaoxy at gmail.com  Mon Aug 27 23:01:17 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 28 Aug 2007 14:01:17 +0800
Subject: [antlr-interest] greedy options on parser rule or look ahead
	sematics predicate
In-Reply-To: <91dd9a4f0708272027o30ce340bn2da824910177e279@mail.gmail.com>
References: <91dd9a4f0708272001i683b32d5hcf99a277c88de71b@mail.gmail.com>
	<91dd9a4f0708272009x6d5ba8b0k9fabff4d8259cae3@mail.gmail.com>
	<91dd9a4f0708272027o30ce340bn2da824910177e279@mail.gmail.com>
Message-ID: <91dd9a4f0708272301s24723f8cmbc1944731b176253@mail.gmail.com>

Hi,
If this case just alike that this link stated
http://www.antlr.org/wiki/display/ANTLR3/Action+execution+during+backtracking

name:a,b,c,   \  ___ I want this 2 lines greedy make a combination.
a,b,c,            /        because 3rd line match a pair rule.
a,b,c:value;
But a,b,c self is a stringArray.

Any idea?


? 07-8-28????<fyaoxy at gmail.com> ???
> oops, soooorry again, this test grammar should be this,
> grammar OnGreedy;
> options{output=AST; ASTLabelType=CommonTree;}
> tokens{ARRAY;STRING;STR;}
> pairs   :       pair (';'LINE? pair)* (';' | LINE)?;
> pair    :       stringArray ':' stringArray;
> stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
> |LINE)?->^(ARRAY string+);
>
> string: words->^(STR[$text]);
>
> words: WORD+;
> WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> LINE    :       ('\r'?'\n')+
> //      {$channel=HIDDEN;}
>         ;
>
> Sooooorry:)
> Questions is questions:)
>
> 2007/8/28, ??? <fyaoxy at gmail.com>:
> > So Sooooorry, this grammar should be this,
> >
> > grammar OnGreedy;
> > options{output=AST; ASTLabelType=CommonTree;}
> > tokens{ARRAY;STRING;STR;}
> > pairs   :       pair (';' pair)* (';' | LINE);
> > pair    :       stringArray ':' stringArray;
> > stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
> > |LINE)?->^(ARRAY string+);
> >
> > string: words->^(STR[$text]);
> > words: WORD+;
> > WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> > WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> > LINE    :       ('\r'?'\n')+
> > //      {$channel=HIDDEN;}
> >         ;
> >
> > Questions is yet that questions:)
> > I mistake at extracting it from full grammar.
> > Thanks
> >
> > 2007/8/28, ??? <fyaoxy at gmail.com>:
> > > Hi,
> > > I have a grammar with conflict semantics, I cannot handle this right.
> > > here is grammar.
> > >
> > > grammar OnGreedy;
> > > options{output=AST; ASTLabelType=CommonTree;}
> > > tokens{ARRAY;STRING;STR;}
> > > pairs   :       pair (':' pair)* (';' | LINE);
> > > pair    :       stringArray ':' stringArray;
> > > stringArray:string (options{greedy=false;}:',' LINE? string)* ','
> > > LINE?->^(ARRAY string+);
> > >
> > > string: words->^(STR[$text]);
> > > words: WORD+;
> > > WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> > > WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> > > LINE    :       ('\r'?'\n')+
> > > //      {$channel=HIDDEN;}
> > >         ;
> > >
> > > Supported input:
> > > name:a,b,c,
> > > a,b,c,
> > > a,b,c:value;
> > >
> > > As you see, I hope this parsed result is :
> > > name:a,b,c,a,b,c;
> > > a,b,c:value;
> > > Yes, I hope pair rule's value part (stringArray) greedy, and make
> > > closest rule match next to a new pair.
> > >
> > > My questions are:
> > > 1, I hope greedy options can work fine like in lexer. seems I cannot
> > > get right result.
> > > 2, I wanna use semantics predicate like some syntactics predicate rewrite rule,
> > > (stringArray !pair)=>stringArray
> > > 3, maybe in code do this work, but there need handle newline, and
> > > match follow rule, I not sure if it is acceptable or effective.
> > >
> > > There are some good ways to handle this case?
> > > Thanks
> > >
> > > --
> > > ??
> > > ???
> > >
> >
> >
> > --
> > ??
> > ???
> >
>
>
> --
> ??
> ???
>


-- 
??
???

From fyaoxy at gmail.com  Mon Aug 27 23:39:47 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Tue, 28 Aug 2007 14:39:47 +0800
Subject: [antlr-interest] greedy options on parser rule or look ahead
	sematics predicate
In-Reply-To: <91dd9a4f0708272301s24723f8cmbc1944731b176253@mail.gmail.com>
References: <91dd9a4f0708272001i683b32d5hcf99a277c88de71b@mail.gmail.com>
	<91dd9a4f0708272009x6d5ba8b0k9fabff4d8259cae3@mail.gmail.com>
	<91dd9a4f0708272027o30ce340bn2da824910177e279@mail.gmail.com>
	<91dd9a4f0708272301s24723f8cmbc1944731b176253@mail.gmail.com>
Message-ID: <91dd9a4f0708272339i4db17edbmb8df932a232345fb@mail.gmail.com>

Hi,
I make a dicision, strongthen grammar rule, to this case, I changed:
grammar OnGreedy;
options{output=AST; ASTLabelType=CommonTree;}
tokens{PAIR;NAME;VALUE;ARRAY;STRING;STR;}
pairs	:	pair (((';'LINE?)|LINE) pair)* (';' | LINE)?->^(ARRAY pair+);
pair	:	name=stringArray ':' value=stringArray ->^(PAIR ^(NAME $name)
^(VALUE $value));
//stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
|LINE)?->^(ARRAY string+);
stringArray
	:	strings (',' LINE strings)*->^(ARRAY strings+);
strings	:	string (',' string)*->^(STRING string)+;
string: words->^(STR[$text]);

words: WORD+;
WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
WS	:	(' ' | '\t')+ {$channel=HIDDEN;};
LINE	:	('\r'?'\n')+
//	{$channel=HIDDEN;}
	;
test case like this:

name:a,b,c,
a,b,c
a,b,c:value;
this would be 2 name/value pair.

But from deep heart, I still hope can handle this:
name:a,b,c,
a,b,c,
a,b,c:value;
I hope this can be read as 2 name/value pair as well.
so questions is still questions, :-)

? 07-8-28????<fyaoxy at gmail.com> ???
> Hi,
> If this case just alike that this link stated
> http://www.antlr.org/wiki/display/ANTLR3/Action+execution+during+backtracking
>
> name:a,b,c,   \  ___ I want this 2 lines greedy make a combination.
> a,b,c,            /        because 3rd line match a pair rule.
> a,b,c:value;
> But a,b,c self is a stringArray.
>
> Any idea?
>
>
> ? 07-8-28????<fyaoxy at gmail.com> ???
> > oops, soooorry again, this test grammar should be this,
> > grammar OnGreedy;
> > options{output=AST; ASTLabelType=CommonTree;}
> > tokens{ARRAY;STRING;STR;}
> > pairs   :       pair (';'LINE? pair)* (';' | LINE)?;
> > pair    :       stringArray ':' stringArray;
> > stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
> > |LINE)?->^(ARRAY string+);
> >
> > string: words->^(STR[$text]);
> >
> > words: WORD+;
> > WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> > WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> > LINE    :       ('\r'?'\n')+
> > //      {$channel=HIDDEN;}
> >         ;
> >
> > Sooooorry:)
> > Questions is questions:)
> >
> > 2007/8/28, ??? <fyaoxy at gmail.com>:
> > > So Sooooorry, this grammar should be this,
> > >
> > > grammar OnGreedy;
> > > options{output=AST; ASTLabelType=CommonTree;}
> > > tokens{ARRAY;STRING;STR;}
> > > pairs   :       pair (';' pair)* (';' | LINE);
> > > pair    :       stringArray ':' stringArray;
> > > stringArray:string (options{greedy=false;}:(',' LINE? string)*) (','
> > > |LINE)?->^(ARRAY string+);
> > >
> > > string: words->^(STR[$text]);
> > > words: WORD+;
> > > WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> > > WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> > > LINE    :       ('\r'?'\n')+
> > > //      {$channel=HIDDEN;}
> > >         ;
> > >
> > > Questions is yet that questions:)
> > > I mistake at extracting it from full grammar.
> > > Thanks
> > >
> > > 2007/8/28, ??? <fyaoxy at gmail.com>:
> > > > Hi,
> > > > I have a grammar with conflict semantics, I cannot handle this right.
> > > > here is grammar.
> > > >
> > > > grammar OnGreedy;
> > > > options{output=AST; ASTLabelType=CommonTree;}
> > > > tokens{ARRAY;STRING;STR;}
> > > > pairs   :       pair (':' pair)* (';' | LINE);
> > > > pair    :       stringArray ':' stringArray;
> > > > stringArray:string (options{greedy=false;}:',' LINE? string)* ','
> > > > LINE?->^(ARRAY string+);
> > > >
> > > > string: words->^(STR[$text]);
> > > > words: WORD+;
> > > > WORD:(~(' '| '\t'|',' |';' | ':' | '\r' | '\n'))+;
> > > > WS      :       (' ' | '\t')+ {$channel=HIDDEN;};
> > > > LINE    :       ('\r'?'\n')+
> > > > //      {$channel=HIDDEN;}
> > > >         ;
> > > >
> > > > Supported input:
> > > > name:a,b,c,
> > > > a,b,c,
> > > > a,b,c:value;
> > > >
> > > > As you see, I hope this parsed result is :
> > > > name:a,b,c,a,b,c;
> > > > a,b,c:value;
> > > > Yes, I hope pair rule's value part (stringArray) greedy, and make
> > > > closest rule match next to a new pair.
> > > >
> > > > My questions are:
> > > > 1, I hope greedy options can work fine like in lexer. seems I cannot
> > > > get right result.
> > > > 2, I wanna use semantics predicate like some syntactics predicate rewrite rule,
> > > > (stringArray !pair)=>stringArray
> > > > 3, maybe in code do this work, but there need handle newline, and
> > > > match follow rule, I not sure if it is acceptable or effective.
> > > >
> > > > There are some good ways to handle this case?
> > > > Thanks
> > > >
> > > > --
> > > > ??
> > > > ???
> > > >
> > >
> > >
> > > --
> > > ??
> > > ???
> > >
> >
> >
> > --
> > ??
> > ???
> >
>
>
> --
> ??
> ???
>


-- 
??
???

From mcstrini at fastmail.fm  Tue Aug 28 01:19:24 2007
From: mcstrini at fastmail.fm (Max Strini)
Date: Tue, 28 Aug 2007 01:19:24 -0700
Subject: [antlr-interest] C# runtime source code?
Message-ID: <1188289164.6520.1207619187@webmail.messagingengine.com>

The binary DLLs are in runtime\CSharp\ but I can't find any source code
for them, not in \lib or \src\org\antlr\runtime (which appears empty). 
Am I not seeing something?

Max Strini
-- 
  Max Strini
  mcstrini at fastmail.fm

-- 
http://www.fastmail.fm - Accessible with your email software
                          or over the web


From jaluber at gmx.de  Tue Aug 28 02:14:17 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 28 Aug 2007 11:14:17 +0200
Subject: [antlr-interest] C# runtime source code?
In-Reply-To: <1188289164.6520.1207619187@webmail.messagingengine.com>
References: <1188289164.6520.1207619187@webmail.messagingengine.com>
Message-ID: <46D3E769.8060502@gmx.de>

Max Strini wrote:
> The binary DLLs are in runtime\CSharp\ but I can't find any source code
> for them, not in \lib or \src\org\antlr\runtime (which appears empty). 
> Am I not seeing something?
> 
> Max Strini

There is no source code available yet. But someone posted a link for a
disassembled file archive, which I have been using myself. I can't
remember the link but I can send you the archive myself, if you want.

Best regards,
Johannes Luber

From doebel at tudos.org  Tue Aug 28 05:11:31 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Tue, 28 Aug 2007 14:11:31 +0200
Subject: [antlr-interest] Is it safe to overwrite the Lexer's text?
Message-ID: <46D410F3.7060309@tudos.org>

Hi,

I have a language consisting of source code and comments. I have a lexer
and parser that create an AST of it. I would like to use the created syntax
tree as a starting point for several tools. Some of them will need access
to the comments, some of them won't. I cannot just ignore the comments, but
I also don't want to store all of them inside the AST. Instead, inside the
lexer I recognize comments, copy them (current value of self.text) into a
separate table and replace the comment's text by overwriting self.text with
an index referencing the comment's table entry.

This works for now and my question is: Is this safe or does overwriting
self.text have any side effects that I did not realize up to now and that
might lead to problems later on?

Regards,
Bjoern

From antlr at mirality.co.nz  Tue Aug 28 05:20:47 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Aug 2007 00:20:47 +1200
Subject: [antlr-interest] Is it safe to overwrite the Lexer's text?
In-Reply-To: <46D410F3.7060309@tudos.org>
References: <46D410F3.7060309@tudos.org>
Message-ID: <20070828122056.7F83211E9CD@www.antlr.org>

At 00:11 29/08/2007, Bjoern Doebel wrote:
 >I have a language consisting of source code and comments. I have 
a
 >lexer and parser that create an AST of it. I would like to use 
the
 >created syntax tree as a starting point for several tools. Some 
of
 >them will need access to the comments, some of them won't. I
 >cannot just ignore the comments, but I also don't want to store
 >all of them inside the AST. Instead, inside the lexer I 
recognize
 >comments, copy them (current value of self.text) into a separate 

 >table and replace the comment's text by overwriting self.text 
with
 >an index referencing the comment's table entry.

Isn't that what channels are for?


From doebel at tudos.org  Tue Aug 28 05:47:10 2007
From: doebel at tudos.org (Bjoern Doebel)
Date: Tue, 28 Aug 2007 14:47:10 +0200
Subject: [antlr-interest] Is it safe to overwrite the Lexer's text?
In-Reply-To: <46D410F3.7060309@tudos.org> 
References: <46D410F3.7060309@tudos.org> 
Message-ID: <46D4194E.2090606@tudos.org>

Gavin Lambert wrote:
> At 00:11 29/08/2007, Bjoern Doebel wrote:
>>I have a language consisting of source code and comments. I have a
>>lexer and parser that create an AST of it. I would like to use the
>>created syntax tree as a starting point for several tools. Some of
>>them will need access to the comments, some of them won't. I
>>cannot just ignore the comments, but I also don't want to store
>>all of them inside the AST. Instead, inside the lexer I recognize
>>comments, copy them (current value of self.text) into a separate
>>table and replace the comment's text by overwriting self.text with
>>an index referencing the comment's table entry.
> 
> Isn't that what channels are for?

Maybe. TDAR isn't very verbose on this topic and only mentions hidden
channels for whitespaces. From my reading I understood that parsers can
only read from exactly one channel (TDAR, p. 25). However, for my purposes
I would need only the non-comment channel in some cases and both channels
in other cases. Is there any documenation on how to do this with channels?

Bjoern

From tbrandonau at gmail.com  Tue Aug 28 06:23:12 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 28 Aug 2007 23:23:12 +1000
Subject: [antlr-interest] Is it safe to overwrite the Lexer's text?
In-Reply-To: <46D4194E.2090606@tudos.org>
References: <46D410F3.7060309@tudos.org> <46D4194E.2090606@tudos.org>
Message-ID: <ebc876d70708280623x7a811d3eq81ee574839f9c248@mail.gmail.com>

On 8/28/07, Bjoern Doebel <doebel at tudos.org> wrote:
> Gavin Lambert wrote:
> > At 00:11 29/08/2007, Bjoern Doebel wrote:
> >>I have a language consisting of source code and comments. I have a
> >>lexer and parser that create an AST of it. I would like to use the
> >>created syntax tree as a starting point for several tools. Some of
> >>them will need access to the comments, some of them won't. I
> >>cannot just ignore the comments, but I also don't want to store
> >>all of them inside the AST. Instead, inside the lexer I recognize
> >>comments, copy them (current value of self.text) into a separate
> >>table and replace the comment's text by overwriting self.text with
> >>an index referencing the comment's table entry.
> >
> > Isn't that what channels are for?
>
> Maybe. TDAR isn't very verbose on this topic and only mentions hidden
> channels for whitespaces. From my reading I understood that parsers can
> only read from exactly one channel (TDAR, p. 25). However, for my purposes
> I would need only the non-comment channel in some cases and both channels
> in other cases. Is there any documenation on how to do this with channels?
>
I think the current channel handling is something of a work in
progress. Currently the channel support is rather basic.
CommonTokenStream only allows a parser to read from one channel and
there doesn't appear to be any direct way to access off-channel
tokens.
You can override the channel for given token types, it looks like this
is primarily there to support the interpreter but you could use this
to put comment tokens back onto the default channel when you want to
process them. Or you could implement a subclass that processed
multiple channels rather than just one.
Though unless comment usage is rather restricted in your language you
probably want to keep them off-channel to avoid having to handle them
in the grammar which in a language where comments are allowed anywhere
would mean having "comment*" between all tokens in your grammar. You
can use CommonTokenStream.getTokens to get all tokens, possibly
restricted by token type, between given token indexes. Or you may want
to subclass CommonTokenStream and have a method to get all tokens on a
given channel between given indexes.

Tom.

> Bjoern
>

From Waverly.Edwards at genesys.com  Tue Aug 28 06:58:43 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Tue, 28 Aug 2007 09:58:43 -0400
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp>

Is there a way to inspect what lexer rules have been matched or inspect
the token buffer?
What I'm trying to do is to setup test(s) to ensure that every keyword
is matched and that no rule conflicts with another.
I have just short of 550 lexical rules just for keywords alone
(originally I thought it was just a couple hundred).
 
I've been reading TDAR and the web, looking for hints as to how this
might be done but to date I haven't found anything.
 
Thank you for your time,
 
 
W.

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edwards, Waverly
Sent: Friday, August 24, 2007 6:45 PM
To: antlr
Subject: [antlr-interest] lexer: display all rules matched





Is there a way to display all rules or tokens matched without making one
big chain and assigning an action to it? 
I have a couple hundred keywords and in experimenting I would like to
output every time a rule/token is matched 
so I can compare it to a text file.  I can then figure out what I'm
missing or what doesn't work. 


Thank you, 


W. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070828/4b61507c/attachment.html 

From matthew.j.diehl at intel.com  Tue Aug 28 07:37:45 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 28 Aug 2007 07:37:45 -0700
Subject: [antlr-interest] Is it safe to overwrite the Lexer's text?
In-Reply-To: <ebc876d70708280623x7a811d3eq81ee574839f9c248@mail.gmail.com>
References: <46D410F3.7060309@tudos.org> <46D4194E.2090606@tudos.org>
	<ebc876d70708280623x7a811d3eq81ee574839f9c248@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2028F6B74@orsmsx417.amr.corp.intel.com>

> I think the current channel handling is something of a work in
> progress. Currently the channel support is rather basic.
> CommonTokenStream only allows a parser to read from one channel and
> there doesn't appear to be any direct way to access off-channel
> tokens.

Yeah, it's not too 'user-friendly' I guess, lol.  This is what I did.  I
stored all of my comments (I needed different things on different
channels) on channel 4.  I sent this function/class my 'input', then:

if (input == null) return;
TokenStream tok = input.getTokenStream();
int n = tok.size();
Token t;
allComments = new HashMap<Integer,String>();//my class private variable
//then you just run through the entire document and store each comment
in the map with it's token number
for (int i = 0; i < n; i++){
  t = (token)tok.get(i);
  if ( t.getChannel()==4)
    allComments.put(I,t.getText());
}

Then once it's all stored the way I would re-associate it with my code
was by the token number.  If I was parsing a particular subtree, I would
collect all of the comments up until the first token of the subtree, and
then print them out before the subtree prints out.  (well, that's an
over-simplified description of how I associate it, but I'm sure you have
some clever ideas.)

Good luck, hope this helped,

Matt

From Waverly.Edwards at genesys.com  Tue Aug 28 08:00:00 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Tue, 28 Aug 2007 11:00:00 -0400
Subject: [antlr-interest] off-topic: OO compilers, books, resources
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04F25@navamane001.ad.internal.corp>


I may have tunnel vision but of all the resources I've seen, I've never
seen anyone describe how to
build an object oriented compiler or closer to what I mean is how to
implement an object oriented
language.  One day relatively soon I would like to try my hand at an OO
one.  Has anyone 
seen any books, sites or other resources that describe how others in the
past have done this?
Not just the language but the how's and why's of what goes on under the
hood.

Thanks,


W.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070828/4b0d1e6d/attachment.html 

From lgcraymer at yahoo.com  Tue Aug 28 08:07:12 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Tue, 28 Aug 2007 08:07:12 -0700 (PDT)
Subject: [antlr-interest] off-topic: OO compilers, books, resources
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04F25@navamane001.ad.internal.corp>
Message-ID: <513452.86295.qm@web55910.mail.re3.yahoo.com>

Timothy Budd's "A Little Smalltalk" is a good start.

--Loring


--- "Edwards, Waverly" <Waverly.Edwards at genesys.com>
wrote:

> 
> I may have tunnel vision but of all the resources
> I've seen, I've never
> seen anyone describe how to
> build an object oriented compiler or closer to what
> I mean is how to
> implement an object oriented
> language.  One day relatively soon I would like to
> try my hand at an OO
> one.  Has anyone 
> seen any books, sites or other resources that
> describe how others in the
> past have done this?
> Not just the language but the how's and why's of
> what goes on under the
> hood.
> 
> Thanks,
> 
> 
> W.
> 
> 



       
____________________________________________________________________________________
Moody friends. Drama queens. Your life? Nope! - their life, your story. Play Sims Stories at Yahoo! Games.
http://sims.yahoo.com/  

From mazzucco at iiasa.ac.at  Tue Aug 28 08:10:19 2007
From: mazzucco at iiasa.ac.at (Rupert Mazzucco)
Date: Tue, 28 Aug 2007 17:10:19 +0200
Subject: [antlr-interest] bug in C target?
Message-ID: <20070828171019.6183e37d.mazzucco@iiasa.ac.at>

Hello,

I'm trying to pass a function pointer to a rule, like so

  grammar foo;
  options { language='C'; }
  file[void (*f)(char,char)]: SYM+;
  SYM: .;

Antlr produces the following garbled declaration in fooParser.h
(similarly in fooParser.c)

  /** \file
   *  This C header file was generated by $ANTLR
   *
   *     -  From the grammar source file : foo.g
  ...
  /** Context tracking structure for fooParser
   */
  typedef struct fooParser_Ctx_struct
  {
      /** Built in ANTLR3 context tracker contains all the generic elements
       *  required for context tracking.
       */
      pANTLR3_PARSER   pParser;

      void (*file)    (struct fooParser_Ctx_struct * ctx, char));    unsigned char * (*getGrammarFileName)();
  /*** PROBLEM HERE:                                      ^^^^^                             ***/
      void        (*free)   (struct fooParser_Ctx_struct * ctx);
  
  }
      fooParser, * pfooParser;

Passing a function pointer seems to work fine if the function takes only one argument,
ie the code for file[void (*f)(char)] looks ok.

Does anybody have an idea how to fix that?  Or am I not supposed to pass function pointers at all?

Regards
-- 
Rupert Mazzucco         <mazzucco at iiasa.ac.at>
Research Scholar, Evolution and Ecology Program
IIASA - Institute for Applied Systems Analysis
Schlossplatz 1, 2361 Laxenburg, Austria
Phone: +43 2236 807 522   Fax: +43 2236 713 13

From tbrandonau at gmail.com  Tue Aug 28 08:17:20 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 29 Aug 2007 01:17:20 +1000
Subject: [antlr-interest] bug in C target?
In-Reply-To: <20070828171019.6183e37d.mazzucco@iiasa.ac.at>
References: <20070828171019.6183e37d.mazzucco@iiasa.ac.at>
Message-ID: <ebc876d70708280817l79772eceoa54b1e1305547cd@mail.gmail.com>

On 8/29/07, Rupert Mazzucco <mazzucco at iiasa.ac.at> wrote:
> Hello,
>
> I'm trying to pass a function pointer to a rule, like so
>
>   grammar foo;
>   options { language='C'; }
>   file[void (*f)(char,char)]: SYM+;
>   SYM: .;
>
> Antlr produces the following garbled declaration in fooParser.h
> (similarly in fooParser.c)
>
>   /** \file
>    *  This C header file was generated by $ANTLR
>    *
>    *     -  From the grammar source file : foo.g
>   ...
>   /** Context tracking structure for fooParser
>    */
>   typedef struct fooParser_Ctx_struct
>   {
>       /** Built in ANTLR3 context tracker contains all the generic elements
>        *  required for context tracking.
>        */
>       pANTLR3_PARSER   pParser;
>
>       void (*file)    (struct fooParser_Ctx_struct * ctx, char));    unsigned char * (*getGrammarFileName)();
>   /*** PROBLEM HERE:                                      ^^^^^                             ***/
>       void        (*free)   (struct fooParser_Ctx_struct * ctx);
>
>   }
>       fooParser, * pfooParser;
>
> Passing a function pointer seems to work fine if the function takes only one argument,
> ie the code for file[void (*f)(char)] looks ok.
>
> Does anybody have an idea how to fix that?  Or am I not supposed to pass function
> pointers at all?
This is a known bug. ANTLR doesn't handle commas in argument action
blocks. It should, hopefully, be dealt with when the grammar used by
ANTLR is converted to a v3 grammar. I don't think you can escape
comma's. In C a workaround would be to use a typedef or define.

Tom.
>
> Regards
> --
> Rupert Mazzucco         <mazzucco at iiasa.ac.at>
> Research Scholar, Evolution and Ecology Program
> IIASA - Institute for Applied Systems Analysis
> Schlossplatz 1, 2361 Laxenburg, Austria
> Phone: +43 2236 807 522   Fax: +43 2236 713 13
>

From mcstrini at fastmail.fm  Tue Aug 28 09:38:21 2007
From: mcstrini at fastmail.fm (Max Strini)
Date: Tue, 28 Aug 2007 09:38:21 -0700
Subject: [antlr-interest] C# runtime source code?
In-Reply-To: <46D3E769.8060502@gmx.de>
References: <1188289164.6520.1207619187@webmail.messagingengine.com>
	<46D3E769.8060502@gmx.de>
Message-ID: <1188319101.27020.1207700939@webmail.messagingengine.com>


On Tue, 28 Aug 2007 11:14:17 +0200, "Johannes Luber" <jaluber at gmx.de>
said:
> Max Strini wrote:
> > The binary DLLs are in runtime\CSharp\ but I can't find any source code
> > for them, not in \lib or \src\org\antlr\runtime (which appears empty). 
> > Am I not seeing something?
> > 
> > Max Strini
> 
> There is no source code available yet. But someone posted a link for a
> disassembled file archive, which I have been using myself. I can't
> remember the link but I can send you the archive myself, if you want.
> 
> Best regards,
> Johannes Luber

Yes, please.  But why is the source not available?  Is there a plan to
make it available soon?

Max Strini
-- 
  Max Strini
  mcstrini at fastmail.fm

-- 
http://www.fastmail.fm - A fast, anti-spam email service.


From jaluber at gmx.de  Tue Aug 28 10:01:39 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 28 Aug 2007 19:01:39 +0200
Subject: [antlr-interest] C# runtime source code?
In-Reply-To: <1188319101.27020.1207700939@webmail.messagingengine.com>
References: <1188289164.6520.1207619187@webmail.messagingengine.com>	<46D3E769.8060502@gmx.de>
	<1188319101.27020.1207700939@webmail.messagingengine.com>
Message-ID: <46D454F3.4020209@gmx.de>

Max Strini wrote:
> Yes, please.  But why is the source not available?  Is there a plan to
> make it available soon?
> 
> Max Strini

Because the authors don't consider the source code good enough for the
public yet. Not sure when that happens.

Best regards,
Johannes Luber

From benjamin.b.lenz at daimlerchrysler.com  Tue Aug 28 10:14:07 2007
From: benjamin.b.lenz at daimlerchrysler.com (benjamin.b.lenz at daimlerchrysler.com)
Date: Tue, 28 Aug 2007 19:14:07 +0200
Subject: [antlr-interest] TreeWalker error(100)
Message-ID: <OF5D33415B.8F9A1236-ONC1257345.005BE8E0-C1257345.005EAD93@dcx.dcx>


Hi guys,

I'm new developing a parser grammar with ANTLR. I have to rewrite some of
the Java1.5 rules to create an AST and build a TreeWalker to visit the
nodes and extract the infos...

During my beginning I tried to start from bottom to top and rewrite more
and more grammar rules. But in a very basic grammar I found the error(100)
and no useful ref on the antlr list.

I want to use the duplicating nodes rule on

qualifiedName
      :     Identifier ('.' Identifier)*
      ;

So I tried

qualifiedName
      :     Identifier ('.' Identifier)* -> ^(Identifier Identifier*)
      ;

This works in the parser grammar but the ANTLR plugin for eclipse gives me
the
error(100): unexpected token: ^(
expecting SEMI, foun


and later on

error(204): duplicate token type '\005f' when collapsing subrule into set

it would be great if anybody could help me what wrong here..

thanks!!

Ben

here the code:

tree grammar Walker;

options{
      tokenVocab = Java;
      ASTLabelType = CommonTree;
}

compilationUnit
      :     packageDeclaration?
      ;

packageDeclaration
      :     'package' qualifiedName ';'
      ;

qualifiedName
      :     Identifier ('.' Identifier)* -> ^(Identifier Identifier*)
      ;

Identifier
    :   Letter (Letter|JavaIDDigit)*
    ;

fragment
Letter
    :  '\u0024' |
       '\u0041'..'\u005a' |
       '\u005f' |
       '\u0061'..'\u007a' |
       '\u00c0'..'\u00d6' |
       '\u00d8'..'\u00f6' |
       '\u00f8'..'\u00ff' |
       '\u0100'..'\u1fff' |
       '\u3040'..'\u318f' |
       '\u3300'..'\u337f' |
       '\u3400'..'\u3d2d' |
       '\u4e00'..'\u9fff' |
       '\uf900'..'\ufaff'
    ;

fragment
JavaIDDigit
    :  '\u0030'..'\u0039' |
       '\u0660'..'\u0669' |
       '\u06f0'..'\u06f9' |
       '\u0966'..'\u096f' |
       '\u09e6'..'\u09ef' |
       '\u0a66'..'\u0a6f' |
       '\u0ae6'..'\u0aef' |
       '\u0b66'..'\u0b6f' |
       '\u0be7'..'\u0bef' |
       '\u0c66'..'\u0c6f' |
       '\u0ce6'..'\u0cef' |
       '\u0d66'..'\u0d6f' |
       '\u0e50'..'\u0e59' |
       '\u0ed0'..'\u0ed9' |
       '\u1040'..'\u1049'
   ;




If you are not the intended addressee, please inform us immediately that you have received this e-mail by mistake and delete it. We thank you for your support.

From mcstrini at fastmail.fm  Tue Aug 28 10:32:45 2007
From: mcstrini at fastmail.fm (Max Strini)
Date: Tue, 28 Aug 2007 10:32:45 -0700
Subject: [antlr-interest] C# runtime source code?
In-Reply-To: <46D454F3.4020209@gmx.de>
References: <1188289164.6520.1207619187@webmail.messagingengine.com>
	<46D3E769.8060502@gmx.de>
	<1188319101.27020.1207700939@webmail.messagingengine.com>
	<46D454F3.4020209@gmx.de>
Message-ID: <1188322365.4454.1207710509@webmail.messagingengine.com>


On Tue, 28 Aug 2007 19:01:39 +0200, "Johannes Luber" <jaluber at gmx.de>
said:
> Max Strini wrote:
> > Yes, please.  But why is the source not available?  Is there a plan to
> > make it available soon?
> > 
> > Max Strini
> 
> Because the authors don't consider the source code good enough for the
> public yet. Not sure when that happens.
> 
> Best regards,
> Johannes Luber

Hmm... but if there are problems with the source code, I as a member of
"the public" would like to see what they are!  (and maybe help fix them
myself.)

Max Strini
-- 
  Max Strini
  mcstrini at fastmail.fm

-- 
http://www.fastmail.fm - Same, same, but different



From jaluber at gmx.de  Tue Aug 28 10:38:41 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 28 Aug 2007 19:38:41 +0200
Subject: [antlr-interest] C# runtime source code?
In-Reply-To: <1188322365.4454.1207710509@webmail.messagingengine.com>
References: <1188289164.6520.1207619187@webmail.messagingengine.com>	<46D3E769.8060502@gmx.de>	<1188319101.27020.1207700939@webmail.messagingengine.com>	<46D454F3.4020209@gmx.de>
	<1188322365.4454.1207710509@webmail.messagingengine.com>
Message-ID: <46D45DA1.2070403@gmx.de>

Max Strini wrote:
> Hmm... but if there are problems with the source code, I as a member of
> "the public" would like to see what they are!  (and maybe help fix them
> myself.)
> 
> Max Strini

True. Search for my email "C# target problems and suggestions" with
still unfixed problems...

Best regards,
Johannes Luber

From jimi at temporal-wave.com  Tue Aug 28 11:30:00 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 28 Aug 2007 11:30:00 -0700
Subject: [antlr-interest] bug in C target?
In-Reply-To: <20070828171019.6183e37d.mazzucco@iiasa.ac.at>
References: <20070828171019.6183e37d.mazzucco@iiasa.ac.at>
Message-ID: <051466DAA0D608439E196797955018D7023663@wavemachine.temporal-wave.com>

It is to do with the way parameters are parsed in the .g source file. You can probably create typedef for the function pointer and use that though. Or you could create a struct that contains the function pointers you need and so on, which is how the runtime works. However, you may find it better to not pass around function pointers.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Rupert Mazzucco
> Sent: Tuesday, August 28, 2007 8:10 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] bug in C target?
> 
> Hello,
> 
> I'm trying to pass a function pointer to a rule, like so
> 
>   grammar foo;
>   options { language='C'; }
>   file[void (*f)(char,char)]: SYM+;
>   SYM: .;
> 
> Antlr produces the following garbled declaration in fooParser.h
> (similarly in fooParser.c)
> 
>   /** \file
>    *  This C header file was generated by $ANTLR
>    *
>    *     -  From the grammar source file : foo.g
>   ...
>   /** Context tracking structure for fooParser
>    */
>   typedef struct fooParser_Ctx_struct
>   {
>       /** Built in ANTLR3 context tracker contains all the generic
> elements
>        *  required for context tracking.
>        */
>       pANTLR3_PARSER   pParser;
> 
>       void (*file)    (struct fooParser_Ctx_struct * ctx, char));
> unsigned char * (*getGrammarFileName)();
>   /*** PROBLEM HERE:                                      ^^^^^
> ***/
>       void        (*free)   (struct fooParser_Ctx_struct * ctx);
> 
>   }
>       fooParser, * pfooParser;
> 
> Passing a function pointer seems to work fine if the function takes
> only one argument,
> ie the code for file[void (*f)(char)] looks ok.
> 
> Does anybody have an idea how to fix that?  Or am I not supposed to
> pass function pointers at all?
> 
> Regards
> --
> Rupert Mazzucco         <mazzucco at iiasa.ac.at>
> Research Scholar, Evolution and Ecology Program
> IIASA - Institute for Applied Systems Analysis
> Schlossplatz 1, 2361 Laxenburg, Austria
> Phone: +43 2236 807 522   Fax: +43 2236 713 13
> 
> No virus found in this incoming message.
> Checked by AVG Free Edition.
> Version: 7.5.484 / Virus Database: 269.12.10/976 - Release Date:
> 8/27/2007 6:20 PM
> 

No virus found in this outgoing message.
Checked by AVG Free Edition. 
Version: 7.5.484 / Virus Database: 269.12.10/976 - Release Date: 8/27/2007 6:20 PM
 

From antlr at mirality.co.nz  Tue Aug 28 13:13:08 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Aug 2007 08:13:08 +1200
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.inte
	rnal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp>
Message-ID: <20070828201322.B21CD11EAD8@www.antlr.org>

At 01:58 29/08/2007, Edwards, Waverly wrote:
>Is there a way to inspect what lexer rules have been matched or 
>inspect the token buffer?
>What I'm trying to do is to setup test(s) to ensure that every 
>keyword is matched and that no rule conflicts with another.
>I have just short of 550 lexical rules just for keywords alone 
>(originally I thought it was just a couple hundred).

For the purposes of tests, just create an instance of the lexer 
and ask it for all the tokens.  (Exactly how you do this depends 
on your target language.)

There's no need to create a parser if all you want to do is to 
validate the output of the lexer against a "known good" or 
"expected" list. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/c8362286/attachment.html 

From Waverly.Edwards at genesys.com  Tue Aug 28 13:32:40 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Tue, 28 Aug 2007 16:32:40 -0400
Subject: [antlr-interest] off-topic: OO compilers, books, resources
In-Reply-To: <513452.86295.qm@web55910.mail.re3.yahoo.com>
References: <FF993752CB890B4EB591BE5450C37BF1B04F25@navamane001.ad.internal.corp>
	<513452.86295.qm@web55910.mail.re3.yahoo.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B04FF8@navamane001.ad.internal.corp>

 
I will look into it.

Thank you,


W.

-----Original Message-----
From: Loring Craymer [mailto:lgcraymer at yahoo.com] 
Sent: Tuesday, August 28, 2007 11:07 AM
To: Edwards, Waverly; antlr
Subject: Re: [antlr-interest] off-topic: OO compilers, books, resources

Timothy Budd's "A Little Smalltalk" is a good start.

--Loring


--- "Edwards, Waverly" <Waverly.Edwards at genesys.com>
wrote:

> 
> I may have tunnel vision but of all the resources I've seen, I've 
> never seen anyone describe how to build an object oriented compiler or

> closer to what I mean is how to implement an object oriented language.

> One day relatively soon I would like to try my hand at an OO one.  Has

> anyone seen any books, sites or other resources that describe how 
> others in the past have done this?
> Not just the language but the how's and why's of what goes on under 
> the hood.
> 
> Thanks,
> 
> 
> W.
> 
> 



       
________________________________________________________________________
____________
Moody friends. Drama queens. Your life? Nope! - their life, your story.
Play Sims Stories at Yahoo! Games.
http://sims.yahoo.com/  

From Waverly.Edwards at genesys.com  Tue Aug 28 13:52:10 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Tue, 28 Aug 2007 16:52:10 -0400
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <20070828201322.B21CD11EAD8@www.antlr.org>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp><FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp>
	<20070828201322.B21CD11EAD8@www.antlr.org>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B05008@navamane001.ad.internal.corp>

>>For the purposes of tests, just create an instance of the lexer and
ask it for all the tokens.
 
I'll have to more homework as I haven't seen an example of how this is
done.  The only way I've seen this done
is by chaining together parser or lexical rules and setting an action to
it.  I have two problems with this.
1.  The starting rule appears to be the type that gets returned when you
chain rules. 
2.  There isn't a way to determine which lexical rule is being used to
match the text.
 
I was especially troubled when I began to think that rule PERSON :
'person'; and rule ID could return the text
'person' and I wouldn't know which one was used or if some other
substring was matched such as
 
PER : 'per';
SON : 'son';
PERSON : 'person';
 
This brings me to another question.  Is the order the rules are created
significant to the matching.  Using the
example above in order to match 'person' would I need to order the rules
this way
 
PERSON : 'person';
PER : 'per';
SON : 'son';
 
These are hypothetical examples used to explain what I'm dealing with
and learn how to move forward.
 
 
Thanks,
 
 
W.

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Tuesday, August 28, 2007 4:13 PM
To: Edwards, Waverly; antlr
Subject: Re: [antlr-interest] lexer: display all rules matched


At 01:58 29/08/2007, Edwards, Waverly wrote:


	Is there a way to inspect what lexer rules have been matched or
inspect the token buffer?
	What I'm trying to do is to setup test(s) to ensure that every
keyword is matched and that no rule conflicts with another.
	I have just short of 550 lexical rules just for keywords alone
(originally I thought it was just a couple hundred).


For the purposes of tests, just create an instance of the lexer and ask
it for all the tokens.  (Exactly how you do this depends on your target
language.)

There's no need to create a parser if all you want to do is to validate
the output of the lexer against a "known good" or "expected" list. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070828/db93b2cc/attachment.html 

From antlr at mirality.co.nz  Tue Aug 28 14:28:28 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Aug 2007 09:28:28 +1200
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B05008@navamane001.ad.inte
	rnal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp>
	<FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp>
	<20070828201322.B21CD11EAD8@www.antlr.org>
	<FF993752CB890B4EB591BE5450C37BF1B05008@navamane001.ad.internal.corp>
Message-ID: <20070828212933.DA5AB11EAD8@www.antlr.org>

At 08:52 29/08/2007, Edwards, Waverly wrote:
> >>For the purposes of tests, just create an instance of the 
> lexer and ask it for all the tokens.
>
>I'll have to more homework as I haven't seen an example of how 
>this is done.  The only way I've seen this done
>is by chaining together parser or lexical rules and setting an 
>action to it.  I have two problems with this.
>1.  The starting rule appears to be the type that gets returned 
>when you chain rules.
>2.  There isn't a way to determine which lexical rule is being 
>used to match the text.

No, no parser at all.  You know the code snippet you put in your 
main routine to create a lexer and parser, then call the 
entrypoint of your parser?  Leave out the bit that creates the 
parser and calls its entrypoint, and replace it with some code 
that reads from the lexer (or lexer's token stream) directly. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/e3e55c2d/attachment.html 

From ayende at ayende.com  Tue Aug 28 14:51:49 2007
From: ayende at ayende.com (Ayende Rahien)
Date: Tue, 28 Aug 2007 23:51:49 +0200
Subject: [antlr-interest] Keywords as identifiers in ANTLR 3.0
Message-ID: <27d8d0930708281451w29ce4cd3i5af933b3e8032a11@mail.gmail.com>

I know that the question was raised before, and I checked to wiki for the
explanation on it, but I can't seem to follow the solutions there and can't
get it to work.
Here is my sample grammar:

grammar Test;
options{
    language=CSharp;
    output=AST;
    backtrack=true;
}

program: stat+;

stat:
    ( identifierClause | orderByClause) ';';

identifierClause
    : IDENTIFIER AS? IDENTIFIER ;

orderByClause
    :
    ORDER_BY IDENTIFIER
    ;

// Multi word keywords
ORDER_BY    :    ORDER WS+ BY;
GROUP_BY    :    GROUP WS+ BY;

IDENTIFIER
    : ID_LETTER+
    ;

fragment
AS :    'as';
fragment
ORDER    : 'order';
fragment
GROUP    : 'group';
fragment
BY        : 'by';

// White space
WS : ( ' ' | '\t' | '\n'  | '\r' )+
     { $channel=HIDDEN; }
   ;

fragment
ID_LETTER     :
        'a'..'z' |   'A'..'Z' |    '_';


And my test inputs are:

   - "order by order"
   - "order order"
   - "order as order"
   - "order as o"
   - "order by o"

The test program is:

static void Main(string[] args)
{
    try
    {
        ANTLRStringStream stream = new ANTLRStringStream("order as o");
        TestLexer l = new TestLexer(stream);
        CommonTokenStream cts = new CommonTokenStream(l);
        TestParser p = new TestParser(cts);
        TestParser.program_return program = p.program();
        Console.WriteLine(program.Tree.ToString());
    }
    catch (Exception e)
    {
        System.Console.WriteLine(e);
    }
}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070828/8e81e7c5/attachment.html 

From Waverly.Edwards at genesys.com  Tue Aug 28 15:32:04 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Tue, 28 Aug 2007 18:32:04 -0400
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <20070828212933.DA5AB11EAD8@www.antlr.org>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp><FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp><20070828201322.B21CD11EAD8@www.antlr.org><FF993752CB890B4EB591BE5450C37BF1B05008@navamane001.ad.internal.corp>
	<20070828212933.DA5AB11EAD8@www.antlr.org>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B05042@navamane001.ad.internal.corp>

I will look into it.
 
Thanks,
 
 
W.

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Tuesday, August 28, 2007 5:28 PM
To: Edwards, Waverly; antlr
Subject: Re: [antlr-interest] lexer: display all rules matched


At 08:52 29/08/2007, Edwards, Waverly wrote:


	>> For the purposes of tests, just create an instance of the
lexer and ask it for all the tokens.
	 
	I'll have to more homework as I haven't seen an example of how
this is done.  The only way I've seen this done
	is by chaining together parser or lexical rules and setting an
action to it.  I have two problems with this.
	1.  The starting rule appears to be the type that gets returned
when you chain rules. 
	2.  There isn't a way to determine which lexical rule is being
used to match the text.


No, no parser at all.  You know the code snippet you put in your main
routine to create a lexer and parser, then call the entrypoint of your
parser?  Leave out the bit that creates the parser and calls its
entrypoint, and replace it with some code that reads from the lexer (or
lexer's token stream) directly. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070828/f7d81273/attachment-0001.html 

From warnero at gmail.com  Tue Aug 28 16:28:55 2007
From: warnero at gmail.com (Warner Onstine)
Date: Tue, 28 Aug 2007 16:28:55 -0700
Subject: [antlr-interest] dealing with an optional token and StringTemplates
Message-ID: <d76a9c0d0708281628q1b8718eau9c596e89829f8b16@mail.gmail.com>

Ok, I've managed to get around some of my issues but I am now running
into one that I can't find an example to base it off of for ST use.

I have this rule:
selectStatement
	:	'Select' '(' ')' block? -> select_statement(block={$block.st})
	;

But when my Select() is not followed by a code block I get a
null-pointer exception when it tries to load this in my parser:
                retval.st = templateLib.getInstanceOf("select_statement",
              new STAttrMap().put("block", block11.st));

Which makes sense, I'm just trying to figure out how to call two
different ST calls (one for select_statement which has a  block and
one for when it doesn't). Or is there a better way to do this?

-warner

-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From parrt at cs.usfca.edu  Tue Aug 28 17:54:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 28 Aug 2007 17:54:15 -0700
Subject: [antlr-interest] dealing with an optional token and
	StringTemplates
In-Reply-To: <d76a9c0d0708281628q1b8718eau9c596e89829f8b16@mail.gmail.com>
References: <d76a9c0d0708281628q1b8718eau9c596e89829f8b16@mail.gmail.com>
Message-ID: <E7E85741-AD1A-45D4-828C-F2EA6A94CB75@cs.usfca.edu>

I have updated 3.1 (next version) to do this automatically, but a few  
days ago you'll see in the archives that you need $blocks!=null? 
$block.st:null as the arg.
Ter
On Aug 28, 2007, at 4:28 PM, Warner Onstine wrote:

> Ok, I've managed to get around some of my issues but I am now running
> into one that I can't find an example to base it off of for ST use.
>
> I have this rule:
> selectStatement
> 	:	'Select' '(' ')' block? -> select_statement(block={$block.st})
> 	;
>
> But when my Select() is not followed by a code block I get a
> null-pointer exception when it tries to load this in my parser:
>                 retval.st = templateLib.getInstanceOf 
> ("select_statement",
>               new STAttrMap().put("block", block11.st));
>
> Which makes sense, I'm just trying to figure out how to call two
> different ST calls (one for select_statement which has a  block and
> one for when it doesn't). Or is there a better way to do this?
>
> -warner
>
> -- 
> Warner Onstine - Programmer/Author
> New book on Tapestry 4!
> Tapestry 101 available at
> http://sourcebeat.com/books/tapestrylive.html
> warner at warneronstine.com
> http://warneronstine.com/blog


From warnero at gmail.com  Tue Aug 28 17:59:49 2007
From: warnero at gmail.com (Warner Onstine)
Date: Tue, 28 Aug 2007 17:59:49 -0700
Subject: [antlr-interest] dealing with an optional token and
	StringTemplates
In-Reply-To: <E7E85741-AD1A-45D4-828C-F2EA6A94CB75@cs.usfca.edu>
References: <d76a9c0d0708281628q1b8718eau9c596e89829f8b16@mail.gmail.com>
	<E7E85741-AD1A-45D4-828C-F2EA6A94CB75@cs.usfca.edu>
Message-ID: <d76a9c0d0708281759g2e5291afo8ef73d911b742b2a@mail.gmail.com>

Awesome, thanks!

-warner

On 8/28/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> I have updated 3.1 (next version) to do this automatically, but a few
> days ago you'll see in the archives that you need $blocks!=null?
> $block.st:null as the arg.
> Ter
> On Aug 28, 2007, at 4:28 PM, Warner Onstine wrote:
>
> > Ok, I've managed to get around some of my issues but I am now running
> > into one that I can't find an example to base it off of for ST use.
> >
> > I have this rule:
> > selectStatement
> >       :       'Select' '(' ')' block? -> select_statement(block={$block.st})
> >       ;
> >
> > But when my Select() is not followed by a code block I get a
> > null-pointer exception when it tries to load this in my parser:
> >                 retval.st = templateLib.getInstanceOf
> > ("select_statement",
> >               new STAttrMap().put("block", block11.st));
> >
> > Which makes sense, I'm just trying to figure out how to call two
> > different ST calls (one for select_statement which has a  block and
> > one for when it doesn't). Or is there a better way to do this?
> >
> > -warner
> >
> > --
> > Warner Onstine - Programmer/Author
> > New book on Tapestry 4!
> > Tapestry 101 available at
> > http://sourcebeat.com/books/tapestrylive.html
> > warner at warneronstine.com
> > http://warneronstine.com/blog
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From bernied at gmail.com  Tue Aug 28 18:17:01 2007
From: bernied at gmail.com (Bernhard Damberger)
Date: Tue, 28 Aug 2007 18:17:01 -0700
Subject: [antlr-interest] v3 java.tree.g?
Message-ID: <aff5e35a0708281817m7454c0ebr8416fdb3e80271dd@mail.gmail.com>

Is anyone working on a v3 tree grammar for Java 1.5 that matches up with the
v3 Java 1.5 grammar Terrance posted a while back? (I guess this would
include mods to the original grammar.)

I start, and then I stop, then I start...

Does Terrance have an ETA for when/if that will occur?

Thanks,

_bernhard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070828/5bc34b34/attachment.html 

From laguest at archangeli.co.uk  Wed Aug 29 01:29:17 2007
From: laguest at archangeli.co.uk (Luke A. Guest)
Date: Wed, 29 Aug 2007 09:29:17 +0100
Subject: [antlr-interest] off-topic: OO compilers, books, resources
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B04F25@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04F25@navamane001.ad.internal.corp>
Message-ID: <1188376157.6390.2.camel@rogue>

On Tue, 2007-08-28 at 11:00 -0400, Edwards, Waverly wrote:
> 
> I may have tunnel vision but of all the resources I've seen, I've
> never seen anyone describe how to 
> build an object oriented compiler or closer to what I mean is how to
> implement an object oriented 
> language.  One day relatively soon I would like to try my hand at an
> OO one.  Has anyone 
> seen any books, sites or other resources that describe how others in
> the past have done this? 
> Not just the language but the how's and why's of what goes on under
> the hood.

Andrew Appel's Tiger books cover OO and functional languages.

Luke.



From Waverly.Edwards at genesys.com  Wed Aug 29 01:57:06 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Wed, 29 Aug 2007 04:57:06 -0400
Subject: [antlr-interest] off-topic: OO compilers, books, resources
In-Reply-To: <1188376157.6390.2.camel@rogue>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B05054@navamane001.ad.internal.corp>

I completely forgot about Appel.


Thanks,


W. 

-----Original Message-----
From: Luke A. Guest [mailto:laguest at archangeli.co.uk] 
Sent: Wednesday, August 29, 2007 4:29 AM
To: Edwards, Waverly
Cc: antlr
Subject: Re: [antlr-interest] off-topic: OO compilers, books, resources

On Tue, 2007-08-28 at 11:00 -0400, Edwards, Waverly wrote:
> 
> I may have tunnel vision but of all the resources I've seen, I've 
> never seen anyone describe how to build an object oriented compiler or

> closer to what I mean is how to implement an object oriented language.

> One day relatively soon I would like to try my hand at an OO one.  Has

> anyone seen any books, sites or other resources that describe how 
> others in the past have done this?
> Not just the language but the how's and why's of what goes on under 
> the hood.

Andrew Appel's Tiger books cover OO and functional languages.

Luke.



From nightwolf at email.it  Wed Aug 29 03:40:55 2007
From: nightwolf at email.it (Mauro Pellicioli)
Date: Wed, 29 Aug 2007 12:40:55 +0200
Subject: [antlr-interest] Simple lexer grammar doesn't match '\''
Message-ID: <a57d0e53ab793c62c1ddb832e33d4c04@87.15.80.206>

Hi, I have this simple grammar (it isn't necessary that you read the entire
grammar, the problem should be only at one point)


lexer grammar BookingList;

options {
	filter=true;
}

@lexer::header {
package grammatiche;
}

@lexer::members {
String str;
}


TABLE_RESULTS: '<table class="hotellist" cellspacing="0">' (WS|TR)+
'</table>';

fragment
TR: '<tr>' WS+ FIRST_TD WS+ SEC_TD WS+ '</tr>';

fragment
FIRST_TD: '<td>' WS+ '<a class="hotel"' (options {greedy=false;} : .)*
'</a>' WS+ '</td>';

fragment
SEC_TD: '<td>' (options {greedy=false;} : .)* '<h3>' WS+ LINK (options
{greedy=false;} : .)* '</h3>' WS+ ADDR WS+ DESCRIPTION WS+ '</td>';

fragment
ADDR:'<p class="address">' STRING {str=$STRING.text;} (STRONG WS '(')?
{System.out.println("Address: "+str+"\n"); LINK_GEN  ')</p>';

fragment       
STRONG:	'<strong>' STRING {str+=$STRING.text;} '</strong>';

fragment
DESCRIPTION: '<p>' (options {greedy=false;} : .)* '</p>';

fragment
LINK:'<a href="' STRING_LINK {System.out.println("Link:
"+$STRING_LINK.text); '">' STRING {System.out.println("Hotel:
"+$STRING.text);} '</a>';

fragment
LINK_GEN: '<a href='(options {greedy=false;} : .)* '</a>'; 

fragment
DIV_REVIEW: '<div class="reviewFloater">' (options {greedy=false;} : .)*
'</div>';
	
fragment
STRING: ( ('\u0020'..'\u003B') | '\u003D' | ('\u003F'..'\u007E')
|('\u0080'..'\u017F') )+;

fragment
STRING_LINK:	('a'..'z'|'A'..'Z'|'0'..'9'|'/'|'.'|'?'|'='|'_'|'%'|';'|'-')+;

fragment
INT:  ('0'..'9')+;

WS : ' ' | '\r' | '\n' |'\t' ;


And focus on this lexer rule:

fragment
LINK:'<a href="' STRING_LINK {System.out.println("Link:
"+$STRING_LINK.text);} '">' STRING {System.out.println("Hotel:
"+$STRING.text);} '</a>';

which gives a wrong output when it encounters this input:

<a
href="/hotel/us/enfant-plaza.html?sid=b02d5b4438247c402f4a43539dfc9d8c">L?Enfant
Plaza Hotel</a>

Output:

Link:
/hotel/us/enfant-plaza.html?label=short-index.htmlerrorc_search_in_invalid%3Dsi;sid=1892815e8db2e96caca618e2377948d8
Hotel: L

Instead of:

Link:/hotel/us/enfant-plaza.html?sid=b02d5b4438247c402f4a43539dfc9d8c
Hotel:L?Enfant Plaza Hotel 
Address:480 L'Enfant Plaza, SW, Washington (Washington DC) 


It seems that STRING rule fails when it encounters a ' char (hex value
0x27), but STRING has the correct range of chars.

The entire page on which I run the code is:
http://www.booking.com/searchresults.html?sid=b02d5b4438247c402f4a43539dfc9d8c;checkin_monthday=29;checkin_year_month=2007-8;checkout_monthday=30;checkout_year_month=2007-8;class_interval=1;offset=0;si=ai%2Cco%2Cci%2Cre;ss_all=0;city=20056368;radius=24

Thanks for help,
regards

PS I wanted to thank Johannes and Gavin for their help in a previous post
but I didn't want to flood the mailing list every time with new posts, how
do I reply?:-) 
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 250 biglietti da visita Gratis + 42 modelli e Etichette per Indirizzo
Gratis + Porta biglietti Gratis -Offerta limitata!
 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=6785&d=20070829



From mazzucco at iiasa.ac.at  Wed Aug 29 03:42:09 2007
From: mazzucco at iiasa.ac.at (Rupert Mazzucco)
Date: Wed, 29 Aug 2007 12:42:09 +0200
Subject: [antlr-interest] antlrworks update?
In-Reply-To: <mailman.0.1188313008.9929.antlr-interest@antlr.org>
References: <mailman.0.1188313008.9929.antlr-interest@antlr.org>
Message-ID: <20070829124209.7a7a6ac7.mazzucco@iiasa.ac.at>

Hello,

are there plans to release an updated version with antlr 3.0.1?

Regards
-- 
Rupert Mazzucco         <mazzucco at iiasa.ac.at>
Research Scholar, Evolution and Ecology Program
IIASA - Institute for Applied Systems Analysis
Schlossplatz 1, 2361 Laxenburg, Austria
Phone: +43 2236 807 522   Fax: +43 2236 713 13

From antlr at mirality.co.nz  Wed Aug 29 04:43:13 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 29 Aug 2007 23:43:13 +1200
Subject: [antlr-interest] Simple lexer grammar doesn't match '\''
In-Reply-To: <a57d0e53ab793c62c1ddb832e33d4c04@87.15.80.206>
References: <a57d0e53ab793c62c1ddb832e33d4c04@87.15.80.206>
Message-ID: <20070829114319.92E5011EB5C@www.antlr.org>

At 22:40 29/08/2007, Mauro Pellicioli wrote:
 >fragment
 >LINK:'<a href="' STRING_LINK {System.out.println("Link:
 >"+$STRING_LINK.text); '">' STRING {System.out.println("Hotel:
 >"+$STRING.text);} '</a>';
[...]
 >fragment
 >STRING: ( ('\u0020'..'\u003B') | '\u003D' | ('\u003F'..'\u007E')
 >|('\u0080'..'\u017F') )+;
[...]
 ><a
 >href="/hotel/us/enfant-plaza.html?sid=b02d5b4438247c402f4a43539dfc9
 >d8c">L'Enfant
 >Plaza Hotel</a>
 >
 >Output:
 >
 >Link:
 >/hotel/us/enfant-plaza.html?label=short-index.htmlerrorc_search_in_
 >invalid%3Dsi;sid=1892815e8db2e96caca618e2377948d8
 >Hotel: L
 >
 >Instead of:
 >
 >Link:/hotel/us/enfant-plaza.html?sid=b02d5b4438247c402f4a43539dfc9d
 >8c
 >Hotel:L'Enfant Plaza Hotel
 >Address:480 L'Enfant Plaza, SW, Washington (Washington DC)
 >
 >
 >It seems that STRING rule fails when it encounters a ' char (hex 

 >value 0x27), but STRING has the correct range of chars.

Are you certain that it's a ' character (0x27) and not a ' 
character (0x2019)?  Because it definitely looks like the latter 
one in your email message....

(Given 0x2019 is also 0x92 in the standard 1252 codepage, it's not 
that uncommon to see it in the wild.  You should probably be 
accepting it too.)


From nightwolf at email.it  Wed Aug 29 05:07:44 2007
From: nightwolf at email.it (Mauro Pellicioli)
Date: Wed, 29 Aug 2007 14:07:44 +0200
Subject: [antlr-interest] Simple lexer grammar doesn't match '''
Message-ID: <1e5d018e730d40ac1047688d0d51a586@87.5.83.210>

Great!It works, I only modified STRING rule adding 'u2019'.

Thanks a lot,
Regards	

--------- Original Message --------
	Da: Gavin Lambert <antlr at mirality.co.nz>
	To: antlr-interest at antlr.org <antlr-interest at antlr.org>
	Oggetto: Re: [antlr-interest] Simple lexer grammar doesn't match '''
	Data: 29/08/07 13:43
	
	> 
> 
> 
> At 22:40 29/08/2007, Mauro Pellicioli wrote:
>  >fragment
>  >LINK:'<a href="' STRING_LINK {System.out.println("Link:
>  >"+$STRING_LINK.text); '">' STRING {System.out.println("Hotel:
>  >"+$STRING.text);} '</a>';
> [...]
>  >fragment
>  >STRING: ( ('u0020'..'u003B') | 'u003D' | ('u003F'..'u007E')
>  >|('u0080'..'u017F') )+;
> [...]
>  ><a
>  >href="/hotel/us/enfant-plaza.html?sid=b02d5b4438247c402f4a43539dfc9
>  >d8c">L'Enfant
>  >Plaza Hotel</a>
>  >
>  >Output:
>  >
>  >Link:
>  >/hotel/us/enfant-plaza.html?label=short-index.htmlerrorc_search_in_
>  >invalid%3Dsi;sid=1892815e8db2e96caca618e2377948d8
>  >Hotel: L
>  >
>  >Instead of:
>  >
>  >Link:/hotel/us/enfant-plaza.html?sid=b02d5b4438247c402f4a43539dfc9d
>  >8c
>  >Hotel:L'Enfant Plaza Hotel
>  >Address:480 L'Enfant Plaza, SW, Washington (Washington DC)
>  >
>  >
>  >It seems that STRING rule fails when it encounters a ' char (hex 
> 
>  >value 0x27), but STRING has the correct range of chars.
> 
> Are you certain that it's a ' character (0x27) and not a ' 
> character (0x2019)?  Because it definitely looks like the latter 
> one in your email message....
> 
> (Given 0x2019 is also 0x92 in the standard 1252 codepage, it's not 
> that uncommon to see it in the wild.  You should probably be 
> accepting it too.)
> 
> 
> 
>  
 --
 Email.it, the professional e-mail, gratis per te: http://www.email.it/f
 
 Sponsor:
 Prestiti personali fino a 30.000 Euro. Clicca qui per un preventivo
immediato, richiedi subito l?importo e la rata che desideri!
 Clicca qui: http://adv.email.it/cgi-bin/foclick.cgi?mid=6917&d=20070829



From antlr at mirality.co.nz  Wed Aug 29 05:28:01 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 30 Aug 2007 00:28:01 +1200
Subject: [antlr-interest] Keywords as identifiers in ANTLR 3.0
Message-ID: <20070829122846.E804911EB5A@www.antlr.org>

At 09:51 29/08/2007, Ayende Rahien wrote:
>I know that the question was raised before, and I checked to wiki 
>for the explanation on it, but I can't seem to follow the 
>solutions there and can't get it to work.
[...]
>// Multi word keywords
>ORDER_BY    :    ORDER WS+ BY;
>GROUP_BY    :    GROUP WS+ BY;
>
>IDENTIFIER
>     : ID_LETTER+
>     ;
>
>fragment
>AS :    'as';
>fragment
>ORDER    : 'order';
>fragment
>GROUP    : 'group';
>fragment
>BY        : 'by';

ANTLR currently can't "see" other lexer tokens when it's making 
predictions about which lexer rule to pick (actually that's not 
quite right, but it's hard to explain).  Since your ORDER_BY rule 
is public and your ORDER rule is a fragment, when faced with the 
input "order by order", ANTLR will correctly decide the first bit 
is an ORDER_BY, then see the next bit starting out as "order" 
again and start trying to generate another ORDER_BY, finally 
throwing an exception when it can't find the "by".

The workaround for this is a bit ugly, but it's fairly 
straightforward once you get your head around it.  Basically where 
there's a "common stem" ambiguity in the grammar you need to merge 
rules together and provide type-change alternatives for the 
failure cases.  In this case:

ORDER_BY : ORDER
            (  (WS+ BY) => WS+ BY
            |  /*nothing*/ { $type = IDENTIFIER; }
            );

In other words: match 'order' first.  Then look ahead to see if 
the next bit is whitespace followed by 'by' -- if so, then the 
rule matches and becomes an ORDER_BY token.  Otherwise we take the 
alternate path, and return the 'order' we already matched (and 
nothing else) as an IDENTIFIER instead.

(There are other alternatives; another common approach would be to 
ditch the ORDER_BY rule entirely and put some extra code in 
IDENTIFIER that recognises if the id it just matched looked like a 
keyword, and then change the type accordingly.)

Note that both of these will only help you in cases where the 
keywords are lexically distinct from identifiers in a context free 
manner -- which is the case here, since "order by" is a keyword, 
but both "order" and "by" alone are merely identifiers.  If you 
had a case where eg. "select" could be a statement in one context 
and an identifier in a different context, then you have to do some 
more work.  Again, there are a couple of different approaches 
here; the one I prefer is just to make the parser accept both 
IDENTIFIER and SELECT tokens as an 'identifier'.


From alexandre.hamez at lip6.fr  Wed Aug 29 05:30:11 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Wed, 29 Aug 2007 14:30:11 +0200
Subject: [antlr-interest] Throwing a exception in a rule
Message-ID: <06DBDA45-623E-4E1B-B5FE-2C74562E61D4@lip6.fr>

Hi everybody,

	I try to declare a rule that throws an exception, but when I look at  
the generated code, the corresponding method doesn't throws this  
exception. The code is the following:

> check_version
> 	returns [AuthenticationAck message]
> 	throws VersionFailure
> 	:
> 	  ack_open_connection
> 	  {
> 	  	message = new AuthenticationAck();
> 	  }
> 	| close_connection_panic
> 	  {
> 	  	throw new VersionFailure($close_connection_panic.s);
> 	  }
> 	;

It is clearly stated in the doc that a rule is written like this:

	access-modifier rule-name[?arguments?] returns [?return-values?]  
throws name1, name2, ...

So, am I missing something?

Thanks for your advices!

------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/08a33438/attachment.bin 

From antlr at mirality.co.nz  Wed Aug 29 05:37:17 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 30 Aug 2007 00:37:17 +1200
Subject: [antlr-interest] Keywords as identifiers in ANTLR 3.0
In-Reply-To: <27d8d0930708290520y2a3ef661o5eaf524bb62b2c3a@mail.gmail.co
 m>
References: <27d8d0930708281451w29ce4cd3i5af933b3e8032a11@mail.gmail.com>
	<46d55fbe.23ab420a.7ec0.3ce8SMTPIN_ADDED@mx.google.com>
	<27d8d0930708290520y2a3ef661o5eaf524bb62b2c3a@mail.gmail.com>
Message-ID: <20070829123739.2687A11EB6D@www.antlr.org>

At 00:20 30/08/2007, Ayende Rahien wrote:
>Thanks for the help. I do have the need to handle select (and 
>other SQL elements).
>How can I handle that?

I answered that one in the last paragraph :)  The way I prefer is 
to do something like this:

1. Create a new parser rule 'identifier' that accepts IDENTIFIER 
as well as any of the (non-fragment) keyword tokens that can also 
potentially be identifiers when used out-of-context.
2. Change any existing parser rules to use 'identifier' instead of 
'IDENTIFIER'.

Incidentally, a different approach you might want to take for the 
original "order by" issue is to convert ORDER_BY into a parser 
rule and make both ORDER and BY non-fragment rules.  That way you 
don't need to worry about the whitespace any more (it will have 
already been removed by that stage), and (combined with the above) 
makes it a bit easier to treat every keyword as an identifier when 
used out of place.

Are you really sure you need to do this, though?  I didn't think 
regular SQL permitted this sort of thing, since it leads to evil 
typo behaviour.


From antlr at mirality.co.nz  Wed Aug 29 05:40:14 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 30 Aug 2007 00:40:14 +1200
Subject: [antlr-interest] Simple lexer grammar doesn't match '''
In-Reply-To: <1e5d018e730d40ac1047688d0d51a586@87.5.83.210>
References: <1e5d018e730d40ac1047688d0d51a586@87.5.83.210>
Message-ID: <20070829124045.782C411EB83@www.antlr.org>

At 00:07 30/08/2007, Mauro Pellicioli wrote:
 >Great!It works, I only modified STRING rule adding 'u2019'.

... which means it'll happen again the next time someone uses a 
funny character.

Is there any particular reason why you're not using an unbounded 
range?  It'd be simpler to specify this as an "all characters 
except *these*" block.


From antlr at mirality.co.nz  Wed Aug 29 05:43:52 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 30 Aug 2007 00:43:52 +1200
Subject: [antlr-interest] Throwing a exception in a rule
In-Reply-To: <06DBDA45-623E-4E1B-B5FE-2C74562E61D4@lip6.fr>
References: <06DBDA45-623E-4E1B-B5FE-2C74562E61D4@lip6.fr>
Message-ID: <20070829124435.F078611EBA0@www.antlr.org>

At 00:30 30/08/2007, Alexandre Hamez wrote:
 >I try to declare a rule that throws an exception, but when I 
look
 >at the generated code, the corresponding method doesn't throws 
this
 >exception. The code is the following:
[...]
 >So, am I missing something?

IIRC, currently v3 does not implement throw specs.  (And I'm not 
sure if it supports catch blocks yet either.)

The simplest workaround at the moment is to make sure that 
whatever you're trying to throw derives from 
RecognitionException.  (If need be you can catch it outside the 
lexer/parser and convert it to some other type if you don't want 
other code to have to deal with RecognitionExceptions.)


From alexandre.hamez at lip6.fr  Wed Aug 29 05:50:43 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Wed, 29 Aug 2007 14:50:43 +0200
Subject: [antlr-interest] Throwing a exception in a rule
In-Reply-To: <20070829124435.F078611EBA0@www.antlr.org>
References: <06DBDA45-623E-4E1B-B5FE-2C74562E61D4@lip6.fr>
	<20070829124435.F078611EBA0@www.antlr.org>
Message-ID: <07E70528-96E1-4935-BD9D-45A8DBEECBC2@lip6.fr>


On 29 ao?t 07, at 14:43, Gavin Lambert wrote:

> At 00:30 30/08/2007, Alexandre Hamez wrote:
> >I try to declare a rule that throws an exception, but when I look
> >at the generated code, the corresponding method doesn't throws this
> >exception. The code is the following:
> [...]
> >So, am I missing something?
>
> IIRC, currently v3 does not implement throw specs.  (And I'm not  
> sure if it supports catch blocks yet either.)
>
> The simplest workaround at the moment is to make sure that whatever  
> you're trying to throw derives from RecognitionException.  (If need  
> be you can catch it outside the lexer/parser and convert it to some  
> other type if you don't want other code to have to deal with  
> RecognitionExceptions.)

Argh... Bad surprise :-(  So this information shouldn't be in the  
documentation :-D
Anyway, thanks for the tip :-)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/83e29d56/attachment.bin 

From antlr at jazillian.com  Wed Aug 29 06:44:08 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 29 Aug 2007 09:44:08 -0400
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <FF993752CB890B4EB591BE5450C37BF1B05042@navamane001.ad.internal.corp>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp><FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp><20070828201322.B21CD11EAD8@www.antlr.org><FF993752CB890B4EB591BE5450C37BF1B05008@navamane001.ad.internal.corp>	<20070828212933.DA5AB11EAD8@www.antlr.org>
	<FF993752CB890B4EB591BE5450C37BF1B05042@navamane001.ad.internal.corp>
Message-ID: <46D57828.4020207@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/8d36fd3c/attachment.html 

From Waverly.Edwards at genesys.com  Wed Aug 29 07:04:25 2007
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Wed, 29 Aug 2007 10:04:25 -0400
Subject: [antlr-interest] lexer: display all rules matched
In-Reply-To: <46D57828.4020207@jazillian.com>
References: <FF993752CB890B4EB591BE5450C37BF1B04CFA@navamane001.ad.internal.corp><FF993752CB890B4EB591BE5450C37BF1B04EFE@navamane001.ad.internal.corp><20070828201322.B21CD11EAD8@www.antlr.org><FF993752CB890B4EB591BE5450C37BF1B05008@navamane001.ad.internal.corp>	<20070828212933.DA5AB11EAD8@www.antlr.org>
	<FF993752CB890B4EB591BE5450C37BF1B05042@navamane001.ad.internal.corp>
	<46D57828.4020207@jazillian.com>
Message-ID: <FF993752CB890B4EB591BE5450C37BF1B05074@navamane001.ad.internal.corp>

Ah great!  This is great.  Now I can really test and be confident that
everything is working as it should.
 
Thanks,
 
 
W.

________________________________

From: Andy Tripp [mailto:antlr at jazillian.com] 
Sent: Wednesday, August 29, 2007 9:44 AM
To: Edwards, Waverly
Cc: antlr
Subject: Re: [antlr-interest] lexer: display all rules matched


In Java:
        CommonTokenStream tokens = new CommonTokenStream();
        tokens.setTokenSource(lexer);
        tokens.LT(1); // force load

        for (int i=0; i<tokens.size(); i++) {
       if (tokens.get(i).getChannel() == 0) {
            System.out.println("TOKEN:'" + tokens.get(i).getText() + "'
" + tokens.get(i).getType());
        }




		>> For the purposes of tests, just create an instance of
the lexer and ask it for all the tokens.
		


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/f970f471/attachment-0001.html 

From warnero at gmail.com  Wed Aug 29 10:56:43 2007
From: warnero at gmail.com (Warner Onstine)
Date: Wed, 29 Aug 2007 10:56:43 -0700
Subject: [antlr-interest] unexpected token error in StringTemplate
Message-ID: <d76a9c0d0708291056k6797da77i8a0f66c25d0fdaec@mail.gmail.com>

I've been trying to figure out what the problem is with this (my last
step!) and would appreciate any help. I'm attaching the grammar and
stg file, but will explain with short code here.

I'm getting this error when I run my test:

action parse error in group Java line 35; template context is [select_statement]

line 1:4: unexpected token: crit

The relevant section is this:
select_statement(crit, model) ::= <<
<if (crit != null)>
	<crit>
<else>
getHibernateTemplate().find("from <model>")
<endif>
>>

I cobbled together this syntax as best I could from the ST
documentation (as it isn't really clear on when to use brackets "<>"
vs. the dollar-sign "$" notation.

And in my grammar file:
selectStatement
	:	'Select' '(' ')' criteria=criteriaBlock? ->
select_statement(crit={criteria != null ? $criteria.st : null},
model={$prog::className})
	;
	
The className also appears to not be coming through (the test runs and
outputs even though I have this error. I've tried changing the "crit"
variable to other names but with the same results.

Thanks for all the help!

-warner

-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ModelDAO.stg
Type: application/octet-stream
Size: 1653 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/ea040638/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 2970 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/ea040638/attachment-0001.obj 

From antlr at jazillian.com  Wed Aug 29 12:41:55 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Wed, 29 Aug 2007 15:41:55 -0400
Subject: [antlr-interest] Problems with ANTLRv3.g
Message-ID: <46D5CC03.1010800@jazillian.com>

I downloaded the ANTLRv3.g file to parse ANTLR grammars, but ANTLR 
complains about it:

ANTLR Parser Generator  Version 3.0.1 (August 13, 2007)  1989-2007
warning(105): ANTLRv3.g:84:9: no lexer rule corresponding to token: 
DOC_COMMENT
warning(105): ANTLRv3.g:148:4: no lexer rule corresponding to token: 
DOC_COMMENT

warning(105): ANTLRv3.g:335:22: no lexer rule corresponding to token: 
SEMPRED
warning(105): ANTLRv3.g:242:6: no lexer rule corresponding to token: SEMPRED
warning(200): ANTLRv3.g:342:2: Decision can match input such as 
"TOKEN_REF '(' TOKEN_REF '='" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
warning(200): ANTLRv3.g:455:5: Decision can match input such as "' 
''$''A''N''T''L''R'' ''s''r''c'' ''"''\\''\'''"'' ''0'..'9'" using 
multiple alternatives: 1,2
As a result, alternative(s) 2 were disabled for that input

I saw that Johannes also got this error, but the response didn't address 
this issue, only additional errors.

Am I missing something or is this ANTLRv3.g not really ready yet?

Andy

From parrt at cs.usfca.edu  Wed Aug 29 13:07:51 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Aug 2007 13:07:51 -0700
Subject: [antlr-interest] unexpected token error in StringTemplate
In-Reply-To: <d76a9c0d0708291056k6797da77i8a0f66c25d0fdaec@mail.gmail.com>
References: <d76a9c0d0708291056k6797da77i8a0f66c25d0fdaec@mail.gmail.com>
Message-ID: <33CB0A05-0125-40F4-9802-93A66AD5766E@cs.usfca.edu>


On Aug 29, 2007, at 10:56 AM, Warner Onstine wrote:
> <if (crit != null)>

That's <if(crit)>.  No such thing as a test in ST.

Ter


From warnero at gmail.com  Wed Aug 29 13:29:54 2007
From: warnero at gmail.com (Warner Onstine)
Date: Wed, 29 Aug 2007 13:29:54 -0700
Subject: [antlr-interest] unexpected token error in StringTemplate
In-Reply-To: <33CB0A05-0125-40F4-9802-93A66AD5766E@cs.usfca.edu>
References: <d76a9c0d0708291056k6797da77i8a0f66c25d0fdaec@mail.gmail.com>
	<33CB0A05-0125-40F4-9802-93A66AD5766E@cs.usfca.edu>
Message-ID: <d76a9c0d0708291329u18620fe7tfc7ecff8350857d5@mail.gmail.com>

Thanks Terence! By the way is there a syntax guide for ST? I couldn't
find it in the ST documentation anywhere.

-warner

On 8/29/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Aug 29, 2007, at 10:56 AM, Warner Onstine wrote:
> > <if (crit != null)>
>
> That's <if(crit)>.  No such thing as a test in ST.
>
> Ter
>
>


-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog

From warnero at gmail.com  Wed Aug 29 13:34:42 2007
From: warnero at gmail.com (Warner Onstine)
Date: Wed, 29 Aug 2007 13:34:42 -0700
Subject: [antlr-interest] scoped variable not being passed
Message-ID: <d76a9c0d0708291334g52e8e03brba40550af0fc1cd3@mail.gmail.com>

Ok, next to last question (I have one nagging grammar generation
question left, but want to get this one fixed before I pose it). I
have a prog scope variable (prog is one of the first matches which
I'll show below), I want to reference this variable in a later match
but it isn't being passed along and I'm not sure what I need to do to
get it to pass correctly.

Here's where it is declared:
prog
scope {
  List methods;
  List imports;
  String className;
}
@init {
  $prog::methods = new ArrayList();
  $prog::imports = new ArrayList();
  $prog::className = new String();
}
	:	packageDecl importsDecl? model ->
prog(packageName={$packageDecl.st}, imports={$prog::imports},
className={$prog::className}, methods={$prog::methods})
	;
	
The variable I want to reference is $prog::className and I want to
reference it in my later statements (which I think are under the
method scope), here is where the method scope is declared later.

method
scope  {
  List localVars;
}
@init {
  $method::localVars = new ArrayList();
}
	:   	returnType=type? name=ID '(' p=parameter? ')' '{' methodBody=body? '}'
		-> method(returnType={returnType != null ? $returnType.st : new
String("void")},
			  name={$name.text},
		          param={p != null ? $p.st : new String("")},
		          body={methodBody != null ? $method::localVars : null})
		
	;

And I want to use the className variable here:

criteriaBlock
	:	'{' ID_EQUALS '(' ID ')' '}' -> id_eq(id={$ID.text},
model={$prog::className})
	;

Again, I've attached the grammar for reference.

-warner
-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 2966 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/8337a210/attachment.obj 

From parrt at cs.usfca.edu  Wed Aug 29 13:34:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Aug 2007 13:34:46 -0700
Subject: [antlr-interest] unexpected token error in StringTemplate
In-Reply-To: <d76a9c0d0708291329u18620fe7tfc7ecff8350857d5@mail.gmail.com>
References: <d76a9c0d0708291056k6797da77i8a0f66c25d0fdaec@mail.gmail.com>
	<33CB0A05-0125-40F4-9802-93A66AD5766E@cs.usfca.edu>
	<d76a9c0d0708291329u18620fe7tfc7ecff8350857d5@mail.gmail.com>
Message-ID: <9CEEEDC9-30B5-4FE5-B0B1-028BEF8982B5@cs.usfca.edu>


On Aug 29, 2007, at 1:29 PM, Warner Onstine wrote:

> Thanks Terence! By the way is there a syntax guide for ST? I couldn't
> find it in the ST documentation anywhere.

well, the grammars themselves in the source I believe...should be  
summary of the expressions somehow or spread out ;)
Ter


From warnero at gmail.com  Wed Aug 29 13:40:44 2007
From: warnero at gmail.com (Warner Onstine)
Date: Wed, 29 Aug 2007 13:40:44 -0700
Subject: [antlr-interest] "Alternatives unreachable" error when generating
	lexer/parser
Message-ID: <d76a9c0d0708291340o468bc8day446e88ff517c4c1c@mail.gmail.com>

Final issue. This one hasn't been a show-stopper, but I would like to
clean this up before declaring that I'm done (or at least done enough
;-). When I generate my grammar I continue to get these errors:

[INFO] Processing grammar
C:\java\projects\chama-antlr2\src\main\antlr\Model.g warning(200):
C:\java\projects\chama-antlr2\src\main\antlr\Model.g:51:67: Decision
can match input such as "'}'" using multiple alternatives: 1, 2

As a result, alternative(s) 2 were disabled for that input
warning(201): C:\java\projects\chama-antlr2\src\main\antlr\Model.g:51:67:
The following alternatives are unreachable: 2

And again a quick thanks to everyone who has helped me out, I greatly
appreciate it!

-warner

-- 
Warner Onstine - Programmer/Author
New book on Tapestry 4!
Tapestry 101 available at
http://sourcebeat.com/books/tapestrylive.html
warner at warneronstine.com
http://warneronstine.com/blog
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Model.g
Type: application/octet-stream
Size: 3005 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070829/fd94136d/attachment.obj 

From Stephen.Hardy at digi.com  Wed Aug 29 17:27:22 2007
From: Stephen.Hardy at digi.com (Hardy, Stephen)
Date: Wed, 29 Aug 2007 17:27:22 -0700
Subject: [antlr-interest] Repeating output constructs with string templates
Message-ID: <62BABE024B7C074E9194E9727A418979C4F07B@dvs-sms-mail01.digi.com>

In C one can create declarations like

  int a, b, c;

which, in a C parser, may result in an AST something like

  ^(DECL type declarator+)

It is easy to get string templates to output the original code, but I
would like to transform the original code to something like

  int a;
  int b;
  int c;

that is, repeating the type for each declarator.

Is this possible using ST, or do I need to manipulate the AST first?

Regards,
SJH

From parrt at cs.usfca.edu  Wed Aug 29 17:36:46 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 29 Aug 2007 17:36:46 -0700
Subject: [antlr-interest] Repeating output constructs with string
	templates
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F07B@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F07B@dvs-sms-mail01.digi.com>
Message-ID: <A22BFB65-34CA-444E-8928-0D41DF03D269@cs.usfca.edu>

Try somethign like

decl(type, names) ::= "<names:{ n | <type> <n>;}>"

sweeet, eh? :)

Ter
On Aug 29, 2007, at 5:27 PM, Hardy, Stephen wrote:

> In C one can create declarations like
>
>   int a, b, c;
>
> which, in a C parser, may result in an AST something like
>
>   ^(DECL type declarator+)
>
> It is easy to get string templates to output the original code, but I
> would like to transform the original code to something like
>
>   int a;
>   int b;
>   int c;
>
> that is, repeating the type for each declarator.
>
> Is this possible using ST, or do I need to manipulate the AST first?
>
> Regards,
> SJH


From antlr-list at arizona-software.ch  Wed Aug 29 21:42:23 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 29 Aug 2007 21:42:23 -0700
Subject: [antlr-interest] antlrworks update?
In-Reply-To: <20070829124209.7a7a6ac7.mazzucco@iiasa.ac.at>
References: <mailman.0.1188313008.9929.antlr-interest@antlr.org>
	<20070829124209.7a7a6ac7.mazzucco@iiasa.ac.at>
Message-ID: <77CCB963-7500-495B-B14F-44A9B4C5AED2@arizona-software.ch>

I will try to do an update this week-end if I find the time. Thanks  
for your patience.

Jean

On Aug 29, 2007, at 3:42 AM, Rupert Mazzucco wrote:

> Hello,
>
> are there plans to release an updated version with antlr 3.0.1?
>
> Regards
> -- 
> Rupert Mazzucco         <mazzucco at iiasa.ac.at>
> Research Scholar, Evolution and Ecology Program
> IIASA - Institute for Applied Systems Analysis
> Schlossplatz 1, 2361 Laxenburg, Austria
> Phone: +43 2236 807 522   Fax: +43 2236 713 13


From Erik.Putrycz at nrc-cnrc.gc.ca  Thu Aug 30 09:50:14 2007
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Thu, 30 Aug 2007 12:50:14 -0400
Subject: [antlr-interest] maven and javadocs
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E904C72476@nrccenexb1.nrc.ca>

Two questions:
- any chances someone could upload antlr 3.0.1 to maven central? 
- Is there a real javadoc of antlr 3 runtime somewhere? I'm not too keen
on the doxygen format.

Erik


From dave at badgers-in-foil.co.uk  Thu Aug 30 10:24:57 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 30 Aug 2007 17:24:57 +0000
Subject: [antlr-interest] maven and javadocs
In-Reply-To: <E4D07AB09F5F044299333C8D0FEB45E904C72476@nrccenexb1.nrc.ca>
References: <E4D07AB09F5F044299333C8D0FEB45E904C72476@nrccenexb1.nrc.ca>
Message-ID: <20070830172457.GA22522@badgers-in-foil.co.uk>

On Thu, Aug 30, 2007 at 12:50:14PM -0400, Putrycz, Erik wrote:
> - any chances someone could upload antlr 3.0.1 to maven central? 

The process to make this happen is to bundle the artifacts as described
here,

  http://maven.apache.org/guides/mini/guide-central-repository-upload.html

and then attach those bundles to an issue under the MAVENUPLOAD
component on jira.codehaus.org

[If you don't get to this first, I'll probably need to do it myself in a
few weeks.]


ta,
dave

-- 
http://david.holroyd.me.uk/

From Erik.Putrycz at nrc-cnrc.gc.ca  Thu Aug 30 10:53:46 2007
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Thu, 30 Aug 2007 13:53:46 -0400
Subject: [antlr-interest] maven and javadocs
In-Reply-To: <20070830172457.GA22522@badgers-in-foil.co.uk>
References: <E4D07AB09F5F044299333C8D0FEB45E904C72476@nrccenexb1.nrc.ca>
	<20070830172457.GA22522@badgers-in-foil.co.uk>
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E904C7248E@nrccenexb1.nrc.ca>

I wouldn't mind helping Terence and other folks from antlr to automate
that.
I have the feel that the other method (manual bundle) would be very
slow, ant then it will be the same problem at every new release.

Erik

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of David Holroyd
Sent: August 30, 2007 13:25
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] maven and javadocs

On Thu, Aug 30, 2007 at 12:50:14PM -0400, Putrycz, Erik wrote:
> - any chances someone could upload antlr 3.0.1 to maven central? 

The process to make this happen is to bundle the artifacts as described
here,

 
http://maven.apache.org/guides/mini/guide-central-repository-upload.html

and then attach those bundles to an issue under the MAVENUPLOAD
component on jira.codehaus.org

[If you don't get to this first, I'll probably need to do it myself in a
few weeks.]


ta,
dave

--
http://david.holroyd.me.uk/

From antlr at jazillian.com  Thu Aug 30 12:38:58 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 30 Aug 2007 15:38:58 -0400
Subject: [antlr-interest] keyword as identifier problem
Message-ID: <46D71CD2.8060005@jazillian.com>

I'm doing the "keyword as Identifier" dance as described in the book.

So I've replaced this token...
TYPE='TYPE';
...with the parser rule:
keyTYPE:
    {input.LT(1).getText().equalsIgnoreCase("TYPE")}? Identifier
    -> TYPE
    ;

When I have this parser rule:
typeDeclaration:
    optionalModScopeDecl keyTYPE Identifier eos
    ( anyVariableDeclaration[$optionalModScopeDecl.tree]? eos)+
    keyEND 'TYPE'
    ;

...it compiles just fine. But changing that 'TYPE' to keyType in the rule:

typeDeclaration:
    optionalModScopeDecl keyTYPE Identifier eos
    ( anyVariableDeclaration[$optionalModScopeDecl.tree]? eos)+
    keyEND keyType

...causes ANTLR to generate code that doesn't compile:

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
VBParser.java:30483: cannot find symbol
symbol  : variable $optionalModScopeDecl
location: class VBParser
                anyVariableDeclaration($optionalModScopeDecl.tree);

It looks like an ANTLR bug to me. Any ideas?

Andy




From alexandre.hamez at lip6.fr  Thu Aug 30 13:07:03 2007
From: alexandre.hamez at lip6.fr (Alexandre Hamez)
Date: Thu, 30 Aug 2007 22:07:03 +0200
Subject: [antlr-interest] End of a parsing rule
Message-ID: <A9EF5E05-9AE6-431A-B35F-DA8497154E97@lip6.fr>

	I have a question on when the parsing does end. If I invoke directly  
a rule in order to match a sequence of characters, does this rule  
will return when it has match all the characters, or does it need to  
read one more character (e.g. EOF)?
	I ask this because I'm currently implementing a ANTLRSocket stream  
that does feed the parser with an input coming from a Socket. By the  
way, if you have any hints on how to do that, I will gladly read  
them :-)

------------------------------------------------------------------------ 
---
Alexandre Hamez   LIP6 - MoVe / EPITA - LRDE
LIP6: tel: +33 1 44 27 31 92  / Bureau 818
104 Avenue du Pr?sident Kennedy 75016 Paris
http://www-src.lip6.fr/~Alexandre.Hamez


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2429 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070830/2bca641a/attachment.bin 

From dave at badgers-in-foil.co.uk  Thu Aug 30 13:58:15 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Thu, 30 Aug 2007 20:58:15 +0000
Subject: [antlr-interest] start/stop tokens for subrules?
Message-ID: <20070830205815.GA26000@badgers-in-foil.co.uk>

Knowing the start/stop tokens for an AST node is very important to my
application.

ANTLRv3 generated parsers don't currently seem to set start/stop tokens
for the root AST nodes created by subrules.  Only the final result of the
rule as a whole gets these values defined.  e.g. in,

  identifier
   :  (  qualifiedIdent -> qualifiedIdent
      )
      (  options{greedy=true;}
      :   d=DOT qualifiedIdent
          -> ^(PROPERTY_OR_IDENTIFIER[$d] $identifier qualifiedIdent)
      )*
      -> ^(IDENTIFIER $identifier)

the generated PROPERTY_OR_IDENTIFIER node which is created as the root
of the subtree does not get the adaptor.setTokenBoundaries() love.


Admittedly, even if the subrule's root *did* get these values defined,
they would be 'wrong' for the tree I want to construct (I want the
startToken to reflect the start of the first child, not LT(1) at the
start of the subrule).

I therefore end up creating auxiliary rules like this:

  identifier 
   :  (  qualifiedIdent -> qualifiedIdent
      )
      (  options{greedy=true;}
      :  poi=propOrIdent[root_0, retval.start] -> $poi
      )*
      -> ^(IDENTIFIER $identifier)
    ;

  propOrIdent[Tree identPrimary, Token startToken]
   :  { retval.start = startToken; }
      d=DOT propId=qualifiedIdent
      -> ^(PROPERTY_OR_IDENTIFIER[$d] {$identPrimary} $propId)
    ;

and while this seems to work, I feel dirty.


Is there a better way?


ta,
dave

-- 
http://david.holroyd.me.uk/

From Stephen.Hardy at digi.com  Thu Aug 30 14:00:46 2007
From: Stephen.Hardy at digi.com (Hardy, Stephen)
Date: Thu, 30 Aug 2007 14:00:46 -0700
Subject: [antlr-interest] Repeating output constructs with
	stringtemplates
In-Reply-To: <A22BFB65-34CA-444E-8928-0D41DF03D269@cs.usfca.edu>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F081@dvs-sms-mail01.digi.com>

Yup, works like a charm!  Thanks!  (Still haven't quite got my head
around ST stuff, as you can see).

Regards,
SJH

> -----Original Message-----
> 
> Try somethign like
> 
> decl(type, names) ::= "<names:{ n | <type> <n>;}>"
> 
> sweeet, eh? :)
> 
> Ter
> On Aug 29, 2007, at 5:27 PM, Hardy, Stephen wrote:
> 
> > In C one can create declarations like
> >
> >   int a, b, c;
> >
> > which, in a C parser, may result in an AST something like
> >
> >   ^(DECL type declarator+)
> >
> > It is easy to get string templates to output the original 
> code, but I
> > would like to transform the original code to something like
> >
> >   int a;
> >   int b;
> >   int c;
> >
> > that is, repeating the type for each declarator.
> >
> > Is this possible using ST, or do I need to manipulate the AST first?
> >
> > Regards,
> > SJH
> 
> 

From antlr at jazillian.com  Thu Aug 30 15:26:25 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 30 Aug 2007 18:26:25 -0400
Subject: [antlr-interest] Repeating output constructs
	with	stringtemplates
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F081@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F081@dvs-sms-mail01.digi.com>
Message-ID: <46D74411.20509@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070830/2a907a2c/attachment.html 

From fyaoxy at gmail.com  Thu Aug 30 22:15:04 2007
From: fyaoxy at gmail.com (=?GB2312?B?z/LH2M/N?=)
Date: Fri, 31 Aug 2007 13:15:04 +0800
Subject: [antlr-interest] TreeWalker error(100)
In-Reply-To: <OF5D33415B.8F9A1236-ONC1257345.005BE8E0-C1257345.005EAD93@dcx.dcx>
References: <OF5D33415B.8F9A1236-ONC1257345.005BE8E0-C1257345.005EAD93@dcx.dcx>
Message-ID: <91dd9a4f0708302215y4fa0675fn61ee0e6cb6d3704f@mail.gmail.com>

I guess you wanna write this:
qualifiedName
     :     Identifier ('.' Identifier)* -> ^(IDENTIFIER $text)
     ;
I not try in current laptop, I will try it when off.

2007/8/29, benjamin.b.lenz at daimlerchrysler.com
<benjamin.b.lenz at daimlerchrysler.com>:
>
> Hi guys,
>
> I'm new developing a parser grammar with ANTLR. I have to rewrite some of
> the Java1.5 rules to create an AST and build a TreeWalker to visit the
> nodes and extract the infos...
>
> During my beginning I tried to start from bottom to top and rewrite more
> and more grammar rules. But in a very basic grammar I found the error(100)
> and no useful ref on the antlr list.
>
> I want to use the duplicating nodes rule on
>
> qualifiedName
>       :     Identifier ('.' Identifier)*
>       ;
>
> So I tried
>
> qualifiedName
>       :     Identifier ('.' Identifier)* -> ^(Identifier Identifier*)
>       ;
>
> This works in the parser grammar but the ANTLR plugin for eclipse gives me
> the
> error(100): unexpected token: ^(
> expecting SEMI, foun
>
>
> and later on
>
> error(204): duplicate token type '\005f' when collapsing subrule into set
>
> it would be great if anybody could help me what wrong here..
>
> thanks!!
>
> Ben
>
> here the code:
>
> tree grammar Walker;
>
> options{
>       tokenVocab = Java;
>       ASTLabelType = CommonTree;
> }
>
> compilationUnit
>       :     packageDeclaration?
>       ;
>
> packageDeclaration
>       :     'package' qualifiedName ';'
>       ;
>
> qualifiedName
>       :     Identifier ('.' Identifier)* -> ^(Identifier Identifier*)
>       ;
>
> Identifier
>     :   Letter (Letter|JavaIDDigit)*
>     ;
>
> fragment
> Letter
>     :  '\u0024' |
>        '\u0041'..'\u005a' |
>        '\u005f' |
>        '\u0061'..'\u007a' |
>        '\u00c0'..'\u00d6' |
>        '\u00d8'..'\u00f6' |
>        '\u00f8'..'\u00ff' |
>        '\u0100'..'\u1fff' |
>        '\u3040'..'\u318f' |
>        '\u3300'..'\u337f' |
>        '\u3400'..'\u3d2d' |
>        '\u4e00'..'\u9fff' |
>        '\uf900'..'\ufaff'
>     ;
>
> fragment
> JavaIDDigit
>     :  '\u0030'..'\u0039' |
>        '\u0660'..'\u0669' |
>        '\u06f0'..'\u06f9' |
>        '\u0966'..'\u096f' |
>        '\u09e6'..'\u09ef' |
>        '\u0a66'..'\u0a6f' |
>        '\u0ae6'..'\u0aef' |
>        '\u0b66'..'\u0b6f' |
>        '\u0be7'..'\u0bef' |
>        '\u0c66'..'\u0c6f' |
>        '\u0ce6'..'\u0cef' |
>        '\u0d66'..'\u0d6f' |
>        '\u0e50'..'\u0e59' |
>        '\u0ed0'..'\u0ed9' |
>        '\u1040'..'\u1049'
>    ;
>
>
>
>
> If you are not the intended addressee, please inform us immediately that you have received this e-mail by mistake and delete it. We thank you for your support.
>


-- 
??
???

From martin.kohl at gmail.com  Fri Aug 31 07:26:10 2007
From: martin.kohl at gmail.com (Martin Kohl)
Date: Fri, 31 Aug 2007 16:26:10 +0200
Subject: [antlr-interest]  strange code generated?
Message-ID: <6d93992c0708310726v633804f6sde4f79feb0f16cf@mail.gmail.com>

Hello,

Looking at the generated Parser.java, I've stumbled across the following
code:

if ( (synpred1()) ) {
   alt1=1;
}
else if ( (true) ) {
   alt1=2;
}
else {
   if (backtracking>0) {failed=true; return ;}
   NoViableAltException nvae =
                        new NoViableAltException(...);
   throw nvae;
}

I think the if(true){statement} can be replaced by statement, the
if(true){}else{} can be shortened to if(true){}.

Kind Regards,
Martin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070831/d7bdf917/attachment.html 

From parrt at cs.usfca.edu  Fri Aug 31 08:06:45 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 31 Aug 2007 08:06:45 -0700
Subject: [antlr-interest] strange code generated?
In-Reply-To: <6d93992c0708310726v633804f6sde4f79feb0f16cf@mail.gmail.com>
References: <6d93992c0708310726v633804f6sde4f79feb0f16cf@mail.gmail.com>
Message-ID: <2C87C661-D866-4D15-8503-3C7D8AD7CD59@cs.usfca.edu>

That true is me collapsing pred1||!pred1 stuff.
Ter
On Aug 31, 2007, at 7:26 AM, Martin Kohl wrote:

> Hello,
>
> Looking at the generated Parser.java, I've stumbled across the  
> following code:
>
> if ( (synpred1()) ) {
>    alt1=1;
> }
> else if ( (true) ) {
>    alt1=2;
> }
> else {
>    if (backtracking>0) {failed=true; return ;}
>    NoViableAltException nvae =
>                         new NoViableAltException(...);
>    throw nvae;
> }
>
> I think the if(true){statement} can be replaced by statement, the if 
> (true){}else{} can be shortened to if(true){}.
>
> Kind Regards,
> Martin


From parrt at cs.usfca.edu  Fri Aug 31 08:10:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 31 Aug 2007 08:10:00 -0700
Subject: [antlr-interest] Repeating output constructs
	with	stringtemplates
In-Reply-To: <46D74411.20509@jazillian.com>
References: <62BABE024B7C074E9194E9727A418979C4F081@dvs-sms-mail01.digi.com>
	<46D74411.20509@jazillian.com>
Message-ID: <BCA2FD97-F0B4-4104-B515-D5B5EC7CC3CD@cs.usfca.edu>


On Aug 30, 2007, at 3:26 PM, Andy Tripp wrote:

> Hoping back onto my "vanilla library code is better than clever  
> syntax" soapbox,

Hi Andy.  so DSLs are bad?  We should all go back to Pascal or  
assembly?  OO is good, but functional is bad?  I can't imagine how

decl(type, names) ::= "<names:{ n | <type> <n>;}>"

is not superior to your code. I have to imagine the emergent behavior  
in code.  In my template, it says...well, "here's the output".  A  
document with holes in it.  Gotta learn the syntax like you had to  
learn Java.

You should also argue against parser generators if you're against  
unparser generators ;)

Ter

> void splitUpDeclarations(MyAST decl) {
>     MyAST parent = decl.getParent();
>     int insertLocation = parent.indexOfChild(decl);
>     MyAST type = decl.getChild(0);                 // first child
>     List<MyAST> vars = decl.getChildren(1);  // rest of children
>     for (MyAST var: vars) {
>         MyAst singleDecl = new MyAST(DECL);
>         singleDecl.addChildren(type.clone(), var);
>         parent.insert(insertLocation, singleDecl);
>     }
> }


From Erik.Putrycz at nrc-cnrc.gc.ca  Fri Aug 31 08:45:24 2007
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Fri, 31 Aug 2007 11:45:24 -0400
Subject: [antlr-interest] hidden tokens vs channels
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E904C725B2@nrccenexb1.nrc.ca>

I'm trying to migrate a Cobol grammar from antlr 2.7 to antlr 3. I was using hidden tokens for comments and this was rather nice to use because I was able to "attach" comments to other tokens. And this was easy to use with the AST.
Now with channels, there isn't anymore this method of "attaching" tokens. How could I do something similar?

Erik Putrycz, Ph.D?- Research Associate
Institute for Information Technology - Software Engineering Group
National Research Council, Canada - Building M-50, 1200 Montreal Road
Ottawa, Ontario, CANADA K1A 0R6


From trunkel at gmail.com  Fri Aug 31 09:03:46 2007
From: trunkel at gmail.com (troy runkel)
Date: Fri, 31 Aug 2007 12:03:46 -0400
Subject: [antlr-interest] Non-reserved keyword as identifier question
Message-ID: <620da58c0708310903x7febfae8m545072040e29d1fa@mail.gmail.com>

I'm working on a MS-SQL grammar and I've run into a problem with
keywords/identifiers that I'm hoping somebody in the ANTLR collective
can help me resolve.

MS-SQL maintains a list of reserved keywords than can't be used as
identifiers unless they're delimited.  In the following grammar 'NAME'
is a keyword, but not a reserved keyword, so it can be used as an
identifier.  If I try to parse a statement like 'SELECT Name FROM
Customers' it will fail because the lexer will return 'Name' as a
distinct token, not the Identifier token.

I could create an identifier parser rule which includes the Identifier
token as well as every keyword in the grammar, but I think that would
be a long list of keywords.  Is there another way to handle this
problem?  Thanks.

grammar TSQL;
options
{
    language    = C;
    backtrack   = true;
}

// STATEMENTS
start :
        ( sql_statement (';')? )+ ;

sql_statement :
        alter_role
    |   select_rule
	;

alter_role :
        'ALTER' 'ROLE' Identifier 'WITH' 'NAME' '=' Identifier
    ;

select_rule :
        'SELECT' Identifier 'FROM' Identifier
    ;

// LEXER rules

Identifier :
        ('a'..'z'|'A'..'Z'|'_'|'$'|'#')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$'|'#')* ;

From madcapmaggie at yahoo.com  Fri Aug 31 09:53:07 2007
From: madcapmaggie at yahoo.com (Peggy Fieland)
Date: Fri, 31 Aug 2007 09:53:07 -0700 (PDT)
Subject: [antlr-interest] Non-reserved keyword as identifier question
In-Reply-To: <620da58c0708310903x7febfae8m545072040e29d1fa@mail.gmail.com>
Message-ID: <67754.41827.qm@web60024.mail.yahoo.com>

I wrote a program to solve this. It works off a list of "real literals" and goes through the *.hpp file grabbing literals. When it finds one that's a "real literal," it outputs it to a file of keywords. When it finds one that isn't, it outputs it to a file of "non-keywords." I then scarf them up and put them into my grammar file. Identifiers can be either an identifier, a delimited identifier, or a non-keyword.

I'm using antlr-2.7.

troy runkel <trunkel at gmail.com> wrote: I'm working on a MS-SQL grammar and I've run into a problem with
keywords/identifiers that I'm hoping somebody in the ANTLR collective
can help me resolve.

MS-SQL maintains a list of reserved keywords than can't be used as
identifiers unless they're delimited.  In the following grammar 'NAME'
is a keyword, but not a reserved keyword, so it can be used as an
identifier.  If I try to parse a statement like 'SELECT Name FROM
Customers' it will fail because the lexer will return 'Name' as a
distinct token, not the Identifier token.

I could create an identifier parser rule which includes the Identifier
token as well as every keyword in the grammar, but I think that would
be a long list of keywords.  Is there another way to handle this
problem?  Thanks.

grammar TSQL;
options
{
    language    = C;
    backtrack   = true;
}

// STATEMENTS
start :
        ( sql_statement (';')? )+ ;

sql_statement :
        alter_role
    |   select_rule
 ;

alter_role :
        'ALTER' 'ROLE' Identifier 'WITH' 'NAME' '=' Identifier
    ;

select_rule :
        'SELECT' Identifier 'FROM' Identifier
    ;

// LEXER rules

Identifier :
        ('a'..'z'|'A'..'Z'|'_'|'$'|'#')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$'|'#')* ;



Margaret Fieland
    www.margaretfieland.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070831/cc262ee6/attachment.html 

From Erik.Putrycz at nrc-cnrc.gc.ca  Fri Aug 31 11:49:10 2007
From: Erik.Putrycz at nrc-cnrc.gc.ca (Putrycz, Erik)
Date: Fri, 31 Aug 2007 14:49:10 -0400
Subject: [antlr-interest] python example question and getCharPositionInLine
Message-ID: <E4D07AB09F5F044299333C8D0FEB45E904C7261A@nrccenexb1.nrc.ca>

In the python example, to detect the column, the grammar uses an in startPos that in initialized before nextToken in the lexer. Would there be a difference in using getCharPositionInLine() instead?

Erik Putrycz, Ph.D?- Research Associate
Institute for Information Technology - Software Engineering Group
National Research Council, Canada - Building M-50, 1200 Montreal Road
Ottawa, Ontario, CANADA K1A 0R6


From antlr at jazillian.com  Fri Aug 31 12:04:07 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 31 Aug 2007 15:04:07 -0400
Subject: [antlr-interest] Repeating output
	constructs	with	stringtemplates
In-Reply-To: <BCA2FD97-F0B4-4104-B515-D5B5EC7CC3CD@cs.usfca.edu>
References: <62BABE024B7C074E9194E9727A418979C4F081@dvs-sms-mail01.digi.com>	<46D74411.20509@jazillian.com>
	<BCA2FD97-F0B4-4104-B515-D5B5EC7CC3CD@cs.usfca.edu>
Message-ID: <46D86627.9000901@jazillian.com>

Terence Parr wrote:
>
> On Aug 30, 2007, at 3:26 PM, Andy Tripp wrote:
>
>> Hoping back onto my "vanilla library code is better than clever 
>> syntax" soapbox,
>
> Hi Andy.  so DSLs are bad?  
I generally don't like DSLs. You've got to remember that I (and most 
people, I think) often have to
*read* DSLs, while you almost always are the *writer* (designer) of the 
DSL. I wonder how long
it would take someone to figure out your one-liner of ST code (given a 
realistic context - he encounters
it in the middle of some code somewhere), compared to my Java code.
> We should all go back to Pascal or assembly?  OO is good, but 
> functional is bad?  I can't imagine how
>
> decl(type, names) ::= "<names:{ n | <type> <n>;}>"
>
> is not superior to your code. I have to imagine the emergent behavior 
> in code.  In my template, it says...well, "here's the output".  A 
> document with holes in it.  Gotta learn the syntax like you had to 
> learn Java.
I frown on people using Latin simply because so few people speak it, not 
because it's not easier to
express myself once I learn it. You could say "well, you just need to 
learn Latin as  you did English".
I guess that's true, but I don't really enjoy learning other languages - 
too busy/dumb for that :)
>
> You should also argue against parser generators if you're against 
> unparser generators ;)
Parser-generators are nice because they reflect the input language so well.
A grammar says "here is what my input language looks like; make a tree 
out of that input".
On the other hand, converting a tree back to code is quite a different 
problem.
This:
   decl(type, names) ::= "<names:{ n | <type> <n>;}>"
gives me no hint at all about what its input looks like (the tree 
structure) or what its output (c0de) looks like.
Neither does the Java code below, I admit.

Ideally, I'd like to be able to write something like this:

parent
   DECL
     type
     child1
     ...
     childN

->
parent
   DECL
      type
         child1
      ...
      type
         childN

I guess that's what I was expecting from a "tree transformation tool" 
tools like XSLT and TXL :(
Andy    

>
> Ter
>
>> void splitUpDeclarations(MyAST decl) {
>>     MyAST parent = decl.getParent();
>>     int insertLocation = parent.indexOfChild(decl);
>>     MyAST type = decl.getChild(0);                 // first child
>>     List<MyAST> vars = decl.getChildren(1);  // rest of children
>>     for (MyAST var: vars) {
>>         MyAst singleDecl = new MyAST(DECL);
>>         singleDecl.addChildren(type.clone(), var);
>>         parent.insert(insertLocation, singleDecl);
>>     }
>> }
>


From antlr at jazillian.com  Fri Aug 31 12:21:17 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 31 Aug 2007 15:21:17 -0400
Subject: [antlr-interest] Non-reserved keyword as identifier question
In-Reply-To: <620da58c0708310903x7febfae8m545072040e29d1fa@mail.gmail.com>
References: <620da58c0708310903x7febfae8m545072040e29d1fa@mail.gmail.com>
Message-ID: <46D86A2D.30202@jazillian.com>

See the "Keywords as Variables" section on the ANTLR book.

For starters, I'd at least like to write a preprocessor that "does the 
keyword as variable dance"
for every keyword in the grammar.

There's gotta be a better way, though.
Andy

troy runkel wrote:
> I'm working on a MS-SQL grammar and I've run into a problem with
> keywords/identifiers that I'm hoping somebody in the ANTLR collective
> can help me resolve.
>
> MS-SQL maintains a list of reserved keywords than can't be used as
> identifiers unless they're delimited.  In the following grammar 'NAME'
> is a keyword, but not a reserved keyword, so it can be used as an
> identifier.  If I try to parse a statement like 'SELECT Name FROM
> Customers' it will fail because the lexer will return 'Name' as a
> distinct token, not the Identifier token.
>
> I could create an identifier parser rule which includes the Identifier
> token as well as every keyword in the grammar, but I think that would
> be a long list of keywords.  Is there another way to handle this
> problem?  Thanks.
>
> grammar TSQL;
> options
> {
>     language    = C;
>     backtrack   = true;
> }
>
> // STATEMENTS
> start :
>         ( sql_statement (';')? )+ ;
>
> sql_statement :
>         alter_role
>     |   select_rule
> 	;
>
> alter_role :
>         'ALTER' 'ROLE' Identifier 'WITH' 'NAME' '=' Identifier
>     ;
>
> select_rule :
>         'SELECT' Identifier 'FROM' Identifier
>     ;
>
> // LEXER rules
>
> Identifier :
>         ('a'..'z'|'A'..'Z'|'_'|'$'|'#')
> ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$'|'#')* ;
>
>   


From antlr at mirality.co.nz  Fri Aug 31 15:44:38 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 01 Sep 2007 10:44:38 +1200
Subject: [antlr-interest] Non-reserved keyword as identifier  question
In-Reply-To: <620da58c0708310903x7febfae8m545072040e29d1fa@mail.gmail.co
 m>
References: <620da58c0708310903x7febfae8m545072040e29d1fa@mail.gmail.com>
Message-ID: <20070831224446.4E2C011E9D6@www.antlr.org>

At 04:03 1/09/2007, troy runkel wrote:
 >I could create an identifier parser rule which includes the
 >Identifier token as well as every keyword in the grammar, but
 >I think that would be a long list of keywords.  Is there
 >another way to handle this problem?  Thanks.

That's how I do it.  (I don't like the "manual examination of 
lookahead" approach that seems to be the other commonly offered 
solution.)


From easjolly at ix.netcom.com  Fri Aug 31 20:25:20 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Fri, 31 Aug 2007 21:25:20 -0600
Subject: [antlr-interest] Non-reserved keyword as identifier question
Message-ID: <E1IRJbK-00012J-VF@elasmtp-dupuy.atl.sa.earthlink.net>

I have a related question which is whether you ever want to use a large
number of literal tokens in V3? 

The generated lexer seems very verbose as far as distinguishing literals
from identifiers.  Wouldn't it be better to roll your own method for
assigning token types to literals?  The only slight problem is that if the
literal starts with a lower case letter you can't use the exact text of
literal as the token identifier (or label).  You could resolve this with a
naming convention such as LC_int.



