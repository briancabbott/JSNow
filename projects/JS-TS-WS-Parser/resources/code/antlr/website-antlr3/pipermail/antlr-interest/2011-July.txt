From neha.karanjkar at gmail.com  Fri Jul  1 00:05:07 2011
From: neha.karanjkar at gmail.com (Neha V. Karanjkar)
Date: Fri, 1 Jul 2011 12:35:07 +0530
Subject: [antlr-interest] Making a translator with C runtime and no string
	templates
Message-ID: <BANLkTik+fFZZJ+Tu3DHSfnBNTh8pwMR=VA@mail.gmail.com>

Hi.


I'm making a translator using antlr (with C runtime)
for a small language, which is somewhat like a hardware
description language(VHDL/Verilog).

I'm new to antlr, and (I think) string templates cannot be used
with a C target, so I'm using a scheme(described below)  to generate code.

I'm not sure if this is the best way to go.
 I'd appreciate any advice/comments.

----------
The input consists of a set of module descriptions.
Each module description should get translated to a C++ class
into a .cpp and a .h file.

As I cannot use string templates, I'm using 2 sets of Lexer+Parser.
One parses the input and fills up a data structure.
The second parses a template for generating the
.cpp/.h files and uses this template, along with the data structure,
 to generate code.


The first parser has to instruct the second one
to dump code, after parsing *each* module description
as follows:
input : (module_description    //fill up some data structure
                {ask code generator to dump code}
            ) + <EOF>;


The template can have:
 *plain text to be dumped as it is
 *fields whose values have to be looked up from the data structure,
 *instructions to take certain actions, like change destination file

I have the following questions:

1. Is  there a better way of doing this?
  (I don't want to use a lot of printfs to generate code)

2. For the code generation part, the template remains unchanged.
is there a way to reuse the token stream?
I'm using 3.1.4 SNAPSHOT of the C runtime.
I tried tstream->reset(), CodeGenerator_psr->reset(),
but it doesn't work.


Thanks,
-Neha Karanjkar

From reginfo_ar at ymail.com  Fri Jul  1 02:18:16 2011
From: reginfo_ar at ymail.com (Fs Cc)
Date: Fri, 1 Jul 2011 02:18:16 -0700 (PDT)
Subject: [antlr-interest] Ambiguous lexer rules
Message-ID: <1309511896.64348.YahooMailRC@web111820.mail.gq1.yahoo.com>

Hi,

How can I resolve the ambiguous antlr3 lexer rules in following case:

xstr [aaa ----> A xstr whose value is '[aaa'
[aaa bbb ccc] ----> An array with 3 strings: 'aaa' 'bbb' 'ccc'

So I write following rules:
  STRING : ('a'..'z' | 'A'..'Z' | '0'..'9')+; # only contains digits and letters
  XSTRING : '\u0021'..'\u007e'+; # 0x21-0x7e are the readable ascii chars.

  xstr : 'xstr' (XSTRING | STRING);
  array : '[' STRING+ ']';

But the array rule doesn't work, because '[aaa' is treated as a XSTRING 
rather than '[' and 'aaa'.
How can I fix it?

Thanks,
Fussi 

From tijet at mac.com  Fri Jul  1 15:10:19 2011
From: tijet at mac.com (Trevor John Thompson)
Date: Fri, 01 Jul 2011 15:10:19 -0700
Subject: [antlr-interest] empty rule catches unthrown RecognitionException
Message-ID: <18536860-7BEC-43B0-97F1-F3EE60F3D97F@mac.com>

I have a grammar in which i wish to create an imaginary AST node, and then have an action treat that node. The most straightforward expression i have devised is:
grammar Empty;
options {output=AST;}
tokens {Imaginary;}
@members {void treat(Object t){}}

parse: empty EOF! {treat($empty.tree);};
empty: ->^(Imaginary);

However, the generated EmptyParser.java fails to compile because empty() catches RecognitionException, which is never thrown.

I am working around this by:
empty: ->^(Imaginary)|Imaginary;
which works because the imaginary token can never be produced by the lexer.

Is there some other way i should be going about this?
--
Trevor John Thompson    (425) 246-4023
net: tijet at me.com
Quidquid Latine scriptum sit, altum videtur.


From parrt at cs.usfca.edu  Fri Jul  1 15:12:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 1 Jul 2011 15:12:31 -0700
Subject: [antlr-interest] empty rule catches unthrown
	RecognitionException
In-Reply-To: <18536860-7BEC-43B0-97F1-F3EE60F3D97F@mac.com>
References: <18536860-7BEC-43B0-97F1-F3EE60F3D97F@mac.com>
Message-ID: <CA202DED-7DAB-4674-AB47-E796D13F3DB7@cs.usfca.edu>

i fixed this in latest beta for 3.4...can you try that?
Ter
On Jul 1, 2011, at 3:10 PM, Trevor John Thompson wrote:

> I have a grammar in which i wish to create an imaginary AST node, and then have an action treat that node. The most straightforward expression i have devised is:
> grammar Empty;
> options {output=AST;}
> tokens {Imaginary;}
> @members {void treat(Object t){}}
> 
> parse: empty EOF! {treat($empty.tree);};
> empty: ->^(Imaginary);
> 
> However, the generated EmptyParser.java fails to compile because empty() catches RecognitionException, which is never thrown.
> 
> I am working around this by:
> empty: ->^(Imaginary)|Imaginary;
> which works because the imaginary token can never be produced by the lexer.
> 
> Is there some other way i should be going about this?
> --
> Trevor John Thompson    (425) 246-4023
> net: tijet at me.com
> Quidquid Latine scriptum sit, altum videtur.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From tijet at mac.com  Fri Jul  1 15:34:45 2011
From: tijet at mac.com (Trevor John Thompson)
Date: Fri, 01 Jul 2011 15:34:45 -0700
Subject: [antlr-interest] empty rule catches unthrown
	RecognitionException
In-Reply-To: <CA202DED-7DAB-4674-AB47-E796D13F3DB7@cs.usfca.edu>
References: <18536860-7BEC-43B0-97F1-F3EE60F3D97F@mac.com>
	<CA202DED-7DAB-4674-AB47-E796D13F3DB7@cs.usfca.edu>
Message-ID: <DC5700C8-BD55-4744-9769-993C73274AB9@mac.com>

Presuming that "latest beta" is antlr-3.4rc2-complete.jar, i get:

java -jar /Users/Local/antlr-3.4rc2-complete.jar Empty.g
javac -cp /Users/Local/antlr-3.4rc2-complete.jar EmptyParser.java
EmptyParser.java:167: exception org.antlr.runtime.RecognitionException is never thrown in body of corresponding try statement
        catch (RecognitionException re) {
        ^
1 error

On 2011 Jul 1, at 15:12, Terence Parr wrote:

> i fixed this in latest beta for 3.4...can you try that?
> Ter
> On Jul 1, 2011, at 3:10 PM, Trevor John Thompson wrote:
> 
>> I have a grammar in which i wish to create an imaginary AST node, and then have an action treat that node. The most straightforward expression i have devised is:
>> grammar Empty;
>> options {output=AST;}
>> tokens {Imaginary;}
>> @members {void treat(Object t){}}
>> 
>> parse: empty EOF! {treat($empty.tree);};
>> empty: ->^(Imaginary);
>> 
>> However, the generated EmptyParser.java fails to compile because empty() catches RecognitionException, which is never thrown.
>> 
>> I am working around this by:
>> empty: ->^(Imaginary)|Imaginary;
>> which works because the imaginary token can never be produced by the lexer.
>> 
>> Is there some other way i should be going about this?
>> --
>> Trevor John Thompson    (425) 246-4023
>> net: tijet at me.com
>> Quidquid Latine scriptum sit, altum videtur.
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 



From parrt at cs.usfca.edu  Fri Jul  1 15:35:44 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 1 Jul 2011 15:35:44 -0700
Subject: [antlr-interest] empty rule catches unthrown
	RecognitionException
In-Reply-To: <DC5700C8-BD55-4744-9769-993C73274AB9@mac.com>
References: <18536860-7BEC-43B0-97F1-F3EE60F3D97F@mac.com>
	<CA202DED-7DAB-4674-AB47-E796D13F3DB7@cs.usfca.edu>
	<DC5700C8-BD55-4744-9769-993C73274AB9@mac.com>
Message-ID: <99D847DC-249F-4448-9290-145743DD4371@cs.usfca.edu>

should be a beta3 or seomthing there.
T
On Jul 1, 2011, at 3:34 PM, Trevor John Thompson wrote:

> Presuming that "latest beta" is antlr-3.4rc2-complete.jar, i get:
> 
> java -jar /Users/Local/antlr-3.4rc2-complete.jar Empty.g
> javac -cp /Users/Local/antlr-3.4rc2-complete.jar EmptyParser.java
> EmptyParser.java:167: exception org.antlr.runtime.RecognitionException is never thrown in body of corresponding try statement
>        catch (RecognitionException re) {
>        ^
> 1 error
> 
> On 2011 Jul 1, at 15:12, Terence Parr wrote:
> 
>> i fixed this in latest beta for 3.4...can you try that?
>> Ter
>> On Jul 1, 2011, at 3:10 PM, Trevor John Thompson wrote:
>> 
>>> I have a grammar in which i wish to create an imaginary AST node, and then have an action treat that node. The most straightforward expression i have devised is:
>>> grammar Empty;
>>> options {output=AST;}
>>> tokens {Imaginary;}
>>> @members {void treat(Object t){}}
>>> 
>>> parse: empty EOF! {treat($empty.tree);};
>>> empty: ->^(Imaginary);
>>> 
>>> However, the generated EmptyParser.java fails to compile because empty() catches RecognitionException, which is never thrown.
>>> 
>>> I am working around this by:
>>> empty: ->^(Imaginary)|Imaginary;
>>> which works because the imaginary token can never be produced by the lexer.
>>> 
>>> Is there some other way i should be going about this?
>>> --
>>> Trevor John Thompson    (425) 246-4023
>>> net: tijet at me.com
>>> Quidquid Latine scriptum sit, altum videtur.
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Fri Jul  1 18:19:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 1 Jul 2011 18:19:05 -0700
Subject: [antlr-interest] empty rule catches unthrown
	RecognitionException
In-Reply-To: <2538C4F8-F7C9-425D-B358-68AD45247748@mac.com>
References: <18536860-7BEC-43B0-97F1-F3EE60F3D97F@mac.com>
	<CA202DED-7DAB-4674-AB47-E796D13F3DB7@cs.usfca.edu>
	<DC5700C8-BD55-4744-9769-993C73274AB9@mac.com>
	<99D847DC-249F-4448-9290-145743DD4371@cs.usfca.edu>
	<2538C4F8-F7C9-425D-B358-68AD45247748@mac.com>
Message-ID: <AE77E982-E50C-4357-8F4C-F597EAEFACD0@cs.usfca.edu>

confirmed. let me check.
Ter
On Jul 1, 2011, at 3:48 PM, Trevor John Thompson wrote:

> java -jar /Users/Local/antlr-master-3.4-beta3-completejar.jar Empty.g
> javac -cp /Users/Local/antlr-master-3.4-beta3-completejar.jar EmptyParser.java
> EmptyParser.java:167: exception org.antlr.runtime.RecognitionException is never thrown in body of corresponding try statement
>        catch (RecognitionException re) {
>        ^
> 1 error
> 
> Likewise "beta4".
> TJ
> 
> On 2011 Jul 1, at 15:35, Terence Parr wrote:
> 
>> should be a beta3 or seomthing there.
>> T
>> On Jul 1, 2011, at 3:34 PM, Trevor John Thompson wrote:
>> 
>>> Presuming that "latest beta" is antlr-3.4rc2-complete.jar, i get:
>>> 
>>> java -jar /Users/Local/antlr-3.4rc2-complete.jar Empty.g
>>> javac -cp /Users/Local/antlr-3.4rc2-complete.jar EmptyParser.java
>>> EmptyParser.java:167: exception org.antlr.runtime.RecognitionException is never thrown in body of corresponding try statement
>>>      catch (RecognitionException re) {
>>>      ^
>>> 1 error
>>> 
>>> On 2011 Jul 1, at 15:12, Terence Parr wrote:
>>> 
>>>> i fixed this in latest beta for 3.4...can you try that?
>>>> Ter
>>>> On Jul 1, 2011, at 3:10 PM, Trevor John Thompson wrote:
>>>> 
>>>>> I have a grammar in which i wish to create an imaginary AST node, and then have an action treat that node. The most straightforward expression i have devised is:
>>>>> grammar Empty;
>>>>> options {output=AST;}
>>>>> tokens {Imaginary;}
>>>>> @members {void treat(Object t){}}
>>>>> 
>>>>> parse: empty EOF! {treat($empty.tree);};
>>>>> empty: ->^(Imaginary);
>>>>> 
>>>>> However, the generated EmptyParser.java fails to compile because empty() catches RecognitionException, which is never thrown.
>>>>> 
>>>>> I am working around this by:
>>>>> empty: ->^(Imaginary)|Imaginary;
>>>>> which works because the imaginary token can never be produced by the lexer.
>>>>> 
>>>>> Is there some other way i should be going about this?
>>>>> --
>>>>> Trevor John Thompson    (425) 246-4023
>>>>> net: tijet at me.com
>>>>> Quidquid Latine scriptum sit, altum videtur.
> 
> 


From aruna.priyadarshini at oracle.com  Sat Jul  2 12:00:16 2011
From: aruna.priyadarshini at oracle.com (aruna.priyadarshini at oracle.com)
Date: Sat, 2 Jul 2011 12:00:16 -0700 (PDT)
Subject: [antlr-interest] Auto Reply: antlr-interest Digest, Vol 80, Issue 2
Message-ID: <c8305989-7a9c-46cc-8493-dcaab9e67aad@default>

I am on leave till 8th July 2011.
For any urgent queries please contact my manager eric.wang at oracle.com.

Thanks,
Aruna

From themightystephen at googlemail.com  Sun Jul  3 07:55:23 2011
From: themightystephen at googlemail.com (Stephen Tuttlebee)
Date: Sun, 03 Jul 2011 15:55:23 +0100
Subject: [antlr-interest] Ambiguous lexer rules
In-Reply-To: <1309511896.64348.YahooMailRC@web111820.mail.gq1.yahoo.com>
References: <1309511896.64348.YahooMailRC@web111820.mail.gq1.yahoo.com>
Message-ID: <4E1082DB.9080507@googlemail.com>

I see your problem. The lexer is independent of the parser -- it doesn't matter what the parser is expecting (i.e. even though the parser is expecting a '[' and then STRING+, the lexer just sees a sequence of characters '[aaa' that are to be grouped into an XSTRING token rather than a '[' token followed by a STRING token of value 'aaa')...the lexer will just produce tokens based on the characters coming in and the lexer rules (and based on other criteria such as choosing the longest match, the first lexer rule that appears, etc., of which I can't remember all the details).

One possible solution could be to use semantic predicates. There's an example of this athttp://www.antlr.org/wiki/display/ANTLR3/1.+Lexer  where in the lexing of XML, a tagMode boolean variable is set whenever opening and closing tags ('<' and'>') are seen. Other lexer rules can then have (gated) semantic predicates which cause themselves to be enabled or disabled depending on whether the predicate (tagMode) was true or false, respectively.

You could try the same thing for your lexer rules for '[' and ']' (currently it doesn't look like you have explicit lexer rules for '[' and ']' -- you would need them if you use this technique), and then ensure the XSTRING rule has a semantic predicate of {!inArray}?=>  (assuming your boolean was called 'inArray'). One of the last chapters in the ANTLR book has some good stuff on semantic predicates (in the context of parsers, but you can use them in lexers too).

An alternative *workaround* to your problem would be to change your XSTRING lexer rule to exclude the ASCII characters '[' and ']'. I think that would work.

Hope that helps,
Stephen


From joel at lolnet.org  Sun Jul  3 09:28:18 2011
From: joel at lolnet.org (=?ISO-8859-1?Q?Jo=EBl_Marty?=)
Date: Sun, 03 Jul 2011 17:28:18 +0100
Subject: [antlr-interest] maven plugin dependencies?
Message-ID: <4E1098A2.202@lolnet.org>

Hi,

I'm encountering a problem when trying to use the antlr plugin for Maven.
The console shows this message when the project is built (I use m2eclipse):

Build errors for rdfizer; 
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to 
execute goal org.antlr:antlr3-maven-plugin:3.3:antlr (default) on 
project rdfizer:
Execution default of goal org.antlr:antlr3-maven-plugin:3.3:antlr 
failed: Plugin org.antlr:antlr3-maven-plugin:3.3 or one of its 
dependencies could not be resolved:
Failed to collect dependencies for org.antlr:antlr3-maven-plugin:jar:3.3 ()

Any idea? I couldn't find any information for that error on the web.

From reginfo_ar at ymail.com  Sun Jul  3 22:56:37 2011
From: reginfo_ar at ymail.com (Fs Cc)
Date: Sun, 3 Jul 2011 22:56:37 -0700 (PDT)
Subject: [antlr-interest] Ambiguous lexer rules
In-Reply-To: <4E1082DB.9080507@googlemail.com>
References: <1309511896.64348.YahooMailRC@web111820.mail.gq1.yahoo.com>
	<4E1082DB.9080507@googlemail.com>
Message-ID: <1309758997.71413.YahooMailRC@web111801.mail.gq1.yahoo.com>

Hi Stephen,

Thank you! Semantic predicates work for me. In fact, the lexer::xstrMode 
and lexer::inArray in following code are used to mimic the parser logic. We need 
them because lexer is run before parser. Is it possible for ANTLR to merge the 
parser and the lexer into a single run? For example: when a parser rule is 
selected to run, ANTLR deduces the selected rule and select the correct lexer 
rule(just like how it select sub parser rules) to parse the raw string, so that 
we can avoid introducing parser logic into lexer.
---------------------------------------------------------------------------------

grammar test;
@lexer::members {
    boolean inArray = false;
    int xstrMode = 0;
}

ARRAY_START 
:{xstrMode == 0}? =>'[' {inArray = true; }
;
ARRAY_END
:{inArray}? => ']'  {inArray = false; }
;
XSTR_TAG : {!inArray}? => 'xstr' {xstrMode = 1;};
XSTR_BEGIN
:{xstrMode == 1}? => (' ' | '\t') { xstrMode = 2; }
;
STRING : ('a'..'z' | 'A'..'Z' | '0'..'9')+;
XSTRING
:{xstrMode == 2}? => '\u0021'..'\u007e'+ {xstrMode = 0; }
;

array : ARRAY_START STRING+ ARRAY_END;
xstr 
:XSTR_TAG XSTR_BEGIN XSTRING;
---------------------------------------------------------------------------------


Thanks,
Fussi



----- Original Message ----
From: Stephen Tuttlebee <themightystephen at googlemail.com>
To: antlr-interest at antlr.org
Sent: Sun, July 3, 2011 10:55:23 PM
Subject: Re: [antlr-interest] Ambiguous lexer rules

I see your problem. The lexer is independent of the parser -- it doesn't matter 
what the parser is expecting (i.e. even though the parser is expecting a '[' and 
then STRING+, the lexer just sees a sequence of characters '[aaa' that are to be 
grouped into an XSTRING token rather than a '[' token followed by a STRING token 
of value 'aaa')...the lexer will just produce tokens based on the characters 
coming in and the lexer rules (and based on other criteria such as choosing the 
longest match, the first lexer rule that appears, etc., of which I can't 
remember all the details).

One possible solution could be to use semantic predicates. There's an example of 
this athttp://www.antlr.org/wiki/display/ANTLR3/1.+Lexer  where in the lexing of 
XML, a tagMode boolean variable is set whenever opening and closing tags ('<' 
and'>') are seen. Other lexer rules can then have (gated) semantic predicates 
which cause themselves to be enabled or disabled depending on whether the 
predicate (tagMode) was true or false, respectively.

You could try the same thing for your lexer rules for '[' and ']' (currently it 
doesn't look like you have explicit lexer rules for '[' and ']' -- you would 
need them if you use this technique), and then ensure the XSTRING rule has a 
semantic predicate of {!inArray}?=>  (assuming your boolean was called 
'inArray'). One of the last chapters in the ANTLR book has some good stuff on 
semantic predicates (in the context of parsers, but you can use them in lexers 
too).

An alternative *workaround* to your problem would be to change your XSTRING 
lexer rule to exclude the ASCII characters '[' and ']'. I think that would work.

Hope that helps,
Stephen


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From qiaomuf at gmail.com  Mon Jul  4 01:56:36 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Mon, 4 Jul 2011 16:56:36 +0800
Subject: [antlr-interest] antlr 3.4 beta 4 (release candidate)
In-Reply-To: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
References: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
Message-ID: <CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>

I fixed my grammar so that ANTLR doesn't spin forever on it. Then
there's a new problem:

attempting LL(1) DFA (d=419) for 632:29: ( DIGIT )?
error(10):  internal error: libbash.g : java.lang.NullPointerException
org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)

ANTLR-3.3 doesn't have that problem. The attachment is my grammar.

On Wed, Jun 29, 2011 at 4:56 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> http://antlr.org/download
>
> a few more things fixed.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
-------------- next part --------------
A non-text attachment was scrubbed...
Name: libbash.g
Type: application/octet-stream
Size: 19450 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110704/c43cc8c3/attachment.obj 

From qiaomuf at gmail.com  Mon Jul  4 02:17:36 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Mon, 4 Jul 2011 17:17:36 +0800
Subject: [antlr-interest] Problem with splitting grammars
Message-ID: <CAPwgOuR-JD=T9zWDZQkXmig7HbraacXKnS58n5yeJUiMy+X89Q@mail.gmail.com>

I have one big grammar that needs to be split to reduce compile time(C
source). For ANTLR 3.1.3 there are two problems:
1. The generated source code may change every time I run ANTLR even if
I don't change the grammar
http://paste.pocoo.org/show/428505/ shows the difference.

2. The comment probably shouldn't tell about the date
I use sed to remove the comment but I don't think it's a good idea.
ANTLR shouldn't generate different source code if I don't change the
grammar. The date information should belong to the property of the
generated files, not the content of these files.

Then I tried ANTLR 3.3 and I got the following error when generating
the source code:
error(10):  internal error: bashast/libbashWalker.g :
java.lang.NullPointerException
org.antlr.codegen.Target.getTokenTypeAsTargetLabel(Target.java:145)
org.antlr.codegen.CodeGenerator.getTokenTypeAsTargetLabel(CodeGenerator.java:858)
org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMachine(ACyclicDFACodeGenerator.java:119)
org.antlr.codegen.ACyclicDFACodeGenerator.genFixedLookaheadDecision(ACyclicDFACodeGenerator.java:47)
org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java:646)
org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1018)
org.antlr.grammar.v2.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1871)
org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1704)
org.antlr.grammar.v2.CodeGenTreeWalker.tree(CodeGenTreeWalker.java:2277)
org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1633)
org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1306)
org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1081)
org.antlr.grammar.v2.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:797)
org.antlr.grammar.v2.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:588)
org.antlr.grammar.v2.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:530)
org.antlr.grammar.v2.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:336)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:430)
org.antlr.Tool.generateRecognizer(Tool.java:642)
org.antlr.Tool.process(Tool.java:455)
org.antlr.Tool.main(Tool.java:89)

Here are my grammars:
https://github.com/qiaomuf/libbash/blob/42193d91c43d12bcc3113336e5e73e74ca679c82/bashast/libbashWalker.g
https://github.com/qiaomuf/libbash/blob/42193d91c43d12bcc3113336e5e73e74ca679c82/bashast/libbashPattern.g

-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From s.barnett-cormack at lancaster.ac.uk  Mon Jul  4 04:21:30 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 04 Jul 2011 12:21:30 +0100
Subject: [antlr-interest] Ambiguous lexer rules
In-Reply-To: <1309758997.71413.YahooMailRC@web111801.mail.gq1.yahoo.com>
References: <1309511896.64348.YahooMailRC@web111820.mail.gq1.yahoo.com>	<4E1082DB.9080507@googlemail.com>
	<1309758997.71413.YahooMailRC@web111801.mail.gq1.yahoo.com>
Message-ID: <4E11A23A.9020005@lancaster.ac.uk>

On 04/07/2011 06:56, Fs Cc wrote:
> Hi Stephen,
>
> Thank you! Semantic predicates work for me. In fact, the lexer::xstrMode
> and lexer::inArray in following code are used to mimic the parser logic. We need
> them because lexer is run before parser. Is it possible for ANTLR to merge the
> parser and the lexer into a single run? For example: when a parser rule is
> selected to run, ANTLR deduces the selected rule and select the correct lexer
> rule(just like how it select sub parser rules) to parse the raw string, so that
> we can avoid introducing parser logic into lexer.

If you really want to do it that way, then you might want to consider 
using some other parser generator than ANTLR; AIUI, ANTLR is quite 
closely wedded to the philosophy of separation of lexical and 
grammatical structure. I've seen very few instances where a language 
actually needs smudging between the steps - usually it can be acheived 
by refactoring, reframing the idea of what lexical elements are used.

Sam

From qiaomuf at gmail.com  Mon Jul  4 07:07:36 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Mon, 4 Jul 2011 22:07:36 +0800
Subject: [antlr-interest] How to prepare the intstream for function call?
Message-ID: <CAPwgOuR-16Lmpz4+qG8pBU30xzsN3OCWw5ooH8nH9hsitWxBfQ@mail.gmail.com>

Hi,

I'm using the C API to implement function call. I've already recorded
the index of the function body and created a new node stream for the
function call. But I find that I have to call istream->size(istream)
before calling istream->seek. Or errors will be reported.
Is it because the input buffer is not ready or anything else? What is
the correct step to reset the index?

-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From jimi at temporal-wave.com  Mon Jul  4 09:04:01 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jul 2011 09:04:01 -0700
Subject: [antlr-interest] Problem with splitting grammars
In-Reply-To: <CAPwgOuR-JD=T9zWDZQkXmig7HbraacXKnS58n5yeJUiMy+X89Q@mail.gmail.com>
References: <CAPwgOuR-JD=T9zWDZQkXmig7HbraacXKnS58n5yeJUiMy+X89Q@mail.gmail.com>
Message-ID: <e025aaaae584d6d48e4603b870bc68b7@mail.gmail.com>

You have it the wrong way around - if your grammar has not changed, then
your build process should not generate it. However, I think that I may
have decided to take out the date sometime after 3.1.3.

If you need to generate smaller C files, then split the grammar up and use
the import x.g, y.g, a.g; functionality.

You might also try 3.4-beta4.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mu Qiao
> Sent: Monday, July 04, 2011 2:18 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] Problem with splitting grammars
>
> I have one big grammar that needs to be split to reduce compile time(C
> source). For ANTLR 3.1.3 there are two problems:
> 1. The generated source code may change every time I run ANTLR even if
> I don't change the grammar http://paste.pocoo.org/show/428505/ shows
> the difference.
>
> 2. The comment probably shouldn't tell about the date I use sed to
> remove the comment but I don't think it's a good idea.
> ANTLR shouldn't generate different source code if I don't change the
> grammar. The date information should belong to the property of the
> generated files, not the content of these files.
>
> Then I tried ANTLR 3.3 and I got the following error when generating
> the source code:
> error(10):  internal error: bashast/libbashWalker.g :
> java.lang.NullPointerException
> org.antlr.codegen.Target.getTokenTypeAsTargetLabel(Target.java:145)
> org.antlr.codegen.CodeGenerator.getTokenTypeAsTargetLabel(CodeGenerator
> .java:858)
> org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMa
> chine(ACyclicDFACodeGenerator.java:119)
> org.antlr.codegen.ACyclicDFACodeGenerator.genFixedLookaheadDecision(ACy
> clicDFACodeGenerator.java:47)
> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java
> :646)
> org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:101
> 8)
> org.antlr.grammar.v2.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1871
> )
> org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1
> 704)
> org.antlr.grammar.v2.CodeGenTreeWalker.tree(CodeGenTreeWalker.java:2277
> )
> org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1
> 633)
> org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.ja
> va:1306)
> org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:108
> 1)
> org.antlr.grammar.v2.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:797)
> org.antlr.grammar.v2.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:588
> )
> org.antlr.grammar.v2.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.ja
> va:530)
> org.antlr.grammar.v2.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:3
> 36)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:430)
> org.antlr.Tool.generateRecognizer(Tool.java:642)
> org.antlr.Tool.process(Tool.java:455)
> org.antlr.Tool.main(Tool.java:89)
>
> Here are my grammars:
> https://github.com/qiaomuf/libbash/blob/42193d91c43d12bcc3113336e5e73e7
> 4ca679c82/bashast/libbashWalker.g
> https://github.com/qiaomuf/libbash/blob/42193d91c43d12bcc3113336e5e73e7
> 4ca679c82/bashast/libbashPattern.g
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Jul  4 09:09:00 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 4 Jul 2011 09:09:00 -0700
Subject: [antlr-interest] How to prepare the intstream for function call?
In-Reply-To: <CAPwgOuR-16Lmpz4+qG8pBU30xzsN3OCWw5ooH8nH9hsitWxBfQ@mail.gmail.com>
References: <CAPwgOuR-16Lmpz4+qG8pBU30xzsN3OCWw5ooH8nH9hsitWxBfQ@mail.gmail.com>
Message-ID: <0201ed199859b7e03fd2d823abb92e38@mail.gmail.com>

Yes, the input stream is not ready. I think that this is 'fixed' in later
releases. However, the idea is that I did not want to test a flag to see
if the istream was ready on every call in to the stream, so you must use a
call that initializes the stream, and then everything else works.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mu Qiao
> Sent: Monday, July 04, 2011 7:08 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] How to prepare the intstream for function
> call?
>
> Hi,
>
> I'm using the C API to implement function call. I've already recorded
> the index of the function body and created a new node stream for the
> function call. But I find that I have to call istream->size(istream)
> before calling istream->seek. Or errors will be reported.
> Is it because the input buffer is not ready or anything else? What is
> the correct step to reset the index?
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Mon Jul  4 13:53:26 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 4 Jul 2011 13:53:26 -0700
Subject: [antlr-interest] antlr 3.4 beta 4 (release candidate)
In-Reply-To: <CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>
References: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
	<CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>
Message-ID: <F8112C11-A59A-4B2A-87C3-66F7658FCA3D@cs.usfca.edu>

Hi. still spins for me. sorry.
Ter
On Jul 4, 2011, at 1:56 AM, Mu Qiao wrote:

> I fixed my grammar so that ANTLR doesn't spin forever on it. Then
> there's a new problem:
> 
> attempting LL(1) DFA (d=419) for 632:29: ( DIGIT )?
> error(10):  internal error: libbash.g : java.lang.NullPointerException
> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.Tool.main(Tool.java:93)
> 
> ANTLR-3.3 doesn't have that problem. The attachment is my grammar.
> 
> On Wed, Jun 29, 2011 at 4:56 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> http://antlr.org/download
>> 
>> a few more things fixed.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> 
> 
> -- 
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
> <libbash.g>


From qiaomuf at gmail.com  Mon Jul  4 17:59:47 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Tue, 5 Jul 2011 08:59:47 +0800
Subject: [antlr-interest] Problem with splitting grammars
In-Reply-To: <e025aaaae584d6d48e4603b870bc68b7@mail.gmail.com>
References: <CAPwgOuR-JD=T9zWDZQkXmig7HbraacXKnS58n5yeJUiMy+X89Q@mail.gmail.com>
	<e025aaaae584d6d48e4603b870bc68b7@mail.gmail.com>
Message-ID: <CAPwgOuQzALGX6p-+PiND1Ajh73_fRaOy_d+H8jZZS8647EnC9w@mail.gmail.com>

On Tue, Jul 5, 2011 at 12:04 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> You have it the wrong way around - if your grammar has not changed, then
> your build process should not generate it.

Yes, I split the grammar and used import x.g, y.g. The problem is if I
change one of any grammar, all of the grammars will be regenerated. Is
there anyway to just generate for what I have changed?

>
> You might also try 3.4-beta4.

Will try it and let you know the result.

>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Mu Qiao
>> Sent: Monday, July 04, 2011 2:18 AM
>> To: antlr-interest Interest
>> Subject: [antlr-interest] Problem with splitting grammars
>>
>> I have one big grammar that needs to be split to reduce compile time(C
>> source). For ANTLR 3.1.3 there are two problems:
>> 1. The generated source code may change every time I run ANTLR even if
>> I don't change the grammar http://paste.pocoo.org/show/428505/ shows
>> the difference.
>>
>> 2. The comment probably shouldn't tell about the date I use sed to
>> remove the comment but I don't think it's a good idea.
>> ANTLR shouldn't generate different source code if I don't change the
>> grammar. The date information should belong to the property of the
>> generated files, not the content of these files.
>>
>> Then I tried ANTLR 3.3 and I got the following error when generating
>> the source code:
>> error(10): ?internal error: bashast/libbashWalker.g :
>> java.lang.NullPointerException
>> org.antlr.codegen.Target.getTokenTypeAsTargetLabel(Target.java:145)
>> org.antlr.codegen.CodeGenerator.getTokenTypeAsTargetLabel(CodeGenerator
>> .java:858)
>> org.antlr.codegen.ACyclicDFACodeGenerator.walkFixedDFAGeneratingStateMa
>> chine(ACyclicDFACodeGenerator.java:119)
>> org.antlr.codegen.ACyclicDFACodeGenerator.genFixedLookaheadDecision(ACy
>> clicDFACodeGenerator.java:47)
>> org.antlr.codegen.CodeGenerator.genLookaheadDecision(CodeGenerator.java
>> :646)
>> org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:101
>> 8)
>> org.antlr.grammar.v2.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:1871
>> )
>> org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1
>> 704)
>> org.antlr.grammar.v2.CodeGenTreeWalker.tree(CodeGenTreeWalker.java:2277
>> )
>> org.antlr.grammar.v2.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1
>> 633)
>> org.antlr.grammar.v2.CodeGenTreeWalker.alternative(CodeGenTreeWalker.ja
>> va:1306)
>> org.antlr.grammar.v2.CodeGenTreeWalker.block(CodeGenTreeWalker.java:108
>> 1)
>> org.antlr.grammar.v2.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:797)
>> org.antlr.grammar.v2.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:588
>> )
>> org.antlr.grammar.v2.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.ja
>> va:530)
>> org.antlr.grammar.v2.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:3
>> 36)
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:430)
>> org.antlr.Tool.generateRecognizer(Tool.java:642)
>> org.antlr.Tool.process(Tool.java:455)
>> org.antlr.Tool.main(Tool.java:89)
>>
>> Here are my grammars:
>> https://github.com/qiaomuf/libbash/blob/42193d91c43d12bcc3113336e5e73e7
>> 4ca679c82/bashast/libbashWalker.g
>> https://github.com/qiaomuf/libbash/blob/42193d91c43d12bcc3113336e5e73e7
>> 4ca679c82/bashast/libbashPattern.g
>>
>> --
>> Best wishes,
>> Mu Qiao
>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From qiaomuf at gmail.com  Mon Jul  4 18:10:37 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Tue, 5 Jul 2011 09:10:37 +0800
Subject: [antlr-interest] antlr 3.4 beta 4 (release candidate)
In-Reply-To: <F8112C11-A59A-4B2A-87C3-66F7658FCA3D@cs.usfca.edu>
References: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
	<CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>
	<F8112C11-A59A-4B2A-87C3-66F7658FCA3D@cs.usfca.edu>
Message-ID: <CAPwgOuRAhx5Xaoz3aP1rcZDS0nNXMUGTVe1cNr5mjv=AU5Kkxg@mail.gmail.com>

There is a rule that might take longer time. But it won't take longer
than 30 seconds to get the error. I used
antlr-master-3.4-beta4-completejar.jar and this is the command I used:
java -classpath antlr-master-3.4-beta4-completejar.jar org.antlr.Tool
-Xwatchconversion libbash.g

On Tue, Jul 5, 2011 at 4:53 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. still spins for me. sorry.
> Ter
> On Jul 4, 2011, at 1:56 AM, Mu Qiao wrote:
>
>> I fixed my grammar so that ANTLR doesn't spin forever on it. Then
>> there's a new problem:
>>
>> attempting LL(1) DFA (d=419) for 632:29: ( DIGIT )?
>> error(10): ?internal error: libbash.g : java.lang.NullPointerException
>> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
>> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
>> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>> org.antlr.Tool.process(Tool.java:468)
>> org.antlr.Tool.main(Tool.java:93)
>>
>> ANTLR-3.3 doesn't have that problem. The attachment is my grammar.
>>
>> On Wed, Jun 29, 2011 at 4:56 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> http://antlr.org/download
>>>
>>> a few more things fixed.
>>>
>>> Ter
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>> --
>> Best wishes,
>> Mu Qiao
>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5 ?3ACC 30B3 0DE4 17B1 57E9
>> <libbash.g>
>
>



-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From costa_basil at yahoo.ca  Tue Jul  5 00:17:28 2011
From: costa_basil at yahoo.ca (Costa Basil)
Date: Tue, 5 Jul 2011 00:17:28 -0700 (PDT)
Subject: [antlr-interest] alternatives to linq LambdaExpression Compile
	method
Message-ID: <35109.68674.qm@web161422.mail.bf1.yahoo.com>

I have a program that has to compile and execute formulas on the fly. I am using 
antlr to build linq expression trees which I then compile using the 
LambdaExpression.Compile() method.

The problem is that this method is far too slow. Are there any other 
alternatives perhaps commercial that would be faster?

Any other suggestions?

Thanks

From james_ladd at hotmail.com  Tue Jul  5 03:18:01 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Tue, 5 Jul 2011 20:18:01 +1000
Subject: [antlr-interest] Line start vs non-line ...
In-Reply-To: <mailman.1.1309719601.11691.antlr-interest@antlr.org>
References: <mailman.1.1309719601.11691.antlr-interest@antlr.org>
Message-ID: <BAY149-w567A5A8B37F659E6F2F359ED5F0@phx.gbl>


Hi All,

I hope this is a simple request to answer.

I have a simple preprocessor I want to write but I can't get the rules right.
I think I am regex challenged.

In simple terms I want to have this:

lines
   :  (lineStartingWithPlus | lineNotStartingWithPlus)*
   ;


If these were rules A and B respectively then ...

+ this line matches A
this line matches B

Please can someone help ?

Rgs, James.
 		 	   		  

From bkiers at gmail.com  Tue Jul  5 03:25:39 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 5 Jul 2011 12:25:39 +0200
Subject: [antlr-interest] Line start vs non-line ...
In-Reply-To: <BAY149-w567A5A8B37F659E6F2F359ED5F0@phx.gbl>
References: <mailman.1.1309719601.11691.antlr-interest@antlr.org>
	<BAY149-w567A5A8B37F659E6F2F359ED5F0@phx.gbl>
Message-ID: <CAOrgODa4fmEF_fi7SDKDifFAR=EU42xksrQM-Cum9t4XEh_mNg@mail.gmail.com>

Hi James,

Something like this would do the trick:

lines
  :  (LineStartingWithPlus | LineNotStartingWithPlus | LineBreak)* EOF
  ;

LineStartingWithPlus
  :  '+' ~('\r' | '\n')*
  ;

LineNotStartingWithPlus
  :  ~'+' ~('\r' | '\n')*
  ;

LineBreak
  :  ('\r'? '\n' | '\r')
  ;


Regards,

Bart.


On Tue, Jul 5, 2011 at 12:18 PM, James Ladd <james_ladd at hotmail.com> wrote:

>
> Hi All,
>
> I hope this is a simple request to answer.
>
> I have a simple preprocessor I want to write but I can't get the rules
> right.
> I think I am regex challenged.
>
> In simple terms I want to have this:
>
> lines
>   :  (lineStartingWithPlus | lineNotStartingWithPlus)*
>   ;
>
>
> If these were rules A and B respectively then ...
>
> + this line matches A
> this line matches B
>
> Please can someone help ?
>
> Rgs, James.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From antlrmen at yahoo.com  Tue Jul  5 05:00:12 2011
From: antlrmen at yahoo.com (Roy Metzger)
Date: Tue, 5 Jul 2011 05:00:12 -0700 (PDT)
Subject: [antlr-interest] same character for multiple rules?
Message-ID: <1309867212.42211.YahooMailNeo@web121105.mail.ne1.yahoo.com>

Hi and Hello to everyone,

I would really appreciate any hints and advices if someone can give my relating to my problem. I would like to know how to deal with the situation where you would use same character for multiple rules/operations. For example in Visual Basic you use '=' for both variable assignment (a=10) and for comparison (if(a=10 then ....).

Clearly, using assignment rule:assignment:

? ID '=' expression;

and later relation rule:
relation:
atom ('=' atom)*;

gives out error like rule relation has non-LL(*) decision due to recursive rule? invocations reachable from alts 1,6.? Resolve by left-factoring or using syntactic predicates or using backtrack=true option.
And, yes, it is clear that antlr can not decide when to use assignment and when comparison, makes sense. But, my question is, how to deal with this? I'm not interested in using different characters for rules(e.x. '==' etc.). Is this where I have to look into the backtracking? Or is there some other way, that I'm not aware of?


Help would be most appreciated,
Lee

From james1018 at gmail.com  Tue Jul  5 05:30:09 2011
From: james1018 at gmail.com (James Reid)
Date: Tue, 5 Jul 2011 08:30:09 -0400
Subject: [antlr-interest] Think I found a bug.
Message-ID: <CAPtNrFZWJF+wuc+HHa7AdyuHdK5LKZbZ_HrFRy5vsHUrMuOpfA@mail.gmail.com>

Hi all,

  I think I found a bug but I want to be sure.  I have a parser grammar that
I run two passes on.  Here are short versions of the rules.



firstpass
  :  (collect_matches
  |  collect_labels
  |  .)*
  ;


script
  :  header? matches* EOF
  ;


When I run the code I use a CommonTokenStream and do the following

CommonTokenStream tokens = new CommonTokenStream(lex);
MyParser parser = new MyParser(tokens);

parser.firstpass();

tokens.reset();

parser.script();


The problem comes when I do the tokens.reset().  If the very first token is
a comment (i.e. on the hidden channel) it is returned in parser.script() and
throws a NoViableAlternativeException because nothing in my grammar is
expecting a comment.  To get around this I do the following...

           //Reset the tokens back to the begining
            tokens.reset();

            //For some reason after the tokens have been buffered up if a
hidden
            //token is the first token it is returned instead getting the
            //first non-hidden token.  This little hack works around that.
            if (tokens.LT(1).getChannel() == Token.HIDDEN_CHANNEL){
                tokens.consume();
            }

            //now we can build the AST
            r=parser.script();

If I consume the hidden token then the token stream points at the next
on-channel token like it is supposed to do.  Is this a bug or am I doing
things wrong?

Thanks,
James

PS:  This is with Antlr 3.3

From sebastien.kirche at gmail.com  Tue Jul  5 06:24:18 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Tue, 5 Jul 2011 15:24:18 +0200
Subject: [antlr-interest] grammar for mixed languages syntax
Message-ID: <CALGPt8acNX+1iio=ut-xHr2biCi2FuAtbKC3RS=G6zNfwBtiHA@mail.gmail.com>

Hi,

I would like to build a grammar for a language that can embed sql
compliant statements.

Basicaly the language is a basic-like case insensitive syntax (with
for .. next, if .. end if classic syntax), but you can also insert
direct sql statement (that must end by semicolon), for example for
selecting data into a variable, or deleting, calling a stored
procedure... whatever. If you wonder what language I am mentioning, it
is the PowerScript language that is used by Sybase's Powerbuilder.

Could you give me some pointers about how to proceed, if that kind of
parsing is possible with antlr ?

Thanks.
-- 
S?bastien Kirche

From eugeny.yakimovitch at gmail.com  Tue Jul  5 06:31:55 2011
From: eugeny.yakimovitch at gmail.com (Yauhen Yakimovich)
Date: Tue, 5 Jul 2011 15:31:55 +0200
Subject: [antlr-interest] grammar for mixed languages syntax
In-Reply-To: <CALGPt8acNX+1iio=ut-xHr2biCi2FuAtbKC3RS=G6zNfwBtiHA@mail.gmail.com>
References: <CALGPt8acNX+1iio=ut-xHr2biCi2FuAtbKC3RS=G6zNfwBtiHA@mail.gmail.com>
Message-ID: <CAEjwHQyZBiF-m=sT08jH=j3xku=x6FhU7PgWAY1HC=0F3+Zp_g@mail.gmail.com>

Hi S?bastien,

What you are trying to build as an interpreter of a language with
dynamical features.
Hence simple preprocessor will not fit.

Try to look for island grammars. Search the example folder for this.


2011/7/5 S?bastien Kirche <sebastien.kirche at gmail.com>:
> Hi,
>
> I would like to build a grammar for a language that can embed sql
> compliant statements.
>
> Basicaly the language is a basic-like case insensitive syntax (with
> for .. next, if .. end if classic syntax), but you can also insert
> direct sql statement (that must end by semicolon), for example for
> selecting data into a variable, or deleting, calling a stored
> procedure... whatever. If you wonder what language I am mentioning, it
> is the PowerScript language that is used by Sybase's Powerbuilder.
>
> Could you give me some pointers about how to proceed, if that kind of
> parsing is possible with antlr ?
>
> Thanks.
> --
> S?bastien Kirche
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
With best regards,
Y.Y.

From sharwell at pixelminegames.com  Tue Jul  5 07:03:55 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 5 Jul 2011 09:03:55 -0500
Subject: [antlr-interest] alternatives to linq LambdaExpression
	Compile	method
In-Reply-To: <35109.68674.qm@web161422.mail.bf1.yahoo.com>
References: <35109.68674.qm@web161422.mail.bf1.yahoo.com>
Message-ID: <01b801cc3b1c$618ebfd0$24ac3f70$@pixelminegames.com>

Hi Costa,

There are three options which I might suggest, with the first two being
vastly preferred to the last. First of all, you should review your current
code to make sure that if a formula gets evaluated multiple times, the
compiled expression (Func<T> delegate) is reused. I've successfully used
that Compile method as part of a fairly expensive finite element computation
program with surprisingly great results. :)

Second, if your expressions are not always the same but can be factored as
in f(x)=3*x and g(x)=2*x, the you can instead create a reusable h(x, y)=x*y
which would have much better results.

If for some reason the above do not work well in your situation, I privately
have a version of ASMJIT written entirely in C# which can directly emit x86
and/or x64 code (without parsing intermediate assembly language files) that
is then called through a delegate. Depending on your needs, I might be able
to work out a commercial license for its use. This library can certainly
produce fast code, but it's extremely difficult both to get correct and to
debug.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Costa Basil
Sent: Tuesday, July 05, 2011 2:17 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] alternatives to linq LambdaExpression Compile
method

I have a program that has to compile and execute formulas on the fly. I am
using antlr to build linq expression trees which I then compile using the
LambdaExpression.Compile() method.

The problem is that this method is far too slow. Are there any other
alternatives perhaps commercial that would be faster?

Any other suggestions?

Thanks

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From betelgeuse at gentoo.org  Tue Jul  5 07:23:11 2011
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Tue, 05 Jul 2011 17:23:11 +0300
Subject: [antlr-interest] antlr 3.4 beta 4 (release candidate)
In-Reply-To: <CAPwgOuRAhx5Xaoz3aP1rcZDS0nNXMUGTVe1cNr5mjv=AU5Kkxg@mail.gmail.com>
References: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
	<CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>
	<F8112C11-A59A-4B2A-87C3-66F7658FCA3D@cs.usfca.edu>
	<CAPwgOuRAhx5Xaoz3aP1rcZDS0nNXMUGTVe1cNr5mjv=AU5Kkxg@mail.gmail.com>
Message-ID: <iuv6pq$ltr$1@dough.gmane.org>

I can reproduce the exception:

attempting LL(1) DFA (d=425) for 639:29: ( DIGIT )?
error(10):  internal error: libbash.g : java.lang.NullPointerException
org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)
make: *** [cgrammar.run] Error 1

real    0m12.480s
user    0m21.972s
sys     0m1.509s

On 05.07.2011 04:10, Mu Qiao wrote:
> There is a rule that might take longer time. But it won't take longer
> than 30 seconds to get the error. I used
> antlr-master-3.4-beta4-completejar.jar and this is the command I used:
> java -classpath antlr-master-3.4-beta4-completejar.jar org.antlr.Tool
> -Xwatchconversion libbash.g
> 
> On Tue, Jul 5, 2011 at 4:53 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi. still spins for me. sorry.
>> Ter
>> On Jul 4, 2011, at 1:56 AM, Mu Qiao wrote:
>>
>>> I fixed my grammar so that ANTLR doesn't spin forever on it. Then
>>> there's a new problem:
>>>
>>> attempting LL(1) DFA (d=419) for 632:29: ( DIGIT )?
>>> error(10):  internal error: libbash.g : java.lang.NullPointerException
>>> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
>>> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
>>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>>> org.antlr.Tool.process(Tool.java:468)
>>> org.antlr.Tool.main(Tool.java:93)
>>>
>>> ANTLR-3.3 doesn't have that problem. The attachment is my grammar.
>>>
>>> On Wed, Jun 29, 2011 at 4:56 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>> http://antlr.org/download
>>>>
>>>> a few more things fixed.
>>>>
>>>> Ter
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>>
>>> --
>>> Best wishes,
>>> Mu Qiao
>>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
>>> <libbash.g>
>>
>>
> 
> 
> 



From sebastien.kirche at gmail.com  Tue Jul  5 08:30:22 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Tue, 5 Jul 2011 17:30:22 +0200
Subject: [antlr-interest] grammar for mixed languages syntax
In-Reply-To: <CAEjwHQyZBiF-m=sT08jH=j3xku=x6FhU7PgWAY1HC=0F3+Zp_g@mail.gmail.com>
References: <CALGPt8acNX+1iio=ut-xHr2biCi2FuAtbKC3RS=G6zNfwBtiHA@mail.gmail.com>
	<CAEjwHQyZBiF-m=sT08jH=j3xku=x6FhU7PgWAY1HC=0F3+Zp_g@mail.gmail.com>
Message-ID: <CALGPt8be3rFhksk6DYSDsUNXAtYHfM3gvVm79Ez9CZ4+hkf26Q@mail.gmail.com>

2011/7/5 Yauhen Yakimovich <eugeny.yakimovitch at gmail.com>:
> Hi S?bastien,
>
> What you are trying to build as an interpreter of a language with
> dynamical features.
> Hence simple preprocessor will not fit.
>
> Try to look for island grammars. Search the example folder for this.

Thanks for the tip.
Indeed the javadoc parsing within the simple language seems similar to
my embedded sql parsing. It will help.

-- 
S?bastien Kirche

From costa_basil at yahoo.ca  Tue Jul  5 08:46:30 2011
From: costa_basil at yahoo.ca (Costa Basil)
Date: Tue, 5 Jul 2011 08:46:30 -0700 (PDT)
Subject: [antlr-interest] alternatives to linq LambdaExpression Compile
	method
In-Reply-To: <01b801cc3b1c$618ebfd0$24ac3f70$@pixelminegames.com>
References: <35109.68674.qm@web161422.mail.bf1.yahoo.com>
	<01b801cc3b1c$618ebfd0$24ac3f70$@pixelminegames.com>
Message-ID: <468456.51713.qm@web161428.mail.bf1.yahoo.com>

Hi, Sam

thank you for your answer.

Just to be clear my  problem is that the Compile method is too slow. The code 
that gets  executed as a result of the compilation is fine.

Costa

From jimi at temporal-wave.com  Tue Jul  5 13:00:41 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 5 Jul 2011 13:00:41 -0700
Subject: [antlr-interest] same character for multiple rules?
In-Reply-To: <1309867212.42211.YahooMailNeo@web121105.mail.ne1.yahoo.com>
References: <1309867212.42211.YahooMailNeo@web121105.mail.ne1.yahoo.com>
Message-ID: <904a617a6b0f263193fd4a6fd35d23c7@mail.gmail.com>

For visual basic you need a much more involved rule:


assignStatement
	: lvalues
		(
			  // Assignments
			  //
			  (
				compoundBinaryOperator
			  )

		 	  expression

		 	  	-> ^(compoundBinaryOperator lvalues
expression)

		 	| // Without any operators, then we must have had
an invocation
		 	  //
				-> ^(CALL lvalues)
		)
	;


compoundBinaryOperator
	: OPCATEQ
	| OPEXPEQ
	| OPMULEQ
	| OPDIVEQ
	| OPIDIVEQ
	| OPPLUSEQ
	| OPMINUSEQ
	| OPSLEQ
	| OPSREQ
	| OPEQ
	;


Then your expression tree can use OPEQ in the correct precedence order as
needed.

I have commercially available grammars for VB.Net and C# if you (or anyone
else) are interested.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Roy Metzger
> Sent: Tuesday, July 05, 2011 5:00 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] same character for multiple rules?
>
> Hi and Hello to everyone,
>
> I would really appreciate any hints and advices if someone can give my
> relating to my problem. I would like to know how to deal with the
> situation where you would use same character for multiple
> rules/operations. For example in Visual Basic you use '=' for both
> variable assignment (a=10) and for comparison (if(a=10 then ....).
>
> Clearly, using assignment rule:assignment:
>
> ? ID '=' expression;
>
> and later relation rule:
> relation:
> atom ('=' atom)*;
>
> gives out error like rule relation has non-LL(*) decision due to
> recursive rule? invocations reachable from alts 1,6.? Resolve by left-
> factoring or using syntactic predicates or using backtrack=true option.
> And, yes, it is clear that antlr can not decide when to use assignment
> and when comparison, makes sense. But, my question is, how to deal with
> this? I'm not interested in using different characters for rules(e.x.
> '==' etc.). Is this where I have to look into the backtracking? Or is
> there some other way, that I'm not aware of?
>
>
> Help would be most appreciated,
> Lee
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at cs.usfca.edu  Tue Jul  5 13:29:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 5 Jul 2011 13:29:21 -0700
Subject: [antlr-interest] antlr 3.4 beta 4 (release candidate)
In-Reply-To: <iuv6pq$ltr$1@dough.gmane.org>
References: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
	<CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>
	<F8112C11-A59A-4B2A-87C3-66F7658FCA3D@cs.usfca.edu>
	<CAPwgOuRAhx5Xaoz3aP1rcZDS0nNXMUGTVe1cNr5mjv=AU5Kkxg@mail.gmail.com>
	<iuv6pq$ltr$1@dough.gmane.org>
Message-ID: <E2E74FA9-B176-4166-9B5D-66D84E77276A@cs.usfca.edu>

ah. right. -Xmx500M brings it right up.

ok, fixed. thanks!

Ter
On Jul 5, 2011, at 7:23 AM, Petteri R?ty wrote:

> I can reproduce the exception:
> 
> attempting LL(1) DFA (d=425) for 639:29: ( DIGIT )?
> error(10):  internal error: libbash.g : java.lang.NullPointerException
> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.Tool.main(Tool.java:93)
> make: *** [cgrammar.run] Error 1
> 
> real    0m12.480s
> user    0m21.972s
> sys     0m1.509s
> 
> On 05.07.2011 04:10, Mu Qiao wrote:
>> There is a rule that might take longer time. But it won't take longer
>> than 30 seconds to get the error. I used
>> antlr-master-3.4-beta4-completejar.jar and this is the command I used:
>> java -classpath antlr-master-3.4-beta4-completejar.jar org.antlr.Tool
>> -Xwatchconversion libbash.g
>> 
>> On Tue, Jul 5, 2011 at 4:53 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>> Hi. still spins for me. sorry.
>>> Ter
>>> On Jul 4, 2011, at 1:56 AM, Mu Qiao wrote:
>>> 
>>>> I fixed my grammar so that ANTLR doesn't spin forever on it. Then
>>>> there's a new problem:
>>>> 
>>>> attempting LL(1) DFA (d=419) for 632:29: ( DIGIT )?
>>>> error(10):  internal error: libbash.g : java.lang.NullPointerException
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
>>>> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
>>>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>>>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>>>> org.antlr.Tool.process(Tool.java:468)
>>>> org.antlr.Tool.main(Tool.java:93)
>>>> 
>>>> ANTLR-3.3 doesn't have that problem. The attachment is my grammar.
>>>> 
>>>> On Wed, Jun 29, 2011 at 4:56 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>> http://antlr.org/download
>>>>> 
>>>>> a few more things fixed.
>>>>> 
>>>>> Ter
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>> 
>>>> 
>>>> 
>>>> 
>>>> --
>>>> Best wishes,
>>>> Mu Qiao
>>>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
>>>> <libbash.g>
>>> 
>>> 
>> 
>> 
>> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dominik.halfkann at googlemail.com  Tue Jul  5 18:06:38 2011
From: dominik.halfkann at googlemail.com (Dominik Halfkann)
Date: Wed, 6 Jul 2011 03:06:38 +0200
Subject: [antlr-interest] input.TokenStream is null
Message-ID: <CANNqLK9BEDE445o-vOBahDTtsOteG8rh9Y7wX=DXv_03cKo4wg@mail.gmail.com>

I'm trying to make a TreeWalker for a tree like this:
input: int x = 3
output AST: ^(VARDEF int x 3)

My parser works just fine and also generates an AST like shown above, but
whenever I want to resolve anything from the AST, like with
$variableType.text, there is allways a NullReferenceException in the
generated C# 2.0 TreeWalker.

My TreeWalker:

tree grammar SGLTreeWalker;
options {

tokenVocab = SGL;

language = 'CSharp2';

}


[...]

compilationUnit
: (statement)+
;

statement
:   variableDefinitionList
;

variableDefinitionList
: ^(VARDEF variableType variableName expression) {
Console.WriteLine($variableType.text); }
;


The problematic generated part looks like this:

Match(input, Token.UP, null);
Console.WriteLine(((variableType1 != null) ? input.TokenStream.ToString(

input.TreeAdaptor.GetTokenStartIndex(variableType1.Start),

input.TreeAdaptor.GetTokenStopIndex(variableType1.Start)) : null));

It turns out that input.TokenStream is null so it throws
the NullReferenceException. I read that this can happen if the
used TreeNodeStream isn't buffered, but I used the CommonTreeNodeStream so
it should be buffered I think. Any idea on what's going wrong?

From qiaomuf at gmail.com  Tue Jul  5 19:16:32 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Wed, 6 Jul 2011 10:16:32 +0800
Subject: [antlr-interest] antlr 3.4 beta 4 (release candidate)
In-Reply-To: <E2E74FA9-B176-4166-9B5D-66D84E77276A@cs.usfca.edu>
References: <70C70841-1722-4250-8A6B-11AAC06C52E0@cs.usfca.edu>
	<CAPwgOuQveSZZAoHdoWqNgrC6n+8rHTTj6D-bWBVQLPds0EkNEw@mail.gmail.com>
	<F8112C11-A59A-4B2A-87C3-66F7658FCA3D@cs.usfca.edu>
	<CAPwgOuRAhx5Xaoz3aP1rcZDS0nNXMUGTVe1cNr5mjv=AU5Kkxg@mail.gmail.com>
	<iuv6pq$ltr$1@dough.gmane.org>
	<E2E74FA9-B176-4166-9B5D-66D84E77276A@cs.usfca.edu>
Message-ID: <CAPwgOuQK5A11-3qh+JL8YxaTcuFWDTHyg6D=gGJaa=AAL7eN7w@mail.gmail.com>

I'm not sure if this problem is related to antlr or the c runtime.
I've already fixed the code for the input stream change which Jim
mentioned in another email. But when I compile the generated code, I
get a lot of errors like the following:
libbashLexer.cpp:xxxx:xx: error: '_empty' was not declared in this scope
libbashParser.cpp:xxxx:xx: error: '_empty' was not declared in this scope
And some errors like:
libbashParser.cpp:xxxx:xx: error: 'FOLLOW_set_in_flcomment420' was not
declared in this scope

My C runtime is 3.4-beta4.

On Wed, Jul 6, 2011 at 4:29 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> ah. right. -Xmx500M brings it right up.
>
> ok, fixed. thanks!
>
> Ter
> On Jul 5, 2011, at 7:23 AM, Petteri R?ty wrote:
>
>> I can reproduce the exception:
>>
>> attempting LL(1) DFA (d=425) for 639:29: ( DIGIT )?
>> error(10): ?internal error: libbash.g : java.lang.NullPointerException
>> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
>> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
>> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
>> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>> org.antlr.Tool.process(Tool.java:468)
>> org.antlr.Tool.main(Tool.java:93)
>> make: *** [cgrammar.run] Error 1
>>
>> real ? ?0m12.480s
>> user ? ?0m21.972s
>> sys ? ? 0m1.509s
>>
>> On 05.07.2011 04:10, Mu Qiao wrote:
>>> There is a rule that might take longer time. But it won't take longer
>>> than 30 seconds to get the error. I used
>>> antlr-master-3.4-beta4-completejar.jar and this is the command I used:
>>> java -classpath antlr-master-3.4-beta4-completejar.jar org.antlr.Tool
>>> -Xwatchconversion libbash.g
>>>
>>> On Tue, Jul 5, 2011 at 4:53 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>> Hi. still spins for me. sorry.
>>>> Ter
>>>> On Jul 4, 2011, at 1:56 AM, Mu Qiao wrote:
>>>>
>>>>> I fixed my grammar so that ANTLR doesn't spin forever on it. Then
>>>>> there's a new problem:
>>>>>
>>>>> attempting LL(1) DFA (d=419) for 632:29: ( DIGIT )?
>>>>> error(10): ?internal error: libbash.g : java.lang.NullPointerException
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:5250)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3981)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.ebnf(CodeGenTreeWalker.java:4878)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.element(CodeGenTreeWalker.java:3967)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:3753)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.block(CodeGenTreeWalker.java:3125)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:2379)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1534)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1438)
>>>>> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:506)
>>>>> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
>>>>> org.antlr.Tool.generateRecognizer(Tool.java:655)
>>>>> org.antlr.Tool.process(Tool.java:468)
>>>>> org.antlr.Tool.main(Tool.java:93)
>>>>>
>>>>> ANTLR-3.3 doesn't have that problem. The attachment is my grammar.
>>>>>
>>>>> On Wed, Jun 29, 2011 at 4:56 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>>>>> http://antlr.org/download
>>>>>>
>>>>>> a few more things fixed.
>>>>>>
>>>>>> Ter
>>>>>>
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>>
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Best wishes,
>>>>> Mu Qiao
>>>>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5 ?3ACC 30B3 0DE4 17B1 57E9
>>>>> <libbash.g>
>>>>
>>>>
>>>
>>>
>>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From parrt at cs.usfca.edu  Wed Jul  6 10:57:58 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jul 2011 10:57:58 -0700
Subject: [antlr-interest] Think I found a bug.
In-Reply-To: <CAPtNrFZWJF+wuc+HHa7AdyuHdK5LKZbZ_HrFRy5vsHUrMuOpfA@mail.gmail.com>
References: <CAPtNrFZWJF+wuc+HHa7AdyuHdK5LKZbZ_HrFRy5vsHUrMuOpfA@mail.gmail.com>
Message-ID: <6362CD54-7586-42EA-A0BC-283FE80A2FC5@cs.usfca.edu>

Hi James. ack! i think reset() should call

skipOffTokenChannels()

Can you override reset to call super.reset() then skipOffTokenChannels() and see if that works?  If so, i can fix for 3.4
Ter
On Jul 5, 2011, at 5:30 AM, James Reid wrote:

> Hi all,
> 
>  I think I found a bug but I want to be sure.  I have a parser grammar that
> I run two passes on.  Here are short versions of the rules.
> 
> 
> 
> firstpass
>  :  (collect_matches
>  |  collect_labels
>  |  .)*
>  ;
> 
> 
> script
>  :  header? matches* EOF
>  ;
> 
> 
> When I run the code I use a CommonTokenStream and do the following
> 
> CommonTokenStream tokens = new CommonTokenStream(lex);
> MyParser parser = new MyParser(tokens);
> 
> parser.firstpass();
> 
> tokens.reset();
> 
> parser.script();
> 
> 
> The problem comes when I do the tokens.reset().  If the very first token is
> a comment (i.e. on the hidden channel) it is returned in parser.script() and
> throws a NoViableAlternativeException because nothing in my grammar is
> expecting a comment.  To get around this I do the following...
> 
>           //Reset the tokens back to the begining
>            tokens.reset();
> 
>            //For some reason after the tokens have been buffered up if a
> hidden
>            //token is the first token it is returned instead getting the
>            //first non-hidden token.  This little hack works around that.
>            if (tokens.LT(1).getChannel() == Token.HIDDEN_CHANNEL){
>                tokens.consume();
>            }
> 
>            //now we can build the AST
>            r=parser.script();
> 
> If I consume the hidden token then the token stream points at the next
> on-channel token like it is supposed to do.  Is this a bug or am I doing
> things wrong?
> 
> Thanks,
> James
> 
> PS:  This is with Antlr 3.3
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sebastien.kirche at gmail.com  Wed Jul  6 12:19:39 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Wed, 6 Jul 2011 21:19:39 +0200
Subject: [antlr-interest] left recursion removal
Message-ID: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>

Hi,

the language for which I am trying to build the grammar has 2 flavors
of if-then-else constructs
- a single line : if <condition> then <statement> [else <statement>]
- a multi line : if <condition> then <statements> [else <statements>] end if

I have defined the following (partial) :

codeBlock
	:	(compoundStatement)*
	;

compoundStatement
	:	(
			ifStatement
		|	singleStatement
		) (';' | EOL)
	;
	
singleStatement
	:	localVariableDeclaration
	|	funCall
	|	'return' expression
	;

ifStatement
	:	singleLineIf
	|	multiLineIf
	;

singleLineIf
	:	'if' expression 'then' singleStatement EOL
	;

multiLineIf
	:	'if' expression 'then' codeBlock 'end if'
	;


I understand why the naive ifStatement fails with the following "
[fatal] rule ifStatement has non-LL(*) decision due to recursive rule
invocations reachable from alts 1,2.  Resolve by left-factoring or
using syntactic predicates or using backtrack=true option."

I would like to avoid general backtracking, so after searching for a
while and reading the article
http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar
I have tried first

ifStatement
	:	'if' expression 'then' (singleStatement EOL)=> singleLineIf
	| 	multiLineIf
	;

or

ifStatement
	:	'if' expression 'then' (singleStatement EOL | codeBlock 'end if')
	;

But they fail both with the same fatality.
How this case should be processed ?
-- 
S?bastien Kirche

From jimi at temporal-wave.com  Wed Jul  6 14:27:39 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jul 2011 14:27:39 -0700
Subject: [antlr-interest] left recursion removal
In-Reply-To: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
Message-ID: <fc73d76295d104694253b4775b459791@mail.gmail.com>

What language? This is usually distinguished by the fact that multi
statement blocks must begin on a new line after THEN or ELSE. VB.Net for
instance.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of S?bastien Kirche
> Sent: Wednesday, July 06, 2011 12:20 PM
> To: antlr-interest
> Subject: [antlr-interest] left recursion removal
>
> Hi,
>
> the language for which I am trying to build the grammar has 2 flavors
> of if-then-else constructs
> - a single line : if <condition> then <statement> [else <statement>]
> - a multi line : if <condition> then <statements> [else <statements>]
> end if
>
> I have defined the following (partial) :
>
> codeBlock
> 	:	(compoundStatement)*
> 	;
>
> compoundStatement
> 	:	(
> 			ifStatement
> 		|	singleStatement
> 		) (';' | EOL)
> 	;
>
> singleStatement
> 	:	localVariableDeclaration
> 	|	funCall
> 	|	'return' expression
> 	;
>
> ifStatement
> 	:	singleLineIf
> 	|	multiLineIf
> 	;
>
> singleLineIf
> 	:	'if' expression 'then' singleStatement EOL
> 	;
>
> multiLineIf
> 	:	'if' expression 'then' codeBlock 'end if'
> 	;
>
>
> I understand why the naive ifStatement fails with the following "
> [fatal] rule ifStatement has non-LL(*) decision due to recursive rule
> invocations reachable from alts 1,2.  Resolve by left-factoring or
> using syntactic predicates or using backtrack=true option."
>
> I would like to avoid general backtracking, so after searching for a
> while and reading the article
> http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtrack
> ing+from+your+grammar
> I have tried first
>
> ifStatement
> 	:	'if' expression 'then' (singleStatement EOL)=>
singleLineIf
> 	| 	multiLineIf
> 	;
>
> or
>
> ifStatement
> 	:	'if' expression 'then' (singleStatement EOL | codeBlock
'end
> if')
> 	;
>
> But they fail both with the same fatality.
> How this case should be processed ?
> --
> S?bastien Kirche
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From james_ladd at hotmail.com  Wed Jul  6 14:41:41 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Thu, 7 Jul 2011 07:41:41 +1000
Subject: [antlr-interest] Lines that don't match a rule ...
In-Reply-To: <mailman.1.1309978802.24193.antlr-interest@antlr.org>
References: <mailman.1.1309978802.24193.antlr-interest@antlr.org>
Message-ID: <BAY149-w32B3DDCD6F82F6E204DDF9ED5E0@phx.gbl>


Hi All,

I hope I can get a little help on the grammar I have below.
It works to a degree but I'm having trouble with some edge cases and that is
stressing me a little.

When I write something like the following I get the right response - sequence of tokens.

Im putting '\n' where I would have new lines.

\n
+ foo\n
\n

What I can't seem to do is put in a rule that matches a line that doesn't start with '+' or '-'
I get a no viable Alt Exception with all that I try.


My goal is to be able to detect lines starting with a '+' or a '-' followed by a messagePattern.
And lines NOT starting with a '+' or a '-'.  The grammar below does not contain any rules
for this, because I can't get them to work.

Please help

Rgs, James.


grammar Preprocessor;

options {
  language = Java;
}

@header {
  package compiler;

}

@lexer::header {
  package compiler;
}

lines
  : (lineBreak | messagePattern)* EOF
  ;

messagePattern
  : ('+' | '-') (unarySelector | keywordSelector | binarySelector)

  ;

unarySelector
  : NAME
  ;

keywordSelector
  : (KEYWORD NAME)+
  ;
  
binarySelector
  : BINARY_SYMBOL NAME
  ;

lineBreak
  : LINE_BREAK  ;

LINE_BREAK: ('\r'? '\n' | '\r');

NAME: ('a'..'z' | 'A'..'Z')('a'..'z' | 'A'..'Z' | '0'..'9')*;
KEYWORD: NAME':';
BINARY_SYMBOL: ('~'|'!'|'@'|'%'|'&'|'*'|'-'|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',') ('~'|'!'|'@'|'%'|'&'|'*'|'-'|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',')*;

 		 	   		  

From jbb at acm.org  Wed Jul  6 15:14:16 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 06 Jul 2011 18:14:16 -0400
Subject: [antlr-interest] left recursion removal
In-Reply-To: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
Message-ID: <1309990456.23994.21.camel@gecko>

Greetings!

On Wed, 2011-07-06 at 21:19 +0200, S?bastien Kirche wrote:
> Hi,
> 
> the language for which I am trying to build the grammar has 2 flavors
> of if-then-else constructs
> - a single line : if <condition> then <statement> [else <statement>]
> - a multi line : if <condition> then <statements> [else <statements>] end if
> 
> I have defined the following (partial) :
> 
> codeBlock
> 	:	(compoundStatement)*
> 	;
> 
> compoundStatement
> 	:	(
> 			ifStatement
> 		|	singleStatement
> 		) (';' | EOL)
> 	;
> 	
> singleStatement
> 	:	localVariableDeclaration
> 	|	funCall
> 	|	'return' expression
> 	;
> 
> ifStatement
> 	:	singleLineIf
> 	|	multiLineIf
> 	;
> 
> singleLineIf
> 	:	'if' expression 'then' singleStatement EOL
> 	;
> 
> multiLineIf
> 	:	'if' expression 'then' codeBlock 'end if'
> 	;
> 
> 
> I understand why the naive ifStatement fails with the following "
> [fatal] rule ifStatement has non-LL(*) decision due to recursive rule
> invocations reachable from alts 1,2.  Resolve by left-factoring or
> using syntactic predicates or using backtrack=true option."

unable to reproduce.

given your admittedly partial grammar, i tried to construct a complete
example by adding the missing elements and creating an AST (so i could
know the resultant parse).

my test rig is attached.

it runs without error when Tool'd, compiled, and executed from the
command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and the
Antlr version from the antlr-3.4-complete.jar file).

Please try to post the *smallest* yet *complete* example of your
problem.

Hope this helps...
   -jbb

> 
> I would like to avoid general backtracking, so after searching for a
> while and reading the article
> http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar
> I have tried first
> 
> ifStatement
> 	:	'if' expression 'then' (singleStatement EOL)=> singleLineIf
> 	| 	multiLineIf
> 	;
> 
> or
> 
> ifStatement
> 	:	'if' expression 'then' (singleStatement EOL | codeBlock 'end if')
> 	;
> 
> But they fail both with the same fatality.
> How this case should be processed ?


-------------- next part --------------
grammar Test;

options {
   output = AST;
   ASTLabelType = CommonTree;
}

tokens { SINGLE; MULTI; } // imaginary tokens go here

@members {
   private static final String [] x = new String[] {
      "local x\n",
      "if x then return 1\n\n",
      "if x then if y then return 1\n\nend if\n",
      "local x;if x then return 1\n;",
  };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to parse:`"+x[i]+"`");

            TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);
            TestParser parser = new TestParser(tokens);
            TestParser.test_return p_result = parser.test();

            // System.out.format("the token stream:\%n");
            // for( int j = 0; j < tokens.size(); ++j ) {
            //    Token token = tokens.get(j);
            //    System.out.format("\%d: type = \%s, text = `\%s`\%n",
            //                      j,
            //                      tokenNames[token.getType()],
            //                      token.getText());
            // }

            CommonTree ast = p_result.tree;
            if( ast == null ) {
               System.out.println("resultant tree: is NULL");
            } else {
               System.out.println("resultant tree: " + ast.toStringTree());
            }
            System.out.println();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

test : codeBlock EOF! ;

codeBlock
        :       (compoundStatement)*
        ;

compoundStatement
        :       (
                        ifStatement
                |       singleStatement
                ) (';' | EOL)
        ;
        
singleStatement
        :       localVariableDeclaration
        |       funCall
        |       'return'^ expression
        ;

ifStatement
        :       singleLineIf
        |       multiLineIf
        ;

singleLineIf
        :       'if' expression 'then' singleStatement EOL
      -> ^(SINGLE expression singleStatement)
        ;

multiLineIf
        :       'if' expression 'then' codeBlock 'end if'
      -> ^(MULTI expression codeBlock)
        ;

localVariableDeclaration : 'local'^ ID+ ;
funCall : ID '('^ args? ')'! ;
args : expression (','^ expression)* ;
expression : term (op^ term)* ;
term : ID | NUMBER ;
op : '+' | '-' | '*' | '/' ;

EOL : '\r'? '\n' ;

WS : (' ' | '\t')+ { skip(); };

ID : LETTER ( LETTER | DIGIT )* ;

NUMBER : DIGIT+ ;

fragment LETTER : ('a'..'z')|('A'..'Z') ;
fragment DIGIT : '0'..'9' ;

From james1018 at gmail.com  Wed Jul  6 16:15:59 2011
From: james1018 at gmail.com (James Reid)
Date: Wed, 6 Jul 2011 19:15:59 -0400
Subject: [antlr-interest] Think I found a bug.
In-Reply-To: <6362CD54-7586-42EA-A0BC-283FE80A2FC5@cs.usfca.edu>
References: <CAPtNrFZWJF+wuc+HHa7AdyuHdK5LKZbZ_HrFRy5vsHUrMuOpfA@mail.gmail.com>
	<6362CD54-7586-42EA-A0BC-283FE80A2FC5@cs.usfca.edu>
Message-ID: <CAPtNrFbfvCY_f3hLTR62RqEh+N-uFfiZdrzJckmUnuxNqzbBuA@mail.gmail.com>

This worked...

@Override
    public void reset() {
        super.reset();
        p = skipOffTokenChannels(0);
    }

Glad I could contribute in some small way.

James

On Wed, Jul 6, 2011 at 1:57 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi James. ack! i think reset() should call
>
> skipOffTokenChannels()
>
> Can you override reset to call super.reset() then skipOffTokenChannels()
> and see if that works?  If so, i can fix for 3.4
> Ter
> On Jul 5, 2011, at 5:30 AM, James Reid wrote:
>
> > Hi all,
> >
> >  I think I found a bug but I want to be sure.  I have a parser grammar
> that
> > I run two passes on.  Here are short versions of the rules.
> >
> >
> >
> > firstpass
> >  :  (collect_matches
> >  |  collect_labels
> >  |  .)*
> >  ;
> >
> >
> > script
> >  :  header? matches* EOF
> >  ;
> >
> >
> > When I run the code I use a CommonTokenStream and do the following
> >
> > CommonTokenStream tokens = new CommonTokenStream(lex);
> > MyParser parser = new MyParser(tokens);
> >
> > parser.firstpass();
> >
> > tokens.reset();
> >
> > parser.script();
> >
> >
> > The problem comes when I do the tokens.reset().  If the very first token
> is
> > a comment (i.e. on the hidden channel) it is returned in parser.script()
> and
> > throws a NoViableAlternativeException because nothing in my grammar is
> > expecting a comment.  To get around this I do the following...
> >
> >           //Reset the tokens back to the begining
> >            tokens.reset();
> >
> >            //For some reason after the tokens have been buffered up if a
> > hidden
> >            //token is the first token it is returned instead getting the
> >            //first non-hidden token.  This little hack works around that.
> >            if (tokens.LT(1).getChannel() == Token.HIDDEN_CHANNEL){
> >                tokens.consume();
> >            }
> >
> >            //now we can build the AST
> >            r=parser.script();
> >
> > If I consume the hidden token then the token stream points at the next
> > on-channel token like it is supposed to do.  Is this a bug or am I doing
> > things wrong?
> >
> > Thanks,
> > James
> >
> > PS:  This is with Antlr 3.3
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From sebastien.kirche at gmail.com  Wed Jul  6 16:27:33 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 7 Jul 2011 01:27:33 +0200
Subject: [antlr-interest] left recursion removal
In-Reply-To: <1309990456.23994.21.camel@gecko>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
Message-ID: <CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>

Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> Greetings!
>
> [...]
>
> unable to reproduce.
>
> given your admittedly partial grammar, i tried to construct a complete
> example by adding the missing elements and creating an AST (so i could
> know the resultant parse).
>
> my test rig is attached.
>
> it runs without error when Tool'd, compiled, and executed from the
> command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and the
> Antlr version from the antlr-3.4-complete.jar file).
>
> Please try to post the *smallest* yet *complete* example of your
> problem.

Sorry for not having posted a more complete code before, I though that
should have been enough...

I have worked further on my grammar, with trying to define more
precisely what an expression should be, with operator precedence. This
made me rewrite the singleStatement by moving the funCall  rule to the
primary rule. But my problem about the if-then-else construct is not
gone.

I have stripped down my grammar, keeping only the expression and
subsequent rules, removed all that define loops, switches, etc.
Given that simplified grammar, the following script should pass the
parsing, but it can't yet :

---------------------------------------
string s1, s2

if s1='42' then s2='421'

if s2='421' then
	string s3
	s3='123'
else
	string s4
	s4='666'
end if

---------------------------------------

Also, to Jim Idle : the language I would be able to parse is
Powerbuilder. You can see it as a sort of basic, while it accepts
syntax like i++ or s += 'foo' He has also the ability to accept inline
sql statements... I tried to play on the EndOfLine delimiter to handle
the two if-then-else syntaxes but without success.

-- 
S?bastien Kirche
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pbifthenelse.g
Type: application/octet-stream
Size: 2646 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110707/4b4433d8/attachment.obj 

From jimi at temporal-wave.com  Wed Jul  6 16:30:52 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jul 2011 16:30:52 -0700
Subject: [antlr-interest] Lines that don't match a rule ...
In-Reply-To: <BAY149-w32B3DDCD6F82F6E204DDF9ED5E0@phx.gbl>
References: <mailman.1.1309978802.24193.antlr-interest@antlr.org>
	<BAY149-w32B3DDCD6F82F6E204DDF9ED5E0@phx.gbl>
Message-ID: <6556c9d271c906dfb308bb73f0e8e262@mail.gmail.com>

Try:

lines
  : (messagePattern LINE_BREAK)* EOF
  ;

messagePattern
  : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
  | { while (input.LA(1) != LINE_BREAK && input.LA(1) != EOF)
input.consume(); }
  ;

This will just eat the lines that don't


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of James Ladd
> Sent: Wednesday, July 06, 2011 2:42 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lines that don't match a rule ...
>
>
> Hi All,
>
> I hope I can get a little help on the grammar I have below.
> It works to a degree but I'm having trouble with some edge cases and
> that is stressing me a little.
>
> When I write something like the following I get the right response -
> sequence of tokens.
>
> Im putting '\n' where I would have new lines.
>
> \n
> + foo\n
> \n
>
> What I can't seem to do is put in a rule that matches a line that
> doesn't start with '+' or '-'
> I get a no viable Alt Exception with all that I try.
>
>
> My goal is to be able to detect lines starting with a '+' or a '-'
> followed by a messagePattern.
> And lines NOT starting with a '+' or a '-'.  The grammar below does not
> contain any rules for this, because I can't get them to work.
>
> Please help
>
> Rgs, James.
>
>
> grammar Preprocessor;
>
> options {
>   language = Java;
> }
>
> @header {
>   package compiler;
>
> }
>
> @lexer::header {
>   package compiler;
> }
>
> lines
>   : (lineBreak | messagePattern)* EOF
>   ;
>
> messagePattern
>   : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
>
>   ;
>
> unarySelector
>   : NAME
>   ;
>
> keywordSelector
>   : (KEYWORD NAME)+
>   ;
>
> binarySelector
>   : BINARY_SYMBOL NAME
>   ;
>
> lineBreak
>   : LINE_BREAK  ;
>
> LINE_BREAK: ('\r'? '\n' | '\r');
>
> NAME: ('a'..'z' | 'A'..'Z')('a'..'z' | 'A'..'Z' | '0'..'9')*;
> KEYWORD: NAME':';
> BINARY_SYMBOL: ('~'|'!'|'@'|'%'|'&'|'*'|'-
> '|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',') ('~'|'!'|'@'|'%'|'&'|'*'|'-
> '|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',')*;
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jul  6 16:40:06 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jul 2011 16:40:06 -0700
Subject: [antlr-interest] left recursion removal
In-Reply-To: <CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
Message-ID: <f957627cd66bd58cdc0ac4c81c8c6234@mail.gmail.com>

yes - I pretty sure that you need to pass in the EOL token to the parser
for powerbuilder script to parse (it is pretty crummy but there is a lot
of it out there). Here is a snippet from my VB.Net grammar which allows
the various combinations. When you build the AST, it does not need to
distinguish between single and multi lines.

Also, do not worry about these things until you have the full expression
tree working as that will sometimes make you say "Ahhhhhgggh, now I have
to rework all my statements. Do:

1) Build the lexer, thinking ahead a bit about the parser;
2) Build the expression tree and generate the AST for it;
3) Build the language top down (though bottom up works too);

Or you could pay me to do it as I have no work on right now ;-) boo hoo.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of S?bastien Kirche
> Sent: Wednesday, July 06, 2011 4:28 PM
> To: John B. Brodie
> Cc: antlr-interest
> Subject: Re: [antlr-interest] left recursion removal
>
> Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > Greetings!
> >
> > [...]
> >
> > unable to reproduce.
> >
> > given your admittedly partial grammar, i tried to construct a
> complete
> > example by adding the missing elements and creating an AST (so i
> could
> > know the resultant parse).
> >
> > my test rig is attached.
> >
> > it runs without error when Tool'd, compiled, and executed from the
> > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and
> the
> > Antlr version from the antlr-3.4-complete.jar file).
> >
> > Please try to post the *smallest* yet *complete* example of your
> > problem.
>
> Sorry for not having posted a more complete code before, I though that
> should have been enough...
>
> I have worked further on my grammar, with trying to define more
> precisely what an expression should be, with operator precedence. This
> made me rewrite the singleStatement by moving the funCall  rule to the
> primary rule. But my problem about the if-then-else construct is not
> gone.
>
> I have stripped down my grammar, keeping only the expression and
> subsequent rules, removed all that define loops, switches, etc.
> Given that simplified grammar, the following script should pass the
> parsing, but it can't yet :
>
> ---------------------------------------
> string s1, s2
>
> if s1='42' then s2='421'
>
> if s2='421' then
> 	string s3
> 	s3='123'
> else
> 	string s4
> 	s4='666'
> end if
>
> ---------------------------------------
>
> Also, to Jim Idle : the language I would be able to parse is
> Powerbuilder. You can see it as a sort of basic, while it accepts
> syntax like i++ or s += 'foo' He has also the ability to accept inline
> sql statements... I tried to play on the EndOfLine delimiter to handle
> the two if-then-else syntaxes but without success.
>
> --
> S?bastien Kirche

From jimi at temporal-wave.com  Wed Jul  6 16:42:16 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 6 Jul 2011 16:42:16 -0700
Subject: [antlr-interest] left recursion removal
In-Reply-To: <CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
Message-ID: <5fecdc401ad60835d82fdc1bc3cd50d1@mail.gmail.com>

With the example this time:


ifStatement
	: IF e=expression
		(
			  t=THEN
			  	(
			  	  		// Single line IF
statement as the last token was not a NL
			  	  		//
			  	  		s1=statements
((ELSE)=>ELSE s2=statements)?

						-> {$s2.tree == null}?
^(IFLINE $e ^(THEN $s1))
						->
^(IFLINE $e ^(THEN $s1) ^(ELSE $s2*))

			  	  | (NL|COLON)+

			  	  	// We discovered a NL token, hence
we process
			  	    // a block If here as it has to be a
block when the line with
			  	    // the IF on it has a NL before the
first statement.
			  	    //
			  	    ib=ifBlock

			  	    	-> ^(IF $e $ib)
			  	)

			| (NL|COLON)+

			  // We did not see a THEN clause, but it is
optional on block IF statements
			  // (which is a bit silly, but a left over from
VB 1 I suspect. Hence we process
			  // a block If here.
			  //
			  ib=ifBlock

			  		-> ^(IF $e $ib)
		)
	;

ifBlock
	: 		tb=block

	  		(eib+=elseIfStatement)*

	 		(
	 			  ec=elseClause		// Else Clause
handles END IF
				| END IF
			)

		->	^(THEN $tb?) $eib* $ec?
	;

elseClause
	: 	ELSE^ 	(
					  (NL!|COLON!)+ block END! IF!
					| statement
				)
	;


elseIfStatement
	: ELSEIF e=expression THEN? (NL|COLON)+ b=block

		-> ^(ELSEIF $e $b?)
	;

Where 'block' is one or more statements (might need zero or more for
powerbuilder).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of S?bastien Kirche
> Sent: Wednesday, July 06, 2011 4:28 PM
> To: John B. Brodie
> Cc: antlr-interest
> Subject: Re: [antlr-interest] left recursion removal
>
> Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > Greetings!
> >
> > [...]
> >
> > unable to reproduce.
> >
> > given your admittedly partial grammar, i tried to construct a
> complete
> > example by adding the missing elements and creating an AST (so i
> could
> > know the resultant parse).
> >
> > my test rig is attached.
> >
> > it runs without error when Tool'd, compiled, and executed from the
> > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and
> the
> > Antlr version from the antlr-3.4-complete.jar file).
> >
> > Please try to post the *smallest* yet *complete* example of your
> > problem.
>
> Sorry for not having posted a more complete code before, I though that
> should have been enough...
>
> I have worked further on my grammar, with trying to define more
> precisely what an expression should be, with operator precedence. This
> made me rewrite the singleStatement by moving the funCall  rule to the
> primary rule. But my problem about the if-then-else construct is not
> gone.
>
> I have stripped down my grammar, keeping only the expression and
> subsequent rules, removed all that define loops, switches, etc.
> Given that simplified grammar, the following script should pass the
> parsing, but it can't yet :
>
> ---------------------------------------
> string s1, s2
>
> if s1='42' then s2='421'
>
> if s2='421' then
> 	string s3
> 	s3='123'
> else
> 	string s4
> 	s4='666'
> end if
>
> ---------------------------------------
>
> Also, to Jim Idle : the language I would be able to parse is
> Powerbuilder. You can see it as a sort of basic, while it accepts
> syntax like i++ or s += 'foo' He has also the ability to accept inline
> sql statements... I tried to play on the EndOfLine delimiter to handle
> the two if-then-else syntaxes but without success.
>
> --
> S?bastien Kirche

From parrt at cs.usfca.edu  Wed Jul  6 16:51:43 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 6 Jul 2011 16:51:43 -0700
Subject: [antlr-interest] Think I found a bug.
In-Reply-To: <CAPtNrFbfvCY_f3hLTR62RqEh+N-uFfiZdrzJckmUnuxNqzbBuA@mail.gmail.com>
References: <CAPtNrFZWJF+wuc+HHa7AdyuHdK5LKZbZ_HrFRy5vsHUrMuOpfA@mail.gmail.com>
	<6362CD54-7586-42EA-A0BC-283FE80A2FC5@cs.usfca.edu>
	<CAPtNrFbfvCY_f3hLTR62RqEh+N-uFfiZdrzJckmUnuxNqzbBuA@mail.gmail.com>
Message-ID: <2804C178-36DD-4203-A1BE-4640612C1C99@cs.usfca.edu>

tanx. fixed for 3.4
Ter
On Jul 6, 2011, at 4:15 PM, James Reid wrote:

> This worked...
> 
> @Override
>     public void reset() {
>         super.reset();
>         p = skipOffTokenChannels(0);
>     }
> 
> Glad I could contribute in some small way.
> 
> James
> 
> On Wed, Jul 6, 2011 at 1:57 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi James. ack! i think reset() should call
> 
> skipOffTokenChannels()
> 
> Can you override reset to call super.reset() then skipOffTokenChannels() and see if that works?  If so, i can fix for 3.4
> Ter
> On Jul 5, 2011, at 5:30 AM, James Reid wrote:
> 
> > Hi all,
> >
> >  I think I found a bug but I want to be sure.  I have a parser grammar that
> > I run two passes on.  Here are short versions of the rules.
> >
> >
> >
> > firstpass
> >  :  (collect_matches
> >  |  collect_labels
> >  |  .)*
> >  ;
> >
> >
> > script
> >  :  header? matches* EOF
> >  ;
> >
> >
> > When I run the code I use a CommonTokenStream and do the following
> >
> > CommonTokenStream tokens = new CommonTokenStream(lex);
> > MyParser parser = new MyParser(tokens);
> >
> > parser.firstpass();
> >
> > tokens.reset();
> >
> > parser.script();
> >
> >
> > The problem comes when I do the tokens.reset().  If the very first token is
> > a comment (i.e. on the hidden channel) it is returned in parser.script() and
> > throws a NoViableAlternativeException because nothing in my grammar is
> > expecting a comment.  To get around this I do the following...
> >
> >           //Reset the tokens back to the begining
> >            tokens.reset();
> >
> >            //For some reason after the tokens have been buffered up if a
> > hidden
> >            //token is the first token it is returned instead getting the
> >            //first non-hidden token.  This little hack works around that.
> >            if (tokens.LT(1).getChannel() == Token.HIDDEN_CHANNEL){
> >                tokens.consume();
> >            }
> >
> >            //now we can build the AST
> >            r=parser.script();
> >
> > If I consume the hidden token then the token stream points at the next
> > on-channel token like it is supposed to do.  Is this a bug or am I doing
> > things wrong?
> >
> > Thanks,
> > James
> >
> > PS:  This is with Antlr 3.3
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 


From jbb at acm.org  Wed Jul  6 20:08:05 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 06 Jul 2011 23:08:05 -0400
Subject: [antlr-interest] left recursion removal
In-Reply-To: <CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
Message-ID: <1310008085.28443.1.camel@gecko>

see attached.

I, also, am available for hire, if you should opt for that...

   -jbb

On Thu, 2011-07-07 at 01:27 +0200, S?bastien Kirche wrote:
> Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > Greetings!
> >
> > [...]
> >
> > unable to reproduce.
> >
> > given your admittedly partial grammar, i tried to construct a complete
> > example by adding the missing elements and creating an AST (so i could
> > know the resultant parse).
> >
> > my test rig is attached.
> >
> > it runs without error when Tool'd, compiled, and executed from the
> > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and the
> > Antlr version from the antlr-3.4-complete.jar file).
> >
> > Please try to post the *smallest* yet *complete* example of your
> > problem.
> 
> Sorry for not having posted a more complete code before, I though that
> should have been enough...
> 
> I have worked further on my grammar, with trying to define more
> precisely what an expression should be, with operator precedence. This
> made me rewrite the singleStatement by moving the funCall  rule to the
> primary rule. But my problem about the if-then-else construct is not
> gone.
> 
> I have stripped down my grammar, keeping only the expression and
> subsequent rules, removed all that define loops, switches, etc.
> Given that simplified grammar, the following script should pass the
> parsing, but it can't yet :
> 
> ---------------------------------------
> string s1, s2
> 
> if s1='42' then s2='421'
> 
> if s2='421' then
> 	string s3
> 	s3='123'
> else
> 	string s4
> 	s4='666'
> end if
> 
> ---------------------------------------
> 
> Also, to Jim Idle : the language I would be able to parse is
> Powerbuilder. You can see it as a sort of basic, while it accepts
> syntax like i++ or s += 'foo' He has also the ability to accept inline
> sql statements... I tried to play on the EndOfLine delimiter to handle
> the two if-then-else syntaxes but without success.
> 


-------------- next part --------------
grammar pbifthenelse;

options {
   output = AST;
   ASTLabelType = CommonTree;
}

@members {
   private static final String [] x = new String[] {
      "string s1, s2\n"+
      "\n"+
      "if s1='42' then s2='421'\n"+
      "\n"+
      "if s2='421' then\n"+
      "        string s3\n"+
      "        s3='123'\n"+
      "else\n"+
      "        string s4\n"+
      "        s4='666'\n"+
      "end if\n",
      "string s1 = '42', s2='999', s3='101'\n"+
      "\n"+
      "if s1='42' then s2='421'\n"+
      "\n"+
      "if s2='421' then\n"+
      "        s3='123'\n"+
      "else\n"+
      "        s3='666'\n"+
      "end if\n"
  };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to parse:`"+x[i]+"`");

            pbifthenelseLexer lexer =
               new pbifthenelseLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);
            pbifthenelseParser parser = new pbifthenelseParser(tokens);
            pbifthenelseParser.pgm_return p_result = parser.pgm();

            // System.out.format("the token stream:\%n");
            // for( int j = 0; j < tokens.size(); ++j ) {
            //    Token token = tokens.get(j);
            //    System.out.format("\%d: type = \%s, text = `\%s`\%n",
            //                      j,
            //                      tokenNames[token.getType()],
            //                      token.getText());
            // }

            CommonTree ast = p_result.tree;
            if( ast == null ) {
               System.out.println("resultant tree: is NULL");
            } else {
               System.out.println("resultant tree: " + ast.toStringTree());
            }
            System.out.println();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

pgm : codeBlock EOF!;

codeBlock : ( compoundStatement )* ;

compoundStatement
   : (  /* empty */
      | localVariableDeclaration
      | ifStatement
      | singleStatement
      ) ( ';' | EOL )
   ;

singleStatement : assignment ;

assignment : IDENTIFIER OPEQ expression ;

ifStatement
   : 'if' expression 'then'
      ((singleStatement ('else' singleStatement)? EOL)=>
         singleStatement ('else' singleStatement)?
      | codeBlock ('else' codeBlock)? 'end if'
      )
   ;
// predicate is needed to distinguish between the singleStatment for a
// single line IF and the singleStatement within a compoundStatement
// comprising a codeBlock that contains just one statement within a
// multi-line IF.

localVariableDeclaration
   : dataType variableDeclaration (',' variableDeclaration)*
   ;

variableDeclaration
   : IDENTIFIER ( OPEQ literal)?
   ;

dataType
   : 'int' | 'integer'
   | 'long'
   | 'string'
   ;


expression : logicalORExpr ;

logicalORExpr : logicalANDExpr ('or' logicalANDExpr)* ;

logicalANDExpr : logicalNOTExpr ('and' logicalNOTExpr)* ;

logicalNOTExpr : 'not'? relationalExpr ;

relationalExpr : binaryPlusMinus (logicalOP binaryPlusMinus)* ;

binaryPlusMinus : unaryExpr (('+' | '-') binaryMulDiv)* ;

unaryExpr : ('+' | '-')? binaryMulDiv ;

binaryMulDiv : exponentExpr (('*' | '/') exponentExpr)* ;

exponentExpr : primary ( '^' primary )* ;

primary
   : ( '(' expression ')' )
   | literal
   | ( IDENTIFIER postFixExpr? )
   ;

postFixExpr
   : '!'
   | '++'
   | '--'
   | '(' expressionList? ')' // funCall
      // placing funCall here permits expressions like: f(x) + g(y)
   ;

expressionList : expression (',' expression)* ;

logicalOP
   : OPEQ
   | OPNEQ
   | OPINF
   | OPINFEQ
   | OPSUP
   | OPSUPEQ
   ;
 
literal
   : STRING_LITERAL
   | INTEGER_LITERAL
   ;

WS : (' '|'\t'|'\u000C') {$channel=HIDDEN;} ;

EOL
   : '\r' '\n'   // DOS
   | '\r'        // Mac
   | '\n'        // Unix
   ;

STRING_LITERAL
   : '\'' ( options{ greedy=false; }: ( ~('\\'|'\'') | ('\\' '\'') ) )* '\''
      {
         System.out.println("string>" + getText());
      }
   ;
    
  
INTEGER_LITERAL : '0' | ( '1'..'9' ( '0'..'9' )* ) ;

IDENTIFIER
   :  LETTER (LETTER|'0'..'9'|'$'|'#'|'%'|'-')*
      {
         System.out.println("identifier>" + getText());
      }
   ;

fragment LETTER : ('A'..'Z'|'a'..'z'|'_') ;

OPEQ    : '=' ;
OPNEQ   : '<>' ;
OPINF   : '<' ;
OPINFEQ : '<=' ;
OPSUP   : '>' ;
OPSUPEQ : '>=' ;

From sebastien.kirche at gmail.com  Wed Jul  6 23:47:35 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 7 Jul 2011 08:47:35 +0200
Subject: [antlr-interest] left recursion removal
In-Reply-To: <1310008085.28443.1.camel@gecko>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
	<1310008085.28443.1.camel@gecko>
Message-ID: <CALGPt8bsE1DaBrVrLEWbJfuSJPMMiBfdyuviXseXgMaa4-_hjw@mail.gmail.com>

Le 7 juillet 2011 05:08, John B. Brodie <jbb at acm.org> a ?crit :
> see attached.
>
> I, also, am available for hire, if you should opt for that...


2011/7/7 Jim Idle <jimi at temporal-wave.com>:
> [...]
> Or you could pay me to do it as I have no work on right now ;-) boo hoo.


Hehe :o)
Thank you very much for your feedback, I will look at it later today.
I wish I could support you, but there is no funding in that PBScript
parser project : I am working on it in my free time and if I manage to
have something working, I plan to publish it as free open source code.
It could serve for building a syntax highlighter for the
scite/scintilla editor (a bit overkill maybe) and maybe it could also
be reused with Eclipse / IMP (though the parser generator used by IMP
is LPG, i am not sure if / how to use a custom antlr produced parser).
These tools are first to help my every day work with Powerbuilder.

Do you suggest that I could earn some money with a parser for a dying
language ?  ;o)
-- 
S?bastien Kirche

From ibre5041 at ibrezina.net  Thu Jul  7 01:11:44 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Thu, 07 Jul 2011 10:11:44 +0200
Subject: [antlr-interest] C Target won't compile with MSVC
Message-ID: <20110707101144.x5vzv6h5gk4kw0sc@webmail.kamm.cz>

Hi
I'm not sure whether this is a bug or not.
In my grammar I use following rule to match Perl style
quoted strings:

/* Perl-style quoted string */
QSTRING             : ('q'|'Q') ( QS_ANGLE | QS_BRACE | QS_BRACK |  
QS_PAREN | QS_OTHER) ;
fragment QS_ANGLE   : QUOTE '<' ( options {greedy=false;} : . )* '>' QUOTE ;
fragment QS_BRACE   : QUOTE '{' ( options {greedy=false;} : . )* '}' QUOTE ;
fragment QS_BRACK   : QUOTE '[' ( options {greedy=false;} : . )* ']' QUOTE ;
fragment QS_PAREN   : QUOTE '(' ( options {greedy=false;} : . )* ')' QUOTE ;

fragment QS_OTHER_CH: ~('<'|'{'|'['|'('|' '|'\t'|'\n'|'\r');
fragment QS_OTHER
		@init {
     		ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *, ANTLR3_INT32);
			oldLA = INPUT->istream->_LA;
             INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
		}
		:
		QUOTE delimiter=QS_OTHER_CH
/* JAVA Syntax */
// 		( { input.LT(1) != $delimiter.text.charAt(0) || ( input.LT(1) ==  
$delimiter.text.charAt(0) && input.LT(2) != '\'') }? => . )*
// 		( { input.LT(1) == $delimiter.text.charAt(0) && input.LT(2) ==  
'\'' }? => . ) QUOTE
/* C Syntax */
		( { LA(1) != $delimiter->getText(delimiter)->chars[0] || LA(2) !=  
'\'' }? => . )*
		( { LA(1) == $delimiter->getText(delimiter)->chars[0] && LA(2) ==  
'\'' }? => . ) QUOTE
  		{ INPUT->istream->_LA = oldLA; }
		;

The problem is, that I need to declare my own variable inside @init section.

Antlr generates such a C source:

static ANTLR3_INLINE
void mQS_OTHER(pOracleSQLLexer ctx)
{
	ANTLR3_UINT32	_type;
     pANTLR3_COMMON_TOKEN delimiter;


     delimiter = NULL;


         		ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *,  
ANTLR3_INT32);
     			oldLA = INPUT->istream->_LA;
                 INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);

... etc.

MSVC complains that the variable oldLA is declared AFTER assignment  
statement. Could you modify the it into this?

static ANTLR3_INLINE
void mQS_OTHER(pOracleSQLLexer ctx)
{
     ANTLR3_UINT32	_type;
     pANTLR3_COMMON_TOKEN delimiter = NULL;

     ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *, ANTLR3_INT32);
     oldLA = INPUT->istream->_LA;
     INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);

...etc

Ivan





----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From jimi at temporal-wave.com  Thu Jul  7 05:36:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 7 Jul 2011 05:36:11 -0700
Subject: [antlr-interest] C Target won't compile with MSVC
In-Reply-To: <20110707101144.x5vzv6h5gk4kw0sc@webmail.kamm.cz>
References: <20110707101144.x5vzv6h5gk4kw0sc@webmail.kamm.cz>
Message-ID: <6f731513d5b601868af4f6bad31c420d@mail.gmail.com>

That is what the @declarations section is for. It will ensure the variable
declaration is in the right place.

http://antlr.markmail.org/search/C+declarations

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ivan Brezina
> Sent: Thursday, July 07, 2011 1:12 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C Target won't compile with MSVC
>
> Hi
> I'm not sure whether this is a bug or not.
> In my grammar I use following rule to match Perl style quoted strings:
>
> /* Perl-style quoted string */
> QSTRING             : ('q'|'Q') ( QS_ANGLE | QS_BRACE | QS_BRACK |
> QS_PAREN | QS_OTHER) ;
> fragment QS_ANGLE   : QUOTE '<' ( options {greedy=false;} : . )* '>'
> QUOTE ;
> fragment QS_BRACE   : QUOTE '{' ( options {greedy=false;} : . )* '}'
> QUOTE ;
> fragment QS_BRACK   : QUOTE '[' ( options {greedy=false;} : . )* ']'
> QUOTE ;
> fragment QS_PAREN   : QUOTE '(' ( options {greedy=false;} : . )* ')'
> QUOTE ;
>
> fragment QS_OTHER_CH: ~('<'|'{'|'['|'('|' '|'\t'|'\n'|'\r'); fragment
> QS_OTHER
> 		@init {
>      		ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct
> *, ANTLR3_INT32);
> 			oldLA = INPUT->istream->_LA;
>              INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> 		}
> 		:
> 		QUOTE delimiter=QS_OTHER_CH
> /* JAVA Syntax */
> // 		( { input.LT(1) != $delimiter.text.charAt(0) || (
input.LT(1)
> ==
> $delimiter.text.charAt(0) && input.LT(2) != '\'') }? => . )*
> // 		( { input.LT(1) == $delimiter.text.charAt(0) &&
input.LT(2)
> ==
> '\'' }? => . ) QUOTE
> /* C Syntax */
> 		( { LA(1) != $delimiter->getText(delimiter)->chars[0] ||
> LA(2) != '\'' }? => . )*
> 		( { LA(1) == $delimiter->getText(delimiter)->chars[0] &&
> LA(2) == '\'' }? => . ) QUOTE
>   		{ INPUT->istream->_LA = oldLA; }
> 		;
>
> The problem is, that I need to declare my own variable inside @init
> section.
>
> Antlr generates such a C source:
>
> static ANTLR3_INLINE
> void mQS_OTHER(pOracleSQLLexer ctx)
> {
> 	ANTLR3_UINT32	_type;
>      pANTLR3_COMMON_TOKEN delimiter;
>
>
>      delimiter = NULL;
>
>
>          		ANTLR3_UINT32 (*oldLA)(struct
ANTLR3_INT_STREAM_struct
> *, ANTLR3_INT32);
>      			oldLA = INPUT->istream->_LA;
>                  INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
>
> ... etc.
>
> MSVC complains that the variable oldLA is declared AFTER assignment
> statement. Could you modify the it into this?
>
> static ANTLR3_INLINE
> void mQS_OTHER(pOracleSQLLexer ctx)
> {
>      ANTLR3_UINT32	_type;
>      pANTLR3_COMMON_TOKEN delimiter = NULL;
>
>      ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *,
> ANTLR3_INT32);
>      oldLA = INPUT->istream->_LA;
>      INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
>
> ...etc
>
> Ivan
>
>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From antlrmen at yahoo.com  Thu Jul  7 06:57:41 2011
From: antlrmen at yahoo.com (Roy Metzger)
Date: Thu, 7 Jul 2011 06:57:41 -0700 (PDT)
Subject: [antlr-interest] loops and syntax-directed interpreter ?
Message-ID: <1310047061.42770.YahooMailNeo@web121116.mail.ne1.yahoo.com>

Hello everyone and good day,

I'm following Mr. Parr's tutorial on syntax-directed interpreter for Pie language
(link: http://www.antlr.org/wiki/display/ANTLR3/Pie ). So, for this one? I'm not interested
into building tree's and such.

Now, the problem. I'm using code provided with the tutorial with minimal tweaks. My issue is with the while loop.
It looks like this:

while[boolean defer]:
'while' e=expr [defer]
s=statement[defer]+
'stop' 'loop'
{if (!defer) interp.allWhile($e.start, $s.start);} ;


My issue is with starting location of the statements passed(token index).For example this works:

while(true)
print 1 //print unlimited number of 1's
stop loop


However, whenever I use multiple statements, only last one is executed, for example:
while(true)
print 1
print 2
print 3
stop loop

This will print non-stop 3's, and? not 1,2,3,1,2,3 as I would want etc.

If there are multiple statements in the while loop, while function in the interpreter always rewinds input to
the last statement in the while clasue(print 3 in above example, while I would like to rewind input to print 1).

In the interpreter, callWhile function is not changed from the tutorial(aside statements instead of slist):

?public void callWhile(Token condStart, Token codeStart) 

{
?????? Boolean c = (Boolean)exec("expr", condStart.getTokenIndex());

??????? while ( c ) 

{
??????????? exec("statement", codeStart.getTokenIndex());
??????????? c = (Boolean)exec("expr", condStart.getTokenIndex());
?? }
?? }



Also, exec is not changed from the tutorial:

?public Object exec(String rule, int tokenIndex) 

{
??????? Object rv = null;
??????? try 

{
??????????? int oldPosition = parser.input.index(); // save current location
??????????? parser.input.seek(tokenIndex); // seek to place to start execution
??????????? try { // which rule are we executing?
??????????????? if ( rule.equals("expr") ) { rv = parser.expr(false).value; }
??????????????? else if ( rule.equals("statement") ) { parser.statement(false); }
??????????????? else listener.error("error: can't start at "+rule);
??? }
??????????? finally { parser.input.seek(oldPosition); }// restore location
?????? }
??????? catch (Exception e) {
??????????? listener.error("can't exec code @ index "+tokenIndex, e);
?????? }
??????? return rv;
?? }

Now, I would really appreciate if someone could point me out why is this happening and
how it can be fixed? Also, I've noticed that even code from the tutorial has similar issues.

I would really appreciate any help, hints or tricks to help solve this problem.
Thanks,
Lee

From sebastien.kirche at gmail.com  Thu Jul  7 08:04:55 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 7 Jul 2011 17:04:55 +0200
Subject: [antlr-interest] left recursion removal
In-Reply-To: <1310008085.28443.1.camel@gecko>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
	<1310008085.28443.1.camel@gecko>
Message-ID: <CALGPt8ZeOHcgejygQsbmmbaCue2M7VvwwQ2uJnu33n-Li4x09g@mail.gmail.com>

Le 7 juillet 2011 05:08, John B. Brodie <jbb at acm.org> a ?crit :
> see attached.

Many, many thanks, as your corrections on my example helped me
considerably and the initial recursion is gone.
I had also an obvious bug in my "NOT" expression. Now I have added
some other structures like for/next and choose/case

My current problem is that your refactor of my funCall rule by
following an expression by a postfix notation seems not working on my
test code.
That looks clever, but during parsing, the Parser seem to look for a
missing assignment between the function identifier and the parameter
list. I did not found why yet.

I join my grammar in its current state.
-- 
S?bastien Kirche
-------------- next part --------------
A non-text attachment was scrubbed...
Name: PowerScript.g
Type: application/octet-stream
Size: 8175 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110707/55c5fd2c/attachment.obj 

From jbb at acm.org  Thu Jul  7 08:51:52 2011
From: jbb at acm.org (John B. Brodie)
Date: Thu, 07 Jul 2011 11:51:52 -0400
Subject: [antlr-interest] left recursion removal
In-Reply-To: <CALGPt8ZeOHcgejygQsbmmbaCue2M7VvwwQ2uJnu33n-Li4x09g@mail.gmail.com>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
	<1310008085.28443.1.camel@gecko>
	<CALGPt8ZeOHcgejygQsbmmbaCue2M7VvwwQ2uJnu33n-Li4x09g@mail.gmail.com>
Message-ID: <1310053912.9154.2.camel@gecko>

Greetings!

On Thu, 2011-07-07 at 17:04 +0200, S?bastien Kirche wrote:
> Le 7 juillet 2011 05:08, John B. Brodie <jbb at acm.org> a ?crit :
> > see attached.
> 
> Many, many thanks, as your corrections on my example helped me
> considerably and the initial recursion is gone.

you are welcome. i actually enjoy doing this stuff.

> I had also an obvious bug in my "NOT" expression. Now I have added
> some other structures like for/next and choose/case
> 
> My current problem is that your refactor of my funCall rule by
> following an expression by a postfix notation seems not working on my
> test code.
> That looks clever, but during parsing, the Parser seem to look for a
> missing assignment between the function identifier and the parameter
> list. I did not found why yet.
> 
> I join my grammar in its current state.

change the singleStatement rule to this:

singleStatement
	:	IDENT ( OPEQ expression | '(' expressionList? ')' )
	|	'return' expression
	;

and delete the now unnecessary assignment rule.
   -jbb



From Waverly.Edwards at genesys.com  Thu Jul  7 12:28:27 2011
From: Waverly.Edwards at genesys.com (Edwards, Waverly)
Date: Thu, 7 Jul 2011 14:28:27 -0500
Subject: [antlr-interest] targets without switch fall through...
Message-ID: <4A454A950FB157459B59AA50C146C07901E77E2045@OMA00CEXMBX02.corp.westworlds.com>


Are there any targets that do not have fall through on the switch statements?
I would like to look at the output logic for the lexer for a target doesn't depend on fallthrough.

Also, does $FOLLOW still exist?  If so, does it provide a list of follow rules or the simply the next rule that can follow.
Is there any documentation for it?


Thank you,


Waverly


From james_ladd at hotmail.com  Thu Jul  7 14:45:34 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Fri, 8 Jul 2011 07:45:34 +1000
Subject: [antlr-interest] Lines that don't match a rule ...
In-Reply-To: <mailman.1.1310065201.15221.antlr-interest@antlr.org>
References: <mailman.1.1310065201.15221.antlr-interest@antlr.org>
Message-ID: <BAY149-w10F7FAF984343CAD32748EED410@phx.gbl>


Thanks Jim !  I'm sure that will do the trick.
This list is so helpful.

> From: antlr-interest-request at antlr.org
> Subject: antlr-interest Digest, Vol 80, Issue 7
> To: antlr-interest at antlr.org
> Date: Thu, 7 Jul 2011 12:00:01 -0700
> 
> Send antlr-interest mailing list submissions to
> 	antlr-interest at antlr.org
> 
> To subscribe or unsubscribe via the World Wide Web, visit
> 	http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
> 	antlr-interest-request at antlr.org
> 
> You can reach the person managing the list at
> 	antlr-interest-owner at antlr.org
> 
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
> 
> 
> Today's Topics:
> 
>    1. left recursion removal (S?bastien Kirche)
>    2. Re: left recursion removal (Jim Idle)
>    3. Lines that don't match a rule ... (James Ladd)
>    4. Re: left recursion removal (John B. Brodie)
>    5. Re: Think I found a bug. (James Reid)
>    6. Re: left recursion removal (S?bastien Kirche)
>    7. Re: Lines that don't match a rule ... (Jim Idle)
>    8. Re: left recursion removal (Jim Idle)
>    9. Re: left recursion removal (Jim Idle)
>   10. Re: Think I found a bug. (Terence Parr)
>   11. Re: left recursion removal (John B. Brodie)
>   12. Re: left recursion removal (S?bastien Kirche)
>   13. C Target won't compile with MSVC (Ivan Brezina)
>   14. Re: C Target won't compile with MSVC (Jim Idle)
>   15. loops and syntax-directed interpreter ? (Roy Metzger)
>   16. Re: left recursion removal (S?bastien Kirche)
>   17. Re: left recursion removal (John B. Brodie)
> 
> 
> ----------------------------------------------------------------------
> 
> Message: 1
> Date: Wed, 6 Jul 2011 21:19:39 +0200
> From: S?bastien Kirche <sebastien.kirche at gmail.com>
> Subject: [antlr-interest] left recursion removal
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> Hi,
> 
> the language for which I am trying to build the grammar has 2 flavors
> of if-then-else constructs
> - a single line : if <condition> then <statement> [else <statement>]
> - a multi line : if <condition> then <statements> [else <statements>] end if
> 
> I have defined the following (partial) :
> 
> codeBlock
> 	:	(compoundStatement)*
> 	;
> 
> compoundStatement
> 	:	(
> 			ifStatement
> 		|	singleStatement
> 		) (';' | EOL)
> 	;
> 	
> singleStatement
> 	:	localVariableDeclaration
> 	|	funCall
> 	|	'return' expression
> 	;
> 
> ifStatement
> 	:	singleLineIf
> 	|	multiLineIf
> 	;
> 
> singleLineIf
> 	:	'if' expression 'then' singleStatement EOL
> 	;
> 
> multiLineIf
> 	:	'if' expression 'then' codeBlock 'end if'
> 	;
> 
> 
> I understand why the naive ifStatement fails with the following "
> [fatal] rule ifStatement has non-LL(*) decision due to recursive rule
> invocations reachable from alts 1,2.  Resolve by left-factoring or
> using syntactic predicates or using backtrack=true option."
> 
> I would like to avoid general backtracking, so after searching for a
> while and reading the article
> http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar
> I have tried first
> 
> ifStatement
> 	:	'if' expression 'then' (singleStatement EOL)=> singleLineIf
> 	| 	multiLineIf
> 	;
> 
> or
> 
> ifStatement
> 	:	'if' expression 'then' (singleStatement EOL | codeBlock 'end if')
> 	;
> 
> But they fail both with the same fatality.
> How this case should be processed ?
> -- 
> S?bastien Kirche
> 
> 
> ------------------------------
> 
> Message: 2
> Date: Wed, 6 Jul 2011 14:27:39 -0700
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] left recursion removal
> To: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <fc73d76295d104694253b4775b459791 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> What language? This is usually distinguished by the fact that multi
> statement blocks must begin on a new line after THEN or ELSE. VB.Net for
> instance.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of S?bastien Kirche
> > Sent: Wednesday, July 06, 2011 12:20 PM
> > To: antlr-interest
> > Subject: [antlr-interest] left recursion removal
> >
> > Hi,
> >
> > the language for which I am trying to build the grammar has 2 flavors
> > of if-then-else constructs
> > - a single line : if <condition> then <statement> [else <statement>]
> > - a multi line : if <condition> then <statements> [else <statements>]
> > end if
> >
> > I have defined the following (partial) :
> >
> > codeBlock
> > 	:	(compoundStatement)*
> > 	;
> >
> > compoundStatement
> > 	:	(
> > 			ifStatement
> > 		|	singleStatement
> > 		) (';' | EOL)
> > 	;
> >
> > singleStatement
> > 	:	localVariableDeclaration
> > 	|	funCall
> > 	|	'return' expression
> > 	;
> >
> > ifStatement
> > 	:	singleLineIf
> > 	|	multiLineIf
> > 	;
> >
> > singleLineIf
> > 	:	'if' expression 'then' singleStatement EOL
> > 	;
> >
> > multiLineIf
> > 	:	'if' expression 'then' codeBlock 'end if'
> > 	;
> >
> >
> > I understand why the naive ifStatement fails with the following "
> > [fatal] rule ifStatement has non-LL(*) decision due to recursive rule
> > invocations reachable from alts 1,2.  Resolve by left-factoring or
> > using syntactic predicates or using backtrack=true option."
> >
> > I would like to avoid general backtracking, so after searching for a
> > while and reading the article
> > http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtrack
> > ing+from+your+grammar
> > I have tried first
> >
> > ifStatement
> > 	:	'if' expression 'then' (singleStatement EOL)=>
> singleLineIf
> > 	| 	multiLineIf
> > 	;
> >
> > or
> >
> > ifStatement
> > 	:	'if' expression 'then' (singleStatement EOL | codeBlock
> 'end
> > if')
> > 	;
> >
> > But they fail both with the same fatality.
> > How this case should be processed ?
> > --
> > S?bastien Kirche
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> ------------------------------
> 
> Message: 3
> Date: Thu, 7 Jul 2011 07:41:41 +1000
> From: James Ladd <james_ladd at hotmail.com>
> Subject: [antlr-interest] Lines that don't match a rule ...
> To: <antlr-interest at antlr.org>
> Message-ID: <BAY149-w32B3DDCD6F82F6E204DDF9ED5E0 at phx.gbl>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> 
> Hi All,
> 
> I hope I can get a little help on the grammar I have below.
> It works to a degree but I'm having trouble with some edge cases and that is
> stressing me a little.
> 
> When I write something like the following I get the right response - sequence of tokens.
> 
> Im putting '\n' where I would have new lines.
> 
> \n
> + foo\n
> \n
> 
> What I can't seem to do is put in a rule that matches a line that doesn't start with '+' or '-'
> I get a no viable Alt Exception with all that I try.
> 
> 
> My goal is to be able to detect lines starting with a '+' or a '-' followed by a messagePattern.
> And lines NOT starting with a '+' or a '-'.  The grammar below does not contain any rules
> for this, because I can't get them to work.
> 
> Please help
> 
> Rgs, James.
> 
> 
> grammar Preprocessor;
> 
> options {
>   language = Java;
> }
> 
> @header {
>   package compiler;
> 
> }
> 
> @lexer::header {
>   package compiler;
> }
> 
> lines
>   : (lineBreak | messagePattern)* EOF
>   ;
> 
> messagePattern
>   : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
> 
>   ;
> 
> unarySelector
>   : NAME
>   ;
> 
> keywordSelector
>   : (KEYWORD NAME)+
>   ;
>   
> binarySelector
>   : BINARY_SYMBOL NAME
>   ;
> 
> lineBreak
>   : LINE_BREAK  ;
> 
> LINE_BREAK: ('\r'? '\n' | '\r');
> 
> NAME: ('a'..'z' | 'A'..'Z')('a'..'z' | 'A'..'Z' | '0'..'9')*;
> KEYWORD: NAME':';
> BINARY_SYMBOL: ('~'|'!'|'@'|'%'|'&'|'*'|'-'|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',') ('~'|'!'|'@'|'%'|'&'|'*'|'-'|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',')*;
> 
>  		 	   		  
> 
> ------------------------------
> 
> Message: 4
> Date: Wed, 06 Jul 2011 18:14:16 -0400
> From: "John B. Brodie" <jbb at acm.org>
> Subject: Re: [antlr-interest] left recursion removal
> To: S?bastien Kirche <sebastien.kirche at gmail.com>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <1309990456.23994.21.camel at gecko>
> Content-Type: text/plain; charset="utf-8"
> 
> Greetings!
> 
> On Wed, 2011-07-06 at 21:19 +0200, S?bastien Kirche wrote:
> > Hi,
> > 
> > the language for which I am trying to build the grammar has 2 flavors
> > of if-then-else constructs
> > - a single line : if <condition> then <statement> [else <statement>]
> > - a multi line : if <condition> then <statements> [else <statements>] end if
> > 
> > I have defined the following (partial) :
> > 
> > codeBlock
> > 	:	(compoundStatement)*
> > 	;
> > 
> > compoundStatement
> > 	:	(
> > 			ifStatement
> > 		|	singleStatement
> > 		) (';' | EOL)
> > 	;
> > 	
> > singleStatement
> > 	:	localVariableDeclaration
> > 	|	funCall
> > 	|	'return' expression
> > 	;
> > 
> > ifStatement
> > 	:	singleLineIf
> > 	|	multiLineIf
> > 	;
> > 
> > singleLineIf
> > 	:	'if' expression 'then' singleStatement EOL
> > 	;
> > 
> > multiLineIf
> > 	:	'if' expression 'then' codeBlock 'end if'
> > 	;
> > 
> > 
> > I understand why the naive ifStatement fails with the following "
> > [fatal] rule ifStatement has non-LL(*) decision due to recursive rule
> > invocations reachable from alts 1,2.  Resolve by left-factoring or
> > using syntactic predicates or using backtrack=true option."
> 
> unable to reproduce.
> 
> given your admittedly partial grammar, i tried to construct a complete
> example by adding the missing elements and creating an AST (so i could
> know the resultant parse).
> 
> my test rig is attached.
> 
> it runs without error when Tool'd, compiled, and executed from the
> command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and the
> Antlr version from the antlr-3.4-complete.jar file).
> 
> Please try to post the *smallest* yet *complete* example of your
> problem.
> 
> Hope this helps...
>    -jbb
> 
> > 
> > I would like to avoid general backtracking, so after searching for a
> > while and reading the article
> > http://www.antlr.org/wiki/display/ANTLR3/How+to+remove+global+backtracking+from+your+grammar
> > I have tried first
> > 
> > ifStatement
> > 	:	'if' expression 'then' (singleStatement EOL)=> singleLineIf
> > 	| 	multiLineIf
> > 	;
> > 
> > or
> > 
> > ifStatement
> > 	:	'if' expression 'then' (singleStatement EOL | codeBlock 'end if')
> > 	;
> > 
> > But they fail both with the same fatality.
> > How this case should be processed ?
> 
> 
> -------------- next part --------------
> grammar Test;
> 
> options {
>    output = AST;
>    ASTLabelType = CommonTree;
> }
> 
> tokens { SINGLE; MULTI; } // imaginary tokens go here
> 
> @members {
>    private static final String [] x = new String[] {
>       "local x\n",
>       "if x then return 1\n\n",
>       "if x then if y then return 1\n\nend if\n",
>       "local x;if x then return 1\n;",
>   };
> 
>    public static void main(String [] args) {
>       for( int i = 0; i < x.length; ++i ) {
>          try {
>             System.out.println("about to parse:`"+x[i]+"`");
> 
>             TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
>             CommonTokenStream tokens = new CommonTokenStream(lexer);
>             TestParser parser = new TestParser(tokens);
>             TestParser.test_return p_result = parser.test();
> 
>             // System.out.format("the token stream:\%n");
>             // for( int j = 0; j < tokens.size(); ++j ) {
>             //    Token token = tokens.get(j);
>             //    System.out.format("\%d: type = \%s, text = `\%s`\%n",
>             //                      j,
>             //                      tokenNames[token.getType()],
>             //                      token.getText());
>             // }
> 
>             CommonTree ast = p_result.tree;
>             if( ast == null ) {
>                System.out.println("resultant tree: is NULL");
>             } else {
>                System.out.println("resultant tree: " + ast.toStringTree());
>             }
>             System.out.println();
>          } catch(Exception e) {
>             e.printStackTrace();
>          }
>       }
>    }
> }
> 
> test : codeBlock EOF! ;
> 
> codeBlock
>         :       (compoundStatement)*
>         ;
> 
> compoundStatement
>         :       (
>                         ifStatement
>                 |       singleStatement
>                 ) (';' | EOL)
>         ;
>         
> singleStatement
>         :       localVariableDeclaration
>         |       funCall
>         |       'return'^ expression
>         ;
> 
> ifStatement
>         :       singleLineIf
>         |       multiLineIf
>         ;
> 
> singleLineIf
>         :       'if' expression 'then' singleStatement EOL
>       -> ^(SINGLE expression singleStatement)
>         ;
> 
> multiLineIf
>         :       'if' expression 'then' codeBlock 'end if'
>       -> ^(MULTI expression codeBlock)
>         ;
> 
> localVariableDeclaration : 'local'^ ID+ ;
> funCall : ID '('^ args? ')'! ;
> args : expression (','^ expression)* ;
> expression : term (op^ term)* ;
> term : ID | NUMBER ;
> op : '+' | '-' | '*' | '/' ;
> 
> EOL : '\r'? '\n' ;
> 
> WS : (' ' | '\t')+ { skip(); };
> 
> ID : LETTER ( LETTER | DIGIT )* ;
> 
> NUMBER : DIGIT+ ;
> 
> fragment LETTER : ('a'..'z')|('A'..'Z') ;
> fragment DIGIT : '0'..'9' ;
> 
> ------------------------------
> 
> Message: 5
> Date: Wed, 6 Jul 2011 19:15:59 -0400
> From: James Reid <james1018 at gmail.com>
> Subject: Re: [antlr-interest] Think I found a bug.
> To: Terence Parr <parrt at cs.usfca.edu>
> Cc: antlr-interest at antlr.org
> Message-ID:
> 	<CAPtNrFbfvCY_f3hLTR62RqEh+N-uFfiZdrzJckmUnuxNqzbBuA at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> This worked...
> 
> @Override
>     public void reset() {
>         super.reset();
>         p = skipOffTokenChannels(0);
>     }
> 
> Glad I could contribute in some small way.
> 
> James
> 
> On Wed, Jul 6, 2011 at 1:57 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
> > Hi James. ack! i think reset() should call
> >
> > skipOffTokenChannels()
> >
> > Can you override reset to call super.reset() then skipOffTokenChannels()
> > and see if that works?  If so, i can fix for 3.4
> > Ter
> > On Jul 5, 2011, at 5:30 AM, James Reid wrote:
> >
> > > Hi all,
> > >
> > >  I think I found a bug but I want to be sure.  I have a parser grammar
> > that
> > > I run two passes on.  Here are short versions of the rules.
> > >
> > >
> > >
> > > firstpass
> > >  :  (collect_matches
> > >  |  collect_labels
> > >  |  .)*
> > >  ;
> > >
> > >
> > > script
> > >  :  header? matches* EOF
> > >  ;
> > >
> > >
> > > When I run the code I use a CommonTokenStream and do the following
> > >
> > > CommonTokenStream tokens = new CommonTokenStream(lex);
> > > MyParser parser = new MyParser(tokens);
> > >
> > > parser.firstpass();
> > >
> > > tokens.reset();
> > >
> > > parser.script();
> > >
> > >
> > > The problem comes when I do the tokens.reset().  If the very first token
> > is
> > > a comment (i.e. on the hidden channel) it is returned in parser.script()
> > and
> > > throws a NoViableAlternativeException because nothing in my grammar is
> > > expecting a comment.  To get around this I do the following...
> > >
> > >           //Reset the tokens back to the begining
> > >            tokens.reset();
> > >
> > >            //For some reason after the tokens have been buffered up if a
> > > hidden
> > >            //token is the first token it is returned instead getting the
> > >            //first non-hidden token.  This little hack works around that.
> > >            if (tokens.LT(1).getChannel() == Token.HIDDEN_CHANNEL){
> > >                tokens.consume();
> > >            }
> > >
> > >            //now we can build the AST
> > >            r=parser.script();
> > >
> > > If I consume the hidden token then the token stream points at the next
> > > on-channel token like it is supposed to do.  Is this a bug or am I doing
> > > things wrong?
> > >
> > > Thanks,
> > > James
> > >
> > > PS:  This is with Antlr 3.3
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> 
> 
> ------------------------------
> 
> Message: 6
> Date: Thu, 7 Jul 2011 01:27:33 +0200
> From: S?bastien Kirche <sebastien.kirche at gmail.com>
> Subject: Re: [antlr-interest] left recursion removal
> To: "John B. Brodie" <jbb at acm.org>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > Greetings!
> >
> > [...]
> >
> > unable to reproduce.
> >
> > given your admittedly partial grammar, i tried to construct a complete
> > example by adding the missing elements and creating an AST (so i could
> > know the resultant parse).
> >
> > my test rig is attached.
> >
> > it runs without error when Tool'd, compiled, and executed from the
> > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and the
> > Antlr version from the antlr-3.4-complete.jar file).
> >
> > Please try to post the *smallest* yet *complete* example of your
> > problem.
> 
> Sorry for not having posted a more complete code before, I though that
> should have been enough...
> 
> I have worked further on my grammar, with trying to define more
> precisely what an expression should be, with operator precedence. This
> made me rewrite the singleStatement by moving the funCall  rule to the
> primary rule. But my problem about the if-then-else construct is not
> gone.
> 
> I have stripped down my grammar, keeping only the expression and
> subsequent rules, removed all that define loops, switches, etc.
> Given that simplified grammar, the following script should pass the
> parsing, but it can't yet :
> 
> ---------------------------------------
> string s1, s2
> 
> if s1='42' then s2='421'
> 
> if s2='421' then
> 	string s3
> 	s3='123'
> else
> 	string s4
> 	s4='666'
> end if
> 
> ---------------------------------------
> 
> Also, to Jim Idle : the language I would be able to parse is
> Powerbuilder. You can see it as a sort of basic, while it accepts
> syntax like i++ or s += 'foo' He has also the ability to accept inline
> sql statements... I tried to play on the EndOfLine delimiter to handle
> the two if-then-else syntaxes but without success.
> 
> -- 
> S?bastien Kirche
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: pbifthenelse.g
> Type: application/octet-stream
> Size: 2646 bytes
> Desc: not available
> Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110707/4b4433d8/attachment-0001.obj 
> 
> ------------------------------
> 
> Message: 7
> Date: Wed, 6 Jul 2011 16:30:52 -0700
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Lines that don't match a rule ...
> To: antlr-interest at antlr.org
> Message-ID: <6556c9d271c906dfb308bb73f0e8e262 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Try:
> 
> lines
>   : (messagePattern LINE_BREAK)* EOF
>   ;
> 
> messagePattern
>   : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
>   | { while (input.LA(1) != LINE_BREAK && input.LA(1) != EOF)
> input.consume(); }
>   ;
> 
> This will just eat the lines that don't
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of James Ladd
> > Sent: Wednesday, July 06, 2011 2:42 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Lines that don't match a rule ...
> >
> >
> > Hi All,
> >
> > I hope I can get a little help on the grammar I have below.
> > It works to a degree but I'm having trouble with some edge cases and
> > that is stressing me a little.
> >
> > When I write something like the following I get the right response -
> > sequence of tokens.
> >
> > Im putting '\n' where I would have new lines.
> >
> > \n
> > + foo\n
> > \n
> >
> > What I can't seem to do is put in a rule that matches a line that
> > doesn't start with '+' or '-'
> > I get a no viable Alt Exception with all that I try.
> >
> >
> > My goal is to be able to detect lines starting with a '+' or a '-'
> > followed by a messagePattern.
> > And lines NOT starting with a '+' or a '-'.  The grammar below does not
> > contain any rules for this, because I can't get them to work.
> >
> > Please help
> >
> > Rgs, James.
> >
> >
> > grammar Preprocessor;
> >
> > options {
> >   language = Java;
> > }
> >
> > @header {
> >   package compiler;
> >
> > }
> >
> > @lexer::header {
> >   package compiler;
> > }
> >
> > lines
> >   : (lineBreak | messagePattern)* EOF
> >   ;
> >
> > messagePattern
> >   : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
> >
> >   ;
> >
> > unarySelector
> >   : NAME
> >   ;
> >
> > keywordSelector
> >   : (KEYWORD NAME)+
> >   ;
> >
> > binarySelector
> >   : BINARY_SYMBOL NAME
> >   ;
> >
> > lineBreak
> >   : LINE_BREAK  ;
> >
> > LINE_BREAK: ('\r'? '\n' | '\r');
> >
> > NAME: ('a'..'z' | 'A'..'Z')('a'..'z' | 'A'..'Z' | '0'..'9')*;
> > KEYWORD: NAME':';
> > BINARY_SYMBOL: ('~'|'!'|'@'|'%'|'&'|'*'|'-
> > '|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',') ('~'|'!'|'@'|'%'|'&'|'*'|'-
> > '|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',')*;
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> ------------------------------
> 
> Message: 8
> Date: Wed, 6 Jul 2011 16:40:06 -0700
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] left recursion removal
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <f957627cd66bd58cdc0ac4c81c8c6234 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> yes - I pretty sure that you need to pass in the EOL token to the parser
> for powerbuilder script to parse (it is pretty crummy but there is a lot
> of it out there). Here is a snippet from my VB.Net grammar which allows
> the various combinations. When you build the AST, it does not need to
> distinguish between single and multi lines.
> 
> Also, do not worry about these things until you have the full expression
> tree working as that will sometimes make you say "Ahhhhhgggh, now I have
> to rework all my statements. Do:
> 
> 1) Build the lexer, thinking ahead a bit about the parser;
> 2) Build the expression tree and generate the AST for it;
> 3) Build the language top down (though bottom up works too);
> 
> Or you could pay me to do it as I have no work on right now ;-) boo hoo.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of S?bastien Kirche
> > Sent: Wednesday, July 06, 2011 4:28 PM
> > To: John B. Brodie
> > Cc: antlr-interest
> > Subject: Re: [antlr-interest] left recursion removal
> >
> > Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > > Greetings!
> > >
> > > [...]
> > >
> > > unable to reproduce.
> > >
> > > given your admittedly partial grammar, i tried to construct a
> > complete
> > > example by adding the missing elements and creating an AST (so i
> > could
> > > know the resultant parse).
> > >
> > > my test rig is attached.
> > >
> > > it runs without error when Tool'd, compiled, and executed from the
> > > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and
> > the
> > > Antlr version from the antlr-3.4-complete.jar file).
> > >
> > > Please try to post the *smallest* yet *complete* example of your
> > > problem.
> >
> > Sorry for not having posted a more complete code before, I though that
> > should have been enough...
> >
> > I have worked further on my grammar, with trying to define more
> > precisely what an expression should be, with operator precedence. This
> > made me rewrite the singleStatement by moving the funCall  rule to the
> > primary rule. But my problem about the if-then-else construct is not
> > gone.
> >
> > I have stripped down my grammar, keeping only the expression and
> > subsequent rules, removed all that define loops, switches, etc.
> > Given that simplified grammar, the following script should pass the
> > parsing, but it can't yet :
> >
> > ---------------------------------------
> > string s1, s2
> >
> > if s1='42' then s2='421'
> >
> > if s2='421' then
> > 	string s3
> > 	s3='123'
> > else
> > 	string s4
> > 	s4='666'
> > end if
> >
> > ---------------------------------------
> >
> > Also, to Jim Idle : the language I would be able to parse is
> > Powerbuilder. You can see it as a sort of basic, while it accepts
> > syntax like i++ or s += 'foo' He has also the ability to accept inline
> > sql statements... I tried to play on the EndOfLine delimiter to handle
> > the two if-then-else syntaxes but without success.
> >
> > --
> > S?bastien Kirche
> 
> 
> ------------------------------
> 
> Message: 9
> Date: Wed, 6 Jul 2011 16:42:16 -0700
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] left recursion removal
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <5fecdc401ad60835d82fdc1bc3cd50d1 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> With the example this time:
> 
> 
> ifStatement
> 	: IF e=expression
> 		(
> 			  t=THEN
> 			  	(
> 			  	  		// Single line IF
> statement as the last token was not a NL
> 			  	  		//
> 			  	  		s1=statements
> ((ELSE)=>ELSE s2=statements)?
> 
> 						-> {$s2.tree == null}?
> ^(IFLINE $e ^(THEN $s1))
> 						->
> ^(IFLINE $e ^(THEN $s1) ^(ELSE $s2*))
> 
> 			  	  | (NL|COLON)+
> 
> 			  	  	// We discovered a NL token, hence
> we process
> 			  	    // a block If here as it has to be a
> block when the line with
> 			  	    // the IF on it has a NL before the
> first statement.
> 			  	    //
> 			  	    ib=ifBlock
> 
> 			  	    	-> ^(IF $e $ib)
> 			  	)
> 
> 			| (NL|COLON)+
> 
> 			  // We did not see a THEN clause, but it is
> optional on block IF statements
> 			  // (which is a bit silly, but a left over from
> VB 1 I suspect. Hence we process
> 			  // a block If here.
> 			  //
> 			  ib=ifBlock
> 
> 			  		-> ^(IF $e $ib)
> 		)
> 	;
> 
> ifBlock
> 	: 		tb=block
> 
> 	  		(eib+=elseIfStatement)*
> 
> 	 		(
> 	 			  ec=elseClause		// Else Clause
> handles END IF
> 				| END IF
> 			)
> 
> 		->	^(THEN $tb?) $eib* $ec?
> 	;
> 
> elseClause
> 	: 	ELSE^ 	(
> 					  (NL!|COLON!)+ block END! IF!
> 					| statement
> 				)
> 	;
> 
> 
> elseIfStatement
> 	: ELSEIF e=expression THEN? (NL|COLON)+ b=block
> 
> 		-> ^(ELSEIF $e $b?)
> 	;
> 
> Where 'block' is one or more statements (might need zero or more for
> powerbuilder).
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of S?bastien Kirche
> > Sent: Wednesday, July 06, 2011 4:28 PM
> > To: John B. Brodie
> > Cc: antlr-interest
> > Subject: Re: [antlr-interest] left recursion removal
> >
> > Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > > Greetings!
> > >
> > > [...]
> > >
> > > unable to reproduce.
> > >
> > > given your admittedly partial grammar, i tried to construct a
> > complete
> > > example by adding the missing elements and creating an AST (so i
> > could
> > > know the resultant parse).
> > >
> > > my test rig is attached.
> > >
> > > it runs without error when Tool'd, compiled, and executed from the
> > > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and
> > the
> > > Antlr version from the antlr-3.4-complete.jar file).
> > >
> > > Please try to post the *smallest* yet *complete* example of your
> > > problem.
> >
> > Sorry for not having posted a more complete code before, I though that
> > should have been enough...
> >
> > I have worked further on my grammar, with trying to define more
> > precisely what an expression should be, with operator precedence. This
> > made me rewrite the singleStatement by moving the funCall  rule to the
> > primary rule. But my problem about the if-then-else construct is not
> > gone.
> >
> > I have stripped down my grammar, keeping only the expression and
> > subsequent rules, removed all that define loops, switches, etc.
> > Given that simplified grammar, the following script should pass the
> > parsing, but it can't yet :
> >
> > ---------------------------------------
> > string s1, s2
> >
> > if s1='42' then s2='421'
> >
> > if s2='421' then
> > 	string s3
> > 	s3='123'
> > else
> > 	string s4
> > 	s4='666'
> > end if
> >
> > ---------------------------------------
> >
> > Also, to Jim Idle : the language I would be able to parse is
> > Powerbuilder. You can see it as a sort of basic, while it accepts
> > syntax like i++ or s += 'foo' He has also the ability to accept inline
> > sql statements... I tried to play on the EndOfLine delimiter to handle
> > the two if-then-else syntaxes but without success.
> >
> > --
> > S?bastien Kirche
> 
> 
> ------------------------------
> 
> Message: 10
> Date: Wed, 6 Jul 2011 16:51:43 -0700
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [antlr-interest] Think I found a bug.
> To: james1018 at gmail.com
> Cc: antlr-interest at antlr.org
> Message-ID: <2804C178-36DD-4203-A1BE-4640612C1C99 at cs.usfca.edu>
> Content-Type: text/plain;	charset=us-ascii
> 
> tanx. fixed for 3.4
> Ter
> On Jul 6, 2011, at 4:15 PM, James Reid wrote:
> 
> > This worked...
> > 
> > @Override
> >     public void reset() {
> >         super.reset();
> >         p = skipOffTokenChannels(0);
> >     }
> > 
> > Glad I could contribute in some small way.
> > 
> > James
> > 
> > On Wed, Jul 6, 2011 at 1:57 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> > Hi James. ack! i think reset() should call
> > 
> > skipOffTokenChannels()
> > 
> > Can you override reset to call super.reset() then skipOffTokenChannels() and see if that works?  If so, i can fix for 3.4
> > Ter
> > On Jul 5, 2011, at 5:30 AM, James Reid wrote:
> > 
> > > Hi all,
> > >
> > >  I think I found a bug but I want to be sure.  I have a parser grammar that
> > > I run two passes on.  Here are short versions of the rules.
> > >
> > >
> > >
> > > firstpass
> > >  :  (collect_matches
> > >  |  collect_labels
> > >  |  .)*
> > >  ;
> > >
> > >
> > > script
> > >  :  header? matches* EOF
> > >  ;
> > >
> > >
> > > When I run the code I use a CommonTokenStream and do the following
> > >
> > > CommonTokenStream tokens = new CommonTokenStream(lex);
> > > MyParser parser = new MyParser(tokens);
> > >
> > > parser.firstpass();
> > >
> > > tokens.reset();
> > >
> > > parser.script();
> > >
> > >
> > > The problem comes when I do the tokens.reset().  If the very first token is
> > > a comment (i.e. on the hidden channel) it is returned in parser.script() and
> > > throws a NoViableAlternativeException because nothing in my grammar is
> > > expecting a comment.  To get around this I do the following...
> > >
> > >           //Reset the tokens back to the begining
> > >            tokens.reset();
> > >
> > >            //For some reason after the tokens have been buffered up if a
> > > hidden
> > >            //token is the first token it is returned instead getting the
> > >            //first non-hidden token.  This little hack works around that.
> > >            if (tokens.LT(1).getChannel() == Token.HIDDEN_CHANNEL){
> > >                tokens.consume();
> > >            }
> > >
> > >            //now we can build the AST
> > >            r=parser.script();
> > >
> > > If I consume the hidden token then the token stream points at the next
> > > on-channel token like it is supposed to do.  Is this a bug or am I doing
> > > things wrong?
> > >
> > > Thanks,
> > > James
> > >
> > > PS:  This is with Antlr 3.3
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > 
> > 
> 
> 
> 
> ------------------------------
> 
> Message: 11
> Date: Wed, 06 Jul 2011 23:08:05 -0400
> From: "John B. Brodie" <jbb at acm.org>
> Subject: Re: [antlr-interest] left recursion removal
> To: S?bastien Kirche <sebastien.kirche at gmail.com>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <1310008085.28443.1.camel at gecko>
> Content-Type: text/plain; charset="utf-8"
> 
> see attached.
> 
> I, also, am available for hire, if you should opt for that...
> 
>    -jbb
> 
> On Thu, 2011-07-07 at 01:27 +0200, S?bastien Kirche wrote:
> > Le 7 juillet 2011 00:14, John B. Brodie <jbb at acm.org> a ?crit :
> > > Greetings!
> > >
> > > [...]
> > >
> > > unable to reproduce.
> > >
> > > given your admittedly partial grammar, i tried to construct a complete
> > > example by adding the missing elements and creating an AST (so i could
> > > know the resultant parse).
> > >
> > > my test rig is attached.
> > >
> > > it runs without error when Tool'd, compiled, and executed from the
> > > command-line (FWIW i use Ubunto 11.04 Linux running Sun Java 6 and the
> > > Antlr version from the antlr-3.4-complete.jar file).
> > >
> > > Please try to post the *smallest* yet *complete* example of your
> > > problem.
> > 
> > Sorry for not having posted a more complete code before, I though that
> > should have been enough...
> > 
> > I have worked further on my grammar, with trying to define more
> > precisely what an expression should be, with operator precedence. This
> > made me rewrite the singleStatement by moving the funCall  rule to the
> > primary rule. But my problem about the if-then-else construct is not
> > gone.
> > 
> > I have stripped down my grammar, keeping only the expression and
> > subsequent rules, removed all that define loops, switches, etc.
> > Given that simplified grammar, the following script should pass the
> > parsing, but it can't yet :
> > 
> > ---------------------------------------
> > string s1, s2
> > 
> > if s1='42' then s2='421'
> > 
> > if s2='421' then
> > 	string s3
> > 	s3='123'
> > else
> > 	string s4
> > 	s4='666'
> > end if
> > 
> > ---------------------------------------
> > 
> > Also, to Jim Idle : the language I would be able to parse is
> > Powerbuilder. You can see it as a sort of basic, while it accepts
> > syntax like i++ or s += 'foo' He has also the ability to accept inline
> > sql statements... I tried to play on the EndOfLine delimiter to handle
> > the two if-then-else syntaxes but without success.
> > 
> 
> 
> -------------- next part --------------
> grammar pbifthenelse;
> 
> options {
>    output = AST;
>    ASTLabelType = CommonTree;
> }
> 
> @members {
>    private static final String [] x = new String[] {
>       "string s1, s2\n"+
>       "\n"+
>       "if s1='42' then s2='421'\n"+
>       "\n"+
>       "if s2='421' then\n"+
>       "        string s3\n"+
>       "        s3='123'\n"+
>       "else\n"+
>       "        string s4\n"+
>       "        s4='666'\n"+
>       "end if\n",
>       "string s1 = '42', s2='999', s3='101'\n"+
>       "\n"+
>       "if s1='42' then s2='421'\n"+
>       "\n"+
>       "if s2='421' then\n"+
>       "        s3='123'\n"+
>       "else\n"+
>       "        s3='666'\n"+
>       "end if\n"
>   };
> 
>    public static void main(String [] args) {
>       for( int i = 0; i < x.length; ++i ) {
>          try {
>             System.out.println("about to parse:`"+x[i]+"`");
> 
>             pbifthenelseLexer lexer =
>                new pbifthenelseLexer(new ANTLRStringStream(x[i]));
>             CommonTokenStream tokens = new CommonTokenStream(lexer);
>             pbifthenelseParser parser = new pbifthenelseParser(tokens);
>             pbifthenelseParser.pgm_return p_result = parser.pgm();
> 
>             // System.out.format("the token stream:\%n");
>             // for( int j = 0; j < tokens.size(); ++j ) {
>             //    Token token = tokens.get(j);
>             //    System.out.format("\%d: type = \%s, text = `\%s`\%n",
>             //                      j,
>             //                      tokenNames[token.getType()],
>             //                      token.getText());
>             // }
> 
>             CommonTree ast = p_result.tree;
>             if( ast == null ) {
>                System.out.println("resultant tree: is NULL");
>             } else {
>                System.out.println("resultant tree: " + ast.toStringTree());
>             }
>             System.out.println();
>          } catch(Exception e) {
>             e.printStackTrace();
>          }
>       }
>    }
> }
> 
> pgm : codeBlock EOF!;
> 
> codeBlock : ( compoundStatement )* ;
> 
> compoundStatement
>    : (  /* empty */
>       | localVariableDeclaration
>       | ifStatement
>       | singleStatement
>       ) ( ';' | EOL )
>    ;
> 
> singleStatement : assignment ;
> 
> assignment : IDENTIFIER OPEQ expression ;
> 
> ifStatement
>    : 'if' expression 'then'
>       ((singleStatement ('else' singleStatement)? EOL)=>
>          singleStatement ('else' singleStatement)?
>       | codeBlock ('else' codeBlock)? 'end if'
>       )
>    ;
> // predicate is needed to distinguish between the singleStatment for a
> // single line IF and the singleStatement within a compoundStatement
> // comprising a codeBlock that contains just one statement within a
> // multi-line IF.
> 
> localVariableDeclaration
>    : dataType variableDeclaration (',' variableDeclaration)*
>    ;
> 
> variableDeclaration
>    : IDENTIFIER ( OPEQ literal)?
>    ;
> 
> dataType
>    : 'int' | 'integer'
>    | 'long'
>    | 'string'
>    ;
> 
> 
> expression : logicalORExpr ;
> 
> logicalORExpr : logicalANDExpr ('or' logicalANDExpr)* ;
> 
> logicalANDExpr : logicalNOTExpr ('and' logicalNOTExpr)* ;
> 
> logicalNOTExpr : 'not'? relationalExpr ;
> 
> relationalExpr : binaryPlusMinus (logicalOP binaryPlusMinus)* ;
> 
> binaryPlusMinus : unaryExpr (('+' | '-') binaryMulDiv)* ;
> 
> unaryExpr : ('+' | '-')? binaryMulDiv ;
> 
> binaryMulDiv : exponentExpr (('*' | '/') exponentExpr)* ;
> 
> exponentExpr : primary ( '^' primary )* ;
> 
> primary
>    : ( '(' expression ')' )
>    | literal
>    | ( IDENTIFIER postFixExpr? )
>    ;
> 
> postFixExpr
>    : '!'
>    | '++'
>    | '--'
>    | '(' expressionList? ')' // funCall
>       // placing funCall here permits expressions like: f(x) + g(y)
>    ;
> 
> expressionList : expression (',' expression)* ;
> 
> logicalOP
>    : OPEQ
>    | OPNEQ
>    | OPINF
>    | OPINFEQ
>    | OPSUP
>    | OPSUPEQ
>    ;
>  
> literal
>    : STRING_LITERAL
>    | INTEGER_LITERAL
>    ;
> 
> WS : (' '|'\t'|'\u000C') {$channel=HIDDEN;} ;
> 
> EOL
>    : '\r' '\n'   // DOS
>    | '\r'        // Mac
>    | '\n'        // Unix
>    ;
> 
> STRING_LITERAL
>    : '\'' ( options{ greedy=false; }: ( ~('\\'|'\'') | ('\\' '\'') ) )* '\''
>       {
>          System.out.println("string>" + getText());
>       }
>    ;
>     
>   
> INTEGER_LITERAL : '0' | ( '1'..'9' ( '0'..'9' )* ) ;
> 
> IDENTIFIER
>    :  LETTER (LETTER|'0'..'9'|'$'|'#'|'%'|'-')*
>       {
>          System.out.println("identifier>" + getText());
>       }
>    ;
> 
> fragment LETTER : ('A'..'Z'|'a'..'z'|'_') ;
> 
> OPEQ    : '=' ;
> OPNEQ   : '<>' ;
> OPINF   : '<' ;
> OPINFEQ : '<=' ;
> OPSUP   : '>' ;
> OPSUPEQ : '>=' ;
> 
> ------------------------------
> 
> Message: 12
> Date: Thu, 7 Jul 2011 08:47:35 +0200
> From: S?bastien Kirche <sebastien.kirche at gmail.com>
> Subject: Re: [antlr-interest] left recursion removal
> To: "John B. Brodie" <jbb at acm.org>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<CALGPt8bsE1DaBrVrLEWbJfuSJPMMiBfdyuviXseXgMaa4-_hjw at mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
> 
> Le 7 juillet 2011 05:08, John B. Brodie <jbb at acm.org> a ?crit :
> > see attached.
> >
> > I, also, am available for hire, if you should opt for that...
> 
> 
> 2011/7/7 Jim Idle <jimi at temporal-wave.com>:
> > [...]
> > Or you could pay me to do it as I have no work on right now ;-) boo hoo.
> 
> 
> Hehe :o)
> Thank you very much for your feedback, I will look at it later today.
> I wish I could support you, but there is no funding in that PBScript
> parser project : I am working on it in my free time and if I manage to
> have something working, I plan to publish it as free open source code.
> It could serve for building a syntax highlighter for the
> scite/scintilla editor (a bit overkill maybe) and maybe it could also
> be reused with Eclipse / IMP (though the parser generator used by IMP
> is LPG, i am not sure if / how to use a custom antlr produced parser).
> These tools are first to help my every day work with Powerbuilder.
> 
> Do you suggest that I could earn some money with a parser for a dying
> language ?  ;o)
> -- 
> S?bastien Kirche
> 
> 
> ------------------------------
> 
> Message: 13
> Date: Thu, 07 Jul 2011 10:11:44 +0200
> From: Ivan Brezina <ibre5041 at ibrezina.net>
> Subject: [antlr-interest] C Target won't compile with MSVC
> To: antlr-interest at antlr.org
> Message-ID: <20110707101144.x5vzv6h5gk4kw0sc at webmail.kamm.cz>
> Content-Type: text/plain;	charset=ISO-8859-1;	DelSp="Yes";
> 	format="flowed"
> 
> Hi
> I'm not sure whether this is a bug or not.
> In my grammar I use following rule to match Perl style
> quoted strings:
> 
> /* Perl-style quoted string */
> QSTRING             : ('q'|'Q') ( QS_ANGLE | QS_BRACE | QS_BRACK |  
> QS_PAREN | QS_OTHER) ;
> fragment QS_ANGLE   : QUOTE '<' ( options {greedy=false;} : . )* '>' QUOTE ;
> fragment QS_BRACE   : QUOTE '{' ( options {greedy=false;} : . )* '}' QUOTE ;
> fragment QS_BRACK   : QUOTE '[' ( options {greedy=false;} : . )* ']' QUOTE ;
> fragment QS_PAREN   : QUOTE '(' ( options {greedy=false;} : . )* ')' QUOTE ;
> 
> fragment QS_OTHER_CH: ~('<'|'{'|'['|'('|' '|'\t'|'\n'|'\r');
> fragment QS_OTHER
> 		@init {
>      		ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *, ANTLR3_INT32);
> 			oldLA = INPUT->istream->_LA;
>              INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> 		}
> 		:
> 		QUOTE delimiter=QS_OTHER_CH
> /* JAVA Syntax */
> // 		( { input.LT(1) != $delimiter.text.charAt(0) || ( input.LT(1) ==  
> $delimiter.text.charAt(0) && input.LT(2) != '\'') }? => . )*
> // 		( { input.LT(1) == $delimiter.text.charAt(0) && input.LT(2) ==  
> '\'' }? => . ) QUOTE
> /* C Syntax */
> 		( { LA(1) != $delimiter->getText(delimiter)->chars[0] || LA(2) !=  
> '\'' }? => . )*
> 		( { LA(1) == $delimiter->getText(delimiter)->chars[0] && LA(2) ==  
> '\'' }? => . ) QUOTE
>   		{ INPUT->istream->_LA = oldLA; }
> 		;
> 
> The problem is, that I need to declare my own variable inside @init section.
> 
> Antlr generates such a C source:
> 
> static ANTLR3_INLINE
> void mQS_OTHER(pOracleSQLLexer ctx)
> {
> 	ANTLR3_UINT32	_type;
>      pANTLR3_COMMON_TOKEN delimiter;
> 
> 
>      delimiter = NULL;
> 
> 
>          		ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *,  
> ANTLR3_INT32);
>      			oldLA = INPUT->istream->_LA;
>                  INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> 
> ... etc.
> 
> MSVC complains that the variable oldLA is declared AFTER assignment  
> statement. Could you modify the it into this?
> 
> static ANTLR3_INLINE
> void mQS_OTHER(pOracleSQLLexer ctx)
> {
>      ANTLR3_UINT32	_type;
>      pANTLR3_COMMON_TOKEN delimiter = NULL;
> 
>      ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *, ANTLR3_INT32);
>      oldLA = INPUT->istream->_LA;
>      INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> 
> ...etc
> 
> Ivan
> 
> 
> 
> 
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> 
> 
> 
> ------------------------------
> 
> Message: 14
> Date: Thu, 7 Jul 2011 05:36:11 -0700
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] C Target won't compile with MSVC
> To: antlr-interest at antlr.org
> Message-ID: <6f731513d5b601868af4f6bad31c420d at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> That is what the @declarations section is for. It will ensure the variable
> declaration is in the right place.
> 
> http://antlr.markmail.org/search/C+declarations
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ivan Brezina
> > Sent: Thursday, July 07, 2011 1:12 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] C Target won't compile with MSVC
> >
> > Hi
> > I'm not sure whether this is a bug or not.
> > In my grammar I use following rule to match Perl style quoted strings:
> >
> > /* Perl-style quoted string */
> > QSTRING             : ('q'|'Q') ( QS_ANGLE | QS_BRACE | QS_BRACK |
> > QS_PAREN | QS_OTHER) ;
> > fragment QS_ANGLE   : QUOTE '<' ( options {greedy=false;} : . )* '>'
> > QUOTE ;
> > fragment QS_BRACE   : QUOTE '{' ( options {greedy=false;} : . )* '}'
> > QUOTE ;
> > fragment QS_BRACK   : QUOTE '[' ( options {greedy=false;} : . )* ']'
> > QUOTE ;
> > fragment QS_PAREN   : QUOTE '(' ( options {greedy=false;} : . )* ')'
> > QUOTE ;
> >
> > fragment QS_OTHER_CH: ~('<'|'{'|'['|'('|' '|'\t'|'\n'|'\r'); fragment
> > QS_OTHER
> > 		@init {
> >      		ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct
> > *, ANTLR3_INT32);
> > 			oldLA = INPUT->istream->_LA;
> >              INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> > 		}
> > 		:
> > 		QUOTE delimiter=QS_OTHER_CH
> > /* JAVA Syntax */
> > // 		( { input.LT(1) != $delimiter.text.charAt(0) || (
> input.LT(1)
> > ==
> > $delimiter.text.charAt(0) && input.LT(2) != '\'') }? => . )*
> > // 		( { input.LT(1) == $delimiter.text.charAt(0) &&
> input.LT(2)
> > ==
> > '\'' }? => . ) QUOTE
> > /* C Syntax */
> > 		( { LA(1) != $delimiter->getText(delimiter)->chars[0] ||
> > LA(2) != '\'' }? => . )*
> > 		( { LA(1) == $delimiter->getText(delimiter)->chars[0] &&
> > LA(2) == '\'' }? => . ) QUOTE
> >   		{ INPUT->istream->_LA = oldLA; }
> > 		;
> >
> > The problem is, that I need to declare my own variable inside @init
> > section.
> >
> > Antlr generates such a C source:
> >
> > static ANTLR3_INLINE
> > void mQS_OTHER(pOracleSQLLexer ctx)
> > {
> > 	ANTLR3_UINT32	_type;
> >      pANTLR3_COMMON_TOKEN delimiter;
> >
> >
> >      delimiter = NULL;
> >
> >
> >          		ANTLR3_UINT32 (*oldLA)(struct
> ANTLR3_INT_STREAM_struct
> > *, ANTLR3_INT32);
> >      			oldLA = INPUT->istream->_LA;
> >                  INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> >
> > ... etc.
> >
> > MSVC complains that the variable oldLA is declared AFTER assignment
> > statement. Could you modify the it into this?
> >
> > static ANTLR3_INLINE
> > void mQS_OTHER(pOracleSQLLexer ctx)
> > {
> >      ANTLR3_UINT32	_type;
> >      pANTLR3_COMMON_TOKEN delimiter = NULL;
> >
> >      ANTLR3_UINT32 (*oldLA)(struct ANTLR3_INT_STREAM_struct *,
> > ANTLR3_INT32);
> >      oldLA = INPUT->istream->_LA;
> >      INPUT->setUcaseLA(INPUT, ANTLR3_FALSE);
> >
> > ...etc
> >
> > Ivan
> >
> >
> >
> >
> >
> > ----------------------------------------------------------------
> > This message was sent using IMP, the Internet Messaging Program.
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> 
> ------------------------------
> 
> Message: 15
> Date: Thu, 7 Jul 2011 06:57:41 -0700 (PDT)
> From: Roy Metzger <antlrmen at yahoo.com>
> Subject: [antlr-interest] loops and syntax-directed interpreter ?
> To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>
> Message-ID:
> 	<1310047061.42770.YahooMailNeo at web121116.mail.ne1.yahoo.com>
> Content-Type: text/plain; charset=iso-8859-1
> 
> Hello everyone and good day,
> 
> I'm following Mr. Parr's tutorial on syntax-directed interpreter for Pie language
> (link: http://www.antlr.org/wiki/display/ANTLR3/Pie ). So, for this one? I'm not interested
> into building tree's and such.
> 
> Now, the problem. I'm using code provided with the tutorial with minimal tweaks. My issue is with the while loop.
> It looks like this:
> 
> while[boolean defer]:
> 'while' e=expr [defer]
> s=statement[defer]+
> 'stop' 'loop'
> {if (!defer) interp.allWhile($e.start, $s.start);} ;
> 
> 
> My issue is with starting location of the statements passed(token index).For example this works:
> 
> while(true)
> print 1 //print unlimited number of 1's
> stop loop
> 
> 
> However, whenever I use multiple statements, only last one is executed, for example:
> while(true)
> print 1
> print 2
> print 3
> stop loop
> 
> This will print non-stop 3's, and? not 1,2,3,1,2,3 as I would want etc.
> 
> If there are multiple statements in the while loop, while function in the interpreter always rewinds input to
> the last statement in the while clasue(print 3 in above example, while I would like to rewind input to print 1).
> 
> In the interpreter, callWhile function is not changed from the tutorial(aside statements instead of slist):
> 
> ?public void callWhile(Token condStart, Token codeStart) 
> 
> {
> ?????? Boolean c = (Boolean)exec("expr", condStart.getTokenIndex());
> 
> ??????? while ( c ) 
> 
> {
> ??????????? exec("statement", codeStart.getTokenIndex());
> ??????????? c = (Boolean)exec("expr", condStart.getTokenIndex());
> ?? }
> ?? }
> 
> 
> 
> Also, exec is not changed from the tutorial:
> 
> ?public Object exec(String rule, int tokenIndex) 
> 
> {
> ??????? Object rv = null;
> ??????? try 
> 
> {
> ??????????? int oldPosition = parser.input.index(); // save current location
> ??????????? parser.input.seek(tokenIndex); // seek to place to start execution
> ??????????? try { // which rule are we executing?
> ??????????????? if ( rule.equals("expr") ) { rv = parser.expr(false).value; }
> ??????????????? else if ( rule.equals("statement") ) { parser.statement(false); }
> ??????????????? else listener.error("error: can't start at "+rule);
> ??? }
> ??????????? finally { parser.input.seek(oldPosition); }// restore location
> ?????? }
> ??????? catch (Exception e) {
> ??????????? listener.error("can't exec code @ index "+tokenIndex, e);
> ?????? }
> ??????? return rv;
> ?? }
> 
> Now, I would really appreciate if someone could point me out why is this happening and
> how it can be fixed? Also, I've noticed that even code from the tutorial has similar issues.
> 
> I would really appreciate any help, hints or tricks to help solve this problem.
> Thanks,
> Lee
> 
> ------------------------------
> 
> Message: 16
> Date: Thu, 7 Jul 2011 17:04:55 +0200
> From: S?bastien Kirche <sebastien.kirche at gmail.com>
> Subject: Re: [antlr-interest] left recursion removal
> To: "John B. Brodie" <jbb at acm.org>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID:
> 	<CALGPt8ZeOHcgejygQsbmmbaCue2M7VvwwQ2uJnu33n-Li4x09g at mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
> 
> Le 7 juillet 2011 05:08, John B. Brodie <jbb at acm.org> a ?crit :
> > see attached.
> 
> Many, many thanks, as your corrections on my example helped me
> considerably and the initial recursion is gone.
> I had also an obvious bug in my "NOT" expression. Now I have added
> some other structures like for/next and choose/case
> 
> My current problem is that your refactor of my funCall rule by
> following an expression by a postfix notation seems not working on my
> test code.
> That looks clever, but during parsing, the Parser seem to look for a
> missing assignment between the function identifier and the parameter
> list. I did not found why yet.
> 
> I join my grammar in its current state.
> -- 
> S?bastien Kirche
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: PowerScript.g
> Type: application/octet-stream
> Size: 8175 bytes
> Desc: not available
> Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110707/55c5fd2c/attachment-0001.obj 
> 
> ------------------------------
> 
> Message: 17
> Date: Thu, 07 Jul 2011 11:51:52 -0400
> From: "John B. Brodie" <jbb at acm.org>
> Subject: Re: [antlr-interest] left recursion removal
> To: S?bastien Kirche <sebastien.kirche at gmail.com>
> Cc: antlr-interest <antlr-interest at antlr.org>
> Message-ID: <1310053912.9154.2.camel at gecko>
> Content-Type: text/plain; charset="UTF-8"
> 
> Greetings!
> 
> On Thu, 2011-07-07 at 17:04 +0200, S?bastien Kirche wrote:
> > Le 7 juillet 2011 05:08, John B. Brodie <jbb at acm.org> a ?crit :
> > > see attached.
> > 
> > Many, many thanks, as your corrections on my example helped me
> > considerably and the initial recursion is gone.
> 
> you are welcome. i actually enjoy doing this stuff.
> 
> > I had also an obvious bug in my "NOT" expression. Now I have added
> > some other structures like for/next and choose/case
> > 
> > My current problem is that your refactor of my funCall rule by
> > following an expression by a postfix notation seems not working on my
> > test code.
> > That looks clever, but during parsing, the Parser seem to look for a
> > missing assignment between the function identifier and the parameter
> > list. I did not found why yet.
> > 
> > I join my grammar in its current state.
> 
> change the singleStatement rule to this:
> 
> singleStatement
> 	:	IDENT ( OPEQ expression | '(' expressionList? ')' )
> 	|	'return' expression
> 	;
> 
> and delete the now unnecessary assignment rule.
>    -jbb
> 
> 
> 
> 
> ------------------------------
> 
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
> 
> End of antlr-interest Digest, Vol 80, Issue 7
> *********************************************
 		 	   		  

From james_ladd at hotmail.com  Thu Jul  7 15:44:32 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Fri, 8 Jul 2011 08:44:32 +1000
Subject: [antlr-interest] Lines that don't match a rule ...
In-Reply-To: <mailman.1.1310065201.15221.antlr-interest@antlr.org>
References: <mailman.1.1310065201.15221.antlr-interest@antlr.org>
Message-ID: <BAY149-w4E2B449426519AA12098AED410@phx.gbl>


Hi Jim and Others ...

The suggested grammar (which I have modified slightly) below works in most
cases except when I parse the following:

\n
+ add: value\n
   ^ self + value\n
\n

What I was hoping for is that line three (3) '^ self + value\n' is a seen as a line not starting with '+' | '-'
and consumed entirely - But I get a No Viable Alternative Exception.

Please can some one help ?

Rgs, James.

lines
  : (line LINE_BREAK)* EOF
  ;
 
line
  : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
  | { while (input.LA(1) != LINE_BREAK && input.LA(1) != EOF) input.consume(); }
  ;

unarySelector
  : NAME
  ;

keywordSelector
  : (KEYWORD NAME)+
  ;

binarySelector
  : (BINARY_SYMBOL| '-' | '+')  NAME
  ;

LINE_BREAK: ('\r'? '\n' | '\r');
NAME: ('a'..'z' | 'A'..'Z')('a'..'z' | 'A'..'Z' | '0'..'9')*;
KEYWORD: NAME ':';
BINARY_SYMBOL: ('~'|'!'|'@'|'%'|'&'|'*'|'-'|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',') ('~'|'!'|'@'|'%'|'&'|'*'|'-'|'+'|'='|'\\'|'|'|'?'|'/'|'>'|'<'|',')*;

> 
> Message: 7
> Date: Wed, 6 Jul 2011 16:30:52 -0700
> From: Jim Idle <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Lines that don't match a rule ...
> To: antlr-interest at antlr.org
> Message-ID: <6556c9d271c906dfb308bb73f0e8e262 at mail.gmail.com>
> Content-Type: text/plain; charset=UTF-8
> 
> Try:
> 
> lines
>   : (messagePattern LINE_BREAK)* EOF
>   ;
> 
> messagePattern
>   : ('+' | '-') (unarySelector | keywordSelector | binarySelector)
>   | { while (input.LA(1) != LINE_BREAK && input.LA(1) != EOF)
> input.consume(); }
>   ;
> 
> This will just eat the lines that don't
> 
> 

 		 	   		  

From chris at wegenerconsulting.com  Thu Jul  7 17:15:26 2011
From: chris at wegenerconsulting.com (Chris Wegener)
Date: Thu, 7 Jul 2011 17:15:26 -0700
Subject: [antlr-interest] Parsing Question
Message-ID: <007301cc3d04$239fcae0$6adf60a0$@com>

Dear Friends-

 

I am attempting to define a language that will let me parse knitting
instructions.  (Don't ask.)

 

By and large it is a well understood convention with standard abbreviations
and phrases.  Occasionally the originator will insert a phrase in the
instructions that are not directly relevant.  What I would like is to parse
out those words and deal with them around the issue of reading the
instructions.  I have tried:

 

text :    (letter)+;

letter :  ('a'..'z' | 'A'..'Z');

WS   :    (' ' | '\n' | '\r');

 

And it doesn't work at all.  I changed it to:

 

text :   (letter)+;

letter :~('"' | '\\');

WS   :   (' ' | '\n' | '\r');


That works, but becomes unweildy very quickly when I start including all of
the things I do know to scan for. I have attached the KnittingGrammer.g file
with my rules.

For example:

"1st Section: Cast on 63 stitches (sts) and work in pattern as follows:" is
parsed into '1st Section:' and 'Cast on 63 stitches (sts)' which leaves the
text until the colon which is the stop character.  I would like to parse the
'and work in pattern as follows' into the parse tree under text so I can
inspect it or lex it seperately or even display to the user.

What am I missing or doing wrong?

My thanks for your help in advance.

Regards,

Chris

 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: KnittingGrammer.g
Type: application/octet-stream
Size: 1175 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110707/eb7f5c40/attachment.obj 

From bkiers at gmail.com  Fri Jul  8 00:16:23 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 8 Jul 2011 09:16:23 +0200
Subject: [antlr-interest] Parsing Question
In-Reply-To: <007301cc3d04$239fcae0$6adf60a0$@com>
References: <007301cc3d04$239fcae0$6adf60a0$@com>
Message-ID: <CAOrgODZRBGEKVMa9PggFYKZ60ZxX3DfCbSEYfEgutkVAfAHfqg@mail.gmail.com>

Hi Chris,

Very original! :)

Try to do more in lexer rules. Some of your keywords may probably also be a
part of the "instruction phrase": you need to be aware of that.
How about something like this:

grammar KnittingGrammer;

parse
  :  instruction+ EOF
  ;

instruction
  :  section FullStop
  |  castOn FullStop
  ;

section
  :  NumberDecoration Section
  |  Section NumberDecoration
  ;

castOn
  :  CastOn Number Stitches+ anyWordExceptStitches anyWord*
  ;

anyWordExceptStitches
  :  NumberDecoration
  |  Number
  |  Section
  |  Word
  ;

anyWord
  :  NumberDecoration
  |  Number
  |  Section
  |  Stitches
  |  Word
  ;

NumberDecoration
 :  Digit+ ('st' | 'nd' | 'rd' | 'th')
 ;

Number
  :  Digit+
  ;

FullStop
  :  ':'
  |  ';'
  |  ','
  |  '.'
  |  '\n'
  |  '\r'
  ;

Section
  :  'section'
  ;

CastOn
  :  'cast' Space+ 'on'
  |  'co'
  ;

Stitches
  :  'stitch' 'es'?
  |  '(sts)'
  |  'sts'
  ;

Space
  :  (' ' | '\t') {skip();}
  ;

Word
  :  ('a'..'z' | 'A'..'Z')+
  ;

fragment Digit : '0'..'9';


which parses input like this properly:

1st section: cast on 63 stitches (sts) and work in pattern section as
follows:


Regards,

Bart.


On Fri, Jul 8, 2011 at 2:15 AM, Chris Wegener
<chris at wegenerconsulting.com>wrote:

> Dear Friends-
>
>
>
> I am attempting to define a language that will let me parse knitting
> instructions.  (Don't ask.)
>
>
>
> By and large it is a well understood convention with standard abbreviations
> and phrases.  Occasionally the originator will insert a phrase in the
> instructions that are not directly relevant.  What I would like is to parse
> out those words and deal with them around the issue of reading the
> instructions.  I have tried:
>
>
>
> text :    (letter)+;
>
> letter :  ('a'..'z' | 'A'..'Z');
>
> WS   :    (' ' | '\n' | '\r');
>
>
>
> And it doesn't work at all.  I changed it to:
>
>
>
> text :   (letter)+;
>
> letter :~('"' | '\\');
>
> WS   :   (' ' | '\n' | '\r');
>
>
> That works, but becomes unweildy very quickly when I start including all of
> the things I do know to scan for. I have attached the KnittingGrammer.g
> file
> with my rules.
>
> For example:
>
> "1st Section: Cast on 63 stitches (sts) and work in pattern as follows:" is
> parsed into '1st Section:' and 'Cast on 63 stitches (sts)' which leaves the
> text until the colon which is the stop character.  I would like to parse
> the
> 'and work in pattern as follows' into the parse tree under text so I can
> inspect it or lex it seperately or even display to the user.
>
> What am I missing or doing wrong?
>
> My thanks for your help in advance.
>
> Regards,
>
> Chris
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From sebastien.kirche at gmail.com  Fri Jul  8 00:47:20 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Fri, 8 Jul 2011 09:47:20 +0200
Subject: [antlr-interest] left recursion removal
In-Reply-To: <1310053912.9154.2.camel@gecko>
References: <CALGPt8YiQvER1svK_zfJQ7UkJXYz5ww0U0yRLj7ha_GMK+v8yw@mail.gmail.com>
	<1309990456.23994.21.camel@gecko>
	<CALGPt8bbeQOGHJEB8zzXYbyiMbjmQJoT6bqEqJEq5SbU03z7_g@mail.gmail.com>
	<1310008085.28443.1.camel@gecko>
	<CALGPt8ZeOHcgejygQsbmmbaCue2M7VvwwQ2uJnu33n-Li4x09g@mail.gmail.com>
	<1310053912.9154.2.camel@gecko>
Message-ID: <CALGPt8Y5CchRbQo8GmfgrPoQBaZHs1A31CCHVZ8qeVX-snh-nw@mail.gmail.com>

Le 7 juillet 2011 17:51, John B. Brodie <jbb at acm.org> a ?crit :
>
> change the singleStatement rule to this:
>
> singleStatement
> ? ? ? ?: ? ? ? IDENT ( OPEQ expression | '(' expressionList? ')' )
> ? ? ? ?| ? ? ? 'return' expression
> ? ? ? ?;
>
> and delete the now unnecessary assignment rule.

And it works.
It's like watching a juggler on tv : it looks almost easy ;o)

Thanks.
-- 
S?bastien Kirche

From james_ladd at hotmail.com  Fri Jul  8 02:03:27 2011
From: james_ladd at hotmail.com (James Ladd)
Date: Fri, 8 Jul 2011 19:03:27 +1000
Subject: [antlr-interest] Are there ANTLR Consulting service?
In-Reply-To: <mailman.1.1310065201.15221.antlr-interest@antlr.org>
References: <mailman.1.1310065201.15221.antlr-interest@antlr.org>
Message-ID: <BAY149-w110B15F907F393B0CDFC4DED400@phx.gbl>


Hi All,

I have some antlr work that I need to get done a.s.a.p.
Are any ANTLR Consulting services I can contact to get this work done?  

Rgs, James.
 		 	   		  

From sharwell at pixelminegames.com  Fri Jul  8 13:10:14 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 8 Jul 2011 15:10:14 -0500
Subject: [antlr-interest] Updated Visual Studio 2010 Extensions for ANTLR
	and ST4
Message-ID: <01cf01cc3dab$0d27b5f0$277721d0$@pixelminegames.com>

Hello everyone,

 

I just published updated versions of my Visual Studio 2010 extensions to the
Visual Studio Gallery. Below is a note for existing users followed by a
description of the extensions and links to the Visual Studio Gallery where
they are published.

 

Important: If you previously installed an early copy of the following 3
extensions, you'll need to manually uninstall them (all of them) from the
"Tools -> Extension Manager." dialog before installing the new version. In
the future, the extensions should update correctly without having to
reinstall them.

.         ANTLR language support

.         StringTemplate 4 language support

.         Visual Studio Extensibility Framework

 

With that out of the way, here is a description of the various extensions.
Screenshots are available on the gallery pages for each extension.

 

ANTLR Language Support

http://visualstudiogallery.msdn.microsoft.com/25b991db-befd-441b-b23b-bb5f8d
07ee9f

 

.         Provides syntax highlighting and basic IntelliSense features for
ANTLR v3 grammars.

.         Adds the exceptions from Antlr.Runtime and Antlr.Runtime.Tree to
the Debug->Exceptions... dialog for easy configuration.

 

StringTemplate 4 Language Support

http://visualstudiogallery.msdn.microsoft.com/5ca30e58-96b4-4edf-b95e-3030da
f474ff

 

.         Provides syntax highlighting and a select few IntelliSense
features for StringTemplate files.

.         Some features are limited to the default delimiters '<' and '>'.

 

The following extensions are not quite as developed as the two above, but
I'll include them since some people may find them useful and because I used
ANTLR to create them. All of these extensions are being created for one of
my ongoing research projects.

 

Java Language Support

http://visualstudiogallery.msdn.microsoft.com/bc561769-36ff-4a40-9504-e266e8
706f93

 

PHP Language Support

http://visualstudiogallery.msdn.microsoft.com/2a10ba81-26c5-47d9-939b-6bcc7b
bec251

 

Alloy Language Support (http://alloy.mit.edu/community)

http://visualstudiogallery.msdn.microsoft.com/4ae31812-f841-45c3-8052-113077
5473f8

 

Go Language Support (http://golang.org)

http://visualstudiogallery.msdn.microsoft.com/bd7675ba-1bf5-4395-8c5a-4fc19d
fc0d76

 

Thank you,

Sam Harwell


From DJBall05 at hotmail.co.uk  Sun Jul 10 01:54:53 2011
From: DJBall05 at hotmail.co.uk (DJB MASTER)
Date: Sun, 10 Jul 2011 01:54:53 -0700 (PDT)
Subject: [antlr-interest] ASTLabelType C# Problem
Message-ID: <1310288093834-6567453.post@n2.nabble.com>

Hi, I'm using the vector math grammar example from the language patterns book
to practise with ASTs. The grammar is this one >
media.pragprog.com/titles/tpdsl/code/IR/Vec/VecMathAST.g.

I'm trying to let ANTLR build my custom nodes rather than CommonToken, so I
set ASTLabelType accordingly...

options 
{
  language = CSharp3;
  output = AST;
  ASTLabelType = ASTNode;
}

...but then I get the following compile errors on every rule... E.g, the
statement rule...

'MyParser.statement_return' does not implement interface member
'Antlr.Runtime.IAstRuleReturnScope.Tree'. 

'MyParser.statement_return.Tree' cannot implement
'Antlr.Runtime.IAstRuleReturnScope.Tree' because it does not have the
matching return
type of 'object'.

My ASTNode class is fine. I think this is more of a case of ANTLR not
generating the code properly as all the errors are in the parser. Everything
works fine just using CommonTree.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6567453.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sharwell at pixelminegames.com  Sun Jul 10 10:05:02 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 10 Jul 2011 12:05:02 -0500
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <1310288093834-6567453.post@n2.nabble.com>
References: <1310288093834-6567453.post@n2.nabble.com>
Message-ID: <025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>

What version of ANTLR are you using? Are you using Antlr3.exe or the java
version to generate your grammar?

I just ran the example you mentioned (changing only the options), and the
class statement_return doesn't even exist in the generated code, so
obviously we're using different versions of something.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of DJB MASTER
Sent: Sunday, July 10, 2011 3:55 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ASTLabelType C# Problem

Hi, I'm using the vector math grammar example from the language patterns
book to practise with ASTs. The grammar is this one >
media.pragprog.com/titles/tpdsl/code/IR/Vec/VecMathAST.g.

I'm trying to let ANTLR build my custom nodes rather than CommonToken, so I
set ASTLabelType accordingly...

options
{
  language = CSharp3;
  output = AST;
  ASTLabelType = ASTNode;
}

...but then I get the following compile errors on every rule... E.g, the
statement rule...

'MyParser.statement_return' does not implement interface member
'Antlr.Runtime.IAstRuleReturnScope.Tree'. 

'MyParser.statement_return.Tree' cannot implement
'Antlr.Runtime.IAstRuleReturnScope.Tree' because it does not have the
matching return type of 'object'.

My ASTNode class is fine. I think this is more of a case of ANTLR not
generating the code properly as all the errors are in the parser. Everything
works fine just using CommonTree.

--
View this message in context:
http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6567453.
html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From srberry1 at gmail.com  Sun Jul 10 12:31:09 2011
From: srberry1 at gmail.com (Shane)
Date: Sun, 10 Jul 2011 14:31:09 -0500
Subject: [antlr-interest] @members section in tree grammar
Message-ID: <CALQtsrcdz=b7N6t+Dy21eMO8ZXc5ZZTPRgyYPqUPLoQXCHtLoA@mail.gmail.com>

I can put an @members section in a grammar without any problem, but when I
put one in a tree grammar, I get a bunch of exceptions.  It ignores
everything after the @members section.  BTW,  I'm trying to get access to
the error output, so I can show it to the user.

Exception:
unexpected token: tokens {


grammar Expr;

options {
    output=AST;
    ASTLabelType=CommonTree;
    backtrack=true;
}

@members {
    public String getTokenErrorDisplay(Token t) {
        return t.toString();
    }
}

tokens {
    DIV                     = '/'               ;
    EQUAL                   = '=='              ;
    GREATER_OR_EQUAL        = '>='              ;
    GREATER_THAN            = '>'               ;
...


Can tree grammars handle @members sections?  or am I doing something wrong?

Thanks,

srb

From bkiers at gmail.com  Sun Jul 10 12:48:53 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 10 Jul 2011 21:48:53 +0200
Subject: [antlr-interest] @members section in tree grammar
In-Reply-To: <CALQtsrcdz=b7N6t+Dy21eMO8ZXc5ZZTPRgyYPqUPLoQXCHtLoA@mail.gmail.com>
References: <CALQtsrcdz=b7N6t+Dy21eMO8ZXc5ZZTPRgyYPqUPLoQXCHtLoA@mail.gmail.com>
Message-ID: <CAOrgODZrMhWrtE_HbunXWzZRAXsouXHGf8WWjFmOr+8anNiYyg@mail.gmail.com>

Hi Shane,

Inside a combined- or lexer- or parser grammar, the `tokens` should be
placed before the `members` section(s):

(lexer | parser)? grammar ...
options { ... }
tokens { ... }
@header { ... }   (or: @parser::header { ... }, @lexer::header { ... })
@members { ... }  (or: @parser::members { ... }, @lexer::members { ... })

But a tree grammar gets its tokens from the `tokenVocab` key:

tree grammar ExprWalker;

options {
  tokenVocab=Expr;
  ASTLabelType=CommonTree;
}

So no `tokens` section inside a tree grammar.

Regards,

Bart.


On Sun, Jul 10, 2011 at 9:31 PM, Shane <srberry1 at gmail.com> wrote:

> I can put an @members section in a grammar without any problem, but when I
> put one in a tree grammar, I get a bunch of exceptions.  It ignores
> everything after the @members section.  BTW,  I'm trying to get access to
> the error output, so I can show it to the user.
>
> Exception:
> unexpected token: tokens {
>
>
> grammar Expr;
>
> options {
>    output=AST;
>    ASTLabelType=CommonTree;
>    backtrack=true;
> }
>
> @members {
>    public String getTokenErrorDisplay(Token t) {
>        return t.toString();
>    }
> }
>
> tokens {
>    DIV                     = '/'               ;
>    EQUAL                   = '=='              ;
>    GREATER_OR_EQUAL        = '>='              ;
>    GREATER_THAN            = '>'               ;
> ...
>
>
> Can tree grammars handle @members sections?  or am I doing something wrong?
>
> Thanks,
>
> srb
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From DJBall05 at hotmail.co.uk  Sun Jul 10 15:17:19 2011
From: DJBall05 at hotmail.co.uk (DJB MASTER)
Date: Sun, 10 Jul 2011 15:17:19 -0700 (PDT)
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
Message-ID: <1310336239769-6568771.post@n2.nabble.com>

I've generated the code with AntlrWorks 1.4.2. and also used the antlr tool,
both give the same compile errors.

The reason that 'statement_return' doesn't exist in your version, is i've
just renamed the rules in the grammar from 'stat' to 'statement', no big
deal that should effect the generated code. The parser generates a
CommonTree AST just fine.

This isn't specific to this grammar. I wrote another grammar, which again
generates an AST fine using CommonTree, but when I add ASTLabelType to
change the node type, I get these errors.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6568771.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sharwell at pixelminegames.com  Sun Jul 10 15:46:05 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 10 Jul 2011 17:46:05 -0500
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <1310336239769-6568771.post@n2.nabble.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
Message-ID: <026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>

I'm not sure which templates are in use by AntlrWorks 1.4.2, but they
certainly aren't the latest/correct version for the CSharp3 target. Under
most conditions, the CSharp3 target doesn't emit the *_return classes at
all, and renaming the rules wouldn't affect that.

I suggest trying the latest version of the C# target available on the
following page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of DJB MASTER
Sent: Sunday, July 10, 2011 5:17 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ASTLabelType C# Problem

I've generated the code with AntlrWorks 1.4.2. and also used the antlr tool,
both give the same compile errors.

The reason that 'statement_return' doesn't exist in your version, is i've
just renamed the rules in the grammar from 'stat' to 'statement', no big
deal that should effect the generated code. The parser generates a
CommonTree AST just fine.

This isn't specific to this grammar. I wrote another grammar, which again
generates an AST fine using CommonTree, but when I add ASTLabelType to
change the node type, I get these errors.

--
View this message in context:
http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6568771.
html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From DJBall05 at hotmail.co.uk  Sun Jul 10 16:04:43 2011
From: DJBall05 at hotmail.co.uk (DJB MASTER)
Date: Sun, 10 Jul 2011 16:04:43 -0700 (PDT)
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
Message-ID: <1310339083410-6568868.post@n2.nabble.com>

Ok, I downloaded the preview release and it has seemed to fix those errors. I
was using the stable release because I didn't want to use a library that was
'temperamental'.

Just one more thing, now when using my ASTNode I get an invalid cast from
CommonTree to ASTNode in my rules. On these lines...

'Number16_tree = (ASTNode)adaptor.Create(Number16);'

I've set the adaptor using...

'ASTAdaptor treeAdaptor = new ASTAdaptor();
parser.TreeAdaptor = treeAdaptor;'

Do I have to set the adaptor somewhere else? I've seen people talking about
invalid casts from CommonTree, not sure what's required.

Thanks again.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6568868.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sharwell at pixelminegames.com  Sun Jul 10 17:58:58 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 10 Jul 2011 19:58:58 -0500
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <1310339083410-6568868.post@n2.nabble.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
Message-ID: <026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>

If your parser uses a special tree type, you should implement the following
method in your helper file to ensure that there's never a case where the
user forgets to set the tree adaptor.

        partial void CreateTreeAdaptor(ref ITreeAdaptor adaptor) {
            adaptor = new MyTreeAdaptor(this);
        }

You'll need to implement a tree adaptor for the new node type, which at a
minimum should implement the following methods:

internal class MyTreeAdaptor : CommonTreeAdaptor {
    public override object Create(IToken payload) {
        return new MyTreeNodeType(payload);
    }
    public override object ErrorNode(ITokenStream input, IToken start,
IToken stop, RecognitionException e) {
        return new MyTreeNodeErrorType(input, start, stop, e);
    }
}

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of DJB MASTER
Sent: Sunday, July 10, 2011 6:05 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ASTLabelType C# Problem

Ok, I downloaded the preview release and it has seemed to fix those errors.
I was using the stable release because I didn't want to use a library that
was 'temperamental'.

Just one more thing, now when using my ASTNode I get an invalid cast from
CommonTree to ASTNode in my rules. On these lines...

'Number16_tree = (ASTNode)adaptor.Create(Number16);'

I've set the adaptor using...

'ASTAdaptor treeAdaptor = new ASTAdaptor(); parser.TreeAdaptor =
treeAdaptor;'

Do I have to set the adaptor somewhere else? I've seen people talking about
invalid casts from CommonTree, not sure what's required.

Thanks again.

--
View this message in context:
http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6568868.
html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From DJBall05 at hotmail.co.uk  Sun Jul 10 18:17:56 2011
From: DJBall05 at hotmail.co.uk (DJB MASTER)
Date: Sun, 10 Jul 2011 18:17:56 -0700 (PDT)
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
Message-ID: <1310347076346-6569254.post@n2.nabble.com>

Ok, Got all that, but now I'm getting a RewriteEmptyStreamException on this
line...

'adaptor.AddChild(root_1, stream_expression.NextTree());'. 

A soon as I fix something, something else goes wrong lol. BTW, i'm just
returning null from ErrorNode(..) for the moment, although I'm passing in
valid code to my parser so it shouldn't need any error nodes.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6569254.html
Sent from the ANTLR mailing list archive at Nabble.com.

From nilopaim at gmail.com  Mon Jul 11 06:52:36 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 11 Jul 2011 10:52:36 -0300
Subject: [antlr-interest] COBOL grammar
In-Reply-To: <1310347076346-6569254.post@n2.nabble.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
Message-ID: <004901cc3fd1$ccf05900$66d10b00$@com>

Hi all,

Does somebody knows something about a COBOL Grammar using Antlr?

I'm trying to create such animal and I'm facing some problems with
ambiguities. Due to the size of the grammar, if I could see a "similar"
grammar, maybe the things will be easier...

TIA,
Nilo - Brazil


From sharwell at pixelminegames.com  Mon Jul 11 06:55:36 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 11 Jul 2011 08:55:36 -0500
Subject: [antlr-interest] ASTLabelType C# Problem
In-Reply-To: <1310347076346-6569254.post@n2.nabble.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
Message-ID: <029e01cc3fd2$3699c170$a3cd4450$@pixelminegames.com>

You should throw a NotImplementedException instead of returning null.

The rewrite exception indicates a mismatch between the matching and rewrite
portions of the rules in your grammar. Typically that particular message
appears when you have a rule written like one of the following:

Example 1:

foo : bar -> bar;
bar : x*;

In the above case, the rule "bar" won't create a tree if 0 instances of "x"
are matched. The rule "foo" should actually be written "foo : bar->bar?;" to
handle this.

Example 2:

foo : bar? -> bar;

In the above case "bar" might again be missing, so you should write "foo :
bar? -> bar?;".

Example 3:

foo : bar -> bar;
bar : x;
x : y!;

In the above case, the rule "x" doesn't return a tree because it explicitly
ignores the result of y. Since rule "bar" doesn't have a rewrite rule
associated with it, it implies "bar : x -> x?;" which works fine. The net
result in "foo" is similar to example 1 above. Another way to handle this is
simply remove the explicit rewrite from "foo" to make "foo : bar;"

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of DJB MASTER
Sent: Sunday, July 10, 2011 8:18 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ASTLabelType C# Problem

Ok, Got all that, but now I'm getting a RewriteEmptyStreamException on this
line...

'adaptor.AddChild(root_1, stream_expression.NextTree());'. 

A soon as I fix something, something else goes wrong lol. BTW, i'm just
returning null from ErrorNode(..) for the moment, although I'm passing in
valid code to my parser so it shouldn't need any error nodes.

--
View this message in context:
http://antlr.1301665.n2.nabble.com/ASTLabelType-C-Problem-tp6567453p6569254.
html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From nilopaim at gmail.com  Mon Jul 11 09:46:04 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 11 Jul 2011 13:46:04 -0300
Subject: [antlr-interest] COBOL grammar
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com> 
Message-ID: <006e01cc3fea$08e00ce0$1aa026a0$@com>

Hi all,

I'm facing a problem on my grammar that I don't know how to solve
(Antlr3.3)...

Let me show you my grammar. Simplified, of course. It's just to show you my
trouble.





grammar Cobol;

options {
  language = Java;
}

program : 'procedure' 'division' '.' section*;

section : ID 'section' '.' paragraph*;

paragraph : ID '.' block* '.';

block : command*;

command: (cmdA | cmdB | cmdC ) '.'?;
    
cmdA: 'A';

cmdB: 'B';

cmdC: 'C';

fragment Digit : '0'..'9';

fragment Letter : ('a'..'z' | 'A'..'Z');

ID : Letter ( Letter | Digit | '-' )*;





Using this grammar, I'm having the following errors and warnings:

warning(200): /Cobol/src/Cobol.g:14:12: Decision can match input such as
"{'.', 'A'..'C'}" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> ID '.' block* '.';

error(201): /Cobol/src/Cobol.g:14:12: The following alternatives can never
be matched: 2
 |---> ID '.' block* '.';

warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
"'B'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> command*;

warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
"'A'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> command*;

warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
"'C'" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
 |---> command*;


4 warnings

1 error

BUILD FAIL



My real problem is: 

1) any 'command' can be followed by a '.'
2) any sequence of 'command's not followed by '.' forms a 'block'
3) wherever I can use a 'command', I can use a 'block'
4) the '.' signifies the end of a 'block'
5) I can use any number of 'block's to form a 'paragraph'
6) I can use any number of 'paragraph's to form a 'section'
7) I can have any number of 'section's on a 'program'

Any hints or help about what am I doing wrong? I'm completely stuck on it,
'cause I'm a little newbie using Antlr...

TIA,
Nilo - Brazil


From parsiad.azimzadeh at gmail.com  Mon Jul 11 10:36:23 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Mon, 11 Jul 2011 10:36:23 -0700
Subject: [antlr-interest] COBOL grammar
In-Reply-To: <006e01cc3fea$08e00ce0$1aa026a0$@com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
Message-ID: <CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>

Hi Nilo,

The problem is that a paragraph contains any number of blocks and a block
contains any number of commands (the ambiguity here is that some paragraph
with two commands can be perceived as containing either two blocks each with
one command or a single block with two commands).

The fix is simple, remove the * symbol from the line:
paragraph : ID '.' block* '.';

If multiple blocks holds semantic value, you might need to use a symbol to
denote the end of a block. For example, instead of using the fix above you
could change the block rule to:

block: (command END_BLOCK)*;

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 9:46 AM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> Hi all,
>
> I'm facing a problem on my grammar that I don't know how to solve
> (Antlr3.3)...
>
> Let me show you my grammar. Simplified, of course. It's just to show you my
> trouble.
>
>
>
>
>
> grammar Cobol;
>
> options {
>  language = Java;
> }
>
> program : 'procedure' 'division' '.' section*;
>
> section : ID 'section' '.' paragraph*;
>
> paragraph : ID '.' block* '.';
>
> block : command*;
>
> command: (cmdA | cmdB | cmdC ) '.'?;
>
> cmdA: 'A';
>
> cmdB: 'B';
>
> cmdC: 'C';
>
> fragment Digit : '0'..'9';
>
> fragment Letter : ('a'..'z' | 'A'..'Z');
>
> ID : Letter ( Letter | Digit | '-' )*;
>
>
>
>
>
> Using this grammar, I'm having the following errors and warnings:
>
> warning(200): /Cobol/src/Cobol.g:14:12: Decision can match input such as
> "{'.', 'A'..'C'}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> ID '.' block* '.';
>
> error(201): /Cobol/src/Cobol.g:14:12: The following alternatives can never
> be matched: 2
>  |---> ID '.' block* '.';
>
> warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> "'B'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> command*;
>
> warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> "'A'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> command*;
>
> warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> "'C'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> command*;
>
>
> 4 warnings
>
> 1 error
>
> BUILD FAIL
>
>
>
> My real problem is:
>
> 1) any 'command' can be followed by a '.'
> 2) any sequence of 'command's not followed by '.' forms a 'block'
> 3) wherever I can use a 'command', I can use a 'block'
> 4) the '.' signifies the end of a 'block'
> 5) I can use any number of 'block's to form a 'paragraph'
> 6) I can use any number of 'paragraph's to form a 'section'
> 7) I can have any number of 'section's on a 'program'
>
> Any hints or help about what am I doing wrong? I'm completely stuck on it,
> 'cause I'm a little newbie using Antlr...
>
> TIA,
> Nilo - Brazil
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Mon Jul 11 11:25:07 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 14:25:07 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for a
	given BNF grammar
Message-ID: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>

Maybe I dreaming but maybe lady luck is with me today.

Does anyone know of program, paper, algorithm that given a BNF grammar it
will tell you what type of algorithm/parser can parse it.

Types of algorithms/parsers would be Regular Expression (RE), LL, LR, LALR,
GLR, SLR and how much look ahead is needed?

If another website is better for posting this, that would be appreciated.

The tie into to ANTLR here is that the more I learn about parsing C++ the
more the answer comes back GLR.

Thanks  Eric

From lgcraymer at yahoo.com  Mon Jul 11 11:51:07 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 11 Jul 2011 11:51:07 -0700 (PDT)
Subject: [antlr-interest] Can one identify the type of parser needed for
	a given BNF grammar
In-Reply-To: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
Message-ID: <1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>

And then you have to figure out how to prune the GLR-generated "forests".  C++ 
is nasty; it can be parsed with ANTLR (as shown by NEXT and David Wigg's 
adaptions of that grammar), but I believe that the right strategy with ANTLR is 
actually to use multi-pass recognition to sort out the ambiguities.  That has 
not been done yet.

The problem is that C++ cannot be adequately described with a context-free 
grammar; you have to do some context-sensitive processing to resolve the syntax 
that is semantically ambiguous.

--Loring


----- Original Message ----
> From: The Researcher <researcher0x00 at gmail.com>
> To: antlr-interest at antlr.org
> Sent: Mon, July 11, 2011 11:25:07 AM
> Subject: [antlr-interest] Can one identify the type of parser needed for a 
>given BNF grammar
> 
> Maybe I dreaming but maybe lady luck is with me today.
> 
> Does anyone know  of program, paper, algorithm that given a BNF grammar it
> will tell you what  type of algorithm/parser can parse it.
> 
> Types of algorithms/parsers would  be Regular Expression (RE), LL, LR, LALR,
> GLR, SLR and how much look ahead is  needed?
> 
> If another website is better for posting this, that would be  appreciated.
> 
> The tie into to ANTLR here is that the more I learn about  parsing C++ the
> more the answer comes back GLR.
> 
> Thanks   Eric
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From researcher0x00 at gmail.com  Mon Jul 11 12:55:05 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 15:55:05 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
Message-ID: <CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>

>
> Loring,


Thanks for the feedback.

While I now can understand your answer, I still don't have enough
experience  to implement any approach correctly.

As a help to others who are working on this in private or interested in
creating a C++  parser I will gloss what Loring said because last week it
would have mostly been Greek to me. If I say something wrong, please
correct. I am not afraid to make mistakes in public so that others may learn
from them.

The big thing that one has to learn about parsing C++ is how to handle the
ambiguities. That is the dragon to be slayed here.

1. And then you have to figure out how to prune the GLR-generated "forests".

GLR http://en.wikipedia.org/wiki/GLR_parser

The reason GLR is considered for C++ is that do to the ambiguities of C++
most parsers in a typical fashion have to couple the feedback from the
parser to the lexer and reference a symbol table to correctly parse C++.
This is contrary to what is taught in school and most of the early examples
of parsing you will come across. This allows them to produce an AST without
ambiguities after the parser. This is pushing the work to the front. GLR is
one of the most powerful parsing strategies and can parse C++ without
coupling the parser to the lexer, but does so by generating multiple
subtrees for each ambiguity, for which you must later prune out the
ambiguities from the forests. This is pushing the work to the back.

2. C++ is nasty; it can be parsed with ANTLR (as shown by NEXT and David
Wigg's
adaptions of that grammar).

The ANTLR C++ grammar does so by creating a symbol table and using
predicates during the parse. In my initial conversions of the ANTLR C
grammar to C# I was able to convert it, but did not understand why it did
certain things at first. After researching it was clear that a lot of the
ambiguities of C++ arise when an name is encountered and then it's use ( a
type, an identifier, etc)  has to be know in order to take the appropriate
branch. Thus the creation of the symbol tables and other tables and the use
of predicates. This pushes the work to the front.

3. I believe that the right strategy with ANTLR is actually to use
multi-pass recognition to sort out the ambiguities.  That has not been done
yet.
The problem is that C++ cannot be adequately described with a context-free
grammar; you have to do some context-sensitive processing to resolve the
syntax
that is semantically ambiguous.

It could/should be possible to parse C++ with ANTLR without a symbol table
and associated predicates, and then in the AST analysis verify that the
input C++ syntax is valid C++ semantics.
Remember that the BNF for a grammar does not guarantee valid code/semantics
only correct syntax. So the AST is analyzed to find invalid semantics. I am
not sure if this will require coupling the parser to the lexer or the AST to
the parser, but if I go this route I will soon know.

I know this went off topic but was worth it.

Any answer to the original question is still appreciated.

Thanks

Eric

From WeikEngOff at aol.com  Mon Jul 11 12:59:47 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Mon, 11 Jul 2011 21:59:47 +0200
Subject: [antlr-interest] C-Runtime: Getting started
Message-ID: <4E1B5633.8030309@aol.com>

Hello all,

I'm looking for a really simple "Hello World"-example for getting
started with the C-Runtime.
After my problems with C++Builder I decided to install VC++ 2010
Express. The simplest example I found is the simpleCTreeParser,
from my point of view of course too complex for a beginner.
Anyway, I tried to get it running. First, I opened simplecTreeParser.vcproj
which resulted in an update of all projects (voodoo, named "Solution").
Then I was able to generate the code files for the lexer/parser
(SimpleCLexer.* and SimpleCWalker.*) and I added all C-Runtime Header
and Source files directly to the project (in directories/"Filters"
ANTLR/Header Files and ANTLR/Source files). Thanks to Jacqueline Russell's
video(*) I was able to display the line numbers in the source editor.
In main.c line 112 (is) was the first problem:
   pSimpleCWalker		    treePsr;
pSimpleCWalker was underlined red, I'm writing was. Just moved the window
to an other monitor. Problem solved.
But I'm getting a bunch of errors like
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
   error MSB4018: The "Antlr3ParserLexer" task failed unexpectedly.
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
   error MSB4018: System.IndexOutOfRangeException: Index was outside the bounds of the array.
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5)
   error MSB4018: at Microsoft.Build.Tasks.Xaml.CommandLineGenerator.PerformSwitchValueSubstition( CommandLineBuilder clb, ... )
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
   error MSB4018: at Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitStringSwitch(CommandLineBuilder clb, ... )
and 9 more.

I don't know how I can solve that problem, so I ask for your
support.


@Jim - I will write a comprehensive documentation for you...

Many thanks in advance
Udo


(*) Jacqueline is/was a MS product manager for the VC++ 20xy Express
edition.
When I start VC++ 2010 Express and want to open the "Getting Started"
www-pages, VC++ 2010 Express crashes. I captured the screen, OCRed
the link and opened the page with Firefox. In Firefox, the Silverlight-
plugin crashed. Luckily it was possible to download the video. (BTW,
IE is crashing immediately after pasting the link).
OFF TOPIC: How do you handle that daily madness?
When you are interested what's my main problem with MS at the moment, send
me a PM. Be warned, it can be yours tomorrow.

From douglasgodfrey at gmail.com  Mon Jul 11 13:37:04 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 11 Jul 2011 16:37:04 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
Message-ID: <CAMk-oS1-tH7scixZF1GOBBch+wD_bsa4i1BakDCT+MZVH7_umg@mail.gmail.com>

Antlr plus a SymbolTable is much more powerful and expressive than Antlr
alone.

I believe that C++ CAN be parsed by Antlr if you have a good set of
SymbolTable
classes. All of the constructor vs function and namespace ambiguities as
well as
templates and inheritance can be resolved by the SymbolTable.

The Lexer would process all pre-processor commands. The Parser would
validate
the source while simultaneously building the SymbolTable and the AST. A
TreeParser
would do any semantic checks that cannot be done by the parser. Zero or more

TreeParsers would transform the AST to apply optimizations. A final
TreeParser
would perform code generation. The same SymbolTable would be passed to the
Parser and all TreeParsers.


On Mon, Jul 11, 2011 at 2:51 PM, Loring Craymer <lgcraymer at yahoo.com> wrote:

> And then you have to figure out how to prune the GLR-generated "forests".
>  C++
> is nasty; it can be parsed with ANTLR (as shown by NEXT and David Wigg's
> adaptions of that grammar), but I believe that the right strategy with
> ANTLR is
> actually to use multi-pass recognition to sort out the ambiguities.  That
> has
> not been done yet.
>
> The problem is that C++ cannot be adequately described with a context-free
> grammar; you have to do some context-sensitive processing to resolve the
> syntax
> that is semantically ambiguous.
>
> --Loring
>
>
> ----- Original Message ----
> > From: The Researcher <researcher0x00 at gmail.com>
> > To: antlr-interest at antlr.org
> > Sent: Mon, July 11, 2011 11:25:07 AM
> > Subject: [antlr-interest] Can one identify the type of parser needed for
> a
> >given BNF grammar
> >
> > Maybe I dreaming but maybe lady luck is with me today.
> >
> > Does anyone know  of program, paper, algorithm that given a BNF grammar
> it
> > will tell you what  type of algorithm/parser can parse it.
> >
> > Types of algorithms/parsers would  be Regular Expression (RE), LL, LR,
> LALR,
> > GLR, SLR and how much look ahead is  needed?
> >
> > If another website is better for posting this, that would be
>  appreciated.
> >
> > The tie into to ANTLR here is that the more I learn about  parsing C++
> the
> > more the answer comes back GLR.
> >
> > Thanks   Eric
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From nilopaim at gmail.com  Mon Jul 11 13:46:11 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 11 Jul 2011 17:46:11 -0300
Subject: [antlr-interest] RES:  COBOL grammar
In-Reply-To: <CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
Message-ID: <00ac01cc400b$93cfd170$bb6f7450$@com>

Thanks, Parsiad, for your help.

Indeed the ambiguities are 'solved'... but using your solution, only the
first 'command' of the first 'block' of the first 'paragraph' are parsed!

And I don't have something I can call 'END_BLOCK', as you suggested. This
thing would be a '.', that can be preceded by a 'command' either... and the
problem returns...

What else am I missing?

TIA,
Nilo - Brazil

-----Mensagem original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
Enviada em: segunda-feira, 11 de julho de 2011 14:36
Para: antlr-interest at antlr.org
Assunto: Re: [antlr-interest] COBOL grammar

Hi Nilo,

The problem is that a paragraph contains any number of blocks and a block
contains any number of commands (the ambiguity here is that some paragraph
with two commands can be perceived as containing either two blocks each with
one command or a single block with two commands).

The fix is simple, remove the * symbol from the line:
paragraph : ID '.' block* '.';

If multiple blocks holds semantic value, you might need to use a symbol to
denote the end of a block. For example, instead of using the fix above you
could change the block rule to:

block: (command END_BLOCK)*;

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 9:46 AM, Nilo Roberto C Paim
<nilopaim at gmail.com>wrote:

> Hi all,
>
> I'm facing a problem on my grammar that I don't know how to solve
> (Antlr3.3)...
>
> Let me show you my grammar. Simplified, of course. It's just to show you
my
> trouble.
>
>
>
>
>
> grammar Cobol;
>
> options {
>  language = Java;
> }
>
> program : 'procedure' 'division' '.' section*;
>
> section : ID 'section' '.' paragraph*;
>
> paragraph : ID '.' block* '.';
>
> block : command*;
>
> command: (cmdA | cmdB | cmdC ) '.'?;
>
> cmdA: 'A';
>
> cmdB: 'B';
>
> cmdC: 'C';
>
> fragment Digit : '0'..'9';
>
> fragment Letter : ('a'..'z' | 'A'..'Z');
>
> ID : Letter ( Letter | Digit | '-' )*;
>
>
>
>
>
> Using this grammar, I'm having the following errors and warnings:
>
> warning(200): /Cobol/src/Cobol.g:14:12: Decision can match input such as
> "{'.', 'A'..'C'}" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> ID '.' block* '.';
>
> error(201): /Cobol/src/Cobol.g:14:12: The following alternatives can never
> be matched: 2
>  |---> ID '.' block* '.';
>
> warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> "'B'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> command*;
>
> warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> "'A'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> command*;
>
> warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> "'C'" using multiple alternatives: 1, 2
> As a result, alternative(s) 2 were disabled for that input
>  |---> command*;
>
>
> 4 warnings
>
> 1 error
>
> BUILD FAIL
>
>
>
> My real problem is:
>
> 1) any 'command' can be followed by a '.'
> 2) any sequence of 'command's not followed by '.' forms a 'block'
> 3) wherever I can use a 'command', I can use a 'block'
> 4) the '.' signifies the end of a 'block'
> 5) I can use any number of 'block's to form a 'paragraph'
> 6) I can use any number of 'paragraph's to form a 'section'
> 7) I can have any number of 'section's on a 'program'
>
> Any hints or help about what am I doing wrong? I'm completely stuck on it,
> 'cause I'm a little newbie using Antlr...
>
> TIA,
> Nilo - Brazil
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From lgcraymer at yahoo.com  Mon Jul 11 14:16:42 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 11 Jul 2011 14:16:42 -0700 (PDT)
Subject: [antlr-interest] Can one identify the type of parser needed for
	a given BNF grammar
In-Reply-To: <CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
Message-ID: <1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>

On 3.) :  The parser just recognizes syntax and ignores semantic ambiguities; 
then in a first tree walker pass, the symbol tables are constructed; a second 
tree walker pass uses the symbol table information to resolve ambiguities (which 
of several interpretations of valid syntax is correct) and rewrites the tree 
into an unambiguous form.  Then you have finished recognizing C++ and can 
continue with further processing.  Never, never, never would I suggest adding a 
feedback mechanism that couples parser to lexer.

--Loring


----- Original Message ----
> From: The Researcher <researcher0x00 at gmail.com>
> To: antlr-interest at antlr.org
> Sent: Mon, July 11, 2011 12:55:05 PM
> Subject: Re: [antlr-interest] Can one identify the type of parser needed for a 
>given BNF grammar
> 
> >
> > Loring,
> 
> 
> Thanks for the feedback.
> 
> While I now can  understand your answer, I still don't have enough
> experience  to  implement any approach correctly.
> 
> As a help to others who are working on  this in private or interested in
> creating a C++  parser I will gloss  what Loring said because last week it
> would have mostly been Greek to me. If  I say something wrong, please
> correct. I am not afraid to make mistakes in  public so that others may learn
> from them.
> 
> The big thing that one has  to learn about parsing C++ is how to handle the
> ambiguities. That is the  dragon to be slayed here.
> 
> 1. And then you have to figure out how to prune  the GLR-generated "forests".
> 
> GLR http://en.wikipedia.org/wiki/GLR_parser
> 
> The reason GLR is considered  for C++ is that do to the ambiguities of C++
> most parsers in a typical  fashion have to couple the feedback from the
> parser to the lexer and  reference a symbol table to correctly parse C++.
> This is contrary to what is  taught in school and most of the early examples
> of parsing you will come  across. This allows them to produce an AST without
> ambiguities after the  parser. This is pushing the work to the front. GLR is
> one of the most  powerful parsing strategies and can parse C++ without
> coupling the parser to  the lexer, but does so by generating multiple
> subtrees for each ambiguity,  for which you must later prune out the
> ambiguities from the forests. This is  pushing the work to the back.
> 
> 2. C++ is nasty; it can be parsed with  ANTLR (as shown by NEXT and David
> Wigg's
> adaptions of that  grammar).
> 
> The ANTLR C++ grammar does so by creating a symbol table and  using
> predicates during the parse. In my initial conversions of the ANTLR  C
> grammar to C# I was able to convert it, but did not understand why it  did
> certain things at first. After researching it was clear that a lot of  the
> ambiguities of C++ arise when an name is encountered and then it's use (  a
> type, an identifier, etc)  has to be know in order to take the  appropriate
> branch. Thus the creation of the symbol tables and other tables  and the use
> of predicates. This pushes the work to the front.
> 
> 3. I  believe that the right strategy with ANTLR is actually to use
> multi-pass  recognition to sort out the ambiguities.  That has not been  done
> yet.
> The problem is that C++ cannot be adequately described with a  context-free
> grammar; you have to do some context-sensitive processing to  resolve the
> syntax
> that is semantically ambiguous.
> 
> It could/should  be possible to parse C++ with ANTLR without a symbol table
> and associated  predicates, and then in the AST analysis verify that the
> input C++ syntax is  valid C++ semantics.
> Remember that the BNF for a grammar does not guarantee  valid code/semantics
> only correct syntax. So the AST is analyzed to find  invalid semantics. I am
> not sure if this will require coupling the parser to  the lexer or the AST to
> the parser, but if I go this route I will soon  know.
> 
> I know this went off topic but was worth it.
> 
> Any answer to  the original question is still  appreciated.
> 
> Thanks
> 
> Eric
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From researcher0x00 at gmail.com  Mon Jul 11 14:21:09 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 17:21:09 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAMk-oS1-tH7scixZF1GOBBch+wD_bsa4i1BakDCT+MZVH7_umg@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAMk-oS1-tH7scixZF1GOBBch+wD_bsa4i1BakDCT+MZVH7_umg@mail.gmail.com>
Message-ID: <CAN45N10DSKOwdkBFSt25Tz=FQAFyqWYDt7w44WS_DKEBn4_vXQ@mail.gmail.com>

Douglas,

Thanks.

 This is not meant to be a real-time parser, ease of learning is more
important than speed, but quality is more important than ease of learning so
what you suggest bears some weight. But I would be willing to trade off
better documentation if a more complex solution is used.

Here are some specifics of what keeps me up at night on parsing C++, or food
for thought. While I have some ideas on this, I haven't come to a
conclusion.

In the  ISO C++ grammar for the preprocessor section is the lparen rule.

lparen: the left_parenthesis character without preceding white_space.

Another rule is H_char

h_char: any member of the source character set except new_line and > .

If the machine is ASCII it means one thing. If it is Unicode it is another.
If it is country specific it is still another.

Also, I plan to be able to parse ISO, GCC and Microsoft C++ with this.
Should it be one parser with options, three parsers, one parser with the
back end sorting it all out, or something else.
**
Thanks Eric

From parsiad.azimzadeh at gmail.com  Mon Jul 11 14:58:06 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Mon, 11 Jul 2011 14:58:06 -0700
Subject: [antlr-interest] COBOL grammar
In-Reply-To: <00ac01cc400b$93cfd170$bb6f7450$@com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
Message-ID: <CAF+GmOB6sSUh02ACbHZvB2jVwZWZLvHcwTxd+=KtCTjT03u4bw@mail.gmail.com>

Apologies, I seemed to have not been thinking when I wrote my last email. If
you were to use

block: (command END_BLOCK)*;

the END_BLOCK command would be paired with each command. What I was trying
to say was:

block: command* END_BLOCK;

Note that your END_BLOCK token has to differ from '.', otherwise you will
introduce another ambiguity.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 1:46 PM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> Thanks, Parsiad, for your help.
>
> Indeed the ambiguities are 'solved'... but using your solution, only the
> first 'command' of the first 'block' of the first 'paragraph' are parsed!
>
> And I don't have something I can call 'END_BLOCK', as you suggested. This
> thing would be a '.', that can be preceded by a 'command' either... and the
> problem returns...
>
> What else am I missing?
>
> TIA,
> Nilo - Brazil
>
> -----Mensagem original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
> Enviada em: segunda-feira, 11 de julho de 2011 14:36
> Para: antlr-interest at antlr.org
> Assunto: Re: [antlr-interest] COBOL grammar
>
> Hi Nilo,
>
> The problem is that a paragraph contains any number of blocks and a block
> contains any number of commands (the ambiguity here is that some paragraph
> with two commands can be perceived as containing either two blocks each
> with
> one command or a single block with two commands).
>
> The fix is simple, remove the * symbol from the line:
> paragraph : ID '.' block* '.';
>
> If multiple blocks holds semantic value, you might need to use a symbol to
> denote the end of a block. For example, instead of using the fix above you
> could change the block rule to:
>
> block: (command END_BLOCK)*;
>
> --
> Parsiad Azimzadeh
> http://sfu.ca/~paa4
>
> On Mon, Jul 11, 2011 at 9:46 AM, Nilo Roberto C Paim
> <nilopaim at gmail.com>wrote:
>
> > Hi all,
> >
> > I'm facing a problem on my grammar that I don't know how to solve
> > (Antlr3.3)...
> >
> > Let me show you my grammar. Simplified, of course. It's just to show you
> my
> > trouble.
> >
> >
> >
> >
> >
> > grammar Cobol;
> >
> > options {
> >  language = Java;
> > }
> >
> > program : 'procedure' 'division' '.' section*;
> >
> > section : ID 'section' '.' paragraph*;
> >
> > paragraph : ID '.' block* '.';
> >
> > block : command*;
> >
> > command: (cmdA | cmdB | cmdC ) '.'?;
> >
> > cmdA: 'A';
> >
> > cmdB: 'B';
> >
> > cmdC: 'C';
> >
> > fragment Digit : '0'..'9';
> >
> > fragment Letter : ('a'..'z' | 'A'..'Z');
> >
> > ID : Letter ( Letter | Digit | '-' )*;
> >
> >
> >
> >
> >
> > Using this grammar, I'm having the following errors and warnings:
> >
> > warning(200): /Cobol/src/Cobol.g:14:12: Decision can match input such as
> > "{'.', 'A'..'C'}" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> ID '.' block* '.';
> >
> > error(201): /Cobol/src/Cobol.g:14:12: The following alternatives can
> never
> > be matched: 2
> >  |---> ID '.' block* '.';
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> > "'B'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> > "'A'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> > "'C'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> >
> > 4 warnings
> >
> > 1 error
> >
> > BUILD FAIL
> >
> >
> >
> > My real problem is:
> >
> > 1) any 'command' can be followed by a '.'
> > 2) any sequence of 'command's not followed by '.' forms a 'block'
> > 3) wherever I can use a 'command', I can use a 'block'
> > 4) the '.' signifies the end of a 'block'
> > 5) I can use any number of 'block's to form a 'paragraph'
> > 6) I can use any number of 'paragraph's to form a 'section'
> > 7) I can have any number of 'section's on a 'program'
> >
> > Any hints or help about what am I doing wrong? I'm completely stuck on
> it,
> > 'cause I'm a little newbie using Antlr...
> >
> > TIA,
> > Nilo - Brazil
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From nilopaim at gmail.com  Mon Jul 11 15:09:39 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 11 Jul 2011 19:09:39 -0300
Subject: [antlr-interest] RES:  COBOL grammar
In-Reply-To: <CAF+GmOB6sSUh02ACbHZvB2jVwZWZLvHcwTxd+=KtCTjT03u4bw@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>	<00ac01cc400b$93cfd170$bb6f7450$@com>
	<CAF+GmOB6sSUh02ACbHZvB2jVwZWZLvHcwTxd+=KtCTjT03u4bw@mail.gmail.com>
Message-ID: <00b901cc4017$3da300e0$b8e902a0$@com>

Hi, Parsiad.

No way, my dear. In COBOL, 'END_BLOCK' token MUST be a '.', so I'm stuck
again...

If you have some other idea, I'm grateful. In the mean time, I'll try some
other constructs. Maybe another approach works...

Thanks anyway for your interest.

Nilo - Brazil

-----Mensagem original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
Enviada em: segunda-feira, 11 de julho de 2011 18:58
Para: antlr-interest at antlr.org
Assunto: Re: [antlr-interest] COBOL grammar

Apologies, I seemed to have not been thinking when I wrote my last email. If
you were to use

block: (command END_BLOCK)*;

the END_BLOCK command would be paired with each command. What I was trying
to say was:

block: command* END_BLOCK;

Note that your END_BLOCK token has to differ from '.', otherwise you will
introduce another ambiguity.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 1:46 PM, Nilo Roberto C Paim
<nilopaim at gmail.com>wrote:

> Thanks, Parsiad, for your help.
>
> Indeed the ambiguities are 'solved'... but using your solution, only the
> first 'command' of the first 'block' of the first 'paragraph' are parsed!
>
> And I don't have something I can call 'END_BLOCK', as you suggested. This
> thing would be a '.', that can be preceded by a 'command' either... and
the
> problem returns...
>
> What else am I missing?
>
> TIA,
> Nilo - Brazil
>
> -----Mensagem original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
> Enviada em: segunda-feira, 11 de julho de 2011 14:36
> Para: antlr-interest at antlr.org
> Assunto: Re: [antlr-interest] COBOL grammar
>
> Hi Nilo,
>
> The problem is that a paragraph contains any number of blocks and a block
> contains any number of commands (the ambiguity here is that some paragraph
> with two commands can be perceived as containing either two blocks each
> with
> one command or a single block with two commands).
>
> The fix is simple, remove the * symbol from the line:
> paragraph : ID '.' block* '.';
>
> If multiple blocks holds semantic value, you might need to use a symbol to
> denote the end of a block. For example, instead of using the fix above you
> could change the block rule to:
>
> block: (command END_BLOCK)*;
>
> --
> Parsiad Azimzadeh
> http://sfu.ca/~paa4
>
> On Mon, Jul 11, 2011 at 9:46 AM, Nilo Roberto C Paim
> <nilopaim at gmail.com>wrote:
>
> > Hi all,
> >
> > I'm facing a problem on my grammar that I don't know how to solve
> > (Antlr3.3)...
> >
> > Let me show you my grammar. Simplified, of course. It's just to show you
> my
> > trouble.
> >
> >
> >
> >
> >
> > grammar Cobol;
> >
> > options {
> >  language = Java;
> > }
> >
> > program : 'procedure' 'division' '.' section*;
> >
> > section : ID 'section' '.' paragraph*;
> >
> > paragraph : ID '.' block* '.';
> >
> > block : command*;
> >
> > command: (cmdA | cmdB | cmdC ) '.'?;
> >
> > cmdA: 'A';
> >
> > cmdB: 'B';
> >
> > cmdC: 'C';
> >
> > fragment Digit : '0'..'9';
> >
> > fragment Letter : ('a'..'z' | 'A'..'Z');
> >
> > ID : Letter ( Letter | Digit | '-' )*;
> >
> >
> >
> >
> >
> > Using this grammar, I'm having the following errors and warnings:
> >
> > warning(200): /Cobol/src/Cobol.g:14:12: Decision can match input such as
> > "{'.', 'A'..'C'}" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> ID '.' block* '.';
> >
> > error(201): /Cobol/src/Cobol.g:14:12: The following alternatives can
> never
> > be matched: 2
> >  |---> ID '.' block* '.';
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> > "'B'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> > "'A'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such as
> > "'C'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> >
> > 4 warnings
> >
> > 1 error
> >
> > BUILD FAIL
> >
> >
> >
> > My real problem is:
> >
> > 1) any 'command' can be followed by a '.'
> > 2) any sequence of 'command's not followed by '.' forms a 'block'
> > 3) wherever I can use a 'command', I can use a 'block'
> > 4) the '.' signifies the end of a 'block'
> > 5) I can use any number of 'block's to form a 'paragraph'
> > 6) I can use any number of 'paragraph's to form a 'section'
> > 7) I can have any number of 'section's on a 'program'
> >
> > Any hints or help about what am I doing wrong? I'm completely stuck on
> it,
> > 'cause I'm a little newbie using Antlr...
> >
> > TIA,
> > Nilo - Brazil
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ronburk at gmail.com  Mon Jul 11 15:24:12 2011
From: ronburk at gmail.com (Ron Burk)
Date: Mon, 11 Jul 2011 15:24:12 -0700
Subject: [antlr-interest] RES: COBOL grammar
In-Reply-To: <00ac01cc400b$93cfd170$bb6f7450$@com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
Message-ID: <CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>

> What else am I missing?

Are you certain you mean the '.' at the end of the command
to be optional? An initial scan seems to indicate only one
optional '.' in the tinyCobol grammar, in procedure declarations.

Likewise, an uneducated glance at another COBOL grammar:
    http://www.cs.vu.nl/grammarware/browsable/cobol/#EBNF
seemed to indicate the "." is rarely optional.

Or put another way, at the end of a command, what are
the precise rules for deciding whether a '.' belongs to
the current command or to the enclosing paragraph?
If you can state an unambiguous rule for making that decision,
you can probably force ANTLR to do it.

From researcher0x00 at gmail.com  Mon Jul 11 15:29:21 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 18:29:21 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAN45N10DSKOwdkBFSt25Tz=FQAFyqWYDt7w44WS_DKEBn4_vXQ@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAMk-oS1-tH7scixZF1GOBBch+wD_bsa4i1BakDCT+MZVH7_umg@mail.gmail.com>
	<CAN45N10DSKOwdkBFSt25Tz=FQAFyqWYDt7w44WS_DKEBn4_vXQ@mail.gmail.com>
Message-ID: <CAN45N12E2BUpE81S4bmUSHnegtjb8zmSZPbQJGYRHzHDgcd+4g@mail.gmail.com>

Loring,

Never, never, never would I suggest adding a feedback mechanism that couples
parser to lexer.

I agree with that and will try to hold true to that rule when I create my
parser.

Thanks Eric

From nilopaim at gmail.com  Mon Jul 11 15:39:15 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 11 Jul 2011 19:39:15 -0300
Subject: [antlr-interest] RES:  RES: COBOL grammar
In-Reply-To: <CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>	<00ac01cc400b$93cfd170$bb6f7450$@com>
	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
Message-ID: <00ba01cc401b$6211a540$2634efc0$@com>

Hi, Ron.

Glad to say that I'm the maintainer of TinyCobol. 

What I'm trying to do here is write a new version of it, using Antlr. In
this new version, I want to implement a lot of things that does not exists
today, like native GUI and native access to RDBMS in general. Also, I'm
going to generate 'executables' for Java JVM and for .Net CIL. Current
TinyCobol generates assembly code for 32 bits only, and I think this is a
big limitation for it now.

But let's go to the real problem...

A command in Cobol may or may be not terminated by '.'. All sequence of
commands terminated by only one '.' are a block. A sample of this are the
commands in the 'then' or the 'else' part of an 'IF' command. In this case,
the first '.' found on the end of some command terminates not only the
command, but the 'IF' command as a whole.

Additionally, a '.' must be the last token between paragraphs. Alias, the
command sequence on a paragraph needs only the final '.', if I want.

There is no way I could say if a '.' belongs to the preceding command or if
it enclosing the current paragraph, except by the fact that, if the
following token is a section name or a new paragraph, it quits the current
paragraph; else it quits a block.

Maybe I'm just missing the way to say that to Antlr. As I've already said,
I'm a newbie.

Thanks for interest and sorry the poor English. I'm Portuguese native
speaker.

Nilo - Brazil

-----Mensagem original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Em nome de Ron Burk
Enviada em: segunda-feira, 11 de julho de 2011 19:24
Cc: antlr-interest at antlr.org
Assunto: Re: [antlr-interest] RES: COBOL grammar

> What else am I missing?

Are you certain you mean the '.' at the end of the command
to be optional? An initial scan seems to indicate only one
optional '.' in the tinyCobol grammar, in procedure declarations.

Likewise, an uneducated glance at another COBOL grammar:
    http://www.cs.vu.nl/grammarware/browsable/cobol/#EBNF
seemed to indicate the "." is rarely optional.

Or put another way, at the end of a command, what are
the precise rules for deciding whether a '.' belongs to
the current command or to the enclosing paragraph?
If you can state an unambiguous rule for making that decision,
you can probably force ANTLR to do it.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From researcher0x00 at gmail.com  Mon Jul 11 16:18:38 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 19:18:38 -0400
Subject: [antlr-interest] ANTLR virtual appliance i.e. prebundled ANTLR for
	a virtual machine.
Message-ID: <CAN45N111ALO-_EqrdXqoAUAft8x2Yd4SfSi-onkbm1cVWKjjFQ@mail.gmail.com>

Since ANTLR is a starting point for a lot of people learning parsing I was
wondering if we should create an ANTLR virtual appliance.

For those not familiar with the term virtual appliance, it is an application
such as ANTLR that is preconfigured and installed on an OS and then
converted into a set of files that run on a virtual machine such as VMware,
Virtual Box, etc. A virtual machine that host a virtual appliance is called
a player. Most players are free downloads from the vendor. For free software
such as Virtual Box no money is needed to create a virtual appliance. For
for profit companies such as VMware a separate purchased application is
needed to create the virtual appliance. So the using of the appliance is
free, the cost to create one is dependent on the vendor. The appliance
would probably be created once every several months to keep up with stable
ANTLR releases.

The  benefits to this would be that those learning ATNLR would be using a
known standard that anyone could access. If the person needed help, then the
appliance with the grammar should be sufficient to reproduce the problem.
Another benefit is that the appliance could be setup so the user could
concentrate on learning ANTLR and not downloading, installing, configuring
and hoping.

I would be willing to create  a rough cut of one if we could agree on a few
basics such as
1. Virtual appliance player, VMware, Virtual Box or another.
2. OS. It will have to be free, so some version of Linux. This means C#
would have to be on Mono or something.
3. One back end or multiples. I opt for Java only since it is free and will
work on LINUX.
4. Version of ANTLR. Something recent but known to be stable.
5. Some way of validating that ATNLR has not been tampered with. Some form
of CRC or hash on the files.
6. SInce this will be a several meg file, could we host it www.antlr.org, or
park at some other repository.

Any thoughts or input is welcome.

Thanks

Eric

From douglasgodfrey at gmail.com  Mon Jul 11 16:33:01 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 11 Jul 2011 19:33:01 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
Message-ID: <CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>

If the SymbolTable is not built by the Parser then you cannot generate the
correct AST
for a class definition vs a function call. Also you cannot generate prompt
errors close to
the point where the error occurs in the parse. 90+% of all semantic
ambiguities can be
resolved by a SymbolTable in the Parser. Most C++ programs will not have any
statements
that cannot be resolved inline in the parser and would need to be resolved
in a later AST
TreeParser phase. The 90% case should not pay the compile time cost of a
separate
TreeParser just to resolve ambiguities that can be handled by the Parser.

No feedback is required for the Lexer. The Lexer can resolve all
pre-processor statements
before the Parser is invoked. The Lexer uses it's own primitive SymbolTable
to handle
text substitutions and macros. Again, 90+% of all C++ programs do not use
any complex
macros where a second lexer pass would be needed. For simple includes and
text
substitutions the Lexer can handle them inline. In 10% of the cases The
Lexer needs 2
passes where the first pass processes all includes, macros and substitutions
and the
second pass generates the token stream for the Parser.

On Mon, Jul 11, 2011 at 5:16 PM, Loring Craymer <lgcraymer at yahoo.com> wrote:

> On 3.) :  The parser just recognizes syntax and ignores semantic
> ambiguities;
> then in a first tree walker pass, the symbol tables are constructed; a
> second
> tree walker pass uses the symbol table information to resolve ambiguities
> (which
> of several interpretations of valid syntax is correct) and rewrites the
> tree
> into an unambiguous form.  Then you have finished recognizing C++ and can
> continue with further processing.  Never, never, never would I suggest
> adding a
> feedback mechanism that couples parser to lexer.
>
> --Loring
>
>
> ----- Original Message ----
> > From: The Researcher <researcher0x00 at gmail.com>
> > To: antlr-interest at antlr.org
> > Sent: Mon, July 11, 2011 12:55:05 PM
> > Subject: Re: [antlr-interest] Can one identify the type of parser needed
> for a
> >given BNF grammar
> >
> > >
> > > Loring,
> >
> >
> > Thanks for the feedback.
> >
> > While I now can  understand your answer, I still don't have enough
> > experience  to  implement any approach correctly.
> >
> > As a help to others who are working on  this in private or interested in
> > creating a C++  parser I will gloss  what Loring said because last week
> it
> > would have mostly been Greek to me. If  I say something wrong, please
> > correct. I am not afraid to make mistakes in  public so that others may
> learn
> > from them.
> >
> > The big thing that one has  to learn about parsing C++ is how to handle
> the
> > ambiguities. That is the  dragon to be slayed here.
> >
> > 1. And then you have to figure out how to prune  the GLR-generated
> "forests".
> >
> > GLR http://en.wikipedia.org/wiki/GLR_parser
> >
> > The reason GLR is considered  for C++ is that do to the ambiguities of
> C++
> > most parsers in a typical  fashion have to couple the feedback from the
> > parser to the lexer and  reference a symbol table to correctly parse C++.
> > This is contrary to what is  taught in school and most of the early
> examples
> > of parsing you will come  across. This allows them to produce an AST
> without
> > ambiguities after the  parser. This is pushing the work to the front. GLR
> is
> > one of the most  powerful parsing strategies and can parse C++ without
> > coupling the parser to  the lexer, but does so by generating multiple
> > subtrees for each ambiguity,  for which you must later prune out the
> > ambiguities from the forests. This is  pushing the work to the back.
> >
> > 2. C++ is nasty; it can be parsed with  ANTLR (as shown by NEXT and David
> > Wigg's
> > adaptions of that  grammar).
> >
> > The ANTLR C++ grammar does so by creating a symbol table and  using
> > predicates during the parse. In my initial conversions of the ANTLR  C
> > grammar to C# I was able to convert it, but did not understand why it
>  did
> > certain things at first. After researching it was clear that a lot of
>  the
> > ambiguities of C++ arise when an name is encountered and then it's use (
>  a
> > type, an identifier, etc)  has to be know in order to take the
>  appropriate
> > branch. Thus the creation of the symbol tables and other tables  and the
> use
> > of predicates. This pushes the work to the front.
> >
> > 3. I  believe that the right strategy with ANTLR is actually to use
> > multi-pass  recognition to sort out the ambiguities.  That has not been
>  done
> > yet.
> > The problem is that C++ cannot be adequately described with a
>  context-free
> > grammar; you have to do some context-sensitive processing to  resolve the
> > syntax
> > that is semantically ambiguous.
> >
> > It could/should  be possible to parse C++ with ANTLR without a symbol
> table
> > and associated  predicates, and then in the AST analysis verify that the
> > input C++ syntax is  valid C++ semantics.
> > Remember that the BNF for a grammar does not guarantee  valid
> code/semantics
> > only correct syntax. So the AST is analyzed to find  invalid semantics. I
> am
> > not sure if this will require coupling the parser to  the lexer or the
> AST to
> > the parser, but if I go this route I will soon  know.
> >
> > I know this went off topic but was worth it.
> >
> > Any answer to  the original question is still  appreciated.
> >
> > Thanks
> >
> > Eric
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parsiad.azimzadeh at gmail.com  Mon Jul 11 16:35:52 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Mon, 11 Jul 2011 16:35:52 -0700
Subject: [antlr-interest] RES: RES: COBOL grammar
In-Reply-To: <00ba01cc401b$6211a540$2634efc0$@com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
	<00ba01cc401b$6211a540$2634efc0$@com>
Message-ID: <CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>

That does not make much sense to me (however, I should state that I am too
unfamiliar with COBOL). For example, suppose you have program text of the
form:

procedure division .
id1 section .
id2 .
A .
B .

How do you know whether the '.' token after 'A' is meant to signify the end
of a command and not the end of a block?

Perhaps a better question would be, is there any semantic value to a block?
Can we remove the block rule altogether to yield:

grammar COBOL;

options
{
language = Java;
}

program
: 'procedure' 'division' END
section *
;

section
: ID 'section' END
paragraph *
;

paragraph
: ID END
( command END ? ) * END
;

// TODO: Put real commands here
command
: 'A'
| 'B'
;

fragment LETTER: 'a'..'z' | 'A'..'Z';
END: '.';
ID: LETTER ( LETTER | '0'..'9' | '-' )*;

The above grammar is unambiguous.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 3:39 PM, Nilo Roberto C Paim <nilopaim at gmail.com>wrote:

> Hi, Ron.
>
> Glad to say that I'm the maintainer of TinyCobol.
>
> What I'm trying to do here is write a new version of it, using Antlr. In
> this new version, I want to implement a lot of things that does not exists
> today, like native GUI and native access to RDBMS in general. Also, I'm
> going to generate 'executables' for Java JVM and for .Net CIL. Current
> TinyCobol generates assembly code for 32 bits only, and I think this is a
> big limitation for it now.
>
> But let's go to the real problem...
>
> A command in Cobol may or may be not terminated by '.'. All sequence of
> commands terminated by only one '.' are a block. A sample of this are the
> commands in the 'then' or the 'else' part of an 'IF' command. In this case,
> the first '.' found on the end of some command terminates not only the
> command, but the 'IF' command as a whole.
>
> Additionally, a '.' must be the last token between paragraphs. Alias, the
> command sequence on a paragraph needs only the final '.', if I want.
>
> There is no way I could say if a '.' belongs to the preceding command or if
> it enclosing the current paragraph, except by the fact that, if the
> following token is a section name or a new paragraph, it quits the current
> paragraph; else it quits a block.
>
> Maybe I'm just missing the way to say that to Antlr. As I've already said,
> I'm a newbie.
>
> Thanks for interest and sorry the poor English. I'm Portuguese native
> speaker.
>
> Nilo - Brazil
>
> -----Mensagem original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Em nome de Ron Burk
> Enviada em: segunda-feira, 11 de julho de 2011 19:24
> Cc: antlr-interest at antlr.org
> Assunto: Re: [antlr-interest] RES: COBOL grammar
>
> > What else am I missing?
>
> Are you certain you mean the '.' at the end of the command
> to be optional? An initial scan seems to indicate only one
> optional '.' in the tinyCobol grammar, in procedure declarations.
>
> Likewise, an uneducated glance at another COBOL grammar:
>    http://www.cs.vu.nl/grammarware/browsable/cobol/#EBNF
> seemed to indicate the "." is rarely optional.
>
> Or put another way, at the end of a command, what are
> the precise rules for deciding whether a '.' belongs to
> the current command or to the enclosing paragraph?
> If you can state an unambiguous rule for making that decision,
> you can probably force ANTLR to do it.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From douglasgodfrey at gmail.com  Mon Jul 11 16:38:55 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 11 Jul 2011 19:38:55 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAN45N10DSKOwdkBFSt25Tz=FQAFyqWYDt7w44WS_DKEBn4_vXQ@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAMk-oS1-tH7scixZF1GOBBch+wD_bsa4i1BakDCT+MZVH7_umg@mail.gmail.com>
	<CAN45N10DSKOwdkBFSt25Tz=FQAFyqWYDt7w44WS_DKEBn4_vXQ@mail.gmail.com>
Message-ID: <CAMk-oS05Uzenr3LjiQsV-ndR216jz3YZvhTL9jnArK+-ieYe5A@mail.gmail.com>

When I converted the ISO SQL grammar from EBNF to Antlr, I handled multiple
alternate
character set rules by using semantic predicates in the Lexer. The rule for
a SQL Identifier
has 8 variations depending on which SQL variant you are parsing [each has a
predicate].
The same predicate functions are available to the Parser to handle the
syntactic differences
between the variant dialects.

On Mon, Jul 11, 2011 at 5:21 PM, The Researcher <researcher0x00 at gmail.com>wrote:

> Douglas,
>
> Thanks.
>
>  This is not meant to be a real-time parser, ease of learning is more
> important than speed, but quality is more important than ease of learning
> so
> what you suggest bears some weight. But I would be willing to trade off
> better documentation if a more complex solution is used.
>
> Here are some specifics of what keeps me up at night on parsing C++, or
> food
> for thought. While I have some ideas on this, I haven't come to a
> conclusion.
>
> In the  ISO C++ grammar for the preprocessor section is the lparen rule.
>
> lparen: the left_parenthesis character without preceding white_space.
>
> Another rule is H_char
>
> h_char: any member of the source character set except new_line and > .
>
> If the machine is ASCII it means one thing. If it is Unicode it is another.
> If it is country specific it is still another.
>
> Also, I plan to be able to parse ISO, GCC and Microsoft C++ with this.
> Should it be one parser with options, three parsers, one parser with the
> back end sorting it all out, or something else.
> **
> Thanks Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Mon Jul 11 16:53:03 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 19:53:03 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
	<CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
Message-ID: <CAN45N13ziuUp0duyvZt-UCveLX+_md45jWREnqNzxSP5wMBzTQ@mail.gmail.com>

Douglas and Loring,

I truly appreciate your feedback and will be taking the time to understand
it in enough detail so that I can explain it to others by creating some
prototype code.

The only other point of note is that if others are quietly reading this
thread and are interested in creating a C++ parser for ANTLR, then please
jump in with a question. I don't consider this my thread, but a public
thread to learn how to parse C++ with ANTLR.

Thanks Eric

From parsiad.azimzadeh at gmail.com  Mon Jul 11 17:02:49 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Mon, 11 Jul 2011 17:02:49 -0700
Subject: [antlr-interest] ANTLR virtual appliance i.e. prebundled ANTLR
 for a virtual machine.
In-Reply-To: <CAN45N111ALO-_EqrdXqoAUAft8x2Yd4SfSi-onkbm1cVWKjjFQ@mail.gmail.com>
References: <CAN45N111ALO-_EqrdXqoAUAft8x2Yd4SfSi-onkbm1cVWKjjFQ@mail.gmail.com>
Message-ID: <CAF+GmOCx=hB26HSrWP_=kDE2cADeVEpOkAYOfYGEnrxEF4DVLg@mail.gmail.com>

Would this be more than some linux distro with GNOME (or some other
easy-to-use dm & wm), the JDK, an ANTLR library and  ANTLRWorks on it? It
could not hurt to throw together. It would certainly increase the number of
users willing to try ANTLR. I am, however, curious as to whether or not you
wanted to add anything else to the image to ease the end-user development
experience.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 4:18 PM, The Researcher <researcher0x00 at gmail.com>wrote:

> Since ANTLR is a starting point for a lot of people learning parsing I was
> wondering if we should create an ANTLR virtual appliance.
>
> For those not familiar with the term virtual appliance, it is an
> application
> such as ANTLR that is preconfigured and installed on an OS and then
> converted into a set of files that run on a virtual machine such as VMware,
> Virtual Box, etc. A virtual machine that host a virtual appliance is called
> a player. Most players are free downloads from the vendor. For free
> software
> such as Virtual Box no money is needed to create a virtual appliance. For
> for profit companies such as VMware a separate purchased application is
> needed to create the virtual appliance. So the using of the appliance is
> free, the cost to create one is dependent on the vendor. The appliance
> would probably be created once every several months to keep up with stable
> ANTLR releases.
>
> The  benefits to this would be that those learning ATNLR would be using a
> known standard that anyone could access. If the person needed help, then
> the
> appliance with the grammar should be sufficient to reproduce the problem.
> Another benefit is that the appliance could be setup so the user could
> concentrate on learning ANTLR and not downloading, installing, configuring
> and hoping.
>
> I would be willing to create  a rough cut of one if we could agree on a few
> basics such as
> 1. Virtual appliance player, VMware, Virtual Box or another.
> 2. OS. It will have to be free, so some version of Linux. This means C#
> would have to be on Mono or something.
> 3. One back end or multiples. I opt for Java only since it is free and will
> work on LINUX.
> 4. Version of ANTLR. Something recent but known to be stable.
> 5. Some way of validating that ATNLR has not been tampered with. Some form
> of CRC or hash on the files.
> 6. SInce this will be a several meg file, could we host it www.antlr.org,
> or
> park at some other repository.
>
> Any thoughts or input is welcome.
>
> Thanks
>
> Eric
>

From researcher0x00 at gmail.com  Mon Jul 11 17:25:14 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 11 Jul 2011 20:25:14 -0400
Subject: [antlr-interest] ANTLR virtual appliance i.e. prebundled ANTLR
 for a virtual machine.
In-Reply-To: <CAF+GmOCx=hB26HSrWP_=kDE2cADeVEpOkAYOfYGEnrxEF4DVLg@mail.gmail.com>
References: <CAN45N111ALO-_EqrdXqoAUAft8x2Yd4SfSi-onkbm1cVWKjjFQ@mail.gmail.com>
	<CAF+GmOCx=hB26HSrWP_=kDE2cADeVEpOkAYOfYGEnrxEF4DVLg@mail.gmail.com>
Message-ID: <CAN45N13SdixGGBO=+j6GmVz+4+wpu57pYNF4TC5Zow_pim_-xQ@mail.gmail.com>

Hi Parsiad,

I am more than open to any suggestions. This is not for me but for those
learning ANTLR.

My primary goal for this at present is :

1. Make it easier for people to jump into ANTLR, preferably knowing only
Java and using "The Definitive ANTLR Reference"

2. Make it easier for people who are learning ATNLR to get help by saying I
am using appliance version x.y and here is the grammar and copy of the error
message. If someone wants to help and cannot reproduce the error, then using
the appliance x.y and the grammar should let them reproduce the error and
make a suggestion.

While it would be nice if classes teaching ANTLR used this, then they could
also guide its future development.

I just want to deliver the baby; I don't want to own it but I do my best to
keep it from getting orphaned. Since I know ANTLR and have built about  a
hundred different virtual machines for myself, these are basically a no
brainer, and building one for the ANTLR community seemed a nice was to pay
by dues.

Eric

From nilopaim at gmail.com  Mon Jul 11 17:45:27 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Mon, 11 Jul 2011 21:45:27 -0300
Subject: [antlr-interest] RES:  RES: RES: COBOL grammar
In-Reply-To: <CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>	<00ac01cc400b$93cfd170$bb6f7450$@com>	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>	<00ba01cc401b$6211a540$2634efc0$@com>
	<CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>
Message-ID: <00d001cc402d$011c4e40$0354eac0$@com>



-----Mensagem original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
Enviada em: segunda-feira, 11 de julho de 2011 20:36
Para: antlr-interest at antlr.org
Assunto: Re: [antlr-interest] RES: RES: COBOL grammar

That does not make much sense to me (however, I should state that I am too
unfamiliar with COBOL). For example, suppose you have program text of the
form:

procedure division .
id1 section .
id2 .
A .
B .

How do you know whether the '.' token after 'A' is meant to signify the end
of a command and not the end of a block?




Parsiad,

'B' is a command. That signifies that the '.' token after 'A' ends 'A'
command.

If 'B' would be an identifier and not a command, this would signify that the
'.' token after 'A' would ends the block (and, by the way, the paragraph
'id2', in your sample).

There is another sample I can show:

     IF some_expression
        A
        B
     ELSE
        C.

The '.' token after C means the end of the 'IF' command.

That's the reason why the '.' token after a command is optional. 'A' and 'B'
forms a block, that ends with the 'ELSE' (that is optional too).

Thanks for your interest.






Perhaps a better question would be, is there any semantic value to a block?
Can we remove the block rule altogether to yield:

grammar COBOL;

options
{
language = Java;
}

program
: 'procedure' 'division' END
section *
;

section
: ID 'section' END
paragraph *
;

paragraph
: ID END
( command END ? ) * END
;

// TODO: Put real commands here
command
: 'A'
| 'B'
;

fragment LETTER: 'a'..'z' | 'A'..'Z';
END: '.';
ID: LETTER ( LETTER | '0'..'9' | '-' )*;

The above grammar is unambiguous.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

On Mon, Jul 11, 2011 at 3:39 PM, Nilo Roberto C Paim
<nilopaim at gmail.com>wrote:

> Hi, Ron.
>
> Glad to say that I'm the maintainer of TinyCobol.
>
> What I'm trying to do here is write a new version of it, using Antlr. In
> this new version, I want to implement a lot of things that does not exists
> today, like native GUI and native access to RDBMS in general. Also, I'm
> going to generate 'executables' for Java JVM and for .Net CIL. Current
> TinyCobol generates assembly code for 32 bits only, and I think this is a
> big limitation for it now.
>
> But let's go to the real problem...
>
> A command in Cobol may or may be not terminated by '.'. All sequence of
> commands terminated by only one '.' are a block. A sample of this are the
> commands in the 'then' or the 'else' part of an 'IF' command. In this
case,
> the first '.' found on the end of some command terminates not only the
> command, but the 'IF' command as a whole.
>
> Additionally, a '.' must be the last token between paragraphs. Alias, the
> command sequence on a paragraph needs only the final '.', if I want.
>
> There is no way I could say if a '.' belongs to the preceding command or
if
> it enclosing the current paragraph, except by the fact that, if the
> following token is a section name or a new paragraph, it quits the current
> paragraph; else it quits a block.
>
> Maybe I'm just missing the way to say that to Antlr. As I've already said,
> I'm a newbie.
>
> Thanks for interest and sorry the poor English. I'm Portuguese native
> speaker.
>
> Nilo - Brazil
>
> -----Mensagem original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Em nome de Ron Burk
> Enviada em: segunda-feira, 11 de julho de 2011 19:24
> Cc: antlr-interest at antlr.org
> Assunto: Re: [antlr-interest] RES: COBOL grammar
>
> > What else am I missing?
>
> Are you certain you mean the '.' at the end of the command
> to be optional? An initial scan seems to indicate only one
> optional '.' in the tinyCobol grammar, in procedure declarations.
>
> Likewise, an uneducated glance at another COBOL grammar:
>    http://www.cs.vu.nl/grammarware/browsable/cobol/#EBNF
> seemed to indicate the "." is rarely optional.
>
> Or put another way, at the end of a command, what are
> the precise rules for deciding whether a '.' belongs to
> the current command or to the enclosing paragraph?
> If you can state an unambiguous rule for making that decision,
> you can probably force ANTLR to do it.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From douglasgodfrey at gmail.com  Mon Jul 11 18:48:45 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Mon, 11 Jul 2011 21:48:45 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAN45N13ziuUp0duyvZt-UCveLX+_md45jWREnqNzxSP5wMBzTQ@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
	<CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
	<CAN45N13ziuUp0duyvZt-UCveLX+_md45jWREnqNzxSP5wMBzTQ@mail.gmail.com>
Message-ID: <CAMk-oS1DEy5sy=Kae3iYnXcoUkSeXK5ekVTuzHGKE9Wyoxq4OA@mail.gmail.com>

For some time I have been proposing that a full function SymbolTable class
be added to
Antlr itself and made available as direct operations in the Antlr grammar.
Instead of having
to use target language specific productions, you would use target language
independent
SymbolTable class functions directly in the Antlr code.

The same symbol table classes would be used by Antlr itself to parse the
Antlr grammar
and by Antlr generated Parsers and TreeParsers.


i.e.

new_variable[list<string> TypeAttributes] :
    (Identifier.IsNewSymbol())=>Identifier.NewVariable(TypeAttributes);

instead of

new_variable[list<string> TypeAttributes] :
    { pSymbolTable->IsNewSymbol(LT(1).text) }?
    Identifier
    { pSymbolTable->NewVariable(TypeAttributes); };



On Mon, Jul 11, 2011 at 7:53 PM, The Researcher <researcher0x00 at gmail.com>wrote:

> Douglas and Loring,
>
> I truly appreciate your feedback and will be taking the time to understand
> it in enough detail so that I can explain it to others by creating some
> prototype code.
>
> The only other point of note is that if others are quietly reading this
> thread and are interested in creating a C++ parser for ANTLR, then please
> jump in with a question. I don't consider this my thread, but a public
> thread to learn how to parse C++ with ANTLR.
>
> Thanks Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ronburk at gmail.com  Mon Jul 11 20:14:51 2011
From: ronburk at gmail.com (Ron Burk)
Date: Mon, 11 Jul 2011 20:14:51 -0700
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
	<CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
Message-ID: <CAEVkYxfHYhrT_BMQ1fFwWsg-RhGtBGegdPPhojBh0-0hh8Kh8w@mail.gmail.com>

> Most C++ programs will not have any
> statements
> that cannot be resolved inline in the parser and would need to be resolved
> in a later AST
> TreeParser phase.

Hmmm? Surely a great many C++ programs rely extensively on
class libraries, and surely most of those make extensive use of
inline declarations.

struct TBuffer
    {
    void    Grow(size_t NewSize) { Buffer = realloc(Buffer, NewSize);
} /* wtf is Buffer? */
    char*  Buffer;    /* only later do we know what 'Buffer' refers to */
    };

How do you "resolve inline" class inline declarations that invariably refer
to a class that is not yet fully defined?

s/will not have any/will have many/

Use an abstract syntax tree or some form of token reprocessing,
what other choices are there? Neither way qualifies as "inline processing"
I would think...

From lgcraymer at yahoo.com  Mon Jul 11 20:59:22 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 11 Jul 2011 20:59:22 -0700 (PDT)
Subject: [antlr-interest] Can one identify the type of parser needed for
	a given BNF grammar
In-Reply-To: <CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
	<CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
Message-ID: <1310443162.56764.YahooMailNeo@web125502.mail.ne1.yahoo.com>

Sigh. ?'class' is a keyword in C++, so your first statement is wrong. ?What you propose is exactly what was done in the NEXT/Wigg parser; the cost is in parser synpreds (sempreds in Wigg's grammars; ANTLR 2 did not hoist synpreds, so Wigg had to work from the PCCTS generated code in getting a workable ANTLR 2 grammar) and tremendous backtracking overhead. ?I rather suspect that the result is considerably slower than the multi-pass approach would be; the NEXT/Wigg grammars do lots of backtracking as a matter of course. ?From studying the Wigg grammar, I estimate that there is at least a factor of two overhead from backtracking; tree walkers are faster than parsers (excluding actions) as the result of having a more canonical form (less lookahead; k=1 is normal).

By separating semantic analysis from syntactic analysis, you can support more comprehensive error reporting--multiple errors reported without having to implement parser error recovery--with line/column numbers (stored in the tokens). ?Being in a rush to report the first error encountered is silly: ?most of us can afford to wait an extra few milliseconds (or perhaps longer; more comprehensive error reporting costs in terms of display time).

Symbol tables are neither magic nor a "one size fits all" technology--there is no one true SymbolTable class. ?The information stored in symbol table entries varies across languages, and there may be multiple symbol tables for a given language (having a type table separate from the identifier symbol table is common).

Folding preprocessing into the lexer can be done; I think Jim Idle did that for C, but I could be mistaken. ?Whether the added complexity is worth the improved processing time over having a separate preprocessor, I have no idea. ?Certainly, that is best done as an optimization step; using a separate preprocessor for early development simplifies the problem of finding bugs in the lexer. ?It is never a good idea to unnecessarily add error sources.

So: ?you are wrong on almost all counts. ?You need more practical experience with language translation, and a bit of "book learning" would not be out of order.

--Loring




>________________________________
>From: Douglas Godfrey <douglasgodfrey at gmail.com>
>To: Loring Craymer <lgcraymer at yahoo.com>
>Cc: The Researcher <researcher0x00 at gmail.com>; antlr-interest at antlr.org
>Sent: Monday, July 11, 2011 4:33 PM
>Subject: Re: [antlr-interest] Can one identify the type of parser needed for a given BNF grammar
>
>
>If the SymbolTable is not built by the Parser then you cannot generate the correct AST
>for a class definition vs a function call. Also you cannot generate prompt errors close to
>the point where the error occurs in the parse. 90+% of all semantic ambiguities can be 
>resolved by a SymbolTable in the Parser. Most C++ programs will not have any statements 
>that cannot be resolved inline in the parser and would need to be resolved in a later AST
>TreeParser phase. The 90% case should not pay the compile time cost of a separate 
>TreeParser just to resolve ambiguities that can be handled by the Parser.
>
>No feedback is required for the Lexer. The Lexer can resolve all pre-processor statements
>before the Parser is invoked. The Lexer uses it's own primitive SymbolTable to handle 
>text substitutions and macros. Again, 90+% of all C++ programs do not use any complex
>macros where a second lexer pass would be needed. For simple includes and text 
>substitutions the Lexer can handle them inline. In 10% of the cases The Lexer needs 2 
>passes where the first pass processes all includes, macros and substitutions and the 
>second pass generates the token stream for the Parser.? 
>
>
>On Mon, Jul 11, 2011 at 5:16 PM, Loring Craymer <lgcraymer at yahoo.com> wrote:
>
>On 3.) : ?The parser just recognizes syntax and ignores semantic ambiguities;
>>then in a first tree walker pass, the symbol tables are constructed; a second
>>tree walker pass uses the symbol table information to resolve ambiguities (which
>>of several interpretations of valid syntax is correct) and rewrites the tree
>>into an unambiguous form. ?Then you have finished recognizing C++ and can
>>continue with further processing. ?Never, never, never would I suggest adding a
>>feedback mechanism that couples parser to lexer.
>>
>>
>>--Loring
>>
>>
>>----- Original Message ----
>>> From: The Researcher <researcher0x00 at gmail.com>
>>> To: antlr-interest at antlr.org
>>
>>> Sent: Mon, July 11, 2011 12:55:05 PM
>>> Subject: Re: [antlr-interest] Can one identify the type of parser needed for a
>>>given BNF grammar
>>>
>>> >
>>
>>> > Loring,
>>>
>>>
>>> Thanks for the feedback.
>>>
>>> While I now can ?understand your answer, I still don't have enough
>>> experience ?to ?implement any approach correctly.
>>>
>>> As a help to others who are working on ?this in private or interested in
>>> creating a C++ ?parser I will gloss ?what Loring said because last week it
>>> would have mostly been Greek to me. If ?I say something wrong, please
>>> correct. I am not afraid to make mistakes in ?public so that others may learn
>>> from them.
>>>
>>> The big thing that one has ?to learn about parsing C++ is how to handle the
>>> ambiguities. That is the ?dragon to be slayed here.
>>>
>>> 1. And then you have to figure out how to prune ?the GLR-generated "forests".
>>>
>>> GLR http://en.wikipedia.org/wiki/GLR_parser
>>>
>>> The reason GLR is considered ?for C++ is that do to the ambiguities of C++
>>> most parsers in a typical ?fashion have to couple the feedback from the
>>> parser to the lexer and ?reference a symbol table to correctly parse C++.
>>> This is contrary to what is ?taught in school and most of the early examples
>>> of parsing you will come ?across. This allows them to produce an AST without
>>> ambiguities after the ?parser. This is pushing the work to the front. GLR is
>>> one of the most ?powerful parsing strategies and can parse C++ without
>>> coupling the parser to ?the lexer, but does so by generating multiple
>>> subtrees for each ambiguity, ?for which you must later prune out the
>>> ambiguities from the forests. This is ?pushing the work to the back.
>>>
>>> 2. C++ is nasty; it can be parsed with ?ANTLR (as shown by NEXT and David
>>> Wigg's
>>> adaptions of that ?grammar).
>>>
>>> The ANTLR C++ grammar does so by creating a symbol table and ?using
>>> predicates during the parse. In my initial conversions of the ANTLR ?C
>>> grammar to C# I was able to convert it, but did not understand why it ?did
>>> certain things at first. After researching it was clear that a lot of ?the
>>> ambiguities of C++ arise when an name is encountered and then it's use ( ?a
>>> type, an identifier, etc) ?has to be know in order to take the ?appropriate
>>> branch. Thus the creation of the symbol tables and other tables ?and the use
>>> of predicates. This pushes the work to the front.
>>>
>>> 3. I ?believe that the right strategy with ANTLR is actually to use
>>> multi-pass ?recognition to sort out the ambiguities. ?That has not been ?done
>>> yet.
>>> The problem is that C++ cannot be adequately described with a ?context-free
>>> grammar; you have to do some context-sensitive processing to ?resolve the
>>> syntax
>>> that is semantically ambiguous.
>>>
>>> It could/should ?be possible to parse C++ with ANTLR without a symbol table
>>> and associated ?predicates, and then in the AST analysis verify that the
>>> input C++ syntax is ?valid C++ semantics.
>>> Remember that the BNF for a grammar does not guarantee ?valid code/semantics
>>> only correct syntax. So the AST is analyzed to find ?invalid semantics. I am
>>> not sure if this will require coupling the parser to ?the lexer or the AST to
>>> the parser, but if I go this route I will soon ?know.
>>>
>>> I know this went off topic but was worth it.
>>>
>>> Any answer to ?the original question is still ?appreciated.
>>>
>>> Thanks
>>>
>>> Eric
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>

From douglasgodfrey at gmail.com  Tue Jul 12 02:35:25 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 12 Jul 2011 05:35:25 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAEVkYxfHYhrT_BMQ1fFwWsg-RhGtBGegdPPhojBh0-0hh8Kh8w@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
	<CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
	<CAEVkYxfHYhrT_BMQ1fFwWsg-RhGtBGegdPPhojBh0-0hh8Kh8w@mail.gmail.com>
Message-ID: <CAMk-oS0oxBZYCZe=7PE1T5rVO1O5-dN5TWVygrqEkgOgR+Kncw@mail.gmail.com>

You can always resolve an inline declaration like the one below either by
the
syntax of the statement or by the SymbolTable or by the default rule that
ambiguous statements that look like a declaration are a declaration. The
SymbolTable is required but an AST and TreeParser is not.

TBuffer(123) foo;

Forward references to a class member may require an AST and TreeParser but
they are not common. The problem you list below cannot happen if the member
functions are defined in a separate C++ file and would not happen if the
member
variables are declared before the member functions. This is the 10% case.


see <
http://publib.boulder.ibm.com/infocenter/comphelp/v7v91/index.jsp?topic=%2Fcom.ibm.vacpp7a.doc%2Flanguage%2Fref%2Fclrc08cplr403.htm
>

On Mon, Jul 11, 2011 at 11:14 PM, Ron Burk <ronburk at gmail.com> wrote:

> > Most C++ programs will not have any
> > statements
> > that cannot be resolved inline in the parser and would need to be
> resolved
> > in a later AST
> > TreeParser phase.
>
> Hmmm? Surely a great many C++ programs rely extensively on
> class libraries, and surely most of those make extensive use of
> inline declarations.
>
> struct TBuffer
>    {
>    void    Grow(size_t NewSize) { Buffer = realloc(Buffer, NewSize);
> } /* wtf is Buffer? */
>    char*  Buffer;    /* only later do we know what 'Buffer' refers to */
>    };
>
> How do you "resolve inline" class inline declarations that invariably refer
> to a class that is not yet fully defined?
>
> s/will not have any/will have many/
>
> Use an abstract syntax tree or some form of token reprocessing,
> what other choices are there? Neither way qualifies as "inline processing"
> I would think...
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Tue Jul 12 07:30:28 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 12 Jul 2011 10:30:28 -0400
Subject: [antlr-interest] Can one identify the type of parser needed for
 a given BNF grammar
In-Reply-To: <CAMk-oS0oxBZYCZe=7PE1T5rVO1O5-dN5TWVygrqEkgOgR+Kncw@mail.gmail.com>
References: <CAN45N13=1t3SU0RSXi2p0GtnU8ofHUsktwU1giJ3o72z79ugdw@mail.gmail.com>
	<1310410267.3090.YahooMailRC@web125520.mail.ne1.yahoo.com>
	<CAN45N108QpeJEL8M1H+x5ZoBDE-6+N=SwU+Vh+cdGnOfsuPf6w@mail.gmail.com>
	<1310419002.8178.YahooMailRC@web125516.mail.ne1.yahoo.com>
	<CAMk-oS0gORuDOig6P9Eo4UO-c6KXn=wreaqK_TLJ85=+uZbrwg@mail.gmail.com>
	<CAEVkYxfHYhrT_BMQ1fFwWsg-RhGtBGegdPPhojBh0-0hh8Kh8w@mail.gmail.com>
	<CAMk-oS0oxBZYCZe=7PE1T5rVO1O5-dN5TWVygrqEkgOgR+Kncw@mail.gmail.com>
Message-ID: <CAN45N13ikbLqDdfTs-+QeSSKCHU8k+TMmHWRYwbFd2jHvEW70A@mail.gmail.com>

FYI

The following info should be in a Wiki topic for parsing C++ with ANTLR, but
I am putting it here for others quietly following this thread.

One of the major problems with parsing C++ is the ambiguities.

A more through listing of the ambiguities of C++ can be found in appendix
F.2 of
"Meta-Compilation for C++" by Edward D. Willink
http://www.computing.surrey.ac.uk/research/dsrg/fog/FogThesis.pdf

The resolution sections are pertinent to the thesis but can be ignored for
just a listing of the ambiguities.

Eric

From bill.andersen at mac.com  Tue Jul 12 10:07:42 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Tue, 12 Jul 2011 13:07:42 -0400
Subject: [antlr-interest] antlrv3ide question
Message-ID: <2E07EDF7-9582-4061-B71E-86F0859FEBF7@mac.com>

Folks

I have a split lexer / parser grammar.  The lexer compiles and is working fine.  Changing the parser, however, causes recompilation of the lexer - this takes more time than I want.  Any good way to shut that off?

Thanks

	.bill


From parsiad.azimzadeh at gmail.com  Tue Jul 12 13:32:06 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Tue, 12 Jul 2011 13:32:06 -0700
Subject: [antlr-interest] RES: RES: COBOL grammar
In-Reply-To: <00d001cc402d$011c4e40$0354eac0$@com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
	<00ba01cc401b$6211a540$2634efc0$@com>
	<CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>
	<00d001cc402d$011c4e40$0354eac0$@com>
Message-ID: <CAF+GmOD7VgWX6RjhVRzDoHCND+bep_tbFByTuCLQ6p0kn++tkQ@mail.gmail.com>

I think I can make some educated guesses as to the syntax you're
trying to describe from your example:

> There is another sample I can show:
> ? ? IF some_expression
> ? ? ? ?A
> ? ? ? ?B
> ? ? ELSE
> ? ? ? ?C.

The END character is used in an IF statement to terminate it. It is
not an optional element in each statement, it is a required element
for particular statements. See the (unambiguous) grammar below:

grammar COBOL;

options
{
	language = Java;
}

program
	:	'procedure' 'division' END
		section *
	;

section
	:	ID 'section' END
		paragraph *
	;

paragraph
	:	ID END
		command *
		END
	;

// TODO: replace with actual commands
command
	:	'A'
	|	'B'

	// Conditional, as shown in your example
	|	IF expression
		command *
		ELSE
		command *
		END
	;

// TODO: replace with actual expressions
expression
	:	'E0'
	|	'E1'
	;

fragment LETTER: 'a'..'z' | 'A'..'Z';
END: '.';
IF: 'IF';
ELSE: 'ELSE';
ID: LETTER ( LETTER | '0'..'9' | '-' )*;

From louis.burroughs at gmail.com  Tue Jul 12 13:41:51 2011
From: louis.burroughs at gmail.com (Louis Burroughs)
Date: Tue, 12 Jul 2011 16:41:51 -0400
Subject: [antlr-interest] desperate noob
Message-ID: <CABDk1BymmTmZWGTkJs0XzS_bmxCiVszDzBcMWeVuNV0z4cXrNQ@mail.gmail.com>

Just spent a week creating an esql grammar. After finally getting a decent
test run something locked up in antlrworks and I managed to delete my entire
grammar.  Yeah, yeah source control lesson learned. My generated java is now
safely tucked away.  Is there any way to go from the java output to recreate
a grammar?  I have the antlr reference book so if someone can point me to a
page number or chapter I would appreciate it.

tia,
Louis

From researcher0x00 at gmail.com  Tue Jul 12 13:55:17 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 12 Jul 2011 16:55:17 -0400
Subject: [antlr-interest] desperate noob
In-Reply-To: <CABDk1BymmTmZWGTkJs0XzS_bmxCiVszDzBcMWeVuNV0z4cXrNQ@mail.gmail.com>
References: <CABDk1BymmTmZWGTkJs0XzS_bmxCiVszDzBcMWeVuNV0z4cXrNQ@mail.gmail.com>
Message-ID: <CAN45N10Cvh=a4NRWdVPnR344M=OQEVbUqMhJqeR8VEwLOtavug@mail.gmail.com>

Hi Louis,

In the comments of the source code for each rule should be the original rule
from the grammar.

 I don't know of any tool in or out of ANTLR that will automate the task so
you will have to extract it by hand.

HTH

Eric

From nilopaim at gmail.com  Tue Jul 12 13:59:09 2011
From: nilopaim at gmail.com (Nilo)
Date: Tue, 12 Jul 2011 17:59:09 -0300
Subject: [antlr-interest] RES: RES: COBOL grammar
In-Reply-To: <CAF+GmOD7VgWX6RjhVRzDoHCND+bep_tbFByTuCLQ6p0kn++tkQ@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
	<00ba01cc401b$6211a540$2634efc0$@com>
	<CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>
	<00d001cc402d$011c4e40$0354eac0$@com>
	<CAF+GmOD7VgWX6RjhVRzDoHCND+bep_tbFByTuCLQ6p0kn++tkQ@mail.gmail.com>
Message-ID: <CANcZe+rRZ6WB6+OvppM1B2x97pN-tyWNswDW9uOmSo74LFMzRg@mail.gmail.com>

Thanks for your interest, Parsiad.

I was trying just to simplify the sample...

A command inside an 'IF' command can be another 'IF' command. In this case,
I cannot ends the inner 'IF' with a '.', because this will ends the outter
IF too.


On Tue, Jul 12, 2011 at 5:32 PM, Parsiad Azimzadeh <
parsiad.azimzadeh at gmail.com> wrote:

> I think I can make some educated guesses as to the syntax you're
> trying to describe from your example:
>
> > There is another sample I can show:
> >     IF some_expression
> >        A
> >        B
> >     ELSE
> >        C.
>
> The END character is used in an IF statement to terminate it. It is
> not an optional element in each statement, it is a required element
> for particular statements. See the (unambiguous) grammar below:
>
> grammar COBOL;
>
> options
> {
>        language = Java;
> }
>
> program
>        :       'procedure' 'division' END
>                section *
>        ;
>
> section
>        :       ID 'section' END
>                paragraph *
>        ;
>
> paragraph
>        :       ID END
>                command *
>                END
>         ;
>
> // TODO: replace with actual commands
> command
>        :       'A'
>        |       'B'
>
>        // Conditional, as shown in your example
>        |       IF expression
>                command *
>                ELSE
>                command *
>                END
>        ;
>
> // TODO: replace with actual expressions
> expression
>        :       'E0'
>        |       'E1'
>         ;
>
> fragment LETTER: 'a'..'z' | 'A'..'Z';
> END: '.';
> IF: 'IF';
> ELSE: 'ELSE';
> ID: LETTER ( LETTER | '0'..'9' | '-' )*;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 

Nilo Roberto C Paim
TinyCobol Development Team
Bras?lia - DF - Brazil

From parsiad.azimzadeh at gmail.com  Tue Jul 12 14:04:02 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Tue, 12 Jul 2011 14:04:02 -0700
Subject: [antlr-interest] RES: RES: COBOL grammar
In-Reply-To: <CANcZe+rRZ6WB6+OvppM1B2x97pN-tyWNswDW9uOmSo74LFMzRg@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>
	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>
	<1310336239769-6568771.post@n2.nabble.com>
	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>
	<1310339083410-6568868.post@n2.nabble.com>
	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>
	<1310347076346-6569254.post@n2.nabble.com>
	<006e01cc3fea$08e00ce0$1aa026a0$@com>
	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
	<00ba01cc401b$6211a540$2634efc0$@com>
	<CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>
	<00d001cc402d$011c4e40$0354eac0$@com>
	<CAF+GmOD7VgWX6RjhVRzDoHCND+bep_tbFByTuCLQ6p0kn++tkQ@mail.gmail.com>
	<CANcZe+rRZ6WB6+OvppM1B2x97pN-tyWNswDW9uOmSo74LFMzRg@mail.gmail.com>
Message-ID: <CAF+GmOAppWLhrRSM4R0ZaG7gTe3pNbCvfLSL__LaL-UoUpkEhg@mail.gmail.com>

> I cannot ends the inner 'IF' with a '.', because this will ends the outter
> IF too.

What I have written will only end the inner IF.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

From sharwell at pixelminegames.com  Tue Jul 12 15:02:48 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 12 Jul 2011 17:02:48 -0500
Subject: [antlr-interest] desperate noob
In-Reply-To: <CAN45N10Cvh=a4NRWdVPnR344M=OQEVbUqMhJqeR8VEwLOtavug@mail.gmail.com>
References: <CABDk1BymmTmZWGTkJs0XzS_bmxCiVszDzBcMWeVuNV0z4cXrNQ@mail.gmail.com>
	<CAN45N10Cvh=a4NRWdVPnR344M=OQEVbUqMhJqeR8VEwLOtavug@mail.gmail.com>
Message-ID: <035c01cc40df$72321030$56963090$@pixelminegames.com>

Also, make sure you back up a copy of the generated file you have. You don't
want to accidentally generate some code over the top of it only to find out
the new grammar wasn't yet complete. :)

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of The Researcher
Sent: Tuesday, July 12, 2011 3:55 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] desperate noob

Hi Louis,

In the comments of the source code for each rule should be the original rule
from the grammar.

 I don't know of any tool in or out of ANTLR that will automate the task so
you will have to extract it by hand.

HTH

Eric

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From nilopaim at gmail.com  Tue Jul 12 19:16:04 2011
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Tue, 12 Jul 2011 23:16:04 -0300
Subject: [antlr-interest] RES:  RES: RES: COBOL grammar
In-Reply-To: <CAF+GmOAppWLhrRSM4R0ZaG7gTe3pNbCvfLSL__LaL-UoUpkEhg@mail.gmail.com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>	<00ac01cc400b$93cfd170$bb6f7450$@com>	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>	<00ba01cc401b$6211a540$2634efc0$@com>	<CAF+GmOAcS6Q8bDOrakbvSZ__2LD4Tkk33ZkiY35nCJrYOniL_A@mail.gmail.com>	<00d001cc402d$011c4e40$0354eac0$@com>	<CAF+GmOD7VgWX6RjhVRzDoHCND+bep_tbFByTuCLQ6p0kn++tkQ@mail.gmail.com>	<CANcZe+rRZ6WB6+OvppM1B2x97pN-tyWNswDW9uOmSo74LFMzRg@mail.gmail.com>
	<CAF+GmOAppWLhrRSM4R0ZaG7gTe3pNbCvfLSL__LaL-UoUpkEhg@mail.gmail.com>
Message-ID: <008701cc4102$d5a1c2f0$80e548d0$@com>

According with Cobol rules, the '.' will ends the outer 'IF', and this is
not intended.

An 'IF' command is terminated by a '.', no matter which commands are inside
the 'IF' alternatives. A '.' in the alternatives will ends the 'IF', even if
in the alternatives are another 'IF' command.

I'll make a clearer sample, pointing exactly what I'm saying.


IF expr
   IF expr2
      A
   ELSE
      B.
ELSE
   C.

The '.' following 'B' will ends the outer 'IF', causing a syntax error on
the second 'ELSE'. If this '.' following 'B' doesn't exists, the code is
completely correct in terms of syntax, ad that is what I need...

Thanks a lot for your interest, Parsiad.

Best regards,
Nilo - Brazil




-----Mensagem original-----
De: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
Enviada em: ter?a-feira, 12 de julho de 2011 18:04
Para: antlr-interest at antlr.org
Assunto: Re: [antlr-interest] RES: RES: COBOL grammar

> I cannot ends the inner 'IF' with a '.', because this will ends the outter
> IF too.

What I have written will only end the inner IF.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From DJBall05 at hotmail.co.uk  Tue Jul 12 20:37:59 2011
From: DJBall05 at hotmail.co.uk (DJB MASTER)
Date: Tue, 12 Jul 2011 20:37:59 -0700 (PDT)
Subject: [antlr-interest] Tree pattern won't rewrite AST C#
Message-ID: <1310528279976-6577614.post@n2.nabble.com>

Hey, I'm trying to apply simple tree patterns that can remove redundancy in
multiplication expressions, such as x*0 -> 0. However I can't get it to
rewrite my AST I feed in.

I'm using again >>>
http://media.pragprog.com/titles/tpdsl/code/IR/Vec/VecMathAST.g 

and I'm using this as my simplifier >>
http://media.pragprog.com/titles/tpdsl/code/walking/patterns/Simplify.g.

I'm getting a correct AST because it's identical to what Terrance gets in
the LP book.

I'm using this code to call my simplifier...

CommonTree AST = (CommonTree)parser.statlist().Tree;        

CommonTreeNodeStream nodes = new CommonTreeNodeStream(AST);
nodes.TokenStream = tokens;

Simplifier simplifier = new Simplifier(nodes);
CommonTree AST = (CommonTree)simplifier.Downup(AST, true);

But it seems to do nothing.

--
View this message in context: http://antlr.1301665.n2.nabble.com/Tree-pattern-won-t-rewrite-AST-C-tp6577614p6577614.html
Sent from the ANTLR mailing list archive at Nabble.com.

From gary at sumwise.com  Wed Jul 13 03:36:25 2011
From: gary at sumwise.com (Gary Miller)
Date: Wed, 13 Jul 2011 20:36:25 +1000
Subject: [antlr-interest] antlrv3ide question
In-Reply-To: <2E07EDF7-9582-4061-B71E-86F0859FEBF7@mac.com>
References: <2E07EDF7-9582-4061-B71E-86F0859FEBF7@mac.com>
Message-ID: <CAFCNb3hMRhJJinHpAPAd3rP7VDapXNXKcJT=2hQk4gUA5Ye6Tg@mail.gmail.com>

Hey Bill,

It doesn't seem to be on the official wiki command line page (I though
I remembered it there, but..) the -make options should do the trick.

http://www.antlr.org/wiki/display/ANTLR3/Command+line+options
http://www.antlr.org/wiki/display/ANTLR3/How+to+use+ant+with+ANTLR3

Regards
Gary

On Wed, Jul 13, 2011 at 3:07 AM, Bill Andersen <bill.andersen at mac.com>wrote:

> Folks
>
> I have a split lexer / parser grammar.  The lexer compiles and is working
> fine.  Changing the parser, however, causes recompilation of the lexer -
> this takes more time than I want.  Any good way to shut that off?
>
> Thanks
>
>        .bill
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cowang at comcast.net  Wed Jul 13 04:18:13 2011
From: cowang at comcast.net (George S. Cowan)
Date: Wed, 13 Jul 2011 07:18:13 -0400
Subject: [antlr-interest] RES:  RES: COBOL grammar
In-Reply-To: <00ba01cc401b$6211a540$2634efc0$@com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>	<00ac01cc400b$93cfd170$bb6f7450$@com>	<CAEVkYxcd=s3epHmRKtZj7-Ly2TXabSwUk-k4imTkuwu57-Lxcw@mail.gmail.com>
	<00ba01cc401b$6211a540$2634efc0$@com>
Message-ID: <002f01cc414e$8f9da6b0$aed8f410$@net>

Nilo,

I'm an old COBOL hacker from way back, so I understand COBOL periods,
although I don't know what version of the COBOL standards that your compiler
is using.

I think the way to solve the problem with periods is to make it optional for
every statement. Then, right after a new paragraph header is encountered,
check the previous token to make sure that it is a period. Try the
validating semantic predicate

  { ((Token)input.LT(-1)).getText().equals(".") }?

(Does anyone know a simpler way to do that?)

George
 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Nilo Roberto C Paim
> Sent: Monday, July 11, 2011 6:39 PM
> To: 'Ron Burk'
> Cc: antlr-interest at antlr.org
> Subject: [antlr-interest] RES: RES: COBOL grammar
> 
> Hi, Ron.
> 
> Glad to say that I'm the maintainer of TinyCobol.
> 
> What I'm trying to do here is write a new version of it, using Antlr.
> In
> this new version, I want to implement a lot of things that does not
> exists
> today, like native GUI and native access to RDBMS in general. Also, I'm
> going to generate 'executables' for Java JVM and for .Net CIL. Current
> TinyCobol generates assembly code for 32 bits only, and I think this is
> a
> big limitation for it now.
> 
> But let's go to the real problem...
> 
> A command in Cobol may or may be not terminated by '.'. All sequence of
> commands terminated by only one '.' are a block. A sample of this are
> the
> commands in the 'then' or the 'else' part of an 'IF' command. In this
> case,
> the first '.' found on the end of some command terminates not only the
> command, but the 'IF' command as a whole.
> 
> Additionally, a '.' must be the last token between paragraphs. Alias,
> the
> command sequence on a paragraph needs only the final '.', if I want.
> 
> There is no way I could say if a '.' belongs to the preceding command
> or if
> it enclosing the current paragraph, except by the fact that, if the
> following token is a section name or a new paragraph, it quits the
> current
> paragraph; else it quits a block.
> 
> Maybe I'm just missing the way to say that to Antlr. As I've already
> said,
> I'm a newbie.
> 
> Thanks for interest and sorry the poor English. I'm Portuguese native
> speaker.
> 
> Nilo - Brazil
> 
> -----Mensagem original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Em nome de Ron Burk
> Enviada em: segunda-feira, 11 de julho de 2011 19:24
> Cc: antlr-interest at antlr.org
> Assunto: Re: [antlr-interest] RES: COBOL grammar
> 
> > What else am I missing?
> 
> Are you certain you mean the '.' at the end of the command
> to be optional? An initial scan seems to indicate only one
> optional '.' in the tinyCobol grammar, in procedure declarations.
> 
> Likewise, an uneducated glance at another COBOL grammar:
>     http://www.cs.vu.nl/grammarware/browsable/cobol/#EBNF
> seemed to indicate the "." is rarely optional.
> 
> Or put another way, at the end of a command, what are
> the precise rules for deciding whether a '.' belongs to
> the current command or to the enclosing paragraph?
> If you can state an unambiguous rule for making that decision,
> you can probably force ANTLR to do it.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From cowang at comcast.net  Wed Jul 13 05:11:09 2011
From: cowang at comcast.net (George S. Cowan)
Date: Wed, 13 Jul 2011 08:11:09 -0400
Subject: [antlr-interest] RES:  COBOL grammar
In-Reply-To: <00ac01cc400b$93cfd170$bb6f7450$@com>
References: <1310288093834-6567453.post@n2.nabble.com>	<025001cc3f23$82cfbf40$886f3dc0$@pixelminegames.com>	<1310336239769-6568771.post@n2.nabble.com>	<026301cc3f53$27dfb6f0$779f24d0$@pixelminegames.com>	<1310339083410-6568868.post@n2.nabble.com>	<026d01cc3f65$b7fd7670$27f86350$@pixelminegames.com>	<1310347076346-6569254.post@n2.nabble.com>	<006e01cc3fea$08e00ce0$1aa026a0$@com>	<CAF+GmOBq1qgWA=YHPt6VRR3cP8=NxVMiQ1UbkF+F2QQA4WYxgw@mail.gmail.com>
	<00ac01cc400b$93cfd170$bb6f7450$@com>
Message-ID: <003001cc4155$f41c9040$dc55b0c0$@net>

Nilo,

OK, I've found a message with your grammar and here's another suggestion. 

Drop the optional period after a command so that a period always ends a
block. (Later, when you include building your AST, you must make sure that
your AST correctly ends an if-statement at the end of a block.) I think you
also want to require a block to contain a by using a + instead of an *. And
you will still need to check for the preceding period when a paragraph
begins. So here is a suggested direction for your grammar (untested).


grammar Cobol;

options {
 language = Java;
}

program : 'procedure' 'division' '.' section*;

section : ID 'section' '.' paragraph*;

paragraph : ID { ((Token)input.LT(-1)).getText().equals(".") }? '.' block* ;

block : command+ '.' ;

command: (cmdA | cmdB | cmdC ) ;

cmdA: 'A';

cmdB: 'B';

cmdC: 'C';

fragment Digit : '0'..'9';

fragment Letter : ('a'..'z' | 'A'..'Z');

ID : Letter ( Letter | Digit | '-' )*;

WS
    :   (    ' '
        |    '\r'
        |    '\t'
        |    '\u000C'
        |    '\n'
        )
            {$channel=HIDDEN;}
    ;

Good luck,
George

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Nilo Roberto C Paim
> Sent: Monday, July 11, 2011 4:46 PM
> To: 'Parsiad Azimzadeh'; antlr-interest at antlr.org
> Subject: [antlr-interest] RES: COBOL grammar
> 
> Thanks, Parsiad, for your help.
> 
> Indeed the ambiguities are 'solved'... but using your solution, only
> the
> first 'command' of the first 'block' of the first 'paragraph' are
> parsed!
> 
> And I don't have something I can call 'END_BLOCK', as you suggested.
> This
> thing would be a '.', that can be preceded by a 'command' either... and
> the
> problem returns...
> 
> What else am I missing?
> 
> TIA,
> Nilo - Brazil
> 
> -----Mensagem original-----
> De: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] Em nome de Parsiad Azimzadeh
> Enviada em: segunda-feira, 11 de julho de 2011 14:36
> Para: antlr-interest at antlr.org
> Assunto: Re: [antlr-interest] COBOL grammar
> 
> Hi Nilo,
> 
> The problem is that a paragraph contains any number of blocks and a
> block
> contains any number of commands (the ambiguity here is that some
> paragraph
> with two commands can be perceived as containing either two blocks each
> with
> one command or a single block with two commands).
> 
> The fix is simple, remove the * symbol from the line:
> paragraph : ID '.' block* '.';
> 
> If multiple blocks holds semantic value, you might need to use a symbol
> to
> denote the end of a block. For example, instead of using the fix above
> you
> could change the block rule to:
> 
> block: (command END_BLOCK)*;
> 
> --
> Parsiad Azimzadeh
> http://sfu.ca/~paa4
> 
> On Mon, Jul 11, 2011 at 9:46 AM, Nilo Roberto C Paim
> <nilopaim at gmail.com>wrote:
> 
> > Hi all,
> >
> > I'm facing a problem on my grammar that I don't know how to solve
> > (Antlr3.3)...
> >
> > Let me show you my grammar. Simplified, of course. It's just to show
> you
> my
> > trouble.
> >
> >
> >
> >
> >
> > grammar Cobol;
> >
> > options {
> >  language = Java;
> > }
> >
> > program : 'procedure' 'division' '.' section*;
> >
> > section : ID 'section' '.' paragraph*;
> >
> > paragraph : ID '.' block* '.';
> >
> > block : command*;
> >
> > command: (cmdA | cmdB | cmdC ) '.'?;
> >
> > cmdA: 'A';
> >
> > cmdB: 'B';
> >
> > cmdC: 'C';
> >
> > fragment Digit : '0'..'9';
> >
> > fragment Letter : ('a'..'z' | 'A'..'Z');
> >
> > ID : Letter ( Letter | Digit | '-' )*;
> >
> >
> >
> >
> >
> > Using this grammar, I'm having the following errors and warnings:
> >
> > warning(200): /Cobol/src/Cobol.g:14:12: Decision can match input such
> as
> > "{'.', 'A'..'C'}" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> ID '.' block* '.';
> >
> > error(201): /Cobol/src/Cobol.g:14:12: The following alternatives can
> never
> > be matched: 2
> >  |---> ID '.' block* '.';
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such
> as
> > "'B'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such
> as
> > "'A'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> > warning(200): /Cobol/src/Cobol.g:17:5: Decision can match input such
> as
> > "'C'" using multiple alternatives: 1, 2
> > As a result, alternative(s) 2 were disabled for that input
> >  |---> command*;
> >
> >
> > 4 warnings
> >
> > 1 error
> >
> > BUILD FAIL
> >
> >
> >
> > My real problem is:
> >
> > 1) any 'command' can be followed by a '.'
> > 2) any sequence of 'command's not followed by '.' forms a 'block'
> > 3) wherever I can use a 'command', I can use a 'block'
> > 4) the '.' signifies the end of a 'block'
> > 5) I can use any number of 'block's to form a 'paragraph'
> > 6) I can use any number of 'paragraph's to form a 'section'
> > 7) I can have any number of 'section's on a 'program'
> >
> > Any hints or help about what am I doing wrong? I'm completely stuck
> on it,
> > 'cause I'm a little newbie using Antlr...
> >
> > TIA,
> > Nilo - Brazil
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address


From sharwell at pixelminegames.com  Wed Jul 13 06:43:13 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 13 Jul 2011 08:43:13 -0500
Subject: [antlr-interest] Tree pattern won't rewrite AST C#
In-Reply-To: <1310528279976-6577614.post@n2.nabble.com>
References: <1310528279976-6577614.post@n2.nabble.com>
Message-ID: <039001cc4162$d08e5110$71aaf330$@pixelminegames.com>

In your partial class file that accompanies your grammar, you should add the
following function override:

partial class MyTreeParser {
    public override IAstRuleReturnScope Bottomup() { return bottomup(); }
}

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of DJB MASTER
Sent: Tuesday, July 12, 2011 10:38 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Tree pattern won't rewrite AST C#

Hey, I'm trying to apply simple tree patterns that can remove redundancy in
multiplication expressions, such as x*0 -> 0. However I can't get it to
rewrite my AST I feed in.

I'm using again >>>
http://media.pragprog.com/titles/tpdsl/code/IR/Vec/VecMathAST.g 

and I'm using this as my simplifier >>
http://media.pragprog.com/titles/tpdsl/code/walking/patterns/Simplify.g.

I'm getting a correct AST because it's identical to what Terrance gets in
the LP book.

I'm using this code to call my simplifier...

CommonTree AST = (CommonTree)parser.statlist().Tree;        

CommonTreeNodeStream nodes = new CommonTreeNodeStream(AST);
nodes.TokenStream = tokens;

Simplifier simplifier = new Simplifier(nodes); CommonTree AST =
(CommonTree)simplifier.Downup(AST, true);

But it seems to do nothing.

--
View this message in context:
http://antlr.1301665.n2.nabble.com/Tree-pattern-won-t-rewrite-AST-C-tp657761
4p6577614.html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From skkibler at earthlink.net  Wed Jul 13 12:14:11 2011
From: skkibler at earthlink.net (Steven Kibler)
Date: Wed, 13 Jul 2011 13:14:11 -0600
Subject: [antlr-interest] Two issues.
Message-ID: <006a01cc4191$0c763ac0$2562b040$@net>

Is there an example of how to request tokens and their information (type,
value, text, etc) from the scanner?   If there is, where?

 

Is there an example of how to feed information into the scanner with other
than a file (a function call)?  By preprocessing the input, I can remove
over 75% of the information from the input and process include files.  If
there is, where?

 

Steven Kibler
Flight Trak, Inc.
303.438.8640

888.354.8725

303 466 6091 Direct

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material. Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited. If you received
this in error, please contact the sender and delete the material from any
computer.

 


From skkibler at earthlink.net  Wed Jul 13 12:15:49 2011
From: skkibler at earthlink.net (Steven Kibler)
Date: Wed, 13 Jul 2011 13:15:49 -0600
Subject: [antlr-interest] FW: Two issues.
Message-ID: <007201cc4191$46e492b0$d4adb810$@net>

Update.  I need the C interface.

 

From: Steven Kibler [mailto:skkibler at earthlink.net] 
Sent: Wednesday, July 13, 2011 13:14
To: 'antlr-interest at antlr.org'
Subject: Two issues.

 

Is there an example of how to request tokens and their information (type,
value, text, etc) from the scanner?   If there is, where?

 

Is there an example of how to feed information into the scanner with other
than a file (a function call)?  By preprocessing the input, I can remove
over 75% of the information from the input and process include files.  If
there is, where?

 

Steven Kibler
Flight Trak, Inc.
303.438.8640

888.354.8725

303 466 6091 Direct

The information transmitted is intended only for the person or entity to
which it is addressed and may contain confidential and/or privileged
material. Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by persons or
entities other than the intended recipient is prohibited. If you received
this in error, please contact the sender and delete the material from any
computer.

 


From jimi at temporal-wave.com  Wed Jul 13 12:21:51 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 13 Jul 2011 12:21:51 -0700
Subject: [antlr-interest] FW: Two issues.
In-Reply-To: <007201cc4191$46e492b0$d4adb810$@net>
References: <007201cc4191$46e492b0$d4adb810$@net>
Message-ID: <555c6b139a2c95bf09c3cff29cda592b@mail.gmail.com>

Did you read through the example grammars on the download page? Also, the
source code for the default error message method is a good start.

What is it you are trying to do as I am afraid I don't follow your comment
about the pre-processing. In the lexer, the $xxx attributes work too of
course, though I advise you use your own methods for looking at the text
of a token as the built-in stuff is really just a helper if you don't care
about performance very much.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Steven Kibler
> Sent: Wednesday, July 13, 2011 12:16 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] FW: Two issues.
>
> Update.  I need the C interface.
>
>
>
> From: Steven Kibler [mailto:skkibler at earthlink.net]
> Sent: Wednesday, July 13, 2011 13:14
> To: 'antlr-interest at antlr.org'
> Subject: Two issues.
>
>
>
> Is there an example of how to request tokens and their information
> (type,
> value, text, etc) from the scanner?   If there is, where?
>
>
>
> Is there an example of how to feed information into the scanner with
> other than a file (a function call)?  By preprocessing the input, I can
> remove over 75% of the information from the input and process include
> files.  If there is, where?
>
>
>
> Steven Kibler
> Flight Trak, Inc.
> 303.438.8640
>
> 888.354.8725
>
> 303 466 6091 Direct
>
> The information transmitted is intended only for the person or entity
> to which it is addressed and may contain confidential and/or privileged
> material. Any review, retransmission, dissemination or other use of, or
> taking of any action in reliance upon, this information by persons or
> entities other than the intended recipient is prohibited. If you
> received this in error, please contact the sender and delete the
> material from any computer.
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Wed Jul 13 12:57:29 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 13 Jul 2011 21:57:29 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
Message-ID: <4E1DF8A9.1070709@aol.com>

Hello,

I just want to access the attributes of INTEGER
and DIGIT - but how?

INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;

fragment
DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;


Thanks and greetings
Udo

From bkiers at gmail.com  Wed Jul 13 12:59:59 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 13 Jul 2011 21:59:59 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
In-Reply-To: <4E1DF8A9.1070709@aol.com>
References: <4E1DF8A9.1070709@aol.com>
Message-ID: <CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>

Try:

INTEGER
  :  DIGIT+ { print($text) }
  ;


Regards,

Bart.


On Wed, Jul 13, 2011 at 9:57 PM, Udo Weik <WeikEngOff at aol.com> wrote:

> Hello,
>
> I just want to access the attributes of INTEGER
> and DIGIT - but how?
>
> INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;
>
> fragment
> DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;
>
>
> Thanks and greetings
> Udo
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From WeikEngOff at aol.com  Wed Jul 13 13:18:01 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 13 Jul 2011 22:18:01 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
In-Reply-To: <CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>
References: <4E1DF8A9.1070709@aol.com>
	<CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>
Message-ID: <4E1DFD79.70609@aol.com>

Hello Bart and others,

yep, thanks, it works...

> Try:
>
>     INTEGER
>        :  DIGIT+ { print($text) }
>        ;

1. Why do I not need the name, here INTEGER, like $INTEGER.text?
2. With 12345 the result is
    L: (DIGIT): 1
    L: (DIGIT): 12
    L: (DIGIT): 123
    L: (DIGIT): 1234
    L: (DIGIT): 12345
    L: (INTEGER): 12345

    I expected
    L: (DIGIT): 1
    L: (DIGIT): 2
    L: (DIGIT): 3
    L: (DIGIT): 4
    L: (DIGIT): 5
    L: (INTEGER): 12345


Many thanks and greetings
Udo


> On Wed, Jul 13, 2011 at 9:57 PM, Udo Weik <WeikEngOff at aol.com <mailto:WeikEngOff at aol.com>> wrote:
>
>     Hello,
>
>     I just want to access the attributes of INTEGER
>     and DIGIT - but how?
>
>     INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;
>
>     fragment
>     DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;
>
>
>     Thanks and greetings
>     Udo


From bkiers at gmail.com  Wed Jul 13 13:21:08 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 13 Jul 2011 22:21:08 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
In-Reply-To: <4E1DFD79.70609@aol.com>
References: <4E1DF8A9.1070709@aol.com>
	<CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>
	<4E1DFD79.70609@aol.com>
Message-ID: <CAOrgODaJQ8weqGz_yq7uy8YYXCmUxKdQ6JPa=idKEHkHLB_Rgg@mail.gmail.com>

Hi Udo,

`$text` is just a shorthand notation for `$XYZ.text` where `XYZ` is the rule
you're currently in.

Regards,

Bart.


On Wed, Jul 13, 2011 at 10:18 PM, Udo Weik <WeikEngOff at aol.com> wrote:

> Hello Bart and others,
>
> yep, thanks, it works...
>
>
>  Try:
>>
>>    INTEGER
>>       :  DIGIT+ { print($text) }
>>       ;
>>
>
> 1. Why do I not need the name, here INTEGER, like $INTEGER.text?
> 2. With 12345 the result is
>   L: (DIGIT): 1
>   L: (DIGIT): 12
>   L: (DIGIT): 123
>   L: (DIGIT): 1234
>   L: (DIGIT): 12345
>   L: (INTEGER): 12345
>
>   I expected
>   L: (DIGIT): 1
>   L: (DIGIT): 2
>   L: (DIGIT): 3
>   L: (DIGIT): 4
>   L: (DIGIT): 5
>   L: (INTEGER): 12345
>
>
> Many thanks and greetings
> Udo
>
>
>
>  On Wed, Jul 13, 2011 at 9:57 PM, Udo Weik <WeikEngOff at aol.com <mailto:
>> WeikEngOff at aol.com>> wrote:
>>
>>    Hello,
>>
>>    I just want to access the attributes of INTEGER
>>    and DIGIT - but how?
>>
>>    INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;
>>
>>    fragment
>>    DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;
>>
>>
>>    Thanks and greetings
>>    Udo
>>
>
>

From bkiers at gmail.com  Wed Jul 13 13:23:05 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 13 Jul 2011 22:23:05 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
In-Reply-To: <4E1DFD79.70609@aol.com>
References: <4E1DF8A9.1070709@aol.com>
	<CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>
	<4E1DFD79.70609@aol.com>
Message-ID: <CAOrgODaMZf97pcGtjz7QnApiy6Axd1xwO6qiMkFOE-N20mZWrg@mail.gmail.com>

Oh, and since `DIGIT` is called from `INTEGER`, the `$text` from `DIGIT`
references `$INTEGER.text`.

Regards,

Bart.


On Wed, Jul 13, 2011 at 10:18 PM, Udo Weik <WeikEngOff at aol.com> wrote:

> Hello Bart and others,
>
> yep, thanks, it works...
>
>
>  Try:
>>
>>    INTEGER
>>       :  DIGIT+ { print($text) }
>>       ;
>>
>
> 1. Why do I not need the name, here INTEGER, like $INTEGER.text?
> 2. With 12345 the result is
>   L: (DIGIT): 1
>   L: (DIGIT): 12
>   L: (DIGIT): 123
>   L: (DIGIT): 1234
>   L: (DIGIT): 12345
>   L: (INTEGER): 12345
>
>   I expected
>   L: (DIGIT): 1
>   L: (DIGIT): 2
>   L: (DIGIT): 3
>   L: (DIGIT): 4
>   L: (DIGIT): 5
>   L: (INTEGER): 12345
>
>
> Many thanks and greetings
> Udo
>
>
>
>  On Wed, Jul 13, 2011 at 9:57 PM, Udo Weik <WeikEngOff at aol.com <mailto:
>> WeikEngOff at aol.com>> wrote:
>>
>>    Hello,
>>
>>    I just want to access the attributes of INTEGER
>>    and DIGIT - but how?
>>
>>    INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;
>>
>>    fragment
>>    DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;
>>
>>
>>    Thanks and greetings
>>    Udo
>>
>
>

From WeikEngOff at aol.com  Wed Jul 13 13:27:29 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 13 Jul 2011 22:27:29 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
In-Reply-To: <CAOrgODaJQ8weqGz_yq7uy8YYXCmUxKdQ6JPa=idKEHkHLB_Rgg@mail.gmail.com>
References: <4E1DF8A9.1070709@aol.com>
	<CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>
	<4E1DFD79.70609@aol.com>
	<CAOrgODaJQ8weqGz_yq7uy8YYXCmUxKdQ6JPa=idKEHkHLB_Rgg@mail.gmail.com>
Message-ID: <4E1DFFB1.9010301@aol.com>

Hello again Bart,

> `$text` is just a shorthand notation for `$XYZ.text` where `XYZ` is the rule you're currently in.

$INTEGER.text doesn't work ("rule INTEGER has no defined parameters"), but your $text does.
That's what I don't understand ;(.


Many thanks and greetings
Udo


> On Wed, Jul 13, 2011 at 10:18 PM, Udo Weik <WeikEngOff at aol.com <mailto:WeikEngOff at aol.com>> wrote:
>
>     Hello Bart and others,
>
>     yep, thanks, it works...
>
>
>         Try:
>
>             INTEGER
>                :  DIGIT+ { print($text) }
>                ;
>
>
>     1. Why do I not need the name, here INTEGER, like $INTEGER.text?
>     2. With 12345 the result is
>        L: (DIGIT): 1
>        L: (DIGIT): 12
>        L: (DIGIT): 123
>        L: (DIGIT): 1234
>        L: (DIGIT): 12345
>        L: (INTEGER): 12345
>
>        I expected
>        L: (DIGIT): 1
>        L: (DIGIT): 2
>        L: (DIGIT): 3
>        L: (DIGIT): 4
>        L: (DIGIT): 5
>        L: (INTEGER): 12345
>
>
>     Many thanks and greetings
>     Udo
>
>
>
>         On Wed, Jul 13, 2011 at 9:57 PM, Udo Weik <WeikEngOff at aol.com <mailto:WeikEngOff at aol.com> <mailto:WeikEngOff at aol.com <mailto:WeikEngOff at aol.com>>> wrote:
>
>             Hello,
>
>             I just want to access the attributes of INTEGER
>             and DIGIT - but how?
>
>             INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;
>
>             fragment
>             DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;
>
>
>             Thanks and greetings
>             Udo


From bkiers at gmail.com  Wed Jul 13 13:39:52 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 13 Jul 2011 22:39:52 +0200
Subject: [antlr-interest] ANTLR 3.1.2: Simplest action
In-Reply-To: <4E1DFFB1.9010301@aol.com>
References: <4E1DF8A9.1070709@aol.com>
	<CAOrgODZ=UuRyv9s+Ahjowurc7VzESpXCOoA4Ee8A3O39bJw+Tw@mail.gmail.com>
	<4E1DFD79.70609@aol.com>
	<CAOrgODaJQ8weqGz_yq7uy8YYXCmUxKdQ6JPa=idKEHkHLB_Rgg@mail.gmail.com>
	<4E1DFFB1.9010301@aol.com>
Message-ID: <CAOrgODaDDEm6d=Q=ytQ6o25th_JzqHzztBpcP_B134tE5NBuFw@mail.gmail.com>

Hi Udo,

Ah yes, apologies: you can only reference parser rules like that:

parserRule : LexerRule { print($parserRule.text) } ;


and *not*:

LexerRule : OtherLexerRule { print($LexerRule.text) } ;


Regards,

Bart.


On Wed, Jul 13, 2011 at 10:27 PM, Udo Weik <WeikEngOff at aol.com> wrote:

> Hello again Bart,
>
>
>  `$text` is just a shorthand notation for `$XYZ.text` where `XYZ` is the
>> rule you're currently in.
>>
>
> $INTEGER.text doesn't work ("rule INTEGER has no defined parameters"), but
> your $text does.
> That's what I don't understand ;(.
>
>
>
> Many thanks and greetings
> Udo
>
>
>  On Wed, Jul 13, 2011 at 10:18 PM, Udo Weik <WeikEngOff at aol.com <mailto:
>> WeikEngOff at aol.com>> wrote:
>>
>>    Hello Bart and others,
>>
>>    yep, thanks, it works...
>>
>>
>>        Try:
>>
>>            INTEGER
>>               :  DIGIT+ { print($text) }
>>               ;
>>
>>
>>    1. Why do I not need the name, here INTEGER, like $INTEGER.text?
>>    2. With 12345 the result is
>>       L: (DIGIT): 1
>>       L: (DIGIT): 12
>>       L: (DIGIT): 123
>>       L: (DIGIT): 1234
>>       L: (DIGIT): 12345
>>       L: (INTEGER): 12345
>>
>>       I expected
>>       L: (DIGIT): 1
>>       L: (DIGIT): 2
>>       L: (DIGIT): 3
>>       L: (DIGIT): 4
>>       L: (DIGIT): 5
>>       L: (INTEGER): 12345
>>
>>
>>    Many thanks and greetings
>>    Udo
>>
>>
>>
>>        On Wed, Jul 13, 2011 at 9:57 PM, Udo Weik <WeikEngOff at aol.com<mailto:
>> WeikEngOff at aol.com> <mailto:WeikEngOff at aol.com <mailto:WeikEngOff at aol.com>>>
>> wrote:
>>
>>            Hello,
>>
>>            I just want to access the attributes of INTEGER
>>            and DIGIT - but how?
>>
>>            INTEGER: DIGIT+ { print( "L: (INTEGER): " ) } ;
>>
>>            fragment
>>            DIGIT: '0'..'9' { print( "L: (DIGIT): " ) } ;
>>
>>
>>            Thanks and greetings
>>            Udo
>>
>
>

From Vijayvithal.Jahagirdar at lsi.com  Wed Jul 13 23:58:04 2011
From: Vijayvithal.Jahagirdar at lsi.com (Jahagirdar, Vijayvithal)
Date: Thu, 14 Jul 2011 12:28:04 +0530
Subject: [antlr-interest] Is there an updated version of the Whitespace
	article for antlr v3?
Message-ID: <B432995227B20D4E89F2C4918966BB47015B3BDE8F@inbmail01.lsi.com>

I am trying to extend an existing language which only has basic data types (int, float etc.) to support complex data types (similar to struct in C).
I was planning to execute the implementation in the following manner.

1.       Write the grammer   --- Done

2.       Write a null translator whose output will be the same as the input --- Using the article at " http://www.antlr.org/article/whitespace/index.html  Preserving whitespace during translation" for reference This was written for antler 2.x and does not work with antlr 3.x. Also the files referenced in the article are no longer distributed with antlr3. Can anyone help me by pointing an equivalent reference that works with antlr3....

3.       Perform a first pass over the code to identify all struct definitions and populate a list with the same.

4.       Perform a second pass to replace all struct variable declaration's and assignments with the normal data types.
Is my approach correct? Is there a better way?

e.g. consider
struct { int a, //declare a
float b //declare b
} xyz;
xyz foo,bar; //two vars
foo.a=bar.a; //assignment
foo=bar;//another variation
f(bar);

I am planning to translate this to

//two vars
int foo_a; //declare a
float foo_b; //declare b
//two vars
int bar_a; //declare a
int bar_b; //declare b
foo_a=bar_a; //assignment

foo_a=bar_a;// another variation a
foo_b=bar_b; // another variation b
f(bar_a,bar_b)
Regards
Vijay


From xpwithme at 163.com  Thu Jul 14 03:05:18 2011
From: xpwithme at 163.com (=?UTF-8?Q?yue=C2=A0xin?=)
Date: Thu, 14 Jul 2011 18:05:18 +0800 (CST)
Subject: [antlr-interest] explation
Message-ID: <12864c1.cd4f.131281b885c.Coremail.xpwithme@163.com>

A non-text attachment was scrubbed...
Name: {_J8SU$VAZ7)USI]YH)9KJP.jpg
Type: image/jpeg
Size: 28584 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110714/6cfc83fe/attachment.jpg 

From sebastien.kirche at gmail.com  Thu Jul 14 04:34:31 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 14 Jul 2011 13:34:31 +0200
Subject: [antlr-interest] changes between 3.2 and 3.3 that brake a 3.2
	tutorial
Message-ID: <CALGPt8ZOxassYJUkCVuRwpadaUqRqDndcNsvT=d3Q=_+5HUqpA@mail.gmail.com>

Hi,

I am currently playing with the antlr-3.3-complete.jar package.
While trying to fix a lexer token priority problem in my grammar, I
tried to test the token listing method described in the (very useful
!) posts from Bart Kiers about its tutorial with the TL language.

My problem is that his method applied on my grammar outputs nothing.
I banged my head against my desk for a while for looking what I did
wrong with reusing Bart's code, until I tested his code and example
as-is and found that it outputs nothing too...
As the TL tutorial is build with antlr 3.2, I tried to recompile with
3.2 instead of 3.3 and then it is working as expected  o_O

I cannot find in the 3.3 releases notes
(http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes)
what causes that behavior difference between 3.2 and 3.3.

The specific code from Bart Kiers I have tried is from the post at
http://bkiers.blogspot.com/2011/03/3-lexical-analysis-of-tl.html

Thanks.
-- 
S?bastien Kirche

From bkiers at gmail.com  Thu Jul 14 05:10:25 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 14 Jul 2011 14:10:25 +0200
Subject: [antlr-interest] changes between 3.2 and 3.3 that brake a 3.2
	tutorial
In-Reply-To: <CALGPt8ZOxassYJUkCVuRwpadaUqRqDndcNsvT=d3Q=_+5HUqpA@mail.gmail.com>
References: <CALGPt8ZOxassYJUkCVuRwpadaUqRqDndcNsvT=d3Q=_+5HUqpA@mail.gmail.com>
Message-ID: <CAOrgODbovEZvnFuV1mmeDcdHsOvFdZpizZg3t-jGQ+FG8iiwwg@mail.gmail.com>

Hi S?bastien,

Thanks!

Hmm, that is odd. If I change the parse rule into:

parse
  :  (t=. {System.out.printf("text: \%-7s  type: \%s \n", $t.text,
tokenNames[$t.type]);})* EOF
  ;


and the Main class into:

import org.antlr.runtime.*;


public class Main {
  public static void main(String[] args) throws Exception {
    TLLexer lexer = new TLLexer(new ANTLRFileStream(args[0]));
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    TLParser parser = new TLParser(tokens);
    parser.parse();
  }
}


the expected output _is_ printed to the console.

Not sure why for(Object o : tokens.getTokens()) doesn't work... Will have a
look later on.

Regards,

Bart.


2011/7/14 S?bastien Kirche <sebastien.kirche at gmail.com>

> Hi,
>
> I am currently playing with the antlr-3.3-complete.jar package.
> While trying to fix a lexer token priority problem in my grammar, I
> tried to test the token listing method described in the (very useful
> !) posts from Bart Kiers about its tutorial with the TL language.
>
> My problem is that his method applied on my grammar outputs nothing.
> I banged my head against my desk for a while for looking what I did
> wrong with reusing Bart's code, until I tested his code and example
> as-is and found that it outputs nothing too...
> As the TL tutorial is build with antlr 3.2, I tried to recompile with
> 3.2 instead of 3.3 and then it is working as expected  o_O
>
> I cannot find in the 3.3 releases notes
> (http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.3+Release+Notes)
> what causes that behavior difference between 3.2 and 3.3.
>
> The specific code from Bart Kiers I have tried is from the post at
> http://bkiers.blogspot.com/2011/03/3-lexical-analysis-of-tl.html
>
> Thanks.
> --
> S?bastien Kirche
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sebastien.kirche at gmail.com  Thu Jul 14 09:03:22 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 14 Jul 2011 18:03:22 +0200
Subject: [antlr-interest] proper way to handle case insensitive syntax
Message-ID: <CALGPt8arHmAsdNF39Vg8t7r59B6-mP5S8fzuZUz35F2MP7NhcA@mail.gmail.com>

Hi,

thanks to the token listing tip, I have found that my problem with
lexer was not token priority but case-sensitivity.
Indeed, PBScript syntax is case insensitive.

Looking in the antlr faq
(http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782), I have
fixed my problem with rewriting my tokens like that :

//Types
Any : A N Y ;
Blob : B L O B ;
Boolean : B O O L E A N ;
...
fragment A:('a'|'A');
fragment B:('b'|'B');
fragment C:('c'|'C');
...
fragment Z:('z'|'Z');

One point I am wondering, is that the same faq solution warns about
performance when a lot of fragments are used.
Considering that in PBScript everything except string literals is case
insensitive, is is still the way to handle case insensitivity ?
In case of the target language is to take into account, I am
prototyping the grammar with java, and when I will get something
functional, I plan to make also a C parser for that language.

Regards.
-- 
S?bastien Kirche

From sebastien.kirche at gmail.com  Thu Jul 14 09:18:34 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 14 Jul 2011 18:18:34 +0200
Subject: [antlr-interest] performance and token declaration order
Message-ID: <CALGPt8aT6jRcAEMOs+84A-6TLJ7a97uK8djaK81zKMRK_kc93g@mail.gmail.com>

Hi,

considering that the tokens are processed by the parser in the order
they are listed in the grammar, and looking at the generated code,
does it make sense to list the alternatives in the order of higher to
lower frequency ?

For example, considering the following rule :
dataType
	: Any
	| Blob
	| Boolean
	| Byte
	| Char
	| DateTime
	| Date
	| Dec
	| Double
	| Int
	| LongLong
	| Long
	| Real
	| String
	| Time
	| UInt
	| ULong ;

I have put the different types in the order they are listed in the
language help file. But while knowing that I have far more longs,
integers and strings than bytes or dates (and theoretically no Reals
for example), should I move the most used types at the beginning ? I
did not found an answer in the FAQ yet.

Regards.
-- 
S?bastien Kirche

From jimi at temporal-wave.com  Thu Jul 14 09:34:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jul 2011 09:34:10 -0700
Subject: [antlr-interest] proper way to handle case insensitive syntax
In-Reply-To: <CALGPt8arHmAsdNF39Vg8t7r59B6-mP5S8fzuZUz35F2MP7NhcA@mail.gmail.com>
References: <CALGPt8arHmAsdNF39Vg8t7r59B6-mP5S8fzuZUz35F2MP7NhcA@mail.gmail.com>
Message-ID: <fa0fe95fc5e8c0f300e71eae4250a796@mail.gmail.com>

I would not use that method. Override the LA() and make it return upper
case only, then specify the keywords in upper case. Then you reduce the
complexity of the keyword match greatly and remove lots of fragment method
calls. If you are using the C target with only standard ASCII keywords,
then there is a built in method to use upper case matching in the LA
function.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of S?bastien Kirche
> Sent: Thursday, July 14, 2011 9:03 AM
> To: antlr-interest
> Subject: [antlr-interest] proper way to handle case insensitive syntax
>
> Hi,
>
> thanks to the token listing tip, I have found that my problem with
> lexer was not token priority but case-sensitivity.
> Indeed, PBScript syntax is case insensitive.
>
> Looking in the antlr faq
> (http://www.antlr.org/wiki/pages/viewpage.action?pageId=1782), I have
> fixed my problem with rewriting my tokens like that :
>
> //Types
> Any : A N Y ;
> Blob : B L O B ;
> Boolean : B O O L E A N ;
> ...
> fragment A:('a'|'A');
> fragment B:('b'|'B');
> fragment C:('c'|'C');
> ...
> fragment Z:('z'|'Z');
>
> One point I am wondering, is that the same faq solution warns about
> performance when a lot of fragments are used.
> Considering that in PBScript everything except string literals is case
> insensitive, is is still the way to handle case insensitivity ?
> In case of the target language is to take into account, I am
> prototyping the grammar with java, and when I will get something
> functional, I plan to make also a C parser for that language.
>
> Regards.
> --
> S?bastien Kirche
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Jul 14 09:45:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 14 Jul 2011 09:45:21 -0700
Subject: [antlr-interest] performance and token declaration order
In-Reply-To: <CALGPt8aT6jRcAEMOs+84A-6TLJ7a97uK8djaK81zKMRK_kc93g@mail.gmail.com>
References: <CALGPt8aT6jRcAEMOs+84A-6TLJ7a97uK8djaK81zKMRK_kc93g@mail.gmail.com>
Message-ID: <7ee0be4b9e00da7654ce9087c6a0cec1@mail.gmail.com>

The only effect that grouping has is in the lexer itself when you find
that you can declare tokens that will be matched in the parser as a set in
a contiguous block in the lexer, which will assign contiguous token
numbers to them. This means that the parser match is much simpler code.
So, in the code below, then parser rule order does not matter, but if you
declare them in a block in the lexer, then the parser will be looking for
a contiguous range and the resulting code will be a simple range check or
an optimal switch, etc.

The most obvious example is to list reserved words in a block followed by
keywords (language words that can also be used as identifier names). Then
you can use a parser rule like this:

id: ID | KEY1 | KEY2 ...

And lexer rules:

// Reserved
//
RES1 : 'RES1';
...

// Keywords
//
KEY1 : 'KEY1' ;
KEY2 : 'KEY2' ;
...

ID : ('A'..'Z')+;  // ID after keywords means that that is contiguous.


You can also keep the token numbers contiguous by using your own
tokenVocab file of course.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of S?bastien Kirche
> Sent: Thursday, July 14, 2011 9:19 AM
> To: antlr-interest
> Subject: [antlr-interest] performance and token declaration order
>
> Hi,
>
> considering that the tokens are processed by the parser in the order
> they are listed in the grammar, and looking at the generated code, does
> it make sense to list the alternatives in the order of higher to lower
> frequency ?
>
> For example, considering the following rule :
> dataType
> 	: Any
> 	| Blob
> 	| Boolean
> 	| Byte
> 	| Char
> 	| DateTime
> 	| Date
> 	| Dec
> 	| Double
> 	| Int
> 	| LongLong
> 	| Long
> 	| Real
> 	| String
> 	| Time
> 	| UInt
> 	| ULong ;
>
> I have put the different types in the order they are listed in the
> language help file. But while knowing that I have far more longs,
> integers and strings than bytes or dates (and theoretically no Reals
> for example), should I move the most used types at the beginning ? I
> did not found an answer in the FAQ yet.
>
> Regards.
> --
> S?bastien Kirche
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sebastien.kirche at gmail.com  Thu Jul 14 10:05:04 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 14 Jul 2011 19:05:04 +0200
Subject: [antlr-interest] proper way to handle case insensitive syntax
In-Reply-To: <fa0fe95fc5e8c0f300e71eae4250a796@mail.gmail.com>
References: <CALGPt8arHmAsdNF39Vg8t7r59B6-mP5S8fzuZUz35F2MP7NhcA@mail.gmail.com>
	<fa0fe95fc5e8c0f300e71eae4250a796@mail.gmail.com>
Message-ID: <CALGPt8ZkZx=txYVUvOfSU8F1qpfy8mB0PMsX_=OB0FUezarpmQ@mail.gmail.com>

Hi Jim,

It was the other solution that is given in the FAQ, but I did not used
it at first, because it looked less easy to use in the grammar.
I have just implemented it and checked that my grammar still work :o)

Thanks for the explanation.

2011/7/14 Jim Idle <jimi at temporal-wave.com>:
> I would not use that method. Override the LA() and make it return upper
> case only, then specify the keywords in upper case. Then you reduce the
> complexity of the keyword match greatly and remove lots of fragment method
> calls. If you are using the C target with only standard ASCII keywords,
> then there is a built in method to use upper case matching in the LA
> function.
>
> Jim

-- 
S?bastien Kirche

From barry.mcgillin at oracle.com  Thu Jul 14 12:00:27 2011
From: barry.mcgillin at oracle.com (barry.mcgillin at oracle.com)
Date: Thu, 14 Jul 2011 12:00:27 -0700 (PDT)
Subject: [antlr-interest] Auto Reply: antlr-interest Digest, Vol 80, Issue 14
Message-ID: <3a207e76-0d49-4aa9-b6d5-17a42708fc21@default>

Hi, 
I am vacation returning July 29th 2011.  
For SQL Developer  issues, contact  Kris kris.rice at oracle.com. 
For Migration issues, contact Dermot O'Neill or Srinivasan Pitchai
Alternatively I'll get back to you on my return.
Many Thanks,
Barry

From antlrmen at yahoo.com  Thu Jul 14 16:11:49 2011
From: antlrmen at yahoo.com (Roy Metzger)
Date: Thu, 14 Jul 2011 16:11:49 -0700 (PDT)
Subject: [antlr-interest] turning rules on/off?
Message-ID: <1310685109.35677.YahooMailNeo@web121105.mail.ne1.yahoo.com>

Hi all,

Let's say I have something like this:

rule: ( 'stuff' e1=expression)?
statement
('stuff' e2=expression)? ;

Now, I would like to know is there a way to dynamically flip rules on/off. For example, when
e1 is present e2 is not, and when e2 exists, e1 does not. 


Based on my research I found that predicates may be of help to me(of course, aside from refactoring), but 

I'm really not sure how to use them, as I'm still very new to antlr.


Could something like this work:
rule
@init{boolean b=false;}: 

( 'stuff' e1=expression{b=true;})??? {b}?=>expression
statement
( 'stuff' e2=expression{b=false;})??? {!b}?=>expression

I would really appreciate if some of more experienced users would give me hints on this one.

Thanks for any help

From jbb at acm.org  Thu Jul 14 16:33:01 2011
From: jbb at acm.org (John B. Brodie)
Date: Thu, 14 Jul 2011 19:33:01 -0400
Subject: [antlr-interest] turning rules on/off?
In-Reply-To: <1310685109.35677.YahooMailNeo@web121105.mail.ne1.yahoo.com>
References: <1310685109.35677.YahooMailNeo@web121105.mail.ne1.yahoo.com>
Message-ID: <1310686381.4775.2.camel@gecko>

Greetings!

On Thu, 2011-07-14 at 16:11 -0700, Roy Metzger wrote:
> Hi all,
> 
> Let's say I have something like this:
> 
> rule: ( 'stuff' e1=expression)?
> statement
> ('stuff' e2=expression)? ;
> 
> Now, I would like to know is there a way to dynamically flip rules on/off. For example, when
> e1 is present e2 is not, and when e2 exists, e1 does not. 
> 

I probably do not actually understand your question. But perhaps you do
not really need predicates...

rule :
    ( 'stuff' expression statement ) 
  | ( statement 'stuff' expression )
  ;

> 
> Based on my research I found that predicates may be of help to me(of course, aside from refactoring), but 
> 
> I'm really not sure how to use them, as I'm still very new to antlr.
> 
> 
> Could something like this work:
> rule
> @init{boolean b=false;}: 
> 
> ( 'stuff' e1=expression{b=true;})?   {b}?=>expression
> statement
> ( 'stuff' e2=expression{b=false;})?   {!b}?=>expression
> 
> I would really appreciate if some of more experienced users would give me hints on this one.
> 
> Thanks for any help
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From anteusz at freemail.hu  Fri Jul 15 03:56:21 2011
From: anteusz at freemail.hu (anteusz at freemail.hu)
Date: Fri, 15 Jul 2011 13:56:21 +0300
Subject: [antlr-interest] Hi! about making a target for ANTLR
Message-ID: <4E201CD5.5090200@freemail.hu>

Hi,

If I made a target for ANTLR, and I am done with it. WHat should I do next?



Regards

M?rton Papp



From parrt at cs.usfca.edu  Fri Jul 15 10:55:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 15 Jul 2011 10:55:05 -0700
Subject: [antlr-interest] Hi! about making a target for ANTLR
In-Reply-To: <4E201CD5.5090200@freemail.hu>
References: <4E201CD5.5090200@freemail.hu>
Message-ID: <5EB97623-28B8-471E-8735-50C11379A60B@cs.usfca.edu>

for what language?
Ter
On Jul 15, 2011, at 3:56 AM, anteusz at freemail.hu wrote:

> Hi,
> 
> If I made a target for ANTLR, and I am done with it. WHat should I do next?
> 
> 
> 
> Regards
> 
> M?rton Papp
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From zibranm at hotmail.com  Fri Jul 15 11:03:18 2011
From: zibranm at hotmail.com (Minhaz Zibran)
Date: Sat, 16 Jul 2011 05:03:18 +1100
Subject: [antlr-interest] Cannot display rule "X" because start state not
	found
Message-ID: <BAY148-W12095DD7BF14513963956AE490@phx.gbl>



    

        



    


          
    
        I am trying to learn ANTLR. I tried to invoke ANTLR v3.3 from
 command line (java -cp antlr-3.3-complete.jar org.antlr.Tool T.g) on 
the T.g, and found the following error message: 




  error(10):  internal error: Exception T.g:5:64: unexpected char: 
'e'@org.antlr.grammar.v2.ANTLRLexer.nextToken(ANTLRLexer.java:346): 
unexpected stream error from parsing T.g



When I open T.g in AntlrWorks 1.4.2 and select any rule I get the following error message:



  Cannot display rule "X" because start state not found



However, the content of T.g is taken from page 29 of the book "The 
Definite ANTLR Reference: Building Domain specific Languages, by Terence
 Parr, 2007". T.g simply contains the following:



  grammar T;
  
  /** Match things like "call foo;" */
  
  r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
  
  ID: 'a'..'z'+ ;
  
  WS: (' '|'\n'|'\r')+   {$channel=HIDDEN;} ; // ignore whitespace



My Question is, how can I resolve this issue, and what is start state?

     		 	   		  

From dejas9000 at gmail.com  Fri Jul 15 11:47:10 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Fri, 15 Jul 2011 13:47:10 -0500
Subject: [antlr-interest] Action body losing literal in translation?
Message-ID: <CAEAw34P1DQpo9d-XUHNjAeeUztZyjbBEek4e73fWJYN3wWfm0Q@mail.gmail.com>

Hi,

I have a production that looks like this:

subtree : descendant_list network_info { stack.pushSubtree(true); }
                  | network_info { stack.pushSubtree(false); };


but when I examine the generate java code the boolean literals seem to be
missing.  Any thoughts on why?

  case 1 :
                    // C:\\Users\\Matt\\Desktop\\ExtendedNewick.g:22:11:
descendant_list network_info
                    {
                    pushFollow(FOLLOW_descendant_list_in_subtree74);
                    descendant_list();

                    state._fsp--;

                    pushFollow(FOLLOW_network_info_in_subtree76);
                    network_info();

                    state._fsp--;

                    * stack.pushSubtree(); *

                    }
                    break;
                case 2 :
                    // C:\\Users\\Matt\\Desktop\\ExtendedNewick.g:23:11:
network_info
                    {
                    pushFollow(FOLLOW_network_info_in_subtree90);
                    network_info();

                    state._fsp--;

                   *  stack.pushSubtree(); *

                    }
                    break;

            }

From jbb at acm.org  Fri Jul 15 11:56:01 2011
From: jbb at acm.org (John B. Brodie)
Date: Fri, 15 Jul 2011 14:56:01 -0400
Subject: [antlr-interest] Cannot display rule "X" because start state
 not found
In-Reply-To: <BAY148-W12095DD7BF14513963956AE490@phx.gbl>
References: <BAY148-W12095DD7BF14513963956AE490@phx.gbl>
Message-ID: <1310756161.27200.6.camel@gecko>

Greetings!
On Sat, 2011-07-16 at 05:03 +1100, Minhaz Zibran wrote:
>     
>         I am trying to learn ANTLR. I tried to invoke ANTLR v3.3 from
>  command line (java -cp antlr-3.3-complete.jar org.antlr.Tool T.g) on 
> the T.g, and found the following error message: 
> 
> 
> 
> 
>   error(10):  internal error: Exception T.g:5:64: unexpected char: 

the "T.g:5:64" portion of the error message is the location of the error
and means line 5 of file T.g in the 64th character position of that
line.

assuming that your T.g does not have blank lines between the rules, line
5 char 64 would be the very last character of the file (e.g. the last e
in whitespace).

does your file have a new-line as the very last character?

(i am speculating that you do not have a final new-line and that ANTLR
needs a new-line in order to mark the end of the "//" comment on your
last line).

i do not use ANTLRWorks, so can not speak to that issue, sorry.

hope this helps....
   -jbb

(ps and, oh, by the way, I was unable to reproduce this error --- both
with and without final new-line --- using Ubuntu 11.04, Sun Java 6 and
the antlr-3.4-complete.jar file....)

> 'e'@org.antlr.grammar.v2.ANTLRLexer.nextToken(ANTLRLexer.java:346): 
> unexpected stream error from parsing T.g
> 
> 
> 
> When I open T.g in AntlrWorks 1.4.2 and select any rule I get the following error message:
> 
> 
> 
>   Cannot display rule "X" because start state not found
> 
> 
> 
> However, the content of T.g is taken from page 29 of the book "The 
> Definite ANTLR Reference: Building Domain specific Languages, by Terence
>  Parr, 2007". T.g simply contains the following:
> 
> 
> 
>   grammar T;
>   
>   /** Match things like "call foo;" */
>   
>   r : 'call' ID ';' {System.out.println("invoke "+$ID.text);} ;
>   
>   ID: 'a'..'z'+ ;
>   
>   WS: (' '|'\n'|'\r')+   {$channel=HIDDEN;} ; // ignore whitespace
> 
> 
> 
> My Question is, how can I resolve this issue, and what is start state?
> 
>      		 	   		  
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From jimi at temporal-wave.com  Fri Jul 15 21:22:12 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 15 Jul 2011 21:22:12 -0700
Subject: [antlr-interest] turning rules on/off?
In-Reply-To: <1310685109.35677.YahooMailNeo@web121105.mail.ne1.yahoo.com>
References: <1310685109.35677.YahooMailNeo@web121105.mail.ne1.yahoo.com>
Message-ID: <18a53e21fc9b94f5c2ff4fec981ec6c7@mail.gmail.com>

You want gated semantic predicates to turn on rules. However, that is the
wrong approach in this case. You should accept and parse both sides even
though only one is legal, then reject the code with a semantic error
rather than a syntax error, which would confuse the user.  You get "cannot
both precede and follow a dfdd with a gffgfgf" instead of "Unexpected
'gffgfgf'"

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Roy Metzger
> Sent: Thursday, July 14, 2011 4:12 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] turning rules on/off?
>
> Hi all,
>
> Let's say I have something like this:
>
> rule: ( 'stuff' e1=expression)?
> statement
> ('stuff' e2=expression)? ;
>
> Now, I would like to know is there a way to dynamically flip rules
> on/off. For example, when
> e1 is present e2 is not, and when e2 exists, e1 does not.
>
>
> Based on my research I found that predicates may be of help to me(of
> course, aside from refactoring), but
>
> I'm really not sure how to use them, as I'm still very new to antlr.
>
>
> Could something like this work:
> rule
> @init{boolean b=false;}:
>
> ( 'stuff' e1=expression{b=true;})??? {b}?=>expression statement (
> 'stuff' e2=expression{b=false;})??? {!b}?=>expression
>
> I would really appreciate if some of more experienced users would give
> me hints on this one.
>
> Thanks for any help
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gautham5678 at gmail.com  Sat Jul 16 05:56:53 2011
From: gautham5678 at gmail.com (Gautam)
Date: Sat, 16 Jul 2011 18:26:53 +0530
Subject: [antlr-interest] Converting AST to Byte code
Message-ID: <CAEopHmcAgwUE7MLzLNKzbEbTuZP5m2e1eKxkdwhkxvqh06Xxag@mail.gmail.com>

I am trying to learn to build a simple compiler as a hobby , I
am targeting the Java Virtual machine .

I have written a simple grammar using AntLr plugin for Eclipse .

Some one told me that there is something known as a method node on the AST
generated by Antlr , and that has to be called .
I am planning to use ASM to generate the bytecode .
So what is the method node and How do I call it from ASM and make it visit
method instructions ?

Also what about the semantic Analyser of a Compiler , should that be
manually written or are there any generators for it ?

From gautham5678 at gmail.com  Sat Jul 16 06:28:39 2011
From: gautham5678 at gmail.com (Gautam)
Date: Sat, 16 Jul 2011 18:58:39 +0530
Subject: [antlr-interest] Converting AST to Byte code
In-Reply-To: <CAEopHmcAgwUE7MLzLNKzbEbTuZP5m2e1eKxkdwhkxvqh06Xxag@mail.gmail.com>
References: <CAEopHmcAgwUE7MLzLNKzbEbTuZP5m2e1eKxkdwhkxvqh06Xxag@mail.gmail.com>
Message-ID: <CAEopHmdGoss=LzorcZ_H2YMGzxUG5nfp-P2=FPCfi4VOgwUyRg@mail.gmail.com>

I am trying to learn to build a simple compiler as a hobby , I
am targeting the Java Virtual machine .

I have written a simple grammar using AntLr plugin for Eclipse .

Some one told me that there is something known as a method node on the AST
generated by Antlr , and that has to be called .
I am planning to use ASM to generate the bytecode .
So what is the method node and How do I call it from ASM and make it visit
method instructions ?

Also what about the semantic Analyser of a Compiler , should that be
manually written or are there any generators for it ?

From douglasgodfrey at gmail.com  Sat Jul 16 08:12:35 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Sat, 16 Jul 2011 11:12:35 -0400
Subject: [antlr-interest] Hi! about making a target for ANTLR
In-Reply-To: <5EB97623-28B8-471E-8735-50C11379A60B@cs.usfca.edu>
References: <4E201CD5.5090200@freemail.hu>
	<5EB97623-28B8-471E-8735-50C11379A60B@cs.usfca.edu>
Message-ID: <CAMk-oS3W_KGsx0kkT5+hXHDFn_S9+=P8FU9qR02BMH46vdVSPA@mail.gmail.com>

How about a generalized Antlr Target builder based on a TreeParser grammar
that processes the AST generated by Antlr that uses String Templates to emit

the source code for the target language. The task of building a new target
then
is reduced to completing the String Template productions and implementing
the
Antlr classes for the target language.

On Fri, Jul 15, 2011 at 1:55 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> for what language?
> Ter
> On Jul 15, 2011, at 3:56 AM, anteusz at freemail.hu wrote:
>
> > Hi,
> >
> > If I made a target for ANTLR, and I am done with it. WHat should I do
> next?
> >
> >
> >
> > Regards
> >
> > M?rton Papp
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Sat Jul 16 09:11:16 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 16 Jul 2011 11:11:16 -0500
Subject: [antlr-interest] Hi! about making a target for ANTLR
In-Reply-To: <CAMk-oS3W_KGsx0kkT5+hXHDFn_S9+=P8FU9qR02BMH46vdVSPA@mail.gmail.com>
References: <4E201CD5.5090200@freemail.hu>	<5EB97623-28B8-471E-8735-50C11379A60B@cs.usfca.edu>
	<CAMk-oS3W_KGsx0kkT5+hXHDFn_S9+=P8FU9qR02BMH46vdVSPA@mail.gmail.com>
Message-ID: <04bb01cc43d2$fe72eec0$fb58cc40$@pixelminegames.com>

That's what it does now...?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Douglas Godfrey
Sent: Saturday, July 16, 2011 10:13 AM
To: Terence Parr
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Hi! about making a target for ANTLR

How about a generalized Antlr Target builder based on a TreeParser grammar
that processes the AST generated by Antlr that uses String Templates to emit

the source code for the target language. The task of building a new target
then is reduced to completing the String Template productions and
implementing the Antlr classes for the target language.

On Fri, Jul 15, 2011 at 1:55 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> for what language?
> Ter
> On Jul 15, 2011, at 3:56 AM, anteusz at freemail.hu wrote:
>
> > Hi,
> >
> > If I made a target for ANTLR, and I am done with it. WHat should I 
> > do
> next?
> >
> >
> >
> > Regards
> >
> > M?rton Papp
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Sat Jul 16 11:48:49 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Jul 2011 11:48:49 -0700
Subject: [antlr-interest] Hi! about making a target for ANTLR
In-Reply-To: <CAMk-oS3W_KGsx0kkT5+hXHDFn_S9+=P8FU9qR02BMH46vdVSPA@mail.gmail.com>
References: <4E201CD5.5090200@freemail.hu>	<5EB97623-28B8-471E-8735-50C11379A60B@cs.usfca.edu>
	<CAMk-oS3W_KGsx0kkT5+hXHDFn_S9+=P8FU9qR02BMH46vdVSPA@mail.gmail.com>
Message-ID: <3ac3ed03b80bda294134aae221dc3203@mail.gmail.com>

How is this any different from what we do now?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Douglas Godfrey
> Sent: Saturday, July 16, 2011 8:13 AM
> To: Terence Parr
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Hi! about making a target for ANTLR
>
> How about a generalized Antlr Target builder based on a TreeParser
> grammar that processes the AST generated by Antlr that uses String
> Templates to emit
>
> the source code for the target language. The task of building a new
> target then is reduced to completing the String Template productions
> and implementing the Antlr classes for the target language.
>
> On Fri, Jul 15, 2011 at 1:55 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
>
> > for what language?
> > Ter
> > On Jul 15, 2011, at 3:56 AM, anteusz at freemail.hu wrote:
> >
> > > Hi,
> > >
> > > If I made a target for ANTLR, and I am done with it. WHat should I
> > > do
> > next?
> > >
> > >
> > >
> > > Regards
> > >
> > > M?rton Papp
> > >
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Sat Jul 16 12:24:02 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Sat, 16 Jul 2011 21:24:02 +0200
Subject: [antlr-interest] (Repost) C-Runtime: Getting started
Message-ID: <4E21E552.2070503@aol.com>

Hello all,

I'm looking for a really simple "Hello World"-example for getting
started with the C-Runtime.
After my problems with C++Builder I decided to install VC++ 2010
Express. The simplest example I found is the simpleCTreeParser,
from my point of view of course too complex for a beginner.
Anyway, I tried to get it running. First, I opened simplecTreeParser.vcproj
which resulted in an update of all projects (voodoo, named "Solution").
Then I was able to generate the code files for the lexer/parser
(SimpleCLexer.* and SimpleCWalker.*) and I added all C-Runtime Header
and Source files directly to the project (in directories/"Filters"
ANTLR/Header Files and ANTLR/Source files). Thanks to Jacqueline Russell's
video(*) I was able to display the line numbers in the source editor.
In main.c line 112 (is) was the first problem:
   pSimpleCWalker		    treePsr;
pSimpleCWalker was underlined red, I'm writing was. Just moved the window
to an other monitor. Problem solved.
But I'm getting a bunch of errors like
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
   error MSB4018: The "Antlr3ParserLexer" task failed unexpectedly.
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
   error MSB4018: System.IndexOutOfRangeException: Index was outside the bounds of the array.
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5)
   error MSB4018: at Microsoft.Build.Tasks.Xaml.CommandLineGenerator.PerformSwitchValueSubstition( CommandLineBuilder clb, ... )
...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
   error MSB4018: at Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitStringSwitch(CommandLineBuilder clb, ... )
and 9 more.

I don't know how I can solve that problem, so I ask for your
support.


@Jim - I will write a comprehensive documentation for you...

Many thanks in advance
Udo


(*) Jacqueline is/was a MS product manager for the VC++ 20xy Express
edition.
When I start VC++ 2010 Express and want to open the "Getting Started"
www-pages, VC++ 2010 Express crashes. I captured the screen, OCRed
the link and opened the page with Firefox. In Firefox, the Silverlight-
plugin crashed. Luckily it was possible to download the video. (BTW,
IE is crashing immediately after pasting the link).
OFF TOPIC: How do you handle that daily madness?
When you are interested what's my main problem with MS at the moment, send
me a PM. Be warned, it can be yours tomorrow.

From jimi at temporal-wave.com  Sat Jul 16 12:38:59 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 16 Jul 2011 12:38:59 -0700
Subject: [antlr-interest] (Repost) C-Runtime: Getting started
In-Reply-To: <4E21E552.2070503@aol.com>
References: <4E21E552.2070503@aol.com>
Message-ID: <c51b863c2ae87f844a60eb390e3e375d@mail.gmail.com>

Visual Studio 2010 requires a plugin to deal with the C target as it is no
longer driven by simple rules. You should have been given an error on the
conversion telling you this. You will need to use VS2008. I am hoping to
look in to a plugin in due course.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Saturday, July 16, 2011 12:24 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] (Repost) C-Runtime: Getting started
>
> Hello all,
>
> I'm looking for a really simple "Hello World"-example for getting
> started with the C-Runtime.
> After my problems with C++Builder I decided to install VC++ 2010
> Express. The simplest example I found is the simpleCTreeParser, from my
> point of view of course too complex for a beginner.
> Anyway, I tried to get it running. First, I opened
> simplecTreeParser.vcproj which resulted in an update of all projects
> (voodoo, named "Solution").
> Then I was able to generate the code files for the lexer/parser
> (SimpleCLexer.* and SimpleCWalker.*) and I added all C-Runtime Header
> and Source files directly to the project (in directories/"Filters"
> ANTLR/Header Files and ANTLR/Source files). Thanks to Jacqueline
> Russell's
> video(*) I was able to display the line numbers in the source editor.
> In main.c line 112 (is) was the first problem:
>    pSimpleCWalker		    treePsr;
> pSimpleCWalker was underlined red, I'm writing was. Just moved the
> window to an other monitor. Problem solved.
> But I'm getting a bunch of errors like
> ...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
>    error MSB4018: The "Antlr3ParserLexer" task failed unexpectedly.
> ...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
>    error MSB4018: System.IndexOutOfRangeException: Index was outside
> the bounds of the array.
> ...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5)
>    error MSB4018: at
> Microsoft.Build.Tasks.Xaml.CommandLineGenerator.PerformSwitchValueSubst
> ition( CommandLineBuilder clb, ... )
> ...\examples-v3\C\vsrulefiles\antlr3lexerandparser.targets(45,5):
>    error MSB4018: at
> Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitStringSwitch(Comman
> dLineBuilder clb, ... ) and 9 more.
>
> I don't know how I can solve that problem, so I ask for your support.
>
>
> @Jim - I will write a comprehensive documentation for you...
>
> Many thanks in advance
> Udo
>
>
> (*) Jacqueline is/was a MS product manager for the VC++ 20xy Express
> edition.
> When I start VC++ 2010 Express and want to open the "Getting Started"
> www-pages, VC++ 2010 Express crashes. I captured the screen, OCRed the
> link and opened the page with Firefox. In Firefox, the Silverlight-
> plugin crashed. Luckily it was possible to download the video. (BTW, IE
> is crashing immediately after pasting the link).
> OFF TOPIC: How do you handle that daily madness?
> When you are interested what's my main problem with MS at the moment,
> send me a PM. Be warned, it can be yours tomorrow.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From webmaster at altertoby.de  Sat Jul 16 15:13:55 2011
From: webmaster at altertoby.de (Tobias Diez)
Date: Sun, 17 Jul 2011 00:13:55 +0200
Subject: [antlr-interest] Bug? How to get tree rewriting with patterns
	working in v.3.3, Charp3
Message-ID: <001301cc4405$a7ebde80$f7c39b80$@altertoby.de>

Hi,

I try to get the "tree rewriting with patterns" working in ANTLR 3.3.1.7705
(target language: CSharp 3).
I used the following code, which is a little-modified version of an example
from
http://www.antlr.org/wiki/display/~admin/2008/11/30/Example+tree+rewriting+w
ith+patterns.

tree grammar TreeWalker;

options {
    tokenVocab=Grammar;
    language=CSharp3;
    output=AST;
    ASTLabelType=CommonTree;
    filter=true;				<--- this seems to be the
problematic part!
}

topdown
    :  ^(BLOCK .*) -> ^(BLOCK)
    ;

bottomup
    :  ^(BLOCK .*) -> ^(BLOCK)
    ;


Codegeneration worked, but I get the compile error " The non-generic type
'Antlr.Runtime.Tree.TreeRewriter' cannot be used with type arguments" which
points to the following line:
public partial class TreeWalker: Antlr.Runtime.Tree.TreeRewriter<CommonTree>
So the compiler (and me, too) was unable to find a generic version of
TreeRewriter in the current Antlr3.Runtime.dll.

Any ideas?
Thanks,
Tobias


From asjad.naaz at tcs.com  Mon Jul 18 00:30:40 2011
From: asjad.naaz at tcs.com (Asjad Naaz)
Date: Mon, 18 Jul 2011 13:00:40 +0530
Subject: [antlr-interest] how to configure the antlr jar in unix for C/c++
Message-ID: <OFF51210D4.2BADB741-ON652578D1.00292750-652578D1.00297269@tcs.com>

Hi All,

As I have always built my parsers in ANTLR using Java. Now i want to try 
for the C/C++ in Unix environment. I went through the ANTLR site but could 
find the steps how to install or use ANTLR
in Unix environment with C/C++ because most of the peoples are using it on 
visual studio.



With regards,
Abdul Asjad Naaz

____________________________________________
=====-----=====-----=====
Notice: The information contained in this e-mail
message and/or attachments to it may contain 
confidential or privileged information. If you are 
not the intended recipient, any dissemination, use, 
review, distribution, printing or copying of the 
information contained in this e-mail message 
and/or attachments to it are strictly prohibited. If 
you have received this communication in error, 
please notify us by reply e-mail or telephone and 
immediately and permanently delete the message 
and any attachments. Thank you



From parsiad.azimzadeh at gmail.com  Mon Jul 18 01:57:24 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Mon, 18 Jul 2011 01:57:24 -0700
Subject: [antlr-interest] how to configure the antlr jar in unix for
	C/c++
In-Reply-To: <CAF+GmOAj6Jt2SakoR1UgykazgV22o_4=j9_mZ0M_N9xvTVWtdg@mail.gmail.com>
References: <OFF51210D4.2BADB741-ON652578D1.00292750-652578D1.00297269@tcs.com>
	<CAF+GmOAj6Jt2SakoR1UgykazgV22o_4=j9_mZ0M_N9xvTVWtdg@mail.gmail.com>
Message-ID: <CAF+GmOAAeM7Ce_OW2zBxhLS+=M8CQ6jk_waue69V0ceY_Lipeg@mail.gmail.com>

To have ANTLR output C code, you need only change the `options = Java`
to `options = C`. Once you've got your outputted C code, you'll need
to compile it with the appropriate ANTLR header files and link it with
the appropriate ANTLR runtime library.

So, grab the source code:
http://www.antlr.org/wiki/display/ANTLR3/Using+the+ANTLR3+C+Target#UsingtheANTLR3CTarget-FindingtheSourceCode

And build it:
http://www.antlr.org/wiki/display/ANTLR3/Using+the+ANTLR3+C+Target#UsingtheANTLR3CTarget-BuildinginUNIXStyleEnvironments

And use your compiler of choice to compile the ANTLR code. The guide
above has instructions to install the library and headers in a
location where your compiler might be aware of them (I usually abstain
from this as I only allow my package manager to be in charge of
anything outside of my home on *nix). If you do not install the
headers and library in a place where your compiler is aware of them,
do not forget to use whatever flags your compiler makes available to
supply it with the location of the header files and libraries.

I personally use Arch Linux, and a package for the ANTLR C runtime is
available (see https://aur.archlinux.org/packages.php?ID=42227). Check
to see if your distribution of whatever *nix you're on has packages
available for you.

--
Parsiad Azimzadeh
http://sfu.ca/~paa4

From xpwithme at 163.com  Mon Jul 18 02:15:39 2011
From: xpwithme at 163.com (yue xin)
Date: Mon, 18 Jul 2011 17:15:39 +0800 (CST)
Subject: [antlr-interest] urgent
Message-ID: <3ab48308.ff38.1313c878482.Coremail.xpwithme@163.com>

 
 why the antlrwork 1.4 throw the unexpected stream error from parsing my grammar file 
but it worked well in the version before 1.4 would you like to help me slove this problem
thanks a lot!
 
-------- Forwarding messages --------
From: "yue xin" <xpwithme at 163.com>
Date: 2011-07-14 18:05:18
To: antlr-interest <antlr-interest at antlr.org>
Subject: explation


-------------- next part --------------
A non-text attachment was scrubbed...
Name: {_J8SU$VAZ7)USI]YH)9KJP.jpg
Type: image/jpeg
Size: 28584 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110718/83b242ed/attachment.jpg 

From xpwithme at 163.com  Mon Jul 18 02:25:12 2011
From: xpwithme at 163.com (yue xin)
Date: Mon, 18 Jul 2011 17:25:12 +0800 (CST)
Subject: [antlr-interest] Fw:urgent
Message-ID: <76738d0a.1021e.1313c90444c.Coremail.xpwithme@163.com>

 
 
 
-------- Forwarding messages --------
From: "yue xin" <xpwithme at 163.com>
Date: 2011-07-18 17:15:39
To: antlr-interest <antlr-interest at antlr.org>,antlr-interest-request <antlr-interest-request at antlr.org>
Subject: urgent

 
 why the antlrwork 1.4 throw the unexpected stream error from parsing my grammar file 
but it worked well in the version before 1.4 would you like to help me slove this problem
thanks a lot!
 
-------- Forwarding messages --------
From: "yue xin" <xpwithme at 163.com>
Date: 2011-07-14 18:05:18
To: antlr-interest <antlr-interest at antlr.org>
Subject: explation





From rbellamy at pteradigm.com  Mon Jul 18 10:40:19 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Mon, 18 Jul 2011 10:40:19 -0700
Subject: [antlr-interest] CSharp3 target with 3.3.3 and extended AST
	Operators (or not).
Message-ID: <4E247003.5080506@pteradigm.com>

I've been trying to use the new operators for AST Node type conversion 
without rewrite rules.

Attempt (doesn't work for me):

between_number:
   : number DASH<BETWEEN>^ number
   ;

Works:

between_number:
   : n1=number DASH n2=number -> ^(BETWEEN $n1 $n2)
   ;

Am I perhaps missing something related to implicit lists (since `number` 
appears twice)?



From jimi at temporal-wave.com  Mon Jul 18 10:42:50 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Jul 2011 10:42:50 -0700
Subject: [antlr-interest] how to configure the antlr jar in unix for
	C/c++
In-Reply-To: <OFF51210D4.2BADB741-ON652578D1.00292750-652578D1.00297269@tcs.com>
References: <OFF51210D4.2BADB741-ON652578D1.00292750-652578D1.00297269@tcs.com>
Message-ID: <bf2ae090d868a6c16b4acbe81c61d337@mail.gmail.com>

There is no difference. The jar is still a jar and is directed to created
C instead of Java by the language option in your .g file. Most people are
using Linux rather than Windows I think. For instructions on installing
the C runtime, check out the C API docs linked on the home page.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Asjad Naaz
> Sent: Monday, July 18, 2011 12:31 AM
> To: antlr-interest
> Subject: [antlr-interest] how to configure the antlr jar in unix for
> C/c++
>
> Hi All,
>
> As I have always built my parsers in ANTLR using Java. Now i want to
> try for the C/C++ in Unix environment. I went through the ANTLR site
> but could find the steps how to install or use ANTLR in Unix
> environment with C/C++ because most of the peoples are using it on
> visual studio.
>
>
>
> With regards,
> Abdul Asjad Naaz
>
> ____________________________________________
> =====-----=====-----=====
> Notice: The information contained in this e-mail message and/or
> attachments to it may contain confidential or privileged information.
> If you are not the intended recipient, any dissemination, use, review,
> distribution, printing or copying of the information contained in this
> e-mail message and/or attachments to it are strictly prohibited. If you
> have received this communication in error, please notify us by reply e-
> mail or telephone and immediately and permanently delete the message
> and any attachments. Thank you
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From dejas9000 at gmail.com  Mon Jul 18 12:44:46 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Mon, 18 Jul 2011 14:44:46 -0500
Subject: [antlr-interest] Trouble with the multiline comment example from FAQ
Message-ID: <CAEAw34PiWjAyw81q_kJqr5vgaphmu9SyVhYncO4wRpaAhUG_UQ@mail.gmail.com>

I've modified the multiline comment example from the FAQ (
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1573) to be:

NESTED_ML_COMMENT
    :   '['
        (options {greedy=false;} : NESTED_ML_COMMENT | . )*
        ']' {$channel=HIDDEN;}
    ;

However, it is not behaving as expected in the ANLTRWorks interpreter.  When
I ask the interpreter to match on:

[]

there is no problem, but when I ask it to match on:

[j]

I get a mismatched token exception.  Any thoughts as to why?

Thanks.

From bkiers at gmail.com  Mon Jul 18 12:48:33 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 18 Jul 2011 21:48:33 +0200
Subject: [antlr-interest] Trouble with the multiline comment example
	from FAQ
In-Reply-To: <CAEAw34PiWjAyw81q_kJqr5vgaphmu9SyVhYncO4wRpaAhUG_UQ@mail.gmail.com>
References: <CAEAw34PiWjAyw81q_kJqr5vgaphmu9SyVhYncO4wRpaAhUG_UQ@mail.gmail.com>
Message-ID: <CAOrgODZ0tMjVrYLUACJ+r=s4dMHbZbArLT5NOYw+f4FAQtWSFg@mail.gmail.com>

Hi,

This ought to work:

NESTED_ML_COMMENT
  :  '[' (~('[' | ']') | NESTED_ML_COMMENT)* ']'
  ;


Regards,

Bart.


On Mon, Jul 18, 2011 at 9:44 PM, Dejas Ninethousand <dejas9000 at gmail.com>wrote:

> I've modified the multiline comment example from the FAQ (
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1573) to be:
>
> NESTED_ML_COMMENT
>    :   '['
>        (options {greedy=false;} : NESTED_ML_COMMENT | . )*
>        ']' {$channel=HIDDEN;}
>    ;
>
> However, it is not behaving as expected in the ANLTRWorks interpreter.
>  When
> I ask the interpreter to match on:
>
> []
>
> there is no problem, but when I ask it to match on:
>
> [j]
>
> I get a mismatched token exception.  Any thoughts as to why?
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Mon Jul 18 13:16:08 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 18 Jul 2011 15:16:08 -0500
Subject: [antlr-interest] CSharp3 target with 3.3.3 and extended
	AST	Operators (or not).
In-Reply-To: <4E247003.5080506@pteradigm.com>
References: <4E247003.5080506@pteradigm.com>
Message-ID: <056101cc4587$887ce610$9976b230$@pixelminegames.com>

Were you generating code with the C# port of the tool (Antlr3.exe) or with
the Java version? I've only tested this feature with the C# version.

I believe if you use the Java version to generate it, you have to explicitly
state the terminal option. The C# port defaults to this option, but the Java
version defaults to a different option.

between_number: number DASH<ttype=BETWEEN>^ number ;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
Sent: Monday, July 18, 2011 12:40 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] CSharp3 target with 3.3.3 and extended AST
Operators (or not).

I've been trying to use the new operators for AST Node type conversion
without rewrite rules.

Attempt (doesn't work for me):

between_number:
   : number DASH<BETWEEN>^ number
   ;

Works:

between_number:
   : n1=number DASH n2=number -> ^(BETWEEN $n1 $n2)
   ;

Am I perhaps missing something related to implicit lists (since `number`
appears twice)?



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dejas9000 at gmail.com  Mon Jul 18 13:35:43 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Mon, 18 Jul 2011 15:35:43 -0500
Subject: [antlr-interest] Concatenating variable number of tokens into a
	single string in an action?
Message-ID: <CAEAw34Nqse5Ob0abc45kMKWEbQtsz5LtaD1Hwjf8uT196k=sMg@mail.gmail.com>

Hello,

If I have the rule:

        text : t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER)+ {
stack.pushUnquotedText(...); };

Is there any way for me to gather the text of all the ALPHA_TEXT and
DECIMAL_NUMBER tokens in this production into a single string and shove that
string as an argument in my action?

Thanks.

From rbellamy at pteradigm.com  Mon Jul 18 13:40:11 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Mon, 18 Jul 2011 13:40:11 -0700
Subject: [antlr-interest] CSharp3 target with 3.3.3 and extended AST
 Operators (or not).
In-Reply-To: <056101cc4587$887ce610$9976b230$@pixelminegames.com>
References: <4E247003.5080506@pteradigm.com>
	<056101cc4587$887ce610$9976b230$@pixelminegames.com>
Message-ID: <4E249A2B.7040606@pteradigm.com>

Sam,

Thanks for responding - I appreciate your help and all the work you've 
done on the C# port of the ANTLR tools.

I'm using the C# port of Antlr3.exe via the Antlr3.targets integration.

In the doc you authored "Visual Studio and the ANTLR C# Target" it shows 
that I should be able to use:

between_number : number DASH<BETWEEN>^ number ;

or, if also declaring the type and text of the AST node:

between_number : number DASH<type=BETWEEN; text="BETWEEN">^ number ;

but in your example you have `ttype`.

I'm reasonably certain I'm missing something obvious...

-rb

On 7/18/2011 1:16 PM, Sam Harwell wrote:
> Were you generating code with the C# port of the tool (Antlr3.exe) or with
> the Java version? I've only tested this feature with the C# version.
>
> I believe if you use the Java version to generate it, you have to explicitly
> state the terminal option. The C# port defaults to this option, but the Java
> version defaults to a different option.
>
> between_number: number DASH<ttype=BETWEEN>^ number ;
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
> Sent: Monday, July 18, 2011 12:40 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] CSharp3 target with 3.3.3 and extended AST
> Operators (or not).
>
> I've been trying to use the new operators for AST Node type conversion
> without rewrite rules.
>
> Attempt (doesn't work for me):
>
> between_number:
>     : number DASH<BETWEEN>^ number
>     ;
>
> Works:
>
> between_number:
>     : n1=number DASH n2=number ->  ^(BETWEEN $n1 $n2)
>     ;
>
> Am I perhaps missing something related to implicit lists (since `number`
> appears twice)?
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jbb at acm.org  Mon Jul 18 13:52:33 2011
From: jbb at acm.org (John B. Brodie)
Date: Mon, 18 Jul 2011 16:52:33 -0400
Subject: [antlr-interest] Concatenating variable number of tokens into a
 single string in an action?
In-Reply-To: <CAEAw34Nqse5Ob0abc45kMKWEbQtsz5LtaD1Hwjf8uT196k=sMg@mail.gmail.com>
References: <CAEAw34Nqse5Ob0abc45kMKWEbQtsz5LtaD1Hwjf8uT196k=sMg@mail.gmail.com>
Message-ID: <1311022353.18069.6.camel@gecko>

Greetings!

On Mon, 2011-07-18 at 15:35 -0500, Dejas Ninethousand wrote:
> Hello,
> 
> If I have the rule:
> 
>         text : t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER)+ {
> stack.pushUnquotedText(...); };
> 
> Is there any way for me to gather the text of all the ALPHA_TEXT and
> DECIMAL_NUMBER tokens in this production into a single string and shove that
> string as an argument in my action?
> 

Basically accumulate the text into a variable using an action inside the
(...)+ loop and then push the accumulation.  Something like (UNTESTED):

text
    @init{ String str = ""; } : 
    ( t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER) { str+=$t.text; } )+
    { stack.pushUnquotedText(str); }
  ;

Note that the t=(...) only works because all of the stuff inside the
(...) are Tokens (i think).

Note that any tokens that were put on the HIDDEN channel (or skip();d)
by the Lexer will not be accumulated/pushed.

Hope this helps...
   -jbb



From dejas9000 at gmail.com  Mon Jul 18 14:25:52 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Mon, 18 Jul 2011 16:25:52 -0500
Subject: [antlr-interest] Concatenating variable number of tokens into a
 single string in an action?
In-Reply-To: <1311022353.18069.6.camel@gecko>
References: <CAEAw34Nqse5Ob0abc45kMKWEbQtsz5LtaD1Hwjf8uT196k=sMg@mail.gmail.com>
	<1311022353.18069.6.camel@gecko>
Message-ID: <CAEAw34NwFUX_pXG6eCPazfjhGtrAFyKtqEEZ95e0yzSobLs5Kg@mail.gmail.com>

Thanks John, that worked.

On Mon, Jul 18, 2011 at 3:52 PM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
>
> On Mon, 2011-07-18 at 15:35 -0500, Dejas Ninethousand wrote:
> > Hello,
> >
> > If I have the rule:
> >
> >         text : t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER)+ {
> > stack.pushUnquotedText(...); };
> >
> > Is there any way for me to gather the text of all the ALPHA_TEXT and
> > DECIMAL_NUMBER tokens in this production into a single string and shove
> that
> > string as an argument in my action?
> >
>
> Basically accumulate the text into a variable using an action inside the
> (...)+ loop and then push the accumulation.  Something like (UNTESTED):
>
> text
>    @init{ String str = ""; } :
>    ( t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER) { str+=$t.text; } )+
>    { stack.pushUnquotedText(str); }
>  ;
>
> Note that the t=(...) only works because all of the stuff inside the
> (...) are Tokens (i think).
>
> Note that any tokens that were put on the HIDDEN channel (or skip();d)
> by the Lexer will not be accumulated/pushed.
>
> Hope this helps...
>    -jbb
>
>
>

From jimi at temporal-wave.com  Mon Jul 18 14:41:04 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 18 Jul 2011 14:41:04 -0700
Subject: [antlr-interest] Concatenating variable number of tokens into a
 single string in an action?
In-Reply-To: <1311022353.18069.6.camel@gecko>
References: <CAEAw34Nqse5Ob0abc45kMKWEbQtsz5LtaD1Hwjf8uT196k=sMg@mail.gmail.com>
	<1311022353.18069.6.camel@gecko>
Message-ID: <fc43ccb1ca9dc9e8ead2db80d8804617@mail.gmail.com>

But use a StringBuilder if there are lots.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John B. Brodie
> Sent: Monday, July 18, 2011 1:53 PM
> To: Dejas Ninethousand
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Concatenating variable number of tokens
> into a single string in an action?
>
> Greetings!
>
> On Mon, 2011-07-18 at 15:35 -0500, Dejas Ninethousand wrote:
> > Hello,
> >
> > If I have the rule:
> >
> >         text : t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER)+ {
> > stack.pushUnquotedText(...); };
> >
> > Is there any way for me to gather the text of all the ALPHA_TEXT and
> > DECIMAL_NUMBER tokens in this production into a single string and
> > shove that string as an argument in my action?
> >
>
> Basically accumulate the text into a variable using an action inside
> the (...)+ loop and then push the accumulation.  Something like
> (UNTESTED):
>
> text
>     @init{ String str = ""; } :
>     ( t=(UNQUOTED_ALPHA_TEXT | DECIMAL_NUMBER) { str+=$t.text; } )+
>     { stack.pushUnquotedText(str); }
>   ;
>
> Note that the t=(...) only works because all of the stuff inside the
> (...) are Tokens (i think).
>
> Note that any tokens that were put on the HIDDEN channel (or skip();d)
> by the Lexer will not be accumulated/pushed.
>
> Hope this helps...
>    -jbb
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sebastien.kirche at gmail.com  Mon Jul 18 16:19:39 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Tue, 19 Jul 2011 01:19:39 +0200
Subject: [antlr-interest] gunit and verbose output
Message-ID: <CALGPt8YhatNG1GKvOUniHXgsqDaT9HjzzqsDt1m3WXH0BiKvNA@mail.gmail.com>

Hi,

as I am progressing in the definition of my powerscript grammar, I
began to build a consistent base of test cases to point the portions
of the grammar that still need some work.

I first used to put the test cases in a String array processed in the
main method of the parser class. Not very practical.
I used also to parse a set of debug_* files where I put the test cases
grouped by theme, with a pause between each test file to look for
error messages. Better, but it lacks the ability to display a resume
of the passed vs. failed tests (though I still use that to produce
automated graphviz diagrams of syntax).

Then I discovered gunit, which looks to be what I am looking for, with
some problems :
1) gunit seems to be annoyed by some debug output messages
(System.ot.print...) that I put in Lexer and Parser actions. I get a
the following in the gunit results (partial output) :

executing testsuite for grammar:PowerScript with 39 tests
-----------------------------------------------------------------------
8 failures found:
test1 (Ident, line7) -
expected: OK
actual: java.lang.StringIndexOutOfBoundsException: String index out of range: -1

test2 (Ident, line9) -
expected: OK
actual: java.lang.StringIndexOutOfBoundsException: String index out of range: -1
[...]

If I comment out a System.out.print in the Ident rule, the tests are passed OK.

2) following Jim Idle advice, I am using a custom
ANTLRNoCaseFileStream to perform a case insensitive matching of the
language keywords, and I am about to implement a such StringStream.
Would it be possible to use that case insensitive stream with gunit ?
For the moment I need to type each keyword in uppercase as they are
defined in the grammar.

3) I have some tests that fails. Sometimes the cause is obvious (in
the test case), sometimes it is not and I cannot get a verbose reason
with gunit. E.g , I get a expected: OK / actual: FAIL. I need to
specifically invoke the rule with the same input to get a clear error
message from the parser. I have made a dynamic rule invoker to help,
but would it be possible to get the error message directly with gunit
?

For those that could help, I join my "dynamic invoker", you just need
to pass the rule name and an input string to invoke the rule from the
parser. Start it by giving the rule name and a test string in the
command line arguments.

Regards,
-- 
S?bastien Kirche
-------------- next part --------------
A non-text attachment was scrubbed...
Name: RunExpression.java
Type: application/octet-stream
Size: 1267 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110719/13979f86/attachment.obj 

From piyush.besu at gmail.com  Tue Jul 19 01:50:40 2011
From: piyush.besu at gmail.com (Piyush)
Date: Tue, 19 Jul 2011 01:50:40 -0700 (PDT)
Subject: [antlr-interest] ANTLR gives segmentation fault for very large input
Message-ID: <1311065440680-6598011.post@n2.nabble.com>

Sir when i am trying to parse a very big input file (of nearly
4500000 lines) ANTLR is giving segmentation fault.

 Just for example my grammar funny.g is parsing input file input.v(of
near about 45 lines) but gives segmentation fault for
big_file_input.v(of about 4500000 lines) ,which also contains the same
input as of input.v 100000 times

I am attaching my grammar (funny.g and input files) below.

So please help me out where i am doing wrong or this is antlr's bug?


Thanking You
Piyush http://antlr.1301665.n2.nabble.com/file/n6598011/fun.tar fun.tar 

--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-for-very-large-input-tp6598011p6598011.html
Sent from the ANTLR mailing list archive at Nabble.com.

From anteusz at freemail.hu  Tue Jul 19 02:00:43 2011
From: anteusz at freemail.hu (anteusz at freemail.hu)
Date: Tue, 19 Jul 2011 12:00:43 +0300
Subject: [antlr-interest] Hi! about making a target for ANTLR
In-Reply-To: <6CBD5BFF-3C21-4646-B824-69EF9589DBE5@cs.usfca.edu>
References: <4E201CD5.5090200@freemail.hu>
	<5EB97623-28B8-471E-8735-50C11379A60B@cs.usfca.edu>
	<4E207394.1070408@freemail.hu>
	<6CBD5BFF-3C21-4646-B824-69EF9589DBE5@cs.usfca.edu>
Message-ID: <4E2547BB.5010502@freemail.hu>

On 7/15/2011 9:07 PM, Terence Parr wrote:
> well,For now, it's probably best to put it in the filesharing area at the website so people can try it out.
> Ter
> On Jul 15, 2011, at 10:06 AM, anteusz at freemail.hu wrote:
>

Hi,
here it is...
https://sourceforge.net/projects/antlrdtarget/


M?rton Papp



From WeikEngOff at aol.com  Tue Jul 19 07:28:42 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 19 Jul 2011 16:28:42 +0200
Subject: [antlr-interest] ANTLRWorks: Shortcuts
Message-ID: <4E25949A.70208@aol.com>

Hello,

is it possible to add shortcuts to the ANTLRWorks-GUI, like
- File     Alt+f
- Edit     Alt+e
- Find     Alt+i
- GoTo     Alt+g
- Grammar  Alt+r
- Refactor Alt+a
- Generate Alt+n
- Run      Alt+u
- Window   Alt+w
- Help     Alt+h
and for every up to now missing menu item.

And, much much more important shortcuts (Fn) for controlling the
debugger:
- Stop
- Go to Start
- Step Back
- Step Forward
- Step Over
- Fast (f)Forward
- Go To End


Greetings
Udo

From jimi at temporal-wave.com  Tue Jul 19 08:38:16 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jul 2011 08:38:16 -0700
Subject: [antlr-interest] ANTLR gives segmentation fault for very large
	input
In-Reply-To: <1311065440680-6598011.post@n2.nabble.com>
References: <1311065440680-6598011.post@n2.nabble.com>
Message-ID: <ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>

You are running out of memory - split up the input in some sensible way.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Piyush
> Sent: Tuesday, July 19, 2011 1:51 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR gives segmentation fault for very large
> input
>
> Sir when i am trying to parse a very big input file (of nearly
> 4500000 lines) ANTLR is giving segmentation fault.
>
>  Just for example my grammar funny.g is parsing input file input.v(of
> near about 45 lines) but gives segmentation fault for
> big_file_input.v(of about 4500000 lines) ,which also contains the same
> input as of input.v 100000 times
>
> I am attaching my grammar (funny.g and input files) below.
>
> So please help me out where i am doing wrong or this is antlr's bug?
>
>
> Thanking You
> Piyush http://antlr.1301665.n2.nabble.com/file/n6598011/fun.tar fun.tar
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-
> gives-segmentation-fault-for-very-large-input-tp6598011p6598011.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Tue Jul 19 08:39:49 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 19 Jul 2011 17:39:49 +0200
Subject: [antlr-interest] ANTLRWorks 1.4.2: Simple grammar doesn't work
Message-ID: <4E25A545.3090208@aol.com>

Hello,

what's wrong with the following grammar,
tested with: abcd


grammar Problem1b ;

fragment
Cl :  'a'..'z' ;
fragment
Cu :  'A'..'Z' ;
fragment
INT : '0'..'9' ;

id_Chars :               Cl | Cu ;
id_NumbersChars  : INT | Cl | Cu ;

test : id_Chars ( id_NumbersChars )* ;


My main problem is that every time I'm working with
ANTLRWorks 1.4.2 its behaviour is different. Now
I restartet ANTLRWorks and I got an error
[17:35:45] F:\ProgLang\Parsers\ANTLR3\Projects\Tutorial\Test\IntegerZero\output\__Test__.java:14: cannot find symbol
[17:35:45] symbol  : method Cl()
[17:35:45] location: class Problem1bParser
[17:35:45]             g.Cl();
[17:35:45]              ^
[17:35:45] 1 error

Some minutes ago the debugger blocked, before
only 'a' was recognized.


Many thanks and greetings
Udo

From jimi at temporal-wave.com  Tue Jul 19 09:24:28 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jul 2011 09:24:28 -0700
Subject: [antlr-interest] ANTLRWorks 1.4.2: Simple grammar doesn't work
In-Reply-To: <4E25A545.3090208@aol.com>
References: <4E25A545.3090208@aol.com>
Message-ID: <45e17612cacb7d60c6096ed43ff0c984@mail.gmail.com>

Your lexer rules are fragments only, so there are no real lexer rules to
match anything, then you try and construct parser rules from the fragment
rules.

Hence ANTLRWorks has no idea what you are doing because your grammar is so
broken. It also sounds like you were debugging a prior version, then
changed to this version (which will hang as the lexer consumes nothing),
then after a restart, managed to rebuild the whole thing and saw that the
generated code points out that you have no visible lexer rules. So, it is
not the tool, but the workman. Make sure however, to regenerate the whole
of your grammar for debug as ANTLRWorks can sometimes miss that the
compilation failed and try to run something that was not compiled.

The fragment rules are goof for readability in complex formulations, but
in simple ranges, you are creating lots of method calls and hoping that
the JIT will inline them. It is just as simple to do this:

ID : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9')* ;


Which is what you are trying to do. Remember that Lexer rules start with
an UPPER case letter and parser rules with a lower case letter (ironic
given your rules right?); and that fragment rules are not visible to the
parser and do not create tokens.

Perhaps you should run through the 10 minute tutorials and perhaps load an
existing working grammar in to ANTLRWorks before attempting your own.
Also, always compare what you are trying to achieve with an existing
grammar, and you may find you can steal the technique.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Tuesday, July 19, 2011 8:40 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLRWorks 1.4.2: Simple grammar doesn't work
>
> Hello,
>
> what's wrong with the following grammar, tested with: abcd
>
>
> grammar Problem1b ;
>
> fragment
> Cl :  'a'..'z' ;
> fragment
> Cu :  'A'..'Z' ;
> fragment
> INT : '0'..'9' ;
>
> id_Chars :               Cl | Cu ;
> id_NumbersChars  : INT | Cl | Cu ;
>
> test : id_Chars ( id_NumbersChars )* ;
>
>
> My main problem is that every time I'm working with ANTLRWorks 1.4.2
> its behaviour is different. Now I restartet ANTLRWorks and I got an
> error [17:35:45]
> F:\ProgLang\Parsers\ANTLR3\Projects\Tutorial\Test\IntegerZero\output\__
> Test__.java:14: cannot find symbol [17:35:45] symbol  : method Cl()
> [17:35:45] location: class Problem1bParser
> [17:35:45]             g.Cl();
> [17:35:45]              ^
> [17:35:45] 1 error
>
> Some minutes ago the debugger blocked, before only 'a' was recognized.
>
>
> Many thanks and greetings
> Udo
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue Jul 19 09:56:26 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 19 Jul 2011 09:56:26 -0700
Subject: [antlr-interest] ANTLR Release 3.4 now available in Maven
Message-ID: <1d736facc98e04f0c74c0075deb8896f@mail.gmail.com>

ANTLR release 3.4 will be available from Maven central within a maximum of 2
hours from now.



?         Please note that this release is compatible with Maven 3.0.3;

?         Please note that if you ever wish to build ANTLR from source using
Maven, then the ANTLR build itself is ONLY compatible with Maven 3.0.3 and
will fail if you use an earlier version of Maven. I realized too late that I
should have changed the ANTLR poms to require 3.0.3 for building ? well, at
the next patch release;

?         Please note that antlr3-maven-archetype 3.4 is also Maven 3.0.3
compatible, but will generate projects that can be used with Maven 2.2.1 as
well;



This release is sent out via Sonatype OSS repositories, which checks
signatures (via gpg public key: hkp://pool.sks-keyservers.net ). If you need
to import the ANTLR public key at any point (you won?t normally), you can do
so via:



gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 7E01B1E1

gpg --list-keys



Using Sonatype also ensures that I don?t ever miss off the Javadoc or src
jars from the repository.



Please let me know here if you are successful in using this artifact (but
only the first 2 or 3 users please ;). If you have any problems, then please
write them down in detail on a $100 bill and send to me c/o  antlr.org ;-)



Group: org.antlr

Artifacts: <see below>

Version: 3.4









*From:* Nexus Repository Manager [mailto:nexus at oss.sonatype.org]
*Sent:* Tuesday, July 19, 2011 9:45 AM
*To:* Jim Idle; Jim Idle
*Subject:* Nexus: Promotion Completed.



*Description:*

Release of ANTLR 3.4, including all source and javadoc jars, master pom,
plugins, and archetypes.

*Details:*

The following artifacts have been promoted to the
Releases<https://oss.sonatype.org/content/repositories/releases>repository.

maven-gunit-plugin-3.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4-sources.jar>
maven-gunit-plugin-3.4-javadoc.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4-javadoc.jar>
maven-gunit-plugin-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4.pom>
maven-gunit-plugin-3.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4.jar.asc>
maven-gunit-plugin-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4.pom.asc>
maven-gunit-plugin-3.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4-sources.jar.asc>
maven-gunit-plugin-3.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4.jar>
maven-gunit-plugin-3.4-javadoc.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/maven-gunit-plugin/3.4/maven-gunit-plugin-3.4-javadoc.jar.asc>
antlr3-maven-archetype-3.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-archetype/3.4/antlr3-maven-archetype-3.4-sources.jar.asc>
antlr3-maven-archetype-3.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-archetype/3.4/antlr3-maven-archetype-3.4.jar.asc>
antlr3-maven-archetype-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-archetype/3.4/antlr3-maven-archetype-3.4.pom.asc>
antlr3-maven-archetype-3.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-archetype/3.4/antlr3-maven-archetype-3.4-sources.jar>
antlr3-maven-archetype-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-archetype/3.4/antlr3-maven-archetype-3.4.pom>
antlr3-maven-archetype-3.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-archetype/3.4/antlr3-maven-archetype-3.4.jar>
antlr-runtime-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.pom>
antlr-runtime-3.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar>
antlr-runtime-3.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4-sources.jar>
antlr-runtime-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.pom.asc>
antlr-runtime-3.4-javadoc.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4-javadoc.jar.asc>
antlr-runtime-3.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4-sources.jar.asc>
antlr-runtime-3.4-javadoc.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4-javadoc.jar>
antlr-runtime-3.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar.asc>
gunit-3.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4-sources.jar>
gunit-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4.pom>
gunit-3.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4.jar>
gunit-3.4-javadoc.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4-javadoc.jar.asc>
gunit-3.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4.jar.asc>
gunit-3.4-javadoc.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4-javadoc.jar>
gunit-3.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4-sources.jar.asc>
gunit-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/gunit/3.4/gunit-3.4.pom.asc>
antlr-master-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-master/3.4/antlr-master-3.4.pom>
antlr-master-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr-master/3.4/antlr-master-3.4.pom.asc>
antlr3-maven-plugin-3.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4.jar>
antlr3-maven-plugin-3.4-javadoc.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4-javadoc.jar>
antlr3-maven-plugin-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4.pom>
antlr3-maven-plugin-3.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4-sources.jar.asc>
antlr3-maven-plugin-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4.pom.asc>
antlr3-maven-plugin-3.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4-sources.jar>
antlr3-maven-plugin-3.4-javadoc.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4-javadoc.jar.asc>
antlr3-maven-plugin-3.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr3-maven-plugin/3.4/antlr3-maven-plugin-3.4.jar.asc>
antlr-3.4-javadoc.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4-javadoc.jar>
antlr-3.4.pom.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4.pom.asc>
antlr-3.4-sources.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4-sources.jar>
antlr-3.4-javadoc.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4-javadoc.jar.asc>
antlr-3.4-sources.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4-sources.jar.asc>
antlr-3.4.jar.asc<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4.jar.asc>
antlr-3.4.jar<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4.jar>
antlr-3.4.pom<https://oss.sonatype.org/content/repositories/releases/org/antlr/antlr/3.4/antlr-3.4.pom>
archetype-catalog.xml<https://oss.sonatype.org/content/repositories/releases/archetype-catalog.xml>

From member at linkedin.com  Tue Jul 19 11:36:35 2011
From: member at linkedin.com (Renjith Varma via LinkedIn)
Date: Tue, 19 Jul 2011 18:36:35 +0000 (UTC)
Subject: [antlr-interest] Invitation to connect on LinkedIn
Message-ID: <1538672363.11850340.1311100595387.JavaMail.app@ela4-bed83.prod>

LinkedIn
------------




    Renjith Varma requested to add you as a connection on LinkedIn:
  
------------------------------------------

Ian,

I'd like to add you to my professional network on LinkedIn.

- Renjith

Accept invitation from Renjith Varma
http://www.linkedin.com/e/6i82p9-gqb7fxyw-56/XJ_Jh42eHeYQ_eJ2S5_J_0Ueq9jQFT3yBwA6v-/blk/I2972215657_2/1BpC5vrmRLoRZcjkkZt5YCpnlOt3RApnhMpmdzgmhxrSNBszYOnPsRdzkNcz8Tej99bQ9zemlntmAQbPAPcPwUdzwUdjcLrCBxbOYWrSlI/EML_comm_afe/

View invitation from Renjith Varma
http://www.linkedin.com/e/6i82p9-gqb7fxyw-56/XJ_Jh42eHeYQ_eJ2S5_J_0Ueq9jQFT3yBwA6v-/blk/I2972215657_2/39vdPkSdj4OczsVcAALqnpPbOYWrSlI/svi/


 
-- 
(c) 2011, LinkedIn Corporation

From WeikEngOff at aol.com  Tue Jul 19 12:00:31 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 19 Jul 2011 21:00:31 +0200
Subject: [antlr-interest] ANTLRWorks 1.4.2: Simple grammar doesn't work
In-Reply-To: <45e17612cacb7d60c6096ed43ff0c984@mail.gmail.com>
References: <4E25A545.3090208@aol.com>
	<45e17612cacb7d60c6096ed43ff0c984@mail.gmail.com>
Message-ID: <4E25D44F.7020404@aol.com>

Hello Jim,

many thanks for your answer. But Objection, Your Honour...

> Your lexer rules are fragments only, so there are no real lexer rules to
> match anything, then you try and construct parser rules from the fragment
> rules.

Of course that grammar is an excerpt from a more complex one. And the reason
that I use fragments is that I needed fragment lexer rules for that complex
grammar.

> Hence ANTLRWorks has no idea what you are doing because your grammar is so
> broken. It also sounds like you were debugging a prior version, then
> changed to this version (which will hang as the lexer consumes nothing),
> then after a restart, managed to rebuild the whole thing and saw that the
> generated code points out that you have no visible lexer rules. So, it is
> not the tool, but the workman.

No, not the workman. It's an issue of the tool, which the workman must
learn to handle. And in the above context I would expect an error message.
Check Grammar was successful, too.

> Make sure however, to regenerate the whole
> of your grammar for debug as ANTLRWorks can sometimes miss that the
> compilation failed and try to run something that was not compiled.

Thanks for that hint. I will investigate that further, have a sneaking
suspicion.

> The fragment rules are goof for readability in complex formulations, but
> in simple ranges, you are creating lots of method calls and hoping that
> the JIT will inline them. It is just as simple to do this:
>
> ID : ('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '0'..'9')* ;

That was my starting point.

> Which is what you are trying to do. Remember that Lexer rules start with
> an UPPER case letter and parser rules with a lower case letter (ironic
> given your rules right?); and that fragment rules are not visible to the
> parser and do not create tokens.
>
> Perhaps you should run through the 10 minute tutorials and perhaps load an
> existing working grammar in to ANTLRWorks before attempting your own.
> Also, always compare what you are trying to achieve with an existing
> grammar, and you may find you can steal the technique.

I can spent weeks with examples, when the simplest own creations don't
work. Did I do anything forbidden in my grammar below apart from using
fragment? I removed it and now the grammar is working - at the moment
the Debugger works correctly, too.


Greetings
Udo

>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Udo Weik
>> Sent: Tuesday, July 19, 2011 8:40 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] ANTLRWorks 1.4.2: Simple grammar doesn't work
>>
>> Hello,
>>
>> what's wrong with the following grammar, tested with: abcd
>>
>>
>> grammar Problem1b ;
>>
>> fragment
>> Cl :  'a'..'z' ;
>> fragment
>> Cu :  'A'..'Z' ;
>> fragment
>> INT : '0'..'9' ;
>>
>> id_Chars :               Cl | Cu ;
>> id_NumbersChars  : INT | Cl | Cu ;
>>
>> test : id_Chars ( id_NumbersChars )* ;
>>
>>
>> My main problem is that every time I'm working with ANTLRWorks 1.4.2
>> its behaviour is different. Now I restartet ANTLRWorks and I got an
>> error [17:35:45]
>> F:\ProgLang\Parsers\ANTLR3\Projects\Tutorial\Test\IntegerZero\output\__
>> Test__.java:14: cannot find symbol [17:35:45] symbol  : method Cl()
>> [17:35:45] location: class Problem1bParser
>> [17:35:45]             g.Cl();
>> [17:35:45]              ^
>> [17:35:45] 1 error
>>
>> Some minutes ago the debugger blocked, before only 'a' was recognized.
>>
>>
>> Many thanks and greetings
>> Udo
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From srinivasan.karthikeyan.pitchai at oracle.com  Wed Jul 20 09:46:30 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Wed, 20 Jul 2011 22:16:30 +0530
Subject: [antlr-interest] Deciphering  the TreeWalker error message  ...
Message-ID: <4E270666.7030100@oracle.com>

Hi Folks,
What does the ANTLR walker error message like the following mean?

no viable alt; token=[@-1,0:0='DOWN'


Would appreciate any general guidance/suggestions to zero in on the 
errors of this nature.

Thanks,
Vasan


Input sql:
-----------

select (1) from table1
where 2 between 3 and 4;


Error Message:
--------------------

TDWalker1.g: node from after line 2:8 [start1, startStatement, dml, 
query_term, query_expression, query, query_unit, where_clause, 
condition_list, condition_subexpression, condition] Walker1: no viable 
alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0) 
decision=<<590:1: condition options {backtrack=true; } : ( ^( 
comparison_operator ( condition_quantifier )? c1= condition c2= 
condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition c2= 
condition ) ) | ^( condition_operator expression c1= condition ^( ESCAPE 
escape_character ) ) | ^( condition_operator expression c1= condition ) 
| ^( condition_operator expression_list c1= condition ) | ^( NOT c1= 
condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) | ^( 
IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^( IS 
expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED ) | ^( IS 
expression UNTIL_CLOSED ) | expression | condition_list );>> context=......


However the following SQL, that just doesn't have the parenthesis around 
1,  works fine!!!

select (1) from table1
where 2 between 3 and 4;


From lgcraymer at yahoo.com  Wed Jul 20 10:15:15 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 20 Jul 2011 10:15:15 -0700 (PDT)
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <4E270666.7030100@oracle.com>
References: <4E270666.7030100@oracle.com>
Message-ID: <1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>

"UP" and "DOWN" tokens (start/end of child list for tree) do not have location information attached so no line/column error reporting. ?Mostly the error says that you started a subtree that your grammar does not match, probably an LPAREN or RPAREN rooted subtree from your report of cases where you do or do not get the error.

--Loring



>________________________________
>From: srinivasan karthikeyan pitchai <srinivasan.karthikeyan.pitchai at oracle.com>
>To: antlr-interest at antlr.org
>Cc: Terence Parr <parrt at cs.usfca.edu>
>Sent: Wednesday, July 20, 2011 9:46 AM
>Subject: [antlr-interest] Deciphering  the TreeWalker error message  ...
>
>Hi Folks,
>What does the ANTLR walker error message like the following mean?
>
>no viable alt; token=[@-1,0:0='DOWN'
>
>
>Would appreciate any general guidance/suggestions to zero in on the 
>errors of this nature.
>
>Thanks,
>Vasan
>
>
>Input sql:
>-----------
>
>select (1) from table1
>where 2 between 3 and 4;
>
>
>Error Message:
>--------------------
>
>TDWalker1.g: node from after line 2:8 [start1, startStatement, dml, 
>query_term, query_expression, query, query_unit, where_clause, 
>condition_list, condition_subexpression, condition] Walker1: no viable 
>alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0) 
>decision=<<590:1: condition options {backtrack=true; } : ( ^( 
>comparison_operator ( condition_quantifier )? c1= condition c2= 
>condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition c2= 
>condition ) ) | ^( condition_operator expression c1= condition ^( ESCAPE 
>escape_character ) ) | ^( condition_operator expression c1= condition ) 
>| ^( condition_operator expression_list c1= condition ) | ^( NOT c1= 
>condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) | ^( 
>IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^( IS 
>expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED ) | ^( IS 
>expression UNTIL_CLOSED ) | expression | condition_list );>> context=......
>
>
>However the following SQL, that just doesn't have the parenthesis around 
>1,? works fine!!!
>
>select (1) from table1
>where 2 between 3 and 4;
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From David.Weiler-Thiessen at purina.nestle.com  Wed Jul 20 11:07:33 2011
From: David.Weiler-Thiessen at purina.nestle.com (Weiler-Thiessen, David, SASKATOON,
	Engineering)
Date: Wed, 20 Jul 2011 13:07:33 -0500
Subject: [antlr-interest] Processing a collection of tokens
Message-ID: <733EAE2B81DE7E46B9021523960043A6010A9E8D@USSTLE0006.nestle.com>

Hi

 

I have the following in a tree grammar that works as I expect:

 

columnNameList returns [List names]    

                :               ^(COLUMN_NAMES ids+=ID+) 

                { 

                                $names = new ArrayList();

                                for( Object tree : $ids ) {

                                                $names.add( ((CommonTree)tree).getText().toUpperCase() );

                                }

                }

                ;

 

What I am wondering is if there is a built in way in ANTLR to loop over the list of ID tokens, to perform some common function, and then return that list.  I guess I am wondering if there is some built in 'collect' function similar to the collect method that is available on collections in languages like Groovy or Smalltalk.

 

I would prefer something like the following instead:

 

                $names = $ids.collect{ it.text.toUpperCase() }

 

How is this usually handled? 

David Weiler-Thiessen 
Nestl? Purina PetCare 
phone: 306-933-0232 
cell: 306-291-9770 

This e-mail, its electronic document attachments, and the contents of its website linkages may contain confidential information. This information is intended solely for use by the individual or entity to whom it is addressed. If you have received this information in error, please notify the sender immediately and promptly destroy the material and any accompanying attachments from your system.


From parrt at cs.usfca.edu  Wed Jul 20 12:30:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jul 2011 12:30:31 -0700
Subject: [antlr-interest] please try these jars
Message-ID: <FB18DCAC-6142-4234-A254-BEE22E0CC63D@cs.usfca.edu>


Hi,Before I announce 3.4 release, can somebody try out these jars just make sure everything is cool? The first jar is the complete ANTLR 3.4 tool/runtime and ST 4.0.4 which should be able to run the tool and the generated code unless you are using output=template:

http://antlr.org/download/antlr-3.4-complete-no-antlrv2.jar

for backward compatibility reasons, that still generates code that uses ST v3.  If you don't care about including ANTLR v2 stuff and/or unique output=template, then you can grab this:

http://antlr.org/download/antlr-3.4-complete.jar

here is the source plus those binaries:

http://antlr.org/download/antlr-3.4.tar.gz

thanks goes out to Jim Idle for building all the stuff and uttering all the maven incantations.

Ter

From jmurray at aerotech.com  Wed Jul 20 13:37:56 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Wed, 20 Jul 2011 16:37:56 -0400
Subject: [antlr-interest] Changes to C runtime for 3.4
In-Reply-To: <6891fc889c7f39017adca219ac0d50c2@mail.gmail.com>
References: <6891fc889c7f39017adca219ac0d50c2@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD54@EXCH-VIRTUAL.aerotechad.com>

Hi Jim,

On 6/24/2011 12:42 PM, Jim Idle wrote:
> Please note that the documentation for the C runtime in 3.4 is yet to be
> updated. In the meantime, if you wish to try it, then there is one change
> that you need to be aware of:
>
>
>
> 1)      The distinction between ASCII and UCS2 input streams is now removed
> and there is a single function: antlr3FileStreamNew() to replace the file
> related input streams and a function? antlr3StringStreamNew to replace the
> memory related input streams. Prototypes and usage:
>
>
>
>
>
> antlr3FileStreamNew(pANTLR3_UINT8 fileName, ANTLR3_UINT32 encoding)
>
> antlr3StringStreamNew(pANTLR3_UINT8 data, ANTLR3_UINT32 encoding,
> ANTLR3_UINT32 size, pANTLR3_UINT8 name)
>
>
>
> fileName ? path to input file in 8 bit characters. Used to call fopen()
>
> data ? pointer to input data in any encoded form (note that I will change
> this to void * in the next beta/release)
>
> size ? the size of the input data (always bytesm regardless of encoding)
>
> name ? The name to use for the string stream (passed to error handlers for
> instance) may be NULL
It looks like the name argument cannot be NULL. I tried this and it
promptly crashed. It looks like the access violation occurs in the
strlen() function within the newStr8() function. If I pass in any old
string, it works of course. I have no use for this name, so I'd like to
pass NULL. Is this a bug, or should I just be passing an empty string
instead? I'm using ANTLR3_ENC_8BIT, if that matters.

Thanks,

- Justin

>
>
> Then the encoding values are:
>
>
>
> ANTLR3_ENC_8BIT    ? 8 bit encoding (ASCII/latin1/etc) (replaces the
> existing ASCII stream)
>
> ANTLR3_ENC_UTF8    ? UTF8 encoding  (eats any BOM that may be present)
>
> ANTLR3_ENC_UTF16   ? UTF16 encoding (also handles UCS2) ? determine byte
> order from BOM or machine natural without BOM
>
> ANTLR3_ENC_UTF16BE ? UTF16 encoding (also handles UCS2), big endian but no
> BOM
>
> ANTLR3_ENC_UTF16LE ? UTF16 encoding (also handles UCS2), little endian but
> no BOM
>
> ANTLR3_ENC_UTF32   - UTF32 encoding ? determine byte order from BOM or
> machine natural without BOM
>
> ANTLR3_ENC_UTF32BE - UTF32 encoding ? big endian but no BOM
>
> ANTLR3_ENC_UTF32LE - UTF32 encoding ? little endian but no BOM
>
> ANTLR3_ENC_EBCDIC  - EBCDIC encoding (8 bit).
>
>
>
> Note that EBCDIC encoding means that the input is in EBCDIC and it is not
> changed. The LA() method for EBCDIC encoding converts a character to ASCII
> before matching. Therefore the pointers to the first character of the token
> in the input stream remain pointing at EBCDIC and you are responsible for
> any conversion of the token strings if you need to convert them.
>
>
>
> Encoding is as per the Unicode standards and supports the full Unicode
> character range and all surrogate pairs are decoded in UTF16. Note however
> that for performance reasons, errors in the encoding are usually ignored
> (for instance a valid hi surrogate that does not have a lo surrogate), but
> that invalid sequences that may not be ignored, may screw up your input. You
> can of course override any of the LA methods and report such things as
> errors, should you need to do so. The purpose of LA() is to return the 32
> bit integer Unicode code point for the specified character ? how it does
> that is irrelevant to the lexer, which is just matching 32 but numbers. This
> means you should not code your lexer to match surrogates, just the code
> points.
>
>
>
> Jim
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jmurray at aerotech.com  Wed Jul 20 13:45:47 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Wed, 20 Jul 2011 16:45:47 -0400
Subject: [antlr-interest] please try these jars
In-Reply-To: <FB18DCAC-6142-4234-A254-BEE22E0CC63D@cs.usfca.edu>
References: <FB18DCAC-6142-4234-A254-BEE22E0CC63D@cs.usfca.edu>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD55@EXCH-VIRTUAL.aerotechad.com>

I gave antlr-3.4-complete-no-antlrv2.jar a try, and it appears to be 
working perfectly with my v3.3 grammar! Great work as usual guys.

-- Justin


On 7/20/2011 3:30 PM, Terence Parr wrote:
> Hi,Before I announce 3.4 release, can somebody try out these jars just make sure everything is cool? The first jar is the complete ANTLR 3.4 tool/runtime and ST 4.0.4 which should be able to run the tool and the generated code unless you are using output=template:
>
> http://antlr.org/download/antlr-3.4-complete-no-antlrv2.jar
>
> for backward compatibility reasons, that still generates code that uses ST v3.  If you don't care about including ANTLR v2 stuff and/or unique output=template, then you can grab this:
>
> http://antlr.org/download/antlr-3.4-complete.jar
>
> here is the source plus those binaries:
>
> http://antlr.org/download/antlr-3.4.tar.gz
>
> thanks goes out to Jim Idle for building all the stuff and uttering all the maven incantations.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From parrt at cs.usfca.edu  Wed Jul 20 13:55:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jul 2011 13:55:52 -0700
Subject: [antlr-interest] please try these jars
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD55@EXCH-VIRTUAL.aerotechad.com>
References: <FB18DCAC-6142-4234-A254-BEE22E0CC63D@cs.usfca.edu>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD55@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <6CE5C6EB-A664-4377-B096-C97EEFD8459B@cs.usfca.edu>

woot! and no ANTLR v2 dependence. tasty.
Ter
On Jul 20, 2011, at 1:45 PM, Justin Murray wrote:

> I gave antlr-3.4-complete-no-antlrv2.jar a try, and it appears to be 
> working perfectly with my v3.3 grammar! Great work as usual guys.
> 
> -- Justin
> 
> 
> On 7/20/2011 3:30 PM, Terence Parr wrote:
>> Hi,Before I announce 3.4 release, can somebody try out these jars just make sure everything is cool? The first jar is the complete ANTLR 3.4 tool/runtime and ST 4.0.4 which should be able to run the tool and the generated code unless you are using output=template:
>> 
>> http://antlr.org/download/antlr-3.4-complete-no-antlrv2.jar
>> 
>> for backward compatibility reasons, that still generates code that uses ST v3.  If you don't care about including ANTLR v2 stuff and/or unique output=template, then you can grab this:
>> 
>> http://antlr.org/download/antlr-3.4-complete.jar
>> 
>> here is the source plus those binaries:
>> 
>> http://antlr.org/download/antlr-3.4.tar.gz
>> 
>> thanks goes out to Jim Idle for building all the stuff and uttering all the maven incantations.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From David.Weiler-Thiessen at purina.nestle.com  Wed Jul 20 14:30:58 2011
From: David.Weiler-Thiessen at purina.nestle.com (Weiler-Thiessen, David, SASKATOON,
	Engineering)
Date: Wed, 20 Jul 2011 16:30:58 -0500
Subject: [antlr-interest] Is ANTLRWORKS IDEA Plugin still being maintained?
Message-ID: <733EAE2B81DE7E46B9021523960043A6010A9F98@USSTLE0006.nestle.com>

Hi 

 

I have been using the ANTLRWORKS plugin for IDEA for a some time now.  It seems like it is no longer being supported, as the version of ANTLRWorks is 1.3.1, and when I look at the ANTLR website, it looks like ANTLRWorks is at v1.4.2 now.

 

Has support for the plugin stopped?

 

If so, are most people just using ANTLRWorks as an external tool to their favoured IDE then?  I've just getting back into active ANTLR development again, and trying to figure out people are doing.

 

Thx.

 

David Weiler-Thiessen 
Nestl? Purina PetCare 
phone: 306-933-0232 
cell: 306-291-9770 

This e-mail, its electronic document attachments, and the contents of its website linkages may contain confidential information. This information is intended solely for use by the individual or entity to whom it is addressed. If you have received this information in error, please notify the sender immediately and promptly destroy the material and any accompanying attachments from your system.


From parrt at cs.usfca.edu  Wed Jul 20 14:48:50 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jul 2011 14:48:50 -0700
Subject: [antlr-interest] Is ANTLRWORKS IDEA Plugin still being
	maintained?
In-Reply-To: <733EAE2B81DE7E46B9021523960043A6010A9F98@USSTLE0006.nestle.com>
References: <733EAE2B81DE7E46B9021523960043A6010A9F98@USSTLE0006.nestle.com>
Message-ID: <0BCD91FD-9D4B-4C95-819E-ECE5DF66BF68@cs.usfca.edu>

the plug in is no longer supported. sorry.
Ter
On Jul 20, 2011, at 2:30 PM, Weiler-Thiessen, David, SASKATOON, Engineering wrote:

> Hi 
> 
> 
> 
> I have been using the ANTLRWORKS plugin for IDEA for a some time now.  It seems like it is no longer being supported, as the version of ANTLRWorks is 1.3.1, and when I look at the ANTLR website, it looks like ANTLRWorks is at v1.4.2 now.
> 
> 
> 
> Has support for the plugin stopped?
> 
> 
> 
> If so, are most people just using ANTLRWorks as an external tool to their favoured IDE then?  I've just getting back into active ANTLR development again, and trying to figure out people are doing.
> 
> 
> 
> Thx.
> 
> 
> 
> David Weiler-Thiessen 
> Nestl? Purina PetCare 
> phone: 306-933-0232 
> cell: 306-291-9770 
> 
> This e-mail, its electronic document attachments, and the contents of its website linkages may contain confidential information. This information is intended solely for use by the individual or entity to whom it is addressed. If you have received this information in error, please notify the sender immediately and promptly destroy the material and any accompanying attachments from your system.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Jul 20 15:16:03 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 20 Jul 2011 15:16:03 -0700
Subject: [antlr-interest] ANTLR v3.4 released!
Message-ID: <D8ED421F-6B08-4164-B410-337DFBAA161B@cs.usfca.edu>

Get it while it's hot:

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+3.4+Release+Notes

The primary reason for this release is to remove the dependency on ANTLR v2. ANTLR v3.3 and earlier were written using ANTLR v2 grammars and StringTemplate v3, which itself had an ANTLR v2 dependency. Because the v2 license was unclean, projects such eclipse could not include ANTLR v3. This version, 3.4, is completely BSD clean and all additions were subject to the click wrap license or the ANTLR contributors certificate of origin. ANTLR 3.4 written using StringTemplate 4.0.4, but generated parsers that built templates still use StringTemplate v3 for backward compatibility. A big thanks goes to Sam Harwell, for converting all of the v2 ANTLR grammars in ANTLR v3 to v3!  Thanks to Jim Idle for maven support.

Terence



From gary at sumwise.com  Wed Jul 20 15:43:45 2011
From: gary at sumwise.com (Gary Miller)
Date: Thu, 21 Jul 2011 08:43:45 +1000
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
References: <4E270666.7030100@oracle.com>
	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
Message-ID: <CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>

I often find it usefully to print out the AST (toStringTree in Java) and
walk through the tree grammar manually.

Regards
Gary

On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer <lgcraymer at yahoo.com> wrote:

> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
> location information attached so no line/column error reporting.  Mostly the
> error says that you started a subtree that your grammar does not match,
> probably an LPAREN or RPAREN rooted subtree from your report of cases where
> you do or do not get the error.
>
> --Loring
>
>
>
> >________________________________
> >From: srinivasan karthikeyan pitchai <
> srinivasan.karthikeyan.pitchai at oracle.com>
> >To: antlr-interest at antlr.org
> >Cc: Terence Parr <parrt at cs.usfca.edu>
> >Sent: Wednesday, July 20, 2011 9:46 AM
> >Subject: [antlr-interest] Deciphering  the TreeWalker error message  ...
> >
> >Hi Folks,
> >What does the ANTLR walker error message like the following mean?
> >
> >no viable alt; token=[@-1,0:0='DOWN'
> >
> >
> >Would appreciate any general guidance/suggestions to zero in on the
> >errors of this nature.
> >
> >Thanks,
> >Vasan
> >
> >
> >Input sql:
> >-----------
> >
> >select (1) from table1
> >where 2 between 3 and 4;
> >
> >
> >Error Message:
> >--------------------
> >
> >TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
> >query_term, query_expression, query, query_unit, where_clause,
> >condition_list, condition_subexpression, condition] Walker1: no viable
> >alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
> >decision=<<590:1: condition options {backtrack=true; } : ( ^(
> >comparison_operator ( condition_quantifier )? c1= condition c2=
> >condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition c2=
> >condition ) ) | ^( condition_operator expression c1= condition ^( ESCAPE
> >escape_character ) ) | ^( condition_operator expression c1= condition )
> >| ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
> >condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) | ^(
> >IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^( IS
> >expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED ) | ^( IS
> >expression UNTIL_CLOSED ) | expression | condition_list );>>
> context=......
> >
> >
> >However the following SQL, that just doesn't have the parenthesis around
> >1,  works fine!!!
> >
> >select (1) from table1
> >where 2 between 3 and 4;
> >
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Wed Jul 20 15:46:04 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jul 2011 15:46:04 -0700
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
References: <4E270666.7030100@oracle.com>	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
Message-ID: <7d488c73a792bb7adaf027763d822acf@mail.gmail.com>

Or use the dot description producing methods and create a nice graphic
with graphviz. Much easier to see that way.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gary Miller
> Sent: Wednesday, July 20, 2011 3:44 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
> ...
>
> I often find it usefully to print out the AST (toStringTree in Java)
> and walk through the tree grammar manually.
>
> Regards
> Gary
>
> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer <lgcraymer at yahoo.com>
> wrote:
>
> > "UP" and "DOWN" tokens (start/end of child list for tree) do not have
> > location information attached so no line/column error reporting.
> > Mostly the error says that you started a subtree that your grammar
> > does not match, probably an LPAREN or RPAREN rooted subtree from your
> > report of cases where you do or do not get the error.
> >
> > --Loring
> >
> >
> >
> > >________________________________
> > >From: srinivasan karthikeyan pitchai <
> > srinivasan.karthikeyan.pitchai at oracle.com>
> > >To: antlr-interest at antlr.org
> > >Cc: Terence Parr <parrt at cs.usfca.edu>
> > >Sent: Wednesday, July 20, 2011 9:46 AM
> > >Subject: [antlr-interest] Deciphering  the TreeWalker error message
> ...
> > >
> > >Hi Folks,
> > >What does the ANTLR walker error message like the following mean?
> > >
> > >no viable alt; token=[@-1,0:0='DOWN'
> > >
> > >
> > >Would appreciate any general guidance/suggestions to zero in on the
> > >errors of this nature.
> > >
> > >Thanks,
> > >Vasan
> > >
> > >
> > >Input sql:
> > >-----------
> > >
> > >select (1) from table1
> > >where 2 between 3 and 4;
> > >
> > >
> > >Error Message:
> > >--------------------
> > >
> > >TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
> > >query_term, query_expression, query, query_unit, where_clause,
> > >condition_list, condition_subexpression, condition] Walker1: no
> > >viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
> > >decision=<<590:1: condition options {backtrack=true; } : ( ^(
> > >comparison_operator ( condition_quantifier )? c1= condition c2=
> > >condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
> > >c2= condition ) ) | ^( condition_operator expression c1= condition
> ^(
> > >ESCAPE escape_character ) ) | ^( condition_operator expression c1=
> > >condition )
> > >| ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
> > >condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
> > >^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
> > >IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
> |
> > >^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
> > context=......
> > >
> > >
> > >However the following SQL, that just doesn't have the parenthesis
> > >around 1,  works fine!!!
> > >
> > >select (1) from table1
> > >where 2 between 3 and 4;
> > >
> > >
> > >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From dejas9000 at gmail.com  Wed Jul 20 16:37:47 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Wed, 20 Jul 2011 18:37:47 -0500
Subject: [antlr-interest] Is there a way to temporarily turn off actions?
Message-ID: <CAEAw34Psbt4JXBRuGSuW4Zwugsp4ZqDR+gPSvm8mh4D4oec8Cg@mail.gmail.com>

I have a grammar file with lots of actions.  These actions are giving me
problems at the moment.  Is there a way I can flag ANTLR to ignore my
actions and generate a clean parser and lexer without me having to go
through the grammar file and comment out all my actions?

Thanks.

From vlad at demoninsight.com  Wed Jul 20 17:25:16 2011
From: vlad at demoninsight.com (Vlad Roubtsov)
Date: Wed, 20 Jul 2011 19:25:16 -0500
Subject: [antlr-interest] C target: overriding parser and lexer error
	handlers
Message-ID: <CAM-qmzb6ExQ_D7sm7j-KnOeRUoiVDADtGfvmf-hyJemZWig-Yg@mail.gmail.com>

Greetings,

I am new to ANTLR but have extensive experience with JavaCC. With some
difficulty (section '@apifuncs' does not appear to be documented but was
mentioned in this list) I can intercept parser errors with my own
implementation of displayRecognitionError():

@parser::apifuncs
{
    RECOGNIZER->displayRecognitionError = <my parser error function>;
}

However, lexer errors continued to cause messages to be printed to stderr.
After some more poking around the source code the following seemed to work:

@lexer::apifuncs
{
    LEXER->rec->displayRecognitionError = <my lexer error function>;
}

My question: are these @(lexer|parser)::apifuncs section declarations the
supported way to do this? (@members does not work).

Thank you,
Vlad

From vlad at demoninsight.com  Wed Jul 20 17:59:26 2011
From: vlad at demoninsight.com (Vlad Roubtsov)
Date: Wed, 20 Jul 2011 19:59:26 -0500
Subject: [antlr-interest] C target: overriding parser and lexer error
	handlers
In-Reply-To: <CAM-qmzb6ExQ_D7sm7j-KnOeRUoiVDADtGfvmf-hyJemZWig-Yg@mail.gmail.com>
References: <CAM-qmzb6ExQ_D7sm7j-KnOeRUoiVDADtGfvmf-hyJemZWig-Yg@mail.gmail.com>
Message-ID: <CAM-qmzZnVJnzC-i3mrA9AfUbCNfeovmGcptocH9fHrgTEyxkug@mail.gmail.com>

I think can answer my own question: there is a reference to apifuncs at
http://antlr.org/api/C/group__apistructures.html (but not at
http://www.antlr.org/api/C/atsections.html).

On Wed, Jul 20, 2011 at 7:25 PM, Vlad Roubtsov <vlad at demoninsight.com>wrote:

> Greetings,
>
> I am new to ANTLR but have extensive experience with JavaCC. With some
> difficulty (section '@apifuncs' does not appear to be documented but was
> mentioned in this list) I can intercept parser errors with my own
> implementation of displayRecognitionError():
>
> @parser::apifuncs
> {
>     RECOGNIZER->displayRecognitionError = <my parser error function>;
> }
>
> However, lexer errors continued to cause messages to be printed to stderr.
> After some more poking around the source code the following seemed to work:
>
> @lexer::apifuncs
> {
>     LEXER->rec->displayRecognitionError = <my lexer error function>;
> }
>
> My question: are these @(lexer|parser)::apifuncs section declarations the
> supported way to do this? (@members does not work).
>
> Thank you,
> Vlad
>

From walton909 at gmail.com  Wed Jul 20 18:03:37 2011
From: walton909 at gmail.com (Richard Walton)
Date: Thu, 21 Jul 2011 02:03:37 +0100
Subject: [antlr-interest] Antlr C target with LibXML
Message-ID: <CAHpQB8W63QFRVYjavrJTY_udMXN9XVWZEFAV-UEfCLRz2AsX7A@mail.gmail.com>

Forgive me if this is not the correct etiquette for asking questions - This
is the first mailing list I've subscribed to.  I'm having a problem
compiling an application using LibXML2 (http://xmlsoft.org/) with a C
lexer/grammar generated from ANTLR.  My problems are documented here:
http://stackoverflow.com/questions/6769548/antlr-c-target-and-xmllib

I would be very grateful for any help in fixing the problem.

Kind regards,
Richard

From vlad at demoninsight.com  Wed Jul 20 18:49:39 2011
From: vlad at demoninsight.com (Vlad)
Date: Wed, 20 Jul 2011 20:49:39 -0500
Subject: [antlr-interest] C target: unhelpful error messages from the
 default error handler in trivial cases
Message-ID: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>

Greetings,

Like apparently many new ANTLR users, I've borrowed the implementation from
the default displayRecognitionError() to implement my own version. Somewhat
unfortunately, this version generates unhelpful/random errors in rather
trivial cases. Here is a full example:

grammar testerrors;

options
{
    language='C';
}

NAME    :   ( 'a'..'z' | 'A'..'Z' | '0'..'9' )+ ;
WS      :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;

parse:
    decl ( options { greedy = true; }: ',' decl )* ','? EOF
    ;

decl:
    NAME ':' type
    ;

type:
    'int' | 'float'
    ;

Feeding "A : badtype" into parse() results in:

-memory-(1)  : error 10 : Unexpected token, at offset 3
    near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0> Line:
1 LinePos:3]
     : Missing <invalid>

What puzzles me is where the <invalid> comes from. It would seem easy to
compute that either 'int' or 'float' token was expected. In the stock error
handler this comes from tokenNames[ex->expecting] evaluated for
ex->expecting being 0. What change to the default implementation is
necessary to make this work correctly?

Similary, attempting to parse "A :" results in:

-unknown source-(1)  : error 10 : Unexpected token, at offset -1
    near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0> Line:
1 LinePos:1]
     : Missing <invalid>

Note how the source became "unknown" and the offset became -1. In the
default handler this is determined by "streamName" as follows:

if (ex->streamName == NULL)
{
if (((pANTLR3_COMMON_TOKEN)(ex->token))->type == ANTLR3_TOKEN_EOF)
{
ANTLR3_FPRINTF(stderr, "-end of input-(");
}
else
{
ANTLR3_FPRINTF(stderr, "-unknown source-(");
}
}
else
{
ftext = ex->streamName->to8(ex->streamName);
ANTLR3_FPRINTF(stderr, "%s(", ftext->chars);
}

and it is frankly unexpected that a slightly different match error type
should have this impact since it does not impact the branches taken here at
all (that happens later in the function). Anyone trying to take this
function as a blueprint for their own handler would conclude that
ex->streamName is NULL in one case but not the other and that is set
somewhere *outside* of displayRecognitionError(): the problem of fixing the
default implementation begins to feel like it might snowball into patching
the runtime itself.

As the last example, trying to parse "A B" results in:

-memory-(1)  : error 1 : Unexpected token, at offset 1
    near [Index: 2 (Start: 15787098-Stop: 15787098) ='B', type<4> Line: 1
LinePos:1]
     : syntax error...

The start/stop indices are bogus, i.e. some uninitialized variables -- on
repeated parses they change randomly.

My second question follows. Good error handling is a big selling point of
ANTLR, but with all due respect it hardly seems so for the C target. Is
there documentation available for all context relevant to handling main
mismatch error conditions? I have scanned everything in the available
examples download and there are no examples of customizing the error handler
that I can find. Alternatively, could someone share a workable version of
their own that might be a good learning example?

Thank you,
Vlad

From jimi at temporal-wave.com  Wed Jul 20 19:38:37 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jul 2011 19:38:37 -0700
Subject: [antlr-interest] C target: overriding parser and lexer error
	handlers
In-Reply-To: <CAM-qmzb6ExQ_D7sm7j-KnOeRUoiVDADtGfvmf-hyJemZWig-Yg@mail.gmail.com>
References: <CAM-qmzb6ExQ_D7sm7j-KnOeRUoiVDADtGfvmf-hyJemZWig-Yg@mail.gmail.com>
Message-ID: <af58f80795c222cc9f2c3394ca9c5015@mail.gmail.com>

Yes - they are documented in the C API documentation on the front page.
However, you should engineer your lexer so that it does not create errors,
which is usually possible with some work.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vlad Roubtsov
> Sent: Wednesday, July 20, 2011 5:25 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target: overriding parser and lexer error
> handlers
>
> Greetings,
>
> I am new to ANTLR but have extensive experience with JavaCC. With some
> difficulty (section '@apifuncs' does not appear to be documented but
> was mentioned in this list) I can intercept parser errors with my own
> implementation of displayRecognitionError():
>
> @parser::apifuncs
> {
>     RECOGNIZER->displayRecognitionError = <my parser error function>; }
>
> However, lexer errors continued to cause messages to be printed to
> stderr.
> After some more poking around the source code the following seemed to
> work:
>
> @lexer::apifuncs
> {
>     LEXER->rec->displayRecognitionError = <my lexer error function>; }
>
> My question: are these @(lexer|parser)::apifuncs section declarations
> the supported way to do this? (@members does not work).
>
> Thank you,
> Vlad
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jul 20 19:39:44 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jul 2011 19:39:44 -0700
Subject: [antlr-interest] C target: overriding parser and lexer error
	handlers
In-Reply-To: <CAM-qmzZnVJnzC-i3mrA9AfUbCNfeovmGcptocH9fHrgTEyxkug@mail.gmail.com>
References: <CAM-qmzb6ExQ_D7sm7j-KnOeRUoiVDADtGfvmf-hyJemZWig-Yg@mail.gmail.com>
	<CAM-qmzZnVJnzC-i3mrA9AfUbCNfeovmGcptocH9fHrgTEyxkug@mail.gmail.com>
Message-ID: <3b7acb1a89f78ddc62a9e672e6d5be60@mail.gmail.com>

Actually it looks like an error in the doxygen file that is causing the
apidocs to cut short.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vlad Roubtsov
> Sent: Wednesday, July 20, 2011 5:59 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C target: overriding parser and lexer
> error handlers
>
> I think can answer my own question: there is a reference to apifuncs at
> http://antlr.org/api/C/group__apistructures.html (but not at
> http://www.antlr.org/api/C/atsections.html).
>
> On Wed, Jul 20, 2011 at 7:25 PM, Vlad Roubtsov
> <vlad at demoninsight.com>wrote:
>
> > Greetings,
> >
> > I am new to ANTLR but have extensive experience with JavaCC. With
> some
> > difficulty (section '@apifuncs' does not appear to be documented but
> > was mentioned in this list) I can intercept parser errors with my own
> > implementation of displayRecognitionError():
> >
> > @parser::apifuncs
> > {
> >     RECOGNIZER->displayRecognitionError = <my parser error function>;
> > }
> >
> > However, lexer errors continued to cause messages to be printed to
> stderr.
> > After some more poking around the source code the following seemed to
> work:
> >
> > @lexer::apifuncs
> > {
> >     LEXER->rec->displayRecognitionError = <my lexer error function>;
> }
> >
> > My question: are these @(lexer|parser)::apifuncs section declarations
> > the supported way to do this? (@members does not work).
> >
> > Thank you,
> > Vlad
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jul 20 19:43:24 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jul 2011 19:43:24 -0700
Subject: [antlr-interest] Antlr C target with LibXML
In-Reply-To: <CAHpQB8W63QFRVYjavrJTY_udMXN9XVWZEFAV-UEfCLRz2AsX7A@mail.gmail.com>
References: <CAHpQB8W63QFRVYjavrJTY_udMXN9XVWZEFAV-UEfCLRz2AsX7A@mail.gmail.com>
Message-ID: <44de077b338303bfde74c5b270c564a2@mail.gmail.com>

The header files are interfering with each other. You probably need to
separate your logic from your parser .g file. However, unless you post all
of your project it is hard to see why. Look at the lines indicated as in
error and you will probably find some symbol that ANTLR defines that
libXML is also defining. When you know what it is, you can possibly undef
it before including the libXML headers. I will also try to make time
tomorrow to have a look at this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Richard Walton
> Sent: Wednesday, July 20, 2011 6:04 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Antlr C target with LibXML
>
> Forgive me if this is not the correct etiquette for asking questions -
> This is the first mailing list I've subscribed to.  I'm having a
> problem compiling an application using LibXML2 (http://xmlsoft.org/)
> with a C lexer/grammar generated from ANTLR.  My problems are
> documented here:
> http://stackoverflow.com/questions/6769548/antlr-c-target-and-xmllib
>
> I would be very grateful for any help in fixing the problem.
>
> Kind regards,
> Richard
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jul 20 19:53:53 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jul 2011 19:53:53 -0700
Subject: [antlr-interest] C target: unhelpful error messages from the
 default error handler in trivial cases
In-Reply-To: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
References: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
Message-ID: <254e3affa0082f1f82c6314fb83a6195@mail.gmail.com>

The standard error handler can only do its best as a generic handler. When
your grammar is crap, and you feed it crap, then guess what?

Also, your questions are not "with all due respect" at all; you don't
understand what is going on, but would rather blame the generic error
handler than your lack of knowledge (which you will improve if you offer a
little more respect). The recovery mechanisms are the same for C as Java.

However, if you spend some more time reading, then you will know to use
real tokens and not inline 'int' and 'float'. You would also have read the
long article on error recovery techniques in the Wiki and then know why
you are dropping out of the loop. Read the C code a bit and you will see
where the missing and invalid come from and would say "ahhhhh".

I love people spouting off about how bad things are, when they have made
no effort to look in to the details. The type of exception is generated by
the ANTLR analysis and not the C runtime. Or perhaps you have spent all
the effort you can?

In short then, I cannot know how you want to report errors, so there are a
bunch of examples of finding out information. But the type of exception
depends on how you construct your grammar.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vlad
> Sent: Wednesday, July 20, 2011 6:50 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target: unhelpful error messages from the
> default error handler in trivial cases
>
> Greetings,
>
> Like apparently many new ANTLR users, I've borrowed the implementation
> from the default displayRecognitionError() to implement my own version.
> Somewhat unfortunately, this version generates unhelpful/random errors
> in rather trivial cases. Here is a full example:
>
> grammar testerrors;
>
> options
> {
>     language='C';
> }
>
> NAME    :   ( 'a'..'z' | 'A'..'Z' | '0'..'9' )+ ;
> WS      :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;
>
> parse:
>     decl ( options { greedy = true; }: ',' decl )* ','? EOF
>     ;
>
> decl:
>     NAME ':' type
>     ;
>
> type:
>     'int' | 'float'
>     ;
>
> Feeding "A : badtype" into parse() results in:
>
> -memory-(1)  : error 10 : Unexpected token, at offset 3
>     near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0>
> Line:
> 1 LinePos:3]
>      : Missing <invalid>
>
> What puzzles me is where the <invalid> comes from. It would seem easy
> to compute that either 'int' or 'float' token was expected. In the
> stock error handler this comes from tokenNames[ex->expecting] evaluated
> for
> ex->expecting being 0. What change to the default implementation is
> necessary to make this work correctly?
>
> Similary, attempting to parse "A :" results in:
>
> -unknown source-(1)  : error 10 : Unexpected token, at offset -1
>     near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0>
> Line:
> 1 LinePos:1]
>      : Missing <invalid>
>
> Note how the source became "unknown" and the offset became -1. In the
> default handler this is determined by "streamName" as follows:
>
> if (ex->streamName == NULL)
> {
> if (((pANTLR3_COMMON_TOKEN)(ex->token))->type == ANTLR3_TOKEN_EOF) {
> ANTLR3_FPRINTF(stderr, "-end of input-("); } else {
> ANTLR3_FPRINTF(stderr, "-unknown source-("); } } else { ftext = ex-
> >streamName->to8(ex->streamName);
> ANTLR3_FPRINTF(stderr, "%s(", ftext->chars); }
>
> and it is frankly unexpected that a slightly different match error type
> should have this impact since it does not impact the branches taken
> here at all (that happens later in the function). Anyone trying to take
> this function as a blueprint for their own handler would conclude that
> ex->streamName is NULL in one case but not the other and that is set
> somewhere *outside* of displayRecognitionError(): the problem of fixing
> the default implementation begins to feel like it might snowball into
> patching the runtime itself.
>
> As the last example, trying to parse "A B" results in:
>
> -memory-(1)  : error 1 : Unexpected token, at offset 1
>     near [Index: 2 (Start: 15787098-Stop: 15787098) ='B', type<4> Line:
> 1 LinePos:1]
>      : syntax error...
>
> The start/stop indices are bogus, i.e. some uninitialized variables --
> on repeated parses they change randomly.
>
> My second question follows. Good error handling is a big selling point
> of ANTLR, but with all due respect it hardly seems so for the C target.
> Is there documentation available for all context relevant to handling
> main mismatch error conditions? I have scanned everything in the
> available examples download and there are no examples of customizing
> the error handler that I can find. Alternatively, could someone share a
> workable version of their own that might be a good learning example?
>
> Thank you,
> Vlad
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jul 20 19:54:58 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 20 Jul 2011 19:54:58 -0700
Subject: [antlr-interest] C target: unhelpful error messages from the
 default error handler in trivial cases
In-Reply-To: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
References: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
Message-ID: <b2d6e789b25d662fb0d029b8351af2c2@mail.gmail.com>

Oh BTW - the start/stop random indexes are the addresses in memory, not
offsets, as the documentation states and about 20 past posts explain (and
explain why).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vlad
> Sent: Wednesday, July 20, 2011 6:50 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C target: unhelpful error messages from the
> default error handler in trivial cases
>
> Greetings,
>
> Like apparently many new ANTLR users, I've borrowed the implementation
> from the default displayRecognitionError() to implement my own version.
> Somewhat unfortunately, this version generates unhelpful/random errors
> in rather trivial cases. Here is a full example:
>
> grammar testerrors;
>
> options
> {
>     language='C';
> }
>
> NAME    :   ( 'a'..'z' | 'A'..'Z' | '0'..'9' )+ ;
> WS      :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;
>
> parse:
>     decl ( options { greedy = true; }: ',' decl )* ','? EOF
>     ;
>
> decl:
>     NAME ':' type
>     ;
>
> type:
>     'int' | 'float'
>     ;
>
> Feeding "A : badtype" into parse() results in:
>
> -memory-(1)  : error 10 : Unexpected token, at offset 3
>     near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0>
> Line:
> 1 LinePos:3]
>      : Missing <invalid>
>
> What puzzles me is where the <invalid> comes from. It would seem easy
> to compute that either 'int' or 'float' token was expected. In the
> stock error handler this comes from tokenNames[ex->expecting] evaluated
> for
> ex->expecting being 0. What change to the default implementation is
> necessary to make this work correctly?
>
> Similary, attempting to parse "A :" results in:
>
> -unknown source-(1)  : error 10 : Unexpected token, at offset -1
>     near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0>
> Line:
> 1 LinePos:1]
>      : Missing <invalid>
>
> Note how the source became "unknown" and the offset became -1. In the
> default handler this is determined by "streamName" as follows:
>
> if (ex->streamName == NULL)
> {
> if (((pANTLR3_COMMON_TOKEN)(ex->token))->type == ANTLR3_TOKEN_EOF) {
> ANTLR3_FPRINTF(stderr, "-end of input-("); } else {
> ANTLR3_FPRINTF(stderr, "-unknown source-("); } } else { ftext = ex-
> >streamName->to8(ex->streamName);
> ANTLR3_FPRINTF(stderr, "%s(", ftext->chars); }
>
> and it is frankly unexpected that a slightly different match error type
> should have this impact since it does not impact the branches taken
> here at all (that happens later in the function). Anyone trying to take
> this function as a blueprint for their own handler would conclude that
> ex->streamName is NULL in one case but not the other and that is set
> somewhere *outside* of displayRecognitionError(): the problem of fixing
> the default implementation begins to feel like it might snowball into
> patching the runtime itself.
>
> As the last example, trying to parse "A B" results in:
>
> -memory-(1)  : error 1 : Unexpected token, at offset 1
>     near [Index: 2 (Start: 15787098-Stop: 15787098) ='B', type<4> Line:
> 1 LinePos:1]
>      : syntax error...
>
> The start/stop indices are bogus, i.e. some uninitialized variables --
> on repeated parses they change randomly.
>
> My second question follows. Good error handling is a big selling point
> of ANTLR, but with all due respect it hardly seems so for the C target.
> Is there documentation available for all context relevant to handling
> main mismatch error conditions? I have scanned everything in the
> available examples download and there are no examples of customizing
> the error handler that I can find. Alternatively, could someone share a
> workable version of their own that might be a good learning example?
>
> Thank you,
> Vlad
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From vlad at demoninsight.com  Wed Jul 20 20:41:29 2011
From: vlad at demoninsight.com (Vlad)
Date: Wed, 20 Jul 2011 22:41:29 -0500
Subject: [antlr-interest] C target: unhelpful error messages from the
	default error handler in trivial cases
In-Reply-To: <254e3affa0082f1f82c6314fb83a6195@mail.gmail.com>
References: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
	<254e3affa0082f1f82c6314fb83a6195@mail.gmail.com>
Message-ID: <1F3B6C65-DD98-4BBC-8795-68E455745988@demoninsight.com>


On Jul 20, 2011, at 9:53 PM, Jim Idle wrote:

> The standard error handler can only do its best as a generic handler. When
> your grammar is crap, and you feed it crap, then guess what?

Fair enough (I guess), assuming you can elaborate on why my simple grammar example is "crap"?

> 
> Also, your questions are not "with all due respect" at all; you don't
> understand what is going on, but would rather blame the generic error
> handler than your lack of knowledge (which you will improve if you offer a
> little more respect). The recovery mechanisms are the same for C as Java.

I do not deny that there are many things I do not yet understand about ANTLR, but I did spend a couple of days reading through the source code and stepping through scenarios in gdb. I've read most of the chapters from the ANTLR ref book and most of the LIP book. I have also searched the mailing list archives for tips on C targets. I am not a grammar beginner by a long shot. The point I am trying to make is I would like to *learn* what is going on with ANTLR specifically and it seems that the initial barrier is somewhat high. 

> However, if you spend some more time reading, then you will know to use
> real tokens and not inline 'int' and 'float'.

Are you referring to using something along the lines of

tokens
{
	INT = 'int';
	FLOAT = 'float'
}
? I have tried that as well prior to posting (this is very similar to what you'd do with JavaCC) and it changes nothing. 

Ok, let's nevertheless assume that I am not seeing something obvious and take someone else's grammar. On page 79 of Terrence's book he gives an example nearly identical to mine. If I just add target='C' it becomes:

grammar bookexample;

options
{
    language='C';
}

parse:  type ID (',' ID)* ;
type: 'int' | 'float' ;
ID: 'a'..'z'+ ;

When I feed the parse() non-terminal a string "badtype A" I get an error message error with <invalid> in it, just like I posted earlier. What gives? 


> You would also have read the
> long article on error recovery techniques in the Wiki and then know why
> you are dropping out of the loop. Read the C code a bit and you will see
> where the missing and invalid come from and would say "ahhhhh".

Could you kindly point to the exact article? I see

http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery

but that does not seem helpful enough.

> I love people spouting off about how bad things are, when they have made
> no effort to look in to the details. The type of exception is generated by
> the ANTLR analysis and not the C runtime. Or perhaps you have spent all
> the effort you can?

I hope not, even after your sharp response. The things I've referred to above should convince you that I did make an effort to look into details.

> In short then, I cannot know how you want to report errors, so there are a
> bunch of examples of finding out information. But the type of exception
> depends on how you construct your grammar.

What would be helpful is to know why the default error handler acts so strangely for the simple example I gave and how to fix that. What am I doing wrong to cause it to (a) switch between reporting "memory" or "unknown source" for the source name with minor input changes and (b) report "<invalid>" -- ever?

> Jim
> 
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Vlad
>> Sent: Wednesday, July 20, 2011 6:50 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] C target: unhelpful error messages from the
>> default error handler in trivial cases
>> 
>> Greetings,
>> 
>> Like apparently many new ANTLR users, I've borrowed the implementation
>> from the default displayRecognitionError() to implement my own version.
>> Somewhat unfortunately, this version generates unhelpful/random errors
>> in rather trivial cases. Here is a full example:
>> 
>> grammar testerrors;
>> 
>> options
>> {
>>    language='C';
>> }
>> 
>> NAME    :   ( 'a'..'z' | 'A'..'Z' | '0'..'9' )+ ;
>> WS      :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;
>> 
>> parse:
>>    decl ( options { greedy = true; }: ',' decl )* ','? EOF
>>    ;
>> 
>> decl:
>>    NAME ':' type
>>    ;
>> 
>> type:
>>    'int' | 'float'
>>    ;
>> 
>> Feeding "A : badtype" into parse() results in:
>> 
>> -memory-(1)  : error 10 : Unexpected token, at offset 3
>>    near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0>
>> Line:
>> 1 LinePos:3]
>>     : Missing <invalid>
>> 
>> What puzzles me is where the <invalid> comes from. It would seem easy
>> to compute that either 'int' or 'float' token was expected. In the
>> stock error handler this comes from tokenNames[ex->expecting] evaluated
>> for
>> ex->expecting being 0. What change to the default implementation is
>> necessary to make this work correctly?
>> 
>> Similary, attempting to parse "A :" results in:
>> 
>> -unknown source-(1)  : error 10 : Unexpected token, at offset -1
>>    near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0>
>> Line:
>> 1 LinePos:1]
>>     : Missing <invalid>
>> 
>> Note how the source became "unknown" and the offset became -1. In the
>> default handler this is determined by "streamName" as follows:
>> 
>> if (ex->streamName == NULL)
>> {
>> if (((pANTLR3_COMMON_TOKEN)(ex->token))->type == ANTLR3_TOKEN_EOF) {
>> ANTLR3_FPRINTF(stderr, "-end of input-("); } else {
>> ANTLR3_FPRINTF(stderr, "-unknown source-("); } } else { ftext = ex-
>>> streamName->to8(ex->streamName);
>> ANTLR3_FPRINTF(stderr, "%s(", ftext->chars); }
>> 
>> and it is frankly unexpected that a slightly different match error type
>> should have this impact since it does not impact the branches taken
>> here at all (that happens later in the function). Anyone trying to take
>> this function as a blueprint for their own handler would conclude that
>> ex->streamName is NULL in one case but not the other and that is set
>> somewhere *outside* of displayRecognitionError(): the problem of fixing
>> the default implementation begins to feel like it might snowball into
>> patching the runtime itself.
>> 
>> As the last example, trying to parse "A B" results in:
>> 
>> -memory-(1)  : error 1 : Unexpected token, at offset 1
>>    near [Index: 2 (Start: 15787098-Stop: 15787098) ='B', type<4> Line:
>> 1 LinePos:1]
>>     : syntax error...
>> 
>> The start/stop indices are bogus, i.e. some uninitialized variables --
>> on repeated parses they change randomly.
>> 
>> My second question follows. Good error handling is a big selling point
>> of ANTLR, but with all due respect it hardly seems so for the C target.
>> Is there documentation available for all context relevant to handling
>> main mismatch error conditions? I have scanned everything in the
>> available examples download and there are no examples of customizing
>> the error handler that I can find. Alternatively, could someone share a
>> workable version of their own that might be a good learning example?
>> 
>> Thank you,
>> Vlad
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From srinivasan.karthikeyan.pitchai at oracle.com  Wed Jul 20 22:26:39 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Thu, 21 Jul 2011 10:56:39 +0530
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
References: <4E270666.7030100@oracle.com>	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
Message-ID: <4E27B88F.1010504@oracle.com>

Jim, Gray, Loring,
Thanks for pitching in to give me some direction to focus on.

ANTLR Gurus,

I've solved the issue.  Still I am unable to reason out my fix.

I am providing the offending grammar snippet below and would appreciate 
your rationale to get an insight into the problem and how the fix works!!

The below rule fails with the "

no viable alt; token=[@-1,0:0='DOWN'" error message

compoundExpression:
     ^(sclarSubExpression  conversion_clause)
    | sclarSubExpression
;

However when I change the rule like the following, i.e make the 
conversion_clause optional  and then remove the second alternative every 
thing works fine!!  In my mind both the rules are semantically identical.

compoundExpression:
     ^(sclarSubExpression  conversion_clause?)
;

Thanks a ton.

-Vasan

On 7/21/2011 4:16 AM, Jim Idle wrote:
> Or use the dot description producing methods and create a nice graphic
> with graphviz. Much easier to see that way.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Gary Miller
>> Sent: Wednesday, July 20, 2011 3:44 PM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
>> ...
>>
>> I often find it usefully to print out the AST (toStringTree in Java)
>> and walk through the tree grammar manually.
>>
>> Regards
>> Gary
>>
>> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer<lgcraymer at yahoo.com>
>> wrote:
>>
>>> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
>>> location information attached so no line/column error reporting.
>>> Mostly the error says that you started a subtree that your grammar
>>> does not match, probably an LPAREN or RPAREN rooted subtree from your
>>> report of cases where you do or do not get the error.
>>>
>>> --Loring
>>>
>>>
>>>
>>>> ________________________________
>>>> From: srinivasan karthikeyan pitchai<
>>> srinivasan.karthikeyan.pitchai at oracle.com>
>>>> To: antlr-interest at antlr.org
>>>> Cc: Terence Parr<parrt at cs.usfca.edu>
>>>> Sent: Wednesday, July 20, 2011 9:46 AM
>>>> Subject: [antlr-interest] Deciphering  the TreeWalker error message
>> ...
>>>> Hi Folks,
>>>> What does the ANTLR walker error message like the following mean?
>>>>
>>>> no viable alt; token=[@-1,0:0='DOWN'
>>>>
>>>>
>>>> Would appreciate any general guidance/suggestions to zero in on the
>>>> errors of this nature.
>>>>
>>>> Thanks,
>>>> Vasan
>>>>
>>>>
>>>> Input sql:
>>>> -----------
>>>>
>>>> select (1) from table1
>>>> where 2 between 3 and 4;
>>>>
>>>>
>>>> Error Message:
>>>> --------------------
>>>>
>>>> TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
>>>> query_term, query_expression, query, query_unit, where_clause,
>>>> condition_list, condition_subexpression, condition] Walker1: no
>>>> viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
>>>> decision=<<590:1: condition options {backtrack=true; } : ( ^(
>>>> comparison_operator ( condition_quantifier )? c1= condition c2=
>>>> condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
>>>> c2= condition ) ) | ^( condition_operator expression c1= condition
>> ^(
>>>> ESCAPE escape_character ) ) | ^( condition_operator expression c1=
>>>> condition )
>>>> | ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
>>>> condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
>>>> ^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
>>>> IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
>> |
>>>> ^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
>>> context=......
>>>>
>>>> However the following SQL, that just doesn't have the parenthesis
>>>> around 1,  works fine!!!
>>>>
>>>> select (1) from table1
>>>> where 2 between 3 and 4;
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>>>>
>>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From srinivasan.karthikeyan.pitchai at oracle.com  Wed Jul 20 22:29:08 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Thu, 21 Jul 2011 10:59:08 +0530
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <4E27B88F.1010504@oracle.com>
References: <4E270666.7030100@oracle.com>	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com>
Message-ID: <4E27B924.4050108@oracle.com>

Hi Folks,
I forgot to mention.  The compoundExpression rule has options{backtrack 
= true;}  set that is it reads like

compoundExpression
options {backtrack = true;}
:
      ^(sclarSubExpression  conversion_clause)
     | sclarSubExpression
;

Thanks,
Vasan



On 7/21/2011 10:56 AM, srinivasan karthikeyan pitchai wrote:
> Jim, Gray, Loring,
> Thanks for pitching in to give me some direction to focus on.
>
> ANTLR Gurus,
>
> I've solved the issue.  Still I am unable to reason out my fix.
>
> I am providing the offending grammar snippet below and would appreciate
> your rationale to get an insight into the problem and how the fix works!!
>
> The below rule fails with the "
>
> no viable alt; token=[@-1,0:0='DOWN'" error message
>
> compoundExpression:
>       ^(sclarSubExpression  conversion_clause)
>      | sclarSubExpression
> ;
>
> However when I change the rule like the following, i.e make the
> conversion_clause optional  and then remove the second alternative every
> thing works fine!!  In my mind both the rules are semantically identical.
>
> compoundExpression:
>       ^(sclarSubExpression  conversion_clause?)
> ;
>
> Thanks a ton.
>
> -Vasan
>
> On 7/21/2011 4:16 AM, Jim Idle wrote:
>> Or use the dot description producing methods and create a nice graphic
>> with graphviz. Much easier to see that way.
>>
>> Jim
>>
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Gary Miller
>>> Sent: Wednesday, July 20, 2011 3:44 PM
>>> To: antlr-interest at antlr.org
>>> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
>>> ...
>>>
>>> I often find it usefully to print out the AST (toStringTree in Java)
>>> and walk through the tree grammar manually.
>>>
>>> Regards
>>> Gary
>>>
>>> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer<lgcraymer at yahoo.com>
>>> wrote:
>>>
>>>> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
>>>> location information attached so no line/column error reporting.
>>>> Mostly the error says that you started a subtree that your grammar
>>>> does not match, probably an LPAREN or RPAREN rooted subtree from your
>>>> report of cases where you do or do not get the error.
>>>>
>>>> --Loring
>>>>
>>>>
>>>>
>>>>> ________________________________
>>>>> From: srinivasan karthikeyan pitchai<
>>>> srinivasan.karthikeyan.pitchai at oracle.com>
>>>>> To: antlr-interest at antlr.org
>>>>> Cc: Terence Parr<parrt at cs.usfca.edu>
>>>>> Sent: Wednesday, July 20, 2011 9:46 AM
>>>>> Subject: [antlr-interest] Deciphering  the TreeWalker error message
>>> ...
>>>>> Hi Folks,
>>>>> What does the ANTLR walker error message like the following mean?
>>>>>
>>>>> no viable alt; token=[@-1,0:0='DOWN'
>>>>>
>>>>>
>>>>> Would appreciate any general guidance/suggestions to zero in on the
>>>>> errors of this nature.
>>>>>
>>>>> Thanks,
>>>>> Vasan
>>>>>
>>>>>
>>>>> Input sql:
>>>>> -----------
>>>>>
>>>>> select (1) from table1
>>>>> where 2 between 3 and 4;
>>>>>
>>>>>
>>>>> Error Message:
>>>>> --------------------
>>>>>
>>>>> TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
>>>>> query_term, query_expression, query, query_unit, where_clause,
>>>>> condition_list, condition_subexpression, condition] Walker1: no
>>>>> viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
>>>>> decision=<<590:1: condition options {backtrack=true; } : ( ^(
>>>>> comparison_operator ( condition_quantifier )? c1= condition c2=
>>>>> condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
>>>>> c2= condition ) ) | ^( condition_operator expression c1= condition
>>> ^(
>>>>> ESCAPE escape_character ) ) | ^( condition_operator expression c1=
>>>>> condition )
>>>>> | ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
>>>>> condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
>>>>> ^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
>>>>> IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
>>> |
>>>>> ^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
>>>> context=......
>>>>> However the following SQL, that just doesn't have the parenthesis
>>>>> around 1,  works fine!!!
>>>>>
>>>>> select (1) from table1
>>>>> where 2 between 3 and 4;
>>>>>
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>> address
>>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>> address
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gary at sumwise.com  Wed Jul 20 22:53:18 2011
From: gary at sumwise.com (Gary Miller)
Date: Thu, 21 Jul 2011 15:53:18 +1000
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <4E27B924.4050108@oracle.com>
References: <4E270666.7030100@oracle.com>
	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com> <4E27B924.4050108@oracle.com>
Message-ID: <CAFCNb3gN+KT_GOBGkuEr6zCtpUfBmL+Dq7v+KDfR2uc1yZKfEQ@mail.gmail.com>

Hey Vasan,

Without seeing the reset of the tree walker grammar and the toStringTree of
the AST I'm really just guessing.

The rule looks a bit odd to me.
All my tree walker rules look more like

compoundExpression
:
     ^(SOMETOKEN  conversion_clause)
    | sclarSubExpression
;

I guess you can have rules as the first element of a tree, its just not
something that turns up in my tree grammars.

Regards
Gary

On Thu, Jul 21, 2011 at 3:29 PM, srinivasan karthikeyan pitchai <
srinivasan.karthikeyan.pitchai at oracle.com> wrote:

> Hi Folks,
> I forgot to mention.  The compoundExpression rule has options{backtrack
> = true;}  set that is it reads like
>
> compoundExpression
> options {backtrack = true;}
> :
>      ^(sclarSubExpression  conversion_clause)
>     | sclarSubExpression
> ;
>
> Thanks,
> Vasan
>
>
>
> On 7/21/2011 10:56 AM, srinivasan karthikeyan pitchai wrote:
> > Jim, Gray, Loring,
> > Thanks for pitching in to give me some direction to focus on.
> >
> > ANTLR Gurus,
> >
> > I've solved the issue.  Still I am unable to reason out my fix.
> >
> > I am providing the offending grammar snippet below and would appreciate
> > your rationale to get an insight into the problem and how the fix works!!
> >
> > The below rule fails with the "
> >
> > no viable alt; token=[@-1,0:0='DOWN'" error message
> >
> > compoundExpression:
> >       ^(sclarSubExpression  conversion_clause)
> >      | sclarSubExpression
> > ;
> >
> > However when I change the rule like the following, i.e make the
> > conversion_clause optional  and then remove the second alternative every
> > thing works fine!!  In my mind both the rules are semantically identical.
> >
> > compoundExpression:
> >       ^(sclarSubExpression  conversion_clause?)
> > ;
> >
> > Thanks a ton.
> >
> > -Vasan
> >
> > On 7/21/2011 4:16 AM, Jim Idle wrote:
> >> Or use the dot description producing methods and create a nice graphic
> >> with graphviz. Much easier to see that way.
> >>
> >> Jim
> >>
> >>> -----Original Message-----
> >>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>> bounces at antlr.org] On Behalf Of Gary Miller
> >>> Sent: Wednesday, July 20, 2011 3:44 PM
> >>> To: antlr-interest at antlr.org
> >>> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
> >>> ...
> >>>
> >>> I often find it usefully to print out the AST (toStringTree in Java)
> >>> and walk through the tree grammar manually.
> >>>
> >>> Regards
> >>> Gary
> >>>
> >>> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer<lgcraymer at yahoo.com>
> >>> wrote:
> >>>
> >>>> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
> >>>> location information attached so no line/column error reporting.
> >>>> Mostly the error says that you started a subtree that your grammar
> >>>> does not match, probably an LPAREN or RPAREN rooted subtree from your
> >>>> report of cases where you do or do not get the error.
> >>>>
> >>>> --Loring
> >>>>
> >>>>
> >>>>
> >>>>> ________________________________
> >>>>> From: srinivasan karthikeyan pitchai<
> >>>> srinivasan.karthikeyan.pitchai at oracle.com>
> >>>>> To: antlr-interest at antlr.org
> >>>>> Cc: Terence Parr<parrt at cs.usfca.edu>
> >>>>> Sent: Wednesday, July 20, 2011 9:46 AM
> >>>>> Subject: [antlr-interest] Deciphering  the TreeWalker error message
> >>> ...
> >>>>> Hi Folks,
> >>>>> What does the ANTLR walker error message like the following mean?
> >>>>>
> >>>>> no viable alt; token=[@-1,0:0='DOWN'
> >>>>>
> >>>>>
> >>>>> Would appreciate any general guidance/suggestions to zero in on the
> >>>>> errors of this nature.
> >>>>>
> >>>>> Thanks,
> >>>>> Vasan
> >>>>>
> >>>>>
> >>>>> Input sql:
> >>>>> -----------
> >>>>>
> >>>>> select (1) from table1
> >>>>> where 2 between 3 and 4;
> >>>>>
> >>>>>
> >>>>> Error Message:
> >>>>> --------------------
> >>>>>
> >>>>> TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
> >>>>> query_term, query_expression, query, query_unit, where_clause,
> >>>>> condition_list, condition_subexpression, condition] Walker1: no
> >>>>> viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
> >>>>> decision=<<590:1: condition options {backtrack=true; } : ( ^(
> >>>>> comparison_operator ( condition_quantifier )? c1= condition c2=
> >>>>> condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
> >>>>> c2= condition ) ) | ^( condition_operator expression c1= condition
> >>> ^(
> >>>>> ESCAPE escape_character ) ) | ^( condition_operator expression c1=
> >>>>> condition )
> >>>>> | ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
> >>>>> condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
> >>>>> ^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
> >>>>> IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
> >>> |
> >>>>> ^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
> >>>> context=......
> >>>>> However the following SQL, that just doesn't have the parenthesis
> >>>>> around 1,  works fine!!!
> >>>>>
> >>>>> select (1) from table1
> >>>>> where 2 between 3 and 4;
> >>>>>
> >>>>>
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe:
> >>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >>> address
> >>>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >>> address
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> >>> email-address
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From srinivasan.karthikeyan.pitchai at oracle.com  Wed Jul 20 22:57:33 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Thu, 21 Jul 2011 11:27:33 +0530
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <4E27B924.4050108@oracle.com>
References: <4E270666.7030100@oracle.com>	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com> <4E27B924.4050108@oracle.com>
Message-ID: <4E27BFCD.7060208@oracle.com>

Hi Gurus,
Input:

select (1) from table1
where 2 between 3 and 4;


For what ever it is worth, even the "equivalent" rewrite of the rule 
continues to fail!!

compoundExpression
options {backtrack = true;}

:
     ^(sclarSubExpression  conversion_clause
     | ^(sclarSubExpression blank)
     ;

blank:
;

The only acceptable rule seems to be:

compoundExpression:
       ^(sclarSubExpression  conversion_clause?)
;


Any insight into the nature of the issue and why it works using the 
second rule definition, while it fails with the first rule definition 
would be great.

Many Thanks,
Vasan

On 7/21/2011 10:59 AM, srinivasan karthikeyan pitchai wrote:
> Hi Folks,
> I forgot to mention.  The compoundExpression rule has options{backtrack
> = true;}  set that is it reads like
>
> compoundExpression
> options {backtrack = true;}
> :
>        ^(sclarSubExpression  conversion_clause)
>       | sclarSubExpression
> ;
>
> Thanks,
> Vasan
>
>
>
> On 7/21/2011 10:56 AM, srinivasan karthikeyan pitchai wrote:
>> Jim, Gray, Loring,
>> Thanks for pitching in to give me some direction to focus on.
>>
>> ANTLR Gurus,
>>
>> I've solved the issue.  Still I am unable to reason out my fix.
>>
>> I am providing the offending grammar snippet below and would appreciate
>> your rationale to get an insight into the problem and how the fix works!!
>>
>> The below rule fails with the "
>>
>> no viable alt; token=[@-1,0:0='DOWN'" error message
>>
>> compoundExpression:
>>        ^(sclarSubExpression  conversion_clause)
>>       | sclarSubExpression
>> ;
>>
>> However when I change the rule like the following, i.e make the
>> conversion_clause optional  and then remove the second alternative every
>> thing works fine!!  In my mind both the rules are semantically identical.
>>
>> compoundExpression:
>>        ^(sclarSubExpression  conversion_clause?)
>> ;
>>
>> Thanks a ton.
>>
>> -Vasan
>>
>> On 7/21/2011 4:16 AM, Jim Idle wrote:
>>> Or use the dot description producing methods and create a nice graphic
>>> with graphviz. Much easier to see that way.
>>>
>>> Jim
>>>
>>>> -----Original Message-----
>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>> bounces at antlr.org] On Behalf Of Gary Miller
>>>> Sent: Wednesday, July 20, 2011 3:44 PM
>>>> To: antlr-interest at antlr.org
>>>> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
>>>> ...
>>>>
>>>> I often find it usefully to print out the AST (toStringTree in Java)
>>>> and walk through the tree grammar manually.
>>>>
>>>> Regards
>>>> Gary
>>>>
>>>> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer<lgcraymer at yahoo.com>
>>>> wrote:
>>>>
>>>>> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
>>>>> location information attached so no line/column error reporting.
>>>>> Mostly the error says that you started a subtree that your grammar
>>>>> does not match, probably an LPAREN or RPAREN rooted subtree from your
>>>>> report of cases where you do or do not get the error.
>>>>>
>>>>> --Loring
>>>>>
>>>>>
>>>>>
>>>>>> ________________________________
>>>>>> From: srinivasan karthikeyan pitchai<
>>>>> srinivasan.karthikeyan.pitchai at oracle.com>
>>>>>> To: antlr-interest at antlr.org
>>>>>> Cc: Terence Parr<parrt at cs.usfca.edu>
>>>>>> Sent: Wednesday, July 20, 2011 9:46 AM
>>>>>> Subject: [antlr-interest] Deciphering  the TreeWalker error message
>>>> ...
>>>>>> Hi Folks,
>>>>>> What does the ANTLR walker error message like the following mean?
>>>>>>
>>>>>> no viable alt; token=[@-1,0:0='DOWN'
>>>>>>
>>>>>>
>>>>>> Would appreciate any general guidance/suggestions to zero in on the
>>>>>> errors of this nature.
>>>>>>
>>>>>> Thanks,
>>>>>> Vasan
>>>>>>
>>>>>>
>>>>>> Input sql:
>>>>>> -----------
>>>>>>
>>>>>> select (1) from table1
>>>>>> where 2 between 3 and 4;
>>>>>>
>>>>>>
>>>>>> Error Message:
>>>>>> --------------------
>>>>>>
>>>>>> TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
>>>>>> query_term, query_expression, query, query_unit, where_clause,
>>>>>> condition_list, condition_subexpression, condition] Walker1: no
>>>>>> viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
>>>>>> decision=<<590:1: condition options {backtrack=true; } : ( ^(
>>>>>> comparison_operator ( condition_quantifier )? c1= condition c2=
>>>>>> condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
>>>>>> c2= condition ) ) | ^( condition_operator expression c1= condition
>>>> ^(
>>>>>> ESCAPE escape_character ) ) | ^( condition_operator expression c1=
>>>>>> condition )
>>>>>> | ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
>>>>>> condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
>>>>>> ^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
>>>>>> IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
>>>> |
>>>>>> ^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
>>>>> context=......
>>>>>> However the following SQL, that just doesn't have the parenthesis
>>>>>> around 1,  works fine!!!
>>>>>>
>>>>>> select (1) from table1
>>>>>> where 2 between 3 and 4;
>>>>>>
>>>>>>
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>> address
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>> address
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>>> email-address
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From srinivasan.karthikeyan.pitchai at oracle.com  Wed Jul 20 23:03:28 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Thu, 21 Jul 2011 11:33:28 +0530
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <CAFCNb3gN+KT_GOBGkuEr6zCtpUfBmL+Dq7v+KDfR2uc1yZKfEQ@mail.gmail.com>
References: <4E270666.7030100@oracle.com>
	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com> <4E27B924.4050108@oracle.com>
	<CAFCNb3gN+KT_GOBGkuEr6zCtpUfBmL+Dq7v+KDfR2uc1yZKfEQ@mail.gmail.com>
Message-ID: <4E27C130.7050400@oracle.com>

Hey Grey,
Yes you are absolutely right, the first element is a rule reference.

My sclarSubExpression snippet is as follows:-

sclarSubExpression
     :
      ^(SUB_EXPR ^(sign sse=sclarSubExpression))
     | ^(SUB_EXPR expressionWithParen)
     | ^(SUB_EXPR function)
     | ^(SUB_EXPR object_name)
     | ^(SUB_EXPR constant)
     | ^(SUB_EXPR coalesce_exp)
     | ^(SUB_EXPR nullif_exp)
     | ^(SUB_EXPR case_expression)
     ;

expressionWithParen

     :
     ^(PAREN_SCLAR_EXPRESSION sclarExpression+)
     ;

The toStringTree AST is also provided below:

Works:-
----------

DML_STATEMENT DOWN select DOWN SELECT_LIST DOWN SELECT_ITEM DOWN 
COMPOUND_EXPR DOWN SUB_EXPR DOWN PAREN_SCLAR_EXPRESSION DOWN 
COMPOUND_EXPR DOWN SUB_EXPR DOWN 1 UP UP UP UP UP UP UP from DOWN 
TABLE_LIST_ITEM DOWN TABLE_OR_VIEW_NAME DOWN table1 UP UP UP where DOWN 
CONDITION_LIST DOWN between DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 2 UP 
UP and DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 3 UP UP COMPOUND_EXPR DOWN 
SUB_EXPR DOWN 4 UP UP UP UP UP UP UP UP

Parser AST Tree : (DML_STATEMENT (select (SELECT_LIST (SELECT_ITEM 
(COMPOUND_EXPR (SUB_EXPR (PAREN_SCLAR_EXPRESSION (COMPOUND_EXPR 
(SUB_EXPR 1))))))) (from (TABLE_LIST_ITEM (TABLE_OR_VIEW_NAME table1))) 
(where (CONDITION_LIST (between (COMPOUND_EXPR (SUB_EXPR 2)) (and 
(COMPOUND_EXPR (SUB_EXPR 3)) (COMPOUND_EXPR (SUB_EXPR 4))))))))


Fails:
-------
DML_STATEMENT DOWN select DOWN SELECT_LIST DOWN SELECT_ITEM DOWN 
COMPOUND_EXPR DOWN SUB_EXPR DOWN PAREN_SCLAR_EXPRESSION DOWN 
COMPOUND_EXPR DOWN SUB_EXPR DOWN 1 UP UP UP UP UP UP UP from DOWN 
TABLE_LIST_ITEM DOWN TABLE_OR_VIEW_NAME DOWN table1 UP UP UP where DOWN 
CONDITION_LIST DOWN between DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 2 UP 
UP and DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 3 UP UP COMPOUND_EXPR DOWN 
SUB_EXPR DOWN 4 UP UP UP UP UP UP UP UP

Parser AST Tree : (DML_STATEMENT (select (SELECT_LIST (SELECT_ITEM 
(COMPOUND_EXPR (SUB_EXPR (PAREN_SCLAR_EXPRESSION (COMPOUND_EXPR 
(SUB_EXPR 1))))))) (from (TABLE_LIST_ITEM (TABLE_OR_VIEW_NAME table1))) 
(where (CONDITION_LIST (between (COMPOUND_EXPR (SUB_EXPR 2)) (and 
(COMPOUND_EXPR (SUB_EXPR 3)) (COMPOUND_EXPR (SUB_EXPR 4))))))))

Thanks for spending your valuable time looking into this issue.

Regards,
Vasan

On 7/21/2011 11:23 AM, Gary Miller wrote:
> Hey Vasan,
>
> Without seeing the reset of the tree walker grammar and the toStringTree of
> the AST I'm really just guessing.
>
> The rule looks a bit odd to me.
> All my tree walker rules look more like
>
> compoundExpression
> :
>       ^(SOMETOKEN  conversion_clause)
>      | sclarSubExpression
> ;
>
> I guess you can have rules as the first element of a tree, its just not
> something that turns up in my tree grammars.
>
> Regards
> Gary
>
> On Thu, Jul 21, 2011 at 3:29 PM, srinivasan karthikeyan pitchai<
> srinivasan.karthikeyan.pitchai at oracle.com>  wrote:
>
>> Hi Folks,
>> I forgot to mention.  The compoundExpression rule has options{backtrack
>> = true;}  set that is it reads like
>>
>> compoundExpression
>> options {backtrack = true;}
>> :
>>       ^(sclarSubExpression  conversion_clause)
>>      | sclarSubExpression
>> ;
>>
>> Thanks,
>> Vasan
>>
>>
>>
>> On 7/21/2011 10:56 AM, srinivasan karthikeyan pitchai wrote:
>>> Jim, Gray, Loring,
>>> Thanks for pitching in to give me some direction to focus on.
>>>
>>> ANTLR Gurus,
>>>
>>> I've solved the issue.  Still I am unable to reason out my fix.
>>>
>>> I am providing the offending grammar snippet below and would appreciate
>>> your rationale to get an insight into the problem and how the fix works!!
>>>
>>> The below rule fails with the "
>>>
>>> no viable alt; token=[@-1,0:0='DOWN'" error message
>>>
>>> compoundExpression:
>>>        ^(sclarSubExpression  conversion_clause)
>>>       | sclarSubExpression
>>> ;
>>>
>>> However when I change the rule like the following, i.e make the
>>> conversion_clause optional  and then remove the second alternative every
>>> thing works fine!!  In my mind both the rules are semantically identical.
>>>
>>> compoundExpression:
>>>        ^(sclarSubExpression  conversion_clause?)
>>> ;
>>>
>>> Thanks a ton.
>>>
>>> -Vasan
>>>
>>> On 7/21/2011 4:16 AM, Jim Idle wrote:
>>>> Or use the dot description producing methods and create a nice graphic
>>>> with graphviz. Much easier to see that way.
>>>>
>>>> Jim
>>>>
>>>>> -----Original Message-----
>>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>>> bounces at antlr.org] On Behalf Of Gary Miller
>>>>> Sent: Wednesday, July 20, 2011 3:44 PM
>>>>> To: antlr-interest at antlr.org
>>>>> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
>>>>> ...
>>>>>
>>>>> I often find it usefully to print out the AST (toStringTree in Java)
>>>>> and walk through the tree grammar manually.
>>>>>
>>>>> Regards
>>>>> Gary
>>>>>
>>>>> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer<lgcraymer at yahoo.com>
>>>>> wrote:
>>>>>
>>>>>> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
>>>>>> location information attached so no line/column error reporting.
>>>>>> Mostly the error says that you started a subtree that your grammar
>>>>>> does not match, probably an LPAREN or RPAREN rooted subtree from your
>>>>>> report of cases where you do or do not get the error.
>>>>>>
>>>>>> --Loring
>>>>>>
>>>>>>
>>>>>>
>>>>>>> ________________________________
>>>>>>> From: srinivasan karthikeyan pitchai<
>>>>>> srinivasan.karthikeyan.pitchai at oracle.com>
>>>>>>> To: antlr-interest at antlr.org
>>>>>>> Cc: Terence Parr<parrt at cs.usfca.edu>
>>>>>>> Sent: Wednesday, July 20, 2011 9:46 AM
>>>>>>> Subject: [antlr-interest] Deciphering  the TreeWalker error message
>>>>> ...
>>>>>>> Hi Folks,
>>>>>>> What does the ANTLR walker error message like the following mean?
>>>>>>>
>>>>>>> no viable alt; token=[@-1,0:0='DOWN'
>>>>>>>
>>>>>>>
>>>>>>> Would appreciate any general guidance/suggestions to zero in on the
>>>>>>> errors of this nature.
>>>>>>>
>>>>>>> Thanks,
>>>>>>> Vasan
>>>>>>>
>>>>>>>
>>>>>>> Input sql:
>>>>>>> -----------
>>>>>>>
>>>>>>> select (1) from table1
>>>>>>> where 2 between 3 and 4;
>>>>>>>
>>>>>>>
>>>>>>> Error Message:
>>>>>>> --------------------
>>>>>>>
>>>>>>> TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
>>>>>>> query_term, query_expression, query, query_unit, where_clause,
>>>>>>> condition_list, condition_subexpression, condition] Walker1: no
>>>>>>> viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
>>>>>>> decision=<<590:1: condition options {backtrack=true; } : ( ^(
>>>>>>> comparison_operator ( condition_quantifier )? c1= condition c2=
>>>>>>> condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
>>>>>>> c2= condition ) ) | ^( condition_operator expression c1= condition
>>>>> ^(
>>>>>>> ESCAPE escape_character ) ) | ^( condition_operator expression c1=
>>>>>>> condition )
>>>>>>> | ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
>>>>>>> condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
>>>>>>> ^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
>>>>>>> IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
>>>>> |
>>>>>>> ^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
>>>>>> context=......
>>>>>>> However the following SQL, that just doesn't have the parenthesis
>>>>>>> around 1,  works fine!!!
>>>>>>>
>>>>>>> select (1) from table1
>>>>>>> where 2 between 3 and 4;
>>>>>>>
>>>>>>>
>>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>>> Unsubscribe:
>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>>> address
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe:
>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>>> address
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>>>> email-address
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gary at sumwise.com  Wed Jul 20 23:48:13 2011
From: gary at sumwise.com (Gary Miller)
Date: Thu, 21 Jul 2011 16:48:13 +1000
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <4E27C130.7050400@oracle.com>
References: <4E270666.7030100@oracle.com>
	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com> <4E27B924.4050108@oracle.com>
	<CAFCNb3gN+KT_GOBGkuEr6zCtpUfBmL+Dq7v+KDfR2uc1yZKfEQ@mail.gmail.com>
	<4E27C130.7050400@oracle.com>
Message-ID: <CAFCNb3jGAeJ2F3C513nN2HhNDqiYFaSRHPzL9=uOZq+GWfkqEA@mail.gmail.com>

Hey Vasan,

Couple of things.

1. My name is Gary not Grey ;-)

2. I'm not really an ANTLR guru.

3.
rule :
?^(subrule otherrule)
;
Just looks wrong.
If you inline (expand) out what you have written you would get
compoundExpression
: ^((SUB_EXPR?^(PAREN_SCLAR_EXPRESSION sclarExpression+) conversion_clause )
;
The ^(( is impossible
Make all you start tree look like ^(TOKEN ...)
^(sign sse=sclarSubExpression) therefore also look wrong.

4. I've never tried Jim DOTTreeGenerator but can see how it could be useful.
If you try it out let me know what you think
http://www.antlr.org/pipermail/antlr-interest/2009-March/033417.html

5. A pretty version of you AST toStringTree might help you.
See below. You never see a (( as far as I know.

Regards
Gary

(DML_STATEMENT
    (select
        (SELECT_LIST
            (SELECT_ITEM
                (COMPOUND_EXPR
                    (SUB_EXPR
                        (PAREN_SCLAR_EXPRESSION
                            (COMPOUND_EXPR
                                (SUB_EXPR 1)
                            )
                        )
                    )
                )
            )
        )
        (from
            (TABLE_LIST_ITEM
                (TABLE_OR_VIEW_NAME table1)
            )
        )
        (where
            (CONDITION_LIST
                (between
                    (COMPOUND_EXPR
                        (SUB_EXPR 2)
                    )
                    (and
                        (COMPOUND_EXPR
                            (SUB_EXPR 3)
                        )
                        (COMPOUND_EXPR
                            (SUB_EXPR 4)
                        )
                    )
                )
            )
        )
    )
)



On Thu, Jul 21, 2011 at 4:03 PM, srinivasan karthikeyan pitchai
<srinivasan.karthikeyan.pitchai at oracle.com> wrote:
>
> Hey Grey,
> Yes you are absolutely right, the first element is a rule reference.
>
> My sclarSubExpression snippet is as follows:-
>
> sclarSubExpression
> ? ? :
> ? ? ?^(SUB_EXPR ^(sign sse=sclarSubExpression))
> ? ? | ^(SUB_EXPR expressionWithParen)
> ? ? | ^(SUB_EXPR function)
> ? ? | ^(SUB_EXPR object_name)
> ? ? | ^(SUB_EXPR constant)
> ? ? | ^(SUB_EXPR coalesce_exp)
> ? ? | ^(SUB_EXPR nullif_exp)
> ? ? | ^(SUB_EXPR case_expression)
> ? ? ;
>
> expressionWithParen
>
> ? ? :
> ? ? ^(PAREN_SCLAR_EXPRESSION sclarExpression+)
> ? ? ;
>
> The toStringTree AST is also provided below:
>
> Works:-
> ----------
>
> DML_STATEMENT DOWN select DOWN SELECT_LIST DOWN SELECT_ITEM DOWN
> COMPOUND_EXPR DOWN SUB_EXPR DOWN PAREN_SCLAR_EXPRESSION DOWN
> COMPOUND_EXPR DOWN SUB_EXPR DOWN 1 UP UP UP UP UP UP UP from DOWN
> TABLE_LIST_ITEM DOWN TABLE_OR_VIEW_NAME DOWN table1 UP UP UP where DOWN
> CONDITION_LIST DOWN between DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 2 UP
> UP and DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 3 UP UP COMPOUND_EXPR DOWN
> SUB_EXPR DOWN 4 UP UP UP UP UP UP UP UP
>
> Parser AST Tree : (DML_STATEMENT (select (SELECT_LIST (SELECT_ITEM
> (COMPOUND_EXPR (SUB_EXPR (PAREN_SCLAR_EXPRESSION (COMPOUND_EXPR
> (SUB_EXPR 1))))))) (from (TABLE_LIST_ITEM (TABLE_OR_VIEW_NAME table1)))
> (where (CONDITION_LIST (between (COMPOUND_EXPR (SUB_EXPR 2)) (and
> (COMPOUND_EXPR (SUB_EXPR 3)) (COMPOUND_EXPR (SUB_EXPR 4))))))))
>
>
> Fails:
> -------
> DML_STATEMENT DOWN select DOWN SELECT_LIST DOWN SELECT_ITEM DOWN
> COMPOUND_EXPR DOWN SUB_EXPR DOWN PAREN_SCLAR_EXPRESSION DOWN
> COMPOUND_EXPR DOWN SUB_EXPR DOWN 1 UP UP UP UP UP UP UP from DOWN
> TABLE_LIST_ITEM DOWN TABLE_OR_VIEW_NAME DOWN table1 UP UP UP where DOWN
> CONDITION_LIST DOWN between DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 2 UP
> UP and DOWN COMPOUND_EXPR DOWN SUB_EXPR DOWN 3 UP UP COMPOUND_EXPR DOWN
> SUB_EXPR DOWN 4 UP UP UP UP UP UP UP UP
>
> Parser AST Tree : (DML_STATEMENT (select (SELECT_LIST (SELECT_ITEM
> (COMPOUND_EXPR (SUB_EXPR (PAREN_SCLAR_EXPRESSION (COMPOUND_EXPR
> (SUB_EXPR 1))))))) (from (TABLE_LIST_ITEM (TABLE_OR_VIEW_NAME table1)))
> (where (CONDITION_LIST (between (COMPOUND_EXPR (SUB_EXPR 2)) (and
> (COMPOUND_EXPR (SUB_EXPR 3)) (COMPOUND_EXPR (SUB_EXPR 4))))))))
>
> Thanks for spending your valuable time looking into this issue.
>
> Regards,
> Vasan
>
> On 7/21/2011 11:23 AM, Gary Miller wrote:
> > Hey Vasan,
> >
> > Without seeing the reset of the tree walker grammar and the toStringTree of
> > the AST I'm really just guessing.
> >
> > The rule looks a bit odd to me.
> > All my tree walker rules look more like
> >
> > compoundExpression
> > :
> > ? ? ? ^(SOMETOKEN ?conversion_clause)
> > ? ? ?| sclarSubExpression
> > ;
> >
> > I guess you can have rules as the first element of a tree, its just not
> > something that turns up in my tree grammars.
> >
> > Regards
> > Gary
> >
> > On Thu, Jul 21, 2011 at 3:29 PM, srinivasan karthikeyan pitchai<
> > srinivasan.karthikeyan.pitchai at oracle.com> ?wrote:
> >
> >> Hi Folks,
> >> I forgot to mention. ?The compoundExpression rule has options{backtrack
> >> = true;} ?set that is it reads like
> >>
> >> compoundExpression
> >> options {backtrack = true;}
> >> :
> >> ? ? ? ^(sclarSubExpression ?conversion_clause)
> >> ? ? ?| sclarSubExpression
> >> ;
> >>
> >> Thanks,
> >> Vasan
> >>
> >>
> >>
> >> On 7/21/2011 10:56 AM, srinivasan karthikeyan pitchai wrote:
> >>> Jim, Gray, Loring,
> >>> Thanks for pitching in to give me some direction to focus on.
> >>>
> >>> ANTLR Gurus,
> >>>
> >>> I've solved the issue. ?Still I am unable to reason out my fix.
> >>>
> >>> I am providing the offending grammar snippet below and would appreciate
> >>> your rationale to get an insight into the problem and how the fix works!!
> >>>
> >>> The below rule fails with the "
> >>>
> >>> no viable alt; token=[@-1,0:0='DOWN'" error message
> >>>
> >>> compoundExpression:
> >>> ? ? ? ?^(sclarSubExpression ?conversion_clause)
> >>> ? ? ? | sclarSubExpression
> >>> ;
> >>>
> >>> However when I change the rule like the following, i.e make the
> >>> conversion_clause optional ?and then remove the second alternative every
> >>> thing works fine!! ?In my mind both the rules are semantically identical.
> >>>
> >>> compoundExpression:
> >>> ? ? ? ?^(sclarSubExpression ?conversion_clause?)
> >>> ;
> >>>
> >>> Thanks a ton.
> >>>
> >>> -Vasan
> >>>
> >>> On 7/21/2011 4:16 AM, Jim Idle wrote:
> >>>> Or use the dot description producing methods and create a nice graphic
> >>>> with graphviz. Much easier to see that way.
> >>>>
> >>>> Jim
> >>>>
> >>>>> -----Original Message-----
> >>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >>>>> bounces at antlr.org] On Behalf Of Gary Miller
> >>>>> Sent: Wednesday, July 20, 2011 3:44 PM
> >>>>> To: antlr-interest at antlr.org
> >>>>> Subject: Re: [antlr-interest] Deciphering the TreeWalker error message
> >>>>> ...
> >>>>>
> >>>>> I often find it usefully to print out the AST (toStringTree in Java)
> >>>>> and walk through the tree grammar manually.
> >>>>>
> >>>>> Regards
> >>>>> Gary
> >>>>>
> >>>>> On Thu, Jul 21, 2011 at 3:15 AM, Loring Craymer<lgcraymer at yahoo.com>
> >>>>> wrote:
> >>>>>
> >>>>>> "UP" and "DOWN" tokens (start/end of child list for tree) do not have
> >>>>>> location information attached so no line/column error reporting.
> >>>>>> Mostly the error says that you started a subtree that your grammar
> >>>>>> does not match, probably an LPAREN or RPAREN rooted subtree from your
> >>>>>> report of cases where you do or do not get the error.
> >>>>>>
> >>>>>> --Loring
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>>> ________________________________
> >>>>>>> From: srinivasan karthikeyan pitchai<
> >>>>>> srinivasan.karthikeyan.pitchai at oracle.com>
> >>>>>>> To: antlr-interest at antlr.org
> >>>>>>> Cc: Terence Parr<parrt at cs.usfca.edu>
> >>>>>>> Sent: Wednesday, July 20, 2011 9:46 AM
> >>>>>>> Subject: [antlr-interest] Deciphering ?the TreeWalker error message
> >>>>> ...
> >>>>>>> Hi Folks,
> >>>>>>> What does the ANTLR walker error message like the following mean?
> >>>>>>>
> >>>>>>> no viable alt; token=[@-1,0:0='DOWN'
> >>>>>>>
> >>>>>>>
> >>>>>>> Would appreciate any general guidance/suggestions to zero in on the
> >>>>>>> errors of this nature.
> >>>>>>>
> >>>>>>> Thanks,
> >>>>>>> Vasan
> >>>>>>>
> >>>>>>>
> >>>>>>> Input sql:
> >>>>>>> -----------
> >>>>>>>
> >>>>>>> select (1) from table1
> >>>>>>> where 2 between 3 and 4;
> >>>>>>>
> >>>>>>>
> >>>>>>> Error Message:
> >>>>>>> --------------------
> >>>>>>>
> >>>>>>> TDWalker1.g: node from after line 2:8 [start1, startStatement, dml,
> >>>>>>> query_term, query_expression, query, query_unit, where_clause,
> >>>>>>> condition_list, condition_subexpression, condition] Walker1: no
> >>>>>>> viable alt; token=[@-1,0:0='DOWN',<2>,0:-1] (decision=127 state 0)
> >>>>>>> decision=<<590:1: condition options {backtrack=true; } : ( ^(
> >>>>>>> comparison_operator ( condition_quantifier )? c1= condition c2=
> >>>>>>> condition ) | ^( BETWEEN expression ^( and_or_operator c1= condition
> >>>>>>> c2= condition ) ) | ^( condition_operator expression c1= condition
> >>>>> ^(
> >>>>>>> ESCAPE escape_character ) ) | ^( condition_operator expression c1=
> >>>>>>> condition )
> >>>>>>> | ^( condition_operator expression_list c1= condition ) | ^( NOT c1=
> >>>>>>> condition ) | ^( EXISTS expression ) | ^( IS_NOT_NULL expression ) |
> >>>>>>> ^( IS_NULL expression ) | ^( IS_NOT expression UNTIL_CHANGED ) | ^(
> >>>>>>> IS expression UNTIL_CHANGED ) | ^( IS_NOT expression UNTIL_CLOSED )
> >>>>> |
> >>>>>>> ^( IS expression UNTIL_CLOSED ) | expression | condition_list );>>
> >>>>>> context=......
> >>>>>>> However the following SQL, that just doesn't have the parenthesis
> >>>>>>> around 1, ?works fine!!!
> >>>>>>>
> >>>>>>> select (1) from table1
> >>>>>>> where 2 between 3 and 4;
> >>>>>>>
> >>>>>>>
> >>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>>>> Unsubscribe:
> >>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >>>>> address
> >>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>>> Unsubscribe:
> >>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >>>>> address
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> >>>>> email-address
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ibre5041 at ibrezina.net  Thu Jul 21 02:02:47 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Thu, 21 Jul 2011 11:02:47 +0200
Subject: [antlr-interest] Antlr C target with LibXML
In-Reply-To: <44de077b338303bfde74c5b270c564a2@mail.gmail.com>
References: <CAHpQB8W63QFRVYjavrJTY_udMXN9XVWZEFAV-UEfCLRz2AsX7A@mail.gmail.com>
	<44de077b338303bfde74c5b270c564a2@mail.gmail.com>
Message-ID: <20110721110247.4fvxkzzn8kck8os0@webmail.kamm.cz>

Hi,
try to execute the compiler like "gcc -E -P" and check the output.
Or try to compile the output manually.
ANTLR adds a define for each token you declare and these macro definitions
do interfere with some datatype present in libxml headers.

For example if you create your own token called "int" in .g
then the GLexer.h will contain a macro definition

#define int <some number>

When you declare your own token names, you should always use some prefix.

Ivan
PS: did you try to switch the order of headers included?
PS2: <off-topic> on the other hand it is impossible to compile ANTLR headers
with QT, because QT contains macro called "emit" white emit is a name
of the function in antlr headers.


Quoting Jim Idle <jimi at temporal-wave.com>:

> The header files are interfering with each other. You probably need to
> separate your logic from your parser .g file. However, unless you post all
> of your project it is hard to see why. Look at the lines indicated as in
> error and you will probably find some symbol that ANTLR defines that
> libXML is also defining. When you know what it is, you can possibly undef
> it before including the libXML headers. I will also try to make time
> tomorrow to have a look at this.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Richard Walton
>> Sent: Wednesday, July 20, 2011 6:04 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Antlr C target with LibXML
>>
>> Forgive me if this is not the correct etiquette for asking questions -
>> This is the first mailing list I've subscribed to.  I'm having a
>> problem compiling an application using LibXML2 (http://xmlsoft.org/)
>> with a C lexer/grammar generated from ANTLR.  My problems are
>> documented here:
>> http://stackoverflow.com/questions/6769548/antlr-c-target-and-xmllib
>>
>> I would be very grateful for any help in fixing the problem.
>>
>> Kind regards,
>> Richard
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From claudio.martella at tis.bz.it  Thu Jul 21 04:16:22 2011
From: claudio.martella at tis.bz.it (Claudio Martella)
Date: Thu, 21 Jul 2011 13:16:22 +0200
Subject: [antlr-interest] Incompatible type in subrules with OR
Message-ID: <4E280A86.2020607@tis.bz.it>

Hello,

I've this grammar: http://pastebin.com/dNzdGx8R but i get this error
when I test it with AntlrWorks:

[11:23:59] /Users/hammer/output/RDFPathParser.java:383: incompatible types
[11:23:59] found   : RDFPathParser.repeat_return
[11:23:59] required: RDFPathParser.shortestPath_return
[11:23:59]                     v=repeat();
[11:23:59]                             ^
[11:23:59] /Users/hammer/output/RDFPathParser.java:586: incompatible types
[11:23:59] found   : RDFPathParser.filter_return
[11:23:59] required: RDFPathParser.subquery_return
[11:23:59]                     v=filter();
[11:23:59]                             ^
[11:23:59] 2 errors


Basically I think the problem is the assignment in the subrules with ORs
in two statements:

locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
locationStep)?
    -> ^(LOCATIONSTEP condition $v locationStep);

condition: ( v=filter | v=subquery ) condition?
    -> ^(CONDITION $v condition);

How do I handle these situations where I have the two or more options in
a subrule?


Thanks
Claudio

-- 
Claudio Martella
Free Software & Open Technologies
Analyst

TIS innovation park
Via Siemens 19 | Siemensstr. 19
39100 Bolzano | 39100 Bozen
Tel. +39 0471 068 123
Fax  +39 0471 068 129
claudio.martella at tis.bz.it http://www.tis.bz.it

Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web site www.tis.bz.it.





From roland.sako at gmail.com  Thu Jul 21 05:53:24 2011
From: roland.sako at gmail.com (Roland Sako)
Date: Thu, 21 Jul 2011 14:53:24 +0200
Subject: [antlr-interest] (no subject)
Message-ID: <E8A4397A-1AEA-4249-8CF3-B3E8C4149A35@gmail.com>

Hello,

I am Roland Sako from Geneva in Switzerland. I am currently working on a project which I need to generate an expression tree
of an Objective-C source code, then I will visit that tree to add extra instruction in it.

I just got an Objective-C grammar file from the web (http://spiny.com/software/objc.g) , but when trying to generate something I got error "can only show generated grammar for java language".

All I would need is to generate a Parser that can construct trees from objectiveC class files. Would it be possible with antlr?

Thank you very much.

Best Regards

From iannone at cs.manchester.ac.uk  Thu Jul 21 06:00:28 2011
From: iannone at cs.manchester.ac.uk (Luigi Iannone)
Date: Thu, 21 Jul 2011 14:00:28 +0100
Subject: [antlr-interest] Left recursive grammar
Message-ID: <FD84FD7C-1D7B-4171-A0C8-6E812019B49F@cs.manchester.ac.uk>

Hi all,

I have this simple grammar 


grammar test;
options {
  language = Java;
  output = AST;
}

a
	:
		a*B  ->^(B a*)
		| A
	;

B	:
		'.B'
	;

A	:
		'A'
	;
 



and I get the following output when I try to generate the parser in ANTRLWorks 

[13:48:53] error(210):  The following sets of rules are mutually left-recursive [a]

I read on the Web that there are solutions to solve this, however they will mess up the associativity, which I need to keep instead.
So, for instance, for the input 

A.B.B

the AST tree should be

^(B ^(B A))

Is there any way to change the grammar in order to eliminate the left recursion and obtain the above tree. I am afraid I do not get how to do it by just looking at what is there online about left recursive grammars.

Thanks a lot for your help,

Luigi

From bkiers at gmail.com  Thu Jul 21 06:30:29 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 21 Jul 2011 15:30:29 +0200
Subject: [antlr-interest] Left recursive grammar
In-Reply-To: <FD84FD7C-1D7B-4171-A0C8-6E812019B49F@cs.manchester.ac.uk>
References: <FD84FD7C-1D7B-4171-A0C8-6E812019B49F@cs.manchester.ac.uk>
Message-ID: <CAOrgODbBkEAE3g_JXTWFM_RRg_u+=re+BsWOtOutyY04vjDkug@mail.gmail.com>

Hi Luigi,

I'm not sure if this is possible with ANTLR, or any other LL parser
generator.

See this for a work-around:
http://stackoverflow.com/questions/3799890/antlr-ast-generating-possible-madness

If it _is_ possible using some sort of fancy AST rewrite magic, I'm sure
someone will correct me.

Regards,

Bart.


On Thu, Jul 21, 2011 at 3:00 PM, Luigi Iannone
<iannone at cs.manchester.ac.uk>wrote:

> Hi all,
>
> I have this simple grammar
>
>
> grammar test;
> options {
>  language = Java;
>  output = AST;
> }
>
> a
>        :
>                a*B  ->^(B a*)
>                | A
>        ;
>
> B       :
>                '.B'
>        ;
>
> A       :
>                'A'
>        ;
>
>
>
>
> and I get the following output when I try to generate the parser in
> ANTRLWorks
>
> [13:48:53] error(210):  The following sets of rules are mutually
> left-recursive [a]
>
> I read on the Web that there are solutions to solve this, however they will
> mess up the associativity, which I need to keep instead.
> So, for instance, for the input
>
> A.B.B
>
> the AST tree should be
>
> ^(B ^(B A))
>
> Is there any way to change the grammar in order to eliminate the left
> recursion and obtain the above tree. I am afraid I do not get how to do it
> by just looking at what is there online about left recursive grammars.
>
> Thanks a lot for your help,
>
> Luigi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Thu Jul 21 06:52:17 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 21 Jul 2011 08:52:17 -0500
Subject: [antlr-interest] Left recursive grammar
In-Reply-To: <FD84FD7C-1D7B-4171-A0C8-6E812019B49F@cs.manchester.ac.uk>
References: <FD84FD7C-1D7B-4171-A0C8-6E812019B49F@cs.manchester.ac.uk>
Message-ID: <06a001cc47ad$67dd6a60$37983f20$@pixelminegames.com>

Your example is ambiguous as well as left recursive. I assume you meant one
of the following:

a : a B | A;
a : A* B | A;

The first can be written as:

a : A (B^)*;

The second can be written as 

a : A (A* B^)? | A | B;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Luigi Iannone
Sent: Thursday, July 21, 2011 8:00 AM
To: ANTLR
Subject: [antlr-interest] Left recursive grammar

Hi all,

I have this simple grammar 


grammar test;
options {
  language = Java;
  output = AST;
}

a
	:
		a*B  ->^(B a*)
		| A
	;

B	:
		'.B'
	;

A	:
		'A'
	;
 



and I get the following output when I try to generate the parser in
ANTRLWorks 

[13:48:53] error(210):  The following sets of rules are mutually
left-recursive [a]

I read on the Web that there are solutions to solve this, however they will
mess up the associativity, which I need to keep instead.
So, for instance, for the input 

A.B.B

the AST tree should be

^(B ^(B A))

Is there any way to change the grammar in order to eliminate the left
recursion and obtain the above tree. I am afraid I do not get how to do it
by just looking at what is there online about left recursive grammars.

Thanks a lot for your help,

Luigi

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bkiers at gmail.com  Thu Jul 21 07:00:36 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 21 Jul 2011 16:00:36 +0200
Subject: [antlr-interest] Left recursive grammar
In-Reply-To: <06a001cc47ad$67dd6a60$37983f20$@pixelminegames.com>
References: <FD84FD7C-1D7B-4171-A0C8-6E812019B49F@cs.manchester.ac.uk>
	<06a001cc47ad$67dd6a60$37983f20$@pixelminegames.com>
Message-ID: <CAOrgODZWqVo0BqRtQadHvx=1775gxytR2N42kwGhJ_apvWXZ4A@mail.gmail.com>

Hi Sam,

But of course, with the inline tree rewrite operators it looks so straight
forward! Nice one!

Regards,

Bart.


On Thu, Jul 21, 2011 at 3:52 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> Your example is ambiguous as well as left recursive. I assume you meant one
> of the following:
>
> a : a B | A;
> a : A* B | A;
>
> The first can be written as:
>
> a : A (B^)*;
>
> The second can be written as
>
> a : A (A* B^)? | A | B;
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Luigi Iannone
> Sent: Thursday, July 21, 2011 8:00 AM
> To: ANTLR
> Subject: [antlr-interest] Left recursive grammar
>
> Hi all,
>
> I have this simple grammar
>
>
> grammar test;
> options {
>  language = Java;
>  output = AST;
> }
>
> a
>        :
>                a*B  ->^(B a*)
>                | A
>        ;
>
> B       :
>                '.B'
>        ;
>
> A       :
>                'A'
>        ;
>
>
>
>
> and I get the following output when I try to generate the parser in
> ANTRLWorks
>
> [13:48:53] error(210):  The following sets of rules are mutually
> left-recursive [a]
>
> I read on the Web that there are solutions to solve this, however they will
> mess up the associativity, which I need to keep instead.
> So, for instance, for the input
>
> A.B.B
>
> the AST tree should be
>
> ^(B ^(B A))
>
> Is there any way to change the grammar in order to eliminate the left
> recursion and obtain the above tree. I am afraid I do not get how to do it
> by just looking at what is there online about left recursive grammars.
>
> Thanks a lot for your help,
>
> Luigi
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jbb at acm.org  Thu Jul 21 07:03:09 2011
From: jbb at acm.org (John B. Brodie)
Date: Thu, 21 Jul 2011 10:03:09 -0400
Subject: [antlr-interest] (no subject)
In-Reply-To: <E8A4397A-1AEA-4249-8CF3-B3E8C4149A35@gmail.com>
References: <E8A4397A-1AEA-4249-8CF3-B3E8C4149A35@gmail.com>
Message-ID: <1311256989.12531.7.camel@gecko>

Greetings!
On Thu, 2011-07-21 at 14:53 +0200, Roland Sako wrote:
> Hello,
> 
> I am Roland Sako from Geneva in Switzerland. I am currently working on a project which I need to generate an expression tree
> of an Objective-C source code, then I will visit that tree to add extra instruction in it.
> 
> I just got an Objective-C grammar file from the web (http://spiny.com/software/objc.g) , but when trying to generate something I got error "can only show generated grammar for java language".
> 

I do not think that this grammar is really for ANTLR --- or rather, if
it is, it must be run thru some preprocessor in order to transform it
into actual ANTLR meta-syntax...

that is, i notice the following non-ANTLR stuff (via a quick scan only):

        begins with a {...} section rather than the keyword 'grammar'.
        
        unknown ${declare ...} commands.
        
        actions in [ ] 
        
        no lexer rules! e.g. no rule that starts with upper-case letter.
        appears to define tokens using regular expressions surrounded
        with "s.
        
        the last 6 or 7 rules in the file are kinda goofy (in ANTLR
        terms).
        
> All I would need is to generate a Parser that can construct trees from objectiveC class files. Would it be possible with antlr?

the meat of the grammar does appear to be for ANTLR. if you can figure
out how to deal with the above non-ANTLRism you are probably well on
your way to a working parser.

> 
> Thank you very much.
> 

i don't think i helped very much, sorry.
   -jbb




From piyush.besu at gmail.com  Thu Jul 21 08:17:50 2011
From: piyush.besu at gmail.com (Piyush)
Date: Thu, 21 Jul 2011 08:17:50 -0700 (PDT)
Subject: [antlr-interest] ANTLR gives segmentation fault for very large
	input
In-Reply-To: <ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>
References: <1311065440680-6598011.post@n2.nabble.com>
	<ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>
Message-ID: <CAE9ok1pV=KMOZqxdMeicxbjyUwX_nwCLq-BssUCMyeE7soompg@mail.gmail.com>

Is there is any way to delete AST (Abstract Syntax Tree) because it is
of no use for my work.

On Tue, Jul 19, 2011 at 9:08 PM, Jim Idle [via ANTLR]
<ml-node+6599207-454424018-346774 at n2.nabble.com> wrote:
> You are running out of memory - split up the input in some sensible way.
>
> Jim
>
>> -----Original Message-----
>> From: [hidden email] [mailto:antlr-interest-
>> [hidden email]] On Behalf Of Piyush
>> Sent: Tuesday, July 19, 2011 1:51 AM
>> To: [hidden email]
>> Subject: [antlr-interest] ANTLR gives segmentation fault for very large
>> input
>>
>> Sir when i am trying to parse a very big input file (of nearly
>> 4500000 lines) ANTLR is giving segmentation fault.
>>
>> ?Just for example my grammar funny.g is parsing input file input.v(of
>> near about 45 lines) but gives segmentation fault for
>> big_file_input.v(of about 4500000 lines) ,which also contains the same
>> input as of input.v 100000 times
>>
>> I am attaching my grammar (funny.g and input files) below.
>>
>> So please help me out where i am doing wrong or this is antlr's bug?
>>
>>
>> Thanking You
>> Piyush http://antlr.1301665.n2.nabble.com/file/n6598011/fun.tar?fun.tar
>>
>> --
>> View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-
>> gives-segmentation-fault-for-very-large-input-tp6598011p6598011.html
>> Sent from the ANTLR mailing list archive at Nabble.com.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
> If you reply to this email, your message will be added to the discussion
> below:
> http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-for-very-large-input-tp6598011p6599207.html
> To unsubscribe from ANTLR gives segmentation fault for very large input,
> click here.



Cheers!
Piyush
Bengal Engineering & Science University
Computer Science and Technology


--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-for-very-large-input-tp6598011p6607198.html
Sent from the ANTLR mailing list archive at Nabble.com.

From vlad at demoninsight.com  Thu Jul 21 08:42:09 2011
From: vlad at demoninsight.com (Vlad)
Date: Thu, 21 Jul 2011 10:42:09 -0500
Subject: [antlr-interest] on "crap" grammars
In-Reply-To: <254e3affa0082f1f82c6314fb83a6195@mail.gmail.com>
References: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
	<254e3affa0082f1f82c6314fb83a6195@mail.gmail.com>
Message-ID: <6929DD4E-C920-4BD0-BE42-B61D6C604E7E@demoninsight.com>

This test grammar was called "crap" by Jim Idle. I am willing to eat the humble pie and admit where I am an ANTLR novice or don't know something about grammars, but I am just not seeing it in this simple case:

grammar testerrors;

options
{
    language='C';
}

NAME    :   ( 'a'..'z' | 'A'..'Z' | '0'..'9' )+ ;
WS      :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;

parse:
    decl ( options { greedy = true; }: ',' decl )* ','? EOF
    ;

decl:
    NAME ':' type
    ;

type:
    'int' | 'float'
    ; 

The start symbol is a comma-delimited list of simple '<name> : <type>' declarations and allows the list to optionally end in a comma as is done in some languages (Python, etc). This is a pretty common way to structure it. In JavaCC, for example, you'd use a local LOOKAHEAD(2) inside the ()* to disambiguate the choice between matching one more decl or ending the list. Without it and with the default k=1, JavaCC emits an ambiguity warning at parser generation time. In ANTLR case, the ambiguity can be dealt with similarly, with a local k=2 option or the way done above (which I borrowed from http://www.antlr.org/grammar/1200715779785/Python.g). Without either, ANTLR also emits a warning at parser generation time. All of this seems to work as expected.

So, what is so obviously wrong with the grammar snippet that deserves the "crap" moniker? I am learning ANTLR because I want to add a multi-target parser generator tool to my skill set. For Java work, JavaCC is still out there and generates fast parsers, has good error handling, and can build ASTs/visitors. In C++, I would normally do a simple case like this via boost.spirit but it's a bit of a template metaprogramming monster. With ANTLR I am successfully compiling my C parser within a larger C++ codebase and the only learning curve issues are odd error messages on relatively trivial input errors, where ANTLR can't seem to identify the token it is expecting. E.g., input "name : bad" results in

-memory-(1)  : error 10 : Unexpected token, at offset 6
    near [Index: 0 (Start: 0-Stop: 0) ='<missing <invalid>>', type<0> Line: 1 LinePos:6]
     : Missing <invalid>

I would be happy to get specific pointers to docs and articles on how to improve error handling by ANTLR *C* parsers. At least being able to modify the stock error display function to tackle the common case of mis-spelling a token name would be great.

Thank you,
Vlad


From sharwell at pixelminegames.com  Thu Jul 21 08:45:15 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 21 Jul 2011 10:45:15 -0500
Subject: [antlr-interest] ANTLR gives segmentation fault for very
	large	input
In-Reply-To: <CAE9ok1pV=KMOZqxdMeicxbjyUwX_nwCLq-BssUCMyeE7soompg@mail.gmail.com>
References: <1311065440680-6598011.post@n2.nabble.com>	<ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>
	<CAE9ok1pV=KMOZqxdMeicxbjyUwX_nwCLq-BssUCMyeE7soompg@mail.gmail.com>
Message-ID: <06a701cc47bd$304aeef0$90e0ccd0$@pixelminegames.com>

To skip the AST, just don't use the "output=AST" option.

Here are some specs on the tokens. I'm including the overhead of having them in a CommonTokenStream (or equivalent) because they're not very useful otherwise.

Java target, 32-bit VM: 48 bytes/token.
Java target, 64-bit VM: 64 bytes/token.

CSharp3 target: Same as Java target.

C target, 32-bit: 148 bytes/token.
C target, 64-bit: 248 bytes/token.

You have 6 tokens per line, and it sounds like you're using the C target. The small/large files use 39KiB/3.72GiB of memory respectively for the tokens on a 32-bit machine. They use 65.4KiB/6.24GiB on a 64-bit machine.

I'm developing an alternative to CommonToken that uses 8 bytes/token in all of the above targets. Once it's ready (which may not be until ANTLR v4), the same files will only need 2.1KiB/206MiB of memory, a savings of 94.6% on the 32-bit C target, and nearly 97% on the 64-bit C target.

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Piyush
Sent: Thursday, July 21, 2011 10:18 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR gives segmentation fault for very large input

Is there is any way to delete AST (Abstract Syntax Tree) because it is of no use for my work.

On Tue, Jul 19, 2011 at 9:08 PM, Jim Idle [via ANTLR] <ml-node+6599207-454424018-346774 at n2.nabble.com> wrote:
> You are running out of memory - split up the input in some sensible way.
>
> Jim
>
>> -----Original Message-----
>> From: [hidden email] [mailto:antlr-interest- [hidden email]] On 
>> Behalf Of Piyush
>> Sent: Tuesday, July 19, 2011 1:51 AM
>> To: [hidden email]
>> Subject: [antlr-interest] ANTLR gives segmentation fault for very 
>> large input
>>
>> Sir when i am trying to parse a very big input file (of nearly
>> 4500000 lines) ANTLR is giving segmentation fault.
>>
>>  Just for example my grammar funny.g is parsing input file input.v(of 
>> near about 45 lines) but gives segmentation fault for 
>> big_file_input.v(of about 4500000 lines) ,which also contains the 
>> same input as of input.v 100000 times
>>
>> I am attaching my grammar (funny.g and input files) below.
>>
>> So please help me out where i am doing wrong or this is antlr's bug?
>>
>>
>> Thanking You
>> Piyush http://antlr.1301665.n2.nabble.com/file/n6598011/fun.tar 
>> fun.tar
>>
>> --
>> View this message in context: 
>> http://antlr.1301665.n2.nabble.com/ANTLR-
>> gives-segmentation-fault-for-very-large-input-tp6598011p6598011.html
>> Sent from the ANTLR mailing list archive at Nabble.com.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
> If you reply to this email, your message will be added to the 
> discussion
> below:
> http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-for-
> very-large-input-tp6598011p6599207.html
> To unsubscribe from ANTLR gives segmentation fault for very large 
> input, click here.



Cheers!
Piyush
Bengal Engineering & Science University
Computer Science and Technology


--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-for-very-large-input-tp6598011p6607198.html
Sent from the ANTLR mailing list archive at Nabble.com.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From cummings at kjchome.homeip.net  Thu Jul 21 09:36:50 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 21 Jul 2011 12:36:50 -0400
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <CAFCNb3jGAeJ2F3C513nN2HhNDqiYFaSRHPzL9=uOZq+GWfkqEA@mail.gmail.com>
References: <4E270666.7030100@oracle.com>
	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com> <4E27B924.4050108@oracle.com>
	<CAFCNb3gN+KT_GOBGkuEr6zCtpUfBmL+Dq7v+KDfR2uc1yZKfEQ@mail.gmail.com>
	<4E27C130.7050400@oracle.com>
	<CAFCNb3jGAeJ2F3C513nN2HhNDqiYFaSRHPzL9=uOZq+GWfkqEA@mail.gmail.com>
Message-ID: <4E2855A2.4000402@kjchome.homeip.net>

On 07/21/2011 02:48 AM, Gary Miller wrote:
> 3.
> rule :
>   ^(subrule otherrule)
> ;
> Just looks wrong.

I am under the impression that a treewalker rule should be rooted in a 
TOKEN, not a subtree.  The few treewalker grammars I have written always 
have rules that look like ^(TOKEN some other rules or TOKENS)
If a subrule reference is not allowed to be the root of the tree being 
parsed, I would have thought that ANTLR would have issued an error when 
the tree grammar was run through ANTLR....

I could be wrong with my assumption here, but I have never gotten into 
trouble by assuming it (so far).

Often this involves me collapsing my treewalker rules together.  For 
example, if I have 12 parse rules to accurately describe precidence in 
an expression, my treegrammar might have 12 alternations, one for each 
possibly different rooted TOKEN when walking them.  This makes my 
treegrammars (much) smaller than my parser grammars.

> If you inline (expand) out what you have written you would get
> compoundExpression
> : ^((SUB_EXPR ^(PAREN_SCLAR_EXPRESSION sclarExpression+) conversion_clause )
> ;
> The ^(( is impossible
> Make all you start tree look like ^(TOKEN ...)
> ^(sign sse=sclarSubExpression) therefore also look wrong.

Yes, treegrammar rules can refer to other rules, but the rooted 
expressions: ^() should be rooted with TOKENs.

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jmurray at aerotech.com  Thu Jul 21 09:42:20 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 21 Jul 2011 12:42:20 -0400
Subject: [antlr-interest] on "crap" grammars
In-Reply-To: <6929DD4E-C920-4BD0-BE42-B61D6C604E7E@demoninsight.com>
References: <CAM-qmzYSuHu-PppRCZYKPet3d-5FEiv1BqVu8khUvEeVjhOLhA@mail.gmail.com>
	<254e3affa0082f1f82c6314fb83a6195@mail.gmail.com>
	<6929DD4E-C920-4BD0-BE42-B61D6C604E7E@demoninsight.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD57@EXCH-VIRTUAL.aerotechad.com>

As Jim pointed out, your problem with tokens showing up in error 
messages as <invalid> is because you just inlined lexer tokens (in your 
"type" rule) without giving them a name. Try making two real lexer rules 
with the names you would like to see:

INT : 'int';
FLOAT : 'float';
type : INT | FLOAT;

If you look at the generated C code, you will see how it determines the 
string to use from this name. It is also fairly simple to override the 
printed string on a case by case basis if that seems appropriate for 
your errors. This may be necessary if you discover that the #defines 
generated for INT and FLOAT conflict with other defines used in your 
code and libraries. You can solve this generically by adding an 
underscore to the end of the name (INT_ and FLOAT_), and then just strip 
off the last character in your error handler.

- Justin

On 7/21/2011 11:42 AM, Vlad wrote:
> This test grammar was called "crap" by Jim Idle. I am willing to eat the humble pie and admit where I am an ANTLR novice or don't know something about grammars, but I am just not seeing it in this simple case:
>
> grammar testerrors;
>
> options
> {
>      language='C';
> }
>
> NAME    :   ( 'a'..'z' | 'A'..'Z' | '0'..'9' )+ ;
> WS      :   ( ' ' | '\t' | '\r' | '\n' )+ { $channel = HIDDEN; } ;
>
> parse:
>      decl ( options { greedy = true; }: ',' decl )* ','? EOF
>      ;
>
> decl:
>      NAME ':' type
>      ;
>
> type:
>      'int' | 'float'
>      ;
>
> The start symbol is a comma-delimited list of simple '<name>  :<type>' declarations and allows the list to optionally end in a comma as is done in some languages (Python, etc). This is a pretty common way to structure it. In JavaCC, for example, you'd use a local LOOKAHEAD(2) inside the ()* to disambiguate the choice between matching one more decl or ending the list. Without it and with the default k=1, JavaCC emits an ambiguity warning at parser generation time. In ANTLR case, the ambiguity can be dealt with similarly, with a local k=2 option or the way done above (which I borrowed from http://www.antlr.org/grammar/1200715779785/Python.g). Without either, ANTLR also emits a warning at parser generation time. All of this seems to work as expected.
>
> So, what is so obviously wrong with the grammar snippet that deserves the "crap" moniker? I am learning ANTLR because I want to add a multi-target parser generator tool to my skill set. For Java work, JavaCC is still out there and generates fast parsers, has good error handling, and can build ASTs/visitors. In C++, I would normally do a simple case like this via boost.spirit but it's a bit of a template metaprogramming monster. With ANTLR I am successfully compiling my C parser within a larger C++ codebase and the only learning curve issues are odd error messages on relatively trivial input errors, where ANTLR can't seem to identify the token it is expecting. E.g., input "name : bad" results in
>
> -memory-(1)  : error 10 : Unexpected token, at offset 6
>      near [Index: 0 (Start: 0-Stop: 0) ='<missing<invalid>>', type<0>  Line: 1 LinePos:6]
>       : Missing<invalid>
>
> I would be happy to get specific pointers to docs and articles on how to improve error handling by ANTLR *C* parsers. At least being able to modify the stock error display function to tackle the common case of mis-spelling a token name would be great.
>
> Thank you,
> Vlad
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Thu Jul 21 10:00:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 10:00:32 -0700
Subject: [antlr-interest] Antlr C target with LibXML
In-Reply-To: <20110721110247.4fvxkzzn8kck8os0@webmail.kamm.cz>
References: <CAHpQB8W63QFRVYjavrJTY_udMXN9XVWZEFAV-UEfCLRz2AsX7A@mail.gmail.com>
	<44de077b338303bfde74c5b270c564a2@mail.gmail.com>
	<20110721110247.4fvxkzzn8kck8os0@webmail.kamm.cz>
Message-ID: <dd156852a2d98b13df53dd34bbd9ed64@mail.gmail.com>

Also note that it should be possible (and desirable) for you to separate
the logic so you don't need both headers at the same time. Please post
your grammar files to get more help.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ivan Brezina
> Sent: Thursday, July 21, 2011 2:03 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Antlr C target with LibXML
>
> Hi,
> try to execute the compiler like "gcc -E -P" and check the output.
> Or try to compile the output manually.
> ANTLR adds a define for each token you declare and these macro
> definitions do interfere with some datatype present in libxml headers.
>
> For example if you create your own token called "int" in .g then the
> GLexer.h will contain a macro definition
>
> #define int <some number>
>
> When you declare your own token names, you should always use some
> prefix.
>
> Ivan
> PS: did you try to switch the order of headers included?
> PS2: <off-topic> on the other hand it is impossible to compile ANTLR
> headers with QT, because QT contains macro called "emit" white emit is
> a name of the function in antlr headers.
>
>
> Quoting Jim Idle <jimi at temporal-wave.com>:
>
> > The header files are interfering with each other. You probably need
> to
> > separate your logic from your parser .g file. However, unless you
> post
> > all of your project it is hard to see why. Look at the lines
> indicated
> > as in error and you will probably find some symbol that ANTLR defines
> > that libXML is also defining. When you know what it is, you can
> > possibly undef it before including the libXML headers. I will also
> try
> > to make time tomorrow to have a look at this.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Richard Walton
> >> Sent: Wednesday, July 20, 2011 6:04 PM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Antlr C target with LibXML
> >>
> >> Forgive me if this is not the correct etiquette for asking questions
> >> - This is the first mailing list I've subscribed to.  I'm having a
> >> problem compiling an application using LibXML2 (http://xmlsoft.org/)
> >> with a C lexer/grammar generated from ANTLR.  My problems are
> >> documented here:
> >> http://stackoverflow.com/questions/6769548/antlr-c-target-and-xmllib
> >>
> >> I would be very grateful for any help in fixing the problem.
> >>
> >> Kind regards,
> >> Richard
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Jul 21 10:05:23 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 10:05:23 -0700
Subject: [antlr-interest] (no subject)
In-Reply-To: <1311256989.12531.7.camel@gecko>
References: <E8A4397A-1AEA-4249-8CF3-B3E8C4149A35@gmail.com>
	<1311256989.12531.7.camel@gecko>
Message-ID: <fabdddb392f071d3d0db38011570dac3@mail.gmail.com>

I think that it is a v2 grammar right?

JIm

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John B. Brodie
> Sent: Thursday, July 21, 2011 7:03 AM
> To: Roland Sako
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] (no subject)
>
> Greetings!
> On Thu, 2011-07-21 at 14:53 +0200, Roland Sako wrote:
> > Hello,
> >
> > I am Roland Sako from Geneva in Switzerland. I am currently working
> on
> > a project which I need to generate an expression tree of an
> Objective-C source code, then I will visit that tree to add extra
> instruction in it.
> >
> > I just got an Objective-C grammar file from the web
> (http://spiny.com/software/objc.g) , but when trying to generate
> something I got error "can only show generated grammar for java
> language".
> >
>
> I do not think that this grammar is really for ANTLR --- or rather, if
> it is, it must be run thru some preprocessor in order to transform it
> into actual ANTLR meta-syntax...
>
> that is, i notice the following non-ANTLR stuff (via a quick scan
> only):
>
>         begins with a {...} section rather than the keyword 'grammar'.
>
>         unknown ${declare ...} commands.
>
>         actions in [ ]
>
>         no lexer rules! e.g. no rule that starts with upper-case
> letter.
>         appears to define tokens using regular expressions surrounded
>         with "s.
>
>         the last 6 or 7 rules in the file are kinda goofy (in ANTLR
>         terms).
>
> > All I would need is to generate a Parser that can construct trees
> from objectiveC class files. Would it be possible with antlr?
>
> the meat of the grammar does appear to be for ANTLR. if you can figure
> out how to deal with the above non-ANTLRism you are probably well on
> your way to a working parser.
>
> >
> > Thank you very much.
> >
>
> i don't think i helped very much, sorry.
>    -jbb
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Jul 21 10:06:21 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 10:06:21 -0700
Subject: [antlr-interest] ANTLR gives segmentation fault for very large
	input
In-Reply-To: <CAE9ok1pV=KMOZqxdMeicxbjyUwX_nwCLq-BssUCMyeE7soompg@mail.gmail.com>
References: <1311065440680-6598011.post@n2.nabble.com>	<ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>
	<CAE9ok1pV=KMOZqxdMeicxbjyUwX_nwCLq-BssUCMyeE7soompg@mail.gmail.com>
Message-ID: <2f7aa455bc05a4bc88269da8557cfba3@mail.gmail.com>

Are you sure? Well, just don't generate it and remove the instructions that
do?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Piyush
> Sent: Thursday, July 21, 2011 8:18 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLR gives segmentation fault for very
> large input
>
> Is there is any way to delete AST (Abstract Syntax Tree) because it is
> of no use for my work.
>
> On Tue, Jul 19, 2011 at 9:08 PM, Jim Idle [via ANTLR] <ml-node+6599207-
> 454424018-346774 at n2.nabble.com> wrote:
> > You are running out of memory - split up the input in some sensible
> way.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: [hidden email] [mailto:antlr-interest- [hidden email]] On
> >> Behalf Of Piyush
> >> Sent: Tuesday, July 19, 2011 1:51 AM
> >> To: [hidden email]
> >> Subject: [antlr-interest] ANTLR gives segmentation fault for very
> >> large input
> >>
> >> Sir when i am trying to parse a very big input file (of nearly
> >> 4500000 lines) ANTLR is giving segmentation fault.
> >>
> >>  Just for example my grammar funny.g is parsing input file
> input.v(of
> >> near about 45 lines) but gives segmentation fault for
> >> big_file_input.v(of about 4500000 lines) ,which also contains the
> >> same input as of input.v 100000 times
> >>
> >> I am attaching my grammar (funny.g and input files) below.
> >>
> >> So please help me out where i am doing wrong or this is antlr's bug?
> >>
> >>
> >> Thanking You
> >> Piyush http://antlr.1301665.n2.nabble.com/file/n6598011/fun.tar
> >> fun.tar
> >>
> >> --
> >> View this message in context:
> >> http://antlr.1301665.n2.nabble.com/ANTLR-
> >> gives-segmentation-fault-for-very-large-input-tp6598011p6598011.html
> >> Sent from the ANTLR mailing list archive at Nabble.com.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> > ________________________________
> > If you reply to this email, your message will be added to the
> > discussion
> > below:
> > http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-
> for-
> > very-large-input-tp6598011p6599207.html
> > To unsubscribe from ANTLR gives segmentation fault for very large
> > input, click here.
>
>
>
> Cheers!
> Piyush
> Bengal Engineering & Science University
> Computer Science and Technology
>
>
> --
> View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-
> gives-segmentation-fault-for-very-large-input-tp6598011p6607198.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jmurray at aerotech.com  Thu Jul 21 10:19:19 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 21 Jul 2011 13:19:19 -0400
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>

Hi Jim,

I think I tracked down and fixed this bug in the C target template. 
Attached is the patched version of C.stg, which I extracted from 
antlr-3.4-complete-no-antlrv2.jar/org/antlr/codegen/templates/C/C.stg 
and modified. It looks like it is a simple one line fix on line 1699, 
changing from ANTLR3_UINT32 to ANTLR3_MARKER. I've confirmed that this 
patch makes the warnings go away in my 64-bit build, so I'm submitting 
for your review. Please let me know if/when this makes it into a release.

Thanks,

-- Justin

On 6/24/2011 1:34 PM, Jim Idle wrote:
> There are few bug fixes in this beta - all that I can get in will be in
> the release version, which won't be too long now. However, you should
> still avoid backtrack and memorize unless there is no other choice.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Justin Murray
>> Sent: Friday, June 24, 2011 8:12 AM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
>>
>> Jim,
>>
>> I just wanted to see if this was on your radar for the 3.4 C runtime
>> update. I haven't been able to test it with beta3 because I hit some
>> earlier roadblocks.
>>
>> Thanks,
>>
>> -- Justin
>>
>>
>>
>> 	Ah it is probably because the backtrack and memorize option. I
>> strongly
>>
>> 	advise that you don't use these but left factor your grammar.
>> However, I
>>
>> 	will fix it of course.
>>
>>
>>
>>
>>
>> 	Jim
>>
>>
>>
>>
>>
>> 	-----Original Message-----
>>
>> 	From: Justin Murray [mailto:jmur... at aerotech.com]
>>
>> 	Sent: Tuesday, December 28, 2010 1:39 PM
>>
>> 	To: Jim Idle; antl... at antlr.org
>>
>> 	Subject: RE: [antlr-interest] [C target] Warnings in 64-bit
>> compile
>>
>>
>>
>>
>>
>> 	I believe that it is caused by using the memorize=true; option and
>>
>> 	building 64-bit. The following grammar has these warnings in the
>>
>> 	generated TestParser.c (compiled as C++ code in Visual Studio
>> 2008).
>>
>> 	You will find the offending line at the beginning of the generated
>>
>> 	prog() function.
>>
>>
>>
>>
>>
>> 	-----------------------------
>>
>> 	grammar Test;
>>
>>
>>
>>
>>
>> 	options
>>
>> 	{
>>
>> 	language=C;
>>
>> 	backtrack=true;
>>
>> 	memoize=true;
>>
>> 	}
>>
>>
>>
>>
>>
>> 	prog
>>
>> 	: SOMETHING+;
>>
>>
>>
>>
>>
>> 	SOMETHING
>>
>> 	: 'A'..'Z';
>>
>>
>>
>> 	------------------------------
>>
>>
>>
>>
>>
>> 	Thanks,
>>
>>
>>
>>
>>
>> 	Justin
>>
>>
>>
>>
>>
>> 	-----Original Message-----
>>
>> 	From: antl... at antlr.org
>>
>> 	[mailto:antl... at antlr.org] On Behalf Of Jim Idle
>>
>> 	Sent: Tuesday, December 28, 2010 3:04 PM
>>
>> 	To: antl... at antlr.org
>>
>> 	Subject: Re: [antlr-interest] [C target] Warnings in 64-bit
>> compile
>>
>>
>>
>>
>>
>> 	There were some such warnings a number of versions back but they
>> are
>>
>> 	all fixed as far as I know. What construct are you using that
>> results
>>
>> 	in the warning? If you give me a reproducible grammar snippet,
>> then I
>>
>> 	will fix it for the next release, which is just waiting on my
>> other
>>
>> 	commitments right now.
>>
>>
>>
>>
>>
>> 	Jim
>>
>>
>>
>>
>>
>> 	-----Original Message-----
>>
>> 	From: antl... at antlr.org [mailto:antlr-interest-
>>
>> 	boun... at antlr.org] On Behalf Of Justin Murray
>>
>> 	Sent: Tuesday, December 28, 2010 11:59 AM
>>
>> 	To: antl... at antlr.org
>>
>> 	Subject: [antlr-interest] [C target] Warnings in 64-bit compile
>>
>>
>>
>>
>>
>> 	Jim,
>>
>>
>>
>>
>>
>> 	I am working on making our compiler support 64-bit builds, and
>> have
>>
>> 	run
>>
>> 	into a number of compiler warnings due to conflicting types in the
>>
>> 	ANTLR generated C code:
>>
>>
>>
>>
>>
>> 	warning C4244: '=' : conversion from 'ANTLR3_MARKER' to
>>
>> 	'ANTLR3_UINT32', possible loss of data
>>
>>
>>
>>
>>
>> 	This comes from the line:
>>
>>
>>
>>
>>
>> 	axisMask_StartIndex = INDEX();
>>
>>
>>
>>
>>
>> 	axisMask_StartIndex is declared as type ANTLR3_UINT32, and INDEX()
>> is
>>
>> 	returning type ANTLR3_MARKER. On a 64-bit build (on a Windows
>>
>> 	machine),
>>
>> 	ANTLR3_UINT32 is a typedef of uint32_t, and ANTLR3_MARKER is of
>> type
>>
>> 	ANTLR3_INT64 which is a typedef of int64_t. It seems to me that
>> this
>>
>> 	is
>>
>> 	a bug in the template, and that axisMask_StartIndex should have
>> been
>>
>> 	declared as type ANTLR3_MARKER.
>>
>>
>>
>>
>>
>> 	My questions are, do you know of a quick workaround for this for
>> now?
>>
>> 	Do you know if this will be fixed in the next release of the C
>> target
>>
>> 	runtime? Also, is there a tenative release date for the C runtime
>>
>> 	that
>>
>> 	will officially support ANTLR 3.3 (it seems that the code
>> generated
>>
>> 	by
>>
>> 	ANTLR 3.3 works ok with the 3.2 C runtime)?
>>
>>
>>
>>
>>
>> 	Thanks,
>>
>>
>>
>>
>>
>> 	Justin Murray
>>
>> 	Software Engineer
>>
>> 	jmur... at aerotech.com
>>
>>
>>
>>
>>
>> 	Aerotech, Inc.
>>
>> 	101 Zeta Drive
>>
>> 	Pittsburgh, PA 15238
>>
>> 	412-963-7470
>>
>>
>>
>>
>>
>> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>
>> 	Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>>
>> 	interest/your-
>>
>> 	email-address
>>
>>
>>
>>
>>
>> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>
>> 	Unsubscribe:
>>
>> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>>
>>
>>
>>
>>
>> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>
>> 	Unsubscribe:
>> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
>> address
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: C.stg
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110721/4b5f1c8a/attachment.pl 

From jimi at temporal-wave.com  Thu Jul 21 10:41:43 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 10:41:43 -0700
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <51c3169055d6e59d6958f779aec894c1@mail.gmail.com>

Yep - consider it done.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, July 21, 2011 10:19 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
>
> Hi Jim,
>
> I think I tracked down and fixed this bug in the C target template.
> Attached is the patched version of C.stg, which I extracted from antlr-
> 3.4-complete-no-antlrv2.jar/org/antlr/codegen/templates/C/C.stg
> and modified. It looks like it is a simple one line fix on line 1699,
> changing from ANTLR3_UINT32 to ANTLR3_MARKER. I've confirmed that this
> patch makes the warnings go away in my 64-bit build, so I'm submitting
> for your review. Please let me know if/when this makes it into a
> release.
>
> Thanks,
>
> -- Justin
>
> On 6/24/2011 1:34 PM, Jim Idle wrote:
> > There are few bug fixes in this beta - all that I can get in will be
> > in the release version, which won't be too long now. However, you
> > should still avoid backtrack and memorize unless there is no other
> choice.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Justin Murray
> >> Sent: Friday, June 24, 2011 8:12 AM
> >> To: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
> >>
> >> Jim,
> >>
> >> I just wanted to see if this was on your radar for the 3.4 C runtime
> >> update. I haven't been able to test it with beta3 because I hit some
> >> earlier roadblocks.
> >>
> >> Thanks,
> >>
> >> -- Justin
> >>
> >>
> >>
> >> 	Ah it is probably because the backtrack and memorize option. I
> >> strongly
> >>
> >> 	advise that you don't use these but left factor your grammar.
> >> However, I
> >>
> >> 	will fix it of course.
> >>
> >>
> >>
> >>
> >>
> >> 	Jim
> >>
> >>
> >>
> >>
> >>
> >> 	-----Original Message-----
> >>
> >> 	From: Justin Murray [mailto:jmur... at aerotech.com]
> >>
> >> 	Sent: Tuesday, December 28, 2010 1:39 PM
> >>
> >> 	To: Jim Idle; antl... at antlr.org
> >>
> >> 	Subject: RE: [antlr-interest] [C target] Warnings in 64-bit
> compile
> >>
> >>
> >>
> >>
> >>
> >> 	I believe that it is caused by using the memorize=true; option and
> >>
> >> 	building 64-bit. The following grammar has these warnings in the
> >>
> >> 	generated TestParser.c (compiled as C++ code in Visual Studio
> >> 2008).
> >>
> >> 	You will find the offending line at the beginning of the generated
> >>
> >> 	prog() function.
> >>
> >>
> >>
> >>
> >>
> >> 	-----------------------------
> >>
> >> 	grammar Test;
> >>
> >>
> >>
> >>
> >>
> >> 	options
> >>
> >> 	{
> >>
> >> 	language=C;
> >>
> >> 	backtrack=true;
> >>
> >> 	memoize=true;
> >>
> >> 	}
> >>
> >>
> >>
> >>
> >>
> >> 	prog
> >>
> >> 	: SOMETHING+;
> >>
> >>
> >>
> >>
> >>
> >> 	SOMETHING
> >>
> >> 	: 'A'..'Z';
> >>
> >>
> >>
> >> 	------------------------------
> >>
> >>
> >>
> >>
> >>
> >> 	Thanks,
> >>
> >>
> >>
> >>
> >>
> >> 	Justin
> >>
> >>
> >>
> >>
> >>
> >> 	-----Original Message-----
> >>
> >> 	From: antl... at antlr.org
> >>
> >> 	[mailto:antl... at antlr.org] On Behalf Of Jim Idle
> >>
> >> 	Sent: Tuesday, December 28, 2010 3:04 PM
> >>
> >> 	To: antl... at antlr.org
> >>
> >> 	Subject: Re: [antlr-interest] [C target] Warnings in 64-bit
> >> compile
> >>
> >>
> >>
> >>
> >>
> >> 	There were some such warnings a number of versions back but they
> >> are
> >>
> >> 	all fixed as far as I know. What construct are you using that
> >> results
> >>
> >> 	in the warning? If you give me a reproducible grammar snippet,
> >> then I
> >>
> >> 	will fix it for the next release, which is just waiting on my
> >> other
> >>
> >> 	commitments right now.
> >>
> >>
> >>
> >>
> >>
> >> 	Jim
> >>
> >>
> >>
> >>
> >>
> >> 	-----Original Message-----
> >>
> >> 	From: antl... at antlr.org [mailto:antlr-interest-
> >>
> >> 	boun... at antlr.org] On Behalf Of Justin Murray
> >>
> >> 	Sent: Tuesday, December 28, 2010 11:59 AM
> >>
> >> 	To: antl... at antlr.org
> >>
> >> 	Subject: [antlr-interest] [C target] Warnings in 64-bit compile
> >>
> >>
> >>
> >>
> >>
> >> 	Jim,
> >>
> >>
> >>
> >>
> >>
> >> 	I am working on making our compiler support 64-bit builds, and
> >> have
> >>
> >> 	run
> >>
> >> 	into a number of compiler warnings due to conflicting types in the
> >>
> >> 	ANTLR generated C code:
> >>
> >>
> >>
> >>
> >>
> >> 	warning C4244: '=' : conversion from 'ANTLR3_MARKER' to
> >>
> >> 	'ANTLR3_UINT32', possible loss of data
> >>
> >>
> >>
> >>
> >>
> >> 	This comes from the line:
> >>
> >>
> >>
> >>
> >>
> >> 	axisMask_StartIndex = INDEX();
> >>
> >>
> >>
> >>
> >>
> >> 	axisMask_StartIndex is declared as type ANTLR3_UINT32, and INDEX()
> >> is
> >>
> >> 	returning type ANTLR3_MARKER. On a 64-bit build (on a Windows
> >>
> >> 	machine),
> >>
> >> 	ANTLR3_UINT32 is a typedef of uint32_t, and ANTLR3_MARKER is of
> >> type
> >>
> >> 	ANTLR3_INT64 which is a typedef of int64_t. It seems to me that
> >> this
> >>
> >> 	is
> >>
> >> 	a bug in the template, and that axisMask_StartIndex should have
> >> been
> >>
> >> 	declared as type ANTLR3_MARKER.
> >>
> >>
> >>
> >>
> >>
> >> 	My questions are, do you know of a quick workaround for this for
> >> now?
> >>
> >> 	Do you know if this will be fixed in the next release of the C
> >> target
> >>
> >> 	runtime? Also, is there a tenative release date for the C runtime
> >>
> >> 	that
> >>
> >> 	will officially support ANTLR 3.3 (it seems that the code
> >> generated
> >>
> >> 	by
> >>
> >> 	ANTLR 3.3 works ok with the 3.2 C runtime)?
> >>
> >>
> >>
> >>
> >>
> >> 	Thanks,
> >>
> >>
> >>
> >>
> >>
> >> 	Justin Murray
> >>
> >> 	Software Engineer
> >>
> >> 	jmur... at aerotech.com
> >>
> >>
> >>
> >>
> >>
> >> 	Aerotech, Inc.
> >>
> >> 	101 Zeta Drive
> >>
> >> 	Pittsburgh, PA 15238
> >>
> >> 	412-963-7470
> >>
> >>
> >>
> >>
> >>
> >> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>
> >> 	Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> >>
> >> 	interest/your-
> >>
> >> 	email-address
> >>
> >>
> >>
> >>
> >>
> >> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>
> >> 	Unsubscribe:
> >>
> >> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >>
> >>
> >>
> >>
> >>
> >> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>
> >> 	Unsubscribe:
> >> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> >> email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address

From jimi at temporal-wave.com  Thu Jul 21 10:49:08 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 10:49:08 -0700
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <24fc7906acb9fca9392babb3d144d61d@mail.gmail.com>

Well actually as this is a change to the template, it is not in the 3.4
release, but will be in the next patch release (should there be one).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, July 21, 2011 10:19 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
>
> Hi Jim,
>
> I think I tracked down and fixed this bug in the C target template.
> Attached is the patched version of C.stg, which I extracted from antlr-
> 3.4-complete-no-antlrv2.jar/org/antlr/codegen/templates/C/C.stg
> and modified. It looks like it is a simple one line fix on line 1699,
> changing from ANTLR3_UINT32 to ANTLR3_MARKER. I've confirmed that this
> patch makes the warnings go away in my 64-bit build, so I'm submitting
> for your review. Please let me know if/when this makes it into a
> release.
>
> Thanks,
>
> -- Justin
>
> On 6/24/2011 1:34 PM, Jim Idle wrote:
> > There are few bug fixes in this beta - all that I can get in will be
> > in the release version, which won't be too long now. However, you
> > should still avoid backtrack and memorize unless there is no other
> choice.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Justin Murray
> >> Sent: Friday, June 24, 2011 8:12 AM
> >> To: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
> >>
> >> Jim,
> >>
> >> I just wanted to see if this was on your radar for the 3.4 C runtime
> >> update. I haven't been able to test it with beta3 because I hit some
> >> earlier roadblocks.
> >>
> >> Thanks,
> >>
> >> -- Justin
> >>
> >>
> >>
> >> 	Ah it is probably because the backtrack and memorize option. I
> >> strongly
> >>
> >> 	advise that you don't use these but left factor your grammar.
> >> However, I
> >>
> >> 	will fix it of course.
> >>
> >>
> >>
> >>
> >>
> >> 	Jim
> >>
> >>
> >>
> >>
> >>
> >> 	-----Original Message-----
> >>
> >> 	From: Justin Murray [mailto:jmur... at aerotech.com]
> >>
> >> 	Sent: Tuesday, December 28, 2010 1:39 PM
> >>
> >> 	To: Jim Idle; antl... at antlr.org
> >>
> >> 	Subject: RE: [antlr-interest] [C target] Warnings in 64-bit
> compile
> >>
> >>
> >>
> >>
> >>
> >> 	I believe that it is caused by using the memorize=true; option and
> >>
> >> 	building 64-bit. The following grammar has these warnings in the
> >>
> >> 	generated TestParser.c (compiled as C++ code in Visual Studio
> >> 2008).
> >>
> >> 	You will find the offending line at the beginning of the generated
> >>
> >> 	prog() function.
> >>
> >>
> >>
> >>
> >>
> >> 	-----------------------------
> >>
> >> 	grammar Test;
> >>
> >>
> >>
> >>
> >>
> >> 	options
> >>
> >> 	{
> >>
> >> 	language=C;
> >>
> >> 	backtrack=true;
> >>
> >> 	memoize=true;
> >>
> >> 	}
> >>
> >>
> >>
> >>
> >>
> >> 	prog
> >>
> >> 	: SOMETHING+;
> >>
> >>
> >>
> >>
> >>
> >> 	SOMETHING
> >>
> >> 	: 'A'..'Z';
> >>
> >>
> >>
> >> 	------------------------------
> >>
> >>
> >>
> >>
> >>
> >> 	Thanks,
> >>
> >>
> >>
> >>
> >>
> >> 	Justin
> >>
> >>
> >>
> >>
> >>
> >> 	-----Original Message-----
> >>
> >> 	From: antl... at antlr.org
> >>
> >> 	[mailto:antl... at antlr.org] On Behalf Of Jim Idle
> >>
> >> 	Sent: Tuesday, December 28, 2010 3:04 PM
> >>
> >> 	To: antl... at antlr.org
> >>
> >> 	Subject: Re: [antlr-interest] [C target] Warnings in 64-bit
> >> compile
> >>
> >>
> >>
> >>
> >>
> >> 	There were some such warnings a number of versions back but they
> >> are
> >>
> >> 	all fixed as far as I know. What construct are you using that
> >> results
> >>
> >> 	in the warning? If you give me a reproducible grammar snippet,
> >> then I
> >>
> >> 	will fix it for the next release, which is just waiting on my
> >> other
> >>
> >> 	commitments right now.
> >>
> >>
> >>
> >>
> >>
> >> 	Jim
> >>
> >>
> >>
> >>
> >>
> >> 	-----Original Message-----
> >>
> >> 	From: antl... at antlr.org [mailto:antlr-interest-
> >>
> >> 	boun... at antlr.org] On Behalf Of Justin Murray
> >>
> >> 	Sent: Tuesday, December 28, 2010 11:59 AM
> >>
> >> 	To: antl... at antlr.org
> >>
> >> 	Subject: [antlr-interest] [C target] Warnings in 64-bit compile
> >>
> >>
> >>
> >>
> >>
> >> 	Jim,
> >>
> >>
> >>
> >>
> >>
> >> 	I am working on making our compiler support 64-bit builds, and
> >> have
> >>
> >> 	run
> >>
> >> 	into a number of compiler warnings due to conflicting types in the
> >>
> >> 	ANTLR generated C code:
> >>
> >>
> >>
> >>
> >>
> >> 	warning C4244: '=' : conversion from 'ANTLR3_MARKER' to
> >>
> >> 	'ANTLR3_UINT32', possible loss of data
> >>
> >>
> >>
> >>
> >>
> >> 	This comes from the line:
> >>
> >>
> >>
> >>
> >>
> >> 	axisMask_StartIndex = INDEX();
> >>
> >>
> >>
> >>
> >>
> >> 	axisMask_StartIndex is declared as type ANTLR3_UINT32, and INDEX()
> >> is
> >>
> >> 	returning type ANTLR3_MARKER. On a 64-bit build (on a Windows
> >>
> >> 	machine),
> >>
> >> 	ANTLR3_UINT32 is a typedef of uint32_t, and ANTLR3_MARKER is of
> >> type
> >>
> >> 	ANTLR3_INT64 which is a typedef of int64_t. It seems to me that
> >> this
> >>
> >> 	is
> >>
> >> 	a bug in the template, and that axisMask_StartIndex should have
> >> been
> >>
> >> 	declared as type ANTLR3_MARKER.
> >>
> >>
> >>
> >>
> >>
> >> 	My questions are, do you know of a quick workaround for this for
> >> now?
> >>
> >> 	Do you know if this will be fixed in the next release of the C
> >> target
> >>
> >> 	runtime? Also, is there a tenative release date for the C runtime
> >>
> >> 	that
> >>
> >> 	will officially support ANTLR 3.3 (it seems that the code
> >> generated
> >>
> >> 	by
> >>
> >> 	ANTLR 3.3 works ok with the 3.2 C runtime)?
> >>
> >>
> >>
> >>
> >>
> >> 	Thanks,
> >>
> >>
> >>
> >>
> >>
> >> 	Justin Murray
> >>
> >> 	Software Engineer
> >>
> >> 	jmur... at aerotech.com
> >>
> >>
> >>
> >>
> >>
> >> 	Aerotech, Inc.
> >>
> >> 	101 Zeta Drive
> >>
> >> 	Pittsburgh, PA 15238
> >>
> >> 	412-963-7470
> >>
> >>
> >>
> >>
> >>
> >> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>
> >> 	Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> >>
> >> 	interest/your-
> >>
> >> 	email-address
> >>
> >>
> >>
> >>
> >>
> >> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>
> >> 	Unsubscribe:
> >>
> >> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >>
> >>
> >>
> >>
> >>
> >> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>
> >> 	Unsubscribe:
> >> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
> >> address
> >>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> >> email-address
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-email-address

From jmurray at aerotech.com  Thu Jul 21 10:53:11 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 21 Jul 2011 13:53:11 -0400
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <24fc7906acb9fca9392babb3d144d61d@mail.gmail.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
	<24fc7906acb9fca9392babb3d144d61d@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5B@EXCH-VIRTUAL.aerotechad.com>

Understood, thanks!

On 7/21/2011 1:49 PM, Jim Idle wrote:
> Well actually as this is a change to the template, it is not in the 3.4
> release, but will be in the next patch release (should there be one).
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Justin Murray
>> Sent: Thursday, July 21, 2011 10:19 AM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
>>
>> Hi Jim,
>>
>> I think I tracked down and fixed this bug in the C target template.
>> Attached is the patched version of C.stg, which I extracted from antlr-
>> 3.4-complete-no-antlrv2.jar/org/antlr/codegen/templates/C/C.stg
>> and modified. It looks like it is a simple one line fix on line 1699,
>> changing from ANTLR3_UINT32 to ANTLR3_MARKER. I've confirmed that this
>> patch makes the warnings go away in my 64-bit build, so I'm submitting
>> for your review. Please let me know if/when this makes it into a
>> release.
>>
>> Thanks,
>>
>> -- Justin
>>
>> On 6/24/2011 1:34 PM, Jim Idle wrote:
>>> There are few bug fixes in this beta - all that I can get in will be
>>> in the release version, which won't be too long now. However, you
>>> should still avoid backtrack and memorize unless there is no other
>> choice.
>>> Jim
>>>
>>>> -----Original Message-----
>>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>>> bounces at antlr.org] On Behalf Of Justin Murray
>>>> Sent: Friday, June 24, 2011 8:12 AM
>>>> To: antlr-interest at antlr.org
>>>> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
>>>>
>>>> Jim,
>>>>
>>>> I just wanted to see if this was on your radar for the 3.4 C runtime
>>>> update. I haven't been able to test it with beta3 because I hit some
>>>> earlier roadblocks.
>>>>
>>>> Thanks,
>>>>
>>>> -- Justin
>>>>
>>>>
>>>>
>>>> 	Ah it is probably because the backtrack and memorize option. I
>>>> strongly
>>>>
>>>> 	advise that you don't use these but left factor your grammar.
>>>> However, I
>>>>
>>>> 	will fix it of course.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Jim
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	-----Original Message-----
>>>>
>>>> 	From: Justin Murray [mailto:jmur... at aerotech.com]
>>>>
>>>> 	Sent: Tuesday, December 28, 2010 1:39 PM
>>>>
>>>> 	To: Jim Idle; antl... at antlr.org
>>>>
>>>> 	Subject: RE: [antlr-interest] [C target] Warnings in 64-bit
>> compile
>>>>
>>>>
>>>>
>>>>
>>>> 	I believe that it is caused by using the memorize=true; option and
>>>>
>>>> 	building 64-bit. The following grammar has these warnings in the
>>>>
>>>> 	generated TestParser.c (compiled as C++ code in Visual Studio
>>>> 2008).
>>>>
>>>> 	You will find the offending line at the beginning of the generated
>>>>
>>>> 	prog() function.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	-----------------------------
>>>>
>>>> 	grammar Test;
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	options
>>>>
>>>> 	{
>>>>
>>>> 	language=C;
>>>>
>>>> 	backtrack=true;
>>>>
>>>> 	memoize=true;
>>>>
>>>> 	}
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	prog
>>>>
>>>> 	: SOMETHING+;
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	SOMETHING
>>>>
>>>> 	: 'A'..'Z';
>>>>
>>>>
>>>>
>>>> 	------------------------------
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Thanks,
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Justin
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	-----Original Message-----
>>>>
>>>> 	From: antl... at antlr.org
>>>>
>>>> 	[mailto:antl... at antlr.org] On Behalf Of Jim Idle
>>>>
>>>> 	Sent: Tuesday, December 28, 2010 3:04 PM
>>>>
>>>> 	To: antl... at antlr.org
>>>>
>>>> 	Subject: Re: [antlr-interest] [C target] Warnings in 64-bit
>>>> compile
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	There were some such warnings a number of versions back but they
>>>> are
>>>>
>>>> 	all fixed as far as I know. What construct are you using that
>>>> results
>>>>
>>>> 	in the warning? If you give me a reproducible grammar snippet,
>>>> then I
>>>>
>>>> 	will fix it for the next release, which is just waiting on my
>>>> other
>>>>
>>>> 	commitments right now.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Jim
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	-----Original Message-----
>>>>
>>>> 	From: antl... at antlr.org [mailto:antlr-interest-
>>>>
>>>> 	boun... at antlr.org] On Behalf Of Justin Murray
>>>>
>>>> 	Sent: Tuesday, December 28, 2010 11:59 AM
>>>>
>>>> 	To: antl... at antlr.org
>>>>
>>>> 	Subject: [antlr-interest] [C target] Warnings in 64-bit compile
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Jim,
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	I am working on making our compiler support 64-bit builds, and
>>>> have
>>>>
>>>> 	run
>>>>
>>>> 	into a number of compiler warnings due to conflicting types in the
>>>>
>>>> 	ANTLR generated C code:
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	warning C4244: '=' : conversion from 'ANTLR3_MARKER' to
>>>>
>>>> 	'ANTLR3_UINT32', possible loss of data
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	This comes from the line:
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	axisMask_StartIndex = INDEX();
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	axisMask_StartIndex is declared as type ANTLR3_UINT32, and INDEX()
>>>> is
>>>>
>>>> 	returning type ANTLR3_MARKER. On a 64-bit build (on a Windows
>>>>
>>>> 	machine),
>>>>
>>>> 	ANTLR3_UINT32 is a typedef of uint32_t, and ANTLR3_MARKER is of
>>>> type
>>>>
>>>> 	ANTLR3_INT64 which is a typedef of int64_t. It seems to me that
>>>> this
>>>>
>>>> 	is
>>>>
>>>> 	a bug in the template, and that axisMask_StartIndex should have
>>>> been
>>>>
>>>> 	declared as type ANTLR3_MARKER.
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	My questions are, do you know of a quick workaround for this for
>>>> now?
>>>>
>>>> 	Do you know if this will be fixed in the next release of the C
>>>> target
>>>>
>>>> 	runtime? Also, is there a tenative release date for the C runtime
>>>>
>>>> 	that
>>>>
>>>> 	will officially support ANTLR 3.3 (it seems that the code
>>>> generated
>>>>
>>>> 	by
>>>>
>>>> 	ANTLR 3.3 works ok with the 3.2 C runtime)?
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Thanks,
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Justin Murray
>>>>
>>>> 	Software Engineer
>>>>
>>>> 	jmur... at aerotech.com
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	Aerotech, Inc.
>>>>
>>>> 	101 Zeta Drive
>>>>
>>>> 	Pittsburgh, PA 15238
>>>>
>>>> 	412-963-7470
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>
>>>> 	Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>>>>
>>>> 	interest/your-
>>>>
>>>> 	email-address
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>
>>>> 	Unsubscribe:
>>>>
>>>> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>> address
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> 	List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>
>>>> 	Unsubscribe:
>>>> 	http://www.antlr.org/mailman/options/antlr-interest/your-email-
>>>> address
>>>>
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>> interest/your-
>>>> email-address
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-
>> interest/your-email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jb at jblache.org  Thu Jul 21 11:27:51 2011
From: jb at jblache.org (Julien BLACHE)
Date: Thu, 21 Jul 2011 20:27:51 +0200
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <24fc7906acb9fca9392babb3d144d61d@mail.gmail.com> (Jim Idle's
	message of "Thu, 21 Jul 2011 10:49:08 -0700")
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
	<24fc7906acb9fca9392babb3d144d61d@mail.gmail.com>
Message-ID: <87y5zr8p5k.fsf@sonic.technologeek.org>

Jim Idle <jimi at temporal-wave.com> wrote:

Hi Jim!

> Well actually as this is a change to the template, it is not in the 3.4
> release, but will be in the next patch release (should there be one).

While we're talking C target and release, any ETA for the C runtime
tarball for 3.4?

Thanks,

JB.

-- 
Julien BLACHE                                   <http://www.jblache.org> 
<jb at jblache.org>                                  GPG KeyID 0xF5D65169

From vlad at demoninsight.com  Thu Jul 21 11:45:37 2011
From: vlad at demoninsight.com (Vlad)
Date: Thu, 21 Jul 2011 13:45:37 -0500
Subject: [antlr-interest] 'Dude' error in v3.4 and possible bugs
 explained [was: on "crap" grammars]
Message-ID: <CAM-qmza0NLrDQ7yqSDeBsxkDo+vf_3UbO+qNv_kwYDUQw__EDQ@mail.gmail.com>

Previously I was on 3.2 runtime. It occurred to me to try 3.4 released a day
ago. To this end I've switched to 3.4-beta4 runtime as well. Using one of
the testerrors.g grammars with non-inlined int/float tokens and parser
generated by antlr-3.4-complete.jar I now get on input string "name : bad":

<string>(1)  : error 4 : Unexpected token, at offset 6
    near [Index: 4 (Start: 31458399-Stop: 31458401) ='bad', type<6> Line: 1
LinePos:6]
     : unexpected input...
  expected one of : Actually dude, we didn't seem to be expecting anything
here, or at least
I could not work out what I was expecting, like so many of us these days!

(this required switching to antlr3StringStreamNew()
from antlr3NewAsciiStringInPlaceStream() as was posted by Jim here:
http://groups.google.com/group/il-antlr-interest/browse_thread/thread/981a79239e352c89
and
as is mentioned within that thread the last argument can't be NULL to avoid
a segfault).

So, this is better because at least the offending token is identified
correctly. The reason the expected set is still not identified correctly
(the 'Dude' part) is because the generated error path for the 'type'
non-terminal always sets the exception's expectingSet to NULL:

        {
            if ( ((LA(1) >= AT_FLOAT_) && (LA(1) <= AT_INT_)) )
            {
                CONSUME();
                PERRORRECOVERY=ANTLR3_FALSE;
            }
            else
            {
                CONSTRUCTEX();
                EXCEPTION->type         = ANTLR3_MISMATCHED_SET_EXCEPTION;
                EXCEPTION->name         = (void
*)ANTLR3_MISMATCHED_SET_NAME;
                EXCEPTION->expectingSet = NULL; // <--- ????

                goto ruletypeEx;
            }


        }

I might be called names again, but I'd say this error handling does not look
correct because the rule knows exactly what token set it expects right here
but then goes ahead and ignores that info for the purposes of generating
exception info (what's the point in indicating ANTLR3_MISMATCHED_SET_NAME if
that set is always set to NULL).

Examining the generated parser code, I in fact see what appears to be a
correct set that would be FOLLOW(':'): it has bits set for AT_FLOAT_ and
AT_INT_ and is FOLLOWPUSH()ed before the rule is entered.

By manually doctoring the parser code to set  EXCEPTION->expectingSet to
point to this FOLLOW set, I get rid of the 'Dude' message but hit on another
bug in displayRecognitionError() that prints the wrong two token names:

<string>(1)  : error 4 : Unexpected token, at offset 6
    near [Index: 4 (Start: 13845599-Stop: 13845601) ='bad', type<6> Line: 1
LinePos:6]
     : unexpected input...
  expected one of : <EOR>, <DOWN>

Looking at the stock displayRecognitionError() code, it is clear that the
loop over the set bits is not correct (the TODO is right). Fixing it by
adding errBits->isMember(errBits, bit):

for (bit = 1; bit < numbits && count < 8 && count < size; bit++)
{
// TODO: This doesn;t look right - should be asking if the bit is set!!
//
if  (errBits->isMember(errBits, bit) && tokenNames[bit]) // <--- ???? was
missing bitset member check
{
ANTLR3_FPRINTF(stderr, "%s%s", count > 0 ? ", " : "", tokenNames[bit]);
count++;
}
}

finally gets me the error message that makes sense:

<string>(1)  : error 4 : Unexpected token, at offset 6
    near [Index: 4 (Start: 30442591-Stop: 30442593) ='bad', type<6> Line: 1
LinePos:6]
     : unexpected input...
  expected one of : AT_FLOAT_, AT_INT_


"Crap" grammars, I hear somebody said? Hmm, I don't think so...

From jimi at temporal-wave.com  Thu Jul 21 12:00:34 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 12:00:34 -0700
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <87y5zr8p5k.fsf@sonic.technologeek.org>
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
	<24fc7906acb9fca9392babb3d144d61d@mail.gmail.com>
	<87y5zr8p5k.fsf@sonic.technologeek.org>
Message-ID: <b9949ed1ad745a1d2f44dcbc5ad02515@mail.gmail.com>

Today - I am just reviewing a few things to see if I want to fix them
first...

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Julien BLACHE
> Sent: Thursday, July 21, 2011 11:28 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [C target] Warnings in 64-bit compile
>
> Jim Idle <jimi at temporal-wave.com> wrote:
>
> Hi Jim!
>
> > Well actually as this is a change to the template, it is not in the
> > 3.4 release, but will be in the next patch release (should there be
> one).
>
> While we're talking C target and release, any ETA for the C runtime
> tarball for 3.4?
>
> Thanks,
>
> JB.
>
> --
> Julien BLACHE
> <http://www.jblache.org>
> <jb at jblache.org>                                  GPG KeyID 0xF5D65169
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jb at jblache.org  Thu Jul 21 12:21:51 2011
From: jb at jblache.org (Julien BLACHE)
Date: Thu, 21 Jul 2011 21:21:51 +0200
Subject: [antlr-interest] [C target] Warnings in 64-bit compile
In-Reply-To: <b9949ed1ad745a1d2f44dcbc5ad02515@mail.gmail.com> (Jim Idle's
	message of "Thu, 21 Jul 2011 12:00:34 -0700")
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD2B@EXCH-VIRTUAL.aerotechad.com>
	<8450b88bec361aa3932f066b61b05b4c@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5A@EXCH-VIRTUAL.aerotechad.com>
	<24fc7906acb9fca9392babb3d144d61d@mail.gmail.com>
	<87y5zr8p5k.fsf@sonic.technologeek.org>
	<b9949ed1ad745a1d2f44dcbc5ad02515@mail.gmail.com>
Message-ID: <87tyaf8mnk.fsf@sonic.technologeek.org>

Jim Idle <jimi at temporal-wave.com> wrote:

> Today - I am just reviewing a few things to see if I want to fix them
> first...

Great! Now let's see if we can update ANTLR v3 in Debian with 3.4 :-)

JB.

-- 
Julien BLACHE                                   <http://www.jblache.org> 
<jb at jblache.org>                                  GPG KeyID 0xF5D65169

From jmurray at aerotech.com  Thu Jul 21 12:27:39 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Thu, 21 Jul 2011 15:27:39 -0400
Subject: [antlr-interest] 'Dude' error in v3.4 and possible bugs
	explained [was: on "crap" grammars]
In-Reply-To: <CAM-qmza0NLrDQ7yqSDeBsxkDo+vf_3UbO+qNv_kwYDUQw__EDQ@mail.gmail.com>
References: <CAM-qmza0NLrDQ7yqSDeBsxkDo+vf_3UbO+qNv_kwYDUQw__EDQ@mail.gmail.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5F@EXCH-VIRTUAL.aerotechad.com>

I think that Vlad may be onto something here. From what I can tell from my generated grammar, this only affects ANTLR3_MISMATCHED_SET_EXCEPTION type exceptions. My grammar has several hundred parser rules, but only in 4 cases is a ANTLR3_MISMATCHED_SET_EXCEPTION generated. In all 4 cases, the expectingSet is being set to NULL, and in no other cases is expectingSet being set to NULL. I agree that this would be improved if changed as Vlad described.

It just so happens that the way I implemented my exception handling, I treat ANTLR3_MISMATCHED_SET_EXCEPTION the same as ANTLR3_RECOGNITION_EXCEPTION, and don't bother to display the expectingSet, so I never would have discovered this problem.

Since I recently figured out how the C template works, I decided to take a peek. I found the following in antlr-3.4-complete-no-antlrv2.jar/org/antlr/codegen/templates/C/C.stg:

<if(PARSER)>
EXCEPTION->expectingSet = NULL;
<! use following code to make it recover inline;
EXCEPTION->expectingSet = &FOLLOW_set_in_<ruleName><elementIndex>;
!>
<endif>

So it appears that this was done explicitly at some point. You could edit C.stg to uncomment the code above, and I imagine that it will generate the correct follow set pointer. Perhaps Jim knows why this is like this? This may be avoiding some other problems, so I don't know how safe of a change this would be.

- Justin

On 7/21/2011 2:45 PM, Vlad wrote: 

	Previously I was on 3.2 runtime. It occurred to me to try 3.4 released a day ago. To this end I've switched to 3.4-beta4 runtime as well. Using one of the testerrors.g grammars with non-inlined int/float tokens and parser generated by antlr-3.4-complete.jar I now get on input string "name : bad": 

	<string>(1)  : error 4 : Unexpected token, at offset 6
	    near [Index: 4 (Start: 31458399-Stop: 31458401) ='bad', type<6> Line: 1 LinePos:6]
	     : unexpected input...
	  expected one of : Actually dude, we didn't seem to be expecting anything here, or at least
	I could not work out what I was expecting, like so many of us these days!

	(this required switching to antlr3StringStreamNew() from antlr3NewAsciiStringInPlaceStream() as was posted by Jim here: http://groups.google.com/group/il-antlr-interest/browse_thread/thread/981a79239e352c89 and as is mentioned within that thread the last argument can't be NULL to avoid a segfault).

	So, this is better because at least the offending token is identified correctly. The reason the expected set is still not identified correctly (the 'Dude' part) is because the generated error path for the 'type' non-terminal always sets the exception's expectingSet to NULL:

	        {
	            if ( ((LA(1) >= AT_FLOAT_) && (LA(1) <= AT_INT_)) )
	            {
	                CONSUME();
	                PERRORRECOVERY=ANTLR3_FALSE;
	            }
	            else
	            {
	                CONSTRUCTEX();
	                EXCEPTION->type         = ANTLR3_MISMATCHED_SET_EXCEPTION;
	                EXCEPTION->name         = (void *)ANTLR3_MISMATCHED_SET_NAME;
	                EXCEPTION->expectingSet = NULL; // <--- ????

	                goto ruletypeEx;
	            }


	        }

	I might be called names again, but I'd say this error handling does not look correct because the rule knows exactly what token set it expects right here but then goes ahead and ignores that info for the purposes of generating exception info (what's the point in indicating ANTLR3_MISMATCHED_SET_NAME if that set is always set to NULL).

	Examining the generated parser code, I in fact see what appears to be a correct set that would be FOLLOW(':'): it has bits set for AT_FLOAT_ and AT_INT_ and is FOLLOWPUSH()ed before the rule is entered.

	By manually doctoring the parser code to set  EXCEPTION->expectingSet to point to this FOLLOW set, I get rid of the 'Dude' message but hit on another bug in displayRecognitionError() that prints the wrong two token names:

	<string>(1)  : error 4 : Unexpected token, at offset 6
	    near [Index: 4 (Start: 13845599-Stop: 13845601) ='bad', type<6> Line: 1 LinePos:6]
	     : unexpected input...
	  expected one of : <EOR>, <DOWN>

	Looking at the stock displayRecognitionError() code, it is clear that the loop over the set bits is not correct (the TODO is right). Fixing it by adding errBits->isMember(errBits, bit):

	for (bit = 1; bit < numbits && count < 8 && count < size; bit++)
	{
	// TODO: This doesn;t look right - should be asking if the bit is set!!
	//
	if  (errBits->isMember(errBits, bit) && tokenNames[bit]) // <--- ???? was missing bitset member check
	{
	ANTLR3_FPRINTF(stderr, "%s%s", count > 0 ? ", " : "", tokenNames[bit]); 
	count++;
	}
	}

	finally gets me the error message that makes sense:

	<string>(1)  : error 4 : Unexpected token, at offset 6
	    near [Index: 4 (Start: 30442591-Stop: 30442593) ='bad', type<6> Line: 1 LinePos:6]
	     : unexpected input...
	  expected one of : AT_FLOAT_, AT_INT_


	"Crap" grammars, I hear somebody said? Hmm, I don't think so...





From jimi at temporal-wave.com  Thu Jul 21 12:37:39 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 21 Jul 2011 12:37:39 -0700
Subject: [antlr-interest] 'Dude' error in v3.4 and possible bugs
 explained [was: on "crap" grammars]
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5F@EXCH-VIRTUAL.aerotechad.com>
References: <CAM-qmza0NLrDQ7yqSDeBsxkDo+vf_3UbO+qNv_kwYDUQw__EDQ@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5F@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <577c3156bfb5513b5d51ab20837203ef@mail.gmail.com>

This was changed because the tool no longer generates those sets.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Thursday, July 21, 2011 12:28 PM
> To: Vlad
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] 'Dude' error in v3.4 and possible bugs
> explained [was: on "crap" grammars]
>
> I think that Vlad may be onto something here. From what I can tell from
> my generated grammar, this only affects ANTLR3_MISMATCHED_SET_EXCEPTION
> type exceptions. My grammar has several hundred parser rules, but only
> in 4 cases is a ANTLR3_MISMATCHED_SET_EXCEPTION generated. In all 4
> cases, the expectingSet is being set to NULL, and in no other cases is
> expectingSet being set to NULL. I agree that this would be improved if
> changed as Vlad described.
>
> It just so happens that the way I implemented my exception handling, I
> treat ANTLR3_MISMATCHED_SET_EXCEPTION the same as
> ANTLR3_RECOGNITION_EXCEPTION, and don't bother to display the
> expectingSet, so I never would have discovered this problem.
>
> Since I recently figured out how the C template works, I decided to
> take a peek. I found the following in antlr-3.4-complete-no-
> antlrv2.jar/org/antlr/codegen/templates/C/C.stg:
>
> <if(PARSER)>
> EXCEPTION->expectingSet = NULL;
> <! use following code to make it recover inline;
> EXCEPTION->expectingSet = &FOLLOW_set_in_<ruleName><elementIndex>;
> !>
> <endif>
>
> So it appears that this was done explicitly at some point. You could
> edit C.stg to uncomment the code above, and I imagine that it will
> generate the correct follow set pointer. Perhaps Jim knows why this is
> like this? This may be avoiding some other problems, so I don't know
> how safe of a change this would be.
>
> - Justin
>
> On 7/21/2011 2:45 PM, Vlad wrote:
>
> 	Previously I was on 3.2 runtime. It occurred to me to try 3.4
> released a day ago. To this end I've switched to 3.4-beta4 runtime as
> well. Using one of the testerrors.g grammars with non-inlined int/float
> tokens and parser generated by antlr-3.4-complete.jar I now get on
> input string "name : bad":
>
> 	<string>(1)  : error 4 : Unexpected token, at offset 6
> 	    near [Index: 4 (Start: 31458399-Stop: 31458401) ='bad',
> type<6> Line: 1 LinePos:6]
> 	     : unexpected input...
> 	  expected one of : Actually dude, we didn't seem to be expecting
> anything here, or at least
> 	I could not work out what I was expecting, like so many of us
> these days!
>
> 	(this required switching to antlr3StringStreamNew() from
> antlr3NewAsciiStringInPlaceStream() as was posted by Jim here:
> http://groups.google.com/group/il-antlr-
> interest/browse_thread/thread/981a79239e352c89 and as is mentioned
> within that thread the last argument can't be NULL to avoid a
> segfault).
>
> 	So, this is better because at least the offending token is
> identified correctly. The reason the expected set is still not
> identified correctly (the 'Dude' part) is because the generated error
> path for the 'type' non-terminal always sets the exception's
> expectingSet to NULL:
>
> 	        {
> 	            if ( ((LA(1) >= AT_FLOAT_) && (LA(1) <= AT_INT_)) )
> 	            {
> 	                CONSUME();
> 	                PERRORRECOVERY=ANTLR3_FALSE;
> 	            }
> 	            else
> 	            {
> 	                CONSTRUCTEX();
> 	                EXCEPTION->type         =
> ANTLR3_MISMATCHED_SET_EXCEPTION;
> 	                EXCEPTION->name         = (void
> *)ANTLR3_MISMATCHED_SET_NAME;
> 	                EXCEPTION->expectingSet = NULL; // <--- ????
>
> 	                goto ruletypeEx;
> 	            }
>
>
> 	        }
>
> 	I might be called names again, but I'd say this error handling
> does not look correct because the rule knows exactly what token set it
> expects right here but then goes ahead and ignores that info for the
> purposes of generating exception info (what's the point in indicating
> ANTLR3_MISMATCHED_SET_NAME if that set is always set to NULL).
>
> 	Examining the generated parser code, I in fact see what appears to
> be a correct set that would be FOLLOW(':'): it has bits set for
> AT_FLOAT_ and AT_INT_ and is FOLLOWPUSH()ed before the rule is entered.
>
> 	By manually doctoring the parser code to set  EXCEPTION-
> >expectingSet to point to this FOLLOW set, I get rid of the 'Dude'
> message but hit on another bug in displayRecognitionError() that prints
> the wrong two token names:
>
> 	<string>(1)  : error 4 : Unexpected token, at offset 6
> 	    near [Index: 4 (Start: 13845599-Stop: 13845601) ='bad',
> type<6> Line: 1 LinePos:6]
> 	     : unexpected input...
> 	  expected one of : <EOR>, <DOWN>
>
> 	Looking at the stock displayRecognitionError() code, it is clear
> that the loop over the set bits is not correct (the TODO is right).
> Fixing it by adding errBits->isMember(errBits, bit):
>
> 	for (bit = 1; bit < numbits && count < 8 && count < size; bit++)
> 	{
> 	// TODO: This doesn;t look right - should be asking if the bit is
> set!!
> 	//
> 	if  (errBits->isMember(errBits, bit) && tokenNames[bit]) // <---
> ???? was missing bitset member check
> 	{
> 	ANTLR3_FPRINTF(stderr, "%s%s", count > 0 ? ", " : "",
> tokenNames[bit]);
> 	count++;
> 	}
> 	}
>
> 	finally gets me the error message that makes sense:
>
> 	<string>(1)  : error 4 : Unexpected token, at offset 6
> 	    near [Index: 4 (Start: 30442591-Stop: 30442593) ='bad',
> type<6> Line: 1 LinePos:6]
> 	     : unexpected input...
> 	  expected one of : AT_FLOAT_, AT_INT_
>
>
> 	"Crap" grammars, I hear somebody said? Hmm, I don't think so...
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gary at sumwise.com  Thu Jul 21 17:10:31 2011
From: gary at sumwise.com (Gary Miller)
Date: Fri, 22 Jul 2011 10:10:31 +1000
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <4E280A86.2020607@tis.bz.it>
References: <4E280A86.2020607@tis.bz.it>
Message-ID: <CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>

Try the following options.

1.
locationStep: edge condition? (repeat | shortestPath)? ('>' locationStep)?
   -> ^(LOCATIONSTEP condition? repeat? shortestPath? locationStep?);

condition: ( filter | subquery ) condition?
   -> ^(CONDITION filter? subquery? condition?);

or
2.
locationStep
:  edge condition? repeat?  ('>' locationStep)?  -> ^(LOCATIONSTEP
condition? shortestPath? locationStep?)
|  edge condition? shortestPath? ('>' locationStep)?  ->
^(LOCATIONSTEP condition? shortestPath? locationStep?)
;

condition
: filter condition?   -> ^(CONDITION filter condition?)
| subquery condition?   -> ^(CONDITION subquery condition?)
;

Regards
Gary


On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
<claudio.martella at tis.bz.it> wrote:
> Hello,
>
> I've this grammar: http://pastebin.com/dNzdGx8R but i get this error
> when I test it with AntlrWorks:
>
> [11:23:59] /Users/hammer/output/RDFPathParser.java:383: incompatible types
> [11:23:59] found ? : RDFPathParser.repeat_return
> [11:23:59] required: RDFPathParser.shortestPath_return
> [11:23:59] ? ? ? ? ? ? ? ? ? ? v=repeat();
> [11:23:59] ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
> [11:23:59] /Users/hammer/output/RDFPathParser.java:586: incompatible types
> [11:23:59] found ? : RDFPathParser.filter_return
> [11:23:59] required: RDFPathParser.subquery_return
> [11:23:59] ? ? ? ? ? ? ? ? ? ? v=filter();
> [11:23:59] ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
> [11:23:59] 2 errors
>
>
> Basically I think the problem is the assignment in the subrules with ORs
> in two statements:
>
> locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
> locationStep)?
> ? ?-> ^(LOCATIONSTEP condition $v locationStep);
>
> condition: ( v=filter | v=subquery ) condition?
> ? ?-> ^(CONDITION $v condition);
>
> How do I handle these situations where I have the two or more options in
> a subrule?
>
>
> Thanks
> Claudio
>
> --
> Claudio Martella
> Free Software & Open Technologies
> Analyst
>
> TIS innovation park
> Via Siemens 19 | Siemensstr. 19
> 39100 Bolzano | 39100 Bozen
> Tel. +39 0471 068 123
> Fax ?+39 0471 068 129
> claudio.martella at tis.bz.it http://www.tis.bz.it
>
> Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web si
> ?te www.tis.bz.it.
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From srinivasan.karthikeyan.pitchai at oracle.com  Fri Jul 22 00:46:44 2011
From: srinivasan.karthikeyan.pitchai at oracle.com (srinivasan karthikeyan pitchai)
Date: Fri, 22 Jul 2011 13:16:44 +0530
Subject: [antlr-interest] Deciphering the TreeWalker error message ...
In-Reply-To: <4E2855A2.4000402@kjchome.homeip.net>
References: <4E270666.7030100@oracle.com>
	<1311182115.38258.YahooMailNeo@web125516.mail.ne1.yahoo.com>
	<CAFCNb3h4KHd-YY69=Z8j3ApawxkphW0zO5+wWqWxSufRBB=u4A@mail.gmail.com>
	<7d488c73a792bb7adaf027763d822acf@mail.gmail.com>
	<4E27B88F.1010504@oracle.com> <4E27B924.4050108@oracle.com>
	<CAFCNb3gN+KT_GOBGkuEr6zCtpUfBmL+Dq7v+KDfR2uc1yZKfEQ@mail.gmail.com>
	<4E27C130.7050400@oracle.com>
	<CAFCNb3jGAeJ2F3C513nN2HhNDqiYFaSRHPzL9=uOZq+GWfkqEA@mail.gmail.com>
	<4E2855A2.4000402@kjchome.homeip.net>
Message-ID: <4E292AE4.9080402@oracle.com>

Hi Folks,
I take on board the unanimous input that the tree grammar rule should 
start with TOKEN.

However what keeps me puzzled is that, inspite of having all my rules 
intact and just slightly rejigging my alternatives make the tree grammar 
parse the input tree perfectly fine.  I am able to parse huge SQL of 
about 160 lines with many many expressions fine!

Also  wouldn't the following expression

^(^(SUB_EXPR A) B)

simply mean that we have a simple list of subtree followed by a node B 
that is rooted at a nil node?

I was under the impression that the above syntax is valid as

1.  There is a mention of tree simulation  like
^( nil ^(VARDEF int i) ^(VARDEF int j) )

in page 167/372  in the chapter "Proper AST Structure" in Definitive 
ANTLR Reference.

2. ANTLR doesn't report any error while compiling.

3. The grammar works for most test cases involving expression.

Thanks,
Vasan



On 7/21/2011 10:06 PM, Kevin J. Cummings wrote:
> On 07/21/2011 02:48 AM, Gary Miller wrote:
>> 3.
>> rule :
>>    ^(subrule otherrule)
>> ;
>> Just looks wrong.
> I am under the impression that a treewalker rule should be rooted in a
> TOKEN, not a subtree.  The few treewalker grammars I have written always
> have rules that look like ^(TOKEN some other rules or TOKENS)
> If a subrule reference is not allowed to be the root of the tree being
> parsed, I would have thought that ANTLR would have issued an error when
> the tree grammar was run through ANTLR....
>
> I could be wrong with my assumption here, but I have never gotten into
> trouble by assuming it (so far).
>
> Often this involves me collapsing my treewalker rules together.  For
> example, if I have 12 parse rules to accurately describe precidence in
> an expression, my treegrammar might have 12 alternations, one for each
> possibly different rooted TOKEN when walking them.  This makes my
> treegrammars (much) smaller than my parser grammars.
>
>> If you inline (expand) out what you have written you would get
>> compoundExpression
>> : ^((SUB_EXPR ^(PAREN_SCLAR_EXPRESSION sclarExpression+) conversion_clause )
>> ;
>> The ^(( is impossible
>> Make all you start tree look like ^(TOKEN ...)
>> ^(sign sse=sclarSubExpression) therefore also look wrong.
> Yes, treegrammar rules can refer to other rules, but the rooted
> expressions: ^() should be rooted with TOKENs.
>

From vlad at demoninsight.com  Fri Jul 22 08:47:03 2011
From: vlad at demoninsight.com (Vlad)
Date: Fri, 22 Jul 2011 10:47:03 -0500
Subject: [antlr-interest] a project observation [Re: 'Dude' error in v3.4
	and possible bugs explained [was: on "crap" grammars]]
In-Reply-To: <577c3156bfb5513b5d51ab20837203ef@mail.gmail.com>
References: <CAM-qmza0NLrDQ7yqSDeBsxkDo+vf_3UbO+qNv_kwYDUQw__EDQ@mail.gmail.com>
	<6B458D23F5D4A24ABCDB3C78EA97393B02AFFD5F@EXCH-VIRTUAL.aerotechad.com>
	<577c3156bfb5513b5d51ab20837203ef@mail.gmail.com>
Message-ID: <9EA7B0D2-F1F3-443A-8712-72E346DF6E0E@demoninsight.com>

re: "the tool no longer generates those sets..." It seems like these sets still appear in the generated code and are pushed onto a stack for each rule... Anyway, thanks for confirming the fact, if not exactly explaining why. I think it's a bummer: "found X but expected Y or Z" is one of the most useful error messages a parser can generate... This would appear to be a point of departure in actual functionality compared to the book.


My initial impression of ANTLR: I think as a multi-target system it is still en route to where it wants to be so I'll wait on using it like that until... v4.x? or maybe when there's a working C++ target. ANTLRWorks is not useful to me personally but good clean documentation would be. I look at the ANTLR main site and despite it teaming with links it's not very easy to find what you need and be sure it's current. There are a few comments on stackoverflow about C target docs being kind of "hidden" and I quite agree (e.g. "Interacting with the Generated Code" link loops back to the same page: http://www.antlr.org/api/C/index.html; or if you already know about "apifuncs" you can find this via Google http://www.antlr.org/api/C/group__apistructures.html but how to navigate there starting from the top if you don't know?).

As another example, here Terence mentions support for immediate left-recursion added in v3.4: http://stackoverflow.com/questions/212900/advantages-of-antlr-versus-say-lex-yacc-bison. Hmm, this seems interesting because it adds some LALR-like capability but I see just a single line in the release notes ("Got immediate left-recursion working for rules. Added TestLeftRecursion.java"). I try a couple of easy cases and they don't work. I look for TestLeftRecursion.java in the fisheye link off the main site and can't find it. Eventually find it in the v3.4 source tarball. Take the grammar snippet from testSimple() and try it with my v3.4-complete jar and it complains about left recursion. Give up at this point.

As a final example, the "don't use inlined tokens" bit of advice turned out to be a red herring. Whether to use a named token or a literal is a convenience/maintainability feature -- it might impact how the token is presented in user-visible messages (it doesn't with JavaCC, for example), but it should not impact grammar correctness. My fix (?) turned out to be to move from v3.2 to v3.4 (why is v3.3 of C runtime skipped in the list of downloads?) so it was clearly not a grammar design issue. In the process of figuring this out I discover core code that could never have worked correctly and mapping to a feature no longer supported. This from a 5-line grammar test?  Couple such experiences with the state of docs and with sometimes rather harsh responses from the target maintainer to read the very same and that would be enough to put off many would-be users.


On Jul 21, 2011, at 2:37 PM, Jim Idle wrote:

> This was changed because the tool no longer generates those sets.
> 
> Jim
> 
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Justin Murray
>> Sent: Thursday, July 21, 2011 12:28 PM
>> To: Vlad
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] 'Dude' error in v3.4 and possible bugs
>> explained [was: on "crap" grammars]
>> 
>> I think that Vlad may be onto something here. From what I can tell from
>> my generated grammar, this only affects ANTLR3_MISMATCHED_SET_EXCEPTION
>> type exceptions. My grammar has several hundred parser rules, but only
>> in 4 cases is a ANTLR3_MISMATCHED_SET_EXCEPTION generated. In all 4
>> cases, the expectingSet is being set to NULL, and in no other cases is
>> expectingSet being set to NULL. I agree that this would be improved if
>> changed as Vlad described.
>> 
>> It just so happens that the way I implemented my exception handling, I
>> treat ANTLR3_MISMATCHED_SET_EXCEPTION the same as
>> ANTLR3_RECOGNITION_EXCEPTION, and don't bother to display the
>> expectingSet, so I never would have discovered this problem.
>> 
>> Since I recently figured out how the C template works, I decided to
>> take a peek. I found the following in antlr-3.4-complete-no-
>> antlrv2.jar/org/antlr/codegen/templates/C/C.stg:
>> 
>> <if(PARSER)>
>> EXCEPTION->expectingSet = NULL;
>> <! use following code to make it recover inline;
>> EXCEPTION->expectingSet = &FOLLOW_set_in_<ruleName><elementIndex>;
>> !>
>> <endif>
>> 
>> So it appears that this was done explicitly at some point. You could
>> edit C.stg to uncomment the code above, and I imagine that it will
>> generate the correct follow set pointer. Perhaps Jim knows why this is
>> like this? This may be avoiding some other problems, so I don't know
>> how safe of a change this would be.
>> 
>> - Justin
>> 
>> On 7/21/2011 2:45 PM, Vlad wrote:
>> 
>> 	Previously I was on 3.2 runtime. It occurred to me to try 3.4
>> released a day ago. To this end I've switched to 3.4-beta4 runtime as
>> well. Using one of the testerrors.g grammars with non-inlined int/float
>> tokens and parser generated by antlr-3.4-complete.jar I now get on
>> input string "name : bad":
>> 
>> 	<string>(1)  : error 4 : Unexpected token, at offset 6
>> 	    near [Index: 4 (Start: 31458399-Stop: 31458401) ='bad',
>> type<6> Line: 1 LinePos:6]
>> 	     : unexpected input...
>> 	  expected one of : Actually dude, we didn't seem to be expecting
>> anything here, or at least
>> 	I could not work out what I was expecting, like so many of us
>> these days!
>> 
>> 	(this required switching to antlr3StringStreamNew() from
>> antlr3NewAsciiStringInPlaceStream() as was posted by Jim here:
>> http://groups.google.com/group/il-antlr-
>> interest/browse_thread/thread/981a79239e352c89 and as is mentioned
>> within that thread the last argument can't be NULL to avoid a
>> segfault).
>> 
>> 	So, this is better because at least the offending token is
>> identified correctly. The reason the expected set is still not
>> identified correctly (the 'Dude' part) is because the generated error
>> path for the 'type' non-terminal always sets the exception's
>> expectingSet to NULL:
>> 
>> 	        {
>> 	            if ( ((LA(1) >= AT_FLOAT_) && (LA(1) <= AT_INT_)) )
>> 	            {
>> 	                CONSUME();
>> 	                PERRORRECOVERY=ANTLR3_FALSE;
>> 	            }
>> 	            else
>> 	            {
>> 	                CONSTRUCTEX();
>> 	                EXCEPTION->type         =
>> ANTLR3_MISMATCHED_SET_EXCEPTION;
>> 	                EXCEPTION->name         = (void
>> *)ANTLR3_MISMATCHED_SET_NAME;
>> 	                EXCEPTION->expectingSet = NULL; // <--- ????
>> 
>> 	                goto ruletypeEx;
>> 	            }
>> 
>> 
>> 	        }
>> 
>> 	I might be called names again, but I'd say this error handling
>> does not look correct because the rule knows exactly what token set it
>> expects right here but then goes ahead and ignores that info for the
>> purposes of generating exception info (what's the point in indicating
>> ANTLR3_MISMATCHED_SET_NAME if that set is always set to NULL).
>> 
>> 	Examining the generated parser code, I in fact see what appears to
>> be a correct set that would be FOLLOW(':'): it has bits set for
>> AT_FLOAT_ and AT_INT_ and is FOLLOWPUSH()ed before the rule is entered.
>> 
>> 	By manually doctoring the parser code to set  EXCEPTION-
>>> expectingSet to point to this FOLLOW set, I get rid of the 'Dude'
>> message but hit on another bug in displayRecognitionError() that prints
>> the wrong two token names:
>> 
>> 	<string>(1)  : error 4 : Unexpected token, at offset 6
>> 	    near [Index: 4 (Start: 13845599-Stop: 13845601) ='bad',
>> type<6> Line: 1 LinePos:6]
>> 	     : unexpected input...
>> 	  expected one of : <EOR>, <DOWN>
>> 
>> 	Looking at the stock displayRecognitionError() code, it is clear
>> that the loop over the set bits is not correct (the TODO is right).
>> Fixing it by adding errBits->isMember(errBits, bit):
>> 
>> 	for (bit = 1; bit < numbits && count < 8 && count < size; bit++)
>> 	{
>> 	// TODO: This doesn;t look right - should be asking if the bit is
>> set!!
>> 	//
>> 	if  (errBits->isMember(errBits, bit) && tokenNames[bit]) // <---
>> ???? was missing bitset member check
>> 	{
>> 	ANTLR3_FPRINTF(stderr, "%s%s", count > 0 ? ", " : "",
>> tokenNames[bit]);
>> 	count++;
>> 	}
>> 	}
>> 
>> 	finally gets me the error message that makes sense:
>> 
>> 	<string>(1)  : error 4 : Unexpected token, at offset 6
>> 	    near [Index: 4 (Start: 30442591-Stop: 30442593) ='bad',
>> type<6> Line: 1 LinePos:6]
>> 	     : unexpected input...
>> 	  expected one of : AT_FLOAT_, AT_INT_
>> 
>> 
>> 	"Crap" grammars, I hear somebody said? Hmm, I don't think so...
>> 
>> 
>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From webmaster at altertoby.de  Sat Jul 23 13:05:59 2011
From: webmaster at altertoby.de (Tobias Diez)
Date: Sat, 23 Jul 2011 22:05:59 +0200
Subject: [antlr-interest] Rewrite with predicate -> default?
Message-ID: <003901cc4973$f332a130$d997e390$@altertoby.de>

Hi,

It is possible to rewrite something based on a predicate but not always?
What I want to do is the following (pseudo code)

^(TOMATCH)
	-> ^(RESULT1)   if TOMATCH.Text = 1
	-> ^(RESULT2)   if TOMATCH.Text = 2
	LEAVE IT UNCHANGED otherwise

The closest thing I could archive is the following code, which works in the
sense that the output-AST is correct. But this solution has the flaw that
ANTLR apparently thinks something has changed and reruns the rule (and
because nothing changed so far it match again) and so ACTION would be called
two times!

command_single_argument
	: ^(COMMAND c=CONTROL_WORD ^(BLOCK b=.)) {ACTION}
		-> {$c.Text == @"\begin"}? ^(ENVIRONMENT_BEGIN $b)
		-> {$c.Text == @"\end"}? ^(ENVIRONMENT_END $b)
		-> ^(COMMAND $c ^(BLOCK $b))
	;

Is there a better solution?

Thanks!


From parrt at cs.usfca.edu  Sat Jul 23 13:39:45 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 23 Jul 2011 13:39:45 -0700
Subject: [antlr-interest] Rewrite with predicate -> default?
In-Reply-To: <003901cc4973$f332a130$d997e390$@altertoby.de>
References: <003901cc4973$f332a130$d997e390$@altertoby.de>
Message-ID: <4A4CC31E-7BD9-4A1B-9E52-B7D375895FB3@cs.usfca.edu>

i think "-> ..." works with 3 dots.
T
On Jul 23, 2011, at 1:05 PM, Tobias Diez wrote:

> Hi,
> 
> It is possible to rewrite something based on a predicate but not always?
> What I want to do is the following (pseudo code)
> 
> ^(TOMATCH)
> 	-> ^(RESULT1)   if TOMATCH.Text = 1
> 	-> ^(RESULT2)   if TOMATCH.Text = 2
> 	LEAVE IT UNCHANGED otherwise
> 
> The closest thing I could archive is the following code, which works in the
> sense that the output-AST is correct. But this solution has the flaw that
> ANTLR apparently thinks something has changed and reruns the rule (and
> because nothing changed so far it match again) and so ACTION would be called
> two times!
> 
> command_single_argument
> 	: ^(COMMAND c=CONTROL_WORD ^(BLOCK b=.)) {ACTION}
> 		-> {$c.Text == @"\begin"}? ^(ENVIRONMENT_BEGIN $b)
> 		-> {$c.Text == @"\end"}? ^(ENVIRONMENT_END $b)
> 		-> ^(COMMAND $c ^(BLOCK $b))
> 	;
> 
> Is there a better solution?
> 
> Thanks!
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From qiaomuf at gmail.com  Sun Jul 24 05:43:38 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Sun, 24 Jul 2011 20:43:38 +0800
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
Message-ID: <CAPwgOuS9cvweixZBHWWOn4Fh8rFVPvD6Graf6MRNpSaCJL_ERw@mail.gmail.com>

I have some token rules like:
SINGLE_QUOTED_STRING: SQUOTE (~SQUOTE)* SQUOTE;
I'd like to hide the first SQUOTE token and the last SQUOTE token from
the parser grammar. Is there any way to do that? I've tried the hidden
channel and the skip() method, but they work for the whole rule, not
just for the tokens I need to hide.

-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From bkiers at gmail.com  Sun Jul 24 06:07:22 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 24 Jul 2011 15:07:22 +0200
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
In-Reply-To: <CAPwgOuS9cvweixZBHWWOn4Fh8rFVPvD6Graf6MRNpSaCJL_ERw@mail.gmail.com>
References: <CAPwgOuS9cvweixZBHWWOn4Fh8rFVPvD6Graf6MRNpSaCJL_ERw@mail.gmail.com>
Message-ID: <CAOrgODa9BJ_OXxsOhyFDy_6f-JdGkUGpTmd5F3xdw4vU_CDWhQ@mail.gmail.com>

Hi Qiao,

With Java as the target, you could do:

SINGLE_QUOTED_STRING
@after {
  String s = getText();
  setText(s.substring(1, s.length() - 1));
}
  :  SQUOTE (~SQUOTE)* SQUOTE
  ;


Regards,

Bart.


On Sun, Jul 24, 2011 at 2:43 PM, Mu Qiao <qiaomuf at gmail.com> wrote:

> I have some token rules like:
> SINGLE_QUOTED_STRING: SQUOTE (~SQUOTE)* SQUOTE;
> I'd like to hide the first SQUOTE token and the last SQUOTE token from
> the parser grammar. Is there any way to do that? I've tried the hidden
> channel and the skip() method, but they work for the whole rule, not
> just for the tokens I need to hide.
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rob at aarnts.com  Mon Jul 25 01:44:26 2011
From: rob at aarnts.com (Rob Aarnts)
Date: Mon, 25 Jul 2011 10:44:26 +0200
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
Message-ID: <20110725084426.401C6894C0EF1@bmail04.one.com>


Or:
?
SINGLE_QUOTED_STRING returns [string result]
??? : SQUOTE
?????????? val=((~SQUOTE)*)??? { $result = val.Text; }
????? SQUOTE
??? ;
----------------------------------------------------- 
Rob Aarnts
phone: +31 2356 14444
mobile: +31 6 5582 2856
fax: +31 8 4227 4444
-----------------------------------------------------
On 24 jul 2011 15:07 "Bart Kiers" <bkiers at gmail.com> <bkiers at gmail.com>
wrote:
> Hi Qiao,
> With Java as the target, you could do:
> SINGLE_QUOTED_STRING
> @after {
> String s = getText();
> setText(s.substring(1, s.length() - 1));
> }
> : SQUOTE (~SQUOTE)* SQUOTE
> ;
> Regards,
> Bart.
> On Sun, Jul 24, 2011 at 2:43 PM, Mu Qiao <qiaomuf at gmail.com>
> <qiaomuf at gmail.com> wrote:
> > I have some token rules like:
> > SINGLE_QUOTED_STRING: SQUOTE (~SQUOTE)* SQUOTE;
> > I'd like to hide the first SQUOTE token and the last SQUOTE token
> > from
> > the parser grammar. Is there any way to do that? I've tried the
> > hidden
> > channel and the skip() method, but they work for the whole rule, not
> > just for the tokens I need to hide.
> > -- 
> > Best wishes,
> > Mu Qiao
> > GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5 3ACC 30B3 0DE4 17B1 57E9
> > List: <http://www.antlr.org/mailman/listinfo/antlr-interest>
> > Unsubscribe:
> > <http://www.antlr.org/mailman/options/antlr-interest/your-email-addr
> > ess>
> List: <http://www.antlr.org/mailman/listinfo/antlr-interest>
> Unsubscribe:
> <http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
> s>

From gokul007 at gmail.com  Mon Jul 25 06:50:31 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 25 Jul 2011 21:50:31 +0800
Subject: [antlr-interest] A bug in C Target Composite grammar
In-Reply-To: <146abe5b23432e4f8f042fc5cca492ed@temporal-wave.com>
References: <9362e74e1002010948nb708bdck8bd09bdb6b9a0cbb@mail.gmail.com>
	<146abe5b23432e4f8f042fc5cca492ed@temporal-wave.com>
Message-ID: <CAHMh4-YevjLBEu9v8onci6Ami9Xr0VUvy-A1woLwgvrZtvRssg@mail.gmail.com>

Hi Jim,
        I made an upgrade to ANTLR 3.4 and tested my grammar. I am facing
the same error. I really forgot the logic behind the fix, that i have
mentioned above, but after applying the same, it started working fine. Just
wanted to inform you on that.
       In Build.txt, the command mentioned for building Uber jar is
mentioned incorrectly and it is not working fine. But in the pom.xml, it is
mentioned correctly. Please do update the Build.txt also with the same.
"mvn -Duber -DskipTests package assembly:assembly"

Please let me know, if i have done things in the wrong way.

Thanks,
Gokul.


On Tue, Feb 2, 2010 at 2:17 AM, Jim Idle <jimi at temporal-wave.com> wrote:

>  OK ? that?s good enough ? I can reproduce from there. I guess I wasn?t
> thinking about people importing within imports ;-) I usually just have a
> master grammar that imports everything else.****
>
> ** **
>
> Jim****
>
> ** **
>
> *From:* Gokulakannan Somasundaram [mailto:gokul007 at gmail.com]
> *Sent:* Monday, February 01, 2010 9:48 AM
> *To:* Jim Idle
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] A bug in C Target Composite grammar****
>
> ** **
>
> OK, i will try to explain, as i am restricted not to share my source.
>
> Assume the hierarchy is A->B->C->D->E
>
> Now E holds a pointer to A, B, C and D. D holds  a pointer to A, B and C
> and so on.
>
> Now the creation of A happens inside B and creation of B happens inside C
> and so on
>
> Now when creation of B happens, only the pointer of B inside C gets
> updated. But there are pointers to B from inside D and E also. They are not
> getting updated. Now a function call happens through null pointer, the
> runtime crashes. So my code just assigns the pointer to other structures
> which are above the hierarchy of the structure, which created the
> sub-parser.
>
> Please let me know, if i am unclear in my explanation.
>
> Thanks,
> Gokul.
> **
> ******
>
> On Mon, Feb 1, 2010 at 9:54 PM, Jim Idle <jimi at temporal-wave.com> wrote:**
> **
>
> Can you give me an example of what you were fixing? I do not have any
> compilation or runtime bugs that I know of. That does not mean they are not
> there but I need something to test as there are no highlights in this email
>
> Jim****
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
> > Sent: Monday, February 01, 2010 6:33 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] A bug in C Target Composite grammar
> >
> > Hi,
> >    I found and fixed a runtime bug for C Target w.r.t composite
> > grammar.
> > Please do the necessary.
> >
> > I am copy-pasting the C.stg file lines, that i changed.
> >
> > <if(grammar.directDelegates)>
> >     // Initialize the parsers that we are going to delegate some
> >     // functions to.
> >     //
> >     <grammar.directDelegates:
> >       {g|ctx-><g:delegateName()> = <g.recognizerName>NewSSD(instream,
> > PSRSTATE<grammar.delegators:{g|, <g:delegateName()>}>, ctx);};
> > separator="\n">
> > <endif>
> > <if(grammar.delegators)>
> >     // Install the pointers back to parsers that will delegate us to
> > perform
> > certain functions
> >     // for them.
> >     //
> >     <grammar.delegators:
> >          {g|ctx-><g:delegateName()>            = <g:delegateName()>;};
> > separator="\n">
> >
> >  <if(grammar.directDelegates)>
> >     <grammar.directDelegates:
> >      {g1|
> > <grammar.delegators:{g2|ctx-><g2:delegateName()>-><g1:delegateName()>
> > =
> > ctx-><g1:delegateName()>;}; separator="\n"> };
> >      separator="\n">
> >  <endif>
> >
> > <endif>
> >
> > The first highlighted portion fixed a compile time bug and the second
> > portion fixed the runtime bug. I could see similar lines for lexer
> > also. But
> > i didn't change them. Please take care of this.
> >
> > Thanks,
> > Gokul.
> >****
>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address****
>
> ** **
>

From claudio.martella at tis.bz.it  Mon Jul 25 07:24:28 2011
From: claudio.martella at tis.bz.it (Claudio Martella)
Date: Mon, 25 Jul 2011 16:24:28 +0200
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <4E2D7C6B.3000007@tis.bz.it>
References: <4E280A86.2020607@tis.bz.it>
	<CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
	<4E2D7C6B.3000007@tis.bz.it>
Message-ID: <4E2D7C9C.3020509@tis.bz.it>

On 7/25/11 4:23 PM, Claudio Martella wrote:
> I applied (1) and it worked. I have one problem with this grammar
> though. I'm debugging it with ANTLRWorks and the generated Parse Tree is
> correct. The problem is that when I visualize the AST some things don't
> work. In particular the filterFunction internal node is not always
> present. Sometimes the filter node has a direct child "PREFIX(" and the
> token ')' is still present instead of being discarded. I don't
> understand how this can be possible as the Parse Tree is correct AND for
> certain examples the AST for filter is also correct.
>
> To replicate it try the query "claudio :: age [MAX(10)][MIN(3)] > age
> [country = EQUALS('italy')] > weight [MIN(3)] (*3) .DISTANCE('marco')"
>
> with this grammar:
> grammar RDFPath;
>
> options { output = AST; }
> tokens {
>     QUERY           = 'query';
>     LOCATIONSTEP    = 'locationstep';
>     CONDITION       = 'condition';
>     FILTER          = 'filter';
>     FILTERFUNCTION  = 'filterfunction';
>     SUBQUERY        = 'subquery';
>     REPEAT          = 'repeat';
>     SHORTESTPATH    = 'shortestpath';
>     ENDNODEFUNCTION = 'endnodefunction';
>     STARTNODE       = 'startnode';
>     EDGE            = 'edge';
> }
>
> /* PARSER RULES */
>
> query: startNode '::' locationStep ('>' locationStep)* ('.'
> endNodeFunction)?
>     -> ^(QUERY startNode locationStep+ endNodeFunction);
>
> locationStep: edge condition* (repeat | shortestPath)?
>    -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
>
> condition: '[' ( filter | subquery ) ']'
>    -> ^(CONDITION filter? subquery?);
>
>
> filter: filterFunction
>     -> ^(FILTER filterFunction);
>
> filterFunction: fn='EQUALS(' v=STRING ')' | fn='EQUALS(' v=INTVALUE ')'
>         | fn='SUFFIX(' v=STRING ')' | fn='PREFIX(' v=STRING ')' 
>         | fn='MIN(' v=INTVALUE ')' | fn='MAX(' v=INTVALUE ')'
>     -> ^(FILTERFUNCTION $fn $v);
>
> subquery: edge '=' filterFunction
>     -> ^(SUBQUERY edge filterFunction);
>
> repeat: '(' v=INTVALUE ')'
>     -> ^(REPEAT $v);
>
> shortestPath: '(*' v=INTVALUE ')'
>     -> ^(SHORTESTPATH $v);
>
> endNodeFunction: fn='COUNT()' | fn='SUM()' | fn='AVG()'
>              | fn='MIN()' | fn='MAX()' | fn='DISTANCE(' v=STRING ')'
>         -> ^(ENDNODEFUNCTION $fn $v);
>
> startNode: v='*' | v=TEXTVALUE
>     -> ^(STARTNODE $v);
>
> edge: v=TEXTVALUE
>     -> ^(EDGE $v);
>
> /* LEXER RULES */
>
> TEXTVALUE: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')* ;
>
> INTVALUE: ('0'..'9')+ ;
>
> STRING    : '\'' TEXTVALUE '\'' ;
>
> ID:    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>
> WS:   (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
>
>
>
> On 7/22/11 2:10 AM, Gary Miller wrote:
>> Try the following options.
>>
>> 1.
>> locationStep: edge condition? (repeat | shortestPath)? ('>' locationStep)?
>>    -> ^(LOCATIONSTEP condition? repeat? shortestPath? locationStep?);
>>
>> condition: ( filter | subquery ) condition?
>>    -> ^(CONDITION filter? subquery? condition?);
>>
>> or
>> 2.
>> locationStep
>> :  edge condition? repeat?  ('>' locationStep)?  -> ^(LOCATIONSTEP
>> condition? shortestPath? locationStep?)
>> |  edge condition? shortestPath? ('>' locationStep)?  ->
>> ^(LOCATIONSTEP condition? shortestPath? locationStep?)
>> ;
>>
>> condition
>> : filter condition?   -> ^(CONDITION filter condition?)
>> | subquery condition?   -> ^(CONDITION subquery condition?)
>> ;
>>
>> Regards
>> Gary
>>
>>
>> On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
>> <claudio.martella at tis.bz.it> wrote:
>>> Hello,
>>>
>>> I've this grammar: http://pastebin.com/dNzdGx8R but i get this error
>>> when I test it with AntlrWorks:
>>>
>>> [11:23:59] /Users/hammer/output/RDFPathParser.java:383: incompatible types
>>> [11:23:59] found   : RDFPathParser.repeat_return
>>> [11:23:59] required: RDFPathParser.shortestPath_return
>>> [11:23:59]                     v=repeat();
>>> [11:23:59]                             ^
>>> [11:23:59] /Users/hammer/output/RDFPathParser.java:586: incompatible types
>>> [11:23:59] found   : RDFPathParser.filter_return
>>> [11:23:59] required: RDFPathParser.subquery_return
>>> [11:23:59]                     v=filter();
>>> [11:23:59]                             ^
>>> [11:23:59] 2 errors
>>>
>>>
>>> Basically I think the problem is the assignment in the subrules with ORs
>>> in two statements:
>>>
>>> locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
>>> locationStep)?
>>>    -> ^(LOCATIONSTEP condition $v locationStep);
>>>
>>> condition: ( v=filter | v=subquery ) condition?
>>>    -> ^(CONDITION $v condition);
>>>
>>> How do I handle these situations where I have the two or more options in
>>> a subrule?
>>>
>>>
>>> Thanks
>>> Claudio
>>>
>>> --
>>> Claudio Martella
>>> Free Software & Open Technologies
>>> Analyst
>>>
>>> TIS innovation park
>>> Via Siemens 19 | Siemensstr. 19
>>> 39100 Bolzano | 39100 Bozen
>>> Tel. +39 0471 068 123
>>> Fax  +39 0471 068 129
>>> claudio.martella at tis.bz.it http://www.tis.bz.it
>>>
>>> Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web si
>>>  te www.tis.bz.it.
>>>
>>>
>>>
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>


-- 
Claudio Martella
Free Software & Open Technologies
Analyst

TIS innovation park
Via Siemens 19 | Siemensstr. 19
39100 Bolzano | 39100 Bozen
Tel. +39 0471 068 123
Fax  +39 0471 068 129
claudio.martella at tis.bz.it http://www.tis.bz.it

Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web site www.tis.bz.it.





From claudio.martella at tis.bz.it  Mon Jul 25 07:26:19 2011
From: claudio.martella at tis.bz.it (Claudio Martella)
Date: Mon, 25 Jul 2011 16:26:19 +0200
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
References: <4E280A86.2020607@tis.bz.it>
	<CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
Message-ID: <4E2D7D0B.3000103@tis.bz.it>

(Sorry for the double mail, clicked wrong!)


I applied (1) and it worked. I have one problem with this grammar
though. I'm debugging it with ANTLRWorks and the generated Parse Tree is
correct. The problem is that when I visualize the AST some things don't
work. In particular the filterFunction internal node is not always
present. Sometimes the filter node has a direct child "PREFIX(" and the
token ')' is still present instead of being discarded. I don't
understand how this can be possible as the Parse Tree is correct AND for
certain examples the AST for filter is also correct.

To replicate it try the query "claudio :: age [MAX(10)][MIN(3)] > age
[country = EQUALS('italy')] > weight [MIN(3)] (*3) .DISTANCE('marco')"

with this grammar:
grammar RDFPath;

options { output = AST; }
tokens {
    QUERY           = 'query';
    LOCATIONSTEP    = 'locationstep';
    CONDITION       = 'condition';
    FILTER          = 'filter';
    FILTERFUNCTION  = 'filterfunction';
    SUBQUERY        = 'subquery';
    REPEAT          = 'repeat';
    SHORTESTPATH    = 'shortestpath';
    ENDNODEFUNCTION = 'endnodefunction';
    STARTNODE       = 'startnode';
    EDGE            = 'edge';
}

/* PARSER RULES */

query: startNode '::' locationStep ('>' locationStep)* ('.'
endNodeFunction)?
    -> ^(QUERY startNode locationStep+ endNodeFunction);

locationStep: edge condition* (repeat | shortestPath)?
   -> ^(LOCATIONSTEP condition? repeat? shortestPath?);

condition: '[' ( filter | subquery ) ']'
   -> ^(CONDITION filter? subquery?);


filter: filterFunction
    -> ^(FILTER filterFunction);

filterFunction: fn='EQUALS(' v=STRING ')' | fn='EQUALS(' v=INTVALUE ')'
        | fn='SUFFIX(' v=STRING ')' | fn='PREFIX(' v=STRING ')' 
        | fn='MIN(' v=INTVALUE ')' | fn='MAX(' v=INTVALUE ')'
    -> ^(FILTERFUNCTION $fn $v);

subquery: edge '=' filterFunction
    -> ^(SUBQUERY edge filterFunction);

repeat: '(' v=INTVALUE ')'
    -> ^(REPEAT $v);

shortestPath: '(*' v=INTVALUE ')'
    -> ^(SHORTESTPATH $v);

endNodeFunction: fn='COUNT()' | fn='SUM()' | fn='AVG()'
             | fn='MIN()' | fn='MAX()' | fn='DISTANCE(' v=STRING ')'
        -> ^(ENDNODEFUNCTION $fn $v);

startNode: v='*' | v=TEXTVALUE
    -> ^(STARTNODE $v);

edge: v=TEXTVALUE
    -> ^(EDGE $v);

/* LEXER RULES */

TEXTVALUE: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')* ;

INTVALUE: ('0'..'9')+ ;

STRING    : '\'' TEXTVALUE '\'' ;

ID:    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;

WS:   (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};






On 7/22/11 2:10 AM, Gary Miller wrote:
> Try the following options.
>
> 1.
> locationStep: edge condition? (repeat | shortestPath)? ('>' locationStep)?
>    -> ^(LOCATIONSTEP condition? repeat? shortestPath? locationStep?);
>
> condition: ( filter | subquery ) condition?
>    -> ^(CONDITION filter? subquery? condition?);
>
> or
> 2.
> locationStep
> :  edge condition? repeat?  ('>' locationStep)?  -> ^(LOCATIONSTEP
> condition? shortestPath? locationStep?)
> |  edge condition? shortestPath? ('>' locationStep)?  ->
> ^(LOCATIONSTEP condition? shortestPath? locationStep?)
> ;
>
> condition
> : filter condition?   -> ^(CONDITION filter condition?)
> | subquery condition?   -> ^(CONDITION subquery condition?)
> ;
>
> Regards
> Gary
>
>
> On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
> <claudio.martella at tis.bz.it> wrote:
>> Hello,
>>
>> I've this grammar: http://pastebin.com/dNzdGx8R but i get this error
>> when I test it with AntlrWorks:
>>
>> [11:23:59] /Users/hammer/output/RDFPathParser.java:383: incompatible types
>> [11:23:59] found   : RDFPathParser.repeat_return
>> [11:23:59] required: RDFPathParser.shortestPath_return
>> [11:23:59]                     v=repeat();
>> [11:23:59]                             ^
>> [11:23:59] /Users/hammer/output/RDFPathParser.java:586: incompatible types
>> [11:23:59] found   : RDFPathParser.filter_return
>> [11:23:59] required: RDFPathParser.subquery_return
>> [11:23:59]                     v=filter();
>> [11:23:59]                             ^
>> [11:23:59] 2 errors
>>
>>
>> Basically I think the problem is the assignment in the subrules with ORs
>> in two statements:
>>
>> locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
>> locationStep)?
>>    -> ^(LOCATIONSTEP condition $v locationStep);
>>
>> condition: ( v=filter | v=subquery ) condition?
>>    -> ^(CONDITION $v condition);
>>
>> How do I handle these situations where I have the two or more options in
>> a subrule?
>>
>>
>> Thanks
>> Claudio
>>
>> --
>> Claudio Martella
>> Free Software & Open Technologies
>> Analyst
>>
>> TIS innovation park
>> Via Siemens 19 | Siemensstr. 19
>> 39100 Bolzano | 39100 Bozen
>> Tel. +39 0471 068 123
>> Fax  +39 0471 068 129
>> claudio.martella at tis.bz.it http://www.tis.bz.it
>>
>> Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web si
>>  te www.tis.bz.it.
>>
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


-- 
Claudio Martella
Free Software & Open Technologies
Analyst

TIS innovation park
Via Siemens 19 | Siemensstr. 19
39100 Bolzano | 39100 Bozen
Tel. +39 0471 068 123
Fax  +39 0471 068 129
claudio.martella at tis.bz.it http://www.tis.bz.it

Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web site www.tis.bz.it.





From ruslan_zasukhin at valentina-db.com  Mon Jul 25 07:59:44 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Mon, 25 Jul 2011 17:59:44 +0300
Subject: [antlr-interest] ANTLR v3.4 released! -- there is no /lib
 folder ?
In-Reply-To: <D8ED421F-6B08-4164-B410-337DFBAA161B@cs.usfca.edu>
Message-ID: <CA535F90.EEE53%ruslan_zasukhin@valentina-db.com>

On 7/21/11 1:16 AM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

Hi All,

So in this ReadMe said
    http://www.antlr.org/README.txt

> ----------------------------------------------------------------------
> 
> How do I install this damn thing?
> 
> Just untar antlr-3.4.tar.gz and you'll get:
> 
> antlr-3.4/BUILD.txt
> antlr-3.4/antlr3-maven-plugin
> antlr-3.4/antlrjar.xml
> antlr-3.4/antlrsources.xml
> antlr-3.4/gunit
> antlr-3.4/gunit-maven-plugin
> antlr-3.4/pom.xml
> antlr-3.4/runtime
> antlr-3.4/tool
> antlr-3.4/lib


But when I download
    http://www.antlr.org/download/antlr-3.4.tar.gz

And uncompress it, there is no

> antlr-3.4/lib


Lost ?


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From parrt at cs.usfca.edu  Mon Jul 25 12:10:28 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 25 Jul 2011 12:10:28 -0700
Subject: [antlr-interest] ANTLR v3.4 released! -- there is no /lib
	folder ?
In-Reply-To: <CA535F90.EEE53%ruslan_zasukhin@valentina-db.com>
References: <CA535F90.EEE53%ruslan_zasukhin@valentina-db.com>
Message-ID: <0A1A5807-F9C1-495A-B2F2-6FF7EB012DA3@cs.usfca.edu>

ooops. sorry. rebuilt with complete jar in lib/
Ter
On Jul 25, 2011, at 7:59 AM, Ruslan Zasukhin wrote:

> On 7/21/11 1:16 AM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> 
> Hi All,
> 
> So in this ReadMe said
>    http://www.antlr.org/README.txt
> 
>> ----------------------------------------------------------------------
>> 
>> How do I install this damn thing?
>> 
>> Just untar antlr-3.4.tar.gz and you'll get:
>> 
>> antlr-3.4/BUILD.txt
>> antlr-3.4/antlr3-maven-plugin
>> antlr-3.4/antlrjar.xml
>> antlr-3.4/antlrsources.xml
>> antlr-3.4/gunit
>> antlr-3.4/gunit-maven-plugin
>> antlr-3.4/pom.xml
>> antlr-3.4/runtime
>> antlr-3.4/tool
>> antlr-3.4/lib
> 
> 
> But when I download
>    http://www.antlr.org/download/antlr-3.4.tar.gz
> 
> And uncompress it, there is no
> 
>> antlr-3.4/lib
> 
> 
> Lost ?
> 
> 
> -- 
> Best regards,
> 
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
> 
> Valentina - Joining Worlds of Information
> http://www.paradigmasoft.com
> 
> [I feel the need: the need for speed]
> 
> 


From webmaster at altertoby.de  Mon Jul 25 15:01:48 2011
From: webmaster at altertoby.de (Tobias Diez)
Date: Tue, 26 Jul 2011 00:01:48 +0200
Subject: [antlr-interest] Tree matching: wildcard-operator
Message-ID: <000001cc4b16$74009260$5c01b720$@altertoby.de>

Hi,

are there special concerns regarding the wildcard operator in a tree grammar
(with filter=true)?

I ask because 
^(ENVIRONMENT_BEGIN .) . * ^(ENVIRONMENT_END .)

did not match the correct input EXCEPT the LAST subtree in the file is of
the form "^(ENVIRONMENT_END .)".
A deeper investigation showed that the "next token equals endtoken than
cancel"-logic of the wildcard did not fire, although it should recognize the
environment-end subtree. So the .* matchs everything and the parser runs
until reaching the last subtree of the input stream. This last subtree is
than compared to  "^(ENVIRONMENT_END .)".
So "^(ENVIRONMENT_BEGIN a) b ^(ENVIRONMENT_END c)" is recognized but
"^(ENVIRONMENT_BEGIN a) b ^(ENVIRONMENT_END c) SOMETHING" not.

Is everything correct in the code above or is there a bug in ANTLR?

Thanks!


From gary at sumwise.com  Mon Jul 25 16:16:32 2011
From: gary at sumwise.com (Gary Miller)
Date: Tue, 26 Jul 2011 09:16:32 +1000
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <4E2D7C6B.3000007@tis.bz.it>
References: <4E280A86.2020607@tis.bz.it>
	<CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
	<4E2D7C6B.3000007@tis.bz.it>
Message-ID: <CAFCNb3gA_TqMwrE49VCo-RHLU=RP1NJ3RS+8+d5ug_U+=cwOcQ@mail.gmail.com>

Hey Claudio,

Please try to remember to reply to the list and not directly to the person.
Unfortunately this list server doesn't add a reply_to in the header.

I'm guessing that you problem is one of cardinality.
The cardinality on the left and right should generally match.
I would go as far as saying that you might want to restructure your grammar
so that they always match (I'm not sure if this is actually possible
though).

So
  r
  : a c -> (A c)
  | a b -> (A b)
  ;
is preferable to
  r
  : a (c | b) -> (A c? b?)
  ;
IMO.

I'm guessing your mistake is here
    locationStep: edge condition* (repeat | shortestPath)?
      -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
as condition has a * on the left and a ? on the right.
Try
    locationStep: edge condition* (repeat | shortestPath)?
      -> ^(LOCATIONSTEP condition* repeat? shortestPath?);
And look for any other mismatches.

Regards
Gary

On Tue, Jul 26, 2011 at 12:23 AM, Claudio Martella <
claudio.martella at tis.bz.it> wrote:

> I applied (1) and it worked. I have one problem with this grammar
> though. I'm debugging it with ANTLRWorks and the generated Parse Tree is
> correct. The problem is that when I visualize the AST some things don't
> work. In particular the filterFunction internal node is not always
> present. Sometimes the filter node has a direct child "PREFIX(" and the
> token ')' is still present instead of being discarded. I don't
> understand how this can be possible as the Parse Tree is correct AND for
> certain examples the AST for filter is also correct.
>
> To replicate it try the query "claudio :: age [MAX(10)][MIN(3)] > age
> [country = EQUALS('italy')] > weight [MIN(3)] (*3) .DISTANCE('marco')"
>
> with this grammar:
> grammar RDFPath;
>
> options { output = AST; }
> tokens {
>    QUERY           = 'query';
>    LOCATIONSTEP    = 'locationstep';
>    CONDITION       = 'condition';
>    FILTER          = 'filter';
>    FILTERFUNCTION  = 'filterfunction';
>    SUBQUERY        = 'subquery';
>    REPEAT          = 'repeat';
>    SHORTESTPATH    = 'shortestpath';
>    ENDNODEFUNCTION = 'endnodefunction';
>    STARTNODE       = 'startnode';
>    EDGE            = 'edge';
> }
>
> /* PARSER RULES */
>
> query: startNode '::' locationStep ('>' locationStep)* ('.'
> endNodeFunction)?
>    -> ^(QUERY startNode locationStep+ endNodeFunction);
>
> locationStep: edge condition* (repeat | shortestPath)?
>    -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
>
> condition: '[' ( filter | subquery ) ']'
>   -> ^(CONDITION filter? subquery?);
>
>
> filter: filterFunction
>    -> ^(FILTER filterFunction);
>
> filterFunction: fn='EQUALS(' v=STRING ')' | fn='EQUALS(' v=INTVALUE ')'
>        | fn='SUFFIX(' v=STRING ')' | fn='PREFIX(' v=STRING ')'
>        | fn='MIN(' v=INTVALUE ')' | fn='MAX(' v=INTVALUE ')'
>    -> ^(FILTERFUNCTION $fn $v);
>
> subquery: edge '=' filterFunction
>    -> ^(SUBQUERY edge filterFunction);
>
> repeat: '(' v=INTVALUE ')'
>    -> ^(REPEAT $v);
>
> shortestPath: '(*' v=INTVALUE ')'
>    -> ^(SHORTESTPATH $v);
>
> endNodeFunction: fn='COUNT()' | fn='SUM()' | fn='AVG()'
>             | fn='MIN()' | fn='MAX()' | fn='DISTANCE(' v=STRING ')'
>        -> ^(ENDNODEFUNCTION $fn $v);
>
> startNode: v='*' | v=TEXTVALUE
>    -> ^(STARTNODE $v);
>
> edge: v=TEXTVALUE
>    -> ^(EDGE $v);
>
> /* LEXER RULES */
>
> TEXTVALUE: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')* ;
>
> INTVALUE: ('0'..'9')+ ;
>
> STRING    : '\'' TEXTVALUE '\'' ;
>
> ID:    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>
> WS:   (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
>
>
>
> On 7/22/11 2:10 AM, Gary Miller wrote:
> > Try the following options.
> >
> > 1.
> > locationStep: edge condition? (repeat | shortestPath)? ('>'
> locationStep)?
> >    -> ^(LOCATIONSTEP condition? repeat? shortestPath? locationStep?);
> >
> > condition: ( filter | subquery ) condition?
> >    -> ^(CONDITION filter? subquery? condition?);
> >
> > or
> > 2.
> > locationStep
> > :  edge condition? repeat?  ('>' locationStep)?  -> ^(LOCATIONSTEP
> > condition? shortestPath? locationStep?)
> > |  edge condition? shortestPath? ('>' locationStep)?  ->
> > ^(LOCATIONSTEP condition? shortestPath? locationStep?)
> > ;
> >
> > condition
> > : filter condition?   -> ^(CONDITION filter condition?)
> > | subquery condition?   -> ^(CONDITION subquery condition?)
> > ;
> >
> > Regards
> > Gary
> >
> >
> > On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
> > <claudio.martella at tis.bz.it> wrote:
> >> Hello,
> >>
> >> I've this grammar: http://pastebin.com/dNzdGx8R but i get this error
> >> when I test it with AntlrWorks:
> >>
> >> [11:23:59] /Users/hammer/output/RDFPathParser.java:383: incompatible
> types
> >> [11:23:59] found   : RDFPathParser.repeat_return
> >> [11:23:59] required: RDFPathParser.shortestPath_return
> >> [11:23:59]                     v=repeat();
> >> [11:23:59]                             ^
> >> [11:23:59] /Users/hammer/output/RDFPathParser.java:586: incompatible
> types
> >> [11:23:59] found   : RDFPathParser.filter_return
> >> [11:23:59] required: RDFPathParser.subquery_return
> >> [11:23:59]                     v=filter();
> >> [11:23:59]                             ^
> >> [11:23:59] 2 errors
> >>
> >>
> >> Basically I think the problem is the assignment in the subrules with ORs
> >> in two statements:
> >>
> >> locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
> >> locationStep)?
> >>    -> ^(LOCATIONSTEP condition $v locationStep);
> >>
> >> condition: ( v=filter | v=subquery ) condition?
> >>    -> ^(CONDITION $v condition);
> >>
> >> How do I handle these situations where I have the two or more options in
> >> a subrule?
> >>
> >>
> >> Thanks
> >> Claudio
> >>
> >> --
> >> Claudio Martella
> >> Free Software & Open Technologies
> >> Analyst
> >>
> >> TIS innovation park
> >> Via Siemens 19 | Siemensstr. 19
> >> 39100 Bolzano | 39100 Bozen
> >> Tel. +39 0471 068 123
> >> Fax  +39 0471 068 129
> >> claudio.martella at tis.bz.it http://www.tis.bz.it
> >>
> >> Short information regarding use of personal data. According to Section
> 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that
> we process your personal data in order to fulfil contractual and fiscal
> obligations and also to send you information regarding our services and
> events. Your personal data are processed with and without electronic means
> and by respecting data subjects' rights, fundamental freedoms and dignity,
> particularly with regard to confidentiality, personal identity and the right
> to personal data protection. At any time and without formalities you can
> write an e-mail to privacy at tis.bz.it in order to object the processing of
> your personal data for the purpose of sending advertising materials and also
> to exercise the right to access personal data and other rights referred to
> in Section 7 of Decree 196/2003. The data controller is TIS Techno
> Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the
> complete information on the web si
> >>  te www.tis.bz.it.
> >>
> >>
> >>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
> --
> Claudio Martella
> Free Software & Open Technologies
> Analyst
>
> TIS innovation park
> Via Siemens 19 | Siemensstr. 19
> 39100 Bolzano | 39100 Bozen
> Tel. +39 0471 068 123
> Fax  +39 0471 068 129
> claudio.martella at tis.bz.it http://www.tis.bz.it
>
> Short information regarding use of personal data. According to Section 13
> of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we
> process your personal data in order to fulfil contractual and fiscal
> obligations and also to send you information regarding our services and
> events. Your personal data are processed with and without electronic means
> and by respecting data subjects' rights, fundamental freedoms and dignity,
> particularly with regard to confidentiality, personal identity and the right
> to personal data protection. At any time and without formalities you can
> write an e-mail to privacy at tis.bz.it in order to object the processing of
> your personal data for the purpose of sending advertising materials and also
> to exercise the right to access personal data and other rights referred to
> in Section 7 of Decree 196/2003. The data controller is TIS Techno
> Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the
> complete information on the web site www.tis.bz.it.
>
>
>
>
>

From kingces95 at gmail.com  Mon Jul 25 16:38:53 2011
From: kingces95 at gmail.com (chris king)
Date: Mon, 25 Jul 2011 16:38:53 -0700
Subject: [antlr-interest] To Sam Harwell
Message-ID: <CAJQwtsgc3jjCMAdWwJqzabHizK_xQYTLGNy1xNR4y7LW1+WYoQ@mail.gmail.com>

Sam, hey, hope this finds you. Very small suggestion follows :). In
Antlr3.StringTemplate.csproj could you use


<AntlrBuildTaskPath>$(MSBuildProjectDirectory)\..\bin\Bootstrap</AntlrBuildTaskPath>

to reference the bootstrap directory? Originally it used the solutionDir and
that prevented me from including a subset of the projects in my project (so
I could simply reference them and have all the debugging, pdb, source, etc
just work).

Thanks,
Chris

From sharwell at pixelminegames.com  Mon Jul 25 19:02:30 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 25 Jul 2011 21:02:30 -0500
Subject: [antlr-interest] To Sam Harwell
In-Reply-To: <CAJQwtsgc3jjCMAdWwJqzabHizK_xQYTLGNy1xNR4y7LW1+WYoQ@mail.gmail.com>
References: <CAJQwtsgc3jjCMAdWwJqzabHizK_xQYTLGNy1xNR4y7LW1+WYoQ@mail.gmail.com>
Message-ID: <000f01cc4b38$14834220$3d89c660$@pixelminegames.com>

Hi Chris,

I tried this once in the past, but ran into a problem. Months later I found
out the problem was in the order in which I included things in my project
file, and I updated the directions to correct it. Obviously I forgot to
update my own projects based on the new information. :)

Thanks for bringing this to my attention.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of chris king
Sent: Monday, July 25, 2011 6:39 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] To Sam Harwell

Sam, hey, hope this finds you. Very small suggestion follows :). In
Antlr3.StringTemplate.csproj could you use


<AntlrBuildTaskPath>$(MSBuildProjectDirectory)\..\bin\Bootstrap</AntlrBuildT
askPath>

to reference the bootstrap directory? Originally it used the solutionDir and
that prevented me from including a subset of the projects in my project (so
I could simply reference them and have all the debugging, pdb, source, etc
just work).

Thanks,
Chris

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gokul007 at gmail.com  Mon Jul 25 23:59:00 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 26 Jul 2011 14:59:00 +0800
Subject: [antlr-interest] A Request for ANTLR C Target
Message-ID: <CAHMh4-aA5ONrojtz01oSzVxS4WeDTXxesAL2nYJ+-_zvoKNDRA@mail.gmail.com>

Hi Jim,
      Thanks for the nice reset functionality you have provided in all the
parsers, lexers, InputStreams and TokenStreams in 3.4.

      In the grammar, that i am working with, there are atleast 1000 rules.
The current parser puts a function pointer for every rule, which makes the
size of the parser to around 10k in a 64 bit system.  But actually we need
only one entry point for the parser. If you can plan to provide something
which restricts the amount of Function pointer generation, that would
optimize the size of the created parser. I understand that there is a need
to be consistent with the Java interface. But just wanted to know, what you
feel about it.

Thanks,
Gokul.

From gokul007 at gmail.com  Tue Jul 26 00:02:23 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 26 Jul 2011 15:02:23 +0800
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
In-Reply-To: <CAHMh4-ZajTsKW=NXbS-zCVk-A82sYUnaF-5ZacpbyivyB-vRuQ@mail.gmail.com>
References: <20110725084426.401C6894C0EF1@bmail04.one.com>
	<CAHMh4-ZajTsKW=NXbS-zCVk-A82sYUnaF-5ZacpbyivyB-vRuQ@mail.gmail.com>
Message-ID: <CAHMh4-ZRu=BTsYzO411YRpPxR4Ve0d48zqwxeAQN-1k43yf0wA@mail.gmail.com>

>
> On Mon, Jul 25, 2011 at 4:44 PM, Rob Aarnts <rob at aarnts.com> wrote:
>
>>
>> Or:
>>
>> SINGLE_QUOTED_STRING returns [string result]
>>     : SQUOTE
>>            val=((~SQUOTE)*)    { $result = val.Text; }
>>       SQUOTE
>>     ;
>>
>> Is this possible? To my knowledge, Lexer cannot return...
>
> Gokul.
>
>

From rob at aarnts.com  Tue Jul 26 00:16:26 2011
From: rob at aarnts.com (Rob Aarnts)
Date: Tue, 26 Jul 2011 09:16:26 +0200
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
In-Reply-To: <CAHMh4-ZRu=BTsYzO411YRpPxR4Ve0d48zqwxeAQN-1k43yf0wA@mail.gmail.com>
References: <CAHMh4-ZajTsKW=NXbS-zCVk-A82sYUnaF-5ZacpbyivyB-vRuQ@mail.gmail.com>
	<CAHMh4-ZRu=BTsYzO411YRpPxR4Ve0d48zqwxeAQN-1k43yf0wA@mail.gmail.com>
Message-ID: <20110726071626.2200C532015C6@bmail04.one.com>


You're entirely right. I use this trick but with a parser rule in stead
of a lexer one. So SINGLE_QUOTED_STRING should be single_quoted_string
according to the ANTLR convention
----------------------------------------------------- 
Rob Aarnts
phone: +31 2356 14444
mobile: +31 6 5582 2856
fax: +31 8 4227 4444
-----------------------------------------------------
On 26 jul 2011 09:02 "Gokulakannan Somasundaram" <gokul007 at gmail.com>
<gokul007 at gmail.com> wrote:
> > On Mon, Jul 25, 2011 at 4:44 PM, Rob Aarnts <<rob at aarnts.com>>
> > wrote:
> > > Or:
> > > ?
> > > SINGLE_QUOTED_STRING returns [string result]
> > > ??? : SQUOTE
> > > ?????????? val=((~SQUOTE)*)??? { $result = val.Text; }
> > > ????? SQUOTE
> > > ??? ;
> > Is this possible? To my knowledge, Lexer cannot return...
> > Gokul.?

From bkiers at gmail.com  Tue Jul 26 00:52:09 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 26 Jul 2011 09:52:09 +0200
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
In-Reply-To: <20110726071626.2200C532015C6@bmail04.one.com>
References: <CAHMh4-ZajTsKW=NXbS-zCVk-A82sYUnaF-5ZacpbyivyB-vRuQ@mail.gmail.com>
	<CAHMh4-ZRu=BTsYzO411YRpPxR4Ve0d48zqwxeAQN-1k43yf0wA@mail.gmail.com>
	<20110726071626.2200C532015C6@bmail04.one.com>
Message-ID: <CAOrgODYQUdGbrPGeVtaNuaW67h255XiENqMinMSH-xSUJK6AuA@mail.gmail.com>

But you'd have to have a good reason to use a string literal as a parser
rule instead of a lexer rule.

Bart.


On Tue, Jul 26, 2011 at 9:16 AM, Rob Aarnts <rob at aarnts.com> wrote:

>
> You're entirely right. I use this trick but with a parser rule in stead
> of a lexer one. So SINGLE_QUOTED_STRING should be single_quoted_string
> according to the ANTLR convention
> -----------------------------------------------------
> Rob Aarnts
> phone: +31 2356 14444
> mobile: +31 6 5582 2856
> fax: +31 8 4227 4444
> -----------------------------------------------------
> On 26 jul 2011 09:02 "Gokulakannan Somasundaram" <gokul007 at gmail.com>
> <gokul007 at gmail.com> wrote:
> > > On Mon, Jul 25, 2011 at 4:44 PM, Rob Aarnts <<rob at aarnts.com>>
> > > wrote:
> > > > Or:
> > > >
> > > > SINGLE_QUOTED_STRING returns [string result]
> > > >     : SQUOTE
> > > >            val=((~SQUOTE)*)    { $result = val.Text; }
> > > >       SQUOTE
> > > >     ;
> > > Is this possible? To my knowledge, Lexer cannot return...
> > > Gokul.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From claudio.martella at tis.bz.it  Tue Jul 26 02:50:46 2011
From: claudio.martella at tis.bz.it (Claudio Martella)
Date: Tue, 26 Jul 2011 11:50:46 +0200
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <CAFCNb3gA_TqMwrE49VCo-RHLU=RP1NJ3RS+8+d5ug_U+=cwOcQ@mail.gmail.com>
References: <4E280A86.2020607@tis.bz.it>
	<CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
	<4E2D7C6B.3000007@tis.bz.it>
	<CAFCNb3gA_TqMwrE49VCo-RHLU=RP1NJ3RS+8+d5ug_U+=cwOcQ@mail.gmail.com>
Message-ID: <4E2E8DF6.1070101@tis.bz.it>

Hi Gary,

sorry for the inconvenience about the direct email, realized about the
reply_to only after I clicked.
Actually I did fix that cardinality yesterday before your suggestion,
but the problem persists.
I also tried to restructure my grammar as you suggest but I'm still
finding the same trouble and sincerely I'm running out of options...

For example locationStep is now:

locationStep
    :    edge condition*
        -> ^(LOCATIONSTEP edge condition*)
    |    edge condition* repeat
        -> ^(LOCATIONSTEP edge condition* repeat)
    |    edge condition* shortestPath
        -> ^(LOCATIONSTEP edge condition* shortestPath);

To get rid of condition* I'd have to restructure everything with a
recursive definition of condition, but that doesn't feel like the right
thing to do or a reason why things would start working.


My grammar in the end is very simple and I really don't know how to
proceed to fix this.

Any suggestion about what I should read?


On 7/26/11 1:16 AM, Gary Miller wrote:
> Hey Claudio,
>
> Please try to remember to reply to the list and not directly to the
> person. Unfortunately this list server doesn't add a reply_to in the
> header.
>
> I'm guessing that you problem is one of cardinality.
> The cardinality on the left and right should generally match.
> I would go as far as saying that you might want to restructure your
> grammar so that they always match (I'm not sure if this is actually
> possible though).
>
> So
> ? r?
> ? : a c -> (A c)
> ? | a b -> (A b)
> ? ;
> is preferable to
> ? r
> ? : a (c | b) -> (A c? b?)
> ? ;
> IMO.
>
> I'm guessing your mistake is here
> ? ? locationStep: edge condition* (repeat | shortestPath)?
> ? ? ? -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
> as condition has a * on the left and a ? on the right.
> Try
> ? ? locationStep: edge condition* (repeat | shortestPath)?
> ? ? ? -> ^(LOCATIONSTEP condition* repeat? shortestPath?);
> And look for any other mismatches.
>
> Regards
> Gary
>
> On Tue, Jul 26, 2011 at 12:23 AM, Claudio Martella
> <claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>> wrote:
>
>     I applied (1) and it worked. I have one problem with this grammar
>     though. I'm debugging it with ANTLRWorks and the generated Parse
>     Tree is
>     correct. The problem is that when I visualize the AST some things
>     don't
>     work. In particular the filterFunction internal node is not always
>     present. Sometimes the filter node has a direct child "PREFIX("
>     and the
>     token ')' is still present instead of being discarded. I don't
>     understand how this can be possible as the Parse Tree is correct
>     AND for
>     certain examples the AST for filter is also correct.
>
>     To replicate it try the query "claudio :: age [MAX(10)][MIN(3)] > age
>     [country = EQUALS('italy')] > weight [MIN(3)] (*3) .DISTANCE('marco')"
>
>     with this grammar:
>     grammar RDFPath;
>
>     options { output = AST; }
>     tokens {
>     ? ?QUERY ? ? ? ? ? = 'query';
>     ? ?LOCATIONSTEP ? ?= 'locationstep';
>     ? ?CONDITION ? ? ? = 'condition';
>     ? ?FILTER ? ? ? ? ?= 'filter';
>     ? ?FILTERFUNCTION ?= 'filterfunction';
>     ? ?SUBQUERY ? ? ? ?= 'subquery';
>     ? ?REPEAT ? ? ? ? ?= 'repeat';
>     ? ?SHORTESTPATH ? ?= 'shortestpath';
>     ? ?ENDNODEFUNCTION = 'endnodefunction';
>     ? ?STARTNODE ? ? ? = 'startnode';
>     ? ?EDGE ? ? ? ? ? ?= 'edge';
>     }
>
>     /* PARSER RULES */
>
>     query: startNode '::' locationStep ('>' locationStep)* ('.'
>     endNodeFunction)?
>     ? ?-> ^(QUERY startNode locationStep+ endNodeFunction);
>
>     locationStep: edge condition* (repeat | shortestPath)?
>     ? -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
>
>     condition: '[' ( filter | subquery ) ']'
>     ? -> ^(CONDITION filter? subquery?);
>
>
>     filter: filterFunction
>     ? ?-> ^(FILTER filterFunction);
>
>     filterFunction: fn='EQUALS(' v=STRING ')' | fn='EQUALS('
>     v=INTVALUE ')'
>     ? ? ? ?| fn='SUFFIX(' v=STRING ')' | fn='PREFIX(' v=STRING ')'
>     ? ? ? ?| fn='MIN(' v=INTVALUE ')' | fn='MAX(' v=INTVALUE ')'
>     ? ?-> ^(FILTERFUNCTION $fn $v);
>
>     subquery: edge '=' filterFunction
>     ? ?-> ^(SUBQUERY edge filterFunction);
>
>     repeat: '(' v=INTVALUE ')'
>     ? ?-> ^(REPEAT $v);
>
>     shortestPath: '(*' v=INTVALUE ')'
>     ? ?-> ^(SHORTESTPATH $v);
>
>     endNodeFunction: fn='COUNT()' | fn='SUM()' | fn='AVG()'
>     ? ? ? ? ? ? | fn='MIN()' | fn='MAX()' | fn='DISTANCE(' v=STRING ')'
>     ? ? ? ?-> ^(ENDNODEFUNCTION $fn $v);
>
>     startNode: v='*' | v=TEXTVALUE
>     ? ?-> ^(STARTNODE $v);
>
>     edge: v=TEXTVALUE
>     ? ?-> ^(EDGE $v);
>
>     /* LEXER RULES */
>
>     TEXTVALUE: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')* ;
>
>     INTVALUE: ('0'..'9')+ ;
>
>     STRING ? ?: '\'' TEXTVALUE '\'' ;
>
>     ID: ? ?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>
>     WS: ? (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
>
>
>
>     On 7/22/11 2:10 AM, Gary Miller wrote:
>     > Try the following options.
>     >
>     > 1.
>     > locationStep: edge condition? (repeat | shortestPath)? ('>'
>     locationStep)?
>     > ? ?-> ^(LOCATIONSTEP condition? repeat? shortestPath?
>     locationStep?);
>     >
>     > condition: ( filter | subquery ) condition?
>     > ? ?-> ^(CONDITION filter? subquery? condition?);
>     >
>     > or
>     > 2.
>     > locationStep
>     > : ?edge condition? repeat? ?('>' locationStep)? ?-> ^(LOCATIONSTEP
>     > condition? shortestPath? locationStep?)
>     > | ?edge condition? shortestPath? ('>' locationStep)? ?->
>     > ^(LOCATIONSTEP condition? shortestPath? locationStep?)
>     > ;
>     >
>     > condition
>     > : filter condition? ? -> ^(CONDITION filter condition?)
>     > | subquery condition? ? -> ^(CONDITION subquery condition?)
>     > ;
>     >
>     > Regards
>     > Gary
>     >
>     >
>     > On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
>     > <claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>>
>     wrote:
>     >> Hello,
>     >>
>     >> I've this grammar: http://pastebin.com/dNzdGx8R but i get this
>     error
>     >> when I test it with AntlrWorks:
>     >>
>     >> [11:23:59] /Users/hammer/output/RDFPathParser.java:383:
>     incompatible types
>     >> [11:23:59] found ? : RDFPathParser.repeat_return
>     >> [11:23:59] required: RDFPathParser.shortestPath_return
>     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? v=repeat();
>     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
>     >> [11:23:59] /Users/hammer/output/RDFPathParser.java:586:
>     incompatible types
>     >> [11:23:59] found ? : RDFPathParser.filter_return
>     >> [11:23:59] required: RDFPathParser.subquery_return
>     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? v=filter();
>     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
>     >> [11:23:59] 2 errors
>     >>
>     >>
>     >> Basically I think the problem is the assignment in the subrules
>     with ORs
>     >> in two statements:
>     >>
>     >> locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
>     >> locationStep)?
>     >> ? ?-> ^(LOCATIONSTEP condition $v locationStep);
>     >>
>     >> condition: ( v=filter | v=subquery ) condition?
>     >> ? ?-> ^(CONDITION $v condition);
>     >>
>     >> How do I handle these situations where I have the two or more
>     options in
>     >> a subrule?
>     >>
>     >>
>     >> Thanks
>     >> Claudio
>     >>
>     >> --
>     >> Claudio Martella
>     >> Free Software & Open Technologies
>     >> Analyst
>     >>
>     >> TIS innovation park
>     >> Via Siemens 19 | Siemensstr. 19
>     >> 39100 Bolzano | 39100 Bozen
>     >> Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
>     >> Fax ?+39 0471 068 129 <tel:%2B39%200471%20068%20129>
>     >> claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>
>     http://www.tis.bz.it
>     >>
>     >> Short information regarding use of personal data. According to
>     Section 13 of Italian Legislative Decree no. 196 of 30 June 2003,
>     we inform you that we process your personal data in order to
>     fulfil contractual and fiscal obligations and also to send you
>     information regarding our services and events. Your personal data
>     are processed with and without electronic means and by respecting
>     data subjects' rights, fundamental freedoms and dignity,
>     particularly with regard to confidentiality, personal identity and
>     the right to personal data protection. At any time and without
>     formalities you can write an e-mail to privacy at tis.bz.it
>     <mailto:privacy at tis.bz.it> in order to object the processing of
>     your personal data for the purpose of sending advertising
>     materials and also to exercise the right to access personal data
>     and other rights referred to in Section 7 of Decree 196/2003. The
>     data controller is TIS Techno Innovation Alto Adige, Siemens
>     Street n. 19, Bolzano. You can find the complete information on
>     the web si
>     >> ?te www.tis.bz.it <http://www.tis.bz.it>.
>     >>
>     >>
>     >>
>     >>
>     >>
>     >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     >> Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>     >>
>     > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     > Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>     >
>
>
>     --
>     Claudio Martella
>     Free Software & Open Technologies
>     Analyst
>
>     TIS innovation park
>     Via Siemens 19 | Siemensstr. 19
>     39100 Bolzano | 39100 Bozen
>     Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
>     Fax ?+39 0471 068 129 <tel:%2B39%200471%20068%20129>
>     claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>
>     http://www.tis.bz.it
>
>     Short information regarding use of personal data. According to
>     Section 13 of Italian Legislative Decree no. 196 of 30 June 2003,
>     we inform you that we process your personal data in order to
>     fulfil contractual and fiscal obligations and also to send you
>     information regarding our services and events. Your personal data
>     are processed with and without electronic means and by respecting
>     data subjects' rights, fundamental freedoms and dignity,
>     particularly with regard to confidentiality, personal identity and
>     the right to personal data protection. At any time and without
>     formalities you can write an e-mail to privacy at tis.bz.it
>     <mailto:privacy at tis.bz.it> in order to object the processing of
>     your personal data for the purpose of sending advertising
>     materials and also to exercise the right to access personal data
>     and other rights referred to in Section 7 of Decree 196/2003. The
>     data controller is TIS Techno Innovation Alto Adige, Siemens
>     Street n. 19, Bolzano. You can find the complete information on
>     the web site www.tis.bz.it <http://www.tis.bz.it>.
>
>
>
>
>


-- 
Claudio Martella
Free Software & Open Technologies
Analyst

TIS innovation park
Via Siemens 19 | Siemensstr. 19
39100 Bolzano | 39100 Bozen
Tel. +39 0471 068 123
Fax  +39 0471 068 129
claudio.martella at tis.bz.it http://www.tis.bz.it

Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web site www.tis.bz.it.





From gary at sumwise.com  Tue Jul 26 03:45:26 2011
From: gary at sumwise.com (Gary Miller)
Date: Tue, 26 Jul 2011 20:45:26 +1000
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <4E2E8DF6.1070101@tis.bz.it>
References: <4E280A86.2020607@tis.bz.it>
	<CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
	<4E2D7C6B.3000007@tis.bz.it>
	<CAFCNb3gA_TqMwrE49VCo-RHLU=RP1NJ3RS+8+d5ug_U+=cwOcQ@mail.gmail.com>
	<4E2E8DF6.1070101@tis.bz.it>
Message-ID: <CAFCNb3g58SKxfysuQ807fk8At9Mhh0UD1dP8D3xA4BMEprAJ5A@mail.gmail.com>

Hey Claudio,

It was no inconvenience, I was just hoping that others more experienced then
me could also help.

After type this email I think your problem is point (4), your interpretation
of
  rule : v=a | v=b -> ^(X $v);
I think this means
  rule : a -> a | b -> ^(X b);
You probably meant to write
 rule : a -> ^(X a) | b -> ^(X b);

The rests of this email is probably just commentary.
Regards
Gary

Your grammar looks quite odd to me in a number of ways.
1. I have found that it help me to split my lexer and parser.
   The result of this is that a lot of your parser rules as they stand would
be invalid.
   I think the main reason I do this is that I get easily confused by
lexing.
2. I do have assignments in my token sections.
    i.e.
        token { A = 'a'; }
    only virtual token definitions
        token { A; }
3. I would try for a more generic function definition and deal with function
validation later e.g. in a walker.
    eg.
       function : name=STRING LPAREN (arg=STRING)* RPAREN -> ^(FUNC $name
$arg)
4. Your OR look strange, as far as I know every OR (make not the one in
bracket, but I'm not sure need a rewrite or AST production)
    I think the following is wrong
        rule : foo | bar | lalala -> ^(X xyz)
    This might mean (experts please help here)
        rule
          :  foo -> foo
          | bar -> bar
          | lalala -> ^(X xyz)
          ;
     I think you probably wanted
        rule
          :  foo -> ^(X xyz)
          | bar -> ^(X xyz)
          | lalala -> ^(X xyz)
          ;

Hope this helped.

On Tue, Jul 26, 2011 at 7:50 PM, Claudio Martella <
claudio.martella at tis.bz.it> wrote:

> Hi Gary,
>
> sorry for the inconvenience about the direct email, realized about the
> reply_to only after I clicked.
> Actually I did fix that cardinality yesterday before your suggestion,
> but the problem persists.
> I also tried to restructure my grammar as you suggest but I'm still
> finding the same trouble and sincerely I'm running out of options...
>
> For example locationStep is now:
>
> locationStep
>    :    edge condition*
>        -> ^(LOCATIONSTEP edge condition*)
>    |    edge condition* repeat
>        -> ^(LOCATIONSTEP edge condition* repeat)
>    |    edge condition* shortestPath
>        -> ^(LOCATIONSTEP edge condition* shortestPath);
>
> To get rid of condition* I'd have to restructure everything with a
> recursive definition of condition, but that doesn't feel like the right
> thing to do or a reason why things would start working.
>
>
> My grammar in the end is very simple and I really don't know how to
> proceed to fix this.
>
> Any suggestion about what I should read?
>
>
> On 7/26/11 1:16 AM, Gary Miller wrote:
> > Hey Claudio,
> >
> > Please try to remember to reply to the list and not directly to the
> > person. Unfortunately this list server doesn't add a reply_to in the
> > header.
> >
> > I'm guessing that you problem is one of cardinality.
> > The cardinality on the left and right should generally match.
> > I would go as far as saying that you might want to restructure your
> > grammar so that they always match (I'm not sure if this is actually
> > possible though).
> >
> > So
> > ? r?
> > ? : a c -> (A c)
> > ? | a b -> (A b)
> > ? ;
> > is preferable to
> > ? r
> > ? : a (c | b) -> (A c? b?)
> > ? ;
> > IMO.
> >
> > I'm guessing your mistake is here
> > ? ? locationStep: edge condition* (repeat | shortestPath)?
> > ? ? ? -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
> > as condition has a * on the left and a ? on the right.
> > Try
> > ? ? locationStep: edge condition* (repeat | shortestPath)?
> > ? ? ? -> ^(LOCATIONSTEP condition* repeat? shortestPath?);
> > And look for any other mismatches.
> >
> > Regards
> > Gary
> >
> > On Tue, Jul 26, 2011 at 12:23 AM, Claudio Martella
> > <claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>> wrote:
> >
> >     I applied (1) and it worked. I have one problem with this grammar
> >     though. I'm debugging it with ANTLRWorks and the generated Parse
> >     Tree is
> >     correct. The problem is that when I visualize the AST some things
> >     don't
> >     work. In particular the filterFunction internal node is not always
> >     present. Sometimes the filter node has a direct child "PREFIX("
> >     and the
> >     token ')' is still present instead of being discarded. I don't
> >     understand how this can be possible as the Parse Tree is correct
> >     AND for
> >     certain examples the AST for filter is also correct.
> >
> >     To replicate it try the query "claudio :: age [MAX(10)][MIN(3)] > age
> >     [country = EQUALS('italy')] > weight [MIN(3)] (*3)
> .DISTANCE('marco')"
> >
> >     with this grammar:
> >     grammar RDFPath;
> >
> >     options { output = AST; }
> >     tokens {
> >     ? ?QUERY ? ? ? ? ? = 'query';
> >     ? ?LOCATIONSTEP ? ?= 'locationstep';
> >     ? ?CONDITION ? ? ? = 'condition';
> >     ? ?FILTER ? ? ? ? ?= 'filter';
> >     ? ?FILTERFUNCTION ?= 'filterfunction';
> >     ? ?SUBQUERY ? ? ? ?= 'subquery';
> >     ? ?REPEAT ? ? ? ? ?= 'repeat';
> >     ? ?SHORTESTPATH ? ?= 'shortestpath';
> >     ? ?ENDNODEFUNCTION = 'endnodefunction';
> >     ? ?STARTNODE ? ? ? = 'startnode';
> >     ? ?EDGE ? ? ? ? ? ?= 'edge';
> >     }
> >
> >     /* PARSER RULES */
> >
> >     query: startNode '::' locationStep ('>' locationStep)* ('.'
> >     endNodeFunction)?
> >     ? ?-> ^(QUERY startNode locationStep+ endNodeFunction);
> >
> >     locationStep: edge condition* (repeat | shortestPath)?
> >     ? -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
> >
> >     condition: '[' ( filter | subquery ) ']'
> >     ? -> ^(CONDITION filter? subquery?);
> >
> >
> >     filter: filterFunction
> >     ? ?-> ^(FILTER filterFunction);
> >
> >     filterFunction: fn='EQUALS(' v=STRING ')' | fn='EQUALS('
> >     v=INTVALUE ')'
> >     ? ? ? ?| fn='SUFFIX(' v=STRING ')' | fn='PREFIX(' v=STRING ')'
> >     ? ? ? ?| fn='MIN(' v=INTVALUE ')' | fn='MAX(' v=INTVALUE ')'
> >     ? ?-> ^(FILTERFUNCTION $fn $v);
> >
> >     subquery: edge '=' filterFunction
> >     ? ?-> ^(SUBQUERY edge filterFunction);
> >
> >     repeat: '(' v=INTVALUE ')'
> >     ? ?-> ^(REPEAT $v);
> >
> >     shortestPath: '(*' v=INTVALUE ')'
> >     ? ?-> ^(SHORTESTPATH $v);
> >
> >     endNodeFunction: fn='COUNT()' | fn='SUM()' | fn='AVG()'
> >     ? ? ? ? ? ? | fn='MIN()' | fn='MAX()' | fn='DISTANCE(' v=STRING ')'
> >     ? ? ? ?-> ^(ENDNODEFUNCTION $fn $v);
> >
> >     startNode: v='*' | v=TEXTVALUE
> >     ? ?-> ^(STARTNODE $v);
> >
> >     edge: v=TEXTVALUE
> >     ? ?-> ^(EDGE $v);
> >
> >     /* LEXER RULES */
> >
> >     TEXTVALUE: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')* ;
> >
> >     INTVALUE: ('0'..'9')+ ;
> >
> >     STRING ? ?: '\'' TEXTVALUE '\'' ;
> >
> >     ID: ? ?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
> >
> >     WS: ? (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
> >
> >
> >
> >     On 7/22/11 2:10 AM, Gary Miller wrote:
> >     > Try the following options.
> >     >
> >     > 1.
> >     > locationStep: edge condition? (repeat | shortestPath)? ('>'
> >     locationStep)?
> >     > ? ?-> ^(LOCATIONSTEP condition? repeat? shortestPath?
> >     locationStep?);
> >     >
> >     > condition: ( filter | subquery ) condition?
> >     > ? ?-> ^(CONDITION filter? subquery? condition?);
> >     >
> >     > or
> >     > 2.
> >     > locationStep
> >     > : ?edge condition? repeat? ?('>' locationStep)? ?-> ^(LOCATIONSTEP
> >     > condition? shortestPath? locationStep?)
> >     > | ?edge condition? shortestPath? ('>' locationStep)? ?->
> >     > ^(LOCATIONSTEP condition? shortestPath? locationStep?)
> >     > ;
> >     >
> >     > condition
> >     > : filter condition? ? -> ^(CONDITION filter condition?)
> >     > | subquery condition? ? -> ^(CONDITION subquery condition?)
> >     > ;
> >     >
> >     > Regards
> >     > Gary
> >     >
> >     >
> >     > On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
> >     > <claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>>
> >     wrote:
> >     >> Hello,
> >     >>
> >     >> I've this grammar: http://pastebin.com/dNzdGx8R but i get this
> >     error
> >     >> when I test it with AntlrWorks:
> >     >>
> >     >> [11:23:59] /Users/hammer/output/RDFPathParser.java:383:
> >     incompatible types
> >     >> [11:23:59] found ? : RDFPathParser.repeat_return
> >     >> [11:23:59] required: RDFPathParser.shortestPath_return
> >     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? v=repeat();
> >     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
> >     >> [11:23:59] /Users/hammer/output/RDFPathParser.java:586:
> >     incompatible types
> >     >> [11:23:59] found ? : RDFPathParser.filter_return
> >     >> [11:23:59] required: RDFPathParser.subquery_return
> >     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? v=filter();
> >     >> [11:23:59] ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
> >     >> [11:23:59] 2 errors
> >     >>
> >     >>
> >     >> Basically I think the problem is the assignment in the subrules
> >     with ORs
> >     >> in two statements:
> >     >>
> >     >> locationStep: edge condition? (v=repeat | v=shortestPath)? ('>'
> >     >> locationStep)?
> >     >> ? ?-> ^(LOCATIONSTEP condition $v locationStep);
> >     >>
> >     >> condition: ( v=filter | v=subquery ) condition?
> >     >> ? ?-> ^(CONDITION $v condition);
> >     >>
> >     >> How do I handle these situations where I have the two or more
> >     options in
> >     >> a subrule?
> >     >>
> >     >>
> >     >> Thanks
> >     >> Claudio
> >     >>
> >     >> --
> >     >> Claudio Martella
> >     >> Free Software & Open Technologies
> >     >> Analyst
> >     >>
> >     >> TIS innovation park
> >     >> Via Siemens 19 | Siemensstr. 19
> >     >> 39100 Bolzano | 39100 Bozen
> >     >> Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
> >     >> Fax ?+39 0471 068 129 <tel:%2B39%200471%20068%20129>
> >     >> claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>
> >     http://www.tis.bz.it
> >     >>
> >     >> Short information regarding use of personal data. According to
> >     Section 13 of Italian Legislative Decree no. 196 of 30 June 2003,
> >     we inform you that we process your personal data in order to
> >     fulfil contractual and fiscal obligations and also to send you
> >     information regarding our services and events. Your personal data
> >     are processed with and without electronic means and by respecting
> >     data subjects' rights, fundamental freedoms and dignity,
> >     particularly with regard to confidentiality, personal identity and
> >     the right to personal data protection. At any time and without
> >     formalities you can write an e-mail to privacy at tis.bz.it
> >     <mailto:privacy at tis.bz.it> in order to object the processing of
> >     your personal data for the purpose of sending advertising
> >     materials and also to exercise the right to access personal data
> >     and other rights referred to in Section 7 of Decree 196/2003. The
> >     data controller is TIS Techno Innovation Alto Adige, Siemens
> >     Street n. 19, Bolzano. You can find the complete information on
> >     the web si
> >     >> ?te www.tis.bz.it <http://www.tis.bz.it>.
> >     >>
> >     >>
> >     >>
> >     >>
> >     >>
> >     >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >     >> Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >     >>
> >     > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >     > Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >     >
> >
> >
> >     --
> >     Claudio Martella
> >     Free Software & Open Technologies
> >     Analyst
> >
> >     TIS innovation park
> >     Via Siemens 19 | Siemensstr. 19
> >     39100 Bolzano | 39100 Bozen
> >     Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
> >     Fax ?+39 0471 068 129 <tel:%2B39%200471%20068%20129>
> >     claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>
> >     http://www.tis.bz.it
> >
> >     Short information regarding use of personal data. According to
> >     Section 13 of Italian Legislative Decree no. 196 of 30 June 2003,
> >     we inform you that we process your personal data in order to
> >     fulfil contractual and fiscal obligations and also to send you
> >     information regarding our services and events. Your personal data
> >     are processed with and without electronic means and by respecting
> >     data subjects' rights, fundamental freedoms and dignity,
> >     particularly with regard to confidentiality, personal identity and
> >     the right to personal data protection. At any time and without
> >     formalities you can write an e-mail to privacy at tis.bz.it
> >     <mailto:privacy at tis.bz.it> in order to object the processing of
> >     your personal data for the purpose of sending advertising
> >     materials and also to exercise the right to access personal data
> >     and other rights referred to in Section 7 of Decree 196/2003. The
> >     data controller is TIS Techno Innovation Alto Adige, Siemens
> >     Street n. 19, Bolzano. You can find the complete information on
> >     the web site www.tis.bz.it <http://www.tis.bz.it>.
> >
> >
> >
> >
> >
>
>
> --
> Claudio Martella
> Free Software & Open Technologies
> Analyst
>
> TIS innovation park
> Via Siemens 19 | Siemensstr. 19
> 39100 Bolzano | 39100 Bozen
> Tel. +39 0471 068 123
> Fax  +39 0471 068 129
> claudio.martella at tis.bz.it http://www.tis.bz.it
>
> Short information regarding use of personal data. According to Section 13
> of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we
> process your personal data in order to fulfil contractual and fiscal
> obligations and also to send you information regarding our services and
> events. Your personal data are processed with and without electronic means
> and by respecting data subjects' rights, fundamental freedoms and dignity,
> particularly with regard to confidentiality, personal identity and the right
> to personal data protection. At any time and without formalities you can
> write an e-mail to privacy at tis.bz.it in order to object the processing of
> your personal data for the purpose of sending advertising materials and also
> to exercise the right to access personal data and other rights referred to
> in Section 7 of Decree 196/2003. The data controller is TIS Techno
> Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the
> complete information on the web site www.tis.bz.it.
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From claudio.martella at tis.bz.it  Tue Jul 26 04:07:15 2011
From: claudio.martella at tis.bz.it (Claudio Martella)
Date: Tue, 26 Jul 2011 13:07:15 +0200
Subject: [antlr-interest] Incompatible type in subrules with OR
In-Reply-To: <CAFCNb3g58SKxfysuQ807fk8At9Mhh0UD1dP8D3xA4BMEprAJ5A@mail.gmail.com>
References: <4E280A86.2020607@tis.bz.it>
	<CAFCNb3jDcVpBwccmQk5eDtG55RejK9x5gMmAj_on5useZKiyzw@mail.gmail.com>
	<4E2D7C6B.3000007@tis.bz.it>
	<CAFCNb3gA_TqMwrE49VCo-RHLU=RP1NJ3RS+8+d5ug_U+=cwOcQ@mail.gmail.com>
	<4E2E8DF6.1070101@tis.bz.it>
	<CAFCNb3g58SKxfysuQ807fk8At9Mhh0UD1dP8D3xA4BMEprAJ5A@mail.gmail.com>
Message-ID: <4E2E9FE3.7090205@tis.bz.it>

Yes, you're totally right.
I changed the definition of filterFunction explicitly repeating the ->
^(X xyz) and it works now.


Thanks you very much!



On 7/26/11 12:45 PM, Gary Miller wrote:
> Hey? Claudio,
>
> It was no? inconvenience, I was just hoping that others more
> experienced then me could also help.
>
> After type this email I think your problem is point (4), your
> interpretation of? 
> ?  rule : v=a | v=b -> ^(X $v);
> I think this means
> ?  rule : a -> a | b -> ^(X b);
> You probably meant to write
> ? rule : a -> ^(X a) | b -> ^(X b);
>
> The rests of this email is probably just commentary.
> Regards
> Gary
>
> Your grammar looks quite odd to me in a number of ways.
> 1. I have found that it help me to split my lexer and parser.? 
> ?  ? The result of this is that a lot of your parser rules as they
> stand would be invalid.
> ?  ? I think the main reason I do this is that I get easily confused
> by lexing.
> 2. I do have assignments in my token sections.? 
> ?  ?  i.e.? 
> ?  ?  ?  ?  token { A = 'a'; }? 
> ?  ?  only virtual token definitions? 
> ?  ?  ?  ?  token { A; }
> 3. I would try for a more generic function definition and deal with
> function validation later e.g. in a walker.
> ?  ?  eg.
> ?  ?  ?  ? function : name=STRING LPAREN (arg=STRING)* RPAREN ->
> ^(FUNC $name $arg)
> 4. Your OR look strange, as far as I know every OR (make not the one
> in bracket, but I'm not sure need a rewrite or AST production)
> ?  ?  I think the following is wrong
> ?  ?  ?  ?  rule : foo | bar | lalala -> ^(X xyz)
> ?  ?  This might mean (experts please help here)
> ?  ?  ?  ?  rule
> ?  ?  ?  ?  ?  : ? foo -> foo
> ?  ?  ?  ?  ?  | bar -> bar
> ?  ?  ?  ?  ?  | lalala -> ^(X xyz)
> ?  ?  ?  ?  ?  ;
> ?  ?  ? I think you probably wanted
> ?  ?  ?  ?  rule
> ?  ?  ?  ?  ?  : ? foo -> ^(X xyz)
> ?  ?  ?  ?  ?  | bar ->? ^(X xyz)
> ?  ?  ?  ?  ?  | lalala -> ^(X xyz)
> ?  ?  ?  ?  ?  ;
>
> Hope this helped.
>
> On Tue, Jul 26, 2011 at 7:50 PM, Claudio Martella
> <claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>> wrote:
>
>     Hi Gary,
>
>     sorry for the inconvenience about the direct email, realized about the
>     reply_to only after I clicked.
>     Actually I did fix that cardinality yesterday before your suggestion,
>     but the problem persists.
>     I also tried to restructure my grammar as you suggest but I'm still
>     finding the same trouble and sincerely I'm running out of options...
>
>     For example locationStep is now:
>
>     locationStep
>     ?  ? : ?  ? edge condition*
>     ?  ?  ?  ? -> ^(LOCATIONSTEP edge condition*)
>     ?  ? | ?  ? edge condition* repeat
>     ?  ?  ?  ? -> ^(LOCATIONSTEP edge condition* repeat)
>     ?  ? | ?  ? edge condition* shortestPath
>     ?  ?  ?  ? -> ^(LOCATIONSTEP edge condition* shortestPath);
>
>     To get rid of condition* I'd have to restructure everything with a
>     recursive definition of condition, but that doesn't feel like the
>     right
>     thing to do or a reason why things would start working.
>
>
>     My grammar in the end is very simple and I really don't know how to
>     proceed to fix this.
>
>     Any suggestion about what I should read?
>
>
>     On 7/26/11 1:16 AM, Gary Miller wrote:
>     > Hey Claudio,
>     >
>     > Please try to remember to reply to the list and not directly to the
>     > person. Unfortunately this list server doesn't add a reply_to in the
>     > header.
>     >
>     > I'm guessing that you problem is one of cardinality.
>     > The cardinality on the left and right should generally match.
>     > I would go as far as saying that you might want to restructure your
>     > grammar so that they always match (I'm not sure if this is actually
>     > possible though).
>     >
>     > So
>     > ??? r???
>     > ??? : a c -> (A c)
>     > ??? | a b -> (A b)
>     > ??? ;
>     > is preferable to
>     > ??? r
>     > ??? : a (c | b) -> (A c? b?)
>     > ??? ;
>     > IMO.
>     >
>     > I'm guessing your mistake is here
>     > ??? ??? locationStep: edge condition* (repeat | shortestPath)?
>     > ??? ??? ??? -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
>     > as condition has a * on the left and a ? on the right.
>     > Try
>     > ??? ??? locationStep: edge condition* (repeat | shortestPath)?
>     > ??? ??? ??? -> ^(LOCATIONSTEP condition* repeat? shortestPath?);
>     > And look for any other mismatches.
>     >
>     > Regards
>     > Gary
>     >
>     > On Tue, Jul 26, 2011 at 12:23 AM, Claudio Martella
>     > <claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>
>     <mailto:claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>>> wrote:
>     >
>     > ?  ?  I applied (1) and it worked. I have one problem with this
>     grammar
>     > ?  ?  though. I'm debugging it with ANTLRWorks and the generated
>     Parse
>     > ?  ?  Tree is
>     > ?  ?  correct. The problem is that when I visualize the AST some
>     things
>     > ?  ?  don't
>     > ?  ?  work. In particular the filterFunction internal node is
>     not always
>     > ?  ?  present. Sometimes the filter node has a direct child
>     "PREFIX("
>     > ?  ?  and the
>     > ?  ?  token ')' is still present instead of being discarded. I don't
>     > ?  ?  understand how this can be possible as the Parse Tree is
>     correct
>     > ?  ?  AND for
>     > ?  ?  certain examples the AST for filter is also correct.
>     >
>     > ?  ?  To replicate it try the query "claudio :: age
>     [MAX(10)][MIN(3)] > age
>     > ?  ?  [country = EQUALS('italy')] > weight [MIN(3)] (*3)
>     .DISTANCE('marco')"
>     >
>     > ?  ?  with this grammar:
>     > ?  ?  grammar RDFPath;
>     >
>     > ?  ?  options { output = AST; }
>     > ?  ?  tokens {
>     > ?  ?  ??? ???QUERY ??? ??? ??? ??? ??? = 'query';
>     > ?  ?  ??? ???LOCATIONSTEP ??? ???= 'locationstep';
>     > ?  ?  ??? ???CONDITION ??? ??? ??? = 'condition';
>     > ?  ?  ??? ???FILTER ??? ??? ??? ??? ???= 'filter';
>     > ?  ?  ??? ???FILTERFUNCTION ???= 'filterfunction';
>     > ?  ?  ??? ???SUBQUERY ??? ??? ??? ???= 'subquery';
>     > ?  ?  ??? ???REPEAT ??? ??? ??? ??? ???= 'repeat';
>     > ?  ?  ??? ???SHORTESTPATH ??? ???= 'shortestpath';
>     > ?  ?  ??? ???ENDNODEFUNCTION = 'endnodefunction';
>     > ?  ?  ??? ???STARTNODE ??? ??? ??? = 'startnode';
>     > ?  ?  ??? ???EDGE ??? ??? ??? ??? ??? ???= 'edge';
>     > ?  ?  }
>     >
>     > ?  ?  /* PARSER RULES */
>     >
>     > ?  ?  query: startNode '::' locationStep ('>' locationStep)* ('.'
>     > ?  ?  endNodeFunction)?
>     > ?  ?  ??? ???-> ^(QUERY startNode locationStep+ endNodeFunction);
>     >
>     > ?  ?  locationStep: edge condition* (repeat | shortestPath)?
>     > ?  ?  ??? -> ^(LOCATIONSTEP condition? repeat? shortestPath?);
>     >
>     > ?  ?  condition: '[' ( filter | subquery ) ']'
>     > ?  ?  ??? -> ^(CONDITION filter? subquery?);
>     >
>     >
>     > ?  ?  filter: filterFunction
>     > ?  ?  ??? ???-> ^(FILTER filterFunction);
>     >
>     > ?  ?  filterFunction: fn='EQUALS(' v=STRING ')' | fn='EQUALS('
>     > ?  ?  v=INTVALUE ')'
>     > ?  ?  ??? ??? ??? ???| fn='SUFFIX(' v=STRING ')' | fn='PREFIX('
>     v=STRING ')'
>     > ?  ?  ??? ??? ??? ???| fn='MIN(' v=INTVALUE ')' | fn='MAX('
>     v=INTVALUE ')'
>     > ?  ?  ??? ???-> ^(FILTERFUNCTION $fn $v);
>     >
>     > ?  ?  subquery: edge '=' filterFunction
>     > ?  ?  ??? ???-> ^(SUBQUERY edge filterFunction);
>     >
>     > ?  ?  repeat: '(' v=INTVALUE ')'
>     > ?  ?  ??? ???-> ^(REPEAT $v);
>     >
>     > ?  ?  shortestPath: '(*' v=INTVALUE ')'
>     > ?  ?  ??? ???-> ^(SHORTESTPATH $v);
>     >
>     > ?  ?  endNodeFunction: fn='COUNT()' | fn='SUM()' | fn='AVG()'
>     > ?  ?  ??? ??? ??? ??? ??? ??? | fn='MIN()' | fn='MAX()' |
>     fn='DISTANCE(' v=STRING ')'
>     > ?  ?  ??? ??? ??? ???-> ^(ENDNODEFUNCTION $fn $v);
>     >
>     > ?  ?  startNode: v='*' | v=TEXTVALUE
>     > ?  ?  ??? ???-> ^(STARTNODE $v);
>     >
>     > ?  ?  edge: v=TEXTVALUE
>     > ?  ?  ??? ???-> ^(EDGE $v);
>     >
>     > ?  ?  /* LEXER RULES */
>     >
>     > ?  ?  TEXTVALUE: ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'0'..'9')* ;
>     >
>     > ?  ?  INTVALUE: ('0'..'9')+ ;
>     >
>     > ?  ?  STRING ??? ???: '\'' TEXTVALUE '\'' ;
>     >
>     > ?  ?  ID: ??? ???('a'..'z'|'A'..'Z'|'_')
>     ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* ;
>     >
>     > ?  ?  WS: ??? (' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
>     >
>     >
>     >
>     > ?  ?  On 7/22/11 2:10 AM, Gary Miller wrote:
>     > ?  ?  > Try the following options.
>     > ?  ?  >
>     > ?  ?  > 1.
>     > ?  ?  > locationStep: edge condition? (repeat | shortestPath)? ('>'
>     > ?  ?  locationStep)?
>     > ?  ?  > ??? ???-> ^(LOCATIONSTEP condition? repeat? shortestPath?
>     > ?  ?  locationStep?);
>     > ?  ?  >
>     > ?  ?  > condition: ( filter | subquery ) condition?
>     > ?  ?  > ??? ???-> ^(CONDITION filter? subquery? condition?);
>     > ?  ?  >
>     > ?  ?  > or
>     > ?  ?  > 2.
>     > ?  ?  > locationStep
>     > ?  ?  > : ???edge condition? repeat? ???('>' locationStep)?
>     ???-> ^(LOCATIONSTEP
>     > ?  ?  > condition? shortestPath? locationStep?)
>     > ?  ?  > | ???edge condition? shortestPath? ('>' locationStep)? ???->
>     > ?  ?  > ^(LOCATIONSTEP condition? shortestPath? locationStep?)
>     > ?  ?  > ;
>     > ?  ?  >
>     > ?  ?  > condition
>     > ?  ?  > : filter condition? ??? -> ^(CONDITION filter condition?)
>     > ?  ?  > | subquery condition? ??? -> ^(CONDITION subquery
>     condition?)
>     > ?  ?  > ;
>     > ?  ?  >
>     > ?  ?  > Regards
>     > ?  ?  > Gary
>     > ?  ?  >
>     > ?  ?  >
>     > ?  ?  > On Thu, Jul 21, 2011 at 9:16 PM, Claudio Martella
>     > ?  ?  > <claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>
>     <mailto:claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>>>
>     > ?  ?  wrote:
>     > ?  ?  >> Hello,
>     > ?  ?  >>
>     > ?  ?  >> I've this grammar: http://pastebin.com/dNzdGx8R but i
>     get this
>     > ?  ?  error
>     > ?  ?  >> when I test it with AntlrWorks:
>     > ?  ?  >>
>     > ?  ?  >> [11:23:59] /Users/hammer/output/RDFPathParser.java:383:
>     > ?  ?  incompatible types
>     > ?  ?  >> [11:23:59] found ??? : RDFPathParser.repeat_return
>     > ?  ?  >> [11:23:59] required: RDFPathParser.shortestPath_return
>     > ?  ?  >> [11:23:59] ??? ??? ??? ??? ??? ??? ??? ??? ??? ???
>     v=repeat();
>     > ?  ?  >> [11:23:59] ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ???
>     ??? ??? ??? ^
>     > ?  ?  >> [11:23:59] /Users/hammer/output/RDFPathParser.java:586:
>     > ?  ?  incompatible types
>     > ?  ?  >> [11:23:59] found ??? : RDFPathParser.filter_return
>     > ?  ?  >> [11:23:59] required: RDFPathParser.subquery_return
>     > ?  ?  >> [11:23:59] ??? ??? ??? ??? ??? ??? ??? ??? ??? ???
>     v=filter();
>     > ?  ?  >> [11:23:59] ??? ??? ??? ??? ??? ??? ??? ??? ??? ??? ???
>     ??? ??? ??? ^
>     > ?  ?  >> [11:23:59] 2 errors
>     > ?  ?  >>
>     > ?  ?  >>
>     > ?  ?  >> Basically I think the problem is the assignment in the
>     subrules
>     > ?  ?  with ORs
>     > ?  ?  >> in two statements:
>     > ?  ?  >>
>     > ?  ?  >> locationStep: edge condition? (v=repeat |
>     v=shortestPath)? ('>'
>     > ?  ?  >> locationStep)?
>     > ?  ?  >> ??? ???-> ^(LOCATIONSTEP condition $v locationStep);
>     > ?  ?  >>
>     > ?  ?  >> condition: ( v=filter | v=subquery ) condition?
>     > ?  ?  >> ??? ???-> ^(CONDITION $v condition);
>     > ?  ?  >>
>     > ?  ?  >> How do I handle these situations where I have the two
>     or more
>     > ?  ?  options in
>     > ?  ?  >> a subrule?
>     > ?  ?  >>
>     > ?  ?  >>
>     > ?  ?  >> Thanks
>     > ?  ?  >> Claudio
>     > ?  ?  >>
>     > ?  ?  >> --
>     > ?  ?  >> Claudio Martella
>     > ?  ?  >> Free Software & Open Technologies
>     > ?  ?  >> Analyst
>     > ?  ?  >>
>     > ?  ?  >> TIS innovation park
>     > ?  ?  >> Via Siemens 19 | Siemensstr. 19
>     > ?  ?  >> 39100 Bolzano | 39100 Bozen
>     > ?  ?  >> Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
>     <tel:%2B39%200471%20068%20123>
>     > ?  ?  >> Fax ???+39 0471 068 129 <tel:%2B39%200471%20068%20129>
>     <tel:%2B39%200471%20068%20129>
>     > ?  ?  >> claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>
>     <mailto:claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>>
>     > ?  ?  http://www.tis.bz.it
>     > ?  ?  >>
>     > ?  ?  >> Short information regarding use of personal data.
>     According to
>     > ?  ?  Section 13 of Italian Legislative Decree no. 196 of 30
>     June 2003,
>     > ?  ?  we inform you that we process your personal data in order to
>     > ?  ?  fulfil contractual and fiscal obligations and also to send you
>     > ?  ?  information regarding our services and events. Your
>     personal data
>     > ?  ?  are processed with and without electronic means and by
>     respecting
>     > ?  ?  data subjects' rights, fundamental freedoms and dignity,
>     > ?  ?  particularly with regard to confidentiality, personal
>     identity and
>     > ?  ?  the right to personal data protection. At any time and without
>     > ?  ?  formalities you can write an e-mail to privacy at tis.bz.it
>     <mailto:privacy at tis.bz.it>
>     > ?  ?  <mailto:privacy at tis.bz.it <mailto:privacy at tis.bz.it>> in
>     order to object the processing of
>     > ?  ?  your personal data for the purpose of sending advertising
>     > ?  ?  materials and also to exercise the right to access
>     personal data
>     > ?  ?  and other rights referred to in Section 7 of Decree
>     196/2003. The
>     > ?  ?  data controller is TIS Techno Innovation Alto Adige, Siemens
>     > ?  ?  Street n. 19, Bolzano. You can find the complete
>     information on
>     > ?  ?  the web si
>     > ?  ?  >> ???te www.tis.bz.it <http://www.tis.bz.it>
>     <http://www.tis.bz.it>.
>     > ?  ?  >>
>     > ?  ?  >>
>     > ?  ?  >>
>     > ?  ?  >>
>     > ?  ?  >>
>     > ?  ?  >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     > ?  ?  >> Unsubscribe:
>     > ?  ? 
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>     > ?  ?  >>
>     > ?  ?  > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     > ?  ?  > Unsubscribe:
>     > ?  ? 
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>     > ?  ?  >
>     >
>     >
>     > ?  ?  --
>     > ?  ?  Claudio Martella
>     > ?  ?  Free Software & Open Technologies
>     > ?  ?  Analyst
>     >
>     > ?  ?  TIS innovation park
>     > ?  ?  Via Siemens 19 | Siemensstr. 19
>     > ?  ?  39100 Bolzano | 39100 Bozen
>     > ?  ?  Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
>     <tel:%2B39%200471%20068%20123>
>     > ?  ?  Fax ???+39 0471 068 129 <tel:%2B39%200471%20068%20129>
>     <tel:%2B39%200471%20068%20129>
>     > ?  ?  claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>
>     <mailto:claudio.martella at tis.bz.it
>     <mailto:claudio.martella at tis.bz.it>>
>     > ?  ?  http://www.tis.bz.it
>     >
>     > ?  ?  Short information regarding use of personal data. According to
>     > ?  ?  Section 13 of Italian Legislative Decree no. 196 of 30
>     June 2003,
>     > ?  ?  we inform you that we process your personal data in order to
>     > ?  ?  fulfil contractual and fiscal obligations and also to send you
>     > ?  ?  information regarding our services and events. Your
>     personal data
>     > ?  ?  are processed with and without electronic means and by
>     respecting
>     > ?  ?  data subjects' rights, fundamental freedoms and dignity,
>     > ?  ?  particularly with regard to confidentiality, personal
>     identity and
>     > ?  ?  the right to personal data protection. At any time and without
>     > ?  ?  formalities you can write an e-mail to privacy at tis.bz.it
>     <mailto:privacy at tis.bz.it>
>     > ?  ?  <mailto:privacy at tis.bz.it <mailto:privacy at tis.bz.it>> in
>     order to object the processing of
>     > ?  ?  your personal data for the purpose of sending advertising
>     > ?  ?  materials and also to exercise the right to access
>     personal data
>     > ?  ?  and other rights referred to in Section 7 of Decree
>     196/2003. The
>     > ?  ?  data controller is TIS Techno Innovation Alto Adige, Siemens
>     > ?  ?  Street n. 19, Bolzano. You can find the complete
>     information on
>     > ?  ?  the web site www.tis.bz.it <http://www.tis.bz.it>
>     <http://www.tis.bz.it>.
>     >
>     >
>     >
>     >
>     >
>
>
>     --
>     Claudio Martella
>     Free Software & Open Technologies
>     Analyst
>
>     TIS innovation park
>     Via Siemens 19 | Siemensstr. 19
>     39100 Bolzano | 39100 Bozen
>     Tel. +39 0471 068 123 <tel:%2B39%200471%20068%20123>
>     Fax ? +39 0471 068 129 <tel:%2B39%200471%20068%20129>
>     claudio.martella at tis.bz.it <mailto:claudio.martella at tis.bz.it>
>     http://www.tis.bz.it
>
>     Short information regarding use of personal data. According to
>     Section 13 of Italian Legislative Decree no. 196 of 30 June 2003,
>     we inform you that we process your personal data in order to
>     fulfil contractual and fiscal obligations and also to send you
>     information regarding our services and events. Your personal data
>     are processed with and without electronic means and by respecting
>     data subjects' rights, fundamental freedoms and dignity,
>     particularly with regard to confidentiality, personal identity and
>     the right to personal data protection. At any time and without
>     formalities you can write an e-mail to privacy at tis.bz.it
>     <mailto:privacy at tis.bz.it> in order to object the processing of
>     your personal data for the purpose of sending advertising
>     materials and also to exercise the right to access personal data
>     and other rights referred to in Section 7 of Decree 196/2003. The
>     data controller is TIS Techno Innovation Alto Adige, Siemens
>     Street n. 19, Bolzano. You can find the complete information on
>     the web site www.tis.bz.it <http://www.tis.bz.it>.
>
>
>
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
Claudio Martella
Free Software & Open Technologies
Analyst

TIS innovation park
Via Siemens 19 | Siemensstr. 19
39100 Bolzano | 39100 Bozen
Tel. +39 0471 068 123
Fax  +39 0471 068 129
claudio.martella at tis.bz.it http://www.tis.bz.it

Short information regarding use of personal data. According to Section 13 of Italian Legislative Decree no. 196 of 30 June 2003, we inform you that we process your personal data in order to fulfil contractual and fiscal obligations and also to send you information regarding our services and events. Your personal data are processed with and without electronic means and by respecting data subjects' rights, fundamental freedoms and dignity, particularly with regard to confidentiality, personal identity and the right to personal data protection. At any time and without formalities you can write an e-mail to privacy at tis.bz.it in order to object the processing of your personal data for the purpose of sending advertising materials and also to exercise the right to access personal data and other rights referred to in Section 7 of Decree 196/2003. The data controller is TIS Techno Innovation Alto Adige, Siemens Street n. 19, Bolzano. You can find the complete information on the web site www.tis.bz.it.




From qiaomuf at gmail.com  Tue Jul 26 05:07:34 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Tue, 26 Jul 2011 20:07:34 +0800
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
Message-ID: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>

Hello,

My lexer has to rely on some internal status like the following:

DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
};
SQUOTE  :   { double_quoted }? => '\'';
SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';

"double_quoted" is a bool variable declared in @member section. The
generated code will declare it in global scope, which is not thread
safe. I wonder if there is any way to make the lexer thread-safe? For
example declare the variable in xxxLexer_Ctx_struct.

-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From gokul007 at gmail.com  Tue Jul 26 06:51:15 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 26 Jul 2011 21:51:15 +0800
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
In-Reply-To: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
References: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
Message-ID: <CAHMh4-Zn68ozQ1Uhy9u64xrSwqtMpJMgFMykbDiy-gUiOLmB1w@mail.gmail.com>

I had a similar requirement. I maintained a class LexerContext in a Thread
local variable and accessed it and modified it. There might be better
solutions.

Thanks,
Gokul.

On Tue, Jul 26, 2011 at 8:07 PM, Mu Qiao <qiaomuf at gmail.com> wrote:

> Hello,
>
> My lexer has to rely on some internal status like the following:
>
> DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
> };
> SQUOTE  :   { double_quoted }? => '\'';
> SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';
>
> "double_quoted" is a bool variable declared in @member section. The
> generated code will declare it in global scope, which is not thread
> safe. I wonder if there is any way to make the lexer thread-safe? For
> example declare the variable in xxxLexer_Ctx_struct.
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Tue Jul 26 07:04:58 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Tue, 26 Jul 2011 22:04:58 +0800
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
In-Reply-To: <CAHMh4-Zn68ozQ1Uhy9u64xrSwqtMpJMgFMykbDiy-gUiOLmB1w@mail.gmail.com>
References: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
	<CAHMh4-Zn68ozQ1Uhy9u64xrSwqtMpJMgFMykbDiy-gUiOLmB1w@mail.gmail.com>
Message-ID: <CAHMh4-YLuzKO_iyUHxFHumJ=NfZ3TNSf46UP7XkYPaPMny1QHQ@mail.gmail.com>

Jim,
   Have you thought about providing a way to include variables in the
Lexer/Parser structure that gets created? Currently the Lexer/Parser
structure that gets created because of the grammar only stores the function
pointers.

Thanks,
Gokul.

On Tue, Jul 26, 2011 at 9:51 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> I had a similar requirement. I maintained a class LexerContext in a Thread
> local variable and accessed it and modified it. There might be better
> solutions.
>
> Thanks,
> Gokul.
>
>
> On Tue, Jul 26, 2011 at 8:07 PM, Mu Qiao <qiaomuf at gmail.com> wrote:
>
>> Hello,
>>
>> My lexer has to rely on some internal status like the following:
>>
>> DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
>> };
>> SQUOTE  :   { double_quoted }? => '\'';
>> SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';
>>
>> "double_quoted" is a bool variable declared in @member section. The
>> generated code will declare it in global scope, which is not thread
>> safe. I wonder if there is any way to make the lexer thread-safe? For
>> example declare the variable in xxxLexer_Ctx_struct.
>>
>> --
>> Best wishes,
>> Mu Qiao
>> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From asicaddress at gmail.com  Tue Jul 26 08:51:48 2011
From: asicaddress at gmail.com (A Z)
Date: Tue, 26 Jul 2011 10:51:48 -0500
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
In-Reply-To: <CAHMh4-YLuzKO_iyUHxFHumJ=NfZ3TNSf46UP7XkYPaPMny1QHQ@mail.gmail.com>
References: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
	<CAHMh4-Zn68ozQ1Uhy9u64xrSwqtMpJMgFMykbDiy-gUiOLmB1w@mail.gmail.com>
	<CAHMh4-YLuzKO_iyUHxFHumJ=NfZ3TNSf46UP7XkYPaPMny1QHQ@mail.gmail.com>
Message-ID: <CAP86aOdz6fjsTebnXgnz35ddQUDMZC5yFDmVU_26MwzspLJO-A@mail.gmail.com>

I think you can do this using the context block.

//grammar.g
@lexer::context {
  lexerData * pLexerData;
  ANTLR3_UINT32 defaultChannel;
}

//grammar.h
struct grammar_Ctx_struct
{

...
//Function pointers
...

      lexerData * pLexerData;
      ANTLR3_UINT32 defaultChannel;

};


On Tue, Jul 26, 2011 at 9:04 AM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Jim,
>   Have you thought about providing a way to include variables in the
> Lexer/Parser structure that gets created? Currently the Lexer/Parser
> structure that gets created because of the grammar only stores the function
> pointers.
>
> Thanks,
> Gokul.
>
> On Tue, Jul 26, 2011 at 9:51 PM, Gokulakannan Somasundaram <
> gokul007 at gmail.com> wrote:
>
> > I had a similar requirement. I maintained a class LexerContext in a
> Thread
> > local variable and accessed it and modified it. There might be better
> > solutions.
> >
> > Thanks,
> > Gokul.
> >
> >
> > On Tue, Jul 26, 2011 at 8:07 PM, Mu Qiao <qiaomuf at gmail.com> wrote:
> >
> >> Hello,
> >>
> >> My lexer has to rely on some internal status like the following:
> >>
> >> DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
> >> };
> >> SQUOTE  :   { double_quoted }? => '\'';
> >> SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';
> >>
> >> "double_quoted" is a bool variable declared in @member section. The
> >> generated code will declare it in global scope, which is not thread
> >> safe. I wonder if there is any way to make the lexer thread-safe? For
> >> example declare the variable in xxxLexer_Ctx_struct.
> >>
> >> --
> >> Best wishes,
> >> Mu Qiao
> >> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1 57E9
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Tue Jul 26 11:09:43 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jul 2011 11:09:43 -0700
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
In-Reply-To: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
References: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
Message-ID: <b3d237a62d84fb5ae7b3fb3c39a17047@mail.gmail.com>

@lexer::context
{
	ANTLR3_BOOLEAN			double_quoted;		// blah
}

@lexer::apifuncs
{
	lexCtx-> double_quoted	= ANTLR3_FALSE;			// Init
}

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mu Qiao
> Sent: Tuesday, July 26, 2011 5:08 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
>
> Hello,
>
> My lexer has to rely on some internal status like the following:
>
> DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
> };
> SQUOTE  :   { double_quoted }? => '\'';
> SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';
>
> "double_quoted" is a bool variable declared in @member section. The
> generated code will declare it in global scope, which is not thread
> safe. I wonder if there is any way to make the lexer thread-safe? For
> example declare the variable in xxxLexer_Ctx_struct.
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue Jul 26 11:11:09 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 26 Jul 2011 11:11:09 -0700
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
In-Reply-To: <CAHMh4-YLuzKO_iyUHxFHumJ=NfZ3TNSf46UP7XkYPaPMny1QHQ@mail.gmail.com>
References: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
	<CAHMh4-Zn68ozQ1Uhy9u64xrSwqtMpJMgFMykbDiy-gUiOLmB1w@mail.gmail.com>
	<CAHMh4-YLuzKO_iyUHxFHumJ=NfZ3TNSf46UP7XkYPaPMny1QHQ@mail.gmail.com>
Message-ID: <1933daeb4ea8b80f90a390849acc92c8@mail.gmail.com>

Please read the docs and the previous answer to my message. However, I
think that something went wrong with the previous @section documentation
as it seems to be foreshortened. There will be updated docs for 3.4
shortly.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
> Sent: Tuesday, July 26, 2011 7:05 AM
> To: Mu Qiao
> Cc: antlr-interest Interest
> Subject: Re: [antlr-interest] How to make the lexer thread-safe (C
> target)?
>
> Jim,
>    Have you thought about providing a way to include variables in the
> Lexer/Parser structure that gets created? Currently the Lexer/Parser
> structure that gets created because of the grammar only stores the
> function pointers.
>
> Thanks,
> Gokul.
>
> On Tue, Jul 26, 2011 at 9:51 PM, Gokulakannan Somasundaram <
> gokul007 at gmail.com> wrote:
>
> > I had a similar requirement. I maintained a class LexerContext in a
> > Thread local variable and accessed it and modified it. There might be
> > better solutions.
> >
> > Thanks,
> > Gokul.
> >
> >
> > On Tue, Jul 26, 2011 at 8:07 PM, Mu Qiao <qiaomuf at gmail.com> wrote:
> >
> >> Hello,
> >>
> >> My lexer has to rely on some internal status like the following:
> >>
> >> DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
> >> };
> >> SQUOTE  :   { double_quoted }? => '\'';
> >> SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';
> >>
> >> "double_quoted" is a bool variable declared in @member section. The
> >> generated code will declare it in global scope, which is not thread
> >> safe. I wonder if there is any way to make the lexer thread-safe?
> For
> >> example declare the variable in xxxLexer_Ctx_struct.
> >>
> >> --
> >> Best wishes,
> >> Mu Qiao
> >> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1
> 57E9
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gokul007 at gmail.com  Tue Jul 26 20:07:00 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 27 Jul 2011 11:07:00 +0800
Subject: [antlr-interest] How to make the lexer thread-safe (C target)?
In-Reply-To: <1933daeb4ea8b80f90a390849acc92c8@mail.gmail.com>
References: <CAPwgOuTS+LaPbHbx9QXxUS9c-HP+=+ro5LUKUFtnC976B13SXA@mail.gmail.com>
	<CAHMh4-Zn68ozQ1Uhy9u64xrSwqtMpJMgFMykbDiy-gUiOLmB1w@mail.gmail.com>
	<CAHMh4-YLuzKO_iyUHxFHumJ=NfZ3TNSf46UP7XkYPaPMny1QHQ@mail.gmail.com>
	<1933daeb4ea8b80f90a390849acc92c8@mail.gmail.com>
Message-ID: <CAHMh4-Y-ndsUd6R=gn+Nap4iqpTHuZRUUFHP6e4ehJb5kT2_-w@mail.gmail.com>

Thanks Jim.  I missed this @context feature till now. That was what i was
exactly referring to..

Thanks.

On Wed, Jul 27, 2011 at 2:11 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Please read the docs and the previous answer to my message. However, I
> think that something went wrong with the previous @section documentation
> as it seems to be foreshortened. There will be updated docs for 3.4
> shortly.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Gokulakannan Somasundaram
> > Sent: Tuesday, July 26, 2011 7:05 AM
> > To: Mu Qiao
> > Cc: antlr-interest Interest
> > Subject: Re: [antlr-interest] How to make the lexer thread-safe (C
> > target)?
> >
> > Jim,
> >    Have you thought about providing a way to include variables in the
> > Lexer/Parser structure that gets created? Currently the Lexer/Parser
> > structure that gets created because of the grammar only stores the
> > function pointers.
> >
> > Thanks,
> > Gokul.
> >
> > On Tue, Jul 26, 2011 at 9:51 PM, Gokulakannan Somasundaram <
> > gokul007 at gmail.com> wrote:
> >
> > > I had a similar requirement. I maintained a class LexerContext in a
> > > Thread local variable and accessed it and modified it. There might be
> > > better solutions.
> > >
> > > Thanks,
> > > Gokul.
> > >
> > >
> > > On Tue, Jul 26, 2011 at 8:07 PM, Mu Qiao <qiaomuf at gmail.com> wrote:
> > >
> > >> Hello,
> > >>
> > >> My lexer has to rely on some internal status like the following:
> > >>
> > >> DQUOTE  :   '"' { if(LA(-1) != '\\') double_quoted = !double_quoted;
> > >> };
> > >> SQUOTE  :   { double_quoted }? => '\'';
> > >> SINGLE_QUOTED_STRING_TOKEN  :   { !double_quoted }? => '\'' .* '\'';
> > >>
> > >> "double_quoted" is a bool variable declared in @member section. The
> > >> generated code will declare it in global scope, which is not thread
> > >> safe. I wonder if there is any way to make the lexer thread-safe?
> > For
> > >> example declare the variable in xxxLexer_Ctx_struct.
> > >>
> > >> --
> > >> Best wishes,
> > >> Mu Qiao
> > >> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5  3ACC 30B3 0DE4 17B1
> > 57E9
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >>
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Tue Jul 26 23:45:38 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 27 Jul 2011 14:45:38 +0800
Subject: [antlr-interest] Is it possible to do rewriting for lexer?
In-Reply-To: <CAOrgODYQUdGbrPGeVtaNuaW67h255XiENqMinMSH-xSUJK6AuA@mail.gmail.com>
References: <CAHMh4-ZajTsKW=NXbS-zCVk-A82sYUnaF-5ZacpbyivyB-vRuQ@mail.gmail.com>
	<CAHMh4-ZRu=BTsYzO411YRpPxR4Ve0d48zqwxeAQN-1k43yf0wA@mail.gmail.com>
	<20110726071626.2200C532015C6@bmail04.one.com>
	<CAOrgODYQUdGbrPGeVtaNuaW67h255XiENqMinMSH-xSUJK6AuA@mail.gmail.com>
Message-ID: <CAHMh4-YhZ9QzqVMyD0k9jT+WCMVY554UjzOC_q7qdzPRe92DbA@mail.gmail.com>

Hi Qiao,
    If you feel the GETTEXT() is costly, the easiest way is to write a
parser rule, which receives this as a token and rewrites and returns the
desired. Instead of matching the lexer token in elsewhere in your parser
grammar, try to match the new parser rule.

For example:
Lexer Grammar:
SINGLE_QUOTED_STRING :  SQUOTE (~SQUOTE)* SQUOTE ;

Parser Grammar:
single_quoted_string[std::string& result]  : SINGLE_QUOTED_STRING
{
   pANTLR3_COMMON_TOKEN token = $SINGLE_QUOTED_STRING;
   ANTLR3_MARKER start = token->getStartIndex(token);
   ANTLR3_MARKER end = token->getStopIndex(token);
   result.assign( (char*) start, stop-start+1 ); //create it with your
requirements.

};

Thanks,
Gokul.

From gokul007 at gmail.com  Tue Jul 26 23:51:26 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 27 Jul 2011 14:51:26 +0800
Subject: [antlr-interest] "code too large" / can't split AST output into
 smaller files
In-Reply-To: <926571.71067.qm@web30004.mail.mud.yahoo.com>
References: <5ADD1AE9-8522-44FD-BE2F-704C49F54E27@winnall.ch>
	<04fa01cb6700$9cc099c0$d641cd40$@temporal-wave.com>
	<AANLkTimBbDwE46QQgcKN66cSO7RxfsD-UsVuU1d0P4ZP@mail.gmail.com>
	<AANLkTikA4rFMG58PVrY3=YSQA=F9EBA58AfXtTsg4pR4@mail.gmail.com>
	<87wrpqz137.fsf@mid.deneb.enyo.de>
	<AANLkTi=EQgwX81ueoXN648=PHOv+UYaFFzFjFe0Rasq1@mail.gmail.com>
	<926571.71067.qm@web30004.mail.mud.yahoo.com>
Message-ID: <CAHMh4-a_x3zaHLToBbQ838nk+tD9b0b5AFkeUV0+C2Hbbeyx-Q@mail.gmail.com>

I found the awk script. Just run this on the java file. It will create a new
java file, which won't cause the "code too large bug".  It was working in
ANTLR 3.2, So i think it should work here also.

Gokul.

On Wed, Oct 27, 2010 at 12:38 AM, Red Rackham <redrackem at yahoo.com> wrote:

> I'm having same issue.  Have a big grammar (>900 tokens, >4K lines of
> parser
> grammar) it's translated from an older source and very messy &
> interconnected
> since it was generated by conversion script.  Was able to get ANTLR to
> create
> .java files, but the java files don't compile ("code too large").  With
> python output, the lexer works up to a point but mis-identifies a token and
> I
> haven't figured out why... I wanted to debug in ANTLRWorks but I can't
> since I
> can't get java to compile.  Catch 22?
>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: postprocess.awk
Type: application/octet-stream
Size: 4030 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110727/cc56fe34/attachment.obj 

From samuel.lampa at scilifelab.uu.se  Wed Jul 27 02:35:47 2011
From: samuel.lampa at scilifelab.uu.se (Samuel Lampa)
Date: Wed, 27 Jul 2011 11:35:47 +0200
Subject: [antlr-interest] Cannot match strings combining terminals w/o
	spaces between
Message-ID: <4E2FDBF3.4050309@scilifelab.uu.se>

I got problems matching the string:
"history":

... with the following ANTLR code (work in progress, really):
(STRING)':'

Where I have the STRING terminal defined as:
STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
     ;

It works if I add the ending colon in the STRING definition itself, like 
so (and then remove it from the parent rule):
STRING    :    '"'('a'..'z'|'A'..'Z')+'"'':'
     ;

... but this of course makes for a less general string definition :/ ... 
Any ideas how I should go about this?

Best regards
// Samuel


Addendum: The full input string and EBNF code is as follows:

=== Input string ===

     sam_to_bam.py
       --input1=$source.input1
       --dbkey=${input1.metadata.dbkey}
       #if $source.index_source == "history":
         --ref_file=$source.ref_file
       #else
         --ref_file="None"
       #end if
       --output1=$output1
       --index_dir=${GALAXY_DATA_INDEX_DIR}


=== ANTLR code ===

grammar GalaxyToolConfig;
options {output=AST;}

command    :    binary param* ifstatement '\n' text? ELSE text? ENDIF text?
     ;

binary     :    WORD
     ;

param     :    '--' PARAMNAME '=' ( VARIABLE | STRING )
     ;

ifstatement
     :    IF ( STRING | VARIABLE ) EQ ( (STRING)':' | (VARIABLE)':' )
     ;

text     :    WORD WORD*
     ;

IF    :    '#if'
     ;

ELSE    :    '#else'
     ;

ENDIF     :    '#end if'
     ;

EQ     :    '=='
     ;

COLON     :    ':'
     ;

PARAMNAME:    ('a'..'z')('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')*
     ;

STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
     ;

VARIABLE
     :    '$''{'?PARAMNAME'}'?
     ;


// CHAR    :    
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.'|'$'|'{'|'}'|'='|'"'|'-'|':'|';')
//     ;


WORD    :    (~(' '|'\t'|'\r'|'\n'))+
     ;

WS  :   ( ' '
         | '\t'
         | '\r'
         | '\n'
         ) {$channel=HIDDEN;}
     ;




-- 
System Expert / Bioinformatician
SNIC-UPPMAX / SciLifeLab Uppsala
Uppsala University, Sweden
--------------------------------------
E-mail: samuel.lampa at scilifelab.uu.se
Phone: +46 (0)18 - 471 1060
WWW: http://www.uppmax.uu.se
Uppnex: https://www.uppnex.uu.se


From bkiers at gmail.com  Wed Jul 27 03:13:46 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 12:13:46 +0200
Subject: [antlr-interest] Cannot match strings combining terminals w/o
 spaces between
In-Reply-To: <4E2FDBF3.4050309@scilifelab.uu.se>
References: <4E2FDBF3.4050309@scilifelab.uu.se>
Message-ID: <CAOrgODYUFK1gGB_j97XcOZTHwaStN80sg8KShE-nvuwKcS0cxg@mail.gmail.com>

Hi Samuel,

Your input:

    "history":

is not tokenized as a STRING but as a WORD. You need to tell exclude the
double quote in your WORD rule.

Also, you put '\n' on the HIDDEN channel, yet you use it in your parser rule
'command'. This will cause the rule to never match properly: you need to
remove the '\n' from the 'command' rule, or don't put '\n' it on the HIDDEN
channel.

Regards,

Bart.


On Wed, Jul 27, 2011 at 11:35 AM, Samuel Lampa <
samuel.lampa at scilifelab.uu.se> wrote:

> I got problems matching the string:
> "history":
>
> ... with the following ANTLR code (work in progress, really):
> (STRING)':'
>
> Where I have the STRING terminal defined as:
> STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
>     ;
>
> It works if I add the ending colon in the STRING definition itself, like
> so (and then remove it from the parent rule):
> STRING    :    '"'('a'..'z'|'A'..'Z')+'"'':'
>     ;
>
> ... but this of course makes for a less general string definition :/ ...
> Any ideas how I should go about this?
>
> Best regards
> // Samuel
>
>
> Addendum: The full input string and EBNF code is as follows:
>
> === Input string ===
>
>     sam_to_bam.py
>       --input1=$source.input1
>       --dbkey=${input1.metadata.dbkey}
>       #if $source.index_source == "history":
>         --ref_file=$source.ref_file
>       #else
>         --ref_file="None"
>       #end if
>       --output1=$output1
>       --index_dir=${GALAXY_DATA_INDEX_DIR}
>
>
> === ANTLR code ===
>
> grammar GalaxyToolConfig;
> options {output=AST;}
>
> command    :    binary param* ifstatement '\n' text? ELSE text? ENDIF text?
>     ;
>
> binary     :    WORD
>     ;
>
> param     :    '--' PARAMNAME '=' ( VARIABLE | STRING )
>     ;
>
> ifstatement
>     :    IF ( STRING | VARIABLE ) EQ ( (STRING)':' | (VARIABLE)':' )
>     ;
>
> text     :    WORD WORD*
>     ;
>
> IF    :    '#if'
>     ;
>
> ELSE    :    '#else'
>     ;
>
> ENDIF     :    '#end if'
>     ;
>
> EQ     :    '=='
>     ;
>
> COLON     :    ':'
>     ;
>
> PARAMNAME:    ('a'..'z')('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')*
>     ;
>
> STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
>     ;
>
> VARIABLE
>     :    '$''{'?PARAMNAME'}'?
>     ;
>
>
> // CHAR    :
> ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.'|'$'|'{'|'}'|'='|'"'|'-'|':'|';')
> //     ;
>
>
> WORD    :    (~(' '|'\t'|'\r'|'\n'))+
>     ;
>
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
>
>
>
>
> --
> System Expert / Bioinformatician
> SNIC-UPPMAX / SciLifeLab Uppsala
> Uppsala University, Sweden
> --------------------------------------
> E-mail: samuel.lampa at scilifelab.uu.se
> Phone: +46 (0)18 - 471 1060
> WWW: http://www.uppmax.uu.se
> Uppnex: https://www.uppnex.uu.se
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gokul007 at gmail.com  Wed Jul 27 06:52:12 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Wed, 27 Jul 2011 21:52:12 +0800
Subject: [antlr-interest] Matching Dollar quoted strings
Message-ID: <CAHMh4-ZWqxd51m5BpXUe0KiuHOsM=0xjt+Ks_jrmyUHBuddwww@mail.gmail.com>

Hi,
   I want to match patterns like

   $123$..anything here..$123$

   Basically it is a way to mention strings between a delimiter. The
delimiter is not fixed. Can someone help me on how to match these type of
dollar quoted identifiers?

Thanks,
Gokul.

From samuel.lampa at scilifelab.uu.se  Wed Jul 27 08:56:50 2011
From: samuel.lampa at scilifelab.uu.se (Samuel Lampa)
Date: Wed, 27 Jul 2011 17:56:50 +0200
Subject: [antlr-interest] Cannot match strings combining terminals w/o
 spaces between
In-Reply-To: <CAOrgODYUFK1gGB_j97XcOZTHwaStN80sg8KShE-nvuwKcS0cxg@mail.gmail.com>
References: <4E2FDBF3.4050309@scilifelab.uu.se>
	<CAOrgODYUFK1gGB_j97XcOZTHwaStN80sg8KShE-nvuwKcS0cxg@mail.gmail.com>
Message-ID: <4E303542.6010400@scilifelab.uu.se>


On 07/27/2011 12:13 PM, Bart Kiers wrote:
> Your input:
>
>     "history":
>
> is not tokenized as a STRING but as a WORD. You need to tell exclude 
> the double quote in your WORD rule.
>
> Also, you put '\n' on the HIDDEN channel, yet you use it in your 
> parser rule 'command'. This will cause the rule to never match 
> properly: you need to remove the '\n' from the 'command' rule, or 
> don't put '\n' it on the HIDDEN channel.
>

Right, thanks!

Seemingly I had a few more similar troubles also, but by quite some 
restructuring in line with your hints, I finally got it working with the 
code below.

Cheers
// Samuel

=== The working code ===

grammar GalaxyToolConfig;
options {output=AST;}

command    :    binary (ifstatement param+ (ELSE param+)? ENDIF | param)*
     ;

binary     :    WORD
     ;

ifstatement
     :    IF ( STRING | VARIABLE ) EQTEST ( STRING | VARIABLE )(COLON)
     ;

param     :    (DBLDASH)(WORD)*(EQ)(VARIABLE|STRING)
     ;

text     :    WORD+
     ;

IF    :    '#if'
     ;

ELSE    :    '#else'
     ;

ENDIF     :    '#end if'
     ;

EQTEST     :    '=='
     ;


DBLDASH    :    '--'
     ;

EQ    :    '='
     ;

COLON     :    ':'
     ;


STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
     ;

VARIABLE
     :    '$'('{')?WORD('}')?
     ;

WORD    :    ('a'..'z'|'A'..'Z')('a'..'z'|'A'..'Z'|'.'|'_'|'0'..'9')*
     ;

WS  :   ( ' '
         | '\t'
         | '\r'
         | '\n'
         ) {$channel=HIDDEN;}
     ;






> Regards,
>
> Bart.
>
>
> On Wed, Jul 27, 2011 at 11:35 AM, Samuel Lampa 
> <samuel.lampa at scilifelab.uu.se <mailto:samuel.lampa at scilifelab.uu.se>> 
> wrote:
>
>     I got problems matching the string:
>     "history":
>
>     ... with the following ANTLR code (work in progress, really):
>     (STRING)':'
>
>     Where I have the STRING terminal defined as:
>     STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
>         ;
>
>     It works if I add the ending colon in the STRING definition
>     itself, like
>     so (and then remove it from the parent rule):
>     STRING    :    '"'('a'..'z'|'A'..'Z')+'"'':'
>         ;
>
>     ... but this of course makes for a less general string definition
>     :/ ...
>     Any ideas how I should go about this?
>
>     Best regards
>     // Samuel
>
>
>     Addendum: The full input string and EBNF code is as follows:
>
>     === Input string ===
>
>         sam_to_bam.py
>           --input1=$source.input1
>           --dbkey=${input1.metadata.dbkey}
>           #if $source.index_source == "history":
>             --ref_file=$source.ref_file
>           #else
>             --ref_file="None"
>           #end if
>           --output1=$output1
>           --index_dir=${GALAXY_DATA_INDEX_DIR}
>
>
>     === ANTLR code ===
>
>     grammar GalaxyToolConfig;
>     options {output=AST;}
>
>     command    :    binary param* ifstatement '\n' text? ELSE text?
>     ENDIF text?
>         ;
>
>     binary     :    WORD
>         ;
>
>     param     :    '--' PARAMNAME '=' ( VARIABLE | STRING )
>         ;
>
>     ifstatement
>         :    IF ( STRING | VARIABLE ) EQ ( (STRING)':' | (VARIABLE)':' )
>         ;
>
>     text     :    WORD WORD*
>         ;
>
>     IF    :    '#if'
>         ;
>
>     ELSE    :    '#else'
>         ;
>
>     ENDIF     :    '#end if'
>         ;
>
>     EQ     :    '=='
>         ;
>
>     COLON     :    ':'
>         ;
>
>     PARAMNAME:    ('a'..'z')('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'_')*
>         ;
>
>     STRING    :    '"'('a'..'z'|'A'..'Z')+'"'
>         ;
>
>     VARIABLE
>         :    '$''{'?PARAMNAME'}'?
>         ;
>
>
>     // CHAR    :
>     ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.'|'$'|'{'|'}'|'='|'"'|'-'|':'|';')
>     //     ;
>
>
>     WORD    :    (~(' '|'\t'|'\r'|'\n'))+
>         ;
>
>     WS  :   ( ' '
>             | '\t'
>             | '\r'
>             | '\n'
>             ) {$channel=HIDDEN;}
>         ;
>
>
>
>
>     -- 
>     System Expert / Bioinformatician
>     SNIC-UPPMAX / SciLifeLab Uppsala
>     Uppsala University, Sweden
>     --------------------------------------
>     E-mail: samuel.lampa at scilifelab.uu.se
>     <mailto:samuel.lampa at scilifelab.uu.se>
>     Phone: +46 (0)18 - 471 1060 <tel:%2B46%20%280%2918%20-%20471%201060>
>     WWW: http://www.uppmax.uu.se
>     Uppnex: https://www.uppnex.uu.se
>
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


-- 
System Expert / Bioinformatician
SNIC-UPPMAX / SciLifeLab Uppsala
Uppsala University, Sweden
--------------------------------------
E-mail: samuel.lampa at scilifelab.uu.se
Phone: +46 (0)18 - 471 1060
WWW: http://www.uppmax.uu.se
Uppnex: https://www.uppnex.uu.se


From lukas.glowania at rub.de  Wed Jul 27 10:39:56 2011
From: lukas.glowania at rub.de (Lukas Glowania)
Date: 27 Jul 2011 19:39:56 +0200
Subject: [antlr-interest] Whitespace in identifiers
Message-ID: <4E304D6C.7010103@rub.de>

Hi,

i want identifiers that can contain whitespace.

|grammar WhitespaceInSymbols;

premise :   ( options {greedy=false;} : 'IF' )  id=ID{
System.out.println($id.text);
};

ID  :   ('a'..'z'|'A'..'Z')+ (' '('a'..'z'|'A'..'Z')+)*
;

WS  :   ' '+ {skip();}
;
|

When i test this with "IF statement analyzed" i get a 
MissingTokenException and the output "IF statement analyzed".
I thought, that by using greedy=false i could tell ANTLR to exit afer 
'IF' and take it as a token. But instead the IF is part of the ID. Is 
there a way to achieve my goal? I already tried some variations of the 
greed=false-option, but without success.
Thanks in advance!



From rbellamy at pteradigm.com  Wed Jul 27 11:48:35 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 11:48:35 -0700
Subject: [antlr-interest] Quoted String Literal - confused by greed=false
	behavior.
Message-ID: <4E305D83.7020005@pteradigm.com>

I've got a lexer rule that should be gobbling everything after the 
double quote '"' except for the last double quote - I basically stole 
the rule from a post from Jim Idle 
(http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).

I've also tried other variations on the same rule, and I'm a bit 
confused as it seems the {greedy=false;} option is being ignored.

Any help is appreciated

-----------------------------------------------
INPUT: @"(FOO="")"
-----------------------------------------------

lexer grammar Lexer

options
{
     language=CSharp3;
     TokenLabelType=CommonToken;
}

DQUOTE : '"';

STRING_LITERAL
     : DQUOTE (options { greedy = false; }
          : (
             (
                 {input.LA(1) == '"' && input.LA(2) == '"'}? DQUOTE DQUOTE
                 | ~DQUOTE
             )*
         )
     )
     DQUOTE
     ;
-----------------------------------------------

LEXER TRACE (excerpt):
enter STRING_LITERAL " line=1:7
enter DQUOTE " line=1:7
exit DQUOTE ) line=1:8
enter DQUOTE ? line=1:9
exit DQUOTE ? line=1:9
exit STRING_LITERAL ? line=1:9
line 1:10 mismatched character '<EOF>' expecting '"'


From bkiers at gmail.com  Wed Jul 27 12:41:43 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 21:41:43 +0200
Subject: [antlr-interest] Whitespace in identifiers
In-Reply-To: <4E304D6C.7010103@rub.de>
References: <4E304D6C.7010103@rub.de>
Message-ID: <CAOrgODZd6snaEexgmVn9i7YNmqbNkpov6Gse1rMiYpGQ+bbxVA@mail.gmail.com>

FYI:
http://stackoverflow.com/questions/6847971/antlr-identifier-with-whitespace


On Wed, Jul 27, 2011 at 7:39 PM, Lukas Glowania <lukas.glowania at rub.de>wrote:

> Hi,
>
> i want identifiers that can contain whitespace.
>
> |grammar WhitespaceInSymbols;
>
> premise :   ( options {greedy=false;} : 'IF' )  id=ID{
> System.out.println($id.text);
> };
>
> ID  :   ('a'..'z'|'A'..'Z')+ (' '('a'..'z'|'A'..'Z')+)*
> ;
>
> WS  :   ' '+ {skip();}
> ;
> |
>
> When i test this with "IF statement analyzed" i get a
> MissingTokenException and the output "IF statement analyzed".
> I thought, that by using greedy=false i could tell ANTLR to exit afer
> 'IF' and take it as a token. But instead the IF is part of the ID. Is
> there a way to achieve my goal? I already tried some variations of the
> greed=false-option, but without success.
> Thanks in advance!
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Wed Jul 27 12:54:03 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 27 Jul 2011 14:54:03 -0500
Subject: [antlr-interest] Quoted String Literal - confused by
	greed=false behavior.
Message-ID: <008901cc4c96$f040dd90$d0c298b0$@pixelminegames.com>

You're reading the greedy option in reverse. :) I'd write the rule this way:

STRING_LITERAL
	:	'"'
		(	options{greedy=true;}
		:	'""'
		|	~'"'
		)*
		'"'
	;
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
Sent: Wednesday, July 27, 2011 1:49 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Quoted String Literal - confused by greed=false
behavior.

I've got a lexer rule that should be gobbling everything after the double
quote '"' except for the last double quote - I basically stole the rule from
a post from Jim Idle
(http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).

I've also tried other variations on the same rule, and I'm a bit confused as
it seems the {greedy=false;} option is being ignored.

Any help is appreciated

-----------------------------------------------
INPUT: @"(FOO="")"
-----------------------------------------------

lexer grammar Lexer

options
{
     language=CSharp3;
     TokenLabelType=CommonToken;
}

DQUOTE : '"';

STRING_LITERAL
     : DQUOTE (options { greedy = false; }
          : (
             (
                 {input.LA(1) == '"' && input.LA(2) == '"'}? DQUOTE DQUOTE
                 | ~DQUOTE
             )*
         )
     )
     DQUOTE
     ;
-----------------------------------------------

LEXER TRACE (excerpt):
enter STRING_LITERAL " line=1:7
enter DQUOTE " line=1:7
exit DQUOTE ) line=1:8
enter DQUOTE ? line=1:9
exit DQUOTE ? line=1:9
exit STRING_LITERAL ? line=1:9
line 1:10 mismatched character '<EOF>' expecting '"'


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bkiers at gmail.com  Wed Jul 27 12:57:28 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 21:57:28 +0200
Subject: [antlr-interest] Quoted String Literal - confused by
	greed=false behavior.
In-Reply-To: <008901cc4c96$f040dd90$d0c298b0$@pixelminegames.com>
References: <008901cc4c96$f040dd90$d0c298b0$@pixelminegames.com>
Message-ID: <CAOrgODbqx4h51uzwuMeukXqWAd-3o53X3+KCfQQvEykzzBhsRg@mail.gmail.com>

And by default, greedy=true (except with .* and .+), so in this case, one
could simply write

STRING_LITERAL
  :  '"' ('""' | ~'"')* '"'
  ;


AFAIK.

Regards,

Bart.


On Wed, Jul 27, 2011 at 9:54 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> You're reading the greedy option in reverse. :) I'd write the rule this
> way:
>
> STRING_LITERAL
>        :       '"'
>                (       options{greedy=true;}
>                :       '""'
>                |       ~'"'
>                )*
>                '"'
>        ;
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
> Sent: Wednesday, July 27, 2011 1:49 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Quoted String Literal - confused by greed=false
> behavior.
>
> I've got a lexer rule that should be gobbling everything after the double
> quote '"' except for the last double quote - I basically stole the rule
> from
> a post from Jim Idle
> (http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).
>
> I've also tried other variations on the same rule, and I'm a bit confused
> as
> it seems the {greedy=false;} option is being ignored.
>
> Any help is appreciated
>
> -----------------------------------------------
> INPUT: @"(FOO="")"
> -----------------------------------------------
>
> lexer grammar Lexer
>
> options
> {
>     language=CSharp3;
>     TokenLabelType=CommonToken;
> }
>
> DQUOTE : '"';
>
> STRING_LITERAL
>     : DQUOTE (options { greedy = false; }
>          : (
>             (
>                 {input.LA(1) == '"' && input.LA(2) == '"'}? DQUOTE DQUOTE
>                 | ~DQUOTE
>             )*
>         )
>     )
>     DQUOTE
>     ;
> -----------------------------------------------
>
> LEXER TRACE (excerpt):
> enter STRING_LITERAL " line=1:7
> enter DQUOTE " line=1:7
> exit DQUOTE ) line=1:8
> enter DQUOTE ? line=1:9
> exit DQUOTE ? line=1:9
> exit STRING_LITERAL ? line=1:9
> line 1:10 mismatched character '<EOF>' expecting '"'
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rbellamy at pteradigm.com  Wed Jul 27 13:06:40 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 13:06:40 -0700
Subject: [antlr-interest] Quoted String Literal - confused by
 greed=false behavior.
In-Reply-To: <CAOrgODbqx4h51uzwuMeukXqWAd-3o53X3+KCfQQvEykzzBhsRg@mail.gmail.com>
References: <008901cc4c96$f040dd90$d0c298b0$@pixelminegames.com>
	<CAOrgODbqx4h51uzwuMeukXqWAd-3o53X3+KCfQQvEykzzBhsRg@mail.gmail.com>
Message-ID: <4E306FD0.30408@pteradigm.com>

Thanks to both of you for your help.

Clearly I understated things when I said I was confused.

1. I was under the impression that greedy=true was the default, in every 
case. For instance, in "The Definitive ANTLR Reference" it mentions the 
lexer rule ML_COMMENT:

ML_COMMENT
     : '/*' ( options { greedy=false; } : . )* '*/'
     ;

Which is definitely using the .* catch-all.

2. I've tried both variations, and am still getting an exception: 
mismatched character '<EOF>' expecting '"'


On 7/27/2011 12:57 PM, Bart Kiers wrote:
> And by default, greedy=true (except with .* and .+), so in this case, one
> could simply write
>
> STRING_LITERAL
>    :  '"' ('""' | ~'"')* '"'
>    ;
>
>
> AFAIK.
>
> Regards,
>
> Bart.
>
>
> On Wed, Jul 27, 2011 at 9:54 PM, Sam Harwell<sharwell at pixelminegames.com>wrote:
>
>> You're reading the greedy option in reverse. :) I'd write the rule this
>> way:
>>
>> STRING_LITERAL
>>         :       '"'
>>                 (       options{greedy=true;}
>>                 :       '""'
>>                 |       ~'"'
>>                 )*
>>                 '"'
>>         ;
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
>> Sent: Wednesday, July 27, 2011 1:49 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Quoted String Literal - confused by greed=false
>> behavior.
>>
>> I've got a lexer rule that should be gobbling everything after the double
>> quote '"' except for the last double quote - I basically stole the rule
>> from
>> a post from Jim Idle
>> (http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).
>>
>> I've also tried other variations on the same rule, and I'm a bit confused
>> as
>> it seems the {greedy=false;} option is being ignored.
>>
>> Any help is appreciated
>>
>> -----------------------------------------------
>> INPUT: @"(FOO="")"
>> -----------------------------------------------
>>
>> lexer grammar Lexer
>>
>> options
>> {
>>      language=CSharp3;
>>      TokenLabelType=CommonToken;
>> }
>>
>> DQUOTE : '"';
>>
>> STRING_LITERAL
>>      : DQUOTE (options { greedy = false; }
>>           : (
>>              (
>>                  {input.LA(1) == '"'&&  input.LA(2) == '"'}? DQUOTE DQUOTE
>>                  | ~DQUOTE
>>              )*
>>          )
>>      )
>>      DQUOTE
>>      ;
>> -----------------------------------------------
>>
>> LEXER TRACE (excerpt):
>> enter STRING_LITERAL " line=1:7
>> enter DQUOTE " line=1:7
>> exit DQUOTE ) line=1:8
>> enter DQUOTE ? line=1:9
>> exit DQUOTE ? line=1:9
>> exit STRING_LITERAL ? line=1:9
>> line 1:10 mismatched character '<EOF>' expecting '"'
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Jul 27 13:11:38 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Jul 2011 13:11:38 -0700
Subject: [antlr-interest] Quoted String Literal - confused by
	greed=false behavior.
In-Reply-To: <4E305D83.7020005@pteradigm.com>
References: <4E305D83.7020005@pteradigm.com>
Message-ID: <b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>

The rule you show below is not what I posted. Remove the DQUOTE token and
use the literal '"'. This has nothing to do with the greedy option.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of G. Richard Bellamy
> Sent: Wednesday, July 27, 2011 11:49 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Quoted String Literal - confused by
> greed=false behavior.
>
> I've got a lexer rule that should be gobbling everything after the
> double quote '"' except for the last double quote - I basically stole
> the rule from a post from Jim Idle
> (http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).
>
> I've also tried other variations on the same rule, and I'm a bit
> confused as it seems the {greedy=false;} option is being ignored.
>
> Any help is appreciated
>
> -----------------------------------------------
> INPUT: @"(FOO="")"
> -----------------------------------------------
>
> lexer grammar Lexer
>
> options
> {
>      language=CSharp3;
>      TokenLabelType=CommonToken;
> }
>
> DQUOTE : '"';
>
> STRING_LITERAL
>      : DQUOTE (options { greedy = false; }
>           : (
>              (
>                  {input.LA(1) == '"' && input.LA(2) == '"'}? DQUOTE
> DQUOTE
>                  | ~DQUOTE
>              )*
>          )
>      )
>      DQUOTE
>      ;
> -----------------------------------------------
>
> LEXER TRACE (excerpt):
> enter STRING_LITERAL " line=1:7
> enter DQUOTE " line=1:7
> exit DQUOTE ) line=1:8
> enter DQUOTE ? line=1:9
> exit DQUOTE ? line=1:9
> exit STRING_LITERAL ? line=1:9
> line 1:10 mismatched character '<EOF>' expecting '"'
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From rbellamy at pteradigm.com  Wed Jul 27 13:19:40 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 13:19:40 -0700
Subject: [antlr-interest] Quoted String Literal - confused by
 greed=false behavior.
In-Reply-To: <b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
References: <4E305D83.7020005@pteradigm.com>
	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
Message-ID: <4E3072DC.6090903@pteradigm.com>

So, being the confused monkey that I am - Could you help me understand? 
If it doesn't have to do with the greedy option, what DOES it have to do 
with? I get the same behavior whether using the DQUOTE token or the '"' 
string literal.

I should mention that I'm using the 3.3.3.8388 CSharp distribution found 
here:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

-rb

On 7/27/2011 1:11 PM, Jim Idle wrote:
> The rule you show below is not what I posted. Remove the DQUOTE token and
> use the literal '"'. This has nothing to do with the greedy option.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of G. Richard Bellamy
>> Sent: Wednesday, July 27, 2011 11:49 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Quoted String Literal - confused by
>> greed=false behavior.
>>
>> I've got a lexer rule that should be gobbling everything after the
>> double quote '"' except for the last double quote - I basically stole
>> the rule from a post from Jim Idle
>> (http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).
>>
>> I've also tried other variations on the same rule, and I'm a bit
>> confused as it seems the {greedy=false;} option is being ignored.
>>
>> Any help is appreciated
>>
>> -----------------------------------------------
>> INPUT: @"(FOO="")"
>> -----------------------------------------------
>>
>> lexer grammar Lexer
>>
>> options
>> {
>>       language=CSharp3;
>>       TokenLabelType=CommonToken;
>> }
>>
>> DQUOTE : '"';
>>
>> STRING_LITERAL
>>       : DQUOTE (options { greedy = false; }
>>            : (
>>               (
>>                   {input.LA(1) == '"'&&  input.LA(2) == '"'}? DQUOTE
>> DQUOTE
>>                   | ~DQUOTE
>>               )*
>>           )
>>       )
>>       DQUOTE
>>       ;
>> -----------------------------------------------
>>
>> LEXER TRACE (excerpt):
>> enter STRING_LITERAL " line=1:7
>> enter DQUOTE " line=1:7
>> exit DQUOTE ) line=1:8
>> enter DQUOTE ? line=1:9
>> exit DQUOTE ? line=1:9
>> exit STRING_LITERAL ? line=1:9
>> line 1:10 mismatched character '<EOF>' expecting '"'
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From bkiers at gmail.com  Wed Jul 27 13:19:58 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 22:19:58 +0200
Subject: [antlr-interest] Quoted String Literal - confused by
	greed=false behavior.
In-Reply-To: <4E306FD0.30408@pteradigm.com>
References: <008901cc4c96$f040dd90$d0c298b0$@pixelminegames.com>
	<CAOrgODbqx4h51uzwuMeukXqWAd-3o53X3+KCfQQvEykzzBhsRg@mail.gmail.com>
	<4E306FD0.30408@pteradigm.com>
Message-ID: <CAOrgODZmZeZjvMz36KVm-VaPqQVyWPXveAohoxRhXp0oRnqz9Q@mail.gmail.com>

On Wed, Jul 27, 2011 at 10:06 PM, G. Richard Bellamy <rbellamy at pteradigm.com
> wrote:

> Thanks to both of you for your help.
>
> Clearly I understated things when I said I was confused.
>
> 1. I was under the impression that greedy=true was the default, in every
> case. For instance, in "The Definitive ANTLR Reference"...


By default, * and + are greedy, _except_ when preceded by the . (DOT).
See: The Definitive ANTLR reference, Ch 4, Extended BNF Subrules, page 86.

But as Jim mentioned, this is not the issue here. The rule:

STRING : '"' ('""' | ~'"')* '"';


matches input like:

"a b "" c"


just fine (as a single STRING).

Regards,

Bart.

From sharwell at pixelminegames.com  Wed Jul 27 13:25:03 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 27 Jul 2011 15:25:03 -0500
Subject: [antlr-interest] Quoted String Literal - confused by
	greed=false behavior.
In-Reply-To: <4E3072DC.6090903@pteradigm.com>
References: <4E305D83.7020005@pteradigm.com>	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
Message-ID: <008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>

You have the following rule in your lexer. Remove it:

DQUOTE : '"';

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
Sent: Wednesday, July 27, 2011 3:20 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Quoted String Literal - confused by
greed=false behavior.

So, being the confused monkey that I am - Could you help me understand? 
If it doesn't have to do with the greedy option, what DOES it have to do
with? I get the same behavior whether using the DQUOTE token or the '"' 
string literal.

I should mention that I'm using the 3.3.3.8388 CSharp distribution found
here:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

-rb

On 7/27/2011 1:11 PM, Jim Idle wrote:
> The rule you show below is not what I posted. Remove the DQUOTE token 
> and use the literal '"'. This has nothing to do with the greedy option.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest- 
>> bounces at antlr.org] On Behalf Of G. Richard Bellamy
>> Sent: Wednesday, July 27, 2011 11:49 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Quoted String Literal - confused by 
>> greed=false behavior.
>>
>> I've got a lexer rule that should be gobbling everything after the 
>> double quote '"' except for the last double quote - I basically stole 
>> the rule from a post from Jim Idle 
>> (http://www.antlr.org/pipermail/antlr-interest/2010-March/038051.html).
>>
>> I've also tried other variations on the same rule, and I'm a bit 
>> confused as it seems the {greedy=false;} option is being ignored.
>>
>> Any help is appreciated
>>
>> -----------------------------------------------
>> INPUT: @"(FOO="")"
>> -----------------------------------------------
>>
>> lexer grammar Lexer
>>
>> options
>> {
>>       language=CSharp3;
>>       TokenLabelType=CommonToken;
>> }
>>
>> DQUOTE : '"';
>>
>> STRING_LITERAL
>>       : DQUOTE (options { greedy = false; }
>>            : (
>>               (
>>                   {input.LA(1) == '"'&&  input.LA(2) == '"'}? DQUOTE 
>> DQUOTE
>>                   | ~DQUOTE
>>               )*
>>           )
>>       )
>>       DQUOTE
>>       ;
>> -----------------------------------------------
>>
>> LEXER TRACE (excerpt):
>> enter STRING_LITERAL " line=1:7
>> enter DQUOTE " line=1:7
>> exit DQUOTE ) line=1:8
>> enter DQUOTE ? line=1:9
>> exit DQUOTE ? line=1:9
>> exit STRING_LITERAL ? line=1:9
>> line 1:10 mismatched character '<EOF>' expecting '"'
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rbellamy at pteradigm.com  Wed Jul 27 14:01:16 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 14:01:16 -0700
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
References: <4E305D83.7020005@pteradigm.com>	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
Message-ID: <4E307C9C.8060403@pteradigm.com>

Sam, Bart & Jim, I really appreciate your help on this.

Here's a more complete example, without the greedy confusion. I'm 
including the combined grammar and a test rig.

I get: CombinedLexer:line 1:2 mismatched character '<EOF>' expecting '"' 
just before a NullReferenceException.

GRAMMAR:
----------------------------
grammar Combined;

options {
language=CSharp3;
TokenLabelType=CommonToken;
output=AST;
ASTLabelType=CommonTree;
}

@lexer::namespace{StringLiteralLexerTest}
@parser::namespace{StringLiteralLexerTest}

/*
* Parser Rules
*/

public
compileUnit
: STRING
;

/*
* Lexer Rules
*/
STRING : '"' ('""' | ~'"')* '"';

TEST RIG:
------------------------------
static void Main()
{
CombinedLexer lexer = new CombinedLexer(new ANTLRStringStream(@""""));
//lexer.TraceDestination = new ConsoleTextWriter(typeof(CombinedLexer));

CommonTokenStream tokenStream = new CommonTokenStream(lexer);

CombinedParser parser = new CombinedParser(tokenStream);
//parser.TraceDestination = new ConsoleTextWriter(typeof(CombinedParser));

CommonTree parseTree = parser.compileUnit().Tree;
Console.WriteLine(parseTree.ToStringTree());
}

From bkiers at gmail.com  Wed Jul 27 14:10:52 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 23:10:52 +0200
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <4E307C9C.8060403@pteradigm.com>
References: <4E305D83.7020005@pteradigm.com>
	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
Message-ID: <CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>

Hi Richard,

Both ANTLRWorks' debugger, and my Java test rig:

import org.antlr.runtime.*;

public class Main {
  public static void main(String[] args) throws Exception {
    WhitespaceInSymbolsLexer lexer = new WhitespaceInSymbolsLexer(new
ANTLRStringStream("\"\""));
    WhitespaceInSymbolsParser parser = new WhitespaceInSymbolsParser(new
CommonTokenStream(lexer));
    parser.compileUnit();
  }
}


produce no errors when parsing "" (2 double quotes) as input:

bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
antlr-3.3.jar org.antlr.Tool WhitespaceInSymbols.g
bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ javac -cp
antlr-3.3.jar *.java
bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
.:antlr-3.3.jar Main
bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$


Then there must be something going differently in the CSharp3 target than in
the Java target (note that I am not able to test the CSharp3 target
here...).

Regards,

Bart.


On Wed, Jul 27, 2011 at 11:01 PM, G. Richard Bellamy <rbellamy at pteradigm.com
> wrote:

> Sam, Bart & Jim, I really appreciate your help on this.
>
> Here's a more complete example, without the greedy confusion. I'm
> including the combined grammar and a test rig.
>
> I get: CombinedLexer:line 1:2 mismatched character '<EOF>' expecting '"'
> just before a NullReferenceException.
>
> GRAMMAR:
> ----------------------------
> grammar Combined;
>
> options {
> language=CSharp3;
> TokenLabelType=CommonToken;
> output=AST;
> ASTLabelType=CommonTree;
> }
>
> @lexer::namespace{StringLiteralLexerTest}
> @parser::namespace{StringLiteralLexerTest}
>
> /*
> * Parser Rules
> */
>
> public
> compileUnit
> : STRING
> ;
>
> /*
> * Lexer Rules
> */
> STRING : '"' ('""' | ~'"')* '"';
>
> TEST RIG:
> ------------------------------
> static void Main()
> {
> CombinedLexer lexer = new CombinedLexer(new ANTLRStringStream(@""""));
> //lexer.TraceDestination = new ConsoleTextWriter(typeof(CombinedLexer));
>
> CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>
> CombinedParser parser = new CombinedParser(tokenStream);
> //parser.TraceDestination = new ConsoleTextWriter(typeof(CombinedParser));
>
> CommonTree parseTree = parser.compileUnit().Tree;
> Console.WriteLine(parseTree.ToStringTree());
> }
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rbellamy at pteradigm.com  Wed Jul 27 14:14:11 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 14:14:11 -0700
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>
References: <4E305D83.7020005@pteradigm.com>
	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
	<CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>
Message-ID: <4E307FA3.70705@pteradigm.com>

Bart,

When I escape the quotes things work on my end as well - you'll note 
that I'm passing a set of non-escaped quotes... (C# Verbatim String), so 
you'll not be able to test this on your end (since Java doesn't have an 
equivalent to the Verbatim String).

Thanks again.

-rb

On 7/27/2011 2:10 PM, Bart Kiers wrote:
> Hi Richard,
>
> Both ANTLRWorks' debugger, and my Java test rig:
>
>     import org.antlr.runtime.*;
>
>     public class Main {
>       public static void main(String[] args) throws Exception {
>         WhitespaceInSymbolsLexer lexer = new
>     WhitespaceInSymbolsLexer(new ANTLRStringStream("\"\""));
>         WhitespaceInSymbolsParser parser = new
>     WhitespaceInSymbolsParser(new CommonTokenStream(lexer));
>         parser.compileUnit();
>       }
>     }
>
>
> produce no errors when parsing "" (2 double quotes) as input:
>
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
>     antlr-3.3.jar org.antlr.Tool WhitespaceInSymbols.g
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ javac
>     -cp antlr-3.3.jar *.java
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
>     .:antlr-3.3.jar Main
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
>
>
> Then there must be something going differently in the CSharp3 target 
> than in the Java target (note that I am not able to test the CSharp3 
> target here...).
>
> Regards,
>
> Bart.
>
>
> On Wed, Jul 27, 2011 at 11:01 PM, G. Richard Bellamy 
> <rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>> wrote:
>
>     Sam, Bart & Jim, I really appreciate your help on this.
>
>     Here's a more complete example, without the greedy confusion. I'm
>     including the combined grammar and a test rig.
>
>     I get: CombinedLexer:line 1:2 mismatched character '<EOF>'
>     expecting '"'
>     just before a NullReferenceException.
>
>     GRAMMAR:
>     ----------------------------
>     grammar Combined;
>
>     options {
>     language=CSharp3;
>     TokenLabelType=CommonToken;
>     output=AST;
>     ASTLabelType=CommonTree;
>     }
>
>     @lexer::namespace{StringLiteralLexerTest}
>     @parser::namespace{StringLiteralLexerTest}
>
>     /*
>     * Parser Rules
>     */
>
>     public
>     compileUnit
>     : STRING
>     ;
>
>     /*
>     * Lexer Rules
>     */
>     STRING : '"' ('""' | ~'"')* '"';
>
>     TEST RIG:
>     ------------------------------
>     static void Main()
>     {
>     CombinedLexer lexer = new CombinedLexer(new ANTLRStringStream(@""""));
>     //lexer.TraceDestination = new
>     ConsoleTextWriter(typeof(CombinedLexer));
>
>     CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>
>     CombinedParser parser = new CombinedParser(tokenStream);
>     //parser.TraceDestination = new
>     ConsoleTextWriter(typeof(CombinedParser));
>
>     CommonTree parseTree = parser.compileUnit().Tree;
>     Console.WriteLine(parseTree.ToStringTree());
>     }
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From bkiers at gmail.com  Wed Jul 27 14:25:06 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 23:25:06 +0200
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <4E307FA3.70705@pteradigm.com>
References: <4E305D83.7020005@pteradigm.com>
	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
	<CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>
	<4E307FA3.70705@pteradigm.com>
Message-ID: <CAOrgODbFrj6Tfx-MvRzJ3yryyhFXt3Q1E2DRGppXFwcK3Eic7Q@mail.gmail.com>

Richard,

Note that I am a C# illiterate, but, isn't the C# literal:

@""""


only just a single quote? If so, then it is no wonder you're getting errors.
Parsing:

WhitespaceInSymbolsLexer lexer = new WhitespaceInSymbolsLexer(new
ANTLRStringStream("\""));


will also produce the error 'line 1:1 mismatched character '<EOF>' expecting
'"'' with me (of course) since a single quote is no valid token.

Regards,

Bart.



On Wed, Jul 27, 2011 at 11:14 PM, G. Richard Bellamy <rbellamy at pteradigm.com
> wrote:

> Bart,
>
> When I escape the quotes things work on my end as well - you'll note
> that I'm passing a set of non-escaped quotes... (C# Verbatim String), so
> you'll not be able to test this on your end (since Java doesn't have an
> equivalent to the Verbatim String).
>
> Thanks again.
>
> -rb
>
> On 7/27/2011 2:10 PM, Bart Kiers wrote:
> > Hi Richard,
> >
> > Both ANTLRWorks' debugger, and my Java test rig:
> >
> >     import org.antlr.runtime.*;
> >
> >     public class Main {
> >       public static void main(String[] args) throws Exception {
> >         WhitespaceInSymbolsLexer lexer = new
> >     WhitespaceInSymbolsLexer(new ANTLRStringStream("\"\""));
> >         WhitespaceInSymbolsParser parser = new
> >     WhitespaceInSymbolsParser(new CommonTokenStream(lexer));
> >         parser.compileUnit();
> >       }
> >     }
> >
> >
> > produce no errors when parsing "" (2 double quotes) as input:
> >
> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
> >     antlr-3.3.jar org.antlr.Tool WhitespaceInSymbols.g
> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ javac
> >     -cp antlr-3.3.jar *.java
> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
> >     .:antlr-3.3.jar Main
> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
> >
> >
> > Then there must be something going differently in the CSharp3 target
> > than in the Java target (note that I am not able to test the CSharp3
> > target here...).
> >
> > Regards,
> >
> > Bart.
> >
> >
> > On Wed, Jul 27, 2011 at 11:01 PM, G. Richard Bellamy
> > <rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>> wrote:
> >
> >     Sam, Bart & Jim, I really appreciate your help on this.
> >
> >     Here's a more complete example, without the greedy confusion. I'm
> >     including the combined grammar and a test rig.
> >
> >     I get: CombinedLexer:line 1:2 mismatched character '<EOF>'
> >     expecting '"'
> >     just before a NullReferenceException.
> >
> >     GRAMMAR:
> >     ----------------------------
> >     grammar Combined;
> >
> >     options {
> >     language=CSharp3;
> >     TokenLabelType=CommonToken;
> >     output=AST;
> >     ASTLabelType=CommonTree;
> >     }
> >
> >     @lexer::namespace{StringLiteralLexerTest}
> >     @parser::namespace{StringLiteralLexerTest}
> >
> >     /*
> >     * Parser Rules
> >     */
> >
> >     public
> >     compileUnit
> >     : STRING
> >     ;
> >
> >     /*
> >     * Lexer Rules
> >     */
> >     STRING : '"' ('""' | ~'"')* '"';
> >
> >     TEST RIG:
> >     ------------------------------
> >     static void Main()
> >     {
> >     CombinedLexer lexer = new CombinedLexer(new
> ANTLRStringStream(@""""));
> >     //lexer.TraceDestination = new
> >     ConsoleTextWriter(typeof(CombinedLexer));
> >
> >     CommonTokenStream tokenStream = new CommonTokenStream(lexer);
> >
> >     CombinedParser parser = new CombinedParser(tokenStream);
> >     //parser.TraceDestination = new
> >     ConsoleTextWriter(typeof(CombinedParser));
> >
> >     CommonTree parseTree = parser.compileUnit().Tree;
> >     Console.WriteLine(parseTree.ToStringTree());
> >     }
> >
> >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >     Unsubscribe:
> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Wed Jul 27 14:27:35 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 27 Jul 2011 16:27:35 -0500
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <4E307FA3.70705@pteradigm.com>
References: <4E305D83.7020005@pteradigm.com>	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>	<4E3072DC.6090903@pteradigm.com>	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>	<4E307C9C.8060403@pteradigm.com>	<CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>
	<4E307FA3.70705@pteradigm.com>
Message-ID: <008e01cc4ca4$00ef44d0$02cdce70$@pixelminegames.com>

Hi Richard,

The double quote escape character in a verbatim string is "", so what you're
actually passing to the parser is a single (unmatched) quote. To pass an
empty string, you'll need to use @"""""".

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of G. Richard Bellamy
Sent: Wednesday, July 27, 2011 4:14 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Empty Quoted String Literal

Bart,

When I escape the quotes things work on my end as well - you'll note that
I'm passing a set of non-escaped quotes... (C# Verbatim String), so you'll
not be able to test this on your end (since Java doesn't have an equivalent
to the Verbatim String).

Thanks again.

-rb

On 7/27/2011 2:10 PM, Bart Kiers wrote:
> Hi Richard,
>
> Both ANTLRWorks' debugger, and my Java test rig:
>
>     import org.antlr.runtime.*;
>
>     public class Main {
>       public static void main(String[] args) throws Exception {
>         WhitespaceInSymbolsLexer lexer = new
>     WhitespaceInSymbolsLexer(new ANTLRStringStream("\"\""));
>         WhitespaceInSymbolsParser parser = new
>     WhitespaceInSymbolsParser(new CommonTokenStream(lexer));
>         parser.compileUnit();
>       }
>     }
>
>
> produce no errors when parsing "" (2 double quotes) as input:
>
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
>     antlr-3.3.jar org.antlr.Tool WhitespaceInSymbols.g
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ javac
>     -cp antlr-3.3.jar *.java
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
>     .:antlr-3.3.jar Main
>     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
>
>
> Then there must be something going differently in the CSharp3 target 
> than in the Java target (note that I am not able to test the CSharp3 
> target here...).
>
> Regards,
>
> Bart.
>
>
> On Wed, Jul 27, 2011 at 11:01 PM, G. Richard Bellamy 
> <rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>> wrote:
>
>     Sam, Bart & Jim, I really appreciate your help on this.
>
>     Here's a more complete example, without the greedy confusion. I'm
>     including the combined grammar and a test rig.
>
>     I get: CombinedLexer:line 1:2 mismatched character '<EOF>'
>     expecting '"'
>     just before a NullReferenceException.
>
>     GRAMMAR:
>     ----------------------------
>     grammar Combined;
>
>     options {
>     language=CSharp3;
>     TokenLabelType=CommonToken;
>     output=AST;
>     ASTLabelType=CommonTree;
>     }
>
>     @lexer::namespace{StringLiteralLexerTest}
>     @parser::namespace{StringLiteralLexerTest}
>
>     /*
>     * Parser Rules
>     */
>
>     public
>     compileUnit
>     : STRING
>     ;
>
>     /*
>     * Lexer Rules
>     */
>     STRING : '"' ('""' | ~'"')* '"';
>
>     TEST RIG:
>     ------------------------------
>     static void Main()
>     {
>     CombinedLexer lexer = new CombinedLexer(new ANTLRStringStream(@""""));
>     //lexer.TraceDestination = new
>     ConsoleTextWriter(typeof(CombinedLexer));
>
>     CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>
>     CombinedParser parser = new CombinedParser(tokenStream);
>     //parser.TraceDestination = new
>     ConsoleTextWriter(typeof(CombinedParser));
>
>     CommonTree parseTree = parser.compileUnit().Tree;
>     Console.WriteLine(parseTree.ToStringTree());
>     }
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bkiers at gmail.com  Wed Jul 27 14:27:39 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 27 Jul 2011 23:27:39 +0200
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <CAOrgODbFrj6Tfx-MvRzJ3yryyhFXt3Q1E2DRGppXFwcK3Eic7Q@mail.gmail.com>
References: <4E305D83.7020005@pteradigm.com>
	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
	<CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>
	<4E307FA3.70705@pteradigm.com>
	<CAOrgODbFrj6Tfx-MvRzJ3yryyhFXt3Q1E2DRGppXFwcK3Eic7Q@mail.gmail.com>
Message-ID: <CAOrgODbi3OC35iHtFBRw3UqbqBE0cGaGbF0PYeYhb72XdOad-A@mail.gmail.com>

A quick test with Mono confirmed it, @"""" is just a single quote:

    Console.WriteLine(@"""");

prints 1 quote! That's the problem.

Bart.


On Wed, Jul 27, 2011 at 11:25 PM, Bart Kiers <bkiers at gmail.com> wrote:

> Richard,
>
> Note that I am a C# illiterate, but, isn't the C# literal:
>
> @""""
>
>
> only just a single quote? If so, then it is no wonder you're getting
> errors. Parsing:
>
> WhitespaceInSymbolsLexer lexer = new WhitespaceInSymbolsLexer(new
> ANTLRStringStream("\""));
>
>
> will also produce the error 'line 1:1 mismatched character '<EOF>'
> expecting '"'' with me (of course) since a single quote is no valid token.
>
> Regards,
>
> Bart.
>
>
>
> On Wed, Jul 27, 2011 at 11:14 PM, G. Richard Bellamy <
> rbellamy at pteradigm.com> wrote:
>
>> Bart,
>>
>> When I escape the quotes things work on my end as well - you'll note
>> that I'm passing a set of non-escaped quotes... (C# Verbatim String), so
>> you'll not be able to test this on your end (since Java doesn't have an
>> equivalent to the Verbatim String).
>>
>> Thanks again.
>>
>> -rb
>>
>> On 7/27/2011 2:10 PM, Bart Kiers wrote:
>> > Hi Richard,
>> >
>> > Both ANTLRWorks' debugger, and my Java test rig:
>> >
>> >     import org.antlr.runtime.*;
>> >
>> >     public class Main {
>> >       public static void main(String[] args) throws Exception {
>> >         WhitespaceInSymbolsLexer lexer = new
>> >     WhitespaceInSymbolsLexer(new ANTLRStringStream("\"\""));
>> >         WhitespaceInSymbolsParser parser = new
>> >     WhitespaceInSymbolsParser(new CommonTokenStream(lexer));
>> >         parser.compileUnit();
>> >       }
>> >     }
>> >
>> >
>> > produce no errors when parsing "" (2 double quotes) as input:
>> >
>> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
>> >     antlr-3.3.jar org.antlr.Tool WhitespaceInSymbols.g
>> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ javac
>> >     -cp antlr-3.3.jar *.java
>> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ java -cp
>> >     .:antlr-3.3.jar Main
>> >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
>> >
>> >
>> > Then there must be something going differently in the CSharp3 target
>> > than in the Java target (note that I am not able to test the CSharp3
>> > target here...).
>> >
>> > Regards,
>> >
>> > Bart.
>> >
>> >
>> > On Wed, Jul 27, 2011 at 11:01 PM, G. Richard Bellamy
>> > <rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>> wrote:
>> >
>> >     Sam, Bart & Jim, I really appreciate your help on this.
>> >
>> >     Here's a more complete example, without the greedy confusion. I'm
>> >     including the combined grammar and a test rig.
>> >
>> >     I get: CombinedLexer:line 1:2 mismatched character '<EOF>'
>> >     expecting '"'
>> >     just before a NullReferenceException.
>> >
>> >     GRAMMAR:
>> >     ----------------------------
>> >     grammar Combined;
>> >
>> >     options {
>> >     language=CSharp3;
>> >     TokenLabelType=CommonToken;
>> >     output=AST;
>> >     ASTLabelType=CommonTree;
>> >     }
>> >
>> >     @lexer::namespace{StringLiteralLexerTest}
>> >     @parser::namespace{StringLiteralLexerTest}
>> >
>> >     /*
>> >     * Parser Rules
>> >     */
>> >
>> >     public
>> >     compileUnit
>> >     : STRING
>> >     ;
>> >
>> >     /*
>> >     * Lexer Rules
>> >     */
>> >     STRING : '"' ('""' | ~'"')* '"';
>> >
>> >     TEST RIG:
>> >     ------------------------------
>> >     static void Main()
>> >     {
>> >     CombinedLexer lexer = new CombinedLexer(new
>> ANTLRStringStream(@""""));
>> >     //lexer.TraceDestination = new
>> >     ConsoleTextWriter(typeof(CombinedLexer));
>> >
>> >     CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>> >
>> >     CombinedParser parser = new CombinedParser(tokenStream);
>> >     //parser.TraceDestination = new
>> >     ConsoleTextWriter(typeof(CombinedParser));
>> >
>> >     CommonTree parseTree = parser.compileUnit().Tree;
>> >     Console.WriteLine(parseTree.ToStringTree());
>> >     }
>> >
>> >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >     Unsubscribe:
>> >
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Wed Jul 27 14:28:50 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 27 Jul 2011 14:28:50 -0700
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <4E307C9C.8060403@pteradigm.com>
References: <4E305D83.7020005@pteradigm.com>	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
Message-ID: <c93251e6678c07555e98b6a68ad88db8@mail.gmail.com>

Your literal string consists of just 1 double quote, hence the error
message is correct:

http://msdn.microsoft.com/en-us/library/aa691090(v=vs.71).aspx


Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of G. Richard Bellamy
> Sent: Wednesday, July 27, 2011 2:01 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Empty Quoted String Literal
>
> Sam, Bart & Jim, I really appreciate your help on this.
>
> Here's a more complete example, without the greedy confusion. I'm
> including the combined grammar and a test rig.
>
> I get: CombinedLexer:line 1:2 mismatched character '<EOF>' expecting
> '"'
> just before a NullReferenceException.
>
> GRAMMAR:
> ----------------------------
> grammar Combined;
>
> options {
> language=CSharp3;
> TokenLabelType=CommonToken;
> output=AST;
> ASTLabelType=CommonTree;
> }
>
> @lexer::namespace{StringLiteralLexerTest}
> @parser::namespace{StringLiteralLexerTest}
>
> /*
> * Parser Rules
> */
>
> public
> compileUnit
> : STRING
> ;
>
> /*
> * Lexer Rules
> */
> STRING : '"' ('""' | ~'"')* '"';
>
> TEST RIG:
> ------------------------------
> static void Main()
> {
> CombinedLexer lexer = new CombinedLexer(new ANTLRStringStream(@""""));
> //lexer.TraceDestination = new
> ConsoleTextWriter(typeof(CombinedLexer));
>
> CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>
> CombinedParser parser = new CombinedParser(tokenStream);
> //parser.TraceDestination = new
> ConsoleTextWriter(typeof(CombinedParser));
>
> CommonTree parseTree = parser.compileUnit().Tree;
> Console.WriteLine(parseTree.ToStringTree());
> }
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From rbellamy at pteradigm.com  Wed Jul 27 14:28:57 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 14:28:57 -0700
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <CAOrgODbFrj6Tfx-MvRzJ3yryyhFXt3Q1E2DRGppXFwcK3Eic7Q@mail.gmail.com>
References: <4E305D83.7020005@pteradigm.com>
	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>
	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
	<CAOrgODZALAP6hWS4tdFT8YvDv058O=29Qt=_q=BHPQpq+PWYpA@mail.gmail.com>
	<4E307FA3.70705@pteradigm.com>
	<CAOrgODbFrj6Tfx-MvRzJ3yryyhFXt3Q1E2DRGppXFwcK3Eic7Q@mail.gmail.com>
Message-ID: <4E308319.9040701@pteradigm.com>

Bart & Sam,

Why, I do believe you've hit the nail on the head... and things were 
going so well today!

Thank you both for getting me back on track.

-rb

On 7/27/2011 2:25 PM, Bart Kiers wrote:
> Richard,
>
> Note that I am a C# illiterate, but, isn't the C# literal:
>
>     @""""
>
>
> only just a single quote? If so, then it is no wonder you're getting 
> errors. Parsing:
>
>     WhitespaceInSymbolsLexer lexer = new WhitespaceInSymbolsLexer(new
>     ANTLRStringStream("\""));
>
>
> will also produce the error 'line 1:1 mismatched character '<EOF>' 
> expecting '"'' with me (of course) since a single quote is no valid token.
>
> Regards,
>
> Bart.
>
>
>
> On Wed, Jul 27, 2011 at 11:14 PM, G. Richard Bellamy 
> <rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>> wrote:
>
>     Bart,
>
>     When I escape the quotes things work on my end as well - you'll note
>     that I'm passing a set of non-escaped quotes... (C# Verbatim
>     String), so
>     you'll not be able to test this on your end (since Java doesn't
>     have an
>     equivalent to the Verbatim String).
>
>     Thanks again.
>
>     -rb
>
>     On 7/27/2011 2:10 PM, Bart Kiers wrote:
>     > Hi Richard,
>     >
>     > Both ANTLRWorks' debugger, and my Java test rig:
>     >
>     >     import org.antlr.runtime.*;
>     >
>     >     public class Main {
>     >       public static void main(String[] args) throws Exception {
>     >         WhitespaceInSymbolsLexer lexer = new
>     >     WhitespaceInSymbolsLexer(new ANTLRStringStream("\"\""));
>     >         WhitespaceInSymbolsParser parser = new
>     >     WhitespaceInSymbolsParser(new CommonTokenStream(lexer));
>     >         parser.compileUnit();
>     >       }
>     >     }
>     >
>     >
>     > produce no errors when parsing "" (2 double quotes) as input:
>     >
>     >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
>     java -cp
>     >     antlr-3.3.jar org.antlr.Tool WhitespaceInSymbols.g
>     >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$ javac
>     >     -cp antlr-3.3.jar *.java
>     >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
>     java -cp
>     >     .:antlr-3.3.jar Main
>     >     bart at hades:~/Programming/ANTLR/Demos/WhitespaceInSymbols$
>     >
>     >
>     > Then there must be something going differently in the CSharp3 target
>     > than in the Java target (note that I am not able to test the CSharp3
>     > target here...).
>     >
>     > Regards,
>     >
>     > Bart.
>     >
>     >
>     > On Wed, Jul 27, 2011 at 11:01 PM, G. Richard Bellamy
>     > <rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>
>     <mailto:rbellamy at pteradigm.com <mailto:rbellamy at pteradigm.com>>>
>     wrote:
>     >
>     >     Sam, Bart & Jim, I really appreciate your help on this.
>     >
>     >     Here's a more complete example, without the greedy
>     confusion. I'm
>     >     including the combined grammar and a test rig.
>     >
>     >     I get: CombinedLexer:line 1:2 mismatched character '<EOF>'
>     >     expecting '"'
>     >     just before a NullReferenceException.
>     >
>     >     GRAMMAR:
>     >     ----------------------------
>     >     grammar Combined;
>     >
>     >     options {
>     >     language=CSharp3;
>     >     TokenLabelType=CommonToken;
>     >     output=AST;
>     >     ASTLabelType=CommonTree;
>     >     }
>     >
>     >     @lexer::namespace{StringLiteralLexerTest}
>     >     @parser::namespace{StringLiteralLexerTest}
>     >
>     >     /*
>     >     * Parser Rules
>     >     */
>     >
>     >     public
>     >     compileUnit
>     >     : STRING
>     >     ;
>     >
>     >     /*
>     >     * Lexer Rules
>     >     */
>     >     STRING : '"' ('""' | ~'"')* '"';
>     >
>     >     TEST RIG:
>     >     ------------------------------
>     >     static void Main()
>     >     {
>     >     CombinedLexer lexer = new CombinedLexer(new
>     ANTLRStringStream(@""""));
>     >     //lexer.TraceDestination = new
>     >     ConsoleTextWriter(typeof(CombinedLexer));
>     >
>     >     CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>     >
>     >     CombinedParser parser = new CombinedParser(tokenStream);
>     >     //parser.TraceDestination = new
>     >     ConsoleTextWriter(typeof(CombinedParser));
>     >
>     >     CommonTree parseTree = parser.compileUnit().Tree;
>     >     Console.WriteLine(parseTree.ToStringTree());
>     >     }
>     >
>     >     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     >     Unsubscribe:
>     >
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>     >
>     >
>
>     List: http://www.antlr.org/mailman/listinfo/antlr-interest
>     Unsubscribe:
>     http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From rbellamy at pteradigm.com  Wed Jul 27 14:45:09 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Wed, 27 Jul 2011 14:45:09 -0700
Subject: [antlr-interest] Empty Quoted String Literal
In-Reply-To: <c93251e6678c07555e98b6a68ad88db8@mail.gmail.com>
References: <4E305D83.7020005@pteradigm.com>	<b7e08ed0d12566db79ff8a4ef80d2c3d@mail.gmail.com>
	<4E3072DC.6090903@pteradigm.com>	<008a01cc4c9b$44da70b0$ce8f5210$@pixelminegames.com>
	<4E307C9C.8060403@pteradigm.com>
	<c93251e6678c07555e98b6a68ad88db8@mail.gmail.com>
Message-ID: <4E3086E5.8030704@pteradigm.com>

Thanks again folks... sorry for wasting your bandwidth.

-rb

On 7/27/2011 2:28 PM, Jim Idle wrote:
> Your literal string consists of just 1 double quote, hence the error
> message is correct:
>
> http://msdn.microsoft.com/en-us/library/aa691090(v=vs.71).aspx
>
>
> Jim
>
>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of G. Richard Bellamy
>> Sent: Wednesday, July 27, 2011 2:01 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Empty Quoted String Literal
>>
>> Sam, Bart&  Jim, I really appreciate your help on this.
>>
>> Here's a more complete example, without the greedy confusion. I'm
>> including the combined grammar and a test rig.
>>
>> I get: CombinedLexer:line 1:2 mismatched character '<EOF>' expecting
>> '"'
>> just before a NullReferenceException.
>>
>> GRAMMAR:
>> ----------------------------
>> grammar Combined;
>>
>> options {
>> language=CSharp3;
>> TokenLabelType=CommonToken;
>> output=AST;
>> ASTLabelType=CommonTree;
>> }
>>
>> @lexer::namespace{StringLiteralLexerTest}
>> @parser::namespace{StringLiteralLexerTest}
>>
>> /*
>> * Parser Rules
>> */
>>
>> public
>> compileUnit
>> : STRING
>> ;
>>
>> /*
>> * Lexer Rules
>> */
>> STRING : '"' ('""' | ~'"')* '"';
>>
>> TEST RIG:
>> ------------------------------
>> static void Main()
>> {
>> CombinedLexer lexer = new CombinedLexer(new ANTLRStringStream(@""""));
>> //lexer.TraceDestination = new
>> ConsoleTextWriter(typeof(CombinedLexer));
>>
>> CommonTokenStream tokenStream = new CommonTokenStream(lexer);
>>
>> CombinedParser parser = new CombinedParser(tokenStream);
>> //parser.TraceDestination = new
>> ConsoleTextWriter(typeof(CombinedParser));
>>
>> CommonTree parseTree = parser.compileUnit().Tree;
>> Console.WriteLine(parseTree.ToStringTree());
>> }
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From divine.raven at gmail.com  Wed Jul 27 15:30:29 2011
From: divine.raven at gmail.com (Alex Pojarsky)
Date: Thu, 28 Jul 2011 01:30:29 +0300
Subject: [antlr-interest] Braces
Message-ID: <CAJVbiG-1ztm+ectDrSTZ8e7aoWGsfep292gXE=07uaUp_KK+Kw@mail.gmail.com>

Greetings everyone.

Ive got the following Parser rule in my grammar file:

codeBlock
	:	SEP_LBRACE {input.mark();} code? SEP_RBRACE
	;

And it correctly generates MismatchedTokenException when encounters
EOF instead of SEP_RBRACE. The problem is it gives line 0 and
charPosition -1, which is illegal in the place I'm trying to use it. I
want these things to be set to the position of the last instance of
SEP_LBRACE. I.e. when parser encounters EOF while parsing this
codeBlock rule - it should return Line and charPosition of the nearest
SEP_LBRACE.

Could you please explain how do I do this? I'm still newbie, even
though I've developed a simple grammar for the programming language,
so please, keep things simple as long as it is possible.

Thanks a lot in advance.

From gokul007 at gmail.com  Wed Jul 27 21:15:47 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 28 Jul 2011 12:15:47 +0800
Subject: [antlr-interest] Matching Dollar quoted strings
In-Reply-To: <CAHMh4-ZWqxd51m5BpXUe0KiuHOsM=0xjt+Ks_jrmyUHBuddwww@mail.gmail.com>
References: <CAHMh4-ZWqxd51m5BpXUe0KiuHOsM=0xjt+Ks_jrmyUHBuddwww@mail.gmail.com>
Message-ID: <CAHMh4-Yv4-v05SVAghy5m-K9DEBWaVpOQ4Xjk-=z2Tj-yjM_7w@mail.gmail.com>

May be the question was not clear. Anyways, i have found the solution, so
thought of updating it.

fragment DOLQ_CONT : ALPH_CAP | ALPH_SMALL | ( '\u0200' .. '\u0377' ) | '_'
 | DIGIT;
fragment DOLQ_START : ALPH_CAP | ALPH_SMALL | ( '\u0200' .. '\u0377' ) | '_'
;

fragment DOLQ_DELIM_F1[ string& delim ]
@init{
ANTLR3_MARKER start = GETCHARINDEX();
}   : '$' (DOLQ_START) (DOLQ_CONT)* '$'
{
ANTLR3_MARKER stop = GETCHARINDEX();
delim.assign( (char*) start, stop - start );
};
fragment DOLQ_DELIM_F2 : '$' (DOLQ_START) (DOLQ_CONT)* '$' ;

fragment DOLQ_INSIDE: (~'$')+ | '$'
;

DOLQDELIM
@init{
string delim;
}: DOLQ_DELIM_F1[delim]
   DOLQ_INSIDE*
   { check_string_delim( delim, GETCHARINDEX() )  }? DOLQ_DELIM_F2
    ;

Thanks,
Gokul.

On Wed, Jul 27, 2011 at 9:52 PM, Gokulakannan Somasundaram <
gokul007 at gmail.com> wrote:

> Hi,
>    I want to match patterns like
>
>    $123$..anything here..$123$
>
>    Basically it is a way to mention strings between a delimiter. The
> delimiter is not fixed. Can someone help me on how to match these type of
> dollar quoted identifiers?
>
> Thanks,
> Gokul.
>

From gokul007 at gmail.com  Wed Jul 27 21:36:01 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 28 Jul 2011 12:36:01 +0800
Subject: [antlr-interest] Braces
In-Reply-To: <CAJVbiG-1ztm+ectDrSTZ8e7aoWGsfep292gXE=07uaUp_KK+Kw@mail.gmail.com>
References: <CAJVbiG-1ztm+ectDrSTZ8e7aoWGsfep292gXE=07uaUp_KK+Kw@mail.gmail.com>
Message-ID: <CAHMh4-aaUYHkZqyw8q3Xm5Bhm217vb=d4OMsx7KDaep-AGFU+Q@mail.gmail.com>

Have a context level variable and update it through the action part in
SEP_LBRACE.

Gokul.

On Thu, Jul 28, 2011 at 6:30 AM, Alex Pojarsky <divine.raven at gmail.com>wrote:

> Greetings everyone.
>
> Ive got the following Parser rule in my grammar file:
>
> codeBlock
>        :       SEP_LBRACE {input.mark();} code? SEP_RBRACE
>        ;
>
> And it correctly generates MismatchedTokenException when encounters
> EOF instead of SEP_RBRACE. The problem is it gives line 0 and
> charPosition -1, which is illegal in the place I'm trying to use it. I
> want these things to be set to the position of the last instance of
> SEP_LBRACE. I.e. when parser encounters EOF while parsing this
> codeBlock rule - it should return Line and charPosition of the nearest
> SEP_LBRACE.
>
> Could you please explain how do I do this? I'm still newbie, even
> though I've developed a simple grammar for the programming language,
> so please, keep things simple as long as it is possible.
>
> Thanks a lot in advance.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kingces95 at gmail.com  Thu Jul 28 01:28:37 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 28 Jul 2011 01:28:37 -0700
Subject: [antlr-interest] Newbe bug: Why are these two code snippets not
	equivalent?
Message-ID: <CAJQwtsijESxC7UT=ZC+M5k8HkP-DF3AHEKdyVJ9OqtvYqOUvQQ@mail.gmail.com>

Hello antlr-interest! So I'm working on my C# pre-processor and I'm trying
to implement the skipping #ifdefed code in the lexer when I ran across this.
I expected


PP_SKIPPED_CHARACTERS
  : //{ false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
F_NEW_LINE )*
  ;


to be equivalent to


PP_SKIPPED_CHARACTERS
  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER* F_NEW_LINE
)*
  ;

but I'm seeing different runtime behavior. So I guess I don't understand
what the { false }? syntax is all about. I know there are probably other
ways to implement the #ifdefed logic but could someone enlighten me as to
why these two bits of code are not equivalent?

Thanks,
Chris

From gokul007 at gmail.com  Thu Jul 28 04:00:56 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Thu, 28 Jul 2011 19:00:56 +0800
Subject: [antlr-interest] Newbe bug: Why are these two code snippets not
	equivalent?
In-Reply-To: <CAJQwtsijESxC7UT=ZC+M5k8HkP-DF3AHEKdyVJ9OqtvYqOUvQQ@mail.gmail.com>
References: <CAJQwtsijESxC7UT=ZC+M5k8HkP-DF3AHEKdyVJ9OqtvYqOUvQQ@mail.gmail.com>
Message-ID: <CAHMh4-YNpYeuvJ_Fb_e2v3ACmyaZs8=2BuXPCLPRV-dmph_YMg@mail.gmail.com>

The first rule matches empty and the second rule doesn't match anything. Is
that "//" intentional?

Gokul.

On Thu, Jul 28, 2011 at 4:28 PM, chris king <kingces95 at gmail.com> wrote:

> Hello antlr-interest! So I'm working on my C# pre-processor and I'm trying
> to implement the skipping #ifdefed code in the lexer when I ran across
> this.
> I expected
>
>
> PP_SKIPPED_CHARACTERS
>  : //{ false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*
>  ;
>
>
> to be equivalent to
>
>
> PP_SKIPPED_CHARACTERS
>  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER* F_NEW_LINE
> )*
>  ;
>
> but I'm seeing different runtime behavior. So I guess I don't understand
> what the { false }? syntax is all about. I know there are probably other
> ways to implement the #ifdefed logic but could someone enlighten me as to
> why these two bits of code are not equivalent?
>
> Thanks,
> Chris
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sebastien.kirche at gmail.com  Thu Jul 28 05:07:51 2011
From: sebastien.kirche at gmail.com (=?ISO-8859-1?Q?S=E9bastien_Kirche?=)
Date: Thu, 28 Jul 2011 14:07:51 +0200
Subject: [antlr-interest] tree construction : skip empty nodes
Message-ID: <CALGPt8Z_cu6qk+fU0k=C_a3BJHhKYV6BEdcHeYgvSegHn1xC4A@mail.gmail.com>

Hi,

I have the two following rules :

codeBlock : stmt+=compoundStatement* -> ^(STMT $stmt)* ;

compoundStatement
	:
	(
		(	/* empty */
			|	tryCatchBlock
			|	localVarDecl
	      		| 	ifStatement
			|	chooseCaseStatement
			|	forStatement
			|	loopStatement
			| 	embeddedSQL
			|	singleStatement
		) (Semi! | EOL! )
	)
	|	Label -> ^(LABEL Label)
	;

As the compoundStatement can match empty lines or null statements
(like ;;;) my parser sometimes emit empty STMT nodes.
I cannot figure the correct way to conditionaly emit STMT if only the
compoundStatement is not empty.

I have tried something like codeBlock : stmt+=compoundStatement* ->
{$stmt.tree != null} ^(STMT $stmt)* ;
but because of the += notation the $stmt is a list and I did not find
yet the proper way to test each item.

Could you give me some help ?
-- 
S?bastien Kirche

From rbellamy at pteradigm.com  Thu Jul 28 09:08:18 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Thu, 28 Jul 2011 09:08:18 -0700
Subject: [antlr-interest] ANTLRWorks Interpreter and Debugger diagrams.
In-Reply-To: <CAOrgODZmZeZjvMz36KVm-VaPqQVyWPXveAohoxRhXp0oRnqz9Q@mail.gmail.com>
References: <008901cc4c96$f040dd90$d0c298b0$@pixelminegames.com>
	<CAOrgODbqx4h51uzwuMeukXqWAd-3o53X3+KCfQQvEykzzBhsRg@mail.gmail.com>
	<4E306FD0.30408@pteradigm.com>
	<CAOrgODZmZeZjvMz36KVm-VaPqQVyWPXveAohoxRhXp0oRnqz9Q@mail.gmail.com>
Message-ID: <4E318972.4070202@pteradigm.com>

I should have called out the fact that I'm a novice ANTLR user (if it 
wasn't already obvious).

Given the high level of attention and consideration I received 
yesterday, I'm going to go ahead and jump back in. :)

I decided it would be best if I became more familiar with the toolset. 
Thus I put together the most basic arrangement I could think of to test 
the rule I'm trying to understand, and that was to:

1. Create a Combined.g grammar file with a single lexer rule and a 
single parser rule.
2. Target Java so I can easily Interpret and Debug input with ANTLRWorks.

Attached are the results of that attempt. One of my points of confusion 
is the difference in the Interpreter and the Debugger Parser Tree/AST 
diagrams. Could someone help me understand what I'm seeing here? Does 
the Interpreter behave much differently than the Debugger when dealing 
with MismatchedTokenExceptions?

TIA,
-rb


On 7/27/2011 1:19 PM, Bart Kiers wrote:
> But as Jim mentioned, this is not the issue here. The rule:
>
> STRING : '"' ('""' | ~'"')* '"';
>
>
> matches input like:
>
> "a b "" c"
>
>
> just fine (as a single STRING).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ANTLRWorks 1.4.2_2011-07-28_08-54-43.png
Type: image/png
Size: 38349 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110728/5dcfab4c/attachment-0002.png 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ANTLRWorks 1.4.2_2011-07-28_08-51-58.png
Type: image/png
Size: 35512 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110728/5dcfab4c/attachment-0003.png 

From kingces95 at gmail.com  Thu Jul 28 10:41:30 2011
From: kingces95 at gmail.com (Chris King)
Date: Thu, 28 Jul 2011 10:41:30 -0700
Subject: [antlr-interest] Newbe bug: Why are these two code snippets not
	equivalent?
In-Reply-To: <CAHMh4-YNpYeuvJ_Fb_e2v3ACmyaZs8=2BuXPCLPRV-dmph_YMg@mail.gmail.com>
References: <CAJQwtsijESxC7UT=ZC+M5k8HkP-DF3AHEKdyVJ9OqtvYqOUvQQ@mail.gmail.com>
	<CAHMh4-YNpYeuvJ_Fb_e2v3ACmyaZs8=2BuXPCLPRV-dmph_YMg@mail.gmail.com>
Message-ID: <F69DC361-E2D9-408B-9E7C-807970EDA40D@gmail.com>

Yes that is intentional. But let's disregard that rule for a second. Should the introduction of that second rule under any circumstance change the behavior of that parser seeing as it doesnt match anything? I'm showing that it does and can't figure out why it would given that the predicate is always false. Is that a bug?

Thanks,
Chris

On Jul 28, 2011, at 4:00 AM, Gokulakannan Somasundaram <gokul007 at gmail.com> wrote:

> The first rule matches empty and the second rule doesn't match anything. Is that "//" intentional?
> 
> Gokul.
> 
> On Thu, Jul 28, 2011 at 4:28 PM, chris king <kingces95 at gmail.com> wrote:
> Hello antlr-interest! So I'm working on my C# pre-processor and I'm trying
> to implement the skipping #ifdefed code in the lexer when I ran across this.
> I expected
> 
> 
> PP_SKIPPED_CHARACTERS
>  : //{ false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*
>  ;
> 
> 
> to be equivalent to
> 
> 
> PP_SKIPPED_CHARACTERS
>  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER* F_NEW_LINE
> )*
>  ;
> 
> but I'm seeing different runtime behavior. So I guess I don't understand
> what the { false }? syntax is all about. I know there are probably other
> ways to implement the #ifdefed logic but could someone enlighten me as to
> why these two bits of code are not equivalent?
> 
> Thanks,
> Chris
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From gokul007 at gmail.com  Thu Jul 28 12:17:45 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 29 Jul 2011 03:17:45 +0800
Subject: [antlr-interest] Newbe bug: Why are these two code snippets not
	equivalent?
In-Reply-To: <F69DC361-E2D9-408B-9E7C-807970EDA40D@gmail.com>
References: <CAJQwtsijESxC7UT=ZC+M5k8HkP-DF3AHEKdyVJ9OqtvYqOUvQQ@mail.gmail.com>
	<CAHMh4-YNpYeuvJ_Fb_e2v3ACmyaZs8=2BuXPCLPRV-dmph_YMg@mail.gmail.com>
	<F69DC361-E2D9-408B-9E7C-807970EDA40D@gmail.com>
Message-ID: <CAHMh4-auv_yq82mhOS2QS3QPyig6KD-OBoDgo-Xs1Y4-7mk_+g@mail.gmail.com>

I don't know for sure. Someone knowledgeable can correct me. ANTLR lexer
doesn't work correct, when you have the Semantic predicates at the
beginning. If you have it after your first token, then it might give the
required behavior.

But i follow one of the advices given to me.

a) don't have too much functionality in the lexer. Make it as simple as
possible. If you want the conditions to be considered, use it in the action
clause and change the $type of the token.

Nevertheless, i find the lexer working right even with semantic predicates
when you have k=1 setup. But unless your grammar is naturally k=1, you have
to write the semantic predicates to cover all the cases by yourself. When
you have a semantic predicate, you kind of bypass the grammar check.

Thanks.

On Fri, Jul 29, 2011 at 1:41 AM, Chris King <kingces95 at gmail.com> wrote:

> Yes that is intentional. But let's disregard that rule for a second. Should
> the introduction of that second rule under any circumstance change the
> behavior of that parser seeing as it doesnt match anything? I'm showing that
> it does and can't figure out why it would given that the predicate is always
> false. Is that a bug?
>
> Thanks,
> Chris
>
> On Jul 28, 2011, at 4:00 AM, Gokulakannan Somasundaram <gokul007 at gmail.com>
> wrote:
>
> The first rule matches empty and the second rule doesn't match anything. Is
> that "//" intentional?
>
> Gokul.
>
> On Thu, Jul 28, 2011 at 4:28 PM, chris king < <kingces95 at gmail.com>
> kingces95 at gmail.com> wrote:
>
>> Hello antlr-interest! So I'm working on my C# pre-processor and I'm trying
>> to implement the skipping #ifdefed code in the lexer when I ran across
>> this.
>> I expected
>>
>>
>> PP_SKIPPED_CHARACTERS
>>  : //{ false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
>> F_NEW_LINE )*
>>  ;
>>
>>
>> to be equivalent to
>>
>>
>> PP_SKIPPED_CHARACTERS
>>  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
>> F_NEW_LINE
>> )*
>>  ;
>>
>> but I'm seeing different runtime behavior. So I guess I don't understand
>> what the { false }? syntax is all about. I know there are probably other
>> ways to implement the #ifdefed logic but could someone enlighten me as to
>> why these two bits of code are not equivalent?
>>
>> Thanks,
>> Chris
>>
>> List: <http://www.antlr.org/mailman/listinfo/antlr-interest>
>> http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> <http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From kingces95 at gmail.com  Thu Jul 28 14:18:59 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 28 Jul 2011 14:18:59 -0700
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
Message-ID: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>

Have I found an Antlr lexer CSharp3 bug if I can alter program execution
(exception instead of no exception) by introducing a lexer production with a
predicate that is always false? For example


PP_SKIPPED_CHARACTERS
  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER* F_NEW_LINE
)*
  ;


I would think that such a production should always be ignored because it's
predicate is always false and therefore would never alter program execution.
Yet I'm seeing a change in the execution of my program. I'm seeing it enter
this function and throw a FailedPredicateException. I wouldn't have expected
that this function should ever even have been executed because the predicate
is always false.

[GrammarRule("PP_SKIPPED_CHARACTERS")]
private void mPP_SKIPPED_CHARACTERS()
{
EnterRule_PP_SKIPPED_CHARACTERS();
EnterRule("PP_SKIPPED_CHARACTERS", 31);
TraceIn("PP_SKIPPED_CHARACTERS", 31);
try
{
int _type = PP_SKIPPED_CHARACTERS;
int _channel = DefaultTokenChannel;
// CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ ( F_NEW_LINE_CHARACTER |
F_POUND_SIGN ) ( F_INPUT_CHARACTER )
DebugEnterAlt(1);
// CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ ( F_NEW_LINE_CHARACTER |
F_POUND_SIGN ) ( F_INPUT_CHARACTER )
{
DebugLocation(197, 5);
if (!(( false )))
{
throw new FailedPredicateException(input, "PP_SKIPPED_CHARACTERS", " False()
");
}

Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin (which
is wonderful) and build integration to generate the lexer/parser (also
wonderful) and then running on top of your CSharp port of the runtime. If
you think this is a bug and you'd like to have a look at the repro please
let me know. The project is open source up on CodePlex.

Thanks,
Chris

From sharwell at pixelminegames.com  Thu Jul 28 14:37:05 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 28 Jul 2011 16:37:05 -0500
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>
Message-ID: <00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>

Hi Chris,

 

Lookahead prediction occurs before predicates are evaluated. If fixed
lookahead uniquely determines the alternative with a  semantic predicate,
the predicate will not be evaluated as part of the decision process. I'm
guessing (but not 100% sure) if you use a gated semantic predicate, then it
will not be entering the rule:

 

PP_SKIPPED_CHARACTERS

  : {false}? => ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
F_NEW_LINE )*

  ;

 

Also, a word of warning: this lexer rule can match a zero-length character
span, which could result in an infinite loop. You should always ensure that
every path through any lexer rule that's not marked "fragment" will consume
at least 1 character. There's also a bug with certain exceptions in the
lexer that can cause infinite loops - this has been resolved for release 3.4
but I haven't released it yet.

 

Sam

 

From: chris king [mailto:kingces95 at gmail.com] 
Sent: Thursday, July 28, 2011 4:19 PM
To: antlr-interest at antlr.org; Sam Harwell
Subject: Have I found an Antlr CSharp3 lexer bug if...

 

Have I found an Antlr lexer CSharp3 bug if I can alter program execution
(exception instead of no exception) by introducing a lexer production with a
predicate that is always false? For example

 

PP_SKIPPED_CHARACTERS

  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER* F_NEW_LINE
)*

  ;

 

I would think that such a production should always be ignored because it's
predicate is always false and therefore would never alter program execution.
Yet I'm seeing a change in the execution of my program. I'm seeing it enter
this function and throw a FailedPredicateException. I wouldn't have expected
that this function should ever even have been executed because the predicate
is always false.

 

     [GrammarRule("PP_SKIPPED_CHARACTERS")]

     private void mPP_SKIPPED_CHARACTERS()

     {

          EnterRule_PP_SKIPPED_CHARACTERS();

          EnterRule("PP_SKIPPED_CHARACTERS", 31);

          TraceIn("PP_SKIPPED_CHARACTERS", 31);

          try

          {

              int _type = PP_SKIPPED_CHARACTERS;

              int _channel = DefaultTokenChannel;

              // CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ (
F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )

              DebugEnterAlt(1);

              // CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ (
F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )

              {

              DebugLocation(197, 5);

              if (!(( false )))

              {

                   throw new FailedPredicateException(input,
"PP_SKIPPED_CHARACTERS", " False() ");

              }

 

Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin (which
is wonderful) and build integration to generate the lexer/parser (also
wonderful) and then running on top of your CSharp port of the runtime. If
you think this is a bug and you'd like to have a look at the repro please
let me know. The project is open source up on CodePlex. 

 

Thanks,
Chris


From kingces95 at gmail.com  Thu Jul 28 17:04:51 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 28 Jul 2011 17:04:51 -0700
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>
	<00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>
Message-ID: <CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com>

Sam, thanks so much for taking the time to look at that. If I could, let me
try and explain what I'm trying to do and tell me if you think it's
possible. For my own edification, I'm trying to implement a C# grammar. I'd
like to implement the pre-processor at the moment. Implementations I've seen
generally using only a lexer and use some type of trick to maintain a stack
(e.g. for nested ifdefs and simple if/elif expressions). I figure why not
use a parser to maintain the stack -- isn't that the reason
for existence for parsers anyway? So that's what I'm trying to do -- use a
lexer and parser to implement the pre-processor.

The big difficulty is changing the lexer rules depending on whether I'm in a
#if def block that is active or not. I figured with ANTLR I'd be able to
compute if the #ifdef block is active and then throw a switch to either
parse tokens and hand those tokens off to the C# parser or consume and
ignore all input up to the next pre-processor instruction thereby disabling
that chunk of code. If I can do this then I could put the pre-processor and
parser in the same file and construct the AST in one pass! Would that be
cool? And clean? And maybe worth making a goal for ANTLR to be able to do?
:)

To be a bit more concrete: Here is the production for matching newline at
the end of pre-processor instructions. The idea would be to enable
PP_SKIPPED_CHARACTERS only if inside a disabling #ifdef block which would
consume all characters till the next pre-processing instruction.

pp_new_line
  : SINGLE_LINE_COMMENT? ((NEW_LINE! PP_SKIPPED_CHARACTERS) | EOF!)
  ;


Here is what I was hoping would work as PP_SKIPPED_CHARACTERS. Unfortunately I
don't seem to understand how to flip lexer rules on and off well enough to
make this work...


PP_SKIPPED_CHARACTERS
  : { IfDefedOut }? ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN)
F_INPUT_CHARACTER* F_NEW_LINE )*
  ;


I hope that is enough to give you an idea of what I'm trying to do. This
approach just seems so elegant to me (by which I mean almost all declarative
-- no need to sprinkle procedural logic in among my productions to maintain
a stack or whatever) that I'd hope that it would be do able in ANTLR. What
do you think? Is it a worthy goal? Does it feel possible to you? If not, is
a goal worth trying to achieve?

Thanks,
Chris



On Thu, Jul 28, 2011 at 2:37 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> Hi Chris,****
>
> ** **
>
> Lookahead prediction occurs before predicates are evaluated. If fixed
> lookahead uniquely determines the alternative with a  semantic predicate,
> the predicate will not be evaluated as part of the decision process. I?m
> guessing (but not 100% sure) if you use a gated semantic predicate, then it
> will not be entering the rule:****
>
> ** **
>
> PP_SKIPPED_CHARACTERS****
>
>   : {false}? => ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*****
>
>   ;****
>
> ** **
>
> Also, a word of warning: this lexer rule can match a zero-length character
> span, which could result in an infinite loop. You should always ensure that
> every path through any lexer rule that?s not marked ?fragment? will consume
> at least 1 character. There?s also a bug with certain exceptions in the
> lexer that can cause infinite loops ? this has been resolved for release 3.4
> but I haven?t released it yet.****
>
> ** **
>
> Sam****
>
> ** **
>
> *From:* chris king [mailto:kingces95 at gmail.com]
> *Sent:* Thursday, July 28, 2011 4:19 PM
> *To:* antlr-interest at antlr.org; Sam Harwell
> *Subject:* Have I found an Antlr CSharp3 lexer bug if...****
>
> ** **
>
> Have I found an Antlr lexer CSharp3 bug if I can alter program execution
> (exception instead of no exception) by introducing a lexer production with a
> predicate that is always false? For example****
>
> ** **
>
> PP_SKIPPED_CHARACTERS****
>
>   : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*****
>
>   ;****
>
> ** **
>
> I would think that such a production should always be ignored because it's
> predicate is always false and therefore would never alter program execution.
> Yet I'm seeing a change in the execution of my program. I'm seeing it enter
> this function and throw a FailedPredicateException. I wouldn't have expected
> that this function should ever even have been executed because the predicate
> is always false.****
>
> ** **
>
>      [GrammarRule("PP_SKIPPED_CHARACTERS")]****
>
>      private void mPP_SKIPPED_CHARACTERS()****
>
>      {****
>
>           EnterRule_PP_SKIPPED_CHARACTERS();****
>
>           EnterRule("PP_SKIPPED_CHARACTERS", 31);****
>
>           TraceIn("PP_SKIPPED_CHARACTERS", 31);****
>
>           try****
>
>           {****
>
>               int _type = PP_SKIPPED_CHARACTERS;****
>
>               int _channel = DefaultTokenChannel;****
>
>               // CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )****
>
>               DebugEnterAlt(1);****
>
>               // CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )****
>
>               {****
>
>               DebugLocation(197, 5);****
>
>               if (!(( false )))****
>
>               {****
>
>                    throw new FailedPredicateException(input,
> "PP_SKIPPED_CHARACTERS", " False() ");****
>
>               }****
>
> ** **
>
> Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin
> (which is wonderful) and build integration to generate the lexer/parser
> (also wonderful) and then running on top of your CSharp port of the runtime.
> If you think this is a bug and you'd like to have a look at the repro please
> let me know. The project is open source up on CodePlex. ****
>
> ** **
>
> Thanks,
> Chris****
>

From miller.garym at gmail.com  Thu Jul 28 17:21:45 2011
From: miller.garym at gmail.com (Gary Miller)
Date: Fri, 29 Jul 2011 10:21:45 +1000
Subject: [antlr-interest] Interest in a Go lang port
Message-ID: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>

Hey All,

Would anyone be interested in collaborating on a port of ANTLR to the Go
lanaguage <http://golang.org/>?

Regards
Gary
warning: I'm a total n00b to porting ANTLR and Go.

From parsiad.azimzadeh at gmail.com  Thu Jul 28 17:50:54 2011
From: parsiad.azimzadeh at gmail.com (Parsiad Azimzadeh)
Date: Thu, 28 Jul 2011 17:50:54 -0700
Subject: [antlr-interest] Interest in a Go lang port
In-Reply-To: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
References: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
Message-ID: <CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>

> Would anyone be interested in collaborating on a port of ANTLR to the Go
> lanaguage <http://golang.org/>?

Interesting. What are your motivations for porting Go to ANTLR? I
believe the Go compiler is open source.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

From gary at sumwise.com  Thu Jul 28 18:12:26 2011
From: gary at sumwise.com (Gary Miller)
Date: Fri, 29 Jul 2011 11:12:26 +1000
Subject: [antlr-interest] Interest in a Go lang port
In-Reply-To: <CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
References: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
	<CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
Message-ID: <CAFCNb3gX3HaWdNcJ88QWu+9MbHndX8HO62s9NPnF69LyL-Fbvg@mail.gmail.com>

yep, Go is open source.

Motivations
- Neat language (imo).
  One of the few with currency primitives.
  Designed with orthogonality as a strong driving force.
  Love the separation of interface and implementation inheritance.

- Is now a Google AppEngine supported language.
  The only compiled language supported in a PaaS that I know of.

- C like, plus object oriented, so a port shouldn't be that difficult
(probably naive on my part).

- Doesn't yet have a parser generator that targets it (again, as far as I
know)

- I'm interested in learning more about Go and ANTLR.

Regards
Gary

On Fri, Jul 29, 2011 at 10:50 AM, Parsiad Azimzadeh <
parsiad.azimzadeh at gmail.com> wrote:

> > Would anyone be interested in collaborating on a port of ANTLR to the Go
> > lanaguage <http://golang.org/>?
>
> Interesting. What are your motivations for porting Go to ANTLR? I
> believe the Go compiler is open source.
>
> --
> Parsiad Azimzadeh
> http://sfu.ca/~paa4
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Thu Jul 28 18:55:34 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 28 Jul 2011 20:55:34 -0500
Subject: [antlr-interest] Interest in a Go lang port
In-Reply-To: <CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
References: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
	<CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
Message-ID: <011001cc4d92$9b7127f0$d25377d0$@pixelminegames.com>

Hi Parsiad,

I believe he's referring to creating a new ANTLR target/runtime for Go
(option language=Go), as opposed to using ANTLR to compile Go files into
executable code.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Parsiad Azimzadeh
Sent: Thursday, July 28, 2011 7:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Interest in a Go lang port

> Would anyone be interested in collaborating on a port of ANTLR to the Go
> lanaguage <http://golang.org/>?

Interesting. What are your motivations for porting Go to ANTLR? I
believe the Go compiler is open source.

-- 
Parsiad Azimzadeh
http://sfu.ca/~paa4

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gary at sumwise.com  Thu Jul 28 19:01:49 2011
From: gary at sumwise.com (Gary Miller)
Date: Fri, 29 Jul 2011 12:01:49 +1000
Subject: [antlr-interest] Interest in a Go lang port
In-Reply-To: <011001cc4d92$9b7127f0$d25377d0$@pixelminegames.com>
References: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
	<CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
	<011001cc4d92$9b7127f0$d25377d0$@pixelminegames.com>
Message-ID: <CAFCNb3jJDkhjdOcipe2geeQCXADz+f685WCRRD4Ba0s_Df3Mow@mail.gmail.com>

Sam,

Exactly, thanks for the clarification and sorry about any confusion.

Anyone interested?

Gary

On Fri, Jul 29, 2011 at 11:55 AM, Sam Harwell
<sharwell at pixelminegames.com>wrote:

> Hi Parsiad,
>
> I believe he's referring to creating a new ANTLR target/runtime for Go
> (option language=Go), as opposed to using ANTLR to compile Go files into
> executable code.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Parsiad Azimzadeh
> Sent: Thursday, July 28, 2011 7:51 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Interest in a Go lang port
>
> > Would anyone be interested in collaborating on a port of ANTLR to the Go
> > lanaguage <http://golang.org/>?
>
> Interesting. What are your motivations for porting Go to ANTLR? I
> believe the Go compiler is open source.
>
> --
> Parsiad Azimzadeh
> http://sfu.ca/~paa4
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gary at sumwise.com  Thu Jul 28 19:23:37 2011
From: gary at sumwise.com (Gary Miller)
Date: Fri, 29 Jul 2011 12:23:37 +1000
Subject: [antlr-interest] Interest in a Go lang port
In-Reply-To: <CAFCNb3jJDkhjdOcipe2geeQCXADz+f685WCRRD4Ba0s_Df3Mow@mail.gmail.com>
References: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
	<CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
	<011001cc4d92$9b7127f0$d25377d0$@pixelminegames.com>
	<CAFCNb3jJDkhjdOcipe2geeQCXADz+f685WCRRD4Ba0s_Df3Mow@mail.gmail.com>
Message-ID: <CAFCNb3gR4Q4g7NWBBPpOwyBH7DPmA5J5LuqoUTEgbB=G3e5BOA@mail.gmail.com>

If you're interested in having a look and some hand written lexing code in
Go by Rob Pike.
The lexer in the experimental html templates is a good examples.
https://code.google.com/p/go/source/browse/src/pkg/exp/template/lex.go

A good intro to Go is
http://golang.org/doc/GoCourseDay1.pdf

Regards
Gary


On Fri, Jul 29, 2011 at 12:01 PM, Gary Miller <gary at sumwise.com> wrote:

> Sam,
>
> Exactly, thanks for the clarification and sorry about any confusion.
>
> Anyone interested?
>
> Gary
>
>
> On Fri, Jul 29, 2011 at 11:55 AM, Sam Harwell <sharwell at pixelminegames.com
> > wrote:
>
>> Hi Parsiad,
>>
>> I believe he's referring to creating a new ANTLR target/runtime for Go
>> (option language=Go), as opposed to using ANTLR to compile Go files into
>> executable code.
>>
>> Sam
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Parsiad Azimzadeh
>> Sent: Thursday, July 28, 2011 7:51 PM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Interest in a Go lang port
>>
>> > Would anyone be interested in collaborating on a port of ANTLR to the Go
>> > lanaguage <http://golang.org/>?
>>
>> Interesting. What are your motivations for porting Go to ANTLR? I
>> believe the Go compiler is open source.
>>
>> --
>> Parsiad Azimzadeh
>> http://sfu.ca/~paa4
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From sharwell at pixelminegames.com  Thu Jul 28 19:26:28 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 28 Jul 2011 21:26:28 -0500
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>	<00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>
	<CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com>
Message-ID: <011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>

Fortunately the C# preprocessor is extremely basic, so the task shouldn't be
hard at all. To start with, it's important to understand that the
preprocessor *must* be implemented with the lexer, because the following is
valid:

 

#if false

@"

#endif

 

If the @" is processed by the lexer, it will consume the #endif as part of
the verbatim string and mess everything up. Here's what I would do:

 

.         Implement a basic lexer rule to consume the characters following
the #directive, up to but not including a single line comment marker //

.         Use a separate expression grammar to parse preprocessor
expressions.

.         Set a flag in the lexer if the next code is excluded code.

.         Override NextToken for the lexer, and if the flag is set to true,
call out to a rule other than mTokens (a basic implementation of lexer
modes).

 

When I release version 3.4 of the runtime, the Lexer class has a new method
ParseNextToken which can be overridden to help perform this task. I haven't
tested the following, but it's what I would start with if I wanted to make a
C# preprocessor.

 

fragment PP_DEFINE:;

fragment PP_UNDEF:;

fragment PP_IF:;

fragment PP_ELSE:;

fragment PP_ENDIF:;

 

PP_TOKEN

        :       {input.CharPositionInLine == 0}? =>

                WS? '#' WS?

                (       'define' {$type=PP_DEFINE;}

                |       'undef' {$type=PP_UNDEF;}

                |       'if'    {$type=PP_IF;}

                |       'else'  {$type=PP_ELSE;}

                |       'endif' {$type=PP_ENDIF;}

                )

                ~('\r' | '\n' | '/')*

        ;

 

fragment

EXCLUDED_CODE

        :       PP_TOKEN

        |       (       WS

                |       ~(' ' | '\t' | '#')+

                )

                {state.type = EXCLUDED_CODE; state.channel = Hidden;}

        ;

 

WS

        :       (' ' | '\t')+

        ;

 

 

 

 

partial class CSharpLexer {

 

private readonly HashSet<string> _definitions = new HashSet<string>(new
string[] { "true" });

private readonly Stack<IncludedCodeState> _includedCode = new
Stack<IncludedCodeState>(new IncludedCodeState[] { new
IncludedCodeState(true, true) });

private bool _foundToken = false;

 

public override IToken NextToken() {

    while (true) {

        IToken token = base.NextToken();

 

        switch (token.Type) {

        case PP_DEFINE:

            if (_includedCode.Peek().IsIncluded)

            {

                if (_foundToken)

                    throw new RecognitionException("Cannot define/undefine
preprocessor symbols after first token in file");

 

                string name = token.Text;

                name = name.Substring(name.IndexOf("define") + 6).Trim();

                if (name == "true" || !Regex.IsMatch(name,
@"^[A-Za-z_][\w]*$"))

                    throw new RecognitionException("Expected identifier in
preprocessor.");

 

                _definitions.Add(name);

            }

 

            continue;

 

        case PP_UNDEF:

            if (_includedCode.Peek().IsIncluded)

            {

                if (_foundToken)

                    throw new RecognitionException("Cannot define/undefine
preprocessor symbols after first token in file");

 

                string name = token.Text;

                name = name.Substring(name.IndexOf("undef") + 5).Trim();

                if (name == "true" || !Regex.IsMatch(name,
@"^[A-Za-z_][\w]*$"))

                    throw new RecognitionException("Expected identifier in
preprocessor.");

 

                _definitions.Remove(name);

            }

 

            continue;

 

        case PP_IF:

            {

                string expression = token.Text;

                expression = expression.Substring(expression.IndexOf("if") +
2).Trim();

                _includedCode.Push(new
IncludedCodeState(EvaluatePreprocessorExpression(expression), false));

            }

            continue;

 

        case PP_ENDIF:

            if (_includedCode.Count == 1)

                throw new RecognitionException("Mismatched #endif in
preprocessor.");

            _includedCode.Pop();

            continue;

 

        case PP_ELSE:

            if (_includedCode.Peek().FoundElseDirective)

                throw new RecognitionException("Mismatched #else in
preprocessor.");

            _includedCode.Push(_includedCode.Pop().ElseState);

            continue;

 

        default:

            if (token.Channel == TokenChannels.Default)

                _foundToken = true;

            return token;

        }

    }

}

 

private bool? EvaluatePreprocessorExpression(string expression) {

    if (!_includedCode.Peek().IsIncluded)

        return null;

    throw new NotImplementedException("Use a very simple expression parser
here to parse evaluate the Boolean expression.");

}

 

protected override void ParseNextToken() {

    if (!_includedCode.Peek().IsIncluded)

        mEXCLUDED_CODE();

    else

        base.ParseNextToken();

}

 

public struct IncludedCodeState {

    public readonly bool FoundElseDirective;

    private readonly bool? _isIncluded;

 

    public IncludedCodeState(bool? isIncluded, bool foundElseDirective) {

        _isIncluded = isIncluded;

        FoundElseDirective = foundElseDirective;

    }

 

    public bool IsIncluded { get { return _isIncluded ?? false; } }

 

    public IncludedCodeState ElseState {

        get {

            if (_isIncluded == null)

                return new IncludedCodeState(_isIncluded, true);

            return new IncludedCodeState(!_isIncluded, true);

        }

    }

}

}

 

Sam

 

From: chris king [mailto:kingces95 at gmail.com] 
Sent: Thursday, July 28, 2011 7:05 PM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: Have I found an Antlr CSharp3 lexer bug if...

 

Sam, thanks so much for taking the time to look at that. If I could, let me
try and explain what I'm trying to do and tell me if you think it's
possible. For my own edification, I'm trying to implement a C# grammar. I'd
like to implement the pre-processor at the moment. Implementations I've seen
generally using only a lexer and use some type of trick to maintain a stack
(e.g. for nested ifdefs and simple if/elif expressions). I figure why not
use a parser to maintain the stack -- isn't that the reason for existence
for parsers anyway? So that's what I'm trying to do -- use a lexer and
parser to implement the pre-processor. 

 

The big difficulty is changing the lexer rules depending on whether I'm in a
#if def block that is active or not. I figured with ANTLR I'd be able to
compute if the #ifdef block is active and then throw a switch to either
parse tokens and hand those tokens off to the C# parser or consume and
ignore all input up to the next pre-processor instruction thereby disabling
that chunk of code. If I can do this then I could put the pre-processor and
parser in the same file and construct the AST in one pass! Would that be
cool? And clean? And maybe worth making a goal for ANTLR to be able to do?
:)

 

To be a bit more concrete: Here is the production for matching newline at
the end of pre-processor instructions. The idea would be to enable
PP_SKIPPED_CHARACTERS only if inside a disabling #ifdef block which would
consume all characters till the next pre-processing instruction.

 

pp_new_line

  : SINGLE_LINE_COMMENT? ((NEW_LINE! PP_SKIPPED_CHARACTERS) | EOF!)

  ;

 

Here is what I was hoping would work as PP_SKIPPED_CHARACTERS. Unfortunately
I don't seem to understand how to flip lexer rules on and off well enough to
make this work...

 

PP_SKIPPED_CHARACTERS

  : { IfDefedOut }? ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN)
F_INPUT_CHARACTER* F_NEW_LINE )*

  ;

 

I hope that is enough to give you an idea of what I'm trying to do. This
approach just seems so elegant to me (by which I mean almost all declarative
-- no need to sprinkle procedural logic in among my productions to maintain
a stack or whatever) that I'd hope that it would be do able in ANTLR. What
do you think? Is it a worthy goal? Does it feel possible to you? If not, is
a goal worth trying to achieve?

 

Thanks,
Chris

 

 

 

On Thu, Jul 28, 2011 at 2:37 PM, Sam Harwell <sharwell at pixelminegames.com>
wrote:

Hi Chris,

 

Lookahead prediction occurs before predicates are evaluated. If fixed
lookahead uniquely determines the alternative with a  semantic predicate,
the predicate will not be evaluated as part of the decision process. I'm
guessing (but not 100% sure) if you use a gated semantic predicate, then it
will not be entering the rule:

 

PP_SKIPPED_CHARACTERS

  : {false}? => ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
F_NEW_LINE )*

  ;

 

Also, a word of warning: this lexer rule can match a zero-length character
span, which could result in an infinite loop. You should always ensure that
every path through any lexer rule that's not marked "fragment" will consume
at least 1 character. There's also a bug with certain exceptions in the
lexer that can cause infinite loops - this has been resolved for release 3.4
but I haven't released it yet.

 

Sam

 

From: chris king [mailto:kingces95 at gmail.com] 
Sent: Thursday, July 28, 2011 4:19 PM
To: antlr-interest at antlr.org; Sam Harwell
Subject: Have I found an Antlr CSharp3 lexer bug if...

 

Have I found an Antlr lexer CSharp3 bug if I can alter program execution
(exception instead of no exception) by introducing a lexer production with a
predicate that is always false? For example

 

PP_SKIPPED_CHARACTERS

  : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER* F_NEW_LINE
)*

  ;

 

I would think that such a production should always be ignored because it's
predicate is always false and therefore would never alter program execution.
Yet I'm seeing a change in the execution of my program. I'm seeing it enter
this function and throw a FailedPredicateException. I wouldn't have expected
that this function should ever even have been executed because the predicate
is always false.

 

     [GrammarRule("PP_SKIPPED_CHARACTERS")]

     private void mPP_SKIPPED_CHARACTERS()

     {

          EnterRule_PP_SKIPPED_CHARACTERS();

          EnterRule("PP_SKIPPED_CHARACTERS", 31);

          TraceIn("PP_SKIPPED_CHARACTERS", 31);

          try

          {

              int _type = PP_SKIPPED_CHARACTERS;

              int _channel = DefaultTokenChannel;

              // CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ (
F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )

              DebugEnterAlt(1);

              // CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ (
F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )

              {

              DebugLocation(197, 5);

              if (!(( false )))

              {

                   throw new FailedPredicateException(input,
"PP_SKIPPED_CHARACTERS", " False() ");

              }

 

Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin (which
is wonderful) and build integration to generate the lexer/parser (also
wonderful) and then running on top of your CSharp port of the runtime. If
you think this is a bug and you'd like to have a look at the repro please
let me know. The project is open source up on CodePlex. 

 

Thanks,
Chris

 


From kingces95 at gmail.com  Thu Jul 28 23:42:10 2011
From: kingces95 at gmail.com (chris king)
Date: Thu, 28 Jul 2011 23:42:10 -0700
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>
	<00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>
	<CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com>
	<011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>
Message-ID: <CAJQwtsgbcbZfXZu_pGaawgB=jN4CzDBJubzXTWTj=egeMhMb5A@mail.gmail.com>

Sam, thanks again for taking the time to put that together for me. I owe you
a beer. And if I had a deadline to meet I'd copy paste your code and move
on. But what did Terence say in his book? Why spend 5 minutes doing
something procedurally when you can spend 5 weeks doing it declaratively?
For better or for worse, I think I suffer from the same affliction. :) So
please allow me to play Devils Advocate for a second and try and propose a
declarative solution using both lexer and parser (and possibly requiring new
ANTLR declarations). And finally I'll hop up on my soap box and suggest that
such a solution is a worthy goal of ANTLR.

Basically the idea is to take what you've done procedurally, generalize it,
and expose it declaratively. To do this I'd introducing declarative syntax
which would allow lexer rules to be partitioned and then allow those
partitions to be toggled on and off based on context known to the parser.
Given that, I think the pre-processor could be done without procedural
logic. The partitioning syntax could be borrowed from C# custom attribute
syntax. So

// No declaration so in default partition
VERBATIM_STRING_LITERAL
  : '@"' F_VERBATIM_STRING_LITERAL_CHARACTER* '"'
  ;


[Partition("PP")] // Part of pre-processor partition
DEFINE: F_POUND_SIGN 'define';

[Partition("IfDefedOut")] // Only member of if-defed-out partition
PP_SKIPPED_CHARACTERS
  : ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN) F_INPUT_CHARACTER* F_NEW_LINE
)*
  ;

Putting it together this is how it could solve the verbatim string problem:

#if false
@"
#endif


We start by partition our lexer rules into three groups. First (1) would be
pre-processor, second (2) C# grammer (including the verbatim string rule),
and third (3) would be the rule to "consume all text till the next pragma"
rule. After establishing the partitions we need to add logic to toggle them
on and off. We'd add that logic to the #if/#elif/#else parser rules. That
logic would detect that the #if false expression trivially evaluates to
false and would disable the (2) C# partition and activate the third (3)
"consume all text till the next pragma" partition thereby deactivating the
verbatim rule and allowing all text up to the #endif to be consumed.

Basically all this is repeating exactly what you've done procedurally. You
already established these groups in your solution. The first (1) is the set
of rules in the lexer, the second (2) is implemented separately and handed
tokens as they are produced by the pre-processor, and the third (3) is
implemented procedurally with the regexs. And you switch to that third (3)
partition and disable the second (2) at the point where you intercept the
the input stream. So both approaches are basically doing the same thing.


Finally, why would ANTLR want do do this? Well, because enabling this
scenario is right up ANTLRs design-philosophy-alley! ANTLR makes common
compiler building tasks simple. And it seems to me that pre-processors fall
into this bucket of
common-compiler-problems-that-could-have-simpler-solutions. And that the C#
pre-processor is so extremely basic, as you say, makes it ripe as a first
goal of a declarative solution. I know pre-processors have always been done
in the lexer but I got the feeling reading Terence's book that he was more
than happy to take a second look at common compiler problems and solve 'em
in different ways by introducing previously unheard of concepts (at least to
me): Lexers and parsers in one file. Semantic and syntactic
predicates. Infinite look ahead with back tracking. And my favorite example
of ANTLR simplifying the declarative syntax for a common parsing
problem is DELIMITED_COMMENT:
'/*' .* '*/'; Wow. Why wasn't it that easy with lex/yacc?! Maybe the time
has come for us to take a look at the idea that the pre-processor needs to
be done in the lexer and see if we can simplify that too!

So, what do you think? Can it be done?

And thanks again for your time and the VS tools!

Thanks,
Chris



On Thu, Jul 28, 2011 at 7:26 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> Fortunately the C# preprocessor is extremely basic, so the task shouldn?t
> be hard at all. To start with, it?s important to understand that the
> preprocessor **must** be implemented with the lexer, because the following
> is valid:****
>
> ** **
>
> #if false****
>
> @"****
>
> #endif****
>
> ** **
>
> If the @" is processed by the lexer, it will consume the #endif as part of
> the verbatim string and mess everything up. Here?s what I would do:****
>
> ** **
>
> **?         **Implement a basic lexer rule to consume the characters
> following the #directive, up to but not including a single line comment
> marker //****
>
> **?         **Use a separate expression grammar to parse preprocessor
> expressions.****
>
> **?         **Set a flag in the lexer if the next code is excluded code.**
> **
>
> **?         **Override NextToken for the lexer, and if the flag is set to
> true, call out to a rule other than mTokens (a basic implementation of lexer
> modes).****
>
> ** **
>
> When I release version 3.4 of the runtime, the Lexer class has a new method
> ParseNextToken which can be overridden to help perform this task. I haven?t
> tested the following, but it?s what I would start with if I wanted to make a
> C# preprocessor.****
>
> ** **
>
> fragment PP_DEFINE:;****
>
> fragment PP_UNDEF:;****
>
> fragment PP_IF:;****
>
> fragment PP_ELSE:;****
>
> fragment PP_ENDIF:;****
>
> ** **
>
> PP_TOKEN****
>
>         :       {input.CharPositionInLine == 0}? =>****
>
>                 WS? '#' WS?****
>
>                 (       'define' {$type=PP_DEFINE;}****
>
>                 |       'undef' {$type=PP_UNDEF;}****
>
>                 |       'if'    {$type=PP_IF;}****
>
>                 |       'else'  {$type=PP_ELSE;}****
>
>                 |       'endif' {$type=PP_ENDIF;}****
>
>                 )****
>
>                 ~('\r' | '\n' | '/')*****
>
>         ;****
>
> ** **
>
> fragment****
>
> EXCLUDED_CODE****
>
>         :       PP_TOKEN****
>
>         |       (       WS****
>
>                 |       ~(' ' | '\t' | '#')+****
>
>                 )****
>
>                 {state.type = EXCLUDED_CODE; state.channel = Hidden;}****
>
>         ;****
>
> ** **
>
> WS****
>
>         :       (' ' | '\t')+****
>
>         ;****
>
> ** **
>
> ** **
>
> ** **
>
> ** **
>
> partial class CSharpLexer {****
>
> ** **
>
> private readonly HashSet<string> _definitions = new HashSet<string>(new
> string[] { "true" });****
>
> private readonly Stack<IncludedCodeState> _includedCode = new Stack<
> IncludedCodeState>(new IncludedCodeState[] { new IncludedCodeState(true,
> true) });****
>
> private bool _foundToken = false;****
>
> ** **
>
> public override IToken NextToken() {****
>
>     while (true) {****
>
>         IToken token = base.NextToken();****
>
> ** **
>
>         switch (token.Type) {****
>
>         case PP_DEFINE:****
>
>             if (_includedCode.Peek().IsIncluded)****
>
>             {****
>
>                 if (_foundToken)****
>
>                     throw new RecognitionException("Cannot define/undefine
> preprocessor symbols after first token in file");****
>
> ** **
>
>                 string name = token.Text;****
>
>                 name = name.Substring(name.IndexOf("define") + 6).Trim();*
> ***
>
>                 if (name == "true" || !Regex.IsMatch(name,
> @"^[A-Za-z_][\w]*$"))****
>
>                     throw new RecognitionException("Expected identifier in
> preprocessor.");****
>
> ** **
>
>                 _definitions.Add(name);****
>
>             }****
>
> ** **
>
>             continue;****
>
> ** **
>
>         case PP_UNDEF:****
>
>             if (_includedCode.Peek().IsIncluded)****
>
>             {****
>
>                 if (_foundToken)****
>
>                     throw new RecognitionException("Cannot define/undefine
> preprocessor symbols after first token in file");****
>
> ** **
>
>                 string name = token.Text;****
>
>                 name = name.Substring(name.IndexOf("undef") + 5).Trim();**
> **
>
>                 if (name == "true" || !Regex.IsMatch(name,
> @"^[A-Za-z_][\w]*$"))****
>
>                     throw new RecognitionException("Expected identifier in
> preprocessor.");****
>
> ** **
>
>                 _definitions.Remove(name);****
>
>             }****
>
> ** **
>
>             continue;****
>
> ** **
>
>         case PP_IF:****
>
>             {****
>
>                 string expression = token.Text;****
>
>                 expression = expression.Substring(expression.IndexOf("if")
> + 2).Trim();****
>
>                 _includedCode.Push(new IncludedCodeState(EvaluatePreprocessorExpression(expression),
> false));****
>
>             }****
>
>             continue;****
>
> ** **
>
>         case PP_ENDIF:****
>
>             if (_includedCode.Count == 1)****
>
>                 throw new RecognitionException("Mismatched #endif in
> preprocessor.");****
>
>             _includedCode.Pop();****
>
>             continue;****
>
> ** **
>
>         case PP_ELSE:****
>
>             if (_includedCode.Peek().FoundElseDirective)****
>
>                 throw new RecognitionException("Mismatched #else in
> preprocessor.");****
>
>             _includedCode.Push(_includedCode.Pop().ElseState);****
>
>             continue;****
>
> ** **
>
>         default:****
>
>             if (token.Channel == TokenChannels.Default)****
>
>                 _foundToken = true;****
>
>             return token;****
>
>         }****
>
>     }****
>
> }****
>
> ** **
>
> private bool? EvaluatePreprocessorExpression(string expression) {****
>
>     if (!_includedCode.Peek().IsIncluded)****
>
>         return null;****
>
>     throw new NotImplementedException("Use a very simple expression parser
> here to parse evaluate the Boolean expression.");****
>
> }****
>
> ** **
>
> protected override void ParseNextToken() {****
>
>     if (!_includedCode.Peek().IsIncluded)****
>
>         mEXCLUDED_CODE();****
>
>     else****
>
>         base.ParseNextToken();****
>
> }****
>
> ** **
>
> public struct IncludedCodeState {****
>
>     public readonly bool FoundElseDirective;****
>
>     private readonly bool? _isIncluded;****
>
> ** **
>
>     public IncludedCodeState(bool? isIncluded, bool foundElseDirective) {*
> ***
>
>         _isIncluded = isIncluded;****
>
>         FoundElseDirective = foundElseDirective;****
>
>     }****
>
> ** **
>
>     public bool IsIncluded { get { return _isIncluded ?? false; } }****
>
> ** **
>
>     public IncludedCodeState ElseState {****
>
>         get {****
>
>             if (_isIncluded == null)****
>
>                 return new IncludedCodeState(_isIncluded, true);****
>
>             return new IncludedCodeState(!_isIncluded, true);****
>
>         }****
>
>     }****
>
> }****
>
> }****
>
> ** **
>
> Sam****
>
> ** **
>
> *From:* chris king [mailto:kingces95 at gmail.com]
> *Sent:* Thursday, July 28, 2011 7:05 PM
> *To:* Sam Harwell
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: Have I found an Antlr CSharp3 lexer bug if...****
>
> ** **
>
> Sam, thanks so much for taking the time to look at that. If I could, let me
> try and explain what I'm trying to do and tell me if you think it's
> possible. For my own edification, I'm trying to implement a C# grammar. I'd
> like to implement the pre-processor at the moment. Implementations I've seen
> generally using only a lexer and use some type of trick to maintain a stack
> (e.g. for nested ifdefs and simple if/elif expressions). I figure why not
> use a parser to maintain the stack -- isn't that the reason
> for existence for parsers anyway? So that's what I'm trying to do -- use a
> lexer and parser to implement the pre-processor. ****
>
> ** **
>
> The big difficulty is changing the lexer rules depending on whether I'm in
> a #if def block that is active or not. I figured with ANTLR I'd be able to
> compute if the #ifdef block is active and then throw a switch to either
> parse tokens and hand those tokens off to the C# parser or consume and
> ignore all input up to the next pre-processor instruction thereby disabling
> that chunk of code. If I can do this then I could put the pre-processor and
> parser in the same file and construct the AST in one pass! Would that be
> cool? And clean? And maybe worth making a goal for ANTLR to be able to do?
> :)****
>
> ** **
>
> To be a bit more concrete: Here is the production for matching newline at
> the end of pre-processor instructions. The idea would be to enable
> PP_SKIPPED_CHARACTERS only if inside a disabling #ifdef block which would
> consume all characters till the next pre-processing instruction.****
>
> ** **
>
> pp_new_line****
>
>   : SINGLE_LINE_COMMENT? ((NEW_LINE! PP_SKIPPED_CHARACTERS) | EOF!)****
>
>   ;****
>
> ** **
>
> Here is what I was hoping would work as PP_SKIPPED_CHARACTERS. Unfortunately I
> don't seem to understand how to flip lexer rules on and off well enough to
> make this work...****
>
> ** **
>
> PP_SKIPPED_CHARACTERS****
>
>   : { IfDefedOut }? ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN)
> F_INPUT_CHARACTER* F_NEW_LINE )*****
>
>   ;****
>
> ** **
>
> I hope that is enough to give you an idea of what I'm trying to do. This
> approach just seems so elegant to me (by which I mean almost all declarative
> -- no need to sprinkle procedural logic in among my productions to maintain
> a stack or whatever) that I'd hope that it would be do able in ANTLR. What
> do you think? Is it a worthy goal? Does it feel possible to you? If not, is
> a goal worth trying to achieve?****
>
> ** **
>
> Thanks,
> Chris****
>
> ** **
>
> ** **
>
> ** **
>
> On Thu, Jul 28, 2011 at 2:37 PM, Sam Harwell <sharwell at pixelminegames.com>
> wrote:****
>
> Hi Chris,****
>
>  ****
>
> Lookahead prediction occurs before predicates are evaluated. If fixed
> lookahead uniquely determines the alternative with a  semantic predicate,
> the predicate will not be evaluated as part of the decision process. I?m
> guessing (but not 100% sure) if you use a gated semantic predicate, then it
> will not be entering the rule:****
>
>  ****
>
> PP_SKIPPED_CHARACTERS****
>
>   : {false}? => ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*****
>
>   ;****
>
>  ****
>
> Also, a word of warning: this lexer rule can match a zero-length character
> span, which could result in an infinite loop. You should always ensure that
> every path through any lexer rule that?s not marked ?fragment? will consume
> at least 1 character. There?s also a bug with certain exceptions in the
> lexer that can cause infinite loops ? this has been resolved for release 3.4
> but I haven?t released it yet.****
>
>  ****
>
> Sam****
>
>  ****
>
> *From:* chris king [mailto:kingces95 at gmail.com]
> *Sent:* Thursday, July 28, 2011 4:19 PM
> *To:* antlr-interest at antlr.org; Sam Harwell
> *Subject:* Have I found an Antlr CSharp3 lexer bug if...****
>
>  ****
>
> Have I found an Antlr lexer CSharp3 bug if I can alter program execution
> (exception instead of no exception) by introducing a lexer production with a
> predicate that is always false? For example****
>
>  ****
>
> PP_SKIPPED_CHARACTERS****
>
>   : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*****
>
>   ;****
>
>  ****
>
> I would think that such a production should always be ignored because it's
> predicate is always false and therefore would never alter program execution.
> Yet I'm seeing a change in the execution of my program. I'm seeing it enter
> this function and throw a FailedPredicateException. I wouldn't have expected
> that this function should ever even have been executed because the predicate
> is always false.****
>
>  ****
>
>      [GrammarRule("PP_SKIPPED_CHARACTERS")]****
>
>      private void mPP_SKIPPED_CHARACTERS()****
>
>      {****
>
>           EnterRule_PP_SKIPPED_CHARACTERS();****
>
>           EnterRule("PP_SKIPPED_CHARACTERS", 31);****
>
>           TraceIn("PP_SKIPPED_CHARACTERS", 31);****
>
>           try****
>
>           {****
>
>               int _type = PP_SKIPPED_CHARACTERS;****
>
>               int _channel = DefaultTokenChannel;****
>
>               // CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )****
>
>               DebugEnterAlt(1);****
>
>               // CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )****
>
>               {****
>
>               DebugLocation(197, 5);****
>
>               if (!(( false )))****
>
>               {****
>
>                    throw new FailedPredicateException(input,
> "PP_SKIPPED_CHARACTERS", " False() ");****
>
>               }****
>
>  ****
>
> Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin
> (which is wonderful) and build integration to generate the lexer/parser
> (also wonderful) and then running on top of your CSharp port of the runtime.
> If you think this is a bug and you'd like to have a look at the repro please
> let me know. The project is open source up on CodePlex. ****
>
>  ****
>
> Thanks,
> Chris****
>
> ** **
>

From lukas.glowania at rub.de  Fri Jul 29 02:34:58 2011
From: lukas.glowania at rub.de (Lukas Glowania)
Date: 29 Jul 2011 11:34:58 +0200
Subject: [antlr-interest] Whitespace in identifiers
In-Reply-To: <4E304D6C.7010103@rub.de>
References: <4E304D6C.7010103@rub.de>
Message-ID: <4E327EC2.4070406@rub.de>

Did i do anything wrong when i asked my question or does really nobody 
know a solution?

Am 27.07.2011 19:39, schrieb Lukas Glowania:
> Hi,
>
> i want identifiers that can contain whitespace.
>
> |grammar WhitespaceInSymbols;
>
> premise :   ( options {greedy=false;} : 'IF' )  id=ID{
> System.out.println($id.text);
> };
>
> ID  :   ('a'..'z'|'A'..'Z')+ (' '('a'..'z'|'A'..'Z')+)*
> ;
>
> WS  :   ' '+ {skip();}
> ;
> |
>
> When i test this with "IF statement analyzed" i get a 
> MissingTokenException and the output "IF statement analyzed".
> I thought, that by using greedy=false i could tell ANTLR to exit afer 
> 'IF' and take it as a token. But instead the IF is part of the ID. Is 
> there a way to achieve my goal? I already tried some variations of the 
> greed=false-option, but without success.
> Thanks in advance!
>
>


From WeikEngOff at aol.com  Fri Jul 29 02:41:05 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Fri, 29 Jul 2011 11:41:05 +0200
Subject: [antlr-interest] Whitespace in identifiers
In-Reply-To: <4E327EC2.4070406@rub.de>
References: <4E304D6C.7010103@rub.de> <4E327EC2.4070406@rub.de>
Message-ID: <4E328031.5070306@aol.com>

Hello Lukas,

you missed a link from Bart Kiers answer?
http://stackoverflow.com/questions/6847971/antlr-identifier-with-whitespace


> Did i do anything wrong when i asked my question or does really nobody
> know a solution?
>
> Am 27.07.2011 19:39, schrieb Lukas Glowania:
>> Hi,
>>
>> i want identifiers that can contain whitespace.
>>
>> |grammar WhitespaceInSymbols;
>>
>> premise :   ( options {greedy=false;} : 'IF' )  id=ID{
>> System.out.println($id.text);
>> };
>>
>> ID  :   ('a'..'z'|'A'..'Z')+ (' '('a'..'z'|'A'..'Z')+)*
>> ;
>>
>> WS  :   ' '+ {skip();}
>> ;
>> |
>>
>> When i test this with "IF statement analyzed" i get a
>> MissingTokenException and the output "IF statement analyzed".
>> I thought, that by using greedy=false i could tell ANTLR to exit afer
>> 'IF' and take it as a token. But instead the IF is part of the ID. Is
>> there a way to achieve my goal? I already tried some variations of the
>> greed=false-option, but without success.
>> Thanks in advance!
>>
>>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From colin.yates at gmail.com  Fri Jul 29 03:19:48 2011
From: colin.yates at gmail.com (Colin Yates)
Date: Fri, 29 Jul 2011 11:19:48 +0100
Subject: [antlr-interest] Why use trees rather than building up your own
	code?
Message-ID: <CAE2xRkEnKoTTWJs0Jb+DN9P63J+hE0vns7uMxvrchv-MkbzxzA@mail.gmail.com>

Hi all,

I understand that the ANTLR grammar can produce an intermediate form tree
which is then parsed or you can provide code snippets to build up your own
internal representation.

I have always used the second, for example:

departmentDefinition returns[DepartmentDefinition value]

        @init {$value = new DepartmentDefinition(); }

        : DEPARTMENT singleReferenceDataDefinition {
$value.setDepartmentDefinition($singleReferenceDataDefinition.value);
} departmentStatements[$value]+




This seems a much more natural approach, and I have implemented a handful of
pretty complex grammars this way, but I get the sense that trees are the
preferred approach.

My question is why - what benefit do they get you?

The reason I want to know is I am about to embark on a library for editing
documents defined by an ANTLR grammar with syntax highlighting etc. (see my
next email :)) and I want to make sure I am not sending myself up an alley
:)

Col

From colin.yates at gmail.com  Fri Jul 29 03:32:29 2011
From: colin.yates at gmail.com (Colin Yates)
Date: Fri, 29 Jul 2011 11:32:29 +0100
Subject: [antlr-interest] Any HTML editors for rich editing of documents
	conforming to an ANTLR grammar?
Message-ID: <CAE2xRkFjB8FOn-eiMOgexuut4Sen5MKTh4t=OTx4OMJPYXK6eQ@mail.gmail.com>

Hi all,

Most of the products we develop use documents which are parsed by ANTLR to
describe the real world to the application.  These are none-trivial and need
to be internally consistent.  Some of these documents (not the grammar) can
run into hundreds of pages and asking people to edit them via notepad or a
HTML text area is, er, well, not the best :)

I have had a quick search for a tool to help write documents (that conform
to the grammar - *not* the grammar itself!) but came to the conclusion that
I am going to have to write my own.  The requirements I have are:

 - auto-suggest for syntactically valid constructs
 - auto-suggest for semantically valid constructs (for example, if the first
part of the grammar defines a list of Xs then when a X is referred to later
on it should auto-suggest an X, even if the construct for referring to X is
quoted text)
 - line and character high-lighting of syntactical or semantical validations
 - and so on....

Catching and identifying the location of syntax errors is pretty trivial (
http://yatesco.wordpress.com/2011/07/15/capturing-line-numbers-from-antlr-parsing-errors/),
but that is just the start. One big issue is that there needs to be an API
that executes *very* quickly of the form:
List<Suggestion> calculateSuggestions(String currentWordFragment, int line,
int character) to retrieve a list of syntacticly and semantically correct
words.  To figure that out, there needs to be a way of identifying which
bits of grammar that position in the document has.

I don't want to write one editor specific to each grammar, rather I want to
abstract the required information into a generic library with one
implementation of ANTLR.

And I cannot, I just cannot believe I am the first person to want to do this
:).

So, a couple of questions - is there anything already out there that will do
this?  Would using an intermediate form tree, rather than constructing my
own internal representation help (I can't see that it would)?

Another way of asking is is "how do I use ANTLRWorks for documents that
conform to a grammar rather than the grammar itself" :)

Col

From g.r.vansickle at att.net  Fri Jul 29 06:00:31 2011
From: g.r.vansickle at att.net (Gary R. Van Sickle)
Date: Fri, 29 Jul 2011 08:00:31 -0500
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <CAJQwtsgbcbZfXZu_pGaawgB=jN4CzDBJubzXTWTj=egeMhMb5A@mail.gmail.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com><00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com><CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com><011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>
	<CAJQwtsgbcbZfXZu_pGaawgB=jN4CzDBJubzXTWTj=egeMhMb5A@mail.gmail.com>
Message-ID: <9A8169D51FEB4E14A5EC55A7CE2F09BD@Mothership>

Hi Chris,

What you're describing sounds a lot like the "Start Condition" feature 
implemented in lex (flex has it as well).

Quoting 
<http://flex.sourceforge.net/manual/Start-Conditions.html#Start-Conditions>:

"
10 Start Conditions
flex provides a mechanism for conditionally activating rules. Any rule whose 
pattern is prefixed with `<sc>' will only be active when the scanner is in 
the start condition named sc. For example,


         <STRING>[^"]*        { /* eat up the string body ... */
                     ...
                     }


will be active only when the scanner is in the STRING start condition, and



         <INITIAL,STRING,QUOTE>\.        { /* handle an escape ... */
                     ...
                     }


will be active only when the current start condition is either INITIAL, 
STRING, or QUOTE.
"

I say "sounds a lot like" vs. "is" because you refer to "...based on context 
known to the parser", which I read as the parser state feeds back into the 
lexer and affects the lexing.  I think in a flex/bison setup, bison does 
have the ability to alter the flex start condition (and supports this sort 
of parser-to-lexer communication in general), but ANTLR has historically 
religiously avoided this, primarily (as I understand it) due to complexities 
involving getting LL(*) to work with a non-static token stream.

I think what you're suggesting[1] though is entirely doable in the lexer, 
and doesn't require feedback from the parser.  If ANTLR doesn't have 
something like start conditions, you could relatively easily write a flex 
preprocessor to pre-tokenize your input.

-- 
Gary R. Van Sickle
[1] DISCLAIMER: It's early, I'm tired, and I haven't been closely following 
this thread, so I may very well have misunderstood what your suggestion is 
;-).

-----Original Message----- 
From: chris king
Sent: Friday, July 29, 2011 1:42 AM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...

Sam, thanks again for taking the time to put that together for me. I owe you
a beer. And if I had a deadline to meet I'd copy paste your code and move
on. But what did Terence say in his book? Why spend 5 minutes doing
something procedurally when you can spend 5 weeks doing it declaratively?
For better or for worse, I think I suffer from the same affliction. :) So
please allow me to play Devils Advocate for a second and try and propose a
declarative solution using both lexer and parser (and possibly requiring new
ANTLR declarations). And finally I'll hop up on my soap box and suggest that
such a solution is a worthy goal of ANTLR.

Basically the idea is to take what you've done procedurally, generalize it,
and expose it declaratively. To do this I'd introducing declarative syntax
which would allow lexer rules to be partitioned and then allow those
partitions to be toggled on and off based on context known to the parser.
Given that, I think the pre-processor could be done without procedural
logic. The partitioning syntax could be borrowed from C# custom attribute
syntax. So

// No declaration so in default partition
VERBATIM_STRING_LITERAL
  : '@"' F_VERBATIM_STRING_LITERAL_CHARACTER* '"'
  ;


[Partition("PP")] // Part of pre-processor partition
DEFINE: F_POUND_SIGN 'define';

[Partition("IfDefedOut")] // Only member of if-defed-out partition
PP_SKIPPED_CHARACTERS
  : ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN) F_INPUT_CHARACTER* F_NEW_LINE
)*
  ;

Putting it together this is how it could solve the verbatim string problem:

#if false
@"
#endif


We start by partition our lexer rules into three groups. First (1) would be
pre-processor, second (2) C# grammer (including the verbatim string rule),
and third (3) would be the rule to "consume all text till the next pragma"
rule. After establishing the partitions we need to add logic to toggle them
on and off. We'd add that logic to the #if/#elif/#else parser rules. That
logic would detect that the #if false expression trivially evaluates to
false and would disable the (2) C# partition and activate the third (3)
"consume all text till the next pragma" partition thereby deactivating the
verbatim rule and allowing all text up to the #endif to be consumed.

Basically all this is repeating exactly what you've done procedurally. You
already established these groups in your solution. The first (1) is the set
of rules in the lexer, the second (2) is implemented separately and handed
tokens as they are produced by the pre-processor, and the third (3) is
implemented procedurally with the regexs. And you switch to that third (3)
partition and disable the second (2) at the point where you intercept the
the input stream. So both approaches are basically doing the same thing.


Finally, why would ANTLR want do do this? Well, because enabling this
scenario is right up ANTLRs design-philosophy-alley! ANTLR makes common
compiler building tasks simple. And it seems to me that pre-processors fall
into this bucket of
common-compiler-problems-that-could-have-simpler-solutions. And that the C#
pre-processor is so extremely basic, as you say, makes it ripe as a first
goal of a declarative solution. I know pre-processors have always been done
in the lexer but I got the feeling reading Terence's book that he was more
than happy to take a second look at common compiler problems and solve 'em
in different ways by introducing previously unheard of concepts (at least to
me): Lexers and parsers in one file. Semantic and syntactic
predicates. Infinite look ahead with back tracking. And my favorite example
of ANTLR simplifying the declarative syntax for a common parsing
problem is DELIMITED_COMMENT:
'/*' .* '*/'; Wow. Why wasn't it that easy with lex/yacc?! Maybe the time
has come for us to take a look at the idea that the pre-processor needs to
be done in the lexer and see if we can simplify that too!

So, what do you think? Can it be done?

And thanks again for your time and the VS tools!

Thanks,
Chris



On Thu, Jul 28, 2011 at 7:26 PM, Sam Harwell 
<sharwell at pixelminegames.com>wrote:

> Fortunately the C# preprocessor is extremely basic, so the task shouldn?t
> be hard at all. To start with, it?s important to understand that the
> preprocessor **must** be implemented with the lexer, because the following
> is valid:****
>
> ** **
>
> #if false****
>
> @"****
>
> #endif****
>
> ** **
>
> If the @" is processed by the lexer, it will consume the #endif as part of
> the verbatim string and mess everything up. Here?s what I would do:****
>
> ** **
>
> **?         **Implement a basic lexer rule to consume the characters
> following the #directive, up to but not including a single line comment
> marker //****
>
> **?         **Use a separate expression grammar to parse preprocessor
> expressions.****
>
> **?         **Set a flag in the lexer if the next code is excluded code.**
> **
>
> **?         **Override NextToken for the lexer, and if the flag is set to
> true, call out to a rule other than mTokens (a basic implementation of 
> lexer
> modes).****
>
> ** **
>
> When I release version 3.4 of the runtime, the Lexer class has a new 
> method
> ParseNextToken which can be overridden to help perform this task. I haven?t
> tested the following, but it?s what I would start with if I wanted to make 
> a
> C# preprocessor.****
>
> ** **
>
> fragment PP_DEFINE:;****
>
> fragment PP_UNDEF:;****
>
> fragment PP_IF:;****
>
> fragment PP_ELSE:;****
>
> fragment PP_ENDIF:;****
>
> ** **
>
> PP_TOKEN****
>
>         :       {input.CharPositionInLine == 0}? =>****
>
>                 WS? '#' WS?****
>
>                 (       'define' {$type=PP_DEFINE;}****
>
>                 |       'undef' {$type=PP_UNDEF;}****
>
>                 |       'if'    {$type=PP_IF;}****
>
>                 |       'else'  {$type=PP_ELSE;}****
>
>                 |       'endif' {$type=PP_ENDIF;}****
>
>                 )****
>
>                 ~('\r' | '\n' | '/')*****
>
>         ;****
>
> ** **
>
> fragment****
>
> EXCLUDED_CODE****
>
>         :       PP_TOKEN****
>
>         |       (       WS****
>
>                 |       ~(' ' | '\t' | '#')+****
>
>                 )****
>
>                 {state.type = EXCLUDED_CODE; state.channel = Hidden;}****
>
>         ;****
>
> ** **
>
> WS****
>
>         :       (' ' | '\t')+****
>
>         ;****
>
> ** **
>
> ** **
>
> ** **
>
> ** **
>
> partial class CSharpLexer {****
>
> ** **
>
> private readonly HashSet<string> _definitions = new HashSet<string>(new
> string[] { "true" });****
>
> private readonly Stack<IncludedCodeState> _includedCode = new Stack<
> IncludedCodeState>(new IncludedCodeState[] { new IncludedCodeState(true,
> true) });****
>
> private bool _foundToken = false;****
>
> ** **
>
> public override IToken NextToken() {****
>
>     while (true) {****
>
>         IToken token = base.NextToken();****
>
> ** **
>
>         switch (token.Type) {****
>
>         case PP_DEFINE:****
>
>             if (_includedCode.Peek().IsIncluded)****
>
>             {****
>
>                 if (_foundToken)****
>
>                     throw new RecognitionException("Cannot define/undefine
> preprocessor symbols after first token in file");****
>
> ** **
>
>                 string name = token.Text;****
>
>                 name = name.Substring(name.IndexOf("define") + 6).Trim();*
> ***
>
>                 if (name == "true" || !Regex.IsMatch(name,
> @"^[A-Za-z_][\w]*$"))****
>
>                     throw new RecognitionException("Expected identifier in
> preprocessor.");****
>
> ** **
>
>                 _definitions.Add(name);****
>
>             }****
>
> ** **
>
>             continue;****
>
> ** **
>
>         case PP_UNDEF:****
>
>             if (_includedCode.Peek().IsIncluded)****
>
>             {****
>
>                 if (_foundToken)****
>
>                     throw new RecognitionException("Cannot define/undefine
> preprocessor symbols after first token in file");****
>
> ** **
>
>                 string name = token.Text;****
>
>                 name = name.Substring(name.IndexOf("undef") + 5).Trim();**
> **
>
>                 if (name == "true" || !Regex.IsMatch(name,
> @"^[A-Za-z_][\w]*$"))****
>
>                     throw new RecognitionException("Expected identifier in
> preprocessor.");****
>
> ** **
>
>                 _definitions.Remove(name);****
>
>             }****
>
> ** **
>
>             continue;****
>
> ** **
>
>         case PP_IF:****
>
>             {****
>
>                 string expression = token.Text;****
>
>                 expression = expression.Substring(expression.IndexOf("if")
> + 2).Trim();****
>
>                 _includedCode.Push(new 
> IncludedCodeState(EvaluatePreprocessorExpression(expression),
> false));****
>
>             }****
>
>             continue;****
>
> ** **
>
>         case PP_ENDIF:****
>
>             if (_includedCode.Count == 1)****
>
>                 throw new RecognitionException("Mismatched #endif in
> preprocessor.");****
>
>             _includedCode.Pop();****
>
>             continue;****
>
> ** **
>
>         case PP_ELSE:****
>
>             if (_includedCode.Peek().FoundElseDirective)****
>
>                 throw new RecognitionException("Mismatched #else in
> preprocessor.");****
>
>             _includedCode.Push(_includedCode.Pop().ElseState);****
>
>             continue;****
>
> ** **
>
>         default:****
>
>             if (token.Channel == TokenChannels.Default)****
>
>                 _foundToken = true;****
>
>             return token;****
>
>         }****
>
>     }****
>
> }****
>
> ** **
>
> private bool? EvaluatePreprocessorExpression(string expression) {****
>
>     if (!_includedCode.Peek().IsIncluded)****
>
>         return null;****
>
>     throw new NotImplementedException("Use a very simple expression parser
> here to parse evaluate the Boolean expression.");****
>
> }****
>
> ** **
>
> protected override void ParseNextToken() {****
>
>     if (!_includedCode.Peek().IsIncluded)****
>
>         mEXCLUDED_CODE();****
>
>     else****
>
>         base.ParseNextToken();****
>
> }****
>
> ** **
>
> public struct IncludedCodeState {****
>
>     public readonly bool FoundElseDirective;****
>
>     private readonly bool? _isIncluded;****
>
> ** **
>
>     public IncludedCodeState(bool? isIncluded, bool foundElseDirective) {*
> ***
>
>         _isIncluded = isIncluded;****
>
>         FoundElseDirective = foundElseDirective;****
>
>     }****
>
> ** **
>
>     public bool IsIncluded { get { return _isIncluded ?? false; } }****
>
> ** **
>
>     public IncludedCodeState ElseState {****
>
>         get {****
>
>             if (_isIncluded == null)****
>
>                 return new IncludedCodeState(_isIncluded, true);****
>
>             return new IncludedCodeState(!_isIncluded, true);****
>
>         }****
>
>     }****
>
> }****
>
> }****
>
> ** **
>
> Sam****
>
> ** **
>
> *From:* chris king [mailto:kingces95 at gmail.com]
> *Sent:* Thursday, July 28, 2011 7:05 PM
> *To:* Sam Harwell
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: Have I found an Antlr CSharp3 lexer bug if...****
>
> ** **
>
> Sam, thanks so much for taking the time to look at that. If I could, let 
> me
> try and explain what I'm trying to do and tell me if you think it's
> possible. For my own edification, I'm trying to implement a C# grammar. 
> I'd
> like to implement the pre-processor at the moment. Implementations I've 
> seen
> generally using only a lexer and use some type of trick to maintain a 
> stack
> (e.g. for nested ifdefs and simple if/elif expressions). I figure why not
> use a parser to maintain the stack -- isn't that the reason
> for existence for parsers anyway? So that's what I'm trying to do -- use a
> lexer and parser to implement the pre-processor. ****
>
> ** **
>
> The big difficulty is changing the lexer rules depending on whether I'm in
> a #if def block that is active or not. I figured with ANTLR I'd be able to
> compute if the #ifdef block is active and then throw a switch to either
> parse tokens and hand those tokens off to the C# parser or consume and
> ignore all input up to the next pre-processor instruction thereby 
> disabling
> that chunk of code. If I can do this then I could put the pre-processor 
> and
> parser in the same file and construct the AST in one pass! Would that be
> cool? And clean? And maybe worth making a goal for ANTLR to be able to do?
> :)****
>
> ** **
>
> To be a bit more concrete: Here is the production for matching newline at
> the end of pre-processor instructions. The idea would be to enable
> PP_SKIPPED_CHARACTERS only if inside a disabling #ifdef block which would
> consume all characters till the next pre-processing instruction.****
>
> ** **
>
> pp_new_line****
>
>   : SINGLE_LINE_COMMENT? ((NEW_LINE! PP_SKIPPED_CHARACTERS) | EOF!)****
>
>   ;****
>
> ** **
>
> Here is what I was hoping would work as PP_SKIPPED_CHARACTERS. 
> Unfortunately I
> don't seem to understand how to flip lexer rules on and off well enough to
> make this work...****
>
> ** **
>
> PP_SKIPPED_CHARACTERS****
>
>   : { IfDefedOut }? ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN)
> F_INPUT_CHARACTER* F_NEW_LINE )*****
>
>   ;****
>
> ** **
>
> I hope that is enough to give you an idea of what I'm trying to do. This
> approach just seems so elegant to me (by which I mean almost all 
> declarative
> -- no need to sprinkle procedural logic in among my productions to 
> maintain
> a stack or whatever) that I'd hope that it would be do able in ANTLR. What
> do you think? Is it a worthy goal? Does it feel possible to you? If not, 
> is
> a goal worth trying to achieve?****
>
> ** **
>
> Thanks,
> Chris****
>
> ** **
>
> ** **
>
> ** **
>
> On Thu, Jul 28, 2011 at 2:37 PM, Sam Harwell <sharwell at pixelminegames.com>
> wrote:****
>
> Hi Chris,****
>
>  ****
>
> Lookahead prediction occurs before predicates are evaluated. If fixed
> lookahead uniquely determines the alternative with a  semantic predicate,
> the predicate will not be evaluated as part of the decision process. I?m
> guessing (but not 100% sure) if you use a gated semantic predicate, then 
> it
> will not be entering the rule:****
>
>  ****
>
> PP_SKIPPED_CHARACTERS****
>
>   : {false}? => ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*****
>
>   ;****
>
>  ****
>
> Also, a word of warning: this lexer rule can match a zero-length character
> span, which could result in an infinite loop. You should always ensure 
> that
> every path through any lexer rule that?s not marked ?fragment? will 
> consume
> at least 1 character. There?s also a bug with certain exceptions in the
> lexer that can cause infinite loops ? this has been resolved for release 
> 3.4
> but I haven?t released it yet.****
>
>  ****
>
> Sam****
>
>  ****
>
> *From:* chris king [mailto:kingces95 at gmail.com]
> *Sent:* Thursday, July 28, 2011 4:19 PM
> *To:* antlr-interest at antlr.org; Sam Harwell
> *Subject:* Have I found an Antlr CSharp3 lexer bug if...****
>
>  ****
>
> Have I found an Antlr lexer CSharp3 bug if I can alter program execution
> (exception instead of no exception) by introducing a lexer production with 
> a
> predicate that is always false? For example****
>
>  ****
>
> PP_SKIPPED_CHARACTERS****
>
>   : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*****
>
>   ;****
>
>  ****
>
> I would think that such a production should always be ignored because it's
> predicate is always false and therefore would never alter program 
> execution.
> Yet I'm seeing a change in the execution of my program. I'm seeing it 
> enter
> this function and throw a FailedPredicateException. I wouldn't have 
> expected
> that this function should ever even have been executed because the 
> predicate
> is always false.****
>
>  ****
>
>      [GrammarRule("PP_SKIPPED_CHARACTERS")]****
>
>      private void mPP_SKIPPED_CHARACTERS()****
>
>      {****
>
>           EnterRule_PP_SKIPPED_CHARACTERS();****
>
>           EnterRule("PP_SKIPPED_CHARACTERS", 31);****
>
>           TraceIn("PP_SKIPPED_CHARACTERS", 31);****
>
>           try****
>
>           {****
>
>               int _type = PP_SKIPPED_CHARACTERS;****
>
>               int _channel = DefaultTokenChannel;****
>
>               // CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )****
>
>               DebugEnterAlt(1);****
>
>               // CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )****
>
>               {****
>
>               DebugLocation(197, 5);****
>
>               if (!(( false )))****
>
>               {****
>
>                    throw new FailedPredicateException(input,
> "PP_SKIPPED_CHARACTERS", " False() ");****
>
>               }****
>
>  ****
>
> Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin
> (which is wonderful) and build integration to generate the lexer/parser
> (also wonderful) and then running on top of your CSharp port of the 
> runtime.
> If you think this is a bug and you'd like to have a look at the repro 
> please
> let me know. The project is open source up on CodePlex. ****
>
>  ****
>
> Thanks,
> Chris****
>
> ** **
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From gokul007 at gmail.com  Fri Jul 29 06:07:41 2011
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Fri, 29 Jul 2011 21:07:41 +0800
Subject: [antlr-interest] Why use trees rather than building up your own
	code?
In-Reply-To: <CAE2xRkEnKoTTWJs0Jb+DN9P63J+hE0vns7uMxvrchv-MkbzxzA@mail.gmail.com>
References: <CAE2xRkEnKoTTWJs0Jb+DN9P63J+hE0vns7uMxvrchv-MkbzxzA@mail.gmail.com>
Message-ID: <CAHMh4-Y6Y2K3jzoS+ToLg3hQXBVfXH1fKDYELSp75_Vw2Y=Ccg@mail.gmail.com>

This is very well discussed in the book ANTLR - Definitive Reference.

Basically mostly people will construct a tree out of the grammar. The
library identifies the common usage and provides a solution for it.

Gokul.

On Fri, Jul 29, 2011 at 6:19 PM, Colin Yates <colin.yates at gmail.com> wrote:

> Hi all,
>
> I understand that the ANTLR grammar can produce an intermediate form tree
> which is then parsed or you can provide code snippets to build up your own
> internal representation.
>
> I have always used the second, for example:
>
> departmentDefinition returns[DepartmentDefinition value]
>
>        @init {$value = new DepartmentDefinition(); }
>
>        : DEPARTMENT singleReferenceDataDefinition {
> $value.setDepartmentDefinition($singleReferenceDataDefinition.value);
> } departmentStatements[$value]+
>
>
>
>
> This seems a much more natural approach, and I have implemented a handful
> of
> pretty complex grammars this way, but I get the sense that trees are the
> preferred approach.
>
> My question is why - what benefit do they get you?
>
> The reason I want to know is I am about to embark on a library for editing
> documents defined by an ANTLR grammar with syntax highlighting etc. (see my
> next email :)) and I want to make sure I am not sending myself up an alley
> :)
>
> Col
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From markwright at internode.on.net  Fri Jul 29 06:27:01 2011
From: markwright at internode.on.net (Mark Wright)
Date: Fri, 29 Jul 2011 23:27:01 +1000
Subject: [antlr-interest] Interest in a Go lang port
In-Reply-To: <CAFCNb3jJDkhjdOcipe2geeQCXADz+f685WCRRD4Ba0s_Df3Mow@mail.gmail.com>
References: <CAFCNb3i955C_Vw3hLTYo++kVrSqh34otR95CLr2p-cc0B3qh7A@mail.gmail.com>
	<CAF+GmOBRRoR+Wx=XqH_+8sEULqoGCa-930SQRS0b4kEKL18RNw@mail.gmail.com>
	<011001cc4d92$9b7127f0$d25377d0$@pixelminegames.com>
	<CAFCNb3jJDkhjdOcipe2geeQCXADz+f685WCRRD4Ba0s_Df3Mow@mail.gmail.com>
Message-ID: <ymad3gt1al6.fsf@internode.on.net>

On Fri, 29 Jul 2011 12:01:49 +1000, Gary Miller <gary at sumwise.com> wrote:
> Sam,
> 
> Exactly, thanks for the clarification and sorry about any confusion.
> 
> Anyone interested?
> 
> Gary

Hi Garry,

It interesting however I am too busy with other stuff.

Its easier to write a target for antlr 4, as writing a target for
antlr 3 is difficult, the string templates are complex.  This
is hard to reason on how to approach it as you need to keep in
your head the string template syntax and the syntax of the
programming language you are targetting (go).

While as with antlr4 the stringtemplate for the lexer is trivial
compared to antlr 3.  It seems that all that is required to get
started is to output:

- just the standard stuff to include/import/export stuff like in
any targe programming language file.

- the token ids in an enum or as constants or something like that.

- an array or list of token name strings.

- an array or list of rule name strings.

- a 16 bit unsigned ints into an array.  This is the key part, its
  the bytecodes that you need to interpret.

To start hacking the target stringtemplate, create the directory
for your target:

resources/org/antlr/v4/tool/templates/codegen/Go

copy the resources/org/antlr/v4/tool/templates/codegen/Java/Java.stg
to
resources/org/antlr/v4/tool/templates/codegen/Go/Go.stg

and just ignore most of the Java junk, and hack just the bits you need
to produce Go for only the lexer.  Start with the stuff on the lines
following:

Lexer(lexer, atn, actions, sempreds) ::= <<

When you encounter any issues with output strings, numbers, etc, then
in /h/argus/2/j/antlr4/g/antlr4/antlr4/tool/src/org/antlr/v4/codegen
you will need to create a file for your target:
/h/argus/2/j/antlr4/g/antlr4/antlr4/tool/src/org/antlr/v4/codegen/GoTarget.java

While hacking the stringtemplate just stick it in the front of your
classpath so antlr4 will find it, maybe in a antlr script something like:

#! /bin/sh
java -classpath /some_dir/antlr4/antlr4/tool/resources:/some_dir/antlr4/dist/antlr4.jar:/some_dir/j/antlr4/lib/ST-4.0.3.jar org.antlr.v4.Tool $*

Then you need to translate the Java code for the lexer runtime
interpreter into the target language, its in:

runtime/Java/src/org/antlr/v4/runtime/atn
 
The catch at the moment with targetting antlr 4 is Ter needs to
keep changing the source code all the time, so its somewhat challenging
to follow along.  Hopefully though the changes to the lexer are less
radical, and after you get the lexer done hopefully Ter will have
the parser more stable.

Thanks, Mark

> On Fri, Jul 29, 2011 at 11:55 AM, Sam Harwell
> <sharwell at pixelminegames.com>wrote:
> 
> > Hi Parsiad,
> >
> > I believe he's referring to creating a new ANTLR target/runtime for Go
> > (option language=Go), as opposed to using ANTLR to compile Go files into
> > executable code.
> >
> > Sam
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Parsiad Azimzadeh
> > Sent: Thursday, July 28, 2011 7:51 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Interest in a Go lang port
> >
> > > Would anyone be interested in collaborating on a port of ANTLR to the Go
> > > lanaguage <http://golang.org/>?
> >
> > Interesting. What are your motivations for porting Go to ANTLR? I
> > believe the Go compiler is open source.
> >
> > --
> > Parsiad Azimzadeh
> > http://sfu.ca/~paa4
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jmurray at aerotech.com  Fri Jul 29 07:09:08 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Fri, 29 Jul 2011 10:09:08 -0400
Subject: [antlr-interest] 3.4 C target release date?
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD70@EXCH-VIRTUAL.aerotechad.com>

Hi Jim,

I'm not trying to rush you or anything, but I am wondering if you have 
an estimate for the release of the 3.4 C runtime. I'd like to use it in 
our next release, and with deadlines approaching it would be helpful to 
know if I'll have time to fit it in or not.

Thank you!

- Justin

From thebigsmalln at gmail.com  Fri Jul 29 07:25:29 2011
From: thebigsmalln at gmail.com (Adam Adamski)
Date: Fri, 29 Jul 2011 16:25:29 +0200
Subject: [antlr-interest] Variable Declaration problem:
 'FailedPredicateException' while testing the rule.
Message-ID: <4E32C2D9.6090608@gmail.com>

Hello,

I am trying to create parser for object-oriented language - Loglan82. I
am also quite new to ANTLR and I have an error at the very beginning.

I get: FailedPredicateException while I am using Interpeter (Eclipse
plugin) to check if parser is recognizing 'varDecl'.

This kind of declaration is valid in Loglan82: 'var
you,are:integer,totally,correct:Type2;'

And here are my gammar rules:

varDecl: VAR IDENT (COMMA IDENT)* COLON type (COMMA IDENT (COMMA IDENT)*
COLON type)*;

type: ARRAY* (systemType | simpleType | IDENT);

systemType: PROCES | COROUTINE;

simpleType: INTEGER | REAL | BOOLEAN | CHARACTER | STRING | FILE |
SEMAPHORE;

I get error when parser meets first comma (',') after 'you' identifier.
I am using Antlr 3.3v and all necessary Eclipse plugins.
Grammar options backtrack=true and memoize=true.

When I write this kind of rule: 'var you:Type2;' everything is correct.
I think this might be problem of '*' and lookahead - but I am not sure.

What might cause the problem? How this can be fixed?

Thank you for your time,
Adam.

From sharwell at pixelminegames.com  Fri Jul 29 08:00:38 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 29 Jul 2011 10:00:38 -0500
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <CAJQwtsgbcbZfXZu_pGaawgB=jN4CzDBJubzXTWTj=egeMhMb5A@mail.gmail.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>	<00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>	<CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com>	<011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>
	<CAJQwtsgbcbZfXZu_pGaawgB=jN4CzDBJubzXTWTj=egeMhMb5A@mail.gmail.com>
Message-ID: <015301cc4e00$479a68d0$d6cf3a70$@pixelminegames.com>

For something simple like the C# preprocessor, it's easy to simply use lexer
modes. I'm pretty happy with the method I posted because it's allowed me to
integrate multiple lexers into a single "big" lexer almost as easily as it's
been to create lexer modes. For example, the following uses 4 lexers (HTML
text, HTML tags, PHP code, PHP doc comments):

http://visualstudiogallery.msdn.microsoft.com/2a10ba81-26c5-47d9-939b-6bcc7b
bec251/showImage/53676

 

The following uses 3 lexers (group, template text, template expression):

http://visualstudiogallery.msdn.microsoft.com/5ca30e58-96b4-4edf-b95e-3030da
f474ff/showImage/53651

 

 

Sam

 

 

From: chris king [mailto:kingces95 at gmail.com] 
Sent: Friday, July 29, 2011 1:42 AM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: Have I found an Antlr CSharp3 lexer bug if...

 

Sam, thanks again for taking the time to put that together for me. I owe you
a beer. And if I had a deadline to meet I'd copy paste your code and move
on. But what did Terence say in his book? Why spend 5 minutes doing
something procedurally when you can spend 5 weeks doing it declaratively?
For better or for worse, I think I suffer from the same affliction. :) So
please allow me to play Devils Advocate for a second and try and propose a
declarative solution using both lexer and parser (and possibly requiring new
ANTLR declarations). And finally I'll hop up on my soap box and suggest that
such a solution is a worthy goal of ANTLR.

 

Basically the idea is to take what you've done procedurally, generalize it,
and expose it declaratively. To do this I'd introducing declarative syntax
which would allow lexer rules to be partitioned and then allow those
partitions to be toggled on and off based on context known to the parser.
Given that, I think the pre-processor could be done without procedural
logic. The partitioning syntax could be borrowed from C# custom attribute
syntax. So

 

// No declaration so in default partition

VERBATIM_STRING_LITERAL

  : '@"' F_VERBATIM_STRING_LITERAL_CHARACTER* '"'

  ;

 

[Partition("PP")] // Part of pre-processor partition

DEFINE: F_POUND_SIGN 'define';

 

[Partition("IfDefedOut")] // Only member of if-defed-out partition

PP_SKIPPED_CHARACTERS

  : ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN) F_INPUT_CHARACTER* F_NEW_LINE
)*

  ;

 

Putting it together this is how it could solve the verbatim string problem:

 

#if false

@"

#endif

 

We start by partition our lexer rules into three groups. First (1) would be
pre-processor, second (2) C# grammer (including the verbatim string rule),
and third (3) would be the rule to "consume all text till the next pragma"
rule. After establishing the partitions we need to add logic to toggle them
on and off. We'd add that logic to the #if/#elif/#else parser rules. That
logic would detect that the #if false expression trivially evaluates to
false and would disable the (2) C# partition and activate the third (3)
"consume all text till the next pragma" partition thereby deactivating the
verbatim rule and allowing all text up to the #endif to be consumed.

 

Basically all this is repeating exactly what you've done procedurally. You
already established these groups in your solution. The first (1) is the set
of rules in the lexer, the second (2) is implemented separately and handed
tokens as they are produced by the pre-processor, and the third (3) is
implemented procedurally with the regexs. And you switch to that third (3)
partition and disable the second (2) at the point where you intercept the
the input stream. So both approaches are basically doing the same thing. 

 

Finally, why would ANTLR want do do this? Well, because enabling this
scenario is right up ANTLRs design-philosophy-alley! ANTLR makes common
compiler building tasks simple. And it seems to me that pre-processors fall
into this bucket of
common-compiler-problems-that-could-have-simpler-solutions. And that the C#
pre-processor is so extremely basic, as you say, makes it ripe as a first
goal of a declarative solution. I know pre-processors have always been done
in the lexer but I got the feeling reading Terence's book that he was more
than happy to take a second look at common compiler problems and solve 'em
in different ways by introducing previously unheard of concepts (at least to
me): Lexers and parsers in one file. Semantic and syntactic predicates.
Infinite look ahead with back tracking. And my favorite example of ANTLR
simplifying the declarative syntax for a common parsing problem is
DELIMITED_COMMENT: '/*' .* '*/'; Wow. Why wasn't it that easy with
lex/yacc?! Maybe the time has come for us to take a look at the idea that
the pre-processor needs to be done in the lexer and see if we can simplify
that too!

 

So, what do you think? Can it be done? 

 

And thanks again for your time and the VS tools!

 

Thanks,
Chris

 

 


From ruslan_zasukhin at valentina-db.com  Fri Jul 29 08:06:17 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Fri, 29 Jul 2011 18:06:17 +0300
Subject: [antlr-interest] 3.4 C target release date?
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD70@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <CA58A719.EF2D3%ruslan_zasukhin@valentina-db.com>

On 7/29/11 5:09 PM, "Justin Murray" <jmurray at aerotech.com> wrote:

> Hi Jim,
> 
> I'm not trying to rush you or anything, but I am wondering if you have
> an estimate for the release of the 3.4 C runtime. I'd like to use it in
> our next release, and with deadlines approaching it would be helpful to
> know if I'll have time to fit it in or not.

Hi Justin,

As far as I have see few days ago,

In the main archive-distribution of ANTLR 3.4 presents
    "runtime / C - target"

Which sounds to be 3.4 release.
Otherwise why it present in RELEASE archive?  Yes?


Yes, I also have note, that on download page link to C-target
Opens for us page where exists only 3.4b4 archive ...


I also was going to ask about status of C target
And this inconsistency


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From sharwell at pixelminegames.com  Fri Jul 29 08:16:32 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 29 Jul 2011 10:16:32 -0500
Subject: [antlr-interest] Any HTML editors for rich editing of documents
	conforming to an ANTLR grammar?
Message-ID: <015b01cc4e02$80928990$81b79cb0$@pixelminegames.com>

Hi Colin,

In very general terms, the task at hand is you'd like to create an IDE for a
language described by an ANTLR grammar. I haven't used either of these
products, but the closest groups I know of to producing a product like you
describe below are Xtext: http://www.eclipse.org/Xtext/ and Actipro
SyntaxEditor:
http://www.actiprosoftware.com/products/dotnet/wpf/syntaxeditor/default.aspx

You probably shouldn't try to create a new solution in this area. I've been
working on IDEs for the past several years, and I can tell the task is
nowhere near as straightforward as it seems.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Colin Yates
Sent: Friday, July 29, 2011 5:32 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Any HTML editors for rich editing of documents
conforming to an ANTLR grammar?

Hi all,

Most of the products we develop use documents which are parsed by ANTLR to
describe the real world to the application.  These are none-trivial and need
to be internally consistent.  Some of these documents (not the grammar) can
run into hundreds of pages and asking people to edit them via notepad or a
HTML text area is, er, well, not the best :)

I have had a quick search for a tool to help write documents (that conform
to the grammar - *not* the grammar itself!) but came to the conclusion that
I am going to have to write my own.  The requirements I have are:

 - auto-suggest for syntactically valid constructs
 - auto-suggest for semantically valid constructs (for example, if the first
part of the grammar defines a list of Xs then when a X is referred to later
on it should auto-suggest an X, even if the construct for referring to X is
quoted text)
 - line and character high-lighting of syntactical or semantical validations
 - and so on....

Catching and identifying the location of syntax errors is pretty trivial (
http://yatesco.wordpress.com/2011/07/15/capturing-line-numbers-from-antlr-pa
rsing-errors/),
but that is just the start. One big issue is that there needs to be an API
that executes *very* quickly of the form:
List<Suggestion> calculateSuggestions(String currentWordFragment, int line,
int character) to retrieve a list of syntacticly and semantically correct
words.  To figure that out, there needs to be a way of identifying which
bits of grammar that position in the document has.

I don't want to write one editor specific to each grammar, rather I want to
abstract the required information into a generic library with one
implementation of ANTLR.

And I cannot, I just cannot believe I am the first person to want to do this
:).

So, a couple of questions - is there anything already out there that will do
this?  Would using an intermediate form tree, rather than constructing my
own internal representation help (I can't see that it would)?

Another way of asking is is "how do I use ANTLRWorks for documents that
conform to a grammar rather than the grammar itself" :)

Col

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jmurray at aerotech.com  Fri Jul 29 08:24:36 2011
From: jmurray at aerotech.com (Justin Murray)
Date: Fri, 29 Jul 2011 11:24:36 -0400
Subject: [antlr-interest] 3.4 C target release date?
In-Reply-To: <CA58A719.EF2D3%ruslan_zasukhin@valentina-db.com>
References: <CA58A719.EF2D3%ruslan_zasukhin@valentina-db.com>
Message-ID: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD72@EXCH-VIRTUAL.aerotechad.com>

These two archives are identical, except for the name. I did a diff of

http://antlr.org/download/antlr-3.4.tar.gz\antlr-3.4.tar\antlr-3.4\runtime\C\dist\libantlr3c-3.4.tar.gz\libantlr3c-3.4.tar\libantlr3c-3.4\

and

http://antlr.org/download/C/libantlr3c-3.4-beta4.tar.gz\libantlr3c-3.4-beta4.tar\libantlr3c-3.4-beta4\

Using BeyondCompare, I found that only 3 files differ, and that within 
these files the only differences were of the string '3.4-beta4' versus 
'3.4'. So this is either still the beta release, or the beta has been 
accepted as the final release without modifications.

- Justin


On 7/29/2011 11:06 AM, Ruslan Zasukhin wrote:
> On 7/29/11 5:09 PM, "Justin Murray"<jmurray at aerotech.com>  wrote:
>
>> Hi Jim,
>>
>> I'm not trying to rush you or anything, but I am wondering if you have
>> an estimate for the release of the 3.4 C runtime. I'd like to use it in
>> our next release, and with deadlines approaching it would be helpful to
>> know if I'll have time to fit it in or not.
> Hi Justin,
>
> As far as I have see few days ago,
>
> In the main archive-distribution of ANTLR 3.4 presents
>      "runtime / C - target"
>
> Which sounds to be 3.4 release.
> Otherwise why it present in RELEASE archive?  Yes?
>
>
> Yes, I also have note, that on download page link to C-target
> Opens for us page where exists only 3.4b4 archive ...
>
>
> I also was going to ask about status of C target
> And this inconsistency
>
>

From colin.yates at gmail.com  Fri Jul 29 09:04:26 2011
From: colin.yates at gmail.com (Colin Yates)
Date: Fri, 29 Jul 2011 17:04:26 +0100
Subject: [antlr-interest] Fwd: Any HTML editors for rich editing of
 documents conforming to an ANTLR grammar?
In-Reply-To: <CAE2xRkE7X11kwP+e9FRvm15x_wAZz1wKv6nr_j-AL=uQMdm4hw@mail.gmail.com>
References: <015b01cc4e02$80928990$81b79cb0$@pixelminegames.com>
	<CAE2xRkE7X11kwP+e9FRvm15x_wAZz1wKv6nr_j-AL=uQMdm4hw@mail.gmail.com>
Message-ID: <CAE2xRkFGwJe=EX1K=AAfQGSKK=ScnhqDfn2gK4YPfoFuwqerBA@mail.gmail.com>

(oops - clicked reply instead of reply-all)

---------- Forwarded message ----------
From: Colin Yates <colin.yates at gmail.com>
Date: 29 July 2011 16:34
Subject: Re: [antlr-interest] Any HTML editors for rich editing of documents
conforming to an ANTLR grammar?
To: Sam Harwell <sharwell at pixelminegames.com>


Hi Sam,

Thanks for the info.  I had seen both of those, but they are too heavyweight
for my needs - the editor must be a HTML5 construct.  Shipping any desktop
tool is a no-no as this is a web-application.

Regarding "You probably shouldn't try to create a new solution in this area.
I've been
working on IDEs for the past several years, and I can tell the task is
nowhere near as straightforward as it seems."

Not sure what to think of that - there are quite a few assumptions in there
:).  I shall take it as a friendly warning of "here be dragons" as I am sure
that is the intent.

Unfortunately I don't see any other option.  We have decided that a DSL is
the right way forward  for allowing clients to describe their reality to our
tool (previously it was through a chinese-whispers process of spreadsheets
into spreadsheets which we parsed and populated templates in the persistent
store - *that* is nowhere near as straightforward as it seems :)), and we
have decided that ANTLR is the right tool to allow us to build the DSL.

I am surprised that there isn't more traffic in this area - I would have
thought my use-case is very common.  If it is, then how do others allow
clients to build non-trivial documents conforming to a grammar defined in
ANTLR?

If I do have to do this from scratch then I expect I shall:

 - define an abstraction for the things the editor cares about (current
errors, ability to identify context based on cursor position, safe
suggestions for example)
 - provide an implementation that is hard coded for one document in the
first instance
 - dive into the internals in the second instance to see how much I can grab
from the ANTLR internals of the generated tokeniser and parser in the second
instance

Creating a HTML5 construct to appear to work is pretty trivial I expect (and
I cannot believe it hasn't already been done).  I see the 2nd and 3rd points
above being the can-of-worms, particularly the ability to figure out the
relevant part of the grammar that matches the place in the document the user
is currently editing.

With respect, I see it as non-trivial, but not un-doable.  It would make a
nice open-source project as well....

Thanks for the help - I don't mean to be dismissive - keep the ideas coming
:)

Col

On 29 July 2011 16:16, Sam Harwell <sharwell at pixelminegames.com> wrote:

> Hi Colin,
>
> In very general terms, the task at hand is you'd like to create an IDE for
> a
> language described by an ANTLR grammar. I haven't used either of these
> products, but the closest groups I know of to producing a product like you
> describe below are Xtext: http://www.eclipse.org/Xtext/ and Actipro
> SyntaxEditor:
>
> http://www.actiprosoftware.com/products/dotnet/wpf/syntaxeditor/default.aspx
>
> You probably shouldn't try to create a new solution in this area. I've been
> working on IDEs for the past several years, and I can tell the task is
> nowhere near as straightforward as it seems.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Colin Yates
> Sent: Friday, July 29, 2011 5:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Any HTML editors for rich editing of documents
> conforming to an ANTLR grammar?
>
> Hi all,
>
> Most of the products we develop use documents which are parsed by ANTLR to
> describe the real world to the application.  These are none-trivial and
> need
> to be internally consistent.  Some of these documents (not the grammar) can
> run into hundreds of pages and asking people to edit them via notepad or a
> HTML text area is, er, well, not the best :)
>
> I have had a quick search for a tool to help write documents (that conform
> to the grammar - *not* the grammar itself!) but came to the conclusion that
> I am going to have to write my own.  The requirements I have are:
>
>  - auto-suggest for syntactically valid constructs
>  - auto-suggest for semantically valid constructs (for example, if the
> first
> part of the grammar defines a list of Xs then when a X is referred to later
> on it should auto-suggest an X, even if the construct for referring to X is
> quoted text)
>  - line and character high-lighting of syntactical or semantical
> validations
>  - and so on....
>
> Catching and identifying the location of syntax errors is pretty trivial (
>
> http://yatesco.wordpress.com/2011/07/15/capturing-line-numbers-from-antlr-pa
> rsing-errors/<http://yatesco.wordpress.com/2011/07/15/capturing-line-numbers-from-antlr-parsing-errors/>
> ),
> but that is just the start. One big issue is that there needs to be an API
> that executes *very* quickly of the form:
> List<Suggestion> calculateSuggestions(String currentWordFragment, int line,
> int character) to retrieve a list of syntacticly and semantically correct
> words.  To figure that out, there needs to be a way of identifying which
> bits of grammar that position in the document has.
>
> I don't want to write one editor specific to each grammar, rather I want to
> abstract the required information into a generic library with one
> implementation of ANTLR.
>
> And I cannot, I just cannot believe I am the first person to want to do
> this
> :).
>
> So, a couple of questions - is there anything already out there that will
> do
> this?  Would using an intermediate form tree, rather than constructing my
> own internal representation help (I can't see that it would)?
>
> Another way of asking is is "how do I use ANTLRWorks for documents that
> conform to a grammar rather than the grammar itself" :)
>
> Col
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From sharwell at pixelminegames.com  Fri Jul 29 09:07:40 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 29 Jul 2011 11:07:40 -0500
Subject: [antlr-interest] Fwd: Any HTML editors for rich editing of
	documents conforming to an ANTLR grammar?
In-Reply-To: <CAE2xRkFGwJe=EX1K=AAfQGSKK=ScnhqDfn2gK4YPfoFuwqerBA@mail.gmail.com>
References: <015b01cc4e02$80928990$81b79cb0$@pixelminegames.com>	<CAE2xRkE7X11kwP+e9FRvm15x_wAZz1wKv6nr_j-AL=uQMdm4hw@mail.gmail.com>
	<CAE2xRkFGwJe=EX1K=AAfQGSKK=ScnhqDfn2gK4YPfoFuwqerBA@mail.gmail.com>
Message-ID: <016a01cc4e09$a4d3adf0$ee7b09d0$@pixelminegames.com>

Hi Colin,

I wasn't trying to say the DSL is a bad idea. I only meant that creating a
full-featured editor is extremely challenging, and tends to not work as
expected in the end (any combination of slow, inaccurate, and/or
inconsistent). If you focus on providing syntax highlighting along with a
background parser that can display syntax errors, it shouldn't be difficult
to create a very usable tool.

The level of difficulty also depends heavily on the complexity of the
language and what your accuracy demands are for the auto-complete process.
Currently I'm experimenting with Java, with my goals being extremely fast
IDE assist operations (under 25ms latency) and a high degree of accuracy and
consistency even in documents with multiple syntax errors. For the task of
identifying the current context, I'm using a new parsing algorithm that I
designed specifically for this task and might not apply to any other
application.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Colin Yates
Sent: Friday, July 29, 2011 11:04 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Fwd: Any HTML editors for rich editing of
documents conforming to an ANTLR grammar?

(oops - clicked reply instead of reply-all)

---------- Forwarded message ----------
From: Colin Yates <colin.yates at gmail.com>
Date: 29 July 2011 16:34
Subject: Re: [antlr-interest] Any HTML editors for rich editing of documents
conforming to an ANTLR grammar?
To: Sam Harwell <sharwell at pixelminegames.com>


Hi Sam,

Thanks for the info.  I had seen both of those, but they are too heavyweight
for my needs - the editor must be a HTML5 construct.  Shipping any desktop
tool is a no-no as this is a web-application.

Regarding "You probably shouldn't try to create a new solution in this area.
I've been
working on IDEs for the past several years, and I can tell the task is
nowhere near as straightforward as it seems."

Not sure what to think of that - there are quite a few assumptions in there
:).  I shall take it as a friendly warning of "here be dragons" as I am sure
that is the intent.

Unfortunately I don't see any other option.  We have decided that a DSL is
the right way forward  for allowing clients to describe their reality to our
tool (previously it was through a chinese-whispers process of spreadsheets
into spreadsheets which we parsed and populated templates in the persistent
store - *that* is nowhere near as straightforward as it seems :)), and we
have decided that ANTLR is the right tool to allow us to build the DSL.

I am surprised that there isn't more traffic in this area - I would have
thought my use-case is very common.  If it is, then how do others allow
clients to build non-trivial documents conforming to a grammar defined in
ANTLR?

If I do have to do this from scratch then I expect I shall:

 - define an abstraction for the things the editor cares about (current
errors, ability to identify context based on cursor position, safe
suggestions for example)
 - provide an implementation that is hard coded for one document in the
first instance
 - dive into the internals in the second instance to see how much I can grab
from the ANTLR internals of the generated tokeniser and parser in the second
instance

Creating a HTML5 construct to appear to work is pretty trivial I expect (and
I cannot believe it hasn't already been done).  I see the 2nd and 3rd points
above being the can-of-worms, particularly the ability to figure out the
relevant part of the grammar that matches the place in the document the user
is currently editing.

With respect, I see it as non-trivial, but not un-doable.  It would make a
nice open-source project as well....

Thanks for the help - I don't mean to be dismissive - keep the ideas coming
:)

Col

On 29 July 2011 16:16, Sam Harwell <sharwell at pixelminegames.com> wrote:

> Hi Colin,
>
> In very general terms, the task at hand is you'd like to create an IDE for
> a
> language described by an ANTLR grammar. I haven't used either of these
> products, but the closest groups I know of to producing a product like you
> describe below are Xtext: http://www.eclipse.org/Xtext/ and Actipro
> SyntaxEditor:
>
>
http://www.actiprosoftware.com/products/dotnet/wpf/syntaxeditor/default.aspx
>
> You probably shouldn't try to create a new solution in this area. I've
been
> working on IDEs for the past several years, and I can tell the task is
> nowhere near as straightforward as it seems.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Colin Yates
> Sent: Friday, July 29, 2011 5:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Any HTML editors for rich editing of documents
> conforming to an ANTLR grammar?
>
> Hi all,
>
> Most of the products we develop use documents which are parsed by ANTLR to
> describe the real world to the application.  These are none-trivial and
> need
> to be internally consistent.  Some of these documents (not the grammar)
can
> run into hundreds of pages and asking people to edit them via notepad or a
> HTML text area is, er, well, not the best :)
>
> I have had a quick search for a tool to help write documents (that conform
> to the grammar - *not* the grammar itself!) but came to the conclusion
that
> I am going to have to write my own.  The requirements I have are:
>
>  - auto-suggest for syntactically valid constructs
>  - auto-suggest for semantically valid constructs (for example, if the
> first
> part of the grammar defines a list of Xs then when a X is referred to
later
> on it should auto-suggest an X, even if the construct for referring to X
is
> quoted text)
>  - line and character high-lighting of syntactical or semantical
> validations
>  - and so on....
>
> Catching and identifying the location of syntax errors is pretty trivial (
>
>
http://yatesco.wordpress.com/2011/07/15/capturing-line-numbers-from-antlr-pa
>
rsing-errors/<http://yatesco.wordpress.com/2011/07/15/capturing-line-numbers
-from-antlr-parsing-errors/>
> ),
> but that is just the start. One big issue is that there needs to be an API
> that executes *very* quickly of the form:
> List<Suggestion> calculateSuggestions(String currentWordFragment, int
line,
> int character) to retrieve a list of syntacticly and semantically correct
> words.  To figure that out, there needs to be a way of identifying which
> bits of grammar that position in the document has.
>
> I don't want to write one editor specific to each grammar, rather I want
to
> abstract the required information into a generic library with one
> implementation of ANTLR.
>
> And I cannot, I just cannot believe I am the first person to want to do
> this
> :).
>
> So, a couple of questions - is there anything already out there that will
> do
> this?  Would using an intermediate form tree, rather than constructing my
> own internal representation help (I can't see that it would)?
>
> Another way of asking is is "how do I use ANTLRWorks for documents that
> conform to a grammar rather than the grammar itself" :)
>
> Col
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Fri Jul 29 09:59:52 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 29 Jul 2011 09:59:52 -0700
Subject: [antlr-interest] Have I found an Antlr CSharp3 lexer bug if...
In-Reply-To: <011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>
References: <CAJQwtsjVczemK9d_1G=Phq2A4m+CCvKLq2TTEc2ehHyi4C6EsA@mail.gmail.com>
	<00f801cc4d6e$7f548a90$7dfd9fb0$@pixelminegames.com>	<CAJQwtsj7BXGYLv7J2J8zma9Oa3d02PnF1+t9mvocuctJ3J_GFw@mail.gmail.com>
	<011101cc4d96$ec982990$c5c87cb0$@pixelminegames.com>
Message-ID: <272f1cf021a3963006fad7a49d519980@mail.gmail.com>

Yes - it is not too difficult but takes some thinking through. I have a
commercially available C# 3.x lexer/parser/tree walker that includes
pre-processing, if you were interested in that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sam Harwell
> Sent: Thursday, July 28, 2011 7:26 PM
> To: 'chris king'
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Have I found an Antlr CSharp3 lexer bug
> if...
>
> Fortunately the C# preprocessor is extremely basic, so the task
> shouldn't be hard at all. To start with, it's important to understand
> that the preprocessor *must* be implemented with the lexer, because the
> following is
> valid:
>
>
>
> #if false
>
> @"
>
> #endif
>
>
>
> If the @" is processed by the lexer, it will consume the #endif as part
> of the verbatim string and mess everything up. Here's what I would do:
>
>
>
> .         Implement a basic lexer rule to consume the characters
> following
> the #directive, up to but not including a single line comment marker //
>
> .         Use a separate expression grammar to parse preprocessor
> expressions.
>
> .         Set a flag in the lexer if the next code is excluded code.
>
> .         Override NextToken for the lexer, and if the flag is set to
> true,
> call out to a rule other than mTokens (a basic implementation of lexer
> modes).
>
>
>
> When I release version 3.4 of the runtime, the Lexer class has a new
> method ParseNextToken which can be overridden to help perform this
> task. I haven't tested the following, but it's what I would start with
> if I wanted to make a C# preprocessor.
>
>
>
> fragment PP_DEFINE:;
>
> fragment PP_UNDEF:;
>
> fragment PP_IF:;
>
> fragment PP_ELSE:;
>
> fragment PP_ENDIF:;
>
>
>
> PP_TOKEN
>
>         :       {input.CharPositionInLine == 0}? =>
>
>                 WS? '#' WS?
>
>                 (       'define' {$type=PP_DEFINE;}
>
>                 |       'undef' {$type=PP_UNDEF;}
>
>                 |       'if'    {$type=PP_IF;}
>
>                 |       'else'  {$type=PP_ELSE;}
>
>                 |       'endif' {$type=PP_ENDIF;}
>
>                 )
>
>                 ~('\r' | '\n' | '/')*
>
>         ;
>
>
>
> fragment
>
> EXCLUDED_CODE
>
>         :       PP_TOKEN
>
>         |       (       WS
>
>                 |       ~(' ' | '\t' | '#')+
>
>                 )
>
>                 {state.type = EXCLUDED_CODE; state.channel = Hidden;}
>
>         ;
>
>
>
> WS
>
>         :       (' ' | '\t')+
>
>         ;
>
>
>
>
>
>
>
>
>
> partial class CSharpLexer {
>
>
>
> private readonly HashSet<string> _definitions = new HashSet<string>(new
> string[] { "true" });
>
> private readonly Stack<IncludedCodeState> _includedCode = new
> Stack<IncludedCodeState>(new IncludedCodeState[] { new
> IncludedCodeState(true, true) });
>
> private bool _foundToken = false;
>
>
>
> public override IToken NextToken() {
>
>     while (true) {
>
>         IToken token = base.NextToken();
>
>
>
>         switch (token.Type) {
>
>         case PP_DEFINE:
>
>             if (_includedCode.Peek().IsIncluded)
>
>             {
>
>                 if (_foundToken)
>
>                     throw new RecognitionException("Cannot
> define/undefine preprocessor symbols after first token in file");
>
>
>
>                 string name = token.Text;
>
>                 name = name.Substring(name.IndexOf("define") +
> 6).Trim();
>
>                 if (name == "true" || !Regex.IsMatch(name,
> @"^[A-Za-z_][\w]*$"))
>
>                     throw new RecognitionException("Expected identifier
> in preprocessor.");
>
>
>
>                 _definitions.Add(name);
>
>             }
>
>
>
>             continue;
>
>
>
>         case PP_UNDEF:
>
>             if (_includedCode.Peek().IsIncluded)
>
>             {
>
>                 if (_foundToken)
>
>                     throw new RecognitionException("Cannot
> define/undefine preprocessor symbols after first token in file");
>
>
>
>                 string name = token.Text;
>
>                 name = name.Substring(name.IndexOf("undef") +
> 5).Trim();
>
>                 if (name == "true" || !Regex.IsMatch(name,
> @"^[A-Za-z_][\w]*$"))
>
>                     throw new RecognitionException("Expected identifier
> in preprocessor.");
>
>
>
>                 _definitions.Remove(name);
>
>             }
>
>
>
>             continue;
>
>
>
>         case PP_IF:
>
>             {
>
>                 string expression = token.Text;
>
>                 expression =
> expression.Substring(expression.IndexOf("if") + 2).Trim();
>
>                 _includedCode.Push(new
> IncludedCodeState(EvaluatePreprocessorExpression(expression), false));
>
>             }
>
>             continue;
>
>
>
>         case PP_ENDIF:
>
>             if (_includedCode.Count == 1)
>
>                 throw new RecognitionException("Mismatched #endif in
> preprocessor.");
>
>             _includedCode.Pop();
>
>             continue;
>
>
>
>         case PP_ELSE:
>
>             if (_includedCode.Peek().FoundElseDirective)
>
>                 throw new RecognitionException("Mismatched #else in
> preprocessor.");
>
>             _includedCode.Push(_includedCode.Pop().ElseState);
>
>             continue;
>
>
>
>         default:
>
>             if (token.Channel == TokenChannels.Default)
>
>                 _foundToken = true;
>
>             return token;
>
>         }
>
>     }
>
> }
>
>
>
> private bool? EvaluatePreprocessorExpression(string expression) {
>
>     if (!_includedCode.Peek().IsIncluded)
>
>         return null;
>
>     throw new NotImplementedException("Use a very simple expression
> parser here to parse evaluate the Boolean expression.");
>
> }
>
>
>
> protected override void ParseNextToken() {
>
>     if (!_includedCode.Peek().IsIncluded)
>
>         mEXCLUDED_CODE();
>
>     else
>
>         base.ParseNextToken();
>
> }
>
>
>
> public struct IncludedCodeState {
>
>     public readonly bool FoundElseDirective;
>
>     private readonly bool? _isIncluded;
>
>
>
>     public IncludedCodeState(bool? isIncluded, bool foundElseDirective)
> {
>
>         _isIncluded = isIncluded;
>
>         FoundElseDirective = foundElseDirective;
>
>     }
>
>
>
>     public bool IsIncluded { get { return _isIncluded ?? false; } }
>
>
>
>     public IncludedCodeState ElseState {
>
>         get {
>
>             if (_isIncluded == null)
>
>                 return new IncludedCodeState(_isIncluded, true);
>
>             return new IncludedCodeState(!_isIncluded, true);
>
>         }
>
>     }
>
> }
>
> }
>
>
>
> Sam
>
>
>
> From: chris king [mailto:kingces95 at gmail.com]
> Sent: Thursday, July 28, 2011 7:05 PM
> To: Sam Harwell
> Cc: antlr-interest at antlr.org
> Subject: Re: Have I found an Antlr CSharp3 lexer bug if...
>
>
>
> Sam, thanks so much for taking the time to look at that. If I could,
> let me try and explain what I'm trying to do and tell me if you think
> it's possible. For my own edification, I'm trying to implement a C#
> grammar. I'd like to implement the pre-processor at the moment.
> Implementations I've seen generally using only a lexer and use some
> type of trick to maintain a stack (e.g. for nested ifdefs and simple
> if/elif expressions). I figure why not use a parser to maintain the
> stack -- isn't that the reason for existence for parsers anyway? So
> that's what I'm trying to do -- use a lexer and parser to implement the
> pre-processor.
>
>
>
> The big difficulty is changing the lexer rules depending on whether I'm
> in a #if def block that is active or not. I figured with ANTLR I'd be
> able to compute if the #ifdef block is active and then throw a switch
> to either parse tokens and hand those tokens off to the C# parser or
> consume and ignore all input up to the next pre-processor instruction
> thereby disabling that chunk of code. If I can do this then I could put
> the pre-processor and parser in the same file and construct the AST in
> one pass! Would that be cool? And clean? And maybe worth making a goal
> for ANTLR to be able to do?
> :)
>
>
>
> To be a bit more concrete: Here is the production for matching newline
> at the end of pre-processor instructions. The idea would be to enable
> PP_SKIPPED_CHARACTERS only if inside a disabling #ifdef block which
> would consume all characters till the next pre-processing instruction.
>
>
>
> pp_new_line
>
>   : SINGLE_LINE_COMMENT? ((NEW_LINE! PP_SKIPPED_CHARACTERS) | EOF!)
>
>   ;
>
>
>
> Here is what I was hoping would work as PP_SKIPPED_CHARACTERS.
> Unfortunately I don't seem to understand how to flip lexer rules on and
> off well enough to make this work...
>
>
>
> PP_SKIPPED_CHARACTERS
>
>   : { IfDefedOut }? ( ~(F_NEW_LINE_CHARACTER | F_POUND_SIGN)
> F_INPUT_CHARACTER* F_NEW_LINE )*
>
>   ;
>
>
>
> I hope that is enough to give you an idea of what I'm trying to do.
> This approach just seems so elegant to me (by which I mean almost all
> declarative
> -- no need to sprinkle procedural logic in among my productions to
> maintain a stack or whatever) that I'd hope that it would be do able in
> ANTLR. What do you think? Is it a worthy goal? Does it feel possible to
> you? If not, is a goal worth trying to achieve?
>
>
>
> Thanks,
> Chris
>
>
>
>
>
>
>
> On Thu, Jul 28, 2011 at 2:37 PM, Sam Harwell
> <sharwell at pixelminegames.com>
> wrote:
>
> Hi Chris,
>
>
>
> Lookahead prediction occurs before predicates are evaluated. If fixed
> lookahead uniquely determines the alternative with a  semantic
> predicate, the predicate will not be evaluated as part of the decision
> process. I'm guessing (but not 100% sure) if you use a gated semantic
> predicate, then it will not be entering the rule:
>
>
>
> PP_SKIPPED_CHARACTERS
>
>   : {false}? => ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE )*
>
>   ;
>
>
>
> Also, a word of warning: this lexer rule can match a zero-length
> character span, which could result in an infinite loop. You should
> always ensure that every path through any lexer rule that's not marked
> "fragment" will consume at least 1 character. There's also a bug with
> certain exceptions in the lexer that can cause infinite loops - this
> has been resolved for release 3.4 but I haven't released it yet.
>
>
>
> Sam
>
>
>
> From: chris king [mailto:kingces95 at gmail.com]
> Sent: Thursday, July 28, 2011 4:19 PM
> To: antlr-interest at antlr.org; Sam Harwell
> Subject: Have I found an Antlr CSharp3 lexer bug if...
>
>
>
> Have I found an Antlr lexer CSharp3 bug if I can alter program
> execution (exception instead of no exception) by introducing a lexer
> production with a predicate that is always false? For example
>
>
>
> PP_SKIPPED_CHARACTERS
>
>   : { false }? ( ~(F_NEW_LINE_CHARACTER | '#') F_INPUT_CHARACTER*
> F_NEW_LINE
> )*
>
>   ;
>
>
>
> I would think that such a production should always be ignored because
> it's predicate is always false and therefore would never alter program
> execution.
> Yet I'm seeing a change in the execution of my program. I'm seeing it
> enter this function and throw a FailedPredicateException. I wouldn't
> have expected that this function should ever even have been executed
> because the predicate is always false.
>
>
>
>      [GrammarRule("PP_SKIPPED_CHARACTERS")]
>
>      private void mPP_SKIPPED_CHARACTERS()
>
>      {
>
>           EnterRule_PP_SKIPPED_CHARACTERS();
>
>           EnterRule("PP_SKIPPED_CHARACTERS", 31);
>
>           TraceIn("PP_SKIPPED_CHARACTERS", 31);
>
>           try
>
>           {
>
>               int _type = PP_SKIPPED_CHARACTERS;
>
>               int _channel = DefaultTokenChannel;
>
>               // CSharp\\CSharpPreProcessor.g:197:3: ({...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )
>
>               DebugEnterAlt(1);
>
>               // CSharp\\CSharpPreProcessor.g:197:5: {...}? (~ (
> F_NEW_LINE_CHARACTER | F_POUND_SIGN ) ( F_INPUT_CHARACTER )
>
>               {
>
>               DebugLocation(197, 5);
>
>               if (!(( false )))
>
>               {
>
>                    throw new FailedPredicateException(input,
> "PP_SKIPPED_CHARACTERS", " False() ");
>
>               }
>
>
>
> Sam, I'm on an all CSharp stack v3.3.1.7705. I'm using your VS plugin
> (which is wonderful) and build integration to generate the lexer/parser
> (also
> wonderful) and then running on top of your CSharp port of the runtime.
> If you think this is a bug and you'd like to have a look at the repro
> please let me know. The project is open source up on CodePlex.
>
>
>
> Thanks,
> Chris
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Fri Jul 29 10:05:45 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 29 Jul 2011 10:05:45 -0700
Subject: [antlr-interest] 3.4 C target release date?
In-Reply-To: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD70@EXCH-VIRTUAL.aerotechad.com>
References: <6B458D23F5D4A24ABCDB3C78EA97393B02AFFD70@EXCH-VIRTUAL.aerotechad.com>
Message-ID: <85f4a0537e30f302646122262ddd3094@mail.gmail.com>

Yeah the docs were holding me up. I will release it tomorrow.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Justin Murray
> Sent: Friday, July 29, 2011 7:09 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] 3.4 C target release date?
>
> Hi Jim,
>
> I'm not trying to rush you or anything, but I am wondering if you have
> an estimate for the release of the 3.4 C runtime. I'd like to use it in
> our next release, and with deadlines approaching it would be helpful to
> know if I'll have time to fit it in or not.
>
> Thank you!
>
> - Justin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From marcio.barroso at cpmbraxis.com  Fri Jul 29 12:10:16 2011
From: marcio.barroso at cpmbraxis.com (Marcio Alves Barroso)
Date: Fri, 29 Jul 2011 16:10:16 -0300
Subject: [antlr-interest] Cobol Again ?!? Oh no ...
Message-ID: <B4B04A3F2426AA4387E1AC66F32CB04102E5A1A1@EXCLS02.corporate.group>

Hi,

 

After long days searching for a Cobol ANTLR Grammar, I am almost giving up.

 

I am working in a project that must be a code suite analyser. There is a parser and lexer analyser already in use, but these was "hand made" and now I have a lot of performance issues to solve.

 

I would like to use a unique API to generate the analysers.

 

I know that won't be a problem to find a java grammar and for other languages. But COBOL? There is a way to find a grammar for this language or I could not use the same parser generator ( ANTLR ) for this language?

 

Regards,

M?rcio Alves Barroso
Knowledge Center - Methods And Tools

CPM Braxis Capgemini
Tel 55 11 4196-7925
Cel 55 11 8674-2075
www.cpmbraxis.com <http://www.cpmbraxis.com> 
www.capgemini.com <http://www.cpmbraxis.com> 

People matter, results count

 


From webmaster at altertoby.de  Fri Jul 29 15:08:28 2011
From: webmaster at altertoby.de (Tobias Diez)
Date: Sat, 30 Jul 2011 00:08:28 +0200
Subject: [antlr-interest] Tree matching: wildcard-operator
Message-ID: <000001cc4e3c$0bce3750$236aa5f0$@altertoby.de>

I digged a little bit deeper in this problem and there seems to be a serious
problem with wildcards.

Not even the rule
^(ENVIRONMENT_BEGIN .) . ^(ENVIRONMENT_END .)

matches something like 
 (ENVIRONMENT_BEGIN test1) (ENVIRONMENT_END test1) 
(where nothing is between these two nodes)

Another issue emerges if one further reduces the rule to 
^(ENVIRONMENT_BEGIN) . ^(ENVIRONMENT_END) -> ^(ENVIRONMENT)
Then I get a "Wildcard invalid as root; wildcard can itself be a tree"
error.
So maybe the first problem is related to the second one, although it
compiles well.

Any thoughts how two match anything between two given nodes?
Thanks!


-----Original Message-----
From: Tobias Diez [mailto:webmaster at altertoby.de] 
Sent: Dienstag, 26. Juli 2011 00:02
To: antlr-interest at antlr.org
Subject: Tree matching: wildcard-operator

Hi,

are there special concerns regarding the wildcard operator in a tree grammar
(with filter=true)?

I ask because 
^(ENVIRONMENT_BEGIN .) . * ^(ENVIRONMENT_END .)

did not match the correct input EXCEPT the LAST subtree in the file is of
the form "^(ENVIRONMENT_END .)".
A deeper investigation showed that the "next token equals endtoken than
cancel"-logic of the wildcard did not fire, although it should recognize the
environment-end subtree. So the .* matchs everything and the parser runs
until reaching the last subtree of the input stream. This last subtree is
than compared to  "^(ENVIRONMENT_END .)".
So "^(ENVIRONMENT_BEGIN a) b ^(ENVIRONMENT_END c)" is recognized but
"^(ENVIRONMENT_BEGIN a) b ^(ENVIRONMENT_END c) SOMETHING" not.

Is everything correct in the code above or is there a bug in ANTLR?

Thanks!


From parrt at cs.usfca.edu  Fri Jul 29 15:32:11 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 29 Jul 2011 15:32:11 -0700
Subject: [antlr-interest] Tree matching: wildcard-operator
In-Reply-To: <000001cc4e3c$0bce3750$236aa5f0$@altertoby.de>
References: <000001cc4e3c$0bce3750$236aa5f0$@altertoby.de>
Message-ID: <4DCA2718-E44D-4B22-9926-6A6FE2FB9A50@cs.usfca.edu>

i think maybe .* will work better. 
Ter
On Jul 29, 2011, at 3:08 PM, Tobias Diez wrote:

> I digged a little bit deeper in this problem and there seems to be a serious
> problem with wildcards.
> 
> Not even the rule
> ^(ENVIRONMENT_BEGIN .) . ^(ENVIRONMENT_END .)
> 
> matches something like 
> (ENVIRONMENT_BEGIN test1) (ENVIRONMENT_END test1) 
> (where nothing is between these two nodes)
> 
> Another issue emerges if one further reduces the rule to 
> ^(ENVIRONMENT_BEGIN) . ^(ENVIRONMENT_END) -> ^(ENVIRONMENT)
> Then I get a "Wildcard invalid as root; wildcard can itself be a tree"
> error.
> So maybe the first problem is related to the second one, although it
> compiles well.
> 
> Any thoughts how two match anything between two given nodes?
> Thanks!
> 
> 
> -----Original Message-----
> From: Tobias Diez [mailto:webmaster at altertoby.de] 
> Sent: Dienstag, 26. Juli 2011 00:02
> To: antlr-interest at antlr.org
> Subject: Tree matching: wildcard-operator
> 
> Hi,
> 
> are there special concerns regarding the wildcard operator in a tree grammar
> (with filter=true)?
> 
> I ask because 
> ^(ENVIRONMENT_BEGIN .) . * ^(ENVIRONMENT_END .)
> 
> did not match the correct input EXCEPT the LAST subtree in the file is of
> the form "^(ENVIRONMENT_END .)".
> A deeper investigation showed that the "next token equals endtoken than
> cancel"-logic of the wildcard did not fire, although it should recognize the
> environment-end subtree. So the .* matchs everything and the parser runs
> until reaching the last subtree of the input stream. This last subtree is
> than compared to  "^(ENVIRONMENT_END .)".
> So "^(ENVIRONMENT_BEGIN a) b ^(ENVIRONMENT_END c)" is recognized but
> "^(ENVIRONMENT_BEGIN a) b ^(ENVIRONMENT_END c) SOMETHING" not.
> 
> Is everything correct in the code above or is there a bug in ANTLR?
> 
> Thanks!
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sharwell at pixelminegames.com  Sat Jul 30 13:57:10 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sat, 30 Jul 2011 15:57:10 -0500
Subject: [antlr-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4
Message-ID: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>

Hello everyone,

 

I just finished updating the C# ports of ANTLR and StringTemplate for the
recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant
update for the C# port, and includes the following in addition to the
updates found in the corresponding Java versions.

 

.         The CSharp2 target has been updated to use the same runtime
assembly as the CSharp3 target (Antlr3.Runtime.dll).

.         Tree grammars with "filter=true" now automatically generate the
required overridden implementations of TreeFilter.Topdown and/or
TreeFilter.Bottomup.

.         Improved support for delegate grammars in the build process (set
their Build Action to AntlrAbstractGrammar and Custom Tool to
MSBuild:Compile).

.         Improved Tool performance.

 

The documentation and downloads can be found at the following page:

http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

 

Also, if you end up using (and liking) my Visual Studio 2010 extensions, I
appreciate the reviews on the Visual Studio Gallery. :)

 

Thank you,

Sam Harwell

 


From parrt at cs.usfca.edu  Sat Jul 30 14:02:41 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 30 Jul 2011 14:02:41 -0700
Subject: [antlr-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4
In-Reply-To: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
References: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
Message-ID: <D54D44FC-CCE6-40B0-9F10-B472F5AE735C@cs.usfca.edu>

Thanks for all your hard work, Sam!
Ter
On Jul 30, 2011, at 1:57 PM, Sam Harwell wrote:

> Hello everyone,
> 
> 
> 
> I just finished updating the C# ports of ANTLR and StringTemplate for the
> recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant
> update for the C# port, and includes the following in addition to the
> updates found in the corresponding Java versions.
> 
> 
> 
> .         The CSharp2 target has been updated to use the same runtime
> assembly as the CSharp3 target (Antlr3.Runtime.dll).
> 
> .         Tree grammars with "filter=true" now automatically generate the
> required overridden implementations of TreeFilter.Topdown and/or
> TreeFilter.Bottomup.
> 
> .         Improved support for delegate grammars in the build process (set
> their Build Action to AntlrAbstractGrammar and Custom Tool to
> MSBuild:Compile).
> 
> .         Improved Tool performance.
> 
> 
> 
> The documentation and downloads can be found at the following page:
> 
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> 
> 
> 
> Also, if you end up using (and liking) my Visual Studio 2010 extensions, I
> appreciate the reviews on the Visual Studio Gallery. :)
> 
> 
> 
> Thank you,
> 
> Sam Harwell
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From rbellamy at pteradigm.com  Sat Jul 30 14:12:31 2011
From: rbellamy at pteradigm.com (G. Richard Bellamy)
Date: Sat, 30 Jul 2011 14:12:31 -0700
Subject: [antlr-interest] C# updates for ANTLR 3.4, StringTemplate 4.0.4
In-Reply-To: <D54D44FC-CCE6-40B0-9F10-B472F5AE735C@cs.usfca.edu>
References: <01fe01cc4efb$408aae50$c1a00af0$@pixelminegames.com>
	<D54D44FC-CCE6-40B0-9F10-B472F5AE735C@cs.usfca.edu>
Message-ID: <4E3473BF.9000408@pteradigm.com>

I'll say it again: brilliant VS.NET tooling.

-rb

On 7/30/2011 2:02 PM, Terence Parr wrote:
> Thanks for all your hard work, Sam!
> Ter
> On Jul 30, 2011, at 1:57 PM, Sam Harwell wrote:
>
>> Hello everyone,
>>
>>
>>
>> I just finished updating the C# ports of ANTLR and StringTemplate for the
>> recent releases of ANTLR 3.4 and StringTemplate 4.0.4. This is a significant
>> update for the C# port, and includes the following in addition to the
>> updates found in the corresponding Java versions.
>>
>>
>>
>> .         The CSharp2 target has been updated to use the same runtime
>> assembly as the CSharp3 target (Antlr3.Runtime.dll).
>>
>> .         Tree grammars with "filter=true" now automatically generate the
>> required overridden implementations of TreeFilter.Topdown and/or
>> TreeFilter.Bottomup.
>>
>> .         Improved support for delegate grammars in the build process (set
>> their Build Action to AntlrAbstractGrammar and Custom Tool to
>> MSBuild:Compile).
>>
>> .         Improved Tool performance.
>>
>>
>>
>> The documentation and downloads can be found at the following page:
>>
>> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
>>
>>
>>
>> Also, if you end up using (and liking) my Visual Studio 2010 extensions, I
>> appreciate the reviews on the Visual Studio Gallery. :)
>>
>>
>>
>> Thank you,
>>
>> Sam Harwell
>>
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gary at sumwise.com  Sun Jul 31 02:58:51 2011
From: gary at sumwise.com (Gary Miller)
Date: Sun, 31 Jul 2011 19:58:51 +1000
Subject: [antlr-interest] Fwd: Any HTML editors for rich editing of
 documents conforming to an ANTLR grammar?
In-Reply-To: <016a01cc4e09$a4d3adf0$ee7b09d0$@pixelminegames.com>
References: <015b01cc4e02$80928990$81b79cb0$@pixelminegames.com>
	<CAE2xRkE7X11kwP+e9FRvm15x_wAZz1wKv6nr_j-AL=uQMdm4hw@mail.gmail.com>
	<CAE2xRkFGwJe=EX1K=AAfQGSKK=ScnhqDfn2gK4YPfoFuwqerBA@mail.gmail.com>
	<016a01cc4e09$a4d3adf0$ee7b09d0$@pixelminegames.com>
Message-ID: <CAFCNb3jkTW16T0EXr+MzMAOQs7e5uLQG3RFspmnP=UJJBT+hiQ@mail.gmail.com>

Hey Colin,

A possible answer is for you to use an ANTLR grammar with exception
handling inside a browser. I don't have experience using ANTLR to do
syntax (context free or in a semantic context) prompting, and
understand that making this easier is one of the objectives of ANTLR
4. This is obviously not a solution for a generic DSL, like XText.

We (www.sumwise.com) are using ANTLR generated code in a browser (not
server side) in a roundabout way. Using the default Java target, the
Java source is then taken and compiled to Javascript using Google Web
Toolkit (GWT). There is a bit a work to get the ANTLR runtime to be
GWT compliment. I have made my version of this available at
http://code.google.com/p/gwtified/. From conversation I have had this
is for more robust then the JS target. The JS is all modern browser is
fast enough for acceptable results in my experience (Chrome, Safari,
FF3.5+, IE9, iPhone, Android).

Is there any interest in get GWT officially supported in ANTLR? It is
mainly a build issue, there are very few source issues.

Regards
Gary

From antlrmen at yahoo.com  Sun Jul 31 07:32:48 2011
From: antlrmen at yahoo.com (Roy Metzger)
Date: Sun, 31 Jul 2011 07:32:48 -0700 (PDT)
Subject: [antlr-interest] getting text out of multiple nodes (noob question)
Message-ID: <1312122768.86434.YahooMailNeo@web121107.mail.ne1.yahoo.com>

Please forgive me for asking such question, but I what is easiest way of getting text from multiple nodes?
When I have in a rule something like id+=ID, how do I get text of all id nodes. Is it returned as List of Strings, or do I cycle in a for loop getting text out of each node,or there is some other way ?

Thanks for answer, and sorry for such "newbie" question!

From jimi at temporal-wave.com  Sun Jul 31 10:36:15 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 31 Jul 2011 10:36:15 -0700
Subject: [antlr-interest] getting text out of multiple nodes (noob
	question)
In-Reply-To: <1312122768.86434.YahooMailNeo@web121107.mail.ne1.yahoo.com>
References: <1312122768.86434.YahooMailNeo@web121107.mail.ne1.yahoo.com>
Message-ID: <3fca7ed44ec1a35f2a1787efcd644e6d@mail.gmail.com>

http://markmail.org/message/ti67rwlidviadmp2


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Roy Metzger
> Sent: Sunday, July 31, 2011 7:33 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] getting text out of multiple nodes (noob
> question)
>
> Please forgive me for asking such question, but I what is easiest way
> of getting text from multiple nodes?
> When I have in a rule something like id+=ID, how do I get text of all
> id nodes. Is it returned as List of Strings, or do I cycle in a for
> loop getting text out of each node,or there is some other way ?
>
> Thanks for answer, and sorry for such "newbie" question!
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

