From win at wincent.com  Sun Jul  1 02:46:14 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sun, 1 Jul 2007 11:46:14 +0200
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer (C#)
In-Reply-To: <ce40b1470706300916y15083664sa9341d3564e92b40@mail.gmail.com>
References: <ce40b1470706300916y15083664sa9341d3564e92b40@mail.gmail.com>
Message-ID: <0E88B09C-5868-4677-8F2A-4112E1D12099@wincent.com>

El 30/6/2007, a las 18:16, David Piepgrass escribi?:

> [08:35:47] warning(206): Huge.g:1:10: Alternative 4: after matching
> input such as '/''*''/''*''/''*''/''*''/'<EOT> decision cannot predict
> what comes next due to recursion overflow to ML_COMMENT from
> ML_COMMENT

I don't know if this will help, but that specific kind of error is  
discussed in the ANTLR book (p 281 of the PDF).

Cheers,
Wincent


From Harald.Wellmann at gmx.de  Sun Jul  1 03:32:47 2007
From: Harald.Wellmann at gmx.de (Harald Wellmann)
Date: Sun, 01 Jul 2007 12:32:47 +0200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <46878217.4090608@gmx.de>
References: <46878217.4090608@gmx.de>
Message-ID: <468782CF.70102@gmx.de>

Getting started with ANTLR v3 is a frustrating experience for its lack of
coherent documentation and non-trivial example code.

I've been using ANTLR since the good old times when it used to be called
PCCTS, and I always used to be fond of it, but I am disappointed with v3.

Marketing-style hype about the latest cool features does not really help
when you get no little or no information on how to use them.

Even v2 documentatation was a bit scarce, it always cost you some trial and
error to get things right, but this was bliss compared to the scattered and
incomplete bits of documentation you get for v3.

Yes, I know there's a book now. And no, I don't think it's in the spirit of
 a successful open source project to hide all relevant information in a
book that is only available commercially.

There's nothing wrong about books, but you can publish a book and still
make the information publicly available, see e.g. the Subversion Book.

By the way, even this mailing list is inaccessible to most people in a
corporate IT environment, as the Mailman Frontend is running on a
non-standard port 8080 which tends to get blocked by firewalls.

Regards,

Harald

From shalini.sh at gmail.com  Sun Jul  1 06:24:37 2007
From: shalini.sh at gmail.com (=?utf-8?b?c2hhbGluaS5zaEBnbWFpbC5jb20=?=)
Date: Sun, 1 Jul 2007 13:24:37 +0000 (UTC)
Subject: [antlr-interest] Block Returning Value in ANTLR
References: <6966751005040106081243abee@mail.gmail.com>
	<dd3a065f05040106536fddba9d@mail.gmail.com>
Message-ID: <loom.20070701T152315-74@post.gmane.org>


http://shalinish.blogspot.com




From win at wincent.com  Sun Jul  1 07:59:40 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sun, 1 Jul 2007 16:59:40 +0200
Subject: [antlr-interest] Fun with ANTLR3: mystery of the huge lexer
In-Reply-To: <20070630235942.959E511EBDF@www.antlr.org>
References: <ce40b1470706301612q78a7652bl68414162de8d5121@mail.gmail.com>
	<20070630235942.959E511EBDF@www.antlr.org>
Message-ID: <72CCEAB8-E395-4F4C-9512-9111B2979735@wincent.com>

El 1/7/2007, a las 1:59, Gavin Lambert escribi?:

> Lexer rules are implicitly assigned priorities based on what order  
> they appear in the grammar -- rules that appear first are preferred  
> over ones that are listed later.
>
> Having said that, I think there's also a longest-match-wins rule  
> too, and I'm not sure how they interact.

I made some notes in that very subject here:

<http://wincent.com/knowledge-base/ 
ANTLR_lexers_in_depth#Precedence_among_lexer_rules>

Not sure if my conclusions are correct, but I've been making notes  
while working with ANTLR for a few months trying to turn all those  
mysterious "black art" aspects of ANTLR's workings into deterministic  
certainties; it's pretty hard to write a grammar unless you  
understand *exactly* what it happening behind the scenes.

Wincent


From parrt at cs.usfca.edu  Sun Jul  1 08:16:31 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Jul 2007 08:16:31 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
Message-ID: <B256895E-9584-452F-97B5-D709BE018004@cs.usfca.edu>

On Jul 1, 2007, at 3:32 AM, Harald Wellmann wrote:

> Getting started with ANTLR v3 is a frustrating experience for its  
> lack of
> coherent documentation and non-trivial example code.

Well, it was just released, bro! ;)  v2 had nothing for a while  
either ;)  I've worked 7 days a week for 4 years to bring you the  
software.  Can you hold your horses for a bit until I can get you  
some more doc?

> I've been using ANTLR since the good old times when it used to be  
> called
> PCCTS, and I always used to be fond of it, but I am disappointed  
> with v3.
>
> Marketing-style hype about the latest cool features does not really  
> help
> when you get no little or no information on how to use them.

I'm kind of surprised by your reaction.  There are lots and lots of  
people building projects.  We provide examples, a helpful list, a  
start on doc, a FAQ, etc...  With your experience going back 15  
years, I'm surprised you can't get started, particularly with  
ANTLRWorks!

> Even v2 documentatation was a bit scarce, it always cost you some  
> trial and
> error to get things right, but this was bliss compared to the  
> scattered and
> incomplete bits of documentation you get for v3.

Feel free to help out...can't always get something for nuthin' ;)

> Yes, I know there's a book now. And no, I don't think it's in the  
> spirit of
>  a successful open source project to hide all relevant information  
> in a
> book that is only available commercially.

You would begrudge me $24 for providing such a useful tool?  I've  
devoted my life to building parsing tools (nearly 20 years now).  The  
book was a way for me to write *good* doc as opposed to the v2 doc.

> There's nothing wrong about books, but you can publish a book and  
> still
> make the information publicly available, see e.g. the Subversion Book.

Yep, I'm working on the doc as often as I can.  I also have to keep  
working on the software, fix bugs, do my other job *and* do the same  
for StringTemplate.

> By the way, even this mailing list is inaccessible to most people in a
> corporate IT environment, as the Mailman Frontend is running on a
> non-standard port 8080 which tends to get blocked by firewalls.

People seem to get around that.  Shall I sign you up?  You can always  
do the email subscription I think instead.

Free software is free software and whatever doc you can find  
(including the source).  Why you expect a shrink-wrapped piece of  
commercial software with professional docs for free is beyond me.

Thanks for your interest,
Ter


From qwertie256 at gmail.com  Sun Jul  1 09:22:07 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sun, 1 Jul 2007 10:22:07 -0600
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
Message-ID: <ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>

> Getting started with ANTLR v3 is a frustrating experience for its lack of
> coherent documentation and non-trivial example code.
>
> I've been using ANTLR since the good old times when it used to be called
> PCCTS, and I always used to be fond of it, but I am disappointed with v3.
>
> Marketing-style hype about the latest cool features does not really help
> when you get no little or no information on how to use them.

I know how you feel. I even bought the book and was pretty
disappointed with it. For starters I had no idea that there would be
absolutely no information about non-Java targets, it's hard to use as
a reference because much of it is treated as a tutorial, there is no
tutorial or reference for the runtime library, there's no specific
discussion of differences between v2 and v3, no complete grammar file
in chapter 3 ... I could go on. (mind you, there is a lot of useful
information despite these problems.)

Still, I think it's a general problem in the computer field that the
authors of the most useful projects, i.e. open-source projects, have
trouble getting paid anything for their work. The government, and most
social institutions, have provided no means of making money except
selling copies of something. This is very unfortunate, because
e-copies cost nothing to make and logically should be free, but I
don't think you can blame Ter for it. It's a limitation of our
society's institutions. He could give away the PDF, but I think the
truth is, it would hurt book sales. Don't be mad at Ter just because
there are more generous people out there who give away all their hard
work for little or nothing in return.

Anyway, there is a lot more useful information about ANTLR online now.

Here's a nice collection of notes for writing lexers:
http://wincent.com/knowledge-base/ANTLR_lexers_in_depth

If you're using C#, here are a couple of helpful links:
http://www.codeproject.com/csharp/sota_expression_evaluator.asp
http://www.manuelabadia.com/blog/PermaLink,guid,ff1dc504-f854-40b4-bfe7-250ce91efad7.aspx

And here is some information I wrote earlier about setting up the
classpath for ANTLR 3:
--------------------------------------------------------------------------
Ok, I found the answer at

http://www.antlr.org/wiki/pages/viewpage.action?pageId=728

except that it doesn't say how to add the .jars to the classpath, nor
what Java version is required. IMO, there should be a link to this
page from the download page, and the link to "ANTLR tool+runtime
binary only jar" should have a disclaimer saying that the jar is not
usable by itself.

On windows the CLASSPATH is normally forgotten when you exit a command
prompt so you might find it useful to write a batch file that contains
this:

@echo off
echo Note, you must edit this file to set the path to the JARs!
set antlrpath=C:\Path\to\antlr-3.0\lib
set classpath=%antlrpath%\antlr-2.7.7.jar;%classpath%
set classpath=%antlrpath%\antlr-3.0.jar;%classpath%
set classpath=%antlrpath%\antlr-runtime-3.0.jar;%classpath%
set classpath=%antlrpath%\stringtemplate-3.0.jar;%classpath%
echo Classpath: %classpath%

IMO scripts like this should be included with ANTLR. After you run the
above, commands like

java org.antlr.Tool Test.g

should work.
-- 
- David
http://qism.blogspot.com

From qwertie256 at gmail.com  Sun Jul  1 09:29:10 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sun, 1 Jul 2007 10:29:10 -0600
Subject: [antlr-interest] How to control token numbers manually?
Message-ID: <ce40b1470707010929r15373a74pac3d2fef6790ebc4@mail.gmail.com>

In my project I need to control the numeric identifiers used for
tokens, because there may be several separate (unrelated) lexers that
produce the same token types (ID, INT, REAL, etc.)

Preferably I would like to use variables to hold the token numbers and
determine the numbers at run-time, but before any lexer starts. Never
mind why...

How can I accomplish this?

-- 
- David
http://qism.blogspot.com

From chintanraoh at gmail.com  Sun Jul  1 09:44:15 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Mon, 2 Jul 2007 04:44:15 +1200
Subject: [antlr-interest] Problem with .* : RecognitionException never thrown
Message-ID: <ec8bdb100707010944v40bd0722i129e3b67ecd8fdde@mail.gmail.com>

Hi,
I was testing antlr
I found a possible bug

I do something  like the thing enclosed in <code> and </code>
<code>
grammar test;

TOKEN	:	'token';

test:(.)*
;
</code>

i get an error

testParser.java:97: exception org.antlr.runtime.RecognitionException
is never thrown in body of corresponding try statement
 catch (RecognitionException re) {

i make rule test to
test:(.)* EOF

this error is not flagged .
The possible problem could be  "." also matches the token EOF. ( I
don't really know :) )
I don't know whether this has been reported earlier . Just thought I
should report this.

regards,
Chintan Rao H

From dcaton at shorelinesoftware.com  Sun Jul  1 10:03:56 2007
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Sun, 1 Jul 2007 13:03:56 -0400
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
Message-ID: <008401c7bc01$d0e387b0$72aa9710$@com>

Harald:

It never ceases to amaze me how professional programmers who write code for
a living expect others to do it for free.

I imagine that Ter's motivation for writing Antlr is not money, but
personally, I hope he gets stinking filthy rich from the proceeds of his
book.  If Antlr were a commercial product, he'd probably be making a nice
living out of it. Tools like Antlr are very specialized things, and good
ones can command a hefty price tag.  But instead he's chosen to give it
away.  Some people appreciate that, sadly, others don't.

If I were Ter, I'm not sure my response to you would have been so cordial.
We all need to vent now and then, but I think you owe him an apology.

--
Don


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Harald Wellmann
> Sent: Sunday, July 01, 2007 6:33 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [v3] Lack of documentation
> 
> Getting started with ANTLR v3 is a frustrating experience for its
> lack of
> coherent documentation and non-trivial example code.
> 
> I've been using ANTLR since the good old times when it used to be
> called
> PCCTS, and I always used to be fond of it, but I am disappointed with
> v3.
> 
> Marketing-style hype about the latest cool features does not really
> help
> when you get no little or no information on how to use them.
> 
> Even v2 documentatation was a bit scarce, it always cost you some
> trial and
> error to get things right, but this was bliss compared to the
> scattered and
> incomplete bits of documentation you get for v3.
> 
> Yes, I know there's a book now. And no, I don't think it's in the
> spirit of
>  a successful open source project to hide all relevant information in
> a
> book that is only available commercially.
> 
> There's nothing wrong about books, but you can publish a book and
> still
> make the information publicly available, see e.g. the Subversion
> Book.
> 
> By the way, even this mailing list is inaccessible to most people in
> a
> corporate IT environment, as the Mailman Frontend is running on a
> non-standard port 8080 which tends to get blocked by firewalls.
> 
> Regards,
> 
> Harald



From parrt at cs.usfca.edu  Sun Jul  1 10:10:24 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Jul 2007 10:10:24 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
Message-ID: <A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>

On Jul 1, 2007, at 9:22 AM, David Piepgrass wrote:
>> Getting started with ANTLR v3 is a frustrating experience for its  
>> lack of
>> coherent documentation and non-trivial example code.
>>
>> I've been using ANTLR since the good old times when it used to be  
>> called
>> PCCTS, and I always used to be fond of it, but I am disappointed  
>> with v3.
>>
>> Marketing-style hype about the latest cool features does not  
>> really help
>> when you get no little or no information on how to use them.
>
> I know how you feel. I even bought the book and was pretty
> disappointed with it.

it's all about managing expectations. ;)

> For starters I had no idea that there would be
> absolutely no information about non-Java targets, it's hard to use as

there was a serious space issue. I went like 100 pages over their  
original limit.  The targets and API would change often enough that I  
figured that should be in the wiki.  The javadoc is up for some  
targets already too.

> a reference because much of it is treated as a tutorial, there is no
> tutorial or reference for the runtime library, there's no specific
> discussion of differences between v2 and v3,

on the wiki

> no complete grammar file
> in chapter 3

you mean other than the complete grammar syntax I put in there?

> ... I could go on. (mind you, there is a lot of useful
> information despite these problems.)

It's all about how much I could cram in there.

> Still, I think it's a general problem in the computer field that the
> authors of the most useful projects, i.e. open-source projects, have
> trouble getting paid anything for their work. The government, and most
> social institutions, have provided no means of making money except
> selling copies of something. This is very unfortunate, because
> e-copies cost nothing to make and logically should be free, but I
> don't think you can blame Ter for it. It's a limitation of our

Money makes me spend a lot more time on it than I would for free  
doc.  Why should a book be free just because my marginal cost to  
produce is $0?  The value is in the content not the medium.

> society's institutions. He could give away the PDF, but I think the
> truth is, it would hurt book sales. Don't be mad at Ter just because
> there are more generous people out there who give away all their hard
> work for little or nothing in return.

Are you really saying that devoting 20 years of my life to make the  
best tools possible is not generous?  You kidding me?  others are  
more generous?  You've got to be kidding me.  People swoop in and  
built a few patches or whatever and then move on.  Rare few start  
building something of value and keep honing it. How many people do  
you know that have been dedicated to free software for as long as I  
have?  I am working on the doc and you can help add more doc.

I get $3 measly dollars when you buy the book at amazon.  I want all  
you whiners about the doc to either decide you can't use the tool  
because it's not well documented enough or suck it up and start  
helping out.  Most of the whiners are freeloaders....complaining, but  
never having contributed themselves to open source or ANTLR before.   
Bunch of ungrateful freeloaders...how dare you make these demands!

Ter



From porcelli at uol.com.br  Sun Jul  1 10:37:54 2007
From: porcelli at uol.com.br (Alexandre Porcelli)
Date: Sun, 1 Jul 2007 14:37:54 -0300
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
Message-ID: <ee873c070707011037k5508e010mc09215ed1e9f1b88@mail.gmail.com>

It is very difficult read these messages and just forgets it and move
directly to trash!

Most of people are learning and exchanging knowledge through this
list; It is amazing that a person ask for more than that (for free!)
and use this list for it!

We have a great book available and a great people exchanging info here
- what else is necessary? More docs? The Terr's book is wonderful ,
during the read we know that he wrote that with passion to disseminate
knowledge, and had careful to make the book accessible for everyone!

Now a days I use v3 in my day by day? and reading these messages I'm
feeling a bit embarrassed and even need to ask for apologies to not
contribute more to this great software...

On 7/1/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> On Jul 1, 2007, at 9:22 AM, David Piepgrass wrote:
> >> Getting started with ANTLR v3 is a frustrating experience for its
> >> lack of
> >> coherent documentation and non-trivial example code.
> >>
> >> I've been using ANTLR since the good old times when it used to be
> >> called
> >> PCCTS, and I always used to be fond of it, but I am disappointed
> >> with v3.
> >>
> >> Marketing-style hype about the latest cool features does not
> >> really help
> >> when you get no little or no information on how to use them.
> >
> > I know how you feel. I even bought the book and was pretty
> > disappointed with it.
>
> it's all about managing expectations. ;)
>
> > For starters I had no idea that there would be
> > absolutely no information about non-Java targets, it's hard to use as
>
> there was a serious space issue. I went like 100 pages over their
> original limit.  The targets and API would change often enough that I
> figured that should be in the wiki.  The javadoc is up for some
> targets already too.
>
> > a reference because much of it is treated as a tutorial, there is no
> > tutorial or reference for the runtime library, there's no specific
> > discussion of differences between v2 and v3,
>
> on the wiki
>
> > no complete grammar file
> > in chapter 3
>
> you mean other than the complete grammar syntax I put in there?
>
> > ... I could go on. (mind you, there is a lot of useful
> > information despite these problems.)
>
> It's all about how much I could cram in there.
>
> > Still, I think it's a general problem in the computer field that the
> > authors of the most useful projects, i.e. open-source projects, have
> > trouble getting paid anything for their work. The government, and most
> > social institutions, have provided no means of making money except
> > selling copies of something. This is very unfortunate, because
> > e-copies cost nothing to make and logically should be free, but I
> > don't think you can blame Ter for it. It's a limitation of our
>
> Money makes me spend a lot more time on it than I would for free
> doc.  Why should a book be free just because my marginal cost to
> produce is $0?  The value is in the content not the medium.
>
> > society's institutions. He could give away the PDF, but I think the
> > truth is, it would hurt book sales. Don't be mad at Ter just because
> > there are more generous people out there who give away all their hard
> > work for little or nothing in return.
>
> Are you really saying that devoting 20 years of my life to make the
> best tools possible is not generous?  You kidding me?  others are
> more generous?  You've got to be kidding me.  People swoop in and
> built a few patches or whatever and then move on.  Rare few start
> building something of value and keep honing it. How many people do
> you know that have been dedicated to free software for as long as I
> have?  I am working on the doc and you can help add more doc.
>
> I get $3 measly dollars when you buy the book at amazon.  I want all
> you whiners about the doc to either decide you can't use the tool
> because it's not well documented enough or suck it up and start
> helping out.  Most of the whiners are freeloaders....complaining, but
> never having contributed themselves to open source or ANTLR before.
> Bunch of ungrateful freeloaders...how dare you make these demands!
>
> Ter
>
>
>

From gudnabrsam at yahoo.com  Sun Jul  1 10:38:19 2007
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Sun, 1 Jul 2007 10:38:19 -0700 (PDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
Message-ID: <588537.36158.qm@web55103.mail.re4.yahoo.com>


--- Terence Parr <parrt at cs.usfca.edu> wrote:

> On Jul 1, 2007, at 9:22 AM, David Piepgrass wrote:
> >> Getting started with ANTLR v3 is a frustrating
> experience for its  
> >> lack of
> >> coherent documentation and non-trivial example
> code.
> >>
> >> I've been using ANTLR since the good old times
> when it used to be  
> >> called
> >> PCCTS, and I always used to be fond of it, but I
> am disappointed  
> >> with v3.
> >>
> >> Marketing-style hype about the latest cool
> features does not  
> >> really help
> >> when you get no little or no information on how
> to use them.
> >
> > I know how you feel. I even bought the book and
> was pretty
> > disappointed with it.
> 
> it's all about managing expectations. ;)
> 
> > For starters I had no idea that there would be
> > absolutely no information about non-Java targets,
> it's hard to use as
> 
> there was a serious space issue. I went like 100
> pages over their  
> original limit.  The targets and API would change
> often enough that I  
> figured that should be in the wiki.  The javadoc is
> up for some  
> targets already too.
> 
> > a reference because much of it is treated as a
> tutorial, there is no
> > tutorial or reference for the runtime library,
> there's no specific
> > discussion of differences between v2 and v3,
> 
> on the wiki
> 
> > no complete grammar file
> > in chapter 3
> 
> you mean other than the complete grammar syntax I
> put in there?
> 
> > ... I could go on. (mind you, there is a lot of
> useful
> > information despite these problems.)
> 
> It's all about how much I could cram in there.
> 
> > Still, I think it's a general problem in the
> computer field that the
> > authors of the most useful projects, i.e.
> open-source projects, have
> > trouble getting paid anything for their work. The
> government, and most
> > social institutions, have provided no means of
> making money except
> > selling copies of something. This is very
> unfortunate, because
> > e-copies cost nothing to make and logically should
> be free, but I
> > don't think you can blame Ter for it. It's a
> limitation of our
> 
> Money makes me spend a lot more time on it than I
> would for free  
> doc.  Why should a book be free just because my
> marginal cost to  
> produce is $0?  The value is in the content not the
> medium.
> 
> > society's institutions. He could give away the
> PDF, but I think the
> > truth is, it would hurt book sales. Don't be mad
> at Ter just because
> > there are more generous people out there who give
> away all their hard
> > work for little or nothing in return.
> 
> Are you really saying that devoting 20 years of my
> life to make the  
> best tools possible is not generous?  You kidding
> me?  others are  
> more generous?  You've got to be kidding me.  People
> swoop in and  
> built a few patches or whatever and then move on. 
> Rare few start  
> building something of value and keep honing it. How
> many people do  
> you know that have been dedicated to free software
> for as long as I  
> have?  I am working on the doc and you can help add
> more doc.
> 
> I get $3 measly dollars when you buy the book at
> amazon.  I want all  
> you whiners about the doc to either decide you can't
> use the tool  
> because it's not well documented enough or suck it
> up and start  
> helping out.  Most of the whiners are
> freeloaders....complaining, but  
> never having contributed themselves to open source
> or ANTLR before.   
> Bunch of ungrateful freeloaders...how dare you make
> these demands!
> 

:)  I can't stay out of it any longer.  That sounded
harsh and some folks may take Ter up on the offer to
bail, but c'est la vie... I read this as an indication
that he's secure enough in ANTLR's intrinsic value
that he doesn't fear to lose a couple of the
"freeloaders".  If you've ever worked with some
blockhead who has somehow managed to infiltrate our
ranks, you may have found yourself wishing you didn't
have to deal with such riffraff, so it doesn't really
surprise me if Ter makes the decision that there are
enough clueful devs out there that he won't miss the
ones who want to use a new version of a free tool
still in its infancy but expect the free doc to be
comprehensive.  One thing about open source is that it
emphasizes an amusing division among developers:  some
take it as an affront that they are expected to sully
themselves reading source code; others see it as a
privilege and thank Boole (that's a joke) that they
have access to the source code.  Personally, I often
read OSS source before even attempting to use a given
API, though that may be due to some failing on my part
that I can understand syntactically constrained source
code more readily than potentially ambiguous English. 
;)  And since I know I'm not the first to make this
observation, I shouldn't have to, but... duh, it's
entirely understandable that writing doc is tedious,
while writing code is fun.  And if you can't
sympathize with writing code being fun, you're in the
wrong business.  :|

-Matt

> Ter
> 
> 
> 



       
____________________________________________________________________________________Ready for the edge of your seat? 
Check out tonight's top picks on Yahoo! TV. 
http://tv.yahoo.com/

From qwertie256 at gmail.com  Sun Jul  1 12:05:44 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Sun, 1 Jul 2007 13:05:44 -0600
Subject: [antlr-interest] Strange warnings
Message-ID: <ce40b1470707011205v5f344e9aqf63980675d56e218@mail.gmail.com>

I get some warnings related to this rule and I can't see why.

fragment PUNC_CHAR:
	  ('\\' WS_CHAR)=>'\\'
	| {input.LA(2) != '*' && input.LA(2) != '/'}? '/'
	| (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'
	  |'*'|'-'|'+'|'='|'|'|','|'<'|'>'|'?');
PUNC: PUNC_CHAR+;

This rule says PUNC_CHAR can only match a backslash if it is followed
by a space. So there should be no way PUNC can match input such as
\\\! or \\\/.

Also, what is <EPSILON>?

[12:51:06] warning(209): Boo.g:153:1: Multiple token rules can match
input such as "'\\''\\''\\'{'!', '$'..'&', '*'..'.', ':', '<'..'@',
'^', '|', '~'}": ID, PUNC
As a result, tokens(s) PUNC were disabled for that input
[12:57:14] warning(209): D:\Dev\Loyc\BooLexer\Boo.g:153:1: Multiple
token rules can match input such as "'\\''\\''\\''/'": ID, PUNC
As a result, tokens(s) PUNC were disabled for that input
[12:57:14] warning(209): D:\Dev\Loyc\BooLexer\Boo.g:153:1: Multiple
token rules can match input such as "<EPSILON>": RE_STRING, PUNC
As a result, tokens(s) PUNC were disabled for that input
[12:57:14] warning(209): D:\Dev\Loyc\BooLexer\Boo.g:153:1: Multiple
token rules can match input such as "'\\''\\''\\''\\'": ID, PUNC
As a result, tokens(s) PUNC were disabled for that input
[12:57:14] warning(209): D:\Dev\Loyc\BooLexer\Boo.g:153:1: Multiple
token rules can match input such as "<EPSILON>": RE_STRING, PUNC
As a result, tokens(s) PUNC were disabled for that input


-- 
- David
http://qism.blogspot.com

From easjolly at ix.netcom.com  Sun Jul  1 13:24:55 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Sun, 1 Jul 2007 14:24:55 -0600
Subject: [antlr-interest] Thank you!
Message-ID: <E1I55xw-0007Ok-A3@elasmtp-curtail.atl.sa.earthlink.net>

I started using ANTLR because a computer scientist friend was kind enough to
point out to me  that the problem I was trying to solve was best solved by
parsing.  My previous programming  experience was in the area of
computational science, solving differential equations and all that, and at
the time, I had no idea what parsing was.

My friend was right that parsing was the solution.

The problem I'm working on, developing open source software to backtranslate
braille technical material, is actually a neat example of a problem where
parsing is the solution so I'll explain it briefly.  BTW, braille is usually
represented electronically by a standard (but necessarily somewhat
arbitrary) transliteration to ASCII characters known as ASCII Braille so
I'll use that in the examples. (The reason the transliteration has to be
arbitrary is that braille cells are symbols, not characters, and have
different meanings in  different contexts.)

Since standard six-dot braille only has 64 different cells counting the
space, it is naturally necessary to use multi-cell braille symbols (i.e.
tokens) to represent individual print characters.  Also, many braille
systems include some sort of shorthand to compensate for tactile reading's
being a bit slower than visual reading.  

So, for example, the print word 'greatness' is translated according to the
American English braille system as 'grt;s' where braille 'grt' is shorthand
for print 'great' and braille  ';s' is shorthand for print 'ness'.  And,
just to make things more fun, the grammar is  context-dependent.  For
example, braille '7e7s7' is print '(eggs)' since the braille cell
transliterated as a '7' represents a left paren at the beginning of a word,
the sequence 'gg' in the middle of a word, and a right paren at the end of a
word.

Anyway, once I realized that parsing was what I needed, Google luckily led
me to ANTLR and many of the people on this list were very generous in
helping me when I got stuck. And, of course, ANTLR's predicates and actions
turned out to be essential for dealing with a context-sensitive grammar like
braille. 

Looking back, most of the problems I had when I started were not at all the
fault of ANTLR's  documentation. In the first place, as I've already
indicated, I didn't know anything about  parsing technology before I started
reading the ANTLR manual.  I can say now that this was not the most
efficient approach to learn about parsing and I don't think it was ever
intended to be so.

The second problem I had was that I was just learning Java. (I had at least
had the sense to realize that Fortran wasn't the right language!)  So, while
the ANTLR manual kept emphasizing that the best way to understand what was
going on was to look at the generated code, this wasn't as helpful as it
would have been if I'd initially been able to grok Java the way I could grok
Fortran.  

The third problem I had was that the domain-specific language I'm working
with is very poorly documented and I was learning this language along with
the tools.

To summarize, the ANTLR documentation reasonably assumes that you not only
understand the problem you are trying to solve but also have some
understanding of parsing, considerable facility in your target language, and
know enough about Java technology to use an application written in Java.  As
the book's Preface says, its intended audience is primarily the "practicing
software developer" who is building "interpreters and translators for
domain- specific languages." 

[As an aside, don't most practicing developers start with a simple case that
works and then make incremental changes so that when they run into a problem
they know the likely cause?]

My biggest problem with the ANTLR documentation has been philosophical.
Unlike Ter, I think better bottom-up, not top-down.  I confess I would have
initially been entirely happy with a manual that focused on explaining how
to use ANTLR's lexical analysis to print out a stream of tokens with
absolutely no discussion of what I might want to do next or even why ANTLR
provides an unusually effective way of doing this.

I would like to end by saying that thanks in no small part to Terence and to
many of the rest of you, braille-using students may no longer have to rely
on humans to interpret their braille math homework and exams before their
teachers can grade them. And thanks to the many new capabilities of v3, it
appears that I will be able refactor my application so its grammar and
supporting code is much shorter and can be maintained by someone else.

Susan J.
www.dotlessbraille.org



From rdclark at gmail.com  Sun Jul  1 14:08:13 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 1 Jul 2007 14:08:13 -0700
Subject: [antlr-interest] Generation of grammar doc
In-Reply-To: <4683D6DA.3040204@ogre4j.org>
References: <46835BE7.40004@ogre4j.org> <4683B055.5090501@ogre4j.org>
	<051466DAA0D608439E196797955018D76E42@wavemachine.temporal-wave.com>
	<4683D6DA.3040204@ogre4j.org>
Message-ID: <d3992d900707011408vf2b3303m3623b82a401f4a16@mail.gmail.com>

On 6/28/07, Kai <yavin at ogre4j.org> wrote:

> I want to generate a documentation of the rules, literals, etc. of a
> grammar. Something like javadoc or doxygen for ANTLR grammars.

As far as I know, this doesn't exist. Once Ter defines ANTLR v3 using
itself, someone could start with that definition and create a
javadoc-like tool.

 ...Richard

From rdclark at gmail.com  Sun Jul  1 14:26:08 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 1 Jul 2007 14:26:08 -0700
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <200706290938.10661.rschulz@sonic.net>
References: <4684FFDD.9070208@aloba.ch> <468505AC.6040109@gmx.de>
	<076FAEE2-BCD5-49AD-AB05-F1651801DB44@wincent.com>
	<200706290938.10661.rschulz@sonic.net>
Message-ID: <d3992d900707011426s3e8dd87eg5eacd807de8bf66b@mail.gmail.com>

On 6/29/07, Randall R Schulz <rschulz at sonic.net> wrote:

> That's just too restrictive for me. Most of my plans are evil plots to
> take over the world.

You wouldn't happen to be known as "Brain" now would you?

 ...R

From rdclark at gmail.com  Sun Jul  1 14:28:19 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 1 Jul 2007 14:28:19 -0700
Subject: [antlr-interest] How do you use template output with
	backtracking on in a validating semantic predicate?
In-Reply-To: <4e7bd29e0706291723u796dae7dhd6b54781516e9c4a@mail.gmail.com>
References: <4e7bd29e0706291723u796dae7dhd6b54781516e9c4a@mail.gmail.com>
Message-ID: <d3992d900707011428q29b6e14ak49e1948fcc069832@mail.gmail.com>

This all sounds a little roundabout. What's the problem you're trying to solve?

 ...Richard

From win at wincent.com  Sun Jul  1 14:27:54 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sun, 1 Jul 2007 23:27:54 +0200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <008401c7bc01$d0e387b0$72aa9710$@com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<008401c7bc01$d0e387b0$72aa9710$@com>
Message-ID: <06E8877C-5D19-4DB8-9A53-87F4F158C71A@wincent.com>

El 1/7/2007, a las 19:03, Don Caton escribi?:

> I imagine that Ter's motivation for writing Antlr is not money, but
> personally, I hope he gets stinking filthy rich from the proceeds  
> of his
> book.

I don't think he'll get rich but I do hope that others buy the book  
(I did); even if the money doesn't add to much at least the symbolic  
show of support is something for all of his hard work over the years.  
I watched the video of the talk he gave in Sydney and saw that he  
spent over $200 FedEx-ing a bunch of books over so that Australians  
could finally get their hands on printed copies. I hope he sold them  
all!

Cheers,
Wincent


From rschulz at sonic.net  Sun Jul  1 14:33:04 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 1 Jul 2007 14:33:04 -0700
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <d3992d900707011426s3e8dd87eg5eacd807de8bf66b@mail.gmail.com>
References: <4684FFDD.9070208@aloba.ch> <200706290938.10661.rschulz@sonic.net>
	<d3992d900707011426s3e8dd87eg5eacd807de8bf66b@mail.gmail.com>
Message-ID: <200707011433.04168.rschulz@sonic.net>

On Sunday 01 July 2007 14:26, Richard Clark wrote:
> On 6/29/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > That's just too restrictive for me. Most of my plans are evil plots
> > to take over the world.
>
> You wouldn't happen to be known as "Brain" now would you?

I've not been known to go by that moniker. Do you think it suits me?

I get the feeling there's some reference here that I'm unaware of...


>  ...R


RRS

From rdclark at gmail.com  Sun Jul  1 14:48:21 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 1 Jul 2007 14:48:21 -0700
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <200707011433.04168.rschulz@sonic.net>
References: <4684FFDD.9070208@aloba.ch> <200706290938.10661.rschulz@sonic.net>
	<d3992d900707011426s3e8dd87eg5eacd807de8bf66b@mail.gmail.com>
	<200707011433.04168.rschulz@sonic.net>
Message-ID: <d3992d900707011448k1d4acb71rad9e18385ab7b41b@mail.gmail.com>

On 7/1/07, Randall R Schulz <rschulz at sonic.net> wrote:

> I get the feeling there's some reference here that I'm unaware of...

I guess I should explain. See IMDB's entry for "Pinky and the Brain",
a cartoon about two lab mice:
http://www.imdb.com/title/tt0112123/

I was thinking of their usual punchline:
> Pinky: Gee, Brain. What are we going to do tonight?
> The Brain: The same thing we do every night, Pinky. Try to take over the world.

See http://www.imdb.com/title/tt0112123/quotes for more.

 ...R

"I think so Brain, but Zero Mostel times anything will still give you
Zero Mostel."

From rschulz at sonic.net  Sun Jul  1 16:30:01 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 1 Jul 2007 16:30:01 -0700
Subject: [antlr-interest] Lexical token with fix length
In-Reply-To: <d3992d900707011448k1d4acb71rad9e18385ab7b41b@mail.gmail.com>
References: <4684FFDD.9070208@aloba.ch> <200707011433.04168.rschulz@sonic.net>
	<d3992d900707011448k1d4acb71rad9e18385ab7b41b@mail.gmail.com>
Message-ID: <200707011630.01959.rschulz@sonic.net>

On Sunday 01 July 2007 14:48, Richard Clark wrote:
> On 7/1/07, Randall R Schulz <rschulz at sonic.net> wrote:
> > I get the feeling there's some reference here that I'm unaware
> > of...
>
> I guess I should explain. See IMDB's entry for "Pinky and the Brain",
> a cartoon about two lab mice:
> http://www.imdb.com/title/tt0112123/

Ah, yes. I'm aware of it, but I've never watched it. I'm a Simpsons guy.


> ...
>
>  ...R
>
> "I think so Brain, but Zero Mostel times anything will still give you
> Zero Mostel."

Cute. Comedy algebra. Or is it algebraic comedy?


RRS

From eric at ebruno.org  Sun Jul  1 17:12:43 2007
From: eric at ebruno.org (Eric Bruno)
Date: Sun, 01 Jul 2007 17:12:43 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
Message-ID: <468842FB.5010804@ebruno.org>


I have to disagree about the negative comments regarding the Antlr book. 
I found it very readable and well written for people new to Antlr.
My expectation of the book was for it to tell me what Antlr was, why I 
cared and to cover basic use of
the tool.  For me it meet those goals. 
It is book I feel I can give to people who have never used Antlr or lex 
and Yacc
and have a expectation they can start using the tool in a couple of days.

So for what's worth I think Ter did very good job with the book, from a 
readability point of view
I would put in the same class as Richard Steven's Unix book's which from 
me is high praise.
Eric Bruno

Harald Wellmann wrote:
> Getting started with ANTLR v3 is a frustrating experience for its lack of
> coherent documentation and non-trivial example code.
>
> I've been using ANTLR since the good old times when it used to be called
> PCCTS, and I always used to be fond of it, but I am disappointed with v3.
>
> Marketing-style hype about the latest cool features does not really help
> when you get no little or no information on how to use them.
>
> Even v2 documentatation was a bit scarce, it always cost you some trial and
> error to get things right, but this was bliss compared to the scattered and
> incomplete bits of documentation you get for v3.
>
> Yes, I know there's a book now. And no, I don't think it's in the spirit of
>  a successful open source project to hide all relevant information in a
> book that is only available commercially.
>
> There's nothing wrong about books, but you can publish a book and still
> make the information publicly available, see e.g. the Subversion Book.
>
> By the way, even this mailing list is inaccessible to most people in a
> corporate IT environment, as the Mailman Frontend is running on a
> non-standard port 8080 which tends to get blocked by firewalls.
>
> Regards,
>
> Harald
>   


From Christian.Boitet at imag.fr  Sun Jul  1 18:04:21 2007
From: Christian.Boitet at imag.fr (Christian Boitet)
Date: Mon, 2 Jul 2007 03:04:21 +0200
Subject: [antlr-interest]  Support to Ter, questions
In-Reply-To: <ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
Message-ID: <a0624080dc2adf647e0a6@[192.168.0.3]>

Hi form Grenoble,			2/7/07

To those "complaining" about this and that concerning ANTLR-3.0:
----------------------
- ANTLR-3 is certainly an "ongoing" progress on ANTLR-2.

- We should THANK Terence and HELP him continue 
this HUGE and FREE work. Maybe some knowledgeable 
users could help him with the doc, with examples, 
etc.

- Terence says and writes clearly that ANTLR-3.0 
is not yet as complete as ANTLR-2. That is why 
the version number ends in ".0". A huge work 
takes time.

- We still may use the previous versions while 
this new one is not yet complete as far as target 
languages are concerned.

   Our case: Jean-Claude Durand and I have been 
building C++ compilers with ANTLR and previously 
C compilers with PCCTS for some time: knowing 
ANTLR-3.0 cannot yet generate C++, we simply 
continue to use ANTLR-2.

I am afraid we did not contribute anything 
concrete yet beyond (what we think are) 1 or 2 
bug reports. We then hope Terence will take the 
above as some kind of (psychological) 
contribution or at least support! His 20-year 
dedication to that project is truly remarkable.



Questions (or remarks?):
---------
To recap what we suspect are bugs in ANTRL-2:

- using the "?" character (&agrave;) anywhere in 
a xxx.g file, even if only in a comment, causes 
ANTLR to abort.

- when trying to call a grammar not by its axiom, 
but by another non-terminal, for example to do 
some incremental parsing, we noticed an 
unexpected behavior. I guess this is because the 
FOLLOW sets are computed only with the first 
non-terminal as axiom. For example, with s: u+ 
END v+ END ; u:AA; v:BB; a call to u on input AA 
(ended by EOF) did not work because ANTLR expects 
to see AA or END after a u string. There may 
exist workarounds but we did not figure them out 
and went for another solution, namely write build 
a compier for each "increment".

That leads to the following question: is there a 
way in ANTLR-2 to include rules from files?

- #include is used by the C or C++ preprocessor, 
but apparently not by the ANTLR preprocessor.
- What we want is to build several compilers (for 
reengineering a variety of existing specialized 
programming languages sharing many parts of their 
syntax), and not to build one huge compiler with 
many options, and smaller compilers for 
increments.
- For instance, we have a compiler for a whole 
tree rewriting system, containing a block of 
procedures, another one for a "control graph", 
and one for a set of rules. An increment may be a 
whole such block, or a rule, or various parts of 
a rule (nome+parameters, lhs, rhs).

Best regards,

Xan


At 10:22 -0600 1/07/07, David Piepgrass wrote:
>>Getting started with ANTLR v3 is a frustrating experience for its lack of
>>coherent documentation and non-trivial example code.
>>
>>I've been using ANTLR since the good old times when it used to be called
>>PCCTS, and I always used to be fond of it, but I am disappointed with v3.
>? (mind you, there is a lot of useful
>information despite these problems.)
>?

-- 
-------------------------------------------------------------------------
Christian Boitet
(Pr. Universite' Joseph Fourier)
       ======= Notez svp /Please note ======= GETA --> GETALP ============
Groupe d'Etude pour la Traduction Automatique
                  et le Traitement Automatis? des Langues et de la Parole
G        E             T          A              L                P
GETALP, LIG, IMAG-campus, BP 53        (ex: GETA, CLIPS, IMAG-campus)        
Tel: +33 (0)4 76 51 43 55 / 51 48 17   Fax: +33 (0)4 76 44 66 75 / 51 44 05
385, rue de la Bibliothe`que           Mel: Christian.Boitet at imag.fr    
38041 Grenoble Cedex 9, France

From rschulz at sonic.net  Sun Jul  1 18:06:33 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 1 Jul 2007 18:06:33 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
Message-ID: <200707011806.33101.rschulz@sonic.net>

On Sunday 01 July 2007 03:32, Harald Wellmann wrote:
> Getting started with ANTLR v3 is a frustrating experience for its
> lack of coherent documentation and non-trivial example code.

I can both agree and disagree with this sentiment.

ANTLR is a powerful tool and not a simple one. Naturally, the two go 
together, for the most part.

On the other hand, when one is faced with a task that includes language 
processing, often it's but a small aspect of the overall problem. From 
this perspective, one wants to just write the parser and then put it on 
a shelf, never to be touched again. For what it's worth, for me this 
has actually been the case. I've done several parsers using JavaCC and 
one completed and another in progress using ANTLR.

I'm both frustrated by and incredibly impressed by ANTLR and ANTLRWorks. 
These are very sophisticated, very mature tools, and it is not really 
reasonable to expect it to be easy to use them, at least not right away 
or on your first go-around.


> I've been using ANTLR since the good old times when it used to be
> called PCCTS, and I always used to be fond of it, but I am
> disappointed with v3.

Two things come to mind:

1) Your problem may not be complicated enough to tip the balance of 
learning vs. power for ANTLR v3 by comparison to its predecessors.

2) You are premature in your criticism. Get to know the tools better 
before judging them.


> Marketing-style hype about the latest cool features does not really
> help when you get no little or no information on how to use them.

I seriously doubt that concerns that would traditionally be associated 
with a marketing department or director or campaign are what motivated 
the new capabilities of ANTLR v3. I don't really have the full history, 
but I can see no motivation for the principals to have proceeded in 
such a manner.


> Even v2 documentatation was a bit scarce, it always cost you some
> trial and error to get things right, but this was bliss compared to
> the scattered and incomplete bits of documentation you get for v3.

Perhaps you were just more motivated at the time or had more of your own 
time available to learn. I've found, generally speaking, that the 
earlier one is in their career in software, the easier it is to learn 
new things. This is really just part of the human condition?an aspect 
of our cognitive makeup and the finiteness of our brains and minds, if 
you will.


> Yes, I know there's a book now. And no, I don't think it's in the
> spirit of a successful open source project to hide all relevant
> information in a book that is only available commercially.

Well, I myself tend to respond with peevishness to being told to "read 
the source" (one of my recent postings supports this admission), but at 
root, nothing is hidden in an open-source project.

That said, I don't subscribe to the notion that open-source admits a 
lesser standard of software engineering, including documentation 
quality and comprehensiveness.

I will say, I don't think ANTLR's documentation is exemplary, but 
between what is available on-line, in the book and this forum (two of 
which are entirely open-ended, after all), one can be assured of 
accomplishing pretty much anything that is possible or essentially 
afforded by these tools.

It may well be the case that were ANTLR handled as a commercial tool 
with the standards of documentation one would expect from such a tool 
(and we're talking something with a multi-hundred-dollar per-user 
license or even a royalty structure in the "bad old days") a user could 
just sit down, with a well-defined task in hand, use the plethora of 
documentation (tutorial, reference, sample code, etc.) and bang out a 
parser on a pretty tight schedule. And that may not be possible for all 
or even most users at the moment, this is not a legitimate indictment 
of the quality of this software.


> There's nothing wrong about books, but you can publish a book and
> still make the information publicly available, see e.g. the
> Subversion Book.
>
> By the way, even this mailing list is inaccessible to most people in
> a corporate IT environment, as the Mailman Frontend is running on a
> non-standard port 8080 which tends to get blocked by firewalls.

I assume you're only talking about subscribing. Surely you could just 
leave the confines of your corporate network to initiate the 
subscription request, right? I've worked under such 
corporate "security" regimes, and they're onerous to workaday 
personnel, to say the least. But in this case, they're not 
insurmountable. (At my last corporate gig, they outlawed connections on 
all but a very few ports, cutting me off from my beloved dictionary 
service.)


> Regards,
>
> Harald


I hope you'll stick with ANTLR. It's really amazing. The whole concept 
of a tree grammar is gold. I don't think I'd ever have conceived of it 
myself, but once you're introduced to the concept, so many things 
become so much more straightforward. It's exemplary of the kind of 
advancement that facilitates lots of other work. Afterwards, one 
wonders why it didn't happen 20 or 30 years ago. But that's 
hindsight...


Randall Schulz

From jonathan.thomas at ca.com  Sun Jul  1 18:27:27 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Mon, 02 Jul 2007 11:27:27 +1000
Subject: [antlr-interest]  How to control token numbers manually?
Message-ID: <4688547F.30903@ca.com>

Oh, so you still ask for help here. It would be nice to say 'go read the 
book' ;-) hehe ...

but what you are asking has already been somewhat covered in a previous 
thread:
"any way to increment the token integer values"
that and other background information lurking in back of my head would 
say the answer is: not possible.
but maybe Ter will correct that ... if he actually reads your posts anymore.

David Piepgrass said the following on 2/07/2007 2:29 AM:
> In my project I need to control the numeric identifiers used for
> tokens, because there may be several separate (unrelated) lexers that
> produce the same token types (ID, INT, REAL, etc.)
>
> Preferably I would like to use variables to hold the token numbers and
> determine the numbers at run-time, but before any lexer starts. Never
> mind why...
>
> How can I accomplish this?
>


From jimi at temporal-wave.com  Sun Jul  1 18:40:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 1 Jul 2007 18:40:35 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
References: <46878217.4090608@gmx.de>
	<468782CF.70102@gmx.de><ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
Message-ID: <051466DAA0D608439E196797955018D76E67@wavemachine.temporal-wave.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> I get $3 measly dollars when you buy the book at amazon.  I want all
> you whiners about the doc to either decide you can't use the tool
> because it's not well documented enough or suck it up and start
> helping out.  Most of the whiners are freeloaders....complaining, but
> never having contributed themselves to open source or ANTLR before.
> Bunch of ungrateful freeloaders...how dare you make these demands!

I still love you Ter ;-)

As a freelance programmer, I have the luxury of deciding what work to do
and what to do with the proceeds of it. I am going to make some good
money using ANTLR3 and I have decided I will donate some of it, even
though I am using my own C target. Perhaps if enough other people would
do that, or even buy a bit of the (exceedingly cheap) support that is on
offer, things would go a bit more smoothly.

One of the issues is the ease of use of this product (I know it is
tricky to get going, hear my point), RELATIVE to how exceedingly
difficult it is to produce such a product. Hence, if you look at say the
PHPO project or wiki projects and so on, there are contributors galore,
because there are lots of easy bits to contribute to and only a few
relatively complicated bits.

The EASY bits are the documentation and examples, and the wiki is just
waiting for examples and so on. A number of people have been good enough
to help with that and the more the better. Eventually, I will get there.
However, for anyone who started out with the docs available on yacc and
lex, I should think that ANTLR3 seems to have more documentation than is
possible to read in the 15 minutes allotted for such a task.

Jim

From jimi at temporal-wave.com  Sun Jul  1 18:53:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 1 Jul 2007 18:53:35 -0700
Subject: [antlr-interest] Strange warnings
In-Reply-To: <ce40b1470707011205v5f344e9aqf63980675d56e218@mail.gmail.com>
References: <ce40b1470707011205v5f344e9aqf63980675d56e218@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E68@wavemachine.temporal-wave.com>

Try:

  {(input.LA(1) == '\\' && ( input.LA(2) == ' ' || input.LA(2) ==
'\t'))}? '\\'
| etc.

The lexer is probably thinking that it does not need the predicate as
you have expressed it.

Epsilon means an empty alt:

fred	: X
	| // Epsilon
	;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of David Piepgrass
> Sent: Sunday, July 01, 2007 12:06 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Strange warnings
> 
> I get some warnings related to this rule and I can't see why.
> 
> fragment PUNC_CHAR:
> 	  ('\\' WS_CHAR)=>'\\'
> 	| {input.LA(2) != '*' && input.LA(2) != '/'}? '/'
> 	| (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'
> 	  |'*'|'-'|'+'|'='|'|'|','|'<'|'>'|'?');
> PUNC: PUNC_CHAR+;
> 
> This rule says PUNC_CHAR can only match a backslash if it is followed
> by a space. So there should be no way PUNC can match input such as
> \\\! or \\\/.
> 

From scott at javadude.com  Sun Jul  1 19:56:57 2007
From: scott at javadude.com (scott at javadude.com)
Date: Sun, 1 Jul 2007 22:56:57 -0400 (EDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
Message-ID: <50314.141.156.167.188.1183345017.squirrel@javadude.com>

First -- I bought both books (and have contributed to ANTLR 2 and the
eclipse plugins). I've used past versions of the tool (since early PCCTS
releases), but had a lot of trouble figuring out v3 without the book.

How is forcing someone to pay for the documentation any different than
requiring a paid license for the tool? This is most definitely not in the
spirit of open source.

The book really feels like almost the same content that was free online
for v2.

A book shouldn't be the standard reference documentation -- it should be
the nitty gritty details and tip and tricks of how to really use the tool
properly.


BTW: I'm updating my ANTLR tutorial (and I'm going to try to expand it
further than the V2 one went.)

Later,
-- Scott


> I get $3 measly dollars when you buy the book at amazon.  I want all
> you whiners about the doc to either decide you can't use the tool
> because it's not well documented enough or suck it up and start
> helping out.  Most of the whiners are freeloaders....complaining, but
> never having contributed themselves to open source or ANTLR before.
> Bunch of ungrateful freeloaders...how dare you make these demands!


From chintanraoh at gmail.com  Sun Jul  1 21:06:12 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Mon, 2 Jul 2007 09:36:12 +0530
Subject: [antlr-interest] Antlrworks cant two instances of parser
Message-ID: <ec8bdb100707012106g55f896d6n550c5bafa5dbb329@mail.gmail.com>

Hi,
I tried to create an instance of parser inside the parser and made a
call to a member function
in the parser (as parser recursively calling itself). I wanted to lex
and parser string which i find in the parser. Antlrworks gives
"Address already in use" while debugging .
I hope i am understood ,
Sorry for being short,
Chintan Rao H

From tbrandonau at gmail.com  Sun Jul  1 21:41:42 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 2 Jul 2007 14:41:42 +1000
Subject: [antlr-interest] Antlrworks cant two instances of parser
In-Reply-To: <ec8bdb100707012106g55f896d6n550c5bafa5dbb329@mail.gmail.com>
References: <ec8bdb100707012106g55f896d6n550c5bafa5dbb329@mail.gmail.com>
Message-ID: <ebc876d70707012141t4b822953y51fc8b56de2f7b18@mail.gmail.com>

ANTLRWorks debug parsers listen on a socket to connect to the
ANTLRWorks debugger. As your main parser is already using this socket
the sub-parser cannot also use it. If your inner parser is different
to your outer parser then you could use a non-debug version of the
inner parser. Or if they are the same, you could, while debugging
create a second copy of your parser with a new name and generate this
without debugging enabled and then use that for your inner parser, or
just generate to a different package and use a fully qualified name
for it.
Alternately there is a constructor that takes a port to debug on, so
if you used this constructor with a different port then they should
not clash. However then your inner parser will wait for socket
connections from ANTLRWorks to start parsing, maybe you could have two
copies of ANTLRWorks open (if it allows this) and connect the second
copy to the inner parser, though you would have to connect ANTLRWorks
after the constructor for you inner parser was called so if the inner
parser is constructed as needed then you would have to re-connect
ANTLRWorks everytime one was started. So unless you reuse a single
parser instance this is somewhat tricky.
There is a constructor for DebugParser which accepts a debug listener
but ANTLRWorks does not add an override for this constructor to it's
debug parsers, if you added an override for this constructor then you
could have your inner parser not wait for ANTLRWorks by providing an
alternate debug listener. You can add this constructor to your
@members section but then you need to remove it when not compiling
with debugging.
I requested that ANTLRWorks template be changed to also override this
constructor. In the meantime it would be a fairly trivial patch to the
ANTLRWorks templates to allow this.

Tom.
On 7/2/07, chintan rao <chintanraoh at gmail.com> wrote:
> Hi,
> I tried to create an instance of parser inside the parser and made a
> call to a member function
> in the parser (as parser recursively calling itself). I wanted to lex
> and parser string which i find in the parser. Antlrworks gives
> "Address already in use" while debugging .
> I hope i am understood ,
> Sorry for being short,
> Chintan Rao H
>

From parrt at cs.usfca.edu  Sun Jul  1 22:09:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 1 Jul 2007 22:09:55 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50314.141.156.167.188.1183345017.squirrel@javadude.com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<50314.141.156.167.188.1183345017.squirrel@javadude.com>
Message-ID: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>

On Jul 1, 2007, at 7:56 PM, scott at javadude.com wrote:
> First -- I bought both books (and have contributed to ANTLR 2 and the
> eclipse plugins). I've used past versions of the tool (since early  
> PCCTS
> releases), but had a lot of trouble figuring out v3 without the book.
>
> How is forcing someone to pay for the documentation any different than
> requiring a paid license for the tool? This is most definitely not  
> in the
> spirit of open source.

Well, then I better get rid of ANTLR v3 as it is against your  
definition of free software.

Sorry Scott, but you are a total pain in my ass; always have been.   
You dare complain about my management of this project?  Get real  
dude.  You have gotten a lot of recognition from this software.  You  
have contributed some, which I appreciate, but you need to be more  
understanding and patient.  Don't try to tell me i've not given my  
all to this project.  When v2 came out there was NO doc.  You're  
being pretty insensitive.

You are included now in the list of other whiners that just lost free  
support from me.  I'm happy to accept tech support contracts if you  
want to pay me.  I will ask Jean to avoid helping you port ANTLRWorks  
to eclipse for free.  I'd ask you to stop using my software but I  
cannot prevent it as it is BSD license.

Scott you are ungrateful.  You are using my free software and  
complain about it.  I've built this project into the preeminent  
parser generator.  If you need to buy a book to use it then buy it  
and shut up or quit using the software.   The choice is simple.

Terence

From belayda at gmail.com  Sun Jul  1 22:42:46 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Sun, 1 Jul 2007 22:42:46 -0700
Subject: [antlr-interest] Antlr v3 and the Antlr v3 book are very useful!
Message-ID: <3e5ed32f0707012242w703d338bxad910469d99c3c9@mail.gmail.com>

Hello,

I just wanted to add my support to Dr. Parr and his work on Antlr and
the Antlr 3 book!  For someone to do this on their own for free is an
enormous and generous task!  I'm grateful that Dr. Parr created a
better alternative to lexx and yacc.

In comparision to lexx and yacc, Antlr 2 and Antlr 3 make so much more
sense.  I build many DSL's in my 'day' job and Antlr 3 makes that job
significantly easier.  It is so much easier to think in EBNF.  Sure,
I've written hundreds of parsers by hand but I just hate doing it
because I can't think of the big picture with that technique.

I disagree with those that feel that there are not enough docs.  The
wiki, website, and mailing list are a huge treasure trove.  Also, the
Antlr 3 book is handy, especially the links that lead to source code.
Thanks to the source code links I was able to resolve a StringTemplate
issue on my own.  I'm especially grateful to the patient Antlr
community for answering my questions and commenting on my suggestions.

Regards,
Bernardo Elayda

From chintanraoh at gmail.com  Mon Jul  2 00:22:49 2007
From: chintanraoh at gmail.com (chintan rao)
Date: Mon, 2 Jul 2007 19:22:49 +1200
Subject: [antlr-interest] Antlrworks cant two instances of parser
In-Reply-To: <ebc876d70707012141t4b822953y51fc8b56de2f7b18@mail.gmail.com>
References: <ec8bdb100707012106g55f896d6n550c5bafa5dbb329@mail.gmail.com>
	<ebc876d70707012141t4b822953y51fc8b56de2f7b18@mail.gmail.com>
Message-ID: <ec8bdb100707020022s12c3e1dw558abaf0aaacaa75@mail.gmail.com>

Hi,
Thanks for all your time.
On 7/2/07, Thomas Brandon <tbrandonau at gmail.com> wrote:
> ANTLRWorks debug parsers listen on a socket to connect to the
> ANTLRWorks debugger. As your main parser is already using this socket
> the sub-parser cannot also use it. If your inner parser is different
> to your outer parser then you could use a non-debug version of the
> inner parser. Or if they are the same, you could, while debugging
> create a second copy of your parser with a new name and generate this
> without debugging enabled and then use that for your inner parser, or
> just generate to a different package and use a fully qualified name
> for it.
Hmm.. This seems to a sort of solution. Tedious but okay .
> Alternately there is a constructor that takes a port to debug on, so
> if you used this constructor with a different port then they should
> not clash. However then your inner parser will wait for socket
> connections from ANTLRWorks to start parsing, maybe you could have two
> copies of ANTLRWorks open (if it allows this) and connect the second
> copy to the inner parser, though you would have to connect ANTLRWorks
> after the constructor for you inner parser was called so if the inner
> parser is constructed as needed then you would have to re-connect
> ANTLRWorks everytime one was started. So unless you reuse a single
> parser instance this is somewhat tricky.
I did new nameParser(token,port no) and made another copy of antlrworks
work on the port but it did not work :(. It was waiting for ever for
the connection.
> There is a constructor for DebugParser which accepts a debug listener
> but ANTLRWorks does not add an override for this constructor to it's
> debug parsers, if you added an override for this constructor then you
> could have your inner parser not wait for ANTLRWorks by providing an
> alternate debug listener. You can add this constructor to your
> @members section but then you need to remove it when not compiling
> with debugging.
I added the required constructor and  called it with
new nameParser( token,getDebugListener () ) . This also did not work :(

> I requested that ANTLRWorks template be changed to also override this
> constructor. In the meantime it would be a fairly trivial patch to the
> ANTLRWorks templates to allow this.

Also another point is that i could have variable no of recursive calls
to the parser . So these
solutions may not work well.A good feature in the ide will be to make
both inner and outer parsers work on the same instance of the debugger
ie let debugger make connections to any no of parsers. I don't know
how hard or easy this is it but I do understand that this can be very
difficult .
Another good feature would be to add a method setDebug(bool) to the DebugParser
class.
Currently i am working without the antlrworks IDE when i make
recursive calls to the same parser.

From whalliburton at gmail.com  Mon Jul  2 00:27:21 2007
From: whalliburton at gmail.com (William Halliburton)
Date: Mon, 2 Jul 2007 00:27:21 -0700
Subject: [antlr-interest] How do you use template output with
	backtracking on in a validating semantic predicate?
Message-ID: <4e7bd29e0707020027w61ccac8ft47c8b0e72f697201@mail.gmail.com>

> This all sounds a little roundabout. What's the problem you're trying to solve?

I am trying to parse a c like languages and have a rule like the following.

stringComparison
    : ^('==' left=expression right=STRING_LITERAL) ->
stringEqual(left={$left.st},right={$right.text})
    | ^('!=' left=expression right=STRING_LITERAL) ->
stringNotEqual(left={$left.st},right={$right.text})
    | ^(op=relationalOperator left=expression right=STRING_LITERAL) ->
stringCompareTo(left={$left.st},right={$right.text},op={$op.st})
    ;

I would like to be able to use the text of "expression" in my semantic
predicates and the only way I see to get the text is $expression.st as
$expression.text does not seem to work for tree grammars. BUT $expression.st
is not set during backtracking.

would like a rule like:

    : ^('==' left=expression right=expression) {isString($left.st} &&
isString($right.st)}? -> stringEqual(left={$left.st},right={$right.st})

where isString checks the string of the expression against a symbol table.

Thank you,
Will
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/da16f598/attachment.html 

From tbrandonau at gmail.com  Mon Jul  2 00:32:10 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 2 Jul 2007 17:32:10 +1000
Subject: [antlr-interest] Antlrworks cant two instances of parser
In-Reply-To: <ec8bdb100707020022s12c3e1dw558abaf0aaacaa75@mail.gmail.com>
References: <ec8bdb100707012106g55f896d6n550c5bafa5dbb329@mail.gmail.com>
	<ebc876d70707012141t4b822953y51fc8b56de2f7b18@mail.gmail.com>
	<ec8bdb100707020022s12c3e1dw558abaf0aaacaa75@mail.gmail.com>
Message-ID: <ebc876d70707020032s64210d16h308b070ab14264c4@mail.gmail.com>

On 7/2/07, chintan rao <chintanraoh at gmail.com> wrote:
> Hi,
> Thanks for all your time.
> On 7/2/07, Thomas Brandon <tbrandonau at gmail.com> wrote:
> > ANTLRWorks debug parsers listen on a socket to connect to the
> > ANTLRWorks debugger. As your main parser is already using this socket
> > the sub-parser cannot also use it. If your inner parser is different
> > to your outer parser then you could use a non-debug version of the
> > inner parser. Or if they are the same, you could, while debugging
> > create a second copy of your parser with a new name and generate this
> > without debugging enabled and then use that for your inner parser, or
> > just generate to a different package and use a fully qualified name
> > for it.
> Hmm.. This seems to a sort of solution. Tedious but okay .
> > Alternately there is a constructor that takes a port to debug on, so
> > if you used this constructor with a different port then they should
> > not clash. However then your inner parser will wait for socket
> > connections from ANTLRWorks to start parsing, maybe you could have two
> > copies of ANTLRWorks open (if it allows this) and connect the second
> > copy to the inner parser, though you would have to connect ANTLRWorks
> > after the constructor for you inner parser was called so if the inner
> > parser is constructed as needed then you would have to re-connect
> > ANTLRWorks everytime one was started. So unless you reuse a single
> > parser instance this is somewhat tricky.
> I did new nameParser(token,port no) and made another copy of antlrworks
> work on the port but it did not work :(. It was waiting for ever for
> the connection.
I would think this should work, if you can have two copies of
ANTLRWorks open. I didn't mention it but you have to do a Debug remote
after the construction of your new parser. And if your not using a
shared instance of your parser then do so again after each
instantiation. And, if you are using a shared copy I'm not sure if
ANTLRWorks will properly handle the resetting of the parser.
> > There is a constructor for DebugParser which accepts a debug listener
> > but ANTLRWorks does not add an override for this constructor to it's
> > debug parsers, if you added an override for this constructor then you
> > could have your inner parser not wait for ANTLRWorks by providing an
> > alternate debug listener. You can add this constructor to your
> > @members section but then you need to remove it when not compiling
> > with debugging.
> I added the required constructor and  called it with
> new nameParser( token,getDebugListener () ) . This also did not work :(
Yes, I don't think ANTLRWorks would like multiple parsers connected to
one debug listener. I was more suggesting you use nameParser(token,
new BlankDebugListener()) or you could use one of the other listeners
(see org.antlr.runtime.debug classes) to at least have tracing on the
inner parsers.
>
> > I requested that ANTLRWorks template be changed to also override this
> > constructor. In the meantime it would be a fairly trivial patch to the
> > ANTLRWorks templates to allow this.
>
> Also another point is that i could have variable no of recursive calls
> to the parser . So these
> solutions may not work well.A good feature in the ide will be to make
> both inner and outer parsers work on the same instance of the debugger
> ie let debugger make connections to any no of parsers. I don't know
> how hard or easy this is it but I do understand that this can be very
> difficult .
I imagine this would be rather difficult to support and not a big
priority given this isn't exactly a common usage.
> Another good feature would be to add a method setDebug(bool) to the DebugParser
> class.
Passing BlankDebugListener to the (added) constructor should give this
functionality.
> Currently i am working without the antlrworks IDE when i make
> recursive calls to the same parser.
>
Tom.

From antlr at mirality.co.nz  Mon Jul  2 01:15:53 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 02 Jul 2007 20:15:53 +1200
Subject: [antlr-interest] How to control token numbers manually?
In-Reply-To: <ce40b1470707010929r15373a74pac3d2fef6790ebc4@mail.gmail.co
 m>
References: <ce40b1470707010929r15373a74pac3d2fef6790ebc4@mail.gmail.com>
Message-ID: <20070702081602.D45FA11EBC9@www.antlr.org>

At 04:29 2/07/2007, David Piepgrass wrote:
 >In my project I need to control the numeric identifiers used for
 >tokens, because there may be several separate (unrelated) lexers 

 >that produce the same token types (ID, INT, REAL, etc.)

I'm not sure if lexers support vocabulary importing (I know 
parsers do), but if they do then you should be able to do it that 
way -- make a tokens file and import it into the lexer.  Worth a 
try, anyway :)


From antlr at mirality.co.nz  Mon Jul  2 01:27:05 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 02 Jul 2007 20:27:05 +1200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50314.141.156.167.188.1183345017.squirrel@javadude.com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<50314.141.156.167.188.1183345017.squirrel@javadude.com>
Message-ID: <20070702082712.6536511EB32@www.antlr.org>

At 14:56 2/07/2007, scott at javadude.com wrote:
 >How is forcing someone to pay for the documentation any 
different
 >than requiring a paid license for the tool? This is most 
definitely
 >not in the spirit of open source.

Because it's not forced.  I'm not afraid of admitting that I 
haven't bought the book, and probably won't do so (parsing isn't 
something I need to do frequently, and I procrastinate a 
lot).  Yet I've built a few different parsers now and I think I've 
got the hang of most of it -- partly from documentation found 
online, partly with the help of the friendly people on this list, 
and partly through my own experimentation.

I may hassle Ter from time to time (eg. weirdness with lexer 
prediction, hint hint nudge nudge), but overall ANTLR is a 
wonderful tool and I am very thankful for the amount of time and 
energy he's put into it.  I don't begrudge him the "few measly 
dollars" he gets from book sales.

So don't listen to the moaners, Ter -- you're doing a great 
job.  Keep it up!


From doebel at os.inf.tu-dresden.de  Mon Jul  2 02:26:54 2007
From: doebel at os.inf.tu-dresden.de (Bjoern Doebel)
Date: Mon, 02 Jul 2007 11:26:54 +0200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
Message-ID: <4688C4DE.7060607@os.inf.tu-dresden.de>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hey,

one or two months ago, I didn't know about ANTLR at all and was pretty
frustrated by a combination of having to use Lex/YACC and having no idea
about parsing in general. I downloaded ANTLR, read several v2 tutorials I
found on the web and with the help of the wiki and some common sense was
even able to manage translating v2 examples into v3 as well as writing
stuff for my target language, which is Python.

Only at this point I bought the book, because I felt that I could get a lot
more out of ANTLR if I have a complete documentation and it helped me even
more. Thanks a lot for this.

I don't feel like taking part in discussions about missing documentation,
the true spirit of Open Source and evil programmers wanting to sell their
books instead of providing free documentation. However, I'm afraid that
it's always the satisfied people, who don't want to have these discussions
and that's why we end up with all those mails from whiners who just demand
things without even saying thank you.

Thanks a lot to everyone for making ANTLR a great tool.

Bjoern
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFGiMTeP5ijxgQLUNkRAmnyAJsEFgOkoJeRvXxuCvTJePmXqTPq3QCdGO1R
+I/1XrVZ0vGiiHeOVP/yohI=
=IpGB
-----END PGP SIGNATURE-----


From ruth.karl at gmx.de  Mon Jul  2 04:04:29 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Mon, 02 Jul 2007 13:04:29 +0200
Subject: [antlr-interest]  Tree construction
In-Reply-To: <20070702082712.6536511EB32@www.antlr.org>
References: <46878217.4090608@gmx.de>
	<468782CF.70102@gmx.de>	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>	<50314.141.156.167.188.1183345017.squirrel@javadude.com>
	<20070702082712.6536511EB32@www.antlr.org>
Message-ID: <4688DBBD.3080705@gmx.de>

Dear all,

I think it is amazing and very good to kno that some people in this 
world spend so much time and effort in open source projects and in 
making great tools available for everyone.
I do not think at all that it is of any help to bother them with 
complaints. The ones who do are free to do a better job - if they think 
that is easy!

Because it is so sad to read the "Lack of "-thread this morning (how 
about lack of politeness?), I feel the urgent need to start my mail with 
this remark and pay BIG THANKS to everyone who is actively contributing 
to make life better for others, too.

Maybe someone can give me a clue about the following issue:
I made up some parser rules with different alternatives that can be 
repeated in any possible order.
One of those rules looks like this:

    htmltag    :    OPENTAG (SLASH)? ((text | bracketexpr | quoted |
    scriptlet)+ (PERCENT)* )*  CLOSETAG ;


No if I add the following tree construction rule:

    ->^(HTMLTAG text* bracketexpr* quoted* scriptlet*)


and parse something like

    <meta http-equiv="Content-Type" content="text/html">

I get a result that sorts texts and quotes, like:

    <HTMLTAG meta http-equiv=  content= <QUOTE Content-Type> <QUOTE
    text/html>>

This does not really surprise me, but I would like to find out how I 
should put the tree construction rule in order to get the child nodes in 
the order of their appearance in the parsed text.
Is there a way to do it without touching/splitting the parser rule?

Thanks in advance for any kind of help, as always,
Cheers,

Ruth

>

From antlr at mirality.co.nz  Mon Jul  2 05:16:27 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 03 Jul 2007 00:16:27 +1200
Subject: [antlr-interest] Tree construction
In-Reply-To: <4688DBBD.3080705@gmx.de>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<50314.141.156.167.188.1183345017.squirrel@javadude.com>
	<20070702082712.6536511EB32@www.antlr.org>
	<4688DBBD.3080705@gmx.de>
Message-ID: <20070702121640.7E6D411EC44@www.antlr.org>

At 23:04 2/07/2007, Ruth Karl wrote:
 >One of those rules looks like this:
 >
 >    htmltag  :  OPENTAG (SLASH)? ((text | bracketexpr |
 >                quoted | scriptlet)+ (PERCENT)* )* CLOSETAG ;
 >
 >
 >No if I add the following tree construction rule:
 >
 >    ->^(HTMLTAG text* bracketexpr* quoted* scriptlet*)
 >
 >
 >and parse something like
 >
 >    <meta http-equiv="Content-Type" content="text/html">
 >
 >I get a result that sorts texts and quotes, like:
 >
 >    <HTMLTAG meta http-equiv=  content= <QUOTE Content-Type>
 >    <QUOTE text/html>>
 >
 >This does not really surprise me, but I would like to find out 
how
 >I should put the tree construction rule in order to get the 
child
 >nodes in the order of their appearance in the parsed text.
 >Is there a way to do it without touching/splitting the parser
 >rule?

Well, there might be, but probably the easiest thing to do would 
be to split it a little bit:

htmlcontent : text | bracketexpr | quoted | scriptlet;

htmltag : OPENTAG SLASH? (htmlcontent+ PERCENT*)* CLOSETAG
       -> ^(HTMLTAG htmlcontent*);

Or something along those lines, anyway ;)


From win at wincent.com  Mon Jul  2 06:21:07 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 2 Jul 2007 15:21:07 +0200
Subject: [antlr-interest] Bug in C runtime column handling
Message-ID: <A9FC5E6A-F5FD-4688-90BB-BE44524F67F1@wincent.com>

I posted about this issue previously (<http://www.antlr.org/ 
pipermail/antlr-interest/2007-June/021331.html>) but while unit  
testing a parser built with the ANTLR 3 C target I discovered that  
the behaviour is a little more inconsistent than I had initially  
thought. CC'ing you directly on this one Jim seeing as I don't know  
if you saw my post on the topic last time.

BACKGROUND:

In lexer rules it can be handy to use a predicate to match certain  
tokens only when they appear in a certain column (often the first  
column). The C runtime provides a getCharPositionInLine() function  
that can be used to access the current column information.  
Unfortunately, as described in my previous post, the value returned  
by this function will be -1 at the start of the input, unlike the  
Java runtime where it is 0. This is because in the antlr3InputReset()  
function in antlr3inputstream.c the charPositionInLine is explicitly  
set to -1.

As noted earlier, I worked around this by using a helper method in my  
lexer:

   ANTLR3_UINT32 ANTLR3_INLINE char_position_in_line(pWikiTextLexer ctx)
   {
       ANTLR3_UINT32 pos = ctx->pLexer->getCharPositionInLine(ctx- 
 >pLexer);
       return pos == -1 ? 0 : pos;
   }

But I just discovered that this still won't work consistently on the  
first line of the input. This is because after scanning the first  
character on the first line the column number will be bumped up by 1  
only. This means that the column numbering is off by one for every  
character in the first line; all the other lines are correct.

To illustrate, given input like the following:

foobar
foobar

On the first line "f" will be at column -1, "o" will be at column 0,  
and so on for columns 1, 2, 3, 4.

On the second line "f" will be at column 0, "o" at column 1, and so  
on for columns 2, 3, 4, 5.

As this is inconsistent it could catch people out and so looks like a  
bug to me.

SOLUTION:

So to work around this bug the helper method now needs to be updated  
to look at the line number first in order to figure out whether  
adjusting the column number is necessary or not. Alternatively, the  
following patch can be applied to the runtime (antlr3inputstream.c):

166c166
<     input->charPositionInLine = -1;
---
 >     input->charPositionInLine = 0;

Cheers,
Wincent


From scott at javadude.com  Mon Jul  2 06:39:09 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Mon, 2 Jul 2007 09:39:09 -0400
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
Message-ID: <20070702133915.5684211EC6E@www.antlr.org>

Dude -- what the HELL is your problem???

When did I say I'm ungrateful??? When did I say you haven't given your all?
When did I say it's not ok for you to ask for money?


I'M SAYING THE ANTLR v3 LICENSE IS BS IF PEOPLE MUST PAY FOR THE BASIC DOCS.

Did I dis you? NO! Did I say the tool sucks? NO! Did I say I wasn't going to
support it? NO!

When v2 came out there was no doc. When v3 came out, there WAS a doc, but
you're making people pay for it. The book isn't much more than a bound
reference manual. I felt that way the minute I started reading it.

There are MANY MANY MANY people who release open source sw and FREE articles
and documentation and NEVER ask for anything. I AM ONE OF THEM. 

I've been using your stuff since PCCTS. I've thumped the bible of Ter since
the early 90's. I've written debuggers. I've brainstormed with you. I've
written plugins for VAJ and eclipse. I've written tutorials. I've given
support on forums. I've submitted patches. I've worked for you at
MageLang/jGuru.

I've told countless people how good I think PCCTS/ANTLR is.

I offered to spend a good deal of my own time porting ANTLRWorks to eclipse
SO IT WILL BE USEFUL TO THE MANY PEOPLE WHO USE ECLIPSE. You act as though
I'm doing it for selfish reasons. The hell if I'm gonna PAY you to MAKE YOUR
TOOL MORE USEFUL!


I wish I could unbuy the damned book at this point.

YOU'RE THE UNGRATEFUL ONE.


The complaints that people are making are very reasonable. YOU'RE ALIENATING
YOUR FANS.

Again, WHAT THE HELL IS YOUR PROBLEM?

You call the tool open source BUT all the docs are payware.

It's not a matter of being patient. You WROTE the docs, but are forcing
people to pay for them. 

THAT'S NOT COOL.

I'm done with YOU; but I'm not done with ANTLR.

I still think it's a great tool, but its creator is an ungrateful,
unmitigated ass.

-- Scott



> Sorry Scott, but you are a total pain in my ass; always have been.   
> You dare complain about my management of this project?  Get 
> real dude.  You have gotten a lot of recognition from this 
> software.  You have contributed some, which I appreciate, but 
> you need to be more understanding and patient.  Don't try to 
> tell me i've not given my all to this project.  When v2 came 
> out there was NO doc.  You're being pretty insensitive.
> 
> You are included now in the list of other whiners that just 
> lost free support from me.  I'm happy to accept tech support 
> contracts if you want to pay me.  I will ask Jean to avoid 
> helping you port ANTLRWorks to eclipse for free.  I'd ask you 
> to stop using my software but I cannot prevent it as it is 
> BSD license.
> 
> Scott you are ungrateful.  You are using my free software and 
> complain about it.  I've built this project into the 
> preeminent parser generator.  If you need to buy a book to 
> use it then buy it  
> and shut up or quit using the software.   The choice is simple.
> 
> Terence
> 



From csnowfox_antlr at 126.com  Mon Jul  2 07:16:53 2007
From: csnowfox_antlr at 126.com (csnowfox_antlr at 126.com)
Date: Mon, 2 Jul 2007 22:16:53 +0800 (CST)
Subject: [antlr-interest] a question about 'while' logic
Message-ID: <468908D5.0000B7.27552@bj126app39.126.com>

hi``everybody
I am a beginners of antlr .
Now, I would like to add the cycle  logic to a new language, but I have no way to start. 
For example, to implement a logic 
a = 3;
While (a >1) {a --;}
not only get a string but do the logic.
Someone can enlighten about it? Or give examples.
thanks`
 
 


? ? ? ? ? ??? ? ? ? ? ? ? ? ? ?  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/d5bbed38/attachment.html 

From tirelli at post.com  Mon Jul  2 07:36:10 2007
From: tirelli at post.com (Edson Tirelli)
Date: Mon, 2 Jul 2007 11:36:10 -0300
Subject: [antlr-interest] Parser stopping before matching the whole input
Message-ID: <e6dd5ba30707020736u1c351362p6cd386c7840f4099@mail.gmail.com>

   All,

   I'm facing a problem I didn't found info on the archives. Being short,
the parser is stopping to parse before the end of the input stream when it
founds an unexpected token. For instance, my top level rule is:

compilation_unit
    :    prolog
        statement+
    ;

   So, if the parser finds a valid prolog, and at least one valid statement,
and after that finds a token it does not recognize, it simply stops parsing
without any error message. Example:

==========
package a.b.c;

import x.y.z;
xxxxxx
import r.s.t;
===========

   In the example above, the "package" is a valid prolog, the "import" is a
valid statement and both are parsed correctly. But when the parser finds
"xxxxxx" it does not recognize it and simply stops parsing without any
error. I understand the behavior from a parsing rule perspective, but I want
to force the parser to parse the whole input, reporting errors for
unrecognized tokens and recovering whenever possible.
   How can I do that?

   I imagine that if I had a mandatory "end of stream" token, I could simply
do:

compilation_unit
    :    prolog
        statement+
        MY_END_OF_STREAM_TOKEN
    ;

   But I don't have such token and can't add it to the language.

   Any ideas?

   Thank you in advance,
       Edson

-- 
  Edson Tirelli
  Software Engineer - JBoss Rules Core Developer
  Office: +55 11 3529-6000
  Mobile: +55 11 9287-5646
  JBoss, a division of Red Hat @ www.jboss.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/2dcda32c/attachment.html 

From jimi at temporal-wave.com  Mon Jul  2 07:41:19 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 07:41:19 -0700
Subject: [antlr-interest] Support to Ter, questions
In-Reply-To: <a0624080dc2adf647e0a6@[192.168.0.3]>
References: <46878217.4090608@gmx.de>
	<468782CF.70102@gmx.de><ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<a0624080dc2adf647e0a6@[192.168.0.3]>
Message-ID: <051466DAA0D608439E196797955018D76E69@wavemachine.temporal-wave.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Christian Boitet


>    Our case: Jean-Claude Durand and I have been
> building C++ compilers with ANTLR and previously
> C compilers with PCCTS for some time: knowing
> ANTLR-3.0 cannot yet generate C++, we simply
> continue to use ANTLR-2.

Sensible words indeed. There is a version that can be used and if the docs or a target or something isn?t there for one yet in 3.0, then stay with 2.0. Polite requests for features and so on always seem to be welcome though, especially if they seem to be useful for many.

> Questions (or remarks?):
> ---------
> To recap what we suspect are bugs in ANTRL-2:
> 
> - using the "?" character (&agrave;) anywhere in
> a xxx.g file, even if only in a comment, causes
> ANTLR to abort.

This is not a bug, it is just that Ter hates &agrave; the grave is a freeloader on the whole latin-1 race... ;-) It does rather sound like a bug though.

> 
> That leads to the following question: is there a
> way in ANTLR-2 to include rules from files?
> 
> - #include is used by the C or C++ preprocessor,
> but apparently not by the ANTLR preprocessor.
> - What we want is to build several compilers (for
> reengineering a variety of existing specialized
> programming languages sharing many parts of their
> syntax), and not to build one huge compiler with
> many options, and smaller compilers for
> increments.
> - For instance, we have a compiler for a whole
> tree rewriting system, containing a block of
> procedures, another one for a "control graph",
> and one for a set of rules. An increment may be a
> whole such block, or a rule, or various parts of
> a rule (nome+parameters, lhs, rhs).

Grammar inheritance is a future feature of, you guessed it, ANTLR3 :-)

Jim

From hortiz at objetdirect.com  Mon Jul  2 07:41:47 2007
From: hortiz at objetdirect.com (=?iso-8859-1?Q?H=E9l=E8ne_Ortiz?=)
Date: Mon, 2 Jul 2007 16:41:47 +0200 (CEST)
Subject: [antlr-interest] Problem using my own AST class
Message-ID: <36308.192.168.2.10.1183387307.squirrel@192.168.2.2>

Hi,

In order to have column and line set for my AST
instances, I have created
my own class which extends CommonAST.

It works fine, except for one type of command: a
command with only one word:

> count

The resulting AST instance has 0 value for both line
and column, whereas
the command :

> count 10

generates an AST instance with correct values for line
and column.

Any idea ?
Thanks a lot for your help




From rschulz at sonic.net  Mon Jul  2 07:59:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 2 Jul 2007 07:59:52 -0700
Subject: [antlr-interest] Support to Ter, questions
In-Reply-To: <051466DAA0D608439E196797955018D76E69@wavemachine.temporal-wave.com>
References: <46878217.4090608@gmx.de> <a0624080dc2adf647e0a6@[192.168.0.3]>
	<051466DAA0D608439E196797955018D76E69@wavemachine.temporal-wave.com>
Message-ID: <200707020759.53052.rschulz@sonic.net>

On Monday 02 July 2007 07:41, Jim Idle wrote:
> ...
>
> > Questions (or remarks?):
> > ---------
> > To recap what we suspect are bugs in ANTRL-2:
> >
> > - using the "?" character (&agrave;) anywhere in
> > a xxx.g file, even if only in a comment, causes
> > ANTLR to abort.
>
> This is not a bug, it is just that Ter hates &agrave; the grave is a
> freeloader on the whole latin-1 race... ;-) It does rather sound like
> a bug though.

I had an em-dash in a comment and thought it was a bug when ANTLR choked
on it thusly:

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(10):  internal error: CLIF.g : CLIF.g:810:12: expecting '*', found ' '
org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEngine.java:161)


... but then I realized that the file may not have been a properly
formatted UTF-8 file and that's what confused ANTLR. So I didn't report
it until I could try a better experiment?(there! that's a em-dash?I like
them...) (If I could figure out how to get an ellipsis, I'd use them,
too. I think I like them even better than em-dashes.)


So, first things first, does ANTLR support grammars written in arbitrary
Unicode? Does it accept UTF-8-encoded files? I know the Java source
grammar is defined as accepting Unicode, not just, say, ISO-8859-1.


> ...
>
> Jim


Randall Schulz

From jimi at temporal-wave.com  Mon Jul  2 08:11:18 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 08:11:18 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <20070702133915.5684211EC6E@www.antlr.org>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
Message-ID: <051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Scott Stanchfield
> Sent: Monday, July 02, 2007 6:39 AM
> To: 'Terence Parr'; 'ANTLR Interest'
> Subject: Re: [antlr-interest] [v3] Lack of documentation
> 


> I'M SAYING THE ANTLR v3 LICENSE IS BS IF PEOPLE MUST PAY FOR THE BASIC
> DOCS.
> 

I think that the point is that you are NOT forced to buy the book, in
the same way you are not forced to buy lots of books on PHP, Java or the
dragon book (especially the latest edition) and so on. It contains a lot
of information and some good crib sheets, and doesn't really cost very
much, and whether there is a billion pages in the wiki just a month or
so after release or not it still worth a read for the price of a few
beers/Starbucks/movies. 

There isn't anything on the site that says you have to buy the book for
the stuff to make any sense. And maybe for people that have some prior
ANTLR experience, the wiki will eventually be just as good, if not
better. However, the book is a single start point for people who don't
yet know what the heck they should be looking up on the wiki.

I think that you probably pushed buttons you were not expecting to, but
nevertheless I think you may have to consider that you were a little
over-zealous when claiming that the BSD license is BS for this product?
Also, perhaps you might be able to excuse Ter from being a little wound
up about the thread by the time you joined in? 

I don't think that Ter or anyone is actually offended by reasonable
comments about how much documentation is available, on the wiki or
anywhere. Everyone knows that it isn't all together yet and those people
who have respectfully asked (which isn't too much to be asked of
anyone?) about documentation usually receive sympathy and a
reinforcement that it will get there.

Perhaps now, we can end this thread and rather than post messages
telling people what their posts should look like, we just need to
establish a guideline that "one must be polite"(1).

Jim

(1) Unless you buy the book, which comes with a license to kill ;-)

From jimi at temporal-wave.com  Mon Jul  2 08:13:23 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 08:13:23 -0700
Subject: [antlr-interest] a question about 'while' logic
In-Reply-To: <468908D5.0000B7.27552@bj126app39.126.com>
References: <468908D5.0000B7.27552@bj126app39.126.com>
Message-ID: <051466DAA0D608439E196797955018D76E6B@wavemachine.temporal-wave.com>

Probably the best thing to do is to download the examples on the download page and crib from the Java or C  parser examples. That should give you everything you need for that construct.

 

Jim

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of csnowfox_antlr at 126.com
Sent: Monday, July 02, 2007 7:17 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] a question about 'while' logic

 

hi``everybody

I am a beginners of antlr .

Now, I would like to add the cycle  logic to a new language, but I have no way to start. 

For example, to implement a logic 

a = 3;

While (a >1) {a --;}

not only get a string but do the logic.

Someone can enlighten about it? Or give examples.

thanks`

 

 

 

________________________________

? ? ? ? ? ??? ? ? ? ? ? ? ? ? ? <http://event.mail.163.com/chanel/xyq.htm?from=126_NO3> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/d4f4f29d/attachment.html 

From win at wincent.com  Mon Jul  2 08:14:36 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 2 Jul 2007 17:14:36 +0200
Subject: [antlr-interest] PEG-style "and" predicates
Message-ID: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>

In my lexer I am trying to use PEG-style "and" predicates ("match X  
if it is followed by Y") so that I can take a rule like this:

   FOO : 'bar' ;

And make it so that it will "match 'bar' only if it is the last non- 
whitespace thing on the line".

So, based on the 11 May 2006 notes on this page:

   <http://www.antlr.org/blog/antlr3/lookahead.tml>

I tried making a rule like this:

   FOO : ('bar' ' '* ('\n' | '\r' | EOF))=> 'bar' ;

But it doesn't work. Looking at the generated code, I can see that  
the syntactic predicate is broken; on lookahead of 'b', the lexer  
fires off a syntactic predicate which tries to match only 'bar' (and  
not the whitespace etc in the predicate). As a result, this rule will  
match for any occurrence of 'bar', not just for 'bar' when it is the  
last non-whitespace thing on the line. This is happening in a  
filtering lexer, but a quick test suggests that exactly the same  
thing happens in non-filtering lexers as well.

My understanding of predicates (notes at <http://wincent.com/ 
knowledge-base/ANTLR_predicates>) leads me to believe that this is  
failing because in ANTLR, syntactic predicates are used to order a  
rule's alternatives. They are not like gated semantic predicates  
which can be used to turn an entire rule off depending on context. It  
seems that syntactic predicates only make sense when a rule has more  
than one alternative, and so they can't be used for the purposes of  
writing PEG-style "and" predicates.

I could change my rule to this:

   FOO : 'bar' ' '* ('\n' | '\r' | EOF) ;

But that isn't what I want; I want a 'bar' token and I don't want the  
trailing whitespace and newline to be included in the token.

So it seems the only workaround is to do a (very ugly) manual  
lookahead inside a gated semantic predicate:

   FOO : { foo_helper(ctx) }?=> 'bar' ;

The helper method is needed because you can only put a single  
expression inside a semantic predicate and I need to loop... It would  
go something like this (in C):

   ANTLR3_BOOLEAN foo_helper(pMyLexer ctx)
   {
       ANTLR3_UCHAR c;
       int i = 4;

       // check for presence of 'bar'
       if (LA(1) == 'b' && LA(2) == 'a' && LA(3) == 'r')
       {
          // skip over any spaces
          while (c = LA(i++), c == ' ');

          // check for newline or EOF
          if (c == '\n' || c == '\r' || c == ANTLR3_CHARSTREAM_EOF)
             return ANTLR3_TRUE;
       }
       return ANTLR3_FALSE;
   }

That was typed directly (untested) into the mail program so it might  
need some tweaks to get it to work, but you get the idea...

I guess the other alternative is to use a validating semantic  
predicate after 'bar' is matched:

   FOO: 'bar' { last_thing_on_line(ctx) }? ;

But that once again requires an ugly helper method, although not  
quite as ugly (again, untested but you get the idea):

   ANTLR3_BOOLEAN foo_helper(pMyLexer ctx)
   {
       ANTLR3_UCHAR c;
       int i = 1;

       // skip over any spaces
       while (c = LA(i++), c == ' ');

       // check for newline or EOF
       if (c == '\n' || c == '\r' || c == ANTLR3_CHARSTREAM_EOF)
             return ANTLR3_TRUE;

       return ANTLR3_FALSE;
   }

So my questions are really threefold:

1. Is there a better way of doing this than using an ugly helper method?

2. Could ANTLR be changed so that an explicitly-specified syntactic  
predicate is executed in rules for which there is only one alternative?

3. Better still, could ANTLR be extended to accept a PEG-style "&"  
notation for situations like this?

The latter would allow you to write rules like:

   FOO : 'bar' &(' '* ('\n' | '\r' | EOF));

If an "&" notation were to be added then it would be good to add a  
"!" notation for completeness as well. I know that you can use "~" in  
ANTLR but I don't think it's exactly equivalent to the PEG "not".

Cheers,
Wincent


From jimi at temporal-wave.com  Mon Jul  2 08:15:41 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 08:15:41 -0700
Subject: [antlr-interest] Parser stopping before matching the whole input
In-Reply-To: <e6dd5ba30707020736u1c351362p6cd386c7840f4099@mail.gmail.com>
References: <e6dd5ba30707020736u1c351362p6cd386c7840f4099@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76E6C@wavemachine.temporal-wave.com>

You should probably add EOF to your compilation_unit rule, ANTLR knows
what this means. Hard to analyze without the rest of your grammar beyond
that guess though.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Edson Tirelli
Sent: Monday, July 02, 2007 7:36 AM
To: antlr-interest at antlr.org
Cc: Mark Proctor; Michael Neale
Subject: [antlr-interest] Parser stopping before matching the whole
input

 


   All,

   I'm facing a problem I didn't found info on the archives. Being
short, the parser is stopping to parse before the end of the input
stream when it founds an unexpected token. For instance, my top level
rule is: 

compilation_unit
    :    prolog 
        statement+
    ;

   So, if the parser finds a valid prolog, and at least one valid
statement, and after that finds a token it does not recognize, it simply
stops parsing without any error message. Example: 

==========
package a.b.c;

import x.y.z;
xxxxxx
import r.s.t;
===========

   In the example above, the "package" is a valid prolog, the "import"
is a valid statement and both are parsed correctly. But when the parser
finds "xxxxxx" it does not recognize it and simply stops parsing without
any error. I understand the behavior from a parsing rule perspective,
but I want to force the parser to parse the whole input, reporting
errors for unrecognized tokens and recovering whenever possible.   
   How can I do that?

   I imagine that if I had a mandatory "end of stream" token, I could
simply do:

compilation_unit
    :    prolog 
        statement+
        MY_END_OF_STREAM_TOKEN
    ;

   But I don't have such token and can't add it to the language.

   Any ideas?

   Thank you in advance,
       Edson

-- 
  Edson Tirelli
  Software Engineer - JBoss Rules Core Developer 
  Office: +55 11 3529-6000
  Mobile: +55 11 9287-5646
  JBoss, a division of Red Hat @ www.jboss.com 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/10564d4b/attachment.html 

From jimi at temporal-wave.com  Mon Jul  2 08:40:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 08:40:24 -0700
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76E6D@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Wincent Colaiuta
> Sent: Monday, July 02, 2007 8:15 AM
> To: ANTLR Interest
> Subject: [antlr-interest] PEG-style "and" predicates
> I could change my rule to this:
> 
>    FOO : 'bar' ' '* ('\n' | '\r' | EOF) ;
> 
> But that isn't what I want; I want a 'bar' token and I don't want the
> trailing whitespace and newline to be included in the token.

How about this (C Target):

FOO 
	
: 'bar'

	{ MARK(); } 

	    ' '* ('\n' | '\r' | EOF)

	{ REWINDLAST();	}

;

Then assuming that bar without the trailing stuff can be managed by some
other rule, then it should be fine.

Jim


From jimi at temporal-wave.com  Mon Jul  2 08:44:18 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 08:44:18 -0700
Subject: [antlr-interest] Problem using my own AST class
In-Reply-To: <36308.192.168.2.10.1183387307.squirrel@192.168.2.2>
References: <36308.192.168.2.10.1183387307.squirrel@192.168.2.2>
Message-ID: <051466DAA0D608439E196797955018D76E6E@wavemachine.temporal-wave.com>

It may be the point in which you are initializing the line. The column should be zero I think, but the line being zero tends to make me think that perhaps the first token causes the line to be set AFTER you have dealt with it. 

However what are you using to decide the line number for the AST? The line and offset should be in the token itself, so maybe it is just a matter of getting this from somewhere else.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of H?l?ne Ortiz
> Sent: Monday, July 02, 2007 7:42 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem using my own AST class
> 
> Hi,
> 
> In order to have column and line set for my AST
> instances, I have created
> my own class which extends CommonAST.
> 
> It works fine, except for one type of command: a
> command with only one word:
> 
> > count
> 
> The resulting AST instance has 0 value for both line
> and column, whereas
> the command :
> 
> > count 10
> 
> generates an AST instance with correct values for line
> and column.
> 
> Any idea ?
> Thanks a lot for your help
> 
> 


From jimi at temporal-wave.com  Mon Jul  2 09:09:12 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 09:09:12 -0700
Subject: [antlr-interest] Bug in C runtime column handling
In-Reply-To: <A9FC5E6A-F5FD-4688-90BB-BE44524F67F1@wincent.com>
References: <A9FC5E6A-F5FD-4688-90BB-BE44524F67F1@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76E73@wavemachine.temporal-wave.com>

It was -1 in the Java at some point and I think Ter changed it. I have
not had time to work out the implications of this because the input
stuff tests for -1 in places I think. I will get to it.

Jim



> -----Original Message-----
> From: Wincent Colaiuta [mailto:win at wincent.com]
> Sent: Monday, July 02, 2007 6:21 AM
> To: ANTLR Interest
> Cc: Jim Idle
> Subject: Bug in C runtime column handling
> 
> I posted about this issue previously (<http://www.antlr.org/
> pipermail/antlr-interest/2007-June/021331.html>) but while unit
> testing a parser built with the ANTLR 3 C target I discovered that
> the behaviour is a little more inconsistent than I had initially
> thought. CC'ing you directly on this one Jim seeing as I don't know
> if you saw my post on the topic last time.
> 
> BACKGROUND:
> 
> In lexer rules it can be handy to use a predicate to match certain
> tokens only when they appear in a certain column (often the first
> column). The C runtime provides a getCharPositionInLine() function
> that can be used to access the current column information.
> Unfortunately, as described in my previous post, the value returned
> by this function will be -1 at the start of the input, unlike the
> Java runtime where it is 0. This is because in the antlr3InputReset()
> function in antlr3inputstream.c the charPositionInLine is explicitly
> set to -1.
> 
> As noted earlier, I worked around this by using a helper method in my
> lexer:
> 
>    ANTLR3_UINT32 ANTLR3_INLINE char_position_in_line(pWikiTextLexer
> ctx)
>    {
>        ANTLR3_UINT32 pos = ctx->pLexer->getCharPositionInLine(ctx-
>  >pLexer);
>        return pos == -1 ? 0 : pos;
>    }
> 
> But I just discovered that this still won't work consistently on the
> first line of the input. This is because after scanning the first
> character on the first line the column number will be bumped up by 1
> only. This means that the column numbering is off by one for every
> character in the first line; all the other lines are correct.
> 
> To illustrate, given input like the following:
> 
> foobar
> foobar
> 
> On the first line "f" will be at column -1, "o" will be at column 0,
> and so on for columns 1, 2, 3, 4.
> 
> On the second line "f" will be at column 0, "o" at column 1, and so
> on for columns 2, 3, 4, 5.
> 
> As this is inconsistent it could catch people out and so looks like a
> bug to me.
> 
> SOLUTION:
> 
> So to work around this bug the helper method now needs to be updated
> to look at the line number first in order to figure out whether
> adjusting the column number is necessary or not. Alternatively, the
> following patch can be applied to the runtime (antlr3inputstream.c):
> 
> 166c166
> <     input->charPositionInLine = -1;
> ---
>  >     input->charPositionInLine = 0;
> 
> Cheers,
> Wincent


From ted.villalba at gmail.com  Mon Jul  2 09:41:55 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Mon, 2 Jul 2007 09:41:55 -0700
Subject: [antlr-interest] parser rule precedence
Message-ID: <69fb4b090707020941u6200bb8aua75f45d10b3ec079@mail.gmail.com>

Hi,

I have created a grammar and expected the topmost rules to be selected
first, but this doesn't seem to be the case. Is there an option or setting
that will force this behavior?
For instance if I have :

grammar WQL;

options{
    k=6;
    output=AST;
    ASTLabelType=CommonTree;
}
query : field
        | field (WS!)+ (BOOL_OP^ (WS!)* query)*

field : tag '=' value  -> ^('=' tag value)
        | qid
        ;

value  : term (WS)+ BOOL_OP (WS)* value -> ^(BOOL_OP term BOOL_OP value)


Then passing a query like: AB=" This is a query string" AND CD=Another
string

What I see  through ANTLRWorks debugging is rather than selecting the first
rule in the query option, it selects the value rule and then throws a
"NoViableAltException".
So, rather than evaluate the query as => field AND field
It appears to try to evaluate it using the value rule first,
creating tag=(value AND value).
This is a pretty bad explanation of what's happening here, but I think the
solution is to force the evaluation of the topmost grammar rules first.
Is there a way to enforce this?

Thanks,
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/20bdd3ee/attachment.html 

From win at wincent.com  Mon Jul  2 09:41:42 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Mon, 2 Jul 2007 18:41:42 +0200
Subject: [antlr-interest] Bug in C runtime column handling
In-Reply-To: <051466DAA0D608439E196797955018D76E73@wavemachine.temporal-wave.com>
References: <A9FC5E6A-F5FD-4688-90BB-BE44524F67F1@wincent.com>
	<051466DAA0D608439E196797955018D76E73@wavemachine.temporal-wave.com>
Message-ID: <6E07BF27-AE13-4633-AC7E-6C47949E8221@wincent.com>

El 2/7/2007, a las 18:09, Jim Idle escribi?:

> It was -1 in the Java at some point and I think Ter changed it. I have
> not had time to work out the implications of this because the input
> stuff tests for -1 in places I think. I will get to it.

I just did a grep over the source tree and found these:

src/antlr3commontree.c:    if   (token == NULL || token- 
 >getCharPositionInLine(token) == -1)
src/antlr3commontreenodestream.c:    if (k == -1)
src/antlr3commontreenodestream.c:    if (ctns->currentChildIndex == -1)
src/antlr3tokenstream.c:    if  (cts->p == -1)
src/antlr3tokenstream.c:    if  (cts->p == -1)
src/antlr3tokenstream.c:    if  (cts->p == -1)
src/antlr3tokenstream.c:    if  (cts->p == -1)
src/antlr3tokenstream.c:    if  (tokenStream->p == -1)
src/antlr3tokenstream.c:    if  (tokenStream->p == -1)

Of them, the first one looks to be the most interesting...

Cheers,
Wincent


From cameron.palmer at gmail.com  Mon Jul  2 10:42:46 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Mon, 2 Jul 2007 12:42:46 -0500
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
Message-ID: <bc4938830707021042g70be5d3eqfb2779a5b242d4c9@mail.gmail.com>

What is the best way to troubleshoot this error? I know it has
something to do the output template but I can't figure out what. I
have been looking at diffs of working code and broken code and can't
place what changed.

java org.antlr.Tool SDFWalker.g ANTLR Parser Generator  Version 3.0
(May 17, 2007) 1989-2007

error(10):  internal error: SDFWalker.g :
java.lang.IllegalArgumentException: Can't find template
tokenRefRuleRoot.st
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:485)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:464)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:372)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:384)
org.antlr.codegen.CodeGenTreeWalker.getTokenElementST(CodeGenTreeWalker.java:160)
org.antlr.codegen.CodeGenTreeWalker.atom(CodeGenTreeWalker.java:1992)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1641)
org.antlr.codegen.CodeGenTreeWalker.element(CodeGenTreeWalker.java:1478)
org.antlr.codegen.CodeGenTreeWalker.alternative(CodeGenTreeWalker.java:1252)
org.antlr.codegen.CodeGenTreeWalker.block(CodeGenTreeWalker.java:1037)
org.antlr.codegen.CodeGenTreeWalker.rule(CodeGenTreeWalker.java:753)
org.antlr.codegen.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:544)
org.antlr.codegen.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:486)
org.antlr.codegen.CodeGenTreeWalker.grammar(CodeGenTreeWalker.java:321)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:406)
org.antlr.Tool.processGrammar(Tool.java:347)
org.antlr.Tool.process(Tool.java:268)
org.antlr.Tool.main(Tool.java:70)


The code is here:
http://csrl.unt.edu/svn/repos/palmerc/sdfAsm/SDF.g
http://csrl.unt.edu/svn/repos/palmerc/sdfAsm/SDFWalker.g
http://csrl.unt.edu/svn/repos/palmerc/sdfAsm/SDF.stg

From rschulz at sonic.net  Mon Jul  2 10:53:56 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 2 Jul 2007 10:53:56 -0700
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <bc4938830707021042g70be5d3eqfb2779a5b242d4c9@mail.gmail.com>
References: <bc4938830707021042g70be5d3eqfb2779a5b242d4c9@mail.gmail.com>
Message-ID: <200707021053.56239.rschulz@sonic.net>

On Monday 02 July 2007 10:42, Cameron Palmer wrote:
> What is the best way to troubleshoot this error? I know it has
> something to do the output template but I can't figure out what. I
> have been looking at diffs of working code and broken code and can't
> place what changed.
>
> java org.antlr.Tool SDFWalker.g ANTLR Parser Generator  Version 3.0
> (May 17, 2007) 1989-2007
>
> error(10):  internal error: SDFWalker.g :
> java.lang.IllegalArgumentException: Can't find template
> tokenRefRuleRoot.st

So far, every time I've seen that or a similar diagnostic, it has been 
because I inadvertently mixed explicit tree builder notation (-> 
^( ... )) with operator-driven tree bulding (the ! and ^ suffixes on 
element of a rule's right-hand side).


> ...


It's too bad you don't get a line number on those diagnostics.


Randall Schulz

From rdclark at gmail.com  Mon Jul  2 10:54:53 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 2 Jul 2007 10:54:53 -0700
Subject: [antlr-interest] How do you use template output with
	backtracking on in a validating semantic predicate?
In-Reply-To: <4e7bd29e0707020027w61ccac8ft47c8b0e72f697201@mail.gmail.com>
References: <4e7bd29e0707020027w61ccac8ft47c8b0e72f697201@mail.gmail.com>
Message-ID: <d3992d900707021054i314c897dyd33a26dcf9468a4b@mail.gmail.com>

OK, I see what you're doing: selecting a different output template
based on type info in your symbol table. The trick is to change the
piece that creates your template. Try this:

 ^('==' left=expression right=expression) ->
{ String template = (isString($left.st} && isString($right.st)) ?
"stringEqual" : "equal";
templateLib.getInstanceOf(template,
               new STAttrMap().put("left", left.st).put("right", right.st);
}

The secret is the "-> {...}" bit. It says "I'll construct the string
template myself, thank you."

...Richard

From parrt at cs.usfca.edu  Mon Jul  2 10:56:22 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 10:56:22 -0700
Subject: [antlr-interest] Support to Ter, questions
In-Reply-To: <200707020759.53052.rschulz@sonic.net>
References: <46878217.4090608@gmx.de> <a0624080dc2adf647e0a6@[192.168.0.3]>
	<051466DAA0D608439E196797955018D76E69@wavemachine.temporal-wave.com>
	<200707020759.53052.rschulz@sonic.net>
Message-ID: <26AB38AB-37EC-42B9-A6F5-3E3CCE4618FC@cs.usfca.edu>

hi Randall,

Good question...nope, no unicode yet for literals/var names in  
antlr.  I'm trying to rewrite antlr.g in v3 as we speak.
Ter

From parrt at cs.usfca.edu  Mon Jul  2 11:00:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 11:00:37 -0700
Subject: [antlr-interest] Can't find template tokenRefRuleRoot.st
In-Reply-To: <200707021053.56239.rschulz@sonic.net>
References: <bc4938830707021042g70be5d3eqfb2779a5b242d4c9@mail.gmail.com>
	<200707021053.56239.rschulz@sonic.net>
Message-ID: <ABE80B6F-FBA9-45EB-B3C1-9C89B989CD23@cs.usfca.edu>


On Jul 2, 2007, at 10:53 AM, Randall R Schulz wrote:

> On Monday 02 July 2007 10:42, Cameron Palmer wrote:
>> What is the best way to troubleshoot this error? I know it has
>> something to do the output template but I can't figure out what. I
>> have been looking at diffs of working code and broken code and can't
>> place what changed.
>>
>> java org.antlr.Tool SDFWalker.g ANTLR Parser Generator  Version 3.0
>> (May 17, 2007) 1989-2007
>>
>> error(10):  internal error: SDFWalker.g :
>> java.lang.IllegalArgumentException: Can't find template
>> tokenRefRuleRoot.st
>
> So far, every time I've seen that or a similar diagnostic, it has been
> because I inadvertently mixed explicit tree builder notation (->
> ^( ... )) with operator-driven tree bulding (the ! and ^ suffixes on
> element of a rule's right-hand side).
>
>
>> ...
>
>
> It's too bad you don't get a line number on those diagnostics.

Yeah, it catches me a lot too...i'm rewriting the antlr.g grammar to  
fix this bug I get the error I'm trying to fix while tyring to fix.  
annoying ;)

Ter


From parrt at cs.usfca.edu  Mon Jul  2 11:01:43 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 11:01:43 -0700
Subject: [antlr-interest] How do you use template output with
	backtracking on in a validating semantic predicate?
In-Reply-To: <d3992d900707021054i314c897dyd33a26dcf9468a4b@mail.gmail.com>
References: <4e7bd29e0707020027w61ccac8ft47c8b0e72f697201@mail.gmail.com>
	<d3992d900707021054i314c897dyd33a26dcf9468a4b@mail.gmail.com>
Message-ID: <ECBA7BA2-859D-4D33-A63A-CC341B15CDA9@cs.usfca.edu>

You can also use a predicate in front of the template

-> {...}? template
-> {...}? template2
-> template3

Ter
On Jul 2, 2007, at 10:54 AM, Richard Clark wrote:

> OK, I see what you're doing: selecting a different output template
> based on type info in your symbol table. The trick is to change the
> piece that creates your template. Try this:
>
> ^('==' left=expression right=expression) ->
> { String template = (isString($left.st} && isString($right.st)) ?
> "stringEqual" : "equal";
> templateLib.getInstanceOf(template,
>               new STAttrMap().put("left", left.st).put("right",  
> right.st);
> }
>
> The secret is the "-> {...}" bit. It says "I'll construct the string
> template myself, thank you."
>
> ...Richard


From qwertie256 at gmail.com  Mon Jul  2 11:08:24 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 12:08:24 -0600
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
Message-ID: <ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>

> Are you really saying that devoting 20 years of my life to make the
> best tools possible is not generous?  You kidding me?  others are
> more generous?  You've got to be kidding me.  People swoop in and
> built a few patches or whatever and then move on.  Rare few start

Sorry, I don't know if you've understood me.

Your 20 years of effort is very generous! Very generous indeed! And
I'm happy to pay for your book (please tell me you get much more than
$3 when I bought the PDF for $24).

Yet there are other projects, large open source projects, that not
only give away the product and the source code but also the
documentation. For example, the SharpDevelop folks give away their
book on SharpDevelop. Unfortunately it's poorly edited and has lots of
errors, but er... if we can overlook that, I hope you can see my
point.

Yes, I do think there are some people that are more generous in that
they give away everything including books and docs, but let me make
this clear: it's not a contest. You've done good work and deserve
compensation.

Just as all who work on important open-source projects deserve compensation.

And it sucks that the only way to get compensated is to resort to
selling closed copies that the reader is not free to reproduce. It's
the opposite of open source, after all. But that's just how our
society works. You sell copies or you don't get paid. Well, you can
also sell support, but in order to sell support, it helps to create a
reason that people need support: i.e. by having insufficient or poorly
organized documentation (note: I'm not talking about ANTLR here!). In
other words it makes sense that open-source projects that sell support
get more income the poorer their documentation is.

Again, I think it's a limitation of our laws/institutions, and you
can't blame Ter for it.

- David

From rdclark at gmail.com  Mon Jul  2 11:13:25 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 2 Jul 2007 11:13:25 -0700
Subject: [antlr-interest] How do you use template output with
	backtracking on in a validating semantic predicate?
In-Reply-To: <ECBA7BA2-859D-4D33-A63A-CC341B15CDA9@cs.usfca.edu>
References: <4e7bd29e0707020027w61ccac8ft47c8b0e72f697201@mail.gmail.com>
	<d3992d900707021054i314c897dyd33a26dcf9468a4b@mail.gmail.com>
	<ECBA7BA2-859D-4D33-A63A-CC341B15CDA9@cs.usfca.edu>
Message-ID: <d3992d900707021113s3afe8724re7555bbfcd5f1899@mail.gmail.com>

Whoa...so William could write this?

^('==' left=expression right=expression)
  -> { isString($left.st} && isString($right.st) }?
stringEqual(left={$left.st}, right={$right.st})
  -> equal(left={$left.st}, right={$right.st})

...R

From parrt at cs.usfca.edu  Mon Jul  2 11:16:43 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 11:16:43 -0700
Subject: [antlr-interest] How do you use template output with
	backtracking on in a validating semantic predicate?
In-Reply-To: <d3992d900707021113s3afe8724re7555bbfcd5f1899@mail.gmail.com>
References: <4e7bd29e0707020027w61ccac8ft47c8b0e72f697201@mail.gmail.com>
	<d3992d900707021054i314c897dyd33a26dcf9468a4b@mail.gmail.com>
	<ECBA7BA2-859D-4D33-A63A-CC341B15CDA9@cs.usfca.edu>
	<d3992d900707021113s3afe8724re7555bbfcd5f1899@mail.gmail.com>
Message-ID: <FB511656-AA09-4F8A-AEF9-2775426171D7@cs.usfca.edu>

correct
Ter
On Jul 2, 2007, at 11:13 AM, Richard Clark wrote:

> Whoa...so William could write this?
>
> ^('==' left=expression right=expression)
>  -> { isString($left.st} && isString($right.st) }?
> stringEqual(left={$left.st}, right={$right.st})
>  -> equal(left={$left.st}, right={$right.st})
>
> ...R


From antlr at olivercomputing.com  Mon Jul  2 11:43:18 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 02 Jul 2007 14:43:18 -0400
Subject: [antlr-interest] [v3] Lack of documentation
Message-ID: <20070702201220.D12F43C600F7@newmach.olivercomputing.com>

This thread is not about ANTLR, but about the philosophy of open 
source software - so that's the context of my comments.

David wrote "Again, I think it's a limitation of our 
laws/institutions, and you can't blame Ter for it." That so-called 
limitation is actually a noble foundational principle of actual 
civilization: the concept that one's work morally belong's to one's 
self. It is no accident that the 20th century was the most brutal in 
human history - it was the era of the opposite principle 
(collectivism) put into the widest action, "from each according to 
their ability, to each according to their need."  Anybody who wants a 
fully fleshed-out treatment of the consequences of each principle 
(individualism vs. collectivism) should read the classic novel Atlas Shrugged.

The bottom line is that nobody has any right whatsoever to demand 
another's time/money/life for free. Even a trade must be voluntary, 
and a seller has a perfect right to refuse a buyer as well. The root 
reason is that each person's life belongs to themselves. If somebody 
chooses to give away software that they own, that is their right - 
and if they choose to sell it, and/or associated documentation, that 
is also their right. If somebody wants to write up documentation on 
ANTLR v3 that's better than Parr's, they can do that, and either give 
away or sell the result too, as *their* creation - but nobody else 
should be insolent enough to *demand* another's time. I would add: 
not only is it their *right* to sell a product, but they should be 
proud that others find enough value to buy it, and should not feel 
one iota of shame or guilt about providing such a value (nor should 
those giving stuff away feel smugly superior.)

Frankly I would rather pay a reasonable price for a piece of software 
that is proudly written and maintained by other programmers, so that 
I *can* hold their feet to the fire if their product has irritating 
bugs - and so that they can make an honest living from the creative 
expenditure of their time and hard-earned intellectual skills.


From qwertie256 at gmail.com  Mon Jul  2 12:07:42 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 13:07:42 -0600
Subject: [antlr-interest] Philosophy of open source
Message-ID: <ce40b1470707021207w7e9358f2vd87888baa3bcfe93@mail.gmail.com>

> David wrote "Again, I think it's a limitation of our
> laws/institutions, and you can't blame Ter for it." That so-called
> limitation is actually a noble foundational principle of actual
> civilization: the concept that one's work morally belong's to one's
> self. It is no accident that the 20th century was the most brutal in
> human history - it was the era of the opposite principle
> (collectivism) put into the widest action, "from each according to
> their ability, to each according to their need."  Anybody who wants a
> fully fleshed-out treatment of the consequences of each principle
> (individualism vs. collectivism) should read the classic novel Atlas Shrugged.

An interesting take; mine is rather different. I think you are talking
about communism vs. capitalism; but I believe in neither. I don't
think the idea "from each according to their ability, to each
according to their need" has ever truly been implemented; communism is
a far cry from it, as its track record of meeting people's needs is
pretty poor. Its track record of utilizing their abilities is not that
great, either. Capitalism, on the other hand, has tended to be brutal
in its purest form; the oppression of labor that occurred when
capitalism went unchecked was the very thing that spawned its
opposite, after all. In many ways I think today's first world
societies have found a balance between the two, and I think that's
good.

I believe in market principles, in human rights, and in a balance
between government regulation and individual freedom.

One of those government regulations is copyright, and that's what I
think this is really about. I don't think that copyright should be
abolished but I think an alternative should be provided, so that
making money is not *required* to be tied to restricting access to
information. Did it ever occur to you that maybe Ter would give away
his book if he were paid a lot of money to do so?

From kroepke at classdump.org  Mon Jul  2 12:09:25 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 2 Jul 2007 21:09:25 +0200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>
Message-ID: <51043BD7-5F40-43CF-8953-4724E02E1938@classdump.org>

First of all:

Amazing what can happen to your inbox when you're gone one measly  
weekend...

I think it's time to relax a bit guys. Turn off that computer and get  
the hell outside. Like fresh air, like.

On Jul 2, 2007, at 8:08 PM, David Piepgrass wrote:

> Yet there are other projects, large open source projects, that not
> only give away the product and the source code but also the
> documentation. For example, the SharpDevelop folks give away their
> book on SharpDevelop. Unfortunately it's poorly edited and has lots of
> errors, but er... if we can overlook that, I hope you can see my
> point.

To me it looks like this is the point: "...other projects, large open  
source projects...".
The ANTLR Project is not large. There may be a lot of users, but if  
you look at how many people are actually working on it,
you'll notice that it's essentially Ter, plus a handful target  
developers and also of course a handful of very helpful bug
reporters (=users). Of course sometimes Ter hijacks us to run ideas  
against our (unsuspecting) brains ;)

We all have our reasons to be involved and of course have a varying  
amount of time at our hands. That's ok and to be expected
in open source projects. Nothing to get all worked up over.

Nevertheless, IMHO buying a book has absolutely nothing to do with a  
project being a good open source project. I know a lot
of projects where you really, really, *really* want a book even  
though there is documentation available (e.g. Lucene).
If you are really serious about a tool and have the source, for me  
the natural thing to do is to take a look at the source to
understand what I'm doing. This might differ for people but then  
again, there is a helpful (I think) mailing list to ask
questions. I personally have provided ongoing help for a couple of  
people over time and sometimes that's more helpful than
any docs (again IHMO).
On the flipside, a book also increases the visibility of the tool (to  
name just one legitimate reason in its favor).

I'm not going to go into the flame-war, but still needed the above to  
get off my chest. My opinion, no to be taken in favor
or against any single person.

cheers,
-k

P.S.: Don't forget the relaxation part. It works! ;)

-- 
Kay R?pke
http://classdump.org/





From whalliburton at gmail.com  Mon Jul  2 12:16:34 2007
From: whalliburton at gmail.com (William Halliburton)
Date: Mon, 2 Jul 2007 12:16:34 -0700
Subject: [antlr-interest] Newbie tree rewrite question.
Message-ID: <4e7bd29e0707021216u194c211ah47a95e97d79d35d8@mail.gmail.com>

Hello,

I have a grammar that parses a C like language into an AST and a tree
grammar that traverses the AST and outputs a translated language via
templates.

My tree grammar is getting a little complex and i think that things could be
simplified by having a second pass grammar that translates the AST into a
similar AST before the final tree grammar.

I've been trying figure out how to make a simple AST to AST tree parser. Is
this desirable and doable? Are there any examples? Looks like the
rewrite=true option works with templates not AST.

Thank you,
William Halliburton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/30d0a6c8/attachment.html 

From qwertie256 at gmail.com  Mon Jul  2 12:32:58 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 13:32:58 -0600
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <51043BD7-5F40-43CF-8953-4724E02E1938@classdump.org>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>
	<51043BD7-5F40-43CF-8953-4724E02E1938@classdump.org>
Message-ID: <ce40b1470707021232g5bb7acc1j30d9f14c30579996@mail.gmail.com>

> The ANTLR Project is not large. There may be a lot of users, but if
> you look at how many people are actually working on it,
> you'll notice that it's essentially Ter, plus a handful target
> developers and also of course a handful of very helpful bug
> reporters (=users).

Hmm, it seems fairly large to me. Not large like Linux, but much
bigger than most open-source programs. I mean, how many projects are
so large they have and need many hundreds of pages of documentation?
But there are many ways to measure size - perhaps we use different
metrics.

> P.S.: Don't forget the relaxation part. It works! ;)

Absolutely. Getting wound up like this really impedes my ability to
write code. If it gets any worse, I'll actually have to go outside ;)

From qwertie256 at gmail.com  Mon Jul  2 12:38:16 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 13:38:16 -0600
Subject: [antlr-interest] How to control token numbers manually?
In-Reply-To: <4688b443.07ec720a.27e1.ffffbb87SMTPIN_ADDED@mx.google.com>
References: <ce40b1470707010929r15373a74pac3d2fef6790ebc4@mail.gmail.com>
	<4688b443.07ec720a.27e1.ffffbb87SMTPIN_ADDED@mx.google.com>
Message-ID: <ce40b1470707021238g2a28ee20td3acf9af49137584@mail.gmail.com>

> I'm not sure if lexers support vocabulary importing (I know
> parsers do), but if they do then you should be able to do it that
> way -- make a tokens file and import it into the lexer.  Worth a
> try, anyway :)

Ahh, of course, I should have tried that.

And happily, it works! But I found the following caveats.

There is a bug that occurs when ANTLR imports and then exports a
backslash. So if I have

parser grammar FooParser;
options {
       tokenVocab=Foo;
...
lexer grammar Foo;
options {
       tokenVocab=Foo2;

// In Foo2.tokens
'\\'=25
// In the generated Foo.tokens
'\'=25
'\\'=31         // Added by ANTLR

This causes a syntax error when compiling the parser. And I guess
there is another bug in ANTLRWorks because after the syntax error,
ANTLRWorks will keep repeating the same error every time you try to
Generate Code, until you quit and restart the program.

By the way, I found that

'\\\\'=25

Seems to work as a single backslash.

There is another important caveat: ANTLR cannot handle "holes" when
importing tokens into the parser, i.e. unused numbers in the list of
tokens. You must start numbering tokens at 4 and continue up from
there with consecutive integers. The problem is that the token names
array called tokenNames[] in your parser will not have any empty
elements in it, so if your tokens are

APPLE=4
GRAPE=5
LEMON=9
PEAR=10

then your token array will be

public static readonly string[] tokenNames = new string[]
{
       "<invalid>",
       "<EOR>",
       "<DOWN>",
       "<UP>",
       "APPLE",
       "GRAPE",
       "LEMON",
       "PEAR"
};

Therefore, token name lookups will not work correctly.

On the plus side, you do not have to define all tokens in your .tokens
file; ANTLR can add any additional tokens you define in the lexer and
will number them correctly.

P.S. I'm using the C# target; perhaps YMMV for Java etc.

From qwertie256 at gmail.com  Mon Jul  2 13:08:39 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 14:08:39 -0600
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
Message-ID: <ce40b1470707021308i4217aebdl445f9d82ac113a96@mail.gmail.com>

> 1. Is there a better way of doing this than using an ugly helper method?

Not that I know of, but thanks for the analysis (I've been having a
related problem.)

> If an "&" notation were to be added then it would be good to add a
> "!" notation for completeness as well. I know that you can use "~" in
> ANTLR but I don't think it's exactly equivalent to the PEG "not".

Right, ~ consumes input whereas ! would not. Also, in a lexer, ~ can
only be used with a single character, whereas ! should support an
arbitrary expression.

-- 
- David

From dirty at apple.com  Mon Jul  2 13:14:21 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 2 Jul 2007 13:14:21 -0700
Subject: [antlr-interest] Help with FishEye
Message-ID: <A0C63960-156F-4A41-973E-50C406DF095F@apple.com>

Can someone please explain to me how FishEye is supposed to work?

I'm trying to download Jim Idle's latest C runtime from June 27th.

On http://fisheye2.cenqua.com/browse/antlr, I can see change revision  
3851.

But if I click on the runtime/C/dist/libantlr3c-3.0.1.tar.gz URL  
underneath the comment, I don't get a useful download.  I get 6K HTML  
file.

If I click on the little blue down arrow, then I get a big file, but  
it isn't actually a tar file.  I can't identify what it is.

I've been very frustrated with FishEye.  It's very...pretty.  But as  
far as a mechanism for downloading files, it leaves me very frustrated.

Cameron Esfahani
dirty at apple.com

"There are times in the life of a nation when the only place a decent  
man can find himself is in prison."



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/b2f35155/attachment.html 

From matthew.j.diehl at intel.com  Mon Jul  2 13:16:29 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 2 Jul 2007 13:16:29 -0700
Subject: [antlr-interest] tree grammar clarification
In-Reply-To: <3e5ed32f0706291937h21d87f67v8e0ed652c65f3477@mail.gmail.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2022F467E@orsmsx417.amr.corp.intel.com>

I don't know if anyone's replied to this yet...I have over 100 messages
that I haven't checked yet.

>
>The grammar rule I need to translate is:
>
>nonzeros : MYNZTN+ -> ^(MYNONZEROS MNZTN)+
>              ;
>
>
>I translated the above rule in my tree grammar as:
>
>nonzeros:  ^(MYNONZEROS MNZTN)+
>             ;
>
>When I translate the above rule in my tree grammar, ANTLR 3.0
>complains that the + is an unexpected token.  

I've run into this problem too.  Alls you have to do is add some
parenthesis:

Nonzeros: (^(MYNONZEROS MNZTN))+

And then it's fine.  I think this should maybe be fixed (is it a bug?),
but it's not too hard to work around...just makes the code a little
harder to read.

Matt

From parrt at cs.usfca.edu  Mon Jul  2 13:21:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 13:21:16 -0700
Subject: [antlr-interest] tree grammar clarification
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C2022F467E@orsmsx417.amr.corp.intel.com>
References: <A10CD303B51F814DB568A8AAF02174C2022F467E@orsmsx417.amr.corp.intel.com>
Message-ID: <029E7BBD-C20A-4415-841B-2914F1767F00@cs.usfca.edu>


On Jul 2, 2007, at 1:16 PM, Diehl, Matthew J wrote:
> And then it's fine.  I think this should maybe be fixed (is it a  
> bug?),
> but it's not too hard to work around...just makes the code a little
> harder to read.

It's listed as an improvement:

http://www.antlr.org:8888/browse/ANTLR-129

:)

Ter


From Stephen_Hardy at rabbit.com  Mon Jul  2 13:30:36 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Mon, 2 Jul 2007 13:30:36 -0700
Subject: [antlr-interest] Infinite lexer exception allocation loop in C
	target C parser, antlr3.0
Message-ID: <62BABE024B7C074E9194E9727A418979C4F031@dvs-sms-mail01.digi.com>

Hi all,
I'm tasked with some C-to-C translation, and have been using the ANSI C
grammar with the C target as a starting point, with antlr3.0.

The grammar inadvertently omits the possibility of using \x (hex)
escapes in a literal string, and this causes an infinite memory
allocation loop when the parser is run against tokens such as
"\x00\x00".  The offending sequence of code is in mSTRING_LITERAL(),
which calls mEscapeSequence(), which in turn allocates an exception
struct (CONSTRUCTEX()) when it fails to understand the \x.
Unfortunately, the calling code is a for(;;) loop which does not advance
the token stream, hence the lexer will allocate forever.  

Sorry I'm really new to this, so it may be my fault, but it looks like
it may be a C target problem.  Didn't see any similar problem mentioned
in the most recent archive.

Regards,
SJH

From liviu.u at gmail.com  Mon Jul  2 13:38:10 2007
From: liviu.u at gmail.com (Liviu U)
Date: Mon, 2 Jul 2007 23:38:10 +0300
Subject: [antlr-interest] C# code generation, where are the .net libraries?
Message-ID: <c522653d0707021338p2b53ee1al1f40cd8455ccb9c8@mail.gmail.com>

Hi guys,

I am pleasently surprised that antlworks c# generation seems to work now.
But where do I find the .NET 2.0 libraries to compile the generated files.
The site seems silent on this, and the links in wiki are empty..

Thanx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/f87b065d/attachment.html 

From jaluber at gmx.de  Mon Jul  2 13:41:04 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 02 Jul 2007 22:41:04 +0200
Subject: [antlr-interest] C# code generation,
	where are the .net libraries?
In-Reply-To: <c522653d0707021338p2b53ee1al1f40cd8455ccb9c8@mail.gmail.com>
References: <c522653d0707021338p2b53ee1al1f40cd8455ccb9c8@mail.gmail.com>
Message-ID: <468962E0.5020004@gmx.de>

Liviu U wrote:
> Hi guys,
> 
> I am pleasently surprised that antlworks c# generation seems to work
> now. But where do I find the .NET 2.0 libraries to compile the generated
> files. The site seems silent on this, and the links in wiki are empty..
> 
> Thanx

Look under the Runtime directory in the ANTLR installation directory.
There you choose the directory CSharp.

Best regards,
Johannes Luber

From qwertie256 at gmail.com  Mon Jul  2 13:44:52 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 14:44:52 -0600
Subject: [antlr-interest] C# code generation,
	where are the .net libraries?
In-Reply-To: <c522653d0707021338p2b53ee1al1f40cd8455ccb9c8@mail.gmail.com>
References: <c522653d0707021338p2b53ee1al1f40cd8455ccb9c8@mail.gmail.com>
Message-ID: <ce40b1470707021344hfef833fm98a7a3539ca7606e@mail.gmail.com>

The .NET 2.0 SDK (as well as tools like Visual Studio Express) are
available from Microsoft, if that's what you mean.

As for the ANTLR C# runtime, it is in the ANTLR source distro
antlr-3.0.tar.gz in runtime\CSharp\bin\net-2.0\Antlr3.Runtime.dll.

On 7/2/07, Liviu U <liviu.u at gmail.com> wrote:
> Hi guys,
>
> I am pleasently surprised that antlworks c# generation seems to work now.
> But where do I find the .NET 2.0 libraries to compile the generated files.
> The site seems silent on this, and the links in wiki are empty..
>
> Thanx

From pink at odahoda.de  Mon Jul  2 13:53:52 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 02 Jul 2007 22:53:52 +0200
Subject: [antlr-interest] Help with FishEye
References: <A0C63960-156F-4A41-973E-50C406DF095F@apple.com>
Message-ID: <f6bol1$6og$1@sea.gmane.org>

Cameron Esfahani wrote:

> Can someone please explain to me how FishEye is supposed to work?
> 
> I'm trying to download Jim Idle's latest C runtime from June 27th.
> 
> On http://fisheye2.cenqua.com/browse/antlr, I can see change revision
> 3851.
> 
> But if I click on the runtime/C/dist/libantlr3c-3.0.1.tar.gz URL
> underneath the comment, I don't get a useful download.  I get 6K HTML
> file.

Yep, that's a page about the file, not the file itself.

> If I click on the little blue down arrow, then I get a big file, but
> it isn't actually a tar file.  I can't identify what it is.

Mmmm.. If I click that link in Konqueror, ark is opened, but it fails to
open the archive - "an error occured". Grml...
If I fetch that URL using wget, everything works fine. "Save Link As..."
from the browser also works, as well as opening the downloaded file in
ark...
Strange...

You could also navigate to the runtime/C/dist directory and download a zip
(which contains the tarball) using the link at the bottom left.

> I've been very frustrated with FishEye.  It's very...pretty.  But as
> far as a mechanism for downloading files, it leaves me very frustrated.

I think you should tell this to the Cenqua folks. Something smells fishy ;)
though I cannot say what.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From dcaton at shorelinesoftware.com  Mon Jul  2 14:11:53 2007
From: dcaton at shorelinesoftware.com (Don Caton)
Date: Mon, 2 Jul 2007 17:11:53 -0400
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>
References: <46878217.4090608@gmx.de>
	<468782CF.70102@gmx.de>	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>
Message-ID: <003e01c7bced$9fa1ca80$dee55f80$@com>

David:

> And it sucks that the only way to get compensated is to resort to
> selling closed copies that the reader is not free to reproduce. It's
> the opposite of open source, after all. But that's just how our
> society works. 

What society are you referring to?  Or perhaps the question should be, what
society in which country allows people to give away their work and still
eat?  Even in communist societies, people work and receive compensation.

There's nothing wrong with our society here in the U.S., if that's what
you're referring to.  Quite the opposite.  Our society allows people like
Ter the freedom to pursue their dreams and goals, and the freedom to decide
what to do with their time.  If someone chooses to write free software,
that's great, but there is nothing wrong with being compensated for one's
work.  There is nothing shameful or selfish in that whatsoever.  What's
shameful is making demands on someone who has already given generously to
the community, as if he hasn't done enough already.

> Again, I think it's a limitation of our laws/institutions, and you
> can't blame Ter for it.

This implies that some sort of blame exists.  Blame for what, writing a
book?  I hardly think Ter needs anyone's permission or approval to write a
book about a piece of software HE developed.  Anyone so motivated could
write their own book on Antlr and either sell it or give it away for free.

--
Don




From qwertie256 at gmail.com  Mon Jul  2 15:07:17 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 16:07:17 -0600
Subject: [antlr-interest] Philosophy of open source
Message-ID: <ce40b1470707021507x5483b5d5gc1f2ff832b42f1a6@mail.gmail.com>

> What society are you referring to?  Or perhaps the question should be, what
> society in which country allows people to give away their work and still
> eat?  Even in communist societies, people work and receive compensation.

I'm certainly not referring to communism (I don't like communism as
seen in the USSR, China, etc.) Indeed, there is no country I know of
where people can make intellectual works for a living without charging
for copies (or at least giving up their rights to a corporation that
sells/uses their work). And I would point out that treaties like the
Berne convention and TRIPS tend to prevent countries--even communist
countries--from differentiating their intellectual property laws from
those of the U.S.

It's not a state of affairs I'm happy with. Many people demonize file
sharing and freedom to copy, whereas I think freedom of information is
wonderful and I would prefer to find a way for society to pay those
whose works are copied.

> There's nothing wrong with our society here in the U.S., if that's what
> you're referring to.  Quite the opposite.  Our society allows people like
> Ter the freedom to pursue their dreams and goals, and the freedom to decide
> what to do with their time.  If someone chooses to write free software,
> that's great, but there is nothing wrong with being compensated for one's
> work.  There is nothing shameful or selfish in that whatsoever.  What's
> shameful is making demands on someone who has already given generously to
> the community, as if he hasn't done enough already.

I agree completely, except the first sentence. Do you really think
nothing whatsoever is wrong with society?

> This implies that some sort of blame exists.

No, it doesn't. If I were to say you are "not a crook", does that
"imply" that you are "some sort of crook"?

From scott at javadude.com  Mon Jul  2 15:31:04 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 2 Jul 2007 18:31:04 -0400 (EDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <20070702201220.D12F43C600F7@newmach.olivercomputing.com>
References: <20070702201220.D12F43C600F7@newmach.olivercomputing.com>
Message-ID: <50330.141.156.167.188.1183415464.squirrel@javadude.com>

Ter can do no wrong, eh? Fanboys... sheesh...

Quite simply, I am saying the following:

* I am _not_, nor did I, "demand" anything
* The basic docs of the tool are not free
* The tool isn't completely usable without the book
* Therefore, claiming ANTLR is open source is wrong

At the point I was writing the eclipse plugin for v3, I couldn't find the
info I needed for a few things anywhere *but* the book.

I didn't mind supporting Ter's work, so I bought the book.

I saw this thread and decided to add my 2c, in a very civil manner.
Ter jumped all over my ass, and the fanboys are spinning like crazy.

Why do I bother?
-- Scott



From scott at javadude.com  Mon Jul  2 15:57:39 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 2 Jul 2007 18:57:39 -0400 (EDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
Message-ID: <50427.141.156.167.188.1183417059.squirrel@javadude.com>

>> I'M SAYING THE ANTLR v3 LICENSE IS BS IF PEOPLE MUST PAY FOR THE BASIC
>> DOCS.
>>
>
> I think that the point is that you are NOT forced to buy the book, in
> the same way you are not forced to buy lots of books on PHP, Java or the
> dragon book (especially the latest edition) and so on.

Completely different. The Java Language Manual is free. It has all the
details of the language in it.

Books on Java either make it easier to learn the language or give
tips/tricks to use the language more effectively (or are supposed to --
many are crap).

The ANTLR v3 ref manual is only available in the book. You must buy it to
know the deets.

For example:
* How do I use scopes? Only in the book
* How do I use predicates? Only in the book (unless you look at v2 docs)

And the list goes on and on.

Ter says "be patient, the v2 docs weren't there at the start either."

But he's already written the content; he's just hiding it in the book.

-- Scott



 It contains a lot
> of information and some good crib sheets, and doesn't really cost very
> much, and whether there is a billion pages in the wiki just a month or
> so after release or not it still worth a read for the price of a few
> beers/Starbucks/movies.
>
> There isn't anything on the site that says you have to buy the book for
> the stuff to make any sense. And maybe for people that have some prior
> ANTLR experience, the wiki will eventually be just as good, if not
> better. However, the book is a single start point for people who don't
> yet know what the heck they should be looking up on the wiki.
>
> I think that you probably pushed buttons you were not expecting to, but
> nevertheless I think you may have to consider that you were a little
> over-zealous when claiming that the BSD license is BS for this product?
> Also, perhaps you might be able to excuse Ter from being a little wound
> up about the thread by the time you joined in?
>
> I don't think that Ter or anyone is actually offended by reasonable
> comments about how much documentation is available, on the wiki or
> anywhere. Everyone knows that it isn't all together yet and those people
> who have respectfully asked (which isn't too much to be asked of
> anyone?) about documentation usually receive sympathy and a
> reinforcement that it will get there.
>
> Perhaps now, we can end this thread and rather than post messages
> telling people what their posts should look like, we just need to
> establish a guideline that "one must be polite"(1).
>
> Jim
>
> (1) Unless you buy the book, which comes with a license to kill ;-)
>


From rschulz at sonic.net  Mon Jul  2 16:03:34 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 2 Jul 2007 16:03:34 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50330.141.156.167.188.1183415464.squirrel@javadude.com>
References: <20070702201220.D12F43C600F7@newmach.olivercomputing.com>
	<50330.141.156.167.188.1183415464.squirrel@javadude.com>
Message-ID: <200707021603.34877.rschulz@sonic.net>

On Monday 02 July 2007 15:31, scott at javadude.com wrote:
> Ter can do no wrong, eh? Fanboys... sheesh...

Well, I'd say that some of us, those whose appreciation outweighs our 
criticism by a large margin, are coming to his defense, so it does not 
end up seeming like a pure expression of his ego.

(Though he does deserve to be proud of the accomplishment. And he is 
clearly appreciative of the role the users have played in evolving the 
tool over many years. And he acknowledges that there is plenty of room 
for further improvement and continues the efforts in those directions.)

So I guess many of us (including, surely, many who are holding their 
tongues or who consider this whole thing an unwanted diversion) are 
feeling the need to defend this man and his work.


> Quite simply, I am saying the following:
>
> * I am _not_, nor did I, "demand" anything
> * The basic docs of the tool are not free

One element of the documentation, the book, is a commercial publication 
and not available free of charge. The rest, the Wiki and this forum 
(i.e., the active ANTLR user community), are free of charge, free to 
modify and extend, and open to all.


> * The tool isn't completely usable without the book

That's eminently debatable.


> * Therefore, claiming ANTLR is open source is wrong

You should be careful to distinguish free from open-source. The two are 
far from synonymous. Furthermore, the very word "free" (at least in 
English) is confusingly ambiguous and that ambiguity is quite apparent 
in the talk about free / open-source software.

<http://www.gnu.org/philosophy/free-software-for-freedom.html>. Those 
who subscribe to Stallman's views are seemingly few and you can find 
many other perspectives on the whole issue, of course, but this is an 
analysis from the person who, quite inadvertently, was instrumental in 
spurring the whole open-source movement into existence.


But one thing is beyond any reasonable debate: ANTLR is open-source. The 
rights holders (Terence ... and others?) could choose to publish this 
software with its source open and yet with a license to use it so 
restrictive that all anyone could actually do with it was study that 
source code. Clearly he (or they) have chosen to be much more generous 
than that.


> ...
>
> Why do I bother?

When you figure it out, perhaps you should tell us? Perhaps not. It's 
your call.


> -- Scott


Randall Schulz

From mark.mandel at gmail.com  Mon Jul  2 16:13:04 2007
From: mark.mandel at gmail.com (Mark Mandel)
Date: Tue, 3 Jul 2007 09:13:04 +1000
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50314.141.156.167.188.1183345017.squirrel@javadude.com>
References: <46878217.4090608@gmx.de> <468782CF.70102@gmx.de>
	<ce40b1470707010922k62fc4a32ye4fcd4b23f710aa4@mail.gmail.com>
	<A7000016-1647-4081-9EDB-6849B9D356E5@cs.usfca.edu>
	<50314.141.156.167.188.1183345017.squirrel@javadude.com>
Message-ID: <4153ee230707021613x22ca20e0o8cf221fb310fb223@mail.gmail.com>

I have to say, I only recently bought the book, and have been using
ANTLRv3 for about the last 6 months (I started somewhere in the beta
cycle)

Before that I had never had any experience with language parsing, and
all I had was the on-line docs and this mailing list.

Without the book, I feel like I am now quite proficient with ANTLR,
and really only recently bought it to round out my knowledge of this
tool, and to give something back to Terrence.

As an OSS author myself, I am actually very impressed with the amount
of documentation that was and is available with ANTLR. and also for
the speediness in which he will personally respond to questions on the
mailing list (which usually ends up in the wiki afterwards).

This may well be just my opinion, but since I was able to take myself
from nothing to something with v3, without the book, is a fair
testament to the time and effort Terrence has put into all aspects of
this project.

Mark

On 7/2/07, scott at javadude.com <scott at javadude.com> wrote:
> First -- I bought both books (and have contributed to ANTLR 2 and the
> eclipse plugins). I've used past versions of the tool (since early PCCTS
> releases), but had a lot of trouble figuring out v3 without the book.
>
> How is forcing someone to pay for the documentation any different than
> requiring a paid license for the tool? This is most definitely not in the
> spirit of open source.
>
> The book really feels like almost the same content that was free online
> for v2.
>
> A book shouldn't be the standard reference documentation -- it should be
> the nitty gritty details and tip and tricks of how to really use the tool
> properly.
>
>
> BTW: I'm updating my ANTLR tutorial (and I'm going to try to expand it
> further than the V2 one went.)
>
> Later,
> -- Scott
>
>
> > I get $3 measly dollars when you buy the book at amazon.  I want all
> > you whiners about the doc to either decide you can't use the tool
> > because it's not well documented enough or suck it up and start
> > helping out.  Most of the whiners are freeloaders....complaining, but
> > never having contributed themselves to open source or ANTLR before.
> > Bunch of ungrateful freeloaders...how dare you make these demands!
>
>


-- 
E: mark.mandel at gmail.com
W: www.compoundtheory.com

From oscarr at san.rr.com  Mon Jul  2 16:19:02 2007
From: oscarr at san.rr.com (Oscar Rodriguez)
Date: Mon, 02 Jul 2007 16:19:02 -0700
Subject: [antlr-interest] [v3] Lack of documentation
Message-ID: <468987E6.3010709@san.rr.com>

I suppose someone should point out the obvious. Open source means 
precisely that: open source code of the program being developed.

I don't know where anyone gets the idea that it means you don't ever 
have to spend money if you want to use it.

It simply means that developers all over the world can work on the 
application in question as opposed to closed source, where the developer 
gets to decide who looks at the source and who doesn't, who gets to help 
write more code and who doesn't.

The beauty of open source is that you can get many people, from all over 
the world, working on something cooperatively, without having to have a 
Microsoft sized bank roll to make it happen.

As far end users are concerned, open source should not be equated to 
anything at the user level. It is strictly a means of developing software.




From parrt at cs.usfca.edu  Mon Jul  2 16:25:33 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 16:25:33 -0700
Subject: [antlr-interest] apology to Scott was: [v3] Lack of documentation
In-Reply-To: <50330.141.156.167.188.1183415464.squirrel@javadude.com>
References: <20070702201220.D12F43C600F7@newmach.olivercomputing.com>
	<50330.141.156.167.188.1183415464.squirrel@javadude.com>
Message-ID: <64B83D25-4C15-458C-A246-9A64A4ABB6F1@cs.usfca.edu>


On Jul 2, 2007, at 3:31 PM, scott at javadude.com wrote:
> I saw this thread and decided to add my 2c, in a very civil manner.
> Ter jumped all over my ass,

I apologize for my response, Scott.  My buttons have been pushed via  
this thread plus I'm fighting a nasty sinus infection and jetlag from  
Aussie trip.

Ter

From qwertie256 at gmail.com  Mon Jul  2 16:38:13 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Mon, 2 Jul 2007 17:38:13 -0600
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <ce40b1470707021308i4217aebdl445f9d82ac113a96@mail.gmail.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
	<ce40b1470707021308i4217aebdl445f9d82ac113a96@mail.gmail.com>
Message-ID: <ce40b1470707021638r45e5c100gcc5dffdd87d0cda1@mail.gmail.com>

> I tried making a rule like this:
>
>    FOO : ('bar' ' '* ('\n' | '\r' | EOF))=> 'bar' ;
>
> But it doesn't work.
...
> My understanding of predicates (notes at <http://wincent.com/
> knowledge-base/ANTLR_predicates>) leads me to believe that this is
> failing because in ANTLR, syntactic predicates are used to order a
> rule's alternatives. They are not like gated semantic predicates
> which can be used to turn an entire rule off depending on context. It

Hmm, I realize I am very puzzled about something. If these predicates
aren't used for prediction, then what are they good for? A means to
reorder alternatives is not really needed--if the user wants to
reorder alternatives, he can simply do so. They get rid of warnings,
but this would be better accomplished with a special option (as was
available in v2).

IMO, this line really ought to work as you expected:

FOO : ('bar' ' '* ('\n' | '\r' | EOF))=> 'bar' ;

From antlr at olivercomputing.com  Mon Jul  2 16:43:59 2007
From: antlr at olivercomputing.com (Phil Oliver)
Date: Mon, 02 Jul 2007 19:43:59 -0400
Subject: [antlr-interest] [v3] Lack of documentation
Message-ID: <20070703011308.03AE63C600F7@newmach.olivercomputing.com>

Just to clarify (not that a basic grasp of English requires it), I am 
not a "fanboy". I was commenting on an important philosophic issue, 
and defending the general principle of individualism and 
trade-for-value. I have actually, unfortunately, stopped trying to 
get ANTLR v3 to work for my project, due largely to a number of 
unresolved bugs or at least too-mysterious problems, and am 
successfully using JavaCC instead, but I still read this list and was 
not going to let a sneering attitude towards making money go without comment.

ANTLR is open source as a matter of actual fact. There is no moral 
obligation on the author's part to give away his version of the 
manual. Anybody wishing to write independent documentation is free to 
do so. The last time I checked there were a host of different books 
on various open source programs, e.g. Linux, PostgreSQL, etc., and 
most of them cost money to acquire. If Mr. Parr is further enabled by 
sales of the book to spend time working on ANTLR, so much the better.





From win at wincent.com  Mon Jul  2 17:04:30 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 02:04:30 +0200
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <ce40b1470707021637o18c08b5ep78db90867334b473@mail.gmail.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
	<ce40b1470707021637o18c08b5ep78db90867334b473@mail.gmail.com>
Message-ID: <6F0B9A56-6BAC-4E46-BBE4-096F3CC33A5B@wincent.com>

El 3/7/2007, a las 1:37, David Piepgrass escribi?:

>> My understanding of predicates (notes at <http://wincent.com/
>> knowledge-base/ANTLR_predicates>) leads me to believe that this is
>> failing because in ANTLR, syntactic predicates are used to order a
>> rule's alternatives. They are not like gated semantic predicates
>> which can be used to turn an entire rule off depending on context. It
>
> Hmm, I realize I am very puzzled about something. If these predicates
> aren't used for prediction, then what are they good for? A means to
> reorder alternatives is not really needed--if the user wants to
> reorder alternatives, he can simply do so.

Nope, I don't think so. They are needed because, with a few  
exceptions, the order in which you specify alternatives *doesn't*  
actually have any impact on their precedence. One of the key uses of  
syntactic predicates (*the* key use?) is to resolve ambiguities by  
specifying which alternative should succeed. If you want the physical  
order in which alternatives appear in the grammar to be used to  
resolve ambiguities then you must set the "backtrack" to "true",  
either for that rule or for the whole grammar.

Once again, a more expert ANLTR user might be able to explain this a  
bit better than me...

Cheers,
Wincent


From gbr at newtechlaw.com  Mon Jul  2 17:19:34 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Mon, 02 Jul 2007 17:19:34 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50427.141.156.167.188.1183417059.squirrel@javadude.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
Message-ID: <200707030019.l630JZ5J001655@morpho.newtechlaw.com>

At 03:57 PM 7/2/2007, scott at javadude.com wrote:

>But he's already written the content; he's just hiding it in the book.

Finally!  Given the current state of affairs in this country and 
around the world, I for one very much look forward to Terence 
continuing (that is, beginning with the unholy "book") to work his 
pernicious deeds and insidious machinations to swiftly achieve world 
domination by defeating the Berne/capitalist/communist conspiracy, 
and forming a more perfect union of information publishing houses 
that pay the insider information elite more than $3 a copy.

You know this destiny to be true and inevitable.  Need you look any 
further than Terence's own picture so blatantly published on the 
antlr.org masthead.  Truly the face and antics of an evil genius if 
ever there was one.

Thanks, Scott, for injecting a bit of levity into the list.  BTW, I 
very much appreciate your documentation of some of the inner details 
of Java Bean Attributes and property editors.  I have made use of it 
many times over the years.  Always thought you could write a much 
more expansive and detailed Beans book than all of those I have 
bought over the years.  Seriously.

Best,
Gerald 



From rdclark at gmail.com  Mon Jul  2 17:31:37 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 2 Jul 2007 17:31:37 -0700
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
Message-ID: <d3992d900707021731p3f125a5cn34a8865960697fb0@mail.gmail.com>

On 7/2/07, Wincent Colaiuta <win at wincent.com> wrote:

> My understanding of predicates (notes at <http://wincent.com/
> knowledge-base/ANTLR_predicates>) leads me to believe that this is
> failing because in ANTLR, syntactic predicates are used to order a
> rule's alternatives.

Hi Wincent,

It took careful reading of all the available material, but here's what
I know about predicates in v3 (coming from an old hand at v2):

1. Syntactic predicates (of the form (FOO) => foo) are used to remove
the ambiguity among a set of rules. **If a static analysis shows no
ambiguity, the syntactic predicate's code is never generated.** These
may be "hoisted" out of the defining rule to wherever needed.

2. Semantic predicates ( {input.LA(1) == FOO} => foo ) are the same as
syntatic predicates except you get to specify arbitrary code. They too
won't be compiled in if there's no ambiguity in the grammar and may be
hoisted to where needed.

3. Gated semantic predicates ( { myHelper(); }? => foo ) are always
compiled in. They're normally used when outside forces change how the
grammar is handled (e.g. command line options.)

So when you write:
FOO : ('bar' ' '* ('\n' | '\r' | EOF))=> 'bar' ;
the rule isn't actually ambiguous ('bar' matches 'bar' and the first
lexer rule to match wins), so the predicate is unused.

You're right that you need a gated semantic predicate with some custom code:
FOO : { foo_helper(ctx) }?=> 'bar' ;

I was surprised you're doing this in the lexer. It seems that if the
token changes meaning depending on its position in the line, it's the
parser's job to determine such things. (In my opinion, your mileage
may vary, void where prohibited, etc. etc. etc.)

 ...Richard

From rdclark at gmail.com  Mon Jul  2 17:34:57 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 2 Jul 2007 17:34:57 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <200707030019.l630JZ5J001655@morpho.newtechlaw.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
	<200707030019.l630JZ5J001655@morpho.newtechlaw.com>
Message-ID: <d3992d900707021734j397d91dcp97dc46deed7ba124@mail.gmail.com>

On 7/2/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:

> I for one very much look forward to Terence
> continuing (that is, beginning with the unholy "book") to work his
> pernicious deeds and insidious machinations to swiftly achieve world
> domination

First he has to take over AT&T. They have the death star (logo) after all.

I welcome our new grammatically-correct overlords.

 ...R

From rdclark at gmail.com  Mon Jul  2 17:55:05 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 2 Jul 2007 17:55:05 -0700
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <d3992d900707021731p3f125a5cn34a8865960697fb0@mail.gmail.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
	<d3992d900707021731p3f125a5cn34a8865960697fb0@mail.gmail.com>
Message-ID: <d3992d900707021755o57b198e7q463f719db09f9812@mail.gmail.com>

BTW. the fate of predicates is a little ambiguous (so to speak). Page
318 of the ANTLR hymnal says this about semantic predicates:

> For efficiency reasons, ANTLR hoists predicates
> into DFAs only when LL(*) lookahead alone is
> insufficient to distinguish alternatives.

Yet on page 333:

> To be precise, manually specified syntactic
> predicates become gated semantic predicates.
> These syntactic predicates are always evaluated
> just like gated semantic predicates.
>
> On the other hand, syntactic predicates implicitly
> added by auto-back-tracking mode become regular
> semantic predicates. Such predicates are evaluated
> only when LL(*) fails to predict an alternative.

So, I believe my point #2 was wrong -- if you add it by hand (as you
did), it should always be evaluated.

Thus we have a mystery.

 ...Richard

P.S. to Ter -- my favorite MPW error message is "Too many errors on
one line (make fewer)" See
http://www.ralentz.com/old/mac/humor/mpw-c-errors.html

From rschulz at sonic.net  Mon Jul  2 18:08:38 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 2 Jul 2007 18:08:38 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <d3992d900707021734j397d91dcp97dc46deed7ba124@mail.gmail.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<200707030019.l630JZ5J001655@morpho.newtechlaw.com>
	<d3992d900707021734j397d91dcp97dc46deed7ba124@mail.gmail.com>
Message-ID: <200707021808.38720.rschulz@sonic.net>

On Monday 02 July 2007 17:34, Richard Clark wrote:
> On 7/2/07, Gerald B. Rosenberg <gbr at newtechlaw.com> wrote:
> > I for one very much look forward to Terence
> > continuing (that is, beginning with the unholy "book") to work his
> > pernicious deeds and insidious machinations to swiftly achieve
> > world domination
>
> First he has to take over AT&T. They have the death star (logo) after
> all.
>
> I welcome our new grammatically-correct overlords.

Well, since you welcome it, I'll correct you.

Adverbs modify both adjectives and verbs. Hence, hyphenating an adverb 
with an adjective is grammatically incorrect.

Hyphens are only used when one combines words to form a novel, compound 
adjectival phrase that modifies its noun as a single unit. For 
example, "my super-nifty program produced a grammar-corrected 
paraphrase of your sentence" (The correction being: "I welcome our new 
grammatically correct overlords.") Hyphens are used to distinguish 
separate and independent modification by multiple adjectives from a 
single, combined adjectival modifier. Thus "my super, nifty program" is 
a noun phrase with two independent modifiers of the noun "program." 
Said "program" is both "super" a "nifty." In contrast, "super-nifty 
program" is a program whose niftiness exceeds normalcy and must be 
explicitly characterized as superior to ordinary niftiness.

It is perhaps more obvious in the case of "grammar-corrected." Without 
the hyphen, the phrase, "grammar corrected paraphrase" is not even very 
meaningful. While "corrected paraphrase" is reasonably sensible and we 
can think of many sentences which might contain it, "grammar 
paraphrase" is a little more dubious.

And so on.


>  ...R


RRS

From jimi at temporal-wave.com  Mon Jul  2 18:11:26 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 18:11:26 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50427.141.156.167.188.1183417059.squirrel@javadude.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
Message-ID: <051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: scott at javadude.com [mailto:scott at javadude.com]
> Sent: Monday, July 02, 2007 3:58 PM
> To: Jim Idle
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] [v3] Lack of documentation
> 
> >> I'M SAYING THE ANTLR v3 LICENSE IS BS IF PEOPLE MUST PAY FOR THE
> BASIC
> >> DOCS.
> >>
> >
> > I think that the point is that you are NOT forced to buy the book,
in
> > the same way you are not forced to buy lots of books on PHP, Java or
> the
> > dragon book (especially the latest edition) and so on.
> 
> Completely different. The Java Language Manual is free. It has all the
> details of the language in it.

It is exactly the same - the wiki documentation is free and so is the
source code. The fact that there aren't an army of documentation bods to
fill in the wiki at the moment is because Sun aren't paying them. That
doesn't mean that somehow there is a conspiracy to prevent any free docs
until Ter has made his first million :-)

> The ANTLR v3 ref manual is only available in the book. You must buy it
> to
> know the deets.
> 
> For example:
> * How do I use scopes? Only in the book

Err... and in the example grammar project "DynamicScope" in the Java, C
and C# targets, where it says:

    scope 
    {
      /** name is visible to any rule called by method directly or
indirectly.
       *  There is also a stack of these names, one slot for each nested
       *  invocation of method.  If you have a method nested within
another
       *  method then you have name strings on the stack.  Referencing
       *  $method.name access the topmost always. 
       */

/** Demonstrate that 'name' is a dynamically-scoped attribute defined
 *  within rule method.  With lexical-scoping (variables go away at
 *  the end of the '}'), you'd have to pass the current method name
 *  down through all rules as a parameter.  Ick.  This is much much
better.
 */

And so on.

> * How do I use predicates? Only in the book (unless you look at v2
> docs)

A quick search of the archives of this list will show you, as will
typing antlr3 predicates into google. I can't really agree that this is
hidden. I can agree that it is a bit of a muddle right now, but then you
could help out here, as well as many others. The wiki is a good place
for this stuff.

> 
> But he's already written the content; he's just hiding it in the book.

No, that isn't true as google easily shows. If anything, Ter is trying
to make ANTLR3 more professional and accessible. If you think that the
book and the online docs are in the wrong order then fair enough, but it
is too much of a stretch to say that he is hiding it and somehow
ransoming you for a $3 profit. It WILL all turn up, but it IS early days
yet.

Anyway, that's enough from me on this subject.

Jim



From lgcraymer at yahoo.com  Mon Jul  2 18:58:26 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 2 Jul 2007 18:58:26 -0700 (PDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
Message-ID: <539905.32051.qm@web55913.mail.re3.yahoo.com>

Gee, if you guys have enough time and spare wetware
cycles to keep this thread going, why not spend some
of them in contributing to a manual.  Open source
translates roughly into "if you think something is
missing, we welcome your contributions to fixing that
particular defect".

--Loring

--- Jim Idle <jimi at temporal-wave.com> wrote:

> 
> 
> > -----Original Message-----
> > From: scott at javadude.com
> [mailto:scott at javadude.com]
> > Sent: Monday, July 02, 2007 3:58 PM
> > To: Jim Idle
> > Cc: ANTLR Interest
> > Subject: Re: [antlr-interest] [v3] Lack of
> documentation
> > 
> > >> I'M SAYING THE ANTLR v3 LICENSE IS BS IF PEOPLE
> MUST PAY FOR THE
> > BASIC
> > >> DOCS.
> > >>
> > >
> > > I think that the point is that you are NOT
> forced to buy the book,
> in
> > > the same way you are not forced to buy lots of
> books on PHP, Java or
> > the
> > > dragon book (especially the latest edition) and
> so on.
> > 
> > Completely different. The Java Language Manual is
> free. It has all the
> > details of the language in it.
> 
> It is exactly the same - the wiki documentation is
> free and so is the
> source code. The fact that there aren't an army of
> documentation bods to
> fill in the wiki at the moment is because Sun aren't
> paying them. That
> doesn't mean that somehow there is a conspiracy to
> prevent any free docs
> until Ter has made his first million :-)
> 
> > The ANTLR v3 ref manual is only available in the
> book. You must buy it
> > to
> > know the deets.
> > 
> > For example:
> > * How do I use scopes? Only in the book
> 
> Err... and in the example grammar project
> "DynamicScope" in the Java, C
> and C# targets, where it says:
> 
>     scope 
>     {
>       /** name is visible to any rule called by
> method directly or
> indirectly.
>        *  There is also a stack of these names, one
> slot for each nested
>        *  invocation of method.  If you have a
> method nested within
> another
>        *  method then you have name strings on the
> stack.  Referencing
>        *  $method.name access the topmost always. 
>        */
> 
> /** Demonstrate that 'name' is a dynamically-scoped
> attribute defined
>  *  within rule method.  With lexical-scoping
> (variables go away at
>  *  the end of the '}'), you'd have to pass the
> current method name
>  *  down through all rules as a parameter.  Ick. 
> This is much much
> better.
>  */
> 
> And so on.
> 
> > * How do I use predicates? Only in the book
> (unless you look at v2
> > docs)
> 
> A quick search of the archives of this list will
> show you, as will
> typing antlr3 predicates into google. I can't really
> agree that this is
> hidden. I can agree that it is a bit of a muddle
> right now, but then you
> could help out here, as well as many others. The
> wiki is a good place
> for this stuff.
> 
> > 
> > But he's already written the content; he's just
> hiding it in the book.
> 
> No, that isn't true as google easily shows. If
> anything, Ter is trying
> to make ANTLR3 more professional and accessible. If
> you think that the
> book and the online docs are in the wrong order then
> fair enough, but it
> is too much of a stretch to say that he is hiding it
> and somehow
> ransoming you for a $3 profit. It WILL all turn up,
> but it IS early days
> yet.
> 
> Anyway, that's enough from me on this subject.
> 
> Jim
> 
> 
> 



       
____________________________________________________________________________________
Sick sense of humor? Visit Yahoo! TV's 
Comedy with an Edge to see what's on, when. 
http://tv.yahoo.com/collections/222

From scott at javadude.com  Mon Jul  2 19:06:53 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 2 Jul 2007 22:06:53 -0400 (EDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <200707030019.l630JZ5J001655@morpho.newtechlaw.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
	<200707030019.l630JZ5J001655@morpho.newtechlaw.com>
Message-ID: <50262.141.156.167.188.1183428413.squirrel@javadude.com>

Congrats, Gerald. You left me confused and speechless ;)

-- Scott

> At 03:57 PM 7/2/2007, scott at javadude.com wrote:
>
>>But he's already written the content; he's just hiding it in the book.
>
> Finally!  Given the current state of affairs in this country and
> around the world, I for one very much look forward to Terence
> continuing (that is, beginning with the unholy "book") to work his
> pernicious deeds and insidious machinations to swiftly achieve world
> domination by defeating the Berne/capitalist/communist conspiracy,
> and forming a more perfect union of information publishing houses
> that pay the insider information elite more than $3 a copy.
>
> You know this destiny to be true and inevitable.  Need you look any
> further than Terence's own picture so blatantly published on the
> antlr.org masthead.  Truly the face and antics of an evil genius if
> ever there was one.
>
> Thanks, Scott, for injecting a bit of levity into the list.  BTW, I
> very much appreciate your documentation of some of the inner details
> of Java Bean Attributes and property editors.  I have made use of it
> many times over the years.  Always thought you could write a much
> more expansive and detailed Beans book than all of those I have
> bought over the years.  Seriously.
>
> Best,
> Gerald
>
>
>


From scott at javadude.com  Mon Jul  2 19:09:03 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 2 Jul 2007 22:09:03 -0400 (EDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <539905.32051.qm@web55913.mail.re3.yahoo.com>
References: <539905.32051.qm@web55913.mail.re3.yahoo.com>
Message-ID: <50268.141.156.167.188.1183428543.squirrel@javadude.com>

Nothing is missing; it's just in the wrong place.

That's enough from me. I'm tired and it's obvious this isn't going
anywhere with this group. Y'all just don't get it.

-- Scott

> Gee, if you guys have enough time and spare wetware
> cycles to keep this thread going, why not spend some
> of them in contributing to a manual.  Open source
> translates roughly into "if you think something is
> missing, we welcome your contributions to fixing that
> particular defect".


From csnowfox_antlr at 126.com  Mon Jul  2 19:14:56 2007
From: csnowfox_antlr at 126.com (csnowfox_antlr at 126.com)
Date: Tue, 3 Jul 2007 10:14:56 +0800 (CST)
Subject: [antlr-interest] question about 'while' logic
Message-ID: <4689B120.000023.27645@bj126app39.126.com>

But i can't find the enlighten from the example where in the download pag.
The examples only do the things that parser a language to another old language.
Do not have a example about parsering and executing a new language directly.
I want to implement the following logic in antlr:
a=5;
while(a>2){
      a=a-1;
}
print a;
the input file should be above,and the output file's content should be
2
the cycle logic has ran in the antlr's action,and the 'while' expr has do not only get get a 'wihle' string.
can anybody help me and give me a enlight to do that?


? ? ? ??? ? ? ? ? ??? ? ? ?  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070703/913815bf/attachment.html 

From scott at javadude.com  Mon Jul  2 19:17:26 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 2 Jul 2007 22:17:26 -0400 (EDT)
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
	<051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
Message-ID: <50302.141.156.167.188.1183429046.squirrel@javadude.com>

OK. My last on this thread...

These responses demonstrate my point. How does one even know these
features exist if they have to search to find them?

They're in the reference section of the book. Reading the book, I know the
features exist and at least the basics of how to use them.

There's no way online for someone new to see this.


Yes, "open source" means "the source is open". But the license says you
can use it for free. This currently isn't possible unless you happen to
have listened in during development or otherwise happen to know what's
available.


Enough.

-- Scott



>> The ANTLR v3 ref manual is only available in the book. You must buy it
>> to
>> know the deets.
>>
>> For example:
>> * How do I use scopes? Only in the book
>
> Err... and in the example grammar project "DynamicScope" in the Java, C
> and C# targets, where it says:

>> * How do I use predicates? Only in the book (unless you look at v2>> docs)
>
> A quick search of the archives of this list will show you [...]

From jimi at temporal-wave.com  Mon Jul  2 19:21:45 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 19:21:45 -0700
Subject: [antlr-interest] Help with FishEye
In-Reply-To: <A0C63960-156F-4A41-973E-50C406DF095F@apple.com>
References: <A0C63960-156F-4A41-973E-50C406DF095F@apple.com>
Message-ID: <051466DAA0D608439E196797955018D76E89@wavemachine.temporal-wave.com>

Echoing others, it all works perfectly for me L. Sorry you are having
problems. If you click the download arrow then you get the tgz (or at
least I do). I am using IE7, which for many people would mean it is
doomed to fail although IE7 works perfectly for me. Maybe try right
click and download target? Maybe it is your browser? Safari?

 

I think that the Cenqua guys would also like to know why it isn't
working for you as this is a commercial product, so provide them
feedback! J

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Cameron Esfahani
Sent: Monday, July 02, 2007 1:14 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Help with FishEye

 

Can someone please explain to me how FishEye is supposed to work?

 

I'm trying to download Jim Idle's latest C runtime from June 27th.

 

On http://fisheye2.cenqua.com/browse/antlr, I can see change revision
3851.

 

But if I click on the runtime/C/dist/libantlr3c-3.0.1.tar.gz URL
underneath the comment, I don't get a useful download.  I get 6K HTML
file.

 

If I click on the little blue down arrow, then I get a big file, but it
isn't actually a tar file.  I can't identify what it is.

 

I've been very frustrated with FishEye.  It's very...pretty.  But as far
as a mechanism for downloading files, it leaves me very frustrated.

 

Cameron Esfahani

dirty at apple.com

 

"There are times in the life of a nation when the only place a decent
man can find himself is in prison."

 





 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070702/9a07a65a/attachment.html 

From jimi at temporal-wave.com  Mon Jul  2 19:25:06 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 Jul 2007 19:25:06 -0700
Subject: [antlr-interest] Infinite lexer exception allocation loop in
	Ctarget C parser, antlr3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F031@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F031@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76E8A@wavemachine.temporal-wave.com>

I t sounds like an issue with the grammar that exposes an issue in the
runtime, though something tells me that this may be related to an
extremely recent change to deal with something related. 

Thanks for pointing this out - I will endeavor to fix this tomorrow or
at least provide an answer/work around (which might be to allow \x
sequences ;-).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hardy, Stephen
> Sent: Monday, July 02, 2007 1:31 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Infinite lexer exception allocation loop in
> Ctarget C parser, antlr3.0
> 
> Hi all,
> I'm tasked with some C-to-C translation, and have been using the ANSI
C
> grammar with the C target as a starting point, with antlr3.0.
> 
> The grammar inadvertently omits the possibility of using \x (hex)
> escapes in a literal string, and this causes an infinite memory
> allocation loop when the parser is run against tokens such as
> "\x00\x00".  The offending sequence of code is in mSTRING_LITERAL(),
> which calls mEscapeSequence(), which in turn allocates an exception
> struct (CONSTRUCTEX()) when it fails to understand the \x.
> Unfortunately, the calling code is a for(;;) loop which does not
> advance
> the token stream, hence the lexer will allocate forever.
> 
> Sorry I'm really new to this, so it may be my fault, but it looks like
> it may be a C target problem.  Didn't see any similar problem
mentioned
> in the most recent archive.
> 
> Regards,
> SJH

From parrt at cs.usfca.edu  Mon Jul  2 19:36:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 2 Jul 2007 19:36:12 -0700
Subject: [antlr-interest] Check out TreeWizard
Message-ID: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>

howdy,

Added an entry to my "blog" (which has moved to the wiki):

http://www.antlr.org/wiki/display/~admin/2007/07/02/Exploring+Concept 
+of+TreeWizard
After talking with Don Bradshaw at http://www.quipoz.com in Sydney  
and after trying to convert ANTLR v3's grammar (written in v2) into  
v3, I decided to build TreeWizard. You can create, navigate, and  
match trees very easily using tree patterns that are like interpreted  
ANTLR patterns (er...well, they pretty much are).  If people find it  
useful etc..., it will make it's way into ANTLR after we've groomed  
it etc...  Please try it out and let me know if it's useful for ya...  
It's pretty damn cool.  The following executes a method in action  
object for every subtree that matches the indicated pattern.

atreewizard.visit(t, "(VARDECL %type:. %id:ID)", mylistener);

'.' (dot) is the wildcard; type and id are labels that appear in a  
hashtable for the mylistener's visit() method to chew on.

All the code is attached to the wiki page.

Ter

From scott at javadude.com  Mon Jul  2 19:39:43 2007
From: scott at javadude.com (scott at javadude.com)
Date: Mon, 2 Jul 2007 22:39:43 -0400 (EDT)
Subject: [antlr-interest] apology to Scott was: [v3] Lack of
 documentation
In-Reply-To: <64B83D25-4C15-458C-A246-9A64A4ABB6F1@cs.usfca.edu>
References: <20070702201220.D12F43C600F7@newmach.olivercomputing.com>
	<50330.141.156.167.188.1183415464.squirrel@javadude.com>
	<64B83D25-4C15-458C-A246-9A64A4ABB6F1@cs.usfca.edu>
Message-ID: <50340.141.156.167.188.1183430383.squirrel@javadude.com>

Thanks, and I'll accept the apology.

There was no call for your initial response in the thread, either, Ter,
and I think you owe the folks you responded to an apology as well.

I'm not at all happy the way this thread went. And it reminds me of some
of the old threads in this group. There's a core group of know-it-alls and
fanboys that give anyone who disagrees a hard time.

I'm almost at the point of saying "screw it" and stop contributing
anything to the ANTLR community. I can just write tools/plugins for
myself. It would be a helluva lot easier than making them generic enough
for general use; it just doesn't seem worth it.

Y'all have to realize that not everyone who wants to use ANTLR is "in the
know". I've been out of the "inner circle" for quite a while, just
recently rejoining the mailing list after I released the new eclipse
plugin.

The way y'all respond will really alienate newbies. It'll make people who
don't already know ANTLR feel inferior and unwelcome, and that their
opinions don't matter.

AND, when you've got people who already like the tool, and just try to
help explain other points of view, don't cruicify them. It leaves them
really wanting to jump ship. I already have my life jacket on.


That's pretty f'd up if the users of a good tool can make folks not want
to use that tool just b/c of their attitudes.


Parsing can be very scary to "get" in itself. Please try to be a little
more accepting of different opinions and realize that your opinions are
*very* biased b/c you're so close to the tool. Try to put yourself in the
shoes of someone new.

-- Scott

> On Jul 2, 2007, at 3:31 PM, scott at javadude.com wrote:
>> I saw this thread and decided to add my 2c, in a very civil manner.
>> Ter jumped all over my ass,
>
> I apologize for my response, Scott.  My buttons have been pushed via
> this thread plus I'm fighting a nasty sinus infection and jetlag from
> Aussie trip.
>
> Ter
>


From rschulz at sonic.net  Mon Jul  2 20:39:43 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 2 Jul 2007 20:39:43 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50302.141.156.167.188.1183429046.squirrel@javadude.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
	<50302.141.156.167.188.1183429046.squirrel@javadude.com>
Message-ID: <200707022039.43711.rschulz@sonic.net>

On Monday 02 July 2007 19:17, scott at javadude.com wrote:
> OK. My last on this thread...
>
> These responses demonstrate my point. How does one even know these
> features exist if they have to search to find them?
>
> They're in the reference section of the book. Reading the book, I
> know the features exist and at least the basics of how to use them.
>
> There's no way online for someone new to see this.
>
>
> Yes, "open source" means "the source is open". But the license says
> you can use it for free. This currently isn't possible unless you
> happen to have listened in during development or otherwise happen to
> know what's available.
>
>
> Enough.

Yes. Enough of your sophistry. ANTLR's existence puts everyone with the 
need for language processing at an advantage.

If the $price$ is twenty or thirty dollars to take the fullest advantage 
of that otherwise freely granted resource, one cannot possibly 
complain, unless one is deranged and cannot see the extraordinary value 
it represents.

As I said, were this a commercial product, you'd not even be able to use 
it without an outlay of hundreds of dollars. Complaining is d?class?, 
to say the very least.


> -- Scott


Ciao, dude.


RRS

From aldo.bucchi at gmail.com  Mon Jul  2 22:58:03 2007
From: aldo.bucchi at gmail.com (Aldo Bucchi)
Date: Mon, 2 Jul 2007 22:58:03 -0700
Subject: [antlr-interest] New Target development; ActionScript3; Need Advice
Message-ID: <7a4ebe1d0707022258q199a5ecax5ffdee60b5df1a2@mail.gmail.com>

HI all,

I find myself in the need of bulding an AS3 parser to power a
roundtrip code editor with syntax highlighting, auto completion,
etc....
I have basic experience with parser generation but building a target
is definitely over my head for now.... I would really appreciate some
guidance in the following points:

* Is antlr the correct choice for this task??
** That is: Grammar ---generate once---> AS3 Parser ----parse----> AST
** Any other simpler recommendations??
* Has anyone setup a comfortable environment for this process in
Eclipse? ( I will be building the runtime classes in eclipse so it
makes sense to have everything at hand... hopefully with some ant
tasks to ease testing )
* Does anyone have a simpler Target to base mine on?? ( Java has too
many dependencies and is too specific )
** Even though both Java and ActionScript3 share some commonalities in
terms of structure

I already read the article in the wiki but its a steep learning curve
. Any help appreciated.

BTW: Can I use a different target while generating code from within ANTLRWorks?

Thanks,
Aldo

-- 
::::: Aldo Bucchi :::::
mobile +1 858 539 6986

From vbar at comp.cz  Mon Jul  2 23:58:44 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 03 Jul 2007 08:58:44 +0200
Subject: [antlr-interest] Rule-local variables?
Message-ID: <4689F3A4.5050507@comp.cz>

Hi,

skimming http://www.antlr.org/works/help/tutorial/calculator.html, I've 
noticed ANTLR rules can be declared to return a value, which can be set 
in the rule's actions, often from results produced by lower-level rules 
- say

whereClause returns [ IExpression value ] :
	WHERE c = searchCondition { $value = $c.value; }
	;

That works, but I'd also like to have conditions depending on how ANTLR 
got to a rule and its action. Negation is a typical example:

predicate returns [ IExpression value ] :
	( NOT { (A) } )?
		( LIKE ... { (B) }
		| e = expression { (C) }
		)
	;

How do I know in (B) and (C) that I've passed through (A) (and therefore 
have to generate a NOT LIKE operator and a negated expression)? I can do

predicate returns [ IExpression value ] :
	NOT {
		$value = new Expression();
		((Expression)$value).Operator = ExpressionOperator.Not;
	} ( LIKE ... { if ($value == null) ... else ... }
		| e = expression { if ($value == null) ... else ... }
		)
	;

but in more complicated cases, when nested branches store their internal 
state into the same variable, it gets confusing and ugly pretty fast - 
so I'd like to have a local flag meaning "this expression has been 
negated" and nothing else. How can I do that in ANTLR?

	Bye
		Vasek



From win at wincent.com  Tue Jul  3 00:52:52 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 09:52:52 +0200
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <d3992d900707021731p3f125a5cn34a8865960697fb0@mail.gmail.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
	<d3992d900707021731p3f125a5cn34a8865960697fb0@mail.gmail.com>
Message-ID: <F256C620-85FC-424C-B8A9-6F81C5975179@wincent.com>

El 3/7/2007, a las 2:31, Richard Clark escribi?:

> It took careful reading of all the available material, but here's what
> I know about predicates in v3 (coming from an old hand at v2):
>
> 1. Syntactic predicates (of the form (FOO) => foo) are used to remove
> the ambiguity among a set of rules. **If a static analysis shows no
> ambiguity, the syntactic predicate's code is never generated.** These
> may be "hoisted" out of the defining rule to wherever needed.
>
> 2. Semantic predicates ( {input.LA(1) == FOO} => foo ) are the same as
> syntatic predicates except you get to specify arbitrary code. They too
> won't be compiled in if there's no ambiguity in the grammar and may be
> hoisted to where needed.
>
> 3. Gated semantic predicates ( { myHelper(); }? => foo ) are always
> compiled in. They're normally used when outside forces change how the
> grammar is handled (e.g. command line options.)

Your comments on 1 and 2 match my understanding. I didn't actually  
know that flavor 2 of semantic predicates existed! That is, I only  
knew about these forms:

Syntactic predicate: (foo)=> bar

Validating semantic predicate: foo {bar}?

Gated semantic predicate: {foo}?=> bar

Disambiguating semantic predicate {foo}? bar

> I was surprised you're doing this in the lexer. It seems that if the
> token changes meaning depending on its position in the line, it's the
> parser's job to determine such things. (In my opinion, your mileage
> may vary, void where prohibited, etc. etc. etc.)

The impression I've gotten on the list is that "the ANTLR way" is to  
generally keep the lexer as simple as possible and do as much work in  
the parser. In this case, however, I'm using a filtering lexer to  
process wikitext and there are some symbols which only have special  
meaning at certain places on the line (basically, first thing or last  
thing on the line). For example, a level-2 heading looks like this:

== foo ==

In this particular case it seems much simpler to let the lexer handle  
this than the parser (which I am writing by hand because for this  
language, it seems that ANTLR isn't the right tool for the job);  
basically, I don't want the parser to have to care about whitespace  
and position on the line etc: it just acts as a simple translator  
acting on a stream of tokens. That way I can have input like the  
following:

== Does foo == bar? ==

And the lexer will do the right thing, tokenizing this as H2_START,  
CHARS, H2_END. The parser duly transforms this to:

<h2>Does foo == bar?</h2>

El 3/7/2007, a las 2:55, Richard Clark escribi?:
> BTW. the fate of predicates is a little ambiguous (so to speak). Page
> 318 of the ANTLR hymnal says this about semantic predicates:
>
>> For efficiency reasons, ANTLR hoists predicates
>> into DFAs only when LL(*) lookahead alone is
>> insufficient to distinguish alternatives.
>
> Yet on page 333:
>
>> To be precise, manually specified syntactic
>> predicates become gated semantic predicates.
>> These syntactic predicates are always evaluated
>> just like gated semantic predicates.
>>
>> On the other hand, syntactic predicates implicitly
>> added by auto-back-tracking mode become regular
>> semantic predicates. Such predicates are evaluated
>> only when LL(*) fails to predict an alternative.
>
> So, I believe my point #2 was wrong -- if you add it by hand (as you
> did), it should always be evaluated.
>
> Thus we have a mystery.

Well, to clarify, it's not that it isn't being evaluated; looking at  
the generated code I can see it isn't even being generated! For  
example, look at the following rules:

   fragment H6     : '======' ;
   H6_END          : (H6 ' '* ( '\n' | '\r' | EOF))=> H6 ;

The intention is to match "======" as H6_END only if it is the last  
non-whitespace thing on the line.

This is a snippet of the generated mTokens() function; you can see  
that if a "=" is seen then a syntactic predicate is checked to see  
whether or not our rule should be matched:

   if ((LA19_0 == '='))
   {
       {
           int LA19_7 = LA(2);
           if ( (synpred20(ctx)) )
           {
               alt19=18; // It is I
           }


The first thing to note is that the LA19_7 variable which is  
initialized with LA(2) is never referenced after initialization. The  
other thing to note is how the syntactic predicate gets generated:

static ANTLR3_BOOLEAN synpred20(pWikiTextLexer ctx)
{
     ANTLR3_UINT64   start;
     ANTLR3_BOOLEAN  success;

     BACKTRACKING++;
     start	= MARK();
     synpred20_fragment(ctx);	    // can never throw exception
     success	= !(FAILEDFLAG);
     REWIND(start);
     BACKTRACKING--;
     FAILEDFLAG	= ANTLR3_FALSE;
     return success;
}

This in turn calls the corresponding fragment function:

static void synpred20_fragment(pWikiTextLexer ctx )
{
     {
         mH6_END(ctx );
         if (HASFAILED())
         {
             return ;
         }
     }

     goto rulesynpred20Ex; /* Prevent compiler warnings */
     rulesynpred20Ex: ;
}

So this predicate effectively does the following:

- Asks, can I match FOO?
- Try matching FOO
- If succeeds, says, Yes, you can match FOO: proceeds to match FOO  
all over again

I am not actually sure why ANTLR is doing this as it doesn't seem  
very efficient; looking at the mTokens() function almost every single  
prediction employs the same pattern, and only the last alternative in  
each group doesn't use a predicate.

Then, looking at the generated mH6_END method you can see that the  
the actual contents of the syntactic predicate as specified in the  
grammar don't make it into the generated code there either:

static ANTLR3_INLINE
void mH6_END(pWikiTextLexer ctx)
{
     ANTLR3_UINT32 _type;
     _type = H6_END;

     // WikiText.g:69:19: ( ( H6 ( ' ' )* ( '\\n' | '\\r' | EOF ) )=>  
H6 )
     // WikiText.g:69:19: ( H6 ( ' ' )* ( '\\n' | '\\r' | EOF ) )=> H6
     {
         /* 69:19: ( H6 ( ' ' )* ( '\\n' | '\\r' | EOF ) )=> H6 */
         mH6(ctx );
         if (HASFAILED())
         {
             return;
         }
     }
     LEXER->type = _type;

     goto ruleH6_ENDEx; /* Prevent compiler warnings */
     ruleH6_ENDEx: ;
}

Out of interest, I tried altering the grammar in a number of ways to  
see if the desired syntactic predicate code was ever generated:

- I tried using a string literal rather than a fragment rule: no  
difference.

- I tried adding an arbitrary alternative to the rule: at last the  
syntactic predicate got generated and add to the mH6_END function; so  
this confirms the hypothesis that syntactic predicates are ignored in  
rules which don't have multiple alternatives.

- I tried turning filtering off: the prediction logic in the mTokens  
method was different, but the syntactic predicate was still not  
generated.

In any case, I went ahead and used the alternative proposed by Jim  
Idle in another post on this thread:

   H6_END : H6 { MARK(); } ' '* ( '\n' | '\r' | EOF ) { REWINDLAST 
(); } ;

It seems the cleanest, most reusable solution.

Cheers,
Wincent


From win at wincent.com  Tue Jul  3 01:18:43 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 10:18:43 +0200
Subject: [antlr-interest] Help with FishEye
In-Reply-To: <051466DAA0D608439E196797955018D76E89@wavemachine.temporal-wave.com>
References: <A0C63960-156F-4A41-973E-50C406DF095F@apple.com>
	<051466DAA0D608439E196797955018D76E89@wavemachine.temporal-wave.com>
Message-ID: <269D4515-FE2E-4D92-A7B1-9F95EEF73089@wincent.com>

El 3/7/2007, a las 4:21, Jim Idle escribi?:

> Echoing others, it all works perfectly for me L. Sorry you are having
> problems. If you click the download arrow then you get the tgz (or at
> least I do).

I've had problems on occasions downloading tarballs from FishEye. I  
don't know whether it's just when they're under heavy load but  
sometimes the downloads get truncated. Unfortunately, this is a  
silent failure, the download simply stops, because the server doesn't  
include a content-length header (see example headers below) and so  
the downloading client has no way of knowing that the download was  
incomplete; it only knows that the connection closed.

$ curl -i http://fisheye2.cenqua.com/browse/~tarball=tbz2/antlr/ 
antlr.tbz2

HTTP/1.1 200 OK
Date: Tue, 03 Jul 2007 08:01:29 GMT
Server: Jetty(6.1.2rc1)
Last-Modified: Thu, 28 Jun 2007 23:44:54 GMT
Content-Type: application/x-bzip2
Content-Disposition: attachment; filename=tarball.tbz2
Via: 1.1 fisheye2.cenqua.com
Connection: close
Transfer-Encoding: chunked

The only way to know that you've got a partial download is when your  
attempt to extract the archive fails with an error.

To address this problem I download using wget combined with the -c/-- 
continue switch; if the archive doesn't extract then I just wget to  
try again until it works.

A much more serious issue, however, is that even when you apparently  
get the entire archive, sometimes there are files missing from it!  
About a week ago (r3839) when Jim pushed bunch of updates to the C  
target I tried to grab the tarball and discovered that some of the  
updated files weren't in the archive. My solution was to download the  
individual files from FishEye rather than a tarball, and copy them  
into the right spots in the ANTLR 3.0 source tree. From memory, the  
files that Jim updated were:

C.stg
AST.stg
CTarget.java

So I just copied over those manually. I just tried to reproduce the  
problem now (r3852) and it looks like it is still an issue:

$ wget -c "http://fisheye2.cenqua.com/browse/~tarball=tbz2/antlr/ 
antlr.tbz2"
--10:07:34--  http://fisheye2.cenqua.com/browse/~tarball=tbz2/antlr/ 
antlr.tbz2
            => `antlr.tbz2'
Resolving fisheye2.cenqua.com... 63.246.7.20
Connecting to fisheye2.cenqua.com|63.246.7.20|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [application/x-bzip2]

100% 
[======================================================================= 
=================>] 1,670,384     14.60K/s    ETA 00:00

10:14:29 (4.26 KB/s) - `antlr.tbz2' saved [1670384]

Note the size of the downloaded archive. It extracts without errors,  
but look at the entire contents of the codegen subdirectory... where  
are the C target templates?

src/org/antlr/codegen/ACyclicDFACodeGenerator.java
src/org/antlr/codegen/ActionTranslator.g
src/org/antlr/codegen/ActionTranslatorLexer.java
src/org/antlr/codegen/CPPTarget.java
src/org/antlr/codegen/CSharpTarget.java
src/org/antlr/codegen/CTarget.java
src/org/antlr/codegen/CodeGenerator.java
src/org/antlr/codegen/JavaTarget.java
src/org/antlr/codegen/ObjCTarget.java
src/org/antlr/codegen/PythonTarget.java
src/org/antlr/codegen/RubyTarget.java
src/org/antlr/codegen/Target.java
src/org/antlr/codegen/codegen.g
src/org/antlr/codegen/templates/ANTLRCore.sti
src/org/antlr/codegen/templates/CPP/CPP.stg
src/org/antlr/codegen/templates/CSharp/AST.stg
src/org/antlr/codegen/templates/CSharp/ASTDbg.stg
src/org/antlr/codegen/templates/CSharp/CSharp.stg
src/org/antlr/codegen/templates/CSharp/Dbg.stg
src/org/antlr/codegen/templates/CSharp/ST.stg
src/org/antlr/codegen/templates/Java/AST.stg
src/org/antlr/codegen/templates/Java/ASTDbg.stg
src/org/antlr/codegen/templates/Java/Dbg.stg
src/org/antlr/codegen/templates/Java/Java.stg
src/org/antlr/codegen/templates/Java/ST.stg
src/org/antlr/codegen/templates/ObjC/AST.stg
src/org/antlr/codegen/templates/ObjC/ASTDbg.stg
src/org/antlr/codegen/templates/ObjC/Dbg.stg
src/org/antlr/codegen/templates/ObjC/ObjC.stg
src/org/antlr/codegen/templates/Python/AST.stg
src/org/antlr/codegen/templates/Python/Python.stg
src/org/antlr/codegen/templates/Ruby/Ruby.stg

According to the FishEye web interface there should be there:

<http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
templates/C>

But they're not in the archive...

> I am using IE7, which for many people would mean it is
> doomed to fail although IE7 works perfectly for me. Maybe try right
> click and download target? Maybe it is your browser? Safari?
>
>
>
> I think that the Cenqua guys would also like to know why it isn't
> working for you as this is a commercial product, so provide them
> feedback! J

CC'ing the FishEye support email address on this post as they  
probably need to know about this thread. For reference, the online  
archive of the thread is at:

   <http://www.antlr.org/pipermail/antlr-interest/2007-July/ 
021981.html>

Cheers,
Wincent


From antlr at mirality.co.nz  Tue Jul  3 01:36:35 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 03 Jul 2007 20:36:35 +1200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <200707021808.38720.rschulz@sonic.net>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<200707030019.l630JZ5J001655@morpho.newtechlaw.com>
	<d3992d900707021734j397d91dcp97dc46deed7ba124@mail.gmail.com>
	<200707021808.38720.rschulz@sonic.net>
Message-ID: <20070703083642.A017B11EAEC@www.antlr.org>

At 13:08 3/07/2007, Randall R Schulz wrote:
 >Said "program" is both "super" a "nifty." In contrast,
 >"super-nifty program" is a program whose niftiness
 >exceeds normalcy and must be explicitly characterized as
 >superior to ordinary niftiness.

This is my new favourite sentence.  For now :)

(Ok, technically it's two sentences.  Sue me.)


From antlr at mirality.co.nz  Tue Jul  3 01:39:35 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 03 Jul 2007 20:39:35 +1200
Subject: [antlr-interest] Rule-local variables?
In-Reply-To: <4689F3A4.5050507@comp.cz>
References: <4689F3A4.5050507@comp.cz>
Message-ID: <20070703083944.30C5A11EAEC@www.antlr.org>

At 18:58 3/07/2007, Vaclav Barta wrote:
 >That works, but I'd also like to have conditions depending on 
how
 >ANTLR got to a rule and its action. Negation is a typical 
example:
[...]
 >How do I know in (B) and (C) that I've passed through (A) (and
 >therefore have to generate a NOT LIKE operator and a negated
 >expression)?

Probably the easiest way is to declare a local boolean variable 
initialised to false at the top of your rule, and then set it to 
true if the NOT clause gets matched.  Then you can test that 
boolean later on.

For most targets you can do this with @init blocks -- for C I 
think you need a @declarations block too.  Alternatively, if you 
want the variable to be accessible outside the rule itself, then 
you can use scopes.


From jaluber at gmx.de  Tue Jul  3 01:51:33 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 10:51:33 +0200
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
Message-ID: <468A0E15.9020508@gmx.de>

Terence Parr wrote:
> howdy,
> 
> Added an entry to my "blog" (which has moved to the wiki):
> 
> http://www.antlr.org/wiki/display/~admin/2007/07/02/Exploring+Concept+of+TreeWizard
> 
> After talking with Don Bradshaw at http://www.quipoz.com in Sydney and
> after trying to convert ANTLR v3's grammar (written in v2) into v3, I
> decided to build TreeWizard. You can create, navigate, and match trees
> very easily using tree patterns that are like interpreted ANTLR patterns
> (er...well, they pretty much are).  If people find it useful etc..., it
> will make it's way into ANTLR after we've groomed it etc...  Please try
> it out and let me know if it's useful for ya... It's pretty damn cool. 
> The following executes a method in action object for every subtree that
> matches the indicated pattern.
> 
> atreewizard.visit(t, "(VARDECL %type:. %id:ID)", mylistener);
> 
> '.' (dot) is the wildcard; type and id are labels that appear in a
> hashtable for the mylistener's visit() method to chew on.
> 
> All the code is attached to the wiki page.
> 
> Ter
> 

If I see it correctly, your link points to an admin page. Unless you
want to give us your password the wiki page is inaccessible, as a quick
search after "tree wizard" confirmed it.

Best regards,
Johannes Luber

From win at wincent.com  Tue Jul  3 02:00:59 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 11:00:59 +0200
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <468A0E15.9020508@gmx.de>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
	<468A0E15.9020508@gmx.de>
Message-ID: <A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com>

El 3/7/2007, a las 10:51, Johannes Luber escribi?:

> Terence Parr wrote:
>> howdy,
>>
>> Added an entry to my "blog" (which has moved to the wiki):
>>
>> http://www.antlr.org/wiki/display/~admin/2007/07/02/Exploring 
>> +Concept+of+TreeWizard
>>
> If I see it correctly, your link points to an admin page. Unless you
> want to give us your password the wiki page is inaccessible, as a  
> quick
> search after "tree wizard" confirmed it.

I was able to see it, but only when logged in (as a normal user, not  
as an admin).

Wincent


From vbar at comp.cz  Tue Jul  3 02:55:24 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 03 Jul 2007 11:55:24 +0200
Subject: [antlr-interest] Rule-local variables?
In-Reply-To: <200707030839.l638diu1022052@vega.inec.cz>
References: <4689F3A4.5050507@comp.cz>
	<200707030839.l638diu1022052@vega.inec.cz>
Message-ID: <468A1D0C.1040301@comp.cz>

Gavin Lambert wrote:
> At 18:58 3/07/2007, Vaclav Barta wrote:
>  >That works, but I'd also like to have conditions depending on how
>  >ANTLR got to a rule and its action. Negation is a typical example:
> [...]
>  >How do I know in (B) and (C) that I've passed through (A) (and
>  >therefore have to generate a NOT LIKE operator and a negated
>  >expression)?
> Probably the easiest way is to declare a local boolean variable 
> initialised to false at the top of your rule, and then set it to true if 
> the NOT clause gets matched.  Then you can test that boolean later on.
> 
> For most targets you can do this with @init blocks -- for C I think you 
Yes, much better - thanks.

> need a @declarations block too.  Alternatively, if you want the variable 
> to be accessible outside the rule itself, then you can use scopes.
Well, I certainly don't want recursive rules using a single variable, 
and considering I also have no idea what an ANTLR scope is, I think I'll 
go with a local variable in an @init block...

	Bye
		Vasek


From win at wincent.com  Tue Jul  3 02:52:59 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 11:52:59 +0200
Subject: [antlr-interest] Bug in C output (may after other targets as well)
Message-ID: <39FB4984-B500-4B9C-A096-5D328E1C1A85@wincent.com>

I think I've just discovered a bug in the C output; nothing major,  
just some missing parentheses. A quick glance reveals that they are  
also missing from the Java output templates, which means they are  
probably missing from the others as well...

Given a rule like this:

   BLOCKQUOTE : { COLUMN == 0 || LAST_TOKEN == BLOCKQUOTE }?=> '>' '  
'? ;

ANTLR generates a prediction condition like this:

   if ( (( synpred13(ctx) &&  COLUMN == 0 || LAST_TOKEN ==  
BLOCKQUOTE  )) )

Here the purpose of synpred13() is to check if the blockquote rule  
would succeed at this point.

Due to C operator precedence, there is a chance that this prediction  
could incorrectly evaluate to true. To make it totally clear:

   if (synpred && A || B)

Can evaluate to true even if synpred is false; this will happen  
whenever B is true. This is because && has a higher precendence than  
|| in C. The above is really equivalent to:

   if ((synpred && A) || B)

But to match the clear intent of the rule in the grammar we would need:

   if (synpred && (A || B))

So it seems that the C output template needs additional brackets  
around semantic predicates to guarantee that whatever is in the  
predicate will be evaluated as a single logical unit, regardless of  
the precedence of whatever operators may be inside it.

As a workaround, I can rewrite my predicates as follows:

   FOO: { (A || B) }?=> 'bar' ;

As I said above, I'm not sure if the right place to fix this is in  
the C output template. I've looked in there and I can't really see  
where this construct is defined (don't really know enough about  
StringTemplate)... I can see the following:

   // D F A  E X P R E S S I O N S

   andPredicates(left,right) ::= "( <left> && <right> )"

   orPredicates(operands) ::= "(<first(operands)><rest(operands):{o |  
||<o>}>)"

   notPredicate(pred) ::= "!( <evalPredicate(...)> )"

   evalPredicate(pred,description) ::= "<pred>"

   evalSynPredicate(pred,description) ::= "<pred>(ctx)"

Perhaps the extra parentheses need to be added there?

   andPredicates(left,right) ::= "( (<left>) && (<right>) )"

I tried making this change to a copy of C.stg and sticking that at  
the front of my CLASSPATH but it isn't picked up by ANTLR... (I know  
Ter has said this is possible... why wouldn't it work?)... In any  
case, I rebuilt ANTLR with the above change and it does indeed insert  
parentheses where they are needed:

   if ( (( (synpred13(ctx)) && ( COLUMN == 0 || LAST_TOKEN ==  
BLOCKQUOTE ) )) )

The Java templates also seem to be missing the parentheses:

   andPredicates(left,right) ::= "(<left>&&<right>)"

Seems like it would be a good idea to add parentheses there as well  
seeing as ANTLR can't make any assumptions about what will be in the  
predicates and what the precedence might be. I don't know enough  
StringTemplate syntax to understand the all the other snippets... the  
"orPredicates" one might need parentheses as well.

Cheers,
Wincent



From jaluber at gmx.de  Tue Jul  3 02:56:14 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 11:56:14 +0200
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
	<468A0E15.9020508@gmx.de>
	<A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com>
Message-ID: <468A1D3E.8040901@gmx.de>

Wincent Colaiuta wrote:
> El 3/7/2007, a las 10:51, Johannes Luber escribi?:
> 
>> Terence Parr wrote:
>>> howdy,
>>>
>>> Added an entry to my "blog" (which has moved to the wiki):
>>>
>>> http://www.antlr.org/wiki/display/~admin/2007/07/02/Exploring+Concept+of+TreeWizard
>>>
>>>
>> If I see it correctly, your link points to an admin page. Unless you
>> want to give us your password the wiki page is inaccessible, as a quick
>> search after "tree wizard" confirmed it.
> 
> I was able to see it, but only when logged in (as a normal user, not as
> an admin).
> 
> Wincent

Isn't that defeating the spirit of a wiki? To have log on to access some
public content? Looks to me, as if Terence clicked on the wrong link
somewhere.

Best regards,
Johannes Luber


From jaluber at gmx.de  Tue Jul  3 03:00:42 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 12:00:42 +0200
Subject: [antlr-interest] Rule-local variables?
In-Reply-To: <468A1D0C.1040301@comp.cz>
References: <4689F3A4.5050507@comp.cz>	<200707030839.l638diu1022052@vega.inec.cz>
	<468A1D0C.1040301@comp.cz>
Message-ID: <468A1E4A.4000202@gmx.de>

Vaclav Barta wrote:
> Well, I certainly don't want recursive rules using a single variable,
> and considering I also have no idea what an ANTLR scope is, I think I'll
> go with a local variable in an @init block...
> 
>     Bye
>         Vasek
> 

Scopes are using stacks, so your concern is unfounded. Usually you don't
need to access the other slots of the stack, so it does look like using
a single variable.

Best regards,
Johannes Luber

From win at wincent.com  Tue Jul  3 03:06:07 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 12:06:07 +0200
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <468A1D3E.8040901@gmx.de>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
	<468A0E15.9020508@gmx.de>
	<A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com>
	<468A1D3E.8040901@gmx.de>
Message-ID: <61241279-5D00-4794-BCB2-E471F955B48C@wincent.com>

El 3/7/2007, a las 11:56, Johannes Luber escribi?:

> Wincent Colaiuta wrote:
>> El 3/7/2007, a las 10:51, Johannes Luber escribi?:
>>
>>> Terence Parr wrote:
>>>> howdy,
>>>>
>>>> Added an entry to my "blog" (which has moved to the wiki):
>>>>
>>>> http://www.antlr.org/wiki/display/~admin/2007/07/02/Exploring 
>>>> +Concept+of+TreeWizard
>>>>
>>>>
>>> If I see it correctly, your link points to an admin page. Unless you
>>> want to give us your password the wiki page is inaccessible, as a  
>>> quick
>>> search after "tree wizard" confirmed it.
>>
>> I was able to see it, but only when logged in (as a normal user,  
>> not as
>> an admin).
>>
>> Wincent
>
> Isn't that defeating the spirit of a wiki? To have log on to access  
> some
> public content? Looks to me, as if Terence clicked on the wrong link
> somewhere.

Of course! I didn't mean that I thought it was supposed to be that  
way... just wanted to correct what I thought was your misconception  
about the page being an admin-only thing. Ter probably meant to make  
it fully public with no login, and probably just overlooked doing so.

Cheers :-)
Wincent


From vbar at comp.cz  Tue Jul  3 03:35:54 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 03 Jul 2007 12:35:54 +0200
Subject: [antlr-interest] C# rules cannot return chars
Message-ID: <468A268A.1080409@comp.cz>

Hi,

for the C# target, a rule like

test returns [ char value ] :
	'test' { $value = 'a'; }
	;

produces code whose compilation fails with

error CS0031: Constant value '0' cannot be converted to a 'char'

The work-around is obviously to return an object containing a char, but 
still, somebody might be interested in fixing the problem... BTW what's 
the official way to report ANTLR bugs (for the C# target)? 
http://www.antlr.org:8888/browse/ANTLR sems to be read-only?

	Bye
		Vasek

From jaluber at gmx.de  Tue Jul  3 03:33:49 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 12:33:49 +0200
Subject: [antlr-interest] C# rules cannot return chars
In-Reply-To: <468A268A.1080409@comp.cz>
References: <468A268A.1080409@comp.cz>
Message-ID: <468A260D.40509@gmx.de>

Vaclav Barta wrote:
> Hi,
> 
> for the C# target, a rule like
> 
> test returns [ char value ] :
>     'test' { $value = 'a'; }
>     ;
> 
> produces code whose compilation fails with
> 
> error CS0031: Constant value '0' cannot be converted to a 'char'
> 
> The work-around is obviously to return an object containing a char, but
> still, somebody might be interested in fixing the problem... BTW what's
> the official way to report ANTLR bugs (for the C# target)?
> http://www.antlr.org:8888/browse/ANTLR sems to be read-only?
> 
>     Bye
>         Vasek
> 

Just report it here. Micheal will have then a look at it.

Best regards,
Johannes Luber

From open.zone at virgin.net  Tue Jul  3 04:18:13 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 12:18:13 +0100
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <46858D52.7000501@gmx.de>
Message-ID: <00b901c7bd63$db890330$c704a8c0@hercules>

Hi,

> > But as I know your other posts, your problem may be much harder ;)
> 
> I know. I have sometimes the feeling that I'm the pilot of a 
> supersonic aircraft and I still have to push my vehicle by 
> hand. :D But back the topic:
> 
> You are truly prophetic - I couldn't simply compile the code. 
> Turns out, that the template for C# uses constantly 
> "location" instead "Location". Then 
> "dbg.RecognitionException(nvae);" is used, where no "nvae" is 
> available. Instead I had to replace those occurrences with 
> "nvae_d4s0" and similar (there were really many of those...). 

These issues were fixed a while ago. Use the latest "daily" release (or
build for yourself from depot).

> Then I've got this line:
> 
> protected ITreeAdaptor adaptor = new DebugTreeAdaptor(dbg, 
> new CommonTreeAdaptor());

The missing context may tell another story but, I don't see *anything* wrong
with this line.

> It is trying to initialize a member via the non-constructor 
> way with a constructor-only argument, which of course the 
> compiler doesn't know about. I removed the assignment and 
> added in each constructor the line:
> 
> adaptor = new DebugTreeAdaptor(dbg, new CommonTreeAdaptor());
> 
> Actually, in the one-parameter constructor I used "null" 
> instead "dbg". It would cause NullReferenceExceptions 
> everywhere, if the TreeAdaptor isn't set afterwards, but that 
> seems to be the consequence anyway, as this constructor 
> chains to the one-argument base constructor (Interestingly, 
> the one-argument constructor has the line
> 
> ruleMemo = new IDictionary[154+1];
> 
> but the two-argument constructor does not. I'm further 
> astonished that no constructor chaining is done from the 
> one-argument constructor to the two-argument constructor.)

Do you have a sample grammar that demonstrates what you feel is the problem
here?.

I expected you might have sent me a grammar as you did previously.

> Then the DFA class DFA71 wants to access the dbg field from 
> the parser class, but the compiler doesn't allow this without 
> having a reference to the parser class. I had to add another 
> constructor parameter to DFA71 and change things into the following:
> 
> private void InitializeCyclicDFAs()
> {
>      this.dfa71 = new DFA71(this, this.dbg);
> }
> 
> And in DFA71:
> 
> IDebugEventListener dbg;
> 
> public DFA71(BaseRecognizer recognizer, IDebugEventListener dbg) {
>     this.recognizer = recognizer;
>     this.decisionNumber = 71;
>     this.eot = DFA71_eot;
>     this.eof = DFA71_eof;
>     this.min = DFA71_min;
>     this.max = DFA71_max;
>     this.accept     = DFA71_accept;
>     this.special    = DFA71_special;
>     this.transition = DFA71_transition;
>     this.dbg = dbg;
> }
> 
> After that it was easy to add override to
> 
> public virtual override void Error(NoViableAltException nvae)
> 
> because otherwise "virtual" would be wasted.
> 
> Nonetheless, I'm still missing some pieces. What I am 
> supposed to do with with the ParseTree pt? And when do I have 
> to start ANTLRworks in the remote debugging mode?

Johannes, post a sample grammar and we'll try to reproduce the issues. Many
seem to relate to issue that were fixed already (?).

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Tue Jul  3 04:18:13 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 12:18:13 +0100
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <ce40b1470707021108u22d3eda3v800cfc264bfc25a@mail.gmail.com>
Message-ID: <00b701c7bd63$da5f0220$c704a8c0@hercules>

David,

> Yet there are other projects, large open source projects, 
> that not only give away the product and the source code but 
> also the documentation. For example, the SharpDevelop folks 
> give away their book on SharpDevelop.

Isn't this the old Wrox SharpDevelop v1 book?. It was payware when v1 was
the current version iirc (and Wrox hadn't gone the way of the dodo). I don't
begrudge the project for that btw, I bought it when it was current,
must-have info on what made SharpDevelop tick.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Tue Jul  3 04:18:13 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 12:18:13 +0100
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468782CF.70102@gmx.de>
Message-ID: <00b801c7bd63$daf352e0$c704a8c0@hercules>

Harald,

> Getting started with ANTLR v3 is a frustrating experience for 
> its lack of coherent documentation and non-trivial example code.
> 
> I've been using ANTLR since the good old times when it used 
> to be called PCCTS, and I always used to be fond of it, but I 
> am disappointed with v3.
> 
> Marketing-style hype about the latest cool features does not 
> really help when you get no little or no information on how 
> to use them.
> 
> Even v2 documentatation was a bit scarce, it always cost you 
> some trial and error to get things right, but this was bliss 
> compared to the scattered and incomplete bits of 
> documentation you get for v3.
> 
> Yes, I know there's a book now. And no, I don't think it's in 
> the spirit of  a successful open source project to hide all 
> relevant information in a book that is only available commercially.

The ANTLR wiki has lots of tutorials and other information for learning to
use ANTLR v3. There is also some information on learning v3 for those used
to v2.

The model of freely available open source software supported by basic free
documentation plus comprehensive documentation as a paid-for book is quite
common actually. Many of the various JBoss projects are good examples.

I'm all for it since it goes some way to ensuring the project's continued
existence.

> There's nothing wrong about books, but you can publish a book 
> and still make the information publicly available, see e.g. 
> the Subversion Book.

Or not. It's the book writer's choice.

The project has had a wiki for over a year now to encourage contributions to
the documentation. The source has been available for long enough for any
interested party to grok it and write about it in the wiki.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From vbar at comp.cz  Tue Jul  3 04:42:18 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 03 Jul 2007 13:42:18 +0200
Subject: [antlr-interest] Rule-local variables?
In-Reply-To: <468A1E4A.4000202@gmx.de>
References: <4689F3A4.5050507@comp.cz>	<200707030839.l638diu1022052@vega.inec.cz>	<468A1D0C.1040301@comp.cz>
	<468A1E4A.4000202@gmx.de>
Message-ID: <468A361A.1030209@comp.cz>

Johannes Luber wrote:
> Scopes are using stacks, so your concern is unfounded. Usually you don't
> need to access the other slots of the stack, so it does look like using
> a single variable.
Fine by me... A related question: is it better to say

subExpression returns [ Expression value ] :
	{ $value = new Expression(); }
	( o = unaryOperator { $value.Operator = $o.value; } )? (
	...
	
or

subExpression returns [ Expression value ]
@init { $value = new Expression(); } :
	( o = unaryOperator { $value.Operator = $o.value; } )? (
	...

Both seem to work...

	Bye
		Vasek


From jaluber at gmx.de  Tue Jul  3 04:43:27 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 13:43:27 +0200
Subject: [antlr-interest] Rule-local variables?
In-Reply-To: <468A361A.1030209@comp.cz>
References: <4689F3A4.5050507@comp.cz>	<200707030839.l638diu1022052@vega.inec.cz>	<468A1D0C.1040301@comp.cz>	<468A1E4A.4000202@gmx.de>
	<468A361A.1030209@comp.cz>
Message-ID: <468A365F.3050205@gmx.de>

Vaclav Barta wrote:
> Fine by me... A related question: is it better to say
> 
> subExpression returns [ Expression value ] :
>     { $value = new Expression(); }
>     ( o = unaryOperator { $value.Operator = $o.value; } )? (
>     ...
>     
> or
> 
> subExpression returns [ Expression value ]
> @init { $value = new Expression(); } :
>     ( o = unaryOperator { $value.Operator = $o.value; } )? (
>     ...
> 
> Both seem to work...
> 
>     Bye
>         Vasek
> 

In this particular case the compiled code works the same, but the latter
documents the intent clearer. Furthermore, if you have several
alternatives in a rule, the first variant would require also code
duplication - a violation of the DRY principle, which can cause
maintenance nightmares.

Best regards,
Johannes Luber

From open.zone at virgin.net  Tue Jul  3 04:48:10 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 12:48:10 +0100
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50330.141.156.167.188.1183415464.squirrel@javadude.com>
Message-ID: <00ba01c7bd68$0945b440$c704a8c0@hercules>

Hi,

> Ter can do no wrong, eh? Fanboys... sheesh...

Resorting to Ad Honimem isn't particularly helpful.

> Quite simply, I am saying the following:
> 
> * I am _not_, nor did I, "demand" anything
> * The basic docs of the tool are not free

They are. What with the wiki, the list archives, the website (particularly
Ter's v3 dev blogs spanning a couple of years), the copious source
comments....

> * The tool isn't completely usable without the book

There are a number of posts to the list (that *predate* this thread) by
users forging ahead without the book.

> * Therefore, claiming ANTLR is open source is wrong

Only problem is that ANTLR v3 *is* open source. The source is available
under a very permissive license as you know.

> At the point I was writing the eclipse plugin for v3, I 
> couldn't find the info I needed for a few things anywhere 
> *but* the book.

What information in particular?. I'm genuinely interested as I may encounter
the same issues as you have.

> I didn't mind supporting Ter's work, so I bought the book.
> 
> I saw this thread and decided to add my 2c, in a very civil 
> manner. Ter jumped all over my ass, and the fanboys are 
> spinning like crazy.

I agree that some of the exchanges have been somewhat personal....and that's
a shame. I've found using ANTLR to be a much more civilized affair than
hacking with Lex/Yacc-style tools.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Tue Jul  3 05:13:53 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 13:13:53 +0100
Subject: [antlr-interest] Support to Ter, questions
In-Reply-To: <200707020759.53052.rschulz@sonic.net>
Message-ID: <00bb01c7bd6b$a175f100$c704a8c0@hercules>

Hi

> I had an em-dash in a comment and thought it was a bug when 
> ANTLR choked on it thusly:
> 
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> error(10):  internal error: CLIF.g : CLIF.g:810:12: expecting 
> '*', found ' '
> org.antlr.tool.ANTLRLexer.nextToken(ANTLRLexer.java:321)
> antlr.TokenStreamRewriteEngine.nextToken(TokenStreamRewriteEng
> ine.java:161)

<SNIP>

> So, first things first, does ANTLR support grammars written 
> in arbitrary Unicode? Does it accept UTF-8-encoded files? I 
> know the Java source grammar is defined as accepting Unicode, 
> not just, say, ISO-8859-1.

No.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Tue Jul  3 05:13:53 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 13:13:53 +0100
Subject: [antlr-interest] Support to Ter, questions
In-Reply-To: <a0624080dc2adf647e0a6@[192.168.0.3]>
Message-ID: <00bc01c7bd6b$a217d650$c704a8c0@hercules>

Hi,

> Questions (or remarks?):
> ---------
> To recap what we suspect are bugs in ANTRL-2:
> 
> - using the "?" character (&agrave;) anywhere in 
> a xxx.g file, even if only in a comment, causes 
> ANTLR to abort.

The ANTLR tool itself (even in V3) does not accept unicode input files.

The workaround is to use unicode escapes. Unfortunately that only helps with
rules but not comments in the grammar file.

> That leads to the following question: is there a 
> way in ANTLR-2 to include rules from files?

No. (translation: not to my knowledge)

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Tue Jul  3 05:13:53 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 13:13:53 +0100
Subject: [antlr-interest] C# rules cannot return chars
In-Reply-To: <468A268A.1080409@comp.cz>
Message-ID: <00bd01c7bd6b$a2c30a70$c704a8c0@hercules>

Hi,

> Hi,
> 
> for the C# target, a rule like
> 
> test returns [ char value ] :
> 	'test' { $value = 'a'; }
> 	;
> 
> produces code whose compilation fails with
> 
> error CS0031: Constant value '0' cannot be converted to a 'char'
> 
> The work-around is obviously to return an object containing a 
> char, but 
> still, somebody might be interested in fixing the problem... 
> BTW what's 
> the official way to report ANTLR bugs (for the C# target)? 
> http://www.antlr.org:8888/browse/ANTLR sems to be read-only?
> 

You just did ;-)

Thanks for the report. Do you have a simple grammar that demonstrates this?


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From antlr at mirality.co.nz  Tue Jul  3 05:32:47 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Jul 2007 00:32:47 +1200
Subject: [antlr-interest] Support to Ter, questions
In-Reply-To: <00bc01c7bd6b$a217d650$c704a8c0@hercules>
References: <a0624080dc2adf647e0a6@[192.168.0.3]>
	<00bc01c7bd6b$a217d650$c704a8c0@hercules>
Message-ID: <20070703123256.7E6C911EB1F@www.antlr.org>

At 00:13 4/07/2007, Micheal J wrote:
 >The ANTLR tool itself (even in V3) does not accept unicode input 

 >files.

Just to clarify a bit: ANTLR v3 generated parsers/lexers can 
handle unicode input.  However the grammar file used to generate 
those parsers/lexers in the first place cannot directly contain 
unicode.

The reason for this is that the grammar parser in ANTLR v3 is 
still using ANTLR v2, which doesn't support unicode.  Once Ter has 
rewritten it using v3 itself (which he said he's working on at the 
moment) then this restriction should be lifted.

(Which is I'm sure what Michael was saying; it just sounded a 
little confusingly worded to me.)


From vbar at comp.cz  Tue Jul  3 05:32:05 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 03 Jul 2007 14:32:05 +0200
Subject: [antlr-interest] C# rules cannot return chars
In-Reply-To: <00bd01c7bd6b$a2c30a70$c704a8c0@hercules>
References: <00bd01c7bd6b$a2c30a70$c704a8c0@hercules>
Message-ID: <468A41C5.8010005@comp.cz>

Micheal J wrote:
 >> for the C# target, a rule like
 >>
 >> test returns [ char value ] :
 >> 	'test' { $value = 'a'; }
 >> 	;
 >>
 >> produces code whose compilation fails with
 >>
 >> error CS0031: Constant value '0' cannot be converted to a 'char'
 > Thanks for the report. Do you have a simple grammar that demonstrates
 > this?
Well, not a complete grammar - I've just added the rule above to my
work-in-progress grammar to reproduce the problem. I believe any C# 
grammar will do...

	Bye
		Vasek

From open.zone at virgin.net  Tue Jul  3 05:32:44 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 13:32:44 +0100
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
Message-ID: <00be01c7bd6e$4501da30$c704a8c0@hercules>

Hi,

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Terence Parr
> Sent: 02 July 2007 06:10
> To: ANTLR Interest
> Subject: Re: [antlr-interest] [v3] Lack of documentation
> 
> 
> On Jul 1, 2007, at 7:56 PM, scott at javadude.com wrote:
> > First -- I bought both books (and have contributed to ANTLR 
> 2 and the 
> > eclipse plugins). I've used past versions of the tool (since early
> > PCCTS
> > releases), but had a lot of trouble figuring out v3 without 
> the book.
> >
> > How is forcing someone to pay for the documentation any 
> different than 
> > requiring a paid license for the tool? This is most definitely not
> > in the
> > spirit of open source.
> 
> Well, then I better get rid of ANTLR v3 as it is against your  
> definition of free software.
> 
> Sorry Scott, but you are a total pain in my ass; always have been.   

<SNIP>

Sadly, an Ad Hominem response doesn't advance the debate.

I disagree with Scott profoundly but, I'd still like to understand his
position. 

E.g. What problems did he have to resort to the book to resolve?. Are they
trivial user-space problems or, integration issues that require indepth
knowledage of v3 implementation?

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From qwertie256 at gmail.com  Tue Jul  3 07:20:26 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Tue, 3 Jul 2007 08:20:26 -0600
Subject: [antlr-interest] PEG-style "and" predicates
In-Reply-To: <F256C620-85FC-424C-B8A9-6F81C5975179@wincent.com>
References: <CA85AA9E-34CE-4FD7-A314-7F46D42166DA@wincent.com>
	<d3992d900707021731p3f125a5cn34a8865960697fb0@mail.gmail.com>
	<F256C620-85FC-424C-B8A9-6F81C5975179@wincent.com>
Message-ID: <ce40b1470707030720k1a008275vd5560aae4e53b277@mail.gmail.com>

> Nope, I don't think so. They are needed because, with a few
> exceptions, the order in which you specify alternatives *doesn't*
> actually have any impact on their precedence.

It's my understanding that if there is ambiguity, the first matching
alternative is always chosen (if applicable). The ANTLR warnings say
as much. e.g.

[07:51:33] warning(209): Foo.g:167:1: Multiple token rules can match
input such as "'f''o''o'": FOO1, FOO2
As a result, tokens(s) FOO2 were disabled for that input

Try giving ANTLR ambiguous alternatives. My experience is that it will
always choose the first.

So all one should need is a way to disable the warning and keep that behavior.

My reading of the ANTLR book (chapter 12) also suggests the predicates should be
used for prediction and not simply thrown out [if LL(*) doesn't fail
on the non-predicate input]. Could I be so bold as to suggest the
current behavior may be a big bug in ANTLR?

P.S. Sorry for the duplicate, Wincent, I'm always forgetting to "Reply all"

From rschulz at sonic.net  Tue Jul  3 07:31:27 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 3 Jul 2007 07:31:27 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <20070703083642.A017B11EAEC@www.antlr.org>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<200707021808.38720.rschulz@sonic.net>
	<20070703083642.A017B11EAEC@www.antlr.org>
Message-ID: <200707030731.27823.rschulz@sonic.net>

On Tuesday 03 July 2007 01:36, Gavin Lambert wrote:
> At 13:08 3/07/2007, Randall R Schulz wrote:
>  >Said "program" is both "super" a "nifty." In contrast,
>  >"super-nifty program" is a program whose niftiness
>  >exceeds normalcy and must be explicitly characterized as
>  >superior to ordinary niftiness.
>
> This is my new favourite sentence.  For now :)
>
> (Ok, technically it's two sentences.  Sue me.)

Nah. Ambiguity can be fun, too.

But since I've copyrighted, trademarked and patented this sentence 
(whichever one it is), you will be sued if you actually use it without 
securing a license first.


RRS

From jimi at temporal-wave.com  Tue Jul  3 07:34:31 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Jul 2007 07:34:31 -0700
Subject: [antlr-interest] Bug in C output (may after other targets as
	well)
In-Reply-To: <39FB4984-B500-4B9C-A096-5D328E1C1A85@wincent.com>
References: <39FB4984-B500-4B9C-A096-5D328E1C1A85@wincent.com>
Message-ID: <051466DAA0D608439E196797955018D76E8D@wavemachine.temporal-wave.com>

Whatever the ins and outs, I prefer to have the parenthesis in there
explicitly anyway ;-)))) Hence I have added additional parens where it
seems appropriate, just in case.

Jim

> -----Original Message-----
> From: Wincent Colaiuta [mailto:win at wincent.com]
> Sent: Tuesday, July 03, 2007 2:53 AM
> To: ANTLR Interest
> Cc: Jim Idle
> Subject: Bug in C output (may after other targets as well)
> 
> I think I've just discovered a bug in the C output; nothing major,
> just some missing parentheses. A quick glance reveals that they are
> also missing from the Java output templates, which means they are
> probably missing from the others as well...
> 
> Given a rule like this:
> 
>    BLOCKQUOTE : { COLUMN == 0 || LAST_TOKEN == BLOCKQUOTE }?=> '>' '
> '? ;
> 
> ANTLR generates a prediction condition like this:
> 
>    if ( (( synpred13(ctx) &&  COLUMN == 0 || LAST_TOKEN ==
> BLOCKQUOTE  )) )
> 
> Here the purpose of synpred13() is to check if the blockquote rule
> would succeed at this point.
> 
> Due to C operator precedence, there is a chance that this prediction
> could incorrectly evaluate to true. To make it totally clear:
> 
>    if (synpred && A || B)
> 
> Can evaluate to true even if synpred is false; this will happen
> whenever B is true. This is because && has a higher precendence than
> || in C. The above is really equivalent to:
> 
>    if ((synpred && A) || B)
> 
> But to match the clear intent of the rule in the grammar we would
need:
> 
>    if (synpred && (A || B))
> 
> So it seems that the C output template needs additional brackets
> around semantic predicates to guarantee that whatever is in the
> predicate will be evaluated as a single logical unit, regardless of
> the precedence of whatever operators may be inside it.
> 
> As a workaround, I can rewrite my predicates as follows:
> 
>    FOO: { (A || B) }?=> 'bar' ;
> 
> As I said above, I'm not sure if the right place to fix this is in
> the C output template. I've looked in there and I can't really see
> where this construct is defined (don't really know enough about
> StringTemplate)... I can see the following:
> 
>    // D F A  E X P R E S S I O N S
> 
>    andPredicates(left,right) ::= "( <left> && <right> )"
> 
>    orPredicates(operands) ::= "(<first(operands)><rest(operands):{o |
> ||<o>}>)"
> 
>    notPredicate(pred) ::= "!( <evalPredicate(...)> )"
> 
>    evalPredicate(pred,description) ::= "<pred>"
> 
>    evalSynPredicate(pred,description) ::= "<pred>(ctx)"
> 
> Perhaps the extra parentheses need to be added there?
> 
>    andPredicates(left,right) ::= "( (<left>) && (<right>) )"
> 
> I tried making this change to a copy of C.stg and sticking that at
> the front of my CLASSPATH but it isn't picked up by ANTLR... (I know
> Ter has said this is possible... why wouldn't it work?)... In any
> case, I rebuilt ANTLR with the above change and it does indeed insert
> parentheses where they are needed:
> 
>    if ( (( (synpred13(ctx)) && ( COLUMN == 0 || LAST_TOKEN ==
> BLOCKQUOTE ) )) )
> 
> The Java templates also seem to be missing the parentheses:
> 
>    andPredicates(left,right) ::= "(<left>&&<right>)"
> 
> Seems like it would be a good idea to add parentheses there as well
> seeing as ANTLR can't make any assumptions about what will be in the
> predicates and what the precedence might be. I don't know enough
> StringTemplate syntax to understand the all the other snippets... the
> "orPredicates" one might need parentheses as well.
> 
> Cheers,
> Wincent
> 


From win at wincent.com  Tue Jul  3 07:43:31 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Tue, 3 Jul 2007 16:43:31 +0200
Subject: [antlr-interest] Bug in C output (may after other targets as
	well)
In-Reply-To: <051466DAA0D608439E196797955018D76E8D@wavemachine.temporal-wave.com>
References: <39FB4984-B500-4B9C-A096-5D328E1C1A85@wincent.com>
	<051466DAA0D608439E196797955018D76E8D@wavemachine.temporal-wave.com>
Message-ID: <06F0E484-746B-44C6-9143-04972FA64A3A@wincent.com>

El 3/7/2007, a las 16:34, Jim Idle escribi?:

> Whatever the ins and outs, I prefer to have the parenthesis in there
> explicitly anyway ;-)))) Hence I have added additional parens where it
> seems appropriate, just in case.

Thanks for that, Jim!

Cheers,
Wincent


From Stephen_Hardy at rabbit.com  Tue Jul  3 09:29:04 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Tue, 3 Jul 2007 09:29:04 -0700
Subject: [antlr-interest] Infinite lexer exception allocation loop in
	Ctarget C parser, antlr3.0
In-Reply-To: <051466DAA0D608439E196797955018D76E8A@wavemachine.temporal-wave.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F034@dvs-sms-mail01.digi.com>

Jim,

thanks for that.  Yeah, I already added the \x support, but it sowed the
seeds of doubt that some other user syntax or lexical error may cause
the same problem.  I use Fedore core 3, and it seemed to recover by
killing the task once it asked for all 2Gbytes, but I don't know if XP
is equally robust.

BTW, really nice job on the C target.  Much better documentation than
most open source projects.  I'm really looking forward to the C++
target, if only to eliminate the explicit passing of the 'this' pointer.

Just a few points: 

1) I basically had little trouble getting it to work.  The only real
problem was that the sources don't come with a configure script already
built, so one has to use autoconf.  To cut a long story short, I
eventually gave up on the GNU tools because makefile.in wasn't available
so I couldn't successfully run automake.  It turned out to be easy to
create a config.h file from scratch, so that's what I ended up doing.
Nevertheless, you might want to add a working configure script and
makefile.am's as is done with most source distros, to avoid
inconvenience to those with back-level autoconf tools.  (Admittedly I'm
all at sea with autoconf tools, so it's probably my stupidity).

2) Before I realized you had already ported Terrence's C grammar/Java
target to a C target, I was attempting to do so myself.  While doing
this, I found out that the @header stuff is put into both the .c and the
.h files.  I really wanted to put the @header stuff in just the .h file
(is that unreasonable?) so I decided to tweak the string template file.
Lo and behold, the changes to the string templates were not noticed by
the antlr tool.  What am I missing?  I thought it was just a matter of
changing 

$(ANTLR_HOME)/src/org/antlr/codegen/templates/C/C.stg

but it obviously isn't that simple...  Surely I don't have to rebuild
antlr - that would mean I'd have to get a java compiler - argh!

Regards,
SJH


> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Monday, July 02, 2007 7:25 PM
> To: Hardy, Stephen; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Infinite lexer exception 
> allocation loop in Ctarget C parser, antlr3.0
> 
> I t sounds like an issue with the grammar that exposes an issue in the
> runtime, though something tells me that this may be related to an
> extremely recent change to deal with something related. 
> 
> Thanks for pointing this out - I will endeavor to fix this tomorrow or
> at least provide an answer/work around (which might be to allow \x
> sequences ;-).
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Hardy, Stephen
> > Sent: Monday, July 02, 2007 1:31 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Infinite lexer exception 
> allocation loop in
> > Ctarget C parser, antlr3.0
> > 
> > Hi all,
> > I'm tasked with some C-to-C translation, and have been 
> using the ANSI
> C
> > grammar with the C target as a starting point, with antlr3.0.
> > 
> > The grammar inadvertently omits the possibility of using \x (hex)
> > escapes in a literal string, and this causes an infinite memory
> > allocation loop when the parser is run against tokens such as
> > "\x00\x00".  The offending sequence of code is in mSTRING_LITERAL(),
> > which calls mEscapeSequence(), which in turn allocates an exception
> > struct (CONSTRUCTEX()) when it fails to understand the \x.
> > Unfortunately, the calling code is a for(;;) loop which does not
> > advance
> > the token stream, hence the lexer will allocate forever.
> > 
> > Sorry I'm really new to this, so it may be my fault, but it 
> looks like
> > it may be a C target problem.  Didn't see any similar problem
> mentioned
> > in the most recent archive.
> > 
> > Regards,
> > SJH
> 

From antlr at jazillian.com  Tue Jul  3 10:06:35 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 03 Jul 2007 13:06:35 -0400
Subject: [antlr-interest] Newbie tree rewrite question.
In-Reply-To: <4e7bd29e0707021216u194c211ah47a95e97d79d35d8@mail.gmail.com>
References: <4e7bd29e0707021216u194c211ah47a95e97d79d35d8@mail.gmail.com>
Message-ID: <468A821B.3050206@jazillian.com>

Having multiple passes over an AST is certainly doable, but I haven't 
seen any specific examples
and documentation.

You might find this article interesting: 
http://www.jazillian.com/articles/treewalkers.html
where I talk about using ANTLR to walk the AST vs. doing it "by hand". 
If things get complicated
enough, you could look into tools like TXL http://www.txl.ca/

Also, in case you haven't seen it, all of Chapter 8 "Tree Grammars" in 
the ANTLR v3 book
us about tree grammars.

Andy

William Halliburton wrote:
>
> Hello,
>
> I have a grammar that parses a C like language into an AST and a tree 
> grammar that traverses the AST and outputs a translated language via 
> templates.
>
> My tree grammar is getting a little complex and i think that things 
> could be simplified by having a second pass grammar that translates 
> the AST into a similar AST before the final tree grammar.
>
> I've been trying figure out how to make a simple AST to AST tree 
> parser. Is this desirable and doable? Are there any examples? Looks 
> like the rewrite=true option works with templates not AST.
>
> Thank you,
> William Halliburton


From jaluber at gmx.de  Tue Jul  3 10:11:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 19:11:56 +0200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <00b901c7bd63$db890330$c704a8c0@hercules>
References: <00b901c7bd63$db890330$c704a8c0@hercules>
Message-ID: <468A835C.1000408@gmx.de>

Micheal J wrote:
> Hi,
>
>>> But as I know your other posts, your problem may be much harder ;)
>> I know. I have sometimes the feeling that I'm the pilot of a
>> supersonic aircraft and I still have to push my vehicle by
>> hand. :D But back the topic:
>>
>> You are truly prophetic - I couldn't simply compile the code.
>> Turns out, that the template for C# uses constantly
>> "location" instead "Location". Then
>> "dbg.RecognitionException(nvae);" is used, where no "nvae" is
>> available. Instead I had to replace those occurrences with
>> "nvae_d4s0" and similar (there were really many of those...).
>
> These issues were fixed a while ago. Use the latest "daily" release (or
> build for yourself from depot).

The latest daily release is too old for the fixes. And I had no success
in building my own ANTLR with Eclipse. Is there a wiki page about that
problem already?

>> Then I've got this line:
>>
>> protected ITreeAdaptor adaptor = new DebugTreeAdaptor(dbg,
>> new CommonTreeAdaptor());
>
> The missing context may tell another story but, I don't see *anything*
wrong
> with this line.

The location of dbg. dbg is a member of DebugParser, the parent parent
class. And in Ecma 334 is written:

"A variable initializer for an instance field cannot reference the
instance being created. Thus, it is a compile-time error to reference
*this* in a variable initializer, as it is a compile-time error for a
variable initializer to reference any instance member through a
simple-name."

The simple-name part is violated.

>> It is trying to initialize a member via the non-constructor
>> way with a constructor-only argument, which of course the
>> compiler doesn't know about. I removed the assignment and
>> added in each constructor the line:
>>
>> adaptor = new DebugTreeAdaptor(dbg, new CommonTreeAdaptor());
>>
>> Actually, in the one-parameter constructor I used "null"
>> instead "dbg". It would cause NullReferenceExceptions
>> everywhere, if the TreeAdaptor isn't set afterwards, but that
>> seems to be the consequence anyway, as this constructor
>> chains to the one-argument base constructor (Interestingly,
>> the one-argument constructor has the line
>>
>> ruleMemo = new IDictionary[154+1];
>>
>> but the two-argument constructor does not. I'm further
>> astonished that no constructor chaining is done from the
>> one-argument constructor to the two-argument constructor.)
>
> Do you have a sample grammar that demonstrates what you feel is the
problem
> here?.
>
> I expected you might have sent me a grammar as you did previously.

My apologies. I assumed that my diagnostics would have been enough. I
attached both grammars, as the errors appear in different files. Use the
-debug option for generation.

Best regards,
Johannes Luber

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNGGenerator.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070703/8fa07e16/attachment-0002.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNG.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070703/8fa07e16/attachment-0003.pl 

From antlr at jazillian.com  Tue Jul  3 10:23:14 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 03 Jul 2007 13:23:14 -0400
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468987E6.3010709@san.rr.com>
References: <468987E6.3010709@san.rr.com>
Message-ID: <468A8602.8020703@jazillian.com>

Actually, "open source" has a specific definition:
http://www.opensource.org/docs/osd
and a non-profit company http://www.opensource.org/ who's main purpose 
seems to be to
make sure people use the term correctly.

Both the open source and free software movements go to incredible 
lengths to explain
that "free" and "open source" have nothing to do with cost. And, of 
course, software can
be open source while its documentation, support, etc are not.

So many times I've wanted to scream "OK! Stop! We get it! 'open source' 
and 'free' do
not imply gratis!"  But apparently some people really don't get it, as 
if any money changing
hands or documentation being covered by existing copyright laws somehow 
'violates
the spirit of open source'.

Oh well, the best I can do is go celebrate my right to blow my hand off 
tomorrow.
Oh wait, I don't have that right in my state...whatever.

Andy

http://slashdot.org/articles/07/06/21/1146259.shtml
Oscar Rodriguez wrote:
> I suppose someone should point out the obvious. Open source means 
> precisely that: open source code of the program being developed.
>
> I don't know where anyone gets the idea that it means you don't ever 
> have to spend money if you want to use it.
>
> It simply means that developers all over the world can work on the 
> application in question as opposed to closed source, where the 
> developer gets to decide who looks at the source and who doesn't, who 
> gets to help write more code and who doesn't.
>
> The beauty of open source is that you can get many people, from all 
> over the world, working on something cooperatively, without having to 
> have a Microsoft sized bank roll to make it happen.
>
> As far end users are concerned, open source should not be equated to 
> anything at the user level. It is strictly a means of developing 
> software.
>
>
>


From parrt at cs.usfca.edu  Tue Jul  3 10:23:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 Jul 2007 10:23:36 -0700
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <468A1D3E.8040901@gmx.de>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
	<468A0E15.9020508@gmx.de>
	<A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com>
	<468A1D3E.8040901@gmx.de>
Message-ID: <C2C0598C-F7CF-40AD-AB45-5E322A8BA123@cs.usfca.edu>


On Jul 3, 2007, at 2:56 AM, Johannes Luber wrote:
> Isn't that defeating the spirit of a wiki? To have log on to access  
> some
> public content? Looks to me, as if Terence clicked on the wrong link
> somewhere.

The permissions say "anonymous users can use it".  Checked again.  I  
have no idea why you'd need to be logged in.

Crap. I note that my blog doesn't appear on home page unless logged  
in.  damn confluence.  Ok, anybody know the answer on the  
permissions  or do I need to make a support ticket?

Thanks,
Ter

From parrt at cs.usfca.edu  Tue Jul  3 10:29:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 Jul 2007 10:29:53 -0700
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <C2C0598C-F7CF-40AD-AB45-5E322A8BA123@cs.usfca.edu>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
	<468A0E15.9020508@gmx.de>
	<A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com>
	<468A1D3E.8040901@gmx.de>
	<C2C0598C-F7CF-40AD-AB45-5E322A8BA123@cs.usfca.edu>
Message-ID: <A24456BF-31A3-470D-96C7-B6220D33961A@cs.usfca.edu>

Ah ha!  Figured it out...ok, you have to set permissions on your  
personal space not just globally.

all can see now.

Ter
On Jul 3, 2007, at 10:23 AM, Terence Parr wrote:

>
> On Jul 3, 2007, at 2:56 AM, Johannes Luber wrote:
>> Isn't that defeating the spirit of a wiki? To have log on to  
>> access some
>> public content? Looks to me, as if Terence clicked on the wrong link
>> somewhere.
>
> The permissions say "anonymous users can use it".  Checked again.   
> I have no idea why you'd need to be logged in.
>
> Crap. I note that my blog doesn't appear on home page unless logged  
> in.  damn confluence.  Ok, anybody know the answer on the  
> permissions  or do I need to make a support ticket?
>
> Thanks,
> Ter


From antlr at jazillian.com  Tue Jul  3 10:34:33 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 03 Jul 2007 13:34:33 -0400
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <50302.141.156.167.188.1183429046.squirrel@javadude.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>	<20070702133915.5684211EC6E@www.antlr.org>	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>	<50427.141.156.167.188.1183417059.squirrel@javadude.com>	<051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
	<50302.141.156.167.188.1183429046.squirrel@javadude.com>
Message-ID: <468A88A9.8060808@jazillian.com>

scott at javadude.com wrote:
>
> Yes, "open source" means "the source is open". But the license says you
> can use it for free. 
No, that's not right either. The BSD license 
http://en.wikipedia.org/wiki/BSD_license
says no such thing.

From liviu.u at gmail.com  Tue Jul  3 11:37:03 2007
From: liviu.u at gmail.com (Liviu U)
Date: Tue, 3 Jul 2007 21:37:03 +0300
Subject: [antlr-interest] Any C# antlr 3 grammar?
Message-ID: <c522653d0707031137j10f034e5kc7fdf58a7e82b201@mail.gmail.com>

Does a version of C# antlr 3 grammar exist?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070703/9e2036a0/attachment.html 

From jaluber at gmx.de  Tue Jul  3 11:58:58 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 20:58:58 +0200
Subject: [antlr-interest] Any C# antlr 3 grammar?
In-Reply-To: <c522653d0707031137j10f034e5kc7fdf58a7e82b201@mail.gmail.com>
References: <c522653d0707031137j10f034e5kc7fdf58a7e82b201@mail.gmail.com>
Message-ID: <468A9C72.2020903@gmx.de>

Liviu U wrote:
> Does a version of C# antlr 3 grammar exist?

I'm working on one, as Robin Davies does. Neither of us has finished it
yet, although his version seems to be farther than mine. Then the
question of licensing remains. I plan to go the BSD-route. I never asked
what Robin plans so I can't answer for him.

Best regards,
Johannes Luber


From gbr at newtechlaw.com  Tue Jul  3 11:59:49 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Tue, 03 Jul 2007 11:59:49 -0700
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468A88A9.8060808@jazillian.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
	<051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
	<50302.141.156.167.188.1183429046.squirrel@javadude.com>
	<468A88A9.8060808@jazillian.com>
Message-ID: <200707031900.l63J0H5J005735@morpho.newtechlaw.com>

At 10:34 AM 7/3/2007, Andy Tripp wrote:
>scott at javadude.com wrote:
>>
>>Yes, "open source" means "the source is open". But the license says you
>>can use it for free.
>No, that's not right either. The BSD license 
>http://en.wikipedia.org/wiki/BSD_license
>says no such thing.

Wait, actually, the BSD license does exactly say use is free.  To quote:

* Redistribution and use in source and binary forms, with or without 
modification, are permitted * (subject to a few limitations that are 
nonconsequential to the current discussion)

Though that does not actually support Scott's implied contention.

The BSD license only goes to the source.  It says nothing about 
documentation.  Or support.  Or any other ancillary service.  There 
is simply no obligation whatsoever to provide any documentation or 
other service and support.  The author of the OSS code could very 
well keep private a commented copy and only release, fully permitted 
under the BSD license, a completely scrubbed version.

The provision of any documentation, as well as the list forum, Wiki, 
and personal investiture of time and effort to answer questions and 
fix problems, by an OSS author is purely gratis.  For anyone to look 
at whatever documentation and support any OSS author provides and 
contend that it is somehow morally insufficient or worse, to impugn 
the author as foisting some nefarious plan, is just plain 
jaded.  And, yes, that was the (humorously attempted) point of my prior post.

IAAL, so standard no-legal-advice-given disclaimers apply.

Best,
Gerald 



From antlr at jazillian.com  Tue Jul  3 12:08:19 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 03 Jul 2007 15:08:19 -0400
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <200707031900.l63J0H5J005735@morpho.newtechlaw.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>	<20070702133915.5684211EC6E@www.antlr.org>	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>	<50427.141.156.167.188.1183417059.squirrel@javadude.com>	<051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>	<50302.141.156.167.188.1183429046.squirrel@javadude.com>	<468A88A9.8060808@jazillian.com>
	<200707031900.l63J0H5J005735@morpho.newtechlaw.com>
Message-ID: <468A9EA3.2020706@jazillian.com>

I don't understand.

I've reread the sentence below many times now, and I just can't see how 
it relates
in any way to price. To say "use...is permitted" implies nothing about 
price.

Andy


Gerald B. Rosenberg wrote:
>
> Wait, actually, the BSD license does exactly say use is free.  To quote:
>
> * Redistribution and use in source and binary forms, with or without 
> modification, are permitted * (subject to a few limitations that are 
> nonconsequential to the current discussion)
>


From open.zone at virgin.net  Tue Jul  3 12:20:15 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 20:20:15 +0100
Subject: [antlr-interest] C# rules cannot return chars
In-Reply-To: <468A41C5.8010005@comp.cz>
Message-ID: <00db01c7bda7$307aa2c0$c704a8c0@hercules>

Hi Vasek,

> Micheal J wrote:
>  >> for the C# target, a rule like
>  >>
>  >> test returns [ char value ] :
>  >> 	'test' { $value = 'a'; }
>  >> 	;
>  >>
>  >> produces code whose compilation fails with
>  >>
>  >> error CS0031: Constant value '0' cannot be converted to a 
> 'char'  > Thanks for the report. Do you have a simple grammar 
> that demonstrates  > this? Well, not a complete grammar - 
> I've just added the rule above to my work-in-progress grammar 
> to reproduce the problem. I believe any C# 
> grammar will do...

If you're able to build from the latest sources, please do so and try again.
I've just committed a possible fix.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From jaluber at gmx.de  Tue Jul  3 13:36:19 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 22:36:19 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
Message-ID: <468AB343.60500@gmx.de>

Hello!

I managed on my second try to build ANTLR3 myself, but now I can't get
ANTLR to run due to some classpath issue. My directory with the
Tool.class is "D:\Install Files\ANTLR\antlr-source\bin\org\antlr". What
command line do I have to use to call org.antlr.Tool?

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Tue Jul  3 13:39:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 Jul 2007 13:39:47 -0700
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468AB343.60500@gmx.de>
References: <468AB343.60500@gmx.de>
Message-ID: <CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>

you need the bin not bin\org\antlr in your path.  Also add the  
runtime dir.

Does build.xml help?

Ter

On Jul 3, 2007, at 1:36 PM, Johannes Luber wrote:

> Hello!
>
> I managed on my second try to build ANTLR3 myself, but now I can't get
> ANTLR to run due to some classpath issue. My directory with the
> Tool.class is "D:\Install Files\ANTLR\antlr-source\bin\org\antlr".  
> What
> command line do I have to use to call org.antlr.Tool?
>
> Best regards,
> Johannes Luber


From jaluber at gmx.de  Tue Jul  3 13:50:22 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 22:50:22 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>
References: <468AB343.60500@gmx.de>
	<CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>
Message-ID: <468AB68E.6020207@gmx.de>

Terence Parr wrote:
> you need the bin not bin\org\antlr in your path.  Also add the runtime dir.

I do the following:

D:\>java -cp "D:\Install Files\ANTLR\antlr-source\bin\org\antlr\runtime"
"D:\Install Files\ANTLR\antlr-source\bin"\org.antlr.Tool

The output:

Exception in thread "main" java.lang.NoClassDefFoundError: D:\Install
Files\ANTLR\antlr-source\bin\org/antlr/Tool
> 
> Does build.xml help?

I have never used ANT, so I have no idea what you could mean with that
sentence.

Best regards,
Johannes Luber

From rschulz at sonic.net  Tue Jul  3 14:00:47 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 3 Jul 2007 14:00:47 -0700
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468AB68E.6020207@gmx.de>
References: <468AB343.60500@gmx.de>
	<CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>
	<468AB68E.6020207@gmx.de>
Message-ID: <200707031400.47772.rschulz@sonic.net>

On Tuesday 03 July 2007 13:50, Johannes Luber wrote:
> Terence Parr wrote:
> > you need the bin not bin\org\antlr in your path.  Also add the
> > runtime dir.
>
> I do the following:
>
> D:\>java -cp "D:\Install Files\ANTLR\antlr-source\bin\org\antlr\runtime" "D:\Install Files\ANTLR\antlr-source\bin"\org.antlr.Tool

You're telling Java to run a nonsense class name. There should be no
file path name syntax in the main entry-point class name. It's just
org.antlr.Tool. That is, the last argument in the command line you gave
should simply be org.antlr.Tool. Of course, you'll need to supply other
arguments?at least a grammar source file and any options you choose.

But ANTLR itself requires ANTLR v2.7 in its class path, since the parser
that ANTLR v3 uses to parse ANTLR source is (currently) and ANTLR v2.7
parser. You also need the string template library. Since that source is
distributed separately, I don't suppose it's going to be in the results
produced by bulding ANTLR, but I don't know that for a fact.


> The output:
>
> Exception in thread "main" java.lang.NoClassDefFoundError: D:\Install
> Files\ANTLR\antlr-source\bin\org/antlr/Tool


Randall Schulz

From antlr at mirality.co.nz  Tue Jul  3 14:08:21 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Jul 2007 09:08:21 +1200
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <468A9EA3.2020706@jazillian.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<20070702133915.5684211EC6E@www.antlr.org>
	<051466DAA0D608439E196797955018D76E6A@wavemachine.temporal-wave.com>
	<50427.141.156.167.188.1183417059.squirrel@javadude.com>
	<051466DAA0D608439E196797955018D76E85@wavemachine.temporal-wave.com>
	<50302.141.156.167.188.1183429046.squirrel@javadude.com>
	<468A88A9.8060808@jazillian.com>
	<200707031900.l63J0H5J005735@morpho.newtechlaw.com>
	<468A9EA3.2020706@jazillian.com>
Message-ID: <20070703210829.57EED11EBAC@www.antlr.org>

At 07:08 4/07/2007, Andy Tripp wrote:
 >I don't understand.
 >
 >I've reread the sentence below many times now, and I just can't 
see
 >how it relates in any way to price. To say "use...is permitted"
 >implies nothing about price.

Of course not.  The BSD license is all about "free as in liberty", 
not "free as in beer".

In fact, it's perfectly legal and in accordance with the license 
if an up-front purchase is required to get the initial copy of the 
source and/or binary -- it's just that the receiver of said source 
is then at liberty to give it to others without charge or payment 
if they wish, or charge for it if they wish to do that too.  In 
fact the source isn't even required to accompany the binary, 
unlike the various GPL licenses.

The *only* restrictions imposed by the BSD license are ones of 
attribution and limitation of liability -- there is nothing in 
there restricting any kind of redistribution.  In fact rights to 
redistribute are explicitly granted.


From open.zone at virgin.net  Tue Jul  3 14:07:41 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 22:07:41 +0100
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
Message-ID: <00e201c7bdb6$339eef60$c704a8c0@hercules>

Hi,

Now that the link is accessible, I find I'm looking forward to Andy Tripp's
opinion of this. I wonder if he reckons it will be a help - were the need to
arise - to port his current tranlation system to v3.

I haven't tried it but it seems very useful from reading your article.
Incidentally, I didn't see any attached code (although that may have a lot
to do with my system).

Micheal

> howdy,
> 
> Added an entry to my "blog" (which has moved to the wiki):
> 
http://www.antlr.org/wiki/display/~admin/2007/07/02/Exploring+Concept 
+of+TreeWizard
After talking with Don Bradshaw at http://www.quipoz.com in Sydney  
and after trying to convert ANTLR v3's grammar (written in v2) into  
v3, I decided to build TreeWizard. You can create, navigate, and  
match trees very easily using tree patterns that are like interpreted  
ANTLR patterns (er...well, they pretty much are).  If people find it  
useful etc..., it will make it's way into ANTLR after we've groomed  
it etc...  Please try it out and let me know if it's useful for ya...  
It's pretty damn cool.  The following executes a method in action  
object for every subtree that matches the indicated pattern.

atreewizard.visit(t, "(VARDECL %type:. %id:ID)", mylistener);

'.' (dot) is the wildcard; type and id are labels that appear in a  
hashtable for the mylistener's visit() method to chew on.

All the code is attached to the wiki page.

Ter


From antlr at mirality.co.nz  Tue Jul  3 14:13:12 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Jul 2007 09:13:12 +1200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <468A835C.1000408@gmx.de>
References: <00b901c7bd63$db890330$c704a8c0@hercules> <468A835C.1000408@gmx.de>
Message-ID: <20070703211318.DA91211EB6A@www.antlr.org>

At 05:11 4/07/2007, Johannes Luber wrote:
 >>> protected ITreeAdaptor adaptor = new DebugTreeAdaptor(dbg,
 >>> new CommonTreeAdaptor());
 >>
 >> The missing context may tell another story but, I don't see
 >> *anything* wrong with this line.
 >
 >The location of dbg. dbg is a member of DebugParser, the parent
 >parent class. And in Ecma 334 is written:
 >
 >"A variable initializer for an instance field cannot reference 
the
 >instance being created. Thus, it is a compile-time error to
 >reference *this* in a variable initializer, as it is a compile-
 >time error for a variable initializer to reference any instance
 >member through a simple-name."
 >
 >The simple-name part is violated.

That doesn't seem to prohibit base-class fields, though.  They 
should have already been constructed by the time derived class 
initializers are called.

I guess it's a matter of interpretation, though :)


From jaluber at gmx.de  Tue Jul  3 14:16:33 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 23:16:33 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <200707031400.47772.rschulz@sonic.net>
References: <468AB343.60500@gmx.de>	<CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>	<468AB68E.6020207@gmx.de>
	<200707031400.47772.rschulz@sonic.net>
Message-ID: <468ABCB1.60308@gmx.de>

Randall R Schulz wrote:
> On Tuesday 03 July 2007 13:50, Johannes Luber wrote:
>> Terence Parr wrote:
>>> you need the bin not bin\org\antlr in your path.  Also add the
>>> runtime dir.
>> I do the following:
>>
>> D:\>java -cp "D:\Install Files\ANTLR\antlr-source\bin\org\antlr\runtime" "D:\Install Files\ANTLR\antlr-source\bin"\org.antlr.Tool
> 
> You're telling Java to run a nonsense class name. There should be no
> file path name syntax in the main entry-point class name. It's just
> org.antlr.Tool. That is, the last argument in the command line you gave
> should simply be org.antlr.Tool. Of course, you'll need to supply other
> arguments?at least a grammar source file and any options you choose.
> 
> But ANTLR itself requires ANTLR v2.7 in its class path, since the parser
> that ANTLR v3 uses to parse ANTLR source is (currently) and ANTLR v2.7
> parser. You also need the string template library. Since that source is
> distributed separately, I don't suppose it's going to be in the results
> produced by bulding ANTLR, but I don't know that for a fact.

D:\>java -cp "D:\Install Files\ANTLR\antlr-source\bin\org\antlr\runtime"
-cp "D:\Install Files\ANTLR\antlr-source\bin" -cp "D:\Install
Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar" -cp "D:\Install
Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar" org.antlr.Tool

Output:

Exception in thread "main" java.lang.NoClassDefFoundError: org/antlr/Tool

Not much of an improvement. Maybe the CLASSPATH, I've set for the
distributed answer, is interfering but I don't know how to undefine an
environment variable in a DOS box anymore.

Best regards,
Johannes Luber

I'm not

From open.zone at virgin.net  Tue Jul  3 14:18:29 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 22:18:29 +0100
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468AB68E.6020207@gmx.de>
Message-ID: <00e301c7bdb7$b66a40b0$c704a8c0@hercules>

Hi,

> Terence Parr wrote:
> > you need the bin not bin\org\antlr in your path.  Also add 
> the runtime 
> > dir.
> 
> I do the following:
> 
> D:\>java -cp "D:\Install 
> Files\ANTLR\antlr-source\bin\org\antlr\runtime"
> "D:\Install Files\ANTLR\antlr-source\bin"\org.antlr.Tool
> 
> The output:
> 
> Exception in thread "main" java.lang.NoClassDefFoundError: 
> D:\Install Files\ANTLR\antlr-source\bin\org/antlr/Tool

Try:

java -cp "D:\Install Files\ANTLR\antlr-source\bin" org.antlr.Tool

I am assuming the bin directory has (at least) the following structure:

bin
 +-org
    +-antlr
       +-analysis
       +-codegen
       +-misc
       +-runtime
       +-test  (optional?)
       +-tool

> > 
> > Does build.xml help?
> 
> I have never used ANT, so I have no idea what you could mean 
> with that sentence.

No harm in trying ANT btw. If it eases the task of (re-)building ANTLR for
you. 

Micheal

PS	Perhaps someone Nant/MSBuild user might create a Nant (or MSBuild)
build file based on the build.xml file?

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From rschulz at sonic.net  Tue Jul  3 14:23:04 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 3 Jul 2007 14:23:04 -0700
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468ABCB1.60308@gmx.de>
References: <468AB343.60500@gmx.de> <200707031400.47772.rschulz@sonic.net>
	<468ABCB1.60308@gmx.de>
Message-ID: <200707031423.04351.rschulz@sonic.net>

On Tuesday 03 July 2007 14:16, Johannes Luber wrote:
> ...
>
> D:\>java -cp "D:\Install
> Files\ANTLR\antlr-source\bin\org\antlr\runtime" -cp "D:\Install
> Files\ANTLR\antlr-source\bin" -cp "D:\Install
> Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar" -cp "D:\Install
> Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar" org.antlr.Tool

You don't repeat the -cp argument, you include all the directories or 
JAR files in a single -cp option, separating each by a semicolon.

It seems like you're kind of a neophyte at all this. Perhaps some Java 
tutorials are in order before you try something like rebuilding a 
large, sophisticated piece of software.

Why are you rebuilding it, anyway? Did you make some modifications?


> ...
> I'm not


Randall Schulz

From antlr at mirality.co.nz  Tue Jul  3 14:24:35 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Jul 2007 09:24:35 +1200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468ABCB1.60308@gmx.de>
References: <468AB343.60500@gmx.de>
	<CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>
	<468AB68E.6020207@gmx.de> <200707031400.47772.rschulz@sonic.net>
	<468ABCB1.60308@gmx.de>
Message-ID: <20070703212444.84EB111EC01@www.antlr.org>

At 09:16 4/07/2007, Johannes Luber wrote:
 >D:\>java -cp "D:\Install
 >Files\ANTLR\antlr-source\bin\org\antlr\runtime"
 >-cp "D:\Install Files\ANTLR\antlr-source\bin" -cp "D:\Install
 >Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar" -cp "D:\Install
 >Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar" org.antlr.Tool

I don't know what those first bits are supposed to be.  The normal 
command line would be something like this:

java -cp "D:\Install 
Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar;D:\Install 
Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar;D:\Install 
Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar" org.antlr.Tool

(Amend names and paths of .jar files as appropriate.)


From jaluber at gmx.de  Tue Jul  3 14:25:02 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 23:25:02 +0200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <20070703211321.18438gmx1@mx024.gmx.net>
References: <00b901c7bd63$db890330$c704a8c0@hercules> <468A835C.1000408@gmx.de>
	<20070703211321.18438gmx1@mx024.gmx.net>
Message-ID: <468ABEAE.7060608@gmx.de>

Gavin Lambert wrote:
> At 05:11 4/07/2007, Johannes Luber wrote:
>>The location of dbg. dbg is a member of DebugParser, the parent
>>parent class. And in Ecma 334 is written:
>>
>>"A variable initializer for an instance field cannot reference the
>>instance being created. Thus, it is a compile-time error to
>>reference *this* in a variable initializer, as it is a compile-
>>time error for a variable initializer to reference any instance
>>member through a simple-name."
>>
>>The simple-name part is violated.
> 
> That doesn't seem to prohibit base-class fields, though.  They should
> have already been constructed by the time derived class initializers are
> called.
> 
> I guess it's a matter of interpretation, though :)

True. In the strict sense any instance variable is available over
*this*, even if it merely a base class. I suppose the reason is
consistency. A new programmer may be confused may be confused if one
instance variable can be assigned this way, but not another one. I've
tested *base* instead, but *base* may be only used inside of a method,
property, or constructor. What a pity...

Best regards,
Johannes Luber


From open.zone at virgin.net  Tue Jul  3 14:29:43 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 22:29:43 +0100
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <00e301c7bdb7$b66a40b0$c704a8c0@hercules>
Message-ID: <00e401c7bdb9$46d7b690$c704a8c0@hercules>

Oops!

See comment inline...

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Micheal J
> Sent: 03 July 2007 22:18
> To: 'ANTLR Interest'
> Subject: Re: [antlr-interest] How to call self-build ANTLR correctly?
> 
> 
> Hi,
> 
> > Terence Parr wrote:
> > > you need the bin not bin\org\antlr in your path.  Also add
> > the runtime
> > > dir.
> > 
> > I do the following:
> > 
> > D:\>java -cp "D:\Install
> > Files\ANTLR\antlr-source\bin\org\antlr\runtime"
> > "D:\Install Files\ANTLR\antlr-source\bin"\org.antlr.Tool
> > 
> > The output:
> > 
> > Exception in thread "main" java.lang.NoClassDefFoundError:
> > D:\Install Files\ANTLR\antlr-source\bin\org/antlr/Tool
> 
> Try:
> 
> java -cp "D:\Install Files\ANTLR\antlr-source\bin" org.antlr.Tool
> 
> I am assuming the bin directory has (at least) the following 
> structure:
> 
> bin
>  +-org
>     +-antlr
>        +-analysis
>        +-codegen
>        +-misc
>        +-runtime
>        +-test  (optional?)
>        +-tool
> 

I forgot to mention that you are going to need the ANTLR 2.7.7 and the
StringTemplate 3.0.1 jars in your classpath too.

Example:

java -classpath "D:\Install
Files\ANTLR\antlr-source\bin";"D:\path\to\antlr-2.7.7.jar";"D:\path\to\strin
gtemplate-3.0.jar"  org.antlr.Tool


Your ANTLR3 bin directory will also need the resources such as the .sti,
.stg files etc. If it doesn't have to files, add the toplevel source
directory to your class path *after* the 'bin'. It would find the files that
way.

Example:

java -classpath "D:\Install
Files\ANTLR\antlr-source\bin";"D:\path\to\antlr-2.7.7.jar";"D:\path\to\strin
gtemplate-3.0.jar";"D:\Install Files\ANTLR\antlr-source\src"  org.antlr.Tool

> > > 
> > > Does build.xml help?
> > 
> > I have never used ANT, so I have no idea what you could mean
> > with that sentence.
> 
> No harm in trying ANT btw. If it eases the task of 
> (re-)building ANTLR for you. 
> 
> Micheal
> 
> PS	Perhaps someone Nant/MSBuild user might create a Nant 
> (or MSBuild)
> build file based on the build.xml file?
> 
> -----------------------
> The best way to contact me is via the list/forum. My time is 
> very limited.
> 


From jaluber at gmx.de  Tue Jul  3 14:56:41 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 03 Jul 2007 23:56:41 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <200707031423.04351.rschulz@sonic.net>
References: <468AB343.60500@gmx.de>
	<200707031400.47772.rschulz@sonic.net>	<468ABCB1.60308@gmx.de>
	<200707031423.04351.rschulz@sonic.net>
Message-ID: <468AC619.8040906@gmx.de>

Randall R Schulz wrote:
> On Tuesday 03 July 2007 14:16, Johannes Luber wrote:
>> ...
>>
>> D:\>java -cp "D:\Install
>> Files\ANTLR\antlr-source\bin\org\antlr\runtime" -cp "D:\Install
>> Files\ANTLR\antlr-source\bin" -cp "D:\Install
>> Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar" -cp "D:\Install
>> Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar" org.antlr.Tool
> 
> You don't repeat the -cp argument, you include all the directories or 
> JAR files in a single -cp option, separating each by a semicolon.

I tried it without the additional -cps, but still no progress. The
defined CLASSPATH environment could still be the actual culprit.

Addendum: I've incorporated Micheal's idea:

D:\>java -cp "D:\Install
Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar;D:\Install
Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar;D:\Install
Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
Files\ANTLR\antlr-source\src" org.antlr.Tool

No change.
> 
> It seems like you're kind of a neophyte at all this. Perhaps some Java 
> tutorials are in order before you try something like rebuilding a 
> large, sophisticated piece of software.

Not really, but I haven't used Java with additional classpath stuff that
much, so I tend to forget how the details work exactly. Otherwise I
usually work in C#, so my expertise is clearly more in the .NET
environment. I don't like Java personally - Sun made design decisions, I
don't like (and I've forgotten - probably because I repressed them).
Incidentally, C# took C++ in the right direction - and I noticed this
unfortunately a few years later than I could have. (So don't put me
please into the Microsoft fanboy category - the only good thing they did
in the last few years was .NET et al. And that is a personal opinion -
so no flame wars about Java vs. C#, please!)

> Why are you rebuilding it, anyway? Did you make some modifications?

I only want to have an up-to-date C#-Target, so I

A) can see, which code generation errors have been solved and don't have
to manually corrected by me afterwards - again and again.

B) don't have to wait for a daily build. Terence hasn't published one
over three weeks.

Best regards,
Johannes Luber

From open.zone at virgin.net  Tue Jul  3 15:08:11 2007
From: open.zone at virgin.net (Micheal J)
Date: Tue, 3 Jul 2007 23:08:11 +0100
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468AC619.8040906@gmx.de>
Message-ID: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules>

Hi,

> > You don't repeat the -cp argument, you include all the 
> directories or
> > JAR files in a single -cp option, separating each by a semicolon.
> 
> I tried it without the additional -cps, but still no 
> progress. The defined CLASSPATH environment could still be 
> the actual culprit.
> 
> Addendum: I've incorporated Micheal's idea:
> 
> D:\>java -cp "D:\Install 
> Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar;D:\Install
> Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar;D:\Install
> Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
> Files\ANTLR\antlr-source\src" org.antlr.Tool
> 
> No change.

My idea is a little different I think (quote placement errors):

java -cp "D:\Install Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar";"D:\Install
Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar";"D:\Install
Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
Files\ANTLR\antlr-source\src" org.antlr.Tool

If that still doesn't work, try substituting "-classpath" for "-cp" above.

> > Why are you rebuilding it, anyway? Did you make some modifications?
> 
> I only want to have an up-to-date C#-Target, so I
> 
> A) can see, which code generation errors have been solved and 
> don't have to manually corrected by me afterwards - again and again.
> 
> B) don't have to wait for a daily build. Terence hasn't 
> published one over three weeks.

As I posted a while back, I think a daily "daily build" is a great idea.
;-)

Only issue is that it really does need to be tied to a CI server - so it's
easy see if it's kosher by looking for test failures.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From parrt at cs.usfca.edu  Tue Jul  3 15:12:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 Jul 2007 15:12:40 -0700
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <00e201c7bdb6$339eef60$c704a8c0@hercules>
References: <00e201c7bdb6$339eef60$c704a8c0@hercules>
Message-ID: <1B6866E7-1211-4118-AC0D-909AA45F3637@cs.usfca.edu>

On Jul 3, 2007, at 2:07 PM, Micheal J wrote:

> Hi,
>
> Now that the link is accessible, I find I'm looking forward to Andy  
> Tripp's
> opinion of this. I wonder if he reckons it will be a help - were  
> the need to
> arise - to port his current tranlation system to v3.

Andy and I have been discussing my other blog entry talking about  
pattern matching etc...  His experience is invaluable.

As for this tree thing, this is a repeat of something I had in  
Sorcerer I think.

You can do a simple Andy-like rewrite rule based system using this  
TreeWizard i think.  make a file format for it and Andy might even  
like it!

> I haven't tried it but it seems very useful from reading your article.
> Incidentally, I didn't see any attached code (although that may  
> have a lot
> to do with my system).

I just logged out and tried to view...seems to be there...can you try  
again?  You have to hit the attachments tab.

Ter


From jaluber at gmx.de  Tue Jul  3 15:14:47 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 04 Jul 2007 00:14:47 +0200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <468ABEAE.7060608@gmx.de>
References: <00b901c7bd63$db890330$c704a8c0@hercules>
	<468A835C.1000408@gmx.de>	<20070703211321.18438gmx1@mx024.gmx.net>
	<468ABEAE.7060608@gmx.de>
Message-ID: <468ACA57.3000300@gmx.de>

Johannes Luber wrote:
> True. In the strict sense any instance variable is available over
> *this*, even if it merely a base class. I suppose the reason is
> consistency. A new programmer may be confused may be confused if one
> instance variable can be assigned this way, but not another one. I've
> tested *base* instead, but *base* may be only used inside of a method,
> property, or constructor. What a pity...
>

I have to retract that above. In the holy bible Ecma 334 is written:

"When an instance constructor has no constructor initializer, or it has
a constructor initializer of the form base(?), that constructor
implicitly performs the initializations specified by the
variable-initializers of the instance fields declared in its class. This
corresponds to a sequence of assignments that are executed immediately
upon entry to the constructor and before the implicit invocation of the
direct base class constructor. The variable initializers are executed in
the textual order in which they appear in the class
declaration (?17.4.5)."

If I interpret this correctly, instance field initializers are called
before the base class is constructed. Meaning that base access won't be
ever added.

Best regards,
Johannes Luber



From jaluber at gmx.de  Tue Jul  3 15:21:09 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 04 Jul 2007 00:21:09 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules>
References: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules>
Message-ID: <468ACBD5.9070403@gmx.de>

Micheal J wrote:
> My idea is a little different I think (quote placement errors):
> 
> java -cp "D:\Install Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar";"D:\Install
> Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar";"D:\Install
> Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
> Files\ANTLR\antlr-source\src" org.antlr.Tool
> 
> If that still doesn't work, try substituting "-classpath" for "-cp" above.

Tried both, no change. I'll test it tomorrow with no CLASSPATH
environment variable - for now I'll go to bed.
> 
> As I posted a while back, I think a daily "daily build" is a great idea.
> ;-)
> 
> Only issue is that it really does need to be tied to a CI server - so it's
> easy see if it's kosher by looking for test failures.

+1 - the geeky way to support a vote. :)

Best regards,
Johannes Luber


From rschulz at sonic.net  Tue Jul  3 15:23:40 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 3 Jul 2007 15:23:40 -0700
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468ACBD5.9070403@gmx.de>
References: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules> <468ACBD5.9070403@gmx.de>
Message-ID: <200707031523.40782.rschulz@sonic.net>

On Tuesday 03 July 2007 15:21, Johannes Luber wrote:
> Micheal J wrote:
> > My idea is a little different I think (quote placement errors):
> >
> > java -cp "D:\Install
> > Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar";"D:\Install
> > Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar";"D:\Install
> > Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
> > Files\ANTLR\antlr-source\src" org.antlr.Tool
> >
> > If that still doesn't work, try substituting "-classpath" for "-cp"
> > above.
>
> Tried both, no change. I'll test it tomorrow with no CLASSPATH
> environment variable - for now I'll go to bed.

Are you sure the JAR path names are correct?

Are you sure the JAR files contain what they should? You can use 
the "jar" command's "t" or "tv" option to list their content.


> ...
> Johannes Luber


Randall Schulz

From open.zone at virgin.net  Tue Jul  3 16:04:59 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 4 Jul 2007 00:04:59 +0100
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468ACBD5.9070403@gmx.de>
Message-ID: <00eb01c7bdc6$95ad10f0$c704a8c0@hercules>

Hi,

> Micheal J wrote:
> > My idea is a little different I think (quote placement errors):
> > 
> > java -cp "D:\Install 
> > Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar";"D:\Install
> > Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar";"D:\Install
> > Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
> > Files\ANTLR\antlr-source\src" org.antlr.Tool
> > 
> > If that still doesn't work, try substituting "-classpath" for "-cp" 
> > above.
> 
> Tried both, no change. I'll test it tomorrow with no 
> CLASSPATH environment variable - for now I'll go to bed.

What is the exact error message?

If it is still of the "no class found error for org.antlr.Tool" variety
then, I suspect the antlr-3.0.0.jar might not contain the compiled v3 class
files.


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From Stephen_Hardy at rabbit.com  Tue Jul  3 16:10:48 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Tue, 3 Jul 2007 16:10:48 -0700
Subject: [antlr-interest] SEGV when running AST builder in C target, antlr3.0
Message-ID: <62BABE024B7C074E9194E9727A418979C4F03A@dvs-sms-mail01.digi.com>

Jim,

when adding output=AST stuff to the C grammar, the runtime library gets
a seg fault in becomeRoot().  The main problem seems to be that the code
tests pointers for NULL, whereas the pointers are actually getting small
negative numbers because of various consitions in the token stream (such
as empty).  Probably, there needs to be a macro like
IS_NOT_A_POINTER_OR_IS_NULL(newRootTree) etc.

Regards,
SJH

From jimi at temporal-wave.com  Tue Jul  3 16:13:50 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Jul 2007 16:13:50 -0700
Subject: [antlr-interest] Infinite lexer exception allocation loop
	inCtarget C parser, antlr3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F034@dvs-sms-mail01.digi.com>
References: <051466DAA0D608439E196797955018D76E8A@wavemachine.temporal-wave.com>
	<62BABE024B7C074E9194E9727A418979C4F034@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76E92@wavemachine.temporal-wave.com>

Stephen,

The sources are supposed to be retrieved by the distributions tar, not
the source directory. When you expand the tar you will find that the
configure script is already there and you just need to do ./configure
--help and select the options you want (which is basically whether you
want 64 bits support and need archive or shared on AIX).

If you change the C.stg, it needs to be seen before the one in the jar.
Not sure of just how it picks up the precedence without looking at the
string template docs as I just rebuild antrl.jar.

However, I thought of that ;-) so there is:
@preinclude  (lexer:: or parser:: if you need that) which puts anything
in that section before the header includes antlr3.h

And

@includes

Which is inserted after the include of antrl3.h

Though, in general I don't use it like that as you can see from the C
examples. I make a yournamehere.h fir the project, which includes the
generated headers and only include that.

Anyway, I thought that there might be reasons that it was useful that I
had not thought of so I added it :-)


Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hardy, Stephen
> Sent: Tuesday, July 03, 2007 9:29 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Infinite lexer exception allocation loop
> inCtarget C parser, antlr3.0
> 
> Jim,
> 
> thanks for that.  Yeah, I already added the \x support, but it sowed
> the
> seeds of doubt that some other user syntax or lexical error may cause
> the same problem.  I use Fedore core 3, and it seemed to recover by
> killing the task once it asked for all 2Gbytes, but I don't know if XP
> is equally robust.
> 
> BTW, really nice job on the C target.  Much better documentation than
> most open source projects.  I'm really looking forward to the C++
> target, if only to eliminate the explicit passing of the 'this'
> pointer.
> 
> Just a few points:
> 
> 1) I basically had little trouble getting it to work.  The only real
> problem was that the sources don't come with a configure script
already
> built, so one has to use autoconf.  To cut a long story short, I
> eventually gave up on the GNU tools because makefile.in wasn't
> available
> so I couldn't successfully run automake.  It turned out to be easy to
> create a config.h file from scratch, so that's what I ended up doing.
> Nevertheless, you might want to add a working configure script and
> makefile.am's as is done with most source distros, to avoid
> inconvenience to those with back-level autoconf tools.  (Admittedly
I'm
> all at sea with autoconf tools, so it's probably my stupidity).
> 
> 2) Before I realized you had already ported Terrence's C grammar/Java
> target to a C target, I was attempting to do so myself.  While doing
> this, I found out that the @header stuff is put into both the .c and
> the
> .h files.  I really wanted to put the @header stuff in just the .h
file
> (is that unreasonable?) so I decided to tweak the string template
file.
> Lo and behold, the changes to the string templates were not noticed by
> the antlr tool.  What am I missing?  I thought it was just a matter of
> changing
> 
> $(ANTLR_HOME)/src/org/antlr/codegen/templates/C/C.stg
> 
> but it obviously isn't that simple...  Surely I don't have to rebuild
> antlr - that would mean I'd have to get a java compiler - argh!
> 
> Regards,
> SJH
> 
> 
> > -----Original Message-----
> > From: Jim Idle [mailto:jimi at temporal-wave.com]
> > Sent: Monday, July 02, 2007 7:25 PM
> > To: Hardy, Stephen; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Infinite lexer exception
> > allocation loop in Ctarget C parser, antlr3.0
> >
> > I t sounds like an issue with the grammar that exposes an issue in
> the
> > runtime, though something tells me that this may be related to an
> > extremely recent change to deal with something related.
> >
> > Thanks for pointing this out - I will endeavor to fix this tomorrow
> or
> > at least provide an answer/work around (which might be to allow \x
> > sequences ;-).
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Hardy, Stephen
> > > Sent: Monday, July 02, 2007 1:31 PM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Infinite lexer exception
> > allocation loop in
> > > Ctarget C parser, antlr3.0
> > >
> > > Hi all,
> > > I'm tasked with some C-to-C translation, and have been
> > using the ANSI
> > C
> > > grammar with the C target as a starting point, with antlr3.0.
> > >
> > > The grammar inadvertently omits the possibility of using \x (hex)
> > > escapes in a literal string, and this causes an infinite memory
> > > allocation loop when the parser is run against tokens such as
> > > "\x00\x00".  The offending sequence of code is in
> mSTRING_LITERAL(),
> > > which calls mEscapeSequence(), which in turn allocates an
exception
> > > struct (CONSTRUCTEX()) when it fails to understand the \x.
> > > Unfortunately, the calling code is a for(;;) loop which does not
> > > advance
> > > the token stream, hence the lexer will allocate forever.
> > >
> > > Sorry I'm really new to this, so it may be my fault, but it
> > looks like
> > > it may be a C target problem.  Didn't see any similar problem
> > mentioned
> > > in the most recent archive.
> > >
> > > Regards,
> > > SJH
> >

From jimi at temporal-wave.com  Tue Jul  3 16:15:52 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Jul 2007 16:15:52 -0700
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <C2C0598C-F7CF-40AD-AB45-5E322A8BA123@cs.usfca.edu>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu><468A0E15.9020508@gmx.de><A23264D1-CB10-4850-88C6-9A946E41E5F7@wincent.com><468A1D3E.8040901@gmx.de>
	<C2C0598C-F7CF-40AD-AB45-5E322A8BA123@cs.usfca.edu>
Message-ID: <051466DAA0D608439E196797955018D76E93@wavemachine.temporal-wave.com>

Best answer - Switch to twiki now before it is too late ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Tuesday, July 03, 2007 10:24 AM
> To: ANTLR Interest
> Subject: Re: [antlr-interest] Check out TreeWizard
> 
> 
> On Jul 3, 2007, at 2:56 AM, Johannes Luber wrote:
> > Isn't that defeating the spirit of a wiki? To have log on to access
> > some
> > public content? Looks to me, as if Terence clicked on the wrong link
> > somewhere.
> 
> The permissions say "anonymous users can use it".  Checked again.  I
> have no idea why you'd need to be logged in.
> 
> Crap. I note that my blog doesn't appear on home page unless logged
> in.  damn confluence.  Ok, anybody know the answer on the
> permissions  or do I need to make a support ticket?
> 
> Thanks,
> Ter

From rschulz at sonic.net  Tue Jul  3 16:24:24 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 3 Jul 2007 16:24:24 -0700
Subject: [antlr-interest] Check out TreeWizard
In-Reply-To: <051466DAA0D608439E196797955018D76E93@wavemachine.temporal-wave.com>
References: <24EAFEB7-C9E3-456A-B963-883EAABD99E4@cs.usfca.edu>
	<C2C0598C-F7CF-40AD-AB45-5E322A8BA123@cs.usfca.edu>
	<051466DAA0D608439E196797955018D76E93@wavemachine.temporal-wave.com>
Message-ID: <200707031624.24159.rschulz@sonic.net>

On Tuesday 03 July 2007 16:15, Jim Idle wrote:
> Best answer - Switch to twiki now before it is too late ;-)

Do you prefer it to MediaWiki or one of the others? I used TWiki at my 
last job, and I thought it was a little crude.


> Jim


Randall Schulz

From jimi at temporal-wave.com  Tue Jul  3 16:23:37 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Jul 2007 16:23:37 -0700
Subject: [antlr-interest] SEGV when running AST builder in C target,
	antlr3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F03A@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F03A@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76E95@wavemachine.temporal-wave.com>

Not seen that issue and I have some pretty complicated tree building
parsers. However this may be related to a a fix made by a recent change
to ensure that pointers are initialized to NULL at rule starts. Perhaps
that also needs to be assured for the AST.stg too. The changes to ATS
building were a bit close to the release day for comfort really ;-).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hardy, Stephen
> Sent: Tuesday, July 03, 2007 4:11 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] SEGV when running AST builder in C target,
> antlr3.0
> 
> Jim,
> 
> when adding output=AST stuff to the C grammar, the runtime library
gets
> a seg fault in becomeRoot().  The main problem seems to be that the
> code
> tests pointers for NULL, whereas the pointers are actually getting
> small
> negative numbers because of various consitions in the token stream
> (such
> as empty).  Probably, there needs to be a macro like
> IS_NOT_A_POINTER_OR_IS_NULL(newRootTree) etc.
> 
> Regards,
> SJH

From Stephen_Hardy at rabbit.com  Tue Jul  3 16:26:07 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Tue, 3 Jul 2007 16:26:07 -0700
Subject: [antlr-interest] Infinite lexer exception allocation loop
	inCtarget C parser, antlr3.0
In-Reply-To: <051466DAA0D608439E196797955018D76E92@wavemachine.temporal-wave.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F03B@dvs-sms-mail01.digi.com>

Jim...

> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Tuesday, July 03, 2007 4:14 PM
> To: Hardy, Stephen; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Infinite lexer exception 
> allocation loop inCtarget C parser, antlr3.0
> 
> Stephen,
> 
> The sources are supposed to be retrieved by the distributions tar, not
> the source directory. When you expand the tar you will find that the
> configure script is already there and you just need to do ./configure
> --help and select the options you want (which is basically whether you
> want 64 bits support and need archive or shared on AIX).

Hmmmm - must have missed something.  I got the source tar file, unpacked
it, but nary a configure script to be found.  Maybe I got the wrong
tarfile; I'll try again next time.

Regards,
SJH

From jimi at temporal-wave.com  Tue Jul  3 16:27:00 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 3 Jul 2007 16:27:00 -0700
Subject: [antlr-interest] Infinite lexer exception allocation
	loopinCtarget C parser, antlr3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F03B@dvs-sms-mail01.digi.com>
References: <051466DAA0D608439E196797955018D76E92@wavemachine.temporal-wave.com>
	<62BABE024B7C074E9194E9727A418979C4F03B@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76E96@wavemachine.temporal-wave.com>

I'll double check it, but it is nearly beer thirty until Thursday :-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hardy, Stephen
> Sent: Tuesday, July 03, 2007 4:26 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Infinite lexer exception allocation
> loopinCtarget C parser, antlr3.0
> 
> Jim...
> 
> > -----Original Message-----
> > From: Jim Idle [mailto:jimi at temporal-wave.com]
> > Sent: Tuesday, July 03, 2007 4:14 PM
> > To: Hardy, Stephen; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Infinite lexer exception
> > allocation loop inCtarget C parser, antlr3.0
> >
> > Stephen,
> >
> > The sources are supposed to be retrieved by the distributions tar,
> not
> > the source directory. When you expand the tar you will find that the
> > configure script is already there and you just need to do
./configure
> > --help and select the options you want (which is basically whether
> you
> > want 64 bits support and need archive or shared on AIX).
> 
> Hmmmm - must have missed something.  I got the source tar file,
> unpacked
> it, but nary a configure script to be found.  Maybe I got the wrong
> tarfile; I'll try again next time.
> 
> Regards,
> SJH

From Stephen_Hardy at rabbit.com  Tue Jul  3 16:30:06 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Tue, 3 Jul 2007 16:30:06 -0700
Subject: [antlr-interest] SEGV when running AST builder in C target,
	antlr3.0
In-Reply-To: <051466DAA0D608439E196797955018D76E95@wavemachine.temporal-wave.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F03C@dvs-sms-mail01.digi.com>

Jim,

I'm hacking the source to work around it.  Seems that testing for "-1"
as well as null is working, but there are several more places to get
through.

It's not really a complex problem; it happens right away.  

Anyway, don't worry about it for now - go have that beer...

Regards,
SJH


> -----Original Message-----
> From: Jim Idle [mailto:jimi at temporal-wave.com] 
> Sent: Tuesday, July 03, 2007 4:24 PM
> To: Hardy, Stephen; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] SEGV when running AST builder 
> in C target, antlr3.0
> 
> Not seen that issue and I have some pretty complicated tree building
> parsers. However this may be related to a a fix made by a 
> recent change
> to ensure that pointers are initialized to NULL at rule 
> starts. Perhaps
> that also needs to be assured for the AST.stg too. The changes to ATS
> building were a bit close to the release day for comfort really ;-).
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Hardy, Stephen
> > Sent: Tuesday, July 03, 2007 4:11 PM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] SEGV when running AST builder in C target,
> > antlr3.0
> > 
> > Jim,
> > 
> > when adding output=AST stuff to the C grammar, the runtime library
> gets
> > a seg fault in becomeRoot().  The main problem seems to be that the
> > code
> > tests pointers for NULL, whereas the pointers are actually getting
> > small
> > negative numbers because of various consitions in the token stream
> > (such
> > as empty).  Probably, there needs to be a macro like
> > IS_NOT_A_POINTER_OR_IS_NULL(newRootTree) etc.
> > 
> > Regards,
> > SJH
> 

From qwertie256 at gmail.com  Tue Jul  3 18:08:28 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Tue, 3 Jul 2007 19:08:28 -0600
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <200707021808.38720.rschulz@sonic.net>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<200707030019.l630JZ5J001655@morpho.newtechlaw.com>
	<d3992d900707021734j397d91dcp97dc46deed7ba124@mail.gmail.com>
	<200707021808.38720.rschulz@sonic.net>
Message-ID: <ce40b1470707031808l5b3e493ega67fcc88f2787795@mail.gmail.com>

> Isn't this the old Wrox SharpDevelop v1 book?. It was payware when v1 was
> the current version iirc (and Wrox hadn't gone the way of the dodo). I don't
> begrudge the project for that btw, I bought it when it was current,
> must-have info on what made SharpDevelop tick.

Oh. Yes, it's the v1 book. I didn't realize it was initially pay-only.

(someone else)
> Adverbs modify both adjectives and verbs. Hence, hyphenating an adverb
> with an adjective is grammatically incorrect.

I'd say it's more of a punctuation error. I wouldnt call it a
grammar-error I mean consider this "sentence" is grammar really the
problem here? :)

From qwertie256 at gmail.com  Tue Jul  3 18:35:03 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Tue, 3 Jul 2007 19:35:03 -0600
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <ce40b1470707031808l5b3e493ega67fcc88f2787795@mail.gmail.com>
References: <CE8C901B-CDFD-4B2F-BF3C-F3AF29CA747C@cs.usfca.edu>
	<200707030019.l630JZ5J001655@morpho.newtechlaw.com>
	<d3992d900707021734j397d91dcp97dc46deed7ba124@mail.gmail.com>
	<200707021808.38720.rschulz@sonic.net>
	<ce40b1470707031808l5b3e493ega67fcc88f2787795@mail.gmail.com>
Message-ID: <ce40b1470707031835l4cb8d35aw77435718069a3ce4@mail.gmail.com>

>  >I don't understand.
>  >
>  >I've reread the sentence below many times now, and I just can't
> see
>  >how it relates in any way to price. To say "use...is permitted"
>  >implies nothing about price.
>
> Of course not.  The BSD license is all about "free as in liberty",
> not "free as in beer".
>
> In fact, it's perfectly legal and in accordance with the license
> if an up-front purchase is required to get the initial copy of the
> source and/or binary -- it's just that the receiver of said source
> is then at liberty to give it to others without charge or payment
> if they wish, or charge for it if they wish to do that too.

Right! Consequently, were the author to attempt to charge for the
source, it would quickly end up on SourceForge or FreshMeat or some
other repository as a free (as in beer, not just liberty) source
distribution. I have never seen anybody attempt to sell copies of
BSD-licensed source code as a business model. (You could sell GPL
programs too--albeit you'd have to supply the source for free if
requested by someone with the binary--and the same result would
occur.)

It's not fair to look at the matter only theoretically. Practical
reality does matter.

Theoretically I have to agree that ANTLR is 100% open-source.
Practically -- well, I certainly found it hard to use ANTLR without
the book, which the main reason I bought it -- but I wouldn't go so
far as Scott. The fact that many programs are open source, but have no
documentation whatsoever (free or otherwise), should logically imply
that ANTLR--which has more documentation than those--is indeed
open-source. Even though the book is neither open nor source.

Hmmm!

I finally realize that we're beating a dead horse. Time to move on...

From open.zone at virgin.net  Tue Jul  3 18:53:51 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 4 Jul 2007 02:53:51 +0100
Subject: [antlr-interest] [v3] Lack of documentation
In-Reply-To: <ce40b1470707031835l4cb8d35aw77435718069a3ce4@mail.gmail.com>
Message-ID: <00f001c7bdde$2ca21e80$c704a8c0@hercules>

Hi,

> I have never seen anybody 
> attempt to sell copies of BSD-licensed source code as a 
> business model.

I think these did/do:
BSDi
ifax.com (for HylaFAX)

Of course, one buys it from them for the support they proffer...

> Theoretically I have to agree that ANTLR is 100% open-source. 

It is OSS as a matter of fact. Theoretically or otherwise.


Micheal


From win at wincent.com  Wed Jul  4 00:05:07 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 4 Jul 2007 09:05:07 +0200
Subject: [antlr-interest] Infinite lexer exception allocation loop
	inCtarget C parser, antlr3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F03B@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F03B@dvs-sms-mail01.digi.com>
Message-ID: <74A88A1D-ACA3-4CB9-956D-2B4F3D51FE21@wincent.com>

El 4/7/2007, a las 1:26, Hardy, Stephen escribi?:

> Jim...
>
>> -----Original Message-----
>> From: Jim Idle [mailto:jimi at temporal-wave.com]
>> Sent: Tuesday, July 03, 2007 4:14 PM
>> To: Hardy, Stephen; antlr-interest at antlr.org
>> Subject: RE: [antlr-interest] Infinite lexer exception
>> allocation loop inCtarget C parser, antlr3.0
>>
>> Stephen,
>>
>> The sources are supposed to be retrieved by the distributions tar,  
>> not
>> the source directory. When you expand the tar you will find that the
>> configure script is already there and you just need to do ./configure
>> --help and select the options you want (which is basically whether  
>> you
>> want 64 bits support and need archive or shared on AIX).
>
> Hmmmm - must have missed something.  I got the source tar file,  
> unpacked
> it, but nary a configure script to be found.  Maybe I got the wrong
> tarfile; I'll try again next time.

It might also be a problem with FishEye; lately I've found  
reproducible problems with files being missing from the tarball...  
See my post from yesterday:

<http://www.antlr.org/pipermail/antlr-interest/2007-July/ 
022019.html>

The other thing it might be is that you have to look in the */dist/*  
subdirectory and build the runtime from there; something like the  
following (actual version numbers may vary):

tar xvzf antlr-3.0.tar.gz
cd antlr-3.0/runtime/C/dist
tar xzvf libantlr3c-3.0.0-rc8.tar.gz
cd libantlr3c-3.0.0-rc8
./configure
make
sudo make install

Cheers,
Wincent


From antlr at mirality.co.nz  Wed Jul  4 04:52:29 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 04 Jul 2007 23:52:29 +1200
Subject: [antlr-interest] Remote Debugging with C#
In-Reply-To: <468ACA57.3000300@gmx.de>
References: <00b901c7bd63$db890330$c704a8c0@hercules> <468A835C.1000408@gmx.de>
	<20070703211321.18438gmx1@mx024.gmx.net> <468ABEAE.7060608@gmx.de>
	<468ACA57.3000300@gmx.de>
Message-ID: <20070704115238.E026E11EBCD@www.antlr.org>

At 10:14 4/07/2007, Johannes Luber wrote:
 >If I interpret this correctly, instance field initializers are
 >called before the base class is constructed. Meaning that base
 >access won't be ever added.

Um, yes, that's true.  I suspect I've been wearing my C++ hat too 
long :)

And the almighty Reflector agrees as well -- the basic order of 
any instance constructor seems to be:

1. initialise local fields
2. call base class constructor (which starts at #1 in the base 
class)
3. execute constructor body

Seems like an odd way to do it, actually, but So It Is Written ;)

(Actually that's not quite true.  Any constructor that uses a 
this(...) reference instead of a base(...) reference [or nothing] 
skips #1, so the initialisations are only done once.  Which does 
make sense.)


From liviu.u at gmail.com  Wed Jul  4 09:27:24 2007
From: liviu.u at gmail.com (Liviu U)
Date: Wed, 4 Jul 2007 19:27:24 +0300
Subject: [antlr-interest] C# code generation problem: skip() is not valid ...
Message-ID: <c522653d0707040927y72b57b97q277ac7c1b1b491e8@mail.gmail.com>

Hi guys,

I was very optimistic after antlr3 was realesed. Now I seem to have problem
with a small grammar.
Is there a solution for this error ( the problem is at C# code generation )?
Commenting "skip()" will affect the logic of the parser or lexer?


Regards
Liviu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/42424a82/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: CSharpParser.g
Type: application/octet-stream
Size: 1794 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/42424a82/attachment.obj 

From aliaazimi at yahoo.com  Wed Jul  4 12:42:14 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 4 Jul 2007 12:42:14 -0700 (PDT)
Subject: [antlr-interest] newbie question
Message-ID: <448233.67024.qm@web58104.mail.re3.yahoo.com>

Hi,
   
  How can I use apostrophe in antlr grammar? Obviously, I can not use ' ' '. 
   
  Thank you very much in advance
   
  Best wishes,
   
  Ali
   

 
---------------------------------
Sucker-punch spam with award-winning protection.
 Try the free Yahoo! Mail Beta.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/592e873b/attachment.html 

From rschulz at sonic.net  Wed Jul  4 12:49:30 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 4 Jul 2007 12:49:30 -0700
Subject: [antlr-interest] newbie question
In-Reply-To: <448233.67024.qm@web58104.mail.re3.yahoo.com>
References: <448233.67024.qm@web58104.mail.re3.yahoo.com>
Message-ID: <200707041249.30942.rschulz@sonic.net>

On Wednesday 04 July 2007 12:42, ali azimi wrote:
> Hi,
>
>   How can I use apostrophe in antlr grammar? Obviously, I can not use
> ' ' '.

Use the usual C / C++ / Java escape character, backslash before the 
quote mark you want to include in a string: '\''



Randall Schulz

From open.zone at virgin.net  Wed Jul  4 13:08:13 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 4 Jul 2007 21:08:13 +0100
Subject: [antlr-interest] C# code generation problem: skip() is not
	valid ...
In-Reply-To: <c522653d0707040927y72b57b97q277ac7c1b1b491e8@mail.gmail.com>
Message-ID: <010701c7be77$0de64950$c704a8c0@hercules>

Hi,
 
"skip()" should be changed to "Skip()" if you are using the C# runtime.
 
 
Micheal
 
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 04 July 2007 17:27
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# code generation problem: skip() is not valid
...


Hi guys,

I was very optimistic after antlr3 was realesed. Now I seem to have problem
with a small grammar.
Is there a solution for this error ( the problem is at C# code generation )?
Commenting "skip()" will affect the logic of the parser or lexer? 


Regards
Liviu


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/d73423f2/attachment.html 

From jaluber at gmx.de  Wed Jul  4 14:05:26 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 04 Jul 2007 23:05:26 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <200707031523.40782.rschulz@sonic.net>
References: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules> <468ACBD5.9070403@gmx.de>
	<200707031523.40782.rschulz@sonic.net>
Message-ID: <468C0B96.3030104@gmx.de>

Randall R Schulz wrote:
> On Tuesday 03 July 2007 15:21, Johannes Luber wrote:
>> Micheal J wrote:
>>> My idea is a little different I think (quote placement errors):
>>>
>>> java -cp "D:\Install
>>> Files\ANTLR\antlr-3.0\lib\antlr-3.0.0.jar";"D:\Install
>>> Files\ANTLR\antlr-3.0\lib\antlr-2.7.7.jar";"D:\Install
>>> Files\ANTLR\antlr-3.0\lib\stringtemplate-3.0.jar";"D:\Install
>>> Files\ANTLR\antlr-source\src" org.antlr.Tool
>>>
>>> If that still doesn't work, try substituting "-classpath" for "-cp"
>>> above.
>> Tried both, no change. I'll test it tomorrow with no CLASSPATH
>> environment variable - for now I'll go to bed.
> 
> Are you sure the JAR path names are correct?
> 
> Are you sure the JAR files contain what they should? You can use 
> the "jar" command's "t" or "tv" option to list their content.

Damn! I entered antlr-3.0.0.jar instead antlr-3.0.jar. No wonder that it
never worked. My apologies for wasted several hours of the lifetimes of
the participants. :( And my thanks for your efforts - otherwise I would
have tried to run ANTLR on .NET via IKVM. I shudder only at the thought
of doing so - only more bugs and configuration mistakes to squish...

So, onto my next problem: The regenerated files are identical. A quick
comparison showed, that ASTDbg.stg is identical. For whatever reason I
seem to have compiled an old version despite using Fisheye. Is Fisheye
acting up or what do I have to do to get the latest source?

Best regards,
Johannes Luber

From open.zone at virgin.net  Wed Jul  4 14:05:26 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 4 Jul 2007 22:05:26 +0100
Subject: [antlr-interest] C# code generation problem: skip() is not
	valid ...
In-Reply-To: <c522653d0707041355t6eff691rdb3104b884e361de@mail.gmail.com>
Message-ID: <011201c7be7f$0d825dc0$c704a8c0@hercules>

Hi,
 
AntlrWorks is not to blame - you need to change your grammar file: search
for "skip()" and replace with "Skip()" if your target language is C#.
 
As for the error handling, look on the wiki or, try the ANTLR book. This
excerpt should help: http://media.pragprog.com/titles/tpantlr/errors.pdf
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: Liviu U [mailto:liviu.u at gmail.com] 
Sent: 04 July 2007 21:55
To: Micheal J
Subject: Re: [antlr-interest] C# code generation problem: skip() is not
valid ...


Excellent now it works ( Please does someone want to fix antlrwork?
Everytime i regenerate my code i have to correct that "skip" );
BUT...

CSharpParserLexer lexer = new CSharpParserLexer(new
ANTLRStringStream(code)); 
            CSharpParserParser parser = new CSharpParserParser(new
CommonTokenStream(lexer));
            CSharpParserParser.prog_return ret = parser.prog();

DOES SWALLOW ERRORS!  if input file is wrong how should I detect that an
error occured? I've been looking for some events, but nothing's there... 
Does anybody have a clue?

PS: Even in ANTLRWORKS, the execution does not BREAK on errors!



On 7/4/07, Micheal J < open.zone at virgin.net <mailto:open.zone at virgin.net> >
wrote: 

Hi,
 
"skip()" should be changed to "Skip()" if you are using the C# runtime.
 
 
Micheal
 
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:
<mailto:antlr-interest-bounces at antlr.org> antlr-interest-bounces at antlr.org]
On Behalf Of Liviu U
Sent: 04 July 2007 17:27
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# code generation problem: skip() is not valid
...


Hi guys,

I was very optimistic after antlr3 was realesed. Now I seem to have problem
with a small grammar.
Is there a solution for this error ( the problem is at C# code generation )?
Commenting "skip()" will affect the logic of the parser or lexer? 


Regards
Liviu



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/7f72c7af/attachment.html 

From open.zone at virgin.net  Wed Jul  4 14:18:46 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 4 Jul 2007 22:18:46 +0100
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <468C0B96.3030104@gmx.de>
Message-ID: <011b01c7be80$eda45650$c704a8c0@hercules>

Hi,

> Damn! I entered antlr-3.0.0.jar instead antlr-3.0.jar. No 
> wonder that it never worked. My apologies for wasted several 
> hours of the lifetimes of the participants. :( And my thanks 
> for your efforts - otherwise I would have tried to run ANTLR 
> on .NET via IKVM.

Do try IKVM once you're comfortable with rebuilding ANTLR...  ;-)

> I shudder only at the thought of doing so - 
> only more bugs and configuration mistakes to squish...
> 
> So, onto my next problem: The regenerated files are 
> identical. A quick comparison showed, that ASTDbg.stg is 
> identical. For whatever reason I seem to have compiled an old 
> version despite using Fisheye. Is Fisheye acting up or what 
> do I have to do to get the latest source?

Is ASTDbg.stg same as that on fisheye's browse interface?

Send me a copy of your downloaded ANTLR source archive (can I assume it has
the same contents as the source dir you built from?). I'll compare with
depot over the weekend. That should clarify if this is a fisheye stale
download issue. If you also send grammar + generated files, I'll re-generate
here and compare those too.

Micheal


From rschulz at sonic.net  Wed Jul  4 14:21:59 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 4 Jul 2007 14:21:59 -0700
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
Message-ID: <200707041421.59933.rschulz@sonic.net>

Hi,

I just debugged a problem in my parser. I had rule in a tree parser that 
looked roughly like this:

term
[ returns Term t ]
   :   ^( ComplexTerm term termSequence )
	{
	    ...
	    Function function = asFunction($term.t)
	    ...
	}
   ;


What I found happening with this rule was that asFunction() was always 
being called with null.

When I changed the rule like this:

term
[ returns Term t ]
   :   ^( ComplexTerm funcTerm = term termSequence )
	{
	    ...
	    Function function = asFunction($funcTerm.t)
	    ...
	}
   ;


everything works. Looking at the generated Java code, I saw that the 
argument to asFunction() in the incorrectly functioning rule was 
just "t", which is the locally declared variable that holds the rule's 
result / return value. In the second, working form of the rule, the 
argument to asFunction() is "funcTerm" (a local variable declared to 
hold the result of the recursive call to the "term" rule, of course).


So was ANTLR mistaken by the recursive use of the "term" rule, or was I 
mistaken in expecting the reference to $term.t to refer to the most 
closely enclosing (recursive) right-hand-side use of the "term" rule?


Randall Schulz

From open.zone at virgin.net  Wed Jul  4 14:59:09 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 4 Jul 2007 22:59:09 +0100
Subject: [antlr-interest] C# code generation problem: skip() is not
	valid ...
In-Reply-To: <c522653d0707041423k3011f6b5radcfc6b4fe2901c0@mail.gmail.com>
Message-ID: <011e01c7be86$8e34ab60$c704a8c0@hercules>

Hi,
 
Search/browse the list archives for recent discussions about remote
debugging, C# and AntlrWorks. The behaviour you are seeing is documented.
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: Liviu U [mailto:liviu.u at gmail.com] 
Sent: 04 July 2007 22:23
To: Micheal J
Subject: Re: [antlr-interest] C# code generation problem: skip() is not
valid ...


;) The annoying thing is that debugging works in ANTLR only after i comment
the option .... and the C# custom code!!!!


On 7/5/07, Micheal J < open.zone at virgin.net <mailto:open.zone at virgin.net> >
wrote: 

Hi,
 
AntlrWorks is not to blame - you need to change your grammar file: search
for "skip()" and replace with "Skip()" if your target language is C#.
 
As for the error handling, look on the wiki or, try the ANTLR book. This
excerpt should help: http://media.pragprog.com/titles/tpantlr/errors.pdf

 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 



-----Original Message-----
From: Liviu U [mailto:liviu.u at gmail.com] 
Sent: 04 July 2007 21:55
To: Micheal J
Subject: Re: [antlr-interest] C# code generation problem: skip() is not
valid ...


Excellent now it works ( Please does someone want to fix antlrwork?
Everytime i regenerate my code i have to correct that "skip" );
BUT...

CSharpParserLexer lexer = new CSharpParserLexer(new
ANTLRStringStream(code)); 
            CSharpParserParser parser = new CSharpParserParser(new
CommonTokenStream(lexer));
            CSharpParserParser.prog_return ret = parser.prog();

DOES SWALLOW ERRORS!  if input file is wrong how should I detect that an
error occured? I've been looking for some events, but nothing's there... 
Does anybody have a clue?

PS: Even in ANTLRWORKS, the execution does not BREAK on errors!



On 7/4/07, Micheal J <  <mailto:open.zone at virgin.net> open.zone at virgin.net>
wrote: 

Hi,
 
"skip()" should be changed to "Skip()" if you are using the C# runtime.
 
 
Micheal
 
-----------------------
The best way to contact me is via the list/forum. My time is very limited. 


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:
<mailto:antlr-interest-bounces at antlr.org> antlr-interest-bounces at antlr.org]
On Behalf Of Liviu U
Sent: 04 July 2007 17:27
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# code generation problem: skip() is not valid
...


Hi guys,

I was very optimistic after antlr3 was realesed. Now I seem to have problem
with a small grammar.
Is there a solution for this error ( the problem is at C# code generation )?
Commenting "skip()" will affect the logic of the parser or lexer? 


Regards
Liviu




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/87341af7/attachment-0001.html 

From liviu.u at gmail.com  Wed Jul  4 15:02:36 2007
From: liviu.u at gmail.com (Liviu U)
Date: Thu, 5 Jul 2007 01:02:36 +0300
Subject: [antlr-interest] Tree walking
Message-ID: <c522653d0707041502j100cb435n3f5efa072993896d@mail.gmail.com>

Hi guys,

Is there a default way to walk a CommonTreeStream in C#?  I don't want to
define a new shadow file for the tree walker as i saw in some examples...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/367894ea/attachment.html 

From kroepke at classdump.org  Wed Jul  4 15:44:32 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 00:44:32 +0200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <200707041421.59933.rschulz@sonic.net>
References: <200707041421.59933.rschulz@sonic.net>
Message-ID: <0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>


On Jul 4, 2007, at 11:21 PM, Randall R Schulz wrote:

> So was ANTLR mistaken by the recursive use of the "term" rule, or  
> was I
> mistaken in expecting the reference to $term.t to refer to the most
> closely enclosing (recursive) right-hand-side use of the "term" rule?

mmmh. For a parser (not tree parser) I can explain the situation,  
sort of, I think...
Could you post (or send privately) your grammar?

It's too late for me to come up with a test case ;)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Jul  4 15:52:35 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 00:52:35 +0200
Subject: [antlr-interest] CI server & test builds (was: Re: How to call
	self-build ANTLR correctly?)
In-Reply-To: <468ACBD5.9070403@gmx.de>
References: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules> <468ACBD5.9070403@gmx.de>
Message-ID: <321BEB0A-A85E-48CE-B4E8-712E6B42494C@classdump.org>

Hi guys!

On Jul 4, 2007, at 12:21 AM, Johannes Luber wrote:

>> As I posted a while back, I think a daily "daily build" is a great  
>> idea.
>> ;-)
>>
>> Only issue is that it really does need to be tied to a CI server -  
>> so it's
>> easy see if it's kosher by looking for test failures.
>
> +1 - the geeky way to support a vote. :)

Do you have suggestions for a CI server? I might be willing to give  
it a try,
maybe even on my private server (still publicly accessible of course).
But I'm not willing to spend hours of test-driving the probably  
gazillions
of half-implemented, almost abandoned CI projects out there ;)

thanks,
-k
-- 
Kay R?pke
http://classdump.org/





From aliaazimi at yahoo.com  Wed Jul  4 15:53:18 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 4 Jul 2007 15:53:18 -0700 (PDT)
Subject: [antlr-interest] newbie question
Message-ID: <841676.22647.qm@web58110.mail.re3.yahoo.com>

Hi,
   
  The followings are part of the grammar I have written. When I try to generate code, two error messages appears which I have mentioned them at the bottom. Could you please tell me why?
   
  Thank you very much in advance
   
  word    :(alphanumeric|.)*alphanumeric(alphanumeric|.)*
              ;
  alphanumeric
              :uppercase||national|lowercase|decimaldigit
              ;
  decimaldigit
              :'a'..'z'
              ;
  national
              :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~'
              ;
  lowercase
              :'a'|..|'z'  
              ;
  uppercase
              :'A'|..|'Z'
              ;
   
  [23:46:43] error(100): signaltaskDecision.g:368:7: syntax error: antlr: signaltaskDecision.g:368:7: unexpected token: ..
  [23:46:43] error(100): signaltaskDecision.g:372:7: syntax error: antlr: signaltaskDecision.g:372:7: unexpected token: ..
   
  Best wishes,
  Al

       
---------------------------------
Get the Yahoo! toolbar and be alerted to new email wherever you're surfing. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/50d88c5b/attachment.html 

From rschulz at sonic.net  Wed Jul  4 15:57:21 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 4 Jul 2007 15:57:21 -0700
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
References: <200707041421.59933.rschulz@sonic.net>
	<0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
Message-ID: <200707041557.21583.rschulz@sonic.net>

On Wednesday 04 July 2007 15:44, Kay Roepke wrote:
> On Jul 4, 2007, at 11:21 PM, Randall R Schulz wrote:
> > So was ANTLR mistaken by the recursive use of the "term" rule, or
> > was I mistaken in expecting the reference to $term.t to refer to the
> > most closely enclosing (recursive) right-hand-side use of the "term"
> > rule?
>
> mmmh. For a parser (not tree parser) I can explain the situation,
> sort of, I think...
> Could you post (or send privately) your grammar?

Is there more to it than what I showed? It seems pretty self-contained 
to me.

The only rule referred to there but not included in my excerpt has this 
intro:

termSequence
returns [ List<Term> ts ]


Everything else is either an application type (Term, Function) or a 
token (ComplexType).


> ...
> -k


Randall Schulz

From rschulz at sonic.net  Wed Jul  4 16:01:55 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 4 Jul 2007 16:01:55 -0700
Subject: [antlr-interest] newbie question
In-Reply-To: <841676.22647.qm@web58110.mail.re3.yahoo.com>
References: <841676.22647.qm@web58110.mail.re3.yahoo.com>
Message-ID: <200707041601.55686.rschulz@sonic.net>

On Wednesday 04 July 2007 15:53, ali azimi wrote:
> Hi,
>
>   The followings are part of the grammar I have written. When I try
> to generate code, two error messages appears which I have mentioned
> them at the bottom. Could you please tell me why?

Ah. A classic. It happened to me not only the first time I wrote an 
ANTLR grammar, but the second time as well, which was after months away 
from ANTLR for a few months.

Anyway, lexical rule names must start with an upper-case letter. Grammar 
productions must start with a lower-case letter.


..
>
>   Best wishes,
>   Al


Randall Schulz

From kroepke at classdump.org  Wed Jul  4 16:22:07 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 01:22:07 +0200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <200707041557.21583.rschulz@sonic.net>
References: <200707041421.59933.rschulz@sonic.net>
	<0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
	<200707041557.21583.rschulz@sonic.net>
Message-ID: <BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>


On Jul 5, 2007, at 12:57 AM, Randall R Schulz wrote:

> Is there more to it than what I showed? It seems pretty self-contained
> to me.

Yeah, sorry. :)

> The only rule referred to there but not included in my excerpt has  
> this
> intro:
>
> termSequence
> returns [ List<Term> ts ]
>
>
> Everything else is either an application type (Term, Function) or a
> token (ComplexType).

Ok, given this cooked up grammar:

------------------------------------
tree grammar Attr;

options {
	ASTLabelType=CommonTree;
}
@treeparser::members {

class Term {
	public Term() { }
}

public Object asObject(Term t) {
	System.err.println("Received term");
}
}

term returns [Term t]
	:	^(ComplexTerm term termSequence)
	{
		Object o = asObject($term.t);
	}
	;

termSequence
returns [ List<Term> ts ]
@init {
	ts = new List<Term>();
}
	:  (t=term {ts.add($t.text);})
	;
	
start
	:	term
	;

------------------------------------

Everything looks well from my perspective.
The code fragment in question reads :
------------------------------------

     // $ANTLR start term
     // Attr.g:17:1: term returns [Term t] : ^( ComplexTerm term  
termSequence ) ;
     public final term_return term() throws RecognitionException {
         term_return retval = new term_return();
         retval.start = input.LT(1);

         try {
             // Attr.g:18:4: ( ^( ComplexTerm term termSequence ) )
             // Attr.g:18:4: ^( ComplexTerm term termSequence )
             {
             match(input,ComplexTerm,FOLLOW_ComplexTerm_in_term37);

             match(input, Token.DOWN, null);
             pushFollow(FOLLOW_term_in_term39);
             term();
             _fsp--;

             pushFollow(FOLLOW_termSequence_in_term41);
             termSequence();
             _fsp--;


             match(input, Token.UP, null);

             		Object o = asObject(retval.t);
             	

             }

         }
         catch (RecognitionException re) {
             reportError(re);
             recover(input,re);
         }
         finally {
         }
         return retval;
     }
     // $ANTLR end term
------------------------------------

Notice how it references retval.t in my version. I think this is a  
bug in the actionparser
code. It should warn you that $term.t will refer to the rule's return  
value and not the subtree
reference's retval object.

I wonder why it just put a t in your output?
For that reason it'd be helpful to see the actual grammar that caused  
this...

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Wed Jul  4 16:31:51 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 01:31:51 +0200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
References: <200707041421.59933.rschulz@sonic.net>
	<0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
	<200707041557.21583.rschulz@sonic.net>
	<BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
Message-ID: <DC216D6B-66C0-4C59-B4A2-0E61A3FA7F9D@classdump.org>


On Jul 5, 2007, at 1:22 AM, Kay Roepke wrote:

> I think this is a bug in the actionparser
> code. It should warn you that $term.t will refer to the rule's  
> return value and not the subtree
> reference's retval object.

Let me rephrase this:

I think it is a shortcoming in the ActionParser code. It should warn  
you that $term.t will refer to the rule's return value if a subtree  
of the same name is actually visible to the action.

"Bug" just sounded too harsh... ;)

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Wed Jul  4 17:15:00 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 4 Jul 2007 17:15:00 -0700
Subject: [antlr-interest] newbie question
In-Reply-To: <324271.19474.qm@web58115.mail.re3.yahoo.com>
References: <324271.19474.qm@web58115.mail.re3.yahoo.com>
Message-ID: <200707041715.00201.rschulz@sonic.net>

On Wednesday 04 July 2007 16:13, ali azimi wrote:
> Dear Randall,
>
>   Thank you so much. I am very grateful for all the help you have
> provided me.

I'm happy to help.

Now perhaps you could help others in turn.

Messages to mailing lists with subjects like "newbie question" (you've 
sent two of these today!) are very uninformative. It's far preferable 
to put something specific in the subject. For example, for your first 
question, something like "How do I include an apostrophe in a quoted 
string?" would be suitable. For the second one (harder, admittedly) 
perhaps "Help understanding ANTLR syntax error" (since that' really all 
you have to go on, I take it).

Please try to keep in mind that mailing lists are not just 
ephemeral, "stream of consciousness" things, but rather permanent 
records of the attempts of a community of users' to use some particular 
software. When people use Google or other search service to look for 
help before themselves resorting to a list posting, meaningful subject 
headers will help them find knowledge that's already out there. That's 
something we all prefer to do, right? Help ourselves? Avoid burdening 
others?


> ...
>
>   Al


Randall Schulz

From aliaazimi at yahoo.com  Wed Jul  4 17:22:12 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 4 Jul 2007 17:22:12 -0700 (PDT)
Subject: [antlr-interest] newbie problem
Message-ID: <132897.37752.qm@web58115.mail.re3.yahoo.com>

Dear all,
   
  When I try to generate code from my grammar I get the following errors. Where can I get more information about left-recursive problems? And how can I remedy them? 
   
  [00:15:36] Aborting because the following rules are mutually left-recursive:
      [elementextract, infixexpression, expression, fieldextract]
      [fieldmodify, elementmodify, variable]            ;
  variable:fieldmodify|elementmodify|variableidentifier       
              ;
   The followings are the part of grammar which I think, have problems.
   
  elementmodify
              :variable'('expression(','expression)*')'
              ;
   
  fieldmodify
              :variable'!'fieldname
              ;
   
  expression 
              :literalidentifier|synonymidentifier|variableidentifier|fieldextract|elementextract|infixexpression|parenthesisexpression|operatorapplication|
              valuemake|imperativeoperator|conditionalexpression|forallname|spellingexpression
              ;
  infixexpression
              :expression dyadicoperator expression
              |monadicoperator expression
              ;
   
  elementextract
              :expression '('expression (',' expression)*')'
              ;
   
  fieldextract
              :expression '!'fieldname
              ;
   
  Thank you very much in advance,
   
  Al

 
---------------------------------
Expecting? Get great news right away with email Auto-Check.
Try the Yahoo! Mail Beta.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070704/c773abed/attachment-0001.html 

From kroepke at classdump.org  Wed Jul  4 17:40:02 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 02:40:02 +0200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <DC216D6B-66C0-4C59-B4A2-0E61A3FA7F9D@classdump.org>
References: <200707041421.59933.rschulz@sonic.net>
	<0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
	<200707041557.21583.rschulz@sonic.net>
	<BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
	<DC216D6B-66C0-4C59-B4A2-0E61A3FA7F9D@classdump.org>
Message-ID: <9A169FE0-22F3-4B9F-BE6B-4817399583F6@classdump.org>


On Jul 5, 2007, at 1:31 AM, Kay Roepke wrote:

> I think it is a shortcoming in the ActionParser code. It should  
> warn you that $term.t will refer to the rule's return value if a  
> subtree of the same name is actually visible to the action.
>
> "Bug" just sounded too harsh... ;)

Love talking to myself :)

FYI,
I have a patch for this, it's a bit ugly right now because it has to  
iterate over all rule refs in all visible alts and count those  
without labels.
Apparently there's no mapping available to get all labels for a rule  
in an alt. Guess Ter never needed that yet :) For performance this  
should be available, or even better we could restructure things a  
bit, so that this kind of information doesn't have to live in  
LinkedHashMaps all over the place...

Anyway, this patch needs two things:

1) Attention - need to create a warning in ErrorManager
2) Approval - Ter must say "yes" or "no" ;)

At the latest we'll sort it out during my vacation :)

A quick summary:
What happens is that ANTLR sees the return value member first and  
decides to use that instead of the rule reference. My patch adds code  
to look for unlabeled rule references with the same name (i.e.  
recursive invocations) and warns if there is at least one without a  
label.
Currently it says:
"retval member term.t masks rule ref [@-1,24:27='term',<0>,0:-1]  
retval attribute access"

And no, that won't be actual wording ;)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From rdclark at gmail.com  Wed Jul  4 22:14:12 2007
From: rdclark at gmail.com (Richard Clark)
Date: Wed, 4 Jul 2007 22:14:12 -0700
Subject: [antlr-interest] newbie question
In-Reply-To: <841676.22647.qm@web58110.mail.re3.yahoo.com>
References: <841676.22647.qm@web58110.mail.re3.yahoo.com>
Message-ID: <d3992d900707042214ka368803g4f22d7c15b64a594@mail.gmail.com>

You need to change two things:

1) As Randall noted, lexer rules need to start with an upercase letter.
2) You have a small problem in your character ranges. You're writing
"|..|" which doesn't make sense. "|" means "or" and ".." means "a
range between...". So, try this:

word    :(ALPHANUMERIC |.)* ALPHANUMERIC(ALPHANUMERIC |.)*
            ;

fragment
ALPHANUMERIC
            :UPPERCASE|NATIONAL|LOWERCASE|DECIMALDIGIT
            ;

fragment
DECIMALDIGIT
            :'a'..'z'
            ;

fragment
NATIONAL
            :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~'
            ;

fragment
LOWERCASE
            :'a'..'z'
            ;
fragment
UPPERCASE
            :'A'..'Z'
            ;

Also, I labeled most of your lexer rules with "fragment" as you
probably want to use them as part of another token, not as a token by
itself.

 ...Richard

From stefan.wohlgemuth at aloba.ch  Wed Jul  4 23:47:34 2007
From: stefan.wohlgemuth at aloba.ch (Stefan Wohlgemuth)
Date: Thu, 05 Jul 2007 08:47:34 +0200
Subject: [antlr-interest] Fixed length tokens again
Message-ID: <468C9406.2050703@aloba.ch>

Is there a way to define tokens which have a fixed length?
Say I would like to define a lexer rule N3 which defines a token of
three and another N4 of four numeric characters.

Something like this:

test: N3 N4;

N3:  Digit Digit Digit;         //  This in combination with N4 does not
work
N4:  Digit Digit Digit Digit; //

fragment
Digit: '0'..'9'


Thanks


-- 
aloba ag
Lyssachstrasse 15
CH-3400 Burgdorf


From win at wincent.com  Thu Jul  5 00:12:25 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 5 Jul 2007 09:12:25 +0200
Subject: [antlr-interest] newbie problem
In-Reply-To: <132897.37752.qm@web58115.mail.re3.yahoo.com>
References: <132897.37752.qm@web58115.mail.re3.yahoo.com>
Message-ID: <15AC9103-872E-4006-9CB1-5F1810B0ED3C@wincent.com>

El 5/7/2007, a las 2:22, ali azimi escribi?:

>   When I try to generate code from my grammar I get the following  
> errors. Where can I get more information about left-recursive  
> problems? And how can I remedy them?

Googling for 'ANTLR "left-recursion"' yielded some useful results.  
For example, this post from last month:

<http://www.antlr.org/pipermail/antlr-interest/2007-June/ 
021116.html>

Wincent


From win at wincent.com  Thu Jul  5 00:33:01 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 5 Jul 2007 09:33:01 +0200
Subject: [antlr-interest] Fixed length tokens again
In-Reply-To: <468C9406.2050703@aloba.ch>
References: <468C9406.2050703@aloba.ch>
Message-ID: <C14A329D-3518-4DB8-B913-A72022D16CEB@wincent.com>

El 5/7/2007, a las 8:47, Stefan Wohlgemuth escribi?:

> Is there a way to define tokens which have a fixed length?
> Say I would like to define a lexer rule N3 which defines a token of
> three and another N4 of four numeric characters.
>
> Something like this:
>
> test: N3 N4;
>
> N3:  Digit Digit Digit;         //  This in combination with N4  
> does not
> work
> N4:  Digit Digit Digit Digit; //
>
> fragment
> Digit: '0'..'9'

Those rules are ambiguous... how does ANTLR know what to match for  
input like "012345678912"? It could match either four N3 tokens, or  
three N4 tokens.

One way to address the ambiguity might be to use syntactic predicates:

tokens {
   N3;
   N4;
}

N : (Digit Digit Digit Digit)=> Digit Digit Digit Digit { $type = N4; }
   | Digit Digit Digit { $type = N3; }
   ;

Cheers,
Wincent


From liviu.u at gmail.com  Thu Jul  5 01:36:21 2007
From: liviu.u at gmail.com (Liviu U)
Date: Thu, 5 Jul 2007 11:36:21 +0300
Subject: [antlr-interest] PARSER TREE question
Message-ID: <c522653d0707050136s1bd71abeh8e96e46b865d6dca@mail.gmail.com>

Hi,

 After parsing the resulting tree is in linear form. How to transform it in
a real tree? I mean, how to determine parents children etc?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/b58bac68/attachment.html 

From liviu.u at gmail.com  Thu Jul  5 01:54:11 2007
From: liviu.u at gmail.com (Liviu U)
Date: Thu, 5 Jul 2007 11:54:11 +0300
Subject: [antlr-interest] tree grammar...
Message-ID: <c522653d0707050154s184721ao344056b029b2d0d3@mail.gmail.com>

Can a tree grammar be defined in the same file as the grammar itself?
It seems to me awkward to have to sync two files and generate code twice....
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/4f499dcb/attachment.html 

From jaluber at gmx.de  Thu Jul  5 02:00:44 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 05 Jul 2007 11:00:44 +0200
Subject: [antlr-interest] tree grammar...
In-Reply-To: <c522653d0707050154s184721ao344056b029b2d0d3@mail.gmail.com>
References: <c522653d0707050154s184721ao344056b029b2d0d3@mail.gmail.com>
Message-ID: <468CB33C.50407@gmx.de>

Liviu U wrote:
> Can a tree grammar be defined in the same file as the grammar itself?
> It seems to me awkward to have to sync two files and generate code twice....

To my knowledge, no. The only combined grammars are lexer and parser
grammar combined. And consider that tree grammars are full grammars
themselves - they have a separate start rule, like the parser, but
unlike the lexer, which is more an extension of the parser. Furthermore,
the ASTs may need several passes to be fully constructed.

Best regards,
Johannes Luber

From liviu.u at gmail.com  Thu Jul  5 02:34:38 2007
From: liviu.u at gmail.com (Liviu U)
Date: Thu, 5 Jul 2007 12:34:38 +0300
Subject: [antlr-interest] C# generated code refering rules
Message-ID: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>

Hi guys,

ANTLR generates cryptic names for rules (TokenTypes). T1...T9.

when I check the TreeNode token type it is an integer and I would have like
to compare it against constant FORLOOP than against T23.

Do i miss something here?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/46127ca4/attachment.html 

From jaluber at gmx.de  Thu Jul  5 03:11:33 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 05 Jul 2007 12:11:33 +0200
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>
References: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>
Message-ID: <468CC3D5.4070600@gmx.de>

Liviu U wrote:
> Hi guys,
> 
> ANTLR generates cryptic names for rules (TokenTypes). T1...T9.
> 
> when I check the TreeNode token type it is an integer and I would have
> like to compare it against constant FORLOOP than against T23.
> 
> Do i miss something here?

Strange - usually the token type has the the same name as the rule. Are
you looking in the appropriate .tokens file or looking in the generated
source code?

Best regards,
Johannes Luber

From antlr at mirality.co.nz  Thu Jul  5 04:35:35 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 05 Jul 2007 23:35:35 +1200
Subject: [antlr-interest] CI server & test builds (was: Re: How to call
 self-build ANTLR correctly?)
In-Reply-To: <321BEB0A-A85E-48CE-B4E8-712E6B42494C@classdump.org>
References: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules> <468ACBD5.9070403@gmx.de>
	<321BEB0A-A85E-48CE-B4E8-712E6B42494C@classdump.org>
Message-ID: <20070705113548.476C111EB37@www.antlr.org>

At 10:52 5/07/2007, Kay Roepke wrote:
 >Do you have suggestions for a CI server? I might be willing to 
give
 >it a try, maybe even on my private server (still publicly 
accessible
 >of course).
 >But I'm not willing to spend hours of test-driving the 
probably
 >gazillions of half-implemented, almost abandoned CI projects out 

 >there ;)

CruiseControl is the classic one, isn't it?  It's been ported to 
multiple languages, after all, which is usually a good sign of 
maturity :)


From antlr at mirality.co.nz  Thu Jul  5 04:40:32 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 05 Jul 2007 23:40:32 +1200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
References: <200707041421.59933.rschulz@sonic.net>
	<0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
	<200707041557.21583.rschulz@sonic.net>
	<BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
Message-ID: <20070705114037.9691611EB49@www.antlr.org>

At 11:22 5/07/2007, Kay Roepke wrote:
 >term returns [Term t]
 >	:	^(ComplexTerm term termSequence)
 >	{
 >		Object o = asObject($term.t);
 >	}
 >	;
[...]
 >Notice how it references retval.t in my version. I think
 >this is a bug in the actionparser code. It should warn
 >you that $term.t will refer to the rule's return
 >value and not the subtree reference's retval object.

I don't know, the current behaviour makes a certain amount of 
sense to me.  If the action block was inside the parentheses, 
though, I'd definitely expect it to refer to the recursive term, 
and not the parent rule.


From jaluber at gmx.de  Thu Jul  5 04:56:35 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 05 Jul 2007 13:56:35 +0200
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <c522653d0707050429i7223a1a9w4ea96a6aa1df359a@mail.gmail.com>
References: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>	
	<468CC3D5.4070600@gmx.de>
	<c522653d0707050429i7223a1a9w4ea96a6aa1df359a@mail.gmail.com>
Message-ID: <468CDC73.5080302@gmx.de>

Liviu U wrote:
> Hi.
> 
> I am looking in the generated code.

I've used your posted grammar and know your problem now. The reason is
that you are using '...' in parser rules. The associated tokens don't
have generally a ASCII name (while 'class' could be turned automatically
into CLASS, '(' or other symbols would cause compilers to issue errors),
so they are given unique ones. If you want to change that then you have
to use separate lexer rules for keywords.

Best regards,
Johannes Luber

P.S.: Please be aware that your emails don't get automatically to the
ANTLR list, when you use the "reply" button. And regarding your grammar:
Why don't you use the one from Ecma 334? And why so cryptic
abbreviations? There is no reason to use them, really.

From liviu.u at gmail.com  Thu Jul  5 04:57:32 2007
From: liviu.u at gmail.com (Liviu U)
Date: Thu, 5 Jul 2007 14:57:32 +0300
Subject: [antlr-interest] Important: Can tree nodes be accessed inside rules?
Message-ID: <c522653d0707050457t343c10b7g9aada61622f69175@mail.gmail.com>

hi,

I want to set a property of the generated node for a rule.

How can I access the node?


example:


cls:
   modifier* 'class'^ ident .... {  tree.ClassName = $ident.value; } ;


Is something like this available?

Thank you very much.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/5fc0ab0f/attachment.html 

From jaluber at gmx.de  Thu Jul  5 05:06:29 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 05 Jul 2007 14:06:29 +0200
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <c522653d0707050500n57d1c079ne6d2116d91073e86@mail.gmail.com>
References: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>	
	<468CC3D5.4070600@gmx.de>	
	<c522653d0707050429i7223a1a9w4ea96a6aa1df359a@mail.gmail.com>	
	<468CDC73.5080302@gmx.de>
	<c522653d0707050500n57d1c079ne6d2116d91073e86@mail.gmail.com>
Message-ID: <468CDEC5.9040005@gmx.de>

Liviu U wrote:
> Ahhhh, makes sense.
> Many thanks  for  the hint!!!!
> 
> PS: There is a small problem when rules not tokens are named: "class"
> "using" ( generally valid C# keywords) , the C# code generation will
> output invalid code!

The problem is simply that rule names are translated 1:1 into function
names. The workaround for now is to change the rule in the grammar into
something else. For consistency of rule naming use the source I
mentioned in my lats email's PS. This problem appears also if you happen
to use a member name of the parser class like "input". Unfortunately
Terence didn't integrate a name mangling option yet which would prefix
all rule names in functions.

Best regards,
Johannes Luber

From kroepke at classdump.org  Thu Jul  5 06:14:08 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 15:14:08 +0200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
References: <200707041421.59933.rschulz@sonic.net>
	<0E0B5856-78A6-4883-8204-00A2B88258C6@classdump.org>
	<200707041557.21583.rschulz@sonic.net>
	<BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
Message-ID: <84BD80E3-6BCC-41DC-A7BF-6B2690E7C119@classdump.org>


On Jul 5, 2007, at 1:40 PM, Gavin Lambert wrote:

> At 11:22 5/07/2007, Kay Roepke wrote:
> >term returns [Term t]
> >	:	^(ComplexTerm term termSequence)
> >	{
> >		Object o = asObject($term.t);
> >	}
> >	;
> [...]
> >Notice how it references retval.t in my version. I think
> >this is a bug in the actionparser code. It should warn
> >you that $term.t will refer to the rule's return
> >value and not the subtree reference's retval object.
>
> I don't know, the current behaviour makes a certain amount of sense  
> to me.  If the action block was inside the parentheses, though, I'd  
> definitely expect it to refer to the recursive term, and not the  
> parent rule.

Definitely. What I was proposing was that it merely warns you of the  
ambiguity, it should still pick the return value. However, if you  
meant the rule reference `term` ANTLR should tell you what to do.
It was only about the warning, not about changing the behavior.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Thu Jul  5 06:16:03 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 15:16:03 +0200
Subject: [antlr-interest] CI server & test builds (was: Re: How to call
	self-build ANTLR correctly?)
In-Reply-To: <321BEB0A-A85E-48CE-B4E8-712E6B42494C@classdump.org>
References: <00ea01c7bdbe$a6bfebe0$c704a8c0@hercules> <468ACBD5.9070403@gmx.de>
	<321BEB0A-A85E-48CE-B4E8-712E6B42494C@classdump.org>
Message-ID: <1D31C28B-7CDB-4B29-B341-03C51FB55848@classdump.org>


On Jul 5, 2007, at 1:35 PM, Gavin Lambert wrote:

> CruiseControl is the classic one, isn't it?  It's been ported to  
> multiple languages, after all, which is usually a good sign of  
> maturity :)

Thanks for the suggestion, I'll take a look at it :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Thu Jul  5 06:48:31 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 5 Jul 2007 06:48:31 -0700
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <84BD80E3-6BCC-41DC-A7BF-6B2690E7C119@classdump.org>
References: <200707041421.59933.rschulz@sonic.net>
	<BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
	<84BD80E3-6BCC-41DC-A7BF-6B2690E7C119@classdump.org>
Message-ID: <200707050648.31811.rschulz@sonic.net>

On Thursday 05 July 2007 06:14, Kay Roepke wrote:
> On Jul 5, 2007, at 1:40 PM, Gavin Lambert wrote:
> > At 11:22 5/07/2007, Kay Roepke wrote:
> > >term returns [Term t]
> > >
> > >	:	^(ComplexTerm term termSequence)
> > >
> > >	{
> > >		Object o = asObject($term.t);
> > >	}
> > >	;
> >
> > [...]
> >
> > >Notice how it references retval.t in my version. I think
> > >this is a bug in the actionparser code. It should warn
> > >you that $term.t will refer to the rule's return
> > >value and not the subtree reference's retval object.
> >
> > I don't know, the current behaviour makes a certain amount of sense
> > to me.  If the action block was inside the parentheses, though, I'd
> > definitely expect it to refer to the recursive term, and not the
> > parent rule.

I'm not sure I think that parentheses should alter the interpretation of 
any given element or element label reference.


> Definitely. What I was proposing was that it merely warns you of the
> ambiguity, it should still pick the return value. However, if you
> meant the rule reference `term` ANTLR should tell you what to do.
> It was only about the warning, not about changing the behavior.

There are a few things that come to mind:

1) Bottom line: When an ambiguity like this exists, which will be in 
most any rule that includes itself directly on its right-hand-side or 
that of one of its alternatives, it must be possible to refer to 
either / any of the possible referents. That currently is the case and 
must remain so, one way or another.

2) As it stands, there are two identical ways to refer to the rule's 
return value, in this case $term.t and $t. That doesn't really seem 
right, and it forces one to invent an element label, which seems 
somewhat sub-optimal.

3) Given the inherent confusion possible, a diagnostic might not be a 
bad idea, but as ever, a chatty compiler is not a friendly thing. If 
heuristic warnings are going to be added, there should be some way of 
controlling whether they're emitted or not.


> cheers,
> -k


Randall Schulz

From rschulz at sonic.net  Thu Jul  5 07:06:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 5 Jul 2007 07:06:52 -0700
Subject: [antlr-interest] Nested Tree Construction vs. Recognition
Message-ID: <200707050706.52188.rschulz@sonic.net>

Hi,

I'm curious about whether it's possible to write tree grammar rules
whose right-hand-sides (or alternatives thereof) can have nested tree
node structure.

I can use such nested structures when generating tree content (an AST,
i.e.). E.g.:

module
    :   Open CLModule interpretableName
        ( Open CLExcludes name* Close )?
        phrase*
        Close
    ->  ^( CLModule interpretableName ^( CLExcludes name* )? phrase* )
    ;


But the compiler yells at me when I try to directly recognize such
structures in the receiving tree grammar. To wit:

module
returns [ CLModule cm ]
    :   ^(  CLModule
            interpretableName
            ^(  CLExcludes
                (   name
                    { ... }
                ) *
            ) ?
            (   phrase
                { ... }
            ) *
        )
        {
            ...
        }
    ;

error(100): CLIFBuilder.g:752:6: syntax error: antlr: CLIFBuilder.g:752:6: expecting RPAREN, found '?'
error(100): CLIFBuilder.g:757:3: syntax error: antlr: CLIFBuilder.g:757:3: expecting SEMI, found ')'
error(10):  internal error: CLIFBuilder.g : java.lang.NullPointerException


Line 752 corresponds to the line with the '?' closure and 757
corresponds to the last parenthesis. In both cases, the column number
is at the end of the line in question.


The NPE suggests a bug of some sort, but I don't know if it's just in
the handling of the error or perhaps something to do with a spurious
diagnostic.


Should I be able to have nested tree nodes in rule right-hand-sides of a
tree grammar? This is one of two that have forced me to write separate
rules in the tree grammar that don't directly reflect a rule in the
tree-building grammar.


Randall Schulz

From rschulz at sonic.net  Thu Jul  5 07:10:50 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 5 Jul 2007 07:10:50 -0700
Subject: [antlr-interest] Nested Tree Construction vs. Recognition
In-Reply-To: <200707050706.52188.rschulz@sonic.net>
References: <200707050706.52188.rschulz@sonic.net>
Message-ID: <200707050710.50539.rschulz@sonic.net>

On Thursday 05 July 2007 07:06, Randall R Schulz wrote:
> Hi,
>
> I'm curious about whether it's possible to write tree grammar rules
> whose right-hand-sides (or alternatives thereof) can have nested tree
> node structure.
>
> ...
>
> error(100): CLIFBuilder.g:752:6: syntax error: antlr:
> CLIFBuilder.g:752:6: expecting RPAREN, found '?' error(100):
> CLIFBuilder.g:757:3: syntax error: antlr: CLIFBuilder.g:757:3:
> expecting SEMI, found ')' error(10):  internal error: CLIFBuilder.g :
> java.lang.NullPointerException

It occurs to me that I should have included the entire stack trace:

ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(100): CLIFBuilder.g:752:6: syntax error: antlr: CLIFBuilder.g:752:6: expecting RPAREN, found '?'
error(100): CLIFBuilder.g:757:3: syntax error: antlr: CLIFBuilder.g:757:3: expecting SEMI, found ')'
error(10):  internal error: CLIFBuilder.g : java.lang.NullPointerException
org.antlr.tool.ActionAnalysisLexer.mX_Y(ActionAnalysisLexer.java:139)
org.antlr.tool.ActionAnalysisLexer.mTokens(ActionAnalysisLexer.java:323)
org.antlr.tool.ActionAnalysisLexer.nextToken(ActionAnalysisLexer.java:69)
org.antlr.tool.ActionAnalysisLexer.analyze(ActionAnalysisLexer.java:43)
org.antlr.tool.Grammar.examineAllExecutableActions(Grammar.java:1283)
org.antlr.tool.Grammar.setGrammarContent(Grammar.java:567)
org.antlr.tool.Grammar.<init>(Grammar.java:456)
org.antlr.Tool.getGrammar(Tool.java:331)
org.antlr.Tool.process(Tool.java:267)
org.antlr.Tool.main(Tool.java:70)


Randall Schulz

From aliaazimi at yahoo.com  Thu Jul  5 07:19:53 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 5 Jul 2007 07:19:53 -0700 (PDT)
Subject: [antlr-interest] newbie left-recursive problem
Message-ID: <142893.19968.qm@web58107.mail.re3.yahoo.com>

Hi,
   
  I have read some articles about left-recursive problem and managed to understand the nature of the problem. However I can not remedy the problem I am facing in my grammar. I am hoping you can help me. 
   
  You can see left-recursive problems in the followings. how can I remedy them?
  variable:fieldmodify|elementmodify|variableidentifier 
 ;
  elementmodify
 :variable'('expression(','expression)*')'
 ;
  fieldmodify
 :variable'!'fieldname
 ;
  expression 
 :literalidentifier|synonymidentifier|variableidentifier|fieldextract|elementextract|infixexpression|parenthesisexpression
 |operatorapplication|valuemake|imperativeoperator|conditionalexpression|forallname|spellingexpression
 ;
   
  and the followings:
   
  infixexpression
 :expression dyadicoperator expression
 |monadicoperator expression
 ;
  elementextract
 :expression '('expression (',' expression)*')'
 ;
  fieldextract
 :expression '!'fieldname
 ;
   
   
  Thank you so much in advance,
  Al

       
---------------------------------
Get the free Yahoo! toolbar and rest assured with the added security of spyware protection. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/76b9ec61/attachment.html 

From fasmith718 at gmail.com  Thu Jul  5 07:50:02 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Thu, 5 Jul 2007 10:50:02 -0400
Subject: [antlr-interest] newbie left-recursive problem
In-Reply-To: <142893.19968.qm@web58107.mail.re3.yahoo.com>
References: <142893.19968.qm@web58107.mail.re3.yahoo.com>
Message-ID: <dea571e70707050750pe16c0d1t7600e6de65659c5b@mail.gmail.com>

The problem is that everything that you call off of the expression rule
(such as infixexpression) begins with a call to the expression rule again.

The wikipedia entry for fixing left recursion seems to follow the formula
from The Dragon Book (by Al Aho, et al)  and that worked for me in my
grammar:
http://en.wikipedia.org/wiki/Left_recursion

Good luck.

On 7/5/07, ali azimi <aliaazimi at yahoo.com> wrote:
>
> Hi,
>
> I have read some articles about left-recursive problem and managed to
> understand the nature of the problem. However I can not remedy the problem I
> am facing in my grammar. I am hoping you can help me.
>
> You can see left-recursive problems in the followings. how can I remedy
> them?
> variable:fieldmodify|elementmodify|variableidentifier
>  ;
> elementmodify
>  :variable'('expression(','expression)*')'
>  ;
> fieldmodify
>  :variable'!'fieldname
>  ;
> expression
>
>  :literalidentifier|synonymidentifier|variableidentifier|fieldextract|elementextract|infixexpression|parenthesisexpression
>
>  |operatorapplication|valuemake|imperativeoperator|conditionalexpression|forallname|spellingexpression
>  ;
>
> and the followings:
>
> infixexpression
>  :expression dyadicoperator expression
>  |monadicoperator expression
>  ;
> elementextract
>  :expression '('expression (',' expression)*')'
>  ;
> fieldextract
>  :expression '!'fieldname
>  ;
>
>
> Thank you so much in advance,
> Al
>
> ------------------------------
> Get the free Yahoo! toolbar<http://us.rd.yahoo.com/evt=48226/*http://new.toolbar.yahoo.com/toolbar/features/norton/index.php>and rest assured with the added security of spyware protection.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/5275997d/attachment-0001.html 

From parrt at cs.usfca.edu  Thu Jul  5 08:46:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Jul 2007 08:46:05 -0700
Subject: [antlr-interest] Nested Tree Construction vs. Recognition
In-Reply-To: <200707050706.52188.rschulz@sonic.net>
References: <200707050706.52188.rschulz@sonic.net>
Message-ID: <AC6A88B3-5BE9-4B37-84D6-CDA9E623934C@cs.usfca.edu>


On Jul 5, 2007, at 7:06 AM, Randall R Schulz wrote:

> Hi,
>
> I'm curious about whether it's possible to write tree grammar rules
> whose right-hand-sides (or alternatives thereof) can have nested tree
> node structure.
>
> I can use such nested structures when generating tree content (an AST,
> i.e.). E.g.:
>
> module
>     :   Open CLModule interpretableName
>         ( Open CLExcludes name* Close )?
>         phrase*
>         Close
>     ->  ^( CLModule interpretableName ^( CLExcludes name* )? phrase* )
>     ;

Someone had same problem last week:

http://www.antlr.org:8888/browse/ANTLR-129

Ter

From rschulz at sonic.net  Thu Jul  5 08:58:56 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 5 Jul 2007 08:58:56 -0700
Subject: [antlr-interest] Nested Tree Construction vs. Recognition
In-Reply-To: <AC6A88B3-5BE9-4B37-84D6-CDA9E623934C@cs.usfca.edu>
References: <200707050706.52188.rschulz@sonic.net>
	<AC6A88B3-5BE9-4B37-84D6-CDA9E623934C@cs.usfca.edu>
Message-ID: <200707050858.56522.rschulz@sonic.net>

On Thursday 05 July 2007 08:46, Terence Parr wrote:
> On Jul 5, 2007, at 7:06 AM, Randall R Schulz wrote:
> > Hi,
> >
> > I'm curious about whether it's possible to write tree grammar rules
> > whose right-hand-sides (or alternatives thereof) can have nested
> > tree node structure.
> >
> > ...
>
> Someone had same problem last week:
>
> http://www.antlr.org:8888/browse/ANTLR-129

That's awfully terse. Are you sure it's the same problem?


> Ter


Randall Schulz

From parrt at cs.usfca.edu  Thu Jul  5 09:01:59 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 5 Jul 2007 09:01:59 -0700
Subject: [antlr-interest] Nested Tree Construction vs. Recognition
In-Reply-To: <200707050858.56522.rschulz@sonic.net>
References: <200707050706.52188.rschulz@sonic.net>
	<AC6A88B3-5BE9-4B37-84D6-CDA9E623934C@cs.usfca.edu>
	<200707050858.56522.rschulz@sonic.net>
Message-ID: <C45D1F52-02DB-41F3-9211-2C1D7F65C103@cs.usfca.edu>


On Jul 5, 2007, at 8:58 AM, Randall R Schulz wrote:

> On Thursday 05 July 2007 08:46, Terence Parr wrote:
>> On Jul 5, 2007, at 7:06 AM, Randall R Schulz wrote:
>>> Hi,
>>>
>>> I'm curious about whether it's possible to write tree grammar rules
>>> whose right-hand-sides (or alternatives thereof) can have nested
>>> tree node structure.
>>>
>>> ...
>>
>> Someone had same problem last week:
>>
>> http://www.antlr.org:8888/browse/ANTLR-129
>
> That's awfully terse. Are you sure it's the same problem?

Yep.  ^( CLExcludes name* )? is invalid syntax currently.  Use ( ^ 
(...) )?

Ter


From chintanraoh at gmail.com  Thu Jul  5 08:03:21 2007
From: chintanraoh at gmail.com (chintan)
Date: Thu, 05 Jul 2007 20:33:21 +0530
Subject: [antlr-interest] newbie left-recursive problem
In-Reply-To: <142893.19968.qm@web58107.mail.re3.yahoo.com>
References: <142893.19968.qm@web58107.mail.re3.yahoo.com>
Message-ID: <1183647802.12195.20.camel@localhost.localdomain>

On Thu, 2007-07-05 at 07:19 -0700, ali azimi wrote:
Hello,

> Hi,
>  
> I have read some articles about left-recursive problem and managed to
> understand the nature of the problem. However I can not remedy the
> problem I am facing in my grammar. I am hoping you can help me. 
>  
> You can see left-recursive problems in the followings. how can I
> remedy them?
> variable:fieldmodify|elementmodify|variableidentifier 
>  ;
> elementmodify
>  :variable'('expression(','expression)*')'
>  ;
> fieldmodify
>  :variable'!'fieldname
>  ;
> expression 
>  :literalidentifier|synonymidentifier|variableidentifier|fieldextract|
> elementextract|infixexpression|parenthesisexpression
>  |operatorapplication|valuemake|imperativeoperator|
> conditionalexpression|forallname|spellingexpression
>  ;
make it 
expression:
	others| fieldextract|elementextract|infixexpression;
others:
literalidentifier|synonymidentifier|variableidentifier |
parenthesisexpression|operatorapplication|valuemake|imperativeoperator|
conditionalexpression|forallname|spellingexpression;

Look at the rule "expression";

substitute  all rules  in expression except others
It becomes

expression:
others
|expression dyadicoperator expression |monadicoperator expression
|expression '('expression (',' expression)*')'
|expression '!'fieldname;

which is same as 
expression:
others
| expression(
	dyadicoperator expression | '('expression (',' expression)*')' |
	 '!'fieldname;
            )
| monadicoperator expression
;

which is same as

expression:
(others | monadicoperator expression)
((dyadicoperator expression) | '('expression (','expression)*')' |
'!'fieldname;)* ;

I vaguely remember what was taught in Theory Of Computation.
I tired to be as correct as possible. Correct me if i am wrong in any of
the steps . Hope this helps though :) .

You wont need rules quoted below.
ie infixexpression ,elementextract and fieldextract

>  
> and the followings:
>  
> infixexpression
>  :expression dyadicoperator expression
>  |monadicoperator expression
>  ;
> elementextract
>  :expression '('expression (',' expression)*')'
>  ;
> fieldextract
>  :expression '!'fieldname
>  ;
>  
>  
> Thank you so much in advance,
> Al
Cheers,
Chintan Rao H
> 
> ______________________________________________________________________
> Get the free Yahoo! toolbar and rest assured with the added security
> of spyware protection. 


From kroepke at classdump.org  Thu Jul  5 09:39:34 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 5 Jul 2007 18:39:34 +0200
Subject: [antlr-interest] Clarification on Attribute Reference in Actions
In-Reply-To: <200707050648.31811.rschulz@sonic.net>
References: <200707041421.59933.rschulz@sonic.net>
	<BD159215-7656-489C-B8C3-E11EBFD16062@classdump.org>
	<84BD80E3-6BCC-41DC-A7BF-6B2690E7C119@classdump.org>
	<200707050648.31811.rschulz@sonic.net>
Message-ID: <6CAA0F51-1195-42D0-9B30-608EA6E5BBE2@classdump.org>


On Jul 5, 2007, at 3:48 PM, Randall R Schulz wrote:

> 3) Given the inherent confusion possible, a diagnostic might not be a
> bad idea, but as ever, a chatty compiler is not a friendly thing. If
> heuristic warnings are going to be added, there should be some way of
> controlling whether they're emitted or not.

I agree that there must be a way to shut up the warnings (any warning  
for that matter).
Many times I wanted that but haven't had time to work on it. We  
probably should have
warning categories like a C compiler or so.
Will talk to Ter about it :) (Or bring on your ideas...)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From open.zone at virgin.net  Thu Jul  5 10:11:32 2007
From: open.zone at virgin.net (Micheal J)
Date: Thu, 5 Jul 2007 18:11:32 +0100
Subject: [antlr-interest] Fixed length tokens again
In-Reply-To: <C14A329D-3518-4DB8-B913-A72022D16CEB@wincent.com>
Message-ID: <001601c7bf27$89a4fef0$c704a8c0@hercules>

Hi,

> El 5/7/2007, a las 8:47, Stefan Wohlgemuth escribi?:
> 
> > Is there a way to define tokens which have a fixed length? 
> Say I would 
> > like to define a lexer rule N3 which defines a token of three and 
> > another N4 of four numeric characters.
> >
> > Something like this:
> >
> > test: N3 N4;
> >
> > N3:  Digit Digit Digit;         //  This in combination with N4  
> > does not
> > work
> > N4:  Digit Digit Digit Digit; //
> >
> > fragment
> > Digit: '0'..'9'
> 
> Those rules are ambiguous... how does ANTLR know what to match for  
> input like "012345678912"? It could match either four N3 tokens, or  
> three N4 tokens.
> 
> One way to address the ambiguity might be to use syntactic predicates:
> 
> tokens {
>    N3;
>    N4;
> }
> 
> N : (Digit Digit Digit Digit)=> Digit Digit Digit Digit { 
> $type = N4; }
>    | Digit Digit Digit { $type = N3; }
>    ;

Or avoiding syntactic predicates:

tokens {
	N4;
}
 
N3	: Digit Digit Digit ( Digit { $type = N4; } )? 
	;


Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Thu Jul  5 10:38:59 2007
From: open.zone at virgin.net (Micheal J)
Date: Thu, 5 Jul 2007 18:38:59 +0100
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>
Message-ID: <002401c7bf2b$5fb53ac0$c704a8c0@hercules>

Hi,
 
Please try to choose more relevant, descriptive subjects for your post. For
instance, "ANTLR generates cryptic names such as T1...T9 for rules" is
better than what you have.
 
As for the problem, this simply indicates you are using a combined grammar
and ANTLR is automatically generating a lexer for you and generating names
for your (unnamed) tokens. To ensure the token names are meaningful, either
create your own lexer (in a separate file) or name you tokens.
 
E.g. Rather than:
 
class : 'class' ID ...
 
Do:
 
tokens
{
    KW_CLASS = 'class';
}
 
class : KW_CLASS ID ...
 
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 05 July 2007 10:35
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# generated code refering rules


Hi guys,

ANTLR generates cryptic names for rules (TokenTypes). T1...T9.

when I check the TreeNode token type it is an integer and I would have like
to compare it against constant FORLOOP than against T23.

Do i miss something here?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/2a672e65/attachment.html 

From Stephen_Hardy at rabbit.com  Thu Jul  5 10:45:44 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Thu, 5 Jul 2007 10:45:44 -0700
Subject: [antlr-interest] Infinite lexer exception allocation loop
	inCtarget C parser, antlr3.0
In-Reply-To: <74A88A1D-ACA3-4CB9-956D-2B4F3D51FE21@wincent.com>
Message-ID: <62BABE024B7C074E9194E9727A418979C4F03D@dvs-sms-mail01.digi.com>

Wincent,

thanks for that.  I didn't realize there was a nested .tgz file.  Maybe
that needs to be mentioned in the top level README.

Maybe 'tar' needs a --recursive option :-)

Regards,
SJH

> -----Original Message-----
> From: Wincent Colaiuta [mailto:win at wincent.com] 
> >
> > Hmmmm - must have missed something.  I got the source tar file,  
> > unpacked
> > it, but nary a configure script to be found.  Maybe I got the wrong
> > tarfile; I'll try again next time.
> 
> 
> The other thing it might be is that you have to look in the */dist/*  
> subdirectory and build the runtime from there; something like the  
> following (actual version numbers may vary):
> 
> tar xvzf antlr-3.0.tar.gz
> cd antlr-3.0/runtime/C/dist
> tar xzvf libantlr3c-3.0.0-rc8.tar.gz
> cd libantlr3c-3.0.0-rc8
> ./configure
> make
> sudo make install
> 
> Cheers,
> Wincent
> 
> 

From vbar at comp.cz  Thu Jul  5 11:10:16 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 5 Jul 2007 20:10:16 +0200
Subject: [antlr-interest] C# rules cannot return chars
In-Reply-To: <00db01c7bda7$307aa2c0$c704a8c0@hercules>
References: <00db01c7bda7$307aa2c0$c704a8c0@hercules>
Message-ID: <200707052010.16593.vbar@comp.cz>

Hi,

On Tuesday 03 July 2007 21:20, Micheal J wrote:
> If you're able to build from the latest sources, please do so and try
> again. I've just committed a possible fix.
Sorry for the late answer - building ANTLR proved non-trivial, but I can 
confirm that the bug is fixed in the tarball from 
http://fisheye2.cenqua.com/browse/antlr .

	Bye
		Vasek

From vbar at comp.cz  Thu Jul  5 11:17:43 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 5 Jul 2007 20:17:43 +0200
Subject: [antlr-interest] ANTLR build (was: How to call self-build ANTLR
	correctly?)
In-Reply-To: <CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>
References: <468AB343.60500@gmx.de>
	<CFD57F56-535C-4A07-9056-D150BBFF32BD@cs.usfca.edu>
Message-ID: <200707052017.44081.vbar@comp.cz>

On Tuesday 03 July 2007 22:39, Terence Parr wrote:
> Does build.xml help?
For me, only partially:

vb at owl ~/antlr $ ant
Buildfile: build.xml

generator-prepare:

generator:

compile-rt:

compile:
  [myjavac] Compiling 13 source files to /home/vb/antlr/build/classes
  [myjavac] Note: Some input files use unchecked or unsafe operations.
  [myjavac] Note: Recompile with -Xlint:unchecked for details.

templates:

version-bcel:

BUILD FAILED
/home/vb/antlr/build.xml:177: Unable to load file: java.io.IOException

This is on gentoo, dev-java/ant-1.6.5, dev-java/sun-jdk-1.5.0.10 .

	Bye
		Vasek


From gudnabrsam at yahoo.com  Thu Jul  5 11:32:39 2007
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Thu, 5 Jul 2007 11:32:39 -0700 (PDT)
Subject: [antlr-interest] ANTLR build (was: How to call self-build ANTLR
	correctly?)
In-Reply-To: <200707052017.44081.vbar@comp.cz>
Message-ID: <240447.55350.qm@web55114.mail.re4.yahoo.com>

Can you run _any_ Java application from the command
line?

-Matt

--- Vaclav Barta <vbar at comp.cz> wrote:

> On Tuesday 03 July 2007 22:39, Terence Parr wrote:
> > Does build.xml help?
> For me, only partially:
> 
> vb at owl ~/antlr $ ant
> Buildfile: build.xml
> 
> generator-prepare:
> 
> generator:
> 
> compile-rt:
> 
> compile:
>   [myjavac] Compiling 13 source files to
> /home/vb/antlr/build/classes
>   [myjavac] Note: Some input files use unchecked or
> unsafe operations.
>   [myjavac] Note: Recompile with -Xlint:unchecked
> for details.
> 
> templates:
> 
> version-bcel:
> 
> BUILD FAILED
> /home/vb/antlr/build.xml:177: Unable to load file:
> java.io.IOException
> 
> This is on gentoo, dev-java/ant-1.6.5,
> dev-java/sun-jdk-1.5.0.10 .
> 
> 	Bye
> 		Vasek
> 
> 



       
____________________________________________________________________________________
Yahoo! oneSearch: Finally, mobile search 
that gives answers, not web links. 
http://mobile.yahoo.com/mobileweb/onesearch?refer=1ONXIC

From jimi at temporal-wave.com  Thu Jul  5 13:11:19 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 5 Jul 2007 13:11:19 -0700
Subject: [antlr-interest] Fixed length tokens again
In-Reply-To: <468C9406.2050703@aloba.ch>
References: <468C9406.2050703@aloba.ch>
Message-ID: <051466DAA0D608439E196797955018D76E9B@wavemachine.temporal-wave.com>

Try this:

tokens
{
	N4;
}

N3
	: Digit Digit Digit
			(Digit { $type = N4;})?
;

Though you need to be careful trying to count specific digits and so on
in lexers as you can easily start trying to write the parser in the
lexer without thinking.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stefan Wohlgemuth
> Sent: Wednesday, July 04, 2007 11:48 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Fixed length tokens again
> 
> Is there a way to define tokens which have a fixed length?
> Say I would like to define a lexer rule N3 which defines a token of
> three and another N4 of four numeric characters.
> 
> Something like this:
> 
> test: N3 N4;
> 
> N3:  Digit Digit Digit;         //  This in combination with N4 does
> not
> work
> N4:  Digit Digit Digit Digit; //
> 
> fragment
> Digit: '0'..'9'
> 
> 
> Thanks
> 
> 
> --
> aloba ag
> Lyssachstrasse 15
> CH-3400 Burgdorf


From aliaazimi at yahoo.com  Thu Jul  5 14:07:38 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 5 Jul 2007 14:07:38 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) Decision can match input such as
	...using multiple alternatives: 1, 2
Message-ID: <245437.3373.qm@web58112.mail.re3.yahoo.com>

Hi,
  I am facing lots of warning messages that I do not know how to deal with. Could you please help? 
   
  A sample of those warning messages is at the bottom of this page.
   
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:865:3: Decision can match input such as "'comment'" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:865:3: Decision can match input such as "'via'" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:865:3: Decision can match input such as "';'" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:881:3: Decision can match input such as "{'system', 'system type'..'signal', 'service', 'substructure', 'block', 'process', 'package'}" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:881:3: Decision can match input such as "'procedure'" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:881:3: Decision can match input such as "'<<'" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(200): C:\Documents and Settings\ali\Desktop\FinalProject.g:893:17: Decision can match input such as "'"' '-' '"'" using multiple alternatives: 1, 2
  As a result, alternative(s) 2 were disabled for that input
  [21:17:26] warning(201): C:\Documents and Settings\ali\Desktop\FinalProject.g:893:17: The following alternatives are unreachable: 2
   
   

       
---------------------------------
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/df05f085/attachment.html 

From antlr at mirality.co.nz  Thu Jul  5 14:11:37 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 06 Jul 2007 09:11:37 +1200
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <468CDEC5.9040005@gmx.de>
References: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>
	<468CC3D5.4070600@gmx.de>
	<c522653d0707050429i7223a1a9w4ea96a6aa1df359a@mail.gmail.com>
	<468CDC73.5080302@gmx.de>
	<c522653d0707050500n57d1c079ne6d2116d91073e86@mail.gmail.com>
	<468CDEC5.9040005@gmx.de>
Message-ID: <20070705211144.766C211EAED@www.antlr.org>

At 00:06 6/07/2007, Johannes Luber wrote:
 >The problem is simply that rule names are translated 1:1 into
 >function names. The workaround for now is to change the rule
 >in the grammar into something else. For consistency of rule
 >naming use the source I mentioned in my lats email's PS. This
 >problem appears also if you happen to use a member name of
 >the parser class like "input".  Unfortunately
 >Terence didn't integrate a name mangling option yet which would
 >prefix all rule names in functions.

There is a standard mangling scheme for the lexer; and I think the 
C target does some extra mangling of its own anyway :)

But in any case, the C# code generator could work around this by 
using the @ prefix.  (ie. @class is always an identifier, never a 
keyword.)  Ideally, it should only quote the ones that actually 
need it (by being in the keyword list), but I'm not sure how easy 
that is to do in StringTemplate.  Failing that it could just quote 
everything ;)


From jaluber at gmx.de  Thu Jul  5 14:20:40 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 05 Jul 2007 23:20:40 +0200
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <20070705211145.13869gmx1@mx073.gmx.net>
References: <c522653d0707050234g67add3dcm24e47ee9363db470@mail.gmail.com>
	<468CC3D5.4070600@gmx.de>
	<c522653d0707050429i7223a1a9w4ea96a6aa1df359a@mail.gmail.com>
	<468CDC73.5080302@gmx.de>
	<c522653d0707050500n57d1c079ne6d2116d91073e86@mail.gmail.com>
	<468CDEC5.9040005@gmx.de> <20070705211145.13869gmx1@mx073.gmx.net>
Message-ID: <468D60A8.1060605@gmx.de>

Gavin Lambert wrote:
> At 00:06 6/07/2007, Johannes Luber wrote:
>>The problem is simply that rule names are translated 1:1 into
>>function names. The workaround for now is to change the rule
>>in the grammar into something else. For consistency of rule
>>naming use the source I mentioned in my lats email's PS. This
>>problem appears also if you happen to use a member name of
>>the parser class like "input".  Unfortunately
>>Terence didn't integrate a name mangling option yet which would
>>prefix all rule names in functions.
> 
> There is a standard mangling scheme for the lexer; and I think the C
> target does some extra mangling of its own anyway :)
> 
> But in any case, the C# code generator could work around this by using
> the @ prefix.  (ie. @class is always an identifier, never a keyword.) 
> Ideally, it should only quote the ones that actually need it (by being
> in the keyword list), but I'm not sure how easy that is to do in
> StringTemplate.  Failing that it could just quote everything ;)
> 

Your suggestion doesn't work in general, as "@(" is not a valid
identifier. It would work though to put for all token names, as they are
generated right now, although it considered to be a bad style to use
e.g. "@id". And this doesn't solve all collisions like for "input".

Best regards,
Johannes Luber

From open.zone at virgin.net  Thu Jul  5 14:29:32 2007
From: open.zone at virgin.net (Micheal J)
Date: Thu, 5 Jul 2007 22:29:32 +0100
Subject: [antlr-interest] C# generated code refering rules
In-Reply-To: <468D60A8.1060605@gmx.de>
Message-ID: <003601c7bf4b$94ea1650$c704a8c0@hercules>

Hi,

> > But in any case, the C# code generator could work around 
> this by using 
> > the @ prefix.  (ie. @class is always an identifier, never a 
> keyword.) 
> > Ideally, it should only quote the ones that actually need 
> it (by being 
> > in the keyword list), but I'm not sure how easy that is to do in 
> > StringTemplate.  Failing that it could just quote everything ;)
> > 
> 
> Your suggestion doesn't work in general, as "@(" is not a 
> valid identifier. It would work though to put for all token 
> names, as they are generated right now, although it 
> considered to be a bad style to use e.g. "@id". And this 
> doesn't solve all collisions like for "input".

The "@(" issue is moot as "(" isn't a valid token_ref or rule_ref identifier
in ANTLR either.

Generating an "@" prefix for all token and rule references is doable but
isn't general enough. As you correctly pointed out, it won't resolve name
collisions with existing members such as "input".

The ANTLR tool itself will support  a more general scheme such as the old
name mangling prefix/suffix grammar option in due course.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From jaluber at gmx.de  Thu Jul  5 14:41:29 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 05 Jul 2007 23:41:29 +0200
Subject: [antlr-interest] Debugging doesn't work with grammar
Message-ID: <468D6589.604@gmx.de>

Hi!

The attached grammar doesn't work quite right. In the C# version of the
grammar the lexer doesn't recognize a valid grammar of my own and
complains in ACTION_STRING_LITERAL, that it can't find a closing quote
sign till the end of the file. And with another one I get the following
exception:

"A first chance exception of type 'System.NullReferenceException'
occurred in Antlr3.Runtime.dll"

Testing a Java version of the file with the same input as for the
exception results, that the remote debugger doesn't connect with parser
(mind you, I've used the normal debug menu here). As it is a grammar
adapted from Terence' work I'm at a complete loss. I didn't change the
basic structure so I suppose that either the grammar has an error or
ANTLR itself. I've attached the Java version of the grammar for your
perusal.

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNG.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070705/eadafa28/attachment-0001.pl 

From liviu.u at gmail.com  Thu Jul  5 15:13:28 2007
From: liviu.u at gmail.com (Liviu U)
Date: Fri, 6 Jul 2007 01:13:28 +0300
Subject: [antlr-interest] Thanks
Message-ID: <c522653d0707051513q367de3a7y8a6de019cd44d741@mail.gmail.com>

Hi all,

After 3 days of work, I got all the usefull clues for building a simple C#
declaration parser.
Thank you all that helped for your support.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/120240ee/attachment.html 

From yuesefa at gmail.com  Thu Jul  5 18:01:06 2007
From: yuesefa at gmail.com (Haofei)
Date: Fri, 6 Jul 2007 09:01:06 +0800
Subject: [antlr-interest] v2 to v3 question
Message-ID: <707eb1470707051801l52fcb121i9dc3612bc744e28a@mail.gmail.com>

Im upgrading a grammar from v2 to v3.

getColumn(), Token.EOF_TYPE, _saveIndex, EOF_CHAR,text.setLength which used
in v2 are not in v3 anymore, is their replacement available?
or any reference on this?

Thanks :)

~Haofei
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/da084eff/attachment.html 

From yuesefa at gmail.com  Thu Jul  5 18:18:23 2007
From: yuesefa at gmail.com (Haofei)
Date: Fri, 6 Jul 2007 09:18:23 +0800
Subject: [antlr-interest] v2 to v3 question
In-Reply-To: <707eb1470707051801l52fcb121i9dc3612bc744e28a@mail.gmail.com>
References: <707eb1470707051801l52fcb121i9dc3612bc744e28a@mail.gmail.com>
Message-ID: <707eb1470707051818o68d6713egbf4d37d279b09bca@mail.gmail.com>

On 06/07/07, Haofei <yuesefa at gmail.com> wrote:
>
> Im upgrading a grammar from v2 to v3.
>
> getColumn(), Token.EOF_TYPE, _saveIndex, EOF_CHAR,text.setLength which
> used in v2 are not in v3 anymore, is their replacement available?
> or any reference on this?


oh, got the api :)

Thanks :)
>
> ~Haofei
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/1a07965d/attachment.html 

From tbrandonau at gmail.com  Thu Jul  5 20:43:11 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 6 Jul 2007 13:43:11 +1000
Subject: [antlr-interest] Debugging doesn't work with grammar
In-Reply-To: <468D6589.604@gmx.de>
References: <468D6589.604@gmx.de>
Message-ID: <ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>

On 7/6/07, Johannes Luber <jaluber at gmx.de> wrote:
> Hi!
>
> The attached grammar doesn't work quite right. In the C# version of the
> grammar the lexer doesn't recognize a valid grammar of my own and
> complains in ACTION_STRING_LITERAL, that it can't find a closing quote
> sign till the end of the file. And with another one I get the following
> exception:
>
> "A first chance exception of type 'System.NullReferenceException'
> occurred in Antlr3.Runtime.dll"
Without the input you used I can't be sure, but it looks like a
problem with non-matched "s in actions. To avoid non-LL* issues the
grammar uses a fixed lookahead in the NESTED_ACTION rule, so upon
seeing a " it decides it must be an ACTION_STRING_LITERAL, if there is
no closing " it will swallow input until the end of the file. Looks
like it's not finding that matching " for some reason.
> Testing a Java version of the file with the same input as for the
> exception results, that the remote debugger doesn't connect with parser
> (mind you, I've used the normal debug menu here).
I was able to debug the attached grammar so not sure what's going on
there. Did you get any errors in the console? Is the code generated
correctly? Did you try remote debugging? Are you able to debug other
grammars?
> As it is a grammar
> adapted from Terence' work I'm at a complete loss. I didn't change the
> basic structure so I suppose that either the grammar has an error or
> ANTLR itself. I've attached the Java version of the grammar for your
> perusal.
This part of the grammar changed from the v2 grammar which used
syntactic predicates so it is quite possible Ter has not actually
tested this much.

>
> Best regards,
> Johannes Luber
>

> ARG_ACTION
>         :       NESTED_ARG_ACTION
>         ;
>
> fragment
> NESTED_ARG_ACTION :
>         '['!
>         (       options {greedy=false; k=1;}
>         :       NESTED_ARG_ACTION
>         |       ACTION_STRING_LITERAL
>         |       ACTION_CHAR_LITERAL
>         |       .
>         )*
>         ']'!
>         ;
>
> ACTION
>         :       NESTED_ACTION ( '?' {$type = SEMPRED;} )?
>         ;
>
> fragment
> NESTED_ACTION :
>         '{'
>         (       options {greedy=false; k=3;}
>         :       NESTED_ACTION
> //      |       DOC_COMMENT
>         |       SL_COMMENT
>         |       ML_COMMENT
>         |       ACTION_STRING_LITERAL
>         |       ACTION_CHAR_LITERAL
>         |       .
>         )*
>         '}'
>    ;
>
> fragment
> ACTION_CHAR_LITERAL
>         :       '\'' (ACTION_ESC|.) '\''
>         ;
>
> fragment
> ACTION_STRING_LITERAL
>         :       '"' (ACTION_ESC|.) (ACTION_ESC|.)* '"'
>         ;
>
> fragment
> ACTION_ESC
>         :       '\\\''
>         |       '\\"'
>         |       '\\' ~('\''|'"')
>         ;

Tom.

From qwertie256 at gmail.com  Thu Jul  5 22:10:08 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Thu, 5 Jul 2007 23:10:08 -0600
Subject: [antlr-interest] 2 or 3 (major?) bugs in ANTLR (C#)
Message-ID: <ce40b1470707052210q7d8d49fas62553ebbc1c57ede@mail.gmail.com>

No matter what I do I can't seem to make a lexer that works correctly.
Weird things have been happening constantly, starting with the
multi-megabyte lexer that I always end up with if I use LL(*). So I've
been using LL(4) but am still running into a number of problems.

I've been testing with the demo lexer below. Before I show it, I want
to point out what's going on with the backslash:

- in my language, backslash is an escape for producing identifiers out
of punctuation, so "\&" is an identifier, as is "\a\b\c" as well as
ordinary things like "abc".
- backslash is punctuation (PUNC) if followed by a space. The space is
NOT included in the token.

By the way, should these rules be equivalent (behaviorally)? I think
they should:

BUG: ('_' | {false}? . | {false}? .)+; // Version 1
BUG: ('_' | {false}? .)+; // Version 2
BUG: ('_')+; // Version 3

But as you'll see, three different behaviors may result. Another thing
I've noticed is that ANTLR seems to use more lookahead than necessary
to do prediction, and because of this is somehow more likely to make
incorrect predictions.

I've isolated a small set of rules to demonstrate some of the problems
I've been having. Note that I usually use predicates like

	  {input.LA(2) == ' ' || input.LA(2) == '\t'}? '\\'

instead of

	  ('\\' (' ' | '\t')) => '\\'

because as discussed recently, the latter does not work. And it seems
that often the former doesn't work either. I've included examples of
both apparently failing. Here's the grammar:

/////////////////////////////////////////////////////////////////////////
lexer grammar Bug1;

options
{
	language = 'CSharp';
	k = 4;
	TokenLabelType = CommonToken;
}

@lexer::members {
	public bool IsWS(int LA)        { int c = input.LA(LA); return c == '
' || c == '\t'; }
	public bool IsNewline(int LA)   { int c = input.LA(LA); return c ==
'\r' || c == '\n'; }
	public bool IsCtrlChar(int LA)  { int c = input.LA(LA); return c < 32; }
	public bool IsBackslash(int LA) { int c = input.LA(LA); return c == '\\'; }
}

WS: WS_CHAR+;
fragment WS_CHAR: ' ' | '\t';

BUG: ('_' | {false}? . | {false}? .)+; // Version 1
//BUG: ('_' | {false}? .)+; // Version 2
//BUG: ('_')+; // Version 3

ID: ID_LETTER+;
fragment ID_LETTER
	: ('a'..'z' | 'A'..'Z')
	| {IsBackslash(1) && !IsWS(2) && !IsCtrlChar(2)}?=> '\\' .
	;

PUNC: PUNC_CHAR+;
fragment PUNC_CHAR:
	  {IsWS(2)}? '\\'                     // Version 1
	//{IsBackslash(1) && IsWS(2)}?=> '\\' // Version 2
	//('\\' WS_CHAR)=>'\\'                // Version 3
	| (':'|'.'|'~'|'!'|'@'|'$'|'%'|'^'|'&'
	  |'*'|'-'|'+'|'='|'|'|','|'<'|'>'|'?');
/////////////////////////////////////////////////////////////////////////

Next, here's the testing code:

/////////////////////////////////////////////////////////////////////////
public static void Main(string[] args)
{
	ParseBug(@"ab");
	ParseBug(@"ab& ");
	ParseBug(@"ab&\");
	ParseBug(@"ab&\cd");
	ParseBug(@"ab\ cd");
}
static void ParseBug(string s)
{
	System.Console.WriteLine(s);
	ANTLRStringStream input = new ANTLRStringStream(s);
	Lexer lexerBug = new Bug1Lexer(input);
	IToken t;
	while ((t = lexerBug.NextToken()).Type != Bug1Lexer.EOF) {
		System.Console.WriteLine("{0} <{1}>",
			FooParser.tokenNames[t.Type], t.Text);
	}
	System.Console.WriteLine("");
}
/////////////////////////////////////////////////////////////////////////

N.B. All of these test strings should work, but they don't. ANTLR
gives no warnings. The output is:

ab
ID <ab>

ab&
line 1:0 required (...)+ loop did not match anything at character 'a'
line 1:1 required (...)+ loop did not match anything at character 'b'
PUNC <&>

ab&\
line 1:0 required (...)+ loop did not match anything at character 'a'
line 1:1 required (...)+ loop did not match anything at character 'b'
line 1:3 rule PUNC_CHAR failed predicate: {input.LA(2) == ' ' ||
input.LA(2) == '\t'}?

ab&\cd
line 1:0 required (...)+ loop did not match anything at character 'a'
line 1:1 required (...)+ loop did not match anything at character 'b'
line 1:2 required (...)+ loop did not match anything at character '&'
ID <\cd>

ab\ cd
ID <ab>
line 1:2 no viable alternative at character '\'
line 1:3 required (...)+ loop did not match anything at character ' '
ID <cd>
/////////////////////////////////////////////////////////////////////////

Now switch to Version 2 of BUG. The output is:

ab
ID <ab>

ab&
line 1:0 rule BUG failed predicate: {false}?
line 1:1 rule BUG failed predicate: {false}?
PUNC <&>

ab&\
line 1:0 rule BUG failed predicate: {false}?
line 1:1 rule BUG failed predicate: {false}?
line 1:2 rule BUG failed predicate: {false}?
line 1:3 no viable alternative at character '\'
WS < >

ab&\cd
line 1:0 rule BUG failed predicate: {false}?
line 1:1 rule BUG failed predicate: {false}?
line 1:2 rule BUG failed predicate: {false}?
ID <\cd>

ab\ cd
ID <ab>
line 1:2 no viable alternative at character '\'
line 1:3 rule BUG failed predicate: {false}?
ID <cd>
/////////////////////////////////////////////////////////////////////////

It is worth noting that this grammar is LL(1) because all other
lookahead is done with semantic predicates. However, the above
symptoms only occur if k>1. If k=2 then two errors remain; if k=1 then
the result is the same as when using Version 3 of BUG.

Without further ado, here's Version 3 of BUG:

ab
ID <ab>

ab&
ID <ab>
PUNC <&>

ab&\
ID <ab>
PUNC <&\>
WS < >

ab&\cd
ID <ab>
line 1:3 rule PUNC_CHAR failed predicate: {IsWS(2)}?
ID <cd>

ab\ cd
ID <ab>
PUNC <\>
WS < >
ID <cd>
/////////////////////////////////////////////////////////////////////////

That's much better! But there's a problem with the predicate because
it is not getting hoisted for some reason. mPUNC() sees a backslash
and decides that's all it needs to run mPUNC_CHAR. In fact,
mPUNC_CHAR() itself doesn't run the predicate until after it's
predicted the result. It escapes me why it would decide that the
alternative succeeds, then runs the predicate afterward - which fails,
of course.

Now let's try Version 3 of PUNC_CHAR - something slightly different happens:

ab
ID <ab>

ab&
ID <ab>
PUNC <&>

ab&\
ID <ab>
PUNC <&\>
WS < >

ab&\cd
ID <ab>
line 1:3 no viable alternative at character '\'
ID <cd>

ab\ cd
ID <ab>
PUNC <\>
WS < >
ID <cd>
/////////////////////////////////////////////////////////////////////////

This time, mPUNC decides that a backslash alone is enough to predict a
backslash, so it calls mPUNC_CHAR. mPUNC_CHAR actually bothers to run
the predicate and, of course, it fails, causing a no viable alt error.
Only Version 2 works as it should:

ab
ID <ab>

ab&
ID <ab>
PUNC <&>

ab&\
ID <ab>
PUNC <&\>
WS < >

ab&\cd
ID <ab>
PUNC <&>
ID <\cd>

ab\ cd
ID <ab>
PUNC <\>
WS < >
ID <cd>
/////////////////////////////////////////////////////////////////////////

This concludes my little bug report.
-- 
- David
http://qism.blogspot.com

From antlr at mirality.co.nz  Fri Jul  6 01:36:11 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 06 Jul 2007 20:36:11 +1200
Subject: [antlr-interest] 2 or 3 (major?) bugs in ANTLR (C#)
In-Reply-To: <ce40b1470707052210q7d8d49fas62553ebbc1c57ede@mail.gmail.co
 m>
References: <ce40b1470707052210q7d8d49fas62553ebbc1c57ede@mail.gmail.com>
Message-ID: <20070706083618.5B3E711E9E8@www.antlr.org>

At 17:10 6/07/2007, David Piepgrass wrote:
 >BUG: ('_' | {false}? . | {false}? .)+; // Version 1
 >BUG: ('_' | {false}? .)+; // Version 2
 >BUG: ('_')+; // Version 3

Have you tried using '{false}? => .'?

 >@lexer::members {
 >	public bool IsWS(int LA)        { int c = input.LA(LA); return 
c
 >== ' ' || c == '\t'; }
 >	public bool IsNewline(int LA)   { int c = input.LA(LA); return 
c
 >== '\r' || c == '\n'; }
 >	public bool IsCtrlChar(int LA)  { int c = input.LA(LA); return 
c <
 >32; }
 >	public bool IsBackslash(int LA) { int c = input.LA(LA); return 
c
 >== '\\'; }
 >}

Shouldn't those be 'char' variables?


From bartosz at epcc.ed.ac.uk  Fri Jul  6 02:25:56 2007
From: bartosz at epcc.ed.ac.uk (Bartosz Dobrzelecki)
Date: Fri, 06 Jul 2007 10:25:56 +0100
Subject: [antlr-interest] Tree gramar, StringTemplate,
	Java target conditionals problem
Message-ID: <468E0AA4.8020307@epcc.ed.ac.uk>

Hello!

I have the following rule in my tree grammar:

selExpr	:	^(COL expr ID?)
		-> template(expression={$expr.st},alias={$ID.text})
		"<expression><if(alias)> AS <alias><endif>" ;

Antlr will generate the following Java code:

{
	retval.st = new StringTemplate(templateLib,
		"<expression><if(alias)> AS <alias><endif>",
		new STAttrMap()
		.put("expression", expr2.st)
		.put("alias", ID3.getText()));
}

This of course will not work if (alias) is not set - a null pointer 
exception will be thrown.

What I would expect to see in the code is sth like:

{
	STAttrMap map = new STAttrMap().put("expression", expr2.st)
	if(ID3 != null) map.put("alias", ID3.getText());

         retval.st = new StringTemplate(templateLib,
		"<expression><if(alias)> AS <alias><endif>", map);
}



Am I doing something wrong ?

Cheers,
Bartek

From win at wincent.com  Fri Jul  6 02:45:10 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 6 Jul 2007 11:45:10 +0200
Subject: [antlr-interest] [TN#107351]  Help with FishEye
In-Reply-To: <1183692667.977505.504842393.31937.11@admin.cenqua.com>
References: <1183692667.977505.504842393.31937.11@admin.cenqua.com>
Message-ID: <B2F05B0D-5CA2-4B20-8C03-7A6A3E26DE53@wincent.com>

El 6/7/2007, a las 5:31, Fisheye Support escribi?:

> Hi, Wincent
>
> We have updated the version of FishEye on the server to the latest  
> version and
> this should resolve the problem in regard to the zip not including  
> all files.
>
> Can you try again, and see how you get on.

Thanks for your attention to that. I'm sure I'm not the only one who  
appreciates this.

I performed some testing. The files which were missing from the  
archive are present now. I haven't done an exhaustive check to see if  
everything is present because it's a little difficult to compare (the  
official ANTLR distribution contains more than what's in FishEye;  
it's over 3MB whereas the stuff in FishEye yields an archive just  
under 2MB in size)... but at a glance it does appear that everything  
is there (at least "ant build" at the top level of the extracted  
archive works).

So both the tgz and zip archives now appear to be complete, although  
the tbz2 archive appears to be truncated:

$ wget -c --no-cache "http://fisheye2.cenqua.com/browse/~tarball=tbz2/ 
antlr/antlr.tbz2"
--09:13:48--  http://fisheye2.cenqua.com/browse/~tarball=tbz2/antlr/ 
antlr.tbz2
            => `antlr.tbz2'
Resolving fisheye2.cenqua.com... 63.246.7.20
Connecting to fisheye2.cenqua.com|63.246.7.20|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [application/x-bzip2]

      
[      <=>                                                               
                   ] 147,315      107.36K/s

09:14:11 (107.11 KB/s) - `antlr.tbz2' saved [147315]

$ wget -c --no-cache "http://fisheye2.cenqua.com/browse/~tarball=tbz2/ 
antlr/antlr.tbz2"
--09:27:28--  http://fisheye2.cenqua.com/browse/~tarball=tbz2/antlr/ 
antlr.tbz2
            => `antlr.tbz2'
Resolving fisheye2.cenqua.com... 63.246.7.20
Connecting to fisheye2.cenqua.com|63.246.7.20|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [application/x-bzip2]

100% 
[======================================================================= 
=================>] 147,315       95.08K/s

09:27:55 (94.70 KB/s) - `antlr.tbz2' saved [147315]

$ tar -tjf antlr.tbz2

bzip2: Compressed file ends unexpectedly;
         perhaps it is corrupted?  *Possible* reason follows.
bzip2: Inappropriate ioctl for device
         Input file = (stdin), output file = (stdout)

It is possible that the compressed file(s) have become corrupted.
You can use the -tvv option to test integrity of such files.

You can use the `bzip2recover' program to attempt to recover
data from undamaged sections of corrupted files.

tar: Child returned status 2
tar: Error exit delayed from previous errors



Performance is still a bit of an issue. These were downloaded from  
FishEye:

- Downloaded over 3Mb ADSL connection:

10:22:43 (5.61 KB/s) - `antlr.tgz' saved [1928104]
10:28:13 (5.91 KB/s) - `antlr.tgz' saved [1928104]
10:35:03 (6.60 KB/s) - `antlr.tgz' saved [1928104]
11:25:28 (7.91 KB/s) - `antlr.tgz' saved [1928104]

- Downloaded over ethernet in datacenter:

04:21:40 (20.82 KB/s) - `antlr.tgz' saved [160730]
04:22:32 (21.80 KB/s) - `antlr.tgz' saved [160730]

Compare that with downloading from the official ANTLR site (static  
archive served over HTTP):

- Downloaded over 3Mb ADSL connection:

11:00:22 (237.19 KB/s) - `antlr-3.0.tar.gz' saved [3257540/3257540]
11:16:38 (229.12 KB/s) - `antlr-3.0.tar.gz' saved [3257540/3257540]

- Downloaded over ethernet in datacenter:

04:18:01 (834.51 KB/s) - `antlr-3.0.tar.gz' saved [3257540/3257540]

Cheers,
Wincent





From jaluber at gmx.de  Fri Jul  6 06:34:28 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 06 Jul 2007 15:34:28 +0200
Subject: [antlr-interest] Debugging doesn't work with grammar
In-Reply-To: <ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>
References: <468D6589.604@gmx.de>
	<ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>
Message-ID: <468E44E4.5020202@gmx.de>

Thomas Brandon wrote:
> On 7/6/07, Johannes Luber <jaluber at gmx.de> wrote:
>> Hi!
>>
> Without the input you used I can't be sure, but it looks like a
> problem with non-matched "s in actions. To avoid non-LL* issues the
> grammar uses a fixed lookahead in the NESTED_ACTION rule, so upon
> seeing a " it decides it must be an ACTION_STRING_LITERAL, if there is
> no closing " it will swallow input until the end of the file. Looks
> like it's not finding that matching " for some reason.

I don't want post the grammar with the ACTION_STRING_LITERAL problem
here. If you need it I can send it off-list. I've attached my other test
grammar, though.

>> Testing a Java version of the file with the same input as for the
>> exception results, that the remote debugger doesn't connect with parser
>> (mind you, I've used the normal debug menu here).
> I was able to debug the attached grammar so not sure what's going on
> there. Did you get any errors in the console? Is the code generated
> correctly? Did you try remote debugging? Are you able to debug other
> grammars?

I didn't get any errors in the console. While looking again to be sure
that I haven't overlooked them, I somehow managed to start debugging of
the Java version. Not sure why it didn't work yesterday. But the
attached grammar isn't still recognized correctly. I end with "root ->
action -> MismatchedTokenException" and an entirely red input pane. What
goes wrong here?

Regarding remote debugging: I tried it with the C# version wihtout much
success, but not with the Java version, as I don't have parser for that.
I've tested Java.g with the same result as with the attached grammar.
But using the debug option caused it to be truncated. My non-attached
grammar was also truncated, but resulted in a different parse:

" 		-> MismatchedTokenException
 root -> action -> actionScopeName -> parser
		-> MismatchedTokenException"

Looking at this I'm not sure if the culprit is the syntactic predicate
code, as you suggested.

Best regards,
Johannes Luber

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: BackslashBugTest.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/bede7b3d/attachment.pl 

From tbrandonau at gmail.com  Fri Jul  6 07:28:52 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 7 Jul 2007 00:28:52 +1000
Subject: [antlr-interest] Debugging doesn't work with grammar
In-Reply-To: <468E44E4.5020202@gmx.de>
References: <468D6589.604@gmx.de>
	<ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>
	<468E44E4.5020202@gmx.de>
Message-ID: <ebc876d70707060728y1abcdf36ube17226e6ae6e5a0@mail.gmail.com>

On 7/6/07, Johannes Luber <jaluber at gmx.de> wrote:
> Thomas Brandon wrote:
> > On 7/6/07, Johannes Luber <jaluber at gmx.de> wrote:
> >> Hi!
> >>
> > Without the input you used I can't be sure, but it looks like a
> > problem with non-matched "s in actions. To avoid non-LL* issues the
> > grammar uses a fixed lookahead in the NESTED_ACTION rule, so upon
> > seeing a " it decides it must be an ACTION_STRING_LITERAL, if there is
> > no closing " it will swallow input until the end of the file. Looks
> > like it's not finding that matching " for some reason.
>
> I don't want post the grammar with the ACTION_STRING_LITERAL problem
> here. If you need it I can send it off-list. I've attached my other test
> grammar, though.
>
> >> Testing a Java version of the file with the same input as for the
> >> exception results, that the remote debugger doesn't connect with parser
> >> (mind you, I've used the normal debug menu here).
> > I was able to debug the attached grammar so not sure what's going on
> > there. Did you get any errors in the console? Is the code generated
> > correctly? Did you try remote debugging? Are you able to debug other
> > grammars?
>
> I didn't get any errors in the console. While looking again to be sure
> that I haven't overlooked them, I somehow managed to start debugging of
> the Java version. Not sure why it didn't work yesterday. But the
> attached grammar isn't still recognized correctly. I end with "root ->
> action -> MismatchedTokenException" and an entirely red input pane. What
> goes wrong here?
I was not able to replicate this error using your previously attached
grammar. I found one grammar error and a few tree building errors but
after fixing them it parsed the attached grammar without error.
The grammar error I found was in the 'rule' rule where I needed to
change 'ruleAction+' to 'ruleAction*'. The tree building errors were
in ruleScopeSpec where it didn't like the "'scope'" literal reference
in the rewrite, changing to "SCOPE" (the token name) fixed that. I
also had to change the 'id+' in the rewrite to 'id*' as the 'id+' is
optional. Finally I was getting errors in the '-> ^(atom ebnfSuffix?)'
rewrite in element as atom was returning empty trees, making the empty
rewrites in atom instead return a PLACEHOLDER node fixed those. Then
the attached grammar parsed ok. So not sure what's going on at your
end. That was with ANTLRWorks 1.0.2, so ANTLR 3.0, so if you are using
a newer build you may want to test in the 3.0 release.
> Regarding remote debugging: I tried it with the C# version wihtout much
> success, but not with the Java version, as I don't have parser for that.
> I've tested Java.g with the same result as with the attached grammar.
> But using the debug option caused it to be truncated. My non-attached
> grammar was also truncated, but resulted in a different parse:
>
> "               -> MismatchedTokenException
>  root -> action -> actionScopeName -> parser
>                 -> MismatchedTokenException"
>
> Looking at this I'm not sure if the culprit is the syntactic predicate
> code, as you suggested.
Sorry, not sure I'm following you here. You mean parsing Java.g from
the ANTLR distribution with your ANTLR3ToRelaxNG grammar resulted in
the same error as parsing BackslashBugTest below? And to test that you
used ANTLRWorks debug option which had to truncate the input?
>
> Best regards,
> Johannes Luber
>

Tom.
>
> grammar BackslashBugTest;
>
> data:   CHARACTER*;
>
> CHARACTER
>         :       SINGLE_CHARACTER
>         |       SIMPLE_ESCAPE_SEQUENCE
>         ;
>
> fragment SINGLE_CHARACTER
>         :       ~('\'' | '\\' | NEW_LINE_CHARACTER )
>         ;
>
> fragment SIMPLE_ESCAPE_SEQUENCE
>         :       '\\\''
>         |       '\\\"'
>         |       '\\\\'
>         |       '\\0'
>         |       '\\a'
>         |       '\\b'
>         |       '\\f'
>         |       '\\n'
>         |       '\\r'
>         |       '\\t'
>         |       '\\v'
>         ;
>
> NEW_LINE_CHARACTER
>         :       '\u000D' // Carriage return character
>         |       '\u000A' // Line feed character
>         |       '\u0085' // Next line character
>         |       '\u2028' // Line separator character
>         |       '\u2029' // Paragraph separator character
>         ;
>
>

From jaluber at gmx.de  Fri Jul  6 09:19:39 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 06 Jul 2007 18:19:39 +0200
Subject: [antlr-interest] Debugging doesn't work with grammar
In-Reply-To: <ebc876d70707060728y1abcdf36ube17226e6ae6e5a0@mail.gmail.com>
References: <468D6589.604@gmx.de>	<ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>	<468E44E4.5020202@gmx.de>
	<ebc876d70707060728y1abcdf36ube17226e6ae6e5a0@mail.gmail.com>
Message-ID: <468E6B9B.5030802@gmx.de>

Thomas Brandon wrote:
> On 7/6/07, Johannes Luber <jaluber at gmx.de> wrote:
>>
>> I didn't get any errors in the console. While looking again to be sure
>> that I haven't overlooked them, I somehow managed to start debugging of
>> the Java version. Not sure why it didn't work yesterday. But the
>> attached grammar isn't still recognized correctly. I end with "root ->
>> action -> MismatchedTokenException" and an entirely red input pane. What
>> goes wrong here?
> I was not able to replicate this error using your previously attached
> grammar. I found one grammar error and a few tree building errors but
> after fixing them it parsed the attached grammar without error.
> The grammar error I found was in the 'rule' rule where I needed to
> change 'ruleAction+' to 'ruleAction*'. The tree building errors were
> in ruleScopeSpec where it didn't like the "'scope'" literal reference
> in the rewrite, changing to "SCOPE" (the token name) fixed that. I
> also had to change the 'id+' in the rewrite to 'id*' as the 'id+' is
> optional. Finally I was getting errors in the '-> ^(atom ebnfSuffix?)'
> rewrite in element as atom was returning empty trees, making the empty
> rewrites in atom instead return a PLACEHOLDER node fixed those. Then
> the attached grammar parsed ok. So not sure what's going on at your
> end. That was with ANTLRWorks 1.0.2, so ANTLR 3.0, so if you are using
> a newer build you may want to test in the 3.0 release.

I've tested the attached patched grammar (in case I didn't change it
correctly), but with the same results. I'm using ANTLRworks 1.0.2 and
ANTLR 3.0, so I don't know what could be wrong on my machine.

>> Regarding remote debugging: I tried it with the C# version wihtout much
>> success, but not with the Java version, as I don't have parser for that.
>> I've tested Java.g with the same result as with the attached grammar.
>> But using the debug option caused it to be truncated. My non-attached
>> grammar was also truncated, but resulted in a different parse:
>>
>> "               -> MismatchedTokenException
>>  root -> action -> actionScopeName -> parser
>>                 -> MismatchedTokenException"
>>
>> Looking at this I'm not sure if the culprit is the syntactic predicate
>> code, as you suggested.
> Sorry, not sure I'm following you here. You mean parsing Java.g from
> the ANTLR distribution with your ANTLR3ToRelaxNG grammar resulted in
> the same error as parsing BackslashBugTest below?

Correct.

> And to test that you
> used ANTLRWorks debug option which had to truncate the input?

Correct again.

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNG.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/e59f926b/attachment.pl 

From rdclark at gmail.com  Fri Jul  6 09:24:34 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 6 Jul 2007 09:24:34 -0700
Subject: [antlr-interest] Tree gramar, StringTemplate,
	Java target conditionals problem
In-Reply-To: <468E0AA4.8020307@epcc.ed.ac.uk>
References: <468E0AA4.8020307@epcc.ed.ac.uk>
Message-ID: <d3992d900707060924o3347f5d2ne9637df2130f1412@mail.gmail.com>

This is a known issue, and Ter has a bug filed for it.

For now, use
alias={$ID != null? $ID.text : null}

 ...Richard


On 7/6/07, Bartosz Dobrzelecki <bartosz at epcc.ed.ac.uk> wrote:
> I have the following rule in my tree grammar:
>
> selExpr :       ^(COL expr ID?)
>                 -> template(expression={$expr.st},alias={$ID.text})
>                 "<expression><if(alias)> AS <alias><endif>" ;

From tbrandonau at gmail.com  Fri Jul  6 10:21:40 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 7 Jul 2007 03:21:40 +1000
Subject: [antlr-interest] Debugging doesn't work with grammar
In-Reply-To: <468E6B9B.5030802@gmx.de>
References: <468D6589.604@gmx.de>
	<ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>
	<468E44E4.5020202@gmx.de>
	<ebc876d70707060728y1abcdf36ube17226e6ae6e5a0@mail.gmail.com>
	<468E6B9B.5030802@gmx.de>
Message-ID: <ebc876d70707061021i5f5e4931h1f69081ad6870980@mail.gmail.com>

On 7/7/07, Johannes Luber <jaluber at gmx.de> wrote:
> Thomas Brandon wrote:
> > On 7/6/07, Johannes Luber <jaluber at gmx.de> wrote:
> >>
> >> I didn't get any errors in the console. While looking again to be sure
> >> that I haven't overlooked them, I somehow managed to start debugging of
> >> the Java version. Not sure why it didn't work yesterday. But the
> >> attached grammar isn't still recognized correctly. I end with "root ->
> >> action -> MismatchedTokenException" and an entirely red input pane. What
> >> goes wrong here?
> > I was not able to replicate this error using your previously attached
> > grammar. I found one grammar error and a few tree building errors but
> > after fixing them it parsed the attached grammar without error.
> > The grammar error I found was in the 'rule' rule where I needed to
> > change 'ruleAction+' to 'ruleAction*'. The tree building errors were
> > in ruleScopeSpec where it didn't like the "'scope'" literal reference
> > in the rewrite, changing to "SCOPE" (the token name) fixed that. I
> > also had to change the 'id+' in the rewrite to 'id*' as the 'id+' is
> > optional. Finally I was getting errors in the '-> ^(atom ebnfSuffix?)'
> > rewrite in element as atom was returning empty trees, making the empty
> > rewrites in atom instead return a PLACEHOLDER node fixed those. Then
> > the attached grammar parsed ok. So not sure what's going on at your
> > end. That was with ANTLRWorks 1.0.2, so ANTLR 3.0, so if you are using
> > a newer build you may want to test in the 3.0 release.
>
> I've tested the attached patched grammar (in case I didn't change it
> correctly), but with the same results. I'm using ANTLRworks 1.0.2 and
> ANTLR 3.0, so I don't know what could be wrong on my machine.
Sorry, should have posted changed rules rather than describing changes.
I changed ruleScopeSpec to:
ruleScopeSpec
       :       ( 'scope' ACTION )?
               ( 'scope' id+ ';' )*
               -> ^(SCOPE ACTION? id*)
       ;
i.e. replacing the SCOPE in rewrite not in the matching. This made
ANTLR create a synthetic SCOPE node rather than trying to use one of
the optional 'scope' tokens. Your version:
ruleScopeSpec
       :       ( SCOPE ACTION )?
               ( SCOPE id+ ';' )*
               -> ^(SCOPE ACTION? id*)
       ;
means ANTLR again tries to re-use the SCOPE tokens and so errors when
they aren't present. Might be best to rewrite it so it doesn't rely on
ANTLR's not equating SCOPE and 'scope' but the first version seems to
work.
And it was the empty rewrites in atom not element that were causing
issues. I left element alone. So I had:
element // Simplified AST
       :       id ('='|'+=') rulepart=(atom|block) ebnfSuffix? ->
^($rulepart ebnfSuffix?)
       |   atom ebnfSuffix? -> ^(atom ebnfSuffix?)
   |   ebnf
       |   ACTION ->
       |   SEMPRED '=>'? ->
       |   treeSpec -> // No tree grammars are supported, as those
don't match the actual input 1:1
       ;

// Simplified AST
atom:   range ('^'|'!')? -> PLACEHOLDER
   |   terminal
   |   notSet ('^'|'!')? -> PLACEHOLDER
   |   rr=RULE_REF ARG_ACTION? ('^'|'!')? -> $rr
   ;
With those changes, the most recently attached grammar parses the
input given previously without error.

I was able to fix the lexer issue with the grammar you sent me
off-list by replacing ACTION_STRING_LITERAL with:

fragment
ACTION_STRING_LITERAL
	:	'"' ((ACTION_ESC)=>ACTION_ESC|~'"')* '"'
	;

Note that this does change the matched language, allowing single
character string literals which the previous version did not. However
I think this is correct as single character string literals should be
allowed in actions.

This allowed me to lex fine but I got a RewriteEmptyStreamException on
token rulepart in the element rule.

> >> Regarding remote debugging: I tried it with the C# version wihtout much
> >> success, but not with the Java version, as I don't have parser for that.
> >> I've tested Java.g with the same result as with the attached grammar.
> >> But using the debug option caused it to be truncated. My non-attached
> >> grammar was also truncated, but resulted in a different parse:
> >>
> >> "               -> MismatchedTokenException
> >>  root -> action -> actionScopeName -> parser
> >>                 -> MismatchedTokenException"
> >>
> >> Looking at this I'm not sure if the culprit is the syntactic predicate
> >> code, as you suggested.
> > Sorry, not sure I'm following you here. You mean parsing Java.g from
> > the ANTLR distribution with your ANTLR3ToRelaxNG grammar resulted in
> > the same error as parsing BackslashBugTest below?
>
> Correct.
>
> > And to test that you
> > used ANTLRWorks debug option which had to truncate the input?
>
> Correct again.
Not sure, but this might have been due to the truncation of input
leading to an invalid grammar file.
>
> Best regards,
> Johannes Luber
>

Tom.

From liviu.u at gmail.com  Fri Jul  6 10:40:01 2007
From: liviu.u at gmail.com (Liviu U)
Date: Fri, 6 Jul 2007 20:40:01 +0300
Subject: [antlr-interest] Referring tree nodes in rules
Message-ID: <c522653d0707061040l527b9a83x64bf7b7e098d76e4@mail.gmail.com>

Hi all,

With great help from you guys and the book I managed to put up a subset of
C# parser.
In order to build the tree, i resorted to creation of a new TreeAdapter and
custom node classes for the elements i was interested in.
Methods overriden were Create and AddChild.

In AddChild method my code looks llike this:

                NodeClass cls = (t as NodeClass);
                if ( cls != null)
                {
                        if (ct.Token.Type == CSharpParser.TK_TYPEIDENT)
                            cls.Name = (ct as NodeTypeIdent).Name;

                        if (ct.Token.Type == CSharpParser.TK_METHOD)
                            cls.methods.Add(ct as NodeMethod);

                        return;
                }

I want to put the class name from the typeident node, and add the methods to
the class method collection.

Question: Can this code be moved inside the grammar file, somehow? Could the
nodes be referreed there?
I don't really want to a tree grammar.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/9a79ff20/attachment.html 

From vbar at comp.cz  Fri Jul  6 12:10:09 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Fri, 06 Jul 2007 21:10:09 +0200
Subject: [antlr-interest] Trouble with syntactic predicates for
	parenthesized expressions
Message-ID: <468E9391.1040708@comp.cz>

Hi,

continuing with my SQL experiments, should the grammar below (again, 
ported from 
http://www.antlr.org/grammar/1062280680642/MS_SQL_SELECT.html and 
simplified to demonstrate a point) parse "(a = b)" (without the quotes, 
obviously)?

grammar Detail;

options
{
	language=CSharp;
}

@lexer::namespace
{
	Detail
}

@parser::namespace
{
	Detail
}

@rulecatch {
}

searchCondition:
	subSearchCondition ( (AND | OR) subSearchCondition )*
	;

subSearchCondition:
	(LPAREN searchCondition RPAREN) =>
		LPAREN searchCondition RPAREN
	| predicate
	;

predicate:
	expression comparisonOperator expression
	;

expression:
	subExpression (binaryOperator subExpression)*
  	;

subExpression:
	( unaryOperator )? (
		LPAREN expression RPAREN
		| dbObject
		| caseFunction
	)
	;

caseFunction:
	CASE ( expression ( WHEN expression THEN expression )+
         | ( WHEN searchCondition THEN expression )+ )
		( ELSE expression )? END
	;

dbObject:
	identifier
	( DOT identifier )*
	;

identifier:
	NonQuotedIdentifier
	;

unaryOperator:
	PLUS
	| MINUS
	| TILDE
	;

binaryOperator:
     PLUS | MINUS | STAR | DIVIDE | MOD
     ;

comparisonOperator:
	ASSIGNEQUAL | NOTEQUAL1 | NOTEQUAL2 | LESSTHANOREQUALTO1
	| LESSTHANOREQUALTO2 | LESSTHAN | GREATERTHANOREQUALTO1
	| GREATERTHANOREQUALTO2 | GREATERTHAN
	;

AND : 'and' ;
CASE : 'case' ;
ELSE : 'else' ;
END : 'end' ;
NOT : 'not' ;
OR : 'or' ;
THEN : 'then' ;
WHEN : 'when' ;

DOT : '.' ;
COMMA : ',' ;
LPAREN : '(' ;
RPAREN : ')' ;

ASSIGNEQUAL : '=' ;
NOTEQUAL1 : '<>' ;
NOTEQUAL2 : '!=' ;
LESSTHANOREQUALTO1 : '<=' ;
LESSTHANOREQUALTO2 : '!>' ;
LESSTHAN : '<' ;
GREATERTHANOREQUALTO1 : '>=' ;
GREATERTHANOREQUALTO2 : '!<' ;
GREATERTHAN : '>' ;

DIVIDE : '/' ;
PLUS : '+' ;
MINUS : '-' ;
STAR : '*' ;
MOD : '%' ;

TILDE : '~' ;

fragment
Letter : 'a'..'z' | '_' ;

fragment
Digit : '0'..'9' ;

Whitespace : ( '\t' | ' ' | '\r' | '\n' )+ 	{ $channel = HIDDEN; }
	;

NonQuotedIdentifier : Letter (Letter | Digit)* ;

I think it should - but ANTLR disagrees... :-( antlrworks-1.0.2 
generates the C# lexer & parser without warnings, the generated files 
compile cleanly, but

             DetailLexer lexer = new DetailLexer(
                 new ANTLRStringStream(text));
             DetailParser parser = new DetailParser(new 	
		CommonTokenStream(lexer));
             parser.searchCondition();

fails with

NoViableAltException(21!=[25:1: subSearchCondition : ( ( LPAREN 
searchCondition RPAREN )=> LPAREN searchCondition RPAREN | predicate );])

It isn't an isolated problem. It happens in lots of SQL expression 
grammar variants I've tried to write, appearing and going away after the 
most random (to me) changes - for example removing the caseFunction 
alternative from subExpression in the grammar above makes "(a = b)" 
parse OK, using an extra rule instead of LPAREN expr RPAREN generally 
improves results etc. Is it a bug in ANTLR?

	Bye
		Vasek



From felix at belugalounge.net  Fri Jul  6 12:13:00 2007
From: felix at belugalounge.net (Felix Schmid)
Date: Fri, 06 Jul 2007 21:13:00 +0200
Subject: [antlr-interest] Trouble parsing a language where '{' has too many
	meanings
Message-ID: <468E943C.3050000@belugalounge.net>

Hello everyone,

Antlr is a great tool and Terence and his folks have been doing a
wonderful job on it. Thank you!!

However, I am getting frustrated on a problem I am not able to solve.
Maybe someone here can help me, any advice is greatly appreciated.

I am trying to write a parser that recognizes data record schema
descriptions like the the following:

blubber {
    Type = Hash
    ShortHelp = "A short comment"
    LongHelp = {
        Some other comment ending with a dot.
    }.
    Items {
        FirstName {
            Type = String, ShortHelp = "Hallo"
            LongHelp = {
                Long Explanatory test spanning
                over multiple lines
            }.
        }
        LastName {
            Type = String
            Default = "Blah"
            ShortHelp = "(not so) interesting comment"
        }
    }
}


The grammar is pretty simple, however I am having a real hard time to
handle the multi-line text in the 'LongHelp' blocks.
The problem seems to be the curly braces surrounding (not only) the
multi-line text block.

My grammar looks as follows (condensed version):

grammar TEST;

options {
    output = AST;
}

tokens {
    ROOT ;
    SECTION ;
    ID ;
    DECL ;
    COMMA = ',' ;
    DOT = '.' ;
    QUOT = '"' ;
}

@lexer::header {
package foo;
}

@header {
package foo;
}

root
    :    section+ EOF
            -> ^( ROOT section+ )
    ;

section
    :    IDENT '{' section_type_decl '}'
            -> ^(SECTION ^(ID IDENT) section_type_decl)
     ;

section_type_decl
     :    'Type' '=' hash_type_decl
    ;

hash_type_decl
    :    'Hash' ( COMMA? hash_decl_elem ( COMMA? hash_decl_elem )* )?
            -> ^( DECL ^( 'Type' 'Hash') hash_decl_elem+ )
    ;

hash_decl_elem
    :    'Items' hash_items_decl
            -> ^('Items' hash_items_decl)
    |    help
    ;

hash_items_decl
    :    '{' hash_item_decl ( (COMMA?)! hash_item_decl )* '}'
    ;

hash_item_decl
    :    IDENT '{' hash_item_decl_elem ( COMMA? hash_item_decl_elem )* '}'
            -> ^( DECL ^( ID IDENT ) hash_item_decl_elem+)
    ;

hash_item_decl_elem
    :    'Type' '=' basic_type_decl
    ;

basic_type_decl
    :    'String' ( COMMA? string_decl_elem ( COMMA? string_decl_elem)* )?
            -> ^( 'Type' 'String' ) string_decl_elem*
    ;

string_decl_elem
    :    'Default' '=' STRING
            -> ^('Default' STRING)
    |    'Mandatory' '=' ( 'true' -> ^('Mandatory' 'true' ) | 'false' ->
^( 'Mandatory' 'false' ) )
    |    help
    ;

help
    :    'ShortHelp' '=' STRING  -> ^( 'ShortHelp' STRING )
//    |    'LongHelp' '=' ML_TEXT   -> ^( 'LongHelp' ML_TEXT )
    |    'LongHelp' '=' text   -> ^( 'LongHelp' text )
    ;

text
    :    '{'! ( options { greedy=false; } : .* )^ '}'! DOT!
    ;

fragment DIGIT
    :    ('0'..'9') ;

fragment LETTER
    :    ('A'..'Z' | 'a'..'z') ;

fragment UC_LETTER
    :    ('A'..'Z') ;

STRING
    :    QUOT ( ~( QUOT | '\n' ) )* QUOT {setText(getText().substring(1,
getText().length()-1));}
    ;

ML_TEXT
    :    '{'
        ( options {greedy=false;} : . )*
        '}' '.' {setText(getText().substring(1, getText().length()-2));}
    ;

IDENT
    :    UC_LETTER ( LETTER | DIGIT )*
    ;

WS  :     ( ' ' | '\r' '\n' | '\n' | '\t' ) { $channel=HIDDEN; }
    ;


I have tried several ways to capture the LongHelp content, however none
worked. Cause is that the lexer thinks he sees a multi-line comment as
soon as he sees a '{' (even if that '{' does not denote the beginning of
a ml text block).

What confuses me is that writing a parser for this by hand appears
straight forward: I am the parser and I have seen 'LongHelp' followed by
'=' followed by '{', so, lexer, give me all text until you see a '}'
followed by a '.'.
Apparently ANTLR works exactly the opposite way: I am the lexer, an I
see a '{'. I assume that this denotes the start of a multi-line comment,
so I read everything until I see a '}' followed by a '.' an give this to
the parser.

I have tried not matching the surroundings '{' ... '}' '.' in a parser
rule but this doesn't help for apparent reasons.

Can someone shed light on this, please? It seems to be such a simple
problem...

thank you,
felix



From dirty at apple.com  Fri Jul  6 13:16:00 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Fri, 6 Jul 2007 13:16:00 -0700
Subject: [antlr-interest] Best place to modify AST?
Message-ID: <7B8C8356-FE21-4478-BC01-9696A2077758@apple.com>

My JSON-derived grammar supports assigning JSON entities to  
variables.  These variables can then be used in other JSON entities  
to refer to the original entities:

foo = { "tag" : "value" }

{ "child" : foo }

As far as any consumer of the final tree is concerned, they shouldn't  
see this.  When they iterate through the tree, I want it to appear,  
for all intents and purposes, that the above input looks like:

{ "child" : { "tag" : "value" }

I'm trying to decide the best place to handle this.  My initial idea  
is to have two separate tree walker stages, the first would resolve  
any of these references and update the AST, and the second would  
process this updated tree.

Is this an appropriate route to take?  Can a tree walker change the  
underlying as it's, uh, walking it?

Cameron Esfahani
dirty at apple.com

"With or without religion, good people can behave well and bad people  
can do evil; but for good people to do evil - that takes religion."

Steven Weinberg



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/d9c97802/attachment.html 

From siemsen at ucar.edu  Fri Jul  6 13:41:22 2007
From: siemsen at ucar.edu (Pete Siemsen)
Date: Fri, 6 Jul 2007 14:41:22 -0600
Subject: [antlr-interest] what's wrong with my grammar?
Message-ID: <A4527D10-C1D0-4648-B159-29F754932023@ucar.edu>

I'm struggling to convert an old ANTLR v2 grammar to ANTLR v3.  I'm a  
newbie.  ANTLR reports

$ java org.antlr.Tool cim2mof.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
error(100): cim2mof.g:493:33: syntax error: antlr: cim2mof.g:493:33:  
unexpected token: qualifierType
error(100): cim2mof.g:523:1: syntax error: antlr: cim2mof.g:523:1:  
unexpected token: scope
error(100): cim2mof.g:524:23: syntax error: antlr: cim2mof.g:524:23:  
unexpected token: metaElement
error(100): cim2mof.g:525:2: syntax error: antlr: cim2mof.g:525:2:  
unexpected token: ;
$

I can't understand what ANTLR doesn't like.  The grammar is  
attached.  Any help appreciated!

-- Pete


?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/703375d2/attachment-0002.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cim2mof.g
Type: application/octet-stream
Size: 16094 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/703375d2/attachment-0001.obj 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/703375d2/attachment-0003.html 

From rschulz at sonic.net  Fri Jul  6 13:47:33 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 6 Jul 2007 13:47:33 -0700
Subject: [antlr-interest] Best place to modify AST?
In-Reply-To: <7B8C8356-FE21-4478-BC01-9696A2077758@apple.com>
References: <7B8C8356-FE21-4478-BC01-9696A2077758@apple.com>
Message-ID: <200707061347.34029.rschulz@sonic.net>

On Friday 06 July 2007 13:16, Cameron Esfahani wrote:
> My JSON-derived grammar supports assigning JSON entities to
> variables.  These variables can then be used in other JSON entities
> to refer to the original entities:
>
> foo = { "tag" : "value" }
>
> { "child" : foo }

That's a very interesting idea. It makes me wonder if you've got some 
client-side (i.e., browser-based) way of exploiting these extended JSON 
structures.


> As far as any consumer of the final tree is concerned, they shouldn't
> see this.  When they iterate through the tree, I want it to appear,
> for all intents and purposes, that the above input looks like:
>
> { "child" : { "tag" : "value" }

Do you want to do that by replicating the right-hand-side of the 
variable at the point of reference, or by some kind of structure 
sharing pointer? See below for more on these alternatives.


> I'm trying to decide the best place to handle this.  My initial idea
> is to have two separate tree walker stages, the first would resolve
> any of these references and update the AST, and the second would
> process this updated tree.

A two-pass approach may not be necessary or even the best way.


> Is this an appropriate route to take?  Can a tree walker change the
> underlying as it's, uh, walking it?

Keep in mind that the "tree" you're parsing in an ANTLR tree grammar is 
a linear / sequential encoding of a tree _traversal_, not the tree as 
such. (A distinction without a difference you say? Perhaps.) The order 
of that sequence is that which would result from a depth-first, 
left-to-right traversal of the AST so encoded. What would ordinarily be 
parent -> child links are special "down" tokens inserted by the 
tree-building parser. Where the traversal would ascend from the last 
sibling to its parent, there's an "up" token inserted.

As I understand it, this encoding is what allows conventional parsing 
techniques to be readily applied to tree parsing. (And if I might say 
so, it's brilliant).


So what I'd probably do is build the JSON tree structure (a real tree 
based on your JSON object model) in the tree parser actions with the 
variable bits handled by:

a) Building a symbol table that accumulates the right-hand-side values 
(object references to the point in the JSON object tree where the 
variable is defined)

b) Putting special variable-reference nodes into the JSON object tree at 
the appropriate point.

When the variable reference you encounter is forward, you'll create a 
symbol table entry that awaits having its value filled in. A final pass 
over the symbol table would be needed to make sure no unresolved 
references were present.

If you want to avoid having to walk the JSON object tree, you could keep 
a list of all variable-reference nodes in the symbol table entries. 
Then you can drive the replacement of variable references with their 
actual content off a scan of the symbol table itself, which is perhaps 
easier than walking the JSON object tree looking for the 
variable-reference nodes to be replaced. Perhaps.


If you want to do structure sharing, you don't even need a second pass 
of any sort, though you'd need to verify no unfilled / unresolved 
variable references were left over. This would require a special 
delegating JSON node type (or set of types, corresponding to the basic 
JSON value types).

The structure sharing approach may also require a way to replicate the 
shared value when it's modified (copy-on-modify), either via a variable 
or at its original point of definition.

All in all, I'd probably not try the structure sharing approach unless 
there were some compelling reasons to do so.


You'll also need to guard against self-reference (i.e., a variable 
reference to a definition that dominates that reference in the JSON 
value tree).


> Cameron Esfahani
> dirty at apple.com

Apple, eh? What are you guys up to, now?? Do you know a Chris Volkert? 
If you do, tell him Randy says "hi."


Randall Schulz

From jaluber at gmx.de  Fri Jul  6 14:00:17 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 06 Jul 2007 23:00:17 +0200
Subject: [antlr-interest] How to call self-build ANTLR correctly?
In-Reply-To: <011b01c7be80$eda45650$c704a8c0@hercules>
References: <011b01c7be80$eda45650$c704a8c0@hercules>
Message-ID: <468EAD61.9010903@gmx.de>

Micheal J wrote:
> Hi,
> 
> 
> Is ASTDbg.stg same as that on fisheye's browse interface?
> 
> Send me a copy of your downloaded ANTLR source archive (can I assume it has
> the same contents as the source dir you built from?). I'll compare with
> depot over the weekend. That should clarify if this is a fisheye stale
> download issue. If you also send grammar + generated files, I'll re-generate
> here and compare those too.
> 
> Micheal
> 

I seem to have managed to get the right files from fisheye now (despite
having to use tgz instead zip, as the latter stopped the download nearly
at the beginning). The only problem is that the old *.stg are still used
instead the new ones. Could it be, that the jars have them included
somewhere?

Best regards,
Johannes Luber

From jaluber at gmx.de  Fri Jul  6 14:02:11 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 06 Jul 2007 23:02:11 +0200
Subject: [antlr-interest] Debugging doesn't work with grammar
In-Reply-To: <ebc876d70707061021i5f5e4931h1f69081ad6870980@mail.gmail.com>
References: <468D6589.604@gmx.de>	<ebc876d70707052043s380ffd3dv8ab0ea602fc4a146@mail.gmail.com>	<468E44E4.5020202@gmx.de>	<ebc876d70707060728y1abcdf36ube17226e6ae6e5a0@mail.gmail.com>	<468E6B9B.5030802@gmx.de>
	<ebc876d70707061021i5f5e4931h1f69081ad6870980@mail.gmail.com>
Message-ID: <468EADD3.9080505@gmx.de>

Thomas Brandon wrote:
> On 7/7/07, Johannes Luber <jaluber at gmx.de> wrote:
 > I was able to fix the lexer issue with the grammar you sent me
> off-list by replacing ACTION_STRING_LITERAL with:
> 
> fragment
> ACTION_STRING_LITERAL
>     :    '"' ((ACTION_ESC)=>ACTION_ESC|~'"')* '"'
>     ;
> 
> Note that this does change the matched language, allowing single
> character string literals which the previous version did not. However
> I think this is correct as single character string literals should be
> allowed in actions.

Considering that ANTLR3 accepts the input grammar already you are
probably right.

> This allowed me to lex fine but I got a RewriteEmptyStreamException on
> token rulepart in the element rule.

"rulepart"? I see only "rulename" as an id for "id". Why that should be
able to cause such an exception is beyound me. After all, "rulename" is
guaranteed to be there.

And before I forget it completely - many thanks for your help so far! :)

Best regards,
Johannes Luber


From jaluber at gmx.de  Fri Jul  6 14:04:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 06 Jul 2007 23:04:56 +0200
Subject: [antlr-interest] what's wrong with my grammar?
In-Reply-To: <A4527D10-C1D0-4648-B159-29F754932023@ucar.edu>
References: <A4527D10-C1D0-4648-B159-29F754932023@ucar.edu>
Message-ID: <468EAE78.7030603@gmx.de>

Pete Siemsen wrote:
> I'm struggling to convert an old ANTLR v2 grammar to ANTLR v3.  I'm a
> newbie.  ANTLR reports
> 
> $ java org.antlr.Tool cim2mof.g
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> error(100): cim2mof.g:493:33: syntax error: antlr: cim2mof.g:493:33:
> unexpected token: qualifierType
> error(100): cim2mof.g:523:1: syntax error: antlr: cim2mof.g:523:1:
> unexpected token: scope
> error(100): cim2mof.g:524:23: syntax error: antlr: cim2mof.g:524:23:
> unexpected token: metaElement
> error(100): cim2mof.g:525:2: syntax error: antlr: cim2mof.g:525:2:
> unexpected token: ;
> $ 
> 
> I can't understand what ANTLR doesn't like.  The grammar is attached. 
> Any help appreciated!
> 
> -- Pete

ANTLR has the keyword "scope" reserved for its own use. You have to
rename the rule "scope" into something else and it should work then.

Best regards,
Johannes Luber

From liviu.u at gmail.com  Fri Jul  6 14:15:28 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sat, 7 Jul 2007 00:15:28 +0300
Subject: [antlr-interest] Rewrite rule problem!
Message-ID: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>

Hi all,


1) I cannot find the syntax for rewriting rule:

class:
  attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'

->
if I say
 ^( TK_CLASS attr* modif*  ( mtd| fld | prop )*  )

I get syntax error, RPAREN expected.

2) I think there is a bug somewhere, if i put TK_CLASS^ and forget about the
rewrite rule,
in my NodeAdapter the nodes for attr and modif are never bound to NodeClass
using AddChild.
AddChild is never called unless there is a rewrite rule and all nodes follow
the root!!!!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/30f9eea6/attachment.html 

From felix at belugalounge.net  Fri Jul  6 14:33:47 2007
From: felix at belugalounge.net (Felix Schmid)
Date: Fri, 06 Jul 2007 23:33:47 +0200
Subject: [antlr-interest] Rewrite rule problem!
In-Reply-To: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
References: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
Message-ID: <468EB53B.4040107@belugalounge.net>

Hi,

this should work:

class:
  attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
    -> ^( TK_CLASS attr* modif*  mtd* fld* prop*  )

F.


Liviu U wrote:
> Hi all,
>
>
> 1) I cannot find the syntax for rewriting rule:
>
> class:
>   attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
>
> ->
> if I say
>  ^( TK_CLASS attr* modif*  ( mtd| fld | prop )*  )
>
> I get syntax error, RPAREN expected.
>
> 2) I think there is a bug somewhere, if i put TK_CLASS^ and forget 
> about the rewrite rule,
> in my NodeAdapter the nodes for attr and modif are never bound to 
> NodeClass using AddChild.
> AddChild is never called unless there is a rewrite rule and all nodes 
> follow the root!!!!
>


From felix at belugalounge.net  Fri Jul  6 14:35:04 2007
From: felix at belugalounge.net (Felix Schmid)
Date: Fri, 06 Jul 2007 23:35:04 +0200
Subject: [antlr-interest] Rewrite rule problem!
In-Reply-To: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
References: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
Message-ID: <468EB588.7050200@belugalounge.net>

Hi,

this should work:

class:
  attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
    -> ^( TK_CLASS attr* modif*  mtd* fld* prop*  )

F.


Liviu U wrote:
> Hi all,
>
>
> 1) I cannot find the syntax for rewriting rule:
>
> class:
>   attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
>
> ->
> if I say
>  ^( TK_CLASS attr* modif*  ( mtd| fld | prop )*  )
>
> I get syntax error, RPAREN expected.
>
> 2) I think there is a bug somewhere, if i put TK_CLASS^ and forget 
> about the rewrite rule,
> in my NodeAdapter the nodes for attr and modif are never bound to 
> NodeClass using AddChild.
> AddChild is never called unless there is a rewrite rule and all nodes 
> follow the root!!!!
>



From rschulz at sonic.net  Fri Jul  6 15:05:55 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 6 Jul 2007 15:05:55 -0700
Subject: [antlr-interest] Rewrite rule problem!
In-Reply-To: <468EB588.7050200@belugalounge.net>
References: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
	<468EB588.7050200@belugalounge.net>
Message-ID: <200707061505.56016.rschulz@sonic.net>

On Friday 06 July 2007 14:35, Felix Schmid wrote:
> Hi,
>
> this should work:
>
> class:
>   attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
>     -> ^( TK_CLASS attr* modif*  mtd* fld* prop*  )

But doing that will eradicate the ordering of the mtd, fld and props as 
they appeared in the original input, putting all the mtds first, then 
all the flds and last all the props.


> F.


Randall Schulz

From matthew.j.diehl at intel.com  Fri Jul  6 15:30:03 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Fri, 6 Jul 2007 15:30:03 -0700
Subject: [antlr-interest] Rewrite rule problem!
In-Reply-To: <200707061505.56016.rschulz@sonic.net>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20233C4ED@orsmsx417.amr.corp.intel.com>

>> class:
>>   attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
>>     -> ^( TK_CLASS attr* modif*  mtd* fld* prop*  )
>
>But doing that will eradicate the ordering of the mtd, fld and props as
>they appeared in the original input, putting all the mtds first, then
>all the flds and last all the props.
>

Could you then just do it with a mix of the two ways:

class:
  attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
    -> ^( TK_CLASS attr* modif*  (mtd? fld? prop?)*  )

From parrt at cs.usfca.edu  Fri Jul  6 15:31:22 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 6 Jul 2007 15:31:22 -0700
Subject: [antlr-interest] Rewrite rule problem!
In-Reply-To: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
References: <c522653d0707061415m7693aa80p733093f0dca9b284@mail.gmail.com>
Message-ID: <A928D1E6-4D96-4867-90DD-65B6FC440D7A@cs.usfca.edu>


On Jul 6, 2007, at 2:15 PM, Liviu U wrote:

> Hi all,
>
>
> 1) I cannot find the syntax for rewriting rule:
>
> class:
>   attr* modif* TK_CLASS '{' ( mtd| fld | prop )* '}'
>
> ->
> if I say
>  ^( TK_CLASS attr* modif*  ( mtd| fld | prop )*  )
>
> I get syntax error, RPAREN expected.

should be fine...are you sure that rule alone gives you trouble?

Ter


From rdclark at gmail.com  Fri Jul  6 15:42:38 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 6 Jul 2007 15:42:38 -0700
Subject: [antlr-interest] Trouble parsing a language where '{' has too
	many meanings
In-Reply-To: <468E943C.3050000@belugalounge.net>
References: <468E943C.3050000@belugalounge.net>
Message-ID: <d3992d900707061542j518ff7d4u916c64b19c7981b5@mail.gmail.com>

Try changing the definition for ML_TEXT to put the closing element in
a single string.

ML_TEXT
   :    '{'
       ( options {greedy=false;} : . )*
       '}.'
   ;

The lexer doesn't do backtracking, so under the old definition it
would see  {...} and match it before seeing the "." Automatic error
recovery would throw awayy the dot as unrecognized (and give an
error.)

Pulling the closing bracket and dot together '}.' means they'll be
recognized as a unit.

Run the following in ANTLRWorks' debugger to see it working:

grammar multiBlock;

top	: (block | comment)* ;

comment	: ML_TEXT;

block	: BLOCK ;

ML_TEXT
   :    '{'
       ( options {greedy=false;} : . )*
       '}.'
   ;

 BLOCK	: '{' ('A'..'Z'|'a'..'z'|' ')* '}' ;


 ...Richard

P.S. Remember that the first rule to match in the lexer wins.

From siemsen at UCAR.EDU  Fri Jul  6 16:22:09 2007
From: siemsen at UCAR.EDU (Pete Siemsen)
Date: Fri, 6 Jul 2007 17:22:09 -0600
Subject: [antlr-interest] what's wrong with my grammar?
In-Reply-To: <468EAE78.7030603@gmx.de>
References: <A4527D10-C1D0-4648-B159-29F754932023@ucar.edu>
	<468EAE78.7030603@gmx.de>
Message-ID: <007038F4-D4AC-4CBC-B59B-C171DF73DDE6@UCAR.EDU>

Thank you, that fixed my problem nicely!

-- Pete



On Jul 6, 2007, at 3:04 PM, Johannes Luber wrote:

> Pete Siemsen wrote:
>> I'm struggling to convert an old ANTLR v2 grammar to ANTLR v3.  I'm a
>> newbie.  ANTLR reports
>>
>> $ java org.antlr.Tool cim2mof.g
>> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
>> error(100): cim2mof.g:493:33: syntax error: antlr: cim2mof.g:493:33:
>> unexpected token: qualifierType
>> error(100): cim2mof.g:523:1: syntax error: antlr: cim2mof.g:523:1:
>> unexpected token: scope
>> error(100): cim2mof.g:524:23: syntax error: antlr: cim2mof.g:524:23:
>> unexpected token: metaElement
>> error(100): cim2mof.g:525:2: syntax error: antlr: cim2mof.g:525:2:
>> unexpected token: ;
>> $
>>
>> I can't understand what ANTLR doesn't like.  The grammar is attached.
>> Any help appreciated!
>>
>> -- Pete
>
> ANTLR has the keyword "scope" reserved for its own use. You have to
> rename the rule "scope" into something else and it should work then.
>
> Best regards,
> Johannes Luber

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/33de5217/attachment.html 

From navicore at gmail.com  Fri Jul  6 18:33:47 2007
From: navicore at gmail.com (Ed Sweeney)
Date: Fri, 6 Jul 2007 21:33:47 -0400
Subject: [antlr-interest] beginner question: abnf?
Message-ID: <8368c3f60707061833n32cbcf30x319ff15ab6396225@mail.gmail.com>

beginner question: is there any automation to convert an abnf / rfc2234
grammar to antlr grammar?

i want to confirm there isn't any (maybe obvious) trick other than line by
line hand coding the antlr grammar from the abnf or using a different tool.
working my way thru the antlr book now...

thanks!  -ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/b7e70250/attachment.html 

From lgcraymer at yahoo.com  Fri Jul  6 21:19:41 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 6 Jul 2007 21:19:41 -0700 (PDT)
Subject: [antlr-interest] beginner question: abnf?
In-Reply-To: <8368c3f60707061833n32cbcf30x319ff15ab6396225@mail.gmail.com>
Message-ID: <639343.41629.qm@web55912.mail.re3.yahoo.com>

There is a simple trick--write an abnf->antlr
translator.  BNF grammars are pretty simple, and the
translation process is basically simple
transliteration.  You can use the grammar you want
translated as a test case.  The only unusual feature
of ABMF is the specification of repeats.

--Loring


--- Ed Sweeney <navicore at gmail.com> wrote:

> beginner question: is there any automation to
> convert an abnf / rfc2234
> grammar to antlr grammar?
> 
> i want to confirm there isn't any (maybe obvious)
> trick other than line by
> line hand coding the antlr grammar from the abnf or
> using a different tool.
> working my way thru the antlr book now...
> 
> thanks!  -ed
> 



       
____________________________________________________________________________________
Looking for a deal? Find great prices on flights and hotels with Yahoo! FareChase.
http://farechase.yahoo.com/

From navicore at gmail.com  Fri Jul  6 21:59:57 2007
From: navicore at gmail.com (Ed)
Date: Sat, 7 Jul 2007 00:59:57 -0400
Subject: [antlr-interest] beginner question: abnf?
In-Reply-To: <639343.41629.qm@web55912.mail.re3.yahoo.com>
References: <8368c3f60707061833n32cbcf30x319ff15ab6396225@mail.gmail.com>
	<639343.41629.qm@web55912.mail.re3.yahoo.com>
Message-ID: <8368c3f60707062159t728fdbc7r236fec89d9ebbfbb@mail.gmail.com>

excellent.  thanks!  -ed

On 7/7/07, Loring Craymer <lgcraymer at yahoo.com> wrote:
>
> There is a simple trick--write an abnf->antlr
> translator.  BNF grammars are pretty simple, and the
> translation process is basically simple
> transliteration.  You can use the grammar you want
> translated as a test case.  The only unusual feature
> of ABMF is the specification of repeats.
>
> --Loring
>
>
> --- Ed Sweeney <navicore at gmail.com> wrote:
>
> > beginner question: is there any automation to
> > convert an abnf / rfc2234
> > grammar to antlr grammar?
> >
> > i want to confirm there isn't any (maybe obvious)
> > trick other than line by
> > line hand coding the antlr grammar from the abnf or
> > using a different tool.
> > working my way thru the antlr book now...
> >
> > thanks!  -ed
> >
>
>
>
>
>
> ____________________________________________________________________________________
> Looking for a deal? Find great prices on flights and hotels with Yahoo!
> FareChase.
> http://farechase.yahoo.com/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/e88708e3/attachment.html 

From aliaazimi at yahoo.com  Fri Jul  6 22:36:47 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Fri, 6 Jul 2007 22:36:47 -0700 (PDT)
Subject: [antlr-interest] Rewrite rule (newbie question)
Message-ID: <897326.11223.qm@web58109.mail.re3.yahoo.com>

Hi,
   
  I have some grammar and rewrite rules which when I try to generate code from them, it painfully slows my computer down. Could you please tell me what is wrong? a sample of the grammar and the rewrite rule is as follows: is the rewrite rule ok?
   
  
textualsystemdefinition 
 :packagereferenceclause*('system' systemname end entityinsystem+ 'endsystem'(systemname)?end|typebasedsystemdefinition)
 ->^(UNIT packagereferenceclause*) ^('system'systemname end entityinsystem+ 'endsystem' (systemname)? end typebasedsystemdefinition)
 ;
   
  Many  thanks in advance
   
  Best wishes,
   
  Al

       
---------------------------------
Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070706/9d208db9/attachment.html 

From felix at belugalounge.net  Sat Jul  7 03:42:09 2007
From: felix at belugalounge.net (Felix Schmid)
Date: Sat, 07 Jul 2007 12:42:09 +0200
Subject: [antlr-interest] Trouble parsing a language where '{' has too
 many meanings
In-Reply-To: <d3992d900707061542j518ff7d4u916c64b19c7981b5@mail.gmail.com>
References: <468E943C.3050000@belugalounge.net>
	<d3992d900707061542j518ff7d4u916c64b19c7981b5@mail.gmail.com>
Message-ID: <468F6E01.5070607@belugalounge.net>

Richard, thanks for the reply. However, why should this prevent the 
lexer from seeing

{
   Type = Hash
   ShortHelp = "A short comment"
   LongHelp = {
       Some other comment ending with a dot.
   }.

as a comment (where the input is

blubber {
   Type = Hash
   ShortHelp = "A short comment"
   LongHelp = {
       Some other comment ending with a dot.
   }.
   Items {
       FirstName {
           Type = String, ShortHelp = "Hallo"
           LongHelp = {
               Long Explanatory test spanning
               over multiple lines
           }.
       }
       LastName {
           Type = String
           Default = "Blah"
           ShortHelp = "(not so) interesting comment"
       }
   }
}

??

I think my problem is that I have to match the '{' in the parser rules 
because it can occur in so many situations.
What would help was a predicate in the lexer whose value I could set 
from a parser rule. Does ANTLR support this directly?



felix

Richard Clark wrote:
> Try changing the definition for ML_TEXT to put the closing element in
> a single string.
>
> ML_TEXT
>   :    '{'
>       ( options {greedy=false;} : . )*
>       '}.'
>   ;
>
> The lexer doesn't do backtracking, so under the old definition it
> would see  {...} and match it before seeing the "." Automatic error
> recovery would throw awayy the dot as unrecognized (and give an
> error.)
>
> Pulling the closing bracket and dot together '}.' means they'll be
> recognized as a unit.
>
> Run the following in ANTLRWorks' debugger to see it working:
>
> grammar multiBlock;
>
> top    : (block | comment)* ;
>
> comment    : ML_TEXT;
>
> block    : BLOCK ;
>
> ML_TEXT
>   :    '{'
>       ( options {greedy=false;} : . )*
>       '}.'
>   ;
>
> BLOCK    : '{' ('A'..'Z'|'a'..'z'|' ')* '}' ;
>
>
> ...Richard
>
> P.S. Remember that the first rule to match in the lexer wins.


From liviu.u at gmail.com  Sat Jul  7 04:44:16 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sat, 7 Jul 2007 14:44:16 +0300
Subject: [antlr-interest] Exclusion rule
Message-ID: <c522653d0707070444v5ef9c9d6ma30237169121ec35@mail.gmail.com>

I would like to have a rule that matches a C# block but ignores everything
inside
something like:

block  '{'  anything '}' ....

I tried to use the syntax i saw in token definition... ~X to match anything
except X. The problem is that the recursion never stops even with a simple
input text
if i have nested blocks.
Any clue?

grammar Test2;

options
{
  backtrack=true;
}

tokens
{
  TK_BLOCK;
}

prog
    :     (ID | block)*;

block
    :    '{'  (   block | (  ~( '}' )   )*   ) *   '}';


WS     :     (' '|'\r' | '\n' | '\t' )+ {skip();};
ID     :     'a'..'z'|'A'..'Z';
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/7e8d73df/attachment.html 

From liviu.u at gmail.com  Sat Jul  7 04:45:01 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sat, 7 Jul 2007 14:45:01 +0300
Subject: [antlr-interest] Solved problem with matching nested blocks
Message-ID: <c522653d0707070445l468955efi2a6ff614ae0fc240@mail.gmail.com>

I fixed the problem ;) .

grammar Test2;

options
{
  backtrack=true;
}

tokens
{
  TK_BLOCK;
}

prog
    :     (ID | block)*;

block
    :    '{'  noblock? (block noblock?)* '}';

noblock
    :    (~('}'|'{'))+;



WS     :     (' '|'\r' | '\n' | '\t' )+ {skip();};
ID     :     'a'..'z'|'A'..'Z';
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/51424748/attachment-0001.html 

From liviu.u at gmail.com  Sat Jul  7 08:39:39 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sat, 7 Jul 2007 18:39:39 +0300
Subject: [antlr-interest] call Skip in rules
Message-ID: <c522653d0707070839mcfe43fm3e5ce4b40aa000df@mail.gmail.com>

Hi

This syntax is invalid for rules:

noblock
    :    ( ~( LCURRLY|RCURRLY ) )+ { Skip(); };

C# target.
If i put an empty rewrite rule, i get an error, missing setMatch template.

How to make it be ignored?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/07077811/attachment.html 

From luoll at asiainfo.com  Sat Jul  7 08:39:21 2007
From: luoll at asiainfo.com (=?gb2312?B?wt7AtMDx?=)
Date: Sat, 7 Jul 2007 23:39:21 +0800
Subject: [antlr-interest] unsubscribe
In-Reply-To: <c522653d0707070839mcfe43fm3e5ce4b40aa000df@mail.gmail.com>
Message-ID: <004101c7c0ac$fdfc0b50$6401a8c0@luoll>

 

  _____  

???: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] ?? Liviu U
????: 2007?7?7? 23:40
???: antlr-interest at antlr.org
??: [antlr-interest] call Skip in rules


Hi

This syntax is invalid for rules:

noblock
    :    ( ~( LCURRLY|RCURRLY ) )+ { Skip(); };    

C# target.
If i put an empty rewrite rule, i get an error, missing setMatch template.

How to make it be ignored?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/f7c601cf/attachment.html 

From rschulz at sonic.net  Sat Jul  7 08:50:02 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 7 Jul 2007 08:50:02 -0700
Subject: [antlr-interest] Nested Closures -> Nested AST Generation
Message-ID: <200707070850.02810.rschulz@sonic.net>

Hi,

Here is a fragment of a AST-generating grammar I have:

atom
  : ( '('
        predicate = term
        '('
          RoleSet ( '(' role = name arg = term ')' ) *
        ')'
      ')'
    )
  ->  ^( RoleSet $predicate ^( RoleArg $role $arg ) * )
  ;


I've discovered (through the miracle of DOTTreeGenerator!) that no 
matter how many repetitions of the ( role=name arg=term ) tuples appear 
following the RoleSet token, only one RoleArg subtree is present in the 
synthesized AST. That single RoleArg subtree's values always correspond 
to the last repetition of the RoleSet tuples that was present in the 
input.

Am I doing this wrong, or is this a bug?


Randall Schulz

From jaluber at gmx.de  Sat Jul  7 10:55:18 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sat, 07 Jul 2007 19:55:18 +0200
Subject: [antlr-interest] Nested Closures -> Nested AST Generation
In-Reply-To: <200707070850.02810.rschulz@sonic.net>
References: <200707070850.02810.rschulz@sonic.net>
Message-ID: <468FD386.1030403@gmx.de>

Randall R Schulz wrote:
> Hi,
> 
> Here is a fragment of a AST-generating grammar I have:
> 
> atom
>   : ( '('
>         predicate = term
>         '('
>           RoleSet ( '(' role = name arg = term ')' ) *
>         ')'
>       ')'
>     )
>   ->  ^( RoleSet $predicate ^( RoleArg $role $arg ) * )
>   ;
> 
> 
> I've discovered (through the miracle of DOTTreeGenerator!) that no 
> matter how many repetitions of the ( role=name arg=term ) tuples appear 
> following the RoleSet token, only one RoleArg subtree is present in the 
> synthesized AST. That single RoleArg subtree's values always correspond 
> to the last repetition of the RoleSet tuples that was present in the 
> input.
> 
> Am I doing this wrong, or is this a bug?
> 

Try "RoleSet ( '(' role+=name arg+=term ')' ) *".

Best regards,
Johannes Luber

From aliaazimi at yahoo.com  Sat Jul  7 11:00:57 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sat, 7 Jul 2007 11:00:57 -0700 (PDT)
Subject: [antlr-interest] newbie rewrite error messages
Message-ID: <561816.46216.qm@web58111.mail.re3.yahoo.com>

Hi,
   
  When I try to generate code from my grammar the following rewrite rule produces some errors.
  priorityinputbody
              :(virtuality)? stimulus(','stimulus)*->^(virtuality? stimulus+)
              ;
  But when I try the following there is no error produced. 
  priorityinputbody
              :(virtuality)? stimulus(','stimulus)*->^(VIR virtuality? stimulus+)
              ; 
  VIR:
  ;
   
  1)So I deduce that I am not allowed to use ??? at root node. Is that correct?
  2) So if I opt for the second rewrite rule, I need to define VIR. How should I define it?
   
  Thanking you in advance. I am very grateful.
   
  Best wishes,
   
  Al

       
---------------------------------
Get the Yahoo! toolbar and be alerted to new email wherever you're surfing. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/13888243/attachment.html 

From rschulz at sonic.net  Sat Jul  7 11:08:27 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 7 Jul 2007 11:08:27 -0700
Subject: [antlr-interest] Nested Closures -> Nested AST Generation
In-Reply-To: <468FD386.1030403@gmx.de>
References: <200707070850.02810.rschulz@sonic.net> <468FD386.1030403@gmx.de>
Message-ID: <200707071108.27440.rschulz@sonic.net>

On Saturday 07 July 2007 10:55, Johannes Luber wrote:
> Randall R Schulz wrote:
> > Hi,
> >
> > Here is a fragment of a AST-generating grammar I have:
> >
> > atom
> >   : ( '('
> >         predicate = term
> >         '('
> >           RoleSet ( '(' role = name arg = term ')' ) *
> >         ')'
> >       ')'
> >     )
> >   ->  ^( RoleSet $predicate ^( RoleArg $role $arg ) * )
> >   ;
> >
> >
> > I've discovered (through the miracle of DOTTreeGenerator!) that no
> > matter how many repetitions of the ( role=name arg=term ) tuples
> > appear following the RoleSet token, only one RoleArg subtree is
> > present in the synthesized AST. That single RoleArg subtree's
> > values always correspond to the last repetition of the RoleSet
> > tuples that was present in the input.
> >
> > Am I doing this wrong, or is this a bug?
>
> Try "RoleSet ( '(' role+=name arg+=term ')' ) *".

Great, thanks, that works. I had a work-around, but it was not quite as 
clean as this (it took an auxiliary production).


> Best regards,
> Johannes Luber


Randall Schulz

From belayda at gmail.com  Sat Jul  7 12:09:53 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Sat, 7 Jul 2007 12:09:53 -0700
Subject: [antlr-interest] Changing the bracket delimiters in StringTemplate3
Message-ID: <3e5ed32f0707071209tf9f5663t3f8683d8aefad810@mail.gmail.com>

Hello,

I can't find the answers on the Wikis or book.  I think I've seen this
somewhere, so I'm hoping someone can point me in the write direction.

I'm having trouble with StringTemplate and the default '<<'  and '>>'
delimiters.  The problem is my template is C code which uses the '>>'
and <<'' strings.  So, when the template is evaluated, it gets
confused and crashes.

How do I change '>>' and '<<'?  I hoping there is some sort of global
option that can change this in my StringTempalte group file.

thanks in advance!
-Bernardo Elayda

From Stephen_Hardy at rabbit.com  Sat Jul  7 12:17:07 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sat, 7 Jul 2007 12:17:07 -0700
Subject: [antlr-interest] C Target: what to use instead of CommonTree when
	writing tree grammars, antlr 3.0
Message-ID: <62BABE024B7C074E9194E9727A418979013200A0@dvs-sms-mail01.digi.com>

Jim,

 

I can't get my head around this.  Have you implemented the necessary
infrastructure for using tree walkers with the C target?  I would like
to use templates, however they are not yet available for C.  So, I am
happy to use printf's and other hacks to get going.  The trouble is, I
can't relate the java examples in the book to how to do this in C, and
there are no examples.  For example, I am writing

 

type_id:

            : IDENTIFIER { printf("\%s ", $IDENTIFIER.text->chars); }

            ;

 

But it obviously isn't that simple since I get errors all over the
place.  Also, what is the correct ASTLabelType incantation to use in the
options section?  It isn't CommonTree, that's for sure.

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/784a3f76/attachment.html 

From parrt at cs.usfca.edu  Sat Jul  7 12:22:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Jul 2007 12:22:12 -0700
Subject: [antlr-interest] Changing the bracket delimiters in
	StringTemplate3
In-Reply-To: <3e5ed32f0707071209tf9f5663t3f8683d8aefad810@mail.gmail.com>
References: <3e5ed32f0707071209tf9f5663t3f8683d8aefad810@mail.gmail.com>
Message-ID: <2B1FDB45-6914-4EF9-98CA-D164132EEC13@cs.usfca.edu>

Howdy. Try \< and see if that works.
Ter


From open.zone at virgin.net  Sat Jul  7 15:26:06 2007
From: open.zone at virgin.net (Micheal J)
Date: Sat, 7 Jul 2007 23:26:06 +0100
Subject: [antlr-interest] Changing the bracket delimiters in
	StringTemplate3
In-Reply-To: <3e5ed32f0707071209tf9f5663t3f8683d8aefad810@mail.gmail.com>
Message-ID: <000701c7c0e5$d09f40d0$c704a8c0@hercules>

> Hello,
> 
> I can't find the answers on the Wikis or book.  I think I've 
> seen this somewhere, so I'm hoping someone can point me in 
> the write direction.
> 
> I'm having trouble with StringTemplate and the default '<<'  
> and '>>' delimiters.  The problem is my template is C code 
> which uses the '>>' and <<'' strings.  So, when the template 
> is evaluated, it gets confused and crashes.
> 
> How do I change '>>' and '<<'?  I hoping there is some sort 
> of global option that can change this in my StringTempalte group file.

http://www.antlr.org/wiki/display/ST/StringTemplate+3.0+Printable+Documentat
ion#StringTemplate3.0PrintableDocumentation-SettingtheExpressionDelimiters

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From belayda at gmail.com  Sat Jul  7 15:37:28 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Sat, 7 Jul 2007 15:37:28 -0700
Subject: [antlr-interest] Changing the bracket delimiters in
	StringTemplate3
Message-ID: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.com>

>Howdy. Try \< and see if that works.
>Ter

That did not work.  Here's a short  and simplified version of my
tempalte and the problem:

group Format;

toplevel(upperwords,lowerwords) ::= ::= <<

static const u16_t upperdata[]= {
<upperwords:{a|0x<a>}; wrap, separator=", ">
};

c = d << 3;
e = f >> 8;

static const u16_t lowerdata[]= {
<lowerwords:{b|0x<b>;wrap, separator=", ">
};

>>

I tried:

c = d \<< 3;
e = f \>> 8;

and

c = d \<<< 3;
e =f \<>> 8;

neither of these worked.

In the real code, the "<<" and ">>" are in multiple places.

Perhpas I misunderstood the suggestion?
-Bernardo Elayda

From parrt at cs.usfca.edu  Sat Jul  7 15:59:51 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Jul 2007 15:59:51 -0700
Subject: [antlr-interest] Changing the bracket delimiters in
	StringTemplate3
In-Reply-To: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.com>
References: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.com>
Message-ID: <23B60F71-41F4-4A4B-A7AD-84F7BEF47091@cs.usfca.edu>


On Jul 7, 2007, at 3:37 PM, Bernardo Elayda wrote:

>> Howdy. Try \< and see if that works.
>> Ter
>
> That did not work.  Here's a short  and simplified version of my
> tempalte and the problem:

Weird.  \>> works for me usually.  Perhaps use the $...$ then as  
Michael suggests.
Ter

From antlr at mirality.co.nz  Sat Jul  7 16:18:17 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 08 Jul 2007 11:18:17 +1200
Subject: [antlr-interest] Changing the bracket delimiters in
 StringTemplate3
In-Reply-To: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.co
 m>
References: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.com>
Message-ID: <20070707231840.94A9911EB6C@www.antlr.org>

At 10:37 8/07/2007, Bernardo Elayda wrote:
 >>Howdy. Try \< and see if that works.
[...]
 >That did not work.  Here's a short  and simplified version of my
 >tempalte and the problem:
[...]
 >c = d \<< 3;
 >e = f \>> 8;

How about this instead:

c = d \<\< 3;
e = f \>\> 8;

(Just a guess.)


From belayda at gmail.com  Sat Jul  7 17:56:26 2007
From: belayda at gmail.com (Bernardo Elayda)
Date: Sat, 7 Jul 2007 17:56:26 -0700
Subject: [antlr-interest] Changing the bracket delimiters in
	StringTemplate3--Good Guess!
Message-ID: <3e5ed32f0707071756k87b6d16ha95da0baa847f3a5@mail.gmail.com>

>How about this instead:
>
>c = d \<\< 3;
>e = f \>\> 8;
>
Thanks Gavin!  That worked.

I've made a page in the StringTemplate Wiki called 'How to Allow
Double Angle Brackets as a String', so that others can benefit.  I
hope someone can put it in the right place.  It belongs in the
StringTemplate FAQ but I can't seem to move the page.  I'm somewhat
wiki-challenged.

thanks again for everyone's help!
-Bernardo Elayda

From parrt at cs.usfca.edu  Sat Jul  7 18:03:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 7 Jul 2007 18:03:37 -0700
Subject: [antlr-interest] Changing the bracket delimiters in
	StringTemplate3--Good Guess!
In-Reply-To: <3e5ed32f0707071756k87b6d16ha95da0baa847f3a5@mail.gmail.com>
References: <3e5ed32f0707071756k87b6d16ha95da0baa847f3a5@mail.gmail.com>
Message-ID: <4464DBF1-2EC1-4BD6-8651-3877FB797DF9@cs.usfca.edu>

Added a Syntax secton of ST faq and moved it.

Ter
On Jul 7, 2007, at 5:56 PM, Bernardo Elayda wrote:

>> How about this instead:
>>
>> c = d \<\< 3;
>> e = f \>\> 8;
>>
> Thanks Gavin!  That worked.
>
> I've made a page in the StringTemplate Wiki called 'How to Allow
> Double Angle Brackets as a String', so that others can benefit.  I
> hope someone can put it in the right place.  It belongs in the
> StringTemplate FAQ but I can't seem to move the page.  I'm somewhat
> wiki-challenged.
>
> thanks again for everyone's help!
> -Bernardo Elayda


From jimi at temporal-wave.com  Sat Jul  7 20:01:50 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 7 Jul 2007 20:01:50 -0700
Subject: [antlr-interest] C Target: what to use instead of CommonTree
	whenwriting tree grammars, antlr 3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979013200A0@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979013200A0@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76EA2@wavemachine.temporal-wave.com>

Tree walking and everything is all implemented (it better be or my own
in production parsers are imaginary ;-).

 

However, you don't say if this snippet is in your tree generating
parser, or your tree parser, nor supply the error messages?

 

Once again, the example projects should rescue you. While we could do
with a more comprehensive tree walking example, but in the tree parser
for the strangely named 'treeparser' example, you will find:

 

decl : ^(DECL type declarator)

 

       // label.start, label.start, label.text

       {

         printf("int \%s\n", $declarator.text->chars);

       }

     ;

 

The node types in the C runtime are always the built in ones as these
contain a pointer within them that should poitn to any super structure
you might add. SO you are always passing around pANTLR3_BASE_TREE,
within wich is a super pointer to pANTLR3_COMMON_TREE, within which is a
superpointer which you are free to point to your own even larger
structure. Because this is a bit of a pain in C, there is also a custom
void * pointer in the pANTLR3_COMMON_TREE which you can just hijack to
point to whatever you like (you must free it).

 

Perhaps there is some problem referencing .text on a TOKEN? For error
reports I need as much detail as possible if you could oblige J

 

Jim

 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
Sent: Saturday, July 07, 2007 12:17 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C Target: what to use instead of CommonTree
whenwriting tree grammars, antlr 3.0

 

Jim,

 

I can't get my head around this.  Have you implemented the necessary
infrastructure for using tree walkers with the C target?  I would like
to use templates, however they are not yet available for C.  So, I am
happy to use printf's and other hacks to get going.  The trouble is, I
can't relate the java examples in the book to how to do this in C, and
there are no examples.  For example, I am writing

 

type_id:

            : IDENTIFIER { printf("\%s ", $IDENTIFIER.text->chars); }

            ;

 

But it obviously isn't that simple since I get errors all over the
place.  Also, what is the correct ASTLabelType incantation to use in the
options section?  It isn't CommonTree, that's for sure.

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/ac9ffa8a/attachment-0001.html 

From jimi at temporal-wave.com  Sat Jul  7 20:03:50 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 7 Jul 2007 20:03:50 -0700
Subject: [antlr-interest] Changing the bracket delimiters
	inStringTemplate3
In-Reply-To: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.com>
References: <3e5ed32f0707071537h68e73c53qa6964d6465245c5e@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76EA3@wavemachine.temporal-wave.com>

I think you need:

\<\<

And that you do not need to escape the >

See examples in the C.stg code generation templates for ANTLR3.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bernardo Elayda
> Sent: Saturday, July 07, 2007 3:37 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Changing the bracket delimiters
> inStringTemplate3
> 
> >Howdy. Try \< and see if that works.
> >Ter
> 
> That did not work.  Here's a short  and simplified version of my
> tempalte and the problem:
> 
> group Format;
> 
> toplevel(upperwords,lowerwords) ::= ::= <<
> 
> static const u16_t upperdata[]= {
> <upperwords:{a|0x<a>}; wrap, separator=", ">
> };
> 
> c = d << 3;
> e = f >> 8;
> 
> static const u16_t lowerdata[]= {
> <lowerwords:{b|0x<b>;wrap, separator=", ">
> };
> 
> >>
> 
> I tried:
> 
> c = d \<< 3;
> e = f \>> 8;
> 
> and
> 
> c = d \<<< 3;
> e =f \<>> 8;
> 
> neither of these worked.
> 
> In the real code, the "<<" and ">>" are in multiple places.
> 
> Perhpas I misunderstood the suggestion?
> -Bernardo Elayda

From Stephen_Hardy at rabbit.com  Sat Jul  7 22:50:57 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sat, 7 Jul 2007 22:50:57 -0700
Subject: [antlr-interest] C Target: what to use instead of CommonTree
	whenwriting tree grammars, antlr 3.0
In-Reply-To: <051466DAA0D608439E196797955018D76EA2@wavemachine.temporal-wave.com>
References: <62BABE024B7C074E9194E9727A418979013200A0@dvs-sms-mail01.digi.com>
	<051466DAA0D608439E196797955018D76EA2@wavemachine.temporal-wave.com>
Message-ID: <62BABE024B7C074E9194E9727A418979013200A2@dvs-sms-mail01.digi.com>

Jim,

 

sorry about the terseness of the report.  I'm developing on a diferent
machine than my email client, but I'm working on combining the two.

 

The error was when (C) compiling the code generated for the tree parser.
Without any actions, it (and the corresponding lexer/parser for the C
grammar) compiles fine, however when running against some sample C input
the combination, based on your sample code for the simple C tree walker,
I encounter some "unexpected node" errors in the tree walker.  This is
undoubtedly my fault, but unfortunately, it was not obvious just what
was wrong, since the default error messages do not relate back to the
original input.  So, to quickly work out where I had stuffed up, I added
some actions in the tree walker to try to find out how far it got.  This
is the point where I got stuck with the C compile error, when I was
trying to print the nodes it had encountered in the tree walk.

 

The fragment I provided was from the tree walker.  There is basically no
transformation from the corresponding grammar fragment, which is why it
was confusing.  Anyway, given that line of code, the output templates
are generating a function called type_id() as follows:

 

static void

type_id(pC2Tree ctx)

{

            CommonTree IDENTIFIER3;

            IDENTIFIER3 = NULL;

            { { IDENTIFIER3 = (CommonTree)LT(1);

                MATCHT(IDENTIFIER, &FOLLOW_IDENTIFIER_yaddayadda);

                { // my code here

                        Printf("%s ",
IDENTIFIER3->getText(IDENTIFIER3)->chars);

                }

            } }

            ...

}

 

And the compiler complains at the CommonTree typedef, since it doesn't
exist (my ignorance).  However the template does not generate a
CommonTree (or whatever) variable in other actions such as the
pseudo-tokens generated for tree nodes.

 

Yes, I saw the sample code you mentioned and indeed it works for things
other than tokens.  Anyhow, I'll look into it some more now that you've
provided some more information.  I take it I should be putting

 

ASTLabelType = pANTLR3_BASE_TREE;

 

so that variables will be created with the correct type.

 

Basically, I am trying to write a fairly simple translator which
converts ANSI C into a flavor of non-ANSI (more like K&R, but with
additional restrictions).  Also, the target machine memory model is
segmented, so I have to add FAR qualifiers to pointers, just like in the
good ol' DOS days where 640k was all anyone would ever need...  I
convinced my boss that antlr was such a cool tool I could get this done
in a week.  So bear with me.  I hope to donate the resulting C
translator back to the community as a real-world example of using the C
target.

 

Regards,

SJH

 

________________________________

From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Saturday, July 07, 2007 8:02 PM
To: Hardy, Stephen; antlr-interest at antlr.org
Subject: RE: [antlr-interest] C Target: what to use instead of
CommonTree whenwriting tree grammars, antlr 3.0

 

Tree walking and everything is all implemented (it better be or my own
in production parsers are imaginary ;-).

 

However, you don't say if this snippet is in your tree generating
parser, or your tree parser, nor supply the error messages?

 

Once again, the example projects should rescue you. While we could do
with a more comprehensive tree walking example, but in the tree parser
for the strangely named 'treeparser' example, you will find:

 

decl : ^(DECL type declarator)

 

       // label.start, label.start, label.text

       {

         printf("int \%s\n", $declarator.text->chars);

       }

     ;

 

The node types in the C runtime are always the built in ones as these
contain a pointer within them that should poitn to any super structure
you might add. SO you are always passing around pANTLR3_BASE_TREE,
within wich is a super pointer to pANTLR3_COMMON_TREE, within which is a
superpointer which you are free to point to your own even larger
structure. Because this is a bit of a pain in C, there is also a custom
void * pointer in the pANTLR3_COMMON_TREE which you can just hijack to
point to whatever you like (you must free it).

 

Perhaps there is some problem referencing .text on a TOKEN? For error
reports I need as much detail as possible if you could oblige :-)

 

Jim

 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
Sent: Saturday, July 07, 2007 12:17 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C Target: what to use instead of CommonTree
whenwriting tree grammars, antlr 3.0

 

Jim,

 

I can't get my head around this.  Have you implemented the necessary
infrastructure for using tree walkers with the C target?  I would like
to use templates, however they are not yet available for C.  So, I am
happy to use printf's and other hacks to get going.  The trouble is, I
can't relate the java examples in the book to how to do this in C, and
there are no examples.  For example, I am writing

 

type_id:

            : IDENTIFIER { printf("\%s ", $IDENTIFIER.text->chars); }

            ;

 

But it obviously isn't that simple since I get errors all over the
place.  Also, what is the correct ASTLabelType incantation to use in the
options section?  It isn't CommonTree, that's for sure.

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/b65ee411/attachment-0001.html 

From Stephen_Hardy at rabbit.com  Sat Jul  7 23:07:29 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sat, 7 Jul 2007 23:07:29 -0700
Subject: [antlr-interest] C Target: what to use instead of CommonTree
	when writing tree grammars, antlr 3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979013200A2@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979013200A0@dvs-sms-mail01.digi.com><051466DAA0D608439E196797955018D76EA2@wavemachine.temporal-wave.com>
	<62BABE024B7C074E9194E9727A418979013200A2@dvs-sms-mail01.digi.com>
Message-ID: <62BABE024B7C074E9194E9727A418979013200A3@dvs-sms-mail01.digi.com>

Jim,

 

OK it seems to be working fine now that I used the correct AST node
type.

 

Regards,

SJH

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
Sent: Saturday, July 07, 2007 10:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C Target: what to use instead of
CommonTreewhenwriting tree grammars, antlr 3.0

 

Jim,

 

sorry about the terseness of the report.  I'm developing on a diferent
machine than my email client, but I'm working on combining the two.

 

The error was when (C) compiling the code generated for the tree parser.
Without any actions, it (and the corresponding lexer/parser for the C
grammar) compiles fine, however when running against some sample C input
the combination, based on your sample code for the simple C tree walker,
I encounter some "unexpected node" errors in the tree walker.  This is
undoubtedly my fault, but unfortunately, it was not obvious just what
was wrong, since the default error messages do not relate back to the
original input.  So, to quickly work out where I had stuffed up, I added
some actions in the tree walker to try to find out how far it got.  This
is the point where I got stuck with the C compile error, when I was
trying to print the nodes it had encountered in the tree walk.

 

The fragment I provided was from the tree walker.  There is basically no
transformation from the corresponding grammar fragment, which is why it
was confusing.  Anyway, given that line of code, the output templates
are generating a function called type_id() as follows:

 

static void

type_id(pC2Tree ctx)

{

            CommonTree IDENTIFIER3;

            IDENTIFIER3 = NULL;

            { { IDENTIFIER3 = (CommonTree)LT(1);

                MATCHT(IDENTIFIER, &FOLLOW_IDENTIFIER_yaddayadda);

                { // my code here

                        Printf("%s ",
IDENTIFIER3->getText(IDENTIFIER3)->chars);

                }

            } }

            ...

}

 

And the compiler complains at the CommonTree typedef, since it doesn't
exist (my ignorance).  However the template does not generate a
CommonTree (or whatever) variable in other actions such as the
pseudo-tokens generated for tree nodes.

 

Yes, I saw the sample code you mentioned and indeed it works for things
other than tokens.  Anyhow, I'll look into it some more now that you've
provided some more information.  I take it I should be putting

 

ASTLabelType = pANTLR3_BASE_TREE;

 

so that variables will be created with the correct type.

 

Basically, I am trying to write a fairly simple translator which
converts ANSI C into a flavor of non-ANSI (more like K&R, but with
additional restrictions).  Also, the target machine memory model is
segmented, so I have to add FAR qualifiers to pointers, just like in the
good ol' DOS days where 640k was all anyone would ever need...  I
convinced my boss that antlr was such a cool tool I could get this done
in a week.  So bear with me.  I hope to donate the resulting C
translator back to the community as a real-world example of using the C
target.

 

Regards,

SJH

 

________________________________

From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Saturday, July 07, 2007 8:02 PM
To: Hardy, Stephen; antlr-interest at antlr.org
Subject: RE: [antlr-interest] C Target: what to use instead of
CommonTree whenwriting tree grammars, antlr 3.0

 

Tree walking and everything is all implemented (it better be or my own
in production parsers are imaginary ;-).

 

However, you don't say if this snippet is in your tree generating
parser, or your tree parser, nor supply the error messages?

 

Once again, the example projects should rescue you. While we could do
with a more comprehensive tree walking example, but in the tree parser
for the strangely named 'treeparser' example, you will find:

 

decl : ^(DECL type declarator)

 

       // label.start, label.start, label.text

       {

         printf("int \%s\n", $declarator.text->chars);

       }

     ;

 

The node types in the C runtime are always the built in ones as these
contain a pointer within them that should poitn to any super structure
you might add. SO you are always passing around pANTLR3_BASE_TREE,
within wich is a super pointer to pANTLR3_COMMON_TREE, within which is a
superpointer which you are free to point to your own even larger
structure. Because this is a bit of a pain in C, there is also a custom
void * pointer in the pANTLR3_COMMON_TREE which you can just hijack to
point to whatever you like (you must free it).

 

Perhaps there is some problem referencing .text on a TOKEN? For error
reports I need as much detail as possible if you could oblige :-)

 

Jim

 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
Sent: Saturday, July 07, 2007 12:17 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C Target: what to use instead of CommonTree
whenwriting tree grammars, antlr 3.0

 

Jim,

 

I can't get my head around this.  Have you implemented the necessary
infrastructure for using tree walkers with the C target?  I would like
to use templates, however they are not yet available for C.  So, I am
happy to use printf's and other hacks to get going.  The trouble is, I
can't relate the java examples in the book to how to do this in C, and
there are no examples.  For example, I am writing

 

type_id:

            : IDENTIFIER { printf("\%s ", $IDENTIFIER.text->chars); }

            ;

 

But it obviously isn't that simple since I get errors all over the
place.  Also, what is the correct ASTLabelType incantation to use in the
options section?  It isn't CommonTree, that's for sure.

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070707/ddec36a4/attachment-0001.html 

From ld at galador.net  Sun Jul  8 01:22:53 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 8 Jul 2007 18:22:53 +1000
Subject: [antlr-interest] Where is the C# runtime source?
Message-ID: <00a401c7c139$2f2b9330$74f131d2@vulcain>

I can run my C# parser, that is cool.
But where is the source code for the library?
I like to read the template library, to know what it is....
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/b68bf87e/attachment.html 

From ld at galador.net  Sun Jul  8 01:53:54 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 8 Jul 2007 18:53:54 +1000
Subject: [antlr-interest] How do I generate private class?
References: <00a401c7c139$2f2b9330$74f131d2@vulcain>
Message-ID: <00b101c7c13d$846732b0$74f131d2@vulcain>

I'm using the C# target language.
ANTLR alway generate public class.
I'd like to change that.
How do I do that?
(currently I manually edit the files after each generation, but it is rather akward and error prone...)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/c3866e28/attachment.html 

From ld at galador.net  Sun Jul  8 02:10:39 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 8 Jul 2007 19:10:39 +1000
Subject: [antlr-interest] Still the C# library?
Message-ID: <00bf01c7c13f$db3e6bb0$74f131d2@vulcain>

There is a problem, they don't have a string name, there fore they can't be used by strongly named library :-(
Which goes back to my original problem, how are they build?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/34c80d11/attachment.html 

From jaluber at gmx.de  Sun Jul  8 03:02:10 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 08 Jul 2007 12:02:10 +0200
Subject: [antlr-interest] Where is the C# runtime source?
In-Reply-To: <00a401c7c139$2f2b9330$74f131d2@vulcain>
References: <00a401c7c139$2f2b9330$74f131d2@vulcain>
Message-ID: <4690B622.9040700@gmx.de>

Lloyd Dupont wrote:
> I can run my C# parser, that is cool.
> But where is the source code for the library?
> I like to read the template library, to know what it is....

For whatever reason, there is no source code available form the authors
themselves. But via .NET Reflector you can look into the assembly and
see C# code. There has been a few days or so an email posted with the
links so just look in the archive.

Best regards,
Johannes Luber

From liviu.u at gmail.com  Sun Jul  8 03:04:51 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sun, 8 Jul 2007 13:04:51 +0300
Subject: [antlr-interest] NoViableAltException
Message-ID: <c522653d0707080304n53f85218j8f49cba61f730e38@mail.gmail.com>

Hi all,

I built a simplistic C# parser that ignores statements blocks and handles
only declarations. The target output language is C#.
When I parse a moderate size file 500K ( the atnlr parser output ;) ) it
takes 5 seconds and a lot of NoViableAltException are raised and handled by
the parser.
The parsing is successfull, but as we know, exception raising in .NET comes
with a big cost. I think there is a big performance hit in using Exceptions
to handle failures instead of old Winapi style return codes.
Is anything that can be done about it?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/bffea6ee/attachment.html 

From ld at galador.net  Sun Jul  8 03:13:37 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 8 Jul 2007 20:13:37 +1000
Subject: [antlr-interest] Where is the C# runtime source?
References: <00a401c7c139$2f2b9330$74f131d2@vulcain> <4690B622.9040700@gmx.de>
Message-ID: <00e201c7c148$a77865c0$74f131d2@vulcain>

Yeah, I might use reflector.

But anyway, for now, while I have no idea what is this template library, it 
doesn't seems I need it either, so that's all good!

----- Original Message ----- 
> For whatever reason, there is no source code available form the authors
> themselves.
Bummer! I can't recompile it with a strong name either :-( ...

> But via .NET Reflector you can look into the assembly and
> see C# code. There has been a few days or so an email posted with the
> links so just look in the archive.
>

Yeah, I thought of using reflector.

But anyway, for now, while I have no idea what is this template library, it 
doesn't seems I need it either, so that's all good!

Thanks for answering.
Lloyd 


From ld at galador.net  Sun Jul  8 03:24:32 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 8 Jul 2007 20:24:32 +1000
Subject: [antlr-interest] NoViableAltException
References: <c522653d0707080304n53f85218j8f49cba61f730e38@mail.gmail.com>
Message-ID: <00f401c7c14a$2d48e0c0$74f131d2@vulcain>

Good point!
I hope something can be done :D
But I fear it might not...
  I built a simplistic C# parser that ignores statements blocks and handles only declarations. The target output language is C#.
  When I parse a moderate size file 500K ( the atnlr parser output ;) ) it takes 5 seconds and a lot of NoViableAltException are raised and handled by the parser. 
  The parsing is successfull, but as we know, exception raising in .NET comes with a big cost. I think there is a big performance hit in using Exceptions to handle failures instead of old Winapi style return codes.
  Is anything that can be done about it? 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/05bc850d/attachment.html 

From open.zone at virgin.net  Sun Jul  8 05:51:46 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 8 Jul 2007 13:51:46 +0100
Subject: [antlr-interest] Where is the C# runtime source?
In-Reply-To: <00a401c7c139$2f2b9330$74f131d2@vulcain>
Message-ID: <001401c7c15e$befc4980$c704a8c0@hercules>

Hi Lloyd,
 
I see you're back in ANTLR-land.
 
The library sources aren't available yet as they still need some work and
tests. I'll ping you when they are. In the meantime, search the list for a
Reflector-ed version of the sources.
 
What do you mean by "template library"?. Do you mean StringTemplate?. If
yes, is this for code generation within the ANTLR tool itself (i.e. Java
StringTemplate) or for text generation from your parser/treeparper (i.e. ST#
aka StringTemplate.NET aka C# StringTemplate)?
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 08 July 2007 09:23
To: antlr-interest at antlr.org
Subject: [antlr-interest] Where is the C# runtime source?


I can run my C# parser, that is cool.
But where is the source code for the library?
I like to read the template library, to know what it is....

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/a574da53/attachment.html 

From open.zone at virgin.net  Sun Jul  8 05:57:33 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 8 Jul 2007 13:57:33 +0100
Subject: [antlr-interest] How do I generate private class?
In-Reply-To: <00b101c7c13d$846732b0$74f131d2@vulcain>
Message-ID: <002001c7c15f$912ae5b0$c704a8c0@hercules>

Hi,
 
V3 doesn't have that option yet. We are looking to add independently to C#
target in due course. In the meantime, you could change your local copy of
the C# target's codegen templates if you *always* want private classes.
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 08 July 2007 09:54
To: antlr-interest at antlr.org
Subject: [antlr-interest] How do I generate private class?


I'm using the C# target language.
ANTLR alway generate public class.
I'd like to change that.
How do I do that?
(currently I manually edit the files after each generation, but it is rather
akward and error prone...)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/5fc800dc/attachment-0001.html 

From open.zone at virgin.net  Sun Jul  8 05:57:33 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 8 Jul 2007 13:57:33 +0100
Subject: [antlr-interest] NoViableAltException
In-Reply-To: <c522653d0707080304n53f85218j8f49cba61f730e38@mail.gmail.com>
Message-ID: <001b01c7c15f$90674790$c704a8c0@hercules>

What version of ANTLR did you use?. Was it ANTLR v2.7.x or ANTLR v3.x?
 
Can you post the options you set in your grammar file?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 08 July 2007 11:05
To: antlr-interest at antlr.org
Subject: [antlr-interest] NoViableAltException


Hi all,

I built a simplistic C# parser that ignores statements blocks and handles
only declarations. The target output language is C#.
When I parse a moderate size file 500K ( the atnlr parser output ;) ) it
takes 5 seconds and a lot of NoViableAltException are raised and handled by
the parser. 
The parsing is successfull, but as we know, exception raising in .NET comes
with a big cost. I think there is a big performance hit in using Exceptions
to handle failures instead of old Winapi style return codes.
Is anything that can be done about it? 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/e01206bd/attachment.html 

From ld at galador.net  Sun Jul  8 06:15:59 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 8 Jul 2007 23:15:59 +1000
Subject: [antlr-interest] Where is the C# runtime source?
References: <001401c7c15e$befc4980$c704a8c0@hercules>
Message-ID: <012d01c7c162$218ccd60$74f131d2@vulcain>

Message>  Lloyd,
> see you're back in ANTLR-land.

Good memory hey!
This time for a personal project where I believe ANTLR could be put to good use.

> The library sources aren't available yet as they still need some work and tests. I'll ping you when they are. In the meantime, search the list for a Reflector-ed version of the sources.

Ho, no worries...
A strongly named version would be nice though.


> What do you mean by "template library"?. Do you mean StringTemplate?. If yes, is this for code generation within the ANTLR tool itself (i.e. Java StringTemplate) or for text generation from your parser/treeparper (i.e. ST# aka StringTemplate.NET aka C# StringTemplate)?

yep.
But I was just asking out of curiosity.
it doesn't look like I need them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/cde98f50/attachment.html 

From ld at galador.net  Sun Jul  8 08:15:01 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 9 Jul 2007 01:15:01 +1000
Subject: [antlr-interest] predicate and ambiguity
Message-ID: <015701c7c172$c258a3d0$74f131d2@vulcain>

I need to write a predicate to differentiate these rule: unary and atom
===============================
unary : (PLUS|MINUS)? (LPAREN identifier RPAREN /* casts */)*  atom
 ;

atom : identifier 
 | .......
 | LPAREN (expression (COMMA expression)*)? RPAREN
 ; 
==============================
Basically I need to test if "LPAREN identifier RPAREN" is a cast, i.e. if the identifier is a type.
How could I wrote a predicate to test part of might be returned?



Thinking more about it I have been able to refactor succesffully the rule above in the following (working grammar):
=============
unary : (PLUS|MINUS)? cast ;
 
cast : ((LPAREN identifier RPAREN) cast) => (LPAREN identifier RPAREN) cast
 | primary
 ;
=============
(BTW, ANTLR Works is really helpful and really cool! I feel like it's much easer to overcome grammar problem with it!!!)

Anyway, I still wonder how to a predicate as above, that is I look for a structure A B C where B verify some property to read the stuff as A B C.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070709/3c23c007/attachment.html 

From aliaazimi at yahoo.com  Sun Jul  8 08:30:45 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 8 Jul 2007 08:30:45 -0700 (PDT)
Subject: [antlr-interest] (newbie question) where can SLIST get its
	information from?
Message-ID: <508310.73008.qm@web58110.mail.re3.yahoo.com>

Dear all,
   
  I have a question which I can not find an answer. I would be much appriciated if you could give me an answer.
   
  If there is no left curly in some rule, where can an imaginary node SLIST get its line and column information from? for example, in the following rewrite rule, what can I put instead of question mark in front of lc=?
   
  textualsystemdefinition 
 :lc=?  packagereferenceclause*('system' systemname end entityinsystem+ 'endsystem'(systemname)?end|typebasedsystemdefinition)
 ->^(SLIST[$lc] packagereferenceclause* 'system'systemname end entityinsystem+ 'endsystem' systemname? end typebasedsystemdefinition)
 ;
   
  Thanking you in advance.
  Best wishes,
  Al

       
---------------------------------
Choose the right car based on your needs.  Check out Yahoo! Autos new Car Finder tool.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/7a44f503/attachment.html 

From kroepke at classdump.org  Sun Jul  8 08:40:41 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 8 Jul 2007 17:40:41 +0200
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <015701c7c172$c258a3d0$74f131d2@vulcain>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
Message-ID: <A8D05809-930D-4729-9325-BB91A0709668@classdump.org>


On Jul 8, 2007, at 5:15 PM, Lloyd Dupont wrote:

> Thinking more about it I have been able to refactor succesffully  
> the rule above in the following (working grammar):
> =============
> unary : (PLUS|MINUS)? cast ;
>
> cast : ((LPAREN identifier RPAREN) cast) => (LPAREN identifier  
> RPAREN) cast
>  | primary
>  ;
> =============
> (BTW, ANTLR Works is really helpful and really cool! I feel like  
> it's much easer to overcome grammar problem with it!!!)

ain't it ;)

> Anyway, I still wonder how to a predicate as above, that is I look  
> for a structure A B C where B verify some property to read the  
> stuff as A B C.

You'll need to have a semantic predicate and some external (=  
provided by you) method of determining whether 'identifier' is  
actually a type name.
identifier in your case is a parser rule, making it a bit hard for me  
to give you an example (what does identifier look like?).
Anyway if identifier was a token named ID you could do:

=============
unary : (PLUS|MINUS)? cast ;

cast : {isType(input.LT(2))}? (LPAREN ID RPAREN) cast
  | primary
  ;
=============

or whatever the syntax for C# is...

Basically what this does is to call your own method/function isType()  
with the symbol that appears two tokens in the future (lookahead is 2).
isType() would return true if it is a type, thus the predicate would  
be true and ANTLR would choose the case alternative. If it isn't a  
type, then that alternative would be shut off and ANTLR would try to  
match primary.
Very powerful :)

Having the parser rule identifier makes it impossible for me to tell  
you what the lookahead depth would need to be, since I don't know  
what identifier tries to match (token-wise).

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sun Jul  8 10:44:23 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 8 Jul 2007 19:44:23 +0200
Subject: [antlr-interest] (newbie question) where can SLIST get its
	information from?
In-Reply-To: <508310.73008.qm@web58110.mail.re3.yahoo.com>
References: <508310.73008.qm@web58110.mail.re3.yahoo.com>
Message-ID: <37A99EE4-19A7-4C8A-B83E-C7E0F9E6D70E@classdump.org>

Hi!

On Jul 8, 2007, at 5:30 PM, ali azimi wrote:

>   If there is no left curly in some rule, where can an imaginary  
> node SLIST get its line and column information from? for example,  
> in the following rewrite rule, what can I put instead of question  
> mark in front of lc=?
>
>   textualsystemdefinition
>  :lc=?  packagereferenceclause*('system' systemname end  
> entityinsystem+ 'endsystem'(systemname)?end|typebasedsystemdefinition)
>  ->^(SLIST[$lc] packagereferenceclause* 'system'systemname end  
> entityinsystem+ 'endsystem' systemname? end typebasedsystemdefinition)
>  ;

As you don't have an explicit token reference you will need to use  
the first token that has been matched by textualsystemdefinition.
Consider this grammar:

grammar ASTConst;

options {
	output=AST;
	ASTLabelType=CommonTree;
}

tokens {
SLIST;
}

rule
	:	subrule? subrule1 -> ^(SLIST[$rule.start] subrule? subrule1)
	;
	
subrule
	:	'A';

subrule1
	:	'B';


$rule.start refers to the first token that has been matched by rule,  
making it the ideal candidate for your purposes :)
(For reference: Page 130 in the ANTLR book lists the predefined  
parser rule attributes. Among those is start. Haven't looked whether  
this
is in the wiki already.)

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From shaun at ebi.ac.uk  Sun Jul  8 13:06:09 2007
From: shaun at ebi.ac.uk (shaun at ebi.ac.uk)
Date: Sun, 8 Jul 2007 21:06:09 +0100 (BST)
Subject: [antlr-interest] handling abbreviated keywords in ANTLR
Message-ID: <50284.81.102.132.70.1183925169.squirrel@webmail.ebi.ac.uk>

Hi,

I need to parse a language which allows abbreviated keyword definitions (I
have at least 52 keywords). For example, each of the following
'application' definitions is deemed valid:

'application : helloworld'

'appl : helloworld'

'applic : helloworld'

or 'sequence : dna' - 'seq : dna'

I need to recognise and match keyword variants to their complete
definition. I am using ANTLR 3. Which is the best way to handle this
recognition problem? In the lexer or parser?

Thank you,
Shaun






From liviu.u at gmail.com  Sun Jul  8 13:38:22 2007
From: liviu.u at gmail.com (Liviu U)
Date: Sun, 8 Jul 2007 23:38:22 +0300
Subject: [antlr-interest] Comments on ANTLR book
Message-ID: <c522653d0707081338k45e6e7d9i3103f747f4e26255@mail.gmail.com>

I am dissapointed by the book.


Why? because the examples are not really helping. The easy concepts are easy
to grasp without the book and the advanced ones lack adequate examples.

If i were Ter, i would have constructed with the book a complex parser, for
let's say SQL. I would have touched all the features of ANTLR and showed HOW
CONCEPTS are applied.

When I have problems, I google for it, when dispair comes I post here ...
but i feel i don't have a complete example where i can look and even
"borrow" some patterns.

And I feel this is exactly what is lacking to the ANTLR project: a very good
HELP that is targeted to the beginners, and that goes step by step.

Most of the times I either find too complex things or too simple ones.


PS: ANTLR3 is fantastic, even with its bugs. ANTLRWorks is so slow on
windows...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/346547f8/attachment.html 

From open.zone at virgin.net  Sun Jul  8 15:28:15 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 8 Jul 2007 23:28:15 +0100
Subject: [antlr-interest] handling abbreviated keywords in ANTLR
In-Reply-To: <50284.81.102.132.70.1183925169.squirrel@webmail.ebi.ac.uk>
Message-ID: <000601c7c1af$47e2c530$c704a8c0@hercules>

> Hi,
> 
> I need to parse a language which allows abbreviated keyword 
> definitions (I have at least 52 keywords). For example, each 
> of the following 'application' definitions is deemed valid:
> 
> 'application : helloworld'
> 
> 'appl : helloworld'
> 
> 'applic : helloworld'
> 
> or 'sequence : dna' - 'seq : dna'
> 
> I need to recognise and match keyword variants to their 
> complete definition. I am using ANTLR 3. Which is the best 
> way to handle this recognition problem? In the lexer or parser?

Lexer.

APPLICATION : 'appl' ( 'ic' ( 'ation' )? )? ;

OR (if any prefix - staring from 'appl' - is allowed)

APPLICATION : 'appl' ( 'i' ( 'c' ( 'a' ( 't' ( 'i' ( 'o' ( 'n' )? )? )? )?
)? )? )? ;

Just ensure it comes before the generic IDENTIFIER rule in your grammar. Do
same for other keywords.

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From jimi at temporal-wave.com  Sun Jul  8 15:36:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 8 Jul 2007 15:36:24 -0700
Subject: [antlr-interest] C Target: what to use instead of
	CommonTreewhenwriting tree grammars, antlr 3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979013200A2@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979013200A0@dvs-sms-mail01.digi.com><051466DAA0D608439E196797955018D76EA2@wavemachine.temporal-wave.com>
	<62BABE024B7C074E9194E9727A418979013200A2@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76EA6@wavemachine.temporal-wave.com>

Ahhh! I t should not generate a CommonTree type - that must be left in
from the recent changes to tree rewrites. As I said, the type is always
the same as any expanded tree node of your own must pass itself about as
a pointer to pANTLR3_BASE_TREE. I will track that down in the template.,
unless it is the tool adding this type if it finds no other. 

 

You could try:

 

myref=IDENTIFIER and see if that declares myref correctly.

 

You should not have to declare the node type at all for C, but if you
don't then the ANTLR tool complains so it is probably reasonable to just
declare it anyway.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
Sent: Saturday, July 07, 2007 10:51 PM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] C Target: what to use instead of
CommonTreewhenwriting tree grammars, antlr 3.0

 

Jim,

 

sorry about the terseness of the report.  I'm developing on a diferent
machine than my email client, but I'm working on combining the two.

 

The error was when (C) compiling the code generated for the tree parser.
Without any actions, it (and the corresponding lexer/parser for the C
grammar) compiles fine, however when running against some sample C input
the combination, based on your sample code for the simple C tree walker,
I encounter some "unexpected node" errors in the tree walker.  This is
undoubtedly my fault, but unfortunately, it was not obvious just what
was wrong, since the default error messages do not relate back to the
original input.  So, to quickly work out where I had stuffed up, I added
some actions in the tree walker to try to find out how far it got.  This
is the point where I got stuck with the C compile error, when I was
trying to print the nodes it had encountered in the tree walk.

 

The fragment I provided was from the tree walker.  There is basically no
transformation from the corresponding grammar fragment, which is why it
was confusing.  Anyway, given that line of code, the output templates
are generating a function called type_id() as follows:

 

static void

type_id(pC2Tree ctx)

{

            CommonTree IDENTIFIER3;

            IDENTIFIER3 = NULL;

            { { IDENTIFIER3 = (CommonTree)LT(1);

                MATCHT(IDENTIFIER, &FOLLOW_IDENTIFIER_yaddayadda);

                { // my code here

                        Printf("%s ",
IDENTIFIER3->getText(IDENTIFIER3)->chars);

                }

            } }

            ...

}

 

And the compiler complains at the CommonTree typedef, since it doesn't
exist (my ignorance).  However the template does not generate a
CommonTree (or whatever) variable in other actions such as the
pseudo-tokens generated for tree nodes.

 

Yes, I saw the sample code you mentioned and indeed it works for things
other than tokens.  Anyhow, I'll look into it some more now that you've
provided some more information.  I take it I should be putting

 

ASTLabelType = pANTLR3_BASE_TREE;

 

so that variables will be created with the correct type.

 

Basically, I am trying to write a fairly simple translator which
converts ANSI C into a flavor of non-ANSI (more like K&R, but with
additional restrictions).  Also, the target machine memory model is
segmented, so I have to add FAR qualifiers to pointers, just like in the
good ol' DOS days where 640k was all anyone would ever need...  I
convinced my boss that antlr was such a cool tool I could get this done
in a week.  So bear with me.  I hope to donate the resulting C
translator back to the community as a real-world example of using the C
target.

 

Regards,

SJH

 

________________________________

From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Saturday, July 07, 2007 8:02 PM
To: Hardy, Stephen; antlr-interest at antlr.org
Subject: RE: [antlr-interest] C Target: what to use instead of
CommonTree whenwriting tree grammars, antlr 3.0

 

Tree walking and everything is all implemented (it better be or my own
in production parsers are imaginary ;-).

 

However, you don't say if this snippet is in your tree generating
parser, or your tree parser, nor supply the error messages?

 

Once again, the example projects should rescue you. While we could do
with a more comprehensive tree walking example, but in the tree parser
for the strangely named 'treeparser' example, you will find:

 

decl : ^(DECL type declarator)

 

       // label.start, label.start, label.text

       {

         printf("int \%s\n", $declarator.text->chars);

       }

     ;

 

The node types in the C runtime are always the built in ones as these
contain a pointer within them that should poitn to any super structure
you might add. SO you are always passing around pANTLR3_BASE_TREE,
within wich is a super pointer to pANTLR3_COMMON_TREE, within which is a
superpointer which you are free to point to your own even larger
structure. Because this is a bit of a pain in C, there is also a custom
void * pointer in the pANTLR3_COMMON_TREE which you can just hijack to
point to whatever you like (you must free it).

 

Perhaps there is some problem referencing .text on a TOKEN? For error
reports I need as much detail as possible if you could oblige J

 

Jim

 

 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Hardy, Stephen
Sent: Saturday, July 07, 2007 12:17 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C Target: what to use instead of CommonTree
whenwriting tree grammars, antlr 3.0

 

Jim,

 

I can't get my head around this.  Have you implemented the necessary
infrastructure for using tree walkers with the C target?  I would like
to use templates, however they are not yet available for C.  So, I am
happy to use printf's and other hacks to get going.  The trouble is, I
can't relate the java examples in the book to how to do this in C, and
there are no examples.  For example, I am writing

 

type_id:

            : IDENTIFIER { printf("\%s ", $IDENTIFIER.text->chars); }

            ;

 

But it obviously isn't that simple since I get errors all over the
place.  Also, what is the correct ASTLabelType incantation to use in the
options section?  It isn't CommonTree, that's for sure.

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/74d5ed1c/attachment-0001.html 

From open.zone at virgin.net  Sun Jul  8 15:36:25 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 8 Jul 2007 23:36:25 +0100
Subject: [antlr-interest] Comments on ANTLR book
In-Reply-To: <c522653d0707081338k45e6e7d9i3103f747f4e26255@mail.gmail.com>
Message-ID: <000701c7c1b0$6bea4ab0$c704a8c0@hercules>

Hi,
 
Just a thought, does Ter's mantra language project count as "complex"
enough?. It has a website that is referenced from the V3 download page.
 
On project documentation, ANTLR can always benefit from more hands manning
the wiki pumps so to speak. You can help with improving the wiki
documentation as you learn ANTLR. You seem to have a good idea what is
needed to better help new users and beginners.
 
Have you reported the ANTLR3 bugs you mentioned in your footnote?
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Liviu U
Sent: 08 July 2007 21:38
To: antlr-interest at antlr.org
Subject: [antlr-interest] Comments on ANTLR book


I am dissapointed by the book.


Why? because the examples are not really helping. The easy concepts are easy
to grasp without the book and the advanced ones lack adequate examples.

If i were Ter, i would have constructed with the book a complex parser, for
let's say SQL. I would have touched all the features of ANTLR and showed HOW
CONCEPTS are applied.

When I have problems, I google for it, when dispair comes I post here ...
but i feel i don't have a complete example where i can look and even
"borrow" some patterns. 

And I feel this is exactly what is lacking to the ANTLR project: a very good
HELP that is targeted to the beginners, and that goes step by step.

Most of the times I either find too complex things or too simple ones. 


PS: ANTLR3 is fantastic, even with its bugs. ANTLRWorks is so slow on
windows...


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070708/a4ef9fbd/attachment.html 

From ld at galador.net  Sun Jul  8 16:31:07 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 9 Jul 2007 09:31:07 +1000
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
Message-ID: <2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>

> =============
> unary : (PLUS|MINUS)? cast ;
>
> cast : {isType(input.LT(2))}? (LPAREN ID RPAREN) cast
>  | primary
>  ;
> =============
>
ok thanks!

I have one more question about predicate.
Yesterday I did write something like that  (MyFunction(input.LT(2).Text)), 
validating the text of the token.

But what if I should not validate a Token but a rule, as in:

parserrule:
    { Function(otherparserrule) }?  TOK1 otherparserrule TOK2
    | alternative
    ;

what if I have a rule like that. How could I write that?
I bet I cannot write input.LT(2) because I'm reading a parser rule and not a 
simple token..
Any tips?


Thanks for the help so far! :-) 

From rdclark at gmail.com  Sun Jul  8 17:01:32 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 8 Jul 2007 17:01:32 -0700
Subject: [antlr-interest] Learning ANTLR (was: Comments on ANTLR book)
Message-ID: <d3992d900707081701k65e81e39v45c9dc0d44a3b670@mail.gmail.com>

Liviu, I hear your frustrations -- it is hard for a novice to go all
the way from getting started up to fluency. At the same time, the book
is what it is (and is a very good reference once you know what to look
for).

We have the wiki, so let's talk about ways build good instruction
there. There are some good starting points with step by step
instructions, though I suspect there are *too many* places to get
started. I wonder if a roadmap would help. I'm also wondering if
people would contribute to a "wish list" to help prioritize new
learning materials.

Re: doing a complete grammar, I've always liked using a simple but
complete application for introductory programming courses. (I design
and deliver training for a living.) The trick is picking something
that's familiar to a wide audience, sized appropriately, and whos
structure matches most people's projects  -- COBOL is too obscure,
Java is too big, and FORTH too dissimilar to the algol-like languages.

SQL is also probably too big, though SQLLite might be reasonable. I
need to give this more thought and welcome suggestions.

...Richard

On 7/8/07, Liviu U <liviu.u at gmail.com> wrote:
> When I have problems, I google for it, when dispair comes I post here ...
> but i feel i don't have a complete example where i can look and even
> "borrow" some patterns.
>
> And I feel this is exactly what is lacking to the ANTLR project: a very good
> HELP that is targeted to the beginners, and that goes step by step.

From jonathan.thomas at ca.com  Sun Jul  8 18:05:04 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Mon, 09 Jul 2007 11:05:04 +1000
Subject: [antlr-interest] Learning ANTLR (was: Comments on ANTLR book)
In-Reply-To: <d3992d900707081701k65e81e39v45c9dc0d44a3b670@mail.gmail.com>
References: <d3992d900707081701k65e81e39v45c9dc0d44a3b670@mail.gmail.com>
Message-ID: <469189C0.4010209@ca.com>

Hi Richard,
                By looking at the messages coming through, and comparing 
to what's available, I'd say the wish list is for:
a) Rewrite Rules, which then leads into:
b) AST Tree creation / parsing.

So, some broken down/well explained examples on these would be great, 
including what sorts of alternative end-uses you can put the above too.

Liviu, I also experienced the frustration beginning learning - because 
most of us newbies _language parsing itself_ is something we need to 
learn - something maybe we should go away and learn without ANTLR 
whatsover, then come back and apply our theory to ANTLR.  As you can 
see, it often requires thinking in ways different to normal, and just by 
playing around a little you have answered your own list questions - a 
process we all need to go through I believe to learn something new, and 
no amount of examples/tutorials is going to cover that gap.

Also, I don't know if this sounds a bit harsh, forgive me if it is, but 
it kind of seems as if you'd like to do cut & paste coding - something 
that I believe is bound to fail if you don't understand the underlying 
way the lexer/parser works - which is, as people have pointed out 
before, quite complex with ANTLR.

Currently, I have no frustrations whatsoever with learning language 
parsing/ANTLR - coz my project is on hold in that area ;-) hehe ... but 
just about to get back into it ...

BTW - examples - the examples in the download sample grammars aren't 
enough for you (again, they are only going to help if you have played 
with ANTLR enough to know what they are achieving) 
http://www.antlr.org/download/examples-v3.tar.gz ?

Cheers,
Jonathan.


Richard Clark said the following on 9/07/2007 10:01 AM:
> Liviu, I hear your frustrations -- it is hard for a novice to go all
> the way from getting started up to fluency. At the same time, the book
> is what it is (and is a very good reference once you know what to look
> for).
>
> We have the wiki, so let's talk about ways build good instruction
> there. There are some good starting points with step by step
> instructions, though I suspect there are *too many* places to get
> started. I wonder if a roadmap would help. I'm also wondering if
> people would contribute to a "wish list" to help prioritize new
> learning materials.
>
> Re: doing a complete grammar, I've always liked using a simple but
> complete application for introductory programming courses. (I design
> and deliver training for a living.) The trick is picking something
> that's familiar to a wide audience, sized appropriately, and whos
> structure matches most people's projects  -- COBOL is too obscure,
> Java is too big, and FORTH too dissimilar to the algol-like languages.
>
> SQL is also probably too big, though SQLLite might be reasonable. I
> need to give this more thought and welcome suggestions.
>
> ...Richard
>
> On 7/8/07, Liviu U <liviu.u at gmail.com> wrote:
>> When I have problems, I google for it, when dispair comes I post here 
>> ...
>> but i feel i don't have a complete example where i can look and even
>> "borrow" some patterns.
>>
>> And I feel this is exactly what is lacking to the ANTLR project: a 
>> very good
>> HELP that is targeted to the beginners, and that goes step by step.
>

From kroepke at classdump.org  Sun Jul  8 23:05:27 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 9 Jul 2007 08:05:27 +0200
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
Message-ID: <BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>


On Jul 9, 2007, at 1:31 AM, Lloyd Dupont wrote:

> I have one more question about predicate.
> Yesterday I did write something like that  (MyFunction(input.LT 
> (2).Text)), validating the text of the token.
>
> But what if I should not validate a Token but a rule, as in:
>
> parserrule:
>    { Function(otherparserrule) }?  TOK1 otherparserrule TOK2
>    | alternative
>    ;
>
> what if I have a rule like that. How could I write that?
> I bet I cannot write input.LT(2) because I'm reading a parser rule  
> and not a simple token..

That's correct, LT(2) will give you the second token in the  
TokenStream from your current consumed position.
I don't believe there is a semantic predicate syntax for what you  
would like to do, but you could use a
syntactic predicate combined with a semantic predicate in  
'otherparserrule'.

Something like this:

parserrule:
	(TOK1 otherparserrule)=> TOK1 otherparserrule TOK2
	| alternative
	;

otherparserrule:
	{Function(input.LT(2))}? SOMETHING ID SOMETHINGELSE
	;

That should work. On the other hand, wouldn't the semantic predicate  
be hoisted to parserrule? (Someone?! Ter?! ;))
Alternatively, you could turn on backtracking for parserrule and let  
ANTLR try the alternatives at runtime.

Other than that, parser rules have these predefined attributes you  
could potentially use:

$rule.text	- the entire text matched by rule (including all hidden  
tokens!! i.e. whitespace etc)
$rule.start	- the first non-hidden token that was matched by rule
$rule.stop	- the last non-hidden token that was matched by rule
$rule.tree (if building ASTs)	- the tree produced by rule
$rule.st (if building templates)	- the ST instance produced by rule

But those probably won't do in your case, as you want predicates  
really. I'd say backtracking or the combination
of synpreds and sempreds.

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From ld at galador.net  Sun Jul  8 23:25:52 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 9 Jul 2007 16:25:52 +1000
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
	<BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
Message-ID: <61524F5D244D43A39F6ACBA43AED6C26@lloydPC>

First thanks for your answr and tips! :-)

> Alternatively, you could turn on backtracking for parserrule and let 
> ANTLR try the alternatives at runtime.
>
hmmm how does backtracking work?
I have seen the flag in the documentation, but I have no idea on how to 
exploit it!


In the list of predefefined attribute I saw some interesting things..

is there a possibility to do something "like":

parserrule:
   ({ Function($rule.Tree) }?  TOK1 otherparserrule TOK2)? TOK1 
otherparserrule TOK2
   | alternative

where I analyse the result of a few rules before accepting them.



On an other note I heard there is a PDF and a book.
Is it possible to pay online and get the PDF directly?
I have no good computing library around my place, but I like to peruse the 
book.


Also, it's funny, on your blog, with IE the text and foreground is black on 
black ?!? (while it's black and white with Firefox)

From jonathan.thomas at ca.com  Sun Jul  8 23:31:15 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Mon, 09 Jul 2007 16:31:15 +1000
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>	<BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
	<61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
Message-ID: <4691D633.9000200@ca.com>

PDF request - Lloyd, it's always worth your while checking out the antlr 
website!
www.antlr.org

On the front page is picture of the book (and some text explaining 
beside it) fair in the middle of the page.

Clicking the picture brings you to here:

http://www.pragmaticprogrammer.com/titles/tpantlr/index.html

where you can see Yes! PDF is available for purchase by itself.

Cheers,
JT.


Lloyd Dupont said the following on 9/07/2007 4:25 PM:
> First thanks for your answr and tips! :-)
>
>> Alternatively, you could turn on backtracking for parserrule and let 
>> ANTLR try the alternatives at runtime.
>>
> hmmm how does backtracking work?
> I have seen the flag in the documentation, but I have no idea on how 
> to exploit it!
>
>
> In the list of predefefined attribute I saw some interesting things..
>
> is there a possibility to do something "like":
>
> parserrule:
>   ({ Function($rule.Tree) }?  TOK1 otherparserrule TOK2)? TOK1 
> otherparserrule TOK2
>   | alternative
>
> where I analyse the result of a few rules before accepting them.
>
>
>
> On an other note I heard there is a PDF and a book.
> Is it possible to pay online and get the PDF directly?
> I have no good computing library around my place, but I like to peruse 
> the book.
>
>
> Also, it's funny, on your blog, with IE the text and foreground is 
> black on black ?!? (while it's black and white with Firefox)
>

From antlr at mirality.co.nz  Mon Jul  9 01:06:20 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 09 Jul 2007 20:06:20 +1200
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
	<BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
	<61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
Message-ID: <20070709080635.3B71011EBC9@www.antlr.org>

At 18:25 9/07/2007, Lloyd Dupont wrote:
 >I have seen the flag in the documentation, but I have no idea on 

 >how to exploit it!

With backtracking on, you should be able to do something like this 
(warning: air code, so you may need to adjust it a bit):

parserrule: TOK1 otherparserrule TOK2;

otherparserrule: TOK3 TOK4 func=ID {IsFunction($func.text)}? TOK5;

(You might have to put the predicate right at the end of the 
rule.  I forget how it goes exactly.)

 >On an other note I heard there is a PDF and a book.
 >Is it possible to pay online and get the PDF directly?

I believe so, yes.  I think it's available from the Pragmatic 
Programmers site.


From ld at galador.net  Mon Jul  9 03:43:57 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 9 Jul 2007 20:43:57 +1000
Subject: [antlr-interest] predicate and ambiguity
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
	<BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
	<61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
	<200707090807.l69871E6029639@mail02.syd.optusnet.com.au>
Message-ID: <004501c7c216$0f3ccb60$243331d2@vulcain>

hum... so how does backtracking work?

I don't see any 'backtracking command' in your sample!

From kroepke at classdump.org  Mon Jul  9 04:00:16 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 9 Jul 2007 13:00:16 +0200
Subject: [antlr-interest] predicate and ambiguity
In-Reply-To: <004501c7c216$0f3ccb60$243331d2@vulcain>
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
	<BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
	<61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
	<200707090807.l69871E6029639@mail02.syd.optusnet.com.au>
	<004501c7c216$0f3ccb60$243331d2@vulcain>
Message-ID: <7A75EF81-062C-46F5-8415-9B0891C332A6@classdump.org>


On Jul 9, 2007, at 12:43 PM, Lloyd Dupont wrote:

> hum... so how does backtracking work?
>
> I don't see any 'backtracking command' in your sample!


There's a bit on backtracking in the wiki, as well as on the mailing  
list archives.

sorry to be this terse, but I'm busy deploying stuff ;)

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From shaun at ebi.ac.uk  Mon Jul  9 04:39:53 2007
From: shaun at ebi.ac.uk (shaun at ebi.ac.uk)
Date: Mon, 9 Jul 2007 12:39:53 +0100 (BST)
Subject: [antlr-interest] handling abbreviated keywords in ANTLR
Message-ID: <34467.172.22.100.159.1183981193.squirrel@webmail.ebi.ac.uk>

Thank you Michael for the suggestion.

I was hoping there may be a programmatic alternative (I should have
mentioned) to defining in the grammar each and every keyword alternative.

I now see from some archived posts (ANTLR 2) suggestions of over-riding
testLiterals method and programmatically checking the 'current' token
against a hash.

Does anybody have an example of how to provide this functionality in ANTLR
3 (other than defining each alternative)?

The author of this archived post hints at a solution:

http://www.antlr.org/pipermail/antlr-interest/2005-November/014547.html

Unfortunately the link he provides is dead:

http://antlr.org/doc/lexer.html#Keywords_and_literals

Thank you,

Shaun


From shaun at ebi.ac.uk  Mon Jul  9 04:48:45 2007
From: shaun at ebi.ac.uk (shaun at ebi.ac.uk)
Date: Mon, 9 Jul 2007 12:48:45 +0100 (BST)
Subject: [antlr-interest] handling abbreviated keywords in ANTLR
Message-ID: <53174.172.22.100.159.1183981725.squirrel@webmail.ebi.ac.uk>

Thank you Michael for the suggestion.

I was hoping there may be a programmatic alternative (I should have
mentioned) to defining in the grammar each and every keyword alternative.

I now see from some archived posts (ANTLR 2) suggestions of over-riding
testLiterals method and programmatically checking the 'current' token
against a hash.

Does anybody have an example of how to provide this functionality in ANTLR
3 (other than defining each alternative)?

The author of this archived post hints at a solution:

http://www.antlr.org/pipermail/antlr-interest/2005-November/014547.html

Unfortunately the link he provides is dead:

http://antlr.org/doc/lexer.html#Keywords_and_literals

Thank you,

Shaun


From vbar at comp.cz  Mon Jul  9 05:12:14 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Mon, 09 Jul 2007 14:12:14 +0200
Subject: [antlr-interest] handling abbreviated keywords in ANTLR
In-Reply-To: <53174.172.22.100.159.1183981725.squirrel@webmail.ebi.ac.uk>
References: <53174.172.22.100.159.1183981725.squirrel@webmail.ebi.ac.uk>
Message-ID: <4692261E.9040505@comp.cz>

shaun at ebi.ac.uk wrote:
> I was hoping there may be a programmatic alternative (I should have
> mentioned) to defining in the grammar each and every keyword alternative.
What about generating the lexer programmatically? I don't think 50 
keywords (with, say, 10 alternatives for each) would stress ANTLR very 
much...

	Bye
		Vasek


From open.zone at virgin.net  Mon Jul  9 05:52:53 2007
From: open.zone at virgin.net (Micheal J)
Date: Mon, 9 Jul 2007 13:52:53 +0100
Subject: [antlr-interest] handling abbreviated keywords in ANTLR
In-Reply-To: <34467.172.22.100.159.1183981193.squirrel@webmail.ebi.ac.uk>
Message-ID: <000401c7c228$1135fe20$c704a8c0@hercules>

Hi,

> Thank you Michael for the suggestion.
> 
> I was hoping there may be a programmatic alternative (I should have
> mentioned) to defining in the grammar each and every keyword 
> alternative.
> 
> I now see from some archived posts (ANTLR 2) suggestions of 
> over-riding testLiterals method and programmatically checking 
> the 'current' token against a hash.
> 
> Does anybody have an example of how to provide this 
> functionality in ANTLR 3 (other than defining each alternative)?

You could use an action in your generic identifier rule thus:

tokens
{
	APPLICATION;
	SEQUENCE;
	....
}

IDENTIFIER
	: 	( 'a'..'z'| ... )
		{ $type = CheckKeywordsTable(getText()) }
	;

CheckKeywordsTable might simply consult an IDictionary<string,int> map of
all keywords (incl abbreviations). It would return IDENTIFIER for all
non-keyword tokens.

This isn't tested code. Adapt and apply...

> Unfortunately the link he provides is dead:
> 
> http://antlr.org/doc/lexer.html#Keywords_and_literals

That has moved to the new V2-specific website. Try this instead:

 http://www.antlr2.org/doc/lexer.html#Keywords_and_literals


Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From ld at galador.net  Mon Jul  9 06:40:07 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 9 Jul 2007 23:40:07 +1000
Subject: [antlr-interest] predicate and ambiguity
References: <015701c7c172$c258a3d0$74f131d2@vulcain>
	<A8D05809-930D-4729-9325-BB91A0709668@classdump.org>
	<2ECA8F4F900842F1BF3F2879C91B740E@lloydPC>
	<BC0CA05A-A2D3-4E27-9DB5-24A6FF6AD64E@classdump.org>
	<61524F5D244D43A39F6ACBA43AED6C26@lloydPC>
	<200707090807.l69871E6029639@mail02.syd.optusnet.com.au>
	<004501c7c216$0f3ccb60$243331d2@vulcain>
	<7A75EF81-062C-46F5-8415-9B0891C332A6@classdump.org>
Message-ID: <010901c7c22e$ac19bac0$243331d2@vulcain>

No worries...
I found it!
I also found it in the book! (yeah, I just bough it! ;-)

> There's a bit on backtracking in the wiki, as well as on the mailing  list 
> archives.
>
> sorry to be this terse, but I'm busy deploying stuff ;)


Anyway thanks to better parser (v2 vs v3)? ANTLR Works helpfull help?
I'm finally done with a stable grammar which works in about 9 hours from 
start!!
 (despite not having done any ATLR in 20 month at least, kind of forgot 
everything)

Hey, that's so cool!
And it's so neat!

Let's do Tree parsing and code generation now, I was kind of akward with it, 
I'll see if I improved.... 


From aliaazimi at yahoo.com  Mon Jul  9 07:12:08 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 9 Jul 2007 07:12:08 -0700 (PDT)
Subject: [antlr-interest] (newbie question) Rewrite rule error message
Message-ID: <553828.86334.qm@web58106.mail.re3.yahoo.com>

Hi,
   
  Thank you so much in advance for reading this email.
   
  I keep getting the following error message for a rewrite rule which is mentioned below the error message. I do not know what causes it. Could you tell me what I am doing wrong?
   
  Error
  Cannot generate grammar because:
  (136):C:\Documents and Settings\...\FinalProjectSim.g:103:19:reference to rewrite element name without reference on left of ->.
   
  And the rule is:
   
  servicetypedefinition
              :(virtuality)?
              'service type'(qualifier)?servicetypename
              (formalcontextparameters)?
              (virtualityconstraint)?
              (specialisation)?end
              (validinputsignalset)?
          gatedefinition*
              entityinservice*
              (servicetypebody)?
              'endservice type'(qualifier)?servicetypename end
              
              ->^(SLIST[$lc.start](virtuality)?
              'service type'(qualifier)?servicetypename
              (formalcontextparameters)?
              (virtualityconstraint)?
              (specialisation)?end
              (validinputsignalset)?
          gatedefinition*
              entityinservice*
              (servicetypebody)?
              'endservice type'name end ^(SLIST[$lc.start](qualifier)?servicetypename))
              ;
   
  Best wishes,
  Al
   
   

       
---------------------------------
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070709/cca81b02/attachment.html 

From kroepke at classdump.org  Mon Jul  9 07:18:15 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 9 Jul 2007 16:18:15 +0200
Subject: [antlr-interest] (newbie question) Rewrite rule error message
In-Reply-To: <553828.86334.qm@web58106.mail.re3.yahoo.com>
References: <553828.86334.qm@web58106.mail.re3.yahoo.com>
Message-ID: <A4427431-AB47-4782-AE7B-86B3333BC784@classdump.org>


On Jul 9, 2007, at 4:12 PM, ali azimi wrote:

>   servicetypedefinition
>               :(virtuality)?
>               'service type'(qualifier)?servicetypename
>               (formalcontextparameters)?
>               (virtualityconstraint)?
>               (specialisation)?end
>               (validinputsignalset)?
>           gatedefinition*
>               entityinservice*
>               (servicetypebody)?
>               'endservice type'(qualifier)?servicetypename end
>
>               ->^(SLIST[$lc.start](virtuality)?
>               'service type'(qualifier)?servicetypename
>               (formalcontextparameters)?
>               (virtualityconstraint)?
>               (specialisation)?end
>               (validinputsignalset)?
>           gatedefinition*
>               entityinservice*
>               (servicetypebody)?
>               'endservice type'name end ^(SLIST[$lc.start] 
> (qualifier)?servicetypename))
>               ;


What's 'name' in the last line of the rewrite? ANTLR is trying to  
tell you that you reference something in a rewrite that's not part of  
the rule.
Also, the label $lc seems not to be defined anywhere, that should  
give you an error, too.

HTH,

-k
-- 
Kay R?pke
http://classdump.org/





From aliaazimi at yahoo.com  Mon Jul  9 13:53:19 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 9 Jul 2007 13:53:19 -0700 (PDT)
Subject: [antlr-interest] (newbie question) rewrite rule
Message-ID: <871734.50988.qm@web58109.mail.re3.yahoo.com>

Hi,
   
  The following rewrite rule does not produces any error messages. But do you think it is correct? Can I use (expression?)* in the following?
   
  actualparameters
 :lc='('expression?(','(expression)?)*')'
 ->^(SLIST[$lc] (expression?)*)
 ;
   
  Many thanks in advance.
   
  Best wishes,
   
  AL

       
---------------------------------
Yahoo! oneSearch: Finally,  mobile search that gives answers, not web links. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070709/863303bf/attachment.html 

From matthew.j.diehl at intel.com  Mon Jul  9 13:57:49 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Mon, 9 Jul 2007 13:57:49 -0700
Subject: [antlr-interest] (newbie question) rewrite rule
In-Reply-To: <871734.50988.qm@web58109.mail.re3.yahoo.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20239D0FA@orsmsx417.amr.corp.intel.com>

 

 

> actualparameters
> :lc='('expression?(','(expression)?)*')'
> ->^(SLIST[$lc] (expression?)*)
> ;

 

 

For the parser rule, it looks fine, but the rewrite rule does not need
the ? and the *.  It's redundant as * means 0 or more, and ? means 0 or
1.

 

actualparameters

 : lc= '('expression?(','(expression)?)*')'
 ->^(SLIST[$lc] expression*)



Matt

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070709/51cdd76f/attachment.html 

From dave at badgers-in-foil.co.uk  Mon Jul  9 14:06:25 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Mon, 9 Jul 2007 21:06:25 +0000
Subject: [antlr-interest] (newbie question) rewrite rule
In-Reply-To: <871734.50988.qm@web58109.mail.re3.yahoo.com>
References: <871734.50988.qm@web58109.mail.re3.yahoo.com>
Message-ID: <20070709210625.GB4542@badgers-in-foil.co.uk>

On Mon, Jul 09, 2007 at 01:53:19PM -0700, ali azimi wrote:
> The following rewrite rule does not produces any error messages. But
> do you think it is correct? Can I use (expression?)* in the following?
>    
>   actualparameters
>  :lc='('expression?(','(expression)?)*')'
>  ->^(SLIST[$lc] (expression?)*)
>  ;

Since the grammar allows for zero or more occurances of 'expression' on
the left of the rewrite, you can just use 'expression*' on the right
hand side:

  actualparameters
	:	lc='(' expression? ( ',' expression? )* ')'
		-> (SLIST[$lc] expression*)


ta,
dave

-- 
http://david.holroyd.me.uk/

From rschulz at sonic.net  Mon Jul  9 14:39:48 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 9 Jul 2007 14:39:48 -0700
Subject: [antlr-interest] (newbie question) rewrite rule
In-Reply-To: <871734.50988.qm@web58109.mail.re3.yahoo.com>
References: <871734.50988.qm@web58109.mail.re3.yahoo.com>
Message-ID: <200707091439.48260.rschulz@sonic.net>

On Monday 09 July 2007 13:53, ali azimi wrote:
> Hi,
>
>   The following rewrite rule does not produces any error messages.
> But do you think it is correct? Can I use (expression?)* in the
> following?
>
>   actualparameters
>  :lc='('expression?(','(expression)?)*')'

This right-hand-side allows an arbitrary sequence of nothing but commas 
following the initial expression. Is that what you want?

If not, change it to this:

   actualparameters
  :lc = '(' expression ? ( ',' expression ) * ')'


>  ->^(SLIST[$lc] (expression?)*)
>  ;
>
>   ...
>
>   AL


By the way, why are you so sparing with whitespace? ANTLR grammars are 
hard enough to read as it is, but cramming everything together just 
makes it harder.


Randall Schulz

From aliaazimi at yahoo.com  Mon Jul  9 16:04:35 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 9 Jul 2007 16:04:35 -0700 (PDT)
Subject: [antlr-interest] newbie problem)reference to rewrite element name
	without reference on left of ->.
Message-ID: <441323.75142.qm@web58108.mail.re3.yahoo.com>

Hi,
   
  I have a problem regarding rewrite error messages. The Rule1 produces Error1 when I try to generate code from it. But when I enclose the parser grammar(before ->) in parenthesis (Rule2), there is no error message.
   
    
     Why is that?
  
     Could you also tell me if referencing of  SLIST[$signallistitem.start] is ok? 

  Rule1 signallistitem
              :signalidentifier|signallistidentifier|timeridentifier
              ->^(SLIST[$signallistitem.start] signalidentifier signallistidentifier timeridentifier)
              ;
  Error1:
  Check grammar failed:
   (136):C:\Documents and Settings\...\FinalProjectSim.g:875:13:reference to rewrite element name without reference on left of ->.
   
   
  Rule2 signallistitem
              : ( signalidentifier|signallistidentifier|timeridentifier )
              ->^(SLIST[$signallistitem.start ]signalidentifier signallistidentifier timeridentifier)
              ;
  Thank you so much in advance.
   
  Best wishes,
   
  Al

       
---------------------------------
Shape Yahoo! in your own image.  Join our Network Research Panel today!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070709/382826a0/attachment.html 

From rschulz at sonic.net  Mon Jul  9 16:09:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 9 Jul 2007 16:09:52 -0700
Subject: [antlr-interest] newbie problem)reference to rewrite element
	name without reference on left of ->.
In-Reply-To: <441323.75142.qm@web58108.mail.re3.yahoo.com>
References: <441323.75142.qm@web58108.mail.re3.yahoo.com>
Message-ID: <200707091609.52868.rschulz@sonic.net>

On Monday 09 July 2007 16:04, ali azimi wrote:
> Hi,
>
>   I have a problem regarding rewrite error messages. The Rule1
> produces Error1 when I try to generate code from it. But when I
> enclose the parser grammar(before ->) in parenthesis (Rule2), there
> is no error message.
>
>
>      Why is that?

Operator precedence.

The rewrite rule operator, ->, binds more tightly than alternation 
("or" / vertical bar). In your Rule1 the first two alternatives have no 
explicit rewrite at all; only the last one, "timeridentifier" has an 
explicit rewrite action.


> ...
>
>   Al


Inter-caps or even underscores would help grammar readability, too.


Randall Schulz

From aliaazimi at yahoo.com  Mon Jul  9 16:43:45 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 9 Jul 2007 16:43:45 -0700 (PDT)
Subject: [antlr-interest] (newbie problem)reference to rewrite element
	name without re...
Message-ID: <56120.12442.qm@web58102.mail.re3.yahoo.com>

Hi,
   
  I apologize for my grammar being cluttered. I will try to use underscore more often.
   
  Do I have to write different rewrite rules for each sub-rule like the followings?
   
  signal_list_item
   
              :signal_identifier-> ^(signal_identifier)
   
              |signal_list_identifier-> ^(signal_list_identifier)
   
              |timer_identifier-> ^(timer_identifier)
   
              ;
   
  Or this one is correct? (what is the difference?)
   
  Rule2 signal_list_item
   
              :( signal_identifier |signal_list_identifier|timer_identifier)
   
              -> ^(SLIST[$signal_list_item.start ] signalidentifier    signal_list_identifier 
   
                   timer_identifier)
   
   
  Thanks,
   
  Al

 
---------------------------------
The fish are biting.
 Get more visitors on your site using Yahoo! Search Marketing.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070709/e8aba4bd/attachment-0001.html 

From rschulz at sonic.net  Mon Jul  9 16:53:00 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 9 Jul 2007 16:53:00 -0700
Subject: [antlr-interest] (newbie problem)reference to rewrite element
	name without re...
In-Reply-To: <56120.12442.qm@web58102.mail.re3.yahoo.com>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>
Message-ID: <200707091653.00958.rschulz@sonic.net>

On Monday 09 July 2007 16:43, ali azimi wrote:
> Hi,
>
>   I apologize for my grammar being cluttered. I will try to use
> underscore more often.

That's soooo 1980s! Get with the interCap / camelCase program!!


>   Do I have to write different rewrite rules for each sub-rule like
> the followings?
>
>   signal_list_item
>               :signal_identifier-> ^(signal_identifier)
>               |signal_list_identifier-> ^(signal_list_identifier)
>               |timer_identifier-> ^(timer_identifier)
>               ;
>
>   Or this one is correct? (what is the difference?)
>
>   Rule2 signal_list_item
>
>               :( signal_identifier
>                |signal_list_identifier|timer_identifier)
>               -> ^(SLIST[$signal_list_item.start ] signalidentifier signal_list_identifier
>                    timer_identifier)

The answer depends on the rewrite you need to perform, but it looks like
the answer is probably "yes," in this case. Offhand, my guess would be
that in most cases, you'll be creating a separate rewrite for each distinct
right-hand side.


>   Thanks,
>
>   Al


Randall Schulz

From jonathan.thomas at ca.com  Mon Jul  9 16:56:33 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 10 Jul 2007 09:56:33 +1000
Subject: [antlr-interest] (newbie problem)reference to rewrite element
 name without re...
In-Reply-To: <200707091653.00958.rschulz@sonic.net>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>
	<200707091653.00958.rschulz@sonic.net>
Message-ID: <4692CB31.1070803@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/164d1baa/attachment.html 

From rschulz at sonic.net  Mon Jul  9 17:02:53 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 9 Jul 2007 17:02:53 -0700
Subject: [antlr-interest] (newbie problem)reference to rewrite element
	name without re...
In-Reply-To: <4692CB31.1070803@ca.com>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>
	<200707091653.00958.rschulz@sonic.net> <4692CB31.1070803@ca.com>
Message-ID: <200707091702.53278.rschulz@sonic.net>

On Monday 09 July 2007 16:56, Jonathan Thomas wrote:
>  Randall R Schulz said the following on 10/07/2007 9:53 AM:
> On Monday 09 July 2007 16:43, ali azimi wrote:
>>   I apologize for my grammar being cluttered. I will try to use
>> underscore more often.
>
> That's soooo 1980s! Get with the interCap / camelCase program!!
>
>  What, you dishing the C++ STL, the paragon of style ;-) ?

No. I'm dissing it.

Note for future reference: "jibe" and "jive" are not the same thing.


Randall Schulz

From jonathan.thomas at ca.com  Mon Jul  9 17:14:39 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 10 Jul 2007 10:14:39 +1000
Subject: [antlr-interest] (newbie problem)reference to rewrite element
 name without re...
In-Reply-To: <200707091702.53278.rschulz@sonic.net>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>	<200707091653.00958.rschulz@sonic.net>
	<4692CB31.1070803@ca.com> <200707091702.53278.rschulz@sonic.net>
Message-ID: <4692CF6F.5030505@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/3c1c028e/attachment.html 

From parrt at cs.usfca.edu  Mon Jul  9 17:16:22 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 9 Jul 2007 17:16:22 -0700
Subject: [antlr-interest] ANTLRWorks paper draft available
Message-ID: <22C9194A-96C3-4B30-A7DC-A858932A37C2@cs.usfca.edu>

Howdy, here is the ANTLRWorks paper Jean and I wrote.  Going to  
resubmit to SP&E shortly:

http://www.antlr.org/papers/antlrworks-draft.pdf

Has lots of stuff on LL(*) lookahead DFA and parsers.

Ter

From kroepke at classdump.org  Mon Jul  9 17:16:27 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 10 Jul 2007 02:16:27 +0200
Subject: [antlr-interest] (newbie problem)reference to rewrite element
	name without re...
In-Reply-To: <200707091653.00958.rschulz@sonic.net>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>
	<200707091653.00958.rschulz@sonic.net>
Message-ID: <A1F36A14-1D0D-4C24-9456-4C1022EE8B6B@classdump.org>


On Jul 10, 2007, at 1:53 AM, Randall R Schulz wrote:

> On Monday 09 July 2007 16:43, ali azimi wrote:
>>   I apologize for my grammar being cluttered. I will try to use
>> underscore more often.
>
> That's soooo 1980s! Get with the interCap / camelCase program!!

Then watch with horror at the classnames ANTLR generates for rule  
returns :P

>>   Do I have to write different rewrite rules for each sub-rule like
>> the followings?
>>
>>   signal_list_item
>>               :signal_identifier-> ^(signal_identifier)
>>               |signal_list_identifier-> ^(signal_list_identifier)
>>               |timer_identifier-> ^(timer_identifier)
>>               ;

In this case you don't actually need to use rewrite rules. The tree  
operators are
usually more concise, though a bit less explicit, IMHO. On the other  
hand, sometimes
they are really nifty :)

signal_list_item
               : (signal_identifier^
		|signal_list_identifier^
		|timer_identifier^
		)
	      ;

>>   Or this one is correct? (what is the difference?)
>>
>>   Rule2 signal_list_item
>>
>>               :( signal_identifier
>>                |signal_list_identifier|timer_identifier)
>>               -> ^(SLIST[$signal_list_item.start ]  
>> signalidentifier signal_list_identifier
>>                    timer_identifier)
>
> The answer depends on the rewrite you need to perform, but it looks  
> like
> the answer is probably "yes," in this case. Offhand, my guess would be
> that in most cases, you'll be creating a separate rewrite for each  
> distinct
> right-hand side.

Well, the last one doesn't give you a really stable tree, does it?  
I'm not actually sure it would work at all.
Don't know off-hand how the rewrite mechanism copes with references  
being null and stuff.
So to sum up, the first one is probably correct (=in accordance with  
what you meant to do).

In any case, every rewrite always sets the return tree for the entire  
rule. That's why you can refer to the
existing tree (that's been built up by previous rewrites) with  
$rulename in the rewrite.

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Mon Jul  9 17:30:21 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 9 Jul 2007 17:30:21 -0700
Subject: [antlr-interest] (newbie problem)reference to rewrite element
	name without re...
In-Reply-To: <4692CF6F.5030505@ca.com>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>
	<200707091702.53278.rschulz@sonic.net> <4692CF6F.5030505@ca.com>
Message-ID: <200707091730.22116.rschulz@sonic.net>

On Monday 09 July 2007 17:14, Jonathan Thomas wrote:
>  Randall R Schulz said the following on 10/07/2007 10:02 AM:
> On Monday 09 July 2007 16:56, Jonathan Thomas wrote:
>
> ...
>
>  'Dissing it' is one of those shuddering things creeping into our
> vocab from American music ...

"Diss" is simply a shortening of "disrespect." It's a common mode of 
linguistic evolution.

Language is what people speak, not what grammarians or social 
conservatives (more realistically though of as the atavistic) 
prescribe.


>  Cheers,
>  JT.


Randall Schulz

From rschulz at sonic.net  Mon Jul  9 18:41:29 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 9 Jul 2007 18:41:29 -0700
Subject: [antlr-interest] (newbie problem)reference to rewrite element
	name without re...
In-Reply-To: <A1F36A14-1D0D-4C24-9456-4C1022EE8B6B@classdump.org>
References: <56120.12442.qm@web58102.mail.re3.yahoo.com>
	<200707091653.00958.rschulz@sonic.net>
	<A1F36A14-1D0D-4C24-9456-4C1022EE8B6B@classdump.org>
Message-ID: <200707091841.30001.rschulz@sonic.net>

On Monday 09 July 2007 17:16, Kay Roepke wrote:
> On Jul 10, 2007, at 1:53 AM, Randall R Schulz wrote:
> > On Monday 09 July 2007 16:43, ali azimi wrote:
> >>   I apologize for my grammar being cluttered. I will try to use
> >> underscore more often.
> >
> > That's soooo 1980s! Get with the interCap / camelCase program!!
>
> Then watch with horror at the classnames ANTLR generates for rule
> returns :P

Fortunately, I rarely have to do so. "What I don't know, won't hurt me." 
(I know, it's utterly bogus as a philosophy, but from time to time it's 
applicable.)


> ...
>
> cheers,
> -k


RRS

From oliver.drewien at oracle.com  Tue Jul 10 03:20:53 2007
From: oliver.drewien at oracle.com (Oliver Drewien)
Date: Tue, 10 Jul 2007 12:20:53 +0200
Subject: [antlr-interest] ANTLR beginner problem
In-Reply-To: <200707051436.l65EaYa2081664@pro36.abac.com>
References: <200707051436.l65EaYa2081664@pro36.abac.com>
Message-ID: <46935D85.2020905@oracle.com>

Hi,

So if I use System.out.println(output.toString()) I would expect:
; compute 3+4*5
ldc 3
ldc 4
ldc 5
imul
iadd

BUT I GOD:

; compute
istore  ;

If I use the statement System.out.println(output.toDebugString());  then
I got following output:

template-<assign([varNum, v, descr, id])@16>:chunks=[; compute ,  descr,
,  v,
, istore ,  varNum,  ; ,  id]attributes=[maxLocals=1,instructions=[;
compute 3+4*5
ldc 3
ldc 4
ldc 5
imul
iadd],maxStackDepth=4]

Any idea whats wrong with toString()? Or do you think something is wrong
with the code (see attachement)?

Thanks for helping an ANTLR beginner....

Oliver











-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ByteCode.stg
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/e6b31c9e/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Franziska.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/e6b31c9e/attachment-0001.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Gen.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/e6b31c9e/attachment-0002.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Test.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/e6b31c9e/attachment-0003.pl 

From ld at galador.net  Tue Jul 10 05:19:16 2007
From: ld at galador.net (Lloyd Dupont)
Date: Tue, 10 Jul 2007 22:19:16 +1000
Subject: [antlr-interest] learning tree grammar
Message-ID: <00a601c7c2ec$8a056bf0$243331d2@vulcain>

in the book there is an example with rewrite and label which is like that:

==
prog: main=method others+=method* -> ^(MAIN $main) $others* ;
==

I have tried a few variation in a test program like:
===
grammar TreeTest;

options {output=AST;}
tokens{ MAIN; }

r : first=atom others+=atom* -> ^(MAIN $first) $others*;
atom :  ID | INT;
op : PLUS|MINUS;
ID : 'a'..'z' + ;
INT : '0'..'9' +;
PLUS :  '+';
MINUS : '-';
WS : (' ' |'\n' |'\r' ) {$channel=HIDDEN;} ;
===
with input such as
===
23 jhkl 34 hjk 34 
===

yet my resulting tree only the first 2 tokens: '23' and 'jhkl' (according to ANTRWorks debugger at least).
how could I include all the remaining token in the produced tree?!?!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/bdc06705/attachment-0001.html 

From ld at galador.net  Tue Jul 10 05:24:38 2007
From: ld at galador.net (Lloyd Dupont)
Date: Tue, 10 Jul 2007 22:24:38 +1000
Subject: [antlr-interest] learning tree grammar
References: <00a601c7c2ec$8a056bf0$243331d2@vulcain>
Message-ID: <00b501c7c2ed$49554070$243331d2@vulcain>

Never mind, my own syntax error, nothing to worry about.

  From: Lloyd Dupont 
  Subject: [antlr-interest] learning tree grammar


  in the book there is an example with rewrite and label which is like that:

  ==
  prog: main=method others+=method* -> ^(MAIN $main) $others* ;
  ==

  I have tried a few variation in a test program like:
  ===
  grammar TreeTest;

  options {output=AST;}
  tokens{ MAIN; }

  r : first=atom others+=atom* -> ^(MAIN $first) $others*;
  atom :  ID | INT;
  op : PLUS|MINUS;
  ID : 'a'..'z' + ;
  INT : '0'..'9' +;
  PLUS :  '+';
  MINUS : '-';
  WS : (' ' |'\n' |'\r' ) {$channel=HIDDEN;} ;
  ===
  with input such as
  ===
  23 jhkl 34 hjk 34 
  ===

  yet my resulting tree only the first 2 tokens: '23' and 'jhkl' (according to ANTRWorks debugger at least).
  how could I include all the remaining token in the produced tree?!?!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/e98206b6/attachment.html 

From ld at galador.net  Tue Jul 10 05:45:27 2007
From: ld at galador.net (Lloyd Dupont)
Date: Tue, 10 Jul 2007 22:45:27 +1000
Subject: [antlr-interest] about the book
Message-ID: <00c801c7c2f0$31d523e0$243331d2@vulcain>

I saw there was a controversy about the price / usefulness / etc...

I have nothing special about that, except it make me aware that: there was a book!

Taking it as both: 
- a nice and affordable way to support this excellent (free) tool I love to use (very) occasionnaly
- perhaps a better way to graps some concept which eluded me so far

I decided to buy it.


I'm reading the PDF so far (the dead trees are on their way).


I just wanted to say that, unlike some comment I previously read, I found the book very helpful.
Right now I'm reading the chapter on trees. A topic which I was just barely able to make work/hack before and understanding is now slowly dawning on me.

Of course I have to made an intellectual effort to get the concepts (as it would be the same for any math/physics/algorithm book). But nowhere before I had such clear and helpful help.


So far (from only 20 pages of reading), I will say kudos for the ANTLR book!!!
(And ANTLR Works as well, of course, with which I could experiment the gramatical structure and quickly and easily double check if I got the concept right)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/597bc9c7/attachment.html 

From ld at galador.net  Tue Jul 10 06:36:21 2007
From: ld at galador.net (Lloyd Dupont)
Date: Tue, 10 Jul 2007 23:36:21 +1000
Subject: [antlr-interest] ahum.. tree question
Message-ID: <00f401c7c2f7$4e68f340$243331d2@vulcain>

here is my rule:
===========
compare : (shift -> shift)
  (
       ( (LT | GT | LTE | GTE) s=shift -> ^((LT | GT | LTE | GTE) $compare $s) )*
          | is='is' i=identifier -> ^(IS[$is] $compare $i)
          | as='as' i=identifier  -> ^(AS[$as] $compare $i)
  )
 ;
 ===========

it doesn't work...
it looks like think ANTLR doesn't like my 
^((LT | GT | LTE | GTE) 

in the tree rewriting rule.
any tip on how I could rewrite this tree? 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/8c0817bc/attachment.html 

From ld at galador.net  Tue Jul 10 06:40:40 2007
From: ld at galador.net (Lloyd Dupont)
Date: Tue, 10 Jul 2007 23:40:40 +1000
Subject: [antlr-interest] ahum.. tree question
References: <00f401c7c2f7$4e68f340$243331d2@vulcain>
Message-ID: <00ff01c7c2f7$e8a55b10$243331d2@vulcain>

I'm not sure it work, but I rewite the problematic part as follow:

  ( op=(LT | GT | LTE | GTE) s=shift -> ^($op $compare $s) )*

is it ok?


  ----- Original Message ----- 
  From: Lloyd Dupont 
  To: antlr-interest at antlr.org 
  Sent: Tuesday, July 10, 2007 11:36 PM
  Subject: [antlr-interest] ahum.. tree question


  here is my rule:
  ===========
  compare : (shift -> shift)
    (
         ( (LT | GT | LTE | GTE) s=shift -> ^((LT | GT | LTE | GTE) $compare $s) )*
            | is='is' i=identifier -> ^(IS[$is] $compare $i)
            | as='as' i=identifier  -> ^(AS[$as] $compare $i)
    )
   ;
   ===========

  it doesn't work...
  it looks like think ANTLR doesn't like my 
  ^((LT | GT | LTE | GTE) 

  in the tree rewriting rule.
  any tip on how I could rewrite this tree? 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/570b932b/attachment.html 

From prashant.deva at gmail.com  Tue Jul 10 06:41:29 2007
From: prashant.deva at gmail.com (Prashant Deva)
Date: Tue, 10 Jul 2007 06:41:29 -0700
Subject: [antlr-interest] ANTLRWorks paper draft available
In-Reply-To: <22C9194A-96C3-4B30-A7DC-A858932A37C2@cs.usfca.edu>
References: <22C9194A-96C3-4B30-A7DC-A858932A37C2@cs.usfca.edu>
Message-ID: <41fed8f80707100641t20713e41xf574249053fbe85@mail.gmail.com>

"ANTLRStudio [29] has probably the best editor experience ... "

There is a space between the words antlr and studio, its written as "ANTLR
Studio" ;)


Prashant
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/43e20744/attachment.html 

From ld at galador.net  Tue Jul 10 08:21:04 2007
From: ld at galador.net (Lloyd Dupont)
Date: Wed, 11 Jul 2007 01:21:04 +1000
Subject: [antlr-interest] Any tip...
Message-ID: <011001c7c305$f018abf0$243331d2@vulcain>

I got this error message:
ExpressionGrammar.g:270:1: The following token definitions are unreachable: MINUS,PLUS

I'm trying with the ANTLR Work interpreter on the command additive:
additive: multiple ((PLUS^ | MINUS^) multiple)* ;

with input like 1+2

and I get just the token one '1' followed by NoViableAltException

any idea of what could be the source of the problem?

I was recompiling regularly but the error just creeped in at an impromptu moment and I cannot remove it now .. :-(
I'm .. puzzled...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/59c5f127/attachment.html 

From ted.villalba at gmail.com  Tue Jul 10 11:03:39 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 10 Jul 2007 11:03:39 -0700
Subject: [antlr-interest] Fundamental tree parsing question
Message-ID: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>

Hi,

I'm stuck trying to figure out how to distinguish between multi-term values
in a syntax tree.
For instance, the following rule rewrites to a simple tree:

field    : tag '=' LPAREN value RPAREN -> ^('=' tag value)

Here the root node is '=', and the children are both tag and value. The
problem is, if tag has multiple tokens, and value is multiple tokens, there
is no way (that I know of yet) to determine where 'tag'  stops and 'value'
starts.
So something like :
TAG A=(THE TREE TEST)

Will give you:

^(= TAG A THE TREE TEST)

If I want to reference the value for tag at this point, I don't know how.

This would seem a basic problem, but I haven't found any similar examples in
the literature. Has anyone run into this issue and how did you resolve it?

Thank you,
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/c892211a/attachment.html 

From rdclark at gmail.com  Tue Jul 10 11:20:41 2007
From: rdclark at gmail.com (Richard Clark)
Date: Tue, 10 Jul 2007 11:20:41 -0700
Subject: [antlr-interest] Fundamental tree parsing question
In-Reply-To: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
Message-ID: <d3992d900707101120m3ae511ebob3c6641832a3e6cd@mail.gmail.com>

On 7/10/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> Hi,
>
> I'm stuck trying to figure out how to distinguish between multi-term values
> in a syntax tree.
> For instance, the following rule rewrites to a simple tree:
>
> field    : tag '=' LPAREN value RPAREN -> ^('=' tag value)

Use subtrees:

tokens { TAG; VALUE; }

field    : tag '=' LPAREN value RPAREN -> ^('=' tag value) ;

tag : ID -> ^(TAG ID) ;

value : NUMBER -> ^(VALUE NUMBER) ;

// end of the example

So something like :
TAG A=(THE TREE TEST)

Will give you:

(= (TAG A) (VALUE THE TREE TEST))

 ...Richard

From trunkel at gmail.com  Tue Jul 10 11:21:54 2007
From: trunkel at gmail.com (troy runkel)
Date: Tue, 10 Jul 2007 14:21:54 -0400
Subject: [antlr-interest] How to create a case-insensitive parser using the
	C target?
Message-ID: <620da58c0707101121r6bed96adj641eba1f730d29d5@mail.gmail.com>

I'm using ANTLR v3 to build a parser that works with the C target.
Currently the parser is case-sensitive and I need it to be
case-insensitive.  It looks like there have been a number of
discussions regarding case-insensitive parsers over the last year or
so, but I couldn't find anything describing how to setup a
case-insensitive parser for the C target.  Anybody out there know how
to do this?  Thanks.

Troy Runkel

From pink at odahoda.de  Tue Jul 10 11:45:56 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 10 Jul 2007 20:45:56 +0200
Subject: [antlr-interest] Fundamental tree parsing question
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
Message-ID: <f70k54$99a$1@sea.gmane.org>

Hello,

Ted Villalba wrote:

> I'm stuck trying to figure out how to distinguish between multi-term
> values in a syntax tree.
> For instance, the following rule rewrites to a simple tree:
> 
> field    : tag '=' LPAREN value RPAREN -> ^('=' tag value)
> 
> Here the root node is '=', and the children are both tag and value. The
> problem is, if tag has multiple tokens, and value is multiple tokens,
> there
> is no way (that I know of yet) to determine where 'tag'  stops and 'value'
> starts.
> So something like :
> TAG A=(THE TREE TEST)
> 
> Will give you:
> 
> ^(= TAG A THE TREE TEST)
> 
> If I want to reference the value for tag at this point, I don't know how.
> 
> This would seem a basic problem, but I haven't found any similar examples
> in the literature. Has anyone run into this issue and how did you resolve
> it?

You could introduce imaginary token types TAGS and VALUES (one of those
would be sufficient, but for symmetry...). Then use

field: tag '=' LPAREN value RPAREN -> ^('=' ^(TAGS tag) ^(VALUES value))

(or make tag and value return trees rooted by TAGS/VALUES).


HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From ted.villalba at gmail.com  Tue Jul 10 11:57:21 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 10 Jul 2007 11:57:21 -0700
Subject: [antlr-interest] Fundamental tree parsing question
In-Reply-To: <f70k54$99a$1@sea.gmane.org>
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
Message-ID: <69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>

Thanks guys, for the tips. I've been trying to introduce imaginary nodes
into my grammar, but ANTLRWorks keeps flipping out on me when I walk through
the debugger.
I've tried a couple configurations similar to what ya'll sent, but when
stepping through, my CPU and RAM get pegged and I start getting a bunch of
these:

java.net.SocketException: Software caused connection abort: recv failed
    at java.net.SocketInputStream.socketRead0(Native Method)
    at java.net.SocketInputStream.read(Unknown Source)
    at sun.nio.cs.StreamDecoder$CharsetSD.readBytes(Unknown Source)
    at sun.nio.cs.StreamDecoder$CharsetSD.implRead(Unknown Source)
    at sun.nio.cs.StreamDecoder.read(Unknown Source)
    at java.io.InputStreamReader.read(Unknown Source)
    at java.io.BufferedReader.fill(Unknown Source)
    at java.io.BufferedReader.readLine(Unknown Source)
    at java.io.BufferedReader.readLine(Unknown Source)
    at org.antlr.runtime.debug.DebugEventSocketProxy.ack(
DebugEventSocketProxy.java:95)
    at org.antlr.runtime.debug.DebugEventSocketProxy.transmit(
DebugEventSocketProxy.java:106)
    at org.antlr.runtime.debug.DebugEventSocketProxy.becomeRoot(
DebugEventSocketProxy.java:260)
    at org.antlr.runtime.debug.DebugTreeAdaptor.becomeRoot(
DebugTreeAdaptor.java:60)
    at WQLParser.tag(WQLParser.java:1316)
    at WQLParser.field(WQLParser.java:663)
    at WQLParser.query(WQLParser.java:252)
    at WQLParser.start(WQLParser.java:126)
    at __Test__.main(__Test__.java:16)

On 7/10/07, Benjamin Niemann <pink at odahoda.de> wrote:
>
> Hello,
>
> Ted Villalba wrote:
>
> > I'm stuck trying to figure out how to distinguish between multi-term
> > values in a syntax tree.
> > For instance, the following rule rewrites to a simple tree:
> >
> > field    : tag '=' LPAREN value RPAREN -> ^('=' tag value)
> >
> > Here the root node is '=', and the children are both tag and value. The
> > problem is, if tag has multiple tokens, and value is multiple tokens,
> > there
> > is no way (that I know of yet) to determine where 'tag'  stops and
> 'value'
> > starts.
> > So something like :
> > TAG A=(THE TREE TEST)
> >
> > Will give you:
> >
> > ^(= TAG A THE TREE TEST)
> >
> > If I want to reference the value for tag at this point, I don't know
> how.
> >
> > This would seem a basic problem, but I haven't found any similar
> examples
> > in the literature. Has anyone run into this issue and how did you
> resolve
> > it?
>
> You could introduce imaginary token types TAGS and VALUES (one of those
> would be sufficient, but for symmetry...). Then use
>
> field: tag '=' LPAREN value RPAREN -> ^('=' ^(TAGS tag) ^(VALUES value))
>
> (or make tag and value return trees rooted by TAGS/VALUES).
>
>
> HTH
>
> --
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/9ea2cfb9/attachment.html 

From pink at odahoda.de  Tue Jul 10 12:14:33 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 10 Jul 2007 21:14:33 +0200
Subject: [antlr-interest] Fundamental tree parsing question
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
Message-ID: <f70lqp$es7$1@sea.gmane.org>

Ted Villalba wrote:

> Thanks guys, for the tips. I've been trying to introduce imaginary nodes
> into my grammar, but ANTLRWorks keeps flipping out on me when I walk
> through the debugger.
> I've tried a couple configurations similar to what ya'll sent, but when
> stepping through, my CPU and RAM get pegged and I start getting a bunch of
> these:
> 
> java.net.SocketException: Software caused connection abort: recv failed
> [...]

That look like a bug - either in ANTLRWorks, the runtime or in code
generation. Could you please post a complete grammar that demonstrates this
bug?

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From jimi at temporal-wave.com  Tue Jul 10 12:28:38 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Jul 2007 12:28:38 -0700
Subject: [antlr-interest] How to create a case-insensitive parser using
	theC target?
In-Reply-To: <620da58c0707101121r6bed96adj641eba1f730d29d5@mail.gmail.com>
References: <620da58c0707101121r6bed96adj641eba1f730d29d5@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76EB5@wavemachine.temporal-wave.com>

I have added case insensitivity to the C input streams, but this is not
part of the currently shipping library and I am still testing it so have
not yet submitted it (probably today though, especially is someone wants
it).

All you do is the following:

// Create the input stream using the supplied file name
// (Use antlr3AsciiFileStreamNew for UCS2/16bit input).
//
input	= antlr3AsciiFileStreamNew(fName);

// This lexer has its tokens specified in upper case only and then we
tell it
// to do upper case converted comparisons with the input stream. The
tokens preserve
// the case of the text that actually matched but matched in a case
insensitive way.
//
input->setUcaseLA(input, ANTLR3_TRUE);


The method call installs a version of LA() that always returns toupper()
on the input char (which means that it does not alter the actual input
stream, but will MATCH in upper case. You then specify all your keywords
in upper case only.

This has been done for the 8 bit input stream only at the moment though
I will add 16 bit UCS2 before too long. 

Also note that it only uses toupper() which means the system you are
using needs to have a locale sensitive version. IN general, for more
complicated streams you would use my supplied example to write a version
of the function that uses say IBM's ICU package (which I do not want the
standard runtime to be dependent on of course).


Watch the Fisheye site and when you see me check this change in you can
get the dist tarball and give it a try. For now, specify your tokens in
upper case only and test with upper case until you have the update.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Tuesday, July 10, 2007 11:22 AM
> To: ANTLR mail-list
> Subject: [antlr-interest] How to create a case-insensitive parser
using
> theC target?
> 
> I'm using ANTLR v3 to build a parser that works with the C target.
> Currently the parser is case-sensitive and I need it to be
> case-insensitive.  It looks like there have been a number of
> discussions regarding case-insensitive parsers over the last year or
> so, but I couldn't find anything describing how to setup a
> case-insensitive parser for the C target.  Anybody out there know how
> to do this?  Thanks.
> 
> Troy Runkel

From ted.villalba at gmail.com  Tue Jul 10 12:45:07 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 10 Jul 2007 12:45:07 -0700
Subject: [antlr-interest] Fundamental tree parsing question
In-Reply-To: <f70lqp$es7$1@sea.gmane.org>
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
Message-ID: <69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>

Thanks Benjamin.
Here is the grammar attached below, with your most recent suggestion. I can
walk it without issue, with input like :
query=(city AND mountain dwellers)

until I try to add the use of the imaginary tokens, for example, in the
'field' rule below:
The grammar:

grammar TQL;

options{
    output=AST;
    ASTLabelType=CommonTree;
}

tokens{ TAG; VALUE; TERMS;} //imaginary token types

@header{
import java.util.HashMap;
}

@members {

HashMap fieldMap = new HashMap();

}


start   : ( query  {System.out.println("AST:\n"+$query.tree.toStringTree());}
)+
         ;


query   : field ((WS!)+ BOOL_OP^ (WS!)+ query)*
           | LPAREN! query RPAREN! ((WS!)* BOOL_OP^ (WS!)* query)*
            ;

field    : tag '=' LPAREN value RPAREN -> ^('=' ^(TAG tag) ^(VALUE value))
          | tag '=' terms+ -> ^('=' tag terms)
          | qid
           ;

value   : terms ((WS)+ operator^ (WS)+ value)*
          | LPAREN! value RPAREN! ((WS)+ operator^ (WS!)+ value)*
          ;

tag     : WCHAR -> ^(TAG WCHAR)
         ;

terms : WCHAR (WS WCHAR)*  -> ^(TERMS WCHAR+)
         | QUOTE WCHAR (WS! WCHAR)* QUOTE
         ;

qid     : '#'!DIGIT
         ;

operator: BOOL_OP|WOK_OP;
BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
WOK_OP    : 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
DIGIT   : ('0'..'9');
WS      : (' '|'\t'|'\r'|'\n')+ ;
LPAREN    : '(' ;
RPAREN    : ')' ;
QUOTE    : '"';
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;


Thanks again for the help.

Ted





On 7/10/07, Benjamin Niemann <pink at odahoda.de> wrote:
>
> Ted Villalba wrote:
>
> > Thanks guys, for the tips. I've been trying to introduce imaginary nodes
> > into my grammar, but ANTLRWorks keeps flipping out on me when I walk
> > through the debugger.
> > I've tried a couple configurations similar to what ya'll sent, but when
> > stepping through, my CPU and RAM get pegged and I start getting a bunch
> of
> > these:
> >
> > java.net.SocketException: Software caused connection abort: recv failed
> > [...]
>
> That look like a bug - either in ANTLRWorks, the runtime or in code
> generation. Could you please post a complete grammar that demonstrates
> this
> bug?
>
> --
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/61a8586b/attachment.html 

From pink at odahoda.de  Tue Jul 10 13:11:14 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 10 Jul 2007 22:11:14 +0200
Subject: [antlr-interest] Fundamental tree parsing question
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
Message-ID: <f70p57$rjs$1@sea.gmane.org>

Ted Villalba wrote:

> Here is the grammar attached below, with your most recent suggestion. I
> can walk it without issue, with input like :
> query=(city AND mountain dwellers)
> 
> until I try to add the use of the imaginary tokens, for example, in the
> 'field' rule below:
> The grammar:
> [...]

Mmm... I can't reproduce the problem. I can step through the input and get
the output:

AST:
(= (TAG (TAG query)) (VALUE (AND (TERMS city)     (TERMS mountain
dwellers))))

Probably not what you finally want (redundant TAG and some WS not omitted),
but at least it does not crash...

I used ANTLRWorks 1.0.2 and "Java(TM) 2 Runtime Environment, Standard
Edition (build 1.5.0_12-b04)" on Debian GNU/Linux. What's your setup?

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From ted.villalba at gmail.com  Tue Jul 10 13:25:38 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 10 Jul 2007 13:25:38 -0700
Subject: [antlr-interest] Fundamental tree parsing question
In-Reply-To: <f70p57$rjs$1@sea.gmane.org>
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
	<f70p57$rjs$1@sea.gmane.org>
Message-ID: <69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>

I was on 1.0.11b. Having upgraded to the latest version it works.
Thanks for your time Benjamin.
Very much appreciated!

Ted

On 7/10/07, Benjamin Niemann <pink at odahoda.de> wrote:
>
> Ted Villalba wrote:
>
> > Here is the grammar attached below, with your most recent suggestion. I
> > can walk it without issue, with input like :
> > query=(city AND mountain dwellers)
> >
> > until I try to add the use of the imaginary tokens, for example, in the
> > 'field' rule below:
> > The grammar:
> > [...]
>
> Mmm... I can't reproduce the problem. I can step through the input and get
> the output:
>
> AST:
> (= (TAG (TAG query)) (VALUE (AND (TERMS city)     (TERMS mountain
> dwellers))))
>
> Probably not what you finally want (redundant TAG and some WS not
> omitted),
> but at least it does not crash...
>
> I used ANTLRWorks 1.0.2 and "Java(TM) 2 Runtime Environment, Standard
> Edition (build 1.5.0_12-b04)" on Debian GNU/Linux. What's your setup?
>
> --
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/a369e1ee/attachment.html 

From aliaazimi at yahoo.com  Tue Jul 10 15:02:30 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 15:02:30 -0700 (PDT)
Subject: [antlr-interest] (newbie question)the right way for writting
	rewrite rules
Message-ID: <354536.59450.qm@web58111.mail.re3.yahoo.com>

Hi,
   
  Thank you very much for all your supports.
   
  For the following grammar which rewrite rule is correct? 1 or 2
   
  operatorApplication
 :operatorIdentifier'('expression(','expression)*')'
 ;
   
  1->^(operatorIdentifier expression+)
   
  2->^(operatorIdentifier expression)+
   
  Best wishes,
   
  Al
   

 
---------------------------------
TV dinner still cooling?
Check out "Tonight's Picks" on Yahoo! TV.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/6d6f657b/attachment.html 

From dMaier at genome.stanford.edu  Tue Jul 10 15:05:35 2007
From: dMaier at genome.stanford.edu (Don Maier)
Date: Tue, 10 Jul 2007 15:05:35 -0700
Subject: [antlr-interest] Meaning of error message:  expecting EOA, found 'Q'
Message-ID: <BD3CE404-0344-40D3-85C7-E8F768B84A6F@genome.stanford.edu>

Good day,

Can anyone give me a hint about what this error message means:

	IDF.g:0:0: syntax error: buildnfa: <AST>:483:42: expecting EOA,  
found 'Q'

(in this case, 'Q' is a lexical element standing for a single quote  
mark.)

Thanks!

Regards,
Don Maier
Sr. Software Designer/Research
Dept. of Biochemistry
Stanford University School of Medicine


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/8f82952b/attachment-0001.html 

From rschulz at sonic.net  Tue Jul 10 15:25:57 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 10 Jul 2007 15:25:57 -0700
Subject: [antlr-interest] (newbie question)the right way for writting
	rewrite rules
In-Reply-To: <354536.59450.qm@web58111.mail.re3.yahoo.com>
References: <354536.59450.qm@web58111.mail.re3.yahoo.com>
Message-ID: <200707101525.57389.rschulz@sonic.net>

On Tuesday 10 July 2007 15:02, ali azimi wrote:
> Hi,
>
>   Thank you very much for all your supports.
>
>   For the following grammar which rewrite rule is correct? 1 or 2
>
>   operatorApplication
>
>  :operatorIdentifier'('expression(','expression)*')'
>
>  ;
>
>   1->^(operatorIdentifier expression+)
>
>   2->^(operatorIdentifier expression)+

As ever, it depends on what you want!

The first will produce a single sub-tree labelled with the 
operatorIdentifier and with all the expressions as its children.

The second will produce as many sub-trees as their are expressions. Each 
of those subtrees will be labelled with the operatorIdentifier and have 
one of the expressions as its only child.

If you have Terence's book, TDAR, you can find this exact issue treated 
in the section titled "Duplicated Nodes and Trees" (page 167 of the 
printed book, page 180 of the PDF).


>   Best wishes,
>
>   Al


Randall Schulz

From kroepke at classdump.org  Tue Jul 10 15:53:10 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 11 Jul 2007 00:53:10 +0200
Subject: [antlr-interest] Meaning of error message:  expecting EOA,
	found 'Q'
In-Reply-To: <BD3CE404-0344-40D3-85C7-E8F768B84A6F@genome.stanford.edu>
References: <BD3CE404-0344-40D3-85C7-E8F768B84A6F@genome.stanford.edu>
Message-ID: <F923B9AD-841F-4E77-960C-DB036B095B48@classdump.org>


On Jul 11, 2007, at 12:05 AM, Don Maier wrote:

> Can anyone give me a hint about what this error message means:
>
> 	IDF.g:0:0: syntax error: buildnfa: <AST>:483:42: expecting EOA,  
> found 'Q'
>
> (in this case, 'Q' is a lexical element standing for a single quote  
> mark.)

hard to say without looking at the grammar. it basically is a syntax  
error in the grammar somehow.
because the antlr grammar parser is not yet written in ANTLR v3 (but  
in v2) the error messages emitted
are not yet ideal (this is simply an internal code issue)

could you post at least the rule (should be in line 483 of your  
grammar)?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From aliaazimi at yahoo.com  Tue Jul 10 16:04:22 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 16:04:22 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) rewrite rule question
Message-ID: <930400.28990.qm@web58115.mail.re3.yahoo.com>

Hi,
   
  This one looks complicated to me. Do you think it is ok? I read in the pdf that single rules or texts enclosed in Apostrophe are automatically provided with a tree node. I do not know if it is correct in here. Could you please help?
   
  rangeConditionItem
  
 :((expr1=expression ':'expr2=expression)->^(':' $expr1 $expr2)
  
 |('='|'/='|'<'|'<='|'>'|'>=')?expr3=expression)->^(RNGCONITEM  ^(SIGNS '=' '/=' '<' '<=' '>' '>=')
   
  $expr3)
 ;
   
  Best wishes,
   
  Al

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/7dc2ffda/attachment.html 

From dMaier at genome.stanford.edu  Tue Jul 10 16:54:05 2007
From: dMaier at genome.stanford.edu (Don Maier)
Date: Tue, 10 Jul 2007 16:54:05 -0700
Subject: [antlr-interest] Meaning of error message:  expecting EOA,
	found 'Q'
In-Reply-To: <F923B9AD-841F-4E77-960C-DB036B095B48@classdump.org>
References: <BD3CE404-0344-40D3-85C7-E8F768B84A6F@genome.stanford.edu>
	<F923B9AD-841F-4E77-960C-DB036B095B48@classdump.org>
Message-ID: <B898C08B-C282-471F-8C67-403BE5794407@genome.stanford.edu>

Hi Kay,

The rule in question is:

------------------------------

/* A quote-bracketed sequence of non-quote characters, though  
permitting embedded
* escaped quotes in the forma of '\"'.  The content is the character  
string
* between the quotes, which may contain leading and trailing spaces,  
tabs,
* carriage returns, or newlines.
*/
/*
QUOTED_CONTENT
	: Q (options {greedy=false;} : (~(Q|'\\'Q)))* Q
	;

------------------------------

Is it possible that this somehow affects the tree parser, but not the  
basic parser?

In any event, thanks for your interest in this problem!

Regards,
Don M.

On Jul 10, 2007, at 3:53 PM, Kay Roepke wrote:

>
> On Jul 11, 2007, at 12:05 AM, Don Maier wrote:
>
>> Can anyone give me a hint about what this error message means:
>>
>> 	IDF.g:0:0: syntax error: buildnfa: <AST>:483:42: expecting EOA,  
>> found 'Q'
>>
>> (in this case, 'Q' is a lexical element standing for a single  
>> quote mark.)
>
> hard to say without looking at the grammar. it basically is a  
> syntax error in the grammar somehow.
> because the antlr grammar parser is not yet written in ANTLR v3  
> (but in v2) the error messages emitted
> are not yet ideal (this is simply an internal code issue)
>
> could you post at least the rule (should be in line 483 of your  
> grammar)?
>
> cheers,
> -k
> -- 
> Kay R?pke
> http://classdump.org/
>
>
>




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/9a5b6a76/attachment.html 

From rschulz at sonic.net  Tue Jul 10 17:03:48 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 10 Jul 2007 17:03:48 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <930400.28990.qm@web58115.mail.re3.yahoo.com>
References: <930400.28990.qm@web58115.mail.re3.yahoo.com>
Message-ID: <200707101703.48715.rschulz@sonic.net>

On Tuesday 10 July 2007 16:04, ali azimi wrote:
> Hi,
>
>   This one looks complicated to me. Do you think it is ok? I read in
> the pdf that single rules or texts enclosed in Apostrophe are
> automatically provided with a tree node. I do not know if it is
> correct in here. Could you please help?

Might I suggest that in many of these cases, you could make more 
progress and learn more effectively by availing yourself of the 
considerable powers of ANTLRWorks.

ANTLRWorks' debugger can run your parser on test input (going so far as 
to provide single-stepping and even reverse-stepping to earlier stages 
in the parse) and can show either the parse tree or the AST of a 
tree-generating or rewriting parser. It is an outstanding tool for 
understanding the consequences of various grammar and / or rewrite 
choices.

If you haven't already done so, check it out! If you have, perhaps you 
could give us some idea why it isn't at least as good as a mailing list 
at answering many of the questions that arise as you develop your 
parser.


> ...
>
>   Al



Randall Schulz

From clinton.roy at gmail.com  Tue Jul 10 17:26:10 2007
From: clinton.roy at gmail.com (Clinton Roy)
Date: Wed, 11 Jul 2007 10:26:10 +1000
Subject: [antlr-interest] Any tip...
In-Reply-To: <011001c7c305$f018abf0$243331d2@vulcain>
References: <011001c7c305$f018abf0$243331d2@vulcain>
Message-ID: <9c0715e40707101726q3b4cdb2scddf3610c2a3ea0f@mail.gmail.com>

Hi Lloyd,

On 7/11/07, Lloyd Dupont <ld at galador.net> wrote:
>
> I got this error message:
> ExpressionGrammar.g:270:1: The following token definitions are unreachable:
> MINUS,PLUS
>
> I'm trying with the ANTLR Work interpreter on the command additive:
> additive: multiple ((PLUS^ | MINUS^) multiple)* ;
>
> with input like 1+2
>
> and I get just the token one '1' followed by NoViableAltException
>
> any idea of what could be the source of the problem?

Do you have a whitespace token? are the tokens being filtered away
from the parser ($CHANNEL = hidden / skip()) ?

cheers,
-- 
Clinton Roy
CSIRO - Robotics Platform Engineer
Autonomous Systems Lab

humbug.org.au  - Brisbane Unix Group
azure.humbug.org.au/~croy/blog - Blog
flickr.com/photos/croy/ - Photos

From ld at galador.net  Tue Jul 10 17:29:19 2007
From: ld at galador.net (Lloyd Dupont)
Date: Wed, 11 Jul 2007 10:29:19 +1000
Subject: [antlr-interest] Any tip...
In-Reply-To: <9c0715e40707101726q3b4cdb2scddf3610c2a3ea0f@mail.gmail.com>
References: <011001c7c305$f018abf0$243331d2@vulcain>
	<9c0715e40707101726q3b4cdb2scddf3610c2a3ea0f@mail.gmail.com>
Message-ID: <72244B41F58144F19C3B0B78B74CB2C5@lloydPC>

>
>> and I get just the token one '1' followed by NoViableAltException
>>
>> any idea of what could be the source of the problem?
>
> Do you have a whitespace token? are the tokens being filtered away
> from the parser ($CHANNEL = hidden / skip()) ?
>
yes, they are skipped.
I think tonight I will make a copy of my grammar, and slowly remove things 
until I pinpoint the problem.

The original problem was that, in ATLR Works, the console was not my 
selected tab, and even though I compiled many times this warning was shown 
nowhere but in the console, hence I missed the earlier warning... :-(
(Now I know I should have the console always visible!!)


> -- 
> Clinton Roy
> CSIRO - Robotics Platform Engineer
> Autonomous Systems Lab
>
> humbug.org.au  - Brisbane Unix Group
Ho cool, I'm in Brisbane too!
But... more like a .NET developper.....

From kroepke at classdump.org  Tue Jul 10 17:34:26 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 11 Jul 2007 02:34:26 +0200
Subject: [antlr-interest] Meaning of error message:  expecting EOA,
	found 'Q'
In-Reply-To: <B898C08B-C282-471F-8C67-403BE5794407@genome.stanford.edu>
References: <BD3CE404-0344-40D3-85C7-E8F768B84A6F@genome.stanford.edu>
	<F923B9AD-841F-4E77-960C-DB036B095B48@classdump.org>
	<B898C08B-C282-471F-8C67-403BE5794407@genome.stanford.edu>
Message-ID: <029DE1FC-E412-47B1-85D8-205B10FE48E2@classdump.org>

Hi Don!

On Jul 11, 2007, at 1:54 AM, Don Maier wrote:

> /* A quote-bracketed sequence of non-quote characters, though  
> permitting embedded
> * escaped quotes in the forma of '\"'.  The content is the  
> character string
> * between the quotes, which may contain leading and trailing  
> spaces, tabs,
> * carriage returns, or newlines.
> */
> /*
> QUOTED_CONTENT
> 	: Q (options {greedy=false;} : (~(Q|'\\'Q)))* Q
> 	;

Did you actually mean to write:

QUOTED_CONTENT
	: Q (options {greedy=false;} : (~Q|'\\'Q) )* Q
	;

The inverted set ~(Q|'\\'Q) confuses the hell out the ANTLR's parser.  
It expects the
alternative Q|'\\'Q to end after the '\\' but sees another Q. That's  
illegal syntax and
thus it's failing. Of course the error message *is* terribly cryptic  
at the moment...
EOA means end-of-alternative.

Anyway, I guess what you really wanted is the 'inverted set of Q OR a  
sequence of '\\' and Q'.

> ------------------------------
>
> Is it possible that this somehow affects the tree parser, but not  
> the basic parser?

No, that's just ANTLR's error message misleading you. The AST in the  
error just points to
ANTLR's internal treeparser (of the grammar) throwing up. Nothing you  
did with trees.


HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From aliaazimi at yahoo.com  Tue Jul 10 18:07:37 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 18:07:37 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) rewrite rule question
Message-ID: <655511.81976.qm@web58114.mail.re3.yahoo.com>

Hi,
   
  Yes. It would be fantastic if I could make the debugger in my ANTLRWorks work. I have tried but still can not use the debugger. I remember when I used to try to use the debugger; my ANTLRWorks would produce the following error message:
   
  Connection Error:
  Cannot launch the debugger.
  Time-out waiting to connect to the remote parser.
   
  But when I try to debug my grammar now:
   
  First: the following error message appears:
   
  Error:
  Compiler failed with result code 1.
   
  [01:44:10] \tmp\antlrworks\FinalProjectSimParser.java:23961: illegal start of expression
  [01:44:10]                     return548=return();
  [01:44:10]                               ^
  [01:44:10] \tmp\antlrworks\FinalProjectSimParser.java:23961: illegal start of expression
  [01:44:10]                     return548=return();
  [01:44:10]                                      ^
  [01:44:10] \tmp\antlrworks\FinalProjectSimParser.java:24003: <identifier> expected
  [01:44:10]     public final return_return return() throws RecognitionException {
  [01:44:10]                               ^
  [01:44:10] \tmp\antlrworks\FinalProjectSimParser.java:24003: <identifier> expected
  [01:44:10]     public final return_return return() throws RecognitionException {
  [01:44:10]                                                                    ^
  [01:44:11] 4 errors
   
   
  Second: when I try the debug again, the input text GUI appears. When I give some input, then the following error messages comes up:
   
  Connection Error:
  Cannot launch the debugger.
  Time-out waiting to connect to the remote parser.
   
  This has confused me so much. Any idea what is going on?
   
  Thank you so much in advance.
   
  Best wishes,
   
  Al
   
   

 	      
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/102ed0cf/attachment-0001.html 

From rschulz at sonic.net  Tue Jul 10 18:26:43 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 10 Jul 2007 18:26:43 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <655511.81976.qm@web58114.mail.re3.yahoo.com>
References: <655511.81976.qm@web58114.mail.re3.yahoo.com>
Message-ID: <200707101826.43214.rschulz@sonic.net>

On Tuesday 10 July 2007 18:07, ali azimi wrote:
> Hi,
>
>   Yes. It would be fantastic if I could make the debugger in my
> ANTLRWorks work. I have tried but still can not use the debugger. I
> remember when I used to try to use the debugger; my ANTLRWorks would
> produce the following error message:
>
>   Connection Error:
>   Cannot launch the debugger.
>   Time-out waiting to connect to the remote parser.

I've found that the best way to use the ANTLRWorks debugger is remotely. 
The reason is that this frees you from all the classpath and JVM 
compatibility issues of direct debugging. This may be a consequence of 
my situation, having a parser that is intimately tied to a large 
software system with several of its own packages and many external 
(JAR, typically) dependencies.

So all you need to do to make this work is generate your parser using 
ANTLR's "-debug" option. Then launch your test jig, passing it whatever 
arguments it requires, if any, to run a test. It will pause (or appear 
to hang). It's waiting for a connection from the debugger. Now switch 
to ANTLWorks and select the "Debug Remote..." command from the "Debug" 
menu. The default host ("localhost") and port (49153) will work.

Now you can single step, look at the stack of rule invocations, see the 
parse tree or AST (if any) and generally turn your parser / grammar 
inside out.


Have at it!


Randall Schulz

From ted.villalba at gmail.com  Tue Jul 10 18:31:58 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 10 Jul 2007 18:31:58 -0700
Subject: [antlr-interest] Fundamental tree parsing question
In-Reply-To: <69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
	<f70p57$rjs$1@sea.gmane.org>
	<69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>
Message-ID: <69fb4b090707101831t2ef23d89s1f932a5271f1213b@mail.gmail.com>

Hi,

I thought I would reuse this thread since it seems a similar issue, or
misunderstanding on my part...
 When I add a rewrite specification to my grammar rule it suddenly fails
with a .RewriteEmptyStreamException.
 The full grammar is below, but here is what I think it boils down to - I'm
not sure how to represent zero or more instances in the rewrite of an
operator when it is the root node .
For example, the following grammar is parsed successfully and ANTLRWorks
builds a flat tree.
value   : terms ((WS)+ operator^ (WS)+ value)*

But when I try to add the following rewrite specification, I get the
exception:
value : terms ((WS)+ operator (WS)+ value)* -> ^(operator ^(TERMS terms)
^(VALUE value)*)

((((((
I created that rewrite because I thought I had read where if the operator (
or other) node is null, it won't err out, it will simply not add a node.
  I may be misguided here. It's how I interpreted the code snippet at the
bottom of this wiki on AST:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=754
it says:

/** Add t as a child to this node.  If t is null, do nothing.  If t
 *  is nil, add all children of t to this' children.
 */

void addChild(Tree t);

))))))


At the end of parsing:
PY=(hey hey what AND can I do)

I get:
Exception in thread "main"
org.antlr.runtime.tree.RewriteEmptyStreamException: rule operator
    at org.antlr.runtime.tree.RewriteRuleElementStream._next(Unknown Source)
    at org.antlr.runtime.tree.RewriteRuleSubtreeStream.nextNode(Unknown
Source)
    at WQLParser.value(WQLParser.java:1195)
    at WQLParser.value(WQLParser.java:1162)
    at WQLParser.field(WQLParser.java:724)
    at WQLParser.query(WQLParser.java:253)
    at WQLParser.start(WQLParser.java:127)
    at __Test__.main(__Test__.java:14)

I've tried a bunch of combinations of that rewrite spec, but I can't get it
to work with any of them.
Once again thanks for the help.

Here is the full grammar:

grammar TQL;

options{
    output=AST;
    ASTLabelType=CommonTree;
}

tokens{ TAG; VALUE; TERMS;} //imaginary token types

@header{
import java.util.HashMap;
}

@members {

HashMap fieldMap = new HashMap();

}

start   : ( query  {System.out.println("AST:\n"+$query.tree.toStringTree());}
)+
         ;


query   : field ((WS!)+ BOOL_OP^ (WS!)+ query)*
           | LPAREN! query RPAREN! ((WS!)* BOOL_OP^ (WS!)* query)*
           ;

field     : tag '=' LPAREN (WS)* value (WS)* RPAREN -> ^('=' tag value)
           | tag '=' terms+ -> ^('=' tag terms)
           | qid
           ;

value   : terms ((WS)+ operator (WS)+ value)* -> ^(operator ^(TERMS terms)
^(VALUE value)*)
           | LPAREN! value RPAREN! ((WS)+ operator^ (WS!)+ value)*
           ;

tag    : WCHAR -> ^(TAG WCHAR)
         ;

terms    : WCHAR (WS WCHAR)*  -> WCHAR+
            | QUOTE WCHAR (WS! WCHAR)* QUOTE
            ;


qid     : '#'!DIGIT
        ;

operator: BOOL_OP|WOK_OP;
BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
WOK_OP    : 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
DIGIT   : ('0'..'9');
WS      : (' '|'\t'|'\r'|'\n')+ ;
LPAREN    : '(' ;
RPAREN    : ')' ;
QUOTE    : '"';
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;



-Ted



On 7/10/07, Ted Villalba <ted.villalba at gmail.com> wrote:
>
> I was on 1.0.11b. Having upgraded to the latest version it works.
> Thanks for your time Benjamin.
> Very much appreciated!
>
> Ted
>
> On 7/10/07, Benjamin Niemann <pink at odahoda.de> wrote:
> >
> > Ted Villalba wrote:
> >
> > > Here is the grammar attached below, with your most recent suggestion.
> > I
> > > can walk it without issue, with input like :
> > > query=(city AND mountain dwellers)
> > >
> > > until I try to add the use of the imaginary tokens, for example, in
> > the
> > > 'field' rule below:
> > > The grammar:
> > > [...]
> >
> > Mmm... I can't reproduce the problem. I can step through the input and
> > get
> > the output:
> >
> > AST:
> > (= (TAG (TAG query)) (VALUE (AND (TERMS city)     (TERMS mountain
> > dwellers))))
> >
> > Probably not what you finally want (redundant TAG and some WS not
> > omitted),
> > but at least it does not crash...
> >
> > I used ANTLRWorks 1.0.2 and "Java(TM) 2 Runtime Environment, Standard
> > Edition (build 1.5.0_12-b04)" on Debian GNU/Linux. What's your setup?
> >
> > --
> > Benjamin Niemann
> > Email: pink at odahoda dot de
> > WWW: http://pink.odahoda.de/
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/41cff760/attachment.html 

From matthew.j.diehl at intel.com  Tue Jul 10 18:34:52 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 10 Jul 2007 18:34:52 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <200707101826.43214.rschulz@sonic.net>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2023DA64E@orsmsx417.amr.corp.intel.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Randall R Schulz
> Sent: Tuesday, July 10, 2007 6:27 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] (newbie problem) rewrite rule question
> 
> On Tuesday 10 July 2007 18:07, ali azimi wrote:
> > Hi,
> >
> >   Yes. It would be fantastic if I could make the debugger in my
> > ANTLRWorks work. I have tried but still can not use the debugger. I
> > remember when I used to try to use the debugger; my ANTLRWorks would
> > produce the following error message:
> >
> >   Connection Error:
> >   Cannot launch the debugger.
> >   Time-out waiting to connect to the remote parser.
> 
> I've found that the best way to use the ANTLRWorks debugger is
remotely.
> The reason is that this frees you from all the classpath and JVM
> compatibility issues of direct debugging. This may be a consequence of
> my situation, having a parser that is intimately tied to a large
> software system with several of its own packages and many external
> (JAR, typically) dependencies.

If that doesn't work...the problem I've run into in the past is that if
it cannot compile the grammar (ANTLR or ANTLRWorks), and has certain
errors, ANTLRWorks will wait for the debugger to start...and since it
never finished compiling, it won't be able to start...and ANTLRWorks
times out.

> > Second: when I try the debug again, the input text GUI appears. When
I
> > give some input, then the following error messages comes up:
 
> > Connection Error:
> > Cannot launch the debugger.
> > Time-out waiting to connect to the remote parser.

ANTLRWorks has a flag that is set when it believes the file has been
compiled successfully with -debug set.  If nothing is changed in the
grammar after this is set (in your case, the first time you press
debug), then it skips compiling it again (a time-saving feature), and
just brings up the input text GUI.  It'll have the same effect as before
though, since it was never compiled correctly, it won't run...and will
time-out.

So you've just got to find out what's keeping it from compiling and fix
the errors (or the parts it doesn't like)

Matt

From parrt at cs.usfca.edu  Tue Jul 10 18:42:28 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 10 Jul 2007 18:42:28 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <655511.81976.qm@web58114.mail.re3.yahoo.com>
References: <655511.81976.qm@web58114.mail.re3.yahoo.com>
Message-ID: <324FD68D-E7BE-4F20-AB61-B36C8AF68147@cs.usfca.edu>


On Jul 10, 2007, at 6:07 PM, ali azimi wrote:
> [01:44:10] \tmp\antlrworks\FinalProjectSimParser.java:23961:  
> illegal start of expression
> [01:44:10]                     return548=return();

Hi. The java perspective will tell you that return is a bad name for  
a method/rule. ;)

Ter


From aliaazimi at yahoo.com  Tue Jul 10 18:52:03 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 18:52:03 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <324FD68D-E7BE-4F20-AB61-B36C8AF68147@cs.usfca.edu>
Message-ID: <416776.90859.qm@web58107.mail.re3.yahoo.com>

Hi,
   
  My parser has been produced by the antlr. The word "return" has also been produced by the grammar. I do not understand why it should complain about it. What should I change it to? it sounds complicated.
   
  Al

Terence Parr <parrt at cs.usfca.edu> wrote:
  
On Jul 10, 2007, at 6:07 PM, ali azimi wrote:
> [01:44:10] \tmp\antlrworks\FinalProjectSimParser.java:23961: 
> illegal start of expression
> [01:44:10] return548=return();

Hi. The java perspective will tell you that return is a bad name for 
a method/rule. ;)

Ter



 
---------------------------------
Sucker-punch spam with award-winning protection.
 Try the free Yahoo! Mail Beta.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/39357ac0/attachment.html 

From matthew.j.diehl at intel.com  Tue Jul 10 18:57:10 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 10 Jul 2007 18:57:10 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <416776.90859.qm@web58107.mail.re3.yahoo.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2023DA65D@orsmsx417.amr.corp.intel.com>

Wow, I've gotta figure out how to reply to your messges in plain text
and disable the html ...
 
'return' must be a reserved word for ANTLR.  While it did allow you to
create the parser for it...maybe it really shouldn't have.  So alls you
have to do is right-click on 'return' in ANTLRWorks and click rename.
Then change it to returnRule or returning or re_turn or
somethingCompletelyDifferentFromReturn.  I think that's what Terence was
telling you.
 
Matt 


________________________________

	From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
	Sent: Tuesday, July 10, 2007 6:52 PM
	To: antlr-interest at antlr.org
	Subject: Re: [antlr-interest] (newbie problem) rewrite rule
question
	
	
	Hi,
	 
	My parser has been produced by the antlr. The word "return" has
also been produced by the grammar. I do not understand why it should
complain about it. What should I change it to? it sounds complicated.
	 
	Al
	

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/8bc71da2/attachment-0001.html 

From iank at bearcave.com  Tue Jul 10 18:59:31 2007
From: iank at bearcave.com (Ian Kaplan)
Date: Tue, 10 Jul 2007 18:59:31 -0700
Subject: [antlr-interest] about the book
In-Reply-To: <00c801c7c2f0$31d523e0$243331d2@vulcain>
References: <00c801c7c2f0$31d523e0$243331d2@vulcain>
Message-ID: <7f8924df0707101859m1256aa46j36a0dd4169c93659@mail.gmail.com>

  I've used ANTLR for two graph query language projects at Lawrence
Livermore National
Lab.  I've used ANTLR for other projects before this, including for a Java
compiler front
end.

  I absolutely agree with Lloyd.  I just bought the book and I don't care
whether it's useful
or not.  It does happen to be useful, but if it were not I'd still buy it
just to support Terence
and ANTLR.  The fact that I'll never have to use YACC again puts me deeply
in Terence's
debt.

  So many thanks, Terence.  And rock on!

  Ian
  www.bearcave.com

On 7/10/07, Lloyd Dupont <ld at galador.net> wrote:
>
>  I saw there was a controversy about the price / usefulness / etc...
>
> I have nothing special about that, except it make me aware that: there was
> a book!
>
> Taking it as both:
> - a nice and affordable way to support this excellent (free) tool I love
> to use (very) occasionnaly
> - perhaps a better way to graps some concept which eluded me so far
>
> I decided to buy it.
>
>
> I'm reading the PDF so far (the dead trees are on their way).
>
>
> I just wanted to say that, unlike some comment I previously read, I found
> the book very helpful.
> Right now I'm reading the chapter on trees. A topic which I was just
> barely able to make work/hack before and understanding is now slowly dawning
> on me.
>
> Of course I have to made an intellectual effort to get the concepts (as it
> would be the same for any math/physics/algorithm book). But nowhere before I
> had such clear and helpful help.
>
>
> So far (from only 20 pages of reading), I will say kudos for the ANTLR
> book!!!
> (And ANTLR Works as well, of course, with which I could experiment the
> gramatical structure and quickly and easily double check if I got the
> concept right)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/5fa7156a/attachment.html 

From rschulz at sonic.net  Tue Jul 10 19:01:33 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 10 Jul 2007 19:01:33 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <416776.90859.qm@web58107.mail.re3.yahoo.com>
References: <416776.90859.qm@web58107.mail.re3.yahoo.com>
Message-ID: <200707101901.33488.rschulz@sonic.net>

On Tuesday 10 July 2007 18:52, ali azimi wrote:
> Hi,
>
>   My parser has been produced by the antlr. The word "return" has
> also been produced by the grammar. I do not understand why it should
> complain about it. What should I change it to? it sounds complicated.

Perhaps ANTLR does not modify Java keywords such as "return" and hence
syntax error chaos ensues?

I did a quick check by adding this production to a working grammar of
mine:

return
    :   'return'
    ;

ANTLR does not complain when I apply it to the grammar with this
addition. However, when Ant runs javac on the result produced by ANTLR,
this results:

    [javac] Compiling 3 source files to /dar/tau/obj
    [javac] /dar/tau/src/tau/cl/CLIFParser.java:3235: <identifier> expected
    [javac]     public final return_return return() throws RecognitionException {
    [javac]                               ^
    [javac] /dar/tau/src/tau/cl/CLIFParser.java:3235: <identifier> expected
    [javac]     public final return_return return() throws RecognitionException {
    [javac]                                                                    ^
    [javac] 2 errors



>   Al

From aliaazimi at yahoo.com  Tue Jul 10 19:17:50 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 19:17:50 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) rewrite rule question
Message-ID: <234776.44671.qm@web58111.mail.re3.yahoo.com>

 
   
  Hi,
   
  Yes, that is true. Thank you guys. I have changed the rules ?return?. Now when I click on debug button, the same error messages are not produced anymore. But there is still the same connection error as following:
   
  Connection Error:
  Cannot launch the debugger.
  Time-out waiting to connect to the remote parser.
   
  Al

       
---------------------------------
Yahoo! oneSearch: Finally,  mobile search that gives answers, not web links. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/6a76799a/attachment.html 

From rschulz at sonic.net  Tue Jul 10 19:36:28 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 10 Jul 2007 19:36:28 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <67954.37712.qm@web58111.mail.re3.yahoo.com>
References: <67954.37712.qm@web58111.mail.re3.yahoo.com>
Message-ID: <200707101936.28594.rschulz@sonic.net>

On Tuesday 10 July 2007 19:01, you wrote:
> Hi,
>
>   I am so sorry. But I have used ANTLRWorks from the beginning as I
> had some problems with classpaths. So did not use the antlr directly.
> In ANTLRWorks, I have entered the "localhost" and port 49153 and
> clicked ok(in remote option). However it does not connect. It
> produces the same error. Could you give me some advice as to how
> remedy the problem using antlworks?

I'm really not sure what the problem might be, since I've never 
experienced this symptom, myself.

In my (limited) experience, all that is required is that you give 
the "-debug" option to ANTLR when you build your parser from your 
grammer. Then, when you invoke that parser, it will wait for a 
connection from the debugger on the usual port (I don't know, offhand, 
how to alter the default, 49153).

There is one thing: While the parser seems to have an unlimited timeout 
(which is to say, I've never encountered a timeout), ANTLRWorks most 
certainly _does_ have a timeout (configurable via the "Debug" tab of 
the preferences dialog?if I recall, the default is 10 seconds), so if 
you issue the "Debug remote..." command and wait longer than its 
timeout before launching the parser, it will give up and alert you that 
it failed to connect.


>   Very much appreciated
>
>   Al


Randall Schulz

From aliaazimi at yahoo.com  Tue Jul 10 19:38:49 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 19:38:49 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) rewrite rule question
Message-ID: <737052.60021.qm@web58101.mail.re3.yahoo.com>

Hi,
  I have typed the command. It says:
  'java' is not recognized as an internal or external command, operable program or batch file. 
   
  I also found the following on internet:
  At the command prompt type java -version. If this command fails or returns a value less than 1.4 you will need to install a version which includes a Java VM. 
   
  So do you think the problem is with the version of java im running? which version I should install?
   
  Thanks,
   
  Al

       
---------------------------------
Ready for the edge of your seat? Check out tonight's top picks on Yahoo! TV. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/a743bf67/attachment.html 

From rschulz at sonic.net  Tue Jul 10 19:48:33 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 10 Jul 2007 19:48:33 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <737052.60021.qm@web58101.mail.re3.yahoo.com>
References: <737052.60021.qm@web58101.mail.re3.yahoo.com>
Message-ID: <200707101948.33555.rschulz@sonic.net>

On Tuesday 10 July 2007 19:38, ali azimi wrote:
> Hi,
>   I have typed the command. It says:
>   'java' is not recognized as an internal or external command,
> operable program or batch file.

This, of course, stinks of Windows...

Presumably you have not configured your execution path to include your 
Java SDK. You'll have to do that, or issue a full path-name every time 
you launch java, javac or any other command from the JDK. Furthermore, 
you may need to set the JAVA_HOME variable so other commands and 
scripts (known in that realm as "batch files"?ugh!) can find the Java / 
JDK commands.


> ...
>
>   So do you think the problem is with the version of java im running?
> which version I should install?

It's unlikely there's a problem with the version you've installed, even 
if it's not the latest. Java 1.4 is not exactly new. Unless you last 
installed and / or updated your Java many years ago, you probably have 
a sufficiently recent version.


>   Thanks,
>
>   Al



Randall Schulz

From aliaazimi at yahoo.com  Tue Jul 10 19:51:14 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 19:51:14 -0700 (PDT)
Subject: [antlr-interest] (newbie problem) rewrite rule question
Message-ID: <637396.37856.qm@web58106.mail.re3.yahoo.com>

Hi,
   
  Thank you very much!
   
  It woooorks!!
   
  You have saved me from a huge disappointment.
   
  Thank you. I used to use  antlrworks-1.0.2 and did not work. but yours is ANTLRWorks_1.0.201 which works now fantastically.
   
  Very much appreciated.
   
  Al
   

       
---------------------------------
Need a vacation? Get great deals to amazing places on Yahoo! Travel. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/ea61f8c4/attachment.html 

From antlr-list at arizona-software.ch  Tue Jul 10 20:20:58 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 10 Jul 2007 20:20:58 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <637396.37856.qm@web58106.mail.re3.yahoo.com>
References: <637396.37856.qm@web58106.mail.re3.yahoo.com>
Message-ID: <ADB6C4E4-379C-4C2A-BB22-3029E11D0CA4@arizona-software.ch>

What have been the changes in this 201 version so I can update the  
upcoming 1.0.3?

Thanks :-)

Jean

On Jul 10, 2007, at 7:51 PM, ali azimi wrote:

> Hi,
>
> Thank you very much!
>
> It woooorks!!
>
> You have saved me from a huge disappointment.
>
> Thank you. I used to use  antlrworks-1.0.2 and did not work. but  
> yours is ANTLRWorks_1.0.201 which works now fantastically.
>
> Very much appreciated.
>
> Al
>
>
> Need a vacation? Get great deals to amazing places on Yahoo! Travel.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/a094085e/attachment-0001.html 

From matthew.j.diehl at intel.com  Tue Jul 10 20:24:03 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 10 Jul 2007 20:24:03 -0700
Subject: [antlr-interest] (newbie problem) rewrite rule question
In-Reply-To: <637396.37856.qm@web58106.mail.re3.yahoo.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2023DA67A@orsmsx417.amr.corp.intel.com>

Yeah, I'm not sure what the big difference is...It's the same thing Jean
gave me with some changes.  (someone else was having problems in the
past too, and my version worked where the other one didn't as well).  I
got lost trying to make my JAR and maybe used a different method for
creating the JAR than was done originally....
 
Matt


________________________________

	From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
	Sent: Tuesday, July 10, 2007 7:51 PM
	To: antlr-interest at antlr.org
	Subject: Re: [antlr-interest] (newbie problem) rewrite rule
question
	
	
	Hi,
	 
	Thank you very much!
	 
	It woooorks!!
	 
	You have saved me from a huge disappointment.
	 
	Thank you. I used to use  antlrworks-1.0.2 and did not work. but
yours is ANTLRWorks_1.0.201 which works now fantastically.
	 
	Very much appreciated.
	 
	Al
	 

	
________________________________

	Need a vacation? Get great deals to amazing places
<http://us.rd.yahoo.com/evt=48256/*http://travel.yahoo.com/;_ylc=X3oDMTF
hN2hucjlpBF9TAzk3NDA3NTg5BHBvcwM1BHNlYwNncm91cHMEc2xrA2VtYWlsLW5jbQ-->
on Yahoo! Travel. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/d64e9f8d/attachment.html 

From aliaazimi at yahoo.com  Tue Jul 10 20:43:04 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 10 Jul 2007 20:43:04 -0700 (PDT)
Subject: [antlr-interest] (newbie problem)java netBean 5.5 error messages
	for parser
Message-ID: <211990.66196.qm@web58108.mail.re3.yahoo.com>

 
  Hello,
   
  I have produced a parser and a lexer using my grammar. When I implement them with test class in java netBean 5.5, many error messages (100 errors) appear which are of two kinds as followings. However, when I investigate the packages org.antlr.runtime and org.antlr.runtime.tree, the classes TreeAdaptor and CommonTree exist in org.antlr.runtime.tree not in org.antlr.runtime. So why is the program producing the error messages?
   
  C:\MyProjects\Final Project\src\fialprojectsim\FinalProjectSimParser.java:52: reference to TreeAdaptor is ambiguous, both class org.antlr.runtime.tree.TreeAdaptor in org.antlr.runtime.tree and class org.antlr.runtime.TreeAdaptor in org.antlr.runtime match
   
  
  C:\MyProjects\Final Project\src\fialprojectsim\FinalProjectSimParser.java:69: reference to CommonTree is ambiguous, both class org.antlr.runtime.tree.CommonTree in org.antlr.runtime.tree and class org.antlr.runtime.CommonTree in org.antlr.runtime match
  
   
  The followings are the imports in the class parser.
   
  import org.antlr.runtime.*;
  import java.util.Stack;
  import java.util.List;
  import java.util.ArrayList;
  import java.util.Map;
  import java.util.HashMap;
  import org.antlr.runtime.tree.*;
   
  Thank you very much.
   
  Best wishes,
   
  Al

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070710/b17c72c5/attachment.html 

From rdclark at gmail.com  Tue Jul 10 22:23:51 2007
From: rdclark at gmail.com (Richard Clark)
Date: Tue, 10 Jul 2007 22:23:51 -0700
Subject: [antlr-interest] Trouble parsing a language where '{' has too
	many meanings
In-Reply-To: <468F6E01.5070607@belugalounge.net>
References: <468E943C.3050000@belugalounge.net>
	<d3992d900707061542j518ff7d4u916c64b19c7981b5@mail.gmail.com>
	<468F6E01.5070607@belugalounge.net>
Message-ID: <d3992d900707102223w7846070emf21771a1f7db7c92@mail.gmail.com>

Hi Felix,

Sorry for not answering sooner -- I'm slammed with work (preparing for
a conference presentation and upgrading a production system on tight
deadlines) and I wanted to go build a test case.

There are a few options:

1) Start testing, bit by bit, in ANTLRWorks to see where things go wrong.

2) Build up the grammar a bit at a time using test-driven development.
(There's an example of this on the wiki.)

3) I haven't tried using predicates in the lexer, but I wonder if you
could do this:

ML_COMMENT : (LT(-1) == RBRACKET && LT(-2) == EQUALS && LT(-3) ==
LONG_HELP) =>  '{' ( options {greedy=false;} : . )* '}.' ;

4) (experimental) The parser calls the lexer for a token at a time, so
you _might_ be able to pass a flag and use it in predicates in the
lexer. This feels extremely risky to me (e.g. parser lookaheads might
switch the flag at inopportune times.)

5) What if you had a rule like:
LONG_HELP : 'LongHelp' '=' '{' ( options {greedy=false;} : . )* '}.' ;
and then post-processed the token's text to grab everything inside the
brackets? In a sense, you're making the lexer do the parser's job,


I've always looked for ways to make lexer rules unambiguous based on
the left hand side, so you're in unknown territory for me (using
right-hand tokens for disambiguation.) Hopefully, one of these
suggestions will point you toward an answer.

 ...Richard

From cummings at kjchome.homeip.net  Wed Jul 11 00:14:27 2007
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 11 Jul 2007 03:14:27 -0400
Subject: [antlr-interest] Only 1 TreeParser per grammar?
Message-ID: <46948353.90705@kjchome.homeip.net>

I'm in the middle of a big project.  What I've discovered is that I'd
like to walk the AST tree twice.  The first time, I'll perform some
transformations on it.  The second time, I'll produce my output from it.

I'm using ANTLR 2.7.7, and I just found out that I cannot put more than
1 TreeWalker into the .g file (I'd like to have 2!).  ANTLR complains.
How is this accomplished?  Do I have to create a 2nd .g file which
imports all of the token definitions from the first one's headers and
only has a TreeWalker in it?

-- 
Kevin J. Cummings
kjchome at rcn.com
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From pink at odahoda.de  Wed Jul 11 01:30:46 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed, 11 Jul 2007 10:30:46 +0200
Subject: [antlr-interest] Fundamental tree parsing question
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
	<f70p57$rjs$1@sea.gmane.org>
	<69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>
	<69fb4b090707101831t2ef23d89s1f932a5271f1213b@mail.gmail.com>
Message-ID: <f724fn$pmj$1@sea.gmane.org>

Ted Villalba wrote:

> I thought I would reuse this thread since it seems a similar issue, or
> misunderstanding on my part...
>  When I add a rewrite specification to my grammar rule it suddenly fails
> with a .RewriteEmptyStreamException.
>  The full grammar is below, but here is what I think it boils down to -
>  I'm
> not sure how to represent zero or more instances in the rewrite of an
> operator when it is the root node .
> For example, the following grammar is parsed successfully and ANTLRWorks
> builds a flat tree.
> value   : terms ((WS)+ operator^ (WS)+ value)*
> 
> But when I try to add the following rewrite specification, I get the
> exception:
> value : terms ((WS)+ operator (WS)+ value)* -> ^(operator ^(TERMS terms)
> ^(VALUE value)*)

The correct way to translate these AST operators to rewrite rules should be:

value:
   (terms -> terms)
   (
     (WS)+ operator (WS)+ v=value
     -> ^(operator $value $v)
   )*
   ;

The first $value refers to the current tree as it has been built so far.
Upon each iteration of the loop a tree is built using the current tree as
the first child and $v as the second. The result becomes the first child in
the next iteration and so on...

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From pink at odahoda.de  Wed Jul 11 01:34:10 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed, 11 Jul 2007 10:34:10 +0200
Subject: [antlr-interest] Fundamental tree parsing question
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
	<f70p57$rjs$1@sea.gmane.org>
	<69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>
	<69fb4b090707101831t2ef23d89s1f932a5271f1213b@mail.gmail.com>
	<f724fn$pmj$1@sea.gmane.org>
Message-ID: <f724m2$puu$1@sea.gmane.org>

Benjamin Niemann wrote:

> Ted Villalba wrote:
> 
>> I thought I would reuse this thread since it seems a similar issue, or
>> misunderstanding on my part...
>>  When I add a rewrite specification to my grammar rule it suddenly fails
>> with a .RewriteEmptyStreamException.
>>  The full grammar is below, but here is what I think it boils down to -
>>  I'm
>> not sure how to represent zero or more instances in the rewrite of an
>> operator when it is the root node .
>> For example, the following grammar is parsed successfully and ANTLRWorks
>> builds a flat tree.
>> value   : terms ((WS)+ operator^ (WS)+ value)*
>> 
>> But when I try to add the following rewrite specification, I get the
>> exception:
>> value : terms ((WS)+ operator (WS)+ value)* -> ^(operator ^(TERMS terms)
>> ^(VALUE value)*)
> 
> The correct way to translate these AST operators to rewrite rules should
> be:
> 
> value:
>    (terms -> terms)
>    (
>      (WS)+ operator (WS)+ v=value
>      -> ^(operator $value $v)
>    )*
>    ;
> 
> The first $value refers to the current tree as it has been built so far.
> Upon each iteration of the loop a tree is built using the current tree as
> the first child and $v as the second. The result becomes the first child
> in the next iteration and so on...

And then add your imaginary nodes:

value:
   (terms -> ^(TERMS terms))
   (
     (WS)+ operator (WS)+ v=value
     -> ^(operator $value ^(VALUE $v))
   )*
   ;

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From myak at hqdev.net  Wed Jul 11 01:45:37 2007
From: myak at hqdev.net (Marcin Jakubowski)
Date: Wed, 11 Jul 2007 10:45:37 +0200
Subject: [antlr-interest] MySQL grammar
Message-ID: <92af7e310707110145i2f8a57a8nb70faa70a8f8ea62@mail.gmail.com>

Hello,

I'm quite new to ANTLR, just looking into it, not sure what it is (and
is not) capable of yet but looks like a very well developed tools. It
lacks some marketing though, I only accidentally found it on Google.

Has anyone, by any chance, written a grammar file for MySQL (5.x
preferably)? I have seen some for PL/SQL on ANTLR website so maybe
someone has one for MySQL and would like to share it.
I'm obviously not good enough to try and develop my own, by looking at
the file sizes of other grammar files, it looks like I'm never going
to be so a grammar file would really save my life.

-- 
Marcin Jakubowski
jid: kadat at hqdev.net

From liviu.u at gmail.com  Wed Jul 11 01:55:13 2007
From: liviu.u at gmail.com (Liviu U)
Date: Wed, 11 Jul 2007 11:55:13 +0300
Subject: [antlr-interest] NoViableAltException
Message-ID: <c522653d0707110155h5ef01475r97c5257d4e4a9935@mail.gmail.com>

Hi all,

I want to check if the parser was successfull or not.
In my case I overrode GetErrorMessage and reportError, but
NoViableAltException is not passed to this method and is hidden by the
parser methods.
Althought nothing is parsed i can't "catch" the exception.

Any clues?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/68afcab4/attachment.html 

From vbar at comp.cz  Wed Jul 11 02:24:42 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Wed, 11 Jul 2007 11:24:42 +0200
Subject: [antlr-interest] NoViableAltException
In-Reply-To: <c522653d0707110155h5ef01475r97c5257d4e4a9935@mail.gmail.com>
References: <c522653d0707110155h5ef01475r97c5257d4e4a9935@mail.gmail.com>
Message-ID: <4694A1DA.6000602@comp.cz>

Liviu U wrote:
 > I want to check if the parser was successfull or not.
 > In my case I overrode GetErrorMessage and reportError, but
 > NoViableAltException is not passed to this method and is hidden by the
 > parser methods.
 > Althought nothing is parsed i can't "catch" the exception.
 >
 > Any clues?
What about overriding @rulecatch? I have it empty, so that the first 
ANTL exception terminates parsing.

	Bye
		Vasek


From ld at galador.net  Wed Jul 11 05:03:47 2007
From: ld at galador.net (Lloyd Dupont)
Date: Wed, 11 Jul 2007 22:03:47 +1000
Subject: [antlr-interest] warning: The following token definitions are
	unreachable: PLUS
Message-ID: <008401c7c3b3$8a2d10c0$3cf331d2@vulcain>

it all comes down to the fact I put this in the tokens declaration:

tokens
{
 UNARY_PLUS='+';
}

this made
PLUS: '+' ;
unreachable.

I'm a bit puzzled with this imaganiry tokens.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/9f965801/attachment.html 

From open.zone at virgin.net  Wed Jul 11 05:07:32 2007
From: open.zone at virgin.net (Micheal J)
Date: Wed, 11 Jul 2007 13:07:32 +0100
Subject: [antlr-interest] warning: The following token definitions are
	unreachable: PLUS
In-Reply-To: <008401c7c3b3$8a2d10c0$3cf331d2@vulcain>
Message-ID: <000301c7c3b4$10c34230$c704a8c0@hercules>

Tokens defined in "tokens{...}" block take precedence.
 
To fix, use:
 
tokens
{
    UNARY_PLUS;
}
 
Then assign UNARY_PLUS as appropriate in your parser (i.e. as an AST token
type - your lexer only ever returns PLUS tokens). See sample grammars like
KCSParse (for v2.7+) or perhaps Java (I haven't look at this in a while) to
see how they handle this.
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 11 July 2007 13:04
To: antlr-interest at antlr.org
Subject: [antlr-interest] warning: The following token definitions
areunreachable: PLUS


it all comes down to the fact I put this in the tokens declaration:
 
tokens
{
 UNARY_PLUS='+';
}
 
this made
PLUS: '+' ;
unreachable.
 
I'm a bit puzzled with this imaganiry tokens.
 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/48679e43/attachment.html 

From ld at galador.net  Wed Jul 11 05:15:15 2007
From: ld at galador.net (Lloyd Dupont)
Date: Wed, 11 Jul 2007 22:15:15 +1000
Subject: [antlr-interest] warning: The following token definitions
	areunreachable: PLUS
References: <000301c7c3b4$10c34230$c704a8c0@hercules>
Message-ID: <00af01c7c3b5$2775b1b0$3cf331d2@vulcain>

Messagemmhh.. obviously I have to read the explanation about this tokens section.
mmhh.. the book is so BIG, and I'm so keen to finish quickly!!
  ----- Original Message ----- 
  From: Micheal J 
  To: antlr-interest at antlr.org 
  Sent: Wednesday, July 11, 2007 10:07 PM
  Subject: Re: [antlr-interest] warning: The following token definitions areunreachable: PLUS


  Tokens defined in "tokens{...}" block take precedence.

  To fix, use:

  tokens
  {
      UNARY_PLUS;
  }

  Then assign UNARY_PLUS as appropriate in your parser (i.e. as an AST token type - your lexer only ever returns PLUS tokens). See sample grammars like KCSParse (for v2.7+) or perhaps Java (I haven't look at this in a while) to see how they handle this.

  Micheal
  -----------------------
  The best way to contact me is via the list/forum. My time is very limited. 

    -----Original Message-----
    From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
    Sent: 11 July 2007 13:04
    To: antlr-interest at antlr.org
    Subject: [antlr-interest] warning: The following token definitions areunreachable: PLUS


    it all comes down to the fact I put this in the tokens declaration:

    tokens
    {
     UNARY_PLUS='+';
    }

    this made
    PLUS: '+' ;
    unreachable.

    I'm a bit puzzled with this imaganiry tokens.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/647f4d53/attachment.html 

From ssiegel at finjan.com  Wed Jul 11 06:49:53 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Wed, 11 Jul 2007 16:49:53 +0300
Subject: [antlr-interest] about the book
In-Reply-To: <7f8924df0707101859m1256aa46j36a0dd4169c93659@mail.gmail.com>
References: <00c801c7c2f0$31d523e0$243331d2@vulcain>
	<7f8924df0707101859m1256aa46j36a0dd4169c93659@mail.gmail.com>
Message-ID: <E344C433F006AB45A306D422F9C3EB4C0226D422@exmail1.finjan.com>

I actually have a different take on this. Ter made sure that the
concepts of the book worked. This essentially created a systematic
mechanism to make ANTLR3 stable for some class of tasks. This is enough
of a reason for me to be grateful for the book.

 

And yes, I bought the book for the same reason as you did. I am even
using antlr for the same reason that you are (I don't like debugging
yacc rules).

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ian Kaplan
Sent: Wednesday, July 11, 2007 5:00 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] about the book

 


  I've used ANTLR for two graph query language projects at Lawrence
Livermore National
Lab.  I've used ANTLR for other projects before this, including for a
Java compiler front
end.

  I absolutely agree with Lloyd.  I just bought the book and I don't
care whether it's useful 
or not.  It does happen to be useful, but if it were not I'd still buy
it just to support Terence
and ANTLR.  The fact that I'll never have to use YACC again puts me
deeply in Terence's 
debt.  

  So many thanks, Terence.  And rock on!

  Ian
  www.bearcave.com

On 7/10/07, Lloyd Dupont < ld at galador.net <mailto:ld at galador.net> >
wrote:

I saw there was a controversy about the price / usefulness / etc...

 

I have nothing special about that, except it make me aware that: there
was a book!

 

Taking it as both: 

- a nice and affordable way to support this excellent (free) tool I love
to use (very) occasionnaly

- perhaps a better way to graps some concept which eluded me so far

 

I decided to buy it.

 

 

I'm reading the PDF so far (the dead trees are on their way).

 

 

I just wanted to say that, unlike some comment I previously read, I
found the book very helpful.

Right now I'm reading the chapter on trees. A topic which I was just
barely able to make work/hack before and understanding is now slowly
dawning on me.

 

Of course I have to made an intellectual effort to get the concepts (as
it would be the same for any math/physics/algorithm book). But nowhere
before I had such clear and helpful help.

 

 

So far (from only 20 pages of reading), I will say kudos for the ANTLR
book!!!

(And ANTLR Works as well, of course, with which I could experiment the
gramatical structure and quickly and easily double check if I got the
concept right)

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/e6342653/attachment-0001.html 

From lgcraymer at yahoo.com  Wed Jul 11 07:03:30 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 11 Jul 2007 07:03:30 -0700 (PDT)
Subject: [antlr-interest] Only 1 TreeParser per grammar?
In-Reply-To: <46948353.90705@kjchome.homeip.net>
Message-ID: <872598.86786.qm@web55911.mail.re3.yahoo.com>

You need to have an exportVocab in your options
section for your original grammar, and an importVocab
in your new tree grammar.  The manual should have more
details.

--Loring

--- "Kevin J. Cummings" <cummings at kjchome.homeip.net>
wrote:

> I'm in the middle of a big project.  What I've
> discovered is that I'd
> like to walk the AST tree twice.  The first time,
> I'll perform some
> transformations on it.  The second time, I'll
> produce my output from it.
> 
> I'm using ANTLR 2.7.7, and I just found out that I
> cannot put more than
> 1 TreeWalker into the .g file (I'd like to have 2!).
>  ANTLR complains.
> How is this accomplished?  Do I have to create a 2nd
> .g file which
> imports all of the token definitions from the first
> one's headers and
> only has a TreeWalker in it?
> 
> -- 
> Kevin J. Cummings
> kjchome at rcn.com
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://counter.li.org)
> 



      ____________________________________________________________________________________
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us. http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 


From ted.villalba at gmail.com  Wed Jul 11 08:55:35 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 11 Jul 2007 08:55:35 -0700
Subject: [antlr-interest] Fundamental tree parsing question
In-Reply-To: <f724m2$puu$1@sea.gmane.org>
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
	<f70p57$rjs$1@sea.gmane.org>
	<69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>
	<69fb4b090707101831t2ef23d89s1f932a5271f1213b@mail.gmail.com>
	<f724fn$pmj$1@sea.gmane.org> <f724m2$puu$1@sea.gmane.org>
Message-ID: <69fb4b090707110855nbd7d082s19019f454a22fd9f@mail.gmail.com>

Wow. Thanks Benjamin. That gave me a lot of new insight into the rewrite
rules.
It builds a nice parse tree, but fails with a NullPointerException when
trying to generate the AST.
Although I've been avoiding it, maybe it's time for me to start stepping
through the java code. Would this be your approach to resolving this, or how
would one go about debugging this particular issue?
The exception:
08:37:45] java.lang.NullPointerException
    at org.antlr.works.debugger.tree.DBASTModel$ASTNode.becomeParent(Unknown
Source)
    at org.antlr.works.debugger.tree.DBASTModel.becomeRoot(Unknown Source)
    at org.antlr.works.debugger.Debugger.playerBecomeRoot(Unknown Source)
    at org.antlr.works.debugger.tivo.DBPlayer.playBecomeRoot(Unknown Source)
    at org.antlr.works.debugger.tivo.DBPlayer.playEvent(Unknown Source)
    at org.antlr.works.debugger.tivo.DBPlayer.playEvents(Unknown Source)
    at org.antlr.works.debugger.Debugger.playEvents(Unknown Source)
    at org.antlr.works.debugger.tivo.DBRecorder.playEvents(Unknown Source)
    at org.antlr.works.debugger.tivo.DBRecorder$PlayEventRunnable.run(Unknown
Source)
    at java.awt.event.InvocationEvent.dispatch(Unknown Source)
    at java.awt.EventQueue.dispatchEvent(Unknown Source)
    at java.awt.EventDispatchThread.pumpOneEventForHierarchy(Unknown Source)
    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
    at java.awt.EventDispatchThread.run(Unknown Source)


Thanks a millionX for the assistance.

Ted

On 7/11/07, Benjamin Niemann <pink at odahoda.de> wrote:
>
> Benjamin Niemann wrote:
>
> > Ted Villalba wrote:
> >
> >> I thought I would reuse this thread since it seems a similar issue, or
> >> misunderstanding on my part...
> >>  When I add a rewrite specification to my grammar rule it suddenly
> fails
> >> with a .RewriteEmptyStreamException.
> >>  The full grammar is below, but here is what I think it boils down to -
> >>  I'm
> >> not sure how to represent zero or more instances in the rewrite of an
> >> operator when it is the root node .
> >> For example, the following grammar is parsed successfully and
> ANTLRWorks
> >> builds a flat tree.
> >> value   : terms ((WS)+ operator^ (WS)+ value)*
> >>
> >> But when I try to add the following rewrite specification, I get the
> >> exception:
> >> value : terms ((WS)+ operator (WS)+ value)* -> ^(operator ^(TERMS
> terms)
> >> ^(VALUE value)*)
> >
> > The correct way to translate these AST operators to rewrite rules should
> > be:
> >
> > value:
> >    (terms -> terms)
> >    (
> >      (WS)+ operator (WS)+ v=value
> >      -> ^(operator $value $v)
> >    )*
> >    ;
> >
> > The first $value refers to the current tree as it has been built so far.
> > Upon each iteration of the loop a tree is built using the current tree
> as
> > the first child and $v as the second. The result becomes the first child
> > in the next iteration and so on...
>
> And then add your imaginary nodes:
>
> value:
>    (terms -> ^(TERMS terms))
>    (
>      (WS)+ operator (WS)+ v=value
>      -> ^(operator $value ^(VALUE $v))
>    )*
>    ;
>
> --
> Benjamin Niemann
> Email: pink at odahoda dot de
> WWW: http://pink.odahoda.de/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/91ab7c1c/attachment.html 

From pink at odahoda.de  Wed Jul 11 10:05:09 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed, 11 Jul 2007 19:05:09 +0200
Subject: [antlr-interest] Fundamental tree parsing question
References: <69fb4b090707101103p3aa851e0g9f29d9351ce24647@mail.gmail.com>
	<f70k54$99a$1@sea.gmane.org>
	<69fb4b090707101157o4212984bo354350c031d58a65@mail.gmail.com>
	<f70lqp$es7$1@sea.gmane.org>
	<69fb4b090707101245q76d936a7id97a38eeb1718628@mail.gmail.com>
	<f70p57$rjs$1@sea.gmane.org>
	<69fb4b090707101325tb6c5ed2me7e87bb078623754@mail.gmail.com>
	<69fb4b090707101831t2ef23d89s1f932a5271f1213b@mail.gmail.com>
	<f724fn$pmj$1@sea.gmane.org> <f724m2$puu$1@sea.gmane.org>
	<69fb4b090707110855nbd7d082s19019f454a22fd9f@mail.gmail.com>
Message-ID: <f732k5$7ec$1@sea.gmane.org>

Ted Villalba wrote:

> Wow. Thanks Benjamin. That gave me a lot of new insight into the rewrite
> rules.
> It builds a nice parse tree, but fails with a NullPointerException when
> trying to generate the AST.
> Although I've been avoiding it, maybe it's time for me to start stepping
> through the java code. Would this be your approach to resolving this, or
> how would one go about debugging this particular issue?
> The exception:
> 08:37:45] java.lang.NullPointerException
>     at
>     org.antlr.works.debugger.tree.DBASTModel$ASTNode.becomeParent(Unknown
> Source)
> [...]

That exception happends in ANTLRWorks, so it is probably not be an issue of
the generated parser.
If the code runs fine outside of ANTLRWorks, then it look pretty much like a
bug in ANTLRWorks. Or perhaps something is wrong with the debug template
used to generate the code, and that's confuses ANTLRWorks enough to crash
it.
Debugging that probably requires some knowledge of the internals of
ANTLRWorks - which I don't have.
So my approach to resolve this: pass it on to Jean ;)

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From parrt at cs.usfca.edu  Wed Jul 11 11:50:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 11:50:00 -0700
Subject: [antlr-interest] added antlr cheat sheet
Message-ID: <96386373-937F-47BA-B85D-36F25FCBEB86@cs.usfca.edu>

http://www.antlr.org/wiki/display/ANTLR3/ANTLR+Cheat+Sheet

From ted.villalba at gmail.com  Wed Jul 11 15:44:57 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 11 Jul 2007 15:44:57 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
Message-ID: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>

Hi,

I'm trying to write the tree grammar that will recognize the output from the
following rewrite rule:

value   : (terms-> ^(TERMS terms)) ((WS)+ operator (WS)+ v=value ->
^(operator $value ^(VALUE $v)))*

I can't find any examples of rewrite rules that are similar, where the
resulting tree may or may not have the operator, and subsequent values.
Having had assistance to this point, I thought I could carry the torch but
am floundering.
Can someone suggest what the resulting tree grammar should look like?

Thanks in advance.

Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/2227d1ad/attachment.html 

From parrt at cs.usfca.edu  Wed Jul 11 16:00:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 16:00:21 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
Message-ID: <5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>


On Jul 11, 2007, at 3:44 PM, Ted Villalba wrote:

> Hi,
>
> I'm trying to write the tree grammar that will recognize the output  
> from the following rewrite rule:
>
> value   : (terms-> ^(TERMS terms)) ((WS)+ operator (WS)+ v=value ->  
> ^(operator $value ^(VALUE $v)))*

Can you draw the empty, one term, then two term case for me?

The tree seems a bit weird to me.  I think i can simplify the grammar  
for me if you show me your intentions.

Ter


From ted.villalba at gmail.com  Wed Jul 11 16:16:44 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 11 Jul 2007 16:16:44 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
	<5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
Message-ID: <69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>

Hi,

Thanks for the response. When you say draw the empty, one term and then two
term, I hope this is what you meant. Let me know if not.

What I have is a query grammar where you can say:
query=(all the kings men)

or add an operator like
query=(all the kings men AND all the kings horses)

and add another operator:
query=(all the kings men AND all the kings horses OR a nail)


Here is the full grammar fwiw:

grammar WQL;

options{
    output=AST;
    ASTLabelType=CommonTree;
}

tokens{ TAG; VALUE; TERMS;} //imaginary token types

@header{
import java.util.HashMap;
}

@members {

HashMap fieldMap = new HashMap();

}





start   : ( query  {System.out.println("AST:\n"+$query.tree.toStringTree());}
)+
        ;


query   : field ((WS!)+ BOOL_OP^ (WS!)+ query)*
    | LPAREN! query RPAREN! ((WS!)* BOOL_OP^ (WS!)* query)*
    ;

field     : tag '=' LPAREN (WS)* value (WS)* RPAREN -> ^('=' tag value)
    | tag '=' terms+ -> ^('=' tag terms)
        | qid
        ;

value   : (terms-> ^(TERMS terms)) ((WS)+ operator (WS)+ v=value ->
^(operator $value ^(VALUE $v)))*
    | LPAREN! value RPAREN! ((WS)+ operator^ (WS!)+ value)*
    ;

tag    : WCHAR -> ^(WCHAR)
    ;

terms    : WCHAR (WS WCHAR)*  -> WCHAR+
    | QUOTE WCHAR (WS! WCHAR)* QUOTE
    ;


qid     : '#'!DIGIT
        ;

operator: BOOL_OP|WOK_OP;
BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
WOK_OP    : 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
DIGIT   : ('0'..'9');
WS      : (' '|'\t'|'\r'|'\n')+ ;
LPAREN    : '(' ;
RPAREN    : ')' ;
QUOTE    : '"';
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

Thanks,
Ted




On 7/11/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Jul 11, 2007, at 3:44 PM, Ted Villalba wrote:
>
> > Hi,
> >
> > I'm trying to write the tree grammar that will recognize the output
> > from the following rewrite rule:
> >
> > value   : (terms-> ^(TERMS terms)) ((WS)+ operator (WS)+ v=value ->
> > ^(operator $value ^(VALUE $v)))*
>
> Can you draw the empty, one term, then two term case for me?
>
> The tree seems a bit weird to me.  I think i can simplify the grammar
> for me if you show me your intentions.
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/5460897b/attachment.html 

From easjolly at ix.netcom.com  Wed Jul 11 16:20:26 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Wed, 11 Jul 2007 17:20:26 -0600
Subject: [antlr-interest] Size Limits?
Message-ID: <E1I8lTF-0003x1-T8@elasmtp-scoter.atl.sa.earthlink.net>

I decided to test how fast I could anticipate my new ANTLR v3 grammar
running on real problems without factoring in output time.  

I created an internally generated String with over a million characters and
it ran so fast ( on a several years old 3 GHz Dell running Windows XP) that
I could barely time it!  However, when I tried to increase the size of the
String I (not surprisingly) eventually got a java.lang.OutOfMemoryError.

This experience led me to wonder whether there is recommended or standard
ANTLR strategy for handling large files.  

Susan 




From parrt at cs.usfca.edu  Wed Jul 11 16:28:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 16:28:06 -0700
Subject: [antlr-interest] Size Limits?
In-Reply-To: <E1I8lTF-0003x1-T8@elasmtp-scoter.atl.sa.earthlink.net>
References: <E1I8lTF-0003x1-T8@elasmtp-scoter.atl.sa.earthlink.net>
Message-ID: <FCE25810-D556-4ABE-9BEE-20EC25AD7CBE@cs.usfca.edu>


On Jul 11, 2007, at 4:20 PM, Susan Jolly wrote:

> I decided to test how fast I could anticipate my new ANTLR v3 grammar
> running on real problems without factoring in output time.
>
> I created an internally generated String with over a million  
> characters and
> it ran so fast ( on a several years old 3 GHz Dell running Windows  
> XP) that
> I could barely time it!  However, when I tried to increase the size  
> of the
> String I (not surprisingly) eventually got a  
> java.lang.OutOfMemoryError.

Nice to hear!  How big did you make the java memory?  Use -Xmx300M or  
something to set max heap to 300 meg.

Ter

From rschulz at sonic.net  Wed Jul 11 16:28:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 11 Jul 2007 16:28:23 -0700
Subject: [antlr-interest] Size Limits?
In-Reply-To: <E1I8lTF-0003x1-T8@elasmtp-scoter.atl.sa.earthlink.net>
References: <E1I8lTF-0003x1-T8@elasmtp-scoter.atl.sa.earthlink.net>
Message-ID: <200707111628.23282.rschulz@sonic.net>

On Wednesday 11 July 2007 16:20, Susan Jolly wrote:
> I decided to test how fast I could anticipate my new ANTLR v3 grammar
> running on real problems without factoring in output time.
>
> I created an internally generated String with over a million
> characters and it ran so fast ( on a several years old 3 GHz Dell
> running Windows XP) that I could barely time it!  However, when I
> tried to increase the size of the String I (not surprisingly)
> eventually got a java.lang.OutOfMemoryError.

"Eventually," you are guaranteed to get run out of memory. Unless you've 
got a very special computer, indeed.

Have you compared the size of your input string (keeping in mind it uses 
two byes for each character it contains(*)) to the upper limit on VM 
heap size?

The only thing that's intersting is the ratio between the two, of 
course.


(*) Surrogate pairs notwithstanding.


> ...
>
> Susan


Randall Schulz

From parrt at cs.usfca.edu  Wed Jul 11 16:29:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 16:29:04 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
	<5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
	<69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>
Message-ID: <CDD1943C-2ABA-4954-AED2-7763001E86D6@cs.usfca.edu>


On Jul 11, 2007, at 4:16 PM, Ted Villalba wrote:

> Hi,
>
> Thanks for the response. When you say draw the empty, one term and  
> then two term, I hope this is what you meant. Let me know if not.

THanks for the input, but what tree structure do you intend to build  
(not the grammar part); i'd like to make it more efficient if i can.   
Then i can build the tree grammar.

Ter


From easjolly at ix.netcom.com  Wed Jul 11 17:27:08 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Wed, 11 Jul 2007 18:27:08 -0600
Subject: [antlr-interest] Size Limits?
Message-ID: <E1I8mVp-00061L-QT@elasmtp-junco.atl.sa.earthlink.net>

Hey Ter, thanks for telling me about the Java -Xmx300M option.  That got me
to bigger than I'd ever need. (I'm working up to translating books to
braille.)  I'm amazed, impressed, and happy at how fast this new ANTLR is.
Thanks!

Susan 




From parrt at cs.usfca.edu  Wed Jul 11 18:35:15 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 18:35:15 -0700
Subject: [antlr-interest] Size Limits?
In-Reply-To: <E1I8mVp-00061L-QT@elasmtp-junco.atl.sa.earthlink.net>
References: <E1I8mVp-00061L-QT@elasmtp-junco.atl.sa.earthlink.net>
Message-ID: <DDB2FD19-8741-49A7-A27C-D62C522093E5@cs.usfca.edu>


On Jul 11, 2007, at 5:27 PM, Susan Jolly wrote:

> Hey Ter, thanks for telling me about the Java -Xmx300M option.   
> That got me
> to bigger than I'd ever need. (I'm working up to translating books to
> braille.)

cool!

> I'm amazed, impressed, and happy at how fast this new ANTLR is.

Me too...your reported speed is making me nervous that somehow the  
compiler optimized out the call to the parser as it had no output ;)

Ter


From parrt at cs.usfca.edu  Wed Jul 11 18:46:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 18:46:48 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <69fb4b090707111646n3b4157c1je142c2ef3c1c76de@mail.gmail.com>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
	<5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
	<69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>
	<CDD1943C-2ABA-4954-AED2-7763001E86D6@cs.usfca.edu>
	<69fb4b090707111646n3b4157c1je142c2ef3c1c76de@mail.gmail.com>
Message-ID: <CDA291F5-E708-4A1C-B529-051B521052FB@cs.usfca.edu>


On Jul 11, 2007, at 4:46 PM, Ted Villalba wrote:

> Ah, so what I want to build is an AST. Something like:
>
> 0 terms:
>
>         =
>        /
>     TAG
>       |
>      AU
>
> 1 term:
>
>         =
>      /       \
>   TAG   VALUE
>     |           |
>    AU     TERMS
>                 |
>           all the kings horses
>
> 2 term
>
>
>            =
>      /          OR
>   TAG    /         \
>     |    VALUE  VALUE
>    AU     |           |
>          TERMS  TERMS
>              |            |
>              |     all the kings men
>   all the kings horses
>
> Is this approaching the information you are looking for in order to  
> help me here?
>

Yep, though i'm not sure your trees are really what you want. ;)

You should tell the parser to ignore whitespace I think to avoid WS  
calls everywhere.  er...i guess not given your WCHAR definition.  Do  
you really mean to match all those char?  Hmm...i'd find a way to  
match this differently lexically, but...for now.

Ok, first rule: is probably to make rule x return trees rooted in X.   
So, terms should return TERMS on top.

terms    : WCHAR+ -> ^(TERMS WCHAR+)
     | QUOTE WCHAR+ QUOTE -> ^(TERMS WCHAR+) // strip QUOTEs
     ;

Same with value.  Here, easiest thing is to make a helper rule:

value : value_ -> ^(VALUE value_) ;

and rename value to value_:

value   : terms ( operator^  terms )*
     | LPAREN! value RPAREN! ( operator^ value)* // i'll ignore as i  
don't know what you want
     ;

Also don't call value recursively in first alt.  That will create the  
wrong associativity for OR...it will do associativity you find with  
exponents.  Now you can use simple ^ operator.  And we have world  
peace....

Does this help?

Ter


From easjolly at ix.netcom.com  Wed Jul 11 19:39:27 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Wed, 11 Jul 2007 20:39:27 -0600
Subject: [antlr-interest] Size Limits?
Message-ID: <E1I8oZq-0004fc-FK@elasmtp-scoter.atl.sa.earthlink.net>

I don't think anything was optimized out because I put a counter where the
relevant print statements would have been in the tree grammar and the
counter agreed with what I expected from my sample input.  Also it was the
right amount slower when I used more input. Plus I left in print statements
for cases that don't happen to occur with the sample input.

However you'll probably feel better if you do such a timing test yourself; I
still could have made some sort of mistake.  I never trust anyone else's
timings.

Susan



From vbar at comp.cz  Wed Jul 11 22:17:52 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 12 Jul 2007 07:17:52 +0200
Subject: [antlr-interest] How to create a case-insensitive parser using
	theC target?
In-Reply-To: <051466DAA0D608439E196797955018D76EB5@wavemachine.temporal-wave.com>
References: <620da58c0707101121r6bed96adj641eba1f730d29d5@mail.gmail.com>
	<051466DAA0D608439E196797955018D76EB5@wavemachine.temporal-wave.com>
Message-ID: <200707120717.53172.vbar@comp.cz>

On Tuesday 10 July 2007 21:28, Jim Idle wrote:
> I have added case insensitivity to the C input streams, but this is not
> part of the currently shipping library and I am still testing it so have
> not yet submitted it (probably today though, especially is someone wants
...
> The method call installs a version of LA() that always returns toupper()
> on the input char (which means that it does not alter the actual input
> stream, but will MATCH in upper case. You then specify all your keywords
> in upper case only.
Just a nitpick: for case-insensitive matching by conversion to a single case, 
lower case is AFAIK preferred, because not all Unicode characters have upper 
case (German sharp s is probably the most common example; I'm not sure 
whether all Unicode characters have lower case, but if there are 
counter-examples, they should at least be more exotic)...

	Bye
		Vasek

From mail.acc at freenet.de  Wed Jul 11 22:59:00 2007
From: mail.acc at freenet.de (mail.acc at freenet.de)
Date: Thu, 12 Jul 2007 07:59:00 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
Message-ID: <E1I8rhc-0001mQ-Oj@www20.emo.freenet-rz.de>

Hi,

I am trying to write a stand alone lexer
which can cope with arbitrary input without
reporting a "missmatched token"-error.

It should however recognize some combination
as Tokens.

This is my first approach:
--------------------------------------------
lexer grammar LexerJava;
KEYWORDA : 'int'|'float';
KEYWORDB : 'public'|'static'|'void';
COMMENT  : '/*' ( options {greedy=false;} : . )* '*/'
    	 | '//' ~('n'|'r')* 'r'? 'n'
	 ;
// fallback rule
ELSE	 :.;
--------------------------------------------

On an input like the following it reports
several errors:
--------------------------------------------
01: public class Test {
02:     private int varclassTmp = 3;
03:     [...]
04:     /* Comment */
05:     public static void main(String[] av) {
06:          float i=0;
07:          float[] sum; // comment
08:          int tmp;
09:          [...]
10:          float internationalization = 4.;
11:          /* int float */
12:     }
13: }
14: /* Comment */
--------------------------------------------
line 1:17 mismatched character ' ' expecting 'a'
line 5:24 mismatched character '(' expecting 't'
line 5:30 mismatched character 'g' expecting 't'

In some sense I am able to relate these errors,
because every time a KEYWORD seem to match
(Test->static; main->int; Strin->int) but I
can not figure out why rule ELSE doesen't match
in these cases.


In adition to these errors the KEYWORDA alternative
'int' matches in line 10 the first three chars of
internationalization. Which is not intended.

I thought I can cope with the latter problem in
augmenting the ELSE rule.
Intermezzo: In Lex/JFlex there is
something called the "maximal-munch" which
basically tells the lexer that the longest match
has superior priority, and if the match has the
same length the order is deciding - I know that
in ANTLR the order is also deciding, but read
nothing about other techniques yet.

Anyway, I tried to enhance rule ELSE with a star.
But even in greedy=false mode I always get an
Java exception
(java.lang.OutOfMemoryError: Java heap space).


I would be grateful if anyone could give me a hint
what I am doing wrong.

Best wishes from Germany
Andreas



"Jetzt Handykosten senken mit klarmobil - 14 Ct./Min.! Hier klicken"
http://produkte.shopping.freenet.de/handy_voip_isdn/klarmobil/index.html?pid=730025


From ljs_aaaa at yahoo.com  Wed Jul 11 23:03:43 2007
From: ljs_aaaa at yahoo.com (jinsong Li)
Date: Wed, 11 Jul 2007 23:03:43 -0700 (PDT)
Subject: [antlr-interest] beginner's question
Message-ID: <68127.4842.qm@web55001.mail.re4.yahoo.com>

Hi,
   I have a simple grammar like this:

prog :	statement+;
statement :	'int' ID '=' INT ';'
	|	'int' ID ';'
	;
ID	:
('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;
INT	:	'0'..'9'+;
WS  :   (' '|'\t'|'\n'|'\r')+ {Skip();} ;

I am expecting it matches the lines like
...
int x=10;
int m;
...

It does recognize these line,
but what wired is, if I put the input like this:
int x=10;
zint m;

I am expecting antlr give an error on "zint", but when
looking at the generated code, it simply ignore what
can be match and quit.

Is this by design or I am doing/expecting something
stupid?

Thanks for the help!








       
____________________________________________________________________________________
Choose the right car based on your needs.  Check out Yahoo! Autos new Car Finder tool.
http://autos.yahoo.com/carfinder/

From dirty at apple.com  Wed Jul 11 23:05:30 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Wed, 11 Jul 2007 23:05:30 -0700
Subject: [antlr-interest] Dealing with lists in a in tree grammar action
Message-ID: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>

I've reached the stage in my tree grammar that I want to start  
keeping information in parallel structures.  Ones that are more  
optimized for the work I need to do after the tree grammar walker has  
finished.

But I've reached a small impasse when I'm trying to handle lists in  
an action for a rule in my tree grammar.

Here is a small portion from my tree grammar.  An array can have one  
or more elements in it.  What I'd like to do in my action for  
"elements" is gather each of the "value" and add them to a list.

array
	:	elements
	;

elements
	:	value+
	;

value
	:	^( T_STR STRING )
	|	^( T_HEXSTREAM STREAM )
	|	^( T_SYMREF IDENTIFIER )
	|	^( T_NUM number_size )
	|	^( T_OBJ object )
	|	^( T_ARRAY array )
	|	T_TRUE
	|	T_FALSE
	|	T_NULL
	;

I had hoped that I could do the following (this is using the C  
runtime, so I'm using it's types):

elements returns[ pANTLR3_VECTOR List ]
	:	v += value+
		{
			$List = $v;
		}
	;

But I get the following error from ANTLR:

error(134): TWalker.g:58:4: rule '+=' list labels are not allowed w/o  
output option: v

And, eventually, I get an error with the C runtime:

TWalker.c:969: error: 'struct TWalker_Ctx_struct' has no member named  
'vectors'

But I'm not worried about that yet.

I've read the documentation about "+=" only being applicable in AST  
or template outputs.  And so I'm stuck.

Does anyone have any suggestions on how to handle this?

Cameron Esfahani
dirty at apple.com

Linus is dumb.




-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070711/5c9e6ed1/attachment.html 

From ljs_aaaa at yahoo.com  Wed Jul 11 23:07:52 2007
From: ljs_aaaa at yahoo.com (jinsong Li)
Date: Wed, 11 Jul 2007 23:07:52 -0700 (PDT)
Subject: [antlr-interest] beginner's question
Message-ID: <287187.40239.qm@web55014.mail.re4.yahoo.com>

Hi,
   I have a simple grammar like this:

prog :	statement+;
statement :	'int' ID '=' INT ';'
	|	'int' ID ';'
	;
ID	:
('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;
INT	:	'0'..'9'+;
WS  :   (' '|'\t'|'\n'|'\r')+ {Skip();} ;

I am expecting it matches the lines like
...
int x=10;
int m;
...

It does recognize these line,
but what wired is, if I put the input like this:
int x=10;
zint m;

I am expecting antlr give an error on "zint", but when
looking at the generated code, it simply ignore what
can be match and quit.

Is this by design or I am doing/expecting something
stupid?

Thanks for the help!








       
____________________________________________________________________________________
Yahoo! oneSearch: Finally, mobile search 
that gives answers, not web links. 
http://mobile.yahoo.com/mobileweb/onesearch?refer=1ONXIC

From parrt at cs.usfca.edu  Wed Jul 11 23:13:47 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2007 23:13:47 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <E1I8rhc-0001mQ-Oj@www20.emo.freenet-rz.de>
References: <E1I8rhc-0001mQ-Oj@www20.emo.freenet-rz.de>
Message-ID: <5F30ED93-A07A-438F-AEC7-65AC89916F63@cs.usfca.edu>

hi. See filter=true mode for lexers.  see fuzzy example in examples- 
v3 :)
Ter

From ted.villalba at gmail.com  Thu Jul 12 00:49:43 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Thu, 12 Jul 2007 00:49:43 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <CDA291F5-E708-4A1C-B529-051B521052FB@cs.usfca.edu>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
	<5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
	<69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>
	<CDD1943C-2ABA-4954-AED2-7763001E86D6@cs.usfca.edu>
	<69fb4b090707111646n3b4157c1je142c2ef3c1c76de@mail.gmail.com>
	<CDA291F5-E708-4A1C-B529-051B521052FB@cs.usfca.edu>
Message-ID: <69fb4b090707120049n1e7c8d77y2e1040bf3b536059@mail.gmail.com>

Awesome. Thanks for that.
I had overlooked the whitespace rule, not realizing the implications.
Ignoring whitespace cleaned up my grammar and made stepping through the
debugger easier. Also, the aptly named helper rule certainly makes sense to
me now.

Thanks again for your time here.

Ted

On 7/11/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>
> On Jul 11, 2007, at 4:46 PM, Ted Villalba wrote:
>
> > Ah, so what I want to build is an AST. Something like:
> >
> > 0 terms:
> >
> >         =
> >        /
> >     TAG
> >       |
> >      AU
> >
> > 1 term:
> >
> >         =
> >      /       \
> >   TAG   VALUE
> >     |           |
> >    AU     TERMS
> >                 |
> >           all the kings horses
> >
> > 2 term
> >
> >
> >            =
> >      /          OR
> >   TAG    /         \
> >     |    VALUE  VALUE
> >    AU     |           |
> >          TERMS  TERMS
> >              |            |
> >              |     all the kings men
> >   all the kings horses
> >
> > Is this approaching the information you are looking for in order to
> > help me here?
> >
>
> Yep, though i'm not sure your trees are really what you want. ;)
>
> You should tell the parser to ignore whitespace I think to avoid WS
> calls everywhere.  er...i guess not given your WCHAR definition.  Do
> you really mean to match all those char?  Hmm...i'd find a way to
> match this differently lexically, but...for now.
>
> Ok, first rule: is probably to make rule x return trees rooted in X.
> So, terms should return TERMS on top.
>
> terms    : WCHAR+ -> ^(TERMS WCHAR+)
>      | QUOTE WCHAR+ QUOTE -> ^(TERMS WCHAR+) // strip QUOTEs
>      ;
>
> Same with value.  Here, easiest thing is to make a helper rule:
>
> value : value_ -> ^(VALUE value_) ;
>
> and rename value to value_:
>
> value   : terms ( operator^  terms )*
>      | LPAREN! value RPAREN! ( operator^ value)* // i'll ignore as i
> don't know what you want
>      ;
>
> Also don't call value recursively in first alt.  That will create the
> wrong associativity for OR...it will do associativity you find with
> exponents.  Now you can use simple ^ operator.  And we have world
> peace....
>
> Does this help?
>
> Ter
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/bd59d680/attachment-0001.html 

From win at wincent.com  Thu Jul 12 00:54:59 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 12 Jul 2007 09:54:59 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <E1I8rhc-0001mQ-Oj@www20.emo.freenet-rz.de>
References: <E1I8rhc-0001mQ-Oj@www20.emo.freenet-rz.de>
Message-ID: <07BD711C-B103-403A-B3BD-B7D46F68DECC@wincent.com>

El 12/7/2007, a las 7:59, mail.acc at freenet.de escribi?:

> I am trying to write a stand alone lexer
> which can cope with arbitrary input without
> reporting a "missmatched token"-error.
>
> It should however recognize some combination
> as Tokens.
>
> This is my first approach:
> --------------------------------------------
> lexer grammar LexerJava;
> KEYWORDA : 'int'|'float';
> KEYWORDB : 'public'|'static'|'void';
> COMMENT  : '/*' ( options {greedy=false;} : . )* '*/'
>     	 | '//' ~('n'|'r')* 'r'? 'n'
> 	 ;
> // fallback rule
> ELSE	 :.;
> --------------------------------------------
>
> On an input like the following it reports
> several errors:
> --------------------------------------------
> 01: public class Test {
> 02:     private int varclassTmp = 3;
> 03:     [...]
> 04:     /* Comment */
> 05:     public static void main(String[] av) {
> 06:          float i=0;
> 07:          float[] sum; // comment
> 08:          int tmp;
> 09:          [...]
> 10:          float internationalization = 4.;
> 11:          /* int float */
> 12:     }
> 13: }
> 14: /* Comment */
> --------------------------------------------
> line 1:17 mismatched character ' ' expecting 'a'
> line 5:24 mismatched character '(' expecting 't'
> line 5:30 mismatched character 'g' expecting 't'
>
> In some sense I am able to relate these errors,
> because every time a KEYWORD seem to match
> (Test->static; main->int; Strin->int) but I
> can not figure out why rule ELSE doesen't match
> in these cases.

As Ter has already stated, you need a filtering lexer for this. It's  
purpose is to try the lexer rules in order, using backtracking to  
catch failures, and if no rule matches then the input is advanced one  
character (discarded) and ANTLR starts trying all over again. In your  
case your ELSE rule means that all characters will match and nothing  
will be discarded.

This won't work in a non-filtering lexer because ANTLR is based on  
prediction. This may seem counter-intuitive at first but you just  
have to accept that as a basic premise ANTLR is all about speed and  
that means no backtracking in the event of an error (unless you  
explicitly turn it on); ANTLR tries to predict which rule will match  
as quickly as possible and once a predication is made race ahead and  
match as fast as possible.

For example, the first error occurs when ANTLR sees the "st" of  
"Test"; at that point ANTLR predicts that rule KEYWORDB should match  
and that the next character should be the "a" of "static", and of  
course it isn't. But note that this doesn't occur earlier on in the  
line where ANTLR sees the first "s" of "class". That is, seeing "s"  
is not enough to make ANTLR predict "static"; it will only predict  
that if it sees "st".

Without a filtering lexer you'd have to non-ambiguously specify how  
to recognise all the constructs in the language so that everything  
could be tokenized, but that isn't very efficient because you're only  
interested in a subset of the possible syntax and all the other  
tokens would just be thrown away.

To fully understand how all this works you should take a simple  
grammar like the one you post and look very, very carefully at the  
generated code. You will see how the generated methods are divided  
into two sections: a prediction part ("if" statements that use  
lookeahead) and a recognition part (code for matching according to  
the prediction inside a "switch" statement). I recommend reading  
Ter's ANTLR book; combine that with writing real grammars (and  
hitting problems like this one) and you will eventually "get" ANTLR.

Cheers,
Wincent


From mail.acc at freenet.de  Thu Jul 12 04:31:46 2007
From: mail.acc at freenet.de (mail.acc at freenet.de)
Date: Thu, 12 Jul 2007 13:31:46 +0200
Subject: [antlr-interest]  Understanding priorities in lexing (newbie)
Message-ID: <E1I8wte-0007Tm-JV@www16.emo.freenet-rz.de>

Hi,
thanks for your quick reply and the detailed information about ANTLR.

> hi. See filter=true mode for lexers.  see fuzzy example in examples- 
> v3 :)
> Ter

> El 12/7/2007, a las 7:59, mail.acc at freenet.de escribi?:
> As Ter has already stated, you need a filtering lexer for this.

I didn't want to use filter=true because I need the arbitary input in-between 
the matching token to process. And as far as I understand, in filter=true mode 
unmatched tokens are going to be discarded (and I need them in the 
TokenStream).



> prediction. This may seem counter-intuitive at first but you just  
> have to accept that as a basic premise ANTLR is all about speed and  
> that means no backtracking in the event of an error (unless you  
> explicitly turn it on); 

Does backtracking works in the lexer also?



> To fully understand how all this works you should take a simple  
> grammar like the one you post and look very, very carefully at the  
> generated code. 

Thanks again. I will try to do that.

Beste wishes from Germany
Andreas









From ens06jpk at cs.umu.se  Thu Jul 12 04:49:33 2007
From: ens06jpk at cs.umu.se (ens06jpk)
Date: Thu, 12 Jul 2007 13:49:33 +0200
Subject: [antlr-interest] Tree walker simple quastion
Message-ID: <4696154D.6080603@cs.umu.se>

Hi,
I want count IF statement in my JavaAST build from source.java file. How 
can I implement conditions for nodes in tree walkers?
I use a java.g grammar from ANTLR example files for creating an AST and 
java.tree.g from tree walking. However when I try to add my own function:
----
somecalc returns [int cnt]
{
    cnt=0;
}
    :    #("if" expression stat (stat)? ) {cnt = cnt+1;}
    ;
----
during compilation some errors appears. It says that found [package ...] 
where was searching for IF node. Does anyone know how to check all nodes 
in AST and count for instance IF statements ?
Thanks for any help

janusz

From win at wincent.com  Thu Jul 12 06:12:17 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Thu, 12 Jul 2007 15:12:17 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <E1I8wte-0007Tm-JV@www16.emo.freenet-rz.de>
References: <E1I8wte-0007Tm-JV@www16.emo.freenet-rz.de>
Message-ID: <95E21309-CF93-4DA6-9FC4-BD2AA990B434@wincent.com>

El 12/7/2007, a las 13:31, mail.acc at freenet.de escribi?:

>> hi. See filter=true mode for lexers.  see fuzzy example in examples-
>> v3 :)
>> Ter
>
>> El 12/7/2007, a las 7:59, mail.acc at freenet.de escribi?:
>> As Ter has already stated, you need a filtering lexer for this.
>
> I didn't want to use filter=true because I need the arbitary input  
> in-between
> the matching token to process. And as far as I understand, in  
> filter=true mode
> unmatched tokens are going to be discarded (and I need them in the
> TokenStream).

Normally unmatched input characters are discarded in filtering mode,  
but not so in your case because your ELSE rule is guaranteed to match  
all otherwise-unmatched chars.

>> prediction. This may seem counter-intuitive at first but you just
>> have to accept that as a basic premise ANTLR is all about speed and
>> that means no backtracking in the event of an error (unless you
>> explicitly turn it on);
>
> Does backtracking works in the lexer also?

I believe so seeing as all ANTLR recognizers (lexers, parsers and  
tree parsers) use similar or same underlying mechanisms. Lexing is  
probably the most computationally expensive phase and so you should  
try to keep backtracking to a minimum. Filtering lexers are a special  
case which wouldn't work at all if it weren't for backtracking.

But note that turning on filtering mode is not exactly the same as  
just turning on backtracking. Try generating a two lexers, one with  
and one without filtering turned on. If you look at the generated  
code for the filtering lexer you will see some differences, the most  
important of which is that the standard "next token" method/function  
is overridden with one which explicitly handles the backtracking  
behaviour (all rules are tried with backtracking turned on and if  
none succeeds then the current char is discarded and the input stream  
moves on). As always you can learn a lot about ANTLR from studying  
the generated code (and reading the book, and experimenting...)

Cheers,
Wincent


From ld at galador.net  Thu Jul 12 06:13:14 2007
From: ld at galador.net (Lloyd Dupont)
Date: Thu, 12 Jul 2007 23:13:14 +1000
Subject: [antlr-interest] Grammar puzzle....
Message-ID: <009601c7c486$68be4430$3cf331d2@vulcain>

I try to parse the following input:
===========
3 & 4 + a is c + 4 & 3
===========

with the following grammar:
===========
grammar TreeTest;

options {output=AST;}
tokens
{
 IS='is';
 XAMLNS;
}

expression: logical ;

logical : compare (LOR^ | LAND^ compare)* ;

compare : (additive -> additive)
  (
   ( op=(LT | GT) s=additive -> ^($op $compare $s) )
  | is='is' i=additive -> ^(IS[$is] $compare $i)
  )?
  ;

additive: multiple ((PLUS^ | MINUS^) multiple)* ;
 
multiple: atom ((MULT^ | DIV^) atom)* ;

atom :  identifier | INT;

identifier 
 : ( xaml=ID COLON )? id0=ID
  ( DOT id+=ID )*
  -> ^( ID[$id0] ^( XAMLNS[$xaml] ) ^( ID[$id0] $id0 $id+ )  )
 ;


ID : 'a'..'z' + ;
INT : '0'..'9' +;
PLUS :  '+';
MINUS : '-';
MULT :  '*';
DIV : '/';
LAND : '&';
LOR : '|';
LT : '<';
GT : '>';
DOT : '.';
COMMA : ',';
COLON : ':';
WS : (' ' |'\n' |'\r' ) {$channel=HIDDEN;} ;
===========

The parsing stop just before 'is', i.e. I can only parse "3 & 4 + a"
I can't understand why.

What seems even more mysterious to me is, if I simplify my 'identifier' rule to be like that:
===========
identifier: ID;
===========

I could parse all my input.

For the life of me I can't understand why the previous syntax for the 'identifier' rule  prevent 'is' to be parsed....

Any tip?!?!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/a93eff2f/attachment.html 

From antlr at jazillian.com  Thu Jul 12 06:59:39 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 12 Jul 2007 09:59:39 -0400
Subject: [antlr-interest] anyone have a antlrv3 java grammar that creates
	AST?
Message-ID: <469633CB.4060806@jazillian.com>

Hi,

Has anyone tried to build a ANTLRv3 java grammar that creates an AST yet?

I'm in the middle of creating one now, and I guess I should have asked 
earlier :(

Andy

From ld at galador.net  Thu Jul 12 06:59:57 2007
From: ld at galador.net (Lloyd Dupont)
Date: Thu, 12 Jul 2007 23:59:57 +1000
Subject: [antlr-interest] Grammar puzzle....
References: <009601c7c486$68be4430$3cf331d2@vulcain>
Message-ID: <00c501c7c48c$ef761fb0$3cf331d2@vulcain>

I made some progress on this problem:
apparently in this rule:
========
identifier: ( xaml=ID COLON )? id0=ID
  ( DOT id+=ID )*
  -> ^( ID[$id0] ^( XAMLNS[$xaml] ) ^( ID[$id0] $id0 /*$id+*/ )  )
 ;
========
the fact that "(xaml=ID COLON)?" is optional (?) but that I used it all the time in the tree generation *might be* the cause of the trouble.

I guess I could *solve* the problem with 
  -> ^( ID[$id0] ^( XAMLNS[$xaml] )?  ^( ID[$id0] $id0 /*$id+*/ )  )
instead of
  -> ^( ID[$id0] ^( XAMLNS[$xaml] ) ^( ID[$id0] $id0 /*$id+*/ )  )

but that's no good, for my generated tree to be easy to use I always want the 2nd member to be the XAMLNS node, even though mpty.
How could I rewrite my rule so that the tree always contains such a node, wether or not it has been found?


  ----- Original Message ----- 
  From: Lloyd Dupont 
  To: antlr-interest at antlr.org 
  Sent: Thursday, July 12, 2007 11:13 PM
  Subject: [antlr-interest] Grammar puzzle....


  I try to parse the following input:
  ===========
  3 & 4 + a is c + 4 & 3
  ===========

  with the following grammar:
  ===========
  grammar TreeTest;

  options {output=AST;}
  tokens
  {
   IS='is';
   XAMLNS;
  }

  expression: logical ;

  logical : compare (LOR^ | LAND^ compare)* ;

  compare : (additive -> additive)
    (
     ( op=(LT | GT) s=additive -> ^($op $compare $s) )
    | is='is' i=additive -> ^(IS[$is] $compare $i)
    )?
    ;

  additive: multiple ((PLUS^ | MINUS^) multiple)* ;
   
  multiple: atom ((MULT^ | DIV^) atom)* ;

  atom :  identifier | INT;

  identifier 
   : ( xaml=ID COLON )? id0=ID
    ( DOT id+=ID )*
    -> ^( ID[$id0] ^( XAMLNS[$xaml] ) ^( ID[$id0] $id0 $id+ )  )
   ;


  ID : 'a'..'z' + ;
  INT : '0'..'9' +;
  PLUS :  '+';
  MINUS : '-';
  MULT :  '*';
  DIV : '/';
  LAND : '&';
  LOR : '|';
  LT : '<';
  GT : '>';
  DOT : '.';
  COMMA : ',';
  COLON : ':';
  WS : (' ' |'\n' |'\r' ) {$channel=HIDDEN;} ;
  ===========

  The parsing stop just before 'is', i.e. I can only parse "3 & 4 + a"
  I can't understand why.

  What seems even more mysterious to me is, if I simplify my 'identifier' rule to be like that:
  ===========
  identifier: ID;
  ===========

  I could parse all my input.

  For the life of me I can't understand why the previous syntax for the 'identifier' rule  prevent 'is' to be parsed....

  Any tip?!?!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/6bd87f74/attachment-0001.html 

From Bob.Cowdery at smartlogic.com  Thu Jul 12 07:28:29 2007
From: Bob.Cowdery at smartlogic.com (Bob Cowdery)
Date: Thu, 12 Jul 2007 15:28:29 +0100
Subject: [antlr-interest] 'C' code generator and Unicode
Message-ID: <3A76756EED583B43A4AD704E29CCD079741231@mail.smartlogic.com>

Hi all,

This is a first post to the list. I am using Antlr 3.0 with the C runtime. I have managed to compile and run a simple grammar. My question however is around Unicode support. I have tried every lexer I can find but the only one that does what I expect so far is jFlex, but java is not an option. For the test I have a number of files saved in ASCII, UTF8, UTF16 and UTF32 which I am feeding through the lexer. The grammar is very simple.

grammar SimpleC;

options {	language = C;}

CAP		:	'\u0041'..'\u005a' ;
LWR		:	'\u0061'..'\u007a' ;
WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; };

BOTH		:	CAP | LWR ;
FULL		:	(CAP)(LWR)+ ;
ALLUPPER	:	CAP+ ;
ALLLOWER	:	LWR+ ;
MIXED		:	BOTH+ ;


atom	:	 FULL		{ printf( "FULL\n"); };
atom1	:	 ALLUPPER	{ printf( "ALLUPPER\n"); };
atom2	:	 ALLLOWER	{ printf( "ALLLOWER\n"); };
atom3	:	 MIXED	{ printf( "MIXED\n"); }; 

If I feed the ASCII file (or UTF8 with single character codes) through I get as expected.

>From input: This IS some TExt
FULL
ALLUPPER
ALLLOWER
MIXED

>From the UTF16 file I get:
(there are lots of these errors for every leading 00 in the UTF16 text.
data-utf16-1.txt(1) : lexer error 3 :
        1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL | ALLUPPER |
ER | MIXED ); at offset 35, near char(00) :

FULL
data-utf16-1.txt(1)  : error 2 : Unexpected token, at offset -1
    near [Index: 0 (Start: 0-Stop: 2) ='??T', type<4> Line: 1 LinePos:-1]
     : expected FULL ...
ALLUPPER
ALLLOWER
MIXED

Although strangely it still gives output mixed in with errors.

I won't clutter the post up with UTF32 as it gives the same but 3 times the number of errors on '00'.

It seems that the data is still being matched on bytes and not characters. I know I probably need to give the lexer a wide input stream but I can't figure how. The comments in the code suggest all input is treated as UTF32 and confusingly there is also a antlr3ucs2inputstream.c input stream file which suggests UCS2 support but I've no idea how to use it.

If anybody can provide some insight into how to make this work (UTF16 is my preferred format) it would be much appreciated.

Regards
Bob

From rschulz at sonic.net  Thu Jul 12 07:32:06 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 12 Jul 2007 07:32:06 -0700
Subject: [antlr-interest] Grammar puzzle....
In-Reply-To: <00c501c7c48c$ef761fb0$3cf331d2@vulcain>
References: <009601c7c486$68be4430$3cf331d2@vulcain>
	<00c501c7c48c$ef761fb0$3cf331d2@vulcain>
Message-ID: <200707120732.06493.rschulz@sonic.net>

On Thursday 12 July 2007 06:59, Lloyd Dupont wrote:
> I made some progress on this problem:
> apparently in this rule:
> ========
> identifier: ( xaml=ID COLON )? id0=ID
>   ( DOT id+=ID )*
>   -> ^( ID[$id0] ^( XAMLNS[$xaml] ) ^( ID[$id0] $id0 /*$id+*/ )  )
>  ;
> ========
> the fact that "(xaml=ID COLON)?" is optional (?) but that I used it
> all the time in the tree generation *might be* the cause of the
> trouble.
>
> I guess I could *solve* the problem with
>   -> ^( ID[$id0] ^( XAMLNS[$xaml] )?  ^( ID[$id0] $id0 /*$id+*/ )  )
> instead of
>   -> ^( ID[$id0] ^( XAMLNS[$xaml] ) ^( ID[$id0] $id0 /*$id+*/ )  )
>
> but that's no good, for my generated tree to be easy to use I always
> want the 2nd member to be the XAMLNS node, even though mpty. How
> could I rewrite my rule so that the tree always contains such a node,
> wether or not it has been found?

I'd probably write the production with alternatives, allowing you to 
rewrite it independently in the case where ID COLON is present and the 
case where it is absent. If you want the resulting AST fragment to have 
the same shape, put a dummy value in for the ID or whatever it gets 
from the XAMLNS array.

Are you working on Extensible Application Markup Language?


Randall Schulz

From rschulz at sonic.net  Thu Jul 12 07:55:35 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 12 Jul 2007 07:55:35 -0700
Subject: [antlr-interest] ANTLR & Scala?
Message-ID: <200707120755.35894.rschulz@sonic.net>

Hi,

By any chance does anyone here use ANTLR with Scala 
(<http://www.scala-lang.org/>) or know of someone or some project that 
does?

I did some looking and couldn't find anything, so I imagine that if it's 
happening, it's proprietary, but I thought I'd ask, just the same.

And if it hasn't been done, how much work is involved in retargeting 
ANTLR to a new target language? I doubt I could justify the effort (I'm 
not even sure it's the right approach for me, yet), but perhaps my 
intuitive sense of the magnitude of the task is way off.

It's also the case that I know very little about Scala as of yet, but 
some of its characteristics suggest it might be a good choice for some 
upcoming work I need to do.


Thanks.


Randall Schulz

From jimi at temporal-wave.com  Thu Jul 12 08:04:44 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Jul 2007 08:04:44 -0700
Subject: [antlr-interest] 'C' code generator and Unicode
In-Reply-To: <3A76756EED583B43A4AD704E29CCD079741231@mail.smartlogic.com>
References: <3A76756EED583B43A4AD704E29CCD079741231@mail.smartlogic.com>
Message-ID: <051466DAA0D608439E196797955018D76EC1@wavemachine.temporal-wave.com>

Bob,

UCS2 (which is UTF16 without surrogate support basically) works fine, but instead of using the default input stream you need to name the 16 bit UCS2 version:

antlr3NewUCS2StringInPlaceStream() - In memory string

I have just noticed that I have not provided the equivalent function for files, so for the moment you will need to read it yourself and pass in  the pointer to the data.

I have not provided UTF32 input streams, but this is just a matter of copying the code for UCS2 and changing the casts from {p}ANTLR3_UINT16 to {p}ANTLR3_UINT32.

Input streams for handling UTF-8 and UTF-16 with surrogates are a ways down the line from me typing fingers as there is a lot to do, but there is not a great deal of work here as the mark() an rewind() calls are set up to keep the absolute pointer rather than the character position for such streams.

Finally, not that the input stream is the only difference in the function, so a lexer/parser will work the same with any input stream at all because internally it uses UTF32. So, change the stream you create and otherwise use it exactly the same as your ASCII stream. 

Finally, finally, note that the ANTLR3_STRING 'classes' you get from the tokens and so on will retain the encoding of the input stream, but otherwise you again use exactly the same methods on them (subStr, append, etc). Tehre are methods for appending 8 bit character strings to any type of string, which a re mainly useful when you are programming and want to add a string like "DEBUG: XXXXXX" to a 16 bi output string.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bob Cowdery
> Sent: Thursday, July 12, 2007 7:28 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] 'C' code generator and Unicode
> 
> Hi all,
> 
> This is a first post to the list. I am using Antlr 3.0 with the C
> runtime. I have managed to compile and run a simple grammar. My
> question however is around Unicode support. I have tried every lexer I
> can find but the only one that does what I expect so far is jFlex, but
> java is not an option. For the test I have a number of files saved in
> ASCII, UTF8, UTF16 and UTF32 which I am feeding through the lexer. The
> grammar is very simple.
> 
> grammar SimpleC;
> 
> options {	language = C;}
> 
> CAP		:	'\u0041'..'\u005a' ;
> LWR		:	'\u0061'..'\u007a' ;
> WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel =
> HIDDEN; };
> 
> BOTH		:	CAP | LWR ;
> FULL		:	(CAP)(LWR)+ ;
> ALLUPPER	:	CAP+ ;
> ALLLOWER	:	LWR+ ;
> MIXED		:	BOTH+ ;
> 
> 
> atom	:	 FULL		{ printf( "FULL\n"); };
> atom1	:	 ALLUPPER	{ printf( "ALLUPPER\n"); };
> atom2	:	 ALLLOWER	{ printf( "ALLLOWER\n"); };
> atom3	:	 MIXED	{ printf( "MIXED\n"); };
> 
> If I feed the ASCII file (or UTF8 with single character codes) through
> I get as expected.
> 
> >From input: This IS some TExt
> FULL
> ALLUPPER
> ALLLOWER
> MIXED
> 
> >From the UTF16 file I get:
> (there are lots of these errors for every leading 00 in the UTF16 text.
> data-utf16-1.txt(1) : lexer error 3 :
>         1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL | ALLUPPER
> |
> ER | MIXED ); at offset 35, near char(00) :
> 
> FULL
> data-utf16-1.txt(1)  : error 2 : Unexpected token, at offset -1
>     near [Index: 0 (Start: 0-Stop: 2) ='??T', type<4> Line: 1 LinePos:-
> 1]
>      : expected FULL ...
> ALLUPPER
> ALLLOWER
> MIXED
> 
> Although strangely it still gives output mixed in with errors.
> 
> I won't clutter the post up with UTF32 as it gives the same but 3 times
> the number of errors on '00'.
> 
> It seems that the data is still being matched on bytes and not
> characters. I know I probably need to give the lexer a wide input
> stream but I can't figure how. The comments in the code suggest all
> input is treated as UTF32 and confusingly there is also a
> antlr3ucs2inputstream.c input stream file which suggests UCS2 support
> but I've no idea how to use it.
> 
> If anybody can provide some insight into how to make this work (UTF16
> is my preferred format) it would be much appreciated.
> 
> Regards
> Bob

From parrt at cs.usfca.edu  Thu Jul 12 08:43:30 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 08:43:30 -0700
Subject: [antlr-interest] anyone have a antlrv3 java grammar that
	creates AST?
In-Reply-To: <469633CB.4060806@jazillian.com>
References: <469633CB.4060806@jazillian.com>
Message-ID: <85B98E2E-D351-47A3-86A6-CDE2C7513005@cs.usfca.edu>


On Jul 12, 2007, at 6:59 AM, Andy Tripp wrote:

> Hi,
>
> Has anyone tried to build a ANTLRv3 java grammar that creates an  
> AST yet?
>
> I'm in the middle of creating one now, and I guess I should have  
> asked earlier :(

I'm am too. It's hard. ;)  Well, it's hard to build one that builds  
the exact right tree and does the actions I need for ANTLR itself.   
That is why I madethe detour to make the TreeWizard.  BTW, have you  
glanced at the wizard?  We're getting closure to making somethingyou  
like! :)

Ter


From john.ridgway at trincoll.edu  Thu Jul 12 08:59:46 2007
From: john.ridgway at trincoll.edu (John Ridgway)
Date: Thu, 12 Jul 2007 11:59:46 -0400
Subject: [antlr-interest] tree grammar and output=AST
Message-ID: <8B1DACBE-4508-4213-941A-3D4002259F7A@trincoll.edu>

Friends -
I would like to do an AST -> AST transformation using tree grammars  
in ANTLR 3.  Unfortunately it seems that "output=AST" and "tree  
grammar" are incompatible.  Is this a fundamental limitation and I'm  
just not understanding it, or could it be fixed easily?

The problems seem to be twofold:
1) There's a call to adaptor.create(...) which expects a Token and is  
being passed a CommonTree.
2) There's a use of retval.stop (or something like that).

Peace
- John


From parrt at cs.usfca.edu  Thu Jul 12 09:00:39 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 09:00:39 -0700
Subject: [antlr-interest] tree grammar and output=AST
In-Reply-To: <8B1DACBE-4508-4213-941A-3D4002259F7A@trincoll.edu>
References: <8B1DACBE-4508-4213-941A-3D4002259F7A@trincoll.edu>
Message-ID: <4E0F5ABB-A81F-4CF6-8544-650F7060C858@cs.usfca.edu>

Hi. It's a major item on my todo list.
Ter
On Jul 12, 2007, at 8:59 AM, John Ridgway wrote:

> Friends -
> I would like to do an AST -> AST transformation using tree grammars  
> in ANTLR 3.  Unfortunately it seems that "output=AST" and "tree  
> grammar" are incompatible.  Is this a fundamental limitation and  
> I'm just not understanding it, or could it be fixed easily?
>
> The problems seem to be twofold:
> 1) There's a call to adaptor.create(...) which expects a Token and  
> is being passed a CommonTree.
> 2) There's a use of retval.stop (or something like that).
>
> Peace
> - John
>


From daniel at lba.ca  Thu Jul 12 09:01:20 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Thu, 12 Jul 2007 12:01:20 -0400
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
Message-ID: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>

Hi,

I am also new to ANTLR, I have read the book, want to thank you and am quite excited. But this thread has me a little perplexed.

If I have a simple grammar:

grammar lex;

KEYWORD : 'a' 'b' 'c';
OTHER : 'a' | 'b' | 'c';
program : (  KEYWORD  |  OTHER  )*

and feed it  "abab" it chokes at the second 'a'. Now I think I understand what was said earlier and I have gone through the code and I can see why it chokes but I do not yet understand why this is proper behaviour. Coming from a LEX background, there should be no problem converting this into a DFA that works, its done all the time.

To illustrate, if I change my grammar to the following:

grammar lex;

kEYWORD : 'a' 'b' 'c';
oTHER : 'a' | 'b' | 'c';
program : (  kEYWORD |  oTHER  )*

and feed it "abab" it parses the input as I would expect, no problem, properly identifying a sequence of four oTHER tokens. Isn't that what I should get by default, it looks much more natural and expected. Using filter=true cannot be the right answer for general cases like this.

The lexer should e keeping track of the longest token it has matched todate and return that token if it fails to match another longer token. Here, it does not do that. If I further change my grammar to:

grammar lex;

KEYWORD : 'a' 'b';
OTHER : 'a' | 'b';
program : (  KEYWORD  |  OTHER  )*

and feed it "aa" it correctly splits it into two OTHER tokens. The only difference between the first grammar and this grammar is that the distance between the length of the last acceptable matched token and where further matches fail goes from 1 ("a" vs "ab") to 2 ("a" vs "abc" ) characters. But that should not make a difference, although I know why it does in your case.

Regard with confusion,

Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/de558f05/attachment-0001.html 

From Bob.Cowdery at smartlogic.com  Thu Jul 12 09:21:39 2007
From: Bob.Cowdery at smartlogic.com (Bob Cowdery)
Date: Thu, 12 Jul 2007 17:21:39 +0100
Subject: [antlr-interest] 'C' code generator and Unicode
Message-ID: <3A76756EED583B43A4AD704E29CCD079741232@mail.smartlogic.com>

Jim,

Thank you so much for the quick response. It's very nice to know when joining a new list that it's active.

I haven't digested all you said yet but I tried reading the file binary wise and passing in the UCS2 string. It looks a lot better but I guess I'm still doing something a little wrong. The output is this,

-memory-(1) : lexer error 3 :
        1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL | ALLUPPER | ALLLOW
ER | MIXED ); at offset 0, near char(0XFF) :
        ??T
FULL
ALLUPPER
ALLLOWER
MIXED

but I also get an assertion failure which I have to ignore twice to get the output. The assertion says
File: isctype.c Line: 56
Expression: (unsigned)(C+1) <= 256

My guess at the parser failure is that it dosen't like the BOM marker. Do you haddle the BOM or expect the order to be LE or BE?

Bob,

UCS2 (which is UTF16 without surrogate support basically) works fine, but instead of using the default input stream you need to name the 16 bit UCS2 version:

antlr3NewUCS2StringInPlaceStream() - In memory string

I have just noticed that I have not provided the equivalent function for files, so for the moment you will need to read it yourself and pass in  the pointer to the data.

I have not provided UTF32 input streams, but this is just a matter of copying the code for UCS2 and changing the casts from {p}ANTLR3_UINT16 to {p}ANTLR3_UINT32.

Input streams for handling UTF-8 and UTF-16 with surrogates are a ways down the line from me typing fingers as there is a lot to do, but there is not a great deal of work here as the mark() an rewind() calls are set up to keep the absolute pointer rather than the character position for such streams.

Finally, not that the input stream is the only difference in the function, so a lexer/parser will work the same with any input stream at all because internally it uses UTF32. So, change the stream you create and otherwise use it exactly the same as your ASCII stream. 

Finally, finally, note that the ANTLR3_STRING 'classes' you get from the tokens and so on will retain the encoding of the input stream, but otherwise you again use exactly the same methods on them (subStr, append, etc). Tehre are methods for appending 8 bit character strings to any type of string, which a re mainly useful when you are programming and want to add a string like "DEBUG: XXXXXX" to a 16 bi output string.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bob Cowdery
> Sent: Thursday, July 12, 2007 7:28 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] 'C' code generator and Unicode
> 
> Hi all,
> 
> This is a first post to the list. I am using Antlr 3.0 with the C
> runtime. I have managed to compile and run a simple grammar. My
> question however is around Unicode support. I have tried every lexer I
> can find but the only one that does what I expect so far is jFlex, but
> java is not an option. For the test I have a number of files saved in
> ASCII, UTF8, UTF16 and UTF32 which I am feeding through the lexer. The
> grammar is very simple.
> 
> grammar SimpleC;
> 
> options {	language = C;}
> 
> CAP		:	'\u0041'..'\u005a' ;
> LWR		:	'\u0061'..'\u007a' ;
> WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel =
> HIDDEN; };
> 
> BOTH		:	CAP | LWR ;
> FULL		:	(CAP)(LWR)+ ;
> ALLUPPER	:	CAP+ ;
> ALLLOWER	:	LWR+ ;
> MIXED		:	BOTH+ ;
> 
> 
> atom	:	 FULL		{ printf( "FULL\n"); };
> atom1	:	 ALLUPPER	{ printf( "ALLUPPER\n"); };
> atom2	:	 ALLLOWER	{ printf( "ALLLOWER\n"); };
> atom3	:	 MIXED	{ printf( "MIXED\n"); };
> 
> If I feed the ASCII file (or UTF8 with single character codes) through
> I get as expected.
> 
> >From input: This IS some TExt
> FULL
> ALLUPPER
> ALLLOWER
> MIXED
> 
> >From the UTF16 file I get:
> (there are lots of these errors for every leading 00 in the UTF16 text.
> data-utf16-1.txt(1) : lexer error 3 :
>         1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL | ALLUPPER
> |
> ER | MIXED ); at offset 35, near char(00) :
> 
> FULL
> data-utf16-1.txt(1)  : error 2 : Unexpected token, at offset -1
>     near [Index: 0 (Start: 0-Stop: 2) ='??T', type<4> Line: 1 LinePos:-
> 1]
>      : expected FULL ...
> ALLUPPER
> ALLLOWER
> MIXED
> 
> Although strangely it still gives output mixed in with errors.
> 
> I won't clutter the post up with UTF32 as it gives the same but 3 times
> the number of errors on '00'.
> 
> It seems that the data is still being matched on bytes and not
> characters. I know I probably need to give the lexer a wide input
> stream but I can't figure how. The comments in the code suggest all
> input is treated as UTF32 and confusingly there is also a
> antlr3ucs2inputstream.c input stream file which suggests UCS2 support
> but I've no idea how to use it.
> 
> If anybody can provide some insight into how to make this work (UTF16
> is my preferred format) it would be much appreciated.
> 
> Regards
> Bob

From ted.villalba at gmail.com  Thu Jul 12 09:27:38 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Thu, 12 Jul 2007 09:27:38 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <69fb4b090707120049n1e7c8d77y2e1040bf3b536059@mail.gmail.com>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
	<5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
	<69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>
	<CDD1943C-2ABA-4954-AED2-7763001E86D6@cs.usfca.edu>
	<69fb4b090707111646n3b4157c1je142c2ef3c1c76de@mail.gmail.com>
	<CDA291F5-E708-4A1C-B529-051B521052FB@cs.usfca.edu>
	<69fb4b090707120049n1e7c8d77y2e1040bf3b536059@mail.gmail.com>
Message-ID: <69fb4b090707120927i61b52a92y2759fda0afeea48c@mail.gmail.com>

Hi,

Referring back to your instructions below, I have a couple of questions:


> > value : value_ -> ^(VALUE value_) ;
> >
> > and rename value to value_:
> >
> > value   : terms ( operator^  terms )*
> >
>      | LPAREN! value RPAREN! ( operator^ value)* // i'll ignore as i
> > don't know what you want
> >      ;
> >
> > Also don't call value recursively in first alt.  That will create the
> > wrong associativity for OR...it will do associativity you find with
> > exponents.  Now you can use simple ^ operator.
>
>
the issue with the new first alt is that it no longer accommodates  when the
second operand is surrounded by PARENs, like : ...blah blah AND ( more stuff
OR whatever).



The second question I have is:
How to define the tree grammar for rules and alts that have no rewrite
specification. For instance:
        LPAREN! value RPAREN! ( operator^ value)*

Going back to reread the book, but at the moment, when there is a rewrite
rule, it's more obvious to me, because I simply move it over to the tree
grammar. When there's not, I'm not sure how to define the tree grammar for
the alternates with inline ^ operators, or for that matter * operators.

Thanks again,
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/9ae1dc75/attachment.html 

From open.zone at virgin.net  Thu Jul 12 09:34:13 2007
From: open.zone at virgin.net (Micheal J)
Date: Thu, 12 Jul 2007 17:34:13 +0100
Subject: [antlr-interest] anyone have a antlrv3 java grammar thatcreates
	AST?
In-Reply-To: <85B98E2E-D351-47A3-86A6-CDE2C7513005@cs.usfca.edu>
Message-ID: <000701c7c4a2$7c362de0$c704a8c0@hercules>

Hi,

> > Hi,
> >
> > Has anyone tried to build a ANTLRv3 java grammar that creates an
> > AST yet?
> >
> > I'm in the middle of creating one now, and I guess I should have
> > asked earlier :(
> 
> I'm am too. It's hard. ;)  Well, it's hard to build one that builds  
> the exact right tree and does the actions I need for ANTLR itself.   

I got the impression Andy wanted an ANTLR v3 grammar for a Java recognizer
that also builds an AST. He didn't specify a target language so I guess any
is OK.

You seem to be talking about an ANTLR v3 grammar for an ANTLR v3 recognizer
with Java target as output.


> That is why I madethe detour to make the TreeWizard.  BTW, have you  
> glanced at the wizard?  We're getting closure to making somethingyou  
> like! :)
> 
> Ter
> 


From parrt at cs.usfca.edu  Thu Jul 12 10:17:10 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 10:17:10 -0700
Subject: [antlr-interest] anyone have a antlrv3 java grammar thatcreates
	AST?
In-Reply-To: <000701c7c4a2$7c362de0$c704a8c0@hercules>
References: <000701c7c4a2$7c362de0$c704a8c0@hercules>
Message-ID: <43D4BFDD-323B-41EB-B38A-B105915AFA14@cs.usfca.edu>


On Jul 12, 2007, at 9:34 AM, Micheal J wrote:

> Hi,
>
>>> Hi,
>>>
>>> Has anyone tried to build a ANTLRv3 java grammar that creates an
>>> AST yet?
>>>
>>> I'm in the middle of creating one now, and I guess I should have
>>> asked earlier :(
>>
>> I'm am too. It's hard. ;)  Well, it's hard to build one that builds
>> the exact right tree and does the actions I need for ANTLR itself.
>
> I got the impression Andy wanted an ANTLR v3 grammar for a Java  
> recognizer
> that also builds an AST. He didn't specify a target language so I  
> guess any
> is OK.
>
> You seem to be talking about an ANTLR v3 grammar for an ANTLR v3  
> recognizer
> with Java target as output.

Oops. I read fast this AM before coffee. Sorry. no AST yet that I'm  
aware of.
Ter


From jimi at temporal-wave.com  Thu Jul 12 10:25:24 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 Jul 2007 10:25:24 -0700
Subject: [antlr-interest] 'C' code generator and Unicode
In-Reply-To: <3A76756EED583B43A4AD704E29CCD079741232@mail.smartlogic.com>
References: <3A76756EED583B43A4AD704E29CCD079741232@mail.smartlogic.com>
Message-ID: <051466DAA0D608439E196797955018D76EC6@wavemachine.temporal-wave.com>

Bob,

The input stream doesn't handle the BOM as you guess. I did start doing this, but then, as everything is overridable and extensible I thought that if one needed BOM handling, it could be done easily by overriding the methods on the standard UCS2 input stream.

So, the default implementation assums the that endianness is the same as the machine it is running on and just does (ANTLR3_UNIT32)(*((pANTLR3_UINT16)(input->data))).

Basically, at the time I wanted to get on with the trickier stuff of parsing. At some point soon it is time to come back and expand the input streams I guess.

Your easiest option for the moment is:

1) Test the BOM yourself;
2) Create the input stream with the pointer at the first non-BOM character;
3) If the BOM indicates different ordering to the native machine, then install your own version of the LA function that returns the UINT32 version of the character, picke up in the correct ordering.

That should be it basically.

Jim

> -----Original Message-----
> From: Bob Cowdery [mailto:Bob.Cowdery at smartlogic.com]
> Sent: Thursday, July 12, 2007 9:22 AM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] 'C' code generator and Unicode
> 
> Jim,
> 
> Thank you so much for the quick response. It's very nice to know when
> joining a new list that it's active.
> 
> I haven't digested all you said yet but I tried reading the file binary
> wise and passing in the UCS2 string. It looks a lot better but I guess
> I'm still doing something a little wrong. The output is this,
> 
> -memory-(1) : lexer error 3 :
>         1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL | ALLUPPER
> | ALLLOW
> ER | MIXED ); at offset 0, near char(0XFF) :
>         ??T
> FULL
> ALLUPPER
> ALLLOWER
> MIXED
> 
> but I also get an assertion failure which I have to ignore twice to get
> the output. The assertion says
> File: isctype.c Line: 56
> Expression: (unsigned)(C+1) <= 256
> 
> My guess at the parser failure is that it dosen't like the BOM marker.
> Do you haddle the BOM or expect the order to be LE or BE?
> 
> Bob,
> 
> UCS2 (which is UTF16 without surrogate support basically) works fine,
> but instead of using the default input stream you need to name the 16
> bit UCS2 version:
> 
> antlr3NewUCS2StringInPlaceStream() - In memory string
> 
> I have just noticed that I have not provided the equivalent function
> for files, so for the moment you will need to read it yourself and pass
> in  the pointer to the data.
> 
> I have not provided UTF32 input streams, but this is just a matter of
> copying the code for UCS2 and changing the casts from {p}ANTLR3_UINT16
> to {p}ANTLR3_UINT32.
> 
> Input streams for handling UTF-8 and UTF-16 with surrogates are a ways
> down the line from me typing fingers as there is a lot to do, but there
> is not a great deal of work here as the mark() an rewind() calls are
> set up to keep the absolute pointer rather than the character position
> for such streams.
> 
> Finally, not that the input stream is the only difference in the
> function, so a lexer/parser will work the same with any input stream at
> all because internally it uses UTF32. So, change the stream you create
> and otherwise use it exactly the same as your ASCII stream.
> 
> Finally, finally, note that the ANTLR3_STRING 'classes' you get from
> the tokens and so on will retain the encoding of the input stream, but
> otherwise you again use exactly the same methods on them (subStr,
> append, etc). Tehre are methods for appending 8 bit character strings
> to any type of string, which a re mainly useful when you are
> programming and want to add a string like "DEBUG: XXXXXX" to a 16 bi
> output string.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bob Cowdery
> > Sent: Thursday, July 12, 2007 7:28 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] 'C' code generator and Unicode
> >
> > Hi all,
> >
> > This is a first post to the list. I am using Antlr 3.0 with the C
> > runtime. I have managed to compile and run a simple grammar. My
> > question however is around Unicode support. I have tried every lexer
> I
> > can find but the only one that does what I expect so far is jFlex,
> but
> > java is not an option. For the test I have a number of files saved in
> > ASCII, UTF8, UTF16 and UTF32 which I am feeding through the lexer.
> The
> > grammar is very simple.
> >
> > grammar SimpleC;
> >
> > options {	language = C;}
> >
> > CAP		:	'\u0041'..'\u005a' ;
> > LWR		:	'\u0061'..'\u007a' ;
> > WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel =
> > HIDDEN; };
> >
> > BOTH		:	CAP | LWR ;
> > FULL		:	(CAP)(LWR)+ ;
> > ALLUPPER	:	CAP+ ;
> > ALLLOWER	:	LWR+ ;
> > MIXED		:	BOTH+ ;
> >
> >
> > atom	:	 FULL		{ printf( "FULL\n"); };
> > atom1	:	 ALLUPPER	{ printf( "ALLUPPER\n"); };
> > atom2	:	 ALLLOWER	{ printf( "ALLLOWER\n"); };
> > atom3	:	 MIXED	{ printf( "MIXED\n"); };
> >
> > If I feed the ASCII file (or UTF8 with single character codes)
> through
> > I get as expected.
> >
> > >From input: This IS some TExt
> > FULL
> > ALLUPPER
> > ALLLOWER
> > MIXED
> >
> > >From the UTF16 file I get:
> > (there are lots of these errors for every leading 00 in the UTF16
> text.
> > data-utf16-1.txt(1) : lexer error 3 :
> >         1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL |
> ALLUPPER
> > |
> > ER | MIXED ); at offset 35, near char(00) :
> >
> > FULL
> > data-utf16-1.txt(1)  : error 2 : Unexpected token, at offset -1
> >     near [Index: 0 (Start: 0-Stop: 2) ='??T', type<4> Line: 1
> LinePos:-
> > 1]
> >      : expected FULL ...
> > ALLUPPER
> > ALLLOWER
> > MIXED
> >
> > Although strangely it still gives output mixed in with errors.
> >
> > I won't clutter the post up with UTF32 as it gives the same but 3
> times
> > the number of errors on '00'.
> >
> > It seems that the data is still being matched on bytes and not
> > characters. I know I probably need to give the lexer a wide input
> > stream but I can't figure how. The comments in the code suggest all
> > input is treated as UTF32 and confusingly there is also a
> > antlr3ucs2inputstream.c input stream file which suggests UCS2 support
> > but I've no idea how to use it.
> >
> > If anybody can provide some insight into how to make this work (UTF16
> > is my preferred format) it would be much appreciated.
> >
> > Regards
> > Bob

From parrt at cs.usfca.edu  Thu Jul 12 10:41:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 10:41:17 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
Message-ID: <3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>

	From: 	  parrt at cs.usfca.edu
	Subject: 	Re: [antlr-interest] Understanding priorities in lexing  
(newbie)
	Date: 	July 12, 2007 10:24:19 AM PDT
	To: 	  antlr-interest at antlr.org


On Jul 12, 2007, at 9:01 AM, Daniel Brosseau wrote:


> Hi,
>
> I am also new to ANTLR, I have read the book, want to thank you and  
> am quite excited. But this thread has me a little perplexed.
>
> If I have a simple grammar:
>
> grammar lex;
>
> KEYWORD : 'a' 'b' 'c';
> OTHER : 'a' | 'b' | 'c';
> program : (  KEYWORD  |  OTHER  )*
>
> and feed it  "abab" it chokes at the second 'a'.
>

Well, ANTLR uses priorities only whereas LEX did a "look for longest  
match" using a backtracking mechanism.  It's easy to do in a state  
machine, but less efficient using a recursive desc. lexer.  ANTLR  
says that 'ab' predicts KEYWORD but of course it gets tripped up as  
'c' doens't follow in your input.  ANTLR can't see past OTHER to what  
follows so 'a' could be followed by anything (remember error input  
etc...).  Hence, it's confusion.  It does not autobacktrack at  
runtime ala LEX unless you give it a predicate.  Check what  
ANTLRWorks says the DFA is for predicting the overall list of tokens.

> Now I think I understand what was said earlier and I have gone  
> through the code and I can see why it chokes but I do not yet  
> understand why this is proper behaviour. Coming from a LEX  
> background, there should be no problem converting this into a DFA  
> that works, its done all the time.
>
> To illustrate, if I change my grammar to the following:
>
> grammar lex;
>
> kEYWORD : 'a' 'b' 'c';
> oTHER : 'a' | 'b' | 'c';
> program : (  kEYWORD |  oTHER  )*
>
> and feed it "abab" it parses the input as I would expect, no  
> problem, properly identifying a sequence of four oTHER tokens.
>

Well, if you look at lex__.g it put 'a', 'b', 'c' tokens first in the  
output (as it pulls out tokens from parser and gives to lexer before  
lexer rules).


> Isn't that what I should get by default, it looks much more natural  
> and expected. Using filter=true cannot be the right answer for  
> general cases like this.
>
> The lexer should e keeping track of the longest token it has  
> matched todate and return that token if it fails to match another  
> longer token.
>

Easy in a state machine and hard withANTLR; it's building a recursive  
descent lexer.  Hard to backtrack across rules like that at the end  
of rule ala LEX.


> Here, it does not do that. If I further change my grammar to:
>
> grammar lex;
>
> KEYWORD : 'a' 'b';
> OTHER : 'a' | 'b';
> program : (  KEYWORD  |  OTHER  )*
>
> and feed it "aa" it correctly splits it into two OTHER tokens. The  
> only difference between the first grammar and this grammar is that  
> the distance between the length of the last acceptable matched  
> token and where further matches fail goes from 1 ("a" vs "ab") to 2  
> ("a" vs "abc" ) characters. But that should not make a difference,  
> although I know why it does in your case.
>

Remember that ANTLR pretty much assumes you are expressing precedence  
in lists of alternatives and list of tokens.

Ter


From tbrandonau at gmail.com  Thu Jul 12 11:14:09 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 13 Jul 2007 04:14:09 +1000
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
Message-ID: <ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>

On 7/13/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>         From:     parrt at cs.usfca.edu
>         Subject:        Re: [antlr-interest] Understanding priorities in lexing
> (newbie)
>         Date:   July 12, 2007 10:24:19 AM PDT
>         To:       antlr-interest at antlr.org
>
>
> On Jul 12, 2007, at 9:01 AM, Daniel Brosseau wrote:
>
>
> > Hi,
> >
> > I am also new to ANTLR, I have read the book, want to thank you and
> > am quite excited. But this thread has me a little perplexed.
> >
> > If I have a simple grammar:
> >
> > grammar lex;
> >
> > KEYWORD : 'a' 'b' 'c';
> > OTHER : 'a' | 'b' | 'c';
> > program : (  KEYWORD  |  OTHER  )*
> >
> > and feed it  "abab" it chokes at the second 'a'.
> >
>
> Well, ANTLR uses priorities only whereas LEX did a "look for longest
> match" using a backtracking mechanism.  It's easy to do in a state
> machine, but less efficient using a recursive desc. lexer.  ANTLR
> says that 'ab' predicts KEYWORD but of course it gets tripped up as
> 'c' doens't follow in your input.  ANTLR can't see past OTHER to what
> follows so 'a' could be followed by anything (remember error input
> etc...).  Hence, it's confusion.  It does not autobacktrack at
> runtime ala LEX unless you give it a predicate.  Check what
> ANTLRWorks says the DFA is for predicting the overall list of tokens.
<SNIP>
>
> Easy in a state machine and hard withANTLR; it's building a recursive
> descent lexer.  Hard to backtrack across rules like that at the end
> of rule ala LEX.
I can see that ANTLR can't backtrack across rules, but could the
prediction calculation be changed to handle it?
With the grammar above, you get a mTokens method which basically
expresses the rule ( KEYWORD | OTHER ) as in the comment for this
method (i.e. all accessible tokens as alternates). For this it
generates a predictor based on the first two characters of input only.
Given the rule being coded this is correct, it's only alternatives are
to match a KEYWORD or a single OTHER token, so matching input 'ab' as
two OTHERs is not an option. But this seems counter-intuitive as of
course mTokens will be called multiple times. The natural intuition
seems to be that mTokens should be predicting based on
(KEYWORD|OTHER)+.
If you change the grammar to:
grammar lex2;
start
	:	PROGRAM;

PROGRAM : (  KEYWORD  |  OTHER  )+;

fragment KEYWORD : 'a' 'b' 'c';

fragment OTHER : 'a' | 'b' | 'c';

Then in PROGRAM you get a predictor that checks for 'abc' before
deciding that it is a KEYWORD.
Is it not possible to have the next token predictor function like this?
>
> Ter
>
Tom.

From daniel at lba.ca  Thu Jul 12 11:41:09 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Thu, 12 Jul 2007 14:41:09 -0400
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
Message-ID: <002501c7c4b4$36f790e0$9bd0840a@lba.ca>

Thanks so much for your reply.

I'm still trying to get a grasp of this. If I take the two first grammars
below, the only difference in the expression of the grammars is that the
first uses KEYWORD and OTHER while the second uses kEYWORD and oTHER. As
would be commonly understood, both express exactly the same grammar but get
translated into very different state machines, one by the lexer and one by
the parser. This I guess is my first source of confusion. The lexer rules
are clearly not a normal gramatical expression, but now I am trying to
understand what it is they are expressing: my second area of confusion. Are
they just a statement of a raw DFA? This mean that anytime a token has as a
prefix another token the lexer will choke. Such shared prefixes are not
always evident (as was the case of the grammar that started this thread:
'int' vs '.') and can be quite common (between keywords and identifiers for 
example).
But now I have to figure out what other cases may not turn
out as I might have expected. That's ok, but a little tricky. In any event,
although ANTLR presents lexer rules and parser rules in a way that makes
them look very similar they are evidently very different beasts indeed.

Regards,

Daniel

----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
To: "antlr-interest Interest" <antlr-interest at antlr.org>
Sent: Thursday, July 12, 2007 1:41 PM
Subject: Re: [antlr-interest] Understanding priorities in lexing (newbie)


> From:   parrt at cs.usfca.edu
> Subject: Re: [antlr-interest] Understanding priorities in lexing  (newbie)
> Date: July 12, 2007 10:24:19 AM PDT
> To:   antlr-interest at antlr.org
>
>
> On Jul 12, 2007, at 9:01 AM, Daniel Brosseau wrote:
>
>
>> Hi,
>>
>> I am also new to ANTLR, I have read the book, want to thank you and  am 
>> quite excited. But this thread has me a little perplexed.
>>
>> If I have a simple grammar:
>>
>> grammar lex;
>>
>> KEYWORD : 'a' 'b' 'c';
>> OTHER : 'a' | 'b' | 'c';
>> program : (  KEYWORD  |  OTHER  )*
>>
>> and feed it  "abab" it chokes at the second 'a'.
>>
>
> Well, ANTLR uses priorities only whereas LEX did a "look for longest 
> match" using a backtracking mechanism.  It's easy to do in a state 
> machine, but less efficient using a recursive desc. lexer.  ANTLR  says 
> that 'ab' predicts KEYWORD but of course it gets tripped up as  'c' 
> doens't follow in your input.  ANTLR can't see past OTHER to what  follows 
> so 'a' could be followed by anything (remember error input  etc...). 
> Hence, it's confusion.  It does not autobacktrack at  runtime ala LEX 
> unless you give it a predicate.  Check what  ANTLRWorks says the DFA is 
> for predicting the overall list of tokens.
>
>> Now I think I understand what was said earlier and I have gone  through 
>> the code and I can see why it chokes but I do not yet  understand why 
>> this is proper behaviour. Coming from a LEX  background, there should be 
>> no problem converting this into a DFA  that works, its done all the time.
>>
>> To illustrate, if I change my grammar to the following:
>>
>> grammar lex;
>>
>> kEYWORD : 'a' 'b' 'c';
>> oTHER : 'a' | 'b' | 'c';
>> program : (  kEYWORD |  oTHER  )*
>>
>> and feed it "abab" it parses the input as I would expect, no  problem, 
>> properly identifying a sequence of four oTHER tokens.
>>
>
> Well, if you look at lex__.g it put 'a', 'b', 'c' tokens first in the 
> output (as it pulls out tokens from parser and gives to lexer before 
> lexer rules).
>
>
>> Isn't that what I should get by default, it looks much more natural  and 
>> expected. Using filter=true cannot be the right answer for  general cases 
>> like this.
>>
>> The lexer should e keeping track of the longest token it has  matched 
>> todate and return that token if it fails to match another  longer token.
>>
>
> Easy in a state machine and hard withANTLR; it's building a recursive 
> descent lexer.  Hard to backtrack across rules like that at the end  of 
> rule ala LEX.
>
>
>> Here, it does not do that. If I further change my grammar to:
>>
>> grammar lex;
>>
>> KEYWORD : 'a' 'b';
>> OTHER : 'a' | 'b';
>> program : (  KEYWORD  |  OTHER  )*
>>
>> and feed it "aa" it correctly splits it into two OTHER tokens. The  only 
>> difference between the first grammar and this grammar is that  the 
>> distance between the length of the last acceptable matched  token and 
>> where further matches fail goes from 1 ("a" vs "ab") to 2  ("a" vs 
>> "abc" ) characters. But that should not make a difference,  although I 
>> know why it does in your case.
>>
>
> Remember that ANTLR pretty much assumes you are expressing precedence  in 
> lists of alternatives and list of tokens.
>
> Ter
> 


From Bob.Cowdery at smartlogic.com  Thu Jul 12 12:04:09 2007
From: Bob.Cowdery at smartlogic.com (Bob Cowdery)
Date: Thu, 12 Jul 2007 20:04:09 +0100
Subject: [antlr-interest] 'C' code generator and Unicode
Message-ID: <3A76756EED583B43A4AD704E29CCD079741233@mail.smartlogic.com>

Jim

Not a problem. Works fine without the BOM marker and as you say not a hard thing to handle myself. Excellent work on the implementation by the way and thanks for the help.

Bob

-----Original Message-----
From: Jim Idle [mailto:jimi at temporal-wave.com]
Sent: 12 July 2007 18:25
To: Bob Cowdery; antlr-interest at antlr.org
Subject: RE: [antlr-interest] 'C' code generator and Unicode


Bob,

The input stream doesn't handle the BOM as you guess. I did start doing this, but then, as everything is overridable and extensible I thought that if one needed BOM handling, it could be done easily by overriding the methods on the standard UCS2 input stream.

So, the default implementation assums the that endianness is the same as the machine it is running on and just does (ANTLR3_UNIT32)(*((pANTLR3_UINT16)(input->data))).

Basically, at the time I wanted to get on with the trickier stuff of parsing. At some point soon it is time to come back and expand the input streams I guess.

Your easiest option for the moment is:

1) Test the BOM yourself;
2) Create the input stream with the pointer at the first non-BOM character;
3) If the BOM indicates different ordering to the native machine, then install your own version of the LA function that returns the UINT32 version of the character, picke up in the correct ordering.

That should be it basically.

Jim

> -----Original Message-----
> From: Bob Cowdery [mailto:Bob.Cowdery at smartlogic.com]
> Sent: Thursday, July 12, 2007 9:22 AM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] 'C' code generator and Unicode
> 
> Jim,
> 
> Thank you so much for the quick response. It's very nice to know when
> joining a new list that it's active.
> 
> I haven't digested all you said yet but I tried reading the file binary
> wise and passing in the UCS2 string. It looks a lot better but I guess
> I'm still doing something a little wrong. The output is this,
> 
> -memory-(1) : lexer error 3 :
>         1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL | ALLUPPER
> | ALLLOW
> ER | MIXED ); at offset 0, near char(0XFF) :
>         ??T
> FULL
> ALLUPPER
> ALLLOWER
> MIXED
> 
> but I also get an assertion failure which I have to ignore twice to get
> the output. The assertion says
> File: isctype.c Line: 56
> Expression: (unsigned)(C+1) <= 256
> 
> My guess at the parser failure is that it dosen't like the BOM marker.
> Do you haddle the BOM or expect the order to be LE or BE?
> 
> Bob,
> 
> UCS2 (which is UTF16 without surrogate support basically) works fine,
> but instead of using the default input stream you need to name the 16
> bit UCS2 version:
> 
> antlr3NewUCS2StringInPlaceStream() - In memory string
> 
> I have just noticed that I have not provided the equivalent function
> for files, so for the moment you will need to read it yourself and pass
> in  the pointer to the data.
> 
> I have not provided UTF32 input streams, but this is just a matter of
> copying the code for UCS2 and changing the casts from {p}ANTLR3_UINT16
> to {p}ANTLR3_UINT32.
> 
> Input streams for handling UTF-8 and UTF-16 with surrogates are a ways
> down the line from me typing fingers as there is a lot to do, but there
> is not a great deal of work here as the mark() an rewind() calls are
> set up to keep the absolute pointer rather than the character position
> for such streams.
> 
> Finally, not that the input stream is the only difference in the
> function, so a lexer/parser will work the same with any input stream at
> all because internally it uses UTF32. So, change the stream you create
> and otherwise use it exactly the same as your ASCII stream.
> 
> Finally, finally, note that the ANTLR3_STRING 'classes' you get from
> the tokens and so on will retain the encoding of the input stream, but
> otherwise you again use exactly the same methods on them (subStr,
> append, etc). Tehre are methods for appending 8 bit character strings
> to any type of string, which a re mainly useful when you are
> programming and want to add a string like "DEBUG: XXXXXX" to a 16 bi
> output string.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bob Cowdery
> > Sent: Thursday, July 12, 2007 7:28 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] 'C' code generator and Unicode
> >
> > Hi all,
> >
> > This is a first post to the list. I am using Antlr 3.0 with the C
> > runtime. I have managed to compile and run a simple grammar. My
> > question however is around Unicode support. I have tried every lexer
> I
> > can find but the only one that does what I expect so far is jFlex,
> but
> > java is not an option. For the test I have a number of files saved in
> > ASCII, UTF8, UTF16 and UTF32 which I am feeding through the lexer.
> The
> > grammar is very simple.
> >
> > grammar SimpleC;
> >
> > options {	language = C;}
> >
> > CAP		:	'\u0041'..'\u005a' ;
> > LWR		:	'\u0061'..'\u007a' ;
> > WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel =
> > HIDDEN; };
> >
> > BOTH		:	CAP | LWR ;
> > FULL		:	(CAP)(LWR)+ ;
> > ALLUPPER	:	CAP+ ;
> > ALLLOWER	:	LWR+ ;
> > MIXED		:	BOTH+ ;
> >
> >
> > atom	:	 FULL		{ printf( "FULL\n"); };
> > atom1	:	 ALLUPPER	{ printf( "ALLUPPER\n"); };
> > atom2	:	 ALLLOWER	{ printf( "ALLLOWER\n"); };
> > atom3	:	 MIXED	{ printf( "MIXED\n"); };
> >
> > If I feed the ASCII file (or UTF8 with single character codes)
> through
> > I get as expected.
> >
> > >From input: This IS some TExt
> > FULL
> > ALLUPPER
> > ALLLOWER
> > MIXED
> >
> > >From the UTF16 file I get:
> > (there are lots of these errors for every leading 00 in the UTF16
> text.
> > data-utf16-1.txt(1) : lexer error 3 :
> >         1:1: Tokens : ( CAP | LWR | WHITESPACE | BOTH | FULL |
> ALLUPPER
> > |
> > ER | MIXED ); at offset 35, near char(00) :
> >
> > FULL
> > data-utf16-1.txt(1)  : error 2 : Unexpected token, at offset -1
> >     near [Index: 0 (Start: 0-Stop: 2) ='??T', type<4> Line: 1
> LinePos:-
> > 1]
> >      : expected FULL ...
> > ALLUPPER
> > ALLLOWER
> > MIXED
> >
> > Although strangely it still gives output mixed in with errors.
> >
> > I won't clutter the post up with UTF32 as it gives the same but 3
> times
> > the number of errors on '00'.
> >
> > It seems that the data is still being matched on bytes and not
> > characters. I know I probably need to give the lexer a wide input
> > stream but I can't figure how. The comments in the code suggest all
> > input is treated as UTF32 and confusingly there is also a
> > antlr3ucs2inputstream.c input stream file which suggests UCS2 support
> > but I've no idea how to use it.
> >
> > If anybody can provide some insight into how to make this work (UTF16
> > is my preferred format) it would be much appreciated.
> >
> > Regards
> > Bob

From benji at benjismith.net  Thu Jul 12 12:26:07 2007
From: benji at benjismith.net (Benji Smith)
Date: Thu, 12 Jul 2007 15:26:07 -0400
Subject: [antlr-interest] Newbie Issues: MismatchedTokenExceptions and
	FailedSyntacticPredicates
Message-ID: <b46e0d5e0707121226q67e56969k8752652891753b26@mail.gmail.com>

Hi. I'm new to this list, and new to ANTLR in general, though I have
quite a bit of experience on a previous project implementing a DSL
compiler with JavaCC (I'm switching to ANTLR primarily because of
support for C#).

I'm currently developing a grammar for stock-market indicators. For
example, when complete it'll allow a user to define an indicator like
this:

<code>
   // In technical analysis, the "MACD" symbol represents a "Moving Average
   // Convergence Divergence" indicator. This indicator is a simple arithmetic
   // function over a "slow" exponential moving average (EMA), and a "fast"
   // exponential moving average.

   indicator MACD[m, n] : EMA[m](CLOSE) - EMA[n](CLOSE)
</code>

But I'm getting ahead of myself. For now, I'm just trying to get the
left-hand side of the assignment expression to parse correctly. The
attached grammar file (VTExpression.g) was written to parse syntax
like "indicator MACD[m, n]", as well as "indicator EMA[3]" or
"indicator XYZ[true, 5, 3 + (n % 2) ]".

But even on the simplest stuff ("indicator EMA[3]"), I get a
MismatchedTokenException from the ANTLRWorks interpreter at the top
level of the expression. I tried rewriting the grammar
(VTExpression2.g) to use string literals in the rule definitions
instead of tokens, and the error went away. (Why? Shouldn't the lexer
& parser be identical at this point, whether the grammar uses tokens
or string literals in the rules?)

Now, using the tokenless grammar (VTExpression2.g), the interpreter
gets inside the left-bracket, but it fails to recognize the "3" as an
IntegerLiteral, instead throwing a FailedPredicateException (between
primaryExpression and synpred19).

When I do a google search on syntactic predicates, I can see that
they're defined like this:

   (...)=>

But I'm not doing that. Whenever I've seen these failed predicate
problems, it's from ordinary stuff like this:

   A : B ( op_a B)* ;
   B : C ( op_b C)* ;

I don't understand where all of these synpred objects come from. As
far as I can tell, I'm never actually using a syntactic predicate.

I feel a little silly grappling with errors parsing such simple little
expressions. The stuff I used to do in JavaCC was significantly more
complex than this. Is it just me, or do many other people find ANTLR a
lot more difficult to use?

Anyhow, thanks for whatever help you can offer. I appreciate it.

--benji smith
-------------- next part --------------
A non-text attachment was scrubbed...
Name: VTExpression.g
Type: application/octet-stream
Size: 4041 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/ba207b10/attachment.obj 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: VTExpression2.g
Type: application/octet-stream
Size: 3077 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/ba207b10/attachment-0001.obj 

From parrt at cs.usfca.edu  Thu Jul 12 12:46:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 12:46:40 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
Message-ID: <E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>


On Jul 12, 2007, at 11:14 AM, Thomas Brandon wrote:
> If you change the grammar to:
> grammar lex2;
> start
> 	:	PROGRAM;
>
> PROGRAM : (  KEYWORD  |  OTHER  )+;
>
> fragment KEYWORD : 'a' 'b' 'c';
>
> fragment OTHER : 'a' | 'b' | 'c';
>
> Then in PROGRAM you get a predictor that checks for 'abc' before
> deciding that it is a KEYWORD.
> Is it not possible to have the next token predictor function like  
> this?

Hi Tom.  Actually even if I did, OTHER OTHER matches 'ab' as does  
KEYWORD and so it has to resolve the ambiguity, which it does in  
favor of first rule specified.  It uses PROGRAM rule w/o the +  
because what if you had an error char?  There is an implied loop to  
PROGRAM in nextToken() method.

That said, i understand that your thinking is more in line with the  
most natural interpretation.

Ter

From antlr at mirality.co.nz  Thu Jul 12 13:11:42 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 13 Jul 2007 08:11:42 +1200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
Message-ID: <20070712201215.8009511EB38@www.antlr.org>

At 07:46 13/07/2007, Terence Parr wrote:
 >Hi Tom.  Actually even if I did, OTHER OTHER matches 'ab' as
 >does KEYWORD and so it has to resolve the ambiguity, which it 
does in
 >favor of first rule specified.

The point is that 'ab' *doesn't* match KEYWORD -- except in the 
mind of the predictor, since it isn't checking the whole rule.  So 
an input of 'ab' should unambigously result in OTHER OTHER; an 
input of 'abc' *could* result in either OTHER OTHER OTHER or 
KEYWORD, but the normal "pick the longest match and/or the first 
listed" rules sort out that ambiguity.

In the current implementation, though, the predictor sees 'ab' and 
immediately declares "That must be a KEYWORD!" -- even when the 
input is actually 'aba', whose only "correct" output would be 
OTHER OTHER OTHER.  So this results in an exception rather than 
producing the right output.

 >It uses PROGRAM rule w/o the + because what if you had an error
 >char?

I'm not sure what you meant by this.

 >There is an implied loop to PROGRAM in nextToken() method.

But the predictor doesn't know anything about it -- hence the 
problem.


This whole thing makes it really hard to write correct lexers -- 
especially since ANTLR also seems to ignore predicates if it 
thinks it knows better.  If this one thing was fixed then it'd 
make ANTLR significantly easier to use.  And I've been saying that 
for ages now :)


From parrt at cs.usfca.edu  Thu Jul 12 13:20:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 13:20:27 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <20070712201216.195FA1008C8@nexus.cs.usfca.edu>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
Message-ID: <3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>


On Jul 12, 2007, at 1:11 PM, Gavin Lambert wrote:

> At 07:46 13/07/2007, Terence Parr wrote:
> >Hi Tom.  Actually even if I did, OTHER OTHER matches 'ab' as
> >does KEYWORD and so it has to resolve the ambiguity, which it does in
> >favor of first rule specified.
>
> The point is that 'ab' *doesn't* match KEYWORD -- except in the  
> mind of the predictor, since it isn't checking the whole rule.  So  
> an input of 'ab' should unambigously result in OTHER OTHER; an  
> input of 'abc' *could* result in either OTHER OTHER OTHER or  
> KEYWORD, but the normal "pick the longest match and/or the first  
> listed" rules sort out that ambiguity.

Yes.  ANTLR doesn't do the natural thing here.  For normal cases,  
it's not an issue.  Few tokens are prefixes like that.  Normally it's  
keyword against 'a'..'z'+ not 'a'..'z'.

> In the current implementation, though, the predictor sees 'ab' and  
> immediately declares "That must be a KEYWORD!" -- even when the  
> input is actually 'aba', whose only "correct" output would be OTHER  
> OTHER OTHER.  So this results in an exception rather than producing  
> the right output.

Well, it does what I expected so it's "correct", just not what you  
want ;)

> >It uses PROGRAM rule w/o the + because what if you had an error
> >char?
>
> I'm not sure what you meant by this.

I create Tokens : T1 | T2 | T3 ... ;

for tokens to do matching.

> >There is an implied loop to PROGRAM in nextToken() method.
>
> But the predictor doesn't know anything about it -- hence the problem.

It assume any char because that is correct.  You could put any char  
after a token, yes?

> This whole thing makes it really hard to write correct lexers --  
> especially since ANTLR also seems to ignore predicates if it thinks  
> it knows better.  If this one thing was fixed then it'd make ANTLR  
> significantly easier to use.

(...)=> and {...}?=> will always be executed.

> And I've been saying that for ages now :)

And not reading about {...}?=> ? ;)  They should always be executed.

Ter


From kverma at yahoo.com  Thu Jul 12 13:21:58 2007
From: kverma at yahoo.com (Kamal Verma)
Date: Thu, 12 Jul 2007 13:21:58 -0700 (PDT)
Subject: [antlr-interest] C# Antlr 3.0 Grammer?
Message-ID: <810349.77640.qm@web54603.mail.re2.yahoo.com>

Does anybody have C# Antlr 3.0 grammar file ? I tried to compile v2 grammar file; I ran into lot of problems. 
I was wondering ig anybody working on migrating C# grammar file to antlr 3.0 ?

Thanks in advance,
_Kamal_







       
____________________________________________________________________________________
Need a vacation? Get great deals
to amazing places on Yahoo! Travel.
http://travel.yahoo.com/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/7b65cf70/attachment.html 

From open.zone at virgin.net  Thu Jul 12 13:59:10 2007
From: open.zone at virgin.net (Micheal J)
Date: Thu, 12 Jul 2007 21:59:10 +0100
Subject: [antlr-interest] Newbie Issues: MismatchedTokenExceptions
	andFailedSyntacticPredicates
In-Reply-To: <b46e0d5e0707121226q67e56969k8752652891753b26@mail.gmail.com>
Message-ID: <002901c7c4c7$81834bf0$c704a8c0@hercules>

Hi,

> Hi. I'm new to this list, and new to ANTLR in general, though
> I have quite a bit of experience on a previous project 
> implementing a DSL compiler with JavaCC (I'm switching to 
> ANTLR primarily because of support for C#).

If JavaCC-with-C#-output represents a better choice for you at the moment
(given your JavaCC experience) then this may be interesting:

http://sourceforge.net/projects/csharpcc

> I'm currently developing a grammar for stock-market
> indicators. For example, when complete it'll allow a user to 
> define an indicator like
> this:
> 
> <code>
>    // In technical analysis, the "MACD" symbol represents a
> "Moving Average
>    // Convergence Divergence" indicator. This indicator is a 
> simple arithmetic
>    // function over a "slow" exponential moving average 
> (EMA), and a "fast"
>    // exponential moving average.
> 
>    indicator MACD[m, n] : EMA[m](CLOSE) - EMA[n](CLOSE) </code>
> 
> But I'm getting ahead of myself. For now, I'm just trying to
> get the left-hand side of the assignment expression to parse 
> correctly. The attached grammar file (VTExpression.g) was 
> written to parse syntax like "indicator MACD[m, n]", as well 
> as "indicator EMA[3]" or "indicator XYZ[true, 5, 3 + (n % 2) ]".
> 
> But even on the simplest stuff ("indicator EMA[3]"), I get a
> MismatchedTokenException from the ANTLRWorks interpreter at 
> the top level of the expression.

VTExpression.g works fine for me in the ANTLRWorks *debugger* given *all* of
your sample input snippets. Note the interpreter is *documented* as not
supporting/executing actions, semantic predicates, backtrack=true etc.

You may want to add the EOF virtual token to the end of
'indicatorDeclaration' to handle EOF.

> I tried rewriting the grammar
> (VTExpression2.g) to use string literals in the rule
> definitions instead of tokens, and the error went away. (Why? 
> Shouldn't the lexer & parser be identical at this point, 
> whether the grammar uses tokens or string literals in the rules?)
> 
> Now, using the tokenless grammar (VTExpression2.g), the
> interpreter gets inside the left-bracket, but it fails to 
> recognize the "3" as an IntegerLiteral, instead throwing a 
> FailedPredicateException (between primaryExpression and synpred19).
> 
> When I do a google search on syntactic predicates, I can see
> that they're defined like this:
> 
>    (...)=>
> 
> But I'm not doing that. Whenever I've seen these failed
> predicate problems, it's from ordinary stuff like this:
> 
>    A : B ( op_a B)* ;
>    B : C ( op_b C)* ;
> 
> I don't understand where all of these synpred objects come
> from. As far as I can tell, I'm never actually using a 
> syntactic predicate.
> 
> I feel a little silly grappling with errors parsing such
> simple little expressions. The stuff I used to do in JavaCC 
> was significantly more complex than this. Is it just me, or 
> do many other people find ANTLR a lot more difficult to use?

No stranger to stirring a hornet's nest I see  ;-)

> Anyhow, thanks for whatever help you can offer. I appreciate it.
> 
> --benji smith

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From antlr at jazillian.com  Thu Jul 12 14:09:04 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 12 Jul 2007 17:09:04 -0400
Subject: [antlr-interest] ANTLRv3 comments/suggestions
Message-ID: <46969870.20000@jazillian.com>

Hi all,
I've just started using ANTLRv3 and I have a few 
comments/suggestions/enhancement request/bug reports.
Sorry to lump them all together like this - I'm lazy.

And, of course, let me just say v3 is amazing!
What impresses me most is that it seems like software tools in general, 
and especially tools like ANTLR,
never seem to get easier to use as they get older. New releases 
invariably add power and get harder to use,
not easier. Not so with v3: LL(*) really does a great job of drastically 
reducing the classic "ambiguity headache".
I'm really enjoying the new rewrite rules for creating ASTs.

A really great job by Terence!

1) When a rule alternative is the rule itself, I get a runtime 
StackOverFlowError, should be caught earlier:
A: A | B;

2) ANTLR always returns 0, even when an error occured. Should return 
non-zero on error

3) When I list a parser rule after a lexer rule,ANTLR doesn't seem to 
find the parser rule.
This was hard to track down because I accidentally started a parser rule 
with uppercase (making it a lexer rule),
and then (I think) all parser rules after that were not found. If all 
parser rules must come first, enforce that
and make sure no lexer rules come after any parser rules.

Also on this issue, the book only mentions once, in passing, that lexer 
rules are uppercase, an doesn't mention
that parser rules start with uppercase. I would emphasize this issue more.

4) When I define an imaginary token called "EOF", it conflicts with the 
ANTLR-internal one with the same name,
and I get a NPE at runtime.

5) I have a lot of suggested improvements for CommonTree, but of course 
I'll just extend it for myself.
You may want to consider adding the following:
* Add a getChildren() method - makes it easier to iterate, especially 
with the Java1.5 foreach construct.
* why not initialize children to an empty list, rather than null and 
having all that null checking code?
* use generics - children should be a List of CommonTrees.
* I've written a toStringPrettyTree() method that prints out trees 
nicely indented, rather than that
ugly LISP-ish syntax of toStringTree().
* Use StringBuilder rather than StringBuffer, probably everywhere in 
ANTLR and in the generated code.

6) Why do I have to both specify ASTTokenType and also do the 
setTreeAdaptor() thing? Can't
ANTLR call setTreeAdaptor() on its own whenever I specify an ASTTokenType?

7) CommonTree.getText() shouldn't call toString() because a subclass may 
override toString() and
call getText() in it (causing a infinite recursion).

8) In the generated code, print out the TokenTypes ordered by value:
    public static final int SR_ASSIGN=130;
    public static final int COMMA=78;
    public static final int STATIC_BLOCK=49;
    public static final int MINUS=86;
    public static final int FORMAL_PARAMETERS=39;
    public static final int EXPANSION_CHOICES=23;
    public static final int HexDigit=122;
    public static final int REGEX_PRODUCTION=32;
    public static final int MORE=12;
    public static final int FIELD_DECLARATION=53;
    public static final int REGEX_ID=35;
....

9) When I accidentally put a '$' where it doesn't belong it a rule 
parameter:
myrule[$param]
  : ....

...I get error "atribute param is not a token, ...", which is fine, but 
the line and column are both zero in the error.

I hope this list is useful!
Andy

From daniel at lba.ca  Thu Jul 12 15:18:05 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Thu, 12 Jul 2007 18:18:05 -0400
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
Message-ID: <004101c7c4d2$84d58330$9bd0840a@lba.ca>

Hi,

Love this:

> Well, it does what I expected so it's "correct", just not what you  want 
> ;)
>

Case 1:
grammar lex;
KEYWORD : 'a' 'b' 'c';
OTHER : 'a' | 'b' | 'c';
program : (  KEYWORD  |  OTHER  )*

Input: "aba" chokes on second a

Case 2:
grammar lex;
kEYWORD : 'a' 'b' 'c';
oTHER : 'a' | 'b' | 'c';
program : (  kEYWORD |  oTHER  )*

Input: "aba" outputs oTHER oTHER oTHER

Same grammar, two different state machines.

As I tried to say earlier, although the rules language used for the lexer 
and parser seems to be describing things in the same manner, they in fact 
describe very different state machines. So at the least this is an 
inconsistency which leads to confusion.

>From every book I have ever read on language parsing, using the above 
grammar, 'ab' does not match KEYWORD but unambigously matches only OTHER 
OTHER. This is dealt with by the parser state machine (using kEYWORD and 
oTHER instead of KEYWORD and OTHER) as oTHER oTHER and not as a missed 
kEYWORD. So the lexer is producing state machines that interpret the same 
gammar rules in totaly different ways from common usage and the parser's 
usage.

As you say, this is correct because you say it is correct but it is 
confusing, unconventional and hard. I can decide to speak my own language 
and use the same words others do but give them different meanings. I can 
even change their meaning from sentence to sentence and consider all of this 
as correct if I am the corrector. But that's streaching it.

Its just that I need to figure out what other ramifications this has and if 
it was at all possible to have the lexer and the parser give the same 
meaning to their grammar rules, it would make it easier to think 
consistently and use.

Regards,

Daniel

----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
To: "antlr-interest Interest" <antlr-interest at antlr.org>
Sent: Thursday, July 12, 2007 4:20 PM
Subject: Re: [antlr-interest] Understanding priorities in lexing (newbie)


>
> On Jul 12, 2007, at 1:11 PM, Gavin Lambert wrote:
>
>> At 07:46 13/07/2007, Terence Parr wrote:
>> >Hi Tom.  Actually even if I did, OTHER OTHER matches 'ab' as
>> >does KEYWORD and so it has to resolve the ambiguity, which it does in
>> >favor of first rule specified.
>>
>> The point is that 'ab' *doesn't* match KEYWORD -- except in the  mind of 
>> the predictor, since it isn't checking the whole rule.  So  an input of 
>> 'ab' should unambigously result in OTHER OTHER; an  input of 'abc' 
>> *could* result in either OTHER OTHER OTHER or  KEYWORD, but the normal 
>> "pick the longest match and/or the first  listed" rules sort out that 
>> ambiguity.
>
> Yes.  ANTLR doesn't do the natural thing here.  For normal cases,  it's 
> not an issue.  Few tokens are prefixes like that.  Normally it's  keyword 
> against 'a'..'z'+ not 'a'..'z'.
>
>> In the current implementation, though, the predictor sees 'ab' and 
>> immediately declares "That must be a KEYWORD!" -- even when the  input is 
>> actually 'aba', whose only "correct" output would be OTHER  OTHER OTHER. 
>> So this results in an exception rather than producing  the right output.
>
> Well, it does what I expected so it's "correct", just not what you  want 
> ;)
>
>> >It uses PROGRAM rule w/o the + because what if you had an error
>> >char?
>>
>> I'm not sure what you meant by this.
>
> I create Tokens : T1 | T2 | T3 ... ;
>
> for tokens to do matching.
>
>> >There is an implied loop to PROGRAM in nextToken() method.
>>
>> But the predictor doesn't know anything about it -- hence the problem.
>
> It assume any char because that is correct.  You could put any char  after 
> a token, yes?
>
>> This whole thing makes it really hard to write correct lexers --  
>> especially since ANTLR also seems to ignore predicates if it thinks  it 
>> knows better.  If this one thing was fixed then it'd make ANTLR 
>> significantly easier to use.
>
> (...)=> and {...}?=> will always be executed.
>
>> And I've been saying that for ages now :)
>
> And not reading about {...}?=> ? ;)  They should always be executed.
>
> Ter
> 


From ted.villalba at gmail.com  Thu Jul 12 15:51:08 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Thu, 12 Jul 2007 15:51:08 -0700
Subject: [antlr-interest] Tree grammar for 'zero or more' rewrite
In-Reply-To: <69fb4b090707120927i61b52a92y2759fda0afeea48c@mail.gmail.com>
References: <69fb4b090707111544j144b7ad1t2980a7752c21f4c2@mail.gmail.com>
	<5741D357-2FE6-47A4-A2AD-5AF30EFCCBCA@cs.usfca.edu>
	<69fb4b090707111616y1110a666rb745c932dd045d8c@mail.gmail.com>
	<CDD1943C-2ABA-4954-AED2-7763001E86D6@cs.usfca.edu>
	<69fb4b090707111646n3b4157c1je142c2ef3c1c76de@mail.gmail.com>
	<CDA291F5-E708-4A1C-B529-051B521052FB@cs.usfca.edu>
	<69fb4b090707120049n1e7c8d77y2e1040bf3b536059@mail.gmail.com>
	<69fb4b090707120927i61b52a92y2759fda0afeea48c@mail.gmail.com>
Message-ID: <69fb4b090707121551rb7cad16q5a73c7585e2d30b6@mail.gmail.com>

Hi Ter,

I have to apologize, I created my original tree incorrectly, and probably
steered you wrong in your help.
It should have been:

0 terms:
               =
             /    \
          TAG   VALUE
              |        |
            to      TERM
                      |
                    foo

1 term:

               =
             /    \
          TAG   VALUE
             |        |
            to     OR
                  /     \
             TERM  VALUE
                 |          |
               foo     TERM
                           |
                         bar
2 terms:

                =
             /    \
          TAG  VALUE
             I        |
            to       OR
                  /     \
             TERM  VALUE
                 |          |
               foo     AND                           |
                        /     \
                    TERM  TERM
                       |          |
                     bar      duff

     Sorry. Probably made a difference in your suggestion for the first alt
for value_.

Thanks,
Ted

On 7/12/07, Ted Villalba <ted.villalba at gmail.com> wrote:
>
> Hi,
>
> Referring back to your instructions below, I have a couple of questions:
>
>
> > > value : value_ -> ^(VALUE value_) ;
> > >
> > > and rename value to value_:
> > >
> > > value   : terms ( operator^  terms )*
> > >
> >      | LPAREN! value RPAREN! ( operator^ value)* // i'll ignore as i
> > > don't know what you want
> > >      ;
> > >
> > > Also don't call value recursively in first alt.  That will create the
> > > wrong associativity for OR...it will do associativity you find with
> > > exponents.  Now you can use simple ^ operator.
> >
> >
> the issue with the new first alt is that it no longer accommodates  when
> the second operand is surrounded by PARENs, like : ...blah blah AND ( more
> stuff OR whatever).
>
>
>
> The second question I have is:
> How to define the tree grammar for rules and alts that have no rewrite
> specification. For instance:
>         LPAREN! value RPAREN! ( operator^ value)*
>
> Going back to reread the book, but at the moment, when there is a rewrite
> rule, it's more obvious to me, because I simply move it over to the tree
> grammar. When there's not, I'm not sure how to define the tree grammar for
> the alternates with inline ^ operators, or for that matter * operators.
>
> Thanks again,
> Ted
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/7da1ad1d/attachment-0001.html 

From open.zone at virgin.net  Thu Jul 12 16:07:38 2007
From: open.zone at virgin.net (Micheal J)
Date: Fri, 13 Jul 2007 00:07:38 +0100
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
Message-ID: <000601c7c4d9$72393e90$c704a8c0@hercules>

Hi,

> > The point is that 'ab' *doesn't* match KEYWORD -- except in the
> > mind of the predictor, since it isn't checking the whole rule.  So  
> > an input of 'ab' should unambigously result in OTHER OTHER; an  
> > input of 'abc' *could* result in either OTHER OTHER OTHER or  
> > KEYWORD, but the normal "pick the longest match and/or the first  
> > listed" rules sort out that ambiguity.
> 
> Yes.  ANTLR doesn't do the natural thing here.  For normal cases,  
> it's not an issue.  Few tokens are prefixes like that.  
> Normally it's  
> keyword against 'a'..'z'+ not 'a'..'z'.

What would it take to alter the prediction strategy/algo to do the "natural
thing" even in the presence of token prefixes like these?

Just trying to get an idea of the work involved. I can see how this might be
an issue to some.

Micheal


-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From parrt at cs.usfca.edu  Thu Jul 12 16:18:36 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 16:18:36 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <004101c7c4d2$84d58330$9bd0840a@lba.ca>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
Message-ID: <95484CAA-3632-4788-BB6B-E9DC7C4A4611@cs.usfca.edu>


On Jul 12, 2007, at 3:18 PM, Daniel Brosseau wrote:
> Case 1:
> grammar lex;
> KEYWORD : 'a' 'b' 'c';
> OTHER : 'a' | 'b' | 'c';
> program : (  KEYWORD  |  OTHER  )*
>
> Input: "aba" chokes on second a
>
> Case 2:
> grammar lex;
> kEYWORD : 'a' 'b' 'c';
> oTHER : 'a' | 'b' | 'c';
> program : (  kEYWORD |  oTHER  )*
>
> Input: "aba" outputs oTHER oTHER oTHER
>
> Same grammar, two different state machines.

Well, more that the first grammar has 2 lexer rules and the second  
has three: one for each char.

> As I tried to say earlier, although the rules language used for the  
> lexer and parser seems to be describing things in the same manner,  
> they in fact describe very different state machines. So at the  
> least this is an inconsistency which leads to confusion.

It is in the interaction between the parser and lexer.  When you move  
rules wholesale into the parser from the lexer, shouldn't things be  
"different"?  This is NOT a scannerless parser.

>> From every book I have ever read on language parsing, using the above
> grammar, 'ab' does not match KEYWORD but unambigously matches only  
> OTHER OTHER.

Well, the (...)* decision in program will match ab as oTHER only if  
not followed by c.

> This is dealt with by the parser state machine (using kEYWORD and  
> oTHER instead of KEYWORD and OTHER) as oTHER oTHER and not as a  
> missed kEYWORD. So the lexer is producing state machines that  
> interpret the same gammar rules in totaly different ways from  
> common usage and the parser's usage.

Nope.  Move it to the lexer and DFA predicting (...)* is identical to  
that in the parser.

grammar lex;
KEYWORD : 'a' 'b' 'c';
OTHER : 'a' | 'b' | 'c';
Program : (  KEYWORD |  OTHER  )* ;

Trust me.  The same algorithm and code generator are used for both.   
One parsers tokens, the other char.

> As you say, this is correct because you say it is correct but it is  
> confusing, unconventional and hard. I can decide to speak my own  
> language and use the same words others do but give them different  
> meanings. I can even change their meaning from sentence to sentence  
> and consider all of this as correct if I am the corrector. But  
> that's streaching it.

Why are you picking on such a little example?  Try a real grammar or  
is this a condensation of a real grammar you're trying?

> Its just that I need to figure out what other ramifications this  
> has and if it was at all possible to have the lexer and the parser  
> give the same meaning to their grammar rules, it would make it  
> easier to think consistently and use.

They are identical...you are shuffling things between parser and  
lexer and saying it's not the same.  Of course not.

As a CA shrink would say, "just let go of LEX" ;)

Ter


From parrt at cs.usfca.edu  Thu Jul 12 16:23:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 16:23:05 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <000601c7c4d9$72393e90$c704a8c0@hercules>
References: <000601c7c4d9$72393e90$c704a8c0@hercules>
Message-ID: <DA1D8F18-5BFE-4A63-9A77-5B22654E1C2C@cs.usfca.edu>

On Jul 12, 2007, at 4:07 PM, Micheal J wrote:
>> Yes.  ANTLR doesn't do the natural thing here.  For normal cases,
>> it's not an issue.  Few tokens are prefixes like that.
>> Normally it's
>> keyword against 'a'..'z'+ not 'a'..'z'.
>
> What would it take to alter the prediction strategy/algo to do the  
> "natural
> thing" even in the presence of token prefixes like these?
>
> Just trying to get an idea of the work involved. I can see how this  
> might be
> an issue to some.

It's hard in a recur. desc. parser because you have to longjump from  
one method to another.  Note sure how it could be done without  
merging rules.

Maybe I could look into doing the (...)* not (...) for implicit  
Tokens rule to see if it generates more "correct" DFA?

Ter


From win at wincent.com  Thu Jul 12 17:05:31 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 13 Jul 2007 02:05:31 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <004101c7c4d2$84d58330$9bd0840a@lba.ca>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
Message-ID: <0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>

El 13/7/2007, a las 0:18, Daniel Brosseau escribi?:

> Hi,
>
> Love this:
>
>> Well, it does what I expected so it's "correct", just not what  
>> you  want ;)
>>
>
> Case 1:
> grammar lex;
> KEYWORD : 'a' 'b' 'c';
> OTHER : 'a' | 'b' | 'c';
> program : (  KEYWORD  |  OTHER  )*
>
> Input: "aba" chokes on second a
>
> Case 2:
> grammar lex;
> kEYWORD : 'a' 'b' 'c';
> oTHER : 'a' | 'b' | 'c';
> program : (  kEYWORD |  oTHER  )*
>
> Input: "aba" outputs oTHER oTHER oTHER
>
> Same grammar, two different state machines.
>
> As I tried to say earlier, although the rules language used for the  
> lexer and parser seems to be describing things in the same manner,  
> they in fact describe very different state machines. So at the  
> least this is an inconsistency which leads to confusion.

One thing to bear in mind is that lexing and parsing are completely  
separate phases in ANTLR; sure the parser and lexer run at the same  
time because the parser is just saying "give me a token, give me  
another token" etc until all tokens are produced, but conceptually  
because there is no communication from the parser to the lexer you  
can think of them as two completely separate phases.

So when you take your first lexer, which has two rules (KEYWORD and  
OTHER) and then morph it into the second lexer, which only has one  
rule (KEYWORD) then you are changing it in a fundamental way which  
completely changes the way it operates.

Cheers,
Wincent


From jonathan.thomas at ca.com  Thu Jul 12 17:09:11 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 13 Jul 2007 10:09:11 +1000
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <200707120755.35894.rschulz@sonic.net>
References: <200707120755.35894.rschulz@sonic.net>
Message-ID: <4696C2A7.8000606@ca.com>

Talking about odd targets, I was struck by the thought of producing an 
x86 assembler target last night ... object-oriented assembler anyone? ;-)


Randall R Schulz said the following on 13/07/2007 12:55 AM:
> Hi,
>
> By any chance does anyone here use ANTLR with Scala 
> (<http://www.scala-lang.org/>) or know of someone or some project that 
> does?
>
> I did some looking and couldn't find anything, so I imagine that if it's 
> happening, it's proprietary, but I thought I'd ask, just the same.
>
> And if it hasn't been done, how much work is involved in retargeting 
> ANTLR to a new target language? I doubt I could justify the effort (I'm 
> not even sure it's the right approach for me, yet), but perhaps my 
> intuitive sense of the magnitude of the task is way off.
>
> It's also the case that I know very little about Scala as of yet, but 
> some of its characteristics suggest it might be a good choice for some 
> upcoming work I need to do.
>
>
> Thanks.
>
>
> Randall Schulz
>
>   

From rschulz at sonic.net  Thu Jul 12 17:28:55 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 12 Jul 2007 17:28:55 -0700
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <4696C2A7.8000606@ca.com>
References: <200707120755.35894.rschulz@sonic.net> <4696C2A7.8000606@ca.com>
Message-ID: <200707121728.55256.rschulz@sonic.net>

On Thursday 12 July 2007 17:09, Jonathan Thomas wrote:
> Talking about odd targets,

Odd? Scala looks like an intriguing and elegant language, to me. Not 
exactly how I'd describe, say, Groovy... Or, for that matter, Java 
itself.

The programming world needs better languages, and I'll put my money on 
those grounded in computing theory, mathematical formalisms and logical 
principles, any day!


> I was struck by the thought of producing 
> an x86 assembler target last night ... object-oriented assembler
> anyone? ;-)

Well, I'm sure something along those lines could be done, but you can't 
short-cut the complexity of a compiler. Realistically, machine code 
generation isn't simple.

In fact, the notion of an object-oriented assembly language isn't new. 
I'll bet if you search the 'Net, you'll find projects, though I'm 
unaware of any recently (and for good reason?portability matters, for 
one thing, and that's just one reason for highly stratified compiler 
designs, including the whole concept of virtual machines).


Randall Schulz

From dirty at apple.com  Thu Jul 12 17:38:29 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Thu, 12 Jul 2007 17:38:29 -0700
Subject: [antlr-interest] Dealing with lists in a tree grammar action
In-Reply-To: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
References: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
Message-ID: <4BCD5535-4150-41D9-95B9-BBAD6AB0A9EA@apple.com>

Does anyone have any ideas or suggestions?

On Jul 11, 2007, at 11:05 PM, Cameron Esfahani wrote:

> I've reached the stage in my tree grammar that I want to start  
> keeping information in parallel structures.  Ones that are more  
> optimized for the work I need to do after the tree grammar walker  
> has finished.
>
> But I've reached a small impasse when I'm trying to handle lists in  
> an action for a rule in my tree grammar.
>
> Here is a small portion from my tree grammar.  An array can have  
> one or more elements in it.  What I'd like to do in my action for  
> "elements" is gather each of the "value" and add them to a list.
>
> array
> 	:	elements
> 	;
>
> elements
> 	:	value+
> 	;
>
> value
> 	:	^( T_STR STRING )
> 	|	^( T_HEXSTREAM STREAM )
> 	|	^( T_SYMREF IDENTIFIER )
> 	|	^( T_NUM number_size )
> 	|	^( T_OBJ object )
> 	|	^( T_ARRAY array )
> 	|	T_TRUE
> 	|	T_FALSE
> 	|	T_NULL
> 	;
>
> I had hoped that I could do the following (this is using the C  
> runtime, so I'm using it's types):
>
> elements returns[ pANTLR3_VECTOR List ]
> 	:	v += value+
> 		{
> 			$List = $v;
> 		}
> 	;
>
> But I get the following error from ANTLR:
>
> error(134): TWalker.g:58:4: rule '+=' list labels are not allowed w/ 
> o output option: v
>
> And, eventually, I get an error with the C runtime:
>
> TWalker.c:969: error: 'struct TWalker_Ctx_struct' has no member  
> named 'vectors'
>
> But I'm not worried about that yet.
>
> I've read the documentation about "+=" only being applicable in AST  
> or template outputs.  And so I'm stuck.
>
> Does anyone have any suggestions on how to handle this?
>

Cameron Esfahani
dirty at apple.com

"You only live once, and the way I live, once is enough"

Frank Sinatra



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/d369e70f/attachment-0001.html 

From daniel at lba.ca  Thu Jul 12 17:49:51 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Thu, 12 Jul 2007 20:49:51 -0400
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
Message-ID: <000801c7c4e7$b880b280$82d4840a@lba.ca>

HI,

Yes, I understand somewhat ..., what somewhat I'm not yet 100% on.

Where I have been coming from is that one grammar file (what follows 
'grammar' in the file) would define one language grammar (not two). How the 
work gets divided up between lexer and parser is a matter of convenience and 
efficiency but should not change the meaning of the overall grammar and the 
character streams that gets accepted or rejected by the resulting overall 
state machine. It seems that in ANTLR's case, the one grammar file defines 
two grammars (one for the lexer and one for the parser) and how the work 
gets divided up between the two can have a considerable impact on the 
character streams accepted or rejected. I get further tripped up because the 
rules of these two grammars can be interspersed in the file and look as if 
they mesh seamlessly. Ooof!

Confused but thinking about it,

Daniel

----- Original Message ----- 
From: "Wincent Colaiuta" <win at wincent.com>
To: "Daniel Brosseau" <daniel at lba.ca>
Cc: "ANTLR-Interest" <antlr-interest at antlr.org>
Sent: Thursday, July 12, 2007 8:05 PM
Subject: Re: [antlr-interest] Understanding priorities in lexing (newbie)


El 13/7/2007, a las 0:18, Daniel Brosseau escribi?:

> Hi,
>
> Love this:
>
>> Well, it does what I expected so it's "correct", just not what  you  want 
>> ;)
>>
>
> Case 1:
> grammar lex;
> KEYWORD : 'a' 'b' 'c';
> OTHER : 'a' | 'b' | 'c';
> program : (  KEYWORD  |  OTHER  )*
>
> Input: "aba" chokes on second a
>
> Case 2:
> grammar lex;
> kEYWORD : 'a' 'b' 'c';
> oTHER : 'a' | 'b' | 'c';
> program : (  kEYWORD |  oTHER  )*
>
> Input: "aba" outputs oTHER oTHER oTHER
>
> Same grammar, two different state machines.
>
> As I tried to say earlier, although the rules language used for the  lexer 
> and parser seems to be describing things in the same manner,  they in fact 
> describe very different state machines. So at the  least this is an 
> inconsistency which leads to confusion.

One thing to bear in mind is that lexing and parsing are completely
separate phases in ANTLR; sure the parser and lexer run at the same
time because the parser is just saying "give me a token, give me
another token" etc until all tokens are produced, but conceptually
because there is no communication from the parser to the lexer you
can think of them as two completely separate phases.

So when you take your first lexer, which has two rules (KEYWORD and
OTHER) and then morph it into the second lexer, which only has one
rule (KEYWORD) then you are changing it in a fundamental way which
completely changes the way it operates.

Cheers,
Wincent


From aliaazimi at yahoo.com  Thu Jul 12 17:52:33 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 12 Jul 2007 17:52:33 -0700 (PDT)
Subject: [antlr-interest] (newbie problem)out of memory problem
Message-ID: <93079.93881.qm@web58105.mail.re3.yahoo.com>

Dear all,
   
  Thank you in advance for your time.
   
  I have written the following grammar and rewrite rule. However, when I try to generate code it produces some problems (like java out of memory and I am sure the problem in my grammar comes from this rule). Could you recommend a better way of writing it? 
   
                 
  blocksubstructuredefinition
         :'substructure' qualifier? blocksubstructurename? end'endsubstructure'qualifier? blocksubstructurename? end 
          (entityinsystem+ ->^('substructure' qualifier? blocksubstructurename? end 'endsubstructure'qualifier? blocksubstructurename? end  entityinsystem+ ) 
              |channelconnection+ ->^('substructure' qualifier? blocksubstructurename? end'endsubstructure'qualifier? blocksubstructurename? end  channelconnection+ )
              )
              ;
   
  Best wishes;
   
  Al

 
---------------------------------
Sucker-punch spam with award-winning protection.
 Try the free Yahoo! Mail Beta.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/5a8a1a5d/attachment.html 

From parrt at cs.usfca.edu  Thu Jul 12 17:52:56 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 17:52:56 -0700
Subject: [antlr-interest] Dealing with lists in a tree grammar action
In-Reply-To: <4BCD5535-4150-41D9-95B9-BBAD6AB0A9EA@apple.com>
References: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
	<4BCD5535-4150-41D9-95B9-BBAD6AB0A9EA@apple.com>
Message-ID: <6AC12A2F-2B8A-49DB-884E-5B3821764C68@cs.usfca.edu>


On Jul 12, 2007, at 5:38 PM, Cameron Esfahani wrote:
>> elements returns[ pANTLR3_VECTOR List ]
>> 	:	v += value+
>> 		{
>> 			$List = $v;
>> 		}
>> 	;
>>
>> But I get the following error from ANTLR:
>>
>> error(134): TWalker.g:58:4: rule '+=' list labels are not allowed  
>> w/o output option: v

Yeah, rules can have multiple return values and so I just decided to  
only keep track of result trees, which are currently not available in  
tree grammars.  I will fix that soon.

>> I've read the documentation about "+=" only being applicable in  
>> AST or template outputs.  And so I'm stuck.
>>
>> Does anyone have any suggestions on how to handle this?

I'm in a rush but you can try a single v=value {list.add($v.start);}  
which will make a list of all the root/start nodes for stuff going  
into value rule.

Ter


From parrt at cs.usfca.edu  Thu Jul 12 17:55:03 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2007 17:55:03 -0700
Subject: [antlr-interest] figured out how to do tree rewriting
Message-ID: <C9F47921-D179-471B-BE60-C6853F4A27AE@cs.usfca.edu>

Hi,

I spent some time today and figured out an efficient way to do AST  
construction from tree grammars (completely fresh new tree) and tree  
rewriting where only subtrees from rules with -> rewrites get  
altered.  Very efficient in space if you want to tweak a tree.  Fits  
on 1 blackboard. ;)

Kay arrives on Sunday...he can motivate me to implement this...  and  
finish my v2 to v3 transition for antlr.

Ugh, i have my tenure application to work on too!

Ter

From jonathan.thomas at ca.com  Thu Jul 12 18:02:14 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 13 Jul 2007 11:02:14 +1000
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <200707121728.55256.rschulz@sonic.net>
References: <200707120755.35894.rschulz@sonic.net> <4696C2A7.8000606@ca.com>
	<200707121728.55256.rschulz@sonic.net>
Message-ID: <4696CF16.60005@ca.com>



Randall R Schulz said the following on 13/07/2007 10:28 AM:
> The programming world needs better languages, and I'll put my money on 
> those grounded in computing theory, mathematical formalisms and logical 
> principles, any day!
>
>   
Yeah well it'd be good if we could stop rowing and climb the tree once 
in a while ( or else even just spend time mixing our metaphors 
completely ;-) )
> Well, I'm sure something along those lines could be done, but you can't 
> short-cut the complexity of a compiler. Realistically, machine code 
> generation isn't simple.
>
>   
Yes, it was more of an invitation to "step up here self flagellating 
coders" :-) though I am impressed though with what assembler can 
achieve, ref. menuetos - compact, fast which would be attributes desired 
by my target users.

I did also wonder how the idea of an almost non-portable output would go 
with this community :-0 .

From rdclark at gmail.com  Thu Jul 12 18:09:10 2007
From: rdclark at gmail.com (Richard Clark)
Date: Thu, 12 Jul 2007 18:09:10 -0700
Subject: [antlr-interest] Dealing with lists in a in tree grammar action
In-Reply-To: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
References: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
Message-ID: <d3992d900707121809q507e0449ld736862fa91a9669@mail.gmail.com>

On 7/11/07, Cameron Esfahani <dirty at apple.com> wrote:

> Here is a small portion from my tree grammar.  An array can have one or more
> elements in it.  What I'd like to do in my action for "elements" is gather
> each of the "value" and add them to a list.

> elements returns[ pANTLR3_VECTOR List ]
>  : v += value+
>  {
>  $List = $v;
>  }
>  ;

You can insert code at arbitrary points, so want something like this
(pseudo-code guts...)

elements returns[ pANTLR3_VECTOR List ]
@init { $List = new pANTLR3_VECTOR; }
  : ( value
      { /* Whatever you want in here, e.g.: */ append($value.value, $List); }
    )+
  ;

 The stuff in @init {...} will be called at the start of the elements
function and the stuff in the inner {...} will be called each time
through the loop.

 ...RIchard

From rschulz at sonic.net  Thu Jul 12 19:10:06 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 12 Jul 2007 19:10:06 -0700
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <4696CF16.60005@ca.com>
References: <200707120755.35894.rschulz@sonic.net>
	<200707121728.55256.rschulz@sonic.net> <4696CF16.60005@ca.com>
Message-ID: <200707121910.06354.rschulz@sonic.net>

On Thursday 12 July 2007 18:02, Jonathan Thomas wrote:
> Randall R Schulz said the following on 13/07/2007 10:28 AM:
> > The programming world needs better languages, and I'll put my money
> > on those grounded in computing theory, mathematical formalisms and
> > logical principles, any day!
>
> Yeah well it'd be good if we could stop rowing and climb the tree
> once in a while ( or else even just spend time mixing our metaphors
> completely ;-) )

Mixing? I'm not sure what the metaphors are, mixed or not!


> > Well, I'm sure something along those lines could be done, but you
> > can't short-cut the complexity of a compiler. Realistically,
> > machine code generation isn't simple.
>
> Yes, it was more of an invitation to "step up here self flagellating
> coders" :-) though I am impressed though with what assembler can
> achieve, ref. menuetos - compact, fast which would be attributes
> desired by my target users.

Ooh! "Self-flagellating coders" Is that oxymoronic or redundant?


> I did also wonder how the idea of an almost non-portable output would
> go with this community :-0 .

Almost-but-not-quite non-portable?

And I thought I could torture the language...


RRS

From dirty at apple.com  Thu Jul 12 19:16:27 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Thu, 12 Jul 2007 19:16:27 -0700
Subject: [antlr-interest] Dealing with lists in a tree grammar action
In-Reply-To: <6AC12A2F-2B8A-49DB-884E-5B3821764C68@cs.usfca.edu>
References: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
	<4BCD5535-4150-41D9-95B9-BBAD6AB0A9EA@apple.com>
	<6AC12A2F-2B8A-49DB-884E-5B3821764C68@cs.usfca.edu>
Message-ID: <3231BAB1-0ADA-4612-A7E0-497BD4646E3C@apple.com>


On Jul 12, 2007, at 5:52 PM, Terence Parr wrote:

> On Jul 12, 2007, at 5:38 PM, Cameron Esfahani wrote:
>>> elements returns[ pANTLR3_VECTOR List ]
>>> 	:	v += value+
>>> 		{
>>> 			$List = $v;
>>> 		}
>>> 	;
>>>
>>> But I get the following error from ANTLR:
>>>
>>> error(134): TWalker.g:58:4: rule '+=' list labels are not allowed  
>>> w/o output option: v
>
> Yeah, rules can have multiple return values and so I just decided  
> to only keep track of result trees, which are currently not  
> available in tree grammars.  I will fix that soon.
>

That sounds great.  It would be nice to use the similar constructs in  
tree grammars as well.

>>> I've read the documentation about "+=" only being applicable in  
>>> AST or template outputs.  And so I'm stuck.
>>>
>>> Does anyone have any suggestions on how to handle this?
>
> I'm in a rush but you can try a single v=value {list.add 
> ($v.start);} which will make a list of all the root/start nodes for  
> stuff going into value rule.
>
> Ter

I'm not quite sure how this is supposed to work.  Since there can be  
multiple "value", wouldn't v only be the first value?

Richard Clark, in his response, suggested something that seems to  
work.  It's not as clean as I'd like, but it does look like it works:

elements returns [ pANTLR3_VECTOR List ]
@init
{
	$List = antlr3VectorNew( 0 );
}
	:	( value
		{
			$List->add( $List, $value.Id, NULL );
		}
		)+
	;


Cameron Esfahani
dirty at apple.com

"Americans are very skilled at creating a custom meaning from  
something that's mass-produced."

Ann Powers


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070712/e18f2877/attachment-0001.html 

From jonathan.thomas at ca.com  Thu Jul 12 19:19:33 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 13 Jul 2007 12:19:33 +1000
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <200707121910.06354.rschulz@sonic.net>
References: <200707120755.35894.rschulz@sonic.net>	<200707121728.55256.rschulz@sonic.net>
	<4696CF16.60005@ca.com> <200707121910.06354.rschulz@sonic.net>
Message-ID: <4696E135.1060801@ca.com>



Randall R Schulz said the following on 13/07/2007 12:10 PM:
> On Thursday 12 July 2007 18:02, Jonathan Thomas wrote:
> Mixing? I'm not sure what the metaphors are, mixed or not!
>
>   
We're too busy rowing the boat to instead of thinking about something 
more efficient like putting up a sail ...
A good leader is the one who climbs the tree and shouts out "We're 
cutting down the wrong forest" - ie leadership thinking needed for 
checking going in right direction.
Oh boy I can't believe I am actually contributing more to my own mash.
> Almost-but-not-quite non-portable?
>
> And I thought I could torture the language...
>
>   
That would require redoubtable skill :-).  

JT
>
>   

From Stephen_Hardy at rabbit.com  Thu Jul 12 19:27:31 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Thu, 12 Jul 2007 19:27:31 -0700
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <200707121910.06354.rschulz@sonic.net>
References: <200707120755.35894.rschulz@sonic.net><200707121728.55256.rschulz@sonic.net>
	<4696CF16.60005@ca.com> <200707121910.06354.rschulz@sonic.net>
Message-ID: <62BABE024B7C074E9194E9727A41897901383116@dvs-sms-mail01.digi.com>

> > > The programming world needs better languages, and I'll put my
money
> > > on those grounded in computing theory, mathematical formalisms and
> > > logical principles, any day!
> >
> > Yeah well it'd be good if we could stop rowing and climb the tree
> > once in a while ( or else even just spend time mixing our metaphors
> > completely ;-) )
> 
> Mixing? I'm not sure what the metaphors are, mixed or not!

It was clear to me that he meant "programmers prefer writing new code
100 times more than debugging old code" thus we are forever stuck with
new you-beaut features which almost work.

The objectionable thing to me was that he included a lexically complete
smiley at the end of a parenthesized phrase.  Personally, I let the
closing paren double up (as in :-) else it appears as a double chin
smiley.  Is this a rule that is parsable using LL(*)?

Regards,
SJH

From kroepke at classdump.org  Thu Jul 12 23:12:54 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 08:12:54 +0200
Subject: [antlr-interest] Dealing with lists in a tree grammar action
In-Reply-To: <3231BAB1-0ADA-4612-A7E0-497BD4646E3C@apple.com>
References: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
	<4BCD5535-4150-41D9-95B9-BBAD6AB0A9EA@apple.com>
	<6AC12A2F-2B8A-49DB-884E-5B3821764C68@cs.usfca.edu>
	<3231BAB1-0ADA-4612-A7E0-497BD4646E3C@apple.com>
Message-ID: <85CFCE9A-A3A8-43E5-86D7-18E7E1CCCA2E@classdump.org>


On Jul 13, 2007, at 4:16 AM, Cameron Esfahani wrote:

> Richard Clark, in his response, suggested something that seems to  
> work.  It's not as clean as I'd like, but it does look like it works:

Yes, that's the only way to do it right now. not really all that  
different from your original, don't you think?

orig:
elements returns[ pANTLR3_VECTOR List ]
	:	v += value+
		{
			$List = $v;
		}
	;

richard's suggestion:
elements returns[ pANTLR3_VECTOR List ]
@init { $List = new pANTLR3_VECTOR; }
  : ( value
      { /* Whatever you want in here, e.g.: */ append($value.value,  
$List); }
    )+
  ;

It's essentially what ANTLR would generate anyway.

But I agree that the feature should be supported, and I'm sure it  
will be :)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Thu Jul 12 23:15:55 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 08:15:55 +0200
Subject: [antlr-interest] figured out how to do tree rewriting
In-Reply-To: <C9F47921-D179-471B-BE60-C6853F4A27AE@cs.usfca.edu>
References: <C9F47921-D179-471B-BE60-C6853F4A27AE@cs.usfca.edu>
Message-ID: <3E5FCA95-FB9B-4BBE-97B0-08A6F4921DA0@classdump.org>

On Jul 13, 2007, at 2:55 AM, Terence Parr wrote:

> I spent some time today and figured out an efficient way to do AST  
> construction from tree grammars (completely fresh new tree) and  
> tree rewriting where only subtrees from rules with -> rewrites get  
> altered.  Very efficient in space if you want to tweak a tree.   
> Fits on 1 blackboard. ;)

hooray! I can't wait to see the size of *that* blackboard. ;)  
Sometimes those suckers can get huge (the blackboards I mean...)

> Kay arrives on Sunday...he can motivate me to implement this...   
> and finish my v2 to v3 transition for antlr.

*whip*, or is there a connotation to "motivate" here that I'm  
missing?! ;)

chuckling lightly,

-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Thu Jul 12 23:54:57 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 08:54:57 +0200
Subject: [antlr-interest] (newbie problem)out of memory problem
In-Reply-To: <93079.93881.qm@web58105.mail.re3.yahoo.com>
References: <93079.93881.qm@web58105.mail.re3.yahoo.com>
Message-ID: <96AB4EDA-3BB4-4E5D-B17B-AA50BDBB5A7A@classdump.org>


On Jul 13, 2007, at 2:52 AM, ali azimi wrote:

>   I have written the following grammar and rewrite rule. However,  
> when I try to generate code it produces some problems (like java  
> out of memory and I am sure the problem in my grammar comes from  
> this rule). Could you recommend a better way of writing it?

org.antlr.Tool is out of memory? If so, try to pass the -Xmx300m  
argument (substituting the appropriate of max memory) to the Java call.
However, I don't think the rule in question really is the problem, as  
the lookahead is fine for a simple test case I just made up.

It might however all depend on the rules you didn't include in your  
mail. There's no way to figure out the problem from just this rule.

>   blocksubstructuredefinition
>          :'substructure' qualifier? blocksubstructurename?  
> end'endsubstructure'qualifier? blocksubstructurename? end
>           (entityinsystem+ ->^('substructure' qualifier?  
> blocksubstructurename? end 'endsubstructure'qualifier?  
> blocksubstructurename? end  entityinsystem+ )
>               |channelconnection+ ->^('substructure' qualifier?  
> blocksubstructurename? end'endsubstructure'qualifier?  
> blocksubstructurename? end  channelconnection+ )
>               )
>               ;

Also, use whitespace and underscores or camelCase. The rule is really  
hard to read this way. You'll be thanking yourself sometime down the  
road...
And:
The rewrite rules don't look right to me, but this hasn't anything to  
do with you original question.
You haven't assigned labels to the qualifier,  blocksubstructurename,  
and end rules but reference them twice in the rule and in the rewrite.
This way, in the rewrite, you will end up with the first references  
twice because ANTLR calls reset() on the RewriteRuleSubtreeStreams.
That's probably not what you meant. Assign labels to the rule  
references and use the labels in the rewrites.

blocksubstructuredefinition
	:	'substructure'
			q1=qualifier? b1=blocksubstructurename? e1=end
		'endsubstructure'
			q2=qualifier? b2=blocksubstructurename? e2=end
		(	entityinsystem+		-> ^('substructure' $q1? $b1? $e1  
'endsubstructure' $q2? $b2? $e2 entityinsystem+ )
		|	channelconnection+	-> ^('substructure' $q1? $b1? $e1  
'endsubstructure' $q2? $b2? $e2 channelconnection+ )
		)
	;

HTH,
-k

-- 
Kay R?pke
http://classdump.org/





From rdclark at gmail.com  Fri Jul 13 00:29:06 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 13 Jul 2007 00:29:06 -0700
Subject: [antlr-interest] Newbie Issues: MismatchedTokenExceptions and
	FailedSyntacticPredicates
In-Reply-To: <b46e0d5e0707121226q67e56969k8752652891753b26@mail.gmail.com>
References: <b46e0d5e0707121226q67e56969k8752652891753b26@mail.gmail.com>
Message-ID: <d3992d900707130029j5f1f2b10j28e2a7e560db5cd1@mail.gmail.com>

On 7/12/07, Benji Smith <benji at benjismith.net> wrote:

> But even on the simplest stuff ("indicator EMA[3]"), I get a
> MismatchedTokenException from the ANTLRWorks interpreter at the top
> level of the expression. I tried rewriting the grammar
> (VTExpression2.g) to use string literals in the rule definitions
> instead of tokens, and the error went away. (Why? Shouldn't the lexer
> & parser be identical at this point, whether the grammar uses tokens
> or string literals in the rules?)

I saw your tokens declared after the parser rules and beflre the lexer
rules. Folks normally define the tokens at the top of the file. That
might have been the problem, but I haven't tried digging through your
grammar and/or the generated code that deeply to see the real issue.

> I don't understand where all of these synpred objects come from. As
> far as I can tell, I'm never actually using a syntactic predicate.

You enabled backtracking which automatically inserts a syntatic
predicate in front of each choice. It's good for rapid prototyping,
but makes tracking down errors more difficult.

I think the emerging best practice is to try developing w/
backtracking off and without specifying a fixed lookahead, then
turning on backtracking and/or setting lookahead on a rule by rule
basis. (There's a wonderfully detailed discussion of this in the
book.)

> I feel a little silly grappling with errors parsing such simple little
> expressions. The stuff I used to do in JavaCC was significantly more
> complex than this. Is it just me, or do many other people find ANTLR a
> lot more difficult to use?

I struggled at first too, but less than with other compiler-building
tools. An artist friend of mine told me that when you pick up a new
tool, expect yourself to lose about half of your skill while using it.
But once you master it you gain new proficiency with _all_ of your
tools.

If I can make a suggestion, break your grammar down to a small kernel
and get that working in ANTLRWorks. Then start extending it and you'll
have a working grammar in no time.

 ...Richard

From rdclark at gmail.com  Fri Jul 13 00:37:31 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 13 Jul 2007 00:37:31 -0700
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <200707120755.35894.rschulz@sonic.net>
References: <200707120755.35894.rschulz@sonic.net>
Message-ID: <d3992d900707130037y1e67defem5a7d6ae14336a041@mail.gmail.com>

Hi Randall,

Try talking to Bill Venners (email address on this page:
http://www.artima.com/consulting.html)

He's big on scala and was doing a talk this week on code generators with ANTLR.

 ...Richard

From kroepke at classdump.org  Fri Jul 13 00:37:05 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 09:37:05 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
Message-ID: <F1C4239F-AEB2-4855-8BF7-D13163212D2C@classdump.org>


On Jul 13, 2007, at 2:05 AM, Wincent Colaiuta wrote:

> One thing to bear in mind is that lexing and parsing are completely  
> separate phases in ANTLR; sure the parser and lexer run at the same  
> time because the parser is just saying "give me a token, give me  
> another token" etc until all tokens are produced, but conceptually  
> because there is no communication from the parser to the lexer you  
> can think of them as two completely separate phases.

Actually, once you use a TokenStream (at least the ones that come  
with the Java and Objective-C targets, dunno about the others), they  
are separate phases even at runtime. That's because a TokenStream  
buffers up all tokens before the parser even gets a chance to say  
nextToken().
Sure, that's an implementation detail but it may matter to some (i.e.  
reading the textual input from a stream, memory considerations, etc.)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From rdclark at gmail.com  Fri Jul 13 00:40:45 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 13 Jul 2007 00:40:45 -0700
Subject: [antlr-interest] Dealing with lists in a tree grammar action
In-Reply-To: <3231BAB1-0ADA-4612-A7E0-497BD4646E3C@apple.com>
References: <BF3ACC05-23E9-4038-A2E7-CC02C3FA955E@apple.com>
	<4BCD5535-4150-41D9-95B9-BBAD6AB0A9EA@apple.com>
	<6AC12A2F-2B8A-49DB-884E-5B3821764C68@cs.usfca.edu>
	<3231BAB1-0ADA-4612-A7E0-497BD4646E3C@apple.com>
Message-ID: <d3992d900707130040v132d1407xe38c35b60ee38d8b@mail.gmail.com>

On 7/12/07, Cameron Esfahani <dirty at apple.com> wrote:

> Richard Clark, in his response, suggested something that seems to work.
> It's not as clean as I'd like, but it does look like it works:

I just keep using ANTLR 2 idioms where we haven't reached nirvana (yet). ;)

 ...R

From win at wincent.com  Fri Jul 13 00:43:45 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 13 Jul 2007 09:43:45 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <000801c7c4e7$b880b280$82d4840a@lba.ca>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
	<000801c7c4e7$b880b280$82d4840a@lba.ca>
Message-ID: <21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>

El 13/7/2007, a las 2:49, Daniel Brosseau escribi?:

> Where I have been coming from is that one grammar file (what  
> follows 'grammar' in the file) would define one language grammar  
> (not two). How the work gets divided up between lexer and parser is  
> a matter of convenience and efficiency but should not change the  
> meaning of the overall grammar and the character streams that gets  
> accepted or rejected by the resulting overall state machine. It  
> seems that in ANTLR's case, the one grammar file defines two  
> grammars (one for the lexer and one for the parser) and how the  
> work gets divided up between the two can have a considerable impact  
> on the character streams accepted or rejected. I get further  
> tripped up because the rules of these two grammars can be  
> interspersed in the file and look as if they mesh seamlessly. Ooof!

I think it's just something you have to accept: you must think of  
your lexer as a completely independent unit from the parser, despite  
the fact a single grammar file can define both a lexer and parser  
(this ability for ANTLR to extract lexer and parser rules from a  
single file is just a convenience provided to you). You could run the  
lexer on on a machine in another room, copy the list of resulting  
tokens using pencil and paper, walk back into the first room and  
manually feed the tokens into the parser and things would work  
exactly as they do now. In other words, the separation of lexer and  
parser is just something that you have to accept and is unlikely to  
ever change.

Cheers,
Wincent


From antlr at mirality.co.nz  Fri Jul 13 00:45:08 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 13 Jul 2007 19:45:08 +1200
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <62BABE024B7C074E9194E9727A41897901383116@dvs-sms-mail01.di
	gi.com>
References: <200707120755.35894.rschulz@sonic.net>
	<200707121728.55256.rschulz@sonic.net> <4696CF16.60005@ca.com>
	<200707121910.06354.rschulz@sonic.net>
	<62BABE024B7C074E9194E9727A41897901383116@dvs-sms-mail01.digi.com>
Message-ID: <20070713074525.E747B11E906@www.antlr.org>

At 14:27 13/07/2007, Hardy, Stephen wrote:
 >The objectionable thing to me was that he included a lexically
 >complete smiley at the end of a parenthesized 
phrase.  Personally,
 >I let the closing paren double up (as in :-) else it appears as 
a
 >double chin smiley.  Is this a rule that is parsable using 
LL(*)?

Ah, but in mail agents that auto-detect the smiley and convert it 
to an image (like mine), your way means you have an unterminated 
parenthetical, which is definitely a syntax error.  (I always 
double up :))


From kroepke at classdump.org  Fri Jul 13 00:59:25 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 09:59:25 +0200
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
In-Reply-To: <21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
	<000801c7c4e7$b880b280$82d4840a@lba.ca>
	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>
Message-ID: <22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>


On Jul 13, 2007, at 9:43 AM, Wincent Colaiuta wrote:

> In other words, the separation of lexer and parser is just  
> something that you have to accept and is unlikely to ever change.

Also, were the lexer dependent upon the parser you couldn't store the  
tokens in an archive nor could you use a totally different lexer  
(e.g. a handwritten one, output from another lexer generator).

It's sometimes hard to draw the line between the two, especially for  
"weird" languages, where you sometimes feel the urge to somehow  
direct the lexer from the parser, unfortunately. But keeping them  
separate is a Good Thing(tm), IMHO.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Fri Jul 13 01:16:43 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 13 Jul 2007 20:16:43 +1200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <95484CAA-3632-4788-BB6B-E9DC7C4A4611@cs.usfca.edu>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<95484CAA-3632-4788-BB6B-E9DC7C4A4611@cs.usfca.edu>
Message-ID: <20070713081656.CBB6211E9ED@www.antlr.org>

At 11:18 13/07/2007, Terence Parr wrote:
 >> Case 1:
 >> grammar lex;
 >> KEYWORD : 'a' 'b' 'c';
 >> OTHER : 'a' | 'b' | 'c';
 >> program : (  KEYWORD  |  OTHER  )*
 >>
 >> Input: "aba" chokes on second a
 >>
 >> Case 2:
 >> grammar lex;
 >> kEYWORD : 'a' 'b' 'c';
 >> oTHER : 'a' | 'b' | 'c';
 >> program : (  kEYWORD |  oTHER  )*
 >>
 >> Input: "aba" outputs oTHER oTHER oTHER
 >>
 >> Same grammar, two different state machines.
 >
 >Well, more that the first grammar has 2 lexer rules and the
 >second has three: one for each char.

Yes, which simply means that the lexer is different.  I don't 
think that was the point :)  For the first example, you should 
consider the lexer *only*, and in the second example, the parser 
*only*.  The other halves are irrelevant.

In the first case, the input to the lexer is the character 
sequence 'a','b','a'.  In the second case, the input to the 
*parser* is the token sequence A,B,A.  There is no fundamental 
difference here -- the rules for dealing with that input appear 
the same and therefore should result in the same output.  But they 
don't.

As you said, the fundamental DFA engine behind the lexer and 
parser is the same, so the difference must lie elsewhere.  And 
there is one difference: the lexer has one additional implicit 
rule, the Tokens rule.  The parser has no equivalent; or rather 
the closest equivalent it does have (the 'program' rule) contains 
a cycle (*), so generates a very different DFA.

Restating the examples a bit (and including the implicit rule) 
makes this more obvious:

lexer grammar Lex;
KEYWORD : 'a' 'b' 'c';
OTHER : 'a' | 'b' | 'c';
Tokens : (  KEYWORD  |  OTHER  );

parser grammar Parse;
kEYWORD : A B C;
oTHER : A | B | C;
program : (  kEYWORD | oTHER  )*;

The parser "works"; the lexer doesn't.  It has to be the Tokens 
rule.

(Since the lexer example is explicitly showing an implicit rule, 
it's not valid ANTLR -- if you actually want to run it in ANTLR, 
you'd need to do one of the following:
1. remove the Tokens rule
2. make the KEYWORD and OTHER rules fragments, and possibly rename 
the Tokens rule
Similarly the parser would need to import its token vocab from 
somewhere.)


From antlr at mirality.co.nz  Fri Jul 13 01:21:55 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 13 Jul 2007 20:21:55 +1200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
	<000801c7c4e7$b880b280$82d4840a@lba.ca>
	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>
	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>
Message-ID: <20070713082206.22E9B11EB3C@www.antlr.org>

At 19:59 13/07/2007, Kay Roepke wrote:
 >> In other words, the separation of lexer and parser is just
 >> something that you have to accept and is unlikely to ever
 >> change.
 >
 >Also, were the lexer dependent upon the parser you couldn't 
store
 >the tokens in an archive nor could you use a totally different
 >lexer (e.g. a handwritten one, output from another lexer 
generator).
 >
 >It's sometimes hard to draw the line between the two, especially 

 >for "weird" languages, where you sometimes feel the urge to 
somehow
 >direct the lexer from the parser, unfortunately. But keeping 
them
 >separate is a Good Thing(tm), IMHO.

Yep.  Definitely.

(I kinda prefer V2's style a little in that regard, since it made 
it more explicit that they were separate by not permitting 
combined grammars, thereby removing some of the potential for 
confusion.  But once I figured out the whole 
first-letter-uppercase bit I was happy with the V3 style 
too.  Though I tend to avoid using character literals in the 
parser because I prefer getting nice token names ;))


From ens06jpk at cs.umu.se  Fri Jul 13 01:49:07 2007
From: ens06jpk at cs.umu.se (ens06jpk)
Date: Fri, 13 Jul 2007 10:49:07 +0200
Subject: [antlr-interest] Tree walker simple quastion
Message-ID: <46973C83.2000305@cs.umu.se>

I'm not sure if this(more or less) post was already sent because I had 
some mail-software problems:(. However, if anyone can help me I will be 
totally grateful.
Hi,
I want count IF statement in my Java AST build from source.java file. 
How can I implement conditions for nodes in tree walkers?
I use a java.g grammar from ANTLR example files for creating an AST and 
java.tree.g from tree walking. However when I try to add my own function:
----
somecalc returns [int cnt]
{
   cnt=0;
}
   :    #("if" expression stat (stat)? ) {cnt = cnt+1;}
   ;
----
When I run antlr on "source.java" file  some errors appears. It says 
that found [package ...] where was expecting for IF node. Does anyone 
know how to check all nodes in AST and count for instance IF statements ?
Thanks for any help

janusz

From win at wincent.com  Fri Jul 13 02:26:32 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Fri, 13 Jul 2007 11:26:32 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <20070713081656.CBB6211E9ED@www.antlr.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<95484CAA-3632-4788-BB6B-E9DC7C4A4611@cs.usfca.edu>
	<20070713081656.CBB6211E9ED@www.antlr.org>
Message-ID: <47E016E2-0004-49AA-9A95-73C22784EAD5@wincent.com>

El 13/7/2007, a las 10:16, Gavin Lambert escribi?:

> As you said, the fundamental DFA engine behind the lexer and parser  
> is the same, so the difference must lie elsewhere.  And there is  
> one difference: the lexer has one additional implicit rule, the  
> Tokens rule.  The parser has no equivalent; or rather the closest  
> equivalent it does have (the 'program' rule) contains a cycle (*),  
> so generates a very different DFA.
>
> Restating the examples a bit (and including the implicit rule)  
> makes this more obvious:
>
> lexer grammar Lex;
> KEYWORD : 'a' 'b' 'c';
> OTHER : 'a' | 'b' | 'c';
> Tokens : (  KEYWORD  |  OTHER  );
>
> parser grammar Parse;
> kEYWORD : A B C;
> oTHER : A | B | C;
> program : (  kEYWORD | oTHER  )*;
>
> The parser "works"; the lexer doesn't.  It has to be the Tokens rule.
>
> (Since the lexer example is explicitly showing an implicit rule,  
> it's not valid ANTLR -- if you actually want to run it in ANTLR,  
> you'd need to do one of the following:
> 1. remove the Tokens rule
> 2. make the KEYWORD and OTHER rules fragments, and possibly rename  
> the Tokens rule
> Similarly the parser would need to import its token vocab from  
> somewhere.)

Very good points, Gavin. It's clear if you look at the prediction  
code from the generated mTokens() method in the lexer grammar; note  
how seeing 'ab' is considered enough to predict 'abc':

         if ( (LA1_0=='a') ) {
             int LA1_1 = input.LA(2);

             if ( (LA1_1=='b') ) {
                 alt1=2;
             }
             else {
                 alt1=1;}
         }
         else if ( ((LA1_0>='b' && LA1_0<='c')) ) {
             alt1=1;
         }
         else {
             NoViableAltException nvae =
                 new NoViableAltException("1:1: Tokens : ( OTHER |  
KEYWORD );", 1, 0, input);

             throw nvae;
         }

And compare it with the prediction code in the "equivalent" parser  
grammar; here ABC will only be predicted if the parser sees ABC:

                 int alt1=3;
                 int LA1_0 = input.LA(1);

                 if ( (LA1_0==A) ) {
                     int LA1_2 = input.LA(2);

                     if ( (LA1_2==B) ) {
                         int LA1_4 = input.LA(3);

                         if ( (LA1_4==C) ) {
                             alt1=1;
                         }
                         else if ( (LA1_4==EOF||(LA1_4>=A &&  
LA1_4<=B)) ) {
                             alt1=2;
                         }


                     }
                     else if ( (LA1_2==EOF||LA1_2==A||LA1_2==C) ) {
                         alt1=2;
                     }


                 }
                 else if ( ((LA1_0>=B && LA1_0<=C)) ) {
                     alt1=2;
                 }

And I guess you're spot on in identifying that the cause for the  
difference in the prediction DFA is that the "program" rule has a (*)  
cycle and the synthesized rule corresponding to mTokens() does not.

The other obvious difference is that the lexer throws a  
NoViableAltException if it can't tokenize, whereas the parser just  
falls off the end of the program() method. You could add an explicit  
EOF to the program rule but that doesn't change the prediction logic,  
it just falls through the prediction DFA, hits the default case of  
the switch statement, exits the loop and then tries to match() an EOF  
(failing and throwing a RecognitionException).

Cheers,
Wincent


From kroepke at classdump.org  Fri Jul 13 02:48:14 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 11:48:14 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <20070713082206.22E9B11EB3C@www.antlr.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
	<000801c7c4e7$b880b280$82d4840a@lba.ca>
	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>
	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>
	<20070713082206.22E9B11EB3C@www.antlr.org>
Message-ID: <A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>


On Jul 13, 2007, at 10:21 AM, Gavin Lambert wrote:

> (I kinda prefer V2's style a little in that regard, since it made  
> it more explicit that they were separate by not permitting combined  
> grammars, thereby removing some of the potential for confusion.   
> But once I figured out the whole first-letter-uppercase bit I was  
> happy with the V3 style too.  Though I tend to avoid using  
> character literals in the parser because I prefer getting nice  
> token names ;))

:)

ANTLRWorks really helps keeping the confusion to a minimum (or for  
that matter any kind of syntax highlighting is step in the right  
direction).
Once we have the ANTLR grammar ported to v3 I'll start working on an  
editor, too. ANTLRWorks is cool, I love it, but I really really do  
not like Java desktop apps, esp. on the Mac.

I think combined grammars are a really big improvement for  
readability and development speed. Having said that, I can imagine it  
to be helpful to have a different "view" onto a combined grammar,  
which could show you the lexer and parser parts separately. That  
might help to get a better view of what really happens behind the  
scenes :)

Just a thought,

-k
-- 
Kay R?pke
http://classdump.org/





From vbar at comp.cz  Fri Jul 13 03:55:10 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Fri, 13 Jul 2007 12:55:10 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>	<004101c7c4d2$84d58330$9bd0840a@lba.ca>	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>	<000801c7c4e7$b880b280$82d4840a@lba.ca>	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>	<20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
Message-ID: <46975A0E.7020503@comp.cz>

Kay Roepke wrote:
> Once we have the ANTLR grammar ported to v3 I'll start working on an 
> editor, too. ANTLRWorks is cool, I love it, but I really really do not 
An Emacs mode would be cool... :-)

	Bye
		Vasek


From kroepke at classdump.org  Fri Jul 13 03:54:22 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 12:54:22 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <46975A0E.7020503@comp.cz>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>	<004101c7c4d2$84d58330$9bd0840a@lba.ca>	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>	<000801c7c4e7$b880b280$82d4840a@lba.ca>	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>	<20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
	<46975A0E.7020503@comp.cz>
Message-ID: <26300508-4D21-4B8F-A6B0-833787781B0B@classdump.org>


On Jul 13, 2007, at 12:55 PM, Vaclav Barta wrote:

> Kay Roepke wrote:
>> Once we have the ANTLR grammar ported to v3 I'll start working on  
>> an editor, too. ANTLRWorks is cool, I love it, but I really really  
>> do not
> An Emacs mode would be cool... :-)

aah, I have left that sin behind :)

still:
http://antlr-mode.sourceforge.net/

it's for v2, i guess, but with a bit of tweaking it should be easy to  
convert.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From vbar at comp.cz  Fri Jul 13 04:16:20 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Fri, 13 Jul 2007 13:16:20 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <26300508-4D21-4B8F-A6B0-833787781B0B@classdump.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>	<004101c7c4d2$84d58330$9bd0840a@lba.ca>	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>	<000801c7c4e7$b880b280$82d4840a@lba.ca>	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>	<20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
	<46975A0E.7020503@comp.cz>
	<26300508-4D21-4B8F-A6B0-833787781B0B@classdump.org>
Message-ID: <46975F04.9040804@comp.cz>

Kay Roepke wrote:
> On Jul 13, 2007, at 12:55 PM, Vaclav Barta wrote:
>> Kay Roepke wrote:
>>> Once we have the ANTLR grammar ported to v3 I'll start working on an 
>>> editor, too. ANTLRWorks is cool, I love it, but I really really do not
>> An Emacs mode would be cool... :-)
> aah, I have left that sin behind :)
> 
> still:
> http://antlr-mode.sourceforge.net/
Well, the basics shouldn't be that hard, but I've been thinking about 
something more like nXML, really understanding the grammar and its 
errors - which, I'm afraid, I'm not going to implement any time soon... :-)

	Bye
		Vasek


From ganelin at mail.com  Fri Jul 13 05:34:03 2007
From: ganelin at mail.com (pganelin)
Date: Fri, 13 Jul 2007 08:34:03 -0400
Subject: [antlr-interest] Recursive lexer rule: strange error message
Message-ID: <4697713B.1060901@mail.com>

I need to create a very complex lexer for some DSL.

To give you an idea of what should be considered a single token, I put 
some tokens below, one per string.

()
((a)(a))
(%()
(%(%()
(%)%))
(/* anything here is ignored, including parentheses)))))(((((((((*/)


Brief description: If you have matching parentheses than you do not need 
to quote, prefix any unmatching parentheses with the character ?%?. The 
latter is a quoting character for some macro language. Also you can 
directly embed C style comments into the lexem (so!) and that part would 
be ignored. The rest would still generate a single token. So the example 
on the last line would result in the token:
()

Following the example of page 108 of ANTLR3 book (with recursive 
curlies) I did something like this. I am ignoring ?%? for now.



fragment
PARENTH
:
'(' ( PARENTH | ( '/*' ) => COMMENT | '/' | ~( '(' | ')' | '/' ) )* ')'
;

fragment
COMMENT
:
'/*' ( options {greedy=false;} : . )* '*/'
;



When I tried to run antlr3 on this I got a strange error message, which 
I do not understand.

[antlr3] warning(206): Macro.g:439:68: Alternative 3: after matching 
input such as '/''*''* ''(''(''(''*''(' decision cannot predict what 
comes next due to recursion overflow to PARENTH from PARENTH.


If I remove the COMMENT part I have no warning.

Is it a bug in ANTLR or my error? Any help would be greatly appreciated. 
I am very hesitant to move this functionality to the parser, because it 
is really a single token from a grammar point of view.

Pavel.


From Stephen.Parker at pi-shurlok.com  Fri Jul 13 06:32:32 2007
From: Stephen.Parker at pi-shurlok.com (Stephen Parker)
Date: Fri, 13 Jul 2007 14:32:32 +0100
Subject: [antlr-interest] Newbie question on lexing '{' and '{action();}'
Message-ID: <5D8503D66B71984E8D7F6651BA74D05941AEF6@yew.PS.LOCAL>

This seems to be some kind of FAQ, but I haven't found an answer.  
I want to parse a language like this:
 
	machine G {
	 /* xxx. */
	 id1 {action1();}
	 id2 {action2();}
	}

And I have a grammar like this:
 
	grammar Test;
 
	prog : 'machine' ID OPEN state+ CLOSE;
	state : case+ ;
	case : ID ACTION ;
 
	OPEN :  '%{';  // Would like '{'.
	CLOSE : '%}';  // Would like '}'.

	ACTION :   '{' ( ACTION | ~('}'|'{') )* '}' ;
	ID  :   ('a'..'z'|'A'..'Z')+ ;
	COMMENT : '/*' ( options {greedy=false;} : . )* '*/' {skip();};
 
Notice that the braces '{' '}' are both ordinary tokens, and can
represent an
(ANTLRish) action.  I can't work out how to write the lexer rules for
this
(which is why I have '%{' at the moment).

Is it possible to get what I want here?

Many thanks,
stephen

From ld at galador.net  Fri Jul 13 06:35:02 2007
From: ld at galador.net (Lloyd Dupont)
Date: Fri, 13 Jul 2007 23:35:02 +1000
Subject: [antlr-interest] Debuging C# language target with ANTLRWorks...
Message-ID: <00a601c7c552$9e26c6c0$60f46c3a@vulcain>

>From the ANTLR book: 
"Because ANTLRWorks communicates with running parsers via sockets, the ANTLRWorks debugger works with any ANTLR language target"

Now I wonder, how can I test my grammar in C#?
Currently I am running with dummay Java method, which I should replace with C# code once it will work.
I tried to debug my C# grammar initially but it didn't work.

I probably missed something, buty someone might know, what are the steps to debug my C# Parser from ANTLRWorks?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/4270d11c/attachment.html 

From daniel at lba.ca  Fri Jul 13 07:02:39 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Fri, 13 Jul 2007 10:02:39 -0400
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<95484CAA-3632-4788-BB6B-E9DC7C4A4611@cs.usfca.edu>
	<20070713081656.CBB6211E9ED@www.antlr.org>
Message-ID: <002e01c7c556$796ffc30$9bd0840a@lba.ca>

Hi,

Thank you all for the clear responses. I think I'm getting it.

>From the clarified grammar below, seperating the Lexer from the Parser, I 
can see that 'ab' is an error. From what I understand the DFA for the Lexer 
looks something like:

1 -- a --> 2 -- b --> 3 -- c --> 4
   -- b --> 5
   -- c --> 6

with 2, 4, 5 and 6 being accepting states. So after consumming characters 
and advancing through the state machine, ANTLR typically comes to a point 
where it can no longer advance and  it stops. If it stops on an accepting 
state it returns the appropriate token, if not it errors out. So on 'aba' it 
chokes on the second 'a'. But in a way, the character it stops on is always 
an error, a character that does not allow it to continue. ANTLR accepts this 
as ok if it is already on an accepting state and returns the token.

With LEX, the DFA is the same, but LEX makes an additional consession. It 
seems to accept that the character it stops on is part of a larger stream of 
characters that it will have to deal with later. So when it stops it looks 
to see if it is on an accepting state and if so returns that token but if it 
is not on an accepting state it asks itself the further question: What was 
the last accepting state I saw because the extra characters I consumed might 
just be part of the next token and not an error on the current token. So it 
looks back to find the last accepting state and leaves the extra characters 
for next time. This behaviour of the Lexer is realistic and useful.

Could this be done in ANTLR by just keeping track of the last longest 
accepting state in some variable. Evidently, if there are intervening 
actions, then you are really talking of a different grammar but if there are 
no interspersed  actions could this not be done?

Regards,

Daniel

----- Original Message ----- 
From: "Gavin Lambert" <antlr at mirality.co.nz>
To: "Terence Parr" <parrt at cs.usfca.edu>; "ANTLR-Interest" 
<antlr-interest at antlr.org>
Sent: Friday, July 13, 2007 4:16 AM
Subject: Re: [antlr-interest] Understanding priorities in lexing (newbie)


> At 11:18 13/07/2007, Terence Parr wrote:
> >> Case 1:
> >> grammar lex;
> >> KEYWORD : 'a' 'b' 'c';
> >> OTHER : 'a' | 'b' | 'c';
> >> program : (  KEYWORD  |  OTHER  )*
> >>
> >> Input: "aba" chokes on second a
> >>
> >> Case 2:
> >> grammar lex;
> >> kEYWORD : 'a' 'b' 'c';
> >> oTHER : 'a' | 'b' | 'c';
> >> program : (  kEYWORD |  oTHER  )*
> >>
> >> Input: "aba" outputs oTHER oTHER oTHER
> >>
> >> Same grammar, two different state machines.
> >
> >Well, more that the first grammar has 2 lexer rules and the
> >second has three: one for each char.
>
> Yes, which simply means that the lexer is different.  I don't think that 
> was the point :)  For the first example, you should consider the lexer 
> *only*, and in the second example, the parser *only*.  The other halves 
> are irrelevant.
>
> In the first case, the input to the lexer is the character sequence 
> 'a','b','a'.  In the second case, the input to the *parser* is the token 
> sequence A,B,A.  There is no fundamental difference here -- the rules for 
> dealing with that input appear the same and therefore should result in the 
> same output.  But they don't.
>
> As you said, the fundamental DFA engine behind the lexer and parser is the 
> same, so the difference must lie elsewhere.  And there is one difference: 
> the lexer has one additional implicit rule, the Tokens rule.  The parser 
> has no equivalent; or rather the closest equivalent it does have (the 
> 'program' rule) contains a cycle (*), so generates a very different DFA.
>
> Restating the examples a bit (and including the implicit rule) makes this 
> more obvious:
>
> lexer grammar Lex;
> KEYWORD : 'a' 'b' 'c';
> OTHER : 'a' | 'b' | 'c';
> Tokens : (  KEYWORD  |  OTHER  );
>
> parser grammar Parse;
> kEYWORD : A B C;
> oTHER : A | B | C;
> program : (  kEYWORD | oTHER  )*;
>
> The parser "works"; the lexer doesn't.  It has to be the Tokens rule.
>
> (Since the lexer example is explicitly showing an implicit rule, it's not 
> valid ANTLR -- if you actually want to run it in ANTLR, you'd need to do 
> one of the following:
> 1. remove the Tokens rule
> 2. make the KEYWORD and OTHER rules fragments, and possibly rename the 
> Tokens rule
> Similarly the parser would need to import its token vocab from somewhere.)
> 


From jaluber at gmx.de  Fri Jul 13 07:16:41 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 13 Jul 2007 16:16:41 +0200
Subject: [antlr-interest] Debuging C# language target with ANTLRWorks...
In-Reply-To: <00a601c7c552$9e26c6c0$60f46c3a@vulcain>
References: <00a601c7c552$9e26c6c0$60f46c3a@vulcain>
Message-ID: <46978949.3060109@gmx.de>

Lloyd Dupont wrote:
> From the ANTLR book:
> "Because ANTLRWorks communicates with running parsers via sockets, the
> ANTLRWorks debugger works with any ANTLR language target"
>  
> Now I wonder, how can I test my grammar in C#?
> Currently I am running with dummay Java method, which I should replace
> with C# code once it will work.
> I tried to debug my C# grammar initially but it didn't work.
>  
> I probably missed something, buty someone might know, what are the steps
> to debug my C# Parser from ANTLRWorks?

I've attached the source code of a file which handles remote debugging.
Adapt the code to your situation, start the parser and start remote
debugging in ANTLRworks.

Best regards,
Johannes Luber
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ANTLR3ToRelaxNG.cs
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/af9eba6a/attachment.pl 

From kverma at yahoo.com  Fri Jul 13 07:23:22 2007
From: kverma at yahoo.com (Kamal Verma)
Date: Fri, 13 Jul 2007 07:23:22 -0700 (PDT)
Subject: [antlr-interest] Parsing any tree using tree grammer?
Message-ID: <823594.76167.qm@web54602.mail.re2.yahoo.com>

Hi All,

Does anybody have thoughts parsing any tree of type "ITree" using tree grammar. 
Can this be done ? I looked at ITree interface, I was wondering is there any more simpler interface I can use to create parse-able tree ??
Something like,

interface ITree
{
      int ChildCount;
     ITree getChild(int i);
}

Any thoughts ? comments ?

-Kamal



      ____________________________________________________________________________________
Shape Yahoo! in your own image.  Join our Network Research Panel today!   http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/600e2d49/attachment.html 

From ld at galador.net  Fri Jul 13 07:26:38 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 14 Jul 2007 00:26:38 +1000
Subject: [antlr-interest] Decision can match input such as "DOT ID" using
	multiple alternative
Message-ID: <00b901c7c559$d3f098b0$60f46c3a@vulcain>

The compilers tell me. My problem is it's obvious but it *shouldn't be a problem", how can I make ANTLR be happy?

I have a grammar like that

primary:
    (atom -> atom)
    (
        (LPAREN expressionList RPAREN -> ^(LPAREN $primary expressionList)) // method call
        // read object DOT property name
        | (DOT ID -> ^(DOT $primary ID)) 
    )*
    ;
atom:
    INT -> ^(CONSTANT INT)
    | STRING -> ^(CONSTANT STRING)
    identifier -> identifier
    ;
identifier:
    // read identifier or class name
    (id0=ID->$id0)
        (DOT id1=ID->$(DOT $identifier $id1)) * 
            ((LT identifier GT) => LT id2=identifier GT -> $(GENERIC $identifier $id2))?

now it says there are multiple way to access the tokens ID, and that's true.
howver I assume identifier consume all that it can, and primary will consume only those ID that haven't been consumed by identifier.
(on top of that I generate the same AST in both case...)

Anyway, could some help me to solve this problem?
I need to be able to use ID DOT ID in the 'identifer' property as I need to call this rule in 'LT identifier GT'.
yet I need it in the primary, as I need to access the property of any object....

how can I solve that?!?!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/72391add/attachment-0001.html 

From ld at galador.net  Fri Jul 13 07:27:35 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 14 Jul 2007 00:27:35 +1000
Subject: [antlr-interest] Debuging C# language target with ANTLRWorks...
References: <00a601c7c552$9e26c6c0$60f46c3a@vulcain> <46978949.3060109@gmx.de>
Message-ID: <00c501c7c559$f91e4420$60f46c3a@vulcain>

Awesome, thanks!
I will look at that.. tomorrow (times to go to bed now, I reckon, mmhh. 
still debugging...).

----- Original Message ----- 
From: "Johannes Luber" <jaluber at gmx.de>
To: <antlr-interest at antlr.org>
Sent: Saturday, July 14, 2007 12:16 AM
Subject: Re: [antlr-interest] Debuging C# language target with ANTLRWorks...


> Lloyd Dupont wrote:
>> From the ANTLR book:
>> "Because ANTLRWorks communicates with running parsers via sockets, the
>> ANTLRWorks debugger works with any ANTLR language target"
>>
>> Now I wonder, how can I test my grammar in C#?
>> Currently I am running with dummay Java method, which I should replace
>> with C# code once it will work.
>> I tried to debug my C# grammar initially but it didn't work.
>>
>> I probably missed something, buty someone might know, what are the steps
>> to debug my C# Parser from ANTLRWorks?
>
> I've attached the source code of a file which handles remote debugging.
> Adapt the code to your situation, start the parser and start remote
> debugging in ANTLRworks.
>
> Best regards,
> Johannes Luber
>


--------------------------------------------------------------------------------


> namespace Kerriv.Antlr3ToRelaxNG {
> using Antlr.Runtime;
> using Antlr.Runtime.Debug;
> using Antlr.Runtime.Tree;
> using Antlr.StringTemplate;
> using Antlr.StringTemplate.Language;
> using System;
> using System.IO;
> using System.Xml.Serialization;
> using Kerriv.ANTRL3ToRelaxNG;
>
> public class ANTRL3ToRelaxNG {
> public static StringTemplateGroup templates;
> private static string inputFileName;
> private static string templateFileName;
> private static string ruleNamingFileName;
> private static string startRule;
> private static bool debugMode = false;
> private static bool parseTree = false;
>
> public static void Main(string[] args) {
> // Use a try/catch block for parser exceptions
> try {
> EvaluateCommandLineParameters(args);
>
> templates = new StringTemplateGroup(new StreamReader(templateFileName),
> typeof(AngleBracketTemplateLexer));
>
> ICharStream input = new ANTLRFileStream(inputFileName);
> ANTLR3ToRelaxNGLexer lexer = new ANTLR3ToRelaxNGLexer(input);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> ANTLR3ToRelaxNGParser parser;
> ParseTreeBuilder builder = new ParseTreeBuilder("ANTRL3ToRelaxNG");
> if (parseTree) {
> parser = null; //new ANTLR3ToRelaxNGParser(tokens, builder);
> } else {
> parser = new ANTLR3ToRelaxNGParser(tokens);
> }
>
> ANTLR3ToRelaxNGParser.grammarDef_return r = parser.grammarDef();
> CommonTree r0 = ((CommonTree) r.tree);
> if (parseTree) {
> ParseTree pt = builder.GetTree();
> } else {
> // Missing: Setting the start rule!
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(r0);
> nodes.TokenStream = tokens;
> ANTLR3ToRelaxNGGenerator walker = new ANTLR3ToRelaxNGGenerator(nodes);
> walker.TemplateLib = templates;
> RuleReturnScope r1 = walker.grammarDef();
> Console.Out.WriteLine(r1.Template.ToString());
> }
> } catch (System.Exception e) {
> Console.Error.WriteLine("exception: " + e);
> Console.Error.WriteLine(e.StackTrace);
> }
> }
>
> /// <summary>
> /// This functions exits when invalidate parameters are given
> /// </summary>
> /// <param name="args"></param>
> private static void EvaluateCommandLineParameters(string[] args) {
> bool acceptArguments = false;
>
> if ((args.Length >= 2) && (args.Length <= 4)) {
> // Default template file
> templateFileName = "ANTRL3ToRelaxNG.stg";
>
> if (args.Length == 2) {
> inputFileName = args[0];
> startRule = args[1];
> acceptArguments = true;
> } else if (args.Length == 3) {
> // Either debug option or output template is argument 0
> if (args[0].Trim().ToLower() == "-debug") {
> debugMode = true;
> } else if (args[0].Trim().ToLower() == "-parseTree") {
> parseTree = true;
> } else {
> templateFileName = args[0];
> }
> inputFileName = args[1];
> startRule = args[2];
> acceptArguments = true;
> } else {
> templateFileName = args[1];
> inputFileName = args[2];
> startRule = args[3];
> if (args[0].Trim().ToLower() == "-debug") {
> debugMode = true;
> acceptArguments = true;
> }
> if (args[0].Trim().ToLower() == "-parseTree") {
> parseTree = true;
> acceptArguments = true;
> }
> }
> }
>
> if (acceptArguments) {
> // Ensure full pathnames
> if (!Path.IsPathRooted(templateFileName)) {
> templateFileName = Path.Combine(Environment.CurrentDirectory,
> templateFileName);
> }
> if (!Path.IsPathRooted(inputFileName)) {
> inputFileName = Path.Combine(Environment.CurrentDirectory, inputFileName);
> }
> // Derive ruleNamingFileName from inputFileName
> ruleNamingFileName = Path.GetDirectoryName(inputFileName) + 
> Path.PathSeparator +
> Path.GetFileNameWithoutExtension(inputFileName) + ".xml";
> } else {
> Console.Error.WriteLine("Usage: ANTLR3ToRelaxNG [-debug|-parseTree] 
> [<output-template-file>] <grammar-input-file> <start-rule>");
> Environment.Exit(1);
> }
> }
> }
> } 


From Pranita.Chaudhari at eads.com  Fri Jul 13 07:36:48 2007
From: Pranita.Chaudhari at eads.com (Chaudhari, Pranita, OPEE14)
Date: Fri, 13 Jul 2007 16:36:48 +0200
Subject: [antlr-interest] how to solve 'code too large' problem?
Message-ID: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>

Hello,
 
I am using Antlr V3 for writing grammar to parse UML Model (exported to XMI).For that I created individual token for each UML element, now the number of tokens are more than 150 and it creates large lexer java file. And   java compiler throws  following error:
 
                   xmiLexerLexer.java:7488: code too large
                        public void mTokens( )  throws RecognitionException{
 
Is it possible to split the Lexer grammar file in to two  and import tokens from both files into Parser grammar file?
 
I also want to apply 'UML model design rules' on the parsed data and check whether the model is according to design rules or not. How can I write Antlr grammar for this in separate grammar file  and apply it to parsed XMI data.
 
Design rules can be like:
-  Class names should start with a capital letter.
 
 
-Thanks 
Pranita
 
 
 
 
 
 
Pranita Chaudhari
EADS Deutschland GmbH 
Defence & Security 
Defence Electronics 
OPEE14 IFF Processing 
85716 Unterschlei?heim - Deutschland 
Tel: +49 (89) 3179 2294
e-mail: pranita.chaudhari at eads.com <mailto:pranita.chaudhari at eads.com> 
 
www.eads.com
 
EADS Deutschland GmbH 
Registered Office: Ottobrunn 
District Court of Munich HRB 107648 
Chairman of the Supervisory Board:Dr. Thomas Enders 
Managing Directors:Dr. Stefan Zoller (Chairman), Michael Hecht 
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
This E-mail and any attachment(s) to it are for the addressee's use only.
It is strictly confidential and may contain legally privileged information. No confidentiality or privilege is waived or lost by any mistransmission.
If you are not the intended addressee, then please delete it from your system and notify the sender immediateley. You are hereby notified that any use,
disclosure, copying or any action taken in reliance on it is strictly prohibited and may be unlawful. - Thank you. 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/9d6d2e4f/attachment.html 

From ld at galador.net  Fri Jul 13 07:41:14 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 14 Jul 2007 00:41:14 +1000
Subject: [antlr-interest] problem with backtracking
Message-ID: <00d401c7c55b$de329060$60f46c3a@vulcain>

Hre is my one of my rule:
========
identifier
 options
 {
  backtrack=true;
  memoize=true;
 } 
 : ((  { IsXamlPrefix(input.LT(1).getText()) }? xaml=ID COLON )? id0=ID -> ^( ID[$id0] ^( XAMLNS $xaml )? $id0 ) )
  ( DOT id1=ID -> ^( DOT $identifier $id1 ) )*
  ( LT gt+=identifier (COMMA gt+=identifier)* GT -> ^( GENERICTYPE $identifier $gt+ ) )?
 ;
========

when I try to compile the grammer, it complains:
===
     [fatal] rule identifier has non-LL(*) decision due to recursive rule invocations for alts 1,2. Resolve by left-factoring or using syntactic predicates or using backtrach=true option
===

but but but.... I set backtrack to true!!!!

I had a predictae before but, while testing, I noticed it didn't pick up a LT identifier GT, exiting the rule instead, so I decided to try without the predicate...

isn't ANTLR greedy?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/04f21446/attachment.html 

From rschulz at sonic.net  Fri Jul 13 08:18:50 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 08:18:50 -0700
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
Message-ID: <200707130818.50806.rschulz@sonic.net>

On Friday 13 July 2007 07:36, Chaudhari, Pranita, OPEE14 wrote:
> Hello,
>
> I am using Antlr V3 for writing grammar to parse UML Model (exported
> to XMI).

I have not been able to think of a reason to write an ANTLR parser for 
an XML document format.

Can someone help me see why one would not use one of the existing XML 
parsers and other XML-based tools when dealing with XML documents?


Randall Schulz

From rschulz at sonic.net  Fri Jul 13 08:20:39 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 08:20:39 -0700
Subject: [antlr-interest] Parsing any tree using tree grammer?
In-Reply-To: <823594.76167.qm@web54602.mail.re2.yahoo.com>
References: <823594.76167.qm@web54602.mail.re2.yahoo.com>
Message-ID: <200707130820.39359.rschulz@sonic.net>

On Friday 13 July 2007 07:23, Kamal Verma wrote:
> Hi All,
>
> Does anybody have thoughts parsing any tree of type "ITree" using
> tree grammar. Can this be done ? I looked at ITree interface,

What is ITree? org.antlr.Tree is the interface that must be implemented 
if a tree is to be parseable in an ANTLR tree parser, right?


> I was wondering is there any more simpler interface I can use to
> create parseable tree??

Well, Tree is not really an exceptionally complex interface to 
implement. If you already have a class or classes that are essentially 
tree-structureed, then you should write an adaptor class that makes 
that tree structure appear to the ANTLR tree parser like its Tree 
interface.

I don't think there's a way to short-cut that task.


> Something like,
> 
> interface ITree
> {
>       int ChildCount;
>      ITree getChild(int i);
> }
>
> Any thoughts ? comments ?
>
> -Kamal


Randall Schulz

From ld at galador.net  Fri Jul 13 08:30:11 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 14 Jul 2007 01:30:11 +1000
Subject: [antlr-interest] Help please, is 'bactrack=true' working?
Message-ID: <00ef01c7c562$b7817510$60f46c3a@vulcain>

I am running and debugging with ANTLR 1.0.2
When I try to debug the rule below
====
classname
options { greedy=true; backtrack=true; }
 : ((  { IsXamlPrefix(input.LT(1).getText()) }? xaml=ID COLON )? id0=ID -> ^( ID[$id0] $id0 ^( XAMLNS $xaml )? ) )
  ( DOT id1=ID -> ^( DOT $classname $id1 ) )*
  ( /*(LT classname (COMMA classname)* GT)=> */ LT gt+=classname (COMMA gt+=classname)* GT -> ^( GENERICTYPE $classname $gt+ ) )?
 ; 
====
compilation fails, telling me to solve the problem by using 'backtrack=true'.
But, as you can see, backtrack is already set to true?!?!?!?

furthermore if I use predictae like that
=======
classname
options { greedy=true; backtrack=true; }
 : ((  { IsXamlPrefix(input.LT(1).getText()) }? xaml=ID COLON )? id0=ID -> ^( ID[$id0] $id0 ^( XAMLNS $xaml )? ) )
  ( DOT id1=ID -> ^( DOT $classname $id1 ) )*
  ( /*(LT classname (COMMA classname)* GT)=> */ LT gt+=classname (COMMA gt+=classname)* GT -> ^( GENERICTYPE $classname $gt+ ) )?
 ; 
=======
when I try to debug and evaluate:

==========
identifier
options { greedy=true; backtrack=true; }
 : (classname) => classname -> classname
 | ID -> ^(ID ID)
 ;
==========

with a simple string like: "a.b<c,d>" it fails to read the class name and just return the ID: 'a' instead of the classname "a.b<c,d>"
(in ANTLRWork I have classname in red, reading twice "a.c<c,d>" (and the next char) and then returning just the ID a)


Any way to debug this ANTLR bug please??!?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/2979209e/attachment-0001.html 

From kverma at yahoo.com  Fri Jul 13 08:36:40 2007
From: kverma at yahoo.com (Kamal Verma)
Date: Fri, 13 Jul 2007 08:36:40 -0700 (PDT)
Subject: [antlr-interest] Parsing any tree using tree grammer?
Message-ID: <24555.59744.qm@web54607.mail.re2.yahoo.com>

Thanks for the reply Antlr.Runtime.Tree.ITree is what I meant. Interface is as follows,

public interface ITree
    {
        int CharPositionInLine { get; }
        int ChildCount { get; }
        bool IsNil { get; }
        int Line { get; }
        string Text { get; }
        int TokenStartIndex { get; set; }
        int TokenStopIndex { get; set; }
        int Type { get; }

        void AddChild(ITree t);
        ITree DupNode();
        ITree DupTree();
        ITree GetChild(int i);
        string ToString();
        string ToStringTree();
    }

For read only purposes I think we'll need only few items (IsNil, ChildCount, GetChild are things that convert tree into tree stream). I was wondering if we can a cleaner and smaller read-only interface that excludes various things that meant to mutate the node. TreeAdaptor is even bigger interface;

public interface ITreeAdaptor
    {
        void AddChild(object t, object child);
        object BecomeRoot(IToken newRoot, object oldRoot);
        object BecomeRoot(object newRoot, object oldRoot);
        object Create(IToken payload);
        object Create(int tokenType, IToken fromToken);
        object Create(int tokenType, string text);
        object Create(int tokenType, IToken fromToken, string text);
        object DupNode(object treeNode);
        object DupTree(object tree);
        object GetChild(object t, int i);
        int GetChildCount(object t);
        object GetNilNode();
        string GetNodeText(object t);
        int GetNodeType(object t);
        IToken GetToken(object treeNode);
        int GetTokenStartIndex(object t);
        int GetTokenStopIndex(object t);
        int GetUniqueID(object node);
        bool IsNil(object tree);
        object RulePostProcessing(object root);
        void SetNodeText(object t, string text);
        void SetNodeType(object t, int type);
        void SetTokenBoundaries(object t, IToken startToken, IToken stopToken);
    }

Technically, either of them can help achieve the tree grammar parsing; I was wondering if we can little more light weight interfaces to work with. Or these can be refactored to simpler ones; I think this is more for the architect of antlr framework to decide.

Meanwhile I will look into implementation of above and use those with tree grammar.

-Kamal


----- Original Message ----
From: Randall R Schulz <rschulz at sonic.net>
To: antlr-interest at antlr.org
Sent: Friday, July 13, 2007 11:20:39 AM
Subject: Re: [antlr-interest] Parsing any tree using tree grammer?

On Friday 13 July 2007 07:23, Kamal Verma wrote:
> Hi All,
>
> Does anybody have thoughts parsing any tree of type "ITree" using
> tree grammar. Can this be done ? I looked at ITree interface,

What is ITree? org.antlr.Tree is the interface that must be implemented 
if a tree is to be parseable in an ANTLR tree parser, right?


> I was wondering is there any more simpler interface I can use to
> create parseable tree??

Well, Tree is not really an exceptionally complex interface to 
implement. If you already have a class or classes that are essentially 
tree-structureed, then you should write an adaptor class that makes 
that tree structure appear to the ANTLR tree parser like its Tree 
interface.

I don't think there's a way to short-cut that task.


> Something like,
> 
> interface ITree
> {
>       int ChildCount;
>      ITree getChild(int i);
> }
>
> Any thoughts ? comments ?
>
> -Kamal


Randall Schulz







       
____________________________________________________________________________________
Be a better Heartthrob. Get better relationship answers from someone who knows. Yahoo! Answers - Check it out. 
http://answers.yahoo.com/dir/?link=list&sid=396545433
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/ff667624/attachment.html 

From trunkel at gmail.com  Fri Jul 13 08:37:51 2007
From: trunkel at gmail.com (troy runkel)
Date: Fri, 13 Jul 2007 11:37:51 -0400
Subject: [antlr-interest] Problems debugging large grammar in Visual Studio
	2005
Message-ID: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>

I'm using ANTLR v3 and the C target.  I have a large grammar file
(2500 lines) which builds into an even larger C parser file (107000
lines).  When debugging the generated parser in Visual Studio 2005, if
I attempt to step into a function located in the bottom half of the
file the debugger won't display the correct source location.  This
behavior is fairly consistent.  I can step through/into functions in
the top half of the file without problems.  As soon as I step into a
function in the bottom half of the file the debugger displays
incorrect source information.  I can debug at the assembly level, but
that's a bit of a pain.

I realize this is more of a compiler issue than an ANTLR issue, but
before I attempt to navigate through the labyrinth of Microsoft
technical support I thought I'd check here first.  Has anybody seen
this sort of behavior?  Thanks.

Troy Runkel

From rschulz at sonic.net  Fri Jul 13 08:44:36 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 08:44:36 -0700
Subject: [antlr-interest] Parsing any tree using tree grammer?
In-Reply-To: <24555.59744.qm@web54607.mail.re2.yahoo.com>
References: <24555.59744.qm@web54607.mail.re2.yahoo.com>
Message-ID: <200707130844.37053.rschulz@sonic.net>

On Friday 13 July 2007 08:36, Kamal Verma wrote:
> Thanks for the reply

Please don't include a direct reply to my personal email address. I read 
the list.


Since you didn't mention your implementation / runtime language, I 
assumed you were using Java.

When I mentioned an adaptor, I was suggesting that you realize the 
Adaptor pattern, not that you use some specific class in the C or C# 
(or whatever) runtime.


Randall Schulz

From lgcraymer at yahoo.com  Fri Jul 13 08:51:24 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 13 Jul 2007 08:51:24 -0700 (PDT)
Subject: [antlr-interest] Problems debugging large grammar in Visual
	Studio 2005
In-Reply-To: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>
Message-ID: <768197.67623.qm@web55902.mail.re3.yahoo.com>

Sounds like there is an "unsigned short" index
somewhere in the MS code.  If so, you will have to get
a bug fix to get past 65535 lines (and answer the
inevitable "why are you debugging a 100K line file?"
question).

--Loring

--- troy runkel <trunkel at gmail.com> wrote:

> I'm using ANTLR v3 and the C target.  I have a large
> grammar file
> (2500 lines) which builds into an even larger C
> parser file (107000
> lines).  When debugging the generated parser in
> Visual Studio 2005, if
> I attempt to step into a function located in the
> bottom half of the
> file the debugger won't display the correct source
> location.  This
> behavior is fairly consistent.  I can step
> through/into functions in
> the top half of the file without problems.  As soon
> as I step into a
> function in the bottom half of the file the debugger
> displays
> incorrect source information.  I can debug at the
> assembly level, but
> that's a bit of a pain.
> 
> I realize this is more of a compiler issue than an
> ANTLR issue, but
> before I attempt to navigate through the labyrinth
> of Microsoft
> technical support I thought I'd check here first. 
> Has anybody seen
> this sort of behavior?  Thanks.
> 
> Troy Runkel
> 



       
____________________________________________________________________________________
Boardwalk for $500? In 2007? Ha! Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.
http://get.games.yahoo.com/proddesc?gamekey=monopolyherenow  

From jaluber at gmx.de  Fri Jul 13 09:08:44 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 13 Jul 2007 18:08:44 +0200
Subject: [antlr-interest] Problems debugging large grammar in Visual
 Studio 2005
In-Reply-To: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>
References: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>
Message-ID: <4697A38C.9060703@gmx.de>

troy runkel wrote:
> I'm using ANTLR v3 and the C target.  I have a large grammar file
> (2500 lines) which builds into an even larger C parser file (107000
> lines).  When debugging the generated parser in Visual Studio 2005, if
> I attempt to step into a function located in the bottom half of the
> file the debugger won't display the correct source location.  This
> behavior is fairly consistent.  I can step through/into functions in
> the top half of the file without problems.  As soon as I step into a
> function in the bottom half of the file the debugger displays
> incorrect source information.  I can debug at the assembly level, but
> that's a bit of a pain.
> 
> I realize this is more of a compiler issue than an ANTLR issue, but
> before I attempt to navigate through the labyrinth of Microsoft
> technical support I thought I'd check here first.  Has anybody seen
> this sort of behavior?  Thanks.
> 
> Troy Runkel
> 

Why don't you split the file into more manageable pieces? It is some
additional work, but you have to do it only a few times till you
resolved the issue.

Best regards,
Johannes Luber

From scott at javadude.com  Fri Jul 13 09:09:12 2007
From: scott at javadude.com (scott at javadude.com)
Date: Fri, 13 Jul 2007 12:09:12 -0400 (EDT)
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <200707130818.50806.rschulz@sonic.net>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707130818.50806.rschulz@sonic.net>
Message-ID: <5952.12.173.51.158.1184342952.squirrel@www.javadude.com>

Check out antxr: http://javadude.com/tools/antxr.

I tweaked ANTLR 2 to accept some xml-ish syntax and created tokenstreams
that use SAX or XMLPull to read tokens. I've been using it for all of my
xml parsing and it's so much easier than writing big if statements in a
startElement method or setting up rules in digester.

Later,
-- Scott

> On Friday 13 July 2007 07:36, Chaudhari, Pranita, OPEE14 wrote:
>> Hello,
>>
>> I am using Antlr V3 for writing grammar to parse UML Model (exported
>> to XMI).
>
> I have not been able to think of a reason to write an ANTLR parser for
> an XML document format.
>
> Can someone help me see why one would not use one of the existing XML
> parsers and other XML-based tools when dealing with XML documents?
>
>
> Randall Schulz
>


From chintanraoh at gmail.com  Fri Jul 13 09:10:32 2007
From: chintanraoh at gmail.com (chintan)
Date: Fri, 13 Jul 2007 21:40:32 +0530
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
Message-ID: <1184343032.3418.5.camel@localhost.localdomain>

Hi,
I had this problem too.I had an unnecessary large 'k'. I decreased it
from 5 to 3. It solved my problem. 
Also try to make your grammar compact that might help. Take care that
antlr is not handling too many look aheads if in your rule there
decision point as to what path to take.

On Fri, 2007-07-13 at 16:36 +0200, Chaudhari, Pranita, OPEE14 wrote:
> Hello,
>  
> I am using Antlr V3 for writing grammar to parse UML Model (exported
> to XMI).For that I created individual token for each UML element, now
> the number of tokens are more than 150 and it creates large lexer java
> file. And   java compiler throws  following error:
>  
>                    xmiLexerLexer.java:7488: code too large
>                         public void mTokens( )  throws
> RecognitionException{
>  
> Is it possible to split the Lexer grammar file in to two  and import
> tokens from both files into Parser grammar file?
>  
> I also want to apply 'UML model design rules' on the parsed data and
> check whether the model is according to design rules or not. How can I
> write Antlr grammar for this in separate grammar file  and apply it to
> parsed XMI data.
>  
> Design rules can be like:
> -  Class names should start with a capital letter.
>  
>  
> -Thanks 
> Pranita


From aliaazimi at yahoo.com  Fri Jul 13 09:15:51 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Fri, 13 Jul 2007 09:15:51 -0700 (PDT)
Subject: [antlr-interest] How to increase the heap limit(newbie)
Message-ID: <702212.58040.qm@web58104.mail.re3.yahoo.com>

Hi,
   
  I keep getting "java.lang.OutOfMemoryError: Java heap space" error message once I click on the debugger. When I type the command "java -Xms32m -Xmx512m org.antlr.Tool RFC3986.g" in the command promp, I get the following: "Exception in thread "main" java.lang.NoClassDefFoundError:org/antlr/Tool". 
  ANTLRWorks_1.0.201 is the version of antlr I use. Could you please tell me how I can remedy this?
   
  Thank you so much in advance for your help.
   
  Best wishes,
   
  Al

       
---------------------------------
Looking for a deal? Find great prices on flights and hotels with Yahoo! FareChase.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/6a59b9ce/attachment-0001.html 

From rschulz at sonic.net  Fri Jul 13 09:18:00 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 09:18:00 -0700
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <1184343032.3418.5.camel@localhost.localdomain>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<1184343032.3418.5.camel@localhost.localdomain>
Message-ID: <200707130918.00412.rschulz@sonic.net>

On Friday 13 July 2007 09:10, chintan wrote:
> Hi,
> I had this problem too.I had an unnecessary large 'k'. I decreased it
> from 5 to 3. It solved my problem.

But the diagnostic he showed relates to the lexical analyzer, not the 
parser. If I understand correctly, the 'k' value pertains only to 
parsers.


> ...


Randall Schulz


> On Fri, 2007-07-13 at 16:36 +0200, Chaudhari, Pranita, OPEE14 wrote:
> > Hello,
> >
> > I am using Antlr V3 for writing grammar to parse UML Model
> > (exported to XMI).For that I created individual token for each UML
> > element, now the number of tokens are more than 150 and it creates
> > large lexer java file. And   java compiler throws  following error:
> >
> >                    xmiLexerLexer.java:7488: code too large
> >                         public void mTokens( )  throws
> > RecognitionException{
> >
> > Is it possible to split the Lexer grammar file in to two  and
> > import tokens from both files into Parser grammar file?
> >
> > I also want to apply 'UML model design rules' on the parsed data
> > and check whether the model is according to design rules or not.
> > How can I write Antlr grammar for this in separate grammar file 
> > and apply it to parsed XMI data.
> >
> > Design rules can be like:
> > -  Class names should start with a capital letter.
> >
> >
> > -Thanks
> > Pranita

From rschulz at sonic.net  Fri Jul 13 09:24:01 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 09:24:01 -0700
Subject: [antlr-interest] How to increase the heap limit(newbie)
In-Reply-To: <702212.58040.qm@web58104.mail.re3.yahoo.com>
References: <702212.58040.qm@web58104.mail.re3.yahoo.com>
Message-ID: <200707130924.01935.rschulz@sonic.net>

On Friday 13 July 2007 09:15, ali azimi wrote:
> Hi,
>
>   I keep getting "java.lang.OutOfMemoryError: Java heap space" error
> message once I click on the debugger. When I type the command "java
> -Xms32m -Xmx512m org.antlr.Tool RFC3986.g" in the command promp, I
> get the following: "Exception in thread "main"
> java.lang.NoClassDefFoundError:org/antlr/Tool". ANTLRWorks_1.0.201 is
> the version of antlr I use. Could you please tell me how I can remedy
> this?

You've lost the class-path option that tells the JVM where to find the 
ANTLR classes.

How were you invoking ANTLR before? Some script? It will have the 
necessary class-path argument that you'll need to include.

Alternately, you can just modify that script to have the heap limit 
options or to be able to accept such options on its command line.


>   Thank you so much in advance for your help.
>
>   Best wishes,
>
>   Al


Randall Schulz

From jimi at temporal-wave.com  Fri Jul 13 09:39:37 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Jul 2007 09:39:37 -0700
Subject: [antlr-interest] ANTLR & Scala?
In-Reply-To: <4696CF16.60005@ca.com>
References: <200707120755.35894.rschulz@sonic.net>
	<4696C2A7.8000606@ca.com><200707121728.55256.rschulz@sonic.net>
	<4696CF16.60005@ca.com>
Message-ID: <051466DAA0D608439E196797955018D76EC9@wavemachine.temporal-wave.com>

Well, the whole point of the code generation templates is that whether the final code is 'portable' or not is up to you and so why not something CPU specific.

In fact the generation of x86 assembler is fairly trivial as you have none of semantic restrictions of higher level languages to worry about. What isn't trivial though is that you need a runtime to go with it and writing all of that in x86 assemble would be quite tedious and not necessarily so much faster than the C runtime anyway.

I have been contemplating for some time a C-lite target. The idea of this is that where you are not generating trees but just want a script engine for 8 bit characters or something, then we might be able to generate a single self-contained .c.h pair without a runtime involved. I have not convinced myself that that solution spaces is big enough subset to worry about it though.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jonathan Thomas
> Sent: Thursday, July 12, 2007 6:02 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] ANTLR & Scala?
> 
> 
> 
> Randall R Schulz said the following on 13/07/2007 10:28 AM:
> > The programming world needs better languages, and I'll put my money
> on
> > those grounded in computing theory, mathematical formalisms and
> logical
> > principles, any day!
> >
> >
> Yeah well it'd be good if we could stop rowing and climb the tree once
> in a while ( or else even just spend time mixing our metaphors
> completely ;-) )
> > Well, I'm sure something along those lines could be done, but you
> can't
> > short-cut the complexity of a compiler. Realistically, machine code
> > generation isn't simple.
> >
> >
> Yes, it was more of an invitation to "step up here self flagellating
> coders" :-) though I am impressed though with what assembler can
> achieve, ref. menuetos - compact, fast which would be attributes
> desired
> by my target users.
> 
> I did also wonder how the idea of an almost non-portable output would
> go
> with this community :-0 .

From tbrandonau at gmail.com  Fri Jul 13 09:40:42 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 14 Jul 2007 02:40:42 +1000
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
Message-ID: <ebc876d70707130940o19dc9f68h7e4da3cad41aa1c2@mail.gmail.com>

On 7/14/07, Chaudhari, Pranita, OPEE14 <Pranita.Chaudhari at eads.com> wrote:
>
>
> Hello,
>
> I am using Antlr V3 for writing grammar to parse UML Model (exported to
> XMI).For that I created individual token for each UML element, now the
> number of tokens are more than 150 and it creates large lexer java file. And
>   java compiler throws  following error:
>
>                    xmiLexerLexer.java:7488: code too large
>                         public void mTokens( )  throws RecognitionException{
>
> Is it possible to split the Lexer grammar file in to two  and import tokens
> from both files into Parser grammar file?
You couldn't import both vocabularies into one parser (the token
numbers would clash). And I don't think you can import a vocabulary in
a lexer so I think you'd have issues there. And there is the issue of
making the two lexers operate off one input stream, so I don't think
that's a very good alternative.
Your best bet is probably to analyse the generated mTokens method and
see where the complexity is coming in and try and remove some of it.
It sounds like there must be some pretty complicated predictors being
used.
Assuming that a large number of element names with common prefixes is
responsible for the complexity, one optimisation that might help is to
use custom code to match some names in a generic rule rather than have
seperate rules (or literals in tokens) for each. For instance
something like:
ELEMENT_NAME:
    ('a'..'z')+ {$type = getElementNameID(@text);}
    ;
Where getElementNameID is a function that maps element names to
imaginary token IDs.

Or, as others have suggested, you may be best to look at using either
a generic XML parser, or ANTXR, unless there is a compelling reason
not to, for instance parsing complicated content inside your XML
elements.
>
> I also want to apply 'UML model design rules' on the parsed data and check
> whether the model is according to design rules or not. How can I write Antlr
> grammar for this in separate grammar file  and apply it to parsed XMI data.
>
> Design rules can be like:
> -  Class names should start with a capital letter.
Sounds like you want to check out tree parsers.

Tom.
>
>
>
> -Thanks
> Pranita

From jimi at temporal-wave.com  Fri Jul 13 09:48:01 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Jul 2007 09:48:01 -0700
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca><3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu><ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com><E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu><20070712201216.195FA1008C8@nexus.cs.usfca.edu><3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu><004101c7c4d2$84d58330$9bd0840a@lba.ca><0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com><000801c7c4e7$b880b280$82d4840a@lba.ca><21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com><22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org><20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
Message-ID: <051466DAA0D608439E196797955018D76ECA@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kay Roepke

> Once we have the ANTLR grammar ported to v3 I'll start working on an
> editor, too. ANTLRWorks is cool, I love it, but I really really do
> not like Java desktop apps, esp. on the Mac.

Once we have the definitive ATNLR3 grammar, I am going to work on Visual
Studio 2005 ANTLR3 language integration. I think that having ANTLRWorks
style integration with Visual Studio is the best of all worlds.

Jim 
 


From jimi at temporal-wave.com  Fri Jul 13 09:56:58 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Jul 2007 09:56:58 -0700
Subject: [antlr-interest] Problems debugging large grammar in Visual
	Studio2005
In-Reply-To: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>
References: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76ECB@wavemachine.temporal-wave.com>

Have you applied SP1? There may also be some hotfixes on the VS2005 site
(I have loaded some of the performance related ones, but do not remember
loading anything for this type of error and my T-SQL parser is getting
on for that size.

Perhaps you should not step into functions in the bottom half of the
file? ;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of troy runkel
> Sent: Friday, July 13, 2007 8:38 AM
> To: ANTLR mail-list
> Subject: [antlr-interest] Problems debugging large grammar in Visual
> Studio2005
> 
> I'm using ANTLR v3 and the C target.  I have a large grammar file
> (2500 lines) which builds into an even larger C parser file (107000
> lines).  When debugging the generated parser in Visual Studio 2005, if
> I attempt to step into a function located in the bottom half of the
> file the debugger won't display the correct source location.  This
> behavior is fairly consistent.  I can step through/into functions in
> the top half of the file without problems.  As soon as I step into a
> function in the bottom half of the file the debugger displays
> incorrect source information.  I can debug at the assembly level, but
> that's a bit of a pain.
> 
> I realize this is more of a compiler issue than an ANTLR issue, but
> before I attempt to navigate through the labyrinth of Microsoft
> technical support I thought I'd check here first.  Has anybody seen
> this sort of behavior?  Thanks.
> 
> Troy Runkel

From jimi at temporal-wave.com  Fri Jul 13 09:59:19 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Jul 2007 09:59:19 -0700
Subject: [antlr-interest] Problems debugging large grammar in
	VisualStudio 2005
In-Reply-To: <768197.67623.qm@web55902.mail.re3.yahoo.com>
References: <620da58c0707130837s71b14815j9ae4f1a00c92c319@mail.gmail.com>
	<768197.67623.qm@web55902.mail.re3.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76ECC@wavemachine.temporal-wave.com>

As an aside to this, the number of lines will reduce before too long,
though it has no effect on performance. I will be folding some of the
exception handling etc into external functions and getting rid of some
unnecessary whitespace. It might help with some tools, though in general
I have found VS2005 to be exceptionally good.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Loring Craymer
> Sent: Friday, July 13, 2007 8:51 AM
> To: troy runkel; ANTLR mail-list
> Subject: Re: [antlr-interest] Problems debugging large grammar in
> VisualStudio 2005
> 
> Sounds like there is an "unsigned short" index
> somewhere in the MS code.  If so, you will have to get
> a bug fix to get past 65535 lines (and answer the
> inevitable "why are you debugging a 100K line file?"
> question).
> 
> --Loring
> 
> --- troy runkel <trunkel at gmail.com> wrote:
> 
> > I'm using ANTLR v3 and the C target.  I have a large
> > grammar file
> > (2500 lines) which builds into an even larger C
> > parser file (107000
> > lines).  When debugging the generated parser in
> > Visual Studio 2005, if
> > I attempt to step into a function located in the
> > bottom half of the
> > file the debugger won't display the correct source
> > location.  This
> > behavior is fairly consistent.  I can step
> > through/into functions in
> > the top half of the file without problems.  As soon
> > as I step into a
> > function in the bottom half of the file the debugger
> > displays
> > incorrect source information.  I can debug at the
> > assembly level, but
> > that's a bit of a pain.
> >
> > I realize this is more of a compiler issue than an
> > ANTLR issue, but
> > before I attempt to navigate through the labyrinth
> > of Microsoft
> > technical support I thought I'd check here first.
> > Has anybody seen
> > this sort of behavior?  Thanks.
> >
> > Troy Runkel
> >
> 
> 
> 
> 
>
_______________________________________________________________________
> _____________
> Boardwalk for $500? In 2007? Ha! Play Monopoly Here and Now (it's
> updated for today's economy) at Yahoo! Games.
> http://get.games.yahoo.com/proddesc?gamekey=monopolyherenow

From lgcraymer at yahoo.com  Fri Jul 13 10:06:47 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 13 Jul 2007 10:06:47 -0700 (PDT)
Subject: [antlr-interest] Problems debugging large grammar in
	VisualStudio 2005
In-Reply-To: <051466DAA0D608439E196797955018D76ECC@wavemachine.temporal-wave.com>
Message-ID: <965865.67725.qm@web55906.mail.re3.yahoo.com>

After thinking a little more, I realized that the
"unsigned short" probably has to do with the MS .obj
format; it may not be fixable.  I don't think that the
inability to handle large files is a weakness of the
tools--for most apps, it is a "feature".

--Loring

--- Jim Idle <jimi at temporal-wave.com> wrote:

> As an aside to this, the number of lines will reduce
> before too long,
> though it has no effect on performance. I will be
> folding some of the
> exception handling etc into external functions and
> getting rid of some
> unnecessary whitespace. It might help with some
> tools, though in general
> I have found VS2005 to be exceptionally good.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Loring Craymer
> > Sent: Friday, July 13, 2007 8:51 AM
> > To: troy runkel; ANTLR mail-list
> > Subject: Re: [antlr-interest] Problems debugging
> large grammar in
> > VisualStudio 2005
> > 
> > Sounds like there is an "unsigned short" index
> > somewhere in the MS code.  If so, you will have to
> get
> > a bug fix to get past 65535 lines (and answer the
> > inevitable "why are you debugging a 100K line
> file?"
> > question).
> > 
> > --Loring
> > 
> > --- troy runkel <trunkel at gmail.com> wrote:
> > 
> > > I'm using ANTLR v3 and the C target.  I have a
> large
> > > grammar file
> > > (2500 lines) which builds into an even larger C
> > > parser file (107000
> > > lines).  When debugging the generated parser in
> > > Visual Studio 2005, if
> > > I attempt to step into a function located in the
> > > bottom half of the
> > > file the debugger won't display the correct
> source
> > > location.  This
> > > behavior is fairly consistent.  I can step
> > > through/into functions in
> > > the top half of the file without problems.  As
> soon
> > > as I step into a
> > > function in the bottom half of the file the
> debugger
> > > displays
> > > incorrect source information.  I can debug at
> the
> > > assembly level, but
> > > that's a bit of a pain.
> > >
> > > I realize this is more of a compiler issue than
> an
> > > ANTLR issue, but
> > > before I attempt to navigate through the
> labyrinth
> > > of Microsoft
> > > technical support I thought I'd check here
> first.
> > > Has anybody seen
> > > this sort of behavior?  Thanks.
> > >
> > > Troy Runkel
> > >
> > 
> > 
> > 
> > 
> >
>
_______________________________________________________________________
> > _____________
> > Boardwalk for $500? In 2007? Ha! Play Monopoly
> Here and Now (it's
> > updated for today's economy) at Yahoo! Games.
> >
>
http://get.games.yahoo.com/proddesc?gamekey=monopolyherenow
> 



      ____________________________________________________________________________________
Park yourself in front of a world of choices in alternative vehicles. Visit the Yahoo! Auto Green Center.
http://autos.yahoo.com/green_center/ 

From rschulz at sonic.net  Fri Jul 13 10:11:13 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 10:11:13 -0700
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <5952.12.173.51.158.1184342952.squirrel@www.javadude.com>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707130818.50806.rschulz@sonic.net>
	<5952.12.173.51.158.1184342952.squirrel@www.javadude.com>
Message-ID: <200707131011.13532.rschulz@sonic.net>

On Friday 13 July 2007 09:09, scott at javadude.com wrote:
> Check out antxr: http://javadude.com/tools/antxr.
>
> I tweaked ANTLR 2 to accept some xml-ish syntax and created
> tokenstreams that use SAX or XMLPull to read tokens. I've been using
> it for all of my xml parsing and it's so much easier than writing big
> if statements in a startElement method or setting up rules in
> digester.

Well, that's not really writing a parser for an XML document in ANTLR, 
is it? It's interesting and novel and probably good for some uses, but 
the case in point was someone writing a purpose-built ANTLR parser for 
XMI specifically.

Also, there are other approaches that are not big chains of if-then-else 
tests or Digester rules. There are several DOM (-like) APIs, e.g. as 
well as JiBX, JAXB, etc.


By the way, you might want to consider implementing ANTXR as a 
pre-processor that produces an ANTLR grammar rather than having to 
modify ANTLR itself.


> Later,
> -- Scott


Randall Schulz


> > On Friday 13 July 2007 07:36, Chaudhari, Pranita, OPEE14 wrote:
> >> Hello,
> >>
> >> I am using Antlr V3 for writing grammar to parse UML Model
> >> (exported to XMI).
> >
> > I have not been able to think of a reason to write an ANTLR parser
> > for an XML document format.
> >
> > Can someone help me see why one would not use one of the existing
> > XML parsers and other XML-based tools when dealing with XML
> > documents?

From kroepke at classdump.org  Fri Jul 13 10:15:31 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 13 Jul 2007 19:15:31 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <051466DAA0D608439E196797955018D76ECA@wavemachine.temporal-wave.com>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca><3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu><ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com><E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu><20070712201216.195FA1008C8@nexus.cs.usfca.edu><3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu><004101c7c4d2$84d58330$9bd0840a@lba.ca><0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com><000801c7c4e7$b880b280$82d4840a@lba.ca><21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com><22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org><20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
	<051466DAA0D608439E196797955018D76ECA@wavemachine.temporal-wave.com>
Message-ID: <F34A4DE1-9BA7-428E-B963-9EBA4EDE1BE9@classdump.org>


On Jul 13, 2007, at 6:48 PM, Jim Idle wrote:

>
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Kay Roepke
>
>> Once we have the ANTLR grammar ported to v3 I'll start working on an
>> editor, too. ANTLRWorks is cool, I love it, but I really really do
>> not like Java desktop apps, esp. on the Mac.
>
> Once we have the definitive ATNLR3 grammar, I am going to work on  
> Visual
> Studio 2005 ANTLR3 language integration. I think that having  
> ANTLRWorks
> style integration with Visual Studio is the best of all worlds.

I must have a look at Visual Studio some day. Many people do seem to  
like it...
maybe it's worth copying some of its goodness to somewhere else ;)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From easjolly at ix.netcom.com  Fri Jul 13 10:18:22 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Fri, 13 Jul 2007 11:18:22 -0600
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
	[Suggestion]
Message-ID: <E1I9Oly-0000By-2i@elasmtp-mealy.atl.sa.earthlink.net>

I really appreciate people who take the time to write the simplest possible
grammar that illustrates the problem they are having rather than embedding
huge grammars in their posts.  

I've run into the described lexer problem several times; I'd say it is
pretty common to want to do something along these lines.

Here is one way to get v3 to generate the code so the lexer looks ahead for
the original example.  Is there any reason not to do this?

fragment KEYWORD : 'a' 'b' 'c' ;
fragment OTHER : 'a' | 'b' | 'c';
DUMMY : (  (KEYWORD) => KEYWORD {$type = KEYWORD;} 
        |  OTHER  {$type = OTHER;}
        );

-S



From parrt at cs.usfca.edu  Fri Jul 13 10:28:34 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Jul 2007 10:28:34 -0700
Subject: [antlr-interest] Understanding priorities in lexing (newbie)
	[Suggestion]
In-Reply-To: <E1I9Oly-0000By-2i@elasmtp-mealy.atl.sa.earthlink.net>
References: <E1I9Oly-0000By-2i@elasmtp-mealy.atl.sa.earthlink.net>
Message-ID: <28468953-5652-464A-9832-BB586C6B598B@cs.usfca.edu>


On Jul 13, 2007, at 10:18 AM, Susan Jolly wrote:

> I really appreciate people who take the time to write the simplest  
> possible
> grammar that illustrates the problem they are having rather than  
> embedding
> huge grammars in their posts.

Hi Susan!  Agreed.

> Here is one way to get v3 to generate the code so the lexer looks  
> ahead for
> the original example.  Is there any reason not to do this?
>
> fragment KEYWORD : 'a' 'b' 'c' ;
> fragment OTHER : 'a' | 'b' | 'c';
> DUMMY : (  (KEYWORD) => KEYWORD {$type = KEYWORD;}
>         |  OTHER  {$type = OTHER;}
>         );

That is a correct grammar.  Note that the following is not really  
going to work:

DUMMY
options {backtrack=true;}
	: (KEYWORD {$type = KEYWORD;}  | OTHER{$type = OTHER;})
	;

it will not execute the backtracking in this case as it thinks it  
knows what it's doing. :(

Ter


From trunkel at gmail.com  Fri Jul 13 10:55:52 2007
From: trunkel at gmail.com (troy runkel)
Date: Fri, 13 Jul 2007 13:55:52 -0400
Subject: [antlr-interest] Problems debugging large grammar in Visual
	Studio 2005
Message-ID: <620da58c0707131055i3c31b9b1uaca9694e6b2636a5@mail.gmail.com>

I've applied VS2005 SP1 but that doesn't seem to have resolved the
problem.  I'll check the hotfixes next and see if they have any
applicable.  Thanks.

--Troy

>
> Message: 6
> Date: Fri, 13 Jul 2007 09:56:58 -0700
> From: "Jim Idle" <jimi at temporal-wave.com>
> Subject: Re: [antlr-interest] Problems debugging large grammar in
>         Visual  Studio2005
> To: "ANTLR mail-list" <antlr-interest at antlr.org>
> Message-ID:
>         <051466DAA0D608439E196797955018D76ECB at wavemachine.temporal-wave.com>
> Content-Type: text/plain;       charset="US-ASCII"
>
> Have you applied SP1? There may also be some hotfixes on the VS2005 site
> (I have loaded some of the performance related ones, but do not remember
> loading anything for this type of error and my T-SQL parser is getting
> on for that size.
>
> Perhaps you should not step into functions in the bottom half of the
> file? ;-)
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of troy runkel
> > Sent: Friday, July 13, 2007 8:38 AM
> > To: ANTLR mail-list
> > Subject: [antlr-interest] Problems debugging large grammar in Visual
> > Studio2005
> >
> > I'm using ANTLR v3 and the C target.  I have a large grammar file
> > (2500 lines) which builds into an even larger C parser file (107000
> > lines).  When debugging the generated parser in Visual Studio 2005, if
> > I attempt to step into a function located in the bottom half of the
> > file the debugger won't display the correct source location.  This
> > behavior is fairly consistent.  I can step through/into functions in
> > the top half of the file without problems.  As soon as I step into a
> > function in the bottom half of the file the debugger displays
> > incorrect source information.  I can debug at the assembly level, but
> > that's a bit of a pain.
> >
> > I realize this is more of a compiler issue than an ANTLR issue, but
> > before I attempt to navigate through the labyrinth of Microsoft
> > technical support I thought I'd check here first.  Has anybody seen
> > this sort of behavior?  Thanks.
> >
> > Troy Runkel

From me262c at gmail.com  Fri Jul 13 11:14:49 2007
From: me262c at gmail.com (me 262)
Date: Fri, 13 Jul 2007 11:14:49 -0700
Subject: [antlr-interest] How to turn off "create( tok=xxx " print out?
Message-ID: <b9fb3efe0707131114m6b475ed3l73807a81a6562fad@mail.gmail.com>

Hi,

  How do I turn off these message print out?

Thanks

M.E.

From scott at javadude.com  Fri Jul 13 11:32:29 2007
From: scott at javadude.com (scott at javadude.com)
Date: Fri, 13 Jul 2007 14:32:29 -0400 (EDT)
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <200707131011.13532.rschulz@sonic.net>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707130818.50806.rschulz@sonic.net>
	<5952.12.173.51.158.1184342952.squirrel@www.javadude.com>
	<200707131011.13532.rschulz@sonic.net>
Message-ID: <10657.12.173.51.158.1184351549.squirrel@www.javadude.com>

Huh? How is it not? You're writing a grammar for your xml file. You could
write an XMI grammar quite easily.

ANTXR saves you from having to write a lexer and adds some convenience
syntax for attributes and xml-rule names.

I know about the other XML parsers that you mention; it depends on what
you want to do with the xml. If you're just mapping xml to objects,
they'll work well. And DOM is just gross...

-- Scott

> Well, that's not really writing a parser for an XML document in ANTLR,
> is it? It's interesting and novel and probably good for some uses, but
> the case in point was someone writing a purpose-built ANTLR parser for
> XMI specifically.
>
> Also, there are other approaches that are not big chains of if-then-else
> tests or Digester rules. There are several DOM (-like) APIs, e.g. as
> well as JiBX, JAXB, etc.


From rschulz at sonic.net  Fri Jul 13 11:53:16 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 11:53:16 -0700
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <10657.12.173.51.158.1184351549.squirrel@www.javadude.com>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707131011.13532.rschulz@sonic.net>
	<10657.12.173.51.158.1184351549.squirrel@www.javadude.com>
Message-ID: <200707131153.16904.rschulz@sonic.net>

On Friday 13 July 2007 11:32, scott at javadude.com wrote:
> Huh? How is it not?

Because you're talking about writing an ANTXR specification. My question 
was specifically about writing an ANTLR grammar for an XML document 
format.


> You're writing a grammar for your xml file.

A grammar, yes. But not an ANTLR grammar.


> You could write an XMI grammar quite easily.
>
> ANTXR saves you from having to write a lexer and adds some
> convenience syntax for attributes and xml-rule names.

Yes, I see that. But you're not addressing the question I asked: Why 
would someone write an ANTLR grammar for an XML document format?


> I know about the other XML parsers that you mention; it depends on
> what you want to do with the xml. If you're just mapping xml to
> objects, they'll work well. And DOM is just gross...

There are better and worse document object models. I've used XOM, which 
is much cleaner than the W3C DOM.


> -- Scott
>
> > Well, that's not really writing a parser for an XML document in
> > ANTLR, is it? It's interesting and novel and probably good for some
> > uses, but the case in point was someone writing a purpose-built
> > ANTLR parser for XMI specifically.
> >
> > Also, there are other approaches that are not big chains of
> > if-then-else tests or Digester rules. There are several DOM (-like)
> > APIs, e.g. as well as JiBX, JAXB, etc.


Randall Schulz

From jimi at temporal-wave.com  Fri Jul 13 12:11:19 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Jul 2007 12:11:19 -0700
Subject: [antlr-interest] SEGV when running AST builder in C target,
	antlr3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979C4F03A@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A418979C4F03A@dvs-sms-mail01.digi.com>
Message-ID: <051466DAA0D608439E196797955018D76ED0@wavemachine.temporal-wave.com>

I checked this and the bug was indeed fixed by an earlier bug fix. All
it was, was that initialization of the tree roots had been inadvertently
turned off.

There will be an update release before too long (once Ter decides it is
ready) which will have this and other fixes, as well as many minor
improvements and conveniences.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hardy, Stephen
> Sent: Tuesday, July 03, 2007 4:11 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] SEGV when running AST builder in C target,
> antlr3.0
> 
> Jim,
> 
> when adding output=AST stuff to the C grammar, the runtime library
gets
> a seg fault in becomeRoot().  The main problem seems to be that the
> code
> tests pointers for NULL, whereas the pointers are actually getting
> small
> negative numbers because of various consitions in the token stream
> (such
> as empty).  Probably, there needs to be a macro like
> IS_NOT_A_POINTER_OR_IS_NULL(newRootTree) etc.
> 
> Regards,
> SJH

From scott at javadude.com  Fri Jul 13 13:03:17 2007
From: scott at javadude.com (scott at javadude.com)
Date: Fri, 13 Jul 2007 16:03:17 -0400 (EDT)
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <200707131153.16904.rschulz@sonic.net>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707131011.13532.rschulz@sonic.net>
	<10657.12.173.51.158.1184351549.squirrel@www.javadude.com>
	<200707131153.16904.rschulz@sonic.net>
Message-ID: <23683.12.173.51.158.1184356997.squirrel@www.javadude.com>

> On Friday 13 July 2007 11:32, scott at javadude.com wrote:
>> Huh? How is it not?
>
> Because you're talking about writing an ANTXR specification. My question
> was specifically about writing an ANTLR grammar for an XML document
> format.

98% of ANTXR is ANTLR. An ANTXR grammar is essentially a superset of an
ANTLR grammar.

> Yes, I see that. But you're not addressing the question I asked: Why
> would someone write an ANTLR grammar for an XML document format?

With ANTXR existing, I would say noone should write an ANTLR grammar for
XML ;)

Grammar-based XML parsing (whether ANTLR or ANTXR) can be very effective
for some XML parsing tasks. If you're just reading something from XML into
a pretty-direct object structure, then it's not a good solution (and some
of the tools you've pointed out are better suited.)

If the structure you want to read into doesn't match the xml structure, or
if you want to "execute" the xml, or if you don't plan to store all of the
data, a grammar-based solution can be much easier to maintain.

-- Scott

From rschulz at sonic.net  Fri Jul 13 14:04:09 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 14:04:09 -0700
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <23683.12.173.51.158.1184356997.squirrel@www.javadude.com>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707131153.16904.rschulz@sonic.net>
	<23683.12.173.51.158.1184356997.squirrel@www.javadude.com>
Message-ID: <200707131404.09485.rschulz@sonic.net>

Is there any way I can get you to stop sending me direct copies of your 
responses? Please? Why do people do that?


On Friday 13 July 2007 13:03, scott at javadude.com wrote:
> > On Friday 13 July 2007 11:32, scott at javadude.com wrote:
> >> Huh? How is it not?
> >
> > Because you're talking about writing an ANTXR specification. My
> > question was specifically about writing an ANTLR grammar for an XML
> > document format.
>
> 98% of ANTXR is ANTLR. An ANTXR grammar is essentially a superset of
> an ANTLR grammar.

Fine, but it's neither here nor there. Does ANTXR accept all ordinary 
ANTLR (v2) grammars producing the same result as one would get from 
applying ANTLR itself to those grammars? If not, it isn't a superset.


> > Yes, I see that. But you're not addressing the question I asked:
> > Why would someone write an ANTLR grammar for an XML document
> > format?
>
> With ANTXR existing, I would say noone should write an ANTLR grammar
> for XML ;)

Well, considering ANTXR is a modified ANTLR, are you going to commit to 
making sure it tracks the evolution of ANTLR for as long as ANTLR is 
being developed? Do you produce a new version whenever there's a 
bug-fix or other revision of ANTLR v2?


Are you going to produce a version of ANTXR for ANTLR v3? And if so, 
will you consider implementing it as a grammar transform rather than by 
modifying ANTLR itself?


By the way, does an ANTXR parser impose all the usual XML 
well-structured document requirements?


> Grammar-based XML parsing (whether ANTLR or ANTXR) can be very
> effective for some XML parsing tasks.

Of course, we've seen one example of what happens when you try to span 
all of XML's generic grammar plus a specific schema (generically 
speaking) in one shot with ANTLR: You can overload the Java class file 
size limit!


> ...
>
> -- Scott


Randall Schulz

From kroepke at classdump.org  Fri Jul 13 16:13:36 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Jul 2007 01:13:36 +0200
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <200707131404.09485.rschulz@sonic.net>
References: <4A4BFB693434EA43A40E8C85DFE4046FB85C2A@deimsg30.de.net.world>
	<200707131153.16904.rschulz@sonic.net>
	<23683.12.173.51.158.1184356997.squirrel@www.javadude.com>
	<200707131404.09485.rschulz@sonic.net>
Message-ID: <53CEB092-5B1D-4325-82CB-6BCDA3367B34@classdump.org>


On Jul 13, 2007, at 11:04 PM, Randall R Schulz wrote:

>> Grammar-based XML parsing (whether ANTLR or ANTXR) can be very
>> effective for some XML parsing tasks.
>
> Of course, we've seen one example of what happens when you try to span
> all of XML's generic grammar plus a specific schema (generically
> speaking) in one shot with ANTLR: You can overload the Java class file
> size limit!

Quite honestly, that can happen real quick. Happened to me just last  
week
when doing a lexer implementation that had to recognize all top level  
domains,
to allow special handling of URLs. Obviously it was a bit more  
involved than
that, but this is the gist of it.

Apparently there was no way to restructure the grammar so it wouldn't  
blow
Java's stupid code size limits.
Basically what happened was that the predictor ended up being an immense
list of nested if's and then went beyond the code size limit.

Using the -Xnoinlinedfa switch helped, because that forces even small  
predictors
into a DFA object rather than being done with if's.

That might of help with this original issue, too.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Fri Jul 13 16:23:19 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 16:23:19 -0700
Subject: [antlr-interest] Java Tree Parser: NPE: rulememo == null??
Message-ID: <200707131623.19510.rschulz@sonic.net>

Hi,

After a recent round of changes to my tree grammar, most of them in
parser class methods and other related classes, not the grammar itself,
the resulting parser is now crashing with an NPE in (org.antlr.runtime)
BaseRecognizer.memoize(IntStream, int, int). This line of code is:

    if ( ruleMemo[ruleIndex]!=null ) { ... }

Exception in thread "main" java.lang.NullPointerException
        at org.antlr.runtime.BaseRecognizer.memoize(BaseRecognizer.java:740)


What's even more perplexing, when I run this under the (Java) debugger
in IDEA the NPE occurs in a different place. In this case, the crash
occurs in BaseRecognizer.getRuleMemoization(int, int) at line 696.
Still, it is the ruleMemo field (an array) that is null:

   if ( ruleMemo[ruleIndex]==null ) { ... }


When I build the parser with "-debug" this is the NPE I see:

Exception in thread "main" java.lang.NullPointerException
        at org.antlr.runtime.debug.DebugEventSocketProxy.transmit(DebugEventSocketProxy.java:108)
        at org.antlr.runtime.debug.DebugEventSocketProxy.exitRule(DebugEventSocketProxy.java:122)


I'm at a loss to explain this crash or to even hypothesize causes for
it, especially given its shifting nature. Can anybody suggest what I
might have mucked up?


Thanks.

Randall Schulz

From antlr at mirality.co.nz  Fri Jul 13 16:29:33 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 14 Jul 2007 11:29:33 +1200
Subject: [antlr-interest] Understanding priorities in lexing   (newbie)
In-Reply-To: <A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
	<000801c7c4e7$b880b280$82d4840a@lba.ca>
	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>
	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>
	<20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
Message-ID: <20070713232949.8380A11E9EE@www.antlr.org>

At 21:48 13/07/2007, Kay Roepke wrote:
 >Once we have the ANTLR grammar ported to v3 I'll start working
 >on an editor, too. ANTLRWorks is cool, I love it, but I really
 >really do not like Java desktop apps, esp. on the Mac.

Would it be more palatable if you could change the look&feel so it 
*looks* like a Mac app?

Because (at least if it's using Swing) there's a bunch of classes 
in com.sun.java.swing.plaf.* that can be selected between to 
change the appearance of a Java app.  Not sure if they have one 
for Mac, though, but I would presume so.


From parrt at cs.usfca.edu  Fri Jul 13 16:40:14 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Jul 2007 16:40:14 -0700
Subject: [antlr-interest] new action syntax proposal
Message-ID: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>

Hi,

Actions are not executed during backtracking as we cannot undo  
stateful actions.  The problem is that some semantic predicates that  
test, for example, the symbol table rely on actions updating the  
symbol table during backtracking.  I propose {...} stay same as an  
action but {{...}} (double curlies) implies always execute even when  
backtracking.

Counterproposals?

Ter

From parrt at cs.usfca.edu  Fri Jul 13 16:44:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Jul 2007 16:44:07 -0700
Subject: [antlr-interest] add 300 users to wiki license
Message-ID: <ECAAD713-AB12-4BB7-97D8-F968AD74EBEB@cs.usfca.edu>

thanks to hip cats at Atlassian...just renewed license and upped to  
500 from 200 users. :)

Updating JIRA now to 3.10.

Ter

From kroepke at classdump.org  Fri Jul 13 16:45:25 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Jul 2007 01:45:25 +0200
Subject: [antlr-interest] Understanding priorities in lexing  (newbie)
In-Reply-To: <A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
References: <002801c7c49d$e384f6c0$9bd0840a@lba.ca>
	<3A4E241A-61B9-4457-9345-75FD4383E205@cs.usfca.edu>
	<ebc876d70707121114h588a2632id0f0d8a34d0e9790@mail.gmail.com>
	<E6C8017E-D2C6-40B3-9DC8-99B2D6C25097@cs.usfca.edu>
	<20070712201216.195FA1008C8@nexus.cs.usfca.edu>
	<3EEDFD43-9987-41E8-95B5-1687AE9D6A0E@cs.usfca.edu>
	<004101c7c4d2$84d58330$9bd0840a@lba.ca>
	<0276675A-64DA-417E-B8D1-40C5923A02E4@wincent.com>
	<000801c7c4e7$b880b280$82d4840a@lba.ca>
	<21F9EEF1-3304-46A8-8FB3-A4EFC4E5D964@wincent.com>
	<22B8C106-504D-43CB-AE55-1E9EF884135F@classdump.org>
	<20070713082206.22E9B11EB3C@www.antlr.org>
	<A6F46BFC-139A-4A55-948B-C01D1A045794@classdump.org>
Message-ID: <A74D811E-BCDD-4097-814E-E52067DD1664@classdump.org>


On Jul 14, 2007, at 1:29 AM, Gavin Lambert wrote:

> At 21:48 13/07/2007, Kay Roepke wrote:
> >Once we have the ANTLR grammar ported to v3 I'll start working
> >on an editor, too. ANTLRWorks is cool, I love it, but I really
> >really do not like Java desktop apps, esp. on the Mac.
>
> Would it be more palatable if you could change the look&feel so it  
> *looks* like a Mac app?

Well, I don't care about the looks so much, as long as it's behaving  
itself. This is not my issue with ANTLRWorks at all.
I think its interface is very usable, kudos to pull this off with  
Swing, Jean!

> Because (at least if it's using Swing) there's a bunch of classes  
> in com.sun.java.swing.plaf.* that can be selected between to change  
> the appearance of a Java app.  Not sure if they have one for Mac,  
> though, but I would presume so.

It already uses the Mac user interface elements, so it's not the  
look. Rather it's Java. I constantly have the impression that it is  
sluggish, and that's probably nothing Jean can fix. IntelliJ IDEA is  
a very good app, too, but it's sluggish also. I've been doing a lot  
of Java lately, and as my preferred type of computer is a Mac I use  
that. But I have seriously considered booting Windows to do Java  
coding, just to get the better Java support (since Sun long stopped  
providing a JVM implementation, dropping everything on Apple).

That's the only reason I want to have a Mac-native ANTLR editor. It's  
not the features, it's not the UI, it's the Java. I know why it's  
important to have ANTLRWorks as a Swing-Java app, really there's no  
way around that, considering Jean is the sole author (AFAIK). But on  
a decent machine with 3 gigs of RAM, it should be blindingly fast. It  
isn't, I can tell you, esp. if I have my "normal" work environment  
open, i.e. browsers, lots of terminal windows, IntelliJ, ANTLRWorks  
and all the other thingies I need. The memory footprint is probably  
the culprit. Whatever. I like the tool, but want to have an  
alternative. In the spirit of opensource: This is a user option. The  
user wants it, he writes it.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Fri Jul 13 16:51:50 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Jul 2007 01:51:50 +0200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
Message-ID: <310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>

On Jul 14, 2007, at 1:40 AM, Terence Parr wrote:

> Actions are not executed during backtracking as we cannot undo  
> stateful actions.  The problem is that some semantic predicates  
> that test, for example, the symbol table rely on actions updating  
> the symbol table during backtracking.  I propose {...} stay same as  
> an action but {{...}} (double curlies) implies always execute even  
> when backtracking.

I suppose this is a bit paranoid, but in most languages we target the  
curlies are the block delimiters. There's a minimal chance that  
someone writes double curlies to introduce a different automatic  
scope in the C-based targets. (this notion of automatic vars doesn't  
really apply to Java, right? There was something with everything  
being set up on method entry, IIRC. Don't quote me on this, though.)

If that happens, the semantics would change, probably without the  
grammar author noticing. And we couldn't even issue a warning because  
that warning would be totally silly for like 99.99999% of the users.

I don't have a better idea for the tokens, just came across my mind  
when reading it.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Fri Jul 13 17:04:22 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sat, 14 Jul 2007 12:04:22 +1200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
Message-ID: <20070714000436.37A7611EB36@www.antlr.org>

At 11:51 14/07/2007, Kay Roepke wrote:
 >I suppose this is a bit paranoid, but in most languages we 
target
 >the curlies are the block delimiters. There's a minimal chance
 >that someone writes double curlies to introduce a different
 >automatic scope in the C-based targets. (this notion of 
automatic
 >vars doesn't really apply to Java, right? There was something 
with
 >everything being set up on method entry, IIRC. Don't quote me on 

 >this, though.)

Well, the last I recall ANTLR didn't handle nested {}s anyway, 
meaning that if you wanted to use them you had to use \{ and 
\}.  So that would look different, and wouldn't be a problem.

Or am I thinking of nested []s for parameters?  Or possibly I'm 
just going mad :)


Anyway, another option could be to use a magic prefix 
symbol.  @{...} springs to mind for some reason, though I don't 
know why ;)  {Maybe it's from literal strings in C#.]


From kroepke at classdump.org  Fri Jul 13 17:24:37 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Jul 2007 02:24:37 +0200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
Message-ID: <2116EB95-EB7C-4CAB-AA7F-CC76E93C0FED@classdump.org>


On Jul 14, 2007, at 2:04 AM, Gavin Lambert wrote:

> Well, the last I recall ANTLR didn't handle nested {}s anyway,  
> meaning that if you wanted to use them you had to use \{ and \}.   
> So that would look different, and wouldn't be a problem.

No, curlies are alright.

> Or am I thinking of nested []s for parameters?  Or possibly I'm  
> just going mad :)

The thing that cropped up a week or so ago were the []s inside  
parameters/return values. Things like

rule returns [String[] ary]
	:	stuff ;

> Anyway, another option could be to use a magic prefix symbol.  @ 
> {...} springs to mind for some reason, though I don't know why ;)   
> {Maybe it's from literal strings in C#.]

mmh. I think the delimiters should look like 'always' a bit. It's bit  
undefined what 'always' looks like, but it should be (1) easily  
recognizable, and (2) consistent.

Sort of like {} means action and {}? means semantic (=code)  
predicate. {}! is not really good, since it fails rule 1. Doubling  
the curlies satisfies both rules, with caveat I pointed out.
It should definitely be something with curlies, since they are  
actions. Maybe it's time to look for an Unicode character that's  
describe as 'always'?

;)

cheers,
-k

-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Fri Jul 13 17:28:02 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Jul 2007 02:28:02 +0200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <2116EB95-EB7C-4CAB-AA7F-CC76E93C0FED@classdump.org>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
	<2116EB95-EB7C-4CAB-AA7F-CC76E93C0FED@classdump.org>
Message-ID: <3C9FB786-338B-4699-A47F-C16A7CEAEDB7@classdump.org>


On Jul 14, 2007, at 2:24 AM, Kay Roepke wrote:

>  Maybe it's time to look for an Unicode character that's describe  
> as 'always'?

Ok. That was meant as a joke, but it turns out that the Unicode folks  
lack all humor.

\u25FB is....?

NamesList:
	= always (modal operator)
	? (white square - 25A1)
?	Designated in Unicode 3.2
?	always

doh!

-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Fri Jul 13 17:36:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Jul 2007 17:36:26 -0700
Subject: [antlr-interest] ANTLR v3 grammar done!
Message-ID: <8A1E3532-4D14-4C6E-BA27-A5054D94B63F@cs.usfca.edu>

Howdy,

I have written a grammar for ANTLR v3 in v3 now :)

http://www.antlr.org/grammar/ANTLR

It builds trees that ANTLR tool itself needs.   I'm sure it's not  
perfect yet, but it's a great example of how to build trees with v3.   
Damn this thing really works! ;)

Next step: tree grammar for said trees.  Then try replacing v2 stuff  
in v3 with these new grammars. blech.

Ter

From win at wincent.com  Fri Jul 13 18:13:04 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sat, 14 Jul 2007 03:13:04 +0200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <2116EB95-EB7C-4CAB-AA7F-CC76E93C0FED@classdump.org>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
	<2116EB95-EB7C-4CAB-AA7F-CC76E93C0FED@classdump.org>
Message-ID: <81381928-3EA0-468C-A89B-C378E7CEB289@wincent.com>

El 14/7/2007, a las 2:24, Kay Roepke escribi?:

> It should definitely be something with curlies, since they are  
> actions.

I agree that it should involve curlies because we're talking about  
actions.

I don't really like the double-curly idea ({{}}), partly for  
aesthetic, "gut feeling" reasons, partly because the target language  
could itself conceivably use double curlies inside actions.

Of all the proposals so far, I instantly liked the one to prefix the  
action like this: @{ ... }

I think it fits in very nicely with the existing uses of @ in @init,  
@after etc.

And @ almost looks like "a", and "a" is for "always" so there's a  
nice mnemonic too.

Cheers,
Wincent



From kroepke at classdump.org  Fri Jul 13 18:28:00 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sat, 14 Jul 2007 03:28:00 +0200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <81381928-3EA0-468C-A89B-C378E7CEB289@wincent.com>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<310991A8-FA33-461B-894E-D483BC8F9C18@classdump.org>
	<2116EB95-EB7C-4CAB-AA7F-CC76E93C0FED@classdump.org>
	<81381928-3EA0-468C-A89B-C378E7CEB289@wincent.com>
Message-ID: <C8840007-6C3B-441C-A2A5-5A35B8D4CDA1@classdump.org>


On Jul 14, 2007, at 3:13 AM, Wincent Colaiuta wrote:

> Of all the proposals so far, I instantly liked the one to prefix  
> the action like this: @{ ... }
>
> I think it fits in very nicely with the existing uses of @ in  
> @init, @after etc.
>
> And @ almost looks like "a", and "a" is for "always" so there's a  
> nice mnemonic too.

true enough. but given that this kind of action should be rather  
rare, I can see an argument for @always{ ... }
It's wordier, but instantly recognizable. It clearly communicates the  
intention and also follows the same scheme
as the other uses of @ (it's always followed by a word defining a  
special section, @lexer::, @init, @after etc)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From rschulz at sonic.net  Fri Jul 13 19:39:30 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 19:39:30 -0700
Subject: [antlr-interest] Java Tree Parser: NPE: rulememo == null??
In-Reply-To: <200707131623.19510.rschulz@sonic.net>
References: <200707131623.19510.rschulz@sonic.net>
Message-ID: <200707131939.30496.rschulz@sonic.net>

On Friday 13 July 2007 16:23, Randall R Schulz wrote:
> Hi,
>
> After a recent round of changes to my tree grammar, most of them in
> parser class methods and other related classes, not the grammar
> itself, the resulting parser is now crashing with an NPE in
> (org.antlr.runtime) BaseRecognizer.memoize(IntStream, int, int). This
> line of code is:
>
>     if ( ruleMemo[ruleIndex]!=null ) { ... }
>
> Exception in thread "main" java.lang.NullPointerException
>         at
> org.antlr.runtime.BaseRecognizer.memoize(BaseRecognizer.java:740)
>
> ... [ other examples of NPE upon access to ruleMemo ] ...

So here's what happend. I added a new constructor to my tree parser that 
takes other parameters (obviously). Here's the problem. The constructor 
supplied by ANTLR looks like this:

  public CLIFBuilder(TreeNodeStream input) {
    super(input);
    ruleMemo = new HashMap[57+1];
  }


Naturally, my constructors don't contain the line that allocates the 
array of HashMaps for ruleMemo.

Is it expressly forbidden to override the constructor of an 
ANTLR-generated parser class? If not, then there needs to be a way to 
handle the need to allocate the ruleMemo array.

At a minimum, there should be some documentation that expresses this 
requirement. If that documentation exists, I couldn't find it.


The solution is simple enough: Where overloaded parser constructors 
might (as mine did) call "super(input)" they should instead 
call "this(input)".


Randall Schulz

From Stephen_Hardy at rabbit.com  Fri Jul 13 20:33:25 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Fri, 13 Jul 2007 20:33:25 -0700
Subject: [antlr-interest] StringTemplate null pointer exception with '?' and
	other constructs, antlr3.0
Message-ID: <62BABE024B7C074E9194E9727A41897901383237@dvs-sms-mail01.digi.com>

In June there was a small thread on the problem of working around null
pointer exceptions when a tree grammar used the '?' operator e.g. 

 

init_declarator

    : ^(INIT_DECL declarator oi=initializer?)

    ->template(d={$declarator.st}, i={(oi==null?"":$oi.st)})

<< 

Here is a wonderful declarator: <d> <i; null="## no initializer ##">

>> 

    ;

 

(this shows the ugly workaround which requires tests for null in the
template attribute).  Is this going to be fixed?  Setting to an empty
string in the 'null' case means that the null="..." construct in the
template never gets triggered.

 

Surely it is not asking too much that Antlr should generate the
appropriate check for null when the '?' (or presumably '*') operator is
used.  I have yet to work out how to make use of the null="..."
construct in the template expansion.

 

Here's another seemingly obvious Antlr fragment which never works:

 

type_specifier

    : k=('void'

    | 'char'

    | 'int'  // etc.etc.

    | struct_or_union_specifier

    | enum_specifier

    | type_id)

        -> template(k={$k.text}) "<k>"

    ;

 

In this case the generated code sets k to null at the start, goes
through the normal lookahead/action switches, then issues the following:

 

 

            // TEMPLATE REWRITE

            // 108:9: -> template(k=$k.text) \"<k>\"

            {

                retval.st = new StringTemplate(templateLib, "<k>",

              new STAttrMap().put("k", k.getText()));

            }

 

Unfortunately, nowhere is k set to anything, so it is null and causes
the exception.

 

What am I not understanding?  "The definitive Antlr reference" is not
very definitive when it comes to using string templates :-(  Read the
previous comment as adding "More rigorous description of string template
usage" to the Antlr documentation wish list.

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070713/b4550a52/attachment-0001.html 

From ld at galador.net  Fri Jul 13 21:14:30 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 14 Jul 2007 14:14:30 +1000
Subject: [antlr-interest] weird ambiguity / bug
Message-ID: <00cf01c7c5cd$7c19c660$60f46c3a@vulcain>

I have a rule like below which works OK:
====
dotidlist
 : ( DOT^ ID ) +
 ;
====

however if I make it a fragment, as in:
=====
fragment
dotidlist
 : ( DOT^ ID ) +
 ;
=====

I get the following warning:
==
[14:12:36] warning(200): G:\Dev\ANTLR\tests\ExpTest.g:170:14: Decision can match input such as "DOT" using multiple alternatives: 1, 2
As a result, alternative(s) 2 were disabled for that input
==
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/8f40e59b/attachment.html 

From ld at galador.net  Fri Jul 13 21:16:10 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 14 Jul 2007 14:16:10 +1000
Subject: [antlr-interest] weird ambiguity / bug
Message-ID: <00db01c7c5cd$b57d16f0$60f46c3a@vulcain>

oops, never mind, my bad....
it's always ambiguous (for some reason I have yet to find..)
  ----- Original Message ----- 
  From: Lloyd Dupont 
  Subject: weird ambiguity / bug


  I have a rule like below which works OK:
  ====
  dotidlist
   : ( DOT^ ID ) +
   ;
  ====
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/d59a984b/attachment.html 

From rschulz at sonic.net  Fri Jul 13 21:31:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 13 Jul 2007 21:31:52 -0700
Subject: [antlr-interest] weird ambiguity / bug
In-Reply-To: <00cf01c7c5cd$7c19c660$60f46c3a@vulcain>
References: <00cf01c7c5cd$7c19c660$60f46c3a@vulcain>
Message-ID: <200707132131.52435.rschulz@sonic.net>

On Friday 13 July 2007 21:14, Lloyd Dupont wrote:
> I have a rule like below which works OK:
> ====
> dotidlist
>
>  : ( DOT^ ID ) +
>
>  ;
> ====
>
> however if I make it a fragment, as in:
> =====

Fragments are for shared portions of lexer rules only. You "dotidlist" 
is a parser rule ('cause its name starts with a lower-case letter; only 
rules whose names start with an upper-case letter are lexer rules). You 
can't have fragmentary parser rules.

Probably ANTLR should chastise you explicitly about combining "fragment" 
with a parser rule.


> fragment
> dotidlist
>  : ( DOT^ ID ) +
>  ;
> =====
>
> I get the following warning:
> ==
> [14:12:36] warning(200): G:\Dev\ANTLR\tests\ExpTest.g:170:14:
> Decision can match input such as "DOT" using multiple alternatives:
> 1, 2 As a result, alternative(s) 2 were disabled for that input
> ==


Randall Schulz

From rdclark at gmail.com  Fri Jul 13 23:39:34 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 13 Jul 2007 23:39:34 -0700
Subject: [antlr-interest] Newbie question on lexing '{' and '{action();
	}'
In-Reply-To: <5D8503D66B71984E8D7F6651BA74D05941AEF6@yew.PS.LOCAL>
References: <5D8503D66B71984E8D7F6651BA74D05941AEF6@yew.PS.LOCAL>
Message-ID: <d3992d900707132339m1071d33dwe3ab0842fbad1d0e@mail.gmail.com>

On 7/13/07, Stephen Parker <Stephen.Parker at pi-shurlok.com> wrote:
> This seems to be some kind of FAQ, but I haven't found an answer.
> I want to parse a language like this:
>
>         machine G {
>          /* xxx. */
>          id1 {action1();}
>          id2 {action2();}
>         }
>
> And I have a grammar like this:
>
>         grammar Test;
>
>         prog : 'machine' ID OPEN state+ CLOSE;
>         state : case+ ;
>         case : ID ACTION ;
>
>         OPEN :  '%{';  // Would like '{'.
>         CLOSE : '%}';  // Would like '}'.
>
>         ACTION :   '{' ( ACTION | ~('}'|'{') )* '}' ;
>         ID  :   ('a'..'z'|'A'..'Z')+ ;
>         COMMENT : '/*' ( options {greedy=false;} : . )* '*/' {skip();};

I would push some of the work up into the parser (which makes more
sense than having the lexer do context-sensitive work). Basically, do
a little more work to define what can happen in an action:

grammar Test;

tokens {
  OPEN = '{';
  CLOSE = '}';
  SEMI = ';';
  LPAREN = '(';
  RPAREN = ')'
}

prog : 'machine' ID OPEN state+ CLOSE;
state : case+ ;
case : ID actionBlock ;
// Define an action block
actionBlock : OPEN (statement | actionBlock)* CLOSE ;
//  Only handling function calls for now
statement: ID LPAREN RPAREN SEMI ;
// Not much left for the lexer to do...
ID  :   ('a'..'z'|'A'..'Z')+ ;
COMMENT : '/*' ( options {greedy=false;} : . )* '*/' {skip();};

Most people run into the problem you did when the grammar is a little
under-defined.

Hope this helps,

 ...Richard

From chuacheeseng83 at gmail.com  Sat Jul 14 02:21:23 2007
From: chuacheeseng83 at gmail.com (Chua Chee Seng)
Date: Sat, 14 Jul 2007 17:21:23 +0800
Subject: [antlr-interest] Newbie Questions
Message-ID: <38f28b2d0707140221w14657841l364039cc8f0709f8@mail.gmail.com>

Hi all,

I am newbie in Antlr.  I am trying to write a traslator which will take a
text file which contains regular text and text that are 'mark-up' with
\@text at .  The translator will translate text mark-up with '\@..@' to some
other texts.  Is Antlr the right tool to create parser and translator for
this kind of mark-up language?  If yes, how the grammar should looked like?

Please kindly advice, thanks in advance.  :-)

Best Regards,
Chee Seng
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/67428e1d/attachment.html 

From win at wincent.com  Sat Jul 14 03:16:16 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sat, 14 Jul 2007 12:16:16 +0200
Subject: [antlr-interest] Newbie Questions
In-Reply-To: <38f28b2d0707140221w14657841l364039cc8f0709f8@mail.gmail.com>
References: <38f28b2d0707140221w14657841l364039cc8f0709f8@mail.gmail.com>
Message-ID: <988FFEA4-EE52-417F-B5CE-AC4CF5F1A9DE@wincent.com>

El 14/7/2007, a las 11:21, Chua Chee Seng escribi?:

> Hi all,
>
> I am newbie in Antlr.  I am trying to write a traslator which will  
> take a
> text file which contains regular text and text that are 'mark-up' with
> \@text at .  The translator will translate text mark-up with '\@..@'  
> to some
> other texts.  Is Antlr the right tool to create parser and  
> translator for
> this kind of mark-up language?  If yes, how the grammar should  
> looked like?
>
> Please kindly advice, thanks in advance.  :-)
>
> Best Regards,
> Chee Seng

I don't know if it is the "right" tool for the job, but I have used  
it to do a similar job as my first real project in ANTLR (a wikitext- 
to-HTML translator). Your scenario (mostly "dross" with some  
interspersed markup) is probably best handled by a filtering lexer.  
In my case I then hand-coded my parser rather than using an ANTLR- 
generated one, partly because of issues ANTLR has with combining  
filtering lexers with parser (see <http://www.antlr.org/ 
pipermail/antlr-interest/2007-June/021243.html>), and partly because  
I wanted very specific error-recovery behaviour in the parser that I  
found to be very difficult to get using vanilla ANTLR parser.

So I would recommend that you start by searching the list archives  
for information on filtering lexers, and also some threads on how to  
parse wiki text. Jim Idle posted a sample grammar for this, in fact  
(<http://www.antlr.org/pipermail/antlr-interest/2007-June/ 
021177.html>), and although it wasn't right for my needs it might  
give you some ideas.

Cheers,
Wincent



From pink at odahoda.de  Sat Jul 14 05:51:50 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 14 Jul 2007 14:51:50 +0200
Subject: [antlr-interest] new action syntax proposal
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
Message-ID: <f7agt7$ic5$1@sea.gmane.org>

Terence Parr wrote:

> Actions are not executed during backtracking as we cannot undo
> stateful actions.  The problem is that some semantic predicates that
> test, for example, the symbol table rely on actions updating the
> symbol table during backtracking.  I propose {...} stay same as an
> action but {{...}} (double curlies) implies always execute even when
> backtracking.
> 
> Counterproposals?

I'd vote for "@always { ... }" or a similar keyword: exploit existing
syntax, use explicit keywords instead of adding more 'magic' characters.

And what about the 'undo' part? Or must the state changes be limited to
@scope stuff that can be reverted by ANTLR without user intervention?


Or did you think about stuff like "@init {{ ... }}". That would conflict
with the @always proposal. But a prefix could be used: "@always::init".
This could even be extended to

r
@always::init { change state }
@backtracking::after { revert state only in backtracking }
...
;


-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From scott at javadude.com  Sat Jul 14 06:59:21 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sat, 14 Jul 2007 09:59:21 -0400
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <200707131404.09485.rschulz@sonic.net>
Message-ID: <20070714135925.C5D9111EB1D@www.antlr.org>

because the mailing list sw is set up such that the only way to reply to the
group is to hit "reply all" and I sometimes forget to remove the sender's
name. it's a major PITA, but rehashed on this list a billion times
already...

suffice it to say, it sucks...
-- Scott

> Is there any way I can get you to stop sending me direct 
> copies of your responses? Please? Why do people do that?



From antlr at mirality.co.nz  Sat Jul 14 07:25:29 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 15 Jul 2007 02:25:29 +1200
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <20070714135925.C5D9111EB1D@www.antlr.org>
References: <200707131404.09485.rschulz@sonic.net>
	<20070714135925.C5D9111EB1D@www.antlr.org>
Message-ID: <20070714142541.00A7811EB1C@www.antlr.org>

At 01:59 15/07/2007, Scott Stanchfield wrote:
 >because the mailing list sw is set up such that the only way to
 >reply to the group is to hit "reply all" and I sometimes forget
 >to remove the sender's name. it's a major PITA, but rehashed on
 >this list a billion times already...

Well, I've received several messages now from the list where I was 
named as an explicit recipient as well as it being sent to the 
list as a whole -- and I only ever received one copy (the one sent 
privately; there was no additional message from the list).

I'm not sure why it would be behaving differently for you (unless 
possibly you're using a different email to post than the one you 
subscribed with).  Maybe you need to have a look at your user 
options for the list?


From scott at javadude.com  Sat Jul 14 07:28:49 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sat, 14 Jul 2007 10:28:49 -0400
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <20070714142541.00A7811EB1C@www.antlr.org>
Message-ID: <20070714142850.7D32211EB3D@www.antlr.org>

We've been over and over this on this list. It's probably the mailserver on
the receiving end that's filtering out dups...

-- Scott

> Well, I've received several messages now from the list where 
> I was named as an explicit recipient as well as it being sent 
> to the list as a whole -- and I only ever received one copy 
> (the one sent privately; there was no additional message from 
> the list).
> 
> I'm not sure why it would be behaving differently for you 
> (unless possibly you're using a different email to post than 
> the one you subscribed with).  Maybe you need to have a look 
> at your user options for the list?
> 
> 



From antlr at mirality.co.nz  Sat Jul 14 07:53:09 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Sun, 15 Jul 2007 02:53:09 +1200
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <20070714142850.7D32211EB3D@www.antlr.org>
References: <20070714142541.00A7811EB1C@www.antlr.org>
	<20070714142850.7D32211EB3D@www.antlr.org>
Message-ID: <20070714145320.1703811EB67@www.antlr.org>

At 02:28 15/07/2007, Scott Stanchfield wrote:
 >We've been over and over this on this list. It's probably the
 >mailserver on the receiving end that's filtering out dups...

No, I told you -- it's a list server option.

Go to your subscription options page, at this address:
   http://www.antlr.org/mailman/options/antlr-interest

Log in to edit your options, then scroll down to the bottom and 
set "Avoid duplicate copies of messages?" to Yes.  Easy.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/2c458785/attachment.html 

From scott at javadude.com  Sat Jul 14 08:58:07 2007
From: scott at javadude.com (Scott Stanchfield)
Date: Sat, 14 Jul 2007 11:58:07 -0400
Subject: [antlr-interest] how to solve 'code too large' problem?
In-Reply-To: <20070714145320.1703811EB67@www.antlr.org>
Message-ID: <20070714155809.5BC3311EB73@www.antlr.org>

Ahhh -- nice. I already had that set for me; maybe that should be the
default for the list...
 
Thanks!
-- Scott


  _____  

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Gavin Lambert
Sent: Saturday, July 14, 2007 10:53 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] how to solve 'code too large' problem?


At 02:28 15/07/2007, Scott Stanchfield wrote:
>We've been over and over this on this list. It's probably the 
>mailserver on the receiving end that's filtering out dups...

No, I told you -- it's a list server option.

Go to your subscription options page, at this address:
  http://www.antlr.org/mailman/options/antlr-interest

Log in to edit your options, then scroll down to the bottom and set "Avoid
duplicate copies of messages?" to Yes.  Easy.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/0ba8d464/attachment.html 

From ed.hartley at gmail.com  Sat Jul 14 12:35:33 2007
From: ed.hartley at gmail.com (Edward Hartley)
Date: Sat, 14 Jul 2007 20:35:33 +0100
Subject: [antlr-interest] Python Target
Message-ID: <66c67b670707141235k4ef9c60ai5cbdef11c2a1f92@mail.gmail.com>

Hi
I'm looking at the example grammar Expr.g from the book and when testing it
with valid expressions like (3+4)*9 I get the output like the following
>>> (3+4)*9
line 0:-1 mismatched input '<EOF>' expecting NEWLINE

Is this behaviour correct or is it due to my having missed something:
I retained the skip() call in the  NEWLINE rule.
I don not get this behavior with the Java target and see the same as is
described in the book.
This is using the Mac Python Framework as opposed a standard Python install.
TIA
Ed Hartley
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/4f97a65d/attachment.html 

From pink at odahoda.de  Sat Jul 14 13:10:54 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 14 Jul 2007 22:10:54 +0200
Subject: [antlr-interest] Python Target
References: <66c67b670707141235k4ef9c60ai5cbdef11c2a1f92@mail.gmail.com>
Message-ID: <f7bake$ncc$1@sea.gmane.org>

Hello,

Edward Hartley wrote:

> I'm looking at the example grammar Expr.g from the book and when testing
> it with valid expressions like (3+4)*9 I get the output like the following
>>>> (3+4)*9
> line 0:-1 mismatched input '<EOF>' expecting NEWLINE
> 
> Is this behaviour correct or is it due to my having missed something:
> I retained the skip() call in the  NEWLINE rule.
> I don not get this behavior with the Java target and see the same as is
> described in the book.

I can't reproduce this. Are you sure that the input actually has a '\n' at
the end? How does your main script look like?

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From open.zone at virgin.net  Sat Jul 14 13:25:05 2007
From: open.zone at virgin.net (Micheal J)
Date: Sat, 14 Jul 2007 21:25:05 +0100
Subject: [antlr-interest] Recursive lexer rule: strange error message
In-Reply-To: <4697713B.1060901@mail.com>
Message-ID: <002001c7c655$11981d90$c704a8c0@hercules>

Pavel,

> I need to create a very complex lexer for some DSL.
> 
> To give you an idea of what should be considered a single 
> token, I put 
> some tokens below, one per string.
> 
> ()
> ((a)(a))
> (%()
> (%(%()
> (%)%))
> (/* anything here is ignored, including parentheses)))))(((((((((*/)
> 
> 
> Brief description: If you have matching parentheses than you 
> do not need 
> to quote, prefix any unmatching parentheses with the 
> character '%'. The 
> latter is a quoting character for some macro language. Also you can 
> directly embed C style comments into the lexem (so!) and that 
> part would 
> be ignored. The rest would still generate a single token. So 
> the example 
> on the last line would result in the token:
> ()

Freaky language!

> Following the example of page 108 of ANTLR3 book (with recursive 
> curlies) I did something like this. I am ignoring '%' for now.
> 
> 
> 
> fragment
> PARENTH
> :
> '(' ( PARENTH | ( '/*' ) => COMMENT | '/' | ~( '(' | ')' | 
> '/' ) )* ')' ;
> 
> fragment
> COMMENT
> :
> '/*' ( options {greedy=false;} : . )* '*/'
> ;

This illustrates one possible solution (that handles '%(' and '%)':

grammar PavelGanelin;

program : COMPLEX_TOKEN EOF;

COMPLEX_TOKEN :  ( QUOTED_LPAREN | QUOTED_RPAREN )* BALANCED ( QUOTED_LPAREN
| QUOTED_RPAREN )*;

fragment BALANCED : '(' ( IDENT | BALANCED | COMMENT | QUOTED_LPAREN |
QUOTED_RPAREN )* ')';
fragment COMMENT : '/*' (options {greedy=false;} : .)* '*/' ;
fragment QUOTED_LPAREN : '%(' ;
fragment QUOTED_RPAREN : '%)' ;
fragment IDENT : ( 'a'..'z' | 'A'..'Z' )+ ;

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From Stephen_Hardy at rabbit.com  Sat Jul 14 14:15:54 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sat, 14 Jul 2007 14:15:54 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
Message-ID: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com>

There seems to be a bug in StringTemplate.java and/or Antlr, where the
following member function recurses infinitely because (somehow)
enclosingInstance == this.

 

            public AttributeRenderer getAttributeRenderer(Class
attributeClassType) {

                        ...

 

                        // we have no renderer overrides for the
template or none for class arg

                        // check parent template if we are embedded

                        if ( enclosingInstance!=null ) {

                                    return
enclosingInstance.getAttributeRenderer(attributeClassType);

                        }

            ...

            }

 

The piece of Antlr code which exposes this bug (taken from my own tree
parser based on Terence's C grammar) is 

 

 

parameter_declaration

    : ^(PARMDEC ^(DECLSPEC declaration_specifiers)
(dad+=decl_or_abstract_decl)*)

    -> template(ds={$declaration_specifiers.st}, d={$dad})

<< 

    <ds> <d; separator=" ">

>> 

    ;

 

 

Removing the <d; ...> from the template hides the problem.  Of course
the real cause of this problem may be something else, so I would be
happy to share the entire source code if necessary.  Antlrworks shows
that the AST is being built as expected, and the AST parses successfully
by the tree grammar, but adding the template output shows up this error.
Stack overflows are problematic to debug, since the stack trace seems to
lose the "interesting" part which first calls the recursive routine
(sigh).

 

Regards,

SJH

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070714/7d181ea3/attachment.html 

From parrt at cs.usfca.edu  Sat Jul 14 14:36:21 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 14 Jul 2007 14:36:21 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com>
Message-ID: <13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu>

Hi. Can you turn on lint mode in ST?  It detects infinite cycles in  
your tree of STs.
Ter


From parrt at cs.usfca.edu  Sat Jul 14 15:24:07 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 14 Jul 2007 15:24:07 -0700
Subject: [antlr-interest] pushed ANTLR tree grammar
Message-ID: <5CA4E240-13A1-4BA1-A5E6-0638B03F4AC9@cs.usfca.edu>

hi, made a tree grammar real quick...just copy parser grammar and  
remove all stuff to left of -> and you ahve a tree grammar. :)

Works on a few simple cases...gotta run for the day...

it's in the depot or fisheye under examples-v3/java/ANTLR

Ter

From matthew.j.diehl at intel.com  Sat Jul 14 16:59:35 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Sat, 14 Jul 2007 16:59:35 -0700
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <f7agt7$ic5$1@sea.gmane.org>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20241D13C@orsmsx417.amr.corp.intel.com>

> Terence Parr wrote:
> > I propose {...} stay same as an
> > action but {{...}} (double curlies) implies always execute even when
> > backtracking.
> > 
> > Counterproposals?
> 
> I'd vote for "@always { ... }" or a similar keyword: exploit existing
> syntax, use explicit keywords instead of adding more 'magic' 
> characters.

It's always nice to use already existing syntax, but if it was
@always{...}, then could it be used anywhere within the rule?  
It would be nice if it could be used within the rule (with {{...}} ) as
well.  So I vote for the {{...}} (as if my vote matters, lol...more like
my preference and not a vote).
There are already several other languages that use double curlies (like
System Verilog), so it shouldn't be too bad.  That, and also people
aren't
going to accidentally type {{ unless they already know it is a 'magic' 
character.  Only those who WANT to use it will add it (it's not like the
ever-so-common naming a parser/lexer rule after a reserved keyword).

Matt

From ld at galador.net  Sat Jul 14 18:02:18 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 15 Jul 2007 11:02:18 +1000
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
Message-ID: <009d01c7c67b$cb8497d0$60f46c3a@vulcain>

For my parser I reaped of the lexer rules from the Java exemple.
Particularly you've got this lexer token:
NUM_FLOAT
 : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
 | ............ other match
 ;

Now there is a problem with that!....
in the language I target everything is an object.

so:
"2."  is NUM_FLOAT["2."]
"2.1"  is NUM_FLOAT["2.1"]
"2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("] RPAREN[")]

So I was trying to disambiguate the lexer with a construct like that (trying predicate in the lexer):
NUM_FLOAT
 : (
   ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART) (FLOAT_TYPE_SUFFIX)?
  | ( DIGITS '.' ID )=> DIGITS
  | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
  )
  |    ..................... other match
;

but this doesn't seem to work,
1. it told me the NUM_INT rule is now not accessible anymore (I guess the NUM_FLOAT rule absorbs it with my second alternative)
2. but more importantly an input such as "2.a" return "2." followed by MismatchTokenException.

can I use predicate in lexer rule?
how could I disambiguate the NUM_FLOAT lexer rule?
I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT DOT ID LPAREN RPAREN)?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/d718ba1b/attachment-0001.html 

From open.zone at virgin.net  Sat Jul 14 18:05:37 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 15 Jul 2007 02:05:37 +0100
Subject: [antlr-interest] Decision can match input such as "DOT ID"
	using multiple alternatives
In-Reply-To: <00b901c7c559$d3f098b0$60f46c3a@vulcain>
Message-ID: <002d01c7c67c$42ce2900$c704a8c0@hercules>

Have identifier built the ID (DOT ID)* [sub-]tree. Basically make it into a
qualifiedIdentifier or dottedIdentifier sort of rule. Call that from you
primary rule. You can check that it has exactly one qualifier using actions
in the parser or treeparser.
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 13 July 2007 15:27
To: antlr-interest at antlr.org
Subject: [antlr-interest] Decision can match input such as "DOT ID"
usingmultiple alternative


The compilers tell me. My problem is it's obvious but it *shouldn't be a
problem", how can I make ANTLR be happy?
 
I have a grammar like that
 
primary:
    (atom -> atom)
    (
        (LPAREN expressionList RPAREN -> ^(LPAREN $primary expressionList))
// method call
        // read object DOT property name
        | (DOT ID -> ^(DOT $primary ID)) 
    )*
    ;
atom:
    INT -> ^(CONSTANT INT)
    | STRING -> ^(CONSTANT STRING)
    identifier -> identifier
    ;
identifier:
    // read identifier or class name
    (id0=ID->$id0)
        (DOT id1=ID->$(DOT $identifier $id1)) * 
            ((LT identifier GT) => LT id2=identifier GT -> $(GENERIC
$identifier $id2))?
 
now it says there are multiple way to access the tokens ID, and that's true.
howver I assume identifier consume all that it can, and primary will consume
only those ID that haven't been consumed by identifier.
(on top of that I generate the same AST in both case...)
 
Anyway, could some help me to solve this problem?
I need to be able to use ID DOT ID in the 'identifer' property as I need to
call this rule in 'LT identifier GT'.
yet I need it in the primary, as I need to access the property of any
object....
 
how can I solve that?!?!

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/710f1331/attachment.html 

From open.zone at virgin.net  Sat Jul 14 18:29:03 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 15 Jul 2007 02:29:03 +0100
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <009d01c7c67b$cb8497d0$60f46c3a@vulcain>
Message-ID: <003401c7c67f$88f60800$c704a8c0@hercules>

You may be trying to do too much in the lexer Lloyd. Seems you can simply
change the lexer to emit say NUM_FLOAT_DOT for floats that end with the
decimal point. The lexer seems to handle your other NUM_FLOAT examples just
fine. 
 
You can then deal with the NUM_FLOAT_DOT ID sequence in the parser.
 
NUM_INT
  :  DIGITS 
     (
          '.' { $type = NUM_FLOAT_DOT; } 
          ( fraction_digits=DIGITS { $type = NUM_FLOAT; } )? 
          ( exponent_part=EXPONENT_PART { $type = NUM_FLOAT; } )? 
          ( float_suffix=FLOAT_TYPE_SUFFIX { $type = NUM_FLOAT; } )?
     )?
 
  | ..................... other match
;

 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 15 July 2007 02:02
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in
lexer rule?)


For my parser I reaped of the lexer rules from the Java exemple.
Particularly you've got this lexer token:
NUM_FLOAT
 : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
 | ............ other match
 ;
 
Now there is a problem with that!....
in the language I target everything is an object.
 
so:

"2."  is NUM_FLOAT["2."] 
"2.1"  is NUM_FLOAT["2.1"]
"2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("]
RPAREN[")]
 
So I was trying to disambiguate the lexer with a construct like that (trying
predicate in the lexer):
NUM_FLOAT
 : (
   ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART)
(FLOAT_TYPE_SUFFIX)?
  | ( DIGITS '.' ID )=> DIGITS
  | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
  )
  |    ..................... other match
;
 
but this doesn't seem to work,
1. it told me the NUM_INT rule is now not accessible anymore (I guess the
NUM_FLOAT rule absorbs it with my second alternative)
2. but more importantly an input such as "2.a" return "2." followed by
MismatchTokenException.
 
can I use predicate in lexer rule?
how could I disambiguate the NUM_FLOAT lexer rule?
I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT
DOT ID LPAREN RPAREN)?
 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/71c5a316/attachment.html 

From jimi at temporal-wave.com  Sat Jul 14 18:38:10 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 14 Jul 2007 18:38:10 -0700
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
Message-ID: <051466DAA0D608439E196797955018D76ED3@wavemachine.temporal-wave.com>

The only slight issue I see with that is that in some target languages
the second { would sometimes be meaningful:


r:
 FRED
  {
	{ int a; ...}
  }

Though this is a minor barrier, perhaps it can be avoided by using
another character as otherwise people may specify a backtrack executing
action without realizing it.

Perhaps:

{<
>}

 (you can read the < as backtrack I guess:

I suspect though that all such sequences offer some clash with targets
;-)

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Friday, July 13, 2007 4:40 PM
> To: antlr-interest Interest
> Subject: [antlr-interest] new action syntax proposal
> 
> Hi,
> 
> Actions are not executed during backtracking as we cannot undo
> stateful actions.  The problem is that some semantic predicates that
> test, for example, the symbol table rely on actions updating the
> symbol table during backtracking.  I propose {...} stay same as an
> action but {{...}} (double curlies) implies always execute even when
> backtracking.
> 
> Counterproposals?
> 
> Ter

From open.zone at virgin.net  Sat Jul 14 18:36:21 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 15 Jul 2007 02:36:21 +0100
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <009d01c7c67b$cb8497d0$60f46c3a@vulcain>
Message-ID: <003c01c7c680$8dd07170$c704a8c0@hercules>

Hi, Forgot to ask:
 
What should the lexer return for these values (note the spaces)?
".1"
"1 .1"
"1 ."
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 15 July 2007 02:02
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in
lexer rule?)


For my parser I reaped of the lexer rules from the Java exemple.
Particularly you've got this lexer token:
NUM_FLOAT
 : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
 | ............ other match
 ;
 
Now there is a problem with that!....
in the language I target everything is an object.
 
so:

"2."  is NUM_FLOAT["2."] 
"2.1"  is NUM_FLOAT["2.1"]
"2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("]
RPAREN[")]
 
So I was trying to disambiguate the lexer with a construct like that (trying
predicate in the lexer):
NUM_FLOAT
 : (
   ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART)
(FLOAT_TYPE_SUFFIX)?
  | ( DIGITS '.' ID )=> DIGITS
  | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
  )
  |    ..................... other match
;
 
but this doesn't seem to work,
1. it told me the NUM_INT rule is now not accessible anymore (I guess the
NUM_FLOAT rule absorbs it with my second alternative)
2. but more importantly an input such as "2.a" return "2." followed by
MismatchTokenException.
 
can I use predicate in lexer rule?
how could I disambiguate the NUM_FLOAT lexer rule?
I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT
DOT ID LPAREN RPAREN)?
 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/ca400a1d/attachment-0001.html 

From a.shneyderman at gmail.com  Sat Jul 14 22:42:39 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Sun, 15 Jul 2007 07:42:39 +0200
Subject: [antlr-interest] Where is the latest build/source
Message-ID: <693a69ba0707142242l24bb900cp14c9fd0a23215126@mail.gmail.com>

I wonder where can I download the latest build from?
I would also like to have the source for it.

I am sure I was able to do this before but can not locate
the links anymore.

Thanks, for your help.
Alex.

From fw at deneb.enyo.de  Sun Jul 15 01:57:32 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Sun, 15 Jul 2007 10:57:32 +0200
Subject: [antlr-interest] Stream processing
Message-ID: <87k5t2qc1v.fsf@mid.deneb.enyo.de>

I'd like to execute an action as soon as a particular rule matches.  I
don't care if the whole parse fails at a later stage (in the end, the
whole thing will be wrapped in a transaction anyway).

Right now, the generated parser seems to load the whole document into
memory, in some kind of parsed form.  Loading the source document is
not a big issue for me (it's just about 3 MB in size), but the whole
parser data definitely takes too much memory (close to 1 GiB).

From win at wincent.com  Sun Jul 15 02:50:06 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Sun, 15 Jul 2007 11:50:06 +0200
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <051466DAA0D608439E196797955018D76ED3@wavemachine.temporal-wave.com>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<051466DAA0D608439E196797955018D76ED3@wavemachine.temporal-wave.com>
Message-ID: <8F043F39-C1D8-49F4-937A-42F6A893D169@wincent.com>

El 15/7/2007, a las 3:38, Jim Idle escribi?:

> Perhaps:
>
> {<
>> }
>
>  (you can read the < as backtrack I guess:
>
> I suspect though that all such sequences offer some clash with targets
> ;-)

Yes, exactly, which is why I think the new syntax, whatever it is,  
should go *outside* the action block's delimiting curlies. That means  
either of these two suggestions:

@always { ... }
@{ ... }

Or modifying your suggestion, Jim:

<{ }

Cheers,
Wincent



From ld at galador.net  Sun Jul 15 04:08:38 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 15 Jul 2007 21:08:38 +1000
Subject: [antlr-interest] Decision can match input such as "DOT ID"using
	multiple alternatives
References: <002d01c7c67c$42ce2900$c704a8c0@hercules>
Message-ID: <005401c7c6d0$7fe21a50$60f46c3a@vulcain>

MessageI think I didn't understand predicate very well at the time of the writing.
now it's much better and I manage to remove all ambiguity!!

  ----- Original Message ----- 
  From: Micheal J 
  To: antlr-interest at antlr.org 
  Sent: Sunday, July 15, 2007 11:05 AM
  Subject: Re: [antlr-interest] Decision can match input such as "DOT ID"using multiple alternatives


  Have identifier built the ID (DOT ID)* [sub-]tree. Basically make it into a qualifiedIdentifier or dottedIdentifier sort of rule. Call that from you primary rule. You can check that it has exactly one qualifier using actions in the parser or treeparser.

  Micheal
  -----------------------
  The best way to contact me is via the list/forum. My time is very limited. 

    -----Original Message-----
    From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
    Sent: 13 July 2007 15:27
    To: antlr-interest at antlr.org
    Subject: [antlr-interest] Decision can match input such as "DOT ID" usingmultiple alternative


    The compilers tell me. My problem is it's obvious but it *shouldn't be a problem", how can I make ANTLR be happy?

    I have a grammar like that

    primary:
        (atom -> atom)
        (
            (LPAREN expressionList RPAREN -> ^(LPAREN $primary expressionList)) // method call
            // read object DOT property name
            | (DOT ID -> ^(DOT $primary ID)) 
        )*
        ;
    atom:
        INT -> ^(CONSTANT INT)
        | STRING -> ^(CONSTANT STRING)
        identifier -> identifier
        ;
    identifier:
        // read identifier or class name
        (id0=ID->$id0)
            (DOT id1=ID->$(DOT $identifier $id1)) * 
                ((LT identifier GT) => LT id2=identifier GT -> $(GENERIC $identifier $id2))?

    now it says there are multiple way to access the tokens ID, and that's true.
    howver I assume identifier consume all that it can, and primary will consume only those ID that haven't been consumed by identifier.
    (on top of that I generate the same AST in both case...)

    Anyway, could some help me to solve this problem?
    I need to be able to use ID DOT ID in the 'identifer' property as I need to call this rule in 'LT identifier GT'.
    yet I need it in the primary, as I need to access the property of any object....

    how can I solve that?!?!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/d24d394b/attachment.html 

From ld at galador.net  Sun Jul 15 04:09:46 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 15 Jul 2007 21:09:46 +1000
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
References: <003401c7c67f$88f60800$c704a8c0@hercules>
Message-ID: <005d01c7c6d0$a7f07780$60f46c3a@vulcain>

MessageInteresting idea.. I am thinking about it!
thanks....
  ----- Original Message ----- 
  From: Micheal J 
  To: antlr-interest at antlr.org 
  Sent: Sunday, July 15, 2007 11:29 AM
  Subject: Re: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


  You may be trying to do too much in the lexer Lloyd. Seems you can simply change the lexer to emit say NUM_FLOAT_DOT for floats that end with the decimal point. The lexer seems to handle your other NUM_FLOAT examples just fine. 

  You can then deal with the NUM_FLOAT_DOT ID sequence in the parser.

  NUM_INT
    :  DIGITS 
       (
            '.' { $type = NUM_FLOAT_DOT; } 
            ( fraction_digits=DIGITS { $type = NUM_FLOAT; } )? 
            ( exponent_part=EXPONENT_PART { $type = NUM_FLOAT; } )? 
            ( float_suffix=FLOAT_TYPE_SUFFIX { $type = NUM_FLOAT; } )?
       )?

    | ..................... other match
  ;


  Micheal
  -----------------------
  The best way to contact me is via the list/forum. My time is very limited. 

    -----Original Message-----
    From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
    Sent: 15 July 2007 02:02
    To: antlr-interest at antlr.org
    Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


    For my parser I reaped of the lexer rules from the Java exemple.
    Particularly you've got this lexer token:
    NUM_FLOAT
     : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
     | ............ other match
     ;

    Now there is a problem with that!....
    in the language I target everything is an object.

    so:
    "2."  is NUM_FLOAT["2."] 
    "2.1"  is NUM_FLOAT["2.1"]
    "2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("] RPAREN[")]

    So I was trying to disambiguate the lexer with a construct like that (trying predicate in the lexer):
    NUM_FLOAT
     : (
       ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART) (FLOAT_TYPE_SUFFIX)?
      | ( DIGITS '.' ID )=> DIGITS
      | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
      )
      |    ..................... other match
    ;

    but this doesn't seem to work,
    1. it told me the NUM_INT rule is now not accessible anymore (I guess the NUM_FLOAT rule absorbs it with my second alternative)
    2. but more importantly an input such as "2.a" return "2." followed by MismatchTokenException.

    can I use predicate in lexer rule?
    how could I disambiguate the NUM_FLOAT lexer rule?
    I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT DOT ID LPAREN RPAREN)?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/7aeca1e9/attachment.html 

From ld at galador.net  Sun Jul 15 04:11:07 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 15 Jul 2007 21:11:07 +1000
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
References: <003c01c7c680$8dd07170$c704a8c0@hercules>
Message-ID: <006801c7c6d0$d8039880$60f46c3a@vulcain>

MessageThe problem is: the result really depends of what's after.

1. is ambiguous

1.e is ambiguous
1.e3 is a float
1.echo is INT DOT ID

  ----- Original Message ----- 
  From: Micheal J 
  To: antlr-interest at antlr.org 
  Sent: Sunday, July 15, 2007 11:36 AM
  Subject: Re: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


  Hi, Forgot to ask:

  What should the lexer return for these values (note the spaces)?
  ".1"
  "1 .1"
  "1 ."

  Micheal

  -----------------------
  The best way to contact me is via the list/forum. My time is very limited. 

    -----Original Message-----
    From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
    Sent: 15 July 2007 02:02
    To: antlr-interest at antlr.org
    Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


    For my parser I reaped of the lexer rules from the Java exemple.
    Particularly you've got this lexer token:
    NUM_FLOAT
     : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
     | ............ other match
     ;

    Now there is a problem with that!....
    in the language I target everything is an object.

    so:
    "2."  is NUM_FLOAT["2."] 
    "2.1"  is NUM_FLOAT["2.1"]
    "2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("] RPAREN[")]

    So I was trying to disambiguate the lexer with a construct like that (trying predicate in the lexer):
    NUM_FLOAT
     : (
       ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART) (FLOAT_TYPE_SUFFIX)?
      | ( DIGITS '.' ID )=> DIGITS
      | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
      )
      |    ..................... other match
    ;

    but this doesn't seem to work,
    1. it told me the NUM_INT rule is now not accessible anymore (I guess the NUM_FLOAT rule absorbs it with my second alternative)
    2. but more importantly an input such as "2.a" return "2." followed by MismatchTokenException.

    can I use predicate in lexer rule?
    how could I disambiguate the NUM_FLOAT lexer rule?
    I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT DOT ID LPAREN RPAREN)?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/a292ba11/attachment-0001.html 

From mail.acc at freenet.de  Sun Jul 15 04:27:11 2007
From: mail.acc at freenet.de (mail.acc at freenet.de)
Date: Sun, 15 Jul 2007 13:27:11 +0200
Subject: [antlr-interest] Questions to Java.g
Message-ID: <E1IA2Fr-0004os-Uz@www11.emo.freenet-rz.de>

Hi,
I have got two questions to the Java.g grammar.

1st:
I am very impressed by the precise error description of ANTLR when it applies "Recovery bysingle deletion" or "Recovery by single insertion", but I tested it with a special input, which is not valid Java (the keyword "import" is mising), and ANTLR reported not a single error. It, however , doesn't execute the actions which I inserted when it finds an block statement.
Because it is the first Token missing I dare say this isn't the same situation as described in "Recovery by single insertion" in the book, but...
Shouldn't there be at least an error message: "line 1:0 something is wrong", that I can pass to the user?
---------------------
 java.io.*;
  public class Code {
    public void doSomething() {
    int i = 0;
  }
}
---------------------


2nd:
I made further tests with this grammar and by chance noticed something weird. This time I have an valid Java file, but Java.g reported an lexer-error (at least I think it is an lexer-error). But it occurs only in this special situation.
If the last line of the file ends with an single line comment, and if there is no newline after this, I get the following error:
> line 2:12 mismatched character '<EOF>' expecting 'n'
Input:
---------------------
public class Code {}
// End Class
---------------------


I would be grateful if anyone can help me especially with the first question.

Best wishes from Germany
Andreas









From pink at odahoda.de  Sun Jul 15 04:28:04 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 15 Jul 2007 13:28:04 +0200
Subject: [antlr-interest] Where is the latest build/source
References: <693a69ba0707142242l24bb900cp14c9fd0a23215126@mail.gmail.com>
Message-ID: <f7d0c5$bdr$1@sea.gmane.org>

Hello,

Alex Shneyderman wrote:

> I wonder where can I download the latest build from?
> I would also like to have the source for it.
> 
> I am sure I was able to do this before but can not locate
> the links anymore.

You can get the latest sources from
<http://fisheye2.cenqua.com/browse/antlr> (The 'Tarball' box at the bottom
left).
Theoretically builds can be fetched from
<http://www.antlr.org/download/build/>. But this has not been updated from
some time.

HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From sam.ellis at arm.com  Sun Jul 15 04:55:19 2007
From: sam.ellis at arm.com (Sam Ellis)
Date: Sun, 15 Jul 2007 12:55:19 +0100
Subject: [antlr-interest] Internal error from ANTLR 3.0 when parsing .g file
	containing '!' without AST generation enabled.
Message-ID: <C2BFC9B7.13E92%sam.ellis@arm.com>

When converting an ANTLR 2 grammar to ANTLR 3 I came across the following
internal error exception:

[java] ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
[java] error(10):  internal error: XYZ.g :
java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
[java] 
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
oup.java:485)
...

Searching the mailing list I saw that this was reported a year ago on an
early access 3.0 release:
http://www.antlr.org/pipermail/antlr-interest/2006-April/016122.html

The cause is as stated in the earlier post; I was using '!' without AST
generation enabled. I only mention this again because it looks like this was
not fixed for the 3.0 final release, and I can't see it mentioned in the bug
tracker (and nor do I see how to raise a new bug report).


-- 
Sam Ellis, RVDK Team Leader,
DevSys Product Engineering Group,          Tel: +44 (0) 1223 400516
ARM Ltd., 110 Fulbourn Road,               Fax: +44 (0) 1223 400887
Cambridge, CB1 9NJ                         mailto:Sam.Ellis at arm.com



-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From pink at odahoda.de  Sun Jul 15 04:57:46 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 15 Jul 2007 13:57:46 +0200
Subject: [antlr-interest] Internal error from ANTLR 3.0 when parsing .g
	file containing '!' without AST generation enabled.
References: <C2BFC9B7.13E92%sam.ellis@arm.com>
Message-ID: <f7d23q$fr1$1@sea.gmane.org>

Sam Ellis wrote:

> When converting an ANTLR 2 grammar to ANTLR 3 I came across the following
> internal error exception:
> 
> [java] ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> [java] error(10):  internal error: XYZ.g :
> java.lang.IllegalArgumentException: Can't find template tokenRefBang.st
> [java]
>
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGr
> oup.java:485)
> ...
> 
> Searching the mailing list I saw that this was reported a year ago on an
> early access 3.0 release:
> http://www.antlr.org/pipermail/antlr-interest/2006-April/016122.html
> 
> The cause is as stated in the earlier post; I was using '!' without AST
> generation enabled. I only mention this again because it looks like this
> was not fixed for the 3.0 final release, and I can't see it mentioned in
> the bug tracker (and nor do I see how to raise a new bug report).

The "I have not cleaned up error handling yet." statement still applies to
the 3.0 release. Ter is working on the v2->v3 migration of ANTLRs own
parser (which is a prerequisite for better error handling) and seems to
make good progress right now.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From open.zone at virgin.net  Sun Jul 15 05:11:26 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 15 Jul 2007 13:11:26 +0100
Subject: [antlr-interest] Stream processing
In-Reply-To: <87k5t2qc1v.fsf@mid.deneb.enyo.de>
Message-ID: <000e01c7c6d9$483479f0$c704a8c0@hercules>

Hi,

> Right now, the generated parser seems to load the whole 
> document into memory, in some kind of parsed form.  Loading 
> the source document is not a big issue for me (it's just 
> about 3 MB in size), but the whole parser data definitely 
> takes too much memory (close to 1 GiB).

What was the target language?. How did you measure this memory usage?. 

Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited.


From open.zone at virgin.net  Sun Jul 15 05:11:26 2007
From: open.zone at virgin.net (Micheal J)
Date: Sun, 15 Jul 2007 13:11:26 +0100
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <006801c7c6d0$d8039880$60f46c3a@vulcain>
Message-ID: <000901c7c6d9$46c72e50$c704a8c0@hercules>

Hi,
 
I was really after these:
 
".1" 
--> DOT NUM_INT["1"] ?
--> NUM_FLOAT[".1"] ?
 
".1 1"
--> DOT NUM_INT["1"] WHITESPACE NUM_INT["1"] ?
--> NUM_FLOAT[".1"] WHITESPACE NUM_INT["1"] ?
 
As for your examples, "1." is ambiguos at the lexing stage but the parser
has more context and the ambiguity disappears. If you followed my
suggestion, you just emit a NUM_FLOAT_DOT["1."] in the lexer and the parser
can deal with it as a float value or prefix to a memberAcess (i.e. the
"<object><.>" bit of an "<object><.><member>" operation).
 
float
    : NUM_FLOAT    // "1.e3"
    | NUM_FLOAT_DOT // "1."
    .... ;
 
memberAccessExpr
    : ID DOT ID
    | NUM_FLOAT_DOT ID  // "1.echo", "1.e"
    .... ;
 
Micheal

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: Lloyd Dupont [mailto:ld at galador.net] 
Sent: 15 July 2007 12:11
To: Micheal J; antlr-interest at antlr.org
Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
predicate in lexer rule?)


The problem is: the result really depends of what's after.
 
1. is ambiguous
 
1.e is ambiguous
1.e3 is a float
1.echo is INT DOT ID
 

----- Original Message ----- 
From: Micheal  <mailto:open.zone at virgin.net> J 
To: antlr-interest at antlr.org 
Sent: Sunday, July 15, 2007 11:36 AM
Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
predicate in lexer rule?)

Hi, Forgot to ask:
 
What should the lexer return for these values (note the spaces)?
".1"
"1 .1"
"1 ."
 
Micheal
 

-----------------------
The best way to contact me is via the list/forum. My time is very limited. 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: 15 July 2007 02:02
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in
lexer rule?)


For my parser I reaped of the lexer rules from the Java exemple.
Particularly you've got this lexer token:
NUM_FLOAT
 : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
 | ............ other match
 ;
 
Now there is a problem with that!....
in the language I target everything is an object.
 
so:

"2."  is NUM_FLOAT["2."] 
"2.1"  is NUM_FLOAT["2.1"]
"2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("]
RPAREN[")]
 
So I was trying to disambiguate the lexer with a construct like that (trying
predicate in the lexer):
NUM_FLOAT
 : (
   ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART)
(FLOAT_TYPE_SUFFIX)?
  | ( DIGITS '.' ID )=> DIGITS
  | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
  )
  |    ..................... other match
;
 
but this doesn't seem to work,
1. it told me the NUM_INT rule is now not accessible anymore (I guess the
NUM_FLOAT rule absorbs it with my second alternative)
2. but more importantly an input such as "2.a" return "2." followed by
MismatchTokenException.
 
can I use predicate in lexer rule?
how could I disambiguate the NUM_FLOAT lexer rule?
I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT
DOT ID LPAREN RPAREN)?
 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/87e367cf/attachment.html 

From aliaazimi at yahoo.com  Sun Jul 15 07:33:33 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 15 Jul 2007 07:33:33 -0700 (PDT)
Subject: [antlr-interest] "java.lang.OutOfMemoryError: Java heap space"
	error message (newbie)
Message-ID: <898395.96305.qm@web58101.mail.re3.yahoo.com>


 Hello,
 
I am still not able to increase the heap space. I keep getting "java.lang.OutOfMemoryError: Java heap space" error message once I click on the debugger. 
I use the the command "java -Xms32m -Xmx512m org.antlr.Tool RFC3986.g" but then face the following error message: 
"Exception in thread "main" java.lang.NoClassDefFoundError:org/antlr/Tool". 
I use ANTLRWorks_1.0.201. 
Could you please suggest me an easy way of sorting this out(increasing the heap space). I will be very grateful.
 
Many thanks in advance.
 
Best wishes,
Al

 


       
---------------------------------
Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/fe79a28e/attachment-0001.html 

From rschulz at sonic.net  Sun Jul 15 07:44:45 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 07:44:45 -0700
Subject: [antlr-interest] "java.lang.OutOfMemoryError: Java heap space"
	error message (newbie)
In-Reply-To: <898395.96305.qm@web58101.mail.re3.yahoo.com>
References: <898395.96305.qm@web58101.mail.re3.yahoo.com>
Message-ID: <200707150744.45433.rschulz@sonic.net>

On Sunday 15 July 2007 07:33, ali azimi wrote:
>  Hello,
>
> I am still not able to increase the heap space. I keep getting
> "java.lang.OutOfMemoryError: Java heap space" error message once I
> click on the debugger. I use the the command "java -Xms32m -Xmx512m
> org.antlr.Tool RFC3986.g" but then face the following error message:
> "Exception in thread "main"
> java.lang.NoClassDefFoundError:org/antlr/Tool". I use
> ANTLRWorks_1.0.201.
> Could you please suggest me an easy way of sorting this
> out(increasing the heap space). I will be very grateful.

You're not dealing with an out-of-memory condition. You're invoking the 
JVM without properly telling it where your ANTLR libraries (JAR files) 
are located.

Please show us the command you're using to attempt to launch ANTLRWorks 
with the -X options. If it's literally the one you gave above:

    java -Xms32m -Xmx512m org.antlr.Tool RFC3986.g

Then of course it won't work. You must include a -classpath ... 
or -cp ... option to tell Java where to find the ANTLR classes.

It appears nothing has changed since your last message on this topic.

I'll repeat this advice I gave you then:

On Friday 13 July 2007 09:24, Randall R Schulz wrote:
> How were you invoking ANTLR before? Some script? It will have the
> necessary class-path argument that you'll need to include.
>
> Alternately, you can just modify that script to have the heap limit
> options or to be able to accept such options on its command line.


> ...
> Al


Randall Schulz

From aliaazimi at yahoo.com  Sun Jul 15 08:14:47 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 15 Jul 2007 08:14:47 -0700 (PDT)
Subject: [antlr-interest] "java.lang.OutOfMemoryError: Java heap space"
	error message (newbie)
In-Reply-To: <200707150744.45433.rschulz@sonic.net>
Message-ID: <850314.3202.qm@web58106.mail.re3.yahoo.com>



Randall R Schulz <rschulz at sonic.net> wrote:    On Sunday 15 July 2007 07:33, ali azimi wrote:
> Hello,
>
> I am still not able to increase the heap space. I keep getting
> "java.lang.OutOfMemoryError: Java heap space" error message once I
> click on the debugger. I use the the command "java -Xms32m -Xmx512m
> org.antlr.Tool RFC3986.g" but then face the following error message:
> "Exception in thread "main"
> java.lang.NoClassDefFoundError:org/antlr/Tool". I use
> ANTLRWorks_1.0.201.
> Could you please suggest me an easy way of sorting this
> out(increasing the heap space). I will be very grateful.

You're not dealing with an out-of-memory condition. You're invoking the 
JVM without properly telling it where your ANTLR libraries (JAR files) 
are located.

Please show us the command you're using to attempt to launch ANTLRWorks 
with the -X options. 
   
  I do not use any commands to launch ANTLRWorks. I simply double-click on the jar file (ANTLRWorks_1.0.201.jar) which is located on my computer desktop. I use the command ?java -Xms32m -Xmx512m org.antlr.Tool RFC3986.g ? in an attempt to increase the heap space.
   
   
  If it's literally the one you gave above:

java -Xms32m -Xmx512m org.antlr.Tool RFC3986.g

Then of course it won't work. You must include a -classpath ... 
or -cp ... option to tell Java where to find the ANTLR classes.

It appears nothing has changed since your last message on this topic.

I'll repeat this advice I gave you then:

On Friday 13 July 2007 09:24, Randall R Schulz wrote:
> How were you invoking ANTLR before? Some script? It will have the
> necessary class-path argument that you'll need to include.
>
> Alternately, you can just modify that script to have the heap limit
> options or to be able to accept such options on its command line.


> ...
> Al


Randall Schulz



 
---------------------------------
Bored stiff? Loosen up...
Download and play hundreds of games for free on Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/ac726794/attachment.html 

From fw at deneb.enyo.de  Sun Jul 15 08:31:50 2007
From: fw at deneb.enyo.de (Florian Weimer)
Date: Sun, 15 Jul 2007 17:31:50 +0200
Subject: [antlr-interest] Stream processing
In-Reply-To: <000e01c7c6d9$483479f0$c704a8c0@hercules> (Micheal J.'s message
	of "Sun, 15 Jul 2007 13:11:26 +0100")
References: <000e01c7c6d9$483479f0$c704a8c0@hercules>
Message-ID: <87ir8lk7ix.fsf@mid.deneb.enyo.de>

* Micheal J.:

>> Right now, the generated parser seems to load the whole 
>> document into memory, in some kind of parsed form.  Loading 
>> the source document is not a big issue for me (it's just 
>> about 3 MB in size), but the whole parser data definitely 
>> takes too much memory (close to 1 GiB).
>
> What was the target language?.

Java.

> How did you measure this memory usage?. 

Garbage collector statistics.

Part of the problem is that CommonTokenStream builds an ArrayList of
all tokens.  I'm building my own token stream to address that.  I'm
not yet sure if this will solve the whole problem.

From rschulz at sonic.net  Sun Jul 15 08:47:00 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 08:47:00 -0700
Subject: [antlr-interest] "java.lang.OutOfMemoryError: Java heap space"
	error message (newbie)
In-Reply-To: <850314.3202.qm@web58106.mail.re3.yahoo.com>
References: <850314.3202.qm@web58106.mail.re3.yahoo.com>
Message-ID: <200707150847.00482.rschulz@sonic.net>

Ali,

Please maintain proper message quoting characters. Without them, it 
becomes difficult to sort out successive reply text from the text being 
replied-to.


On Sunday 15 July 2007 08:14, ali azimi wrote:
> Randall R Schulz <rschulz at sonic.net> wrote:
> >
> > On Sunday 15 July 2007 07:33, ali azimi wrote:
> > > Hello,
> > >
> > > I am still not able to increase the heap space. I keep getting
> > > "java.lang.OutOfMemoryError: Java heap space" error message once
> > > I click on the debugger. I use the the command "java -Xms32m
> > > -Xmx512m org.antlr.Tool RFC3986.g" but then face the following
> > > error message: "Exception in thread "main"
> > > java.lang.NoClassDefFoundError:org/antlr/Tool". I use
> > > ANTLRWorks_1.0.201.
> > > Could you please suggest me an easy way of sorting this
> > > out(increasing the heap space). I will be very grateful.
> >
> > You're not dealing with an out-of-memory condition. You're invoking
> > the JVM without properly telling it where your ANTLR libraries (JAR
> > files) are located.
> >
> > Please show us the command you're using to attempt to launch
> > ANTLRWorks with the -X options.
> >
>   I do not use any commands to launch ANTLRWorks. I simply
> double-click on the jar file (ANTLRWorks_1.0.201.jar) which is
> located on my computer desktop. I use the command ?java -Xms32m
> -Xmx512m org.antlr.Tool RFC3986.g ? in an attempt to increase the
> heap space.

I'm not sure I understand what you're doing. Which program is exceeding 
its heap allocation? ANTLRWorks or ANTLR invoked on the command line?

This command:

    java -Xms32m -Xmx512m org.antlr.Tool RFC3986.g

(setting aside the missing class-path arguments and the fact that such 
an invocation could never successfully launch anything) is an 
invocation of the ANTLR tool, the program that takes ANTLR grammars and 
produces target parser (and / or lexer, etc.) source code that in turn 
implements the grammar specified in the ".g" file.

This is _not_ an invocation of ANTLRWorks.

If ANTLRWorks (which is self-contained) is running out of memory, then 
you'll have to launch _it_ with the -X... memory options. If ANTLR is 
running out of memory when processing your grammar, then you must 
launch _it_ with the memory options _and_ its classpath. This precludes 
simply double-clicking the JAR file, which will use only default JVM 
parameters, including its default memory limits.


Randall Schulz

From aliaazimi at yahoo.com  Sun Jul 15 09:17:48 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 15 Jul 2007 09:17:48 -0700 (PDT)
Subject: [antlr-interest] "java.lang.OutOfMemoryError: Java heap space"
	error message (newbie)
Message-ID: <202623.9841.qm@web58114.mail.re3.yahoo.com>

 
  Hi,
   
  I apologise for not explaining my problem clearly. I use ANTLRWorks. ANTLRWorks exceeds its heap allocation when I try to debug the grammar I have produced. I do not know how to launch ANTLRWorks with ?X
 memory option. Could you please tell me how?
   
  Thank you.
   
  Best wishes,
   
  Al

       
---------------------------------
Boardwalk for $500? In 2007? Ha! 
Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/7ec6a6bc/attachment.html 

From rschulz at sonic.net  Sun Jul 15 09:33:58 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 09:33:58 -0700
Subject: [antlr-interest] "java.lang.OutOfMemoryError: Java heap space"
	error message (newbie)
In-Reply-To: <202623.9841.qm@web58114.mail.re3.yahoo.com>
References: <202623.9841.qm@web58114.mail.re3.yahoo.com>
Message-ID: <200707150933.58596.rschulz@sonic.net>

On Sunday 15 July 2007 09:17, ali azimi wrote:
>   Hi,
>
>   I apologise for not explaining my problem clearly. I use
> ANTLRWorks. ANTLRWorks exceeds its heap allocation when I try to
> debug the grammar I have produced. I do not know how to launch
> ANTLRWorks with ?X
 memory option. Could you please tell me how?

OK.

Since you obviously know where your ANTLRWorks JAR file is (you said 
you've been launching it by double-clicking its desktop icon (*)), so 
for the sake of concreteness, let's say its absolute path name 
is "C:/AW/antlrworks-1.0.2.jar" (make life easier for yourself and use 
forward slashes even under Windows--they'll work there just as they do 
on Unix and Unix-like systems).

(*) If you're launching ANTLRWorks via a desktop shortcut, you'll need 
to find the target of the shortcut, not the shortcut itself. Use the 
shortcut's properties dialog to find the full path name of the JAR 
file.

Second, you appear to be able to use a command line to (attempt to) run 
ANTLR, as showed by your previous but as-yet unsuccessful attempts to 
do so.

So using a command-line (CMD.exe if you must, a Cygwin shell if you're 
more fortunately) issue this command:

   java -Xms32m -Xmx512m -jar "C:/AW/antlrworks-1.0.2.jar"


Alternately, you could create a desktop shortcut whose target is this 
command. In this case, use "javaw" instead of "java" (this avoids the 
creation of a character window). Then you can simply double-click this 
icon instead of the one you had been using.


> ...
>   Al


Good luck.

Randall Schulz

From mail.acc at freenet.de  Sun Jul 15 09:38:19 2007
From: mail.acc at freenet.de (Andreas)
Date: Sun, 15 Jul 2007 18:38:19 +0200
Subject: [antlr-interest] Questions to Java.g
In-Reply-To: <E1IA2Fr-0004os-Uz@www11.emo.freenet-rz.de>
References: <E1IA2Fr-0004os-Uz@www11.emo.freenet-rz.de>
Message-ID: <469A4D7B.3080904@freenet.de>

mail.acc at freenet.de schrieb:
> 2nd:
> I made further tests with this grammar and by chance noticed something weird. This time I have an valid Java file, but Java.g reported an lexer-error (at least I think it is an lexer-error). But it occurs only in this special situation.
> If the last line of the file ends with an single line comment, and if there is no newline after this, I get the following error:
>> line 2:12 mismatched character '<EOF>' expecting 'n'
> Input:
> ---------------------
> public class Code {}
> // End Class
> ---------------------

After a little search in the archives of this mailing list I found a 
e-mail which I think is about the same issue.

http://www.antlr.org/pipermail/antlr-interest/2006-January/015126.html
Although his originated question about the EOF Token has not been 
answered someone gave an answer about the inline comment <EOF> problem.

http://www.antlr.org/pipermail/antlr-interest/2006-January/015128.html
 > Make NewLine at the end of single line comment optional:
 > SingleLineComment :"//" ( ~('\r' | '\n') )* ( NewLine )? ;
 > It will match NewLine everywhere except
 > // comment text <EOF>

If I'm not totaly wrong that is the same issue with Java.g, isn't it?


Best Wishes From Germany
Andreas


From vbar at comp.cz  Sun Jul 15 09:59:31 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Sun, 15 Jul 2007 18:59:31 +0200
Subject: [antlr-interest] How does one refer to the char matching '.'?
Message-ID: <200707151859.31095.vbar@comp.cz>

Hi,

I'd like to have a lexer rule for string characters:

StringChar
	: .
	;

I presume that when defining it as the last rule, after quote tokens etc., 
only the "generic" characters will match, and it does seem to work, but how 
do I get at the matched character?

Perhaps not very surprisingly,

StringChar returns [ char value ]
	: . { $value = $.; }
	;

doesn't work:

    [javac] /home/vb/antlr/antmaker/src/LoaderLexer.java:395: <identifier> 
expected
    [javac]                value = $.;
    [javac]                          ^

Is there some special syntax I'm missing?

	Bye
		Vasek

From rschulz at sonic.net  Sun Jul 15 10:07:36 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 10:07:36 -0700
Subject: [antlr-interest] How does one refer to the char matching '.'?
In-Reply-To: <200707151859.31095.vbar@comp.cz>
References: <200707151859.31095.vbar@comp.cz>
Message-ID: <200707151007.36839.rschulz@sonic.net>

On Sunday 15 July 2007 09:59, Vaclav Barta wrote:
> Hi,
>
> I'd like to have a lexer rule for string characters:
>
> StringChar
> 	: .
> 	;

You might want to consider consolidating these characters, if that would 
work for your purposes:

StringChars
	: .+
	;


Otherwise you're likely to get a surfeit of one-character tokens.


> I presume that when defining it as the last rule, after quote tokens
> etc., only the "generic" characters will match, and it does seem to
> work, but how do I get at the matched character?
>
> Perhaps not very surprisingly,
>
> StringChar returns [ char value ]
> 	: . { $value = $.; }
> 	;
>
> doesn't work:

Call the method "getText()" in the lexical rule's action.

I'm not sure, but I don't think lexical rules can return anything other 
than Token (implementations).

You can, however, replace the token's text by calling setText().


Randall Schulz

From vbar at comp.cz  Sun Jul 15 11:00:43 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Sun, 15 Jul 2007 20:00:43 +0200
Subject: [antlr-interest] How does one refer to the char matching '.'?
In-Reply-To: <200707151007.36839.rschulz@sonic.net>
References: <200707151859.31095.vbar@comp.cz>
	<200707151007.36839.rschulz@sonic.net>
Message-ID: <200707152000.43417.vbar@comp.cz>

On Sunday 15 July 2007 19:07, Randall R Schulz wrote:
> On Sunday 15 July 2007 09:59, Vaclav Barta wrote:
> > I'd like to have a lexer rule for string characters:
> >
> > StringChar
> >
> > 	: .
> >
> > 	;
> You might want to consider consolidating these characters, if that would
> work for your purposes:
Well, I don't know - I'm planning to have ${name} variables interpolated 
inside double-quoted strings (like in Unix shells), so a parser rule for 
strings seemed more natural to me than doing everything in the lexer... 
What's the usual way of implementing interpolated strings in ANTLR?

> Call the method "getText()" in the lexical rule's action.
Ah yes, there's actually no problem calling $StringChar.getText() in the 
parser rules using the token - thanks.

	Bye
		Vasek

From rdclark at gmail.com  Sun Jul 15 11:15:39 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 15 Jul 2007 11:15:39 -0700
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <006801c7c6d0$d8039880$60f46c3a@vulcain>
References: <003c01c7c680$8dd07170$c704a8c0@hercules>
	<006801c7c6d0$d8039880$60f46c3a@vulcain>
Message-ID: <d3992d900707151115o26b35132of0a69a51da76311f@mail.gmail.com>

If you're designing this language, you're better off changing the
design to be unambiguous. Seriously.

For example, what do you do with "2.1.toString()"? Or the "2.e3"
example (which, in every other language I've seen is "2.0e3").

Otherwise, be prepared to break things apart a little too much in the
lexer and have the parser stitch them back together again, as in "2.1"
becomes INT DOT INT and it's the parser's job to recognize the float.

 ...Richard

From parrt at cs.usfca.edu  Sun Jul 15 11:28:38 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 15 Jul 2007 11:28:38 -0700
Subject: [antlr-interest] new action syntax proposal
In-Reply-To: <8F043F39-C1D8-49F4-937A-42F6A893D169@wincent.com>
References: <D9466F25-A416-4E60-97BE-90AE247B0839@cs.usfca.edu>
	<051466DAA0D608439E196797955018D76ED3@wavemachine.temporal-wave.com>
	<8F043F39-C1D8-49F4-937A-42F6A893D169@wincent.com>
Message-ID: <06BCCB97-CC69-489B-93C8-277B0E714100@cs.usfca.edu>

Hi Guys,

The {{...}} would only work if {{ were lexically together.  Also I  
like it because it's terse.  I also like the fact that it doesn't  
look that different from the regular action.  Turning off  
backtracking shouldn't leave a bunch of @always or other stuff as  
detritus in the grammar.

Ok, i'll implement soon.  I will try to get v3 written in v3 this  
week.  I am picking up Kay Roepke from the scareport in about 45  
minutes.  Some gooding coding to be done next two weeks. :)

Jean also has a really nice new feature coming in AW 1.0.3.  The  
decision points are all highlighted in grammar (as an option).  Green  
means normal LL(*), yellow means either backtracking and/or sem- 
predicated decision.

Ter

From parrt at cs.usfca.edu  Sun Jul 15 11:31:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 15 Jul 2007 11:31:55 -0700
Subject: [antlr-interest] Questions to Java.g
In-Reply-To: <469A4D7B.3080904@freenet.de>
References: <E1IA2Fr-0004os-Uz@www11.emo.freenet-rz.de>
	<469A4D7B.3080904@freenet.de>
Message-ID: <F03E8EEA-94A9-4EC5-974E-BFF6E8BA80BD@cs.usfca.edu>


On Jul 15, 2007, at 9:38 AM, Andreas wrote:
> mail.acc at freenet.de schrieb:
>> 2nd:
>> I made further tests with this grammar and by chance noticed  
>> something weird. This time I have an valid Java file, but Java.g  
>> reported an lexer-error (at least I think it is an lexer-error).  
>> But it occurs only in this special situation.
>> If the last line of the file ends with an single line comment, and  
>> if there is no newline after this, I get the following error:
>>> line 2:12 mismatched character '<EOF>' expecting 'n'
>> Input:
>> ---------------------
>> public class Code {}
>> // End Class
>> ---------------------

Yeah, i should modify comments to have EOF as valid terminator.  UNIX  
doesn't like files w/o final new line so I didnt' bother before.

Ter

From aliaazimi at yahoo.com  Sun Jul 15 13:11:37 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 15 Jul 2007 13:11:37 -0700 (PDT)
Subject: [antlr-interest] (error)Reference to TreeAdaptor and Common Tree
	are ambiguous.(newbie)
Message-ID: <532772.49527.qm@web58111.mail.re3.yahoo.com>

Hi,
   
  I have produced a Lexer and a Parser. When I try to implemnt them Using java netBeans, I face some error message as following:
   
  C:\MyProjects\Final Project\src\finalprojectsim2\FinalProjectSim2Parser.java:74: reference to TreeAdaptor is ambiguous, both class org.antlr.runtime.tree.TreeAdaptor in org.antlr.runtime.tree and class org.antlr.runtime.TreeAdaptor in org.antlr.runtime match
      protected TreeAdaptor adaptor = new CommonTreeAdaptor();
   
  and
   
  C:\MyProjects\Final Project\src\finalprojectsim2\FinalProjectSim2Parser.java:139: reference to CommonTree is ambiguous, both class org.antlr.runtime.tree.CommonTree in org.antlr.runtime.tree and class org.antlr.runtime.CommonTree in org.antlr.runtime match
          CommonTree tree;
  
   
  According to the error messages I have two classes of ?TreeAdaptor? and two classes of ?CommonTree? one in "org.antlr.runtime.tree" and one in "org.antlr.runtime". But I have just one class which is called TreeAdaptor and one class which is called ?CommonTree? and both are located in "org.antlr.runtime.tree". So why do I get these errors?
   
  Thank you so much in advance.
   
  Best wishes,
   
  Al

       
---------------------------------
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/a9c39682/attachment.html 

From ed.hartley at gmail.com  Sun Jul 15 13:25:26 2007
From: ed.hartley at gmail.com (Edward Hartley)
Date: Sun, 15 Jul 2007 21:25:26 +0100
Subject: [antlr-interest] - Python Target
Message-ID: <66c67b670707151325n3a3c5e8m6ff796038c7978b@mail.gmail.com>

> I'm looking at the example grammar Expr.g from the book and when testing
> it with valid expressions like (3+4)*9 I get the output like the following
>>>> (3+4)*9
> line 0:-1 mismatched input '<EOF>' expecting NEWLINE
>
> Is this behaviour correct or is it due to my having missed something:
> I retained the skip() call in the  NEWLINE rule.
> I don not get this behavior with the Java target and see the same as is
> described in the book.

I can't reproduce this. Are you sure that the input actually has a '\n' at
the end? How does your main script look like?



My Driver program looks like this:

import antlr3
from ExprLexer import ExprLexer
from ExprParser import ExprParser



while True:
    expr = raw_input('>>> ')
    if expr == "'':
        break
    cStream = antlr3.StringStream(expr)
    lexer = ExprLexer(cStream)
    tStream = antlr3.CommonTokenStream(lexer)
    parser = ExprParser(tStream)
    parser.prog()

I'm a bit mystified and expect I've missed something blindingly obvious.
TIA
Ed
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/3913c5bb/attachment.html 

From pink at odahoda.de  Sun Jul 15 14:17:30 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sun, 15 Jul 2007 23:17:30 +0200
Subject: [antlr-interest] - Python Target
References: <66c67b670707151325n3a3c5e8m6ff796038c7978b@mail.gmail.com>
Message-ID: <f7e2ta$b5h$1@sea.gmane.org>

Edward Hartley wrote:

>> I'm looking at the example grammar Expr.g from the book and when testing
>> it with valid expressions like (3+4)*9 I get the output like the
>> following
>>>>> (3+4)*9
>> line 0:-1 mismatched input '<EOF>' expecting NEWLINE
>>
>> Is this behaviour correct or is it due to my having missed something:
>> I retained the skip() call in the  NEWLINE rule.
>> I don not get this behavior with the Java target and see the same as is
>> described in the book.
> 
> I can't reproduce this. Are you sure that the input actually has a '\n' at
> the end? How does your main script look like?
> 
> 
> 
> My Driver program looks like this:
> 
> import antlr3
> from ExprLexer import ExprLexer
> from ExprParser import ExprParser
> 
> while True:
>     expr = raw_input('>>> ')
>     if expr == "'':
>         break
>     cStream = antlr3.StringStream(expr)
>     lexer = ExprLexer(cStream)
>     tStream = antlr3.CommonTokenStream(lexer)
>     parser = ExprParser(tStream)
>     parser.prog()
> 
> I'm a bit mystified and expect I've missed something blindingly obvious.

The result of raw_input() does not include the '\n'. But in this grammar,
every line must be terminated by NEWLINE.
Either change the grammar (with raw_input() you are not able to read
multiline input anyway) or add a '\n' to the input before you feed it into
ANTLR.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From rschulz at sonic.net  Sun Jul 15 15:15:39 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 15:15:39 -0700
Subject: [antlr-interest] (error)Reference to TreeAdaptor and Common
	Tree are ambiguous.(newbie)
In-Reply-To: <532772.49527.qm@web58111.mail.re3.yahoo.com>
References: <532772.49527.qm@web58111.mail.re3.yahoo.com>
Message-ID: <200707151515.39172.rschulz@sonic.net>

On Sunday 15 July 2007 13:11, ali azimi wrote:
> Hi,
>
>   I have produced a Lexer and a Parser. When I try to implemnt them
> Using java netBeans, I face some error message as following:
>
>   C:\MyProjects\Final
> Project\src\finalprojectsim2\FinalProjectSim2Parser.java:74:
> reference to TreeAdaptor is ambiguous, both class
> org.antlr.runtime.tree.TreeAdaptor in org.antlr.runtime.tree and
> class org.antlr.runtime.TreeAdaptor in org.antlr.runtime match
> protected TreeAdaptor adaptor = new CommonTreeAdaptor();
>
>   and
>
>   C:\MyProjects\Final
> Project\src\finalprojectsim2\FinalProjectSim2Parser.java:139:
> reference to CommonTree is ambiguous, both class
> org.antlr.runtime.tree.CommonTree in org.antlr.runtime.tree and class
> org.antlr.runtime.CommonTree in org.antlr.runtime match CommonTree
> tree;
>
>
>   According to the error messages I have two classes of ?TreeAdaptor?
> and two classes of ?CommonTree? one in "org.antlr.runtime.tree" and
> one in "org.antlr.runtime". But I have just one class which is called
> TreeAdaptor and one class which is called ?CommonTree? and both are
> located in "org.antlr.runtime.tree". So why do I get these errors?

I'd look at both your import statements and your IDE's source-path and 
class-path setup. It's possible you've established a kind of alias: 
more than one way of interpreting the contents of a given unqualified 
name or more than one way of accessing a given set of classes in your 
library JAR files or class file directories.

Perhaps you have both the antlr-3.0.jar and the antlr-runtime-3.0.jar 
files in your classpath? The former is for the ANTLR processor, used 
only when transforming your grammar specification to Java code. Running 
that code requires only the antlr-runtime-3.0.jar file. Likewise for 
the antlr.2.7.7.jar (for the moment, ANTLR 3.0 parses its 
specifications using a bootstrapping parser written using antlr 2.7) 
and for stringtemplate-3.0.jar (used for modular source code 
synthesis). Conversely, all the classes in the antlr-runtime-3.0.jar 
are also present in antlr-3.0.jar.

The upshot is that to compile or run an ANTLR-generated parser you need 
only antlr-runtime-3.0.jar.


>   Thank you so much in advance.
>
>   Best wishes,
>
>   Al


Randall Schulz

From rschulz at sonic.net  Sun Jul 15 15:27:34 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 15:27:34 -0700
Subject: [antlr-interest] (error)Reference to TreeAdaptor and Common
	Tree are ambiguous.(newbie)
In-Reply-To: <200707151515.39172.rschulz@sonic.net>
References: <532772.49527.qm@web58111.mail.re3.yahoo.com>
	<200707151515.39172.rschulz@sonic.net>
Message-ID: <200707151527.34479.rschulz@sonic.net>

On Sunday 15 July 2007 15:15, Randall R Schulz wrote:
> ...
>
> Perhaps you have both the antlr-3.0.jar and the antlr-runtime-3.0.jar
> files in your classpath? The former is for the ANTLR processor, used
> only when transforming your grammar specification to Java code.
> Running that code requires only the antlr-runtime-3.0.jar file.
> Likewise for the antlr.2.7.7.jar (for the moment, ANTLR 3.0 parses
> its specifications using a bootstrapping parser written using antlr
> 2.7) and for stringtemplate-3.0.jar (used for modular source code
> synthesis). Conversely, all the classes in the antlr-runtime-3.0.jar
> are also present in antlr-3.0.jar.

That's perhaps not very clear.

Here it is again, more simply:

To run the ANTLR v3 tool, the class-path must include these JARs:

 .../lib/antlr-2.7.7.jar
 .../lib/antlr-3.0.jar
 .../lib/stringtemplate-3.0.jar


To compile or run parsers generated by ANTLR v3 you need only this JAR:

 .../lib/antlr-runtime-3.0.jar


Every class in antlr-runtime-3.0.jar is duplicated in antlr-3.0.jar. 
Antlr-3.0.jar so one shouldn't ever use them together. The Java virtual 
machine won't care, it will just take the first one found in the 
class-path, but IDEs might be more circumspect and tell you about a 
reference to a class that appears twice in the class-path.


> ...


Randall Schulz

From ld at galador.net  Sun Jul 15 16:49:25 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 16 Jul 2007 09:49:25 +1000
Subject: [antlr-interest] Understanding priorities in lexing
	(newbie)[Suggestion]
In-Reply-To: <28468953-5652-464A-9832-BB586C6B598B@cs.usfca.edu>
References: <E1I9Oly-0000By-2i@elasmtp-mealy.atl.sa.earthlink.net>
	<28468953-5652-464A-9832-BB586C6B598B@cs.usfca.edu>
Message-ID: <A52FCA1C040541F69F028824FE789976@lloydPC>

It doesn't look like to a reply to one of my post (at least according to the 
title), but it's very relevant to my problem, thanks :-)

----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
> On Jul 13, 2007, at 10:18 AM, Susan Jolly wrote:
>> I really appreciate people who take the time to write the simplest 
>> possible
>> grammar that illustrates the problem they are having rather than 
>> embedding
>> huge grammars in their posts.
>
> Hi Susan!  Agreed.
>


> That is a correct grammar.  Note that the following is not really  going 
> to work:
>
> DUMMY
> options {backtrack=true;}
> : (KEYWORD {$type = KEYWORD;}  | OTHER{$type = OTHER;})
> ;
>
> it will not execute the backtracking in this case as it thinks it  knows 
> what it's doing. :(
>

From ld at galador.net  Sun Jul 15 16:51:45 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 16 Jul 2007 09:51:45 +1000
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <000901c7c6d9$46c72e50$c704a8c0@hercules>
References: <000901c7c6d9$46c72e50$c704a8c0@hercules>
Message-ID: <0B82932548DD4310931569E4051EF8C7@lloydPC>

MessageYep, I'm starting to think I should use the parser to distinguish between these issue.
Glad someone confirmed!
It's just.. unusal, so I didn't dare go this way to start with....
  ----- Original Message ----- 
  From: Micheal J 
  To: antlr-interest at antlr.org 
  Sent: Sunday, July 15, 2007 10:11 PM
  Subject: Re: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


  Hi,

  I was really after these:

  ".1" 
  --> DOT NUM_INT["1"] ?
  --> NUM_FLOAT[".1"] ?

  ".1 1"
  --> DOT NUM_INT["1"] WHITESPACE NUM_INT["1"] ?
  --> NUM_FLOAT[".1"] WHITESPACE NUM_INT["1"] ?

  As for your examples, "1." is ambiguos at the lexing stage but the parser has more context and the ambiguity disappears. If you followed my suggestion, you just emit a NUM_FLOAT_DOT["1."] in the lexer and the parser can deal with it as a float value or prefix to a memberAcess (i.e. the "<object><.>" bit of an "<object><.><member>" operation).

  float
      : NUM_FLOAT    // "1.e3"
      | NUM_FLOAT_DOT // "1."
      .... ;

  memberAccessExpr
      : ID DOT ID
      | NUM_FLOAT_DOT ID  // "1.echo", "1.e"
      .... ;

  Micheal
  -----------------------
  The best way to contact me is via the list/forum. My time is very limited. 

    -----Original Message-----
    From: Lloyd Dupont [mailto:ld at galador.net] 
    Sent: 15 July 2007 12:11
    To: Micheal J; antlr-interest at antlr.org
    Subject: Re: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


    The problem is: the result really depends of what's after.

    1. is ambiguous

    1.e is ambiguous
    1.e3 is a float
    1.echo is INT DOT ID

      ----- Original Message ----- 
      From: Micheal J 
      To: antlr-interest at antlr.org 
      Sent: Sunday, July 15, 2007 11:36 AM
      Subject: Re: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


      Hi, Forgot to ask:

      What should the lexer return for these values (note the spaces)?
      ".1"
      "1 .1"
      "1 ."

      Micheal

      -----------------------
      The best way to contact me is via the list/forum. My time is very limited. 

        -----Original Message-----
        From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
        Sent: 15 July 2007 02:02
        To: antlr-interest at antlr.org
        Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in lexer rule?)


        For my parser I reaped of the lexer rules from the Java exemple.
        Particularly you've got this lexer token:
        NUM_FLOAT
         : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
         | ............ other match
         ;

        Now there is a problem with that!....
        in the language I target everything is an object.

        so:
        "2."  is NUM_FLOAT["2."] 
        "2.1"  is NUM_FLOAT["2.1"]
        "2.ToString()" is NUM_INT["2"] DOT["."] ID["ToString"] LPAREN["("] RPAREN[")]

        So I was trying to disambiguate the lexer with a construct like that (trying predicate in the lexer):
        NUM_FLOAT
         : (
           ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART) (FLOAT_TYPE_SUFFIX)?
          | ( DIGITS '.' ID )=> DIGITS
          | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
          )
          |    ..................... other match
        ;

        but this doesn't seem to work,
        1. it told me the NUM_INT rule is now not accessible anymore (I guess the NUM_FLOAT rule absorbs it with my second alternative)
        2. but more importantly an input such as "2.a" return "2." followed by MismatchTokenException.

        can I use predicate in lexer rule?
        how could I disambiguate the NUM_FLOAT lexer rule?
        I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT DOT ID LPAREN RPAREN)?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070716/63e47ce3/attachment-0001.html 

From aliaazimi at yahoo.com  Sun Jul 15 17:14:49 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Sun, 15 Jul 2007 17:14:49 -0700 (PDT)
Subject: [antlr-interest] Parser code is too large(1.68)! (newbie)
Message-ID: <252369.7481.qm@web58107.mail.re3.yahoo.com>

Hi,
   
  Thank you very much for all your helps.
   
  I have produced a lexer and parser. But the parser is so large that causes some messages to be produced.
  the following message comes up when I try to compile my parser which is 1.68 Mb, using NetBeans:
   
  "Question: The file FinalProject.java seems to be too large (1 Mb) to safely open.
  Opening the file could cause OutOfMemoryError, which would make the IDE unusable. Do you really want to open it?"
   
   
  I am not sometimes able to see the code for parser on the screen whereas I can see the code for the lexer and the Test file. 
  However I can successfully compile them all.(In parser case, after answering "Yes" to the error message )
   
   
  How can I deal with this?
   
  Best wishes,
   
  Al

 	      
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/0aceff10/attachment.html 

From Stephen_Hardy at rabbit.com  Sun Jul 15 17:35:16 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sun, 15 Jul 2007 17:35:16 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com>
	<13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu>
Message-ID: <62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com>

Terence,

 

Here is the console output when lint mode is turned on...

 

Exception in thread "main" java.lang.IllegalStateException: infinite
recursion to 

     <anonymous([])@58> referenced in <anonymous([])@53>; stack trace:

<anonymous([])@58>, attributes=[dd=<anonymous()@57>], references=[dd,
scs, d]>

<anonymous([])@53>, attributes=[d, ds=<anonymous()@52>], references=[ds,
scs, d]>

<anonymous([])@54>, attributes=[p=List[..<anonymous()@53>..]],
references=[p, scs, d]>

<anonymous([])@55>, attributes=[pl=<anonymous()@54>, v], references=[pl,
scs, d]>

<anonymous([])@56>, attributes=[ptl=<anonymous()@55>], references=[ptl,
scs, d]>

<anonymous([])@57>, attributes=[dsuf=List[..<anonymous()@56>..], id],
references=[id, dsuf, scs, d]>

<anonymous([])@58> (start of recursive cycle)

...

 

Without (as yet) fully understanding the above, it seems odd that every
line contains a "pointer" to the previous line in the attributes
*except* the second line (@53) refers to @52 and not @58.  Hmmm...

 

I'll look into it some more.  Somebody is about to use a welder, so I
have to log off for a while.  This is Fiji :-)

 

Regards,

SJH

 

 

> -----Original Message-----

> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-

> bounces at antlr.org] On Behalf Of Terence Parr

> Sent: Saturday, July 14, 2007 2:36 PM

> To: antlr-interest Interest

> Subject: Re: [antlr-interest] StringTemplate stack overflow

> exception,stringtemplate-3.0

> 

> Hi. Can you turn on lint mode in ST?  It detects infinite cycles in

> your tree of STs.

> Ter

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/c094acfb/attachment.html 

From rschulz at sonic.net  Sun Jul 15 17:49:45 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 15 Jul 2007 17:49:45 -0700
Subject: [antlr-interest] Parser code is too large(1.68)! (newbie)
In-Reply-To: <252369.7481.qm@web58107.mail.re3.yahoo.com>
References: <252369.7481.qm@web58107.mail.re3.yahoo.com>
Message-ID: <200707151749.46109.rschulz@sonic.net>

On Sunday 15 July 2007 17:14, ali azimi wrote:
> Hi,
>
>   Thank you very much for all your helps.
>
>   I have produced a lexer and parser. But the parser is so large that
> causes some messages to be produced. the following message comes up
> when I try to compile my parser which is 1.68 Mb, using NetBeans:
>
>   "Question: The file FinalProject.java seems to be too large (1 Mb)
> to safely open. Opening the file could cause OutOfMemoryError, which
> would make the IDE unusable. Do you really want to open it?"

I suppose 1.6 megabytes is pretty big for a Java source file and the 
odds are good that once compiled the resulting class file will exceed 
the limits of the JVM itself.

On the other hand, other editors, Vim e.g., easily handle files far 
larger than this! Of course, such editors don't need to build such a 
complex model of the file it's editing.


>   I am not sometimes able to see the code for parser on the screen
> whereas I can see the code for the lexer and the Test file. However I
> can successfully compile them all.(In parser case, after answering
> "Yes" to the error message )
>
>
>   How can I deal with this?

Now we get to the question of whether ANTLR is the proper tool to use to 
produce a URI parser. Still, there are always better and worse ways to 
craft a concrete grammar specification that captures a given 
specification.

Is your ANTLR grammar something you could disclose to us, or is it 
proprietary? If others with more experience than you (or me) could look 
at it, they might be able to suggest ways to pare down the size of the 
resulting parser code.


>   Best wishes,
>
>   Al


Randall Schulz

From Stephen_Hardy at rabbit.com  Sun Jul 15 18:43:11 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sun, 15 Jul 2007 18:43:11 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com><13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu>
	<62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com>
Message-ID: <62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com>

OK, welding done...

 

Well , it turns out that there *is* a loop in the template inclusion,
but there are more steps than indicated by the trace.  Maybe there's a
limit in the code somewhere.  However, I don't understand why this
should cause an exception since recursion is such a natural part of most
grammars.  The input file was a single line of C code (as mentioned
before, I am using the ANSI C grammar in tree parser form), so it should
not have gone anywhere near blowing the java stack.

 

Any suggestions for a workaround?

 

What is the interpretation of the "references=[...]" stuff in the trace.
Sure, I have scs and d attributes in some of the templates, but not in
any of those listed.  Maybe it is some sort of run-time indication of
how it got to the particular state.  Needs a bit of explanation though.

 

Regards,

SJH



 

________________________________

 

Terence,

 

Here is the console output when lint mode is turned on...

 

Exception in thread "main" java.lang.IllegalStateException: infinite
recursion to 

     <anonymous([])@58> referenced in <anonymous([])@53>; stack trace:

<anonymous([])@58>, attributes=[dd=<anonymous()@57>], references=[dd,
scs, d]>

<anonymous([])@53>, attributes=[d, ds=<anonymous()@52>], references=[ds,
scs, d]>

<anonymous([])@54>, attributes=[p=List[..<anonymous()@53>..]],
references=[p, scs, d]>

<anonymous([])@55>, attributes=[pl=<anonymous()@54>, v], references=[pl,
scs, d]>

<anonymous([])@56>, attributes=[ptl=<anonymous()@55>], references=[ptl,
scs, d]>

<anonymous([])@57>, attributes=[dsuf=List[..<anonymous()@56>..], id],
references=[id, dsuf, scs, d]>

<anonymous([])@58> (start of recursive cycle)

...

 

 

Without (as yet) fully understanding the above, it seems odd that every
line contains a "pointer" to the previous line in the attributes
*except* the second line (@53) refers to @52 and not @58.  Hmmm...

 

I'll look into it some more.  Somebody is about to use a welder, so I
have to log off for a while.  This is Fiji :-)

 

Regards,

SJH

 

 

> -----Original Message-----

> 

> Hi. Can you turn on lint mode in ST?  It detects infinite cycles in

> your tree of STs.

> Ter

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/e165068f/attachment-0001.html 

From daniel at lba.ca  Sun Jul 15 19:40:12 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Sun, 15 Jul 2007 22:40:12 -0400
Subject: [antlr-interest] Understanding priorities in lexing
 (newbie)[Suggestion]
References: <E1I9Oly-0000By-2i@elasmtp-mealy.atl.sa.earthlink.net>
	<28468953-5652-464A-9832-BB586C6B598B@cs.usfca.edu>
Message-ID: <009101c7c752$a1f915d0$82d4840a@lba.ca>

I tried this in ANTLRWorks:

grammar lex;
fragment KEYWORD  :  'a' 'b' 'c';
fragment OTHER : 'a'|'b'|'c'|'d';
TOKEN : (KEYWORD)=> KEYWORD { $type = KEYWORD; }
               | OTHER { $type = OTHER; };
token : TOKEN;
program : token*;

With input: "abd", in the interpreter I get:
grammar lex.g
    program
        token
          .....ab
          .....d

With input "abc", I get:
grammar lex
    program
        token
           .....ab
           .....c

With input "abc", in the debugger I get
root
program
org.antlr.runtime.EarlyExitException

and the input "abc" is in a red box in the Input window. The Output window 
had:
line 1:0 required (...)+ loop did not match anything at input 'abc'


None of this seems right. What am I missing?

Daniel

----- Original Message ----- 
From: "Terence Parr" <parrt at cs.usfca.edu>
To: "antlr-interest Interest" <antlr-interest at antlr.org>
Sent: Friday, July 13, 2007 1:28 PM
Subject: Re: [antlr-interest] Understanding priorities in lexing 
(newbie)[Suggestion]


>
> On Jul 13, 2007, at 10:18 AM, Susan Jolly wrote:
>
>> I really appreciate people who take the time to write the simplest 
>> possible
>> grammar that illustrates the problem they are having rather than 
>> embedding
>> huge grammars in their posts.
>
> Hi Susan!  Agreed.
>
>> Here is one way to get v3 to generate the code so the lexer looks  ahead 
>> for
>> the original example.  Is there any reason not to do this?
>>
>> fragment KEYWORD : 'a' 'b' 'c' ;
>> fragment OTHER : 'a' | 'b' | 'c';
>> DUMMY : (  (KEYWORD) => KEYWORD {$type = KEYWORD;}
>>         |  OTHER  {$type = OTHER;}
>>         );
>
> That is a correct grammar.  Note that the following is not really  going 
> to work:
>
> DUMMY
> options {backtrack=true;}
> : (KEYWORD {$type = KEYWORD;}  | OTHER{$type = OTHER;})
> ;
>
> it will not execute the backtracking in this case as it thinks it  knows 
> what it's doing. :(
>
> Ter
> 


From rdclark at gmail.com  Sun Jul 15 19:48:05 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 15 Jul 2007 19:48:05 -0700
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <0B82932548DD4310931569E4051EF8C7@lloydPC>
References: <000901c7c6d9$46c72e50$c704a8c0@hercules>
	<0B82932548DD4310931569E4051EF8C7@lloydPC>
Message-ID: <d3992d900707151948o412458ccxa82cb0087edb9a4b@mail.gmail.com>

I'm starting to think that questions of the form "how to I use a
semantic predicate in the Lexer for..." should be a FAQ with the
answer "let the parser deal with the semantics".

In your case, I'd do something like this:

expr : atom (methodCall)* ; /* Will need to add options for arithmetic
expressions */

atom: number
       | STRING
       | object=ID
       ;

methodCall: '.' method=ID '(' paramList ')' ;

paramList : expr (',' expr)* ;

number: '-'? INT (('.' INT ('e' '-'? INT)?)? ;

ID : ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')* ;

INT: '0'..'9'+;

/* and so on... */

...Richard




On 7/15/07, Lloyd Dupont <ld at galador.net> wrote:
>
>
> Yep, I'm starting to think I should use the parser to distinguish between
> these issue.
> Glad someone confirmed!
> It's just.. unusal, so I didn't dare go this way to start with....
>
> ----- Original Message -----
> From: Micheal J
> To: antlr-interest at antlr.org
>
> Sent: Sunday, July 15, 2007 10:11 PM
> Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
> predicate in lexer rule?)
>
>
> Hi,
>
> I was really after these:
>
> ".1"
> --> DOT NUM_INT["1"] ?
> --> NUM_FLOAT[".1"] ?
>
> ".1 1"
>
> --> DOT NUM_INT["1"] WHITESPACE NUM_INT["1"] ?
> --> NUM_FLOAT[".1"] WHITESPACE NUM_INT["1"] ?
>
> As for your examples, "1." is ambiguos at the lexing stage but the parser
> has more context and the ambiguity disappears. If you followed my
> suggestion, you just emit a NUM_FLOAT_DOT["1."] in the lexer and the parser
> can deal with it as a float value or prefix to a memberAcess (i.e. the
> "<object><.>" bit of an "<object><.><member>" operation).
>
> float
>     : NUM_FLOAT    // "1.e3"
>     | NUM_FLOAT_DOT // "1."
>     .... ;
>
> memberAccessExpr
>     : ID DOT ID
>     | NUM_FLOAT_DOT ID  // "1.echo", "1.e"
>     .... ;
>
> Micheal
>
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
>
>
> -----Original Message-----
> From: Lloyd Dupont [mailto:ld at galador.net]
> Sent: 15 July 2007 12:11
> To: Micheal J; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
> predicate in lexer rule?)
>
>
> The problem is: the result really depends of what's after.
>
> 1. is ambiguous
>
> 1.e is ambiguous
> 1.e3 is a float
> 1.echo is INT DOT ID
>
>
> ----- Original Message -----
> From: Micheal J
> To: antlr-interest at antlr.org
> Sent: Sunday, July 15, 2007 11:36 AM
> Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
> predicate in lexer rule?)
>
>
> Hi, Forgot to ask:
>
> What should the lexer return for these values (note the spaces)?
> ".1"
> "1 .1"
> "1 ."
>
> Micheal
>
>
> -----------------------
> The best way to contact me is via the list/forum. My time is very limited.
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of
> Lloyd Dupont
> Sent: 15 July 2007 02:02
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] lexing tips needed... (or,could I use predicate in
> lexer rule?)
>
>
> For my parser I reaped of the lexer rules from the Java exemple.
> Particularly you've got this lexer token:
> NUM_FLOAT
>  : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
>  | ............ other match
>  ;
>
> Now there is a problem with that!....
> in the language I target everything is an object.
>
> so:
>
> "2."  is NUM_FLOAT["2."]
> "2.1"  is NUM_FLOAT["2.1"]"2.ToString()" is NUM_INT["2"] DOT["."]
> ID["ToString"] LPAREN["("] RPAREN[")]
>
> So I was trying to disambiguate the lexer with a construct like that (trying
> predicate in the lexer):
> NUM_FLOAT
>  : (
>    ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART)
> (FLOAT_TYPE_SUFFIX)?
>   | ( DIGITS '.' ID )=> DIGITS
>   | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
>   )
>   |    ..................... other match
> ;
>
> but this doesn't seem to work,
> 1. it told me the NUM_INT rule is now not accessible anymore (I guess the
> NUM_FLOAT rule absorbs it with my second alternative)
> 2. but more importantly an input such as "2.a" return "2." followed by
> MismatchTokenException.
>
> can I use predicate in lexer rule?
> how could I disambiguate the NUM_FLOAT lexer rule?
> I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" (NUM_INT
> DOT ID LPAREN RPAREN)?
>

From rdclark at gmail.com  Sun Jul 15 19:52:08 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 15 Jul 2007 19:52:08 -0700
Subject: [antlr-interest] Parser code is too large(1.68)! (newbie)
In-Reply-To: <252369.7481.qm@web58107.mail.re3.yahoo.com>
References: <252369.7481.qm@web58107.mail.re3.yahoo.com>
Message-ID: <d3992d900707151952r5c6fd359rcd8281bf56963cfd@mail.gmail.com>

If I remember correctly, you have many complex rules in your parser. I
suspect the large file is due to the very large DFAs generated by
these rules.

You could probably shrink your code by breaking your grammar down into
smaller parts. (Just like you often refactor a complex method into
smaller methods.)

 ...Richard

From ld at galador.net  Sun Jul 15 20:18:39 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 16 Jul 2007 13:18:39 +1000
Subject: [antlr-interest] lexing tips needed... (or,
	could I use predicate in lexer rule?)
In-Reply-To: <d3992d900707151948o412458ccxa82cb0087edb9a4b@mail.gmail.com>
References: <000901c7c6d9$46c72e50$c704a8c0@hercules>
	<0B82932548DD4310931569E4051EF8C7@lloydPC>
	<d3992d900707151948o412458ccxa82cb0087edb9a4b@mail.gmail.com>
Message-ID: <7A171EE075E643F1B9DFFB34FF1AEB94@lloydPC>

Hi Richard,

Hey, you've done all the work!
Thanks for your suggestion, looks good, I'll take a closer look at it 
tonight (it's for a home project this time).

----- Original Message ----- 
From: "Richard Clark" <rdclark at gmail.com>
To: "Lloyd Dupont" <ld at galador.net>
Cc: <antlr-interest at antlr.org>
Sent: Monday, July 16, 2007 12:48 PM
Subject: Re: [antlr-interest] lexing tips needed... (or, could I use 
predicate in lexer rule?)


> I'm starting to think that questions of the form "how to I use a
> semantic predicate in the Lexer for..." should be a FAQ with the
> answer "let the parser deal with the semantics".
>
> In your case, I'd do something like this:
>
> expr : atom (methodCall)* ; /* Will need to add options for arithmetic
> expressions */
>
> atom: number
>       | STRING
>       | object=ID
>       ;
>
> methodCall: '.' method=ID '(' paramList ')' ;
>
> paramList : expr (',' expr)* ;
>
> number: '-'? INT (('.' INT ('e' '-'? INT)?)? ;
>
> ID : ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')* ;
>
> INT: '0'..'9'+;
>
> /* and so on... */
>
> ...Richard
>
>
>
>
> On 7/15/07, Lloyd Dupont <ld at galador.net> wrote:
>>
>>
>> Yep, I'm starting to think I should use the parser to distinguish between
>> these issue.
>> Glad someone confirmed!
>> It's just.. unusal, so I didn't dare go this way to start with....
>>
>> ----- Original Message -----
>> From: Micheal J
>> To: antlr-interest at antlr.org
>>
>> Sent: Sunday, July 15, 2007 10:11 PM
>> Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
>> predicate in lexer rule?)
>>
>>
>> Hi,
>>
>> I was really after these:
>>
>> ".1"
>> --> DOT NUM_INT["1"] ?
>> --> NUM_FLOAT[".1"] ?
>>
>> ".1 1"
>>
>> --> DOT NUM_INT["1"] WHITESPACE NUM_INT["1"] ?
>> --> NUM_FLOAT[".1"] WHITESPACE NUM_INT["1"] ?
>>
>> As for your examples, "1." is ambiguos at the lexing stage but the parser
>> has more context and the ambiguity disappears. If you followed my
>> suggestion, you just emit a NUM_FLOAT_DOT["1."] in the lexer and the 
>> parser
>> can deal with it as a float value or prefix to a memberAcess (i.e. the
>> "<object><.>" bit of an "<object><.><member>" operation).
>>
>> float
>>     : NUM_FLOAT    // "1.e3"
>>     | NUM_FLOAT_DOT // "1."
>>     .... ;
>>
>> memberAccessExpr
>>     : ID DOT ID
>>     | NUM_FLOAT_DOT ID  // "1.echo", "1.e"
>>     .... ;
>>
>> Micheal
>>
>> -----------------------
>> The best way to contact me is via the list/forum. My time is very 
>> limited.
>>
>>
>> -----Original Message-----
>> From: Lloyd Dupont [mailto:ld at galador.net]
>> Sent: 15 July 2007 12:11
>> To: Micheal J; antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
>> predicate in lexer rule?)
>>
>>
>> The problem is: the result really depends of what's after.
>>
>> 1. is ambiguous
>>
>> 1.e is ambiguous
>> 1.e3 is a float
>> 1.echo is INT DOT ID
>>
>>
>> ----- Original Message -----
>> From: Micheal J
>> To: antlr-interest at antlr.org
>> Sent: Sunday, July 15, 2007 11:36 AM
>> Subject: Re: [antlr-interest] lexing tips needed... (or,could I use
>> predicate in lexer rule?)
>>
>>
>> Hi, Forgot to ask:
>>
>> What should the lexer return for these values (note the spaces)?
>> ".1"
>> "1 .1"
>> "1 ."
>>
>> Micheal
>>
>>
>> -----------------------
>> The best way to contact me is via the list/forum. My time is very 
>> limited.
>>
>>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org
>> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of
>> Lloyd Dupont
>> Sent: 15 July 2007 02:02
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] lexing tips needed... (or,could I use predicate 
>> in
>> lexer rule?)
>>
>>
>> For my parser I reaped of the lexer rules from the Java exemple.
>> Particularly you've got this lexer token:
>> NUM_FLOAT
>>  : DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
>>  | ............ other match
>>  ;
>>
>> Now there is a problem with that!....
>> in the language I target everything is an object.
>>
>> so:
>>
>> "2."  is NUM_FLOAT["2."]
>> "2.1"  is NUM_FLOAT["2.1"]"2.ToString()" is NUM_INT["2"] DOT["."]
>> ID["ToString"] LPAREN["("] RPAREN[")]
>>
>> So I was trying to disambiguate the lexer with a construct like that 
>> (trying
>> predicate in the lexer):
>> NUM_FLOAT
>>  : (
>>    ( DIGITS '.' EXPONENT_PART )=> DIGITS '.' (EXPONENT_PART)
>> (FLOAT_TYPE_SUFFIX)?
>>   | ( DIGITS '.' ID )=> DIGITS
>>   | DIGITS '.' (DIGITS)? (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
>>   )
>>   |    ..................... other match
>> ;
>>
>> but this doesn't seem to work,
>> 1. it told me the NUM_INT rule is now not accessible anymore (I guess the
>> NUM_FLOAT rule absorbs it with my second alternative)
>> 2. but more importantly an input such as "2.a" return "2." followed by
>> MismatchTokenException.
>>
>> can I use predicate in lexer rule?
>> how could I disambiguate the NUM_FLOAT lexer rule?
>> I.e. being both able to read "2.3" (NUM_FLOAT) and "2.ToString()" 
>> (NUM_INT
>> DOT ID LPAREN RPAREN)?
>>
> 

From ted.villalba at gmail.com  Sun Jul 15 23:29:20 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Sun, 15 Jul 2007 23:29:20 -0700
Subject: [antlr-interest] Tree grammar suggestion needed
Message-ID: <69fb4b090707152329l2f408390l103653fc11ccb21f@mail.gmail.com>

Hi,

I am trying to write a tree grammar for a language that has a rule "value"
which contains any number of nested "values" . So a value may contain a
value, may contain a value, etc..
A sample AST output tree is attached from ANTLRWorks. I have the parser
recognizing this language fine, but I can't capture this in the tree
grammar.

Any help defining this tree grammar, specifically for this value rule, would
be greatly appreciated.

Probably better to not look at this, but here is one of my many attempts:

value    : ^(VALUE value_){System.out.println("This works well...ALT1
value_: "+ $value_.st);} -> passThru(val={$value_.st})
         | ^(VALUE value ){System.out.println("This template returns null
but the ALT fulfills the tokens required" + $value.st);} ->
passThru(val={"FUBAR"})
         ;

value_   : ^(BOOL_OP terms value) ->
valueTemplate(op={$BOOL_OP.text},terms={$terms.st}, values={$value.st})
            | ^(BOOL_OP a=value b=value)  ->
valueTemplate(op={$BOOL_OP.text},terms={$a.st}, values={$b.st})
          | terms  {System.out.println("The third ALT(terms) of value_ rule:
" + $terms.st);} -> passThru(val={$terms.st})
         ;

Thanks again,
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/d09a8a35/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ASTTree.png
Type: image/png
Size: 8276 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070715/d09a8a35/attachment-0001.png 

From Yury at serdyuk.botik.ru  Mon Jul 16 02:43:29 2007
From: Yury at serdyuk.botik.ru (Yury Serdyuk)
Date: Mon, 16 Jul 2007 13:43:29 +0400
Subject: [antlr-interest] C# 2.0 ANTLR grammar
Message-ID: <469B3DC1.9070009@serdyuk.botik.ru>

Hi !

Does a version of C# 2.0 antlr grammar exist?
Namely, how to support generics in it without
conflicts with "<" ( or ">" ) operators ?

Best wishes,
                   Yury Serdyuk

From ld at galador.net  Mon Jul 16 05:26:10 2007
From: ld at galador.net (Lloyd Dupont)
Date: Mon, 16 Jul 2007 22:26:10 +1000
Subject: [antlr-interest] C# 2.0 ANTLR grammar
References: <469B3DC1.9070009@serdyuk.botik.ru>
Message-ID: <00be01c7c7a4$8db51f90$60f46c3a@vulcain>

You probably have to use semantic predicate.
I'm building a C#/XAML expressions grammar for a home project.
I have somethin like that:

================
compare
 : (shift -> shift)
  (
   ( op=(LT | GT | LTE | GTE) s=shift -> ^($op $compare $s) )
   // not really a comparison, but same priority
  | ( is='is' i=identifier -> ^( IS[$is] $compare $i ) )
  | ( as='as' i=identifier  -> ^( AS[$as] $compare $i ) )
  )?
 ;

//....................................

// here XAML like name definition, I had too much problem with the DOTs....
classname
 : (
   { IsClass(input.LT(3).getText(), input.LT(1).getText()) }? xaml=ID COLON 
id0=ID -> ^( CLASSNAME $id0 $xaml )
  | { IsClass(input.LT(1).getText()) }? id1=ID -> ^( CLASSNAME $id1 )
  )
  (
   ( genericparam )=> genericparam -> ^( CLASSNAME $id0? ^(XAMLNS $xaml)? 
$id1? genericparam )
  |
  )
 ;
// obviously genericparam is never ever called from somewhere else that 
classname
genericparam
 : LT classname (COMMA classname)* GT -> ^(GENERICTYPE classname+)
 ;

================

----- Original Message ----- 
From: "Yury Serdyuk" <Yury at serdyuk.botik.ru>
To: <antlr-interest at antlr.org>
Sent: Monday, July 16, 2007 7:43 PM
Subject: [antlr-interest] C# 2.0 ANTLR grammar


> Hi !
>
> Does a version of C# 2.0 antlr grammar exist?
> Namely, how to support generics in it without
> conflicts with "<" ( or ">" ) operators ?
>
> Best wishes,
>                   Yury Serdyuk
> 


From jaluber at gmx.de  Mon Jul 16 08:26:40 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Mon, 16 Jul 2007 17:26:40 +0200
Subject: [antlr-interest] IDebugEventListener implementing class
Message-ID: <469B8E30.6040400@gmx.de>

Hello!

The debug parser constructor takes IDebugEventListener as the second
argument. Which class implementing this interface should I use for
remote debugging in C#?

Best regards,
Johannes Luber

From vbar at comp.cz  Mon Jul 16 12:04:35 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Mon, 16 Jul 2007 21:04:35 +0200
Subject: [antlr-interest] How to set imaginary token text?
In-Reply-To: <200707152000.43417.vbar@comp.cz>
References: <200707151859.31095.vbar@comp.cz>
	<200707151007.36839.rschulz@sonic.net>
	<200707152000.43417.vbar@comp.cz>
Message-ID: <200707162104.36101.vbar@comp.cz>

On Sunday 15 July 2007 20:00, Vaclav Barta wrote:
> On Sunday 15 July 2007 19:07, Randall R Schulz wrote:
> > On Sunday 15 July 2007 09:59, Vaclav Barta wrote:
> > > I'd like to have a lexer rule for string characters:
> > >
> > > StringChar
> > >
> > > 	: .
> > >
> > > 	;
> > You might want to consider consolidating these characters, if that would
> > work for your purposes:
Experimenting some more, maybe I'd like to parse (some of) these characters 
individually but consolidate them into one AST node - something like

quotedString returns [ String value ]
@init { StringBuffer sb = new StringBuffer(); }
	: DQUOTE (
		EscapeSequence { sb.append($EscapeSequence.getText()); }
		| BareString { sb.append($BareString.getText()); }
	)* DQUOTE { $value = sb.toString(); }
	;

string
	: s = quotedString -> LITERAL
	| BareString -> LITERAL
	;

where LITERAL is an imaginary token - but as written, it obviously loses the 
string value. How can I set LITERAL token text to the value returned from 
quotedString, or $BareString.getText() ?

 	Bye
 		Vasek

From parrt at cs.usfca.edu  Mon Jul 16 12:21:01 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Jul 2007 12:21:01 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com><13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu>
	<62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com>
	<62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com>
Message-ID: <A89AB3EB-3452-4E9B-BE9D-6CCEC6A08BB0@cs.usfca.edu>


On Jul 15, 2007, at 6:43 PM, Hardy, Stephen wrote:

> OK, welding done...
>
>
>
> Well , it turns out that there *is* a loop in the template  
> inclusion, but there are more steps than indicated by the trace.   
> Maybe there?s a limit in the code somewhere.  However, I don?t  
> understand why this should cause an exception since recursion is  
> such a natural part of most grammars.

Hi.. Recursion is fine, it's an error though when a ST directly or  
indirectly encloses itself.  Look for something like that: a block  
that encloses itself.
> What is the interpretation of the ?references=[...]? stuff in the  
> trace.  Sure, I have scs and d attributes in some of the templates,  
> but not in any of those listed.  Maybe it is some sort of run-time  
> indication of how it got to the particular state.  Needs a bit of  
> explanation though.
Those refs are what attributes are used in that template instance.

Ter

From rschulz at sonic.net  Mon Jul 16 12:20:56 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 16 Jul 2007 12:20:56 -0700
Subject: [antlr-interest] How to set imaginary token text?
In-Reply-To: <200707162104.36101.vbar@comp.cz>
References: <200707151859.31095.vbar@comp.cz> <200707152000.43417.vbar@comp.cz>
	<200707162104.36101.vbar@comp.cz>
Message-ID: <200707161220.57143.rschulz@sonic.net>

On Monday 16 July 2007 12:04, Vaclav Barta wrote:
> On Sunday 15 July 2007 20:00, Vaclav Barta wrote:
> > On Sunday 15 July 2007 19:07, Randall R Schulz wrote:
> > > ...
> > > You might want to consider consolidating these characters, if
> > > that would work for your purposes:
>
> Experimenting some more, maybe I'd like to parse (some of) these
> characters individually but consolidate them into one AST node -
> something like

Let me clarify that it is at the lexical level that a 
token-per-character approach incurs potentially excessive overhead. For 
example, a whitespace rule that matched single white-space characters 
vs. one that collected them together could make a large difference in 
the number of Tokens constructed for a given input text.


> quotedString returns [ String value ]
> @init { StringBuffer sb = new StringBuffer(); }
>
> 	: DQUOTE (
> 		EscapeSequence { sb.append($EscapeSequence.getText()); }
> 		| BareString { sb.append($BareString.getText()); }
> 	)* DQUOTE { $value = sb.toString(); }
> 	;
>
> string
> 	: s = quotedString -> LITERAL
> 	| BareString -> LITERAL
>
> 	;
>
> where LITERAL is an imaginary token - but as written, it obviously
> loses the string value. How can I set LITERAL token text to the value
> returned from quotedString, or $BareString.getText() ?

Do you have TDAR (The Definitive ANTLR Refernce)? If so, on page 176 
(paper) or page 188 (PDF), the notation for incorporating token 
references and / or token text into imaginary nodes is specified.

I have not used this mechanism, so I'm reluctant to try to either 
paraphrase or rewrite your grammar using these notations. Perhaps 
someone who knows better will supply the appropriate rules.


>  	Bye
>  		Vasek


Randall Schulz

From aliaazimi at yahoo.com  Mon Jul 16 12:22:15 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 16 Jul 2007 12:22:15 -0700 (PDT)
Subject: [antlr-interest] (newbie) mismatched error
Message-ID: <744372.3914.qm@web58112.mail.re3.yahoo.com>

Hi,
   
  Could you please tell me what I am doing wrong that the system emits the following error messages when my test file tries to recognise the input:  system s; endsystem;
   
  line 1:7 mismatched character 's' expecting 't'
  line 1:10 no viable alternative at input 'endsystem'
  
  The grammar is as following:
   
  textualSystemDefinition 
              :packageReferenceClause*('system' systemName end entityInSystem* 'endsystem'(systemName)?end->^(PACKREF packageReferenceClause* 'system' systemName end entityInSystem+ 'endsystem'systemName?end)
   
   
                                                        |typeBasedSystemDefinition->^(PACKREF packageReferenceClause* typeBasedSystemDefinition)
                                        )
              ;
   
  end       : ';' 
              ;
   
  name    :word('_'word)* ->^(word ^(WORD '_'word)*)
              ;
   
  word    :(alphaNumeric|'.')*alphaNumeric(alphaNumeric|'.')*
              ;
   
  alphanumeric
              :Uppercase|National|Lowercase|Decimaldigit
              ;
   
  Decimaldigit
              :'0'..'9'
              ;
   
  National
              :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~'
              ;
   
  Lowercase
              :'a'..'z'
              ;
  Uppercase
              :'A'..'Z'+
   
  Thank you very much.
   
  Best Regards,
   
  Al

       
---------------------------------
Park yourself in front of a world of choices in alternative vehicles.
Visit the Yahoo! Auto Green Center.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070716/92265985/attachment.html 

From antlr at mirality.co.nz  Mon Jul 16 13:09:20 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 17 Jul 2007 08:09:20 +1200
Subject: [antlr-interest] (newbie) mismatched error
In-Reply-To: <744372.3914.qm@web58112.mail.re3.yahoo.com>
References: <744372.3914.qm@web58112.mail.re3.yahoo.com>
Message-ID: <20070716200926.DC18F11EB63@www.antlr.org>

At 07:22 17/07/2007, ali azimi wrote:
>Could you please tell me what I am doing wrong that the system 
>emits the following error messages when my test file tries to 
>recognise the input:  system s; endsystem;

While I don't think I can give you a direct answer, I have noticed 
some odd things in the grammar you posted:

>line 1:7 mismatched character 's' expecting 't'
>line 1:10 no viable alternative at input 'endsystem'
>The grammar is as following:
>
>textualSystemDefinition
>             :packageReferenceClause*('system' systemName end 
> entityInSystem* 'endsystem'(systemName)?end->^(PACKREF 
> packageReferenceClause* 'system' systemName end entityInSystem+ 
> 'endsystem'systemName?end)

Well, you haven't told us what 'systemName' is defined as, and 
that's where the error is occurring...

>word    :(alphaNumeric|'.')*alphaNumeric(alphaNumeric|'.')*
>             ;

So a word could be '..............6........'?  That seems like an 
odd definition...

>alphanumeric
>             :Uppercase|National|Lowercase|Decimaldigit
>             ;
>
>Decimaldigit
>             :'0'..'9'
>             ;
>
>National
>             :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~'
>             ;
>
>Lowercase
>             :'a'..'z'
>             ;
>Uppercase
>             :'A'..'Z'+

Why is the Uppercase rule a set of multiple characters, while none 
of the other rules are?  Seems a bit inconsistent...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070717/e41bd62c/attachment.html 

From aliaazimi at yahoo.com  Mon Jul 16 14:00:59 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 16 Jul 2007 14:00:59 -0700 (PDT)
Subject: [antlr-interest] (newbie) mismatched error
Message-ID: <710599.86817.qm@web58102.mail.re3.yahoo.com>

 
  Hi, 
   
  I apologise for the inconsistencies in the grammar I posted earlier. Here is the more correct one.
   
  For the input:
  system; endsystem;
   
  I get the following error message: What seems to be wrong? What is set null?
   
  line 1:0 mismatched input 'system' expecting set null
   
  the grammar is as following:
  
   
  textualSystemDefinition 
              :packageReferenceClause* 'system'   systemName?   end  'endsystem' (systemName)?  end->   ^(PACKREF packageReferenceClause*   'system' systemName   end   'endsystem'   systemName? end)
              ;
   
  packageReferenceClause:
              ;
   
  systemName:
                       name
                       ;
   
  end       :('comment' characterstring)? ';' ->^(';' ^(COM 'comment' characterstring)? )
              ;
   
  name    :word('_'word)* ->^(word ^(WORD '_'word)*)
              ;
   
  word    :(alphaNumeric|'.')*alphaNumeric(alphaNumeric|'.')*
              ;
   
  alphanumeric
              :Uppercase|National|Lowercase|Decimaldigit
              ;
   
  Decimaldigit
              :'0'..'9'
              ;
   
  National
              :'#'|'@'|'"'|'$'|'['|']'|'{'|'}'|'^'|'~'
              ;
   
  Lowercase
              :'a'..'z'
              ;
  Uppercase
              :'A'..'Z'
              ;
   
  Many thanks,
   
  Al
   
   

       
---------------------------------
Moody friends. Drama queens. Your life? Nope! - their life, your story.
 Play Sims Stories at Yahoo! Games. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070716/13f97484/attachment-0001.html 

From ed.hartley at gmail.com  Mon Jul 16 14:04:48 2007
From: ed.hartley at gmail.com (Edward Hartley)
Date: Mon, 16 Jul 2007 22:04:48 +0100
Subject: [antlr-interest] Re Python Target
Message-ID: <66c67b670707161404u68d9c27ap1a8ff11a02744da4@mail.gmail.com>

Bjaminn
 >The result of raw_input() does not include the '\n'. But in this grammar,
 >every line must be terminated by NEWLINE.
 >Either change the grammar (with raw_input() you are not able to read
 >multiline input anyway) or add a '\n' to the input before you feed it into
 >ANTLR.


 OK thanks; should have  checked what raw_iput() was doing doh!
 Best Ed

From fbrier at multideck.com  Mon Jul 16 14:06:17 2007
From: fbrier at multideck.com (Frederick N. Brier)
Date: Mon, 16 Jul 2007 17:06:17 -0400
Subject: [antlr-interest] Limiting tokens selected by lexer in antlr3
Message-ID: <469BDDC9.7090700@multideck.com>

I created a simple parsing grammar, but two of the tokens utilize 
slightly different alphanumeric letters, but one should only be selected 
within one set of parser rules and the rest of the time, the other 
should be generated.  I am using antlr3.  I have read about filters and 
trees, and ASTs, but have gotten pretty confused.  How do I from a 
parser rule, tell the lexer to pick one rule over another?  When I exit 
the rule, it should go back to generating the other token.  Please feel 
free to point me at any documentation or examples you know of.  Thank you.

Fred

From dirty at apple.com  Mon Jul 16 14:07:58 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Mon, 16 Jul 2007 14:07:58 -0700
Subject: [antlr-interest] enum return types for rules?
Message-ID: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>

I think this is a C runtime-specific issue.

Has anyone used an enum as a return type from a rule?

I'm getting an error from the compiler because I'm using one.

Here is a simplified version of the rule:

size_qualifier returns [ ValueNumberValueWidth Width ]
	:	T_SIZE_8
		{
			$Width = kValueNumberValue8Bit;
		}
	;

And ValueNumberValueWidth is defined as:

typedef enum {
	kValueNumberValue8Bit		= 0x300,
	kValueNumberValue16Bit,
	kValueNumberValue32Bit,
	kValueNumberValue64Bit,
} ValueNumberValueWidth;

When I try and build my tree grammar, I get the following error from  
gcc:

TWalker.c: In function 'size_qualifier':
TWalker.c:1132: error: incompatible types in initialization

Because antlr has generated the following line:

     ValueNumberValueWidth Width = NULL;

I've also gotten some other warnings because of similar constructs.   
One of my rule's returns an unsigned long long.

Again, antlr is generating:

     unsigned long long Number = NULL;

And gcc complains;

TWalker.c: In function 'number':
TWalker.c:1220: warning: initialization makes integer from pointer  
without a cast

Does anyone have any suggestions?

Cameron Esfahani
dirty at apple.com

"In the elder days of Art, Builders wrought with greatest care each  
minute and unseen part; For the gods see everywhere."

"The Builders", H. W. Longfellow



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070716/36507e21/attachment.html 

From Stephen_Hardy at rabbit.com  Mon Jul 16 14:12:00 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Mon, 16 Jul 2007 14:12:00 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <A89AB3EB-3452-4E9B-BE9D-6CCEC6A08BB0@cs.usfca.edu>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com><13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu><62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com><62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com>
	<A89AB3EB-3452-4E9B-BE9D-6CCEC6A08BB0@cs.usfca.edu>
Message-ID: <62BABE024B7C074E9194E9727A41897901383325@dvs-sms-mail01.digi.com>

Terence,

I'm not sure I entirely understand what you mean by "one template
enclosing itself", however based on examination of the FAQ and other
sources, these recursion problems can only arise when constructing and
using templates in java code, where the code can obviously set up
circular references via setting of attributes.  

My tree grammar template rewrite rules, on the other hand, are entirely
constructed using in-line (anonymous) templates -- look mum, no java --
and hence if there are any circular references then they are created by
the magic of ANTLR.  

If there is a recursive rule (say, compound statement in a C grammar)
then nested compound statements get their own instance of the template,
hence there can be no circular references at the java "pointer" level?
If I am wrong, would you kindly provide a small counterexample?

With respect, I would say that this potential for stack overflow
exceptions in an ANTLR-generated parser with no "open code" is a serious
bug, especially if the bug is only revealed at run-time.

> Those refs are what attributes are used in that template instance.

There is something fishy going on.  If this is the list of attributes,
then the given trace did not make sense.

Regards,
SJH

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Monday, July 16, 2007 12:21 PM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] StringTemplate stack overflow
> exception,stringtemplate-3.0
> 
> 
> On Jul 15, 2007, at 6:43 PM, Hardy, Stephen wrote:
> 
> > OK, welding done...
> >
> >
> >
> > Well , it turns out that there *is* a loop in the template
> > inclusion, but there are more steps than indicated by the trace.
> > Maybe there's a limit in the code somewhere.  However, I don't
> > understand why this should cause an exception since recursion is
> > such a natural part of most grammars.
> 
> Hi.. Recursion is fine, it's an error though when a ST directly or
> indirectly encloses itself.  Look for something like that: a block
> that encloses itself.
> > What is the interpretation of the "references=[...]" stuff in the
> > trace.  Sure, I have scs and d attributes in some of the templates,
> > but not in any of those listed.  Maybe it is some sort of run-time
> > indication of how it got to the particular state.  Needs a bit of
> > explanation though.
> Those refs are what attributes are used in that template instance.
> 
> Ter

From rschulz at sonic.net  Mon Jul 16 14:46:02 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 16 Jul 2007 14:46:02 -0700
Subject: [antlr-interest] Limiting tokens selected by lexer in antlr3
In-Reply-To: <469BDDC9.7090700@multideck.com>
References: <469BDDC9.7090700@multideck.com>
Message-ID: <200707161446.02203.rschulz@sonic.net>

On Monday 16 July 2007 14:06, Frederick N. Brier wrote:
> I created a simple parsing grammar, but two of the tokens utilize
> slightly different alphanumeric letters, but one should only be
> selected within one set of parser rules and the rest of the time, the
> other should be generated.

You must think of lexical analysis as a separate (earlier) phase of 
processing your input ('cause it is). Lexical analysis is not driven in 
a top-down process and has no memory of state or context other than 
that implied by each individual lexer rule (after incorporating any 
fragments it references).

If you understand the difference between a finite-state automaton and a 
push-down automaton, then just realize that lexical analysis is defined 
by regular expressions and hence has only the recognizing capability of 
a FSA (and in ANTLR is realized by a deterministic finite-state 
automaton or DFA) while the parser uses a context-free grammar to 
specify the language it accepts and hence has the recognition 
characteristics of a push-down automaton.

(ANTLR also has fancy disambiguation capabilities, but none of them help 
you with your problem of thinking of the parser as pulling tokens from 
the lexer.)


> I am using antlr3.  I have read about 
> filters and trees, and ASTs, but have gotten pretty confused.  How do
> I from a parser rule, tell the lexer to pick one rule over another? 

You do not. It just doesn't work that way. There is no communication 
from the parser to the lexical analyzer. Information flows only from 
the input text into the lexical analyzer and thence to the parser.


> When I exit the rule, it should go back to generating the other
> token.

Again, this is not a proper model of the process of recognizing an input 
text using an ANTLR-generated lexical analyzer and parser.


> Please feel free to point me at any documentation or examples 
> you know of.  Thank you.

You're going to have to rethink how you're analyzing your inputs so that 
the lexical analyzer has only the task of partitioning that input into 
tokens without regard for the LL grammar rules that will recognize 
valid sequences over that token set.


> Fred


Randall Schulz

From waldemarsauer at hotmail.com  Mon Jul 16 14:51:51 2007
From: waldemarsauer at hotmail.com (Waldemar Sauer)
Date: Mon, 16 Jul 2007 17:51:51 -0400
Subject: [antlr-interest] cpp target
Message-ID: <BAY136-DAV6A29F7A33592EE59BF111BAF80@phx.gbl>

How do I tell antlr v.3 to output to a .cpp file?

 

I need to be able to use my C++ objects in my parser.  I can get to where I
need to go by renaming the .c file to .cpp, and doing the ``extern "C"''
thing on each regular C include.  So I think I can accomplish what I need
with e.g. a Perl script, but I was wondering if there is maybe a better way
to do this, e.g. some option switch somewhere.  I can imagine that I will
not be the only one that needs to cross the C/C++ barrier.

 

 - Waldemar

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070716/617a5702/attachment.html 

From jonathan.thomas at ca.com  Mon Jul 16 17:19:13 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 17 Jul 2007 10:19:13 +1000
Subject: [antlr-interest] cpp target
In-Reply-To: <BAY136-DAV6A29F7A33592EE59BF111BAF80@phx.gbl>
References: <BAY136-DAV6A29F7A33592EE59BF111BAF80@phx.gbl>
Message-ID: <469C0B01.2070400@ca.com>

Depends how long you can hold on.  Jim is working on a C++ target currently.
Until that is ready, then using your perl scripts etc on C would be the 
way to go ... or even an ANTLR grammar for C to C++ :-)

Waldemar Sauer said the following on 17/07/2007 7:51 AM:
> How do I tell antlr v.3 to output to a .cpp file?
>
>  
>
> I need to be able to use my C++ objects in my parser.  I can get to where I
> need to go by renaming the .c file to .cpp, and doing the ``extern "C"''
> thing on each regular C include.  So I think I can accomplish what I need
> with e.g. a Perl script, but I was wondering if there is maybe a better way
> to do this, e.g. some option switch somewhere.  I can imagine that I will
> not be the only one that needs to cross the C/C++ barrier.
>
>  
>
>  - Waldemar
>
>  
>
>
>   

From benji at benjismith.net  Mon Jul 16 17:51:26 2007
From: benji at benjismith.net (Benji Smith)
Date: Mon, 16 Jul 2007 20:51:26 -0400
Subject: [antlr-interest] Incremental Parsing?
Message-ID: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>

Is it possible (and straightforward) to implement an incremental
parser with antlr?

The reason I ask is that I recently wrote a JavaCC parser for CSV
files (which correctly handles quoted fields, quote escaping, and
fields containing newline characters (a huge pain in the ass if you're
trying to parse CSV without writing a grammar)).

The JavaCC parser works well, except that I can't parse the file
record-by-record. I have to parse the entire file, returning a
collection of Record objects at the end.

With small files, that's fine. But I sometimes need to parse CSV files
with millions of records, and it'd be very nice to simply pull the
next record (as long as it complies with the grammar), much like you'd
pull the next token from a TokenStream.

Any tips on performing incremental parsing with antlr?

Thanks!

--benji smith

From parrt at cs.usfca.edu  Mon Jul 16 17:56:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 16 Jul 2007 17:56:05 -0700
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
Message-ID: <656FE65F-505C-444E-AA39-55AA7FE4ACB8@cs.usfca.edu>


On Jul 16, 2007, at 5:51 PM, Benji Smith wrote:
> The JavaCC parser works well, except that I can't parse the file
> record-by-record. I have to parse the entire file, returning a
> collection of Record objects at the end.

Hi. just read a line at a time and then send that to the parser. :)

Ter



From jonathan.thomas at ca.com  Mon Jul 16 17:57:44 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 17 Jul 2007 10:57:44 +1000
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <656FE65F-505C-444E-AA39-55AA7FE4ACB8@cs.usfca.edu>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
	<656FE65F-505C-444E-AA39-55AA7FE4ACB8@cs.usfca.edu>
Message-ID: <469C1408.5030109@ca.com>

Assuming of course he has a nice file of one record per line ...
if he has some of the nastier record followed by sub-records (variable 
number) then the job's going to be a little trickier :-)

Terence Parr said the following on 17/07/2007 10:56 AM:
>
> On Jul 16, 2007, at 5:51 PM, Benji Smith wrote:
>> The JavaCC parser works well, except that I can't parse the file
>> record-by-record. I have to parse the entire file, returning a
>> collection of Record objects at the end.
>
> Hi. just read a line at a time and then send that to the parser. :)
>
> Ter
>
>
>

From sohail at taggedtype.net  Mon Jul 16 18:25:25 2007
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon, 16 Jul 2007 18:25:25 -0700
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
Message-ID: <1184635525.19773.11.camel@localhost.localdomain>

On Mon, 2007-07-16 at 20:51 -0400, Benji Smith wrote:
> The JavaCC parser works well, except that I can't parse the file
> record-by-record. I have to parse the entire file, returning a
> collection of Record objects at the end.

Set up your grammar to only do one record at a time. Then keep parsing
until you get back a null record (or whatever)

Should work ;-)


From jonathan.thomas at ca.com  Mon Jul 16 18:30:33 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 17 Jul 2007 11:30:33 +1000
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <1184635525.19773.11.camel@localhost.localdomain>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
	<1184635525.19773.11.camel@localhost.localdomain>
Message-ID: <469C1BB9.3010002@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070717/05db2156/attachment.html 

From sohail at taggedtype.net  Mon Jul 16 18:44:43 2007
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon, 16 Jul 2007 18:44:43 -0700
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <469C1BB9.3010002@ca.com>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
	<1184635525.19773.11.camel@localhost.localdomain>
	<469C1BB9.3010002@ca.com>
Message-ID: <1184636683.19773.16.camel@localhost.localdomain>

Well my possibly flawed assumption was that the grammar would look
something like this:

// csv parser
startRule: singleRecord*;

...

If you start your parser at startRule then it will exhaust all input
before returning, but if you start it at singleRecord, it should only
care about enough tokens to satisfy the one rule.

On Tue, 2007-07-17 at 11:30 +1000, Jonathan Thomas wrote:
> How would one go about doing that, Sohail?
> I'm also mildly interested in such a solution.
> 
> Sohail Somani said the following on 17/07/2007 11:25 AM: 
> > On Mon, 2007-07-16 at 20:51 -0400, Benji Smith wrote:
> >   
> > > The JavaCC parser works well, except that I can't parse the file
> > > record-by-record. I have to parse the entire file, returning a
> > > collection of Record objects at the end.
> > >     
> > 
> > Set up your grammar to only do one record at a time. Then keep parsing
> > until you get back a null record (or whatever)
> > 
> > Should work ;-)
> > 
> > 
> >   


From benji at benjismith.net  Mon Jul 16 19:33:26 2007
From: benji at benjismith.net (Benji Smith)
Date: Mon, 16 Jul 2007 22:33:26 -0400
Subject: [antlr-interest]  Incremental Parsing?
In-Reply-To: <b46e0d5e0707161930k3d75604lbd955281280e9fd@mail.gmail.com>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
	<1184635525.19773.11.camel@localhost.localdomain>
	<469C1BB9.3010002@ca.com>
	<1184636683.19773.16.camel@localhost.localdomain>
	<b46e0d5e0707161900v6fbf5c57o7761582310877434@mail.gmail.com>
	<1184638600.19773.17.camel@localhost.localdomain>
	<b46e0d5e0707161930k3d75604lbd955281280e9fd@mail.gmail.com>
Message-ID: <b46e0d5e0707161933i2d3b6acdj5f1116be93ef263f@mail.gmail.com>

I got this message directly from Waldemar Sauer (I accidentally sent
my first draft of the message directly to Waldemar. oops.)

Based on his suggestion below, I thought of an interesting way to
handle the situation, if necessary.

On 7/16/07, Waldemar Sauer <waldemarsauer at hotmail.com> wrote:
> No probs.  To my knowledge, due to the fact that antlr is an LL(*) parser,
> it is already incremental in nature.  As long as you do not build an AST
> (I'm not sure what the default setting (build vs. do not build) is in this
> case), the memory imprint should be minimal.  That is: if you have a grammar
> rule such as the following:
>
> rule1: (rule2 { javaFunctionHere(); })*;
>
> javaFunctionHere() will be executing each time rule2 is matched.
>
> Hope this helps
>  - Waldemar

Based on Waldemar's feedback, it occurs to me that I could pass some
sort of callback (an anonymous inner class, in Java, or a delegate in
C#) into the parser's constructor, and then invoke the callback as a
semantic action whenever the CsvRecord production matches.

Of course, a legitimate incremental parser (where the lexer pauses
after returning a record) would be preferable. But at least the
callback mechanism would prevent me from passing a hundred million
Record objects back up to the calling code.

--benji smith

From lgcraymer at yahoo.com  Mon Jul 16 19:45:03 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 16 Jul 2007 19:45:03 -0700 (PDT)
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <b46e0d5e0707161933i2d3b6acdj5f1116be93ef263f@mail.gmail.com>
Message-ID: <341697.98767.qm@web55910.mail.re3.yahoo.com>

Why not just implement the parser as a coroutine? 
That is, spawn a parser thread that relinquishes
control after a record is parsed (the callback you
mention could just relinquish control).  You could
"easily" implement a read_record that does the right
thing--transfer control to the parser and read from a
shared record buffer when control is returned.

IIRC, there is a discussion of coroutines in Vol. 1 (I
think) of Knuth.

BTW, this approach should be implementable with your
javaCC parser.

--Loring

--- Benji Smith <benji at benjismith.net> wrote:

> I got this message directly from Waldemar Sauer (I
> accidentally sent
> my first draft of the message directly to Waldemar.
> oops.)
> 
> Based on his suggestion below, I thought of an
> interesting way to
> handle the situation, if necessary.
> 
> On 7/16/07, Waldemar Sauer
> <waldemarsauer at hotmail.com> wrote:
> > No probs.  To my knowledge, due to the fact that
> antlr is an LL(*) parser,
> > it is already incremental in nature.  As long as
> you do not build an AST
> > (I'm not sure what the default setting (build vs.
> do not build) is in this
> > case), the memory imprint should be minimal.  That
> is: if you have a grammar
> > rule such as the following:
> >
> > rule1: (rule2 { javaFunctionHere(); })*;
> >
> > javaFunctionHere() will be executing each time
> rule2 is matched.
> >
> > Hope this helps
> >  - Waldemar
> 
> Based on Waldemar's feedback, it occurs to me that I
> could pass some
> sort of callback (an anonymous inner class, in Java,
> or a delegate in
> C#) into the parser's constructor, and then invoke
> the callback as a
> semantic action whenever the CsvRecord production
> matches.
> 
> Of course, a legitimate incremental parser (where
> the lexer pauses
> after returning a record) would be preferable. But
> at least the
> callback mechanism would prevent me from passing a
> hundred million
> Record objects back up to the calling code.
> 
> --benji smith
> 



       
____________________________________________________________________________________
Moody friends. Drama queens. Your life? Nope! - their life, your story. Play Sims Stories at Yahoo! Games.
http://sims.yahoo.com/  

From benji at benjismith.net  Mon Jul 16 20:02:08 2007
From: benji at benjismith.net (Benji Smith)
Date: Mon, 16 Jul 2007 23:02:08 -0400
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <341697.98767.qm@web55910.mail.re3.yahoo.com>
References: <b46e0d5e0707161933i2d3b6acdj5f1116be93ef263f@mail.gmail.com>
	<341697.98767.qm@web55910.mail.re3.yahoo.com>
Message-ID: <b46e0d5e0707162002u2601f4dembb8a7497ba61fc52@mail.gmail.com>

On 7/16/07, Loring Craymer <lgcraymer at yahoo.com> wrote:
> Why not just implement the parser as a coroutine?

I agree. Coroutines would be perfect. Not all languages have 'em though.

People have been talking about adding coroutines to Java for at least
three or four years now. I wonder if it'll ever happen.

--benji

From sohail at taggedtype.net  Mon Jul 16 20:15:57 2007
From: sohail at taggedtype.net (Sohail Somani)
Date: Mon, 16 Jul 2007 20:15:57 -0700
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <b46e0d5e0707162002u2601f4dembb8a7497ba61fc52@mail.gmail.com>
References: <b46e0d5e0707161933i2d3b6acdj5f1116be93ef263f@mail.gmail.com>
	<341697.98767.qm@web55910.mail.re3.yahoo.com>
	<b46e0d5e0707162002u2601f4dembb8a7497ba61fc52@mail.gmail.com>
Message-ID: <1184642157.25207.0.camel@localhost.localdomain>

On Mon, 2007-07-16 at 23:02 -0400, Benji Smith wrote:
> On 7/16/07, Loring Craymer <lgcraymer at yahoo.com> wrote:
> > Why not just implement the parser as a coroutine?
> 
> I agree. Coroutines would be perfect. Not all languages have 'em though.
> 
> People have been talking about adding coroutines to Java for at least
> three or four years now. I wonder if it'll ever happen.

Better file a JSR :-)


From lgcraymer at yahoo.com  Mon Jul 16 20:23:01 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 16 Jul 2007 20:23:01 -0700 (PDT)
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <b46e0d5e0707162002u2601f4dembb8a7497ba61fc52@mail.gmail.com>
Message-ID: <384015.64312.qm@web55915.mail.re3.yahoo.com>

Well, Thread.suspend() and Thread.resume() are
deprecated, but still valid.  You can also couple use
of a ReentrantLock with Thread.yield().  Java supports
all of the necessary machinery.

--Loring

--- Benji Smith <benji at benjismith.net> wrote:

> On 7/16/07, Loring Craymer <lgcraymer at yahoo.com>
> wrote:
> > Why not just implement the parser as a coroutine?
> 
> I agree. Coroutines would be perfect. Not all
> languages have 'em though.
> 
> People have been talking about adding coroutines to
> Java for at least
> three or four years now. I wonder if it'll ever
> happen.
> 
> --benji
> 



 
____________________________________________________________________________________
Now that's room service!  Choose from over 150,000 hotels
in 45,000 destinations on Yahoo! Travel to find your fit.
http://farechase.yahoo.com/promo-generic-14795097

From jbb at acm.org  Mon Jul 16 20:59:41 2007
From: jbb at acm.org (jbb at acm.org)
Date: Mon, 16 Jul 2007 23:59:41 -0400
Subject: [antlr-interest] (newbie) mismatched error
In-Reply-To: <710599.86817.qm@web58102.mail.re3.yahoo.com> (message from ali
	azimi on Mon, 16 Jul 2007 14:00:59 -0700 (PDT))
References: <710599.86817.qm@web58102.mail.re3.yahoo.com>
Message-ID: <E1IAeDt-0002oE-H4@gecko.home.org>

>  Hi, 

Greetings!
   
>  I apologise for the inconsistencies in the grammar I posted
>  earlier. Here is the more correct one.

Ok. still not precisely correct tho...

>   
>  For the input:
>  system; endsystem;
>
>  I get the following error message: What seems to be wrong? What is set null?
>   
>  line 1:0 mismatched input 'system' expecting set null
>   
>  the grammar is as following:
>  
.....snipped.....


-------------------------
1) I was unable to reproduce your error.

But you have

>  textualSystemDefinition 
>              :packageReferenceClause* ....other stuff...
>        ;

and

>  packageReferenceClause:
>              ;

so your rules are saying that a textualSystemDefinition starts off by
containing 0 or more packageReferenceClause's.

yet your rules also say that a packageReferenceClause contains nothing
(e.g. null).

this is, of course, ambiguous. surely the ANTLR tool warned about this.

-------------------------
2) i did try the grammar you posted in order to try to reproduce the error you
   reported.

but there are missing rules and apparent spelling mistakes.

so i tried to fix the missing rules for characterstring and for handling
whitespace and various spelling errors

and got several ambiguity warnings from ANTLR. the for packageReferenceClause
as mentioned above and for word (as, once again, i am sure the Tool already
informed you about).

after fixing those ambiguity things, i obtained several runtime errors during
tree building. i think i fixed those.

so attached please find a version of your posted grammar that Tool's,
compiles, and executes without any warnings or errors.  but, of course, it may
not be what you originally wanted.

-------------------------
3) when you ask for help, it is best to include the SMALLEST yet COMPLETE
   example of the problem you are asking about. this really aids others (like
   me) in their quest to answer your question(s).

and maybe even actually try to run the grammar snippet you post too....

(i know i have been guilty of not running by example questions in the past,
much to my embarrassment ;-)




Hope This Helps
   -jbb

and here is the code....
----------begin cut here----------
grammar Test;

options {
	output = AST;
	ASTLabelType = CommonTree;
}

tokens { PACKREF; COM; WORD; }

//------------------------------------------------------------------------
// code to be incorporated into the generated parser...

@members {
    private static final String [] x = new String[]{
        "system; endsystem;",
        "system foo_bar; endsystem bar_foo;"
    };

    public static void main(String [] args) {
        for( int i = 0; i < x.length; ++i ) {
            try {
                System.out.println("about to parse:"+x[i]);
                TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
                CommonTokenStream tokens = new CommonTokenStream(lexer);

                TestParser parser = new TestParser(tokens);
                TestParser.start_return p_result = parser.start();

                CommonTree ast = p_result.tree;
                System.out.println("resultant tree:" + ast.toStringTree());
                System.out.println();
            } catch(Exception e) {
                e.printStackTrace();
            }
        }
    }
}

//------------------------------------------------------------------------
// next follows the parser...

start : textualSystemDefinition ;

textualSystemDefinition :
        packageReferenceClause*
        'system'    sn1=systemName?  end // added sn1=
        'endsystem' sn2=systemName?  end // added sn2=
        -> ^(PACKREF packageReferenceClause*
            'system'    $sn1? end  // use sn1 to grab the first systemName
            'endsystem' $sn2? end) // use sn2 to grab the second systemName
    ;

packageReferenceClause : 'needsomethinghere' /*to avoid grammar warning*/ ; 

systemName : NAME ; // name is now a lexer rule

end : ( 'comment' characterstring )? ';'
    ->^(';' ( ^(COM 'comment' characterstring) )? )
    ;

// changed name to be a lexer rule.
NAME : Word { $type = WORD; } ( '_' Word { $type = NAME; } )* ;
/* was: name : word ( '_' word )* -> ^(word ( ^(WORD '_' word) )* ) ;*/

// changed word to be a lexer rule, fixed ambiguity along the way.
fragment
Word : '.'* AlphaNumeric ( AlphaNumeric | '.' )* ;
// was word : ( alphaNumeric | '.' )* alphaNumeric ( alphaNumeric | '.' )* ;

fragment // changed to be a lexer fragment (was alphaNumeric : ...)
AlphaNumeric : Uppercase | National | Lowercase | Decimaldigit ;

fragment // changed to be a lexer fragment
Decimaldigit : '0'..'9' ;

fragment // changed to be a lexer fragment
National : '#' | '@' | '"' | '$' | '[' | ']' | '{' | '}' | '^' | '~' ;

fragment // changed to be a lexer fragment
Lowercase : 'a'..'z' ;

fragment // changed to be a lexer fragment
Uppercase :'A'..'Z' ;

// rules that seem to be necessary, but were not given in original posting
characterstring : 'characterstring';
WS : (' ' | '\t' | '\n' | '\r')+ { $channel = HIDDEN; } ;

// will probably need this, for the natural numbers...
// NATURAL : Decimaldigit+ ;
----------end cut here----------

From vbar at comp.cz  Mon Jul 16 22:13:47 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 17 Jul 2007 07:13:47 +0200
Subject: [antlr-interest] How to set imaginary token text?
In-Reply-To: <200707161220.57143.rschulz@sonic.net>
References: <200707151859.31095.vbar@comp.cz> <200707162104.36101.vbar@comp.cz>
	<200707161220.57143.rschulz@sonic.net>
Message-ID: <200707170713.47874.vbar@comp.cz>

On Monday 16 July 2007 21:20, Randall R Schulz wrote:
> On Monday 16 July 2007 12:04, Vaclav Barta wrote:
> > Experimenting some more, maybe I'd like to parse (some of) these
> > characters individually but consolidate them into one AST node -
> > something like
> Let me clarify that it is at the lexical level that a
> token-per-character approach incurs potentially excessive overhead. For
> example, a whitespace rule that matched single white-space characters
> vs. one that collected them together could make a large difference in
Well, I'm not tokenizing whitespace characters individually. String characters 
may well run into thousands, but what's a few thousand objects between 
friends?

> > string
> >
> > 	: s = quotedString -> LITERAL
> > 	| BareString -> LITERAL
> > 	;
> >
> > where LITERAL is an imaginary token - but as written, it obviously
> > loses the string value. How can I set LITERAL token text to the value
> > returned from quotedString, or $BareString.getText() ?
> Do you have TDAR (The Definitive ANTLR Refernce)? If so, on page 176
No.

  	Bye
  		Vasek

From Damir.Kirasic at fer.hr  Mon Jul 16 23:56:22 2007
From: Damir.Kirasic at fer.hr (=?iso-8859-2?Q?Damir_Kirasi=E6?=)
Date: Tue, 17 Jul 2007 08:56:22 +0200
Subject: [antlr-interest] AST construction problem
Message-ID: <6DEE7D97D631C947A753C101930326660237CD84@sluga.fer.hr>

Hello,

I am new to ANTLR.
I am trying to construct an AST for C
with the following C grammar:

translation_unit
	scope Symbols;
	@init {
	  $Symbols::types = new Hashtable();
	}
	: external_declaration+ -> ^(translation_unit external_declaration+)
	;
	
	... // other rules
	
but I get 

"error(136): C.g:87:31: reference to rewrite element translation_unit
without reference on left of ->"

It works fine if I define translationUnit as a token
and then use rewrite rule:

-> ^(translationUnit external_declaration+)

Can I do that without defining translationUnit as a token
and use rule name translation_unit  instead?

Thank you for your answers.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070717/07c9cc26/attachment.html 

From kroepke at classdump.org  Tue Jul 17 00:06:44 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 17 Jul 2007 00:06:44 -0700
Subject: [antlr-interest] enum return types for rules?
In-Reply-To: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
Message-ID: <8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>


On Jul 16, 2007, at 2:07 PM, Cameron Esfahani wrote:

> size_qualifier returns [ ValueNumberValueWidth Width ]
> 	:	T_SIZE_8
> 		{
> 			$Width = kValueNumberValue8Bit;
> 		}
> 	;
>
> And ValueNumberValueWidth is defined as:
>
> typedef enum {
> 	kValueNumberValue8Bit		= 0x300,
> 	kValueNumberValue16Bit,
> 	kValueNumberValue32Bit,
> 	kValueNumberValue64Bit,
> } ValueNumberValueWidth;
>
> When I try and build my tree grammar, I get the following error  
> from gcc:
>
> TWalker.c: In function 'size_qualifier':
> TWalker.c:1132: error: incompatible types in initialization
>
> Because antlr has generated the following line:
>
>     ValueNumberValueWidth Width = NULL;
> 
[...]
>     unsigned long long Number = NULL;

The problem is that the StringTemplate for a target has a type map  
for initialization values.
The C target has these:
cTypeInitMap ::= [
	"int"		    : "0",              // Integers     start out being 0
	"long"		    : "0",              // Longs        start out being 0
	"float"		    : "0.0",            // Floats       start out being 0
	"double"	    : "0.0",            // Doubles      start out being 0
	"ANTLR3_BOOLEAN"    : "ANTLR3_FALSE",   // Booleans     start out  
being Antlr C for false
	"byte"		    : "0",              // Bytes        start out being 0
	"short"		    : "0",              // Shorts       start out being 0
	"char"		    : "0",              // Chars        start out being 0
	default		    : "NULL"            // Anything other than an atomic  
type (above) is a NULL (probably NULL pointer).
]

As you can see, anything that's not explicitely listed gets  
initialized with NULL. This affects other targets likewise.
I guess the only chance is to add your enum and possibly unsigned  
long long to that map. It sucks, but I think it cannot be done in the  
grammar directly (though I remember talk of something like overriding  
templates in the grammar. That might just be my blurry memory - and  
this is definitely more than a year ago.)

That stuff is located in the antlr.jar, though if you copy the C.stg  
file to somewhere else, and put it first into the classpath, ANTLR  
will pick up that copy. There you could do your changes.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr at mirality.co.nz  Tue Jul 17 01:17:04 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 17 Jul 2007 20:17:04 +1200
Subject: [antlr-interest] cpp target
In-Reply-To: <BAY136-DAV6A29F7A33592EE59BF111BAF80@phx.gbl>
References: <BAY136-DAV6A29F7A33592EE59BF111BAF80@phx.gbl>
Message-ID: <20070717081708.575CD11EB45@www.antlr.org>

At 09:51 17/07/2007, Waldemar Sauer wrote:
>How do I tell antlr v.3 to output to a .cpp file?
>
>I need to be able to use my C++ objects in my parser.  I can get 
>to where I need to go by renaming the .c file to .cpp, and doing 
>the ``extern "C"'' thing on each regular C include.  So I think I 
>can accomplish what I need with e.g. a Perl script, but I was 
>wondering if there is maybe a better way to do this, e.g. some 
>option switch somewhere.  I can imagine that I will not be the 
>only one that needs to cross the C/C++ barrier.

Three options that occur to me:

1. Whatever you're doing currently :)
2. Use a compiler option to force compilation as C++ despite the 
.c extension
3. Write a C++ wrapper class to hide your C parser from the rest 
of the C++ code, and corresponding C functions to let your parser 
manipulate C++ objects.  (This may get complicated depending on 
how many classes you want to encapulate this way.)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070717/4d2181cf/attachment.html 

From antlr at mirality.co.nz  Tue Jul 17 01:30:34 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Tue, 17 Jul 2007 20:30:34 +1200
Subject: [antlr-interest] enum return types for rules?
In-Reply-To: <8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
	<8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
Message-ID: <20070717083039.0B43311EB82@www.antlr.org>

At 19:06 17/07/2007, Kay Roepke wrote:
 >> size_qualifier returns [ ValueNumberValueWidth Width ]
[...]
 >>     ValueNumberValueWidth Width = NULL;
[...]
 >The problem is that the StringTemplate for a target has a
 >type map for initialization values.
 >The C target has these:
 >cTypeInitMap ::= [
 >	"int"		    : "0",              // Integers     start out being 
0
[...]
 >As you can see, anything that's not explicitely listed gets
 >initialized with NULL. This affects other targets likewise.
 >I guess the only chance is to add your enum and possibly
 >unsigned long long to that map. It sucks, but I think it
 >cannot be done in the grammar directly (though I remember
 >talk of something like overriding templates in the grammar.
 >That might just be my blurry memory - and this is definitely
 >more than a year ago.)

Surely it wouldn't be too hard to extend the ANTLR grammar to 
accept something like this:

   size_qualifier returns [ ValueNumberValueWidth Width = 0 ]

ie. explicitly defining a default value for the case when ANTLR 
doesn't know what to put.  This would save having to put an @init 
section in for a lot of cases, too (since it would override 
ANTLR's default even for types it did recognise).

If possible, ANTLR should even throw an error if an unrecognised 
type is used without an explicit default (for C, anyway -- in Java 
and C++ objects can be presumed to have proper default 
constructors).  Though a pointer to any kind of object should be 
treated as recognised and use NULL implicitly.  I'm not sure how 
much of that you can accomplish with just StringTemplate, though.

Ter?


From ssiegel at finjan.com  Tue Jul 17 02:42:35 2007
From: ssiegel at finjan.com (Shmuel Siegel)
Date: Tue, 17 Jul 2007 12:42:35 +0300
Subject: [antlr-interest] Antlr parser error messages
Message-ID: <E344C433F006AB45A306D422F9C3EB4C022D8951@exmail1.finjan.com>

IIRC, way back in the early days of ANTLR 3 early access, ANTLR had a
very nice error reporting feature. When a parse rule decided that
something didn't match, ANTLR would tell you the parse hierarchy of the
location of the failure. Sort of like a traceback but rule based.

 

Where has that feature gone? What can I do to activate it?

 

Shmuel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070717/8c7e2ae6/attachment.html 

From pink at odahoda.de  Tue Jul 17 04:10:08 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 17 Jul 2007 13:10:08 +0200
Subject: [antlr-interest] Antlr parser error messages
References: <E344C433F006AB45A306D422F9C3EB4C022D8951@exmail1.finjan.com>
Message-ID: <f7i82g$si$1@sea.gmane.org>

Shmuel Siegel wrote:

> IIRC, way back in the early days of ANTLR 3 early access, ANTLR had a
> very nice error reporting feature. When a parse rule decided that
> something didn't match, ANTLR would tell you the parse hierarchy of the
> location of the failure. Sort of like a traceback but rule based.
> 
> Where has that feature gone? What can I do to activate it?

You can reimplement this by overriding the getErrorMessage() of the
recognizer.
You can get the 'rule traceback' using the method getRuleInvocationStack().
An enriched version of getErrorMessage() could look like

public String getErrorMessage(RecognitionException e,
                              String[] tokenNames) {
  return getRuleInvocationStack(e, this.getClass().getName())
         + " "
         + super.getErrorMessage(e, tokenNames);
}

(untested!)

The book features a slightly extended version of this (should be
in "errors/E2.g" in the code package from
<http://www.pragmaticprogrammer.com/titles/tpantlr/code.html>).

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From rschulz at sonic.net  Tue Jul 17 06:08:26 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 17 Jul 2007 06:08:26 -0700
Subject: [antlr-interest] How to set imaginary token text?
In-Reply-To: <200707170713.47874.vbar@comp.cz>
References: <200707151859.31095.vbar@comp.cz>
	<200707161220.57143.rschulz@sonic.net>
	<200707170713.47874.vbar@comp.cz>
Message-ID: <200707170608.26992.rschulz@sonic.net>

On Monday 16 July 2007 22:13, Vaclav Barta wrote:
> On Monday 16 July 2007 21:20, Randall R Schulz wrote:
> > On Monday 16 July 2007 12:04, Vaclav Barta wrote:
> > > Experimenting some more, maybe I'd like to parse (some of) these
> > > characters individually but consolidate them into one AST node -
> > > something like
> >
> > Let me clarify that it is at the lexical level that a
> > token-per-character approach incurs potentially excessive overhead.
> > For example, a whitespace rule that matched single white-space
> > characters vs. one that collected them together could make a large
> > difference in
>
> Well, I'm not tokenizing whitespace characters individually. String
> characters may well run into thousands, but what's a few thousand
> objects between friends?

You had a non-fragment lexer rule whose right-hand-side was a single dot 
(any-character wildcard). This does indeed create a single token for 
each character it matches. That was what prompted my original 
statement.


Randall Schulz

From rschulz at sonic.net  Tue Jul 17 06:12:39 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 17 Jul 2007 06:12:39 -0700
Subject: [antlr-interest] ANTLR Web Site Down / Unresponsive
Message-ID: <200707170612.39588.rschulz@sonic.net>

Hi,

I cannot reach the ANTLR home page nor the Wiki page.

The mailing list is given rapid turn-around, though.


Randall Schulz

From pink at odahoda.de  Tue Jul 17 06:19:05 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 17 Jul 2007 15:19:05 +0200
Subject: [antlr-interest] ANTLR Web Site Down / Unresponsive
References: <200707170612.39588.rschulz@sonic.net>
Message-ID: <f7ifk9$tbl$1@sea.gmane.org>

Randall R Schulz wrote:

> I cannot reach the ANTLR home page nor the Wiki page.
> 
> The mailing list is given rapid turn-around, though.

Confirmed. The host is up and the HTTP port is bound (as there is
no "connection refused" error), but HTTP connections timeout.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From felipe_abcarvalho at yahoo.com.br  Tue Jul 17 06:46:11 2007
From: felipe_abcarvalho at yahoo.com.br (Felipe Carvalho)
Date: Tue, 17 Jul 2007 06:46:11 -0700 (PDT)
Subject: [antlr-interest] (newbie) Using ANTLRWorks generated classes
Message-ID: <310926.96163.qm@web63909.mail.re1.yahoo.com>

Hello,
    I'm using ANTLRWorks 1.0.2 to debug statements against a grammar file (.g) and I noticed it creates two Java files, one for the parser and one for the lexer.
    I'm trying to reuse those generated classes to retrieve the debug output, but when I instantiate the parser, passing in CommonTokenStream and the port to use, the execution flies away and it never comes back.

    Does anybody know what I'm missing? Aren't these generated classes reusable by external Java code?

Regards,
   Felipe


       
____________________________________________________________________________________
Novo Yahoo! Cad?? - Experimente uma nova busca.
http://yahoo.com.br/oqueeuganhocomisso 

From marko06 at gmail.com  Tue Jul 17 06:52:03 2007
From: marko06 at gmail.com (=?WINDOWS-1252?Q?Marko_Ko=9Amerl?=)
Date: Tue, 17 Jul 2007 15:52:03 +0200
Subject: [antlr-interest] Parsing C++ source files...
Message-ID: <399464b90707170652w1a5f955kf9a341790a53af58@mail.gmail.com>

Hello!

Maybe there are answers on my question allready on mailing list but I am
trying to get informations to accomplish what I want too long so I would be
very grateful and happy if somebody could help me...

I want to parse c++ source file to get AST so that I could make queries:
- which functions are called in some function
- give me a list of all functions in this (header, cpp) file
- ...

So I would like to write a program that you input a source or header file or
preprocessed file and you get AST. And then you can make queries...
And I would like to do that in windows and I would be really, really, really
vary gratefull if somebody could tell me(give me links on tutorial,
tips,...) how to do that and if using ANTLR would be the best or is there
anything easyer...

Tnx for any kind of answer!

marko
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070717/1fb96973/attachment.html 

From ruth.karl at gmx.de  Tue Jul 17 08:07:08 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Tue, 17 Jul 2007 17:07:08 +0200
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not visible anymore...
In-Reply-To: <8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
	<8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
Message-ID: <469CDB1C.6080101@gmx.de>

Hello AnTLRWorkers,

after an AnTLRWorks crash I do not get the interpreter GUI anymore when 
I open the IDE. Replacing the jar does not help, so I guess there must 
be a file containing some infos about the last configuration that I 
should delete/correct- is that so? If it is: how is it called and where 
should I look for it? I can not find it in the AnTLRWorks directory...
Otherwise: any other suggestion, why this could happen or how to fix it?
(I am working on Windows Vista BE, Java version is 1.6.0_01-b06).

Thanks a lot,

Ruth


From rschulz at sonic.net  Tue Jul 17 08:15:30 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 17 Jul 2007 08:15:30 -0700
Subject: [antlr-interest] ANTLR Web Site Down / Unresponsive
In-Reply-To: <200707170612.39588.rschulz@sonic.net>
References: <200707170612.39588.rschulz@sonic.net>
Message-ID: <200707170815.30415.rschulz@sonic.net>

On Tuesday 17 July 2007 06:12, Randall R Schulz wrote:
> Hi,
>
> I cannot reach the ANTLR home page nor the Wiki page.
>
> The mailing list is giving rapid turn-around, though.


The Web site is back in operation.


Randall Schulz

From ruth.karl at gmx.de  Tue Jul 17 08:23:40 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Tue, 17 Jul 2007 17:23:40 +0200
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not visible
	anymore...
In-Reply-To: <469CDB1C.6080101@gmx.de>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>	<8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
	<469CDB1C.6080101@gmx.de>
Message-ID: <469CDEFC.3080106@gmx.de>

Fixed! Thanks.

Ruth Karl schrieb:
> Hello AnTLRWorkers,
>
> after an AnTLRWorks crash I do not get the interpreter GUI anymore 
> when I open the IDE. Replacing the jar does not help, so I guess there 
> must be a file containing some infos about the last configuration that 
> I should delete/correct- is that so? If it is: how is it called and 
> where should I look for it? I can not find it in the AnTLRWorks 
> directory...
> Otherwise: any other suggestion, why this could happen or how to fix it?
> (I am working on Windows Vista BE, Java version is 1.6.0_01-b06).
>
> Thanks a lot,
>
> Ruth
>

From rschulz at sonic.net  Tue Jul 17 08:26:35 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 17 Jul 2007 08:26:35 -0700
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not visible
	anymore...
In-Reply-To: <469CDEFC.3080106@gmx.de>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
	<469CDB1C.6080101@gmx.de> <469CDEFC.3080106@gmx.de>
Message-ID: <200707170826.35969.rschulz@sonic.net>

Ruth,

On Tuesday 17 July 2007 08:23, Ruth Karl wrote:
> Fixed! Thanks.

Perhaps you could tell us what was wrong and how you fixed it so others 
who come looking at the list archive can help themselves rather than 
posting again.

Thanks.


> Ruth Karl schrieb:
> > Hello AnTLRWorkers,
> >
> > after an AnTLRWorks crash I do not get the interpreter GUI anymore
> > when I open the IDE. Replacing the jar does not help, so I guess
> > there must be a file containing some infos about the last
> > configuration that I should delete/correct- is that so? If it is:
> > how is it called and where should I look for it? I can not find it
> > in the AnTLRWorks directory...
> > Otherwise: any other suggestion, why this could happen or how to
> > fix it? (I am working on Windows Vista BE, Java version is
> > 1.6.0_01-b06).



Randall Schulz

From pink at odahoda.de  Tue Jul 17 07:05:49 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 17 Jul 2007 16:05:49 +0200
Subject: [antlr-interest] (newbie) Using ANTLRWorks generated classes
References: <310926.96163.qm@web63909.mail.re1.yahoo.com>
Message-ID: <f7iibt$77i$1@sea.gmane.org>

Hello,

Felipe Carvalho wrote:

>     I'm using ANTLRWorks 1.0.2 to debug statements against a grammar file
>     (.g) and I noticed it creates two Java files, one for the parser and
>     one for the lexer. I'm trying to reuse those generated classes to
>     retrieve the debug output, but when I instantiate the parser, passing
>     in CommonTokenStream and the port to use, the execution flies away and
>     it never comes back.
> 
>     Does anybody know what I'm missing? Aren't these generated classes
>     reusable by external Java code?

These are files generated with the '-debug' option: it has been prepared to
listen on a socket for commands from ANTLRWorks.
To generate parsers for 'normal' use, use 'Generate -> Generate Code' from
the menu, or invoke plain ANTLR on the .g file in your console, e.g.
$ java org.antlr.Tool T.g
(once you have it installed and properly set up the CLASSPATH).

HTH

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From jimi at temporal-wave.com  Tue Jul 17 09:35:20 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Jul 2007 09:35:20 -0700
Subject: [antlr-interest] enum return types for rules?
In-Reply-To: <8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
	<8D9670AD-8DCF-46B1-81CB-CF1D04157738@classdump.org>
Message-ID: <051466DAA0D608439E196797955018D76ED8@wavemachine.temporal-wave.com>

Actually, in order to deal with this, I thought I had excluded such things from being initialized recently and now only initialize things like trees. However, I will look in to this a bit more on my next bug fix/analyze day.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kay Roepke
> Sent: Tuesday, July 17, 2007 12:07 AM
> To: Cameron Esfahani
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] enum return types for rules?
> 
> 
> On Jul 16, 2007, at 2:07 PM, Cameron Esfahani wrote:
> 
> > size_qualifier returns [ ValueNumberValueWidth Width ]
> > 	:	T_SIZE_8
> > 		{
> > 			$Width = kValueNumberValue8Bit;
> > 		}
> > 	;
> >
> > And ValueNumberValueWidth is defined as:
> >
> > typedef enum {
> > 	kValueNumberValue8Bit		= 0x300,
> > 	kValueNumberValue16Bit,
> > 	kValueNumberValue32Bit,
> > 	kValueNumberValue64Bit,
> > } ValueNumberValueWidth;
> >
> > When I try and build my tree grammar, I get the following error
> > from gcc:
> >
> > TWalker.c: In function 'size_qualifier':
> > TWalker.c:1132: error: incompatible types in initialization
> >
> > Because antlr has generated the following line:
> >
> >     ValueNumberValueWidth Width = NULL;
> > 
[...]
> >     unsigned long long Number = NULL;
> 
> The problem is that the StringTemplate for a target has a type map
> for initialization values.
> The C target has these:
> cTypeInitMap ::= [
> 	"int"		    : "0",              // Integers     start out
> being 0
> 	"long"		    : "0",              // Longs        start
> out being 0
> 	"float"		    : "0.0",            // Floats       start
> out being 0
> 	"double"	    : "0.0",            // Doubles      start out
> being 0
> 	"ANTLR3_BOOLEAN"    : "ANTLR3_FALSE",   // Booleans     start out
> being Antlr C for false
> 	"byte"		    : "0",              // Bytes        start
> out being 0
> 	"short"		    : "0",              // Shorts       start
> out being 0
> 	"char"		    : "0",              // Chars        start
> out being 0
> 	default		    : "NULL"            // Anything other than
> an atomic
> type (above) is a NULL (probably NULL pointer).
> ]
> 
> As you can see, anything that's not explicitely listed gets
> initialized with NULL. This affects other targets likewise.
> I guess the only chance is to add your enum and possibly unsigned
> long long to that map. It sucks, but I think it cannot be done in the
> grammar directly (though I remember talk of something like overriding
> templates in the grammar. That might just be my blurry memory - and
> this is definitely more than a year ago.)
> 
> That stuff is located in the antlr.jar, though if you copy the C.stg
> file to somewhere else, and put it first into the classpath, ANTLR
> will pick up that copy. There you could do your changes.
> 
> HTH,
> -k
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 


From ruth.karl at gmx.de  Tue Jul 17 10:03:32 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Tue, 17 Jul 2007 19:03:32 +0200
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not
	visible	anymore...
In-Reply-To: <200707170826.35969.rschulz@sonic.net>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>	<469CDB1C.6080101@gmx.de>
	<469CDEFC.3080106@gmx.de> <200707170826.35969.rschulz@sonic.net>
Message-ID: <469CF664.80404@gmx.de>

Sure, the problem is, that when you change the size of the AnTLRWorks 
file frame, the tabs in the lower part simply disappear instead of being 
adapted to the new size...
Stupid me, that I did not try this out before, but it is not really what 
I would have expected ;-)
Cheers,
Ruth

Randall R Schulz schrieb:
> Ruth,
>
> On Tuesday 17 July 2007 08:23, Ruth Karl wrote:
>   
>> Fixed! Thanks.
>>     
>
> Perhaps you could tell us what was wrong and how you fixed it so others 
> who come looking at the list archive can help themselves rather than 
> posting again.
>
> Thanks.
>
>
>   
>> Ruth Karl schrieb:
>>     
>>> Hello AnTLRWorkers,
>>>
>>> after an AnTLRWorks crash I do not get the interpreter GUI anymore
>>> when I open the IDE. Replacing the jar does not help, so I guess
>>> there must be a file containing some infos about the last
>>> configuration that I should delete/correct- is that so? If it is:
>>> how is it called and where should I look for it? I can not find it
>>> in the AnTLRWorks directory...
>>> Otherwise: any other suggestion, why this could happen or how to
>>> fix it? (I am working on Windows Vista BE, Java version is
>>> 1.6.0_01-b06).
>>>       
>
>
>
> Randall Schulz
>
>   

From vbar at comp.cz  Tue Jul 17 10:14:24 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Tue, 17 Jul 2007 19:14:24 +0200
Subject: [antlr-interest] How to set imaginary token text?
In-Reply-To: <200707170608.26992.rschulz@sonic.net>
References: <200707151859.31095.vbar@comp.cz>	<200707161220.57143.rschulz@sonic.net>	<200707170713.47874.vbar@comp.cz>
	<200707170608.26992.rschulz@sonic.net>
Message-ID: <469CF8F0.90601@comp.cz>

Randall R Schulz wrote:
> On Monday 16 July 2007 22:13, Vaclav Barta wrote:
>> On Monday 16 July 2007 21:20, Randall R Schulz wrote:
>>> Let me clarify that it is at the lexical level that a
>>> token-per-character approach incurs potentially excessive overhead.
>>> For example, a whitespace rule that matched single white-space
>>> characters vs. one that collected them together could make a large
>>> difference in
>> Well, I'm not tokenizing whitespace characters individually. String
>> characters may well run into thousands, but what's a few thousand
>> objects between friends?
I take that back; I do, in fact, tokenize some whitespace characters
individually (the input format is something like a makefile, so
e.g. tabs are individual tokens) - just not all of them...

> You had a non-fragment lexer rule whose right-hand-side was a single dot 
> (any-character wildcard). This does indeed create a single token for 
> each character it matches. That was what prompted my original 
That's true, as far as it goes, but as I said, I define that token last, 
so it doesn't match very many characters - only unescaped characters in 
double-quoted strings which can't be in non-quoted strings, I think (and 
errors, of course).

	Bye
		Vasek



From cameron.palmer at gmail.com  Tue Jul 17 11:47:41 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Tue, 17 Jul 2007 20:47:41 +0200
Subject: [antlr-interest] StringTemplate rule hides subtree rules
Message-ID: <bc4938830707171147y58730871je71fdabf175c795f@mail.gmail.com>

In my tree walker I have a fragment like this:
codeBlock
: ^(ID codeEl) -> code(op={Opcodes.START},a={labels.get($ID.text)})
;

codeEl
: ( label | instruction )+
;

the instruction StringTemplate rules only produce output if I comment
out the -> code() bit. What am I doing wrong that I can't have both?

cameron.

From paul at paulkeir.com  Tue Jul 17 15:58:48 2007
From: paul at paulkeir.com (Paul Keir)
Date: Tue, 17 Jul 2007 23:58:48 +0100
Subject: [antlr-interest] Can't see the wood
Message-ID: <469D49A8.4000409@paulkeir.com>

Hi,

I've been using ANTLR for a few months now. I have the book, and the 
ANTLRWorks IDE has been, and continues to be, really really helpful.

 From time to time though I have to admit to being absolutely lost with 
respect to ANTLR's backtracking. For example, using NetBeans I often 
find I am catching breakpoints more times than I would expect. I have 
tried to simplify my Action code placement by mainly using the @after 
and @init sections. Nevertheless, on quite a few occasions I find that 
beyond mere breakpoints, my Action code actually does run more times 
than I expected. My workaround methods are fairly random, and as of yet 
I have no repeatable procedure for dealing with them.

I am sorry this is a bit vague - if I could find a small example problem 
I'd post it. How about a tip, an idea, some insight..._anything_ I may, 
at a high level, be overlooking or misunderstanding.

Thanks,
Paul


From amol_bhagavat at yahoo.co.uk  Tue Jul 17 22:48:34 2007
From: amol_bhagavat at yahoo.co.uk (amol Bhagavat)
Date: Wed, 18 Jul 2007 06:48:34 +0100 (BST)
Subject: [antlr-interest] How to use ANTLR to find function pointers
Message-ID: <734570.8033.qm@web23208.mail.ird.yahoo.com>

Hi,
   
  I am developing a tool where i need to parse a c project code and find out all occurances of function pointers along with all assignments. Also i need to create  a output where i can specify the files where the function pointers and functions are defined.While finding function pointers i also need to aware of variable scope, since there can be occurance of local variable with same name.
  I am very new to ANTLR ...
  Please let me know can i use ANTLR ?  how i can use it?
  My intention is to find out all the possibilities of function call through a function pointer.
   
  Thanks in advance...
   
  Regards,
Amol
   

       
---------------------------------
 Yahoo! Answers - Get better answers from someone who knows. Tryit now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/dd293256/attachment.html 

From antlr-list at arizona-software.ch  Tue Jul 17 23:18:30 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Tue, 17 Jul 2007 23:18:30 -0700
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not
	visible	anymore...
In-Reply-To: <469CF664.80404@gmx.de>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>	<469CDB1C.6080101@gmx.de>
	<469CDEFC.3080106@gmx.de>
	<200707170826.35969.rschulz@sonic.net> <469CF664.80404@gmx.de>
Message-ID: <0FE19AA8-C439-42B2-A6F0-F069371EA381@arizona-software.ch>

That's really surprising as I cannot reproduce this behavior. Can you  
send me a screenshot to see what it looks like? Is it always  
reproducible?

Regards,

Jean

On Jul 17, 2007, at 10:03 AM, Ruth Karl wrote:

> Sure, the problem is, that when you change the size of the  
> AnTLRWorks file frame, the tabs in the lower part simply disappear  
> instead of being adapted to the new size...
> Stupid me, that I did not try this out before, but it is not really  
> what I would have expected ;-)
> Cheers,
> Ruth
>
> Randall R Schulz schrieb:
>> Ruth,
>>
>> On Tuesday 17 July 2007 08:23, Ruth Karl wrote:
>>
>>> Fixed! Thanks.
>>>
>>
>> Perhaps you could tell us what was wrong and how you fixed it so  
>> others who come looking at the list archive can help themselves  
>> rather than posting again.
>>
>> Thanks.
>>
>>
>>
>>> Ruth Karl schrieb:
>>>
>>>> Hello AnTLRWorkers,
>>>>
>>>> after an AnTLRWorks crash I do not get the interpreter GUI anymore
>>>> when I open the IDE. Replacing the jar does not help, so I guess
>>>> there must be a file containing some infos about the last
>>>> configuration that I should delete/correct- is that so? If it is:
>>>> how is it called and where should I look for it? I can not find it
>>>> in the AnTLRWorks directory...
>>>> Otherwise: any other suggestion, why this could happen or how to
>>>> fix it? (I am working on Windows Vista BE, Java version is
>>>> 1.6.0_01-b06).
>>>>
>>
>>
>>
>> Randall Schulz
>>
>>


From jaluber at gmx.de  Wed Jul 18 01:43:13 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 18 Jul 2007 10:43:13 +0200
Subject: [antlr-interest] How to use ANTLR to find function pointers
In-Reply-To: <734570.8033.qm@web23208.mail.ird.yahoo.com>
References: <734570.8033.qm@web23208.mail.ird.yahoo.com>
Message-ID: <469DD2A1.2010007@gmx.de>

amol Bhagavat wrote:
> Hi,
>  
> I am developing a tool where i need to parse a c project code and find
> out all occurances of function pointers along with all assignments. Also
> i need to create  a output where i can specify the files where
> the function pointers and functions are defined.While finding function
> pointers i also need to aware of variable scope, since there can be
> occurance of local variable with same name.
> I am very new to ANTLR ...
> Please let me know can i use ANTLR ?  how i can use it?
> My intention is to find out all the possibilities of function call
> through a function pointer.
>  
> Thanks in advance...
>  
> Regards,
> Amol

At first, I would recommend to buy the ANTLR book
<http://pragmaticprogrammer.com/titles/tpantlr/index.html>. It is really
helpful, especially, because it contains an example, on which you can
build upon. Alternatively you can look at the source code of the CMinus
example on the same website. That's for understanding only. You'd need a
C grammar, too. Maybe it has been posted one on the grammar site
(somewhere on antlr.org).

On your special I would then generate an AST containing only the
functions and function pointers and then a tree grammar, which can
output the required information. Sorry I can't be more specific at this
stage!

Best regards,
Johannes Luber

From paul at paulkeir.com  Wed Jul 18 02:42:12 2007
From: paul at paulkeir.com (Paul Keir)
Date: Wed, 18 Jul 2007 10:42:12 +0100
Subject: [antlr-interest] Parsing C++ source files...
In-Reply-To: <399464b90707170652w1a5f955kf9a341790a53af58@mail.gmail.com>
References: <399464b90707170652w1a5f955kf9a341790a53af58@mail.gmail.com>
Message-ID: <469DE074.6050804@paulkeir.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/7bebae3d/attachment.html 

From paul at paulkeir.com  Wed Jul 18 03:12:17 2007
From: paul at paulkeir.com (Paul Keir)
Date: Wed, 18 Jul 2007 11:12:17 +0100
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <469D49A8.4000409@paulkeir.com>
References: <469D49A8.4000409@paulkeir.com>
Message-ID: <469DE781.8040302@paulkeir.com>

I know you're dying to hear the conclusion of this one :) Well here it 
is, and I'm delighted.

I'd always assumed that in a rule, the Actions inside an '@init' would 
be called as often as Actions after the start colon (in a rule without 
ORs). In the following example, from ANTLR's C example grammar, I had 
assumed that "a" would be printed as often as " b":

expression
@init { System.out.println("a"); }
    : { System.out.println(" b"); } assignment_expression (',' 
assignment_expression)*
    ;

This isn't true. "a" is printed many more times than " b". I had been 
happily updating many (global) member variables inside @init and @after, 
to recently devastatingly confusive results.

I find putting the Actions within the rules quite messy, so that was why 
I'd 'standardised' on using mainly @init and @after. I will now begin to 
change everything. I'm surprised it worked for so long.

Regards,
Paul

From paul at paulkeir.com  Wed Jul 18 03:24:04 2007
From: paul at paulkeir.com (Paul Keir)
Date: Wed, 18 Jul 2007 11:24:04 +0100
Subject: [antlr-interest] How to use ANTLR to find function pointers
In-Reply-To: <734570.8033.qm@web23208.mail.ird.yahoo.com>
References: <734570.8033.qm@web23208.mail.ird.yahoo.com>
Message-ID: <469DEA44.4060100@paulkeir.com>

ANTLR has a very useful C example grammar. Within it, the parameters of 
a function pointer are one of a number of things which will be caught at 
line 223 of the rule 'direct_declarator'.

// File  C.g
// Line# 223

|    '(' declarator ')'

If you add a Java print statement after this, you will print out 
function pointer parameters and more besides. i.e:

|    '(' declarator ')' { System.out.println($declarator.text); }


This is only a start, sadly function pointers are not _specifically_ 
identified in the few C grammars I have seen.

Paul

From fasmith718 at gmail.com  Wed Jul 18 06:21:20 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Wed, 18 Jul 2007 09:21:20 -0400
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not visible
	anymore...
In-Reply-To: <0FE19AA8-C439-42B2-A6F0-F069371EA381@arizona-software.ch>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
	<469CDB1C.6080101@gmx.de> <469CDEFC.3080106@gmx.de>
	<200707170826.35969.rschulz@sonic.net> <469CF664.80404@gmx.de>
	<0FE19AA8-C439-42B2-A6F0-F069371EA381@arizona-software.ch>
Message-ID: <dea571e70707180621i27a8512bi1849075f30b7794e@mail.gmail.com>

Actually, Jean, my interpreter window goes blank all the time, but I think
it might be a separate issue from the one described in this thread.  The
problem I have is that when I run the interpreter once, it runs perfectly.
However, about 70% of the time, if I tweak the input or fix & regenerate the
.g and try to run the interpreter again all of the interpreter panels
disappear.

I am running at least java 1.5 in windows XP sp 2.  Not sure what else would
be relevant info.  My project partner who also runs ANTLRWorks has had that
problem, but far far less frequently.  Let me know if you need help bug
stomping.

Best regards,
     Frank

On 7/18/07, Jean Bovet <antlr-list at arizona-software.ch> wrote:
>
> That's really surprising as I cannot reproduce this behavior. Can you
> send me a screenshot to see what it looks like? Is it always
> reproducible?
>
> Regards,
>
> Jean
>
> On Jul 17, 2007, at 10:03 AM, Ruth Karl wrote:
>
> > Sure, the problem is, that when you change the size of the
> > AnTLRWorks file frame, the tabs in the lower part simply disappear
> > instead of being adapted to the new size...
> > Stupid me, that I did not try this out before, but it is not really
> > what I would have expected ;-)
> > Cheers,
> > Ruth
> >
> > Randall R Schulz schrieb:
> >> Ruth,
> >>
> >> On Tuesday 17 July 2007 08:23, Ruth Karl wrote:
> >>
> >>> Fixed! Thanks.
> >>>
> >>
> >> Perhaps you could tell us what was wrong and how you fixed it so
> >> others who come looking at the list archive can help themselves
> >> rather than posting again.
> >>
> >> Thanks.
> >>
> >>
> >>
> >>> Ruth Karl schrieb:
> >>>
> >>>> Hello AnTLRWorkers,
> >>>>
> >>>> after an AnTLRWorks crash I do not get the interpreter GUI anymore
> >>>> when I open the IDE. Replacing the jar does not help, so I guess
> >>>> there must be a file containing some infos about the last
> >>>> configuration that I should delete/correct- is that so? If it is:
> >>>> how is it called and where should I look for it? I can not find it
> >>>> in the AnTLRWorks directory...
> >>>> Otherwise: any other suggestion, why this could happen or how to
> >>>> fix it? (I am working on Windows Vista BE, Java version is
> >>>> 1.6.0_01-b06).
> >>>>
> >>
> >>
> >>
> >> Randall Schulz
> >>
> >>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/46bb5cfe/attachment.html 

From wiggjd at lsbu.ac.uk  Wed Jul 18 06:34:30 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Wed, 18 Jul 2007 14:34:30 +0100
Subject: [antlr-interest] Parsing C++ source files...
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C54A7@CSD-EXBE-VS2.lsbu.ac.uk>

I have a C++ parser but it parses preprocessed files not source files.
The problem with source files is that they can contain alternatives
controlled by #ifdef/#endif statements and they are not usually
complete and self contained anyway.
 
My version 3.1 is available from the antlr website but if you are
interested in it let me know as I have a 3.2 version nearing
completion which contains a number of corrections. However, AST
production would have to be added.
 
David.
 
Message: 4 from antlr interest digest vol. 32 Isuue 92
Date: Tue, 17 Jul 2007 15:52:03 +0200
From: " Marko Ko?merl " <marko06 at gmail.com>
Subject: [antlr-interest] Parsing C++ source files...
To: antlr-interest at antlr.org
Message-ID:
        <399464b90707170652w1a5f955kf9a341790a53af58 at mail.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"

Hello!

Maybe there are answers on my question allready on mailing list but I
am
trying to get informations to accomplish what I want too long so I
would be
very grateful and happy if somebody could help me...

I want to parse c++ source file to get AST so that I could make
queries:
- which functions are called in some function
- give me a list of all functions in this (header, cpp) file
- ...

So I would like to write a program that you input a source or header
file or
preprocessed file and you get AST. And then you can make queries...
And I would like to do that in windows and I would be really, really,
really
vary gratefull if somebody could tell me(give me links on tutorial,
tips,...) how to do that and if using ANTLR would be the best or is
there
anything easyer...

Tnx for any kind of answer!

marko
-------------- next part --------------
An HTML attachment was scrubbed...
URL:
http://www.antlr.org/pipermail/antlr-interest/attachments/2007071
7/1fb96973/attachment-0001.html





--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/cfc80cd3/attachment-0001.html 

From ld at galador.net  Wed Jul 18 06:34:14 2007
From: ld at galador.net (Lloyd Dupont)
Date: Wed, 18 Jul 2007 23:34:14 +1000
Subject: [antlr-interest] mysterious bug with ANTLR Works 1.0.2
Message-ID: <00fc01c7c940$55ac17a0$6fef31d2@vulcain>

Sometimes, when I try to debug my grammar with ANTLRWork, I get output in the debugger which has nothing to do with the strings I typed in....

for exemple I try to parse the following input:
===
1.ToString() + 2.0e3
===
with the Grammar attached in ANTLRWorks 1.0.2

and I get a parser error on the 1st token: "oString"
it doesn't make much sense...

does any one have an idea about what's going on?!?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/7a4de2f0/attachment.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ExpTest.g
Type: application/octet-stream
Size: 5675 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/7a4de2f0/attachment.obj 

From jimi at temporal-wave.com  Wed Jul 18 06:35:57 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2007 06:35:57 -0700
Subject: [antlr-interest] How to use ANTLR to find function pointers
In-Reply-To: <734570.8033.qm@web23208.mail.ird.yahoo.com>
References: <734570.8033.qm@web23208.mail.ird.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76EDE@wavemachine.temporal-wave.com>

There is a C grammar in the examples on the download page, which
includes variable/type scope tracking. It shuodl be a trivail matter to
add the function stuff.

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of amol Bhagavat
Sent: Tuesday, July 17, 2007 10:49 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] How to use ANTLR to find function pointers

 

Hi,

 

I am developing a tool where i need to parse a c project code and find
out all occurances of function pointers along with all assignments. Also
i need to create  a output where i can specify the files where the
function pointers and functions are defined.While finding function
pointers i also need to aware of variable scope, since there can be
occurance of local variable with same name.

I am very new to ANTLR ...

Please let me know can i use ANTLR ?  how i can use it?

My intention is to find out all the possibilities of function call
through a function pointer.

 

Thanks in advance...

 

Regards,
Amol

 

  

________________________________

Yahoo! Answers - Get better answers from someone who knows. Try it now
<http://uk.answers.yahoo.com/;_ylc=X3oDMTEydmViNG02BF9TAzIxMTQ3MTcxOTAEc
2VjA21haWwEc2xrA3RhZ2xpbmU> .

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/31a2165d/attachment.html 

From jonas+antlr at pmhost.de  Wed Jul 18 07:50:23 2007
From: jonas+antlr at pmhost.de (Jonas Tampier)
Date: Wed, 18 Jul 2007 16:50:23 +0200
Subject: [antlr-interest] Why is the parser trying to match the wrong rule?
Message-ID: <469E28AF.9070009@pmhost.de>

Hello,
I just recently discovered ANTLR for my own use, that's why I still have 
a severe knowledge deficit regarding the grammar definition.

I want to use ANTLR to parse calendar data I recieve into a tree to 
handle it more easily.
However it seems, that my grammar does not fit the data structure, yet. 
Sadly I don't understand why.

I run into the problem, that daysOfWeek does just match the first day. 
So the parser ends with the errormessage:
line 4:8 mismatched input '2' expecting 'Exceptions'
which indicates, that it tries to match the exceptions rule instead of 
the day rule.

I'd be glad to get a hint pointing me into the right direction.

Jonas Tampier


This is the grammar:

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/
 
 calendarData
     :    PARLEFT DIGIT PIPE 'CalendarData' PARLEFT PARRIGHT PARLEFT 
daysOfWeek view? exceptions? PARRIGHT ;

 daysOfWeek
     :    PARLEFT DIGIT PIPE 'DaysOfWeek' PARLEFT PARRIGHT PARLEFT day+ 
PARRIGHT;
 day     :    PARLEFT DIGIT PIPE DAYNUMBER PARLEFT PARRIGHT PARLEFT 
shift* PARRIGHT ;
 shift     :    PARLEFT DIGIT PIPE DIGIT PARLEFT 's' '|' TIME '|' 'f' 
'|' TIME PARRIGHT PARLEFT PARRIGHT PARRIGHT;
 
 view     :    PARLEFT DIGIT PIPE 'VIEW' PARLEFT 'ShowTotal' PIPE YESNO 
PARRIGHT PARLEFT PARRIGHT PARRIGHT;
 
 exceptions
     :    PARLEFT DIGIT PIPE 'Exceptions' PARLEFT PARRIGHT PARLEFT 
exceptionDay PARRIGHT;
 exceptionDay
     :    PARLEFT DIGIT PIPE NUMBER PARLEFT 'd' PIPE NUMBER PARRIGHT 
PARLEFT shift* PARRIGHT;


/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/
DAYNUMBER : '1'..'7';
PARLEFT :     '(';
PARRIGHT:    ')';
PIPE : '||';
DIGIT    : '0'..'9' ;

YESNO    :    'Y' | 'N';

TIME     : '0'..'2' DIGIT ':' '0'..'5' DIGIT;

NUMBER    : (DIGIT)+ ;

WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+     { $channel = 
HIDDEN; } ;


And this is the data:

(0||CalendarData()(
  (0||DaysOfWeek()(
    (0||1()())
    (0||2()(
      (0||0(s|07:00|f|19:00)())))
    (0||3()(
      (0||0(s|07:00|f|19:00)())))
    (0||4()(
      (0||0(s|07:00|f|19:00)())))
    (0||5()(
      (0||0(s|07:00|f|19:00)())))
    (0||6()(
      (0||0(s|07:00|f|19:00)())))
    (0||7()())))
  (0||VIEW(ShowTotal|N)())
  (0||Exceptions()(
    (0||0(d|38345)())
    (0||1(d|38352)())))))

From a.shneyderman at gmail.com  Wed Jul 18 08:08:25 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 18 Jul 2007 17:08:25 +0200
Subject: [antlr-interest] Translation from v2 to v3
Message-ID: <693a69ba0707180808u662f7e62y4aed92adf51e62f0@mail.gmail.com>

There used to be <Grammar>TokenTypes.java interface generated in v2.
Is there a way to do the same for v3?


-- 
Thanks,
Alex.

From lgcraymer at yahoo.com  Wed Jul 18 08:36:04 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Wed, 18 Jul 2007 08:36:04 -0700 (PDT)
Subject: [antlr-interest] Why is the parser trying to match the wrong
	rule?
In-Reply-To: <469E28AF.9070009@pmhost.de>
Message-ID: <621201.25009.qm@web55905.mail.re3.yahoo.com>

I suspect that NUMBER hides DIGIT and that '2' is read
as a NUMBER and so does not parse as part of a day.

Try
NUMBER : DIGIT (DIGIT)+ ;
and replacing occurrences of NUMBER with
number : DIGIT | NUMBER ;

--Loring

--- Jonas Tampier <jonas+antlr at pmhost.de> wrote:

> Hello,
> I just recently discovered ANTLR for my own use,
> that's why I still have 
> a severe knowledge deficit regarding the grammar
> definition.
> 
> I want to use ANTLR to parse calendar data I recieve
> into a tree to 
> handle it more easily.
> However it seems, that my grammar does not fit the
> data structure, yet. 
> Sadly I don't understand why.
> 
> I run into the problem, that daysOfWeek does just
> match the first day. 
> So the parser ends with the errormessage:
> line 4:8 mismatched input '2' expecting 'Exceptions'
> which indicates, that it tries to match the
> exceptions rule instead of 
> the day rule.
> 
> I'd be glad to get a hint pointing me into the right
> direction.
> 
> Jonas Tampier
> 
> 
> This is the grammar:
> 
>
/*------------------------------------------------------------------
>  * PARSER RULES
> 
>
*------------------------------------------------------------------*/
>  
>  calendarData
>      :    PARLEFT DIGIT PIPE 'CalendarData' PARLEFT
> PARRIGHT PARLEFT 
> daysOfWeek view? exceptions? PARRIGHT ;
> 
>  daysOfWeek
>      :    PARLEFT DIGIT PIPE 'DaysOfWeek' PARLEFT
> PARRIGHT PARLEFT day+ 
> PARRIGHT;
>  day     :    PARLEFT DIGIT PIPE DAYNUMBER PARLEFT
> PARRIGHT PARLEFT 
> shift* PARRIGHT ;
>  shift     :    PARLEFT DIGIT PIPE DIGIT PARLEFT 's'
> '|' TIME '|' 'f' 
> '|' TIME PARRIGHT PARLEFT PARRIGHT PARRIGHT;
>  
>  view     :    PARLEFT DIGIT PIPE 'VIEW' PARLEFT
> 'ShowTotal' PIPE YESNO 
> PARRIGHT PARLEFT PARRIGHT PARRIGHT;
>  
>  exceptions
>      :    PARLEFT DIGIT PIPE 'Exceptions' PARLEFT
> PARRIGHT PARLEFT 
> exceptionDay PARRIGHT;
>  exceptionDay
>      :    PARLEFT DIGIT PIPE NUMBER PARLEFT 'd' PIPE
> NUMBER PARRIGHT 
> PARLEFT shift* PARRIGHT;
> 
> 
>
/*------------------------------------------------------------------
>  * LEXER RULES
> 
>
*------------------------------------------------------------------*/
> DAYNUMBER : '1'..'7';
> PARLEFT :     '(';
> PARRIGHT:    ')';
> PIPE : '||';
> DIGIT    : '0'..'9' ;
> 
> YESNO    :    'Y' | 'N';
> 
> TIME     : '0'..'2' DIGIT ':' '0'..'5' DIGIT;
> 
> NUMBER    : (DIGIT)+ ;
> 
> WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+
>     { $channel = 
> HIDDEN; } ;
> 
> 
> And this is the data:
> 
> (0||CalendarData()(
>   (0||DaysOfWeek()(
>     (0||1()())
>     (0||2()(
>       (0||0(s|07:00|f|19:00)())))
>     (0||3()(
>       (0||0(s|07:00|f|19:00)())))
>     (0||4()(
>       (0||0(s|07:00|f|19:00)())))
>     (0||5()(
>       (0||0(s|07:00|f|19:00)())))
>     (0||6()(
>       (0||0(s|07:00|f|19:00)())))
>     (0||7()())))
>   (0||VIEW(ShowTotal|N)())
>   (0||Exceptions()(
>     (0||0(d|38345)())
>     (0||1(d|38352)())))))
> 



       
____________________________________________________________________________________
Got a little couch potato? 
Check out fun summer activities for kids.
http://search.yahoo.com/search?fr=oni_on_mail&p=summer+activities+for+kids&cs=bz 

From jguni at gmx.de  Wed Jul 18 08:51:47 2007
From: jguni at gmx.de (JG)
Date: Wed, 18 Jul 2007 17:51:47 +0200
Subject: [antlr-interest] Problem with overlapping tokens
Message-ID: <469E3713.70507@gmx.de>

Hi everyone,

I am new to ANTLR 3 and have a grammar where some tokens "overlap"
partially.
I think an excerpt from my grammar explains best, look for the last two
(non-fragment) rules:

**************************************
fragment DIGIT : '0'..'9';

fragment LETTER    
    : 'a'..'z' | 'A'..'Z';

fragment LETTER_OR_DIGIT
    :     LETTER | DIGIT;
   
  
fragment URI_NON_RESERVED_SPECIAL_CHARS
    :     '-' | '.' | UNDERSCORE | '~';
   
fragment URI_RESERVED
    :     URI_MAIN_DELIMS |URI_SUB_DELIMS;

fragment URI_MAIN_DELIMS 
    :     ':' | '/' | '?' | '#' | '[' | ']' | '@';
   
fragment URI_SUB_DELIMS
    :    '!' | '$' | '&' | '\'' |  '('  | ')' | '*'  | '+' | ',' | ';' |
'=';
   
fragment URI_PERCENT_ENCODED
    :    '\%' HEXDIGIT HEXDIGIT;
   

IDENTIFIER
    : (LETTER | '_') (LETTER_OR_DIGIT | '_')*;
   
URI_SCHEME
    :    LETTER (LETTER_OR_DIGIT | '+' | '-' | '.' | ':')* ;

**************************************
So URI_SCHEME subsumes IDENTIFIER. I understand that ANTLR will work
greedily, i.e., will use the Lexer rule that consumes the most input
chars. If the length is identical, then it will use the rule that comes
first in the grammar. Is this correct?
So in the above case, whenever a string ends with "+", "-" etc. I will
get a URI_SCHEME token containing these additional chars. However, in
some places I do not want to recognize URI_SCHEMES (e.g. in expression,
when I add two IDENTIFIERS like this "foo+bar"), so instead of a tokens
IDENTIFIER, PLUS, IDENTIFIER I get a single token URI_SCHEME.

The problem is not limited to these two rules, here are more:

**************************************
HOST    :    (LETTER_OR_DIGIT | URI_NON_RESERVED_SPECIAL_CHARS |
URI_PERCENT_ENCODED | URI_SUB_DELIMS)*;

USERINFO:    ( LETTER_OR_DIGIT | URI_NON_RESERVED_SPECIAL_CHARS |
URI_PERCENT_ENCODED | URI_SUB_DELIMS |':')*
    
PATHCHARS:    ( LETTER_OR_DIGIT | URI_NON_RESERVED_SPECIAL_CHARS |
URI_PERCENT_ENCODED | URI_SUB_DELIMS |':' | '@')*;

FRAGMENT_OR_QUERY:        ( LETTER_OR_DIGIT |
URI_NON_RESERVED_SPECIAL_CHARS | URI_PERCENT_ENCODED | URI_SUB_DELIMS
|':' | '@' | '/' | '?')* ;

**************************************

Each rule is overlapping with or a superset of the previous one, the
"new" chars in the later rules are often delimiters in those places
where the other rules are used (e.g., the ':' delimits the URI_SCHEME,
but is consumed by FRAGMENT_OR_QUERY.
You might have guessed right now that I have a grammar containing
identifiers and URIs. If I use the rules as specified with the parser
rule, the
FRAGMENT_OR_QUERY rule will eat URIs like this completely, instead of
giving me URI_SCHEME, HOST, PATHCHARS: http://somewhere.com/something.

I have tried a few things, but didn't fidn a clean way to resolve this
issue? Any suggestions? Should I move HOST, USERINFO etc. into the
parser rules? Would semantic/syntactic predicates be of help? Or am I
just missing something obvious?

Thanks in advance

Regards

JG


From jonas+antlr at pmhost.de  Wed Jul 18 09:00:53 2007
From: jonas+antlr at pmhost.de (Jonas Tampier)
Date: Wed, 18 Jul 2007 18:00:53 +0200
Subject: [antlr-interest] Why is the parser trying to match the wrong
 rule?
In-Reply-To: <621201.25009.qm@web55905.mail.re3.yahoo.com>
References: <621201.25009.qm@web55905.mail.re3.yahoo.com>
Message-ID: <469E3935.8020804@pmhost.de>

Thank you foor the quick response.
Sadly neither your suggestion nor additionally replacing all occurences
of DIGIT by number yields another result as the one described earlier.

Jonas Tampier

Loring Craymer wrote:
> I suspect that NUMBER hides DIGIT and that '2' is read
> as a NUMBER and so does not parse as part of a day.
>
> Try
> NUMBER : DIGIT (DIGIT)+ ;
> and replacing occurrences of NUMBER with
> number : DIGIT | NUMBER ;
>
> --Loring
>
>   


From a.shneyderman at gmail.com  Wed Jul 18 09:28:13 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 18 Jul 2007 18:28:13 +0200
Subject: [antlr-interest] v3 equivalent of char skip suffix.
Message-ID: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>

what would be the v3 equivalent of for the following v2 rule:

BR  :  '<'! "br" '>'! ;

-- 
Thanks,
Alex.

From rschulz at sonic.net  Wed Jul 18 09:31:20 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 18 Jul 2007 09:31:20 -0700
Subject: [antlr-interest] Caveat on Using Line-Terminated Comments in ANTLR
	Grammar Actions
Message-ID: <200707180931.20611.rschulz@sonic.net>

Hi,

I just got an odd diagnostic from the Java compiler when I ran it on the 
output of a successful ANTLR invocation. The problem came from this 
line of my grammar file:

//  $t = fFF.definiteTerm(fFF.makeDetachedConstant($name.text));

ANTLR expanded $name.text with code that included newlines. Naturally, 
only the first line of the resulting code was commented, leading to a 
syntax error.


Randall Schulz

From jaluber at gmx.de  Wed Jul 18 09:42:00 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 18 Jul 2007 18:42:00 +0200
Subject: [antlr-interest] v3 equivalent of char skip suffix.
In-Reply-To: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
References: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
Message-ID: <469E42D8.8010106@gmx.de>

Alex Shneyderman wrote:
> what would be the v3 equivalent of for the following v2 rule:
> 
> BR  :  '<'! "br" '>'! ;
> 

BR  :  '<'! 'br' '>'! ;

should be correct.

Best regards,
Johannes Luber

From kroepke at classdump.org  Wed Jul 18 09:48:05 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 18 Jul 2007 09:48:05 -0700
Subject: [antlr-interest] v3 equivalent of char skip suffix.
In-Reply-To: <469E42D8.8010106@gmx.de>
References: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
	<469E42D8.8010106@gmx.de>
Message-ID: <F089F511-F924-4B46-AB73-041159604DB4@classdump.org>


On Jul 18, 2007, at 9:42 AM, Johannes Luber wrote:

> Alex Shneyderman wrote:
>> what would be the v3 equivalent of for the following v2 rule:
>>
>> BR  :  '<'! "br" '>'! ;
>>
>
> BR  :  '<'! 'br' '>'! ;
>
> should be correct.

This feature is not yet implemented in v3, sorry. You have to strip  
the characters in an action, via
{ setText(getText().subString(1,getText().length()-1)); }

For tree building it works, but ! in a lexer rule doesn't. It's  
because the text normally doesn't get copied, but refers back to
the character stream.

cheers,
-k

--  
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Wed Jul 18 09:53:48 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Jul 2007 09:53:48 -0700
Subject: [antlr-interest] v3 equivalent of char skip suffix.
In-Reply-To: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
References: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
Message-ID: <3B2A09AA-82F0-4C64-901E-5298316A38D3@cs.usfca.edu>

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461

Ter
On Jul 18, 2007, at 9:28 AM, Alex Shneyderman wrote:

> what would be the v3 equivalent of for the following v2 rule:
>
> BR  :  '<'! "br" '>'! ;
>
> -- 
> Thanks,
> Alex.


From jbb at acm.org  Wed Jul 18 09:54:09 2007
From: jbb at acm.org (jbb at acm.org)
Date: Wed, 18 Jul 2007 12:54:09 -0400
Subject: [antlr-interest] v3 equivalent of char skip suffix.
In-Reply-To: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
	(a.shneyderman@gmail.com)
References: <693a69ba0707180928n5e00cd2cg950e88fed3532186@mail.gmail.com>
Message-ID: <E1IBCmv-00018v-Cl@gecko.home.org>


Alex Shneyderman asked:
>what would be the v3 equivalent of for the following v2 rule:
>
>BR  :  '<'! "br" '>'! ;

please see the wiki lexing FAQ entry which discusses removing quotes:

http://www.antlr.org/wiki/pages/viewpage.action?pageId=1461


or, in this case, simply:

BR : '<br>' { setText("br"); } ;



HTH
   -jbb

From a.shneyderman at gmail.com  Wed Jul 18 10:13:50 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 18 Jul 2007 19:13:50 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem to work.
Message-ID: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>

I have a lexer rule like this:

fragment
DUMMY
returns [int tt=0;]
		: 'a'..'z';

....

When I run antlr on the grammar the corresponding rule that is
generated is like this:

    // $ANTLR start DUMMY
    public final void mDUMMY() throws RecognitionException {
        int tt = 0;;

        try {
            // Disambiguation.g:31:5: ( 'a' .. 'z' )
            // Disambiguation.g:31:5: 'a' .. 'z'
            {
            matchRange('a','z'); if (failed) return tt;

            }

        }
        finally {
        }
    }
    // $ANTLR end DUMMY

Obviously, this has a syntax error.
I run it with 3.0 final, so you guys might have fixed it ... ?

-- 
Thanks,
Alex.

From kroepke at classdump.org  Wed Jul 18 10:17:50 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 18 Jul 2007 10:17:50 -0700
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
Message-ID: <6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>


On Jul 18, 2007, at 10:13 AM, Alex Shneyderman wrote:

> I run it with 3.0 final, so you guys might have fixed it ... ?

AFAIK, lexer rules have no return values. But I might be mistaken.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From a.shneyderman at gmail.com  Wed Jul 18 10:29:24 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Wed, 18 Jul 2007 19:29:24 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
Message-ID: <693a69ba0707181029y5183cdb1n6a50e474b124622b@mail.gmail.com>

They definitely used to exist (the return values) in v2, as
I have it in the grammar I am trying to port to v3 :-)

It is also inconsistent with the docs. Documentation
(I mean the book) does not really state this limitation,
it rather talks about how the rules are similar and differ
only in upper case vs lower case start letter.

So, I'd say it is a bug. But, I guess I will have to find a way
to deal with this if no-can't-do is the answer.

Thanks,
Alex.



On 7/18/07, Kay Roepke <kroepke at classdump.org> wrote:
>
> On Jul 18, 2007, at 10:13 AM, Alex Shneyderman wrote:
>
> > I run it with 3.0 final, so you guys might have fixed it ... ?
>
> AFAIK, lexer rules have no return values. But I might be mistaken.
>
> HTH,
> -k
> --
> Kay R?pke
> http://classdump.org/
>
>
>
>
>


-- 
Thanks,
Alex.

From kroepke at classdump.org  Wed Jul 18 10:37:22 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 18 Jul 2007 10:37:22 -0700
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <693a69ba0707181029y5183cdb1n6a50e474b124622b@mail.gmail.com>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
	<693a69ba0707181029y5183cdb1n6a50e474b124622b@mail.gmail.com>
Message-ID: <504E2D05-B42E-482E-8EDF-F539C67A5058@classdump.org>


On Jul 18, 2007, at 10:29 AM, Alex Shneyderman wrote:

> They definitely used to exist (the return values) in v2, as
> I have it in the grammar I am trying to port to v3 :-)

Yeah, I meant v3.
I have had a comment in the ObjC target stating that we do not have  
lexer rule returns.
So I guess they got axed at some point in time.

> It is also inconsistent with the docs. Documentation
> (I mean the book) does not really state this limitation,
> it rather talks about how the rules are similar and differ
> only in upper case vs lower case start letter.
>
> So, I'd say it is a bug. But, I guess I will have to find a way
> to deal with this if no-can't-do is the answer.

At what points are you having return values? protected (=fragment)  
rules?
For "normal" lexer rules that produce tokens return values don't much  
sense, or
am I missing something? Where would the last return value go, as the  
lexer rules
are called from nextToken() and thus are not accessible to anyone,  
really.
Or are you calling the lexer rules directly for some reason?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From jaluber at gmx.de  Wed Jul 18 10:31:57 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 18 Jul 2007 19:31:57 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem
	to	work.
In-Reply-To: <6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
Message-ID: <469E4E8D.7000301@gmx.de>

Kay Roepke wrote:
> 
> On Jul 18, 2007, at 10:13 AM, Alex Shneyderman wrote:
> 
>> I run it with 3.0 final, so you guys might have fixed it ... ?
> 
> AFAIK, lexer rules have no return values. But I might be mistaken.
> 
> HTH,
> -k

Only tree and parser rules may include return values. The book states
this on page 86. But it should be possible to use scopes for this
purpose instead.

Best regards,
Johannes Luber

From kverma at yahoo.com  Wed Jul 18 11:09:35 2007
From: kverma at yahoo.com (Kamal Verma)
Date: Wed, 18 Jul 2007 11:09:35 -0700 (PDT)
Subject: [antlr-interest] C# lexer code generation problem
Message-ID: <876954.78238.qm@web54602.mail.re2.yahoo.com>

Following lexer rule or fragment,

SIMPLE_RULE
    :    '\\\"'
    ;

translates into C# code like,

:
Match("\\\\"");
:
-- 
which is incorrect; 

Any ideas other than manually correcting the generated files.

-Kamal




       
____________________________________________________________________________________
Get the Yahoo! toolbar and be alerted to new email wherever you're surfing.
http://new.toolbar.yahoo.com/toolbar/features/mail/index.php
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/a239cf26/attachment-0001.html 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: test.g
Type: application/octet-stream
Size: 80 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/a239cf26/attachment-0001.obj 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: testLexer.cs
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/a239cf26/attachment-0001.pl 

From rschulz at sonic.net  Wed Jul 18 11:34:04 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 18 Jul 2007 11:34:04 -0700
Subject: [antlr-interest]
	=?iso-8859-1?q?Return_types_on_lexer_rules_do_no?=
	=?iso-8859-1?q?t_seem_to=09work=2E?=
In-Reply-To: <469E4E8D.7000301@gmx.de>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
	<469E4E8D.7000301@gmx.de>
Message-ID: <200707181134.04229.rschulz@sonic.net>

On Wednesday 18 July 2007 10:31, Johannes Luber wrote:
> ...
>
> Only tree and parser rules may include return values. The book states
> this on page 86. ...
>
> But it should be possible to use scopes for this purpose instead.

How is that? Lexical analysis is all done before parsing begins.


> Best regards,
> Johannes Luber


Randall Schulz

From jimi at temporal-wave.com  Wed Jul 18 12:26:03 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2007 12:26:03 -0700
Subject: [antlr-interest] Return types on lexer rules do not seem towork.
In-Reply-To: <6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
Message-ID: <051466DAA0D608439E196797955018D76EE6@wavemachine.temporal-wave.com>

You are not mistaken. ANTLR3 lexers are simpler, leaner, meaner beasts and the return types and so on are not supported. 

Alex: Rather than bemoan this though, perhaps we can see what the intended use of the return types is?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kay Roepke
> Sent: Wednesday, July 18, 2007 10:18 AM
> To: Alex Shneyderman
> Cc: ANTLR Interest
> Subject: Re: [antlr-interest] Return types on lexer rules do not seem
> towork.
> 
> 
> On Jul 18, 2007, at 10:13 AM, Alex Shneyderman wrote:
> 
> > I run it with 3.0 final, so you guys might have fixed it ... ?
> 
> AFAIK, lexer rules have no return values. But I might be mistaken.
> 
> HTH,
> -k
> --
> Kay R?pke
> http://classdump.org/
> 
> 
> 


From jimi at temporal-wave.com  Wed Jul 18 12:28:53 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2007 12:28:53 -0700
Subject: [antlr-interest] C# lexer code generation problem
In-Reply-To: <876954.78238.qm@web54602.mail.re2.yahoo.com>
References: <876954.78238.qm@web54602.mail.re2.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76EE7@wavemachine.temporal-wave.com>

It looks like this needs fixing the c# target .java file, and I am sure
it will be. You might try the following in the short term:

 

RULE: '\\' '\"' ; 

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Kamal Verma
Sent: Wednesday, July 18, 2007 11:10 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] C# lexer code generation problem

 

Following lexer rule or fragment,

SIMPLE_RULE
    :    '\\\"'
    ;

translates into C# code like,

:
Match("\\\\"");
:
-- 
which is incorrect; 

Any ideas other than manually correcting the generated files.

-Kamal

 

________________________________

Be a PS3 game guru.
Get your game face on with the latest PS3 news and previews at Yahoo!
Games. <http://us.rd.yahoo.com/evt=49936/*http:/videogames.yahoo.com> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/be454b06/attachment.html 

From easjolly at ix.netcom.com  Wed Jul 18 12:31:22 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Wed, 18 Jul 2007 13:31:22 -0600
Subject: [antlr-interest] Can't see the wood (@init and @after)
Message-ID: <E1IBFEQ-0001AG-Lm@elasmtp-dupuy.atl.sa.earthlink.net>

I cannot reproduce your claim.  (I tried because what you wrote didn't make
sense to me.)

I suggest you try this with as simple a grammar as possible and look at the
code in the generated parser.  Something doesn't add up.

Good luck!



From jaluber at gmx.de  Wed Jul 18 12:56:52 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 18 Jul 2007 21:56:52 +0200
Subject: [antlr-interest] C# lexer code generation problem
In-Reply-To: <051466DAA0D608439E196797955018D76EE7@wavemachine.temporal-wave.com>
References: <876954.78238.qm@web54602.mail.re2.yahoo.com>
	<051466DAA0D608439E196797955018D76EE7@wavemachine.temporal-wave.com>
Message-ID: <469E7084.7080306@gmx.de>

Jim Idle wrote:
> It looks like this needs fixing the c# target .java file, and I am sure
> it will be. You might try the following in the short term:
> 
>  
> 
> RULE: ?\\? ?\?? ;
> 

This error appears also while generating with the Java target - and only
with fragment rules. Could it be that it is a copy and paste error?

Best regards,
Johannes Luber

> 
> *From:* antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] *On Behalf Of *Kamal Verma
> *Sent:* Wednesday, July 18, 2007 11:10 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] C# lexer code generation problem
> 
>  
> 
> Following lexer rule or fragment,
> 
> SIMPLE_RULE
>     :    '\\\"'
>     ;
> 
> translates into C# code like,
> 
> :
> Match("\\\\"");
> :
> -- 
> which is incorrect;
> 
> Any ideas other than manually correcting the generated files.
> 
> -Kamal
> 
>  
> 
> ------------------------------------------------------------------------
> 
> Be a PS3 game guru.
> Get your game face on with the latest PS3 news and previews at Yahoo!
> Games. <http://us.rd.yahoo.com/evt=49936/*http:/videogames.yahoo.com>
> 


From jaluber at gmx.de  Wed Jul 18 13:11:56 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 18 Jul 2007 22:11:56 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <200707181134.04229.rschulz@sonic.net>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>	<469E4E8D.7000301@gmx.de>
	<200707181134.04229.rschulz@sonic.net>
Message-ID: <469E740C.5010306@gmx.de>

Randall R Schulz wrote:
> On Wednesday 18 July 2007 10:31, Johannes Luber wrote:
>> ...
>>
>> Only tree and parser rules may include return values. The book states
>> this on page 86. ...
>>
>> But it should be possible to use scopes for this purpose instead.
> 
> How is that? Lexical analysis is all done before parsing begins.

I didn't use scopes to transfer information between parser and lexer
rules, so I don't know of this would be possible or not. But within the
lexer the appropriate code was generated - although untested yet. Every
time I seem to get closer to finish my side project, a new problem turns
up... At least I need only to rework the data storage side and only the
string templates before I can turn my attention back to the C# grammar.

Best regards,
Johannes Luber

From kroepke at classdump.org  Wed Jul 18 13:23:55 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 18 Jul 2007 13:23:55 -0700
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <469E740C.5010306@gmx.de>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>	<469E4E8D.7000301@gmx.de>
	<200707181134.04229.rschulz@sonic.net> <469E740C.5010306@gmx.de>
Message-ID: <66800649-59E8-4092-A8C7-FF14219960B9@classdump.org>


On Jul 18, 2007, at 1:11 PM, Johannes Luber wrote:

> Randall R Schulz wrote:
>> On Wednesday 18 July 2007 10:31, Johannes Luber wrote:
>>> ...
>>>
>>> Only tree and parser rules may include return values. The book  
>>> states
>>> this on page 86. ...
>>>
>>> But it should be possible to use scopes for this purpose instead.
>>
>> How is that? Lexical analysis is all done before parsing begins.
>
> I didn't use scopes to transfer information between parser and lexer
> rules, so I don't know of this would be possible or not. But within  
> the
> lexer the appropriate code was generated - although untested yet.  
> Every
> time I seem to get closer to finish my side project, a new problem  
> turns
> up... At least I need only to rework the data storage side and only  
> the
> string templates before I can turn my attention back to the C#  
> grammar.

Scopes do work in lexers. Apart from probably not being very useful,  
since
lexer rules normally don't recurse that much, it's ok.

See this grammar:

lexer grammar TestScope;

scope Scope {
	int foo;
}

TOKEN
scope Scope;
	:	('A' {$Scope::foo = 0;} |'B' {$Scope::foo = 1;}) SUBFOO 'B'
	;
	
fragment	
SUBFOO
	:	({$Scope::foo > 0}? 'SUB') 'FOO'
	;
	

Looking at the generated code, everthings cool. This won't enable you  
to pass stuff between
the parser and the lexer, though.
Don't ask me how this would behave in a combined grammar (I don't  
wanna know it anyway...;))

What's the reason for doing this? Is there a total requirement to  
pass stuff between lexical rules?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From jonas+antlr at pmhost.de  Wed Jul 18 14:21:45 2007
From: jonas+antlr at pmhost.de (Jonas Tampier)
Date: Wed, 18 Jul 2007 23:21:45 +0200
Subject: [antlr-interest] Why is the parser trying to match the wrong
 rule?
In-Reply-To: <779317.8950.qm@web55907.mail.re3.yahoo.com>
References: <779317.8950.qm@web55907.mail.re3.yahoo.com>
Message-ID: <469E8469.30606@pmhost.de>

That solved the problem. Thank you very much.

Best Regards
Jonas Tampier

Loring Craymer wrote:
> Not a problem.  After taking a second look, you need
> to add a "PARRIGHT" to day--the closing parenthesis is
> matched by the one in daysOfWeek instead of day.
>
> --Loring
>   

From jaluber at gmx.de  Wed Jul 18 15:18:31 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Jul 2007 00:18:31 +0200
Subject: [antlr-interest] C# target problems and suggestions
Message-ID: <469E91B7.8020707@gmx.de>

Hello!

I've stumbled upon some difficulties while using the debug option. The
first it, that the debug parser for tree grammars doesn't expose the
constructor with the port. The second is that the member variable dbg is
reset in all constructors to null, even in the constructor, which is
supposed to set this variable. (Without access to the source code I'd
never found that out.) Considering, that both in the normal parser and
in the tree parser this variable is accessed a few 100 times, it is
clear that this behavior is simple unacceptable.

This could be prevented, if instead null the BlankDebugListener would be
used. Another bug seems to lurk here in DebugTreeParser.cs:

"public IDebugEventListener DebugListener
        {
            get
            {
                return this.dbg;
            }
            set
            {
                if (base.input is DebugTreeNodeStream)
                {
                    ((DebugTreeNodeStream)
base.input).SetDebugListener(this.dbg);
                }
                this.dbg = value;
            }
        }
"

It seems, that the setter should use "((DebugTreeNodeStream)
base.input).SetDebugListener(*value*);" instead, because this.dbg has
still the previous value there.

Another suggestion: Certain constructors and properties are only
available in debug mode. This makes it difficult to use one single
source file, unless one uses the preprocessor. Instead forcing the
grammar authors to employ this technique (and to regenerate the files
with different options) how about putting everything debug specific
between #ifdefs?

And now to some suggestions for Terence: While improving the error
reporting, it would be nice if the tree parser would say, if it
encounters an unexpected token, what kind of token it wants to see and
what kind of token it actually saw, instead simply saying: "Not the
right token encountered."

Also I'd be interested in allowing regions within regions. I wanted to
insert a snippet in a constructor, which was inserted by a region itself.

Best regards,
Johannes Luber

From parrt at cs.usfca.edu  Wed Jul 18 15:19:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Jul 2007 15:19:53 -0700
Subject: [antlr-interest] On the reuse of grammars
Message-ID: <5AA45C2B-0AA1-4BEB-945F-CB19E818B74D@cs.usfca.edu>

Hi,

Added blog entry (note blogs entries are now being added to the wiki):

http://www.antlr.org/wiki/display/~admin/2007/07/18/On+the+reuse+of 
+grammars

Ter

From parrt at cs.usfca.edu  Wed Jul 18 15:30:32 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Jul 2007 15:30:32 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <62BABE024B7C074E9194E9727A41897901383325@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com><13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu><62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com><62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com>
	<A89AB3EB-3452-4E9B-BE9D-6CCEC6A08BB0@cs.usfca.edu>
	<62BABE024B7C074E9194E9727A41897901383325@dvs-sms-mail01.digi.com>
Message-ID: <DDD43CD1-E213-420D-835E-A6676035588E@cs.usfca.edu>


On Jul 16, 2007, at 2:12 PM, Hardy, Stephen wrote:

> Terence,
>
> I'm not sure I entirely understand what you mean by "one template
> enclosing itself", however based on examination of the FAQ and other
> sources, these recursion problems can only arise when constructing and
> using templates in java code, where the code can obviously set up
> circular references via setting of attributes.
>
> My tree grammar template rewrite rules, on the other hand, are  
> entirely
> constructed using in-line (anonymous) templates -- look mum, no  
> java --
> and hence if there are any circular references then they are  
> created by
> the magic of ANTLR.
>
> If there is a recursive rule (say, compound statement in a C grammar)
> then nested compound statements get their own instance of the  
> template,
> hence there can be no circular references at the java "pointer" level?
> If I am wrong, would you kindly provide a small counterexample?
>
> With respect, I would say that this potential for stack overflow
> exceptions in an ANTLR-generated parser with no "open code" is a  
> serious
> bug, especially if the bug is only revealed at run-time.

Well, this

ds={$declaration_specifiers.st}

is not exactly ANTLR code...you can refer to whatever you want... ;)

>> Those refs are what attributes are used in that template instance.
>
> There is something fishy going on.  If this is the list of attributes,
> then the given trace did not make sense.

You can easily create a template that includes itself using  
references to prior attributes and so on.	I'm afraid that ST is  
probably catching a correct cycle in your ST containment hierarchy.  
Is always caught my problems correctly.

Ter

From jaluber at gmx.de  Wed Jul 18 15:33:05 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Jul 2007 00:33:05 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <66800649-59E8-4092-A8C7-FF14219960B9@classdump.org>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>	<469E4E8D.7000301@gmx.de>
	<200707181134.04229.rschulz@sonic.net> <469E740C.5010306@gmx.de>
	<66800649-59E8-4092-A8C7-FF14219960B9@classdump.org>
Message-ID: <469E9521.106@gmx.de>

Kay Roepke wrote:
> 
> Scopes do work in lexers. Apart from probably not being very useful, since
> lexer rules normally don't recurse that much, it's ok.
> 
> See this grammar:
> 
....
>     
> 
> Looking at the generated code, everthings cool. This won't enable you to
> pass stuff between
> the parser and the lexer, though.
> Don't ask me how this would behave in a combined grammar (I don't wanna
> know it anyway...;))
> 
> What's the reason for doing this? Is there a total requirement to pass
> stuff between lexical rules?

Not sure, what you mean with "total requirement", but I had to pass down
the Unicode character class and use it in a predicate. Due to hoisting
the usage of parameters was out. Possibly the hoisting will force me to
move the scope variable setting upwards, but I haven't checked this yet.
Below is the grammar, if you're interested.

Best regards,
Johannes Luber


fragment IDENTIFIER_OR_KEYWORD
	:	IDENTIFIER_START_CHARACTER IDENTIFIER_PART_CHARACTER*
	;

fragment IDENTIFIER_START_CHARACTER
options{backtrack=true; memoize=true;}
	:	LETTER_CHARACTER
	|	'_' | '\\u005F' | '\\U0000005F' // (the underscore character U+005F)
in every variant
	;
	
fragment IDENTIFIER_PART_CHARACTER
options{backtrack=true; memoize=true;}
	:	LETTER_CHARACTER
	|	DECIMAL_DIGIT_CHARACTER
	|	CONNECTING_CHARACTER
	|	COMBINING_CHARACTER
	|	FORMATTING_CHARACTER
	;
	
fragment LETTER_CHARACTER // A Unicode character of classes Lu, Ll, Lt,
Lm, Lo, or Nl (possibly encoded)
options{backtrack=true; memoize=true;}
scope UnicodeClassScope;
	:	UNICODE_CLASS_Lu
	|	UNICODE_CLASS_Ll
	|	UNICODE_CLASS_Lt
	|	UNICODE_CLASS_Lm
	|	UNICODE_CLASS_Lo
	|	UNICODE_CLASS_Nl
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.UppercaseLetter;
} UNICODE_ESCAPE_SEQUENCE
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.LowercaseLetter;
} UNICODE_ESCAPE_SEQUENCE
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.TitlecaseLetter;
} UNICODE_ESCAPE_SEQUENCE
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.ModifierLetter;
} UNICODE_ESCAPE_SEQUENCE
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.OtherLetter; }
UNICODE_ESCAPE_SEQUENCE
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.LetterNumber; }
UNICODE_ESCAPE_SEQUENCE
	;

// A Unicode character of classes Mn or Mc (possibly encoded)
fragment COMBINING_CHARACTER
options{backtrack=true; memoize=true;}
scope UnicodeClassScope;
	:	UNICODE_CLASS_Mn
	|	UNICODE_CLASS_Mc
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.NonSpacingMark;
} UNICODE_ESCAPE_SEQUENCE
	|	{ $UnicodeClassScope::allowedClass =
UnicodeCategory.SpacingCombiningMark; } UNICODE_ESCAPE_SEQUENCE
	;

// A Unicode character of the class Nd (possibly encoded)
fragment DECIMAL_DIGIT_CHARACTER
scope UnicodeClassScope;
	:	UNICODE_CLASS_Nd
	|	{ $UnicodeClassScope::allowedClass =
UnicodeCategory.DecimalDigitNumber; } UNICODE_ESCAPE_SEQUENCE
	;

// A Unicode character of the class Pc (possibly encoded)	
fragment CONNECTING_CHARACTER
scope UnicodeClassScope;
	:	UNICODE_CLASS_Pc
	|	{ $UnicodeClassScope::allowedClass =
UnicodeCategory.ConnectorPunctuation; } UNICODE_ESCAPE_SEQUENCE
	;

// A Unicode character of the class Cf (possibly encoded)
fragment FORMATTING_CHARACTER
scope UnicodeClassScope;
	:	UNICODE_CLASS_Cf
	|	{ $UnicodeClassScope::allowedClass = UnicodeCategory.Format; }
UNICODE_ESCAPE_SEQUENCE
	;

// Restricts the unicode escape sequence to certain unicode character
classes
fragment UNICODE_ESCAPE_SEQUENCE
scope UnicodeClassScope;
	:	'\\u' { Char.GetUnicodeCategory((char)
ConvertHexCharArrayIntoInt32(new char[]{
		(char) input.LT(1), (char) input.LT(2), (char) input.LT(3), (char)
input.LT(4)})) == $UnicodeClassScope::allowedClass }?
		HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
	|	'\\U' {
Char.GetUnicodeCategory(TransformUtf32ToUtf16(ConvertHexCharArrayIntoInt32(new
char[]{
		(char) input.LT(1), (char) input.LT(2), (char) input.LT(3), (char)
input.LT(4),
		(char) input.LT(5), (char) input.LT(6), (char) input.LT(7), (char)
input.LT(8)})), 0) == $UnicodeClassScope::allowedClass }?
		HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
HEX_DIGIT
	;

From kroepke at classdump.org  Wed Jul 18 15:40:09 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 18 Jul 2007 15:40:09 -0700
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <469E9521.106@gmx.de>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>	<469E4E8D.7000301@gmx.de>
	<200707181134.04229.rschulz@sonic.net> <469E740C.5010306@gmx.de>
	<66800649-59E8-4092-A8C7-FF14219960B9@classdump.org>
	<469E9521.106@gmx.de>
Message-ID: <8A066E45-3307-4BB9-9F92-47551EA27544@classdump.org>


On Jul 18, 2007, at 3:33 PM, Johannes Luber wrote:

> Not sure, what you mean with "total requirement", but I had to pass  
> down
> the Unicode character class and use it in a predicate. Due to hoisting
> the usage of parameters was out. Possibly the hoisting will force  
> me to
> move the scope variable setting upwards, but I haven't checked this  
> yet.
> Below is the grammar, if you're interested.

cool. so, does this mean scopes work for you? I think there shouldn't be
necessity to use return values anymore, now that we have scopes.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Wed Jul 18 15:47:53 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 18 Jul 2007 15:47:53 -0700
Subject: [antlr-interest] update ANTLR v3 grammar and added Tree grammar
Message-ID: <A25C457D-2BDC-48DD-BCF1-0FFE3985C201@cs.usfca.edu>

http://www.antlr.org/grammar/ANTLR

The tree grammar requires some upcoming fixes.  ANTLRWorks 1.1 will  
be out this weekend with these fixes for Java target.

Ter

From jaluber at gmx.de  Wed Jul 18 15:55:10 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Jul 2007 00:55:10 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <8A066E45-3307-4BB9-9F92-47551EA27544@classdump.org>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>	<469E4E8D.7000301@gmx.de>
	<200707181134.04229.rschulz@sonic.net> <469E740C.5010306@gmx.de>
	<66800649-59E8-4092-A8C7-FF14219960B9@classdump.org>
	<469E9521.106@gmx.de>
	<8A066E45-3307-4BB9-9F92-47551EA27544@classdump.org>
Message-ID: <469E9A4E.603@gmx.de>

Kay Roepke wrote:
> 
 > cool. so, does this mean scopes work for you? I think there shouldn't be
> necessity to use return values anymore, now that we have scopes.

You mean in the general sense? Yes, scopes work for me, although it
isn't clearly described somewhere, which rules require scope access. For
example, the XML parsing example on the wiki doesn't work, if the rule
with no scope usage has not access to the scope.

Best regards,
Johannes Luber

From aliaazimi at yahoo.com  Wed Jul 18 18:02:15 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Wed, 18 Jul 2007 18:02:15 -0700 (PDT)
Subject: [antlr-interest] Rewrite rule ambiguity(newbie)
Message-ID: <743064.96781.qm@web58101.mail.re3.yahoo.com>

Hi,
   
  Thank you very much in advance.
   
  I have a rule which causes some errors (e.g. outOfMemory errors). The rule is:
   
   r :  'block'  q?  b COMMA
      ( c  |  e )*  (   f  |  g ) ?
      'endblock' ( q ?  b ) ? COMMA
      ;
   
  Could you please give your opinion as to whether the following two options are correct?
   
   
  OptionA:
   
  r :  'block'  q?  b COMMA
   
  (L1^  c*  f? |L2^  c* g? |L3^ e* f? |L4^ e* g?) 
   
   'endblock' q ?  b  ? COMMA
    ;
   
   
   
  OptionB:
   
  r  :  r1 | r2
      ;
   
  r1 : 'block'  q1=q?  b1=b COMMA  c*  (  f?  'endblock'  (q2=q? b2=b)? COMMA                    
   
  ->   ^( 'block'    $q1?    $b1   c*    f?      'endblock'      (BLOCK   $q2?   $b2)? )
                                              
                                                                 |  g? 'endblock' ( q3=q?  b3=b)? COMMA 
   
  ->   ^(  'block'  $q1?     $b1    c*    g?     'endblock'      (BLOCK   $q3?   $b3)? )
                                                                 );
   
   
  r2  :  'block' q1=q?  b1=b  COMMA e* ( f?   'endblock'  (q4=q? b4=b)? COMMA   
       
  ->   ^(  'block'   $q1?    $b1    e*   f?     'endblock'       (BLOCK   $q4?    $b4)? )
                                              
                                                                  | g?  'endblock'  (q5=q? b5=b)? COMMA
   
  ->   ^(   'block'   $q11?   $b11     e*  g?     'endblock'        (BLOCK   $q5?    $b5)?)
   
                                                              );
   
  Very much appreciated.
  Best regards,
   
  Al
                              
       
---------------------------------
Choose the right car based on your needs.  Check out Yahoo! Autos new Car Finder tool.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/7b104d39/attachment-0001.html 

From ssiddiqu at yahoo.com  Wed Jul 18 18:03:45 2007
From: ssiddiqu at yahoo.com (sarim)
Date: Wed, 18 Jul 2007 18:03:45 -0700 (PDT)
Subject: [antlr-interest] String template question..
Message-ID: <339688.74972.qm@web52508.mail.re2.yahoo.com>

Hi,
  I am new to StringTemplate. I have the following template:
  ************************
  group RuleTemplate;
fulldef(package,import,rulename) ::= <<$packagedef()$
$importdef(); separator="\n"$
$rulestart()$
>>
packagedef()::="package $package$"
importdef()::=<<
import $import$
>>
rulestart()::="rule $rulename$ "
  ********************
  Here is how I am calling it:
  String fileName="RuleTemplate.st";
  try
  {
  StringTemplateGroup group = new StringTemplateGroup(new BufferedReader( new FileReader(new File (fileName ))),DefaultTemplateLexer.class);
  StringTemplate query = group.getInstanceOf("fulldef");
  query.setAttribute("package","org.com");
  query.setAttribute("import","java.util.*");
  query.setAttribute("import","java.io.*");
  query.setAttribute("rulename","myfirstrule");
  System.out.println(query);
  ....
  *************************************
  There are no errors and I see the following output:
  ***********************************
  package org.com
  import java.util.*java.io.*
  rule myfirstrule 
  *****************************
  I want to get:
   
  package org.com
  import java.util.*
  import java.io.*
  rule myfirstrule 
   
  How should I change my template so that I can get the desired output? Why is the "separator" not taking effect?
  Thanks.
  --Sarim.

       
---------------------------------
Boardwalk for $500? In 2007? Ha! 
Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/33f86648/attachment.html 

From amol_bhagavat at yahoo.co.uk  Wed Jul 18 19:02:34 2007
From: amol_bhagavat at yahoo.co.uk (amol Bhagavat)
Date: Thu, 19 Jul 2007 03:02:34 +0100 (BST)
Subject: [antlr-interest] How to use ANTLR to find function pointers
In-Reply-To: <469DD2A1.2010007@gmx.de>
Message-ID: <466908.53302.qm@web23207.mail.ird.yahoo.com>

Ok if i get a proper c grammer, i can easily find out function pointers in that ...
  Is it possible to find the different assignments done to function pointers in source code?
  
Johannes Luber <jaluber at gmx.de> wrote:
  amol Bhagavat wrote:
> Hi,
> 
> I am developing a tool where i need to parse a c project code and find
> out all occurances of function pointers along with all assignments. Also
> i need to create a output where i can specify the files where
> the function pointers and functions are defined.While finding function
> pointers i also need to aware of variable scope, since there can be
> occurance of local variable with same name.
> I am very new to ANTLR ...
> Please let me know can i use ANTLR ? how i can use it?
> My intention is to find out all the possibilities of function call
> through a function pointer.
> 
> Thanks in advance...
> 
> Regards,
> Amol

At first, I would recommend to buy the ANTLR book
. It is really
helpful, especially, because it contains an example, on which you can
build upon. Alternatively you can look at the source code of the CMinus
example on the same website. That's for understanding only. You'd need a
C grammar, too. Maybe it has been posted one on the grammar site
(somewhere on antlr.org).

On your special I would then generate an AST containing only the
functions and function pointers and then a tree grammar, which can
output the required information. Sorry I can't be more specific at this
stage!

Best regards,
Johannes Luber


       
---------------------------------
 Yahoo! Mail is the world's favourite email. Don't settle for less, sign up for your freeaccount today.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/c442a1a9/attachment.html 

From dirty at apple.com  Wed Jul 18 19:24:15 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Wed, 18 Jul 2007 19:24:15 -0700
Subject: [antlr-interest] Getting token source within tree walker?
Message-ID: <CE809A41-3AE0-458B-A128-1610ED593173@apple.com>

I'm doing some input validation and error checking in my parser.  I'd  
like to move it to my tree walker, but I'm having some trouble: If I  
get an error, in addition to printing out the line number, I need to  
print out the input file name as well.

 From the parser, I can access the input stream associated with a  
token, and get the file name from there.

Is it possible to do something similar with the tree elements we have  
in a tree walker?

Cameron Esfahani
dirty at apple.com

"In the elder days of Art, Builders wrought with greatest care each  
minute and unseen part; For the gods see everywhere."

"The Builders", H. W. Longfellow



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/380f647e/attachment.html 

From matthew.j.diehl at intel.com  Wed Jul 18 20:22:15 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 18 Jul 2007 20:22:15 -0700
Subject: [antlr-interest] Getting token source within tree walker?
In-Reply-To: <CE809A41-3AE0-458B-A128-1610ED593173@apple.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C2024A6BCA@orsmsx417.amr.corp.intel.com>

> I'm doing some input validation and error checking in my 
> parser.  I'd like to move it to my tree walker, but I'm 
> having some trouble: If I get an error, in addition to 
> printing out the line number, I need to print out the input 
> file name as well. 
> 
> From the parser, I can access the input stream associated 
> with a token, and get the file name from there.
> 

I just send in the file name into the tree (along with my reserved words
dictionary):

XXXWalker walker = new XXXWalker (nodes);
XXXWalker.design_top_return r2 =
walker.design_top(fileName,reservedWords);

and then access it by:
design_file[String fileName, Set rw]
scope {String fileName;}
@init {$design_file::fileName=fileName;}
  : stuff stuff
  ;

Matt

From antlr-list at arizona-software.ch  Wed Jul 18 20:41:40 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 18 Jul 2007 20:41:40 -0700
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not
	visible	anymore...
In-Reply-To: <469DB337.7050008@gmx.de>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>	<469CDB1C.6080101@gmx.de>
	<469CDEFC.3080106@gmx.de>
	<200707170826.35969.rschulz@sonic.net> <469CF664.80404@gmx.de>
	<0FE19AA8-C439-42B2-A6F0-F069371EA381@arizona-software.ch>
	<469DB337.7050008@gmx.de>
Message-ID: <B832E3BB-F9CA-4726-B97D-37F61620AB33@arizona-software.ch>

Thanks. I'm wondering if this is a Swing issue on Vista or really an  
AW bug. I will try to see what I can do...

Jean

On Jul 17, 2007, at 11:29 PM, Ruth Karl wrote:

> Hi Jean,
>
> here goes your screenshot - to reproduce it just change the size of  
> the file window pushing its corner at southeast (if you know what I  
> mean - I am not right sure how to put it in proper English)
> Greetings,
> Ruth
>
> <moz-screenshot-2.jpg>
>
>
> Jean Bovet schrieb:
>> That's really surprising as I cannot reproduce this behavior. Can  
>> you send me a screenshot to see what it looks like? Is it always  
>> reproducible?
>>
>> Regards,
>>
>> Jean
>>
>> On Jul 17, 2007, at 10:03 AM, Ruth Karl wrote:
>>
>>> Sure, the problem is, that when you change the size of the  
>>> AnTLRWorks file frame, the tabs in the lower part simply  
>>> disappear instead of being adapted to the new size...
>>> Stupid me, that I did not try this out before, but it is not  
>>> really what I would have expected ;-)
>>> Cheers,
>>> Ruth
>>>
>>> Randall R Schulz schrieb:
>>>> Ruth,
>>>>
>>>> On Tuesday 17 July 2007 08:23, Ruth Karl wrote:
>>>>
>>>>> Fixed! Thanks.
>>>>>
>>>>
>>>> Perhaps you could tell us what was wrong and how you fixed it so  
>>>> others who come looking at the list archive can help themselves  
>>>> rather than posting again.
>>>>
>>>> Thanks.
>>>>
>>>>
>>>>
>>>>> Ruth Karl schrieb:
>>>>>
>>>>>> Hello AnTLRWorkers,
>>>>>>
>>>>>> after an AnTLRWorks crash I do not get the interpreter GUI  
>>>>>> anymore
>>>>>> when I open the IDE. Replacing the jar does not help, so I guess
>>>>>> there must be a file containing some infos about the last
>>>>>> configuration that I should delete/correct- is that so? If it is:
>>>>>> how is it called and where should I look for it? I can not  
>>>>>> find it
>>>>>> in the AnTLRWorks directory...
>>>>>> Otherwise: any other suggestion, why this could happen or how to
>>>>>> fix it? (I am working on Windows Vista BE, Java version is
>>>>>> 1.6.0_01-b06).
>>>>>>
>>>>
>>>>
>>>>
>>>> Randall Schulz
>>>>
>>>>
>>


From antlr-list at arizona-software.ch  Wed Jul 18 20:42:25 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 18 Jul 2007 20:42:25 -0700
Subject: [antlr-interest] AnTLRWorks: Interpreter GUI not visible
	anymore...
In-Reply-To: <dea571e70707180621i27a8512bi1849075f30b7794e@mail.gmail.com>
References: <9B190091-611F-4916-B139-5089D426C6EB@apple.com>
	<469CDB1C.6080101@gmx.de> <469CDEFC.3080106@gmx.de>
	<200707170826.35969.rschulz@sonic.net> <469CF664.80404@gmx.de>
	<0FE19AA8-C439-42B2-A6F0-F069371EA381@arizona-software.ch>
	<dea571e70707180621i27a8512bi1849075f30b7794e@mail.gmail.com>
Message-ID: <0B639FE0-DEE4-44E8-89F6-B5F821751A5D@arizona-software.ch>

Interesting. Can you send a screen shot after it went blank to see  
what it looks like? Also, could you send the grammar and the input  
you are using so I can try to reproduce the issue?

Thanks a lot.

Jean

On Jul 18, 2007, at 6:21 AM, Frank Smith wrote:

> Actually, Jean, my interpreter window goes blank all the time, but  
> I think it might be a separate issue from the one described in this  
> thread.  The problem I have is that when I run the interpreter  
> once, it runs perfectly.  However, about 70% of the time, if I  
> tweak the input or fix & regenerate the .g and try to run the  
> interpreter again all of the interpreter panels disappear.
>
> I am running at least java 1.5 in windows XP sp 2.  Not sure what  
> else would be relevant info.  My project partner who also runs  
> ANTLRWorks has had that problem, but far far less frequently.  Let  
> me know if you need help bug stomping.
>
> Best regards,
>      Frank
>
> On 7/18/07, Jean Bovet <antlr-list at arizona-software.ch> wrote:
> That's really surprising as I cannot reproduce this behavior. Can you
> send me a screenshot to see what it looks like? Is it always
> reproducible?
>
> Regards,
>
> Jean
>
> On Jul 17, 2007, at 10:03 AM, Ruth Karl wrote:
>
> > Sure, the problem is, that when you change the size of the
> > AnTLRWorks file frame, the tabs in the lower part simply disappear
> > instead of being adapted to the new size...
> > Stupid me, that I did not try this out before, but it is not really
> > what I would have expected ;-)
> > Cheers,
> > Ruth
> >
> > Randall R Schulz schrieb:
> >> Ruth,
> >>
> >> On Tuesday 17 July 2007 08:23, Ruth Karl wrote:
> >>
> >>> Fixed! Thanks.
> >>>
> >>
> >> Perhaps you could tell us what was wrong and how you fixed it so
> >> others who come looking at the list archive can help themselves
> >> rather than posting again.
> >>
> >> Thanks.
> >>
> >>
> >>
> >>> Ruth Karl schrieb:
> >>>
> >>>> Hello AnTLRWorkers,
> >>>>
> >>>> after an AnTLRWorks crash I do not get the interpreter GUI  
> anymore
> >>>> when I open the IDE. Replacing the jar does not help, so I guess
> >>>> there must be a file containing some infos about the last
> >>>> configuration that I should delete/correct- is that so? If it is:
> >>>> how is it called and where should I look for it? I can not  
> find it
> >>>> in the AnTLRWorks directory...
> >>>> Otherwise: any other suggestion, why this could happen or how to
> >>>> fix it? (I am working on Windows Vista BE, Java version is
> >>>> 1.6.0_01-b06).
> >>>>
> >>
> >>
> >>
> >> Randall Schulz
> >>
> >>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070718/4560b1aa/attachment-0001.html 

From antlr-list at arizona-software.ch  Wed Jul 18 20:48:59 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Wed, 18 Jul 2007 20:48:59 -0700
Subject: [antlr-interest] mysterious bug with ANTLR Works 1.0.2
In-Reply-To: <00fc01c7c940$55ac17a0$6fef31d2@vulcain>
References: <00fc01c7c940$55ac17a0$6fef31d2@vulcain>
Message-ID: <7281614F-530F-4F0E-94BE-A2AACDC5FC09@arizona-software.ch>

Are you entering "ToString() + 2.0e3" in the debugger input text?  
Which starting rule are you using? If I use "expression" as the  
starting rule, it works fine.

Regards,

Jean

On Jul 18, 2007, at 6:34 AM, Lloyd Dupont wrote:

> Sometimes, when I try to debug my grammar with ANTLRWork, I get  
> output in the debugger which has nothing to do with the strings I  
> typed in....
>
> for exemple I try to parse the following input:
> ===
> 1.ToString() + 2.0e3
> ===
> with the Grammar attached in ANTLRWorks 1.0.2
>
> and I get a parser error on the 1st token: "oString"
> it doesn't make much sense...
>
> does any one have an idea about what's going on?!?
> <ExpTest.g>


From ld at galador.net  Wed Jul 18 21:06:20 2007
From: ld at galador.net (Lloyd Dupont)
Date: Thu, 19 Jul 2007 14:06:20 +1000
Subject: [antlr-interest] mysterious bug with ANTLR Works 1.0.2
In-Reply-To: <7281614F-530F-4F0E-94BE-A2AACDC5FC09@arizona-software.ch>
References: <00fc01c7c940$55ac17a0$6fef31d2@vulcain>
	<7281614F-530F-4F0E-94BE-A2AACDC5FC09@arizona-software.ch>
Message-ID: <AE1EB9F0C5A045468EDE6D47538C0E61@lloydPC>

> Are you entering "ToString() + 2.0e3" in the debugger input text?
I'm entering
1.ToString() + 2.0e3

"1.T" is disappearing!

I think I'm using "expression" as a starting rule, I will try again tonight, 
paying attention to my starting rule.....
Also.. I noticed that sometimes when I restart ANTLRWorks it works better, 
but yesterday I forgot to restart when encountering this bug (it was long 
time to go to bed...), will try again tonight....

Merci bien, A+ :-)

> Which starting rule are you using? If I use "expression" as the  starting 
> rule, it works fine.
> 

From a.shneyderman at gmail.com  Wed Jul 18 22:58:40 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Thu, 19 Jul 2007 07:58:40 +0200
Subject: [antlr-interest] Return types on lexer rules do not seem to
	work.
In-Reply-To: <469E4E8D.7000301@gmx.de>
References: <693a69ba0707181013l2d2e75f2wabb48d27fe07b140@mail.gmail.com>
	<6E4734BA-791A-478C-B2A2-F03FC03CE188@classdump.org>
	<469E4E8D.7000301@gmx.de>
Message-ID: <693a69ba0707182258q57c6bb73s63e78bcbb357564d@mail.gmail.com>

> >> I run it with 3.0 final, so you guys might have fixed it ... ?
> >
> > AFAIK, lexer rules have no return values. But I might be mistaken.
> >
>
> Only tree and parser rules may include return values. The book states
> this on page 86.

True. Except the page is 98. (I have PDF version so that might explain
the difference)

Anyway, thanks everyone for clarifying. I really was not prepared for
a long discussion here. I am trying a first shot at a conversion from
v2 to v3 of a very long grammar. I have not really analyzed it much. I
was hoping an empty minded following of the instructions will work :-)
Well it is not that simple as it turns out.

So, at this point I can not justify the use of return values. Let me
work thru the grammar and see if it is really all that neccesary.
Still if you are curious the grammar is in the public domain, here is
the link: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core/src/main/org/codehaus/groovy/antlr/groovy.g

The particular rule I am struggling with is STRING_CTOR_END, and it is
being referenced from STRING_LITERAL and a few other places.

Thanks,
Alex.

From rdclark at gmail.com  Wed Jul 18 23:10:05 2007
From: rdclark at gmail.com (Richard Clark)
Date: Wed, 18 Jul 2007 23:10:05 -0700
Subject: [antlr-interest] On the reuse of grammars
In-Reply-To: <5AA45C2B-0AA1-4BEB-945F-CB19E818B74D@cs.usfca.edu>
References: <5AA45C2B-0AA1-4BEB-945F-CB19E818B74D@cs.usfca.edu>
Message-ID: <d3992d900707182310r5260bdb9u535ba90a6d2f04d2@mail.gmail.com>

Just to make things easy if your email client cuts up the URL:

http://www.antlr.org/wiki/x/HQAk

...R

On 7/18/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi,
>
> Added blog entry (note blogs entries are now being added to the wiki):
>
> http://www.antlr.org/wiki/display/~admin/2007/07/18/On+the+reuse+of
> +grammars
>
> Ter
>

From alessandro.feriani at gmail.com  Thu Jul 19 02:21:18 2007
From: alessandro.feriani at gmail.com (Alessandro Feriani)
Date: Thu, 19 Jul 2007 11:21:18 +0200
Subject: [antlr-interest] Keyword Vs Identifiers
Message-ID: <7c9a95830707190221w712d3beexf32553c1649f66f9@mail.gmail.com>

Hi All
i am developing a parser geenrator for a particular language using AntLR
2.7.7
I have to parse lines like

repeat 1 > 1 0    1111   010    X     HL
where 6 is an integer and after ">" every single char is a keyword.
I created a token set in this way
tokens
{
   DRIVE_LOW = "0";
   DRIVE_HIGH = "1";
   EXPECT_X = "X";
   EXPECT_L = "L";
    EXPECT_H = "H";
}

INT options{testLiterals=true;}: (DIGIT)+;
WORD options{testLiterals=true;}: LETTER (LETTER|DIGIT)*; where DIGIT and
LETTER are protected identifiers

Now the problem appear due to the ambiguity in bewteen INT and
DRIVE_LOW....( the same for EXPECT_L and WORD )
Ho can I do to distinguish in between them depending on the context?
Setting testLiterals=true, the lexer will always try to math the hash table
and I can also not apply testLiterals=true on parser.
How to fix this ambiguity?

Please help me
Thanks a lot
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/ca41d691/attachment.html 

From Smitha.K at Sun.COM  Thu Jul 19 03:01:52 2007
From: Smitha.K at Sun.COM (smitha k - Sun Microsystems - Bangalore India)
Date: Thu, 19 Jul 2007 15:31:52 +0530
Subject: [antlr-interest] C++ parser in Java
Message-ID: <469F3690.6090004@Sun.COM>

Hi

I am looking for a C++ parser in Java.As I have seen from the mail 
archives I find that somebody has already tried to convert the parser in 
Antlr site to java.Could anybody give me some hints as to how to go 
about with this.

Thanks
Smitha


From chrisb at ewetel.net  Thu Jul 19 03:12:14 2007
From: chrisb at ewetel.net (Christoph Beckmeyer)
Date: Thu, 19 Jul 2007 12:12:14 +0200
Subject: [antlr-interest] ambiguous lexer rules
Message-ID: <FC7ECF45-7120-4FD8-82CC-23BE6C6D5448@ewetel.net>

I have a problem with the overlapping rules  ID and  INT. I tried to  
solve it in multiple ways but none of them resulted in success.
Can somebody give me a hint how to handle this.

grammar Test;
ID		: 	'10';
INT		: DIGIT+;
fragment DIGIT	:	'0'..'9';
SEP_L1		:	';';
SEP_L2		:	',';		
field	: ID SEP_L2 INT SEP_L1;


Regards, Christoph Beckmeyer

From cameron.palmer at gmail.com  Thu Jul 19 03:16:30 2007
From: cameron.palmer at gmail.com (Cameron Palmer)
Date: Thu, 19 Jul 2007 12:16:30 +0200
Subject: [antlr-interest] Troubleshooting the Token Rewrite
Message-ID: <bc4938830707190316iea2b02dle71bea0f02d2de29@mail.gmail.com>

I have a token slipping through that should have be rewritten.

In the following input:
version 2.0.0
.data
.end
code main
        putr1 main.1
        forkep r1
        stop

Translates to:
-1 "2.0.0" ; version 2.0.0
-5 ; .data
code   -2 1024 ; code 1024
178 1036 ; putr1 1036
61 0 1 ; forkep 0 1
62 0 ; stop

The word code at the beginning of line 3 shouldn't be there.
Considering it was rewritten like this and CODE is an imaginary token:
codeBlock
        : 'code' a=codeLabel {
                if (labels.get($a.text) == null)
                        labels.put($a.text, new Integer(address));
        } EOL codeEl -> ^(CODE codeLabel codeEl)
        ;

codeLabel
        : ID
        ;

cameron palmer.

From jaluber at gmx.de  Thu Jul 19 03:16:50 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Thu, 19 Jul 2007 12:16:50 +0200
Subject: [antlr-interest] How to use ANTLR to find function pointers
In-Reply-To: <466908.53302.qm@web23207.mail.ird.yahoo.com>
References: <466908.53302.qm@web23207.mail.ird.yahoo.com>
Message-ID: <469F3A12.1060009@gmx.de>

amol Bhagavat wrote:
> Ok if i get a proper c grammer, i can easily find out function pointers
> in that ...
> Is it possible to find the different assignments done to function
> pointers in source code?

Well, once you have the knowledge that variable X is a function pointer,
you need only to track the use of the variable. That can be done by a
simple lookup in assignments, etc. Keep in mind that you can not only
assign a function to a pointer variable, but other pointer variables as
well. Or even casting a function pointer to an int. Nasty stuff.

Best regards,
Johannes Luber

> 
> */Johannes Luber <jaluber at gmx.de>/* wrote:
> 
>     amol Bhagavat wrote:
>     > Hi,
>     >
>     > I am developing a tool where i need to parse a c project code and find
>     > out all occurances of function pointers along with all
>     assignments. Also
>     > i need to create a output where i can specify the files where
>     > the function pointers and functions are defined.While finding function
>     > pointers i also need to aware of variable scope, since there can be
>     > occurance of local variable with same name.
>     > I am very new to ANTLR ...
>     > Please let me know can i use ANTLR ? how i can use it?
>     > My intention is to find out all the possibilities of function call
>     > through a function pointer.
>     >
>     > Thanks in advance...
>     >
>     > Regards,
>     > Amol
> 
>     At first, I would recommend to buy the ANTLR book
>     . It is really
>     helpful, especially, because it contains an example, on which you can
>     build upon. Alternatively you can look at the source code of the CMinus
>     example on the same website. That's for understanding only. You'd need a
>     C grammar, too. Maybe it has been posted one on the grammar site
>     (somewhere on antlr.org).
> 
>     On your special I would then generate an AST containing only the
>     functions and function pointers and then a tree grammar, which can
>     output the required information. Sorry I can't be more specific at this
>     stage!
> 
>     Best regards,
>     Johannes Luber
> 
> 
> ------------------------------------------------------------------------
> Yahoo! Mail is the world's favourite email. Don't settle for less, sign
> up for your free account today
> <http://uk.rd.yahoo.com/evt=44106/*http://uk.docs.yahoo.com/mail/winter07.html>.
> 


From ld at galador.net  Thu Jul 19 06:13:19 2007
From: ld at galador.net (Lloyd Dupont)
Date: Thu, 19 Jul 2007 23:13:19 +1000
Subject: [antlr-interest] lexer problem...
Message-ID: <013401c7ca06$942166e0$6fef31d2@vulcain>

I have the following lexer rule:
==============
FLOAT : ('0'..'9')+ '.' ('0'..'9')+ (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
 ;
==============
as you can see: it require 1 or more number on both side of the DOT

my problem is that with the follwoing input:


====
1.ToString()
====

instead of returning INT DOT ID
it apparently try to return a FLOAT and I have the following error message when trying on the command line:
====
line 1:2 required (...)+ loop did not match anything at character 'T'
====

Any idea how to solve this lexer problem??

Thanks! :D
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/7d461781/attachment.html 

From qwertie256 at gmail.com  Thu Jul 19 07:23:53 2007
From: qwertie256 at gmail.com (David Piepgrass)
Date: Thu, 19 Jul 2007 08:23:53 -0600
Subject: [antlr-interest] Incremental Parsing?
In-Reply-To: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
Message-ID: <ce40b1470707190723r542b31e9h95574a308ece466b@mail.gmail.com>

Sohail's suggestion makes the most sense to me. But if you just have a
lexer, not a parser, all you have to do is call NextToken() on your
lexer (don't even bother using CommonTokenStream).

IIRC, all solutions suggested will suffer from the problem that the
entire file will be loaded into memory (although parsing can still be
incremental). I wonder if that file-mapping stream is availaboe
yet--potentially it could eliminate that problem, although depending
on what you do with the records after you get them, having the entire
file loaded by the end might actually save memory because String
objects don't have to be created for each and every token...

On 7/16/07, Benji Smith <benji at benjismith.net> wrote:
> Is it possible (and straightforward) to implement an incremental
> parser with antlr?
>
> The reason I ask is that I recently wrote a JavaCC parser for CSV
> files (which correctly handles quoted fields, quote escaping, and
> fields containing newline characters (a huge pain in the ass if you're
> trying to parse CSV without writing a grammar)).
>
> The JavaCC parser works well, except that I can't parse the file
> record-by-record. I have to parse the entire file, returning a
> collection of Record objects at the end.
>
> With small files, that's fine. But I sometimes need to parse CSV files
> with millions of records, and it'd be very nice to simply pull the
> next record (as long as it complies with the grammar), much like you'd
> pull the next token from a TokenStream.
>
> Any tips on performing incremental parsing with antlr?
>
> Thanks!
>
> --benji smith
>


-- 
- David
http://qism.blogspot.com

From kroepke at classdump.org  Thu Jul 19 08:51:27 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Thu, 19 Jul 2007 08:51:27 -0700
Subject: [antlr-interest] ambiguous lexer rules
In-Reply-To: <FC7ECF45-7120-4FD8-82CC-23BE6C6D5448@ewetel.net>
References: <FC7ECF45-7120-4FD8-82CC-23BE6C6D5448@ewetel.net>
Message-ID: <2562B662-9891-4C30-969A-615BB54D67BE@classdump.org>


On Jul 19, 2007, at 3:12 AM, Christoph Beckmeyer wrote:

> I have a problem with the overlapping rules  ID and  INT. I tried  
> to solve it in multiple ways but none of them resulted in success.
> Can somebody give me a hint how to handle this.

What are you trying to solve?

> grammar Test;
> ID		: 	'10';
> INT		: DIGIT+;
> fragment DIGIT	:	'0'..'9';
> SEP_L1		:	';';
> SEP_L2		:	',';		
> field	: ID SEP_L2 INT SEP_L1;

This grammar results in the following parse tree to me:
Input : 10,984;
Parse tree:
(field ID SEP_L2 INT SEP_L1)

Isn't that what you wanted?

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From jimi at temporal-wave.com  Thu Jul 19 09:30:09 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2007 09:30:09 -0700
Subject: [antlr-interest] lexer problem...
In-Reply-To: <013401c7ca06$942166e0$6fef31d2@vulcain>
References: <013401c7ca06$942166e0$6fef31d2@vulcain>
Message-ID: <051466DAA0D608439E196797955018D76EED@wavemachine.temporal-wave.com>

I think that this question points out that many of us expect ATNLR to
"just work it out" for us. All these problems are best solved with a
mind experiment first "How would you scan it with the eye?", then break
the rule at the different alternatives yourself and stick in the
lookahead you perform with your mind. It will result in better generated
code anyway:

 

grammar fred;

 

stat 

            : test+

            ;

test

            :           (INT DOT ID)

            |           FLOAT

            ;

            

fragment

DIGIT    : '0'..'9'

            ;

 

FLOAT : INT

                                    (

                                                  ('.' INT)=> '.' INT

                                                | {$type = INT; }

                                    )

                        ;

 

DOT     : '.' ;

                        

Fragment                                  // Also ensures a token type
INT is present

INT       : DIGIT+;

 

ID         :           ('A'..'Z' | 'a'..'z')+

            ;

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: Thursday, July 19, 2007 6:13 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] lexer problem...

 

I have the following lexer rule:

==============

FLOAT : ('0'..'9')+ '.' ('0'..'9')+ (EXPONENT_PART)?
(FLOAT_TYPE_SUFFIX)?
 ;
==============

as you can see: it require 1 or more number on both side of the DOT

 

my problem is that with the follwoing input:

 

 

====

1.ToString()

====

 

instead of returning INT DOT ID

it apparently try to return a FLOAT and I have the following error
message when trying on the command line:

====

line 1:2 required (...)+ loop did not match anything at character 'T'

====

 

Any idea how to solve this lexer problem??

 

Thanks! :D

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/db37504d/attachment.html 

From antlr at jazillian.com  Thu Jul 19 08:01:09 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Thu, 19 Jul 2007 11:01:09 -0400
Subject: [antlr-interest] subtrees in tree grammar
Message-ID: <469F7CB5.4070804@jazillian.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/f7457dc3/attachment.html 

From paul at paulkeir.com  Thu Jul 19 07:40:06 2007
From: paul at paulkeir.com (Paul Keir)
Date: Thu, 19 Jul 2007 15:40:06 +0100
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <E1IBFEQ-0001AG-Lm@elasmtp-dupuy.atl.sa.earthlink.net>
References: <E1IBFEQ-0001AG-Lm@elasmtp-dupuy.atl.sa.earthlink.net>
Message-ID: <469F77C6.6010809@paulkeir.com>

Hi Susan,

I tried it again just to be sure, and got the same result. If in the C.g 
file of the C project from the java ANTLR examples, I augment line 354's 
'expression' rule with two println calls, i.e.

expression

@init { System.out.println("a"); }
    : { System.out.println(" b"); } assignment_expression (',' 
assignment_expression)*
    ;

And then build and run the generated parser on the 'input' data, I find 
that I get a lot more letter 'a's output than letter 'b's. I don't 
understand why that is, but at least I have this example to hopefully 
learn from.

It's interesting that you can't repeat this. Perhaps someone else can, 
or help me to an understanding.

Cheers,
Paul


From parrt at cs.usfca.edu  Thu Jul 19 09:53:26 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Jul 2007 09:53:26 -0700
Subject: [antlr-interest] subtrees in tree grammar
In-Reply-To: <469F7CB5.4070804@jazillian.com>
References: <469F7CB5.4070804@jazillian.com>
Message-ID: <514B13C1-D946-48F5-9969-18EBD37E4829@cs.usfca.edu>

because I forgot to implement that.  Just put parens around the tree;  
i.e., (...)?.  Sorry about that.  I have fixed it in the new  
ANTLRv3.g grammar.

Ter
On Jul 19, 2007, at 8:01 AM, Andy Tripp wrote:

> Why does ANTLR complain when I have something like
>
>            ^(IMPLEMENTS typeList)?
>
>  in a tree grammar rule?
>
> Instead, it seems I have to separate out this "optional subtree"  
> into a separate rule:
>        implementsTypeList?
> ...
> implementsTypeList
>     : ^(IMPLEMENTS typeList)
>     ;
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/96e4ff44/attachment.html 

From lgcraymer at yahoo.com  Thu Jul 19 10:05:54 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 19 Jul 2007 10:05:54 -0700 (PDT)
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <469F77C6.6010809@paulkeir.com>
Message-ID: <142508.43144.qm@web55914.mail.re3.yahoo.com>

This is a design feature:  most actions are not
executed in guessing mode, but init actions are
executed to establish semantic context.  That way,
semantic predicates can be made to work even when
guessing.  Likewise, it may be necessary to reset
semantic context on exiting a rule.  Ter probably has
this clearly documented somewhere--someone else can
cite the references.

--Loring


--- Paul Keir <paul at paulkeir.com> wrote:

> Hi Susan,
> 
> I tried it again just to be sure, and got the same
> result. If in the C.g 
> file of the C project from the java ANTLR examples,
> I augment line 354's 
> 'expression' rule with two println calls, i.e.
> 
> expression
> 
> @init { System.out.println("a"); }
>     : { System.out.println(" b"); }
> assignment_expression (',' 
> assignment_expression)*
>     ;
> 
> And then build and run the generated parser on the
> 'input' data, I find 
> that I get a lot more letter 'a's output than letter
> 'b's. I don't 
> understand why that is, but at least I have this
> example to hopefully 
> learn from.
> 
> It's interesting that you can't repeat this. Perhaps
> someone else can, 
> or help me to an understanding.
> 
> Cheers,
> Paul
> 
> 



       
____________________________________________________________________________________
Get the Yahoo! toolbar and be alerted to new email wherever you're surfing.
http://new.toolbar.yahoo.com/toolbar/features/mail/index.php

From jimi at temporal-wave.com  Thu Jul 19 10:09:28 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2007 10:09:28 -0700
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <469F77C6.6010809@paulkeir.com>
References: <E1IBFEQ-0001AG-Lm@elasmtp-dupuy.atl.sa.earthlink.net>
	<469F77C6.6010809@paulkeir.com>
Message-ID: <051466DAA0D608439E196797955018D76EEF@wavemachine.temporal-wave.com>

In the C target the @init code is gated from backtracking mode, however
in the Java target, it is not, but the action code is. Hence you are
seeing the @init code called every time backtracking pops in to say
hello.
 
Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Paul Keir
> Sent: Thursday, July 19, 2007 7:40 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can't see the wood (@init and @after)
> 
> Hi Susan,
> 
> I tried it again just to be sure, and got the same result. If in the
> C.g
> file of the C project from the java ANTLR examples, I augment line
> 354's
> 'expression' rule with two println calls, i.e.
> 
> expression
> 
> @init { System.out.println("a"); }
>     : { System.out.println(" b"); } assignment_expression (','
> assignment_expression)*
>     ;
> 
> And then build and run the generated parser on the 'input' data, I
find
> that I get a lot more letter 'a's output than letter 'b's. I don't
> understand why that is, but at least I have this example to hopefully
> learn from.
> 
> It's interesting that you can't repeat this. Perhaps someone else can,
> or help me to an understanding.
> 
> Cheers,
> Paul


From jimi at temporal-wave.com  Thu Jul 19 10:11:20 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2007 10:11:20 -0700
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <142508.43144.qm@web55914.mail.re3.yahoo.com>
References: <469F77C6.6010809@paulkeir.com>
	<142508.43144.qm@web55914.mail.re3.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76EF0@wavemachine.temporal-wave.com>

I did wonder about that. Someone convinced me that the @init code wasn't
being protected and I blindly believed them and 'fixed' it in my current
source. Perhaps I should unfix this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Loring Craymer
> Sent: Thursday, July 19, 2007 10:06 AM
> To: Paul Keir; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Can't see the wood (@init and @after)
> 
> This is a design feature:  most actions are not
> executed in guessing mode, but init actions are
> executed to establish semantic context.  That way,
> semantic predicates can be made to work even when
> guessing.  Likewise, it may be necessary to reset
> semantic context on exiting a rule.  Ter probably has
> this clearly documented somewhere--someone else can
> cite the references.
> 
> --Loring
> 
> 
> --- Paul Keir <paul at paulkeir.com> wrote:
> 
> > Hi Susan,
> >
> > I tried it again just to be sure, and got the same
> > result. If in the C.g
> > file of the C project from the java ANTLR examples,
> > I augment line 354's
> > 'expression' rule with two println calls, i.e.
> >
> > expression
> >
> > @init { System.out.println("a"); }
> >     : { System.out.println(" b"); }
> > assignment_expression (','
> > assignment_expression)*
> >     ;
> >
> > And then build and run the generated parser on the
> > 'input' data, I find
> > that I get a lot more letter 'a's output than letter
> > 'b's. I don't
> > understand why that is, but at least I have this
> > example to hopefully
> > learn from.
> >
> > It's interesting that you can't repeat this. Perhaps
> > someone else can,
> > or help me to an understanding.
> >
> > Cheers,
> > Paul
> >
> >
> 
> 
> 
> 
>
_______________________________________________________________________
> _____________
> Get the Yahoo! toolbar and be alerted to new email wherever you're
> surfing.
> http://new.toolbar.yahoo.com/toolbar/features/mail/index.php

From lgcraymer at yahoo.com  Thu Jul 19 10:22:08 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Thu, 19 Jul 2007 10:22:08 -0700 (PDT)
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <051466DAA0D608439E196797955018D76EF0@wavemachine.temporal-wave.com>
Message-ID: <974447.12887.qm@web55911.mail.re3.yahoo.com>

That would be a good idea--the distinction goes way
back (PCCTS, IIRC), which might explain any missing
documentation.

--Loring

--- Jim Idle <jimi at temporal-wave.com> wrote:

> I did wonder about that. Someone convinced me that
> the @init code wasn't
> being protected and I blindly believed them and
> 'fixed' it in my current
> source. Perhaps I should unfix this.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Loring Craymer
> > Sent: Thursday, July 19, 2007 10:06 AM
> > To: Paul Keir; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Can't see the wood
> (@init and @after)
> > 
> > This is a design feature:  most actions are not
> > executed in guessing mode, but init actions are
> > executed to establish semantic context.  That way,
> > semantic predicates can be made to work even when
> > guessing.  Likewise, it may be necessary to reset
> > semantic context on exiting a rule.  Ter probably
> has
> > this clearly documented somewhere--someone else
> can
> > cite the references.
> > 
> > --Loring
> > 
> > 
> > --- Paul Keir <paul at paulkeir.com> wrote:
> > 
> > > Hi Susan,
> > >
> > > I tried it again just to be sure, and got the
> same
> > > result. If in the C.g
> > > file of the C project from the java ANTLR
> examples,
> > > I augment line 354's
> > > 'expression' rule with two println calls, i.e.
> > >
> > > expression
> > >
> > > @init { System.out.println("a"); }
> > >     : { System.out.println(" b"); }
> > > assignment_expression (','
> > > assignment_expression)*
> > >     ;
> > >
> > > And then build and run the generated parser on
> the
> > > 'input' data, I find
> > > that I get a lot more letter 'a's output than
> letter
> > > 'b's. I don't
> > > understand why that is, but at least I have this
> > > example to hopefully
> > > learn from.
> > >
> > > It's interesting that you can't repeat this.
> Perhaps
> > > someone else can,
> > > or help me to an understanding.
> > >
> > > Cheers,
> > > Paul
> > >
> > >
> > 
> > 
> > 
> > 
> >
>
_______________________________________________________________________
> > _____________
> > Get the Yahoo! toolbar and be alerted to new email
> wherever you're
> > surfing.
> >
>
http://new.toolbar.yahoo.com/toolbar/features/mail/index.php
> 



      ____________________________________________________________________________________
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us. http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 


From aliaazimi at yahoo.com  Thu Jul 19 10:40:03 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 19 Jul 2007 10:40:03 -0700 (PDT)
Subject: [antlr-interest] grammar and rewrite rule problem (newbie)
Message-ID: <713723.15888.qm@web58110.mail.re3.yahoo.com>

Hi,
   
  How can rules like the following ( r ) be dealt with without producing an infinite loop? Can you also tell me what the rewrite rule for it should look like?
   
  Grammar T;
   
  r:  a  ( c | d )*  ( e | f )? g  
  ;
   
  a:
  ;
   
  c:
  ;
  e:
  ;
  f:
  ;
  g:
  ;
    
 
  Thank you so much in advance.
   
  Best wishes,
   
  Al

       
---------------------------------
Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/40de707d/attachment.html 

From parrt at cs.usfca.edu  Thu Jul 19 11:36:12 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Jul 2007 11:36:12 -0700
Subject: [antlr-interest] daily build and status
Message-ID: <6D0C1C1D-6A0F-4D14-AFF5-489F76FFC96E@cs.usfca.edu>

Hi,

http://www.antlr.org/download/build/antlr-2007-07-18.17.tar.gz

has lots of fixes, but mostly in the area of debugging and  
interaction with AW.  AW 1.1 will have some nice new stuff; hopefully  
released this weekend.  It will use probably this daily build rather  
than a formal release.  Expect an ANTLR 3.0.1 or 3.1 in August  
depending on if I can get the new features going.

That build also includes a bunch of C target fixes.

Ter

From vbar at comp.cz  Thu Jul 19 11:49:36 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 19 Jul 2007 20:49:36 +0200
Subject: [antlr-interest] Can @init code throw Java exceptions?
Message-ID: <200707192049.37112.vbar@comp.cz>

Hi,

I'm trying to construct an XML document in a tree grammar, and getting an 
interesting error. I put the XML doc initialization into the @init block of 
the topmost rule:

sourceFile
@init {
	DocumentBuilderFactory factory =
		DocumentBuilderFactory.newInstance();
	DocumentBuilder builder = factory.newDocumentBuilder();
	document = builder.newDocument();
}
	: assignments rules
	;

But that generates illegal Java, because the newDocumentBuilder is declared as 
throwing javax.xml.parsers.ParserConfigurationException while the enclosing 
sourceFile method isn't. I suppose I can put my own try...catch inside and 
wrap everything in RuntimeException, but that seems rather inelegant - is 
there a better way?

	Bye
		Vasek

From ssiddiqu at yahoo.com  Thu Jul 19 11:50:11 2007
From: ssiddiqu at yahoo.com (sarim)
Date: Thu, 19 Jul 2007 11:50:11 -0700 (PDT)
Subject: [antlr-interest] Help: A simple string template question..
Message-ID: <20070719185011.17038.qmail@web52502.mail.re2.yahoo.com>



sarim <ssiddiqu at yahoo.com> wrote:    Hi,
  I am new to StringTemplate. I have the following template:
  ************************
  group RuleTemplate;
fulldef(package,import,rulename) ::= <<$packagedef()$
$importdef(); separator="\n"$
$rulestart()$
>>
packagedef()::="package $package$"
importdef()::=<<
import $import$
>>
rulestart()::="rule $rulename$ "
  ********************
  Here is how I am calling it:
  String fileName="RuleTemplate.st";
  try
  {
  StringTemplateGroup group = new StringTemplateGroup(new BufferedReader( new FileReader(new File (fileName ))),DefaultTemplateLexer.class);
  StringTemplate query = group.getInstanceOf("fulldef");
  query.setAttribute("package","org.com");
  query.setAttribute("import","java.util.*");
  query.setAttribute("import","java.io.*");
  query.setAttribute("rulename","myfirstrule");
  System.out.println(query);
  ....
  *************************************
  There are no errors and I see the following output:
  ***********************************
  package org.com
  import java.util.*java.io.*
  rule myfirstrule 
  *****************************
  I want to get:
   
  package org.com
  import java.util.*
  import java.io.*
  rule myfirstrule 
   
  How should I change my template so that I can get the desired output? Why is the "separator" not taking effect?
  Thanks.
  --Sarim.
    
---------------------------------
  Boardwalk for $500? In 2007? Ha! 
Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.

       
---------------------------------
Need a vacation? Get great deals to amazing places on Yahoo! Travel. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/18592bfe/attachment.html 

From parrt at cs.usfca.edu  Thu Jul 19 11:54:19 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Jul 2007 11:54:19 -0700
Subject: [antlr-interest] Help: A simple string template question..
In-Reply-To: <20070719185011.17038.qmail@web52502.mail.re2.yahoo.com>
References: <20070719185011.17038.qmail@web52502.mail.re2.yahoo.com>
Message-ID: <20BBACEE-505B-4CC5-B28A-3F99EF81A485@cs.usfca.edu>


On Jul 19, 2007, at 11:50 AM, sarim wrote:

>
>
> sarim <ssiddiqu at yahoo.com> wrote:
> Hi,
> I am new to StringTemplate. I have the following template:
> ************************
> group RuleTemplate;
> fulldef(package,import,rulename) ::= <<$packagedef()$
> $importdef(); separator="\n"$

This is doing a \n after the call. The call emits the improts.  move  
the \n into the importdef template.

Ter

From jimi at temporal-wave.com  Thu Jul 19 12:18:13 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2007 12:18:13 -0700
Subject: [antlr-interest] Can @init code throw Java exceptions?
In-Reply-To: <200707192049.37112.vbar@comp.cz>
References: <200707192049.37112.vbar@comp.cz>
Message-ID: <051466DAA0D608439E196797955018D76EF4@wavemachine.temporal-wave.com>

I would suggest that perhaps what you want here is:

sourceFile
@init {
 	DocumentBuilderFactory factory;
 	DocumentBuilder builder;
	// What is document?
}
 	: {
 		factory = DocumentBuilderFactory.newInstance();
 		builder = factory.newDocumentBuilder();
		document = builder.newDocument();
	  }

		assignments rules
 	;

Or perhaps a scope.

In general though, I feel it is asking for trouble to put much of any
code directly in the grammar. Better to provide the rule with a
"codegen" object of some sort:


sourceFile[ myCodeGenClassInterface cgIn]
@scope
{
	myCodeGenClassInterface cg;
}
@init
{
	$sourceFile::cg = cgIn;
	$sourceFile::cg.init();
}
	:assignments rules
	;

Or some similar construct. This way your action code is small and
obvious as it just calls the object with whatever parameters it needs
and you can supply different implementations.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Vaclav Barta
> Sent: Thursday, July 19, 2007 11:50 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Can @init code throw Java exceptions?
> 
> Hi,
> 
> I'm trying to construct an XML document in a tree grammar, and getting
> an
> interesting error. I put the XML doc initialization into the @init
> block of
> the topmost rule:
> 
> sourceFile
> @init {
> 	DocumentBuilderFactory factory =
> 		DocumentBuilderFactory.newInstance();
> 	DocumentBuilder builder = factory.newDocumentBuilder();
> 	document = builder.newDocument();
> }
> 	: assignments rules
> 	;
> 
> But that generates illegal Java, because the newDocumentBuilder is
> declared as
> throwing javax.xml.parsers.ParserConfigurationException while the
> enclosing
> sourceFile method isn't. I suppose I can put my own try...catch inside
> and
> wrap everything in RuntimeException, but that seems rather inelegant -
> is
> there a better way?
> 
> 	Bye
> 		Vasek

From parrt at cs.usfca.edu  Thu Jul 19 12:50:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 19 Jul 2007 12:50:40 -0700
Subject: [antlr-interest] rewriting tree node streams
Message-ID: <9FF4DA71-A1A5-4EDD-ADCC-5CEE39AC753A@cs.usfca.edu>

Hi, working on design for tree grammar rewriting.  Here are my thoughts:

http://www.antlr.org/wiki/x/JQAk

Ter

From antlr at mirality.co.nz  Thu Jul 19 13:09:13 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 20 Jul 2007 08:09:13 +1200
Subject: [antlr-interest] grammar and rewrite rule problem (newbie)
In-Reply-To: <713723.15888.qm@web58110.mail.re3.yahoo.com>
References: <713723.15888.qm@web58110.mail.re3.yahoo.com>
Message-ID: <20070719200945.1DF9611ECBC@www.antlr.org>

At 05:40 20/07/2007, ali azimi wrote:
>How can rules like the following ( r ) be dealt with without 
>producing an infinite loop? Can you also tell me what the rewrite 
>rule for it should look like?
>
>Grammar T;
>
>r:  a  ( c | d )*  ( e | f )? g
>;
>
>a:
>;
>
>c:
>;
>e:
>;
>f:
>;
>g:
>;

Don't write empty rules -- trying to match multiple instances of 
nothing at all is an instant infinite loop. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070720/a693dbdd/attachment.html 

From vbar at comp.cz  Thu Jul 19 13:12:21 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Thu, 19 Jul 2007 22:12:21 +0200
Subject: [antlr-interest] Can @init code throw Java exceptions?
In-Reply-To: <051466DAA0D608439E196797955018D76EF4@wavemachine.temporal-wave.com>
References: <200707192049.37112.vbar@comp.cz>
	<051466DAA0D608439E196797955018D76EF4@wavemachine.temporal-wave.com>
Message-ID: <200707192212.22518.vbar@comp.cz>

On Thursday 19 July 2007 21:18, Jim Idle wrote:
> I would suggest that perhaps what you want here is:
>
> sourceFile
> @init {
>  	DocumentBuilderFactory factory;
>  	DocumentBuilder builder;
> 	// What is document?
@members {
	Document document;
}

where Document is org.w3c.dom.Document .

> }
>  	: {
>
>  		factory = DocumentBuilderFactory.newInstance();
>  		builder = factory.newDocumentBuilder();
> 		document = builder.newDocument();
> 	  }
>
> 		assignments rules
>  	;
Well, I might want that, but I'll have to get it past the compiler first...

    [javac] Compiling 1 source file to /home/vb/antlr/antmaker/classes
    [javac] /home/vb/antlr/antmaker/src/Dumper.java:58: unreported exception 
javax.xml.parsers.ParserConfigurationException; must be caught or declared to 
be thrown
    [javac]                     builder = factory.newDocumentBuilder();

(IOW the same problem as in my original version).

> In general though, I feel it is asking for trouble to put much of any
> code directly in the grammar. Better to provide the rule with a
> "codegen" object of some sort:
Well, I'm skimping on custom classes by using XML, but obviously I'll still 
need some code to build it, which must go somewhere, so why not directly into 
the grammar? This is supposed to be a simple example, really... :-)

> sourceFile[ myCodeGenClassInterface cgIn]
If I had a myCodeGenClass(es), I'd build a typed tree directly from the parser 
rules and wouldn't bother with a tree grammar at all (I actually did just 
that in my production project) - but the purpose of the exercise above is 
exactly to discover the delights of using a tree grammar... So far, I'm 
hard-pressed to find any. :-/

 	Bye
 		Vasek

From aliaazimi at yahoo.com  Thu Jul 19 15:09:23 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Thu, 19 Jul 2007 15:09:23 -0700 (PDT)
Subject: [antlr-interest] grammar and rewrite rule problem (newbie)
In-Reply-To: <20070719200945.1DF9611ECBC@www.antlr.org>
Message-ID: <488481.48217.qm@web58114.mail.re3.yahoo.com>

Hi, 
   
  Thank you very much for replying to my post. For simplicity I have left them empty as the rule is quite large and I thought not to bother you guys. I thought the problem was the * sign in the rule but it was not. 
   
  I have sorted out the looping problem. However a problem still remains and that is how to write the rewrite rule. Could you please suggest me a rewrite rule for the following? 
   
  r:  a  ( c | d )*  ( e | f )? g
;
   
  Many thanks in advance.
   
  Best wishes,
   
  Al


Gavin Lambert <antlr at mirality.co.nz> wrote:  At 05:40 20/07/2007, ali azimi wrote:
  How can rules like the following ( r ) be dealt with without producing an infinite loop? Can you also tell me what the rewrite rule for it should look like?
 
Grammar T;
 
r:  a  ( c | d )*  ( e | f )? g  
;
 
a:
;
 
c:
;
e:
;
f:
;
g:
;
Don't write empty rules -- trying to match multiple instances of nothing at all is an instant infinite loop. 

       
---------------------------------
Boardwalk for $500? In 2007? Ha! 
Play Monopoly Here and Now (it's updated for today's economy) at Yahoo! Games.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/3b7bf1d1/attachment.html 

From ssiddiqu at yahoo.com  Thu Jul 19 17:04:54 2007
From: ssiddiqu at yahoo.com (sarim)
Date: Thu, 19 Jul 2007 17:04:54 -0700 (PDT)
Subject: [antlr-interest] Help: A simple string template question..
In-Reply-To: <20BBACEE-505B-4CC5-B28A-3F99EF81A485@cs.usfca.edu>
Message-ID: <20070720000454.63285.qmail@web52506.mail.re2.yahoo.com>

Thanks much for the reply.
  I actually had "\n" in the importdef() before as follows:
  $import;separator=";\n"$
   
  but that requires me to set:
  query.setAttribute("import","import java.util.*");
query.setAttribute("import","import java.io.*");

  I wanted to move the string "import" into the template definition so that I can only do:
  query.setAttribute("import","java.util.*");
  query.setAttribute("import","java.io.*");
   
  Something like:
  $prefix="import";import;separator=";\n"$
   
  Is there a  way to achieve this?
  Thanks.
  --Sarim.
Terence Parr <parrt at cs.usfca.edu> wrote:
  
On Jul 19, 2007, at 11:50 AM, sarim wrote:

>
>
> sarim wrote:
> Hi,
> I am new to StringTemplate. I have the following template:
> ************************
> group RuleTemplate;
> fulldef(package,import,rulename) ::= <<$packagedef()$
> $importdef(); separator="\n"$

This is doing a \n after the call. The call emits the improts. move 
the \n into the importdef template.

Ter
  
*********************** ORIGINAL QUESTION ****************************************
  Hi,
  I am new to StringTemplate. I have the following template:
  ************************
  group RuleTemplate;
fulldef(package,import,rulename) ::= <<$packagedef()$
$importdef(); separator="\n"$
$rulestart()$
>>
packagedef()::="package $package$"
importdef()::=<<
import $import$
>>
rulestart()::="rule $rulename$ "
  ********************
  Here is how I am calling it:
  String fileName="RuleTemplate.st";
  try
  {
  StringTemplateGroup group = new StringTemplateGroup(new BufferedReader( new FileReader(new File (fileName ))),DefaultTemplateLexer.class);
  StringTemplate query = group.getInstanceOf("fulldef");
  query.setAttribute("package","org.com");
  query.setAttribute("import","java.util.*");
  query.setAttribute("import","java.io.*");
  query.setAttribute("rulename","myfirstrule");
  System.out.println(query);
  ....
  *************************************
  There are no errors and I see the following output:
  ***********************************
  package org.com
  import java.util.*java.io.*
  rule myfirstrule 
  *****************************
  I want to get:
   
  package org.com
  import java.util.*
  import java.io.*
  rule myfirstrule 
   
  How should I change my template so that I can get the desired output? Why is the "separator" not taking effect?
  Thanks.
  --Sarim.

       
---------------------------------
Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/c675b76b/attachment.html 

From ssiddiqu at yahoo.com  Thu Jul 19 17:23:12 2007
From: ssiddiqu at yahoo.com (sarim)
Date: Thu, 19 Jul 2007 17:23:12 -0700 (PDT)
Subject: [antlr-interest] Help: A simple string template question..
In-Reply-To: <20070720000454.63285.qmail@web52506.mail.re2.yahoo.com>
Message-ID: <734676.22741.qm@web52512.mail.re2.yahoo.com>

I figured it out. It worked when I used multi-valued attributes.
  Thanks.
  --Sarim.
   
  group RuleTemplate;
fulldef(package,import,rulename) ::= <<$packagedef()$
$import:importdef()$
$rulestart()$
>>
packagedef()::="package $package$"
importdef()::=<<
import $it$;
   
  >>
rulestart()::="rule $rulename$ "
   
  

sarim <ssiddiqu at yahoo.com> wrote:
    Thanks much for the reply.
  I actually had "\n" in the importdef() before as follows:
  $import;separator=";\n"$
   
  but that requires me to set:
  query.setAttribute("import","import java.util.*");
query.setAttribute("import","import java.io.*");

  I wanted to move the string "import" into the template definition so that I can only do:
  query.setAttribute("import","java.util.*");
  query.setAttribute("import","java.io.*");
   
  Something like:
  $prefix="import";import;separator=";\n"$
   
  Is there a  way to achieve this?
  Thanks.
  --Sarim.
Terence Parr <parrt at cs.usfca.edu> wrote:
  
On Jul 19, 2007, at 11:50 AM, sarim wrote:

>
>
> sarim wrote:
> Hi,
> I am new to StringTemplate. I have the following template:
> ************************
> group RuleTemplate;
> fulldef(package,import,rulename) ::= <<$packagedef()$
> $importdef(); separator="\n"$

This is doing a \n after the call. The call emits the improts. move 
the \n into the importdef template.

Ter
  
*********************** ORIGINAL QUESTION ****************************************
  Hi,
  I am new to StringTemplate. I have the following template:
  ************************
  group RuleTemplate;
fulldef(package,import,rulename) ::= <<$packagedef()$
$importdef(); separator="\n"$
$rulestart()$
>>
packagedef()::="package $package$"
importdef()::=<<
import $import$
>>
rulestart()::="rule $rulename$ "
  ********************
  Here is how I am calling it:
  String fileName="RuleTemplate.st";
  try
  {
  StringTemplateGroup group = new StringTemplateGroup(new BufferedReader( new FileReader(new File (fileName ))),DefaultTemplateLexer.class);
  StringTemplate query = group.getInstanceOf("fulldef");
  query.setAttribute("package","org.com");
  query.setAttribute("import","java.util.*");
  query.setAttribute("import","java.io.*");
  query.setAttribute("rulename","myfirstrule");
  System.out.println(query);
  ....
  *************************************
  There are no errors and I see the following output:
  ***********************************
  package org.com
  import java.util.*java.io.*
  rule myfirstrule 
  *****************************
  I want to get:
   
  package org.com
  import java.util.*
  import java.io.*
  rule myfirstrule 
   
  How should I change my template so that I can get the desired output? Why is the "separator" not taking effect?
  Thanks.
  --Sarim.
    
---------------------------------
  Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.

       
---------------------------------
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/07f8a247/attachment-0001.html 

From Hardy at PathworksSoftware.com  Thu Jul 19 20:02:22 2007
From: Hardy at PathworksSoftware.com (Dan Hardy)
Date: Thu, 19 Jul 2007 20:02:22 -0700
Subject: [antlr-interest] New user issues / questions
Message-ID: <814F97B12E01BD449808E23562D0A79C72CE50@exchange.ambientsoftware.com>

I?m new to ANTLR, and am using v3.  I do intend to buy the book, for what that?s worth, but it?s not in my hands at the moment.  (And I?ll probably purchase some support if I decide to use this in production)?

 

I?m having just enough success to get excited about using ANTLR?but am running into some things I don?t quite understand.  

 

I have a moderately sophisticated grammar almost working, but have seen some odd things that I don?t understand.  So, I?ve tried to recreate some simple examples that might get to the core of the problem so I could post them here. 

 

I think I?m having three real issues.  The first is not critical, as I can work around it.

 

1)       Ranges don?t seem to work.  I get different behavior in my regular ant compile vs testing in ANTLRWorks, but neither works.  In my compiled project, the ANTLR generated code calls matchRange(), which is an undefined method on the parser class.  Is it supposed to be present in a base class (org.antlr.runtime.Parser?).  On the other hand, if I try the following in ANTLRWorks, and I try to interpret input abc using rule value with the below grammar, I get a NoViableAltException.  It sure seems like it ought to match.

 

grammar Test;

 

options {output=AST; k=2; backtrack=true; memoize=true;}

 

value    :           ('a'..'z'|'A'..'Z')*;

 

 

2)       I can?t get the following to work in ANTLRWorks.  When parsing input record.abc against rule ?expression? I get a ?FailedPredicateException?.  It does, however parse ?foo? properly as a literal against the same rule.  record.abc should match the first rule, I would have thought.  I have a feeling that if I understand this better, it?ll help with my third issue.

 

grammar Test;

 

options {output=AST; k=2; backtrack=true; memoize=true;}

 

expression 

            :           field | literal

            ;

            

field      :           'record.' ('a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'|'j'|'k'|'l'|'m'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'w'|'x'|'y'|'z')+

            ;

 

literal :  '\'' (Escape | ~('\''|'\\'))* '\''

            ;

            

Escape :           '\\' ('\\'|'\'')

            ;

 

3)       This is a bit hard to explain, but I keep seeing ANTLR completely skip what I?d call ?non-matching? tokens and try to use a rule anyway, when the ?next? rule would have matched the entire sequence.  For example, when presented with a single-quoted literal for the grammar of example #2 above.  If I try to interpret expression ?foorecord? using that grammar, I get ? f o o and then NoViableAltException.   ?foorecords? works though.  If it matched the first single-quote against the literal rule and grabbed everything up to the next unescaped single-quote, I?d get what I want.  I?ve tried adding additional discriminators to my grammar, such as starting fields with {, functions with $, string literals with ?, etc., but I still see cases where this type of thing is causing me problems.

 

 

I apologize for what I?m sure are very rudimentary questions, and appreciate any help.  I now realize I probably should have taken that extra compiler course instead of that course on African drumming?.

 

Regards,

Dan

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/56f0d732/attachment.html 

From jimi at temporal-wave.com  Thu Jul 19 20:43:29 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2007 20:43:29 -0700
Subject: [antlr-interest] New user issues / questions
In-Reply-To: <814F97B12E01BD449808E23562D0A79C72CE50@exchange.ambientsoftware.com>
References: <814F97B12E01BD449808E23562D0A79C72CE50@exchange.ambientsoftware.com>
Message-ID: <051466DAA0D608439E196797955018D76EF6@wavemachine.temporal-wave.com>

Not sure about your ANTLRWorks vs command line differences, I don?t think there are any unless you have a much newer ANTLR tool jar than the one in ANTLRWorks. However, there is a runtime jar and a tool jar. It looks like you are not including the runtime jar in your command line compile somehow. Make sure you use the tool+runtime binary downloads.

 

However your rule, value, allows nothing to math and it looks like you have confused a parser rule (start with lower case) with a LEXER rule (Start with UpperCase).

 

Try this:

 

value : LETTER+;

 

LETTER : (?a?..?z?| ?A?..?Z?);

 

Or even:

 

value : WORD;

 

fragment

LETTER : (?a?..?z?| ?A?..?Z?);

 

WORD: LETTER+;

 

2) The same thing is happening here, you are confusing lexing and parsing. Until you get the hang of it more, don?t use the literals directly in the parser rules (rule names starting lower case), just UPPER CASE token names and make lexer rules to make the tokens. Then don?t try parsing thing in the lexer, just define the most raw non ambiguous TOKENS and use parser rules to work out how they combine.

 

3) You are seeing the byproducts of your confusion ? I suggest a 7/6 time bass rhythm mixed with a 14/2 tom tom and camping on the river bank opposite my house with the other hippies J Other than that, I think that you are seeing problems because you are using the interpreter rather than the debugger in ANTLRWorks, but you have turned on all the predicates you could possibly think of ;-). While backtracking makes the errors seem to go away, there is then a need for a quad core QX6800 to parse it and you can?t run predicates in interpretive mode. I suggest a brand new drumstick and turning off the backtracking stuff and paying close attention to the ambiguity errors ANTLR tells  you about. J

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dan Hardy
Sent: Thursday, July 19, 2007 8:02 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] New user issues / questions

 

I?m new to ANTLR, and am using v3.  I do intend to buy the book, for what that?s worth, but it?s not in my hands at the moment.  (And I?ll probably purchase some support if I decide to use this in production)?

 

I?m having just enough success to get excited about using ANTLR?but am running into some things I don?t quite understand.  

 

I have a moderately sophisticated grammar almost working, but have seen some odd things that I don?t understand.  So, I?ve tried to recreate some simple examples that might get to the core of the problem so I could post them here. 

 

I think I?m having three real issues.  The first is not critical, as I can work around it.

 

1)  Ranges don?t seem to work.  I get different behavior in my regular ant compile vs testing in ANTLRWorks, but neither works.  In my compiled project, the ANTLR generated code calls matchRange(), which is an undefined method on the parser class.  Is it supposed to be present in a base class (org.antlr.runtime.Parser?).  On the other hand, if I try the following in ANTLRWorks, and I try to interpret input abc using rule value with the below grammar, I get a NoViableAltException.  It sure seems like it ought to match.

 

grammar Test;

 

options {output=AST; k=2; backtrack=true; memoize=true;}

 

value    :           ('a'..'z'|'A'..'Z')*;

 

 

2)  I can?t get the following to work in ANTLRWorks.  When parsing input record.abc against rule ?expression? I get a ?FailedPredicateException?.  It does, however parse ?foo? properly as a literal against the same rule.  record.abc should match the first rule, I would have thought.  I have a feeling that if I understand this better, it?ll help with my third issue.

 

grammar Test;

 

options {output=AST; k=2; backtrack=true; memoize=true;}

 

expression 

            :           field | literal

            ;

            

field      :           'record.' ('a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'|'j'|'k'|'l'|'m'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'w'|'x'|'y'|'z')+

            ;

 

literal :  '\'' (Escape | ~('\''|'\\'))* '\''

            ;

            

Escape :           '\\' ('\\'|'\'')

            ;

 

3)  This is a bit hard to explain, but I keep seeing ANTLR completely skip what I?d call ?non-matching? tokens and try to use a rule anyway, when the ?next? rule would have matched the entire sequence.  For example, when presented with a single-quoted literal for the grammar of example #2 above.  If I try to interpret expression ?foorecord? using that grammar, I get ? f o o and then NoViableAltException.   ?foorecords? works though.  If it matched the first single-quote against the literal rule and grabbed everything up to the next unescaped single-quote, I?d get what I want.  I?ve tried adding additional discriminators to my grammar, such as starting fields with {, functions with $, string literals with ?, etc., but I still see cases where this type of thing is causing me problems.

 

 

I apologize for what I?m sure are very rudimentary questions, and appreciate any help.  I now realize I probably should have taken that extra compiler course instead of that course on African drumming?.

 

Regards,

Dan

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/e37d67a6/attachment-0001.html 

From jonathan.thomas at ca.com  Thu Jul 19 21:21:05 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 20 Jul 2007 14:21:05 +1000
Subject: [antlr-interest] New user issues / questions
In-Reply-To: <051466DAA0D608439E196797955018D76EF6@wavemachine.temporal-wave.com>
References: <814F97B12E01BD449808E23562D0A79C72CE50@exchange.ambientsoftware.com>
	<051466DAA0D608439E196797955018D76EF6@wavemachine.temporal-wave.com>
Message-ID: <46A03831.1090306@ca.com>

I think I'll buy the house next door to Jim's - sounds like you get 
fantastic free entertainment there!

(BTW, do any moose ever run out and butt the drummer?)

Jim Idle said the following on 20/07/2007 1:43 PM:
> Not sure about your ANTLRWorks vs command line differences, I don?t think there are any unless you have a much newer ANTLR tool jar than the one in ANTLRWorks. However, there is a runtime jar and a tool jar. It looks like you are not including the runtime jar in your command line compile somehow. Make sure you use the tool+runtime binary downloads.
>
>  
>
> However your rule, value, allows nothing to math and it looks like you have confused a parser rule (start with lower case) with a LEXER rule (Start with UpperCase).
>
>  
>
> Try this:
>
>  
>
> value : LETTER+;
>
>  
>
> LETTER : (?a?..?z?| ?A?..?Z?);
>
>  
>
> Or even:
>
>  
>
> value : WORD;
>
>  
>
> fragment
>
> LETTER : (?a?..?z?| ?A?..?Z?);
>
>  
>
> WORD: LETTER+;
>
>  
>
> 2) The same thing is happening here, you are confusing lexing and parsing. Until you get the hang of it more, don?t use the literals directly in the parser rules (rule names starting lower case), just UPPER CASE token names and make lexer rules to make the tokens. Then don?t try parsing thing in the lexer, just define the most raw non ambiguous TOKENS and use parser rules to work out how they combine.
>
>  
>
> 3) You are seeing the byproducts of your confusion ? I suggest a 7/6 time bass rhythm mixed with a 14/2 tom tom and camping on the river bank opposite my house with the other hippies J Other than that, I think that you are seeing problems because you are using the interpreter rather than the debugger in ANTLRWorks, but you have turned on all the predicates you could possibly think of ;-). While backtracking makes the errors seem to go away, there is then a need for a quad core QX6800 to parse it and you can?t run predicates in interpretive mode. I suggest a brand new drumstick and turning off the backtracking stuff and paying close attention to the ambiguity errors ANTLR tells  you about. J
>
>  
>
> Jim
>
>  
>
>  
>
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dan Hardy
> Sent: Thursday, July 19, 2007 8:02 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] New user issues / questions
>
>  
>
> I?m new to ANTLR, and am using v3.  I do intend to buy the book, for what that?s worth, but it?s not in my hands at the moment.  (And I?ll probably purchase some support if I decide to use this in production)?
>
>  
>
> I?m having just enough success to get excited about using ANTLR?but am running into some things I don?t quite understand.  
>
>  
>
> I have a moderately sophisticated grammar almost working, but have seen some odd things that I don?t understand.  So, I?ve tried to recreate some simple examples that might get to the core of the problem so I could post them here. 
>
>  
>
> I think I?m having three real issues.  The first is not critical, as I can work around it.
>
>  
>
> 1)  Ranges don?t seem to work.  I get different behavior in my regular ant compile vs testing in ANTLRWorks, but neither works.  In my compiled project, the ANTLR generated code calls matchRange(), which is an undefined method on the parser class.  Is it supposed to be present in a base class (org.antlr.runtime.Parser?).  On the other hand, if I try the following in ANTLRWorks, and I try to interpret input abc using rule value with the below grammar, I get a NoViableAltException.  It sure seems like it ought to match.
>
>  
>
> grammar Test;
>
>  
>
> options {output=AST; k=2; backtrack=true; memoize=true;}
>
>  
>
> value    :           ('a'..'z'|'A'..'Z')*;
>
>  
>
>  
>
> 2)  I can?t get the following to work in ANTLRWorks.  When parsing input record.abc against rule ?expression? I get a ?FailedPredicateException?.  It does, however parse ?foo? properly as a literal against the same rule.  record.abc should match the first rule, I would have thought.  I have a feeling that if I understand this better, it?ll help with my third issue.
>
>  
>
> grammar Test;
>
>  
>
> options {output=AST; k=2; backtrack=true; memoize=true;}
>
>  
>
> expression 
>
>             :           field | literal
>
>             ;
>
>             
>
> field      :           'record.' ('a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'|'j'|'k'|'l'|'m'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'w'|'x'|'y'|'z')+
>
>             ;
>
>  
>
> literal :  '\'' (Escape | ~('\''|'\\'))* '\''
>
>             ;
>
>             
>
> Escape :           '\\' ('\\'|'\'')
>
>             ;
>
>  
>
> 3)  This is a bit hard to explain, but I keep seeing ANTLR completely skip what I?d call ?non-matching? tokens and try to use a rule anyway, when the ?next? rule would have matched the entire sequence.  For example, when presented with a single-quoted literal for the grammar of example #2 above.  If I try to interpret expression ?foorecord? using that grammar, I get ? f o o and then NoViableAltException.   ?foorecords? works though.  If it matched the first single-quote against the literal rule and grabbed everything up to the next unescaped single-quote, I?d get what I want.  I?ve tried adding additional discriminators to my grammar, such as starting fields with {, functions with $, string literals with ?, etc., but I still see cases where this type of thing is causing me problems.
>
>  
>
>  
>
> I apologize for what I?m sure are very rudimentary questions, and appreciate any help.  I now realize I probably should have taken that extra compiler course instead of that course on African drumming?.
>
>  
>
> Regards,
>
> Dan
>
>  
>
>  
>
>   

From Hardy at PathworksSoftware.com  Thu Jul 19 22:58:27 2007
From: Hardy at PathworksSoftware.com (Dan Hardy)
Date: Thu, 19 Jul 2007 22:58:27 -0700
Subject: [antlr-interest] New user issues / questions
In-Reply-To: <051466DAA0D608439E196797955018D76EF6@wavemachine.temporal-wave.com>
Message-ID: <814F97B12E01BD449808E23562D0A79C72CE54@exchange.ambientsoftware.com>

 

Thanks.  This is starting to make more sense.   I think I was very thrown off by the interpreter vs. debugger thing in ANTLRWorks.  Your very simple example off ?value? and ?LETTER? doesn?t even work in the interpreter ? I get a FailedPredicateException evaluating anything simple.  It does work in the debugger.  Given that that simple example fails in the interpreter, is there some usefulness of the interpreter that I?m not seeing??

 

Dan

 

________________________________

From: Jim Idle [mailto:jimi at temporal-wave.com] 
Sent: Thursday, July 19, 2007 8:43 PM
To: Dan Hardy; antlr-interest at antlr.org
Subject: RE: [antlr-interest] New user issues / questions

 

Not sure about your ANTLRWorks vs command line differences, I don?t think there are any unless you have a much newer ANTLR tool jar than the one in ANTLRWorks. However, there is a runtime jar and a tool jar. It looks like you are not including the runtime jar in your command line compile somehow. Make sure you use the tool+runtime binary downloads.

 

However your rule, value, allows nothing to math and it looks like you have confused a parser rule (start with lower case) with a LEXER rule (Start with UpperCase).

 

Try this:

 

value : LETTER+;

 

LETTER : (?a?..?z?| ?A?..?Z?);

 

Or even:

 

value : WORD;

 

fragment

LETTER : (?a?..?z?| ?A?..?Z?);

 

WORD: LETTER+;

 

2) The same thing is happening here, you are confusing lexing and parsing. Until you get the hang of it more, don?t use the literals directly in the parser rules (rule names starting lower case), just UPPER CASE token names and make lexer rules to make the tokens. Then don?t try parsing thing in the lexer, just define the most raw non ambiguous TOKENS and use parser rules to work out how they combine.

 

3) You are seeing the byproducts of your confusion ? I suggest a 7/6 time bass rhythm mixed with a 14/2 tom tom and camping on the river bank opposite my house with the other hippies :-) Other than that, I think that you are seeing problems because you are using the interpreter rather than the debugger in ANTLRWorks, but you have turned on all the predicates you could possibly think of ;-). While backtracking makes the errors seem to go away, there is then a need for a quad core QX6800 to parse it and you can?t run predicates in interpretive mode. I suggest a brand new drumstick and turning off the backtracking stuff and paying close attention to the ambiguity errors ANTLR tells  you about. :-)

 

Jim

 

 

From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dan Hardy
Sent: Thursday, July 19, 2007 8:02 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] New user issues / questions

 

I?m new to ANTLR, and am using v3.  I do intend to buy the book, for what that?s worth, but it?s not in my hands at the moment.  (And I?ll probably purchase some support if I decide to use this in production)?

 

I?m having just enough success to get excited about using ANTLR?but am running into some things I don?t quite understand.  

 

I have a moderately sophisticated grammar almost working, but have seen some odd things that I don?t understand.  So, I?ve tried to recreate some simple examples that might get to the core of the problem so I could post them here. 

 

I think I?m having three real issues.  The first is not critical, as I can work around it.

 

1)   Ranges don?t seem to work.  I get different behavior in my regular ant compile vs testing in ANTLRWorks, but neither works.  In my compiled project, the ANTLR generated code calls matchRange(), which is an undefined method on the parser class.  Is it supposed to be present in a base class (org.antlr.runtime.Parser?).  On the other hand, if I try the following in ANTLRWorks, and I try to interpret input abc using rule value with the below grammar, I get a NoViableAltException.  It sure seems like it ought to match.

 

grammar Test;

 

options {output=AST; k=2; backtrack=true; memoize=true;}

 

value    :           ('a'..'z'|'A'..'Z')*;

 

 

2)   I can?t get the following to work in ANTLRWorks.  When parsing input record.abc against rule ?expression? I get a ?FailedPredicateException?.  It does, however parse ?foo? properly as a literal against the same rule.  record.abc should match the first rule, I would have thought.  I have a feeling that if I understand this better, it?ll help with my third issue.

 

grammar Test;

 

options {output=AST; k=2; backtrack=true; memoize=true;}

 

expression 

            :           field | literal

            ;

            

field      :           'record.' ('a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'|'j'|'k'|'l'|'m'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'w'|'x'|'y'|'z')+

            ;

 

literal :  '\'' (Escape | ~('\''|'\\'))* '\''

            ;

            

Escape :           '\\' ('\\'|'\'')

            ;

 

3)   This is a bit hard to explain, but I keep seeing ANTLR completely skip what I?d call ?non-matching? tokens and try to use a rule anyway, when the ?next? rule would have matched the entire sequence.  For example, when presented with a single-quoted literal for the grammar of example #2 above.  If I try to interpret expression ?foorecord? using that grammar, I get ? f o o and then NoViableAltException.   ?foorecords? works though.  If it matched the first single-quote against the literal rule and grabbed everything up to the next unescaped single-quote, I?d get what I want.  I?ve tried adding additional discriminators to my grammar, such as starting fields with {, functions with $, string literals with ?, etc., but I still see cases where this type of thing is causing me problems.

 

 

I apologize for what I?m sure are very rudimentary questions, and appreciate any help.  I now realize I probably should have taken that extra compiler course instead of that course on African drumming?.

 

Regards,

Dan

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070719/69fc0400/attachment-0001.html 

From b.laczkowski at astec.com.pl  Fri Jul 20 03:13:55 2007
From: b.laczkowski at astec.com.pl (=?ISO-8859-2?Q?Bart=B3omiej_=A3=B1czkowski?=)
Date: Fri, 20 Jul 2007 12:13:55 +0200
Subject: [antlr-interest] Hiding specific tokens in parser
Message-ID: <46A08AE3.7000703@astec.com.pl>

Hello,

Is there a possibility to hide some kinds of tokens in token stream in 
ANTLR 2.7.6? To be more precise I just want to have an EOL (end of line) 
token in token stream but I don't want the parser to see it if I don't 
call it in one of the rules. For example I want  to  have only one rule 
which should notice if EOL token is in the stream:
some_rule
   :   other_rule (EOL)?
   ;
But in the other rules this token should not be taken from the stream 
during parsing. I want this token to be skipped in parse process but  if 
it appears in rule then  parser should check if it is in a stream. Is 
there a possibility do to something like this in ANTLR?

-- 
Bart?omiej ??czkowski
Software Developer

ASTEC Sp. z o.o.
ul. Piaskowa 14, PL 65-209 Zielona G?ra
Tel: +48(0) 68 32 980 10
Fax: +48(0) 68 32 980 03

B.Laczkowski at astec.com.pl

www.astec.com.pl
www.gis.astec.com.pl
www.mdt-project.com
www.dict.pl
www.dep.pl


From antlr at jazillian.com  Fri Jul 20 08:32:55 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Fri, 20 Jul 2007 11:32:55 -0400
Subject: [antlr-interest] antlrworks tutorial problem
Message-ID: <46A0D5A7.2040002@jazillian.com>

I'm just starting to try to use antlrworks, running through the
"expression evaluation tutorial". I'm able to type in "2+3*4"
into the interpreter and that works fine, but when I go to the debugger,
it seems that the input pane is not editable - I can't type into it.
This is on windows, running antlrworks either from a cygwin command line
or just double-clicking on it.


From sedwards at harmonia.com  Fri Jul 20 08:30:43 2007
From: sedwards at harmonia.com (Sam Edwards)
Date: Fri, 20 Jul 2007 08:30:43 -0700
Subject: [antlr-interest] antlrworks tutorial problem
In-Reply-To: <46A0D5A7.2040002@jazillian.com>
Message-ID: <2AFB2E23E9794B4BA6A0431607D6458803567B88@ehost010-7.exch010.intermedia.net>

Hey Andy,

You'll need to go to the "Debugger" file menu and click "Debug". (or
Ctrl-D)

At that point you are given a few options, one of them the ability to
provide input text for the debugger.

Hope that helps,
-Sam Edwards 

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Andy Tripp
Sent: Friday, July 20, 2007 11:33 AM
To: antlr-interest
Subject: [antlr-interest] antlrworks tutorial problem

I'm just starting to try to use antlrworks, running through the
"expression evaluation tutorial". I'm able to type in "2+3*4"
into the interpreter and that works fine, but when I go to the debugger,
it seems that the input pane is not editable - I can't type into it.
This is on windows, running antlrworks either from a cygwin command line
or just double-clicking on it.


From kroepke at classdump.org  Fri Jul 20 08:36:35 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Fri, 20 Jul 2007 08:36:35 -0700
Subject: [antlr-interest] antlrworks tutorial problem
In-Reply-To: <46A0D5A7.2040002@jazillian.com>
References: <46A0D5A7.2040002@jazillian.com>
Message-ID: <33E08BF3-0BED-498A-B3CC-97B55610E963@classdump.org>


On Jul 20, 2007, at 8:32 AM, Andy Tripp wrote:

> I'm just starting to try to use antlrworks, running through the
> "expression evaluation tutorial". I'm able to type in "2+3*4"
> into the interpreter and that works fine, but when I go to the  
> debugger,
> it seems that the input pane is not editable - I can't type into it.
> This is on windows, running antlrworks either from a cygwin command  
> line
> or just double-clicking on it.

Do you mean the input pane in the lower left hand corner? That's  
never editable, but only
shows the input.
Start the debugger first, then a window should pop up that asks you  
for your input and the start rule.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From alessandro.feriani at gmail.com  Fri Jul 20 09:43:51 2007
From: alessandro.feriani at gmail.com (Alessandro Feriani)
Date: Fri, 20 Jul 2007 18:43:51 +0200
Subject: [antlr-interest] How do I selectively ignore tokens depending on
	parser context for ANTLR 2.7.7
Message-ID: <7c9a95830707200943h7b3fbc16lfe76fad4ce958984@mail.gmail.com>

Hi All
On this ANTLR web page
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1734
I found the solution of my problem..but is implemented for ANTLR version3.
How do I do for version 2.7.7?

Please advice me
Thanks in advance.

Alessandro
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070720/7e5b3ae6/attachment.html 

From nward at resqsoft.com  Fri Jul 20 09:45:32 2007
From: nward at resqsoft.com (Nathan Ward)
Date: Fri, 20 Jul 2007 12:45:32 -0400
Subject: [antlr-interest] Matching all "other" text
Message-ID: <001c01c7caed$63acd700$6400a8c0@nwardlt>

If I want to parse source code for a given programming language (C for
example), do I have to define the full grammar first or can I make a
catch-all rule that says "match anything not matched by other rules"? Or,
perhaps I need to look into catching and ignoring Exceptions in antlr. 

   Nathan

 
Nathan Ward
ResQSoft, Inc.
703.861.9103
www.resqsoft.com
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070720/33d5bec9/attachment.html 

From vbar at comp.cz  Fri Jul 20 11:54:49 2007
From: vbar at comp.cz (Vaclav Barta)
Date: Fri, 20 Jul 2007 20:54:49 +0200
Subject: [antlr-interest] Matching all "other" text
In-Reply-To: <001c01c7caed$63acd700$6400a8c0@nwardlt>
References: <001c01c7caed$63acd700$6400a8c0@nwardlt>
Message-ID: <200707202054.49569.vbar@comp.cz>

On Friday 20 July 2007 18:45, Nathan Ward wrote:
> If I want to parse source code for a given programming language (C for
> example), do I have to define the full grammar first or can I make a
Well, it depends on what you want to do with the parse results... For simple 
things - recognizing comments, for example - you might be able to avoid a 
full grammar, but in my experience, such shortcuts always end up way more
complicated than I expected at the start...

> catch-all rule that says "match anything not matched by other rules"? Or,
That won't work - that is, it won't work unless the other rules already match 
the full grammar.

> perhaps I need to look into catching and ignoring Exceptions in antlr.
I'd rather recommend looking at matching in ANTLR parsers and lexers (which 
work quite differently) and potentionally at using backtracking.

	Bye
		Vasek


From sam.ellis at arm.com  Fri Jul 20 12:15:02 2007
From: sam.ellis at arm.com (Sam Ellis)
Date: Fri, 20 Jul 2007 20:15:02 +0100
Subject: [antlr-interest] Value passed to String based rule parameter has
	spaces inserted after commas.
Message-ID: <C2C6C846.140AE%sam.ellis@arm.com>

I've using ANTLR Version 3.0 (May 17, 2007). I have found that quoted
strings passed to String-based rules in my grammar are having extra spaces
inserted into the string when it appears in the generated parser code.
Specifically, if the string in my grammar contains a comma, then a space is
inserted after the comma in the resulting code. Here is an example:

grammar Fruit;

options {
    language=Java;
}

fruit[String allowedFruit]
    :    NAME { System.out.println(allowedFruit);}
    ;

bowl
    : fruit["apple,orange"]
    ;

NAME    :    ('a' .. 'z')+
    ;

The code that is generated contains:

            // /Users/samellis/Fruit.g:12:7: ( fruit[\"apple,orange\"] )
            // /Users/samellis/Fruit.g:12:7: fruit[\"apple,orange\"]
...
            fruit("apple, orange");

So you can see that a space has appeared in the generated code (not in the
comments though). Bug in ANTLR perhaps?


-- 
Sam Ellis, RVDK Team Leader,
DevSys Product Engineering Group,          Tel: +44 (0) 1223 400516
ARM Ltd., 110 Fulbourn Road,               Fax: +44 (0) 1223 400887
Cambridge, CB1 9NJ                         mailto:Sam.Ellis at arm.com



-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From Stephen_Hardy at rabbit.com  Fri Jul 20 19:14:20 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Fri, 20 Jul 2007 19:14:20 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <DDD43CD1-E213-420D-835E-A6676035588E@cs.usfca.edu>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com><13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu><62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com><62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com><A89AB3EB-3452-4E9B-BE9D-6CCEC6A08BB0@cs.usfca.edu><62BABE024B7C074E9194E9727A41897901383325@dvs-sms-mail01.digi.com>
	<DDD43CD1-E213-420D-835E-A6676035588E@cs.usfca.edu>
Message-ID: <62BABE024B7C074E9194E9727A418979013839F0@dvs-sms-mail01.digi.com>


I managed to resolve this problem.  There was no circular reference, but
I made the mistake of blithely using null list pointers as template
parameters, when the grammar used "zero or more" arity (* operator).
Silly me, I already knew this was a problem for the '?' operator, but I
thought that lists were somehow handled differently.

The odd thing is that the null List objects were not causing null
pointer exceptions (as one would expect) but instead would cause
"random" data to be substituted into the template expansion or, in other
cases, would create infinite reference loops.

So now, the tree grammar is interspersed with stuff like

direct_abstract_declarator
    : abstract_declarator  (ads+=abstract_declarator_suffix)*
        -> template(
               ad={$abstract_declarator.st},
               ads={($ads==null?"":$ads)}) 
           "(<ad>)<ads; separator=\" \">"
;

Before, I had simply ads={$ads} which was no good.

Having to put in conditional expressions is not that much of a burden,
however it seems much cleaner to fix string templates so they check for
null, and substitute an empty string in this case -- this would be a
reasonable default.

Regards,
SJH


> -----Original Message-----
[cut]
> >
> > My tree grammar template rewrite rules, on the other hand, are
> > entirely
> > constructed using in-line (anonymous) templates -- look mum, no
> > java --
> > and hence if there are any circular references then they are
> > created by
> > the magic of ANTLR.
> >
> > If there is a recursive rule (say, compound statement in a C
grammar)
> > then nested compound statements get their own instance of the
> > template,
> > hence there can be no circular references at the java "pointer"
level?
> > If I am wrong, would you kindly provide a small counterexample?
> >
> > With respect, I would say that this potential for stack overflow
> > exceptions in an ANTLR-generated parser with no "open code" is a
> > serious
> > bug, especially if the bug is only revealed at run-time.
> 
> Well, this
> 
> ds={$declaration_specifiers.st}
> 
> is not exactly ANTLR code...you can refer to whatever you want... ;)
> 
> >> Those refs are what attributes are used in that template instance.
> >
> > There is something fishy going on.  If this is the list of
attributes,
> > then the given trace did not make sense.
> 
> You can easily create a template that includes itself using
> references to prior attributes and so on.	I'm afraid that ST is
> probably catching a correct cycle in your ST containment hierarchy.
> Is always caught my problems correctly.
> 
> Ter

From parrt at cs.usfca.edu  Fri Jul 20 19:24:51 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 20 Jul 2007 19:24:51 -0700
Subject: [antlr-interest] StringTemplate stack overflow exception,
	stringtemplate-3.0
In-Reply-To: <62BABE024B7C074E9194E9727A418979013839F0@dvs-sms-mail01.digi.com>
References: <62BABE024B7C074E9194E9727A41897901383239@dvs-sms-mail01.digi.com><13C1A319-A128-480D-A9B5-E9DEB5BCBE43@cs.usfca.edu><62BABE024B7C074E9194E9727A41897901383240@dvs-sms-mail01.digi.com><62BABE024B7C074E9194E9727A41897901383241@dvs-sms-mail01.digi.com><A89AB3EB-3452-4E9B-BE9D-6CCEC6A08BB0@cs.usfca.edu><62BABE024B7C074E9194E9727A41897901383325@dvs-sms-mail01.digi.com>
	<DDD43CD1-E213-420D-835E-A6676035588E@cs.usfca.edu>
	<62BABE024B7C074E9194E9727A418979013839F0@dvs-sms-mail01.digi.com>
Message-ID: <75F923A0-DA20-4176-B838-49872F393971@cs.usfca.edu>


On Jul 20, 2007, at 7:14 PM, Hardy, Stephen wrote:

>
> I managed to resolve this problem.  There was no circular  
> reference, but
> I made the mistake of blithely using null list pointers as template
> parameters, when the grammar used "zero or more" arity (* operator).
> Silly me, I already knew this was a problem for the '?' operator,  
> but I
> thought that lists were somehow handled differently.
>
> The odd thing is that the null List objects were not causing null
> pointer exceptions (as one would expect) but instead would cause
> "random" data to be substituted into the template expansion or, in  
> other
> cases, would create infinite reference loops.

Ouch, really?  hmm...

> So now, the tree grammar is interspersed with stuff like
>
> direct_abstract_declarator
>     : abstract_declarator  (ads+=abstract_declarator_suffix)*
>         -> template(
>                ad={$abstract_declarator.st},
>                ads={($ads==null?"":$ads)})
>            "(<ad>)<ads; separator=\" \">"
> ;
>
> Before, I had simply ads={$ads} which was no good.
>
> Having to put in conditional expressions is not that much of a burden,
> however it seems much cleaner to fix string templates so they check  
> for
> null, and substitute an empty string in this case -- this would be a
> reasonable default.

The optional and (...)* are both optional and yeah I need some kind  
of condition to yield null if not matched.  Surprised by random data  
though. hm...
Ter

From ld at galador.net  Fri Jul 20 20:56:03 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sat, 21 Jul 2007 13:56:03 +1000
Subject: [antlr-interest] lexer problem...
References: <013401c7ca06$942166e0$6fef31d2@vulcain>
	<051466DAA0D608439E196797955018D76EED@wavemachine.temporal-wave.com>
Message-ID: <014701c7cb4b$10753150$6fef31d2@vulcain>

Yeah man, that did it!!! :D
Big Thanks!
  ----- Original Message ----- 
  From: Jim Idle 
  To: antlr-interest at antlr.org 
  Sent: Friday, July 20, 2007 2:30 AM
  Subject: Re: [antlr-interest] lexer problem...


  I think that this question points out that many of us expect ATNLR to "just work it out" for us. All these problems are best solved with a mind experiment first "How would you scan it with the eye?", then break the rule at the different alternatives yourself and stick in the lookahead you perform with your mind. It will result in better generated code anyway:

   

  grammar fred;

   

  stat 

              : test+

              ;

  test

              :           (INT DOT ID)

              |           FLOAT

              ;

              

  fragment

  DIGIT    : '0'..'9'

              ;

   

  FLOAT : INT

                                      (

                                                    ('.' INT)=> '.' INT

                                                  | {$type = INT; }

                                      )

                          ;

   

  DOT     : '.' ;

                          

  Fragment                                  // Also ensures a token type INT is present

  INT       : DIGIT+;

   

  ID         :           ('A'..'Z' | 'a'..'z')+

              ;

   

  Jim

   

  From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
  Sent: Thursday, July 19, 2007 6:13 AM
  To: antlr-interest at antlr.org
  Subject: [antlr-interest] lexer problem...

   

  I have the following lexer rule:

  ==============

  FLOAT : ('0'..'9')+ '.' ('0'..'9')+ (EXPONENT_PART)? (FLOAT_TYPE_SUFFIX)?
   ;
  ==============

  as you can see: it require 1 or more number on both side of the DOT

   

  my problem is that with the follwoing input:

   

   

  ====

  1.ToString()

  ====

   

  instead of returning INT DOT ID

  it apparently try to return a FLOAT and I have the following error message when trying on the command line:

  ====

  line 1:2 required (...)+ loop did not match anything at character 'T'

  ====

   

  Any idea how to solve this lexer problem??

   

  Thanks! :D
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070721/e613342c/attachment-0001.html 

From Christian.Boitet at imag.fr  Sat Jul 21 03:19:54 2007
From: Christian.Boitet at imag.fr (Christian Boitet)
Date: Sat, 21 Jul 2007 15:49:54 +0530
Subject: [antlr-interest] Incremental Parsing: a simple practical solution
In-Reply-To: <1184636683.19773.16.camel@localhost.localdomain>
References: <b46e0d5e0707161751j4252257au303598fb87dfc308@mail.gmail.com>
	<1184635525.19773.11.camel@localhost.localdomain>
	<469C1BB9.3010002@ca.com>
	<1184636683.19773.16.camel@localhost.localdomain>
Message-ID: <a06240800c2c78905e382@[192.168.1.7]>

Hi,				21/7/07

At 18:44 -0700 16/07/07, Sohail Somani wrote:
>Well my possibly flawed assumption was that the grammar would look
>something like this:
>
>// csv parser
>startRule: singleRecord*;
>
>...
>
>If you start your parser at startRule then it will exhaust all input
>before returning, but if you start it at singleRecord, it should only
>care about enough tokens to satisfy the one rule.

As Jean-Claude Durand & I wrote earlier, there is a problem here 
because the LA seem to be constructed with the first non-terminal as 
axiom only.

Then, if you call your parser with another non-terminal as axiom, 
your LA may not work the way you expect.

In other words, the FOLLOW sets associated with each NT are in 
general different if you change the axiom. For example, if you write

// csv parser
startRule: singleRecord* "ENDRECORDS";
...

-"ENDRECORDS" and singleRecord but not EOF are in 
FOLLOW(singleRecord) if the axiom is startRule,
- but not if the axiom is singleRecord, in which case EOF only is expected.

If you parse a single record followed by "ENDRECORDS" with 
singleRecords as axiom, it will work while it should not. And if you 
have associated some action to ENDRECORDS, like performing terminal 
actions on the internal representation of your list of records, you 
would perform it for every incremental input of the form singleRecord 
"ENRECORDS".

Our solution in practice is simply to build as many parsers as we 
have increments, using the necessary rules only, or putting the 
"increment rule" first. If some NTs become unaccessible, that is OK, 
even expected.

That limits the set of increments to a predefined subset, true 
enough, but in practice it is not so interesting to go down to the 
smallest possible increments.

For example, if we compile decorated trees (in our case, linguistic 
trees), there is no need to go down to take each attribute as an 
increment: simply modify the whole list (which looks like a list of 
attributes in an XML tree), and recompile it after local 
modification(s).

Finally, Terence (I think) mentioned that grammar inheritance would 
be sometime be included in ANTLR-3, which would give a better 
solution.

Best,

Christian Boitet & Jean-Claude Durand

>On Tue, 2007-07-17 at 11:30 +1000, Jonathan Thomas wrote:
>>  How would one go about doing that, Sohail?
>>  I'm also mildly interested in such a solution.
>>
>>  Sohail Somani said the following on 17/07/2007 11:25 AM:
>>  > On Mon, 2007-07-16 at 20:51 -0400, Benji Smith wrote:
>>  >  
>>  > > The JavaCC parser works well, except that I can't parse the file
>>  > > record-by-record. I have to parse the entire file, returning a
>>  > > collection of Record objects at the end.
>>  > >    
>>  >
>>  > Set up your grammar to only do one record at a time. Then keep parsing
>>  > until you get back a null record (or whatever)
>>  >
>  > > Should work ;-)


From pink at odahoda.de  Sat Jul 21 05:55:05 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Sat, 21 Jul 2007 14:55:05 +0200
Subject: [antlr-interest] Value passed to String based rule parameter
	has spaces inserted after commas.
References: <C2C6C846.140AE%sam.ellis@arm.com>
Message-ID: <f7svna$r87$1@sea.gmane.org>

Sam Ellis wrote:

> I've using ANTLR Version 3.0 (May 17, 2007). I have found that quoted
> strings passed to String-based rules in my grammar are having extra spaces
> inserted into the string when it appears in the generated parser code.
> Specifically, if the string in my grammar contains a comma, then a space
> is inserted after the comma in the resulting code. Here is an example:
> 
> grammar Fruit;
> 
> options {
>     language=Java;
> }
> 
> fruit[String allowedFruit]
>     :    NAME { System.out.println(allowedFruit);}
>     ;
> 
> bowl
>     : fruit["apple,orange"]
>     ;
> 
> NAME    :    ('a' .. 'z')+
>     ;
> 
> The code that is generated contains:
> 
>             // /Users/samellis/Fruit.g:12:7: ( fruit[\"apple,orange\"] )
>             // /Users/samellis/Fruit.g:12:7: fruit[\"apple,orange\"]
> ...
>             fruit("apple, orange");
> 
> So you can see that a space has appeared in the generated code (not in the
> comments though). Bug in ANTLR perhaps?

Not a bug, but a limitation. The contents of [...] is a comma seperated list
of code fragments of the target language. ANTLR does not know anything
about the structure of the target language, it just splits the list by
comma, replaces $ and % references and passes it to the code generation
template, which construct a method call suitable for the target language.

So what ANTLR sees is: a rule with two arguments '"apple' and 'orange"'.
This is passed to the template which generates something like 
<rule>([list of arguments, seperated by ", "]);
Hence the additional space.

There not much ANTLR can do without knowing how strings, types,
comments, ... look like in the target language - that it would need a
complete grammar of each target language, which would make things way more
difficult to implement.

So finally: to work around this limitation, use something like that:

bowl
    : { f = "apple,orange"; }
      fruit[f]
    ;

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From rschulz at sonic.net  Sat Jul 21 07:17:07 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sat, 21 Jul 2007 07:17:07 -0700
Subject: [antlr-interest] Value passed to String based rule parameter
	has spaces inserted after commas.
In-Reply-To: <f7svna$r87$1@sea.gmane.org>
References: <C2C6C846.140AE%sam.ellis@arm.com> <f7svna$r87$1@sea.gmane.org>
Message-ID: <200707210717.07889.rschulz@sonic.net>

On Saturday 21 July 2007 05:55, Benjamin Niemann wrote:
> Sam Ellis wrote:
> > ...
>
> So finally: to work around this limitation, use something like that:

Or, in the original construction, an octal or unicode escape, depending 
on target language, could be used instead of the literal comma, right?


> bowl
>
>     : { f = "apple,orange"; }
>
>       fruit[f]
>     ;


Randall Schulz

From sam.ellis at arm.com  Sat Jul 21 12:11:09 2007
From: sam.ellis at arm.com (Sam Ellis)
Date: Sat, 21 Jul 2007 20:11:09 +0100
Subject: [antlr-interest] Value passed to String based rule parameter
	has spaces inserted after commas.
In-Reply-To: <f7svna$r87$1@sea.gmane.org>
Message-ID: <C2C818DD.140C5%sam.ellis@arm.com>

On 21/7/07 13:55, "Benjamin Niemann" <pink at odahoda.de> wrote:
> There not much ANTLR can do without knowing how strings, types,
> comments, ... look like in the target language - that it would need a
> complete grammar of each target language, which would make things way more
> difficult to implement.

It makes sense, though I guess I'd assumed it might be doing some minimal
braces/quotes matching or allow characters to be escaped.


> So finally: to work around this limitation, use something like that:
> 
> bowl
>     : { f = "apple,orange"; }
>       fruit[f]
>     ;

I have a lot of such rule parameters... As I'm splitting the string up into
an array inside the rule action anyway the easiest for me was to split on
comma+space instead of just comma. Really, of course, I should look at
passing in an array and avoid the run-time hit of splitting these strings at
all, but that's an enhancement for another day... Thanks for the
suggestions.


-- 
Sam Ellis, RVDK Team Leader,
DevSys Product Engineering Group,          Tel: +44 (0) 1223 400516
ARM Ltd., 110 Fulbourn Road,               Fax: +44 (0) 1223 400887
Cambridge, CB1 9NJ                         mailto:Sam.Ellis at arm.com



-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From ld at galador.net  Sat Jul 21 16:59:10 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 22 Jul 2007 09:59:10 +1000
Subject: [antlr-interest] various question on tree parsing
Message-ID: <002001c7cbf3$230acbb0$6fef31d2@vulcain>

I have finished my recognizer (i.e. parser + lexer), tested it with various input, and now I want to do something with the result.
as I build an AST my 1st idea was to build a tree parser.

- here comes the 1st question:

yesterday I read the book about tree grammar, apparently tree grammar cannot output tree.
so how can I do constant reduction with TreeGrammar?
I mean let's say I have the following tree fragment

^(PLUS ID["a"] ^(PLUS INT["3"] INT["4"]))

I would like to simplify it as
^(PLUS ID["a"] INT["7"])

and while a tree grammar "seem" perfect for that, I wonder how to get around the fact it cannot output an other tree?
(maybe modifying the input tree itself? how do I do that?)


- 2nd:
let's say I have this tree instead
^(PLUS INT["3"] ^(PLUS ID["a"] INT["4"]))

it could benefit from the same reduction but it is less obvious, any tip on how to do that?


- 3rd:
I was thinking to do multiple analysis pass on the tree: variable checking, constant reduction, code generation.
and while ANTLR book recommand to do (multiple?) tree parser I'm thinking than generating my own class of tree instead of AST and simply do the work in code with special method in my tree implementation seems easier.
What do you think?

Like the above question: I could call a method "simplify" on my tree and it would recursively check itself for binary expression with 2 constant and simplify them. That solve my problem that tree grammar cannot output tree.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070722/6f353319/attachment.html 

From Stephen_Hardy at rabbit.com  Sat Jul 21 18:05:38 2007
From: Stephen_Hardy at rabbit.com (Hardy, Stephen)
Date: Sat, 21 Jul 2007 18:05:38 -0700
Subject: [antlr-interest] various question on tree parsing
In-Reply-To: <002001c7cbf3$230acbb0$6fef31d2@vulcain>
References: <002001c7cbf3$230acbb0$6fef31d2@vulcain>
Message-ID: <62BABE024B7C074E9194E9727A418979013839F7@dvs-sms-mail01.digi.com>

Lloyd,

 

I have a similar sort of problem.  I use a couple of solutions to
rewriting the tree:

 

One solution is to add new "imaginary tokens" that don't exist in the
input syntax, but can be recognized by the tree grammar.  This works in
the AST construction phase, i.e. the parser (not the tree parser).  You
then change the tree parser to accept the new tokens and ignore the
"raw" tokens.  For example, in your case of constant folding arithmetic
expressions, you might add a new token called CONST_RESULT and allow
expression trees to be of the form

 

  ^(binary_operator  expression expression (CONST_RESULT const_value)? )

 

Then, you also change the AST parser to recognize the optional
CONST_RESULT and use it instead of the two sub-expressions if it exists.
Note that the addition of the CONST_RESULT subtree is performed in the
@after{...} block, which is also a good place to trim the original
expression subtrees if desired.

 

Another solution is to evaluate and rewrite the expression tree, also in
the @after{...} block, using the CommonTree object methods.  This would
avoid the necessity to create new imaginary tokens.  In this example,
you might completely rewrite $retval.tree to be the tree which
represents a constant.

 

For my application, I like the first approach better, since information
is simply augmented rather than being permanently lost.  The small
disadvantage is that the AST parser is no longer such a close analogy to
the rewrite rules in the original grammar.

 

Regards,

SJH

 

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
Sent: Saturday, July 21, 2007 4:59 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] various question on tree parsing

 

I have finished my recognizer (i.e. parser + lexer), tested it with
various input, and now I want to do something with the result.

as I build an AST my 1st idea was to build a tree parser.

 

- here comes the 1st question:

 

yesterday I read the book about tree grammar, apparently tree grammar
cannot output tree.

so how can I do constant reduction with TreeGrammar?

I mean let's say I have the following tree fragment

 

^(PLUS ID["a"] ^(PLUS INT["3"] INT["4"]))

 

I would like to simplify it as

^(PLUS ID["a"] INT["7"])

 

and while a tree grammar "seem" perfect for that, I wonder how to get
around the fact it cannot output an other tree?
(maybe modifying the input tree itself? how do I do that?)

 

 

- 2nd:

let's say I have this tree instead

^(PLUS INT["3"] ^(PLUS ID["a"] INT["4"]))

 

it could benefit from the same reduction but it is less obvious, any tip
on how to do that?

 

 

- 3rd:

I was thinking to do multiple analysis pass on the tree: variable
checking, constant reduction, code generation.

and while ANTLR book recommand to do (multiple?) tree parser I'm
thinking than generating my own class of tree instead of AST and simply
do the work in code with special method in my tree implementation seems
easier.

What do you think?

 

Like the above question: I could call a method "simplify" on my tree and
it would recursively check itself for binary expression with 2 constant
and simplify them. That solve my problem that tree grammar cannot output
tree.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070721/ffcdab31/attachment.html 

From ld at galador.net  Sat Jul 21 18:10:57 2007
From: ld at galador.net (Lloyd Dupont)
Date: Sun, 22 Jul 2007 11:10:57 +1000
Subject: [antlr-interest] various question on tree parsing
References: <002001c7cbf3$230acbb0$6fef31d2@vulcain>
	<62BABE024B7C074E9194E9727A418979013839F7@dvs-sms-mail01.digi.com>
Message-ID: <004201c7cbfd$298fe8d0$6fef31d2@vulcain>

Interesting ideas....
Thanks for the tip!
  ----- Original Message ----- 
  From: Hardy, Stephen 
  To: antlr-interest at antlr.org 
  Sent: Sunday, July 22, 2007 11:05 AM
  Subject: Re: [antlr-interest] various question on tree parsing


  Lloyd,

   

  I have a similar sort of problem.  I use a couple of solutions to rewriting the tree:

   

  One solution is to add new "imaginary tokens" that don't exist in the input syntax, but can be recognized by the tree grammar.  This works in the AST construction phase, i.e. the parser (not the tree parser).  You then change the tree parser to accept the new tokens and ignore the "raw" tokens.  For example, in your case of constant folding arithmetic expressions, you might add a new token called CONST_RESULT and allow expression trees to be of the form

   

    ^(binary_operator  expression expression (CONST_RESULT const_value)? )

   

  Then, you also change the AST parser to recognize the optional CONST_RESULT and use it instead of the two sub-expressions if it exists.  Note that the addition of the CONST_RESULT subtree is performed in the @after{...} block, which is also a good place to trim the original expression subtrees if desired.

   

  Another solution is to evaluate and rewrite the expression tree, also in the @after{...} block, using the CommonTree object methods.  This would avoid the necessity to create new imaginary tokens.  In this example, you might completely rewrite $retval.tree to be the tree which represents a constant.

   

  For my application, I like the first approach better, since information is simply augmented rather than being permanently lost.  The small disadvantage is that the AST parser is no longer such a close analogy to the rewrite rules in the original grammar.

   

  Regards,

  SJH

   

   


------------------------------------------------------------------------------

  From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Lloyd Dupont
  Sent: Saturday, July 21, 2007 4:59 PM
  To: antlr-interest at antlr.org
  Subject: [antlr-interest] various question on tree parsing

   

  I have finished my recognizer (i.e. parser + lexer), tested it with various input, and now I want to do something with the result.

  as I build an AST my 1st idea was to build a tree parser.

   

  - here comes the 1st question:

   

  yesterday I read the book about tree grammar, apparently tree grammar cannot output tree.

  so how can I do constant reduction with TreeGrammar?

  I mean let's say I have the following tree fragment

   

  ^(PLUS ID["a"] ^(PLUS INT["3"] INT["4"]))

   

  I would like to simplify it as

  ^(PLUS ID["a"] INT["7"])

   

  and while a tree grammar "seem" perfect for that, I wonder how to get around the fact it cannot output an other tree?
  (maybe modifying the input tree itself? how do I do that?)

   

   

  - 2nd:

  let's say I have this tree instead

  ^(PLUS INT["3"] ^(PLUS ID["a"] INT["4"]))

   

  it could benefit from the same reduction but it is less obvious, any tip on how to do that?

   

   

  - 3rd:

  I was thinking to do multiple analysis pass on the tree: variable checking, constant reduction, code generation.

  and while ANTLR book recommand to do (multiple?) tree parser I'm thinking than generating my own class of tree instead of AST and simply do the work in code with special method in my tree implementation seems easier.

  What do you think?

   

  Like the above question: I could call a method "simplify" on my tree and it would recursively check itself for binary expression with 2 constant and simplify them. That solve my problem that tree grammar cannot output tree.

   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070722/b975df26/attachment-0001.html 

From xpegenaute at telepolis.es  Sun Jul 22 09:59:37 2007
From: xpegenaute at telepolis.es (Xavier Pegenaute)
Date: Sun, 22 Jul 2007 18:59:37 +0200
Subject: [antlr-interest] Binary files and different int types
Message-ID: <46A38CF9.9080507@telepolis.es>

Hello,

I am trying to parse a binary file with a set of values but I have some 
problems.  I have been reading the user manual and seems that it is ok 
for a basic datatype but I don't know how I can support these other 
different data types:
- Int 32
- Int 64
- Double

any one know how I can differentiate every rule?

The binary file "follow" this rule:
(Double Int32 Int32 Int64 Int32)*

Thanks & Regards.
Xavi.

From jaluber at gmx.de  Sun Jul 22 10:12:24 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Sun, 22 Jul 2007 19:12:24 +0200
Subject: [antlr-interest] Scopes in lexers don't work
Message-ID: <46A38FF8.4000306@gmx.de>

Hello!

I've discovered that scopes declared in lexer grammar are generated only
half correct. There is simply no code which pushes a new object on the
stack. This results in an access violation every time I want to use the
scope. Below is Kay's grammar for testing purposes. I find it strange
that one can use scopes in pure lexers, if they aren't entirely
supported. Did this bug just fall through the cracks or am I forced to
use some global variables instead?

Best regards,
Johannes Luber

lexer grammar TestScope;

scope Scope {
    int foo;
}

TOKEN
scope Scope;
    :    ('A' {$Scope::foo = 0;} |'B' {$Scope::foo = 1;}) SUBFOO 'B'
    ;

fragment
SUBFOO
    :    ({$Scope::foo > 0}? 'SUB') 'FOO'
    ;

From waldemarsauer at hotmail.com  Sun Jul 22 13:38:20 2007
From: waldemarsauer at hotmail.com (Waldemar Sauer)
Date: Sun, 22 Jul 2007 16:38:20 -0400
Subject: [antlr-interest] Parser rule parameters makes C output crash
Message-ID: <BAY136-DAV17B04EEC0172C8BB86359DBAF60@phx.gbl>

I sent this to the antlr mailing list yesterday, but it did not seem to
arrive onto any of the mailing lists, so I'm sorry if this is a repeat
posting.

 

I have a parser problem that I hope someone can give me some help with.  The
parser rule is as follows:

 

varType [Gpi_Var* v, Gpi_Modifiers* mods]: varType0[v, mods]
(refPtrSpecifiers[v])? (varArraySpecifiers[v])?;

 

The problem that I have is that when I create C output, the portion that
parsers refPtrSpecifiers seems to be put into a syntactic predicate
function; "static void synpred14_fragment(pzcppParser ctx)" in my case.  The
problem is that the parameters v and mods for varType are not passed to this
function.  So antlr compiles the grammar just fine, but when I try to
compile the generated C file, "v" is not defined for the function call to
refPtrSpecifiers.  Rewriting the rule as "... (refPtrSpecifiers[v] | ) .."
produces the same result.  Am I doing this wrong?  If not, is there a
temporary workaround for this (hopefully one that does not involve global
variables)?

 

 - Waldemar

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070722/85b2f4a4/attachment.html 

From antlr at mirality.co.nz  Sun Jul 22 14:19:40 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 23 Jul 2007 09:19:40 +1200
Subject: [antlr-interest] Binary files and different int types
In-Reply-To: <46A38CF9.9080507@telepolis.es>
References: <46A38CF9.9080507@telepolis.es>
Message-ID: <20070722211945.C88AB11E9CD@www.antlr.org>

At 04:59 23/07/2007, Xavier Pegenaute wrote:
 >I am trying to parse a binary file with a set of values but I 
have
 >some problems.  I have been reading the user manual and seems 
that
 >it is ok for a basic datatype but I don't know how I can support 

 >these other different data types:
 >- Int 32
 >- Int 64
 >- Double
 >
 >any one know how I can differentiate every rule?
 >
 >The binary file "follow" this rule:
 >(Double Int32 Int32 Int64 Int32)*

ANTLR isn't really designed for parsing binary files, since 
normally those don't actually require any parsing at all -- 
they're trivial to read in.  Especially if as you said the whole 
file is a fixed pattern of records -- that's like 3 lines of C 
code to read in.

However, if you really want to do it, then what you should do 
depends on how you want to deal with the output.

You could make the above rule (without the *) a lexer rule to 
treat the entire set as one token.  That would work, but I suspect 
wouldn't be all that useful.

Another option would be to make only one token, a Byte, and change 
everything else to be parser rules in terms of Bytes.  This will 
let you be a bit more context-sensitive, but you'll have to 
manipulate the tokens a bit if you want to combine the resulting 
value.

Really, I think just reading it directly instead of using ANTLR is 
your best bet.


From kroepke at classdump.org  Sun Jul 22 16:32:41 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 22 Jul 2007 16:32:41 -0700
Subject: [antlr-interest] Scopes in lexers don't work
In-Reply-To: <46A38FF8.4000306@gmx.de>
References: <46A38FF8.4000306@gmx.de>
Message-ID: <0B0BC71E-2086-4EA6-9E33-E570FFE088A7@classdump.org>


On Jul 22, 2007, at 10:12 AM, Johannes Luber wrote:

> I've discovered that scopes declared in lexer grammar are generated  
> only
> half correct. There is simply no code which pushes a new object on the
> stack. This results in an access violation every time I want to use  
> the
> scope. Below is Kay's grammar for testing purposes. I find it strange
> that one can use scopes in pure lexers, if they aren't entirely
> supported. Did this bug just fall through the cracks or am I forced to
> use some global variables instead?


I'm sorry, you are right. There were two template invocations missing  
from
lexerRule.
When Ter is back, I'll talk to him and then submit. Should then be  
included
in the next daily build/release.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From kroepke at classdump.org  Sun Jul 22 17:58:18 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 22 Jul 2007 17:58:18 -0700
Subject: [antlr-interest] Scopes in lexers don't work
In-Reply-To: <0B0BC71E-2086-4EA6-9E33-E570FFE088A7@classdump.org>
References: <46A38FF8.4000306@gmx.de>
	<0B0BC71E-2086-4EA6-9E33-E570FFE088A7@classdump.org>
Message-ID: <F0E2DC28-063F-4D47-9747-6AC856693A11@classdump.org>

On Jul 22, 2007, at 4:32 PM, Kay Roepke wrote:

> I'm sorry, you are right. There were two template invocations  
> missing from
> lexerRule.
> When Ter is back, I'll talk to him and then submit. Should then be  
> included
> in the next daily build/release.

Just for reference: It's fixed in the depot. Until there's a build  
available, you can use
the Java.stg from fisheye:
<http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/ 
templates/Java/Java.stg?r=3930>

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr-list at arizona-software.ch  Sun Jul 22 18:05:22 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 22 Jul 2007 18:05:22 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
Message-ID: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>

Hi,

The version 1.1 of ANTLRWorks is now available at www.antlr.org/works.

New feature:
     [AW-94] - Ability to choose a text file for the debugger input  
within ANTLRWorks
     [AW-93] - Decision DFA grammar highlighting

Improvement:
     [AW-71] - Floating window should remember last size when detached
     [AW-82] - Add ctrl-d to "delete char under cursor" as in emacs
     [AW-85] - Double-click on the GoToRule popup now jumps to the rule
     [AW-86] - Added Visual Studio-style auto-completion menu
     [AW-87] - Double/triple click to select word + extending  
selection + dragging of word/line
     [AW-89] - Visual clue when the grammar is not saved when not on  
Mac OS X
     [AW-91] - Fix Find and Replace Dialog and add alert when  
reaching the beginning/end of document
     [AW-95] - Improved tree rendering speed on screen

Bug fix:
     [AW-76] - Export Bitmap for syntax diagram does not work
     [AW-79] - Disable CTRL-Z when debuggin in text editor (check  
other shortcuts also)
     [AW-80] - Yellow triangle is visible over the bottom component  
of the window when scrolling with the editor
     [AW-81] - Display an additional / after a complex comment
     [AW-84] - Plugin does not save the editor when Save Project is  
invoked

Note that the version of ANTLR used in this version of ANTLRWorks has  
some changes (see the readme file file of ANTLR) that affect the  
target language generation.

Thanks to Matthew J. Diehl for its contribution in the grammar editor.

Regards,

Jean


From rschulz at sonic.net  Sun Jul 22 18:16:30 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 22 Jul 2007 18:16:30 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
Message-ID: <200707221816.30919.rschulz@sonic.net>

On Sunday 22 July 2007 18:05, Jean Bovet wrote:
> Hi,
>
> The version 1.1 of ANTLRWorks is now available at
> www.antlr.org/works.

Downloads from the antlr.org continue to exhibit problems in the form of 
stalled transfers. This seems to be a perennial problem with this site. 
What's the deal? Why does this problem persist over so many months?


Randall Schulz

From rschulz at sonic.net  Sun Jul 22 18:19:49 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 22 Jul 2007 18:19:49 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
Message-ID: <200707221819.49138.rschulz@sonic.net>

On Sunday 22 July 2007 18:05, Jean Bovet wrote:
> Hi,
>
> The version 1.1 of ANTLRWorks is now available at
> www.antlr.org/works.

Do you plan to release the IDEA plug-in via their inernal network, 
making it available in the IDEA plug-in installer section of the 
settings dialog? At the moment, it's still showing version 1.0.2.


Randall Schulz

From parrt at cs.usfca.edu  Sun Jul 22 18:37:22 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 22 Jul 2007 18:37:22 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <200707221816.30919.rschulz@sonic.net>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
Message-ID: <52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>


On Jul 22, 2007, at 6:16 PM, Randall R Schulz wrote:

> On Sunday 22 July 2007 18:05, Jean Bovet wrote:
>> Hi,
>>
>> The version 1.1 of ANTLRWorks is now available at
>> www.antlr.org/works.
>
> Downloads from the antlr.org continue to exhibit problems in the  
> form of
> stalled transfers. This seems to be a perennial problem with this  
> site.
> What's the deal? Why does this problem persist over so many months?

Because it's not in my control.  Our IT group has been unable to  
solve.  They recently found a weird possible incompatibility with our  
linux NIC driver and cisco router.  If that doesn't explain it, I  
have go ahead from the dean to move it off campus and he'll pay for  
it. :)  Been waiting for sysadmin to return on Monday to check  
drivers.  Sorry.  Pretty sad and embarrassing.

Ter


From kroepke at classdump.org  Sun Jul 22 18:36:33 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 22 Jul 2007 18:36:33 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <200707221816.30919.rschulz@sonic.net>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
Message-ID: <D9B59DB2-F6D0-4484-8FC3-79F66BC80391@classdump.org>


On Jul 22, 2007, at 6:16 PM, Randall R Schulz wrote:

> Downloads from the antlr.org continue to exhibit problems in the  
> form of
> stalled transfers. This seems to be a perennial problem with this  
> site.
> What's the deal? Why does this problem persist over so many months?

Where do you download from? The recent move seems to have fixed this  
problem
for me in Germany (though I can't test it right now, because I sit mere
yards away from the server, I guess...)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From antlr-list at arizona-software.ch  Sun Jul 22 19:21:54 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 22 Jul 2007 19:21:54 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <200707221819.49138.rschulz@sonic.net>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221819.49138.rschulz@sonic.net>
Message-ID: <7C001F30-29A1-4D5B-93B3-B08907739761@arizona-software.ch>

It is now available through IntelliJ.

Regards,

Jean

On Jul 22, 2007, at 6:19 PM, Randall R Schulz wrote:

> On Sunday 22 July 2007 18:05, Jean Bovet wrote:
>> Hi,
>>
>> The version 1.1 of ANTLRWorks is now available at
>> www.antlr.org/works.
>
> Do you plan to release the IDEA plug-in via their inernal network,
> making it available in the IDEA plug-in installer section of the
> settings dialog? At the moment, it's still showing version 1.0.2.
>
>
> Randall Schulz


From rschulz at sonic.net  Sun Jul 22 19:55:45 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Sun, 22 Jul 2007 19:55:45 -0700
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
Message-ID: <200707221955.46084.rschulz@sonic.net>

On Sunday 22 July 2007 18:37, Terence Parr wrote:
> On Jul 22, 2007, at 6:16 PM, Randall R Schulz wrote:
> > ...
> > Downloads from the antlr.org continue to exhibit problems in the
> > form of stalled transfers. This seems to be a perennial problem with
> > this site. What's the deal? Why does this problem persist over so
> > many months? 
>
> Because it's not in my control.  Our IT group has been unable to
> solve.  They recently found a weird possible incompatibility with our
> linux NIC driver and cisco router.  If that doesn't explain it, I
> have go ahead from the dean to move it off campus and he'll pay for
> it. :)  Been waiting for sysadmin to return on Monday to check
> drivers.  Sorry.  Pretty sad and embarrassing.

The symptom is very reminiscent of a problem I once had with dial-up to 
particular modem banks. At the time, I tracked it down to a problem 
with checksum generation, causing repeated retries with progressively 
(exponential!) increasing backoff times.

Perhaps your network hardware is very, very old!


> Ter


Randall Schulz

From bsder at allcaps.org  Mon Jul 23 00:46:47 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Mon, 23 Jul 2007 00:46:47 -0700
Subject: [antlr-interest] How to retrieve free-form text between delimiters?
Message-ID: <46A45CE7.5020303@allcaps.org>

I'm trying to create a parser for a VCD (Verilog change dump) file.  I'm 
trying to pull the free-form text from between delimiters.  My VCD file 
looks like this:


$date
         Fri Jan 26 11:28:51 2007
$end
$comment
         Could be anything! 12345 #12345
$end
$comment Could be anything 2! 12345 #12345 $end


How do I retreive the text from between the $date ... $end or $comment 
... $end pairs?

I tried this grammar:


grammar vcdfile;

vcd	:	declaration_command+ EOF
	;

declaration_command
	: date_dcmd | comment_dcmd
	;

date_dcmd:	'$date' ( options {greedy=false;} : . )* '$end' 
{System.out.println("D:"+$date_dcmd.text);} ;
comment_dcmd:	'$comment' ( options {greedy=false;} : . )* '$end' 
{System.out.println("C:"+$comment_dcmd.text);};

INT	:	'0'..'9'+;
WS	:	(' '|'\t'|'\n'|'\r')+ {skip();} ;


However, I wind up with a bunch of errors like this:
line 2:8 no viable alternative at character 'F'
line 2:9 no viable alternative at character 'r'
line 2:10 no viable alternative at character 'i'
<... lots more deleted ...>

And output like this:
D:$date261128512007$end
C:$comment1234512345$end
C:$comment21234512345$end

Any suggestions as to what I need to do?  I thought that a . was 
supposed to match *anything*, but clearly my definition of anything and 
ANTLR's definition of anything don't correspond.

Any advice for solving this?

Thanks,
-a


From pink at odahoda.de  Mon Jul 23 00:57:34 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Mon, 23 Jul 2007 09:57:34 +0200
Subject: [antlr-interest] ANTLRWorks 1.1 available
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
	<D9B59DB2-F6D0-4484-8FC3-79F66BC80391@classdump.org>
Message-ID: <f81n1e$32p$1@sea.gmane.org>

Kay Roepke wrote:

> 
> On Jul 22, 2007, at 6:16 PM, Randall R Schulz wrote:
> 
>> Downloads from the antlr.org continue to exhibit problems in the
>> form of
>> stalled transfers. This seems to be a perennial problem with this
>> site.
>> What's the deal? Why does this problem persist over so many months?
> 
> Where do you download from? The recent move seems to have fixed this
> problem
> for me in Germany (though I can't test it right now, because I sit mere
> yards away from the server, I guess...)

Can't confirm this. Although it has been worse, larger downloads
(tarballs...) still stall from time to time. I'm also in Germany.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From antlr at mirality.co.nz  Mon Jul 23 01:27:06 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 23 Jul 2007 20:27:06 +1200
Subject: [antlr-interest] ANTLRWorks 1.1 available
In-Reply-To: <200707221955.46084.rschulz@sonic.net>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
	<200707221955.46084.rschulz@sonic.net>
Message-ID: <20070723082709.9844A11E91A@www.antlr.org>

At 14:55 23/07/2007, Randall R Schulz wrote:
 >The symptom is very reminiscent of a problem I once had with
 >dial-up to particular modem banks. At the time, I tracked it
 >down to a problem with checksum generation, causing repeated
 >retries with progressively (exponential!) increasing backoff
 >times.

Actually, that reminds me.  Many motherboards with integrated 
network cards are now coming with something called "Checksum 
Offload" switched on.  This supposedly makes throughput better by 
making the CPU do more of the checksumming work instead of the 
NIC, but in practice all it seems to do is to significantly 
increase the number of bad packets and consequently packet 
retries.  So it might pay to check that out.  (I'm not sure if 
it's a driver-level "feature" or if it's something in the 
hardware, and consequently whether it'll affect non-Windows 
servers or not.)


From tbrandonau at gmail.com  Mon Jul 23 01:39:31 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 23 Jul 2007 18:39:31 +1000
Subject: [antlr-interest] How to retrieve free-form text between
	delimiters?
In-Reply-To: <46A45CE7.5020303@allcaps.org>
References: <46A45CE7.5020303@allcaps.org>
Message-ID: <ebc876d70707230139m2c3fc29fscef997fbb6dc12d8@mail.gmail.com>

On 7/23/07, Andrew Lentvorski <bsder at allcaps.org> wrote:
> I'm trying to create a parser for a VCD (Verilog change dump) file.  I'm
> trying to pull the free-form text from between delimiters.  My VCD file
> looks like this:
>
>
> $date
>          Fri Jan 26 11:28:51 2007
> $end
> $comment
>          Could be anything! 12345 #12345
> $end
> $comment Could be anything 2! 12345 #12345 $end
>
>
> How do I retreive the text from between the $date ... $end or $comment
> ... $end pairs?
>
> I tried this grammar:
>
>
> grammar vcdfile;
>
> vcd     :       declaration_command+ EOF
>         ;
>
> declaration_command
>         : date_dcmd | comment_dcmd
>         ;
>
> date_dcmd:      '$date' ( options {greedy=false;} : . )* '$end'
> {System.out.println("D:"+$date_dcmd.text);} ;
> comment_dcmd:   '$comment' ( options {greedy=false;} : . )* '$end'
> {System.out.println("C:"+$comment_dcmd.text);};
>
> INT     :       '0'..'9'+;
> WS      :       (' '|'\t'|'\n'|'\r')+ {skip();} ;
>
>
> However, I wind up with a bunch of errors like this:
> line 2:8 no viable alternative at character 'F'
> line 2:9 no viable alternative at character 'r'
> line 2:10 no viable alternative at character 'i'
> <... lots more deleted ...>
>
> And output like this:
> D:$date261128512007$end
> C:$comment1234512345$end
> C:$comment21234512345$end
>
> Any suggestions as to what I need to do?  I thought that a . was
> supposed to match *anything*, but clearly my definition of anything and
> ANTLR's definition of anything don't correspond.
>
> Any advice for solving this?
A . does match anything but in a parser this means any token not any
character, so as the only thing your lexer matches is digits and
whitespace anything else is an error. You either need to move your
date and comment rules to the lexer or make the lexer return tokens
for any input that can occur in dates and comments. If you add a lexer
rule after other rules like:
ANY: .;
Then your example should work. However, depending on how you want to
process input moving the rules to the lexer may be a better option.

Tom.
>
> Thanks,
> -a
>
>

From bsder at allcaps.org  Mon Jul 23 02:21:29 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Mon, 23 Jul 2007 02:21:29 -0700
Subject: [antlr-interest] How to retrieve free-form text
	between	delimiters?
In-Reply-To: <ebc876d70707230139m2c3fc29fscef997fbb6dc12d8@mail.gmail.com>
References: <46A45CE7.5020303@allcaps.org>
	<ebc876d70707230139m2c3fc29fscef997fbb6dc12d8@mail.gmail.com>
Message-ID: <46A47319.6060001@allcaps.org>

Thomas Brandon wrote:
> On 7/23/07, Andrew Lentvorski <bsder at allcaps.org> wrote:
>> Any advice for solving this?
> A . does match anything but in a parser this means any token not any
> character, so as the only thing your lexer matches is digits and
> whitespace anything else is an error. You either need to move your
> date and comment rules to the lexer or make the lexer return tokens
> for any input that can occur in dates and comments. If you add a lexer
> rule after other rules like:
> ANY: .;
> Then your example should work. However, depending on how you want to
> process input moving the rules to the lexer may be a better option.

Are there any examples of this I could look at?

What are the up/downsides of using an ANY vs. moving this back further 
into the parser?

If it helps, the format of the file (complete with kinda funky grammar 
description as an image, of all things) is here:
http://www-ee.eng.hawaii.edu/~msmith/ASICs/HTML/Verilog/LRM/HTML/15/ch15.2.htm

It's not that complicated.  I have built hand/regex parsers for it 
before, but I wanted to actually try out ANTLRWorks and ANTLR on a real 
problem rather than just toy stuff.

-a

From tbrandonau at gmail.com  Mon Jul 23 02:47:50 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 23 Jul 2007 19:47:50 +1000
Subject: [antlr-interest] How to retrieve free-form text between
	delimiters?
In-Reply-To: <46A47319.6060001@allcaps.org>
References: <46A45CE7.5020303@allcaps.org>
	<ebc876d70707230139m2c3fc29fscef997fbb6dc12d8@mail.gmail.com>
	<46A47319.6060001@allcaps.org>
Message-ID: <ebc876d70707230247o6c3f8ea7ka623e3f483cd4d84@mail.gmail.com>

On 7/23/07, Andrew Lentvorski <bsder at allcaps.org> wrote:
> Thomas Brandon wrote:
> > On 7/23/07, Andrew Lentvorski <bsder at allcaps.org> wrote:
> >> Any advice for solving this?
> > A . does match anything but in a parser this means any token not any
> > character, so as the only thing your lexer matches is digits and
> > whitespace anything else is an error. You either need to move your
> > date and comment rules to the lexer or make the lexer return tokens
> > for any input that can occur in dates and comments. If you add a lexer
> > rule after other rules like:
> > ANY: .;
> > Then your example should work. However, depending on how you want to
> > process input moving the rules to the lexer may be a better option.
>
> Are there any examples of this I could look at?
Well, you'd want something like:
declaration_command
       : DATE_DCMD | COMMENT_DCMD
       ;

DATE_DCMD:      '$date' (.)* '$end' {System.out.println("D:"+$text);} ;

COMMENT_DCMD:   '$comment' (.)* '$end' {System.out.println("C:"+$text);};

>
> What are the up/downsides of using an ANY vs. moving this back further
> into the parser?
Adding an ANY means that each comment\date will consist of many tokens.
Moving it to the lexer means you will have a single token for the
entire date or comment, including the delimiters complicating any
processing of it.
If the structure of a part of your language is not known or you do not
need to analyse the structure then handling it as a single lexer token
is a good path. For instance actions in ANTLR are handled in such a
way as ANTLR does not know much about their structure. Similarly
comments are handled in the lexer as they have no relevant structure.
Given the language defines no format for dates or comments they are
probably best handled in the lexer. Or if you want to add support for
possible date formats then you might want to move it into the parser
but using standard tokens not an ANY token (i.e. add ID, ';' and ','
rules to the lexer).
It's more a matter of personal preference but I would avoid a catch
all ANY rule as it is not a meaningful tokenisation of the input and
will push some lexer errors into the parser (instead of an invalid
character in the lexer you will have an invalid token in the parser
that could be in any rule).

Tom.
>
> If it helps, the format of the file (complete with kinda funky grammar
> description as an image, of all things) is here:
> http://www-ee.eng.hawaii.edu/~msmith/ASICs/HTML/Verilog/LRM/HTML/15/ch15.2.htm
>
> It's not that complicated.  I have built hand/regex parsers for it
> before, but I wanted to actually try out ANTLRWorks and ANTLR on a real
> problem rather than just toy stuff.
>
> -a
>

From ted.villalba at gmail.com  Mon Jul 23 09:31:07 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Mon, 23 Jul 2007 09:31:07 -0700
Subject: [antlr-interest] How to add logic for StringTemplate selection?
Message-ID: <69fb4b090707230931m6729f195ie853f3d49389c6f@mail.gmail.com>

Hi,

I'm wondering if this is possible, or if I should be trying to approach it
differently. Any help would be appreciated.
I want to be able to select the proper string template, based on the results
of some function calls, passing values from other rules.
For instance, I have these tree grammar rules( reduced here for simplicity):


field   : ^('=' tag value) -> template1(tag={$tag.text},value={$value.st})
         ;

value : ^(operator terms value) ->
template2(op={checkNotOperator($operator.st)},terms={$terms.st},
values={$value.st})
           ;

I want to be able to select the template for value, depending on a property
of "tag" in the field rule.
I need to somehow pass the value of $tag from the value rule, and depending
on the output of that call, select  the correct template.
The pseudocode being something like:

value  : ^(operator terms value) if (getDataProp($tag.text) == X) ->
templateX
                                              else if getDataProp($tag.text)
== Y -> templateY


What is the best way to handle this?

Thanks a lot for any help.
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070723/db8090bf/attachment.html 

From parrt at cs.usfca.edu  Mon Jul 23 09:38:27 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 23 Jul 2007 09:38:27 -0700
Subject: [antlr-interest] How to add logic for StringTemplate selection?
In-Reply-To: <69fb4b090707230931m6729f195ie853f3d49389c6f@mail.gmail.com>
References: <69fb4b090707230931m6729f195ie853f3d49389c6f@mail.gmail.com>
Message-ID: <D549419D-2C58-4CF6-A27D-5213F4B93589@cs.usfca.edu>

a : ... -> {...}? blort
          -> blech
   ;

Ter
On Jul 23, 2007, at 9:31 AM, Ted Villalba wrote:

> Hi,
>
> I'm wondering if this is possible, or if I should be trying to  
> approach it differently. Any help would be appreciated.
> I want to be able to select the proper string template, based on  
> the results of some function calls, passing values from other rules.
> For instance, I have these tree grammar rules( reduced here for  
> simplicity):
>
> field   : ^('=' tag value) -> template1(tag={$tag.text},value= 
> {$value.st})
>          ;
>
> value : ^(operator terms value) -> template2(op={checkNotOperator 
> ($operator.st)},terms={$terms.st}, values={$value.st})
>            ;
>
> I want to be able to select the template for value, depending on a  
> property of "tag" in the field rule.
> I need to somehow pass the value of $tag from the value rule, and  
> depending on the output of that call, select  the correct template.
> The pseudocode being something like:
>
> value  : ^(operator terms value) if (getDataProp($tag.text) == X) - 
> > templateX
>                                               else if getDataProp 
> ($tag.text) == Y -> templateY
>
>
> What is the best way to handle this?
>
> Thanks a lot for any help.
> Ted
>


From ted.villalba at gmail.com  Mon Jul 23 10:07:31 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Mon, 23 Jul 2007 10:07:31 -0700
Subject: [antlr-interest] How to add logic for StringTemplate selection?
In-Reply-To: <D549419D-2C58-4CF6-A27D-5213F4B93589@cs.usfca.edu>
References: <69fb4b090707230931m6729f195ie853f3d49389c6f@mail.gmail.com>
	<D549419D-2C58-4CF6-A27D-5213F4B93589@cs.usfca.edu>
Message-ID: <69fb4b090707231007o5b9bf632n8f8c1b32e1154d83@mail.gmail.com>

Awesome , thanks.
1. How do I reference the value $a from the other rule? Not sure I can
reference it like my example below.
2. Is it a boolean conditional, or can I have multiple alternatives?

z: ^(a b)  -> template1

a: ^(d e) -> {if $a ==1}? blort
            -> {if $a ==2}? blech
            -> bleep

Thanks again,

Ted

On 7/23/07, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> a : ... -> {...}? blort
>           -> blech
>    ;
>
> Ter
> On Jul 23, 2007, at 9:31 AM, Ted Villalba wrote:
>
> > Hi,
> >
> > I'm wondering if this is possible, or if I should be trying to
> > approach it differently. Any help would be appreciated.
> > I want to be able to select the proper string template, based on
> > the results of some function calls, passing values from other rules.
> > For instance, I have these tree grammar rules( reduced here for
> > simplicity):
> >
> > field   : ^('=' tag value) -> template1(tag={$tag.text},value=
> > {$value.st})
> >          ;
> >
> > value : ^(operator terms value) -> template2(op={checkNotOperator
> > ($operator.st)},terms={$terms.st}, values={$value.st})
> >            ;
> >
> > I want to be able to select the template for value, depending on a
> > property of "tag" in the field rule.
> > I need to somehow pass the value of $tag from the value rule, and
> > depending on the output of that call, select  the correct template.
> > The pseudocode being something like:
> >
> > value  : ^(operator terms value) if (getDataProp($tag.text) == X) -
> > > templateX
> >                                               else if getDataProp
> > ($tag.text) == Y -> templateY
> >
> >
> > What is the best way to handle this?
> >
> > Thanks a lot for any help.
> > Ted
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070723/60e136d5/attachment.html 

From mitchellch at comcast.net  Mon Jul 23 11:19:16 2007
From: mitchellch at comcast.net (mitchellch)
Date: Mon, 23 Jul 2007 11:19:16 -0700
Subject: [antlr-interest] Lexical rules calling lexical rules
Message-ID: <000601c7cd56$0128ef90$170210ac@us.packetmotion.com>

Why does the following generate (MismatchedTokenException(0!=0)) when I
reference either C1ID or C2ID?

 

fragment ID :     ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ;

C1ID        :     ID;

C2ID        :     ID;

 

For now I want C1 and C2 IDs to be generic IDs, but I eventually plan to
evolve them to be more specific.

 

Thanks.

-Mitch

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070723/a72a2c28/attachment.html 

From tbrandonau at gmail.com  Mon Jul 23 11:21:18 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 24 Jul 2007 04:21:18 +1000
Subject: [antlr-interest] How to add logic for StringTemplate selection?
In-Reply-To: <69fb4b090707231007o5b9bf632n8f8c1b32e1154d83@mail.gmail.com>
References: <69fb4b090707230931m6729f195ie853f3d49389c6f@mail.gmail.com>
	<D549419D-2C58-4CF6-A27D-5213F4B93589@cs.usfca.edu>
	<69fb4b090707231007o5b9bf632n8f8c1b32e1154d83@mail.gmail.com>
Message-ID: <ebc876d70707231121w1cf83e31k4c4ca790c2c436ed@mail.gmail.com>

On 7/24/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> Awesome , thanks.
> 1. How do I reference the value $a from the other rule? Not sure I can
> reference it like my example below.
As your value rule is called directly by your field rule you could
just use a rule parameter. But for flexibility you're probably best
using scopes. This will work even if your value rule isn't directly
called by field (without passing all the way down the chain). No wiki
docs on scopes yet so check out the dynamic-scope example.
> 2. Is it a boolean conditional, or can I have multiple alternatives?
It's a boolean conditional, multiple alternatives are allowed.

So you'd have something like:
field
scope {
    String tagName;
}
    :   ^(  '='
            tag { $field::tagName = $tag.text; }
            value
        ) -> template1(tag={$tag.text},value={$value.st})
    ;

value
    :   ^(operator terms value)
          -> {$field::tagName == "Tag1"}? template1
          -> {$field::tagName == "Tag2"}? template2
          -> defaultTemplate
    ;

Tom.
> Thanks again,
>
>  Ted
>

From tbrandonau at gmail.com  Mon Jul 23 11:34:33 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Tue, 24 Jul 2007 04:34:33 +1000
Subject: [antlr-interest] Lexical rules calling lexical rules
In-Reply-To: <000601c7cd56$0128ef90$170210ac@us.packetmotion.com>
References: <000601c7cd56$0128ef90$170210ac@us.packetmotion.com>
Message-ID: <ebc876d70707231134w7d74c118p381942c2772fd308@mail.gmail.com>

On 7/24/07, mitchellch <mitchellch at comcast.net> wrote:
>
>
>
>
> Why does the following generate
> (MismatchedTokenException(0!=0)) when I reference either
> C1ID or C2ID?
>
>
>
> fragment ID :
> ('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ;
>
> C1ID        :     ID;
>
> C2ID        :     ID;
>
>
>
> For now I want C1 and C2 IDs to be generic IDs, but I eventually plan to
> evolve them to be more specific.
>
Lexing is done independently of parsing, so you can't have multiple
lexer rules matching the same characters with which rule to use
determined by parser context. In the above grammar ANTLR will choose
to match C1ID for any occurrence of ID (it being first in the
grammar), so any reference to C2ID would result in a mismatched token.
Assuming some overlap between the final C1ID and C2ID rules (otherwise
specialise them now) you are probably best splitting it a rule for
C1ID only IDs, a rule for C2ID only IDs and one for common IDs. Then
use parser rules to combine common and specific tokens.
For instance, if C1IDs could include numbers while C2IDs couldn't
(tokens with only letters being valid for either C1ID or C2ID):
c1id: ID|C1ID;
c2id: ID;
ID: 'a'..'z'+;
C1ID: 'a'..'z' ('a'..'z'|'0'..'9')+;

Then use c1id and c2id instead of C1ID and C2ID.

Tom.
>
>
> Thanks.
>
> -Mitch

From jrc at skylon.demon.co.uk  Mon Jul 23 12:01:20 2007
From: jrc at skylon.demon.co.uk (John Connett)
Date: Mon, 23 Jul 2007 20:01:20 +0100
Subject: [antlr-interest] TET journal files
Message-ID: <1185217280.5925.2.camel@gateway.home>

I have downloaded ANTLR 3.0 / ANTLRWorks 1.1 and have bought a copy of
the new ANTLR book.  Armed with these I decided to use ANTLR  to
generate a Python program to process journal files from TET, the Test
Environment Testkit (http://tetworks.opengroup.org/tet/).

A typical journal line is:

15|<activity> <version> <ICcount>|text

Each line is logically divided into three fields by pipe symbols.

The first field is a line type, one of 36 integer values between 0 and
900.

The second field has fixed number of zero or more space separated
subfields.  The number of subfields is dictated by the line type in
the first field.  Baring perverse choices of path names these
subfields do not contain either spaces or pipe symbols.

The third field can contain a general text string to the terminating
newline.  In particular, this string can contain spaces and pipe
symbols.

There is sufficient information to unambiguously identify the data in
these lines.

My first attempt was to code a grammar with rules for the lines of the
form:

testCaseManagerStart
        // 15|activity version ICcount|text
        :       '15' PIPE INT ' ' STRING ' ' INT PIPE TEXT NEWLINE
        ;

However, I ran into a problem with the lexer as the line type number
('15' in this case) would be selected as a separate token causing
confusion with the small integers that appear as subfields of the
second field.

Is there an ANTLR idiom used to handle situations like this?

Thanks
--
John Connett


From Yury at serdyuk.botik.ru  Mon Jul 23 15:05:49 2007
From: Yury at serdyuk.botik.ru (Yury Serdyuk)
Date: Tue, 24 Jul 2007 02:05:49 +0400
Subject: [antlr-interest] Out of Memory in antlr.CharScanner.match
Message-ID: <46A5263D.1030103@serdyuk.botik.ru>

Hi !

I have a (C#) grammar with the rule

COMMENT1
  : "//"  ( ~ ( '\n' | '\r' ) )* {$setType ( Token.SKIP ); }
  ;

If "//" are two last symbols in the input text, lexer failed with

> Unhandled Exception: System.OutOfMemoryException: Out of memory
>   at <0x00000> <unknown method>
>   at (wrapper managed-to-native) System.String:InternalAllocateStr (int)
>   at System.Text.StringBuilder.InternalEnsureCapacity (Int32 size) 
> [0x00000]
>   at System.Text.StringBuilder.Append (Char value) [0x00000]
>   at antlr.CharScanner.append (Char c) [0x00000]
>   at antlr.CharScanner.consume () [0x00000]
>   at antlr.CharScanner.match (antlr.collections.impl.BitSet b) [0x00000]
>   at MCSlexer.mCOMMENT1 (Boolean _createToken) [0x00000]

for C#-runtime.
For Java-runtime, the log is

> Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
>         at antlr.ANTLRStringBuffer.append(ANTLRStringBuffer.java:36)
>         at antlr.CharScanner.append(CharScanner.java:66)
>         at antlr.CharScanner.consume(CharScanner.java:84)
>         at antlr.CharScanner.match(CharScanner.java:207)
>         at MCSlexer.mCOMMENT1(MCSlexer.java:432)

But if I form a grammar from the one simple rule in the parser and from
the same lexer the error is disappeared.
Any help ?

With best wishes,
                                 Yury Serdyuk.

From aliaazimi at yahoo.com  Mon Jul 23 18:05:37 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 23 Jul 2007 18:05:37 -0700 (PDT)
Subject: [antlr-interest] (Newbie)Problem with importing the token type
	definition
Message-ID: <501580.60042.qm@web58104.mail.re3.yahoo.com>

Hi,
   
  I read the following at the ANTLR book:
   
  "You do not need the imaginary token definitions in the tree grammar
  because the tokenVocab=CMinus option imports the token type definitions
  from the parser grammar, CMinus.g, via the CMinus.tokens file." (pdf Page 201 )
   
  I have followed the instructions, but my Tree walker still does not import the tokens from the parser grammar. That means My tree walker still shows red lines saying "Undefined references" if I do not include the imaginary token definitions in the tree grammar also.
   
  The followings are the options parts of the grammer and the tree walker.
   
  grammar FinalProject;
options {
backtrack=true;
language=Java;
output=AST;
  // ANTLR can handle literally any tree node type.
// For convenience, specify the Java type
ASTLabelType=CommonTree; // type of $stat.tree ref etc...
  }
   
   
   
  tree grammar FinalProjectWalker;
options {
tokenVocab=FinalProject; // reuse token types
ASTLabelType=CommonTree; // $label will have type CommonTree
}
   
  Could you please tell me what is that I keep missing?
   
  Thank you so much in advance.
   
  Best wishes,
   
  Al

       
---------------------------------
Moody friends. Drama queens. Your life? Nope! - their life, your story.
 Play Sims Stories at Yahoo! Games. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070723/a36e1cb8/attachment.html 

From kroepke at classdump.org  Mon Jul 23 18:19:09 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Mon, 23 Jul 2007 18:19:09 -0700
Subject: [antlr-interest] (Newbie)Problem with importing the token type
	definition
In-Reply-To: <501580.60042.qm@web58104.mail.re3.yahoo.com>
References: <501580.60042.qm@web58104.mail.re3.yahoo.com>
Message-ID: <EB413BBE-3D4E-479E-B556-9AD9FF46AC90@classdump.org>


On Jul 23, 2007, at 6:05 PM, ali azimi wrote:

>   Could you please tell me what is that I keep missing?

Are those grammars in the same directory?

If not, you might need to use the -lib option for the tree parser to  
tell it where to find the
tokens file.
If yes, I don't know and you'd need to provide a bit more info ;)

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From aliaazimi at yahoo.com  Mon Jul 23 18:46:56 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Mon, 23 Jul 2007 18:46:56 -0700 (PDT)
Subject: [antlr-interest] (Newbie)Problem with importing the token type
	definition
In-Reply-To: <EB413BBE-3D4E-479E-B556-9AD9FF46AC90@classdump.org>
Message-ID: <653422.91258.qm@web58115.mail.re3.yahoo.com>


Hi,
   
  I created the TOKENS file and then cut and paste it to the same file as the tree walker exists.
   
  Thank you so much.
   
  Best regards,
   
  Al
Kay Roepke <kroepke at classdump.org> wrote:
  
On Jul 23, 2007, at 6:05 PM, ali azimi wrote:

> Could you please tell me what is that I keep missing?

Are those grammars in the same directory?

If not, you might need to use the -lib option for the tree parser to 
tell it where to find the
tokens file.
If yes, I don't know and you'd need to provide a bit more info ;)

HTH,
-k
-- 
Kay R?pke
http://classdump.org/






       
---------------------------------
Pinpoint customers who are looking for what you sell. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070723/c9d8b028/attachment.html 

From amol_bhagavat at yahoo.co.uk  Mon Jul 23 22:04:32 2007
From: amol_bhagavat at yahoo.co.uk (amol Bhagavat)
Date: Tue, 24 Jul 2007 06:04:32 +0100 (BST)
Subject: [antlr-interest] Working with large no of files
Message-ID: <570486.32253.qm@web23207.mail.ird.yahoo.com>

Hi,
  I am new to ANTLR.I want to run the Lexer & parser(Generated through ANTLR ) on my project directories.The size of the project is huge around 35L lines of source code .Is there any limitation on number of files that can be processed by the ANTLR generated lexer & parser?
   
  Thanks 
   
   
   

       
---------------------------------
 Yahoo! Answers - Get better answers from someone who knows. Tryit now.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/d863f596/attachment.html 

From a.shneyderman at gmail.com  Mon Jul 23 22:41:56 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Tue, 24 Jul 2007 07:41:56 +0200
Subject: [antlr-interest] Working with large no of files
In-Reply-To: <570486.32253.qm@web23207.mail.ird.yahoo.com>
References: <570486.32253.qm@web23207.mail.ird.yahoo.com>
Message-ID: <693a69ba0707232241y1df432c8hbb3fefa7b4f67568@mail.gmail.com>

> I am new to ANTLR.I want to run the Lexer & parser(Generated through ANTLR )
> on my project directories.The size of the project is huge around 35L lines
> of source code .Is there any limitation on number of files that can be
> processed by the ANTLR generated lexer & parser?


Yes, ANTLR charges you $2 for each processed file. So the limit is
~TOTAL_AMOUNT_OF_MONEY_ON_YOUR_BANK_ACCOUNT/2
file.

HTH,
Alex.

From rdclark at gmail.com  Mon Jul 23 22:43:00 2007
From: rdclark at gmail.com (Richard Clark)
Date: Mon, 23 Jul 2007 22:43:00 -0700
Subject: [antlr-interest] Working with large no of files
In-Reply-To: <570486.32253.qm@web23207.mail.ird.yahoo.com>
References: <570486.32253.qm@web23207.mail.ird.yahoo.com>
Message-ID: <d3992d900707232243t2840b64dp2d75f5460733827a@mail.gmail.com>

Hi,

There's no built-in limit as far as I know, but you may run into
memory limitations. It will depend on how much of your processed code
you need to hold in memory at once.

(If I understand correctly, you have 3.5e6 lines of code.)

...Richard

From jonathan.thomas at ca.com  Mon Jul 23 22:42:15 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Tue, 24 Jul 2007 15:42:15 +1000
Subject: [antlr-interest] Working with large no of files
In-Reply-To: <693a69ba0707232241y1df432c8hbb3fefa7b4f67568@mail.gmail.com>
References: <570486.32253.qm@web23207.mail.ird.yahoo.com>
	<693a69ba0707232241y1df432c8hbb3fefa7b4f67568@mail.gmail.com>
Message-ID: <46A59137.3090704@ca.com>



Alex Shneyderman said the following on 24/07/2007 3:41 PM:
>> I am new to ANTLR.I want to run the Lexer & parser(Generated through 
>> ANTLR )
>> on my project directories.The size of the project is huge around 35L 
>> lines
>> of source code .Is there any limitation on number of files that can be
>> processed by the ANTLR generated lexer & parser?
>
>
> Yes, ANTLR charges you $2 for each processed file. So the limit is
> ~TOTAL_AMOUNT_OF_MONEY_ON_YOUR_BANK_ACCOUNT/2
> file.
>
> HTH,
> Alex.
>
Only cheques are accepted though, made out to me.

From Smitha.K at Sun.COM  Tue Jul 24 03:37:47 2007
From: Smitha.K at Sun.COM (smitha k - Sun Microsystems - Bangalore India)
Date: Tue, 24 Jul 2007 16:07:47 +0530
Subject: [antlr-interest] c c++ grammar generating parser in java
Message-ID: <46A5D67B.2090704@Sun.COM>

Hi

I am looking for C C++ grammar that would generate the parser code in java.
Any information on this is welcome.

Thanks
Smitha

From fhellerhoff at yahoo.de  Tue Jul 24 04:09:20 2007
From: fhellerhoff at yahoo.de (Friedhelm Hellerhoff)
Date: Tue, 24 Jul 2007 13:09:20 +0200 (CEST)
Subject: [antlr-interest] best way for mass tree parsing
Message-ID: <20070724110920.53727.qmail@web27804.mail.ukl.yahoo.com>

Hi all,
with ANTLR 3 (and C#), I have set up a lexer, parser
and treeparser for parsing some special syntax. 
I have to evaluate some millions of records against 10
different AST with the treeparser. With ANTLR 2.7, I
first run the syntax through the lexer and parser and
then put the 10 resulting AST into a  list of AST.
Then in the loop over the million records, this list
was used for evaluating the millions of records with
just one instance of the treeparser.
What about ANTLR 3, what is the best way to separate
the lexing,parsing and treeparsing? I think creating
new treeparser instances for every record would not be
the sweetest way...?
Thanks in advance for any answer,
  Friedhelm


      __________________________________ Wissenswertes zum Thema PC, Zubeh?r oder Programme. BE A BETTER INTERNET-GURU!  www.yahoo.de/clever

From aliaazimi at yahoo.com  Tue Jul 24 05:31:40 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 24 Jul 2007 05:31:40 -0700 (PDT)
Subject: [antlr-interest] (newbie)The rules to create tree walkers
Message-ID: <834081.58261.qm@web58110.mail.re3.yahoo.com>

Hi,
   
  In the following,  antlr complains that instead of RPAREN found '?'
   
  packageReferenceClause
 :^(USE packageName ^(PACKREFCLS definitionSelectionList)? end)
  ;
   
  1)how should I write the above, to preserve the structure? I can write it in the following form, but it is not the same as the one mentioned above.
   
  packageReferenceClause
 :^(USE packageName ^(PACKREFCLS definitionSelectionList?) end)
  ;
  
 and could you give me some advice as to where I can find some more tutorials about creating tree walkers or maybe some examples?
   
  Many thanks in advance.
   
  Best regards,
   
  Al

       
---------------------------------
Luggage? GPS? Comic books? 
Check out fitting  gifts for grads at Yahoo! Search.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/a39b7b8c/attachment.html 

From kevin_mitchell at agilent.com  Tue Jul 24 05:55:09 2007
From: kevin_mitchell at agilent.com (kevin_mitchell at agilent.com)
Date: Tue, 24 Jul 2007 06:55:09 -0600
Subject: [antlr-interest] Setting return values
Message-ID: <E2403775004D054EAFAA03E2A89C03120229375F@wcosmb02.cos.agilent.com>

I've been trying to port my grammar from V2 to V3, which I'm beginning to regret... :-(  I use a lot of arguments and values in my grammar, and I'm beginning to wonder whether I've misunderstood how V3 is supposed to work, because at first glance my grammar is becoming a lot more cumbersome than the V2 version.  Here's a concrete example.  In V2 I might have written something like

declaration returns [Declaration d] :
  d=valueDeclaration
| d=simpleTypeDeclaration
| d=genericTypeDeclaration
;

But in V3 it looks like I now have to write something like

declaration returns [Declaration d] 
@after { $d = dec; }
: dec=valueDeclaration
| dec=simpleTypeDeclaration
| dec=genericTypeDeclaration
;

I.e. I have to use an auxiliary name, dec in this case, and then assign to $d at the end.  Is this correct, or have I misunderstood something?  

Thanks,  Kevin

From wiggjd at lsbu.ac.uk  Tue Jul 24 06:16:00 2007
From: wiggjd at lsbu.ac.uk (Wigg, J D)
Date: Tue, 24 Jul 2007 14:16:00 +0100
Subject: [antlr-interest] C/C++ parser
Message-ID: <10A786EB5741DE4DB252F7B9B9423D3A022C54B0@CSD-EXBE-VS2.lsbu.ac.uk>

There is an old C/C++ parser which I have been updating and
maintaining available on the antlr website.
 
However, I use it to generate lexer and parser in C++ using ANTLR 2.7.
It could of course produce a parser in Java but I think you would then
need to convert quite a lot of support code from C++ to Java before it
would all work. I don't think that would be too difficult.
 
If you are interested in doing this let me know as I have a more up to
date version (3.2) which I am still working on.
 
David Wigg
 
Message: 10 from antlr-interest digest Vol. 32, Issue 115 24 July 2007
Date: Tue, 24 Jul 2007 16:07:47 +0530
From: smitha k - Sun Microsystems - Bangalore India <Smitha.K at Sun.COM>
Subject: [antlr-interest] c c++ grammar generating parser in java
To: antlr-interest at antlr.org
Message-ID: <46A5D67B.2090704 at Sun.COM>
Content-Type: text/plain; format=flowed; charset=us-ascii

Hi

I am looking for C C++ grammar that would generate the parser code in
java.
Any information on this is welcome.

Thanks
Smitha





--
Copyright in this email and in any attachments belongs to London South Bank University.  This email, and its attachments if any, may be confidential or legally privileged and is intended to be seen only by the person to whom it is addressed.  If you are not the intended recipient, please note the following: (1) You should take immediate action to notify the sender and delete the original email and all copies from your computer systems; (2) You should not read copy or use the contents of the email nor disclose it or its existence to anyone else.

The views expressed herein are those of the author(s) and should not be taken as those of London South Bank University, unless this is specifically stated.

London South Bank University is a company limited by guarantee registered in England and Wales.  The following details apply to London South Bank University: Company number - 00986761; Registered office and trading address - 103 Borough Road London SE1 0AA; VAT number - 778 1116 17; Email address - lsbuinfo at lsbu.ac.uk
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/e3df3525/attachment.html 

From jrc at skylon.demon.co.uk  Tue Jul 24 06:39:28 2007
From: jrc at skylon.demon.co.uk (jrc at skylon.demon.co.uk)
Date: Tue, 24 Jul 2007 14:39:28 +0100
Subject: [antlr-interest] matchRange in parser?
Message-ID: <E1IDKbo-000AJE-ED@pr-webmail-1.mail.demon.net>

Should the following work?
----------------------------------------------------------------------
grammar Simple;
line         : systemIdList NEWLINE ;
systemIdList : systemId | systemId ',' systemIdList ;
systemId     : '0'..'9' ;
NEWLINE      : '\r'? '\n' ;
----------------------------------------------------------------------
Here's what I get:
----------------------------------------------------------------------
$ java org.antlr.Tool Simple.g
ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
$ javac *.java
SimpleParser.java:119: cannot find symbol
symbol  : method matchRange(char,char)
location: class SimpleParser
            matchRange('0','9');
            ^
1 error
----------------------------------------------------------------------
Swapping 'systemId' (parser rule) to 'SystemId' (lexer rule) causes
matchRange() to be found ...
--
John Connett



From pink at odahoda.de  Tue Jul 24 06:47:31 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 24 Jul 2007 15:47:31 +0200
Subject: [antlr-interest] matchRange in parser?
References: <E1IDKbo-000AJE-ED@pr-webmail-1.mail.demon.net>
Message-ID: <f84vtj$trl$1@sea.gmane.org>

jrc at skylon.demon.co.uk wrote:

> Should the following work?
> ----------------------------------------------------------------------
> grammar Simple;
> line         : systemIdList NEWLINE ;
> systemIdList : systemId | systemId ',' systemIdList ;
> systemId     : '0'..'9' ;
> NEWLINE      : '\r'? '\n' ;
> ----------------------------------------------------------------------
> Here's what I get:
> ----------------------------------------------------------------------
> $ java org.antlr.Tool Simple.g
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> $ javac *.java
> SimpleParser.java:119: cannot find symbol
> symbol  : method matchRange(char,char)
> location: class SimpleParser
>             matchRange('0','9');
>             ^
> 1 error
> ----------------------------------------------------------------------
> Swapping 'systemId' (parser rule) to 'SystemId' (lexer rule) causes
> matchRange() to be found ...

Ranges ('0'..'9') can only be used in lexer rules. The grammar parser should
complain about it, when used in parser rules.
This probably falls into the category of things to come, once ANTLR3 itself
is written in ANTLR3.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From pink at odahoda.de  Tue Jul 24 06:51:17 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Tue, 24 Jul 2007 15:51:17 +0200
Subject: [antlr-interest] Setting return values
References: <E2403775004D054EAFAA03E2A89C03120229375F@wcosmb02.cos.agilent.com>
Message-ID: <f8504l$trl$2@sea.gmane.org>

kevin_mitchell at agilent.com wrote:

> I've been trying to port my grammar from V2 to V3, which I'm beginning to
> regret... :-(  I use a lot of arguments and values in my grammar, and I'm
> beginning to wonder whether I've misunderstood how V3 is supposed to work,
> because at first glance my grammar is becoming a lot more cumbersome than
> the V2 version.  Here's a concrete example.  In V2 I might have written
> something like
> 
> declaration returns [Declaration d] :
>   d=valueDeclaration
> | d=simpleTypeDeclaration
> | d=genericTypeDeclaration
> ;
> 
> But in V3 it looks like I now have to write something like
> 
> declaration returns [Declaration d]
> @after { $d = dec; }
> : dec=valueDeclaration
> | dec=simpleTypeDeclaration
> | dec=genericTypeDeclaration
> ;
> 
> I.e. I have to use an auxiliary name, dec in this case, and then assign to
> $d at the end.  Is this correct, or have I misunderstood something?

Correct.
Though it would be a nice feature, if you could directly assign to return
values as in your first snipped. I'd say that this is a pretty frequent use
case that should be supported. That would have to take care of multiple
return values though, if it should work generally.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From antlr at jazillian.com  Tue Jul 24 07:56:02 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 24 Jul 2007 10:56:02 -0400
Subject: [antlr-interest] treewalker in infinite loop
Message-ID: <46A61302.5010006@jazillian.com>

When I have an empty alternative in a treewalker, it gets into an 
infinite loop.
I assume it's the same bug as this one, which only mentions the problem 
in a lexer:
http://www.antlr.org:8888/browse/ANTLR-102

From rschulz at sonic.net  Tue Jul 24 08:07:57 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 24 Jul 2007 08:07:57 -0700
Subject: [antlr-interest] Rule Arguments and Automatically Generated
	Syntactic Predicates
Message-ID: <200707240807.57325.rschulz@sonic.net>

Hi,

I have a rule (the accept state for this particular tree grammar) with 
an argument:

clifUnit [ String unitName ]
returns [ CLPhrase cf ]
@init {
  fAcceptor.startUnit(unitName);
}
  : ( text[unitName]
      {
        $cf = $text.t;
        fAcceptor.acceptText($text.t);
      }

    | ...


This grammar is generated with backtrack and memoize both enabled. When 
I generate a Java tree parser from this grammar, this method is 
generated:

  // $ANTLR start synpred1
  public final void synpred1_fragment() throws RecognitionException {
    // CLIFBuilder.g:647:6: ( text[unitName] )
    // CLIFBuilder.g:647:6: text[unitName]
    {
      pushFollow(FOLLOW_text_in_synpred1108);
      text(unitName);
      _fsp--;
      if (failed) return ;

    }
  }
  // $ANTLR end synpred1


The problem is, the unitName argument is not propagated to the formal or 
actual parameters of this method.


Is this a bug or a known limitation?


Randall Schulz

From tbrandonau at gmail.com  Tue Jul 24 08:36:54 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 25 Jul 2007 01:36:54 +1000
Subject: [antlr-interest] Scopes in lexers don't work
In-Reply-To: <F0E2DC28-063F-4D47-9747-6AC856693A11@classdump.org>
References: <46A38FF8.4000306@gmx.de>
	<0B0BC71E-2086-4EA6-9E33-E570FFE088A7@classdump.org>
	<F0E2DC28-063F-4D47-9747-6AC856693A11@classdump.org>
Message-ID: <ebc876d70707240836n40285ce4u9d79efaf3c8dac80@mail.gmail.com>

On 7/23/07, Kay Roepke <kroepke at classdump.org> wrote:
> On Jul 22, 2007, at 4:32 PM, Kay Roepke wrote:
>
> > I'm sorry, you are right. There were two template invocations
> > missing from
> > lexerRule.
> > When Ter is back, I'll talk to him and then submit. Should then be
> > included
> > in the next daily build/release.
>
> Just for reference: It's fixed in the depot. Until there's a build
> available, you can use
> the Java.stg from fisheye:
> <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/
> templates/Java/Java.stg?r=3930>
>
This fixes global scopes but dynamic scopes don't work as the scope
object isn't declared. Adding
"<ruleAttributeScope(scope=ruleDescriptor.ruleScope)>" to the start of
the lexerRule template fixes this.

Tom.
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/
>
>
>
>
>

From rbuck at verisign.com  Tue Jul 24 08:44:06 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 11:44:06 -0400
Subject: [antlr-interest] Newbie question...
Message-ID: <B408B6F6E3DEB04681E207B528821D49727973@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Hi,

I never have written a grammar before in ANTLR. Could someone provide
some hint as to how to accomplish what I am attempting. I think I am
pretty close, but I run into some errors when I run my simple
application main, and when I do a grammar check.

I have a language of sorts I use to express traits for messaging system
drivers. A sample traits description follows:

 
(TRAITS={(PERSISTENCE=FS),(PROTOCOL={(POST={DIRECT,RENAME}),(TAKE={INDIR
ECT,CREATE})})})

A greatly simplified example using this grammar could be:

    (message-version=1.0)

I wrote a grammar that seems to work, for the most part.

##############################################
grammar SetTuple;

options {
	output=AST;
}

@members {
    public static void main(String[] args) throws Exception {
        SetTupleLexer lex = new SetTupleLexer(new
ANTLRStringStream(args[0]));
       	CommonTokenStream tokens = new CommonTokenStream(lex);
        SetTupleParser parser = new SetTupleParser(tokens);
        try {
            parser.prog();
        } catch (RecognitionException e)  {
            e.printStackTrace();
        }
    }
}

/*------------------------------------------------------------------
 * PARSER RULES
 *------------------------------------------------------------------*/

prog
	:	tuple
	;

tuple
	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
R_PAREN
	;

set
	:	L_CURLY tuple ( COMMA tuple )*
	;

tuple_declaration
	:	tuple_key ( AT_SIGN set )? 
	;

tuple_key
	:	IDENT
	;
tuple_value
	:	( PCHAR )*
	;

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

PCHAR	:	PCT_ENCODED | UNRESERVED
	;

UNRESERVED
	:	ALPHA | DIGIT | '-' | '.' | '_' | '~' | ':'
	;
PCT_ENCODED
	:	'%' HEXDIGIT HEXDIGIT
	;
HEXDIGIT:	('0'..'9'|'a'..'f'|'A'..'F')
	;
IDENT	:	ALPHA ( ALPHA | UNDERSCORE | HYPHEN | DIGIT)*
	;
ALPHA
	:	('a'..'z')|('A'..'Z')
	;
L_PAREN
	:	'('
	;
R_PAREN :	')'
	;
L_CURLY	:	'{'
	;
R_CURLY	:	'}'
	;
DIGIT	:	'1'..'9'
	;
COMMA	:	','
	;
EQUALS	:	'='
	;
L_BRACKET
	:	'['
	;
R_BRACKET
	:	']'
	;
AT_SIGN	:	'@'
	;
UNDERSCORE
	:	'_'
	;
HYPHEN	:	'-'
	;
##############################################

But when I check the grammar using ANTLRWorks, I get the following
warning:

[10:54:15] warning(208): SetTuple.g:93:1: The following token
definitions are unreachable:
UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
[10:54:15] warning(208): SetTuple.g:93:1: The following token
definitions are unreachable:
UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
[10:55:18] Checking Grammar...

When I run the simplified example, I see the following error on the
command line:

    line 1:19 mismatched input '0' expecting R_PAREN

What am I missing here?

-Bob

From parrt at cs.usfca.edu  Tue Jul 24 08:44:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Jul 2007 08:44:17 -0700
Subject: [antlr-interest] treewalker in infinite loop
In-Reply-To: <46A61302.5010006@jazillian.com>
References: <46A61302.5010006@jazillian.com>
Message-ID: <3D09686C-9737-4BE9-94E4-CA39C0413CA7@cs.usfca.edu>


On Jul 24, 2007, at 7:56 AM, Andy Tripp wrote:

> When I have an empty alternative in a treewalker, it gets into an  
> infinite loop.
> I assume it's the same bug as this one, which only mentions the  
> problem in a lexer:
> http://www.antlr.org:8888/browse/ANTLR-102

Is it ANTLR or the tree parser itself that loops?  If you do

a : ( foo )* ;

foo : ;

it might loop but that is what you asked for ;)

Ter

From parrt at cs.usfca.edu  Tue Jul 24 08:45:37 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Jul 2007 08:45:37 -0700
Subject: [antlr-interest] Scopes in lexers don't work
In-Reply-To: <ebc876d70707240836n40285ce4u9d79efaf3c8dac80@mail.gmail.com>
References: <46A38FF8.4000306@gmx.de>
	<0B0BC71E-2086-4EA6-9E33-E570FFE088A7@classdump.org>
	<F0E2DC28-063F-4D47-9747-6AC856693A11@classdump.org>
	<ebc876d70707240836n40285ce4u9d79efaf3c8dac80@mail.gmail.com>
Message-ID: <3D9FEC13-90DF-4199-B95D-F433C2ECBFE6@cs.usfca.edu>

Guys, just a warning, I never really intended scopes to work in the  
lexer, though thanks to the nature of antlr's codegen, it worked with  
a tiny tweak.

Later, we might do scannerless parsing so we might want scopes in  
lexer.  For now, assume it's unsupported "feature".  Other targets  
are not required to support.

Ter

On Jul 24, 2007, at 8:36 AM, Thomas Brandon wrote:

> On 7/23/07, Kay Roepke <kroepke at classdump.org> wrote:
>> On Jul 22, 2007, at 4:32 PM, Kay Roepke wrote:
>>
>> > I'm sorry, you are right. There were two template invocations
>> > missing from
>> > lexerRule.
>> > When Ter is back, I'll talk to him and then submit. Should then be
>> > included
>> > in the next daily build/release.
>>
>> Just for reference: It's fixed in the depot. Until there's a build
>> available, you can use
>> the Java.stg from fisheye:
>> <http://fisheye2.cenqua.com/browse/antlr/src/org/antlr/codegen/
>> templates/Java/Java.stg?r=3930>
>>
> This fixes global scopes but dynamic scopes don't work as the scope
> object isn't declared. Adding
> "<ruleAttributeScope(scope=ruleDescriptor.ruleScope)>" to the start of
> the lexerRule template fixes this.
>
> Tom.
>> cheers,
>> -k
>> --
>> Kay R?pke
>> http://classdump.org/
>>
>>
>>
>>
>>


From jimi at temporal-wave.com  Tue Jul 24 08:47:23 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Jul 2007 08:47:23 -0700
Subject: [antlr-interest] (newbie)The rules to create tree walkers
In-Reply-To: <834081.58261.qm@web58110.mail.re3.yahoo.com>
References: <834081.58261.qm@web58110.mail.re3.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76F14@wavemachine.temporal-wave.com>

This will be corrected but for now:

 

^(USE packageName (^(PACKREFCLS definitionSelectionList))? end)

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
Sent: Tuesday, July 24, 2007 5:32 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] (newbie)The rules to create tree walkers

 

Hi,

 

In the following,  antlr complains that instead of RPAREN found '?'

 

packageReferenceClause
 :^(USE packageName ^(PACKREFCLS definitionSelectionList)? end)

;

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/29baa38c/attachment.html 

From jimi at temporal-wave.com  Tue Jul 24 08:50:52 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Jul 2007 08:50:52 -0700
Subject: [antlr-interest] matchRange in parser?
In-Reply-To: <E1IDKbo-000AJE-ED@pr-webmail-1.mail.demon.net>
References: <E1IDKbo-000AJE-ED@pr-webmail-1.mail.demon.net>
Message-ID: <051466DAA0D608439E196797955018D76F15@wavemachine.temporal-wave.com>

Your use of lexer ranges in parser rule is addressed in another
response, but you have also written a yacc style definition of
systemIdList, you need to expunge yacc from you mind ;-) :

systemIdList : systemId (',' systemId)* ;

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of jrc at skylon.demon.co.uk
> Sent: Tuesday, July 24, 2007 6:39 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] matchRange in parser?
> 
> Should the following work?
> ----------------------------------------------------------------------
> grammar Simple;
> line         : systemIdList NEWLINE ;
> systemIdList : systemId | systemId ',' systemIdList ;
> systemId     : '0'..'9' ;
> NEWLINE      : '\r'? '\n' ;
> ----------------------------------------------------------------------
> Here's what I get:
> ----------------------------------------------------------------------
> $ java org.antlr.Tool Simple.g
> ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
> $ javac *.java
> SimpleParser.java:119: cannot find symbol
> symbol  : method matchRange(char,char)
> location: class SimpleParser
>             matchRange('0','9');
>             ^
> 1 error
> ----------------------------------------------------------------------
> Swapping 'systemId' (parser rule) to 'SystemId' (lexer rule) causes
> matchRange() to be found ...
> --
> John Connett
> 


From antlr at jazillian.com  Tue Jul 24 09:20:58 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 24 Jul 2007 12:20:58 -0400
Subject: [antlr-interest] treewalker in infinite loop
In-Reply-To: <3D09686C-9737-4BE9-94E4-CA39C0413CA7@cs.usfca.edu>
References: <46A61302.5010006@jazillian.com>
	<3D09686C-9737-4BE9-94E4-CA39C0413CA7@cs.usfca.edu>
Message-ID: <46A626EA.6060603@jazillian.com>

The tree parser itself loops.

I have no doubt that it's doing what I asked for, can't you make it do 
what I *meant*
to ask for?  ;)

Andy


Terence Parr wrote:
>
> On Jul 24, 2007, at 7:56 AM, Andy Tripp wrote:
>
>> When I have an empty alternative in a treewalker, it gets into an 
>> infinite loop.
>> I assume it's the same bug as this one, which only mentions the 
>> problem in a lexer:
>> http://www.antlr.org:8888/browse/ANTLR-102
>
> Is it ANTLR or the tree parser itself that loops?  If you do
>
> a : ( foo )* ;
>
> foo : ;
>
> it might loop but that is what you asked for ;)
>
> Ter
>


From aliaazimi at yahoo.com  Tue Jul 24 09:24:18 2007
From: aliaazimi at yahoo.com (ali azimi)
Date: Tue, 24 Jul 2007 09:24:18 -0700 (PDT)
Subject: [antlr-interest] (newbie)The rules to create tree walkers
In-Reply-To: <051466DAA0D608439E196797955018D76F14@wavemachine.temporal-wave.com>
Message-ID: <880346.97964.qm@web58105.mail.re3.yahoo.com>

 
  Hi,
   
  Thank you very much for your reply. I was wondering, does"This will be corrected" mean that it will be corrected in antlr?
   
  Best regards,
   
  Al 


Jim Idle <jimi at temporal-wave.com> wrote:                This will be corrected but for now:
   
  ^(USE packageName (^(PACKREFCLS definitionSelectionList))? end)
   
  Jim
   
        From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
Sent: Tuesday, July 24, 2007 5:32 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] (newbie)The rules to create tree walkers


   
    Hi,

     

    In the following,  antlr complains that instead of RPAREN found '?'

     

    packageReferenceClause
 :^(USE packageName ^(PACKREFCLS definitionSelectionList)? end)

    ;





       
---------------------------------
Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/725f0dd4/attachment-0001.html 

From JB0284 at att.com  Tue Jul 24 09:35:06 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Tue, 24 Jul 2007 09:35:06 -0700
Subject: [antlr-interest] String Template iteration
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802E32685@BD01MSXMB021.US.Cingular.Net>

I've been trying new things (to me) with StringTemplate and made a
couple of observations.

The separation of concerns is very clear. It makes it easy to think in
an MVC manner. I've done successful "versions" of UI's using html and
xml.
The compiled code doesn't change... only the template/group. Very nice!

One of the things I was hoping to avoid was iteration code for, say, a
combo box.

for (int i = 0; i < options.length; i++) {
  StringTemplate option = group.getInstanceOf("option");
  option.setAttribute("value", myval[i]);
  option.setAttribute("text", mytext[i]);
  option.setAttribute("selected", ( myval[i].equals(selectedVal) )? 
    "selected=\"selected\"" : "");
}

The piping feature in StringTemplate allows me to let StringTemplate
handle some iteration. I abstract a "form" into an object with accessors
and pass it to StringTemplate. Very nice!!! But that "selected" problem
represents a state of the ui, so I don't know how to pass that except as
a Boolean array. So that

<select>
$myForm.options, selectedIndices:{option, isSelected | <option
value="$option.value$"
$if(isSelected)$selected="selected"$endif$>$option.text$</option>};separ
ator="\n"$
</select>

I feel an objection rising in me about creating a Boolean array just for
the selected state. The objection is along the lines of "that's a lot of
work!" I answer myself with, "but it represents a very clear separation
of model/view concerns". I was wondering if there was another way to
look at the problem that provides a solution using StringTemplate
without iteration.

Best regards,
Jeff


From downtown1 at gmail.com  Tue Jul 24 09:45:22 2007
From: downtown1 at gmail.com (Igor Murashkin)
Date: Tue, 24 Jul 2007 11:45:22 -0500
Subject: [antlr-interest] Troubles lexing a decimal, (from an antlr beginner)
Message-ID: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>

Hello,

Well let me just say, its my first time using ANTLR. I needed a C# parser
generator so using flex/bison as I have done before was simply out of the
question, and I figured learning an LL(k) parser should be a nice variation
to just using LR(k).

Unfortunately before I can even get to the parsing, I need to fix my
lexing.. right now it doesn't work for matching decimals properly. Here are
the lexing rules in question:

===============

DOT        : '.'   ;
INTEGER    :    Digit+;
DECIMAL    :    Digit+ '.' Digit+;
fragment Digit
    :    '0'..'9';
IDENT    :     ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

NL    :    ('\r\n' // DOS/Windows
    |     '\r'  // Macintosh
          |     '\n') // Unix
          { $channel=HIDDEN; };

WS
      :     (' '
        |     '\t'
        |     '\f')
        { $channel=HIDDEN; };

===============

Unfortunately with simple output such as this it crashes with an
EarlyExitException:

===============
console.flushBuffer
general.holdMsec 1000
object 1.doSomeAction withThis
===============
The third line should produce "IDENT INTEGER DOT IDENT IDENT" but instead it
tries to match "1." as a DECIMAL and then once it sees the "d" it fails and
throws an EarlyExitException.

I am completely unsure what is going on.. I tried to set k=2 in options
figuring that if it looked at the period AND the next character it would get
a ('.' , 'd') clearly that does not match the DECIMAL rule.. but then I just
got a bunch of warnings in my lexer grammar so I removed the k=2 line
altogether. Looking at the generated code though its always calling LA(1)
and maybe there should be a way to get it to call LA(2) ?

Probably I am completely misunderstanding how the whole process of lexing is
working too. Looking at the generated code it is generating some DFAs, which
would imply some kind of regular language being at work here? Or does it
still use LL(k) parsing even for lexing?

I'm going to try to get the book asap too, probably it explains some of
this...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/951fcb7a/attachment.html 

From JB0284 at att.com  Tue Jul 24 10:28:47 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Tue, 24 Jul 2007 10:28:47 -0700
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802E326D0@BD01MSXMB021.US.Cingular.Net>

Does changing your IDENT rule to something like this fix it?

 

IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|WS)*; 



 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Igor Murashkin
Sent: Tuesday, July 24, 2007 12:45 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Troubles lexing a decimal, (from an antlr
beginner)

 

Hello,

Well let me just say, its my first time using ANTLR. I needed a C#
parser generator so using flex/bison as I have done before was simply
out of the question, and I figured learning an LL(k) parser should be a
nice variation to just using LR(k). 

Unfortunately before I can even get to the parsing, I need to fix my
lexing.. right now it doesn't work for matching decimals properly. Here
are the lexing rules in question:

===============

DOT        : '.'   ; 
INTEGER    :    Digit+;
DECIMAL    :    Digit+ '.' Digit+;
fragment Digit
    :    '0'..'9';
IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')*; 

NL    :    ('\r\n' // DOS/Windows
    |     '\r'  // Macintosh
          |     '\n') // Unix
          { $channel=HIDDEN; };
              
WS
      :     (' '
        |     '\t'
        |     '\f')
        { $channel=HIDDEN; };

===============

Unfortunately with simple output such as this it crashes with an
EarlyExitException:

===============
console.flushBuffer
general.holdMsec 1000
object 1.doSomeAction withThis
=============== 
The third line should produce "IDENT INTEGER DOT IDENT IDENT" but
instead it tries to match "1." as a DECIMAL and then once it sees the
"d" it fails and throws an EarlyExitException. 

I am completely unsure what is going on.. I tried to set k=2 in options
figuring that if it looked at the period AND the next character it would
get a ('.' , 'd') clearly that does not match the DECIMAL rule.. but
then I just got a bunch of warnings in my lexer grammar so I removed the
k=2 line altogether. Looking at the generated code though its always
calling LA(1) and maybe there should be a way to get it to call LA(2) ? 

Probably I am completely misunderstanding how the whole process of
lexing is working too. Looking at the generated code it is generating
some DFAs, which would imply some kind of regular language being at work
here? Or does it still use LL(k) parsing even for lexing? 

I'm going to try to get the book asap too, probably it explains some of
this...

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/62755ea5/attachment.html 

From matthew.j.diehl at intel.com  Tue Jul 24 10:34:50 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 24 Jul 2007 10:34:50 -0700
Subject: [antlr-interest] (newbie)The rules to create tree walkers
In-Reply-To: <880346.97964.qm@web58105.mail.re3.yahoo.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20253861B@orsmsx417.amr.corp.intel.com>

 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
> Sent: Tuesday, July 24, 2007 9:24 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] (newbie)The rules to create tree walkers
> 
>  
> Hi,
>  
> Thank you very much for your reply. I was wondering, 
> does"This will be corrected" mean that it will be corrected in antlr?
>  

Yes, Terence already marked it as a future feature enhancement for
ANTLR.

Matt

From JB0284 at att.com  Tue Jul 24 10:37:07 2007
From: JB0284 at att.com (Barnes, Jeff)
Date: Tue, 24 Jul 2007 10:37:07 -0700
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802E326D0@BD01MSXMB021.US.Cingular.Net>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
	<3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802E326D0@BD01MSXMB021.US.Cingular.Net>
Message-ID: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802E326E0@BD01MSXMB021.US.Cingular.Net>

Sorry I didn't look at the last line of your post...

 

The problem is with the DECIMAL rule, most likely. Does this help?

 

DECIMAL    :    Digit+ DOT Digit+;

 

In 2.7 you would have to add a sem pred to disambiguate. I don't know
about the new antlr.

 

Regards,

Jeff

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Barnes, Jeff
Sent: Tuesday, July 24, 2007 1:29 PM
To: Igor Murashkin; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Troubles lexing a decimal,(from an antlr
beginner)

 

Does changing your IDENT rule to something like this fix it?

 

IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|WS)*; 

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Igor Murashkin
Sent: Tuesday, July 24, 2007 12:45 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Troubles lexing a decimal, (from an antlr
beginner)

 

Hello,

Well let me just say, its my first time using ANTLR. I needed a C#
parser generator so using flex/bison as I have done before was simply
out of the question, and I figured learning an LL(k) parser should be a
nice variation to just using LR(k). 

Unfortunately before I can even get to the parsing, I need to fix my
lexing.. right now it doesn't work for matching decimals properly. Here
are the lexing rules in question:

===============

DOT        : '.'   ; 
INTEGER    :    Digit+;
DECIMAL    :    Digit+ '.' Digit+;
fragment Digit
    :    '0'..'9';
IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')*; 

NL    :    ('\r\n' // DOS/Windows
    |     '\r'  // Macintosh
          |     '\n') // Unix
          { $channel=HIDDEN; };
              
WS
      :     (' '
        |     '\t'
        |     '\f')
        { $channel=HIDDEN; };

===============

Unfortunately with simple output such as this it crashes with an
EarlyExitException:

===============
console.flushBuffer
general.holdMsec 1000
object 1.doSomeAction withThis
=============== 
The third line should produce "IDENT INTEGER DOT IDENT IDENT" but
instead it tries to match "1." as a DECIMAL and then once it sees the
"d" it fails and throws an EarlyExitException. 

I am completely unsure what is going on.. I tried to set k=2 in options
figuring that if it looked at the period AND the next character it would
get a ('.' , 'd') clearly that does not match the DECIMAL rule.. but
then I just got a bunch of warnings in my lexer grammar so I removed the
k=2 line altogether. Looking at the generated code though its always
calling LA(1) and maybe there should be a way to get it to call LA(2) ? 

Probably I am completely misunderstanding how the whole process of
lexing is working too. Looking at the generated code it is generating
some DFAs, which would imply some kind of regular language being at work
here? Or does it still use LL(k) parsing even for lexing? 

I'm going to try to get the book asap too, probably it explains some of
this...

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/d17e1bc2/attachment-0001.html 

From sedwards at harmonia.com  Tue Jul 24 10:40:09 2007
From: sedwards at harmonia.com (Sam Edwards)
Date: Tue, 24 Jul 2007 10:40:09 -0700
Subject: [antlr-interest] Lexer rule for single quote
In-Reply-To: <3FDBFA5A9BC6BD4EB5FFE1B29E33DB4802E326E0@BD01MSXMB021.US.Cingular.Net>
Message-ID: <2AFB2E23E9794B4BA6A0431607D6458803567B8B@ehost010-7.exch010.intermedia.net>

In ANTLR v 3, single quotes are used for character literals.  I have my
entire lexer working correctly except for the TIC.  I have the rule:
 
TIC    :'\''; which never gets discovered.  What I'm trying to recognize
is a single TIC (apostrophe).

Is my lexer rule written correctly, or do I need a different escape
character?

Thank you,
-Sam



________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Barnes, Jeff
Sent: Tuesday, July 24, 2007 1:37 PM
To: Igor Murashkin; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Troubles lexing a decimal,(from an antlr
beginner)



Sorry I didn't look at the last line of your post...

 

The problem is with the DECIMAL rule, most likely. Does this help?

 

DECIMAL    :    Digit+ DOT Digit+;

 

In 2.7 you would have to add a sem pred to disambiguate. I don't know
about the new antlr.

 

Regards,

Jeff

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Barnes, Jeff
Sent: Tuesday, July 24, 2007 1:29 PM
To: Igor Murashkin; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Troubles lexing a decimal,(from an antlr
beginner)

 

Does changing your IDENT rule to something like this fix it?

 

IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_'|WS)*; 

 

________________________________

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Igor Murashkin
Sent: Tuesday, July 24, 2007 12:45 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Troubles lexing a decimal, (from an antlr
beginner)

 

Hello,

Well let me just say, its my first time using ANTLR. I needed a C#
parser generator so using flex/bison as I have done before was simply
out of the question, and I figured learning an LL(k) parser should be a
nice variation to just using LR(k). 

Unfortunately before I can even get to the parsing, I need to fix my
lexing.. right now it doesn't work for matching decimals properly. Here
are the lexing rules in question:

===============

DOT        : '.'   ; 
INTEGER    :    Digit+;
DECIMAL    :    Digit+ '.' Digit+;
fragment Digit
    :    '0'..'9';
IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')*; 

NL    :    ('\r\n' // DOS/Windows
    |     '\r'  // Macintosh
          |     '\n') // Unix
          { $channel=HIDDEN; };
              
WS
      :     (' '
        |     '\t'
        |     '\f')
        { $channel=HIDDEN; };

===============

Unfortunately with simple output such as this it crashes with an
EarlyExitException:

===============
console.flushBuffer
general.holdMsec 1000
object 1.doSomeAction withThis
=============== 
The third line should produce "IDENT INTEGER DOT IDENT IDENT" but
instead it tries to match "1." as a DECIMAL and then once it sees the
"d" it fails and throws an EarlyExitException. 

I am completely unsure what is going on.. I tried to set k=2 in options
figuring that if it looked at the period AND the next character it would
get a ('.' , 'd') clearly that does not match the DECIMAL rule.. but
then I just got a bunch of warnings in my lexer grammar so I removed the
k=2 line altogether. Looking at the generated code though its always
calling LA(1) and maybe there should be a way to get it to call LA(2) ? 

Probably I am completely misunderstanding how the whole process of
lexing is working too. Looking at the generated code it is generating
some DFAs, which would imply some kind of regular language being at work
here? Or does it still use LL(k) parsing even for lexing? 

I'm going to try to get the book asap too, probably it explains some of
this...

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/323f57f8/attachment.html 

From rbuck at verisign.com  Tue Jul 24 10:54:38 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 13:54:38 -0400
Subject: [antlr-interest] Newbie question...
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727973@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727A27@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Hi,

This was one issue:

> DIGIT	:	'1'..'9'

Should have been:

> DIGIT	:	'0'..'9'

But I still get the warnings when code is generated:

[10:54:15] warning(208): SetTuple.g:93:1: The following token
definitions are unreachable:
 UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
[10:54:15] warning(208): SetTuple.g:93:1: The following token
definitions are unreachable:
  UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN

Something wrong here still? Seems like I do refer to these, don't I?

-Bob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> Sent: Tuesday, July 24, 2007 11:44 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Newbie question...
> 
> Hi,
> 
> I never have written a grammar before in ANTLR. Could someone 
> provide some hint as to how to accomplish what I am 
> attempting. I think I am pretty close, but I run into some 
> errors when I run my simple application main, and when I do a 
> grammar check.
> 
> I have a language of sorts I use to express traits for 
> messaging system drivers. A sample traits description follows:
> 
>  
> (TRAITS={(PERSISTENCE=FS),(PROTOCOL={(POST={DIRECT,RENAME}),(T
> AKE={INDIR
> ECT,CREATE})})})
> 
> A greatly simplified example using this grammar could be:
> 
>     (message-version=1.0)
> 
> I wrote a grammar that seems to work, for the most part.
> 
> ##############################################
> grammar SetTuple;
> 
> options {
> 	output=AST;
> }
> 
> @members {
>     public static void main(String[] args) throws Exception {
>         SetTupleLexer lex = new SetTupleLexer(new 
> ANTLRStringStream(args[0]));
>        	CommonTokenStream tokens = new CommonTokenStream(lex);
>         SetTupleParser parser = new SetTupleParser(tokens);
>         try {
>             parser.prog();
>         } catch (RecognitionException e)  {
>             e.printStackTrace();
>         }
>     }
> }
> 
> /*------------------------------------------------------------------
>  * PARSER RULES
>  *------------------------------------------------------------------*/
> 
> prog
> 	:	tuple
> 	;
> 
> tuple
> 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> R_PAREN
> 	;
> 
> set
> 	:	L_CURLY tuple ( COMMA tuple )*
> 	;
> 
> tuple_declaration
> 	:	tuple_key ( AT_SIGN set )? 
> 	;
> 
> tuple_key
> 	:	IDENT
> 	;
> tuple_value
> 	:	( PCHAR )*
> 	;
> 
> /*------------------------------------------------------------------
>  * LEXER RULES
>  *------------------------------------------------------------------*/
> 
> PCHAR	:	PCT_ENCODED | UNRESERVED
> 	;
> 
> UNRESERVED
> 	:	ALPHA | DIGIT | '-' | '.' | '_' | '~' | ':'
> 	;
> PCT_ENCODED
> 	:	'%' HEXDIGIT HEXDIGIT
> 	;
> HEXDIGIT:	('0'..'9'|'a'..'f'|'A'..'F')
> 	;
> IDENT	:	ALPHA ( ALPHA | UNDERSCORE | HYPHEN | DIGIT)*
> 	;
> ALPHA
> 	:	('a'..'z')|('A'..'Z')
> 	;
> L_PAREN
> 	:	'('
> 	;
> R_PAREN :	')'
> 	;
> L_CURLY	:	'{'
> 	;
> R_CURLY	:	'}'
> 	;
> DIGIT	:	'1'..'9'
> 	;
> COMMA	:	','
> 	;
> EQUALS	:	'='
> 	;
> L_BRACKET
> 	:	'['
> 	;
> R_BRACKET
> 	:	']'
> 	;
> AT_SIGN	:	'@'
> 	;
> UNDERSCORE
> 	:	'_'
> 	;
> HYPHEN	:	'-'
> 	;
> ##############################################
> 
> But when I check the grammar using ANTLRWorks, I get the following
> warning:
> 
> [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> definitions are unreachable:
> UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> definitions are unreachable:
> UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> [10:55:18] Checking Grammar...
> 
> When I run the simplified example, I see the following error 
> on the command line:
> 
>     line 1:19 mismatched input '0' expecting R_PAREN
> 
> What am I missing here?
> 
> -Bob
> 

From ted.villalba at gmail.com  Tue Jul 24 10:56:29 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 24 Jul 2007 10:56:29 -0700
Subject: [antlr-interest] Help controlling parser decisions
Message-ID: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>

Hi,

I have a grammar that contains tokens that are sometimes operators,
sometimes not, depending on the context. The set of operators overlaps with
the set of all words that can be acceptable tokens. Trouble is, depending on
the order of my lexer rules,  the parser will recognize all such tokens (AND
, OR ,NEAR) as operators, or will recognize none of them as operators.

So if my lexer rules are:
BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
WOK_OP    : 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
...
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

In this order, if any of the tokens from the first 2 rules are encountered,
the parser assumes the token to be an operator, even where there is no
grammar rule to support the notion( and will follow with aa NoViableAlt
exception). If the rules are reversed, it will not recognize any of the
wchar+ as operators.

So if I try to parse something like:
SO=(BY THE AIRPORT) , then it works fine, but if I try SO=(NEAR THE AIRPORT)
it throws the exception, trying to force "NEAR" into the role of operator,
even if the grammar does not support the idea of an operator at the
beginning of a phrase.

Here is my complete grammar:

grammar WQL;

options{
    output=AST;
    ASTLabelType=CommonTree;
}

tokens{ TAG; VALUE; TERMS;} //imaginary token types

@header{
import java.util.HashMap;
}

@members {

HashMap fieldMap = new HashMap();

}





start   : ( query  {System.out.println("AST:\n"+$query.tree.toStringTree());}
)+
        ;


query   : field (BOOL_OP^ query)*
    | LPAREN! query RPAREN! ( BOOL_OP^ query)*
    ;

field     : tag '=' LPAREN value RPAREN -> ^('=' tag value)
    | tag '=' terms+ -> ^('=' tag terms)
        | qid
        ;

value   :  value_ -> ^(VALUE value_) ;

value_  : terms+ (operator^ value)*
    | LPAREN! value RPAREN! ( operator^ value)*
    ;

tag    : WCHAR
    ;

terms   : WCHAR+  -> ^(TERMS WCHAR+ )
    | QUOTE WCHAR+ QUOTE -> ^(TERMS WCHAR+ ) // strip QUOTEs
    ;


qid     : '#'!DIGIT
        ;

operator: BOOL_OP|WOK_OP;


BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
WOK_OP    : 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
DIGIT   : ('0'..'9');
WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
LPAREN    : '(' ;
RPAREN    : ')' ;
QUOTE    : '"';
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;


Thanks a million for the help.

Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/db368610/attachment-0001.html 

From jimi at temporal-wave.com  Tue Jul 24 11:02:00 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Jul 2007 11:02:00 -0700
Subject: [antlr-interest] (newbie)The rules to create tree walkers
In-Reply-To: <880346.97964.qm@web58105.mail.re3.yahoo.com>
References: <051466DAA0D608439E196797955018D76F14@wavemachine.temporal-wave.com>
	<880346.97964.qm@web58105.mail.re3.yahoo.com>
Message-ID: <051466DAA0D608439E196797955018D76F16@wavemachine.temporal-wave.com>

Yes. That particular construct was just left out of the current grammar
that scans ANTLR grammars. The current grammar was written using ANTLR2
and is currently being replaced by one written in ANTLR3, thus
maintaining the golden rule that good tools should be built using
themselves J. When that process is complete, I believe that Ter has a
note/bug report to make sure that this is added.

 

You can of course (and generally I find that once I start wanting to add
actions to the tree grammar this tned sto be more readable), just do
this:

 

r1 : ^(USE packageName packRefClass? end)

;

 

packRefClass

                : ^(PACKREFCLS definitionSelectionList)

;

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
Sent: Tuesday, July 24, 2007 9:24 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] (newbie)The rules to create tree walkers

 

 

Hi,

 

Thank you very much for your reply. I was wondering, does"This will be
corrected" mean that it will be corrected in antlr?

 

Best regards,

 

Al 



Jim Idle <jimi at temporal-wave.com> wrote: 

This will be corrected but for now:

 

^(USE packageName (^(PACKREFCLS definitionSelectionList))? end)

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of ali azimi
Sent: Tuesday, July 24, 2007 5:32 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] (newbie)The rules to create tree walkers

 

Hi,

 

In the following,  antlr complains that instead of RPAREN found '?'

 

packageReferenceClause
 :^(USE packageName ^(PACKREFCLS definitionSelectionList)? end)

;

 

  

________________________________

Building a website is a piece of cake. 
Yahoo! Small Business gives you all the tools to get online.
<http://us.rd.yahoo.com/evt=48251/*http:/smallbusiness.yahoo.com/webhost
ing/?p=PASSPORTPLUS> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/9ddcb14d/attachment.html 

From tbrandonau at gmail.com  Tue Jul 24 11:03:13 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 25 Jul 2007 04:03:13 +1000
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
Message-ID: <ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>

On 7/25/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> Hi,
>
> I have a grammar that contains tokens that are sometimes operators,
> sometimes not, depending on the context. The set of operators overlaps with
> the set of all words that can be acceptable tokens. Trouble is, depending on
> the order of my lexer rules,  the parser will recognize all such tokens (AND
> , OR ,NEAR) as operators, or will recognize none of them as operators.
>
> So if my lexer rules are:
> BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
> WOK_OP    :
> 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
> ...
> WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
>
> In this order, if any of the tokens from the first 2 rules are encountered,
> the parser assumes the token to be an operator, even where there is no
> grammar rule to support the notion( and will follow with aa NoViableAlt
> exception). If the rules are reversed, it will not recognize any of the
> wchar+ as operators.
>
> So if I try to parse something like:
> SO=(BY THE AIRPORT) , then it works fine, but if I try SO=(NEAR THE AIRPORT)
> it throws the exception, trying to force "NEAR" into the role of operator,
> even if the grammar does not support the idea of an operator at the
> beginning of a phrase.
Lexing occurs independently of parsing so parser context does not
influence which tokens are matched.
See http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741 for
the two possible solutions.

Tom.
>
> Here is my complete grammar:
>
> grammar WQL;
>
> options{
>     output=AST;
>     ASTLabelType=CommonTree;
> }
>
> tokens{ TAG; VALUE; TERMS;} //imaginary token types
>
> @header{
> import java.util.HashMap ;
> }
>
> @members {
>
> HashMap fieldMap = new HashMap();
>
> }
>
>
>
>
>
> start   : ( query
> {System.out.println("AST:\n"+$query.tree.toStringTree());}
> )+
>         ;
>
>
> query   : field (BOOL_OP^ query)*
>     | LPAREN! query RPAREN! ( BOOL_OP^ query)*
>     ;
>
> field     : tag '=' LPAREN value RPAREN -> ^('=' tag value)
>     | tag '=' terms+ -> ^('=' tag terms)
>         | qid
>         ;
>
> value   :  value_ -> ^(VALUE value_) ;
>
> value_  : terms+ (operator^ value)*
>     | LPAREN! value RPAREN! ( operator^ value)*
>     ;
>
> tag    : WCHAR
>     ;
>
>  terms   : WCHAR+  -> ^(TERMS WCHAR+ )
>     | QUOTE WCHAR+ QUOTE -> ^(TERMS WCHAR+ ) // strip QUOTEs
>     ;
>
>
> qid     : '#'!DIGIT
>         ;
>
> operator: BOOL_OP|WOK_OP;
>
>
> BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
> WOK_OP    :
> 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
> DIGIT   : ('0'..'9');
> WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
> LPAREN    : '(' ;
> RPAREN    : ')' ;
> QUOTE    : '"';
> WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
>
>
> Thanks a million for the help.
>
> Ted
>
>
>

From rschulz at sonic.net  Tue Jul 24 11:04:36 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 24 Jul 2007 11:04:36 -0700
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
Message-ID: <200707241104.36279.rschulz@sonic.net>

On Tuesday 24 July 2007 10:56, Ted Villalba wrote:
> Hi,
>
> I have a grammar that contains tokens that are sometimes operators,
> sometimes not, depending on the context. The set of operators
> overlaps with the set of all words that can be acceptable tokens.
> Trouble is, depending on the order of my lexer rules,  the parser
> will recognize all such tokens (AND , OR ,NEAR) as operators, or will
> recognize none of them as operators.

This qualifies as a FAQ, I think.

Lexical analysis is not driven by parser rules. It is an entirely 
separate, earlier phase of input processing. There is no way to produce 
different token types from any given input depending on context.

Another way of thinking about it is that while the parser is driven by 
top-down invocation of rules (along with all the look-ahead and 
backtracking that may be involved), there is no such orchestration of 
the lexical analyzer. It just chunks up the characters (or breaks down 
the total sequence) into a linear chain of sub-sequences of the total 
input.


> ...
>
> Ted


Randall Schulz

From jimi at temporal-wave.com  Tue Jul 24 11:05:48 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Jul 2007 11:05:48 -0700
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com>

Igor,

 

This questions was asked and answered just a few days ago:

 

I think that this question points out that many of us expect ATNLR to
"just work it out" for us. All these problems are best solved with a
mind experiment first "How would you scan it with the eye?", then break
the rule at the different alternatives yourself and stick in the
lookahead you perform with your mind. It will result in better generated
code anyway:

 

grammar fred;

 

stat 

            : test+

            ;

test

            :           (INT DOT ID)

            |           FLOAT

            ;

            

fragment

DIGIT    : '0'..'9'

            ;

 

FLOAT : INT

                                    (

                                                  ('.' INT)=> '.' INT

                                                | {$type = INT; }

                                    )

                        ;

 

DOT     : '.' ;

                        

Fragment                                  // Also ensures a token type
INT is present

INT       : DIGIT+;

 

ID         :           ('A'..'Z' | 'a'..'z')+

            ;

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Igor Murashkin
Sent: Tuesday, July 24, 2007 9:45 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Troubles lexing a decimal, (from an antlr
beginner)

 

Hello,

Well let me just say, its my first time using ANTLR. I needed a C#
parser generator so using flex/bison as I have done before was simply
out of the question, and I figured learning an LL(k) parser should be a
nice variation to just using LR(k). 

Unfortunately before I can even get to the parsing, I need to fix my
lexing.. right now it doesn't work for matching decimals properly. Here
are the lexing rules in question:

===============

DOT        : '.'   ; 
INTEGER    :    Digit+;
DECIMAL    :    Digit+ '.' Digit+;
fragment Digit
    :    '0'..'9';
IDENT    :     ('a'..'z'|'A'..'Z'|'_')
('a'..'z'|'A'..'Z'|'0'..'9'|'_')*; 

NL    :    ('\r\n' // DOS/Windows
    |     '\r'  // Macintosh
          |     '\n') // Unix
          { $channel=HIDDEN; };
              
WS
      :     (' '
        |     '\t'
        |     '\f')
        { $channel=HIDDEN; };

===============

Unfortunately with simple output such as this it crashes with an
EarlyExitException:

===============
console.flushBuffer
general.holdMsec 1000
object 1.doSomeAction withThis
=============== 
The third line should produce "IDENT INTEGER DOT IDENT IDENT" but
instead it tries to match "1." as a DECIMAL and then once it sees the
"d" it fails and throws an EarlyExitException. 

I am completely unsure what is going on.. I tried to set k=2 in options
figuring that if it looked at the period AND the next character it would
get a ('.' , 'd') clearly that does not match the DECIMAL rule.. but
then I just got a bunch of warnings in my lexer grammar so I removed the
k=2 line altogether. Looking at the generated code though its always
calling LA(1) and maybe there should be a way to get it to call LA(2) ? 

Probably I am completely misunderstanding how the whole process of
lexing is working too. Looking at the generated code it is generating
some DFAs, which would imply some kind of regular language being at work
here? Or does it still use LL(k) parsing even for lexing? 

I'm going to try to get the book asap too, probably it explains some of
this...

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/08db0eb1/attachment-0001.html 

From rbuck at verisign.com  Tue Jul 24 12:16:57 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 15:16:57 -0400
Subject: [antlr-interest] Newbie question...
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727A27@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727AAF@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Found the second issue: have to use 'fragment' in the lexer stuff.

-Bob 

> -----Original Message-----
> From: Buck, Robert 
> Sent: Tuesday, July 24, 2007 1:55 PM
> To: Buck, Robert; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Newbie question...
> 
> Hi,
> 
> This was one issue:
> 
> > DIGIT	:	'1'..'9'
> 
> Should have been:
> 
> > DIGIT	:	'0'..'9'
> 
> But I still get the warnings when code is generated:
> 
> [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> definitions are unreachable:
>  UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> definitions are unreachable:
>   UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> 
> Something wrong here still? Seems like I do refer to these, don't I?
> 
> -Bob
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org 
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> > Sent: Tuesday, July 24, 2007 11:44 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Newbie question...
> > 
> > Hi,
> > 
> > I never have written a grammar before in ANTLR. Could 
> someone provide 
> > some hint as to how to accomplish what I am attempting. I 
> think I am 
> > pretty close, but I run into some errors when I run my simple 
> > application main, and when I do a grammar check.
> > 
> > I have a language of sorts I use to express traits for messaging 
> > system drivers. A sample traits description follows:
> > 
> >  
> > (TRAITS={(PERSISTENCE=FS),(PROTOCOL={(POST={DIRECT,RENAME}),(T
> > AKE={INDIR
> > ECT,CREATE})})})
> > 
> > A greatly simplified example using this grammar could be:
> > 
> >     (message-version=1.0)
> > 
> > I wrote a grammar that seems to work, for the most part.
> > 
> > ##############################################
> > grammar SetTuple;
> > 
> > options {
> > 	output=AST;
> > }
> > 
> > @members {
> >     public static void main(String[] args) throws Exception {
> >         SetTupleLexer lex = new SetTupleLexer(new 
> > ANTLRStringStream(args[0]));
> >        	CommonTokenStream tokens = new CommonTokenStream(lex);
> >         SetTupleParser parser = new SetTupleParser(tokens);
> >         try {
> >             parser.prog();
> >         } catch (RecognitionException e)  {
> >             e.printStackTrace();
> >         }
> >     }
> > }
> > 
> > /*------------------------------------------------------------------
> >  * PARSER RULES
> >  
> *------------------------------------------------------------------*/
> > 
> > prog
> > 	:	tuple
> > 	;
> > 
> > tuple
> > 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> > R_PAREN
> > 	;
> > 
> > set
> > 	:	L_CURLY tuple ( COMMA tuple )*
> > 	;
> > 
> > tuple_declaration
> > 	:	tuple_key ( AT_SIGN set )? 
> > 	;
> > 
> > tuple_key
> > 	:	IDENT
> > 	;
> > tuple_value
> > 	:	( PCHAR )*
> > 	;
> > 
> > /*------------------------------------------------------------------
> >  * LEXER RULES
> >  
> *------------------------------------------------------------------*/
> > 
> > PCHAR	:	PCT_ENCODED | UNRESERVED
> > 	;
> > 
> > UNRESERVED
> > 	:	ALPHA | DIGIT | '-' | '.' | '_' | '~' | ':'
> > 	;
> > PCT_ENCODED
> > 	:	'%' HEXDIGIT HEXDIGIT
> > 	;
> > HEXDIGIT:	('0'..'9'|'a'..'f'|'A'..'F')
> > 	;
> > IDENT	:	ALPHA ( ALPHA | UNDERSCORE | HYPHEN | DIGIT)*
> > 	;
> > ALPHA
> > 	:	('a'..'z')|('A'..'Z')
> > 	;
> > L_PAREN
> > 	:	'('
> > 	;
> > R_PAREN :	')'
> > 	;
> > L_CURLY	:	'{'
> > 	;
> > R_CURLY	:	'}'
> > 	;
> > DIGIT	:	'1'..'9'
> > 	;
> > COMMA	:	','
> > 	;
> > EQUALS	:	'='
> > 	;
> > L_BRACKET
> > 	:	'['
> > 	;
> > R_BRACKET
> > 	:	']'
> > 	;
> > AT_SIGN	:	'@'
> > 	;
> > UNDERSCORE
> > 	:	'_'
> > 	;
> > HYPHEN	:	'-'
> > 	;
> > ##############################################
> > 
> > But when I check the grammar using ANTLRWorks, I get the following
> > warning:
> > 
> > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > definitions are unreachable:
> > UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > definitions are unreachable:
> > UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > [10:55:18] Checking Grammar...
> > 
> > When I run the simplified example, I see the following error on the 
> > command line:
> > 
> >     line 1:19 mismatched input '0' expecting R_PAREN
> > 
> > What am I missing here?
> > 
> > -Bob
> > 

From mitchellch at comcast.net  Tue Jul 24 12:26:17 2007
From: mitchellch at comcast.net (mitchellch)
Date: Tue, 24 Jul 2007 12:26:17 -0700
Subject: [antlr-interest] Newbie question...
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727AAF@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727A27@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<B408B6F6E3DEB04681E207B528821D49727AAF@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <003901c7ce28$8e3a2f20$170210ac@us.packetmotion.com>

I'm curious, does your parser successfully parse the example you provided?

-Mitch

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
Sent: Tuesday, July 24, 2007 12:17 PM
To: Buck, Robert; antlr-interest at antlr.org
Subject: Re: [antlr-interest] Newbie question...

Found the second issue: have to use 'fragment' in the lexer stuff.

-Bob 

> -----Original Message-----
> From: Buck, Robert 
> Sent: Tuesday, July 24, 2007 1:55 PM
> To: Buck, Robert; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Newbie question...
> 
> Hi,
> 
> This was one issue:
> 
> > DIGIT	:	'1'..'9'
> 
> Should have been:
> 
> > DIGIT	:	'0'..'9'
> 
> But I still get the warnings when code is generated:
> 
> [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> definitions are unreachable:
>  UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> definitions are unreachable:
>   UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> 
> Something wrong here still? Seems like I do refer to these, don't I?
> 
> -Bob
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org 
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> > Sent: Tuesday, July 24, 2007 11:44 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Newbie question...
> > 
> > Hi,
> > 
> > I never have written a grammar before in ANTLR. Could 
> someone provide 
> > some hint as to how to accomplish what I am attempting. I 
> think I am 
> > pretty close, but I run into some errors when I run my simple 
> > application main, and when I do a grammar check.
> > 
> > I have a language of sorts I use to express traits for messaging 
> > system drivers. A sample traits description follows:
> > 
> >  
> > (TRAITS={(PERSISTENCE=FS),(PROTOCOL={(POST={DIRECT,RENAME}),(T
> > AKE={INDIR
> > ECT,CREATE})})})
> > 
> > A greatly simplified example using this grammar could be:
> > 
> >     (message-version=1.0)
> > 
> > I wrote a grammar that seems to work, for the most part.
> > 
> > ##############################################
> > grammar SetTuple;
> > 
> > options {
> > 	output=AST;
> > }
> > 
> > @members {
> >     public static void main(String[] args) throws Exception {
> >         SetTupleLexer lex = new SetTupleLexer(new 
> > ANTLRStringStream(args[0]));
> >        	CommonTokenStream tokens = new CommonTokenStream(lex);
> >         SetTupleParser parser = new SetTupleParser(tokens);
> >         try {
> >             parser.prog();
> >         } catch (RecognitionException e)  {
> >             e.printStackTrace();
> >         }
> >     }
> > }
> > 
> > /*------------------------------------------------------------------
> >  * PARSER RULES
> >  
> *------------------------------------------------------------------*/
> > 
> > prog
> > 	:	tuple
> > 	;
> > 
> > tuple
> > 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> > R_PAREN
> > 	;
> > 
> > set
> > 	:	L_CURLY tuple ( COMMA tuple )*
> > 	;
> > 
> > tuple_declaration
> > 	:	tuple_key ( AT_SIGN set )? 
> > 	;
> > 
> > tuple_key
> > 	:	IDENT
> > 	;
> > tuple_value
> > 	:	( PCHAR )*
> > 	;
> > 
> > /*------------------------------------------------------------------
> >  * LEXER RULES
> >  
> *------------------------------------------------------------------*/
> > 
> > PCHAR	:	PCT_ENCODED | UNRESERVED
> > 	;
> > 
> > UNRESERVED
> > 	:	ALPHA | DIGIT | '-' | '.' | '_' | '~' | ':'
> > 	;
> > PCT_ENCODED
> > 	:	'%' HEXDIGIT HEXDIGIT
> > 	;
> > HEXDIGIT:	('0'..'9'|'a'..'f'|'A'..'F')
> > 	;
> > IDENT	:	ALPHA ( ALPHA | UNDERSCORE | HYPHEN | DIGIT)*
> > 	;
> > ALPHA
> > 	:	('a'..'z')|('A'..'Z')
> > 	;
> > L_PAREN
> > 	:	'('
> > 	;
> > R_PAREN :	')'
> > 	;
> > L_CURLY	:	'{'
> > 	;
> > R_CURLY	:	'}'
> > 	;
> > DIGIT	:	'1'..'9'
> > 	;
> > COMMA	:	','
> > 	;
> > EQUALS	:	'='
> > 	;
> > L_BRACKET
> > 	:	'['
> > 	;
> > R_BRACKET
> > 	:	']'
> > 	;
> > AT_SIGN	:	'@'
> > 	;
> > UNDERSCORE
> > 	:	'_'
> > 	;
> > HYPHEN	:	'-'
> > 	;
> > ##############################################
> > 
> > But when I check the grammar using ANTLRWorks, I get the following
> > warning:
> > 
> > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > definitions are unreachable:
> > UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > definitions are unreachable:
> > UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > [10:55:18] Checking Grammar...
> > 
> > When I run the simplified example, I see the following error on the 
> > command line:
> > 
> >     line 1:19 mismatched input '0' expecting R_PAREN
> > 
> > What am I missing here?
> > 
> > -Bob
> > 



From rbuck at verisign.com  Tue Jul 24 12:34:58 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 15:34:58 -0400
Subject: [antlr-interest] Newbie question...
In-Reply-To: <003901c7ce28$8e3a2f20$170210ac@us.packetmotion.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727AC2@DUL1WNEXMB05.vcorp.ad.vrsn.com>

It did work (at least the simple app-main program did not complain, log
errors, or throw) for the simple case:

   (message-version=1.0)

But it fails now for a slightly more complex case:

   (container@{(charset=utf-8)}=foo)
 
line 1:10 no viable alternative at character '@'
line 1:11 mismatched input '{' expecting EQUALS
line 1:21 no viable alternative at input 'utf-8'

Trying to understand this one now.

Bob

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of mitchellch
> Sent: Tuesday, July 24, 2007 3:26 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie question...
> 
> I'm curious, does your parser successfully parse the example 
> you provided?
> 
> -Mitch
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> Sent: Tuesday, July 24, 2007 12:17 PM
> To: Buck, Robert; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie question...
> 
> Found the second issue: have to use 'fragment' in the lexer stuff.
> 
> -Bob 
> 
> > -----Original Message-----
> > From: Buck, Robert
> > Sent: Tuesday, July 24, 2007 1:55 PM
> > To: Buck, Robert; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Newbie question...
> > 
> > Hi,
> > 
> > This was one issue:
> > 
> > > DIGIT	:	'1'..'9'
> > 
> > Should have been:
> > 
> > > DIGIT	:	'0'..'9'
> > 
> > But I still get the warnings when code is generated:
> > 
> > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > definitions are unreachable:
> >  UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > definitions are unreachable:
> >   UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > 
> > Something wrong here still? Seems like I do refer to these, don't I?
> > 
> > -Bob
> > 
> > 
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org 
> > > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Buck, Robert
> > > Sent: Tuesday, July 24, 2007 11:44 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Newbie question...
> > > 
> > > Hi,
> > > 
> > > I never have written a grammar before in ANTLR. Could
> > someone provide
> > > some hint as to how to accomplish what I am attempting. I
> > think I am
> > > pretty close, but I run into some errors when I run my simple 
> > > application main, and when I do a grammar check.
> > > 
> > > I have a language of sorts I use to express traits for messaging 
> > > system drivers. A sample traits description follows:
> > > 
> > >  
> > > (TRAITS={(PERSISTENCE=FS),(PROTOCOL={(POST={DIRECT,RENAME}),(T
> > > AKE={INDIR
> > > ECT,CREATE})})})
> > > 
> > > A greatly simplified example using this grammar could be:
> > > 
> > >     (message-version=1.0)
> > > 
> > > I wrote a grammar that seems to work, for the most part.
> > > 
> > > ##############################################
> > > grammar SetTuple;
> > > 
> > > options {
> > > 	output=AST;
> > > }
> > > 
> > > @members {
> > >     public static void main(String[] args) throws Exception {
> > >         SetTupleLexer lex = new SetTupleLexer(new 
> > > ANTLRStringStream(args[0]));
> > >        	CommonTokenStream tokens = new CommonTokenStream(lex);
> > >         SetTupleParser parser = new SetTupleParser(tokens);
> > >         try {
> > >             parser.prog();
> > >         } catch (RecognitionException e)  {
> > >             e.printStackTrace();
> > >         }
> > >     }
> > > }
> > > 
> > > 
> /*------------------------------------------------------------------
> > >  * PARSER RULES
> > >  
> > 
> *------------------------------------------------------------------*/
> > > 
> > > prog
> > > 	:	tuple
> > > 	;
> > > 
> > > tuple
> > > 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> > > R_PAREN
> > > 	;
> > > 
> > > set
> > > 	:	L_CURLY tuple ( COMMA tuple )*
> > > 	;
> > > 
> > > tuple_declaration
> > > 	:	tuple_key ( AT_SIGN set )? 
> > > 	;
> > > 
> > > tuple_key
> > > 	:	IDENT
> > > 	;
> > > tuple_value
> > > 	:	( PCHAR )*
> > > 	;
> > > 
> > > 
> /*------------------------------------------------------------------
> > >  * LEXER RULES
> > >  
> > 
> *------------------------------------------------------------------*/
> > > 
> > > PCHAR	:	PCT_ENCODED | UNRESERVED
> > > 	;
> > > 
> > > UNRESERVED
> > > 	:	ALPHA | DIGIT | '-' | '.' | '_' | '~' | ':'
> > > 	;
> > > PCT_ENCODED
> > > 	:	'%' HEXDIGIT HEXDIGIT
> > > 	;
> > > HEXDIGIT:	('0'..'9'|'a'..'f'|'A'..'F')
> > > 	;
> > > IDENT	:	ALPHA ( ALPHA | UNDERSCORE | HYPHEN | DIGIT)*
> > > 	;
> > > ALPHA
> > > 	:	('a'..'z')|('A'..'Z')
> > > 	;
> > > L_PAREN
> > > 	:	'('
> > > 	;
> > > R_PAREN :	')'
> > > 	;
> > > L_CURLY	:	'{'
> > > 	;
> > > R_CURLY	:	'}'
> > > 	;
> > > DIGIT	:	'1'..'9'
> > > 	;
> > > COMMA	:	','
> > > 	;
> > > EQUALS	:	'='
> > > 	;
> > > L_BRACKET
> > > 	:	'['
> > > 	;
> > > R_BRACKET
> > > 	:	']'
> > > 	;
> > > AT_SIGN	:	'@'
> > > 	;
> > > UNDERSCORE
> > > 	:	'_'
> > > 	;
> > > HYPHEN	:	'-'
> > > 	;
> > > ##############################################
> > > 
> > > But when I check the grammar using ANTLRWorks, I get the following
> > > warning:
> > > 
> > > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > > definitions are unreachable:
> > > UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > > [10:54:15] warning(208): SetTuple.g:93:1: The following token 
> > > definitions are unreachable:
> > > UNRESERVED,PCT_ENCODED,ALPHA,DIGIT,UNDERSCORE,HYPHEN
> > > [10:55:18] Checking Grammar...
> > > 
> > > When I run the simplified example, I see the following 
> error on the 
> > > command line:
> > > 
> > >     line 1:19 mismatched input '0' expecting R_PAREN
> > > 
> > > What am I missing here?
> > > 
> > > -Bob
> > > 
> 
> 
> 

From john.farr at medtronic.com  Tue Jul 24 13:23:05 2007
From: john.farr at medtronic.com (Farr, John)
Date: Tue, 24 Jul 2007 15:23:05 -0500
Subject: [antlr-interest] Lexer generated for C# more than 100 times larger
	than for Java
Message-ID: <CE795F47110FDD4497AE9724FA7FE67501EE2038@MSPM1BMSGM08.ent.core.medtronic.com>


For a grammar I've been working on, the lexer file generated for
"language=CSharp" is over 100 times as large as that generated when
"language=Java". The C# lexer file size 26 MB (26,019,532) whereas the
Java lexer file is 240 KB (240,282). Obviously such a huge file taxes
the C# compiler (amazingly, it does build, but ever so slowly).

The size difference seems to be, at least in part, in the way the "DFA
transition" tables are generated. For Java these tables are generated as
Strings; for C# they're generated as arrays of shorts. There may be
other contributors to the size difference as well.

It seems peculiar that there would be such a huge difference in
generated source code size for 2 targets that are so similar. Is there
any possibility of reducing the size of the generated C# lexer code?

Thanks,
John

___________________________________________________________________________________________________
CONFIDENTIALITY AND PRIVACY NOTICE
Information transmitted by this email is proprietary to Medtronic and is intended for use only by the individual or entity to which it is addressed, and may contain information that is private, privileged, confidential or exempt from disclosure under applicable law. If you are not the intended recipient or it appears that this mail has been forwarded to you without proper authority, you are notified that any use or dissemination of this information in any manner is strictly prohibited. In such cases, please delete this mail from your records.

To view this notice in other languages you can either select the following link or manually copy and paste the link into the address bar of a web browser: http://emaildisclaimer.medtronic.com

From jaluber at gmx.de  Tue Jul 24 13:35:06 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 24 Jul 2007 22:35:06 +0200
Subject: [antlr-interest] Lexer generated for C# more than 100 times
 larger than for Java
In-Reply-To: <CE795F47110FDD4497AE9724FA7FE67501EE2038@MSPM1BMSGM08.ent.core.medtronic.com>
References: <CE795F47110FDD4497AE9724FA7FE67501EE2038@MSPM1BMSGM08.ent.core.medtronic.com>
Message-ID: <46A6627A.3010400@gmx.de>

Farr, John wrote:
> For a grammar I've been working on, the lexer file generated for
> "language=CSharp" is over 100 times as large as that generated when
> "language=Java". The C# lexer file size 26 MB (26,019,532) whereas the
> Java lexer file is 240 KB (240,282). Obviously such a huge file taxes
> the C# compiler (amazingly, it does build, but ever so slowly).
> 
> The size difference seems to be, at least in part, in the way the "DFA
> transition" tables are generated. For Java these tables are generated as
> Strings; for C# they're generated as arrays of shorts. There may be
> other contributors to the size difference as well.
> 
> It seems peculiar that there would be such a huge difference in
> generated source code size for 2 targets that are so similar. Is there
> any possibility of reducing the size of the generated C# lexer code?
> 
> Thanks,
> John

Try to change the lexer slightly. For whatever reason certain constructs
act differently, even if the recognized language is still the same. I
discovered this by changing

WHITESPACE
	:	WHITESPACE_CHARACTERS
	;

fragment WHITESPACE_CHARACTERS
	:	WHITESPACE_CHARACTER+
	;

to

WHITESPACE
	:	WHITESPACE_CHARACTER+
	;

Unfortunately I don't know how to identify the culprit besides removing
rules temporarily.

Best regards,
Johannes Luber

From rbuck at verisign.com  Tue Jul 24 13:50:49 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 16:50:49 -0400
Subject: [antlr-interest] Newbie: NoViableAltException
Message-ID: <B408B6F6E3DEB04681E207B528821D49727B1C@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Hi,

(foo=bar)
     ^

A "NoViableAltException(0!=[null]) exception occurs at 'bar', given the
following grammar. Not quite sure why. I did not understand this one.
What could be happening?

Thanks in advance,

Bob

#####################

prog
	:	tuple
	;
tuple
	:	L_PAREN tuple_decl EQUALS ( tupleValue | set ) R_PAREN
	;
set
	:	L_CURLY tuple ( COMMA tuple )*
	;
tuple_decl
	:	tupleKey ( tuplePI )? 
	;
tuplePI
	:	AT_SIGN set
	;
tupleKey
	:	IDENT
	;
tupleValue
	:	( PCHAR )*
	;

/*------------------------------------------------------------------
 * LEXER RULES
 *------------------------------------------------------------------*/

PCHAR
	:	PCT_ENCODED | UNRESERVED
	;
IDENT
	:	LETTER ( LETTER | UNDERSCORE | HYPHEN | DIGIT)*
	;
L_PAREN
	:	'('
	;
R_PAREN
	:	')'
	;
L_CURLY
	:	'{'
	;
R_CURLY
	:	'}'
	;
COMMA
	:	','
	;
EQUALS
	:	'='
	;
AT_SIGN
	:	'@'
	;
HexLiteral
	: '0' ('x'|'X') HEXDIGIT+ 
	;
fragment UNRESERVED
	:	LETTER | DIGIT | '-' | '.' | '_' | '~' | ':'
	;
fragment PCT_ENCODED
	:	'%' HEXDIGIT HEXDIGIT
	;
fragment HEXDIGIT
	:	( DIGIT | 'a'..'f' | 'A'..'F' )
	;
fragment LETTER
	:	('a'..'z')|('A'..'Z')
	;
fragment DIGIT
	:	'0'..'9'
	;
fragment L_BRACKET
	:	'['
	;
fragment R_BRACKET
	:	']'
	;
fragment UNDERSCORE
	:	'_'
	;
fragment HYPHEN
	:	'-'
	;

From jrc at skylon.demon.co.uk  Tue Jul 24 13:55:38 2007
From: jrc at skylon.demon.co.uk (John Connett)
Date: Tue, 24 Jul 2007 21:55:38 +0100
Subject: [antlr-interest] Lexer rule for single quote
In-Reply-To: <2AFB2E23E9794B4BA6A0431607D6458803567B8B@ehost010-7.exch010.intermedia.net>
References: <2AFB2E23E9794B4BA6A0431607D6458803567B8B@ehost010-7.exch010.intermedia.net>
Message-ID: <1185310538.8248.2.camel@gateway.home>

On Tue, 2007-07-24 at 10:40 -0700, Sam Edwards wrote:
> In ANTLR v 3, single quotes are used for character literals.  I have
> my entire lexer working correctly except for the TIC.  I have the
> rule:
>  
> TIC    :'\''; which never gets discovered.  What I'm trying to
> recognize is a single TIC (apostrophe).
> 
> Is my lexer rule written correctly, or do I need a different escape
> character?
> 
> Thank you,
> -Sam

On a related note I was attempting to use the following lexer rule to
recognize a string of one or more printable ASCII characters excluding 
SPACE, EQUALS and PIPE:

STRING  : ('!'..'<' | '>' .. '{' | '}'..'~')+ ;

However, strings containing QUOTE characters are not recognized as a
single token.  I have lloked in the FAQ but have not found a work
around.
--
John Connett



From matthew.j.diehl at intel.com  Tue Jul 24 14:08:43 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 24 Jul 2007 14:08:43 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727B1C@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C202538901@orsmsx417.amr.corp.intel.com>

You're mixing your lexer and parser rules.  IDENT is eating up all of
the UNRESERVED whenever there's more than one, PCHAR if there's only
one.  Then you're saying that 'bar', which is more than one UNRESERVED,
so it is the token IDENT, needs to be a bunch of PCHARs, but the PCHARs
have already been turned in to the token IDENT.

Try being more vague with your lexer if that's what you're trying to do,
because once the lexer's done, it only spits out one token, and you
can't split it up and determine subtokens.  One easy way to find out
whether your lexer is spitting out what you want it to is by making a
parser rule like the following:
getall
 : ident | unreserved | ...<all of the other lex rules in lowercase>...
 ;

ident
 : IDENT
 ;
unreserved
 : UNRESERVED
 ;
...etc.

<insert original lexer stuff>

Then when you ANTLRWorks it, it will show you exactly what your lexer
spat out.  I used this a lot when making mine.

Matt

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> Sent: Tuesday, July 24, 2007 1:51 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Newbie: NoViableAltException
> 
> Hi,
> 
> (foo=bar)
>      ^
> 
> A "NoViableAltException(0!=[null]) exception occurs at 'bar', 
> given the
> following grammar. Not quite sure why. I did not understand this one.
> What could be happening?
> 
> Thanks in advance,
> 
> Bob
> 
> #####################
> 
> prog
> 	:	tuple
> 	;
> tuple
> 	:	L_PAREN tuple_decl EQUALS ( tupleValue | set ) R_PAREN
> 	;
> set
> 	:	L_CURLY tuple ( COMMA tuple )*
> 	;
> tuple_decl
> 	:	tupleKey ( tuplePI )? 
> 	;
> tuplePI
> 	:	AT_SIGN set
> 	;
> tupleKey
> 	:	IDENT
> 	;
> tupleValue
> 	:	( PCHAR )*
> 	;
> 
> /*------------------------------------------------------------------
>  * LEXER RULES
>  *------------------------------------------------------------------*/
> 
> PCHAR
> 	:	PCT_ENCODED | UNRESERVED
> 	;
> IDENT
> 	:	LETTER ( LETTER | UNDERSCORE | HYPHEN | DIGIT)*
> 	;
> L_PAREN
> 	:	'('
> 	;
> R_PAREN
> 	:	')'
> 	;
> L_CURLY
> 	:	'{'
> 	;
> R_CURLY
> 	:	'}'
> 	;
> COMMA
> 	:	','
> 	;
> EQUALS
> 	:	'='
> 	;
> AT_SIGN
> 	:	'@'
> 	;
> HexLiteral
> 	: '0' ('x'|'X') HEXDIGIT+ 
> 	;
> fragment UNRESERVED
> 	:	LETTER | DIGIT | '-' | '.' | '_' | '~' | ':'
> 	;
> fragment PCT_ENCODED
> 	:	'%' HEXDIGIT HEXDIGIT
> 	;
> fragment HEXDIGIT
> 	:	( DIGIT | 'a'..'f' | 'A'..'F' )
> 	;
> fragment LETTER
> 	:	('a'..'z')|('A'..'Z')
> 	;
> fragment DIGIT
> 	:	'0'..'9'
> 	;
> fragment L_BRACKET
> 	:	'['
> 	;
> fragment R_BRACKET
> 	:	']'
> 	;
> fragment UNDERSCORE
> 	:	'_'
> 	;
> fragment HYPHEN
> 	:	'-'
> 	;
> 

From paul at paulkeir.com  Tue Jul 24 14:26:09 2007
From: paul at paulkeir.com (Paul Keir)
Date: Tue, 24 Jul 2007 22:26:09 +0100
Subject: [antlr-interest] Can't see the wood (@init and @after)
In-Reply-To: <051466DAA0D608439E196797955018D76EEF@wavemachine.temporal-wave.com>
References: <051466DAA0D608439E196797955018D76EEF@wavemachine.temporal-wave.com>
Message-ID: <46A66E71.80503@paulkeir.com>

Thanks for the explanation Jim, although I still have trouble putting 
the conclusions it into practise. I remain confused about @init's safe use.

Can I suggest that as a simple rule-of-thumb for beginners, that @init 
should be avoided, except when used to declare rule-local variables?

I'm now hoping that I can at least continue to use @after. I don't seem 
to have the same problems when I use @after, and a variant (below) of my 
a/b test for it, safely returns an equal number of a and b characters.

expression
@after { System.out.println("a"); }
    : assignment_expression (',' assignment_expression)*
    { System.out.println(" b"); }
    ;

Cheers,
Paul

From rhodgson at topquadrant.com  Tue Jul 24 14:37:41 2007
From: rhodgson at topquadrant.com (Ralph Hodgson)
Date: Tue, 24 Jul 2007 14:37:41 -0700
Subject: [antlr-interest] ANTLR for syntax-directed editors
Message-ID: <46A67125.3090202@topquadrant.com>

We are experimenting with ANTLR at NASA for building grammars that 
express the naming rules for space vehicles, their subsystems, devices 
and parameters, as needed in Modeling, Simulation and Telemetry. We are 
exploring how we could query the grammar at run-time to provide an 
editor with the knowledge of the next follow symbols (and other 
attributes). Has anyone used, or know of work on, ANTLR for interactive 
syntax-directed editing?

-- 
Ralph Hodgson
Executive Partner
TopQuadrant, Inc., www.topquadrant.com
Office: (724) 846-9300 ext. 211,
Direct: (703) 960-1028, Fax: (425) 955-5469, Cell: (781) 789-1664
blog: http://topquadrant.typepad.com/ralph_hodgson/



From jrc at skylon.demon.co.uk  Tue Jul 24 14:42:55 2007
From: jrc at skylon.demon.co.uk (John Connett)
Date: Tue, 24 Jul 2007 22:42:55 +0100
Subject: [antlr-interest] Lexer rule for single quote
In-Reply-To: <1185310538.8248.2.camel@gateway.home>
References: <2AFB2E23E9794B4BA6A0431607D6458803567B8B@ehost010-7.exch010.intermedia.net>
	<1185310538.8248.2.camel@gateway.home>
Message-ID: <1185313375.8248.8.camel@gateway.home>

On Tue, 2007-07-24 at 21:55 +0100, John Connett wrote:
> On Tue, 2007-07-24 at 10:40 -0700, Sam Edwards wrote:
> > In ANTLR v 3, single quotes are used for character literals.  I have
> > my entire lexer working correctly except for the TIC.  I have the
> > rule:
> >  
> > TIC    :'\''; which never gets discovered.  What I'm trying to
> > recognize is a single TIC (apostrophe).
> > 
> > Is my lexer rule written correctly, or do I need a different escape
> > character?
> > 
> > Thank you,
> > -Sam
> 
> On a related note I was attempting to use the following lexer rule to
> recognize a string of one or more printable ASCII characters excluding 
> SPACE, EQUALS and PIPE:
> 
> STRING  : ('!'..'<' | '>' .. '{' | '}'..'~')+ ;
> 
> However, strings containing QUOTE characters are not recognized as a
> single token.  I have lloked in the FAQ but have not found a work
> around.
> --
> John Connett

Oops!  I need my eyes tested.  What at first glance appeared to be
single quotes where actually three byte sequences representing something
like left and right single quote characters.  Rather fancy for a
compiler warning message ...

Sorry
--
John Connett


From rbuck at verisign.com  Tue Jul 24 16:02:10 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 19:02:10 -0400
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C202538901@orsmsx417.amr.corp.intel.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727B86@DUL1WNEXMB05.vcorp.ad.vrsn.com>

I have no clue what you just said below. So let me start from the
beginning...

All I want to do is define a simple recursive grammar for a set-tuple
syntax that has input streams like:

(tuple@{(attr1=value1),(attr2=value2)}={(nestedtuple1=value3),(nestedtup
le2=value4)})


tuple
	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
R_PAREN
	;
set
	:	L_CURLY tuple ( COMMA tuple )*
	;
tuple_declaration
	:	tuple_key ( AT_SIGN set )? 
	;
tuple_key
	:	IDENT
	;
tuple_value
	:	( PCHAR )*
	;

Goal: I need to be able to extract the tuple key-names and the values.
If the value is complex (starts and ends with curly-braces), I need to
handle those differently by constructing references to child nodes in a
tree-structure of sorts. Sets are always on the right hand side.

So is this part correct, or not?


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, 
> Matthew J
> Sent: Tuesday, July 24, 2007 5:09 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie: NoViableAltException
> 
> You're mixing your lexer and parser rules.  IDENT is eating 
> up all of the UNRESERVED whenever there's more than one, 
> PCHAR if there's only one.  Then you're saying that 'bar', 
> which is more than one UNRESERVED, so it is the token IDENT, 
> needs to be a bunch of PCHARs, but the PCHARs have already 
> been turned in to the token IDENT.

[snip...]

From ted.villalba at gmail.com  Tue Jul 24 16:19:06 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Tue, 24 Jul 2007 16:19:06 -0700
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
	<ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
Message-ID: <69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>

Thanks for the responses.
Seems straight forward enough to create the disambiguating semantic
predicate, but perhaps Im not starting out with the right assumptions.

If I want to accept near as a term if it begins( or ends) a sentence, then I
thought I could do something like this:

value   :  value_ -> ^(VALUE value_) ;

value_  :  keyBOOL terms* (operator^ value)*
            | LPAREN! value RPAREN! ( operator^ value)*
            ;

keyBOOL : {input.LT(1).getText().equals("NEAR")}? terms;

terms   : WCHAR+  -> ^(TERMS WCHAR+ )
           ;

But when I try to enter SO=(NEAR apples oranges), the parser no likey.
Still getting:
     line 1:5 no viable alternative at input 'NEAR'.

Am I missing an obvious puzzle piece ?
I tried instead to assume all booleans were terms and then tested each of
the terms in a similar approach, but wasn't successful yet at
differentiating, on demand, the operators from the terms.

Thank you for the help,
Ted



On 7/24/07, Thomas Brandon <tbrandonau at gmail.com> wrote:
>
> On 7/25/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> > Hi,
> >
> > I have a grammar that contains tokens that are sometimes operators,
> > sometimes not, depending on the context. The set of operators overlaps
> with
> > the set of all words that can be acceptable tokens. Trouble is,
> depending on
> > the order of my lexer rules,  the parser will recognize all such tokens
> (AND
> > , OR ,NEAR) as operators, or will recognize none of them as operators.
> >
> > So if my lexer rules are:
> > BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
> > WOK_OP    :
> > 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
> > ...
> > WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
> >
> > In this order, if any of the tokens from the first 2 rules are
> encountered,
> > the parser assumes the token to be an operator, even where there is no
> > grammar rule to support the notion( and will follow with aa NoViableAlt
> > exception). If the rules are reversed, it will not recognize any of the
> > wchar+ as operators.
> >
> > So if I try to parse something like:
> > SO=(BY THE AIRPORT) , then it works fine, but if I try SO=(NEAR THE
> AIRPORT)
> > it throws the exception, trying to force "NEAR" into the role of
> operator,
> > even if the grammar does not support the idea of an operator at the
> > beginning of a phrase.
> Lexing occurs independently of parsing so parser context does not
> influence which tokens are matched.
> See http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741 for
> the two possible solutions.
>
> Tom.
> >
> > Here is my complete grammar:
> >
> > grammar WQL;
> >
> > options{
> >     output=AST;
> >     ASTLabelType=CommonTree;
> > }
> >
> > tokens{ TAG; VALUE; TERMS;} //imaginary token types
> >
> > @header{
> > import java.util.HashMap ;
> > }
> >
> > @members {
> >
> > HashMap fieldMap = new HashMap();
> >
> > }
> >
> >
> >
> >
> >
> > start   : ( query
> > {System.out.println("AST:\n"+$query.tree.toStringTree());}
> > )+
> >         ;
> >
> >
> > query   : field (BOOL_OP^ query)*
> >     | LPAREN! query RPAREN! ( BOOL_OP^ query)*
> >     ;
> >
> > field     : tag '=' LPAREN value RPAREN -> ^('=' tag value)
> >     | tag '=' terms+ -> ^('=' tag terms)
> >         | qid
> >         ;
> >
> > value   :  value_ -> ^(VALUE value_) ;
> >
> > value_  : terms+ (operator^ value)*
> >     | LPAREN! value RPAREN! ( operator^ value)*
> >     ;
> >
> > tag    : WCHAR
> >     ;
> >
> >  terms   : WCHAR+  -> ^(TERMS WCHAR+ )
> >     | QUOTE WCHAR+ QUOTE -> ^(TERMS WCHAR+ ) // strip QUOTEs
> >     ;
> >
> >
> > qid     : '#'!DIGIT
> >         ;
> >
> > operator: BOOL_OP|WOK_OP;
> >
> >
> > BOOL_OP    : 'AND'|'and'|'OR'|'or'|'NOT'|'not';
> > WOK_OP    :
> > 'SAME'|'same'|'NEAR'('/'DIGIT+)*|'near'('/'DIGIT+)*;
> > DIGIT   : ('0'..'9');
> > WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
> > LPAREN    : '(' ;
> > RPAREN    : ')' ;
> > QUOTE    : '"';
> > WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
> >
> >
> > Thanks a million for the help.
> >
> > Ted
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/e3538a8f/attachment-0001.html 

From matthew.j.diehl at intel.com  Tue Jul 24 16:27:30 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Tue, 24 Jul 2007 16:27:30 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727B86@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C202538B47@orsmsx417.amr.corp.intel.com>

> -----Original Message-----
> From: Buck, Robert [mailto:rbuck at verisign.com] 
> Sent: Tuesday, July 24, 2007 4:02 PM
> To: Diehl, Matthew J; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Newbie: NoViableAltException
> 
> I have no clue what you just said below. So let me start from the
> beginning...
> 
> All I want to do is define a simple recursive grammar for a set-tuple
> syntax that has input streams like:
> 
> (tuple@{(attr1=value1),(attr2=value2)}={(nestedtuple1=value3),
> (nestedtup
> le2=value4)})
> 
What I was saying is that whenever there is more than one PCHAR in a
row, they become IDENTs (by your lexer rules).  So both foo and bar are
IDENTs, and not ( PCHAR )*.  So either you will have to change up
tuple_value or your lexer rules:

tuple_value
  : IDENT
  ;

> 
> tuple
> 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> R_PAREN
> 	;
> set
> 	:	L_CURLY tuple ( COMMA tuple )*
> 	;
> tuple_declaration
> 	:	tuple_key ( AT_SIGN set )? 
> 	;
> tuple_key
> 	:	IDENT
> 	;
> tuple_value
> 	:	( PCHAR )*
> 	;
> 
> Goal: I need to be able to extract the tuple key-names and the values.
> If the value is complex (starts and ends with curly-braces), I need to
> handle those differently by constructing references to child 
> nodes in a
> tree-structure of sorts. Sets are always on the right hand side.
> 
> So is this part correct, or not?
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org 
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, 
> > Matthew J
> > Sent: Tuesday, July 24, 2007 5:09 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Newbie: NoViableAltException
> > 
> > You're mixing your lexer and parser rules.  IDENT is eating 
> > up all of the UNRESERVED whenever there's more than one, 
> > PCHAR if there's only one.  Then you're saying that 'bar', 
> > which is more than one UNRESERVED, so it is the token IDENT, 
> > needs to be a bunch of PCHARs, but the PCHARs have already 
> > been turned in to the token IDENT.
> 
> [snip...]
> 

From parrt at cs.usfca.edu  Tue Jul 24 16:30:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Jul 2007 16:30:09 -0700
Subject: [antlr-interest] antlr.org, st.org going down briefly
Message-ID: <2B42A4A1-8CCB-47E8-95F4-884CED561C60@cs.usfca.edu>

trying to patch network driver...

Ter

From downtown1 at gmail.com  Tue Jul 24 16:42:02 2007
From: downtown1 at gmail.com (Igor Murashkin)
Date: Tue, 24 Jul 2007 18:42:02 -0500
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
	<051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com>
Message-ID: <a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>

Hello,

Thanks for all the help. I used a syntactic predicate like Jim suggested and
it seems to lex everything properly now. I wish I understood  more
academically why my original lexing syntax didn't work, does ANTLR not put
the tokens back and backtrack when it fails to match a rule?

In regards to seeing the answer to this earlier, I couldn't find a search
option on the mailing list, and using Google I kept coming across ANTLRv2
threads which I was afraid to look at since so much ANTLRv2 information on
the internet would break on me (like using ! to exclude things from the
token text).

Thanks,
Igor Murashkin

On 7/24/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>  Igor,
>
>
>
> This questions was asked and answered just a few days ago:
>
>
>
> I think that this question points out that many of us expect ATNLR to
> "just work it out" for us. All these problems are best solved with a mind
> experiment first "How would you scan it with the eye?", then break the rule
> at the different alternatives yourself and stick in the lookahead you
> perform with your mind. It will result in better generated code anyway:
>
>
>
> grammar fred;
>
>
>
> stat
>
>             : test+
>
>             ;
>
> test
>
>             :           (INT DOT ID)
>
>             |           FLOAT
>
>             ;
>
>
>
> fragment
>
> DIGIT    : '0'..'9'
>
>             ;
>
>
>
> FLOAT : INT
>
>                                     (
>
>                                                   ('.' INT)=> '.' INT
>
>                                                 | {$type = INT; }
>
>                                     )
>
>                         ;
>
>
>
> DOT     : '.' ;
>
>
>
> Fragment                                  // Also ensures a token type INT
> is present
>
> INT       : DIGIT+;
>
>
>
> ID         :           ('A'..'Z' | 'a'..'z')+
>
>             ;
>
>
>
> Jim
>
>
>
> *From:* antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] *On Behalf Of *Igor Murashkin
> *Sent:* Tuesday, July 24, 2007 9:45 AM
> *To:* antlr-interest at antlr.org
> *Subject:* [antlr-interest] Troubles lexing a decimal, (from an antlr
> beginner)
>
>
>
> Hello,
>
> Well let me just say, its my first time using ANTLR. I needed a C# parser
> generator so using flex/bison as I have done before was simply out of the
> question, and I figured learning an LL(k) parser should be a nice variation
> to just using LR(k).
>
> Unfortunately before I can even get to the parsing, I need to fix my
> lexing.. right now it doesn't work for matching decimals properly. Here are
> the lexing rules in question:
>
> ===============
>
> DOT        : '.'   ;
> INTEGER    :    Digit+;
> DECIMAL    :    Digit+ '.' Digit+;
> fragment Digit
>     :    '0'..'9';
> IDENT    :     ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>
> NL    :    ('\r\n' // DOS/Windows
>     |     '\r'  // Macintosh
>           |     '\n') // Unix
>           { $channel=HIDDEN; };
>
> WS
>       :     (' '
>         |     '\t'
>         |     '\f')
>         { $channel=HIDDEN; };
>
> ===============
>
> Unfortunately with simple output such as this it crashes with an
> EarlyExitException:
>
> ===============
> console.flushBuffer
> general.holdMsec 1000
> object 1.doSomeAction withThis
> ===============
> The third line should produce "IDENT INTEGER DOT IDENT IDENT" but instead
> it tries to match "1." as a DECIMAL and then once it sees the "d" it fails
> and throws an EarlyExitException.
>
> I am completely unsure what is going on.. I tried to set k=2 in options
> figuring that if it looked at the period AND the next character it would get
> a ('.' , 'd') clearly that does not match the DECIMAL rule.. but then I just
> got a bunch of warnings in my lexer grammar so I removed the k=2 line
> altogether. Looking at the generated code though its always calling LA(1)
> and maybe there should be a way to get it to call LA(2) ?
>
> Probably I am completely misunderstanding how the whole process of lexing
> is working too. Looking at the generated code it is generating some DFAs,
> which would imply some kind of regular language being at work here? Or does
> it still use LL(k) parsing even for lexing?
>
> I'm going to try to get the book asap too, probably it explains some of
> this...
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/e03e83ca/attachment.html 

From rbuck at verisign.com  Tue Jul 24 16:50:38 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 19:50:38 -0400
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C202538B47@orsmsx417.amr.corp.intel.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727B8E@DUL1WNEXMB05.vcorp.ad.vrsn.com>

I still don't get it.

Don't the parser rules indicate what lexer rule to use? If you have the
following:

IDENT EQUALS (PCHAR)*

The IDENT lexer rule would not get called for any tokens to the RHS of
the EQUALS sign, right? I declared it only gets called for the LHS.

The same with my grammar, IDENT is always to the left hand side of an
EQUALS and (PCHAR)* can only occur on the right hand side.

This was the way lex/yacc worked as far as I recall. Doesn't ANTLR work
that way too?

-Bob


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, 
> Matthew J
> Sent: Tuesday, July 24, 2007 7:28 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie: NoViableAltException
> 
> > -----Original Message-----
> > From: Buck, Robert [mailto:rbuck at verisign.com]
> > Sent: Tuesday, July 24, 2007 4:02 PM
> > To: Diehl, Matthew J; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Newbie: NoViableAltException
> > 
> > I have no clue what you just said below. So let me start from the 
> > beginning...
> > 
> > All I want to do is define a simple recursive grammar for a 
> set-tuple 
> > syntax that has input streams like:
> > 
> > (tuple@{(attr1=value1),(attr2=value2)}={(nestedtuple1=value3),
> > (nestedtup
> > le2=value4)})
> > 
> What I was saying is that whenever there is more than one 
> PCHAR in a row, they become IDENTs (by your lexer rules).  So 
> both foo and bar are IDENTs, and not ( PCHAR )*.  So either 
> you will have to change up tuple_value or your lexer rules:
> 
> tuple_value
>   : IDENT
>   ;
> 
> > 
> > tuple
> > 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> > R_PAREN
> > 	;
> > set
> > 	:	L_CURLY tuple ( COMMA tuple )*
> > 	;
> > tuple_declaration
> > 	:	tuple_key ( AT_SIGN set )? 
> > 	;
> > tuple_key
> > 	:	IDENT
> > 	;
> > tuple_value
> > 	:	( PCHAR )*
> > 	;
> > 
> > Goal: I need to be able to extract the tuple key-names and 
> the values.
> > If the value is complex (starts and ends with 
> curly-braces), I need to 
> > handle those differently by constructing references to 
> child nodes in 
> > a tree-structure of sorts. Sets are always on the right hand side.
> > 
> > So is this part correct, or not?
> > 
> > 
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org 
> > > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, 
> > > Matthew J
> > > Sent: Tuesday, July 24, 2007 5:09 PM
> > > To: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Newbie: NoViableAltException
> > > 
> > > You're mixing your lexer and parser rules.  IDENT is 
> eating up all 
> > > of the UNRESERVED whenever there's more than one, PCHAR 
> if there's 
> > > only one.  Then you're saying that 'bar', which is more than one 
> > > UNRESERVED, so it is the token IDENT, needs to be a bunch 
> of PCHARs, 
> > > but the PCHARs have already been turned in to the token IDENT.
> > 
> > [snip...]
> > 
> 

From rbuck at verisign.com  Tue Jul 24 16:55:03 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 19:55:03 -0400
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727B8E@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727B90@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Oh, that's really bizzare. Regarding lexical rules, the manual states:

   "The rules are prioritized in the order specified in case an input
construct matches more than a single rule, with the first rule having
the highest priority". 

I don't recall lex/yacc working that way. Can this be changed, or should
I just forego the lexical rules section altogether and put all the
literals directly into the grammar?

It would seem perfectly reasonable to have identifiers be
distinguishable from literal values, where literal values can always be
infered by their context.

-Bob

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> Sent: Tuesday, July 24, 2007 7:51 PM
> To: Diehl, Matthew J; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie: NoViableAltException
> 
> I still don't get it.
> 
> Don't the parser rules indicate what lexer rule to use? If 
> you have the
> following:
> 
> IDENT EQUALS (PCHAR)*
> 
> The IDENT lexer rule would not get called for any tokens to 
> the RHS of the EQUALS sign, right? I declared it only gets 
> called for the LHS.
> 
> The same with my grammar, IDENT is always to the left hand 
> side of an EQUALS and (PCHAR)* can only occur on the right hand side.
> 
> This was the way lex/yacc worked as far as I recall. Doesn't 
> ANTLR work that way too?
> 
> -Bob
> 
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org 
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Diehl, Matthew 
> > J
> > Sent: Tuesday, July 24, 2007 7:28 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Newbie: NoViableAltException
> > 
> > > -----Original Message-----
> > > From: Buck, Robert [mailto:rbuck at verisign.com]
> > > Sent: Tuesday, July 24, 2007 4:02 PM
> > > To: Diehl, Matthew J; antlr-interest at antlr.org
> > > Subject: RE: [antlr-interest] Newbie: NoViableAltException
> > > 
> > > I have no clue what you just said below. So let me start from the 
> > > beginning...
> > > 
> > > All I want to do is define a simple recursive grammar for a
> > set-tuple
> > > syntax that has input streams like:
> > > 
> > > (tuple@{(attr1=value1),(attr2=value2)}={(nestedtuple1=value3),
> > > (nestedtup
> > > le2=value4)})
> > > 
> > What I was saying is that whenever there is more than one 
> PCHAR in a 
> > row, they become IDENTs (by your lexer rules).  So both foo and bar 
> > are IDENTs, and not ( PCHAR )*.  So either you will have to 
> change up 
> > tuple_value or your lexer rules:
> > 
> > tuple_value
> >   : IDENT
> >   ;
> > 
> > > 
> > > tuple
> > > 	:	L_PAREN tuple_declaration EQUALS ( tuple_value | set )
> > > R_PAREN
> > > 	;
> > > set
> > > 	:	L_CURLY tuple ( COMMA tuple )*
> > > 	;
> > > tuple_declaration
> > > 	:	tuple_key ( AT_SIGN set )? 
> > > 	;
> > > tuple_key
> > > 	:	IDENT
> > > 	;
> > > tuple_value
> > > 	:	( PCHAR )*
> > > 	;
> > > 
> > > Goal: I need to be able to extract the tuple key-names and
> > the values.
> > > If the value is complex (starts and ends with
> > curly-braces), I need to
> > > handle those differently by constructing references to
> > child nodes in
> > > a tree-structure of sorts. Sets are always on the right hand side.
> > > 
> > > So is this part correct, or not?
> > > 
> > > 
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org 
> > > > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Diehl, 
> > > > Matthew J
> > > > Sent: Tuesday, July 24, 2007 5:09 PM
> > > > To: antlr-interest at antlr.org
> > > > Subject: Re: [antlr-interest] Newbie: NoViableAltException
> > > > 
> > > > You're mixing your lexer and parser rules.  IDENT is
> > eating up all
> > > > of the UNRESERVED whenever there's more than one, PCHAR
> > if there's
> > > > only one.  Then you're saying that 'bar', which is more 
> than one 
> > > > UNRESERVED, so it is the token IDENT, needs to be a bunch
> > of PCHARs,
> > > > but the PCHARs have already been turned in to the token IDENT.
> > > 
> > > [snip...]
> > > 
> > 
> 

From parrt at cs.usfca.edu  Tue Jul 24 16:57:09 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Jul 2007 16:57:09 -0700
Subject: [antlr-interest] antlr.org back up with a new network driver
Message-ID: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>

Hi,

In an effort to fix the network stall issue, we installed a new  
network driver.  Can a few of you that used to have problems, attempt  
to download a big file such as

http://www.antlr.org/movies/Sydney-JUG-June-20-2007.mp4

Please let me know if we still have the issue.

Thanks!
Ter

From rschulz at sonic.net  Tue Jul 24 17:10:01 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 24 Jul 2007 17:10:01 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727B8E@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727B8E@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <200707241710.01407.rschulz@sonic.net>

On Tuesday 24 July 2007 16:50, Buck, Robert wrote:
> I still don't get it.
>
> Don't the parser rules indicate what lexer rule to use? If you have
> the following:

Nope. Again, the lexical analyzer operates independently and essentially 
asynchronously w.r.t. the parser. The parser _DOES NOT_ direct the 
actions of the scanner.


> IDENT EQUALS (PCHAR)*
>
> The IDENT lexer rule would not get called for any tokens to the RHS
> of the EQUALS sign, right? I declared it only gets called for the
> LHS.

Scanner rules are NOT "called" by the parser. They are used to partition 
the input stream and assign token type codes to each sub-sequence of 
the input. Then, when that's all done and the entire input is broken 
into tokens, the parser starts in on those tokens.


> The same with my grammar, IDENT is always to the left hand side of an
> EQUALS and (PCHAR)* can only occur on the right hand side.
>
> This was the way lex/yacc worked as far as I recall. Doesn't ANTLR
> work that way too?

As Terence has recently stated, forget everything you know about lex and 
yacc. Little of the details of that system will serve you well with 
ANTLR.


> -Bob


Randall Schulz

From dirty at apple.com  Tue Jul 24 17:12:00 2007
From: dirty at apple.com (Cameron Esfahani)
Date: Tue, 24 Jul 2007 17:12:00 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <200707241710.01407.rschulz@sonic.net>
References: <B408B6F6E3DEB04681E207B528821D49727B8E@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<200707241710.01407.rschulz@sonic.net>
Message-ID: <4DD6AE4F-50A7-43F6-A3B4-06BA9F0792B6@apple.com>

Ah, I was trying to come up with a good explanation and Randall's is  
so much better...

On Jul 24, 2007, at 5:10 PM, Randall R Schulz wrote:

>> I still don't get it.
>>
>> Don't the parser rules indicate what lexer rule to use? If you have
>> the following:
>
> Nope. Again, the lexical analyzer operates independently and  
> essentially
> asynchronously w.r.t. the parser. The parser _DOES NOT_ direct the
> actions of the scanner.
>
>
>> IDENT EQUALS (PCHAR)*
>>
>> The IDENT lexer rule would not get called for any tokens to the RHS
>> of the EQUALS sign, right? I declared it only gets called for the
>> LHS.
>
> Scanner rules are NOT "called" by the parser. They are used to  
> partition
> the input stream and assign token type codes to each sub-sequence of
> the input. Then, when that's all done and the entire input is broken
> into tokens, the parser starts in on those tokens.
>

Cameron Esfahani
dirty at apple.com

"Americans are very skilled at creating a custom meaning from  
something that's mass-produced."

Ann Powers


-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070724/05e95283/attachment.html 

From jonathan.thomas at ca.com  Tue Jul 24 17:26:26 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Wed, 25 Jul 2007 10:26:26 +1000
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
References: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
Message-ID: <46A698B2.10607@ca.com>

35% through and still going at a decent clip.
I only once had a problem with initially downloading that file though.

Terence Parr said the following on 25/07/2007 9:57 AM:
> Hi,
>
> In an effort to fix the network stall issue, we installed a new 
> network driver.  Can a few of you that used to have problems, attempt 
> to download a big file such as
>
> http://www.antlr.org/movies/Sydney-JUG-June-20-2007.mp4
>
> Please let me know if we still have the issue.
>
> Thanks!
> Ter
>

From rschulz at sonic.net  Tue Jul 24 17:47:42 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 24 Jul 2007 17:47:42 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <4DD6AE4F-50A7-43F6-A3B4-06BA9F0792B6@apple.com>
References: <B408B6F6E3DEB04681E207B528821D49727B8E@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<200707241710.01407.rschulz@sonic.net>
	<4DD6AE4F-50A7-43F6-A3B4-06BA9F0792B6@apple.com>
Message-ID: <200707241747.42697.rschulz@sonic.net>

On Tuesday 24 July 2007 17:12, Cameron Esfahani wrote:
> Ah, I was trying to come up with a good explanation and Randall's is
> so much better...

Thanks. This is, I think, the third time I've explained this in the past 
week or so. Other explanations were longer...

RRS

From rschulz at sonic.net  Tue Jul 24 17:48:51 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 24 Jul 2007 17:48:51 -0700
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
References: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
Message-ID: <200707241748.52067.rschulz@sonic.net>

On Tuesday 24 July 2007 16:57, Terence Parr wrote:
> Hi,
>
> In an effort to fix the network stall issue, we installed a new
> network driver.  Can a few of you that used to have problems, attempt
> to download a big file such as
>
> http://www.antlr.org/movies/Sydney-JUG-June-20-2007.mp4

Dude! That's a CD worth of compressed video!


> Please let me know if we still have the issue.

It downloaded OK for me the first time I tried, though it took over a 
half hour and did not saturate my 300 KBps DSL inbound link (it 
averaged about 185 KBps). However, on the second try it stalled after 
transferring 99,752 bytes...


> Thanks!
> Ter


Randall Schulz

From jonathan.thomas at ca.com  Tue Jul 24 17:50:37 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Wed, 25 Jul 2007 10:50:37 +1000
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <200707241748.52067.rschulz@sonic.net>
References: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
	<200707241748.52067.rschulz@sonic.net>
Message-ID: <46A69E5D.2070701@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070725/6091a08e/attachment.html 

From rbuck at verisign.com  Tue Jul 24 18:13:05 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 21:13:05 -0400
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <4DD6AE4F-50A7-43F6-A3B4-06BA9F0792B6@apple.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727BA1@DUL1WNEXMB05.vcorp.ad.vrsn.com>

It clarified things for me quite a bit. Not quite sure how I'd write a
parser in ANTLR for the sort of syntax, if its possible, but now I
understand the issue.

Bob

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Cameron Esfahani
> Sent: Tuesday, July 24, 2007 8:12 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie: NoViableAltException
> 
> Ah, I was trying to come up with a good explanation and 
> Randall's is so much better...
> 
> On Jul 24, 2007, at 5:10 PM, Randall R Schulz wrote:
> 
> 
> 		I still don't get it.
> 
> 		
> 		
> 
> 		Don't the parser rules indicate what lexer rule 
> to use? If you have
> 
> 		the following:
> 
> 	
> 	
> 
> 	Nope. Again, the lexical analyzer operates 
> independently and essentially 
> 
> 	asynchronously w.r.t. the parser. The parser _DOES NOT_ 
> direct the 
> 
> 	actions of the scanner.
> 
> 	
> 	
> 
> 	
> 	
> 
> 		IDENT EQUALS (PCHAR)*
> 
> 		
> 		
> 
> 		The IDENT lexer rule would not get called for 
> any tokens to the RHS
> 
> 		of the EQUALS sign, right? I declared it only 
> gets called for the
> 
> 		LHS.
> 
> 	
> 	
> 
> 	Scanner rules are NOT "called" by the parser. They are 
> used to partition 
> 
> 	the input stream and assign token type codes to each 
> sub-sequence of 
> 
> 	the input. Then, when that's all done and the entire 
> input is broken 
> 
> 	into tokens, the parser starts in on those tokens.
> 
> 	
> 	
> 
> 
> Cameron Esfahani
> dirty at apple.com
> 
> "Americans are very skilled at creating a custom meaning from 
> something that's mass-produced."
> 
> Ann Powers
> 
> 
> 

From bsder at allcaps.org  Tue Jul 24 18:14:53 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Tue, 24 Jul 2007 18:14:53 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727B86@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727B86@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <46A6A40D.7050706@allcaps.org>

Buck, Robert wrote:
> I have no clue what you just said below. So let me start from the
> beginning...
> 
> All I want to do is define a simple recursive grammar for a set-tuple
> syntax that has input streams like:
> 
> (tuple@{(attr1=value1),(attr2=value2)}={(nestedtuple1=value3),(nestedtup
> le2=value4)})

You are slamming into the same problem I slammed into a couple days ago.
A simplified version--given the input:

(a1=(a2=v2))

How do we handle this is a grammar?  Well, it's annoying.  First try:

grammar test;
tuple	:	'(' .+ '=' .+ ')';
ANY	:	.;

Well, that gives me a single tuple with tokens:

'(','a','1','=','(','a','2','=','v','2',')',')'

Hrm.  Not what we want.  Could deal with the tokens, but it's only a 
single tuple.  (Side note: Is there a way to stuff things back through 
the grammar again?  That would probably do what I want?)

Move further backward into the lexer.  Second try:

grammar test;
tuple	:	TUPLE;
TUPLE	:	'(' .+ '=' .+ ')';

Well, that gives a single TUPLE with the token:

"(a1=(a2=v2))"

Still, not really what we want.  Third try:

grammar test;
tuple	:	'(' TUPLET '=' (tuple | ANY+) ')';
TUPLET	:	~('(' | '=')+;
ANY	:	.;

Explanation: We know that things on the left side of the '=' should not 
have '(' or '=' as both of those signal specific things (newtuple or 
valuekey).

Upon trying that grammar, we get a pair of nested tuples (YAY!) and a 
NoViableAltException (boo--this is your problem).  Why?

Well, because the input tokenizes like this:

'(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"

Note that "v2" is a TUPLET, not ANY.  That fails to match any grammar 
rule as the right hand side expected ANY but got a TUPLET.  Fourth try:

grammar test;
tuple	:	'(' TUPLET '=' (tuple | TUPLET) ')';
TUPLET	:	~('(' | '=')+;

Still two nested tuples, but a MismatchedTokenException-huh?

Looking at the token stream:

'(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"

The problem is that TUPLET vacuumed up the two ')' and used them to make 
a TUPLET token.  Fifth try:

grammar test;
tuple	:	'(' TUPLET '=' (tuple | TUPLET) ')';
TUPLET	:	~('(' | '=' | ')')+;


The following token stream goes into the parser:

'(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2", ')', ')'

This seems to do what we want.  We get two nested tuples exactly like we 
want them.

Hope this helps,
-a

From rbuck at verisign.com  Tue Jul 24 18:29:33 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Tue, 24 Jul 2007 21:29:33 -0400
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <46A6A40D.7050706@allcaps.org>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727BA3@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Say, how did you get ANTLRWorks to display the output in that format,
e.g. '(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"

Or was that just your handywork?

That is the sort of output that would be useful to see. The UI is only
showing the grammar rules, not what they are made up of.

Bob

> -----Original Message-----
> From: Andrew Lentvorski [mailto:bsder at allcaps.org] 
> Sent: Tuesday, July 24, 2007 9:15 PM
> To: Buck, Robert
> Cc: Diehl, Matthew J; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Newbie: NoViableAltException
> 
> Buck, Robert wrote:
> > I have no clue what you just said below. So let me start from the 
> > beginning...
> > 
> > All I want to do is define a simple recursive grammar for a 
> set-tuple 
> > syntax that has input streams like:
> > 
> > 
> (tuple@{(attr1=value1),(attr2=value2)}={(nestedtuple1=value3),(nestedt
> > up
> > le2=value4)})
> 
> You are slamming into the same problem I slammed into a 
> couple days ago.
> A simplified version--given the input:
> 
> (a1=(a2=v2))
> 
> How do we handle this is a grammar?  Well, it's annoying.  First try:
> 
> grammar test;
> tuple	:	'(' .+ '=' .+ ')';
> ANY	:	.;
> 
> Well, that gives me a single tuple with tokens:
> 
> '(','a','1','=','(','a','2','=','v','2',')',')'
> 
> Hrm.  Not what we want.  Could deal with the tokens, but it's 
> only a single tuple.  (Side note: Is there a way to stuff 
> things back through the grammar again?  That would probably 
> do what I want?)
> 
> Move further backward into the lexer.  Second try:
> 
> grammar test;
> tuple	:	TUPLE;
> TUPLE	:	'(' .+ '=' .+ ')';
> 
> Well, that gives a single TUPLE with the token:
> 
> "(a1=(a2=v2))"
> 
> Still, not really what we want.  Third try:
> 
> grammar test;
> tuple	:	'(' TUPLET '=' (tuple | ANY+) ')';
> TUPLET	:	~('(' | '=')+;
> ANY	:	.;
> 
> Explanation: We know that things on the left side of the '=' 
> should not have '(' or '=' as both of those signal specific 
> things (newtuple or valuekey).
> 
> Upon trying that grammar, we get a pair of nested tuples 
> (YAY!) and a NoViableAltException (boo--this is your problem).  Why?
> 
> Well, because the input tokenizes like this:
> 
> '(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"
> 
> Note that "v2" is a TUPLET, not ANY.  That fails to match any 
> grammar rule as the right hand side expected ANY but got a 
> TUPLET.  Fourth try:
> 
> grammar test;
> tuple	:	'(' TUPLET '=' (tuple | TUPLET) ')';
> TUPLET	:	~('(' | '=')+;
> 
> Still two nested tuples, but a MismatchedTokenException-huh?
> 
> Looking at the token stream:
> 
> '(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"
> 
> The problem is that TUPLET vacuumed up the two ')' and used 
> them to make a TUPLET token.  Fifth try:
> 
> grammar test;
> tuple	:	'(' TUPLET '=' (tuple | TUPLET) ')';
> TUPLET	:	~('(' | '=' | ')')+;
> 
> 
> The following token stream goes into the parser:
> 
> '(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2", ')', ')'
> 
> This seems to do what we want.  We get two nested tuples 
> exactly like we want them.
> 
> Hope this helps,
> -a
> 

From bsder at allcaps.org  Tue Jul 24 18:46:58 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Tue, 24 Jul 2007 18:46:58 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727BA3@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727BA3@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <46A6AB92.1000808@allcaps.org>

Buck, Robert wrote:
> Say, how did you get ANTLRWorks to display the output in that format,
> e.g. '(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"
> 
> Or was that just your handywork?

It's my handywork, but the debugger has a "Show input tokens" option in 
1.1 that puts little red boxes around the input tokens.

Yes, I do wish the interpreter has a "Show token strea" option, too.

-a

From bsder at allcaps.org  Tue Jul 24 19:03:06 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Tue, 24 Jul 2007 19:03:06 -0700
Subject: [antlr-interest] Tokenizing question
Message-ID: <46A6AF5A.2050508@allcaps.org>

I'm trying to get the following input:
( a1 = ( a2 = v2 ) )

To tokenize like this:

'(' MWS TT="a1" MWS '=' MWS '(' MWS TT="a2" MWS '=' MWS TT="v2" MWS ')' ')'

So, when I use this grammar:

grammar test;
tuple	:	'(' MWS? TT MWS? '=' MWS? (tuple | TT) MWS? ')';

MWS	:	WS+;
WS	:	(' '|'\t'|'\n'|'\r');
TT	:	~('(' | '=' | ')')+;

Why is it tokenizing like this:

'(' TT=" a1 " '=' MWS '(' TT=" a2 " '=' TT=" v2 " ')' ')'

Just to forestall the question, no, you may *NOT* skip or disable
whitespace.

Sorry for the stupid newbie questions, but I'm trying to use ANTLR for
data format translation and the idioms for language translation don't
seem to work so well.

-a

From easjolly at ix.netcom.com  Tue Jul 24 19:11:42 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Tue, 24 Jul 2007 20:11:42 -0600
Subject: [antlr-interest] antlr.org back up with a new network driver
Message-ID: <E1IDWL8-00042Y-BN@elasmtp-kukur.atl.sa.earthlink.net>

I tried the download about 2 hours ago and again twice just recently.  It
stalled almost immediately the first two times and was doing fine the third
time until I cancelled it.

This is the same as my prior experience.  Downloading from antlr.org either
stalls after the first message (something like 150 KB) or it works fine. I
have not had a similar experience with downloading from other sites.

Susan



From jonathan.thomas at ca.com  Tue Jul 24 19:17:14 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Wed, 25 Jul 2007 12:17:14 +1000
Subject: [antlr-interest] Tokenizing question
In-Reply-To: <46A6AF5A.2050508@allcaps.org>
References: <46A6AF5A.2050508@allcaps.org>
Message-ID: <46A6B2AA.8080206@ca.com>

Your TT rule also matches whitespace.
A quick fix - make your WS a fragment, and add | WS to your TT rule, so 
it also doesn't match the whitespace.


Andrew Lentvorski said the following on 25/07/2007 12:03 PM:
> I'm trying to get the following input:
> ( a1 = ( a2 = v2 ) )
>
> To tokenize like this:
>
> '(' MWS TT="a1" MWS '=' MWS '(' MWS TT="a2" MWS '=' MWS TT="v2" MWS 
> ')' ')'
>
> So, when I use this grammar:
>
> grammar test;
> tuple    :    '(' MWS? TT MWS? '=' MWS? (tuple | TT) MWS? ')';
>
> MWS    :    WS+;
> WS    :    (' '|'\t'|'\n'|'\r');
> TT    :    ~('(' | '=' | ')')+;
>
> Why is it tokenizing like this:
>
> '(' TT=" a1 " '=' MWS '(' TT=" a2 " '=' TT=" v2 " ')' ')'
>
> Just to forestall the question, no, you may *NOT* skip or disable
> whitespace.
>
> Sorry for the stupid newbie questions, but I'm trying to use ANTLR for
> data format translation and the idioms for language translation don't
> seem to work so well.
>
> -a
>

From jimi at temporal-wave.com  Tue Jul 24 21:40:35 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 Jul 2007 21:40:35 -0700
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <E1IDWL8-00042Y-BN@elasmtp-kukur.atl.sa.earthlink.net>
References: <E1IDWL8-00042Y-BN@elasmtp-kukur.atl.sa.earthlink.net>
Message-ID: <051466DAA0D608439E196797955018D76F1E@wavemachine.temporal-wave.com>

Ter,

Maybe you should pop down to Fry's and buy a different card? ;-)

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Susan Jolly
> Sent: Tuesday, July 24, 2007 7:12 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] antlr.org back up with a new network driver
> 
> I tried the download about 2 hours ago and again twice just recently.
> It
> stalled almost immediately the first two times and was doing fine the
> third
> time until I cancelled it.
> 
> This is the same as my prior experience.  Downloading from antlr.org
> either
> stalls after the first message (something like 150 KB) or it works
> fine. I
> have not had a similar experience with downloading from other sites.
> 
> Susan
> 


From bsder at allcaps.org  Tue Jul 24 21:58:36 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Tue, 24 Jul 2007 21:58:36 -0700
Subject: [antlr-interest] Tokenizing question
In-Reply-To: <46A6B2AA.8080206@ca.com>
References: <46A6AF5A.2050508@allcaps.org> <46A6B2AA.8080206@ca.com>
Message-ID: <46A6D87C.5020406@allcaps.org>

Jonathan Thomas wrote:
> Your TT rule also matches whitespace.
> A quick fix - make your WS a fragment, and add | WS to your TT rule, so 
> it also doesn't match the whitespace.

Yes, it's true that my TT rule matches whitespace, but why does the 
whitespace even get down to it?

I expected the MWS and TT rules to match and the MWS takes precedence 
because it matches first.

Why is this not occurring?

-a

From gbr at newtechlaw.com  Tue Jul 24 22:19:37 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Tue, 24 Jul 2007 22:19:37 -0700
Subject: [antlr-interest] ANTLR for syntax-directed editors
Message-ID: <200707250519.l6P5Ja5K006544@morpho.newtechlaw.com>

You may wish to look at Eclipse for design if not to use as a 
framework for implementation.  The JDT contains a rather 
high-performance AST based syntax directed editor with interactive 
content dependent completion assist mechanism.

To the specific question of querying, ANTLR is quite fast, so having 
an instance repeatedly do a full lex and parse of short phrases, to 
produce a suggestion list, is not much of a burden between 
keystrokes.  Can be shortcut further by filtering for significant 
keystrokes that signal a likely change or narrowing of the suggestion list.

At 02:37 PM 7/24/2007, you wrote:
>We are experimenting with ANTLR at NASA for building grammars that 
>express the naming rules for space vehicles, their subsystems, 
>devices and parameters, as needed in Modeling, Simulation and 
>Telemetry. We are exploring how we could query the grammar at 
>run-time to provide an editor with the knowledge of the next follow 
>symbols (and other attributes). Has anyone used, or know of work on, 
>ANTLR for interactive syntax-directed editing?
>
>--
>Ralph Hodgson
>Executive Partner
>TopQuadrant, Inc., www.topquadrant.com
>Office: (724) 846-9300 ext. 211,
>Direct: (703) 960-1028, Fax: (425) 955-5469, Cell: (781) 789-1664
>blog: http://topquadrant.typepad.com/ralph_hodgson/



From parrt at cs.usfca.edu  Tue Jul 24 22:58:41 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Jul 2007 22:58:41 -0700
Subject: [antlr-interest] heterogeneous trees
Message-ID: <905A1D83-15D2-462D-9371-14AE3A8E8449@cs.usfca.edu>

Hi,

I'm interested in hearing people's needs vis-a-vis heterogeneous ASTs  
where each node can have a different type rather than all trees  
having CommonTree type.

The adaptor.create(tokenType) method can easily switch on tokenType  
to create special nodes, but in some cases you might want ID to be  
Var and others to be Method.  Any other "user stories"?  The v2 stuff  
let you set overall type for tokenType but I'll leave that to adaptor  
this time I think.  It also let you set the type per token ref, which  
we could allow like this:

method : 'void' ID<Method> '(' args ')' body ;

decl : 'int' ID<Var> ';' ;

etc...

Would that be sufficient?  if so, I can get it into 3.1 whenever that  
comes out.  I have tree building in tree grammars now and a cool  
rewrite mode for it.

Ter

From antlr at mirality.co.nz  Wed Jul 25 02:01:40 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Wed, 25 Jul 2007 21:01:40 +1200
Subject: [antlr-interest] Tokenizing question
In-Reply-To: <46A6D87C.5020406@allcaps.org>
References: <46A6AF5A.2050508@allcaps.org> <46A6B2AA.8080206@ca.com>
	<46A6D87C.5020406@allcaps.org>
Message-ID: <20070725090141.BA94611EAFF@www.antlr.org>

At 16:58 25/07/2007, Andrew Lentvorski wrote:
 >Yes, it's true that my TT rule matches whitespace, but why
 >does the whitespace even get down to it?
 >
 >I expected the MWS and TT rules to match and the MWS takes
 >precedence because it matches first.
 >
 >Why is this not occurring?

Because matches are greedy.  Once it's started matching a TT, it 
will keep going as long as it continues to match.  So since a 
space is a valid TT character, any whitespace following a TT will 
be part of that TT.

I'm less certain about the leading whitespace you showed there, 
but that's probably the "longest match wins" rule at work.  Given 
a choice between emitting two tokens and one token that cover the 
exact same input text, ANTLR will pick the single token, 
regardless of rule ordering.

IOW, in the input fragment "( a1 =", your grammar gives ANTLR the 
option of emitting either '(' MWS=' ' TT='a1' MWS=' ' '=' (5 
tokens) or '(' TT=' a1 ' '=' (3 tokens).  The 3 token version 
wins.

Also, you should really make your WS rule a fragment, since it's 
covered by the MWS rule anyway.


From jaluber at gmx.de  Wed Jul 25 02:34:19 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 25 Jul 2007 11:34:19 +0200
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>	<051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com>
	<a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>
Message-ID: <46A7191B.9020808@gmx.de>

Igor Murashkin wrote:
> Hello,
> 
> Thanks for all the help. I used a syntactic predicate like Jim suggested
> and it seems to lex everything properly now. I wish I understood  more
> academically why my original lexing syntax didn't work, does ANTLR not
> put the tokens back and backtrack when it fails to match a rule?

Backtracking has to be explicitly activated because this option is more
time consuming than a straight pass.

> In regards to seeing the answer to this earlier, I couldn't find a
> search option on the mailing list, and using Google I kept coming across
> ANTLRv2 threads which I was afraid to look at since so much ANTLRv2
> information on the internet would break on me (like using ! to exclude
> things from the token text).

How about looking at the wiki first?

> Thanks,
> Igor Murashkin
> 

Best regards,
Johannes Luber

From win at wincent.com  Wed Jul 25 02:40:20 2007
From: win at wincent.com (Wincent Colaiuta)
Date: Wed, 25 Jul 2007 11:40:20 +0200
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
	<051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com>
	<a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>
Message-ID: <D0B39B97-165F-4EC9-B8DC-69D2D191CCE9@wincent.com>

El 25/7/2007, a las 1:42, Igor Murashkin escribi?:

> Thanks for all the help. I used a syntactic predicate like Jim  
> suggested and
> it seems to lex everything properly now. I wish I understood  more
> academically why my original lexing syntax didn't work, does ANTLR  
> not put
> the tokens back and backtrack when it fails to match a rule?

You hit the nail on the head right there.

>> DOT        : '.'   ;
>> INTEGER    :    Digit+;
>> DECIMAL    :    Digit+ '.' Digit+;

Reading that as a human you probably disambiguate those rules  
automatically and just think, "If it looks like a string of digits  
followed by a dot and some more digits then it's a decimal, otherwise  
if it's just a string of digits then it's an integer, and if it's  
just a dot then it's just a dot". So basically you are adding  
syntactic predicates automatically without thinking about it, and  
syntactic predicates are a form of backtracking.

But ANTLR does not backtrack unless you explicitly tell it to. I  
think the main reason people don't expect this behaviour is that many  
(myself included) have lived for years with Perl-compatible regular  
expressions which *do* automatically backtrack if necessary in order  
to produce a match.

So the first thing you have to do is jettison your ideas and try to  
start with a completely blank slate. Forget everything you thought  
you knew and figure out how ANTLR "thinks". In general, ANTLR's  
strategy consists of two phases: firstly trying to cheaply and  
quickly predict what will match and secondly actually matching it.  
Backtracking is avoided at all costs, and ANTLR always tries to use  
the minimal "lookahead" necessary to make a prediction.

Things are further complicated by the fact that grammar mistakes can  
manifest themselves at two points in time: firstly, ANTLR has to  
analyse your grammar at compile time in order to figure out what  
prediction machinery to use, so that means you have "compile"-time  
analysis errors (ambiguities, unreachable alternatives, non-LL  
decisions etc); but you could also have runtime errors (where even  
for correctly-formed input, the recognizer doesn't do what you think  
it should do). So it's a complicated and subtle problem.

Get and read the ANTLR book if you can, and experiment with simple  
test cases in ANTLRWorks and study the generated code until you feel  
that you fully understand what ANTLR is doing under the covers.

Cheers,
Wincent


From tbrandonau at gmail.com  Wed Jul 25 02:52:31 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 25 Jul 2007 19:52:31 +1000
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
	<ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
	<69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>
Message-ID: <ebc876d70707250252n657c7cfbs6fbe0a25225a2b1a@mail.gmail.com>

On 7/25/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> Thanks for the responses.
> Seems straight forward enough to create the disambiguating semantic
> predicate, but perhaps Im not starting out with the right assumptions.
>
> If I want to accept near as a term if it begins( or ends) a sentence, then I
> thought I could do something like this:
>
> value   :  value_ -> ^(VALUE value_) ;
>
> value_  :  keyBOOL terms* (operator^ value)*
>             | LPAREN! value RPAREN! ( operator^ value)*
>             ;
>
> keyBOOL : {input.LT(1).getText().equals("NEAR")}? terms;
>
> terms   : WCHAR+  -> ^(TERMS WCHAR+ )
>            ;
>
> But when I try to enter SO=(NEAR apples oranges), the parser no likey.
> Still getting:
>      line 1:5 no viable alternative at input 'NEAR'.
>
> Am I missing an obvious puzzle piece ?
> I tried instead to assume all booleans were terms and then tested each of
> the terms in a similar approach, but wasn't successful yet at
> differentiating, on demand, the operators from the terms.
The problem in the above rules isn't obvious to me. Looks like it
should work, though you seem to have some uneeded + and *'s given that
term is already WCHAR+, but that shouldn't break it as far as I can
see.
Were you running it under the ANTLRWorks interpreter? That won't do
actions so it won't work there. You need to use the debugger in this
case.
I got the following grammar to parse your example fine as well as to
parse "near=(near apples oranges)", correctly handling the first
"near" as a tag and the second as a keyBool:
grammar WQL;

options{
    output=AST;
    ASTLabelType=CommonTree;
}

tokens{ TAG; VALUE; TERMS;} //imaginary token types

@header{
import java.util.HashMap ;
}

@members {
HashMap fieldMap = new HashMap();
}

start
   :(	query
   		{System.out.println("AST:\n"+$query.tree.toStringTree());}
   	)+
	;

query
	:	field
    ;

field
	:	tag '=' LPAREN value RPAREN -> ^('=' tag value)
    |	tag '=' terms -> ^('=' tag terms)
    |	qid
	;

value
	:	keyBOOL terms?
    ;

keyBOOL
	:	near
	|	far
	;

terms
	:	WCHAR+  -> ^(TERMS WCHAR+ )
    ;

tag	:	WCHAR
    ;

qid	: '#'! DIGIT
    ;

near:	{input.LT(1).getText().toLowerCase().equals("near")}? WCHAR
	;

far	:	{input.LT(1).getText().toLowerCase().equals("near")}? WCHAR
	;

DIGIT   : ('0'..'9');
WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
LPAREN    : '(' ;
RPAREN    : ')' ;
QUOTE    : '"';
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

AFAICT there are no changes to the basic method you gave. I removed
some stuff to simplify putting together the grammar and I cleaned up
some of the unneccessary +s and *s. But no major changes.

Tom.
>
> Thank you for the help,
> Ted
>
>
>

From marko06 at gmail.com  Wed Jul 25 03:23:14 2007
From: marko06 at gmail.com (=?WINDOWS-1252?Q?Marko_Ko=9Amerl?=)
Date: Wed, 25 Jul 2007 12:23:14 +0200
Subject: [antlr-interest] Compile Elsa in win
Message-ID: <399464b90707250323g78ce3e7ck46273a2883441649@mail.gmail.com>

Hello!

I would like to compile Elsa C++ parser in windows but I am having
some problems.
I try to compile it in cygwin - I made that files needed (lexer.yy.cc,
cc_tokens.h, cc_tokens.cc, cc_tokens.ids) using perl and flex. I also
compile astgen and generated tree implementation that Elsa uses. But
when trying to compile Elkhoud I got errors:
./configure: line 3: $'\r?: command not found
unknown option:

I edit configure.pl file - remove all empty lines but still doesn't work.

Could anybody tell me if it wold be possible to compile Elsa in winxp
(maybe in MSVC) and explain to me how?

Thanks for any kind of answer!

marko

From bsder at allcaps.org  Wed Jul 25 03:25:27 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 03:25:27 -0700
Subject: [antlr-interest] Tokenizing question
In-Reply-To: <20070725090213.E1094589398@smtp08.americanis.net>
References: <46A6AF5A.2050508@allcaps.org> <46A6B2AA.8080206@ca.com>
	<46A6D87C.5020406@allcaps.org>
	<20070725090213.E1094589398@smtp08.americanis.net>
Message-ID: <46A72517.6080306@allcaps.org>

Gavin Lambert wrote:
> At 16:58 25/07/2007, Andrew Lentvorski wrote:
>  >Yes, it's true that my TT rule matches whitespace, but why
>  >does the whitespace even get down to it?
>  >
>  >I expected the MWS and TT rules to match and the MWS takes
>  >precedence because it matches first.
>  >
>  >Why is this not occurring?
> 
> Because matches are greedy.  Once it's started matching a TT, it will 
> keep going as long as it continues to match.  So since a space is a 
> valid TT character, any whitespace following a TT will be part of that TT.

Yeah, a little more experimenting and I figured out that it was going 
with greedy (maximal munch) precedence rather than specified order.

Interesting question: Is there a way to change that?

However, this probably means that the book "The definitive ANTLR 
reference" has an error in Chapter 3 pg 46.  It specifies both a NEWLINE 
and a WS in which ' \n' will match the WS rule and vacuum up the NEWLINE 
(since ' \n' is longer than either ' ' or '\n').

I'm currently looking at the XML parsing example on the Wiki.  I think 
I'm going to have to use gates to do what I need to do.

-a

From rbuck at verisign.com  Wed Jul 25 06:56:02 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Wed, 25 Jul 2007 09:56:02 -0400
Subject: [antlr-interest] Interpreter output inconsistent for "C style
	method calls"
Message-ID: <B408B6F6E3DEB04681E207B528821D49727C3A@DUL1WNEXMB05.vcorp.ad.vrsn.com>

Given something like this:

   MODULUS(16, FIRST_N_CHARACTERS(5, TO_ADDR()))


And running it through the interpreter using this grammar:

grammar test;
method
	:	ID arguments
	;
expression
	:	method
	|	literal
	;
literal	
	:	STRING
	|	INT
	;
arguments
	:	LPAREN (argumentList)? RPAREN
	;
argumentList
	:	expression (',' expression)*
	;
LPAREN	:	'(';
RPAREN	:	')';
ID  :   ('_'|'a'..'z'|'A'..'Z') ('_'|'a'..'z'|'A'..'Z'|'0'..'9')* ;
STRING : '"' .* '"' ;
INT :   '0'..'9'+ ;


When I compare the results of running the expression through 'method',
and through 'expression, I get different results:

> expression method MODULUS arguments ( argumentList expression literal
16

> method MODULUS arguments ( argumentList expression literal 16 ,
expression method FIRST_N_CHARACTERS arguments
    ( argumentList expression literal 5 , expression method TO_ADDR
arguments ( )

Now, as both have as a stem in their output 'method', I do not quite
understand why the interpreter produces different results in each case.

Am I missing something here?

Bob


From rbuck at verisign.com  Wed Jul 25 07:02:30 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Wed, 25 Jul 2007 10:02:30 -0400
Subject: [antlr-interest] Interpreter output inconsistent for "C
	stylemethod calls"
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727C3A@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727C45@DUL1WNEXMB05.vcorp.ad.vrsn.com>

This turns out to be a UI interpreter bug. When I run it through the
debugger, it displays consistently.

Bob

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> Sent: Wednesday, July 25, 2007 9:56 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Interpreter output inconsistent for 
> "C stylemethod calls"
> 
> Given something like this:
> 
>    MODULUS(16, FIRST_N_CHARACTERS(5, TO_ADDR()))
> 
> 
> And running it through the interpreter using this grammar:
> 
> grammar test;
> method
> 	:	ID arguments
> 	;
> expression
> 	:	method
> 	|	literal
> 	;
> literal	
> 	:	STRING
> 	|	INT
> 	;
> arguments
> 	:	LPAREN (argumentList)? RPAREN
> 	;
> argumentList
> 	:	expression (',' expression)*
> 	;
> LPAREN	:	'(';
> RPAREN	:	')';
> ID  :   ('_'|'a'..'z'|'A'..'Z') ('_'|'a'..'z'|'A'..'Z'|'0'..'9')* ;
> STRING : '"' .* '"' ;
> INT :   '0'..'9'+ ;
> 
> 
> When I compare the results of running the expression through 
> 'method', and through 'expression, I get different results:
> 
> > expression method MODULUS arguments ( argumentList 
> expression literal
> 16
> 
> > method MODULUS arguments ( argumentList expression literal 16 ,
> expression method FIRST_N_CHARACTERS arguments
>     ( argumentList expression literal 5 , expression method 
> TO_ADDR arguments ( )
> 
> Now, as both have as a stem in their output 'method', I do 
> not quite understand why the interpreter produces different 
> results in each case.
> 
> Am I missing something here?
> 
> Bob
> 
> 

From tbrandonau at gmail.com  Wed Jul 25 07:16:43 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 26 Jul 2007 00:16:43 +1000
Subject: [antlr-interest] Interpreter output inconsistent for "C
	stylemethod calls"
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727C45@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727C3A@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<B408B6F6E3DEB04681E207B528821D49727C45@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <ebc876d70707250716u42fa546cu768fbd945de217d1@mail.gmail.com>

On 7/26/07, Buck, Robert <rbuck at verisign.com> wrote:
> This turns out to be a UI interpreter bug. When I run it through the
> debugger, it displays consistently.
>
> Bob
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Buck, Robert
> > Sent: Wednesday, July 25, 2007 9:56 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Interpreter output inconsistent for
> > "C stylemethod calls"
> >
> > Given something like this:
> >
> >    MODULUS(16, FIRST_N_CHARACTERS(5, TO_ADDR()))
> >
> >
> > And running it through the interpreter using this grammar:
> >
> > grammar test;
> > method
> >       :       ID arguments
> >       ;
> > expression
> >       :       method
> >       |       literal
> >       ;
> > literal
> >       :       STRING
> >       |       INT
> >       ;
> > arguments
> >       :       LPAREN (argumentList)? RPAREN
> >       ;
> > argumentList
> >       :       expression (',' expression)*
> >       ;
> > LPAREN        :       '(';
> > RPAREN        :       ')';
> > ID  :   ('_'|'a'..'z'|'A'..'Z') ('_'|'a'..'z'|'A'..'Z'|'0'..'9')* ;
> > STRING : '"' .* '"' ;
> > INT :   '0'..'9'+ ;
> >
> >
> > When I compare the results of running the expression through
> > 'method', and through 'expression, I get different results:
> >
> > > expression method MODULUS arguments ( argumentList
> > expression literal
> > 16
> >
> > > method MODULUS arguments ( argumentList expression literal 16 ,
> > expression method FIRST_N_CHARACTERS arguments
> >     ( argumentList expression literal 5 , expression method
> > TO_ADDR arguments ( )
> >
> > Now, as both have as a stem in their output 'method', I do
> > not quite understand why the interpreter produces different
> > results in each case.
> >
> > Am I missing something here?
The interpreter shows a parse tree, showing all rules that were used
to parse the output, not the AST. If you look at the Parse Tree in the
debugger you should see something similar to the interpreter with the
different start rule producing a different parse tree. If you look at
the AST in the debugger then the output will be the same for both
start rules.

Tom.
> >
> > Bob
> >
> >
>

From rschulz at sonic.net  Wed Jul 25 07:21:49 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 25 Jul 2007 07:21:49 -0700
Subject: [antlr-interest] Tokenizing question
In-Reply-To: <46A72517.6080306@allcaps.org>
References: <46A6AF5A.2050508@allcaps.org>
	<20070725090213.E1094589398@smtp08.americanis.net>
	<46A72517.6080306@allcaps.org>
Message-ID: <200707250721.49640.rschulz@sonic.net>

On Wednesday 25 July 2007 03:25, Andrew Lentvorski wrote:
> Gavin Lambert wrote:
> > At 16:58 25/07/2007, Andrew Lentvorski wrote:
> >  > ...
> >
> > Because matches are greedy.  Once it's started matching a TT, it
> > will keep going as long as it continues to match.  So since a space
> > is a valid TT character, any whitespace following a TT will be part
> > of that TT.
>
> Yeah, a little more experimenting and I figured out that it was going
> with greedy (maximal munch) precedence rather than specified order.
>
> Interesting question: Is there a way to change that?

Precedence, as you know, is based on rule order, earlier rule wins 
(after other issues such as longest-match-wins are a "tie"). There is 
an per-rule option you can use to change greedy to reluctant. Here's 
the example used in TDAR (page 85 of the printed book, page 100 in the 
PDF):

ML_COMMENT
    :   '/*' ( options { greedy = false; } : . ) * '*/'
    ;

That should be clear enough on how to use it and what it does.


> ...
>
> I'm currently looking at the XML parsing example on the Wiki.  I
> think I'm going to have to use gates to do what I need to do.

Dare I again bring up the question of whether it's sensible to use ANTLR 
or any similar tool to parse XML?


> -a


Randall Schulz

From paul at paulkeir.com  Wed Jul 25 07:45:13 2007
From: paul at paulkeir.com (Paul Keir)
Date: Wed, 25 Jul 2007 15:45:13 +0100
Subject: [antlr-interest] Compile Elsa in win
In-Reply-To: <399464b90707250323g78ce3e7ck46273a2883441649@mail.gmail.com>
References: <399464b90707250323g78ce3e7ck46273a2883441649@mail.gmail.com>
Message-ID: <46A761F9.8050506@paulkeir.com>

Hi marko,
This mailing list has almost nothing to do with Elsa. I'd recommend 
mailing the Elsa authors instead.
Sorry,
Paul


From rschulz at sonic.net  Wed Jul 25 07:50:39 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 25 Jul 2007 07:50:39 -0700
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <932593CD-A4DE-4E1E-85DB-645C51541F47@cs.usfca.edu>
References: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
	<200707241748.52067.rschulz@sonic.net>
	<932593CD-A4DE-4E1E-85DB-645C51541F47@cs.usfca.edu>
Message-ID: <200707250750.39266.rschulz@sonic.net>

On Tuesday 24 July 2007 22:16, Terence Parr wrote:
> Hi guys,
>
> Can you try same file, but different host/location behind our IT
> switch?
>
> http://www.cs.usfca.edu/~afedosov/Sydney-JUG-June-20-2007.mp4

Maybe it's just the time of day at which I'm trying, but that one is 
showing sustained transfer at the full capacity of my DSL link, about 
314 KBps.

A second transfer from that URL proceeded similarly.


> If that works, then we've isolated the circuit :)
>
> Ter


Randall Schulz

From jrc at skylon.demon.co.uk  Wed Jul 25 07:54:35 2007
From: jrc at skylon.demon.co.uk (jrc at skylon.demon.co.uk)
Date: Wed, 25 Jul 2007 15:54:35 +0100
Subject: [antlr-interest] ids+=ID question
Message-ID: <E1IDiG3-000MPk-Mn@pr-webmail-1.mail.demon.net>

I am using the lexer to split lines into fields using PIPE, SPACE and
EQUALS.  After identifying the fields at the start of the line, I want
to reassemble the remaining text at the end of the line.  The 'jText'
rule recognizes the fields to be reassembled (see below).

However, I am having a problem figuring out how to obtain the '.text'
token attributes from the '$ids'.

Please can someone show me the way?
======================================================================
jText returns [String text]
        :       (ids+=STRING | ids+=EQUALS | ids+=PIPE | ids+=SPACE)*
                {
                    $text = "";
                    for (int i=0; i<$ids.size(); i++)
                        $text += $ids.get(i).text;
                }
        ;
EQUALS  :       '=' ;
PIPE    :       '|' ;
SPACE   :       ' ' ;
// STRING is printable ASCII excluding SPACE, EQUALS, PIPE, CR and NL
STRING  : (~(SPACE | EQUALS | PIPE | '\r' | '\n'))+ ;
======================================================================
--
John Connett



From jimi at temporal-wave.com  Wed Jul 25 07:58:04 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 07:58:04 -0700
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <46A7191B.9020808@gmx.de>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>	<051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com><a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>
	<46A7191B.9020808@gmx.de>
Message-ID: <051466DAA0D608439E196797955018D76F23@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Johannes Luber
> Sent: Wednesday, July 25, 2007 2:34 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Troubles lexing a decimal,(from an antlr
> beginner)
> 
> Igor Murashkin wrote:
> > Hello,
> >
> > Thanks for all the help. I used a syntactic predicate like Jim
> suggested
> > and it seems to lex everything properly now. I wish I understood
> more
> > academically why my original lexing syntax didn't work, does ANTLR
> not
> > put the tokens back and backtrack when it fails to match a rule?
> 
> Backtracking has to be explicitly activated because this option is
more
> time consuming than a straight pass.

This was a lexing question. Igor is asking why ANTLR does not generate
code that acts like {f}lex in that you can get through a matching
sequence and then decide to YYREJECT; manually or the algorithm will
give up and try the next rule and so on.

ANTLR generates recursive descent recognizers and so there is no [neat]
way to pop back up the recognition chain and start again. In practice,
this just means you have to get your head around it until you have
expunged {f}lex from your brain. It creates some lexing problems which
are difficult to solve until you have the gestalt. 

The easiest way is look at your tokens, merge common roots and write the
lexing rule so that it branches where the tokens will differ then uses
an action to set the type. You don't need to go to this trouble for
keywords with common roots 'call' 'calling' etc, but when you are
constructing compounds like INT.INT in the lexer and INT.xxx can mean
something else, then you need to guide the lexer analysis a bit. It may
not be exactly intuitive (at least not at first) but if you start
looking at the generated code, then as a programmer it may help you to
see what is happening, even if you don't a have a firm grasp of the
theory.

Ter has recently stated that he may look at the algorithm in order to
make it generate some of the 'intuitive' cases as one might expect. Of
course, that will screw up those of us that have got used to the way it
is ;-)

Jim

From rbuck at verisign.com  Wed Jul 25 08:00:18 2007
From: rbuck at verisign.com (Buck, Robert)
Date: Wed, 25 Jul 2007 11:00:18 -0400
Subject: [antlr-interest] Interpreter output inconsistent for
	"Cstylemethod calls"
In-Reply-To: <ebc876d70707250716u42fa546cu768fbd945de217d1@mail.gmail.com>
Message-ID: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>

If you "Display as Graph" in the interpreter and run the input through
'expression' and 'method' you get different graphs showing up. The
graphs should ordinarily look identical to what shows up under the
debugger, and in one case it is identical. But this is a bug, so it
would appear.

Bob 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org 
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Thomas Brandon
> Sent: Wednesday, July 25, 2007 10:17 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Interpreter output inconsistent 
> for "Cstylemethod calls"
> 
> On 7/26/07, Buck, Robert <rbuck at verisign.com> wrote:
> > This turns out to be a UI interpreter bug. When I run it 
> through the 
> > debugger, it displays consistently.
> >
> > Bob
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org 
> > > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of 
> Buck, Robert
> > > Sent: Wednesday, July 25, 2007 9:56 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Interpreter output inconsistent for "C 
> > > stylemethod calls"
> > >
> > > Given something like this:
> > >
> > >    MODULUS(16, FIRST_N_CHARACTERS(5, TO_ADDR()))
> > >
> > >
> > > And running it through the interpreter using this grammar:
> > >
> > > grammar test;
> > > method
> > >       :       ID arguments
> > >       ;
> > > expression
> > >       :       method
> > >       |       literal
> > >       ;
> > > literal
> > >       :       STRING
> > >       |       INT
> > >       ;
> > > arguments
> > >       :       LPAREN (argumentList)? RPAREN
> > >       ;
> > > argumentList
> > >       :       expression (',' expression)*
> > >       ;
> > > LPAREN        :       '(';
> > > RPAREN        :       ')';
> > > ID  :   ('_'|'a'..'z'|'A'..'Z') 
> ('_'|'a'..'z'|'A'..'Z'|'0'..'9')* ;
> > > STRING : '"' .* '"' ;
> > > INT :   '0'..'9'+ ;
> > >
> > >
> > > When I compare the results of running the expression through 
> > > 'method', and through 'expression, I get different results:
> > >
> > > > expression method MODULUS arguments ( argumentList
> > > expression literal
> > > 16
> > >
> > > > method MODULUS arguments ( argumentList expression literal 16 ,
> > > expression method FIRST_N_CHARACTERS arguments
> > >     ( argumentList expression literal 5 , expression 
> method TO_ADDR 
> > > arguments ( )
> > >
> > > Now, as both have as a stem in their output 'method', I 
> do not quite 
> > > understand why the interpreter produces different results in each 
> > > case.
> > >
> > > Am I missing something here?
> The interpreter shows a parse tree, showing all rules that 
> were used to parse the output, not the AST. If you look at 
> the Parse Tree in the debugger you should see something 
> similar to the interpreter with the different start rule 
> producing a different parse tree. If you look at the AST in 
> the debugger then the output will be the same for both start rules.
> 
> Tom.
> > >
> > > Bob
> > >
> > >
> >
> 

From jaluber at gmx.de  Wed Jul 25 08:00:50 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Wed, 25 Jul 2007 17:00:50 +0200
Subject: [antlr-interest] ids+=ID question
In-Reply-To: <E1IDiG3-000MPk-Mn@pr-webmail-1.mail.demon.net>
References: <E1IDiG3-000MPk-Mn@pr-webmail-1.mail.demon.net>
Message-ID: <46A765A2.4060800@gmx.de>

jrc at skylon.demon.co.uk wrote:
> I am using the lexer to split lines into fields using PIPE, SPACE and
> EQUALS.  After identifying the fields at the start of the line, I want
> to reassemble the remaining text at the end of the line.  The 'jText'
> rule recognizes the fields to be reassembled (see below).
> 
> However, I am having a problem figuring out how to obtain the '.text'
> token attributes from the '$ids'.
> 
> Please can someone show me the way?
> ======================================================================
> jText returns [String text]
>         :       (ids+=STRING | ids+=EQUALS | ids+=PIPE | ids+=SPACE)*
>                 {
>                     $text = "";
>                     for (int i=0; i<$ids.size(); i++)
>                         $text += $ids.get(i).text;
>                 }
>         ;
> EQUALS  :       '=' ;
> PIPE    :       '|' ;
> SPACE   :       ' ' ;
> // STRING is printable ASCII excluding SPACE, EQUALS, PIPE, CR and NL
> STRING  : (~(SPACE | EQUALS | PIPE | '\r' | '\n'))+ ;
> ======================================================================
> --
> John Connett

I'm not sure which language you are using. In C# you would use the
"Text" property, in Java (and probably C) the "GetText()" function.

Best regards,
Johannes Luber

From jimi at temporal-wave.com  Wed Jul 25 08:03:18 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 08:03:18 -0700
Subject: [antlr-interest] Interpreter output inconsistent
	for"Cstylemethod calls"
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <ebc876d70707250716u42fa546cu768fbd945de217d1@mail.gmail.com>
	<B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <051466DAA0D608439E196797955018D76F24@wavemachine.temporal-wave.com>

If you genuinely believe it to be so, then you should use the feedback
menu option and submit the grammar and an explanation.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Buck, Robert
> Sent: Wednesday, July 25, 2007 8:00 AM
> To: Thomas Brandon; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Interpreter output inconsistent
> for"Cstylemethod calls"
> 
> If you "Display as Graph" in the interpreter and run the input through
> 'expression' and 'method' you get different graphs showing up. The
> graphs should ordinarily look identical to what shows up under the
> debugger, and in one case it is identical. But this is a bug, so it
> would appear.



From tbrandonau at gmail.com  Wed Jul 25 08:51:42 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 26 Jul 2007 01:51:42 +1000
Subject: [antlr-interest] Interpreter output inconsistent
	for"Cstylemethod calls"
In-Reply-To: <051466DAA0D608439E196797955018D76F24@wavemachine.temporal-wave.com>
References: <ebc876d70707250716u42fa546cu768fbd945de217d1@mail.gmail.com>
	<B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<051466DAA0D608439E196797955018D76F24@wavemachine.temporal-wave.com>
Message-ID: <ebc876d70707250851v64135db6yaced610903010c2a@mail.gmail.com>

Sorry yes, this does appear to be a bug (or at least a limitation),
either in ANTLR's interpreter stuff or in ANTLRWorks' display stuff.
Though I think you are incorrect that one case works correctly in the
interpreter. I gather here you mean starting with method generates
identical results, but (for me) this is not so. While it gets further
it still terminates early, with the closing RPAREN of the arguments
for MODULUS not being matched.
While there are errors in your grammar these do not appear to be the cause.
Your grammar does not properly handle the whitespace you have used
(note the errors in the debugger) but the interpreter, like the
debugger, just ignores lexer errors and continues from the next
character and when started from method gets past these, so they aren't
the problem.
There is also a lack of a well defined start rule which ANTLR warns
about but adding:
start
	:	expression+ EOF
	;
does not fix the interpreter. Running start rule proceeds identically
to the debugger but when running method or statement the interpreter
terminates early.
So this does appear to be either a bug or limitation in the interpreter.

Tom.
On 7/26/07, Jim Idle <jimi at temporal-wave.com> wrote:
> If you genuinely believe it to be so, then you should use the feedback
> menu option and submit the grammar and an explanation.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Buck, Robert
> > Sent: Wednesday, July 25, 2007 8:00 AM
> > To: Thomas Brandon; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Interpreter output inconsistent
> > for"Cstylemethod calls"
> >
> > If you "Display as Graph" in the interpreter and run the input through
> > 'expression' and 'method' you get different graphs showing up. The
> > graphs should ordinarily look identical to what shows up under the
> > debugger, and in one case it is identical. But this is a bug, so it
> > would appear.
>
>
>

From rschulz at sonic.net  Wed Jul 25 09:04:57 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 25 Jul 2007 09:04:57 -0700
Subject: [antlr-interest] Rule Arguments and Automatically Generated
	Syntactic Predicates
In-Reply-To: <200707240807.57325.rschulz@sonic.net>
References: <200707240807.57325.rschulz@sonic.net>
Message-ID: <200707250904.57895.rschulz@sonic.net>

Hello again,

Is there nothing to be said about this apparent problem? At least an 
explanation of why I should not have tried what I did?

RRS


On Tuesday 24 July 2007 08:07, Randall R Schulz wrote:
> Hi,
>
> I have a rule (the accept state for this particular tree grammar)
> with an argument:
>
> clifUnit [ String unitName ]
> returns [ CLPhrase cf ]
> @init {
>   fAcceptor.startUnit(unitName);
> }
>
>   : ( text[unitName]
>
>       {
>         $cf = $text.t;
>         fAcceptor.acceptText($text.t);
>       }
>
>     | ...
>
> This grammar is generated with backtrack and memoize both enabled.
> When I generate a Java tree parser from this grammar, this method is
> produced:
>
>   // $ANTLR start synpred1
>   public final void synpred1_fragment() throws RecognitionException {
>     // CLIFBuilder.g:647:6: ( text[unitName] )
>     // CLIFBuilder.g:647:6: text[unitName]
>     {
>       pushFollow(FOLLOW_text_in_synpred1108);
>       text(unitName);
>       _fsp--;
>       if (failed) return ;
>
>     }
>   }
>   // $ANTLR end synpred1
>
>
> The problem is, the unitName argument is not propagated to the formal
> or actual parameters of this method.
>
>
> Is this a bug or a known limitation?
>
>
> Randall Schulz

From parrt at cs.usfca.edu  Wed Jul 25 09:05:40 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Jul 2007 09:05:40 -0700
Subject: [antlr-interest] Interpreter output inconsistent
	for"Cstylemethod calls"
In-Reply-To: <ebc876d70707250851v64135db6yaced610903010c2a@mail.gmail.com>
References: <ebc876d70707250716u42fa546cu768fbd945de217d1@mail.gmail.com>
	<B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<051466DAA0D608439E196797955018D76F24@wavemachine.temporal-wave.com>
	<ebc876d70707250851v64135db6yaced610903010c2a@mail.gmail.com>
Message-ID: <E5901CDE-0A54-4E9C-B309-0E9B154938E9@cs.usfca.edu>

You folks know that the interpreter can't do syn preds (backtracking)  
yet right?  I haven't looked at your grammars, but that is the most  
likely answer.
Ter

From parrt at cs.usfca.edu  Wed Jul 25 09:07:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Jul 2007 09:07:25 -0700
Subject: [antlr-interest] Interpreter output inconsistent for
	"Cstylemethod calls"
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <D71140A6-CD2D-4996-8BB7-F6A4F9F9EA53@cs.usfca.edu>

Oh, no backtracking...ok, i'll look.  Note that the tree will be  
different in that the root node will be different (an extra) for the  
different input.

Ter

From parrt at cs.usfca.edu  Wed Jul 25 09:09:00 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Jul 2007 09:09:00 -0700
Subject: [antlr-interest] Rule Arguments and Automatically Generated
	Syntactic Predicates
In-Reply-To: <200707250904.57895.rschulz@sonic.net>
References: <200707240807.57325.rschulz@sonic.net>
	<200707250904.57895.rschulz@sonic.net>
Message-ID: <5AAF3A31-0FD8-4557-BEA5-846A6CC56435@cs.usfca.edu>

Known limitation of our algol-based target languages.  It's in book;  
not sure I have a faq yet.

Ter

From tbrandonau at gmail.com  Wed Jul 25 09:29:50 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 26 Jul 2007 02:29:50 +1000
Subject: [antlr-interest] Interpreter output inconsistent for
	"Cstylemethod calls"
In-Reply-To: <D71140A6-CD2D-4996-8BB7-F6A4F9F9EA53@cs.usfca.edu>
References: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
	<D71140A6-CD2D-4996-8BB7-F6A4F9F9EA53@cs.usfca.edu>
Message-ID: <ebc876d70707250929w1475d917i9f3bdbc2f4cf7864@mail.gmail.com>

On 7/26/07, Terence Parr <parrt at cs.usfca.edu> wrote:
> Oh, no backtracking...ok, i'll look.  Note that the tree will be
> different in that the root node will be different (an extra) for the
> different input.
>
> Ter
>
Yeah, the problems are deeper than that.
With the grammar below, which gives no errors, parsing "MODULUS(16,
FIRST_N_CHARACTERS(5, TO_ADDR()))" in the debugger proceeds
identically starting from start, expression or method rules (ignoring
different rules leading into method and the fact that start also
matches the EOF). Under the interpreter start parses the entire input
while expression terminates after ""MODULUS(16" while method gets
through "MODULUS(16, FIRST_N_CHARACTERS(5, TO_ADDR())" (missing the
last ')').

grammar Test;

start
	:	expression+ EOF;

method
       :       ID arguments
       ;
expression
       :       method
       |       literal
       ;
literal
       :       STRING
       |       INT
       ;
arguments
       :       LPAREN (argumentList)? RPAREN
       ;
argumentList
       :       expression (',' expression)+
       ;
LPAREN  :       '(';
RPAREN  :       ')';
ID  :   ('_'|'a'..'z'|'A'..'Z') ('_'|'a'..'z'|'A'..'Z'|'0'..'9')* ;
STRING : '"' .* '"' ;
INT :   '0'..'9'+ ;
WS	:	' '{ skip(); };

From ted.villalba at gmail.com  Wed Jul 25 09:52:49 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 25 Jul 2007 09:52:49 -0700
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <ebc876d70707250252n657c7cfbs6fbe0a25225a2b1a@mail.gmail.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
	<ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
	<69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>
	<ebc876d70707250252n657c7cfbs6fbe0a25225a2b1a@mail.gmail.com>
Message-ID: <69fb4b090707250952u42e9473die7576b8855772cbb@mail.gmail.com>

Thank you Tom, for having devoted time to this already.

The major difference between our grammars is yours does not have any lexer
rules for the operator NEAR, so there is no conflict. Adding the BOOL_OP
lexer rule back in breaks that example.
Here's a stripped down grammar with your semantic predicate for 'near'.If I
comment the BOOL_OP rule, it works fine by treating everything as WCHAR.
If I uncomment that BOOL_OP rule, it illustrates how the semantic predicate
fails to resolve the NEAR operator to a wchar when the conflicting lexer
rule  exists.

grammar WQL;

options{
   output=AST;
   ASTLabelType=CommonTree;
}


query :  tag '=' keyBOOL terms+
      ;

terms  : WCHAR+
       ;

tag    : WCHAR
       ;

keyBOOL: near
       ;

near:   {input.LT(1).getText().toLowerCase().equals("near")}? WCHAR
       ;

BOOL_OP :  'NEAR'; //comment this out to get working
WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;


Thank you again. The help is very much appreciated.

Ted



On 7/25/07, Thomas Brandon <tbrandonau at gmail.com> wrote:
>
> On 7/25/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> > Thanks for the responses.
> > Seems straight forward enough to create the disambiguating semantic
> > predicate, but perhaps Im not starting out with the right assumptions.
> >
> > If I want to accept near as a term if it begins( or ends) a sentence,
> then I
> > thought I could do something like this:
> >
> > value   :  value_ -> ^(VALUE value_) ;
> >
> > value_  :  keyBOOL terms* (operator^ value)*
> >             | LPAREN! value RPAREN! ( operator^ value)*
> >             ;
> >
> > keyBOOL : {input.LT(1).getText().equals("NEAR")}? terms;
> >
> > terms   : WCHAR+  -> ^(TERMS WCHAR+ )
> >            ;
> >
> > But when I try to enter SO=(NEAR apples oranges), the parser no likey.
> > Still getting:
> >      line 1:5 no viable alternative at input 'NEAR'.
> >
> > Am I missing an obvious puzzle piece ?
> > I tried instead to assume all booleans were terms and then tested each
> of
> > the terms in a similar approach, but wasn't successful yet at
> > differentiating, on demand, the operators from the terms.
> The problem in the above rules isn't obvious to me. Looks like it
> should work, though you seem to have some uneeded + and *'s given that
> term is already WCHAR+, but that shouldn't break it as far as I can
> see.
> Were you running it under the ANTLRWorks interpreter? That won't do
> actions so it won't work there. You need to use the debugger in this
> case.
> I got the following grammar to parse your example fine as well as to
> parse "near=(near apples oranges)", correctly handling the first
> "near" as a tag and the second as a keyBool:
> grammar WQL;
>
> options{
>     output=AST;
>     ASTLabelType=CommonTree;
> }
>
> tokens{ TAG; VALUE; TERMS;} //imaginary token types
>
> @header{
> import java.util.HashMap ;
> }
>
> @members {
> HashMap fieldMap = new HashMap();
> }
>
> start
>    :(   query
>                 {System.out.println("AST:\n"+$query.tree.toStringTree());}
>         )+
>         ;
>
> query
>         :       field
>     ;
>
> field
>         :       tag '=' LPAREN value RPAREN -> ^('=' tag value)
>     |   tag '=' terms -> ^('=' tag terms)
>     |   qid
>         ;
>
> value
>         :       keyBOOL terms?
>     ;
>
> keyBOOL
>         :       near
>         |       far
>         ;
>
> terms
>         :       WCHAR+  -> ^(TERMS WCHAR+ )
>     ;
>
> tag     :       WCHAR
>     ;
>
> qid     : '#'! DIGIT
>     ;
>
> near:   {input.LT(1).getText().toLowerCase().equals("near")}? WCHAR
>         ;
>
> far     :       {input.LT(1).getText().toLowerCase().equals("near")}?
> WCHAR
>         ;
>
> DIGIT   : ('0'..'9');
> WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
> LPAREN    : '(' ;
> RPAREN    : ')' ;
> QUOTE    : '"';
> WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
>
> AFAICT there are no changes to the basic method you gave. I removed
> some stuff to simplify putting together the grammar and I cleaned up
> some of the unneccessary +s and *s. But no major changes.
>
> Tom.
> >
> > Thank you for the help,
> > Ted
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070725/0d409d28/attachment.html 

From parrt at cs.usfca.edu  Wed Jul 25 11:42:04 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Jul 2007 11:42:04 -0700
Subject: [antlr-interest] found faulty network maybe
Message-ID: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>

Hi,

The big video stalls on the antlr.org box in our "fancy" data center,  
but works from our lowly web server (next to my office) in our CS  
server rack apparently.  If we verify this, I'll move the server.   
Can some people that had trouble before with antlr.org, please try  
this download on new machine:

http://www.cs.usfca.edu/~afedosov/Sydney-JUG-June-20-2007.mp4

and look for stalls etc...?

Thanks,
Ter

From parrt at cs.usfca.edu  Wed Jul 25 11:45:42 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Jul 2007 11:45:42 -0700
Subject: [antlr-interest] Interpreter output inconsistent for
	"Cstylemethod calls"
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
References: <B408B6F6E3DEB04681E207B528821D49727C99@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <F5491B7B-00EA-4F10-AC69-DAECC835CA6B@cs.usfca.edu>


On Jul 25, 2007, at 8:00 AM, Buck, Robert wrote:

> If you "Display as Graph" in the interpreter and run the input through
> 'expression' and 'method' you get different graphs showing up. The
> graphs should ordinarily look identical to what shows up under the
> debugger, and in one case it is identical. But this is a bug, so it
> would appear.

Wow. That is spooky. I'm adding a bug.
Thanks!
Ter

From matthew.j.diehl at intel.com  Wed Jul 25 11:59:16 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 25 Jul 2007 11:59:16 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <B408B6F6E3DEB04681E207B528821D49727BA3@DUL1WNEXMB05.vcorp.ad.vrsn.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20257351F@orsmsx417.amr.corp.intel.com>

> -----Original Message-----
> From: Buck, Robert [mailto:rbuck at verisign.com] 
> Sent: Tuesday, July 24, 2007 6:30 PM
> To: Andrew Lentvorski
> Cc: Diehl, Matthew J; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Newbie: NoViableAltException
> 
> Say, how did you get ANTLRWorks to display the output in that format,
> e.g. '(', TUPLET "a1", '=', '(', TUPLET "a2", '=', TUPLET "v2))"
> 
> Or was that just your handywork?
> 
> That is the sort of output that would be useful to see. The UI is only
> showing the grammar rules, not what they are made up of.
> 
> Bob
Yeah, others have mentioned ways similar to this, and sorry my
explanation was pretty sloppy last time, but the way to do this was
somewhat explained in my first e-mail.  I didn't write it all out due to
lack of time, but I'll do it again for a simple grammar:

Given the following lexer stuff:
/////lexer stuff:
Quote : '\"';
Backslash : '\\';
Mul : '*';
Plus : '+';
Minus : '-';

BinaryString
  : Quote ('0'|'1'|'-'|'x'|'l'|'h'|'z'|'_')+ Quote
  ;

StringLiteral
  : Quote (GraphicCharacter | Backslash | Mul | ' ')* Quote
  ;

Exponent
  : 'e' (Plus | Minus)? Integer
  ;

fragment
Integer
  : '0'..'9' ('_' | '0'..'9')*
  ;
fragment
GraphicCharacter

WS : (' ' | '\t' | '\n' | '\r'){$channel=HIDDEN;}
  ;

//////To display the emitted tokens (note, fragments are not tokens, but
parts of one, so we don't need to do anything with the fragment rules)
make parser rules for each lexer rule:

//parser stuff:
grammar mytest;
everything
  : quote | backslash | mul | plus | minus | binaryString |
stringLiteral | exponent
  ;
quote
  : Quote
  ;
backslash
  : Backslash
  ;
mul 
  : Mul
  ;
plus 
  : Plus
  ;
minus 
  : Minus
  ;
binaryString 
  : BinaryString
  ;
stringLiteral 
  : StringLiteral
  ;
exponent
  : Exponent
  ;
<add the lexer stuff from above>
(notice that there is an individual parser (first letter lowercase) rule
for each lexer (first letter uppercase) rule)
If you run the debugger under the starting rule: 'everything', given
correct syntax, it will display the token stream in the window.  If this
doesn't make sense...sorry, just give it a try.

Matt

From matthew.j.diehl at intel.com  Wed Jul 25 12:06:11 2007
From: matthew.j.diehl at intel.com (Diehl, Matthew J)
Date: Wed, 25 Jul 2007 12:06:11 -0700
Subject: [antlr-interest] Newbie: NoViableAltException
In-Reply-To: <A10CD303B51F814DB568A8AAF02174C20257351F@orsmsx417.amr.corp.intel.com>
Message-ID: <A10CD303B51F814DB568A8AAF02174C20257352C@orsmsx417.amr.corp.intel.com>

> everything
>   : quote | backslash | mul | plus | minus | binaryString |
> stringLiteral | exponent
>   ;

Forgot the parenthesis around the everything rule:

everything
  : ( quote | backslash | mul | plus | minus | binaryString |
stringLiteral | exponent )*
  ;

From jrc at skylon.demon.co.uk  Wed Jul 25 12:06:33 2007
From: jrc at skylon.demon.co.uk (John Connett)
Date: Wed, 25 Jul 2007 20:06:33 +0100
Subject: [antlr-interest] ids+=ID question
In-Reply-To: <46A765A2.4060800@gmx.de>
References: <E1IDiG3-000MPk-Mn@pr-webmail-1.mail.demon.net>
	<46A765A2.4060800@gmx.de>
Message-ID: <1185390393.8248.16.camel@gateway.home>

On Wed, 2007-07-25 at 17:00 +0200, Johannes Luber wrote:
> jrc at skylon.demon.co.uk wrote:
> > I am using the lexer to split lines into fields using PIPE, SPACE and
> > EQUALS.  After identifying the fields at the start of the line, I want
> > to reassemble the remaining text at the end of the line.  The 'jText'
> > rule recognizes the fields to be reassembled (see below).
> > 
> > However, I am having a problem figuring out how to obtain the '.text'
> > token attributes from the '$ids'.
> > 
> > Please can someone show me the way?
> > ======================================================================
> > jText returns [String text]
> >         :       (ids+=STRING | ids+=EQUALS | ids+=PIPE | ids+=SPACE)*
> >                 {
> >                     $text = "";
> >                     for (int i=0; i<$ids.size(); i++)
> >                         $text += $ids.get(i).text;
> >                 }
> >         ;
> > EQUALS  :       '=' ;
> > PIPE    :       '|' ;
> > SPACE   :       ' ' ;
> > // STRING is printable ASCII excluding SPACE, EQUALS, PIPE, CR and NL
> > STRING  : (~(SPACE | EQUALS | PIPE | '\r' | '\n'))+ ;
> > ======================================================================
> > --
> > John Connett
> 
> I'm not sure which language you are using. In C# you would use the
> "Text" property, in Java (and probably C) the "GetText()" function.
> 
> Best regards,
> Johannes Luber

Many thanks.  I am using Java (but I'm not an experienced Java
programmer).  Here is what I found worked:

        $text = "";
        if ($ids!=null)
        {
            for (int i=0; i<$ids.size(); i++)
            {
                $text += ((Token)$ids.get(i)).getText();
            }
        }

Perhaps there is a neater solution?
--
John Connett



From downtown1 at gmail.com  Wed Jul 25 12:11:44 2007
From: downtown1 at gmail.com (Igor Murashkin)
Date: Wed, 25 Jul 2007 14:11:44 -0500
Subject: [antlr-interest] Troubles lexing a decimal,
	(from an antlr beginner)
In-Reply-To: <051466DAA0D608439E196797955018D76F23@wavemachine.temporal-wave.com>
References: <a434e2e0707240945v2115541fh82f0d616683877e9@mail.gmail.com>
	<051466DAA0D608439E196797955018D76F17@wavemachine.temporal-wave.com>
	<a434e2e0707241642x1188dc7bg47ac1422682cedff@mail.gmail.com>
	<46A7191B.9020808@gmx.de>
	<051466DAA0D608439E196797955018D76F23@wavemachine.temporal-wave.com>
Message-ID: <a434e2e0707251211g1ea47694n5d938d26936b73e0@mail.gmail.com>

So if ANTLR generates recursive descent lexers, why are there so many things
about DFAs in the generated code (shouldn't I be seeing PDAs all over the
place instead)? When I see that I automatically think regular language +
NFAs and that means it should be able to automagically pick the right
accept/reject state for the tokens.

As for looking at the wiki, I did, and there was a Java example with setText
and getText (if you mean about the !), which aren't applicable to C# since
we have a Text setter/getter property instead. For parsing decimals I don't
recall anything like this problem unless it was hidden in one of the
tutorials.

Thanks,
Igor

On 7/25/07, Jim Idle <jimi at temporal-wave.com> wrote:
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Johannes Luber
> > Sent: Wednesday, July 25, 2007 2:34 AM
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Troubles lexing a decimal,(from an antlr
> > beginner)
> >
> > Igor Murashkin wrote:
> > > Hello,
> > >
> > > Thanks for all the help. I used a syntactic predicate like Jim
> > suggested
> > > and it seems to lex everything properly now. I wish I understood
> > more
> > > academically why my original lexing syntax didn't work, does ANTLR
> > not
> > > put the tokens back and backtrack when it fails to match a rule?
> >
> > Backtracking has to be explicitly activated because this option is
> more
> > time consuming than a straight pass.
>
> This was a lexing question. Igor is asking why ANTLR does not generate
> code that acts like {f}lex in that you can get through a matching
> sequence and then decide to YYREJECT; manually or the algorithm will
> give up and try the next rule and so on.
>
> ANTLR generates recursive descent recognizers and so there is no [neat]
> way to pop back up the recognition chain and start again. In practice,
> this just means you have to get your head around it until you have
> expunged {f}lex from your brain. It creates some lexing problems which
> are difficult to solve until you have the gestalt.
>
> The easiest way is look at your tokens, merge common roots and write the
> lexing rule so that it branches where the tokens will differ then uses
> an action to set the type. You don't need to go to this trouble for
> keywords with common roots 'call' 'calling' etc, but when you are
> constructing compounds like INT.INT in the lexer and INT.xxx can mean
> something else, then you need to guide the lexer analysis a bit. It may
> not be exactly intuitive (at least not at first) but if you start
> looking at the generated code, then as a programmer it may help you to
> see what is happening, even if you don't a have a firm grasp of the
> theory.
>
> Ter has recently stated that he may look at the algorithm in order to
> make it generate some of the 'intuitive' cases as one might expect. Of
> course, that will screw up those of us that have got used to the way it
> is ;-)
>
> Jim
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070725/95439c71/attachment.html 

From ruth.karl at gmx.de  Wed Jul 25 12:28:49 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Wed, 25 Jul 2007 21:28:49 +0200
Subject: [antlr-interest]  lexer problem
In-Reply-To: <52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>
	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
Message-ID: <46A7A471.5050102@gmx.de>

Dear all,

I have been trying in vain to find a solution for the following lexer 
problem with the attached grammar:

if I give it '<xxx>' as an input, it works correctly (interpreting it as 
an htmltag with xxx as text content);

while if i give it '<s>' it doesn't. In AnTLRWorks it results in an 
empty document, and the generated lexer (C#) throws a 
Antlr.Runtime.MismatchedTokenException trying to match "<script"...

(if i give it '< s>' though, there is no problem).

The lexer rule that is invoked is:
    JAVASCRIPT    :    '<script' ( options {greedy=false;} : . )* 
'</script>'    ;   

but with k=3 this problem I thought this should not happen. It did not 
help to turn on backtrack option either.
What am I missing? Could someone please help?

Thanks a lot,

Ruth

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: JSP.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070725/6cfa6868/attachment.pl 

From bsder at allcaps.org  Wed Jul 25 13:24:16 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 13:24:16 -0700
Subject: [antlr-interest] Parsing structured data rather than language
In-Reply-To: <200707250721.49640.rschulz@sonic.net>
References: <46A6AF5A.2050508@allcaps.org>	<20070725090213.E1094589398@smtp08.americanis.net>	<46A72517.6080306@allcaps.org>
	<200707250721.49640.rschulz@sonic.net>
Message-ID: <46A7B170.8080503@allcaps.org>

Randall R Schulz wrote:

> Dare I again bring up the question of whether it's sensible to use ANTLR 
> or any similar tool to parse XML?

Ummm, I'm not parsing XML.  I'm parsing a VCD (Verilog Change Dump) file.

However, your question begets a larger question:

Is ANTLR a good way to parse and process structured data?

*That* I don't know.


Dealing with structured data sucks.  Even with XML, you wind up writing 
the equivalent of a top-down recursive descent grammar.  If you look at 
the format of a VCD file, it also requires the equivalent of a recursive 
descent grammar to soak it all up.

The problem, however, is tokenization.  The tokenization is very 
non-specific with a combination of delimiters serving to set off 
tokenization class changes.

The VCD format, in particular, sometimes uses explicit delimiters 
($comment ... $end), but it overloads the end delimiter ($date ... 
$end).  Sometimes it uses whitespace "1x0z01 identifier" but sometimes 
it uses character length where the 1 is the value and anotherid is the 
identifier "1anotherid".

The problem is that I don't get to *write* these interchange formats. 
I'm stuck with them.  I have to beat the tokenizer into submission. 
Once I get the tokenizer to behave, normally the grammar is straightforward.

Maybe this means that I should just pull the grammar out of ANTLR and 
use a handwritten custom tokenizer.  I don't know.  However, I'd at 
least like to try this while staying completely within the framework of 
ANTLR.  Afterward, I can try the custom tokenizer and see if it reduces 
the complexity substantially or not.

-a

From bsder at allcaps.org  Wed Jul 25 13:26:03 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 13:26:03 -0700
Subject: [antlr-interest] Tokenizing question
In-Reply-To: <200707250721.49640.rschulz@sonic.net>
References: <46A6AF5A.2050508@allcaps.org>	<20070725090213.E1094589398@smtp08.americanis.net>	<46A72517.6080306@allcaps.org>
	<200707250721.49640.rschulz@sonic.net>
Message-ID: <46A7B1DB.4090509@allcaps.org>

Randall R Schulz wrote:
> ML_COMMENT
>     :   '/*' ( options { greedy = false; } : . ) * '*/'
>     ;
> 
> That should be clear enough on how to use it and what it does.

Yes, it is.  But it tokenizes the entire statement so it can throw it out.

What I don't have is a good way to tokenize that into:
"/*", COMMENTTEXT, "*/"

Using gates like the wiki shows for parsing XML *does* seem to get me 
the ability to do that.

-a



From bsder at allcaps.org  Wed Jul 25 13:29:04 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 13:29:04 -0700
Subject: [antlr-interest] lexer problem
In-Reply-To: <46A7A471.5050102@gmx.de>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
	<46A7A471.5050102@gmx.de>
Message-ID: <46A7B290.2060008@allcaps.org>

Ruth Karl wrote:
> What am I missing? Could someone please help?

Take a look at the XML example on the wiki:
http://www.antlr.org/wiki/display/ANTLR3/Parsing+XML

Specifically, how it copes with tags:
http://www.antlr.org/wiki/display/ANTLR3/1.+Lexer

-a

From jimi at temporal-wave.com  Wed Jul 25 14:09:40 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 14:09:40 -0700
Subject: [antlr-interest] ids+=ID question
In-Reply-To: <1185390393.8248.16.camel@gateway.home>
References: <E1IDiG3-000MPk-Mn@pr-webmail-1.mail.demon.net><46A765A2.4060800@gmx.de>
	<1185390393.8248.16.camel@gateway.home>
Message-ID: <051466DAA0D608439E196797955018D76F26@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of John Connett
> 
> Many thanks.  I am using Java (but I'm not an experienced Java
> programmer). 

How about... (and note that I changed that to + rather than * as I don't
like rules that match nothing, you should use jText? instead :-)

jText returns [String text]
@init {$text = ""}
         :
		(       id=(STRING | EQUALS | PIPE | SPACE)
                 {
                     $text = $text + $id.text;
                 }
		)+
         ;


Jim

From antlr at mirality.co.nz  Wed Jul 25 14:28:46 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 26 Jul 2007 09:28:46 +1200
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <69fb4b090707250952u42e9473die7576b8855772cbb@mail.gmail.co
 m>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
	<ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
	<69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>
	<ebc876d70707250252n657c7cfbs6fbe0a25225a2b1a@mail.gmail.com>
	<69fb4b090707250952u42e9473die7576b8855772cbb@mail.gmail.com>
Message-ID: <20070725212855.460FC11EB3C@www.antlr.org>

At 04:52 26/07/2007, Ted Villalba wrote:
>The major difference between our grammars is yours does not have 
>any lexer rules for the operator NEAR, so there is no conflict. 
>Adding the BOOL_OP lexer rule back in breaks that example.
[...]
>query :  tag '=' keyBOOL terms+
>       ;
>
>terms  : WCHAR+
>        ;
>
>tag    : WCHAR
>        ;
>
>keyBOOL: near
>        ;
>
>near:   {input.LT(1).getText().toLowerCase().equals("near")}? 
>WCHAR
>        ;
>
>BOOL_OP :  'NEAR'; //comment this out to get working
>WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
>WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

I think you need to make your parser more lenient.

1. Rename 'BOOL_OP' to 'NEAR', and don't add any other keywords to 
it -- give those their own separate lexer rules.

2. Create a parser rule 'bool_op' that accepts NEAR.

3. Remove 'terms' because it's pointless (you've already got 
'multiple characters' at the lexing level, and 'multiple terms' at 
the 'query' level).

4. Remove the 'near' rule and the 'keyBOOL' rule (since you've got 
'bool_op' now).

5. Wherever a bool_op can be used in a non-keyword context, add it 
as an alternative.  Presumably, this means changing 'tag' to 
"WCHAR | bool_op".

You'll still end up with a NEAR token output, not a WCHAR, but it 
should match now.


From pink at odahoda.de  Wed Jul 25 14:38:27 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Wed, 25 Jul 2007 23:38:27 +0200
Subject: [antlr-interest] found faulty network maybe
References: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>
Message-ID: <f88fsj$cs$1@sea.gmane.org>

Terence Parr wrote:

> The big video stalls on the antlr.org box in our "fancy" data center,
> but works from our lowly web server (next to my office) in our CS
> server rack apparently.  If we verify this, I'll move the server.
> Can some people that had trouble before with antlr.org, please try
> this download on new machine:
> 
> http://www.cs.usfca.edu/~afedosov/Sydney-JUG-June-20-2007.mp4
> 
> and look for stalls etc...?

Looks good here. Have not downloaded it completely though, because my system
wanted to open it in emacs, so I abort before my machine entered
swapping-hell.

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From parrt at cs.usfca.edu  Wed Jul 25 14:41:11 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 25 Jul 2007 14:41:11 -0700
Subject: [antlr-interest] ANTLRv3 comments/suggestions
In-Reply-To: <46969870.20000@jazillian.com>
References: <46969870.20000@jazillian.com>
Message-ID: <0B90B340-EA4A-4303-9AA4-1CA558B9D3A9@cs.usfca.edu>


On Jul 12, 2007, at 2:09 PM, Andy Tripp wrote:

> Hi all,
> I've just started using ANTLRv3 and I have a few comments/ 
> suggestions/enhancement request/bug reports.
> Sorry to lump them all together like this - I'm lazy.
>
> And, of course, let me just say v3 is amazing!

Great! :)

> What impresses me most is that it seems like software tools in  
> general, and especially tools like ANTLR,
> never seem to get easier to use as they get older. New releases  
> invariably add power and get harder to use,
> not easier. Not so with v3: LL(*) really does a great job of  
> drastically reducing the classic "ambiguity headache".
> I'm really enjoying the new rewrite rules for creating ASTs.

Awesome...yeah, i love those things. ;)

> A really great job by Terence!

thanks!

> 1) When a rule alternative is the rule itself, I get a runtime  
> StackOverFlowError, should be caught earlier:
> A: A | B;

yup.

http://www.antlr.org:8888/browse/ANTLR-108

> 2) ANTLR always returns 0, even when an error occured. Should  
> return non-zero on error

yup. got it:

http://www.antlr.org:8888/browse/ANTLR-43

> 3) When I list a parser rule after a lexer rule,ANTLR doesn't seem  
> to find the parser rule.
> This was hard to track down because I accidentally started a parser  
> rule with uppercase (making it a lexer rule),
> and then (I think) all parser rules after that were not found. If  
> all parser rules must come first, enforce that
> and make sure no lexer rules come after any parser rules.

Hmm...i get no issue with:

grammar T;
a : B ;
B : 'b' ;
c : 'c' ;

> Also on this issue, the book only mentions once, in passing, that  
> lexer rules are uppercase, an doesn't mention
> that parser rules start with uppercase. I would emphasize this  
> issue more.
>
> 4) When I define an imaginary token called "EOF", it conflicts with  
> the ANTLR-internal one with the same name,
> and I get a NPE at runtime.

Added bug.

> 5) I have a lot of suggested improvements for CommonTree, but of  
> course I'll just extend it for myself.
> You may want to consider adding the following:
> * Add a getChildren() method - makes it easier to iterate,  
> especially with the Java1.5 foreach construct.

added to BaseTree

	/** Get the children internal List; note that if you directly mess with
	 *  the list, do so at your own risk.
	 */
	public List getChildren() {
		return children;
	}


> * why not initialize children to an empty list, rather than null  
> and having all that null checking code?

a waste of an array for every leaf node.

> * use generics - children should be a List of CommonTrees.

can't use 1.5 for runtime yet.

> * I've written a toStringPrettyTree() method that prints out trees  
> nicely indented, rather than that
> ugly LISP-ish syntax of toStringTree().

want to donate?  Send in via feedback page. :)

> * Use StringBuilder rather than StringBuffer, probably everywhere  
> in ANTLR and in the generated code.

That's 1.5.

> 6) Why do I have to both specify ASTTokenType and also do the  
> setTreeAdaptor() thing? Can't
> ANTLR call setTreeAdaptor() on its own whenever I specify an  
> ASTTokenType?

ASTLabelType is for generating casts in generated code.  it's not a  
runtime thing.
>
> 7) CommonTree.getText() shouldn't call toString() because a  
> subclass may override toString() and
> call getText() in it (causing a infinite recursion).

yep, i fixed that.

>
> 8) In the generated code, print out the TokenTypes ordered by value:
>    public static final int SR_ASSIGN=130;
>    public static final int COMMA=78;
>    public static final int STATIC_BLOCK=49;
>    public static final int MINUS=86;
>    public static final int FORMAL_PARAMETERS=39;
>    public static final int EXPANSION_CHOICES=23;
>    public static final int HexDigit=122;
>    public static final int REGEX_PRODUCTION=32;
>    public static final int MORE=12;
>    public static final int FIELD_DECLARATION=53;
>    public static final int REGEX_ID=35;
> ....
>
> 9) When I accidentally put a '$' where it doesn't belong it a rule  
> parameter:
> myrule[$param]
>  : ....
>
> ...I get error "atribute param is not a token, ...", which is fine,  
> but the line and column are both zero in the error.
>
> I hope this list is useful!

Very!  Thanks, Andy.
Ter

From gbr at newtechlaw.com  Wed Jul 25 14:48:11 2007
From: gbr at newtechlaw.com (Gerald B. Rosenberg)
Date: Wed, 25 Jul 2007 14:48:11 -0700
Subject: [antlr-interest] ids+=ID question
In-Reply-To: <051466DAA0D608439E196797955018D76F26@wavemachine.temporal-
	wave.com>
References: <E1IDiG3-000MPk-Mn@pr-webmail-1.mail.demon.net>
	<46A765A2.4060800@gmx.de> <1185390393.8248.16.camel@gateway.home>
	<051466DAA0D608439E196797955018D76F26@wavemachine.temporal-wave.com>
Message-ID: <200707252148.l6PLmt5K007858@morpho.newtechlaw.com>

At 02:09 PM 7/25/2007, Jim Idle wrote:
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of John Connett
> >
> > Many thanks.  I am using Java (but I'm not an experienced Java
> > programmer).
>
>How about... (and note that I changed that to + rather than * as I don't
>like rules that match nothing, you should use jText? instead :-)
>
>jText returns [String text]
>@init {$text = ""}
>          :
>                 (       id=(STRING | EQUALS | PIPE | SPACE)
>                  {
>                      $text = $text + $id.text;
>                  }
>                 )+
>          ;
>
>Jim


If the interest is to simply reconstruct whatever matched the rule, 
how about this:

         jText returns [String text] : (STRING | EQUALS | PIPE | 
SPACE)+ { $text=$jText.text } ;

The return value will include hidden tokens, but since the rule 
includes SPACE, that may be acceptable. 



From hjohnson at faradayco.com  Wed Jul 25 16:03:48 2007
From: hjohnson at faradayco.com (H. Johnson)
Date: Wed, 25 Jul 2007 16:03:48 -0700
Subject: [antlr-interest] Antr 3.0 and VC6?
Message-ID: <46A7D6D4.5010600@faradayco.com>

Hi,
Can Antlr 3.0 with and 'C' target be built using Visual C 6?

I used to use 2.7.3 in this configuration but it's been a while.

Thanks,

Henry


From jimi at temporal-wave.com  Wed Jul 25 15:11:20 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 15:11:20 -0700
Subject: [antlr-interest] Antr 3.0 and VC6?
In-Reply-To: <46A7D6D4.5010600@faradayco.com>
References: <46A7D6D4.5010600@faradayco.com>
Message-ID: <051466DAA0D608439E196797955018D76F27@wavemachine.temporal-wave.com>

I wrote it with VS2005 and gcc. I did check it against VC 2003 and it is
fine. It 'should' compile fine with VC6, but you will have to make your
own project for it as 2003 is as far back as I want to go, or I will
have to start wearing flares.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of H. Johnson
> Sent: Wednesday, July 25, 2007 4:04 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Antr 3.0 and VC6?
> 
> Hi,
> Can Antlr 3.0 with and 'C' target be built using Visual C 6?
> 
> I used to use 2.7.3 in this configuration but it's been a while.
> 
> Thanks,
> 
> Henry


From jimi at temporal-wave.com  Wed Jul 25 15:14:12 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 15:14:12 -0700
Subject: [antlr-interest] Antr 3.0 and VC6?
In-Reply-To: <46A7D6D4.5010600@faradayco.com>
References: <46A7D6D4.5010600@faradayco.com>
Message-ID: <051466DAA0D608439E196797955018D76F28@wavemachine.temporal-wave.com>

Just in case you are not aware of it, you can use the VS2005 Express
version probably a lot more comfortably than VC6. You can use the
generated code with VC6 and just link to the runtime library.

http://msdn.microsoft.com/vstudio/express/

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of H. Johnson
> Sent: Wednesday, July 25, 2007 4:04 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Antr 3.0 and VC6?
> 
> Hi,
> Can Antlr 3.0 with and 'C' target be built using Visual C 6?
> 
> I used to use 2.7.3 in this configuration but it's been a while.
> 
> Thanks,
> 
> Henry


From rschulz at sonic.net  Wed Jul 25 15:20:44 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 25 Jul 2007 15:20:44 -0700
Subject: [antlr-interest] found faulty network maybe
In-Reply-To: <f88fsj$cs$1@sea.gmane.org>
References: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>
	<f88fsj$cs$1@sea.gmane.org>
Message-ID: <200707251520.44975.rschulz@sonic.net>

On Wednesday 25 July 2007 14:38, Benjamin Niemann wrote:
> Terence Parr wrote:
> > The big video stalls on the antlr.org box in our "fancy" data
> > center, but works from our lowly web server (next to my office) in
> > our CS server rack apparently.  If we verify this, I'll move the
> > server. Can some people that had trouble before with antlr.org,
> > please try this download on new machine:
> >
> > http://www.cs.usfca.edu/~afedosov/Sydney-JUG-June-20-2007.mp4
> >
> > and look for stalls etc...?
>
> Looks good here. Have not downloaded it completely though, because my
> system wanted to open it in emacs, so I abort before my machine
> entered swapping-hell.

And for some reason, the "file" command on my SuSE Linux 10.0 identifies 
it as "ISO Media," which, of course, it is not. It plays fine in 
Kaffeine, though.

Perhaps we should be confirming its md5 sum?

741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4


Randall Schulz

From whalliburton at gmail.com  Wed Jul 25 16:08:46 2007
From: whalliburton at gmail.com (William Halliburton)
Date: Wed, 25 Jul 2007 19:08:46 -0400
Subject: [antlr-interest] simple question regarding type propogation
Message-ID: <4e7bd29e0707251608jed7857fn2b91034d49fd286d@mail.gmail.com>

given an AST like such and the required transformation

(+ 1 2)  -> numericalAdd(1,2)
(+ "a" "b") -> stringConcat("a",b")

this is easy for simple additions but does not work for nested additions
because the type of results are not easily distinguishable from the AST

what is needed is

(+ (+ 1 2) (+ 3 4)) -> numericalAdd(numericalAdd(1,2),numericalAdd(3,4))

is there a way to have the tree parser run down the children and propagate
the types upwards?

thank you very much,
will


simplified grammar is below.

mathOperation
options {backtrack=true;}
    : ^('+' expression stringVal) ->
stringConcat(left={$expression.st},right={$stringVal.st})
    | ^('+' expression numberVal) ->
numericaAdd(right={$numberVal.st},left={$expression.st)})
    ;
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070725/b17268ce/attachment.html 

From bsder at allcaps.org  Wed Jul 25 17:17:52 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 17:17:52 -0700
Subject: [antlr-interest] How to handle multicharacter delimiters?
Message-ID: <46A7E830.8000905@allcaps.org>

Okay, I've got gates running:

Given the following input and grammar:

$date
Fri Jan 26 11:28:51 2007
$end


grammar vcdfile2;

@lexer::members {
     boolean flgFreeText = false;
}

vcd	:	(declaration_command WS*)+ EOF;

declaration_command:	DATEK FREETEXT ENDK;

DATEK	:	'$date' {flgFreeText = true;};	
ENDK	:	'$end' {flgFreeText = false;};

FREETEXT:	{flgFreeText}?=> (~'$')+;

WS	:	(' '|'\n'|'\r'|'\t') ;
ANY	:	.;

I get a stream of tokens:
(DATEK="$date', FREETEXT="Fri Jan 26 11:28:51 2007", ENDK)


Exactly what I want.  However, if I change the input to:

$date
$ Fri Jan 26 11:28:51 2007
$end

It bombs since the '$' ceases matching FREETEXT but doesn't match a new 
token (strictly speaking, it matches ANY which then fails in the 
grammar).  Fine.  What I really want is "match any character unless it's 
part of the phrase "$end" in that order") a la:

FREETEXT:	{flgFreeText}?=> (~'$end')+;

That, of course, doesn't work.  Even with regexes, it would probably 
take one of the more advanced "lookaround" operators to pull it off.

About the only solution I can see is a combination of lexer and grammar 
rules.

grammar vcdfile2;

@lexer::members {
     boolean flgFreeText = false;
}

vcd	:	(declaration_command WS*)+ EOF;

declaration_command:	DATEK (FREETEXT | FREEDOL)* ENDK;

DATEK	:	'$date' {flgFreeText = true;};	
ENDK	:	'$end' {flgFreeText = false;};

FREETEXT:	{flgFreeText}?=> (~'$')+;
FREEDOL:	{flgFreeText}?=> '$';

WS	:	(' '|'\n'|'\r'|'\t') ;
ANY	:	.;

The FREEDOL rules gobbles up any stray '$' tokens that are not part of 
'$end' (which is larger than '$' so it matches first).  Then, it goes 
right back to FREETEXT.

Is this the only way to do this?  I still would rather have the token 
stream (DATEK, FREETEXT, ENDK), but I can probably live with the 
sequence like:

(DATEK, FREETEXT, FREEDOL, FREEDOL, FREETEXT, ENDK)

However, if there is a better way, I would love to hear it.

Thanks,
-a

From rschulz at sonic.net  Wed Jul 25 17:36:30 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Wed, 25 Jul 2007 17:36:30 -0700
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <46A7EA83.2000506@ca.com>
References: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>
	<5CE6FE74-041B-4AF5-80A6-554CDC6D9ADD@cs.usfca.edu>
	<46A7EA83.2000506@ca.com>
Message-ID: <200707251736.30268.rschulz@sonic.net>

On Wednesday 25 July 2007 17:27, you wrote:
> 208 Mb through, seems to be progessing fine ... cancelling the
> download now.

Eh? How can you watch the video if you don't download it??


RRS

From jonathan.thomas at ca.com  Wed Jul 25 17:41:14 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Thu, 26 Jul 2007 10:41:14 +1000
Subject: [antlr-interest] antlr.org back up with a new network driver
In-Reply-To: <200707251736.30268.rschulz@sonic.net>
References: <60CD50C2-BE81-413C-975E-96990F3BFF41@cs.usfca.edu>	<5CE6FE74-041B-4AF5-80A6-554CDC6D9ADD@cs.usfca.edu>	<46A7EA83.2000506@ca.com>
	<200707251736.30268.rschulz@sonic.net>
Message-ID: <46A7EDAA.9020904@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070726/73a14623/attachment.html 

From jimi at temporal-wave.com  Wed Jul 25 17:57:29 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 17:57:29 -0700
Subject: [antlr-interest] How to handle multicharacter delimiters?
In-Reply-To: <46A7E830.8000905@allcaps.org>
References: <46A7E830.8000905@allcaps.org>
Message-ID: <051466DAA0D608439E196797955018D76F29@wavemachine.temporal-wave.com>

FREETEXT:	{flgFreeText}?=> ( { ! (LA(1) == '$' && LA(2) == 'e' && LA(3) == 'n' && LA(4) == 'd') }?=> .)+;

Should do it I think?

Jim 

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Andrew Lentvorski
> Sent: Wednesday, July 25, 2007 5:18 PM
> To: antlr-interest Interest


> It bombs since the '$' ceases matching FREETEXT but doesn't match a new
> token (strictly speaking, it matches ANY which then fails in the
> grammar).  Fine.  What I really want is "match any character unless
> it's
> part of the phrase "$end" in that order") a la:


From bsder at allcaps.org  Wed Jul 25 18:32:34 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 18:32:34 -0700
Subject: [antlr-interest] How to handle multicharacter delimiters?
In-Reply-To: <051466DAA0D608439E196797955018D76F29@wavemachine.temporal-wave.com>
References: <46A7E830.8000905@allcaps.org>
	<051466DAA0D608439E196797955018D76F29@wavemachine.temporal-wave.com>
Message-ID: <46A7F9B2.1040302@allcaps.org>

Jim Idle wrote:
> FREETEXT:	{flgFreeText}?=> ( { ! (LA(1) == '$' && LA(2) == 'e' && LA(3) == 'n' && LA(4) == 'd') }?=> .)+;
> 
> Should do it I think?

WHOA!  That rocks.  I need to go check that out.

However, it doesn't compile.

I get:
vcdfile2Lexer.java:82: cannot find symbol
symbol  : method LA(int)
location: class vcdfile2Lexer
                if ( ((LA1_0>='\u0000' && LA1_0<='\uFFFE')) && ( ! (LA(1) == '$' && LA(2) == 'e' && LA(3) == 'n' && LA(4) == 'd') )) {


I'm using the grammar:

grammar vcdfile2;

@lexer::members {
    boolean flgFreeText = false;
}

vcd	:	(declaration_command WS*)+ EOF;

declaration_command:	DATEK FREETEXT ENDK;

DATEK	:	'$date' {flgFreeText = true;};	
ENDK	:	'$end' {flgFreeText = false;};

FREETEXT:	{flgFreeText}?=> ( { ! (LA(1) == '$' && LA(2) == 'e' && LA(3) == 'n' && LA(4) == 'd') }?=> .)+;

WS	:	(' '|'\n'|'\r'|'\t') ;
ANY	:	.;


-a

From bsder at allcaps.org  Wed Jul 25 18:36:33 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Wed, 25 Jul 2007 18:36:33 -0700
Subject: [antlr-interest] How to handle multicharacter delimiters?
In-Reply-To: <46A7F9B2.1040302@allcaps.org>
References: <46A7E830.8000905@allcaps.org>	<051466DAA0D608439E196797955018D76F29@wavemachine.temporal-wave.com>
	<46A7F9B2.1040302@allcaps.org>
Message-ID: <46A7FAA1.6080105@allcaps.org>

Andrew Lentvorski wrote:
> Jim Idle wrote:
>> FREETEXT:    {flgFreeText}?=> ( { ! (LA(1) == '$' && LA(2) == 'e' && 
>> LA(3) == 'n' && LA(4) == 'd') }?=> .)+;
>>
>> Should do it I think?
> 
> WHOA!  That rocks.  I need to go check that out.

Got it.

FREETEXT:	{flgFreeText}?=> ( { ! (input.LA(1) == '$' && input.LA(2) == 'e' && input.LA(3) == 'n' && input.LA(4) == 'd') }?=> .)+;

Where is that documented?  Is that in TDAR?

Thanks,
-a

From jimi at temporal-wave.com  Wed Jul 25 18:40:49 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2007 18:40:49 -0700
Subject: [antlr-interest] How to handle multicharacter delimiters?
In-Reply-To: <46A7F9B2.1040302@allcaps.org>
References: <46A7E830.8000905@allcaps.org>
	<051466DAA0D608439E196797955018D76F29@wavemachine.temporal-wave.com>
	<46A7F9B2.1040302@allcaps.org>
Message-ID: <051466DAA0D608439E196797955018D76F2A@wavemachine.temporal-wave.com>

I see you sorted this out, but for clarification for others, in the C target you use LA(nnn) and in Java input.LA(nnn). I forgot what language I was in ;-)

Jim 

> -----Original Message-----
> From: Andrew Lentvorski [mailto:bsder at allcaps.org]
> 
> Jim Idle wrote:
> > FREETEXT:	{flgFreeText}?=> ( { ! (LA(1) == '$' && LA(2) == 'e' &&
> LA(3) == 'n' && LA(4) == 'd') }?=> .)+;
> >
> > Should do it I think?
> 
> WHOA!  That rocks.  I need to go check that out.
> 
> However, it doesn't compile.
> 
> I get:
> vcdfile2Lexer.java:82: cannot find symbol
> symbol  : method LA(int)
> location: class vcdfile2Lexer
>                 if ( ((LA1_0>='\u0000' && LA1_0<='\uFFFE')) && ( !
> (LA(1) == '$' && LA(2) == 'e' && LA(3) == 'n' && LA(4) == 'd') )) {


From ted.villalba at gmail.com  Wed Jul 25 20:37:42 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Wed, 25 Jul 2007 20:37:42 -0700
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <46a7c098.04e9300a.1870.ffffd738SMTPIN_ADDED@mx.google.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
	<ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
	<69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>
	<ebc876d70707250252n657c7cfbs6fbe0a25225a2b1a@mail.gmail.com>
	<69fb4b090707250952u42e9473die7576b8855772cbb@mail.gmail.com>
	<46a7c098.04e9300a.1870.ffffd738SMTPIN_ADDED@mx.google.com>
Message-ID: <69fb4b090707252037h72c40dc2ie5ae77d6d3031bb7@mail.gmail.com>

Thanks for the input Gavin.

I'm still finding that no matter how I tweak the parser rules, it's really
the order of the lexer rules that determine how a token is evaluated,
semantic predicates be damned.

It seems if I have more than one lexer rule that share a common token, then
the rule that comes first wins all the time.

My objective is to allow the term NEAR to be entered as a boolean, except if
it begins or ends a sequence of  terms, then recognize it as a WCHAR.
TAG=APPLES NEAR ORANGES //this should parse NEAR as an OP
TAG=NEAR APPLES ORANGES//this should treat it as a WCHAR

Here is my simplified grammar. Is it easy enough for someone to recognize
the changes that need to be made to this grammar to meet that objective?
Sorry if I'm just not getting it, this has been a challenging exercise.

grammar WQL;

options{
   output=AST;
   ASTLabelType=CommonTree;
}


query :  tag '=' terms ;

tag    : WCHAR ;

terms  : WCHAR+  (OP^ WCHAR+)*  ;

OP    : 'NEAR'|'near';
WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;



Thank you,
Ted


On 7/25/07, Gavin Lambert <antlr at mirality.co.nz> wrote:
>
> At 04:52 26/07/2007, Ted Villalba wrote:
> >The major difference between our grammars is yours does not have
> >any lexer rules for the operator NEAR, so there is no conflict.
> >Adding the BOOL_OP lexer rule back in breaks that example.
> [...]
> >query :  tag '=' keyBOOL terms+
> >       ;
> >
> >terms  : WCHAR+
> >        ;
> >
> >tag    : WCHAR
> >        ;
> >
> >keyBOOL: near
> >        ;
> >
> >near:   {input.LT(1).getText().toLowerCase().equals("near")}?
> >WCHAR
> >        ;
> >
> >BOOL_OP :  'NEAR'; //comment this out to get working
> >WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
> >WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
>
> I think you need to make your parser more lenient.
>
> 1. Rename 'BOOL_OP' to 'NEAR', and don't add any other keywords to
> it -- give those their own separate lexer rules.
>
> 2. Create a parser rule 'bool_op' that accepts NEAR.
>
> 3. Remove 'terms' because it's pointless (you've already got
> 'multiple characters' at the lexing level, and 'multiple terms' at
> the 'query' level).
>
> 4. Remove the 'near' rule and the 'keyBOOL' rule (since you've got
> 'bool_op' now).
>
> 5. Wherever a bool_op can be used in a non-keyword context, add it
> as an alternative.  Presumably, this means changing 'tag' to
> "WCHAR | bool_op".
>
> You'll still end up with a NEAR token output, not a WCHAR, but it
> should match now.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070725/5a90137b/attachment.html 

From rdclark at gmail.com  Wed Jul 25 23:09:50 2007
From: rdclark at gmail.com (Richard Clark)
Date: Wed, 25 Jul 2007 23:09:50 -0700
Subject: [antlr-interest] ANTLR for syntax-directed editors
In-Reply-To: <46A67125.3090202@topquadrant.com>
References: <46A67125.3090202@topquadrant.com>
Message-ID: <d3992d900707252309m2798e58dh1bfe666f5b459ab8@mail.gmail.com>

I experimented with this with ANTLR 2.x and stuck it on the back
burner when it was going to be too hard to get true syntax
information. I got as far as using the lexer to perform syntax
coloring of the text.

However, with ANTLR 3, I've thought about building a code generation
template that makes the lexer and parser emit data for the editor. But
I haven't done it yet (too many projects have a higher priority.)

By the way, ANTLR hated it when I provided a partial line of input
without a proper EOF marker. I had to write a custom input buffer that
provided the EOF for me.

 ...Richard

From tbrandonau at gmail.com  Wed Jul 25 23:51:01 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Thu, 26 Jul 2007 16:51:01 +1000
Subject: [antlr-interest] Help controlling parser decisions
In-Reply-To: <69fb4b090707252037h72c40dc2ie5ae77d6d3031bb7@mail.gmail.com>
References: <69fb4b090707241056i78506aads2295c80886ac44c7@mail.gmail.com>
	<ebc876d70707241103s5ff04a77p9c017431c2a1be6@mail.gmail.com>
	<69fb4b090707241619w4f85e3a0v16e75a3467d4707d@mail.gmail.com>
	<ebc876d70707250252n657c7cfbs6fbe0a25225a2b1a@mail.gmail.com>
	<69fb4b090707250952u42e9473die7576b8855772cbb@mail.gmail.com>
	<46a7c098.04e9300a.1870.ffffd738SMTPIN_ADDED@mx.google.com>
	<69fb4b090707252037h72c40dc2ie5ae77d6d3031bb7@mail.gmail.com>
Message-ID: <ebc876d70707252351u1503c7edga7c7923db7a3f423@mail.gmail.com>

On 7/26/07, Ted Villalba <ted.villalba at gmail.com> wrote:
> Thanks for the input Gavin.
>
> I'm still finding that no matter how I tweak the parser rules, it's really
> the order of the lexer rules that determine how a token is evaluated,
> semantic predicates be damned.
>
> It seems if I have more than one lexer rule that share a common token, then
> the rule that comes first wins all the time.
Yes, lexing is independent of parsing. How a lexer rule features in
the parser has no influence on how it matches in the lexer.
>
> My objective is to allow the term NEAR to be entered as a boolean, except if
> it begins or ends a sequence of  terms, then recognize it as a WCHAR.
> TAG=APPLES NEAR ORANGES //this should parse NEAR as an OP
> TAG=NEAR APPLES ORANGES//this should treat it as a WCHAR
>
There are two options, you can either recognise keywords (e.g. near)
as identifiers (WCHAR in your case) in the lexer and then use a
predicate in the parser to check the text of identifier tokens to see
if they are keywords. This is the option I gave code for before. You
do not have lexer rules for your keywords in this case. So you want
something like:
grammar WQL;
options{
   output=AST;
   ASTLabelType=CommonTree;
}

tokens {
	NEAR;
	FAR;
}

query :  tag '=' terms ;

tag    : WCHAR ;

terms
	:	WCHAR
		(	(op WCHAR)=>(op^ terms)
		|	WCHAR terms
		)?
	;

op: near|far;

near
    : {input.LT(1).getText().toLowerCase().equals("near")}? w=WCHAR
{$w.setType(NEAR);}
    ;

far
    : {input.LT(1).getText().toLowerCase().equals("far")}? w=WCHAR
{$w.setType(FAR);}
    ;

WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

Add rules like near and far for each keyword and use them instead of
lexer rules.

Or the other alternative, as Gavin presented, is to match keywords in
the lexer and have a parser rule that accepts keywords as well as
identifiers and use this when keywords are allowed. So, you'd have
something like:
grammar WQL;
options{
   output=AST;
   ASTLabelType=CommonTree;
}

query :  tag '=' terms ;

tag    : WCHAR ;

terms
	:	term
		(	(op term)=>(op^ terms)
		|	term terms
		)?
	;

term:	t=(WCHAR|NEAR|FAR) { $t.setType(WCHAR); };
op: NEAR|FAR;

NEAR:	'NEAR';
FAR	:	'FAR';
WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;

So, instead of using WCHAR you use term.

The setType actions in both mean that tree parsers need not deal with the issue.

Which method you use is a matter of preference. The second option
probably performs better, not requiring a semantic predicate, but
requires you to make multiple changes to add keywords.

Note that this grammar doesn't necessarily do quite what you want due
to the predicate in terms. Something like "TAG=APPLES NEAR NEAR" will
give an error as it will match the second NEAR as an operator and want
some more terms for it. Here your language is somewhat ambiguous.
Given input such as "TAG=NEAR NEAR NEAR NEAR" what should happen?
Which NEAR's are operators and which are WCHARS? But the basic stuff
of handling keywords as identifiers is there.

Tom.
> Here is my simplified grammar. Is it easy enough for someone to recognize
> the changes that need to be made to this grammar to meet that objective?
> Sorry if I'm just not getting it, this has been a challenging exercise.
>
> grammar WQL;
>
> options{
>    output=AST;
>    ASTLabelType=CommonTree;
> }
>
>
> query :  tag '=' terms ;
>
> tag    : WCHAR ;
>
> terms  : WCHAR+  (OP^ WCHAR+)*  ;
>
> OP    : 'NEAR'|'near';
> WS      : (' '|'\t'|'\r'|'\n')+ {skip();};
> WCHAR   : ~('='|'('| ')'|'"'|' '|'\t'|'\n'|'\r'|'#')+;
>
>
>
> Thank you,
> Ted
>
>

From pink at odahoda.de  Thu Jul 26 00:45:19 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 26 Jul 2007 09:45:19 +0200
Subject: [antlr-interest] found faulty network maybe
References: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>
	<f88fsj$cs$1@sea.gmane.org> <200707251520.44975.rschulz@sonic.net>
Message-ID: <f89jef$nvg$1@sea.gmane.org>

Randall R Schulz wrote:

> On Wednesday 25 July 2007 14:38, Benjamin Niemann wrote:
>> Terence Parr wrote:
>> > The big video stalls on the antlr.org box in our "fancy" data
>> > center, but works from our lowly web server (next to my office) in
>> > our CS server rack apparently.  If we verify this, I'll move the
>> > server. Can some people that had trouble before with antlr.org,
>> > please try this download on new machine:
>> >
>> > http://www.cs.usfca.edu/~afedosov/Sydney-JUG-June-20-2007.mp4
>> >
>> > and look for stalls etc...?
>>
>> Looks good here. Have not downloaded it completely though, because my
>> system wanted to open it in emacs, so I abort before my machine
>> entered swapping-hell.
> 
> And for some reason, the "file" command on my SuSE Linux 10.0 identifies
> it as "ISO Media," which, of course, it is not. It plays fine in
> Kaffeine, though.
> 
> Perhaps we should be confirming its md5 sum?
> 
> 741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4

pink at bateau:/home/download$ md5sum Sydney-JUG-June-20-2007.mp4
741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4
pink at bateau:/home/download$ file Sydney-JUG-June-20-2007.mp4
Sydney-JUG-June-20-2007.mp4: ISO Media, MPEG v4 system, iTunes AVC-LC

Emacs is used, because that test server sends 
  Content-Type: text/plain; charset=UTF-8

-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From a.shneyderman at gmail.com  Thu Jul 26 03:11:32 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Thu, 26 Jul 2007 12:11:32 +0200
Subject: [antlr-interest] Is there a way to fast fail the Lexer errors?
Message-ID: <693a69ba0707260311v59e93fe5tb49bf6967a3f5d71@mail.gmail.com>

In ANTLR book there is a description of how to do it for parser but
same technique does not seem to apply for lexer. Any other way to do
it?

-- 
Thanks,
Alex.

From rschulz at sonic.net  Thu Jul 26 06:37:23 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Thu, 26 Jul 2007 06:37:23 -0700
Subject: [antlr-interest] found faulty network maybe
In-Reply-To: <f89jef$nvg$1@sea.gmane.org>
References: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>
	<200707251520.44975.rschulz@sonic.net> <f89jef$nvg$1@sea.gmane.org>
Message-ID: <200707260637.23483.rschulz@sonic.net>

On Thursday 26 July 2007 00:45, Benjamin Niemann wrote:
> Randall R Schulz wrote:
> > ...
> >
> > And for some reason, the "file" command on my SuSE Linux 10.0
> > identifies it as "ISO Media," which, of course, it is not. It plays
> > fine in Kaffeine, though.
> >
> > Perhaps we should be confirming its md5 sum?
> >
> > 741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4
>
> pink at bateau:/home/download$ md5sum Sydney-JUG-June-20-2007.mp4
> 741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4

Well, since you and I almost certainly retrieved the exact same bytes, 
that at least is a good sign.


> pink at bateau:/home/download$ file Sydney-JUG-June-20-2007.mp4
> Sydney-JUG-June-20-2007.mp4: ISO Media, MPEG v4 system, iTunes AVC-LC

What OS are you running? Mac OS X? It clearly knows more about the 
variations of the file type than my SuSE Linux 10.0's file signature 
database knows.


> Emacs is used, because that test server sends
>   Content-Type: text/plain; charset=UTF-8

Now that's gross! While Ter's getting servers repaired, that should be 
fixed, too. (Bad MIME type reporting is a minor pet peeve of mine.)


Randall Schulz

From mitchellch at comcast.net  Thu Jul 26 09:09:45 2007
From: mitchellch at comcast.net (mitchellch)
Date: Thu, 26 Jul 2007 09:09:45 -0700
Subject: [antlr-interest] Left recursion
Message-ID: <000601c7cf9f$686779b0$170210ac@us.packetmotion.com>

I feel like there must be an obvious answer for this one, but I can't find
it in the book or on the site.

 

Given that ANTLR doesn't support left-recursion, how do I specify a grammar
for arbitrarily nested blocks?

 

For example,

 

void method() {

            { /* nested block */

                        { /* nested block */

                                    double-nested-statement;

                        }

                        nested-statement;

            }

            unnested-statement;

}

 

-Mitch Christensen

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070726/515c01eb/attachment.html 

From tbrandonau at gmail.com  Thu Jul 26 09:27:04 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Fri, 27 Jul 2007 02:27:04 +1000
Subject: [antlr-interest] Left recursion
In-Reply-To: <000601c7cf9f$686779b0$170210ac@us.packetmotion.com>
References: <000601c7cf9f$686779b0$170210ac@us.packetmotion.com>
Message-ID: <ebc876d70707260927u776689d3t23e86bae98bbc736@mail.gmail.com>

On 7/27/07, mitchellch <mitchellch at comcast.net> wrote:
> I feel like there must be an obvious answer for this one, but I can't find
> it in the book or on the site.
>
> Given that ANTLR doesn't support left-recursion, how do I specify a grammar
> for arbitrarily nested blocks?
Modified from cminus example:
block
    :  '{'
       ( stat )*
       '}'
    ;

stat
    : forStat
    | expr ';'
    | block
    | assignStat ';'
    | ';'
    ;

Tom.
>
>
>
> For example,
>
>
>
> void method() {
>
>             { /* nested block */
>
>                         { /* nested block */
>
>
> double-nested-statement;
>
>                         }
>
>                         nested-statement;
>
>             }
>
>             unnested-statement;
>
> }
>
>
>
> -Mitch Christensen

From pink at odahoda.de  Thu Jul 26 10:41:07 2007
From: pink at odahoda.de (Benjamin Niemann)
Date: Thu, 26 Jul 2007 19:41:07 +0200
Subject: [antlr-interest] found faulty network maybe
References: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>
	<200707251520.44975.rschulz@sonic.net> <f89jef$nvg$1@sea.gmane.org>
	<200707260637.23483.rschulz@sonic.net>
Message-ID: <f8ambj$lvl$1@sea.gmane.org>

Randall R Schulz wrote:

> On Thursday 26 July 2007 00:45, Benjamin Niemann wrote:
>> Randall R Schulz wrote:
>> > ...
>> >
>> > And for some reason, the "file" command on my SuSE Linux 10.0
>> > identifies it as "ISO Media," which, of course, it is not. It plays
>> > fine in Kaffeine, though.
>> >
>> > Perhaps we should be confirming its md5 sum?
>> >
>> > 741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4
>>
>> pink at bateau:/home/download$ md5sum Sydney-JUG-June-20-2007.mp4
>> 741bc005996d5400fea002857a2d9eaf  Sydney-JUG-June-20-2007.mp4
> 
> Well, since you and I almost certainly retrieved the exact same bytes,
> that at least is a good sign.
> 
> 
>> pink at bateau:/home/download$ file Sydney-JUG-June-20-2007.mp4
>> Sydney-JUG-June-20-2007.mp4: ISO Media, MPEG v4 system, iTunes AVC-LC
> 
> What OS are you running? Mac OS X? It clearly knows more about the
> variations of the file type than my SuSE Linux 10.0's file signature
> database knows.

Debian/Sid

$ file --version
file-4.21
magic file from /etc/magic:/usr/share/file/magic

>> Emacs is used, because that test server sends
>>   Content-Type: text/plain; charset=UTF-8
> 
> Now that's gross! While Ter's getting servers repaired, that should be
> fixed, too. (Bad MIME type reporting is a minor pet peeve of mine.)

I think, that URL is just supposed as a test of the network. But the
antlr.org server does not even set a Content-Type at all. Not *that's*
gross! ;)


-- 
Benjamin Niemann
Email: pink at odahoda dot de
WWW: http://pink.odahoda.de/


From benji at benjismith.net  Thu Jul 26 11:20:37 2007
From: benji at benjismith.net (Benji Smith)
Date: Thu, 26 Jul 2007 14:20:37 -0400
Subject: [antlr-interest] Left recursion
In-Reply-To: <ebc876d70707260927u776689d3t23e86bae98bbc736@mail.gmail.com>
References: <000601c7cf9f$686779b0$170210ac@us.packetmotion.com>
	<ebc876d70707260927u776689d3t23e86bae98bbc736@mail.gmail.com>
Message-ID: <b46e0d5e0707261120w5c0bae93la6f93c832b24242e@mail.gmail.com>

Nesting of blocks is done through *right* recursion, not left recursion.

Left-recursion looks like this:

A : ( A )* B ;

Whereas right-recursion looks more like this:

A : B ( A )* ;

Since every statement block must begin and end with a curly brace, its
definition avoids left-recursion.

--benji


On 7/26/07, Thomas Brandon <tbrandonau at gmail.com> wrote:
> On 7/27/07, mitchellch <mitchellch at comcast.net> wrote:
> > I feel like there must be an obvious answer for this one, but I can't find
> > it in the book or on the site.
> >
> > Given that ANTLR doesn't support left-recursion, how do I specify a grammar
> > for arbitrarily nested blocks?
> Modified from cminus example:
> block
>     :  '{'
>        ( stat )*
>        '}'
>     ;
>
> stat
>     : forStat
>     | expr ';'
>     | block
>     | assignStat ';'
>     | ';'
>     ;
>
> Tom.
> >
> >
> >
> > For example,
> >
> >
> >
> > void method() {
> >
> >             { /* nested block */
> >
> >                         { /* nested block */
> >
> >
> > double-nested-statement;
> >
> >                         }
> >
> >                         nested-statement;
> >
> >             }
> >
> >             unnested-statement;
> >
> > }
> >
> >
> >
> > -Mitch Christensen
>

From parrt at cs.usfca.edu  Thu Jul 26 13:37:05 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 26 Jul 2007 13:37:05 -0700
Subject: [antlr-interest] hetero tree construction :)
Message-ID: <C2EEA1B6-9933-4512-9305-EE9149C5782C@cs.usfca.edu>

got it working :)

http://www.antlr.org/wiki/display/~admin/2007/07/26/Heterogeneous+AST 
+node+types

Ter

From kurtharriger at comcast.net  Thu Jul 26 15:55:23 2007
From: kurtharriger at comcast.net (Kurt Harriger)
Date: Thu, 26 Jul 2007 16:55:23 -0600
Subject: [antlr-interest] language independant grammars
Message-ID: <002c01c7cfd8$0d1fc560$275f5020$@net>

I've always disliked embedding code into non-code files, in this case
grammars.   IDE's don't usually know how to interpret these source files so
you lose out on all the productivity features such as syntax validation,
intellisense, refactoring and  testing tools, and it complicates the build
process.  For starters, I have the actions delegate as much as they can to a
helper class that I added as a property on the parser to  minimize the
amount of code stored in the grammars and make testing easier.

 

One of the other things I found a bit difficult to deal with is testing
grammars for C# using AntlrWorks.  Before adding actions to the grammar file
I just needed to change the language to Java for testing and then back to
CSharp before building.  This bit me a few times when I forgot to change it
back to CSharp after testing and would take awhile before I realized that
the resulting binary was using a old version of the grammar.  I updated my
build scripts to delete the old files before running antlr to ensure build
would fail if I forgot to change the language back, but once I started
adding code to the grammar I could no longer use AntlrWorks directly.  So I
kept a version without the action code and then began copying and pasting
changes, but this wouldn't really work if you needed to implement a
predicate in code.  I saw something about using the remote debugger but
haven't really tried it yet.  

 

One thought that occurred to me was using StringTemplate to generate
different grammars for each language, which I suppose would work but ideally
I think it would be great if there was a language independent way of
invoking actions and predicates.  Rather than actually implementing the
action in the grammar you would implement a class it in your target language
and simply tell antlr the method name to invoke, stuffing the local vars
into a map/hashtable or something, additionally the parser wouldn't need to
worry about the action changing internal variables, just don't pass them
along to be changed.  By delegating to an object provided during creation
one could perhaps even use the same grammar to perform completely different
tasks using the same grammar.

 

I was also wondering how difficult it might be to collapse the switch and
if/else logic into an object and the rule would just ask it to predict the
alternative and then invoke the action for that alternative if any.  I'm
guessing some object representation probably must already exist in the tool
to generate the code in the first place.  If all the code generation could
be reduced to simply creating object instances rather than generating
language specific code it may become possible to actually create a
lexer/parser at runtime rather than compile time.  Regular expressions, for
example, are widely used for simple lexers and input validations and I think
a big part of the reason is that there isn't any need to complicate the
build process with a regular expression parser generator and you can use
them in sandboxed environments such as an internet browser.  What might one
use a runtime parser for anyway?  AntlrWorks perhaps for starters!  But also
for batch file processing  and documentation generators; there are so many
different file formats for the same basic bits of data that businesses often
write numerous programs that simply translate one file format into another,
and documentation generators should be more concerned with generating good
quality output rather than trying to create parsers for every potential
language they want to support.  These tools might allow the users to
redefine the definition of certain grammar elements (since token names would
obviously be important to the consumer it might not allow you to edit the
entire grammar, but they  could perhaps allow changes to the rule
definitions and perhaps the addition of new tokens and/or fragments) .  For
more complex customization where predicates and actions might need to be
implemented the user might create a jar or assembly file the program can
load at runtime.

 

Thoughts?

 

- Kurt

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070726/3612826d/attachment.html 

From jonathan.thomas at ca.com  Thu Jul 26 16:34:53 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Fri, 27 Jul 2007 09:34:53 +1000
Subject: [antlr-interest] found faulty network maybe
In-Reply-To: <f8ambj$lvl$1@sea.gmane.org>
References: <3B0ACEEF-7FB3-4883-95A9-38B9A2B8E654@cs.usfca.edu>	<200707251520.44975.rschulz@sonic.net>
	<f89jef$nvg$1@sea.gmane.org>	<200707260637.23483.rschulz@sonic.net>
	<f8ambj$lvl$1@sea.gmane.org>
Message-ID: <46A92F9D.2060401@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070727/3fba227f/attachment.html 

From bsder at allcaps.org  Thu Jul 26 17:53:03 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Thu, 26 Jul 2007 17:53:03 -0700
Subject: [antlr-interest] How do I fix "code too large" errors?
Message-ID: <46A941EF.6040105@allcaps.org>

Yes, I know that this is a Java error, but one does not need a huge 
grammar to hit this.

I tried the -Xnoinlinedfa switch, but that didn't help.

I realize that a 64K bytecode limit is brain damage, but we seem to be 
stuck with that.

How do I work around this?

-a

From bsder at allcaps.org  Thu Jul 26 19:33:05 2007
From: bsder at allcaps.org (Andrew Lentvorski)
Date: Thu, 26 Jul 2007 19:33:05 -0700
Subject: [antlr-interest] How do I fix "code too large" errors?
In-Reply-To: <46A941EF.6040105@allcaps.org>
References: <46A941EF.6040105@allcaps.org>
Message-ID: <46A95961.2040006@allcaps.org>

Andrew Lentvorski wrote:
> Yes, I know that this is a Java error, but one does not need a huge 
> grammar to hit this.

Here's the grammar that causes the problem.  I put comments at the
FREETEXT lines which create the overflow in the lexer.

Any advice would be appreciated.

Thanks,
-a


grammar vcdfile2;

@lexer::members {
    boolean flgSimCommand = false;
    boolean flgFreeText = false;
    boolean flgNWSFreeText = false;
}

vcd	:	(declaration_command WS*)+ (simulation_command WS*)+ EOF;

simulation_command:	dumpvars_scmd | dumpoff_scmd | dumpon_scmd | SIMTIME | value_change;

value_change:	(VECTORT WS+ NWSFREETEXT) | (SCALART NWSFREETEXT);

dumpvars_scmd:	DUMPVARSK value_change+ ENDK;
dumpoff_scmd:	DUMPOFFK value_change+ ENDK;
dumpon_scmd:	DUMPONK value_change+ ENDK;

DUMPVARSK:	'$dumpvars';
DUMPOFFK:	'$dumpoff';
DUMPONK:	'$dumpon';

SIMTIME:	{flgSimCommand}?=> '#' ('0'..'9')+;
VECTORT:	{flgSimCommand}?=> 'b' ('0' | '1' | 'x' | 'X' | 'z' | 'Z')+ {flgNWSFreeText = true;};
SCALART:	{flgSimCommand}?=> ('0' | '1' | 'x' | 'X' | 'z' | 'Z') {flgNWSFreeText = true;};

declaration_command:	comment_dcmd | date_dcmd | enddef_dcmd | scope_dcmd | upscope_dcmd | var_dcmd | version_dcmd | timescale_dcmd ;

comment_dcmd:	COMMENTK FREETEXT ENDK;
date_dcmd:	DATEK FREETEXT ENDK;
enddef_dcmd:	ENDDEFK WS* ENDK;
scope_dcmd:	SCOPEK FREETEXT ENDK;
timescale_dcmd:	TIMESCALEK FREETEXT ENDK;
upscope_dcmd:	UPSCOPEK WS* ENDK;
var_dcmd:	VARK FREETEXT ENDK;
version_dcmd:	VERSIONK FREETEXT ENDK;
	

COMMENTK:	'$comment' {flgFreeText = true;};

DATEK	:	'$date' {flgFreeText = true;};
ENDDEFK	:	'$enddefinitions' {flgSimCommand = true;};
SCOPEK	:	'$scope' {flgFreeText = true;};
TIMESCALEK:	'$timescale' {flgFreeText = true;};
UPSCOPEK:	'$upscope';
VARK	:	'$var' {flgFreeText = true;};
VERSIONK:	'$version' {flgFreeText = true;};

ENDK	:	'$end';

/* The uncommented FREETEXT line below causes the lexer to blow through its limits */
FREETEXT:	{flgFreeText}?=> ( { ! (input.LA(1) == '$' && input.LA(2) == 'e' && input.LA(3) == 'n' && input.LA(4) == 'd') }?=> .)+;
/* This commented FREETEXT line below, however, does not hit the limits */
//FREETEXT:	{flgFreeText}?=> (~'$')+ {flgFreeText = false;};

NWSFREETEXT:	{flgNWSFreeText}?=> (~WS)+ {flgNWSFreeText=false;};

WS	:	(' '|'\n'|'\r'|'\t') ;
ANY	:	.;

From lgcraymer at yahoo.com  Fri Jul 27 00:18:30 2007
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 27 Jul 2007 00:18:30 -0700 (PDT)
Subject: [antlr-interest] language independant grammars
In-Reply-To: <002c01c7cfd8$0d1fc560$275f5020$@net>
Message-ID: <31982.82562.qm@web55915.mail.re3.yahoo.com>

See
http://www.antlr.org/share/1160261701017/yggdrasil.pdf
I've been incredibly busy the past several months, but
am now back in a position where I have time and
research funding.  I should have a current version
posted to sourceforge soon; I am in the process of
finishing a v2 to Yggdrasil translator (includes
template conversion of v2 actions).

--Loring


--- Kurt Harriger <kurtharriger at comcast.net> wrote:

> I've always disliked embedding code into non-code
> files, in this case
> grammars.   IDE's don't usually know how to
> interpret these source files so
> you lose out on all the productivity features such
> as syntax validation,
> intellisense, refactoring and  testing tools, and it
> complicates the build
> process.  For starters, I have the actions delegate
> as much as they can to a
> helper class that I added as a property on the
> parser to  minimize the
> amount of code stored in the grammars and make
> testing easier.
> 
>  
> 
> One of the other things I found a bit difficult to
> deal with is testing
> grammars for C# using AntlrWorks.  Before adding
> actions to the grammar file
> I just needed to change the language to Java for
> testing and then back to
> CSharp before building.  This bit me a few times
> when I forgot to change it
> back to CSharp after testing and would take awhile
> before I realized that
> the resulting binary was using a old version of the
> grammar.  I updated my
> build scripts to delete the old files before running
> antlr to ensure build
> would fail if I forgot to change the language back,
> but once I started
> adding code to the grammar I could no longer use
> AntlrWorks directly.  So I
> kept a version without the action code and then
> began copying and pasting
> changes, but this wouldn't really work if you needed
> to implement a
> predicate in code.  I saw something about using the
> remote debugger but
> haven't really tried it yet.  
> 
>  
> 
> One thought that occurred to me was using
> StringTemplate to generate
> different grammars for each language, which I
> suppose would work but ideally
> I think it would be great if there was a language
> independent way of
> invoking actions and predicates.  Rather than
> actually implementing the
> action in the grammar you would implement a class it
> in your target language
> and simply tell antlr the method name to invoke,
> stuffing the local vars
> into a map/hashtable or something, additionally the
> parser wouldn't need to
> worry about the action changing internal variables,
> just don't pass them
> along to be changed.  By delegating to an object
> provided during creation
> one could perhaps even use the same grammar to
> perform completely different
> tasks using the same grammar.
> 
>  
> 
> I was also wondering how difficult it might be to
> collapse the switch and
> if/else logic into an object and the rule would just
> ask it to predict the
> alternative and then invoke the action for that
> alternative if any.  I'm
> guessing some object representation probably must
> already exist in the tool
> to generate the code in the first place.  If all the
> code generation could
> be reduced to simply creating object instances
> rather than generating
> language specific code it may become possible to
> actually create a
> lexer/parser at runtime rather than compile time. 
> Regular expressions, for
> example, are widely used for simple lexers and input
> validations and I think
> a big part of the reason is that there isn't any
> need to complicate the
> build process with a regular expression parser
> generator and you can use
> them in sandboxed environments such as an internet
> browser.  What might one
> use a runtime parser for anyway?  AntlrWorks perhaps
> for starters!  But also
> for batch file processing  and documentation
> generators; there are so many
> different file formats for the same basic bits of
> data that businesses often
> write numerous programs that simply translate one
> file format into another,
> and documentation generators should be more
> concerned with generating good
> quality output rather than trying to create parsers
> for every potential
> language they want to support.  These tools might
> allow the users to
> redefine the definition of certain grammar elements
> (since token names would
> obviously be important to the consumer it might not
> allow you to edit the
> entire grammar, but they  could perhaps allow
> changes to the rule
> definitions and perhaps the addition of new tokens
> and/or fragments) .  For
> more complex customization where predicates and
> actions might need to be
> implemented the user might create a jar or assembly
> file the program can
> load at runtime.
> 
>  
> 
> Thoughts?
> 
>  
> 
> - Kurt
> 
>  
> 
>  
> 
> 



       
____________________________________________________________________________________
Got a little couch potato? 
Check out fun summer activities for kids.
http://search.yahoo.com/search?fr=oni_on_mail&p=summer+activities+for+kids&cs=bz 

From ruth.karl at gmx.de  Fri Jul 27 06:45:11 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Fri, 27 Jul 2007 15:45:11 +0200
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <46A9E770.5080102@allcaps.org>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
	<46A7A471.5050102@gmx.de> <46A7B290.2060008@allcaps.org>
	<46A8485A.40108@gmx.de> <46A9E770.5080102@allcaps.org>
Message-ID: <46A9F6E7.7050806@gmx.de>

Hi Andrew,

thanks a lot for finding a smaller example to illustrate the problem.
(Did you do it for java target or for c# - as I did?)

Now: what can I do?
I could (...) try to find a workaround in my grammar, but if it IS a bug 
- than a similar thing might happen in other cases as well....

Thanks for any further suggestions,

Ruth


Andrew Lentvorski schrieb:
> Ruth Karl wrote:
>> Thanks, but I looked at it several times (even before I ever wrote to 
>> this list) and still I can not see why when I start an input with 
>> with '<sx' the lexer should loose itself in a rule wanting '<script' 
>> as an input. (given the grammar I attached in my last posting).
>> Any other suggestions?
>
> Looks like a bug to me:
>
> grammar jsp;
>
> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )* 
> '</script>' {System.out.print("J");};   
> ANY    :    . {System.out.print("A");};
>
> jsp        :    (ANY | JAVASCRIPT)* EOF;
>
> with input:
>
> <script>foo</script>
> <s>bar</s>
>
>
> Produces a token stream of:
> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
>
> aka
>
> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
>
> Something vacuums up the "<s>b"
>
> The output is:
> line 2:2 mismatched character '>' expecting 'c'
> JAAAAAAAA
>
> You might want to file it and see what the response is.
>
> -a
>

From ruth.karl at gmx.de  Fri Jul 27 07:18:33 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Fri, 27 Jul 2007 16:18:33 +0200
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <46A9F6E7.7050806@gmx.de>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>	<46A7A471.5050102@gmx.de>
	<46A7B290.2060008@allcaps.org>	<46A8485A.40108@gmx.de>
	<46A9E770.5080102@allcaps.org> <46A9F6E7.7050806@gmx.de>
Message-ID: <46A9FEB9.8060408@gmx.de>



Ruth Karl schrieb:
> Hi Andrew,
>
> thanks a lot for finding a smaller example to illustrate the problem.
> (Did you do it for java target or for c# - as I did?)

ok, I could have seen that ;-)
But for c# target it is exactly the same... :-(
>
> Now: what can I do?
> I could (...) try to find a workaround in my grammar, but if it IS a 
> bug - than a similar thing might happen in other cases as well....
>
> Thanks for any further suggestions,
>
> Ruth
>
>
> Andrew Lentvorski schrieb:
>> Ruth Karl wrote:
>>> Thanks, but I looked at it several times (even before I ever wrote 
>>> to this list) and still I can not see why when I start an input with 
>>> with '<sx' the lexer should loose itself in a rule wanting '<script' 
>>> as an input. (given the grammar I attached in my last posting).
>>> Any other suggestions?
>>
>> Looks like a bug to me:
>>
>> grammar jsp;
>>
>> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )* 
>> '</script>' {System.out.print("J");};   ANY    :    . 
>> {System.out.print("A");};
>>
>> jsp        :    (ANY | JAVASCRIPT)* EOF;
>>
>> with input:
>>
>> <script>foo</script>
>> <s>bar</s>
>>
>>
>> Produces a token stream of:
>> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
>>
>> aka
>>
>> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
>>
>> Something vacuums up the "<s>b"
>>
>> The output is:
>> line 2:2 mismatched character '>' expecting 'c'
>> JAAAAAAAA
>>
>> You might want to file it and see what the response is.
>>
>> -a
>>
>

From tbrandonau at gmail.com  Fri Jul 27 07:29:13 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 28 Jul 2007 00:29:13 +1000
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <46A9F6E7.7050806@gmx.de>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
	<46A7A471.5050102@gmx.de> <46A7B290.2060008@allcaps.org>
	<46A8485A.40108@gmx.de> <46A9E770.5080102@allcaps.org>
	<46A9F6E7.7050806@gmx.de>
Message-ID: <ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>

On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> Hi Andrew,
>
> thanks a lot for finding a smaller example to illustrate the problem.
> (Did you do it for java target or for c# - as I did?)
>
> Now: what can I do?
> I could (...) try to find a workaround in my grammar, but if it IS a bug
> - than a similar thing might happen in other cases as well....
>
It's not a bug. Though it may be considered a limitation.
The problem is that ANTLR's prediction algorithm doesn't look past
token boundaries so it makes it's predictions based on only a single
token. As the only possible single token matches for '<' followed by
anything are JAVASCRIPT and OPENTAG (talking about your original
grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
predicts that it must be JAVASCRIPT, then gives an error when that
won't match. Looking at the mTokens method ANTLR generates may help
you see what is going on The problem is discussed in
http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
.
Unfortunately as ANTLR doesn't consider there to be any ambiguity
backtracking won't help and a predicate in OPENTAG won't be hoisted. A
fix for your original grammar is to replace the previous rules with:
fragment
JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* '</script>'
       ;
OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
				|		'<'
       ;

Ter said he'd investigate the possibility of enhancing the prediction
algorithm to deal with such cases.

Tom.
> Thanks for any further suggestions,
>
> Ruth
>
>
> Andrew Lentvorski schrieb:
> > Ruth Karl wrote:
> >> Thanks, but I looked at it several times (even before I ever wrote to
> >> this list) and still I can not see why when I start an input with
> >> with '<sx' the lexer should loose itself in a rule wanting '<script'
> >> as an input. (given the grammar I attached in my last posting).
> >> Any other suggestions?
> >
> > Looks like a bug to me:
> >
> > grammar jsp;
> >
> > JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )*
> > '</script>' {System.out.print("J");};
> > ANY    :    . {System.out.print("A");};
> >
> > jsp        :    (ANY | JAVASCRIPT)* EOF;
> >
> > with input:
> >
> > <script>foo</script>
> > <s>bar</s>
> >
> >
> > Produces a token stream of:
> > "<script>foo</script>", "a", "r", "<", "/", "s", ">"
> >
> > aka
> >
> > JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
> >
> > Something vacuums up the "<s>b"
> >
> > The output is:
> > line 2:2 mismatched character '>' expecting 'c'
> > JAAAAAAAA
> >
> > You might want to file it and see what the response is.
> >
> > -a
> >
>

From jimi at temporal-wave.com  Fri Jul 27 08:09:17 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 27 Jul 2007 08:09:17 -0700
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <46A9FEB9.8060408@gmx.de>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>	<46A7A471.5050102@gmx.de><46A7B290.2060008@allcaps.org>	<46A8485A.40108@gmx.de><46A9E770.5080102@allcaps.org>
	<46A9F6E7.7050806@gmx.de> <46A9FEB9.8060408@gmx.de>
Message-ID: <051466DAA0D608439E196797955018D76F31@wavemachine.temporal-wave.com>

Not a bug it is just the way it spits out lexers unless you tell it not to in some way. You might find it easier to view it that your original spec just said that '<' was enough to predict the rule so the code just sets off down that rule when it sees '<'. So you need to say "when you see '<', then if you see x it I a y and a it is a b". It is just the way Ter decided that the lexer generation should work and in general will give a smaller fast lexer. Try:

script : SSTART ANY* SSTOP ;

JAVASCRIPT	: '<'
			(
				  ('script>')=>	'script>'		{ $type = SSTART; }
				| ('/script>')=>	'/script>'		{ $type = SSTOP;  }
				| 						{ $type = LT;	}
			)

ANY : . ;

// These just here to define a token type for $type
// as declarations in token {} will result in undefined token warnings
// at the moment.
//
fragment LT 	: '<' 		;
fragment SSTART	: '<script>'	;
fragment SSTOP	: '</script>'	;


You will soon find though that you will really need to keep state in the lexer and only return the tokens if certain states are satisfied, such as a START has been seen. But, if you only need to deal with <script> </script>, then that should be good enough for you.

Jim 

PS: This is straight from fingers to email, so you may find syntax errors ;-)

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruth Karl
> Sent: Friday, July 27, 2007 7:19 AM
> To: ANTR Interest
> Subject: Re: [antlr-interest] lexer problem (BUG?)
> 
> 
> 
> Ruth Karl schrieb:
> > Hi Andrew,
> >
> > thanks a lot for finding a smaller example to illustrate the problem.


> >>
> >> grammar jsp;
> >>
> >> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )*
> >> '</script>' {System.out.print("J");};   ANY    :    .
> >> {System.out.print("A");};
> >>
> >> jsp        :    (ANY | JAVASCRIPT)* EOF;
> >>
> >> with input:
> >>
> >> <script>foo</script>
> >> <s>bar</s>
> >>
> >>
> >> Produces a token stream of:
> >> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
> >>
> >> aka
> >>
> >> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
> >>
> >> Something vacuums up the "<s>b"

From ruth.karl at gmx.de  Fri Jul 27 08:18:05 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Fri, 27 Jul 2007 17:18:05 +0200
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>	<46A7A471.5050102@gmx.de>
	<46A7B290.2060008@allcaps.org>	<46A8485A.40108@gmx.de>
	<46A9E770.5080102@allcaps.org>	<46A9F6E7.7050806@gmx.de>
	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>
Message-ID: <46AA0CAD.6050501@gmx.de>

Thanks, Thomas.
I did try your workaround (with predicate...), but antlr still chokes on 
an input like <s>....
(same problem: it does not see the '<s' anymore and then falls over the 
sudden closing tag...
I guess I will try to treat javascript in another way, then... (a 
pity... ;-)
Ruth

Thomas Brandon schrieb:
> On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>   
>> Hi Andrew,
>>
>> thanks a lot for finding a smaller example to illustrate the problem.
>> (Did you do it for java target or for c# - as I did?)
>>
>> Now: what can I do?
>> I could (...) try to find a workaround in my grammar, but if it IS a bug
>> - than a similar thing might happen in other cases as well....
>>
>>     
> It's not a bug. Though it may be considered a limitation.
> The problem is that ANTLR's prediction algorithm doesn't look past
> token boundaries so it makes it's predictions based on only a single
> token. As the only possible single token matches for '<' followed by
> anything are JAVASCRIPT and OPENTAG (talking about your original
> grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
> predicts that it must be JAVASCRIPT, then gives an error when that
> won't match. Looking at the mTokens method ANTLR generates may help
> you see what is going on The problem is discussed in
> http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
> .
> Unfortunately as ANTLR doesn't consider there to be any ambiguity
> backtracking won't help and a predicate in OPENTAG won't be hoisted. A
> fix for your original grammar is to replace the previous rules with:
> fragment
> JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* '</script>'
>        ;
> OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
> 				|		'<'
>        ;
>
> Ter said he'd investigate the possibility of enhancing the prediction
> algorithm to deal with such cases.
>
> Tom.
>   
>> Thanks for any further suggestions,
>>
>> Ruth
>>
>>
>> Andrew Lentvorski schrieb:
>>     
>>> Ruth Karl wrote:
>>>       
>>>> Thanks, but I looked at it several times (even before I ever wrote to
>>>> this list) and still I can not see why when I start an input with
>>>> with '<sx' the lexer should loose itself in a rule wanting '<script'
>>>> as an input. (given the grammar I attached in my last posting).
>>>> Any other suggestions?
>>>>         
>>> Looks like a bug to me:
>>>
>>> grammar jsp;
>>>
>>> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )*
>>> '</script>' {System.out.print("J");};
>>> ANY    :    . {System.out.print("A");};
>>>
>>> jsp        :    (ANY | JAVASCRIPT)* EOF;
>>>
>>> with input:
>>>
>>> <script>foo</script>
>>> <s>bar</s>
>>>
>>>
>>> Produces a token stream of:
>>> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
>>>
>>> aka
>>>
>>> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
>>>
>>> Something vacuums up the "<s>b"
>>>
>>> The output is:
>>> line 2:2 mismatched character '>' expecting 'c'
>>> JAAAAAAAA
>>>
>>> You might want to file it and see what the response is.
>>>
>>> -a
>>>
>>>       
>
>   

From tbrandonau at gmail.com  Fri Jul 27 08:39:44 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 28 Jul 2007 01:39:44 +1000
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <46AA0CAD.6050501@gmx.de>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
	<46A7A471.5050102@gmx.de> <46A7B290.2060008@allcaps.org>
	<46A8485A.40108@gmx.de> <46A9E770.5080102@allcaps.org>
	<46A9F6E7.7050806@gmx.de>
	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>
	<46AA0CAD.6050501@gmx.de>
Message-ID: <ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>

On 7/28/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> Thanks, Thomas.
> I did try your workaround (with predicate...), but antlr still chokes on
> an input like <s>....
> (same problem: it does not see the '<s' anymore and then falls over the
> sudden closing tag...
> I guess I will try to treat javascript in another way, then... (a
> pity... ;-)
Strange. I am able to correctly parse "<set><script>test</script><s>"
after making the modifications I gave. Note the interpreter in
ANTLRWorks doesn't execute actions or predicates so it won't work
there.
The full grammar I used was:
grammar JSP;

options {
               output=AST;
backtrack=true;
               memoize=true;
}

// Lexer rules

TEXT            :
((~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r'))
| ESCQUOTE)+
       ;
WS      :       (' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
       ;
JAVACOMMENT     :       '/*' ( options {greedy=false;} : . )* '*/'
{$channel=HIDDEN;}
       ;
HTMLCOMMENT     :       '<!--' ( options {greedy=false;} : . )* '-->'
{$channel=HIDDEN;}
       ;
SCRIPTCOMMENT   :       '<%--' ( options {greedy=false;} : . )* '--%>'
{$channel=HIDDEN;}
       ;

DOCTYPE :       '<!DOCTYPE' ( options {greedy=false;} : . )* '>'
       ;
DIRECTIVE       :       '<%@' ( options {greedy=false;} : . )* '%>'
       ;
DECLARATION     :       '<%!' ( options {greedy=false;} : . )* '%>'
       ;

SCRIPTLETSTART  :       '<%'
       ;
SCRIPTLETEND    :       '%>'
       ;
EMPTYHTMLEND    :       '/>'
       ;
ESCQUOTE        :       '\\' (options {greedy=false;} : ('"' | '\''))
       ;

fragment
JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* '</script>'
       ;
OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
				|		'<'
       ;
CLOSETAG        :       '>'
               ;
SLASH           :       '/'
       ;
PERCENT :       '%'
       ;
LPAR    :       '('
       ;
RPAR    :       ')'
       ;
LCURL   :       '{'
       ;
RCURL   :       '}'
       ;
LBRA    :       '['
       ;
RBRA    :       ']'
       ;

// LEXER: imaginary tokens/nodes for AST

SCRIPTLET       :
       ;
HTMLTAG :
       ;
QUOTED  :
       ;
BRACKETEX       :
       ;
JS      :
       ;



// Parser rules

jsp     :       (content)* EOF
               ;
content         :       scriptlet
       |       htmltag
       |       quoted
       |       text
       |       PERCENT
       |       bracketexpr
       |       DOCTYPE
       |       RPAR
       |       RCURL
       |       RBRA
       |       slashComment
       |       directive
       |       declaration
       |       javascript
               ;
scriptlet       :       SCRIPTLETSTART (content)*  SCRIPTLETEND
->^(SCRIPTLET content*)
       ;
htmltag :       OPENTAG (SLASH)? (htmltagcontent |slashComment)*
(EMPTYHTMLEND |CLOSETAG) ->^(HTMLTAG htmltagcontent*)
       ;
htmltagcontent  :       TEXT (PERCENT | TEXT)*
       |       bracketexpr
       |       quoted
       |       scriptlet
       ;
javascript      :       JAVASCRIPT ->^(JS JAVASCRIPT)
       ;
bracketexpr     :       LPAR expr* (RPAR)? ->^(BRACKETEX LPAR expr*)
       |       LCURL expr* (RCURL)? ->^(BRACKETEX LCURL expr*)
       |       LBRA expr* (RBRA)? ->^(BRACKETEX LBRA expr*)
       ;
expr    :       text
       |       SLASH
       |       OPENTAG
       |       CLOSETAG
       |       PERCENT
       |       '\\'
       |       bracketexpr
       |       quoted
       ;
slashComment    :       SLASH SLASH (TEXT)
       ;
text    :       TEXT  -> TEXT
       ;
quoted  :       dquoted
       |       squoted
       ;
dquoted :       '"' ( options {greedy=false;} : (dquotecontent) )* '"'
->^(QUOTED dquotecontent*)
       ;
dquotecontent   :       text
       |       scriptlet
       |       bracketexpr
       |       SLASH
       |       OPENTAG
       |       CLOSETAG
       |       PERCENT
       |       RPAR
       |       '\\'
       |       squoted
       ;
squoted :       '\'' ( options {greedy=false;} : (squotecontent)  )*
'\''  ->^(QUOTED squotecontent*)
       ;
squotecontent   :       text
       |       scriptlet
       |       bracketexpr
       |       SLASH
       |       OPENTAG
       |       CLOSETAG
       |       PERCENT
       |       RPAR
       |       '\\'
       |       dquoted
       ;
directive       :       DIRECTIVE
       ;
declaration     :       DECLARATION
       ;

Tom.
> Ruth
>
> Thomas Brandon schrieb:
> > On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> >
> >> Hi Andrew,
> >>
> >> thanks a lot for finding a smaller example to illustrate the problem.
> >> (Did you do it for java target or for c# - as I did?)
> >>
> >> Now: what can I do?
> >> I could (...) try to find a workaround in my grammar, but if it IS a bug
> >> - than a similar thing might happen in other cases as well....
> >>
> >>
> > It's not a bug. Though it may be considered a limitation.
> > The problem is that ANTLR's prediction algorithm doesn't look past
> > token boundaries so it makes it's predictions based on only a single
> > token. As the only possible single token matches for '<' followed by
> > anything are JAVASCRIPT and OPENTAG (talking about your original
> > grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
> > predicts that it must be JAVASCRIPT, then gives an error when that
> > won't match. Looking at the mTokens method ANTLR generates may help
> > you see what is going on The problem is discussed in
> > http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
> > .
> > Unfortunately as ANTLR doesn't consider there to be any ambiguity
> > backtracking won't help and a predicate in OPENTAG won't be hoisted. A
> > fix for your original grammar is to replace the previous rules with:
> > fragment
> > JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* '</script>'
> >        ;
> > OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
> >                               |               '<'
> >        ;
> >
> > Ter said he'd investigate the possibility of enhancing the prediction
> > algorithm to deal with such cases.
> >
> > Tom.
> >
> >> Thanks for any further suggestions,
> >>
> >> Ruth
> >>
> >>
> >> Andrew Lentvorski schrieb:
> >>
> >>> Ruth Karl wrote:
> >>>
> >>>> Thanks, but I looked at it several times (even before I ever wrote to
> >>>> this list) and still I can not see why when I start an input with
> >>>> with '<sx' the lexer should loose itself in a rule wanting '<script'
> >>>> as an input. (given the grammar I attached in my last posting).
> >>>> Any other suggestions?
> >>>>
> >>> Looks like a bug to me:
> >>>
> >>> grammar jsp;
> >>>
> >>> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )*
> >>> '</script>' {System.out.print("J");};
> >>> ANY    :    . {System.out.print("A");};
> >>>
> >>> jsp        :    (ANY | JAVASCRIPT)* EOF;
> >>>
> >>> with input:
> >>>
> >>> <script>foo</script>
> >>> <s>bar</s>
> >>>
> >>>
> >>> Produces a token stream of:
> >>> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
> >>>
> >>> aka
> >>>
> >>> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
> >>>
> >>> Something vacuums up the "<s>b"
> >>>
> >>> The output is:
> >>> line 2:2 mismatched character '>' expecting 'c'
> >>> JAAAAAAAA
> >>>
> >>> You might want to file it and see what the response is.
> >>>
> >>> -a
> >>>
> >>>
> >
> >
>

From ruth.karl at gmx.de  Fri Jul 27 08:52:58 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Fri, 27 Jul 2007 17:52:58 +0200
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>	<46A7A471.5050102@gmx.de>
	<46A7B290.2060008@allcaps.org>	<46A8485A.40108@gmx.de>
	<46A9E770.5080102@allcaps.org>	<46A9F6E7.7050806@gmx.de>	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>	<46AA0CAD.6050501@gmx.de>
	<ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>
Message-ID: <46AA14DA.4050609@gmx.de>

Thomas Brandon schrieb:
> On 7/28/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>   
>> Thanks, Thomas.
>> I did try your workaround (with predicate...), but antlr still chokes on
>> an input like <s>....
>> (same problem: it does not see the '<s' anymore and then falls over the
>> sudden closing tag...
>> I guess I will try to treat javascript in another way, then... (a
>> pity... ;-)
>>     
> Strange. I am able to correctly parse "<set><script>test</script><s>"
> after making the modifications I gave. Note the interpreter in
> ANTLRWorks doesn't execute actions or predicates so it won't work
> there.
>   

Yes, I kind of knew /guessed, that antlworks would maybe not be able to 
treat this right, but neither did the generated classes...
But as I am just discovering, there is a fundamental problem in the 
generation from antlworks now...even after completely removing any 
'script'- rule from the lexer grammar, i still get a lexer rule 
generated which tries toMatch("</script>")...
I guess my system needs some garbage collection there... ;-)

So maybe after that, your suggestion will work - I 'll let you know ;-)

Thanks,

Ruth
> The full grammar I used was:
> grammar JSP;
>
> options {
>                output=AST;
> backtrack=true;
>                memoize=true;
> }
>
> // Lexer rules
>
> TEXT            :
> ((~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r'))
> | ESCQUOTE)+
>        ;
> WS      :       (' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
>        ;
> JAVACOMMENT     :       '/*' ( options {greedy=false;} : . )* '*/'
> {$channel=HIDDEN;}
>        ;
> HTMLCOMMENT     :       '<!--' ( options {greedy=false;} : . )* '-->'
> {$channel=HIDDEN;}
>        ;
> SCRIPTCOMMENT   :       '<%--' ( options {greedy=false;} : . )* '--%>'
> {$channel=HIDDEN;}
>        ;
>
> DOCTYPE :       '<!DOCTYPE' ( options {greedy=false;} : . )* '>'
>        ;
> DIRECTIVE       :       '<%@' ( options {greedy=false;} : . )* '%>'
>        ;
> DECLARATION     :       '<%!' ( options {greedy=false;} : . )* '%>'
>        ;
>
> SCRIPTLETSTART  :       '<%'
>        ;
> SCRIPTLETEND    :       '%>'
>        ;
> EMPTYHTMLEND    :       '/>'
>        ;
> ESCQUOTE        :       '\\' (options {greedy=false;} : ('"' | '\''))
>        ;
>
> fragment
> JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* '</script>'
>        ;
> OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
> 				|		'<'
>        ;
> CLOSETAG        :       '>'
>                ;
> SLASH           :       '/'
>        ;
> PERCENT :       '%'
>        ;
> LPAR    :       '('
>        ;
> RPAR    :       ')'
>        ;
> LCURL   :       '{'
>        ;
> RCURL   :       '}'
>        ;
> LBRA    :       '['
>        ;
> RBRA    :       ']'
>        ;
>
> // LEXER: imaginary tokens/nodes for AST
>
> SCRIPTLET       :
>        ;
> HTMLTAG :
>        ;
> QUOTED  :
>        ;
> BRACKETEX       :
>        ;
> JS      :
>        ;
>
>
>
> // Parser rules
>
> jsp     :       (content)* EOF
>                ;
> content         :       scriptlet
>        |       htmltag
>        |       quoted
>        |       text
>        |       PERCENT
>        |       bracketexpr
>        |       DOCTYPE
>        |       RPAR
>        |       RCURL
>        |       RBRA
>        |       slashComment
>        |       directive
>        |       declaration
>        |       javascript
>                ;
> scriptlet       :       SCRIPTLETSTART (content)*  SCRIPTLETEND
> ->^(SCRIPTLET content*)
>        ;
> htmltag :       OPENTAG (SLASH)? (htmltagcontent |slashComment)*
> (EMPTYHTMLEND |CLOSETAG) ->^(HTMLTAG htmltagcontent*)
>        ;
> htmltagcontent  :       TEXT (PERCENT | TEXT)*
>        |       bracketexpr
>        |       quoted
>        |       scriptlet
>        ;
> javascript      :       JAVASCRIPT ->^(JS JAVASCRIPT)
>        ;
> bracketexpr     :       LPAR expr* (RPAR)? ->^(BRACKETEX LPAR expr*)
>        |       LCURL expr* (RCURL)? ->^(BRACKETEX LCURL expr*)
>        |       LBRA expr* (RBRA)? ->^(BRACKETEX LBRA expr*)
>        ;
> expr    :       text
>        |       SLASH
>        |       OPENTAG
>        |       CLOSETAG
>        |       PERCENT
>        |       '\\'
>        |       bracketexpr
>        |       quoted
>        ;
> slashComment    :       SLASH SLASH (TEXT)
>        ;
> text    :       TEXT  -> TEXT
>        ;
> quoted  :       dquoted
>        |       squoted
>        ;
> dquoted :       '"' ( options {greedy=false;} : (dquotecontent) )* '"'
> ->^(QUOTED dquotecontent*)
>        ;
> dquotecontent   :       text
>        |       scriptlet
>        |       bracketexpr
>        |       SLASH
>        |       OPENTAG
>        |       CLOSETAG
>        |       PERCENT
>        |       RPAR
>        |       '\\'
>        |       squoted
>        ;
> squoted :       '\'' ( options {greedy=false;} : (squotecontent)  )*
> '\''  ->^(QUOTED squotecontent*)
>        ;
> squotecontent   :       text
>        |       scriptlet
>        |       bracketexpr
>        |       SLASH
>        |       OPENTAG
>        |       CLOSETAG
>        |       PERCENT
>        |       RPAR
>        |       '\\'
>        |       dquoted
>        ;
> directive       :       DIRECTIVE
>        ;
> declaration     :       DECLARATION
>        ;
>
> Tom.
>   
>> Ruth
>>
>> Thomas Brandon schrieb:
>>     
>>> On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>>>
>>>       
>>>> Hi Andrew,
>>>>
>>>> thanks a lot for finding a smaller example to illustrate the problem.
>>>> (Did you do it for java target or for c# - as I did?)
>>>>
>>>> Now: what can I do?
>>>> I could (...) try to find a workaround in my grammar, but if it IS a bug
>>>> - than a similar thing might happen in other cases as well....
>>>>
>>>>
>>>>         
>>> It's not a bug. Though it may be considered a limitation.
>>> The problem is that ANTLR's prediction algorithm doesn't look past
>>> token boundaries so it makes it's predictions based on only a single
>>> token. As the only possible single token matches for '<' followed by
>>> anything are JAVASCRIPT and OPENTAG (talking about your original
>>> grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
>>> predicts that it must be JAVASCRIPT, then gives an error when that
>>> won't match. Looking at the mTokens method ANTLR generates may help
>>> you see what is going on The problem is discussed in
>>> http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
>>> .
>>> Unfortunately as ANTLR doesn't consider there to be any ambiguity
>>> backtracking won't help and a predicate in OPENTAG won't be hoisted. A
>>> fix for your original grammar is to replace the previous rules with:
>>> fragment
>>> JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* '</script>'
>>>        ;
>>> OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
>>>                               |               '<'
>>>        ;
>>>
>>> Ter said he'd investigate the possibility of enhancing the prediction
>>> algorithm to deal with such cases.
>>>
>>> Tom.
>>>
>>>       
>>>> Thanks for any further suggestions,
>>>>
>>>> Ruth
>>>>
>>>>
>>>> Andrew Lentvorski schrieb:
>>>>
>>>>         
>>>>> Ruth Karl wrote:
>>>>>
>>>>>           
>>>>>> Thanks, but I looked at it several times (even before I ever wrote to
>>>>>> this list) and still I can not see why when I start an input with
>>>>>> with '<sx' the lexer should loose itself in a rule wanting '<script'
>>>>>> as an input. (given the grammar I attached in my last posting).
>>>>>> Any other suggestions?
>>>>>>
>>>>>>             
>>>>> Looks like a bug to me:
>>>>>
>>>>> grammar jsp;
>>>>>
>>>>> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )*
>>>>> '</script>' {System.out.print("J");};
>>>>> ANY    :    . {System.out.print("A");};
>>>>>
>>>>> jsp        :    (ANY | JAVASCRIPT)* EOF;
>>>>>
>>>>> with input:
>>>>>
>>>>> <script>foo</script>
>>>>> <s>bar</s>
>>>>>
>>>>>
>>>>> Produces a token stream of:
>>>>> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
>>>>>
>>>>> aka
>>>>>
>>>>> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
>>>>>
>>>>> Something vacuums up the "<s>b"
>>>>>
>>>>> The output is:
>>>>> line 2:2 mismatched character '>' expecting 'c'
>>>>> JAAAAAAAA
>>>>>
>>>>> You might want to file it and see what the response is.
>>>>>
>>>>> -a
>>>>>
>>>>>
>>>>>           
>>>       
>
>   

From daniel at lba.ca  Fri Jul 27 09:15:59 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Fri, 27 Jul 2007 12:15:59 -0400
Subject: [antlr-interest] lexer problem (BUG?)
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<200707221816.30919.rschulz@sonic.net>
	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>
	<46A7A471.5050102@gmx.de>
	<46A7B290.2060008@allcaps.org> <46A8485A.40108@gmx.de>
	<46A9E770.5080102@allcaps.org> <46A9F6E7.7050806@gmx.de>
	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>
	<46AA0CAD.6050501@gmx.de>
	<ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>
Message-ID: <001d01c7d069$6b486ac0$9bd0840a@lba.ca>

How about this very simple example I tried in ANTLRWorks 1.1:

grammar lex;
fragment KEYWORD  :  'a' 'b' 'c';
fragment OTHER : 'a'|'b'|'c'|'d';
TOKEN : (KEYWORD)=> KEYWORD { $type = KEYWORD; }
               | OTHER { $type = OTHER; };
token : TOKEN;
program : token*;

With input: "abd", the interpreter breaks up the input into 'ab' and 'd'.

Now if the interpreter does not execute predicates then I can see that it 
would not have seen the (KEYWORD) predicate and would have choked after 'ab'

With input "abc", the interpreter breaks up the input into 'ab' and 'c'.

But here it should have eaten up 'abc' regardless... even with input 'abcd' 
it breaks it up into 'ab' 'c' and 'd' and not 'abc' and 'd'.

With input "abcd", in the debugger I get
root
program
org.antlr.runtime.EarlyExitException

and the input "abcd" is in a red box in the Input window. The Output window
had:
line 1:0 required (...)+ loop did not match anything at input 'abc'

None of this seems right. What am I missing?

Daniel

> On 7/28/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> Strange. I am able to correctly parse "<set><script>test</script><s>"
> after making the modifications I gave. Note the interpreter in
> ANTLRWorks doesn't execute actions or predicates so it won't work
> there.
> The full grammar I used was:
...
>> > On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>> >
>> > It's not a bug. Though it may be considered a limitation.
>> > The problem is that ANTLR's prediction algorithm doesn't look past
>> > token boundaries so it makes it's predictions based on only a single
>> > token. As the only possible single token matches for '<' followed by
>> > anything are JAVASCRIPT and OPENTAG (talking about your original
>> > grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
>> > predicts that it must be JAVASCRIPT, then gives an error when that
>> > won't match. Looking at the mTokens method ANTLR generates may help
>> > you see what is going on The problem is discussed in
>> > http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
>> > .
>> > Unfortunately as ANTLR doesn't consider there to be any ambiguity
>> > backtracking won't help and a predicate in OPENTAG won't be hoisted. A
>> > fix for your original grammar is to replace the previous rules with:
>> > fragment
>> > JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* 
>> > '</script>'
>> >        ;
>> > OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
>> >                               |               '<'
>> >        ;
>> >
>> > Ter said he'd investigate the possibility of enhancing the prediction
>> > algorithm to deal with such cases.
>> >
>> > Tom.
>> >
>> >> Thanks for any further suggestions,
>> >>
>> >> Ruth


From ruth.karl at gmx.de  Fri Jul 27 09:35:24 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Fri, 27 Jul 2007 18:35:24 +0200
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <46AA14DA.4050609@gmx.de>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>	<200707221816.30919.rschulz@sonic.net>	<52919915-2BD5-4E8E-8C90-1145BAEDA7C5@cs.usfca.edu>	<46A7A471.5050102@gmx.de>	<46A7B290.2060008@allcaps.org>	<46A8485A.40108@gmx.de>	<46A9E770.5080102@allcaps.org>	<46A9F6E7.7050806@gmx.de>	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>	<46AA0CAD.6050501@gmx.de>	<ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>
	<46AA14DA.4050609@gmx.de>
Message-ID: <46AA1ECC.4040000@gmx.de>



Ruth Karl schrieb:
> Thomas Brandon schrieb:
>> On 7/28/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>>  
>>> Thanks, Thomas.
>>> I did try your workaround (with predicate...), but antlr still 
>>> chokes on
>>> an input like <s>....
>>> (same problem: it does not see the '<s' anymore and then falls over the
>>> sudden closing tag...
>>> I guess I will try to treat javascript in another way, then... (a
>>> pity... ;-)
>>>     
>> Strange. I am able to correctly parse "<set><script>test</script><s>"
>> after making the modifications I gave. Note the interpreter in
>> ANTLRWorks doesn't execute actions or predicates so it won't work
>> there.
>>   
>
> Yes, I kind of knew /guessed, that antlworks would maybe not be able 
> to treat this right, but neither did the generated classes...
> But as I am just discovering, there is a fundamental problem in the 
> generation from antlworks now...even after completely removing any 
> 'script'- rule from the lexer grammar, i still get a lexer rule 
> generated which tries toMatch("</script>")...
> I guess my system needs some garbage collection there... ;-)
>
> So maybe after that, your suggestion will work - I 'll let you know ;-)

YES: it does! thanks again!
Ruth

>
> Thanks,
>
> Ruth
>> The full grammar I used was:
>> grammar JSP;
>>
>> options {
>>                output=AST;
>> backtrack=true;
>>                memoize=true;
>> }
>>
>> // Lexer rules
>>
>> TEXT            :
>> ((~('<'|'>'|'%'|'/'|'"'|'\''|'('|')'|'['|']'|'{'|'}'|'\n'|'\t'|'\r'))
>> | ESCQUOTE)+
>>        ;
>> WS      :       (' ' | '\t' | '\n' | '\r') { $channel=HIDDEN; }
>>        ;
>> JAVACOMMENT     :       '/*' ( options {greedy=false;} : . )* '*/'
>> {$channel=HIDDEN;}
>>        ;
>> HTMLCOMMENT     :       '<!--' ( options {greedy=false;} : . )* '-->'
>> {$channel=HIDDEN;}
>>        ;
>> SCRIPTCOMMENT   :       '<%--' ( options {greedy=false;} : . )* '--%>'
>> {$channel=HIDDEN;}
>>        ;
>>
>> DOCTYPE :       '<!DOCTYPE' ( options {greedy=false;} : . )* '>'
>>        ;
>> DIRECTIVE       :       '<%@' ( options {greedy=false;} : . )* '%>'
>>        ;
>> DECLARATION     :       '<%!' ( options {greedy=false;} : . )* '%>'
>>        ;
>>
>> SCRIPTLETSTART  :       '<%'
>>        ;
>> SCRIPTLETEND    :       '%>'
>>        ;
>> EMPTYHTMLEND    :       '/>'
>>        ;
>> ESCQUOTE        :       '\\' (options {greedy=false;} : ('"' | '\''))
>>        ;
>>
>> fragment
>> JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* 
>> '</script>'
>>        ;
>> OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
>>                 |        '<'
>>        ;
>> CLOSETAG        :       '>'
>>                ;
>> SLASH           :       '/'
>>        ;
>> PERCENT :       '%'
>>        ;
>> LPAR    :       '('
>>        ;
>> RPAR    :       ')'
>>        ;
>> LCURL   :       '{'
>>        ;
>> RCURL   :       '}'
>>        ;
>> LBRA    :       '['
>>        ;
>> RBRA    :       ']'
>>        ;
>>
>> // LEXER: imaginary tokens/nodes for AST
>>
>> SCRIPTLET       :
>>        ;
>> HTMLTAG :
>>        ;
>> QUOTED  :
>>        ;
>> BRACKETEX       :
>>        ;
>> JS      :
>>        ;
>>
>>
>>
>> // Parser rules
>>
>> jsp     :       (content)* EOF
>>                ;
>> content         :       scriptlet
>>        |       htmltag
>>        |       quoted
>>        |       text
>>        |       PERCENT
>>        |       bracketexpr
>>        |       DOCTYPE
>>        |       RPAR
>>        |       RCURL
>>        |       RBRA
>>        |       slashComment
>>        |       directive
>>        |       declaration
>>        |       javascript
>>                ;
>> scriptlet       :       SCRIPTLETSTART (content)*  SCRIPTLETEND
>> ->^(SCRIPTLET content*)
>>        ;
>> htmltag :       OPENTAG (SLASH)? (htmltagcontent |slashComment)*
>> (EMPTYHTMLEND |CLOSETAG) ->^(HTMLTAG htmltagcontent*)
>>        ;
>> htmltagcontent  :       TEXT (PERCENT | TEXT)*
>>        |       bracketexpr
>>        |       quoted
>>        |       scriptlet
>>        ;
>> javascript      :       JAVASCRIPT ->^(JS JAVASCRIPT)
>>        ;
>> bracketexpr     :       LPAR expr* (RPAR)? ->^(BRACKETEX LPAR expr*)
>>        |       LCURL expr* (RCURL)? ->^(BRACKETEX LCURL expr*)
>>        |       LBRA expr* (RBRA)? ->^(BRACKETEX LBRA expr*)
>>        ;
>> expr    :       text
>>        |       SLASH
>>        |       OPENTAG
>>        |       CLOSETAG
>>        |       PERCENT
>>        |       '\\'
>>        |       bracketexpr
>>        |       quoted
>>        ;
>> slashComment    :       SLASH SLASH (TEXT)
>>        ;
>> text    :       TEXT  -> TEXT
>>        ;
>> quoted  :       dquoted
>>        |       squoted
>>        ;
>> dquoted :       '"' ( options {greedy=false;} : (dquotecontent) )* '"'
>> ->^(QUOTED dquotecontent*)
>>        ;
>> dquotecontent   :       text
>>        |       scriptlet
>>        |       bracketexpr
>>        |       SLASH
>>        |       OPENTAG
>>        |       CLOSETAG
>>        |       PERCENT
>>        |       RPAR
>>        |       '\\'
>>        |       squoted
>>        ;
>> squoted :       '\'' ( options {greedy=false;} : (squotecontent)  )*
>> '\''  ->^(QUOTED squotecontent*)
>>        ;
>> squotecontent   :       text
>>        |       scriptlet
>>        |       bracketexpr
>>        |       SLASH
>>        |       OPENTAG
>>        |       CLOSETAG
>>        |       PERCENT
>>        |       RPAR
>>        |       '\\'
>>        |       dquoted
>>        ;
>> directive       :       DIRECTIVE
>>        ;
>> declaration     :       DECLARATION
>>        ;
>>
>> Tom.
>>  
>>> Ruth
>>>
>>> Thomas Brandon schrieb:
>>>    
>>>> On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>>>>
>>>>      
>>>>> Hi Andrew,
>>>>>
>>>>> thanks a lot for finding a smaller example to illustrate the problem.
>>>>> (Did you do it for java target or for c# - as I did?)
>>>>>
>>>>> Now: what can I do?
>>>>> I could (...) try to find a workaround in my grammar, but if it IS 
>>>>> a bug
>>>>> - than a similar thing might happen in other cases as well....
>>>>>
>>>>>
>>>>>         
>>>> It's not a bug. Though it may be considered a limitation.
>>>> The problem is that ANTLR's prediction algorithm doesn't look past
>>>> token boundaries so it makes it's predictions based on only a single
>>>> token. As the only possible single token matches for '<' followed by
>>>> anything are JAVASCRIPT and OPENTAG (talking about your original
>>>> grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
>>>> predicts that it must be JAVASCRIPT, then gives an error when that
>>>> won't match. Looking at the mTokens method ANTLR generates may help
>>>> you see what is going on The problem is discussed in
>>>> http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html 
>>>>
>>>> .
>>>> Unfortunately as ANTLR doesn't consider there to be any ambiguity
>>>> backtracking won't help and a predicate in OPENTAG won't be hoisted. A
>>>> fix for your original grammar is to replace the previous rules with:
>>>> fragment
>>>> JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )* 
>>>> '</script>'
>>>>        ;
>>>> OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
>>>>                               |               '<'
>>>>        ;
>>>>
>>>> Ter said he'd investigate the possibility of enhancing the prediction
>>>> algorithm to deal with such cases.
>>>>
>>>> Tom.
>>>>
>>>>      
>>>>> Thanks for any further suggestions,
>>>>>
>>>>> Ruth
>>>>>
>>>>>
>>>>> Andrew Lentvorski schrieb:
>>>>>
>>>>>        
>>>>>> Ruth Karl wrote:
>>>>>>
>>>>>>          
>>>>>>> Thanks, but I looked at it several times (even before I ever 
>>>>>>> wrote to
>>>>>>> this list) and still I can not see why when I start an input with
>>>>>>> with '<sx' the lexer should loose itself in a rule wanting 
>>>>>>> '<script'
>>>>>>> as an input. (given the grammar I attached in my last posting).
>>>>>>> Any other suggestions?
>>>>>>>
>>>>>>>             
>>>>>> Looks like a bug to me:
>>>>>>
>>>>>> grammar jsp;
>>>>>>
>>>>>> JAVASCRIPT    :    '<script>' ( options {greedy=false;} : . )*
>>>>>> '</script>' {System.out.print("J");};
>>>>>> ANY    :    . {System.out.print("A");};
>>>>>>
>>>>>> jsp        :    (ANY | JAVASCRIPT)* EOF;
>>>>>>
>>>>>> with input:
>>>>>>
>>>>>> <script>foo</script>
>>>>>> <s>bar</s>
>>>>>>
>>>>>>
>>>>>> Produces a token stream of:
>>>>>> "<script>foo</script>", "a", "r", "<", "/", "s", ">"
>>>>>>
>>>>>> aka
>>>>>>
>>>>>> JAVASCRIPT, ANY, ANY, ANY, ANY, ANY, ANY
>>>>>>
>>>>>> Something vacuums up the "<s>b"
>>>>>>
>>>>>> The output is:
>>>>>> line 2:2 mismatched character '>' expecting 'c'
>>>>>> JAAAAAAAA
>>>>>>
>>>>>> You might want to file it and see what the response is.
>>>>>>
>>>>>> -a
>>>>>>
>>>>>>
>>>>>>           
>>>>       
>>
>>   
>

From tbrandonau at gmail.com  Fri Jul 27 09:52:32 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Sat, 28 Jul 2007 02:52:32 +1000
Subject: [antlr-interest] lexer problem (BUG?)
In-Reply-To: <001d01c7d069$6b486ac0$9bd0840a@lba.ca>
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<46A7A471.5050102@gmx.de> <46A7B290.2060008@allcaps.org>
	<46A8485A.40108@gmx.de> <46A9E770.5080102@allcaps.org>
	<46A9F6E7.7050806@gmx.de>
	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>
	<46AA0CAD.6050501@gmx.de>
	<ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>
	<001d01c7d069$6b486ac0$9bd0840a@lba.ca>
Message-ID: <ebc876d70707270952j5dbb83ddl1a2eaa94c95f941f@mail.gmail.com>

On 7/28/07, Daniel Brosseau <daniel at lba.ca> wrote:
> How about this very simple example I tried in ANTLRWorks 1.1:
>
> grammar lex;
> fragment KEYWORD  :  'a' 'b' 'c';
> fragment OTHER : 'a'|'b'|'c'|'d';
> TOKEN : (KEYWORD)=> KEYWORD { $type = KEYWORD; }
>                | OTHER { $type = OTHER; };
> token : TOKEN;
> program : token*;
>
Either remove the type setting or try something like:
grammar lex;

fragment KEYWORD  :  'a' 'b' 'c';
fragment OTHER : 'a'|'b'|'c'|'d';
TOKEN : (KEYWORD)=> KEYWORD { $type = KEYWORD; }
              | OTHER { $type = OTHER; };
token : OTHER;
keyword:	KEYWORD;
program : (token|keyword)+ EOF;

Which will correctly handle everything in the debugger and give a
MismatchedTokenException in the interpreter as without the actions
it's returning only TOKEN.

> With input: "abd", the interpreter breaks up the input into 'ab' and 'd'.
>
> Now if the interpreter does not execute predicates then I can see that it
> would not have seen the (KEYWORD) predicate and would have choked after 'ab'
>
> With input "abc", the interpreter breaks up the input into 'ab' and 'c'.
>
> But here it should have eaten up 'abc' regardless... even with input 'abcd'
> it breaks it up into 'ab' 'c' and 'd' and not 'abc' and 'd'.
Not sure what the interpreter's doing here. Might be an interpreter
bug. Looks like nothing should match 'ab'. Given no actions I thought
the interpreter should be running:
grammar lex;

fragment KEYWORD  :  'a' 'b' 'c';
fragment OTHER : 'a'|'b'|'c'|'d';
TOKEN : KEYWORD
      | OTHER;
token : TOKEN;
program : token*;

Using this the interpreter output does line up with the debugger.

Tom.
>
> With input "abcd", in the debugger I get
> root
> program
> org.antlr.runtime.EarlyExitException
>
> and the input "abcd" is in a red box in the Input window. The Output window
> had:
> line 1:0 required (...)+ loop did not match anything at input 'abc'
>
> None of this seems right. What am I missing?
>
> Daniel
>
> > On 7/28/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> > Strange. I am able to correctly parse "<set><script>test</script><s>"
> > after making the modifications I gave. Note the interpreter in
> > ANTLRWorks doesn't execute actions or predicates so it won't work
> > there.
> > The full grammar I used was:
> ...
> >> > On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> >> >
> >> > It's not a bug. Though it may be considered a limitation.
> >> > The problem is that ANTLR's prediction algorithm doesn't look past
> >> > token boundaries so it makes it's predictions based on only a single
> >> > token. As the only possible single token matches for '<' followed by
> >> > anything are JAVASCRIPT and OPENTAG (talking about your original
> >> > grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
> >> > predicts that it must be JAVASCRIPT, then gives an error when that
> >> > won't match. Looking at the mTokens method ANTLR generates may help
> >> > you see what is going on The problem is discussed in
> >> > http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
> >> > .
> >> > Unfortunately as ANTLR doesn't consider there to be any ambiguity
> >> > backtracking won't help and a predicate in OPENTAG won't be hoisted. A
> >> > fix for your original grammar is to replace the previous rules with:
> >> > fragment
> >> > JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )*
> >> > '</script>'
> >> >        ;
> >> > OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
> >> >                               |               '<'
> >> >        ;
> >> >
> >> > Ter said he'd investigate the possibility of enhancing the prediction
> >> > algorithm to deal with such cases.
> >> >
> >> > Tom.
> >> >
> >> >> Thanks for any further suggestions,
> >> >>
> >> >> Ruth
>
>

From Carleton at Coffrin.com  Fri Jul 27 12:25:08 2007
From: Carleton at Coffrin.com (Carleton Coffrin)
Date: Fri, 27 Jul 2007 15:25:08 -0400
Subject: [antlr-interest] Predicate Variable
Message-ID: <190cfd940707271225ta6b433eid63db193aa2a65e1@mail.gmail.com>

Is there a way to write a predicate which takes another predicate as an
argument?

My inspiration for this question is as follows.  The language I am working
with supports different sets of statements depending on where the statements
appear.  This yields statement predicates like this,

programA
    : (stmtA SCOLON)*
;

stmtA
    : s=whileA
    | s=foo
;

whileA
    : "while" expr "do" programA "od"
;


programB
    : (stmtB SCOLON)*
;

stmtB
    : s=whileB
    | s=bar
;

whileB
    : "while" expr "do" programB "od"
;

I am looking for a way to factor out the while loop structure in "whileA"
and "whileB" with out breaking the required recursive "programA"/"programB"
reference.  I would like to write something like this,

while<pred>
    : "while" expr "do" pred "od"
;

How might I archive this sort of refactoring?

Cheers
-Carleton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070727/bd9b5f05/attachment.html 

From daniel at lba.ca  Fri Jul 27 12:27:18 2007
From: daniel at lba.ca (Daniel Brosseau)
Date: Fri, 27 Jul 2007 15:27:18 -0400
Subject: [antlr-interest] lexer problem (BUG?)
References: <0A19450D-1C60-426C-89DF-59E0EAECB3D6@arizona-software.ch>
	<46A7A471.5050102@gmx.de> <46A7B290.2060008@allcaps.org>
	<46A8485A.40108@gmx.de> <46A9E770.5080102@allcaps.org>
	<46A9F6E7.7050806@gmx.de>
	<ebc876d70707270729p714890bfse0ae54e34e869e9b@mail.gmail.com>
	<46AA0CAD.6050501@gmx.de>
	<ebc876d70707270839p150c9c6bs77d386155c1646cd@mail.gmail.com>
	<001d01c7d069$6b486ac0$9bd0840a@lba.ca>
	<ebc876d70707270952j5dbb83ddl1a2eaa94c95f941f@mail.gmail.com>
Message-ID: <002d01c7d084$253ca3a0$9bd0840a@lba.ca>


----- Original Message ----- 
From: "Thomas Brandon" <tbrandonau at gmail.com>
To: "ANTLR-Interest" <antlr-interest at antlr.org>
Sent: Friday, July 27, 2007 12:52 PM
Subject: Re: [antlr-interest] lexer problem (BUG?)


> On 7/28/07, Daniel Brosseau <daniel at lba.ca> wrote:
>> How about this very simple example I tried in ANTLRWorks 1.1:
>>
>> grammar lex;
>> fragment KEYWORD  :  'a' 'b' 'c';
>> fragment OTHER : 'a'|'b'|'c'|'d';
>> TOKEN : (KEYWORD)=> KEYWORD { $type = KEYWORD; }
>>                | OTHER { $type = OTHER; };
>> token : TOKEN;
>> program : token*;
>>
> Either remove the type setting or try something like:
> grammar lex;
>
> fragment KEYWORD  :  'a' 'b' 'c';
> fragment OTHER : 'a'|'b'|'c'|'d';
> TOKEN : (KEYWORD)=> KEYWORD { $type = KEYWORD; }
>              | OTHER { $type = OTHER; };
> token : OTHER;
> keyword: KEYWORD;
> program : (token|keyword)+ EOF;
>
> Which will correctly handle everything in the debugger and give a
> MismatchedTokenException in the interpreter as without the actions
> it's returning only TOKEN.
>

I tried:

grammar lex;
fragment KEYWORD  :  'a' 'b' 'c';
fragment OTHER : 'a'|'b'|'c'|'d';
TOKEN : (KEYWORD)=> KEYWORD
              | OTHER
token : TOKEN;
program : token* + EOF;

With no actions in the LEXER and an added EOF in the PARSER, the debugger 
broke up each of 'abc', 'abcd' and 'abd' properly :-)

>> With input: "abd", the interpreter breaks up the input into 'ab' and 'd'.
>>
>> Now if the interpreter does not execute predicates then I can see that it
>> would not have seen the (KEYWORD) predicate and would have choked after 
>> 'ab'
>>
>> With input "abc", the interpreter breaks up the input into 'ab' and 'c'.
>>
>> But here it should have eaten up 'abc' regardless... even with input 
>> 'abcd'
>> it breaks it up into 'ab' 'c' and 'd' and not 'abc' and 'd'.
> Not sure what the interpreter's doing here. Might be an interpreter
> bug. Looks like nothing should match 'ab'. Given no actions I thought
> the interpreter should be running:
> grammar lex;
>

As you indicated, removing the predicate (KEYWORD) gets the intrepreter to 
work OK :-) but it will evidently still choke on 'abd'.

Thanks, this clears up several issues for me. Wonderful program.

Daniel

> fragment KEYWORD  :  'a' 'b' 'c';
> fragment OTHER : 'a'|'b'|'c'|'d';
> TOKEN : KEYWORD
>      | OTHER;
> token : TOKEN;
> program : token*;
>
> Using this the interpreter output does line up with the debugger.
>
> Tom.
>>
>> With input "abcd", in the debugger I get
>> root
>> program
>> org.antlr.runtime.EarlyExitException
>>
>> and the input "abcd" is in a red box in the Input window. The Output 
>> window
>> had:
>> line 1:0 required (...)+ loop did not match anything at input 'abc'
>>
>> None of this seems right. What am I missing?
>>
>> Daniel
>>
>> > On 7/28/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>> > Strange. I am able to correctly parse "<set><script>test</script><s>"
>> > after making the modifications I gave. Note the interpreter in
>> > ANTLRWorks doesn't execute actions or predicates so it won't work
>> > there.
>> > The full grammar I used was:
>> ...
>> >> > On 7/27/07, Ruth Karl <ruth.karl at gmx.de> wrote:
>> >> >
>> >> > It's not a bug. Though it may be considered a limitation.
>> >> > The problem is that ANTLR's prediction algorithm doesn't look past
>> >> > token boundaries so it makes it's predictions based on only a single
>> >> > token. As the only possible single token matches for '<' followed by
>> >> > anything are JAVASCRIPT and OPENTAG (talking about your original
>> >> > grammar here, not the shorter sample) as soon as ANTLR see's '<s' it
>> >> > predicts that it must be JAVASCRIPT, then gives an error when that
>> >> > won't match. Looking at the mTokens method ANTLR generates may help
>> >> > you see what is going on The problem is discussed in
>> >> > http://www.antlr.org/pipermail/antlr-interest/2007-July/022349.html
>> >> > .
>> >> > Unfortunately as ANTLR doesn't consider there to be any ambiguity
>> >> > backtracking won't help and a predicate in OPENTAG won't be hoisted. 
>> >> > A
>> >> > fix for your original grammar is to replace the previous rules with:
>> >> > fragment
>> >> > JAVASCRIPT      :       '<script' ( options {greedy=false;} : . )*
>> >> > '</script>'
>> >> >        ;
>> >> > OPENTAG         :       ('<script>')=>JAVASCRIPT {$type=JAVASCRIPT;}
>> >> >                               |               '<'
>> >> >        ;
>> >> >
>> >> > Ter said he'd investigate the possibility of enhancing the 
>> >> > prediction
>> >> > algorithm to deal with such cases.
>> >> >
>> >> > Tom.
>> >> >
>> >> >> Thanks for any further suggestions,
>> >> >>
>> >> >> Ruth
>>
>> 


From parrt at cs.usfca.edu  Fri Jul 27 14:12:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 27 Jul 2007 14:12:06 -0700
Subject: [antlr-interest] finished AST construction for tree grammars
Message-ID: <B1D6B272-B84C-4705-A5CB-55E6DFB027DA@cs.usfca.edu>

heh heh heh...cool stuff.

Will have to wait for 3.1 release, but works.  I may push a build.

http://www.antlr.org/wiki/display/ANTLR3/2007/07/27/Finished+tree 
+grammar+AST+construction

Next up: import for grammars.

Ter

From jaluber at gmx.de  Fri Jul 27 14:14:06 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Fri, 27 Jul 2007 23:14:06 +0200
Subject: [antlr-interest] language independant grammars
In-Reply-To: <31982.82562.qm@web55915.mail.re3.yahoo.com>
References: <31982.82562.qm@web55915.mail.re3.yahoo.com>
Message-ID: <46AA601E.9060005@gmx.de>

Loring Craymer wrote:
> See
> http://www.antlr.org/share/1160261701017/yggdrasil.pdf
> I've been incredibly busy the past several months, but
> am now back in a position where I have time and
> research funding.  I should have a current version
> posted to sourceforge soon; I am in the process of
> finishing a v2 to Yggdrasil translator (includes
> template conversion of v2 actions).
> 
> --Loring

This looks like the answer to one of my suggestions at the beginning of
my ANTLR usage. The main thing what I would change besides the lack of
any examples is to adapt the syntax more to ANTLR 3. The reason is
simple: V3 will be around for a long time. Many users will be only
familiar with this version, so it will only a source of confusion.
People expect automatically that software environments like Yggdrasil
have the newest software versions under the hood. When they discover the
truth it will put them off. Even people like me, who would like to have
language independent versions of their grammars, won't be that willing
to switch if they have to change more than the actions.

Another thing I noticed is that you praise the use of diff3. Well, I'm
not happy to have to use such a tool. I prefer inheritance, partial
classes or marking functions etc. as programmer supplied, because these
methods (in combination or alone) allow it to generate the source code
freely without any intermediate steps. At least I don't know any
language, which doesn't have a feature to circumvent this step.

Hopefully my thoughts are useful to you.

Best regards,
Johannes Luber


From rschulz at sonic.net  Fri Jul 27 16:29:40 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 27 Jul 2007 16:29:40 -0700
Subject: [antlr-interest] Cosmetic Issue in Generated Java Parsers w.r.t.
	JavaDoc Comments
Message-ID: <200707271629.40923.rschulz@sonic.net>

Hi,

I added a JavaDoc comment in the @header section of my grammar 
specification hoping to have it show up in the generated JavaDocs when 
run on the resulting Java sources.

Unfortunately, ANTLR injects import directives between the end of the 
content it copies from the @header section and the beginning of the 
Java "class" definition. This precludes the JavaDoc comment from being 
recognized as applying to the parser class.

It would be nice if the imports were placed above / before the @header 
content.


Randall Schulz

From parrt at cs.usfca.edu  Fri Jul 27 16:41:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 27 Jul 2007 16:41:35 -0700
Subject: [antlr-interest] Cosmetic Issue in Generated Java Parsers
	w.r.t. JavaDoc Comments
In-Reply-To: <200707271629.40923.rschulz@sonic.net>
References: <200707271629.40923.rschulz@sonic.net>
Message-ID: <1D5C2ED6-88B7-4720-8F81-A6A8577D22B7@cs.usfca.edu>

Hi. I think I meant the javadoc comment on the grammar to be used;  
probably not injected yet

/** Javadoc */
grammar T;
...

Ter
On Jul 27, 2007, at 4:29 PM, Randall R Schulz wrote:

> Hi,
>
> I added a JavaDoc comment in the @header section of my grammar
> specification hoping to have it show up in the generated JavaDocs when
> run on the resulting Java sources.
>
> Unfortunately, ANTLR injects import directives between the end of the
> content it copies from the @header section and the beginning of the
> Java "class" definition. This precludes the JavaDoc comment from being
> recognized as applying to the parser class.
>
> It would be nice if the imports were placed above / before the @header
> content.
>
>
> Randall Schulz


From rschulz at sonic.net  Fri Jul 27 17:16:27 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Fri, 27 Jul 2007 17:16:27 -0700
Subject: [antlr-interest] Cosmetic Issue in Generated Java Parsers
	w.r.t. JavaDoc Comments
In-Reply-To: <1D5C2ED6-88B7-4720-8F81-A6A8577D22B7@cs.usfca.edu>
References: <200707271629.40923.rschulz@sonic.net>
	<1D5C2ED6-88B7-4720-8F81-A6A8577D22B7@cs.usfca.edu>
Message-ID: <200707271716.27858.rschulz@sonic.net>

On Friday 27 July 2007 16:41, Terence Parr wrote:
> Hi. I think I meant the javadoc comment on the grammar to be used;
> probably not injected yet
>
> /** Javadoc */
> grammar T;
> ...

OK. That works and is good enough for me.


> Ter


Randall Schulz

From rdclark at gmail.com  Fri Jul 27 23:47:27 2007
From: rdclark at gmail.com (Richard Clark)
Date: Fri, 27 Jul 2007 23:47:27 -0700
Subject: [antlr-interest] Predicate Variable
In-Reply-To: <190cfd940707271225ta6b433eid63db193aa2a65e1@mail.gmail.com>
References: <190cfd940707271225ta6b433eid63db193aa2a65e1@mail.gmail.com>
Message-ID: <d3992d900707272347y639308dfnec3e8f98a49c67f2@mail.gmail.com>

Sounds like a good place for a scope:

// WARNING: Written at 15 minutes to midnight, from memory, see ANTLR book
// for exact syntax. Void where prohibited, your mileage may vary, if
a rash occurs
// see your doctor, etc. etc. etc.

scope context {
  char predicateClass;
};

programA
scope context;
@init { $context::predicateClass='A'; }
    : (stmtA SCOLON)*
;

stmtA
    : s=while
    | s=foo
;

programB
scope context;
@init { $context::predicateClass='B'; }
    : (stmtB SCOLON)*
;

stmtB
    : s=while
    | s=bar
;

while
scope context;
    : "while" expr "do"
    (
       {$context::predicateClass == 'A'}? predA
       | predB
    )
   "od"
;



 ...Richard

From salehiam at gmail.com  Sun Jul 29 05:09:49 2007
From: salehiam at gmail.com (Ali Salehi)
Date: Sun, 29 Jul 2007 14:09:49 +0200
Subject: [antlr-interest] Strange problem with syntactic predicates
Message-ID: <19be3ea50707290509s53c2b397n4c17bd1bb188dec9@mail.gmail.com>

Hi all,
 I have a very simple grammar [only two lines] below (ErrGenerator.g) :

grammar ErrGenerator;
start : ('namely')=>'namely' | ('name')=>'name' | 'name';

Whenever i want to test this grammar using the antlr in the interpreter
[GUI],
I get the FailedPredicateException(start,{synpred1}?) error for a simple
input of 'namely' [without quotes].

As this grammar is tremendously simple, I appreciate if someone could help
me on this.

Best regards,
AliS

PS
- I know I can write this grammar in much simpler form. Actually my
main .g file is much
bigger [~200 lines] and the above sample
grammar generates the error I'm facing in my main .g file.


**************************************************************
Ali Salehi, LSIR - Distributed Information Systems Laboratory
EPFL-IC-IIF-LSIR, B?timent BC, Station 14, CH-1015 Lausanne, Switzerland.
http://lsirwww.epfl.ch/
email: ali.salehi at epfl.ch
Tel: +41-21-6936656 Fax: +41-21-6938115
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070729/eff9a2f8/attachment.html 

From kroepke at classdump.org  Sun Jul 29 06:56:54 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Sun, 29 Jul 2007 15:56:54 +0200
Subject: [antlr-interest] Strange problem with syntactic predicates
In-Reply-To: <19be3ea50707290509s53c2b397n4c17bd1bb188dec9@mail.gmail.com>
References: <19be3ea50707290509s53c2b397n4c17bd1bb188dec9@mail.gmail.com>
Message-ID: <2C2E3BC9-873E-44F7-9C61-4FA8DDD09117@classdump.org>


On Jul 29, 2007, at 2:09 PM, Ali Salehi wrote:

> Whenever i want to test this grammar using the antlr in the  
> interpreter
> [GUI],
> I get the FailedPredicateException(start,{synpred1}?) error for a  
> simple
> input of 'namely' [without quotes].

The interpreter currently does not support predicates. Try to use  
"Debug Remote..." and start
a simple "driver program" with your grammar built using the -debug  
switch when invoking org.antlr.Tool.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From jimi at temporal-wave.com  Sun Jul 29 08:34:41 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 29 Jul 2007 08:34:41 -0700
Subject: [antlr-interest] Strange problem with syntactic predicates
In-Reply-To: <19be3ea50707290509s53c2b397n4c17bd1bb188dec9@mail.gmail.com>
References: <19be3ea50707290509s53c2b397n4c17bd1bb188dec9@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76F36@wavemachine.temporal-wave.com>

Apart from the interpreter not supporting predicates, your grammar is
also predicting 'name' and 'name', once with a predicate and once
without J

 

Jim

 

From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ali Salehi
Sent: Sunday, July 29, 2007 5:10 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Strange problem with syntactic predicates

 

Hi all,
 I have a very simple grammar [only two lines] below (ErrGenerator.g) :

grammar ErrGenerator;
start : ('namely')=>'namely' | ('name')=>'name' | 'name';



-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070729/21fd0252/attachment.html 

From sam.ellis at arm.com  Sun Jul 29 10:59:12 2007
From: sam.ellis at arm.com (Sam Ellis)
Date: Sun, 29 Jul 2007 18:59:12 +0100
Subject: [antlr-interest] Bug in ANTLReaderStream.load()?
Message-ID: <C2D29400.142D5%sam.ellis@arm.com>

Using: ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007

The Java method org.antlr.runtime.ANTLRReaderStream.load() contains:

if ( readChunkSize<=0 ) {
    size = READ_BUFFER_SIZE;
}


Shouldn't this be assigning to readChunkSize instead of size? Because
otherwise you're later going to call Java.io.reader.read() with a negative
number of bytes to read.


-- 
Sam Ellis, RVDK Team Leader,
DevSys Product Engineering Group,          Tel: +44 (0) 1223 400516
ARM Ltd., 110 Fulbourn Road,               Fax: +44 (0) 1223 400887
Cambridge, CB1 9NJ                         mailto:Sam.Ellis at arm.com



-- 
IMPORTANT NOTICE: The contents of this email and any attachments are confidential and may also be privileged. If you are not the intended recipient, please notify the sender immediately and do not disclose the contents to any other person, use it for any purpose, or store or copy the information in any medium.  Thank you.



From email at kortmann.de  Sun Jul 29 13:23:31 2007
From: email at kortmann.de (Martin Kortmann)
Date: Sun, 29 Jul 2007 22:23:31 +0200
Subject: [antlr-interest] ANSI-C grammar example outdated?
Message-ID: <46ACF743.7050601@kortmann.de>

Hello,

Is it right that the ANSI-C grammar example on
http://www.antlr.org/grammar/1153358328744/c.g
doesn't work with the latest release of ANTLR?

Martin

From parrt at cs.usfca.edu  Sun Jul 29 13:59:16 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 29 Jul 2007 13:59:16 -0700
Subject: [antlr-interest] Bug in ANTLReaderStream.load()?
In-Reply-To: <C2D29400.142D5%sam.ellis@arm.com>
References: <C2D29400.142D5%sam.ellis@arm.com>
Message-ID: <26B5ECF3-72FF-4017-BE4A-F993098E3257@cs.usfca.edu>

Good catch!  Fixed in my dev branch.
Ter
On Jul 29, 2007, at 10:59 AM, Sam Ellis wrote:

> Using: ANTLR Parser Generator  Version 3.0 (May 17, 2007)  1989-2007
>
> The Java method org.antlr.runtime.ANTLRReaderStream.load() contains:
>
> if ( readChunkSize<=0 ) {
>     size = READ_BUFFER_SIZE;
> }
>
>
> Shouldn't this be assigning to readChunkSize instead of size? Because
> otherwise you're later going to call Java.io.reader.read() with a  
> negative
> number of bytes to read.


From ted.villalba at gmail.com  Sun Jul 29 15:45:07 2007
From: ted.villalba at gmail.com (Ted Villalba)
Date: Sun, 29 Jul 2007 15:45:07 -0700
Subject: [antlr-interest] Path-based template selection
Message-ID: <69fb4b090707291545g2282bdaau84992d062c3ef9f0@mail.gmail.com>

Hi,

I have question about path-dependent template selection...

I have a tree grammar rule to which there are two paths of arrival.
The template I call from that grammar rule will depend on from whence(?) it
arrived.
I tried passing scope fields upon which I hoped to base the template
selection, but they are not populated until after the fact.
What is a good approach to this undertaking?

Trying to simplify the grammar to make the point here, I hope it does so:

a : b ... //if I try to set a scope field here
   | c
b:  c
c: CHAR  call template1 //it will not exist here

vs

a : c
c: CHAR call template2



Thank you,
Ted
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070729/361bf8cc/attachment.html 

From rdclark at gmail.com  Sun Jul 29 16:02:32 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 29 Jul 2007 16:02:32 -0700
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <46ACF743.7050601@kortmann.de>
References: <46ACF743.7050601@kortmann.de>
Message-ID: <d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>

The comment at the top of that file says:

> This grammar requires ANTLR v3 (3.0b3 or higher)

And we're at 3.0b6. It should be fine.

 ...Richard

From rdclark at gmail.com  Sun Jul 29 16:29:10 2007
From: rdclark at gmail.com (Richard Clark)
Date: Sun, 29 Jul 2007 16:29:10 -0700
Subject: [antlr-interest] Path-based template selection
In-Reply-To: <69fb4b090707291545g2282bdaau84992d062c3ef9f0@mail.gmail.com>
References: <69fb4b090707291545g2282bdaau84992d062c3ef9f0@mail.gmail.com>
Message-ID: <d3992d900707291629g16b33276t1846226d899060ef@mail.gmail.com>

On 7/29/07, Ted Villalba <ted.villalba at gmail.com> wrote:

> a : b ... //if I try to set a scope field here
>    | c
> b:  c
> c: CHAR  call template1 //it will not exist here

That makes sense, as you're trying to set the field after rule b
returns. How about this:

a
scope { boolean usesB; }
   : b
   | c
   ;

// fragment marker not required, but keeps you from accidentally
calling this directly
// in the code that uses the parser.
fragment
b: { $a::usesB = true; } c ;

fragment
c: CHAR  call {$a::usesB ? ...



...Richard

From easjolly at ix.netcom.com  Sun Jul 29 17:44:36 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Sun, 29 Jul 2007 18:44:36 -0600
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream in the
	parser?
Message-ID: <E1IFJMd-00048k-L0@elasmtp-banded.atl.sa.earthlink.net>

Is there some reason not to have the parser add imaginary tokens to the
TokenStream?

Susan



From antlr-list at arizona-software.ch  Sun Jul 29 18:42:05 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 29 Jul 2007 18:42:05 -0700
Subject: [antlr-interest] Reloading Externally Edited Files in
	ANTLRWorks?
In-Reply-To: <200706251311.59081.rschulz@sonic.net>
References: <200706251311.59081.rschulz@sonic.net>
Message-ID: <1B7EFE48-276D-4A74-B8B9-B6D57181AC83@arizona-software.ch>

This issue (which happens only in Desktop Mode) has been fixed in the  
upcoming 1.1.1 release.

Regards,

Jean

On Jun 25, 2007, at 1:11 PM, Randall R Schulz wrote:

> Hi,
>
> Is there a way to get ANTLRWorks to reload a source file it has open
> when that file has been modified by another program? Currently, I'm
> quitting and restarting, which is tedious.
>
> I tried using Open Recent on a file that's open, but that doesn't  
> work.
>
> And there's a seeming anomaly in the interface. When no grammar source
> files are open, the menu bar becomes inactive, though the keyboard
> accelerators remain active.
>
>
> Randall Schulz


From fasmith718 at gmail.com  Sun Jul 29 19:07:45 2007
From: fasmith718 at gmail.com (Frank Smith)
Date: Sun, 29 Jul 2007 22:07:45 -0400
Subject: [antlr-interest] Control Flow in an Interpreter
Message-ID: <dea571e70707291907x66343476g3548f776f1451173@mail.gmail.com>

Hi all.  I have been using ANTLR 3.0 for a class project to make an
interpreter.  However, all of the professor's notes date back from the days
of ANTLR 2.0.  When I asked him for advice as to how to implement control
flow in an interpreter (e.g. if statements, function calls, etc.) he refers
me to ANTLR 2.7.2 generated code.

In the walker code he gave me the expr rule takes an AST as an argument:
public final  MxDataType  expr(AST _t) throws RecognitionException {...}

The expr code that ANTLR 3.0 generates for me does not take an argument,
however.  I have combed over the wiki for ANTLR 3.0 and closely looked over
the "moving from ANTLR 2.0 to ANTLR 3.0" article.

The best info i found was in the "creating an interpreter" article.  But is
the best way to implement general control flow in ANTLR 3.0 to push nodes
onto the input stack as in the interpreter article?  I would appreciate a
little help from the veterans here as my prof. has yet to update any of his
info for the new frontier of 3.0.

Thanks in advance!
     Frank A. Smith
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070729/78e37d2e/attachment.html 

From antlr-list at arizona-software.ch  Sun Jul 29 19:51:49 2007
From: antlr-list at arizona-software.ch (Jean Bovet)
Date: Sun, 29 Jul 2007 19:51:49 -0700
Subject: [antlr-interest] ANTLRWorks 1.1.1 released
Message-ID: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>

Hi,

A maintenance release of ANTLRWorks has been released to fix the  
following issues:

     [AW-98] - Fail to detect external file modification in desktop mode
     [AW-97] - Error messages are not reset when checking the grammar
     [AW-99] - Find does not wrap when reaching end/beginning of  
document

It can be downloaded from the usual place www.antlr.org/works.

Regards,

Jean

From email at kortmann.de  Mon Jul 30 00:43:37 2007
From: email at kortmann.de (Martin Kortmann)
Date: Mon, 30 Jul 2007 09:43:37 +0200
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>
References: <46ACF743.7050601@kortmann.de>
	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>
Message-ID: <46AD96A9.9040603@kortmann.de>

Richard Clark schrieb:
> The comment at the top of that file says:
> 
>> This grammar requires ANTLR v3 (3.0b3 or higher)
> 
> And we're at 3.0b6. It should be fine.
> 
>  ...Richard
> 

hmm, when i start it inside the ANTLRWorks debugger, then it
goes directly into the state "abstract_declarator" and throws
an NoViableAltException.

Martin

From jonathan.thomas at ca.com  Mon Jul 30 00:45:15 2007
From: jonathan.thomas at ca.com (Jonathan Thomas)
Date: Mon, 30 Jul 2007 17:45:15 +1000
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <46AD96A9.9040603@kortmann.de>
References: <46ACF743.7050601@kortmann.de>	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>
	<46AD96A9.9040603@kortmann.de>
Message-ID: <46AD970B.8000501@ca.com>

An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070730/b56d0ee6/attachment.html 

From antlr at mirality.co.nz  Mon Jul 30 00:55:21 2007
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Mon, 30 Jul 2007 19:55:21 +1200
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream in
 the parser?
In-Reply-To: <E1IFJMd-00048k-L0@elasmtp-banded.atl.sa.earthlink.net>
References: <E1IFJMd-00048k-L0@elasmtp-banded.atl.sa.earthlink.net>
Message-ID: <20070730075518.8308E11EB22@www.antlr.org>

At 12:44 30/07/2007, Susan Jolly wrote:
 >Is there some reason not to have the parser add imaginary tokens 
to
 >the TokenStream?

Assuming you meant 'lexer' instead of 'parser', then I don't think 
so, except that by definition (at least my definition), if a lexer 
outputs tokens then they're not imaginary any more :)


From email at kortmann.de  Mon Jul 30 00:56:03 2007
From: email at kortmann.de (Martin Kortmann)
Date: Mon, 30 Jul 2007 09:56:03 +0200
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <46AD970B.8000501@ca.com>
References: <46ACF743.7050601@kortmann.de>	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>	<46AD96A9.9040603@kortmann.de>
	<46AD970B.8000501@ca.com>
Message-ID: <46AD9993.3030603@kortmann.de>

Jonathan Thomas schrieb:
>  What input did you feed it?

int main ()
{
   return 0;
}

for example, or a simple

int i;

or simply nothing.

Martin

From ruth.karl at gmx.de  Mon Jul 30 01:07:12 2007
From: ruth.karl at gmx.de (Ruth Karl)
Date: Mon, 30 Jul 2007 10:07:12 +0200
Subject: [antlr-interest] Strange behaviour of AnTLRWorks with Synpreds...
In-Reply-To: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
References: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
Message-ID: <46AD9C30.1020906@gmx.de>

Hi,

last week I had a lexer problem and tried to solve it using synpreds.
I then wanted to try another solution and eliminated them from my 
grammar again. But now I keep getting a FailedPredicateException in the 
Antlworks Interpreter.
I restarted AntlrWorks, regenerated the code, openend the file again, 
restarted my system... the problem remains the same...
I'll attach my grammar, so you can see: there is no predicate left in it.
Any idea what could make Antlrworks work again?

Ruth

(AnTLRWorks 1.1.1., java 1.6.0_01, Vista Business)


Jean Bovet schrieb:
> Hi,
>
> A maintenance release of ANTLRWorks has been released to fix the 
> following issues:
>
>     [AW-98] - Fail to detect external file modification in desktop mode
>     [AW-97] - Error messages are not reset when checking the grammar
>     [AW-99] - Find does not wrap when reaching end/beginning of document
>
> It can be downloaded from the usual place www.antlr.org/works.
>
> Regards,
>
> Jean
>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: JSP.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20070730/aa35b8d9/attachment.pl 

From tbrandonau at gmail.com  Mon Jul 30 01:12:43 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Mon, 30 Jul 2007 18:12:43 +1000
Subject: [antlr-interest] Strange behaviour of AnTLRWorks with
	Synpreds...
In-Reply-To: <46AD9C30.1020906@gmx.de>
References: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
	<46AD9C30.1020906@gmx.de>
Message-ID: <ebc876d70707300112s42e8cd7brd33270425d0d2e62@mail.gmail.com>

On 7/30/07, Ruth Karl <ruth.karl at gmx.de> wrote:
> Hi,
>
> last week I had a lexer problem and tried to solve it using synpreds.
> I then wanted to try another solution and eliminated them from my
> grammar again. But now I keep getting a FailedPredicateException in the
> Antlworks Interpreter.
> I restarted AntlrWorks, regenerated the code, openend the file again,
> restarted my system... the problem remains the same...
> I'll attach my grammar, so you can see: there is no predicate left in it.
> Any idea what could make Antlrworks work again?
Backtracking causes ANTLR to generate predicates to solve ambiguities.
So either remove backtracking and fix the ambiguities or switch to the
debugger (using remote debug as you're language is C#).

Tom.
>
> Ruth
>
> (AnTLRWorks 1.1.1., java 1.6.0_01, Vista Business)
>
>
> grammar JSP;
>
> options {
> language = CSharp;
>                output=AST;
> backtrack=true;
>                memoize=true;
> }
>

From ohumbel at gmail.com  Mon Jul 30 07:15:20 2007
From: ohumbel at gmail.com (Oti)
Date: Mon, 30 Jul 2007 16:15:20 +0200
Subject: [antlr-interest] ANTLRWorks 1.1.1 released
In-Reply-To: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
References: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
Message-ID: <ba90a0a90707300715y7e4efd26ne4d667e029154dda@mail.gmail.com>

FYI:

I had very nasty painting problems (Color out of range) and JVM crashes under
 - Ubuntu 6.10 (Edgy Eft)
 - Sun JDK 1.5.0_08-b03

Switching to Sun JDK 1.6.0_02-b05 solved these problems.

best wishes
Oti
(@Jean: from Switzerland)

On 7/30/07, Jean Bovet <antlr-list at arizona-software.ch> wrote:
> Hi,
>
> A maintenance release of ANTLRWorks has been released to fix the
> following issues:
>
>      [AW-98] - Fail to detect external file modification in desktop mode
>      [AW-97] - Error messages are not reset when checking the grammar
>      [AW-99] - Find does not wrap when reaching end/beginning of
> document
>
> It can be downloaded from the usual place www.antlr.org/works.
>
> Regards,
>
> Jean
>

From easjolly at ix.netcom.com  Mon Jul 30 07:19:15 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Mon, 30 Jul 2007 08:19:15 -0600
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream in
	the PARSER?
In-Reply-To: <200707300355.1ifq625Nv3Nl34b0@mx-clapper.atl.sa.earthlink.net>
Message-ID: <E1IFW4x-0008OZ-Rj@elasmtp-junco.atl.sa.earthlink.net>

I did mean parser. I'm referring to inserting additional tokens into the
previously generated TokenStream passed from the lexer to the parser. These
tokens are "imaginary" in the sense that they don't reference any of the
input text tokenized by the lexer.

This is somewhat the opposite of using a StringTemplate.  A StringTemplate
is essentially text with holes in it where you stick pieces of the input. In
my case I'm using the parser to find occasional virtual holes in the input
where I need to insert additional text. Doing this directly to the
TokenStream turns out to the most useful approach for this application.

Susan



From rschulz at sonic.net  Mon Jul 30 07:19:52 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Mon, 30 Jul 2007 07:19:52 -0700
Subject: [antlr-interest] ANTLRWorks 1.1.1 released
In-Reply-To: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
References: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
Message-ID: <200707300719.52458.rschulz@sonic.net>

On Sunday 29 July 2007 19:51, Jean Bovet wrote:
> Hi,
>
> A maintenance release of ANTLRWorks has been released to fix the
> following issues:
>
>      [AW-98] - Fail to detect external file modification in desktop
> mode [AW-97] - Error messages are not reset when checking the grammar
> [AW-99] - Find does not wrap when reaching end/beginning of document
>
> It can be downloaded from the usual place www.antlr.org/works.

Which is still exhibiting stalled transfers...


> Regards,
>
> Jean


Randall Sculz

From john.farr at medtronic.com  Mon Jul 30 07:36:09 2007
From: john.farr at medtronic.com (Farr, John)
Date: Mon, 30 Jul 2007 09:36:09 -0500
Subject: [antlr-interest] Syntactic predicates don't work in lexer grammar
Message-ID: <CE795F47110FDD4497AE9724FA7FE67501F9D3AC@MSPM1BMSGM08.ent.core.medtronic.com>


I have a situation where (I think) I need a syntactic predicate in my
lexer grammar. I have to deal with a section of input that contains
arbitrary text terminated by a keyword. This is similar to the
multi-line comment case, but differs in that the keyword is case
insensitive. Here's the relevant part of the grammar...


lexer grammar example;

fragment SOME_TEXT_BEGIN
    : ('S'|'s') ('O'|'o') ('M'|'m') ('E'|'e')
      '_' ('T'|'t') ('E'|'e') ('X'|'x') ('T'|'t')
    ;

fragment SOME_TEXT_END
    : ('S'|'s') ('O'|'o') ('M'|'m') ('E'|'e')
      '_' ('T'|'t') ('E'|'e') ('X'|'x') ('T'|'t')
      '_' ('E'|'e') ('N'|'n') ('D'|'d')
    ;

SOME_TEXT
    : SOME_TEXT_BEGIN
      ( options {greedy = false;} . )*
      ( SOME_TEXT_END ) => SOME_TEXT_END
    ;


In the generated code there is the expected call to synpred1(), but the
problem is that no synpred1() function is generated!

I've had to resort to the following definition for SOME_TEXT...


SOME_TEXT
    : SOME_TEXT_BEGIN
      ( options {greedy = false;} . )*
      ( 'SOME_TEXT_END' | 'some_text_end' | 'Some_Text_End' )
    ;


As you can see, providing explicit alternatives for each combination of
upper/lower case letters would be less than desirable.

Is this a bug in ANTLR or am I missing something?
Is there some other way to deal with a situation like this?

Thanks,
John

___________________________________________________________________________________________________
CONFIDENTIALITY AND PRIVACY NOTICE
Information transmitted by this email is proprietary to Medtronic and is intended for use only by the individual or entity to which it is addressed, and may contain information that is private, privileged, confidential or exempt from disclosure under applicable law. If you are not the intended recipient or it appears that this mail has been forwarded to you without proper authority, you are notified that any use or dissemination of this information in any manner is strictly prohibited. In such cases, please delete this mail from your records.

To view this notice in other languages you can either select the following link or manually copy and paste the link into the address bar of a web browser: http://emaildisclaimer.medtronic.com

From parrt at cs.usfca.edu  Mon Jul 30 08:58:25 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Jul 2007 08:58:25 -0700
Subject: [antlr-interest] moving antlr.org hardware to new network
Message-ID: <A055F821-8725-4F39-8B7B-2405426E4FF1@cs.usfca.edu>

We think we found a network (back here in the CS net) that does not  
have the stall issue.  Probably will move today.  Gotta get some  
"muscle" (i.e., burly grad students) to go up the hill to get the  
machine ;)

Ter

From jimi at temporal-wave.com  Mon Jul 30 09:03:01 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 Jul 2007 09:03:01 -0700
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream
	inthe PARSER?
In-Reply-To: <E1IFW4x-0008OZ-Rj@elasmtp-junco.atl.sa.earthlink.net>
References: <200707300355.1ifq625Nv3Nl34b0@mx-clapper.atl.sa.earthlink.net>
	<E1IFW4x-0008OZ-Rj@elasmtp-junco.atl.sa.earthlink.net>
Message-ID: <051466DAA0D608439E196797955018D76F3B@wavemachine.temporal-wave.com>

No reason at all not to do this and in fact the tree rewriting stuff is
designed to insert tokens that you declare in the tokens{} section when
you need them. Usually you use them to make the tree structure more
apparent, or unambiguous or perhaps to insert default values for
functions and so on.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Susan Jolly
> Sent: Monday, July 30, 2007 7:19 AM
> To: 'Gavin Lambert'; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Adding imaginary tokens to the
> TokenStream inthe PARSER?
> 
> I did mean parser. I'm referring to inserting additional tokens into
> the
> previously generated TokenStream passed from the lexer to the parser.
> These
> tokens are "imaginary" in the sense that they don't reference any of
> the
> input text tokenized by the lexer.
> 
> This is somewhat the opposite of using a StringTemplate.  A
> StringTemplate
> is essentially text with holes in it where you stick pieces of the
> input. In
> my case I'm using the parser to find occasional virtual holes in the
> input
> where I need to insert additional text. Doing this directly to the
> TokenStream turns out to the most useful approach for this
application.
> 
> Susan
> 


From sshkedy at hotmail.com  Mon Jul 30 09:15:50 2007
From: sshkedy at hotmail.com (Sagi Shkedy)
Date: Mon, 30 Jul 2007 16:15:50 +0000
Subject: [antlr-interest] Need help building a simpler C# compiler/string
 and number processor and willing to pay for it
Message-ID: <BAY115-W6F03F04F550EB34D0D2EFB4EE0@phx.gbl>

Greetings,I need to build a simple string and number processor program for a project, it basically takes some strings, numbers and operators/functions and executes them until a resulting string is obtained. It's a fairly limited number of commands and operators that I need to implement so in the right hands this should not be complicated at all.It will take me days to figure out how to do this with ANTLR. I would be very happy to pay someone to help me with this (i.e. build it and give me the source code).If there is anyone on this list that is interested please email me thanks.SShkedy at Hotmail dot Come
_________________________________________________________________
Local listings, incredible imagery, and driving directions - all in one place! Find it!
http://maps.live.com/?wip=69&FORM=MGAC01
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070730/54241682/attachment-0001.html 

From easjolly at ix.netcom.com  Mon Jul 30 09:59:27 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Mon, 30 Jul 2007 10:59:27 -0600
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream in
	the PARSER? (Bad idea)
In-Reply-To: <200707300355.1ifq625Nv3Nl34b0@mx-clapper.atl.sa.earthlink.net>
Message-ID: <E1IFYZz-0000JC-Mx@elasmtp-spurfowl.atl.sa.earthlink.net>

OK, I've now answered my own question in the negative. One does NOT want to
actually insert new tokens into an existing TokenStream because the
TokenStream is a List, not a LinkedList, and each Token keeps track of its
index into this list.  If you were to insert a new Token somewhere in the
middle of the List, you'd have to reset all of the indices for Tokens
following the insert.

As its comments make clear, the "fiendishly clever" TokenRewriteStream
doesn't actually insert Tokens.

I need to insert an object, not just text. I had been using imaginary Tree
nodes but saw some awkwardness.  I'll need to think about this some more.

Susan



From parrt at cs.usfca.edu  Mon Jul 30 10:54:55 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Jul 2007 10:54:55 -0700
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream in
	the PARSER? (Bad idea)
In-Reply-To: <E1IFYZz-0000JC-Mx@elasmtp-spurfowl.atl.sa.earthlink.net>
References: <E1IFYZz-0000JC-Mx@elasmtp-spurfowl.atl.sa.earthlink.net>
Message-ID: <D624D509-63C4-407A-B677-CBDAB6776575@cs.usfca.edu>


On Jul 30, 2007, at 9:59 AM, Susan Jolly wrote:

> OK, I've now answered my own question in the negative. One does NOT  
> want to
> actually insert new tokens into an existing TokenStream because the
> TokenStream is a List, not a LinkedList, and each Token keeps track  
> of its
> index into this list.  If you were to insert a new Token somewhere  
> in the
> middle of the List, you'd have to reset all of the indices for Tokens
> following the insert.
>
> As its comments make clear, the "fiendishly clever" TokenRewriteStream
> doesn't actually insert Tokens.
>
> I need to insert an object, not just text.

Hi Susan,

this should be no problem. the rewrite engine actually accepts  
objects not strings. When it goes to string, then it evaluates  
everything.

> I had been using imaginary Tree
> nodes but saw some awkwardness.  I'll need to think about this some  
> more.

The lexer is free to insert as many imaginary nodes as it wants; for  
example, a Python lexer needs to insert a number of DEDENT tokens.  
The parser should not be inserting tokens into the stream that it is  
currently parsing. perhaps you could explain your problem a little  
bit more and I can give you a better answer.

Ter

From email at kortmann.de  Mon Jul 30 11:10:46 2007
From: email at kortmann.de (Martin Kortmann)
Date: Mon, 30 Jul 2007 20:10:46 +0200
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <46AD9993.3030603@kortmann.de>
References: <46ACF743.7050601@kortmann.de>	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>	<46AD96A9.9040603@kortmann.de>	<46AD970B.8000501@ca.com>
	<46AD9993.3030603@kortmann.de>
Message-ID: <46AE29A6.4070800@kortmann.de>

Martin Kortmann schrieb:
> Jonathan Thomas schrieb:
>>  What input did you feed it?
> 
> int main ()
> {
>    return 0;
> }
> 
> for example, or a simple
> 
> int i;
> 
> or simply nothing.
> 
> Martin
> 

Hi,

Is someone able to validate this behavier or
can point me into the right direction?

Just load this grammar file into ANTLRWorks and
start the Debugger (or Interpreter) with some of
the inputs described earlier.

Thank you
Martin

From parrt at cs.usfca.edu  Mon Jul 30 11:18:45 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Jul 2007 11:18:45 -0700
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <46AE29A6.4070800@kortmann.de>
References: <46ACF743.7050601@kortmann.de>	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>	<46AD96A9.9040603@kortmann.de>	<46AD970B.8000501@ca.com>
	<46AD9993.3030603@kortmann.de> <46AE29A6.4070800@kortmann.de>
Message-ID: <AEC5840D-183B-430F-BF03-434AA56C8FA8@cs.usfca.edu>

It worked for me yesterday from cmd-line,  haven't tried AW.
Ter
On Jul 30, 2007, at 11:10 AM, Martin Kortmann wrote:

> Martin Kortmann schrieb:
>> Jonathan Thomas schrieb:
>>>  What input did you feed it?
>>
>> int main ()
>> {
>>    return 0;
>> }
>>
>> for example, or a simple
>>
>> int i;
>>
>> or simply nothing.
>>
>> Martin
>>
>
> Hi,
>
> Is someone able to validate this behavier or
> can point me into the right direction?
>
> Just load this grammar file into ANTLRWorks and
> start the Debugger (or Interpreter) with some of
> the inputs described earlier.
>
> Thank you
> Martin


From email at kortmann.de  Mon Jul 30 12:21:18 2007
From: email at kortmann.de (Martin Kortmann)
Date: Mon, 30 Jul 2007 21:21:18 +0200
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <AEC5840D-183B-430F-BF03-434AA56C8FA8@cs.usfca.edu>
References: <46ACF743.7050601@kortmann.de>	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>	<46AD96A9.9040603@kortmann.de>	<46AD970B.8000501@ca.com>	<46AD9993.3030603@kortmann.de>
	<46AE29A6.4070800@kortmann.de>
	<AEC5840D-183B-430F-BF03-434AA56C8FA8@cs.usfca.edu>
Message-ID: <46AE3A2E.4070104@kortmann.de>

Hi Terence

Terence Parr schrieb:
> It worked for me yesterday from cmd-line,  haven't tried AW.
> Ter

I have tried it, It works from Commandline. Thank you
for this hint.

Maybe someone can try to start it in ANTLRWorks?

Martin

From email at kortmann.de  Mon Jul 30 12:29:59 2007
From: email at kortmann.de (Martin Kortmann)
Date: Mon, 30 Jul 2007 21:29:59 +0200
Subject: [antlr-interest] ANSI-C grammar example outdated?
In-Reply-To: <AEC5840D-183B-430F-BF03-434AA56C8FA8@cs.usfca.edu>
References: <46ACF743.7050601@kortmann.de>	<d3992d900707291602n90d0a3bhafe9e1eb01616c77@mail.gmail.com>	<46AD96A9.9040603@kortmann.de>	<46AD970B.8000501@ca.com>	<46AD9993.3030603@kortmann.de>
	<46AE29A6.4070800@kortmann.de>
	<AEC5840D-183B-430F-BF03-434AA56C8FA8@cs.usfca.edu>
Message-ID: <46AE3C37.5030108@kortmann.de>


OK, it was my fault. Forget everything, i have
choosen the wrong start rule. hmpfff

Martin

From easjolly at ix.netcom.com  Mon Jul 30 13:53:53 2007
From: easjolly at ix.netcom.com (Susan Jolly)
Date: Mon, 30 Jul 2007 14:53:53 -0600
Subject: [antlr-interest] Using the TokenRewriteStream
In-Reply-To: <200707300355.1ifq625Nv3Nl34b0@mx-clapper.atl.sa.earthlink.net>
Message-ID: <E1IFcEv-0007qg-1r@elasmtp-kukur.atl.sa.earthlink.net>

Thanks Ter.  

First, yes I know about inserting imaginary/extra Tokens in the lexer and
I've found that very useful.  However, in my app it is much easier to
discover the need for certain insertions in the parser rather than in the
lexer.  (BTW, here's where ANTLR v3 shines.  Previous print-to-braille
translators use complex custom-coded finite state machines to determine
these insertions.)

I see now by looking at the source code instead of the comments that the
Rewrite operation does accept Objects.

However, I'm probably going to need modify TokenRewriteStream.toString() to
use and return a buffer that is a List (of imaginary and real Tokens) rather
than a StringBuffer.

One of the things I need to be able to do is to interline the input (which
is print text) with its braille translation.  ("Interline" means alternating
a line of print with a line of braille.) This requires adding line breaks to
the input so as to keep it in sync with the braille since each line of the
braille translation has a maximum length and must be terminated by a hard
return.  (The print lines typically have more characters than the braille
lines.) This alone I could do by estimating the length of a braille line by
totaling the String length of the real Tokens and then invoking toString
again with a smaller "end" index if the imaginary Tokens added by the
Rewrite make the line too long. (I can't put the line breaks in at a later
point because I'd lose the synchronization with the input.)

However, there are multiple ways to represent braille and a sighted user
might want more than one of them. In other words, the general case is that
the output consists of sets of lines where each set has one or more of the
following: a line of print, a line of standard braille (that controls the
line length), and possibly additional lines with other alternatives.

This is (I think) easier to do if I associate each Token with an object that
has all these multiple alternatives which is why I want to get a List of the
Tokens rather than the concatenated text.

The pictures at the tops of these two pages show what the output looks like
except that the first one doesn't include the original print text.
http://www.dotlessbraille.org/screencap.htm
http://www.dotlessbraille.org/gemini.htm

Susan



From parrt at cs.usfca.edu  Mon Jul 30 14:44:35 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Jul 2007 14:44:35 -0700
Subject: [antlr-interest] antlr.org going down
Message-ID: <BB7F3CD0-D60F-4DB4-9568-190DC4EB5991@cs.usfca.edu>

howdy...moving server shortly...down for about an hour.
Ter

From parrt at cs.usfca.edu  Mon Jul 30 18:41:51 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 30 Jul 2007 18:41:51 -0700
Subject: [antlr-interest] antlr.org back up
Message-ID: <7CAE3A07-456C-49ED-A147-A13C81A5A564@cs.usfca.edu>

Hi,

antlr is back up.  Those who had stalls, please try:

http://www.antlr.org/movies/Sydney-JUG-June-20-2007.mp4

again.  This time it should be ok!

Ter


From brian at quiotix.com  Mon Jul 30 19:14:51 2007
From: brian at quiotix.com (Brian Goetz)
Date: Mon, 30 Jul 2007 22:14:51 -0400
Subject: [antlr-interest] Question: batch syntax diagram generation
Message-ID: <46AE9B1B.9000505@quiotix.com>

Hi;

Sorry if this has been answered before -- I tried searching the archives.

I have an ANTLR grammar.  I want, as part of my ANT build process, to 
generate a complete set of syntax diagrams for all the rules in my 
grammar, as PDF/EPS/PNG/BMP/anything files.  I don't mind if it shows up 
in one big file, or one per rule.  But I'd like to be able to do it 
without having to fire up ANTLRWorks (very cool!) and export them each 
manually.

Has anyone done anything like this?  If so, care to share the code or 
instructions?

Thanks!

From a.shneyderman at gmail.com  Mon Jul 30 23:20:48 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Tue, 31 Jul 2007 08:20:48 +0200
Subject: [antlr-interest] Global scopes for lexers
Message-ID: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>

I saw discussion on dynamic scopes for lexer (although have not tried
it - just did not need it yet). Is there a way to have global scope on
the lexer?

-- 
Thanks,
Alex.

From dave at badgers-in-foil.co.uk  Tue Jul 31 01:19:15 2007
From: dave at badgers-in-foil.co.uk (David Holroyd)
Date: Tue, 31 Jul 2007 08:19:15 +0000
Subject: [antlr-interest] Adding imaginary tokens to the TokenStream in
	the PARSER? (Bad idea)
In-Reply-To: <E1IFYZz-0000JC-Mx@elasmtp-spurfowl.atl.sa.earthlink.net>
References: <200707300355.1ifq625Nv3Nl34b0@mx-clapper.atl.sa.earthlink.net>
	<E1IFYZz-0000JC-Mx@elasmtp-spurfowl.atl.sa.earthlink.net>
Message-ID: <20070731081915.GA3962@badgers-in-foil.co.uk>

On Mon, Jul 30, 2007 at 10:59:27AM -0600, Susan Jolly wrote:
> OK, I've now answered my own question in the negative. One does NOT want to
> actually insert new tokens into an existing TokenStream because the
> TokenStream is a List, not a LinkedList, and each Token keeps track of its
> index into this list.  If you were to insert a new Token somewhere in the
> middle of the List, you'd have to reset all of the indices for Tokens
> following the insert.

I don't know if you've already got another approach worked out, but I've
implemented something that sounds very close to what you're talking
about myself.  i.e. tokens as a linked list, plus 'special' tokens
added by the parser to mark insertion points in the token stream (I
gave them the name 'placeholder' tokens).

My use-case starts with a desire to support format-preserving-
refactoring, and an AST which contains imaginary nodes,

  (CLASS_DEF
    ANNOTATIONS  <- imaginary
    MODIFIERS  <- imaginary
    IDENT
    (TYPE_BLOCK ...)
  )

but where some of the imaginary nodes may have no children (i.e. a class
may not actually have any annotations or modifier-keywords).  After tree
construction, the application processes the AST, and may want to do
something like add the 'public' keyword to the class def.

So, after the parser executes the 'modifiers' rule (which builds the
imaginary MODIFIERS AST node) I run an action which inserts a
PLACEHOLDER token into the token stream if-and-only-if the MODIFIERS
node lacks any real children.  The start/stop tokens for the MODIFIERS
node are then pointed at this PLACEHOLDER token (otherwise, ANTLR seems
to point start/stop at a 'nearby' token in the stream).

Then, when the application comes to add a PUBLIC child to the MODIFIERS
node, a special case will notice that a PLACEHOLDER token is present,
and the placeholder will be replaced in the token stream with the
token(s) that belong to the PUBLIC node.

If there was no PLACEHOLDER token added to the token stream, it would be
very difficult for the application code updating the AST to know exactly
where in the token stream to insert new tokens when a new child is added
to a previously empty imaginary AST node.


Does that make any sense? :)


The grammar in question is,

  http://svn.badgers-in-foil.co.uk/metaas/trunk/src/main/antlr/org/asdt/core/internal/antlr/AS3.g3

(i.e. see the placeholder() function defined near the top)


I'm not convinced that I've got the best approach though, since I'm
forever finding (and creating) bugs.


hope it helps, anyway,
dave

-- 
http://david.holroyd.me.uk/

From jaluber at gmx.de  Tue Jul 31 03:10:29 2007
From: jaluber at gmx.de (Johannes Luber)
Date: Tue, 31 Jul 2007 12:10:29 +0200
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
Message-ID: <46AF0A95.6080501@gmx.de>

Alex Shneyderman wrote:
> I saw discussion on dynamic scopes for lexer (although have not tried
> it - just did not need it yet). Is there a way to have global scope on
> the lexer?
> 
If I remember correctly, the fixes support both kinds of scopes.

Best regards,
Johannes Luber

From s.bejakovic at gmail.com  Tue Jul 31 06:27:13 2007
From: s.bejakovic at gmail.com (=?ISO-8859-2?Q?sr=F0an_bejakovi=E6?=)
Date: Tue, 31 Jul 2007 15:27:13 +0200
Subject: [antlr-interest] Antlr grammar for regular expressions
Message-ID: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>

Hi all,

does anyone know of an Antlr grammar for parsing (perl or java) regular
expressions? I started implementing something like this, but I don't want to
(suboptimally) reinvent something that probably already exists. Thanks,

Srdan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070731/211b23e7/attachment.html 

From gudnabrsam at yahoo.com  Tue Jul 31 07:28:39 2007
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Tue, 31 Jul 2007 07:28:39 -0700 (PDT)
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
Message-ID: <656448.84317.qm@web55112.mail.re4.yahoo.com>


--- sr?an bejakovi? <s.bejakovic at gmail.com> wrote:

> Hi all,
> 
> does anyone know of an Antlr grammar for parsing
> (perl or java) regular
> expressions? I started implementing something like
> this, but I don't want to
> (suboptimally) reinvent something that probably
> already exists. Thanks,

Why would you need to do this?  There are enough regex
libraries available that I can't imagine why you would
need to implement your own... ANTLR is cool, but if
you're already looking for prior art, why is it
important that it be implemented using ANTLR?

-Matt

> 
> Srdan
> 



       
____________________________________________________________________________________
Take the Internet to Go: Yahoo!Go puts the Internet in your pocket: mail, news, photos & more. 
http://mobile.yahoo.com/go?refer=1GNXIC

From s.bejakovic at gmail.com  Tue Jul 31 07:32:46 2007
From: s.bejakovic at gmail.com (=?ISO-8859-2?Q?sr=F0an_bejakovi=E6?=)
Date: Tue, 31 Jul 2007 16:32:46 +0200
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <656448.84317.qm@web55112.mail.re4.yahoo.com>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
	<656448.84317.qm@web55112.mail.re4.yahoo.com>
Message-ID: <52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>

I'm trying to write an engine that goes the other way, meaning it generates
strings that conform to a regular expression (for populating data files for
testing).

On 7/31/07, Matt Benson <gudnabrsam at yahoo.com> wrote:
>
>
> --- sr?an bejakovi? <s.bejakovic at gmail.com> wrote:
>
> > Hi all,
> >
> > does anyone know of an Antlr grammar for parsing
> > (perl or java) regular
> > expressions? I started implementing something like
> > this, but I don't want to
> > (suboptimally) reinvent something that probably
> > already exists. Thanks,
>
> Why would you need to do this?  There are enough regex
> libraries available that I can't imagine why you would
> need to implement your own... ANTLR is cool, but if
> you're already looking for prior art, why is it
> important that it be implemented using ANTLR?
>
> -Matt
>
> >
> > Srdan
> >
>
>
>
>
>
> ____________________________________________________________________________________
> Take the Internet to Go: Yahoo!Go puts the Internet in your pocket: mail,
> news, photos & more.
> http://mobile.yahoo.com/go?refer=1GNXIC
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070731/e6d13b85/attachment-0001.html 

From email at kortmann.de  Tue Jul 31 07:33:22 2007
From: email at kortmann.de (Martin Kortmann)
Date: Tue, 31 Jul 2007 16:33:22 +0200
Subject: [antlr-interest] parsing only inside of C Comments?
Message-ID: <46AF4832.6080101@kortmann.de>

Hello,

I like to parse some pattern that occur only inside
of C Comments. Everything other should be ignored.
Has someone any Hints for me how i this can be done?

Martin

From a.shneyderman at gmail.com  Tue Jul 31 07:39:12 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Tue, 31 Jul 2007 16:39:12 +0200
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <656448.84317.qm@web55112.mail.re4.yahoo.com>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
	<656448.84317.qm@web55112.mail.re4.yahoo.com>
Message-ID: <693a69ba0707310739g2e8f700dg63506b24b30af79e@mail.gmail.com>

If you want to generate a visual DFA representation
for the regex you would need to parse it.

:-) And I do not think there is a ton of libraries that do this (I
recall I was looking for one a while back)


On 7/31/07, Matt Benson <gudnabrsam at yahoo.com> wrote:
>
> --- sr?an bejakovi? <s.bejakovic at gmail.com> wrote:
>
> > Hi all,
> >
> > does anyone know of an Antlr grammar for parsing
> > (perl or java) regular
> > expressions? I started implementing something like
> > this, but I don't want to
> > (suboptimally) reinvent something that probably
> > already exists. Thanks,
>
> Why would you need to do this?  There are enough regex
> libraries available that I can't imagine why you would
> need to implement your own... ANTLR is cool, but if
> you're already looking for prior art, why is it
> important that it be implemented using ANTLR?
>
> -Matt
>
> >
> > Srdan
> >
>
>
>
>
> ____________________________________________________________________________________
> Take the Internet to Go: Yahoo!Go puts the Internet in your pocket: mail, news, photos & more.
> http://mobile.yahoo.com/go?refer=1GNXIC
>


-- 
Thanks,
Alex.

From gudnabrsam at yahoo.com  Tue Jul 31 07:39:32 2007
From: gudnabrsam at yahoo.com (Matt Benson)
Date: Tue, 31 Jul 2007 07:39:32 -0700 (PDT)
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>
Message-ID: <260186.77399.qm@web55114.mail.re4.yahoo.com>


--- sr?an bejakovi? <s.bejakovic at gmail.com> wrote:

> I'm trying to write an engine that goes the other
> way, meaning it generates
> strings that conform to a regular expression (for
> populating data files for
> testing).

Well.... good answer.  :)  I'm out!

-Matt

> 
> On 7/31/07, Matt Benson <gudnabrsam at yahoo.com>
> wrote:
> >
> >
> > --- sr?an bejakovi? <s.bejakovic at gmail.com> wrote:
> >
> > > Hi all,
> > >
> > > does anyone know of an Antlr grammar for parsing
> > > (perl or java) regular
> > > expressions? I started implementing something
> like
> > > this, but I don't want to
> > > (suboptimally) reinvent something that probably
> > > already exists. Thanks,
> >
> > Why would you need to do this?  There are enough
> regex
> > libraries available that I can't imagine why you
> would
> > need to implement your own... ANTLR is cool, but
> if
> > you're already looking for prior art, why is it
> > important that it be implemented using ANTLR?
> >
> > -Matt
> >
> > >
> > > Srdan
> > >
> >
> >
> >
> >
> >
> >
>
____________________________________________________________________________________
> > Take the Internet to Go: Yahoo!Go puts the
> Internet in your pocket: mail,
> > news, photos & more.
> > http://mobile.yahoo.com/go?refer=1GNXIC
> >
> 



      ____________________________________________________________________________________
Shape Yahoo! in your own image.  Join our Network Research Panel today!   http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 



From kroepke at classdump.org  Tue Jul 31 07:53:17 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 31 Jul 2007 16:53:17 +0200
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
Message-ID: <EC88CBED-11EF-4A18-BE01-583DF10FD190@classdump.org>


On Jul 31, 2007, at 3:27 PM, sr?an bejakovi? wrote:

> does anyone know of an Antlr grammar for parsing (perl or java)  
> regular
> expressions? I started implementing something like this, but I  
> don't want to
> (suboptimally) reinvent something that probably already exists.  
> Thanks,

I have not come across one, sadly. It would be nice to have for the  
reasons mentioned
by others. Especially for really unreadable regexes ;)

Just found this: <http://www.zenspider.com/Languages/PCCTS/ 
Grammars.html>, but it's not what I'd call complete...

What kind of level of support do you need? If you are shooting for a  
complete Perl5 regex grammar, it could
become involved (esp. if you need to support things like Perl's  
extended regexes, with its lookahead assertions
and the like), but if you just want to stick with the "traditional"  
subset, it shouldn't be too hard to pull off.

I'm kinda interested in building something like this, if only to see  
my colleagues gasp ;)
And for generating tests it's nice, too...

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From ohumbel at gmail.com  Tue Jul 31 07:58:05 2007
From: ohumbel at gmail.com (Oti)
Date: Tue, 31 Jul 2007 16:58:05 +0200
Subject: [antlr-interest] ANTLRWorks 1.1.1 released
In-Reply-To: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
References: <20A2CF04-C4F0-4434-BA34-64F4D84D3E32@arizona-software.ch>
Message-ID: <ba90a0a90707310758h2c0603b7g23dd1615c1d3cd78@mail.gmail.com>

Jean,

many thanks for fixing the rule display of rules like:

ID	:	( 'a' .. 'z' | 'A'.. 'Z' | '_' | '#' ) ( 'a' .. 'z' | 'A' .. 'Z'
| '_' | '$' | '#' | '0' .. '9' ) * ;

Those were really confusing before !

best wishes,
Oti.

On 7/30/07, Jean Bovet <antlr-list at arizona-software.ch> wrote:
> Hi,
>
> A maintenance release of ANTLRWorks has been released to fix the
> following issues:
>
>      [AW-98] - Fail to detect external file modification in desktop mode
>      [AW-97] - Error messages are not reset when checking the grammar
>      [AW-99] - Find does not wrap when reaching end/beginning of
> document
>
> It can be downloaded from the usual place www.antlr.org/works.
>
> Regards,
>
> Jean
>

From rschulz at sonic.net  Tue Jul 31 08:02:58 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 31 Jul 2007 08:02:58 -0700
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
	<656448.84317.qm@web55112.mail.re4.yahoo.com>
	<52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>
Message-ID: <200707310802.58549.rschulz@sonic.net>

On Tuesday 31 July 2007 07:32, sr?an bejakovi? wrote:
> I'm trying to write an engine that goes the other way, meaning it
> generates strings that conform to a regular expression (for
> populating data files for testing).

I've done this once, long ago. In C.

You'll want to be sure to only allow finite DFAs. Any with unbounded 
closures will generate a (countably) infinite number of strings, of 
course.

If for some reason you need to do this, then you'll need to create an 
API that allows the client to pull successively synthesized strings 
rather than precompute them into a collection. A stream-oriented 
interface might work, if it's based on a flow-controlled model.


Randall Schulz

From rschulz at sonic.net  Tue Jul 31 08:10:14 2007
From: rschulz at sonic.net (Randall R Schulz)
Date: Tue, 31 Jul 2007 08:10:14 -0700
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
	<656448.84317.qm@web55112.mail.re4.yahoo.com>
	<52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>
Message-ID: <200707310810.14976.rschulz@sonic.net>

On Tuesday 31 July 2007 07:32, sr?an bejakovi? wrote:
> I'm trying to write an engine that goes the other way, meaning it
> generates strings that conform to a regular expression (for
> populating data files for testing).

By the way, why don't you use the shell syntax for RE-based synthesis?

E.g.:

% showargs foo\ {is,may\ be,is{,\ definitely}\ not}\ bar
4 arguments:
        "foo is bar"
        "foo may be bar"
        "foo is not bar"
        "foo is definitely not bar"

(The backslashes are necessary because in the BASH shell quoting an 
argument inhibits brace expansion.}


When I wrote that old C regular expression library, I had modular 
front-end parsers, since there were and continue to be so many dialects 
of regular expression, including highly disparate ones such as the 
shell's brace-expansion notation.


Randall Schulz

From kroepke at classdump.org  Tue Jul 31 08:15:50 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 31 Jul 2007 17:15:50 +0200
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <200707310810.14976.rschulz@sonic.net>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
	<656448.84317.qm@web55112.mail.re4.yahoo.com>
	<52f6e5280707310732n79658b44xb009ffe3dbb541fb@mail.gmail.com>
	<200707310810.14976.rschulz@sonic.net>
Message-ID: <D3662922-C1DC-45DB-A4E6-F0E49784143A@classdump.org>


On Jul 31, 2007, at 5:10 PM, Randall R Schulz wrote:

> By the way, why don't you use the shell syntax for RE-based synthesis?

I would imagine that the OP has a lot of regexes already written in  
some dialect
and now needs to parse them, to do something with the AST (i.e.  
generate test strings).

In my case, I have been thinking about doing a visualization feature,  
or live interpreted
testing of regexes. Esp. when they get big and ugly, that could speed  
me (and others) up a lot.

For that reason alone, having a Perl-compatible regex grammar would  
be neat.

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Tue Jul 31 08:26:17 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Jul 2007 08:26:17 -0700
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
Message-ID: <C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>


On Jul 30, 2007, at 11:20 PM, Alex Shneyderman wrote:

> I saw discussion on dynamic scopes for lexer (although have not tried
> it - just did not need it yet). Is there a way to have global scope on
> the lexer?

It's unsupported.  May i ask why you want them?
Ter


From a.shneyderman at gmail.com  Tue Jul 31 08:51:48 2007
From: a.shneyderman at gmail.com (Alex Shneyderman)
Date: Tue, 31 Jul 2007 17:51:48 +0200
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
Message-ID: <693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>

> It's unsupported.  May i ask why you want them?
> Ter

I have a language where new lines can be significant or not depending
on the type of curlies they are in. So, if say we are in {} new lines
are significant but if we are in () or [] they are ignored.

Currently, v2 grammar keeps a stack in lexer to keep track of this.
Every time there is { the levelNumber is pushed onto the stack and
levelNumber member var of lexer is set to 0. If } is read we pop the
stack and assign the value popped to the levelNumber instance member
of the lexer. If we see [ or ( we increment levelNumber; seeing ) or ]
we decrement the levelNumber.

Now if we see a new line and levelNumber != 0 then we skip the new
line otherwise we emit a NL (as it is significant) token.

Comparing the code generated for parser's global scope it is
practically identical to what the hackish stack solution looks like
with v2 grammar.

I thought it would be neat to have the same mechanism for lexer as
exists in parser. But of course you probably have a better idea of how
to keep track of
these levels. I am all ears :-)

Thanks,
Alex.

From kroepke at classdump.org  Tue Jul 31 08:59:06 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Tue, 31 Jul 2007 17:59:06 +0200
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
	<693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
Message-ID: <7D7B8211-0231-4949-B31F-50F7176D3EE2@classdump.org>


On Jul 31, 2007, at 5:51 PM, Alex Shneyderman wrote:

> I thought it would be neat to have the same mechanism for lexer as
> exists in parser. But of course you probably have a better idea of how
> to keep track of
> these levels. I am all ears :-)

I'd say that this is a pretty good case for scopes. :)

It's just that having to have them in a lexer is pretty uncommon,  
thus the reluctance to support the
feature (at least that's my understanding). The same reasoning  
applies to return values in lexer rules. It doesn't
really fit into the concept of the lexer (which should tokenize  
preferably without any context dependencies).

OTOH, given that the implementation of lexers and parsers are so  
alike scopes just magically work, as
long as the target developer thinks of it, maybe there's a case for it.

BTW, that's one messed up language you have there ;)

cheers,
-k
-- 
Kay R?pke
http://classdump.org/





From tbrandonau at gmail.com  Tue Jul 31 09:24:37 2007
From: tbrandonau at gmail.com (Thomas Brandon)
Date: Wed, 1 Aug 2007 02:24:37 +1000
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <7D7B8211-0231-4949-B31F-50F7176D3EE2@classdump.org>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
	<C1DDC799-643D-4C3D-B4B0-136EDFCDB568@cs.usfca.edu>
	<693a69ba0707310851g1542ab59jd8cc234ef0dcae87@mail.gmail.com>
	<7D7B8211-0231-4949-B31F-50F7176D3EE2@classdump.org>
Message-ID: <ebc876d70707310924m6cc0e8b4l3a2890cff4ec43bc@mail.gmail.com>

On 8/1/07, Kay Roepke <kroepke at classdump.org> wrote:
>
> On Jul 31, 2007, at 5:51 PM, Alex Shneyderman wrote:
>
> > I thought it would be neat to have the same mechanism for lexer as
> > exists in parser. But of course you probably have a better idea of how
> > to keep track of
> > these levels. I am all ears :-)
>
> I'd say that this is a pretty good case for scopes. :)
>
> It's just that having to have them in a lexer is pretty uncommon,
> thus the reluctance to support the
> feature (at least that's my understanding). The same reasoning
> applies to return values in lexer rules. It doesn't
> really fit into the concept of the lexer (which should tokenize
> preferably without any context dependencies).
I would like to see return values and scopes supported in lexers. I
have tried to use return values in the lexer, before switching to
scopes when they couldn't be used. My use case was pretty non-standard
but there are situations where more work than desirable needs to be
done in the lexer and here they can come in handy.
Certainly return values for non-fragment rules seem unnecessary. But
for fragment rules they seem more useful. Scopes or return types can
be used to centralise action logic as well as matching logic in
fragment rules.
Yes, global variables can be used and the limited recursion in lexers
means stacks will rarely be necessary but return values\scopes seem
cleaner to me, keeping everything together in the rule. And allow more
complex cases like this.
>
> OTOH, given that the implementation of lexers and parsers are so
> alike scopes just magically work, as
> long as the target developer thinks of it, maybe there's a case for it.
Certainly if significant work was required to implement them there
would be a case to be made for excluding them. But from a quick scan
of the templates it looked like almost all of the support could be
shared. And I can't see any performance implications for them. The
intelligent return value handling for parsers nicely chooses between
wrapper objects and single return values as needed so should
efficiently handle them.

> BTW, that's one messed up language you have there ;)
>
> cheers,
> -k
> --
> Kay R?pke
> http://classdump.org/

Tom.

From antlr at jazillian.com  Tue Jul 31 10:14:05 2007
From: antlr at jazillian.com (Andy Tripp)
Date: Tue, 31 Jul 2007 13:14:05 -0400
Subject: [antlr-interest] Antlr grammar for regular expressions
In-Reply-To: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
References: <52f6e5280707310627l6a96ba7cgf9f59e7a80fc87db@mail.gmail.com>
Message-ID: <46AF6DDD.7010705@jazillian.com>

sr?an bejakovic' wrote:
> Hi all,
>
> does anyone know of an Antlr grammar for parsing (perl or java) 
> regular expressions? I started implementing something like this, but I 
> don't want to (suboptimally) reinvent something that probably already 
> exists. Thanks,
>
> Srdan
Sun's JDK1.7 is under the GPL, and there's a regex parser in the 
java.util.regex.Pattern class.
Just download the source for JDK1.7 and look at 
src/share/classes/java/util/regex/Pattern.java
The recursive decent parser code starts at method a method called 
expr(), and the code actually
looks pretty readable.

From jimi at temporal-wave.com  Tue Jul 31 10:51:52 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Jul 2007 10:51:52 -0700
Subject: [antlr-interest] Global scopes for lexers
In-Reply-To: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
References: <693a69ba0707302320s49f43e41ubddd6abfd90e1ccf@mail.gmail.com>
Message-ID: <051466DAA0D608439E196797955018D76F48@wavemachine.temporal-wave.com>

While these May work for the Java target, it is almost an accident of
good design. They will NOT work for the other targets unless the target
authors decide to make them work. However, I still cannot see any use
for these in a lexer that you cannot do just as easily, or easier in
other ways, whereas their use in parsing is a boon.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Alex Shneyderman
> Sent: Monday, July 30, 2007 11:21 PM
> To: antlr
> Subject: [antlr-interest] Global scopes for lexers
> 
> I saw discussion on dynamic scopes for lexer (although have not tried
> it - just did not need it yet). Is there a way to have global scope on
> the lexer?
> 
> --
> Thanks,
> Alex.

From jimi at temporal-wave.com  Tue Jul 31 10:55:56 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Jul 2007 10:55:56 -0700
Subject: [antlr-interest] parsing only inside of C Comments?
In-Reply-To: <46AF4832.6080101@kortmann.de>
References: <46AF4832.6080101@kortmann.de>
Message-ID: <051466DAA0D608439E196797955018D76F49@wavemachine.temporal-wave.com>

Martin,

I should think that the easiest way to do this is to write the grammar
that parses those patterns, then write a separate filtering lexer that
invokes the parser on the discovered text in the way that island
grammars do when you can invoke them from the lexing phase. There is an
example of using islan grammars with the Java and C targets (others?) in
the dowloadable examples jar at the download page:

http://www.antlr.org/download.html

The only difference would be that you have a filtering lexer only, and
not an initial parser that switches to the island grammar in its lexing
phase.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Martin Kortmann
> Sent: Tuesday, July 31, 2007 7:33 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] parsing only inside of C Comments?
> 
> Hello,
> 
> I like to parse some pattern that occur only inside
> of C Comments. Everything other should be ignored.
> Has someone any Hints for me how i this can be done?
> 
> Martin

From email at kortmann.de  Tue Jul 31 11:10:24 2007
From: email at kortmann.de (Martin Kortmann)
Date: Tue, 31 Jul 2007 20:10:24 +0200
Subject: [antlr-interest] parsing only inside of C Comments?
In-Reply-To: <051466DAA0D608439E196797955018D76F49@wavemachine.temporal-wave.com>
References: <46AF4832.6080101@kortmann.de>
	<051466DAA0D608439E196797955018D76F49@wavemachine.temporal-wave.com>
Message-ID: <46AF7B10.8080801@kortmann.de>

Hello Jim,

Jim Idle schrieb:
> Martin,
> 
> I should think that the easiest way to do this is to write the grammar
> that parses those patterns, then write a separate filtering lexer that
> invokes the parser on the discovered text in the way that island
> grammars do when you can invoke them from the lexing phase. There is an
> example of using islan grammars with the Java and C targets (others?) in
> the dowloadable examples jar at the download page:

I have already a handwritten lexer that skips everything
outside the c-comments and tokenized everything inside the
comments to feed the (also handwritten) parser. Now i would
like to replace the handwritten parser with some other code.
I wonder about the fact that it is simple to ignore everything
inside an comment but it seems not so easy to ignore
everything outside.

I'm just starting with ANTLR (as you can see on my other
problems ;-) and i think that the whole starting process
may be easier when i adapt an already running system to
an ANTLR parser.

Martin

From jimi at temporal-wave.com  Tue Jul 31 11:26:05 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Jul 2007 11:26:05 -0700
Subject: [antlr-interest] parsing only inside of C Comments?
In-Reply-To: <46AF7B10.8080801@kortmann.de>
References: <46AF4832.6080101@kortmann.de>
	<051466DAA0D608439E196797955018D76F49@wavemachine.temporal-wave.com>
	<46AF7B10.8080801@kortmann.de>
Message-ID: <051466DAA0D608439E196797955018D76F4B@wavemachine.temporal-wave.com>



> -----Original Message-----
> From: Martin Kortmann [mailto:email at kortmann.de]
> Sent: Tuesday, July 31, 2007 11:10 AM
> To: Jim Idle
> Cc: antlr-interest Interest
> Subject: Re: [antlr-interest] parsing only inside of C Comments?
> 
> Hello Jim,
> 
> Jim Idle schrieb:
> > Martin,
> >
> > I should think that the easiest way to do this is to write the
> grammar
> > that parses those patterns, then write a separate filtering lexer
> that
> > invokes the parser on the discovered text in the way that island
> > grammars do when you can invoke them from the lexing phase. There is
> an
> > example of using islan grammars with the Java and C targets
(others?)
> in
> > the dowloadable examples jar at the download page:
> 
> I have already a handwritten lexer that skips everything
> outside the c-comments and tokenized everything inside the
> comments to feed the (also handwritten) parser. Now i would
> like to replace the handwritten parser with some other code.
> I wonder about the fact that it is simple to ignore everything
> inside an comment but it seems not so easy to ignore
> everything outside.

That's where the filtering lexer comes in. Just define the C comment
rule, then when it matches, invoke your new ANTLR parser, with its own
lexer, string stream and so on:

options 
{
    filter	= true;
}

COMMENT
    :   '/' '*' ( options {greedy=false;} : . )*

		{	use existing input stream here and invoke your
lexer->parser sequence
			This lexer stops when it sees '*/', which it
hides from the new parser.	
		 }
    ;

LINE_COMMENT
    : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}

		{ same deal }
    ;

Everything that isn't a comment will just be skipped over.

Jim

From jimi at temporal-wave.com  Tue Jul 31 11:31:36 2007
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 Jul 2007 11:31:36 -0700
Subject: [antlr-interest] parsing only inside of C Comments?
In-Reply-To: <051466DAA0D608439E196797955018D76F4B@wavemachine.temporal-wave.com>
References: <46AF4832.6080101@kortmann.de><051466DAA0D608439E196797955018D76F49@wavemachine.temporal-wave.com><46AF7B10.8080801@kortmann.de>
	<051466DAA0D608439E196797955018D76F4B@wavemachine.temporal-wave.com>
Message-ID: <051466DAA0D608439E196797955018D76F4D@wavemachine.temporal-wave.com>

Whoops, I forgot to delete the comment consuming constructs!

COMMENT
     :   '/' '*' 
 		{	use existing input stream here and invoke your
     ;
 
LINE_COMMENT
     : '//' 
 
 		{ same deal  but to line end}
     ;

> 
> That's where the filtering lexer comes in. Just define the C comment
> rule, then when it matches, invoke your new ANTLR parser, with its own
> lexer, string stream and so on:
> 
> options
> {
>     filter	= true;
> }


From rdclark at gmail.com  Tue Jul 31 11:37:23 2007
From: rdclark at gmail.com (Richard Clark)
Date: Tue, 31 Jul 2007 11:37:23 -0700
Subject: [antlr-interest] parsing only inside of C Comments?
In-Reply-To: <46AF7B10.8080801@kortmann.de>
References: <46AF4832.6080101@kortmann.de>
	<051466DAA0D608439E196797955018D76F49@wavemachine.temporal-wave.com>
	<46AF7B10.8080801@kortmann.de>
Message-ID: <d3992d900707311137s664c043dya48692643e409d82@mail.gmail.com>

I'd probaby use a hand-written front-end to identify everything inside
a comment and pass the resulting strings to ANTLR. I'd then do the
rest of the lexing and parsing using ANTLR (i.e. the front end doesn't
need to tokenize the input).

 ...Richard

From warren.madden at lmco.com  Tue Jul 31 12:22:09 2007
From: warren.madden at lmco.com (Madden, Warren)
Date: Tue, 31 Jul 2007 15:22:09 -0400
Subject: [antlr-interest] question on C target generated code
Message-ID: <96B09C31BB3969458305F4269B2D410F08881C79@emss06m08.mar.lmco.com>

Greetings!

 

I'm trying to put together a grammar targeted at C, but am running into
a problem at compile time.  Here's a snippet of my code:

 

            firstlet = (pANTLR3_COMMON_TOKEN)LT(1);

            MATCHT(LETTER, &FOLLOW_LETTER_in_cor145); 

 

            if ( !(firstlet->getText(firstlet).equals( "C" )) ) 

            {

                    CONSTRUCTEX();

                    EXCEPTION->type         =
ANTLR3_FAILED_PREDICATE_EXCEPTION;

                    EXCEPTION->message      = "$firstlet.text.equals(
\"C\" )";

                    EXCEPTION->ruleName     = "cor";

 

 

            }

 

I get the following error message in gcc:

 

ReccoParser.c: In function `cor':

ReccoParser.c:1490: error: request for member `equals' in something not
a structure or union

 

It's clear that firstlet is a pANTLR3_COMMON_TOKEN, and the getText
function returns a pANTLR3_STRING.  But the ANTLR3_STRING structure
doesn't have an equals member - the closest thing it comes to it is a
compare method.  I'm left scratching my head.  Could someone enlighten
me as to what I'm missing?

 

Thanks!

 

Warren Madden

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070731/376a81d5/attachment.html 

From warren.madden at lmco.com  Tue Jul 31 12:45:09 2007
From: warren.madden at lmco.com (Madden, Warren)
Date: Tue, 31 Jul 2007 15:45:09 -0400
Subject: [antlr-interest] question on C target generated code -- another
	one of Murphy's laws
Message-ID: <96B09C31BB3969458305F4269B2D410F08881C7A@emss06m08.mar.lmco.com>

Murphy's law of asking the world for help:

 

You will discover the bug isn't in the tool's code, but your own,
shortly after sending a message to the mailing list asking for help.

 

If anybody is curious, I had originally done the grammar file for Java,
and forgot that I had to recode my semantic predicates over to C.

 

Sorry for the mistake,

 

Warren Madden

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070731/da7a50dd/attachment.html 

From kverma at yahoo.com  Tue Jul 31 14:54:47 2007
From: kverma at yahoo.com (Kamal Verma)
Date: Tue, 31 Jul 2007 14:54:47 -0700 (PDT)
Subject: [antlr-interest] Simple grammar help needed
Message-ID: <122504.43975.qm@web54602.mail.re2.yahoo.com>

I am new to the ANTLR, I have a requirement to parse following kind of input,


(Name1=/regex/) AND (Name2='value')
(Name1=/regex/) OR  (Name2='value')
NOT (Name1=/regex/) 
((Name1=/regex/) OR  (Name2='value')) AND Name2='value'


Do you think it is too simple to try to write a lexer and parser for this ?

Thanks in the advance,
-K





      ____________________________________________________________________________________
Fussy? Opinionated? Impossible to please? Perfect.  Join Yahoo!'s user panel and lay it on us. http://surveylink.yahoo.com/gmrs/yahoo_panel_invite.asp?a=7 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20070731/6447d16e/attachment.html 

From jshellman at gmail.com  Tue Jul 31 16:20:00 2007
From: jshellman at gmail.com (Joel Shellman)
Date: Tue, 31 Jul 2007 16:20:00 -0700
Subject: [antlr-interest] Generating AST other than CommonTree
Message-ID: <975a94850707311620r5ec3220dm71da90e6945e29fe@mail.gmail.com>

I saw some hint that ANTLR can generate a tree of custom objects
instead of CommonTree by creating a custom TreeAdapter. I have done
that, but I see that in the generated parser code, it includes
CommonTree, so I get ClassCastExceptions. Is there some way around
this?

Thanks.

From kroepke at classdump.org  Tue Jul 31 16:27:46 2007
From: kroepke at classdump.org (Kay Roepke)
Date: Wed, 1 Aug 2007 01:27:46 +0200
Subject: [antlr-interest] Generating AST other than CommonTree
In-Reply-To: <975a94850707311620r5ec3220dm71da90e6945e29fe@mail.gmail.com>
References: <975a94850707311620r5ec3220dm71da90e6945e29fe@mail.gmail.com>
Message-ID: <FEFE15ED-F4F6-4984-86D8-56088F69569E@classdump.org>


On Aug 1, 2007, at 1:20 AM, Joel Shellman wrote:

> I saw some hint that ANTLR can generate a tree of custom objects
> instead of CommonTree by creating a custom TreeAdapter. I have done
> that, but I see that in the generated parser code, it includes
> CommonTree, so I get ClassCastExceptions. Is there some way around
> this?

You must also set the option ASTLabelType at the top of your grammar:

options {
	ASTLabelType="YourClassName";
}

otherwise ANTLR won't do the correct thing at code generation time.

HTH,
-k
-- 
Kay R?pke
http://classdump.org/





From parrt at cs.usfca.edu  Tue Jul 31 16:42:18 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Jul 2007 16:42:18 -0700
Subject: [antlr-interest] Generating AST other than CommonTree
In-Reply-To: <975a94850707311620r5ec3220dm71da90e6945e29fe@mail.gmail.com>
References: <975a94850707311620r5ec3220dm71da90e6945e29fe@mail.gmail.com>
Message-ID: <9E4700B7-DB00-4516-A9F4-C3F66EF6043A@cs.usfca.edu>


On Jul 31, 2007, at 4:20 PM, Joel Shellman wrote:

> I saw some hint that ANTLR can generate a tree of custom objects
> instead of CommonTree by creating a custom TreeAdapter. I have done
> that, but I see that in the generated parser code, it includes
> CommonTree, so I get ClassCastExceptions. Is there some way around
> this?

Generated code will be using Object as a type.  That CommoTree must  
be coming from an action or something. ANTLR only assumes Object.
Ter


From parrt at cs.usfca.edu  Tue Jul 31 17:15:06 2007
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 31 Jul 2007 17:15:06 -0700
Subject: [antlr-interest] antlr.org still stalling?
Message-ID: <6AD7D036-88F9-482D-9777-1F76CF56F6DD@cs.usfca.edu>

Those who had stalls, please try:

http://www.antlr.org/movies/Sydney-JUG-June-20-2007.mp4

again.  This time it should be ok!  If you get a good connection  
where you had bad or you are still getting a bad connection, please  
let me know directly.

Ter


From rdclark at gmail.com  Tue Jul 31 23:51:55 2007
From: rdclark at gmail.com (Richard Clark)
Date: Tue, 31 Jul 2007 23:51:55 -0700
Subject: [antlr-interest] Simple grammar help needed
In-Reply-To: <122504.43975.qm@web54602.mail.re2.yahoo.com>
References: <122504.43975.qm@web54602.mail.re2.yahoo.com>
Message-ID: <d3992d900707312351s4b02e887m829e0d2c882b5207@mail.gmail.com>

My question is: simple regular expressions or complicated ones?

In any case, this sounds like a good place to use ANTLR.

 ...Richard


On 7/31/07, Kamal Verma <kverma at yahoo.com> wrote:
>
> I am new to the ANTLR, I have a requirement to parse following kind of
> input,
>
>
> (Name1=/regex/) AND (Name2='value')
> (Name1=/regex/) OR  (Name2='value')
> NOT (Name1=/regex/)
> ((Name1=/regex/) OR  (Name2='value')) AND Name2='value'
>
>
> Do you think it is too simple to try to write a lexer and parser for this ?
>
> Thanks in the advance,
> -K
>
>
>  ________________________________
> Fussy? Opinionated? Impossible to please? Perfect. Join Yahoo!'s user panel
> and lay it on us.

