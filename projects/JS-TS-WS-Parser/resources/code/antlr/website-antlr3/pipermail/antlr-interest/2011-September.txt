From wujek.srujek at googlemail.com  Thu Sep  1 08:43:43 2011
From: wujek.srujek at googlemail.com (Wujek Srujek)
Date: Thu, 1 Sep 2011 17:43:43 +0200
Subject: [antlr-interest] LL(*), backtracking and actions
Message-ID: <CAAuGTBh-dSf4PEA64FyXsadxv+yz4t_UY=UZCGEiBygR7F428Q@mail.gmail.com>

Hi,
I am reading the ANTLR definitive reference book by Terence Parr, and read
about backtracking and LL(*). The book says that backtracking is only used
when LL(*) fails. On the other hand, it says that backtracking doesn't
invoke any actions when guessing, then rewinds input and reparses again
(possibly with memoization for performance). How does this function with
trying LL(*) first? Aren't actions invoked during this phase, and then, when
it fails, and backtracking finally finds a viable alternative, aren't they
invoked again? Or am I misunderstanding what the book says?

Regards,
wujek

From parrt at cs.usfca.edu  Thu Sep  1 11:18:39 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 1 Sep 2011 11:18:39 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
Message-ID: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>

Hi, In parallel with the development of ANTLR v4, superstar Colin Bean will be building the new version of ANTLRWorks. We already have a great base in what Jean Bovet did for the 1st version. It's a known entity and has lots of bookkeeping code that we can cut and paste into the new one such as the automatic update facility and preferences. Because we've got something to play with, we have something to critique and also a basic target.

I can imagine the basic tool being missing but it would be great to get feedback from the antlr community.  Remember, that there are probably 2 main communities: the people new to languages and/or ANTLR and the people very used to working with ANTLR grammars. For example, new people tend to like the syntax diagrams but many old-timers like myself prefer looking at the grammar because it's more terse.  Recognizing that we must serve both those communities, please comment with any thoughts on the following:

* What feature seemed like a good idea, but didn't end up being that valuable? You can say even heretical things like: " the single step feature in the debugger just didn't seem to be that useful beyond learning about parsing"

* Do you use the re-factoring? Keep in mind that v4 will automatically handle direct left recursion.

* What features do you think are really critical to add?

* What features could be really great if we improved them?

* Do we need better export facilities?   would you really use things like "export grammar as hyperlinked HTML", for example.

* What parts of the debugger did you use? There is a lot of stuff in there like: breakpoints on input tokens, step forward, step backward, jump to the end, break on specific kinds of events, break at specific line in the grammar, show the parse tree, show the AST constructed, list to the incoming events, etc...  Should we rethink the entire notion of the debugger at something that simply displays information about what it sees during the parse?  I.e., doesn't need to be a controller in the sense that you can single step the actual running parser over the usual socket connection?

You might include whether you are in the newbie or experienced camp or somewhere in between.

Udo Borkowski has already implemented a fantastic tree layout algorithm from an academic paper. The performance is extremely good and the results are tight.  Colin will probably implement his own syntax diagram viewer so that we can make it more than just a pretty picture. We want to highlight elements and step through etc.

Thanks!
Ter

From researcher0x00 at gmail.com  Thu Sep  1 13:06:36 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 1 Sep 2011 16:06:36 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <CAN45N12ocFeOTe5LLtAACNGyEayw7H2nj0JYZVvoT8FYW6zaKw@mail.gmail.com>

>
> All,
>

First let me say that having started with ANLTR at 2.x using the command
line then seeing ANTLRWorks was a WOW!. Nice job and great stake in the
ground.

While I am somewhere in between the things that I think would benefit the
next version would be

1. More documentation. It took me some time to figure out how to use a few
parts of ANTLRWorks 1.x because of the thin documentation. There was enough
there, but sometimes  you need to see things done in two different ways to
get it.

2. Flow of use. The use of a GUI should flow from top to bottom, and left to
right.
    At first use of the interpreter it took me a while to figure out that
the arrow on the left of the rule selection was to be used after the
rule was selected.

3. I think of the interpreter and debugger as modes. Modes don't belong on
tabs.

4. Integration back into the Tool. I have been spending some time with the
options for the Tool and have come to learn just how much the Tool carries a
good portion of the behind the scenes load for ANTLRWorks, while ANTLRWorks
focuses on the user interaction and presentation. For those people writing
IDEs for other environments, being able to leverage the same processes from
the Tool would a benefit.

5. The ability for the interpreter to work with actions. I know this is
actually something that has to be done in the Tool, but if the concept has
been silently moving forward, is it ready for a prime time debut? That
wouldn't be a version change, that would be a magnitude change.

6. For the new users, the documentation should point out that the
interpreter is more for basic learning or working on problem parts of
grammars that can be simplified enough to be handled by the interpreter.
Also that ANTLRWorks can not do analysis of string templates, STViz will do
that.

7. This one might be just me, but I'll mention it. Having started with the
command line I tended to look at the generated code and diffs of the
code every time I used a new feature of the ANTLR syntax. By doing so I
learned more about ANTLR than anything else at the time. It would be nice if
ANTLRWorks could the ability to display two versions of a grammar and diff
not only the code but show the different diagrams.

8. On my Debian systems I added ANTLRWorks to the GNOME menu, but sadly to
say have no icons to display next to the name. Icons for ANTLRWorks would be
nice. As an example Eclipse comes with eclipse.png,eclipse32.png, and
eclipse48.png


9. Preferences can only be set once a grammar is open. Preferences should be
able to be set regardless of having a grammar open.

10. Getting the debug port to work can be a major problem. While I use
tcpdump to look at the packets, for debugging the debug port could there be
a raw packets received screen, or something else.

11. For the debugger when setting Break On ALL, shouldn't all of the other
break points be checked.

12. Messages instead of system that just spins. Currently with 3.4 installed
if I use the menu Grammar -> Show Tokens DFA, it just shows the dialog with
"Operations in progress" and spins. I believe this is due to the fact that
the -dfa option is not working for 3.4. While I haven't ventured into the
code, my guess is that this would require putting a timer on all back end
calls to the Tool.

13. For a new user seeing screens shots showing  a positive result to an
action such as using the menu or clicking start, and also some of the common
errors would help them figure out if they did something right on wrong.

14. When debugging a problem area in a grammar and wanting to bring the
interpreter down on it, the actions have to be stripped. The Tool -print
option is great for this. Could ANTLRWorks make use of the -print option.
Yes I know not all grammars can be stripped of actions and still be valid,
but with a little tinkering after that to get a valid grammar is better than
doing it by hand and less error prone.

I know I haven't hit a lot on new diagrams or analysis functionality, that
is because I use the Tool and it's options for most of that from the command
line,and have created my own utilities for the specific pretty prints.

Just to reiterate, ANTLRWorks has made a positive and significant impact to
both ANTLR and many people learning parsing. We are much better for it.

Eric

From stefika at gmail.com  Thu Sep  1 13:20:26 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Thu, 1 Sep 2011 15:20:26 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>

Hi folks,

I'll offer a few thoughts. First, since you said to mention it, I
would hardly consider myself an antlr/antlrworks expert, but I have
used it extensively, have written multiple compilers, teach compiler
theory at the university level, and generally feel comfortable with
this stuff, even if I have a lot left to learn. I use ANTLRworks
typically on Mac OS X 10.6. Here's a general list, for good or ill,
that I would love to see in a future version:

Visualizations:

1. Keep any and all existing visualizations. My students (and I) love
this feature and use it extensively.

2. Allow the visualization window to "Pin" to the bottom, like most
IDE's do, effectively allowing it to auto hide.

3. Create a feature allowing you to click on a rule and generate a PS
or PDF (or something) file showing the visualization for that rule AND
all sub-rules. A figure such as this could get pretty big, but many of
my students tell this would make it easier for them to debug problems
that are related to multiple rules. It would be nice to be able to
even print a whole rule/subset out on a big plotter.

4. Possibly allow the user to select certain parts of a visualization.
For example, the most common problem I see students run into is that
they'll be using a tree walker, get an "Up" or "Down" token inserted
into the visualization, and they'll end up scratching their head as to
what that means. If they could theoretically "click on" one of those
tokens and get a reasonable English explanation, that could be
helpful.

Errors and Syntax:

1. By far my biggest annoyance with errors in antlrworks are that the
default editor delay is too fast. There are two problems: 1) studies
show this is not necessary (called liveness), as there are little user
benefits for key-stroke-by-keystroke checking while the user is
typing, 2) the constant checking is unnecessary usually and really
slows down typing performance. On some slow machines, the default
settings, which students often don't know they can change, are pretty
unbearable. I hear this complaint constantly from students.

This one has an easy fix. NetBeans, for example, only sends off a
check event IF the user has stopped typing for 0.5 seconds (they call
this the parsing and indexing loop). In other words, their update
delay is a measure that gets checked only after the last keystroke. It
never executes while you are typing. This works extremely well and is
a good compromise for fast typers and still gives you the benefit of
"near" liveness, which does have benefits.

In other words:
A. Wait till the user has stopped typing.
B. If <Update Delay> has passed, THEN do the check.

Similarly, 500 mseconds is the default from NetBeans and I think that
also diminishes slowdowns.

2. It would be nice if the Errors/warnings/etc in the console could be
set to automatically clear itself out when you click generate,
especially if the grammar generates successfully. Maybe you can, but I
don't see the setting.

3. It might be nice if the popup window saying whether the grammar
generated successfully/not was off by default. I have observed that
most of my beginner students ignore the box (without reading it), then
click on the console to see what happened.

Code completion:

1. It would be nice if when you typed $, that it popped up a list of
what things are legal.

2. Similarly, for a given target, it would be really, really, nice
(although perhaps challenging, I recognize) if you could take a rule
like this:

access_modifier returns [AccessModifierEnum amEnum]
	:	PUBLIC
	{
		$amEnum = $amEnum.PUBLIC;
	}
	|	PRIVATE
	{
		$amEnum = $amEnum.PRIVATE;
	}
	;

Type $amEnum. (with nothing after) and have it pull up what is
actually legal for that target class.

3. In the "options" area of a grammar:

options {
	tokenVocab=Quorum;
	ASTLabelType=CommonTree;
	output = template;
}

if would be nice if pressing code completion (I forget the key),
pulled up a list of the possible options for the left hand side,
guiding you through the choices or at least giving you a list and the
documentation for them.

Debugger:

I'll admit that I don't really use the debugger. I have before and I
really like it, but most of the projects I do require that you
integrate into the build cycle of projects in the NetBeans development
environment. In practice, I've never found a way I can really run the
debugger, with all of my complicated build information set together
(e.g., tricky dependencies, ant scripts) in such a way that it is
worth the effort.

General user interface considerations:

1. It would be nice if the preferences window followed the standard
paradigm of an Apply, Ok, and Cancel buttons. If no settings need to
be changed, the apply button is greyed out.

2. Most of my students generate antlr code in the same folder as the
grammar, so it might be nice if the output path was the empty string
by default. Others may prefer it the way it is.

3. It would be nice if the font for targets was slightly darker by
default, as I find it somewhat difficult to read.

4. It would be nice if comments (Options -> Syntax -> comments) were a
different color by default. Something subtle, but different then grey,
so it stands out some.

Wish list:

It would be great if there were a NetBeans platform plugin that
integrated all of the great stuff about antlrworks into that IDE.
There is a plugin out there, and it's nice, but the last I checked it
lacked visualizations, the debugger, the interpreter, didn't allow you
to generate the java code from your grammar, and all of the other
features which make antlrworks such a great tool to use.


I don't know if that helps at all, but Antlrworks is a great tool and
I'm looking forward to seeing what you guys come up with. Hopefully
that at least gives you a few ideas to chew on as you go into the next
development cycle.

Andreas Stefik, Ph.D.
Assistant Professor
Department of Computer Science
Southern Illinois University Edwardsville

From wingated at MIT.EDU  Thu Sep  1 16:00:10 2011
From: wingated at MIT.EDU (David Wingate)
Date: Thu, 01 Sep 2011 19:00:10 -0400
Subject: [antlr-interest] mparser - a MATLAB grammar in ANTLR
Message-ID: <4E600E7A.4080208@mit.edu>


Hello, all --

I've recently been developing a matlab grammar using ANTLR.  It's
polished enough now for my use, so I thought I'd post it to the
list (I've seen other people interested in such a thing).

You can download it at:

   http://www.mit.edu/~wingated/code/mparser_0.1.tar.gz

The grammar supports C and Java language back-ends.  In addition to the
grammar itself, the package includes a MEX interface so that you can
parse matlab code from within matlab itself.  The result is a deeply
nested set of matlab structures representing the AST (which I use to
do source code transformations).

It's not perfect - matlab turns out to be surprisingly hard to parse
(due to lexing ambiguities and matlab's use of syntactically significant
whitespace) but I think I've got most of it right.  I'll follow-up with
a few technical questions to this list to see if I can finish it off
The Right Way, but for now, well... release early, release often.

Any comments / feedback welcome.

I have to say: using ANTLR for this project was definitely the right
choice.  Great work!

		-- David

-- 
David Wingate     | Computational Cognitive Science Group
wingated at mit.edu  |   Brain and Cognitive Sciences
(617) 324-2894    | Stochastic Systems Group
46-4053H BCS      |   Laboratory for Information and Decision Systems

From dejas9000 at gmail.com  Thu Sep  1 16:51:08 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 1 Sep 2011 18:51:08 -0500
Subject: [antlr-interest] org.antlr.runtime.Parser.getMissingSymbol (Line
	70) throws NullPointerException
Message-ID: <CAEAw34O26OXEury+Yy+DjkT2DQPCXT6fNr4x-HYmnoUqfsTQ1w@mail.gmail.com>

For this grammar with an empty string input:

grammar PySON;

@parser::header
{
package edu.rice.bioinfo.library.language.pyson._1_0.parsers.antlr.ast;
import java.util.LinkedList;

}

@lexer::header
{
package edu.rice.bioinfo.library.language.pyson._1_0.parsers.antlr.ast;
}



@members
{

public class ErrorWrapper
{
public final String Message;
public final int Line,Col;
 ErrorWrapper(String message, int line, int col)
{
Message = message;
Line = line;
Col = col;
}
}

private List<ErrorWrapper> errors = new LinkedList<ErrorWrapper>();


public void displayRecognitionError(String[] tokenNames,
RecognitionException e)
{
        errors.add(new ErrorWrapper(getErrorMessage(e, tokenNames), e.line,
e.c));
}

public List<ErrorWrapper> getErrors()
{
        return errors;
}

ParseStack stack = new ParseStackAction();

ParseStack getParseStack()
{
return stack;
}


}



blocks : START block* { stack.pushBlocks(); };

block : BEGIN networks_block_body     END
| BEGIN trees_block_body        END
| BEGIN non_networks_block_body END;

networks_block_body
:
NETWORKS translation NETWORK rich_newick_assignment;
trees_block_body
: TREES translation tree_assigment* { stack.pushTreesBlockBody(true); }
| TREES             tree_assigment* { stack.pushTreesBlockBody(false); };

tree_assigment
: tr=(TREE | UTREE) rich_newick_assignment { stack.pushTreeAssignment($tr);
};
rich_newick_assignment
: d=DEFAULT_INDICATOR? identifier '=' rich_newick_string {
stack.pushRichNewickAssignment($d==null); };
translation
: TRANSLATE identifier identifier (',' identifier identifier)* ';';

non_networks_block_body
: ~(NETWORKS | TREES) .*;

rich_newick_string
: str=(.*';') { stack.pushRichNewickString($str.text); };
identifier
: s=(TRANSLATE | TREE | UTREE | NETWORK | BEGIN | NETWORKS | TREES | ID) {
stack.pushIdentifier($s.text); };

DEFAULT_INDICATOR
: '*';
TREE : ('T'|'t')('R'|'r')('E'|'e')('E'|'e');

UTREE : ('U'|'u')('T'|'t')('R'|'r')('E'|'e')('E'|'e');

NETWORK : ('N'|'n')('E'|'e')('T'|'t')('W'|'w')('O'|'o')('R'|'r')('K'|'k');

START
: '#'('N'|'n')('E'|'e')('X'|'x')('U'|'u')('S'|'s');
BEGIN : ('B'|'b')('E'|'e')('G'|'g')('I'|'i')('N'|'n');

TRANSLATE
:
('T'|'t')('R'|'r')('A'|'a')('N'|'n')('S'|'s')('L'|'l')('A'|'a')('T'|'t')('E'|'e');

NETWORKS
: ('N'|'n')('E'|'e')('T'|'t')('W'|'w')('O'|'o')('R'|'r')('K'|'k')('S'|'s');

TREES : ('T'|'t')('R'|'r')('E'|'e')('E'|'e')('S'|'s');
END : ('E'|'e')('N'|'n')('D'|'d')';';

NESTED_ML_COMMENT
  :  '[' (~('[' | ']') | NESTED_ML_COMMENT)* ']' {$channel=HIDDEN;};

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;


ID : (('a'..'z')|('A'..'Z')|('0'..'9'))+;

From researcher0x00 at gmail.com  Thu Sep  1 17:03:29 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 1 Sep 2011 20:03:29 -0400
Subject: [antlr-interest] ANTLR 3.4 Jul,
 19 2001 accepts -Xdbgconverson without warning, should be -Xdbgconversion
Message-ID: <CAN45N11WEbHkG2EJ3MOR5FgFh_ppcqPp+6xGXt3XAa0FL93PBg@mail.gmail.com>

ANTLR  3.4 Jul, 19 2001  accepts -Xdbgconverson without warning, should be
-Xdbgconversion

Note the missing i near the end.

Eric

From dejas9000 at gmail.com  Thu Sep  1 17:26:13 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 1 Sep 2011 19:26:13 -0500
Subject: [antlr-interest] Does overriding display not turn off messages sent
	to std error?
Message-ID: <CAEAw34PwfDJxyYRN0VWcuvTgLGpMvaoV4LvPnin6G_TAPOQUxg@mail.gmail.com>

I have this entry in my grammar file:

@members
{

@Override
public void displayRecognitionError(String[] tokenNames,
RecognitionException e)
{
        errors.add(new ErrorWrapper(getErrorMessage(e, tokenNames), e.line,
e.c));
}
}

but when using the parser I still see a lot of messages like:

line 1:427908 no viable alternative at character ')'
line 1:427909 no viable alternative at character ')'

sent to std error. I thought override displayRecognitionError prevented
that.

From jbb at acm.org  Thu Sep  1 17:52:20 2011
From: jbb at acm.org (John B. Brodie)
Date: Thu, 01 Sep 2011 20:52:20 -0400
Subject: [antlr-interest] Does overriding display not turn off messages
 sent to std error?
In-Reply-To: <CAEAw34PwfDJxyYRN0VWcuvTgLGpMvaoV4LvPnin6G_TAPOQUxg@mail.gmail.com>
References: <CAEAw34PwfDJxyYRN0VWcuvTgLGpMvaoV4LvPnin6G_TAPOQUxg@mail.gmail.com>
Message-ID: <1314924740.20745.3.camel@gecko>

Greetings!

This is just off the top of my head, so is probably a bogus answer.....

On Thu, 2011-09-01 at 19:26 -0500, Dejas Ninethousand wrote:
> I have this entry in my grammar file:
> 
> @members
> {
> 
> @Override
> public void displayRecognitionError(String[] tokenNames,
> RecognitionException e)
> {
>         errors.add(new ErrorWrapper(getErrorMessage(e, tokenNames), e.line,
> e.c));
> }
> }
> 
> but when using the parser I still see a lot of messages like:
> 
> line 1:427908 no viable alternative at character ')'
> line 1:427909 no viable alternative at character ')'
> 
> sent to std error. I thought override displayRecognitionError prevented
> that.
> 

i think that those errors are coming from your lexer.

and you have only overridden the parser's error display routine.




From wclodius at los-alamos.net  Thu Sep  1 18:28:23 2011
From: wclodius at los-alamos.net (William Clodius)
Date: Thu, 1 Sep 2011 19:28:23 -0600
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
Message-ID: <7A2AE0B0-3ED2-4020-AF0C-99DB4E05D2A8@los-alamos.net>


On Sep 1, 2011, at 2:20 PM, Andreas Stefik wrote:

> <snip>
> 
> Errors and Syntax:
> 
> 1. By far my biggest annoyance with errors in antlrworks are that the
> default editor delay is too fast. There are two problems: 1) studies
> show this is not necessary (called liveness), as there are little user
> benefits for key-stroke-by-keystroke checking while the user is
> typing, 2) the constant checking is unnecessary usually and really
> slows down typing performance. On some slow machines, the default
> settings, which students often don't know they can change, are pretty
> unbearable. I hear this complaint constantly from students.
> 
> This one has an easy fix. NetBeans, for example, only sends off a
> check event IF the user has stopped typing for 0.5 seconds (they call
> this the parsing and indexing loop). In other words, their update
> delay is a measure that gets checked only after the last keystroke. It
> never executes while you are typing. This works extremely well and is
> a good compromise for fast typers and still gives you the benefit of
> "near" liveness, which does have benefits.
> 
> In other words:
> A. Wait till the user has stopped typing.
> B. If <Update Delay> has passed, THEN do the check.
> 
> Similarly, 500 mseconds is the default from NetBeans and I think that
> also diminishes slowdowns.

I agree that the editor delay is too fast and it is a major usability problem. It may be a particular problem with me as I have a hand tremor that causes more typos and pauses than is typical of others. FWIW I would probably prefer special treatment for a change in line due to either movement of the curser to a new line or entering a return key for while I am on the same line it is likely that I am considering more mods of that line.

In other words:
A. Wait till the user has stopped typing.
B. If the last keyboard or mouse entry has resulted in a change in line position and any key other than cursor movement has been entered since the last check do the check, otherwise
C. If <Update Delay> has passed, THEN do the check.

With <Update Delay> user definable, but a default of 0.5 seconds. (I would probably set it to 1 or 2 seconds.)

> 
> 2. It would be nice if the Errors/warnings/etc in the console could be
> set to automatically clear itself out when you click generate,
> especially if the grammar generates successfully. Maybe you can, but I
> don't see the setting.

This would be very useful.

> <snip>
> 
> Andreas Stefik, Ph.D.
> Assistant Professor
> Department of Computer Science
> Southern Illinois University Edwardsville
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From gary at sumwise.com  Thu Sep  1 19:20:09 2011
From: gary at sumwise.com (Gary Miller)
Date: Fri, 2 Sep 2011 12:20:09 +1000
Subject: [antlr-interest] mparser - a MATLAB grammar in ANTLR
In-Reply-To: <4E600E7A.4080208@mit.edu>
References: <4E600E7A.4080208@mit.edu>
Message-ID: <CAFCNb3jn6qDmc28xnPSLK8xE7+Y6RxbKwL2nQqWbF+Cmv2+LqQ@mail.gmail.com>

Hey David,

The URL you supplied had substitution error, found the right one.
> ? http://www.mit.edu/~wingated/code/mparser_0.1.tar.gz
http://www.mit.edu/~wingated/code/mparser-0.1.tar.gz

Regards
Gary

From bkiers at gmail.com  Thu Sep  1 23:05:48 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 2 Sep 2011 08:05:48 +0200
Subject: [antlr-interest] org.antlr.runtime.Parser.getMissingSymbol
 (Line 70) throws NullPointerException
In-Reply-To: <CAEAw34O26OXEury+Yy+DjkT2DQPCXT6fNr4x-HYmnoUqfsTQ1w@mail.gmail.com>
References: <CAEAw34O26OXEury+Yy+DjkT2DQPCXT6fNr4x-HYmnoUqfsTQ1w@mail.gmail.com>
Message-ID: <CAOrgODa4ODedwBWYSW0jJ8=fysPExzFJ57k-TzDAEHrAHsGJCg@mail.gmail.com>

Hi,

On Fri, Sep 2, 2011 at 1:51 AM, Dejas Ninethousand <dejas9000 at gmail.com>wrote:

> For this grammar with an empty string input:
>
> grammar PySON;

...


I think you forgot to ask your question.

Regards,

Bart.

From antlr at shmuelhome.mine.nu  Fri Sep  2 00:09:48 2011
From: antlr at shmuelhome.mine.nu (shmuel siegel)
Date: Fri, 02 Sep 2011 10:09:48 +0300
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <4E60813C.4090204@shmuelhome.mine.nu>


From parrt at cs.usfca.edu  Fri Sep  2 09:58:31 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 2 Sep 2011 09:58:31 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
Message-ID: <6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>


On Sep 1, 2011, at 1:20 PM, Andreas Stefik wrote:
> Debugger:
> 
> I'll admit that I don't really use the debugger. I have before and I
> really like it, but most of the projects I do require that you
> integrate into the build cycle of projects in the NetBeans development
> environment. In practice, I've never found a way I can really run the
> debugger, with all of my complicated build information set together
> (e.g., tricky dependencies, ant scripts) in such a way that it is
> worth the effort.

hi Andreas,So it's hard to use the remote debug feature whereby AW you can listen to socket events from the parser? All I do is turn on -debug, recompile and start my project. when that parser starts up, it blocks waiting for a connection from AW.

Ter


From parrt at cs.usfca.edu  Fri Sep  2 10:02:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 2 Sep 2011 10:02:54 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
Message-ID: <0F7D61AA-088A-403A-BC9F-42D82E250BD2@cs.usfca.edu>

I have tried to summarize the e-mails received so far on this page:

http://www.antlr.org/wiki/display/~admin/2011/09/02/ANTLRWorks+2+planning%2C+features

keep the comments coming!!!

Ter

On Sep 2, 2011, at 9:58 AM, Terence Parr wrote:

> 
> On Sep 1, 2011, at 1:20 PM, Andreas Stefik wrote:
>> Debugger:
>> 
>> I'll admit that I don't really use the debugger. I have before and I
>> really like it, but most of the projects I do require that you
>> integrate into the build cycle of projects in the NetBeans development
>> environment. In practice, I've never found a way I can really run the
>> debugger, with all of my complicated build information set together
>> (e.g., tricky dependencies, ant scripts) in such a way that it is
>> worth the effort.
> 
> hi Andreas,So it's hard to use the remote debug feature whereby AW you can listen to socket events from the parser? All I do is turn on -debug, recompile and start my project. when that parser starts up, it blocks waiting for a connection from AW.
> 
> Ter
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stefika at gmail.com  Fri Sep  2 10:32:11 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Fri, 2 Sep 2011 12:32:11 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
Message-ID: <CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>

On Fri, Sep 2, 2011 at 11:58 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Sep 1, 2011, at 1:20 PM, Andreas Stefik wrote:
>> Debugger:
>>
>> I'll admit that I don't really use the debugger. I have before and I
>> really like it, but most of the projects I do require that you
>> integrate into the build cycle of projects in the NetBeans development
>> environment. In practice, I've never found a way I can really run the
>> debugger, with all of my complicated build information set together
>> (e.g., tricky dependencies, ant scripts) in such a way that it is
>> worth the effort.
>
> hi Andreas,So it's hard to use the remote debug feature whereby AW you can listen to socket events from the parser? All I do is turn on -debug, recompile and start my project. when that parser starts up, it blocks waiting for a connection from AW.


Hmm, the honest answer is that I'm not sure, as I haven't tried it
that way. When I debug the parser on my bigger projects, I'm usually
touching the semantics/other phases anyway, so I usually fire up
NetBeans, set a breakpoint in the generated code, and fire up the
NetBeans debugger. So I don't know. What you mentioned certainly
doesn't sound difficult, although I don't know for sure if it would
help me in my most common use cases.

Honestly, though, like I said, I use the rest of AW far more often
than I use the debugger, so I'm not the best judge on that side.

Stefik

From stefika at gmail.com  Fri Sep  2 10:54:42 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Fri, 2 Sep 2011 12:54:42 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
Message-ID: <CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>

Ter,

Just to keep adding:

>Refactoring

No complaints on this system. It does the most common things.

>displaying decision DFA (well, one person mentioned to say that sometimes it gets stuck)

Do you mean the syntax diagram side? I don't recall seeing it get
stuck. I do, however, use the syntax diagrams constantly and find
having the visualization one of the best features of using AW. Again
an auto-hide like "pin" interface might be nice. Another feature that
could be potentially helpful, although not a huge priority perhaps,
would be to full screen it. That would be nice for class
demonstrations.

>only one person mentioned showing the generated code

Since it's pretty straightforward to generate the code, it's not a
huge deal for me either way.

>group/ungroup rules, rule collapsing

No real preference. Many IDEs have this and it's useful for certain
kinds of boiler plate code (e.g., generated forms). IF there's a use
that's helpful, it "might" include collapsing sections, like
options/members/boilerplate stuff, or just semantic actions, or
something else. I don't use this a whole lot in large scale code
though in other IDEs either, though.

A few other thoughts after reading your post:

1. I definitely agree that the syntax diagram, interpreter, console,
and debugger are sort of odd as tabs. Having them all as pinned
windows is more common in an IDE and has the advantage of letting you
see more than one at a time (if you wish).

2. It might be nice if you could have (on mac) a tabbed interface for
multiple grammars instead of multiple floating windows. My most common
use case is switching back and forth between a tree walker and a
parser. Managing multiple tabs on multiple windows is somewhat more
tedious than having one window where you can click on a new file and
the syntax/interpreter, etc windows auto-respond accordingly.

There's a few more thoughts, for what it's worth,

Stefik




On Fri, Sep 2, 2011 at 12:32 PM, Andreas Stefik <stefika at gmail.com> wrote:
> On Fri, Sep 2, 2011 at 11:58 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>> On Sep 1, 2011, at 1:20 PM, Andreas Stefik wrote:
>>> Debugger:
>>>
>>> I'll admit that I don't really use the debugger. I have before and I
>>> really like it, but most of the projects I do require that you
>>> integrate into the build cycle of projects in the NetBeans development
>>> environment. In practice, I've never found a way I can really run the
>>> debugger, with all of my complicated build information set together
>>> (e.g., tricky dependencies, ant scripts) in such a way that it is
>>> worth the effort.
>>
>> hi Andreas,So it's hard to use the remote debug feature whereby AW you can listen to socket events from the parser? All I do is turn on -debug, recompile and start my project. when that parser starts up, it blocks waiting for a connection from AW.
>
>
> Hmm, the honest answer is that I'm not sure, as I haven't tried it
> that way. When I debug the parser on my bigger projects, I'm usually
> touching the semantics/other phases anyway, so I usually fire up
> NetBeans, set a breakpoint in the generated code, and fire up the
> NetBeans debugger. So I don't know. What you mentioned certainly
> doesn't sound difficult, although I don't know for sure if it would
> help me in my most common use cases.
>
> Honestly, though, like I said, I use the rest of AW far more often
> than I use the debugger, so I'm not the best judge on that side.
>
> Stefik
>

From researcher0x00 at gmail.com  Fri Sep  2 11:37:27 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 2 Sep 2011 14:37:27 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
	<CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
Message-ID: <CAN45N13tdg4+3s-DY_dnjAcpHcP-1yh=D0f2Tfg=HU0h6K3HbQ@mail.gmail.com>

Intelligent search of grammars.

Every now and then I search the grammars in the examples and grammars list
to see possible ways to do something. Sometimes I don't know enough and scan
everything, but other times I know that I need a predicate, cardinality, a
tree conversion, lexer rule, etc.

From parrt at cs.usfca.edu  Sun Sep  4 12:22:14 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Sep 2011 12:22:14 -0700
Subject: [antlr-interest] Using Tree Interface not plain Object
Message-ID: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>

Hi. Currently v3 requires nothing of your tree nodes; all you have to do is give me an adapter that says how to create them and navigate them and manipulate them. Users can set up ASTLabelType as an option so that $x in actions has the user's type instead of plain object.

Sam Harwell and I were talking today about restructuring all of the tree interfaces. We're breaking it up into a hierarchy with Tree interface at the top. Tree just says you can get a payload, some children, and parent. ParseTree and AST split off as sub interfaces. We were thinking that it's pretty silly to use simple object when we could require the minimal Tree interface so at least code could display or navigate them. The reason I went with plain object originally was so people could use any existing object they have, even if they only have binary for it. This seems like a fairly extreme example and, in the worst case, somebody could wrap those objects so they were suitable for use with ANTLR. More than likely, somebody in that situation would simply use actions to construct the trees they want. Most trees not built for antlr expect everything in the constructor, whereas antlr has to build up the trees piecemeal as it parses.

So, does anybody object to ANTLR assuming Tree in the parser if you are building trees and then AST in the tree parsers?

Ter

From oliver.zeigermann at gmail.com  Sun Sep  4 12:49:05 2011
From: oliver.zeigermann at gmail.com (Oliver Zeigermann)
Date: Sun, 4 Sep 2011 21:49:05 +0200
Subject: [antlr-interest] Using Tree Interface not plain Object
In-Reply-To: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
References: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
Message-ID: <CABJr57D2GWXro7F12mtfdbCZjiX146LqJCC7F57L-kkeoEqacA@mail.gmail.com>

What would be the benefit of introducing and then requiring those
interfaces? Might make sense when you want to do automatic tree
traversal, but maybe not when you want to create any kind of object
where you might not even have a (single) parent or a flat list of
children. Would it be possible to have both? Tree interfaces for
homogeneous, normalized trees that can be processed further using
ANTLR and whatever you want to generate if you do not want further
ANTLR processing?

- Oliver

2011/9/4 Terence Parr <parrt at cs.usfca.edu>:
> Hi. Currently v3 requires nothing of your tree nodes; all you have to do is give me an adapter that says how to create them and navigate them and manipulate them. Users can set up ASTLabelType as an option so that $x in actions has the user's type instead of plain object.
>
> Sam Harwell and I were talking today about restructuring all of the tree interfaces. We're breaking it up into a hierarchy with Tree interface at the top. Tree just says you can get a payload, some children, and parent. ParseTree and AST split off as sub interfaces. We were thinking that it's pretty silly to use simple object when we could require the minimal Tree interface so at least code could display or navigate them. The reason I went with plain object originally was so people could use any existing object they have, even if they only have binary for it. This seems like a fairly extreme example and, in the worst case, somebody could wrap those objects so they were suitable for use with ANTLR. More than likely, somebody in that situation would simply use actions to construct the trees they want. Most trees not built for antlr expect everything in the constructor, whereas antlr has to build up the trees piecemeal as it parses.
>
> So, does anybody object to ANTLR assuming Tree in the parser if you are building trees and then AST in the tree parsers?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Sun Sep  4 13:09:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Sep 2011 13:09:21 -0700
Subject: [antlr-interest] Using Tree Interface not plain Object
In-Reply-To: <CABJr57D2GWXro7F12mtfdbCZjiX146LqJCC7F57L-kkeoEqacA@mail.gmail.com>
References: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
	<CABJr57D2GWXro7F12mtfdbCZjiX146LqJCC7F57L-kkeoEqacA@mail.gmail.com>
Message-ID: <7C69A291-ED83-472C-8128-3BB33BBC577A@cs.usfca.edu>


On Sep 4, 2011, at 12:49 PM, Oliver Zeigermann wrote:

> What would be the benefit of introducing and then requiring those
> interfaces?

Breaking up the interfaces make sense so code can use the least restrictive interface.

Requiring something other than object is not necessary since we have the tree adapters and the ASTLabelType option.  In fact, I just noticed that if you don't specify such a label type, I default to CommonAST. You would have to manually set it to Object. I originally thought that some clever person might want to use the token objects themselves as tree nodes to avoid doubling the number of objects traversed by the garbage collector.

> Might make sense when you want to do automatic tree
> traversal, but maybe not when you want to create any kind of object
> where you might not even have a (single) parent or a flat list of
> children. Would it be possible to have both? Tree interfaces for
> homogeneous, normalized trees that can be processed further using
> ANTLR and whatever you want to generate if you do not want further
> ANTLR processing?

 I guess we can just leave that part the way it is.

 splitting up the interfaces though is a good idea because it's making the code a lot cleaner.

Ter


From sharwell at pixelminegames.com  Sun Sep  4 13:31:13 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 4 Sep 2011 15:31:13 -0500
Subject: [antlr-interest] Using Tree Interface not plain Object
In-Reply-To: <CABJr57D2GWXro7F12mtfdbCZjiX146LqJCC7F57L-kkeoEqacA@mail.gmail.com>
References: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
	<CABJr57D2GWXro7F12mtfdbCZjiX146LqJCC7F57L-kkeoEqacA@mail.gmail.com>
Message-ID: <004501cc6b41$978d06f0$c6a714d0$@pixelminegames.com>

The new interfaces aren't required across the board, but would be used for
the vast majority of situations. By specifying the "ASTLabelType=xxxxx;" and
"TreeAdaptorType=yyyyy;" options, you could override the entire system.

This restructuring primarily affects the arguments and return values from
various methods in the Tree and TreeAdaptor interfaces. Also, the new
interfaces are MUCH simpler than they used to be. Methods which alter the
tree are all moved to and unified in the TreeAdaptor, and many of the
utility-type methods are moved to a new module instead of requiring every
tree implementation to implement them.

The previous interfaces were large, confusing (do you call tree.addChild or
treeAdaptor.addChild?), and severely restricted my ability to create generic
trees and a general purpose tree visualizer (similar to STViz but for parse
results).

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Oliver Zeigermann
Sent: Sunday, September 04, 2011 2:49 PM
To: Terence Parr
Cc: Antlr List
Subject: Re: [antlr-interest] Using Tree Interface not plain Object

What would be the benefit of introducing and then requiring those
interfaces? Might make sense when you want to do automatic tree traversal,
but maybe not when you want to create any kind of object where you might not
even have a (single) parent or a flat list of children. Would it be possible
to have both? Tree interfaces for homogeneous, normalized trees that can be
processed further using ANTLR and whatever you want to generate if you do
not want further ANTLR processing?

- Oliver

2011/9/4 Terence Parr <parrt at cs.usfca.edu>:
> Hi. Currently v3 requires nothing of your tree nodes; all you have to do
is give me an adapter that says how to create them and navigate them and
manipulate them. Users can set up ASTLabelType as an option so that $x in
actions has the user's type instead of plain object.
>
> Sam Harwell and I were talking today about restructuring all of the tree
interfaces. We're breaking it up into a hierarchy with Tree interface at the
top. Tree just says you can get a payload, some children, and parent.
ParseTree and AST split off as sub interfaces. We were thinking that it's
pretty silly to use simple object when we could require the minimal Tree
interface so at least code could display or navigate them. The reason I went
with plain object originally was so people could use any existing object
they have, even if they only have binary for it. This seems like a fairly
extreme example and, in the worst case, somebody could wrap those objects so
they were suitable for use with ANTLR. More than likely, somebody in that
situation would simply use actions to construct the trees they want. Most
trees not built for antlr expect everything in the constructor, whereas
antlr has to build up the trees piecemeal as it parses.
>
> So, does anybody object to ANTLR assuming Tree in the parser if you are
building trees and then AST in the tree parsers?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sun Sep  4 14:41:11 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Sep 2011 14:41:11 -0700
Subject: [antlr-interest] Using Tree Interface not plain Object
In-Reply-To: <004501cc6b41$978d06f0$c6a714d0$@pixelminegames.com>
References: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
	<CABJr57D2GWXro7F12mtfdbCZjiX146LqJCC7F57L-kkeoEqacA@mail.gmail.com>
	<004501cc6b41$978d06f0$c6a714d0$@pixelminegames.com>
Message-ID: <C62EE993-0AF7-4E9A-81D1-41F1DE35356C@cs.usfca.edu>


On Sep 4, 2011, at 1:31 PM, Sam Harwell wrote:

> The new interfaces aren't required across the board, but would be used for
> the vast majority of situations. By specifying the "ASTLabelType=xxxxx;" and
> "TreeAdaptorType=yyyyy;" options, you could override the entire system.

Hi Sam,

I was thinking about TreeAdaptorType, er, ASTAdaptorType option. I'm not sure exposing the concrete type of the adaptor helps very much and it's just one more thing to document and test. If I use the adaptor myself, it's usually to access the interface methods.

Ter

From parrt at cs.usfca.edu  Sun Sep  4 14:47:14 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 4 Sep 2011 14:47:14 -0700
Subject: [antlr-interest] new Tree interfaces
Message-ID: <7FDA1F29-5F6B-4FA6-A368-1859CFD59723@cs.usfca.edu>

btw,If you want to take a look at the clean new tree interface:

http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/Tree.java

then sub interfaces

http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/SyntaxTree.java
http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/ParseTree.java
http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/AST.java

...

Ter


From gary at sumwise.com  Sun Sep  4 17:24:26 2011
From: gary at sumwise.com (Gary Miller)
Date: Mon, 5 Sep 2011 10:24:26 +1000
Subject: [antlr-interest] Using Tree Interface not plain Object
In-Reply-To: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
References: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
Message-ID: <CAFCNb3jWMjOoaxboJJ7O-_qk=iykgXEL183UrxXB7pRe+mEp4Q@mail.gmail.com>

Good on you guys for looking at tiding up the confusing type hierarchies.

One thing I tried to do was use a centralised tree structure for part
of an AST and the default distributed one for the rest.
Would your proposal make any difference to this issue?
I haven't spend much time on it and therefore haven't come to a
conclusion as to how hard this is.
The reason I wanted to do this is that the syntax represents a tree
structure and the data structure being used in the rest of the code is
a centralised tree structure.
I wanted to build it once, instead of haven't to walk a distributed
tree just to build a centralised one.

As an aside, on the Java front can v4 set 1.5 as a minimum and use generics?
Also "Item 16: Favor composition over inheritance" (Effective Java 2nd
ed) would help keep things tidy.

Regards
Gary


To be a bit more concrete re centralised vs distributed:

Centralised tree
================
class Axis {
  Map<Node,List<Node>> parent2Children;
  Map<Node,Node> child2parent;

  void addChild(Node parent, Node child) { ... }
  etc
}
class Node {
}


Distributed tree
==================
class Node {
   Node parent;
   List<Node> children;

   void addChild(Node child){ ... }
   etc
}

On Mon, Sep 5, 2011 at 5:22 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. Currently v3 requires nothing of your tree nodes; all you have to do is give me an adapter that says how to create them and navigate them and manipulate them. Users can set up ASTLabelType as an option so that $x in actions has the user's type instead of plain object.
>
> Sam Harwell and I were talking today about restructuring all of the tree interfaces. We're breaking it up into a hierarchy with Tree interface at the top. Tree just says you can get a payload, some children, and parent. ParseTree and AST split off as sub interfaces. We were thinking that it's pretty silly to use simple object when we could require the minimal Tree interface so at least code could display or navigate them. The reason I went with plain object originally was so people could use any existing object they have, even if they only have binary for it. This seems like a fairly extreme example and, in the worst case, somebody could wrap those objects so they were suitable for use with ANTLR. More than likely, somebody in that situation would simply use actions to construct the trees they want. Most trees not built for antlr expect everything in the constructor, whereas antlr has to build up the trees piecemeal as it parses.
>
> So, does anybody object to ANTLR assuming Tree in the parser if you are building trees and then AST in the tree parsers?
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Sun Sep  4 23:47:13 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 5 Sep 2011 08:47:13 +0200
Subject: [antlr-interest] new Tree interfaces
In-Reply-To: <7FDA1F29-5F6B-4FA6-A368-1859CFD59723@cs.usfca.edu>
References: <7FDA1F29-5F6B-4FA6-A368-1859CFD59723@cs.usfca.edu>
Message-ID: <CAOrgODYLjX71yD_-jshpj89O+gT5xMg2eWzJF1buzhmyosjtoA@mail.gmail.com>

Hi Ter, others,

Perhaps generics could be introduced in v4?

public interface Tree<T> {

	Tree<T> getParent();
	T getPayload();
	Tree<T> getChild(int i);
	int getChildCount();
	String toStringTree();
}

Regards,

Bart



On Sun, Sep 4, 2011 at 11:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> btw,If you want to take a look at the clean new tree interface:
>
>
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/Tree.java
>
> then sub interfaces
>
>
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/SyntaxTree.java
>
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/ParseTree.java
>
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/AST.java
>
> ...
>
> Ter
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Mon Sep  5 09:01:16 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 5 Sep 2011 09:01:16 -0700
Subject: [antlr-interest] Using Tree Interface not plain Object
In-Reply-To: <CAFCNb3jWMjOoaxboJJ7O-_qk=iykgXEL183UrxXB7pRe+mEp4Q@mail.gmail.com>
References: <DB880B1E-3DD7-45A2-A497-89F4F284A6C4@cs.usfca.edu>
	<CAFCNb3jWMjOoaxboJJ7O-_qk=iykgXEL183UrxXB7pRe+mEp4Q@mail.gmail.com>
Message-ID: <82B4330D-E12A-4F84-951C-A37FCD2CC4A4@cs.usfca.edu>


On Sep 4, 2011, at 5:24 PM, Gary Miller wrote:

> Good on you guys for looking at tiding up the confusing type hierarchies.

Yah,  they got pretty cluttered and messy over the years. Sam Harwell is a stickler for these kinds of details and really helping me think about how the API should look.

I'm going to leave the tree node type as object, so there really is no kind of limitations. you just passing your tree adapter and tell me how to create and navigate trees.

We will definitely assume generics level Java minimum.

Ter
> 
> One thing I tried to do was use a centralised tree structure for part
> of an AST and the default distributed one for the rest.
> Would your proposal make any difference to this issue?
> I haven't spend much time on it and therefore haven't come to a
> conclusion as to how hard this is.
> The reason I wanted to do this is that the syntax represents a tree
> structure and the data structure being used in the rest of the code is
> a centralised tree structure.
> I wanted to build it once, instead of haven't to walk a distributed
> tree just to build a centralised one.
> 
> As an aside, on the Java front can v4 set 1.5 as a minimum and use generics?
> Also "Item 16: Favor composition over inheritance" (Effective Java 2nd
> ed) would help keep things tidy.
> 
> Regards
> Gary
> 
> 
> To be a bit more concrete re centralised vs distributed:
> 
> Centralised tree
> ================
> class Axis {
>  Map<Node,List<Node>> parent2Children;
>  Map<Node,Node> child2parent;
> 
>  void addChild(Node parent, Node child) { ... }
>  etc
> }
> class Node {
> }
> 
> 
> Distributed tree
> ==================
> class Node {
>   Node parent;
>   List<Node> children;
> 
>   void addChild(Node child){ ... }
>   etc
> }
> 
> On Mon, Sep 5, 2011 at 5:22 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi. Currently v3 requires nothing of your tree nodes; all you have to do is give me an adapter that says how to create them and navigate them and manipulate them. Users can set up ASTLabelType as an option so that $x in actions has the user's type instead of plain object.
>> 
>> Sam Harwell and I were talking today about restructuring all of the tree interfaces. We're breaking it up into a hierarchy with Tree interface at the top. Tree just says you can get a payload, some children, and parent. ParseTree and AST split off as sub interfaces. We were thinking that it's pretty silly to use simple object when we could require the minimal Tree interface so at least code could display or navigate them. The reason I went with plain object originally was so people could use any existing object they have, even if they only have binary for it. This seems like a fairly extreme example and, in the worst case, somebody could wrap those objects so they were suitable for use with ANTLR. More than likely, somebody in that situation would simply use actions to construct the trees they want. Most trees not built for antlr expect everything in the constructor, whereas antlr has to build up the trees piecemeal as it parses.
>> 
>> So, does anybody object to ANTLR assuming Tree in the parser if you are building trees and then AST in the tree parsers?
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 


From parrt at cs.usfca.edu  Mon Sep  5 09:02:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 5 Sep 2011 09:02:05 -0700
Subject: [antlr-interest] new Tree interfaces
In-Reply-To: <CAOrgODYLjX71yD_-jshpj89O+gT5xMg2eWzJF1buzhmyosjtoA@mail.gmail.com>
References: <7FDA1F29-5F6B-4FA6-A368-1859CFD59723@cs.usfca.edu>
	<CAOrgODYLjX71yD_-jshpj89O+gT5xMg2eWzJF1buzhmyosjtoA@mail.gmail.com>
Message-ID: <37CE08A0-33BB-4694-97BE-5BEFE358872B@cs.usfca.edu>

Yeah,First-time cleaning everything up and then slowly thinking about how generics get integrated. Is truly astounding just how wide the fanout is when you add a generic type. it ripples through all the classes. ugh. From the users point of view, however, it should look clean.

Ter
On Sep 4, 2011, at 11:47 PM, Bart Kiers wrote:

> Hi Ter, others,
> 
> Perhaps generics could be introduced in v4?
> 
> public interface Tree<T> {
> 	Tree<T> getParent();
> 	T getPayload();
> 	Tree<T> getChild(int i);
> 	int getChildCount();
> 	String toStringTree();
> }
> Regards,
> Bart
> 
> 
> On Sun, Sep 4, 2011 at 11:47 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> btw,If you want to take a look at the clean new tree interface:
> 
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/Tree.java
> 
> then sub interfaces
> 
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/SyntaxTree.java
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/ParseTree.java
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/AST.java
> 
> ...
> 
> Ter
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From s.barnett-cormack at lancaster.ac.uk  Mon Sep  5 09:19:53 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 05 Sep 2011 17:19:53 +0100
Subject: [antlr-interest] new Tree interfaces
In-Reply-To: <37CE08A0-33BB-4694-97BE-5BEFE358872B@cs.usfca.edu>
References: <7FDA1F29-5F6B-4FA6-A368-1859CFD59723@cs.usfca.edu>
	<CAOrgODYLjX71yD_-jshpj89O+gT5xMg2eWzJF1buzhmyosjtoA@mail.gmail.com>
	<37CE08A0-33BB-4694-97BE-5BEFE358872B@cs.usfca.edu>
Message-ID: <4E64F6A9.8030800@lancaster.ac.uk>

On 05/09/2011 17:02, Terence Parr wrote:
> Yeah,First-time cleaning everything up and then slowly thinking about
> how generics get integrated. Is truly astounding just how wide the
> fanout is when you add a generic type. it ripples through all the
> classes. ugh. From the users point of view, however, it should look
> clean.

WHen used sensibly, generics are absolutely wonderful. Many's the 
occasion I've used an API that would clearly benefit from genericisation 
from the programmer's point of view.

So I guess what I'm saying is, don't hide the generics from the 
user-coder unless there's a good reason to. We can always specify things 
as ? or Object if we really need to, but if there's no generics we can't 
avoid annoying casts. A genericised Tree interface would be a very 
sensible way to go, and it could even generate code that has no ? left 
in, but rather has specified generics. This will mean code using the 
generated code has well-defined return types while still being able to 
leverage common runtime code for management. I'm babbling, really, and 
this probably isn't telling anyone anything they haven't thought of, but 
on the off-chance that it is, I'm hitting 'send' rather than 'delete'...

Sam

> Ter On Sep 4, 2011, at 11:47 PM, Bart Kiers wrote:
>
>> Hi Ter, others,
>>
>> Perhaps generics could be introduced in v4?
>>
>> public interface Tree<T>  { Tree<T>  getParent(); T getPayload();
>> Tree<T>  getChild(int i); int getChildCount(); String
>> toStringTree(); } Regards, Bart
>>
>>
>> On Sun, Sep 4, 2011 at 11:47 PM, Terence Parr<parrt at cs.usfca.edu>
>> wrote: btw,If you want to take a look at the clean new tree
>> interface:
>>
>> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/Tree.java
>>
>>
>>
then sub interfaces
>>
>> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/SyntaxTree.java
>>
>>
http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/ParseTree.java
>> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/AST.java
>>
>>
>>
...
>>
>> Ter
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ben.corne at gmail.com  Mon Sep  5 12:25:51 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Mon, 5 Sep 2011 21:25:51 +0200
Subject: [antlr-interest] tree grammar and tokens
Message-ID: <CAGcyXXFmmi0gDE8O0rmBL2JcYn81peXh34ghSdgSNCJNgTvgWg@mail.gmail.com>

OK I'm clueless here.

I have a tree grammar ATDocWalker.g
and a parser grammar AmbientTalk.g generating the AST for ATDocWalker.

When I feed the parser this input:
//@"test"
deftype y;
deftype z;
deftype x <: y, z;

it outputs the following pretty printed AST:

PARSE TREE-----------
(AGBEGIN
(AGSTATEMENT
(AGTYPEDEFINITION
(AGSYMBOL y))
 (AGDOCUMENTATION //@"test"
))
(AGSTATEMENT
(AGTYPEDEFINITION
 (AGSYMBOL z)))
(AGSTATEMENT
(AGTYPEDEFINITION
 (AGSYMBOL x)
(AGSYMBOL y)
(AGSYMBOL z))))
END OF TREE----------

Everything looks normal (the newline after "test" is normal, since it's
included in the SINGLE_LINE_ANNOTATION lexer token).

When passing this AST to my tree grammar consisting of only a few rules so
far, just enough to parse this, I get the following exception:
/home/bcorne/ATDOC/Documenter/grammar/ATDocWalker.g: node from line 1:0
mismatched tree node: //@"test"
 expecting SINGLE_LINE_ANNOTATION

This is the tree rule causing the mismatched node:
documentation[ATDocGeneral doc]
  : ^( AGDOCUMENTATION
       ( d=SINGLE_LINE_ANNOTATION
       )
     ) {
      System.out.println("processing: "+$d.text);
      AnnotationProcessor.process($d.text,$doc);
    }
  ;

In this tree grammar I use almost exactly the same rules to obtain the type
definition names x, y and z. I have no clue what goes wrong with the
annotation.
Replacing the SINGLE_LINE_ANNOTATION token with the token definition from my
AmbientTalk.g file ('//@' ~( '\n' | '\r' )* '\r'? '\n') also has no effect.
It
then says that it expects '//@'.

Any ideas on what goes wrong here?
Thanks!
Ben

From javamark at gmail.com  Mon Sep  5 13:29:43 2011
From: javamark at gmail.com (Mark)
Date: Mon, 5 Sep 2011 21:29:43 +0100
Subject: [antlr-interest] StringTemplate 4 Question
Message-ID: <CAA+iPjiYEsn=hvZSQOp4eHbSHAf3=ohxAqW9rJBm-ZAJU8gT3w@mail.gmail.com>

Hiya All.

In ST 3 you could point to a directory of templates and then retrieve
a templatre instance by it's name via it's name. Simple!

eg:

		StringTemplateGroup group = new StringTemplateGroup("group",
"src/main/resources");
		StringTemplate f = group.getInstanceOf("webpage");

Where webpage.st contains HTML?

In ST 4 I can't seem to get this to work :(

Any ideas?

From ben.corne at gmail.com  Mon Sep  5 13:36:38 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Mon, 5 Sep 2011 22:36:38 +0200
Subject: [antlr-interest] StringTemplate 4 Question
In-Reply-To: <CAA+iPjiYEsn=hvZSQOp4eHbSHAf3=ohxAqW9rJBm-ZAJU8gT3w@mail.gmail.com>
References: <CAA+iPjiYEsn=hvZSQOp4eHbSHAf3=ohxAqW9rJBm-ZAJU8gT3w@mail.gmail.com>
Message-ID: <CAGcyXXHR-TA+dyvcoa6sWW9M2vRPzSx5qn=hFwx+G3xvEmhsnA@mail.gmail.com>

I'm using ST4.04 and this works for me.
I think you want the stringtemplate-interest at antlr.org mailinglist though.
Regards, Ben

2011/9/5 Mark <javamark at gmail.com>

> Hiya All.
>
> In ST 3 you could point to a directory of templates and then retrieve
> a templatre instance by it's name via it's name. Simple!
>
> eg:
>
>                StringTemplateGroup group = new StringTemplateGroup("group",
> "src/main/resources");
>                StringTemplate f = group.getInstanceOf("webpage");
>
> Where webpage.st contains HTML?
>
> In ST 4 I can't seem to get this to work :(
>
> Any ideas?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Mon Sep  5 18:05:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 5 Sep 2011 18:05:12 -0700
Subject: [antlr-interest] more Tree visitor thoughts
Message-ID: <A5BBA200-0EB9-4D88-AEE5-12560BD49351@cs.usfca.edu>

Hi. I have a decent prototype implementation of an automatic tree construction mechanism for ANTLR 4 working, which I describe here:

http://bit.ly/nh8RmL

My basic goal here is to allow newbies and experts alike to get something running quickly by simply implementing a listener interface automatically generated by ANTLR. The grammar would not need any actions at all and there would be no special flag on the command line to generate parsers capable of building these automatic trees--it's a simple Boolean flag set in the parser, indicating if these trees should be built.

Please let me know if you think this would be useful.

Ter

From martijn.reuvers at gmail.com  Mon Sep  5 22:16:04 2011
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Tue, 6 Sep 2011 07:16:04 +0200
Subject: [antlr-interest] new Tree interfaces
In-Reply-To: <4E64F6A9.8030800@lancaster.ac.uk>
References: <7FDA1F29-5F6B-4FA6-A368-1859CFD59723@cs.usfca.edu>
	<CAOrgODYLjX71yD_-jshpj89O+gT5xMg2eWzJF1buzhmyosjtoA@mail.gmail.com>
	<37CE08A0-33BB-4694-97BE-5BEFE358872B@cs.usfca.edu>
	<4E64F6A9.8030800@lancaster.ac.uk>
Message-ID: <CAON31m67fLOBHnRv_HHLiWKen-NtbGRbhM5+EeLDj0+AvrNgjg@mail.gmail.com>

Yeah adding generics in a sensible way would be nice.

As for the interfaces, they seem fine at first look. I wouldn't expose
the implementation on the interface though, rather make it a protected
class or something - unless you really want to expose it, make it a
normal class?

Thanks!
Martijn

On Mon, Sep 5, 2011 at 6:19 PM, Sam Barnett-Cormack
<s.barnett-cormack at lancaster.ac.uk> wrote:
> On 05/09/2011 17:02, Terence Parr wrote:
>> Yeah,First-time cleaning everything up and then slowly thinking about
>> how generics get integrated. Is truly astounding just how wide the
>> fanout is when you add a generic type. it ripples through all the
>> classes. ugh. From the users point of view, however, it should look
>> clean.
>
> WHen used sensibly, generics are absolutely wonderful. Many's the
> occasion I've used an API that would clearly benefit from genericisation
> from the programmer's point of view.
>
> So I guess what I'm saying is, don't hide the generics from the
> user-coder unless there's a good reason to. We can always specify things
> as ? or Object if we really need to, but if there's no generics we can't
> avoid annoying casts. A genericised Tree interface would be a very
> sensible way to go, and it could even generate code that has no ? left
> in, but rather has specified generics. This will mean code using the
> generated code has well-defined return types while still being able to
> leverage common runtime code for management. I'm babbling, really, and
> this probably isn't telling anyone anything they haven't thought of, but
> on the off-chance that it is, I'm hitting 'send' rather than 'delete'...
>
> Sam
>
>> Ter On Sep 4, 2011, at 11:47 PM, Bart Kiers wrote:
>>
>>> Hi Ter, others,
>>>
>>> Perhaps generics could be introduced in v4?
>>>
>>> public interface Tree<T> ?{ Tree<T> ?getParent(); T getPayload();
>>> Tree<T> ?getChild(int i); int getChildCount(); String
>>> toStringTree(); } Regards, Bart
>>>
>>>
>>> On Sun, Sep 4, 2011 at 11:47 PM, Terence Parr<parrt at cs.usfca.edu>
>>> wrote: btw,If you want to take a look at the clean new tree
>>> interface:
>>>
>>> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/Tree.java
>>>
>>>
>>>
> then sub interfaces
>>>
>>> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/SyntaxTree.java
>>>
>>>
> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/ParseTree.java
>>> http://www.antlr.org/depot/antlr4/main/runtime/Java/src/org/antlr/v4/runtime/tree/AST.java
>>>
>>>
>>>
> ...
>>>
>>> Ter
>>>
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From douglasgodfrey at gmail.com  Tue Sep  6 01:43:24 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 06 Sep 2011 04:43:24 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <CA8B50BB.1DBC%douglasgodfrey@gmail.com>

1) Extend the Refactor:RemoveLeftRecursion function to either assist in
removing or automatically remove left recursion loops that involve more
than 1 rule

2) Tighter integration between AntlrWorks and Antlr to report the source
of ambiguities found during code generation and resolve them

3) Antlr grammar access to the symbol table classes already present in
Antlr
   i.e. defining symbol table entries and accessing symbol attributes
without productions

4) Enable debugging grammars for targets other than Java by inserting
calls to a function that communicates with the AntlrWorks debugger

On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

>Hi, In parallel with the development of ANTLR v4, superstar Colin Bean
>will be building the new version of ANTLRWorks. We already have a great
>base in what Jean Bovet did for the 1st version. It's a known entity and
>has lots of bookkeeping code that we can cut and paste into the new one
>such as the automatic update facility and preferences. Because we've got
>something to play with, we have something to critique and also a basic
>target.
>
>I can imagine the basic tool being missing but it would be great to get
>feedback from the antlr community.  Remember, that there are probably 2
>main communities: the people new to languages and/or ANTLR and the people
>very used to working with ANTLR grammars. For example, new people tend to
>like the syntax diagrams but many old-timers like myself prefer looking
>at the grammar because it's more terse.  Recognizing that we must serve
>both those communities, please comment with any thoughts on the following:
>
>* What feature seemed like a good idea, but didn't end up being that
>valuable? You can say even heretical things like: " the single step
>feature in the debugger just didn't seem to be that useful beyond
>learning about parsing"
>
>* Do you use the re-factoring? Keep in mind that v4 will automatically
>handle direct left recursion.
>
>* What features do you think are really critical to add?
>
>* What features could be really great if we improved them?
>
>* Do we need better export facilities?   would you really use things like
>"export grammar as hyperlinked HTML", for example.
>
>* What parts of the debugger did you use? There is a lot of stuff in
>there like: breakpoints on input tokens, step forward, step backward,
>jump to the end, break on specific kinds of events, break at specific
>line in the grammar, show the parse tree, show the AST constructed, list
>to the incoming events, etc...  Should we rethink the entire notion of
>the debugger at something that simply displays information about what it
>sees during the parse?  I.e., doesn't need to be a controller in the
>sense that you can single step the actual running parser over the usual
>socket connection?
>
>You might include whether you are in the newbie or experienced camp or
>somewhere in between.
>
>Udo Borkowski has already implemented a fantastic tree layout algorithm
>from an academic paper. The performance is extremely good and the results
>are tight.  Colin will probably implement his own syntax diagram viewer
>so that we can make it more than just a pretty picture. We want to
>highlight elements and step through etc.
>
>Thanks!
>Ter
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From erelsgl at gmail.com  Tue Sep  6 04:13:35 2011
From: erelsgl at gmail.com (Erel Segal)
Date: Tue, 6 Sep 2011 14:13:35 +0300
Subject: [antlr-interest] bi-directional grammar
Message-ID: <CAF6EEzmUty+ht6G5gbHx23BtBRL=0KNhEbhf2+Dq=-+r7j3YLA@mail.gmail.com>

ANTLR parsers normally work in a single direction - they get an input
document and return some information related to it (e.g. the parse tree). Is
it possible to create, using the same grammar, a generator that will work in
the opposite direction - get the information and return the original
document?

To illustrate what I mean, here is a simple grammar, with a single rule:

question returns [String issue]
    :   'What are your salary demands?' {$issue="Salary";}
    |   'What would you like as your job description?' {$issue="Job
Description";}
    |   'Do you demand a company car?' {$issue="Leased Car";}
    ;

If I create a parser from this grammar, run it on a stream that contains "What
are your salary demands?", and call its question() method, it will return
"Salary".

I would like to be able to do the opposite - send "Salary" as input, and get
"What are your salary demands?" as output, but use the same grammar for both
tasks.

Is this possible with ANTLR?

From researcher0x00 at gmail.com  Tue Sep  6 05:50:15 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 6 Sep 2011 08:50:15 -0400
Subject: [antlr-interest] bi-directional grammar
In-Reply-To: <CAF6EEzmUty+ht6G5gbHx23BtBRL=0KNhEbhf2+Dq=-+r7j3YLA@mail.gmail.com>
References: <CAF6EEzmUty+ht6G5gbHx23BtBRL=0KNhEbhf2+Dq=-+r7j3YLA@mail.gmail.com>
Message-ID: <CAN45N11N3=3b3ibDiRtQAMqCXvaHYEsaecACQ665cY+hzjyXxQ@mail.gmail.com>

On Tue, Sep 6, 2011 at 7:13 AM, Erel Segal <erelsgl at gmail.com> wrote:

> ANTLR parsers normally work in a single direction - they get an input
> document and return some information related to it (e.g. the parse tree).
> Is
> it possible to create, using the same grammar, a generator that will work
> in
> the opposite direction - get the information and return the original
> document?
>
> To illustrate what I mean, here is a simple grammar, with a single rule:
>
> question returns [String issue]
>    :   'What are your salary demands?' {$issue="Salary";}
>    |   'What would you like as your job description?' {$issue="Job
> Description";}
>    |   'Do you demand a company car?' {$issue="Leased Car";}
>    ;
>
> If I create a parser from this grammar, run it on a stream that contains
> "What
> are your salary demands?", and call its question() method, it will return
> "Salary".
>
> I would like to be able to do the opposite - send "Salary" as input, and
> get
> "What are your salary demands?" as output, but use the same grammar for
> both
> tasks.
>
> Is this possible with ANTLR?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
I don't know how this could be done in ANTLR, but PROLOG should work.

Eric

From jayaniw at ecollege.com  Tue Sep  6 08:40:22 2011
From: jayaniw at ecollege.com (Jayani Withanawasam)
Date: Tue, 6 Sep 2011 21:10:22 +0530
Subject: [antlr-interest] Get tokens in the Hidden channel
Message-ID: <1BD3AB91969DC74DA1F872AA45E5208B0731C2E8@SRIMBCL01.eclg.org>

Hi all,

 

In my lexer, the comments (single line and multi line) are sent to
hidden channel, thus prevent them from passing to the parser.

 

Here's the related code:

 

COMMENT     :     '--' (~('\r' | '\n'))* NLfrag { $channel = HIDDEN; }
;

 

Is there any way to get these tokens from hidden channel and do some
processing on them?

My target language is C# .Net 2.0 and ANTLR version is 3.1.

 

Appreciate your help on this.

 

Thanks,

Jayani Withanawasam

 


From dejas9000 at gmail.com  Tue Sep  6 10:54:37 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Tue, 6 Sep 2011 12:54:37 -0500
Subject: [antlr-interest] org.antlr.runtime.Parser.getMissingSymbol
 (Line 70) throws NullPointerException
In-Reply-To: <CAOrgODa4ODedwBWYSW0jJ8=fysPExzFJ57k-TzDAEHrAHsGJCg@mail.gmail.com>
References: <CAEAw34O26OXEury+Yy+DjkT2DQPCXT6fNr4x-HYmnoUqfsTQ1w@mail.gmail.com>
	<CAOrgODa4ODedwBWYSW0jJ8=fysPExzFJ57k-TzDAEHrAHsGJCg@mail.gmail.com>
Message-ID: <CAEAw34OMRGWkDMuBZ0i7hLnzK7DTavXZKvXdwTGSpaPHv89o5Q@mail.gmail.com>

Sorry. I guess my question is why does ANTLR throw a NPE when that grammar
is given an empty string.

Thanks.

On Fri, Sep 2, 2011 at 1:05 AM, Bart Kiers <bkiers at gmail.com> wrote:

> Hi,
>
> On Fri, Sep 2, 2011 at 1:51 AM, Dejas Ninethousand <dejas9000 at gmail.com>wrote:
>
>> For this grammar with an empty string input:
>>
>> grammar PySON;
>
> ...
>
>
> I think you forgot to ask your question.
>
> Regards,
>
> Bart.
>

From sharwell at pixelminegames.com  Tue Sep  6 11:35:08 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Tue, 6 Sep 2011 13:35:08 -0500
Subject: [antlr-interest] Problems with Tree Grammars outputting
	Templates	in C#
In-Reply-To: <CACotV_1HAyNAUZuABywR7Y0ofqpeyYWDYAfNgXkEu6mbtZ0nVA@mail.gmail.com>
References: <CACotV_1HAyNAUZuABywR7Y0ofqpeyYWDYAfNgXkEu6mbtZ0nVA@mail.gmail.com>
Message-ID: <010f01cc6cc3$b4bcdb00$1e369100$@pixelminegames.com>

Hi Maik,

I'll be fixing this issue for the next release of the C# target. In the
meantime, you can make the follow 3 changes to the CSharp3 templates and
things will work for you.

1. Add the following rule CSharp3.stg:

ruleListLabelType() ::= "<ASTLabelType>"

2. Add the following rule to ST.stg:

ruleListLabelType() ::= "StringTemplate"

3. In CSharp3.stg, find the ruleLabelDefs rule. Change the reference from
<ASTLabelType> to <ruleListLabelType()>.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Maik Schmidt
Sent: Thursday, August 25, 2011 10:15 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problems with Tree Grammars outputting Templates
in C#

Hi!

I am working through the "Language Implementation Patterns" book and I am
translating all examples to C#. Unfortunately, I cannot get StringTemplate
output to work.

Attached you'll find a grammar named Cymbol.g3 and a tree parser named
Gen.g3. I have downloaded them from the publisher's web site and only had to
change a few minor thing to make them compliant with C#.

VisualStudio 2010 turns the g3 files into grammars and lexers nicely, but
unfortunately I cannot compile them. The problem seems to appear whenever an
expression such as "d+=" is used as in the following rule:

compilationUnit:   ( d+=classDeclaration | d+=methodDeclaration |
d+=varDeclaration )+ -> file(defs={$d})

For such rules I get errors like the following:

Error 6 Argument 1: cannot convert from 'Antlr3.ST.StringTemplate' to
'Antlr.Runtime.Tree.CommonTree' c:\users\mschmidt2\documents\visual studio
2010\Projects\StringTemplateTest\StringTemplateTest\obj\x86\Debug\Gen.cs

The corresponding code snippet looks as follows:

case 1:
DebugEnterAlt(1);
// Gen.g3:13:11: d+= classDeclaration
{
DebugLocation(13, 12);
PushFollow(Follow._classDeclaration_in_compilationUnit74);
d=classDeclaration();
PopFollow();
if (state.failed) return retval;
if (list_d==null) list_d=new List<StringTemplate>(); list_d.Add(d.Template);

The problem seems to be the initial definition of list_d which is

List<CommonTree> list_d = null;

What am I doing wrong?

Cheers,
Maik


From dejas9000 at gmail.com  Tue Sep  6 14:44:54 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Tue, 6 Sep 2011 16:44:54 -0500
Subject: [antlr-interest] How can I get the string contents of a Kleene
	Closure?
Message-ID: <CAEAw34O8ZpSzL41F62Z8L5GdKHcBVRabVnTooXDktn96VYxyWw@mail.gmail.com>

I have the following production in my ANTLR grammar:

rich_newick_string
: str=(.*';') { stack.pushRichNewickString($str.text); };

I expected some string match to be passed to my pushRichNewickString method,
but instead I'm getting null. What am I doing wrong?

Thanks.

From barywp at gmail.com  Tue Sep  6 14:53:46 2011
From: barywp at gmail.com (Bary W Pollack)
Date: Tue, 6 Sep 2011 14:53:46 -0700
Subject: [antlr-interest] Problem using ANTLRWorks 1.4.3 with Java 1.7 and
	Win 7 Pro
Message-ID: <CAPcnShcuY1UGDjsOC7Eq_vEvRRNZQS5DW6CJPqm3nJ_wSZCKAA@mail.gmail.com>

Please see the attached file to see the problems I am encountering. They're
100% repeatable. I'm an ANTLR newbie. Just downloaded the release version of
ANTLRWorks and am trying to use it...

Please reply to me at my barywp at gmail.com address.

Thanks!

-- 
Bary W Pollack
barywp at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: 4ANTLR Problem.docx
Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document
Size: 51137 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110906/d2fedd39/attachment.bin 

From researcher0x00 at gmail.com  Tue Sep  6 15:38:56 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 6 Sep 2011 18:38:56 -0400
Subject: [antlr-interest] Problem using ANTLRWorks 1.4.3 with Java 1.7
 and Win 7 Pro
In-Reply-To: <CAPcnShcuY1UGDjsOC7Eq_vEvRRNZQS5DW6CJPqm3nJ_wSZCKAA@mail.gmail.com>
References: <CAPcnShcuY1UGDjsOC7Eq_vEvRRNZQS5DW6CJPqm3nJ_wSZCKAA@mail.gmail.com>
Message-ID: <CAN45N13PxHU5eKC28NpYcb2Ozmqbn5tF-NfBv8hodtXVoLkQkw@mail.gmail.com>

>
> Hi Bary,
>
>
>
> For Interpreter Tab ... just click OK. It is not an error it is a warning
> about predicates, the Interpreter should still work for entry level
> grammars.
>
> See the glossary for definition of predicates.
> http://www.antlr.org/doc/glossary.html
>
>
>
> For the debugger, you most likely need a driver program. The Interpreter
> supplies a driver program, but the debugger requires you to create one.
>
>
>
> If all this seems like too much and you just want to get started with
> ANTLR, I would forgo ANTLRWorks and use the command line as is done here.
>
>
> http://www.antlr.org/wiki/display/ANTLR3/Five+minute+introduction+to+ANTLR+3
> .
>
>
>
> Also ANTLRWorks 1.4.3 has some bugs, I would stick with 1.4.2 which you can
> get here. http://www.antlr.org/download
>
>
>
> Cheers, Eric
>

From researcher0x00 at gmail.com  Tue Sep  6 18:25:40 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 6 Sep 2011 21:25:40 -0400
Subject: [antlr-interest] Problem using ANTLRWorks 1.4.3 with Java 1.7
 and Win 7 Pro
In-Reply-To: <CAN45N13PxHU5eKC28NpYcb2Ozmqbn5tF-NfBv8hodtXVoLkQkw@mail.gmail.com>
References: <CAPcnShcuY1UGDjsOC7Eq_vEvRRNZQS5DW6CJPqm3nJ_wSZCKAA@mail.gmail.com>
	<CAN45N13PxHU5eKC28NpYcb2Ozmqbn5tF-NfBv8hodtXVoLkQkw@mail.gmail.com>
Message-ID: <CAN45N12+cb1Jiycg=3XH3iUW5Q7MzM+-UNfS3fbY-cgnZLC+HA@mail.gmail.com>

Hi Bary,


> For the debugger, you most likely need a driver program. The Interpreter
>> supplies a driver program, but the debugger requires you to create one.
>>
>
I was thinking about the command line requiring user written driver when I
mentioned the debugger. My bad. The debugger should be able to build the
compiler and lexer from a valid grammar and then run.
After you select Debug from the menu and click OK for the input dialog,
ANTLRWorks will create the necessary files for you in an ouput directory.

output
??? classes
?   ??? test
?   ?   ??? ExprLexer.class
?   ?   ??? ExprParser.class
?   ??? __Test__.class
??? ExprLexer.java
??? ExprParser.java
??? Expr.tokens
??? __Test___input.txt
??? __Test__.java
2 directories, 8 files

The debugger problem is related to the fact that the debugger communicates
using a port. About the only thing you can change is the port number in
ANTLRWork preferences.

The Preferences option is not available until a grammar is open. Strange
bug.

>From the menu File -> Preferences -> Debugger -> Default Local Port.  It
should be 49100 but use to be 49153. Sometimes you just have to start the
debugger a few times to get it to work, or exit and restart ANTLRWorks a few
times.



If that doesn't get you working the best place to find help is
http://antlr.markmail.org/  search terms: debug port.

Hope that helps.

Eric

From contact at maik-schmidt.de  Wed Sep  7 01:19:58 2011
From: contact at maik-schmidt.de (pragmaik)
Date: Wed, 7 Sep 2011 01:19:58 -0700 (PDT)
Subject: [antlr-interest] Problems with Tree Grammars outputting
	Templates	in C#
In-Reply-To: <010f01cc6cc3$b4bcdb00$1e369100$@pixelminegames.com>
References: <CACotV_1HAyNAUZuABywR7Y0ofqpeyYWDYAfNgXkEu6mbtZ0nVA@mail.gmail.com>
	<010f01cc6cc3$b4bcdb00$1e369100$@pixelminegames.com>
Message-ID: <1315383598617-6766948.post@n2.nabble.com>

Hi Sam!

Works great now! Thank you very much!

Maik


--
View this message in context: http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Templates-in-C-tp6724828p6766948.html
Sent from the ANTLR mailing list archive at Nabble.com.

From ruslan_zasukhin at valentina-db.com  Wed Sep  7 05:22:59 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 07 Sep 2011 15:22:59 +0300
Subject: [antlr-interest] [v2 to v3][C++/C] Fresh list of features for v3.4?
	// @after
Message-ID: <CA8D3CD3.F1B16%ruslan_zasukhin@valentina-db.com>

Hi Terrence,
Hi Jim,

Our status is:
*  we have used ANTLR 2.7 C++ in our Valentina DB engine near to 10 years.
* we have start smooth steps to ANTLR3 switch more of year ago ...
    always something have interrupt us.

Now we have working grammar, and tree parser grammar,
and all this is integrated by #define into db engine, so far all good.

Now task is provide error reporting.
    How EASY this was in ANTLR v2 for us - C++ developers..
    And I already have spent two days reading reading reading
        site, docs, google, mail list, book, ...

Terrence, I do not complain, but IMO, at least for C target it is very hard
find on SITE, docs that answer major questions.

I believe, it is not correct way, push developers to search google, and prev
letters for last 3 years. Right?

While I have read letters, I have note, for example, one at 2009 year, where
is said
    @after is not supported in C target

So I ask self.  
* Hmm, I have NOT see this info in docs, which I have to read already. And
* Hmm, interesting if this feature still not implemented for C?

And may be I am blind, but I do not see such page on SITE/WIKI,
As

=========================================
            List of Features of Runtime Targets  v3.4
                               (and another pages for v 3.3  3.2  3.1  3.0 )

                Java        C           C#
    
@after      yes           no         ?
=========================================


You see my point?

I should say that ANTLR3 somehow is harder to use from box ...
May be at least for C target ...
May be at least comparing to what we are used in v2.7


Couple days ago you have asked about features for 4.x  :-)
I would like to ask add such major and important info into SITE.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From jayaniw at ecollege.com  Wed Sep  7 05:47:03 2011
From: jayaniw at ecollege.com (Jayani Withanawasam)
Date: Wed, 7 Sep 2011 18:17:03 +0530
Subject: [antlr-interest] Get tokens in the Hidden channel
References: <FE52B98DC477754DA0D13D5A7FEA39EE2C95D62B2C@SRIMBCL01.eclg.org>
Message-ID: <1BD3AB91969DC74DA1F872AA45E5208B0731C4A1@SRIMBCL01.eclg.org>

Found the solution!

 

You can retrieve comments from CommonTokenStream.

It contains all the tokens including tokens in the hidden channel.

 

Thanks everyone!

Jayani.

 

From: Jayani Withanawasam 
Sent: Tuesday, September 06, 2011 9:10 PM
To: antlr-interest at antlr.org.
Cc: Rajitha Jayawickrama
Subject: Get tokens in the Hidden channel 

 

Hi all,

 

In my lexer, the comments (single line and multi line) are sent to
hidden channel, thus prevent them from passing to the parser.

 

Here's the related code:

 

COMMENT     :     '--' (~('\r' | '\n'))* NLfrag { $channel = HIDDEN; }
;

 

Is there any way to get these tokens from hidden channel and do some
processing on them?

My target language is C# .Net 2.0 and ANTLR version is 3.1.

 

Appreciate your help on this.

 

Thanks,

Jayani Withanawasam

 


From amelie.mueller at thermofisher.com  Wed Sep  7 06:12:53 2011
From: amelie.mueller at thermofisher.com (Mueller, Amelie)
Date: Wed, 7 Sep 2011 14:12:53 +0100
Subject: [antlr-interest] Problems with Visual Studio 2010 and C#
Message-ID: <1DF3C369EA142349BBE034D9F441C97BD8B60B432F@UKHIG-MXVS01.emea.thermo.com>

Hello,

I'm currently working at a Project in cooperation with Thermo Fisher Scientific.
We have chosen to take ANTLR as a tool .
Right in the beginning a Problem appeared, when I try to run just a Example.
I?m working with Visual Studio 2010 and use a C# Windows Form Application where I want to implement a Parser.
I`m using the new Version 1.4.3 of Antlr and reference is the Antrl3.Runtime.dll.

The Problem is that in the generated Code (in CSharp2 or CSharp3 ) is a  Method that is not known from none Library

public AstParserRuleReturnScope<CommonTree, CommonToken> compileUnit()

I don't know if it is  just a simple problem because I missed something
or if the problem appear because of the new version of the CSharp Libraries.
Fact is that I don't found this method somewhere(google, antlr homepage).

Thanks for your help,

best regards

Amelie Mueller
Software Tests & Development
Thermo Scientific Cytomat Products
Scientific Instruments - Laboratory Automation

ThermoFisher Scientific
Robert-Bosch-Str. 1
D-63505 Langenselbold, Germany


From contact at maik-schmidt.de  Wed Sep  7 06:30:50 2011
From: contact at maik-schmidt.de (pragmaik)
Date: Wed, 7 Sep 2011 06:30:50 -0700 (PDT)
Subject: [antlr-interest] Problems with Visual Studio 2010 and C#
In-Reply-To: <1DF3C369EA142349BBE034D9F441C97BD8B60B432F@UKHIG-MXVS01.emea.thermo.com>
References: <1DF3C369EA142349BBE034D9F441C97BD8B60B432F@UKHIG-MXVS01.emea.thermo.com>
Message-ID: <1315402250112-6767788.post@n2.nabble.com>

Hi Amelie!

I'm using the same constellation and it works fine (there is a small issue
when using StringTemplate, but you can find a workaround here:
http://antlr.1301665.n2.nabble.com/Problems-with-Tree-Grammars-outputting-Templates-in-C-td6724828.html#a6766948).

The method you are looking for is generated by ANTLR and obviously you have
a rule named 'compileUnit'. One of the big differences between the Java and
the C# version is that you have to specify visibility modifiers for your
rules, that is the compileUnit() method generated from the compileUnit rule
is not public by default. Simply add a 'public' in front of your rule name.

Maik


--
View this message in context: http://antlr.1301665.n2.nabble.com/Problems-with-Visual-Studio-2010-and-C-tp6767744p6767788.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sharwell at pixelminegames.com  Wed Sep  7 06:32:22 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 7 Sep 2011 08:32:22 -0500
Subject: [antlr-interest] Problems with Visual Studio 2010 and C#
In-Reply-To: <1DF3C369EA142349BBE034D9F441C97BD8B60B432F@UKHIG-MXVS01.emea.thermo.com>
References: <1DF3C369EA142349BBE034D9F441C97BD8B60B432F@UKHIG-MXVS01.emea.thermo.com>
Message-ID: <014f01cc6d62$939ec420$badc4c60$@pixelminegames.com>

Hi Amelie,

You can find the latest version of the C# targets along with instructions
for setting up your project in Visual Studio at the following location:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mueller, Amelie
Sent: Wednesday, September 07, 2011 8:13 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problems with Visual Studio 2010 and C#

Hello,

I'm currently working at a Project in cooperation with Thermo Fisher
Scientific.
We have chosen to take ANTLR as a tool .
Right in the beginning a Problem appeared, when I try to run just a Example.
I?m working with Visual Studio 2010 and use a C# Windows Form Application
where I want to implement a Parser.
I`m using the new Version 1.4.3 of Antlr and reference is the
Antrl3.Runtime.dll.

The Problem is that in the generated Code (in CSharp2 or CSharp3 ) is a
Method that is not known from none Library

public AstParserRuleReturnScope<CommonTree, CommonToken> compileUnit()

I don't know if it is  just a simple problem because I missed something or
if the problem appear because of the new version of the CSharp Libraries.
Fact is that I don't found this method somewhere(google, antlr homepage).

Thanks for your help,

best regards

Amelie Mueller
Software Tests & Development
Thermo Scientific Cytomat Products
Scientific Instruments - Laboratory Automation

ThermoFisher Scientific
Robert-Bosch-Str. 1
D-63505 Langenselbold, Germany


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ruslan_zasukhin at valentina-db.com  Wed Sep  7 06:35:11 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 07 Sep 2011 16:35:11 +0300
Subject: [antlr-interest] [v2 to v3][C++/C] throw C++ exception from
	parser/tree parser.
Message-ID: <CA8D4DBF.F1B32%ruslan_zasukhin@valentina-db.com>

Hi Terrence, 
Hi Jim,

First of all again: thank you for great job and product(s),
Please do not take below my text as complains, but mainly as explanation
where C++ developer get problems with ANTLR3 and why ...
And some suggestions how this can be may be improved.
Long letter but should be easy to read :-)


===================================
So ... in ANTLR2 it was very simple to handle errors from box:
    it throws exception, few lines of code with catch() -> DONE.

All our db engine expects exceptions from ANTLR v2/v3 and its wrapper code.
Two days I am reading reading reading ...

I have found 2-3 such questions from C++ developers:
    if we can throw from my displayError()?

Answer from Jim was like this:

> On 1/15/09 8:23 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> 
>> You can probably use them carefully, but as you point out, you have to
>> be careful with memory. The runtime tracks all its normal memory
>> allocations so  as long as you close the 'classes' correctly you should
>> generally be OK. However, you should make sure that throwing exceptions
>> does not bypass the normal rule clean up, such as resetting error and
>> backtracking flags and so on,

Okay, but  I'd expect to see more details (x5 - x10 times more text and code
example) at this section

    http://www.antlr.org/api/C/index.html

* what is known TODAY?  at 2011  ?
        Can we throw here C++ exc?
        don't this break logic of C code of parsers?
        True working example

* EXAMPLE?

    I have open folder Examples/C  and made search on "exception".
    Found only in the JAVA files, used for tests of parser.
    There is no example for C++ exceptions.
    There is no example with override displayRecognitionError()

* Or look on this code-example.
         http://www.antlr.org/api/C/index.html

The only here ERROR-related line is
    if (psr->pParser->rec->errorCount > 0)
    
Then silent ...  And questions come to mind

** So, if not throw() exceptions, then after tree-parser, I check if there
was any errors and IF they was ... What next ???

I have read that C target builds LIST of exception objects,
But where is TEXT and example how navigate that list?


** and if I will throw error from displayRecognitionError() then
    such check of counter is useless ...



==========================================
Okay, next ...
There is good helpful pages ANTLR2 to ANTLR3 ...   Great!

But this page mainly about grammar and Java. And zero info here to help
existed C++ developers port their ANTLR2 products.
Hmm.


================
Also when I watch default displayRecognitionError() from .c
with many points, which do print to stderr as:

-----------------------
void displayRecognitionError(
    pANTLR3_BASE_RECOGNIZER recognizer,
    pANTLR3_UINT8*            tokenNames )
{
...
             ANTLR3_FPRINTF(stderr, "-end of input-(");
------------------------


I wonder, why not provide here same function, which do sprintf() into string
buffer,  and TWO very small wrapper-functions, which get this string and

1) print it to stderr as now;
2) throw it as c++ exception;

//------------------------------------------------------
pANTLR3_STRING buildRecognitionError(
    pANTLR3_BASE_RECOGNIZER recognizer,
    pANTLR3_UINT8*            tokenNames )
{
    ............
    return resStr; 
}


//------------------------------------------------------
void displayRecognitionError_stderr(
    pANTLR3_BASE_RECOGNIZER recognizer,
    pANTLR3_UINT8*            tokenNames )
{
      pANTLR3_STRING res = buildRecognitionError( recognizer, tokenNames  );
      ANTLR3_FPRINTF( stderr, res );
}


//------------------------------------------------------
void displayRecognitionError_throw(
    pANTLR3_BASE_RECOGNIZER recognizer,
    pANTLR3_UINT8*            tokenNames )
{
      pANTLR3_STRING res = buildRecognitionError( recognizer, tokenNames  );
      throw SomeException( res );
}


Yes, not big deal may be, but will simplify usage of ANTLR3 from box.
I could read in ANTLR 3.5:
    just install displayRecognitionError_throw, and your parser
    will start throw C++ exceptions.
    30 seconds deal, instead of two days and still in doubts ...


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From jimi at temporal-wave.com  Wed Sep  7 09:30:20 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 7 Sep 2011 09:30:20 -0700
Subject: [antlr-interest] [v2 to v3][C++/C] Fresh list of features for
 v3.4? // @after
In-Reply-To: <CA8D3CD3.F1B16%ruslan_zasukhin@valentina-db.com>
References: <CA8D3CD3.F1B16%ruslan_zasukhin@valentina-db.com>
Message-ID: <69a80a55958eb5e207f54ad732e6e016@mail.gmail.com>

It is a C target not a C++ target, so it is raw and closer to the metal.
It is a lot faster than the 2.7 C++ target as a result, but you have to
dig a little.

Starting at the C API documentation linked from the ANTLR front page,
select ANTLR3 C Usage Guide then Using the ANTLR3 C Target, then
implementing Customized Methods, where you find the following text:

Implementing Customized Methods
Unless you wish to create your own tree structures using the built in
ANTLR AST rewriting notation, you will rarely need to override the default
implementation of runtime methods. The exception to this will be the
syntax err reporting method, which is essentially a stub function that you
will usually want to provide your own implementation for. You should
consider the built in function displayRecognitionError() as an example of
where to start as there can be no really useful generic error message
display

Selecting that shows you the documentation for that function. This is what
you should override. Start by copying the example version in the runtime,
then adapt it to your own needs. It is pretty easy.

In general all the names of methods and routines in the C runtime reflect
the Java names so that you can find Java examples and then see the
differences with C by looking for the C examples or searching the List or
reading the code. You will find it very helpful to single step your parser
in the C debugger for instance.

Also, searching from the Support page of antlr.org:

http://markmail.org/search/list:antlr+C+displayRecognitionError


Or, as there is no work out there in the world right now, you could just
hire me to do it all for you :)


Jim




> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruslan Zasukhin
> Sent: Wednesday, September 07, 2011 5:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] [v2 to v3][C++/C] Fresh list of features for
> v3.4? // @after
>
> Hi Terrence,
> Hi Jim,
>
> Our status is:
> *  we have used ANTLR 2.7 C++ in our Valentina DB engine near to 10
> years.
> * we have start smooth steps to ANTLR3 switch more of year ago ...
>     always something have interrupt us.
>
> Now we have working grammar, and tree parser grammar, and all this is
> integrated by #define into db engine, so far all good.
>
> Now task is provide error reporting.
>     How EASY this was in ANTLR v2 for us - C++ developers..
>     And I already have spent two days reading reading reading
>         site, docs, google, mail list, book, ...
>
> Terrence, I do not complain, but IMO, at least for C target it is very
> hard find on SITE, docs that answer major questions.
>
> I believe, it is not correct way, push developers to search google, and
> prev letters for last 3 years. Right?
>
> While I have read letters, I have note, for example, one at 2009 year,
> where is said
>     @after is not supported in C target
>
> So I ask self.
> * Hmm, I have NOT see this info in docs, which I have to read already.
> And
> * Hmm, interesting if this feature still not implemented for C?
>
> And may be I am blind, but I do not see such page on SITE/WIKI, As
>
> =========================================
>             List of Features of Runtime Targets  v3.4
>                                (and another pages for v 3.3  3.2  3.1
> 3.0 )
>
>                 Java        C           C#
>
> @after      yes           no         ?
> =========================================
>
>
> You see my point?
>
> I should say that ANTLR3 somehow is harder to use from box ...
> May be at least for C target ...
> May be at least comparing to what we are used in v2.7
>
>
> Couple days ago you have asked about features for 4.x  :-) I would like
> to ask add such major and important info into SITE.
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Sep  7 09:36:45 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 7 Sep 2011 09:36:45 -0700
Subject: [antlr-interest] [v2 to v3][C++/C] throw C++ exception from
	parser/tree parser.
In-Reply-To: <CA8D4DBF.F1B32%ruslan_zasukhin@valentina-db.com>
References: <CA8D4DBF.F1B32%ruslan_zasukhin@valentina-db.com>
Message-ID: <7a5a6ed7bfe3650a1e4a1f2ee99a2979@mail.gmail.com>

You remember that this is all open source, freely given right? Generally,
don't try and mix C++ things in with the C. Exceptions are almost
certainly not want you want for error reporting while parsing anyway.

As I said earlier, copy the existing routine and adapt it. It does as many
things as it can to show you how to access the information. I can't
provide a universal error message handler as there is no way to know what
information your particular parser will have available or how you want the
messages to look and so on. All your customer error handler need do is
call a C++ object that you provide and that object can collect the errors
so that you can print them out at the end etc. The source code is right
there and well commented :)

Jim





> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Wednesday, September 07, 2011 6:35 AM
> To: antlr-interest at antlr.org; Jim Idle
> Subject: [v2 to v3][C++/C] throw C++ exception from parser/tree parser.
>
> Hi Terrence,
> Hi Jim,
>
> First of all again: thank you for great job and product(s), Please do
> not take below my text as complains, but mainly as explanation where
> C++ developer get problems with ANTLR3 and why ...
> And some suggestions how this can be may be improved.
> Long letter but should be easy to read :-)
>
>
> ===================================
> So ... in ANTLR2 it was very simple to handle errors from box:
>     it throws exception, few lines of code with catch() -> DONE.
>
> All our db engine expects exceptions from ANTLR v2/v3 and its wrapper
> code.
> Two days I am reading reading reading ...
>
> I have found 2-3 such questions from C++ developers:
>     if we can throw from my displayError()?
>
> Answer from Jim was like this:
>
> > On 1/15/09 8:23 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> >
> >> You can probably use them carefully, but as you point out, you have
> >> to be careful with memory. The runtime tracks all its normal memory
> >> allocations so  as long as you close the 'classes' correctly you
> >> should generally be OK. However, you should make sure that throwing
> >> exceptions does not bypass the normal rule clean up, such as
> >> resetting error and backtracking flags and so on,
>
> Okay, but  I'd expect to see more details (x5 - x10 times more text and
> code
> example) at this section
>
>     http://www.antlr.org/api/C/index.html
>
> * what is known TODAY?  at 2011  ?
>         Can we throw here C++ exc?
>         don't this break logic of C code of parsers?
>         True working example
>
> * EXAMPLE?
>
>     I have open folder Examples/C  and made search on "exception".
>     Found only in the JAVA files, used for tests of parser.
>     There is no example for C++ exceptions.
>     There is no example with override displayRecognitionError()
>
> * Or look on this code-example.
>          http://www.antlr.org/api/C/index.html
>
> The only here ERROR-related line is
>     if (psr->pParser->rec->errorCount > 0)
>
> Then silent ...  And questions come to mind
>
> ** So, if not throw() exceptions, then after tree-parser, I check if
> there was any errors and IF they was ... What next ???
>
> I have read that C target builds LIST of exception objects, But where
> is TEXT and example how navigate that list?
>
>
> ** and if I will throw error from displayRecognitionError() then
>     such check of counter is useless ...
>
>
>
> ==========================================
> Okay, next ...
> There is good helpful pages ANTLR2 to ANTLR3 ...   Great!
>
> But this page mainly about grammar and Java. And zero info here to help
> existed C++ developers port their ANTLR2 products.
> Hmm.
>
>
> ================
> Also when I watch default displayRecognitionError() from .c with many
> points, which do print to stderr as:
>
> -----------------------
> void displayRecognitionError(
>     pANTLR3_BASE_RECOGNIZER recognizer,
>     pANTLR3_UINT8*            tokenNames )
> {
> ...
>              ANTLR3_FPRINTF(stderr, "-end of input-(");
> ------------------------
>
>
> I wonder, why not provide here same function, which do sprintf() into
> string buffer,  and TWO very small wrapper-functions, which get this
> string and
>
> 1) print it to stderr as now;
> 2) throw it as c++ exception;
>
> //------------------------------------------------------
> pANTLR3_STRING buildRecognitionError(
>     pANTLR3_BASE_RECOGNIZER recognizer,
>     pANTLR3_UINT8*            tokenNames )
> {
>     ............
>     return resStr;
> }
>
>
> //------------------------------------------------------
> void displayRecognitionError_stderr(
>     pANTLR3_BASE_RECOGNIZER recognizer,
>     pANTLR3_UINT8*            tokenNames )
> {
>       pANTLR3_STRING res = buildRecognitionError( recognizer,
> tokenNames  );
>       ANTLR3_FPRINTF( stderr, res );
> }
>
>
> //------------------------------------------------------
> void displayRecognitionError_throw(
>     pANTLR3_BASE_RECOGNIZER recognizer,
>     pANTLR3_UINT8*            tokenNames )
> {
>       pANTLR3_STRING res = buildRecognitionError( recognizer,
> tokenNames  );
>       throw SomeException( res );
> }
>
>
> Yes, not big deal may be, but will simplify usage of ANTLR3 from box.
> I could read in ANTLR 3.5:
>     just install displayRecognitionError_throw, and your parser
>     will start throw C++ exceptions.
>     30 seconds deal, instead of two days and still in doubts ...
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information
> http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From ruslan_zasukhin at valentina-db.com  Wed Sep  7 11:55:48 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 07 Sep 2011 21:55:48 +0300
Subject: [antlr-interest] [v2 to v3][C++/C] Fresh list of features for
 v3.4? // @after
In-Reply-To: <69a80a55958eb5e207f54ad732e6e016@mail.gmail.com>
Message-ID: <CA8D98E4.F1B68%ruslan_zasukhin@valentina-db.com>

On 9/7/11 7:30 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

> It is a C target not a C++ target, so it is raw and closer to the metal.
> It is a lot faster than the 2.7 C++ target as a result, but you have to
> dig a little.

I very hope on this btw, because ANTLR 2.7 parser, which we have used in
Valentina was, for example, slower about x4 times of Lemon parser used in
the SqlLite. So our SQL commands e.g. have work slower of SqlLite, while
Valentina engine itself (if not use SQL) do inserts x20 times faster ...


> Starting at the C API documentation linked from the ANTLR front page,
> select ANTLR3 C Usage Guide then Using the ANTLR3 C Target, then
> implementing Customized Methods, where you find the following text:
> 
> Implementing Customized Methods
> Unless you wish to create your own tree structures using the built in
> ANTLR AST rewriting notation, you will rarely need to override the default
> implementation of runtime methods. The exception to this will be the
> syntax err reporting method, which is essentially a stub function that you
> will usually want to provide your own implementation for. You should
> consider the built in function displayRecognitionError() as an example of
> where to start as there can be no really useful generic error message
> display

Jim, I hope you have see that I have TWO days jump over all pages ...
And of course I have read all this already.

 
> Selecting that shows you the documentation for that function. This is what
> you should override. Start by copying the example version in the runtime,
> then adapt it to your own needs. It is pretty easy.

Yes, I already have copy it and replace to sprintf()  into char buffer.
 

> Also, searching from the Support page of antlr.org:
> 
> http://markmail.org/search/list:antlr+C+displayRecognitionError

I did search and google, and StackOverflow, and Antlr list...
I have read EACH letter about "exception" for last 5 years on list.
:-)


> Or, as there is no work out there in the world right now, you could just
> hire me to do it all for you :)

I will answer you in details privately, :-)


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From james1018 at gmail.com  Wed Sep  7 11:56:00 2011
From: james1018 at gmail.com (James Reid)
Date: Wed, 7 Sep 2011 14:56:00 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CA8B50BB.1DBC%douglasgodfrey@gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CA8B50BB.1DBC%douglasgodfrey@gmail.com>
Message-ID: <CAPtNrFZd5T+ZEFZqOvBC2f2MEdJg-gO+mWJ3m5FL6jNv40_PPA@mail.gmail.com>

I for one would like to see it based off of the Netbeans Platform.  I have
my own editor for an inhouse language that is built on top of Netbeans and I
use ANTLR for my lexing/parsing and the parsing loop works great.

With that aside, my biggest complaint would be the editor responsiveness
that Andreas was talking about.  I also agree about the way Netbeans does it
(half second after user stops typing).

Another thing I would like to see is a menu/toolbar action to automatically
generate debug versions of the current grammar.  I rarely launch the AW
debugger directly.  I mainly have to use the remote debugger because of the
way my project is setup in Netbeans.  So I have to open the preferences
(which sometimes takes several several seconds) type in -debug generate the
language, move the files to my project to test it out.  Then, when I believe
it's working, or I see what I was doing wrong, I have to open the
preferences again (which sometimes takes a while) remove the -debug
and regenerate.  This process gets to be tedious and annoying after doing it
several times in a row.

Another complaint would be the general GUI Look and Feel.  Maybe I'm
spoiled, but after working in the Netbeans environment and then moving to AW
to work on my grammar stuff feels like a "downgrade".  Don't get me wrong,
AW is great and it's helped me out enormously.  I don't like the way the
docking/undocking of the AST panel during debugging works.  Actually, I'm
not a fan of the docking situation in general.  So, yeah the flow of the GUI
in general needs an overhaul in my opinion.

Man, I wish I had more free time or I would start working on an AW
integration into Netbeans and/or a standalone Netbeans RCP of AW.

James Reid

On Tue, Sep 6, 2011 at 4:43 AM, Douglas Godfrey <douglasgodfrey at gmail.com>wrote:

> 1) Extend the Refactor:RemoveLeftRecursion function to either assist in
> removing or automatically remove left recursion loops that involve more
> than 1 rule
>
> 2) Tighter integration between AntlrWorks and Antlr to report the source
> of ambiguities found during code generation and resolve them
>
> 3) Antlr grammar access to the symbol table classes already present in
> Antlr
>   i.e. defining symbol table entries and accessing symbol attributes
> without productions
>
> 4) Enable debugging grammars for targets other than Java by inserting
> calls to a function that communicates with the AntlrWorks debugger
>
> On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
>
> >Hi, In parallel with the development of ANTLR v4, superstar Colin Bean
> >will be building the new version of ANTLRWorks. We already have a great
> >base in what Jean Bovet did for the 1st version. It's a known entity and
> >has lots of bookkeeping code that we can cut and paste into the new one
> >such as the automatic update facility and preferences. Because we've got
> >something to play with, we have something to critique and also a basic
> >target.
> >
> >I can imagine the basic tool being missing but it would be great to get
> >feedback from the antlr community.  Remember, that there are probably 2
> >main communities: the people new to languages and/or ANTLR and the people
> >very used to working with ANTLR grammars. For example, new people tend to
> >like the syntax diagrams but many old-timers like myself prefer looking
> >at the grammar because it's more terse.  Recognizing that we must serve
> >both those communities, please comment with any thoughts on the following:
> >
> >* What feature seemed like a good idea, but didn't end up being that
> >valuable? You can say even heretical things like: " the single step
> >feature in the debugger just didn't seem to be that useful beyond
> >learning about parsing"
> >
> >* Do you use the re-factoring? Keep in mind that v4 will automatically
> >handle direct left recursion.
> >
> >* What features do you think are really critical to add?
> >
> >* What features could be really great if we improved them?
> >
> >* Do we need better export facilities?   would you really use things like
> >"export grammar as hyperlinked HTML", for example.
> >
> >* What parts of the debugger did you use? There is a lot of stuff in
> >there like: breakpoints on input tokens, step forward, step backward,
> >jump to the end, break on specific kinds of events, break at specific
> >line in the grammar, show the parse tree, show the AST constructed, list
> >to the incoming events, etc...  Should we rethink the entire notion of
> >the debugger at something that simply displays information about what it
> >sees during the parse?  I.e., doesn't need to be a controller in the
> >sense that you can single step the actual running parser over the usual
> >socket connection?
> >
> >You might include whether you are in the newbie or experienced camp or
> >somewhere in between.
> >
> >Udo Borkowski has already implemented a fantastic tree layout algorithm
> >from an academic paper. The performance is extremely good and the results
> >are tight.  Colin will probably implement his own syntax diagram viewer
> >so that we can make it more than just a pretty picture. We want to
> >highlight elements and step through etc.
> >
> >Thanks!
> >Ter
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ruslan_zasukhin at valentina-db.com  Wed Sep  7 12:13:05 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 07 Sep 2011 22:13:05 +0300
Subject: [antlr-interest] [v2 to v3][C++/C] throw C++ exception from
 parser/tree parser.
In-Reply-To: <7a5a6ed7bfe3650a1e4a1f2ee99a2979@mail.gmail.com>
Message-ID: <CA8D9CF1.F1B71%ruslan_zasukhin@valentina-db.com>

On 9/7/11 7:36 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

> You remember that this is all open source, freely given right?

Of course I do :-)

And I have read sources of ANTLR 3.4, be sure.
Btw, my congratulations and respect. Very high quality code.

> Generally,
> don't try and mix C++ things in with the C. Exceptions are almost
> certainly not want you want for error reporting while parsing anyway.

> As I said earlier, copy the existing routine and adapt it. It does as many
> things as it can to show you how to access the information. I can't
> provide a universal error message handler as there is no way to know what
> information your particular parser will have available or how you want the
> messages to look and so on. All your customer error handler need do is
> call a C++ object that you provide and that object can collect the errors
> so that you can print them out at the end etc. The source code is right
> there and well commented :)

Ahhaa,  I hope I have to hear you ...
I will try say it now by own words to double check.

* so we must implement own dsiplayError() -- this is clear.

* we must NOT throw here any C++ exception.
    Instead, we must just build some Err String and put it
    e.g. Into our own Stack of such error strings

* then we do 

   AST         =  parser->entryRule()
   MyNodes = treePareser->entryRule()

Zero exceptions here
Then we just do

    if( errCount > 0 )
    {   
         stop  job
         somehow report errors to user
         for example

        point ZZZ:
         throw  myException(  ErrStack->getErrors() ;)
    }


Sounds right?
Thank you, Jim for points.

-----------------
Well, only one more question come to mind.  :-)

I have read that ANTLR3-C self build LIST OF exception objects.
Is this true?

If yes, then may be this is not needed? I mean override displayError()
method?

>> All your customer error handler need do is
>> call a C++ object that you provide and that object can collect the errors
>> so that you can print them out at the end etc.

And we can "convert" that list into exception at point ZZZ in the above
example?


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From douglasgodfrey at gmail.com  Wed Sep  7 21:23:36 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Thu, 08 Sep 2011 00:23:36 -0400
Subject: [antlr-interest] How can I get the string contents of a Kleene
 Closure?
In-Reply-To: <CAEAw34O8ZpSzL41F62Z8L5GdKHcBVRabVnTooXDktn96VYxyWw@mail.gmail.com>
Message-ID: <CA8DBB00.1E49%douglasgodfrey@gmail.com>

rich_newick_string : semicolon_terminated_string {
stack.pushRichNewickString($semicolon_terminated_string.text); };

semicolon_terminated_string

: (.*';') ;




On 9/6/11 5:44 PM, "Dejas Ninethousand" <dejas9000 at gmail.com> wrote:

>I have the following production in my ANTLR grammar:
>
>rich_newick_string
>: str=(.*';') { stack.pushRichNewickString($str.text); };
>
>I expected some string match to be passed to my pushRichNewickString
>method,
>but instead I'm getting null. What am I doing wrong?
>
>Thanks.
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From gd.antlr at gmail.com  Thu Sep  8 03:23:11 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Thu, 8 Sep 2011 03:23:11 -0700
Subject: [antlr-interest] ANTLRWorks 1.4.3 infinite loop during grammar check
Message-ID: <CAGwxo_84aT87tN5W0SekjwZTAdR7JPndAyjPL9YP+EoQJhUkDg@mail.gmail.com>

I just updated to ANTLRWorks 1.4.3, and a grammar that previously
verified correctly in the previous version of ANTLRWorks now never
completes verification or generation from within ANTLRWorks. The
following stack trace appears in the console, and the progress bar
never terminates:

Exception in thread "Thread-10" java.lang.StackOverflowError
	at java.util.HashMap$KeyIterator.<init>(HashMap.java:826)
	at java.util.HashMap$KeyIterator.<init>(HashMap.java:826)
	at java.util.HashMap.newKeyIterator(HashMap.java:840)
	at java.util.HashMap$KeySet.iterator(HashMap.java:874)
	at java.util.HashSet.iterator(HashSet.java:153)
	at java.util.AbstractCollection.addAll(AbstractCollection.java:303)
	at java.util.HashSet.<init>(HashSet.java:100)
	at org.antlr.analysis.SemanticContext.factorOr(SemanticContext.java:756)
	at org.antlr.analysis.SemanticContext.and(SemanticContext.java:609)
	at org.antlr.analysis.SemanticContext.and(SemanticContext.java:616)
	(the last line repeats hundreds of times)

I have tried increasing both the stack and heap for ANTLRWorks, no
improvement. Other grammars still pass, but this complex one
apparently causes ANTLRWorks to enter unterminated recursion. The
grammar still generates correctly with no errors from ANTLR 3.4 via
the ant task, so this appears to be limited to ANTLRWorks.

Is this a known issue?

Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425)
Java HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode)
Mac OS X 10.6.8

From douglasgodfrey at gmail.com  Thu Sep  8 05:45:11 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Thu, 08 Sep 2011 08:45:11 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <CA8E2D31.1E64%douglasgodfrey@gmail.com>

How about a direct language feature to issue a warning or error on parsing
a rule...

I.e. you have a grammar where certain improper syntax is expected. You
make a rule
that will recognize the improper syntax or semantics and issue a syntax
error with 
a better error description when the rule is matched. The side effect of
encountering
an error rule is the normal unwinding that occurs on a parse failure.


On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

>Hi, In parallel with the development of ANTLR v4, superstar Colin Bean
>will be building the new version of ANTLRWorks. We already have a great
>base in what Jean Bovet did for the 1st version. It's a known entity and
>has lots of bookkeeping code that we can cut and paste into the new one
>such as the automatic update facility and preferences. Because we've got
>something to play with, we have something to critique and also a basic
>target.
>
>I can imagine the basic tool being missing but it would be great to get
>feedback from the antlr community.  Remember, that there are probably 2
>main communities: the people new to languages and/or ANTLR and the people
>very used to working with ANTLR grammars. For example, new people tend to
>like the syntax diagrams but many old-timers like myself prefer looking
>at the grammar because it's more terse.  Recognizing that we must serve
>both those communities, please comment with any thoughts on the following:
>
>* What feature seemed like a good idea, but didn't end up being that
>valuable? You can say even heretical things like: " the single step
>feature in the debugger just didn't seem to be that useful beyond
>learning about parsing"
>
>* Do you use the re-factoring? Keep in mind that v4 will automatically
>handle direct left recursion.
>
>* What features do you think are really critical to add?
>
>* What features could be really great if we improved them?
>
>* Do we need better export facilities?   would you really use things like
>"export grammar as hyperlinked HTML", for example.
>
>* What parts of the debugger did you use? There is a lot of stuff in
>there like: breakpoints on input tokens, step forward, step backward,
>jump to the end, break on specific kinds of events, break at specific
>line in the grammar, show the parse tree, show the AST constructed, list
>to the incoming events, etc...  Should we rethink the entire notion of
>the debugger at something that simply displays information about what it
>sees during the parse?  I.e., doesn't need to be a controller in the
>sense that you can single step the actual running parser over the usual
>socket connection?
>
>You might include whether you are in the newbie or experienced camp or
>somewhere in between.
>
>Udo Borkowski has already implemented a fantastic tree layout algorithm
>from an academic paper. The performance is extremely good and the results
>are tight.  Colin will probably implement his own syntax diagram viewer
>so that we can make it more than just a pretty picture. We want to
>highlight elements and step through etc.
>
>Thanks!
>Ter
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From jimi at temporal-wave.com  Thu Sep  8 08:24:28 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 08:24:28 -0700
Subject: [antlr-interest] [v2 to v3][C++/C] throw C++ exception from
 parser/tree parser.
In-Reply-To: <CA8D9CF1.F1B71%ruslan_zasukhin@valentina-db.com>
References: <7a5a6ed7bfe3650a1e4a1f2ee99a2979@mail.gmail.com>
	<CA8D9CF1.F1B71%ruslan_zasukhin@valentina-db.com>
Message-ID: <d55e336dc1b5569b02904a12215cb68b@mail.gmail.com>

That's all you need :) There are lots of examples in the stuff you have
found on how to override the default one. You can use the @members to
declare an instance of your error reporting classm then new and install
this object before parsing. You will want to install it in the lexer, the
parser and the tree parser.

Note that you should avoid having the lexer issue errors and try to code
for errors so you can report a good message:

STRING: '"' (~('"'|'\n'|'\r'))* ( '"'| /* call a method on your object to
issue 'missing quote' */) ;


Your error handler should have a number of methods that can handle the
data passed to displayRecognitionError(), a method that handles simple
lexer errors, a method that takes a start and end token (which may be
NULL), a method that takes a start and end (which may be null)
pCOMMON_TREE and anything else that is useful. Your method can then
extract text for the message from the input stream.

Also, code your error messages as objects/structs/something in a
collection and pass the desired error message as a symbol. The error
handler can then look up whether the message is a warning, error, or
fatal. A warning or error does not stop the next phase from running, a
fatal error does. Then a lexing error won't (possibly) stop the parser and
so on - you get the maximum information from one run by printing all the
errors at the end.

Note that your tree parser will likely call code (don't embed code in the
tree parser, just call your C++ objects with the desired information), to
issue semantic errors as hitting an AST formation error is most likely a
"Fatal Internal Compiler Error - panic!". In other words the
displayRecognitionError() is only part of the story - it only captures
syntax errors, but in the real world you want way more emphasis on
semantically detected errors, and you should code your parser to accept
bad syntax, then reject it as a semantic error.


Finally using symbolic representation of the message will allow you to
switch languages easily of course.

Hope that helps. It is a lot easier than I think you thought it was.


Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ruslan Zasukhin
> Sent: Wednesday, September 07, 2011 12:13 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] [v2 to v3][C++/C] throw C++ exception
> from parser/tree parser.
>
> On 9/7/11 7:36 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
>
> Hi Jim,
>
> > You remember that this is all open source, freely given right?
>
> Of course I do :-)
>
> And I have read sources of ANTLR 3.4, be sure.
> Btw, my congratulations and respect. Very high quality code.
>
> > Generally,
> > don't try and mix C++ things in with the C. Exceptions are almost
> > certainly not want you want for error reporting while parsing anyway.
>
> > As I said earlier, copy the existing routine and adapt it. It does as
> > many things as it can to show you how to access the information. I
> > can't provide a universal error message handler as there is no way to
> > know what information your particular parser will have available or
> > how you want the messages to look and so on. All your customer error
> > handler need do is call a C++ object that you provide and that object
> > can collect the errors so that you can print them out at the end etc.
> > The source code is right there and well commented :)
>
> Ahhaa,  I hope I have to hear you ...
> I will try say it now by own words to double check.
>
> * so we must implement own dsiplayError() -- this is clear.
>
> * we must NOT throw here any C++ exception.
>     Instead, we must just build some Err String and put it
>     e.g. Into our own Stack of such error strings
>
> * then we do
>
>    AST         =  parser->entryRule()
>    MyNodes = treePareser->entryRule()
>
> Zero exceptions here
> Then we just do
>
>     if( errCount > 0 )
>     {
>          stop  job
>          somehow report errors to user
>          for example
>
>         point ZZZ:
>          throw  myException(  ErrStack->getErrors() ;)
>     }
>
>
> Sounds right?
> Thank you, Jim for points.
>
> -----------------
> Well, only one more question come to mind.  :-)
>
> I have read that ANTLR3-C self build LIST OF exception objects.
> Is this true?
>
> If yes, then may be this is not needed? I mean override displayError()
> method?
>
> >> All your customer error handler need do is call a C++ object that
> you
> >> provide and that object can collect the errors so that you can print
> >> them out at the end etc.
>
> And we can "convert" that list into exception at point ZZZ in the above
> example?
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Sep  8 08:32:09 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 08:32:09 -0700
Subject: [antlr-interest] How can I get the string contents of a Kleene
	Closure?
In-Reply-To: <CA8DBB00.1E49%douglasgodfrey@gmail.com>
References: <CAEAw34O8ZpSzL41F62Z8L5GdKHcBVRabVnTooXDktn96VYxyWw@mail.gmail.com>
	<CA8DBB00.1E49%douglasgodfrey@gmail.com>
Message-ID: <1b839dd9d46ae2559dc22f8b5590805f@mail.gmail.com>

Well, you are asking for the contents of a parse construct, not a lexer
rule you understand? This says ANY token 0 or more times, then a ';'. For
a start, that is about as ambiguous as you can get of course. IF you are
looking for any token (not character) sequence followed by ';' then you
likely want:

s_t_s : ~';'* ';' ;


Then to get the text of the tokens:

s_t_s : (a=~';' {System.out.println($a.text); } )* ';' ;

But instead of println, accumulate in a StringBuilder or similar.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Douglas Godfrey
> Sent: Wednesday, September 07, 2011 9:24 PM
> To: Dejas Ninethousand; Antlr-Interest Antlr.Org
> Subject: Re: [antlr-interest] How can I get the string contents of a
> Kleene Closure?
>
> rich_newick_string : semicolon_terminated_string {
> stack.pushRichNewickString($semicolon_terminated_string.text); };
>
> semicolon_terminated_string
>
> : (.*';') ;
>
>
>
>
> On 9/6/11 5:44 PM, "Dejas Ninethousand" <dejas9000 at gmail.com> wrote:
>
> >I have the following production in my ANTLR grammar:
> >
> >rich_newick_string
> >: str=(.*';') { stack.pushRichNewickString($str.text); };
> >
> >I expected some string match to be passed to my pushRichNewickString
> >method, but instead I'm getting null. What am I doing wrong?
> >
> >Thanks.
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Sep  8 08:34:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 08:34:32 -0700
Subject: [antlr-interest] ANTLRWorks 1.4.3 infinite loop during grammar
	check
In-Reply-To: <CAGwxo_84aT87tN5W0SekjwZTAdR7JPndAyjPL9YP+EoQJhUkDg@mail.gmail.com>
References: <CAGwxo_84aT87tN5W0SekjwZTAdR7JPndAyjPL9YP+EoQJhUkDg@mail.gmail.com>
Message-ID: <7d25b1c02af55c2db0eb8ee135cbf456@mail.gmail.com>

Need to see the grammar I think.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Graham Mer
> Sent: Thursday, September 08, 2011 3:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLRWorks 1.4.3 infinite loop during grammar
> check
>
> I just updated to ANTLRWorks 1.4.3, and a grammar that previously
> verified correctly in the previous version of ANTLRWorks now never
> completes verification or generation from within ANTLRWorks. The
> following stack trace appears in the console, and the progress bar
> never terminates:
>
> Exception in thread "Thread-10" java.lang.StackOverflowError
> 	at java.util.HashMap$KeyIterator.<init>(HashMap.java:826)
> 	at java.util.HashMap$KeyIterator.<init>(HashMap.java:826)
> 	at java.util.HashMap.newKeyIterator(HashMap.java:840)
> 	at java.util.HashMap$KeySet.iterator(HashMap.java:874)
> 	at java.util.HashSet.iterator(HashSet.java:153)
> 	at
> java.util.AbstractCollection.addAll(AbstractCollection.java:303)
> 	at java.util.HashSet.<init>(HashSet.java:100)
> 	at
> org.antlr.analysis.SemanticContext.factorOr(SemanticContext.java:756)
> 	at
> org.antlr.analysis.SemanticContext.and(SemanticContext.java:609)
> 	at
> org.antlr.analysis.SemanticContext.and(SemanticContext.java:616)
> 	(the last line repeats hundreds of times)
>
> I have tried increasing both the stack and heap for ANTLRWorks, no
> improvement. Other grammars still pass, but this complex one apparently
> causes ANTLRWorks to enter unterminated recursion. The grammar still
> generates correctly with no errors from ANTLR 3.4 via the ant task, so
> this appears to be limited to ANTLRWorks.
>
> Is this a known issue?
>
> Java(TM) SE Runtime Environment (build 1.6.0_26-b03-384-10M3425) Java
> HotSpot(TM) 64-Bit Server VM (build 20.1-b02-384, mixed mode) Mac OS X
> 10.6.8
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Sep  8 08:40:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 08:40:32 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CA8E2D31.1E64%douglasgodfrey@gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CA8E2D31.1E64%douglasgodfrey@gmail.com>
Message-ID: <c42040b20b0626e60b1c081c3ea29126@mail.gmail.com>

That's an ANTLR request (which has already been considered), not a Works
request.

However, the new IDE should use a smarter parser that can handle
incomplete syntax better - as in, it is coded to recognize such things
where it is possible. Note that autocomplete does not really work for
ANTLR grammars as almost all tokens can be a possibility in most places.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Douglas Godfrey
> Sent: Thursday, September 08, 2011 5:45 AM
> To: Terence Parr; Antlr-Interest Antlr.Org
> Cc: Colin Bean
> Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
>
> How about a direct language feature to issue a warning or error on
> parsing a rule...
>
> I.e. you have a grammar where certain improper syntax is expected. You
> make a rule that will recognize the improper syntax or semantics and
> issue a syntax error with a better error description when the rule is
> matched. The side effect of encountering an error rule is the normal
> unwinding that occurs on a parse failure.
>
>
> On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
>
> >Hi, In parallel with the development of ANTLR v4, superstar Colin Bean
> >will be building the new version of ANTLRWorks. We already have a
> great
> >base in what Jean Bovet did for the 1st version. It's a known entity
> and
> >has lots of bookkeeping code that we can cut and paste into the new
> one
> >such as the automatic update facility and preferences. Because we've
> got
> >something to play with, we have something to critique and also a basic
> >target.
> >
> >I can imagine the basic tool being missing but it would be great to
> get
> >feedback from the antlr community.  Remember, that there are probably
> 2
> >main communities: the people new to languages and/or ANTLR and the
> people
> >very used to working with ANTLR grammars. For example, new people tend
> to
> >like the syntax diagrams but many old-timers like myself prefer
> looking
> >at the grammar because it's more terse.  Recognizing that we must
> serve
> >both those communities, please comment with any thoughts on the
> following:
> >
> >* What feature seemed like a good idea, but didn't end up being that
> >valuable? You can say even heretical things like: " the single step
> >feature in the debugger just didn't seem to be that useful beyond
> >learning about parsing"
> >
> >* Do you use the re-factoring? Keep in mind that v4 will automatically
> >handle direct left recursion.
> >
> >* What features do you think are really critical to add?
> >
> >* What features could be really great if we improved them?
> >
> >* Do we need better export facilities?   would you really use things
> like
> >"export grammar as hyperlinked HTML", for example.
> >
> >* What parts of the debugger did you use? There is a lot of stuff in
> >there like: breakpoints on input tokens, step forward, step backward,
> >jump to the end, break on specific kinds of events, break at specific
> >line in the grammar, show the parse tree, show the AST constructed,
> list
> >to the incoming events, etc...  Should we rethink the entire notion of
> >the debugger at something that simply displays information about what
> it
> >sees during the parse?  I.e., doesn't need to be a controller in the
> >sense that you can single step the actual running parser over the
> usual
> >socket connection?
> >
> >You might include whether you are in the newbie or experienced camp or
> >somewhere in between.
> >
> >Udo Borkowski has already implemented a fantastic tree layout
> algorithm
> >from an academic paper. The performance is extremely good and the
> results
> >are tight.  Colin will probably implement his own syntax diagram
> viewer
> >so that we can make it more than just a pretty picture. We want to
> >highlight elements and step through etc.
> >
> >Thanks!
> >Ter
> >
> >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >Unsubscribe:
> >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From dejas9000 at gmail.com  Thu Sep  8 09:55:28 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 8 Sep 2011 11:55:28 -0500
Subject: [antlr-interest] How can I get the string contents of a Kleene
	Closure?
In-Reply-To: <1b839dd9d46ae2559dc22f8b5590805f@mail.gmail.com>
References: <CAEAw34O8ZpSzL41F62Z8L5GdKHcBVRabVnTooXDktn96VYxyWw@mail.gmail.com>
	<CA8DBB00.1E49%douglasgodfrey@gmail.com>
	<1b839dd9d46ae2559dc22f8b5590805f@mail.gmail.com>
Message-ID: <CAEAw34Mwi9hkYyavewtDWHF34VwOR87bppFvcWJP0z=ZGOnXtg@mail.gmail.com>

I see.  Thanks.

On Thu, Sep 8, 2011 at 10:32 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Well, you are asking for the contents of a parse construct, not a lexer
> rule you understand? This says ANY token 0 or more times, then a ';'. For
> a start, that is about as ambiguous as you can get of course. IF you are
> looking for any token (not character) sequence followed by ';' then you
> likely want:
>
> s_t_s : ~';'* ';' ;
>
>
> Then to get the text of the tokens:
>
> s_t_s : (a=~';' {System.out.println($a.text); } )* ';' ;
>
> But instead of println, accumulate in a StringBuilder or similar.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Douglas Godfrey
> > Sent: Wednesday, September 07, 2011 9:24 PM
> > To: Dejas Ninethousand; Antlr-Interest Antlr.Org
> > Subject: Re: [antlr-interest] How can I get the string contents of a
> > Kleene Closure?
> >
> > rich_newick_string : semicolon_terminated_string {
> > stack.pushRichNewickString($semicolon_terminated_string.text); };
> >
> > semicolon_terminated_string
> >
> > : (.*';') ;
> >
> >
> >
> >
> > On 9/6/11 5:44 PM, "Dejas Ninethousand" <dejas9000 at gmail.com> wrote:
> >
> > >I have the following production in my ANTLR grammar:
> > >
> > >rich_newick_string
> > >: str=(.*';') { stack.pushRichNewickString($str.text); };
> > >
> > >I expected some string match to be passed to my pushRichNewickString
> > >method, but instead I'm getting null. What am I doing wrong?
> > >
> > >Thanks.
> > >
> > >List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >Unsubscribe:
> > >http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sharwell at pixelminegames.com  Thu Sep  8 09:55:29 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 8 Sep 2011 11:55:29 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <c42040b20b0626e60b1c081c3ea29126@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>	<CA8E2D31.1E64%douglasgodfrey@gmail.com>
	<c42040b20b0626e60b1c081c3ea29126@mail.gmail.com>
Message-ID: <01b801cc6e48$1df30bf0$59d923d0$@pixelminegames.com>

With a carefully designed algorithm, autocomplete actually works quite well
in an ANTLR grammar. I went over portions of the algorithm with Ter in the
past, but it's outside the scope of what he's working on for ANTLR 4. A
partial implementation will be included in the next release of my Visual
Studio integration (clean and working, but missing a few features I've
designed on paper).

The new parsing algorithms I'm using do a great job of handling incomplete
syntax, but use a very different type of parser than ANTLR generates. They
also allow local analysis of a fragment of text within a file with a
constant-time complexity WRT the size of the file, so it performs as well
while editing a 1MB grammar as it does with a  1KB grammar. I'm hoping to
create a modified version of the ANTLR tool that can produce these parsers
from an ANTLR grammar.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Thursday, September 08, 2011 10:41 AM
To: Antlr-Interest Antlr.Org
Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)

That's an ANTLR request (which has already been considered), not a Works
request.

However, the new IDE should use a smarter parser that can handle incomplete
syntax better - as in, it is coded to recognize such things where it is
possible. Note that autocomplete does not really work for ANTLR grammars as
almost all tokens can be a possibility in most places.


Jim



From dejas9000 at gmail.com  Thu Sep  8 09:58:40 2011
From: dejas9000 at gmail.com (Dejas Ninethousand)
Date: Thu, 8 Sep 2011 11:58:40 -0500
Subject: [antlr-interest] For getCharPositionInLine(),
 is there a way to make tab count for 8 chars instead of 1?
Message-ID: <CAEAw34PE7VnWPwzx++4n4C4b90FmDXpfWCuZtFSHK-ApiZ1y0Q@mail.gmail.com>

I want to ensure that line and cols reported by my parser line up with what
the user would see in a program like Textpad.  In Textpad if you move the
cursor across a tab character the column counter and cursor advance by 8 and
not 1 even though only one char in the stream has been traversed.  Can I
configure some setting in ANTRL such that tab chars are treated the same way
for column reporting?

Thanks.

From jimi at temporal-wave.com  Thu Sep  8 10:21:28 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 10:21:28 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <01b801cc6e48$1df30bf0$59d923d0$@pixelminegames.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CA8E2D31.1E64%douglasgodfrey@gmail.com>
	<c42040b20b0626e60b1c081c3ea29126@mail.gmail.com>
	<01b801cc6e48$1df30bf0$59d923d0$@pixelminegames.com>
Message-ID: <0a1ffd129c87687703d0589b55695327@mail.gmail.com>

Yep - sounds like the kinds of thing to go for based around v4... err v5?
;) I remember Ter saying to me "V3 is it now, I won't be creating a v4..."
;)

Jim

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: Thursday, September 08, 2011 9:55 AM
> To: 'Jim Idle'; 'Antlr-Interest Antlr.Org'
> Subject: RE: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
>
> With a carefully designed algorithm, autocomplete actually works quite
> well in an ANTLR grammar. I went over portions of the algorithm with
> Ter in the past, but it's outside the scope of what he's working on for
> ANTLR 4. A partial implementation will be included in the next release
> of my Visual Studio integration (clean and working, but missing a few
> features I've designed on paper).
>
> The new parsing algorithms I'm using do a great job of handling
> incomplete syntax, but use a very different type of parser than ANTLR
> generates. They also allow local analysis of a fragment of text within
> a file with a constant-time complexity WRT the size of the file, so it
> performs as well while editing a 1MB grammar as it does with a  1KB
> grammar. I'm hoping to create a modified version of the ANTLR tool that
> can produce these parsers from an ANTLR grammar.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Thursday, September 08, 2011 10:41 AM
> To: Antlr-Interest Antlr.Org
> Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
>
> That's an ANTLR request (which has already been considered), not a
> Works request.
>
> However, the new IDE should use a smarter parser that can handle
> incomplete syntax better - as in, it is coded to recognize such things
> where it is possible. Note that autocomplete does not really work for
> ANTLR grammars as almost all tokens can be a possibility in most
> places.
>
>
> Jim
>

From jimi at temporal-wave.com  Thu Sep  8 10:23:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 10:23:11 -0700
Subject: [antlr-interest] For getCharPositionInLine(),
 is there a way to make tab count for 8 chars instead of 1?
In-Reply-To: <CAEAw34PE7VnWPwzx++4n4C4b90FmDXpfWCuZtFSHK-ApiZ1y0Q@mail.gmail.com>
References: <CAEAw34PE7VnWPwzx++4n4C4b90FmDXpfWCuZtFSHK-ApiZ1y0Q@mail.gmail.com>
Message-ID: <f473df1e57dc2999d8c22e1a6511004a@mail.gmail.com>

Please see many past discussions of this in the group archives. It is not
a simple as adding 8 to the count as tabs usually mean "advance to the
next tab position", which is traditionally a multiple of 8 but does not
have to be.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Dejas Ninethousand
> Sent: Thursday, September 08, 2011 9:59 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] For getCharPositionInLine(), is there a way
> to make tab count for 8 chars instead of 1?
>
> I want to ensure that line and cols reported by my parser line up with
> what the user would see in a program like Textpad.  In Textpad if you
> move the cursor across a tab character the column counter and cursor
> advance by 8 and not 1 even though only one char in the stream has been
> traversed.  Can I configure some setting in ANTRL such that tab chars
> are treated the same way for column reporting?
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sharwell at pixelminegames.com  Thu Sep  8 10:23:33 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 8 Sep 2011 12:23:33 -0500
Subject: [antlr-interest] For getCharPositionInLine(),
	is there a way to make tab count for 8 chars instead of 1?
In-Reply-To: <CAEAw34PE7VnWPwzx++4n4C4b90FmDXpfWCuZtFSHK-ApiZ1y0Q@mail.gmail.com>
References: <CAEAw34PE7VnWPwzx++4n4C4b90FmDXpfWCuZtFSHK-ApiZ1y0Q@mail.gmail.com>
Message-ID: <01b901cc6e4c$09e4c820$1dae5860$@pixelminegames.com>

I actually asked Dr. Parr recently about why the property is called
CharPositionInLine instead of just Column. The name was actually picked to
make it clear that tab and space are each treated as 1 character. When
talking about parsing, the term "Column" also always refers to the character
position within a line.

The notion that the width of a tab is not equal to the width of a space is a
UI concept independent of the parsing problem, and widely varies as you move
from IDEs to word processors to typesetting systems. Whether it's called
"CharPositionInLine" or "Column", the parser will provide consistent
information about character positions and you'll need to independently
implement the "width" of your tab characters as it applies to your
particular target environment.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dejas Ninethousand
Sent: Thursday, September 08, 2011 11:59 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] For getCharPositionInLine(), is there a way to
make tab count for 8 chars instead of 1?

I want to ensure that line and cols reported by my parser line up with what
the user would see in a program like Textpad.  In Textpad if you move the
cursor across a tab character the column counter and cursor advance by 8 and
not 1 even though only one char in the stream has been traversed.  Can I
configure some setting in ANTRL such that tab chars are treated the same way
for column reporting?

Thanks.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From Janet.Hurwitz at usc-bt.com  Thu Sep  8 11:08:34 2011
From: Janet.Hurwitz at usc-bt.com (Janet.Hurwitz at usc-bt.com)
Date: Thu, 8 Sep 2011 18:08:34 +0000
Subject: [antlr-interest] Allowing and maintaining space characters in
	string literals
Message-ID: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>

Hello- I'm working on a grammar that needs to support embedded blanks in strings: "identifier=two words"
The interpreter keeps breaking at 'two' and doesn't know what to do with 'words'.
I was initially ignoring white space (because 'id1 = oneword, id2 =" two words"' must also be supported with spaces around the = and ,), but obviously, can't do that.
I have tried what was suggested in an archived post:

STRING_LITERAL : (STRCHAR)+ ( ((' ')+ STRCHAR)=> (' ')+ (STRCHAR)+ )*

But that didn't work either! (no viable alternative at input 'words'). It's not including 'words' as part of the string.

In my grammar:
fragment LETTER :('a'..'z' | 'A'..'Z');
fragment DIGIT : '0'..'9';
fragment OTHERCHARS : ('.' | '/' | '-' | '&');
STRCHAR : (LETTER | DIGIT | OTHERCHARS)+;

I have tried various combinations of handling the blank in the lexing v. the parsing, including trying to create a quoted-string rule.
I will have to support the following:

"identifier =two words"
identifier ="two words"

The identifier=value pairs appear in a comma-separated line. There are various nested structures of identifier=value pairs involved, which is why both of the above formats are supported.

*** Bottom line*** I just want to indicate: If a space appears between quotation marks, include it as part of the current token; if not, throw it away.

I have everything working in a complex structure and tree walker except for the embedded blanks allowed in strings! Any suggestions are appreciated.








From cummings at kjchome.homeip.net  Thu Sep  8 11:50:40 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 08 Sep 2011 14:50:40 -0400
Subject: [antlr-interest] Allowing and maintaining space characters in
 string literals
In-Reply-To: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
References: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
Message-ID: <4E690E80.4040601@kjchome.homeip.net>

On 09/08/2011 02:08 PM, Janet.Hurwitz at usc-bt.com wrote:
> Hello- I'm working on a grammar that needs to support embedded blanks in strings: "identifier=two words"
> The interpreter keeps breaking at 'two' and doesn't know what to do with 'words'.
> I was initially ignoring white space (because 'id1 = oneword, id2 =" two words"' must also be supported with spaces around the = and ,), but obviously, can't do that.
> I have tried what was suggested in an archived post:
> 
> STRING_LITERAL : (STRCHAR)+ ( ((' ')+ STRCHAR)=> (' ')+ (STRCHAR)+ )*
> 
> But that didn't work either! (no viable alternative at input 'words'). It's not including 'words' as part of the string.
> 
> In my grammar:
> fragment LETTER :('a'..'z' | 'A'..'Z');
> fragment DIGIT : '0'..'9';
> fragment OTHERCHARS : ('.' | '/' | '-' | '&');
> STRCHAR : (LETTER | DIGIT | OTHERCHARS)+;

Why can't ' ' be a part of either OTHERCHARS or STRCHAR?  Then you don't
need the syntactic predicate in your STRING_LITERAL rule....
I don't see your rule for handling the " characters.
If you are worried about strings containing NLs or TABs (which would be
errors), then you might want your STRING_LITERAL rule to check for them
(in a semantic predicate instead and explicitly disallow them) instead
of trying to allow blanks.

> I have tried various combinations of handling the blank in the lexing v. the parsing, including trying to create a quoted-string rule.
> I will have to support the following:
> 
> "identifier =two words"
> identifier ="two words"

Ouch, your not going to try and parse:

"identifier =two words"

as if it was

identifier ="two parts" are you??

> The identifier=value pairs appear in a comma-separated line. There are various nested structures of identifier=value pairs involved, which is why both of the above formats are supported.
> 
> *** Bottom line*** I just want to indicate: If a space appears between quotation marks, include it as part of the current token; if not, throw it away.
> 
> I have everything working in a complex structure and tree walker except for the embedded blanks allowed in strings! Any suggestions are appreciated.

> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From jbb at acm.org  Thu Sep  8 11:58:00 2011
From: jbb at acm.org (John B. Brodie)
Date: Thu, 08 Sep 2011 14:58:00 -0400
Subject: [antlr-interest] Allowing and maintaining space characters in
 string literals
In-Reply-To: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
References: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
Message-ID: <1315508280.31157.8.camel@gecko>

Greetings!

Have you looked at the Java grammar in the v3 example suite?
also....

On Thu, 2011-09-08 at 18:08 +0000, Janet.Hurwitz at usc-bt.com wrote:
> Hello- I'm working on a grammar that needs to support embedded blanks in strings: "identifier=two words"
> The interpreter keeps breaking at 'two' and doesn't know what to do with 'words'.

don't use the interpreter. it has some quirks.

> I was initially ignoring white space (because 'id1 = oneword, id2 =" two words"' must also be supported with spaces around the = and ,), but obviously, can't do that.
> I have tried what was suggested in an archived post:
> 
> STRING_LITERAL : (STRCHAR)+ ( ((' ')+ STRCHAR)=> (' ')+ (STRCHAR)+ )*

are you lexing the leading/trailing quote marks separately from the
characters comprising the string literal?

if so don't do that.

> But that didn't work either! (no viable alternative at input 'words'). It's not including 'words' as part of the string.
> 
> In my grammar:
> fragment LETTER :('a'..'z' | 'A'..'Z');
> fragment DIGIT : '0'..'9';
> fragment OTHERCHARS : ('.' | '/' | '-' | '&');
> STRCHAR : (LETTER | DIGIT | OTHERCHARS)+;
> 
> I have tried various combinations of handling the blank in the lexing v. the parsing, including trying to create a quoted-string rule.
> I will have to support the following:

you want the string literal to be processed completely by the lexer,
from the opening quote up to and including the closing quote. that way
no other tokens will interfere with handling the characters between the
quote marks.

> 
> "identifier =two words"
> identifier ="two words"
> 
> The identifier=value pairs appear in a comma-separated line. There are various nested structures of identifier=value pairs involved, which is why both of the above formats are supported.
> 
> *** Bottom line*** I just want to indicate: If a space appears between quotation marks, include it as part of the current token; if not, throw it away.
> 
> I have everything working in a complex structure and tree walker except for the embedded blanks allowed in strings! Any suggestions are appreciated.

these lexer rules work for me:

STRING : '"' (options{greedy=false;}:( ~('\\'|'"') | ('\\' '"')))* '"'; 

WS : ( ' ' | '\t' | '\f' | '\r' | '\n' )+ { $channel=HIDDEN; } ;

Hope this helps...
   -jbb



From Janet.Hurwitz at usc-bt.com  Thu Sep  8 12:13:14 2011
From: Janet.Hurwitz at usc-bt.com (Janet.Hurwitz at usc-bt.com)
Date: Thu, 8 Sep 2011 19:13:14 +0000
Subject: [antlr-interest] Allowing and maintaining space characters in
 string literals
In-Reply-To: <1315508280.31157.8.camel@gecko>
References: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
	<1315508280.31157.8.camel@gecko>
Message-ID: <38FABFD667C19E44BC00A04C59B658B9883194BC@usemp110.ins.com>

Thanks for the reply, John.
I have had a lot of success with the interpreter! But, perhaps I've hit a quirk.
I have tried lexing the quotations with the literal, but not successfully. I have another case where I'm also using quotation marks in parsing rules, and perhaps there is interference there.
The lexer rule you suggested broke my grammar elsewhere, but I will continue trying to work with it. I will also check the Java grammar example.

-----Original Message-----
From: John B. Brodie [mailto:jbb at acm.org] 
Sent: Thursday, September 08, 2011 2:58 PM
To: Hurwitz, Janet
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Allowing and maintaining space characters in string literals

Greetings!

Have you looked at the Java grammar in the v3 example suite?
also....

On Thu, 2011-09-08 at 18:08 +0000, Janet.Hurwitz at usc-bt.com wrote:
> Hello- I'm working on a grammar that needs to support embedded blanks in strings: "identifier=two words"
> The interpreter keeps breaking at 'two' and doesn't know what to do with 'words'.

don't use the interpreter. it has some quirks.

> I was initially ignoring white space (because 'id1 = oneword, id2 =" two words"' must also be supported with spaces around the = and ,), but obviously, can't do that.
> I have tried what was suggested in an archived post:
> 
> STRING_LITERAL : (STRCHAR)+ ( ((' ')+ STRCHAR)=> (' ')+ (STRCHAR)+ )*

are you lexing the leading/trailing quote marks separately from the characters comprising the string literal?

if so don't do that.

> But that didn't work either! (no viable alternative at input 'words'). It's not including 'words' as part of the string.
> 
> In my grammar:
> fragment LETTER :('a'..'z' | 'A'..'Z'); fragment DIGIT : '0'..'9'; 
> fragment OTHERCHARS : ('.' | '/' | '-' | '&'); STRCHAR : (LETTER | 
> DIGIT | OTHERCHARS)+;
> 
> I have tried various combinations of handling the blank in the lexing v. the parsing, including trying to create a quoted-string rule.
> I will have to support the following:

you want the string literal to be processed completely by the lexer, from the opening quote up to and including the closing quote. that way no other tokens will interfere with handling the characters between the quote marks.

> 
> "identifier =two words"
> identifier ="two words"
> 
> The identifier=value pairs appear in a comma-separated line. There are various nested structures of identifier=value pairs involved, which is why both of the above formats are supported.
> 
> *** Bottom line*** I just want to indicate: If a space appears between quotation marks, include it as part of the current token; if not, throw it away.
> 
> I have everything working in a complex structure and tree walker except for the embedded blanks allowed in strings! Any suggestions are appreciated.

these lexer rules work for me:

STRING : '"' (options{greedy=false;}:( ~('\\'|'"') | ('\\' '"')))* '"'; 

WS : ( ' ' | '\t' | '\f' | '\r' | '\n' )+ { $channel=HIDDEN; } ;

Hope this helps...
   -jbb



From parrt at cs.usfca.edu  Thu Sep  8 12:15:07 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 12:15:07 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
	<CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
Message-ID: <684832FA-81B4-4037-91F6-906B9698522A@cs.usfca.edu>


On Sep 2, 2011, at 10:54 AM, Andreas Stefik wrote:

> Ter,
> 
> Just to keep adding:
> 
>> Refactoring
> 
> No complaints on this system. It does the most common things.

But do youuse it very often?

> 
>> displaying decision DFA (well, one person mentioned to say that sometimes it gets stuck)
> 
> Do you mean the syntax diagram side?

 this displays the decision-making DFA, not the syntax diagrams.

> I don't recall seeing it get
> stuck. I do, however, use the syntax diagrams constantly and find
> having the visualization one of the best features of using AW. Again
> an auto-hide like "pin" interface might be nice. Another feature that
> could be potentially helpful, although not a huge priority perhaps,
> would be to full screen it. That would be nice for class
> demonstrations.

I believe you can detach some of the windows, but maybe not the syntax diagram view.

> 
>> only one person mentioned showing the generated code
> 
> Since it's pretty straightforward to generate the code, it's not a
> huge deal for me either way.
> 
>> group/ungroup rules, rule collapsing
> 
> No real preference. Many IDEs have this and it's useful for certain
> kinds of boiler plate code (e.g., generated forms). IF there's a use
> that's helpful, it "might" include collapsing sections, like
> options/members/boilerplate stuff, or just semantic actions, or
> something else. I don't use this a whole lot in large scale code
> though in other IDEs either, though.

 I will probably leave this out of the 1st version.

> A few other thoughts after reading your post:
> 
> 1. I definitely agree that the syntax diagram, interpreter, console,
> and debugger are sort of odd as tabs. Having them all as pinned
> windows is more common in an IDE

 can you tell me what they pinned window is exactly?

> and has the advantage of letting you
> see more than one at a time (if you wish).
> 
> 2. It might be nice if you could have (on mac) a tabbed interface for
> multiple grammars instead of multiple floating windows.

 I think for imported grammars that might work.

> My most common
> use case is switching back and forth between a tree walker and a
> parser.

 true, but isn't a nicer to see two Windows next to each other to compare?

> Managing multiple tabs on multiple windows is somewhat more
> tedious than having one window where you can click on a new file and
> the syntax/interpreter, etc windows auto-respond accordingly.
> 
> There's a few more thoughts, for what it's worth,

 thanks very much for the feedback!
Ter

From parrt at cs.usfca.edu  Thu Sep  8 12:20:54 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 12:20:54 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CA8B50BB.1DBC%douglasgodfrey@gmail.com>
References: <CA8B50BB.1DBC%douglasgodfrey@gmail.com>
Message-ID: <409052E7-4590-4503-95FB-DF86F88F5180@cs.usfca.edu>


On Sep 6, 2011, at 1:43 AM, Douglas Godfrey wrote:

> 1) Extend the Refactor:RemoveLeftRecursion function to either assist in
> removing or automatically remove left recursion loops that involve more
> than 1 rule

Hi Douglas. how often do you use this Refactoring? also note that v4 will automatically handle direct left recursion.

> 
> 2) Tighter integration between AntlrWorks and Antlr to report the source
> of ambiguities found during code generation and resolve them

 can you be more specific about what that integration would be?

> 
> 3) Antlr grammar access to the symbol table classes already present in
> Antlr
>   i.e. defining symbol table entries and accessing symbol attributes
> without productions

 which symbol table classes do you mean? are you talking about the ones from the language implementation patterns book?

> 
> 4) Enable debugging grammars for targets other than Java by inserting
> calls to a function that communicates with the AntlrWorks debugger

 that is really up to the target developer. Currently C opens a socket connection to communicate with the AW debugger. I think the # target has its own version.

Ter

From Janet.Hurwitz at usc-bt.com  Thu Sep  8 12:23:34 2011
From: Janet.Hurwitz at usc-bt.com (Janet.Hurwitz at usc-bt.com)
Date: Thu, 8 Sep 2011 19:23:34 +0000
Subject: [antlr-interest] Allowing and maintaining space characters in
 string literals
In-Reply-To: <1315508280.31157.8.camel@gecko>
References: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
	<1315508280.31157.8.camel@gecko>
Message-ID: <38FABFD667C19E44BC00A04C59B658B9883194D1@usemp110.ins.com>

@Kevin - thanks for the reply:
>Why can't ' ' be a part of either OTHERCHARS or STRCHAR?  Then you don't
need the syntactic predicate in your STRING_LITERAL rule....
I don't see your rule for handling the " characters.
If you are worried about strings containing NLs or TABs (which would be
errors), then you might want your STRING_LITERAL rule to check for them
(in a semantic predicate instead and explicitly disallow them) instead
of trying to allow blanks.

** I tried making the blank part of OTHERCHARS or STRCHAR; that didn't work for me, either. Perhaps I'm running into the interpreter problems John mentioned.

> Ouch, your not going to try and parse:

"identifier =two words"

as if it was

identifier ="two parts" are you??

** No, I'm not! There are actually 2 different cases. More fully:

..., keywordOne="id1=uservalue" | "id2= two words", keywordTwo=" a bunch of words here. maybe spaces maybe not"

This is just part of a more complicated grammar, with nested structures separated by curly brackets, lists separated by vertical bars, and more. I didn't include the whole grammar showing the handling of the quotation marks.

From parrt at cs.usfca.edu  Thu Sep  8 12:24:56 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 12:24:56 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CAPtNrFZd5T+ZEFZqOvBC2f2MEdJg-gO+mWJ3m5FL6jNv40_PPA@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CA8B50BB.1DBC%douglasgodfrey@gmail.com>
	<CAPtNrFZd5T+ZEFZqOvBC2f2MEdJg-gO+mWJ3m5FL6jNv40_PPA@mail.gmail.com>
Message-ID: <E535E38D-2E0D-4289-B43D-95680DF71E51@cs.usfca.edu>


On Sep 7, 2011, at 11:56 AM, James Reid wrote:

> I for one would like to see it based off of the Netbeans Platform.  I have my own editor for an inhouse language that is built on top of Netbeans and I use ANTLR for my lexing/parsing and the parsing loop works great. 

I looked at that, but it seemed very complicated, or at least with a very large learning curve. Given that the eclipse platform is probably more popular it seemed I should invest in that instead if I were going to look at a platform. in the end, I decided it would be simpler to do this in an isolated fashion with swing.

> 
> With that aside, my biggest complaint would be the editor responsiveness that Andreas was talking about.  I also agree about the way Netbeans does it (half second after user stops typing).  

 agreed. that is my 1st priority.

> 
> Another thing I would like to see is a menu/toolbar action to automatically generate debug versions of the current grammar.  I rarely launch the AW debugger directly.  I mainly have to use the remote debugger because of the way my project is setup in Netbeans.

 I've been wondering about the build options... I'm not sure we want AW to really be part of the build process. I use intellij and/or ant for that.

>  So I have to open the preferences (which sometimes takes several several seconds) type in -debug generate the language, move the files to my project to test it out.  Then, when I believe it's working, or I see what I was doing wrong, I have to open the preferences again (which sometimes takes a while) remove the -debug and regenerate.  This process gets to be tedious and annoying after doing it several times in a row.

 okay, I got it. added something to

http://www.antlr.org/wiki/display/~admin/2011/09/02/ANTLRWorks+2+planning%2C+features

> 
> Another complaint would be the general GUI Look and Feel.  Maybe I'm spoiled, but after working in the Netbeans environment and then moving to AW to work on my grammar stuff feels like a "downgrade".  Don't get me wrong, AW is great and it's helped me out enormously.  I don't like the way the docking/undocking of the AST panel during debugging works.  Actually, I'm not a fan of the docking situation in general.  So, yeah the flow of the GUI in general needs an overhaul in my opinion.

 I don't think I will be doing docking for this... I am not a GUI expert and would love it if somebody could draw out even with a pencil a few different view layouts that we need.

> 
> Man, I wish I had more free time or I would start working on an AW integration into Netbeans and/or a standalone Netbeans RCP of AW.

 with luck, these components will be widgets that you could incorporate easily.

Ter

From parrt at cs.usfca.edu  Thu Sep  8 12:28:12 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 12:28:12 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CA8E2D31.1E64%douglasgodfrey@gmail.com>
References: <CA8E2D31.1E64%douglasgodfrey@gmail.com>
Message-ID: <ACF93AC1-AC86-4BAF-B765-929643C06E3E@cs.usfca.edu>

yes, That is of course something for ANTLR not AW. I called those error alternatives in my wish list, but then I realized that you can simply list them already without having to identify them as error alternatives. Then, in that rule, you can specify the appropriate error message.

Ter
On Sep 8, 2011, at 5:45 AM, Douglas Godfrey wrote:

> How about a direct language feature to issue a warning or error on parsing
> a rule...
> 
> I.e. you have a grammar where certain improper syntax is expected. You
> make a rule
> that will recognize the improper syntax or semantics and issue a syntax
> error with 
> a better error description when the rule is matched. The side effect of
> encountering
> an error rule is the normal unwinding that occurs on a parse failure.
> 
> 
> On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> 
>> Hi, In parallel with the development of ANTLR v4, superstar Colin Bean
>> will be building the new version of ANTLRWorks. We already have a great
>> base in what Jean Bovet did for the 1st version. It's a known entity and
>> has lots of bookkeeping code that we can cut and paste into the new one
>> such as the automatic update facility and preferences. Because we've got
>> something to play with, we have something to critique and also a basic
>> target.
>> 
>> I can imagine the basic tool being missing but it would be great to get
>> feedback from the antlr community.  Remember, that there are probably 2
>> main communities: the people new to languages and/or ANTLR and the people
>> very used to working with ANTLR grammars. For example, new people tend to
>> like the syntax diagrams but many old-timers like myself prefer looking
>> at the grammar because it's more terse.  Recognizing that we must serve
>> both those communities, please comment with any thoughts on the following:
>> 
>> * What feature seemed like a good idea, but didn't end up being that
>> valuable? You can say even heretical things like: " the single step
>> feature in the debugger just didn't seem to be that useful beyond
>> learning about parsing"
>> 
>> * Do you use the re-factoring? Keep in mind that v4 will automatically
>> handle direct left recursion.
>> 
>> * What features do you think are really critical to add?
>> 
>> * What features could be really great if we improved them?
>> 
>> * Do we need better export facilities?   would you really use things like
>> "export grammar as hyperlinked HTML", for example.
>> 
>> * What parts of the debugger did you use? There is a lot of stuff in
>> there like: breakpoints on input tokens, step forward, step backward,
>> jump to the end, break on specific kinds of events, break at specific
>> line in the grammar, show the parse tree, show the AST constructed, list
>> to the incoming events, etc...  Should we rethink the entire notion of
>> the debugger at something that simply displays information about what it
>> sees during the parse?  I.e., doesn't need to be a controller in the
>> sense that you can single step the actual running parser over the usual
>> socket connection?
>> 
>> You might include whether you are in the newbie or experienced camp or
>> somewhere in between.
>> 
>> Udo Borkowski has already implemented a fantastic tree layout algorithm
>> from an academic paper. The performance is extremely good and the results
>> are tight.  Colin will probably implement his own syntax diagram viewer
>> so that we can make it more than just a pretty picture. We want to
>> highlight elements and step through etc.
>> 
>> Thanks!
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 


From parrt at cs.usfca.edu  Thu Sep  8 12:29:10 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 12:29:10 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <0a1ffd129c87687703d0589b55695327@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CA8E2D31.1E64%douglasgodfrey@gmail.com>
	<c42040b20b0626e60b1c081c3ea29126@mail.gmail.com>
	<01b801cc6e48$1df30bf0$59d923d0$@pixelminegames.com>
	<0a1ffd129c87687703d0589b55695327@mail.gmail.com>
Message-ID: <9BB34062-83BC-476A-A6D1-D8E8C2F15331@cs.usfca.edu>


On Sep 8, 2011, at 10:21 AM, Jim Idle wrote:

> Yep - sounds like the kinds of thing to go for based around v4... err v5?
> ;) I remember Ter saying to me "V3 is it now, I won't be creating a v4..."
> ;)

uh oh. I've just been outed!
ter

From jimi at temporal-wave.com  Thu Sep  8 12:46:32 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 8 Sep 2011 12:46:32 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <ACF93AC1-AC86-4BAF-B765-929643C06E3E@cs.usfca.edu>
References: <CA8E2D31.1E64%douglasgodfrey@gmail.com>
	<ACF93AC1-AC86-4BAF-B765-929643C06E3E@cs.usfca.edu>
Message-ID: <a8b67fbe44b56a4233d88dd3e1b381eb@mail.gmail.com>

I think though that the reason for having them as special productions is
so that they don't affect the predictions of the normal case and generate
lots of ambiguity.

Wasn't the idea that on getting a mismatch, you then tried each error alt
in the order given, rather like backtrack mode but that the error
productions were not included in the ordinary alts? The first error alt
that matches then deals with the error messages and so on.

I am pretty sure that this arose because of all the messing around that I
had to do to stop parsers from dropping out of loops and that one problem
was that there were cases where you could not specify common error
patterns without affecting prediction and followsets and so on to such an
extent that you would have to use backtrack mode all the time? Therefore
the idea of special annotation/indication of error alts was required?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Terence Parr
> Sent: Thursday, September 08, 2011 12:28 PM
> To: Antlr-Interest Antlr.Org
> Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
>
> yes, That is of course something for ANTLR not AW. I called those error
> alternatives in my wish list, but then I realized that you can simply
> list them already without having to identify them as error
> alternatives. Then, in that rule, you can specify the appropriate error
> message.
>
> Ter
> On Sep 8, 2011, at 5:45 AM, Douglas Godfrey wrote:
>
> > How about a direct language feature to issue a warning or error on
> > parsing a rule...
> >
> > I.e. you have a grammar where certain improper syntax is expected.
> You
> > make a rule that will recognize the improper syntax or semantics and
> > issue a syntax error with a better error description when the rule is
> > matched. The side effect of encountering an error rule is the normal
> > unwinding that occurs on a parse failure.
> >
> >
> > On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> >
> >> Hi, In parallel with the development of ANTLR v4, superstar Colin
> >> Bean will be building the new version of ANTLRWorks. We already have
> >> a great base in what Jean Bovet did for the 1st version. It's a
> known
> >> entity and has lots of bookkeeping code that we can cut and paste
> >> into the new one such as the automatic update facility and
> >> preferences. Because we've got something to play with, we have
> >> something to critique and also a basic target.
> >>
> >> I can imagine the basic tool being missing but it would be great to
> >> get feedback from the antlr community.  Remember, that there are
> >> probably 2 main communities: the people new to languages and/or
> ANTLR
> >> and the people very used to working with ANTLR grammars. For
> example,
> >> new people tend to like the syntax diagrams but many old-timers like
> >> myself prefer looking at the grammar because it's more terse.
> >> Recognizing that we must serve both those communities, please
> comment with any thoughts on the following:
> >>
> >> * What feature seemed like a good idea, but didn't end up being that
> >> valuable? You can say even heretical things like: " the single step
> >> feature in the debugger just didn't seem to be that useful beyond
> >> learning about parsing"
> >>
> >> * Do you use the re-factoring? Keep in mind that v4 will
> >> automatically handle direct left recursion.
> >>
> >> * What features do you think are really critical to add?
> >>
> >> * What features could be really great if we improved them?
> >>
> >> * Do we need better export facilities?   would you really use things
> like
> >> "export grammar as hyperlinked HTML", for example.
> >>
> >> * What parts of the debugger did you use? There is a lot of stuff in
> >> there like: breakpoints on input tokens, step forward, step
> backward,
> >> jump to the end, break on specific kinds of events, break at
> specific
> >> line in the grammar, show the parse tree, show the AST constructed,
> >> list to the incoming events, etc...  Should we rethink the entire
> >> notion of the debugger at something that simply displays information
> >> about what it sees during the parse?  I.e., doesn't need to be a
> >> controller in the sense that you can single step the actual running
> >> parser over the usual socket connection?
> >>
> >> You might include whether you are in the newbie or experienced camp
> >> or somewhere in between.
> >>
> >> Udo Borkowski has already implemented a fantastic tree layout
> >> algorithm from an academic paper. The performance is extremely good
> >> and the results are tight.  Colin will probably implement his own
> >> syntax diagram viewer so that we can make it more than just a pretty
> >> picture. We want to highlight elements and step through etc.
> >>
> >> Thanks!
> >> Ter
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kenneth.domino at domemtech.com  Thu Sep  8 14:16:19 2011
From: kenneth.domino at domemtech.com (Kenneth Domino)
Date: Thu, 8 Sep 2011 17:16:19 -0400
Subject: [antlr-interest] [SPAM] ANTLR PHP target / runtime status
Message-ID: <4EF2ED41C97D44228B8039ACC0B2A048@KenPC>

Hi All,

I updated the PHP target to work with Antlr 3.4/PHP 5.3.  This code is 
available at http://domemtech.com/code/antlrphpruntime.zip for the next 
month or so, until it?hopefully?finds a permanent location. I plan on making 
more changes when I start rewriting the runtime tests for the target and 
figuring out what in the world is going on with this target.

NOTE: Someone needs to take control of this mess, delete the many forked 
copies of this target, and put this in one official location.  The 
development of this target is absolutely atrocious.  This code is not in one 
repository, but at least four.  I really do not understand why people cannot 
make private repositories on their machines instead of proliferating 
multiple public repositories.  It is not easy figuring out who made what 
change when, why, and are those changes useful.  There may be more forked 
copies of the PHP runtime out in the wild, but who knows.

For better or worse, I chose code base #3 listed below for development, and 
made a copy of that onto my machine.  The reason I chose that code base was 
because the author sent a cogent email explaining his changes, and because 
it was changed more recently than any of the other code bases.


WHERE IS ANTLR PHP LOCATED?

Here are the four different repositories:

(1) http://antlrphpruntime.googlecode.com 
(http://code.google.com/p/antlrphpruntime/ ) ? SVN.

This code is officially anointed in the Antlr targets web page 
http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets as ?the one 
and only PHP target?.  It isn?t clear what Antlr version or PHP version this 
code targets.

This code was last changed on June 19, 2010 (code) by Eugeny Yakimovitch. 
Several other unimportant changes were made more recently (e.g., June 26, 
2011).


(2) https://github.com/rollxx/antlr-php-runtime ? GIT

This code was probably forked from (1), but since there are no embedded 
version ids in the source code, I can?t tell you what was done.

The code was last changed March 21, 2010 by rollex.  At the top of the page, 
the author says:
?This version in not maintained. Please visit the main project page listed 
below for the current version ?, and gives a link to (1).

Unfortunately, it?s hard to say whether the changes were successfully merged 
back into (1), but there are check ins in late March by rollex to (1).


(3) https://github.com/beberlei/antlr-php-runtime ? GIT.

Benjamin Eberlei noted in an email to the ?Antlr Interest? and ?Antlr dev? 
lists 
(http://markmail.org/message/zbdc2ni3mfjioens#query:+page:1+mid:zbdc2ni3mfjioens+state:results 
http://www.antlr.org/pipermail/antlr-interest/2010-September/039653.html 
http://markmail.org/message/v7wq2a6wvsjlwl4n  ) that development of the 
source code in (1) was halted since Feb 2010. Eberlei modified this code to 
fix several bugs and improve on the quality of the code and checked it in.

This repository was forked from (2) (unclear when), and last modified in 
September 2010 by beberbei.


(4) http://code.google.com/p/phpandallthat/ ? SVN.

Eugeny.Yakimovitch, who is on the list of developers for (1), has an unknown 
fork of (1) that is yet another implementation of the PHP runtime.

The latest changes to that source code was in September 10, 2010. Great!


NOTE: As far as I know, there is no PHP target listed in the Fisheye view of 
the Antlr repository (linked via http://antlr.org).


DISCUSSIONS ON THE PHP TARGET:

* Aug 30, 2011 http://markmail.org/message/73fo5jg5a36qhv5p
* May 30, 2011 
http://www.antlr.org/pipermail/antlr-interest/2011-May/041725.html
* Sep 6/8, 2010 http://markmail.org/message/zbdc2ni3mfjioens 
http://markmail.org/message/v7wq2a6wvsjlwl4n
* May 6, 2010 http://www.antlr.org/pipermail/antlr-dev/2009-May/002292.html
* Oct 9, 2009 http://markmail.org/message/ewmppl7u4b3jnwgh


WHAT CHANGES DID I MAKE TO ANTLR PHP?

Most of my changes are in Php.stg, to move it forward to Antlr 3.4, and to 
handle lexers with semantic rules, like this grammar:


lexer grammar BigParLexer;


options {
   backtrack = true;
   filter = true;
}


@members{
   int open = 0;
}


P
@init{open = 1;}
   :
   '/*'
   (
      {open > 0}?=> // keep reapeating `( ... )*` as long as open > 0
         ( ( { !((input.LA(1) == '/' && input.LA(2) == '*') || (input.LA(1) 
== '*' && input.LA(2) == '/')) }?=> . ) // match anything other than 
delimiters.
         | '/*' {open++;}
         | '*/' {open--;}
      )
   )*
   ;

The lexer for this grammar accepts input like ?/* hi /* there */ */? as one 
token.  NB: this grammar doesn?t work exactly as written for the PHP target, 
as I explain below.

* Rolled changes from Java.stg, Revision ID: 8204, into Php.stg. The link to 
the code for Java.stg used in the modification of Php.stg is: 
https://fisheye2.atlassian.com/browse/antlr/tool/src/main/resources/org/antlr/codegen/templates/Java/Java.stg
* Fixed problems with backtracking.
* Fixed missing $input declaration for semantic predicates.
* Fixed missing ?$? for ?alt...? state variables in DFA generated code.
* Added a makefile to constuct antlr.jar.  I could not find any ?build.xml? 
file anywhere.  And, I cannot stand Ant.


WHAT DOES NOT WORK?

Not all the tests in .../runtime/Php/test/Antlr/Tests work.  Many of these 
are terrible test cases, some of which cause the Antlr tool to output 
warnings, and others that crash the tool altogether.

I don't know the status of AST construction, tree parsing, etc.  There is 
code for tree construction, but I haven't tested it.


WHAT DON'T I LIKE ABOUT THE PHP TARGET?

* PHP does not automatically convert an integer into a string and vice versa 
for tests; variables must be preceded with ?$?; and ??>? ends PHP code even 
in a comment.
Input streams in Antlr are composed of integers, not characters. 
?input->LA()? returns a number.  When you want to test the lookahead in a 
semantic predicate, you must convert the character you are testing into a 
number, or convert LA() into a string.  So, in the above grammar 
BigParLexer, ?input.LA(1) == ?/?? won?t work?and PHP won?t complain!  It 
must be converted to a target-specific syntax, e.g., ?\$input->LA(1) == 47?.

* In the wisdom of the developers of PHP, ??>? ends the PHP code section 
even if it is on a comment line.

e.g., ?// you are screwed ?> boo hoo.?

Consequently, some of the templates in Php.stg are missing code to generate 
descriptions in comments.  If the grammar contains ??>?, as in some of the 
test cases, PHP will barf on the generated code.  There must be a way to 
convert the description into a PHP safe format, but I don?t know what that 
would be.

* THERE IS NO DOCUMENTATION!


WHAT DO I LIKE ABOUT THE PHP TARGET?

PHP does not have a ?64K byte code per method limit? as in Java.  When 
writing a lexer grammar with semantic predicates, it seems extremely easy to 
generate Java code that will not compile (e.g., BitParLexer.g but with 
delimiters with more characters, e.g., ?<script> .... </script>?.  But, PHP 
works!


Ken Domino


From parrt at cs.usfca.edu  Thu Sep  8 14:32:57 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 14:32:57 -0700
Subject: [antlr-interest] Sample automatic visitor
Message-ID: <8028EAC9-D103-44DF-9A7E-6F82EAB50139@antlr.org>

Hi, I have a prototype working for the automatic parse tree construction and automatic visitor generation, which I've described here:

http://www.antlr.org/wiki/display/~admin/2011/09/08/Sample+v4+generated+visitor

Feedback is very welcome, and now is a good time to speak up ;)

It makes me a bit nervous to generate 2 extra files from every grammar, but I'm guessing it will be one of the most popular ways to use ANTLR. My goal is to make ANTLR very easy to use out-of-the-box while still allowing performance minded experts to get what they need.

Ter

From scott at javadude.com  Thu Sep  8 15:23:03 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Thu, 8 Sep 2011 18:23:03 -0400
Subject: [antlr-interest] Sample automatic visitor
In-Reply-To: <8028EAC9-D103-44DF-9A7E-6F82EAB50139@antlr.org>
References: <8028EAC9-D103-44DF-9A7E-6F82EAB50139@antlr.org>
Message-ID: <CAN_KjY=Tp6FQZwD=nzMizgK2uJaHVbh3FR0FD8iEZ0RZ=rVAaA@mail.gmail.com>

Just to be pedantic (as I teach Design Patterns at JHU)... using the word
"visitor" here isn't quite correct (per GoF), and is apt to cause confusion
for people who are familiar with the GoF visitor pattern.

The TListener and its implementations are actually closer to the role of
"visitor" per GoF.

I'd recommend renaming what you're calling the "visitor" to "walker" or
something similar, and keep the TListener.

What you're doing here is much simpler to understand than the GoF visitor
pattern and more direct anyway...
-- Scott

----------------------------------------
Scott Stanchfield
http://javadude.com


On Thu, Sep 8, 2011 at 5:32 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi, I have a prototype working for the automatic parse tree construction
> and automatic visitor generation, which I've described here:
>
>
> http://www.antlr.org/wiki/display/~admin/2011/09/08/Sample+v4+generated+visitor
>
> Feedback is very welcome, and now is a good time to speak up ;)
>
> It makes me a bit nervous to generate 2 extra files from every grammar, but
> I'm guessing it will be one of the most popular ways to use ANTLR. My goal
> is to make ANTLR very easy to use out-of-the-box while still allowing
> performance minded experts to get what they need.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Thu Sep  8 17:45:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 8 Sep 2011 17:45:08 -0700
Subject: [antlr-interest] Sample automatic visitor
In-Reply-To: <CAN_KjY=Tp6FQZwD=nzMizgK2uJaHVbh3FR0FD8iEZ0RZ=rVAaA@mail.gmail.com>
References: <8028EAC9-D103-44DF-9A7E-6F82EAB50139@antlr.org>
	<CAN_KjY=Tp6FQZwD=nzMizgK2uJaHVbh3FR0FD8iEZ0RZ=rVAaA@mail.gmail.com>
Message-ID: <F95695AE-D279-4E66-935F-C5EDA9A9C7FF@cs.usfca.edu>

Hi Scott. Thanks for the feedback. I think you're right. it was bugging me a little bit too because I split things up compared to a normal visitor, but I like this listener thingie. so you're cool with ParseTreeWalker? make sense to me.

Do you have any thoughts on the suitability of these listeners for building language applications? clearly is not suitable for a lot of things, perhaps even evaluating expression trees, but it seems like it would be really easy if you want to pick out all of the declarations from a Java file, for example.

Ter
On Sep 8, 2011, at 3:23 PM, Scott Stanchfield wrote:

> Just to be pedantic (as I teach Design Patterns at JHU)... using the word
> "visitor" here isn't quite correct (per GoF), and is apt to cause confusion
> for people who are familiar with the GoF visitor pattern.
> 
> The TListener and its implementations are actually closer to the role of
> "visitor" per GoF.
> 
> I'd recommend renaming what you're calling the "visitor" to "walker" or
> something similar, and keep the TListener.
> 
> What you're doing here is much simpler to understand than the GoF visitor
> pattern and more direct anyway...
> -- Scott
> 
> ----------------------------------------
> Scott Stanchfield
> http://javadude.com
> 
> 
> On Thu, Sep 8, 2011 at 5:32 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> 
>> Hi, I have a prototype working for the automatic parse tree construction
>> and automatic visitor generation, which I've described here:
>> 
>> 
>> http://www.antlr.org/wiki/display/~admin/2011/09/08/Sample+v4+generated+visitor
>> 
>> Feedback is very welcome, and now is a good time to speak up ;)
>> 
>> It makes me a bit nervous to generate 2 extra files from every grammar, but
>> I'm guessing it will be one of the most popular ways to use ANTLR. My goal
>> is to make ANTLR very easy to use out-of-the-box while still allowing
>> performance minded experts to get what they need.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From wclodius at los-alamos.net  Thu Sep  8 19:50:33 2011
From: wclodius at los-alamos.net (William Clodius)
Date: Thu, 8 Sep 2011 20:50:33 -0600
Subject: [antlr-interest] Allowing and maintaining space characters in
	string literals
In-Reply-To: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
References: <38FABFD667C19E44BC00A04C59B658B9883194A0@usemp110.ins.com>
Message-ID: <5A885248-98E1-409F-A821-22B13244432D@los-alamos.net>

Janet:

I wouldn't handle this as a lexical problem, I would handle it as a syntactical problem, eventually supplemented by semantic analysis. For example what do you want to do if you have multiple spaces between strings of characters? What I suggest is roughly

string_text: STRTEXT+;
STRTEXT: STRCHAR+
  
On Sep 8, 2011, at 12:08 PM, <Janet.Hurwitz at usc-bt.com> wrote:

> Hello- I'm working on a grammar that needs to support embedded blanks in strings: "identifier=two words"
> The interpreter keeps breaking at 'two' and doesn't know what to do with 'words'.
> I was initially ignoring white space (because 'id1 = oneword, id2 =" two words"' must also be supported with spaces around the = and ,), but obviously, can't do that.
> I have tried what was suggested in an archived post:
> 
> STRING_LITERAL : (STRCHAR)+ ( ((' ')+ STRCHAR)=> (' ')+ (STRCHAR)+ )*
> 
> But that didn't work either! (no viable alternative at input 'words'). It's not including 'words' as part of the string.
> 
> In my grammar:
> fragment LETTER :('a'..'z' | 'A'..'Z');
> fragment DIGIT : '0'..'9';
> fragment OTHERCHARS : ('.' | '/' | '-' | '&');
> STRCHAR : (LETTER | DIGIT | OTHERCHARS)+;

Note I find the + at the end of STRCHAR odd given the definition of STRING_LITERAL

> 
> I have tried various combinations of handling the blank in the lexing v. the parsing, including trying to create a quoted-string rule.
> I will have to support the following:
> 
> "identifier =two words"
> identifier ="two words"
> 
> The identifier=value pairs appear in a comma-separated line. There are various nested structures of identifier=value pairs involved, which is why both of the above formats are supported.
> 
> *** Bottom line*** I just want to indicate: If a space appears between quotation marks, include it as part of the current token; if not, throw it away.
> 
> I have everything working in a complex structure and tree walker except for the embedded blanks allowed in strings! Any suggestions are appreciated.
> 
> 
> 
> 
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From stefika at gmail.com  Fri Sep  9 05:45:52 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Fri, 9 Sep 2011 07:45:52 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <684832FA-81B4-4037-91F6-906B9698522A@cs.usfca.edu>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
	<CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
	<684832FA-81B4-4037-91F6-906B9698522A@cs.usfca.edu>
Message-ID: <CABiHOJ=Q_doyuA4VDQF_L60Ga9rBuLJxNiCt0NF3nfQOvv9gXQ@mail.gmail.com>

Ter and all,

>>> Refactoring
>>
>> No complaints on this system. It does the most common things.
>
> But do youuse it very often?


Not very much in AW. I think my most common use case is in languages
where I have quite a few files with a number of dependencies. Probably
most often, I rename methods in java. However, the grammar for my
language realistically doesn't change all that terribly much nowadays,
so refactoring isn't used much. So yaa, not a huge priority for me
specifically.

>> 1. I definitely agree that the syntax diagram, interpreter, console,
>> and debugger are sort of odd as tabs. Having them all as pinned
>> windows is more common in an IDE
>
> ?can you tell me what they pinned window is exactly?

Many IDEs have them. I could probably describe it badly in English,
but if you pull up NetBeans and look at the "Projects" tab, you'll
see. In short, the windows auto-hide, can be moved around,
restructured, made big/small, and are generally very flexible.


>> My most common
>> use case is switching back and forth between a tree walker and a
>> parser.
>
> ?true, but isn't a nicer to see two Windows next to each other to compare?

This is probably in the realm of personal preference. In my case, I
use multiple monitors and usually have a web browser, a number of
terminals, NetBeans (or other) or other stuff open when I'm working on
the grammar anyway. So, for me, it's just more clutter having multiple
windows to keep track of in AW. But, others might have only AW open
when they work or really just have a different standard way of
working. If we took a poll, I'm not sure what the result would be.


On the last point from another email, with porting to the NetBeans
platform, I can certainly understand your hesitation, considering
there are multiple IDE's out there (e.g., at least eclipse), where
things could be ported, and the learning curve on any of the platforms
can be pretty steep. As I'm sure you know, with something like
NetBeans, you would get 90% of the way there just by starting with:
http://kenai.com/projects/nbantlr, which I think is posted on your
site, but yaa, I definitely sympathize not wanting to spend time
learning complicated APIs.

There might be some other options. I haven't looked into what
technique you use to draw the syntax diagrams, run the interpreter, or
whatever, but if those were made available as public
APIs/implementation in AW as jar files you could load up, others could
really easily integrate them into NetBeans, as you can just embed
swing components/hook into the debugger API, etc. That could,
potentially, give a boost to the kenai project.

What we do on our projects is to create a set of API jar files and
split them apart as much as possible. Then, __any__ interested person
can simply download the jars and hook them into any IDE that supports
that, which probably includes at least NetBeans and Eclipse. So, for
example, our tools have a text-to-speech engine. You can get the
separately, but we also (trivially) have it hooked in through
NetBeans, which makes the API available. There's a wizard for hooking
it in even, so it's pretty easy.

Anyway, just a thought for version 3,4,5, or whenever. Like others
have said, the editor issue is still #1 most important on my end.

Stefik

From parrt at cs.usfca.edu  Fri Sep  9 11:57:44 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 9 Sep 2011 11:57:44 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CABiHOJ=Q_doyuA4VDQF_L60Ga9rBuLJxNiCt0NF3nfQOvv9gXQ@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
	<CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
	<684832FA-81B4-4037-91F6-906B9698522A@cs.usfca.edu>
	<CABiHOJ=Q_doyuA4VDQF_L60Ga9rBuLJxNiCt0NF3nfQOvv9gXQ@mail.gmail.com>
Message-ID: <2AD6E85C-46A8-414E-A854-2986E9339409@cs.usfca.edu>


On Sep 9, 2011, at 5:45 AM, Andreas Stefik wrote:
>>> On the last point from another email, with porting to the NetBeans
> platform, I can certainly understand your hesitation, considering
> there are multiple IDE's out there (e.g., at least eclipse), where
> things could be ported, and the learning curve on any of the platforms
> can be pretty steep. As I'm sure you know, with something like
> NetBeans, you would get 90% of the way there just by starting with:
> http://kenai.com/projects/nbantlr, which I think is posted on your
> site, but yaa, I definitely sympathize not wanting to spend time
> learning complicated APIs.

Yeah,It's a really tough decision because there are so many rich platforms! grrr... at the end of the day, making something simple allows other users to use the widgets without having to know a specific platform.

> 
> There might be some other options. I haven't looked into what
> technique you use to draw the syntax diagrams, run the interpreter, or
> whatever, but if those were made available as public
> APIs/implementation in AW as jar files you could load up, others could
> really easily integrate them into NetBeans, as you can just embed
> swing components/hook into the debugger API, etc. That could,
> potentially, give a boost to the kenai project.

yep, we are hoping to make each of the components separately usable item.
Ter


From srgama at gmail.com  Fri Sep  9 13:04:55 2011
From: srgama at gmail.com (sr)
Date: Fri, 9 Sep 2011 13:04:55 -0700
Subject: [antlr-interest] Noob troubles starting with antlr(Python) and
	antlrworks.
In-Reply-To: <CALZYA7_u6RovW=905T7NmjTrPcff-ouX5ujXhw7S8hryNjwL+A@mail.gmail.com>
References: <CALZYA7_u6RovW=905T7NmjTrPcff-ouX5ujXhw7S8hryNjwL+A@mail.gmail.com>
Message-ID: <CALZYA79GoM8FtYXTtxrbrqSVfhhNg3kYMAkNr8c5=LV8-qr6Jw@mail.gmail.com>

>
> Hi,
My Goal:
I'm attempting to build a grammar with AntlrWorks and use the python target
for source to source translation.

Following instructions,
wget http://www.antlr.org/download/antlr-3.1.3.tar.gz
unzipping and installed.

antlrWorks generated code needs 3.0.1! So got that installed.

Invoking the parser thus:
*python myGrammer.parser test_file.txt*
gave me an error -
*    from antlr3.main import ParserMain*
*ImportError: No module named main*

So tried the calc example in the python distribution -
To the same effect.

c:\...\antlr-3.0.1\runtime\Python\examples\calc\output>python
CalculatorParser.py
Traceback (most recent call last):
  File "CalculatorParser.py", line 558, in <module>
    main(sys.argv)
  File "CalculatorParser.py", line 547, in main
    from antlr3.main import ParserMain
ImportError: No module named main

c:\...\antlr-3.0.1\runtime\Python\examples\calc\output>python
CalculatorLexer.py
Traceback (most recent call last):
  File "CalculatorLexer.py", line 674, in <module>
    main(sys.argv)
  File "CalculatorLexer.py", line 663, in main
    from antlr3.main import LexerMain
ImportError: No module named main

No antlr3.main to be found in the sources.

Searching the forums did not yield anything useful.

What am I missing?

TIA for all help.
-sr

>

From gsmiro at gmail.com  Fri Sep  9 14:34:38 2011
From: gsmiro at gmail.com (Gabriel Miro)
Date: Fri, 9 Sep 2011 18:34:38 -0300
Subject: [antlr-interest] How to recognize a String
Message-ID: <CAJ0A1K_Fm8MtyPVZdQbSf-G9L=cos8Oz2fDzHyX-icT+=UaU0g@mail.gmail.com>

Hello all!
I'm new to ANTLR and I'm trying to build a simple grammar that can recognize
strings like ('val'). I'm using ANTLRWORKS and it generates a rule for
string values with single quotes and I mapped the parenthesis to lexer
tokens:

RPAREN:'(';
LPAREN:')';
...
STRING
    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
    ;


Now, if I try to write the following:

rule : RPAREN STRING

and evaluate the input ('blah', I get an error in the interpreter. I have no
idea why, but I'm thinking the STRING rule is evaluating EOF and returning
an error.

Any ideas on how to make this work?

Regards,
Gabriel Mir?
ANTLR Newbie

From researcher0x00 at gmail.com  Fri Sep  9 14:46:00 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 9 Sep 2011 17:46:00 -0400
Subject: [antlr-interest] How to recognize a String
In-Reply-To: <CAJ0A1K_Fm8MtyPVZdQbSf-G9L=cos8Oz2fDzHyX-icT+=UaU0g@mail.gmail.com>
References: <CAJ0A1K_Fm8MtyPVZdQbSf-G9L=cos8Oz2fDzHyX-icT+=UaU0g@mail.gmail.com>
Message-ID: <CAN45N12otbiVD105-6z7GJF7g+m0YH1YoKZcQ6k=S-hoKyVPdw@mail.gmail.com>

Hi Gabriel,

It would help if you could post your entire grammar and the exact error
message here.

Also, don't you mean

LPAREN: '(";
RPAREN: ')';

Don't worry we have all been there.

Thanks, Eric




On Fri, Sep 9, 2011 at 5:34 PM, Gabriel Miro <gsmiro at gmail.com> wrote:

> Hello all!
> I'm new to ANTLR and I'm trying to build a simple grammar that can
> recognize
> strings like ('val'). I'm using ANTLRWORKS and it generates a rule for
> string values with single quotes and I mapped the parenthesis to lexer
> tokens:
>
> RPAREN:'(';
> LPAREN:')';
> ...
> STRING
>    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
>    ;
>
>
> Now, if I try to write the following:
>
> rule : RPAREN STRING
>
> and evaluate the input ('blah', I get an error in the interpreter. I have
> no
> idea why, but I'm thinking the STRING rule is evaluating EOF and returning
> an error.
>
> Any ideas on how to make this work?
>
> Regards,
> Gabriel Mir?
> ANTLR Newbie
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Sep  9 16:31:15 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 9 Sep 2011 16:31:15 -0700
Subject: [antlr-interest] How to recognize a String
In-Reply-To: <CAN45N12otbiVD105-6z7GJF7g+m0YH1YoKZcQ6k=S-hoKyVPdw@mail.gmail.com>
References: <CAJ0A1K_Fm8MtyPVZdQbSf-G9L=cos8Oz2fDzHyX-icT+=UaU0g@mail.gmail.com>
	<CAN45N12otbiVD105-6z7GJF7g+m0YH1YoKZcQ6k=S-hoKyVPdw@mail.gmail.com>
Message-ID: <e45ad530a302da462225714cf861c71f@mail.gmail.com>

Use the debugger, not the interpreter.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of The Researcher
> Sent: Friday, September 09, 2011 2:46 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to recognize a String
>
> Hi Gabriel,
>
> It would help if you could post your entire grammar and the exact error
> message here.
>
> Also, don't you mean
>
> LPAREN: '(";
> RPAREN: ')';
>
> Don't worry we have all been there.
>
> Thanks, Eric
>
>
>
>
> On Fri, Sep 9, 2011 at 5:34 PM, Gabriel Miro <gsmiro at gmail.com> wrote:
>
> > Hello all!
> > I'm new to ANTLR and I'm trying to build a simple grammar that can
> > recognize strings like ('val'). I'm using ANTLRWORKS and it generates
> > a rule for string values with single quotes and I mapped the
> > parenthesis to lexer
> > tokens:
> >
> > RPAREN:'(';
> > LPAREN:')';
> > ...
> > STRING
> >    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
> >    ;
> >
> >
> > Now, if I try to write the following:
> >
> > rule : RPAREN STRING
> >
> > and evaluate the input ('blah', I get an error in the interpreter. I
> > have no idea why, but I'm thinking the STRING rule is evaluating EOF
> > and returning an error.
> >
> > Any ideas on how to make this work?
> >
> > Regards,
> > Gabriel Mir?
> > ANTLR Newbie
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gary at sumwise.com  Sat Sep 10 02:56:51 2011
From: gary at sumwise.com (Gary Miller)
Date: Sat, 10 Sep 2011 19:56:51 +1000
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <2AD6E85C-46A8-414E-A854-2986E9339409@cs.usfca.edu>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
	<CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
	<684832FA-81B4-4037-91F6-906B9698522A@cs.usfca.edu>
	<CABiHOJ=Q_doyuA4VDQF_L60Ga9rBuLJxNiCt0NF3nfQOvv9gXQ@mail.gmail.com>
	<2AD6E85C-46A8-414E-A854-2986E9339409@cs.usfca.edu>
Message-ID: <CAFCNb3i=h8pp4JtofzC-nRYYqryGQNWVp=fErzEqeOb5GuEMeg@mail.gmail.com>

I've haven't used AW much so this is coming from a point of ignorance.

I've been contemplating web based IDEs.
>From what I understand AW interprets the grammars instead of compiling
and executes them.
If this interpretor had a good API it could be integrated into other IDEs.
With regards web IDEs this could potentially be directly in the
browser using GWT to compile the Java to Javascript or on the back end
with ajax rpc.

For that mater is it possible to split the gui from the back-end via an api?

Regards
Gary

From parrt at cs.usfca.edu  Sat Sep 10 08:59:08 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 10 Sep 2011 08:59:08 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CAFCNb3i=h8pp4JtofzC-nRYYqryGQNWVp=fErzEqeOb5GuEMeg@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CABiHOJk1MpEe1f+6_5TeSwhJc+obj=vjLZr8axwjtP0v=zH4mg@mail.gmail.com>
	<6E625B75-776B-49AB-969B-AF13002776A5@cs.usfca.edu>
	<CABiHOJnL_mOwit4-+nGSK4ws65ANvGegjOj0uwKX_aaO88kFWw@mail.gmail.com>
	<CABiHOJnkBte_+TmMGg6PVWp000vqu4_r6gwMpQPfFm-mA33J1Q@mail.gmail.com>
	<684832FA-81B4-4037-91F6-906B9698522A@cs.usfca.edu>
	<CABiHOJ=Q_doyuA4VDQF_L60Ga9rBuLJxNiCt0NF3nfQOvv9gXQ@mail.gmail.com>
	<2AD6E85C-46A8-414E-A854-2986E9339409@cs.usfca.edu>
	<CAFCNb3i=h8pp4JtofzC-nRYYqryGQNWVp=fErzEqeOb5GuEMeg@mail.gmail.com>
Message-ID: <C0B07435-5FDC-4BF4-A7B9-41F52CF1D58C@cs.usfca.edu>

AW will have a correct interp coming from antlr tool itself.  gwt should make it avail in browser :)
Ter
On Sep 10, 2011, at 2:56 AM, Gary Miller wrote:

> I've haven't used AW much so this is coming from a point of ignorance.
> 
> I've been contemplating web based IDEs.
>> From what I understand AW interprets the grammars instead of compiling
> and executes them.
> If this interpretor had a good API it could be integrated into other IDEs.
> With regards web IDEs this could potentially be directly in the
> browser using GWT to compile the Java to Javascript or on the back end
> with ajax rpc.
> 
> For that mater is it possible to split the gui from the back-end via an api?
> 
> Regards
> Gary
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From briangeffon at gmail.com  Sat Sep 10 11:41:30 2011
From: briangeffon at gmail.com (Brian Geffon)
Date: Sat, 10 Sep 2011 11:41:30 -0700
Subject: [antlr-interest] Simple Grammar Problem
Message-ID: <CAFKFyq6nddpA91eSLPT70TbgV3COaHyMwPCbERK4a3RNUBokJQ@mail.gmail.com>

Hi,

I'm using antlr 3 and I'm trying to create a simple grammar, a simple
example is below, I'm trying to allow for any text but embedded within
it some special tags. I'm calling the arbitary text with no tags
embedded a buffer, in addition i'm trying to support loop tags,
partial tags, and comments. So a valid input might be:
{#loop1}{>partial1}Blah BlAh! Test{#loop2}foo{/loop2}{/loop1}, but I'm
having trouble with the arbitrary text in between tags. Do I have to
create a lexer rule like '\u0000'..'\uFFFF' for it to work, because
that seems a little crazy to have to do that. Thanks in advance.

Brian


grammar Dust;

options {
 language=Java;
}

start   : body EOF;

body    : (loop | partial | buffer)*
       ;

loop    : '{#' IDENT '}'
          body
         '{/' IDENT '}'
       ;

partial : '{>' IDENT '}'
       ;

buffer  : ~('{' | EOF)+;

foo     : COMMENT;

IDENT   : 'a'..'z'+;
COMMENT : '{!' .* '!}'
       ;

From ruslan_zasukhin at valentina-db.com  Sun Sep 11 11:12:42 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Sun, 11 Sep 2011 21:12:42 +0300
Subject: [antlr-interest] g++ compiler warnings on the generated lexer
 and parser .c files
In-Reply-To: <0bbf01cb80fd$86679e50$9336daf0$@temporal-wave.com>
Message-ID: <CA92D4CA.F1E4C%ruslan_zasukhin@valentina-db.com>

On 11/10/10 7:34 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

> You probably need to suppress the warnings for that. The compiler will get rid
> of them anyway. I thought that this was already done in the generated header
> but perhaps a different pragma is required if compiling as C++.


I also now take a look on how to fix warns for XCODE/GCC

In the Lexer.h present only WIN - visual disables


#ifdef    ANTLR3_WINDOWS
#pragma warning( disable : 4100 )
#pragma warning( disable : 4101 )
#pragma warning( disable : 4127 )
#pragma warning( disable : 4189 )
#pragma warning( disable : 4505 )
#pragma warning( disable : 4701 )
#endif


For GCC I try this, but so far no effect :(

#pragma GCC diagnostic ignored "-Wunused-label"
#pragma GCC diagnostic ignored "-Wunused-parameter"
#pragma GCC diagnostic ignored "-Wunused-variable"
#pragma GCC diagnostic ignored "-Wunused-value"



-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From ruslan_zasukhin at valentina-db.com  Sun Sep 11 22:41:12 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Mon, 12 Sep 2011 08:41:12 +0300
Subject: [antlr-interest] g++ compiler warnings on the generated lexer
 and parser .c files
In-Reply-To: <CA92D4CA.F1E4C%ruslan_zasukhin@valentina-db.com>
Message-ID: <CA937628.F1E7C%ruslan_zasukhin@valentina-db.com>

On 9/11/11 9:12 PM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:

For history:

 #pragma GCC diagnostic ignored "-Wunused-label"

On some reason do not works
I was able fix warnings from generated files and antrl.c files
In the xcode 

* Selecting .c files
* Get Info -> Build panel
* Add these files:

 -Wno-all -Wno-shadow -Wno-missing-prototypes -Wno-sign-compare






> On 11/10/10 7:34 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:
> 
>> You probably need to suppress the warnings for that. The compiler will get
>> rid
>> of them anyway. I thought that this was already done in the generated header
>> but perhaps a different pragma is required if compiling as C++.
> 
> 
> I also now take a look on how to fix warns for XCODE/GCC
> 
> In the Lexer.h present only WIN - visual disables
> 
> 
> #ifdef    ANTLR3_WINDOWS
> #pragma warning( disable : 4100 )
> #pragma warning( disable : 4101 )
> #pragma warning( disable : 4127 )
> #pragma warning( disable : 4189 )
> #pragma warning( disable : 4505 )
> #pragma warning( disable : 4701 )
> #endif
> 
> 
> For GCC I try this, but so far no effect :(
> 
> #pragma GCC diagnostic ignored "-Wunused-label"
> #pragma GCC diagnostic ignored "-Wunused-parameter"
> #pragma GCC diagnostic ignored "-Wunused-variable"
> #pragma GCC diagnostic ignored "-Wunused-value"

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From luke_tucker at yahoo.co.uk  Mon Sep 12 00:59:28 2011
From: luke_tucker at yahoo.co.uk (Luke Tucker)
Date: Mon, 12 Sep 2011 08:59:28 +0100 (BST)
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>

One thing I would like to see improved is the undo/redo functionality in ANTLRworks. At the moment is just works character by character and there is not much intelligence behind it. At the moment, if for example I delete a rule and replace it with a new one and include a couple of sentences as comments, to undo this operation I have to ctrl-z for every character I typed as a comment and more often than not, this ends up exceeding the default 50x undo history and I loose my changes. If you compare this to something like Eclipse, it would treat the whole comment block as a single undo, which makes life a lot easier.

Luke



________________________________
From: Terence Parr <parrt at cs.usfca.edu>
To: antlr-interest Interest <antlr-interest at antlr.org>
Cc: Colin Bean <cbean at cs.usfca.edu>
Sent: Thursday, 1 September 2011, 20:18
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)

Hi, In parallel with the development of ANTLR v4, superstar Colin Bean will be building the new version of ANTLRWorks. We already have a great base in what Jean Bovet did for the 1st version. It's a known entity and has lots of bookkeeping code that we can cut and paste into the new one such as the automatic update facility and preferences. Because we've got something to play with, we have something to critique and also a basic target.

I can imagine the basic tool being missing but it would be great to get feedback from the antlr community.? Remember, that there are probably 2 main communities: the people new to languages and/or ANTLR and the people very used to working with ANTLR grammars. For example, new people tend to like the syntax diagrams but many old-timers like myself prefer looking at the grammar because it's more terse.? Recognizing that we must serve both those communities, please comment with any thoughts on the following:

* What feature seemed like a good idea, but didn't end up being that valuable? You can say even heretical things like: " the single step feature in the debugger just didn't seem to be that useful beyond learning about parsing"

* Do you use the re-factoring? Keep in mind that v4 will automatically handle direct left recursion.

* What features do you think are really critical to add?

* What features could be really great if we improved them?

* Do we need better export facilities??  would you really use things like "export grammar as hyperlinked HTML", for example.

* What parts of the debugger did you use? There is a lot of stuff in there like: breakpoints on input tokens, step forward, step backward, jump to the end, break on specific kinds of events, break at specific line in the grammar, show the parse tree, show the AST constructed, list to the incoming events, etc...? Should we rethink the entire notion of the debugger at something that simply displays information about what it sees during the parse?? I.e., doesn't need to be a controller in the sense that you can single step the actual running parser over the usual socket connection?

You might include whether you are in the newbie or experienced camp or somewhere in between.

Udo Borkowski has already implemented a fantastic tree layout algorithm from an academic paper. The performance is extremely good and the results are tight.? Colin will probably implement his own syntax diagram viewer so that we can make it more than just a pretty picture. We want to highlight elements and step through etc.

Thanks!
Ter

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From wujek.srujek at googlemail.com  Mon Sep 12 02:18:07 2011
From: wujek.srujek at googlemail.com (Wujek Srujek)
Date: Mon, 12 Sep 2011 11:18:07 +0200
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
Message-ID: <CAAuGTBjFmLP7_kUmpq1GUFqnTqTNTvpjOeDOF9oTqMMU7TaE6Q@mail.gmail.com>

I am new to ANTLR3 and haven't yet got a lot of experience with it. The one
thing that is bugging me, though, is how hard it was to make sure ANTLR
doesn't perform any recovery and fails on first error with checked
exceptions. And it involved a nasty trick with sneaky throwing... I would
love to see it made easier.

wujek

On Mon, Sep 12, 2011 at 9:59 AM, Luke Tucker <luke_tucker at yahoo.co.uk>wrote:

> One thing I would like to see improved is the undo/redo functionality in
> ANTLRworks. At the moment is just works character by character and there is
> not much intelligence behind it. At the moment, if for example I delete a
> rule and replace it with a new one and include a couple of sentences as
> comments, to undo this operation I have to ctrl-z for every character I
> typed as a comment and more often than not, this ends up exceeding the
> default 50x undo history and I loose my changes. If you compare this to
> something like Eclipse, it would treat the whole comment block as a single
> undo, which makes life a lot easier.
>
> Luke
>
>
>
> ________________________________
> From: Terence Parr <parrt at cs.usfca.edu>
> To: antlr-interest Interest <antlr-interest at antlr.org>
> Cc: Colin Bean <cbean at cs.usfca.edu>
> Sent: Thursday, 1 September 2011, 20:18
> Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
>
> Hi, In parallel with the development of ANTLR v4, superstar Colin Bean will
> be building the new version of ANTLRWorks. We already have a great base in
> what Jean Bovet did for the 1st version. It's a known entity and has lots of
> bookkeeping code that we can cut and paste into the new one such as the
> automatic update facility and preferences. Because we've got something to
> play with, we have something to critique and also a basic target.
>
> I can imagine the basic tool being missing but it would be great to get
> feedback from the antlr community.  Remember, that there are probably 2 main
> communities: the people new to languages and/or ANTLR and the people very
> used to working with ANTLR grammars. For example, new people tend to like
> the syntax diagrams but many old-timers like myself prefer looking at the
> grammar because it's more terse.  Recognizing that we must serve both those
> communities, please comment with any thoughts on the following:
>
> * What feature seemed like a good idea, but didn't end up being that
> valuable? You can say even heretical things like: " the single step feature
> in the debugger just didn't seem to be that useful beyond learning about
> parsing"
>
> * Do you use the re-factoring? Keep in mind that v4 will automatically
> handle direct left recursion.
>
> * What features do you think are really critical to add?
>
> * What features could be really great if we improved them?
>
> * Do we need better export facilities?   would you really use things like
> "export grammar as hyperlinked HTML", for example.
>
> * What parts of the debugger did you use? There is a lot of stuff in there
> like: breakpoints on input tokens, step forward, step backward, jump to the
> end, break on specific kinds of events, break at specific line in the
> grammar, show the parse tree, show the AST constructed, list to the incoming
> events, etc...  Should we rethink the entire notion of the debugger at
> something that simply displays information about what it sees during the
> parse?  I.e., doesn't need to be a controller in the sense that you can
> single step the actual running parser over the usual socket connection?
>
> You might include whether you are in the newbie or experienced camp or
> somewhere in between.
>
> Udo Borkowski has already implemented a fantastic tree layout algorithm
> from an academic paper. The performance is extremely good and the results
> are tight.  Colin will probably implement his own syntax diagram viewer so
> that we can make it more than just a pretty picture. We want to highlight
> elements and step through etc.
>
> Thanks!
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gsmiro at gmail.com  Mon Sep 12 06:45:14 2011
From: gsmiro at gmail.com (Gabriel Miro)
Date: Mon, 12 Sep 2011 10:45:14 -0300
Subject: [antlr-interest] How to recognize a String
Message-ID: <CAJ0A1K_LGckSDFK4QD+xmJkwehVMCA0cUCf2GOdrrdCZR=9paQ@mail.gmail.com>

Eric,

Here's the grammar I'm using:

grammar test;

rule    :    STRING;

RPAREN    :    ')';
LPAREN    :    '(';

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;

CHAR:  '\'' ( ESC_SEQ | ~('\''|'\\') ) '\''
    ;

STRING
    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
    ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

Please not that, apart from the parenthesis, the rest is generated by
ANTLRWorks. Using the interpreter to match the string ' ' (single quotes and
one space, or any letter between the quotes), I get a
MismatchedTokenException(4!=10). It only matches '' (single quote without
space).

I tried removing the CHAR rule and then, for the same input, I get:

MismatchedTokenException(-1!=9)

and in the console

problem matching token at 1:3 NoViableAltException('?'@[()* loopback of
17:13: ( ESC_SEQ |~ ( '\\' | '\'' ) )*])

I tried using the debugger, but on Windows I get a javac, cannot create
process error and In my Mac, I get compile time errors in the generated
classes because it cannot find antlr classes (probably  just a classpath
problem). Is there any documentation on how to use AntlrWorks features? The
site documentation is pretty shallow and I cannot find any tutorials.

Regards,
Gabriel Mir?
ANTLR Newbie

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of The Researcher
> Sent: Friday, September 09, 2011 2:46 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] How to recognize a String
>
> Hi Gabriel,
>
> It would help if you could post your entire grammar and the exact error
> message here.
>
> Also, don't you mean
>
> LPAREN: '(";
> RPAREN: ')';
>
> Don't worry we have all been there.
>
> Thanks, Eric
>

From sharwell at pixelminegames.com  Mon Sep 12 08:26:38 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 12 Sep 2011 10:26:38 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CAAuGTBjFmLP7_kUmpq1GUFqnTqTNTvpjOeDOF9oTqMMU7TaE6Q@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>	<1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
	<CAAuGTBjFmLP7_kUmpq1GUFqnTqTNTvpjOeDOF9oTqMMU7TaE6Q@mail.gmail.com>
Message-ID: <02ae01cc7160$5dcee120$196ca360$@pixelminegames.com>

This is easy for a parser. Just add the following to your grammar.

@rulecatch{}

Aside from answering the single question "In the input recognized by this
grammar? (yes/no)", this is a rather useless thing to do. There are many,
many other ways to approach error handling that are more appropriate for any
other task.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wujek Srujek
Sent: Monday, September 12, 2011 4:18 AM
To: antlr-interest Interest
Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)

I am new to ANTLR3 and haven't yet got a lot of experience with it. The one
thing that is bugging me, though, is how hard it was to make sure ANTLR
doesn't perform any recovery and fails on first error with checked
exceptions. And it involved a nasty trick with sneaky throwing... I would
love to see it made easier.

wujek



From wujek.srujek at googlemail.com  Mon Sep 12 08:41:05 2011
From: wujek.srujek at googlemail.com (Wujek Srujek)
Date: Mon, 12 Sep 2011 17:41:05 +0200
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CAAuGTBgPVSyCaJ8TzeL59W+6ZtzTO+MBb0iirMj+iU3b=+aU2g@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
	<CAAuGTBjFmLP7_kUmpq1GUFqnTqTNTvpjOeDOF9oTqMMU7TaE6Q@mail.gmail.com>
	<02ae01cc7160$5dcee120$196ca360$@pixelminegames.com>
	<CAAuGTBgPVSyCaJ8TzeL59W+6ZtzTO+MBb0iirMj+iU3b=+aU2g@mail.gmail.com>
Message-ID: <CAAuGTBjes_Sk4kUbyAiczvhAYueXrBvvPKtYR-igqedG647p+w@mail.gmail.com>

Hi.
I think the @rulecatch has to be specified per rule, which makes it at least
cumbersome for pretty much all grammars. Please correct me if I am wrong.
How about the lexer?
Do you mean failing on first error is useless? I think it is not - for
example, we have a simple DSL for path evaluation (something like GPath from
groovy) and we translate short path expressoins it to some other
representation that is then evaluated by unified EL with our custom
resolvers (no, the native EL syntax was not what was needed, hence we
translate). I don't want any recovery here, with some artificial tokens
inserted for me - I want the whole path to fail. As I was not the only one
who searched for an answer (the ANTLR site has a dedicated site for it) I
guess it is not so uncommon.
I agree that recovery is nice in some cases, but not in all of them.

Thank you for your answer.

wujek


On Mon, Sep 12, 2011 at 5:26 PM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> This is easy for a parser. Just add the following to your grammar.
>
> @rulecatch{}
>
> Aside from answering the single question "In the input recognized by this
> grammar? (yes/no)", this is a rather useless thing to do. There are many,
> many other ways to approach error handling that are more appropriate for
> any
> other task.
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wujek Srujek
> Sent: Monday, September 12, 2011 4:18 AM
> To: antlr-interest Interest
> Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
>
> I am new to ANTLR3 and haven't yet got a lot of experience with it. The one
> thing that is bugging me, though, is how hard it was to make sure ANTLR
> doesn't perform any recovery and fails on first error with checked
> exceptions. And it involved a nasty trick with sneaky throwing... I would
> love to see it made easier.
>
> wujek
>
>
>

From sharwell at pixelminegames.com  Mon Sep 12 09:14:48 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Mon, 12 Sep 2011 11:14:48 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CAAuGTBgPVSyCaJ8TzeL59W+6ZtzTO+MBb0iirMj+iU3b=+aU2g@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>	<1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>	<CAAuGTBjFmLP7_kUmpq1GUFqnTqTNTvpjOeDOF9oTqMMU7TaE6Q@mail.gmail.com>	<02ae01cc7160$5dcee120$196ca360$@pixelminegames.com>
	<CAAuGTBgPVSyCaJ8TzeL59W+6ZtzTO+MBb0iirMj+iU3b=+aU2g@mail.gmail.com>
Message-ID: <02b301cc7167$187b84a0$49728de0$@pixelminegames.com>

In these cases, you'll want to override the Recover method in your generated
grammar and throw a new exception (derived from RuntimeException, not
RecognitionException) containing better information about the cause of the
error. In .NET I throw an OperationCanceledException. This should work for
all types of grammars.

 

This uses an unchecked but appropriate exception for the situation. Allowing
user-specified checked exceptions in a mix of generated and library code is
unnecessary and impractical.

 

Sam

 

From: Wujek Srujek [mailto:wujek.srujek at googlemail.com] 
Sent: Monday, September 12, 2011 10:40 AM
To: Sam Harwell
Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)

 

Hi.

I think the @rulecatch has to be specified per rule, which makes it at least
cumbersome for pretty much all grammars. Please correct me if I am wrong.

How about the lexer?

Do you mean failing on first error is useless? I think it is not - [removed
example before sending to public list]. I don't want any recovery here, with
some artificial tokens inserted for me - I want the whole [.] to fail. As I
was not the only one who searched for an answer (the ANTLR site has a
dedicated site for it) I guess it is not so uncommon.

I agree that recovery is nice in some cases, but not in all of them.

 

Thank you for your answer.

 

wujek

On Mon, Sep 12, 2011 at 5:26 PM, Sam Harwell <sharwell at pixelminegames.com>
wrote:

This is easy for a parser. Just add the following to your grammar.

@rulecatch{}

Aside from answering the single question "In the input recognized by this
grammar? (yes/no)", this is a rather useless thing to do. There are many,
many other ways to approach error handling that are more appropriate for any
other task.

Sam


-----Original Message-----
From: antlr-interest-bounces at antlr.org

[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Wujek Srujek
Sent: Monday, September 12, 2011 4:18 AM
To: antlr-interest Interest
Subject: Re: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)


I am new to ANTLR3 and haven't yet got a lot of experience with it. The one
thing that is bugging me, though, is how hard it was to make sure ANTLR
doesn't perform any recovery and fails on first error with checked
exceptions. And it involved a nasty trick with sneaky throwing... I would
love to see it made easier.

wujek



 


From researcher0x00 at gmail.com  Mon Sep 12 09:17:07 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 12 Sep 2011 12:17:07 -0400
Subject: [antlr-interest] How to recognize a String
In-Reply-To: <CAJ0A1K_LGckSDFK4QD+xmJkwehVMCA0cUCf2GOdrrdCZR=9paQ@mail.gmail.com>
References: <CAJ0A1K_LGckSDFK4QD+xmJkwehVMCA0cUCf2GOdrrdCZR=9paQ@mail.gmail.com>
Message-ID: <CAN45N13912Txvk=7xOY2K=N6DDDXVtREPQ_H4rjSNbjEfgsMyQ@mail.gmail.com>

On Mon, Sep 12, 2011 at 9:45 AM, Gabriel Miro <gsmiro at gmail.com> wrote:

> Eric,
>
> Here's the grammar I'm using:
>
> grammar test;
>
> rule    :    STRING;
>
> RPAREN    :    ')';
> LPAREN    :    '(';
>
> WS  :   ( ' '
>        | '\t'
>        | '\r'
>        | '\n'
>        ) {$channel=HIDDEN;}
>    ;
>
> CHAR:  '\'' ( ESC_SEQ | ~('\''|'\\') ) '\''
>    ;
>
> STRING
>    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
>    ;
>
> fragment
> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>
> fragment
> ESC_SEQ
>    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>    |   UNICODE_ESC
>    |   OCTAL_ESC
>    ;
>
> fragment
> OCTAL_ESC
>    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>    |   '\\' ('0'..'7') ('0'..'7')
>    |   '\\' ('0'..'7')
>    ;
>
> fragment
> UNICODE_ESC
>    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>    ;
>

Since the Debugger is giving you problems, use the command line.

Create these four files and run the highlighted commands. I showed you a
full run show you could see what to expect.


Mail001.g

grammar Mail001;



stmt: val EOF;



val : '(' '\'' ID '\'' ')'



ID  :   ('a'..'z'|'A'..'Z')+ ;

NEWLINE:'\r'? '\n' {skip();} ;

WS  :   (' '|'\t')+ {skip();} ;



Mail001.java

import org.antlr.runtime.*;



public class Mail001 {

    public static void main(String[] args) throws Exception {

        ANTLRInputStream input = new ANTLRInputStream(System.in);

        Mail001Lexer lexer = new Mail001Lexer(input);

        CommonTokenStream tokens = new CommonTokenStream(lexer);

        Mail001Parser parser = new Mail001Parser(tokens);

        parser.stmt();

    }

}



Mail001.dat

('val')



bad.dat

(val)



student at antlr:~/projects/antlr/mail/mail001$ ls -l

total 16

-rw-r--r-- 1 student student   6 Sep 12 12:05 bad.dat

-rw-r--r-- 1 student student   9 Sep 12 11:48 Mail001.dat

-rw-r--r-- 1 student student 157 Sep 12 12:04 Mail001.g

-rw-r--r-- 1 student student 389 Sep 12 11:41 Mail001.java

student at antlr:~/projects/antlr/mail/mail001$ java org.antlr.Tool Mail001.g

student at antlr:~/projects/antlr/mail/mail001$ ls -l

total 36

-rw-r--r-- 1 student student    6 Sep 12 12:05 bad.dat

-rw-r--r-- 1 student student    9 Sep 12 11:48 Mail001.dat

-rw-r--r-- 1 student student  157 Sep 12 12:04 Mail001.g

-rw-r--r-- 1 student student  389 Sep 12 11:41 Mail001.java

-rw-r--r-- 1 student student 9218 Sep 12 12:09 Mail001Lexer.java

-rw-r--r-- 1 student student 3237 Sep 12 12:09 Mail001Parser.java

-rw-r--r-- 1 student student   60 Sep 12 12:09 Mail001.tokens

student at antlr:~/projects/antlr/mail/mail001$ javac *.java

student at antlr:~/projects/antlr/mail/mail001$ ls -l

total 48

-rw-r--r-- 1 student student    6 Sep 12 12:05 bad.dat

-rw-r--r-- 1 student student  744 Sep 12 12:09 Mail001.class

-rw-r--r-- 1 student student    9 Sep 12 11:48 Mail001.dat

-rw-r--r-- 1 student student  157 Sep 12 12:04 Mail001.g

-rw-r--r-- 1 student student  389 Sep 12 11:41 Mail001.java

-rw-r--r-- 1 student student 4028 Sep 12 12:09 Mail001Lexer.class

-rw-r--r-- 1 student student 9218 Sep 12 12:09 Mail001Lexer.java

-rw-r--r-- 1 student student 2754 Sep 12 12:09 Mail001Parser.class

-rw-r--r-- 1 student student 3237 Sep 12 12:09 Mail001Parser.java

-rw-r--r-- 1 student student   60 Sep 12 12:09 Mail001.tokens

student at antlr:~/projects/antlr/mail/mail001$ java Mail001 < bad.dat

line 1:1 missing '\'' at 'val'

line 1:4 missing '\'' at ')'

student at antlr:~/projects/antlr/mail/mail001$ java Mail001 < Mail001.dat

student at antlr:~/projects/antlr/mail/mail001$



Notice that using Mail001.dat is valid data so no errors will be presented.



Hope that helps,



Eric



>
> Please not that, apart from the parenthesis, the rest is generated by
> ANTLRWorks. Using the interpreter to match the string ' ' (single quotes
> and
> one space, or any letter between the quotes), I get a
> MismatchedTokenException(4!=10). It only matches '' (single quote without
> space).
>
> I tried removing the CHAR rule and then, for the same input, I get:
>
> MismatchedTokenException(-1!=9)
>
> and in the console
>
> problem matching token at 1:3 NoViableAltException('?'@[()* loopback of
> 17:13: ( ESC_SEQ |~ ( '\\' | '\'' ) )*])
>
> I tried using the debugger, but on Windows I get a javac, cannot create
> process error and In my Mac, I get compile time errors in the generated
> classes because it cannot find antlr classes (probably  just a classpath
> problem). Is there any documentation on how to use AntlrWorks features? The
> site documentation is pretty shallow and I cannot find any tutorials.
>
> Regards,
> Gabriel Mir?
> ANTLR Newbie
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of The Researcher
> > Sent: Friday, September 09, 2011 2:46 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] How to recognize a String
> >
> > Hi Gabriel,
> >
> > It would help if you could post your entire grammar and the exact error
> > message here.
> >
> > Also, don't you mean
> >
> > LPAREN: '(";
> > RPAREN: ')';
> >
> > Don't worry we have all been there.
> >
> > Thanks, Eric
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Mon Sep 12 09:39:14 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 12 Sep 2011 12:39:14 -0400
Subject: [antlr-interest] How to recognize a String
In-Reply-To: <CAN45N13912Txvk=7xOY2K=N6DDDXVtREPQ_H4rjSNbjEfgsMyQ@mail.gmail.com>
References: <CAJ0A1K_LGckSDFK4QD+xmJkwehVMCA0cUCf2GOdrrdCZR=9paQ@mail.gmail.com>
	<CAN45N13912Txvk=7xOY2K=N6DDDXVtREPQ_H4rjSNbjEfgsMyQ@mail.gmail.com>
Message-ID: <CAN45N13hcE2CdJYKyxMeZAz0X-0JCHG2hdyU0_4qxYua1FOX_g@mail.gmail.com>

Opps. There's a semi-colon missing.


grammar Mail001;



stmt: val EOF;



val : '(' '\'' ID '\'' ')';



ID  :   ('a'..'z'|'A'..'Z')+ ;

NEWLINE:'\r'? '\n' {skip();} ;

WS  :   (' '|'\t')+ {skip();} ;


Eric

On Mon, Sep 12, 2011 at 12:17 PM, The Researcher
<researcher0x00 at gmail.com>wrote:

>
>
> On Mon, Sep 12, 2011 at 9:45 AM, Gabriel Miro <gsmiro at gmail.com> wrote:
>
>> Eric,
>>
>> Here's the grammar I'm using:
>>
>> grammar test;
>>
>> rule    :    STRING;
>>
>> RPAREN    :    ')';
>> LPAREN    :    '(';
>>
>> WS  :   ( ' '
>>        | '\t'
>>        | '\r'
>>        | '\n'
>>        ) {$channel=HIDDEN;}
>>    ;
>>
>> CHAR:  '\'' ( ESC_SEQ | ~('\''|'\\') ) '\''
>>    ;
>>
>> STRING
>>    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
>>    ;
>>
>> fragment
>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>
>> fragment
>> ESC_SEQ
>>    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>    |   UNICODE_ESC
>>    |   OCTAL_ESC
>>    ;
>>
>> fragment
>> OCTAL_ESC
>>    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>    |   '\\' ('0'..'7') ('0'..'7')
>>    |   '\\' ('0'..'7')
>>    ;
>>
>> fragment
>> UNICODE_ESC
>>    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>    ;
>>
>
> Since the Debugger is giving you problems, use the command line.
>
> Create these four files and run the highlighted commands. I showed you a
> full run show you could see what to expect.
>
>
> Mail001.g
>
> grammar Mail001;
>
>
>
> stmt: val EOF;
>
>
>
> val : '(' '\'' ID '\'' ')'
>
>
>
> ID  :   ('a'..'z'|'A'..'Z')+ ;
>
> NEWLINE:'\r'? '\n' {skip();} ;
>
> WS  :   (' '|'\t')+ {skip();} ;
>
>
>
> Mail001.java
>
> import org.antlr.runtime.*;
>
>
>
> public class Mail001 {
>
>     public static void main(String[] args) throws Exception {
>
>         ANTLRInputStream input = new ANTLRInputStream(System.in);
>
>         Mail001Lexer lexer = new Mail001Lexer(input);
>
>         CommonTokenStream tokens = new CommonTokenStream(lexer);
>
>         Mail001Parser parser = new Mail001Parser(tokens);
>
>         parser.stmt();
>
>     }
>
> }
>
>
>
> Mail001.dat
>
> ('val')
>
>
>
> bad.dat
>
> (val)
>
>
>
> student at antlr:~/projects/antlr/mail/mail001$ ls -l
>
> total 16
>
> -rw-r--r-- 1 student student   6 Sep 12 12:05 bad.dat
>
> -rw-r--r-- 1 student student   9 Sep 12 11:48 Mail001.dat
>
> -rw-r--r-- 1 student student 157 Sep 12 12:04 Mail001.g
>
> -rw-r--r-- 1 student student 389 Sep 12 11:41 Mail001.java
>
> student at antlr:~/projects/antlr/mail/mail001$ java org.antlr.Tool Mail001.g
>
> student at antlr:~/projects/antlr/mail/mail001$ ls -l
>
> total 36
>
> -rw-r--r-- 1 student student    6 Sep 12 12:05 bad.dat
>
> -rw-r--r-- 1 student student    9 Sep 12 11:48 Mail001.dat
>
> -rw-r--r-- 1 student student  157 Sep 12 12:04 Mail001.g
>
> -rw-r--r-- 1 student student  389 Sep 12 11:41 Mail001.java
>
> -rw-r--r-- 1 student student 9218 Sep 12 12:09 Mail001Lexer.java
>
> -rw-r--r-- 1 student student 3237 Sep 12 12:09 Mail001Parser.java
>
> -rw-r--r-- 1 student student   60 Sep 12 12:09 Mail001.tokens
>
> student at antlr:~/projects/antlr/mail/mail001$ javac *.java
>
> student at antlr:~/projects/antlr/mail/mail001$ ls -l
>
> total 48
>
> -rw-r--r-- 1 student student    6 Sep 12 12:05 bad.dat
>
> -rw-r--r-- 1 student student  744 Sep 12 12:09 Mail001.class
>
> -rw-r--r-- 1 student student    9 Sep 12 11:48 Mail001.dat
>
> -rw-r--r-- 1 student student  157 Sep 12 12:04 Mail001.g
>
> -rw-r--r-- 1 student student  389 Sep 12 11:41 Mail001.java
>
> -rw-r--r-- 1 student student 4028 Sep 12 12:09 Mail001Lexer.class
>
> -rw-r--r-- 1 student student 9218 Sep 12 12:09 Mail001Lexer.java
>
> -rw-r--r-- 1 student student 2754 Sep 12 12:09 Mail001Parser.class
>
> -rw-r--r-- 1 student student 3237 Sep 12 12:09 Mail001Parser.java
>
> -rw-r--r-- 1 student student   60 Sep 12 12:09 Mail001.tokens
>
> student at antlr:~/projects/antlr/mail/mail001$ java Mail001 < bad.dat
>
> line 1:1 missing '\'' at 'val'
>
> line 1:4 missing '\'' at ')'
>
> student at antlr:~/projects/antlr/mail/mail001$ java Mail001 < Mail001.dat
>
> student at antlr:~/projects/antlr/mail/mail001$
>
>
>
> Notice that using Mail001.dat is valid data so no errors will be presented.
>
>
>
> Hope that helps,
>
>
>
> Eric
>
>
>
>>
>> Please not that, apart from the parenthesis, the rest is generated by
>> ANTLRWorks. Using the interpreter to match the string ' ' (single quotes
>> and
>> one space, or any letter between the quotes), I get a
>> MismatchedTokenException(4!=10). It only matches '' (single quote without
>> space).
>>
>> I tried removing the CHAR rule and then, for the same input, I get:
>>
>> MismatchedTokenException(-1!=9)
>>
>> and in the console
>>
>> problem matching token at 1:3 NoViableAltException('?'@[()* loopback of
>> 17:13: ( ESC_SEQ |~ ( '\\' | '\'' ) )*])
>>
>> I tried using the debugger, but on Windows I get a javac, cannot create
>> process error and In my Mac, I get compile time errors in the generated
>> classes because it cannot find antlr classes (probably  just a classpath
>> problem). Is there any documentation on how to use AntlrWorks features?
>> The
>> site documentation is pretty shallow and I cannot find any tutorials.
>>
>> Regards,
>> Gabriel Mir?
>> ANTLR Newbie
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of The Researcher
>> > Sent: Friday, September 09, 2011 2:46 PM
>> > To: antlr-interest at antlr.org
>> > Subject: Re: [antlr-interest] How to recognize a String
>> >
>> > Hi Gabriel,
>> >
>> > It would help if you could post your entire grammar and the exact error
>> > message here.
>> >
>> > Also, don't you mean
>> >
>> > LPAREN: '(";
>> > RPAREN: ')';
>> >
>> > Don't worry we have all been there.
>> >
>> > Thanks, Eric
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From gsmiro at gmail.com  Mon Sep 12 10:28:38 2011
From: gsmiro at gmail.com (Gabriel Miro)
Date: Mon, 12 Sep 2011 14:28:38 -0300
Subject: [antlr-interest] How to recognize a String
In-Reply-To: <CAN45N13hcE2CdJYKyxMeZAz0X-0JCHG2hdyU0_4qxYua1FOX_g@mail.gmail.com>
References: <CAJ0A1K_LGckSDFK4QD+xmJkwehVMCA0cUCf2GOdrrdCZR=9paQ@mail.gmail.com>
	<CAN45N13912Txvk=7xOY2K=N6DDDXVtREPQ_H4rjSNbjEfgsMyQ@mail.gmail.com>
	<CAN45N13hcE2CdJYKyxMeZAz0X-0JCHG2hdyU0_4qxYua1FOX_g@mail.gmail.com>
Message-ID: <CAJ0A1K-SfBtLe1USWY-p=o0G+t7eRUeTo4gendYEXAtENnYFuw@mail.gmail.com>

Eric,

thank you very much. I managed to run the code and also the debugger - my
java_home was wrong - and I found out that the grammar I sent actually
worked in the debugger.
I wonder though why it doesn't in the interpreter.

Regards,
Gabriel Mir?
ANTLR Newbie

On Mon, Sep 12, 2011 at 1:39 PM, The Researcher <researcher0x00 at gmail.com>wrote:

> Opps. There's a semi-colon missing.
>
>
> grammar Mail001;
>
>
>
> stmt: val EOF;
>
>
>
> val : '(' '\'' ID '\'' ')';
>
>
>
> ID  :   ('a'..'z'|'A'..'Z')+ ;
>
> NEWLINE:'\r'? '\n' {skip();} ;
>
> WS  :   (' '|'\t')+ {skip();} ;
>
>
> Eric
>
> On Mon, Sep 12, 2011 at 12:17 PM, The Researcher
> <researcher0x00 at gmail.com>wrote:
>
> >
> >
> > On Mon, Sep 12, 2011 at 9:45 AM, Gabriel Miro <gsmiro at gmail.com> wrote:
> >
> >> Eric,
> >>
> >> Here's the grammar I'm using:
> >>
> >> grammar test;
> >>
> >> rule    :    STRING;
> >>
> >> RPAREN    :    ')';
> >> LPAREN    :    '(';
> >>
> >> WS  :   ( ' '
> >>        | '\t'
> >>        | '\r'
> >>        | '\n'
> >>        ) {$channel=HIDDEN;}
> >>    ;
> >>
> >> CHAR:  '\'' ( ESC_SEQ | ~('\''|'\\') ) '\''
> >>    ;
> >>
> >> STRING
> >>    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
> >>    ;
> >>
> >> fragment
> >> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
> >>
> >> fragment
> >> ESC_SEQ
> >>    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
> >>    |   UNICODE_ESC
> >>    |   OCTAL_ESC
> >>    ;
> >>
> >> fragment
> >> OCTAL_ESC
> >>    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
> >>    |   '\\' ('0'..'7') ('0'..'7')
> >>    |   '\\' ('0'..'7')
> >>    ;
> >>
> >> fragment
> >> UNICODE_ESC
> >>    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
> >>    ;
> >>
> >
> > Since the Debugger is giving you problems, use the command line.
> >
> > Create these four files and run the highlighted commands. I showed you a
> > full run show you could see what to expect.
> >
> >
> > Mail001.g
> >
> > grammar Mail001;
> >
> >
> >
> > stmt: val EOF;
> >
> >
> >
> > val : '(' '\'' ID '\'' ')'
> >
> >
> >
> > ID  :   ('a'..'z'|'A'..'Z')+ ;
> >
> > NEWLINE:'\r'? '\n' {skip();} ;
> >
> > WS  :   (' '|'\t')+ {skip();} ;
> >
> >
> >
> > Mail001.java
> >
> > import org.antlr.runtime.*;
> >
> >
> >
> > public class Mail001 {
> >
> >     public static void main(String[] args) throws Exception {
> >
> >         ANTLRInputStream input = new ANTLRInputStream(System.in);
> >
> >         Mail001Lexer lexer = new Mail001Lexer(input);
> >
> >         CommonTokenStream tokens = new CommonTokenStream(lexer);
> >
> >         Mail001Parser parser = new Mail001Parser(tokens);
> >
> >         parser.stmt();
> >
> >     }
> >
> > }
> >
> >
> >
> > Mail001.dat
> >
> > ('val')
> >
> >
> >
> > bad.dat
> >
> > (val)
> >
> >
> >
> > student at antlr:~/projects/antlr/mail/mail001$ ls -l
> >
> > total 16
> >
> > -rw-r--r-- 1 student student   6 Sep 12 12:05 bad.dat
> >
> > -rw-r--r-- 1 student student   9 Sep 12 11:48 Mail001.dat
> >
> > -rw-r--r-- 1 student student 157 Sep 12 12:04 Mail001.g
> >
> > -rw-r--r-- 1 student student 389 Sep 12 11:41 Mail001.java
> >
> > student at antlr:~/projects/antlr/mail/mail001$ java org.antlr.Tool
> Mail001.g
> >
> > student at antlr:~/projects/antlr/mail/mail001$ ls -l
> >
> > total 36
> >
> > -rw-r--r-- 1 student student    6 Sep 12 12:05 bad.dat
> >
> > -rw-r--r-- 1 student student    9 Sep 12 11:48 Mail001.dat
> >
> > -rw-r--r-- 1 student student  157 Sep 12 12:04 Mail001.g
> >
> > -rw-r--r-- 1 student student  389 Sep 12 11:41 Mail001.java
> >
> > -rw-r--r-- 1 student student 9218 Sep 12 12:09 Mail001Lexer.java
> >
> > -rw-r--r-- 1 student student 3237 Sep 12 12:09 Mail001Parser.java
> >
> > -rw-r--r-- 1 student student   60 Sep 12 12:09 Mail001.tokens
> >
> > student at antlr:~/projects/antlr/mail/mail001$ javac *.java
> >
> > student at antlr:~/projects/antlr/mail/mail001$ ls -l
> >
> > total 48
> >
> > -rw-r--r-- 1 student student    6 Sep 12 12:05 bad.dat
> >
> > -rw-r--r-- 1 student student  744 Sep 12 12:09 Mail001.class
> >
> > -rw-r--r-- 1 student student    9 Sep 12 11:48 Mail001.dat
> >
> > -rw-r--r-- 1 student student  157 Sep 12 12:04 Mail001.g
> >
> > -rw-r--r-- 1 student student  389 Sep 12 11:41 Mail001.java
> >
> > -rw-r--r-- 1 student student 4028 Sep 12 12:09 Mail001Lexer.class
> >
> > -rw-r--r-- 1 student student 9218 Sep 12 12:09 Mail001Lexer.java
> >
> > -rw-r--r-- 1 student student 2754 Sep 12 12:09 Mail001Parser.class
> >
> > -rw-r--r-- 1 student student 3237 Sep 12 12:09 Mail001Parser.java
> >
> > -rw-r--r-- 1 student student   60 Sep 12 12:09 Mail001.tokens
> >
> > student at antlr:~/projects/antlr/mail/mail001$ java Mail001 < bad.dat
> >
> > line 1:1 missing '\'' at 'val'
> >
> > line 1:4 missing '\'' at ')'
> >
> > student at antlr:~/projects/antlr/mail/mail001$ java Mail001 < Mail001.dat
> >
> > student at antlr:~/projects/antlr/mail/mail001$
> >
> >
> >
> > Notice that using Mail001.dat is valid data so no errors will be
> presented.
> >
> >
> >
> > Hope that helps,
> >
> >
> >
> > Eric
> >
> >
> >
> >>
> >> Please not that, apart from the parenthesis, the rest is generated by
> >> ANTLRWorks. Using the interpreter to match the string ' ' (single quotes
> >> and
> >> one space, or any letter between the quotes), I get a
> >> MismatchedTokenException(4!=10). It only matches '' (single quote
> without
> >> space).
> >>
> >> I tried removing the CHAR rule and then, for the same input, I get:
> >>
> >> MismatchedTokenException(-1!=9)
> >>
> >> and in the console
> >>
> >> problem matching token at 1:3 NoViableAltException('?'@[()* loopback of
> >> 17:13: ( ESC_SEQ |~ ( '\\' | '\'' ) )*])
> >>
> >> I tried using the debugger, but on Windows I get a javac, cannot create
> >> process error and In my Mac, I get compile time errors in the generated
> >> classes because it cannot find antlr classes (probably  just a classpath
> >> problem). Is there any documentation on how to use AntlrWorks features?
> >> The
> >> site documentation is pretty shallow and I cannot find any tutorials.
> >>
> >> Regards,
> >> Gabriel Mir?
> >> ANTLR Newbie
> >>
> >> > -----Original Message-----
> >> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> > bounces at antlr.org] On Behalf Of The Researcher
> >> > Sent: Friday, September 09, 2011 2:46 PM
> >> > To: antlr-interest at antlr.org
> >> > Subject: Re: [antlr-interest] How to recognize a String
> >> >
> >> > Hi Gabriel,
> >> >
> >> > It would help if you could post your entire grammar and the exact
> error
> >> > message here.
> >> >
> >> > Also, don't you mean
> >> >
> >> > LPAREN: '(";
> >> > RPAREN: ')';
> >> >
> >> > Don't worry we have all been there.
> >> >
> >> > Thanks, Eric
> >> >
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Mon Sep 12 11:03:04 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 12 Sep 2011 11:03:04 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
Message-ID: <7F29DB19-9686-48C1-BC69-6F407B42A25F@cs.usfca.edu>

Yep,Fixing the undo is definitely a priority.
Ter
On Sep 12, 2011, at 12:59 AM, Luke Tucker wrote:

> One thing I would like to see improved is the undo/redo functionality in ANTLRworks. At the moment is just works character by character and there is not much intelligence behind it. At the moment, if for example I delete a rule and replace it with a new one and include a couple of sentences as comments, to undo this operation I have to ctrl-z for every character I typed as a comment and more often than not, this ends up exceeding the default 50x undo history and I loose my changes. If you compare this to something like Eclipse, it would treat the whole comment block as a single undo, which makes life a lot easier.
> 
> Luke
> 
> 
> 
> ________________________________
> From: Terence Parr <parrt at cs.usfca.edu>
> To: antlr-interest Interest <antlr-interest at antlr.org>
> Cc: Colin Bean <cbean at cs.usfca.edu>
> Sent: Thursday, 1 September 2011, 20:18
> Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
> 
> Hi, In parallel with the development of ANTLR v4, superstar Colin Bean will be building the new version of ANTLRWorks. We already have a great base in what Jean Bovet did for the 1st version. It's a known entity and has lots of bookkeeping code that we can cut and paste into the new one such as the automatic update facility and preferences. Because we've got something to play with, we have something to critique and also a basic target.
> 
> I can imagine the basic tool being missing but it would be great to get feedback from the antlr community.  Remember, that there are probably 2 main communities: the people new to languages and/or ANTLR and the people very used to working with ANTLR grammars. For example, new people tend to like the syntax diagrams but many old-timers like myself prefer looking at the grammar because it's more terse.  Recognizing that we must serve both those communities, please comment with any thoughts on the following:
> 
> * What feature seemed like a good idea, but didn't end up being that valuable? You can say even heretical things like: " the single step feature in the debugger just didn't seem to be that useful beyond learning about parsing"
> 
> * Do you use the re-factoring? Keep in mind that v4 will automatically handle direct left recursion.
> 
> * What features do you think are really critical to add?
> 
> * What features could be really great if we improved them?
> 
> * Do we need better export facilities?   would you really use things like "export grammar as hyperlinked HTML", for example.
> 
> * What parts of the debugger did you use? There is a lot of stuff in there like: breakpoints on input tokens, step forward, step backward, jump to the end, break on specific kinds of events, break at specific line in the grammar, show the parse tree, show the AST constructed, list to the incoming events, etc...  Should we rethink the entire notion of the debugger at something that simply displays information about what it sees during the parse?  I.e., doesn't need to be a controller in the sense that you can single step the actual running parser over the usual socket connection?
> 
> You might include whether you are in the newbie or experienced camp or somewhere in between.
> 
> Udo Borkowski has already implemented a fantastic tree layout algorithm from an academic paper. The performance is extremely good and the results are tight.  Colin will probably implement his own syntax diagram viewer so that we can make it more than just a pretty picture. We want to highlight elements and step through etc.
> 
> Thanks!
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From laurent.caillette at gmail.com  Mon Sep 12 14:03:56 2011
From: laurent.caillette at gmail.com (Laurent Caillette)
Date: Mon, 12 Sep 2011 23:03:56 +0200
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <7F29DB19-9686-48C1-BC69-6F407B42A25F@cs.usfca.edu>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<1315814368.64760.YahooMailNeo@web27107.mail.ukl.yahoo.com>
	<7F29DB19-9686-48C1-BC69-6F407B42A25F@cs.usfca.edu>
Message-ID: <CAEMx37XGYOOJDjbsXsAfiHLnEp1uMHTCC3SYTBpgGj74Jdevaw@mail.gmail.com>

Hi all,

I used ANTLRWorks one or two years ago, as a standalone tool. The
Intellij IDEA plugin was too buggy.

I liked the "rename" feature that helped me a lot.

Hyperlinking and navigating through symbols was great, too. Maybe
symbol list could get more polished, even if I don't know how.

I stopped using the interpreter once I introduced syntactic predicates.

The errors after a grammar check, or a grammar compilation didn't show
clearly. Most of times I cleaned up the console manually or something
like that.

Often, I found the diagrams useful but navigation wasn't easy. Zooming
seemed to occur on a bitmap rather on a vector drawing.

As a conclusion, ANTLRWorks helped me a lot. Glad to hear about the
incoming 2.0!

Laurent Caillette
http://novelang.org

From interstar at gmail.com  Mon Sep 12 15:28:26 2011
From: interstar at gmail.com (phil jones)
Date: Mon, 12 Sep 2011 23:28:26 +0100
Subject: [antlr-interest] "type cannot be resolved or is not a field"
Message-ID: <CAP97Hn=F2O1jWo=EvwzvDVS82vkfpqOWyBUNKPPeDGkegaEc0Q@mail.gmail.com>

Hi everyone,

I don't know if this is a support list, so forgive me if I shouldn't
be asking this here. (If not here, where?)

I just downloaded and am trying to learn Antlr, starting with the
calculator example in the five minute guide. I've generated the Java
lexer / parser, but when I try to compile these I'm getting the error
:

"type cannot be resolved or is not a field"

The error occurs in the line " this.type = _type;"

in a generated block :

    // $ANTLR start PLUS
    public final void mPLUS() throws RecognitionException {
        try {
            int _type = PLUS;
            // SimpleCalc.g:3:6: ( '+' )
            // SimpleCalc.g:3:8: '+'
            {
            match('+');

            }

            this.type = _type;
        }
        finally {
        }
    }
    // $ANTLR end PLUS

That's in the class SimpleCalcLexer which extends Lexer. So can it be
that Lexer doesn't have a "type" attribute? Should it have one?

I generated the lexer code from the command line, but am now trying to
compile it in Processing. (I put the antlr3.3 jar in the Processing
libraries directory.)

cheers

phil jones

From researcher0x00 at gmail.com  Mon Sep 12 16:18:38 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 12 Sep 2011 19:18:38 -0400
Subject: [antlr-interest] "type cannot be resolved or is not a field"
In-Reply-To: <CAP97Hn=F2O1jWo=EvwzvDVS82vkfpqOWyBUNKPPeDGkegaEc0Q@mail.gmail.com>
References: <CAP97Hn=F2O1jWo=EvwzvDVS82vkfpqOWyBUNKPPeDGkegaEc0Q@mail.gmail.com>
Message-ID: <CAN45N136PORdvzVgEgK6hHSqzDHgLYOFNgayrbpzoHpUd7mNAg@mail.gmail.com>

Hi Phil,

Try doing it this way from the command line for the first version of the
grammar, but read the explanations in the 5-minute introduction.

Create these four files and run the highlighted commands. I showed you a
full run show you could see what to expect.

Also, notice that CLASSPAH only references antlr-3.4-complete.jar

SimpleCalc.g

grammar SimpleCalc;

tokens {
      PLUS = '+' ;
      MINUS = '-' ;
      MULT  = '*' ;
      DIV   = '/' ;
}

/*------------------------------------------------------------------
* PARSER RULES
*------------------------------------------------------------------*/
expr  : term ( ( PLUS | MINUS ) term )* ;
term  : factor ( ( MULT | DIV ) factor )* ;
factor      : NUMBER ;

/*------------------------------------------------------------------
* LEXER RULES
*------------------------------------------------------------------*/
NUMBER      : (DIGIT)+ ;
WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN; }
;
fragment DIGIT    : '0'..'9' ;



Main.java

import org.antlr.runtime.*;

public class Main
{
public static void main(String[] args) throws Exception {
SimpleCalcLexer lex = new SimpleCalcLexer(new ANTLRFileStream(args[0]));
      CommonTokenStream tokens = new CommonTokenStream(lex);
SimpleCalcParser parser = new SimpleCalcParser(tokens);
try {
parser.expr();
} catch (RecognitionException e) {
e.printStackTrace();
}
}
}


bad.dat

6/2+(3*4)-1


good.dat

6/2+3*4-1


student at antlr:~/projects/antlr/mail/mail002$ echo $CLASSPATH

/home/student/antlr-3.4-complete.jar:

student at antlr:~/projects/antlr/mail/mail002$ ls -l

total 16

-rw-r--r-- 1 student student 12 Sep 12 18:40 bad.dat

-rw-r--r-- 1 student student 10 Sep 12 18:40 good.dat

-rw-r--r-- 1 student student 460 Sep 12 18:38 Main.java

-rw-r--r-- 1 student student 640 Sep 12 18:47 SimpleCalc.g

student at antlr:~/projects/antlr/mail/mail002$ java org.antlr.Tool
SimpleCalc.g

student at antlr:~/projects/antlr/mail/mail002$ ls -l

total 40

-rw-r--r-- 1 student student 12 Sep 12 18:40 bad.dat

-rw-r--r-- 1 student student 10 Sep 12 18:40 good.dat

-rw-r--r-- 1 student student 460 Sep 12 18:38 Main.java

-rw-r--r-- 1 student student 640 Sep 12 18:47 SimpleCalc.g

-rw-r--r-- 1 student student 8962 Sep 12 18:48 SimpleCalcLexer.java

-rw-r--r-- 1 student student 5852 Sep 12 18:48 SimpleCalcParser.java

-rw-r--r-- 1 student student 83 Sep 12 18:48 SimpleCalc.tokens

student at antlr:~/projects/antlr/mail/mail002$ javac *.java

student at antlr:~/projects/antlr/mail/mail002$ ls -l

total 52

-rw-r--r-- 1 student student 12 Sep 12 18:40 bad.dat

-rw-r--r-- 1 student student 10 Sep 12 18:40 good.dat

-rw-r--r-- 1 student student 857 Sep 12 18:49 Main.class

-rw-r--r-- 1 student student 460 Sep 12 18:38 Main.java

-rw-r--r-- 1 student student 640 Sep 12 18:47 SimpleCalc.g

-rw-r--r-- 1 student student 3905 Sep 12 18:49 SimpleCalcLexer.class

-rw-r--r-- 1 student student 8962 Sep 12 18:48 SimpleCalcLexer.java

-rw-r--r-- 1 student student 3609 Sep 12 18:49 SimpleCalcParser.class

-rw-r--r-- 1 student student 5852 Sep 12 18:48 SimpleCalcParser.java

-rw-r--r-- 1 student student 83 Sep 12 18:48 SimpleCalc.tokens

student at antlr:~/projects/antlr/mail/mail002$ java Main bad.dat

bad.dat line 1:4 no viable alternative at character '('

bad.dat line 1:8 no viable alternative at character ')'

student at antlr:~/projects/antlr/mail/mail002$ java Main good.dat

student at antlr:~/projects/antlr/mail/mail002$


Notice that using good.dat is valid data so no errors will be presented.


Hope that helps,


Eric



On Mon, Sep 12, 2011 at 6:28 PM, phil jones <interstar at gmail.com> wrote:
>
> Hi everyone,
>
> I don't know if this is a support list, so forgive me if I shouldn't
> be asking this here. (If not here, where?)
>
> I just downloaded and am trying to learn Antlr, starting with the
> calculator example in the five minute guide. I've generated the Java
> lexer / parser, but when I try to compile these I'm getting the error
> :
>
> "type cannot be resolved or is not a field"
>
> The error occurs in the line " this.type = _type;"
>
> in a generated block :
>
>    // $ANTLR start PLUS
>    public final void mPLUS() throws RecognitionException {
>        try {
>            int _type = PLUS;
>            // SimpleCalc.g:3:6: ( '+' )
>            // SimpleCalc.g:3:8: '+'
>            {
>            match('+');
>
>            }
>
>            this.type = _type;
>        }
>        finally {
>        }
>    }
>    // $ANTLR end PLUS
>
> That's in the class SimpleCalcLexer which extends Lexer. So can it be
> that Lexer doesn't have a "type" attribute? Should it have one?
>
> I generated the lexer code from the command line, but am now trying to
> compile it in Processing. (I put the antlr3.3 jar in the Processing
> libraries directory.)
>
> cheers
>
> phil jones
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From skkibler at earthlink.net  Mon Sep 12 22:24:30 2011
From: skkibler at earthlink.net (Steven Kibler)
Date: Mon, 12 Sep 2011 23:24:30 -0600
Subject: [antlr-interest] AntlrWorks
Message-ID: <000001cc71d5$6e0e5eb0$4a2b1c10$@net>

Just updated to 1.4.3 of ANTLRWorks and when I attempt to generate or check
code, it doesn't do anything, no generating screen, no code generated.  Any
clues?  To work, I had to go back to 1.4.2.

 

Steven Kibler



 


From list at toolazydogs.com  Mon Sep 12 22:30:30 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Mon, 12 Sep 2011 22:30:30 -0700
Subject: [antlr-interest] Should ANTLR 3.4 be backward compatible with 3.3?
Message-ID: <2AFE9AAC-F0CB-4DDD-BB70-B352CF533A74@toolazydogs.com>

I got some free time to tinker around with an old project of mine

https://github.com/maguro/lua4j

so I updated the version to 3.4 of ANTLR and am now unable to compile it.  The parser that gets generated is not valid Java code even though ANTLR does not print out any error or warning messages.


Regards,
Alan


From douglasgodfrey at gmail.com  Tue Sep 13 01:35:35 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 13 Sep 2011 04:35:35 -0400
Subject: [antlr-interest] For getCharPositionInLine(),
 is there a way to make tab count for 8 chars instead of 1?
In-Reply-To: <01b901cc6e4c$09e4c820$1dae5860$@pixelminegames.com>
Message-ID: <CA948DBC.22C8%douglasgodfrey@gmail.com>

frontend Antlr with a preprocessing step that expands TAB characters to
the desired tab stop size
then pass the processed text to the lexer and all column positions will be
correct.

On 9/8/11 1:23 PM, "Sam Harwell" <sharwell at pixelminegames.com> wrote:

>I actually asked Dr. Parr recently about why the property is called
>CharPositionInLine instead of just Column. The name was actually picked to
>make it clear that tab and space are each treated as 1 character. When
>talking about parsing, the term "Column" also always refers to the
>character
>position within a line.
>
>The notion that the width of a tab is not equal to the width of a space
>is a
>UI concept independent of the parsing problem, and widely varies as you
>move
>from IDEs to word processors to typesetting systems. Whether it's called
>"CharPositionInLine" or "Column", the parser will provide consistent
>information about character positions and you'll need to independently
>implement the "width" of your tab characters as it applies to your
>particular target environment.
>
>Sam
>
>-----Original Message-----
>From: antlr-interest-bounces at antlr.org
>[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dejas Ninethousand
>Sent: Thursday, September 08, 2011 11:59 AM
>To: antlr-interest at antlr.org
>Subject: [antlr-interest] For getCharPositionInLine(), is there a way to
>make tab count for 8 chars instead of 1?
>
>I want to ensure that line and cols reported by my parser line up with
>what
>the user would see in a program like Textpad.  In Textpad if you move the
>cursor across a tab character the column counter and cursor advance by 8
>and
>not 1 even though only one char in the stream has been traversed.  Can I
>configure some setting in ANTRL such that tab chars are treated the same
>way
>for column reporting?
>
>Thanks.
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe:
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From douglasgodfrey at gmail.com  Tue Sep 13 02:06:23 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 13 Sep 2011 05:06:23 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <ACF93AC1-AC86-4BAF-B765-929643C06E3E@cs.usfca.edu>
Message-ID: <CA949422.22F0%douglasgodfrey@gmail.com>

You still need a way to cause Antlr/AntlrWorks to recognize that you have
an error and unwind the parse state.

I.e. add Error("message") and Warning("message") both with Antlr symbol
substitution within the message.
     Error() and Warning() can be placed in any rule after any token or
predicate.

On 9/8/11 3:28 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

>yes, That is of course something for ANTLR not AW. I called those error
>alternatives in my wish list, but then I realized that you can simply
>list them already without having to identify them as error alternatives.
>Then, in that rule, you can specify the appropriate error message.
>
>Ter
>On Sep 8, 2011, at 5:45 AM, Douglas Godfrey wrote:
>
>> How about a direct language feature to issue a warning or error on
>>parsing
>> a rule...
>> 
>> I.e. you have a grammar where certain improper syntax is expected. You
>> make a rule
>> that will recognize the improper syntax or semantics and issue a syntax
>> error with 
>> a better error description when the rule is matched. The side effect of
>> encountering
>> an error rule is the normal unwinding that occurs on a parse failure.
>> 
>> 
>> On 9/1/11 2:18 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
>> 
>>> Hi, In parallel with the development of ANTLR v4, superstar Colin Bean
>>> will be building the new version of ANTLRWorks. We already have a great
>>> base in what Jean Bovet did for the 1st version. It's a known entity
>>>and
>>> has lots of bookkeeping code that we can cut and paste into the new one
>>> such as the automatic update facility and preferences. Because we've
>>>got
>>> something to play with, we have something to critique and also a basic
>>> target.
>>> 
>>> I can imagine the basic tool being missing but it would be great to get
>>> feedback from the antlr community.  Remember, that there are probably 2
>>> main communities: the people new to languages and/or ANTLR and the
>>>people
>>> very used to working with ANTLR grammars. For example, new people tend
>>>to
>>> like the syntax diagrams but many old-timers like myself prefer looking
>>> at the grammar because it's more terse.  Recognizing that we must serve
>>> both those communities, please comment with any thoughts on the
>>>following:
>>> 
>>> * What feature seemed like a good idea, but didn't end up being that
>>> valuable? You can say even heretical things like: " the single step
>>> feature in the debugger just didn't seem to be that useful beyond
>>> learning about parsing"
>>> 
>>> * Do you use the re-factoring? Keep in mind that v4 will automatically
>>> handle direct left recursion.
>>> 
>>> * What features do you think are really critical to add?
>>> 
>>> * What features could be really great if we improved them?
>>> 
>>> * Do we need better export facilities?   would you really use things
>>>like
>>> "export grammar as hyperlinked HTML", for example.
>>> 
>>> * What parts of the debugger did you use? There is a lot of stuff in
>>> there like: breakpoints on input tokens, step forward, step backward,
>>> jump to the end, break on specific kinds of events, break at specific
>>> line in the grammar, show the parse tree, show the AST constructed,
>>>list
>>> to the incoming events, etc...  Should we rethink the entire notion of
>>> the debugger at something that simply displays information about what
>>>it
>>> sees during the parse?  I.e., doesn't need to be a controller in the
>>> sense that you can single step the actual running parser over the usual
>>> socket connection?
>>> 
>>> You might include whether you are in the newbie or experienced camp or
>>> somewhere in between.
>>> 
>>> Udo Borkowski has already implemented a fantastic tree layout algorithm
>>> from an academic paper. The performance is extremely good and the
>>>results
>>> are tight.  Colin will probably implement his own syntax diagram viewer
>>> so that we can make it more than just a pretty picture. We want to
>>> highlight elements and step through etc.
>>> 
>>> Thanks!
>>> Ter
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
>> 
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From douglasgodfrey at gmail.com  Tue Sep 13 02:14:13 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 13 Sep 2011 05:14:13 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <2AD6E85C-46A8-414E-A854-2986E9339409@cs.usfca.edu>
Message-ID: <CA9496CE.22FC%douglasgodfrey@gmail.com>

The Netbeans integration module that is available on the Netbeans Pluggin
site 
has not been maintained and does not install on Netbeans 6.9 or later
releases.

On 9/9/11 2:57 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

>
>On Sep 9, 2011, at 5:45 AM, Andreas Stefik wrote:
>>>> On the last point from another email, with porting to the NetBeans
>> platform, I can certainly understand your hesitation, considering
>> there are multiple IDE's out there (e.g., at least eclipse), where
>> things could be ported, and the learning curve on any of the platforms
>> can be pretty steep. As I'm sure you know, with something like
>> NetBeans, you would get 90% of the way there just by starting with:
>> http://kenai.com/projects/nbantlr, which I think is posted on your
>> site, but yaa, I definitely sympathize not wanting to spend time
>> learning complicated APIs.
>
>Yeah,It's a really tough decision because there are so many rich
>platforms! grrr... at the end of the day, making something simple allows
>other users to use the widgets without having to know a specific platform.
>
>> 
>> There might be some other options. I haven't looked into what
>> technique you use to draw the syntax diagrams, run the interpreter, or
>> whatever, but if those were made available as public
>> APIs/implementation in AW as jar files you could load up, others could
>> really easily integrate them into NetBeans, as you can just embed
>> swing components/hook into the debugger API, etc. That could,
>> potentially, give a boost to the kenai project.
>
>yep, we are hoping to make each of the components separately usable item.
>Ter
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From stefika at gmail.com  Tue Sep 13 06:22:36 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Tue, 13 Sep 2011 08:22:36 -0500
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CA9496CE.22FC%douglasgodfrey@gmail.com>
References: <2AD6E85C-46A8-414E-A854-2986E9339409@cs.usfca.edu>
	<CA9496CE.22FC%douglasgodfrey@gmail.com>
Message-ID: <CABiHOJ=P=MgC0x2NBK1vWgMdQY1SaGvAmCoLNK=dDqyKj0E_ZA@mail.gmail.com>

On Tue, Sep 13, 2011 at 4:14 AM, Douglas Godfrey
<douglasgodfrey at gmail.com> wrote:
> The Netbeans integration module that is available on the Netbeans Pluggin
> site
> has not been maintained and does not install on Netbeans 6.9 or later
> releases.


That's pretty easy to fix. Who controls the source for that?

Stefik

From WeikEngOff at aol.com  Tue Sep 13 06:59:25 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 13 Sep 2011 15:59:25 +0200
Subject: [antlr-interest] ANTLR: Download doxygen-files
Message-ID: <4E6F61BD.8020401@aol.com>

Hello,

is it possible to download the doxygen-files (*.cfg/*.dox) for ANTLR somewhere?


Many thanks and greetings
Udo

From gary at sumwise.com  Tue Sep 13 07:57:41 2011
From: gary at sumwise.com (Gary Miller)
Date: Wed, 14 Sep 2011 00:57:41 +1000
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
Message-ID: <CAFCNb3jgOjZGAVSjUwhZ-zabzxZwqJERd0U9DZ6Aq2TDQ8inRw@mail.gmail.com>

After playing with ANTLRWorks the following seem to be issues

* Doesn't support composite grammars
* Interpreter only works with combined grammars
* Can't use java packages

Regards
Gary

From parrt at cs.usfca.edu  Tue Sep 13 10:01:49 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Sep 2011 10:01:49 -0700
Subject: [antlr-interest] ANTLR: Download doxygen-files
In-Reply-To: <4E6F61BD.8020401@aol.com>
References: <4E6F61BD.8020401@aol.com>
Message-ID: <52B555A6-E28C-456C-894A-52FC3C46AE37@cs.usfca.edu>

hi. http://www.antlr.org/depot
T
On Sep 13, 2011, at 6:59 AM, Udo Weik wrote:

> Hello,
> 
> is it possible to download the doxygen-files (*.cfg/*.dox) for ANTLR somewhere?
> 
> 
> Many thanks and greetings
> Udo
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Tue Sep 13 10:07:14 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 13 Sep 2011 10:07:14 -0700
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <CAFCNb3jgOjZGAVSjUwhZ-zabzxZwqJERd0U9DZ6Aq2TDQ8inRw@mail.gmail.com>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CAFCNb3jgOjZGAVSjUwhZ-zabzxZwqJERd0U9DZ6Aq2TDQ8inRw@mail.gmail.com>
Message-ID: <07FB2383-63F4-450A-B78D-7E94DD13BDD8@cs.usfca.edu>


On Sep 13, 2011, at 7:57 AM, Gary Miller wrote:

> After playing with ANTLRWorks the following seem to be issues
> 
> * Doesn't support composite grammars

yep,I had to take that functionality out...

> * Interpreter only works with combined grammars

 actually, it only works with grammars without actions... might not work with combined either.

> * Can't use java packages

yep, AW is not really a build tool so it doesn't know what your packages are and so on.

 I hope to improve the situation with AW 2. thanks for the feedback

T

From researcher0x00 at gmail.com  Tue Sep 13 10:22:20 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 13 Sep 2011 13:22:20 -0400
Subject: [antlr-interest] ANTLRWorks 2 (for ANTLR v4)
In-Reply-To: <07FB2383-63F4-450A-B78D-7E94DD13BDD8@cs.usfca.edu>
References: <AB1371DA-26C7-48FD-9FBE-4CDD28E0B56B@antlr.org>
	<CAFCNb3jgOjZGAVSjUwhZ-zabzxZwqJERd0U9DZ6Aq2TDQ8inRw@mail.gmail.com>
	<07FB2383-63F4-450A-B78D-7E94DD13BDD8@cs.usfca.edu>
Message-ID: <CAN45N11gzqePxLCxXK2Mocs=aHsu_0rm0bTaCtr9sD3QXLC2LA@mail.gmail.com>

On Tue, Sep 13, 2011 at 1:07 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

>
> On Sep 13, 2011, at 7:57 AM, Gary Miller wrote:
>
> > * Interpreter only works with combined grammars
>
>  actually, it only works with grammars without actions... might not work
> with combined either.
>
>
I have also not found a way to do the island grammar like JavaDoc for the
island-grammar example. It can do the base grammar of an island-grammar.

From list at toolazydogs.com  Wed Sep 14 10:38:21 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 14 Sep 2011 10:38:21 -0700
Subject: [antlr-interest] Should ANTLR 3.4 be backward compatible with
	3.3?
In-Reply-To: <2AFE9AAC-F0CB-4DDD-BB70-B352CF533A74@toolazydogs.com>
References: <2AFE9AAC-F0CB-4DDD-BB70-B352CF533A74@toolazydogs.com>
Message-ID: <5C1EF512-BB65-4DAB-889D-E1196A7DE68A@toolazydogs.com>


On Sep 12, 2011, at 10:30 PM, Alan D. Cabrera wrote:

> I got some free time to tinker around with an old project of mine
> 
> https://github.com/maguro/lua4j
> 
> so I updated the version to 3.4 of ANTLR and am now unable to compile it.  The parser that gets generated is not valid Java code even though ANTLR does not print out any error or warning messages.

The ANTLR file generates bad Java code.  Is there something I should do to report this?   I tried the Jira but there doesn't seem to be a place to register.


Regards,
Alan



From researcher0x00 at gmail.com  Wed Sep 14 10:48:49 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Wed, 14 Sep 2011 13:48:49 -0400
Subject: [antlr-interest] Should ANTLR 3.4 be backward compatible with
	3.3?
In-Reply-To: <5C1EF512-BB65-4DAB-889D-E1196A7DE68A@toolazydogs.com>
References: <2AFE9AAC-F0CB-4DDD-BB70-B352CF533A74@toolazydogs.com>
	<5C1EF512-BB65-4DAB-889D-E1196A7DE68A@toolazydogs.com>
Message-ID: <CAN45N10fFP18YKZa+ctbp6NSWS_FTWquYyUrRXZocHzGiXOFww@mail.gmail.com>

Hi Alan

>
> On Sep 12, 2011, at 10:30 PM, Alan D. Cabrera wrote:
> The ANTLR file generates bad Java code.  Is there something I should do to
> report this?   I tried the Jira but there doesn't seem to be a place to
> register.
>

I have been reporting them here. Terence doesn't seem to mind. FWIW When I
post them I try to include the version and a simple as possible grammar and
steps to reproduce the error and if possible show that those steps worked in
an earlier version.

Eric

From bill.andersen at mac.com  Wed Sep 14 11:25:50 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Wed, 14 Sep 2011 14:25:50 -0400
Subject: [antlr-interest] Need quick ANTLR/ST3 hack
Message-ID: <95AFCE59-7254-4B5D-9D18-0AEAB2F1FE41@mac.com>

Folks

I want to write a template containing a conditional expansion for a multi-valued attribute that does one thing if the attribute is singleton and another if there are more than 1 element

For example, in an ANTLR grammar with ST output

rule
  : FOO (bars+=bar)+ -> foo(args={$bars})
  ;

where the template looks like

foo(args) ::= <<
<if(???)>
  something
<else>
  something else
<endif>
>>

I want some expression for ??? to test for args being singleton.

Is this possible in ST3?  Else I imagine I could write:

rule
  : FOO (bars+=bar)+ -> foo(args={$bars},singleton={$bars.size() == 1})
  ;

and

foo(args,singleton) ::= <<
<if(singleton)>
  something with args
<else>
  something else with args
<endif>
>>

... but I would really rather not.

From sharwell at pixelminegames.com  Wed Sep 14 12:09:47 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 14 Sep 2011 14:09:47 -0500
Subject: [antlr-interest] Need quick ANTLR/ST3 hack
In-Reply-To: <95AFCE59-7254-4B5D-9D18-0AEAB2F1FE41@mac.com>
References: <95AFCE59-7254-4B5D-9D18-0AEAB2F1FE41@mac.com>
Message-ID: <03a601cc7311$dfbfd0b0$9f3f7210$@pixelminegames.com>

I believe <if(rest(args))> will evaluate to true if args has more than one
item.

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bill Andersen
Sent: Wednesday, September 14, 2011 1:26 PM
To: antlr-interest
Subject: [antlr-interest] Need quick ANTLR/ST3 hack

Folks

I want to write a template containing a conditional expansion for a
multi-valued attribute that does one thing if the attribute is singleton and
another if there are more than 1 element

For example, in an ANTLR grammar with ST output

rule
  : FOO (bars+=bar)+ -> foo(args={$bars})
  ;

where the template looks like

foo(args) ::= <<
<if(???)>
  something
<else>
  something else
<endif>
>>

I want some expression for ??? to test for args being singleton.

Is this possible in ST3?  Else I imagine I could write:

rule
  : FOO (bars+=bar)+ -> foo(args={$bars},singleton={$bars.size() == 1})
  ;

and

foo(args,singleton) ::= <<
<if(singleton)>
  something with args
<else>
  something else with args
<endif>
>>

... but I would really rather not.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bill.andersen at mac.com  Wed Sep 14 19:27:03 2011
From: bill.andersen at mac.com (Bill Andersen)
Date: Wed, 14 Sep 2011 22:27:03 -0400
Subject: [antlr-interest] Need quick ANTLR/ST3 hack
In-Reply-To: <03a601cc7311$dfbfd0b0$9f3f7210$@pixelminegames.com>
References: <95AFCE59-7254-4B5D-9D18-0AEAB2F1FE41@mac.com>
	<03a601cc7311$dfbfd0b0$9f3f7210$@pixelminegames.com>
Message-ID: <F0E66C95-97A6-4E5F-8BF7-4582D1E1D9F7@mac.com>

Thanks, Sam...

That works - never used those ST operators before.


On Sep 14, 2011, at 15:09 , Sam Harwell wrote:

> I believe <if(rest(args))> will evaluate to true if args has more than one
> item.
> 
> Sam
> 
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bill Andersen
> Sent: Wednesday, September 14, 2011 1:26 PM
> To: antlr-interest
> Subject: [antlr-interest] Need quick ANTLR/ST3 hack
> 
> Folks
> 
> I want to write a template containing a conditional expansion for a
> multi-valued attribute that does one thing if the attribute is singleton and
> another if there are more than 1 element
> 
> For example, in an ANTLR grammar with ST output
> 
> rule
>  : FOO (bars+=bar)+ -> foo(args={$bars})
>  ;
> 
> where the template looks like
> 
> foo(args) ::= <<
> <if(???)>
>  something
> <else>
>  something else
> <endif>
>>> 
> 
> I want some expression for ??? to test for args being singleton.
> 
> Is this possible in ST3?  Else I imagine I could write:
> 
> rule
>  : FOO (bars+=bar)+ -> foo(args={$bars},singleton={$bars.size() == 1})
>  ;
> 
> and
> 
> foo(args,singleton) ::= <<
> <if(singleton)>
>  something with args
> <else>
>  something else with args
> <endif>
>>> 
> 
> ... but I would really rather not.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From list at toolazydogs.com  Wed Sep 14 19:43:58 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Wed, 14 Sep 2011 19:43:58 -0700
Subject: [antlr-interest] Should ANTLR 3.4 be backward compatible with
	3.3?
In-Reply-To: <CAN45N10fFP18YKZa+ctbp6NSWS_FTWquYyUrRXZocHzGiXOFww@mail.gmail.com>
References: <2AFE9AAC-F0CB-4DDD-BB70-B352CF533A74@toolazydogs.com>
	<5C1EF512-BB65-4DAB-889D-E1196A7DE68A@toolazydogs.com>
	<CAN45N10fFP18YKZa+ctbp6NSWS_FTWquYyUrRXZocHzGiXOFww@mail.gmail.com>
Message-ID: <F449FACB-73A4-4258-B448-D8D0409FF921@toolazydogs.com>


On Sep 14, 2011, at 10:48 AM, The Researcher wrote:

> Hi Alan
> 
>> 
>> On Sep 12, 2011, at 10:30 PM, Alan D. Cabrera wrote:
>> The ANTLR file generates bad Java code.  Is there something I should do to
>> report this?   I tried the Jira but there doesn't seem to be a place to
>> register.
>> 
> 
> I have been reporting them here. Terence doesn't seem to mind. FWIW When I
> post them I try to include the version and a simple as possible grammar and
> steps to reproduce the error and if possible show that those steps worked in
> an earlier version.

Just change the version in the root pom.xml from 3.3 to 3.4 and it will generate bad Java code.


Regards,
Alan


From piyush.besu at gmail.com  Thu Sep 15 03:02:13 2011
From: piyush.besu at gmail.com (Piyush Daftary)
Date: Thu, 15 Sep 2011 03:02:13 -0700
Subject: [antlr-interest] Piyush Daftary wants to chat
Message-ID: <CAE9ok1pjk0NVyKf+anE3LubbmxATWM3cNCAwyY2XanU-+WgO-A@mail.gmail.com>

I've been using Google Talk and thought you might like to try it out.
We can use it to call each other for free over the internet. Here's an
invitation to download Google Talk. Give it a try!

-----------------------------------------------------------------------

Piyush Daftary wants to stay in better touch using some of Google's coolest new
products.

If you already have Gmail or Google Talk, visit:
http://mail.google.com/mail/b-5384c98730-a793684b20-9XpLv14xw_4RLldbJJA3n5Bcl7k
You'll need to click this link to be able to chat with Piyush Daftary.

To get Gmail - a free email account from Google with over 2,800 megabytes of
storage - and chat with Piyush Daftary, visit:
http://mail.google.com/mail/a-5384c98730-a793684b20-9XpLv14xw_4RLldbJJA3n5Bcl7k

Gmail offers:
- Instant messaging right inside Gmail
- Powerful spam protection
- Built-in search for finding your messages and a helpful way of organizing
  emails into "conversations"
- No pop-up ads or untargeted banners - just text ads and related information
  that are relevant to the content of your messages

All this, and its yours for free. But wait, there's more! By opening a Gmail
account, you also get access to Google Talk, Google's instant messaging
service:

http://www.google.com/talk/

Google Talk offers:
- Web-based chat that you can use anywhere, without a download
- A contact list that's synchronized with your Gmail account
- Free, high quality PC-to-PC voice calls when you download the Google Talk
  client

We're working hard to add new features and make improvements, so we might also
ask for your comments and suggestions periodically. We appreciate your help in
making our products even better!

Thanks,
The Google Team

To learn more about Gmail and Google Talk, visit:
http://mail.google.com/mail/help/about.html
http://www.google.com/talk/about.html

(If clicking the URLs in this message does not work, copy and paste them into
the address bar of your browser).

From piyush.besu at gmail.com  Thu Sep 15 03:02:24 2011
From: piyush.besu at gmail.com (Piyush)
Date: Thu, 15 Sep 2011 03:02:24 -0700 (PDT)
Subject: [antlr-interest] piyush daftary has invited you to use Google Talk
In-Reply-To: <ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>
References: <1311065440680-6598011.post@n2.nabble.com>
	<ff932d7b2c31c4d48e0ba27f9f2f0541@mail.gmail.com>
Message-ID: <5540582.90921.1316080935273.chat@gmail.com>

I've been using Google Talk and thought you might like to try it out. We can use it to call each other for free over the internet. Here's an invitation to download Google Talk. Give it a try!

------------------------------------------------------------------------


piyush daftary has invited you to sign up for Google Talk so you can talk to each other for free over your computers.

To sign-up, go to:
http://www.google.com/accounts/NewAccount?service=talk&sendvemail=true&skipvpage=true&reqemail=ml-node%2B6599207-454424018-346774 at n2.nabble.com&continue=http://www.google.com/talk/service/handleinvite?p%3DabkFPDQBAAA.8FudB7j6YfLVT-GKz9Q9LwOO3sgOy2irA5E8cxrwiuszyfn_sVCkCUhej9lhlaALjw8HlTUzSRfF9YHrCXliau6_UcOBcNSVCpKk4enaQN0.N17P250_9psPfQaDyKCggg&followup=http://www.google.com/talk/service/HandleEmailVerified?ee%3DabkFPDQBAAA.g9uVMo6okOc3hyIQ_lrvzFegs9tOpjoZpoUH6yWXDkZc5SyGIre2jHkQ27ywd5jf.kI1aM6OiVOk1n-VvzTExIw%26p%3DabkFPDQBAAA.8FudB7j6YfLVT-GKz9Q9LwOO3sgOy2irA5E8cxrwiuszyfn_sVCkCUhej9lhlaALjw8HlTUzSRfF9YHrCXliau6_UcOBcNSVCpKk4enaQN0.N17P250_9psPfQaDyKCggg

Google Talk is a downloadable Windows* application that offers:
- Free calls over your computer anytime, from anywhere, and for as long as you want
- A simple and intuitive user interface for sending instant messages or making calls--no clutter, pop-ups or ads
- Superior voice quality through just a microphone and computer speaker
- Fast file transfers with no restrictions on file type

After signing-up, download Google Talk and sign in with your new Google Account username and password.
You can then begin inviting anyone you want to talk to for free.

Google Talk works with any computer speaker and microphone, such as the ones built-in to many PC laptops today,
as well as with wired and wireless headsets and USB phones. Google Talk also works across all firewalls.

Google Talk is still in beta. Just like with Gmail, we're working hard to add features and make improvements,
so we might also ask for your comments and suggestions periodically. We appreciate your help in making it even better!

Thanks,

The Google Talk Team

To learn more about Google Talk before signing up, visit:

http://www.google.com/talk/about.html

(If clicking the URLs in this message does not work, copy and paste them into the address bar of your browser).

* Not a Windows user? No problem. You can also connect to the Google Talk service from any platform using third-party clients
(http://www.google.com/talk/otherclients.html).

  

--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR-gives-segmentation-fault-for-very-large-input-tp6598011p6796195.html
Sent from the ANTLR mailing list archive at Nabble.com.

From Stefan.Maetje at esd-electronics.com  Thu Sep 15 06:43:01 2011
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Thu, 15 Sep 2011 15:43:01 +0200
Subject: [antlr-interest] Need some advice which ANTLR versions should be
 used for my project (Target: Java or Python)
Message-ID: <1316094181.3764.0@pc-stefanm>

Hi,

I'm facing the task to build a language to language translator that should 
translate the programming language PEARL to C++. The idea is to build a 
combined grammar to build an AST and then output the C++ code using a tree 
grammar with StringTemplate.

At a first glance I picked the Python target to be used as the language the 
translator could be written in. This was because some of my colleagues have 
some experience in Python. Another benefit would be that the translater would 
run unchanged under Windows and Linux because of its "interpreted" nature.

Another usable target language would be Java. Unfortunately I have neither 
experience with Python nor Java except some 100 lines example programs.

With the Python target there seem to be some uncertainties with the tool 
chain. 

From the Python target language page I get the impression that I have 
to stick to ANTLR V3.1.3 if I want to use the Python target. On the other hand 
the current AntlrWorks version 1.4.3 uses an Antlr V3.4.

Is anybody here who could tell me if I must use Antlr 3.1.3 to avoid any 
problems or if I could use Antlr 3.4 (from AntlrWorks) without deeper 
thinking?

Is the Python runtime compatible with Antlr 3.4 output? (Last question already 
answered by Python runtime page 
@http://www.antlr.org/wiki/display/ANTLR3/Python+runtime)


Also in the last stage of my translator I'll need the StringTemplate library. 
Have there been any updates or are the things mentioned on the Python target 
page still valid?
 - Python port of StringTemplate is compatible to V3.1
 - needs Python runtime from antlr-2.7.7


On the other hand the Java target would offer much more example code (from the 
books and the wiki) but if I would use Java I would be on my own (no fellows 
working with Java in my company). Also I could use an up-to-date Antlr 
version, but I don't know what the possible benefits would be.

Any comments and advice to choose the target language and which Antlr / 
Antlrworks / Stringtemplate versions to use appreciated.

Thanks,
	Stefan M?tje



From researcher0x00 at gmail.com  Thu Sep 15 07:29:45 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 15 Sep 2011 10:29:45 -0400
Subject: [antlr-interest] Need some advice which ANTLR versions should
 be used for my project (Target: Java or Python)
In-Reply-To: <1316094181.3764.0@pc-stefanm>
References: <1316094181.3764.0@pc-stefanm>
Message-ID: <CAN45N10Jmvigpeiv0o8BKzkSk-h_SSa3MEXPDQYteELff+sRig@mail.gmail.com>

Hi Stefan,

FWIW

Each of the different target languages is created and maintained by
different people/groups. See
http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets

If you check http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget you
will see "Please note that the Python target is (compared to most other
targets) rather young. I would consider it to be in *beta state*."

Since Terence creates and maintains the Java version, the decision is
obvious; pick the Java target.

My guess is that most of your work will be in creating a PERL grammar for
ANTLR and doing the AST rewrites. You will probably need to write some Java
for the  predicates but that will be a lesser of your worries. Note: I did
not find a PERL grammar at http://www.antlr.org/grammar/list

Best Wishes, Eric

On Thu, Sep 15, 2011 at 9:43 AM, Stefan M?tje (d) <
Stefan.Maetje at esd-electronics.com> wrote:

> Hi,
>
> I'm facing the task to build a language to language translator that should
> translate the programming language PEARL to C++. The idea is to build a
> combined grammar to build an AST and then output the C++ code using a tree
> grammar with StringTemplate.
>
> At a first glance I picked the Python target to be used as the language the
> translator could be written in. This was because some of my colleagues have
> some experience in Python. Another benefit would be that the translater
> would
> run unchanged under Windows and Linux because of its "interpreted" nature.
>
> Another usable target language would be Java. Unfortunately I have neither
> experience with Python nor Java except some 100 lines example programs.
>
> With the Python target there seem to be some uncertainties with the tool
> chain.
>
> >From the Python target language page I get the impression that I have
> to stick to ANTLR V3.1.3 if I want to use the Python target. On the other
> hand
> the current AntlrWorks version 1.4.3 uses an Antlr V3.4.
>
> Is anybody here who could tell me if I must use Antlr 3.1.3 to avoid any
> problems or if I could use Antlr 3.4 (from AntlrWorks) without deeper
> thinking?
>
> Is the Python runtime compatible with Antlr 3.4 output? (Last question
> already
> answered by Python runtime page
> @http://www.antlr.org/wiki/display/ANTLR3/Python+runtime)
>
>
> Also in the last stage of my translator I'll need the StringTemplate
> library.
> Have there been any updates or are the things mentioned on the Python
> target
> page still valid?
>  - Python port of StringTemplate is compatible to V3.1
>  - needs Python runtime from antlr-2.7.7
>
>
> On the other hand the Java target would offer much more example code (from
> the
> books and the wiki) but if I would use Java I would be on my own (no
> fellows
> working with Java in my company). Also I could use an up-to-date Antlr
> version, but I don't know what the possible benefits would be.
>
> Any comments and advice to choose the target language and which Antlr /
> Antlrworks / Stringtemplate versions to use appreciated.
>
> Thanks,
>        Stefan M?tje
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu Sep 15 08:11:47 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 15 Sep 2011 08:11:47 -0700
Subject: [antlr-interest] Need some advice which ANTLR versions should
 be used for my project (Target: Java or Python)
In-Reply-To: <1316094181.3764.0@pc-stefanm>
References: <1316094181.3764.0@pc-stefanm>
Message-ID: <6b52e5f8f1367a25ba4027967f9a45ac@mail.gmail.com>

I think that your choice is 3.4 and Java as the Python target does not
seem to be maintained. If you used an older version then it is likely you
would hit problems with python that are not going to be fixed and you
would be stuck.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Stefan M?tje (d)
> Sent: Thursday, September 15, 2011 6:43 AM
> To: antlr-interest
> Subject: [antlr-interest] Need some advice which ANTLR versions should
> be used for my project (Target: Java or Python)
>
> Hi,
>
> I'm facing the task to build a language to language translator that
> should translate the programming language PEARL to C++. The idea is to
> build a combined grammar to build an AST and then output the C++ code
> using a tree grammar with StringTemplate.
>
> At a first glance I picked the Python target to be used as the language
> the translator could be written in. This was because some of my
> colleagues have some experience in Python. Another benefit would be
> that the translater would run unchanged under Windows and Linux because
> of its "interpreted" nature.
>
> Another usable target language would be Java. Unfortunately I have
> neither experience with Python nor Java except some 100 lines example
> programs.
>
> With the Python target there seem to be some uncertainties with the
> tool chain.
>
> >From the Python target language page I get the impression that I have
> to stick to ANTLR V3.1.3 if I want to use the Python target. On the
> other hand the current AntlrWorks version 1.4.3 uses an Antlr V3.4.
>
> Is anybody here who could tell me if I must use Antlr 3.1.3 to avoid
> any problems or if I could use Antlr 3.4 (from AntlrWorks) without
> deeper thinking?
>
> Is the Python runtime compatible with Antlr 3.4 output? (Last question
> already answered by Python runtime page
> @http://www.antlr.org/wiki/display/ANTLR3/Python+runtime)
>
>
> Also in the last stage of my translator I'll need the StringTemplate
> library.
> Have there been any updates or are the things mentioned on the Python
> target page still valid?
>  - Python port of StringTemplate is compatible to V3.1
>  - needs Python runtime from antlr-2.7.7
>
>
> On the other hand the Java target would offer much more example code
> (from the
> books and the wiki) but if I would use Java I would be on my own (no
> fellows
> working with Java in my company). Also I could use an up-to-date Antlr
> version, but I don't know what the possible benefits would be.
>
> Any comments and advice to choose the target language and which Antlr /
> Antlrworks / Stringtemplate versions to use appreciated.
>
> Thanks,
> 	Stefan M?tje
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kleibi at gmx.net  Thu Sep 15 09:27:08 2011
From: kleibi at gmx.net (kleibi at gmx.net)
Date: Thu, 15 Sep 2011 18:27:08 +0200
Subject: [antlr-interest] Binary support
Message-ID: <20110915162708.279250@gmx.net>

Hi,
I searched through the archives and through the ANTLR reference, but I got the feeling that building a parser for binary files is a bit hard.

Are there efforts to allow something like the following:


Interpretation of size

E.g. in binary formats you often have things like the following:

---------------------------------------------
| header | size of next block | block | ... |
---------------------------------------------

If I got everything correct I could handle this by reading the size in a size rule, storing it in a variable and pass/use it in a block rule. I think it's not very elegant, but should work.


Byte alignment

Often you have some sort of byte alignment in binary files. E.g. in a four byte alignment you end up with 0 to 3 empty bytes. I think it would also be possible to do this using a variable and then calling a rule from within an action -- but I find this also not very elegant.


Ranges for repetitive rule execution

ANTLR already supports executing a rule
 * exactly one time
 * zero or one time
 * zero or unlimited times
So I think it shouldn't be a problem to say "execute it at least 3 but not more than 89 times", e.g. This would also be nice, because binary formats often have especially upper limits in lists.


Specifying Hexadecimal values in rules

If I got everything correctly, in current ANTLR versions it's not possible to specify hexadecimal (or octal or ...) in rules. Because binary files most of the time do not use UTF or ASCII but hexadecimal values etc. for specifying magic numbers etc. this would be quite nice.


Bit handling

In binary files you often have to extract bits or bit ranges.


Perhaps I just didn't find or understand something correctly and some things mentioned above are already possible -- then just point me to the place where to look at.


Bye,
Andi
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From researcher0x00 at gmail.com  Thu Sep 15 09:44:08 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 15 Sep 2011 12:44:08 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <20110915162708.279250@gmx.net>
References: <20110915162708.279250@gmx.net>
Message-ID: <CAN45N12pQX-wzrWikBxGij++TR7Pw+gs=78wdFLyTmGP_TD1-Q@mail.gmail.com>

Hi Andi,

Yes it can be done with ANTLR, but ANTLR is not the correct tool for parsing
binary files.

The closest example for a binary file is *Java .class file
grammar*<http://www.antlr.org/grammar/1147639104266/classfile.tar.gz>

Basically you will be using semantic predicates for everything, which is
like calling assembly from C. On the surface it may appear to be ANTLR, but
in reality is abusing ANTLR to do something it was not primarily designed to
do. Also, these will be one off programs. You will have to create a new one
for each file layout.

Something you might want to do, but this is reinventing the wheel, is to
create your own grammar that defines binary layouts, and then use that as
input into a driver that reads the binary file. I have done both of these
and the latter is the better option.

Eric

On Thu, Sep 15, 2011 at 12:27 PM, <kleibi at gmx.net> wrote:

> Hi,
> I searched through the archives and through the ANTLR reference, but I got
> the feeling that building a parser for binary files is a bit hard.
>
> Are there efforts to allow something like the following:
>
>
> Interpretation of size
>
> E.g. in binary formats you often have things like the following:
>
> ---------------------------------------------
> | header | size of next block | block | ... |
> ---------------------------------------------
>
> If I got everything correct I could handle this by reading the size in a
> size rule, storing it in a variable and pass/use it in a block rule. I think
> it's not very elegant, but should work.
>
>
> Byte alignment
>
> Often you have some sort of byte alignment in binary files. E.g. in a four
> byte alignment you end up with 0 to 3 empty bytes. I think it would also be
> possible to do this using a variable and then calling a rule from within an
> action -- but I find this also not very elegant.
>
>
> Ranges for repetitive rule execution
>
> ANTLR already supports executing a rule
>  * exactly one time
>  * zero or one time
>  * zero or unlimited times
> So I think it shouldn't be a problem to say "execute it at least 3 but not
> more than 89 times", e.g. This would also be nice, because binary formats
> often have especially upper limits in lists.
>
>
> Specifying Hexadecimal values in rules
>
> If I got everything correctly, in current ANTLR versions it's not possible
> to specify hexadecimal (or octal or ...) in rules. Because binary files most
> of the time do not use UTF or ASCII but hexadecimal values etc. for
> specifying magic numbers etc. this would be quite nice.
>
>
> Bit handling
>
> In binary files you often have to extract bits or bit ranges.
>
>
> Perhaps I just didn't find or understand something correctly and some
> things mentioned above are already possible -- then just point me to the
> place where to look at.
>
>
> Bye,
> Andi
> --
> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From gsmiro at gmail.com  Thu Sep 15 10:12:17 2011
From: gsmiro at gmail.com (Gabriel Miro)
Date: Thu, 15 Sep 2011 14:12:17 -0300
Subject: [antlr-interest] StringTemplate question
Message-ID: <CAJ0A1K_Yeqy66cFLFKqh3ypm1SDYY1Wf+LKDurvONXte4MDD_A@mail.gmail.com>

Hello all,

I'm writing a translator to add tab characters before specific elements of a
string, e.g.:

Input : (FIELD1 + FIELD2) > 'VALUE' OR FIELD3 like ('%somevalue%')
output:
\t(\tFIELD1\t+\tFIELD2)\t>\t'VALUE'\tOR\tFIELD3\tlike\t(\t'%somevalue%'\t)

and I'm thinking about the best way to do that. I already wrote the parser
and I'm working on the translator/emitter.
For instance, in the grammar below I find that the template from 'expr' gets
overriden with the template of the last matched sub rule. Is there a way to
merge the subrule templates into the main rule one? Also, does the template
declaration need to be in the first rule?

grammar Test;

options{
    output=template;
}

rule    :    e+=expr+ -> template(exps={$e}) "<exps>";
expr    :    (B_OP WS?)* lside WS* C_OP WS* STRING
            -> template(bop={$B_OP.text},ls={lside.text},
                op={$C_OP.text},val={$STRING.text}) "    <bop>    <ls>
<op>    <val>";
lside    :
        FIELD
            -> template(f={$FIELD.text}) "    <f>"
        |
        LPAREN WS* alside WS* A_OP WS* arside WS* RPAREN
            -> template(ls={$alside.text},op={$A_OP.text},rs={$arside.text})
"    (    <ls>    <op>    <rs>    )";
alside    :    FIELD;
arside    :    FIELD;
FIELD    :    'A'..'Z'+;
RPAREN    :    ')';
LPAREN    :    '(';
A_OP    :    '+'|'-';
C_OP    :    '<>'|'='|'<'|'>'|'<='|'>=';
B_OP    :    'AND'|'OR';
LIKE    :    'like' LPAREN STRING* RPAREN;

WS  :   ( ' '
        | '\t'
        ) {$channel=HIDDEN;}
    ;

STRING
    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
    ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

From researcher0x00 at gmail.com  Thu Sep 15 10:36:00 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 15 Sep 2011 13:36:00 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <20110915170701.22130@gmx.net>
References: <20110915162708.279250@gmx.net>
	<CAN45N12pQX-wzrWikBxGij++TR7Pw+gs=78wdFLyTmGP_TD1-Q@mail.gmail.com>
	<20110915170701.22130@gmx.net>
Message-ID: <CAN45N11DVs3W+p-Z8rhBTZXQbthvGq48w8LST8kYOw8J+2hPoQ@mail.gmail.com>

seems to be an uncharted territory?

See: http://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One

There are ANTLR gramamars for it. http://www.antlr.org/grammar/list

*ASN.1* <http://www.antlr.org/grammar/1231433381400/ASN.g>  and *SMI/SPPI/ASN.1
parser* <http://www.antlr.org/grammar/1105770765162/parsesmi-v1-15jan05.zip>

Of interest might be
http://www.wireshark.org/docs/man-pages/wireshark-filter.html

Eric




On Thu, Sep 15, 2011 at 1:07 PM, andreas kleiber <kleibi at gmx.net> wrote:

> Hi Eric,
> thanks for the prompt answer.
>
> > Something you might want to do, but this is reinventing the wheel, is to
> > create your own grammar that defines binary layouts, and then use that as
> > input into a driver that reads the binary file. I have done both of these
> > and the latter is the better option.
>
> You're describing exact the situation I didn't want to face. ;-)
>
> The "ANTLR was not designed for binary files" point: This is why I think
> "if ANTLR is another tool for language recognition -- are binary files not
> also languages?". Or in other words: Wouldn't it be the least effort to add
> the functionality to ANTLR? Of course I don't know the ANTLR code at all, so
> I can't really comment on that but if it's designed well I could imagine
> that it would be possible to add at least some of my proposed features.
>
> BTW I'm wondering that I found so less posts on binary topics. And at least
> I'm not aware of another tool that's able to generate code for reading
> binary files -- seems to be an uncharted territory?
>
> Andi
> --
> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>

From s.barnett-cormack at lancaster.ac.uk  Thu Sep 15 10:51:27 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Thu, 15 Sep 2011 18:51:27 +0100
Subject: [antlr-interest] Binary support
In-Reply-To: <CAN45N11DVs3W+p-Z8rhBTZXQbthvGq48w8LST8kYOw8J+2hPoQ@mail.gmail.com>
References: <20110915162708.279250@gmx.net>
	<CAN45N12pQX-wzrWikBxGij++TR7Pw+gs=78wdFLyTmGP_TD1-Q@mail.gmail.com>
	<20110915170701.22130@gmx.net>
	<CAN45N11DVs3W+p-Z8rhBTZXQbthvGq48w8LST8kYOw8J+2hPoQ@mail.gmail.com>
Message-ID: <4E723B1F.8060807@lancaster.ac.uk>

I did some work with ASN.1 a while back. If it weren't for some ethical 
issues, I'd go back to doing it on my own time, to try and make a 
java-based tool to handle ASN.1 stuff. The problem with ASN.1 is - what 
bit of it are you talking about? Which encoding? How feature-complete? 
Which version? It's all a bit foggy. It would also only be helpful for 
any binary format which could be described using ASN.1, which isn't 
quite all of them.

Sam

On 15/09/2011 18:36, The Researcher wrote:
> seems to be an uncharted territory?
>
> See: http://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One
>
> There are ANTLR gramamars for it. http://www.antlr.org/grammar/list
>
> *ASN.1*<http://www.antlr.org/grammar/1231433381400/ASN.g>   and *SMI/SPPI/ASN.1
> parser*<http://www.antlr.org/grammar/1105770765162/parsesmi-v1-15jan05.zip>
>
> Of interest might be
> http://www.wireshark.org/docs/man-pages/wireshark-filter.html
>
> Eric
>
>
>
>
> On Thu, Sep 15, 2011 at 1:07 PM, andreas kleiber<kleibi at gmx.net>  wrote:
>
>> Hi Eric,
>> thanks for the prompt answer.
>>
>>> Something you might want to do, but this is reinventing the wheel, is to
>>> create your own grammar that defines binary layouts, and then use that as
>>> input into a driver that reads the binary file. I have done both of these
>>> and the latter is the better option.
>>
>> You're describing exact the situation I didn't want to face. ;-)
>>
>> The "ANTLR was not designed for binary files" point: This is why I think
>> "if ANTLR is another tool for language recognition -- are binary files not
>> also languages?". Or in other words: Wouldn't it be the least effort to add
>> the functionality to ANTLR? Of course I don't know the ANTLR code at all, so
>> I can't really comment on that but if it's designed well I could imagine
>> that it would be possible to add at least some of my proposed features.
>>
>> BTW I'm wondering that I found so less posts on binary topics. And at least
>> I'm not aware of another tool that's able to generate code for reading
>> binary files -- seems to be an uncharted territory?
>>
>> Andi
>> --
>> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
>> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From researcher0x00 at gmail.com  Thu Sep 15 11:06:01 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 15 Sep 2011 14:06:01 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <4E723B1F.8060807@lancaster.ac.uk>
References: <20110915162708.279250@gmx.net>
	<CAN45N12pQX-wzrWikBxGij++TR7Pw+gs=78wdFLyTmGP_TD1-Q@mail.gmail.com>
	<20110915170701.22130@gmx.net>
	<CAN45N11DVs3W+p-Z8rhBTZXQbthvGq48w8LST8kYOw8J+2hPoQ@mail.gmail.com>
	<4E723B1F.8060807@lancaster.ac.uk>
Message-ID: <CAN45N13QiLY3b8tPXK8_Vs7ooLvmEphRqUet-7xyrq8LpxXhfA@mail.gmail.com>

When I was wanting to parse data structures on disk, I took a look at ASN.1
but realized it was more like a sledge hammer for what I needed.
Interestingly enough what worked best was realizing that C++ can be thought
of as a declarative language for field, structure, array, etc. definitions
and an imperative language for the statements and then stripping out the
declaration part of C++ and using it as the basis for a binary layout
grammar. That's a hint for you Andi.

Eric


On Thu, Sep 15, 2011 at 1:51 PM, Sam Barnett-Cormack <
s.barnett-cormack at lancaster.ac.uk> wrote:

> I did some work with ASN.1 a while back. If it weren't for some ethical
> issues, I'd go back to doing it on my own time, to try and make a java-based
> tool to handle ASN.1 stuff. The problem with ASN.1 is - what bit of it are
> you talking about? Which encoding? How feature-complete? Which version? It's
> all a bit foggy. It would also only be helpful for any binary format which
> could be described using ASN.1, which isn't quite all of them.
>
> Sam
>
>
> On 15/09/2011 18:36, The Researcher wrote:
>
>> seems to be an uncharted territory?
>>
>> See: http://en.wikipedia.org/wiki/**Abstract_Syntax_Notation_One<http://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One>
>>
>> There are ANTLR gramamars for it. http://www.antlr.org/grammar/**list<http://www.antlr.org/grammar/list>
>>
>> *ASN.1*<http://www.antlr.org/**grammar/1231433381400/ASN.g<http://www.antlr.org/grammar/1231433381400/ASN.g>>
>>   and *SMI/SPPI/ASN.1
>> parser*<http://www.antlr.org/**grammar/1105770765162/**
>> parsesmi-v1-15jan05.zip<http://www.antlr.org/grammar/1105770765162/parsesmi-v1-15jan05.zip>
>> >
>>
>>
>> Of interest might be
>> http://www.wireshark.org/docs/**man-pages/wireshark-filter.**html<http://www.wireshark.org/docs/man-pages/wireshark-filter.html>
>>
>> Eric
>>
>>
>>
>>
>> On Thu, Sep 15, 2011 at 1:07 PM, andreas kleiber<kleibi at gmx.net>  wrote:
>>
>>  Hi Eric,
>>> thanks for the prompt answer.
>>>
>>>  Something you might want to do, but this is reinventing the wheel, is to
>>>> create your own grammar that defines binary layouts, and then use that
>>>> as
>>>> input into a driver that reads the binary file. I have done both of
>>>> these
>>>> and the latter is the better option.
>>>>
>>>
>>> You're describing exact the situation I didn't want to face. ;-)
>>>
>>> The "ANTLR was not designed for binary files" point: This is why I think
>>> "if ANTLR is another tool for language recognition -- are binary files
>>> not
>>> also languages?". Or in other words: Wouldn't it be the least effort to
>>> add
>>> the functionality to ANTLR? Of course I don't know the ANTLR code at all,
>>> so
>>> I can't really comment on that but if it's designed well I could imagine
>>> that it would be possible to add at least some of my proposed features.
>>>
>>> BTW I'm wondering that I found so less posts on binary topics. And at
>>> least
>>> I'm not aware of another tool that's able to generate code for reading
>>> binary files -- seems to be an uncharted territory?
>>>
>>> Andi
>>> --
>>> Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
>>> belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.**gmx.de<https://freundschaftswerbung.gmx.de>
>>>
>>>
>> List: http://www.antlr.org/mailman/**listinfo/antlr-interest<http://www.antlr.org/mailman/listinfo/antlr-interest>
>> Unsubscribe: http://www.antlr.org/mailman/**options/antlr-interest/your-*
>> *email-address<http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>>
>
>

From douglasgodfrey at gmail.com  Thu Sep 15 11:32:56 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Thu, 15 Sep 2011 14:32:56 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <20110915162708.279250@gmx.net>
Message-ID: <CA97BBE6.3226%douglasgodfrey@gmail.com>

Antlr is designed to parse stream oriented text files and does not work
well with binary data that may have nulls and line end characters that are
data.

A simple way around this is to write a override to the AntlrInputStream
that "Hexifies" the input, converting every input byte into 2 hexadecimal
digits.

A normal Antlr lexer and parser can then read the hexadecimal stream and
understand the file format.



On 9/15/11 12:27 PM, "kleibi at gmx.net" <kleibi at gmx.net> wrote:

>Hi,
>I searched through the archives and through the ANTLR reference, but I
>got the feeling that building a parser for binary files is a bit hard.
>
>Are there efforts to allow something like the following:
>
>
>Interpretation of size
>
>E.g. in binary formats you often have things like the following:
>
>---------------------------------------------
>| header | size of next block | block | ... |
>---------------------------------------------
>
>If I got everything correct I could handle this by reading the size in a
>size rule, storing it in a variable and pass/use it in a block rule. I
>think it's not very elegant, but should work.
>
>
>Byte alignment
>
>Often you have some sort of byte alignment in binary files. E.g. in a
>four byte alignment you end up with 0 to 3 empty bytes. I think it would
>also be possible to do this using a variable and then calling a rule from
>within an action -- but I find this also not very elegant.
>
>
>Ranges for repetitive rule execution
>
>ANTLR already supports executing a rule
> * exactly one time
> * zero or one time
> * zero or unlimited times
>So I think it shouldn't be a problem to say "execute it at least 3 but
>not more than 89 times", e.g. This would also be nice, because binary
>formats often have especially upper limits in lists.
>
>
>Specifying Hexadecimal values in rules
>
>If I got everything correctly, in current ANTLR versions it's not
>possible to specify hexadecimal (or octal or ...) in rules. Because
>binary files most of the time do not use UTF or ASCII but hexadecimal
>values etc. for specifying magic numbers etc. this would be quite nice.
>
>
>Bit handling
>
>In binary files you often have to extract bits or bit ranges.
>
>
>Perhaps I just didn't find or understand something correctly and some
>things mentioned above are already possible -- then just point me to the
>place where to look at.
>
>
>Bye,
>Andi
>-- 
>Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
>belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From kleibi at gmx.net  Thu Sep 15 11:36:34 2011
From: kleibi at gmx.net (andreas kleiber)
Date: Thu, 15 Sep 2011 20:36:34 +0200
Subject: [antlr-interest] Binary support
In-Reply-To: <CA97BBE6.3226%douglasgodfrey@gmail.com>
References: <CA97BBE6.3226%douglasgodfrey@gmail.com>
Message-ID: <20110915183634.59680@gmx.net>

> A simple way around this is to write a override to the AntlrInputStream
> that "Hexifies" the input, converting every input byte into 2 hexadecimal
> digits.

Hmmm. Interesting point. This would double the data to be parsed and most probably slow down processing a lot. Might not be the right solution for really large binary files, but for small ones this is definitely an option.

Thanks,
Andi
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From researcher0x00 at gmail.com  Thu Sep 15 11:56:29 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 15 Sep 2011 14:56:29 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <20110915182851.59680@gmx.net>
References: <20110915162708.279250@gmx.net>
	<CAN45N12pQX-wzrWikBxGij++TR7Pw+gs=78wdFLyTmGP_TD1-Q@mail.gmail.com>
	<20110915170701.22130@gmx.net>
	<CAN45N11DVs3W+p-Z8rhBTZXQbthvGq48w8LST8kYOw8J+2hPoQ@mail.gmail.com>
	<4E723B1F.8060807@lancaster.ac.uk>
	<CAN45N13QiLY3b8tPXK8_Vs7ooLvmEphRqUet-7xyrq8LpxXhfA@mail.gmail.com>
	<20110915182851.59680@gmx.net>
Message-ID: <CAN45N10F7XAiiWDVPKR9OCSEyNxu2RK8YLFyg+NF-RSkEWgevA@mail.gmail.com>

> What I did until now, when reading binary files, is to write interface
> classes (in C# or Java), generate code out them and use reflection. In
> principal I like this approach, but with ANTLR, I was heading to be on an
> even higher level of abstraction, more language independent and hoped to be
> able to reduce manual work.
>

What I not so cleverly was saying is that when I was reading data structures
in C# and having come from days of using C, it seemed that there should be
some way to reuse all of those header files. Thus people created
http://pinvoke.net/ ,but it is the structures section that applies here. But
still wanting a higher level of laziness, I just wanted to find the
declarations in the header, right click and select an action to translate
the declarations into C#, then back in my code paste in the translated
declarations, ready for use with C#. Translating structure definitions is
easy. Translating language statements is where we make money. Being even
more lazy, I converted them to an intermediate language that could be used
to translate declarations from one language to another. Still haven't tried
it with functional and logic languages yet.

Eric

From kleibi at gmx.net  Thu Sep 15 13:11:02 2011
From: kleibi at gmx.net (kleibi at gmx.net)
Date: Thu, 15 Sep 2011 22:11:02 +0200
Subject: [antlr-interest] Binary support
In-Reply-To: <CAN45N10F7XAiiWDVPKR9OCSEyNxu2RK8YLFyg+NF-RSkEWgevA@mail.gmail.com>
References: <20110915162708.279250@gmx.net>
	<CAN45N12pQX-wzrWikBxGij++TR7Pw+gs=78wdFLyTmGP_TD1-Q@mail.gmail.com>
	<20110915170701.22130@gmx.net>
	<CAN45N11DVs3W+p-Z8rhBTZXQbthvGq48w8LST8kYOw8J+2hPoQ@mail.gmail.com>
	<4E723B1F.8060807@lancaster.ac.uk>
	<CAN45N13QiLY3b8tPXK8_Vs7ooLvmEphRqUet-7xyrq8LpxXhfA@mail.gmail.com>
	<20110915182851.59680@gmx.net>
	<CAN45N10F7XAiiWDVPKR9OCSEyNxu2RK8YLFyg+NF-RSkEWgevA@mail.gmail.com>
Message-ID: <20110915201102.235740@gmx.net>

> But
> still wanting a higher level of laziness, I just wanted to find the
> declarations in the header, right click and select an action to translate
> the declarations into C#, then back in my code paste in the translated
> declarations, ready for use with C#. Translating structure definitions is
> easy. Translating language statements is where we make money. Being even
> more lazy, I converted them to an intermediate language that could be used
> to translate declarations from one language to another.

Ah ok, got it. Good solution, having an intermediate language is really powerful. Currently I have no header files to reuse, but in the past such a tool would have been quite helpful.
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From ronburk at gmail.com  Thu Sep 15 15:03:28 2011
From: ronburk at gmail.com (Ron Burk)
Date: Thu, 15 Sep 2011 15:03:28 -0700
Subject: [antlr-interest] Binary support
In-Reply-To: <20110915162708.279250@gmx.net>
References: <20110915162708.279250@gmx.net>
Message-ID: <CAEVkYxex1hiTH4tzoi9_gcDzpoNk_BO3bz+BQP_7gn=i6rNgNQ@mail.gmail.com>

> I got the feeling that building a parser for binary files is a bit hard.

In general, most applications don't want to "parse" a binary file.
It is already "parsed" in many (most?) cases; looking like nothing
so much as in-memory data structures linearized the least amount
necessary for disk. Many applications take great pains to *not*
have to read more of the data than they have to, to avoid the
disk I/O.

Binary file formats also often just aren't directly representable
by context free grammars. For example, a header may contain
offsets of different objects, and the sizes of those objects may
have to be inferred from the difference in offsets. Grammars,
despite looking seductively similar because of having recursively
nested constructs in common, aren't a great match for this domain.

One could imagine useful domain-specific languages for
binary file formats, but they might not look quite like
grammar tools, and a single language might not be sufficient
for all tasks. For example, generating code for a target language
(e.g., C) to access a binary file format might call for a fairly
different syntax than a language that makes it easy to reverse engineer
existing unknown file formats by building up a format
description a bit at a time.

IMHO ::D

From researcher0x00 at gmail.com  Thu Sep 15 15:15:35 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 15 Sep 2011 18:15:35 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <CAEVkYxex1hiTH4tzoi9_gcDzpoNk_BO3bz+BQP_7gn=i6rNgNQ@mail.gmail.com>
References: <20110915162708.279250@gmx.net>
	<CAEVkYxex1hiTH4tzoi9_gcDzpoNk_BO3bz+BQP_7gn=i6rNgNQ@mail.gmail.com>
Message-ID: <CAN45N12tp5dSzC4SFmeSEbNfPPrXxt-k7kTKA9TpeGf7WZKDXg@mail.gmail.com>

 For example, generating code for a target language
> (e.g., C) to access a binary file format might call for a fairly
> different syntax than a language that makes it easy to reverse engineer
> existing unknown file formats by building up a format
> description a bit at a time.
>
>
>
A walk on the wild side, ehh.

I am guessing that the reverse engineering one is more of an interpreted
grammar with forgiveness on the un-parsed areas.

Eric

From Stefan.Maetje at esd-electronics.com  Fri Sep 16 05:58:48 2011
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Fri, 16 Sep 2011 14:58:48 +0200
Subject: [antlr-interest] Need some advice which ANTLR versions should
 be used for my project (Target: Java or Python)
In-Reply-To: <CAN45N10Jmvigpeiv0o8BKzkSk-h_SSa3MEXPDQYteELff+sRig@mail.gmail.com>
	(from researcher0x00@gmail.com on Thu Sep 15 16:29:45 2011)
Message-ID: <1316177928.2058.0@pc-stefanm>

Thanks to all responders.

I'll try to use Java as a target language and see how far I get.

BTW. PEARL as input language wasn't a typo. PEARL is an acronym for
Process and Experiment Automation Realtime Language and quite different from 
PERL.

Am 15.09.2011 16:29:45 schrieb(en) The Researcher:
> Hi Stefan,
> 
> FWIW
> 
> Each of the different target languages is created and maintained by
> different people/groups. See
> http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
> 
> If you check http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget you
> will see "Please note that the Python target is (compared to most other
> targets) rather young. I would consider it to be in *beta state*."
> 
> Since Terence creates and maintains the Java version, the decision is
> obvious; pick the Java target.
> 
> My guess is that most of your work will be in creating a PERL grammar for
> ANTLR and doing the AST rewrites. You will probably need to write some Java
> for the  predicates but that will be a lesser of your worries. Note: I did
> not find a PERL grammar at http://www.antlr.org/grammar/list
> 
> Best Wishes, Eric



From researcher0x00 at gmail.com  Fri Sep 16 06:17:07 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 16 Sep 2011 09:17:07 -0400
Subject: [antlr-interest] Need some advice which ANTLR versions should
 be used for my project (Target: Java or Python)
In-Reply-To: <1316177928.2058.0@pc-stefanm>
References: <CAN45N10Jmvigpeiv0o8BKzkSk-h_SSa3MEXPDQYteELff+sRig@mail.gmail.com>
	<1316177928.2058.0@pc-stefanm>
Message-ID: <CAN45N10wNNTycRDf6bDOaEZ_uREBs_bqRWyMGDf9S1s=D5Mbsw@mail.gmail.com>

>
>
> BTW. PEARL as input language wasn't a typo. PEARL is an acronym for
> Process and Experiment Automation Realtime Language and quite different
> from
> PERL.
>
> Thanks, looks interesting.
>
> Eric
>

From david.smith at cc.gatech.edu  Fri Sep 16 12:45:30 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Fri, 16 Sep 2011 15:45:30 -0400
Subject: [antlr-interest] handshake problems
Message-ID: <E1R4eLr-0005T3-GA@elasmtp-spurfowl.atl.sa.earthlink.net>

I think I might have graduated from Kindergarten to Big Boy 
questions.  Something annoying keeps happening within my Java 
code.  It runs fine, then a butterfly flaps its wings somewhere, and 
none of my code runs.  It stops in the middle of my (gr)Parser.java 
at this code:

         setTokenStream(new DebugTokenStream(input,proxy));
         try {
             proxy.handshake();
         }

It seems to disappear into compiled code in the handshake never to 
reappear.  I have no idea what happened to cause this to fail and 
therefore no idea how to fix it.  So I take a couple of Aspirin, take 
the night off and maybe in the morning it will work again.

Two questions:

1. Why are we shaking hands with something else when all I want to do 
is parse a file?

2. Do we know some settings somewhere that make this lightning strike 
less likely?

DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From jimi at temporal-wave.com  Fri Sep 16 15:23:11 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 16 Sep 2011 15:23:11 -0700
Subject: [antlr-interest] handshake problems
In-Reply-To: <E1R4eLr-0005T3-GA@elasmtp-spurfowl.atl.sa.earthlink.net>
References: <E1R4eLr-0005T3-GA@elasmtp-spurfowl.atl.sa.earthlink.net>
Message-ID: <DE60233A-80D6-4CD8-B9A2-BBE60C9072B1@temporal-wave.com>

Sounds like you are generating with the -debug option, which generates code that talks to the antlrworks debugger. It will 'hang' waiting for a tcp socket connection. 

Jim

On Sep 16, 2011, at 12:45, David Smith <david.smith at cc.gatech.edu> wrote:

> I think I might have graduated from Kindergarten to Big Boy 
> questions.  Something annoying keeps happening within my Java 
> code.  It runs fine, then a butterfly flaps its wings somewhere, and 
> none of my code runs.  It stops in the middle of my (gr)Parser.java 
> at this code:
> 
>         setTokenStream(new DebugTokenStream(input,proxy));
>         try {
>             proxy.handshake();
>         }
> 
> It seems to disappear into compiled code in the handshake never to 
> reappear.  I have no idea what happened to cause this to fail and 
> therefore no idea how to fix it.  So I take a couple of Aspirin, take 
> the night off and maybe in the morning it will work again.
> 
> Two questions:
> 
> 1. Why are we shaking hands with something else when all I want to do 
> is parse a file?
> 
> 2. Do we know some settings somewhere that make this lightning strike 
> less likely?
> 
> DMS
> 
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From douglasgodfrey at gmail.com  Sat Sep 17 03:21:12 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Sat, 17 Sep 2011 06:21:12 -0400
Subject: [antlr-interest] Antlr & AntlrWorks feature request
Message-ID: <CA99ECD8.37A8%douglasgodfrey@gmail.com>

How about an Antlr option to export the AST as an XML file at the end of a
successful parse and an AntlrWords option to get the AST from Antlr when
Generate is done.



From david.smith at cc.gatech.edu  Sat Sep 17 07:06:42 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Sat, 17 Sep 2011 10:06:42 -0400
Subject: [antlr-interest] Might have found a cure ...
Message-ID: <E1R4vXX-0002PG-Sg@elasmtp-dupuy.atl.sa.earthlink.net>

re my earlier question,  apparently, the way to resuscitate my 
application is to re-run AntlrWorks to recreate the lexer and parser 
source files.  Doesn't make much sense since I was doing 
clean-and-builds before.

DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From vivekjhaveri at hotmail.com  Sun Sep 18 19:04:11 2011
From: vivekjhaveri at hotmail.com (Vivek Jhaveri)
Date: Mon, 19 Sep 2011 07:34:11 +0530
Subject: [antlr-interest] Parsing CSS accurately and fast
In-Reply-To: <00db01cc766f$791aaae0$6b5000a0$@hotmail.com>
References: <00db01cc766f$791aaae0$6b5000a0$@hotmail.com>
Message-ID: <BAY145-ds20E8E57610D96EB1184E6FC30B0@phx.gbl>

We've been trying to build a high-performance yet accurate CSS parser using
Antlr for the last few months.

 

To date, our efforts have yielded accuracy, but not performance.

 

The main problem with CSS is what's called the CSS parsing conventions
<http://www.w3.org/TR/CSS21/syndata.html#parsing-errors> , or how to
correctly handle parse errors.

There is a core syntax
<http://www.w3.org/TR/CSS21/syndata.html#tokenization>  that all versions of
CSS use. Conceptually, to parse say CSS2.1, we first parse the file
according to the core syntax, and then flesh out the parse tree with the
CSS2.1 grammar. The core syntax causes the right things to happen when
invalid tokens are seen.

 

We implemented it this way - see this stackoverflow question:
http://stackoverflow.com/questions/5437835/parsing-css-2-1-with-the-correct-
css-parsing-conventions-in-antlr.

 

However, this double parsing creates a new instance of the CSS2.1 parser for
each successfully parsed piece of the core grammar. This results in
extremely slow parse times.

 

We also tried rewriting the input stream and adding custom terminators
around each piece parsed by the CSS core grammar, and feeding the result in
its entirety to the CSS2.1 parser (augmented with rules for the custom
terminators), but this turned out to be even slower.

 

Is there a way to do better than this in Antlr? (

 

At this point, we're considering writing a hand-coded recursive descent
parser, hopefully there is a better way  with Antlr J

 

Regards,

 

Vivek

 

 


From bkiers at gmail.com  Mon Sep 19 00:11:40 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 19 Sep 2011 09:11:40 +0200
Subject: [antlr-interest] Parsing CSS accurately and fast
In-Reply-To: <BAY145-ds20E8E57610D96EB1184E6FC30B0@phx.gbl>
References: <00db01cc766f$791aaae0$6b5000a0$@hotmail.com>
	<BAY145-ds20E8E57610D96EB1184E6FC30B0@phx.gbl>
Message-ID: <CAOrgODbz3yLJkztc5mXjD-ZgE6AeM9OvWUjRK+12UOqjo+PH3Q@mail.gmail.com>

Hi Vivek,


On Mon, Sep 19, 2011 at 4:04 AM, Vivek Jhaveri <vivekjhaveri at hotmail.com>wrote:

> ...
>
> To date, our efforts have yielded accuracy, but not performance.
>

Hard to comment without seeing the grammar(s).
Do you by any chance have `backtrack=true;` in the options-section of your
parser? If so, you could try to add `memoize=true;` to it: that might
increase the parse-time (most probably will). However, it would be better to
remove `backtrack=true;` and only add predicates to rules where needed.


...
>
> However, this double parsing creates a new instance of the CSS2.1 parser
> for
> each successfully parsed piece of the core grammar. This results in
> extremely slow parse times.
>
>
I would imagine things would go faster if you just parse once (core CSS),
which would result in a proper AST, and then manipulate the AST according
some other spec of CSS.

Regards,

Bart.

From mariusmeier at hispeed.ch  Wed Sep 21 12:38:45 2011
From: mariusmeier at hispeed.ch (Marius Meier)
Date: Wed, 21 Sep 2011 21:38:45 +0200
Subject: [antlr-interest] Implement a for loop in the tree grammar
Message-ID: <000001cc7896$154913c0$3fdb3b40$@ch>

Hello everybody

 

I am trying to implement a for-loop in my Math parser but it doesn't really
work.

I have some problem with seeking the input to the right destination in the
tree which

was generated by the parser. Following tree grammar describes the for-loop:

 

 

enterForLoop

                @init { int mark = 0; }

                :               ^('for' assignStat c=condExpr incStat[true]
block) {

 
input.Seek($c.start.TokenStartIndex);

                                                object condResult =
condExpr();

                                                

                                                /*ForLoopSymbol symbol = new
ForLoopSymbol("forLoop", _CurrentScope);

 
_CurrentScope.DefineSymbol(symbol);

                                                _CurrentScope = symbol;

                                                incStat(true); // Doesn't
work this way

                                                input.Release(mark);*/

                                }

                ;

                                

exitForLoop

                :               /*'for' {

                                                _CurrentScope =
_CurrentScope.EnclosingScope;

                                }*/

                ;

 

                

condExpr returns [bool value]

                :               ^('<' ID INT) { 

                                                Symbol symbol =
globalTable.ResolveSymbol($ID.text);

                                                

                                                if(symbol != null) {

                                                                if(symbol is
VariableSymbol) {

 
if(((VariableSymbol)symbol).SymType.Equals("int")) {

 
$value=(int)((VariableSymbol)symbol).Value < int.Parse($INT.text); 

 
} else if(((VariableSymbol)symbol).SymType.Equals("float")) {

 
$value=(float)((VariableSymbol)symbol).Value < int.Parse($INT.text); 

 
}

                                                                }

                                                } else {

 
Console.WriteLine("Undefined variable: " + $ID.text + " (" + $ID.line + ":"
+ $ID.pos + ")");

                                        } 

                                }

                |              ^('>' ID INT) {

                                                Symbol symbol =
globalTable.ResolveSymbol($ID.text);

                                                

                                                if(symbol != null) {

                                                                if(symbol is
VariableSymbol) {

 
if(((VariableSymbol)symbol).SymType.Equals("int")) {

 
$value=(int)((VariableSymbol)symbol).Value > int.Parse($INT.text); 

 
} else if(((VariableSymbol)symbol).SymType.Equals("float")) {

 
$value=(float)((VariableSymbol)symbol).Value > int.Parse($INT.text); 

 
} 

                                                                }

                                                } else {

 
Console.WriteLine("Undefined variable: " + $ID.text + " (" + $ID.line + ":"
+ $ID.pos + ")");

                                        } 

                                }

                ;

 

I tried to jump to the conditional expression of the for loop. But I don't
get there in

the tree node stream.

Can anybody help me to get it right? I tried a few times with different
options but

I don't get anywhere. I'm just beginning to learn ANTLR.

 

Greetings


From gd.antlr at gmail.com  Wed Sep 21 21:41:33 2011
From: gd.antlr at gmail.com (Graham Mer)
Date: Wed, 21 Sep 2011 21:41:33 -0700
Subject: [antlr-interest] Unexpected text
Message-ID: <CAGwxo_868_9tyzVC4HhyFxzecVVOcqgbiv8yqFs=gF8+1Zwcbg@mail.gmail.com>

"Hi everybody!"
  - Dr. Nick.

I have a larger grammar, a tiny portion of which is attached below.
Everything works as expected, except for one thing. In the tree
grammar, note the following rule:

decl: ID typeSpec { System.out.println( "decl id=" + $ID + ";type=" +
$typeSpec.text );}

Given the following input:
  Dim foo as String
  Dim bar as Int

I expect it to print:
  decl id=foo;type=String
  decl id=bar;type=Int

But instead I get:
  decl id=foo;type=as String
  decl id=bar;type=as Int

The string trees all look as expected, like "(Dim foo String) (Dim bar
Int)", but I get the extra "as" in the type node, even though I
exclude the "AS" node when building the tree in the following rule:

asType: AS! type;


I get the same results when the parser is generated by ANTLR 3.3 and
3.4. What am I doing wrong?


Here are the grammars:

grammar test;

options{ output=AST; }

start	:	varDef+ EOF;

varDef	:	DIM^ ID asType;

asType	:	AS! type;

type	:	STRING_T | INT_T;


AS	:	('A'|'a')('S'|'s');

DIM	:	('D'|'d')('I'|'i')('M'|'m');

STRING_T:	('S'|'s')('T'|'t')('R'|'r')('I'|'i')('N'|'n')('G'|'g');

INT_T	:	('I'|'i')('N'|'n')('T'|'t');

ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;



tree grammar testTree;

options
{
	tokenVocab=test;
	ASTLabelType=CommonTree;
	output=AST;
}

start	:	statement+
	;

statement
	:	^(DIM decl)
	;
	
decl	:	ID typeSpec { System.out.println( "decl id=" + $ID + ";type=" +
$typeSpec.text );}
	;
	
typeSpec:	STRING_T | INT_T
	;

From yifan.cby at taobao.com  Wed Sep 21 23:08:38 2011
From: yifan.cby at taobao.com (=?gb2312?B?6fO3sg==?=)
Date: Thu, 22 Sep 2011 14:08:38 +0800
Subject: [antlr-interest] How to do iteration in Tree Grammar
Message-ID: <5BD27FEEEE7BA54F96AE09AABD09A54B0350118CAB@CNHZ-EXCMS-04.ali.com>

Hi, I defined a tree grammar as below:

foo: ^(VIRTUAL_NODE bar*) {
  echo($bar.value);
};

bar returns [boolean value] : //? Omitted

The generated source of rule foo is like below:

public final void foo() throws XX
{
 boolean bar40 = false;
  do{
    //omitted
bar40=bar();
//omitted
  }while (true)
  echo(bar40)
}

Actually in the rule ?foo?, I want to do some actions against every ?bar?, not the final bar?s value, code in imagination:

public final void foo() throws XX
{
 boolean bar40 = false;
  do{
    //omitted
bar40=bar();
if (bar40){
echo(bar40);
return;
}
//omitted
  }while (true)
  echo(bar40)
}
How to change the rule ?foo? to archive my goal?

Thanks for your help!

________________________________
This email (including any attachments) is confidential and may be legally privileged. If you received this email in error, please delete it immediately and do not copy it or use it for any purpose or disclose its contents to any other person. Thank you.

???(??????)??????????????????????????????????????????????????????????????????????

From bkiers at gmail.com  Thu Sep 22 00:19:53 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 22 Sep 2011 09:19:53 +0200
Subject: [antlr-interest] Unexpected text
In-Reply-To: <CAGwxo_868_9tyzVC4HhyFxzecVVOcqgbiv8yqFs=gF8+1Zwcbg@mail.gmail.com>
References: <CAGwxo_868_9tyzVC4HhyFxzecVVOcqgbiv8yqFs=gF8+1Zwcbg@mail.gmail.com>
Message-ID: <CAOrgODYhCzigWp4co2o+7dq7n=fw61V7y7YjA6W-quYa2i0ETA@mail.gmail.com>

Hi Graham,

Inside your parser-grammar, $typeSpec is the object that is returned by the
parser rule (RuleReturnScope). It includes, among others, the start- and
end-token and the tree of the rule. Using `.text`, which is short for
`getText()` will get the source of your input from `start` to `end` for that
rule. If you'd print `$typeSpec.tree` instead, you'd see the AST without
the "as" text.

Regards,

Bart.


On Thu, Sep 22, 2011 at 6:41 AM, Graham Mer <gd.antlr at gmail.com> wrote:

> "Hi everybody!"
>  - Dr. Nick.
>
> I have a larger grammar, a tiny portion of which is attached below.
> Everything works as expected, except for one thing. In the tree
> grammar, note the following rule:
>
> decl: ID typeSpec { System.out.println( "decl id=" + $ID + ";type=" +
> $typeSpec.text );}
>
> Given the following input:
>  Dim foo as String
>  Dim bar as Int
>
> I expect it to print:
>  decl id=foo;type=String
>  decl id=bar;type=Int
>
> But instead I get:
>  decl id=foo;type=as String
>  decl id=bar;type=as Int
>
> The string trees all look as expected, like "(Dim foo String) (Dim bar
> Int)", but I get the extra "as" in the type node, even though I
> exclude the "AS" node when building the tree in the following rule:
>
> asType: AS! type;
>
>
> I get the same results when the parser is generated by ANTLR 3.3 and
> 3.4. What am I doing wrong?
>
>
> Here are the grammars:
>
> grammar test;
>
> options{ output=AST; }
>
> start   :       varDef+ EOF;
>
> varDef  :       DIM^ ID asType;
>
> asType  :       AS! type;
>
> type    :       STRING_T | INT_T;
>
>
> AS      :       ('A'|'a')('S'|'s');
>
> DIM     :       ('D'|'d')('I'|'i')('M'|'m');
>
> STRING_T:       ('S'|'s')('T'|'t')('R'|'r')('I'|'i')('N'|'n')('G'|'g');
>
> INT_T   :       ('I'|'i')('N'|'n')('T'|'t');
>
> ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;
>
> WS  :   ( ' '
>        | '\t'
>        | '\r'
>        | '\n'
>        ) {$channel=HIDDEN;}
>    ;
>
>
>
> tree grammar testTree;
>
> options
> {
>        tokenVocab=test;
>        ASTLabelType=CommonTree;
>        output=AST;
> }
>
> start   :       statement+
>        ;
>
> statement
>        :       ^(DIM decl)
>        ;
>
> decl    :       ID typeSpec { System.out.println( "decl id=" + $ID +
> ";type=" +
> $typeSpec.text );}
>        ;
>
> typeSpec:       STRING_T | INT_T
>        ;
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Thu Sep 22 00:22:43 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 22 Sep 2011 09:22:43 +0200
Subject: [antlr-interest] How to do iteration in Tree Grammar
In-Reply-To: <5BD27FEEEE7BA54F96AE09AABD09A54B0350118CAB@CNHZ-EXCMS-04.ali.com>
References: <5BD27FEEEE7BA54F96AE09AABD09A54B0350118CAB@CNHZ-EXCMS-04.ali.com>
Message-ID: <CAOrgODY+nAfyAuAE-TmS_Ydj+bhDmRKuyE3i8c-aQaN6FH19hQ@mail.gmail.com>

Hi Yifan,

How about something like this:

    foo: ^(VIRTUAL_NODE (bar {if($bar.value) return;})* );

?

Regards,

Bart.


2011/9/22 ?? <yifan.cby at taobao.com>

> Hi, I defined a tree grammar as below:
>
> foo: ^(VIRTUAL_NODE bar*) {
>  echo($bar.value);
> };
>
> bar returns [boolean value] : //? Omitted
>
> The generated source of rule foo is like below:
>
> public final void foo() throws XX
> {
>  boolean bar40 = false;
>  do{
>    //omitted
> bar40=bar();
> //omitted
>  }while (true)
>  echo(bar40)
> }
>
> Actually in the rule ?foo?, I want to do some actions against every ?bar?,
> not the final bar?s value, code in imagination:
>
> public final void foo() throws XX
> {
>  boolean bar40 = false;
>  do{
>    //omitted
> bar40=bar();
> if (bar40){
> echo(bar40);
> return;
> }
> //omitted
>  }while (true)
>  echo(bar40)
> }
> How to change the rule ?foo? to archive my goal?
>
> Thanks for your help!
>
> ________________________________
> This email (including any attachments) is confidential and may be legally
> privileged. If you received this email in error, please delete it
> immediately and do not copy it or use it for any purpose or disclose its
> contents to any other person. Thank you.
>
>
> ???(??????)??????????????????????????????????????????????????????????????????????
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From yifan.cby at taobao.com  Thu Sep 22 07:25:53 2011
From: yifan.cby at taobao.com (=?gb2312?B?6fO3sg==?=)
Date: Thu, 22 Sep 2011 22:25:53 +0800
Subject: [antlr-interest] How to do iteration in Tree Grammar
In-Reply-To: <CAOrgODY+nAfyAuAE-TmS_Ydj+bhDmRKuyE3i8c-aQaN6FH19hQ@mail.gmail.com>
References: <5BD27FEEEE7BA54F96AE09AABD09A54B0350118CAB@CNHZ-EXCMS-04.ali.com>,
	<CAOrgODY+nAfyAuAE-TmS_Ydj+bhDmRKuyE3i8c-aQaN6FH19hQ@mail.gmail.com>
Message-ID: <5BD27FEEEE7BA54F96AE09AABD09A54B034FEA8406@CNHZ-EXCMS-04.ali.com>

Yes! it solved my problem. Bart, thank your help!
________________________________________
From: Bart Kiers [bkiers at gmail.com]
Sent: 22 September 2011 15:22
To: ??
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] How to do iteration in Tree Grammar

Hi Yifan,

How about something like this:

    foo: ^(VIRTUAL_NODE (bar {if($bar.value) return;})* );

?

Regards,

Bart.


2011/9/22 ?? <yifan.cby at taobao.com<mailto:yifan.cby at taobao.com>>
Hi, I defined a tree grammar as below:

foo: ^(VIRTUAL_NODE bar*) {
 echo($bar.value);
};

bar returns [boolean value] : //? Omitted

The generated source of rule foo is like below:

public final void foo() throws XX
{
 boolean bar40 = false;
 do{
   //omitted
bar40=bar();
//omitted
 }while (true)
 echo(bar40)
}

Actually in the rule ?foo?, I want to do some actions against every ?bar?, not the final bar?s value, code in imagination:

public final void foo() throws XX
{
 boolean bar40 = false;
 do{
   //omitted
bar40=bar();
if (bar40){
echo(bar40);
return;
}
//omitted
 }while (true)
 echo(bar40)
}
How to change the rule ?foo? to archive my goal?

Thanks for your help!

________________________________
This email (including any attachments) is confidential and may be legally privileged. If you received this email in error, please delete it immediately and do not copy it or use it for any purpose or disclose its contents to any other person. Thank you.

???(??????)??????????????????????????????????????????????????????????????????????

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From yifan.cby at taobao.com  Thu Sep 22 07:47:31 2011
From: yifan.cby at taobao.com (=?utf-8?B?6L225Yeh?=)
Date: Thu, 22 Sep 2011 22:47:31 +0800
Subject: [antlr-interest] How to stop automatic evaluation in Tree Grammar?
Message-ID: <5BD27FEEEE7BA54F96AE09AABD09A54B034FEA8407@CNHZ-EXCMS-04.ali.com>

Hi, gurus, I defined a tree grammar which contains if statements, it looks like below:

ifs: ^(IF test elseif_part else_part) ;

In normal, this rule will generate source code as below:

test(); //it will return a boolean value
....
elseif_part();
....
else_part();

As you see, if the rule 'test' is ok in some conditions, there's no need to evaluate rule 'elseif_part' and 'else_part'.
What I need is conditional tree node expansion. Ideally generated code in my mind:

if (test())
{
 //skip elseif_part and else_part
}else{
  elseif_part();
  if (some condition was satisfied){
    //skip else_part;
  }else{
    else_part();
  }
}

Hope for you help, thanks!


This email (including any attachments) is confidential and may be legally privileged. If you received this email in error, please delete it immediately and do not copy it or use it for any purpose or disclose its contents to any other person. Thank you.

???(??????)??????????????????????????????????????????????????????????????????????

From researcher0x00 at gmail.com  Thu Sep 22 09:31:04 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 22 Sep 2011 12:31:04 -0400
Subject: [antlr-interest] Antlr v3.3/3.4 documentation hurdles
In-Reply-To: <1314218192.90259.YahooMailNeo@web160703.mail.bf1.yahoo.com>
References: <1314218192.90259.YahooMailNeo@web160703.mail.bf1.yahoo.com>
Message-ID: <CAN45N10TQBL4-Sa-U0u02awJd6i6acsOEbp1M=1ohxSR1M739A@mail.gmail.com>

On Wed, Aug 24, 2011 at 4:36 PM, Ramanand Mandayam <
ramanand_mandayam at yahoo.com> wrote:

>
> error(10):  internal error: GTgrammar.g : java.lang.ClassCastException:
> org.antlr.runtime.tree.CommonTree cannot be cast to
> org.antlr.tool.GrammarAST



I just stumbled upon a simple way to create this error.


Grammar Demo;
Name : 'a' |'b' | 'c';

The problem is that Name is a lexer rule because it starts with a capitol
letter. There are no parser rules which start with a lower case letter. Just
change 'Name' to 'name".

Eric

From gsmiro at gmail.com  Thu Sep 22 12:46:59 2011
From: gsmiro at gmail.com (Gabriel Miro)
Date: Thu, 22 Sep 2011 16:46:59 -0300
Subject: [antlr-interest] NullPointer exception and inline template
Message-ID: <CAJ0A1K_S9LnDkW-npzNYMxicMb0uRJnTiSsyzn0k96YNo4joxw@mail.gmail.com>

Folks,

I'm trying to write a rule to rewrite '<>' to '!=' in some expression
strings, but every time I declare an inline template it gives me a
NullPointerException and I'm unable to compile the parser code. Any help is
appreciated.

Here's the grammar:

grammar test;
options {
    output=template;
    rewrite=true;
}
@header{
    package com.adp.acs.rules;
}

rule    :    expr+;
expr    :    (BOOLEAN_OP)? LPAREN WS? (calc|comp|in) WS? RPAREN WS?;
calc    :    lside WS? ARITH_OP WS? FIELD;
comp    :    lside WS? COMP_OP WS? STRING;
in    :    FIELD 'IN' WS? LPAREN (CHAR | CHAR ',') RPAREN;
lside    :    FIELD | sum;
sum    :    LPAREN WS? FIELD WS? ARITH_OP WS? FIELD RPAREN;
RPAREN    :    ')';
LPAREN    :    '(';
ARITH_OP:    '+' | '-' | '*';
COMP_OP    :     '<>' -> template() "!="
        | '<='
        | '<'
        | '>='
        | '>'
        ;
BOOLEAN_OP
    :     'AND' | 'OR';

FIELD    options{greedy=false;}:    'A'..'Z'+;

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;

CHAR
    :  '\'' ( ESC_SEQ | ~('\\'|'\'') ) '\''
    ;

STRING
    :  '\'' ( ESC_SEQ | ~('\\'|'\'') )* '\''
    ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

From researcher0x00 at gmail.com  Thu Sep 22 16:34:11 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 22 Sep 2011 19:34:11 -0400
Subject: [antlr-interest] NullPointer exception and inline template
In-Reply-To: <CAJ0A1K_S9LnDkW-npzNYMxicMb0uRJnTiSsyzn0k96YNo4joxw@mail.gmail.com>
References: <CAJ0A1K_S9LnDkW-npzNYMxicMb0uRJnTiSsyzn0k96YNo4joxw@mail.gmail.com>
Message-ID: <CAN45N11sbL5xkMiSM+Pd_34iBWryxdGbJQB8bTshc-6CasT72g@mail.gmail.com>

On Thu, Sep 22, 2011 at 3:46 PM, Gabriel Miro <gsmiro at gmail.com> wrote:

> COMP_OP    :     '<>' -> template() "!="
>        | '<='
>        | '<'
>        | '>='
>        | '>'
>        ;
>

 String templates are not my strong suit and I could not verify this in the
book on on the web site, so there is a chance this might be wrong.

COMP_OP is a lexer rule and lexer rules don't support string templates.
Think about what a lexer and parser do and it should be more apparent.

Eric

From researcher0x00 at gmail.com  Thu Sep 22 16:44:37 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 22 Sep 2011 19:44:37 -0400
Subject: [antlr-interest] Fwd:  NullPointer exception and inline template
In-Reply-To: <CAN45N10iUcLQYgKo7qT6ZvCpQEwx=5m=pMvpadny4pYDsRj3AA@mail.gmail.com>
References: <CAJ0A1K_S9LnDkW-npzNYMxicMb0uRJnTiSsyzn0k96YNo4joxw@mail.gmail.com>
	<CAN45N10iUcLQYgKo7qT6ZvCpQEwx=5m=pMvpadny4pYDsRj3AA@mail.gmail.com>
Message-ID: <CAN45N11UMWso9wA3xS_egr24ULvmqcMhJb_wM+U6EogS2Q9z7Q@mail.gmail.com>

---------- Forwarded message ----------
From: The Researcher <researcher0x00 at gmail.com>
Date: Thu, Sep 22, 2011 at 4:22 PM
Subject: Re: [antlr-interest] NullPointer exception and inline template
To: Gabriel Miro <gsmiro at gmail.com>




On Thu, Sep 22, 2011 at 3:46 PM, Gabriel Miro <gsmiro at gmail.com> wrote:

>  It gives me a NullPointerException and I'm unable to compile the parser
> code.
>

Try using with the -Xsavelexer option to see more of the error.

 student at antlr:~/projects/antlr/mail/Gabriel$ java org.antlr.Tool
-Xsavelexer test.g

error(100): test__.g:20:26: syntax error: antlr: NoViableAltException(
75@[921:1: rewrite_alternative options {k=1; } : ({...}? => rewrite_template
| {...}? => ( rewrite_element )+ -> {!stream_rewrite_element.hasNext()}? ^(
ALT[LT(1),"ALT"] EPSILON["epsilon"] EOA["<end-of-alt>"] ) -> ^(
ALT[LT(1),"ALT"] ( rewrite_element )+ EOA["<end-of-alt>"] ) | -> ^(
ALT[LT(1),"ALT"] EPSILON["epsilon"] EOA["<end-of-alt>"] ) | {...}? ETC );])
error(100): test__.g:20:26: syntax error: antlr: NoViableAltException(75@[])
error(100): test.g:0:1: syntax error: assign.types:
MismatchedTreeNodeException(0!=18)
error(10):  internal error: test.g : java.lang.NullPointerException
org.antlr.grammar.v3.DefineGrammarItemsWalker.countAltsForRule(DefineGrammarItemsWalker.java:153)
org.antlr.grammar.v3.DefineGrammarItemsWalker.rule(DefineGrammarItemsWalker.java:1546)
org.antlr.grammar.v3.DefineGrammarItemsWalker.rules(DefineGrammarItemsWalker.java:1190)
org.antlr.grammar.v3.DefineGrammarItemsWalker.grammarSpec(DefineGrammarItemsWalker.java:623)
org.antlr.grammar.v3.DefineGrammarItemsWalker.grammar_(DefineGrammarItemsWalker.java:255)
org.antlr.tool.Grammar.defineGrammarSymbols(Grammar.java:748)
org.antlr.tool.CompositeGrammar.defineGrammarSymbols(CompositeGrammar.java:369)
org.antlr.Tool.process(Tool.java:521)
org.antlr.Tool.main(Tool.java:93)

Hope that helps.

Eric

From gary at sumwise.com  Thu Sep 22 16:56:41 2011
From: gary at sumwise.com (Gary Miller)
Date: Fri, 23 Sep 2011 09:56:41 +1000
Subject: [antlr-interest] How to stop automatic evaluation in Tree
	Grammar?
In-Reply-To: <5BD27FEEEE7BA54F96AE09AABD09A54B034FEA8407@CNHZ-EXCMS-04.ali.com>
References: <5BD27FEEEE7BA54F96AE09AABD09A54B034FEA8407@CNHZ-EXCMS-04.ali.com>
Message-ID: <CAFCNb3hO8mZFZsFu=mDHCqJAufEwnDWgadzRoA2bLmJtmHoarA@mail.gmail.com>

Hey ??,

You might like to match the elseif_part and else_part with an any.
Then continue the walk on the correct branch.

   ifs: ^(IF test a=. b=.) ;

Have a look at a previous post that does something similar.
  http://www.antlr.org/pipermail/antlr-interest/2011-April/041307.html

Regards
Gary

On Fri, Sep 23, 2011 at 12:47 AM, ?? <yifan.cby at taobao.com> wrote:
> Hi, gurus, I defined a tree grammar which contains if statements, it looks like below:
>
> ifs: ^(IF test elseif_part else_part) ;
>
> In normal, this rule will generate source code as below:
>
> test(); //it will return a boolean value
> ....
> elseif_part();
> ....
> else_part();
>
> As you see, if the rule 'test' is ok in some conditions, there's no need to evaluate rule 'elseif_part' and 'else_part'.
> What I need is conditional tree node expansion. Ideally generated code in my mind:
>
> if (test())
> {
>  //skip elseif_part and else_part
> }else{
>  elseif_part();
>  if (some condition was satisfied){
>    //skip else_part;
>  }else{
>    else_part();
>  }
> }
>
> Hope for you help, thanks!
>
>
> This email (including any attachments) is confidential and may be legally privileged. If you received this email in error, please delete it immediately and do not copy it or use it for any purpose or disclose its contents to any other person. Thank you.
>
> ???(??????)??????????????????????????????????????????????????????????????????????
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mmatinlassi at icinetic.com  Fri Sep 23 02:33:50 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Fri, 23 Sep 2011 11:33:50 +0200
Subject: [antlr-interest] Custom object tree from tree parser?
Message-ID: <000001cc79d3$e70470b0$b50d5210$@icinetic.com>

Hello,

I want to build custom object trees from text. As a simplified example,
parser input is

Car Seat;
Car Audi;
Customer John;

Parser output shall be an object tree where e.g. Car object is an
instantiation of a class below (Respectively, Customer class would be
something similar):

public class Car
{
	private string  brand;
	public Car(string _brand)
	{
		this.brand = _brand;
	}
	public string Brand
	{
		 get { return brand; }
	}
}

What is the best way to do this? Custom AST node and custom TreeAdaptor?
Tree parser with actions embedded in rules? What about the problem that not
all the nodes are similar? Could you please give me some hint to the right
direction?

Kind regards,

Mari



From gsmiro at gmail.com  Fri Sep 23 04:31:57 2011
From: gsmiro at gmail.com (Gabriel Miro)
Date: Fri, 23 Sep 2011 08:31:57 -0300
Subject: [antlr-interest] NullPointer exception and inline template
In-Reply-To: <CAN45N11sbL5xkMiSM+Pd_34iBWryxdGbJQB8bTshc-6CasT72g@mail.gmail.com>
References: <CAJ0A1K_S9LnDkW-npzNYMxicMb0uRJnTiSsyzn0k96YNo4joxw@mail.gmail.com>
	<CAN45N11sbL5xkMiSM+Pd_34iBWryxdGbJQB8bTshc-6CasT72g@mail.gmail.com>
Message-ID: <CAJ0A1K8aGYfeTuZXiNFzyhJrPgKyQ6TXiBMZBXRxjgYfxF07nw@mail.gmail.com>

Eric,

thinking about it yesterday I came to the same conclusion. Multi-tasking has
this strange effect on me and I didn't realize that I was trying to use
templates in a lexer rule until I was in bed.

Thanks anyway for the input and patience.

Regards,
Gabriel Mir?

On Thu, Sep 22, 2011 at 8:34 PM, The Researcher <researcher0x00 at gmail.com>wrote:

>
>
> On Thu, Sep 22, 2011 at 3:46 PM, Gabriel Miro <gsmiro at gmail.com> wrote:
>
>> COMP_OP    :     '<>' -> template() "!="
>>        | '<='
>>        | '<'
>>        | '>='
>>        | '>'
>>        ;
>>
>
>  String templates are not my strong suit and I could not verify this in the
> book on on the web site, so there is a chance this might be wrong.
>
> COMP_OP is a lexer rule and lexer rules don't support string templates.
> Think about what a lexer and parser do and it should be more apparent.
>
> Eric
>
>
>
>

From researcher0x00 at gmail.com  Fri Sep 23 05:19:16 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 23 Sep 2011 08:19:16 -0400
Subject: [antlr-interest] ANTLR 3.4 version Jul 19,
	2011 Incorrectly transforms test grammar.
Message-ID: <CAN45N11wrJ0S7EcHUx3TktVS8WWHyhSM8pNU8eRnjN50MDxRWw@mail.gmail.com>

The following demo grammar causes ANTLR 3.4 to generate an invalid parser.
The conditional for the if statement is empty.

grammar Demo002;
number  : '0'..'9';

java -classpath /usr/local/lib/antlr-3.4-complete.jar  org.antlr.Tool
Demo002

In Demo002Parser.java

            // Demo002.g:3:9: ( '0' .. '9' )
            // Demo002.g:
            {
            if (  ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new
MismatchedSetException(null,input);
                throw mse;
            }

            }

java -classpath /usr/local/lib/antlr-3.3-complete.jar  org.antlr.Tool
Demo002.g

            // Demo002.g:3:9: ( '0' .. '9' )
            // Demo002.g:3:11: '0' .. '9'
            {
            matchRange('0','9');
            }

From researcher0x00 at gmail.com  Fri Sep 23 05:47:29 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 23 Sep 2011 08:47:29 -0400
Subject: [antlr-interest] Fwd: ANTLR 3.4 version Jul 19,
	2011 Incorrectly transforms test grammar.
In-Reply-To: <CAN45N11wrJ0S7EcHUx3TktVS8WWHyhSM8pNU8eRnjN50MDxRWw@mail.gmail.com>
References: <CAN45N11wrJ0S7EcHUx3TktVS8WWHyhSM8pNU8eRnjN50MDxRWw@mail.gmail.com>
Message-ID: <CAN45N11+c4PidDSkvoT-_qFpyjZQpnH-1FTYkqUwVKEtN5f2ZQ@mail.gmail.com>

Upon further investigation, matchRange('0','9');  will cause a compile error
because ranges are only allowed in lexer rules not parser rules.

Basically, ANTLR didn't give a error message when it should.

---------- Forwarded message ----------
From: The Researcher <researcher0x00 at gmail.com>
Date: Fri, Sep 23, 2011 at 8:19 AM
Subject: ANTLR 3.4 version Jul 19, 2011 Incorrectly transforms test grammar.
To: antlr-interest at antlr.org


The following demo grammar causes ANTLR 3.4 to generate an invalid parser.
The conditional for the if statement is empty.

grammar Demo002;
number  : '0'..'9';

java -classpath /usr/local/lib/antlr-3.4-complete.jar  org.antlr.Tool
Demo002

In Demo002Parser.java

            // Demo002.g:3:9: ( '0' .. '9' )
            // Demo002.g:
            {
            if (  ) {
                input.consume();
                state.errorRecovery=false;
            }
            else {
                MismatchedSetException mse = new
MismatchedSetException(null,input);
                throw mse;
            }

            }

java -classpath /usr/local/lib/antlr-3.3-complete.jar  org.antlr.Tool
Demo002.g

            // Demo002.g:3:9: ( '0' .. '9' )
            // Demo002.g:3:11: '0' .. '9'
            {
            matchRange('0','9');
            }

From kleibi at gmx.net  Fri Sep 23 09:57:14 2011
From: kleibi at gmx.net (andreas kleiber)
Date: Fri, 23 Sep 2011 18:57:14 +0200
Subject: [antlr-interest] Binary support
In-Reply-To: <CAN45N12tp5dSzC4SFmeSEbNfPPrXxt-k7kTKA9TpeGf7WZKDXg@mail.gmail.com>
References: <20110915162708.279250@gmx.net>
	<CAEVkYxex1hiTH4tzoi9_gcDzpoNk_BO3bz+BQP_7gn=i6rNgNQ@mail.gmail.com>
	<CAN45N12tp5dSzC4SFmeSEbNfPPrXxt-k7kTKA9TpeGf7WZKDXg@mail.gmail.com>
Message-ID: <20110923165714.166250@gmx.net>

As there are no further posts right now, I would like to take the
opportunity for a personal conclusion (I admit: It got a longer one ;-).

ASN.1

I took a look at ASN.1 -- This look was really quick, so I might be
wrong on that. ASN.1 experts are welcome to correct me in this case.
I got the feeling that in ASN.1 syntax and encoding are strongly
coupled. I.e. ASN.1 is human readable notation, but you have to take the
encodings provided. This is quite fine for protocols were you're
normally only interested that the encoding is good (compact etc.), but
not how it works in detail, because this is done automatically by
generated code.

That said ASN.1 is not feasible, in my eyes, if you have an already
defined file format and want to generate a parser out of such a ASN.1
grammar.


ANTLR and binary formats

I still think that it would be great if ANTLR would be enhanced to be
able to also parse binary formats. In my eyes it's the right place and would make ANTLR even more unique.
Making ANTLR fit for binary formats would involve following changes:
 1. Enhance capabilities of input handling
 2. Enhance ANTLR grammar
 3. Enhance code generator of ANTLR

For 1.: In the end effect ANTLR does already binary file format handling. In that moment ANTLR reads files in one of the four Unicode encodings (UTF-8, UTF-16 LE, UTF-16 BE, UTF-32) including Byte Order Mark and surrogates support, it lexes a binary format.
Because I don't know ANTLR in detail, I guess here the Sun/Oracle code is used which does this. So ANTLR does this not explicitly, but by usage of the official class libraries. I think here would be some work to be done, but if the Java class libraries are not flexible enough, I'm quite sure that ICU4J will be.

2. and 3. are quite clear: The current ANTLR grammar has currently no support for binary formats, so an extension of some sort would be needed and of course the code generator of ANTLR must also support this.


The last question to discuss is: Is it possible to describe binary formats in a grammar?

I say: Yes, for most of them, this will work. For those it will not work fully, a grammar would at least ease life (you would end up doing the rest using actions etc.). 

In a former post Ron Burk said:

"Binary file formats also often just aren't directly representable by context free grammars. For example, a header may contain offsets of different objects, and the sizes of those objects may have to be inferred from the difference in offsets. Grammars, despite looking seductively similar because of having recursively nested constructs in common, aren't a great match for this domain.

One could imagine useful domain-specific languages for binary file formats, but they might not look quite like grammar tools, and a single language might not be sufficient for all tasks."

I agree and disagree. No matter if they are context free or not: They can be parsed. Binary formats have the benefit, that they were designed to be _machine readable_, and not, like programming languages, _human readable_. In general this makes them easier parsable.

Instead of designing domain specific languages, I would prefer an integration into ANTLR, because there are also file formats out in the wild which combine binary data with text data -- and both needs to be parsed. Having two separate programs is not elegant -- you would end up with a high effort to put binary and text parsing results in one abstract syntax tree.

In my opinion there are typical design patterns often used in binary formats. Offsets as mentioned by Ron in the former post are an example, as well as what I wrote in my first post, section "Interpretation of size":

---------------------------------------------
| header | size of next block | block | ... |
---------------------------------------------

Such patterns could be represented in an expressive syntax.

I think the big issue, which makes binary files different from text files, is their self-referential nature: To be able to read a binary file you have to partially interpret it and use this information to manage the read process. You mostly can't decouple parsing and interpretation. But this is in my opinion no reason to not add such a functionality to ANTLR.

Andi
-- 
Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de

From lgcraymer at yahoo.com  Fri Sep 23 10:54:16 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Fri, 23 Sep 2011 10:54:16 -0700 (PDT)
Subject: [antlr-interest] Binary support
In-Reply-To: <20110923165714.166250@gmx.net>
References: <20110915162708.279250@gmx.net>
	<CAEVkYxex1hiTH4tzoi9_gcDzpoNk_BO3bz+BQP_7gn=i6rNgNQ@mail.gmail.com>
	<CAN45N12tp5dSzC4SFmeSEbNfPPrXxt-k7kTKA9TpeGf7WZKDXg@mail.gmail.com>
	<20110923165714.166250@gmx.net>
Message-ID: <1316800456.79106.YahooMailNeo@web125518.mail.ne1.yahoo.com>

ANTLR is overkill for binary file formats: ?I know of no binary file format that requires more than one (variable length) item of lookahead for processing, nor would I expect to find one--binary formats are intentionally designed and evolved.

It is fairly simple to design a language for dealing with binary file formats and to support item (byte, various length integer, IEEE float and double numbers, etc) encode/decode logic for individual fields and thence to provide one or more backends for processing files. ?ASN.1 is an extreme example of this; when I implemented such a language, the grammar only took up two pages or so. ?For my language, backends included generation of C struct definitions, file reader/writer generation, and some others that I have forgotten. ?ANTLR makes it easy to design, implement, and extend such DSLs, but you do not need the ANTLR machinery for processing the files.

--Loring



>________________________________
>From: andreas kleiber <kleibi at gmx.net>
>To: antlr-interest at antlr.org
>Sent: Friday, September 23, 2011 9:57 AM
>Subject: Re: [antlr-interest] Binary support
>
>As there are no further posts right now, I would like to take the
>opportunity for a personal conclusion (I admit: It got a longer one ;-).
>
>ASN.1
>
>I took a look at ASN.1 -- This look was really quick, so I might be
>wrong on that. ASN.1 experts are welcome to correct me in this case.
>I got the feeling that in ASN.1 syntax and encoding are strongly
>coupled. I.e. ASN.1 is human readable notation, but you have to take the
>encodings provided. This is quite fine for protocols were you're
>normally only interested that the encoding is good (compact etc.), but
>not how it works in detail, because this is done automatically by
>generated code.
>
>That said ASN.1 is not feasible, in my eyes, if you have an already
>defined file format and want to generate a parser out of such a ASN.1
>grammar.
>
>
>ANTLR and binary formats
>
>I still think that it would be great if ANTLR would be enhanced to be
>able to also parse binary formats. In my eyes it's the right place and would make ANTLR even more unique.
>Making ANTLR fit for binary formats would involve following changes:
>1. Enhance capabilities of input handling
>2. Enhance ANTLR grammar
>3. Enhance code generator of ANTLR
>
>For 1.: In the end effect ANTLR does already binary file format handling. In that moment ANTLR reads files in one of the four Unicode encodings (UTF-8, UTF-16 LE, UTF-16 BE, UTF-32) including Byte Order Mark and surrogates support, it lexes a binary format.
>Because I don't know ANTLR in detail, I guess here the Sun/Oracle code is used which does this. So ANTLR does this not explicitly, but by usage of the official class libraries. I think here would be some work to be done, but if the Java class libraries are not flexible enough, I'm quite sure that ICU4J will be.
>
>2. and 3. are quite clear: The current ANTLR grammar has currently no support for binary formats, so an extension of some sort would be needed and of course the code generator of ANTLR must also support this.
>
>
>The last question to discuss is: Is it possible to describe binary formats in a grammar?
>
>I say: Yes, for most of them, this will work. For those it will not work fully, a grammar would at least ease life (you would end up doing the rest using actions etc.). 
>
>In a former post Ron Burk said:
>
>"Binary file formats also often just aren't directly representable by context free grammars. For example, a header may contain offsets of different objects, and the sizes of those objects may have to be inferred from the difference in offsets. Grammars, despite looking seductively similar because of having recursively nested constructs in common, aren't a great match for this domain.
>
>One could imagine useful domain-specific languages for binary file formats, but they might not look quite like grammar tools, and a single language might not be sufficient for all tasks."
>
>I agree and disagree. No matter if they are context free or not: They can be parsed. Binary formats have the benefit, that they were designed to be _machine readable_, and not, like programming languages, _human readable_. In general this makes them easier parsable.
>
>Instead of designing domain specific languages, I would prefer an integration into ANTLR, because there are also file formats out in the wild which combine binary data with text data -- and both needs to be parsed. Having two separate programs is not elegant -- you would end up with a high effort to put binary and text parsing results in one abstract syntax tree.
>
>In my opinion there are typical design patterns often used in binary formats. Offsets as mentioned by Ron in the former post are an example, as well as what I wrote in my first post, section "Interpretation of size":
>
>---------------------------------------------
>| header | size of next block | block | ... |
>---------------------------------------------
>
>Such patterns could be represented in an expressive syntax.
>
>I think the big issue, which makes binary files different from text files, is their self-referential nature: To be able to read a binary file you have to partially interpret it and use this information to manage the read process. You mostly can't decouple parsing and interpretation. But this is in my opinion no reason to not add such a functionality to ANTLR.
>
>Andi
>-- 
>Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
>belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From hashutosh at apache.org  Fri Sep 23 10:58:58 2011
From: hashutosh at apache.org (Ashutosh Chauhan)
Date: Fri, 23 Sep 2011 10:58:58 -0700
Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
Message-ID: <CA+FBdFQkAZn-+N8+yh5WnPfu-47nFfDwXh9xi4QN_BjoCaSNbA@mail.gmail.com>

Hey,

I work on Apache Hive project which was using Antlr 3.0.1 till now and
its working great. Thank you guys. Now I am trying to port it to 3.4
and I see antlr returning incorrect parse tree in 3.4 which used to be
correct in 3.0.1. I tested with 3.1 and thats returning correct parse
tree too. Grammar is defined here:

https://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/Hive.g

and test program is:

insert overwrite table alter3 partition (pCol1='test_part:',
pcol2='test_part:') select col1 from alter3_src ;

In 3.0.1 and 3.1 I get following parse tree which is correct
(nil(TOK_QUERY (TOK_FROM(TOK_TABREF
(TOK_TABNAME(alter3_src))))(TOK_INSERT
(TOK_DESTINATION(TOK_TAB(TOK_TABNAME(alter3))(TOK_PARTSPEC(TOK_PARTVAL(pCol1)('test_part:'))(TOK_PARTVAL(pcol2)('test_part:')))))(TOK_SELECT(TOK_SELEXPR(TOK_TABLE_OR_COL(col1))))))(null))

whereas in 3.4 I get following parse tree which is incomplete and thus incorrect
(nil(TOK_QUERY (TOK_FROM (TOK_TABREF
(TOK_TABNAME(alter3_src))))(TOK_INSERT
(TOK_DESTINATION(TOK_TAB))(TOK_SELECT (TOK_SELEXPR
	(TOK_TABLE_OR_COL(col1))))))(<EOF>))

Is there something I should keep in mind while trying to upgrade to
3.4. I was not able to test with 3.2 or 3.3 because of a different
problem in ant plugin of antlr because of which I was not able to
build. It was failing following stacktrace:

Exception in thread "main" java.lang.NoClassDefFoundError:
antlr/RecognitionException
     [java] 	at org.antlr.Tool.getRootGrammar(Tool.java:551)
     [java] 	at org.antlr.Tool.process(Tool.java:422)
     [java] 	at org.antlr.Tool.main(Tool.java:91)
     [java] Caused by: java.lang.ClassNotFoundException:
antlr.RecognitionException

I will be happy to provide any more information which will help figure
out this issue.

Thanks for your help,
Ashutosh

From researcher0x00 at gmail.com  Fri Sep 23 11:40:02 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Fri, 23 Sep 2011 14:40:02 -0400
Subject: [antlr-interest] Binary support
In-Reply-To: <20110923165714.166250@gmx.net>
References: <20110915162708.279250@gmx.net>
	<CAEVkYxex1hiTH4tzoi9_gcDzpoNk_BO3bz+BQP_7gn=i6rNgNQ@mail.gmail.com>
	<CAN45N12tp5dSzC4SFmeSEbNfPPrXxt-k7kTKA9TpeGf7WZKDXg@mail.gmail.com>
	<20110923165714.166250@gmx.net>
Message-ID: <CAN45N13zUvmDLR0F6mgPRiys8cd3oDA4VaqHefk0KHOJ+XXApQ@mail.gmail.com>

Hi Andi,

I have actually tried to modify ANTLR to read binary files and I eventually
set it aside and went in a different direction. I did so knowing that it
might not be right but to also understand WHY it might not be right. One of
the first things you will learn on this endeavor is that K=0 because you
know the layout of the binary data. If you are trying to write a parser to
parse unknown binary formats, as Ron mentioned, then K>0 and since not all
of the patterns are known, success may not be achieved. This is where PROLOG
comes in handy.

Another aspect of binary files is that they tend to be context sensitive and
AFAIK ANTLR was not designed to handle Type 1 grammars. See
http://en.wikipedia.org/wiki/Chomsky_hierarchy

You also have to deal with unions and tagged unions. See
http://en.wikipedia.org/wiki/Union_(computer_science)
http://en.wikipedia.org/wiki/Tagged_union

How would ANTLR retain the tags, or should the grammar designer be
responsible for maintaining them like a symbol table.

While I will point this out because you should be aware of it, I am not
recommending it. I haven't worked with ANTLR v4 yet, but you can give it a
test by getting it from https://github.com/antlr/antlr4

>From a practical stand point, if ANTLR were modified for this, how much
change would it cause for those not parsing binary files. I don't suspect
that the other target grammars would use it, so only the Java target would
have it. And since Java is not bit friendly, you change one problem for
another.

Eric

From jimi at temporal-wave.com  Fri Sep 23 12:30:55 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 23 Sep 2011 12:30:55 -0700
Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
In-Reply-To: <CA+FBdFQkAZn-+N8+yh5WnPfu-47nFfDwXh9xi4QN_BjoCaSNbA@mail.gmail.com>
References: <CA+FBdFQkAZn-+N8+yh5WnPfu-47nFfDwXh9xi4QN_BjoCaSNbA@mail.gmail.com>
Message-ID: <13a2b3eeec9aff7197d1d80caeeee255@mail.gmail.com>

Try the following:

1) You have things like:

    : KW_RESTRICT
    -> ^(TOK_RESTRICT)

Which are a little pointless - you could just use the existing parser
token:

    : KW_RESTRICT

But writing a single token will not produce a node anyway.

Next, you have things like this:

    :
      keyValueProperty (COMMA keyValueProperty)* -> ^(TOK_DBPROPLIST
keyValueProperty+)
    ;

Which I think will need to be:

    :
      k+=keyValueProperty (COMMA k+=keyValueProperty)* -> ^(TOK_DBPROPLIST
$k+)
    ;

Start with that and let's see where you get to.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ashutosh Chauhan
> Sent: Friday, September 23, 2011 10:59 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
>
> Hey,
>
> I work on Apache Hive project which was using Antlr 3.0.1 till now and
> its working great. Thank you guys. Now I am trying to port it to 3.4
> and I see antlr returning incorrect parse tree in 3.4 which used to be
> correct in 3.0.1. I tested with 3.1 and thats returning correct parse
> tree too. Grammar is defined here:
>
> https://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hado
> op/hive/ql/parse/Hive.g
>
> and test program is:
>
> insert overwrite table alter3 partition (pCol1='test_part:',
> pcol2='test_part:') select col1 from alter3_src ;
>
> In 3.0.1 and 3.1 I get following parse tree which is correct
> (nil(TOK_QUERY (TOK_FROM(TOK_TABREF
> (TOK_TABNAME(alter3_src))))(TOK_INSERT
> (TOK_DESTINATION(TOK_TAB(TOK_TABNAME(alter3))(TOK_PARTSPEC(TOK_PARTVAL(
> pCol1)('test_part:'))(TOK_PARTVAL(pcol2)('test_part:')))))(TOK_SELECT(T
> OK_SELEXPR(TOK_TABLE_OR_COL(col1))))))(null))
>
> whereas in 3.4 I get following parse tree which is incomplete and thus
> incorrect (nil(TOK_QUERY (TOK_FROM (TOK_TABREF
> (TOK_TABNAME(alter3_src))))(TOK_INSERT
> (TOK_DESTINATION(TOK_TAB))(TOK_SELECT (TOK_SELEXPR
> 	(TOK_TABLE_OR_COL(col1))))))(<EOF>))
>
> Is there something I should keep in mind while trying to upgrade to
> 3.4. I was not able to test with 3.2 or 3.3 because of a different
> problem in ant plugin of antlr because of which I was not able to
> build. It was failing following stacktrace:
>
> Exception in thread "main" java.lang.NoClassDefFoundError:
> antlr/RecognitionException
>      [java] 	at org.antlr.Tool.getRootGrammar(Tool.java:551)
>      [java] 	at org.antlr.Tool.process(Tool.java:422)
>      [java] 	at org.antlr.Tool.main(Tool.java:91)
>      [java] Caused by: java.lang.ClassNotFoundException:
> antlr.RecognitionException
>
> I will be happy to provide any more information which will help figure
> out this issue.
>
> Thanks for your help,
> Ashutosh
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From hashutosh at apache.org  Fri Sep 23 12:50:00 2011
From: hashutosh at apache.org (Ashutosh Chauhan)
Date: Fri, 23 Sep 2011 12:50:00 -0700
Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
In-Reply-To: <13a2b3eeec9aff7197d1d80caeeee255@mail.gmail.com>
References: <CA+FBdFQkAZn-+N8+yh5WnPfu-47nFfDwXh9xi4QN_BjoCaSNbA@mail.gmail.com>
	<13a2b3eeec9aff7197d1d80caeeee255@mail.gmail.com>
Message-ID: <CA+FBdFRQjHCrktPtRORd4pEHfdMb=G4v8FB9DwXMhcarmABkvQ@mail.gmail.com>

Hey Jim,

Thanks for taking a look. I can see what you are saying, but as far as
I can see those productions will never be used in the test-case I am
having, so those are irrelevant for the problem at hand.

Thanks,
Ashutosh

On Fri, Sep 23, 2011 at 12:30, Jim Idle <jimi at temporal-wave.com> wrote:
> Try the following:
>
> 1) You have things like:
>
> ? ?: KW_RESTRICT
> ? ?-> ^(TOK_RESTRICT)
>
> Which are a little pointless - you could just use the existing parser
> token:
>
> ? ?: KW_RESTRICT
>
> But writing a single token will not produce a node anyway.
>
> Next, you have things like this:
>
> ? ?:
> ? ? ?keyValueProperty (COMMA keyValueProperty)* -> ^(TOK_DBPROPLIST
> keyValueProperty+)
> ? ?;
>
> Which I think will need to be:
>
> ? ?:
> ? ? ?k+=keyValueProperty (COMMA k+=keyValueProperty)* -> ^(TOK_DBPROPLIST
> $k+)
> ? ?;
>
> Start with that and let's see where you get to.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Ashutosh Chauhan
>> Sent: Friday, September 23, 2011 10:59 AM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
>>
>> Hey,
>>
>> I work on Apache Hive project which was using Antlr 3.0.1 till now and
>> its working great. Thank you guys. Now I am trying to port it to 3.4
>> and I see antlr returning incorrect parse tree in 3.4 which used to be
>> correct in 3.0.1. I tested with 3.1 and thats returning correct parse
>> tree too. Grammar is defined here:
>>
>> https://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/hado
>> op/hive/ql/parse/Hive.g
>>
>> and test program is:
>>
>> insert overwrite table alter3 partition (pCol1='test_part:',
>> pcol2='test_part:') select col1 from alter3_src ;
>>
>> In 3.0.1 and 3.1 I get following parse tree which is correct
>> (nil(TOK_QUERY (TOK_FROM(TOK_TABREF
>> (TOK_TABNAME(alter3_src))))(TOK_INSERT
>> (TOK_DESTINATION(TOK_TAB(TOK_TABNAME(alter3))(TOK_PARTSPEC(TOK_PARTVAL(
>> pCol1)('test_part:'))(TOK_PARTVAL(pcol2)('test_part:')))))(TOK_SELECT(T
>> OK_SELEXPR(TOK_TABLE_OR_COL(col1))))))(null))
>>
>> whereas in 3.4 I get following parse tree which is incomplete and thus
>> incorrect (nil(TOK_QUERY (TOK_FROM (TOK_TABREF
>> (TOK_TABNAME(alter3_src))))(TOK_INSERT
>> (TOK_DESTINATION(TOK_TAB))(TOK_SELECT (TOK_SELEXPR
>> ? ? ? (TOK_TABLE_OR_COL(col1))))))(<EOF>))
>>
>> Is there something I should keep in mind while trying to upgrade to
>> 3.4. I was not able to test with 3.2 or 3.3 because of a different
>> problem in ant plugin of antlr because of which I was not able to
>> build. It was failing following stacktrace:
>>
>> Exception in thread "main" java.lang.NoClassDefFoundError:
>> antlr/RecognitionException
>> ? ? ?[java] ? at org.antlr.Tool.getRootGrammar(Tool.java:551)
>> ? ? ?[java] ? at org.antlr.Tool.process(Tool.java:422)
>> ? ? ?[java] ? at org.antlr.Tool.main(Tool.java:91)
>> ? ? ?[java] Caused by: java.lang.ClassNotFoundException:
>> antlr.RecognitionException
>>
>> I will be happy to provide any more information which will help figure
>> out this issue.
>>
>> Thanks for your help,
>> Ashutosh
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri Sep 23 12:55:46 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 23 Sep 2011 12:55:46 -0700
Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
In-Reply-To: <CA+FBdFRQjHCrktPtRORd4pEHfdMb=G4v8FB9DwXMhcarmABkvQ@mail.gmail.com>
References: <CA+FBdFQkAZn-+N8+yh5WnPfu-47nFfDwXh9xi4QN_BjoCaSNbA@mail.gmail.com>
	<13a2b3eeec9aff7197d1d80caeeee255@mail.gmail.com>
	<CA+FBdFRQjHCrktPtRORd4pEHfdMb=G4v8FB9DwXMhcarmABkvQ@mail.gmail.com>
Message-ID: <cfe41a28ab05db679f5dba48cdc6548e@mail.gmail.com>

I am saying that you should clear up this stuff everywhere first though.
Then your best bet is to generate the code with the -debug flag, build it
and run it then debug remotely with ANTLRWorks. I also sometimes just use
the Java debugger as the generated method names match the rules.

jim

> -----Original Message-----
> From: Ashutosh Chauhan [mailto:hashutosh at apache.org]
> Sent: Friday, September 23, 2011 12:50 PM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Different parse tree in 3.1 Vs 3.4
>
> Hey Jim,
>
> Thanks for taking a look. I can see what you are saying, but as far as
> I can see those productions will never be used in the test-case I am
> having, so those are irrelevant for the problem at hand.
>
> Thanks,
> Ashutosh
>
> On Fri, Sep 23, 2011 at 12:30, Jim Idle <jimi at temporal-wave.com> wrote:
> > Try the following:
> >
> > 1) You have things like:
> >
> > ? ?: KW_RESTRICT
> > ? ?-> ^(TOK_RESTRICT)
> >
> > Which are a little pointless - you could just use the existing parser
> > token:
> >
> > ? ?: KW_RESTRICT
> >
> > But writing a single token will not produce a node anyway.
> >
> > Next, you have things like this:
> >
> > ? ?:
> > ? ? ?keyValueProperty (COMMA keyValueProperty)* -> ^(TOK_DBPROPLIST
> > keyValueProperty+)
> > ? ?;
> >
> > Which I think will need to be:
> >
> > ? ?:
> > ? ? ?k+=keyValueProperty (COMMA k+=keyValueProperty)* ->
> > ^(TOK_DBPROPLIST
> > $k+)
> > ? ?;
> >
> > Start with that and let's see where you get to.
> >
> > Jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Ashutosh Chauhan
> >> Sent: Friday, September 23, 2011 10:59 AM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Different parse tree in 3.1 Vs 3.4
> >>
> >> Hey,
> >>
> >> I work on Apache Hive project which was using Antlr 3.0.1 till now
> >> and its working great. Thank you guys. Now I am trying to port it to
> >> 3.4 and I see antlr returning incorrect parse tree in 3.4 which used
> >> to be correct in 3.0.1. I tested with 3.1 and thats returning
> correct
> >> parse tree too. Grammar is defined here:
> >>
> >>
> https://svn.apache.org/repos/asf/hive/trunk/ql/src/java/org/apache/ha
> >> do
> >> op/hive/ql/parse/Hive.g
> >>
> >> and test program is:
> >>
> >> insert overwrite table alter3 partition (pCol1='test_part:',
> >> pcol2='test_part:') select col1 from alter3_src ;
> >>
> >> In 3.0.1 and 3.1 I get following parse tree which is correct
> >> (nil(TOK_QUERY (TOK_FROM(TOK_TABREF
> >> (TOK_TABNAME(alter3_src))))(TOK_INSERT
> >>
> (TOK_DESTINATION(TOK_TAB(TOK_TABNAME(alter3))(TOK_PARTSPEC(TOK_PARTVA
> >> L(
> >>
> pCol1)('test_part:'))(TOK_PARTVAL(pcol2)('test_part:')))))(TOK_SELECT
> >> (T
> >> OK_SELEXPR(TOK_TABLE_OR_COL(col1))))))(null))
> >>
> >> whereas in 3.4 I get following parse tree which is incomplete and
> >> thus incorrect (nil(TOK_QUERY (TOK_FROM (TOK_TABREF
> >> (TOK_TABNAME(alter3_src))))(TOK_INSERT
> >> (TOK_DESTINATION(TOK_TAB))(TOK_SELECT (TOK_SELEXPR
> >> ? ? ? (TOK_TABLE_OR_COL(col1))))))(<EOF>))
> >>
> >> Is there something I should keep in mind while trying to upgrade to
> >> 3.4. I was not able to test with 3.2 or 3.3 because of a different
> >> problem in ant plugin of antlr because of which I was not able to
> >> build. It was failing following stacktrace:
> >>
> >> Exception in thread "main" java.lang.NoClassDefFoundError:
> >> antlr/RecognitionException
> >> ? ? ?[java] ? at org.antlr.Tool.getRootGrammar(Tool.java:551)
> >> ? ? ?[java] ? at org.antlr.Tool.process(Tool.java:422)
> >> ? ? ?[java] ? at org.antlr.Tool.main(Tool.java:91)
> >> ? ? ?[java] Caused by: java.lang.ClassNotFoundException:
> >> antlr.RecognitionException
> >>
> >> I will be happy to provide any more information which will help
> >> figure out this issue.
> >>
> >> Thanks for your help,
> >> Ashutosh
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >

From parrt at cs.usfca.edu  Sat Sep 24 09:36:05 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 24 Sep 2011 09:36:05 -0700
Subject: [antlr-interest] CommonTree vs CommonAST
Message-ID: <BBA17B42-C1BB-4D50-A5E5-D58308DB830A@cs.usfca.edu>

Hi. I'm working on the v4 runtime and, since I have introduced a formal notion of the parse tree, some naming changes seem reasonable. I created interface Tree, which is generic. Then I introduced ParseTree. "Tree" is such a generic term and might conflict with ParseTree I've changed the abstract syntax tree stuff back to AST (like in v2). Here is the complete hierarchy:

-------------- next part --------------
A non-text attachment was scrubbed...
Name: PastedGraphic-1.tiff
Type: image/tiff
Size: 57318 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110924/7492fe1b/attachment.tiff 
-------------- next part --------------


So CommonTree in v3 becomes CommonAST in v4. I don't like gratuitous breaking changes. I could leave an alias for CommonTree (subclass CommonAST), but it would not be a perfect replacement due to type compatibility.

Q:  is it better to leave CommonTree as CommonTree for backward compatibility or is it better to use CommonAST in order to make it more clear we are distinguishing between parse trees and abstract syntax tree?

A name change also requires changes in the tree adapter stuff... that has to become ASTAdaptor, CommonASTAdaptor... more breaking changes at the type name level...grrr...

Thanks,
Ter

From martijn.reuvers at gmail.com  Sun Sep 25 04:07:03 2011
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Sun, 25 Sep 2011 13:07:03 +0200
Subject: [antlr-interest] CommonTree vs CommonAST
In-Reply-To: <BBA17B42-C1BB-4D50-A5E5-D58308DB830A@cs.usfca.edu>
References: <BBA17B42-C1BB-4D50-A5E5-D58308DB830A@cs.usfca.edu>
Message-ID: <CAON31m7uaX2=SKArBQePDozMNHNKH6wVaWk7AVO8_h--DWV5nw@mail.gmail.com>

Hey Ter,

New name sounds good to me to distinguish. Yes it will break things,
but well if you go to v4 that can be expected anyway - as it's a major
release. =)

Martijn

On Sat, Sep 24, 2011 at 6:36 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi. I'm working on the v4 runtime and, since I have introduced a formal notion of the parse tree, some naming changes seem reasonable. I created interface Tree, which is generic. Then I introduced ParseTree. "Tree" is such a generic term and might conflict with ParseTree I've changed the abstract syntax tree stuff back to AST (like in v2). Here is the complete hierarchy:
>
>
>
>
> So CommonTree in v3 becomes CommonAST in v4. I don't like gratuitous breaking changes. I could leave an alias for CommonTree (subclass CommonAST), but it would not be a perfect replacement due to type compatibility.
>
> Q: ?is it better to leave CommonTree as CommonTree for backward compatibility or is it better to use CommonAST in order to make it more clear we are distinguishing between parse trees and abstract syntax tree?
>
> A name change also requires changes in the tree adapter stuff... that has to become ASTAdaptor, CommonASTAdaptor... more breaking changes at the type name level...grrr...
>
> Thanks,
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From alecleekya at hotmail.com  Sun Sep 25 06:04:32 2011
From: alecleekya at hotmail.com (ALEC LEE)
Date: Sun, 25 Sep 2011 21:04:32 +0800
Subject: [antlr-interest] Rule for Matching All Symbols Except Some Options
Message-ID: <SNT120-W6557AA19865A283E489E10DBF20@phx.gbl>


I have a lexer rule listing all the acceptable symbols: 
  
ALL_SYMBOLS:   ('!' | '#' | '%' | '^' | '-' | '+' | '='   |  '<' | '>'  | ',' | '.' |'?' | '/' | '*'  ); // and more...... 
 
But sometimes I also want a parser rule to match all symbols except say "! #", "+ =" or  "+ - * /".  Because I have different needs at different time, I want to specify a rule using ALL_SYMBOLS minus some symbols style.  How should one write such a rule?  Can semantic predicate achieve this?  
 
I've never used semantic predicate before.  Are these the proper way to use it:
 
all_symbols_except_hash_equal: ALL_SYMBOLS {"#=".indexOf($text)< 0 }? ;  // can it be done this way?  Can $text be used inside a semantic predicate?
all_symbols_except_comma_plus_minus: {",+-".indexOf($text) < 0}?=>ALL_SYMBOLS ; 
// or should it be done this way? But $text seems not available inside a predicate and there is an failed predicate exception message printed in the screen
 		 	   		  

From jeremy.long at gmail.com  Sun Sep 25 06:32:09 2011
From: jeremy.long at gmail.com (Jeremy Long)
Date: Sun, 25 Sep 2011 09:32:09 -0400
Subject: [antlr-interest] Custom object tree from tree parser?
In-Reply-To: <000001cc79d3$e70470b0$b50d5210$@icinetic.com>
References: <000001cc79d3$e70470b0$b50d5210$@icinetic.com>
Message-ID: <CAKAumBGXDqguywsVpy81obHo-5UT0o+o0pPig-4A=RjCSZD7uA@mail.gmail.com>

Mari,

Did you ever get an answer to this? I agree a pointer or example on this
would be extremely helpful. I will be doing something similar very soon for
a project where I will be generating different nodes/objects from the input.
 Which is the better approach?

For my purposes I am planning on populating a Neo4J graph database and I've
been trying to figure out the best way to do this.

--Jeremy

On Fri, Sep 23, 2011 at 5:33 AM, Mari Matinlassi
<mmatinlassi at icinetic.com>wrote:

> Hello,
>
> I want to build custom object trees from text. As a simplified example,
> parser input is
>
> Car Seat;
> Car Audi;
> Customer John;
>
> Parser output shall be an object tree where e.g. Car object is an
> instantiation of a class below (Respectively, Customer class would be
> something similar):
>
> public class Car
> {
>        private string  brand;
>        public Car(string _brand)
>        {
>                this.brand = _brand;
>        }
>        public string Brand
>        {
>                 get { return brand; }
>        }
> }
>
> What is the best way to do this? Custom AST node and custom TreeAdaptor?
> Tree parser with actions embedded in rules? What about the problem that not
> all the nodes are similar? Could you please give me some hint to the right
> direction?
>
> Kind regards,
>
> Mari
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From s.barnett-cormack at lancaster.ac.uk  Sun Sep 25 07:23:28 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 25 Sep 2011 15:23:28 +0100
Subject: [antlr-interest] Custom object tree from tree parser?
In-Reply-To: <000001cc79d3$e70470b0$b50d5210$@icinetic.com>
References: <000001cc79d3$e70470b0$b50d5210$@icinetic.com>
Message-ID: <4E7F3960.4050503@lancaster.ac.uk>

I once had a very simple case where the parse tree and AST were 
uninteresting, but I needed to build a roughly tree-like data structure, 
and I just used actions and return types in the parser to handle it. 
That was in an older version, of course, back when I was an undergrad, 
but I see no reason why it wouldn't be an appropriate thing to do with a 
tree parser - building data as you walk the tree.

Fundamentally, though, there's very rarely a single 'right way' to do 
things.

Sam

On 23/09/2011 10:33, Mari Matinlassi wrote:
> Hello,
>
> I want to build custom object trees from text. As a simplified example,
> parser input is
>
> Car Seat;
> Car Audi;
> Customer John;
>
> Parser output shall be an object tree where e.g. Car object is an
> instantiation of a class below (Respectively, Customer class would be
> something similar):
>
> public class Car
> {
> 	private string  brand;
> 	public Car(string _brand)
> 	{
> 		this.brand = _brand;
> 	}
> 	public string Brand
> 	{
> 		 get { return brand; }
> 	}
> }
>
> What is the best way to do this? Custom AST node and custom TreeAdaptor?
> Tree parser with actions embedded in rules? What about the problem that not
> all the nodes are similar? Could you please give me some hint to the right
> direction?
>
> Kind regards,
>
> Mari
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From s.barnett-cormack at lancaster.ac.uk  Sun Sep 25 07:27:23 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Sun, 25 Sep 2011 15:27:23 +0100
Subject: [antlr-interest] Rule for Matching All Symbols Except Some
	Options
In-Reply-To: <SNT120-W6557AA19865A283E489E10DBF20@phx.gbl>
References: <SNT120-W6557AA19865A283E489E10DBF20@phx.gbl>
Message-ID: <4E7F3A4B.70800@lancaster.ac.uk>

It seems very strange to have that as a lexer rule, defined as it is, 
without knowing more about your specific use-case. It would make more 
sense to me to have lexer rules for every different 'meaning' of symbols 
and then have a parse rule for each combination you might want to use. 
The reason I say this is simply in terms of the tokens that are 
generated - it seems very odd to have a single token for all of those 
symbols. Also, it looks like it leads to pretty hard-to-read grammars.

Sam

On 25/09/2011 14:04, ALEC LEE wrote:
>
> I have a lexer rule listing all the acceptable symbols:
>
> ALL_SYMBOLS:   ('!' | '#' | '%' | '^' | '-' | '+' | '='   |  '<' |'>'  | ',' | '.' |'?' | '/' | '*'  ); // and more......
>
> But sometimes I also want a parser rule to match all symbols except say "! #", "+ =" or  "+ - * /".  Because I have different needs at different time, I want to specify a rule using ALL_SYMBOLS minus some symbols style.  How should one write such a rule?  Can semantic predicate achieve this?
>
> I've never used semantic predicate before.  Are these the proper way to use it:
>
> all_symbols_except_hash_equal: ALL_SYMBOLS {"#=".indexOf($text)<  0 }? ;  // can it be done this way?  Can $text be used inside a semantic predicate?
> all_symbols_except_comma_plus_minus: {",+-".indexOf($text)<  0}?=>ALL_SYMBOLS ;
> // or should it be done this way? But $text seems not available inside a predicate and there is an failed predicate exception message printed in the screen
>   		 	   		
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Sun Sep 25 07:51:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 25 Sep 2011 07:51:22 -0700
Subject: [antlr-interest] CommonTree vs CommonAST
In-Reply-To: <CAON31m7uaX2=SKArBQePDozMNHNKH6wVaWk7AVO8_h--DWV5nw@mail.gmail.com>
References: <BBA17B42-C1BB-4D50-A5E5-D58308DB830A@cs.usfca.edu>
	<CAON31m7uaX2=SKArBQePDozMNHNKH6wVaWk7AVO8_h--DWV5nw@mail.gmail.com>
Message-ID: <BD88C8C2-415D-42E4-8A2B-E5193B0201D8@cs.usfca.edu>


On Sep 25, 2011, at 4:07 AM, Martijn Reuvers wrote:

> Hey Ter,
> 
> New name sounds good to me to distinguish. Yes it will break things,
> but well if you go to v4 that can be expected anyway - as it's a major
> release. =)

Indeed. I think people will love what v4 does with parse trees. The standard operation of the tool will be to generate listener interfaces and blank implementations so that users can keep actions outside of the grammar, leaving them multi-targetable. By turning on a flag at runtime, the parser will build this internal parse tree. A standard walker will then walk that tree and trigger events in the listener. If all you care about is what happens up on some variable declaration, you simply implement that listener method.

:)
Ter

From parrt at cs.usfca.edu  Sun Sep 25 07:59:06 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sun, 25 Sep 2011 07:59:06 -0700
Subject: [antlr-interest] a logo design? branding.
Message-ID: <D1F910C8-F547-4B3C-97F6-B048CECE9F5A@cs.usfca.edu>

hi.  Sam Harwell had the great idea that I should commission a logo or logos for the ANTLR project. Perhaps there is a similar and consistent logo design for the individual tools. I'm also considering a new layout and design for the website. Basically v4 will have major new functionality and I want to do some nice branding for it. Sam also recommend someone that seems very good for doing the logo design. Questionnaire I have to fill out for this designer, however, asks questions that I don't really know how to answer exactly. I thought that I should appeal to you folks in the community so that we can  hone the answers for the designer to get something nice. Here are some questions that you might know the answer to or have opinions on:

1. what existing logos do we like and why

2.  what logos do we dislike and why

3. Preferred typography (heavy, light, modern, classic, handwritten etc.)  maybe we don't want text in the logo at all, but it seems like .g and .st could work in the individual tool logos. Microsoft logos for example:


Here is the logo portfolio of the guy:

http://www.logoholik.com/logo_portfolio/logo_portfolio.html

 any and all thoughts about branding are welcome.

Ter

From douglasgodfrey at gmail.com  Sun Sep 25 19:30:48 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Sun, 25 Sep 2011 22:30:48 -0400
Subject: [antlr-interest] Custom object tree from tree parser?
In-Reply-To: <CAKAumBGXDqguywsVpy81obHo-5UT0o+o0pPig-4A=RjCSZD7uA@mail.gmail.com>
Message-ID: <CAA55BAE.3920%douglasgodfrey@gmail.com>

I have built a parser that directly emitted XML. The XML was then passed
to a XML treewalker.

Emitting XML from the parser instead of an Antlr common tree structure is
quite simple to do.

On 9/25/11 9:32 AM, "Jeremy Long" <jeremy.long at gmail.com> wrote:

>Mari,
>
>Did you ever get an answer to this? I agree a pointer or example on this
>would be extremely helpful. I will be doing something similar very soon
>for
>a project where I will be generating different nodes/objects from the
>input.
> Which is the better approach?
>
>For my purposes I am planning on populating a Neo4J graph database and
>I've
>been trying to figure out the best way to do this.
>
>--Jeremy
>
>On Fri, Sep 23, 2011 at 5:33 AM, Mari Matinlassi
><mmatinlassi at icinetic.com>wrote:
>
>> Hello,
>>
>> I want to build custom object trees from text. As a simplified example,
>> parser input is
>>
>> Car Seat;
>> Car Audi;
>> Customer John;
>>
>> Parser output shall be an object tree where e.g. Car object is an
>> instantiation of a class below (Respectively, Customer class would be
>> something similar):
>>
>> public class Car
>> {
>>        private string  brand;
>>        public Car(string _brand)
>>        {
>>                this.brand = _brand;
>>        }
>>        public string Brand
>>        {
>>                 get { return brand; }
>>        }
>> }
>>
>> What is the best way to do this? Custom AST node and custom TreeAdaptor?
>> Tree parser with actions embedded in rules? What about the problem that
>>not
>> all the nodes are similar? Could you please give me some hint to the
>>right
>> direction?
>>
>> Kind regards,
>>
>> Mari
>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From michael.bedward at gmail.com  Sun Sep 25 22:12:26 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 26 Sep 2011 15:12:26 +1000
Subject: [antlr-interest] a logo design? branding.
In-Reply-To: <D1F910C8-F547-4B3C-97F6-B048CECE9F5A@cs.usfca.edu>
References: <D1F910C8-F547-4B3C-97F6-B048CECE9F5A@cs.usfca.edu>
Message-ID: <CACJVtdOnyWSS_7k3zLdmZnqaTf83w2CTDnKw7=K2WRMFwf9+kQ@mail.gmail.com>

The correct answer is "you're the designer - you tell me".

My fall back answers are:

> 1. what existing logos do we like and why

GeoTools: compass / spanner logo (http://geotools.org/) because it's a
simple and informative pun

TED: big red letters (http://www.ted.com/) because it's obvious and memorable

ScapeToad: toad logo (http://scapetoad.choros.ch/) because it's
ridiculous with a certain elegance

R (http://www.r-project.org/) because you just say Rrrr...

> 2. ?what logos do we dislike and why

Sonatype: horizontal bars and thin font (http://www.sonatype.com/)
because it looks corporate and boring

ESRI globe in grid (http://www.esri.com/) because it looks like they
want to take the world prisoner

Old Sun logo (as seen at:
http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/JAITOC.fm.html)
because it's on the wrong side of the line between clever and wanky

NetBeans: box figure and name (http://netbeans.org/) because what are
you supposed to do with an empty box ?

> 3. Preferred typography

Either elegant or in your face, but not script (usually lacks
immediacy) or very angular / geometric (e.g. the font used for the
Oracle logo which looks fascist - though perhaps that's just my
prejudice shining through).

Michael


On 26 September 2011 00:59, Terence Parr <parrt at cs.usfca.edu> wrote:
> hi. ?Sam Harwell had the great idea that I should commission a logo or logos for the ANTLR project. Perhaps there is a similar and consistent logo design for the individual tools. I'm also considering a new layout and design for the website. Basically v4 will have major new functionality and I want to do some nice branding for it. Sam also recommend someone that seems very good for doing the logo design. Questionnaire I have to fill out for this designer, however, asks questions that I don't really know how to answer exactly. I thought that I should appeal to you folks in the community so that we can ?hone the answers for the designer to get something nice. Here are some questions that you might know the answer to or have opinions on:
>
> 1. what existing logos do we like and why
>
> 2. ?what logos do we dislike and why
>
> 3. Preferred typography (heavy, light, modern, classic, handwritten etc.) ?maybe we don't want text in the logo at all, but it seems like .g and .st could work in the individual tool logos. Microsoft logos for example:
>
>
> Here is the logo portfolio of the guy:
>
> http://www.logoholik.com/logo_portfolio/logo_portfolio.html
>
> ?any and all thoughts about branding are welcome.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From michael.bedward at gmail.com  Sun Sep 25 22:14:52 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Mon, 26 Sep 2011 15:14:52 +1000
Subject: [antlr-interest] CommonTree vs CommonAST
In-Reply-To: <BD88C8C2-415D-42E4-8A2B-E5193B0201D8@cs.usfca.edu>
References: <BBA17B42-C1BB-4D50-A5E5-D58308DB830A@cs.usfca.edu>
	<CAON31m7uaX2=SKArBQePDozMNHNKH6wVaWk7AVO8_h--DWV5nw@mail.gmail.com>
	<BD88C8C2-415D-42E4-8A2B-E5193B0201D8@cs.usfca.edu>
Message-ID: <CACJVtdNU1w+Rta9ioZHiqYRMPxy5gcNA2_xg=T857ChJDR4Lhw@mail.gmail.com>

Cool ! I want it now :)

Michael

On 26 September 2011 00:51, Terence Parr <parrt at cs.usfca.edu> wrote:
>
> On Sep 25, 2011, at 4:07 AM, Martijn Reuvers wrote:
>
>> Hey Ter,
>>
>> New name sounds good to me to distinguish. Yes it will break things,
>> but well if you go to v4 that can be expected anyway - as it's a major
>> release. =)
>
> Indeed. I think people will love what v4 does with parse trees. The standard operation of the tool will be to generate listener interfaces and blank implementations so that users can keep actions outside of the grammar, leaving them multi-targetable. By turning on a flag at runtime, the parser will build this internal parse tree. A standard walker will then walk that tree and trigger events in the listener. If all you care about is what happens up on some variable declaration, you simply implement that listener method.
>
> :)
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From contact at maik-schmidt.de  Mon Sep 26 02:02:05 2011
From: contact at maik-schmidt.de (pragmaik)
Date: Mon, 26 Sep 2011 02:02:05 -0700 (PDT)
Subject: [antlr-interest] Recognizing syntax errors with C#
Message-ID: <1317027725027-6831210.post@n2.nabble.com>

I have written a grammar for a small subset of C and my parser does not work
reliably, that is sometimes it reports syntax errors and sometimes it
doesn't. For example, my grammar insists on variable initialization:

bool x; // This is not allowed.
bool y = true; // This is allowed

My problem is that the parser emits an error message for the program above.
But if I simply switch the lines like so:

bool y = true; // This is allowed
bool x; // This is not allowed.

the parser happily creates an AST for the first statement and simply ignores
the second one without noticing me about the syntax error. 

What am I doing wrong? My grammar looks as follows:


grammar MyGrammar;

options {
    language = CSharp3;
    output = AST;
    ASTLabelType = MyAST;
}

tokens {
    VAR_DECL;
	ARG_DECL;
	METHOD_DECL;
	ASSIGN = '=';
	EXPR;
	ELIST;
	BLOCK;
	CALL;
	UNARY_MINUS;
	UNARY_NOT;
}

@lexer::namespace{MyGrammar}
@parser::namespace{MyGrammar}

/******************************************************************************
 *                             Parser section

*****************************************************************************/

public
compilationUnit
    :    (methodDeclaration | variableDeclaration)+
	;

methodDeclaration
    :    returnType IDENTIFIER '(' (formalParameter (',' formalParameter)*)?
')' block -> ^(METHOD_DECL returnType IDENTIFIER formalParameter* block)
    ;

formalParameter
    :    type IDENTIFIER -> ^(ARG_DECL type IDENTIFIER)
    ;

variableDeclaration
    :    type IDENTIFIER '=' expression ';' -> ^(VAR_DECL type IDENTIFIER
expression)
    ;

block 
    :    '{' (statement)* '}' -> ^(BLOCK statement*)
    ;

statement
options { backtrack=true; }
    :    block
	|    variableDeclaration
    |    lhs '=' expression ';' -> ^('=' lhs expression)
	|    'return' expression? ';' -> ^('return' expression?)
	|    'if' '(' expression ')' b1=block
	     ('else' b2=block -> ^('if' expression $b1 $b2)
		 |                -> ^('if' expression $b1)
		 )
    |    postfixExpression ';' -> ^(EXPR postfixExpression)
	|	 ';'!
	;

lhs :    postfixExpression -> ^(EXPR postfixExpression)
    ;

expressionList
    :    expr (',' expr)* -> ^(ELIST expr+)
    |    -> ELIST
    ;

expression
    :    expr -> ^(EXPR expr)
    ;

expr:    logicalOrExpression
    ;

logicalOrExpression
    :    logicalAndExpression ('or'^ logicalAndExpression)*
	;

logicalAndExpression
    :    equalityExpression ('and'^ equalityExpression)*
	;

equalityExpression
    :    relationalExpression (('!='^ | '=='^) relationalExpression)*
    ;

relationalExpression
    :    additiveExpression (('<'^ | '>'^ | '<='^ | '>='^ )
additiveExpression)*
    ;

additiveExpression
    :    multiplicativeExpression (('+'^ | '-'^) multiplicativeExpression)*
    ;

multiplicativeExpression
    :    unaryExpression (('*'^ | '/'^) unaryExpression)*
    ;

unaryExpression
    :    '-' unaryExpression -> ^(UNARY_MINUS unaryExpression)
    |    '+' unaryExpression -> unaryExpression
    |    '!' unaryExpression -> ^(UNARY_NOT unaryExpression)
    |    postfixExpression
    ;

postfixExpression
    :    (atom -> atom)
         (
            '(' expressionList ')' -> ^(CALL["CALL"] $postfixExpression
expressionList)
         )*              
    ;           

atom:    IDENTIFIER
	|	 literal
	|	 '(' expr ')' -> expr
	;

literal
    :    INTLITERAL
    |    LONGLITERAL
    |    DOUBLELITERAL
    |    STRINGLITERAL
    |    'true'
    |    'false'
    ;

returnType
    :    type
	|    'void'
	;

type
    :    primitiveType
	;

primitiveType
    :    'int'
	|    'long'
	|    'double'
	|    'string'
	|    'bool'
	;

/******************************************************************************
 *                               Lexer section

*****************************************************************************/

 TRUE
    :    'true'
    ;

 FALSE
    :    'false'
    ;

LONGLITERAL
    :    IntegerNumber LongSuffix
    ;

INTLITERAL
    :    IntegerNumber
	;

fragment
IntegerNumber
    :    '0'
    |	 '1'..'9' ('0'..'9')*
    |	 '0' ('0'..'7')+
    |    HexPrefix HexDigit+        
    ;

fragment
HexPrefix
    :    '0x' | '0X'
    ;
        
fragment
HexDigit
    :   ('0'..'9'|'a'..'f'|'A'..'F')
    ;

fragment
LongSuffix
    :   'l' | 'L'
    ;

fragment
NonIntegerNumber
    :   ('0' .. '9')+ '.' ('0' .. '9')* Exponent?  
    |   '.' ( '0' .. '9' )+ Exponent?  
    |   ('0' .. '9')+ Exponent  
    |   ('0' .. '9')+ 
    |   
        HexPrefix (HexDigit )* 
        (    () 
        |    ('.' (HexDigit )* ) 
        ) 
        ( 'p' | 'P' ) 
        ( '+' | '-' )? 
        ( '0' .. '9' )+
        ;
        
fragment 
Exponent    
    :   ( 'e' | 'E' ) ( '+' | '-' )? ( '0' .. '9' )+ 
    ;
    
fragment
DoubleSuffix
    :   'd' | 'D'
    ;
        
DOUBLELITERAL
    :   NonIntegerNumber DoubleSuffix?
    ;

STRINGLITERAL
    :   '"' (EscapeSequence | ~( '\\' | '"' | '\r' | '\n' ) )* '"' 
    ;

fragment
EscapeSequence 
    :   '\\' (
                 'b' 
             |   't' 
             |   'n' 
             |   'f' 
             |   'r' 
             |   '\"' 
             |   '\'' 
             |   '\\' 
             |   ('0'..'3') ('0'..'7') ('0'..'7')
             |   ('0'..'7') ('0'..'7') 
             |   ('0'..'7')
             )          
    ;     

IDENTIFIER	:	('a'..'z' |'A'..'Z' |'_' ) ('a'..'z' |'A'..'Z' |'_' |'0'..'9'
)* ;

WS  :   (' ' | '\t' | '\n' | '\r')+ { $channel = 99; } ;

COMMENT
    :   '/*' (options {greedy=false;} : . )*  '*/' { $channel = 99; }
    ;

LINE_COMMENT
    :   '//' ~('\n'|'\r')*  ('\r\n' | '\r' | '\n')  { $channel = 99; }
    |   '//' ~('\n'|'\r')*  { $channel = 99; } // A line comment could
appear at the end of the file without CR/LF
    ;

ANYCHAR : . ;


Maik


--
View this message in context: http://antlr.1301665.n2.nabble.com/Recognizing-syntax-errors-with-C-tp6831210p6831210.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Mon Sep 26 02:06:31 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 26 Sep 2011 11:06:31 +0200
Subject: [antlr-interest] Recognizing syntax errors with C#
In-Reply-To: <1317027725027-6831210.post@n2.nabble.com>
References: <1317027725027-6831210.post@n2.nabble.com>
Message-ID: <CAOrgODbgvZ1omgtSwXYntzdFaqkiDtZqfUZuGQgV-vBZEjvHBQ@mail.gmail.com>

Hi Maik,

Try adding an EOF at the end of the entry point of your grammar:

compilationUnit
   :    (methodDeclaration | variableDeclaration)+ EOF
   ;


That way you force your parser to consume the entire token stream.

Regards,

Bart.


On Mon, Sep 26, 2011 at 11:02 AM, pragmaik <contact at maik-schmidt.de> wrote:

> I have written a grammar for a small subset of C and my parser does not
> work
> reliably, that is sometimes it reports syntax errors and sometimes it
> doesn't. For example, my grammar insists on variable initialization:
>
> bool x; // This is not allowed.
> bool y = true; // This is allowed
>
> My problem is that the parser emits an error message for the program above.
> But if I simply switch the lines like so:
>
> bool y = true; // This is allowed
> bool x; // This is not allowed.
>
> the parser happily creates an AST for the first statement and simply
> ignores
> the second one without noticing me about the syntax error.
>
> What am I doing wrong? My grammar looks as follows:
>
>
> grammar MyGrammar;
>
> options {
>    language = CSharp3;
>    output = AST;
>    ASTLabelType = MyAST;
> }
>
> tokens {
>    VAR_DECL;
>        ARG_DECL;
>        METHOD_DECL;
>        ASSIGN = '=';
>        EXPR;
>        ELIST;
>        BLOCK;
>        CALL;
>        UNARY_MINUS;
>        UNARY_NOT;
> }
>
> @lexer::namespace{MyGrammar}
> @parser::namespace{MyGrammar}
>
>
> /******************************************************************************
>  *                             Parser section
>
>
> *****************************************************************************/
>
> public
> compilationUnit
>    :    (methodDeclaration | variableDeclaration)+
>        ;
>
> methodDeclaration
>    :    returnType IDENTIFIER '(' (formalParameter (',' formalParameter)*)?
> ')' block -> ^(METHOD_DECL returnType IDENTIFIER formalParameter* block)
>    ;
>
> formalParameter
>    :    type IDENTIFIER -> ^(ARG_DECL type IDENTIFIER)
>    ;
>
> variableDeclaration
>    :    type IDENTIFIER '=' expression ';' -> ^(VAR_DECL type IDENTIFIER
> expression)
>    ;
>
> block
>    :    '{' (statement)* '}' -> ^(BLOCK statement*)
>    ;
>
> statement
> options { backtrack=true; }
>    :    block
>        |    variableDeclaration
>    |    lhs '=' expression ';' -> ^('=' lhs expression)
>        |    'return' expression? ';' -> ^('return' expression?)
>        |    'if' '(' expression ')' b1=block
>             ('else' b2=block -> ^('if' expression $b1 $b2)
>                 |                -> ^('if' expression $b1)
>                 )
>    |    postfixExpression ';' -> ^(EXPR postfixExpression)
>        |        ';'!
>        ;
>
> lhs :    postfixExpression -> ^(EXPR postfixExpression)
>    ;
>
> expressionList
>    :    expr (',' expr)* -> ^(ELIST expr+)
>    |    -> ELIST
>    ;
>
> expression
>    :    expr -> ^(EXPR expr)
>    ;
>
> expr:    logicalOrExpression
>    ;
>
> logicalOrExpression
>    :    logicalAndExpression ('or'^ logicalAndExpression)*
>        ;
>
> logicalAndExpression
>    :    equalityExpression ('and'^ equalityExpression)*
>        ;
>
> equalityExpression
>    :    relationalExpression (('!='^ | '=='^) relationalExpression)*
>    ;
>
> relationalExpression
>    :    additiveExpression (('<'^ | '>'^ | '<='^ | '>='^ )
> additiveExpression)*
>    ;
>
> additiveExpression
>    :    multiplicativeExpression (('+'^ | '-'^) multiplicativeExpression)*
>    ;
>
> multiplicativeExpression
>    :    unaryExpression (('*'^ | '/'^) unaryExpression)*
>    ;
>
> unaryExpression
>    :    '-' unaryExpression -> ^(UNARY_MINUS unaryExpression)
>    |    '+' unaryExpression -> unaryExpression
>    |    '!' unaryExpression -> ^(UNARY_NOT unaryExpression)
>    |    postfixExpression
>    ;
>
> postfixExpression
>    :    (atom -> atom)
>         (
>            '(' expressionList ')' -> ^(CALL["CALL"] $postfixExpression
> expressionList)
>         )*
>    ;
>
> atom:    IDENTIFIER
>        |        literal
>        |        '(' expr ')' -> expr
>        ;
>
> literal
>    :    INTLITERAL
>    |    LONGLITERAL
>    |    DOUBLELITERAL
>    |    STRINGLITERAL
>    |    'true'
>    |    'false'
>    ;
>
> returnType
>    :    type
>        |    'void'
>        ;
>
> type
>    :    primitiveType
>        ;
>
> primitiveType
>    :    'int'
>        |    'long'
>        |    'double'
>        |    'string'
>        |    'bool'
>        ;
>
>
> /******************************************************************************
>  *                               Lexer section
>
>
> *****************************************************************************/
>
>  TRUE
>    :    'true'
>    ;
>
>  FALSE
>    :    'false'
>    ;
>
> LONGLITERAL
>    :    IntegerNumber LongSuffix
>    ;
>
> INTLITERAL
>    :    IntegerNumber
>        ;
>
> fragment
> IntegerNumber
>    :    '0'
>    |    '1'..'9' ('0'..'9')*
>    |    '0' ('0'..'7')+
>    |    HexPrefix HexDigit+
>    ;
>
> fragment
> HexPrefix
>    :    '0x' | '0X'
>    ;
>
> fragment
> HexDigit
>    :   ('0'..'9'|'a'..'f'|'A'..'F')
>    ;
>
> fragment
> LongSuffix
>    :   'l' | 'L'
>    ;
>
> fragment
> NonIntegerNumber
>    :   ('0' .. '9')+ '.' ('0' .. '9')* Exponent?
>    |   '.' ( '0' .. '9' )+ Exponent?
>    |   ('0' .. '9')+ Exponent
>    |   ('0' .. '9')+
>    |
>        HexPrefix (HexDigit )*
>        (    ()
>        |    ('.' (HexDigit )* )
>        )
>        ( 'p' | 'P' )
>        ( '+' | '-' )?
>        ( '0' .. '9' )+
>        ;
>
> fragment
> Exponent
>    :   ( 'e' | 'E' ) ( '+' | '-' )? ( '0' .. '9' )+
>    ;
>
> fragment
> DoubleSuffix
>    :   'd' | 'D'
>    ;
>
> DOUBLELITERAL
>    :   NonIntegerNumber DoubleSuffix?
>    ;
>
> STRINGLITERAL
>    :   '"' (EscapeSequence | ~( '\\' | '"' | '\r' | '\n' ) )* '"'
>    ;
>
> fragment
> EscapeSequence
>    :   '\\' (
>                 'b'
>             |   't'
>             |   'n'
>             |   'f'
>             |   'r'
>             |   '\"'
>             |   '\''
>             |   '\\'
>             |   ('0'..'3') ('0'..'7') ('0'..'7')
>             |   ('0'..'7') ('0'..'7')
>             |   ('0'..'7')
>             )
>    ;
>
> IDENTIFIER      :       ('a'..'z' |'A'..'Z' |'_' ) ('a'..'z' |'A'..'Z' |'_'
> |'0'..'9'
> )* ;
>
> WS  :   (' ' | '\t' | '\n' | '\r')+ { $channel = 99; } ;
>
> COMMENT
>    :   '/*' (options {greedy=false;} : . )*  '*/' { $channel = 99; }
>    ;
>
> LINE_COMMENT
>    :   '//' ~('\n'|'\r')*  ('\r\n' | '\r' | '\n')  { $channel = 99; }
>    |   '//' ~('\n'|'\r')*  { $channel = 99; } // A line comment could
> appear at the end of the file without CR/LF
>    ;
>
> ANYCHAR : . ;
>
>
> Maik
>
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Recognizing-syntax-errors-with-C-tp6831210p6831210.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From contact at maik-schmidt.de  Mon Sep 26 02:16:53 2011
From: contact at maik-schmidt.de (pragmaik)
Date: Mon, 26 Sep 2011 02:16:53 -0700 (PDT)
Subject: [antlr-interest] Recognizing syntax errors with C#
In-Reply-To: <CAOrgODbgvZ1omgtSwXYntzdFaqkiDtZqfUZuGQgV-vBZEjvHBQ@mail.gmail.com>
References: <1317027725027-6831210.post@n2.nabble.com>
	<CAOrgODbgvZ1omgtSwXYntzdFaqkiDtZqfUZuGQgV-vBZEjvHBQ@mail.gmail.com>
Message-ID: <1317028613598-6831248.post@n2.nabble.com>

Hi Bart!

Thank you very much! It works much better now, that is now I get an error
message at least:

missing EndOfFile at 'bool'

Is there an easy way to make this error message more friendly? That is as an
user of the language I'd expect something like 'Missing initialization in
variable declaration'.

Best,

Maik


--
View this message in context: http://antlr.1301665.n2.nabble.com/Recognizing-syntax-errors-with-C-tp6831210p6831248.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Mon Sep 26 02:43:22 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 26 Sep 2011 11:43:22 +0200
Subject: [antlr-interest] Recognizing syntax errors with C#
In-Reply-To: <1317028613598-6831248.post@n2.nabble.com>
References: <1317027725027-6831210.post@n2.nabble.com>
	<CAOrgODbgvZ1omgtSwXYntzdFaqkiDtZqfUZuGQgV-vBZEjvHBQ@mail.gmail.com>
	<1317028613598-6831248.post@n2.nabble.com>
Message-ID: <CAOrgODYeB60jveG_TUBLUsSnxeRbGRcNLBL8TTDGGbJrpcfuhA@mail.gmail.com>

Have a look at these:

http://www.antlr.org/blog/antlr3/error.handling.tml
http://www.antlr.org/wiki/display/ANTLR3/Error+reporting+and+recovery
http://www.antlr.org/wiki/display/ANTLR3/Custom+Syntax+Error+Recovery

Regards,

Bart.

On Mon, Sep 26, 2011 at 11:16 AM, pragmaik <contact at maik-schmidt.de> wrote:

> Hi Bart!
>
> Thank you very much! It works much better now, that is now I get an error
> message at least:
>
> missing EndOfFile at 'bool'
>
> Is there an easy way to make this error message more friendly? That is as
> an
> user of the language I'd expect something like 'Missing initialization in
> variable declaration'.
>
> Best,
>
> Maik
>
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Recognizing-syntax-errors-with-C-tp6831210p6831248.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mmatinlassi at icinetic.com  Mon Sep 26 05:55:40 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Mon, 26 Sep 2011 14:55:40 +0200
Subject: [antlr-interest] Custom object tree from tree parser?
In-Reply-To: <CAKAumBGXDqguywsVpy81obHo-5UT0o+o0pPig-4A=RjCSZD7uA@mail.gmail.com>
References: <000001cc79d3$e70470b0$b50d5210$@icinetic.com>
	<CAKAumBGXDqguywsVpy81obHo-5UT0o+o0pPig-4A=RjCSZD7uA@mail.gmail.com>
Message-ID: <000f01cc7c4b$98ab3410$ca019c30$@icinetic.com>

Jeremy,

 

Unfortunately - so far - no, not have got answer to this.

 

In reality, my problem is more challenging because I need relationships too
e.g. CustomerHasCars relationship where Customer object needs to have a list
of Cars inside. Further, Car can be defined before or after CustomerHasCars
relationship. So, building object tree with "actions embedded in rules"
approach does not seem to be powerful enough. 

 

Besides, what to do with the AST created by parser if I would be
constructing another one next to it? Haloo (silly me)?!

 

It seems I need several (tree)parsers and custom tree adaptors (one for each
node type) and then yet another one to put everything together, right?

 

Anyone more experienced please confirm/reject? 

 

While waiting, I have no choice but the good old trial-and-error method ;-)

 

Regards,

 

Mari

 

From: Jeremy Long [mailto:jeremy.long at gmail.com] 
Sent: Sunday, September 25, 2011 3:32 PM
To: Mari Matinlassi
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Custom object tree from tree parser?

 

Mari,

 

Did you ever get an answer to this? I agree a pointer or example on this
would be extremely helpful. I will be doing something similar very soon for
a project where I will be generating different nodes/objects from the input.
Which is the better approach?

 

For my purposes I am planning on populating a Neo4J graph database and I've
been trying to figure out the best way to do this.

 

--Jeremy

 

On Fri, Sep 23, 2011 at 5:33 AM, Mari Matinlassi <mmatinlassi at icinetic.com>
wrote:

Hello,

I want to build custom object trees from text. As a simplified example,
parser input is

Car Seat;
Car Audi;
Customer John;

Parser output shall be an object tree where e.g. Car object is an
instantiation of a class below (Respectively, Customer class would be
something similar):

public class Car
{
       private string  brand;
       public Car(string _brand)
       {
               this.brand = _brand;
       }
       public string Brand
       {
                get { return brand; }
       }
}

What is the best way to do this? Custom AST node and custom TreeAdaptor?
Tree parser with actions embedded in rules? What about the problem that not
all the nodes are similar? Could you please give me some hint to the right
direction?

Kind regards,

Mari



List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From WeikEngOff at aol.com  Mon Sep 26 06:50:04 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Mon, 26 Sep 2011 15:50:04 +0200
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
 large (public static final String[] tokenNames = new String[] { ... } ; )
Message-ID: <4E80830C.5020909@aol.com>

Hello,

the length of that line is 1647 chars (162 strings).
The grammar is an existing one. What can/must I do?

[15:41:27] XYZParser.java:14: code too large
[15:41:27]     public static final String[] tokenNames = new String[] {
[15:41:27]                                  ^
[15:41:27] 1 error


Many thanks and greetings
Udo


From parrt at cs.usfca.edu  Mon Sep 26 07:10:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Sep 2011 07:10:22 -0700
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
	large (public static final String[] tokenNames = new String[]
	{ ... } ; )
In-Reply-To: <4E80830C.5020909@aol.com>
References: <4E80830C.5020909@aol.com>
Message-ID: <ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>

wow! how big is that grammar?
Ter
On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:

> Hello,
> 
> the length of that line is 1647 chars (162 strings).
> The grammar is an existing one. What can/must I do?
> 
> [15:41:27] XYZParser.java:14: code too large
> [15:41:27]     public static final String[] tokenNames = new String[] {
> [15:41:27]                                  ^
> [15:41:27] 1 error
> 
> 
> Many thanks and greetings
> Udo
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From WeikEngOff at aol.com  Mon Sep 26 08:42:50 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Mon, 26 Sep 2011 17:42:50 +0200
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
 large (public static final String[] tokenNames = new String[] { ... } ; )
In-Reply-To: <ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
Message-ID: <4E809D7A.7000309@aol.com>

Hello Terence,

> wow! how big is that grammar?
> Ter

I'm trying to get the VHDL-grammar for the CSharp-target from
Mike Lodder working with Java:
http://www.antlr.org/grammar/1202750770887/vhdl.g

Some first, very basic modifications see attachement.
First of all that grammar should work with ANTLRWorks 1.4.3.

Many thanks for any support
Udo


> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>
>> Hello,
>>
>> the length of that line is 1647 chars (162 strings).
>> The grammar is an existing one. What can/must I do?
>>
>> [15:41:27] XYZParser.java:14: code too large
>> [15:41:27]     public static final String[] tokenNames = new String[] {
>> [15:41:27]                                  ^
>> [15:41:27] 1 error
>>
>>
>> Many thanks and greetings
>> Udo
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

-------------- next part --------------
// Created By Mike Lodder
// Parser code modified from VHDL-AMS.

// Modified by Udo Weik 2011/09/26 for basic tests with
// ANTLRWorks 1.4.3/Java-target, marked with // UW

grammar vhdl__UW1a ;


options {
	k=3;
//	language='CSharp';
}

tokens {
	ABS='abs';
	ACCESS='access';
	ACROSS='across';
	AFTER='after';
	ALIAS='alias';
	ALL='all';
	AND='and';
	ARCHITECTURE='architecture';
	ARRAY='array';
	ASSERT='assert';
	ATTRIBUTE='attribute';
	BEGIN='begin';
	BLOCK='block';
	BODY='body';
	BREAK='break';
	BUFFER='buffer';
	BUS='bus';
	CASE='case';
	COMPONENT='component';
	CONFIGURATION='configuration';
	CONSTANT='constant';
	DISCONNECT='disconnect';
	DOWNTO='downto';
	END='end';
	ENTITY='entity';
	ELSE='else';
	ELSIF='elsif';
	EXIT='exit';
	FILE='file';
	FOR='for';
	FUNCTION='function';
	GENERATE='generate';
	GENERIC='generic';
	GROUP='group';
	GUARDED='guarded';
	IF='if';
	IMPURE='impure';
	IN='in';
	INERTIAL='inertial';
	INOUT='inout';
	IS='is';
	LABEL='label';
	LIBRARY='library';
	LIMIT='limit';
	LINKAGE='linkage';
	LITERAL='literal';
	LOOP='loop';
	MAP='map';
	MOD='mod';
	NAND='nand';
	NATURE='nature';
	NEW='new';
	NEXT='next';
	NOISE='noise';
	NOR='nor';
	NOT='not';
	NULL='null';
	OF='of';
	ON='on';
	OPEN='open';
	OR='or';
	OTHERS='others';
	OUT='out';
	PACKAGE='package';
	PORT='port';
	POSTPONED='postponed';
	PROCESS='process';
	PROCEDURE='procedure';
	PROCEDURAL='procedural';
	PURE='pure';
	QUANTITY='quantity';
	RANGE='range';
	REJECT='reject';
	REM='rem';
	RECORD='record';
	REFERENCE='reference';
	REGISTER='register';
	REPORT='report';
	RETURN='return';
	ROL='rol';
	ROR='ror';
	SELECT='select';
	SEVERITY='severity';
	SHARED='shared';
	SIGNAL='signal';
	SLA='sla';
	SLL='sll';
	SPECTRUM='spectrum';
	SRA='sra';
	SRL='srl';
	SUBNATURE='subnature';
	SUBTYPE='subtype';
	TERMINAL='terminal';
	THEN='then';
	THROUGH='through';
	TO='to';
	TOLERANCE='tolerance';
	TRANSPORT='transport';
	TYPE='type';
	UNAFFECTED='unaffected';
	UNITS='units';
	UNTIL='until';
	USE='use';
	VARIABLE='variable';
	WAIT='wait';
	WITH='with';
	WHEN='when';
	WHILE='while';
	XNOR='xnor';
	XOR='xor';
}
//------------------------------------------Parser----------------------------------------
abstract_literal
   :  DECIMAL_LITERAL
   |  BASE_LITERAL
   ;

access_type_definition
  : ACCESS subtype_indication
  ;

across_aspect
  : identifier_list ( tolerance_aspect )? ( VARASGN expression )? ACROSS
  ;

actual_designator
  : expression
  | OPEN
  ;

actual_parameter_part
  : association_list
  ;

actual_part
  : (name LPAREN)=> name LPAREN actual_designator RPAREN
  | actual_designator
  ;

adding_operator
  : PLUS
  | MINUS
  | AMPERSAND
  ;

aggregate
  : LPAREN element_association ( COMMA element_association )* RPAREN
  ;

alias_declaration
  : ALIAS alias_designator ( COLON alias_indication )? IS
    name ( signature )? SEMI
  ;

alias_designator
  : identifier
  | CHARACTER_LITERAL
  | STRING_LITERAL
  ;

alias_indication
  : (subnature_indication)=> subnature_indication
  | subtype_indication
  ;

allocator
  : NEW ( (name CHARACTER_LITERAL)=> qualified_expression | subtype_indication )
  ;

architecture_body
  : ARCHITECTURE identifier OF name IS
    architecture_declarative_part
    BEGIN
    architecture_statement_part
    END ( ARCHITECTURE )? ( identifier )? SEMI
  ;

architecture_declarative_part
  : ( block_declarative_item )*
  ;

architecture_statement
  : block_statement
  | (( label_colon )? ( POSTPONED )? PROCESS)=>
    process_statement
  | (( label_colon )? ( POSTPONED )? procedure_call SEMI)=>
    concurrent_procedure_call_statement
  | (( label_colon )? ( POSTPONED )? ASSERT)=>
    concurrent_assertion_statement
  | (( label_colon )? ( POSTPONED )?
      ( conditional_signal_assignment | selected_signal_assignment ))=>
    concurrent_signal_assignment_statement
  | (label_colon instantiated_unit)=>
    component_instantiation_statement
  | (label_colon generation_scheme GENERATE)=>
    generate_statement
  | (( label_colon )? BREAK ( break_list )? ( sensitivity_clause )?)=>
    concurrent_break_statement
  | simultaneous_statement
  ;

architecture_statement_part
  : ( architecture_statement )*
  ;

array_nature_definition
  : (ARRAY LPAREN index_subtype_definition)=> unconstrained_nature_definition
  | constrained_nature_definition
  ;

array_type_definition
  : (unconstrained_array_definition)=> unconstrained_array_definition
  | constrained_array_definition
  ;

assertion
  : ASSERT condition ( REPORT expression )? ( SEVERITY expression )?
  ;

assertion_statement
  : ( label_colon )? assertion SEMI
  ;

association_element
  : ( (formal_part ARROW)=> formal_part ARROW )? actual_part
  ;

association_list
  : association_element ( COMMA association_element )*
  ;

attribute_declaration
  : ATTRIBUTE label_colon name SEMI
  ;

// Need to add several tokens here, for they are both, VHDLAMS reserved words
// and attribute names.
// (25.2.2004, e.f.)
attribute_designator
  : identifier
  | RANGE
  | ACROSS
  | THROUGH
  | REFERENCE
  | TOLERANCE
  ;

attribute_specification
  : ATTRIBUTE attribute_designator OF entity_specification IS expression SEMI
  ;

base_unit_declaration
  : identifier SEMI
  ;

binding_indication
  : ( USE entity_aspect )? ( generic_map_aspect )? ( port_map_aspect )?
  ;

block_configuration
  : FOR block_specification
    ( use_clause )*
    ( configuration_item )*
    END FOR SEMI
  ;

block_declarative_item
  : (subprogram_declaration)=> subprogram_declaration
  | subprogram_body
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | signal_declaration
  | variable_declaration
  | file_declaration
  | alias_declaration
  | component_declaration
  | attribute_declaration
  | attribute_specification
  | configuration_specification
  | disconnection_specification
  | step_limit_specification
  | use_clause
  | group_template_declaration
  | group_declaration
  | nature_declaration
  | subnature_declaration
  | quantity_declaration
  | terminal_declaration
  ;

block_declarative_part
  : ( block_declarative_item )*
  ;

block_header
  : ( generic_clause ( generic_map_aspect SEMI )? )?
    ( port_clause ( port_map_aspect SEMI )? )?
  ;

block_specification
  : (identifier)=> identifier ( LPAREN index_specification RPAREN )?
  | name
  ;

block_statement
  : label_colon BLOCK ( LPAREN expression RPAREN )? ( IS )?
    block_header
    block_declarative_part BEGIN
    block_statement_part 
    END BLOCK ( identifier )? SEMI
  ;

block_statement_part
  : ( architecture_statement )*
  ;

branch_quantity_declaration
  : QUANTITY ( (across_aspect)=> across_aspect )?
    ( through_aspect )? terminal_aspect SEMI
  ;

break_element
  : ( break_selector_clause )? name ARROW expression
  ;

break_list
  : break_element ( COMMA break_element )*
  ;

break_selector_clause
  : FOR name USE
  ;

break_statement
  : ( label_colon )? BREAK ( break_list )? ( WHEN condition )? SEMI
  ;

case_statement
  : ( label_colon )? CASE expression IS
    ( case_statement_alternative )+
    END CASE ( identifier )? SEMI
  ;

case_statement_alternative
  : WHEN choices ARROW sequence_of_statements
  ;

choice
  : (identifier)=> identifier
  | (discrete_range)=> discrete_range
  | simple_expression
  | OTHERS
  ;

choices
  : choice ( BAR choice )*
  ;

component_configuration
  : FOR component_specification
    ( binding_indication SEMI )?
    ( block_configuration )?
    END FOR SEMI
  ;

component_declaration
  : COMPONENT identifier ( IS )?
    ( generic_clause )?
    ( port_clause )?
    END COMPONENT ( identifier )? SEMI
  ;

component_instantiation_statement
  : label_colon instantiated_unit
    ( generic_map_aspect )?
    ( port_map_aspect )? SEMI
  ;

component_specification
  : instantiation_list COLON name
  ;

composite_nature_definition
  : array_nature_definition
  | record_nature_definition
  ;

composite_type_definition
  : array_type_definition
  | record_type_definition
  ;

concurrent_assertion_statement
  : ( label_colon )? ( POSTPONED )? assertion SEMI
  ;

concurrent_break_statement
  : ( label_colon )? BREAK ( break_list )? ( sensitivity_clause )?
    ( WHEN condition )? SEMI
  ;

concurrent_procedure_call_statement
  : ( label_colon )? ( POSTPONED )? procedure_call SEMI
  ;

concurrent_signal_assignment_statement
  : ( label_colon )? ( POSTPONED )?
    ( conditional_signal_assignment | selected_signal_assignment )
  ;

condition
  : expression
  ;

condition_clause
  : UNTIL condition
  ;

conditional_signal_assignment
  : target LE opts conditional_waveforms SEMI
  ;

conditional_waveforms
  : waveform ( (WHEN condition ELSE)=> conditional_waveforms_bi )?
    ( WHEN condition )?
  ;
conditional_waveforms_bi
  : WHEN condition ELSE waveform
    ( (WHEN condition ELSE)=> conditional_waveforms_bi )?
  ;

configuration_declaration
  : CONFIGURATION identifier OF name IS
    configuration_declarative_part
    block_configuration
    END ( CONFIGURATION )? ( identifier )? SEMI
  ;

configuration_declarative_item
  : use_clause
  | attribute_specification
  | group_declaration
  ;

configuration_declarative_part
  : ( configuration_declarative_item )*
  ;

configuration_item
  : block_configuration
  | component_configuration
  ;

configuration_specification
  : FOR component_specification binding_indication SEMI
  ;

constant_declaration
  : CONSTANT identifier_list COLON subtype_indication
    ( VARASGN expression )? SEMI
  ;

constrained_array_definition
  : ARRAY index_constraint OF subtype_indication
  ;

constrained_nature_definition
  : ARRAY index_constraint OF subnature_indication
  ;

constraint
  : range_constraint
  | index_constraint
  ;

context_clause
  : ( context_item )*
  ;

context_item
  : library_clause
  | use_clause
  ;

delay_mechanism
  : TRANSPORT
  | ( REJECT expression )? INERTIAL
  ;

design_file
  : ( design_unit )* EOF
  ;

design_unit
  : context_clause library_unit
  ;

designator
  : identifier
  | STRING_LITERAL
  ;

direction
  : TO
  | DOWNTO
  ;

disconnection_specification
  : DISCONNECT guarded_signal_specification AFTER expression SEMI
  ;

discrete_range
  : (range)=> range
  | subtype_indication
  ;

element_association
  : ( (choices ARROW)=> choices ARROW )? expression
  ;

element_declaration
  : identifier_list COLON element_subtype_definition SEMI
  ;

element_subnature_definition
  : subnature_indication
  ;

element_subtype_definition
  : subtype_indication
  ;

entity_aspect
  : ENTITY name ( LPAREN identifier RPAREN )?
  | CONFIGURATION name
  | OPEN
  ;

entity_class
  : ENTITY
  | ARCHITECTURE
  | CONFIGURATION
  | PROCEDURE
  | FUNCTION
  | PACKAGE
  | TYPE
  | SUBTYPE
  | CONSTANT
  | SIGNAL
  | VARIABLE
  | COMPONENT
  | LABEL
  | LITERAL
  | UNITS
  | GROUP
  | FILE
  | NATURE
  | SUBNATURE
  | QUANTITY
  | TERMINAL
  ;

entity_class_entry
  : entity_class ( BOX )?
  ;

entity_class_entry_list
  : entity_class_entry ( COMMA entity_class_entry )*
  ;

entity_declaration
  : ENTITY identifier IS entity_header
    entity_declarative_part
    ( BEGIN entity_statement_part )?
    END ( ENTITY )? ( identifier )? SEMI
  ;

entity_declarative_item
  : (subprogram_declaration)=> subprogram_declaration
  | subprogram_body
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | signal_declaration
  | variable_declaration
  | file_declaration
  | alias_declaration
  | attribute_declaration
  | attribute_specification
  | disconnection_specification
  | step_limit_specification
  | use_clause
  | group_template_declaration
  | group_declaration
  | nature_declaration
  | subnature_declaration
  | quantity_declaration
  | terminal_declaration
  ;

entity_declarative_part
  : ( entity_declarative_item )*
  ;

entity_designator
  : entity_tag ( signature )?
  ;

entity_header
  : ( generic_clause )?
    ( port_clause )?
  ;

entity_name_list
  : entity_designator ( COMMA entity_designator )*
  | OTHERS
  | ALL
  ;

entity_specification
  : entity_name_list COLON entity_class
  ;

entity_statement
  : (( label_colon )? ( POSTPONED )? ASSERT)=> concurrent_assertion_statement
  | (( label_colon )? ( POSTPONED )? PROCESS)=> process_statement
  | concurrent_procedure_call_statement
  ;

entity_statement_part
  : ( entity_statement )*
  ;

entity_tag
  : identifier
  | CHARACTER_LITERAL
  | STRING_LITERAL
  ;

enumeration_literal
  : identifier
  | CHARACTER_LITERAL
  ;

enumeration_type_definition
  : LPAREN enumeration_literal ( COMMA enumeration_literal )* RPAREN
  ;

exit_statement
  : ( label_colon )? EXIT ( identifier )? ( WHEN condition )? SEMI
  ;

// NOTE that NAND/NOR are in (...)* now (used to be in (...)?).
// (21.1.2004, e.f.)
expression
  : relation ( options{greedy=true;}: logical_operator relation )*
  ;

factor
  : primary ( options{greedy=true;}: DOUBLESTAR primary )?
  | ABS primary
  | NOT primary
  ;

file_declaration
  : FILE identifier_list COLON subtype_indication
    ( file_open_information )? SEMI
  ;

file_logical_name
  : expression
  ;

file_open_information
  : ( OPEN expression )? IS file_logical_name
  ;

file_type_definition
  : FILE OF name
  ;

formal_parameter_list
  : interface_list
  ;

formal_part
  : name ( LPAREN  name RPAREN )?
  ;

free_quantity_declaration
  : QUANTITY identifier_list COLON subtype_indication
    ( VARASGN expression )? SEMI
  ;

function_call
  : name ( LPAREN actual_parameter_part RPAREN )?
  ;

generate_statement
  : label_colon generation_scheme
    GENERATE
    ( ( block_declarative_item )* BEGIN )?
    ( architecture_statement )*
    END GENERATE ( identifier )? SEMI
  ;

generation_scheme
  : FOR parameter_specification
  | IF condition
  ;

generic_clause
  : GENERIC LPAREN generic_list RPAREN SEMI
  ;

generic_list
  : interface_list
  ;

generic_map_aspect
  : GENERIC MAP LPAREN association_list RPAREN
  ;

group_constituent
  : name
  | CHARACTER_LITERAL
  ;

group_constituent_list
  : group_constituent ( COMMA group_constituent )*
  ;

group_declaration
  : GROUP label_colon name
    LPAREN group_constituent_list RPAREN SEMI
  ;

group_template_declaration
  : GROUP identifier IS LPAREN entity_class_entry_list RPAREN SEMI
  ;

guarded_signal_specification
  : signal_list COLON name
  ;

identifier
  : BASIC_IDENTIFIER
  | EXTENDED_IDENTIFIER
  ;

identifier_list
  : identifier ( COMMA identifier )*
  ;

if_statement
  : ( label_colon )? IF condition THEN
    sequence_of_statements
    ( ELSIF condition THEN sequence_of_statements )* 
    ( ELSE sequence_of_statements )?
    END IF ( identifier )? SEMI
  ;

index_constraint
  : LPAREN discrete_range ( COMMA discrete_range )* RPAREN
  ;

index_specification
  : (discrete_range)=> discrete_range
  | expression
  ;

index_subtype_definition
  : name RANGE BOX
  ;

instantiated_unit
  : ( COMPONENT )? name
  | ENTITY name ( LPAREN identifier RPAREN )?
  | CONFIGURATION name
  ;

instantiation_list
  : identifier ( COMMA identifier )*
  | OTHERS
  | ALL
  ;

interface_constant_declaration
  : ( CONSTANT )? identifier_list COLON ( IN )? subtype_indication
    ( VARASGN expression )?
  ;

interface_declaration
  : (interface_constant_declaration)=> interface_constant_declaration
  | (interface_signal_declaration)=> interface_signal_declaration
  | interface_variable_declaration
  | interface_file_declaration
  | interface_terminal_declaration
  | interface_quantity_declaration
  ;

interface_element
  : interface_declaration
  ;

interface_file_declaration
  : FILE identifier_list COLON subtype_indication
  ;

interface_list
  : interface_element ( SEMI interface_element )*
  ;

interface_quantity_declaration
  : QUANTITY identifier_list COLON ( IN | OUT )? subtype_indication
    ( VARASGN expression )?
  ;

interface_signal_declaration
  : ( SIGNAL )? identifier_list COLON ( mode )? subtype_indication
    ( BUS )? ( VARASGN expression )?
  ;

interface_terminal_declaration
  : TERMINAL identifier_list COLON subnature_indication
  ;

interface_variable_declaration
  : ( VARIABLE )? identifier_list COLON
    ( mode )? subtype_indication ( VARASGN expression )?
  ;

iteration_scheme
  : WHILE condition
  | FOR parameter_specification
  ;

label_colon
  : identifier COLON
  ;

library_clause
  : LIBRARY logical_name_list SEMI
  ;

library_unit
  : ( ARCHITECTURE | PACKAGE BODY )=> secondary_unit
  | primary_unit
  ;

literal
  : NULL
  | BIT_STRING_LITERAL
  | (DBLQUOTE)=> STRING_LITERAL
  | (enumeration_literal)=> enumeration_literal
  | numeric_literal
  ;

logical_name
  : identifier
  ;

logical_name_list
  : logical_name ( COMMA logical_name )*
  ;

logical_operator
  : AND
  | OR
  | NAND
  | NOR
  | XOR
  | XNOR
  ;

loop_statement
  : ( label_colon )? ( iteration_scheme )?
    LOOP
    sequence_of_statements 
    END LOOP ( identifier )? SEMI
  ;

mode
  : IN
  | OUT
  | INOUT
  | BUFFER
  | LINKAGE
  ;

multiplying_operator
  : MUL
  | DIV
  | MOD
  | REM
  ;


// was
//   name
//     : simple_name
//     | operator_symbol
//     | selected_name
//     | indexed_name
//     | slice_name
//     | attribute_name
//     ;
// changed to avoid left-recursion to name (from selected_name, indexed_name,
// slice_name, and attribute_name, respectively)
// (2.2.2004, e.f.)
name
  : ( identifier | STRING_LITERAL )
    ( options{greedy=true;}:
      (
          DOT suffix
        | CHARACTER_LITERAL aggregate
        | ( signature )? CHARACTER_LITERAL attribute_designator
        | (LPAREN expression ( COMMA expression )* RPAREN)=>
            LPAREN expression ( COMMA expression )* RPAREN
        | (LPAREN actual_parameter_part RPAREN)=>
            LPAREN actual_parameter_part RPAREN
        | LPAREN discrete_range ( COMMA discrete_range )* RPAREN
      )
    )*
  ;

nature_declaration
  : NATURE identifier IS nature_definition SEMI
  ;

nature_definition
  : scalar_nature_definition
  | composite_nature_definition
  ;

nature_element_declaration
  : identifier_list COLON element_subnature_definition
  ;

next_statement
  : ( label_colon )? NEXT ( identifier )? ( WHEN condition )? SEMI
  ;

numeric_literal
  : (abstract_literal)=> abstract_literal
  | physical_literal
  ;

object_declaration
  : constant_declaration
  | signal_declaration
  | variable_declaration
  | file_declaration
  | terminal_declaration
  | quantity_declaration
  ;

opts
  : ( GUARDED )? ( delay_mechanism )?
  ;

package_body
  : PACKAGE BODY identifier IS
    package_body_declarative_part
    END ( PACKAGE BODY )? ( identifier )? SEMI
  ;

package_body_declarative_item
  : (subprogram_declaration)=> subprogram_declaration
  | subprogram_body
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | variable_declaration
  | file_declaration
  | alias_declaration
  | use_clause
  | group_template_declaration
  | group_declaration
  ;

package_body_declarative_part
  : ( package_body_declarative_item )*
  ;

package_declaration
  : PACKAGE identifier IS
    package_declarative_part
    END ( PACKAGE )? ( identifier )? SEMI
  ;

package_declarative_item
  : subprogram_declaration
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | signal_declaration
  | variable_declaration
  | file_declaration
  | alias_declaration
  | component_declaration
  | attribute_declaration
  | attribute_specification
  | disconnection_specification
  | use_clause
  | group_template_declaration
  | group_declaration
  | nature_declaration
  | subnature_declaration
  | terminal_declaration
  ;

package_declarative_part
  : ( package_declarative_item )*
  ;

parameter_specification
  : identifier IN discrete_range
  ;

physical_literal
  : ( abstract_literal )? name
  ;

physical_type_definition
  : range_constraint UNITS base_unit_declaration
    ( secondary_unit_declaration )* 
    END UNITS ( identifier )?
  ;

port_clause
  : PORT LPAREN port_list RPAREN SEMI
  ;

port_list
  : interface_list
  ;

port_map_aspect
  : PORT MAP LPAREN association_list RPAREN
  ;

primary
  : (function_call)=> function_call
  | (name CHARACTER_LITERAL)=> qualified_expression
  | (LPAREN expression RPAREN)=> LPAREN expression RPAREN
  | literal
  | allocator
  | aggregate
  ;

primary_unit
  : entity_declaration
  | configuration_declaration
  | package_declaration
  ;

procedural_declarative_item
  : (subprogram_declaration)=> subprogram_declaration
  | subprogram_body
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | variable_declaration
  | alias_declaration
  | attribute_declaration
  | attribute_specification
  | use_clause
  | group_template_declaration
  | group_declaration
  ;

procedural_declarative_part
  : ( procedural_declarative_item )*
  ;

procedural_statement_part
  : ( sequential_statement )*
  ;

procedure_call
  : name ( LPAREN actual_parameter_part RPAREN )?
  ;

procedure_call_statement
  : ( label_colon )? procedure_call SEMI
  ;

process_declarative_item
  : (subprogram_declaration)=> subprogram_declaration
  | subprogram_body
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | variable_declaration
  | file_declaration
  | alias_declaration
  | attribute_declaration
  | attribute_specification
  | use_clause
  | group_template_declaration
  | group_declaration
  ;

process_declarative_part
  : ( process_declarative_item )*
  ;

process_statement
  : ( label_colon )? ( POSTPONED )? PROCESS
    ( LPAREN sensitivity_list RPAREN )? ( IS )?
    process_declarative_part
    BEGIN
    process_statement_part 
    END ( POSTPONED )? PROCESS ( identifier )? SEMI
  ;

process_statement_part
  : ( sequential_statement )*
  ;

qualified_expression
  : name CHARACTER_LITERAL ( (aggregate)=> aggregate | LPAREN expression RPAREN )
  ;

quantity_declaration
  : (free_quantity_declaration)=> free_quantity_declaration
  | (branch_quantity_declaration)=> branch_quantity_declaration
  | source_quantity_declaration
  ;

quantity_list
  : name ( COMMA name )*
  | OTHERS
  | ALL
  ;

quantity_specification
  : quantity_list COLON name
  ;

range
  : (simple_expression direction simple_expression)=>
    simple_expression direction simple_expression
  | name
  ;

range_constraint
  : RANGE range
  ;

record_nature_definition
  : RECORD ( nature_element_declaration )+
    END RECORD ( identifier )?
  ;

record_type_definition
  : RECORD ( element_declaration )+
    END RECORD ( identifier )?
  ;

relation
  : shift_expression
    ( options{greedy=true;}: relational_operator shift_expression )?
  ;

relational_operator
  : EQ
  | NEQ
  | LOWERTHAN
  | LE
  | GREATERTHAN
  | GE
  ;

report_statement
  : ( label_colon )? REPORT expression ( SEVERITY expression )? SEMI
  ;

return_statement
  : ( label_colon )? RETURN ( expression )? SEMI
  ;

scalar_nature_definition
  : name ACROSS name THROUGH name REFERENCE
  ;

scalar_type_definition
  : (range_constraint UNITS)=> physical_type_definition
  | enumeration_type_definition
  | range_constraint
  ;

secondary_unit
  : architecture_body
  | package_body
  ;

secondary_unit_declaration
  : identifier EQ physical_literal SEMI
  ;

selected_signal_assignment
  : WITH expression SELECT target LE opts selected_waveforms SEMI
  ;

selected_waveforms
  : waveform WHEN choices ( COMMA waveform WHEN choices )*
  ;

sensitivity_clause
  : ON sensitivity_list
  ;

sensitivity_list
  : name ( COMMA name )*
  ;

sequence_of_statements
  : ( sequential_statement )*
  ;

sequential_statement
  : (( label_colon )? WAIT)=> wait_statement
  | (( label_colon )? ASSERT)=> assertion_statement
  | (( label_colon )? REPORT)=> report_statement
  | (( label_colon )? target LE)=> signal_assignment_statement
  | (( label_colon )? target VARASGN)=> variable_assignment_statement
  | (( label_colon )? IF)=> if_statement
  | (( label_colon )? CASE)=> case_statement
  | (( label_colon )? ( iteration_scheme )? LOOP)=> loop_statement
  | (( label_colon )? NEXT)=> next_statement
  | (( label_colon )? EXIT)=> exit_statement
  | (( label_colon )? RETURN)=> return_statement
  | (( label_colon )? NULL SEMI)=> ( label_colon )? NULL SEMI
  | (( label_colon )? BREAK)=> break_statement
  | procedure_call_statement
  ;

shift_expression
  : simple_expression
    ( options{greedy=true;}: shift_operator simple_expression )?
  ;

shift_operator
  : SLL
  | SRL
  | SLA
  | SRA
  | ROL
  | ROR
  ;

signal_assignment_statement
  : ( label_colon )?
    target LE ( delay_mechanism )? waveform SEMI
  ;

signal_declaration
  : SIGNAL identifier_list COLON
    subtype_indication ( signal_kind )? ( VARASGN expression )? SEMI
  ;

signal_kind
  : REGISTER
  | BUS
  ;

signal_list
  : name ( COMMA name )*
  | OTHERS
  | ALL
  ;

signature
  : LBRACKET ( name ( COMMA name )* )? ( RETURN name )? RBRACKET
  ;

// NOTE that sign is applied to first operand only (LRM does not permit
// `a op -b' - use `a op (-b)' instead).
// (3.2.2004, e.f.)
simple_expression
  : ( PLUS | MINUS )? term ( options{greedy=true;}: adding_operator term )*
  ;

simple_simultaneous_statement
  : ( label_colon )?
    simple_expression ASSIGN simple_expression ( tolerance_aspect )? SEMI
  ;

simultaneous_alternative
  : WHEN choices ARROW simultaneous_statement_part
  ;

simultaneous_case_statement
  : ( label_colon )? CASE expression USE
    ( simultaneous_alternative )+ 
    END CASE ( identifier )? SEMI
  ;

simultaneous_if_statement
  : ( label_colon )? IF condition USE
    simultaneous_statement_part
    ( ELSIF condition USE simultaneous_statement_part )*
    ( ELSE simultaneous_statement_part )?
    END USE ( identifier )? SEMI
  ;

simultaneous_procedural_statement
  : ( label_colon )? PROCEDURAL ( IS )?
    procedural_declarative_part BEGIN
    procedural_statement_part 
    END PROCEDURAL ( identifier )? SEMI
  ;

simultaneous_statement
  : (( label_colon )? simple_expression ASSIGN)=> simple_simultaneous_statement
  | (( label_colon )? IF condition USE)=> simultaneous_if_statement
  | (( label_colon )? CASE expression USE)=> simultaneous_case_statement
  | (( label_colon )? PROCEDURAL ( IS )?)=> simultaneous_procedural_statement
  | ( label_colon )? NULL SEMI
  ;

simultaneous_statement_part
  : ( simultaneous_statement )*
  ;

source_aspect
  : SPECTRUM simple_expression COMMA simple_expression
  | NOISE simple_expression
  ;

source_quantity_declaration
  : QUANTITY identifier_list COLON subtype_indication source_aspect SEMI
  ;

step_limit_specification
  : LIMIT quantity_specification WITH expression SEMI
  ;

subnature_declaration
  : SUBNATURE identifier IS subnature_indication SEMI
  ;

subnature_indication
  : name ( index_constraint )? 
    ( TOLERANCE expression ACROSS expression THROUGH )?
  ;

subprogram_body
  : subprogram_specification IS
    subprogram_declarative_part
    BEGIN
    subprogram_statement_part
    END ( subprogram_kind )? ( designator )? SEMI
  ;

subprogram_declaration
  : subprogram_specification SEMI
  ;

subprogram_declarative_item
  : (subprogram_declaration)=> subprogram_declaration
  | subprogram_body
  | type_declaration
  | subtype_declaration
  | constant_declaration
  | variable_declaration
  | file_declaration
  | alias_declaration
  | attribute_declaration
  | attribute_specification
  | use_clause
  | group_template_declaration
  | group_declaration
  ;

subprogram_declarative_part
  : ( subprogram_declarative_item )*
  ;

subprogram_kind
  : PROCEDURE
  | FUNCTION
  ;

subprogram_specification
  : PROCEDURE designator ( LPAREN formal_parameter_list RPAREN )?
  | ( PURE | IMPURE )? FUNCTION designator
    ( LPAREN formal_parameter_list RPAREN )? RETURN name
  ;

subprogram_statement_part
  : ( sequential_statement )*
  ;

subtype_declaration
  : SUBTYPE identifier IS subtype_indication SEMI
  ;

// VHDLAMS 1076.1-1999 declares first name as optional. Here, second name
// is made optional to prevent antlr nondeterminism.
// (9.2.2004, e.f.)
subtype_indication
  : name ( name )? ( constraint )? ( (TOLERANCE)=> tolerance_aspect )?
  ;

suffix
  : identifier
  | CHARACTER_LITERAL
  | STRING_LITERAL
  | ALL
  ;

target
  : name
  | aggregate
  ;

term
  : factor ( options{greedy=true;}: multiplying_operator factor )*
  ;

terminal_aspect
  : name ( TO name )?
  ;

terminal_declaration
  : TERMINAL identifier_list COLON subnature_indication SEMI
  ;

through_aspect
  : identifier_list ( tolerance_aspect )? ( VARASGN expression )? THROUGH
  ;

timeout_clause
  : FOR expression
  ;

tolerance_aspect
  : TOLERANCE expression
  ;

type_declaration
  : TYPE identifier ( IS type_definition )? SEMI
  ;

type_definition
  : scalar_type_definition
  | composite_type_definition
  | access_type_definition
  | file_type_definition
  ;

unconstrained_array_definition
  : ARRAY LPAREN index_subtype_definition ( COMMA index_subtype_definition )*
    RPAREN OF subtype_indication
  ;

unconstrained_nature_definition
  : ARRAY LPAREN index_subtype_definition ( COMMA index_subtype_definition )*
    RPAREN OF subnature_indication
  ;

use_clause
  : USE name ( COMMA name )* SEMI
  ;

variable_assignment_statement
  : ( label_colon )? target VARASGN expression SEMI
  ;

variable_declaration
  : ( SHARED )? VARIABLE identifier_list COLON
    subtype_indication ( VARASGN expression )? SEMI
  ;

wait_statement
  : ( label_colon )? WAIT ( sensitivity_clause )? 
    ( condition_clause )? ( timeout_clause )? SEMI
  ;

waveform
  : waveform_element ( COMMA waveform_element )*
  | UNAFFECTED
  ;   

waveform_element
  : expression ( AFTER expression )?
  ;

//------------------------------------------Lexer-----------------------------------------
BASE_LITERAL
   :  ( '#' EXTENDED_DIGIT ( '.' EXTENDED_DIGIT )? '#' ( EXPONENT )? ) 
   // UW  {$setType(BASED_LITERAL);}
   ;
   
BIT_STRING_LITERAL
  : ( 'b' | 'o' | 'x' ) '\"' EXTENDED_DIGIT '\"'
  ;

DECIMAL_LITERAL
   :	INTEGER ( ( '.' INTEGER )? ( EXPONENT )? )
   ;

EXTENDED_DIGIT
   : INTEGER | LETTER
   ;
   
BASIC_IDENTIFIER
   :   LETTER ( '_' | LETTER | DIGIT )*
   ;
   
EXTENDED_IDENTIFIER
  : '\\' ( 'a'..'z' | '0'..'9' | '&' | '\'' | '(' | ')'
    | '+' | ',' | '-' | '.' | '/' | ':' | ';' | '<' | '=' | '>' | '|'
    | ' ' | OTHER_SPECIAL_CHARACTER | '\\'
    | '#' | '[' | ']' | '_' )+ '\\'
  ;

fragment // UW
BASE
  : INTEGER
  ;

fragment // UW
BASE_SPECIFIER
  :  'B' | 'O' | 'X'
  ;

fragment // UW
LETTER	
  :  'a'..'z' | 'A'..'Z'
  ;

COMMENT
  : '--' ( ~'\n' )* // UW {$setType(ANTLR_USE_NAMESPACE(antlr)Token::SKIP);}
  ;

TAB
  : ( '\t' )+ // UW {$setType(ANTLR_USE_NAMESPACE(antlr)Token::SKIP);}
  ;

SPACE
  : ( ' ' )+ // UW ; // UW {$setType(ANTLR_USE_NAMESPACE(antlr)Token::SKIP);}
  ;

NEWLINE
  : '\n' // UW {$setType(ANTLR_USE_NAMESPACE(antlr)Token::SKIP); newline();}
  ;

CR
  : '\r' // UW {$setType(ANTLR_USE_NAMESPACE(antlr)Token::SKIP);}
  ;
  
CHARACTER_LITERAL
   : '\'' .* '\''
   // UW {$setType(CHARACTER_LITERAL);}
   ;

STRING_LITERAL
  : '\"' .* '\"'
  // UW {$setType(STRING_LITERAL)}
  ;

OTHER_SPECIAL_CHARACTER
  : '!' | '$' | '%' | '@' | '?' | '^' | '`' | '{' | '}' | '~'
  | ' ' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  | '?' | '?' | '?' | '?' | '?' | '?' | '?' | '?'
  ;


DOUBLESTAR    : '**'  ;
ASSIGN        : '=='  ;
LE            : '<='  ;
GE            : '>='  ;
ARROW         : '=>'  ;
NEQ           : '/='  ;
VARASGN       : ':='  ;
BOX           : '<>'  ;
DBLQUOTE      : '\"'  ;
SEMI          : ';'   ;
COMMA         : ','   ;
AMPERSAND     : '&'   ;
LPAREN        : '('   ;
RPAREN        : ')'   ;
LBRACKET      : '['   ;
RBRACKET      : ']'   ;
COLON         : ':'   ;
MUL           : '*'   ;
DIV           : '/'   ;
PLUS          : '+'   ;
MINUS         : '-'   ;
LOWERTHAN     : '<'   ;
GREATERTHAN   : '>'   ;
EQ            : '='   ;
BAR           : '|'   ;
DOT           : '.'   ;
BACKSLASH     : '\\'  ;
  

EXPONENT
  :  'e' ( '+' | '-' )? INTEGER
  ;

fragment // UW
HEXDIGIT
    :	('A'..'F'|'a'..'f')
    ;  

fragment // UW
INTEGER
  :  DIGIT ( '_' | DIGIT )*
  ;
  
fragment // UW
DIGIT
  :  '0'..'9'
  ;

From parrt at cs.usfca.edu  Mon Sep 26 09:09:35 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Sep 2011 09:09:35 -0700
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
	large (public static final String[] tokenNames = new String[]
	{ ... } ; )
In-Reply-To: <4E809D7A.7000309@aol.com>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
	<4E809D7A.7000309@aol.com>
Message-ID: <C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>

Interesting. That's not that big.Only 162 strings should not merely be enough to blow out the 64k  static INIT method limit. hmm... perhaps the other arrays are the big as well.
ter
On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:

> Hello Terence,
> 
>> wow! how big is that grammar?
>> Ter
> 
> I'm trying to get the VHDL-grammar for the CSharp-target from
> Mike Lodder working with Java:
> http://www.antlr.org/grammar/1202750770887/vhdl.g
> 
> Some first, very basic modifications see attachement.
> First of all that grammar should work with ANTLRWorks 1.4.3.
> 
> Many thanks for any support
> Udo
> 
> 
>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>> 
>>> Hello,
>>> 
>>> the length of that line is 1647 chars (162 strings).
>>> The grammar is an existing one. What can/must I do?
>>> 
>>> [15:41:27] XYZParser.java:14: code too large
>>> [15:41:27]     public static final String[] tokenNames = new String[] {
>>> [15:41:27]                                  ^
>>> [15:41:27] 1 error
>>> 
>>> 
>>> Many thanks and greetings
>>> Udo
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> <vhdl__UW1a.g>


From tijet at mac.com  Mon Sep 26 09:57:01 2011
From: tijet at mac.com (Trevor John Thompson)
Date: Mon, 26 Sep 2011 09:57:01 -0700
Subject: [antlr-interest] a logo design? branding.
In-Reply-To: <D1F910C8-F547-4B3C-97F6-B048CECE9F5A@cs.usfca.edu>
References: <D1F910C8-F547-4B3C-97F6-B048CECE9F5A@cs.usfca.edu>
Message-ID: <CCD4F882-B6F6-43FC-B26B-98482925A396@mac.com>

I commend Scott Kim.

On 2011 Sep 25, at 07:59, Terence Parr wrote:

> hi.  Sam Harwell had the great idea that I should commission a logo or logos for the ANTLR project. Perhaps there is a similar and consistent logo design for the individual tools. I'm also considering a new layout and design for the website. Basically v4 will have major new functionality and I want to do some nice branding for it. Sam also recommend someone that seems very good for doing the logo design. Questionnaire I have to fill out for this designer, however, asks questions that I don't really know how to answer exactly. I thought that I should appeal to you folks in the community so that we can  hone the answers for the designer to get something nice. Here are some questions that you might know the answer to or have opinions on:
> 
> 1. what existing logos do we like and why
> 
> 2.  what logos do we dislike and why
> 
> 3. Preferred typography (heavy, light, modern, classic, handwritten etc.)  maybe we don't want text in the logo at all, but it seems like .g and .st could work in the individual tool logos. Microsoft logos for example:
> 
> 
> Here is the logo portfolio of the guy:
> 
> http://www.logoholik.com/logo_portfolio/logo_portfolio.html
> 
> any and all thoughts about branding are welcome.
> 
> Ter
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

--
Trevor John Thompson    (425) 246-4023
tijet at me.com
Quidquid Latine scriptum sit, altum videtur.


From parrt at cs.usfca.edu  Mon Sep 26 10:05:32 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Sep 2011 10:05:32 -0700
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
	large (public static final String[] tokenNames = new String[]
	{ ... } ; )
In-Reply-To: <4E80A806.8090502@aol.com>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
	<4E809D7A.7000309@aol.com>
	<C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>
	<4E80A806.8090502@aol.com>
Message-ID: <F337B245-9399-420F-9ADE-051A21A2ECBA@cs.usfca.edu>

Well, it must be that there aren't enough static arrays to cause a problem. This is a Java issue... not sure how to get around in this case. usually you can split methods and so on if they get too big.
T
On Sep 26, 2011, at 9:27 AM, Udo Weik wrote:

> Hello Terence,
> 
>> Interesting. That's not that big.Only 162 strings should not merely be enough to blow out the 64k  static INIT method limit. hmm... perhaps the other arrays are the big as well.
>> ter
> 
> I just tried to delete 'static' but of course that doesn't work:
> XYZParser.java:347: non-static variable tokenNames cannot be referenced from a static context
> So the question is - any solution for that problem?
> 
> Thanks and greetings
> Udo
> 
> 
>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
>> 
>>> Hello Terence,
>>> 
>>>> wow! how big is that grammar?
>>>> Ter
>>> 
>>> I'm trying to get the VHDL-grammar for the CSharp-target from
>>> Mike Lodder working with Java:
>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
>>> 
>>> Some first, very basic modifications see attachement.
>>> First of all that grammar should work with ANTLRWorks 1.4.3.
>>> 
>>> Many thanks for any support
>>> Udo
>>> 
>>> 
>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>>>> 
>>>>> Hello,
>>>>> 
>>>>> the length of that line is 1647 chars (162 strings).
>>>>> The grammar is an existing one. What can/must I do?
>>>>> 
>>>>> [15:41:27] XYZParser.java:14: code too large
>>>>> [15:41:27]     public static final String[] tokenNames = new String[] {
>>>>> [15:41:27]                                  ^
>>>>> [15:41:27] 1 error
>>>>> 
>>>>> 
>>>>> Many thanks and greetings
>>>>> Udo
>>>>> 
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>> 
>>> 
>>> <vhdl__UW1a.g>
>> 
> 


From WeikEngOff at aol.com  Mon Sep 26 10:06:20 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Mon, 26 Sep 2011 19:06:20 +0200
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
 large (public static final String[] tokenNames = new String[] { ... } ; )
In-Reply-To: <C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
	<4E809D7A.7000309@aol.com>
	<C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>
Message-ID: <4E80B10C.6010400@aol.com>

Hello Terence,

> Interesting. That's not that big.Only 162 strings should not merely be enough to blow out the 64k  static INIT method limit. hmm... perhaps the other arrays are the big as well.
> ter

I just tried to delete 'static' but of course that doesn't work:
XYZParser.java:347: non-static variable tokenNames cannot be referenced from a static context
So the question is - any solution for that problem?

Thanks and greetings
Udo


> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
>
>> Hello Terence,
>>
>>> wow! how big is that grammar?
>>> Ter
>>
>> I'm trying to get the VHDL-grammar for the CSharp-target from
>> Mike Lodder working with Java:
>> http://www.antlr.org/grammar/1202750770887/vhdl.g
>>
>> Some first, very basic modifications see attachement.
>> First of all that grammar should work with ANTLRWorks 1.4.3.
>>
>> Many thanks for any support
>> Udo
>>
>>
>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>>>
>>>> Hello,
>>>>
>>>> the length of that line is 1647 chars (162 strings).
>>>> The grammar is an existing one. What can/must I do?
>>>>
>>>> [15:41:27] XYZParser.java:14: code too large
>>>> [15:41:27]     public static final String[] tokenNames = new String[] {
>>>> [15:41:27]                                  ^
>>>> [15:41:27] 1 error
>>>>
>>>>
>>>> Many thanks and greetings
>>>> Udo
>>>>
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>> <vhdl__UW1a.g>
>


From researcher0x00 at gmail.com  Mon Sep 26 10:51:48 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 26 Sep 2011 13:51:48 -0400
Subject: [antlr-interest] ANTLRWorks bug: Remove Left Recursion with
	comments in grammar
Message-ID: <CAN45N13Wh6V9qF0pPNP5LRe60Xi+35fxruW0BpbgQ0fZ18fqDQ@mail.gmail.com>

grammar Ambiguious001;



string      : string Plus string

            | string Minus string

            | Digit

            ;



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;



Remove All Left Recursion or Remove Left Recursion produces

grammar Ambiguious001;



string      : (Digit) (Plus string | Minus string)*

            ;



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;



However

grammar Ambiguious001;



// Parser



string      : string Plus string

            | string Minus string

            | Digit

            ;



// Lexer



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;



Remove All Left Recursion or Remove Left Recursion produces



grammar Ambiguious001;



// Parser



string      : (Digit

            ;) (Plus string | Minus string)*



// Lexer



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;

  It's the first time I have ever had an error wink at me.

Eric

From researcher0x00 at gmail.com  Mon Sep 26 11:05:33 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 26 Sep 2011 14:05:33 -0400
Subject: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left Recursion with
	comments in grammar
In-Reply-To: <CAN45N13Wh6V9qF0pPNP5LRe60Xi+35fxruW0BpbgQ0fZ18fqDQ@mail.gmail.com>
References: <CAN45N13Wh6V9qF0pPNP5LRe60Xi+35fxruW0BpbgQ0fZ18fqDQ@mail.gmail.com>
Message-ID: <CAN45N10ekMga5QLk+s6zJM35xZ-rNzzH2+cof6yChnF7qOXo6g@mail.gmail.com>

I forgot to give credit where credit is due.

This grammar is from

Aho, A. V., Lam, M. S., Sethi, R., & Ullman, J. D. (2007) Compilers:
principles, techniques, & tools (2nd ed.). Boston: Pearson/Addison Wesley.
pg. 47, Example 2.5





---------- Forwarded message ----------
From: The Researcher <researcher0x00 at gmail.com>
Date: Mon, Sep 26, 2011 at 1:51 PM
Subject: ANTLRWorks bug: Remove Left Recursion with comments in grammar
To: antlr-interest at antlr.org


grammar Ambiguious001;



string      : string Plus string

            | string Minus string

            | Digit

            ;



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;



Remove All Left Recursion or Remove Left Recursion produces

grammar Ambiguious001;



string      : (Digit) (Plus string | Minus string)*

            ;



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;



However

grammar Ambiguious001;



// Parser



string      : string Plus string

            | string Minus string

            | Digit

            ;



// Lexer



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;



Remove All Left Recursion or Remove Left Recursion produces



grammar Ambiguious001;



// Parser



string      : (Digit

            ;) (Plus string | Minus string)*



// Lexer



Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

Minus       : '-' ;

Plus        : '+' ;

  It's the first time I have ever had an error wink at me.

Eric

From jamevaalet at gmail.com  Mon Sep 26 12:02:43 2011
From: jamevaalet at gmail.com (jame vaalet)
Date: Tue, 27 Sep 2011 00:32:43 +0530
Subject: [antlr-interest] changes not reflecting in antlrWorks debugger
Message-ID: <CAHGxz8a_WBT3xX2xdSvKu8BrS+hJOUp-tX6Yr_2-_dMaxetLWg@mail.gmail.com>

hi,
 am using antlrWorks 1.4.3 with csharp2 as target language. but when i debug
its using the old grammar.g rather than the latest grammar.g .
can someone help me out in here  ??

-- 

-JAME

From vlad at demoninsight.com  Mon Sep 26 12:36:41 2011
From: vlad at demoninsight.com (Vlad)
Date: Mon, 26 Sep 2011 15:36:41 -0400
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
	large (public static final String[] tokenNames = new String[]
	{ ... } ; )
In-Reply-To: <4E80B10C.6010400@aol.com>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
	<4E809D7A.7000309@aol.com>
	<C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>
	<4E80B10C.6010400@aol.com>
Message-ID: <D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19@demoninsight.com>

Java .class file format has a specification limit such that any bytecode method must not be more than 64k bytes. If this limit is violated (normally only happens with auto-generated code) you'll see the compiler error you have.

Although it is not very common knowledge, any java code of the form

... static final SomeType SOME_FIELD = <some exp>

is equivalent to the following:

a declaration of 

... static final SomeType SOME_FIELD;

combined with bytecode to compute <some exp> and assign it to SOME_FIELD, performed inside a special method named '<clinit>' at class loading time. It is the same method that also collects anything you put in a static { } block. I had a look at the .java files you see generated from your grammer and there is absolutely a ton of public static finals that require such <clinit> code: some 1300 FOLLOW_... BitSets, tokenNames, ruleNames, etc. 

All of those static field init bytecodes end up in <clinit> and cause size overflow. It seems to me that hitting the 64K limit can happen for any reasonably large grammar ("large" defined not just in terms of token count, but also the number of rules, etc). 

To address this issue at the fundamental level, ANTLR need to alter its .java code emission strategy. Perhaps map rules to static methods of static nested classes instead of lumping everything into a single .class definition. Nested classes in Java are compiled into separate .class definitions, each with it own <clinit>.

HTH,
Vlad

On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:

> Hello Terence,
> 
>> Interesting. That's not that big.Only 162 strings should not merely be enough to blow out the 64k  static INIT method limit. hmm... perhaps the other arrays are the big as well.
>> ter
> 
> I just tried to delete 'static' but of course that doesn't work:
> XYZParser.java:347: non-static variable tokenNames cannot be referenced from a static context
> So the question is - any solution for that problem?
> 
> Thanks and greetings
> Udo
> 
> 
>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
>> 
>>> Hello Terence,
>>> 
>>>> wow! how big is that grammar?
>>>> Ter
>>> 
>>> I'm trying to get the VHDL-grammar for the CSharp-target from
>>> Mike Lodder working with Java:
>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
>>> 
>>> Some first, very basic modifications see attachement.
>>> First of all that grammar should work with ANTLRWorks 1.4.3.
>>> 
>>> Many thanks for any support
>>> Udo
>>> 
>>> 
>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>>>> 
>>>>> Hello,
>>>>> 
>>>>> the length of that line is 1647 chars (162 strings).
>>>>> The grammar is an existing one. What can/must I do?
>>>>> 
>>>>> [15:41:27] XYZParser.java:14: code too large
>>>>> [15:41:27]     public static final String[] tokenNames = new String[] {
>>>>> [15:41:27]                                  ^
>>>>> [15:41:27] 1 error
>>>>> 
>>>>> 
>>>>> Many thanks and greetings
>>>>> Udo
>>>>> 
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>> 
>>> 
>>> <vhdl__UW1a.g>
>> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From s.barnett-cormack at lancaster.ac.uk  Mon Sep 26 12:57:59 2011
From: s.barnett-cormack at lancaster.ac.uk (Sam Barnett-Cormack)
Date: Mon, 26 Sep 2011 20:57:59 +0100
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
 large (public static final String[] tokenNames = new String[] { ... } ; )
In-Reply-To: <D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19@demoninsight.com>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
	<4E809D7A.7000309@aol.com>
	<C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>
	<4E80B10C.6010400@aol.com>
	<D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19@demoninsight.com>
Message-ID: <4E80D947.7070305@lancaster.ac.uk>

The possibility of static nested classes had also occured to me as a way 
of breaking up the otherwise-huge static initialisation code being 
produced. For things like the followsets, it might be beneficial to look 
at the architecture of the generated code to see if there's any possible 
benefit to defining an abstract class these static nested classes could 
inherit from.

Another possibility would be removing these large static data structures 
from the source entirely, and instead emitting some extra files that 
define them and that are read in by the generated code. Java resource 
loading semantics mean that files located with the class files are easy 
to load at run-time. A readable format could even be used to make it 
easier for humans to understand the code (and supporting data) that are 
generated.

Sam

On 26/09/2011 20:36, Vlad wrote:
> Java .class file format has a specification limit such that any bytecode method must not be more than 64k bytes. If this limit is violated (normally only happens with auto-generated code) you'll see the compiler error you have.
>
> Although it is not very common knowledge, any java code of the form
>
> ... static final SomeType SOME_FIELD =<some exp>
>
> is equivalent to the following:
>
> a declaration of
>
> ... static final SomeType SOME_FIELD;
>
> combined with bytecode to compute<some exp>  and assign it to SOME_FIELD, performed inside a special method named '<clinit>' at class loading time. It is the same method that also collects anything you put in a static { } block. I had a look at the .java files you see generated from your grammer and there is absolutely a ton of public static finals that require such<clinit>  code: some 1300 FOLLOW_... BitSets, tokenNames, ruleNames, etc.
>
> All of those static field init bytecodes end up in<clinit>  and cause size overflow. It seems to me that hitting the 64K limit can happen for any reasonably large grammar ("large" defined not just in terms of token count, but also the number of rules, etc).
>
> To address this issue at the fundamental level, ANTLR need to alter its .java code emission strategy. Perhaps map rules to static methods of static nested classes instead of lumping everything into a single .class definition. Nested classes in Java are compiled into separate .class definitions, each with it own<clinit>.
>
> HTH,
> Vlad
>
> On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
>
>> Hello Terence,
>>
>>> Interesting. That's not that big.Only 162 strings should not merely be enough to blow out the 64k  static INIT method limit. hmm... perhaps the other arrays are the big as well.
>>> ter
>>
>> I just tried to delete 'static' but of course that doesn't work:
>> XYZParser.java:347: non-static variable tokenNames cannot be referenced from a static context
>> So the question is - any solution for that problem?
>>
>> Thanks and greetings
>> Udo
>>
>>
>>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
>>>
>>>> Hello Terence,
>>>>
>>>>> wow! how big is that grammar?
>>>>> Ter
>>>>
>>>> I'm trying to get the VHDL-grammar for the CSharp-target from
>>>> Mike Lodder working with Java:
>>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
>>>>
>>>> Some first, very basic modifications see attachement.
>>>> First of all that grammar should work with ANTLRWorks 1.4.3.
>>>>
>>>> Many thanks for any support
>>>> Udo
>>>>
>>>>
>>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>>>>>
>>>>>> Hello,
>>>>>>
>>>>>> the length of that line is 1647 chars (162 strings).
>>>>>> The grammar is an existing one. What can/must I do?
>>>>>>
>>>>>> [15:41:27] XYZParser.java:14: code too large
>>>>>> [15:41:27]     public static final String[] tokenNames = new String[] {
>>>>>> [15:41:27]                                  ^
>>>>>> [15:41:27] 1 error
>>>>>>
>>>>>>
>>>>>> Many thanks and greetings
>>>>>> Udo
>>>>>>
>>>>>>
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>> <vhdl__UW1a.g>
>>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From WeikEngOff at aol.com  Mon Sep 26 13:07:45 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Mon, 26 Sep 2011 22:07:45 +0200
Subject: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14: code too
 large (public static final String[] tokenNames = new String[] { ... } ; )
In-Reply-To: <D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19@demoninsight.com>
References: <4E80830C.5020909@aol.com>
	<ACC99F1C-309B-4405-B851-8D36506D2462@cs.usfca.edu>
	<4E809D7A.7000309@aol.com>
	<C10C54EF-549C-4B6C-AE1C-040C048B45C2@cs.usfca.edu>
	<4E80B10C.6010400@aol.com>
	<D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19@demoninsight.com>
Message-ID: <4E80DB91.4060209@aol.com>

Hello Vlad,

many thanks for your really valuable analysis.

@Terence:
The ball's in your court!


Greetings
Udo

> Java .class file format has a specification limit such that any bytecode method must not be more than 64k bytes. If this limit is violated (normally only happens with auto-generated code) you'll see the compiler error you have.
>
> Although it is not very common knowledge, any java code of the form
>
> ... static final SomeType SOME_FIELD =<some exp>
>
> is equivalent to the following:
>
> a declaration of
>
> ... static final SomeType SOME_FIELD;
>
> combined with bytecode to compute<some exp>  and assign it to SOME_FIELD, performed inside a special method named '<clinit>' at class loading time. It is the same method that also collects anything you put in a static { } block. I had a look at the .java files you see generated from your grammer and there is absolutely a ton of public static finals that require such<clinit>  code: some 1300 FOLLOW_... BitSets, tokenNames, ruleNames, etc.
>
> All of those static field init bytecodes end up in<clinit>  and cause size overflow. It seems to me that hitting the 64K limit can happen for any reasonably large grammar ("large" defined not just in terms of token count, but also the number of rules, etc).
>
> To address this issue at the fundamental level, ANTLR need to alter its .java code emission strategy. Perhaps map rules to static methods of static nested classes instead of lumping everything into a single .class definition. Nested classes in Java are compiled into separate .class definitions, each with it own<clinit>.
>
> HTH,
> Vlad
>
> On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
>
>> Hello Terence,
>>
>>> Interesting. That's not that big.Only 162 strings should not merely be enough to blow out the 64k  static INIT method limit. hmm... perhaps the other arrays are the big as well.
>>> ter
>>
>> I just tried to delete 'static' but of course that doesn't work:
>> XYZParser.java:347: non-static variable tokenNames cannot be referenced from a static context
>> So the question is - any solution for that problem?
>>
>> Thanks and greetings
>> Udo
>>
>>
>>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
>>>
>>>> Hello Terence,
>>>>
>>>>> wow! how big is that grammar?
>>>>> Ter
>>>>
>>>> I'm trying to get the VHDL-grammar for the CSharp-target from
>>>> Mike Lodder working with Java:
>>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
>>>>
>>>> Some first, very basic modifications see attachement.
>>>> First of all that grammar should work with ANTLRWorks 1.4.3.
>>>>
>>>> Many thanks for any support
>>>> Udo
>>>>
>>>>
>>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
>>>>>
>>>>>> Hello,
>>>>>>
>>>>>> the length of that line is 1647 chars (162 strings).
>>>>>> The grammar is an existing one. What can/must I do?
>>>>>>
>>>>>> [15:41:27] XYZParser.java:14: code too large
>>>>>> [15:41:27]     public static final String[] tokenNames = new String[] {
>>>>>> [15:41:27]                                  ^
>>>>>> [15:41:27] 1 error
>>>>>>
>>>>>>
>>>>>> Many thanks and greetings
>>>>>> Udo
>>>>>>
>>>>>>
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>> <vhdl__UW1a.g>
>>>
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>


From parrt at cs.usfca.edu  Mon Sep 26 15:50:11 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 26 Sep 2011 15:50:11 -0700
Subject: [antlr-interest] [stringtemplate-interest] a logo design?
	branding.
In-Reply-To: <CACJVtdOnyWSS_7k3zLdmZnqaTf83w2CTDnKw7=K2WRMFwf9+kQ@mail.gmail.com>
References: <D1F910C8-F547-4B3C-97F6-B048CECE9F5A@cs.usfca.edu>
	<CACJVtdOnyWSS_7k3zLdmZnqaTf83w2CTDnKw7=K2WRMFwf9+kQ@mail.gmail.com>
Message-ID: <93E1364E-AF32-4CF2-8E44-358BF9DB743B@cs.usfca.edu>

Thanks for the feedback!
Ter
On Sep 25, 2011, at 10:12 PM, Michael Bedward wrote:

> The correct answer is "you're the designer - you tell me".
> 
> My fall back answers are:
> 
>> 1. what existing logos do we like and why
> 
> GeoTools: compass / spanner logo (http://geotools.org/) because it's a
> simple and informative pun
> 
> TED: big red letters (http://www.ted.com/) because it's obvious and memorable
> 
> ScapeToad: toad logo (http://scapetoad.choros.ch/) because it's
> ridiculous with a certain elegance
> 
> R (http://www.r-project.org/) because you just say Rrrr...
> 
>> 2.  what logos do we dislike and why
> 
> Sonatype: horizontal bars and thin font (http://www.sonatype.com/)
> because it looks corporate and boring
> 
> ESRI globe in grid (http://www.esri.com/) because it looks like they
> want to take the world prisoner
> 
> Old Sun logo (as seen at:
> http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/JAITOC.fm.html)
> because it's on the wrong side of the line between clever and wanky
> 
> NetBeans: box figure and name (http://netbeans.org/) because what are
> you supposed to do with an empty box ?
> 
>> 3. Preferred typography
> 
> Either elegant or in your face, but not script (usually lacks
> immediacy) or very angular / geometric (e.g. the font used for the
> Oracle logo which looks fascist - though perhaps that's just my
> prejudice shining through).
> 
> Michael
> 
> 
> On 26 September 2011 00:59, Terence Parr <parrt at cs.usfca.edu> wrote:
>> hi.  Sam Harwell had the great idea that I should commission a logo or logos for the ANTLR project. Perhaps there is a similar and consistent logo design for the individual tools. I'm also considering a new layout and design for the website. Basically v4 will have major new functionality and I want to do some nice branding for it. Sam also recommend someone that seems very good for doing the logo design. Questionnaire I have to fill out for this designer, however, asks questions that I don't really know how to answer exactly. I thought that I should appeal to you folks in the community so that we can  hone the answers for the designer to get something nice. Here are some questions that you might know the answer to or have opinions on:
>> 
>> 1. what existing logos do we like and why
>> 
>> 2.  what logos do we dislike and why
>> 
>> 3. Preferred typography (heavy, light, modern, classic, handwritten etc.)  maybe we don't want text in the logo at all, but it seems like .g and .st could work in the individual tool logos. Microsoft logos for example:
>> 
>> 
>> Here is the logo portfolio of the guy:
>> 
>> http://www.logoholik.com/logo_portfolio/logo_portfolio.html
>> 
>>  any and all thoughts about branding are welcome.
>> 
>> Ter
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> _______________________________________________
> stringtemplate-interest mailing list
> stringtemplate-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/stringtemplate-interest


From cummings at kjchome.homeip.net  Mon Sep 26 18:54:33 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Mon, 26 Sep 2011 21:54:33 -0400
Subject: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left Recursion
 with comments in grammar
In-Reply-To: <CAN45N10ekMga5QLk+s6zJM35xZ-rNzzH2+cof6yChnF7qOXo6g@mail.gmail.com>
References: <CAN45N13Wh6V9qF0pPNP5LRe60Xi+35fxruW0BpbgQ0fZ18fqDQ@mail.gmail.com>
	<CAN45N10ekMga5QLk+s6zJM35xZ-rNzzH2+cof6yChnF7qOXo6g@mail.gmail.com>
Message-ID: <4E812CD9.3000008@kjchome.homeip.net>

I'm confused.  If you have:

string : string Plus string
       | string Minus string
       | Digit
       ;

and you remove left recursion, why don't you end up with:

string : Digit ( Plus Digit | Minus Digit )*
       ;

And, yes, the error message with the ";" in it is amusing.

On 09/26/2011 02:05 PM, The Researcher wrote:
> I forgot to give credit where credit is due.
> 
> This grammar is from
> 
> Aho, A. V., Lam, M. S., Sethi, R., & Ullman, J. D. (2007) Compilers:
> principles, techniques, & tools (2nd ed.). Boston: Pearson/Addison Wesley.
> pg. 47, Example 2.5
> 
> 
> 
> 
> 
> ---------- Forwarded message ----------
> From: The Researcher <researcher0x00 at gmail.com>
> Date: Mon, Sep 26, 2011 at 1:51 PM
> Subject: ANTLRWorks bug: Remove Left Recursion with comments in grammar
> To: antlr-interest at antlr.org
> 
> 
> grammar Ambiguious001;
> 
> 
> 
> string      : string Plus string
> 
>             | string Minus string
> 
>             | Digit
> 
>             ;
> 
> 
> 
> Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> 
> Minus       : '-' ;
> 
> Plus        : '+' ;
> 
> 
> 
> Remove All Left Recursion or Remove Left Recursion produces
> 
> grammar Ambiguious001;
> 
> 
> 
> string      : (Digit) (Plus string | Minus string)*
> 
>             ;
> 
> 
> 
> Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> 
> Minus       : '-' ;
> 
> Plus        : '+' ;
> 
> 
> 
> However
> 
> grammar Ambiguious001;
> 
> 
> 
> // Parser
> 
> 
> 
> string      : string Plus string
> 
>             | string Minus string
> 
>             | Digit
> 
>             ;
> 
> 
> 
> // Lexer
> 
> 
> 
> Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> 
> Minus       : '-' ;
> 
> Plus        : '+' ;
> 
> 
> 
> Remove All Left Recursion or Remove Left Recursion produces
> 
> 
> 
> grammar Ambiguious001;
> 
> 
> 
> // Parser
> 
> 
> 
> string      : (Digit
> 
>             ;) (Plus string | Minus string)*
> 
> 
> 
> // Lexer
> 
> 
> 
> Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> 
> Minus       : '-' ;
> 
> Plus        : '+' ;
> 
>   It's the first time I have ever had an error wink at me.
> 
> Eric
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://www.xlinuxcounter.net/)

From gary at sumwise.com  Mon Sep 26 19:53:17 2011
From: gary at sumwise.com (Gary Miller)
Date: Tue, 27 Sep 2011 12:53:17 +1000
Subject: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left Recursion
 with comments in grammar
In-Reply-To: <4E812CD9.3000008@kjchome.homeip.net>
References: <CAN45N13Wh6V9qF0pPNP5LRe60Xi+35fxruW0BpbgQ0fZ18fqDQ@mail.gmail.com>
	<CAN45N10ekMga5QLk+s6zJM35xZ-rNzzH2+cof6yChnF7qOXo6g@mail.gmail.com>
	<4E812CD9.3000008@kjchome.homeip.net>
Message-ID: <CAFCNb3hKcjXNfv9UyU-+-AXZN96OEfrukvYCmW-k_-KQwj27Aw@mail.gmail.com>

What version of are you using?
I've tried with 3.2 and 3.4 and get very boring error messages.

eg 3.2 gives
9:12: syntax error: antlr: <notsaved>:9:12: expecting RPAREN, found ';'

From lifesting at gmail.com  Mon Sep 26 20:38:46 2011
From: lifesting at gmail.com (Chan David)
Date: Tue, 27 Sep 2011 11:38:46 +0800
Subject: [antlr-interest] Best practices to insert breakpoint when
	generating code?
Message-ID: <CAF_ThcLgLcgebMEYd+G5uWVSqoDFtyy-2w3NEhm62wxwjYaoiA@mail.gmail.com>

Hi, Antlr fellows:

I wrote a simple parser and a weak runtime to make a prototype of our DSL. I
followed the de-facto definition steps:


   1. Define a lex grammar to describe tokens.
   2. Define a parser grammar to describe syntax and build an AST.
   3. Define a tree grammar to genereate DSL source code via StringTemplate
   which includes my hand-written execution code as runtime.

Now I want to run this DSL code in Eclipse directly. So I must let DSL
support debugging.  I must embbed a hook function in every start of a
statement. I named this function 'breakpoint', it need a line number as
argument.

For example, there's a "x=1" statement in my DSL where AST is ^(ASSIGN, x,
1) . I insert a function like below:

assignStmt @init{
  breakpoint(Problem: how to get line number here?);
} :  ^(ASSIGN, ID, INT) {
 .....//Omitted
}

I don't know how to get line number at the start of a statement, further, I
doubt whether this method is correct.

Thank for you help!

From ruslan_zasukhin at valentina-db.com  Tue Sep 27 02:16:51 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Tue, 27 Sep 2011 12:16:51 +0300
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
Message-ID: <CAA76F33.F2983%ruslan_zasukhin@valentina-db.com>

Hi All,

===== TASK ======

In SQL we must be able write
      SELECT 'aaa' 'bbbb'

And this should be same as
      SELECT 'aaabbbb'

I.e. Parser must concatenate literals self.
This was quite easy do in ANTLR 2,
and I already have kill 5-6 hours in ANTLR 3.  :-((((((


I have try many tricks for ANTLR3 itself trying to use its tokens and
ANTLR_STRING class but no luck.

Finally I have give up and have try to use simple code as in v2 using
STD::string as place to accumulate literal.

=================================
character_string_literal
@init{ 
    STD::string st;
}
    :    ( STRING_LITERAL
            { 
                st.append(
                    (const char*) $STRING_LITERAL.text->chars,
                    $STRING_LITERAL.text->len );
            } 
        )+
            -> ^( CONST_STR[ st.c_str() ] )
    ;    
=================================

But this not works, because new Token object stores just pointer

        newToken->textState        = ANTLR3_TEXT_CHARP;
        newToken->tokText.chars = (pANTLR3_UCHAR)text;
 
And as only STD::string dies we get problem.


Jim, how this simple task can be solved in the C TARGET ?

Also I see that for Java code they can contruct dynamic text
And produce token using that text. For example on this page

http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

                            -> ^('+' $p INT[String.valueOf($a.int+$b.int)])


But C target tryies to work only which char*


I guess that ANTLR_STRING setText() can help me,
But I cannot see how I can call that from my

            -> ^( CONST_STR[ st.c_str() ] )

???

Thank you for points ...


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From researcher0x00 at gmail.com  Tue Sep 27 03:45:54 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 27 Sep 2011 06:45:54 -0400
Subject: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left Recursion
 with comments in grammar
In-Reply-To: <CAFCNb3hKcjXNfv9UyU-+-AXZN96OEfrukvYCmW-k_-KQwj27Aw@mail.gmail.com>
References: <CAN45N13Wh6V9qF0pPNP5LRe60Xi+35fxruW0BpbgQ0fZ18fqDQ@mail.gmail.com>
	<CAN45N10ekMga5QLk+s6zJM35xZ-rNzzH2+cof6yChnF7qOXo6g@mail.gmail.com>
	<4E812CD9.3000008@kjchome.homeip.net>
	<CAFCNb3hKcjXNfv9UyU-+-AXZN96OEfrukvYCmW-k_-KQwj27Aw@mail.gmail.com>
Message-ID: <CAN45N12sF0t7mfWaPy3ZB3OuBh-iJxswbPvtJOcgTozOdY4rFg@mail.gmail.com>

On Mon, Sep 26, 2011 at 10:53 PM, Gary Miller <gary at sumwise.com> wrote:

> What version of are you using?
> I've tried with 3.2 and 3.4 and get very boring error messages.
>
> eg 3.2 gives
> 9:12: syntax error: antlr: <notsaved>:9:12: expecting RPAREN, found ';'
>

This is done using ANTLRWorks. See attached screenshots.

Eric
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Left Recursion Refactor Bug ANTLRWorks 1.4.2.png
Type: image/png
Size: 101799 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110927/fa1e68c4/attachment-0002.png 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Left Recursion Refactor Bug ANTLRWorks 1.4.3.png
Type: image/png
Size: 144985 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110927/fa1e68c4/attachment-0003.png 

From mandanna.thekkada at gmail.com  Tue Sep 27 10:27:48 2011
From: mandanna.thekkada at gmail.com (mandanna thekkada)
Date: Tue, 27 Sep 2011 22:57:48 +0530
Subject: [antlr-interest] antlr-interest Digest, Vol 82, Issue 22
In-Reply-To: <mailman.2059.1317134452.3152.antlr-interest@antlr.org>
References: <mailman.2059.1317134452.3152.antlr-interest@antlr.org>
Message-ID: <CANc89oSdW+rr0Wrz-2vrRypfiAUBPVLFUDrM8tHJrF2=FK7nCA@mail.gmail.com>

Hello Terence,

I am trying to make to C grammar work as an android project. I've created
the C target , but when building I've obtained most of the libraries from
the FishEye source website as mentioned in the downloads page of
antlr.orgexcept for "antlrconfig.h" . Any ideas on how to fix this??

Regards,
Mandanna

On Tue, Sep 27, 2011 at 8:10 PM, <antlr-interest-request at antlr.org> wrote:

> Send antlr-interest mailing list submissions to
>        antlr-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
>        antlr-interest-request at antlr.org
>
> You can reach the person managing the list at
>        antlr-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>   1. changes not reflecting in antlrWorks debugger (jame vaalet)
>   2. Re: ANTLRWorks 1.4.3: XYZParser.java:14: code too large
>      (public static final String[] tokenNames = new String[]   { ... } ;
>      ) (Vlad)
>   3. Re: ANTLRWorks 1.4.3: XYZParser.java:14: code too large
>      (public static final String[] tokenNames = new String[] { ... } ;
>      ) (Sam Barnett-Cormack)
>   4. Re: ANTLRWorks 1.4.3: XYZParser.java:14: code too large
>      (public static final String[] tokenNames = new String[] { ... } ;
>      ) (Udo Weik)
>   5. Re: [stringtemplate-interest] a logo design?      branding.
>      (Terence Parr)
>   6. Re: Fwd: ANTLRWorks bug: Remove Left Recursion with comments
>      in grammar (Kevin J. Cummings)
>   7. Re: Fwd: ANTLRWorks bug: Remove Left Recursion with comments
>      in grammar (Gary Miller)
>   8. Best practices to insert breakpoint when  generating code?
>      (Chan David)
>   9. [C] code to change Token type, use char* and loose data when
>      buffer destroyed (Ruslan Zasukhin)
>  10. Re: Fwd: ANTLRWorks bug: Remove Left Recursion with comments
>      in grammar (The Researcher)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 27 Sep 2011 00:32:43 +0530
> From: jame vaalet <jamevaalet at gmail.com>
> Subject: [antlr-interest] changes not reflecting in antlrWorks
>        debugger
> To: antlr-interest at antlr.org
> Message-ID:
>        <CAHGxz8a_WBT3xX2xdSvKu8BrS+hJOUp-tX6Yr_2-_dMaxetLWg at mail.gmail.com
> >
> Content-Type: text/plain; charset=ISO-8859-1
>
> hi,
>  am using antlrWorks 1.4.3 with csharp2 as target language. but when i
> debug
> its using the old grammar.g rather than the latest grammar.g .
> can someone help me out in here  ??
>
> --
>
> -JAME
>
>
> ------------------------------
>
> Message: 2
> Date: Mon, 26 Sep 2011 15:36:41 -0400
> From: Vlad <vlad at demoninsight.com>
> Subject: Re: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14:
>        code too        large (public static final String[] tokenNames = new
> String[]
>        { ... } ; )
> To: Udo Weik <WeikEngOff at aol.com>
> Cc: "Antlr-Interest Antlr.Org" <antlr-interest at antlr.org>
> Message-ID: <D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19 at demoninsight.com>
> Content-Type: text/plain; charset=us-ascii
>
> Java .class file format has a specification limit such that any bytecode
> method must not be more than 64k bytes. If this limit is violated (normally
> only happens with auto-generated code) you'll see the compiler error you
> have.
>
> Although it is not very common knowledge, any java code of the form
>
> ... static final SomeType SOME_FIELD = <some exp>
>
> is equivalent to the following:
>
> a declaration of
>
> ... static final SomeType SOME_FIELD;
>
> combined with bytecode to compute <some exp> and assign it to SOME_FIELD,
> performed inside a special method named '<clinit>' at class loading time. It
> is the same method that also collects anything you put in a static { }
> block. I had a look at the .java files you see generated from your grammer
> and there is absolutely a ton of public static finals that require such
> <clinit> code: some 1300 FOLLOW_... BitSets, tokenNames, ruleNames, etc.
>
> All of those static field init bytecodes end up in <clinit> and cause size
> overflow. It seems to me that hitting the 64K limit can happen for any
> reasonably large grammar ("large" defined not just in terms of token count,
> but also the number of rules, etc).
>
> To address this issue at the fundamental level, ANTLR need to alter its
> .java code emission strategy. Perhaps map rules to static methods of static
> nested classes instead of lumping everything into a single .class
> definition. Nested classes in Java are compiled into separate .class
> definitions, each with it own <clinit>.
>
> HTH,
> Vlad
>
> On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
>
> > Hello Terence,
> >
> >> Interesting. That's not that big.Only 162 strings should not merely be
> enough to blow out the 64k  static INIT method limit. hmm... perhaps the
> other arrays are the big as well.
> >> ter
> >
> > I just tried to delete 'static' but of course that doesn't work:
> > XYZParser.java:347: non-static variable tokenNames cannot be referenced
> from a static context
> > So the question is - any solution for that problem?
> >
> > Thanks and greetings
> > Udo
> >
> >
> >> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
> >>
> >>> Hello Terence,
> >>>
> >>>> wow! how big is that grammar?
> >>>> Ter
> >>>
> >>> I'm trying to get the VHDL-grammar for the CSharp-target from
> >>> Mike Lodder working with Java:
> >>> http://www.antlr.org/grammar/1202750770887/vhdl.g
> >>>
> >>> Some first, very basic modifications see attachement.
> >>> First of all that grammar should work with ANTLRWorks 1.4.3.
> >>>
> >>> Many thanks for any support
> >>> Udo
> >>>
> >>>
> >>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
> >>>>
> >>>>> Hello,
> >>>>>
> >>>>> the length of that line is 1647 chars (162 strings).
> >>>>> The grammar is an existing one. What can/must I do?
> >>>>>
> >>>>> [15:41:27] XYZParser.java:14: code too large
> >>>>> [15:41:27]     public static final String[] tokenNames = new String[]
> {
> >>>>> [15:41:27]                                  ^
> >>>>> [15:41:27] 1 error
> >>>>>
> >>>>>
> >>>>> Many thanks and greetings
> >>>>> Udo
> >>>>>
> >>>>>
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>
> >>>
> >>> <vhdl__UW1a.g>
> >>
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 26 Sep 2011 20:57:59 +0100
> From: Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk>
> Subject: Re: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14:
>        code too large (public static final String[] tokenNames = new
> String[]
>        { ... } ; )
> To: Vlad <vlad at demoninsight.com>
> Cc: "Antlr-Interest Antlr.Org" <antlr-interest at antlr.org>
> Message-ID: <4E80D947.7070305 at lancaster.ac.uk>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> The possibility of static nested classes had also occured to me as a way
> of breaking up the otherwise-huge static initialisation code being
> produced. For things like the followsets, it might be beneficial to look
> at the architecture of the generated code to see if there's any possible
> benefit to defining an abstract class these static nested classes could
> inherit from.
>
> Another possibility would be removing these large static data structures
> from the source entirely, and instead emitting some extra files that
> define them and that are read in by the generated code. Java resource
> loading semantics mean that files located with the class files are easy
> to load at run-time. A readable format could even be used to make it
> easier for humans to understand the code (and supporting data) that are
> generated.
>
> Sam
>
> On 26/09/2011 20:36, Vlad wrote:
> > Java .class file format has a specification limit such that any bytecode
> method must not be more than 64k bytes. If this limit is violated (normally
> only happens with auto-generated code) you'll see the compiler error you
> have.
> >
> > Although it is not very common knowledge, any java code of the form
> >
> > ... static final SomeType SOME_FIELD =<some exp>
> >
> > is equivalent to the following:
> >
> > a declaration of
> >
> > ... static final SomeType SOME_FIELD;
> >
> > combined with bytecode to compute<some exp>  and assign it to SOME_FIELD,
> performed inside a special method named '<clinit>' at class loading time. It
> is the same method that also collects anything you put in a static { }
> block. I had a look at the .java files you see generated from your grammer
> and there is absolutely a ton of public static finals that require
> such<clinit>  code: some 1300 FOLLOW_... BitSets, tokenNames, ruleNames,
> etc.
> >
> > All of those static field init bytecodes end up in<clinit>  and cause
> size overflow. It seems to me that hitting the 64K limit can happen for any
> reasonably large grammar ("large" defined not just in terms of token count,
> but also the number of rules, etc).
> >
> > To address this issue at the fundamental level, ANTLR need to alter its
> .java code emission strategy. Perhaps map rules to static methods of static
> nested classes instead of lumping everything into a single .class
> definition. Nested classes in Java are compiled into separate .class
> definitions, each with it own<clinit>.
> >
> > HTH,
> > Vlad
> >
> > On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
> >
> >> Hello Terence,
> >>
> >>> Interesting. That's not that big.Only 162 strings should not merely be
> enough to blow out the 64k  static INIT method limit. hmm... perhaps the
> other arrays are the big as well.
> >>> ter
> >>
> >> I just tried to delete 'static' but of course that doesn't work:
> >> XYZParser.java:347: non-static variable tokenNames cannot be referenced
> from a static context
> >> So the question is - any solution for that problem?
> >>
> >> Thanks and greetings
> >> Udo
> >>
> >>
> >>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
> >>>
> >>>> Hello Terence,
> >>>>
> >>>>> wow! how big is that grammar?
> >>>>> Ter
> >>>>
> >>>> I'm trying to get the VHDL-grammar for the CSharp-target from
> >>>> Mike Lodder working with Java:
> >>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
> >>>>
> >>>> Some first, very basic modifications see attachement.
> >>>> First of all that grammar should work with ANTLRWorks 1.4.3.
> >>>>
> >>>> Many thanks for any support
> >>>> Udo
> >>>>
> >>>>
> >>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
> >>>>>
> >>>>>> Hello,
> >>>>>>
> >>>>>> the length of that line is 1647 chars (162 strings).
> >>>>>> The grammar is an existing one. What can/must I do?
> >>>>>>
> >>>>>> [15:41:27] XYZParser.java:14: code too large
> >>>>>> [15:41:27]     public static final String[] tokenNames = new
> String[] {
> >>>>>> [15:41:27]                                  ^
> >>>>>> [15:41:27] 1 error
> >>>>>>
> >>>>>>
> >>>>>> Many thanks and greetings
> >>>>>> Udo
> >>>>>>
> >>>>>>
> >>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>>
> >>>>
> >>>> <vhdl__UW1a.g>
> >>>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> ------------------------------
>
> Message: 4
> Date: Mon, 26 Sep 2011 22:07:45 +0200
> From: Udo Weik <WeikEngOff at aol.com>
> Subject: Re: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14:
>        code too large (public static final String[] tokenNames = new
> String[]
>        { ... } ; )
> To: Vlad <vlad at demoninsight.com>
> Cc: "Antlr-Interest Antlr.Org" <antlr-interest at antlr.org>
> Message-ID: <4E80DB91.4060209 at aol.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Hello Vlad,
>
> many thanks for your really valuable analysis.
>
> @Terence:
> The ball's in your court!
>
>
> Greetings
> Udo
>
> > Java .class file format has a specification limit such that any bytecode
> method must not be more than 64k bytes. If this limit is violated (normally
> only happens with auto-generated code) you'll see the compiler error you
> have.
> >
> > Although it is not very common knowledge, any java code of the form
> >
> > ... static final SomeType SOME_FIELD =<some exp>
> >
> > is equivalent to the following:
> >
> > a declaration of
> >
> > ... static final SomeType SOME_FIELD;
> >
> > combined with bytecode to compute<some exp>  and assign it to SOME_FIELD,
> performed inside a special method named '<clinit>' at class loading time. It
> is the same method that also collects anything you put in a static { }
> block. I had a look at the .java files you see generated from your grammer
> and there is absolutely a ton of public static finals that require
> such<clinit>  code: some 1300 FOLLOW_... BitSets, tokenNames, ruleNames,
> etc.
> >
> > All of those static field init bytecodes end up in<clinit>  and cause
> size overflow. It seems to me that hitting the 64K limit can happen for any
> reasonably large grammar ("large" defined not just in terms of token count,
> but also the number of rules, etc).
> >
> > To address this issue at the fundamental level, ANTLR need to alter its
> .java code emission strategy. Perhaps map rules to static methods of static
> nested classes instead of lumping everything into a single .class
> definition. Nested classes in Java are compiled into separate .class
> definitions, each with it own<clinit>.
> >
> > HTH,
> > Vlad
> >
> > On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
> >
> >> Hello Terence,
> >>
> >>> Interesting. That's not that big.Only 162 strings should not merely be
> enough to blow out the 64k  static INIT method limit. hmm... perhaps the
> other arrays are the big as well.
> >>> ter
> >>
> >> I just tried to delete 'static' but of course that doesn't work:
> >> XYZParser.java:347: non-static variable tokenNames cannot be referenced
> from a static context
> >> So the question is - any solution for that problem?
> >>
> >> Thanks and greetings
> >> Udo
> >>
> >>
> >>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
> >>>
> >>>> Hello Terence,
> >>>>
> >>>>> wow! how big is that grammar?
> >>>>> Ter
> >>>>
> >>>> I'm trying to get the VHDL-grammar for the CSharp-target from
> >>>> Mike Lodder working with Java:
> >>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
> >>>>
> >>>> Some first, very basic modifications see attachement.
> >>>> First of all that grammar should work with ANTLRWorks 1.4.3.
> >>>>
> >>>> Many thanks for any support
> >>>> Udo
> >>>>
> >>>>
> >>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
> >>>>>
> >>>>>> Hello,
> >>>>>>
> >>>>>> the length of that line is 1647 chars (162 strings).
> >>>>>> The grammar is an existing one. What can/must I do?
> >>>>>>
> >>>>>> [15:41:27] XYZParser.java:14: code too large
> >>>>>> [15:41:27]     public static final String[] tokenNames = new
> String[] {
> >>>>>> [15:41:27]                                  ^
> >>>>>> [15:41:27] 1 error
> >>>>>>
> >>>>>>
> >>>>>> Many thanks and greetings
> >>>>>> Udo
> >>>>>>
> >>>>>>
> >>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>>> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>>
> >>>>
> >>>> <vhdl__UW1a.g>
> >>>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
>
> ------------------------------
>
> Message: 5
> Date: Mon, 26 Sep 2011 15:50:11 -0700
> From: Terence Parr <parrt at cs.usfca.edu>
> Subject: Re: [antlr-interest] [stringtemplate-interest] a logo design?
>        branding.
> To: stringtemplate-interest List <stringtemplate-interest at antlr.org>,
>        antlr-interest Interest <antlr-interest at antlr.org>
> Message-ID: <93E1364E-AF32-4CF2-8E44-358BF9DB743B at cs.usfca.edu>
> Content-Type: text/plain; charset=us-ascii
>
> Thanks for the feedback!
> Ter
> On Sep 25, 2011, at 10:12 PM, Michael Bedward wrote:
>
> > The correct answer is "you're the designer - you tell me".
> >
> > My fall back answers are:
> >
> >> 1. what existing logos do we like and why
> >
> > GeoTools: compass / spanner logo (http://geotools.org/) because it's a
> > simple and informative pun
> >
> > TED: big red letters (http://www.ted.com/) because it's obvious and
> memorable
> >
> > ScapeToad: toad logo (http://scapetoad.choros.ch/) because it's
> > ridiculous with a certain elegance
> >
> > R (http://www.r-project.org/) because you just say Rrrr...
> >
> >> 2.  what logos do we dislike and why
> >
> > Sonatype: horizontal bars and thin font (http://www.sonatype.com/)
> > because it looks corporate and boring
> >
> > ESRI globe in grid (http://www.esri.com/) because it looks like they
> > want to take the world prisoner
> >
> > Old Sun logo (as seen at:
> >
> http://java.sun.com/products/java-media/jai/forDevelopers/jai1_0_1guide-unc/JAITOC.fm.html
> )
> > because it's on the wrong side of the line between clever and wanky
> >
> > NetBeans: box figure and name (http://netbeans.org/) because what are
> > you supposed to do with an empty box ?
> >
> >> 3. Preferred typography
> >
> > Either elegant or in your face, but not script (usually lacks
> > immediacy) or very angular / geometric (e.g. the font used for the
> > Oracle logo which looks fascist - though perhaps that's just my
> > prejudice shining through).
> >
> > Michael
> >
> >
> > On 26 September 2011 00:59, Terence Parr <parrt at cs.usfca.edu> wrote:
> >> hi.  Sam Harwell had the great idea that I should commission a logo or
> logos for the ANTLR project. Perhaps there is a similar and consistent logo
> design for the individual tools. I'm also considering a new layout and
> design for the website. Basically v4 will have major new functionality and I
> want to do some nice branding for it. Sam also recommend someone that seems
> very good for doing the logo design. Questionnaire I have to fill out for
> this designer, however, asks questions that I don't really know how to
> answer exactly. I thought that I should appeal to you folks in the community
> so that we can  hone the answers for the designer to get something nice.
> Here are some questions that you might know the answer to or have opinions
> on:
> >>
> >> 1. what existing logos do we like and why
> >>
> >> 2.  what logos do we dislike and why
> >>
> >> 3. Preferred typography (heavy, light, modern, classic, handwritten
> etc.)  maybe we don't want text in the logo at all, but it seems like .g and
> .st could work in the individual tool logos. Microsoft logos for example:
> >>
> >>
> >> Here is the logo portfolio of the guy:
> >>
> >> http://www.logoholik.com/logo_portfolio/logo_portfolio.html
> >>
> >>  any and all thoughts about branding are welcome.
> >>
> >> Ter
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> > _______________________________________________
> > stringtemplate-interest mailing list
> > stringtemplate-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
>
>
>
> ------------------------------
>
> Message: 6
> Date: Mon, 26 Sep 2011 21:54:33 -0400
> From: "Kevin J. Cummings" <cummings at kjchome.homeip.net>
> Subject: Re: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left
>        Recursion with comments in grammar
> To: antlr-interest at antlr.org
> Message-ID: <4E812CD9.3000008 at kjchome.homeip.net>
> Content-Type: text/plain; charset=ISO-8859-1
>
> I'm confused.  If you have:
>
> string : string Plus string
>       | string Minus string
>       | Digit
>       ;
>
> and you remove left recursion, why don't you end up with:
>
> string : Digit ( Plus Digit | Minus Digit )*
>       ;
>
> And, yes, the error message with the ";" in it is amusing.
>
> On 09/26/2011 02:05 PM, The Researcher wrote:
> > I forgot to give credit where credit is due.
> >
> > This grammar is from
> >
> > Aho, A. V., Lam, M. S., Sethi, R., & Ullman, J. D. (2007) Compilers:
> > principles, techniques, & tools (2nd ed.). Boston: Pearson/Addison
> Wesley.
> > pg. 47, Example 2.5
> >
> >
> >
> >
> >
> > ---------- Forwarded message ----------
> > From: The Researcher <researcher0x00 at gmail.com>
> > Date: Mon, Sep 26, 2011 at 1:51 PM
> > Subject: ANTLRWorks bug: Remove Left Recursion with comments in grammar
> > To: antlr-interest at antlr.org
> >
> >
> > grammar Ambiguious001;
> >
> >
> >
> > string      : string Plus string
> >
> >             | string Minus string
> >
> >             | Digit
> >
> >             ;
> >
> >
> >
> > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> >
> > Minus       : '-' ;
> >
> > Plus        : '+' ;
> >
> >
> >
> > Remove All Left Recursion or Remove Left Recursion produces
> >
> > grammar Ambiguious001;
> >
> >
> >
> > string      : (Digit) (Plus string | Minus string)*
> >
> >             ;
> >
> >
> >
> > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> >
> > Minus       : '-' ;
> >
> > Plus        : '+' ;
> >
> >
> >
> > However
> >
> > grammar Ambiguious001;
> >
> >
> >
> > // Parser
> >
> >
> >
> > string      : string Plus string
> >
> >             | string Minus string
> >
> >             | Digit
> >
> >             ;
> >
> >
> >
> > // Lexer
> >
> >
> >
> > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> >
> > Minus       : '-' ;
> >
> > Plus        : '+' ;
> >
> >
> >
> > Remove All Left Recursion or Remove Left Recursion produces
> >
> >
> >
> > grammar Ambiguious001;
> >
> >
> >
> > // Parser
> >
> >
> >
> > string      : (Digit
> >
> >             ;) (Plus string | Minus string)*
> >
> >
> >
> > // Lexer
> >
> >
> >
> > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;
> >
> > Minus       : '-' ;
> >
> > Plus        : '+' ;
> >
> >   It's the first time I have ever had an error wink at me.
> >
> > Eric
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> --
> Kevin J. Cummings
> kjchome at verizon.net
> cummings at kjchome.homeip.net
> cummings at kjc386.framingham.ma.us
> Registered Linux User #1232 (http://www.xlinuxcounter.net/)
>
>
> ------------------------------
>
> Message: 7
> Date: Tue, 27 Sep 2011 12:53:17 +1000
> From: Gary Miller <gary at sumwise.com>
> Subject: Re: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left
>        Recursion with comments in grammar
> To: researcher0x00 at gmail.com
> Cc: antlr-interest at antlr.org
> Message-ID:
>        <CAFCNb3hKcjXNfv9UyU-+-AXZN96OEfrukvYCmW-k_-KQwj27Aw at mail.gmail.com
> >
> Content-Type: text/plain; charset=ISO-8859-1
>
> What version of are you using?
> I've tried with 3.2 and 3.4 and get very boring error messages.
>
> eg 3.2 gives
> 9:12: syntax error: antlr: <notsaved>:9:12: expecting RPAREN, found ';'
>
>
> ------------------------------
>
> Message: 8
> Date: Tue, 27 Sep 2011 11:38:46 +0800
> From: Chan David <lifesting at gmail.com>
> Subject: [antlr-interest] Best practices to insert breakpoint when
>        generating code?
> To: antlr-interest at antlr.org
> Message-ID:
>        <CAF_ThcLgLcgebMEYd+G5uWVSqoDFtyy-2w3NEhm62wxwjYaoiA at mail.gmail.com
> >
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi, Antlr fellows:
>
> I wrote a simple parser and a weak runtime to make a prototype of our DSL.
> I
> followed the de-facto definition steps:
>
>
>   1. Define a lex grammar to describe tokens.
>   2. Define a parser grammar to describe syntax and build an AST.
>   3. Define a tree grammar to genereate DSL source code via StringTemplate
>   which includes my hand-written execution code as runtime.
>
> Now I want to run this DSL code in Eclipse directly. So I must let DSL
> support debugging.  I must embbed a hook function in every start of a
> statement. I named this function 'breakpoint', it need a line number as
> argument.
>
> For example, there's a "x=1" statement in my DSL where AST is ^(ASSIGN, x,
> 1) . I insert a function like below:
>
> assignStmt @init{
>  breakpoint(Problem: how to get line number here?);
> } :  ^(ASSIGN, ID, INT) {
>  .....//Omitted
> }
>
> I don't know how to get line number at the start of a statement, further, I
> doubt whether this method is correct.
>
> Thank for you help!
>
>
> ------------------------------
>
> Message: 9
> Date: Tue, 27 Sep 2011 12:16:51 +0300
> From: Ruslan Zasukhin <ruslan_zasukhin at valentina-db.com>
> Subject: [antlr-interest] [C] code to change Token type, use char* and
>        loose data when buffer destroyed
> To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>,      Jim Idle
>        <jimi at temporal-wave.com>
> Message-ID: <CAA76F33.F2983%ruslan_zasukhin at valentina-db.com>
> Content-Type: text/plain;       charset="US-ASCII"
>
> Hi All,
>
> ===== TASK ======
>
> In SQL we must be able write
>      SELECT 'aaa' 'bbbb'
>
> And this should be same as
>      SELECT 'aaabbbb'
>
> I.e. Parser must concatenate literals self.
> This was quite easy do in ANTLR 2,
> and I already have kill 5-6 hours in ANTLR 3.  :-((((((
>
>
> I have try many tricks for ANTLR3 itself trying to use its tokens and
> ANTLR_STRING class but no luck.
>
> Finally I have give up and have try to use simple code as in v2 using
> STD::string as place to accumulate literal.
>
> =================================
> character_string_literal
> @init{
>    STD::string st;
> }
>    :    ( STRING_LITERAL
>            {
>                st.append(
>                    (const char*) $STRING_LITERAL.text->chars,
>                    $STRING_LITERAL.text->len );
>            }
>        )+
>            -> ^( CONST_STR[ st.c_str() ] )
>    ;
> =================================
>
> But this not works, because new Token object stores just pointer
>
>        newToken->textState        = ANTLR3_TEXT_CHARP;
>        newToken->tokText.chars = (pANTLR3_UCHAR)text;
>
> And as only STD::string dies we get problem.
>
>
> Jim, how this simple task can be solved in the C TARGET ?
>
> Also I see that for Java code they can contruct dynamic text
> And produce token using that text. For example on this page
>
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>
>                            -> ^('+' $p INT[String.valueOf($a.int+$b.int)])
>
>
> But C target tryies to work only which char*
>
>
> I guess that ANTLR_STRING setText() can help me,
> But I cannot see how I can call that from my
>
>            -> ^( CONST_STR[ st.c_str() ] )
>
> ???
>
> Thank you for points ...
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information
> http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>
>
>
>
> ------------------------------
>
> Message: 10
> Date: Tue, 27 Sep 2011 06:45:54 -0400
> From: The Researcher <researcher0x00 at gmail.com>
> Subject: Re: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left
>        Recursion with comments in grammar
> To: antlr-interest at antlr.org
> Message-ID:
>        <CAN45N12sF0t7mfWaPy3ZB3OuBh-iJxswbPvtJOcgTozOdY4rFg at mail.gmail.com
> >
> Content-Type: text/plain; charset="iso-8859-1"
>
> On Mon, Sep 26, 2011 at 10:53 PM, Gary Miller <gary at sumwise.com> wrote:
>
> > What version of are you using?
> > I've tried with 3.2 and 3.4 and get very boring error messages.
> >
> > eg 3.2 gives
> > 9:12: syntax error: antlr: <notsaved>:9:12: expecting RPAREN, found ';'
> >
>
> This is done using ANTLRWorks. See attached screenshots.
>
> Eric
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: Left Recursion Refactor Bug ANTLRWorks 1.4.2.png
> Type: image/png
> Size: 101799 bytes
> Desc: not available
> Url :
> http://www.antlr.org/pipermail/antlr-interest/attachments/20110927/fa1e68c4/attachment.png
> -------------- next part --------------
> A non-text attachment was scrubbed...
> Name: Left Recursion Refactor Bug ANTLRWorks 1.4.3.png
> Type: image/png
> Size: 144985 bytes
> Desc: not available
> Url :
> http://www.antlr.org/pipermail/antlr-interest/attachments/20110927/fa1e68c4/attachment-0001.png
>
> ------------------------------
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
>
> End of antlr-interest Digest, Vol 82, Issue 22
> **********************************************
>

From jonne.zutt.ml at gmail.com  Tue Sep 27 11:42:24 2011
From: jonne.zutt.ml at gmail.com (Jonne Zutt)
Date: Tue, 27 Sep 2011 20:42:24 +0200
Subject: [antlr-interest] few beginner questions
Message-ID: <CAJg62X8fNh_BCKO88qsFh5mZYPE6+qVb4pFzdL5Hz21CbDqidA@mail.gmail.com>

Dear antlr community,

I have created a minimal project, which illustrates three "challenges" I
currently have.
I attached the source, but hope to make myself clear enough in this email as
well.

*1) How to deal with priorities*?

I have a rule like the below 'operation', where Command1 ('am') can also
occur within the 'identifier' rule.

operation
  :  Command1 Space LowerCase SemiColon
  |  Id Space identifier SemiColon
  ;

Below is the current output. It goes wrong if 'am' is part of the
identifier. I tried to fix this by moving
the order of some rules, but without success.

Running org.myantlr.test.parsers.a.TestATest
test: am e;id "some nice gAme";
--> test passed.
test: am e;id "some nice game";
BR.recoverFromMismatchedToken
MismatchedTokenException(9!=4)
       at org.antlr.runtime.BaseRecognizer.mismatch(BaseRecognizer.java:117)
       at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:99)
       at
org.myantlr.test.parsers.a.TestAParser.identifier(TestAParser.java:81)
       at
org.myantlr.test.parsers.a.TestAParser.operation(TestAParser.java:224)
       at org.myantlr.test.parsers.a.TestAParser.parse(TestAParser.java:155)
       at org.myantlr.test.parsers.a.TestATest.test(TestATest.java:33)
       at org.myantlr.test.parsers.a.TestATest.test2(TestATest.java:19)

*2) grammar hierarchy?*

I read about the import statement in antlr. But I was not successful in
getting these two grammers to import a Base.g.

*3) configure output directory*

After running 'mvn package' all generated sources are in the 'b' package. I
expected TestA files to be generated in the 'a' package.
Is that a bug in the antlr3-maven-plugin, or am I doing something wrong?

./target/generated-sources/antlr/org/myantlr/test/parsers
./target/generated-sources/antlr/org/myantlr/test/parsers/b
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestA.tokens
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestA__.g
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestALexer.java
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestAParser.java
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestB.tokens
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestB__.g
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestBLexer.java
./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestBParser.java

Thanks,
Jonne.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: my-antlr-test.tgz
Type: application/x-gzip
Size: 1725 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110927/3dbacfcf/attachment.tgz 

From jimi at temporal-wave.com  Tue Sep 27 11:45:59 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 27 Sep 2011 11:45:59 -0700
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <CAA76F33.F2983%ruslan_zasukhin@valentina-db.com>
References: <CAA76F33.F2983%ruslan_zasukhin@valentina-db.com>
Message-ID: <fa48a8ce3eba7d189126d9e633893306@mail.gmail.com>

Each token contains the char * pointer that is in to the input stream
start, which is what I generally use, but if you want to use my build in
string stuff and have it auto free then it is just:

csl
@declarations { pANTLR3_STRING s; }
: s1=STRING
     { s= $s1.text; }
   (
	s2=STRING
	{
		s->append(s, $s2.text);
	}

   )*
	{ $s1->setText(s);  /* Check that, but I think it is this */ }

	->s1
;

You are complicating things though. There is no need to do that in the
parser, just use:

csl
: s1+=STRING -> $s1+  /* Or, ->^(SLIT $s1+) */
;

Then just do the string manipulation in the tree walk (which means you
will only use it if you have to). You still need to reference the text of
course.

So, really, don't use the $x.text as it is slow, just call an external C++
method/object that takes a pointer to the token or base tree object and
extracts the string (start is a void * address of first char, end is a
void * address of the last char, length is the difference). You can make a
neat C++ class that can accept either of these in the constructor and has
an overloaded append() and a getCstr(). Don't try to do too much in the
code itself and there is no need to amalgamate text and things in the
parser.


Jim


> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Tuesday, September 27, 2011 2:17 AM
> To: antlr-interest at antlr.org; Jim Idle
> Subject: [C] code to change Token type, use char* and loose data when
> buffer destroyed
>
> Hi All,
>
> ===== TASK ======
>
> In SQL we must be able write
>       SELECT 'aaa' 'bbbb'
>
> And this should be same as
>       SELECT 'aaabbbb'
>
> I.e. Parser must concatenate literals self.
> This was quite easy do in ANTLR 2,
> and I already have kill 5-6 hours in ANTLR 3.  :-((((((
>
>
> I have try many tricks for ANTLR3 itself trying to use its tokens and
> ANTLR_STRING class but no luck.
>
> Finally I have give up and have try to use simple code as in v2 using
> STD::string as place to accumulate literal.
>
> =================================
> character_string_literal
> @init{
>     STD::string st;
> }
>     :    ( STRING_LITERAL
>             {
>                 st.append(
>                     (const char*) $STRING_LITERAL.text->chars,
>                     $STRING_LITERAL.text->len );
>             }
>         )+
>             -> ^( CONST_STR[ st.c_str() ] )
>     ;
> =================================
>
> But this not works, because new Token object stores just pointer
>
>         newToken->textState        = ANTLR3_TEXT_CHARP;
>         newToken->tokText.chars = (pANTLR3_UCHAR)text;
>
> And as only STD::string dies we get problem.
>
>
> Jim, how this simple task can be solved in the C TARGET ?
>
> Also I see that for Java code they can contruct dynamic text And
> produce token using that text. For example on this page
>
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>
>                             -> ^('+' $p
> INT[String.valueOf($a.int+$b.int)])
>
>
> But C target tryies to work only which char*
>
>
> I guess that ANTLR_STRING setText() can help me, But I cannot see how I
> can call that from my
>
>             -> ^( CONST_STR[ st.c_str() ] )
>
> ???
>
> Thank you for points ...
>
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From jimi at temporal-wave.com  Tue Sep 27 11:56:39 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 27 Sep 2011 11:56:39 -0700
Subject: [antlr-interest] antlr-interest Digest, Vol 82, Issue 22
In-Reply-To: <CANc89oSdW+rr0Wrz-2vrRypfiAUBPVLFUDrM8tHJrF2=FK7nCA@mail.gmail.com>
References: <mailman.2059.1317134452.3152.antlr-interest@antlr.org>
	<CANc89oSdW+rr0Wrz-2vrRypfiAUBPVLFUDrM8tHJrF2=FK7nCA@mail.gmail.com>
Message-ID: <259cbeb980923029845b2adabe503733@mail.gmail.com>

Don't download that, download the source tar from the antlr web site. The
tarball is a 'standard' ./configure based build and you run that to create
the Makefile. Please read the API docs linked on the front page.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of mandanna thekkada
> Sent: Tuesday, September 27, 2011 10:28 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] antlr-interest Digest, Vol 82, Issue 22
>
> Hello Terence,
>
> I am trying to make to C grammar work as an android project. I've
> created the C target , but when building I've obtained most of the
> libraries from the FishEye source website as mentioned in the downloads
> page of antlr.orgexcept for "antlrconfig.h" . Any ideas on how to fix
> this??
>
> Regards,
> Mandanna
>
> On Tue, Sep 27, 2011 at 8:10 PM, <antlr-interest-request at antlr.org>
> wrote:
>
> > Send antlr-interest mailing list submissions to
> >        antlr-interest at antlr.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://www.antlr.org/mailman/listinfo/antlr-interest
> > or, via email, send a message with subject or body 'help' to
> >        antlr-interest-request at antlr.org
> >
> > You can reach the person managing the list at
> >        antlr-interest-owner at antlr.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of antlr-interest digest..."
> >
> >
> > Today's Topics:
> >
> >   1. changes not reflecting in antlrWorks debugger (jame vaalet)
> >   2. Re: ANTLRWorks 1.4.3: XYZParser.java:14: code too large
> >      (public static final String[] tokenNames = new String[]   { ...
> } ;
> >      ) (Vlad)
> >   3. Re: ANTLRWorks 1.4.3: XYZParser.java:14: code too large
> >      (public static final String[] tokenNames = new String[] { ... }
> ;
> >      ) (Sam Barnett-Cormack)
> >   4. Re: ANTLRWorks 1.4.3: XYZParser.java:14: code too large
> >      (public static final String[] tokenNames = new String[] { ... }
> ;
> >      ) (Udo Weik)
> >   5. Re: [stringtemplate-interest] a logo design?      branding.
> >      (Terence Parr)
> >   6. Re: Fwd: ANTLRWorks bug: Remove Left Recursion with comments
> >      in grammar (Kevin J. Cummings)
> >   7. Re: Fwd: ANTLRWorks bug: Remove Left Recursion with comments
> >      in grammar (Gary Miller)
> >   8. Best practices to insert breakpoint when  generating code?
> >      (Chan David)
> >   9. [C] code to change Token type, use char* and loose data when
> >      buffer destroyed (Ruslan Zasukhin)  10. Re: Fwd: ANTLRWorks bug:
> > Remove Left Recursion with comments
> >      in grammar (The Researcher)
> >
> >
> > ---------------------------------------------------------------------
> -
> >
> > Message: 1
> > Date: Tue, 27 Sep 2011 00:32:43 +0530
> > From: jame vaalet <jamevaalet at gmail.com>
> > Subject: [antlr-interest] changes not reflecting in antlrWorks
> >        debugger
> > To: antlr-interest at antlr.org
> > Message-ID:
> >
> > <CAHGxz8a_WBT3xX2xdSvKu8BrS+hJOUp-tX6Yr_2-_dMaxetLWg at mail.gmail.com
> > >
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > hi,
> >  am using antlrWorks 1.4.3 with csharp2 as target language. but when
> i
> > debug its using the old grammar.g rather than the latest grammar.g .
> > can someone help me out in here  ??
> >
> > --
> >
> > -JAME
> >
> >
> > ------------------------------
> >
> > Message: 2
> > Date: Mon, 26 Sep 2011 15:36:41 -0400
> > From: Vlad <vlad at demoninsight.com>
> > Subject: Re: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14:
> >        code too        large (public static final String[] tokenNames
> = new
> > String[]
> >        { ... } ; )
> > To: Udo Weik <WeikEngOff at aol.com>
> > Cc: "Antlr-Interest Antlr.Org" <antlr-interest at antlr.org>
> > Message-ID: <D7BA9C8E-F8A3-40E7-8C8E-0D57CE1FFC19 at demoninsight.com>
> > Content-Type: text/plain; charset=us-ascii
> >
> > Java .class file format has a specification limit such that any
> > bytecode method must not be more than 64k bytes. If this limit is
> > violated (normally only happens with auto-generated code) you'll see
> > the compiler error you have.
> >
> > Although it is not very common knowledge, any java code of the form
> >
> > ... static final SomeType SOME_FIELD = <some exp>
> >
> > is equivalent to the following:
> >
> > a declaration of
> >
> > ... static final SomeType SOME_FIELD;
> >
> > combined with bytecode to compute <some exp> and assign it to
> > SOME_FIELD, performed inside a special method named '<clinit>' at
> > class loading time. It is the same method that also collects anything
> > you put in a static { } block. I had a look at the .java files you
> see
> > generated from your grammer and there is absolutely a ton of public
> > static finals that require such <clinit> code: some 1300 FOLLOW_...
> BitSets, tokenNames, ruleNames, etc.
> >
> > All of those static field init bytecodes end up in <clinit> and cause
> > size overflow. It seems to me that hitting the 64K limit can happen
> > for any reasonably large grammar ("large" defined not just in terms
> of
> > token count, but also the number of rules, etc).
> >
> > To address this issue at the fundamental level, ANTLR need to alter
> > its .java code emission strategy. Perhaps map rules to static methods
> > of static nested classes instead of lumping everything into a single
> > .class definition. Nested classes in Java are compiled into separate
> > .class definitions, each with it own <clinit>.
> >
> > HTH,
> > Vlad
> >
> > On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
> >
> > > Hello Terence,
> > >
> > >> Interesting. That's not that big.Only 162 strings should not
> merely
> > >> be
> > enough to blow out the 64k  static INIT method limit. hmm... perhaps
> > the other arrays are the big as well.
> > >> ter
> > >
> > > I just tried to delete 'static' but of course that doesn't work:
> > > XYZParser.java:347: non-static variable tokenNames cannot be
> > > referenced
> > from a static context
> > > So the question is - any solution for that problem?
> > >
> > > Thanks and greetings
> > > Udo
> > >
> > >
> > >> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
> > >>
> > >>> Hello Terence,
> > >>>
> > >>>> wow! how big is that grammar?
> > >>>> Ter
> > >>>
> > >>> I'm trying to get the VHDL-grammar for the CSharp-target from
> Mike
> > >>> Lodder working with Java:
> > >>> http://www.antlr.org/grammar/1202750770887/vhdl.g
> > >>>
> > >>> Some first, very basic modifications see attachement.
> > >>> First of all that grammar should work with ANTLRWorks 1.4.3.
> > >>>
> > >>> Many thanks for any support
> > >>> Udo
> > >>>
> > >>>
> > >>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
> > >>>>
> > >>>>> Hello,
> > >>>>>
> > >>>>> the length of that line is 1647 chars (162 strings).
> > >>>>> The grammar is an existing one. What can/must I do?
> > >>>>>
> > >>>>> [15:41:27] XYZParser.java:14: code too large
> > >>>>> [15:41:27]     public static final String[] tokenNames = new
> String[]
> > {
> > >>>>> [15:41:27]                                  ^
> > >>>>> [15:41:27] 1 error
> > >>>>>
> > >>>>>
> > >>>>> Many thanks and greetings
> > >>>>> Udo
> > >>>>>
> > >>>>>
> > >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >>>>> Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >>>>
> > >>>
> > >>> <vhdl__UW1a.g>
> > >>
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> >
> > ------------------------------
> >
> > Message: 3
> > Date: Mon, 26 Sep 2011 20:57:59 +0100
> > From: Sam Barnett-Cormack <s.barnett-cormack at lancaster.ac.uk>
> > Subject: Re: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14:
> >        code too large (public static final String[] tokenNames = new
> > String[]
> >        { ... } ; )
> > To: Vlad <vlad at demoninsight.com>
> > Cc: "Antlr-Interest Antlr.Org" <antlr-interest at antlr.org>
> > Message-ID: <4E80D947.7070305 at lancaster.ac.uk>
> > Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> >
> > The possibility of static nested classes had also occured to me as a
> > way of breaking up the otherwise-huge static initialisation code
> being
> > produced. For things like the followsets, it might be beneficial to
> > look at the architecture of the generated code to see if there's any
> > possible benefit to defining an abstract class these static nested
> > classes could inherit from.
> >
> > Another possibility would be removing these large static data
> > structures from the source entirely, and instead emitting some extra
> > files that define them and that are read in by the generated code.
> > Java resource loading semantics mean that files located with the
> class
> > files are easy to load at run-time. A readable format could even be
> > used to make it easier for humans to understand the code (and
> > supporting data) that are generated.
> >
> > Sam
> >
> > On 26/09/2011 20:36, Vlad wrote:
> > > Java .class file format has a specification limit such that any
> > > bytecode
> > method must not be more than 64k bytes. If this limit is violated
> > (normally only happens with auto-generated code) you'll see the
> > compiler error you have.
> > >
> > > Although it is not very common knowledge, any java code of the form
> > >
> > > ... static final SomeType SOME_FIELD =<some exp>
> > >
> > > is equivalent to the following:
> > >
> > > a declaration of
> > >
> > > ... static final SomeType SOME_FIELD;
> > >
> > > combined with bytecode to compute<some exp>  and assign it to
> > > SOME_FIELD,
> > performed inside a special method named '<clinit>' at class loading
> > time. It is the same method that also collects anything you put in a
> > static { } block. I had a look at the .java files you see generated
> > from your grammer and there is absolutely a ton of public static
> > finals that require such<clinit>  code: some 1300 FOLLOW_... BitSets,
> > tokenNames, ruleNames, etc.
> > >
> > > All of those static field init bytecodes end up in<clinit>  and
> > > cause
> > size overflow. It seems to me that hitting the 64K limit can happen
> > for any reasonably large grammar ("large" defined not just in terms
> of
> > token count, but also the number of rules, etc).
> > >
> > > To address this issue at the fundamental level, ANTLR need to alter
> > > its
> > .java code emission strategy. Perhaps map rules to static methods of
> > static nested classes instead of lumping everything into a single
> > .class definition. Nested classes in Java are compiled into separate
> > .class definitions, each with it own<clinit>.
> > >
> > > HTH,
> > > Vlad
> > >
> > > On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
> > >
> > >> Hello Terence,
> > >>
> > >>> Interesting. That's not that big.Only 162 strings should not
> > >>> merely be
> > enough to blow out the 64k  static INIT method limit. hmm... perhaps
> > the other arrays are the big as well.
> > >>> ter
> > >>
> > >> I just tried to delete 'static' but of course that doesn't work:
> > >> XYZParser.java:347: non-static variable tokenNames cannot be
> > >> referenced
> > from a static context
> > >> So the question is - any solution for that problem?
> > >>
> > >> Thanks and greetings
> > >> Udo
> > >>
> > >>
> > >>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
> > >>>
> > >>>> Hello Terence,
> > >>>>
> > >>>>> wow! how big is that grammar?
> > >>>>> Ter
> > >>>>
> > >>>> I'm trying to get the VHDL-grammar for the CSharp-target from
> > >>>> Mike Lodder working with Java:
> > >>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
> > >>>>
> > >>>> Some first, very basic modifications see attachement.
> > >>>> First of all that grammar should work with ANTLRWorks 1.4.3.
> > >>>>
> > >>>> Many thanks for any support
> > >>>> Udo
> > >>>>
> > >>>>
> > >>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
> > >>>>>
> > >>>>>> Hello,
> > >>>>>>
> > >>>>>> the length of that line is 1647 chars (162 strings).
> > >>>>>> The grammar is an existing one. What can/must I do?
> > >>>>>>
> > >>>>>> [15:41:27] XYZParser.java:14: code too large
> > >>>>>> [15:41:27]     public static final String[] tokenNames = new
> > String[] {
> > >>>>>> [15:41:27]                                  ^
> > >>>>>> [15:41:27] 1 error
> > >>>>>>
> > >>>>>>
> > >>>>>> Many thanks and greetings
> > >>>>>> Udo
> > >>>>>>
> > >>>>>>
> > >>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >>>>>> Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >>>>>
> > >>>>
> > >>>> <vhdl__UW1a.g>
> > >>>
> > >>
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> >
> > ------------------------------
> >
> > Message: 4
> > Date: Mon, 26 Sep 2011 22:07:45 +0200
> > From: Udo Weik <WeikEngOff at aol.com>
> > Subject: Re: [antlr-interest] ANTLRWorks 1.4.3: XYZParser.java:14:
> >        code too large (public static final String[] tokenNames = new
> > String[]
> >        { ... } ; )
> > To: Vlad <vlad at demoninsight.com>
> > Cc: "Antlr-Interest Antlr.Org" <antlr-interest at antlr.org>
> > Message-ID: <4E80DB91.4060209 at aol.com>
> > Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> >
> > Hello Vlad,
> >
> > many thanks for your really valuable analysis.
> >
> > @Terence:
> > The ball's in your court!
> >
> >
> > Greetings
> > Udo
> >
> > > Java .class file format has a specification limit such that any
> > > bytecode
> > method must not be more than 64k bytes. If this limit is violated
> > (normally only happens with auto-generated code) you'll see the
> > compiler error you have.
> > >
> > > Although it is not very common knowledge, any java code of the form
> > >
> > > ... static final SomeType SOME_FIELD =<some exp>
> > >
> > > is equivalent to the following:
> > >
> > > a declaration of
> > >
> > > ... static final SomeType SOME_FIELD;
> > >
> > > combined with bytecode to compute<some exp>  and assign it to
> > > SOME_FIELD,
> > performed inside a special method named '<clinit>' at class loading
> > time. It is the same method that also collects anything you put in a
> > static { } block. I had a look at the .java files you see generated
> > from your grammer and there is absolutely a ton of public static
> > finals that require such<clinit>  code: some 1300 FOLLOW_... BitSets,
> > tokenNames, ruleNames, etc.
> > >
> > > All of those static field init bytecodes end up in<clinit>  and
> > > cause
> > size overflow. It seems to me that hitting the 64K limit can happen
> > for any reasonably large grammar ("large" defined not just in terms
> of
> > token count, but also the number of rules, etc).
> > >
> > > To address this issue at the fundamental level, ANTLR need to alter
> > > its
> > .java code emission strategy. Perhaps map rules to static methods of
> > static nested classes instead of lumping everything into a single
> > .class definition. Nested classes in Java are compiled into separate
> > .class definitions, each with it own<clinit>.
> > >
> > > HTH,
> > > Vlad
> > >
> > > On Sep 26, 2011, at 1:06 PM, Udo Weik wrote:
> > >
> > >> Hello Terence,
> > >>
> > >>> Interesting. That's not that big.Only 162 strings should not
> > >>> merely be
> > enough to blow out the 64k  static INIT method limit. hmm... perhaps
> > the other arrays are the big as well.
> > >>> ter
> > >>
> > >> I just tried to delete 'static' but of course that doesn't work:
> > >> XYZParser.java:347: non-static variable tokenNames cannot be
> > >> referenced
> > from a static context
> > >> So the question is - any solution for that problem?
> > >>
> > >> Thanks and greetings
> > >> Udo
> > >>
> > >>
> > >>> On Sep 26, 2011, at 8:42 AM, Udo Weik wrote:
> > >>>
> > >>>> Hello Terence,
> > >>>>
> > >>>>> wow! how big is that grammar?
> > >>>>> Ter
> > >>>>
> > >>>> I'm trying to get the VHDL-grammar for the CSharp-target from
> > >>>> Mike Lodder working with Java:
> > >>>> http://www.antlr.org/grammar/1202750770887/vhdl.g
> > >>>>
> > >>>> Some first, very basic modifications see attachement.
> > >>>> First of all that grammar should work with ANTLRWorks 1.4.3.
> > >>>>
> > >>>> Many thanks for any support
> > >>>> Udo
> > >>>>
> > >>>>
> > >>>>> On Sep 26, 2011, at 6:50 AM, Udo Weik wrote:
> > >>>>>
> > >>>>>> Hello,
> > >>>>>>
> > >>>>>> the length of that line is 1647 chars (162 strings).
> > >>>>>> The grammar is an existing one. What can/must I do?
> > >>>>>>
> > >>>>>> [15:41:27] XYZParser.java:14: code too large
> > >>>>>> [15:41:27]     public static final String[] tokenNames = new
> > String[] {
> > >>>>>> [15:41:27]                                  ^
> > >>>>>> [15:41:27] 1 error
> > >>>>>>
> > >>>>>>
> > >>>>>> Many thanks and greetings
> > >>>>>> Udo
> > >>>>>>
> > >>>>>>
> > >>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >>>>>> Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >>>>>
> > >>>>
> > >>>> <vhdl__UW1a.g>
> > >>>
> > >>
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >
> >
> >
> >
> > ------------------------------
> >
> > Message: 5
> > Date: Mon, 26 Sep 2011 15:50:11 -0700
> > From: Terence Parr <parrt at cs.usfca.edu>
> > Subject: Re: [antlr-interest] [stringtemplate-interest] a logo
> design?
> >        branding.
> > To: stringtemplate-interest List <stringtemplate-interest at antlr.org>,
> >        antlr-interest Interest <antlr-interest at antlr.org>
> > Message-ID: <93E1364E-AF32-4CF2-8E44-358BF9DB743B at cs.usfca.edu>
> > Content-Type: text/plain; charset=us-ascii
> >
> > Thanks for the feedback!
> > Ter
> > On Sep 25, 2011, at 10:12 PM, Michael Bedward wrote:
> >
> > > The correct answer is "you're the designer - you tell me".
> > >
> > > My fall back answers are:
> > >
> > >> 1. what existing logos do we like and why
> > >
> > > GeoTools: compass / spanner logo (http://geotools.org/) because
> it's
> > > a simple and informative pun
> > >
> > > TED: big red letters (http://www.ted.com/) because it's obvious and
> > memorable
> > >
> > > ScapeToad: toad logo (http://scapetoad.choros.ch/) because it's
> > > ridiculous with a certain elegance
> > >
> > > R (http://www.r-project.org/) because you just say Rrrr...
> > >
> > >> 2.  what logos do we dislike and why
> > >
> > > Sonatype: horizontal bars and thin font (http://www.sonatype.com/)
> > > because it looks corporate and boring
> > >
> > > ESRI globe in grid (http://www.esri.com/) because it looks like
> they
> > > want to take the world prisoner
> > >
> > > Old Sun logo (as seen at:
> > >
> > http://java.sun.com/products/java-
> media/jai/forDevelopers/jai1_0_1guid
> > e-unc/JAITOC.fm.html
> > )
> > > because it's on the wrong side of the line between clever and wanky
> > >
> > > NetBeans: box figure and name (http://netbeans.org/) because what
> > > are you supposed to do with an empty box ?
> > >
> > >> 3. Preferred typography
> > >
> > > Either elegant or in your face, but not script (usually lacks
> > > immediacy) or very angular / geometric (e.g. the font used for the
> > > Oracle logo which looks fascist - though perhaps that's just my
> > > prejudice shining through).
> > >
> > > Michael
> > >
> > >
> > > On 26 September 2011 00:59, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> > >> hi.  Sam Harwell had the great idea that I should commission a
> logo
> > >> or
> > logos for the ANTLR project. Perhaps there is a similar and
> consistent
> > logo design for the individual tools. I'm also considering a new
> > layout and design for the website. Basically v4 will have major new
> > functionality and I want to do some nice branding for it. Sam also
> > recommend someone that seems very good for doing the logo design.
> > Questionnaire I have to fill out for this designer, however, asks
> > questions that I don't really know how to answer exactly. I thought
> > that I should appeal to you folks in the community so that we can
> hone the answers for the designer to get something nice.
> > Here are some questions that you might know the answer to or have
> > opinions
> > on:
> > >>
> > >> 1. what existing logos do we like and why
> > >>
> > >> 2.  what logos do we dislike and why
> > >>
> > >> 3. Preferred typography (heavy, light, modern, classic,
> handwritten
> > etc.)  maybe we don't want text in the logo at all, but it seems like
> > .g and .st could work in the individual tool logos. Microsoft logos
> for example:
> > >>
> > >>
> > >> Here is the logo portfolio of the guy:
> > >>
> > >> http://www.logoholik.com/logo_portfolio/logo_portfolio.html
> > >>
> > >>  any and all thoughts about branding are welcome.
> > >>
> > >> Ter
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> > >>
> > > _______________________________________________
> > > stringtemplate-interest mailing list
> > > stringtemplate-interest at antlr.org
> > > http://www.antlr.org/mailman/listinfo/stringtemplate-interest
> >
> >
> >
> > ------------------------------
> >
> > Message: 6
> > Date: Mon, 26 Sep 2011 21:54:33 -0400
> > From: "Kevin J. Cummings" <cummings at kjchome.homeip.net>
> > Subject: Re: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left
> >        Recursion with comments in grammar
> > To: antlr-interest at antlr.org
> > Message-ID: <4E812CD9.3000008 at kjchome.homeip.net>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > I'm confused.  If you have:
> >
> > string : string Plus string
> >       | string Minus string
> >       | Digit
> >       ;
> >
> > and you remove left recursion, why don't you end up with:
> >
> > string : Digit ( Plus Digit | Minus Digit )*
> >       ;
> >
> > And, yes, the error message with the ";" in it is amusing.
> >
> > On 09/26/2011 02:05 PM, The Researcher wrote:
> > > I forgot to give credit where credit is due.
> > >
> > > This grammar is from
> > >
> > > Aho, A. V., Lam, M. S., Sethi, R., & Ullman, J. D. (2007)
> Compilers:
> > > principles, techniques, & tools (2nd ed.). Boston: Pearson/Addison
> > Wesley.
> > > pg. 47, Example 2.5
> > >
> > >
> > >
> > >
> > >
> > > ---------- Forwarded message ----------
> > > From: The Researcher <researcher0x00 at gmail.com>
> > > Date: Mon, Sep 26, 2011 at 1:51 PM
> > > Subject: ANTLRWorks bug: Remove Left Recursion with comments in
> > > grammar
> > > To: antlr-interest at antlr.org
> > >
> > >
> > > grammar Ambiguious001;
> > >
> > >
> > >
> > > string      : string Plus string
> > >
> > >             | string Minus string
> > >
> > >             | Digit
> > >
> > >             ;
> > >
> > >
> > >
> > > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' |
> '9' ;
> > >
> > > Minus       : '-' ;
> > >
> > > Plus        : '+' ;
> > >
> > >
> > >
> > > Remove All Left Recursion or Remove Left Recursion produces
> > >
> > > grammar Ambiguious001;
> > >
> > >
> > >
> > > string      : (Digit) (Plus string | Minus string)*
> > >
> > >             ;
> > >
> > >
> > >
> > > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' |
> '9' ;
> > >
> > > Minus       : '-' ;
> > >
> > > Plus        : '+' ;
> > >
> > >
> > >
> > > However
> > >
> > > grammar Ambiguious001;
> > >
> > >
> > >
> > > // Parser
> > >
> > >
> > >
> > > string      : string Plus string
> > >
> > >             | string Minus string
> > >
> > >             | Digit
> > >
> > >             ;
> > >
> > >
> > >
> > > // Lexer
> > >
> > >
> > >
> > > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' |
> '9' ;
> > >
> > > Minus       : '-' ;
> > >
> > > Plus        : '+' ;
> > >
> > >
> > >
> > > Remove All Left Recursion or Remove Left Recursion produces
> > >
> > >
> > >
> > > grammar Ambiguious001;
> > >
> > >
> > >
> > > // Parser
> > >
> > >
> > >
> > > string      : (Digit
> > >
> > >             ;) (Plus string | Minus string)*
> > >
> > >
> > >
> > > // Lexer
> > >
> > >
> > >
> > > Digit       : '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' |
> '9' ;
> > >
> > > Minus       : '-' ;
> > >
> > > Plus        : '+' ;
> > >
> > >   It's the first time I have ever had an error wink at me.
> > >
> > > Eric
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
> >
> > --
> > Kevin J. Cummings
> > kjchome at verizon.net
> > cummings at kjchome.homeip.net
> > cummings at kjc386.framingham.ma.us
> > Registered Linux User #1232 (http://www.xlinuxcounter.net/)
> >
> >
> > ------------------------------
> >
> > Message: 7
> > Date: Tue, 27 Sep 2011 12:53:17 +1000
> > From: Gary Miller <gary at sumwise.com>
> > Subject: Re: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left
> >        Recursion with comments in grammar
> > To: researcher0x00 at gmail.com
> > Cc: antlr-interest at antlr.org
> > Message-ID:
> >
> > <CAFCNb3hKcjXNfv9UyU-+-AXZN96OEfrukvYCmW-k_-KQwj27Aw at mail.gmail.com
> > >
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > What version of are you using?
> > I've tried with 3.2 and 3.4 and get very boring error messages.
> >
> > eg 3.2 gives
> > 9:12: syntax error: antlr: <notsaved>:9:12: expecting RPAREN, found
> ';'
> >
> >
> > ------------------------------
> >
> > Message: 8
> > Date: Tue, 27 Sep 2011 11:38:46 +0800
> > From: Chan David <lifesting at gmail.com>
> > Subject: [antlr-interest] Best practices to insert breakpoint when
> >        generating code?
> > To: antlr-interest at antlr.org
> > Message-ID:
> >
> > <CAF_ThcLgLcgebMEYd+G5uWVSqoDFtyy-2w3NEhm62wxwjYaoiA at mail.gmail.com
> > >
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > Hi, Antlr fellows:
> >
> > I wrote a simple parser and a weak runtime to make a prototype of our
> DSL.
> > I
> > followed the de-facto definition steps:
> >
> >
> >   1. Define a lex grammar to describe tokens.
> >   2. Define a parser grammar to describe syntax and build an AST.
> >   3. Define a tree grammar to genereate DSL source code via
> StringTemplate
> >   which includes my hand-written execution code as runtime.
> >
> > Now I want to run this DSL code in Eclipse directly. So I must let
> DSL
> > support debugging.  I must embbed a hook function in every start of a
> > statement. I named this function 'breakpoint', it need a line number
> > as argument.
> >
> > For example, there's a "x=1" statement in my DSL where AST is
> > ^(ASSIGN, x,
> > 1) . I insert a function like below:
> >
> > assignStmt @init{
> >  breakpoint(Problem: how to get line number here?); } :  ^(ASSIGN,
> ID,
> > INT) {  .....//Omitted }
> >
> > I don't know how to get line number at the start of a statement,
> > further, I doubt whether this method is correct.
> >
> > Thank for you help!
> >
> >
> > ------------------------------
> >
> > Message: 9
> > Date: Tue, 27 Sep 2011 12:16:51 +0300
> > From: Ruslan Zasukhin <ruslan_zasukhin at valentina-db.com>
> > Subject: [antlr-interest] [C] code to change Token type, use char*
> and
> >        loose data when buffer destroyed
> > To: "antlr-interest at antlr.org" <antlr-interest at antlr.org>,      Jim
> Idle
> >        <jimi at temporal-wave.com>
> > Message-ID: <CAA76F33.F2983%ruslan_zasukhin at valentina-db.com>
> > Content-Type: text/plain;       charset="US-ASCII"
> >
> > Hi All,
> >
> > ===== TASK ======
> >
> > In SQL we must be able write
> >      SELECT 'aaa' 'bbbb'
> >
> > And this should be same as
> >      SELECT 'aaabbbb'
> >
> > I.e. Parser must concatenate literals self.
> > This was quite easy do in ANTLR 2,
> > and I already have kill 5-6 hours in ANTLR 3.  :-((((((
> >
> >
> > I have try many tricks for ANTLR3 itself trying to use its tokens and
> > ANTLR_STRING class but no luck.
> >
> > Finally I have give up and have try to use simple code as in v2 using
> > STD::string as place to accumulate literal.
> >
> > =================================
> > character_string_literal
> > @init{
> >    STD::string st;
> > }
> >    :    ( STRING_LITERAL
> >            {
> >                st.append(
> >                    (const char*) $STRING_LITERAL.text->chars,
> >                    $STRING_LITERAL.text->len );
> >            }
> >        )+
> >            -> ^( CONST_STR[ st.c_str() ] )
> >    ;
> > =================================
> >
> > But this not works, because new Token object stores just pointer
> >
> >        newToken->textState        = ANTLR3_TEXT_CHARP;
> >        newToken->tokText.chars = (pANTLR3_UCHAR)text;
> >
> > And as only STD::string dies we get problem.
> >
> >
> > Jim, how this simple task can be solved in the C TARGET ?
> >
> > Also I see that for Java code they can contruct dynamic text And
> > produce token using that text. For example on this page
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
> >
> >                            -> ^('+' $p
> > INT[String.valueOf($a.int+$b.int)])
> >
> >
> > But C target tryies to work only which char*
> >
> >
> > I guess that ANTLR_STRING setText() can help me, But I cannot see how
> > I can call that from my
> >
> >            -> ^( CONST_STR[ st.c_str() ] )
> >
> > ???
> >
> > Thank you for points ...
> >
> >
> > --
> > Best regards,
> >
> > Ruslan Zasukhin
> > VP Engineering and New Technology
> > Paradigma Software, Inc
> >
> > Valentina - Joining Worlds of Information
> http://www.paradigmasoft.com
> >
> > [I feel the need: the need for speed]
> >
> >
> >
> >
> > ------------------------------
> >
> > Message: 10
> > Date: Tue, 27 Sep 2011 06:45:54 -0400
> > From: The Researcher <researcher0x00 at gmail.com>
> > Subject: Re: [antlr-interest] Fwd: ANTLRWorks bug: Remove Left
> >        Recursion with comments in grammar
> > To: antlr-interest at antlr.org
> > Message-ID:
> >
> > <CAN45N12sF0t7mfWaPy3ZB3OuBh-iJxswbPvtJOcgTozOdY4rFg at mail.gmail.com
> > >
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> > On Mon, Sep 26, 2011 at 10:53 PM, Gary Miller <gary at sumwise.com>
> wrote:
> >
> > > What version of are you using?
> > > I've tried with 3.2 and 3.4 and get very boring error messages.
> > >
> > > eg 3.2 gives
> > > 9:12: syntax error: antlr: <notsaved>:9:12: expecting RPAREN, found
> ';'
> > >
> >
> > This is done using ANTLRWorks. See attached screenshots.
> >
> > Eric
> > -------------- next part -------------- A non-text attachment was
> > scrubbed...
> > Name: Left Recursion Refactor Bug ANTLRWorks 1.4.2.png
> > Type: image/png
> > Size: 101799 bytes
> > Desc: not available
> > Url :
> > http://www.antlr.org/pipermail/antlr-
> interest/attachments/20110927/fa1
> > e68c4/attachment.png
> > -------------- next part -------------- A non-text attachment was
> > scrubbed...
> > Name: Left Recursion Refactor Bug ANTLRWorks 1.4.3.png
> > Type: image/png
> > Size: 144985 bytes
> > Desc: not available
> > Url :
> > http://www.antlr.org/pipermail/antlr-
> interest/attachments/20110927/fa1
> > e68c4/attachment-0001.png
> >
> > ------------------------------
> >
> > _______________________________________________
> > antlr-interest mailing list
> > antlr-interest at antlr.org
> > http://www.antlr.org/mailman/listinfo/antlr-interest
> >
> > End of antlr-interest Digest, Vol 82, Issue 22
> > **********************************************
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Tue Sep 27 12:58:17 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 27 Sep 2011 21:58:17 +0200
Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and static void
	int(pXYZParser ctx); 
Message-ID: <4E822AD9.9010408@aol.com>

Hello Jim,

C++Builder doesn't like the int of int(pXYZParser ctx) - is it possible to use another name?


Many thanks and greetings
Udo

From jonne.zutt.ml at gmail.com  Tue Sep 27 13:06:22 2011
From: jonne.zutt.ml at gmail.com (Jonne Zutt)
Date: Tue, 27 Sep 2011 22:06:22 +0200
Subject: [antlr-interest] few beginner questions
In-Reply-To: <CAJg62X8fNh_BCKO88qsFh5mZYPE6+qVb4pFzdL5Hz21CbDqidA@mail.gmail.com>
References: <CAJg62X8fNh_BCKO88qsFh5mZYPE6+qVb4pFzdL5Hz21CbDqidA@mail.gmail.com>
Message-ID: <CAJg62X8B4_ENttDDcsO45t_5SFL+NqrXdTMxjF3DbnfQwRf6FA@mail.gmail.com>

Ok, it seems http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
answers my first question. But I came up with the following identifier
rules,
which seems to work for me:

identifier
  :  DoubleQuote ~(DoubleQuote)+ DoubleQuote
  ;

On Tue, Sep 27, 2011 at 8:42 PM, Jonne Zutt <jonne.zutt.ml at gmail.com> wrote:

> Dear antlr community,
>
> I have created a minimal project, which illustrates three "challenges" I
> currently have.
> I attached the source, but hope to make myself clear enough in this email
> as well.
>
> *1) How to deal with priorities*?
>
> I have a rule like the below 'operation', where Command1 ('am') can also
> occur within the 'identifier' rule.
>
> operation
>   :  Command1 Space LowerCase SemiColon
>   |  Id Space identifier SemiColon
>   ;
>
> Below is the current output. It goes wrong if 'am' is part of the
> identifier. I tried to fix this by moving
> the order of some rules, but without success.
>
> Running org.myantlr.test.parsers.a.TestATest
> test: am e;id "some nice gAme";
> --> test passed.
> test: am e;id "some nice game";
> BR.recoverFromMismatchedToken
> MismatchedTokenException(9!=4)
>        at
> org.antlr.runtime.BaseRecognizer.mismatch(BaseRecognizer.java:117)
>        at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:99)
>        at
> org.myantlr.test.parsers.a.TestAParser.identifier(TestAParser.java:81)
>        at
> org.myantlr.test.parsers.a.TestAParser.operation(TestAParser.java:224)
>        at
> org.myantlr.test.parsers.a.TestAParser.parse(TestAParser.java:155)
>        at org.myantlr.test.parsers.a.TestATest.test(TestATest.java:33)
>        at org.myantlr.test.parsers.a.TestATest.test2(TestATest.java:19)
>
> *2) grammar hierarchy?*
>
> I read about the import statement in antlr. But I was not successful in
> getting these two grammers to import a Base.g.
>
> *3) configure output directory*
>
> After running 'mvn package' all generated sources are in the 'b' package. I
> expected TestA files to be generated in the 'a' package.
> Is that a bug in the antlr3-maven-plugin, or am I doing something wrong?
>
> ./target/generated-sources/antlr/org/myantlr/test/parsers
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestA.tokens
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestA__.g
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestALexer.java
>
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestAParser.java
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestB.tokens
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestB__.g
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestBLexer.java
>
> ./target/generated-sources/antlr/org/myantlr/test/parsers/b/TestBParser.java
>
> Thanks,
> Jonne.
>
>
>
>
>

From jimi at temporal-wave.com  Tue Sep 27 14:00:17 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 27 Sep 2011 14:00:17 -0700
Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and static
 void int(pXYZParser ctx); 
In-Reply-To: <4E822AD9.9010408@aol.com>
References: <4E822AD9.9010408@aol.com>
Message-ID: <675763566300f7464c803ba7f26a2a3d@mail.gmail.com>

Is that the name of a rule? Just change the rule name. If this is a method
in the runtime, then that is a bug in C++ builder - if the C compiler is
happy, then the build tool should be happy. But you need to give me more
info so I can decide.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Tuesday, September 27, 2011 12:58 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and static
> void int(pXYZParser ctx);
>
> Hello Jim,
>
> C++Builder doesn't like the int of int(pXYZParser ctx) - is it possible
> to use another name?
>
>
> Many thanks and greetings
> Udo
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Tue Sep 27 14:16:46 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 27 Sep 2011 23:16:46 +0200
Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and static
 void int(pXYZParser ctx); /encoding
In-Reply-To: <675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
References: <4E822AD9.9010408@aol.com>
	<675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
Message-ID: <4E823D3E.7070006@aol.com>

Hello Jim,

> Is that the name of a rule? Just change the rule name. If this is a method
> in the runtime, then that is a bug in C++ builder - if the C compiler is
> happy, then the build tool should be happy. But you need to give me more
> info so I can decide.

you are right, it's a name of a (parser) rule - int. There is a a lexer rule
INT which is prefixed by a 'm' - mINT. Why is there no prefix for parser rules?
I'm just getting my first grammar working with C++Builder, really a lot of
micracles and hurdles. I miss antlr3AsciiFileStreamNew, so what is the encoding
for a simple, plain ascii-file when I use
antlr3FileStreamNew (pANTLR3_UINT8 fileName, ANTLR3_UINT32 encoding)?


Many thanks and greetings
Udo


>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Udo Weik
>> Sent: Tuesday, September 27, 2011 12:58 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and static
>> void int(pXYZParser ctx);
>>
>> Hello Jim,
>>
>> C++Builder doesn't like the int of int(pXYZParser ctx) - is it possible
>> to use another name?
>>
>>
>> Many thanks and greetings
>> Udo
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Tue Sep 27 14:26:16 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 27 Sep 2011 14:26:16 -0700
Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and static
 void int(pXYZParser ctx); /encoding
In-Reply-To: <4E823D3E.7070006@aol.com>
References: <4E822AD9.9010408@aol.com>	<675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
	<4E823D3E.7070006@aol.com>
Message-ID: <5fcf53a8f3d97e2f6c8d3f2138cf12d1@mail.gmail.com>

It is the same, but you just add one of:


/// General latin-1 or other 8 bit encoding scheme such as straight ASCII
///
#define ANTLR3_ENC_8BIT     4

/// UTF-8 encoding scheme
///
#define ANTLR3_ENC_UTF8     8

/// UTF-16 encoding scheme (which also covers UCS2 as that does not have
surrogates)
///
#define ANTLR3_ENC_UTF16        16
#define ANTLR3_ENC_UTF16BE      16 + ANTLR3_BE
#define ANTLR3_ENC_UTF16LE      16 + ANTLR3_LE

/// UTF-32 encoding scheme (basically straight 32 bit)
///
#define ANTLR3_ENC_UTF32        32
#define ANTLR3_ENC_UTF32BE      32 + ANTLR3_BE
#define ANTLR3_ENC_UTF32LE      32 + ANTLR3_LE

/// Input is 8 bit EBCDIC (which we convert to 8 bit ASCII on the fly
///
#define ANTLR3_ENC_EBCDIC       64


As in:

antlr3FileStreamNew ((pANTLR3_UINT8)"fred", ANTLR3_ENC_8BIT);


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Tuesday, September 27, 2011 2:17 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Jim Idle: C-Runtime - C++Builder and
> static void int(pXYZParser ctx); /encoding
>
> Hello Jim,
>
> > Is that the name of a rule? Just change the rule name. If this is a
> > method in the runtime, then that is a bug in C++ builder - if the C
> > compiler is happy, then the build tool should be happy. But you need
> > to give me more info so I can decide.
>
> you are right, it's a name of a (parser) rule - int. There is a a lexer
> rule INT which is prefixed by a 'm' - mINT. Why is there no prefix for
> parser rules?
> I'm just getting my first grammar working with C++Builder, really a lot
> of micracles and hurdles. I miss antlr3AsciiFileStreamNew, so what is
> the encoding for a simple, plain ascii-file when I use
> antlr3FileStreamNew (pANTLR3_UINT8 fileName, ANTLR3_UINT32 encoding)?
>
>
> Many thanks and greetings
> Udo
>
>
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Udo Weik
> >> Sent: Tuesday, September 27, 2011 12:58 PM
> >> To: antlr-interest at antlr.org
> >> Subject: [antlr-interest] Jim Idle: C-Runtime - C++Builder and
> static
> >> void int(pXYZParser ctx);
> >>
> >> Hello Jim,
> >>
> >> C++Builder doesn't like the int of int(pXYZParser ctx) - is it
> >> C++possible
> >> to use another name?
> >>
> >>
> >> Many thanks and greetings
> >> Udo
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ruslan_zasukhin at valentina-db.com  Tue Sep 27 14:31:04 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 28 Sep 2011 00:31:04 +0300
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <fa48a8ce3eba7d189126d9e633893306@mail.gmail.com>
Message-ID: <CAA81B48.F2A2D%ruslan_zasukhin@valentina-db.com>

On 9/27/11 9:45 PM, "Jim Idle" <jimi at temporal-wave.com> wrote:

Hi Jim,

As always thank you a lots for your time.

> Each token contains the char * pointer that is in to the input stream
> start, which is what I generally use, but if you want to use my build in
> string stuff and have it auto free then it is just:
> 
> csl
> @declarations { pANTLR3_STRING s; }
> : s1=STRING
>      { s= $s1.text; }
>    (
> s2=STRING
> {
> s->append(s, $s2.text);
> }
> 
>    )*
> { $s1->setText(s);  /* Check that, but I think it is this */ }
> 
> ->s1
> ;

Nice to see I am becoming expert in the ANTRL3 :-)

I have try this way above. What I like here is that if there is only ONE
literal, 
what is true for 99%  we are still effective, no need do append() or use
other buffers.

This is how should looks above rule, to really compile ...

character_string_literal
@declarations{
    pANTLR3_STRING s;
}
    :    s1 = STRING_LITERAL        { s = $s1.text; }
        ( s2 = STRING_LITERAL       { s->append( s, (const char*)
$s2.text->chars ); }
        )*
        
        { $s1->setText( $s1, s ); }
        
        -> $s1
    ;    


But (!!)

This rule in the latest ANTLR 3.4.1 generate C code, which not compiles.
Oops.
This is why I have spent yesterday the whole evening loosing hairs :-)

Look on generated code:

// $ANTLR start synpred20_SqlParser_v3
static void synpred20_SqlParser_v3_fragment(pSqlParser_v3Parser ctx )
{
    pANTLR3_COMMON_TOKEN    ;           <<<<<<<   should be s2;

           = NULL;                                       <<<<<<<   s2 =
NULL;


    // 
/PARADIGMA/Developer_2/sources/VKernel/VSQL/Parser/v3/grammars/SqlParser_v3.
g:644:5: (s2= STRING_LITERAL )
    // 
/PARADIGMA/Developer_2/sources/VKernel/VSQL/Parser/v3/grammars/SqlParser_v3.
g:644:5: s2= STRING_LITERAL
    {
        s2 = (pANTLR3_COMMON_TOKEN) MATCHT(STRING_LITERAL,
&FOLLOW_STRING_LITERAL_in_synpred20_SqlParser_v34838);


I don?t know why this is happens.
It seems happens only for STRING_LITERAL in my grammar.
But I do not see nothing special to this LEXER-generated token.
I can send you my parser.g file so you can test self to see where is
trouble.


Now, I have this rule working using above idea.
GOOD. Thank you, Jim.

And now I am ready to play with second way

csl
: s1+=STRING -> $s1+  /* Or, ->^(SLIT $s1+) */
;


I have also try this way ysterday (again I am glad I have think about it)
But I was not able find solution how to join all that tokens in the array.

You have give nice idea ? join them in the TreeParser.
Yes, indeed this can work... So I will play now with this way.


-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]


From douglasgodfrey at gmail.com  Tue Sep 27 14:46:22 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 27 Sep 2011 17:46:22 -0400
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <CAA76F33.F2983%ruslan_zasukhin@valentina-db.com>
Message-ID: <CAA7B8BD.3AD7%douglasgodfrey@gmail.com>

You need to modify your string lexing rules to use sub-rules for the
elementary
strings and return the concatenated string as the lexer token value.

The value of 

StringConstant: QuotedString
		{RemoveQuotePairs($QuotedString);};

fragment
QuotedString: 	( StringTerm )+;

fragment
StringTerm: 	Dquote ( Character )* Dquote;

fragment
Character:	( ' ' | AlphaChar | Punctuation | Digit );






On 9/27/11 5:16 AM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:

>Hi All,
>
>===== TASK ======
>
>In SQL we must be able write
>      SELECT 'aaa' 'bbbb'
>
>And this should be same as
>      SELECT 'aaabbbb'
>
>I.e. Parser must concatenate literals self.
>This was quite easy do in ANTLR 2,
>and I already have kill 5-6 hours in ANTLR 3.  :-((((((
>
>
>I have try many tricks for ANTLR3 itself trying to use its tokens and
>ANTLR_STRING class but no luck.
>
>Finally I have give up and have try to use simple code as in v2 using
>STD::string as place to accumulate literal.
>
>=================================
>character_string_literal
>@init{ 
>    STD::string st;
>}
>    :    ( STRING_LITERAL
>            { 
>                st.append(
>                    (const char*) $STRING_LITERAL.text->chars,
>                    $STRING_LITERAL.text->len );
>            } 
>        )+
>            -> ^( CONST_STR[ st.c_str() ] )
>    ;    
>=================================
>
>But this not works, because new Token object stores just pointer
>
>        newToken->textState        = ANTLR3_TEXT_CHARP;
>        newToken->tokText.chars = (pANTLR3_UCHAR)text;
> 
>And as only STD::string dies we get problem.
>
>
>Jim, how this simple task can be solved in the C TARGET ?
>
>Also I see that for Java code they can contruct dynamic text
>And produce token using that text. For example on this page
>
>http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>
>                            -> ^('+' $p
>INT[String.valueOf($a.int+$b.int)])
>
>
>But C target tryies to work only which char*
>
>
>I guess that ANTLR_STRING setText() can help me,
>But I cannot see how I can call that from my
>
>            -> ^( CONST_STR[ st.c_str() ] )
>
>???
>
>Thank you for points ...
>
>
>-- 
>Best regards,
>
>Ruslan Zasukhin
>VP Engineering and New Technology
>Paradigma Software, Inc
>
>Valentina - Joining Worlds of Information
>http://www.paradigmasoft.com
>
>[I feel the need: the need for speed]
>
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From WeikEngOff at aol.com  Tue Sep 27 14:59:22 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Tue, 27 Sep 2011 23:59:22 +0200
Subject: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks - debugging
 grammars
In-Reply-To: <675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
References: <4E822AD9.9010408@aol.com>
	<675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
Message-ID: <4E82473A.2070906@aol.com>

Hello again Jim,

first thanks for your support. The first grammar is working
with C++Builder. I'm some years older now.

Concerning the C-Runtime and ANTLRWorks - debugging grammars -
do you have something already in your "stack"?


Greetings
Udo


From ruslan_zasukhin at valentina-db.com  Tue Sep 27 15:34:57 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 28 Sep 2011 01:34:57 +0300
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <CAA7B8BD.3AD7%douglasgodfrey@gmail.com>
Message-ID: <CAA82A41.F2A4D%ruslan_zasukhin@valentina-db.com>

On 9/28/11 12:46 AM, "Douglas Godfrey" <douglasgodfrey at gmail.com> wrote:

Hi Douglas,

Yes, I have thinked about this way also.

But in your solution you use helper functions as
    RemoveQuotePairs()

Which, I guess do some coping in additional ram buffers.
This is fine for Java guys, but in C code, as Jim likes underline each time,
we tend to use only pointers to input buffer, as long as possible.
 

> You need to modify your string lexing rules to use sub-rules for the
> elementary
> strings and return the concatenated string as the lexer token value.
> 
> The value of 
> 
> StringConstant: QuotedString
> {RemoveQuotePairs($QuotedString);};
> 
> fragment
> QuotedString:  ( StringTerm )+;
> 
> fragment
> StringTerm:  Dquote ( Character )* Dquote;
> 
> fragment
> Character: ( ' ' | AlphaChar | Punctuation | Digit );

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From jimi at temporal-wave.com  Tue Sep 27 15:53:12 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 27 Sep 2011 15:53:12 -0700
Subject: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks - debugging
	grammars
In-Reply-To: <4E82473A.2070906@aol.com>
References: <4E822AD9.9010408@aol.com>	<675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
	<4E82473A.2070906@aol.com>
Message-ID: <53fbb6d58cb72f45d173f2360e16a026@mail.gmail.com>

Yes - it should be working already, so I am not sure what the problem is.
However, it is just as easy to use the C debugger for most tasks in case
you did not try that yet.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Tuesday, September 27, 2011 2:59 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks -
> debugging grammars
>
> Hello again Jim,
>
> first thanks for your support. The first grammar is working with
> C++Builder. I'm some years older now.
>
> Concerning the C-Runtime and ANTLRWorks - debugging grammars - do you
> have something already in your "stack"?
>
>
> Greetings
> Udo
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From douglasgodfrey at gmail.com  Tue Sep 27 19:26:51 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 27 Sep 2011 22:26:51 -0400
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <CAA82A41.F2A4D%ruslan_zasukhin@valentina-db.com>
Message-ID: <CAA7FA06.3B39%douglasgodfrey@gmail.com>

You don't necessarily need to remove embedded multiple quotes.
The function you use to access the string value can skip over the
multiple quotes. The original token string can be read-only.

Anyway, I remember a discussion on the Antlr list where you or
one of your co-workers discussed this very problem with a function
to eliminate the duplicate quotes.


On 9/27/11 6:34 PM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:

>On 9/28/11 12:46 AM, "Douglas Godfrey" <douglasgodfrey at gmail.com> wrote:
>
>Hi Douglas,
>
>Yes, I have thinked about this way also.
>
>But in your solution you use helper functions as
>    RemoveQuotePairs()
>
>Which, I guess do some coping in additional ram buffers.
>This is fine for Java guys, but in C code, as Jim likes underline each
>time,
>we tend to use only pointers to input buffer, as long as possible.
> 
>
>> You need to modify your string lexing rules to use sub-rules for the
>> elementary
>> strings and return the concatenated string as the lexer token value.
>> 
>> The value of 
>> 
>> StringConstant: QuotedString
>> {RemoveQuotePairs($QuotedString);};
>> 
>> fragment
>> QuotedString:  ( StringTerm )+;
>> 
>> fragment
>> StringTerm:  Dquote ( Character )* Dquote;
>> 
>> fragment
>> Character: ( ' ' | AlphaChar | Punctuation | Digit );
>
>-- 
>Best regards,
>
>Ruslan Zasukhin
>VP Engineering and New Technology
>Paradigma Software, Inc
>
>Valentina - Joining Worlds of Information
>http://www.paradigmasoft.com
>
>[I feel the need: the need for speed]
>
>
>
>List: http://www.antlr.org/mailman/listinfo/antlr-interest
>Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From ruslan_zasukhin at valentina-db.com  Tue Sep 27 23:40:47 2011
From: ruslan_zasukhin at valentina-db.com (Ruslan Zasukhin)
Date: Wed, 28 Sep 2011 09:40:47 +0300
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <CAA82A41.F2A4D%ruslan_zasukhin@valentina-db.com>
Message-ID: <CAA89C1F.F2A72%ruslan_zasukhin@valentina-db.com>

Hi Jim,

What you think about this idea to resolve everything on the LEXER level?

So we must resolve tokens as
    
* STRING_LITERAL          'aa'
* STRING_LITERAL          'aa' ws* 'bb'     => Token( "aabb" )

* STRING_LITERAL          'aa\'bb'          => Token( "aa'bb" )
* STRING_LITERAL          'aa''bb'           => Token( "aa'bb" )
* STRING_LITERAL          'aa''bb''cc'      => Token( "aa'bb'cc" )

* HEX_LITERAL              x'aa'                  => Token( "aabb" )
* HEX_LITERAL              x'aa' ws* 'bb'     => Token( "aabb" )


Do you think we can do this in [C] without copying buffers?
I think not.

Then question is: 
    how this can be solved using minimal copies?

Or you think that better really use
    Lexer -> Parser -> TreeParser combination ?


On 9/28/11 1:34 AM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-db.com>
wrote:

> On 9/28/11 12:46 AM, "Douglas Godfrey" <douglasgodfrey at gmail.com> wrote:
> 
> Hi Douglas,
> 
> Yes, I have thinked about this way also.
> 
> But in your solution you use helper functions as
>     RemoveQuotePairs()
> 
> Which, I guess do some coping in additional ram buffers.
> This is fine for Java guys, but in C code, as Jim likes underline each time,
> we tend to use only pointers to input buffer, as long as possible.
>  
> 
>> You need to modify your string lexing rules to use sub-rules for the
>> elementary
>> strings and return the concatenated string as the lexer token value.
>> 
>> The value of 
>> 
>> StringConstant: QuotedString
>> {RemoveQuotePairs($QuotedString);};
>> 
>> fragment
>> QuotedString:  ( StringTerm )+;
>> 
>> fragment
>> StringTerm:  Dquote ( Character )* Dquote;
>> 
>> fragment
>> Character: ( ' ' | AlphaChar | Punctuation | Digit );

-- 
Best regards,

Ruslan Zasukhin
VP Engineering and New Technology
Paradigma Software, Inc

Valentina - Joining Worlds of Information
http://www.paradigmasoft.com

[I feel the need: the need for speed]



From luchesar.cekov at ontology-partners.com  Wed Sep 28 04:18:15 2011
From: luchesar.cekov at ontology-partners.com (Luchesar Cekov)
Date: Wed, 28 Sep 2011 12:18:15 +0100
Subject: [antlr-interest] ANTLR runtime logging. System.err messages from
	antlr
Message-ID: <4E830277.20800@ontology-partners.com>

Hi guys,

My ANTLR parser is pretty mature now and working in production for a 
long time.
The only thing that's bothering me is I am getting lots of System.err 
logging like this:

line 0:-1 mismatched input '<EOF>' expecting <EOR>
line 0:-1 mismatched input '<EOF>' expecting <EOR>
line 0:-1 mismatched input '<EOF>' expecting <EOR>
line 0:-1 mismatched input '<EOF>' expecting <EOR>
line 0:-1 mismatched input '<EOF>' expecting <EOR>
line 17:16 mismatched input '"' expecting <EOR>
line 17:16 mismatched input '"' expecting <EOR>
line 17:18 mismatched character '<EOF>' expecting '"'
line 17:16 mismatched input '"a' expecting <EOR>
line 17:19 mismatched character '<EOF>' expecting '"'
line 17:16 mismatched input '"as' expecting <EOR>

This is logged somewhere in the ANTLR runtime. Is there a way to 
redirect or stop that particular log messages?

Thanks,
Luchesar

-- 

Luchesar Cekov
Software Engineer
+44 (0)20 7239 4949
*Ontology Systems*
www.ontology.com <http://www.ontology.com/>

	

cid:image001.gif at 01CB28DC.799AB7D0

Registered Office: Ontology-Partners Limited, Dalton House, 60 Windsor 
Avenue, London SW19 2RR, UK

Company Registration No. 5794201


From mmatinlassi at icinetic.com  Wed Sep 28 08:37:25 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Wed, 28 Sep 2011 17:37:25 +0200
Subject: [antlr-interest] Csharp target, Recover(input, e)
Message-ID: <000f01cc7df4$864edfb0$92ec9f10$@icinetic.com>

Hi,

 

I am doing a grammar for C sharp target. I have following problem, I need
help with


 

When parser input contains unexpected character, let?s say ?*?  or ?<?  that
is not defined in any lexer/parser rule or token, happens the following:

1.       RecognitionException (subtype MismatchedTokenException)will be
thrown from the rule in question. This OK.

2.       Error reported is ok. Something like ?mismatched input
[@20,56:55='',<18>,8:2] expecting ENDOFCLASS?

3.       Recover method will be called. This takes forever(or at least 10
seconds), then another exception will be thrown. Either
?OutOfMemoryException? or ?ArgumentOutOfRangeException?

 

Shouldn?t Recover(input, e) method recover from this kinds of errors? What
am I doing wrong?

 

Thanks for help,

 

Mari


From jimi at temporal-wave.com  Wed Sep 28 08:49:04 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Sep 2011 08:49:04 -0700
Subject: [antlr-interest] [C] code to change Token type,
 use char* and loose data when buffer destroyed
In-Reply-To: <CAA89C1F.F2A72%ruslan_zasukhin@valentina-db.com>
References: <CAA82A41.F2A4D%ruslan_zasukhin@valentina-db.com>
	<CAA89C1F.F2A72%ruslan_zasukhin@valentina-db.com>
Message-ID: <8d2fd7b3278df9f58934c91e7b753845@mail.gmail.com>

You can of course process things anywhere that it does not cause ambiguity
but the best approach is to defer any processing that you can until the
last point in time, so that you do not process anything that you find you
don't actually need to. The second 'rule' is that you only want to process
things once, so process and cache the result for later.

If you can modify the input stream, then you don't need to copy anything
here, just move the start and end pointers in the token and overwrite the
few bytes that you are moving. That way there is no malloc and nothing to
free. If you cannot modify the input stream, then you will need to copy
from the token pointers of course.

So, here you should lex the escape characters and the embedded '' in to
STRING_LITERAL but not try to process the WS* there, return two or more
tokens. Then the parser or tree parser can process the strings. If you are
going to do multiple walks, then probably in the parser, but if just one
walk (ot only one walk where you care about the text represented by the
tokens), then process in the tree parser when you hit the STRING_LITERAL+

Jim

> -----Original Message-----
> From: Ruslan Zasukhin [mailto:ruslan_zasukhin at valentina-db.com]
> Sent: Tuesday, September 27, 2011 11:41 PM
> To: antlr-interest at antlr.org; Jim Idle
> Subject: Re: [antlr-interest] [C] code to change Token type, use char*
> and loose data when buffer destroyed
>
> Hi Jim,
>
> What you think about this idea to resolve everything on the LEXER
> level?
>
> So we must resolve tokens as
>
> * STRING_LITERAL          'aa'
> * STRING_LITERAL          'aa' ws* 'bb'     => Token( "aabb" )
>
> * STRING_LITERAL          'aa\'bb'          => Token( "aa'bb" )
> * STRING_LITERAL          'aa''bb'           => Token( "aa'bb" )
> * STRING_LITERAL          'aa''bb''cc'      => Token( "aa'bb'cc" )
>
> * HEX_LITERAL              x'aa'                  => Token( "aabb" )
> * HEX_LITERAL              x'aa' ws* 'bb'     => Token( "aabb" )
>
>
> Do you think we can do this in [C] without copying buffers?
> I think not.
>
> Then question is:
>     how this can be solved using minimal copies?
>
> Or you think that better really use
>     Lexer -> Parser -> TreeParser combination ?
>
>
> On 9/28/11 1:34 AM, "Ruslan Zasukhin" <ruslan_zasukhin at valentina-
> db.com>
> wrote:
>
> > On 9/28/11 12:46 AM, "Douglas Godfrey" <douglasgodfrey at gmail.com>
> wrote:
> >
> > Hi Douglas,
> >
> > Yes, I have thinked about this way also.
> >
> > But in your solution you use helper functions as
> >     RemoveQuotePairs()
> >
> > Which, I guess do some coping in additional ram buffers.
> > This is fine for Java guys, but in C code, as Jim likes underline
> each
> > time, we tend to use only pointers to input buffer, as long as
> possible.
> >
> >
> >> You need to modify your string lexing rules to use sub-rules for the
> >> elementary strings and return the concatenated string as the lexer
> >> token value.
> >>
> >> The value of
> >>
> >> StringConstant: QuotedString
> >> {RemoveQuotePairs($QuotedString);};
> >>
> >> fragment
> >> QuotedString:  ( StringTerm )+;
> >>
> >> fragment
> >> StringTerm:  Dquote ( Character )* Dquote;
> >>
> >> fragment
> >> Character: ( ' ' | AlphaChar | Punctuation | Digit );
>
> --
> Best regards,
>
> Ruslan Zasukhin
> VP Engineering and New Technology
> Paradigma Software, Inc
>
> Valentina - Joining Worlds of Information http://www.paradigmasoft.com
>
> [I feel the need: the need for speed]
>

From jimi at temporal-wave.com  Wed Sep 28 08:51:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Sep 2011 08:51:36 -0700
Subject: [antlr-interest] ANTLR runtime logging. System.err messages
	from antlr
In-Reply-To: <4E830277.20800@ontology-partners.com>
References: <4E830277.20800@ontology-partners.com>
Message-ID: <351774ebca8681781c04061b7e7196bc@mail.gmail.com>

This means that your lexer has bugs in it and is not catering for all
situations. Just use the input that is causing this to find out what it
wrong with your lexer.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Luchesar Cekov
> Sent: Wednesday, September 28, 2011 4:18 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR runtime logging. System.err messages
> from antlr
>
> Hi guys,
>
> My ANTLR parser is pretty mature now and working in production for a
> long time.
> The only thing that's bothering me is I am getting lots of System.err
> logging like this:
>
> line 0:-1 mismatched input '<EOF>' expecting <EOR> line 0:-1 mismatched
> input '<EOF>' expecting <EOR> line 0:-1 mismatched input '<EOF>'
> expecting <EOR> line 0:-1 mismatched input '<EOF>' expecting <EOR> line
> 0:-1 mismatched input '<EOF>' expecting <EOR> line 17:16 mismatched
> input '"' expecting <EOR> line 17:16 mismatched input '"' expecting
> <EOR> line 17:18 mismatched character '<EOF>' expecting '"'
> line 17:16 mismatched input '"a' expecting <EOR> line 17:19 mismatched
> character '<EOF>' expecting '"'
> line 17:16 mismatched input '"as' expecting <EOR>
>
> This is logged somewhere in the ANTLR runtime. Is there a way to
> redirect or stop that particular log messages?
>
> Thanks,
> Luchesar
>
> --
>
> Luchesar Cekov
> Software Engineer
> +44 (0)20 7239 4949
> *Ontology Systems*
> www.ontology.com <http://www.ontology.com/>
>
>
>
> cid:image001.gif at 01CB28DC.799AB7D0
>
> Registered Office: Ontology-Partners Limited, Dalton House, 60 Windsor
> Avenue, London SW19 2RR, UK
>
> Company Registration No. 5794201

From sharwell at pixelminegames.com  Wed Sep 28 09:16:34 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Wed, 28 Sep 2011 11:16:34 -0500
Subject: [antlr-interest] Csharp target, Recover(input, e)
In-Reply-To: <000f01cc7df4$864edfb0$92ec9f10$@icinetic.com>
References: <000f01cc7df4$864edfb0$92ec9f10$@icinetic.com>
Message-ID: <05d501cc7df9$fe4364a0$faca2de0$@pixelminegames.com>

I've never seen this occur before.

Can you send me a project with a grammar and input that exhibits this?

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mari Matinlassi
Sent: Wednesday, September 28, 2011 10:37 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Csharp target, Recover(input, e)

Hi,

 

I am doing a grammar for C sharp target. I have following problem, I need
help with


 

When parser input contains unexpected character, let?s say ?*?  or ?<?  that
is not defined in any lexer/parser rule or token, happens the following:

1.       RecognitionException (subtype MismatchedTokenException)will be
thrown from the rule in question. This OK.

2.       Error reported is ok. Something like ?mismatched input
[@20,56:55='',<18>,8:2] expecting ENDOFCLASS?

3.       Recover method will be called. This takes forever(or at least 10
seconds), then another exception will be thrown. Either
?OutOfMemoryException? or ?ArgumentOutOfRangeException?

 

Shouldn?t Recover(input, e) method recover from this kinds of errors? What
am I doing wrong?

 

Thanks for help,

 

Mari


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mmatinlassi at icinetic.com  Wed Sep 28 09:51:40 2011
From: mmatinlassi at icinetic.com (Mari Matinlassi)
Date: Wed, 28 Sep 2011 18:51:40 +0200
Subject: [antlr-interest] Csharp target, Recover(input, e)
In-Reply-To: <05d501cc7df9$fe4364a0$faca2de0$@pixelminegames.com>
References: <000f01cc7df4$864edfb0$92ec9f10$@icinetic.com>
	<05d501cc7df9$fe4364a0$faca2de0$@pixelminegames.com>
Message-ID: <002001cc7dfe$e5ba51a0$b12ef4e0$@icinetic.com>

Ok. In a separate email.

Mari

-----Original Message-----
From: Sam Harwell [mailto:sharwell at pixelminegames.com] 
Sent: Wednesday, September 28, 2011 6:17 PM
To: 'Mari Matinlassi'; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Csharp target, Recover(input, e)

I've never seen this occur before.

Can you send me a project with a grammar and input that exhibits this?

Thanks,
Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Mari Matinlassi
Sent: Wednesday, September 28, 2011 10:37 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Csharp target, Recover(input, e)

Hi,

 

I am doing a grammar for C sharp target. I have following problem, I need
help with


 

When parser input contains unexpected character, let?s say ?*?  or ?<?  that
is not defined in any lexer/parser rule or token, happens the following:

1.       RecognitionException (subtype MismatchedTokenException)will be
thrown from the rule in question. This OK.

2.       Error reported is ok. Something like ?mismatched input
[@20,56:55='',<18>,8:2] expecting ENDOFCLASS?

3.       Recover method will be called. This takes forever(or at least 10
seconds), then another exception will be thrown. Either
?OutOfMemoryException? or ?ArgumentOutOfRangeException?

 

Shouldn?t Recover(input, e) method recover from this kinds of errors? What
am I doing wrong?

 

Thanks for help,

 

Mari


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From jamevaalet at gmail.com  Wed Sep 28 11:50:52 2011
From: jamevaalet at gmail.com (jame vaalet)
Date: Thu, 29 Sep 2011 00:20:52 +0530
Subject: [antlr-interest] problem with parser
Message-ID: <CAHGxz8YWzBnd49yYTXe-HZH8qjavtkhc+O6E09cb9O36FcuLwQ@mail.gmail.com>

hi,
below is my tree grammar:

tokens
{
COMMA=',';
LPAREN='(';
RPAREN=')';

}

start : (NUMBER^ COMMA NUMBER)|WORD^;

WORD : ~(WHITESPACE|LPAREN|RPAREN)+ ;
WHITESPACE : ('\t'|' '|'\r'|'\n'|'\u000C');
NUMBER : DIGIT+;
fragment DIGIT : '0'..'9' ;


when my input is 1,2 which one is it gonna match ? WORD or (NUMBER^ COMMA
NUMBER)

I want this to be matched to latter by antlr i matching it with former..
what am i missing here..

-- 

-JAME

From asicaddress at gmail.com  Wed Sep 28 12:13:56 2011
From: asicaddress at gmail.com (A Z)
Date: Wed, 28 Sep 2011 14:13:56 -0500
Subject: [antlr-interest] C-target 3.2 : getParent returns invalid pointer
Message-ID: <CAP86aOe+CDyPg1UBaEH1X8PjUmG7n-PYBNvP9LBcW9Rjp7_9qA@mail.gmail.com>

Hello All,

I'm trying to run a tree parser on part of a tree and then delete that
sub-tree but I can't get the parent of the node that needs to be deleted.

//For each i in pPackageList
    pANTLR3_BASE_TREE thisNode = pPackageList->at(i);

    pANTLR3_BASE_TREE parentNode = thisNode->getParent(thisNode);

    unsigned int thisIndex = thisNode->getChildIndex(thisNode);

    runPackageTree(thisNode);

    parentNode->deleteChild(parentNode,thisIndex);

After calling getParent, parentNode is 0x38 which isn't a valid pointer. The
parent for thisNode should be a NilNode so I'm wondering if that is causing
a problem. I tried using deleteChild() on the node returned from the parser
rule but it still segfaults. Is there something special needed to remove a
child from the root node?

From jimi at temporal-wave.com  Wed Sep 28 12:27:34 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Sep 2011 12:27:34 -0700
Subject: [antlr-interest] C-target 3.2 : getParent returns invalid
	pointer
In-Reply-To: <CAP86aOe+CDyPg1UBaEH1X8PjUmG7n-PYBNvP9LBcW9Rjp7_9qA@mail.gmail.com>
References: <CAP86aOe+CDyPg1UBaEH1X8PjUmG7n-PYBNvP9LBcW9Rjp7_9qA@mail.gmail.com>
Message-ID: <11b998c5f9bab562ee687717e0fbb96c@mail.gmail.com>

Can't tell without seeing your code I am afraid, have you traced the
pointers in the debugger? Checked that your i is correct? What does
runPackageTree do? What does thisIndex look like? etc


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Wednesday, September 28, 2011 12:14 PM
> To: antlr-interest Interest
> Subject: [antlr-interest] C-target 3.2 : getParent returns invalid
> pointer
>
> Hello All,
>
> I'm trying to run a tree parser on part of a tree and then delete that
> sub-tree but I can't get the parent of the node that needs to be
> deleted.
>
> //For each i in pPackageList
>     pANTLR3_BASE_TREE thisNode = pPackageList->at(i);
>
>     pANTLR3_BASE_TREE parentNode = thisNode->getParent(thisNode);
>
>     unsigned int thisIndex = thisNode->getChildIndex(thisNode);
>
>     runPackageTree(thisNode);
>
>     parentNode->deleteChild(parentNode,thisIndex);
>
> After calling getParent, parentNode is 0x38 which isn't a valid
> pointer. The parent for thisNode should be a NilNode so I'm wondering
> if that is causing a problem. I tried using deleteChild() on the node
> returned from the parser rule but it still segfaults. Is there
> something special needed to remove a child from the root node?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From WeikEngOff at aol.com  Wed Sep 28 12:49:08 2011
From: WeikEngOff at aol.com (Udo Weik)
Date: Wed, 28 Sep 2011 21:49:08 +0200
Subject: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks - debugging
 grammars
In-Reply-To: <53fbb6d58cb72f45d173f2360e16a026@mail.gmail.com>
References: <4E822AD9.9010408@aol.com>	<675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
	<4E82473A.2070906@aol.com>
	<53fbb6d58cb72f45d173f2360e16a026@mail.gmail.com>
Message-ID: <4E837A34.6090100@aol.com>

Hello Jim,

> Yes - it should be working already, so I am not sure what the problem is.
> However, it is just as easy to use the C debugger for most tasks in case
> you did not try that yet.

I'm looking for basic examples, e. g. using the ANTLR3_DEBUG_EVENT_LISTENER_struct.


Many thanks and greetings
Udo


>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Udo Weik
>> Sent: Tuesday, September 27, 2011 2:59 PM
>> To: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks -
>> debugging grammars
>>
>> Hello again Jim,
>>
>> first thanks for your support. The first grammar is working with
>> C++Builder. I'm some years older now.
>>
>> Concerning the C-Runtime and ANTLRWorks - debugging grammars - do you
>> have something already in your "stack"?
>>
>>
>> Greetings
>> Udo
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Sep 28 14:02:28 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 28 Sep 2011 14:02:28 -0700
Subject: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks - debugging
	grammars
In-Reply-To: <4E837A34.6090100@aol.com>
References: <4E822AD9.9010408@aol.com>	<675763566300f7464c803ba7f26a2a3d@mail.gmail.com>
	<4E82473A.2070906@aol.com>	<53fbb6d58cb72f45d173f2360e16a026@mail.gmail.com>
	<4E837A34.6090100@aol.com>
Message-ID: <52609cb37e6597c9736e015b9c4a69fc@mail.gmail.com>

Oh - you don't do anything with that, that is for ANTLR works. You
generate with the -debug option, then compile as normal. When you run the
parser it will appear to hang, then use ANTLRWorks to load the grammar
file and "Debug remote" to localhost.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Udo Weik
> Sent: Wednesday, September 28, 2011 12:49 PM
> To: Antlr-Interest Antlr.Org
> Subject: Re: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks -
> debugging grammars
>
> Hello Jim,
>
> > Yes - it should be working already, so I am not sure what the problem
> is.
> > However, it is just as easy to use the C debugger for most tasks in
> > case you did not try that yet.
>
> I'm looking for basic examples, e. g. using the
> ANTLR3_DEBUG_EVENT_LISTENER_struct.
>
>
> Many thanks and greetings
> Udo
>
>
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Udo Weik
> >> Sent: Tuesday, September 27, 2011 2:59 PM
> >> To: antlr-interest at antlr.org
> >> Subject: Re: [antlr-interest] Jim Idle: C-Runtime and ANTLRWorks -
> >> debugging grammars
> >>
> >> Hello again Jim,
> >>
> >> first thanks for your support. The first grammar is working with
> >> C++Builder. I'm some years older now.
> >>
> >> Concerning the C-Runtime and ANTLRWorks - debugging grammars - do
> you
> >> have something already in your "stack"?
> >>
> >>
> >> Greetings
> >> Udo
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From cummings at kjchome.homeip.net  Wed Sep 28 16:55:32 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 28 Sep 2011 19:55:32 -0400
Subject: [antlr-interest] problem with parser
In-Reply-To: <CAHGxz8YWzBnd49yYTXe-HZH8qjavtkhc+O6E09cb9O36FcuLwQ@mail.gmail.com>
References: <CAHGxz8YWzBnd49yYTXe-HZH8qjavtkhc+O6E09cb9O36FcuLwQ@mail.gmail.com>
Message-ID: <4E83B3F4.1090408@kjchome.homeip.net>

On 09/28/2011 02:50 PM, jame vaalet wrote:
> hi,
> below is my tree grammar:
> 
> tokens
> {
> COMMA=',';
> LPAREN='(';
> RPAREN=')';
> 
> }
> 
> start : (NUMBER^ COMMA NUMBER)|WORD^;
> 
> WORD : ~(WHITESPACE|LPAREN|RPAREN)+ ;
> WHITESPACE : ('\t'|' '|'\r'|'\n'|'\u000C');
> NUMBER : DIGIT+;
> fragment DIGIT : '0'..'9' ;
> 
> 
> when my input is 1,2 which one is it gonna match ? WORD or (NUMBER^ COMMA
> NUMBER)

The former is a lexer rule, the latter a parser rule.  The lexer will
match as much as possible before the parser even runs.  If NUMBER COMMA
NUMBER needs to be parsed, then you need to re-define your WORD rule so
that it doesn't match it.

> I want this to be matched to latter by antlr i matching it with former..
> what am i missing here..


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://www.xlinuxcounter.net/)

From scott at javadude.com  Thu Sep 29 07:13:46 2011
From: scott at javadude.com (Scott Stanchfield)
Date: Thu, 29 Sep 2011 10:13:46 -0400
Subject: [antlr-interest] Sample automatic visitor
In-Reply-To: <F95695AE-D279-4E66-935F-C5EDA9A9C7FF@cs.usfca.edu>
References: <8028EAC9-D103-44DF-9A7E-6F82EAB50139@antlr.org>
	<CAN_KjY=Tp6FQZwD=nzMizgK2uJaHVbh3FR0FD8iEZ0RZ=rVAaA@mail.gmail.com>
	<F95695AE-D279-4E66-935F-C5EDA9A9C7FF@cs.usfca.edu>
Message-ID: <CAN_KjYk42MgO8Lotc9F_2feV1WfTAFms94L66wW=Ogenvwr4aw@mail.gmail.com>

Sorry for the delayed reply. I think you've hit the nail on the head with
the sample case (picking out pieces). This is exactly what Eclipse does; it
generates an AST and you create a subclass of ASTVisitor overriding methods
to examine specific stuctures. I've used it a few times in the past for some
simple API analysis tools.

-- Scott
(sent from my droid... please excuse brevity)
On Sep 8, 2011 8:45 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> Hi Scott. Thanks for the feedback. I think you're right. it was bugging me
a little bit too because I split things up compared to a normal visitor, but
I like this listener thingie. so you're cool with ParseTreeWalker? make
sense to me.
>
> Do you have any thoughts on the suitability of these listeners for
building language applications? clearly is not suitable for a lot of things,
perhaps even evaluating expression trees, but it seems like it would be
really easy if you want to pick out all of the declarations from a Java
file, for example.
>
> Ter
> On Sep 8, 2011, at 3:23 PM, Scott Stanchfield wrote:
>
>> Just to be pedantic (as I teach Design Patterns at JHU)... using the word
>> "visitor" here isn't quite correct (per GoF), and is apt to cause
confusion
>> for people who are familiar with the GoF visitor pattern.
>>
>> The TListener and its implementations are actually closer to the role of
>> "visitor" per GoF.
>>
>> I'd recommend renaming what you're calling the "visitor" to "walker" or
>> something similar, and keep the TListener.
>>
>> What you're doing here is much simpler to understand than the GoF visitor
>> pattern and more direct anyway...
>> -- Scott
>>
>> ----------------------------------------
>> Scott Stanchfield
>> http://javadude.com
>>
>>
>> On Thu, Sep 8, 2011 at 5:32 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>>
>>> Hi, I have a prototype working for the automatic parse tree construction
>>> and automatic visitor generation, which I've described here:
>>>
>>>
>>>
http://www.antlr.org/wiki/display/~admin/2011/09/08/Sample+v4+generated+visitor
>>>
>>> Feedback is very welcome, and now is a good time to speak up ;)
>>>
>>> It makes me a bit nervous to generate 2 extra files from every grammar,
but
>>> I'm guessing it will be one of the most popular ways to use ANTLR. My
goal
>>> is to make ANTLR very easy to use out-of-the-box while still allowing
>>> performance minded experts to get what they need.
>>>
>>> Ter
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ramponjerome at yahoo.fr  Fri Sep 30 10:33:08 2011
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Fri, 30 Sep 2011 18:33:08 +0100 (BST)
Subject: [antlr-interest] Re : incremental
In-Reply-To: <mailman.2119.1317402187.3152.antlr-interest@antlr.org>
Message-ID: <1317403988.62084.YahooMailClassic@web24708.mail.ird.yahoo.com>



Hi,


Compilers/parsers are often used over files slightly modified (error correction, whatever minor changes, ....)
Efficient applications may desire to implement incremental abilities (to speed-up runtime).

Those incremental abilities can be integrated at different levels (application, parser, ...).
Of course, the sooner you can collect data/changes, the best you incremental mechanism will be.

I did not find any topic related about in ANTLR documentation for such any support.
If anything exists, could you please let me know as part of my interest ?

Thanks

J.Rampon

From ramponjerome at yahoo.fr  Fri Sep 30 10:35:00 2011
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Fri, 30 Sep 2011 18:35:00 +0100 (BST)
Subject: [antlr-interest] AST builder
In-Reply-To: <mailman.2118.1317401843.3152.antlr-interest@antlr.org>
Message-ID: <1317404100.69740.YahooMailClassic@web24710.mail.ird.yahoo.com>


Hi,

Maintaining a tree parser in fully correspondence with the 
parser changes might be an issue under ANTLR .g files despite the clear 
interest of clear distinction.
Especially, if you maintain several tree parsers almost similar.

I did not see anything reported about the following works

http://essay.utwente.nl/59437/
which seems of some interest regarding that question.

Any feedback about (anyone using) or any plan to integrate such a functionality in the future ?

Thanks

Jerome Rampon

From sharwell at pixelminegames.com  Fri Sep 30 11:21:16 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 30 Sep 2011 13:21:16 -0500
Subject: [antlr-interest] Re : incremental
In-Reply-To: <1317403988.62084.YahooMailClassic@web24708.mail.ird.yahoo.com>
References: <mailman.2119.1317402187.3152.antlr-interest@antlr.org>
	<1317403988.62084.YahooMailClassic@web24708.mail.ird.yahoo.com>
Message-ID: <06af01cc7f9d$bf009060$3d01b120$@pixelminegames.com>

Hi J. Rampon,

I have an application in which individual files frequently change, and
reparsing the entire set of 4000 files would take a significant amount of
time. I handle this situation by keeping the parsed information in a
"loosely bound" cache, so my incremental updates are simply reparsing a
single file.

ANTLR does not have any inherent ability to perform incremental parsing, and
in my experience would not be particularly useful. Carefully written
grammars can certainly analyze in excess of 100KB of source code/second
(mine in C# are closer to 1MB/sec).

Do you have a particular application where this approach would fail, but
incremental parsing within the file would succeed?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rampon Jerome
Sent: Friday, September 30, 2011 12:33 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Re : incremental



Hi,


Compilers/parsers are often used over files slightly modified (error
correction, whatever minor changes, ....) Efficient applications may desire
to implement incremental abilities (to speed-up runtime).

Those incremental abilities can be integrated at different levels
(application, parser, ...).
Of course, the sooner you can collect data/changes, the best you incremental
mechanism will be.

I did not find any topic related about in ANTLR documentation for such any
support.
If anything exists, could you please let me know as part of my interest ?

Thanks

J.Rampon

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ramponjerome at yahoo.fr  Fri Sep 30 12:40:44 2011
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Fri, 30 Sep 2011 20:40:44 +0100 (BST)
Subject: [antlr-interest] Re : incremental
In-Reply-To: <06af01cc7f9d$bf009060$3d01b120$@pixelminegames.com>
Message-ID: <1317411644.26670.YahooMailClassic@web24706.mail.ird.yahoo.com>



I agree with your approach.
As AST from ANTLR is somewhere a dependency graph, I imagined originally we could compare a second run over a bunch of input files (vs previous AST more or less automated) to get new AST with modified or non modified info? added so that any tree parser actions could use directly for its own caching.
ANTLR keeps track of line and column, it could keep track of input stream+timestamps.
Idea was also to propagate info at each node level and not only file level.
I can do it with an ASTcompare + inputstream & timestamp data ... by my own or at a lower level in my application.
I wondered if anything in that sense could exist in ANTLR as I missed in doc. Apparently, there is nothing from you response.

Thanks

Jerome

Do you have a particular application where this approach would fail, but
incremental parsing within the file would succeed?

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Rampon Jerome
Sent: Friday, September 30, 2011 12:33 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Re : incremental



Hi,


Compilers/parsers are often used over files slightly modified (error
correction, whatever minor changes, ....) Efficient applications may desire
to implement incremental abilities (to speed-up runtime).

Those incremental abilities can be integrated at different levels
(application, parser, ...).
Of course, the sooner you can collect data/changes, the best you incremental
mechanism will be.

I did not find any topic related about in ANTLR documentation for such any
support.
If anything exists, could you please let me know as part of my interest ?

Thanks

J.Rampon

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


