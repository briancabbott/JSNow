From mailing at tam.si  Sun Jul  1 02:44:02 2012
From: mailing at tam.si (Matej Mailing)
Date: Sun, 1 Jul 2012 11:44:02 +0200
Subject: [antlr-interest] UTF-8, charVocabulary in options in 3.3
In-Reply-To: <CAF44DZdObgaZu8x_sjV=e=-x5yu7hZzxpiRPOtEaezYCqT-AoQ@mail.gmail.com>
References: <CAF44DZf03c2QLo3Pxxr9waHyp4=qPaOzOgBAb54ocHMh0EpLfw@mail.gmail.com>
	<CAOrgODbBKzO-ZciN=DAFZax8GtLuzzo-tb1PZ1MG6_svc-rbUw@mail.gmail.com>
	<CAF44DZdObgaZu8x_sjV=e=-x5yu7hZzxpiRPOtEaezYCqT-AoQ@mail.gmail.com>
Message-ID: <CAF44DZeTa=PcXgqOWQCMNyUvGAe_1KeF+SmgJYwDD2fQ0SxUmQ@mail.gmail.com>

Hi,

I was able to solve it, Bart, you were right, after double checking
the file it was NOT saved as UTF-8 and now when it is, it works like a
charm!

Thanks!

2012/6/30 Matej Mailing <mailing at tam.si>:
> Hi,
>
> I have edited the input file with Putty in a Linux console and the
> session encoding set to UTF-8. Now I have created the file also with
> Notepad++, also set the encoding to UTF-8 and I have the same
> behaviour. Is there an easy way to print out ANTLRFileStream? I
> suspect that I am looking for the wrong character code in the grammar
> file ...
>
> TIA,
> Matej
>
>
>
>
> 2012/6/29 Bart Kiers <bkiers at gmail.com>:
>> On Fri, Jun 29, 2012 at 12:26 PM, Matej Mailing <mailing at tam.si> wrote:
>>>
>>> Hi,
>>>
>>> I am new to antlr but already have an issue. I have an input file that
>>> contains some UTF-8 characters (like U+0161 -
>>> http://www.fileformat.info/info/unicode/char/161/index.htm) and I am
>>> using ANTLRFileStream(inputfile, "UTF-8") to get the input which is in
>>> UTF-8 as it should be. However, when I do
>>> "RES      : '\u0161' ;"
>>>
>>> it never matches - I get input1 line 1:0 no viable alternative at
>>> character '?' message.
>>>
>>> When I add the following segment to the grammar file:
>>>
>>> "options
>>> {
>>>           charVocabulary='\u0000'..'\uFFFE';
>>> }"
>>>
>>> I get an error:
>>> "internal error:  : java.lang.Error: Error parsing grammar.g: '\uFFFE'
>>> not expected ';'"
>>> ...
>>> error(100): grammar.g:5:24: syntax error: antlr: grammar.g:5:24:
>>> expecting SEMI, found '..'
>>> error(133): grammar.g:3:1: illegal option charVocabulary"
>>>
>>> I have been googling around for quite some time and none of the
>>> solutions seems to be working. What am I doing wrong?
>>>
>>
>> charVocabulary is an (old) ANTLR v2 option, ANTLR v3 doesn't need it: v3
>> accepts the range 0x0000..0xFFFF by default. So remove the option
>> charVocabular.
>>
>> My guess is that you didn't safe the input file containing 0x0161 properly
>> (I'm guessing it's saved as plain ASCII). Make sure you safe it as
>> Unicode/UTF-xx
>>
>> Regards,
>>
>> Bart.
>>

From mailing at tam.si  Sun Jul  1 04:06:44 2012
From: mailing at tam.si (Matej Mailing)
Date: Sun, 1 Jul 2012 13:06:44 +0200
Subject: [antlr-interest] Alternative Lexer rule in grammar file
Message-ID: <CAF44DZcVw41Dy3--c_vMhRMKPwe=YmJGNKBRMMFiiYVfgPRu-A@mail.gmail.com>

Hi,

I was able to solve the previous issue, but as for every n00b, another
issue has shown up: I have a lexer rule in the grammar file like:
ID : ('a'..'z'|'A'..'Z'|'_') { System.out.println($text + " is here."); };

and I would like to get an alternative output for every other text
that is not matched by ID and get the output like $text + "is not
here.".

What is the best way to achieve that? A subquestion: I was unable to
find any documentation source where names of output attributes like
$text, $line, $pos would be listed - I would be very happy to have it
as well. :-)

TIA,
Matej

From bradjcox at gmail.com  Sun Jul  1 14:38:32 2012
From: bradjcox at gmail.com (Brad Cox)
Date: Sun, 1 Jul 2012 17:38:32 -0400
Subject: [antlr-interest] What does "syntax error: antlr:
	org.antlr.runtime.EarlyExitException" mean?
Message-ID: <CAH2etF7PVEoaJjM+y-+quCE1X2pW88-SFKDEvpWCMaqQh_SNfg@mail.gmail.com>

I've a more or less working grammar at
http://code.google.com/p/no-xacml/source/browse/src/main/antlr3/noxacml/Grammar.g

I am trying to add actions to it but am stymied by this opaque error with
no usable line #s

[17:21:06] error(100): Grammar.g:10:1: syntax error: antlr:
org.antlr.runtime.EarlyExitException
[17:21:06] error(100): Grammar.g:0:1: syntax error: assign.types:
org.antlr.runtime.EarlyExitException

Focus on the policy rule at the top. Is my use of labels right? Necessary?
Etc.

AntlrWorks also reports errors concerning undefined SomeType. That's a
placeholder I'll fix once the policy rule works.

Current notion is to avoid ASTs and build OpenSAML types directly in the
grammar, mainly because maintaining children indices across files was
becoming such a PITA. Hoping I can use names this way, not indices, but
suggestions are welcome.

Example of AST approach I'm inclined to abandon is at
http://code.google.com/p/no-xacml/source/browse/src/main/java/noxacml/xacml2/PolicyBuilder.java

From bradjcox at gmail.com  Sun Jul  1 15:05:32 2012
From: bradjcox at gmail.com (Brad Cox)
Date: Sun, 1 Jul 2012 18:05:32 -0400
Subject: [antlr-interest] What does "syntax error: antlr:
 org.antlr.runtime.EarlyExitException" mean?
In-Reply-To: <CAH2etF7PVEoaJjM+y-+quCE1X2pW88-SFKDEvpWCMaqQh_SNfg@mail.gmail.com>
References: <CAH2etF7PVEoaJjM+y-+quCE1X2pW88-SFKDEvpWCMaqQh_SNfg@mail.gmail.com>
Message-ID: <CAH2etF70x3dejF3aaTsxaZ4722_y639OTzKkpAf7h7m9D+ScQw@mail.gmail.com>

That's strange. Adding output=AST and replacing SomeType with RuleType
(defined, but not at all the right type) eliminated the error. It now
generates code that compiles without errors.

I'd still appreciate comments as to whether I'm on the right track.

On Sun, Jul 1, 2012 at 5:38 PM, Brad Cox <bradjcox at gmail.com> wrote:

> I've a more or less working grammar at
> http://code.google.com/p/no-xacml/source/browse/src/main/antlr3/noxacml/Grammar.g
>
> I am trying to add actions to it but am stymied by this opaque error with
> no usable line #s
>
> [17:21:06] error(100): Grammar.g:10:1: syntax error: antlr:
> org.antlr.runtime.EarlyExitException
> [17:21:06] error(100): Grammar.g:0:1: syntax error: assign.types:
> org.antlr.runtime.EarlyExitException
>
> Focus on the policy rule at the top. Is my use of labels right? Necessary?
> Etc.
>
> AntlrWorks also reports errors concerning undefined SomeType. That's a
> placeholder I'll fix once the policy rule works.
>
> Current notion is to avoid ASTs and build OpenSAML types directly in the
> grammar, mainly because maintaining children indices across files was
> becoming such a PITA. Hoping I can use names this way, not indices, but
> suggestions are welcome.
>
> Example of AST approach I'm inclined to abandon is at
> http://code.google.com/p/no-xacml/source/browse/src/main/java/noxacml/xacml2/PolicyBuilder.java
>
>


-- 
Cell: 703-594-1883
Blog: http://bradjcox.blogspot.com
Web: http://virtualschool.edu
Manassas VA 20111

From jokeserver at gmail.com  Sun Jul  1 17:28:18 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Sun, 1 Jul 2012 17:28:18 -0700
Subject: [antlr-interest] What does "syntax error: antlr:
 org.antlr.runtime.EarlyExitException" mean?
In-Reply-To: <CAH2etF70x3dejF3aaTsxaZ4722_y639OTzKkpAf7h7m9D+ScQw@mail.gmail.com>
References: <CAH2etF7PVEoaJjM+y-+quCE1X2pW88-SFKDEvpWCMaqQh_SNfg@mail.gmail.com>
	<CAH2etF70x3dejF3aaTsxaZ4722_y639OTzKkpAf7h7m9D+ScQw@mail.gmail.com>
Message-ID: <CAN51Nt4d8eJujKZz1VxX0amPC321mXB1JxGe4WKC0xQCOej-zQ@mail.gmail.com>

Antlr is complaining that your options block is empty (notice how the
first EarlyExitException occurs at the line where the options block is
closed), which is why adding output=AST is fixing it. Try specifying
language=Java; that should help.

On Sun, Jul 1, 2012 at 3:05 PM, Brad Cox <bradjcox at gmail.com> wrote:
> That's strange. Adding output=AST and replacing SomeType with RuleType
> (defined, but not at all the right type) eliminated the error. It now
> generates code that compiles without errors.
>
> I'd still appreciate comments as to whether I'm on the right track.
>
> On Sun, Jul 1, 2012 at 5:38 PM, Brad Cox <bradjcox at gmail.com> wrote:
>
>> I've a more or less working grammar at
>> http://code.google.com/p/no-xacml/source/browse/src/main/antlr3/noxacml/Grammar.g
>>
>> I am trying to add actions to it but am stymied by this opaque error with
>> no usable line #s
>>
>> [17:21:06] error(100): Grammar.g:10:1: syntax error: antlr:
>> org.antlr.runtime.EarlyExitException
>> [17:21:06] error(100): Grammar.g:0:1: syntax error: assign.types:
>> org.antlr.runtime.EarlyExitException
>>
>> Focus on the policy rule at the top. Is my use of labels right? Necessary?
>> Etc.
>>
>> AntlrWorks also reports errors concerning undefined SomeType. That's a
>> placeholder I'll fix once the policy rule works.
>>
>> Current notion is to avoid ASTs and build OpenSAML types directly in the
>> grammar, mainly because maintaining children indices across files was
>> becoming such a PITA. Hoping I can use names this way, not indices, but
>> suggestions are welcome.
>>
>> Example of AST approach I'm inclined to abandon is at
>> http://code.google.com/p/no-xacml/source/browse/src/main/java/noxacml/xacml2/PolicyBuilder.java
>>
>>
>
>
> --
> Cell: 703-594-1883
> Blog: http://bradjcox.blogspot.com
> Web: http://virtualschool.edu
> Manassas VA 20111
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ivan.bludov at gmail.com  Mon Jul  2 09:42:12 2012
From: ivan.bludov at gmail.com (Ivan Bludov)
Date: Mon, 02 Jul 2012 20:42:12 +0400
Subject: [antlr-interest] Rewrite issue
In-Reply-To: <CAJN5NKAF6MRiXLPcTrenW8OOoisNPx_wuUgFOPvHBW9XZ7NObQ@mail.gmail.com>
References: <CAJN5NKAF6MRiXLPcTrenW8OOoisNPx_wuUgFOPvHBW9XZ7NObQ@mail.gmail.com>
Message-ID: <4FF1CF64.7030905@gmail.com>

I handled issue 1 by adding helper rule and got good result. Now I'm 
interested in issue 3. Could you please say how should I generate 
additional arbitrary string into the token-rewritten query?

From v-scobis at microsoft.com  Mon Jul  2 12:02:42 2012
From: v-scobis at microsoft.com (Scobie Smith (Insight Global))
Date: Mon, 2 Jul 2012 19:02:42 +0000
Subject: [antlr-interest] pass state from parser to lexer
Message-ID: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>

Is there a way to pass state information from the parser to the lexer? I am continually facing situations where the lexer should tokenize differently based on the parser rule. I have seen this question about ANTLR discussed on the web, but so far I haven't seen any solutions.


From bkiers at gmail.com  Mon Jul  2 12:15:05 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 2 Jul 2012 21:15:05 +0200
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
Message-ID: <CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>

On Mon, Jul 2, 2012 at 9:02 PM, Scobie Smith (Insight Global) <
v-scobis at microsoft.com> wrote:

> Is there a way to pass state information from the parser to the lexer? I
> am continually facing situations where the lexer should tokenize
> differently based on the parser rule. I have seen this question about ANTLR
> discussed on the web, but so far I haven't seen any solutions.
>
>
ANTLR's lexer operates independently from the parser, so the "easy" answer
would be: you can't.
However, there are several ways to make the lexer (a bit) context
sensitive. Could you explain what problem you're actually trying to solve
here?

Regards,

Bart.

From v-scobis at microsoft.com  Mon Jul  2 12:30:28 2012
From: v-scobis at microsoft.com (Scobie Smith (Insight Global))
Date: Mon, 2 Jul 2012 19:30:28 +0000
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
Message-ID: <FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>

Thanks. Yes, here is the form of a statement in the language, which otherwise is context-free:

exec mode <delimiter><body><delimiter>

Statements always start at the beginning of a new line.
<delimiter> is a single character that marks off the <body> text. The start/end delims match. The user can choose any character to be the <delimiter>.
The <body>, though, may be multiline and have whitespace. But it cannot have the <delimiter> character in it.

Example:
exec mode #Here is
Some body text.
#

If I tokenize the <body> piecemeal, then the rest of the grammar is totally unmanageable. I need <body> as one token.
I could potentially try to detect this command in the lexer and manually emit tokens. That would in effect be implementing the parser rule for this command in the lexer.

(I have another, more complicated situation for another language, involving segments of text embedded in the main content, which follow different token rules. I am facing this almost every day now....)

Thanks for any insights.
Scobie



From: Bart Kiers [mailto:bkiers at gmail.com] 
Sent: Monday, July 02, 2012 12:15 PM
To: Scobie Smith (Insight Global)
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] pass state from parser to lexer

On Mon, Jul 2, 2012 at 9:02 PM, Scobie Smith (Insight Global) <v-scobis at microsoft.com> wrote:
Is there a way to pass state information from the parser to the lexer? I am continually facing situations where the lexer should tokenize differently based on the parser rule. I have seen this question about ANTLR discussed on the web, but so far I haven't seen any solutions.

ANTLR's lexer operates?independently?from the parser, so the "easy" answer would be: you can't.?
However, there are several ways to make the lexer (a bit) context sensitive.?Could you explain what problem you're actually trying to solve here??

Regards,

Bart.


From sparacuellos at zitralia.com  Tue Jul  3 01:18:32 2012
From: sparacuellos at zitralia.com (Sergio Paracuellos)
Date: Tue, 03 Jul 2012 17:18:32 +0900
Subject: [antlr-interest] get Line and Column in TreeParser with antlr 2.7.7
 generating C# Code
Message-ID: <1341303512.6068.6.camel@foojapan>

Hello,

I am trying to get the line and column in class TreeParser but I only
getting 0.

I have been reading in internet about it, but there is not seem to be
too many information about it.

I have written my own class extending of CommonAST like this:

using CommonAST             = antlr.CommonAST;
using Token                 = antlr.Token;
using IToken                = antlr.IToken;
using CommonToken           = antlr.CommonToken;
using AST                   = antlr.collections.AST;
using System;

public class fpc2ilASTWalker: CommonAST 
{
    private int line;
    private int col;

    public void initialize (Token t)
    {
        base.initialize(t);
        line = t.getLine();
        col = t.getColumn();
    }

    
    public void initialize (AST t)
    {
        base.initialize(t);
        line = t.getLine();
        col = t.getColumn();
    }

    public int getLine() { return line; }
    public int getColumn() { return col; }
}

and the in the main I have this:

...

fpc2ilParser parser = new fpc2ilParser ( lexer );
                    parser.setFilename( args[0] );
                    parser.setASTNodeClass("fpc2ilASTWalker");
                    parser.program();

                    fpc2ilASTWalker t = (fpc2ilASTWalker)parser.
getAST();

                    fpc2ilTreeParser treeParser = new
fpc2ilTreeParser();
                    treeParser.setASTNodeClass("fpc2ilASTWalker");
                    treeParser.program(t);

but when I try to getLine like:

factor:
    id:IDENT
    {
       Console.WriteLine("IDENT:" + id.getText() + " " + id.getLine());
    }
;

I only obtain:

$ mono compiler.exe examples/procedureYfunction.pas 
IDENT:x 0

What am I doing wrong?

Thanks in advance.

Sergio
-- 
Sergio Paracuellos sparacuellos at zitralia.com
ZITRALIA C/Manuel Tovar, 16 28034 Madrid Tlf: 91 417 07 10 Fax: 91 182
26 63
AVISO LEGAL: El contenido de este correo electr?nico y sus anexos son
estrictamente confidenciales, secretos y restringidos. La divulgaci?n o
el suministro, en todo o en parte, a cualquier tercero, no podr? ser
realizada sin el previo, expreso y escrito consentimiento de ZITRALIA
SEGURIDAD INFORM?TICA S.L. En caso que no sea el destinatario y haya
recibido este mensaje por error, agradecemos que nos lo comunique
inmediatamente al remitente sin difundir, almacenar o copiar su
contenido. 
Le informamos que los datos personales de esta comunicaci?n, est?n
incorporados en un fichero bajo nuestra responsabilidad, para el
tratamiento de datos de car?cter personal, con la finalidad de
informarle de los productos y servicios que ofrece ZITRALIA SEGURIDAD
INFORM?TICA S.L.
Vd., como interesado directo, tiene derecho de acceso, rectificaci?n,
cancelaci?n y oposici?n al tratamiento de la informaci?n que le
concierne y autoriza a que pase a formar parte del fichero, ante el cual
puede ejercer sus derechos, y recibir informaci?n y publicidad de
nuestros productos y servicios. Los derechos precitados podr?n hacerse
efectivos ante ZITRALIA SEGURIDAD INFORM?TICA S.L. en la direcci?n de
email: info at zitralia.com o la siguiente direcci?n: c/Manuel Tovar, 16.
28234 Madrid.
(Ley org?nica 15/1999 de 13 de diciembre de protecci?n de datos de
 car?cter personal).





From bkiers at gmail.com  Tue Jul  3 05:22:33 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 3 Jul 2012 14:22:33 +0200
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
	<FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>
Message-ID: <CAOrgODat4s0HR0vt9WxaMy_=Oti81G83aLarayv8KBvxEOVJCw@mail.gmail.com>

On Mon, Jul 2, 2012 at 9:30 PM, Scobie Smith (Insight Global) <
v-scobis at microsoft.com> wrote:

> Thanks. Yes, here is the form of a statement in the language, which
> otherwise is context-free:
>
> exec mode <delimiter><body><delimiter>
>
> Statements always start at the beginning of a new line.
> <delimiter> is a single character that marks off the <body> text. The
> start/end delims match. The user can choose any character to be the
> <delimiter>.
> The <body>, though, may be multiline and have whitespace. But it cannot
> have the <delimiter> character in it.
>

> Example:
> exec mode #Here is
> Some body text.
> #
>
>
You can match such a token like this:

BODY  : {input.LA(1) == delimiter}?=> . ({input.LA(1) != delimiter}?=> . )*
. ;


where 'delimiter' is a character you set while instantiating the lexer and
putting it in the members-section like this:

@lexer::members {
  private char delimiter = '#';
}


Note that in my suggestion above, the 'BODY' might not end with
'delimiter', but with an EOF instead. You will need to do an extra check at
the end of the rule, if necessary.

Regards,

Bart.

From jokeserver at gmail.com  Tue Jul  3 09:13:55 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Tue, 3 Jul 2012 09:13:55 -0700
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <CAOrgODat4s0HR0vt9WxaMy_=Oti81G83aLarayv8KBvxEOVJCw@mail.gmail.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
	<FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODat4s0HR0vt9WxaMy_=Oti81G83aLarayv8KBvxEOVJCw@mail.gmail.com>
Message-ID: <CAN51Nt5rWP2taWzGiffMbf2qDt-dpNg9-WS1T3DuHKYDZe+aLA@mail.gmail.com>

I believe you can also use ~ as a negation, eg.

BODY : '#' ~'#'* '#' ;

(if # is your delimiter, as an example)

or use greedy=false, e.g

ML_COMMENT : '/*' ( options {greedy=false;} : . )* '*/' ;

This latter is an example from
http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required
which matches C-style multiline comments.

On Tue, Jul 3, 2012 at 5:22 AM, Bart Kiers <bkiers at gmail.com> wrote:
> On Mon, Jul 2, 2012 at 9:30 PM, Scobie Smith (Insight Global) <
> v-scobis at microsoft.com> wrote:
>
>> Thanks. Yes, here is the form of a statement in the language, which
>> otherwise is context-free:
>>
>> exec mode <delimiter><body><delimiter>
>>
>> Statements always start at the beginning of a new line.
>> <delimiter> is a single character that marks off the <body> text. The
>> start/end delims match. The user can choose any character to be the
>> <delimiter>.
>> The <body>, though, may be multiline and have whitespace. But it cannot
>> have the <delimiter> character in it.
>>
>
>> Example:
>> exec mode #Here is
>> Some body text.
>> #
>>
>>
> You can match such a token like this:
>
> BODY  : {input.LA(1) == delimiter}?=> . ({input.LA(1) != delimiter}?=> . )*
> . ;
>
>
> where 'delimiter' is a character you set while instantiating the lexer and
> putting it in the members-section like this:
>
> @lexer::members {
>   private char delimiter = '#';
> }
>
>
> Note that in my suggestion above, the 'BODY' might not end with
> 'delimiter', but with an EOF instead. You will need to do an extra check at
> the end of the rule, if necessary.
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From bkiers at gmail.com  Tue Jul  3 10:31:00 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Tue, 3 Jul 2012 19:31:00 +0200
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <CAN51Nt5rWP2taWzGiffMbf2qDt-dpNg9-WS1T3DuHKYDZe+aLA@mail.gmail.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
	<FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODat4s0HR0vt9WxaMy_=Oti81G83aLarayv8KBvxEOVJCw@mail.gmail.com>
	<CAN51Nt5rWP2taWzGiffMbf2qDt-dpNg9-WS1T3DuHKYDZe+aLA@mail.gmail.com>
Message-ID: <CAOrgODb-O317FcgT117oW7rD7N5xNe4LkaTmSnmzKYUqjfpzrw@mail.gmail.com>

On Tue, Jul 3, 2012 at 6:13 PM, Benjamin S Wolf <jokeserver at gmail.com>wrote:

> I believe you can also use ~ as a negation, eg.
>
> BODY : '#' ~'#'* '#' ;
>
> (if # is your delimiter, as an example)
>

The delimiter is variable and is provided (at runtime?) by the user, as
indicated by Scobie.

Regards,

Bart.

From martin.potthast at uni-weimar.de  Tue Jul  3 12:08:03 2012
From: martin.potthast at uni-weimar.de (Martin Potthast)
Date: Tue, 3 Jul 2012 21:08:03 +0200
Subject: [antlr-interest] Tree grammar generated for the C runtime
 reports a syntax error where Java doesn't
In-Reply-To: <9d597c872eaec8d1b2a6feffb67c9301@mail.gmail.com>
References: <CAGEtS-AfjpVDuFSOnz563P8c5=FMS3BK-sguNvqguTKXD5GHtg@mail.gmail.com>
	<9d597c872eaec8d1b2a6feffb67c9301@mail.gmail.com>
Message-ID: <CAGEtS-AjKAgAhie3VqFdRaAFwSJsEXwCrGOa1aoYY_B_PaUGCw@mail.gmail.com>

Hi Jim,

thanks for your quick reply, and sorry for my being late.

I proceeded as you recommended and found that the parser output of C
and Java is equivalent for the offending input, so the parser is not
to blame. Upon debugging the code step by step I found that the tree
parser descends alright into the AST from the parser. The error occurs
when it finds a DOWN node where it expects an UP node while processing
the wildcard portion of a rule.

Apparently, for the C runtime, a wildcard does not represent a tree
but only a single node.
(I remember finding a discussion about this somewhere else on this
list, where I believe the resolution was that it should represent a
tree, right?)

My question now is this: How to specify a rule that accepts any
sequence of sub-trees on a given node?

For example:

^(MY_NODE .*)

Here, the . shall represent a sub-tree of arbitrary depth, and the
star shall indicate that there may be any number of sub-trees on
MY_NODE. Is there a way to specify this behavior in a tree grammar
without having to spell out all possible sub-trees explicitly?

Thanks again for your help!

Martin


On Mon, Jun 25, 2012 at 6:00 AM, Jim Idle <jimi at temporal-wave.com> wrote:
> This means that your tree grammar does not reflect the tree that you are
> building in some way. The only differences in behavior I have seen in this
> kind of thing is the known bug you mention and that sometimes because of the
> lack of exceptions, there needs to be an extra top level rule to make sure
> that errors that occur at the top node in the tree are reported (this can
> also apply to some parser grammars). Also, I think that the treatment of
> wildcards in the C runtime is no longer quite the same as in the Java
> version.
>
> In such cases as this, I use the debugger and just follow the C code. It
> would seem that as your input causes the error to be thrown very early in
> the tree walk that this should be easy to track down. But before doing that,
> I would produce the .dot file for a failing tree and then use graphviz to
> compare it to the tree produced by Java to make sure that they are the same.
> See many past emails for instructions on doing this (antlr.markmail.org)
>
> Jim
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Martin Potthast
> Sent: Sunday, June 24, 2012 10:17 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Tree grammar generated for the C runtime reports a
> syntax error where Java doesn't
>
> Dear everyone,
>
> I am currently developing a simple grammar for a regex-like language that
> involves a tree grammar. When I debug the tree grammar in Java using
> ANTLRworks it seems to work fine. However, once I generate C code, some
> inputs would fail reporting the syntax error:
>     -unknown source-(0)  : error 1 : Unexpected node, at offset 0, near DOWN
> : syntax error...
>
> This might hint at a bug in the C runtime, though I'm not entirely sure
> about that. Anyway, since I'm at my wits end about this, I was wondering
> whether one of you can help me.
>
> Attached you will find the grammars, their generated C code, and a text rig.
> I am using the latest stable release ANTLRworks 1.4.3 and the latest C
> runtime libantlr3c-3.4.tar.gz, compiled with the 64 bit flag.
>
> Clues:
> - The offending input is as simple as "[a]" (excluding the quotes).
> - The input "[?]" works, the only difference being that the question mark is
> a single node in the tree grammar whereas other possibilities may have an
> arbitrary number of sub-trees, as indicated by the wildcards.
> - The grammar distinguishes between bracketed expressions that involve a
> whitespace and those that don't. Again, the input "[a b]" fails in C, but
> not in Java.
>
> I'd be very happy if anyone would help me.
>
> Martin
>
>
> PS: On a minor note, when regenerating the C code from the grammars you will
> notice that RegexWord.c won't compile because one function contains a line
> referring to a variable "stream_" that should be "stream_unit2" in my case.
> This is a known bug, and after changing the variable name as indicated, the
> generated code compiles.
>
>
> --
> Martin Potthast
> Bauhaus-Universit?t Weimar
> www.webis.de  ---  www.netspeak.org
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Martin Potthast
Bauhaus-Universit?t Weimar
www.webis.de  ---  www.netspeak.org

From jokeserver at gmail.com  Tue Jul  3 18:45:13 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Tue, 3 Jul 2012 18:45:13 -0700
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <CAOrgODb-O317FcgT117oW7rD7N5xNe4LkaTmSnmzKYUqjfpzrw@mail.gmail.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
	<FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODat4s0HR0vt9WxaMy_=Oti81G83aLarayv8KBvxEOVJCw@mail.gmail.com>
	<CAN51Nt5rWP2taWzGiffMbf2qDt-dpNg9-WS1T3DuHKYDZe+aLA@mail.gmail.com>
	<CAOrgODb-O317FcgT117oW7rD7N5xNe4LkaTmSnmzKYUqjfpzrw@mail.gmail.com>
Message-ID: <CAN51Nt41hWjN3o1nu8Fc7XKDR2Q7xWD9M5TMrv93b4LBKQzoCQ@mail.gmail.com>

On Tue, Jul 3, 2012 at 10:31 AM, Bart Kiers <bkiers at gmail.com> wrote:
> On Tue, Jul 3, 2012 at 6:13 PM, Benjamin S Wolf <jokeserver at gmail.com>
> wrote:
>>
>> I believe you can also use ~ as a negation, eg.
>>
>> BODY : '#' ~'#'* '#' ;
>>
>> (if # is your delimiter, as an example)
>
>
> The delimiter is variable and is provided (at runtime?) by the user, as
> indicated by Scobie.

Oh, I see. Sorry I missed that. If the user gets to specify then you
can't hard-code it into the Lexer, which is what those rules will
assume you can do.

Bart's suggestion works for specifying the delimiter at lexer
initialization time. Here's a similar way to use a delimiter specified
at lex time.

BODY : delimiter=. ( {input.LA(1) != $delimiter}?=> . )* . ;

or

@init { char delimiter; }
BODY : a=. {delimiter=$a;} ( {input.LA(1) != delimiter}?=> . )* . ;

Use delimiter=~WS or similar if you don't want your grammar using
whitespace characters as delimiters.

From v-scobis at microsoft.com  Tue Jul  3 20:46:52 2012
From: v-scobis at microsoft.com (Scobie Smith (Insight Global))
Date: Wed, 4 Jul 2012 03:46:52 +0000
Subject: [antlr-interest] pass state from parser to lexer
In-Reply-To: <CAN51Nt41hWjN3o1nu8Fc7XKDR2Q7xWD9M5TMrv93b4LBKQzoCQ@mail.gmail.com>
References: <FA21EA835C1467498B3E0B904C9CF2020F0863A0@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODb345W43dwk=RLpskBA8cD2yaHVFQUbms5nShKQ4dhwpQ@mail.gmail.com>
	<FA21EA835C1467498B3E0B904C9CF2020F0867E6@TK5EX14MBXC285.redmond.corp.microsoft.com>
	<CAOrgODat4s0HR0vt9WxaMy_=Oti81G83aLarayv8KBvxEOVJCw@mail.gmail.com>
	<CAN51Nt5rWP2taWzGiffMbf2qDt-dpNg9-WS1T3DuHKYDZe+aLA@mail.gmail.com>
	<CAOrgODb-O317FcgT117oW7rD7N5xNe4LkaTmSnmzKYUqjfpzrw@mail.gmail.com>
	<CAN51Nt41hWjN3o1nu8Fc7XKDR2Q7xWD9M5TMrv93b4LBKQzoCQ@mail.gmail.com>
Message-ID: <FA21EA835C1467498B3E0B904C9CF2020F087344@TK5EX14MBXC285.redmond.corp.microsoft.com>

Thanks, Benjamin and Bart. That helps a lot. However, there is one more complication that makes this worse. The BODY lex rule needs to be applicable only in the context of a given parser rule. The language has only one particular statement that involves this sort of BODY; elsewhere such a string should be tokenized piecemeal. (This BODY token would grab any string with "bookends".) If there were some sort of dynamic scope, or state, or flag, that I could set in the parser at a given rule, which I could then check in lexer rules--then I could use semantic predicates to guide whether a lex rule should be used. But there seems to be nothing I can pass between parser and lexer, esp. from parser to lexer.

So, what I am doing now is using an elaborate gated semantic predicate in the lexer that effectively checks if it can parse out this odd statement. The statement is not recursive, so I can get away with this in the lexer (at least this time). If the predicate detects the statement, it also grabs the relevant pieces, and then I emit those pieces manually as separate tokens.

The lexer rule is basically this:

ExecStatement:
	{ DetectExec() }?=> ExecCommand
		{
			MatchExecStatement();  // Just calls input.Consume() to move the char position along for all the pieces.
			EmitExecStatement();  // Emits the three pieces (exec, mode, body).
		} ;

ExecCommand: { CharPosition == 0 }? 'exec' ;

The DetectExec() method just looks down the input using LA(i) to parse out the pieces, saving them for the emit. This is looking like it is going to work.

So, in effect, this is just a hack, to have the lexer (predicate) do the syntactical parsing. If the parsing works, then the lexer rule succeeds, and that "token" (ExecStatement) will then trigger the right parser rule.

If anyone knows a hack to pass state from parser to lexer, let me know. :)

Thanks.
Scobie

-----Original Message-----
From: Benjamin S Wolf [mailto:jokeserver at gmail.com] 
Sent: Tuesday, July 03, 2012 6:45 PM
To: Bart Kiers
Cc: Scobie Smith (Insight Global); antlr-interest at antlr.org
Subject: Re: [antlr-interest] pass state from parser to lexer

On Tue, Jul 3, 2012 at 10:31 AM, Bart Kiers <bkiers at gmail.com> wrote:
> On Tue, Jul 3, 2012 at 6:13 PM, Benjamin S Wolf <jokeserver at gmail.com>
> wrote:
>>
>> I believe you can also use ~ as a negation, eg.
>>
>> BODY : '#' ~'#'* '#' ;
>>
>> (if # is your delimiter, as an example)
>
>
> The delimiter is variable and is provided (at runtime?) by the user, 
> as indicated by Scobie.

Oh, I see. Sorry I missed that. If the user gets to specify then you can't hard-code it into the Lexer, which is what those rules will assume you can do.

Bart's suggestion works for specifying the delimiter at lexer initialization time. Here's a similar way to use a delimiter specified at lex time.

BODY : delimiter=. ( {input.LA(1) != $delimiter}?=> . )* . ;

or

@init { char delimiter; }
BODY : a=. {delimiter=$a;} ( {input.LA(1) != delimiter}?=> . )* . ;

Use delimiter=~WS or similar if you don't want your grammar using whitespace characters as delimiters.



From mike at lischke-online.de  Wed Jul  4 00:05:57 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 4 Jul 2012 09:05:57 +0200
Subject: [antlr-interest] Irregular AST construction
Message-ID: <7CB10DD8-B4C9-41FE-A09E-9A53A0EC4975@lischke-online.de>

Hi,

this might be related to the C target only, but I'm not sure.

Given this rule:

primary:
	(
		literal
		| field_name
		| function_call// -> ^(FUNCTION_CALL function_call)
		| PARAM_MARKER
		| variable
		| PLUS_SYM primary
		| MINUS_SYM primary
		| BITWISE_NOT primary
		| LOGICAL_NOT primary
		| BINARY_SYM primary
		| ROW_SYM expression_list
		| EXISTS_SYM subquery
		| match_expression
		| case_expression
		| interval_expression
	)
	(options {greedy = true;}: COLLATE_SYM identifier)*
;
  
I see a completely different tree construction in the generated parser depending on whether I enable the single (out-commented) rewrite rule or not. If I leave it out then everything is ok. With it, though, the generated code switches to using local streams for each alternative, but does not create the root_0 node (except for the function_call alternative). As a consequence the primary() function returns an empty tree for most of the alternatives.

So far I had not the impression that I have to add a rewrite rule to every alternative if I have one that has a rule. Is this a bug in code generation or should I now think to add a rule to all alternatives in such scenarios?

Mike
-- 
www.soft-gems.net


From alestrooisma at gmx.net  Wed Jul  4 11:52:14 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Wed, 04 Jul 2012 20:52:14 +0200
Subject: [antlr-interest] ClassCastException with custom node type
Message-ID: <4FF490DE.2000403@gmx.net>

Hello,

I get this error:
java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree cannot 
be cast to wc.util.ASTNode
     at wc.compiler.WcChecker.expr(WcChecker.java:1290)
     at wc.compiler.WcChecker.statement(WcChecker.java:928)
     at 
wc.compiler.WcChecker.nonOpeningCompoundStatement(WcChecker.java:814)
     at wc.compiler.WcChecker.function(WcChecker.java:755)
     at wc.compiler.WcChecker.program(WcChecker.java:289)
     at wc.Driver.compile(Driver.java:95)
     at wc.Driver.main(Driver.java:67)
on the line: t=(ASTNode)match(input,BECOMES,FOLLOW_BECOMES_in_expr445);

I created a node and errornode class and an factory for it. The weird 
thing is that when I replace the line with:

Object ct = match(input,BECOMES,FOLLOW_BECOMES_in_expr445);
System.out.println(ct.getClass());
t=(ASTNode)ct;

then, with a certain test-file first two times the type 
"wc.util.ASTNode" is outputted, and after that 
"org.antlr.runtime.tree.CommonTree".

Please help,
Ale

From jean-sebastien.pelletier at ubisoft.com  Wed Jul  4 14:47:29 2012
From: jean-sebastien.pelletier at ubisoft.com (Jean-Sebastien Pelletier)
Date: Wed, 4 Jul 2012 17:47:29 -0400
Subject: [antlr-interest] Exception with ANTLR language extension in Visual
	Studio 2010
Message-ID: <9E4A58AAF133E74A9114B0FA0F2FCC6B080FCA7D9A@MDC-MAIL-CMS01.ubisoft.org>

Hi Sam,

I've installed your VSIX extension for Visual studio. I'm using Visual Studio 2010 SP1

Syntax highlight seems to work but I'm getting an exception when opening .g files and I'm getting a message box similar to this:

---------------------------
Microsoft Visual Studio
---------------------------
Visual Studio has encountered an exception. This may be caused by an extension.

You can get more information by running the application together with the /log parameter on the command line, and then examining the file 'C:\Users\....\AppData\Roaming\Microsoft\VisualStudio\10.0\ActivityLog.xml'.


I've run devenv with the /log commandline as advised by the message box. I've attached the resulting devenv log file .xml file.

Here are some stuff I found in the log file...
    <description>Unexpected system error mode before loading package [Tvl.VisualStudio.Language.Antlr3.AntlrLanguagePackage, Tvl.VisualStudio.Language.Antlr3, Version=1.0.10.0, Culture=neutral, PublicKeyToken=eb42632606e9261f]</description>

    <description>System.IO.FileNotFoundException: Could not load file or assembly &apos;Tvl.VisualStudio.Shell.OutputWindow.Interfaces, Version=1.0.0.626, Culture=neutral, PublicKeyToken=eb42632606e9261f&apos; or one of its dependencies. The system cannot find the file specified.&#x000D;&#x000A;File name:


It seems that some dll referenced by the extension is not included in the installer.

I've also found that if I remove the two related extensions I don't get any exception anymore and the addin is still working but I'm loosing the navigation bar.

Thanks for your help
Jean-S?bastien

From danieladacruz at gmail.com  Wed Jul  4 15:19:18 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Wed, 4 Jul 2012 23:19:18 +0100
Subject: [antlr-interest] Regular Expressions
Message-ID: <CACKT26yLS0ZHU_8_LNp06Eu3qXNabhiOEEDPR3P+gYPHkyOBAw@mail.gmail.com>

Hello all

I am developing an Objective-C 2.0 grammar using the Antlr v2.7.
The problem I'm facing is that there exist some ambiguous reserved words.
For instance and using k = 1 in Lexer, there exist

@protected, @private, @public, @interface, in, inout, ...

defining these regular expressions like:

AT_PROTECTED : "@protected" ;
AT_PRIVATE : "@private" ;

From danieladacruz at gmail.com  Wed Jul  4 15:20:49 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Wed, 4 Jul 2012 23:20:49 +0100
Subject: [antlr-interest] Regular Expressions (2)
Message-ID: <CACKT26zqhLwF8HS7pNOAUJBRZmEB-78LxRCSc+ss5oURC2R+Mw@mail.gmail.com>

Sorry. The previous email was sent before I finish it.

Hello all

I am developing an Objective-C 2.0 grammar using the Antlr v2.7.
The problem I'm facing is that there exist some ambiguous reserved words.
For instance and using k = 1 in Lexer, there exist

@protected, @private, @public, @interface, in, inout, ...

defining these regular expressions like:

AT_PROTECTED : "@protected" ;
AT_PRIVATE : "@private" ;

Using this approach, of course, I get a lot of warnings because they are
ambiguous.

How do you suggest to solve them?

Factorize them and then set the token type accordingly?

Thanks
daniela

From alestrooisma at gmx.net  Wed Jul  4 16:22:44 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Thu, 05 Jul 2012 01:22:44 +0200
Subject: [antlr-interest] Regular Expressions (2)
In-Reply-To: <CACKT26zqhLwF8HS7pNOAUJBRZmEB-78LxRCSc+ss5oURC2R+Mw@mail.gmail.com>
References: <CACKT26zqhLwF8HS7pNOAUJBRZmEB-78LxRCSc+ss5oURC2R+Mw@mail.gmail.com>
Message-ID: <4FF4D044.3010302@gmx.net>

I guess this would work:

AT_PROTECTED : AT "protected";
AT_PRIVATE : AT "private";
fragment AT : "@";

Good luck,
Ale

On 07/05/2012 12:20 AM, Daniela da Cruz wrote:
> Sorry. The previous email was sent before I finish it.
>
> Hello all
>
> I am developing an Objective-C 2.0 grammar using the Antlr v2.7.
> The problem I'm facing is that there exist some ambiguous reserved words.
> For instance and using k = 1 in Lexer, there exist
>
> @protected, @private, @public, @interface, in, inout, ...
>
> defining these regular expressions like:
>
> AT_PROTECTED : "@protected" ;
> AT_PRIVATE : "@private" ;
>
> Using this approach, of course, I get a lot of warnings because they are
> ambiguous.
>
> How do you suggest to solve them?
>
> Factorize them and then set the token type accordingly?
>
> Thanks
> daniela
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>    


From danieladacruz at gmail.com  Wed Jul  4 16:26:52 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Thu, 5 Jul 2012 00:26:52 +0100
Subject: [antlr-interest] Regular Expressions (2)
In-Reply-To: <4FF4D044.3010302@gmx.net>
References: <CACKT26zqhLwF8HS7pNOAUJBRZmEB-78LxRCSc+ss5oURC2R+Mw@mail.gmail.com>
	<4FF4D044.3010302@gmx.net>
Message-ID: <CACKT26zQUs0hMTC7uH5r+7o5VmLRK7NxgWrDHZvqc3kYGx3j2g@mail.gmail.com>

Hi Ale

Thanks for your reply. I have been working a bit more in the grammar and
have done the following test and it simply stops at '@' character. Any idea
why?

*class CParser extends Parser;*
*
*
options {    k=1;    defaultErrorHandler = false;}

class_interface : "@interface" IDENTIFIER "@end" ;

*class CLexer extends Lexer;*

options{
testLiterals=false; // don't automatically test for literals
 k=2;
charVocabulary='\u0000'..'\uFFFE';
}

IDENTIFIER : LETTER (LETTER|'0'..'9')*;
protected LETTER: 'A'..'Z'  | 'a'..'z'  | '_' ;


On Thu, Jul 5, 2012 at 12:22 AM, Ale Strooisma <alestrooisma at gmx.net> wrote:

> I guess this would work:
>
> AT_PROTECTED : AT "protected";
> AT_PRIVATE : AT "private";
> fragment AT : "@";
>
> Good luck,
> Ale
>
> On 07/05/2012 12:20 AM, Daniela da Cruz wrote:
> > Sorry. The previous email was sent before I finish it.
> >
> > Hello all
> >
> > I am developing an Objective-C 2.0 grammar using the Antlr v2.7.
> > The problem I'm facing is that there exist some ambiguous reserved words.
> > For instance and using k = 1 in Lexer, there exist
> >
> > @protected, @private, @public, @interface, in, inout, ...
> >
> > defining these regular expressions like:
> >
> > AT_PROTECTED : "@protected" ;
> > AT_PRIVATE : "@private" ;
> >
> > Using this approach, of course, I get a lot of warnings because they are
> > ambiguous.
> >
> > How do you suggest to solve them?
> >
> > Factorize them and then set the token type accordingly?
> >
> > Thanks
> > daniela
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bradjcox at gmail.com  Wed Jul  4 16:50:24 2012
From: bradjcox at gmail.com (Brad Cox)
Date: Wed, 4 Jul 2012 19:50:24 -0400
Subject: [antlr-interest] Regular Expressions (2)
In-Reply-To: <CACKT26zQUs0hMTC7uH5r+7o5VmLRK7NxgWrDHZvqc3kYGx3j2g@mail.gmail.com>
References: <CACKT26zqhLwF8HS7pNOAUJBRZmEB-78LxRCSc+ss5oURC2R+Mw@mail.gmail.com>
	<4FF4D044.3010302@gmx.net>
	<CACKT26zQUs0hMTC7uH5r+7o5VmLRK7NxgWrDHZvqc3kYGx3j2g@mail.gmail.com>
Message-ID: <CAH2etF56kE0nuOwMNkcsR-Jq+MWJhS5LMq7jOzhTpunL+veL9w@mail.gmail.com>

Have you considered switching to antlr3 and have you looked at
http://www.antlr.org/grammar/1212699960054/ObjectiveC2ansi.g?

On Wed, Jul 4, 2012 at 7:26 PM, Daniela da Cruz <danieladacruz at gmail.com>wrote:

> Hi Ale
>
> Thanks for your reply. I have been working a bit more in the grammar and
> have done the following test and it simply stops at '@' character. Any idea
> why?
>
> *class CParser extends Parser;*
> *
> *
> options {    k=1;    defaultErrorHandler = false;}
>
> class_interface : "@interface" IDENTIFIER "@end" ;
>
> *class CLexer extends Lexer;*
>
> options{
> testLiterals=false; // don't automatically test for literals
>  k=2;
> charVocabulary='\u0000'..'\uFFFE';
> }
>
> IDENTIFIER : LETTER (LETTER|'0'..'9')*;
> protected LETTER: 'A'..'Z'  | 'a'..'z'  | '_' ;
>
>
> On Thu, Jul 5, 2012 at 12:22 AM, Ale Strooisma <alestrooisma at gmx.net>
> wrote:
>
> > I guess this would work:
> >
> > AT_PROTECTED : AT "protected";
> > AT_PRIVATE : AT "private";
> > fragment AT : "@";
> >
> > Good luck,
> > Ale
> >
> > On 07/05/2012 12:20 AM, Daniela da Cruz wrote:
> > > Sorry. The previous email was sent before I finish it.
> > >
> > > Hello all
> > >
> > > I am developing an Objective-C 2.0 grammar using the Antlr v2.7.
> > > The problem I'm facing is that there exist some ambiguous reserved
> words.
> > > For instance and using k = 1 in Lexer, there exist
> > >
> > > @protected, @private, @public, @interface, in, inout, ...
> > >
> > > defining these regular expressions like:
> > >
> > > AT_PROTECTED : "@protected" ;
> > > AT_PRIVATE : "@private" ;
> > >
> > > Using this approach, of course, I get a lot of warnings because they
> are
> > > ambiguous.
> > >
> > > How do you suggest to solve them?
> > >
> > > Factorize them and then set the token type accordingly?
> > >
> > > Thanks
> > > daniela
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
Cell: 703-594-1883
Blog: http://bradjcox.blogspot.com
Web: http://virtualschool.edu
Manassas VA 20111

From jokeserver at gmail.com  Wed Jul  4 18:11:58 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Wed, 4 Jul 2012 18:11:58 -0700
Subject: [antlr-interest] Irregular AST construction
In-Reply-To: <7CB10DD8-B4C9-41FE-A09E-9A53A0EC4975@lischke-online.de>
References: <7CB10DD8-B4C9-41FE-A09E-9A53A0EC4975@lischke-online.de>
Message-ID: <CAN51Nt7cgnpg0t7DZsmF7dg1JaGspcN=Kzw8iT1B8ZQWAPMs-Q@mail.gmail.com>

Hi Mike,

If I had to guess, I'd say Antlr is not actually looking at the end of
that rule when it generates the code for the subrule (so it uses
streams in case you have more of the same tokens or rules); you'll get
similar code if you leave out the ( COLLATE_SYM identifier )* but
leave the parens around the alternatives.

Personally, I've always had problems with rewrite rules appearing in
alternatives, particular when I try to reference labels that appear
later in the rule (in e.g. your example, you can't reference
"identifier" in a rewrite rule in the subrule above it). My strategy
such cases is to use semantic predicates instead of embedding rewrite
rules in subrules:

primary:
        (
               ...
                | PLUS_SYM p1=primary
                | MINUS_SYM p2=primary
        )
        (options {greedy = true;}: COLLATE_SYM identifier)*
        -> {$function_call}? ^(FUNCTION_CALL function_call)
        -> literal? field_name? ... PLUS_SYM? $p1? MINUS_SYM? $p2? ...
interval_expression? ( COLLATE_SYM identifier )*
;

Your case is a little longer than mine have been, so that kind of
rewrite rule may be a little heavyweight. You could also try moving
the long list of alternatives into its own rule -- if you don't have
parentheses around the whole thing it'll generate the right code (and
if you only want a list of tokens instead of a tree it'll work just
fine with the COLLATE subrule (though the COLLATE subtree will also be
returned in the function_call case, which it's not doing in the case
you gave)).

On Wed, Jul 4, 2012 at 12:05 AM, Mike Lischke <mike at lischke-online.de> wrote:
> Hi,
>
> this might be related to the C target only, but I'm not sure.
>
> Given this rule:
>
> primary:
>         (
>                 literal
>                 | field_name
>                 | function_call// -> ^(FUNCTION_CALL function_call)
>                 | PARAM_MARKER
>                 | variable
>                 | PLUS_SYM primary
>                 | MINUS_SYM primary
>                 | BITWISE_NOT primary
>                 | LOGICAL_NOT primary
>                 | BINARY_SYM primary
>                 | ROW_SYM expression_list
>                 | EXISTS_SYM subquery
>                 | match_expression
>                 | case_expression
>                 | interval_expression
>         )
>         (options {greedy = true;}: COLLATE_SYM identifier)*
> ;
>
> I see a completely different tree construction in the generated parser depending on whether I enable the single (out-commented) rewrite rule or not. If I leave it out then everything is ok. With it, though, the generated code switches to using local streams for each alternative, but does not create the root_0 node (except for the function_call alternative). As a consequence the primary() function returns an empty tree for most of the alternatives.
>
> So far I had not the impression that I have to add a rewrite rule to every alternative if I have one that has a rule. Is this a bug in code generation or should I now think to add a rule to all alternatives in such scenarios?
>
> Mike
> --
> www.soft-gems.net
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jayaniw at ecollege.com  Wed Jul  4 23:11:08 2012
From: jayaniw at ecollege.com (Jayani Withanawasam)
Date: Thu, 5 Jul 2012 11:41:08 +0530
Subject: [antlr-interest] Learning ANTLR
Message-ID: <1BD3AB91969DC74DA1F872AA45E5208B0908D0E9@SRIMBCL01.eclg.org>

Hi all,

 

I would like to know if there are any formal trainings or learning
material available for us to get familiar with ANTLR.

Currently I have 'Definitive ANTLR reference' book with me.

 

Do you find any other helpful content? 

Appreciate if you can share them.

 

Thanks

Jayani Withanawasam

Trainee Software Engineer 
Pearson Lanka (Pvt) Ltd.

Orion City, Rigel Building

No. 752, Dr. Danister De Silva Mawatha
Colombo 09
Sri Lanka


M: (+94)779 698 803 
T: (+94)117 388 488 (ext. 7152)
F: (+94)117 388 482

Pearson 

Always Learning
Learn more at www.pearson.com <http://www.pearson.com> 

 


From sidraakhalid at gmail.com  Wed Jul  4 23:37:37 2012
From: sidraakhalid at gmail.com (Sidra Khalid)
Date: Thu, 5 Jul 2012 11:37:37 +0500
Subject: [antlr-interest] Learning ANTLR
In-Reply-To: <1BD3AB91969DC74DA1F872AA45E5208B0908D0E9@SRIMBCL01.eclg.org>
References: <1BD3AB91969DC74DA1F872AA45E5208B0908D0E9@SRIMBCL01.eclg.org>
Message-ID: <CAMYG8823S7Xz=-waQPPWpMGGs5LsSU+VwCkKXpEW4T0BuBOx9Q@mail.gmail.com>

Hi  Jayani,

I recently learnt ANTLR and I found this blog very helpful in this regard
http://bkiers.blogspot.com/

Answers of different problems on  http://stackoverflow.com/  also helped me
a lot.


Thanks,
Sidra Khalid

On Thu, Jul 5, 2012 at 11:11 AM, Jayani Withanawasam
<jayaniw at ecollege.com>wrote:

> Hi all,
>
>
>
> I would like to know if there are any formal trainings or learning
> material available for us to get familiar with ANTLR.
>
> Currently I have 'Definitive ANTLR reference' book with me.
>
>
>
> Do you find any other helpful content?
>
> Appreciate if you can share them.
>
>
>
> Thanks
>
> Jayani Withanawasam
>
> Trainee Software Engineer
> Pearson Lanka (Pvt) Ltd.
>
> Orion City, Rigel Building
>
> No. 752, Dr. Danister De Silva Mawatha
> Colombo 09
> Sri Lanka
>
>
> M: (+94)779 698 803
> T: (+94)117 388 488 (ext. 7152)
> F: (+94)117 388 482
>
> Pearson
>
> Always Learning
> Learn more at www.pearson.com <http://www.pearson.com>
>
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Stefan.Maetje at esd-electronics.com  Thu Jul  5 00:57:43 2012
From: Stefan.Maetje at esd-electronics.com (=?ISO-8859-1?Q?Stefan_M=E4tje?=)
Date: Thu, 05 Jul 2012 09:57:43 +0200
Subject: [antlr-interest] ClassCastException with custom node type
In-Reply-To: <4FF490DE.2000403@gmx.net>
References: <4FF490DE.2000403@gmx.net>
Message-ID: <4FF548F7.4060102@esd-electronics.com>

Am 04.07.2012 20:52, schrieb Ale Strooisma:
> Hello,
>
> I get this error:
> java.lang.ClassCastException: org.antlr.runtime.tree.CommonTree cannot
> be cast to wc.util.ASTNode
>       at wc.compiler.WcChecker.expr(WcChecker.java:1290)
>       at wc.compiler.WcChecker.statement(WcChecker.java:928)
>       at
> wc.compiler.WcChecker.nonOpeningCompoundStatement(WcChecker.java:814)
>       at wc.compiler.WcChecker.function(WcChecker.java:755)
>       at wc.compiler.WcChecker.program(WcChecker.java:289)
>       at wc.Driver.compile(Driver.java:95)
>       at wc.Driver.main(Driver.java:67)
> on the line: t=(ASTNode)match(input,BECOMES,FOLLOW_BECOMES_in_expr445);
>
> I created a node and errornode class and an factory for it. The weird
> thing is that when I replace the line with:
>
> Object ct = match(input,BECOMES,FOLLOW_BECOMES_in_expr445);
> System.out.println(ct.getClass());
> t=(ASTNode)ct;
>
> then, with a certain test-file first two times the type
> "wc.util.ASTNode" is outputted, and after that
> "org.antlr.runtime.tree.CommonTree".

Hi,

I had a similar problem when I used a tree parser (Pearl90Sym) to 
examine my generated AST again. Please see the attached Java code 
excerpt to see what you have to do to set the customized tree adapter 
early enough.

Some error accounting and other stuff has been cut away marked there 
with "SNIP-SNAP". The interesting line is marked with "This line fixed 
crash on spurious CommonToken insertions."

I'm not quite sure if my solution fits to your needs but I believe the 
crucial point is to set the *Adapter early enough because some nodes 
(like UP and DOWN nodes) are generated at the instantiation time / first 
call of the CommonTreeNodeStream() class and then always reused. At this 
point the TreeAdapter must already be set to have them instantiated as 
object of your custom tree node class. Without a custom tree adapter the 
objects will be created with the default adapter building CommonTree nodes.

I hope that may give you a clue whats going wrong.

Regards,
	Stefan

PS.: My classes are
	Pearl90Tree		a tree node
	Pearl90TreeAdaptor	the node factory?
	Pearl90ErrorNode	the error node object




From Stefan.Maetje at esd-electronics.com  Thu Jul  5 01:05:01 2012
From: Stefan.Maetje at esd-electronics.com (=?ISO-8859-1?Q?Stefan_M=E4tje?=)
Date: Thu, 05 Jul 2012 10:05:01 +0200
Subject: [antlr-interest] ClassCastException with custom node type
In-Reply-To: <4FF548F7.4060102@esd-electronics.com>
References: <4FF490DE.2000403@gmx.net> <4FF548F7.4060102@esd-electronics.com>
Message-ID: <4FF54AAD.6070104@esd-electronics.com>

Hi,

the attachment seems to be stripped by the mailing list. I'll put it now
directly in the message.

My classes are
     Pearl90Tree        a tree node
     Pearl90TreeAdaptor    the node factory?
     Pearl90ErrorNode    the error node object

Code excerpt follows, sorry for line wraps:
{
     // ==== Prepare tree node adaptor for later use =========
     Pearl90TreeAdaptor pearl90Adaptor = new Pearl90TreeAdaptor();

     // SNIP-SNAP

     // ==== PARSER STAGE ====================================
     // Create a stream of tokens fed by the lexer
     // But use TokenRewriteStream if we need to change the AST
     // with a tree grammar later. See ANTLR Ref p. 224
     CommonTokenStream tokens = new CommonTokenStream(lexer);

     // Create a parser that feeds off the token stream
     parser = new Pearl90Parser(tokens);

     // Use my own tree adaptor to build Pearl90Tree nodes in the AST.
     parser.setTreeAdaptor(pearl90Adaptor);

     // Begin parsing at rule "file" and get return value
     Pearl90Parser.file_return r = parser.file();
     // Change the returned value to an AST
     Pearl90Tree ast = (Pearl90Tree)r.getTree();

     // SNIP-SNAP

     // ---------------------------------------
     // Do error accounting ...
     // SNIP-SNAP

     // ==== Symbol Table Generation =========================
     // This stage fills the symbol table and may rewrite the AST
     // based on its findings.
     // CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
     CommonTreeNodeStream nodes = new 
CommonTreeNodeStream(pearl90Adaptor, ast);
     nodes.setTokenStream(tokens);
     // This line fixed crash on spurious CommonToken insertions. 
Already done
     // now by constructor above.
     //nodes.setTreeAdaptor(pearl90Adaptor);

     SymbolTable symtab = new SymbolTable();
     // Use my custom constructor for AST tree parser
     // Use workaround with new for missing debug output stream...
     Pearl90Sym syms = new Pearl90Sym(nodes, symtab, new 
PrintWriter(System.out,true));

     // Use my own tree adaptor to build Pearl90Tree nodes in the AST.
     syms.setTreeAdaptor(pearl90Adaptor);

     // Trigger symtab actions upon certain subtrees,
     // return the rewritten AST as directed by Pearl90Sym.g
     ast = (Pearl90Tree)syms.downup(ast);


}

From alestrooisma at gmx.net  Thu Jul  5 02:22:55 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Thu, 05 Jul 2012 11:22:55 +0200
Subject: [antlr-interest] ClassCastException with custom node type
In-Reply-To: <4FF54AAD.6070104@esd-electronics.com>
References: <4FF490DE.2000403@gmx.net> <4FF548F7.4060102@esd-electronics.com>
	<4FF54AAD.6070104@esd-electronics.com>
Message-ID: <4FF55CEF.8010102@gmx.net>

Thanks for your reply,

I didn't see much difference between your and my code, and when I added 
the line "nodes.setTokenStream(tokens);" the problem was still there. 
Please see my code below.

Kind Regards, Ale


TreeAdaptor adaptor = new ASTNodeAdaptor();

System.out.println("Starting Lexer... ");
WcLexer lexer = new WcLexer(new ANTLRInputStream(fileInputStream));
TokenStream tokens = new CommonTokenStream(lexer);

System.out.println("Starting Parser... ");
WcParser parser = new WcParser(tokens);
parser.setTreeAdaptor(adaptor);
WcParser.program_return result = parser.program();
ASTNode tree = (ASTNode) result.getTree();

System.out.println("Checking Context... ");
CommonTreeNodeStream nodes = new CommonTreeNodeStream(adaptor, tree);
nodes.setTokenStream(tokens);
WcChecker checker = new WcChecker(nodes,f);
checker.program();


On 07/05/2012 10:05 AM, Stefan M?tje wrote:
> Hi,
>
> the attachment seems to be stripped by the mailing list. I'll put it now
> directly in the message.
>
> My classes are
>       Pearl90Tree        a tree node
>       Pearl90TreeAdaptor    the node factory?
>       Pearl90ErrorNode    the error node object
>
> Code excerpt follows, sorry for line wraps:
> {
>       // ==== Prepare tree node adaptor for later use =========
>       Pearl90TreeAdaptor pearl90Adaptor = new Pearl90TreeAdaptor();
>
>       // SNIP-SNAP
>
>       // ==== PARSER STAGE ====================================
>       // Create a stream of tokens fed by the lexer
>       // But use TokenRewriteStream if we need to change the AST
>       // with a tree grammar later. See ANTLR Ref p. 224
>       CommonTokenStream tokens = new CommonTokenStream(lexer);
>
>       // Create a parser that feeds off the token stream
>       parser = new Pearl90Parser(tokens);
>
>       // Use my own tree adaptor to build Pearl90Tree nodes in the AST.
>       parser.setTreeAdaptor(pearl90Adaptor);
>
>       // Begin parsing at rule "file" and get return value
>       Pearl90Parser.file_return r = parser.file();
>       // Change the returned value to an AST
>       Pearl90Tree ast = (Pearl90Tree)r.getTree();
>
>       // SNIP-SNAP
>
>       // ---------------------------------------
>       // Do error accounting ...
>       // SNIP-SNAP
>
>       // ==== Symbol Table Generation =========================
>       // This stage fills the symbol table and may rewrite the AST
>       // based on its findings.
>       // CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
>       CommonTreeNodeStream nodes = new
> CommonTreeNodeStream(pearl90Adaptor, ast);
>       nodes.setTokenStream(tokens);
>       // This line fixed crash on spurious CommonToken insertions.
> Already done
>       // now by constructor above.
>       //nodes.setTreeAdaptor(pearl90Adaptor);
>
>       SymbolTable symtab = new SymbolTable();
>       // Use my custom constructor for AST tree parser
>       // Use workaround with new for missing debug output stream...
>       Pearl90Sym syms = new Pearl90Sym(nodes, symtab, new
> PrintWriter(System.out,true));
>
>       // Use my own tree adaptor to build Pearl90Tree nodes in the AST.
>       syms.setTreeAdaptor(pearl90Adaptor);
>
>       // Trigger symtab actions upon certain subtrees,
>       // return the rewritten AST as directed by Pearl90Sym.g
>       ast = (Pearl90Tree)syms.downup(ast);
>
>
> }
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>    


From danieladacruz at gmail.com  Thu Jul  5 03:14:39 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Thu, 5 Jul 2012 11:14:39 +0100
Subject: [antlr-interest] Regular Expressions (2)
In-Reply-To: <CAH2etF56kE0nuOwMNkcsR-Jq+MWJhS5LMq7jOzhTpunL+veL9w@mail.gmail.com>
References: <CACKT26zqhLwF8HS7pNOAUJBRZmEB-78LxRCSc+ss5oURC2R+Mw@mail.gmail.com>
	<4FF4D044.3010302@gmx.net>
	<CACKT26zQUs0hMTC7uH5r+7o5VmLRK7NxgWrDHZvqc3kYGx3j2g@mail.gmail.com>
	<CAH2etF56kE0nuOwMNkcsR-Jq+MWJhS5LMq7jOzhTpunL+veL9w@mail.gmail.com>
Message-ID: <CACKT26wKgkAgr5-0duww8pJK=9_ZDgwO9KMc5SetfUMnTMYQeA@mail.gmail.com>

Unfortunately Antlr3 is not an option. It is a requirement from my client!
Thanks anyway.
daniela

On Thu, Jul 5, 2012 at 12:50 AM, Brad Cox <bradjcox at gmail.com> wrote:

> Have you considered switching to antlr3 and have you looked at
> http://www.antlr.org/grammar/1212699960054/ObjectiveC2ansi.g?
>
> On Wed, Jul 4, 2012 at 7:26 PM, Daniela da Cruz <danieladacruz at gmail.com>wrote:
>
>>  Hi Ale
>>
>> Thanks for your reply. I have been working a bit more in the grammar and
>> have done the following test and it simply stops at '@' character. Any
>> idea
>> why?
>>
>> *class CParser extends Parser;*
>> *
>>
>> *
>> options {    k=1;    defaultErrorHandler = false;}
>>
>> class_interface : "@interface" IDENTIFIER "@end" ;
>>
>> *class CLexer extends Lexer;*
>>
>>
>> options{
>> testLiterals=false; // don't automatically test for literals
>>  k=2;
>> charVocabulary='\u0000'..'\uFFFE';
>> }
>>
>> IDENTIFIER : LETTER (LETTER|'0'..'9')*;
>> protected LETTER: 'A'..'Z'  | 'a'..'z'  | '_' ;
>>
>>
>> On Thu, Jul 5, 2012 at 12:22 AM, Ale Strooisma <alestrooisma at gmx.net>
>> wrote:
>>
>> > I guess this would work:
>> >
>> > AT_PROTECTED : AT "protected";
>> > AT_PRIVATE : AT "private";
>> > fragment AT : "@";
>> >
>> > Good luck,
>> > Ale
>> >
>> > On 07/05/2012 12:20 AM, Daniela da Cruz wrote:
>> > > Sorry. The previous email was sent before I finish it.
>> > >
>> > > Hello all
>> > >
>> > > I am developing an Objective-C 2.0 grammar using the Antlr v2.7.
>> > > The problem I'm facing is that there exist some ambiguous reserved
>> words.
>> > > For instance and using k = 1 in Lexer, there exist
>> > >
>> > > @protected, @private, @public, @interface, in, inout, ...
>> > >
>> > > defining these regular expressions like:
>> > >
>> > > AT_PROTECTED : "@protected" ;
>> > > AT_PRIVATE : "@private" ;
>> > >
>> > > Using this approach, of course, I get a lot of warnings because they
>> are
>> > > ambiguous.
>> > >
>> > > How do you suggest to solve them?
>> > >
>> > > Factorize them and then set the token type accordingly?
>> > >
>> > > Thanks
>> > > daniela
>> > >
>> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> > >
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> --
> Cell: 703-594-1883
> Blog: http://bradjcox.blogspot.com
> Web: http://virtualschool.edu
> Manassas VA 20111
>
>

From Stefan.Maetje at esd-electronics.com  Thu Jul  5 03:18:31 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Thu, 05 Jul 2012 12:18:31 +0200
Subject: [antlr-interest] ClassCastException with custom node type
In-Reply-To: <4FF55CEF.8010102@gmx.net> (from alestrooisma@gmx.net on Thu
	Jul  5 11:22:55 2012)
References: <4FF54AAD.6070104@esd-electronics.com> <4FF55CEF.8010102@gmx.net>
Message-ID: <1341483511.21425.0@esd-s7>

Am 05.07.2012 11:22:55 schrieb(en) Ale Strooisma:
> Thanks for your reply,
> 
> I didn't see much difference between your and my code, and when I added 
> the line "nodes.setTokenStream(tokens);" the problem was still there. 
> Please see my code below.
> 
> Kind Regards, Ale

I don't see much difference also. Perhaps the difference comes from the tree 
adaptor. I'll paste my adaptor below. Maybe that helps?

-----8<-----------8<-----------8<-----------8<---------8<---------8<--------
import org.antlr.runtime.*;
import org.antlr.runtime.tree.CommonTreeAdaptor;

/** A tree adaptor that tells ANTLR to build Pearl90Tree nodes. Derived from
    http://www.antlr.org/wiki/display/ANTLR3/Tree
+construction#Treeconstruction-UsingcustomASTnodetypes
    */
public class Pearl90TreeAdaptor extends CommonTreeAdaptor {

    public Object create(Token token) {
        return new Pearl90Tree(token);
    }

    /** Of the following create() methods only the third is used atm. by the
        program. The apparently unused ones are added to the implementation 
but
        print some information. All are used but 1 & 2 triggered by hand from
        parser only.
        */
    public Object create(int tokenType, Token fromToken) {
        fromToken = createToken(fromToken);
        fromToken.setType(tokenType);
        // System.err.println("1 Create node"+fromToken.toString());
        return this.create(fromToken);
    }

    public Object create(int tokenType, Token fromToken, String text) {
        if (fromToken == null) return create(tokenType, text);
        fromToken = createToken(fromToken);
        fromToken.setType(tokenType);
        fromToken.setText(text);
        // System.err.println("2 Create node"+fromToken.toString());
        return this.create(fromToken);
    }

    public Object create(int tokenType, String text) {
        Token fromToken = createToken(tokenType, text);
        // System.err.println("3 Create node"+fromToken.toString()+text
+tokenType);
        return this.create(fromToken);
    }

    public Object dupNode(Object t) {
        if (null == t) {
            return null;
        }
        return create(((Pearl90Tree)t).token);
    }

    public Object errorNode(TokenStream input, Token start, Token stop,
        RecognitionException e)
    {
        Pearl90ErrorNode t = new Pearl90ErrorNode(input, start, stop, e);
        System.out.println("returning error node '"+t+"' @index="+input.index
());
        return t;
    }

}
-----8<-----------8<-----------8<-----------8<---------8<---------8<--------

> TreeAdaptor adaptor = new ASTNodeAdaptor();
> 
> System.out.println("Starting Lexer... ");
> WcLexer lexer = new WcLexer(new ANTLRInputStream(fileInputStream));
> TokenStream tokens = new CommonTokenStream(lexer);
> 
> System.out.println("Starting Parser... ");
> WcParser parser = new WcParser(tokens);
> parser.setTreeAdaptor(adaptor);
> WcParser.program_return result = parser.program();
> ASTNode tree = (ASTNode) result.getTree();
> 
> System.out.println("Checking Context... ");
> CommonTreeNodeStream nodes = new CommonTreeNodeStream(adaptor, tree);
> nodes.setTokenStream(tokens);
> WcChecker checker = new WcChecker(nodes,f);
> checker.program();
> 
> 
> On 07/05/2012 10:05 AM, Stefan M?tje wrote:
> > Hi,
> >
> > the attachment seems to be stripped by the mailing list. I'll put it now
> > directly in the message.
> >
> > My classes are
> >       Pearl90Tree        a tree node
> >       Pearl90TreeAdaptor    the node factory?
> >       Pearl90ErrorNode    the error node object
> >
> > Code excerpt follows, sorry for line wraps:
> > {
> >       // ==== Prepare tree node adaptor for later use =========
> >       Pearl90TreeAdaptor pearl90Adaptor = new Pearl90TreeAdaptor();
> >
> >       // SNIP-SNAP
> >
> >       // ==== PARSER STAGE ====================================
> >       // Create a stream of tokens fed by the lexer
> >       // But use TokenRewriteStream if we need to change the AST
> >       // with a tree grammar later. See ANTLR Ref p. 224
> >       CommonTokenStream tokens = new CommonTokenStream(lexer);
> >
> >       // Create a parser that feeds off the token stream
> >       parser = new Pearl90Parser(tokens);
> >
> >       // Use my own tree adaptor to build Pearl90Tree nodes in the AST.
> >       parser.setTreeAdaptor(pearl90Adaptor);
> >
> >       // Begin parsing at rule "file" and get return value
> >       Pearl90Parser.file_return r = parser.file();
> >       // Change the returned value to an AST
> >       Pearl90Tree ast = (Pearl90Tree)r.getTree();
> >
> >       // SNIP-SNAP
> >
> >       // ---------------------------------------
> >       // Do error accounting ...
> >       // SNIP-SNAP
> >
> >       // ==== Symbol Table Generation =========================
> >       // This stage fills the symbol table and may rewrite the AST
> >       // based on its findings.
> >       // CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
> >       CommonTreeNodeStream nodes = new
> > CommonTreeNodeStream(pearl90Adaptor, ast);
> >       nodes.setTokenStream(tokens);
> >       // This line fixed crash on spurious CommonToken insertions.
> > Already done
> >       // now by constructor above.
> >       //nodes.setTreeAdaptor(pearl90Adaptor);
> >
> >       SymbolTable symtab = new SymbolTable();
> >       // Use my custom constructor for AST tree parser
> >       // Use workaround with new for missing debug output stream...
> >       Pearl90Sym syms = new Pearl90Sym(nodes, symtab, new
> > PrintWriter(System.out,true));
> >
> >       // Use my own tree adaptor to build Pearl90Tree nodes in the AST.
> >       syms.setTreeAdaptor(pearl90Adaptor);
> >
> >       // Trigger symtab actions upon certain subtrees,
> >       // return the rewritten AST as directed by Pearl90Sym.g
> >       ast = (Pearl90Tree)syms.downup(ast);
> >
> >
> > }
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
> >    
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 



From mike at lischke-online.de  Thu Jul  5 04:29:58 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Thu, 5 Jul 2012 13:29:58 +0200
Subject: [antlr-interest] Irregular AST construction
In-Reply-To: <CAN51Nt7cgnpg0t7DZsmF7dg1JaGspcN=Kzw8iT1B8ZQWAPMs-Q@mail.gmail.com>
References: <7CB10DD8-B4C9-41FE-A09E-9A53A0EC4975@lischke-online.de>
	<CAN51Nt7cgnpg0t7DZsmF7dg1JaGspcN=Kzw8iT1B8ZQWAPMs-Q@mail.gmail.com>
Message-ID: <05579F55-1F4C-4071-8F02-7032CB6D3928@lischke-online.de>


Hey Benjamin,

thanks for taking a look.

> If I had to guess, I'd say Antlr is not actually looking at the end of
> that rule when it generates the code for the subrule (so it uses
> streams in case you have more of the same tokens or rules); you'll get
> similar code if you leave out the ( COLLATE_SYM identifier )* but
> leave the parens around the alternatives.

So this is probably a bug in code generation?

> Personally, I've always had problems with rewrite rules appearing in
> alternatives, particular when I try to reference labels that appear
> later in the rule (in e.g. your example, you can't reference
> "identifier" in a rewrite rule in the subrule above it).

I have a number of cases where I construct subtrees for later tree parsing (so we can not only skip certain parts easily, but also know the level of nesting, which determines certain things like the scope for references).

> My strategy
> such cases is to use semantic predicates instead of embedding rewrite
> rules in subrules:
> 
> primary:
>        (
>               ...
>                | PLUS_SYM p1=primary
>                | MINUS_SYM p2=primary
>        )
>        (options {greedy = true;}: COLLATE_SYM identifier)*
>        -> {$function_call}? ^(FUNCTION_CALL function_call)
>        -> literal? field_name? ... PLUS_SYM? $p1? MINUS_SYM? $p2? ...
> interval_expression? ( COLLATE_SYM identifier )*
> ;


Using subrules here sounds like a sensible way to bypass this problem. Thanks for your suggestion!

Mike
-- 
www.soft-gems.net



From alestrooisma at gmx.net  Thu Jul  5 07:44:25 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Thu, 05 Jul 2012 16:44:25 +0200
Subject: [antlr-interest] ClassCastException with custom node type
In-Reply-To: <1341483511.21425.0@esd-s7>
References: <4FF54AAD.6070104@esd-electronics.com> <4FF55CEF.8010102@gmx.net>
	<1341483511.21425.0@esd-s7>
Message-ID: <20120705144425.257620@gmx.net>

Hi,

my teacher found the problem: I didn't override the dupNode method in the CommonTree-subclass, only in the adaptor.

Thanks for your help anyways.

Kind regards, Ale

-------- Original-Nachricht --------
> Datum: Thu, 05 Jul 2012 12:18:31 +0200
> Von: "Stefan M?tje \\"(d)\\"" <Stefan.Maetje at esd-electronics.com>
> An: antlr-interest at antlr.org
> Betreff: Re: [antlr-interest] ClassCastException with custom node type

> Am 05.07.2012 11:22:55 schrieb(en) Ale Strooisma:
> > Thanks for your reply,
> > 
> > I didn't see much difference between your and my code, and when I added 
> > the line "nodes.setTokenStream(tokens);" the problem was still there. 
> > Please see my code below.
> > 
> > Kind Regards, Ale
> 
> I don't see much difference also. Perhaps the difference comes from the
> tree 
> adaptor. I'll paste my adaptor below. Maybe that helps?
> 
> -----8<-----------8<-----------8<-----------8<---------8<---------8<--------
> import org.antlr.runtime.*;
> import org.antlr.runtime.tree.CommonTreeAdaptor;
> 
> /** A tree adaptor that tells ANTLR to build Pearl90Tree nodes. Derived
> from
>     http://www.antlr.org/wiki/display/ANTLR3/Tree
> +construction#Treeconstruction-UsingcustomASTnodetypes
>     */
> public class Pearl90TreeAdaptor extends CommonTreeAdaptor {
> 
>     public Object create(Token token) {
>         return new Pearl90Tree(token);
>     }
> 
>     /** Of the following create() methods only the third is used atm. by
> the
>         program. The apparently unused ones are added to the
> implementation 
> but
>         print some information. All are used but 1 & 2 triggered by hand
> from
>         parser only.
>         */
>     public Object create(int tokenType, Token fromToken) {
>         fromToken = createToken(fromToken);
>         fromToken.setType(tokenType);
>         // System.err.println("1 Create node"+fromToken.toString());
>         return this.create(fromToken);
>     }
> 
>     public Object create(int tokenType, Token fromToken, String text) {
>         if (fromToken == null) return create(tokenType, text);
>         fromToken = createToken(fromToken);
>         fromToken.setType(tokenType);
>         fromToken.setText(text);
>         // System.err.println("2 Create node"+fromToken.toString());
>         return this.create(fromToken);
>     }
> 
>     public Object create(int tokenType, String text) {
>         Token fromToken = createToken(tokenType, text);
>         // System.err.println("3 Create node"+fromToken.toString()+text
> +tokenType);
>         return this.create(fromToken);
>     }
> 
>     public Object dupNode(Object t) {
>         if (null == t) {
>             return null;
>         }
>         return create(((Pearl90Tree)t).token);
>     }
> 
>     public Object errorNode(TokenStream input, Token start, Token stop,
>         RecognitionException e)
>     {
>         Pearl90ErrorNode t = new Pearl90ErrorNode(input, start, stop, e);
>         System.out.println("returning error node '"+t+"'
> @index="+input.index
> ());
>         return t;
>     }
> 
> }
> -----8<-----------8<-----------8<-----------8<---------8<---------8<--------
> 
> > TreeAdaptor adaptor = new ASTNodeAdaptor();
> > 
> > System.out.println("Starting Lexer... ");
> > WcLexer lexer = new WcLexer(new ANTLRInputStream(fileInputStream));
> > TokenStream tokens = new CommonTokenStream(lexer);
> > 
> > System.out.println("Starting Parser... ");
> > WcParser parser = new WcParser(tokens);
> > parser.setTreeAdaptor(adaptor);
> > WcParser.program_return result = parser.program();
> > ASTNode tree = (ASTNode) result.getTree();
> > 
> > System.out.println("Checking Context... ");
> > CommonTreeNodeStream nodes = new CommonTreeNodeStream(adaptor, tree);
> > nodes.setTokenStream(tokens);
> > WcChecker checker = new WcChecker(nodes,f);
> > checker.program();
> > 
> > 
> > On 07/05/2012 10:05 AM, Stefan M?tje wrote:
> > > Hi,
> > >
> > > the attachment seems to be stripped by the mailing list. I'll put it
> now
> > > directly in the message.
> > >
> > > My classes are
> > >       Pearl90Tree        a tree node
> > >       Pearl90TreeAdaptor    the node factory?
> > >       Pearl90ErrorNode    the error node object
> > >
> > > Code excerpt follows, sorry for line wraps:
> > > {
> > >       // ==== Prepare tree node adaptor for later use =========
> > >       Pearl90TreeAdaptor pearl90Adaptor = new Pearl90TreeAdaptor();
> > >
> > >       // SNIP-SNAP
> > >
> > >       // ==== PARSER STAGE ====================================
> > >       // Create a stream of tokens fed by the lexer
> > >       // But use TokenRewriteStream if we need to change the AST
> > >       // with a tree grammar later. See ANTLR Ref p. 224
> > >       CommonTokenStream tokens = new CommonTokenStream(lexer);
> > >
> > >       // Create a parser that feeds off the token stream
> > >       parser = new Pearl90Parser(tokens);
> > >
> > >       // Use my own tree adaptor to build Pearl90Tree nodes in the
> AST.
> > >       parser.setTreeAdaptor(pearl90Adaptor);
> > >
> > >       // Begin parsing at rule "file" and get return value
> > >       Pearl90Parser.file_return r = parser.file();
> > >       // Change the returned value to an AST
> > >       Pearl90Tree ast = (Pearl90Tree)r.getTree();
> > >
> > >       // SNIP-SNAP
> > >
> > >       // ---------------------------------------
> > >       // Do error accounting ...
> > >       // SNIP-SNAP
> > >
> > >       // ==== Symbol Table Generation =========================
> > >       // This stage fills the symbol table and may rewrite the AST
> > >       // based on its findings.
> > >       // CommonTreeNodeStream nodes = new CommonTreeNodeStream(ast);
> > >       CommonTreeNodeStream nodes = new
> > > CommonTreeNodeStream(pearl90Adaptor, ast);
> > >       nodes.setTokenStream(tokens);
> > >       // This line fixed crash on spurious CommonToken insertions.
> > > Already done
> > >       // now by constructor above.
> > >       //nodes.setTreeAdaptor(pearl90Adaptor);
> > >
> > >       SymbolTable symtab = new SymbolTable();
> > >       // Use my custom constructor for AST tree parser
> > >       // Use workaround with new for missing debug output stream...
> > >       Pearl90Sym syms = new Pearl90Sym(nodes, symtab, new
> > > PrintWriter(System.out,true));
> > >
> > >       // Use my own tree adaptor to build Pearl90Tree nodes in the
> AST.
> > >       syms.setTreeAdaptor(pearl90Adaptor);
> > >
> > >       // Trigger symtab actions upon certain subtrees,
> > >       // return the rewritten AST as directed by Pearl90Sym.g
> > >       ast = (Pearl90Tree)syms.downup(ast);
> > >
> > >
> > > }
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> > >    
> > 
> > 
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > 
> > 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From nilopaim at gmail.com  Thu Jul  5 08:15:04 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Thu, 5 Jul 2012 12:15:04 -0300
Subject: [antlr-interest] ANTLR and Visual Studio 2010 trouble
Message-ID: <005a01cd5ac0$f6bc2b00$e4348100$@com>

Hi all,

 

I've downloaded and install the Visual Studio package for Antlr from
<http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases>
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases,  following
the instructions posted by Sam Harwell.

 

But when I try to create a grammar (Add->New Item.), there's no available
items on the ANTLR Templates presented by VS 2010.

 

Any hints?

 

TIA

Nilo - Brasil


From nilopaim at gmail.com  Thu Jul  5 08:56:47 2012
From: nilopaim at gmail.com (Nilo Roberto C Paim)
Date: Thu, 5 Jul 2012 12:56:47 -0300
Subject: [antlr-interest] Another ANTLR and Visual Studio 2010 trouble
In-Reply-To: <005a01cd5ac0$f6bc2b00$e4348100$@com>
References: <005a01cd5ac0$f6bc2b00$e4348100$@com>
Message-ID: <007101cd5ac6$c9db4f70$5d91ee50$@com>

Hi all,

 

I've downloaded and install the Visual Studio package for Antlr from
<http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases>
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases,  following
the instructions posted by Sam Harwell.

 

But when I try to create a grammar (Add->New Item.), there's no available
items on the ANTLR Templates presented by VS 2010.

 

Any hints?

 

TIA

Nilo - Brasil

 

This problem was solved! I had to search the templates page and not wait
that the Antlr templates appear on the ANTLR item.

 

But now I faced another problem, when I tried to build my simple test: 

 

------ Build started: Project: AntlrT1, Configuration: Release x86 ------

e:\Antlr\Antlr3.targets(123,5): error AC1000: Unknown build error: Exception
has been thrown by the target of an invocation.

========== Build: 0 succeeded or up-to-date, 1 failed, 0 skipped =========

 

Any hints?

 

TIA,

Nilo - Brasil


From alestrooisma at gmx.net  Fri Jul  6 02:47:27 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Fri, 06 Jul 2012 11:47:27 +0200
Subject: [antlr-interest] Token position 0, -1
Message-ID: <4FF6B42F.8050700@gmx.net>

Hello,

if I try to get the position of a token in the file with getLine and 
getCharPositionInLine, many of my tokens give the co?rdinates 0, -1, 
which obviously is wrong. Why is this the case, and how can I fix it?

Ale

From bkiers at gmail.com  Fri Jul  6 03:58:46 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 6 Jul 2012 12:58:46 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <4FF6B42F.8050700@gmx.net>
References: <4FF6B42F.8050700@gmx.net>
Message-ID: <CAOrgODYm3nTk0FSDxJsEdKQ1QCUf1yTdBwomB8YMOru4Oe2Tvw@mail.gmail.com>

On Fri, Jul 6, 2012 at 11:47 AM, Ale Strooisma <alestrooisma at gmx.net> wrote:

> Hello,
>
> if I try to get the position of a token in the file with getLine and
> getCharPositionInLine, many of my tokens give the co?rdinates 0, -1,
> which obviously is wrong. Why is this the case, and how can I fix it?
>

Hi Ale,

Are the tokens that return -1 imaginary tokens? These (imaginary) tokens
don't have a real position in the input after all.

Regards,

Bart.

From alestrooisma at gmx.net  Fri Jul  6 04:04:47 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Fri, 06 Jul 2012 13:04:47 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <CAOrgODYm3nTk0FSDxJsEdKQ1QCUf1yTdBwomB8YMOru4Oe2Tvw@mail.gmail.com>
References: <4FF6B42F.8050700@gmx.net>
	<CAOrgODYm3nTk0FSDxJsEdKQ1QCUf1yTdBwomB8YMOru4Oe2Tvw@mail.gmail.com>
Message-ID: <4FF6C64F.7020404@gmx.net>

No, I had the issue with for example identifiers.
The actual situation where I encountered it is the following: if my 
context-checker encounters a binary expression, it checks if both 
children nodes are of the same type. If they are not, an exception is 
thrown using the coordinates of the token of the first node for 
indicating the position of the error.
I suppose that such a child node can never contain an imaginary token.
However, I will check if I made a dramatic programming error such that I 
accidentally pass the wrong nodes to the function checking this.

Ale

On 07/06/2012 12:58 PM, Bart Kiers wrote:
> On Fri, Jul 6, 2012 at 11:47 AM, Ale Strooisma <alestrooisma at gmx.net 
> <mailto:alestrooisma at gmx.net>> wrote:
>
>     Hello,
>
>     if I try to get the position of a token in the file with getLine and
>     getCharPositionInLine, many of my tokens give the co?rdinates 0, -1,
>     which obviously is wrong. Why is this the case, and how can I fix it?
>
>
> Hi Ale,
>
> Are the tokens that return -1 imaginary tokens? These (imaginary) 
> tokens don't have a real position in the input after all.
>
> Regards,
>
> Bart.


From alestrooisma at gmx.net  Fri Jul  6 04:09:36 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Fri, 06 Jul 2012 13:09:36 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <CAOrgODYm3nTk0FSDxJsEdKQ1QCUf1yTdBwomB8YMOru4Oe2Tvw@mail.gmail.com>
References: <4FF6B42F.8050700@gmx.net>
	<CAOrgODYm3nTk0FSDxJsEdKQ1QCUf1yTdBwomB8YMOru4Oe2Tvw@mail.gmail.com>
Message-ID: <4FF6C770.2010702@gmx.net>

Correction: you are absolutely right.
I thought you were referring to UP and DOWN etcetera, but now I see the 
problem, thanks!

Ale

On 07/06/2012 12:58 PM, Bart Kiers wrote:
> On Fri, Jul 6, 2012 at 11:47 AM, Ale Strooisma <alestrooisma at gmx.net 
> <mailto:alestrooisma at gmx.net>> wrote:
>
>     Hello,
>
>     if I try to get the position of a token in the file with getLine and
>     getCharPositionInLine, many of my tokens give the co?rdinates 0, -1,
>     which obviously is wrong. Why is this the case, and how can I fix it?
>
>
> Hi Ale,
>
> Are the tokens that return -1 imaginary tokens? These (imaginary) 
> tokens don't have a real position in the input after all.
>
> Regards,
>
> Bart.


From Stefan.Maetje at esd-electronics.com  Fri Jul  6 04:23:09 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Fri, 06 Jul 2012 13:23:09 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <4FF6B42F.8050700@gmx.net> (from alestrooisma@gmx.net on Fri
	Jul  6 11:47:27 2012)
Message-ID: <1341573789.31655.0@esd-s7>

Am 06.07.2012 11:47:27 schrieb(en) Ale Strooisma:
> Hello,
> 
> if I try to get the position of a token in the file with getLine and 
> getCharPositionInLine, many of my tokens give the co?rdinates 0, -1, 
> which obviously is wrong. Why is this the case, and how can I fix it?

Hi,

please be aware of the fact that imaginary tokens that you create by using 
rewrite rules don't have any location information by default (and no text 
either).

So I think you should first look if all the tokens generated by the lexer 
contains the expected location information. Also you then can see which tokens 
were generated by the lexer and which were generated by a rewrite rule of the 
parser.

In rewrite rules you can attach the location information of a real lexer token
to a generated imaginary token by a syntax like that (see ANTLR book paragraph 
"Deriving Imaginary Nodes from Real Tokens"):

compoundStatement
	:  lc='{' statement*  '}'
		->  ^(SLIST[$lc]  statement*)
	;

All over all my answer is a little bit guesswork because your question is a 
little bit unspecific (lexer / parser or combined grammar ...? What are you 
doing exactly?).

Hope that helps,
	Stefan

Some example code to dump the lexer tokens:


    /** Dump all tokens the <lexer> provides in a readable form to the 
	location where <outFileName> points to.
        */
    private static void generateTokenOutput(Lexer lexer, String outFileName) {
        PrintWriter tknOut;
        boolean     useOutFile;
        Token token;

        System.err.print("==== TKN to ");
        if (null == outFileName) {
            useOutFile = false;
            System.err.println("stdout");
            tknOut = new PrintWriter(System.out);
        }
        else {
            useOutFile = true;
	    /* SNIP-SNAP  .... */
        }
        // Proceed with the real output
        while (null != (token = lexer.nextToken())) {
            int tokenType = token.getType();
            if (tokenType == -1) break;
            tknOut.printf("%4d,%3d, tkn:%4d  name:%-8s\t '%s'%n",
                token.getLine(), token.getCharPositionInLine(),
                tokenType, MyOwnParser.tokenNames[tokenType],
                token.getText());
        }
        // Need to close or flush the Writer to get the output
        if (useOutFile) tknOut.close();
        else tknOut.flush();
    }

Call like this ...
{
        MyOwnLexer lexer = new MyOwnLexer(input);

        // Dump all tokens?
        generateTokenOutput(lexer, null);
}


From alestrooisma at gmx.net  Fri Jul  6 04:39:05 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Fri, 06 Jul 2012 13:39:05 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <1341573789.31655.0@esd-s7>
References: <1341573789.31655.0@esd-s7>
Message-ID: <4FF6CE59.4010701@gmx.net>

I was trying to find out how to fix my problem, but is seems that your 
solution works perfectly, thanks!

On 07/06/2012 01:23 PM, Stefan M?tje (d) wrote:
> Am 06.07.2012 11:47:27 schrieb(en) Ale Strooisma:
>    
>> Hello,
>>
>> if I try to get the position of a token in the file with getLine and
>> getCharPositionInLine, many of my tokens give the co?rdinates 0, -1,
>> which obviously is wrong. Why is this the case, and how can I fix it?
>>      
> Hi,
>
> please be aware of the fact that imaginary tokens that you create by using
> rewrite rules don't have any location information by default (and no text
> either).
>
> So I think you should first look if all the tokens generated by the lexer
> contains the expected location information. Also you then can see which tokens
> were generated by the lexer and which were generated by a rewrite rule of the
> parser.
>
> In rewrite rules you can attach the location information of a real lexer token
> to a generated imaginary token by a syntax like that (see ANTLR book paragraph
> "Deriving Imaginary Nodes from Real Tokens"):
>
> compoundStatement
> 	:  lc='{' statement*  '}'
> 		->   ^(SLIST[$lc]  statement*)
> 	;
>
> All over all my answer is a little bit guesswork because your question is a
> little bit unspecific (lexer / parser or combined grammar ...? What are you
> doing exactly?).
>
> Hope that helps,
> 	Stefan
>
> Some example code to dump the lexer tokens:
>
>
>      /** Dump all tokens the<lexer>  provides in a readable form to the
> 	location where<outFileName>  points to.
>          */
>      private static void generateTokenOutput(Lexer lexer, String outFileName) {
>          PrintWriter tknOut;
>          boolean     useOutFile;
>          Token token;
>
>          System.err.print("==== TKN to ");
>          if (null == outFileName) {
>              useOutFile = false;
>              System.err.println("stdout");
>              tknOut = new PrintWriter(System.out);
>          }
>          else {
>              useOutFile = true;
> 	    /* SNIP-SNAP  .... */
>          }
>          // Proceed with the real output
>          while (null != (token = lexer.nextToken())) {
>              int tokenType = token.getType();
>              if (tokenType == -1) break;
>              tknOut.printf("%4d,%3d, tkn:%4d  name:%-8s\t '%s'%n",
>                  token.getLine(), token.getCharPositionInLine(),
>                  tokenType, MyOwnParser.tokenNames[tokenType],
>                  token.getText());
>          }
>          // Need to close or flush the Writer to get the output
>          if (useOutFile) tknOut.close();
>          else tknOut.flush();
>      }
>
> Call like this ...
> {
>          MyOwnLexer lexer = new MyOwnLexer(input);
>
>          // Dump all tokens?
>          generateTokenOutput(lexer, null);
> }
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>    


From mike at lischke-online.de  Mon Jul  9 05:29:17 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Mon, 9 Jul 2012 14:29:17 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <1341573789.31655.0@esd-s7>
References: <1341573789.31655.0@esd-s7>
Message-ID: <10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>


Stefan,

> compoundStatement
> 	:  lc='{' statement*  '}'
> 		->  ^(SLIST[$lc]  statement*)
> 	;

Is there a similar construct if you have a rule instead of a token? For instance:

target_table:
	qualified_identifier -> ^(TABLE_REF_ID qualified_identifier)
;
	
Here I would like to give the synthetic TABLE_REF_ID token the location info from the qualified_identifier rule.

Mike
-- 
www.soft-gems.net



From alestrooisma at gmx.net  Mon Jul  9 05:41:54 2012
From: alestrooisma at gmx.net (Ale Strooisma)
Date: Mon, 09 Jul 2012 14:41:54 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
References: <1341573789.31655.0@esd-s7>
	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
Message-ID: <4FFAD192.2050006@gmx.net>

Hi Mike,

Rules don't have a location, but you can make a rule return a value, so 
if you let your rule return a token, you can do it like this:

target_table
     : rv=qualified_identifier ->  ^(TABLE_REF_ID[rv] qualified_identifier)
     ;

And then qualified identifier should look something like this:

qualified_identifier returns [CommonToken rv = null;]
     : ... t=SOME_TERMINAL ... {rv=$t;}
     ;

In my code I made all my rules return their root-token in this way.
If you still have any questions about how or why it works, just ask.

Good luck,
Ale


On 07/09/2012 02:29 PM, Mike Lischke wrote:
> Stefan,
>
>    
>> compoundStatement
>> 	:  lc='{' statement*  '}'
>> 		->   ^(SLIST[$lc]  statement*)
>> 	;
>>      
> Is there a similar construct if you have a rule instead of a token? For instance:
>
> target_table:
> 	qualified_identifier ->  ^(TABLE_REF_ID qualified_identifier)
> ;
> 	
> Here I would like to give the synthetic TABLE_REF_ID token the location info from the qualified_identifier rule.
>
> Mike
>    


From Stefan.Maetje at esd-electronics.com  Mon Jul  9 06:12:09 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?= (d))
Date: Mon, 09 Jul 2012 15:12:09 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de> (from
	mike@lischke-online.de on Mon Jul  9 14:29:17 2012)
References: <1341573789.31655.0@esd-s7>
	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
Message-ID: <1341839529.5630.0@esd-s7>

Hi Mike,

see my suggestion below:

Am 09.07.2012 14:29:17 schrieb(en) Mike Lischke:
> 
> Stefan,
> 
> > compoundStatement
> > 	:  lc='{' statement*  '}'
> > 		->  ^(SLIST[$lc]  statement*)
> > 	;
> 
> Is there a similar construct if you have a rule instead of a token? For
> instance:
> 
> target_table:
> 	qualified_identifier -> ^(TABLE_REF_ID qualified_identifier)
> ;

I use in some case the start attribute of the subrule:

target_table:
	qualified_identifier -> ^(TABLE_REF_ID[$qualified_identifier.start] 
qualified_identifier)

> Here I would like to give the synthetic TABLE_REF_ID token the location info
> from the qualified_identifier rule.
> 
> Mike
> -- 
> www.soft-gems.net


From jimi at temporal-wave.com  Mon Jul  9 10:53:03 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 9 Jul 2012 10:53:03 -0700
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
References: <1341573789.31655.0@esd-s7>
	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
Message-ID: <bc8bbdc1dd1c157f4835c6c3bfeac77d@mail.gmail.com>

Ask the node for its start and end tokens, the start position of the first
token and the end position of the end token give you the span of input
text.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Monday, July 09, 2012 5:29 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Token position 0, -1
>
>
> Stefan,
>
> > compoundStatement
> > 	:  lc='{' statement*  '}'
> > 		->  ^(SLIST[$lc]  statement*)
> > 	;
>
> Is there a similar construct if you have a rule instead of a token? For
> instance:
>
> target_table:
> 	qualified_identifier -> ^(TABLE_REF_ID qualified_identifier) ;
>
> Here I would like to give the synthetic TABLE_REF_ID token the location
> info from the qualified_identifier rule.
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From atalay at udel.edu  Mon Jul  9 11:22:37 2012
From: atalay at udel.edu (Murat Atalay)
Date: Mon, 9 Jul 2012 11:22:37 -0700
Subject: [antlr-interest] ANTLRWorks generating cpp files.
Message-ID: <CAFBENeHH=LmzhLsyYuRZPK=1S+dXWzFJNSth3P5XUd_qs7nNYg@mail.gmail.com>

Hello Everyone,

I have question about generating cpp files with ANTLRWorks. I would like to
generate compile-able CPP files.

ANTLRWorks only generates C files which also can be compiled by CPP. But I
have to go in to header files and comment out some of the lines, such as;

//extern "C"{
//..
//}

Because i'm adding specific CPP libraries (STL) in to my grammer and it
doesn't work properly unless I comment out those lines. I was wondering is
there any way to do this automated. I keep update my grammar and then I
have to go in to my header files and comment these out and its kinda
annoying.

Can we quickly add CPP language support to ANTLR. At least it can remove
the lines given above.

Please let me know if anyone has any ideas about it.

Thanks,
Murat

From jimi at temporal-wave.com  Mon Jul  9 13:10:18 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 9 Jul 2012 13:10:18 -0700
Subject: [antlr-interest] ANTLRWorks generating cpp files.
In-Reply-To: <CAFBENeHH=LmzhLsyYuRZPK=1S+dXWzFJNSth3P5XUd_qs7nNYg@mail.gmail.com>
References: <CAFBENeHH=LmzhLsyYuRZPK=1S+dXWzFJNSth3P5XUd_qs7nNYg@mail.gmail.com>
Message-ID: <9293a9ea608f0d7fd8e864a225fa6392@mail.gmail.com>

You are adding the headers in the wrong @section of the grammar. Look at
the docs and you will see that there are various places that you can
inject code lines. One of these is outside the extern "C" set. However, I
would advise that you try and separate your C++ out of the actual grammar
itself.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Murat Atalay
> Sent: Monday, July 09, 2012 11:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLRWorks generating cpp files.
>
> Hello Everyone,
>
> I have question about generating cpp files with ANTLRWorks. I would
> like to generate compile-able CPP files.
>
> ANTLRWorks only generates C files which also can be compiled by CPP.
> But I have to go in to header files and comment out some of the lines,
> such as;
>
> //extern "C"{
> //..
> //}
>
> Because i'm adding specific CPP libraries (STL) in to my grammer and it
> doesn't work properly unless I comment out those lines. I was wondering
> is there any way to do this automated. I keep update my grammar and
> then I have to go in to my header files and comment these out and its
> kinda annoying.
>
> Can we quickly add CPP language support to ANTLR. At least it can
> remove the lines given above.
>
> Please let me know if anyone has any ideas about it.
>
> Thanks,
> Murat
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From martin.potthast at uni-weimar.de  Mon Jul  9 14:41:28 2012
From: martin.potthast at uni-weimar.de (Martin Potthast)
Date: Mon, 9 Jul 2012 23:41:28 +0200
Subject: [antlr-interest] Tree grammar generated for the C runtime
 reports a syntax error where Java doesn't
In-Reply-To: <CAGEtS-AjKAgAhie3VqFdRaAFwSJsEXwCrGOa1aoYY_B_PaUGCw@mail.gmail.com>
References: <CAGEtS-AfjpVDuFSOnz563P8c5=FMS3BK-sguNvqguTKXD5GHtg@mail.gmail.com>
	<9d597c872eaec8d1b2a6feffb67c9301@mail.gmail.com>
	<CAGEtS-AjKAgAhie3VqFdRaAFwSJsEXwCrGOa1aoYY_B_PaUGCw@mail.gmail.com>
Message-ID: <CAGEtS-Bi8jhRSXr0xZyHsKNAbU-Zw4T_My+hT9L2=692neqNVg@mail.gmail.com>

Following up on this issue, I have further narrowed down the problem
with wildcards not matching entire sub-trees in a tree parser: it
turns out, the sub-tree is copied alright, but the token stream
reader/matcher is not advanced correspondingly. This can be easily
fixed, as I will show below.

Consider the following example rule:

foo : . ;

This rule should match every tree, including all of its sub-trees.
The C code generated for this rule looks like this:

[...]
{
    _last = (pANTLR3_BASE_TREE)LT(1);
    wildcard1=(pANTLR3_BASE_TREE)LT(1);

    MATCHANYT();
    if  (HASEXCEPTION())
    {
      goto ruleanyforestEx;
    }

    wildcard1_tree = (pANTLR3_BASE_TREE)ADAPTOR->dupTree(ADAPTOR, wildcard1);
    ADAPTOR->addChild(ADAPTOR, root_0, wildcard1_tree);
}
[...]

As you can see, wildcard1_tree is copied to the ADAPTOR using ADAPTOR->dupTree.
Observe, however, that MATCHANYT() does not mean "match any tree", but
"match any token". Therefore, the stream reader is not advanced in
accordance with copying the entire sub-tree to the ADAPTOR. This
leaves the tree parser in a corrupt state.

Here's a workaround that solves the problem when patching the tree
parser manually:

[...]
{
    _last = (pANTLR3_BASE_TREE)LT(1);
    wildcard1=(pANTLR3_BASE_TREE)LT(1);

    int depth = 0;
    for (;;)
    {
        MATCHANYT();
        switch ( LA(1) )
        {
            case DOWN:
                depth += 1;
                break;
            case UP:
                depth -= 1;
                break;
        }
        if (depth == 0) /* sub tree finished */
        {
            MATCHT(ANTLR3_TOKEN_UP, NULL);
            break;
        }
        if (depth == -1) /* no sub tree found */
        {
            break;
        }
    }

    if  (HASEXCEPTION())
    {
        goto ruleanyforestEx;
    }

    wildcard1_tree = (pANTLR3_BASE_TREE)ADAPTOR->dupTree(ADAPTOR, wildcard1);
    ADAPTOR->addChild(ADAPTOR, root_0, wildcard1_tree);
}
[...]

Above, the for loop around MATCHANYT() traverses the parse tree,
matching any token on the way. Traversal stops when no sub-tree is
found on a given node, and when the number of UP nodes matched is for
the first time the same as the number of DOWN nodes matched
beforehand.

Is this a good solution?
Does it merit being added to the parser generator?

Martin

-- 
Martin Potthast
Bauhaus-Universit?t Weimar
www.webis.de  ---  www.netspeak.org

From mike at lischke-online.de  Tue Jul 10 01:55:09 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Tue, 10 Jul 2012 10:55:09 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <1341839529.5630.0@esd-s7>
References: <1341573789.31655.0@esd-s7>
	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
	<1341839529.5630.0@esd-s7>
Message-ID: <9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>


Stefan, Jim,

thanks for the hint about the start/stop tokens.

>> Is there a similar construct if you have a rule instead of a token? For
>> instance:
>> 
>> target_table:
>> 	qualified_identifier -> ^(TABLE_REF_ID qualified_identifier)
>> ;
> 
> I use in some case the start attribute of the subrule:
> 
> target_table:
> 	qualified_identifier -> ^(TABLE_REF_ID[$qualified_identifier.start] 
> qualified_identifier)

This doesn't work with my grammar (using the C target). Instead of taking the location only the token text of my virtual token is set to NULL. The generated C code is:

            if ( BACKTRACKING==0 ) 

            {
            	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_retval;

            	stream_retval=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,  RECOGNIZER, (pANTLR3_UINT8)"token retval", retval.tree != NULL ? retval.tree : NULL);

            	root_0			    = (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
            	retval.tree    = root_0;
            	// 580:23: -> ^( TABLE_REF_ID[$qualified_identifier.start] qualified_identifier )
            	{
            	    // MySQL55.g:580:26: ^( TABLE_REF_ID[$qualified_identifier.start] qualified_identifier )
            	    {
            	        pANTLR3_BASE_TREE root_1 = (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
            	        root_1 = (pANTLR3_BASE_TREE)(ADAPTOR->becomeRoot(ADAPTOR, 

            	        #if 1 == 2
            	        	(pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR, TABLE_REF_ID, TOKTEXT((qualified_identifier695.start)))
            	        #else
            	        	(pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, TABLE_REF_ID, (pANTLR3_UINT8)(qualified_identifier695.start))
            	        #endif

            	        , root_1));

            	        ADAPTOR->addChild(ADAPTOR, root_1, stream_qualified_identifier == NULL ? NULL : stream_qualified_identifier->nextTree(stream_qualified_identifier));

            	        ADAPTOR->addChild(ADAPTOR, root_0, root_1);
            	    }

            	}


            	retval.tree = root_0; // set result root

which shows that the start token is used only to create the token text for root_1, which is clearly not what we want. Also, this 1 == 2 part seems quite useless and is just bloating the already huge file (almost 134K lines already).

Mike
-- 
www.soft-gems.net



From asicaddress at gmail.com  Tue Jul 10 07:01:49 2012
From: asicaddress at gmail.com (A Z)
Date: Tue, 10 Jul 2012 09:01:49 -0500
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
References: <1341573789.31655.0@esd-s7>
	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
	<1341839529.5630.0@esd-s7>
	<9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
Message-ID: <CAP86aOdM0=j-rWNOrDtUuRqME6xVQSoArjqbzpXjWsfjKfMbiA@mail.gmail.com>

This is a bug in the C code generator. The parser code should call
createTypeToken() but instead calls createTypeText().  You can fix it by
modifying
antlr-3.4/tool/src/main/resources/org/antlr/codegen/templates/C/AST.stg
towards the end of the file and recompiling the jar file.


On Tue, Jul 10, 2012 at 3:55 AM, Mike Lischke <mike at lischke-online.de>wrote:

>
> Stefan, Jim,
>
> thanks for the hint about the start/stop tokens.
>
> >> Is there a similar construct if you have a rule instead of a token? For
> >> instance:
> >>
> >> target_table:
> >>      qualified_identifier -> ^(TABLE_REF_ID qualified_identifier)
> >> ;
> >
> > I use in some case the start attribute of the subrule:
> >
> > target_table:
> >       qualified_identifier -> ^(TABLE_REF_ID[$qualified_identifier.start]
> > qualified_identifier)
>
> This doesn't work with my grammar (using the C target). Instead of taking
> the location only the token text of my virtual token is set to NULL. The
> generated C code is:
>
>             if ( BACKTRACKING==0 )
>
>             {
>                 pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_retval;
>
>
> stream_retval=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,  RECOGNIZER,
> (pANTLR3_UINT8)"token retval", retval.tree != NULL ? retval.tree : NULL);
>
>                 root_0                      =
> (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
>                 retval.tree    = root_0;
>                 // 580:23: -> ^( TABLE_REF_ID[$qualified_identifier.start]
> qualified_identifier )
>                 {
>                     // MySQL55.g:580:26: ^(
> TABLE_REF_ID[$qualified_identifier.start] qualified_identifier )
>                     {
>                         pANTLR3_BASE_TREE root_1 =
> (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
>                         root_1 =
> (pANTLR3_BASE_TREE)(ADAPTOR->becomeRoot(ADAPTOR,
>
>                         #if 1 == 2
>
> (pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR, TABLE_REF_ID,
> TOKTEXT((qualified_identifier695.start)))
>                         #else
>
> (pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, TABLE_REF_ID,
> (pANTLR3_UINT8)(qualified_identifier695.start))
>                         #endif
>
>                         , root_1));
>
>                         ADAPTOR->addChild(ADAPTOR, root_1,
> stream_qualified_identifier == NULL ? NULL :
> stream_qualified_identifier->nextTree(stream_qualified_identifier));
>
>                         ADAPTOR->addChild(ADAPTOR, root_0, root_1);
>                     }
>
>                 }
>
>
>                 retval.tree = root_0; // set result root
>
> which shows that the start token is used only to create the token text for
> root_1, which is clearly not what we want. Also, this 1 == 2 part seems
> quite useless and is just bloating the already huge file (almost 134K lines
> already).
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sanne.grinovero at gmail.com  Tue Jul 10 07:15:08 2012
From: sanne.grinovero at gmail.com (Sanne Grinovero)
Date: Tue, 10 Jul 2012 15:15:08 +0100
Subject: [antlr-interest] GUnit failing / Parser appending EOF to input
	tokens?
Message-ID: <CAFm4XO2XBLa3n7g8EgQf-yogvSn7y0KHgswWFbHMcog915ZCww@mail.gmail.com>

Hello All,
I'm having a not too complex Parser and Lexer nicely generated by
ANTLR v3.4, with more than 2,500 tests GUnit tests.

The Parser seems to work as expected, but it fails some GUnit test as
the number of tokens doesn't match an expectation in the GUnit code
itself.

Debugging, it fails at this point of
org.antlr.gunit.gUnitExecutor :

(prefixing lines numbers):
----------

378: /** Invalid input */
379: if ( tokens.index()!=tokens.size()-1 ) {
380:    //throw new InvalidInputException();
381:    ps2.print("Invalid input");
382: }

----------

And this output into ps2 marks the test as failed even while it would
otherwise succeed.

Debugging the tokens of the failing input test "from Animal", I print
the Lexer output with this code snippet:

CommonTokenStream tokens = new CommonTokenStream( lexer );
System.out.println( tokens.getTokens() );

Which produces:
[[@0,0:3='from',<74>,1:0], [@1,5:10='Animal',<74>,1:5],
[@2,11:11='<EOF>',<-1>,1:11]]

*before* passing it through the generated Parser, but produces this
different output after the parser:

[[@0,0:3='from',<74>,1:0], [@1,5:10='Animal',<74>,1:5],
[@2,11:11='<EOF>',<-1>,1:11], [@3,11:11='<EOF>',<-1>,1:11]]

Note the duplication of the EOF token at the end.
This output with duplicate EOFs is generated even if I invoke
"tokens.reset();", or if I parse the same token stream multiple times,
it's not going to append additional EOF tokens.
Today I'm skipping white space, but even using an hidden channel it
behaves the same.

I would strongly appreciate some advise of why this could happen, and
what I could look into:

1# is the check done by GUnit really suggesting a problem, or should
it be relaxed?

2# I tried to have my generated Lexer extend a custom class to
override the getTokens() to artificially cleanup duplicates.. but it
seems I can't define a superclass for the Lexer [1], or I couldn't
figure out the syntax.

3# Is the Parser somehow changing the input token stream? Would that
be expected? (and needed?)

4# Since GUnit directly creates the components and controls all the
wiring, I couldn't find a way to workaround these.. I can't "cleanup"
the duplicate EOF or have it ignore them at token count time.

While I'd love some enlightenment about what might be happening, I
would also appreciate some practical advice to "workaround" this, as
the Parser I have is otherwise working fine.
I would rather not delete otherwise valid tests..

TiA,
Sanne

1 - http://www.antlr.org/wiki/display/ANTLR3/add+superClass+to+lexer

From tharwood at adobe.com  Tue Jul 10 08:56:41 2012
From: tharwood at adobe.com (Tom Harwood)
Date: Tue, 10 Jul 2012 08:56:41 -0700
Subject: [antlr-interest] Help Wanted - Adobe Flash Compiler Team - Boston
	or SF
Message-ID: <CC21C8F9.1EE86%tharwood@adobe.com>

The Flash compiler team is looking for a compiler engineer with experience
in commercial software development and compiler tools -- ideally ANTLR.
>From personal experience I can attest that it's a visible and meaningful
role on a strategic (and pretty decently run) project.

The best way to apply is to follow this link and apply online:

https://adobe.taleo.net/careersection/jobdetail.ftl?job=160582

Best regards,
--
Tom Harwood
Adobe Flash Compiler Development



From jimi at temporal-wave.com  Tue Jul 10 12:18:16 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Jul 2012 12:18:16 -0700
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
References: <1341573789.31655.0@esd-s7>	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
	<1341839529.5630.0@esd-s7>
	<9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
Message-ID: <aa2cb7d62501aec1b4c2db084fa77dc6@mail.gmail.com>

Mike,

The 1 == 2 is necessary because that is the only way I could make the
conditional code work with the code generation techniques we have. In
different circumstances, you will see 1 == 1 and the code is incorporated.
The size of the C file only makes a difference with old debuggers that
used a 16 but line number field. The performance boost is significant.

Don't do all the rewriting stuff anyway, as it adds code and execution
time that you don't need. Just:

->^(NODE x t )

Then you want the start and end tokens from NODE in your tree grammar and
asking those tokens for their info will give you everything you want. In
general, do only the tree re-writing you need to make the tree unambiguous
- there is no need to move the text from one token in to another and so
on.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mike Lischke
> Sent: Tuesday, July 10, 2012 1:55 AM
> To: ANTLR Mailing List
> Subject: Re: [antlr-interest] Token position 0, -1
>
>
> Stefan, Jim,
>
> thanks for the hint about the start/stop tokens.
>
> >> Is there a similar construct if you have a rule instead of a token?
> >> For
> >> instance:
> >>
> >> target_table:
> >> 	qualified_identifier -> ^(TABLE_REF_ID qualified_identifier) ;
> >
> > I use in some case the start attribute of the subrule:
> >
> > target_table:
> > 	qualified_identifier ->
> ^(TABLE_REF_ID[$qualified_identifier.start]
> > qualified_identifier)
>
> This doesn't work with my grammar (using the C target). Instead of
> taking the location only the token text of my virtual token is set to
> NULL. The generated C code is:
>
>             if ( BACKTRACKING==0 )
>
>             {
>             	pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_retval;
>
>
> 	stream_retval=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
> RECOGNIZER, (pANTLR3_UINT8)"token retval", retval.tree != NULL ?
> retval.tree : NULL);
>
>             	root_0			    = (pANTLR3_BASE_TREE)(ADAPTOR-
> >nilNode(ADAPTOR));
>             	retval.tree    = root_0;
>             	// 580:23: -> ^(
> TABLE_REF_ID[$qualified_identifier.start] qualified_identifier )
>             	{
>             	    // MySQL55.g:580:26: ^(
> TABLE_REF_ID[$qualified_identifier.start] qualified_identifier )
>             	    {
>             	        pANTLR3_BASE_TREE root_1 =
> (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
>             	        root_1 = (pANTLR3_BASE_TREE)(ADAPTOR-
> >becomeRoot(ADAPTOR,
>
>             	        #if 1 == 2
>             	        	(pANTLR3_BASE_TREE)ADAPTOR-
> >createTypeTokenText(ADAPTOR, TABLE_REF_ID,
> TOKTEXT((qualified_identifier695.start)))
>             	        #else
>             	        	(pANTLR3_BASE_TREE)ADAPTOR-
> >createTypeText(ADAPTOR, TABLE_REF_ID,
> (pANTLR3_UINT8)(qualified_identifier695.start))
>             	        #endif
>
>             	        , root_1));
>
>             	        ADAPTOR->addChild(ADAPTOR, root_1,
> stream_qualified_identifier == NULL ? NULL :
> stream_qualified_identifier->nextTree(stream_qualified_identifier));
>
>             	        ADAPTOR->addChild(ADAPTOR, root_0, root_1);
>             	    }
>
>             	}
>
>
>             	retval.tree = root_0; // set result root
>
> which shows that the start token is used only to create the token text
> for root_1, which is clearly not what we want. Also, this 1 == 2 part
> seems quite useless and is just bloating the already huge file (almost
> 134K lines already).
>
> Mike
> --
> www.soft-gems.net
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue Jul 10 12:22:01 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 Jul 2012 12:22:01 -0700
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <CAP86aOdM0=j-rWNOrDtUuRqME6xVQSoArjqbzpXjWsfjKfMbiA@mail.gmail.com>
References: <1341573789.31655.0@esd-s7>	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
	<1341839529.5630.0@esd-s7>	<9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
	<CAP86aOdM0=j-rWNOrDtUuRqME6xVQSoArjqbzpXjWsfjKfMbiA@mail.gmail.com>
Message-ID: <ce712e35e9cc946d1a2a25b2028c8900@mail.gmail.com>

It isn't a bug - you will just break other things. This is a known defect
because the Java code relies on overloaded methods in the runtime to
perform one call or the other. I can't do that in the C runtime and there
is no context at code generation that lets me 'know' which one is correct.

However, such rewrites are generally completely unnecessary anyway.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Tuesday, July 10, 2012 7:02 AM
> To: Mike Lischke
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Token position 0, -1
>
> This is a bug in the C code generator. The parser code should call
> createTypeToken() but instead calls createTypeText().  You can fix it
> by modifying antlr-
> 3.4/tool/src/main/resources/org/antlr/codegen/templates/C/AST.stg
> towards the end of the file and recompiling the jar file.
>
>
> On Tue, Jul 10, 2012 at 3:55 AM, Mike Lischke <mike at lischke-
> online.de>wrote:
>
> >
> > Stefan, Jim,
> >
> > thanks for the hint about the start/stop tokens.
> >
> > >> Is there a similar construct if you have a rule instead of a
> token?
> > >> For
> > >> instance:
> > >>
> > >> target_table:
> > >>      qualified_identifier -> ^(TABLE_REF_ID qualified_identifier)
> ;
> > >
> > > I use in some case the start attribute of the subrule:
> > >
> > > target_table:
> > >       qualified_identifier ->
> > > ^(TABLE_REF_ID[$qualified_identifier.start]
> > > qualified_identifier)
> >
> > This doesn't work with my grammar (using the C target). Instead of
> > taking the location only the token text of my virtual token is set to
> > NULL. The generated C code is:
> >
> >             if ( BACKTRACKING==0 )
> >
> >             {
> >                 pANTLR3_REWRITE_RULE_SUBTREE_STREAM stream_retval;
> >
> >
> > stream_retval=antlr3RewriteRuleSubtreeStreamNewAEE(ADAPTOR,
> > RECOGNIZER, (pANTLR3_UINT8)"token retval", retval.tree != NULL ?
> > retval.tree : NULL);
> >
> >                 root_0                      =
> > (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
> >                 retval.tree    = root_0;
> >                 // 580:23: -> ^(
> > TABLE_REF_ID[$qualified_identifier.start]
> > qualified_identifier )
> >                 {
> >                     // MySQL55.g:580:26: ^(
> > TABLE_REF_ID[$qualified_identifier.start] qualified_identifier )
> >                     {
> >                         pANTLR3_BASE_TREE root_1 =
> > (pANTLR3_BASE_TREE)(ADAPTOR->nilNode(ADAPTOR));
> >                         root_1 =
> > (pANTLR3_BASE_TREE)(ADAPTOR->becomeRoot(ADAPTOR,
> >
> >                         #if 1 == 2
> >
> > (pANTLR3_BASE_TREE)ADAPTOR->createTypeTokenText(ADAPTOR,
> TABLE_REF_ID,
> > TOKTEXT((qualified_identifier695.start)))
> >                         #else
> >
> > (pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR, TABLE_REF_ID,
> > (pANTLR3_UINT8)(qualified_identifier695.start))
> >                         #endif
> >
> >                         , root_1));
> >
> >                         ADAPTOR->addChild(ADAPTOR, root_1,
> > stream_qualified_identifier == NULL ? NULL :
> > stream_qualified_identifier->nextTree(stream_qualified_identifier));
> >
> >                         ADAPTOR->addChild(ADAPTOR, root_0, root_1);
> >                     }
> >
> >                 }
> >
> >
> >                 retval.tree = root_0; // set result root
> >
> > which shows that the start token is used only to create the token
> text
> > for root_1, which is clearly not what we want. Also, this 1 == 2 part
> > seems quite useless and is just bloating the already huge file
> (almost
> > 134K lines already).
> >
> > Mike
> > --
> > www.soft-gems.net
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From parrt at antlr.org  Tue Jul 10 23:51:04 2012
From: parrt at antlr.org (parrt at antlr.org)
Date: Wed, 11 Jul 2012 03:51:04 -0300
Subject: [antlr-interest] [SPAM] Wir suchen einen Operationsmanager
Message-ID: <2621285799.U2ZG53BD723083@eupfpsyhj.jrrllfucbqft.org>


From mike at lischke-online.de  Wed Jul 11 00:59:20 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 11 Jul 2012 09:59:20 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <CAP86aOdM0=j-rWNOrDtUuRqME6xVQSoArjqbzpXjWsfjKfMbiA@mail.gmail.com>
References: <1341573789.31655.0@esd-s7>
	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
	<1341839529.5630.0@esd-s7>
	<9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
	<CAP86aOdM0=j-rWNOrDtUuRqME6xVQSoArjqbzpXjWsfjKfMbiA@mail.gmail.com>
Message-ID: <7C6DD77E-1549-4BE4-86DE-939A68CF01D4@lischke-online.de>



> This is a bug in the C code generator. The parser code should call createTypeToken() but instead calls createTypeText().  You can fix it by modifying antlr-3.4/tool/src/main/resources/org/antlr/codegen/templates/C/AST.stg towards the end of the file and recompiling the jar file.


Bummer. Thanks for the info.

Mike
-- 
www.soft-gems.net


From mike at lischke-online.de  Wed Jul 11 01:06:07 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 11 Jul 2012 10:06:07 +0200
Subject: [antlr-interest] Token position 0, -1
In-Reply-To: <aa2cb7d62501aec1b4c2db084fa77dc6@mail.gmail.com>
References: <1341573789.31655.0@esd-s7>	<10A39692-8FC1-43C9-86B5-6EFC8E258199@lischke-online.de>
	<1341839529.5630.0@esd-s7>
	<9D57E02C-5919-4416-8AA9-D5183A6EEE61@lischke-online.de>
	<aa2cb7d62501aec1b4c2db084fa77dc6@mail.gmail.com>
Message-ID: <55324D86-E47D-47CB-AF34-3CAC2B4E19C9@lischke-online.de>


Jim,

thanks for taking time to respond.

> The 1 == 2 is necessary because that is the only way I could make the
> conditional code work with the code generation techniques we have. In
> different circumstances, you will see 1 == 1 and the code is incorporated.
> The size of the C file only makes a difference with old debuggers that
> used a 16 but line number field. The performance boost is significant.

We all have our restrictions, haven't we?

> 
> Don't do all the rewriting stuff anyway, as it adds code and execution
> time that you don't need. Just:
> 
> ->^(NODE x t )
> 
> Then you want the start and end tokens from NODE in your tree grammar and
> asking those tokens for their info will give you everything you want. In
> general, do only the tree re-writing you need to make the tree unambiguous
> - there is no need to move the text from one token in to another and so
> on.


Since the "tree" generated by default is rather a straight list, it is difficult to have context info at hand when parsing it (e.g. nesting levels of recursive structures). It would be easier if we could (partially) switch off the tree-flattening which happens at each rule's exit. This would even safe another couple of CPU cycles.

Btw: is there a way to toggle AST generation entirely at runtime?

Mike
-- 
www.soft-gems.net



From parrt at cs.usfca.edu  Wed Jul 11 08:36:17 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2012 08:36:17 -0700
Subject: [antlr-interest] turned off public signup to wiki
Message-ID: <0D34E45E-63F7-4238-9FD4-FA1BDF038E27@cs.usfca.edu>

only evil spammers are signing up. turned it off. sorry?email me for access if you want to add/edit pages.
Ter

From burton.samograd at markit.com  Wed Jul 11 11:01:58 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Wed, 11 Jul 2012 14:01:58 -0400
Subject: [antlr-interest] Calling a function on token match
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E47336B2@NJ4MSGSCR02.markit.partners>

Hello,

I am trying to call some code every time a token matches ('\n' in this case).  My naive attempt is:

fragment
NEWLINE
    : '\n' { std::cerr << "NEWLINE\n"; }
    ;

Giving:

error(100): SDL.g:0:0: syntax error: buildnfa: <AST>:913:12: expecting EOA, found ' std::cerr << "NEWLINE\n";

I found this related post:

http://www.antlr.org/pipermail/antlr-interest/2009-February/032921.html

But I'm not fluent enough in antlr to understand exactly what the solution entails.  In our grammar we have a number of places to handle whitespace like ( ' ' | '\t' | '\r' | '\n' ) which I am hoping that with the above NEWLINE rule can then be replaced with ( ' ' | '\t' | '\r' | NEWLINE ).  I want to update an external line count variable using a function in the code to be called on token match.

Is what I'm trying to do possible?  If so, could someone show me an example of how to call code on a token match.

Thank you.

--
Burton Samograd

________________________________
This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From atalay at udel.edu  Wed Jul 11 11:19:25 2012
From: atalay at udel.edu (Murat Atalay)
Date: Wed, 11 Jul 2012 11:19:25 -0700
Subject: [antlr-interest] help with CPP generated files
Message-ID: <CAFBENeFVzz=6n4BA==+83ZrD4mDfi70keZ_hu=n1XmAN=LOZAw@mail.gmail.com>

Hi Everyone,

I am generating C files with ANTLRworks, but I have some CPP code inside my
grammar. After I generate my C output. I go back and change the .c files to
.cpp files and I have to go to header files and comment out "extern "C" {
..}" in order my CPP files to compile.

I am using visual studio 2010 express and I added the grammar files to
command line. So, it pre-builds it for me. But I have a problem with that
extern "C". I was wondering if I can add something to command line to get
rid of that or is there another options that I can do to comment it out.

Thanks,
Murat

From parrt at cs.usfca.edu  Wed Jul 11 13:04:46 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2012 13:04:46 -0700
Subject: [antlr-interest] pull requests at github
Message-ID: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>

Howdy,

people are now submitting nice pull request to the ANTLR project software, but I have to keep the license clean. That's why I used to accept things through the feedback page:

http://www.antlr.org/misc/feedback

or with the contributors license agreement. I submitted a feature request to github to add such a license granting clause to the pull requests. they like the idea, but I haven't heard back about implementation.

What if we set up a webpage similar to the feedback page (current text enclosed at the bottom) with a text box where people can submit a URL to a pull request, certifying the origin of the material in that pull request.  The name/username/email etc. would have to match?very messy.

As a result of the certificate of origin, I could automatically post a comment to the pull request so that it somehow links the certificate.

Does anybody have any process or legal advice?

Ter

Submission certification of origin and rights

By hitting the submit button, you are warranting and representing that you have the right to release this code or other content free of any obligations to third parties and are granting Terence Parr and ANTLR project contributors, henceforth referred to as The ANTLR Project, a license to incorporate it into The ANTLR Project tools (such as ANTLRWorks and StringTemplate) or related works under the BSD license. (For large new code submissions or major new functionality, The ANTLR Project will ask you to become an official ANTLR project contributor). You understand that The ANTLR Project may or may not incorporate your submission and you warrant and represent the following:
I created this submission. I am the author of all contributed work submitted and further warrant and represent that such work is my original creation and I have the right to license it to The ANTLR Project for release under the BSD license. I hereby grant The ANTLR Project a nonexclusive, irrevocable, royalty-free, worldwide license to reproduce, distribute, prepare derivative works, and otherwise use this contribution as part of the ANTLR project, associated documentation, books, and tools at no cost to The ANTLR Project.
I have the right to submit. This submission does not violate the rights of any person or entity and that I have legal authority over this submission and to make this certification.
If I violate another's rights, liability lies with me. I agree to defend, indemnify, and hold The ANTLR Project and ANTLR users harmless from any claim or demand, including reasonable attorney fees, made by any third party due to or arising out of my violation of these terms and conditions or my violation of the rights of another person or entity.
I have read this and do so certify

From sam at tunnelvisionlabs.com  Wed Jul 11 13:13:00 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 11 Jul 2012 15:13:00 -0500
Subject: [antlr-interest] pull requests at github
In-Reply-To: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
Message-ID: <007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>

Generally, you'd have someone send you a signed consent form, separate from
the pull request itself, that covers "pull requests sent to the ANTLR
project from account ____" owned by that person. If you get a pull request
from someone who doesn't already have that agreement in place, send them a
message that you need the consent form before being able to consider the
request.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Terence Parr [mailto:parrt at cs.usfca.edu] 
Sent: Wednesday, July 11, 2012 3:05 PM
To: ANTLR interest
Subject: [antlr-interest] pull requests at github

Howdy,

people are now submitting nice pull request to the ANTLR project software,
but I have to keep the license clean. That's why I used to accept things
through the feedback page:

http://www.antlr.org/misc/feedback

or with the contributors license agreement. I submitted a feature request to
github to add such a license granting clause to the pull requests. they like
the idea, but I haven't heard back about implementation.

What if we set up a webpage similar to the feedback page (current text
enclosed at the bottom) with a text box where people can submit a URL to a
pull request, certifying the origin of the material in that pull request.
The name/username/email etc. would have to match.very messy.

As a result of the certificate of origin, I could automatically post a
comment to the pull request so that it somehow links the certificate.

Does anybody have any process or legal advice?

Ter

Submission certification of origin and rights

By hitting the submit button, you are warranting and representing that you
have the right to release this code or other content free of any obligations
to third parties and are granting Terence Parr and ANTLR project
contributors, henceforth referred to as The ANTLR Project, a license to
incorporate it into The ANTLR Project tools (such as ANTLRWorks and
StringTemplate) or related works under the BSD license. (For large new code
submissions or major new functionality, The ANTLR Project will ask you to
become an official ANTLR project contributor). You understand that The ANTLR
Project may or may not incorporate your submission and you warrant and
represent the following:
I created this submission. I am the author of all contributed work submitted
and further warrant and represent that such work is my original creation and
I have the right to license it to The ANTLR Project for release under the
BSD license. I hereby grant The ANTLR Project a nonexclusive, irrevocable,
royalty-free, worldwide license to reproduce, distribute, prepare derivative
works, and otherwise use this contribution as part of the ANTLR project,
associated documentation, books, and tools at no cost to The ANTLR Project.
I have the right to submit. This submission does not violate the rights of
any person or entity and that I have legal authority over this submission
and to make this certification.
If I violate another's rights, liability lies with me. I agree to defend,
indemnify, and hold The ANTLR Project and ANTLR users harmless from any
claim or demand, including reasonable attorney fees, made by any third party
due to or arising out of my violation of these terms and conditions or my
violation of the rights of another person or entity.
I have read this and do so certify

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From parrt at cs.usfca.edu  Wed Jul 11 13:24:57 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2012 13:24:57 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
Message-ID: <289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>

Usually, these pull requests are one offs so a click wrap license would be ideal. Those that continue to contribute,  could sign the full meal deal.

Hmm?yeah, maybe you're right. we need a page that covers all pull requests from a particular account. 

it would be nice to have a link or text in each committed pull request to show the certificate of origin. Any ideas there?

Ter
On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:

> Generally, you'd have someone send you a signed consent form, separate from
> the pull request itself, that covers "pull requests sent to the ANTLR
> project from account ____" owned by that person. If you get a pull request
> from someone who doesn't already have that agreement in place, send them a
> message that you need the consent form before being able to consider the
> request.
> 
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> -----Original Message-----
> From: Terence Parr [mailto:parrt at cs.usfca.edu] 
> Sent: Wednesday, July 11, 2012 3:05 PM
> To: ANTLR interest
> Subject: [antlr-interest] pull requests at github
> 
> Howdy,
> 
> people are now submitting nice pull request to the ANTLR project software,
> but I have to keep the license clean. That's why I used to accept things
> through the feedback page:
> 
> http://www.antlr.org/misc/feedback
> 
> or with the contributors license agreement. I submitted a feature request to
> github to add such a license granting clause to the pull requests. they like
> the idea, but I haven't heard back about implementation.
> 
> What if we set up a webpage similar to the feedback page (current text
> enclosed at the bottom) with a text box where people can submit a URL to a
> pull request, certifying the origin of the material in that pull request.
> The name/username/email etc. would have to match.very messy.
> 
> As a result of the certificate of origin, I could automatically post a
> comment to the pull request so that it somehow links the certificate.
> 
> Does anybody have any process or legal advice?
> 
> Ter
> 
> Submission certification of origin and rights
> 
> By hitting the submit button, you are warranting and representing that you
> have the right to release this code or other content free of any obligations
> to third parties and are granting Terence Parr and ANTLR project
> contributors, henceforth referred to as The ANTLR Project, a license to
> incorporate it into The ANTLR Project tools (such as ANTLRWorks and
> StringTemplate) or related works under the BSD license. (For large new code
> submissions or major new functionality, The ANTLR Project will ask you to
> become an official ANTLR project contributor). You understand that The ANTLR
> Project may or may not incorporate your submission and you warrant and
> represent the following:
> I created this submission. I am the author of all contributed work submitted
> and further warrant and represent that such work is my original creation and
> I have the right to license it to The ANTLR Project for release under the
> BSD license. I hereby grant The ANTLR Project a nonexclusive, irrevocable,
> royalty-free, worldwide license to reproduce, distribute, prepare derivative
> works, and otherwise use this contribution as part of the ANTLR project,
> associated documentation, books, and tools at no cost to The ANTLR Project.
> I have the right to submit. This submission does not violate the rights of
> any person or entity and that I have legal authority over this submission
> and to make this certification.
> If I violate another's rights, liability lies with me. I agree to defend,
> indemnify, and hold The ANTLR Project and ANTLR users harmless from any
> claim or demand, including reasonable attorney fees, made by any third party
> due to or arising out of my violation of these terms and conditions or my
> violation of the rights of another person or entity.
> I have read this and do so certify
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From jimi at temporal-wave.com  Wed Jul 11 13:56:51 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 11 Jul 2012 13:56:51 -0700
Subject: [antlr-interest] help with CPP generated files
In-Reply-To: <CAFBENeFVzz=6n4BA==+83ZrD4mDfi70keZ_hu=n1XmAN=LOZAw@mail.gmail.com>
References: <CAFBENeFVzz=6n4BA==+83ZrD4mDfi70keZ_hu=n1XmAN=LOZAw@mail.gmail.com>
Message-ID: <5a55a14a6fdb93d41af3ba3798403652@mail.gmail.com>

It's explained in the API documentation, including why you don't need to
change .c to .cpp (there is a flag to the compiler to treat the file as
C++).

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Murat Atalay
> Sent: Wednesday, July 11, 2012 11:19 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] help with CPP generated files
>
> Hi Everyone,
>
> I am generating C files with ANTLRworks, but I have some CPP code
> inside my grammar. After I generate my C output. I go back and change
> the .c files to .cpp files and I have to go to header files and comment
> out "extern "C" { ..}" in order my CPP files to compile.
>
> I am using visual studio 2010 express and I added the grammar files to
> command line. So, it pre-builds it for me. But I have a problem with
> that extern "C". I was wondering if I can add something to command line
> to get rid of that or is there another options that I can do to comment
> it out.
>
> Thanks,
> Murat
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kferrio at gmail.com  Wed Jul 11 14:20:27 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Wed, 11 Jul 2012 14:20:27 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
	<289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
Message-ID: <CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>

It would be nice to have a permanent, easily auditable yet unobtrusive
record of contributor testimony.  There is such a mechanism: the commit
log.  It would be easy for any GitHub user to include a link to the contrib
agreement in a commit message on his branch before calling for a pull.
Ideally this would be done with a standardized meta-tag to make it easy for
the person (or machine) accepting the pull request.

I agree that it would be great if GitHub would add this to the pull request
itself.

Kyle
On Jul 11, 2012 1:25 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

> Usually, these pull requests are one offs so a click wrap license would be
> ideal. Those that continue to contribute,  could sign the full meal deal.
>
> Hmm?yeah, maybe you're right. we need a page that covers all pull requests
> from a particular account.
>
> it would be nice to have a link or text in each committed pull request to
> show the certificate of origin. Any ideas there?
>
> Ter
> On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:
>
> > Generally, you'd have someone send you a signed consent form, separate
> from
> > the pull request itself, that covers "pull requests sent to the ANTLR
> > project from account ____" owned by that person. If you get a pull
> request
> > from someone who doesn't already have that agreement in place, send them
> a
> > message that you need the consent form before being able to consider the
> > request.
> >
> > --
> > Sam Harwell
> > Owner, Lead Developer
> > http://tunnelvisionlabs.com
> >
> > -----Original Message-----
> > From: Terence Parr [mailto:parrt at cs.usfca.edu]
> > Sent: Wednesday, July 11, 2012 3:05 PM
> > To: ANTLR interest
> > Subject: [antlr-interest] pull requests at github
> >
> > Howdy,
> >
> > people are now submitting nice pull request to the ANTLR project
> software,
> > but I have to keep the license clean. That's why I used to accept things
> > through the feedback page:
> >
> > http://www.antlr.org/misc/feedback
> >
> > or with the contributors license agreement. I submitted a feature
> request to
> > github to add such a license granting clause to the pull requests. they
> like
> > the idea, but I haven't heard back about implementation.
> >
> > What if we set up a webpage similar to the feedback page (current text
> > enclosed at the bottom) with a text box where people can submit a URL to
> a
> > pull request, certifying the origin of the material in that pull request.
> > The name/username/email etc. would have to match.very messy.
> >
> > As a result of the certificate of origin, I could automatically post a
> > comment to the pull request so that it somehow links the certificate.
> >
> > Does anybody have any process or legal advice?
> >
> > Ter
> >
> > Submission certification of origin and rights
> >
> > By hitting the submit button, you are warranting and representing that
> you
> > have the right to release this code or other content free of any
> obligations
> > to third parties and are granting Terence Parr and ANTLR project
> > contributors, henceforth referred to as The ANTLR Project, a license to
> > incorporate it into The ANTLR Project tools (such as ANTLRWorks and
> > StringTemplate) or related works under the BSD license. (For large new
> code
> > submissions or major new functionality, The ANTLR Project will ask you to
> > become an official ANTLR project contributor). You understand that The
> ANTLR
> > Project may or may not incorporate your submission and you warrant and
> > represent the following:
> > I created this submission. I am the author of all contributed work
> submitted
> > and further warrant and represent that such work is my original creation
> and
> > I have the right to license it to The ANTLR Project for release under the
> > BSD license. I hereby grant The ANTLR Project a nonexclusive,
> irrevocable,
> > royalty-free, worldwide license to reproduce, distribute, prepare
> derivative
> > works, and otherwise use this contribution as part of the ANTLR project,
> > associated documentation, books, and tools at no cost to The ANTLR
> Project.
> > I have the right to submit. This submission does not violate the rights
> of
> > any person or entity and that I have legal authority over this submission
> > and to make this certification.
> > If I violate another's rights, liability lies with me. I agree to defend,
> > indemnify, and hold The ANTLR Project and ANTLR users harmless from any
> > claim or demand, including reasonable attorney fees, made by any third
> party
> > due to or arising out of my violation of these terms and conditions or my
> > violation of the rights of another person or entity.
> > I have read this and do so certify
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From parrt at cs.usfca.edu  Wed Jul 11 15:25:26 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2012 15:25:26 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
	<289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
	<CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>
Message-ID: <503133EF-9BA5-4C3C-B3AD-9D2CDC0471B7@cs.usfca.edu>

Hi Kyle,

interesting. so, in the commit message, they would have a link or something to a certificate of origin.  Maybe once they've made the commit, they can go to the ANTLR site and submit the commit hash to a website where they can click "I give the rights etc." which gives them another SHA1 hash or something that combines their user information with the commit hash. They can then add this to their commit message or perhaps simply in the pull request instead of the commit.

Maybe I should just create a hash for each new contributor, that sort of like their current generator ID. Then, they can simply include this in their pull request and I can check against my ID list.

Ter

On Jul 11, 2012, at 2:20 PM, Kyle Ferrio wrote:

> It would be nice to have a permanent, easily auditable yet unobtrusive
> record of contributor testimony.  There is such a mechanism: the commit
> log.  It would be easy for any GitHub user to include a link to the contrib
> agreement in a commit message on his branch before calling for a pull.
> Ideally this would be done with a standardized meta-tag to make it easy for
> the person (or machine) accepting the pull request.
> 
> I agree that it would be great if GitHub would add this to the pull request
> itself.
> 
> Kyle
> On Jul 11, 2012 1:25 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> 
>> Usually, these pull requests are one offs so a click wrap license would be
>> ideal. Those that continue to contribute,  could sign the full meal deal.
>> 
>> Hmm?yeah, maybe you're right. we need a page that covers all pull requests
>> from a particular account.
>> 
>> it would be nice to have a link or text in each committed pull request to
>> show the certificate of origin. Any ideas there?
>> 
>> Ter
>> On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:
>> 
>>> Generally, you'd have someone send you a signed consent form, separate
>> from
>>> the pull request itself, that covers "pull requests sent to the ANTLR
>>> project from account ____" owned by that person. If you get a pull
>> request
>>> from someone who doesn't already have that agreement in place, send them
>> a
>>> message that you need the consent form before being able to consider the
>>> request.
>>> 
>>> --
>>> Sam Harwell
>>> Owner, Lead Developer
>>> http://tunnelvisionlabs.com
>>> 
>>> -----Original Message-----
>>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
>>> Sent: Wednesday, July 11, 2012 3:05 PM
>>> To: ANTLR interest
>>> Subject: [antlr-interest] pull requests at github
>>> 
>>> Howdy,
>>> 
>>> people are now submitting nice pull request to the ANTLR project
>> software,
>>> but I have to keep the license clean. That's why I used to accept things
>>> through the feedback page:
>>> 
>>> http://www.antlr.org/misc/feedback
>>> 
>>> or with the contributors license agreement. I submitted a feature
>> request to
>>> github to add such a license granting clause to the pull requests. they
>> like
>>> the idea, but I haven't heard back about implementation.
>>> 
>>> What if we set up a webpage similar to the feedback page (current text
>>> enclosed at the bottom) with a text box where people can submit a URL to
>> a
>>> pull request, certifying the origin of the material in that pull request.
>>> The name/username/email etc. would have to match.very messy.
>>> 
>>> As a result of the certificate of origin, I could automatically post a
>>> comment to the pull request so that it somehow links the certificate.
>>> 
>>> Does anybody have any process or legal advice?
>>> 
>>> Ter
>>> 
>>> Submission certification of origin and rights
>>> 
>>> By hitting the submit button, you are warranting and representing that
>> you
>>> have the right to release this code or other content free of any
>> obligations
>>> to third parties and are granting Terence Parr and ANTLR project
>>> contributors, henceforth referred to as The ANTLR Project, a license to
>>> incorporate it into The ANTLR Project tools (such as ANTLRWorks and
>>> StringTemplate) or related works under the BSD license. (For large new
>> code
>>> submissions or major new functionality, The ANTLR Project will ask you to
>>> become an official ANTLR project contributor). You understand that The
>> ANTLR
>>> Project may or may not incorporate your submission and you warrant and
>>> represent the following:
>>> I created this submission. I am the author of all contributed work
>> submitted
>>> and further warrant and represent that such work is my original creation
>> and
>>> I have the right to license it to The ANTLR Project for release under the
>>> BSD license. I hereby grant The ANTLR Project a nonexclusive,
>> irrevocable,
>>> royalty-free, worldwide license to reproduce, distribute, prepare
>> derivative
>>> works, and otherwise use this contribution as part of the ANTLR project,
>>> associated documentation, books, and tools at no cost to The ANTLR
>> Project.
>>> I have the right to submit. This submission does not violate the rights
>> of
>>> any person or entity and that I have legal authority over this submission
>>> and to make this certification.
>>> If I violate another's rights, liability lies with me. I agree to defend,
>>> indemnify, and hold The ANTLR Project and ANTLR users harmless from any
>>> claim or demand, including reasonable attorney fees, made by any third
>> party
>>> due to or arising out of my violation of these terms and conditions or my
>>> violation of the rights of another person or entity.
>>> I have read this and do so certify
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kirby.bohling at gmail.com  Wed Jul 11 15:30:46 2012
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Wed, 11 Jul 2012 17:30:46 -0500
Subject: [antlr-interest] pull requests at github
In-Reply-To: <503133EF-9BA5-4C3C-B3AD-9D2CDC0471B7@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
	<289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
	<CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>
	<503133EF-9BA5-4C3C-B3AD-9D2CDC0471B7@cs.usfca.edu>
Message-ID: <CA+bn5rzjAZxA6QU5mD0NcL9_VtAjwS=cNxf+g27YrRjHmB=anQ@mail.gmail.com>

I'm not sure if this workflow will work for you.  As I understand it, git
includes the "--signoff" feature.  I'm not sure I understand all the
details, but I know it is essentially to help facilitate that everything
was done in good faith, and there is a provenance review of all code going
into the Linux kernel.  It might be worth investigating if that can be used
as a template for implementation, or piggy backed upon directly.

http://stackoverflow.com/questions/1962094/what-is-the-sign-off-feature-in-git-for

Kirby




On Wed, Jul 11, 2012 at 5:25 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi Kyle,
>
> interesting. so, in the commit message, they would have a link or
> something to a certificate of origin.  Maybe once they've made the commit,
> they can go to the ANTLR site and submit the commit hash to a website where
> they can click "I give the rights etc." which gives them another SHA1 hash
> or something that combines their user information with the commit hash.
> They can then add this to their commit message or perhaps simply in the
> pull request instead of the commit.
>
> Maybe I should just create a hash for each new contributor, that sort of
> like their current generator ID. Then, they can simply include this in
> their pull request and I can check against my ID list.
>
> Ter
>
> On Jul 11, 2012, at 2:20 PM, Kyle Ferrio wrote:
>
> > It would be nice to have a permanent, easily auditable yet unobtrusive
> > record of contributor testimony.  There is such a mechanism: the commit
> > log.  It would be easy for any GitHub user to include a link to the
> contrib
> > agreement in a commit message on his branch before calling for a pull.
> > Ideally this would be done with a standardized meta-tag to make it easy
> for
> > the person (or machine) accepting the pull request.
> >
> > I agree that it would be great if GitHub would add this to the pull
> request
> > itself.
> >
> > Kyle
> > On Jul 11, 2012 1:25 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> >
> >> Usually, these pull requests are one offs so a click wrap license would
> be
> >> ideal. Those that continue to contribute,  could sign the full meal
> deal.
> >>
> >> Hmm?yeah, maybe you're right. we need a page that covers all pull
> requests
> >> from a particular account.
> >>
> >> it would be nice to have a link or text in each committed pull request
> to
> >> show the certificate of origin. Any ideas there?
> >>
> >> Ter
> >> On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:
> >>
> >>> Generally, you'd have someone send you a signed consent form, separate
> >> from
> >>> the pull request itself, that covers "pull requests sent to the ANTLR
> >>> project from account ____" owned by that person. If you get a pull
> >> request
> >>> from someone who doesn't already have that agreement in place, send
> them
> >> a
> >>> message that you need the consent form before being able to consider
> the
> >>> request.
> >>>
> >>> --
> >>> Sam Harwell
> >>> Owner, Lead Developer
> >>> http://tunnelvisionlabs.com
> >>>
> >>> -----Original Message-----
> >>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
> >>> Sent: Wednesday, July 11, 2012 3:05 PM
> >>> To: ANTLR interest
> >>> Subject: [antlr-interest] pull requests at github
> >>>
> >>> Howdy,
> >>>
> >>> people are now submitting nice pull request to the ANTLR project
> >> software,
> >>> but I have to keep the license clean. That's why I used to accept
> things
> >>> through the feedback page:
> >>>
> >>> http://www.antlr.org/misc/feedback
> >>>
> >>> or with the contributors license agreement. I submitted a feature
> >> request to
> >>> github to add such a license granting clause to the pull requests. they
> >> like
> >>> the idea, but I haven't heard back about implementation.
> >>>
> >>> What if we set up a webpage similar to the feedback page (current text
> >>> enclosed at the bottom) with a text box where people can submit a URL
> to
> >> a
> >>> pull request, certifying the origin of the material in that pull
> request.
> >>> The name/username/email etc. would have to match.very messy.
> >>>
> >>> As a result of the certificate of origin, I could automatically post a
> >>> comment to the pull request so that it somehow links the certificate.
> >>>
> >>> Does anybody have any process or legal advice?
> >>>
> >>> Ter
> >>>
> >>> Submission certification of origin and rights
> >>>
> >>> By hitting the submit button, you are warranting and representing that
> >> you
> >>> have the right to release this code or other content free of any
> >> obligations
> >>> to third parties and are granting Terence Parr and ANTLR project
> >>> contributors, henceforth referred to as The ANTLR Project, a license to
> >>> incorporate it into The ANTLR Project tools (such as ANTLRWorks and
> >>> StringTemplate) or related works under the BSD license. (For large new
> >> code
> >>> submissions or major new functionality, The ANTLR Project will ask you
> to
> >>> become an official ANTLR project contributor). You understand that The
> >> ANTLR
> >>> Project may or may not incorporate your submission and you warrant and
> >>> represent the following:
> >>> I created this submission. I am the author of all contributed work
> >> submitted
> >>> and further warrant and represent that such work is my original
> creation
> >> and
> >>> I have the right to license it to The ANTLR Project for release under
> the
> >>> BSD license. I hereby grant The ANTLR Project a nonexclusive,
> >> irrevocable,
> >>> royalty-free, worldwide license to reproduce, distribute, prepare
> >> derivative
> >>> works, and otherwise use this contribution as part of the ANTLR
> project,
> >>> associated documentation, books, and tools at no cost to The ANTLR
> >> Project.
> >>> I have the right to submit. This submission does not violate the rights
> >> of
> >>> any person or entity and that I have legal authority over this
> submission
> >>> and to make this certification.
> >>> If I violate another's rights, liability lies with me. I agree to
> defend,
> >>> indemnify, and hold The ANTLR Project and ANTLR users harmless from any
> >>> claim or demand, including reasonable attorney fees, made by any third
> >> party
> >>> due to or arising out of my violation of these terms and conditions or
> my
> >>> violation of the rights of another person or entity.
> >>> I have read this and do so certify
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From kferrio at gmail.com  Wed Jul 11 15:48:58 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Wed, 11 Jul 2012 15:48:58 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CA+bn5rzjAZxA6QU5mD0NcL9_VtAjwS=cNxf+g27YrRjHmB=anQ@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
	<289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
	<CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>
	<503133EF-9BA5-4C3C-B3AD-9D2CDC0471B7@cs.usfca.edu>
	<CA+bn5rzjAZxA6QU5mD0NcL9_VtAjwS=cNxf+g27YrRjHmB=anQ@mail.gmail.com>
Message-ID: <CAAfeETrUFr7ftW7nOVvOvVqx6ei8mZMOjbNikgSxBYx6Qkhv+w@mail.gmail.com>

Ter & Kirby,

I like simple [1], and when simple is not-so-simple I like to shift the
burden off people like me because I know how attentive I am to bookkeeping
when I'm in the flow.

As I understand git's signoff feature [2], it applies a non-repudiatable
stamp.  That's a good feature and speaks to Ter's "contributor hashcode"
concept.  So if the signoff also  -- and this is key -- includes or
encapsulates (e.g. with a message digest) teh agreement or the
version-number of the agreement [3] then I think we're golden.

[1] hat-tip to Oliver aka Dr. Simple.
[2] which is to say, not at all.
[3] It would be a mistake to assume the agreement will never evolve.

Kyle


On Wed, Jul 11, 2012 at 3:30 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> I'm not sure if this workflow will work for you.  As I understand it, git
> includes the "--signoff" feature.  I'm not sure I understand all the
> details, but I know it is essentially to help facilitate that everything
> was done in good faith, and there is a provenance review of all code going
> into the Linux kernel.  It might be worth investigating if that can be used
> as a template for implementation, or piggy backed upon directly.
>
>
> http://stackoverflow.com/questions/1962094/what-is-the-sign-off-feature-in-git-for
>
> Kirby
>
>
>
>
> On Wed, Jul 11, 2012 at 5:25 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> Hi Kyle,
>>
>> interesting. so, in the commit message, they would have a link or
>> something to a certificate of origin.  Maybe once they've made the commit,
>> they can go to the ANTLR site and submit the commit hash to a website where
>> they can click "I give the rights etc." which gives them another SHA1 hash
>> or something that combines their user information with the commit hash.
>> They can then add this to their commit message or perhaps simply in the
>> pull request instead of the commit.
>>
>> Maybe I should just create a hash for each new contributor, that sort of
>> like their current generator ID. Then, they can simply include this in
>> their pull request and I can check against my ID list.
>>
>> Ter
>>
>> On Jul 11, 2012, at 2:20 PM, Kyle Ferrio wrote:
>>
>> > It would be nice to have a permanent, easily auditable yet unobtrusive
>> > record of contributor testimony.  There is such a mechanism: the commit
>> > log.  It would be easy for any GitHub user to include a link to the
>> contrib
>> > agreement in a commit message on his branch before calling for a pull.
>> > Ideally this would be done with a standardized meta-tag to make it easy
>> for
>> > the person (or machine) accepting the pull request.
>> >
>> > I agree that it would be great if GitHub would add this to the pull
>> request
>> > itself.
>> >
>> > Kyle
>> > On Jul 11, 2012 1:25 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
>> >
>> >> Usually, these pull requests are one offs so a click wrap license
>> would be
>> >> ideal. Those that continue to contribute,  could sign the full meal
>> deal.
>> >>
>> >> Hmm?yeah, maybe you're right. we need a page that covers all pull
>> requests
>> >> from a particular account.
>> >>
>> >> it would be nice to have a link or text in each committed pull request
>> to
>> >> show the certificate of origin. Any ideas there?
>> >>
>> >> Ter
>> >> On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:
>> >>
>> >>> Generally, you'd have someone send you a signed consent form, separate
>> >> from
>> >>> the pull request itself, that covers "pull requests sent to the ANTLR
>> >>> project from account ____" owned by that person. If you get a pull
>> >> request
>> >>> from someone who doesn't already have that agreement in place, send
>> them
>> >> a
>> >>> message that you need the consent form before being able to consider
>> the
>> >>> request.
>> >>>
>> >>> --
>> >>> Sam Harwell
>> >>> Owner, Lead Developer
>> >>> http://tunnelvisionlabs.com
>> >>>
>> >>> -----Original Message-----
>> >>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
>> >>> Sent: Wednesday, July 11, 2012 3:05 PM
>> >>> To: ANTLR interest
>> >>> Subject: [antlr-interest] pull requests at github
>> >>>
>> >>> Howdy,
>> >>>
>> >>> people are now submitting nice pull request to the ANTLR project
>> >> software,
>> >>> but I have to keep the license clean. That's why I used to accept
>> things
>> >>> through the feedback page:
>> >>>
>> >>> http://www.antlr.org/misc/feedback
>> >>>
>> >>> or with the contributors license agreement. I submitted a feature
>> >> request to
>> >>> github to add such a license granting clause to the pull requests.
>> they
>> >> like
>> >>> the idea, but I haven't heard back about implementation.
>> >>>
>> >>> What if we set up a webpage similar to the feedback page (current text
>> >>> enclosed at the bottom) with a text box where people can submit a URL
>> to
>> >> a
>> >>> pull request, certifying the origin of the material in that pull
>> request.
>> >>> The name/username/email etc. would have to match.very messy.
>> >>>
>> >>> As a result of the certificate of origin, I could automatically post a
>> >>> comment to the pull request so that it somehow links the certificate.
>> >>>
>> >>> Does anybody have any process or legal advice?
>> >>>
>> >>> Ter
>> >>>
>> >>> Submission certification of origin and rights
>> >>>
>> >>> By hitting the submit button, you are warranting and representing that
>> >> you
>> >>> have the right to release this code or other content free of any
>> >> obligations
>> >>> to third parties and are granting Terence Parr and ANTLR project
>> >>> contributors, henceforth referred to as The ANTLR Project, a license
>> to
>> >>> incorporate it into The ANTLR Project tools (such as ANTLRWorks and
>> >>> StringTemplate) or related works under the BSD license. (For large new
>> >> code
>> >>> submissions or major new functionality, The ANTLR Project will ask
>> you to
>> >>> become an official ANTLR project contributor). You understand that The
>> >> ANTLR
>> >>> Project may or may not incorporate your submission and you warrant and
>> >>> represent the following:
>> >>> I created this submission. I am the author of all contributed work
>> >> submitted
>> >>> and further warrant and represent that such work is my original
>> creation
>> >> and
>> >>> I have the right to license it to The ANTLR Project for release under
>> the
>> >>> BSD license. I hereby grant The ANTLR Project a nonexclusive,
>> >> irrevocable,
>> >>> royalty-free, worldwide license to reproduce, distribute, prepare
>> >> derivative
>> >>> works, and otherwise use this contribution as part of the ANTLR
>> project,
>> >>> associated documentation, books, and tools at no cost to The ANTLR
>> >> Project.
>> >>> I have the right to submit. This submission does not violate the
>> rights
>> >> of
>> >>> any person or entity and that I have legal authority over this
>> submission
>> >>> and to make this certification.
>> >>> If I violate another's rights, liability lies with me. I agree to
>> defend,
>> >>> indemnify, and hold The ANTLR Project and ANTLR users harmless from
>> any
>> >>> claim or demand, including reasonable attorney fees, made by any third
>> >> party
>> >>> due to or arising out of my violation of these terms and conditions
>> or my
>> >>> violation of the rights of another person or entity.
>> >>> I have read this and do so certify
>> >>>
>> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >>> Unsubscribe:
>> >>>
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>>
>> >>
>> >>
>> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >> Unsubscribe:
>> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From parrt at cs.usfca.edu  Wed Jul 11 16:00:49 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 11 Jul 2012 16:00:49 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAAfeETrUFr7ftW7nOVvOvVqx6ei8mZMOjbNikgSxBYx6Qkhv+w@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
	<289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
	<CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>
	<503133EF-9BA5-4C3C-B3AD-9D2CDC0471B7@cs.usfca.edu>
	<CA+bn5rzjAZxA6QU5mD0NcL9_VtAjwS=cNxf+g27YrRjHmB=anQ@mail.gmail.com>
	<CAAfeETrUFr7ftW7nOVvOvVqx6ei8mZMOjbNikgSxBYx6Qkhv+w@mail.gmail.com>
Message-ID: <A437CC7A-638A-4844-BDC0-CDAB4CF5E89A@cs.usfca.edu>

So it looks like the intentions of the sign off line

Signed-off-by: Random J Developer <random at developer.example.org>

would go into the commit message so that it stays in the repository, as opposed to the pull request, right?

apparently then there is an assumption that random J developer agrees with the developer's certificate of origin, but I don't like that from a legal point of view. I prefer something like

Developer-certificate-of-origin: [link to contributors license]
Signed-off-by: Random J Developer <random at developer.example.org>

that way, there is no doubt that the signatory understood what they are swearing to.

Ter
On Jul 11, 2012, at 3:48 PM, Kyle Ferrio wrote:

> Ter & Kirby,
> 
> I like simple [1], and when simple is not-so-simple I like to shift the
> burden off people like me because I know how attentive I am to bookkeeping
> when I'm in the flow.
> 
> As I understand git's signoff feature [2], it applies a non-repudiatable
> stamp.  That's a good feature and speaks to Ter's "contributor hashcode"
> concept.  So if the signoff also  -- and this is key -- includes or
> encapsulates (e.g. with a message digest) teh agreement or the
> version-number of the agreement [3] then I think we're golden.
> 
> [1] hat-tip to Oliver aka Dr. Simple.
> [2] which is to say, not at all.
> [3] It would be a mistake to assume the agreement will never evolve.
> 
> Kyle
> 
> 
> On Wed, Jul 11, 2012 at 3:30 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:
> 
>> I'm not sure if this workflow will work for you.  As I understand it, git
>> includes the "--signoff" feature.  I'm not sure I understand all the
>> details, but I know it is essentially to help facilitate that everything
>> was done in good faith, and there is a provenance review of all code going
>> into the Linux kernel.  It might be worth investigating if that can be used
>> as a template for implementation, or piggy backed upon directly.
>> 
>> 
>> http://stackoverflow.com/questions/1962094/what-is-the-sign-off-feature-in-git-for
>> 
>> Kirby
>> 
>> 
>> 
>> 
>> On Wed, Jul 11, 2012 at 5:25 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> 
>>> Hi Kyle,
>>> 
>>> interesting. so, in the commit message, they would have a link or
>>> something to a certificate of origin.  Maybe once they've made the commit,
>>> they can go to the ANTLR site and submit the commit hash to a website where
>>> they can click "I give the rights etc." which gives them another SHA1 hash
>>> or something that combines their user information with the commit hash.
>>> They can then add this to their commit message or perhaps simply in the
>>> pull request instead of the commit.
>>> 
>>> Maybe I should just create a hash for each new contributor, that sort of
>>> like their current generator ID. Then, they can simply include this in
>>> their pull request and I can check against my ID list.
>>> 
>>> Ter
>>> 
>>> On Jul 11, 2012, at 2:20 PM, Kyle Ferrio wrote:
>>> 
>>>> It would be nice to have a permanent, easily auditable yet unobtrusive
>>>> record of contributor testimony.  There is such a mechanism: the commit
>>>> log.  It would be easy for any GitHub user to include a link to the
>>> contrib
>>>> agreement in a commit message on his branch before calling for a pull.
>>>> Ideally this would be done with a standardized meta-tag to make it easy
>>> for
>>>> the person (or machine) accepting the pull request.
>>>> 
>>>> I agree that it would be great if GitHub would add this to the pull
>>> request
>>>> itself.
>>>> 
>>>> Kyle
>>>> On Jul 11, 2012 1:25 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
>>>> 
>>>>> Usually, these pull requests are one offs so a click wrap license
>>> would be
>>>>> ideal. Those that continue to contribute,  could sign the full meal
>>> deal.
>>>>> 
>>>>> Hmm?yeah, maybe you're right. we need a page that covers all pull
>>> requests
>>>>> from a particular account.
>>>>> 
>>>>> it would be nice to have a link or text in each committed pull request
>>> to
>>>>> show the certificate of origin. Any ideas there?
>>>>> 
>>>>> Ter
>>>>> On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:
>>>>> 
>>>>>> Generally, you'd have someone send you a signed consent form, separate
>>>>> from
>>>>>> the pull request itself, that covers "pull requests sent to the ANTLR
>>>>>> project from account ____" owned by that person. If you get a pull
>>>>> request
>>>>>> from someone who doesn't already have that agreement in place, send
>>> them
>>>>> a
>>>>>> message that you need the consent form before being able to consider
>>> the
>>>>>> request.
>>>>>> 
>>>>>> --
>>>>>> Sam Harwell
>>>>>> Owner, Lead Developer
>>>>>> http://tunnelvisionlabs.com
>>>>>> 
>>>>>> -----Original Message-----
>>>>>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
>>>>>> Sent: Wednesday, July 11, 2012 3:05 PM
>>>>>> To: ANTLR interest
>>>>>> Subject: [antlr-interest] pull requests at github
>>>>>> 
>>>>>> Howdy,
>>>>>> 
>>>>>> people are now submitting nice pull request to the ANTLR project
>>>>> software,
>>>>>> but I have to keep the license clean. That's why I used to accept
>>> things
>>>>>> through the feedback page:
>>>>>> 
>>>>>> http://www.antlr.org/misc/feedback
>>>>>> 
>>>>>> or with the contributors license agreement. I submitted a feature
>>>>> request to
>>>>>> github to add such a license granting clause to the pull requests.
>>> they
>>>>> like
>>>>>> the idea, but I haven't heard back about implementation.
>>>>>> 
>>>>>> What if we set up a webpage similar to the feedback page (current text
>>>>>> enclosed at the bottom) with a text box where people can submit a URL
>>> to
>>>>> a
>>>>>> pull request, certifying the origin of the material in that pull
>>> request.
>>>>>> The name/username/email etc. would have to match.very messy.
>>>>>> 
>>>>>> As a result of the certificate of origin, I could automatically post a
>>>>>> comment to the pull request so that it somehow links the certificate.
>>>>>> 
>>>>>> Does anybody have any process or legal advice?
>>>>>> 
>>>>>> Ter
>>>>>> 
>>>>>> Submission certification of origin and rights
>>>>>> 
>>>>>> By hitting the submit button, you are warranting and representing that
>>>>> you
>>>>>> have the right to release this code or other content free of any
>>>>> obligations
>>>>>> to third parties and are granting Terence Parr and ANTLR project
>>>>>> contributors, henceforth referred to as The ANTLR Project, a license
>>> to
>>>>>> incorporate it into The ANTLR Project tools (such as ANTLRWorks and
>>>>>> StringTemplate) or related works under the BSD license. (For large new
>>>>> code
>>>>>> submissions or major new functionality, The ANTLR Project will ask
>>> you to
>>>>>> become an official ANTLR project contributor). You understand that The
>>>>> ANTLR
>>>>>> Project may or may not incorporate your submission and you warrant and
>>>>>> represent the following:
>>>>>> I created this submission. I am the author of all contributed work
>>>>> submitted
>>>>>> and further warrant and represent that such work is my original
>>> creation
>>>>> and
>>>>>> I have the right to license it to The ANTLR Project for release under
>>> the
>>>>>> BSD license. I hereby grant The ANTLR Project a nonexclusive,
>>>>> irrevocable,
>>>>>> royalty-free, worldwide license to reproduce, distribute, prepare
>>>>> derivative
>>>>>> works, and otherwise use this contribution as part of the ANTLR
>>> project,
>>>>>> associated documentation, books, and tools at no cost to The ANTLR
>>>>> Project.
>>>>>> I have the right to submit. This submission does not violate the
>>> rights
>>>>> of
>>>>>> any person or entity and that I have legal authority over this
>>> submission
>>>>>> and to make this certification.
>>>>>> If I violate another's rights, liability lies with me. I agree to
>>> defend,
>>>>>> indemnify, and hold The ANTLR Project and ANTLR users harmless from
>>> any
>>>>>> claim or demand, including reasonable attorney fees, made by any third
>>>>> party
>>>>>> due to or arising out of my violation of these terms and conditions
>>> or my
>>>>>> violation of the rights of another person or entity.
>>>>>> I have read this and do so certify
>>>>>> 
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe:
>>>>>> 
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>> 
>>>>> 
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>> 
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> 
>> 
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kferrio at gmail.com  Wed Jul 11 16:29:17 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Wed, 11 Jul 2012 16:29:17 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <A437CC7A-638A-4844-BDC0-CDAB4CF5E89A@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<007001cd5fa1$92caf3c0$b860db40$@tunnelvisionlabs.com>
	<289920DB-CE49-49D1-843F-851C0A65AD00@cs.usfca.edu>
	<CAAfeETrm0xSOW+xW0UztfYHOSkqCwJC_-Tn4YZVrV5RBSAknGg@mail.gmail.com>
	<503133EF-9BA5-4C3C-B3AD-9D2CDC0471B7@cs.usfca.edu>
	<CA+bn5rzjAZxA6QU5mD0NcL9_VtAjwS=cNxf+g27YrRjHmB=anQ@mail.gmail.com>
	<CAAfeETrUFr7ftW7nOVvOvVqx6ei8mZMOjbNikgSxBYx6Qkhv+w@mail.gmail.com>
	<A437CC7A-638A-4844-BDC0-CDAB4CF5E89A@cs.usfca.edu>
Message-ID: <CAAfeETpQNGR=-gHqtfqQ+eu9z7Fa3JeXaxRn_Zs0c7=K4+qQuQ@mail.gmail.com>

Right.  That's the caveat I tried to convey: somehow the signoff has to
"sum over" the certificate -- either verbatim or by reference to an
auditable artifact like a specific version of a cert under revision control.

One way to do this -- and there might be an easier way which is not so hard
as to discourage contributions -- would be to as you say assign each
potential contributor a GUID which could be, say SHA512 over the
concatenation of the contributor's email address and the text of the
current cert language.  GUID = SHA512( contributor_github_username  +
contrib_email + cert_latest).  This GUID need only be generated once by
each contributor whenever one of the three "factors" changes since their
last pull request.  Since both the email and github username of every
contributor are typically public, anyone with read-access to the revision
history of certificates could verify the authenticity.  Non-repudiation is
as good as github's ability to secure accounts; if github is compromised,
all bets are off anyway.

As I recall, you're having the ANTLR site revamped.  It should not be hard
to add a form which pulls the latest cert from github and computes the hash
for the user.  The same tool could be used by anyone to quickly
authenticate hashes.  All open, nothing up your sleeve.  I actually
implemented a slightly more sophisticated system in a webapp I created to
facilitate trusted data-exchange between certain of my clients.  Aw shucks,
I forgot to patent it.  :)

Kyle


Kyle

On Wed, Jul 11, 2012 at 4:00 PM, Terence Parr <parrt at cs.usfca.edu> wrote:

> So it looks like the intentions of the sign off line
>
> Signed-off-by: Random J Developer <random at developer.example.org>
>
> would go into the commit message so that it stays in the repository, as
> opposed to the pull request, right?
>
> apparently then there is an assumption that random J developer agrees with
> the developer's certificate of origin, but I don't like that from a legal
> point of view. I prefer something like
>
> Developer-certificate-of-origin: [link to contributors license]
> Signed-off-by: Random J Developer <random at developer.example.org>
>
> that way, there is no doubt that the signatory understood what they are
> swearing to.
>
> Ter
> On Jul 11, 2012, at 3:48 PM, Kyle Ferrio wrote:
>
> > Ter & Kirby,
> >
> > I like simple [1], and when simple is not-so-simple I like to shift the
> > burden off people like me because I know how attentive I am to
> bookkeeping
> > when I'm in the flow.
> >
> > As I understand git's signoff feature [2], it applies a non-repudiatable
> > stamp.  That's a good feature and speaks to Ter's "contributor hashcode"
> > concept.  So if the signoff also  -- and this is key -- includes or
> > encapsulates (e.g. with a message digest) teh agreement or the
> > version-number of the agreement [3] then I think we're golden.
> >
> > [1] hat-tip to Oliver aka Dr. Simple.
> > [2] which is to say, not at all.
> > [3] It would be a mistake to assume the agreement will never evolve.
> >
> > Kyle
> >
> >
> > On Wed, Jul 11, 2012 at 3:30 PM, Kirby Bohling <kirby.bohling at gmail.com
> >wrote:
> >
> >> I'm not sure if this workflow will work for you.  As I understand it,
> git
> >> includes the "--signoff" feature.  I'm not sure I understand all the
> >> details, but I know it is essentially to help facilitate that everything
> >> was done in good faith, and there is a provenance review of all code
> going
> >> into the Linux kernel.  It might be worth investigating if that can be
> used
> >> as a template for implementation, or piggy backed upon directly.
> >>
> >>
> >>
> http://stackoverflow.com/questions/1962094/what-is-the-sign-off-feature-in-git-for
> >>
> >> Kirby
> >>
> >>
> >>
> >>
> >> On Wed, Jul 11, 2012 at 5:25 PM, Terence Parr <parrt at cs.usfca.edu>
> wrote:
> >>
> >>> Hi Kyle,
> >>>
> >>> interesting. so, in the commit message, they would have a link or
> >>> something to a certificate of origin.  Maybe once they've made the
> commit,
> >>> they can go to the ANTLR site and submit the commit hash to a website
> where
> >>> they can click "I give the rights etc." which gives them another SHA1
> hash
> >>> or something that combines their user information with the commit hash.
> >>> They can then add this to their commit message or perhaps simply in the
> >>> pull request instead of the commit.
> >>>
> >>> Maybe I should just create a hash for each new contributor, that sort
> of
> >>> like their current generator ID. Then, they can simply include this in
> >>> their pull request and I can check against my ID list.
> >>>
> >>> Ter
> >>>
> >>> On Jul 11, 2012, at 2:20 PM, Kyle Ferrio wrote:
> >>>
> >>>> It would be nice to have a permanent, easily auditable yet unobtrusive
> >>>> record of contributor testimony.  There is such a mechanism: the
> commit
> >>>> log.  It would be easy for any GitHub user to include a link to the
> >>> contrib
> >>>> agreement in a commit message on his branch before calling for a pull.
> >>>> Ideally this would be done with a standardized meta-tag to make it
> easy
> >>> for
> >>>> the person (or machine) accepting the pull request.
> >>>>
> >>>> I agree that it would be great if GitHub would add this to the pull
> >>> request
> >>>> itself.
> >>>>
> >>>> Kyle
> >>>> On Jul 11, 2012 1:25 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:
> >>>>
> >>>>> Usually, these pull requests are one offs so a click wrap license
> >>> would be
> >>>>> ideal. Those that continue to contribute,  could sign the full meal
> >>> deal.
> >>>>>
> >>>>> Hmm?yeah, maybe you're right. we need a page that covers all pull
> >>> requests
> >>>>> from a particular account.
> >>>>>
> >>>>> it would be nice to have a link or text in each committed pull
> request
> >>> to
> >>>>> show the certificate of origin. Any ideas there?
> >>>>>
> >>>>> Ter
> >>>>> On Jul 11, 2012, at 1:13 PM, Sam Harwell wrote:
> >>>>>
> >>>>>> Generally, you'd have someone send you a signed consent form,
> separate
> >>>>> from
> >>>>>> the pull request itself, that covers "pull requests sent to the
> ANTLR
> >>>>>> project from account ____" owned by that person. If you get a pull
> >>>>> request
> >>>>>> from someone who doesn't already have that agreement in place, send
> >>> them
> >>>>> a
> >>>>>> message that you need the consent form before being able to consider
> >>> the
> >>>>>> request.
> >>>>>>
> >>>>>> --
> >>>>>> Sam Harwell
> >>>>>> Owner, Lead Developer
> >>>>>> http://tunnelvisionlabs.com
> >>>>>>
> >>>>>> -----Original Message-----
> >>>>>> From: Terence Parr [mailto:parrt at cs.usfca.edu]
> >>>>>> Sent: Wednesday, July 11, 2012 3:05 PM
> >>>>>> To: ANTLR interest
> >>>>>> Subject: [antlr-interest] pull requests at github
> >>>>>>
> >>>>>> Howdy,
> >>>>>>
> >>>>>> people are now submitting nice pull request to the ANTLR project
> >>>>> software,
> >>>>>> but I have to keep the license clean. That's why I used to accept
> >>> things
> >>>>>> through the feedback page:
> >>>>>>
> >>>>>> http://www.antlr.org/misc/feedback
> >>>>>>
> >>>>>> or with the contributors license agreement. I submitted a feature
> >>>>> request to
> >>>>>> github to add such a license granting clause to the pull requests.
> >>> they
> >>>>> like
> >>>>>> the idea, but I haven't heard back about implementation.
> >>>>>>
> >>>>>> What if we set up a webpage similar to the feedback page (current
> text
> >>>>>> enclosed at the bottom) with a text box where people can submit a
> URL
> >>> to
> >>>>> a
> >>>>>> pull request, certifying the origin of the material in that pull
> >>> request.
> >>>>>> The name/username/email etc. would have to match.very messy.
> >>>>>>
> >>>>>> As a result of the certificate of origin, I could automatically
> post a
> >>>>>> comment to the pull request so that it somehow links the
> certificate.
> >>>>>>
> >>>>>> Does anybody have any process or legal advice?
> >>>>>>
> >>>>>> Ter
> >>>>>>
> >>>>>> Submission certification of origin and rights
> >>>>>>
> >>>>>> By hitting the submit button, you are warranting and representing
> that
> >>>>> you
> >>>>>> have the right to release this code or other content free of any
> >>>>> obligations
> >>>>>> to third parties and are granting Terence Parr and ANTLR project
> >>>>>> contributors, henceforth referred to as The ANTLR Project, a license
> >>> to
> >>>>>> incorporate it into The ANTLR Project tools (such as ANTLRWorks and
> >>>>>> StringTemplate) or related works under the BSD license. (For large
> new
> >>>>> code
> >>>>>> submissions or major new functionality, The ANTLR Project will ask
> >>> you to
> >>>>>> become an official ANTLR project contributor). You understand that
> The
> >>>>> ANTLR
> >>>>>> Project may or may not incorporate your submission and you warrant
> and
> >>>>>> represent the following:
> >>>>>> I created this submission. I am the author of all contributed work
> >>>>> submitted
> >>>>>> and further warrant and represent that such work is my original
> >>> creation
> >>>>> and
> >>>>>> I have the right to license it to The ANTLR Project for release
> under
> >>> the
> >>>>>> BSD license. I hereby grant The ANTLR Project a nonexclusive,
> >>>>> irrevocable,
> >>>>>> royalty-free, worldwide license to reproduce, distribute, prepare
> >>>>> derivative
> >>>>>> works, and otherwise use this contribution as part of the ANTLR
> >>> project,
> >>>>>> associated documentation, books, and tools at no cost to The ANTLR
> >>>>> Project.
> >>>>>> I have the right to submit. This submission does not violate the
> >>> rights
> >>>>> of
> >>>>>> any person or entity and that I have legal authority over this
> >>> submission
> >>>>>> and to make this certification.
> >>>>>> If I violate another's rights, liability lies with me. I agree to
> >>> defend,
> >>>>>> indemnify, and hold The ANTLR Project and ANTLR users harmless from
> >>> any
> >>>>>> claim or demand, including reasonable attorney fees, made by any
> third
> >>>>> party
> >>>>>> due to or arising out of my violation of these terms and conditions
> >>> or my
> >>>>>> violation of the rights of another person or entity.
> >>>>>> I have read this and do so certify
> >>>>>>
> >>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>>> Unsubscribe:
> >>>>>>
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>>>
> >>>>>
> >>>>>
> >>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>>> Unsubscribe:
> >>>>>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>>>
> >>>>
> >>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>>
> >>
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From waisbrot at highfleet.com  Wed Jul 11 17:51:42 2012
From: waisbrot at highfleet.com (Nathaniel Waisbrot)
Date: Wed, 11 Jul 2012 20:51:42 -0400
Subject: [antlr-interest] What triggers the generation of the getDelegates()
	method in a parser?
Message-ID: <89C19BD4-B6E5-4900-B607-F679500586F2@highfleet.com>

This problem's stumping me and I'm not sure I can even describe the source of my confusion adequately.

I have two ANTLR-using projects in Eclipse, one using ANTLR IDE and one using the antlr3-maven-plugin the grammars are the same.  But in the ANTLR IDE project, the generated Java code for the grammar includes a method "getDelegates()", which provides a reference to an imported base-grammar.  In the antlr3-maven-plugin project, this method is not generated.

Both projects are using ANTLR 3.4

What causes ANTLR to generate that method?  What could I have set up differently between the two projects that would cause this difference?

From parrt at cs.usfca.edu  Thu Jul 12 10:46:51 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Thu, 12 Jul 2012 10:46:51 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <4FFE070C.6000709@certiv.net>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
Message-ID: <7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>

Hi guys, okay, I have another idea.

Let's make a directory that's part of the source code itself that contains simple text documents with the language of the contributors license followed by the sign off line. Then, the commit hash for that document is the user's unique contributors ID. It's also unique in principle across all projects so the same user could sign a different contributors license for a different project.

 During a commit, users would put their ID hash number into the comment and then I think github would automatically link to the document containing their signature.

would that work? I think so. I also like the idea that I don't have to maintain the signatures anymore. They are just in the source code distribution.

Ter

From kferrio at gmail.com  Thu Jul 12 13:27:25 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Thu, 12 Jul 2012 13:27:25 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
Message-ID: <CAAfeETq+H51e1W-VcNNtv6zpw_Z6Y_qbLtdRMssYGApsMPoSYw@mail.gmail.com>

I probably should eat lunch before I try to understand this, but here I
go...

I like.  Sounds easy enough that it will not be a barrier to use or
maintain.

It sounds like you envision multiple "simple text documents" for the
contrib license.  Or do you mean each project (antlr, stringtemplate, etc.)
would have it's own (versioned) contrib agreement?  I would think that each
project would have exactly one (versioned) contrib agreement which would
exist within the repo of its respective project.

So...when you refer to "the commit hash for that document" do you mean the
guid for the main project repo or the guid for the contributor's fork?  Its
important that it reference the main repo in some way, since a contributor
could permanently delete his fork at any time after the pull.  Didn't quite
follow your logic there.

I like the idea of having github link directly from the commit log to the
committed document if that really works the way you envision and pulls up
the whole changeset which license and code together.  But since that relies
in part on behavior of githib -- not just git itself -- the design may be
brittle to changes in githib.  Even if githib does not change, you're
locked into githib.  I doubt github is going away (a $100MM in VC should
last at least a few months even in the valley) and git itself isn't going
anywhere.  So the worst-case scenario would be that contributions might be
put on hold when you have to adapt to changes at github (all the more
reason to make github aware of the need) or you migrate to another
git-based provider.

Kyle


On Thu, Jul 12, 2012 at 10:46 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> Hi guys, okay, I have another idea.
>
> Let's make a directory that's part of the source code itself that contains
> simple text documents with the language of the contributors license
> followed by the sign off line. Then, the commit hash for that document is
> the user's unique contributors ID. It's also unique in principle across all
> projects so the same user could sign a different contributors license for a
> different project.
>
>  During a commit, users would put their ID hash number into the comment
> and then I think github would automatically link to the document containing
> their signature.
>
> would that work? I think so. I also like the idea that I don't have to
> maintain the signatures anymore. They are just in the source code
> distribution.
>
> Ter
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From coder at paxi.at  Fri Jul 13 01:12:32 2012
From: coder at paxi.at (Paxi)
Date: Fri, 13 Jul 2012 01:12:32 -0700 (PDT)
Subject: [antlr-interest] ANTLR3C 3.4 Usage of Parser
Message-ID: <1342167152839-7578377.post@n2.nabble.com>

Im currently working on a on project where my goal is to normalize an
arbitrary JS code.
For short explonantation: I want to parse an arbitrary JS code and do some
things with it:
? Rename every variable (f.e rename /var wadbwdb/ into /var1/ and rename it
again with the right name if it occurs again)
? Evaluate assignment expressions at any given time: f.e if there a
statement like /asdf = wadwdb+?0x18?;/ I want to add the value from wadwdb +
0x18 and save it to asdf in a struct that stores information about every
variable
? Check for functions 
? Some more?
Afterwards fill the manipulated JS code in a streambuffer and move on.
 
Now to my actual question and problem:
Im using the following JS grammar
http://www.antlr.org/grammar/1206736738015/JavaScript.g (with options
/language=C; and ASTLabelType = pANTLR3_BASE_TREE;/  added)
/ANTLRWorks 1.4.3/ for building the C files and 
/libantlr3c-3.4/ for developement
 
Im working on this for about a week now and I just don?t get how to use the
parser correctly.
First of all when generating the .c files with ANTLR3Works there was already
one problem in the parser:
In file JavaScriptParser.h there is following statement generated  /#define
LT 18/
Than in JavaScriptParser.c following is generated   
/#undef LT 
#define LT(n) INPUT->_LT(INPUT, n)/
So LT is undefined and redefined as makro LT(n) but not as constant value
18. This may be a bug but I just replaced every LT with constant value 18
and left the makro in the .c file and got everything to compile than. So
thats not the problem anymore.

My real problem anyways is that I don?t know how to use the parser correctly
or there is just something wrong with it here.
What I wanted to do for now is using the parser to get all statement within
the program that always end with a ; of course
The code I got so far looks like this:
/typedef JavaScriptParser_statement_return *PStatement;
PStatement stat;
while(stat = &(m_pParser->statement(m_pParser))) {
       if(stat->start->type == ANTLR3_TOKEN_EOF || !stat->tree->children) 
             break;
 
       std::cout << stat->start->index << " " << stat->stop->index << " " <<
stat->tree->children->count << "\n" << std::endl;
}
 /
Only the first stat struct i is valid and even there im not sure about
because my first statement f.e is 
/var dnivg9=this; and the second like 
var
ktatf="ne%00~a`e0uc8uddu8cudbu4du7eufeu61u12u00u00u00u53u46u64u52u10u20u10ua1u9au2aua1uf5u12u00u00?..?;/
and there are about 6 more statements coming after it
 
The output is following: /0 5 4/ (children count = 4 is already false I
guess)
                                /6 5 0/
And that?s it. So first there should be some more statement and after the
first struct the tree is always invalid and has no childnodes. I assumed
that the JS grammar im using can also be used for building an AST because
someone else used the same grammar in C# and parsed the AST. But since the
tokens values are also wrong when using the parser there has to be something
wrong.
 
So what im looking for is a general guide how to parse through the whole
stream.
 
I can go through every single token just within the tokenstream and
everything is fine like this :
/while(pToken =
m_pParser->pParser->tstream->_LT(m_pParser->pParser->tstream,1)) {
       if(pToken->type!=ANTLR3_TOKEN_EOF) {
             // do smth
}
      
m_pParser->pParser->tstream->istream->consume(m_pParser->pParser->tstream->istream);
                    
}// end loop/
 
But than I have to do lots of testing and checking types myself.
My goal or hope was that I can just tell ANTLR to start parsing at the
?program? token, and than parse down the tree and get single expressions or
assignement etc within.
I would really need some help on this. Thanks in advance.



Regards Christian


--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR3C-3-4-Usage-of-Parser-tp7578377.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jokeserver at gmail.com  Fri Jul 13 01:36:50 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Fri, 13 Jul 2012 01:36:50 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
Message-ID: <CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>

On Wed, Jul 11, 2012 at 4:00 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> So it looks like the intentions of the sign off line
>
> Signed-off-by: Random J Developer <random at developer.example.org>
>
> would go into the commit message so that it stays in the repository, as opposed to the pull request, right?
>
> apparently then there is an assumption that random J developer agrees with the developer's certificate of origin, but I don't like that from a legal point of view.

As far as I can tell, this is essentially what the linux kernel
project does: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;f=Documentation/SubmittingPatches;hb=HEAD#l298
. I suppose you would want to specify somewhere prominent (e.g. the
pull request form, if possible) that adding the signoff to your commit
that you are certifying the Certificate of Origin.

On Thu, Jul 12, 2012 at 10:46 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
> Hi guys, okay, I have another idea.
>
> Let's make a directory that's part of the source code itself that contains simple text documents with the language of the contributors license followed by the sign off line. Then, the commit hash for that document is the user's unique contributors ID. It's also unique in principle across all projects so the same user could sign a different contributors license for a different project.
>
>  During a commit, users would put their ID hash number into the comment and then I think github would automatically link to the document containing their signature.
>
> would that work? I think so. I also like the idea that I don't have to maintain the signatures anymore. They are just in the source code distribution.

I think using GUIDs and/or hash numbers is going a little overboard,
particularly when contributors are all github users, hence already
have a globally unique user id. I also think having one text file per
contributor is a little much as well, considering we only need a
signature.

My suggestion is to have one text file, with the Contributor's License
for the project, with a spot for contributors to digitally sign it,
where "digitally sign" = a commit that adds a line containing the
contributor's real name, github username, and email address (optional;
I guess it's not really necessary in this scheme). Thus the bar for
accepting a pull request by a contributor is, at a minimum: a) the
pull request contains a commit signing the license or the contributor
has already signed the license, and b) all other commits have the
signed-off-by line by the user submitting the pull request [and the
signed-off-by is a certification that it's all their code, etc etc.].
Someone who accepts the pull request will want to verify the
contributor has signed the license by checking for their name in the
license file.

The upside to this is that we don't need to add an opaque hex id that
github will recognize and linkify (but not local git) to each of our
commit messages; we'd only need to add the "-s" flag every time.
Really the only differences here are that we put all the signatures in
one file and not require a link to that commit from every future
commit. If we put that one file in the top level of the project, I
would posit (without being a lawyer) that that's just as effective.

I'm not actually sure how well github allows editing of commit
messages, but if possible, it should be simple to request that a new
contributor (who filed a pull request without doing all of this) sign
the license and add the commit to their pull request, and add the
signed-off-by message to their commits.

From farcasia at gmail.com  Fri Jul 13 04:21:16 2012
From: farcasia at gmail.com (Ana-Maria Farcasi)
Date: Fri, 13 Jul 2012 13:21:16 +0200
Subject: [antlr-interest] Problem in JavaScript grammar
Message-ID: <CAC7Fw9oUF4Yk0axLOs7orzWo=rzJM3BgDb-d56HOC5dHyW4Fzg@mail.gmail.com>

HI,

I am currently working at a fuzzer tester for JavaScript  and I need antlr
to parse the input JavaScript files.
I am using antlr 3.1.3 with the python target language.
I have started from Chris Lambrou's grammar for JavaScript
(http://www.antlr.org/grammar/1206736738015/JavaScript.g)
and I have added a parser rule for regular
expression literals to that grammar. I have not added the regular
expressions in the lexer because I don't want
the lexer to mistakenly think that a '/' is the starting character of a
regular expression when it is a division operator
in fact.

Now that the regular expression is a parsing rule, there is another
problem. If there is an unescaped quote
inside the regular expression, the lexer mistakenly thinks that that quote
is the starting of a string literal
and treats it like that.

One way of solving this would have been the solution proposed in
http://www.antlr.org/wiki/display/ANTLR3/Island+Grammars+Under+Parser+Control
but this does not work in antlr 3 because cs.index() will in fact be the
end of the
character stream in the above solution (tokenization is done completely
before
parsing). So, I could not change the lexers or call another parser for
regular expressions.
Also, I cannot transfer any information from the parser to the lexer
because lexing
is done before parsing.

I am really stuck at this point. If you know of any workaround for this
problem, please
let me know.

Thank you,
Ana.

From sanne.grinovero at gmail.com  Fri Jul 13 07:06:46 2012
From: sanne.grinovero at gmail.com (Sanne Grinovero)
Date: Fri, 13 Jul 2012 15:06:46 +0100
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
Message-ID: <CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>

Nice ideas.

To answer a question: yes with GitHub I'm allowed to edit my commits
in all parts even after having sent the pull request: including the
commit comments. It basically just points to the originating branch.

You can't customize the pull-request form, but GitHub allows to hook
your custom scripts in the repository, so you could optionally have a
script validate this requirement by an automated trigger and reject
the pull while it provides some instructions to the newcomer.

As an example, with Hibernate we use these event listeners to
automatically trigger Jenkins builds on pull requests and send a
notification to Twitter and IRC channels on successful integrations.

We also face the same problem of having to track which contributor has
already signed the contributor agreement; for that there is currently
no automation: we have a web form like the one for ANTLR,  which feeds
a list which we manually check when accepting patches. Isn't too bad
as most requests originate from the usual well known people.

It seems our legals are happy to have contributors sign only once,
there is no need to have them refer to the statement for each
subsequent commit. I would say indeed that if I sign a document
referring to "contributing" now and in the future, it would be a poor
defense later in future to deny having ever read that when sending
additional patches.

Regards,
Sanne

On 13 July 2012 09:36, Benjamin S Wolf <jokeserver at gmail.com> wrote:
> On Wed, Jul 11, 2012 at 4:00 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> So it looks like the intentions of the sign off line
>>
>> Signed-off-by: Random J Developer <random at developer.example.org>
>>
>> would go into the commit message so that it stays in the repository, as opposed to the pull request, right?
>>
>> apparently then there is an assumption that random J developer agrees with the developer's certificate of origin, but I don't like that from a legal point of view.
>
> As far as I can tell, this is essentially what the linux kernel
> project does: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;f=Documentation/SubmittingPatches;hb=HEAD#l298
> . I suppose you would want to specify somewhere prominent (e.g. the
> pull request form, if possible) that adding the signoff to your commit
> that you are certifying the Certificate of Origin.
>
> On Thu, Jul 12, 2012 at 10:46 AM, Terence Parr <parrt at cs.usfca.edu> wrote:
>> Hi guys, okay, I have another idea.
>>
>> Let's make a directory that's part of the source code itself that contains simple text documents with the language of the contributors license followed by the sign off line. Then, the commit hash for that document is the user's unique contributors ID. It's also unique in principle across all projects so the same user could sign a different contributors license for a different project.
>>
>>  During a commit, users would put their ID hash number into the comment and then I think github would automatically link to the document containing their signature.
>>
>> would that work? I think so. I also like the idea that I don't have to maintain the signatures anymore. They are just in the source code distribution.
>
> I think using GUIDs and/or hash numbers is going a little overboard,
> particularly when contributors are all github users, hence already
> have a globally unique user id. I also think having one text file per
> contributor is a little much as well, considering we only need a
> signature.
>
> My suggestion is to have one text file, with the Contributor's License
> for the project, with a spot for contributors to digitally sign it,
> where "digitally sign" = a commit that adds a line containing the
> contributor's real name, github username, and email address (optional;
> I guess it's not really necessary in this scheme). Thus the bar for
> accepting a pull request by a contributor is, at a minimum: a) the
> pull request contains a commit signing the license or the contributor
> has already signed the license, and b) all other commits have the
> signed-off-by line by the user submitting the pull request [and the
> signed-off-by is a certification that it's all their code, etc etc.].
> Someone who accepts the pull request will want to verify the
> contributor has signed the license by checking for their name in the
> license file.
>
> The upside to this is that we don't need to add an opaque hex id that
> github will recognize and linkify (but not local git) to each of our
> commit messages; we'd only need to add the "-s" flag every time.
> Really the only differences here are that we put all the signatures in
> one file and not require a link to that commit from every future
> commit. If we put that one file in the top level of the project, I
> would posit (without being a lawyer) that that's just as effective.
>
> I'm not actually sure how well github allows editing of commit
> messages, but if possible, it should be simple to request that a new
> contributor (who filed a pull request without doing all of this) sign
> the license and add the commit to their pull request, and add the
> signed-off-by message to their commits.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From asicaddress at gmail.com  Fri Jul 13 07:16:05 2012
From: asicaddress at gmail.com (A Z)
Date: Fri, 13 Jul 2012 09:16:05 -0500
Subject: [antlr-interest] ANTLR never completes when generating certain
	lexers
Message-ID: <CAP86aOenfXvEPkhkU6abksSc5OjzqLf0+aB5qGksq8ZEpNuRXA@mail.gmail.com>

I've been changing a lexer around in an effort to give better error
messages and came across a case where ANTLR fails to terminate. The code
below is the minimum I could find that causes the problem.
  In my working grammar, I have functionally equivalent code working and
that entire grammar generates in about 6 seconds. After the changes, the
ANTLR code generator never completes and eventually the Java VM quits after
using all the system memory. Is there any debugging info ANTLR has that I
should be looking at to fix this? To be clear I'm not looking for what's
wrong with the grammar, just a means to isolate the problem faster. Thanks.

lexer grammar Y;

options
{
  language = C;
}


RULE :
      EscapedIdent
  |   EscapedIdent '(' MacroExpr (',' MacroExpr )* ')'
  ;

fragment EscapedIdent : '\\' (~ ('\r'|' '|'\n'))+ (' ' | '\n' | EOF);
fragment MacroExpr : (MacroSubExpr | ~(',' | '(' | '{' | ')' | '}' | '"'))*;
fragment MacroSubExpr :
    '('
    (
      (
        ~('(' | '{' | '[' | ')')
      | MacroSubExpr
      )+ ')'
    | ')'
    )
  | '{'
    (
      (
        ~('(' | '{' | '[' | '}')
      | MacroSubExpr
      )+ '}'
    | '}'
    );

From kferrio at gmail.com  Fri Jul 13 07:53:26 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Fri, 13 Jul 2012 07:53:26 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
Message-ID: <CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>

Hi Sanne,

Simple is good.  Your point that it's hard to credibly disavow a prior
agreement with language like "this and any future contributions I choose to
offer" makes sense to me as a layperson.

But I have a question.  How do you manage ammendments the agreement
itself?  Do you simply purge the list of eligible contributors and require
them all to sign the new version?

[Ter: I have an interest which goes beyond ANTLR, so I'm happy to take this
offlist if you're done with this topic.  Thanks for the stimulating
discussion.]

Kyle

From sanne.grinovero at gmail.com  Fri Jul 13 08:31:01 2012
From: sanne.grinovero at gmail.com (Sanne Grinovero)
Date: Fri, 13 Jul 2012 16:31:01 +0100
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
Message-ID: <CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>

On 13 July 2012 15:53, Kyle Ferrio <kferrio at gmail.com> wrote:
> Hi Sanne,
>
> Simple is good.  Your point that it's hard to credibly disavow a prior
> agreement with language like "this and any future contributions I choose to
> offer" makes sense to me as a layperson.
>
> But I have a question.  How do you manage ammendments the agreement itself?
> Do you simply purge the list of eligible contributors and require them all
> to sign the new version?

I'm not sure, that never happened. I'm not the layperson so just
describing the process I know of, but I presume we would act as you
describe: good & simple.

You can have a look at the exact wordings at cla.jboss.org . Note that
the text varies depending on the project to accommodate for different
OSS licenses.

Regards,
Sanne

>
> [Ter: I have an interest which goes beyond ANTLR, so I'm happy to take this
> offlist if you're done with this topic.  Thanks for the stimulating
> discussion.]
>
> Kyle

From jimi at temporal-wave.com  Fri Jul 13 09:29:26 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 13 Jul 2012 09:29:26 -0700
Subject: [antlr-interest] ANTLR never completes when generating certain
	lexers
In-Reply-To: <CAP86aOenfXvEPkhkU6abksSc5OjzqLf0+aB5qGksq8ZEpNuRXA@mail.gmail.com>
References: <CAP86aOenfXvEPkhkU6abksSc5OjzqLf0+aB5qGksq8ZEpNuRXA@mail.gmail.com>
Message-ID: <199784ab52d9044ae28ab820ca07e64f@mail.gmail.com>

What if you do:

RULE :
       EscapedIdent ('(' MacroExpr (',' MacroExpr )* ')')?
   ;


And it looks like your MacroExpression rule can be empty. So, make sure it
cannot be then alter the RULE above accordingly.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Friday, July 13, 2012 7:16 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR never completes when generating certain
> lexers
>
> I've been changing a lexer around in an effort to give better error
> messages and came across a case where ANTLR fails to terminate. The
> code below is the minimum I could find that causes the problem.
>   In my working grammar, I have functionally equivalent code working
> and that entire grammar generates in about 6 seconds. After the
> changes, the ANTLR code generator never completes and eventually the
> Java VM quits after using all the system memory. Is there any debugging
> info ANTLR has that I should be looking at to fix this? To be clear I'm
> not looking for what's wrong with the grammar, just a means to isolate
> the problem faster. Thanks.
>
> lexer grammar Y;
>
> options
> {
>   language = C;
> }
>
>
> RULE :
>       EscapedIdent
>   |   EscapedIdent '(' MacroExpr (',' MacroExpr )* ')'
>   ;
>
> fragment EscapedIdent : '\\' (~ ('\r'|' '|'\n'))+ (' ' | '\n' | EOF);
> fragment MacroExpr : (MacroSubExpr | ~(',' | '(' | '{' | ')' | '}' |
> '"'))*; fragment MacroSubExpr :
>     '('
>     (
>       (
>         ~('(' | '{' | '[' | ')')
>       | MacroSubExpr
>       )+ ')'
>     | ')'
>     )
>   | '{'
>     (
>       (
>         ~('(' | '{' | '[' | '}')
>       | MacroSubExpr
>       )+ '}'
>     | '}'
>     );
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sam at tunnelvisionlabs.com  Fri Jul 13 09:38:09 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Fri, 13 Jul 2012 11:38:09 -0500
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>	<4FFE070C.6000709@certiv.net>	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
Message-ID: <018b01cd6115$e446b8e0$acd42aa0$@tunnelvisionlabs.com>

Hi Kyle,

As an additional reference, here's how Oracle/NetBeans operates:
http://wiki.netbeans.org/FaqHowDoIFileACA

After posting a patch with a bug report, I received an email from them
requesting I follow the steps on that page before proceeding.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Kyle Ferrio [mailto:kferrio at gmail.com] 
Sent: Friday, July 13, 2012 9:53 AM
To: Sanne Grinovero
Cc: ANTLR interest
Subject: Re: [antlr-interest] pull requests at github

Hi Sanne,

Simple is good.  Your point that it's hard to credibly disavow a prior
agreement with language like "this and any future contributions I choose to
offer" makes sense to me as a layperson.

But I have a question.  How do you manage ammendments the agreement itself?
Do you simply purge the list of eligible contributors and require them all
to sign the new version?

[Ter: I have an interest which goes beyond ANTLR, so I'm happy to take this
offlist if you're done with this topic.  Thanks for the stimulating
discussion.]

Kyle

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kferrio at gmail.com  Fri Jul 13 09:49:08 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Fri, 13 Jul 2012 09:49:08 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <018b01cd6115$e446b8e0$acd42aa0$@tunnelvisionlabs.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
	<018b01cd6115$e446b8e0$acd42aa0$@tunnelvisionlabs.com>
Message-ID: <CAAfeETqmEmWCUtVLuV4C7aw828GpZdh=zL5M7PRgd=swz=tdCQ@mail.gmail.com>

Thanks, Sam.

LOL -- at least Oracle has a sense of humor about killing trees.  Wait,
maybe that's not funny...

Kyle


On Fri, Jul 13, 2012 at 9:38 AM, Sam Harwell <sam at tunnelvisionlabs.com>wrote:

> Hi Kyle,
>
> As an additional reference, here's how Oracle/NetBeans operates:
> http://wiki.netbeans.org/FaqHowDoIFileACA
>
> After posting a patch with a bug report, I received an email from them
> requesting I follow the steps on that page before proceeding.
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> From: Kyle Ferrio [mailto:kferrio at gmail.com]
> Sent: Friday, July 13, 2012 9:53 AM
> To: Sanne Grinovero
> Cc: ANTLR interest
> Subject: Re: [antlr-interest] pull requests at github
>
> Hi Sanne,
>
> Simple is good.  Your point that it's hard to credibly disavow a prior
> agreement with language like "this and any future contributions I choose to
> offer" makes sense to me as a layperson.
>
> But I have a question.  How do you manage ammendments the agreement itself?
> Do you simply purge the list of eligible contributors and require them all
> to sign the new version?
>
> [Ter: I have an interest which goes beyond ANTLR, so I'm happy to take this
> offlist if you're done with this topic.  Thanks for the stimulating
> discussion.]
>
> Kyle
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From parrt at cs.usfca.edu  Fri Jul 13 17:03:31 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Jul 2012 17:03:31 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
	<CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
Message-ID: <466ECCF9-79A2-485C-B5A6-9FE1D72F1E54@cs.usfca.edu>

Hi Gang, thanks very much for all the helpful and insightful suggestions. I also talked it over in person with a few people yesterday. Sounds like the simplest thing to do is to create a single contributors file in the repository that contains the contributors license. Anyone that wants to be a contributor, can simply fork, add their name, commit, send a pull request and then they are in the system. Any future pull requests can be merged with a quick check on their name. The contributors file can also be augmented with their signoff him during the first pull request.

This would be on a per project basis.

On a related problem with pull requests. As Sam Harwell pointed out to me, github has a pretty serious problem when it comes to forked repositories.

> We've started fully qualifying everything in our normal commits, but the pull requests are still being merged with the syntax "Merge pull request #23 from parrt/master", which will then propagate to and mess up the issues of everyone who merges antlr/antlr4 into their forks.

This I guess is only a problem if you are creating your own issues in your own fork of antlr, right? Can anyone comment on this problem?

Ter

From parrt at cs.usfca.edu  Fri Jul 13 17:28:19 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Fri, 13 Jul 2012 17:28:19 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
	<CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
Message-ID: <876F2D00-A5B0-4352-9D32-9ED8DB613D42@cs.usfca.edu>

How does this file look? Is a copy of the contributors certificate of origin that people sign to get write access to the repository previously:

https://github.com/parrt/antlr3/blob/master/contributors.txt

People can just add their signoff the bottom like I've done.  Do you think this will work? Seems like it would.

Ter
On Jul 13, 2012, at 8:31 AM, Sanne Grinovero wrote:

> On 13 July 2012 15:53, Kyle Ferrio <kferrio at gmail.com> wrote:
>> Hi Sanne,
>> 
>> Simple is good.  Your point that it's hard to credibly disavow a prior
>> agreement with language like "this and any future contributions I choose to
>> offer" makes sense to me as a layperson.
>> 
>> But I have a question.  How do you manage ammendments the agreement itself?
>> Do you simply purge the list of eligible contributors and require them all
>> to sign the new version?
> 
> I'm not sure, that never happened. I'm not the layperson so just
> describing the process I know of, but I presume we would act as you
> describe: good & simple.
> 
> You can have a look at the exact wordings at cla.jboss.org . Note that
> the text varies depending on the project to accommodate for different
> OSS licenses.
> 
> Regards,
> Sanne
> 
>> 
>> [Ter: I have an interest which goes beyond ANTLR, so I'm happy to take this
>> offlist if you're done with this topic.  Thanks for the stimulating
>> discussion.]
>> 
>> Kyle
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From kferrio at gmail.com  Fri Jul 13 17:34:24 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Fri, 13 Jul 2012 17:34:24 -0700
Subject: [antlr-interest] pull requests at github
In-Reply-To: <876F2D00-A5B0-4352-9D32-9ED8DB613D42@cs.usfca.edu>
References: <E84C29A8-9E0E-4633-AF14-5DBA64567FB1@cs.usfca.edu>
	<4FFE070C.6000709@certiv.net>
	<7DAEFD87-EEC1-4894-87B4-D3C54D53107F@cs.usfca.edu>
	<CAN51Nt59h27XK89FkxY8o4dEP_ZQKKNpeoHScbpY5-Jcc8dC1w@mail.gmail.com>
	<CAFm4XO0Npx+UDLW5aNTqFJYdkv5SNNJspb90YYgyhe0L7B9pxg@mail.gmail.com>
	<CAAfeETrADHpFtKEc8q0_c1z56W0WJKLppR1NhwenzFuF_1h4LA@mail.gmail.com>
	<CAFm4XO1Y=FuFaSTCGT4G1rgUpGHK-7EpyhyTC_K3F_aOMknHTg@mail.gmail.com>
	<876F2D00-A5B0-4352-9D32-9ED8DB613D42@cs.usfca.edu>
Message-ID: <CAAfeEToZmYSvLXP+LWXY68w5LZVk1JXETwrePL6CymEqUwkv3A@mail.gmail.com>

Pure.  Genius.  +1
On Jul 13, 2012 5:28 PM, "Terence Parr" <parrt at cs.usfca.edu> wrote:

> How does this file look? Is a copy of the contributors certificate of
> origin that people sign to get write access to the repository previously:
>
> https://github.com/parrt/antlr3/blob/master/contributors.txt
>
> People can just add their signoff the bottom like I've done.  Do you think
> this will work? Seems like it would.
>
> Ter
> On Jul 13, 2012, at 8:31 AM, Sanne Grinovero wrote:
>
> > On 13 July 2012 15:53, Kyle Ferrio <kferrio at gmail.com> wrote:
> >> Hi Sanne,
> >>
> >> Simple is good.  Your point that it's hard to credibly disavow a prior
> >> agreement with language like "this and any future contributions I
> choose to
> >> offer" makes sense to me as a layperson.
> >>
> >> But I have a question.  How do you manage ammendments the agreement
> itself?
> >> Do you simply purge the list of eligible contributors and require them
> all
> >> to sign the new version?
> >
> > I'm not sure, that never happened. I'm not the layperson so just
> > describing the process I know of, but I presume we would act as you
> > describe: good & simple.
> >
> > You can have a look at the exact wordings at cla.jboss.org . Note that
> > the text varies depending on the project to accommodate for different
> > OSS licenses.
> >
> > Regards,
> > Sanne
> >
> >>
> >> [Ter: I have an interest which goes beyond ANTLR, so I'm happy to take
> this
> >> offlist if you're done with this topic.  Thanks for the stimulating
> >> discussion.]
> >>
> >> Kyle
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From selenareneephillips at gmail.com  Sat Jul 14 15:06:39 2012
From: selenareneephillips at gmail.com (Selena Phillips)
Date: Sat, 14 Jul 2012 18:06:39 -0400
Subject: [antlr-interest] maven & gunit - Gunit tests don't run
Message-ID: <CABEUKhTq8BP+duYNSBz8xAfMxWS4D91JtMDA+iFCr0dJCN7xDw@mail.gmail.com>

I cannot get GUint tests to run in my maven setup. When I run mvn compile,
everything compiles fine. The lexer and parser classes are generated as
expected in target/generated-sources. However, when running mvn tests, all
the junit tests run and I get this output:

-----------------------------------------------------------
 G U N I T   R E S U L T S
-----------------------------------------------------------

Summary :
Tests run: 0,  Failures: 0,  Invalid: 0

The gunit report folder is created, but is empty. There are no error
messages or exceptions reported.

Directory structure:

src

   - main
      - antlr3
         - org.companyname.projectname.parser
         - groovy
         - org.companyname.projectname
            - data
            - logic
            - util
            - xml
         - test
      - groovy
         - org.companyname.projectname
            - logic
            - util
            - xml
         - resources
         - org.companyname.projectname
      - gunit
         - org.companyname.projectname.parser
            - GrammarName.gunit


Here is my POM setup:

  <dependencies>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>3.4</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>gunit</artifactId>
      <version>3.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr3-maven-plugin</artifactId>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>maven-gunit-plugin</artifactId>
      <version>3.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/target/generated-sources/antlr3</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>3.4</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>maven-gunit-plugin</artifactId>
        <version>3.4</version>
        <executions>
          <execution>
          <id>maven-gunit-plugin</id>
            <phase>test</phase>
            <goals>
              <goal>gunit</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

There are just a few simple tests in the gUnit file for a simple grammar:

gunit Testy;

qualifiedName:
"helloWorld" OK

IDENTIFIER:
"abc123" OK
"abc*%123" OK
"123abc" FAIL

Here is an excerpt from my grammar:

grammar GrammarName;

options {
    language = Java;
}

@lexer::header {
  package org.companyname.projectname.parser;
}

@parser::header {
  package org.companyname.projectname.parser;
}

qualifiedName
    :   IDENTIFIER ('.' IDENTIFIER)*
    ;

IDENTIFIER
    :   IDENTIFIER_CHARS*
    ;

fragment
IDENTIFIER_CHARS
    :    (IDENTIFIER_START) (IDENTIFIER_PART)*
    ;

fragment
IDENTIFIER_START
    :   '\u0024'
    |   '\u0041'..'\u005a'
    |   '\u005f'
...... (Way too long to repeat here.)

fragment
IDENTIFIER_PART
    :   '\u0000'..'\u0008'
    |   '\u000e'..'\u001b'
    |   '\u0024'
    |   '\u0030'..'\u0039'
........(Ditto)

From selenareneephillips at gmail.com  Sat Jul 14 15:08:14 2012
From: selenareneephillips at gmail.com (Selena Phillips)
Date: Sat, 14 Jul 2012 18:08:14 -0400
Subject: [antlr-interest] ClassNotFoundException when running gUnit from the
	command line
Message-ID: <CABEUKhTB5gTdDXh=yREatOc6d2EmikuaX38KxfseCANug7XxHA@mail.gmail.com>

I tried to follow the instructions in the gUnit tutorial located here:

http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

After compiling the generated source for the lexer and parser for my
grammar, I tried to run gUnit and got a ClassNotFoundException for my Lexer
class. The class file is present in the working directory where I am
running the java org.antlr.gunit.Interp command. Someone posted a similar
problem to this list two years ago and didn't get a response. Can someone
help me with this? Am I missing something that should be really easy? I
re-read the tutorial a few times and couldn't find a detail I had
overlooked.

From donn.denman at gmail.com  Sun Jul 15 21:26:38 2012
From: donn.denman at gmail.com (Donn Denman)
Date: Sun, 15 Jul 2012 21:26:38 -0700
Subject: [antlr-interest] ANTLR - Java Script Target - dormant / active?
In-Reply-To: <82E284E3-54F9-40D6-998D-78747435305D@cs.usfca.edu>
References: <20120606130008.239640@gmx.net>
	<82E284E3-54F9-40D6-998D-78747435305D@cs.usfca.edu>
Message-ID: <CAJ7vdjVbjXCtGRmwdUM3nvAZ4rPACYPsaLsxHRx04Cqtrdh3KA@mail.gmail.com>

Terence,

I too am interested in targeting JavaScript, and a friend told me that it
was working in 3.3.  Do you have any recollection of that?  Since a few
other folks are interested in JS, maybe a small group of us could start
investigating that, share status, and maybe even branch fixes off of 3.3.
if needed, or try to update 3.4.  Let us know if you think this is
reasonable, or if you would rather not have this complication, etc.  If you
have any suggestions or guidance about a JS target or appropriate forum for
that discussion, that would be much appreciated!

On Wed, Jun 6, 2012 at 11:02 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> hi. unfortunately I think that that target is dormant I also don't think
> it's up to date for 3.4
> T
> On Jun 6, 2012, at 6:00 AM, Uwe Gebhardt wrote:
>
> > Hi,
> >
> > is the Javascript still an supported target language?
> >
> > Looking in the wiki
> >
> > http://www.antlr.org/wiki/display/ANTLR3/ANTLR3JavaScriptTarget
> >
> > I see the last update was done in 2010, on the same page
> > the ANTLR 3.1 / 3.2 release get mentioned.
> >
> > If I look at
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
> >
> > Javascript is still listed, and I find the statement
> > "In sync with ANTLR3 Development"
> >
> > ANTLR
> > --
> > Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
> > belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From s.basan at surge.it  Sun Jul 15 23:24:45 2012
From: s.basan at surge.it (Surj Basan)
Date: Mon, 16 Jul 2012 07:24:45 +0100
Subject: [antlr-interest] Rewrite bug?
Message-ID: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>

Hi All,

I have a Java grammar (taken from the openjdk, one linked off
the ANTLR site:
http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g).

One of the rewrite rules produces Java code which does not have a var decl,
and so does not compile.

I took the rule straight out of Terrence Parr's page on rewrite rules and
added it to the grammar (
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction, paragraph
beginning "Using a rewrite rule at a non-extreme-right-edge-of-production
location is ok..").

Can someone explain if this is a bug in ANTLR? Code is below, for ref.

Grammar rule:

statement
    :   [more rules here]
    |   'if' parExpression s1=statement ('else' s2=statement -> ^('if'
parExpression $s1 $s2)
                                        |                      -> ^('if'
parExpression $s1)
                                        )
    [more rules here]
    ;


Generated parser code:

    // $ANTLR start synpred139_AntlrJava
    public final void synpred139_AntlrJava_fragment() throws
RecognitionException {
        void  =null;


        // AntlrJava.g:926:42: ( 'else' s2= statement )
        // AntlrJava.g:926:42: 'else' s2= statement
        {

match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava4927);
if (state.failed) return ;

        pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
        s2=statement();

        state._fsp--;
        if (state.failed) return ;

        }

    }

(For what it's worth, I find that various permutations of rewrite rules
exhibit the same behaviour: missing var decls in the generated parser.
Java.g is a pretty complex grammar. Would I have more luck if I split the
grammar into the lexer/parser and a separate tree building one, instead of
combining it all into a single file?)

Any help greatly appreciated.

Thanks,
Surj

From coder at paxi.at  Mon Jul 16 05:37:59 2012
From: coder at paxi.at (Paxi)
Date: Mon, 16 Jul 2012 05:37:59 -0700 (PDT)
Subject: [antlr-interest] ANTLR3C 3.4 Usage of Parser
In-Reply-To: <1342167152839-7578377.post@n2.nabble.com>
References: <1342167152839-7578377.post@n2.nabble.com>
Message-ID: <1342442279480-7578394.post@n2.nabble.com>

I encountered this thread at Stackoverflow in the meanwhile that states the
JS grammar I?m using does no create a correct AST.
http://stackoverflow.com/questions/3801658/using-antlr-to-identify-global-variable-declarations-in-a-javascript-file 
I did the changes mentioned there already in my grammar file but i still
cant walk the AST :/
Starting at the "program" rule i always get a tree with no child elements
pProgram prog = &(m_pParser->program(m_pParser));
pANTLR3_BASE_TREE c1 = (pANTLR3_BASE_TREE) prog->tree->super;
pANTLR3_BASE_TREE c1 = (pANTLR3_BASE_TREE) prog->tree;
tried with using the super field and the tree directly but none works.

Starting at the "statement" rule gives me at least a valid root node but
furthermore the results are also not as expected (which would be clear if
ANTLR3 only parses one statement and ends after it, but thats why i want to
start at the program rule...)

Please give me some hints, I really need some help on this since i should
finish it next week and I already read a lot through several topics here and
the docs.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR3C-3-4-Usage-of-Parser-tp7578377p7578394.html
Sent from the ANTLR mailing list archive at Nabble.com.

From trajesh at gmail.com  Mon Jul 16 06:06:30 2012
From: trajesh at gmail.com (Rajesh T)
Date: Mon, 16 Jul 2012 18:36:30 +0530
Subject: [antlr-interest] AST rewrite for pipelines to functions
In-Reply-To: <CAELX5ogLoW7EGDheFyVAvoynwwjvVkxdhOdajndWZoEzLPb93w@mail.gmail.com>
References: <CAELX5ogLoW7EGDheFyVAvoynwwjvVkxdhOdajndWZoEzLPb93w@mail.gmail.com>
Message-ID: <CAELX5oja6_v7LaMDfeDczHUiEhbK7+mhJW-D8HuBAL3n4W9x+g@mail.gmail.com>

Hi,

    I am a newbie to ANTLR, trying to do something like unix pipes with
functions and expressions.

    Eg :

*    'abc' | concat('123') | concat ('xyz')
*
    I have the following grammar

    function :

*     ID '('
             ( a+=orExpr (',' a+=orExpr )* )?
         ')'
    ;

    pipe :
            expr ('|' function)*
    ;

*    The above rules allows the following statement as valid expressions

*    'abc' | concat('123') | concat ('xyz')
*
    While doing AST rewrite I am changing the function definition as

   * function :

     ID '('
             ( a+=orExpr (',' a+=orExpr )* )?
         ')'  -> ^(ID $a+)?
     ;
*

    I can evaluate all functions with a tree Walker and it works fine,
however I am stuck in rewriting for pipe AST below


     *pipe :
            expr ('|' function)*
    ;
    *
    I need to do something like, the above pipe expression to be rewritten
as function expression - So that my function tree walker will evaluate the
below type expressions

    Eg :
       * 'abc' | concat('123') | concat ('xyz') | toLowerCase()
*
    becomes :

     *   toLowerCase(concat( concat (abc, 123) , xyz))
*
    Any help specifically sample snippets appreciated,

 Thanks
 Rajesh

From asicaddress at gmail.com  Mon Jul 16 08:21:10 2012
From: asicaddress at gmail.com (A Z)
Date: Mon, 16 Jul 2012 10:21:10 -0500
Subject: [antlr-interest] ANTLR3C 3.4 Usage of Parser
In-Reply-To: <1342442279480-7578394.post@n2.nabble.com>
References: <1342167152839-7578377.post@n2.nabble.com>
	<1342442279480-7578394.post@n2.nabble.com>
Message-ID: <CAP86aOf2Nr5_tKepcOjs_QwicEUshFLY3nckK-auiKBc4izFPw@mail.gmail.com>

"So LT is undefined and redefined as makro LT(n) but not as constant value
18. This may be a bug but I just replaced every LT with constant value 18
and left the makro in the .c file and got everything to compile than"

This will break your parser. You probably have LT defined as a lexer rule.

On 7/16/12, Paxi <coder at paxi.at> wrote:
> I encountered this thread at Stackoverflow in the meanwhile that states the
> JS grammar I?m using does no create a correct AST.
> http://stackoverflow.com/questions/3801658/using-antlr-to-identify-global-variable-declarations-in-a-javascript-file
> I did the changes mentioned there already in my grammar file but i still
> cant walk the AST :/
> Starting at the "program" rule i always get a tree with no child elements
> pProgram prog = &(m_pParser->program(m_pParser));
> pANTLR3_BASE_TREE c1 = (pANTLR3_BASE_TREE) prog->tree->super;
> pANTLR3_BASE_TREE c1 = (pANTLR3_BASE_TREE) prog->tree;
> tried with using the super field and the tree directly but none works.
>
> Starting at the "statement" rule gives me at least a valid root node but
> furthermore the results are also not as expected (which would be clear if
> ANTLR3 only parses one statement and ends after it, but thats why i want to
> start at the program rule...)
>
> Please give me some hints, I really need some help on this since i should
> finish it next week and I already read a lot through several topics here and
> the docs.
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/ANTLR3C-3-4-Usage-of-Parser-tp7578377p7578394.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From marinos at studyhood.com  Mon Jul 16 08:41:59 2012
From: marinos at studyhood.com (Marinos Georgiades)
Date: Mon, 16 Jul 2012 08:41:59 -0700 (PDT)
Subject: [antlr-interest] how to call a rule/token from its including rule
Message-ID: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>

Hello,

I am new to ANTLR, so I am trying to learn the basics.?
I would like to know how I can call a rule or token which is defined within another rule, as in the example below:

description
:'Description' ':' primaryActor.actorName ......
;

primaryActor
:actorName PA_TYPE
;

secondaryActor
:actorName | SA_TYPE
;

actorName
:ARTICLE SMALL_NOUN
;
So, 'primaryActor' and 'secondaryActor' both have an 'actorName'. When the user will write the actual syntax "e.g. 'Description: a Doctor...", 'Doctor should be assigned to 'primaryActor.actorName. Because 'actorName' is of the same type for both primary and secondary actors, I don't want to create an actorName for each one of them but being able to distinguish the actorName (sub-rule/token) through its ?including rule.

?Thank you,


Sincerely,

Marinos Georgiades, Ph.D.

From coder at paxi.at  Tue Jul 17 04:46:49 2012
From: coder at paxi.at (Paxi)
Date: Tue, 17 Jul 2012 04:46:49 -0700 (PDT)
Subject: [antlr-interest] ANTLR3C 3.4 Usage of Parser
In-Reply-To: <CAP86aOf2Nr5_tKepcOjs_QwicEUshFLY3nckK-auiKBc4izFPw@mail.gmail.com>
References: <1342167152839-7578377.post@n2.nabble.com>
	<1342442279480-7578394.post@n2.nabble.com>
	<CAP86aOf2Nr5_tKepcOjs_QwicEUshFLY3nckK-auiKBc4izFPw@mail.gmail.com>
Message-ID: <1342525609614-7578398.post@n2.nabble.com>

Thanks first.
I should have updated the first post as well but i already solved this
problem with renaming the token from LT to KLT.
I also got over the error in the grammar file. The problem was that the
grammar could not handle a regular expression like f.e in the substr
function. 
Actually i thought that the JS grammar provided on the ANTLR website will
handle everything and I don't have to mess around with the grammar but
that's unfortunately not the case.
All problems i got so far seemed to belong to the grammar file. I did some
changes in the meanwhile (added parser rule for the regexp and set four
replacement rules because the AST generated by the original grammar file was
completely flat).
Currently everything works but some things in the grammar still have to be
changed to get everything running proper. I may come back with a question
related to the grammar but i guess this thread can be closed for now.

--
View this message in context: http://antlr.1301665.n2.nabble.com/ANTLR3C-3-4-Usage-of-Parser-tp7578377p7578398.html
Sent from the ANTLR mailing list archive at Nabble.com.

From orders at glennrowe.net  Tue Jul 17 07:56:16 2012
From: orders at glennrowe.net (Glenn Rowe (Orders))
Date: Tue, 17 Jul 2012 15:56:16 +0100
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
Message-ID: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>

I'm relatively new to ANTLR and as a test I wrote a sample program that uses
ANTLR to define a grammar that allows

mathematical expressions such as x^2 + 4*x*cos(x) to be entered and then
have a graph of the function drawn.

The program is written in C# using WPF and XAML to define the layout, and
uses the ANTLR3 plugin for Visual Studio 2010.

 

Everything works fine unless I try to define an xmlns namespace alias for
the local namespace in which the program's code is written

in MainWindow.xaml. That is, I add the line

 

xmlns:local="clr-namespace:FormulaPlotter"

 

to the Window tag at the start of the XAML file, where FormulaPlotter is the
namespace of my code. Doing this generates 8

errors of the sort 

 

FormulaLexer does not have a constructor with 1 argument (although it does)

start() method not found

 

and other errors complaining about constructors or methods in the lexer or
parser not being found.

 

The only workaround I have found for this is to write the relevant bits of
the program in the C# code-behind file,

which is quite awkward for some of the stuff I want to do.

 

Does anyone know of a fix for this problem?

Thanks.

Glenn.

 


From sam at tunnelvisionlabs.com  Tue Jul 17 09:38:06 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Tue, 17 Jul 2012 11:38:06 -0500
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
In-Reply-To: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
References: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
Message-ID: <001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>

Hi Glenn,

I have a couple questions to get started:

1. Are you trying to reference FormulaLexer within the XAML file, or does it
just happen to be located in the namespace FormulaPlotter?
2. Are the errors causing the build to fail, or simply showing in the errors
window while editing your project?

Thanks,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net] 
Sent: Tuesday, July 17, 2012 9:56 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Problem with integrating ANTLR with XAML

I'm relatively new to ANTLR and as a test I wrote a sample program that uses
ANTLR to define a grammar that allows

mathematical expressions such as x^2 + 4*x*cos(x) to be entered and then
have a graph of the function drawn.

The program is written in C# using WPF and XAML to define the layout, and
uses the ANTLR3 plugin for Visual Studio 2010.

 

Everything works fine unless I try to define an xmlns namespace alias for
the local namespace in which the program's code is written

in MainWindow.xaml. That is, I add the line

 

xmlns:local="clr-namespace:FormulaPlotter"

 

to the Window tag at the start of the XAML file, where FormulaPlotter is the
namespace of my code. Doing this generates 8

errors of the sort 

 

FormulaLexer does not have a constructor with 1 argument (although it does)

start() method not found

 

and other errors complaining about constructors or methods in the lexer or
parser not being found.

 

The only workaround I have found for this is to write the relevant bits of
the program in the C# code-behind file,

which is quite awkward for some of the stuff I want to do.

 

Does anyone know of a fix for this problem?

Thanks.

Glenn.

 


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From orders at glennrowe.net  Tue Jul 17 09:47:41 2012
From: orders at glennrowe.net (Glenn Rowe (Orders))
Date: Tue, 17 Jul 2012 17:47:41 +0100
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
In-Reply-To: <001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>
References: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
	<001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>
Message-ID: <001d01cd643b$e2c87b10$a8597130$@glennrowe.net>

Hi Sam:

I don't try to reference FormulaLexer or FormulaParser in the XAML file, but
I need some
of the other classes in the FormulaPlotter namespace in the XAML. I've tried
putting
the ANTLR stuff in a different namespace from the MainWindow stuff, but it
doesn't help.
I've also tried putting the C# code that references the ANTLR stuff in a
separate namespace
from MainWindow but that didn't help either.

Basically, the program has a DataGrid which is data-bound to a DataTable, in
which I
store the strings representing the formulas to be plotted and the colour of
the
plot line and so on. The user enters the formula and colour in the DataGrid
in the GUI and
these are connected to the DataTable via data binding.
So I'd like to be able to refer to the DataTable in the XAML in order
to bind some of the display properties to entries in the DataTable.

The errors cause the build to fail. I know that sometimes ANTLR will show
errors in the
errors window which go away when you do a build, but these errors are 'real'
errors
that cause a build fail.

> -----Original Message-----
> From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> Sent: 17 July 2012 17:38
> To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> Hi Glenn,
> 
> I have a couple questions to get started:
> 
> 1. Are you trying to reference FormulaLexer within the XAML file, or does
it
> just happen to be located in the namespace FormulaPlotter?
> 2. Are the errors causing the build to fail, or simply showing in the
errors
> window while editing your project?
> 
> Thanks,
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> -----Original Message-----
> From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> Sent: Tuesday, July 17, 2012 9:56 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> I'm relatively new to ANTLR and as a test I wrote a sample program that
uses
> ANTLR to define a grammar that allows
> 
> mathematical expressions such as x^2 + 4*x*cos(x) to be entered and then
> have a graph of the function drawn.
> 
> The program is written in C# using WPF and XAML to define the layout, and
> uses the ANTLR3 plugin for Visual Studio 2010.
> 
> 
> 
> Everything works fine unless I try to define an xmlns namespace alias for
the
> local namespace in which the program's code is written
> 
> in MainWindow.xaml. That is, I add the line
> 
> 
> 
> xmlns:local="clr-namespace:FormulaPlotter"
> 
> 
> 
> to the Window tag at the start of the XAML file, where FormulaPlotter is
the
> namespace of my code. Doing this generates 8
> 
> errors of the sort
> 
> 
> 
> FormulaLexer does not have a constructor with 1 argument (although it
> does)
> 
> start() method not found
> 
> 
> 
> and other errors complaining about constructors or methods in the lexer or
> parser not being found.
> 
> 
> 
> The only workaround I have found for this is to write the relevant bits of
the
> program in the C# code-behind file,
> 
> which is quite awkward for some of the stuff I want to do.
> 
> 
> 
> Does anyone know of a fix for this problem?
> 
> Thanks.
> 
> Glenn.
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sam at tunnelvisionlabs.com  Tue Jul 17 10:48:57 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Tue, 17 Jul 2012 12:48:57 -0500
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
In-Reply-To: <001d01cd643b$e2c87b10$a8597130$@glennrowe.net>
References: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
	<001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>
	<001d01cd643b$e2c87b10$a8597130$@glennrowe.net>
Message-ID: <001c01cd6444$71b34460$5519cd20$@tunnelvisionlabs.com>

A few more questions:

Did you follow the instructions in the Documentation section here? In
particular, can you verify that sections 1.4 and 2.1 were incorporated
correctly?
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

Are you using the 3.4.1.9004 release of the C# port of ANTLR 3?

Did you make any changes to the .targets file from the one included in the
Releases listed on that page?

Thanks,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net] 
Sent: Tuesday, July 17, 2012 11:48 AM
To: 'Sam Harwell'; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML

Hi Sam:

I don't try to reference FormulaLexer or FormulaParser in the XAML file, but
I need some of the other classes in the FormulaPlotter namespace in the
XAML. I've tried putting the ANTLR stuff in a different namespace from the
MainWindow stuff, but it doesn't help.
I've also tried putting the C# code that references the ANTLR stuff in a
separate namespace from MainWindow but that didn't help either.

Basically, the program has a DataGrid which is data-bound to a DataTable, in
which I store the strings representing the formulas to be plotted and the
colour of the plot line and so on. The user enters the formula and colour in
the DataGrid in the GUI and these are connected to the DataTable via data
binding.
So I'd like to be able to refer to the DataTable in the XAML in order to
bind some of the display properties to entries in the DataTable.

The errors cause the build to fail. I know that sometimes ANTLR will show
errors in the errors window which go away when you do a build, but these
errors are 'real'
errors
that cause a build fail.

> -----Original Message-----
> From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> Sent: 17 July 2012 17:38
> To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> Hi Glenn,
> 
> I have a couple questions to get started:
> 
> 1. Are you trying to reference FormulaLexer within the XAML file, or 
> does
it
> just happen to be located in the namespace FormulaPlotter?
> 2. Are the errors causing the build to fail, or simply showing in the
errors
> window while editing your project?
> 
> Thanks,
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> -----Original Message-----
> From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> Sent: Tuesday, July 17, 2012 9:56 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> I'm relatively new to ANTLR and as a test I wrote a sample program 
> that
uses
> ANTLR to define a grammar that allows
> 
> mathematical expressions such as x^2 + 4*x*cos(x) to be entered and 
> then have a graph of the function drawn.
> 
> The program is written in C# using WPF and XAML to define the layout, 
> and uses the ANTLR3 plugin for Visual Studio 2010.
> 
> 
> 
> Everything works fine unless I try to define an xmlns namespace alias 
> for
the
> local namespace in which the program's code is written
> 
> in MainWindow.xaml. That is, I add the line
> 
> 
> 
> xmlns:local="clr-namespace:FormulaPlotter"
> 
> 
> 
> to the Window tag at the start of the XAML file, where FormulaPlotter 
> is
the
> namespace of my code. Doing this generates 8
> 
> errors of the sort
> 
> 
> 
> FormulaLexer does not have a constructor with 1 argument (although it
> does)
> 
> start() method not found
> 
> 
> 
> and other errors complaining about constructors or methods in the 
> lexer or parser not being found.
> 
> 
> 
> The only workaround I have found for this is to write the relevant 
> bits of
the
> program in the C# code-behind file,
> 
> which is quite awkward for some of the stuff I want to do.
> 
> 
> 
> Does anyone know of a fix for this problem?
> 
> Thanks.
> 
> Glenn.
> 
> 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From orders at glennrowe.net  Tue Jul 17 12:00:37 2012
From: orders at glennrowe.net (Glenn Rowe (Orders))
Date: Tue, 17 Jul 2012 20:00:37 +0100
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
In-Reply-To: <001c01cd6444$71b34460$5519cd20$@tunnelvisionlabs.com>
References: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
	<001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>
	<001d01cd643b$e2c87b10$a8597130$@glennrowe.net>
	<001c01cd6444$71b34460$5519cd20$@tunnelvisionlabs.com>
Message-ID: <002401cd644e$747a6f20$5d6f4d60$@glennrowe.net>

I've checked the points you mention and can confirm that I've implemented
sections 1.4 and 2.1 as stated in the docs. (I had placed the Reference
folder in
a central location so I could refer to it from multiple projects without
having to
copy it to each new project directory, but I've tried it with a local copy
and it
made no difference - I still get the build errors.) The default properties
(Build Action and Custom Tool)
of .g files in Visual Studio are set to the correct ones, so I didn't need
to change them.

[Aside: Actually, on the subject of Intellisense, there does appear to be a
bug in the
Visual Studio installer, since a file is not installed correctly, and the
Intellisense
wouldn't work. To fix it, I opened the
vsix file manually (in WinRar) and copied the file
Tvl.VisualStudio.Shell.OutputWindow.Interfaces.dll to 
C:\Program Files (x86)\Microsoft Visual Studio
10.0\Common7\IDE\CommonExtensions\Microsoft\Editor]

Anyway, back to the main points...
Yes, I'm using 3.4.1.9004 version, and no, I didn't make any changes to
the .targets file.

Thanks again,
Glenn.

> -----Original Message-----
> From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> Sent: 17 July 2012 18:49
> To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> A few more questions:
> 
> Did you follow the instructions in the Documentation section here? In
> particular, can you verify that sections 1.4 and 2.1 were incorporated
> correctly?
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> 
> Are you using the 3.4.1.9004 release of the C# port of ANTLR 3?
> 
> Did you make any changes to the .targets file from the one included in the
> Releases listed on that page?
> 
> Thanks,
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> 
> -----Original Message-----
> From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> Sent: Tuesday, July 17, 2012 11:48 AM
> To: 'Sam Harwell'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> Hi Sam:
> 
> I don't try to reference FormulaLexer or FormulaParser in the XAML file,
but I
> need some of the other classes in the FormulaPlotter namespace in the
> XAML. I've tried putting the ANTLR stuff in a different namespace from the
> MainWindow stuff, but it doesn't help.
> I've also tried putting the C# code that references the ANTLR stuff in a
> separate namespace from MainWindow but that didn't help either.
> 
> Basically, the program has a DataGrid which is data-bound to a DataTable,
in
> which I store the strings representing the formulas to be plotted and the
> colour of the plot line and so on. The user enters the formula and colour
in
> the DataGrid in the GUI and these are connected to the DataTable via data
> binding.
> So I'd like to be able to refer to the DataTable in the XAML in order to
bind
> some of the display properties to entries in the DataTable.
> 
> The errors cause the build to fail. I know that sometimes ANTLR will show
> errors in the errors window which go away when you do a build, but these
> errors are 'real'
> errors
> that cause a build fail.
> 
> > -----Original Message-----
> > From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> > Sent: 17 July 2012 17:38
> > To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> >
> > Hi Glenn,
> >
> > I have a couple questions to get started:
> >
> > 1. Are you trying to reference FormulaLexer within the XAML file, or
> > does
> it
> > just happen to be located in the namespace FormulaPlotter?
> > 2. Are the errors causing the build to fail, or simply showing in the
> errors
> > window while editing your project?
> >
> > Thanks,
> > --
> > Sam Harwell
> > Owner, Lead Developer
> > http://tunnelvisionlabs.com
> >
> > -----Original Message-----
> > From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> > Sent: Tuesday, July 17, 2012 9:56 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Problem with integrating ANTLR with XAML
> >
> > I'm relatively new to ANTLR and as a test I wrote a sample program
> > that
> uses
> > ANTLR to define a grammar that allows
> >
> > mathematical expressions such as x^2 + 4*x*cos(x) to be entered and
> > then have a graph of the function drawn.
> >
> > The program is written in C# using WPF and XAML to define the layout,
> > and uses the ANTLR3 plugin for Visual Studio 2010.
> >
> >
> >
> > Everything works fine unless I try to define an xmlns namespace alias
> > for
> the
> > local namespace in which the program's code is written
> >
> > in MainWindow.xaml. That is, I add the line
> >
> >
> >
> > xmlns:local="clr-namespace:FormulaPlotter"
> >
> >
> >
> > to the Window tag at the start of the XAML file, where FormulaPlotter
> > is
> the
> > namespace of my code. Doing this generates 8
> >
> > errors of the sort
> >
> >
> >
> > FormulaLexer does not have a constructor with 1 argument (although it
> > does)
> >
> > start() method not found
> >
> >
> >
> > and other errors complaining about constructors or methods in the
> > lexer or parser not being found.
> >
> >
> >
> > The only workaround I have found for this is to write the relevant
> > bits of
> the
> > program in the C# code-behind file,
> >
> > which is quite awkward for some of the stuff I want to do.
> >
> >
> >
> > Does anyone know of a fix for this problem?
> >
> > Thanks.
> >
> > Glenn.
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From burton.samograd at markit.com  Tue Jul 17 12:57:48 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Tue, 17 Jul 2012 15:57:48 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by curly
	braces
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>

Hello,

We have a requirement where we need to include a block of arbitrary text in a block, like so:

BLOCK { some arbitrary text here }

We initially got around this by making the whole block a token, like:

BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;

but this is less than ideal.  I am thinking that we would use something like:

block : BLOCK RCURLY BLOCK_DATA LCURLY

with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.

I am stuck on specifying BLOCK_DATA which is basically .* to the lexer.  I have attempted to access the input stream from the parser RECOGNIZER but have not been able to come up with a solution.

I am looking to basically hijack the input stream after seeing a BLOCK token so I can read the arbitrary text; I can parse out the  { } as needed.

Is this possible?

--
Burton Samograd

________________________________
This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From burton.samograd at markit.com  Tue Jul 17 13:49:49 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Tue, 17 Jul 2012 16:49:49 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly	braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E4733885@NJ4MSGSCR02.markit.partners>

I missed a quote in the previous message, our single token block reader was this:

BLOCK : 'BLOCK' (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;

--
Burton Samograd


This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From sam at tunnelvisionlabs.com  Tue Jul 17 14:15:48 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Tue, 17 Jul 2012 16:15:48 -0500
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
In-Reply-To: <002401cd644e$747a6f20$5d6f4d60$@glennrowe.net>
References: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
	<001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>
	<001d01cd643b$e2c87b10$a8597130$@glennrowe.net>
	<001c01cd6444$71b34460$5519cd20$@tunnelvisionlabs.com>
	<002401cd644e$747a6f20$5d6f4d60$@glennrowe.net>
Message-ID: <003501cd6461$56e29e70$04a7db50$@tunnelvisionlabs.com>

The IntelliSense issue is corrected in the latest release of the editor
extensions. You should be able to update the extension automatically within
the Visual Studio 2010 Extension Manager.

I'm not sure what the issue with the project is. Can you send me an example
project which I can use to reproduce this problem (directly to me, not to
the mailing list)?

Thanks,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net] 
Sent: Tuesday, July 17, 2012 2:01 PM
To: 'Sam Harwell'; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML

I've checked the points you mention and can confirm that I've implemented
sections 1.4 and 2.1 as stated in the docs. (I had placed the Reference
folder in a central location so I could refer to it from multiple projects
without having to copy it to each new project directory, but I've tried it
with a local copy and it made no difference - I still get the build errors.)
The default properties (Build Action and Custom Tool) of .g files in Visual
Studio are set to the correct ones, so I didn't need to change them.

[Aside: Actually, on the subject of Intellisense, there does appear to be a
bug in the Visual Studio installer, since a file is not installed correctly,
and the Intellisense wouldn't work. To fix it, I opened the vsix file
manually (in WinRar) and copied the file
Tvl.VisualStudio.Shell.OutputWindow.Interfaces.dll to C:\Program Files
(x86)\Microsoft Visual Studio
10.0\Common7\IDE\CommonExtensions\Microsoft\Editor]

Anyway, back to the main points...
Yes, I'm using 3.4.1.9004 version, and no, I didn't make any changes to the
.targets file.

Thanks again,
Glenn.

> -----Original Message-----
> From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> Sent: 17 July 2012 18:49
> To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> A few more questions:
> 
> Did you follow the instructions in the Documentation section here? In 
> particular, can you verify that sections 1.4 and 2.1 were incorporated 
> correctly?
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> 
> Are you using the 3.4.1.9004 release of the C# port of ANTLR 3?
> 
> Did you make any changes to the .targets file from the one included in 
> the Releases listed on that page?
> 
> Thanks,
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> 
> -----Original Message-----
> From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> Sent: Tuesday, July 17, 2012 11:48 AM
> To: 'Sam Harwell'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> Hi Sam:
> 
> I don't try to reference FormulaLexer or FormulaParser in the XAML 
> file,
but I
> need some of the other classes in the FormulaPlotter namespace in the 
> XAML. I've tried putting the ANTLR stuff in a different namespace from 
> the MainWindow stuff, but it doesn't help.
> I've also tried putting the C# code that references the ANTLR stuff in 
> a separate namespace from MainWindow but that didn't help either.
> 
> Basically, the program has a DataGrid which is data-bound to a 
> DataTable,
in
> which I store the strings representing the formulas to be plotted and 
> the colour of the plot line and so on. The user enters the formula and 
> colour
in
> the DataGrid in the GUI and these are connected to the DataTable via 
> data binding.
> So I'd like to be able to refer to the DataTable in the XAML in order 
> to
bind
> some of the display properties to entries in the DataTable.
> 
> The errors cause the build to fail. I know that sometimes ANTLR will 
> show errors in the errors window which go away when you do a build, 
> but these errors are 'real'
> errors
> that cause a build fail.
> 
> > -----Original Message-----
> > From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> > Sent: 17 July 2012 17:38
> > To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Problem with integrating ANTLR with 
> > XAML
> >
> > Hi Glenn,
> >
> > I have a couple questions to get started:
> >
> > 1. Are you trying to reference FormulaLexer within the XAML file, or 
> > does
> it
> > just happen to be located in the namespace FormulaPlotter?
> > 2. Are the errors causing the build to fail, or simply showing in 
> > the
> errors
> > window while editing your project?
> >
> > Thanks,
> > --
> > Sam Harwell
> > Owner, Lead Developer
> > http://tunnelvisionlabs.com
> >
> > -----Original Message-----
> > From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> > Sent: Tuesday, July 17, 2012 9:56 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Problem with integrating ANTLR with XAML
> >
> > I'm relatively new to ANTLR and as a test I wrote a sample program 
> > that
> uses
> > ANTLR to define a grammar that allows
> >
> > mathematical expressions such as x^2 + 4*x*cos(x) to be entered and 
> > then have a graph of the function drawn.
> >
> > The program is written in C# using WPF and XAML to define the 
> > layout, and uses the ANTLR3 plugin for Visual Studio 2010.
> >
> >
> >
> > Everything works fine unless I try to define an xmlns namespace 
> > alias for
> the
> > local namespace in which the program's code is written
> >
> > in MainWindow.xaml. That is, I add the line
> >
> >
> >
> > xmlns:local="clr-namespace:FormulaPlotter"
> >
> >
> >
> > to the Window tag at the start of the XAML file, where 
> > FormulaPlotter is
> the
> > namespace of my code. Doing this generates 8
> >
> > errors of the sort
> >
> >
> >
> > FormulaLexer does not have a constructor with 1 argument (although 
> > it
> > does)
> >
> > start() method not found
> >
> >
> >
> > and other errors complaining about constructors or methods in the 
> > lexer or parser not being found.
> >
> >
> >
> > The only workaround I have found for this is to write the relevant 
> > bits of
> the
> > program in the C# code-behind file,
> >
> > which is quite awkward for some of the stuff I want to do.
> >
> >
> >
> > Does anyone know of a fix for this problem?
> >
> > Thanks.
> >
> > Glenn.
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addre
> > ss


From banmate6 at aol.com  Tue Jul 17 14:44:18 2012
From: banmate6 at aol.com (banmate6 at aol.com)
Date: Tue, 17 Jul 2012 17:44:18 -0400 (EDT)
Subject: [antlr-interest] We Need UTF-8 String Literal Support for C
	Parser/Lexer
In-Reply-To: <1342525609614-7578398.post@n2.nabble.com>
References: <1342167152839-7578377.post@n2.nabble.com>
	<1342442279480-7578394.post@n2.nabble.com>
	<CAP86aOf2Nr5_tKepcOjs_QwicEUshFLY3nckK-auiKBc4izFPw@mail.gmail.com>
	<1342525609614-7578398.post@n2.nabble.com>
Message-ID: <8CF327C73C4BE26-D60-8E59@web-mmc-d06.sysops.aol.com>



 
Hello Folks

I have a basic expression grammar that specifies the production of abstract syntax trees (AST) of:

column (this represents a database column)

functions

Boolean: "and", "or", "not" 

Equality/Relational: "=", "!=", ">", etc
Arithmetic: "+", "-", etc


literals

int, float
string


In our case, we have an expression of the following form, taken from a tag in an XML document using the TinyXML C API. 



    col1 = "UTF-8 string"


The AST looks as so, as might be expected:


relational node, "=" function
    child node 1, column
    child node 2, literal string


Unfortunately, the literal string in child node 2 is incorrectly a 4 byte string, when in the original UTF-8 it is 6 bytes. We are not sure if TinyXML is mishandling the UTF-8 literal or if it is ANTLR. 
We will do more testing to find out.


However, does anybody have suggestions in advance that might explain this? Does ANTLR generating C code in fact handle string literals of UTF-8 in this context? Is there something I must do in order to handle UTF-8?

For your information, the version of ANTLR we are using came from "libantlr3c-3.2.tar". I am not sure if this version handles UTF-8. Again, any advice or insight is appreciated.



Cheers, Mate


From jimi at temporal-wave.com  Tue Jul 17 14:48:27 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 Jul 2012 14:48:27 -0700
Subject: [antlr-interest] We Need UTF-8 String Literal Support for C
	Parser/Lexer
In-Reply-To: <8CF327C73C4BE26-D60-8E59@web-mmc-d06.sysops.aol.com>
References: <1342167152839-7578377.post@n2.nabble.com>	<1342442279480-7578394.post@n2.nabble.com>
	<CAP86aOf2Nr5_tKepcOjs_QwicEUshFLY3nckK-auiKBc4izFPw@mail.gmail.com>
	<1342525609614-7578398.post@n2.nabble.com>
	<8CF327C73C4BE26-D60-8E59@web-mmc-d06.sysops.aol.com>
Message-ID: <a0cf5e91ccc6222ae1f157a83f48f3f4@mail.gmail.com>

You need to run version 3.4 and set the input encoding to UTF8.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of banmate6 at aol.com
> Sent: Tuesday, July 17, 2012 2:44 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] We Need UTF-8 String Literal Support for C
> Parser/Lexer
>
>
>
>
> Hello Folks
>
> I have a basic expression grammar that specifies the production of
> abstract syntax trees (AST) of:
>
> column (this represents a database column)
>
> functions
>
> Boolean: "and", "or", "not"
>
> Equality/Relational: "=", "!=", ">", etc
> Arithmetic: "+", "-", etc
>
>
> literals
>
> int, float
> string
>
>
> In our case, we have an expression of the following form, taken from a
> tag in an XML document using the TinyXML C API.
>
>
>
>     col1 = "UTF-8 string"
>
>
> The AST looks as so, as might be expected:
>
>
> relational node, "=" function
>     child node 1, column
>     child node 2, literal string
>
>
> Unfortunately, the literal string in child node 2 is incorrectly a 4
> byte string, when in the original UTF-8 it is 6 bytes. We are not sure
> if TinyXML is mishandling the UTF-8 literal or if it is ANTLR.
> We will do more testing to find out.
>
>
> However, does anybody have suggestions in advance that might explain
> this? Does ANTLR generating C code in fact handle string literals of
> UTF-8 in this context? Is there something I must do in order to handle
> UTF-8?
>
> For your information, the version of ANTLR we are using came from
> "libantlr3c-3.2.tar". I am not sure if this version handles UTF-8.
> Again, any advice or insight is appreciated.
>
>
>
> Cheers, Mate
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From siegel at udel.edu  Tue Jul 17 17:34:49 2012
From: siegel at udel.edu (Stephen Siegel)
Date: Tue, 17 Jul 2012 20:34:49 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
	curly braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
Message-ID: <0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>

You could use a boolean variable added to the lexer "inBlock".  Initially it is false.  Set it to true just after matching the LCURLY and back to false after matching RCURLY in the block rule.   They you could define the BLOCK_DATA token using inBlock as a guard (I think that's called a "semantic predicate").  BLOCK_DATA should match anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY in the block data, or how would you know when the block ends? -- just like a comment in C, for example.)
-Steve

On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:

> Hello,
> 
> We have a requirement where we need to include a block of arbitrary text in a block, like so:
> 
> BLOCK { some arbitrary text here }
> 
> We initially got around this by making the whole block a token, like:
> 
> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> 
> but this is less than ideal.  I am thinking that we would use something like:
> 
> block : BLOCK RCURLY BLOCK_DATA LCURLY
> 
> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
> 
> I am stuck on specifying BLOCK_DATA which is basically .* to the lexer.  I have attempted to access the input stream from the parser RECOGNIZER but have not been able to come up with a solution.
> 
> I am looking to basically hijack the input stream after seeing a BLOCK token so I can read the arbitrary text; I can parse out the  { } as needed.
> 
> Is this possible?
> 
> --
> Burton Samograd
> 
> ________________________________
> This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page
> 
> Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at lischke-online.de  Wed Jul 18 00:39:45 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 18 Jul 2012 09:39:45 +0200
Subject: [antlr-interest] Reading block of arbitrary text delimited by
	curly	braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E4733885@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<D2A5C7470D67A54FACE86B838946D49D14E4733885@NJ4MSGSCR02.markit.partners>
Message-ID: <5489A422-7DA7-430F-82F1-585FCD4C0645@lischke-online.de>

> I missed a quote in the previous message, our single token block reader was this:
> 
> BLOCK : 'BLOCK' (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> 

You didn't say why your original lexer rule is not ideal. I'd suggest however a slightly changed variant:

BLOCK: 'BLOCK' '{' (options { greedy = false; }: .)* '}';

There's no need to explicitly catch whitespaces between the BLOCK keyword and the opening curly brace if you declare a whitespace rule like this:

WS: (' ' | '\t' | '\n' | '\r')+ { $channel=TokenChannels.Hidden; };

Additionally, the implementation for .* is clever enough to exclude the token(s) following the .* expression (here the closing curly brace). You just have to make this matching non-greedy otherwise the scanner will try to match anything (including closing curly braces) until the last one in the input.

Btw. this is a very typical lexer rule to collect C multi-line comments and similar constructs.

Mike
-- 
www.soft-gems.net



From marinos at studyhood.com  Wed Jul 18 04:45:20 2012
From: marinos at studyhood.com (studyhood)
Date: Wed, 18 Jul 2012 04:45:20 -0700 (PDT)
Subject: [antlr-interest] how to call a rule/token from its including
	rule
In-Reply-To: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>
References: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>
Message-ID: <1342611920304-7578411.post@n2.nabble.com>

Anyone here please?

--
View this message in context: http://antlr.1301665.n2.nabble.com/how-to-call-a-rule-token-from-its-including-rule-tp7578397p7578411.html
Sent from the ANTLR mailing list archive at Nabble.com.

From bkiers at gmail.com  Wed Jul 18 05:01:11 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 18 Jul 2012 14:01:11 +0200
Subject: [antlr-interest] how to call a rule/token from its including
	rule
In-Reply-To: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>
References: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>
Message-ID: <CAOrgODbKmwXLNKGQsFT_s5i8Ne-7L2mjNCu_DdRdTFK+E6F-=w@mail.gmail.com>

On Mon, Jul 16, 2012 at 5:41 PM, Marinos Georgiades
<marinos at studyhood.com>wrote:

> Hello,
>
> I am new to ANTLR, so I am trying to learn the basics.
> I would like to know how I can call a rule or token which is defined
> within another rule, as in the example below:
>
> description
> :'Description' ':' primaryActor.actorName ......
> ;
>
> primaryActor
> :actorName PA_TYPE
> ;
>
> secondaryActor
> :actorName | SA_TYPE
> ;
>
> actorName
> :ARTICLE SMALL_NOUN
> ;
> So, 'primaryActor' and 'secondaryActor' both have an 'actorName'. When the
> user will write the actual syntax "e.g. 'Description: a Doctor...", 'Doctor
> should be assigned to 'primaryActor.actorName. Because 'actorName' is of
> the same type for both primary and secondary actors, I don't want to create
> an actorName for each one of them but being able to distinguish the
> actorName (sub-rule/token) through its  including rule.
>
>
I don't quite follow. If you want to match an `actorName`, why would you
want to write `primaryActor.actorName` (which isn't possible, btw) instead
of just writing `actorName` like this:

description
:'Description' ':' actorName
;

Regards,

Bart.

From marinos at studyhood.com  Wed Jul 18 05:10:05 2012
From: marinos at studyhood.com (Marinos Georgiades)
Date: Wed, 18 Jul 2012 05:10:05 -0700 (PDT)
Subject: [antlr-interest] how to call a rule/token from its including
	rule
In-Reply-To: <CAOrgODbKmwXLNKGQsFT_s5i8Ne-7L2mjNCu_DdRdTFK+E6F-=w@mail.gmail.com>
References: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>
	<CAOrgODbKmwXLNKGQsFT_s5i8Ne-7L2mjNCu_DdRdTFK+E6F-=w@mail.gmail.com>
Message-ID: <1342613405.92525.YahooMailNeo@web5720.biz.mail.ne1.yahoo.com>

Hi,

and thank you for your reply.

If I just call the 'actorName', then once I write the actual syntax and replace 'actorName' with a value, (e.g. 'Doctor'), the parser will not be able to distinguish if it is the actorName of the PrimaryActor or the actorName of the SecondaryActor. Both 'primaryActor' and 'secondaryActor' have an actorName of the same type.?I don't want to create an actorName for each one of them but being able to distinguish the actorName (sub-rule/token) through its including rule.?

?
Thank you,

Marinos

________________________________
 From: Bart Kiers <bkiers at gmail.com>
To: Marinos Georgiades <marinos at studyhood.com> 
Cc: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org> 
Sent: Wednesday, July 18, 2012 3:01 PM
Subject: Re: [antlr-interest] how to call a rule/token from its including rule
 




On Mon, Jul 16, 2012 at 5:41 PM, Marinos Georgiades <marinos at studyhood.com> wrote:

Hello,
>
>I am new to ANTLR, so I am trying to learn the basics.?
>I would like to know how I can call a rule or token which is defined within another rule, as in the example below:
>
>description
>:'Description' ':' primaryActor.actorName ......
>;
>
>primaryActor
>:actorName PA_TYPE
>;
>
>secondaryActor
>:actorName | SA_TYPE
>;
>
>actorName
>:ARTICLE SMALL_NOUN
>;
>So, 'primaryActor' and 'secondaryActor' both have an 'actorName'. When the user will write the actual syntax "e.g. 'Description: a Doctor...", 'Doctor should be assigned to 'primaryActor.actorName. Because 'actorName' is of the same type for both primary and secondary actors, I don't want to create an actorName for each one of them but being able to distinguish the actorName (sub-rule/token) through its ?including rule.
>
>

I don't quite follow. If you want to match an `actorName`, why would you want to write `primaryActor.actorName` (which isn't possible, btw) instead of just writing `actorName` like this:


description
:'Description' ':' actorName
;

Regards,

Bart.

From marinos at studyhood.com  Wed Jul 18 06:08:46 2012
From: marinos at studyhood.com (Marinos Georgiades)
Date: Wed, 18 Jul 2012 06:08:46 -0700 (PDT)
Subject: [antlr-interest] assign a value to a token
Message-ID: <1342616926.38174.YahooMailNeo@web5717.biz.mail.ne1.yahoo.com>

I would like to assign the value of a token to a variable, so as I will be able to use that variable through my grammar (I am sorry if I don't use the right terminology).

?For example, I have the following rules (I am quoting part of them for simplification):

useCaseSpecification
:'UseCase:' ucName '='
description
statePre
.......
;

ucName
:caren io
;

caren
:?'create' | 'alter' | 'read'
;

io
:ioName ioType
;

ioName
:?ARTICLE NOUN
;

description
:'Description' ':' ucName ......
;

statePre
:io 'is 'at' state 'state' '.' 'Triggered' 'by' 'UseCase' ':' ucName
;

A test syntax can go like this:

UseCase: create Prescription =?
Description: create Prescription
Examination is at ....... Triggered by UseCase: Create Examination

In this example, ucName is assigned the values 'create Prescription' for line 1 and 2, and the value 'Create Examination' for line 3. However, someone can write something else, e.g. 'read Book' for line 2. And I don't want it to be like this. I want the ucName of the rule 'description' to be the same with the ucName of the rule useCaseSpecificaton. And I want the ucName of the rule statePre to be different from the others.
From what I read , there must be a way with the use of Java code, but I haven't managed to make it work. I would really appreciate if someone could help me.

Thank you,

Marinos

From burton.samograd at markit.com  Wed Jul 18 07:55:59 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Wed, 18 Jul 2012 10:55:59 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>

Is this what you are suggesting?

// Global
bool inBlockData = false;

// Parser
block
    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY { inBlockData = false; }
        -> ^(BLOCK BLOCK_DATA)
    ;

// Lexer
BLOCK : 'BLOCK' ;
BLOCK_DATA : { inBlockData }?=> (~'}')* ;

Using this technique gets me a bit further, but I am getting a
recognition exception when I hit the BLOCK_DATA like it is still going
through my original lexer/parser and not collecting the BLOCK_DATA
like I would like it to.

I did some reading on semantic predicates but literature just gave examples
for parser rules so I am not sure if I applied the concept to lexer rules properly.

--
Burton Samograd

-----Original Message-----
From: Stephen Siegel [mailto:siegel at udel.edu]
Sent: Tuesday, July 17, 2012 6:35 PM
To: Burton Samograd
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading block of arbitrary text delimited by curly braces

You could use a boolean variable added to the lexer "inBlock".  Initially it is false.  Set it to true just after matching the LCURLY and back to false after matching RCURLY in the block rule.   They you could define the BLOCK_DATA token using inBlock as a guard (I think that's called a "semantic predicate").  BLOCK_DATA should match anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY in the block data, or how would you know when the block ends? -- just like a comment in C, for example.)
-Steve

On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:

> Hello,
>
> We have a requirement where we need to include a block of arbitrary text in a block, like so:
>
> BLOCK { some arbitrary text here }
>
> We initially got around this by making the whole block a token, like:
>
> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
>
> but this is less than ideal.  I am thinking that we would use something like:
>
> block : BLOCK RCURLY BLOCK_DATA LCURLY
>
> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
>
> I am stuck on specifying BLOCK_DATA which is basically .* to the lexer.  I have attempted to access the input stream from the parser RECOGNIZER but have not been able to come up with a solution.
>
> I am looking to basically hijack the input stream after seeing a BLOCK token so I can read the arbitrary text; I can parse out the  { } as needed.
>
> Is this possible?
>
> --
> Burton Samograd
>
> ________________________________
> This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From siegel at udel.edu  Wed Jul 18 09:14:58 2012
From: siegel at udel.edu (Stephen Siegel)
Date: Wed, 18 Jul 2012 12:14:58 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
	curly braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
Message-ID: <A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>

Yeah, but maybe it can't work.  I think the fundamental problem is that what you consider to be a token depends on the state of the parser, so some communication has to place from the parser to the lexer, which is weird.  It makes more sense to make the whole "BLOCK {?}" one token, as Mike wrote.  Here is a complete grammer which I ran on some examples and works fine:

grammar exp;

file	:	BLOCK* EOF;

BLOCK	:	'BLOCK' WS* LCURLY ( options {greedy=false;} : . )* RCURLY
	;
	
LCURLY	:	'{';
RCURLY	:	'}';

WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;


The "BLOCK {" and "}" do appear in the token text but there is probably some way to get rid of them. 

On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:

> Is this what you are suggesting?
> 
> // Global
> bool inBlockData = false;
> 
> // Parser
> block
>    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY { inBlockData = false; }
>        -> ^(BLOCK BLOCK_DATA)
>    ;
> 
> // Lexer
> BLOCK : 'BLOCK' ;
> BLOCK_DATA : { inBlockData }?=> (~'}')* ;
> 
> Using this technique gets me a bit further, but I am getting a
> recognition exception when I hit the BLOCK_DATA like it is still going
> through my original lexer/parser and not collecting the BLOCK_DATA
> like I would like it to.
> 
> I did some reading on semantic predicates but literature just gave examples
> for parser rules so I am not sure if I applied the concept to lexer rules properly.
> 
> --
> Burton Samograd
> 
> -----Original Message-----
> From: Stephen Siegel [mailto:siegel at udel.edu]
> Sent: Tuesday, July 17, 2012 6:35 PM
> To: Burton Samograd
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text delimited by curly braces
> 
> You could use a boolean variable added to the lexer "inBlock".  Initially it is false.  Set it to true just after matching the LCURLY and back to false after matching RCURLY in the block rule.   They you could define the BLOCK_DATA token using inBlock as a guard (I think that's called a "semantic predicate").  BLOCK_DATA should match anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY in the block data, or how would you know when the block ends? -- just like a comment in C, for example.)
> -Steve
> 
> On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
> 
>> Hello,
>> 
>> We have a requirement where we need to include a block of arbitrary text in a block, like so:
>> 
>> BLOCK { some arbitrary text here }
>> 
>> We initially got around this by making the whole block a token, like:
>> 
>> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
>> 
>> but this is less than ideal.  I am thinking that we would use something like:
>> 
>> block : BLOCK RCURLY BLOCK_DATA LCURLY
>> 
>> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
>> 
>> I am stuck on specifying BLOCK_DATA which is basically .* to the lexer.  I have attempted to access the input stream from the parser RECOGNIZER but have not been able to come up with a solution.
>> 
>> I am looking to basically hijack the input stream after seeing a BLOCK token so I can read the arbitrary text; I can parse out the  { } as needed.
>> 
>> Is this possible?
>> 
>> --
>> Burton Samograd
>> 
>> ________________________________
>> This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page
>> 
>> Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> 
> This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page
> 
> Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.


From sam at tunnelvisionlabs.com  Wed Jul 18 09:22:41 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Wed, 18 Jul 2012 11:22:41 -0500
Subject: [antlr-interest] Problem with integrating ANTLR with XAML
References: <001501cd642c$52318c90$f694a5b0$@glennrowe.net>
	<001b01cd643a$8be45450$a3acfcf0$@tunnelvisionlabs.com>
	<001d01cd643b$e2c87b10$a8597130$@glennrowe.net>
	<001c01cd6444$71b34460$5519cd20$@tunnelvisionlabs.com>
	<002401cd644e$747a6f20$5d6f4d60$@glennrowe.net> 
Message-ID: <009c01cd6501$8f1e9050$ad5bb0f0$@tunnelvisionlabs.com>

I was able to reproduce and solve this problem based on additional
information Glenn sent me.

The build problem with XAML documents will be fixed in the next release of
the C# port of ANTLR 3. In the meantime, you can replace the Antlr3.targets
file from the 3.4.1.9004 release with the attached version which should be
properly working.

Thanks,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Sam Harwell [mailto:sam at tunnelvisionlabs.com] 
Sent: Tuesday, July 17, 2012 4:16 PM
To: 'Glenn Rowe (Orders)'; 'antlr-interest at antlr.org'
Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML

The IntelliSense issue is corrected in the latest release of the editor
extensions. You should be able to update the extension automatically within
the Visual Studio 2010 Extension Manager.

I'm not sure what the issue with the project is. Can you send me an example
project which I can use to reproduce this problem (directly to me, not to
the mailing list)?

Thanks,
--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net] 
Sent: Tuesday, July 17, 2012 2:01 PM
To: 'Sam Harwell'; antlr-interest at antlr.org
Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML

I've checked the points you mention and can confirm that I've implemented
sections 1.4 and 2.1 as stated in the docs. (I had placed the Reference
folder in a central location so I could refer to it from multiple projects
without having to copy it to each new project directory, but I've tried it
with a local copy and it made no difference - I still get the build errors.)
The default properties (Build Action and Custom Tool) of .g files in Visual
Studio are set to the correct ones, so I didn't need to change them.

[Aside: Actually, on the subject of Intellisense, there does appear to be a
bug in the Visual Studio installer, since a file is not installed correctly,
and the Intellisense wouldn't work. To fix it, I opened the vsix file
manually (in WinRar) and copied the file
Tvl.VisualStudio.Shell.OutputWindow.Interfaces.dll to C:\Program Files
(x86)\Microsoft Visual Studio
10.0\Common7\IDE\CommonExtensions\Microsoft\Editor]

Anyway, back to the main points...
Yes, I'm using 3.4.1.9004 version, and no, I didn't make any changes to the
.targets file.

Thanks again,
Glenn.

> -----Original Message-----
> From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> Sent: 17 July 2012 18:49
> To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> A few more questions:
> 
> Did you follow the instructions in the Documentation section here? In 
> particular, can you verify that sections 1.4 and 2.1 were incorporated 
> correctly?
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> 
> Are you using the 3.4.1.9004 release of the C# port of ANTLR 3?
> 
> Did you make any changes to the .targets file from the one included in 
> the Releases listed on that page?
> 
> Thanks,
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
> 
> 
> -----Original Message-----
> From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> Sent: Tuesday, July 17, 2012 11:48 AM
> To: 'Sam Harwell'; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Problem with integrating ANTLR with XAML
> 
> Hi Sam:
> 
> I don't try to reference FormulaLexer or FormulaParser in the XAML 
> file,
but I
> need some of the other classes in the FormulaPlotter namespace in the 
> XAML. I've tried putting the ANTLR stuff in a different namespace from 
> the MainWindow stuff, but it doesn't help.
> I've also tried putting the C# code that references the ANTLR stuff in 
> a separate namespace from MainWindow but that didn't help either.
> 
> Basically, the program has a DataGrid which is data-bound to a 
> DataTable,
in
> which I store the strings representing the formulas to be plotted and 
> the colour of the plot line and so on. The user enters the formula and 
> colour
in
> the DataGrid in the GUI and these are connected to the DataTable via 
> data binding.
> So I'd like to be able to refer to the DataTable in the XAML in order 
> to
bind
> some of the display properties to entries in the DataTable.
> 
> The errors cause the build to fail. I know that sometimes ANTLR will 
> show errors in the errors window which go away when you do a build, 
> but these errors are 'real'
> errors
> that cause a build fail.
> 
> > -----Original Message-----
> > From: Sam Harwell [mailto:sam at tunnelvisionlabs.com]
> > Sent: 17 July 2012 17:38
> > To: 'Glenn Rowe (Orders)'; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Problem with integrating ANTLR with 
> > XAML
> >
> > Hi Glenn,
> >
> > I have a couple questions to get started:
> >
> > 1. Are you trying to reference FormulaLexer within the XAML file, or 
> > does
> it
> > just happen to be located in the namespace FormulaPlotter?
> > 2. Are the errors causing the build to fail, or simply showing in 
> > the
> errors
> > window while editing your project?
> >
> > Thanks,
> > --
> > Sam Harwell
> > Owner, Lead Developer
> > http://tunnelvisionlabs.com
> >
> > -----Original Message-----
> > From: Glenn Rowe (Orders) [mailto:orders at glennrowe.net]
> > Sent: Tuesday, July 17, 2012 9:56 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Problem with integrating ANTLR with XAML
> >
> > I'm relatively new to ANTLR and as a test I wrote a sample program 
> > that
> uses
> > ANTLR to define a grammar that allows
> >
> > mathematical expressions such as x^2 + 4*x*cos(x) to be entered and 
> > then have a graph of the function drawn.
> >
> > The program is written in C# using WPF and XAML to define the 
> > layout, and uses the ANTLR3 plugin for Visual Studio 2010.
> >
> >
> >
> > Everything works fine unless I try to define an xmlns namespace 
> > alias for
> the
> > local namespace in which the program's code is written
> >
> > in MainWindow.xaml. That is, I add the line
> >
> >
> >
> > xmlns:local="clr-namespace:FormulaPlotter"
> >
> >
> >
> > to the Window tag at the start of the XAML file, where 
> > FormulaPlotter is
> the
> > namespace of my code. Doing this generates 8
> >
> > errors of the sort
> >
> >
> >
> > FormulaLexer does not have a constructor with 1 argument (although 
> > it
> > does)
> >
> > start() method not found
> >
> >
> >
> > and other errors complaining about constructors or methods in the 
> > lexer or parser not being found.
> >
> >
> >
> > The only workaround I have found for this is to write the relevant 
> > bits of
> the
> > program in the C# code-behind file,
> >
> > which is quite awkward for some of the stuff I want to do.
> >
> >
> >
> > Does anyone know of a fix for this problem?
> >
> > Thanks.
> >
> > Glenn.
> >
> >
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addre
> > ss
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Antlr3.targets.zip
Type: application/octet-stream
Size: 2209 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120718/6d465103/attachment.obj 

From jimi at temporal-wave.com  Wed Jul 18 09:32:25 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2012 09:32:25 -0700
Subject: [antlr-interest] how to call a rule/token from its including
	rule
In-Reply-To: <1342613405.92525.YahooMailNeo@web5720.biz.mail.ne1.yahoo.com>
References: <1342453319.20022.YahooMailNeo@web5718.biz.mail.ne1.yahoo.com>
	<CAOrgODbKmwXLNKGQsFT_s5i8Ne-7L2mjNCu_DdRdTFK+E6F-=w@mail.gmail.com>
	<1342613405.92525.YahooMailNeo@web5720.biz.mail.ne1.yahoo.com>
Message-ID: <f82cdf48b65211904f97166ae7503109@mail.gmail.com>

I think you need to step away from your current problem and do some
reading on how lexers and parsers work - the problem is that you are
asking the wrong questions and we won't really be able to help until you
have a better understanding of the technologies you are trying to use. You
might start with the ANTLR book itself if you can afford the $$, otherwise
start with the articles in the wiki and the examples that you can
download.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Marinos Georgiades
> Sent: Wednesday, July 18, 2012 5:10 AM
> To: Bart Kiers
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] how to call a rule/token from its
> including rule
>
> Hi,
>
> and thank you for your reply.
>
> If I just call the 'actorName', then once I write the actual syntax and
> replace 'actorName' with a value, (e.g. 'Doctor'), the parser will not
> be able to distinguish if it is the actorName of the PrimaryActor or
> the actorName of the SecondaryActor. Both 'primaryActor' and
> 'secondaryActor' have an actorName of the same type.?I don't want to
> create an actorName for each one of them but being able to distinguish
> the actorName (sub-rule/token) through its including rule.
>
>
> Thank you,
>
> Marinos
>
> ________________________________
>  From: Bart Kiers <bkiers at gmail.com>
> To: Marinos Georgiades <marinos at studyhood.com>
> Cc: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> Sent: Wednesday, July 18, 2012 3:01 PM
> Subject: Re: [antlr-interest] how to call a rule/token from its
> including rule
>
>
>
>
>
> On Mon, Jul 16, 2012 at 5:41 PM, Marinos Georgiades
> <marinos at studyhood.com> wrote:
>
> Hello,
> >
> >I am new to ANTLR, so I am trying to learn the basics. I would like to
> >know how I can call a rule or token which is defined within another
> rule, as in the example below:
> >
> >description
> >:'Description' ':' primaryActor.actorName ......
> >;
> >
> >primaryActor
> >:actorName PA_TYPE
> >;
> >
> >secondaryActor
> >:actorName | SA_TYPE
> >;
> >
> >actorName
> >:ARTICLE SMALL_NOUN
> >;
> >So, 'primaryActor' and 'secondaryActor' both have an 'actorName'. When
> the user will write the actual syntax "e.g. 'Description: a Doctor...",
> 'Doctor should be assigned to 'primaryActor.actorName. Because
> 'actorName' is of the same type for both primary and secondary actors,
> I don't want to create an actorName for each one of them but being able
> to distinguish the actorName (sub-rule/token) through its ?including
> rule.
> >
> >
>
> I don't quite follow. If you want to match an `actorName`, why would
> you want to write `primaryActor.actorName` (which isn't possible, btw)
> instead of just writing `actorName` like this:
>
>
> description
> :'Description' ':' actorName
> ;
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From burton.samograd at markit.com  Wed Jul 18 09:49:39 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Wed, 18 Jul 2012 12:49:39 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
	<A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>

To clarify why pulling in the block as a whole token was not ideal, we did have it working that way but an issue was presented where we would like to give a better error message when the curlies are forgotten.  Initially I tried to create another block matching rule that started with 'BLOCK' and searched for any character that was not a { and used that in an alternate match rule but it caused issues in other parts of the parser which made little sense.  This is why I am looking to break the block rule out of Its single lexer token implementation if it's possible.

--
Burton Samograd

-----Original Message-----
From: Stephen Siegel [mailto:siegel at udel.edu]
Sent: Wednesday, July 18, 2012 10:15 AM
To: Burton Samograd
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading block of arbitrary text delimited by curly braces

Yeah, but maybe it can't work.  I think the fundamental problem is that what you consider to be a token depends on the state of the parser, so some communication has to place from the parser to the lexer, which is weird.  It makes more sense to make the whole "BLOCK {...}" one token, as Mike wrote.  Here is a complete grammer which I ran on some examples and works fine:

grammar exp;

file    :       BLOCK* EOF;

BLOCK   :       'BLOCK' WS* LCURLY ( options {greedy=false;} : . )* RCURLY
        ;

LCURLY  :       '{';
RCURLY  :       '}';

WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
    ;


The "BLOCK {" and "}" do appear in the token text but there is probably some way to get rid of them.

On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:

> Is this what you are suggesting?
>
> // Global
> bool inBlockData = false;
>
> // Parser
> block
>    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY { inBlockData = false; }
>        -> ^(BLOCK BLOCK_DATA)
>    ;
>
> // Lexer
> BLOCK : 'BLOCK' ;
> BLOCK_DATA : { inBlockData }?=> (~'}')* ;
>
> Using this technique gets me a bit further, but I am getting a
> recognition exception when I hit the BLOCK_DATA like it is still going
> through my original lexer/parser and not collecting the BLOCK_DATA
> like I would like it to.
>
> I did some reading on semantic predicates but literature just gave
> examples for parser rules so I am not sure if I applied the concept to lexer rules properly.
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: Stephen Siegel [mailto:siegel at udel.edu]
> Sent: Tuesday, July 17, 2012 6:35 PM
> To: Burton Samograd
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text
> delimited by curly braces
>
> You could use a boolean variable added to the lexer "inBlock".  Initially it is false.  Set it to true just after matching the LCURLY and back to false after matching RCURLY in the block rule.   They you could define the BLOCK_DATA token using inBlock as a guard (I think that's called a "semantic predicate").  BLOCK_DATA should match anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY in the block data, or how would you know when the block ends? -- just like a comment in C, for example.)
> -Steve
>
> On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
>
>> Hello,
>>
>> We have a requirement where we need to include a block of arbitrary text in a block, like so:
>>
>> BLOCK { some arbitrary text here }
>>
>> We initially got around this by making the whole block a token, like:
>>
>> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
>>
>> but this is less than ideal.  I am thinking that we would use something like:
>>
>> block : BLOCK RCURLY BLOCK_DATA LCURLY
>>
>> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
>>
>> I am stuck on specifying BLOCK_DATA which is basically .* to the lexer.  I have attempted to access the input stream from the parser RECOGNIZER but have not been able to come up with a solution.
>>
>> I am looking to basically hijack the input stream after seeing a BLOCK token so I can read the arbitrary text; I can parse out the  { } as needed.
>>
>> Is this possible?
>>
>> --
>> Burton Samograd
>>
>> ________________________________
>> This e-mail, including accompanying communications and attachments,
>> is strictly confidential and only for the intended recipient. Any
>> retention, use or disclosure not expressly authorised by Markit is
>> prohibited. This email is subject to all waivers and other terms at
>> the following link:
>> http://www.markit.com/en/about/legal/email-disclaimer.page
>>
>> Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>> s
>
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at
> the following link:
> http://www.markit.com/en/about/legal/email-disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.


This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From francis.andre.kampbell at orange.fr  Wed Jul 18 09:57:47 2012
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Wed, 18 Jul 2012 18:57:47 +0200
Subject: [antlr-interest] ANTLRv2.7.7 versus ANTLRv3.4:
 specialStateTransition(int, IntStream) is exceeding the 65535
Message-ID: <5006EB0B.10108@orange.fr>

Hi

I am currently trying to move from antlr v2.7.7 to antlr v3;4 a huge grammar (> 
3500 lines) and I got this error message on the lexer grammar while the grammar 
was compiling fine with antlr v2.7.7

The code of method specialStateTransition(int, IntStream) is exceeding the 65535 
bytes limit    NaturalProgramLexer.java 
  /com.pac.ndt.core/cmp/com/pac/ndt/core/cmp/antlr3    line 25942  Java Problem

How to solve this problem??

TIA

Francis


From jimi at temporal-wave.com  Wed Jul 18 10:33:34 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2012 10:33:34 -0700
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
	<A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>
Message-ID: <17f50286cf37ae7e53ec9885a25d4b51@mail.gmail.com>

You will have to handle this in the lexer - you are trying to perform
syntax driven lexing and this requires context and communication between
the parser and the lexer and is either not going to work at all, or will
fail in seemingly strange ways.


BLOCK: 'BLOCK'
       (
           (
               '{'
             | { error("Missing opening brace for BLOCK"); }
           )

{ /* Could set token start here */ }

              (~'}')*

{ /* Could set token end here by calling emit(); }

                 (   '}'  // Good
                   | { error("Missing closing brace"); }
                 )
       )
;

You might need to tweak the above for your needs, but you are not going to
make this work correctly from the parser. You could fake lexer states so
that you get more than one token in the stream, but your errors are so
simple, that I personally would not bother.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Burton Samograd
> Sent: Wednesday, July 18, 2012 9:50 AM
> To: Stephen Siegel
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text delimited
> by curly braces
>
> To clarify why pulling in the block as a whole token was not ideal, we
> did have it working that way but an issue was presented where we would
> like to give a better error message when the curlies are forgotten.
> Initially I tried to create another block matching rule that started
> with 'BLOCK' and searched for any character that was not a { and used
> that in an alternate match rule but it caused issues in other parts of
> the parser which made little sense.  This is why I am looking to break
> the block rule out of Its single lexer token implementation if it's
> possible.
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: Stephen Siegel [mailto:siegel at udel.edu]
> Sent: Wednesday, July 18, 2012 10:15 AM
> To: Burton Samograd
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text delimited
> by curly braces
>
> Yeah, but maybe it can't work.  I think the fundamental problem is that
> what you consider to be a token depends on the state of the parser, so
> some communication has to place from the parser to the lexer, which is
> weird.  It makes more sense to make the whole "BLOCK {...}" one token,
> as Mike wrote.  Here is a complete grammer which I ran on some examples
> and works fine:
>
> grammar exp;
>
> file    :       BLOCK* EOF;
>
> BLOCK   :       'BLOCK' WS* LCURLY ( options {greedy=false;} : . )*
> RCURLY
>         ;
>
> LCURLY  :       '{';
> RCURLY  :       '}';
>
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>     ;
>
>
> The "BLOCK {" and "}" do appear in the token text but there is probably
> some way to get rid of them.
>
> On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:
>
> > Is this what you are suggesting?
> >
> > // Global
> > bool inBlockData = false;
> >
> > // Parser
> > block
> >    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY {
> inBlockData = false; }
> >        -> ^(BLOCK BLOCK_DATA)
> >    ;
> >
> > // Lexer
> > BLOCK : 'BLOCK' ;
> > BLOCK_DATA : { inBlockData }?=> (~'}')* ;
> >
> > Using this technique gets me a bit further, but I am getting a
> > recognition exception when I hit the BLOCK_DATA like it is still
> going
> > through my original lexer/parser and not collecting the BLOCK_DATA
> > like I would like it to.
> >
> > I did some reading on semantic predicates but literature just gave
> > examples for parser rules so I am not sure if I applied the concept
> to lexer rules properly.
> >
> > --
> > Burton Samograd
> >
> > -----Original Message-----
> > From: Stephen Siegel [mailto:siegel at udel.edu]
> > Sent: Tuesday, July 17, 2012 6:35 PM
> > To: Burton Samograd
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > You could use a boolean variable added to the lexer "inBlock".
> Initially it is false.  Set it to true just after matching the LCURLY
> and back to false after matching RCURLY in the block rule.   They you
> could define the BLOCK_DATA token using inBlock as a guard (I think
> that's called a "semantic predicate").  BLOCK_DATA should match
> anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY in
> the block data, or how would you know when the block ends? -- just like
> a comment in C, for example.)
> > -Steve
> >
> > On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
> >
> >> Hello,
> >>
> >> We have a requirement where we need to include a block of arbitrary
> text in a block, like so:
> >>
> >> BLOCK { some arbitrary text here }
> >>
> >> We initially got around this by making the whole block a token,
> like:
> >>
> >> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> >>
> >> but this is less than ideal.  I am thinking that we would use
> something like:
> >>
> >> block : BLOCK RCURLY BLOCK_DATA LCURLY
> >>
> >> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
> >>
> >> I am stuck on specifying BLOCK_DATA which is basically .* to the
> lexer.  I have attempted to access the input stream from the parser
> RECOGNIZER but have not been able to come up with a solution.
> >>
> >> I am looking to basically hijack the input stream after seeing a
> BLOCK token so I can read the arbitrary text; I can parse out the  { }
> as needed.
> >>
> >> Is this possible?
> >>
> >> --
> >> Burton Samograd
> >>
> >> ________________________________
> >> This e-mail, including accompanying communications and attachments,
> >> is strictly confidential and only for the intended recipient. Any
> >> retention, use or disclosure not expressly authorised by Markit is
> >> prohibited. This email is subject to all waivers and other terms at
> >> the following link:
> >> http://www.markit.com/en/about/legal/email-disclaimer.page
> >>
> >> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >
> >
> > This e-mail, including accompanying communications and attachments,
> is
> > strictly confidential and only for the intended recipient. Any
> > retention, use or disclosure not expressly authorised by Markit is
> > prohibited. This email is subject to all waivers and other terms at
> > the following link:
> > http://www.markit.com/en/about/legal/email-disclaimer.page
> >
> > Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
>
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at the
> following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed Jul 18 10:35:53 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2012 10:35:53 -0700
Subject: [antlr-interest] ANTLRv2.7.7 versus ANTLRv3.4:
 specialStateTransition(int, IntStream) is exceeding the 65535
In-Reply-To: <5006EB0B.10108@orange.fr>
References: <5006EB0B.10108@orange.fr>
Message-ID: <213b6e251bfadc039db7187e0cf5cc9a@mail.gmail.com>

Simplify the lexer rule that generates this transition. Look at the Java
code, and you should be able to see the rule that causes this.

I suspect though that this is just an error in the lexer that you have yet
to fix, and is part of the conversion process.

We cannot help any further without seeing the lexer grammar that is
causing this.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Francis ANDRE
> Sent: Wednesday, July 18, 2012 9:58 AM
> To: antlr ANTLR
> Subject: [antlr-interest] ANTLRv2.7.7 versus ANTLRv3.4:
> specialStateTransition(int, IntStream) is exceeding the 65535
>
> Hi
>
> I am currently trying to move from antlr v2.7.7 to antlr v3;4 a huge
> grammar (>
> 3500 lines) and I got this error message on the lexer grammar while the
> grammar was compiling fine with antlr v2.7.7
>
> The code of method specialStateTransition(int, IntStream) is exceeding
> the 65535
> bytes limit    NaturalProgramLexer.java
>   /com.pac.ndt.core/cmp/com/pac/ndt/core/cmp/antlr3    line 25942  Java
> Problem
>
> How to solve this problem??
>
> TIA
>
> Francis
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From burton.samograd at markit.com  Wed Jul 18 11:44:18 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Wed, 18 Jul 2012 14:44:18 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <17f50286cf37ae7e53ec9885a25d4b51@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
	<A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>
	<17f50286cf37ae7e53ec9885a25d4b51@mail.gmail.com>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E47338DD@NJ4MSGSCR02.markit.partners>

Good idea but giving the ( '{' | ... ) alternative gives me multiple alternative warnings/errors, possibly because we already have LCURLY defined as a lexer token:

warning(200): SDL.g:869:35: Decision can match input such as "'{'" using multiple alternatives: 1, 2

--
Burton Samograd

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, July 18, 2012 11:34 AM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading block of arbitrary text delimited by curly braces

You will have to handle this in the lexer - you are trying to perform syntax driven lexing and this requires context and communication between the parser and the lexer and is either not going to work at all, or will fail in seemingly strange ways.


BLOCK: 'BLOCK'
       (
           (
               '{'
             | { error("Missing opening brace for BLOCK"); }
           )

{ /* Could set token start here */ }

              (~'}')*

{ /* Could set token end here by calling emit(); }

                 (   '}'  // Good
                   | { error("Missing closing brace"); }
                 )
       )
;

You might need to tweak the above for your needs, but you are not going to make this work correctly from the parser. You could fake lexer states so that you get more than one token in the stream, but your errors are so simple, that I personally would not bother.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Burton Samograd
> Sent: Wednesday, July 18, 2012 9:50 AM
> To: Stephen Siegel
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text
> delimited by curly braces
>
> To clarify why pulling in the block as a whole token was not ideal, we
> did have it working that way but an issue was presented where we would
> like to give a better error message when the curlies are forgotten.
> Initially I tried to create another block matching rule that started
> with 'BLOCK' and searched for any character that was not a { and used
> that in an alternate match rule but it caused issues in other parts of
> the parser which made little sense.  This is why I am looking to break
> the block rule out of Its single lexer token implementation if it's
> possible.
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: Stephen Siegel [mailto:siegel at udel.edu]
> Sent: Wednesday, July 18, 2012 10:15 AM
> To: Burton Samograd
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text
> delimited by curly braces
>
> Yeah, but maybe it can't work.  I think the fundamental problem is
> that what you consider to be a token depends on the state of the
> parser, so some communication has to place from the parser to the
> lexer, which is weird.  It makes more sense to make the whole "BLOCK
> {...}" one token, as Mike wrote.  Here is a complete grammer which I
> ran on some examples and works fine:
>
> grammar exp;
>
> file    :       BLOCK* EOF;
>
> BLOCK   :       'BLOCK' WS* LCURLY ( options {greedy=false;} : . )*
> RCURLY
>         ;
>
> LCURLY  :       '{';
> RCURLY  :       '}';
>
> WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
>     ;
>
>
> The "BLOCK {" and "}" do appear in the token text but there is
> probably some way to get rid of them.
>
> On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:
>
> > Is this what you are suggesting?
> >
> > // Global
> > bool inBlockData = false;
> >
> > // Parser
> > block
> >    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY {
> inBlockData = false; }
> >        -> ^(BLOCK BLOCK_DATA)
> >    ;
> >
> > // Lexer
> > BLOCK : 'BLOCK' ;
> > BLOCK_DATA : { inBlockData }?=> (~'}')* ;
> >
> > Using this technique gets me a bit further, but I am getting a
> > recognition exception when I hit the BLOCK_DATA like it is still
> going
> > through my original lexer/parser and not collecting the BLOCK_DATA
> > like I would like it to.
> >
> > I did some reading on semantic predicates but literature just gave
> > examples for parser rules so I am not sure if I applied the concept
> to lexer rules properly.
> >
> > --
> > Burton Samograd
> >
> > -----Original Message-----
> > From: Stephen Siegel [mailto:siegel at udel.edu]
> > Sent: Tuesday, July 17, 2012 6:35 PM
> > To: Burton Samograd
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > You could use a boolean variable added to the lexer "inBlock".
> Initially it is false.  Set it to true just after matching the LCURLY
> and back to false after matching RCURLY in the block rule.   They you
> could define the BLOCK_DATA token using inBlock as a guard (I think
> that's called a "semantic predicate").  BLOCK_DATA should match
> anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY in
> the block data, or how would you know when the block ends? -- just
> like a comment in C, for example.)
> > -Steve
> >
> > On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
> >
> >> Hello,
> >>
> >> We have a requirement where we need to include a block of arbitrary
> text in a block, like so:
> >>
> >> BLOCK { some arbitrary text here }
> >>
> >> We initially got around this by making the whole block a token,
> like:
> >>
> >> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> >>
> >> but this is less than ideal.  I am thinking that we would use
> something like:
> >>
> >> block : BLOCK RCURLY BLOCK_DATA LCURLY
> >>
> >> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
> >>
> >> I am stuck on specifying BLOCK_DATA which is basically .* to the
> lexer.  I have attempted to access the input stream from the parser
> RECOGNIZER but have not been able to come up with a solution.
> >>
> >> I am looking to basically hijack the input stream after seeing a
> BLOCK token so I can read the arbitrary text; I can parse out the  { }
> as needed.
> >>
> >> Is this possible?
> >>
> >> --
> >> Burton Samograd
> >>
> >> ________________________________
> >> This e-mail, including accompanying communications and attachments,
> >> is strictly confidential and only for the intended recipient. Any
> >> retention, use or disclosure not expressly authorised by Markit is
> >> prohibited. This email is subject to all waivers and other terms at
> >> the following link:
> >> http://www.markit.com/en/about/legal/email-disclaimer.page
> >>
> >> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addres
> >> s
> >
> >
> > This e-mail, including accompanying communications and attachments,
> is
> > strictly confidential and only for the intended recipient. Any
> > retention, use or disclosure not expressly authorised by Markit is
> > prohibited. This email is subject to all waivers and other terms at
> > the following link:
> > http://www.markit.com/en/about/legal/email-disclaimer.page
> >
> > Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
>
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at
> the following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From jimi at temporal-wave.com  Wed Jul 18 12:25:22 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 18 Jul 2012 12:25:22 -0700
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E47338DD@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
	<A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>	<D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>
	<17f50286cf37ae7e53ec9885a25d4b51@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14E47338DD@NJ4MSGSCR02.markit.partners>
Message-ID: <9f90078f223fb97085a2b1e8f71360eb@mail.gmail.com>

No, it is just saying that the next part of the rule can eat that too, but
it will do the right thing.

You can lose the warning:

            (
                ('{')=>'{'
              | { error("Missing opening brace for BLOCK"); }
            )


And you can do that with any other warnings in the rule.

I use this technique all the time.

Jim


> -----Original Message-----
> From: Burton Samograd [mailto:burton.samograd at markit.com]
> Sent: Wednesday, July 18, 2012 11:44 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Reading block of arbitrary text delimited
> by curly braces
>
> Good idea but giving the ( '{' | ... ) alternative gives me multiple
> alternative warnings/errors, possibly because we already have LCURLY
> defined as a lexer token:
>
> warning(200): SDL.g:869:35: Decision can match input such as "'{'"
> using multiple alternatives: 1, 2
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, July 18, 2012 11:34 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text delimited
> by curly braces
>
> You will have to handle this in the lexer - you are trying to perform
> syntax driven lexing and this requires context and communication
> between the parser and the lexer and is either not going to work at
> all, or will fail in seemingly strange ways.
>
>
> BLOCK: 'BLOCK'
>        (
>            (
>                '{'
>              | { error("Missing opening brace for BLOCK"); }
>            )
>
> { /* Could set token start here */ }
>
>               (~'}')*
>
> { /* Could set token end here by calling emit(); }
>
>                  (   '}'  // Good
>                    | { error("Missing closing brace"); }
>                  )
>        )
> ;
>
> You might need to tweak the above for your needs, but you are not going
> to make this work correctly from the parser. You could fake lexer
> states so that you get more than one token in the stream, but your
> errors are so simple, that I personally would not bother.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Burton Samograd
> > Sent: Wednesday, July 18, 2012 9:50 AM
> > To: Stephen Siegel
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > To clarify why pulling in the block as a whole token was not ideal,
> we
> > did have it working that way but an issue was presented where we
> would
> > like to give a better error message when the curlies are forgotten.
> > Initially I tried to create another block matching rule that started
> > with 'BLOCK' and searched for any character that was not a { and used
> > that in an alternate match rule but it caused issues in other parts
> of
> > the parser which made little sense.  This is why I am looking to
> break
> > the block rule out of Its single lexer token implementation if it's
> > possible.
> >
> > --
> > Burton Samograd
> >
> > -----Original Message-----
> > From: Stephen Siegel [mailto:siegel at udel.edu]
> > Sent: Wednesday, July 18, 2012 10:15 AM
> > To: Burton Samograd
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > Yeah, but maybe it can't work.  I think the fundamental problem is
> > that what you consider to be a token depends on the state of the
> > parser, so some communication has to place from the parser to the
> > lexer, which is weird.  It makes more sense to make the whole "BLOCK
> > {...}" one token, as Mike wrote.  Here is a complete grammer which I
> > ran on some examples and works fine:
> >
> > grammar exp;
> >
> > file    :       BLOCK* EOF;
> >
> > BLOCK   :       'BLOCK' WS* LCURLY ( options {greedy=false;} : . )*
> > RCURLY
> >         ;
> >
> > LCURLY  :       '{';
> > RCURLY  :       '}';
> >
> > WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
> >     ;
> >
> >
> > The "BLOCK {" and "}" do appear in the token text but there is
> > probably some way to get rid of them.
> >
> > On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:
> >
> > > Is this what you are suggesting?
> > >
> > > // Global
> > > bool inBlockData = false;
> > >
> > > // Parser
> > > block
> > >    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY {
> > inBlockData = false; }
> > >        -> ^(BLOCK BLOCK_DATA)
> > >    ;
> > >
> > > // Lexer
> > > BLOCK : 'BLOCK' ;
> > > BLOCK_DATA : { inBlockData }?=> (~'}')* ;
> > >
> > > Using this technique gets me a bit further, but I am getting a
> > > recognition exception when I hit the BLOCK_DATA like it is still
> > going
> > > through my original lexer/parser and not collecting the BLOCK_DATA
> > > like I would like it to.
> > >
> > > I did some reading on semantic predicates but literature just gave
> > > examples for parser rules so I am not sure if I applied the concept
> > to lexer rules properly.
> > >
> > > --
> > > Burton Samograd
> > >
> > > -----Original Message-----
> > > From: Stephen Siegel [mailto:siegel at udel.edu]
> > > Sent: Tuesday, July 17, 2012 6:35 PM
> > > To: Burton Samograd
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > > delimited by curly braces
> > >
> > > You could use a boolean variable added to the lexer "inBlock".
> > Initially it is false.  Set it to true just after matching the LCURLY
> > and back to false after matching RCURLY in the block rule.   They you
> > could define the BLOCK_DATA token using inBlock as a guard (I think
> > that's called a "semantic predicate").  BLOCK_DATA should match
> > anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY
> in
> > the block data, or how would you know when the block ends? -- just
> > like a comment in C, for example.)
> > > -Steve
> > >
> > > On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
> > >
> > >> Hello,
> > >>
> > >> We have a requirement where we need to include a block of
> arbitrary
> > text in a block, like so:
> > >>
> > >> BLOCK { some arbitrary text here }
> > >>
> > >> We initially got around this by making the whole block a token,
> > like:
> > >>
> > >> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> > >>
> > >> but this is less than ideal.  I am thinking that we would use
> > something like:
> > >>
> > >> block : BLOCK RCURLY BLOCK_DATA LCURLY
> > >>
> > >> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
> > >>
> > >> I am stuck on specifying BLOCK_DATA which is basically .* to the
> > lexer.  I have attempted to access the input stream from the parser
> > RECOGNIZER but have not been able to come up with a solution.
> > >>
> > >> I am looking to basically hijack the input stream after seeing a
> > BLOCK token so I can read the arbitrary text; I can parse out the  {
> }
> > as needed.
> > >>
> > >> Is this possible?
> > >>
> > >> --
> > >> Burton Samograd
> > >>
> > >> ________________________________
> > >> This e-mail, including accompanying communications and
> attachments,
> > >> is strictly confidential and only for the intended recipient. Any
> > >> retention, use or disclosure not expressly authorised by Markit is
> > >> prohibited. This email is subject to all waivers and other terms
> at
> > >> the following link:
> > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > >>
> > >> Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > for contact information on our offices worldwide.
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >
> > >
> > > This e-mail, including accompanying communications and attachments,
> > is
> > > strictly confidential and only for the intended recipient. Any
> > > retention, use or disclosure not expressly authorised by Markit is
> > > prohibited. This email is subject to all waivers and other terms at
> > > the following link:
> > > http://www.markit.com/en/about/legal/email-disclaimer.page
> > >
> > > Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > for contact information on our offices worldwide.
> >
> >
> > This e-mail, including accompanying communications and attachments,
> is
> > strictly confidential and only for the intended recipient. Any
> > retention, use or disclosure not expressly authorised by Markit is
> > prohibited. This email is subject to all waivers and other terms at
> > the following link: http://www.markit.com/en/about/legal/email-
> > disclaimer.page
> >
> > Please visit http://www.markit.com/en/about/contact/contact-us.page?
> > for contact information on our offices worldwide.
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at the
> following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.

From bkiers at gmail.com  Wed Jul 18 12:48:54 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 18 Jul 2012 21:48:54 +0200
Subject: [antlr-interest] assign a value to a token
In-Reply-To: <1342616926.38174.YahooMailNeo@web5717.biz.mail.ne1.yahoo.com>
References: <1342616926.38174.YahooMailNeo@web5717.biz.mail.ne1.yahoo.com>
Message-ID: <CAOrgODb9Y0bj2n1vSkOea2+KB_Mn2pR9KYa2Y2vO_-xDNuE1dg@mail.gmail.com>

Hi,

I am (again) not entirely clear what it is you're trying to so. But it
looks to be a bit the same as your other question: you're trying to resolve
all kind of semantics in the parser. This is not something the parser
(parser rules, if you will) should be doing. You let the parser create a
(abstract) syntax tree and when this is done, you walk through your tree
and check if the nodes in your tree have the proper/expected value (i.e.
you evaluate the tree).

As suggested earlier: better do a bit of reading on ANTLR because I don't
think you're on the right path if you think ANTLR can be used in the way
you're trying to tackle your problem at this moment.

Regards,

Bart.


On Wed, Jul 18, 2012 at 3:08 PM, Marinos Georgiades
<marinos at studyhood.com>wrote:

> I would like to assign the value of a token to a variable, so as I will be
> able to use that variable through my grammar (I am sorry if I don't use the
> right terminology).
>
>  For example, I have the following rules (I am quoting part of them for
> simplification):
>
> useCaseSpecification
> :'UseCase:' ucName '='
> description
> statePre
> .......
> ;
>
> ucName
> :caren io
> ;
>
> caren
> : 'create' | 'alter' | 'read'
> ;
>
> io
> :ioName ioType
> ;
>
> ioName
> : ARTICLE NOUN
> ;
>
> description
> :'Description' ':' ucName ......
> ;
>
> statePre
> :io 'is 'at' state 'state' '.' 'Triggered' 'by' 'UseCase' ':' ucName
> ;
>
> A test syntax can go like this:
>
> UseCase: create Prescription =
> Description: create Prescription
> Examination is at ....... Triggered by UseCase: Create Examination
>
> In this example, ucName is assigned the values 'create Prescription' for
> line 1 and 2, and the value 'Create Examination' for line 3. However,
> someone can write something else, e.g. 'read Book' for line 2. And I don't
> want it to be like this. I want the ucName of the rule 'description' to be
> the same with the ucName of the rule useCaseSpecificaton. And I want the
> ucName of the rule statePre to be different from the others.
> >From what I read , there must be a way with the use of Java code, but I
> haven't managed to make it work. I would really appreciate if someone could
> help me.
>
> Thank you,
>
> Marinos
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From francis.andre.kampbell at orange.fr  Thu Jul 19 01:42:35 2012
From: francis.andre.kampbell at orange.fr (Francis ANDRE)
Date: Thu, 19 Jul 2012 10:42:35 +0200
Subject: [antlr-interest] ANTLRv2.7.7 versus ANTLRv3.4:
	java.lang.OutOfMemoryError: Java heap
Message-ID: <5007C87B.2090007@orange.fr>

Hi antlr listeners


When migrating from antlrv2.7.7 to antlr v3.4 a quite huge grammar (3500+ lines, 
350 rules), I got an java.lang.OutOfMemoryError: Java heap space while already 
running the jvm with a heap of 512m.

Does somebody faced the same situation?? Is there a solution to avoid reworking 
the grammar??

If possible, I would prefer not to change the grammar -- except the syntactic 
sugar of the migration -- since both execution of the generated parser/lexer for 
antlrv2 and antlrv3 should give the same result.

Thanks for your help

Francis


building lookahead DFA (d=142) for ()+ loopback of 785:4: (v= computeTarget )+
convert DFA state 0 (469 nfa states)
convert DFA state 1 (40 nfa states)
convert DFA state 2 (10011 nfa states)
convert DFA state 3 (10011 nfa states)
convert DFA state 33 (9972 nfa states)
convert DFA state 34 (9972 nfa states)
convert DFA state 39 (9890 nfa states)
convert DFA state 40 (9888 nfa states)
convert DFA state 43 (96 nfa states)
convert DFA state 44 (1296 nfa states)
convert DFA state 147 (621 nfa states)
convert DFA state 153 (1296 nfa states)
convert DFA state 256 (621 nfa states)
convert DFA state 262 (1296 nfa states)
convert DFA state 351 (530 nfa states)
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:612)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)
     at org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764)


From s.basan at surge.it  Thu Jul 19 08:56:26 2012
From: s.basan at surge.it (Surj Basan)
Date: Thu, 19 Jul 2012 16:56:26 +0100
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
Message-ID: <CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>

Hi,

No replies yet, so I'm guessing I've either missed something or this is a
genuine bug.

If anyone knows, could you send a quick reply so I can move forward.

To recap: ANTLR is producing code that does not have a variable declaration
in the Parser.

Thanks,
Surj

On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:

> Hi All,
>
> I have a Java grammar (taken from the openjdk, one linked off
> the ANTLR site:
> http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g).
>
> One of the rewrite rules produces Java code which does not have a var
> decl, and so does not compile.
>
> I took the rule straight out of Terrence Parr's page on rewrite rules and
> added it to the grammar (
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction, paragraph
> beginning "Using a rewrite rule at a non-extreme-right-edge-of-production
> location is ok..").
>
> Can someone explain if this is a bug in ANTLR? Code is below, for ref.
>
> Grammar rule:
>
> statement
>     :   [more rules here]
>     |   'if' parExpression s1=statement ('else' s2=statement -> ^('if'
> parExpression $s1 $s2)
>                                         |                      -> ^('if'
> parExpression $s1)
>                                         )
>     [more rules here]
>     ;
>
>
> Generated parser code:
>
>     // $ANTLR start synpred139_AntlrJava
>     public final void synpred139_AntlrJava_fragment() throws
> RecognitionException {
>         void  =null;
>
>
>         // AntlrJava.g:926:42: ( 'else' s2= statement )
>         // AntlrJava.g:926:42: 'else' s2= statement
>         {
>
> match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava4927);
> if (state.failed) return ;
>
>         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
>         s2=statement();
>
>         state._fsp--;
>         if (state.failed) return ;
>
>         }
>
>     }
>
> (For what it's worth, I find that various permutations of rewrite rules
> exhibit the same behaviour: missing var decls in the generated parser.
> Java.g is a pretty complex grammar. Would I have more luck if I split the
> grammar into the lexer/parser and a separate tree building one, instead of
> combining it all into a single file?)
>
> Any help greatly appreciated.
>
> Thanks,
> Surj
>

From bkiers at gmail.com  Thu Jul 19 09:01:07 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 19 Jul 2012 18:01:07 +0200
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
Message-ID: <CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>

Hi Surj,

Can you:

   - post a complete grammar that reproduces this (not just a small
   snippet), and
   - indicate what ANTLR version you're using

Regards,

Bart.


On Thu, Jul 19, 2012 at 5:56 PM, Surj Basan <s.basan at surge.it> wrote:

> Hi,
>
> No replies yet, so I'm guessing I've either missed something or this is a
> genuine bug.
>
> If anyone knows, could you send a quick reply so I can move forward.
>
> To recap: ANTLR is producing code that does not have a variable declaration
> in the Parser.
>
> Thanks,
> Surj
>
> On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:
>
> > Hi All,
> >
> > I have a Java grammar (taken from the openjdk, one linked off
> > the ANTLR site:
> > http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g).
> >
> > One of the rewrite rules produces Java code which does not have a var
> > decl, and so does not compile.
> >
> > I took the rule straight out of Terrence Parr's page on rewrite rules and
> > added it to the grammar (
> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction, paragraph
> > beginning "Using a rewrite rule at a non-extreme-right-edge-of-production
> > location is ok..").
> >
> > Can someone explain if this is a bug in ANTLR? Code is below, for ref.
> >
> > Grammar rule:
> >
> > statement
> >     :   [more rules here]
> >     |   'if' parExpression s1=statement ('else' s2=statement -> ^('if'
> > parExpression $s1 $s2)
> >                                         |                      -> ^('if'
> > parExpression $s1)
> >                                         )
> >     [more rules here]
> >     ;
> >
> >
> > Generated parser code:
> >
> >     // $ANTLR start synpred139_AntlrJava
> >     public final void synpred139_AntlrJava_fragment() throws
> > RecognitionException {
> >         void  =null;
> >
> >
> >         // AntlrJava.g:926:42: ( 'else' s2= statement )
> >         // AntlrJava.g:926:42: 'else' s2= statement
> >         {
> >
> >
> match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava4927);
> > if (state.failed) return ;
> >
> >         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
> >         s2=statement();
> >
> >         state._fsp--;
> >         if (state.failed) return ;
> >
> >         }
> >
> >     }
> >
> > (For what it's worth, I find that various permutations of rewrite rules
> > exhibit the same behaviour: missing var decls in the generated parser.
> > Java.g is a pretty complex grammar. Would I have more luck if I split the
> > grammar into the lexer/parser and a separate tree building one, instead
> of
> > combining it all into a single file?)
> >
> > Any help greatly appreciated.
> >
> > Thanks,
> > Surj
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From s.basan at surge.it  Thu Jul 19 10:13:31 2012
From: s.basan at surge.it (Surj Basan)
Date: Thu, 19 Jul 2012 18:13:31 +0100
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
	<CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
Message-ID: <CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>

Hi Bart,

Thanks for your reply.

I've posted a cut-down grammar which exhibits the errors, along with
generated files here:

http://surge.it/static/antlr/

The grammar rule is in JavaBroken.g:180-183, the Java error is
in JavaBrokenParser.java:8659.

Any help greatly appreciated,
Surj


On 19 July 2012 17:01, Bart Kiers <bkiers at gmail.com> wrote:

> Hi Surj,
>
> Can you:
>
>    - post a complete grammar that reproduces this (not just a small
>    snippet), and
>    - indicate what ANTLR version you're using
>
> Regards,
>
> Bart.
>
>
> On Thu, Jul 19, 2012 at 5:56 PM, Surj Basan <s.basan at surge.it> wrote:
>
>> Hi,
>>
>> No replies yet, so I'm guessing I've either missed something or this is a
>> genuine bug.
>>
>> If anyone knows, could you send a quick reply so I can move forward.
>>
>> To recap: ANTLR is producing code that does not have a variable
>> declaration
>> in the Parser.
>>
>> Thanks,
>> Surj
>>
>> On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:
>>
>> > Hi All,
>> >
>> > I have a Java grammar (taken from the openjdk, one linked off
>> > the ANTLR site:
>> > http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g).
>> >
>> > One of the rewrite rules produces Java code which does not have a var
>> > decl, and so does not compile.
>> >
>> > I took the rule straight out of Terrence Parr's page on rewrite rules
>> and
>> > added it to the grammar (
>> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction, paragraph
>> > beginning "Using a rewrite rule at a
>> non-extreme-right-edge-of-production
>> > location is ok..").
>> >
>> > Can someone explain if this is a bug in ANTLR? Code is below, for ref.
>> >
>> > Grammar rule:
>> >
>> > statement
>> >     :   [more rules here]
>> >     |   'if' parExpression s1=statement ('else' s2=statement -> ^('if'
>> > parExpression $s1 $s2)
>> >                                         |                      -> ^('if'
>> > parExpression $s1)
>> >                                         )
>> >     [more rules here]
>> >     ;
>> >
>> >
>> > Generated parser code:
>> >
>> >     // $ANTLR start synpred139_AntlrJava
>> >     public final void synpred139_AntlrJava_fragment() throws
>> > RecognitionException {
>> >         void  =null;
>> >
>> >
>> >         // AntlrJava.g:926:42: ( 'else' s2= statement )
>> >         // AntlrJava.g:926:42: 'else' s2= statement
>> >         {
>> >
>> >
>> match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava4927);
>> > if (state.failed) return ;
>> >
>> >         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
>> >         s2=statement();
>> >
>> >         state._fsp--;
>> >         if (state.failed) return ;
>> >
>> >         }
>> >
>> >     }
>> >
>> > (For what it's worth, I find that various permutations of rewrite rules
>> > exhibit the same behaviour: missing var decls in the generated parser.
>> > Java.g is a pretty complex grammar. Would I have more luck if I split
>> the
>> > grammar into the lexer/parser and a separate tree building one, instead
>> of
>> > combining it all into a single file?)
>> >
>> > Any help greatly appreciated.
>> >
>> > Thanks,
>> > Surj
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jimi at temporal-wave.com  Thu Jul 19 10:51:10 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2012 10:51:10 -0700
Subject: [antlr-interest] ANTLRv2.7.7 versus ANTLRv3.4:
 java.lang.OutOfMemoryError: Java heap
In-Reply-To: <5007C87B.2090007@orange.fr>
References: <5007C87B.2090007@orange.fr>
Message-ID: <4e667d6d6353bcc7cfa1d041f3500860@mail.gmail.com>

-Xmx2048m

And use the 64bit JRE. However this is really telling you that your
grammar needs some serious reworking. You could try setting k to the same
value you had in 2.7.x

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Francis ANDRE
> Sent: Thursday, July 19, 2012 1:43 AM
> To: antlr ANTLR
> Subject: [antlr-interest] ANTLRv2.7.7 versus ANTLRv3.4:
> java.lang.OutOfMemoryError: Java heap
>
> Hi antlr listeners
>
>
> When migrating from antlrv2.7.7 to antlr v3.4 a quite huge grammar
> (3500+ lines,
> 350 rules), I got an java.lang.OutOfMemoryError: Java heap space while
> already running the jvm with a heap of 512m.
>
> Does somebody faced the same situation?? Is there a solution to avoid
> reworking the grammar??
>
> If possible, I would prefer not to change the grammar -- except the
> syntactic sugar of the migration -- since both execution of the
> generated parser/lexer for
> antlrv2 and antlrv3 should give the same result.
>
> Thanks for your help
>
> Francis
>
>
> building lookahead DFA (d=142) for ()+ loopback of 785:4: (v=
> computeTarget )+ convert DFA state 0 (469 nfa states) convert DFA state
> 1 (40 nfa states) convert DFA state 2 (10011 nfa states) convert DFA
> state 3 (10011 nfa states) convert DFA state 33 (9972 nfa states)
> convert DFA state 34 (9972 nfa states) convert DFA state 39 (9890 nfa
> states) convert DFA state 40 (9888 nfa states) convert DFA state 43 (96
> nfa states) convert DFA state 44 (1296 nfa states) convert DFA state
> 147 (621 nfa states) convert DFA state 153 (1296 nfa states) convert
> DFA state 256 (621 nfa states) convert DFA state 262 (1296 nfa states)
> convert DFA state 351 (530 nfa states) Exception in thread "main"
> java.lang.OutOfMemoryError: Java heap space
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:612
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:682
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:708
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>      at
> org.antlr.analysis.NFAToDFAConverter.closure(NFAToDFAConverter.java:764
> )
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From bkiers at gmail.com  Thu Jul 19 10:51:00 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 19 Jul 2012 19:51:00 +0200
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
	<CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
	<CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>
Message-ID: <CAOrgODZnMCMThHC+VA8p+hQKMvm3vqYmEnVp-ky8oty0YA1w3g@mail.gmail.com>

Hi Surj,

I could not reproduce this. Here's what I did on my (Linux) pc:

wget http://surge.it/static/antlr/JavaBroken.g
wget http://www.antlr.org/download/antlr-3.3-complete.jar
java -cp antlr-3.3-complete.jar org.antlr.Tool JavaBroken.g
javac -cp antlr-3.3-complete.jar *.java

ANTLR does produce an error because you have an empty `tokens{ ... }`
block, but it does generate the .java source files of the lexer and parser.
And these .java source files get compiled just fine.

Regards,

Bart.


On Thu, Jul 19, 2012 at 7:13 PM, Surj Basan <s.basan at surge.it> wrote:

> Hi Bart,
>
> Thanks for your reply.
>
> I've posted a cut-down grammar which exhibits the errors, along with
> generated files here:
>
> http://surge.it/static/antlr/
>
> The grammar rule is in JavaBroken.g:180-183, the Java error is
> in JavaBrokenParser.java:8659.
>
> Any help greatly appreciated,
> Surj
>
>
> On 19 July 2012 17:01, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Hi Surj,
>>
>> Can you:
>>
>>    - post a complete grammar that reproduces this (not just a small
>>    snippet), and
>>    - indicate what ANTLR version you're using
>>
>> Regards,
>>
>> Bart.
>>
>>
>> On Thu, Jul 19, 2012 at 5:56 PM, Surj Basan <s.basan at surge.it> wrote:
>>
>>> Hi,
>>>
>>> No replies yet, so I'm guessing I've either missed something or this is a
>>> genuine bug.
>>>
>>> If anyone knows, could you send a quick reply so I can move forward.
>>>
>>> To recap: ANTLR is producing code that does not have a variable
>>> declaration
>>> in the Parser.
>>>
>>> Thanks,
>>> Surj
>>>
>>> On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:
>>>
>>> > Hi All,
>>> >
>>> > I have a Java grammar (taken from the openjdk, one linked off
>>> > the ANTLR site:
>>> > http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g).
>>> >
>>> > One of the rewrite rules produces Java code which does not have a var
>>> > decl, and so does not compile.
>>> >
>>> > I took the rule straight out of Terrence Parr's page on rewrite rules
>>> and
>>> > added it to the grammar (
>>> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction, paragraph
>>> > beginning "Using a rewrite rule at a
>>> non-extreme-right-edge-of-production
>>> > location is ok..").
>>> >
>>> > Can someone explain if this is a bug in ANTLR? Code is below, for ref.
>>> >
>>> > Grammar rule:
>>> >
>>> > statement
>>> >     :   [more rules here]
>>> >     |   'if' parExpression s1=statement ('else' s2=statement -> ^('if'
>>> > parExpression $s1 $s2)
>>> >                                         |                      ->
>>> ^('if'
>>> > parExpression $s1)
>>> >                                         )
>>> >     [more rules here]
>>> >     ;
>>> >
>>> >
>>> > Generated parser code:
>>> >
>>> >     // $ANTLR start synpred139_AntlrJava
>>> >     public final void synpred139_AntlrJava_fragment() throws
>>> > RecognitionException {
>>> >         void  =null;
>>> >
>>> >
>>> >         // AntlrJava.g:926:42: ( 'else' s2= statement )
>>> >         // AntlrJava.g:926:42: 'else' s2= statement
>>> >         {
>>> >
>>> >
>>> match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava4927);
>>> > if (state.failed) return ;
>>> >
>>> >         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
>>> >         s2=statement();
>>> >
>>> >         state._fsp--;
>>> >         if (state.failed) return ;
>>> >
>>> >         }
>>> >
>>> >     }
>>> >
>>> > (For what it's worth, I find that various permutations of rewrite rules
>>> > exhibit the same behaviour: missing var decls in the generated parser.
>>> > Java.g is a pretty complex grammar. Would I have more luck if I split
>>> the
>>> > grammar into the lexer/parser and a separate tree building one,
>>> instead of
>>> > combining it all into a single file?)
>>> >
>>> > Any help greatly appreciated.
>>> >
>>> > Thanks,
>>> > Surj
>>> >
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From jimi at temporal-wave.com  Thu Jul 19 10:53:01 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2012 10:53:01 -0700
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
Message-ID: <7648783326dd8c5b0fa87de8aa7ea5f5@mail.gmail.com>

I believe that this is a bug that has already been fixed in the
development version of the code.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Surj Basan
> Sent: Thursday, July 19, 2012 8:56 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Rewrite bug?
>
> Hi,
>
> No replies yet, so I'm guessing I've either missed something or this is
> a genuine bug.
>
> If anyone knows, could you send a quick reply so I can move forward.
>
> To recap: ANTLR is producing code that does not have a variable
> declaration in the Parser.
>
> Thanks,
> Surj
>
> On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:
>
> > Hi All,
> >
> > I have a Java grammar (taken from the openjdk, one linked off the
> > ANTLR site:
> > http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g).
> >
> > One of the rewrite rules produces Java code which does not have a var
> > decl, and so does not compile.
> >
> > I took the rule straight out of Terrence Parr's page on rewrite rules
> > and added it to the grammar (
> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction, paragraph
> > beginning "Using a rewrite rule at a
> > non-extreme-right-edge-of-production
> > location is ok..").
> >
> > Can someone explain if this is a bug in ANTLR? Code is below, for
> ref.
> >
> > Grammar rule:
> >
> > statement
> >     :   [more rules here]
> >     |   'if' parExpression s1=statement ('else' s2=statement ->
> ^('if'
> > parExpression $s1 $s2)
> >                                         |                      ->
> ^('if'
> > parExpression $s1)
> >                                         )
> >     [more rules here]
> >     ;
> >
> >
> > Generated parser code:
> >
> >     // $ANTLR start synpred139_AntlrJava
> >     public final void synpred139_AntlrJava_fragment() throws
> > RecognitionException {
> >         void  =null;
> >
> >
> >         // AntlrJava.g:926:42: ( 'else' s2= statement )
> >         // AntlrJava.g:926:42: 'else' s2= statement
> >         {
> >
> >
> match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava49
> > 27);
> > if (state.failed) return ;
> >
> >         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
> >         s2=statement();
> >
> >         state._fsp--;
> >         if (state.failed) return ;
> >
> >         }
> >
> >     }
> >
> > (For what it's worth, I find that various permutations of rewrite
> > rules exhibit the same behaviour: missing var decls in the generated
> parser.
> > Java.g is a pretty complex grammar. Would I have more luck if I split
> > the grammar into the lexer/parser and a separate tree building one,
> > instead of combining it all into a single file?)
> >
> > Any help greatly appreciated.
> >
> > Thanks,
> > Surj
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Thu Jul 19 10:59:04 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 19 Jul 2012 10:59:04 -0700
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAOrgODZnMCMThHC+VA8p+hQKMvm3vqYmEnVp-ky8oty0YA1w3g@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
	<CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
	<CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>
	<CAOrgODZnMCMThHC+VA8p+hQKMvm3vqYmEnVp-ky8oty0YA1w3g@mail.gmail.com>
Message-ID: <a6498342233bb24ac2b23fd750701a50@mail.gmail.com>

You are using 3.3, he is likely using 3.4, which has the big and which is
now fixed in the mainline at least.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Thursday, July 19, 2012 10:51 AM
> To: Surj Basan
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Rewrite bug?
>
> Hi Surj,
>
> I could not reproduce this. Here's what I did on my (Linux) pc:
>
> wget http://surge.it/static/antlr/JavaBroken.g
> wget http://www.antlr.org/download/antlr-3.3-complete.jar
> java -cp antlr-3.3-complete.jar org.antlr.Tool JavaBroken.g javac -cp
> antlr-3.3-complete.jar *.java
>
> ANTLR does produce an error because you have an empty `tokens{ ... }`
> block, but it does generate the .java source files of the lexer and
> parser.
> And these .java source files get compiled just fine.
>
> Regards,
>
> Bart.
>
>
> On Thu, Jul 19, 2012 at 7:13 PM, Surj Basan <s.basan at surge.it> wrote:
>
> > Hi Bart,
> >
> > Thanks for your reply.
> >
> > I've posted a cut-down grammar which exhibits the errors, along with
> > generated files here:
> >
> > http://surge.it/static/antlr/
> >
> > The grammar rule is in JavaBroken.g:180-183, the Java error is in
> > JavaBrokenParser.java:8659.
> >
> > Any help greatly appreciated,
> > Surj
> >
> >
> > On 19 July 2012 17:01, Bart Kiers <bkiers at gmail.com> wrote:
> >
> >> Hi Surj,
> >>
> >> Can you:
> >>
> >>    - post a complete grammar that reproduces this (not just a small
> >>    snippet), and
> >>    - indicate what ANTLR version you're using
> >>
> >> Regards,
> >>
> >> Bart.
> >>
> >>
> >> On Thu, Jul 19, 2012 at 5:56 PM, Surj Basan <s.basan at surge.it>
> wrote:
> >>
> >>> Hi,
> >>>
> >>> No replies yet, so I'm guessing I've either missed something or
> this
> >>> is a genuine bug.
> >>>
> >>> If anyone knows, could you send a quick reply so I can move
> forward.
> >>>
> >>> To recap: ANTLR is producing code that does not have a variable
> >>> declaration in the Parser.
> >>>
> >>> Thanks,
> >>> Surj
> >>>
> >>> On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:
> >>>
> >>> > Hi All,
> >>> >
> >>> > I have a Java grammar (taken from the openjdk, one linked off the
> >>> > ANTLR site:
> >>> > http://openjdk.java.net/projects/compiler-
> grammar/antlrworks/Java.g).
> >>> >
> >>> > One of the rewrite rules produces Java code which does not have a
> >>> > var decl, and so does not compile.
> >>> >
> >>> > I took the rule straight out of Terrence Parr's page on rewrite
> >>> > rules
> >>> and
> >>> > added it to the grammar (
> >>> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction,
> >>> > paragraph beginning "Using a rewrite rule at a
> >>> non-extreme-right-edge-of-production
> >>> > location is ok..").
> >>> >
> >>> > Can someone explain if this is a bug in ANTLR? Code is below, for
> ref.
> >>> >
> >>> > Grammar rule:
> >>> >
> >>> > statement
> >>> >     :   [more rules here]
> >>> >     |   'if' parExpression s1=statement ('else' s2=statement ->
> ^('if'
> >>> > parExpression $s1 $s2)
> >>> >                                         |                      ->
> >>> ^('if'
> >>> > parExpression $s1)
> >>> >                                         )
> >>> >     [more rules here]
> >>> >     ;
> >>> >
> >>> >
> >>> > Generated parser code:
> >>> >
> >>> >     // $ANTLR start synpred139_AntlrJava
> >>> >     public final void synpred139_AntlrJava_fragment() throws
> >>> > RecognitionException {
> >>> >         void  =null;
> >>> >
> >>> >
> >>> >         // AntlrJava.g:926:42: ( 'else' s2= statement )
> >>> >         // AntlrJava.g:926:42: 'else' s2= statement
> >>> >         {
> >>> >
> >>> >
> >>>
> match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava
> >>> 4927);
> >>> > if (state.failed) return ;
> >>> >
> >>> >         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
> >>> >         s2=statement();
> >>> >
> >>> >         state._fsp--;
> >>> >         if (state.failed) return ;
> >>> >
> >>> >         }
> >>> >
> >>> >     }
> >>> >
> >>> > (For what it's worth, I find that various permutations of rewrite
> >>> > rules exhibit the same behaviour: missing var decls in the
> generated parser.
> >>> > Java.g is a pretty complex grammar. Would I have more luck if I
> >>> > split
> >>> the
> >>> > grammar into the lexer/parser and a separate tree building one,
> >>> instead of
> >>> > combining it all into a single file?)
> >>> >
> >>> > Any help greatly appreciated.
> >>> >
> >>> > Thanks,
> >>> > Surj
> >>> >
> >>>
> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >>> Unsubscribe:
> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> addre
> >>> ss
> >>>
> >>
> >>
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From s.basan at surge.it  Fri Jul 20 03:56:24 2012
From: s.basan at surge.it (Surj Basan)
Date: Fri, 20 Jul 2012 11:56:24 +0100
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <a6498342233bb24ac2b23fd750701a50@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
	<CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
	<CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>
	<CAOrgODZnMCMThHC+VA8p+hQKMvm3vqYmEnVp-ky8oty0YA1w3g@mail.gmail.com>
	<a6498342233bb24ac2b23fd750701a50@mail.gmail.com>
Message-ID: <CAH_m78o_PBaf6T=P1megPuss24SjX47J9xMpMu2QOiQMRXXvxw@mail.gmail.com>

Thanks Jim - yep I'm on 3.4.

Can you confirm: if I get the latest v3 from git I should have a working
version?

Surj

On 19 July 2012 18:59, Jim Idle <jimi at temporal-wave.com> wrote:

> You are using 3.3, he is likely using 3.4, which has the big and which is
> now fixed in the mainline at least.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bart Kiers
> > Sent: Thursday, July 19, 2012 10:51 AM
> > To: Surj Basan
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Rewrite bug?
> >
> > Hi Surj,
> >
> > I could not reproduce this. Here's what I did on my (Linux) pc:
> >
> > wget http://surge.it/static/antlr/JavaBroken.g
> > wget http://www.antlr.org/download/antlr-3.3-complete.jar
> > java -cp antlr-3.3-complete.jar org.antlr.Tool JavaBroken.g javac -cp
> > antlr-3.3-complete.jar *.java
> >
> > ANTLR does produce an error because you have an empty `tokens{ ... }`
> > block, but it does generate the .java source files of the lexer and
> > parser.
> > And these .java source files get compiled just fine.
> >
> > Regards,
> >
> > Bart.
> >
> >
> > On Thu, Jul 19, 2012 at 7:13 PM, Surj Basan <s.basan at surge.it> wrote:
> >
> > > Hi Bart,
> > >
> > > Thanks for your reply.
> > >
> > > I've posted a cut-down grammar which exhibits the errors, along with
> > > generated files here:
> > >
> > > http://surge.it/static/antlr/
> > >
> > > The grammar rule is in JavaBroken.g:180-183, the Java error is in
> > > JavaBrokenParser.java:8659.
> > >
> > > Any help greatly appreciated,
> > > Surj
> > >
> > >
> > > On 19 July 2012 17:01, Bart Kiers <bkiers at gmail.com> wrote:
> > >
> > >> Hi Surj,
> > >>
> > >> Can you:
> > >>
> > >>    - post a complete grammar that reproduces this (not just a small
> > >>    snippet), and
> > >>    - indicate what ANTLR version you're using
> > >>
> > >> Regards,
> > >>
> > >> Bart.
> > >>
> > >>
> > >> On Thu, Jul 19, 2012 at 5:56 PM, Surj Basan <s.basan at surge.it>
> > wrote:
> > >>
> > >>> Hi,
> > >>>
> > >>> No replies yet, so I'm guessing I've either missed something or
> > this
> > >>> is a genuine bug.
> > >>>
> > >>> If anyone knows, could you send a quick reply so I can move
> > forward.
> > >>>
> > >>> To recap: ANTLR is producing code that does not have a variable
> > >>> declaration in the Parser.
> > >>>
> > >>> Thanks,
> > >>> Surj
> > >>>
> > >>> On 16 July 2012 07:24, Surj Basan <s.basan at surge.it> wrote:
> > >>>
> > >>> > Hi All,
> > >>> >
> > >>> > I have a Java grammar (taken from the openjdk, one linked off the
> > >>> > ANTLR site:
> > >>> > http://openjdk.java.net/projects/compiler-
> > grammar/antlrworks/Java.g).
> > >>> >
> > >>> > One of the rewrite rules produces Java code which does not have a
> > >>> > var decl, and so does not compile.
> > >>> >
> > >>> > I took the rule straight out of Terrence Parr's page on rewrite
> > >>> > rules
> > >>> and
> > >>> > added it to the grammar (
> > >>> > http://www.antlr.org/wiki/display/ANTLR3/Tree+construction,
> > >>> > paragraph beginning "Using a rewrite rule at a
> > >>> non-extreme-right-edge-of-production
> > >>> > location is ok..").
> > >>> >
> > >>> > Can someone explain if this is a bug in ANTLR? Code is below, for
> > ref.
> > >>> >
> > >>> > Grammar rule:
> > >>> >
> > >>> > statement
> > >>> >     :   [more rules here]
> > >>> >     |   'if' parExpression s1=statement ('else' s2=statement ->
> > ^('if'
> > >>> > parExpression $s1 $s2)
> > >>> >                                         |                      ->
> > >>> ^('if'
> > >>> > parExpression $s1)
> > >>> >                                         )
> > >>> >     [more rules here]
> > >>> >     ;
> > >>> >
> > >>> >
> > >>> > Generated parser code:
> > >>> >
> > >>> >     // $ANTLR start synpred139_AntlrJava
> > >>> >     public final void synpred139_AntlrJava_fragment() throws
> > >>> > RecognitionException {
> > >>> >         void  =null;
> > >>> >
> > >>> >
> > >>> >         // AntlrJava.g:926:42: ( 'else' s2= statement )
> > >>> >         // AntlrJava.g:926:42: 'else' s2= statement
> > >>> >         {
> > >>> >
> > >>> >
> > >>>
> > match(input,KEYWORD_ELSE,FOLLOW_KEYWORD_ELSE_in_synpred139_AntlrJava
> > >>> 4927);
> > >>> > if (state.failed) return ;
> > >>> >
> > >>> >         pushFollow(FOLLOW_statement_in_synpred139_AntlrJava4931);
> > >>> >         s2=statement();
> > >>> >
> > >>> >         state._fsp--;
> > >>> >         if (state.failed) return ;
> > >>> >
> > >>> >         }
> > >>> >
> > >>> >     }
> > >>> >
> > >>> > (For what it's worth, I find that various permutations of rewrite
> > >>> > rules exhibit the same behaviour: missing var decls in the
> > generated parser.
> > >>> > Java.g is a pretty complex grammar. Would I have more luck if I
> > >>> > split
> > >>> the
> > >>> > grammar into the lexer/parser and a separate tree building one,
> > >>> instead of
> > >>> > combining it all into a single file?)
> > >>> >
> > >>> > Any help greatly appreciated.
> > >>> >
> > >>> > Thanks,
> > >>> > Surj
> > >>> >
> > >>>
> > >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >>> Unsubscribe:
> > >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addre
> > >>> ss
> > >>>
> > >>
> > >>
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From burton.samograd at markit.com  Fri Jul 20 10:28:48 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Fri, 20 Jul 2012 13:28:48 -0400
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <9f90078f223fb97085a2b1e8f71360eb@mail.gmail.com>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
	<A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>
	<D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>
	<17f50286cf37ae7e53ec9885a25d4b51@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14E47338DD@NJ4MSGSCR02.markit.partners>
	<9f90078f223fb97085a2b1e8f71360eb@mail.gmail.com>
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E47339D7@NJ4MSGSCR02.markit.partners>

I've gotten a bit further, but again I've hit a brick wall. Following your advice below I now have:

BLOCK
        : 'BLOCK' ((' '|'\t'|'\r'|'\n')+)=>' '
        ( ('{')=>'{' | { errorFlag = true; } )
        ( options { greedy = false; } : (~'}')*) '}'
        ;

In my parser, My grammar is now like:

Job : JOB ID LCURLY BLOCK {
    If(errorFlag) {
        throw Exception;
    }
} RCURLY

This technique works fine with a single JOB block, but with multiple JOB blocks it looks like the whole
file is being slurped up by the lexer prior to being passed to the parser, causing my errorFlag to be set
due to an invalid BLOCK at the end of the file before it even gets to the JOB parsing rule for the first job
block.

I'm used to bison where tokens are read one at a time as needed; does antlr not work this way?  Is throwing
the exception directly from the lexer as it happens the only way around this? I am throwing the exception from
the parser so I can give a better error message that includes the job name and line number of the BLOCK; is the
current line number available from the lexer?

--
Burton Samograd

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: Wednesday, July 18, 2012 1:25 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Reading block of arbitrary text delimited by curly braces

No, it is just saying that the next part of the rule can eat that too, but it will do the right thing.

You can lose the warning:

            (
                ('{')=>'{'
              | { error("Missing opening brace for BLOCK"); }
            )


And you can do that with any other warnings in the rule.

I use this technique all the time.

Jim


> -----Original Message-----
> From: Burton Samograd [mailto:burton.samograd at markit.com]
> Sent: Wednesday, July 18, 2012 11:44 AM
> To: Jim Idle
> Cc: antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Reading block of arbitrary text
> delimited by curly braces
>
> Good idea but giving the ( '{' | ... ) alternative gives me multiple
> alternative warnings/errors, possibly because we already have LCURLY
> defined as a lexer token:
>
> warning(200): SDL.g:869:35: Decision can match input such as "'{'"
> using multiple alternatives: 1, 2
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, July 18, 2012 11:34 AM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text
> delimited by curly braces
>
> You will have to handle this in the lexer - you are trying to perform
> syntax driven lexing and this requires context and communication
> between the parser and the lexer and is either not going to work at
> all, or will fail in seemingly strange ways.
>
>
> BLOCK: 'BLOCK'
>        (
>            (
>                '{'
>              | { error("Missing opening brace for BLOCK"); }
>            )
>
> { /* Could set token start here */ }
>
>               (~'}')*
>
> { /* Could set token end here by calling emit(); }
>
>                  (   '}'  // Good
>                    | { error("Missing closing brace"); }
>                  )
>        )
> ;
>
> You might need to tweak the above for your needs, but you are not
> going to make this work correctly from the parser. You could fake
> lexer states so that you get more than one token in the stream, but
> your errors are so simple, that I personally would not bother.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Burton Samograd
> > Sent: Wednesday, July 18, 2012 9:50 AM
> > To: Stephen Siegel
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > To clarify why pulling in the block as a whole token was not ideal,
> we
> > did have it working that way but an issue was presented where we
> would
> > like to give a better error message when the curlies are forgotten.
> > Initially I tried to create another block matching rule that started
> > with 'BLOCK' and searched for any character that was not a { and
> > used that in an alternate match rule but it caused issues in other
> > parts
> of
> > the parser which made little sense.  This is why I am looking to
> break
> > the block rule out of Its single lexer token implementation if it's
> > possible.
> >
> > --
> > Burton Samograd
> >
> > -----Original Message-----
> > From: Stephen Siegel [mailto:siegel at udel.edu]
> > Sent: Wednesday, July 18, 2012 10:15 AM
> > To: Burton Samograd
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > Yeah, but maybe it can't work.  I think the fundamental problem is
> > that what you consider to be a token depends on the state of the
> > parser, so some communication has to place from the parser to the
> > lexer, which is weird.  It makes more sense to make the whole "BLOCK
> > {...}" one token, as Mike wrote.  Here is a complete grammer which I
> > ran on some examples and works fine:
> >
> > grammar exp;
> >
> > file    :       BLOCK* EOF;
> >
> > BLOCK   :       'BLOCK' WS* LCURLY ( options {greedy=false;} : . )*
> > RCURLY
> >         ;
> >
> > LCURLY  :       '{';
> > RCURLY  :       '}';
> >
> > WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
> >     ;
> >
> >
> > The "BLOCK {" and "}" do appear in the token text but there is
> > probably some way to get rid of them.
> >
> > On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:
> >
> > > Is this what you are suggesting?
> > >
> > > // Global
> > > bool inBlockData = false;
> > >
> > > // Parser
> > > block
> > >    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY {
> > inBlockData = false; }
> > >        -> ^(BLOCK BLOCK_DATA)
> > >    ;
> > >
> > > // Lexer
> > > BLOCK : 'BLOCK' ;
> > > BLOCK_DATA : { inBlockData }?=> (~'}')* ;
> > >
> > > Using this technique gets me a bit further, but I am getting a
> > > recognition exception when I hit the BLOCK_DATA like it is still
> > going
> > > through my original lexer/parser and not collecting the BLOCK_DATA
> > > like I would like it to.
> > >
> > > I did some reading on semantic predicates but literature just gave
> > > examples for parser rules so I am not sure if I applied the
> > > concept
> > to lexer rules properly.
> > >
> > > --
> > > Burton Samograd
> > >
> > > -----Original Message-----
> > > From: Stephen Siegel [mailto:siegel at udel.edu]
> > > Sent: Tuesday, July 17, 2012 6:35 PM
> > > To: Burton Samograd
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > > delimited by curly braces
> > >
> > > You could use a boolean variable added to the lexer "inBlock".
> > Initially it is false.  Set it to true just after matching the LCURLY
> > and back to false after matching RCURLY in the block rule.   They you
> > could define the BLOCK_DATA token using inBlock as a guard (I think
> > that's called a "semantic predicate").  BLOCK_DATA should match
> > anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY
> in
> > the block data, or how would you know when the block ends? -- just
> > like a comment in C, for example.)
> > > -Steve
> > >
> > > On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
> > >
> > >> Hello,
> > >>
> > >> We have a requirement where we need to include a block of
> arbitrary
> > text in a block, like so:
> > >>
> > >> BLOCK { some arbitrary text here }
> > >>
> > >> We initially got around this by making the whole block a token,
> > like:
> > >>
> > >> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> > >>
> > >> but this is less than ideal.  I am thinking that we would use
> > something like:
> > >>
> > >> block : BLOCK RCURLY BLOCK_DATA LCURLY
> > >>
> > >> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
> > >>
> > >> I am stuck on specifying BLOCK_DATA which is basically .* to the
> > lexer.  I have attempted to access the input stream from the parser
> > RECOGNIZER but have not been able to come up with a solution.
> > >>
> > >> I am looking to basically hijack the input stream after seeing a
> > BLOCK token so I can read the arbitrary text; I can parse out the  {
> }
> > as needed.
> > >>
> > >> Is this possible?
> > >>
> > >> --
> > >> Burton Samograd
> > >>
> > >> ________________________________
> > >> This e-mail, including accompanying communications and
> attachments,
> > >> is strictly confidential and only for the intended recipient. Any
> > >> retention, use or disclosure not expressly authorised by Markit
> > >> is prohibited. This email is subject to all waivers and other
> > >> terms
> at
> > >> the following link:
> > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > >>
> > >> Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > for contact information on our offices worldwide.
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > addres
> > >> s
> > >
> > >
> > > This e-mail, including accompanying communications and
> > > attachments,
> > is
> > > strictly confidential and only for the intended recipient. Any
> > > retention, use or disclosure not expressly authorised by Markit is
> > > prohibited. This email is subject to all waivers and other terms
> > > at the following link:
> > > http://www.markit.com/en/about/legal/email-disclaimer.page
> > >
> > > Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > for contact information on our offices worldwide.
> >
> >
> > This e-mail, including accompanying communications and attachments,
> is
> > strictly confidential and only for the intended recipient. Any
> > retention, use or disclosure not expressly authorised by Markit is
> > prohibited. This email is subject to all waivers and other terms at
> > the following link: http://www.markit.com/en/about/legal/email-
> > disclaimer.page
> >
> > Please visit http://www.markit.com/en/about/contact/contact-us.page?
> > for contact information on our offices worldwide.
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at
> the following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From jimi at temporal-wave.com  Fri Jul 20 11:18:21 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Jul 2012 11:18:21 -0700
Subject: [antlr-interest] Reading block of arbitrary text delimited by
 curly braces
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E47339D7@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733880@NJ4MSGSCR02.markit.partners>
	<0E2E1AD3-C9BB-4967-A806-B792A405FA86@udel.edu>	<D2A5C7470D67A54FACE86B838946D49D14E47338AC@NJ4MSGSCR02.markit.partners>
	<A59A2856-1961-4F0E-A0AB-1A1DAEEB49C0@UDel.Edu>	<D2A5C7470D67A54FACE86B838946D49D14E47338C8@NJ4MSGSCR02.markit.partners>
	<17f50286cf37ae7e53ec9885a25d4b51@mail.gmail.com>	<D2A5C7470D67A54FACE86B838946D49D14E47338DD@NJ4MSGSCR02.markit.partners>
	<9f90078f223fb97085a2b1e8f71360eb@mail.gmail.com>
	<D2A5C7470D67A54FACE86B838946D49D14E47339D7@NJ4MSGSCR02.markit.partners>
Message-ID: <657ba2f297e49da85b99aba2c370f896@mail.gmail.com>

Don't use the greedy = false as you are using ~'}' anyway, which will
exit.

Also this:

(' '|'\t'|'\r'|'\n')+)=>' '

isn't needed because you only accept a space anyway and there must be at
least one space. So, the rule is:

BLOCK
         : 'BLOCK'
              (' '|'\t'|'\r'|'\n')+
                (  '{')=>'{'
                  | { error(MISSING_LBRACE);}
                )
                (~'}')*
                (  '}')=>'}'
                  | { error(MISSING_RBRACE);}
                )
         ;

Make sure you use new lines and balance the parens so you can see what the
rule is doing visually.

As I said earlier - trying to signal the parser from the lexer does not
work because the lexer will generally scan everything, then the parser
will run. You need the LEXER to issue the error message, not the parser
(where it is too late).

Generally, the lexer and parser should share the same error accumulation
code - the lexer adds any errors and warnings, then the parser can run and
add any errors and warnings, then if none of the errors are fatal, then
tree walker or whatever runs and adds any errors and warnings. Then when
the run completes successfully or not, you iterate the error and warning
messages and print them out.

To repeat, you cannot reliably signal the parser from the lexer - this is
an age old problem with recognizers.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Burton Samograd
> Sent: Friday, July 20, 2012 10:29 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text delimited
> by curly braces
>
> I've gotten a bit further, but again I've hit a brick wall. Following
> your advice below I now have:
>
> BLOCK
>         : 'BLOCK' ((' '|'\t'|'\r'|'\n')+)=>' '
>         ( ('{')=>'{' | { errorFlag = true; } )
>         ( options { greedy = false; } : (~'}')*) '}'
>         ;
>
> In my parser, My grammar is now like:
>
> Job : JOB ID LCURLY BLOCK {
>     If(errorFlag) {
>         throw Exception;
>     }
> } RCURLY
>
> This technique works fine with a single JOB block, but with multiple
> JOB blocks it looks like the whole file is being slurped up by the
> lexer prior to being passed to the parser, causing my errorFlag to be
> set due to an invalid BLOCK at the end of the file before it even gets
> to the JOB parsing rule for the first job block.
>
> I'm used to bison where tokens are read one at a time as needed; does
> antlr not work this way?  Is throwing the exception directly from the
> lexer as it happens the only way around this? I am throwing the
> exception from the parser so I can give a better error message that
> includes the job name and line number of the BLOCK; is the current line
> number available from the lexer?
>
> --
> Burton Samograd
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Wednesday, July 18, 2012 1:25 PM
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Reading block of arbitrary text delimited
> by curly braces
>
> No, it is just saying that the next part of the rule can eat that too,
> but it will do the right thing.
>
> You can lose the warning:
>
>             (
>                 ('{')=>'{'
>               | { error("Missing opening brace for BLOCK"); }
>             )
>
>
> And you can do that with any other warnings in the rule.
>
> I use this technique all the time.
>
> Jim
>
>
> > -----Original Message-----
> > From: Burton Samograd [mailto:burton.samograd at markit.com]
> > Sent: Wednesday, July 18, 2012 11:44 AM
> > To: Jim Idle
> > Cc: antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > Good idea but giving the ( '{' | ... ) alternative gives me multiple
> > alternative warnings/errors, possibly because we already have LCURLY
> > defined as a lexer token:
> >
> > warning(200): SDL.g:869:35: Decision can match input such as "'{'"
> > using multiple alternatives: 1, 2
> >
> > --
> > Burton Samograd
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Jim Idle
> > Sent: Wednesday, July 18, 2012 11:34 AM
> > Cc: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > delimited by curly braces
> >
> > You will have to handle this in the lexer - you are trying to perform
> > syntax driven lexing and this requires context and communication
> > between the parser and the lexer and is either not going to work at
> > all, or will fail in seemingly strange ways.
> >
> >
> > BLOCK: 'BLOCK'
> >        (
> >            (
> >                '{'
> >              | { error("Missing opening brace for BLOCK"); }
> >            )
> >
> > { /* Could set token start here */ }
> >
> >               (~'}')*
> >
> > { /* Could set token end here by calling emit(); }
> >
> >                  (   '}'  // Good
> >                    | { error("Missing closing brace"); }
> >                  )
> >        )
> > ;
> >
> > You might need to tweak the above for your needs, but you are not
> > going to make this work correctly from the parser. You could fake
> > lexer states so that you get more than one token in the stream, but
> > your errors are so simple, that I personally would not bother.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Burton Samograd
> > > Sent: Wednesday, July 18, 2012 9:50 AM
> > > To: Stephen Siegel
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > > delimited by curly braces
> > >
> > > To clarify why pulling in the block as a whole token was not ideal,
> > we
> > > did have it working that way but an issue was presented where we
> > would
> > > like to give a better error message when the curlies are forgotten.
> > > Initially I tried to create another block matching rule that
> started
> > > with 'BLOCK' and searched for any character that was not a { and
> > > used that in an alternate match rule but it caused issues in other
> > > parts
> > of
> > > the parser which made little sense.  This is why I am looking to
> > break
> > > the block rule out of Its single lexer token implementation if it's
> > > possible.
> > >
> > > --
> > > Burton Samograd
> > >
> > > -----Original Message-----
> > > From: Stephen Siegel [mailto:siegel at udel.edu]
> > > Sent: Wednesday, July 18, 2012 10:15 AM
> > > To: Burton Samograd
> > > Cc: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > > delimited by curly braces
> > >
> > > Yeah, but maybe it can't work.  I think the fundamental problem is
> > > that what you consider to be a token depends on the state of the
> > > parser, so some communication has to place from the parser to the
> > > lexer, which is weird.  It makes more sense to make the whole
> "BLOCK
> > > {...}" one token, as Mike wrote.  Here is a complete grammer which
> I
> > > ran on some examples and works fine:
> > >
> > > grammar exp;
> > >
> > > file    :       BLOCK* EOF;
> > >
> > > BLOCK   :       'BLOCK' WS* LCURLY ( options {greedy=false;} : . )*
> > > RCURLY
> > >         ;
> > >
> > > LCURLY  :       '{';
> > > RCURLY  :       '}';
> > >
> > > WS  :  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;}
> > >     ;
> > >
> > >
> > > The "BLOCK {" and "}" do appear in the token text but there is
> > > probably some way to get rid of them.
> > >
> > > On Jul 18, 2012, at 10:55 AM, Burton Samograd wrote:
> > >
> > > > Is this what you are suggesting?
> > > >
> > > > // Global
> > > > bool inBlockData = false;
> > > >
> > > > // Parser
> > > > block
> > > >    : BLOCK LCURLY { inBlockData = true; }  BLOCK_DATA RCURLY {
> > > inBlockData = false; }
> > > >        -> ^(BLOCK BLOCK_DATA)
> > > >    ;
> > > >
> > > > // Lexer
> > > > BLOCK : 'BLOCK' ;
> > > > BLOCK_DATA : { inBlockData }?=> (~'}')* ;
> > > >
> > > > Using this technique gets me a bit further, but I am getting a
> > > > recognition exception when I hit the BLOCK_DATA like it is still
> > > going
> > > > through my original lexer/parser and not collecting the
> BLOCK_DATA
> > > > like I would like it to.
> > > >
> > > > I did some reading on semantic predicates but literature just
> gave
> > > > examples for parser rules so I am not sure if I applied the
> > > > concept
> > > to lexer rules properly.
> > > >
> > > > --
> > > > Burton Samograd
> > > >
> > > > -----Original Message-----
> > > > From: Stephen Siegel [mailto:siegel at udel.edu]
> > > > Sent: Tuesday, July 17, 2012 6:35 PM
> > > > To: Burton Samograd
> > > > Cc: antlr-interest at antlr.org
> > > > Subject: Re: [antlr-interest] Reading block of arbitrary text
> > > > delimited by curly braces
> > > >
> > > > You could use a boolean variable added to the lexer "inBlock".
> > > Initially it is false.  Set it to true just after matching the
> LCURLY
> > > and back to false after matching RCURLY in the block rule.   They
> you
> > > could define the BLOCK_DATA token using inBlock as a guard (I think
> > > that's called a "semantic predicate").  BLOCK_DATA should match
> > > anything EXCEPT RCURLY (I'm assuming you don't want to allow RCURLY
> > in
> > > the block data, or how would you know when the block ends? -- just
> > > like a comment in C, for example.)
> > > > -Steve
> > > >
> > > > On Jul 17, 2012, at 3:57 PM, Burton Samograd wrote:
> > > >
> > > >> Hello,
> > > >>
> > > >> We have a requirement where we need to include a block of
> > arbitrary
> > > text in a block, like so:
> > > >>
> > > >> BLOCK { some arbitrary text here }
> > > >>
> > > >> We initially got around this by making the whole block a token,
> > > like:
> > > >>
> > > >> BLOCK : 'BLOCK (' '|'\t'|'\r'|'\n')* '{' (~'}')*  '}' ;
> > > >>
> > > >> but this is less than ideal.  I am thinking that we would use
> > > something like:
> > > >>
> > > >> block : BLOCK RCURLY BLOCK_DATA LCURLY
> > > >>
> > > >> with BLOCK : 'BLOCK' and LCURLY/RCURLY as { and }.
> > > >>
> > > >> I am stuck on specifying BLOCK_DATA which is basically .* to the
> > > lexer.  I have attempted to access the input stream from the parser
> > > RECOGNIZER but have not been able to come up with a solution.
> > > >>
> > > >> I am looking to basically hijack the input stream after seeing a
> > > BLOCK token so I can read the arbitrary text; I can parse out the
> {
> > }
> > > as needed.
> > > >>
> > > >> Is this possible?
> > > >>
> > > >> --
> > > >> Burton Samograd
> > > >>
> > > >> ________________________________
> > > >> This e-mail, including accompanying communications and
> > attachments,
> > > >> is strictly confidential and only for the intended recipient.
> Any
> > > >> retention, use or disclosure not expressly authorised by Markit
> > > >> is prohibited. This email is subject to all waivers and other
> > > >> terms
> > at
> > > >> the following link:
> > > >> http://www.markit.com/en/about/legal/email-disclaimer.page
> > > >>
> > > >> Please visit http://www.markit.com/en/about/contact/contact-
> > us.page?
> > > for contact information on our offices worldwide.
> > > >>
> > > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > >> Unsubscribe:
> > > >> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > addres
> > > >> s
> > > >
> > > >
> > > > This e-mail, including accompanying communications and
> > > > attachments,
> > > is
> > > > strictly confidential and only for the intended recipient. Any
> > > > retention, use or disclosure not expressly authorised by Markit
> is
> > > > prohibited. This email is subject to all waivers and other terms
> > > > at the following link:
> > > > http://www.markit.com/en/about/legal/email-disclaimer.page
> > > >
> > > > Please visit http://www.markit.com/en/about/contact/contact-
> > us.page?
> > > for contact information on our offices worldwide.
> > >
> > >
> > > This e-mail, including accompanying communications and attachments,
> > is
> > > strictly confidential and only for the intended recipient. Any
> > > retention, use or disclosure not expressly authorised by Markit is
> > > prohibited. This email is subject to all waivers and other terms at
> > > the following link: http://www.markit.com/en/about/legal/email-
> > > disclaimer.page
> > >
> > > Please visit http://www.markit.com/en/about/contact/contact-
> us.page?
> > > for contact information on our offices worldwide.
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> > interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> >
> > This e-mail, including accompanying communications and attachments,
> is
> > strictly confidential and only for the intended recipient. Any
> > retention, use or disclosure not expressly authorised by Markit is
> > prohibited. This email is subject to all waivers and other terms at
> > the following link: http://www.markit.com/en/about/legal/email-
> > disclaimer.page
> >
> > Please visit http://www.markit.com/en/about/contact/contact-us.page?
> > for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at the
> following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jasonveldicott at gmail.com  Fri Jul 20 12:04:29 2012
From: jasonveldicott at gmail.com (Jason Veldicott)
Date: Fri, 20 Jul 2012 12:04:29 -0700
Subject: [antlr-interest] Rewrite rule in Habelitz Java grammar ignored?
Message-ID: <CAK4NeTEmfN3s6gQ-Wad-LzuFDhe9uPWjajqJ6X+Xq-0gEHgq_w@mail.gmail.com>

Hi,

I'm trying to get Habelitz's
(http://www.habelitz.com<http://www.habelitz.com/index.php?option=com_content&task=view&id=12&Itemid=8>)
Java
grammar running, java.g, and have encountered a problem in which the
following top-level parser rule:

javaSource
    :   compilationUnit
        ->  ^(JAVA_SOURCE compilationUnit)


does not produce an AST rooted with JAVA_SOURCE, but instead with a node
named ANNOTATION_LIST, which comes later in the grammar.  A longer listing
of the produced AST appears at end of this post.

It seems the rewrite part of this rule is ignored.  I need it not to be,
otherwise the accompanying JavaTreeParser.g (by Habelitz) results in this
error:

JavaTreeParser.g: node from line 0:0 mismatched tree node: ANNOTATION_LIST
expecting JAVA_SOURCE


Any suggestion as to what my be going wrong here would be much appreciated.

Thanks

Jason


tree=ANNOTATION_LIST (import (. (. java io) File)) (class (MODIFIER_LIST
public) Test1 (CLASS_TOP_LEVEL_SCOPE (VOID_METHOD_DECL (MODIFIER_LIST
public) test FORMAL_PARAM_LIST (BLOCK_SCOPE (EXPR (METHOD_CALL (. (. System
out) println) (ARGUMENT_LIST (EXPR "testing"))))))))
null
     ANNOTATION_LIST
     import
          .
               .
                    java
                    io
               File
     class
          MODIFIER_LIST

From jasonveldicott at gmail.com  Fri Jul 20 12:19:20 2012
From: jasonveldicott at gmail.com (Jason Veldicott)
Date: Fri, 20 Jul 2012 12:19:20 -0700
Subject: [antlr-interest] Rewrite rule in Habelitz Java grammar ignored?
In-Reply-To: <CAK4NeTEmfN3s6gQ-Wad-LzuFDhe9uPWjajqJ6X+Xq-0gEHgq_w@mail.gmail.com>
References: <CAK4NeTEmfN3s6gQ-Wad-LzuFDhe9uPWjajqJ6X+Xq-0gEHgq_w@mail.gmail.com>
Message-ID: <CAK4NeTFqH8MVi3Ay-VSLkJj-woiB_zN31R0rTXaQKKaEXG4GZg@mail.gmail.com>

Apologies, problem resolved, somewhat embarrassingly.

There was a simple mistake in the test rig in which compilationUnit() was
called on the parser rather than javaSource().

Jason


On Fri, Jul 20, 2012 at 12:04 PM, Jason Veldicott
<jasonveldicott at gmail.com>wrote:

> Hi,
>
> I'm trying to get Habelitz's (http://www.habelitz.com<http://www.habelitz.com/index.php?option=com_content&task=view&id=12&Itemid=8>) Java
> grammar running, java.g, and have encountered a problem in which the
> following top-level parser rule:
>
> javaSource
>     :   compilationUnit
>         ->  ^(JAVA_SOURCE compilationUnit)
>
>
> does not produce an AST rooted with JAVA_SOURCE, but instead with a node
> named ANNOTATION_LIST, which comes later in the grammar.  A longer listing
> of the produced AST appears at end of this post.
>
> It seems the rewrite part of this rule is ignored.  I need it not to be,
> otherwise the accompanying JavaTreeParser.g (by Habelitz) results in this
> error:
>
> JavaTreeParser.g: node from line 0:0 mismatched tree node: ANNOTATION_LIST
> expecting JAVA_SOURCE
>
>
> Any suggestion as to what my be going wrong here would be much appreciated.
>
> Thanks
>
> Jason
>
>
> tree=ANNOTATION_LIST (import (. (. java io) File)) (class (MODIFIER_LIST
> public) Test1 (CLASS_TOP_LEVEL_SCOPE (VOID_METHOD_DECL (MODIFIER_LIST
> public) test FORMAL_PARAM_LIST (BLOCK_SCOPE (EXPR (METHOD_CALL (. (. System
> out) println) (ARGUMENT_LIST (EXPR "testing"))))))))
>
null
>      ANNOTATION_LIST
>      import
>           .
>                .
>                     java
>                     io
>                File
>      class
>           MODIFIER_LIST
>

From jimi at temporal-wave.com  Fri Jul 20 12:22:33 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 Jul 2012 12:22:33 -0700
Subject: [antlr-interest] Rewrite rule in Habelitz Java grammar ignored?
In-Reply-To: <CAK4NeTEmfN3s6gQ-Wad-LzuFDhe9uPWjajqJ6X+Xq-0gEHgq_w@mail.gmail.com>
References: <CAK4NeTEmfN3s6gQ-Wad-LzuFDhe9uPWjajqJ6X+Xq-0gEHgq_w@mail.gmail.com>
Message-ID: <2cb254b7d03e9250ed7fd8cd10f2b595@mail.gmail.com>

Did you try:

javaSource
     :   compilationUnit EOF
         ->  ^(JAVA_SOURCE compilationUnit)


And insure that you are invoking the parser via the javaSource rule?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jason Veldicott
> Sent: Friday, July 20, 2012 12:04 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Rewrite rule in Habelitz Java grammar
> ignored?
>
> Hi,
>
> I'm trying to get Habelitz's
> (http://www.habelitz.com<http://www.habelitz.com/index.php?option=com_c
> ontent&task=view&id=12&Itemid=8>)
> Java
> grammar running, java.g, and have encountered a problem in which the
> following top-level parser rule:
>
> javaSource
>     :   compilationUnit
>         ->  ^(JAVA_SOURCE compilationUnit)
>
>
> does not produce an AST rooted with JAVA_SOURCE, but instead with a
> node named ANNOTATION_LIST, which comes later in the grammar.  A longer
> listing of the produced AST appears at end of this post.
>
> It seems the rewrite part of this rule is ignored.  I need it not to
> be, otherwise the accompanying JavaTreeParser.g (by Habelitz) results
> in this
> error:
>
> JavaTreeParser.g: node from line 0:0 mismatched tree node:
> ANNOTATION_LIST expecting JAVA_SOURCE
>
>
> Any suggestion as to what my be going wrong here would be much
> appreciated.
>
> Thanks
>
> Jason
>
>
> tree=ANNOTATION_LIST (import (. (. java io) File)) (class
> (MODIFIER_LIST
> public) Test1 (CLASS_TOP_LEVEL_SCOPE (VOID_METHOD_DECL (MODIFIER_LIST
> public) test FORMAL_PARAM_LIST (BLOCK_SCOPE (EXPR (METHOD_CALL (. (.
> System
> out) println) (ARGUMENT_LIST (EXPR "testing")))))))) null
>      ANNOTATION_LIST
>      import
>           .
>                .
>                     java
>                     io
>                File
>      class
>           MODIFIER_LIST
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From rrlear at gmail.com  Fri Jul 20 15:20:37 2012
From: rrlear at gmail.com (Russell Lear)
Date: Fri, 20 Jul 2012 15:20:37 -0700
Subject: [antlr-interest] Beginners Problem: Null Reference Exception
Message-ID: <CAJeBK9AJKByE41UqP2y-2O+Zy8nfPZmxmSWWGZ2nTCt-Pa_hbw@mail.gmail.com>

Not sure if this is the right forum - let me know where I should go if it
isn't.

I just bought the ANTLR reference book and I've been working through the
examples.  I'm working in C# with .NET 4.5 and so some things don't work
exactly the same as what's in the book, but for  the most part it has been
a lot of fun.  However, I do have one issue.

I sometimes get a null reference exception in the parser when I call the
parser with the top-level target at a line that looks like:

root_0 = (CommonTree)adaptor.Nil();


I can fix this fairly easily in my code by setting

parser.TreeAdaptor = new CommonTreeAdaptor();


(TreeAdaptor is a property backed by the field adaptor)

But this seems wrong in that my code probably shouldn't know about, much
less be setting, internal parser variables.

The grammar I'm using comes from tour/trees/Expr.g and the C# code is a
straightforward translation of the Java that's in the book (I've played
with it somewhat so it might not be identical):

            ANTLRStringStream input = new ANTLRStringStream(target);
            ExprLexer lexer = new ExprLexer(input);
            var tokens = new CommonTokenStream(lexer);
            var parser = new ExprParser(tokens);
      //    parser.TreeAdaptor = new CommonTreeAdaptor();   // odd
(required?) addition
            var r = parser.prog(); // Exception occurs here

            CommonTree t = r.Tree;
            var nodes = new CommonTreeNodeStream(t);
            Eval walker = new Eval(nodes);
            walker.prog();

            foreach (var k in walker.memory.Keys) {
                Console.WriteLine("    {0} ==> {1}", k,
walker.memory[k]);            }

            Console.Write("Done ");
            Console.ReadKey();

Is this just the way it is?  Or am I missing something?  Thanks for any
help and direction!

Russell.

From krishsub at microsoft.com  Sat Jul 21 03:31:20 2012
From: krishsub at microsoft.com (Krishnan Subramanian)
Date: Sat, 21 Jul 2012 10:31:20 +0000
Subject: [antlr-interest] Lexer: strings that are starting sub-strings of
	another
Message-ID: <A0EF8C41D8FC2842A6477290B001CA2CD4F9E1@DB3EX14MBXC329.europe.corp.microsoft.com>

Hi all,

I've been exploring ANTLR for creating a custom DSL for a scripting language with the intention being to generate a parser and lexer in C#.

I've started by generating writing a lexer grammar and a parser grammar. This mostly works fine.

However, I've run into a lexer case where my language can contain words that are [starting] sub-strings of another and should be treated differently.

For e.g. the script is ~English where I can have:

                if (someVar is greater than anotherVar)                                                // someVar > anotherVar where GT is defined as 'is greater than'
                if (somevar is greater than or equal to anotherVar)          // someVar >= anotherVar where OP_GE is defined as 'is greater than or equal to'

In my lexer grammar, I have two definitions:

GT          :               'is greater than';
OP_GE  :               'is greater than or equal to';

The generated (C#) lexer barfs at runtime with an NoViableAltException and then mangles GT when it encounters it in a test case truncating a few characters and erroneously reporting it as an identifier. This obviously works with GT being defined as a '>' and a OP_GE being defined as a '>='.

Questions:
=========

I'm not that familiar with ANTLR yet, and I suspect this might have something to do with lookaheads (1 or 2), but I don't know what to do. Relative ordering within the lexer grammar has no effect.

I've tried using syntactic predicates; but that did not change anything with respect to runtime behavior. I probably did something wrong in terms of specifying it for a lexer grammar.

And I don't know if this is a general ANTLR issue or a generated C# thing, but maybe someone has pointers? Specifying a custom lookahead? Could be a solution if it works, but seems fragile. Or is there some solution I'm missing?

Thanks,

-krish

From jimi at temporal-wave.com  Sat Jul 21 08:22:18 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 21 Jul 2012 08:22:18 -0700
Subject: [antlr-interest] Lexer: strings that are starting sub-strings
	of another
In-Reply-To: <A0EF8C41D8FC2842A6477290B001CA2CD4F9E1@DB3EX14MBXC329.europe.corp.microsoft.com>
References: <A0EF8C41D8FC2842A6477290B001CA2CD4F9E1@DB3EX14MBXC329.europe.corp.microsoft.com>
Message-ID: <69bc914ba7bb2e667e5770db42d6c7c8@mail.gmail.com>

This language sounds too verbose to me, and having tokens that span
whitespace is going to bite you later. What about tabs, more than one
space and so on? You are better tokenizing the individual words and
constructing the sentences in the parser.

However:

fragment OP_GE : ;

GT    : 'is greater than'
         (   ' or equal to' { $type = OP_GE; }
           |
         )
      ;


Again though, I think that you may want to step back and consider whether
such verbose expression syntax is really a benefit or not.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Krishnan Subramanian
> Sent: Saturday, July 21, 2012 3:31 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Lexer: strings that are starting sub-strings
> of another
>
> Hi all,
>
> I've been exploring ANTLR for creating a custom DSL for a scripting
> language with the intention being to generate a parser and lexer in C#.
>
> I've started by generating writing a lexer grammar and a parser
> grammar. This mostly works fine.
>
> However, I've run into a lexer case where my language can contain words
> that are [starting] sub-strings of another and should be treated
> differently.
>
> For e.g. the script is ~English where I can have:
>
>                 if (someVar is greater than anotherVar)
> // someVar > anotherVar where GT is defined as 'is greater than'
>                 if (somevar is greater than or equal to anotherVar)
> // someVar >= anotherVar where OP_GE is defined as 'is greater than or
> equal to'
>
> In my lexer grammar, I have two definitions:
>
> GT          :               'is greater than';
> OP_GE  :               'is greater than or equal to';
>
> The generated (C#) lexer barfs at runtime with an NoViableAltException
> and then mangles GT when it encounters it in a test case truncating a
> few characters and erroneously reporting it as an identifier. This
> obviously works with GT being defined as a '>' and a OP_GE being
> defined as a '>='.
>
> Questions:
> =========
>
> I'm not that familiar with ANTLR yet, and I suspect this might have
> something to do with lookaheads (1 or 2), but I don't know what to do.
> Relative ordering within the lexer grammar has no effect.
>
> I've tried using syntactic predicates; but that did not change anything
> with respect to runtime behavior. I probably did something wrong in
> terms of specifying it for a lexer grammar.
>
> And I don't know if this is a general ANTLR issue or a generated C#
> thing, but maybe someone has pointers? Specifying a custom lookahead?
> Could be a solution if it works, but seems fragile. Or is there some
> solution I'm missing?
>
> Thanks,
>
> -krish
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jokeserver at gmail.com  Sat Jul 21 19:29:03 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Sat, 21 Jul 2012 19:29:03 -0700
Subject: [antlr-interest] Lexer: strings that are starting sub-strings
	of another
In-Reply-To: <A0EF8C41D8FC2842A6477290B001CA2CD4F9E1@DB3EX14MBXC329.europe.corp.microsoft.com>
References: <A0EF8C41D8FC2842A6477290B001CA2CD4F9E1@DB3EX14MBXC329.europe.corp.microsoft.com>
Message-ID: <CAN51Nt7DBQvsobNpgByjngDXTBWta_eD2=zaKAug_1sYeiePYQ@mail.gmail.com>

Lexers aren't that great at distinguishing tokens using multiple
lookahead, but my current grammar gets around similar issues by
splitting tokens at word boundaries, and using low level parser rules
as "macro" tokens. Eg. if I wanted "aaa bbb" to be a token and "aaa"
were a token, then I would add a token "bbb" and have a parser rule
"aaa_bbb : AAA BBB". Of course, this means that the whitespace (or
whatever you put on channel HIDDEN) between aaa and bbb is irrelevant.

In your particular case, I'd recommend something slightly different:
split "is", "greater than", "or", and "equal to" into separate tokens,
and encode the ordering of said tokens for comparisons like "is
greater than" and "is equal to" and "is greater than or equal to" as
parser rules.

On Sat, Jul 21, 2012 at 3:31 AM, Krishnan Subramanian
<krishsub at microsoft.com> wrote:
> Hi all,
>
> I've been exploring ANTLR for creating a custom DSL for a scripting language with the intention being to generate a parser and lexer in C#.
>
> I've started by generating writing a lexer grammar and a parser grammar. This mostly works fine.
>
> However, I've run into a lexer case where my language can contain words that are [starting] sub-strings of another and should be treated differently.
>
> For e.g. the script is ~English where I can have:
>
>                 if (someVar is greater than anotherVar)                                                // someVar > anotherVar where GT is defined as 'is greater than'
>                 if (somevar is greater than or equal to anotherVar)          // someVar >= anotherVar where OP_GE is defined as 'is greater than or equal to'
>
> In my lexer grammar, I have two definitions:
>
> GT          :               'is greater than';
> OP_GE  :               'is greater than or equal to';
>
> The generated (C#) lexer barfs at runtime with an NoViableAltException and then mangles GT when it encounters it in a test case truncating a few characters and erroneously reporting it as an identifier. This obviously works with GT being defined as a '>' and a OP_GE being defined as a '>='.
>
> Questions:
> =========
>
> I'm not that familiar with ANTLR yet, and I suspect this might have something to do with lookaheads (1 or 2), but I don't know what to do. Relative ordering within the lexer grammar has no effect.
>
> I've tried using syntactic predicates; but that did not change anything with respect to runtime behavior. I probably did something wrong in terms of specifying it for a lexer grammar.
>
> And I don't know if this is a general ANTLR issue or a generated C# thing, but maybe someone has pointers? Specifying a custom lookahead? Could be a solution if it works, but seems fragile. Or is there some solution I'm missing?
>
> Thanks,
>
> -krish
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From krishsub at microsoft.com  Sun Jul 22 03:23:28 2012
From: krishsub at microsoft.com (Krishnan Subramanian)
Date: Sun, 22 Jul 2012 10:23:28 +0000
Subject: [antlr-interest] Lexer: strings that are starting sub-strings
 of another
In-Reply-To: <CAN51Nt7DBQvsobNpgByjngDXTBWta_eD2=zaKAug_1sYeiePYQ@mail.gmail.com>
References: <A0EF8C41D8FC2842A6477290B001CA2CD4F9E1@DB3EX14MBXC329.europe.corp.microsoft.com>
	<CAN51Nt7DBQvsobNpgByjngDXTBWta_eD2=zaKAug_1sYeiePYQ@mail.gmail.com>
Message-ID: <A0EF8C41D8FC2842A6477290B001CA2CD4FD4D@DB3EX14MBXC329.europe.corp.microsoft.com>

Hello Benjamin, Jim:

Your responses are appreciated.

Maybe a bit of context is relevant here - which also makes my post long, but given that this is a relatively new area for me (language design, lexers, parsers), I'd more than appreciate thoughts of others more experienced in this area.

The context here is that there is an existing language that was built by a large public sector organization - essentially a homebrew solution developed over a number of years. This homebrew solution has a verbose language and an editor environment where a number of business specifications are defined (think 10s of thousands of lines of specifications). From the specifications, target code solutions are generated (C#/Java/etc.). The homebrew solution is built using a platform that is considered a business risk; and the intention is to use more standardized platforms and tools (say Eclipse or Visual Studio) in order to be able to write/maintain the specifications while still maintaining the code generation targets.

The challenge is that the homebrew solution specification language has no formal grammar defined.

So my initial approach was to define a lexer grammar and a parser grammar for the existing language for business specifications that would enable me to plug in the language into a development environment (say Visual Studio).

And without having to change key language elements in the existing specification language.

So if the specification language contained a keyword 'is greater than'; then treating it as a contextual keyword vs. an actual keyword (in my thinking) also meant the difference between a lexer recognizing it immediately (and being able to flag as such immediately in an editor that gives you individual lines instead of the whole text block) vs. a parser later on in the cycle recognizing it as one after seeing sequences of tokens and interpreting it as a keyword given certain rules - say the tokens appear in a particular order.

Thoughts?

-krish

-----Original Message-----
From: Benjamin S Wolf [mailto:jokeserver at gmail.com] 
Sent: Sunday, July 22, 2012 4:29 AM
To: Krishnan Subramanian
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Lexer: strings that are starting sub-strings of another

Lexers aren't that great at distinguishing tokens using multiple lookahead, but my current grammar gets around similar issues by splitting tokens at word boundaries, and using low level parser rules as "macro" tokens. Eg. if I wanted "aaa bbb" to be a token and "aaa"
were a token, then I would add a token "bbb" and have a parser rule "aaa_bbb : AAA BBB". Of course, this means that the whitespace (or whatever you put on channel HIDDEN) between aaa and bbb is irrelevant.

In your particular case, I'd recommend something slightly different:
split "is", "greater than", "or", and "equal to" into separate tokens, and encode the ordering of said tokens for comparisons like "is greater than" and "is equal to" and "is greater than or equal to" as parser rules.

On Sat, Jul 21, 2012 at 3:31 AM, Krishnan Subramanian <krishsub at microsoft.com> wrote:
> Hi all,
>
> I've been exploring ANTLR for creating a custom DSL for a scripting language with the intention being to generate a parser and lexer in C#.
>
> I've started by generating writing a lexer grammar and a parser grammar. This mostly works fine.
>
> However, I've run into a lexer case where my language can contain words that are [starting] sub-strings of another and should be treated differently.
>
> For e.g. the script is ~English where I can have:
>
>                 if (someVar is greater than anotherVar)                                                // someVar > anotherVar where GT is defined as 'is greater than'
>                 if (somevar is greater than or equal to anotherVar)          // someVar >= anotherVar where OP_GE is defined as 'is greater than or equal to'
>
> In my lexer grammar, I have two definitions:
>
> GT          :               'is greater than';
> OP_GE  :               'is greater than or equal to';
>
> The generated (C#) lexer barfs at runtime with an NoViableAltException and then mangles GT when it encounters it in a test case truncating a few characters and erroneously reporting it as an identifier. This obviously works with GT being defined as a '>' and a OP_GE being defined as a '>='.
>
> Questions:
> =========
>
> I'm not that familiar with ANTLR yet, and I suspect this might have something to do with lookaheads (1 or 2), but I don't know what to do. Relative ordering within the lexer grammar has no effect.
>
> I've tried using syntactic predicates; but that did not change anything with respect to runtime behavior. I probably did something wrong in terms of specifying it for a lexer grammar.
>
> And I don't know if this is a general ANTLR issue or a generated C# thing, but maybe someone has pointers? Specifying a custom lookahead? Could be a solution if it works, but seems fragile. Or is there some solution I'm missing?
>
> Thanks,
>
> -krish
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From pedrogfrancisco at gmail.com  Sun Jul 22 04:31:58 2012
From: pedrogfrancisco at gmail.com (Pedro Francisco)
Date: Sun, 22 Jul 2012 12:31:58 +0100
Subject: [antlr-interest] Composite Grammar issues
Message-ID: <CAJZjf_zgS543E4MN9n0U+X1_sEJJh+UEa0dbSU128WmaRzPzrw@mail.gmail.com>

Hello!
I won't debug this further for the time being but here are my
findings, may be of use to someone.

Context: I was trying to split Java.g (OpenJDK's Java.g, not
examples-v3's) into JavaLexer.g and JavaParser.g and import them from
a Main.g. I'd change rules originally from Java.g and then paste them
on Main.g, with the purpose of rewriting the parsed text (on this
phase I found the first bug, already discussed here on the ML, in
which the lexer is not created unless some lexer rules are present on
Main.g).
I am using "((TokenRewriteStream)input.delete($a,$b)" every now and then.

Having no errors compiling, I got a different output than expected. I
then tried to copy all the rules from JavaParser.g and JavaLexer.g
(minus duplicate rules) and the parser would work as expected.

Besides not working as expected, I'd have on the output text the
following symptoms:
"/**" became "**"
"/*" became "*"
"array's element" became "arrayelement"
(comments are $channel=hidden, not skip())

This was with ANTLR3.4-SNAPSHOT ( 20120712 ). I also tried ANTLR3.4
and ANTLR3.3 but on those versions I just noticed the parser was
misbehaving and did not check if the above errors ocurred as well. ST4
doesn't like ANTLR3.2 (ClassNotFoundException) and I didn't try
stripping ST code to test on ANTLR3.2.

I'm sorry I can't help for now with more debugging. If I have the
chance I'll test again with ANTLR4 in the future but that will take a
while. As such the above text is only to be taken as a "me too" in
case anyone else finds a similar issue.
-- 
Pedro

From pedrogfrancisco at gmail.com  Sun Jul 22 04:38:49 2012
From: pedrogfrancisco at gmail.com (Pedro Francisco)
Date: Sun, 22 Jul 2012 12:38:49 +0100
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAH_m78o_PBaf6T=P1megPuss24SjX47J9xMpMu2QOiQMRXXvxw@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
	<CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
	<CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>
	<CAOrgODZnMCMThHC+VA8p+hQKMvm3vqYmEnVp-ky8oty0YA1w3g@mail.gmail.com>
	<a6498342233bb24ac2b23fd750701a50@mail.gmail.com>
	<CAH_m78o_PBaf6T=P1megPuss24SjX47J9xMpMu2QOiQMRXXvxw@mail.gmail.com>
Message-ID: <CAJZjf_yGBVuNRbo+n8w9YFzsjV+qzqHVtE_XSEr+NWwwjH3S6Q@mail.gmail.com>

On Fri, Jul 20, 2012 at 11:56 AM, Surj Basan <s.basan at surge.it> wrote:
> Can you confirm: if I get the latest v3 from git I should have a working
> version?

Yes, I had the same issue. Citing a previous email:

On Mon, Apr 30, 2012 at 7:04 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
> grab antlr/antlr3 from github which has the fix.
> Ter

From cowang at comcast.net  Sun Jul 22 08:51:11 2012
From: cowang at comcast.net (George S. Cowan)
Date: Sun, 22 Jul 2012 11:51:11 -0400
Subject: [antlr-interest] Java 6 grammar with separate lexer and parser
Message-ID: <000001cd6821$db0a57b0$911f0710$@net>

I have placed a new grammar at 
  http://www.antlr.org/grammar/1342970763769/Java6Separated.zip 
The readme file is copied below.

George

---------

README.txt for the separated Java 6 Lexer and Parser

Please address all issues to the ANTLR Interest mailing list
  http://www.antlr.org/mailman/listinfo/antlr-interest 

Included files:
  Java6Lex.g         - the lexer grammar
  Java6Parse.g       - the parser grammar
  Java6SplitRun.java - Parse input files against the Java6Lex.g and
                       Java6Parse.g grammars
  README.txt         - this file
  build.xml          - the ant build file for testing the grammars
                       (Surely this be done in a simpler way?)
  vendor/examples    - directory of valid and invalid Java programs
  vendor/lib         - directory with the antlr-3.4-complete.jar file

INSTRUCTIONS: 
 1) Place a copy of the antlr-3.4-complete.jar in the directory
      Java6Separated/vendor/lib
 2) Change directory to Java6Separated/src and run: 
      ant

My motivation for separating the lexer and parser was to speed up the 
process of making iterative changes to the Java grammar for experimenting 
with new language features. Generation and compilation of the parser 
grammar (assuming no changes to the lexer grammar) with my ant script 
only dropped from 14 to 6 seconds on my laptop, but it helps a little.

The only changes to the parser that were needed were to replace token
literals with token names, e.g., replace ',' with COMMA, and then add
the tokenVocab=Java6Lex option. And of course change the grammar 
lines in the lexer and parser to: 
  parser grammar Java6Parse;
  lexer grammar Java6Lex;

The grammars' ability to parse correct programs was tested on the 
programs from the book: 
  Java 5.0 Tiger: A Developer's Notebook 
  By Brett McLaughlin, David Flanagan
The programs are available at 
  http://shop.oreilly.com/product/9780596007386.do 
In this distribution they are located at
  ...\Java6Separated\vendor\examples\java\java-adn

The parser's ability to find the errors in invalid Java programs was 
only tested on a single trivial example located at
  ...\Java6Separated\vendor\examples\java\ErrorExamples

This "separated" version was based on the combined lexer/parser that was 
originally written by Terry Parr and modified by Yang Jiang for use in 
the OpenJDK project. See:
http://openjdk.java.net/projects/compiler-grammar/ 
http://openjdk.java.net/projects/compiler-grammar/antlrworks/Java.g

George S. Cowan, July, 2012



From jacob.h.page at gmail.com  Sun Jul 22 12:36:27 2012
From: jacob.h.page at gmail.com (Jacob Page)
Date: Sun, 22 Jul 2012 12:36:27 -0700
Subject: [antlr-interest] CSharp3 language not generating heterogeneous nodes
Message-ID: <CAJ25EjFT_6UB9sXSwChg9eJBLwgkkkHd=kOdzc179zQjT=9xRw@mail.gmail.com>

I want to generate an AST using heterogeneous nodes using the C# 3
language.  My grammar uses rewrite rules.  Unfortunately, it doesn't
look like the generated code utilizes my specified custom node types
at all; rather, only the ASTLabelType directive is respected. Is this
a known limitation of the CSharp3 target, or is there something
additional I have to do besides specifying node types in the rewrite
rules?

From s.basan at surge.it  Sun Jul 22 12:55:21 2012
From: s.basan at surge.it (Surj Basan)
Date: Sun, 22 Jul 2012 20:55:21 +0100
Subject: [antlr-interest] Rewrite bug?
In-Reply-To: <CAJZjf_yGBVuNRbo+n8w9YFzsjV+qzqHVtE_XSEr+NWwwjH3S6Q@mail.gmail.com>
References: <CAH_m78pX61zqef1+d=roZST4ZsEyNxkkSPGyqhPkOd1TkvtHDA@mail.gmail.com>
	<CAH_m78pHrsWyk0ZS7D945i3ob17OjpFftjMyf48KHnYOHPV9Bg@mail.gmail.com>
	<CAOrgODYrXBN05WsYGdO4tQ6=wHT_xgBg+kuU3axM+ob345b8xw@mail.gmail.com>
	<CAH_m78q5JToT_pxOS4GtG_nD8UmjCZF2KOnvrgj9StPCr9FVQg@mail.gmail.com>
	<CAOrgODZnMCMThHC+VA8p+hQKMvm3vqYmEnVp-ky8oty0YA1w3g@mail.gmail.com>
	<a6498342233bb24ac2b23fd750701a50@mail.gmail.com>
	<CAH_m78o_PBaf6T=P1megPuss24SjX47J9xMpMu2QOiQMRXXvxw@mail.gmail.com>
	<CAJZjf_yGBVuNRbo+n8w9YFzsjV+qzqHVtE_XSEr+NWwwjH3S6Q@mail.gmail.com>
Message-ID: <CAH_m78o3=8XLQzYjTmPuO4Ne0OvfxyiihMjxumhy4M-0MUGZjg@mail.gmail.com>

Thanks to all who replied on this question.

I can confirm the rewrite for 'if' rule works with latest git repo from:
https://github.com/antlr/antlr3

For others reading this, you can build with maven, as follows:

mvn -N install
mvn -Dmaven.test.skip=true
mvn -Dmaven.test.skip=true package assembly:assembly

I found that if maven fails, I could just re-run the command it would work
second time. Odd, but jar is successfully built as
'target/antlr-master-3.4.1-SNAPSHOT-completejar.jar'.

Instructions taken from
http://stackoverflow.com/questions/10523543/using-antlr-for-static-analysis-of-java-source-file

Surj

From sam at tunnelvisionlabs.com  Sun Jul 22 15:40:18 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Sun, 22 Jul 2012 17:40:18 -0500
Subject: [antlr-interest] CSharp3 language not generating heterogeneous
	nodes
In-Reply-To: <CAJ25EjFT_6UB9sXSwChg9eJBLwgkkkHd=kOdzc179zQjT=9xRw@mail.gmail.com>
References: <CAJ25EjFT_6UB9sXSwChg9eJBLwgkkkHd=kOdzc179zQjT=9xRw@mail.gmail.com>
Message-ID: <021e01cd685a$f8f6c680$eae45380$@tunnelvisionlabs.com>

Since the hetero-node feature was infrequently used compared to certain
rewrite situations, the C# port of ANTLR uses a different syntax for hetero
nodes.

The new feature is explained in section 5.8 of the documentation on the
following page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

To use the hetero-nodes, you'll need to use the full syntax. Instead of
this:

Token<NodeType>

You'll need to use this:

Token<node=NodeType>

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Jacob Page [mailto:jacob.h.page at gmail.com] 
Sent: Sunday, July 22, 2012 2:36 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] CSharp3 language not generating heterogeneous
nodes

I want to generate an AST using heterogeneous nodes using the C# 3 language.
My grammar uses rewrite rules.  Unfortunately, it doesn't look like the
generated code utilizes my specified custom node types at all; rather, only
the ASTLabelType directive is respected. Is this a known limitation of the
CSharp3 target, or is there something additional I have to do besides
specifying node types in the rewrite rules?

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jacob.h.page at gmail.com  Sun Jul 22 21:17:56 2012
From: jacob.h.page at gmail.com (Jacob Page)
Date: Sun, 22 Jul 2012 21:17:56 -0700
Subject: [antlr-interest] CSharp3 language not generating heterogeneous
	nodes
In-Reply-To: <021e01cd685a$f8f6c680$eae45380$@tunnelvisionlabs.com>
References: <CAJ25EjFT_6UB9sXSwChg9eJBLwgkkkHd=kOdzc179zQjT=9xRw@mail.gmail.com>
	<021e01cd685a$f8f6c680$eae45380$@tunnelvisionlabs.com>
Message-ID: <CAJ25EjGYu0rFs0D59Z4No8DXcZ_wXjDaNXnmAUiTabYyGbqHcw@mail.gmail.com>

Adding the explicit node= worked.  Thanks a bunch!

On Sun, Jul 22, 2012 at 3:40 PM, Sam Harwell <sam at tunnelvisionlabs.com> wrote:
> Since the hetero-node feature was infrequently used compared to certain
> rewrite situations, the C# port of ANTLR uses a different syntax for hetero
> nodes.
>
> The new feature is explained in section 5.8 of the documentation on the
> following page:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
>
> To use the hetero-nodes, you'll need to use the full syntax. Instead of
> this:
>
> Token<NodeType>
>
> You'll need to use this:
>
> Token<node=NodeType>
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> From: Jacob Page [mailto:jacob.h.page at gmail.com]
> Sent: Sunday, July 22, 2012 2:36 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] CSharp3 language not generating heterogeneous
> nodes
>
> I want to generate an AST using heterogeneous nodes using the C# 3 language.
> My grammar uses rewrite rules.  Unfortunately, it doesn't look like the
> generated code utilizes my specified custom node types at all; rather, only
> the ASTLabelType directive is respected. Is this a known limitation of the
> CSharp3 target, or is there something additional I have to do besides
> specifying node types in the rewrite rules?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jasonveldicott at gmail.com  Mon Jul 23 00:53:13 2012
From: jasonveldicott at gmail.com (Jason Veldicott)
Date: Mon, 23 Jul 2012 00:53:13 -0700
Subject: [antlr-interest] Recognizer generation error flagging incorrect
 usage of tree operator ! on Java grammar
Message-ID: <CAK4NeTH2fFjLGWcHfYvciuT5D0CZt3bvyG8T2s9u_xkNxMMHUA@mail.gmail.com>

Hi,

In Habelitz's (http://www.habelitz.com<http://www.habelitz.com/index.php?option=com_content&task=view&id=12&Itemid=8>)
Java
grammar, JavaTreeParser.g, could anyone suggest why the follow node/subtree
exclusion operator that I added after "expr" causes an error:

expression
    :   ^(EXPR expr!)                   <== Added !
    ;

Error msg:

error(10):  internal error: C:\antlr\java-grammar\JavaTreeParser.g :
java.lang.IllegalArgumentException: Can't find temp
late ruleRefBang.st; group hierarchy is [Java]
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
...

Apparently this indicates incorrect usage of the ! operator.

I'm trying to simplify the tree, to exclude expressions.

Thanks

Jason

From jasonveldicott at gmail.com  Mon Jul 23 04:13:22 2012
From: jasonveldicott at gmail.com (Jason Veldicott)
Date: Mon, 23 Jul 2012 04:13:22 -0700
Subject: [antlr-interest] Recognizer generation error flagging incorrect
 usage of tree operator ! on Java grammar
In-Reply-To: <CAK4NeTH2fFjLGWcHfYvciuT5D0CZt3bvyG8T2s9u_xkNxMMHUA@mail.gmail.com>
References: <CAK4NeTH2fFjLGWcHfYvciuT5D0CZt3bvyG8T2s9u_xkNxMMHUA@mail.gmail.com>
Message-ID: <CAK4NeTFq4F1GFX=ChnCEYXo94oXPmpOBxoK1WEM=YaHPQedgjQ@mail.gmail.com>

Answer found, the operator only applies to tokens apparently.



On Mon, Jul 23, 2012 at 12:53 AM, Jason Veldicott
<jasonveldicott at gmail.com>wrote:

> Hi,
>
> In Habelitz's (http://www.habelitz.com<http://www.habelitz.com/index.php?option=com_content&task=view&id=12&Itemid=8>) Java
> grammar, JavaTreeParser.g, could anyone suggest why the follow node/subtree
> exclusion operator that I added after "expr" causes an error:
>
> expression
>     :   ^(EXPR expr!)                   <== Added !
>     ;
>
> Error msg:
>
> error(10):  internal error: C:\antlr\java-grammar\JavaTreeParser.g :
> java.lang.IllegalArgumentException: Can't find temp
> late ruleRefBang.st; group hierarchy is [Java]
>
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:507)
>
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:392)
>
> org.antlr.stringtemplate.StringTemplateGroup.getInstanceOf(StringTemplateGroup.java:404)
>
> org.antlr.stringtemplate.StringTemplateGroup.lookupTemplate(StringTemplateGroup.java:484)
> ...
>
> Apparently this indicates incorrect usage of the ! operator.
>
> I'm trying to simplify the tree, to exclude expressions.
>
> Thanks
>
> Jason
>

From coder at paxi.at  Mon Jul 23 06:13:30 2012
From: coder at paxi.at (Paxi)
Date: Mon, 23 Jul 2012 06:13:30 -0700 (PDT)
Subject: [antlr-interest] Getting information about first error occurance C
	Target V3.4
Message-ID: <1343049210078-7578454.post@n2.nabble.com>

Is there a simple way of getting the index of the token that caused the first
error (if there was one)?
The problem I?m currently facing is, when I?m passing some malformed JS to
my program that f.e has its last line with some corrupted symbols inside I
want to immediately quit moving on but work with the tokens before that have
been successfully lexed. 
I can check for errors of course within the pANTLR3_BASE_RECOGNIZER struct
like:
rec->state->errorCount != 0
but i need to know which specific token caused the first error and stop my
loop before i hit this token.

Regards Chris



--
View this message in context: http://antlr.1301665.n2.nabble.com/Getting-information-about-first-error-occurance-C-Target-V3-4-tp7578454.html
Sent from the ANTLR mailing list archive at Nabble.com.

From coder at paxi.at  Mon Jul 23 08:05:21 2012
From: coder at paxi.at (Paxi)
Date: Mon, 23 Jul 2012 08:05:21 -0700 (PDT)
Subject: [antlr-interest] Getting information about first error
	occurance C Target V3.4
In-Reply-To: <1343049210078-7578454.post@n2.nabble.com>
References: <1343049210078-7578454.post@n2.nabble.com>
Message-ID: <1343055921603-7578455.post@n2.nabble.com>

>From the description it seems that rec->state->exception->charPositionInLine
holds the charPositionInLine from the position of the first token where an
exception occured. It also seems to work for me for now but if there is
something better than that feel free to tell me ;)

And one final thing: Is there a way to suppress the error notices that
ANTLR3 automatically writes to stdout or stderr (dunno what channel is used)
or do i have to look at the source again and outcomment it?





--
View this message in context: http://antlr.1301665.n2.nabble.com/Getting-information-about-first-error-occurance-C-Target-V3-4-tp7578454p7578455.html
Sent from the ANTLR mailing list archive at Nabble.com.

From jimi at temporal-wave.com  Mon Jul 23 08:34:16 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Jul 2012 08:34:16 -0700
Subject: [antlr-interest] Getting information about first error
 occurance C Target V3.4
In-Reply-To: <1343049210078-7578454.post@n2.nabble.com>
References: <1343049210078-7578454.post@n2.nabble.com>
Message-ID: <3e77ba48b7aca068f9e3f88c740901b9@mail.gmail.com>

You are given the token with the call to displayRecognitionError(). The
token knows its own index so you can record that. You could also set the
current token index to the last one in the input stream (check the input
stream code) so that the next LA/LT will hit EOF and drop out of the parse
(although you will likely trigger one or more additional errors while it
does so.)

So, install your own error handler and record any information you need from
there.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Paxi
> Sent: Monday, July 23, 2012 6:14 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Getting information about first error
> occurance C Target V3.4
>
> Is there a simple way of getting the index of the token that caused the
> first error (if there was one)?
> The problem I?m currently facing is, when I?m passing some malformed JS
> to my program that f.e has its last line with some corrupted symbols
> inside I want to immediately quit moving on but work with the tokens
> before that have been successfully lexed.
> I can check for errors of course within the pANTLR3_BASE_RECOGNIZER
> struct
> like:
> rec->state->errorCount != 0
> but i need to know which specific token caused the first error and stop
> my loop before i hit this token.
>
> Regards Chris
>
>
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Getting-information-about-first-
> error-occurance-C-Target-V3-4-tp7578454.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon Jul 23 08:36:25 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Jul 2012 08:36:25 -0700
Subject: [antlr-interest] Getting information about first error
 occurance C Target V3.4
In-Reply-To: <1343055921603-7578455.post@n2.nabble.com>
References: <1343049210078-7578454.post@n2.nabble.com>
	<1343055921603-7578455.post@n2.nabble.com>
Message-ID: <e484612981fba76fab853f02bdbcafc0@mail.gmail.com>

As indicated in my last reply, you just need to install your own error
handler (which everyone should do in fact as the built in one is really
just an example showing you how to get information). The error handler can
then record information without sending anything to stderr.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Paxi
> Sent: Monday, July 23, 2012 8:05 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Getting information about first error
> occurance C Target V3.4
>
> >From the description it seems that
> >rec->state->exception->charPositionInLine
> holds the charPositionInLine from the position of the first token where
> an exception occured. It also seems to work for me for now but if there
> is something better than that feel free to tell me ;)
>
> And one final thing: Is there a way to suppress the error notices that
> ANTLR3 automatically writes to stdout or stderr (dunno what channel is
> used) or do i have to look at the source again and outcomment it?
>
>
>
>
>
> --
> View this message in context:
> http://antlr.1301665.n2.nabble.com/Getting-information-about-first-
> error-occurance-C-Target-V3-4-tp7578454p7578455.html
> Sent from the ANTLR mailing list archive at Nabble.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From burton.samograd at markit.com  Mon Jul 23 14:55:26 2012
From: burton.samograd at markit.com (Burton Samograd)
Date: Mon, 23 Jul 2012 17:55:26 -0400
Subject: [antlr-interest] Checking for missing optional token in rule
Message-ID: <D2A5C7470D67A54FACE86B838946D49D14E4733AA8@NJ4MSGSCR02.markit.partners>

See the comment below for an explanation:

paren_delimited_numeric_unit_list
    : LPAREN number unit1=unit (COMMA number unit2=unit? {
            // I would like to check if unit2 was present in the input tokens
            // and do something if it was not.
        })* RPAREN
        -> (number unit)+
        ;

In the tree walker we can say ($unit2 == NULL) to check for presence, but that technique does not work in the parser.  Is there a way to do what I would like to do?

Thanks.

--
Burton Samograd

________________________________
This e-mail, including accompanying communications and attachments, is strictly confidential and only for the intended recipient. Any retention, use or disclosure not expressly authorised by Markit is prohibited. This email is subject to all waivers and other terms at the following link: http://www.markit.com/en/about/legal/email-disclaimer.page

Please visit http://www.markit.com/en/about/contact/contact-us.page? for contact information on our offices worldwide.

From jbb at acm.org  Mon Jul 23 15:11:13 2012
From: jbb at acm.org (John B. Brodie)
Date: Mon, 23 Jul 2012 18:11:13 -0400
Subject: [antlr-interest] Checking for missing optional token in rule
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E4733AA8@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733AA8@NJ4MSGSCR02.markit.partners>
Message-ID: <500DCC01.1070606@acm.org>

Greetings!

On 07/23/2012 05:55 PM, Burton Samograd wrote:
> See the comment below for an explanation:
>
> paren_delimited_numeric_unit_list
>      : LPAREN number unit1=unit (COMMA number unit2=unit? {
>              // I would like to check if unit2 was present in the input tokens
>              // and do something if it was not.
>          })* RPAREN
>          -> (number unit)+
>          ;
>
> In the tree walker we can say ($unit2 == NULL) to check for presence, but that technique does not work in the parser.  Is there a way to do what I would like to do?
>
>

off the top of my head (and untested)

paren_delimited_numeric_unit_list
   : LPAREN number unit1=unit (COMMA number ( ( /*empty*/ { handle missing $unit2 here } )
                                            | ( unit2=unit { handle existing $unit2 here } )
   )* RPAREN
   -> (number unit)+ <<==== probably improper rewrite, wrong cardinality, root of tree is not a TOKEN
   ;



so basically we realize that the "?" meta operator is equivalent to a 
choice between the empty phrase and the phrase we desire (e.g. foo ? == 
( | foo )

and i use the comment /*empty*/ to explicitly indicate that the empty 
phrase is a valid possibility.

and now we may simply add appropriate action code to handle each 
alternative as required.




Hope this helps...
    -jbb


From jimi at temporal-wave.com  Mon Jul 23 18:15:17 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 23 Jul 2012 18:15:17 -0700
Subject: [antlr-interest] Checking for missing optional token in rule
In-Reply-To: <D2A5C7470D67A54FACE86B838946D49D14E4733AA8@NJ4MSGSCR02.markit.partners>
References: <D2A5C7470D67A54FACE86B838946D49D14E4733AA8@NJ4MSGSCR02.markit.partners>
Message-ID: <36939be6b951aebdaf01cc460a3c8acd@mail.gmail.com>

paren_delimited_numeric_unit_list
     : LPAREN number unit1=unit
       (COMMA number
         (unit2=unit
            {
                C code Action when unit2 is present;
            }
         )?
       )* RPAREN
         -> (number unit)+
     ;

If you want to perform a custom rewrite, then set a flag (@declarations
and @init) and use the conditional rewrite syntax.

If you use unit2= though, then unit2 will only ever see the last one.

Are you sure that you are not just trying to do something like this:

paren_delimited_numeric_unit_list
     : LPAREN n+=number u+=unit (COMMA n+=number (u+=unit)? )* RPAREN
         -> ^(LPAREN ($n $u)+)
     ;


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Burton Samograd
> Sent: Monday, July 23, 2012 2:55 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Checking for missing optional token in rule
>
> See the comment below for an explanation:
>
> paren_delimited_numeric_unit_list
>     : LPAREN number unit1=unit (COMMA number unit2=unit? {
>             // I would like to check if unit2 was present in the input
> tokens
>             // and do something if it was not.
>         })* RPAREN
>         -> (number unit)+
>         ;
>
> In the tree walker we can say ($unit2 == NULL) to check for presence,
> but that technique does not work in the parser.  Is there a way to do
> what I would like to do?
>
> Thanks.
>
> --
> Burton Samograd
>
> ________________________________
> This e-mail, including accompanying communications and attachments, is
> strictly confidential and only for the intended recipient. Any
> retention, use or disclosure not expressly authorised by Markit is
> prohibited. This email is subject to all waivers and other terms at the
> following link: http://www.markit.com/en/about/legal/email-
> disclaimer.page
>
> Please visit http://www.markit.com/en/about/contact/contact-us.page?
> for contact information on our offices worldwide.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From juodaspaulius at gmail.com  Mon Jul 23 22:38:44 2012
From: juodaspaulius at gmail.com (Paulius Juodisius)
Date: Tue, 24 Jul 2012 01:38:44 -0400
Subject: [antlr-interest] Help on recursive tree grammar rule
Message-ID: <500E34E4.3030604@gmail.com>

Hi,

I am fairly new to Antlr and trying to learn all its features. Currently 
I am struggling to define tree grammar where tree visitor would return 
objects that have reference to previously created objects. More 
specifically parser grammar a rule has a recursion to itself. However I 
am not sure on how recursive rule can be defined in tree grammar in with 
a respect to parent tree node expression.

Below I will briefly describe my language samples and snippets from 
combined grammar.

I need to parse such expressions:
entity1/entity2/property
entity1/entity2/entity3/property
and so on..

 From a tree grammar I am expecting to get an objects that conform to 
following classes.
class property {
     ientity source;
}
interface ientity
class entity: ientity{
     ientity source;
}
class root: ientity {}


I have defined parser rules:

entityPropertyRef
     :    linkedEntities property -> ^(ENTITYPROPERTY linkedEntities 
property)
     ;
linkedEntities
     :    entity^ (linkedEntities)*;
     ;
entity: MEMBER "/"!;
property: MEMBER;

and lexer rules:
MEMBER: LETTER ( NAMECHAR )* ;
fragment LETTER
     : 'a'..'z'
     | 'A'..'Z'
     ;
fragment NAMECHAR : LETTER | DIGIT | '_' ;
fragment DIGIT : '0'..'9';



Sincerely,
Paulius

From kchadha at wellesley.edu  Tue Jul 24 08:42:54 2012
From: kchadha at wellesley.edu (Karishma Chadha)
Date: Tue, 24 Jul 2012 11:42:54 -0400
Subject: [antlr-interest] ANTLR 3.4 not generating compilable Parser file
	Java target
Message-ID: <CA+sqywQJOtARhJc8Hn7Z555T+wpzzV4fRAaZQDcKnAhcBgabLg@mail.gmail.com>

Hello,

I have been using ANTLR 3.4 to generate a Lexer and Parser for my language
in a Java target. Yesterday, I got a compiler error when trying to compile
my generated parser file which looks like this:

VenthonParser.java:9621: illegal start of expression
        void  =null;
        ^
VenthonParser.java:9692: illegal start of expression
        void  =null;
        ^

One of the corresponding chunks of code in the Parser is as follows (the
other one is similar):

 public final void synpred81_Venthon_fragment() throws RecognitionException
{
        void  =null;


        // Venthon.g:585:5: ( ( PLUS | MINUS ) b= term )


        // Venthon.g:585:5: ( PLUS | MINUS ) b= term


        {
        if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
            input.consume();
            state.errorRecovery=false;
            state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new
MismatchedSetException(null,input);
            throw mse;
        }


        pushFollow(FOLLOW_term_in_synpred81_Venthon1835);
        b=term();

        state._fsp--;
        if (state.failed) return ;

        }
}


I have seen some of the other messages on the ANTLR mailing list saying
that this is a known issue in ANTLR 3.4 that was fixed but then backed out
again. Is there any solution to this even if it is just a temporary one
until the next release? I would prefer not to have to switch to a previous
version of ANTLR if that can be avoided. I need to continue using ANTLR in
my project and I am on a tight deadline.

Please let me know if there are any solutions.
Thank you!

-- 
*Karishma Chadha*

From parrt at cs.usfca.edu  Tue Jul 24 11:54:30 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 24 Jul 2012 11:54:30 -0700
Subject: [antlr-interest] ANTLR 3.4 not generating compilable Parser
	file Java target
In-Reply-To: <CA+sqywQJOtARhJc8Hn7Z555T+wpzzV4fRAaZQDcKnAhcBgabLg@mail.gmail.com>
References: <CA+sqywQJOtARhJc8Hn7Z555T+wpzzV4fRAaZQDcKnAhcBgabLg@mail.gmail.com>
Message-ID: <985EBFA8-EF2A-4E55-A1BF-54160AE022B2@cs.usfca.edu>

Sorry. This is fixed in 3.4.1. I really need to get this version pushed out, but I am underwater trying to work on v4 and launch a new graduate program next week. ugh! You can grab the source from 

https://github.com/antlr/antlr3/downloads

 and build it

T
On Jul 24, 2012, at 8:42 AM, Karishma Chadha wrote:

> Hello,
> 
> I have been using ANTLR 3.4 to generate a Lexer and Parser for my language
> in a Java target. Yesterday, I got a compiler error when trying to compile
> my generated parser file which looks like this:
> 
> VenthonParser.java:9621: illegal start of expression
>        void  =null;
>        ^
> VenthonParser.java:9692: illegal start of expression
>        void  =null;
>        ^
> 
> One of the corresponding chunks of code in the Parser is as follows (the
> other one is similar):
> 
> public final void synpred81_Venthon_fragment() throws RecognitionException
> {
>        void  =null;
> 
> 
>        // Venthon.g:585:5: ( ( PLUS | MINUS ) b= term )
> 
> 
>        // Venthon.g:585:5: ( PLUS | MINUS ) b= term
> 
> 
>        {
>        if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
>            input.consume();
>            state.errorRecovery=false;
>            state.failed=false;
>        }
>        else {
>            if (state.backtracking>0) {state.failed=true; return ;}
>            MismatchedSetException mse = new
> MismatchedSetException(null,input);
>            throw mse;
>        }
> 
> 
>        pushFollow(FOLLOW_term_in_synpred81_Venthon1835);
>        b=term();
> 
>        state._fsp--;
>        if (state.failed) return ;
> 
>        }
> }
> 
> 
> I have seen some of the other messages on the ANTLR mailing list saying
> that this is a known issue in ANTLR 3.4 that was fixed but then backed out
> again. Is there any solution to this even if it is just a temporary one
> until the next release? I would prefer not to have to switch to a previous
> version of ANTLR if that can be avoided. I need to continue using ANTLR in
> my project and I am on a tight deadline.
> 
> Please let me know if there are any solutions.
> Thank you!
> 
> -- 
> *Karishma Chadha*
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at lischke-online.de  Wed Jul 25 02:19:31 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 25 Jul 2012 11:19:31 +0200
Subject: [antlr-interest] Manually raising recognition error
Message-ID: <7E0E1A39-7BEC-4288-959F-D68881D7E853@lischke-online.de>

Hi list,

similar questions have been asked already, but I couldn't find any answer (neither in MarkMail nor Google). Given a rule like this:

a:
	b (c | d)
;

I would like to report more precisely if both c and d are missing. Letting the default handling process this I often get errors that don't really address the actual problem. So I tried:

a:
	b
	(
		c
		| d
		| -> ^(MISSING_TOKEN)
	)
;

which works very well, except that now I don't get any error at all and would need to parse the tree to know that there was a missing token. So my wish is to also raise an error in addition.

I guess raising an error is specific to the parser target, so I'd be especially interested in a C target solution.

Mike
-- 
www.soft-gems.net


From danieladacruz at gmail.com  Wed Jul 25 04:29:13 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Wed, 25 Jul 2012 12:29:13 +0100
Subject: [antlr-interest] Antlr v2 conflict
Message-ID: <CACKT26w468+EfKKbbX8T31Qei1zT0RCSx+M5N2cjkDHCF4v8rQ@mail.gmail.com>

Hi

I am developing a grammar for Objective-C using Antlr v2.7 (unfortunately
v3 is not an option).

The problem I am facing is that a type name can be a builtin type or a
Cocoa type of a type defined using typedefs. This causes a conflict with
the name of a variable that is also an Identifier.

Any idea of how can I solve this conflict?

thanks
daniela

From mike at lischke-online.de  Wed Jul 25 05:57:32 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 25 Jul 2012 14:57:32 +0200
Subject: [antlr-interest] Antlr v2 conflict
In-Reply-To: <CACKT26ydxio3-0JpdxMXh8+oxzP-fGLyaM9Jhv41jFGxGbwrJA@mail.gmail.com>
References: <CACKT26w468+EfKKbbX8T31Qei1zT0RCSx+M5N2cjkDHCF4v8rQ@mail.gmail.com>
	<0A49D036-D8A6-4725-B38E-EF7B67CF4E32@lischke-online.de>
	<CACKT26ydxio3-0JpdxMXh8+oxzP-fGLyaM9Jhv41jFGxGbwrJA@mail.gmail.com>
Message-ID: <406B636A-215E-42D6-8C5F-55EACEDC3972@lischke-online.de>


Hey Daniela,

> Hi Mike.
> Thanks for your reply. But I can't see how rename the name it would solve the problem.
> Lets say I have the following:
> 
> MyType var;
> 
> This is a valid declaration in Objective-C, where MyType is the type name and var is the variable's name. So, both are identifiers. 
> 
> In the grammar I have:
> 
> declaration: declaration_specifiers declarator
> 
> where declaration_specifiers will be one more more type qualifiers or specifiers and declarator would be in last case a simple identifier.

Where's the conflict you mentioned? An name conflict can happen when you have a rule or token using a name which is also used elsewhere (typical case for Obj-C is 'id', which is used for an identifier rule, but is also a reserved word).

Mike
-- 
www.soft-gems.net


From danieladacruz at gmail.com  Wed Jul 25 06:40:07 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Wed, 25 Jul 2012 14:40:07 +0100
Subject: [antlr-interest] Antlr v2 conflict
In-Reply-To: <406B636A-215E-42D6-8C5F-55EACEDC3972@lischke-online.de>
References: <CACKT26w468+EfKKbbX8T31Qei1zT0RCSx+M5N2cjkDHCF4v8rQ@mail.gmail.com>
	<0A49D036-D8A6-4725-B38E-EF7B67CF4E32@lischke-online.de>
	<CACKT26ydxio3-0JpdxMXh8+oxzP-fGLyaM9Jhv41jFGxGbwrJA@mail.gmail.com>
	<406B636A-215E-42D6-8C5F-55EACEDC3972@lischke-online.de>
Message-ID: <CACKT26yA5qqeU3O8dEwvCvN943j6=7GO0AT4=Pv3R7A5abtrsA@mail.gmail.com>

Hi

I have a conflict because:

declaration: declaration_specifiers declarator;

declaration_specifiers: (type_qualifier | type_specifier)+

declarator: IDENT

type_specifier: "int" | ... | IDENT


both the type_specifier and declarator can be IDENT.

So, if I have "int a" it matches twice on type_specifier and it should be
one type_specifier and then declarator.

thanks
daniela

On Wed, Jul 25, 2012 at 1:57 PM, Mike Lischke <mike at lischke-online.de>wrote:

>
> Hey Daniela,
>
> Hi Mike.
> Thanks for your reply. But I can't see how rename the name it would solve
> the problem.
> Lets say I have the following:
>
> MyType var;
>
> This is a valid declaration in Objective-C, where MyType is the type name
> and var is the variable's name. So, both are identifiers.
>
> In the grammar I have:
>
> declaration: declaration_specifiers declarator
>
> where declaration_specifiers will be one more more type qualifiers or
> specifiers and declarator would be in last case a simple identifier.
>
>
> Where's the conflict you mentioned? An name conflict can happen when you
> have a rule or token using a name which is also used elsewhere (typical
> case for Obj-C is 'id', which is used for an identifier rule, but is also a
> reserved word).
>
> Mike
> --
> www.soft-gems.net
>
>

From jimi at temporal-wave.com  Wed Jul 25 07:15:38 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2012 07:15:38 -0700
Subject: [antlr-interest] Manually raising recognition error
In-Reply-To: <7E0E1A39-7BEC-4288-959F-D68881D7E853@lischke-online.de>
References: <7E0E1A39-7BEC-4288-959F-D68881D7E853@lischke-online.de>
Message-ID: <BCCED6A1-51A8-44E8-9385-0AAB12CBC43E@temporal-wave.com>

Don't think of errors as having to cone from the parser.

First, I think that it is a good idea to program the grammar to cater for errors like this specifically. You cannot always do so as sometimes adding the error productions causes too much ambiguity in the grammar. 

Next, you should be overriding displayRecognitionError and unlike the built in sample, you are usually better off adding error messages to a collection that is used for the whole run of your tool chain. The lever adds messages if it needs to, then the parser, then your tree walkers and so on. You then report all the errors at the end. 

You create some functions to form these messages from raw information, tokens, tree nodes and anything else you need. 

Now in your empty alt, you just call one of the methods

{
  error(E_MISSING_THINGY, line, col);
}

And it will be duly reported. The built in mechanism isn't called but you don't need it here. 

Also, read the article on custom error recovery in the wiki for some magic error recovery methods. 

Remember that the built in error system is just a few function calls that you can override. 

Jim

On Jul 25, 2012, at 2:19 AM, Mike Lischke <mike at lischke-online.de> wrote:

> Hi list,
> 
> similar questions have been asked already, but I couldn't find any answer (neither in MarkMail nor Google). Given a rule like this:
> 
> a:
>    b (c | d)
> ;
> 
> I would like to report more precisely if both c and d are missing. Letting the default handling process this I often get errors that don't really address the actual problem. So I tried:
> 
> a:
>    b
>    (
>        c
>        | d
>        | -> ^(MISSING_TOKEN)
>    )
> ;
> 
> which works very well, except that now I don't get any error at all and would need to parse the tree to know that there was a missing token. So my wish is to also raise an error in addition.
> 
> I guess raising an error is specific to the parser target, so I'd be especially interested in a C target solution.
> 
> Mike
> -- 
> www.soft-gems.net
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed Jul 25 07:22:08 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 Jul 2012 07:22:08 -0700
Subject: [antlr-interest] Antlr v2 conflict
In-Reply-To: <CACKT26w468+EfKKbbX8T31Qei1zT0RCSx+M5N2cjkDHCF4v8rQ@mail.gmail.com>
References: <CACKT26w468+EfKKbbX8T31Qei1zT0RCSx+M5N2cjkDHCF4v8rQ@mail.gmail.com>
Message-ID: <E8F0C35B-D1EF-4B09-A83A-500D27B29836@temporal-wave.com>

It sounds like you are treating all keywords as reserved words and so not allowing them to be identifiers. You will need to change your rules. 

Instead of referencing say ID directly use a parser rule id and add the keywords that can be ID in to the rule:

id : ID | KEY1 | KEY2 ....

You can change the token type of the keywords in that rule.  You may need to add predicates to avoid ambiguity warnings. 

Jim

On Jul 25, 2012, at 4:29 AM, Daniela da Cruz <danieladacruz at gmail.com> wrote:

> Hi
> 
> I am developing a grammar for Objective-C using Antlr v2.7 (unfortunately
> v3 is not an option).
> 
> The problem I am facing is that a type name can be a builtin type or a
> Cocoa type of a type defined using typedefs. This causes a conflict with
> the name of a variable that is also an Identifier.
> 
> Any idea of how can I solve this conflict?
> 
> thanks
> daniela
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From danieladacruz at gmail.com  Wed Jul 25 07:37:47 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Wed, 25 Jul 2012 15:37:47 +0100
Subject: [antlr-interest] Antlr v2 conflict
In-Reply-To: <E8F0C35B-D1EF-4B09-A83A-500D27B29836@temporal-wave.com>
References: <CACKT26w468+EfKKbbX8T31Qei1zT0RCSx+M5N2cjkDHCF4v8rQ@mail.gmail.com>
	<E8F0C35B-D1EF-4B09-A83A-500D27B29836@temporal-wave.com>
Message-ID: <CACKT26xhfcCzuTnDGnLeUf47pbXKDPB=h3nZS6i=GfnV36FoVA@mail.gmail.com>

Thanks Jim for your reply.

So far I have:

declaration: declaration_specifiers declarator;

declaration_specifiers: (type_qualifier | type_specifier)+

declarator: IDENT

type_specifier: "int" | ... | IDENT

both the type_specifier and declarator can be IDENT => Conflict.

Having such rule "id" as you suggest I would then only have:

type_specifier: id

But even this way I would have the same conflict since both the
type_specifier and declarator have "id". do you agree?

thanks
daniela

On Wed, Jul 25, 2012 at 3:22 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> It sounds like you are treating all keywords as reserved words and so not
> allowing them to be identifiers. You will need to change your rules.
>
> Instead of referencing say ID directly use a parser rule id and add the
> keywords that can be ID in to the rule:
>
> id : ID | KEY1 | KEY2 ....
>
> You can change the token type of the keywords in that rule.  You may need
> to add predicates to avoid ambiguity warnings.
>
> Jim
>
> On Jul 25, 2012, at 4:29 AM, Daniela da Cruz <danieladacruz at gmail.com>
> wrote:
>
> > Hi
> >
> > I am developing a grammar for Objective-C using Antlr v2.7 (unfortunately
> > v3 is not an option).
> >
> > The problem I am facing is that a type name can be a builtin type or a
> > Cocoa type of a type defined using typedefs. This causes a conflict with
> > the name of a variable that is also an Identifier.
> >
> > Any idea of how can I solve this conflict?
> >
> > thanks
> > daniela
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From mike at lischke-online.de  Wed Jul 25 09:20:50 2012
From: mike at lischke-online.de (Mike Lischke)
Date: Wed, 25 Jul 2012 18:20:50 +0200
Subject: [antlr-interest] Manually raising recognition error
In-Reply-To: <BCCED6A1-51A8-44E8-9385-0AAB12CBC43E@temporal-wave.com>
References: <7E0E1A39-7BEC-4288-959F-D68881D7E853@lischke-online.de>
	<BCCED6A1-51A8-44E8-9385-0AAB12CBC43E@temporal-wave.com>
Message-ID: <238BF3FB-C850-421D-A566-94A7A3906DB6@lischke-online.de>


Hey Jim,

thanks for your detailed answer.

> Next, you should be overriding displayRecognitionError and unlike the built in sample, you are usually better off adding error messages to a collection that is used for the whole run of your tool chain. The lever adds messages if it needs to, then the parser, then your tree walkers and so on. You then report all the errors at the end. 

Sure, this is already the case.

> 
> You create some functions to form these messages from raw information, tokens, tree nodes and anything else you need. 
> 
> Now in your empty alt, you just call one of the methods
> 
> {
>  error(E_MISSING_THINGY, line, col);
> }
> 
> And it will be duly reported. The built in mechanism isn't called but you don't need it here. 


My hope was that there's something I can just call (like { report_missing_token(TOKEN); } and the exception is created like those produced by the parser itself (and the normal error reporting kicks in). I can of course mimic the exception creation code in the parser, but thought there would be a simpler way.

Thanks again for all the help. Much appreciated.

Mike
-- 
www.soft-gems.net



From vinicius.durelli at gmail.com  Sat Jul 28 09:56:19 2012
From: vinicius.durelli at gmail.com (Vinicius Durelli)
Date: Sat, 28 Jul 2012 13:56:19 -0300
Subject: [antlr-interest] On how to insert logging calls at the beginning of
	each method
Message-ID: <CAFVj060ogrNOwTRxYtOMcoyoGiR4yWDXweDbDKZ9tedxoh=QEg@mail.gmail.com>

Hi all,

I am designing a rewriter that inserts calls to a method named log at the
beginning of every method definition. The rewriter in question does
something similar to the following whenever it runs into a method:

int doSomeStuff() {
   log(); //logs this method call
   //method body
}

In order to do that I am using StringTemplates and rewriting the token
buffer. So far, I came up with a temporary solution that gets the job done
but doesn't look right to me:

body : '{'  statement+ '}' -> template(x={$text.substring(1,
$text.length())}) "{ log(); <x>"
;

Is there a better/clever way of getting this done without having to resort
to Java String's methods (i.e., length and substring)?

Best,
Vinicius

From felixaa at ono.com  Sat Jul 28 13:39:11 2012
From: felixaa at ono.com (Felix A.A.)
Date: Sat, 28 Jul 2012 22:39:11 +0200
Subject: [antlr-interest] How I do... ? with lexer only rules.
Message-ID: <000a01cd6d01$0bdd4da0$2397e8e0$@ono.com>

Hello!

I'm trying to implement a simple parsing over custom .c files with added
syntax.

 

Ex: test.c

.

// I don't need this in output

int func1(int a, int b);

 

//I need this.

@parseme int func2(int a, int b);

 

//and this .

@parseme

void func3() 

{

Int a;

//put here where ever 

.

{

                                //inside block

                }

return;

}

.

 

I want to use a fuzzy parsing approach on the lexer phase then, on  the
parser rules, rewrite token with TokenRewriteStream and templates.

 

Well it's a  lexer piece . 

 

 

lexer grammar Lexi;

 

options {filter = true;}

 

// Pick everything between @parseme and ';' or '{ }'

METHOD

                :               HEADER .* (';' | BODY )

                ;

 

fragment

HEADER

                :               '@' ('parseme' | 'PARSEME') ;

 

fragment

BODY:   '{' .* '}' ;

 

.

.

The problem is simple for a expert look:

1-      Lexer stop parse when found ';' before to reach the last '}' on  "
@parseme void func3() .. " 

2-      Lexer stop parse when found  inside block right curly.

3-      And surely more cases don't tested yet.

 

 

The problem is really obvious. Is the solution too?? I hope soo !! J

 

Thanks to all and good work!! with ANTLR.

 

 


From nodcosta at in.ibm.com  Sat Jul 28 15:34:33 2012
From: nodcosta at in.ibm.com (Noel Dcosta)
Date: Sun, 29 Jul 2012 04:04:33 +0530
Subject: [antlr-interest] AUTO: Noel Dcosta is out of the office (returning
	08/02/2012)
Message-ID: <OFF7767353.0EBD6723-ON65257A49.007C0367-65257A49.007C0367@in.ibm.com>


I am out of the office until 08/02/2012.

I am on leave from Mon, JUL 30, 2012 to Wed, JUL 2, 2012. Kindly contact my
manager Vinod Khader/India/IBM at IBMIN for anything urgent.

Thanks,
Noel


Note: This is an automated response to your message  "antlr-interest
Digest, Vol 92, Issue 24" sent on 29/07/2012 0:30:01.

This is the only notification you will receive while this person is away.


From forumer at smartmobili.com  Mon Jul 30 04:27:06 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Mon, 30 Jul 2012 13:27:06 +0200
Subject: [antlr-interest] More information about token location
Message-ID: <c46de9aaa76899dc7932345e05a9efc8@smartmobili.com>

Hi,

I am using antlr 3.4.1 with the c# backend to parse some java code and 
I would like to get more information when
using the lexer. For the moment the IToken interface is defined like 
that :

public interface IToken
     {
         int Channel { get; set; }
         int CharPositionInLine { get; set; }
         ICharStream InputStream { get; set; }
         int Line { get; set; }
         int StartIndex { get; set; }
         int StopIndex { get; set; }
         string Text { get; set; }
         int TokenIndex { get; set; }
         int Type { get; set; }
     }

But when I have a token I would like to know where is the line where 
the token starts but also where it ends (this
would be very handy for multiline comments for instance).
Would it be very difficult to modify the c# backend to get the 
following interface :



public interface IToken
     {
         int Channel { get; set; }
         int StartCharPositionInLine { get; set; }
         int EndCharPositionInLine { get; set; }
         ICharStream InputStream { get; set; }
         int StartLine { get; set; }
         int StopLine { get; set; }
         int StartIndex { get; set; }
         int StopIndex { get; set; }
         string Text { get; set; }
         int TokenIndex { get; set; }
         int Type { get; set; }
     }

Of course before using the lexer I could parse my entire buffer and 
build a map between index range and line number
but I find it stupid to do it because it could be done during the 
parsing.


From forumer at smartmobili.com  Mon Jul 30 04:50:16 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Mon, 30 Jul 2012 13:50:16 +0200
Subject: [antlr-interest] More information about token location
In-Reply-To: <c46de9aaa76899dc7932345e05a9efc8@smartmobili.com>
References: <c46de9aaa76899dc7932345e05a9efc8@smartmobili.com>
Message-ID: <6ad2376788170aa129edacf49060bc28@smartmobili.com>

Or maybe instead of modifying the IToken interface, just add a mapping 
between index and line number:

int myLexer.getLine(int index)

From forumer at smartmobili.com  Mon Jul 30 06:45:58 2012
From: forumer at smartmobili.com (forumer at smartmobili.com)
Date: Mon, 30 Jul 2012 15:45:58 +0200
Subject: [antlr-interest] Handle multiline comment without greedy algo
Message-ID: <9c87e60a701b7790d1ba087d78f18497@smartmobili.com>

Hi,

I am using a grammar with comments handling defined as shown below :

BLOCK_COMMENT // excluding javadoc comments
     :   (   '/*' ~'*' ( options {greedy=false;} : . )* '*/'
         |   '/**/'
         )
     {
         if (!mPreserveBlockComments) {
             Skip();
         } else {
             $channel = Hidden;
         }
     }
     ;

JAVADOC_COMMENT
     :   '/**' ( options {greedy=false;} : . )* '*/'
     {
         if (!mPreserveJavaDocComments) {
             Skip();
         } else {
             $channel = Hidden;
         }
     }
     ;

Is it possible to modify this grammar to get a BLOCK_COMMENT token  or 
JAVADOC_COMMENT) for each token
belonging to BLOCK_COMENT(resp. JAVADOC_COMMENT) ?


From lifesting at gmail.com  Mon Jul 30 07:20:30 2012
From: lifesting at gmail.com (Chan David)
Date: Mon, 30 Jul 2012 22:20:30 +0800
Subject: [antlr-interest] Reference neseted rewriting result?
Message-ID: <CAF_Thc+QPMm66PPw5mJ-ySVevzqhpYH2WBs4VWn9gqgp-B5JpQ@mail.gmail.com>

Hi, I created a grammar, there?s a rule looks like below:



Big_rule: p1=(e=expr -> ^(VR $e1))  p2(s=statement->^(VT $s))  -> ^(ROOT
$p1 $p2)



As you see, there are three AST rewritings. ?p1? and ?p2? are nested result
of AST rewriting, and they will be referenced in the final rewriting. But
after code emitted, I found I was wrong, it doesn?t work as my mind. How to
reference nested rewriting result?



Thanks for your great help!



David

From jbb at acm.org  Mon Jul 30 07:43:21 2012
From: jbb at acm.org (John B. Brodie)
Date: Mon, 30 Jul 2012 10:43:21 -0400
Subject: [antlr-interest] Reference neseted rewriting result?
In-Reply-To: <CAF_Thc+QPMm66PPw5mJ-ySVevzqhpYH2WBs4VWn9gqgp-B5JpQ@mail.gmail.com>
References: <CAF_Thc+QPMm66PPw5mJ-ySVevzqhpYH2WBs4VWn9gqgp-B5JpQ@mail.gmail.com>
Message-ID: <50169D89.9040402@acm.org>

Greetings!

On 07/30/2012 10:20 AM, Chan David wrote:
> Hi, I created a grammar, there?s a rule looks like below:
>
>
>
> Big_rule: p1=(e=expr -> ^(VR $e1))  p2(s=statement->^(VT $s))  -> ^(ROOT
> $p1 $p2)
>
>
>
> As you see, there are three AST rewritings. ?p1? and ?p2? are nested result
> of AST rewriting, and they will be referenced in the final rewriting. But
> after code emitted, I found I was wrong, it doesn?t work as my mind. How to
> reference nested rewriting result?
>

I do not think you can refer to nested rewrites individually.

Each (possibly partial) rewrite sets the tree for the entire rule.

So I can think of 3 possibilities:

1) skip the nested rewrites entirely, e.g.:

r : expr statement -> ^(ROOT ^(VR expr) ^(VT statement)) ;

2) use sub-rules for the nesting, e.g:

r : r1 r2 -> ^(ROOT r1 r2) ;
r1 : expr -> ^(VR expr) ;
r2 : statement -> ^(VT statement) ;

3) reference the outer rule when nesting (not sure this really will 
work), e.g.:

r: (expr -> ^(VR expr) (statement -> r ^(VT statement)) -> ^(ROOT r) ;

The above suggestions are just off the top of my head and untested.

Hope this helps!
    -jbb


From bud4tw at gmail.com  Mon Jul 30 15:03:54 2012
From: bud4tw at gmail.com (Dan Keith)
Date: Mon, 30 Jul 2012 15:03:54 -0700
Subject: [antlr-interest]  ANTLR - Java Script Target - dormant / active?
Message-ID: <1E0B6351-50AD-4284-A978-76C30DAD7D76@gmail.com>

I subscribed to this list after this thread started, so I'm unable to preserve the threading, but I wanted to add my voice to those who need ANTLR-generated parsers (and lexers) in Javascript.

I'm beginning a project that involves Browser-side parsing of a Domain-specific-language in Javascript. I've used ANTLR on other projects recently and was really hoping I could just use my ANTLR skills for this project. I'm concerned to hear that the Javascript support has waned. And if ANTLR doesn't have Javascript parsers, can anyone recommend something like ANTLR that does?

Dan Keith
bud4tw at gmail.com


Terence,
I too am interested in targeting JavaScript, and a friend told me that it
was working in 3.3.  Do you have any recollection of that?  Since a few
other folks are interested in JS, maybe a small group of us could start
investigating that, share status, and maybe even branch fixes off of 3.3.
if needed, or try to update 3.4.  Let us know if you think this is
reasonable, or if you would rather not have this complication, etc.  If you
have any suggestions or guidance about a JS target or appropriate forum for
that discussion, that would be much appreciated!

On Wed, Jun 6, 2012 at 11:02 AM, Terence Parr <parrt at cs.usfca.edu> wrote:

> hi. unfortunately I think that that target is dormant I also don't think
> it's up to date for 3.4
> T
> On Jun 6, 2012, at 6:00 AM, Uwe Gebhardt wrote:
>
> > Hi,
> >
> > is the Javascript still an supported target language?
> >
> > Looking in the wiki
> >
> > http://www.antlr.org/wiki/display/ANTLR3/ANTLR3JavaScriptTarget
> >
> > I see the last update was done in 2010, on the same page
> > the ANTLR 3.1 / 3.2 release get mentioned.
> >
> > If I look at
> >
> > http://www.antlr.org/wiki/display/ANTLR3/Code+Generation+Targets
> >
> > Javascript is still listed, and I find the statement
> > "In sync with ANTLR3 Development"
> >
> > ANTLR
> > --
> > Empfehlen Sie GMX DSL Ihren Freunden und Bekannten und wir
> > belohnen Sie mit bis zu 50,- Euro! https://freundschaftswerbung.gmx.de


From nafur42 at gmail.com  Tue Jul 31 06:33:08 2012
From: nafur42 at gmail.com (nafur)
Date: Tue, 31 Jul 2012 15:33:08 +0200
Subject: [antlr-interest] Tree Rewriting: Enumerate all possibilities to
	match
Message-ID: <5017DE94.80000@gmail.com>

Hi all,

I'm performing tree rewrites to manipulate my ASTs, however I have rules
that I want to apply only once (i.e. if there are multiple possibilities
to apply this rule within my AST, I want to apply it only in one place).

More general, I'm searching for a way to somehow enumerate all
possibilities to apply a bottomup rule on a tree.

With [1] I figured I have to write my own downup method. This is what I
got so far:

public Object downup(Object t, final int skip) {
	TreeVisitor v = new TreeVisitor(new CommonTreeAdaptor());
	TreeVisitorAction actions = new TreeVisitorAction() {
		public int skips = skip;
		public Object pre(Object t) { return t; }
		public Object post(Object t) {
			Object res = applyOnce(t, BaseTreeRewriter.this);
			if (res == t) return t;
			if (skips != 0) res = t;
			skips--;
			return res;
		}
	}
}

I try to apply the rule, if it doesn't change anything, I just return t;
If it changed something, but skips is not zero yet, I drop the result.
If skip is zero, I "use" the match.

However, I have the problem that for matches that I want to skip, the
actions in the rule are executed...

How should one implement this? Is there a way to test, if a rule can be
applied without actually applying it?

Thanks,
Gereon

[1] http://www.antlr.org/wiki/display/ANTLR3/Tree+pattern+matching

From andrew.mains at oracle.com  Tue Jul 31 11:59:32 2012
From: andrew.mains at oracle.com (Andrew Mains)
Date: Tue, 31 Jul 2012 14:59:32 -0400
Subject: [antlr-interest] Changing the order of execution of tree pattern
	matching rules
Message-ID: <50182B14.8070000@oracle.com>

Hi all,

I am currently working on preprocessing an AST in order to compute some 
properties about the code and make my code generation easier. To do 
this, I'm using a tree grammar with pattern matching (filter = true).

My question is this: I want to set a flag on each node of the tree in a 
bottomup manner, and then use the information from this flag in a 
topdown walk of the tree. Unfortunately for me, ANTLR does only one 
depth first walk of the tree, (sensibly) executing the topdown actions 
first, since they are performed in the preorder position. Since my 
topdown action is dependent on my bottomup action, this order doesn't 
work for me.

Is there any convenient method of telling ANTLR to perform multiple DF 
walks of the tree so I can perform my bottomup action in the first walk 
and my topdown action in the second?

If possible, I'd prefer to avoid splitting my grammar into two, as this 
is less convenient, but I'll do so if necessary. I am, of course, open 
to different ways of looking at the problem--this was just what made the 
most sense to me initially (and what I would do if I were walking the 
tree "by hand")

Let me know if anything is unclear--I'm happy to provide more 
details/actual code if it will help.

Thanks for the help!

Andrew

