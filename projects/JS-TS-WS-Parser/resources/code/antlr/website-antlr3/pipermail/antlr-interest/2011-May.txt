From vester at jaist.ac.jp  Sun May  1 05:19:08 2011
From: vester at jaist.ac.jp (Rene Vestergaard)
Date: Sun, 01 May 2011 21:19:08 +0900
Subject: [antlr-interest] Typesetting grammars
Message-ID: <4DBD4FBC.9090501@jaist.ac.jp>

I can't seem to find any information on automatically type-setting ANTLR 
grammars, i.e., on exporting a given grammar in a manner similar to how 
ANTLRWorks' syntax diagrams work, except that the target is LaTeX, 
formatted html, or similar.

There's a Pygments mode, but it syntax-highlights everything, including 
actions, it seems. I was playing around with the code and it also 
doesn't seem to behave in an entirely predictable manner when you change 
things. I wrote a quick filter to get rid of everything not BNF-like in 
the Pygments output but it requires annotations with comments in the 
ANTLR file and, while it's one time to do, I'm not sure I like the end 
result: there are just too many levels in play within a given specification.

Please tell me I have missed something, and that type-setting is catered 
to already. I mean, it shouldn't be too hard to re-target the ANTLRWorks 
code ...

Cheers,
Rene

From list at toolazydogs.com  Sun May  1 08:43:38 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Sun, 1 May 2011 08:43:38 -0700
Subject: [antlr-interest] grammar test
In-Reply-To: <BANLkTik6fHPcLzOgc_HcoRnC2YLD9a=G6Q@mail.gmail.com>
References: <BANLkTik6fHPcLzOgc_HcoRnC2YLD9a=G6Q@mail.gmail.com>
Message-ID: <E2C00BA1-88B2-4399-A489-A79191F36ADF@toolazydogs.com>

As an alternative to gUnit I invite you to take a look at

https://github.com/maguro/aunit

Comments and suggestions are welcome.


Regards,
Alan


On Apr 28, 2011, at 2:58 AM, jie lu wrote:

> Hi, all
> 
> is there any unit test for antlr grammar?
> i write a long mysql grammar. it is parser ok but have some bugs. so i want
> to test the grammar one by one.
> 
> thanks
> 
> -- 
> Best Regards.
> Lu Jie
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From passionist_81 at yahoo.co.uk  Sun May  1 09:22:40 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Sun, 1 May 2011 17:22:40 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <984264.29919.qm@web24806.mail.ird.yahoo.com>

http://zezajul.freeoda.com/JohnSpencer4/

From dmitry.m.ilyin at gmail.com  Sun May  1 09:44:57 2011
From: dmitry.m.ilyin at gmail.com (=?KOI8-R?B?5M3J1NLJyiDpzNjJzg==?=)
Date: Sun, 1 May 2011 23:44:57 +0700
Subject: [antlr-interest] [C-target] "replaceChildren" implementation
Message-ID: <BANLkTi=GA1xdQ01ZZDFEv8yBW6vjAHiL7Q@mail.gmail.com>

Case of same number of input nodes and nodes to replace:

j = 0;
for (i = startChildIndex; i <= stopChildIndex; i++)
{
child = (pANTLR3_BASE_TREE) newChildren->get(newChildren, *j*);
 parent->children->set(parent->children, i, child, NULL, ANTLR3_FALSE);
child->setParent(child, parent);
child->setChildIndex(child, i);
}

Why "j"? It is always 0. "i - startChildIndex" may be used instead of "j".

In case of more nodes to input  we use what we can, then adding new nodes.
But we adding to the end of the children vector instead of inserting to
vector after nodes that we reused. (libantlr3c-3.3-SNAPSHOT)

Dmitry Ilyin

From toddobryan at gmail.com  Sun May  1 16:19:02 2011
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sun, 1 May 2011 19:19:02 -0400
Subject: [antlr-interest] Lexer too quick to grab a token?
Message-ID: <BANLkTinJaGVG1=tfd2d3ydhzJQhytOT-9A@mail.gmail.com>

I have created an obnoxious grammar and need help lexing it.
Basically, a left-bracket plus a string represents an open tag, and
there's a matching close tag with a right bracket. If you really want
a bracket, you type the bracket twice.

To be concrete,

[/ this is text in a tag /]
should lex as
L_TAG(text="[/") ... tokens representing "this is text in a tag" ...
R_TAG(text="/]")

The problem comes when I want to explain this grammar using the grammar.

To put stuff in a tag, type [[/ stuff /]]
should lex as
... lots of tokens ... L_BRACKET(text="[[") ... tokens representing "/
stuff /" ... R_BRACKET(text="]]")

Unfortunately, I can't figure out how to keep the lexer from matching
"/]" as an R_TAG and then having the extra "]" left over.

Conceptually, what I'd like to do is say that R_TAG matches a
character of the appropriate type followed by ']', as long as there's
no ']' immediately after. If there is are two right brackets after the
character, the lexer should make those a R_BRACKET token and make the
first character a simple text token.

Does this make any sense? Is there some way to deal with it?

Thanks,
Todd

From douglasgodfrey at gmail.com  Sun May  1 19:55:10 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Sun, 1 May 2011 22:55:10 -0400
Subject: [antlr-interest] AntlrWorks feature request
Message-ID: <BANLkTi=eLre5TMW+5-3t6o3tKJLR8TDErQ@mail.gmail.com>

Please add an option for AntlrWorks [and Antlr called by AntlrWorks] to use
the 64bit Java run-time.

On Mac OS X 10.5 or later use -d64 on the Antlr command line before -jar or
add JVMArchs to the Java
section of the AntlrWorks info.plist file:

    <key>Java</key>
    <dict>
        <key>ClassPath</key>
        <string>$JAVAROOT/antlrworks.jar</string>
        <key>JVMVersion</key>
        <string>1.6</string>
        <key>MainClass</key>
        <string>org.antlr.works.IDE</string>
        <key>VMOptions</key>
        <string>-Xmx1G</string>
        <key>JVMArchs</key>
        <array>
          <string>x86_64</string>
        </array>
    </dict>

From court at infiauto.com  Mon May  2 05:29:16 2011
From: court at infiauto.com (Courtney Falk)
Date: Mon, 02 May 2011 08:29:16 -0400
Subject: [antlr-interest] Rematching AST Nodes
In-Reply-To: <4DBCAA6B.10509@kjchome.homeip.net>
References: <4DBC2C1D.6000409@infiauto.com> <4DBCAA6B.10509@kjchome.homeip.net>
Message-ID: <4DBEA39C.6070809@infiauto.com>


> You grammar doesn't have an 'aaa' token.  It does have CHARACTERS
> tokens.  If 'aaa' is special, then you need to match it in your grammar
> like a keyword.  Then you can reference it in your tree grammar.
> Otherwise you will need to match any CHARACTERS token in your rematch
> rule and do what you need to when the value is 'aaa' and do something
> else when it is not.
>
> Your tree grammars can only work with the tokens your lexers produce
> (and the same set that your parsers use as well).

That's unfortunate.  I'm working on a workaround using semantic 
predicates.  The huge downside is that I have to implement in a separate 
piece of Java code the boolean validation function for the semantic 
predicate.  Then in a second separate piece of Java code I implement the 
string parsing function.  This solution is far less elegant than 
implementing everything as ANTLR logic.


Court

From bkiers at gmail.com  Mon May  2 05:50:11 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 2 May 2011 14:50:11 +0200
Subject: [antlr-interest] Lexer too quick to grab a token?
In-Reply-To: <BANLkTikFtMMfB46ZERCwRWQChqG0tnPkhA@mail.gmail.com>
References: <BANLkTinJaGVG1=tfd2d3ydhzJQhytOT-9A@mail.gmail.com>
	<BANLkTikFtMMfB46ZERCwRWQChqG0tnPkhA@mail.gmail.com>
Message-ID: <BANLkTiknOYVk7jDDrkaKN7DEWGoXnVNQzw@mail.gmail.com>

On Mon, May 2, 2011 at 1:19 AM, Todd O'Bryan <toddobryan at gmail.com> wrote:

> ...
>
>
> Does this make any sense? Is there some way to deal with it?
>  ...


You could let '/]]' be matched in the 'R_TAG' rule and emit another token as
per the instructions described here:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497

A demo:

lexer grammar TLexer;

@members {

  List<Token> tokens = new ArrayList<Token>();

  private void emit(String text, int type) {
    Token token = new CommonToken(type, text);
    token.setType(type);
    emit(token);
  }

  @Override
  public void emit(Token token) {
    state.token = token;
    tokens.add(token);
  }

  @Override
  public Token nextToken() {
    super.nextToken();
    if(tokens.size() == 0) {
      return Token.EOF_TOKEN;
    }
    return (Token)tokens.remove(0);
  }
}

L_TAG
  :  '[/'
  ;

R_TAG
  :  '/]]' {emit("/", ANY); emit("]]", R_BRACKET);}
  |  '/]'
  ;

L_BRACKET
  :  '[['
  ;

R_BRACKET
  :  ']]'
  ;

SPACE
  :  (' ' | '\t' | '\r' | '\n') {skip();}
  ;

ANY
  :  .
  ;

which can be tested with the class:

import org.antlr.runtime.*;

public class Main {
  public static void main(String[] args) throws Exception {
    String source = "[/ foo /] [[/ bar /]]";
    ANTLRStringStream in = new ANTLRStringStream(source);
    TLexer lexer = new TLexer(in);
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    for(Object o : tokens.getTokens()) {
      Token t = (Token)o;
      System.out.println("text=" + t.getText() + ", type=" + t.getType());
    }
  }
}


Regards,

Bart.

From jimi at temporal-wave.com  Mon May  2 06:47:58 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 2 May 2011 06:47:58 -0700
Subject: [antlr-interest] Rematching AST Nodes
In-Reply-To: <4DBEA39C.6070809@infiauto.com>
References: <4DBC2C1D.6000409@infiauto.com> <4DBCAA6B.10509@kjchome.homeip.net>
	<4DBEA39C.6070809@infiauto.com>
Message-ID: <66cf19985268216ee34ebf1535660ca1@mail.gmail.com>

I suspect that you are approaching this problem incorrectly in some way.
Why do you feel you need to specify a new token at the AST stage? Why
don't you restate your goal, ignoring what you have done so far - I
suspect that we may be trying to solve a problem that you should not have.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Courtney Falk
> Sent: Monday, May 02, 2011 5:29 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Rematching AST Nodes
>
>
> > You grammar doesn't have an 'aaa' token.  It does have CHARACTERS
> > tokens.  If 'aaa' is special, then you need to match it in your
> > grammar like a keyword.  Then you can reference it in your tree
> grammar.
> > Otherwise you will need to match any CHARACTERS token in your rematch
> > rule and do what you need to when the value is 'aaa' and do something
> > else when it is not.
> >
> > Your tree grammars can only work with the tokens your lexers produce
> > (and the same set that your parsers use as well).
>
> That's unfortunate.  I'm working on a workaround using semantic
> predicates.  The huge downside is that I have to implement in a
> separate piece of Java code the boolean validation function for the
> semantic predicate.  Then in a second separate piece of Java code I
> implement the string parsing function.  This solution is far less
> elegant than implementing everything as ANTLR logic.
>
>
> Court
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From court at infiauto.com  Mon May  2 09:38:28 2011
From: court at infiauto.com (Courtney Falk)
Date: Mon, 02 May 2011 12:38:28 -0400
Subject: [antlr-interest] Rematching AST Nodes
In-Reply-To: <66cf19985268216ee34ebf1535660ca1@mail.gmail.com>
References: <4DBC2C1D.6000409@infiauto.com>
	<4DBCAA6B.10509@kjchome.homeip.net>	<4DBEA39C.6070809@infiauto.com>
	<66cf19985268216ee34ebf1535660ca1@mail.gmail.com>
Message-ID: <4DBEDE04.8060308@infiauto.com>

  On 5/2/2011 9:47 AM, Jim Idle wrote:
> I suspect that you are approaching this problem incorrectly in some way.
> Why do you feel you need to specify a new token at the AST stage? Why
> don't you restate your goal, ignoring what you have done so far - I
> suspect that we may be trying to solve a problem that you should not have.

Certainly.  I was trying to keep things simple/short, but I can expand.

My project is a NLP tokenizer/parser.  The first stage of functionality 
is implemented the FuzzyLexer and FuzzyParser grammars.  They strip out 
all punctuation and white space, preserving them as tokens and grouping 
all the text between the punctuation/white space as "unspecified" tokens.

Stage 1.5 is the language-specific composite grammar (Sentential.g), 
which imports the Fuzzy* grammars.  Here, I implement regular 
expressions used in semantic predicates that attempt to categorize 
"unspecified" tokens into relevant categories (see also, 
LongNumber.java).  For instance, the string "one" would be cast as a 
long form number token.  Any "unspecified" tokens that don't match any 
semantic predicates stay "unspecified" tokens.

Stage 2, which is yet to be written, walks the AST output by stage 1.5 
and wraps the tokens up into an application-specific data structure.  
This tree grammar will also perform tasks such as clustering together 
numbers into one single number, etc.


Courtney Falk
court at infiauto.com
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: FuzzyLexer.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110502/8b09543e/attachment.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: FuzzyParser.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110502/8b09543e/attachment-0001.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: LongNumber.java
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110502/8b09543e/attachment-0002.pl 
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: Sentential.g
Url: http://www.antlr.org/pipermail/antlr-interest/attachments/20110502/8b09543e/attachment-0003.pl 

From david.smith at cc.gatech.edu  Mon May  2 18:20:23 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Mon, 02 May 2011 21:20:23 -0400
Subject: [antlr-interest] Feature Request: default constructor
Message-ID: <E1QH4Ho-0007kY-ID@elasmtp-scoter.atl.sa.earthlink.net>

need a default constructor for ANTLRFileStream so that it can be extended.

                                 DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From gordeev.vladimir.v at gmail.com  Tue May  3 10:29:16 2011
From: gordeev.vladimir.v at gmail.com (Vladimir VG)
Date: Tue, 03 May 2011 20:29:16 +0300
Subject: [antlr-interest] rules that takes rules as arguments
Message-ID: <4DC03B6C.2060709@gmail.com>

I'm defining some grouping rule ( '(' value ')' ) for operator precedence,
and it will be helpful if I would use rules that takes other rules as 
arguments.

Is that possible?

From parrt at cs.usfca.edu  Tue May  3 16:44:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Tue, 3 May 2011 16:44:21 -0700
Subject: [antlr-interest] Feature Request: default constructor
In-Reply-To: <E1QH4Ho-0007kY-ID@elasmtp-scoter.atl.sa.earthlink.net>
References: <E1QH4Ho-0007kY-ID@elasmtp-scoter.atl.sa.earthlink.net>
Message-ID: <9345C057-40EB-4061-9933-B731DCFE31E4@cs.usfca.edu>

Would calling super(null) work?
Ter
On May 2, 2011, at 6:20 PM, David Smith wrote:

> need a default constructor for ANTLRFileStream so that it can be extended.
> 
>                                 DMS
> 
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From ibre5041 at ibrezina.net  Wed May  4 05:20:06 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Wed, 04 May 2011 14:20:06 +0200
Subject: [antlr-interest] Memory requirements of C runtime when backtracking
Message-ID: <20110504142006.v91r23bxcggcss8w@webmail.kamm.cz>

Hi all
doing some unit test of Oracle SQL grammar I'm facing problems with  
memory requirements when parsing input having many parenthesis.

In general the grammar can have three types of statements which can be  
enclosed in parens.

1. value expression like (A),(1+2).
For an sql_expression there is set of rules using numerical operator
sql_expression -> expr_add -> expr_mul -> expr_sign -> expr_pow -> expr_paren

2. logical expression like (A > 2) or (A is null)
For an condition expression there is a set of rules using locical operator
sql_condition -> condition_or -> condition_and -> condition_not ->  
condition_paren

3. a subquery. It is an sql statement enclosed in parenthesis
like (SELECT * FROM dual).

These 3 types can by combined in many ways.
For example ((SELECT count(1) from dual) > 1)

While testing if found queries - probably generated by some evil sick robot -
whose require more than 8B of RAM to parse even they are quite short

For example:
SELECT *
FROM TABLE1, TABLE2
WHERE
(
  (
   (
    (
     (
      (
       (
        (
         (
  	 (
  	  (
  	   (
  	    (
  	     (
  	      (
	       ( TABLE2.DT = '2' ) OR ( TABLE2.DT = '3' )
   	      ) AND ( TABLE2.CODE < 9 )
   	     ) AND ( TABLE2.WH = 'XXX' )
   	    ) AND ( TABLE1.ID = '0000001' )
   	   ) AND ( ( TABLE1.ATTR_1 IS NULL ) OR ( TABLE1._ATTR1 = '*' ) )
   	  ) AND ( ( TABLE1.ATTR_2 IS NULL ) OR ( TABLE1._ATTR2 = '*' ) )
   	 ) AND ( ( TABLE1.ATTR_3 IS NULL ) OR ( TABLE1._ATTR3 = '*' ) )
      	) AND ( ( TABLE1.ATTR_4 IS NULL ) OR ( TABLE1._ATTR4 = '*' ) )
        ) AND ( ( TABLE1.ATTR_5 IS NULL ) OR ( TABLE1._ATTR5 = '*' ) )
       ) AND ( ( TABLE2.TYPE IS NULL ) OR ( TABLE2.TYPE = '*' ) )
      ) AND ( ( TABLE2.NBR IS NULL ) OR ( TABLE2.NBR = '*' ) )
     ) AND ( ( TABLE2.STAT = '01' ) OR ( TABLE2.STAT = '*' ) )
    ) AND ( ( TABLE2.ORGN IS NULL ) OR ( TABLE2.ORGN = '*' ) )
   ) AND ( TABLE2.NBR = '00000000' )
  ) AND ( TABLE2.PO IS NULL )
)

Both value expression and condition expression rules do backtracking.
In the example above every parenthesis nesting doubles memory requirements.

Are there any ways how to reduce/monitor memory requirements?
What exactly is remembered when backtracking?
I tried to add some syntactic predicates into value/conditional expression
but it usually led to failure of other tests.

thx Ivan




----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From ben.corne at gmail.com  Wed May  4 06:55:50 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Wed, 4 May 2011 15:55:50 +0200
Subject: [antlr-interest] Source code level of ANTLRWorks
Message-ID: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>

Hi

Is there a way to set the source code level of antlrworks?
I've checked the preferences pane and launchers with no avail.

I need to set it to > 1.5, since I'm using Java Generics:

[15:47:58] 102. ERROR in
/home/bcorne/Downloads/at2-parser-3/grammar/output/ATGrammar3Lexer.java (at
line 114)
[15:47:58] Stack<String> paraphrase = new Stack<String>();
[15:47:58]                                      ^^^^^^
[15:47:58] Syntax error, parameterized types are only available if source
level is 1.5

Regards
Ben Corne

From jean-sebastien.vachon at wantedtech.com  Wed May  4 07:12:41 2011
From: jean-sebastien.vachon at wantedtech.com (Jean-Sebastien Vachon)
Date: Wed, 4 May 2011 10:12:41 -0400
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
Message-ID: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>

No one can help me with this? :S
Let me know if something is not clear. I need to fix this issue as soon as I can.

Thanks

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jean-Sebastien Vachon
Sent: April-28-11 4:07 PM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Inserting missing nodes

Hi All,

First, I'd like to make it clear that I'm new to ANTLR so please be kind with me ;)

Second, my main problem right now is that I'm currently building a grammar that will let
 me validate and parse a Boolean query with some special features. I got 90% of my parser working but I'm stuck with the last feature that is required. Basically, I need to be able to insert missing operators (AND/OR) where required.

Considering the following query: "software engineer java"
I need to build a tree representing the query as if it was "software AND engineer AND java" but I also need to be able to change the inserted operator 'AND' to something else.

My first thought was to push a new type of node (let's say DEFAULT_OP) into my tree using a rewrite rule that I could rewrite to the proper operator using a tree walker and/or translator.

I made a few tries and got it working in some situations but I can't get it to parse everything I'm throwing at it. My best try so far is shown in the listing below... I did not include the lexer as it is pretty straight forward...

All hints and comments are welcomed...

Thanks for your help
===============================
grammar MyGrammar;

options {
  language = Java;
  output = AST;
  ASTLabelType = CommonTree;
}

query
  : and_expr+ EOF!
  ;

and_expr
  : (expr expr+) => default_op
  | (u1=or_expr (AND^ u2=or_expr)*);

or_expr
  : u1=expr (OR^ u2=expr)*
  ;

default_op
  : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
  ;

expr
  : (NOT^)? (operand)
  ;

operand
  : (FIELD^)(operand)
  | PREFIX
  | WORD
  | SENTENCE
  | WORDLIST
  | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
  | MUST
  | LPAREN! expr RPAREN!
  ;


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From bkiers at gmail.com  Wed May  4 07:20:30 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 4 May 2011 16:20:30 +0200
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
Message-ID: <BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>

On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon <
jean-sebastien.vachon at wantedtech.com> wrote:

> No one can help me with this? :S
> Let me know if something is not clear. I need to fix this issue as soon as
> I can.
>
> Thanks


The fact that you didn't provide the lexer rules (although they might be
straight-forward as you mentioned), and you didn't mention what input
you're specifically having problems with parsing (the following is a bit
vague: *"... but I can't get it to parse everything I'm throwing at it ..."*),
might be some reasons why you haven't been answered.

Regards,

Bart.

From jean-sebastien.vachon at wantedtech.com  Wed May  4 07:51:13 2011
From: jean-sebastien.vachon at wantedtech.com (Jean-Sebastien Vachon)
Date: Wed, 4 May 2011 10:51:13 -0400
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>
Message-ID: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>

Thanks for your input. So here is the whole thing with two use cases that are not giving me the expected results... 
(Sorry for the long post)

INPUT = abc def zyx toto
RESULT = (DEFAULT_OP abc def) (DEFAULT_OP zyx toto)
EXPECTED = (DEFAULT_OP (DEFAULT_OP abc def) (DEFAULT_OP zyx toto))

INPUT = software engineer OR java programmer
RESULT = (DEFAULT_OP software (OR engineer java)) programmer
EXPECTED =  (DEFAULT_OP (DEFAULT_OP software (OR engineer java)) programmer)

I'm also having some trouble using the Interpreter within Eclipse. 
The same expressions are not working in the interpreter. It fails to generate the 
tree with a "NoViableAltException at input 'abc' " (for the first case).
I don't think this is related to my other problem since I can't get it to generate any tree.

Thanks again for your time and comments

----------------------------------------------------------------------------------------------------------
Grammar (validation by building a tree and trying to insert missing operators)
----------------------------------------------------------------------------------------------------------
grammar MyGrammar;

options {
  language = Java;
  output = AST;
  ASTLabelType = CommonTree;  
}

// Rules to build the tree representation of our expression...

query
  : and_expr+ EOF! 
  ; 

// Each AND expression can contain OR expressions...
and_expr   
  : (expr expr+) => default_op
  | (u1=or_expr (AND^ u2=or_expr)*)
  ;

// A OR expression contains one or more expression
or_expr   
  : u1=expr (OR^ u2=expr)*
  ;
  
default_op
  : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)  
  ;  
  
expr 
  : (NOT^)? (operand)
  ;

// The leafs of the tree.. Words, sentence and so on...
// Note that an expression such as '-word' is rewritten in its 'NOT word' form
operand 
  : (f=FIELD^)(o=operand)
  | PREFIX 
  | WORD
  | SENTENCE 
  | WORDLIST 
  | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
  | MUST 
  | LPAREN! and_expr RPAREN!
  ;

// Lexer ...
NEGATIVE    : '-';
LPAREN      : '(' ;
RPAREN      : ')' ;
DOUBLEQUOTE : '"'; 
STAR	      : '*';
AND         : 'AND' | '+';		
OR          : 'OR';
NOT         : 'NOT';
DEFAULT_OP  : 'DEF_OP';
FIELD       : ('title'|'TITLE'|'Title')(FIELDSEPARATOR);
WS          : (WSCHAR)+ { $channel=HIDDEN; };
PREFIX	    : WORDCHAR+(STAR);
WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
SENTENCE    : ((DOUBLEQUOTE)(~(DOUBLEQUOTE))*(DOUBLEQUOTE));
WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD | SENTENCE))+);
MUST	      : '+'(PREFIX|WORD|SENTENCE|WORDLIST);
fragment WORDCHAR       : (~( WSCHAR | LPAREN | RPAREN | '-' |':' | '+' | ',' | STAR | DOUBLEQUOTE) );
fragment FIELDSEPARATOR : ':';
fragment WSCHAR         : ( ' ' | '\t' | '\r' | '\n');



================================= END OF GRAMMAR ==========================





-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
Sent: May-04-11 10:21 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Inserting missing nodes

On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon < jean-sebastien.vachon at wantedtech.com> wrote:

> No one can help me with this? :S
> Let me know if something is not clear. I need to fix this issue as 
> soon as I can.
>
> Thanks


The fact that you didn't provide the lexer rules (although they might be straight-forward as you mentioned), and you didn't mention what input you're specifically having problems with parsing (the following is a bit
vague: *"... but I can't get it to parse everything I'm throwing at it ..."*), might be some reasons why you haven't been answered.

Regards,

Bart.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed May  4 08:16:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 May 2011 08:16:10 -0700
Subject: [antlr-interest] Memory requirements of C runtime when
	backtracking
In-Reply-To: <20110504142006.v91r23bxcggcss8w@webmail.kamm.cz>
References: <20110504142006.v91r23bxcggcss8w@webmail.kamm.cz>
Message-ID: <a7c58b6dffff3969366aba7b77c1477c@mail.gmail.com>

You should not be using backtrack=true if you are short on memory, but
without seeing your grammar I cannot comment on the ram usage. It might be
that your grammar causes the generation of huge DFA tables. Backtracking
itself does not cost lots of memory though.

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ivan Brezina
> Sent: Wednesday, May 04, 2011 5:20 AM
> To: antlr-interest Interest
> Subject: [antlr-interest] Memory requirements of C runtime when
> backtracking
>
> Hi all
> doing some unit test of Oracle SQL grammar I'm facing problems with
> memory requirements when parsing input having many parenthesis.
>
> In general the grammar can have three types of statements which can be
> enclosed in parens.
>
> 1. value expression like (A),(1+2).
> For an sql_expression there is set of rules using numerical operator
> sql_expression -> expr_add -> expr_mul -> expr_sign -> expr_pow ->
> expr_paren
>
> 2. logical expression like (A > 2) or (A is null) For an condition
> expression there is a set of rules using locical operator sql_condition
> -> condition_or -> condition_and -> condition_not -> condition_paren
>
> 3. a subquery. It is an sql statement enclosed in parenthesis like
> (SELECT * FROM dual).
>
> These 3 types can by combined in many ways.
> For example ((SELECT count(1) from dual) > 1)
>
> While testing if found queries - probably generated by some evil sick
> robot - whose require more than 8B of RAM to parse even they are quite
> short
>
> For example:
> SELECT *
> FROM TABLE1, TABLE2
> WHERE
> (
>   (
>    (
>     (
>      (
>       (
>        (
>         (
>          (
>   	 (
>   	  (
>   	   (
>   	    (
>   	     (
>   	      (
> 	       ( TABLE2.DT = '2' ) OR ( TABLE2.DT = '3' )
>    	      ) AND ( TABLE2.CODE < 9 )
>    	     ) AND ( TABLE2.WH = 'XXX' )
>    	    ) AND ( TABLE1.ID = '0000001' )
>    	   ) AND ( ( TABLE1.ATTR_1 IS NULL ) OR ( TABLE1._ATTR1 = '*' ) )
>    	  ) AND ( ( TABLE1.ATTR_2 IS NULL ) OR ( TABLE1._ATTR2 = '*' ) )
>    	 ) AND ( ( TABLE1.ATTR_3 IS NULL ) OR ( TABLE1._ATTR3 = '*' ) )
>       	) AND ( ( TABLE1.ATTR_4 IS NULL ) OR ( TABLE1._ATTR4 = '*'
)
> )
>         ) AND ( ( TABLE1.ATTR_5 IS NULL ) OR ( TABLE1._ATTR5 = '*' ) )
>        ) AND ( ( TABLE2.TYPE IS NULL ) OR ( TABLE2.TYPE = '*' ) )
>       ) AND ( ( TABLE2.NBR IS NULL ) OR ( TABLE2.NBR = '*' ) )
>      ) AND ( ( TABLE2.STAT = '01' ) OR ( TABLE2.STAT = '*' ) )
>     ) AND ( ( TABLE2.ORGN IS NULL ) OR ( TABLE2.ORGN = '*' ) )
>    ) AND ( TABLE2.NBR = '00000000' )
>   ) AND ( TABLE2.PO IS NULL )
> )
>
> Both value expression and condition expression rules do backtracking.
> In the example above every parenthesis nesting doubles memory
> requirements.
>
> Are there any ways how to reduce/monitor memory requirements?
> What exactly is remembered when backtracking?
> I tried to add some syntactic predicates into value/conditional
> expression but it usually led to failure of other tests.
>
> thx Ivan
>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed May  4 08:18:47 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 May 2011 08:18:47 -0700
Subject: [antlr-interest] Source code level of ANTLRWorks
In-Reply-To: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>
References: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>
Message-ID: <3d006b9f5dcc5ff3275ec1a407749fb5@mail.gmail.com>

That just means you are calling a compiler that has a default level less
than 1.5. So, chance the javacc command in the preferences or remove the
old compiler and install 1.6, or makes sure that 1.6 is the first on the
command line. ANTLR works does not influence the Java compiler - it only
calls the one that you tell it to.

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ben Corne
> Sent: Wednesday, May 04, 2011 6:56 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Source code level of ANTLRWorks
>
> Hi
>
> Is there a way to set the source code level of antlrworks?
> I've checked the preferences pane and launchers with no avail.
>
> I need to set it to > 1.5, since I'm using Java Generics:
>
> [15:47:58] 102. ERROR in
> /home/bcorne/Downloads/at2-parser-3/grammar/output/ATGrammar3Lexer.java
> (at line 114) [15:47:58] Stack<String> paraphrase = new
> Stack<String>();
> [15:47:58]                                      ^^^^^^
> [15:47:58] Syntax error, parameterized types are only available if
> source level is 1.5
>
> Regards
> Ben Corne
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed May  4 08:22:27 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 May 2011 08:22:27 -0700
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
Message-ID: <5e669d397a04ea5d3270f80e24bd6071@mail.gmail.com>

You need to fix your lexer first:


WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> SENTENCE))+);

is ambiguous with:

> PREFIX	    : WORDCHAR+(STAR);
> WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;

You need to contstruct the lists in the parser not the lexer and should
probably left factor the common roots in the lexer anyway.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jean-Sebastien Vachon
> Sent: Wednesday, May 04, 2011 7:51 AM
> To: Bart Kiers; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Inserting missing nodes
>
> Thanks for your input. So here is the whole thing with two use cases
> that are not giving me the expected results...
> (Sorry for the long post)
>
> INPUT = abc def zyx toto
> RESULT = (DEFAULT_OP abc def) (DEFAULT_OP zyx toto) EXPECTED =
> (DEFAULT_OP (DEFAULT_OP abc def) (DEFAULT_OP zyx toto))
>
> INPUT = software engineer OR java programmer RESULT = (DEFAULT_OP
> software (OR engineer java)) programmer EXPECTED =  (DEFAULT_OP
> (DEFAULT_OP software (OR engineer java)) programmer)
>
> I'm also having some trouble using the Interpreter within Eclipse.
> The same expressions are not working in the interpreter. It fails to
> generate the tree with a "NoViableAltException at input 'abc' " (for
> the first case).
> I don't think this is related to my other problem since I can't get it
> to generate any tree.
>
> Thanks again for your time and comments
>
> -----------------------------------------------------------------------
> -----------------------------------
> Grammar (validation by building a tree and trying to insert missing
> operators)
> -----------------------------------------------------------------------
> -----------------------------------
> grammar MyGrammar;
>
> options {
>   language = Java;
>   output = AST;
>   ASTLabelType = CommonTree;
> }
>
> // Rules to build the tree representation of our expression...
>
> query
>   : and_expr+ EOF!
>   ;
>
> // Each AND expression can contain OR expressions...
> and_expr
>   : (expr expr+) => default_op
>   | (u1=or_expr (AND^ u2=or_expr)*)
>   ;
>
> // A OR expression contains one or more expression
> or_expr
>   : u1=expr (OR^ u2=expr)*
>   ;
>
> default_op
>   : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
>   ;
>
> expr
>   : (NOT^)? (operand)
>   ;
>
> // The leafs of the tree.. Words, sentence and so on...
> // Note that an expression such as '-word' is rewritten in its 'NOT
> word' form operand
>   : (f=FIELD^)(o=operand)
>   | PREFIX
>   | WORD
>   | SENTENCE
>   | WORDLIST
>   | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
>   | MUST
>   | LPAREN! and_expr RPAREN!
>   ;
>
> // Lexer ...
> NEGATIVE    : '-';
> LPAREN      : '(' ;
> RPAREN      : ')' ;
> DOUBLEQUOTE : '"';
> STAR	      : '*';
> AND         : 'AND' | '+';
> OR          : 'OR';
> NOT         : 'NOT';
> DEFAULT_OP  : 'DEF_OP';
> FIELD       : ('title'|'TITLE'|'Title')(FIELDSEPARATOR);
> WS          : (WSCHAR)+ { $channel=HIDDEN; };
> PREFIX	    : WORDCHAR+(STAR);
> WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
> SENTENCE    : ((DOUBLEQUOTE)(~(DOUBLEQUOTE))*(DOUBLEQUOTE));
> WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> SENTENCE))+);
> MUST	      : '+'(PREFIX|WORD|SENTENCE|WORDLIST);
> fragment WORDCHAR       : (~( WSCHAR | LPAREN | RPAREN | '-' |':' | '+'
> | ',' | STAR | DOUBLEQUOTE) );
> fragment FIELDSEPARATOR : ':';
> fragment WSCHAR         : ( ' ' | '\t' | '\r' | '\n');
>
>
>
> ================================= END OF GRAMMAR
> ==========================
>
>
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: May-04-11 10:21 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Inserting missing nodes
>
> On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon < jean-
> sebastien.vachon at wantedtech.com> wrote:
>
> > No one can help me with this? :S
> > Let me know if something is not clear. I need to fix this issue as
> > soon as I can.
> >
> > Thanks
>
>
> The fact that you didn't provide the lexer rules (although they might
> be straight-forward as you mentioned), and you didn't mention what
> input you're specifically having problems with parsing (the following
> is a bit
> vague: *"... but I can't get it to parse everything I'm throwing at it
> ..."*), might be some reasons why you haven't been answered.
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From knifed at gmail.com  Wed May  4 09:27:27 2011
From: knifed at gmail.com (Jeff Hair)
Date: Wed, 4 May 2011 12:27:27 -0400
Subject: [antlr-interest] Function Expressions
Message-ID: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>

Hello all,

I have a simple C/JavaScript-style grammar for my interpreter project. Right
now, functions can be called via identifier(), or identifier(param1,
param2). This works fine for simple cases, but in my language functions are
first-class objects. I'm in the process of redoing my identifier logic for
properties, arrays, and function calls. I've gotten the first two working.

I'm trying to allow expressions to be callable as functions, so I can do
stuff like createFunction()(), where createFunction would be a function that
returns a function. Another example would be (1 + 1)(). Obviously that
should throw an error, but it should be a permissible language construct.
JavaScript allows this.

The func.g file in my gist is a pared down version of the language grammar,
with only the relevant rules in it. Understandably, it fails with the
following errors:

[java] error(210):  The following sets of rules are mutually left-recursive
[boolNegation, unary, add, mult, relation, term, expression]
[java] error(206): /home/user/955488/func.g:66:2: Alternative 1: after
matching input such as IDENT '(' decision cannot predict what comes next due
to recursion overflow to relation from expression
[java] error(201): /home/user/955488/func.g:66:2: The following alternatives
can never be matched: 2

https://gist.github.com/955488 demonstrates the issue. I've stripped out
everything except the expression rules. The gist can be cloned as a git repo
and then built via Ant + Ivy.

I understand why it's failing. There's a conflict between the IDENT
expression and IDENT '(' ')' for function calls. What I'm trying to figure
out is how to allow both identifiers and function calls. If I figure that
out, it should give me the rest of what I need. Any help would be
appreciated.

From jean-sebastien.vachon at wantedtech.com  Wed May  4 09:32:56 2011
From: jean-sebastien.vachon at wantedtech.com (Jean-Sebastien Vachon)
Date: Wed, 4 May 2011 12:32:56 -0400
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <5e669d397a04ea5d3270f80e24bd6071@mail.gmail.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
	<5e669d397a04ea5d3270f80e24bd6071@mail.gmail.com>
Message-ID: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF31535@MAILBOXCLUSTER.wantedtech.com>

Ok I've changed my lexer and parser as you suggested but it didn't help. However, I found why the interpreter
Is not able to generate the tree in Eclipse. I found the cause but not the explanation...

It has something to do with the definition of the and_expr rule
and_expr   
  : (u1=or_expr (AND^ u2=or_expr)*) {System.out.println("  *and_expr: " + $u1.text + ", " + $u2.text);}
  | (expr expr+) => default_op
  ;

If I remove the second alternative then the interpreter is able to create the tree for my expression but I'm losing the operators that were inserted by the second alternative. I don't understand why it is complaining about a viable alternative not being found for a simple input such as 'abc AND def'. It should match the first alternative since both 'abc' and 'def' match the or_expr rule (through the expr rule). [ I tried changing the order of the two altervatives but it didn't help]

Any idea?


-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Jim Idle
Sent: May-04-11 11:22 AM
To: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Inserting missing nodes

You need to fix your lexer first:


WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> SENTENCE))+);

is ambiguous with:

> PREFIX	    : WORDCHAR+(STAR);
> WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;

You need to contstruct the lists in the parser not the lexer and should
probably left factor the common roots in the lexer anyway.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jean-Sebastien Vachon
> Sent: Wednesday, May 04, 2011 7:51 AM
> To: Bart Kiers; antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Inserting missing nodes
>
> Thanks for your input. So here is the whole thing with two use cases
> that are not giving me the expected results...
> (Sorry for the long post)
>
> INPUT = abc def zyx toto
> RESULT = (DEFAULT_OP abc def) (DEFAULT_OP zyx toto) EXPECTED =
> (DEFAULT_OP (DEFAULT_OP abc def) (DEFAULT_OP zyx toto))
>
> INPUT = software engineer OR java programmer RESULT = (DEFAULT_OP
> software (OR engineer java)) programmer EXPECTED =  (DEFAULT_OP
> (DEFAULT_OP software (OR engineer java)) programmer)
>
> I'm also having some trouble using the Interpreter within Eclipse.
> The same expressions are not working in the interpreter. It fails to
> generate the tree with a "NoViableAltException at input 'abc' " (for
> the first case).
> I don't think this is related to my other problem since I can't get it
> to generate any tree.
>
> Thanks again for your time and comments
>
> -----------------------------------------------------------------------
> -----------------------------------
> Grammar (validation by building a tree and trying to insert missing
> operators)
> -----------------------------------------------------------------------
> -----------------------------------
> grammar MyGrammar;
>
> options {
>   language = Java;
>   output = AST;
>   ASTLabelType = CommonTree;
> }
>
> // Rules to build the tree representation of our expression...
>
> query
>   : and_expr+ EOF!
>   ;
>
> // Each AND expression can contain OR expressions...
> and_expr
>   : (expr expr+) => default_op
>   | (u1=or_expr (AND^ u2=or_expr)*)
>   ;
>
> // A OR expression contains one or more expression
> or_expr
>   : u1=expr (OR^ u2=expr)*
>   ;
>
> default_op
>   : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
>   ;
>
> expr
>   : (NOT^)? (operand)
>   ;
>
> // The leafs of the tree.. Words, sentence and so on...
> // Note that an expression such as '-word' is rewritten in its 'NOT
> word' form operand
>   : (f=FIELD^)(o=operand)
>   | PREFIX
>   | WORD
>   | SENTENCE
>   | WORDLIST
>   | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
>   | MUST
>   | LPAREN! and_expr RPAREN!
>   ;
>
> // Lexer ...
> NEGATIVE    : '-';
> LPAREN      : '(' ;
> RPAREN      : ')' ;
> DOUBLEQUOTE : '"';
> STAR	      : '*';
> AND         : 'AND' | '+';
> OR          : 'OR';
> NOT         : 'NOT';
> DEFAULT_OP  : 'DEF_OP';
> FIELD       : ('title'|'TITLE'|'Title')(FIELDSEPARATOR);
> WS          : (WSCHAR)+ { $channel=HIDDEN; };
> PREFIX	    : WORDCHAR+(STAR);
> WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
> SENTENCE    : ((DOUBLEQUOTE)(~(DOUBLEQUOTE))*(DOUBLEQUOTE));
> WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> SENTENCE))+);
> MUST	      : '+'(PREFIX|WORD|SENTENCE|WORDLIST);
> fragment WORDCHAR       : (~( WSCHAR | LPAREN | RPAREN | '-' |':' | '+'
> | ',' | STAR | DOUBLEQUOTE) );
> fragment FIELDSEPARATOR : ':';
> fragment WSCHAR         : ( ' ' | '\t' | '\r' | '\n');
>
>
>
> ================================= END OF GRAMMAR
> ==========================
>
>
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: May-04-11 10:21 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Inserting missing nodes
>
> On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon < jean-
> sebastien.vachon at wantedtech.com> wrote:
>
> > No one can help me with this? :S
> > Let me know if something is not clear. I need to fix this issue as
> > soon as I can.
> >
> > Thanks
>
>
> The fact that you didn't provide the lexer rules (although they might
> be straight-forward as you mentioned), and you didn't mention what
> input you're specifically having problems with parsing (the following
> is a bit
> vague: *"... but I can't get it to parse everything I'm throwing at it
> ..."*), might be some reasons why you haven't been answered.
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From jimi at temporal-wave.com  Wed May  4 10:05:13 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 May 2011 10:05:13 -0700
Subject: [antlr-interest] Function Expressions
In-Reply-To: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
References: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
Message-ID: <b019ded594be9de3d8ccaf42304e595f@mail.gmail.com>

Generally when parsing you do this:


expr
...


atom
 : i=ID
     (
          LPAREN e=exprList RPAREN  ->^(FUNC $i $e)
	   | -> ^(IDENT $i)
     )

...


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jeff Hair
> Sent: Wednesday, May 04, 2011 9:27 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Function Expressions
>
> Hello all,
>
> I have a simple C/JavaScript-style grammar for my interpreter project.
> Right now, functions can be called via identifier(), or
> identifier(param1, param2). This works fine for simple cases, but in my
> language functions are first-class objects. I'm in the process of
> redoing my identifier logic for properties, arrays, and function calls.
> I've gotten the first two working.
>
> I'm trying to allow expressions to be callable as functions, so I can
> do stuff like createFunction()(), where createFunction would be a
> function that returns a function. Another example would be (1 + 1)().
> Obviously that should throw an error, but it should be a permissible
> language construct.
> JavaScript allows this.
>
> The func.g file in my gist is a pared down version of the language
> grammar, with only the relevant rules in it. Understandably, it fails
> with the following errors:
>
> [java] error(210):  The following sets of rules are mutually left-
> recursive [boolNegation, unary, add, mult, relation, term, expression]
> [java] error(206): /home/user/955488/func.g:66:2: Alternative 1: after
> matching input such as IDENT '(' decision cannot predict what comes
> next due to recursion overflow to relation from expression [java]
> error(201): /home/user/955488/func.g:66:2: The following alternatives
> can never be matched: 2
>
> https://gist.github.com/955488 demonstrates the issue. I've stripped
> out everything except the expression rules. The gist can be cloned as a
> git repo and then built via Ant + Ivy.
>
> I understand why it's failing. There's a conflict between the IDENT
> expression and IDENT '(' ')' for function calls. What I'm trying to
> figure out is how to allow both identifiers and function calls. If I
> figure that out, it should give me the rest of what I need. Any help
> would be appreciated.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed May  4 10:05:47 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 4 May 2011 10:05:47 -0700
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF31535@MAILBOXCLUSTER.wantedtech.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
	<5e669d397a04ea5d3270f80e24bd6071@mail.gmail.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF31535@MAILBOXCLUSTER.wantedtech.com>
Message-ID: <108e8fdb5a4962e343c3f4a3330f715f@mail.gmail.com>

Don't use the interpreter, use the debugger.

Jim

> -----Original Message-----
> From: Jean-Sebastien Vachon [mailto:jean-
> sebastien.vachon at wantedtech.com]
> Sent: Wednesday, May 04, 2011 9:33 AM
> To: Jim Idle; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] Inserting missing nodes
>
> Ok I've changed my lexer and parser as you suggested but it didn't
> help. However, I found why the interpreter Is not able to generate the
> tree in Eclipse. I found the cause but not the explanation...
>
> It has something to do with the definition of the and_expr rule
> and_expr
>   : (u1=or_expr (AND^ u2=or_expr)*) {System.out.println("  *and_expr: "
> + $u1.text + ", " + $u2.text);}
>   | (expr expr+) => default_op
>   ;
>
> If I remove the second alternative then the interpreter is able to
> create the tree for my expression but I'm losing the operators that
> were inserted by the second alternative. I don't understand why it is
> complaining about a viable alternative not being found for a simple
> input such as 'abc AND def'. It should match the first alternative
> since both 'abc' and 'def' match the or_expr rule (through the expr
> rule). [ I tried changing the order of the two altervatives but it
> didn't help]
>
> Any idea?
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: May-04-11 11:22 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Inserting missing nodes
>
> You need to fix your lexer first:
>
>
> WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> > SENTENCE))+);
>
> is ambiguous with:
>
> > PREFIX	    : WORDCHAR+(STAR);
> > WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
>
> You need to contstruct the lists in the parser not the lexer and should
> probably left factor the common roots in the lexer anyway.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Jean-Sebastien Vachon
> > Sent: Wednesday, May 04, 2011 7:51 AM
> > To: Bart Kiers; antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Inserting missing nodes
> >
> > Thanks for your input. So here is the whole thing with two use cases
> > that are not giving me the expected results...
> > (Sorry for the long post)
> >
> > INPUT = abc def zyx toto
> > RESULT = (DEFAULT_OP abc def) (DEFAULT_OP zyx toto) EXPECTED =
> > (DEFAULT_OP (DEFAULT_OP abc def) (DEFAULT_OP zyx toto))
> >
> > INPUT = software engineer OR java programmer RESULT = (DEFAULT_OP
> > software (OR engineer java)) programmer EXPECTED =  (DEFAULT_OP
> > (DEFAULT_OP software (OR engineer java)) programmer)
> >
> > I'm also having some trouble using the Interpreter within Eclipse.
> > The same expressions are not working in the interpreter. It fails to
> > generate the tree with a "NoViableAltException at input 'abc' " (for
> > the first case).
> > I don't think this is related to my other problem since I can't get
> it
> > to generate any tree.
> >
> > Thanks again for your time and comments
> >
> > ---------------------------------------------------------------------
> -
> > -
> > -----------------------------------
> > Grammar (validation by building a tree and trying to insert missing
> > operators)
> > ---------------------------------------------------------------------
> -
> > -
> > -----------------------------------
> > grammar MyGrammar;
> >
> > options {
> >   language = Java;
> >   output = AST;
> >   ASTLabelType = CommonTree;
> > }
> >
> > // Rules to build the tree representation of our expression...
> >
> > query
> >   : and_expr+ EOF!
> >   ;
> >
> > // Each AND expression can contain OR expressions...
> > and_expr
> >   : (expr expr+) => default_op
> >   | (u1=or_expr (AND^ u2=or_expr)*)
> >   ;
> >
> > // A OR expression contains one or more expression or_expr
> >   : u1=expr (OR^ u2=expr)*
> >   ;
> >
> > default_op
> >   : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
> >   ;
> >
> > expr
> >   : (NOT^)? (operand)
> >   ;
> >
> > // The leafs of the tree.. Words, sentence and so on...
> > // Note that an expression such as '-word' is rewritten in its 'NOT
> > word' form operand
> >   : (f=FIELD^)(o=operand)
> >   | PREFIX
> >   | WORD
> >   | SENTENCE
> >   | WORDLIST
> >   | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
> >   | MUST
> >   | LPAREN! and_expr RPAREN!
> >   ;
> >
> > // Lexer ...
> > NEGATIVE    : '-';
> > LPAREN      : '(' ;
> > RPAREN      : ')' ;
> > DOUBLEQUOTE : '"';
> > STAR	      : '*';
> > AND         : 'AND' | '+';
> > OR          : 'OR';
> > NOT         : 'NOT';
> > DEFAULT_OP  : 'DEF_OP';
> > FIELD       : ('title'|'TITLE'|'Title')(FIELDSEPARATOR);
> > WS          : (WSCHAR)+ { $channel=HIDDEN; };
> > PREFIX	    : WORDCHAR+(STAR);
> > WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
> > SENTENCE    : ((DOUBLEQUOTE)(~(DOUBLEQUOTE))*(DOUBLEQUOTE));
> > WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> > SENTENCE))+);
> > MUST	      : '+'(PREFIX|WORD|SENTENCE|WORDLIST);
> > fragment WORDCHAR       : (~( WSCHAR | LPAREN | RPAREN | '-' |':' |
> '+'
> > | ',' | STAR | DOUBLEQUOTE) );
> > fragment FIELDSEPARATOR : ':';
> > fragment WSCHAR         : ( ' ' | '\t' | '\r' | '\n');
> >
> >
> >
> > ================================= END OF GRAMMAR
> > ==========================
> >
> >
> >
> >
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Bart Kiers
> > Sent: May-04-11 10:21 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Inserting missing nodes
> >
> > On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon < jean-
> > sebastien.vachon at wantedtech.com> wrote:
> >
> > > No one can help me with this? :S
> > > Let me know if something is not clear. I need to fix this issue as
> > > soon as I can.
> > >
> > > Thanks
> >
> >
> > The fact that you didn't provide the lexer rules (although they might
> > be straight-forward as you mentioned), and you didn't mention what
> > input you're specifically having problems with parsing (the following
> > is a bit
> > vague: *"... but I can't get it to parse everything I'm throwing at
> it
> > ..."*), might be some reasons why you haven't been answered.
> >
> > Regards,
> >
> > Bart.
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From knifed at gmail.com  Wed May  4 10:37:46 2011
From: knifed at gmail.com (Jeff Hair)
Date: Wed, 4 May 2011 13:37:46 -0400
Subject: [antlr-interest] Function Expressions
In-Reply-To: <b019ded594be9de3d8ccaf42304e595f@mail.gmail.com>
References: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
	<b019ded594be9de3d8ccaf42304e595f@mail.gmail.com>
Message-ID: <BANLkTimQO3Cfvh_Ceg6hYuyB_2Sa9g7X0A@mail.gmail.com>

Right. That's basically what I'm doing right now. The problem is that I
can't call do stuff like anonymous function calls (which can be generated by
an expression). So I'm trying to figure out how to do enable that without
getting the recursion errors.

JavaScript allows you to do stuff like (function() { ... })(); in order to
call the function. You can even do it with (1 + 1)(), which of course
returns an error. But the point is that it's possible. That's what I'm
trying to enable.

On Wed, May 4, 2011 at 1:05 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Generally when parsing you do this:
>
>
> expr
> ...
>
>
> atom
>  : i=ID
>     (
>          LPAREN e=exprList RPAREN  ->^(FUNC $i $e)
>           | -> ^(IDENT $i)
>     )
>
> ...
>
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Jeff Hair
> > Sent: Wednesday, May 04, 2011 9:27 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Function Expressions
> >
> > Hello all,
> >
> > I have a simple C/JavaScript-style grammar for my interpreter project.
> > Right now, functions can be called via identifier(), or
> > identifier(param1, param2). This works fine for simple cases, but in my
> > language functions are first-class objects. I'm in the process of
> > redoing my identifier logic for properties, arrays, and function calls.
> > I've gotten the first two working.
> >
> > I'm trying to allow expressions to be callable as functions, so I can
> > do stuff like createFunction()(), where createFunction would be a
> > function that returns a function. Another example would be (1 + 1)().
> > Obviously that should throw an error, but it should be a permissible
> > language construct.
> > JavaScript allows this.
> >
> > The func.g file in my gist is a pared down version of the language
> > grammar, with only the relevant rules in it. Understandably, it fails
> > with the following errors:
> >
> > [java] error(210):  The following sets of rules are mutually left-
> > recursive [boolNegation, unary, add, mult, relation, term, expression]
> > [java] error(206): /home/user/955488/func.g:66:2: Alternative 1: after
> > matching input such as IDENT '(' decision cannot predict what comes
> > next due to recursion overflow to relation from expression [java]
> > error(201): /home/user/955488/func.g:66:2: The following alternatives
> > can never be matched: 2
> >
> > https://gist.github.com/955488 demonstrates the issue. I've stripped
> > out everything except the expression rules. The gist can be cloned as a
> > git repo and then built via Ant + Ivy.
> >
> > I understand why it's failing. There's a conflict between the IDENT
> > expression and IDENT '(' ')' for function calls. What I'm trying to
> > figure out is how to allow both identifiers and function calls. If I
> > figure that out, it should give me the rest of what I need. Any help
> > would be appreciated.
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jbb at acm.org  Wed May  4 15:19:38 2011
From: jbb at acm.org (John B. Brodie)
Date: Wed, 04 May 2011 18:19:38 -0400
Subject: [antlr-interest] Function Expressions
In-Reply-To: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
References: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
Message-ID: <1304547578.5427.25.camel@gecko>

Greetings!

On Wed, 2011-05-04 at 12:27 -0400, Jeff Hair wrote:
> Hello all,
> 
> I have a simple C/JavaScript-style grammar for my interpreter project. Right
> now, functions can be called via identifier(), or identifier(param1,
> param2). This works fine for simple cases, but in my language functions are
> first-class objects. I'm in the process of redoing my identifier logic for
> properties, arrays, and function calls. I've gotten the first two working.
> 
> I'm trying to allow expressions to be callable as functions, so I can do
> stuff like createFunction()(), where createFunction would be a function that
> returns a function. Another example would be (1 + 1)(). Obviously that
> should throw an error, but it should be a permissible language construct.
> JavaScript allows this.
> 
> The func.g file in my gist is a pared down version of the language grammar,
> with only the relevant rules in it. Understandably, it fails with the
> following errors:
> 
> [java] error(210):  The following sets of rules are mutually left-recursive
> [boolNegation, unary, add, mult, relation, term, expression]
> [java] error(206): /home/user/955488/func.g:66:2: Alternative 1: after
> matching input such as IDENT '(' decision cannot predict what comes next due
> to recursion overflow to relation from expression
> [java] error(201): /home/user/955488/func.g:66:2: The following alternatives
> can never be matched: 2
> 
> https://gist.github.com/955488 demonstrates the issue. I've stripped out
> everything except the expression rules. The gist can be cloned as a git repo
> and then built via Ant + Ivy.
> 
> I understand why it's failing. There's a conflict between the IDENT
> expression and IDENT '(' ')' for function calls. What I'm trying to figure
> out is how to allow both identifiers and function calls. If I figure that
> out, it should give me the rest of what I need. Any help would be
> appreciated.
> 

I think that basically you want Application (I come from the lambda
calculus and function invocation is called Application therein) to be a
post-fix operator.

If you look at grammars for Java or C or other C-like languages you will
see (I believe) that indexing into an array and/or projecting a field
out of a tuple (record) and probably others-like-them are post-fix
operators.

So I would recommend the following (tested, but not using your
incomplete gist framework) --- replacing your term rule with:

//Expressions
primary
   : IDENT
   | '('! expression ')'!
   | INTEGER
   | DOUBLE
   | BOOLEAN
   ;

term
   : (primary -> primary) ( suffix[$term.tree] -> suffix )*
   ;

suffix [CommonTree term] :
   ( x='(' modifiers? ')' -> ^(APPLICATION[$x,"A"] {$term} modifiers?) )
 | ( x='[' modifiers  ']' -> ^(INDEXING[$x,"I"] {$term} modifiers) )
 | ( x='.' (p=IDENT|p=INTEGER) -> ^(PROJECTION[$x,"P"] {$term} $p) )
 ;

modifiers : expression (','! expression)* ;



with an appropriate tokens{} section defining  the APPLICATION;
INDEXING; and PROJECTION imaginary tokens.

the above is a little complicated in order to get the imaginary token
representing the suffix operator to be a tree root.

note that the stuff in the []'s after the imaginary token name is for
error reporting and/or tree pretty printing. keep the $x but change the
string to suite your need.

hope this helps
   -jbb




From knifed at gmail.com  Wed May  4 15:56:38 2011
From: knifed at gmail.com (Jeff Hair)
Date: Wed, 4 May 2011 18:56:38 -0400
Subject: [antlr-interest] Function Expressions
In-Reply-To: <1304547578.5427.25.camel@gecko>
References: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
	<1304547578.5427.25.camel@gecko>
Message-ID: <BANLkTinbmTt-SDbzXCAif-g=6PzV0QO2hA@mail.gmail.com>

This does indeed work as expected. Wouldn't have been able to come up with
that on my own. I started down the path of putting function calls in between
term and booleanExpression, and that was *sort of* working. But I also
uncovered some other issues with properties (what you are calling
projection). I sort of understand what's going on with this code via
referencing the last example under "Rewrite rules" at
http://www.antlr.org/wiki/display/ANTLR3/Tree+construction. But I don't
understand it fully. Perhaps I just need some time to digest it. I only
discovered ANTLR like 3 weeks ago, so there's still a lot I have to learn.
I'm surprised I've gotten as far as I have without help, actually...

On Wed, May 4, 2011 at 6:19 PM, John B. Brodie <jbb at acm.org> wrote:

> Greetings!
>
> On Wed, 2011-05-04 at 12:27 -0400, Jeff Hair wrote:
> > Hello all,
> >
> > I have a simple C/JavaScript-style grammar for my interpreter project.
> Right
> > now, functions can be called via identifier(), or identifier(param1,
> > param2). This works fine for simple cases, but in my language functions
> are
> > first-class objects. I'm in the process of redoing my identifier logic
> for
> > properties, arrays, and function calls. I've gotten the first two
> working.
> >
> > I'm trying to allow expressions to be callable as functions, so I can do
> > stuff like createFunction()(), where createFunction would be a function
> that
> > returns a function. Another example would be (1 + 1)(). Obviously that
> > should throw an error, but it should be a permissible language construct.
> > JavaScript allows this.
> >
> > The func.g file in my gist is a pared down version of the language
> grammar,
> > with only the relevant rules in it. Understandably, it fails with the
> > following errors:
> >
> > [java] error(210):  The following sets of rules are mutually
> left-recursive
> > [boolNegation, unary, add, mult, relation, term, expression]
> > [java] error(206): /home/user/955488/func.g:66:2: Alternative 1: after
> > matching input such as IDENT '(' decision cannot predict what comes next
> due
> > to recursion overflow to relation from expression
> > [java] error(201): /home/user/955488/func.g:66:2: The following
> alternatives
> > can never be matched: 2
> >
> > https://gist.github.com/955488 demonstrates the issue. I've stripped out
> > everything except the expression rules. The gist can be cloned as a git
> repo
> > and then built via Ant + Ivy.
> >
> > I understand why it's failing. There's a conflict between the IDENT
> > expression and IDENT '(' ')' for function calls. What I'm trying to
> figure
> > out is how to allow both identifiers and function calls. If I figure that
> > out, it should give me the rest of what I need. Any help would be
> > appreciated.
> >
>
> I think that basically you want Application (I come from the lambda
> calculus and function invocation is called Application therein) to be a
> post-fix operator.
>
> If you look at grammars for Java or C or other C-like languages you will
> see (I believe) that indexing into an array and/or projecting a field
> out of a tuple (record) and probably others-like-them are post-fix
> operators.
>
> So I would recommend the following (tested, but not using your
> incomplete gist framework) --- replacing your term rule with:
>
> //Expressions
> primary
>   : IDENT
>   | '('! expression ')'!
>   | INTEGER
>   | DOUBLE
>   | BOOLEAN
>   ;
>
> term
>   : (primary -> primary) ( suffix[$term.tree] -> suffix )*
>   ;
>
> suffix [CommonTree term] :
>   ( x='(' modifiers? ')' -> ^(APPLICATION[$x,"A"] {$term} modifiers?) )
>  | ( x='[' modifiers  ']' -> ^(INDEXING[$x,"I"] {$term} modifiers) )
>  | ( x='.' (p=IDENT|p=INTEGER) -> ^(PROJECTION[$x,"P"] {$term} $p) )
>  ;
>
> modifiers : expression (','! expression)* ;
>
>
>
> with an appropriate tokens{} section defining  the APPLICATION;
> INDEXING; and PROJECTION imaginary tokens.
>
> the above is a little complicated in order to get the imaginary token
> representing the suffix operator to be a tree root.
>
> note that the stuff in the []'s after the imaginary token name is for
> error reporting and/or tree pretty printing. keep the $x but change the
> string to suite your need.
>
> hope this helps
>    -jbb
>
>
>
>

From knifed at gmail.com  Wed May  4 16:08:55 2011
From: knifed at gmail.com (Jeff Hair)
Date: Wed, 4 May 2011 19:08:55 -0400
Subject: [antlr-interest] Function Expressions
In-Reply-To: <1304547578.5427.25.camel@gecko>
References: <BANLkTik==GwhL59oK_OsjOG-OxpNCcLLpQ@mail.gmail.com>
	<1304547578.5427.25.camel@gecko>
Message-ID: <BANLkTi=H3vP49jtMZjme-A4ZOmeFrPxKCA@mail.gmail.com>

Oh, and thanks. I've put your code through a bunch of crazy scenarios after
adapting it to my full needs and it works perfectly. I can now move forward
with changes to the tree parser and interpreter. Thanks again.

On Wed, May 4, 2011 at 6:19 PM, John B. Brodie <jbb at acm.org> wrote:

> I think that basically you want Application (I come from the lambda
> calculus and function invocation is called Application therein) to be a
> post-fix operator.
>
> If you look at grammars for Java or C or other C-like languages you will
> see (I believe) that indexing into an array and/or projecting a field
> out of a tuple (record) and probably others-like-them are post-fix
> operators.
>
> So I would recommend the following (tested, but not using your
> incomplete gist framework) --- replacing your term rule with:
>
> //Expressions
> primary
>   : IDENT
>   | '('! expression ')'!
>   | INTEGER
>   | DOUBLE
>   | BOOLEAN
>   ;
>
> term
>   : (primary -> primary) ( suffix[$term.tree] -> suffix )*
>   ;
>
> suffix [CommonTree term] :
>   ( x='(' modifiers? ')' -> ^(APPLICATION[$x,"A"] {$term} modifiers?) )
>  | ( x='[' modifiers  ']' -> ^(INDEXING[$x,"I"] {$term} modifiers) )
>  | ( x='.' (p=IDENT|p=INTEGER) -> ^(PROJECTION[$x,"P"] {$term} $p) )
>  ;
>
> modifiers : expression (','! expression)* ;
>
>
>
> with an appropriate tokens{} section defining  the APPLICATION;
> INDEXING; and PROJECTION imaginary tokens.
>
> the above is a little complicated in order to get the imaginary token
> representing the suffix operator to be a tree root.
>
> note that the stuff in the []'s after the imaginary token name is for
> error reporting and/or tree pretty printing. keep the $x but change the
> string to suite your need.
>
> hope this helps
>    -jbb
>
>
>
>

From bkiers at gmail.com  Thu May  5 01:50:40 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 5 May 2011 10:50:40 +0200
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
Message-ID: <BANLkTi=iW=htdBD66sGS__CU6htTTbsfKw@mail.gmail.com>

How about something like this:

grammar MyGrammar;

options {
  output=AST;
}

tokens {
  DEFAULT_OP;
}

query
  :  andExpression EOF -> andExpression
  ;

andExpression
  :  (orExpression -> orExpression) ( AND e=orExpression              ->
^(AND $e $andExpression)
                                    | (orExpression)=> e=orExpression ->
^(DEFAULT_OP $e $andExpression)
                                    )*
  ;

orExpression
  :  negation (OR^ negation)*
  ;

negation
  :  NOT operand -> ^(NOT operand)
  |  operand
  ;

operand
  :  WORD
  |  '(' andExpression ')' -> andExpression
  ;

AND   : 'AND';
OR    : 'OR';
NOT   : 'NOT';
WORD  : 'a'..'z'+;
SPACE : (' ' | '\t' | '\r' | '\n') {skip();};


Test class:

import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {
    public static void main(String[] args) throws Exception {
        ANTLRStringStream in = new ANTLRStringStream("software engineer OR
java programmer");
        MyGrammarLexer lexer = new MyGrammarLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        MyGrammarParser parser = new MyGrammarParser(tokens);
        MyGrammarParser.query_return returnValue = parser.query();
        CommonTree tree = (CommonTree)returnValue.getTree();
        DOTTreeGenerator gen = new DOTTreeGenerator();
        StringTemplate st = gen.toDOT(tree);
        System.out.println(st);
    }
}


Regards,

Bart.

On Wed, May 4, 2011 at 4:51 PM, Jean-Sebastien Vachon <
jean-sebastien.vachon at wantedtech.com> wrote:

> Thanks for your input. So here is the whole thing with two use cases that
> are not giving me the expected results...
> (Sorry for the long post)
>
> INPUT = abc def zyx toto
> RESULT = (DEFAULT_OP abc def) (DEFAULT_OP zyx toto)
> EXPECTED = (DEFAULT_OP (DEFAULT_OP abc def) (DEFAULT_OP zyx toto))
>
> INPUT = software engineer OR java programmer
> RESULT = (DEFAULT_OP software (OR engineer java)) programmer
> EXPECTED =  (DEFAULT_OP (DEFAULT_OP software (OR engineer java))
> programmer)
>
> I'm also having some trouble using the Interpreter within Eclipse.
> The same expressions are not working in the interpreter. It fails to
> generate the
> tree with a "NoViableAltException at input 'abc' " (for the first case).
> I don't think this is related to my other problem since I can't get it to
> generate any tree.
>
> Thanks again for your time and comments
>
>
> ----------------------------------------------------------------------------------------------------------
> Grammar (validation by building a tree and trying to insert missing
> operators)
>
> ----------------------------------------------------------------------------------------------------------
> grammar MyGrammar;
>
> options {
>  language = Java;
>  output = AST;
>  ASTLabelType = CommonTree;
> }
>
> // Rules to build the tree representation of our expression...
>
> query
>  : and_expr+ EOF!
>  ;
>
> // Each AND expression can contain OR expressions...
> and_expr
>  : (expr expr+) => default_op
>  | (u1=or_expr (AND^ u2=or_expr)*)
>  ;
>
> // A OR expression contains one or more expression
> or_expr
>  : u1=expr (OR^ u2=expr)*
>  ;
>
> default_op
>  : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
>  ;
>
> expr
>  : (NOT^)? (operand)
>  ;
>
> // The leafs of the tree.. Words, sentence and so on...
> // Note that an expression such as '-word' is rewritten in its 'NOT word'
> form
> operand
>  : (f=FIELD^)(o=operand)
>   | PREFIX
>  | WORD
>  | SENTENCE
>  | WORDLIST
>  | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
>  | MUST
>   | LPAREN! and_expr RPAREN!
>  ;
>
> // Lexer ...
> NEGATIVE    : '-';
> LPAREN      : '(' ;
> RPAREN      : ')' ;
> DOUBLEQUOTE : '"';
> STAR          : '*';
> AND         : 'AND' | '+';
> OR          : 'OR';
> NOT         : 'NOT';
> DEFAULT_OP  : 'DEF_OP';
> FIELD       : ('title'|'TITLE'|'Title')(FIELDSEPARATOR);
> WS          : (WSCHAR)+ { $channel=HIDDEN; };
> PREFIX      : WORDCHAR+(STAR);
> WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
> SENTENCE    : ((DOUBLEQUOTE)(~(DOUBLEQUOTE))*(DOUBLEQUOTE));
> WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD |
> SENTENCE))+);
> MUST          : '+'(PREFIX|WORD|SENTENCE|WORDLIST);
> fragment WORDCHAR       : (~( WSCHAR | LPAREN | RPAREN | '-' |':' | '+' |
> ',' | STAR | DOUBLEQUOTE) );
> fragment FIELDSEPARATOR : ':';
> fragment WSCHAR         : ( ' ' | '\t' | '\r' | '\n');
>
>
>
> ================================= END OF GRAMMAR ==========================
>
>
>
>
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:
> antlr-interest-bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: May-04-11 10:21 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Inserting missing nodes
>
> On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon <
> jean-sebastien.vachon at wantedtech.com> wrote:
>
> > No one can help me with this? :S
> > Let me know if something is not clear. I need to fix this issue as
> > soon as I can.
> >
> > Thanks
>
>
> The fact that you didn't provide the lexer rules (although they might be
> straight-forward as you mentioned), and you didn't mention what input you're
> specifically having problems with parsing (the following is a bit
> vague: *"... but I can't get it to parse everything I'm throwing at it
> ..."*), might be some reasons why you haven't been answered.
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ben.corne at gmail.com  Thu May  5 04:58:21 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Thu, 5 May 2011 13:58:21 +0200
Subject: [antlr-interest] Source code level of ANTLRWorks
In-Reply-To: <3d006b9f5dcc5ff3275ec1a407749fb5@mail.gmail.com>
References: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>
	<3d006b9f5dcc5ff3275ec1a407749fb5@mail.gmail.com>
Message-ID: <BANLkTik0JaN0F_mLJxs_Mtjf-dD81vSA8Q@mail.gmail.com>

Here's a screenshot of my antlrworks preferences page + javac info
http://igor.rave.org/antlrjavac.png

I don't see the option where to adjust the commandline call.
And from what I think to understand from the helppage of my javac, it says
1.4 is the default, but I don't find a way to change this default, except by
writing a wrapper shell script that attaches -source 1.5 (which is what I
will do now, until more clues are given)

Ben

2011/5/4 Jim Idle <jimi at temporal-wave.com>

> That just means you are calling a compiler that has a default level less
> than 1.5. So, chance the javacc command in the preferences or remove the
> old compiler and install 1.6, or makes sure that 1.6 is the first on the
> command line. ANTLR works does not influence the Java compiler - it only
> calls the one that you tell it to.
>
> Jim
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ben Corne
> > Sent: Wednesday, May 04, 2011 6:56 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Source code level of ANTLRWorks
> >
> > Hi
> >
> > Is there a way to set the source code level of antlrworks?
> > I've checked the preferences pane and launchers with no avail.
> >
> > I need to set it to > 1.5, since I'm using Java Generics:
> >
> > [15:47:58] 102. ERROR in
> > /home/bcorne/Downloads/at2-parser-3/grammar/output/ATGrammar3Lexer.java
> > (at line 114) [15:47:58] Stack<String> paraphrase = new
> > Stack<String>();
> > [15:47:58]                                      ^^^^^^
> > [15:47:58] Syntax error, parameterized types are only available if
> > source level is 1.5
> >
> > Regards
> > Ben Corne
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu May  5 06:20:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 5 May 2011 06:20:03 -0700
Subject: [antlr-interest] Source code level of ANTLRWorks
In-Reply-To: <BANLkTik0JaN0F_mLJxs_Mtjf-dD81vSA8Q@mail.gmail.com>
References: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>
	<3d006b9f5dcc5ff3275ec1a407749fb5@mail.gmail.com>
	<BANLkTik0JaN0F_mLJxs_Mtjf-dD81vSA8Q@mail.gmail.com>
Message-ID: <2c6b5bfced9f920c274e3c890886c6a8@mail.gmail.com>

Have you tried adding it in with the PATH? Also you can use -source 1.6
-target jsr14 and use 1.6 input and 1.4 output.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ben Corne
> Sent: Thursday, May 05, 2011 4:58 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Source code level of ANTLRWorks
>
> Here's a screenshot of my antlrworks preferences page + javac info
> http://igor.rave.org/antlrjavac.png
>
> I don't see the option where to adjust the commandline call.
> And from what I think to understand from the helppage of my javac, it
> says
> 1.4 is the default, but I don't find a way to change this default,
> except by writing a wrapper shell script that attaches -source 1.5
> (which is what I will do now, until more clues are given)
>
> Ben
>
> 2011/5/4 Jim Idle <jimi at temporal-wave.com>
>
> > That just means you are calling a compiler that has a default level
> > less than 1.5. So, chance the javacc command in the preferences or
> > remove the old compiler and install 1.6, or makes sure that 1.6 is
> the
> > first on the command line. ANTLR works does not influence the Java
> > compiler - it only calls the one that you tell it to.
> >
> > Jim
> >
> >
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Ben Corne
> > > Sent: Wednesday, May 04, 2011 6:56 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Source code level of ANTLRWorks
> > >
> > > Hi
> > >
> > > Is there a way to set the source code level of antlrworks?
> > > I've checked the preferences pane and launchers with no avail.
> > >
> > > I need to set it to > 1.5, since I'm using Java Generics:
> > >
> > > [15:47:58] 102. ERROR in
> > > /home/bcorne/Downloads/at2-parser-
> 3/grammar/output/ATGrammar3Lexer.j
> > > ava (at line 114) [15:47:58] Stack<String> paraphrase = new
> > > Stack<String>();
> > > [15:47:58]                                      ^^^^^^
> > > [15:47:58] Syntax error, parameterized types are only available if
> > > source level is 1.5
> > >
> > > Regards
> > > Ben Corne
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jean-sebastien.vachon at wantedtech.com  Thu May  5 07:08:01 2011
From: jean-sebastien.vachon at wantedtech.com (Jean-Sebastien Vachon)
Date: Thu, 5 May 2011 10:08:01 -0400
Subject: [antlr-interest] Inserting missing nodes
In-Reply-To: <BANLkTi=iW=htdBD66sGS__CU6htTTbsfKw@mail.gmail.com>
References: <4072ABC603C8D848BAC6B74D4D3E5CD301449DE49B70@MAILBOXCLUSTER.wantedtech.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314BA@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTikkf=bFp-STU_QLp8Z2vTmsLPg2cw@mail.gmail.com>
	<4072ABC603C8D848BAC6B74D4D3E5CD301449DF314D3@MAILBOXCLUSTER.wantedtech.com>
	<BANLkTi=iW=htdBD66sGS__CU6htTTbsfKw@mail.gmail.com>
Message-ID: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF3167F@MAILBOXCLUSTER.wantedtech.com>

Hi,

I've integrated your solution to my whole grammar and it works perfectly.

Thanks for your help

From: Bart Kiers [mailto:bkiers at gmail.com]
Sent: May-05-11 4:51 AM
To: Jean-Sebastien Vachon
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Inserting missing nodes

How about something like this:

grammar MyGrammar;

options {
  output=AST;
}

tokens {
  DEFAULT_OP;
}

query
  :  andExpression EOF -> andExpression
  ;

andExpression
  :  (orExpression -> orExpression) ( AND e=orExpression              -> ^(AND $e $andExpression)
                                    | (orExpression)=> e=orExpression -> ^(DEFAULT_OP $e $andExpression)
                                    )*
  ;

orExpression
  :  negation (OR^ negation)*
  ;

negation
  :  NOT operand -> ^(NOT operand)
  |  operand
  ;

operand
  :  WORD
  |  '(' andExpression ')' -> andExpression
  ;

AND   : 'AND';
OR    : 'OR';
NOT   : 'NOT';
WORD  : 'a'..'z'+;
SPACE : (' ' | '\t' | '\r' | '\n') {skip();};

Test class:

import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {
    public static void main(String[] args) throws Exception {
        ANTLRStringStream in = new ANTLRStringStream("software engineer OR java programmer");
        MyGrammarLexer lexer = new MyGrammarLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        MyGrammarParser parser = new MyGrammarParser(tokens);
        MyGrammarParser.query_return returnValue = parser.query();
        CommonTree tree = (CommonTree)returnValue.getTree();
        DOTTreeGenerator gen = new DOTTreeGenerator();
        StringTemplate st = gen.toDOT(tree);
        System.out.println(st);
    }
}

Regards,

Bart.

On Wed, May 4, 2011 at 4:51 PM, Jean-Sebastien Vachon <jean-sebastien.vachon at wantedtech.com<mailto:jean-sebastien.vachon at wantedtech.com>> wrote:
Thanks for your input. So here is the whole thing with two use cases that are not giving me the expected results...
(Sorry for the long post)

INPUT = abc def zyx toto
RESULT = (DEFAULT_OP abc def) (DEFAULT_OP zyx toto)
EXPECTED = (DEFAULT_OP (DEFAULT_OP abc def) (DEFAULT_OP zyx toto))

INPUT = software engineer OR java programmer
RESULT = (DEFAULT_OP software (OR engineer java)) programmer
EXPECTED =  (DEFAULT_OP (DEFAULT_OP software (OR engineer java)) programmer)

I'm also having some trouble using the Interpreter within Eclipse.
The same expressions are not working in the interpreter. It fails to generate the
tree with a "NoViableAltException at input 'abc' " (for the first case).
I don't think this is related to my other problem since I can't get it to generate any tree.

Thanks again for your time and comments

----------------------------------------------------------------------------------------------------------
Grammar (validation by building a tree and trying to insert missing operators)
----------------------------------------------------------------------------------------------------------
grammar MyGrammar;

options {
 language = Java;
 output = AST;
 ASTLabelType = CommonTree;
}
// Rules to build the tree representation of our expression...

query
 : and_expr+ EOF!
 ;

// Each AND expression can contain OR expressions...
and_expr
 : (expr expr+) => default_op
 | (u1=or_expr (AND^ u2=or_expr)*)
 ;
// A OR expression contains one or more expression
or_expr
 : u1=expr (OR^ u2=expr)*
 ;

default_op
 : (e1=or_expr e2=or_expr) -> ^(DEFAULT_OP $e1 $e2)
 ;

expr
 : (NOT^)? (operand)
 ;
// The leafs of the tree.. Words, sentence and so on...
// Note that an expression such as '-word' is rewritten in its 'NOT word' form
operand
 : (f=FIELD^)(o=operand)
 | PREFIX
 | WORD
 | SENTENCE
 | WORDLIST
 | NEGATIVE(w=PREFIX|w=WORD|w=SENTENCE|w=WORDLIST) -> ^(NOT $w)
 | MUST
 | LPAREN! and_expr RPAREN!
 ;

// Lexer ...
NEGATIVE    : '-';
LPAREN      : '(' ;
RPAREN      : ')' ;
DOUBLEQUOTE : '"';
STAR          : '*';
AND         : 'AND' | '+';
OR          : 'OR';
NOT         : 'NOT';
DEFAULT_OP  : 'DEF_OP';
FIELD       : ('title'|'TITLE'|'Title')(FIELDSEPARATOR);
WS          : (WSCHAR)+ { $channel=HIDDEN; };
PREFIX      : WORDCHAR+(STAR);
WORD        : WORDCHAR+(('-'|'+')WORDCHAR*)*;
SENTENCE    : ((DOUBLEQUOTE)(~(DOUBLEQUOTE))*(DOUBLEQUOTE));
WORDLIST    : ((PREFIX | WORD | SENTENCE)(','(WS)* (PREFIX | WORD | SENTENCE))+);
MUST          : '+'(PREFIX|WORD|SENTENCE|WORDLIST);
fragment WORDCHAR       : (~( WSCHAR | LPAREN | RPAREN | '-' |':' | '+' | ',' | STAR | DOUBLEQUOTE) );
fragment FIELDSEPARATOR : ':';
fragment WSCHAR         : ( ' ' | '\t' | '\r' | '\n');



================================= END OF GRAMMAR ==========================





-----Original Message-----
From: antlr-interest-bounces at antlr.org<mailto:antlr-interest-bounces at antlr.org> [mailto:antlr-interest-bounces at antlr.org<mailto:antlr-interest-bounces at antlr.org>] On Behalf Of Bart Kiers
Sent: May-04-11 10:21 AM
To: antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>
Subject: Re: [antlr-interest] Inserting missing nodes

On Wed, May 4, 2011 at 4:12 PM, Jean-Sebastien Vachon < jean-sebastien.vachon at wantedtech.com<mailto:jean-sebastien.vachon at wantedtech.com>> wrote:

> No one can help me with this? :S
> Let me know if something is not clear. I need to fix this issue as
> soon as I can.
>
> Thanks


The fact that you didn't provide the lexer rules (although they might be straight-forward as you mentioned), and you didn't mention what input you're specifically having problems with parsing (the following is a bit
vague: *"... but I can't get it to parse everything I'm throwing at it ..."*), might be some reasons why you haven't been answered.

Regards,

Bart.
List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From bkiers at gmail.com  Thu May  5 11:42:24 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 5 May 2011 20:42:24 +0200
Subject: [antlr-interest] rules that takes rules as arguments
In-Reply-To: <4DC03B6C.2060709@gmail.com>
References: <4DC03B6C.2060709@gmail.com>
Message-ID: <BANLkTim8TWvvhGSS=KZU6ExBD+nELMzbrg@mail.gmail.com>

Both parser- and lexer rules can take parameters of any (Java) type.
However, rules in ANTLR are "translated" to methods, and methods aren't
first class objects in Java. So providing a rule (read: method) to another
rule as parameter is not possible.

Perhaps you can elaborate a bit and explain what problem you're trying to
solve?

Regards,

Bart.


On Tue, May 3, 2011 at 7:29 PM, Vladimir VG <gordeev.vladimir.v at gmail.com>wrote:

> I'm defining some grouping rule ( '(' value ')' ) for operator precedence,
> and it will be helpful if I would use rules that takes other rules as
> arguments.
>
> Is that possible?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Thu May  5 12:14:24 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 5 May 2011 21:14:24 +0200
Subject: [antlr-interest] Change node content in AST tree generated with
	ANTLRWorks
In-Reply-To: <6218EBA14241FD40A4094C1C4F45E5CD327FEC1AF4@SYNC.rti.com>
References: <AcwHmWmA4TRFu9cbT1OXJCUMb1NCew==>
	<6218EBA14241FD40A4094C1C4F45E5CD327FEC1AF4@SYNC.rti.com>
Message-ID: <BANLkTinYsx+auVis7L_8XXu+3qgPFQeCTg@mail.gmail.com>

Note that it doesn't matter if you use ANTLRWorks or the org.antlr.Tool on
the command line to generate the lexer/parser: they do the same thing.

   1. Did you define your custom tree in the options section of your
   grammar?
   2. Did you "attach" a custom TreeAdaptor to your parser?

Here's a little demo that demonstrates the 2 points I mentioned above:

grammar T;

options {
  output=AST;
  ASTLabelType=MyTree;
}

@parser::members {

  static class MyTree extends CommonTree {

    public MyTree(Token t) {
      super(t);
    }

    @Override
    public String toString() {
      return "MyTree=" + super.toString();
    }
  }

  public static void main(String[] args) throws Exception {
    String source = "abc";
    TLexer lexer = new TLexer(new ANTLRStringStream(source));
    TParser parser = new TParser(new CommonTokenStream(lexer));
    parser.setTreeAdaptor(new CommonTreeAdaptor(){
      @Override
      public Object create(Token t) {
        return new MyTree(t);
      }
    });
    parser.parse();
  }
}

parse
  :  (ANY {System.out.println($ANY.tree);})+ EOF
  ;

ANY
  :  .
  ;


which, after generating the lexer/parser, compiling all .java files and
running the class with the main method:

$ java -cp antlr-3.2.jar org.antlr.Tool T.g
$ javac -cp antlr-3.2.jar *.java
$ java -cp .:antlr-3.2.jar TParser


 produces:

MyTree=a
MyTree=b
MyTree=c


Regards,

Bart.



On Sun, May 1, 2011 at 2:47 AM, Fernando Sanchez <fernando at rti.com> wrote:

> Hi,
>
> Is there a way to customize the text associated with the nodes of the AST
> tree generated with ANTLRWorks?. I tried to overwrite the toString method in
> my Tree node (inherit from CommonTree) without success.
>
> Regards,
>    Fernando
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jean-sebastien.vachon at wantedtech.com  Thu May  5 13:22:16 2011
From: jean-sebastien.vachon at wantedtech.com (Jean-Sebastien Vachon)
Date: Thu, 5 May 2011 16:22:16 -0400
Subject: [antlr-interest] rewrite empty input string to "*"
Message-ID: <4072ABC603C8D848BAC6B74D4D3E5CD301449DF3177A@MAILBOXCLUSTER.wantedtech.com>

Hi All,

What is the best way to rewrite an empty input?

I mean if my input is "" (empty string) how can I rewrite to "*" ?

The desired behaviour is to search everything (*) if the input is empty.

I thought about upgrading my top rule to be:

query
  : (andExpression+ -> andExpression) EOF
  | (SPACE*) EOF -> STAR
  ;

Where STAR and SPACE are defined as:

STAR  : '*';
SPACE : (' ' | '\t' | '\f')+ {$channel=HIDDEN;};

With this set of rules the output of tree in its text form is "STAR" while I was expecting "*"

What am I doing wrong?

Thanks

From slattery.kim at gmail.com  Thu May  5 23:53:15 2011
From: slattery.kim at gmail.com (Kim Slattery)
Date: Fri, 6 May 2011 01:53:15 -0500
Subject: [antlr-interest] StringTemplate does not work as expected using
 a simple string template group
In-Reply-To: <BANLkTi=VJFME6TdbeU6=-oAv02jHBs1AyQ@mail.gmail.com>
References: <BANLkTinyNG3dwBmh-y2y7U=PyYtqD8J1Lg@mail.gmail.com>
	<BANLkTikjzo664d7oPJzb0uz8zGUBiwYJ2Q@mail.gmail.com>
	<C9AF59E9-E0E8-4502-8AB0-952827AA00B8@cs.usfca.edu>
	<BANLkTi=VJFME6TdbeU6=-oAv02jHBs1AyQ@mail.gmail.com>
Message-ID: <BANLkTikrOFfW5wUEvD+PDXCCojt8X+6L2A@mail.gmail.com>

To follow up, it had to do with the way I was outputting. I read something
in, I believe, the Language Implementation Patterns book and interpreted it
as, when printing the output, you need to call output.getTemplate().
However, that's definitely wrong. Most places, it says to call
output.toString(). My mistake.

Kim

On Thu, Apr 28, 2011 at 1:44 PM, Kim Slattery <slattery.kim at gmail.com>wrote:

> Glaring syntax error in the above--I forgot to change the string template
> for start to <p> from <pack>.  This shouldn't be the problem, but I'll let
> you know if it is.
>
>
> On Thu, Apr 28, 2011 at 12:54 PM, Terence Parr <parrt at cs.usfca.edu> wrote:
>
>> if you get <...>That means that somehow ST is interpreting it using $...$
>> not <...> I think. not sure why that would be.
>> Ter
>> On Apr 28, 2011, at 10:42 AM, Kim Slattery wrote:
>>
>> > Sorry: incomplete thought. Every time, it translates it to simply:
>> >
>> > <pack>
>> >
>> > What am I not getting?
>> >
>> > On Thu, Apr 28, 2011 at 12:41 PM, Kim Slattery <slattery.kim at gmail.com
>> >wrote:
>> >
>> >> I have been trying to parse this and translate it using a .stg file,
>> and it
>> >> does not work.  Every time, it parses  I have no idea what's going on.
>> >> Help!?
>> >>
>> >> Hop.stg:
>> >>
>> >> group Hop;
>> >> start(p) ::= "<pack>"
>> >> package(name) ::= "packagedafdjk <name>"
>> >> qualified_name(name) ::= "<name>"
>> >>
>> >>
>> >> HopSymbolTableWalker.g:
>> >>
>> >> tree grammar HopSymbolTableWalker;
>> >>
>> >> options {
>> >> tokenVocab=Hop;
>> >> ASTLabelType=CommonTree;
>> >> output = template;
>> >> }
>> >> ...
>> >> start
>> >> @after{$st = %start(p={$pack.text});}
>> >> : (pack = package_rule ref = reference+          // -> start(pack={$
>> >> pack.st})
>> >> | ref = reference+ pack = package_rule
>> >> | pack = package_rule                                  // ->
>> start(pack={$
>> >> pack.st})
>> >> | ref = reference+
>> >> | )
>> >> cl = class_declaration  EOF //Declaring a class name
>> >> ;
>> >>
>> >> package_rule
>> >> @after{$st = %package(name={$qn.text});}
>> >> : PACKAGE_NAME qn=qualified_name
>> >> {
>> >> thisPackage = $qn.type;
>> >> }
>> >> ;
>> >>
>> >> qualified_name returns [QualifiedNameDescriptor type]
>> >> @after {$st = %{result};}
>> >> @init {
>> >> String result = "";
>> >> }
>> >> : ^(QUALIFIED_NAME ids+= ID (PERIOD ids+=ID)*)
>> >> {
>> >> QualifiedNameDescriptor t = new QualifiedNameDescriptor();
>> >> t.setLineBegin(((CommonTree)$ids.get(0)).token.getLine());
>> >>
>> >>
>> t.setColumnBegin(((CommonTree)$ids.get(0)).token.getCharPositionInLine());
>> >> /*t.setNameFromList($ids);
>> >> */
>> >> String name = "";
>> >> Iterator it = $ids.iterator();
>> >>
>> >>         while(it.hasNext()) {
>> >>             name += ((CommonTree) it.next()).getText();
>> >>
>> >>             if(it.hasNext()) {
>> >>                 name += $PERIOD.text;
>> >>           }
>> >>
>> >>             }
>> >>             t.setName(name);
>> >>
>> >> result = name;
>> >>
>> >> t.setLineEnd(((CommonTree)$ids.get($ids.size() - 1)).token.getLine());
>> >> t.setColumnEnd(((CommonTree)$ids.get($ids.size() -
>> >> 1)).token.getCharPositionInLine());
>> >> $type = t;
>> >> }                                                                //->
>> >> qualified_name(name={result})
>> >> ;
>> >>
>> >>
>> >>
>> >> Thanks for your ideas.  I'm absolutely stuck.
>> >>
>> >> Kim
>> >>
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From lukuilian at gmail.com  Fri May  6 01:07:37 2011
From: lukuilian at gmail.com (jie lu)
Date: Fri, 6 May 2011 16:07:37 +0800
Subject: [antlr-interest] composite grammar
Message-ID: <BANLkTim6XgN-pHXfdkBdjAVH1y7V0dDazg@mail.gmail.com>

Hi, All,

I write an huge grammar for MySQL about 7000 lines. For generated code can
debug in other project, I split it into 30 grammar files.  And run it on
Linux, set java Xmx=3038M, it is run for 4 hour and did not output result. I
am not sure how long it will last.

Is there any limitation of file numbers to composite grammar file?
Without error information outputting, how much time will grammar running
according to the length of the grammar file?

Thanks.

-- 
Best Regards.
Lu Jie

From ibre5041 at ibrezina.net  Fri May  6 04:09:22 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Fri, 06 May 2011 13:09:22 +0200
Subject: [antlr-interest] composite grammar
In-Reply-To: <BANLkTim6XgN-pHXfdkBdjAVH1y7V0dDazg@mail.gmail.com>
References: <BANLkTim6XgN-pHXfdkBdjAVH1y7V0dDazg@mail.gmail.com>
Message-ID: <20110506130922.nyg77shf3swwwwc0@webmail.kamm.cz>

Quoting jie lu <lukuilian at gmail.com>:

> Hi, All,
>
> I write an huge grammar for MySQL about 7000 lines. For generated code can
> debug in other project, I split it into 30 grammar files.  And run it on
> Linux, set java Xmx=3038M, it is run for 4 hour and did not output result. I
> am not sure how long it will last.
>
> Is there any limitation of file numbers to composite grammar file?
> Without error information outputting, how much time will grammar running
> according to the length of the grammar file?
>

run antlr with -X option, this will show you a list of "advanced" options
and one of them will make antlr prompt the the progress. You'll see
which rule is being prosessed at the moment.

Ivan


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From ibre5041 at ibrezina.net  Fri May  6 08:10:00 2011
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Fri, 06 May 2011 17:10:00 +0200
Subject: [antlr-interest] Memory requirements of C runtime
	when	backtracking
In-Reply-To: <a7c58b6dffff3969366aba7b77c1477c@mail.gmail.com>
References: <20110504142006.v91r23bxcggcss8w@webmail.kamm.cz>
	<a7c58b6dffff3969366aba7b77c1477c@mail.gmail.com>
Message-ID: <20110506171000.qspgtgnbwg00044o@webmail.kamm.cz>

You're right the grammar has very large DFAs. That was the second  
problem I'm facing. In
general Oracle's SQL distinguishes reserved words and keywords.

In order to satisfy backward compatibility many newly added words(keywords)
have special meaning and but also can be used as identifiers.
for example such a query is legal:
Select * from join JOIN join using(join);

The uppercase JOIN is a keyword while other "join"s are identifiers.
In my grammar the rule identifier is defined as
identifier
   : ID //(lexer rule for an identifier)
   | 'A' //(1st keyword)
   | 'AS' //(2dn keyword)
   ...
   | '' // (200th keyword)
   ;

I'm afraid that this is one the reasons why the tables are so huge.
Are there any ways how to deal with something like that?

The previous version of this grammar used gated semantic predicates like:

k_join : { LA(1).gettext() == "JOIN" }? => ID

is that the right way to reduce the size of DFA?

Ivan

Quoting Jim Idle <jimi at temporal-wave.com>:

> You should not be using backtrack=true if you are short on memory, but
> without seeing your grammar I cannot comment on the ram usage. It might be
> that your grammar causes the generation of huge DFA tables. Backtracking
> itself does not cost lots of memory though.
>
> jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Ivan Brezina
>> Sent: Wednesday, May 04, 2011 5:20 AM
>> To: antlr-interest Interest
>> Subject: [antlr-interest] Memory requirements of C runtime when
>> backtracking
>>
>> Hi all
>> doing some unit test of Oracle SQL grammar I'm facing problems with
>> memory requirements when parsing input having many parenthesis.
>>
>> In general the grammar can have three types of statements which can be
>> enclosed in parens.
>>
>> 1. value expression like (A),(1+2).
>> For an sql_expression there is set of rules using numerical operator
>> sql_expression -> expr_add -> expr_mul -> expr_sign -> expr_pow ->
>> expr_paren
>>
>> 2. logical expression like (A > 2) or (A is null) For an condition
>> expression there is a set of rules using locical operator sql_condition
>> -> condition_or -> condition_and -> condition_not -> condition_paren
>>
>> 3. a subquery. It is an sql statement enclosed in parenthesis like
>> (SELECT * FROM dual).
>>
>> These 3 types can by combined in many ways.
>> For example ((SELECT count(1) from dual) > 1)
>>
>> While testing if found queries - probably generated by some evil sick
>> robot - whose require more than 8B of RAM to parse even they are quite
>> short
>>
>> For example:
>> SELECT *
>> FROM TABLE1, TABLE2
>> WHERE
>> (
>>   (
>>    (
>>     (
>>      (
>>       (
>>        (
>>         (
>>          (
>>   	 (
>>   	  (
>>   	   (
>>   	    (
>>   	     (
>>   	      (
>> 	       ( TABLE2.DT = '2' ) OR ( TABLE2.DT = '3' )
>>    	      ) AND ( TABLE2.CODE < 9 )
>>    	     ) AND ( TABLE2.WH = 'XXX' )
>>    	    ) AND ( TABLE1.ID = '0000001' )
>>    	   ) AND ( ( TABLE1.ATTR_1 IS NULL ) OR ( TABLE1._ATTR1 = '*' ) )
>>    	  ) AND ( ( TABLE1.ATTR_2 IS NULL ) OR ( TABLE1._ATTR2 = '*' ) )
>>    	 ) AND ( ( TABLE1.ATTR_3 IS NULL ) OR ( TABLE1._ATTR3 = '*' ) )
>>       	) AND ( ( TABLE1.ATTR_4 IS NULL ) OR ( TABLE1._ATTR4 = '*'
> )
>> )
>>         ) AND ( ( TABLE1.ATTR_5 IS NULL ) OR ( TABLE1._ATTR5 = '*' ) )
>>        ) AND ( ( TABLE2.TYPE IS NULL ) OR ( TABLE2.TYPE = '*' ) )
>>       ) AND ( ( TABLE2.NBR IS NULL ) OR ( TABLE2.NBR = '*' ) )
>>      ) AND ( ( TABLE2.STAT = '01' ) OR ( TABLE2.STAT = '*' ) )
>>     ) AND ( ( TABLE2.ORGN IS NULL ) OR ( TABLE2.ORGN = '*' ) )
>>    ) AND ( TABLE2.NBR = '00000000' )
>>   ) AND ( TABLE2.PO IS NULL )
>> )
>>
>> Both value expression and condition expression rules do backtracking.
>> In the example above every parenthesis nesting doubles memory
>> requirements.
>>
>> Are there any ways how to reduce/monitor memory requirements?
>> What exactly is remembered when backtracking?
>> I tried to add some syntactic predicates into value/conditional
>> expression but it usually led to failure of other tests.
>>
>> thx Ivan
>>
>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging Program.
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OracleSQL.zip
Type: application/zip
Size: 35052 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110506/af4ae21e/attachment.zip 

From philip.moetteli at tele2.ch  Fri May  6 08:19:06 2011
From: philip.moetteli at tele2.ch (=?iso-8859-1?Q?Philip_M=F6tteli?=)
Date: Fri, 06 May 2011 17:19:06 +0200
Subject: [antlr-interest] Multiple Occurrence Read Out
Message-ID: <CC249A98-2C1B-48F0-831B-5B4360CF534A@tele2.ch>

Hi,


I have a parser rule, that parses a kind of a property list:

	keysAndValues	:	('"' key '"' value)*
						{	// Some code to read the key(s) and value(s) out.
							// Is this part called for every occurrence of "*" or only once at the end?
						}
					;


I would like to add every key and its property to a dictionary in my program. How can I read those values out?


Thanks


From bkiers at gmail.com  Fri May  6 08:40:38 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 6 May 2011 17:40:38 +0200
Subject: [antlr-interest] Multiple Occurrence Read Out
In-Reply-To: <CC249A98-2C1B-48F0-831B-5B4360CF534A@tele2.ch>
References: <CC249A98-2C1B-48F0-831B-5B4360CF534A@tele2.ch>
Message-ID: <BANLkTimS71J0enGMJS5SLeBR-u2kV26cYg@mail.gmail.com>

Only at the end. You need to place the code-block *inside* the parenthesis
like this:

keysAndValues
  :  ('"' key '"' value
       {
         // Some code to read the key(s) and value(s) out.
         System.out.println("key=" + $key.text + ", value=" + $value.text);
       }
     )*
  ;


Regards,

Bart.


On Fri, May 6, 2011 at 5:19 PM, Philip M?tteli <philip.moetteli at tele2.ch>wrote:

> Hi,
>
>
> I have a parser rule, that parses a kind of a property list:
>
>        keysAndValues   :       ('"' key '"' value)*
>                                                {       // Some code to read
> the key(s) and value(s) out.
>                                                        // Is this part
> called for every occurrence of "*" or only once at the end?
>                                                }
>                                        ;
>
>
> I would like to add every key and its property to a dictionary in my
> program. How can I read those values out?
>
>
> Thanks
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri May  6 11:33:52 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 6 May 2011 11:33:52 -0700
Subject: [antlr-interest] Memory requirements of C runtime when
	backtracking
In-Reply-To: <20110506171000.qspgtgnbwg00044o@webmail.kamm.cz>
References: <20110504142006.v91r23bxcggcss8w@webmail.kamm.cz>
	<a7c58b6dffff3969366aba7b77c1477c@mail.gmail.com>
	<20110506171000.qspgtgnbwg00044o@webmail.kamm.cz>
Message-ID: <3118c4ff9ef3356705c3082219b7cbd5@mail.gmail.com>

I do it like this:


id
	: ID
	| keyword { set token type to id }
;

keyword
 : list them all in order and declare them all together in the lexer
;

But there is no way around the stupidity of SQL I am afraid. Don't put the
keywords in as 'WORD' as then they will not be declared in a contiguous
block and you will have problems identifying them in the error messages.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ivan Brezina
> Sent: Friday, May 06, 2011 8:10 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Memory requirements of C runtime when
> backtracking
>
> You're right the grammar has very large DFAs. That was the second
> problem I'm facing. In general Oracle's SQL distinguishes reserved
> words and keywords.
>
> In order to satisfy backward compatibility many newly added
> words(keywords) have special meaning and but also can be used as
> identifiers.
> for example such a query is legal:
> Select * from join JOIN join using(join);
>
> The uppercase JOIN is a keyword while other "join"s are identifiers.
> In my grammar the rule identifier is defined as identifier
>    : ID //(lexer rule for an identifier)
>    | 'A' //(1st keyword)
>    | 'AS' //(2dn keyword)
>    ...
>    | '' // (200th keyword)
>    ;
>
> I'm afraid that this is one the reasons why the tables are so huge.
> Are there any ways how to deal with something like that?
>
> The previous version of this grammar used gated semantic predicates
> like:
>
> k_join : { LA(1).gettext() == "JOIN" }? => ID
>
> is that the right way to reduce the size of DFA?
>
> Ivan
>
> Quoting Jim Idle <jimi at temporal-wave.com>:
>
> > You should not be using backtrack=true if you are short on memory,
> but
> > without seeing your grammar I cannot comment on the ram usage. It
> > might be that your grammar causes the generation of huge DFA tables.
> > Backtracking itself does not cost lots of memory though.
> >
> > jim
> >
> >> -----Original Message-----
> >> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> >> bounces at antlr.org] On Behalf Of Ivan Brezina
> >> Sent: Wednesday, May 04, 2011 5:20 AM
> >> To: antlr-interest Interest
> >> Subject: [antlr-interest] Memory requirements of C runtime when
> >> backtracking
> >>
> >> Hi all
> >> doing some unit test of Oracle SQL grammar I'm facing problems with
> >> memory requirements when parsing input having many parenthesis.
> >>
> >> In general the grammar can have three types of statements which can
> >> be enclosed in parens.
> >>
> >> 1. value expression like (A),(1+2).
> >> For an sql_expression there is set of rules using numerical operator
> >> sql_expression -> expr_add -> expr_mul -> expr_sign -> expr_pow ->
> >> expr_paren
> >>
> >> 2. logical expression like (A > 2) or (A is null) For an condition
> >> expression there is a set of rules using locical operator
> >> sql_condition
> >> -> condition_or -> condition_and -> condition_not -> condition_paren
> >>
> >> 3. a subquery. It is an sql statement enclosed in parenthesis like
> >> (SELECT * FROM dual).
> >>
> >> These 3 types can by combined in many ways.
> >> For example ((SELECT count(1) from dual) > 1)
> >>
> >> While testing if found queries - probably generated by some evil
> sick
> >> robot - whose require more than 8B of RAM to parse even they are
> >> quite short
> >>
> >> For example:
> >> SELECT *
> >> FROM TABLE1, TABLE2
> >> WHERE
> >> (
> >>   (
> >>    (
> >>     (
> >>      (
> >>       (
> >>        (
> >>         (
> >>          (
> >>   	 (
> >>   	  (
> >>   	   (
> >>   	    (
> >>   	     (
> >>   	      (
> >> 	       ( TABLE2.DT = '2' ) OR ( TABLE2.DT = '3' )
> >>    	      ) AND ( TABLE2.CODE < 9 )
> >>    	     ) AND ( TABLE2.WH = 'XXX' )
> >>    	    ) AND ( TABLE1.ID = '0000001' )
> >>    	   ) AND ( ( TABLE1.ATTR_1 IS NULL ) OR ( TABLE1._ATTR1 =
'*'
> ) )
> >>    	  ) AND ( ( TABLE1.ATTR_2 IS NULL ) OR ( TABLE1._ATTR2 =
'*'
> ) )
> >>    	 ) AND ( ( TABLE1.ATTR_3 IS NULL ) OR ( TABLE1._ATTR3 =
'*' )
> )
> >>       	) AND ( ( TABLE1.ATTR_4 IS NULL ) OR ( TABLE1._ATTR4 = '*'
> > )
> >> )
> >>         ) AND ( ( TABLE1.ATTR_5 IS NULL ) OR ( TABLE1._ATTR5 = '*' )
> )
> >>        ) AND ( ( TABLE2.TYPE IS NULL ) OR ( TABLE2.TYPE = '*' ) )
> >>       ) AND ( ( TABLE2.NBR IS NULL ) OR ( TABLE2.NBR = '*' ) )
> >>      ) AND ( ( TABLE2.STAT = '01' ) OR ( TABLE2.STAT = '*' ) )
> >>     ) AND ( ( TABLE2.ORGN IS NULL ) OR ( TABLE2.ORGN = '*' ) )
> >>    ) AND ( TABLE2.NBR = '00000000' )
> >>   ) AND ( TABLE2.PO IS NULL )
> >> )
> >>
> >> Both value expression and condition expression rules do
> backtracking.
> >> In the example above every parenthesis nesting doubles memory
> >> requirements.
> >>
> >> Are there any ways how to reduce/monitor memory requirements?
> >> What exactly is remembered when backtracking?
> >> I tried to add some syntactic predicates into value/conditional
> >> expression but it usually led to failure of other tests.
> >>
> >> thx Ivan
> >>
> >>
> >>
> >>
> >> ----------------------------------------------------------------
> >> This message was sent using IMP, the Internet Messaging Program.
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-
> >> email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.

From philip.moetteli at tele2.ch  Fri May  6 11:41:45 2011
From: philip.moetteli at tele2.ch (=?iso-8859-1?Q?Philip_M=F6tteli?=)
Date: Fri, 06 May 2011 20:41:45 +0200
Subject: [antlr-interest] Multiple Occurrence Read Out
In-Reply-To: <BANLkTimS71J0enGMJS5SLeBR-u2kV26cYg@mail.gmail.com>
References: <CC249A98-2C1B-48F0-831B-5B4360CF534A@tele2.ch>
	<BANLkTimS71J0enGMJS5SLeBR-u2kV26cYg@mail.gmail.com>
Message-ID: <95423CD3-A4E5-455C-8B97-A6BA8D9878FE@tele2.ch>

Am 06.05.2011 um 17:40 schrieb Bart Kiers:

> Only at the end. You need to place the code-block inside the parenthesis like this:
> 
> keysAndValues
>   :  ('"' key '"' value
>        {
>          // Some code to read the key(s) and value(s) out.
>          System.out.println("key=" + $key.text + ", value=" + $value.text);
>        }
>      )*
>   ;

Ah, cool, thanks.



From 12toba at gmail.com  Sat May  7 04:17:14 2011
From: 12toba at gmail.com (Balint Torok)
Date: Sat, 7 May 2011 13:17:14 +0200
Subject: [antlr-interest] Calculating valid tokens for content assist
Message-ID: <BANLkTi=WLHNTgwZbxH-7Chi0fZHLDN_LUQ@mail.gmail.com>

Hello!

I have a project in Eclipse where I have an editor for a custom
language. I am using ANTLR to generate the compiler for it. What I
need is to add content assist to the editor.

The input is a source code in the custom language, and the position of
the character where the user requested content assist. The source code
is most of time incomplete as the user can ask for content assist any
time. What I need is to calculate the list of possible tokens that are
valid for the given position.

It is possible to write a custom code to do the calculation, but that
code would have to be manually kept in sync with the grammar. I
figured the parser is doing something similar. It has to be able to
determine at a given context what are the acceptable tokens. Is it
possible to "reuse" that? What is the best practice in creating
content assist anyway?

From lars.vonwedel at gmail.com  Sat May  7 06:15:37 2011
From: lars.vonwedel at gmail.com (Lars von Wedel)
Date: Sat, 7 May 2011 15:15:37 +0200
Subject: [antlr-interest] Calculating valid tokens for content assist
In-Reply-To: <BANLkTi=WLHNTgwZbxH-7Chi0fZHLDN_LUQ@mail.gmail.com>
References: <BANLkTi=WLHNTgwZbxH-7Chi0fZHLDN_LUQ@mail.gmail.com>
Message-ID: <AFD2CBA4-502F-424E-9D70-AF472E32311E@gmail.com>

Did you have a look at Xtext ? It does what you want and uses Antlr under the hood. Therefore, converting your existing grammar might be feasible.

Lars


Am 07.05.2011 um 13:17 schrieb Balint Torok <12toba at gmail.com>:

> Hello!
> 
> I have a project in Eclipse where I have an editor for a custom
> language. I am using ANTLR to generate the compiler for it. What I
> need is to add content assist to the editor.
> 
> The input is a source code in the custom language, and the position of
> the character where the user requested content assist. The source code
> is most of time incomplete as the user can ask for content assist any
> time. What I need is to calculate the list of possible tokens that are
> valid for the given position.
> 
> It is possible to write a custom code to do the calculation, but that
> code would have to be manually kept in sync with the grammar. I
> figured the parser is doing something similar. It has to be able to
> determine at a given context what are the acceptable tokens. Is it
> possible to "reuse" that? What is the best practice in creating
> content assist anyway?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From toddobryan at gmail.com  Sat May  7 06:56:43 2011
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sat, 7 May 2011 09:56:43 -0400
Subject: [antlr-interest] Lexer too quick to grab a token?
In-Reply-To: <BANLkTiknOYVk7jDDrkaKN7DEWGoXnVNQzw@mail.gmail.com>
References: <BANLkTinJaGVG1=tfd2d3ydhzJQhytOT-9A@mail.gmail.com>
	<BANLkTikFtMMfB46ZERCwRWQChqG0tnPkhA@mail.gmail.com>
	<BANLkTiknOYVk7jDDrkaKN7DEWGoXnVNQzw@mail.gmail.com>
Message-ID: <BANLkTikMKmk_20qfdVSLcuL0e8+DcB4_kw@mail.gmail.com>

Thank you! That's exactly what I needed to figure out how to do, and
the extra code to override emit() and nextToken() were godsends.

On Mon, May 2, 2011 at 8:50 AM, Bart Kiers <bkiers at gmail.com> wrote:
> On Mon, May 2, 2011 at 1:19 AM, Todd O'Bryan <toddobryan at gmail.com> wrote:
>
>> ...
>>
>>
>> Does this make any sense? Is there some way to deal with it?
>> ?...
>
>
> You could let '/]]' be matched in the 'R_TAG' rule and emit another token as
> per the instructions described here:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=3604497
>
> A demo:
>
> lexer grammar TLexer;
>
> @members {
>
> ?List<Token> tokens = new ArrayList<Token>();
>
> ?private void emit(String text, int type) {
> ? ?Token token = new CommonToken(type, text);
> ? ?token.setType(type);
> ? ?emit(token);
> ?}
>
> ?@Override
> ?public void emit(Token token) {
> ? ?state.token = token;
> ? ?tokens.add(token);
> ?}
>
> ?@Override
> ?public Token nextToken() {
> ? ?super.nextToken();
> ? ?if(tokens.size() == 0) {
> ? ? ?return Token.EOF_TOKEN;
> ? ?}
> ? ?return (Token)tokens.remove(0);
> ?}
> }
>
> L_TAG
> ?: ?'[/'
> ?;
>
> R_TAG
> ?: ?'/]]' {emit("/", ANY); emit("]]", R_BRACKET);}
> ?| ?'/]'
> ?;
>
> L_BRACKET
> ?: ?'[['
> ?;
>
> R_BRACKET
> ?: ?']]'
> ?;
>
> SPACE
> ?: ?(' ' | '\t' | '\r' | '\n') {skip();}
> ?;
>
> ANY
> ?: ?.
> ?;
>
> which can be tested with the class:
>
> import org.antlr.runtime.*;
>
> public class Main {
> ?public static void main(String[] args) throws Exception {
> ? ?String source = "[/ foo /] [[/ bar /]]";
> ? ?ANTLRStringStream in = new ANTLRStringStream(source);
> ? ?TLexer lexer = new TLexer(in);
> ? ?CommonTokenStream tokens = new CommonTokenStream(lexer);
> ? ?for(Object o : tokens.getTokens()) {
> ? ? ?Token t = (Token)o;
> ? ? ?System.out.println("text=" + t.getText() + ", type=" + t.getType());
> ? ?}
> ?}
> }
>
>
> Regards,
>
> Bart.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From toddobryan at gmail.com  Sat May  7 07:06:05 2011
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sat, 7 May 2011 10:06:05 -0400
Subject: [antlr-interest] Doesn't the lexer try rules in order?
Message-ID: <BANLkTikVhNk0b2SqGUBzJxB5+_1jPSvZzQ@mail.gmail.com>

Can anyone explain to me why tabs, spaces, and greater-thans at the
beginning of lines are ending up in TEXT tokens, rather than in INDENT
or QUOTE tokens, as I think they should?

fragment SPECIAL_CHARS
	: ('\n' | '[' | ']' | '*' | '/' |'=' | '^' | '_' | '8' | '@' | '#' |
'$' | '!' | '(' | ')' | '{' | '}' );

INDENT 	: { getCharPositionInLine() == 0 }?=> (' '|'\t')+;
QUOTE	: { getCharPositionInLine() == 0 }?=> '>';
TEXT	: (~SPECIAL_CHARS)+;

This is in a lexer grammar and I've omitted some other rules that
shouldn't (I don't think) have any bearing on this question.

Todd

From jbb at acm.org  Sat May  7 09:12:59 2011
From: jbb at acm.org (John B. Brodie)
Date: Sat, 07 May 2011 12:12:59 -0400
Subject: [antlr-interest] Doesn't the lexer try rules in order?
In-Reply-To: <BANLkTikVhNk0b2SqGUBzJxB5+_1jPSvZzQ@mail.gmail.com>
References: <BANLkTikVhNk0b2SqGUBzJxB5+_1jPSvZzQ@mail.gmail.com>
Message-ID: <1304784779.18533.10.camel@gecko>

Greetings!

On Sat, 2011-05-07 at 10:06 -0400, Todd O'Bryan wrote:
> Can anyone explain to me why tabs, spaces, and greater-thans at the
> beginning of lines are ending up in TEXT tokens, rather than in INDENT
> or QUOTE tokens, as I think they should?
> 
> fragment SPECIAL_CHARS
> 	: ('\n' | '[' | ']' | '*' | '/' |'=' | '^' | '_' | '8' | '@' | '#' |
> '$' | '!' | '(' | ')' | '{' | '}' );
> 
> INDENT 	: { getCharPositionInLine() == 0 }?=> (' '|'\t')+;
> QUOTE	: { getCharPositionInLine() == 0 }?=> '>';
> TEXT	: (~SPECIAL_CHARS)+;
> 
> This is in a lexer grammar and I've omitted some other rules that
> shouldn't (I don't think) have any bearing on this question.

Currently ANTLR lexers greedily consume the longest possible sequence of
acceptable characters for each token.

So I think that when the characters that follow the '>' match TEXT e.g.
are not one of the SPECIAL_CHARS then the entire sequence is matched as
TEXT. and the same drill for the INDENT token.

You can verify this by simply trying input such as ">$" or " $" -- each
on a line by itself. I would think you would then get either a QUOTE or
INDENT followed by whatever token matches a $. (Note, this may not parse
correctly but you should still see the 2 token sequence...)

Hope this helps...
   -jbb



From toddobryan at gmail.com  Sat May  7 09:20:46 2011
From: toddobryan at gmail.com (Todd O'Bryan)
Date: Sat, 7 May 2011 12:20:46 -0400
Subject: [antlr-interest] Doesn't the lexer try rules in order?
In-Reply-To: <1304784779.18533.10.camel@gecko>
References: <BANLkTikVhNk0b2SqGUBzJxB5+_1jPSvZzQ@mail.gmail.com>
	<1304784779.18533.10.camel@gecko>
Message-ID: <BANLkTinmCprh7kfsc0742vWkVfAqVFDQmA@mail.gmail.com>

Ah. I thought they did first match, not longest...

On Sat, May 7, 2011 at 12:12 PM, John B. Brodie <jbb at acm.org> wrote:
> Greetings!
>
> On Sat, 2011-05-07 at 10:06 -0400, Todd O'Bryan wrote:
>> Can anyone explain to me why tabs, spaces, and greater-thans at the
>> beginning of lines are ending up in TEXT tokens, rather than in INDENT
>> or QUOTE tokens, as I think they should?
>>
>> fragment SPECIAL_CHARS
>> ? ? ? : ('\n' | '[' | ']' | '*' | '/' |'=' | '^' | '_' | '8' | '@' | '#' |
>> '$' | '!' | '(' | ')' | '{' | '}' );
>>
>> INDENT ? ? ? ?: { getCharPositionInLine() == 0 }?=> (' '|'\t')+;
>> QUOTE : { getCharPositionInLine() == 0 }?=> '>';
>> TEXT ?: (~SPECIAL_CHARS)+;
>>
>> This is in a lexer grammar and I've omitted some other rules that
>> shouldn't (I don't think) have any bearing on this question.
>
> Currently ANTLR lexers greedily consume the longest possible sequence of
> acceptable characters for each token.
>
> So I think that when the characters that follow the '>' match TEXT e.g.
> are not one of the SPECIAL_CHARS then the entire sequence is matched as
> TEXT. and the same drill for the INDENT token.
>
> You can verify this by simply trying input such as ">$" or " $" -- each
> on a line by itself. I would think you would then get either a QUOTE or
> INDENT followed by whatever token matches a $. (Note, this may not parse
> correctly but you should still see the 2 token sequence...)
>
> Hope this helps...
> ? -jbb
>
>
>

From 12toba at gmail.com  Sat May  7 14:51:44 2011
From: 12toba at gmail.com (Balint Torok)
Date: Sat, 7 May 2011 23:51:44 +0200
Subject: [antlr-interest] Calculating valid tokens for content assist
In-Reply-To: <AFD2CBA4-502F-424E-9D70-AF472E32311E@gmail.com>
References: <BANLkTi=WLHNTgwZbxH-7Chi0fZHLDN_LUQ@mail.gmail.com>
	<AFD2CBA4-502F-424E-9D70-AF472E32311E@gmail.com>
Message-ID: <BANLkTimxMfGkSDN4Fovr6i=OuPDuS1ziRA@mail.gmail.com>

Yes I saw Xtext. It is a fabulous thing. Really it is. Unfortunately
it didn't suite our purpose. Xtext generates a full blown Eclipse
editor, but what we needed is only an editor-like widget that we can
put into an Eclipse view and on a wizard. Also we don't use EMF while
Xtext is built around it.
Your question is very much valid, what we need is much like what Xtext
generates. But for the reasons above we had to roll our own solution
and it turned out to be quite OK, except for the content assist. That
is where we need some advice.

Thanks,
Balint

On Sat, May 7, 2011 at 3:15 PM, Lars von Wedel <lars.vonwedel at gmail.com> wrote:
> Did you have a look at Xtext ? It does what you want and uses Antlr under the hood. Therefore, converting your existing grammar might be feasible.
>
> Lars
>
>
> Am 07.05.2011 um 13:17 schrieb Balint Torok <12toba at gmail.com>:
>
>> Hello!
>>
>> I have a project in Eclipse where I have an editor for a custom
>> language. I am using ANTLR to generate the compiler for it. What I
>> need is to add content assist to the editor.
>>
>> The input is a source code in the custom language, and the position of
>> the character where the user requested content assist. The source code
>> is most of time incomplete as the user can ask for content assist any
>> time. What I need is to calculate the list of possible tokens that are
>> valid for the given position.
>>
>> It is possible to write a custom code to do the calculation, but that
>> code would have to be manually kept in sync with the grammar. I
>> figured the parser is doing something similar. It has to be able to
>> determine at a given context what are the acceptable tokens. Is it
>> possible to "reuse" that? What is the best practice in creating
>> content assist anyway?
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ben.corne at gmail.com  Mon May  9 05:16:24 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Mon, 9 May 2011 14:16:24 +0200
Subject: [antlr-interest] Source code level of ANTLRWorks
In-Reply-To: <2c6b5bfced9f920c274e3c890886c6a8@mail.gmail.com>
References: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>
	<3d006b9f5dcc5ff3275ec1a407749fb5@mail.gmail.com>
	<BANLkTik0JaN0F_mLJxs_Mtjf-dD81vSA8Q@mail.gmail.com>
	<2c6b5bfced9f920c274e3c890886c6a8@mail.gmail.com>
Message-ID: <BANLkTimkGQEWpanZ1MkyLWnRu4RPot+qXw@mail.gmail.com>

The path field expects a directory where it can find the javac binary in.

Adding flags behind the directory also fails:
The debugger fails to initialize and leaves some process running in the
background requiring me to kill the process before I can try to run the
debugger again.

Any more thoughts?
Ben

2011/5/5 Jim Idle <jimi at temporal-wave.com>

> Have you tried adding it in with the PATH? Also you can use -source 1.6
> -target jsr14 and use 1.6 input and 1.4 output.
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Ben Corne
> > Sent: Thursday, May 05, 2011 4:58 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Source code level of ANTLRWorks
> >
> > Here's a screenshot of my antlrworks preferences page + javac info
> > http://igor.rave.org/antlrjavac.png
> >
> > I don't see the option where to adjust the commandline call.
> > And from what I think to understand from the helppage of my javac, it
> > says
> > 1.4 is the default, but I don't find a way to change this default,
> > except by writing a wrapper shell script that attaches -source 1.5
> > (which is what I will do now, until more clues are given)
> >
> > Ben
> >
> > 2011/5/4 Jim Idle <jimi at temporal-wave.com>
> >
> > > That just means you are calling a compiler that has a default level
> > > less than 1.5. So, chance the javacc command in the preferences or
> > > remove the old compiler and install 1.6, or makes sure that 1.6 is
> > the
> > > first on the command line. ANTLR works does not influence the Java
> > > compiler - it only calls the one that you tell it to.
> > >
> > > Jim
> > >
> > >
> > >
> > > > -----Original Message-----
> > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > bounces at antlr.org] On Behalf Of Ben Corne
> > > > Sent: Wednesday, May 04, 2011 6:56 AM
> > > > To: antlr-interest at antlr.org
> > > > Subject: [antlr-interest] Source code level of ANTLRWorks
> > > >
> > > > Hi
> > > >
> > > > Is there a way to set the source code level of antlrworks?
> > > > I've checked the preferences pane and launchers with no avail.
> > > >
> > > > I need to set it to > 1.5, since I'm using Java Generics:
> > > >
> > > > [15:47:58] 102. ERROR in
> > > > /home/bcorne/Downloads/at2-parser-
> > 3/grammar/output/ATGrammar3Lexer.j
> > > > ava (at line 114) [15:47:58] Stack<String> paraphrase = new
> > > > Stack<String>();
> > > > [15:47:58]                                      ^^^^^^
> > > > [15:47:58] Syntax error, parameterized types are only available if
> > > > source level is 1.5
> > > >
> > > > Regards
> > > > Ben Corne
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe:
> > > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > > email-address
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From hrennau at yahoo.de  Mon May  9 06:10:05 2011
From: hrennau at yahoo.de (Hans-Juergen Rennau)
Date: Mon, 9 May 2011 14:10:05 +0100 (BST)
Subject: [antlr-interest] Translating expressions - advice?
Message-ID: <545550.60899.qm@web27107.mail.ukl.yahoo.com>

Hello People,

being an ANTLR beginner, I would very much appreciate advice concerning good 
practise for a rather simple task. The task is the translation of a JPQL's (Java 
Persistence Query Language) "where clause" into a proprietary query language. 
The clause has the well-known expression structure: operands conncected by three 
operators: OR, AND and NOT, where precedence increases in that order. Example:
   a.x='1' AND (a.y='2' OR b.z='3') AND a.v like 'abc%'

An important point is that the translation result will have a similar structure, 
that is, it will also be operands connected by those operators. Example:
   x='1' AND (y='2' OR z='3') AND v='123*'

For this reason I am not sure if the "classical" approach for dealing with 
left-associative operators, as shown in the "Definitve ANTLR Reference" (3. A 
quick tour...) is the most appropriate one in this case. I mean rules like:
   conditional_term ('OR'^ conditional_term)*
   conditional_factor ('AND'^ conditional_factor)*

This creates deep trees, where each operator creates a new level. That is fine 
for processing the operations. But a straightforward translation of the tree 
into a similar sequence of operands and operators yields a result which is 
correct but can be ugly, due to superflous brackets, example:
   (a OR (b OR (c AND d)))

One possibility is to process the tree, removing superfluous brackets - perhaps 
by passing the "context operator" into the rule as a parameter, so that the rule 
can decide if to create brackets or not. This should not be too difficult, but 
my question is: is there a good practise for accomplishing the task? Would you 
recommend the approach just sketched, or a different tree representation to 
start with?

(A tree I do want because there are other parts to be translated, not only the 
where clause, and a tree seems to me the way to deal with (possibly yet growing) 
complexity.

Thank you very much for any suggestions.

-- Hans-Juergen


From bkiers at gmail.com  Mon May  9 07:10:46 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 9 May 2011 16:10:46 +0200
Subject: [antlr-interest] Translating expressions - advice?
In-Reply-To: <545550.60899.qm@web27107.mail.ukl.yahoo.com>
References: <545550.60899.qm@web27107.mail.ukl.yahoo.com>
Message-ID: <BANLkTikk6oTow940_2a7BVP_xJte4TR_Cw@mail.gmail.com>

I get the impression you think that when creating AST's, ANTLR inserts
parenthesis (brackets). This is not the case: I guess what you're seeing is
just the tree's `toStringTree()` that displays these parenthesis to make the
hierarchy of the tree apparent.
Or am I misinterpreting your question?

Regards,

Bart.



On Mon, May 9, 2011 at 3:10 PM, Hans-Juergen Rennau <hrennau at yahoo.de>wrote:

> Hello People,
>
> being an ANTLR beginner, I would very much appreciate advice concerning
> good
> practise for a rather simple task. The task is the translation of a JPQL's
> (Java
> Persistence Query Language) "where clause" into a proprietary query
> language.
> The clause has the well-known expression structure: operands conncected by
> three
> operators: OR, AND and NOT, where precedence increases in that order.
> Example:
>   a.x='1' AND (a.y='2' OR b.z='3') AND a.v like 'abc%'
>
> An important point is that the translation result will have a similar
> structure,
> that is, it will also be operands connected by those operators. Example:
>   x='1' AND (y='2' OR z='3') AND v='123*'
>
> For this reason I am not sure if the "classical" approach for dealing with
> left-associative operators, as shown in the "Definitve ANTLR Reference" (3.
> A
> quick tour...) is the most appropriate one in this case. I mean rules like:
>   conditional_term ('OR'^ conditional_term)*
>   conditional_factor ('AND'^ conditional_factor)*
>
> This creates deep trees, where each operator creates a new level. That is
> fine
> for processing the operations. But a straightforward translation of the
> tree
> into a similar sequence of operands and operators yields a result which is
> correct but can be ugly, due to superflous brackets, example:
>   (a OR (b OR (c AND d)))
>
> One possibility is to process the tree, removing superfluous brackets -
> perhaps
> by passing the "context operator" into the rule as a parameter, so that the
> rule
> can decide if to create brackets or not. This should not be too difficult,
> but
> my question is: is there a good practise for accomplishing the task? Would
> you
> recommend the approach just sketched, or a different tree representation to
> start with?
>
> (A tree I do want because there are other parts to be translated, not only
> the
> where clause, and a tree seems to me the way to deal with (possibly yet
> growing)
> complexity.
>
> Thank you very much for any suggestions.
>
> -- Hans-Juergen
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Mon May  9 07:16:53 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 9 May 2011 16:16:53 +0200
Subject: [antlr-interest] Translating expressions - advice?
In-Reply-To: <BANLkTikk6oTow940_2a7BVP_xJte4TR_Cw@mail.gmail.com>
References: <545550.60899.qm@web27107.mail.ukl.yahoo.com>
	<BANLkTikk6oTow940_2a7BVP_xJte4TR_Cw@mail.gmail.com>
Message-ID: <BANLkTingip5RNc4=KQn2GyS+2rzO3CdYzw@mail.gmail.com>

Wait I think I misunderstood. Your example `(a OR (b OR (c AND d)))` is just
an example expression, right?
In that case, yes, these parenthesis are part of the token stream, but if
you apply rewrite rules (or AST operators `^` and `!`) properly, these
parenthesis are easily removed from your parse tree.

See: http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
or:
http://stackoverflow.com/questions/4931346/how-to-output-the-ast-built-using-antlr

Regards,

Bart.

On Mon, May 9, 2011 at 4:10 PM, Bart Kiers <bkiers at gmail.com> wrote:

> I get the impression you think that when creating AST's, ANTLR inserts
> parenthesis (brackets). This is not the case: I guess what you're seeing is
> just the tree's `toStringTree()` that displays these parenthesis to make the
> hierarchy of the tree apparent.
> Or am I misinterpreting your question?
>
> Regards,
>
> Bart.
>
>
>
>
> On Mon, May 9, 2011 at 3:10 PM, Hans-Juergen Rennau <hrennau at yahoo.de>wrote:
>
>> Hello People,
>>
>> being an ANTLR beginner, I would very much appreciate advice concerning
>> good
>> practise for a rather simple task. The task is the translation of a JPQL's
>> (Java
>> Persistence Query Language) "where clause" into a proprietary query
>> language.
>> The clause has the well-known expression structure: operands conncected by
>> three
>> operators: OR, AND and NOT, where precedence increases in that order.
>> Example:
>>   a.x='1' AND (a.y='2' OR b.z='3') AND a.v like 'abc%'
>>
>> An important point is that the translation result will have a similar
>> structure,
>> that is, it will also be operands connected by those operators. Example:
>>   x='1' AND (y='2' OR z='3') AND v='123*'
>>
>> For this reason I am not sure if the "classical" approach for dealing with
>> left-associative operators, as shown in the "Definitve ANTLR Reference"
>> (3. A
>> quick tour...) is the most appropriate one in this case. I mean rules
>> like:
>>   conditional_term ('OR'^ conditional_term)*
>>   conditional_factor ('AND'^ conditional_factor)*
>>
>> This creates deep trees, where each operator creates a new level. That is
>> fine
>> for processing the operations. But a straightforward translation of the
>> tree
>> into a similar sequence of operands and operators yields a result which is
>> correct but can be ugly, due to superflous brackets, example:
>>   (a OR (b OR (c AND d)))
>>
>> One possibility is to process the tree, removing superfluous brackets -
>> perhaps
>> by passing the "context operator" into the rule as a parameter, so that
>> the rule
>> can decide if to create brackets or not. This should not be too difficult,
>> but
>> my question is: is there a good practise for accomplishing the task? Would
>> you
>> recommend the approach just sketched, or a different tree representation
>> to
>> start with?
>>
>> (A tree I do want because there are other parts to be translated, not only
>> the
>> where clause, and a tree seems to me the way to deal with (possibly yet
>> growing)
>> complexity.
>>
>> Thank you very much for any suggestions.
>>
>> -- Hans-Juergen
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From hrennau at yahoo.de  Mon May  9 08:16:25 2011
From: hrennau at yahoo.de (Hans-Juergen Rennau)
Date: Mon, 9 May 2011 16:16:25 +0100 (BST)
Subject: [antlr-interest] Translating expressions - advice?
In-Reply-To: <BANLkTingip5RNc4=KQn2GyS+2rzO3CdYzw@mail.gmail.com>
References: <545550.60899.qm@web27107.mail.ukl.yahoo.com>
	<BANLkTikk6oTow940_2a7BVP_xJte4TR_Cw@mail.gmail.com>
	<BANLkTingip5RNc4=KQn2GyS+2rzO3CdYzw@mail.gmail.com>
Message-ID: <312783.76055.qm@web27101.mail.ukl.yahoo.com>

Hi Bart, thank you for considering my question! Indeed, what I wrote was perhaps 
misleading. Giving the example
   (((a OR b) OR c) AND d)

I meant the result of translating the AST into text in a "canonical way", that 
is, writing this concatenation: 

formula "R"       
   : ^(operator ldefOperand rightOperand) => this string: openBracket + 
leftOperand + closeBracket + operator + openBracket + rightOperand + 
closeBracket

I suppose a deep tree created as sketched in the previous posting, that is, by 
the scheme
   : operand (operator^ operand)*

can be safely translated by applying the rule given above ("R") recursively. So 
far, so good. But the brackets are superfluous unless the current operator has a 
lower precedence than the operator in the "context", the tree level of which the 
present operand is a child. For example, this input
   A + B + C + D + E + F

generates
(((((A + B) + C) + D) + E + F)

So my question amounts to: is it a good idea to accomplish the translation in 
these steps:
a) build the AST in the standard way (meant for operation execution), creating a 
deep tree with one inner node per operator
b) serialize it using an adapted form of "R", which uses or omits the brackets 
dependent on a rule parameter providing the context operator

? Or should one build the AST differently, namely, making the top-level operands 
of an operator the children of the operator, like:
^('+' A B C D E F)

Thank you, and kind regards
-- Hans-Juergen




________________________________
Von: Bart Kiers <bkiers at gmail.com>
An: Hans-Juergen Rennau <hrennau at yahoo.de>
CC: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
Gesendet: Montag, den 9. Mai 2011, 16:16:53 Uhr
Betreff: Re: [antlr-interest] Translating expressions - advice?

Wait I think I misunderstood. Your example `(a OR (b OR (c AND d)))` is just an 
example expression, right?
In that case, yes, these parenthesis are part of the token stream, but if you 
apply rewrite rules (or AST operators `^` and `!`) properly, these parenthesis 
are easily removed from your parse tree.

See: http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
or: http://stackoverflow.com/questions/4931346/how-to-output-the-ast-built-using-antlr


Regards,

Bart.


On Mon, May 9, 2011 at 4:10 PM, Bart Kiers <bkiers at gmail.com> wrote:

I get the impression you think that when creating AST's, ANTLR inserts 
parenthesis (brackets). This is not the case: I guess what you're seeing is just 
the tree's `toStringTree()` that displays these parenthesis to make the 
hierarchy of the tree apparent.
>Or am I misinterpreting your question?
>
>
>Regards,
>
>
>Bart.
>
>

From jimi at temporal-wave.com  Mon May  9 10:29:41 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 9 May 2011 10:29:41 -0700
Subject: [antlr-interest] Source code level of ANTLRWorks
In-Reply-To: <BANLkTimkGQEWpanZ1MkyLWnRu4RPot+qXw@mail.gmail.com>
References: <BANLkTik_KqoG3zUEGu-m9NTxpL4kcNJk6A@mail.gmail.com>
	<3d006b9f5dcc5ff3275ec1a407749fb5@mail.gmail.com>	<BANLkTik0JaN0F_mLJxs_Mtjf-dD81vSA8Q@mail.gmail.com>
	<2c6b5bfced9f920c274e3c890886c6a8@mail.gmail.com>
	<BANLkTimkGQEWpanZ1MkyLWnRu4RPot+qXw@mail.gmail.com>
Message-ID: <fc70c2c1c989bcaa58a252222c056caf@mail.gmail.com>

You might be better using remote debugging but you can do what you
suggested earlier and create a script, then tell Works that that is the
java compiler.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ben Corne
> Sent: Monday, May 09, 2011 5:16 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Source code level of ANTLRWorks
>
> The path field expects a directory where it can find the javac binary
> in.
>
> Adding flags behind the directory also fails:
> The debugger fails to initialize and leaves some process running in the
> background requiring me to kill the process before I can try to run the
> debugger again.
>
> Any more thoughts?
> Ben
>
> 2011/5/5 Jim Idle <jimi at temporal-wave.com>
>
> > Have you tried adding it in with the PATH? Also you can use -source
> > 1.6 -target jsr14 and use 1.6 input and 1.4 output.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Ben Corne
> > > Sent: Thursday, May 05, 2011 4:58 AM
> > > To: antlr-interest at antlr.org
> > > Subject: Re: [antlr-interest] Source code level of ANTLRWorks
> > >
> > > Here's a screenshot of my antlrworks preferences page + javac info
> > > http://igor.rave.org/antlrjavac.png
> > >
> > > I don't see the option where to adjust the commandline call.
> > > And from what I think to understand from the helppage of my javac,
> > > it says
> > > 1.4 is the default, but I don't find a way to change this default,
> > > except by writing a wrapper shell script that attaches -source 1.5
> > > (which is what I will do now, until more clues are given)
> > >
> > > Ben
> > >
> > > 2011/5/4 Jim Idle <jimi at temporal-wave.com>
> > >
> > > > That just means you are calling a compiler that has a default
> > > > level less than 1.5. So, chance the javacc command in the
> > > > preferences or remove the old compiler and install 1.6, or makes
> > > > sure that 1.6 is
> > > the
> > > > first on the command line. ANTLR works does not influence the
> Java
> > > > compiler - it only calls the one that you tell it to.
> > > >
> > > > Jim
> > > >
> > > >
> > > >
> > > > > -----Original Message-----
> > > > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > > > bounces at antlr.org] On Behalf Of Ben Corne
> > > > > Sent: Wednesday, May 04, 2011 6:56 AM
> > > > > To: antlr-interest at antlr.org
> > > > > Subject: [antlr-interest] Source code level of ANTLRWorks
> > > > >
> > > > > Hi
> > > > >
> > > > > Is there a way to set the source code level of antlrworks?
> > > > > I've checked the preferences pane and launchers with no avail.
> > > > >
> > > > > I need to set it to > 1.5, since I'm using Java Generics:
> > > > >
> > > > > [15:47:58] 102. ERROR in
> > > > > /home/bcorne/Downloads/at2-parser-
> > > 3/grammar/output/ATGrammar3Lexer.j
> > > > > ava (at line 114) [15:47:58] Stack<String> paraphrase = new
> > > > > Stack<String>();
> > > > > [15:47:58]                                      ^^^^^^
> > > > > [15:47:58] Syntax error, parameterized types are only available
> > > > > if source level is 1.5
> > > > >
> > > > > Regards
> > > > > Ben Corne
> > > > >
> > > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > > Unsubscribe:
> > > > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > > > email-address
> > > >
> > > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > > Unsubscribe:
> > > > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > > address
> > > >
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Mon May  9 10:40:41 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 9 May 2011 10:40:41 -0700
Subject: [antlr-interest] Translating expressions - advice?
In-Reply-To: <312783.76055.qm@web27101.mail.ukl.yahoo.com>
References: <545550.60899.qm@web27107.mail.ukl.yahoo.com>	<BANLkTikk6oTow940_2a7BVP_xJte4TR_Cw@mail.gmail.com>
	<BANLkTingip5RNc4=KQn2GyS+2rzO3CdYzw@mail.gmail.com>
	<312783.76055.qm@web27101.mail.ukl.yahoo.com>
Message-ID: <46e77fd83222539b217ed7e8e495b99f@mail.gmail.com>

If the output language has the same operator precedence as the input
language then there is no need to add additional parens. Just preserve the
presence of parens in the input and reflect them in the output:

expression : expr -> ^(EXPRESSION expr) ; // In AST will indicate ()
expr : orexpr -> orexpr ; // In AST, indicates no ()
...
atom : LPAREN! expression RPAREN!  // Yields EXPRESSION node, which means
()

---

expression
  : ^(EXPRESSION expr)
  ;


expr
  : ^(AND expr expr)
   ... etc
  | atom
  ;

atom : INT
     | expression // Parens were present
;


If you are trying to remove extraneous parens from the input then you
would need to know the operations on either side of the AND and OR and
decide if the discovered expressions are required. Remember that the
parens are sometimes extraneous but used to  clarify and expression
though, so removing them may not be the best thing to do.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hans-Juergen Rennau
> Sent: Monday, May 09, 2011 8:16 AM
> To: Bart Kiers
> Cc: antlr-interest at antlr.orginterest
> Subject: Re: [antlr-interest] Translating expressions - advice?
>
> Hi Bart, thank you for considering my question! Indeed, what I wrote
> was perhaps misleading. Giving the example
>    (((a OR b) OR c) AND d)
>
> I meant the result of translating the AST into text in a "canonical
> way", that is, writing this concatenation:
>
> formula "R"
>    : ^(operator ldefOperand rightOperand) => this string: openBracket +
> leftOperand + closeBracket + operator + openBracket + rightOperand +
> closeBracket
>
> I suppose a deep tree created as sketched in the previous posting, that
> is, by the scheme
>    : operand (operator^ operand)*
>
> can be safely translated by applying the rule given above ("R")
> recursively. So far, so good. But the brackets are superfluous unless
> the current operator has a lower precedence than the operator in the
> "context", the tree level of which the present operand is a child. For
> example, this input
>    A + B + C + D + E + F
>
> generates
> (((((A + B) + C) + D) + E + F)
>
> So my question amounts to: is it a good idea to accomplish the
> translation in these steps:
> a) build the AST in the standard way (meant for operation execution),
> creating a deep tree with one inner node per operator
> b) serialize it using an adapted form of "R", which uses or omits the
> brackets dependent on a rule parameter providing the context operator
>
> ? Or should one build the AST differently, namely, making the top-level
> operands of an operator the children of the operator, like:
> ^('+' A B C D E F)
>
> Thank you, and kind regards
> -- Hans-Juergen
>
>
>
>
> ________________________________
> Von: Bart Kiers <bkiers at gmail.com>
> An: Hans-Juergen Rennau <hrennau at yahoo.de>
> CC: "antlr-interest at antlr.org interest" <antlr-interest at antlr.org>
> Gesendet: Montag, den 9. Mai 2011, 16:16:53 Uhr
> Betreff: Re: [antlr-interest] Translating expressions - advice?
>
> Wait I think I misunderstood. Your example `(a OR (b OR (c AND d)))` is
> just an example expression, right?
> In that case, yes, these parenthesis are part of the token stream, but
> if you apply rewrite rules (or AST operators `^` and `!`) properly,
> these parenthesis are easily removed from your parse tree.
>
> See: http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
> or: http://stackoverflow.com/questions/4931346/how-to-output-the-ast-
> built-using-antlr
>
>
> Regards,
>
> Bart.
>
>
> On Mon, May 9, 2011 at 4:10 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
> I get the impression you think that when creating AST's, ANTLR inserts
> parenthesis (brackets). This is not the case: I guess what you're
> seeing is just the tree's `toStringTree()` that displays these
> parenthesis to make the hierarchy of the tree apparent.
>
> >Or am I misinterpreting your question?
> >
> >
> >Regards,
> >
> >
> >Bart.
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From lgcraymer at yahoo.com  Mon May  9 12:07:11 2011
From: lgcraymer at yahoo.com (Loring Craymer)
Date: Mon, 9 May 2011 12:07:11 -0700 (PDT)
Subject: [antlr-interest] Translating expressions - advice?
In-Reply-To: <312783.76055.qm@web27101.mail.ukl.yahoo.com>
References: <545550.60899.qm@web27107.mail.ukl.yahoo.com>
	<BANLkTikk6oTow940_2a7BVP_xJte4TR_Cw@mail.gmail.com>
	<BANLkTingip5RNc4=KQn2GyS+2rzO3CdYzw@mail.gmail.com>
	<312783.76055.qm@web27101.mail.ukl.yahoo.com>
Message-ID: <255337.20139.qm@web125504.mail.ne1.yahoo.com>

Optimal placement of parentheses is tricky; as a first step, you want to use the 
form
^('+' A B C D E F )
as long as the operator is associative;
then you want to parenthesize only when required to by changes in operator 
precedence; the easiest way is actually to have two versions of each expression 
rule, one for top level invocation and one for nested invocation (the nested 
versions parenthesize).

--Loring



----- Original Message ----
> From: Hans-Juergen Rennau <hrennau at yahoo.de>
> To: Bart Kiers <bkiers at gmail.com>
> Cc: "antlr-interest at antlr.orginterest" <antlr-interest at antlr.org>
> Sent: Mon, May 9, 2011 8:16:25 AM
> Subject: Re: [antlr-interest] Translating expressions - advice?
> 
> Hi Bart, thank you for considering my question! Indeed, what I wrote was 
>perhaps 
>
> misleading. Giving the example
>    (((a OR b) OR c) AND d)
> 
> I  meant the result of translating the AST into text in a "canonical way", that 
>
> is, writing this concatenation: 
> 
> formula "R"      
>    : ^(operator ldefOperand rightOperand) => this string:  openBracket + 
> leftOperand + closeBracket + operator + openBracket +  rightOperand + 
> closeBracket
> 
> I suppose a deep tree created as sketched  in the previous posting, that is, by 
>
> the scheme
>    : operand  (operator^ operand)*
> 
> can be safely translated by applying the rule given  above ("R") recursively. 
>So 
>
> far, so good. But the brackets are superfluous  unless the current operator has 
>a 
>
> lower precedence than the operator in the  "context", the tree level of which 
>the 
>
> present operand is a child. For  example, this input
>    A + B + C + D + E + F
> 
> generates
> (((((A  + B) + C) + D) + E + F)
> 
> So my question amounts to: is it a good idea to  accomplish the translation in 

> these steps:
> a) build the AST in the  standard way (meant for operation execution), creating 
>a 
>
> deep tree with one  inner node per operator
> b) serialize it using an adapted form of "R", which  uses or omits the brackets 
>
> dependent on a rule parameter providing the  context operator
> 
> ? Or should one build the AST differently, namely,  making the top-level 
>operands 
>
> of an operator the children of the operator,  like:
> ^('+' A B C D E F)
> 
> Thank you, and kind regards
> --  Hans-Juergen
> 
> 
> 
> 
> ________________________________
> Von: Bart  Kiers <bkiers at gmail.com>
> An: Hans-Juergen  Rennau <hrennau at yahoo.de>
> CC: "antlr-interest at antlr.org interest"  <antlr-interest at antlr.org>
> Gesendet:  Montag, den 9. Mai 2011, 16:16:53 Uhr
> Betreff: Re: [antlr-interest]  Translating expressions - advice?
> 
> Wait I think I misunderstood. Your  example `(a OR (b OR (c AND d)))` is just 
>an 
>
> example expression,  right?
> In that case, yes, these parenthesis are part of the token stream, but  if you 

> apply rewrite rules (or AST operators `^` and `!`) properly, these  parenthesis 
>
> are easily removed from your parse tree.
> 
> See: http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
> or: 
>http://stackoverflow.com/questions/4931346/how-to-output-the-ast-built-using-antlr
>
> 
> 
> Regards,
> 
> Bart.
> 
> 
> On  Mon, May 9, 2011 at 4:10 PM, Bart Kiers <bkiers at gmail.com> wrote:
> 
> I get the  impression you think that when creating AST's, ANTLR inserts 
> parenthesis  (brackets). This is not the case: I guess what you're seeing is 
>just 
>
> the  tree's `toStringTree()` that displays these parenthesis to make the 
> hierarchy of the tree apparent.
> >Or am I misinterpreting your  question?
> >
> >
> >Regards,
> >
> >
> >Bart.
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
>http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From pganelin at gmail.com  Mon May  9 12:45:21 2011
From: pganelin at gmail.com (Pavel Ganelin)
Date: Mon, 9 May 2011 15:45:21 -0400
Subject: [antlr-interest] Composite grammars: compile error with @header tag.
Message-ID: <BANLkTimoo-wF3u_6njkLq+iAfBZKVfivBw@mail.gmail.com>

I have 4 grammar file: lexer L.g, parser P.g and two grammars G1 and G2 (see
below). After running antlr to generate Java files compilation fails:

    [mkdir] Created dir: target\classes
    [javac] Compiling 10 source files to target\classes
    [javac] target\src\example\G1Lexer.java:18: cannot find symbol
    [javac] symbol  : class G1_L
    [javac] location: class G1Lexer
    [javac]     public G1_L gL;
    [javac]            ^
    [javac] target\src\example\G1Lexer.java:9: duplicate class: G1Lexer
    [javac] public class G1Lexer extends Lexer {
    [javac]        ^
    [javac] target\src\example\G1_L.java:22: cannot access example.G1Lexer
    [javac] bad class file: target\src\example\G1Lexer.java
    [javac] file does not contain class example.G1Lexer
    [javac] Please remove or make sure it appears in the correct
subdirectory of the classpath.
    [javac]     public G1Lexer gG1;
    [javac]            ^
    [javac] 3 errors

The workaround would be to move @lexer::header file to both G1.g and G2.g.
It works but the solution has 2 drawbacks:

1. Code duplication.
2. L.java can not be compiled as standalone file anymore because it lacks
package declaration.

==========================L.g================================

lexer grammar L;

@lexer::header {
package example;
}

IDENT : 'A-Z' +
;
==========================P.g==========================
parser grammar P ;

tokens {
  BEGIN = 'begin';
  END = 'end';
}

method: BEGIN IDENT END;
============================ G1.g ======================
grammar G1 ;
import L,P;

tokens {
  PROGRAM = 'program';
}


@header {
package example;
}

program: PROGRAM method;
===========================G2.g=====================
grammar G2 ;
import L,P;

tokens {
  FUNCTION = 'function';
}

@header {
package example;
}

function: FUNCTION method;
==================================================

From douglasgodfrey at gmail.com  Mon May  9 21:58:01 2011
From: douglasgodfrey at gmail.com (Douglas Godfrey)
Date: Tue, 10 May 2011 00:58:01 -0400
Subject: [antlr-interest] Feature Request - Visualize the Parse Graph for
 multiple rules by Rule Decisions and Tokens consumed
Message-ID: <BANLkTi=KHajMneVQkbbJFJVOH-9HqCHa3w@mail.gmail.com>

Feature Request:

A way to visualize the Parse Graph of a grammar by the sequence of Tokens
consumed by the rules.

The Parse Graph should be generated by selecting a rule or rule decision and
using the contextual menu
or the Grammar menu. The root of the Parse Graph should be the start of the
selected rule or decision.

The Parse Graph should visually represent the flow of control in the parser
generated by a grammar
starting from the selected rule or decision.

The Parse Graph should show the rules, rule decisions and the Tokens or user
provided Predicates that
determine which path is followed. A decision invoking a Sub-rule should be
inlined until a leading Token
or predicate is found.

Antlr generated predicates should list the Tokens in the follow set that
trigger that predicate.
If the set is more than 2-3 Tokens then do not list the tokens in the graph
node but instead have a label
that refers to a named list of tokens added to the bottom of the Parse Graph
diagram.

User provided predicates should be shown as a node named by the predicate
function with a label
indicating the line number of the predicate in the grammar. Predicate Nodes
should distinguish between
Syntactic, Semantic and Gated Predicates

The graph generation should have an option to limit the depth of analysis so
the generated graph will be
small enough for a person to read. If analysis is terminated by the depth
limit, then that should be visually
indicated by adding an Ellipsis node as a terminal leaf node.

The graph generation should also honor the current printer page setup and
margins. If a diagram would be
wider than the current page margins it should be wrapped to another line.

The output should be a PS, PDF or Dot file with display and save options
like the existing Rule Dependency
and Syntax Diagram graphs.

The graph should be formatted like a Pascal Railroad Diagram similar to the
existing Syntax Diagrams
instead of free-form like the Rule-Dependency-Graph. The resulting graph
should be suitable for use as
formal language documentation for the language parsed by the grammar.

i.e. If the grammar was for the Pascal language, selecting the Program rule
would generate a railroad
      diagram for the Pascal Language that would look like a more detailed
version of the diagrams found
      in every elementary Pascal textbook.

From asicaddress at gmail.com  Tue May 10 07:14:38 2011
From: asicaddress at gmail.com (A Z)
Date: Tue, 10 May 2011 09:14:38 -0500
Subject: [antlr-interest] C Target - Assigning rule info to imaginary tokens
Message-ID: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>

Hello all,

  I have a case where I need to assign an imaginary token the attributes of
a token inside a rule. I tried the below but as expected it does not have
the desired effect.


var_or_function :
  identifier
  (
    LPARAN arg_list RPARAN
      -> ^(I_FUNC[identifier] arg_list)
  |
      -> I_UNKN[identifier]
  );

identifier :
    SIMPLE_IDENT
  | ESCAPED_IDENT;


Is there any way to do this without merging the two lexer rules into one
token?

Thanks.

From jbb at acm.org  Tue May 10 10:08:43 2011
From: jbb at acm.org (John B. Brodie)
Date: Tue, 10 May 2011 13:08:43 -0400
Subject: [antlr-interest] C Target - Assigning rule info to imaginary
 tokens
In-Reply-To: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>
References: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>
Message-ID: <1305047323.27446.7.camel@gecko>

Greetings!

On Tue, 2011-05-10 at 09:14 -0500, A Z wrote:
> Hello all,
> 
>   I have a case where I need to assign an imaginary token the attributes of
> a token inside a rule. I tried the below but as expected it does not have
> the desired effect.
> 
> 
> var_or_function :
>   identifier
>   (
>     LPARAN arg_list RPARAN
>       -> ^(I_FUNC[identifier] arg_list)
>   |
>       -> I_UNKN[identifier]
>   );
> 
> identifier :
>     SIMPLE_IDENT
>   | ESCAPED_IDENT;
> 
> 
> Is there any way to do this without merging the two lexer rules into one
> token?

perhaps this:

var_or_function :
  id=identifier
  (
    '(' arg_list ')'
      -> ^(I_FUNC[$id.token] arg_list)
  | /* empty */
      -> I_UNKN[$id.token]
  );

identifier returns [Token token]:
      ( i=SIMPLE_IDENT | i=ESCAPED_IDENT )  { $token = $i; };


I do not have the talent to try this with the C target. But did test
with Java target. Should be target agnostic as it just uses ANTLR's
metalanguage (well maybe the return type of the identifier rule may need
to be adjusted.... YMMV ;-)

Hope this helps...
   -jbb



From jimi at temporal-wave.com  Tue May 10 10:12:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 10 May 2011 10:12:03 -0700
Subject: [antlr-interest] C Target - Assigning rule info to imaginary
	tokens
In-Reply-To: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>
References: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>
Message-ID: <b3129dc051e6b7164860c9c21862e585@mail.gmail.com>

| { set the type of LT(-1) to I_UNKN } -> identifier

jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of A Z
> Sent: Tuesday, May 10, 2011 7:15 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] C Target - Assigning rule info to imaginary
> tokens
>
> Hello all,
>
>   I have a case where I need to assign an imaginary token the
> attributes of a token inside a rule. I tried the below but as expected
> it does not have the desired effect.
>
>
> var_or_function :
>   identifier
>   (
>     LPARAN arg_list RPARAN
>       -> ^(I_FUNC[identifier] arg_list)
>   |
>       -> I_UNKN[identifier]
>   );
>
> identifier :
>     SIMPLE_IDENT
>   | ESCAPED_IDENT;
>
>
> Is there any way to do this without merging the two lexer rules into
> one token?
>
> Thanks.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From lars.vonwedel at gmail.com  Wed May 11 04:40:35 2011
From: lars.vonwedel at gmail.com (Lars von Wedel)
Date: Wed, 11 May 2011 13:40:35 +0200
Subject: [antlr-interest] Geting all tokens from lexer / token stream
Message-ID: <BANLkTi=PcoHweY5UHe_a6K4ytA70U+ipsg@mail.gmail.com>

Hello,

I am writing an interactive interpreter and I would like to obtain all
tokens from a lexer of token stream to test, whether the input is complete
or continued on the next line.

What is the easiest approach to do this ? I tried a CommonTokenStream but I
am not sure how to tell it to pull all tokens from the lexer.

Thanks and Regards,
Lars

From bkiers at gmail.com  Wed May 11 06:03:17 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 11 May 2011 15:03:17 +0200
Subject: [antlr-interest] Geting all tokens from lexer / token stream
In-Reply-To: <BANLkTi=PcoHweY5UHe_a6K4ytA70U+ipsg@mail.gmail.com>
References: <BANLkTi=PcoHweY5UHe_a6K4ytA70U+ipsg@mail.gmail.com>
Message-ID: <BANLkTimQMVPJF_uYKuoAiZkku--awhQXGg@mail.gmail.com>

CommonTokenStream inherits getTokens() which returns a List of Tokens.
You'll need to cast them to a Token (or something that extends a Token),
since it's a non-generics List list:

CommonTokenStream tokens = new CommonTokenStream(lexer);
for(Object o : tokens.getTokens()) {
  Token t = (Token)o;
  System.out.println(t);
}


Regards,

Bart.

On Wed, May 11, 2011 at 1:40 PM, Lars von Wedel <lars.vonwedel at gmail.com>wrote:

> Hello,
>
> I am writing an interactive interpreter and I would like to obtain all
> tokens from a lexer of token stream to test, whether the input is complete
> or continued on the next line.
>
> What is the easiest approach to do this ? I tried a CommonTokenStream but I
> am not sure how to tell it to pull all tokens from the lexer.
>
> Thanks and Regards,
> Lars
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From lars.vonwedel at gmail.com  Wed May 11 06:22:32 2011
From: lars.vonwedel at gmail.com (Lars von Wedel)
Date: Wed, 11 May 2011 15:22:32 +0200
Subject: [antlr-interest] Geting all tokens from lexer / token stream
In-Reply-To: <BANLkTimQMVPJF_uYKuoAiZkku--awhQXGg@mail.gmail.com>
References: <BANLkTi=PcoHweY5UHe_a6K4ytA70U+ipsg@mail.gmail.com>
	<BANLkTimQMVPJF_uYKuoAiZkku--awhQXGg@mail.gmail.com>
Message-ID: <BANLkTinkQi1Ygu0c9c=xgNti=XBLJdb6Mg@mail.gmail.com>

Thanks for the answer. However, calling GetTokens() yields an empty list for
me. This is my code (C#):

            var inputStream = new ANTLRStringStream(input);
            var lexer = new MyLexer(inputStream);
            var tokens = new CommonTokenStream(lexer,
BaseRecognizer.DefaultTokenChannel);

            foreach (var token in tokens.GetTokens())
            {
                System.Console.WriteLine(token);
            }

Interestingly, it works, if I inspect the token stream variable in the VS
debugger.

Lars

On Wed, May 11, 2011 at 3:03 PM, Bart Kiers <bkiers at gmail.com> wrote:

> CommonTokenStream inherits getTokens() which returns a List of Tokens.
> You'll need to cast them to a Token (or something that extends a Token),
> since it's a non-generics List list:
>
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> for(Object o : tokens.getTokens()) {
>   Token t = (Token)o;
>   System.out.println(t);
> }
>
>
> Regards,
>
> Bart.
>
> On Wed, May 11, 2011 at 1:40 PM, Lars von Wedel <lars.vonwedel at gmail.com>wrote:
>
>> Hello,
>>
>> I am writing an interactive interpreter and I would like to obtain all
>> tokens from a lexer of token stream to test, whether the input is complete
>> or continued on the next line.
>>
>> What is the easiest approach to do this ? I tried a CommonTokenStream but
>> I
>> am not sure how to tell it to pull all tokens from the lexer.
>>
>> Thanks and Regards,
>> Lars
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From bajracharya at gmail.com  Wed May 11 11:05:35 2011
From: bajracharya at gmail.com (Sushil Bajracharya)
Date: Wed, 11 May 2011 14:05:35 -0400
Subject: [antlr-interest] C grammar from antlr.org running into 'no viable
	alternative at input'
Message-ID: <BANLkTinWupOa4ZGi+soR-+or-w0gtVbJLw@mail.gmail.com>

I am relatively new to antlr, and would appreciate suggestions on
moving forward to tackle a problem I am having with 'no viable
alternative at input'.

I am trying to use the C grammar file from here
http://www.antlr.org/grammar/1153358328744/C.g to implement a parser
that extracts declarations (typedefs, functions) from C files. More
often I am running into problems, as the parser that gets generated
seems to be confused with certain forms of function declarations.

For example, when I use the following as an input code in antlrworks
debugger (using the unmodified grammar from
http://www.antlr.org/grammar/1153358328744/C.g);

static void function(some_type bus)
{
	

}

I see the following list of problems get reported by the debugger:

__Test___input.txt line 1:20 missing ';' at '('
__Test___input.txt line 1:20 no viable alternative at input '('
__Test___input.txt line 1:20 no viable alternative at input '('
__Test___input.txt line 1:34 no viable alternative at input ')'

I think because of this my parser fails to extract all function
definitions from the file. I am wondering if anyone here has used or
extended the grammar (http://www.antlr.org/grammar/1153358328744/C.g)
and encountered the problem I am seeing and has a fix for it.

Thank you
- sushil

From lars.vonwedel at gmail.com  Wed May 11 12:30:59 2011
From: lars.vonwedel at gmail.com (Lars von Wedel)
Date: Wed, 11 May 2011 21:30:59 +0200
Subject: [antlr-interest] Geting all tokens from lexer / token stream
In-Reply-To: <BANLkTinkQi1Ygu0c9c=xgNti=XBLJdb6Mg@mail.gmail.com>
References: <BANLkTi=PcoHweY5UHe_a6K4ytA70U+ipsg@mail.gmail.com>
	<BANLkTimQMVPJF_uYKuoAiZkku--awhQXGg@mail.gmail.com>
	<BANLkTinkQi1Ygu0c9c=xgNti=XBLJdb6Mg@mail.gmail.com>
Message-ID: <BANLkTik1pCOgt5tgO3-S4TXzLXvsUn8cRQ@mail.gmail.com>

Hi again,

I came up with this now which made my tests happy:

            do
            {
                tokens.Consume();
            } while (tokens.LastToken.Type != MyLexer.EOF);

Afterwards I can go forward with tokens.GetTokens(). Is that how it is
supposed to be used ?

Lars

On Wed, May 11, 2011 at 3:22 PM, Lars von Wedel <lars.vonwedel at gmail.com>wrote:

> Thanks for the answer. However, calling GetTokens() yields an empty list
> for me. This is my code (C#):
>
>             var inputStream = new ANTLRStringStream(input);
>             var lexer = new MyLexer(inputStream);
>             var tokens = new CommonTokenStream(lexer,
> BaseRecognizer.DefaultTokenChannel);
>
>             foreach (var token in tokens.GetTokens())
>             {
>                 System.Console.WriteLine(token);
>             }
>
> Interestingly, it works, if I inspect the token stream variable in the VS
> debugger.
>
> Lars
>
>
> On Wed, May 11, 2011 at 3:03 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
>> CommonTokenStream inherits getTokens() which returns a List of Tokens.
>> You'll need to cast them to a Token (or something that extends a Token),
>> since it's a non-generics List list:
>>
>> CommonTokenStream tokens = new CommonTokenStream(lexer);
>> for(Object o : tokens.getTokens()) {
>>   Token t = (Token)o;
>>   System.out.println(t);
>> }
>>
>>
>> Regards,
>>
>> Bart.
>>
>> On Wed, May 11, 2011 at 1:40 PM, Lars von Wedel <lars.vonwedel at gmail.com>wrote:
>>
>>> Hello,
>>>
>>> I am writing an interactive interpreter and I would like to obtain all
>>> tokens from a lexer of token stream to test, whether the input is
>>> complete
>>> or continued on the next line.
>>>
>>> What is the easiest approach to do this ? I tried a CommonTokenStream but
>>> I
>>> am not sure how to tell it to pull all tokens from the lexer.
>>>
>>> Thanks and Regards,
>>> Lars
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From passionist_81 at yahoo.co.uk  Wed May 11 19:38:26 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Thu, 12 May 2011 03:38:26 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <213145.71606.qm@web24804.mail.ird.yahoo.com>

http://niluzypyhi.chat.ru/tovapo.html

From ter at antlr.org  Thu May 12 05:27:18 2011
From: ter at antlr.org (ter at antlr.org)
Date: Thu, 12 May 2011 09:27:18 -0300
Subject: [antlr-interest] [SPAM] Affordable Degrees
Message-ID: <9368663616.ZEKN6KIR696382@pajajnzkudim.yqisjbplbp.ua>

WHAT A GREAT IDEA!

Ring anytime 1-801-461-5094
 We provide a concept that will allow anyone with sufficient work experience to
obtain a fully verifiable University Degree.
Bachelors, Masters or even a Doctorate.

Think of it, within four to six weeks, you too could be a college graduate.
Many people share the same frustration, they are doing the work of the person
that has the degree and the person that has the degree is getting all the money.
Don't you think that it is time you were paid fair compensation for the level of
work you are already doing?

This is your chance to finally make the right move and receive your due
benefits.
If you are more than qualified with your experience, but are lacking that
prestigious piece of paper known as a diploma that is often the passport to
success.

CALL US TODAY AND GIVE YOUR WORK
EXPERIENCE THE CHANCE TO EARN YOU
THE HIGHER COMPENSATION YOU DESERVE!

Ring anytime 1-801-461-5094


From alain.perry at gmail.com  Thu May 12 07:22:41 2011
From: alain.perry at gmail.com (Alain Perry)
Date: Thu, 12 May 2011 16:22:41 +0200
Subject: [antlr-interest] Curiosity question
Message-ID: <BANLkTike=T9nO9tg4FHghsfWjr-U2nhFmg@mail.gmail.com>

Hi there,

I'm an absolute newbie when it comes to lexers and parsers. I might
have fiddled some with lex- and yacc-style tools while I was a CS
student, but not much of it has been left in my volatile brain.

The thing is, I'm curious if a tool like antlr is the right one for a
particular job: I need (surprise) to parse some strings that contain
tokens of interest. Thing is, these tokens are incredibly loosely
defined. Here are some examples where I need to detect the part
between braces (the braces aren't there in the real world):

[123456] this is some sample text
[12:34] this is some more sample text
[123456] some more...
[12:34:56^2] another example
[12:34:56 at bleh] still another
[12:34:56^1 at blah] and a last one, just for the fun of it.

On the contrary, the strings [12345], [1234567], [12:34:5] etc. should
not be detected as a token of interest.

So as I said above, my question is: should I be using antlr to detect
these things ? Should I stick with regex'es ?

To be honest and since I'm a playful type of guy, I started writing a
grammar definition for my problem. I might post it here to treat you
all knowledgeable people to a good laugh. But I might be interested
first in any online (and free, for the time being) resource you would
point me to in order to not make to much of a fool of myself and get
to know more about this stuff in a practical and not too theoretical
kind of way.

Now, let me just thank you for reading till this point.

Regards,

--
Alain Perry

From Philippe.Frankson at Frsglobal.com  Thu May 12 07:51:11 2011
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Thu, 12 May 2011 16:51:11 +0200
Subject: [antlr-interest] meaning of #xxx
In-Reply-To: <b3129dc051e6b7164860c9c21862e585@mail.gmail.com>
References: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>
	<b3129dc051e6b7164860c9c21862e585@mail.gmail.com>
Message-ID: <148D436D71E918499E8A71E1DAD38DD016107118@BRU-EXCH01.frsglobal.internal>

Hi,
In a grammar done with ANTLR 2.x, I have seen the following expression:

sql_literal:
        ( NUMBER | QUOTED_STRING | "null" )
        { #sql_literal = #([SQL_LITERAL, "sql_literal"], #sql_literal);
}
    ;

Anybody can explain the meaning of the code inside the  { } ? (or send a
link where I can find the doc).
#sql_literal ?
#(x,y) ?

I could not find relevant documentation explaining that.

Thx a lot.
Philippe


From researcher0x00 at gmail.com  Thu May 12 11:32:23 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 12 May 2011 14:32:23 -0400
Subject: [antlr-interest] @declarations
Message-ID: <BANLkTin83dwnU6JPo+dCPVT5JQSysBgxGQ@mail.gmail.com>

I am working on converting the C++ grammar by *Aurelian Melinte* from a C
back end to a C# back end and for the life of me cannot find out how to
property convert the @declarations section to C#.

The searching of @declarations in both Google, and MarkMail drop the @ and
then the results become meaningless.

I am currently converting it to scope and @init sections if only to get the
C# to build. Once built I will need to debug the code and thus need to know
more about how to properly convert @declarations.

Thanks,  Eric

From jimi at temporal-wave.com  Thu May 12 12:22:14 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 12 May 2011 12:22:14 -0700
Subject: [antlr-interest] @declarations
In-Reply-To: <BANLkTin83dwnU6JPo+dCPVT5JQSysBgxGQ@mail.gmail.com>
References: <BANLkTin83dwnU6JPo+dCPVT5JQSysBgxGQ@mail.gmail.com>
Message-ID: <c3a33e1a4c58debcebf3c7c24234b631@mail.gmail.com>

Declarations is only needed for C targets (and really only to be C89
compliant which used to be important before gcc everywhere). So just roll
them up:

@declarations
{
	int i;
}
@init
{
	i = 0;
}

from a C target is just

@init
{
	int i = 0;
}

In C# and Java targets and probably most others.

Jim


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of The Researcher
> Sent: Thursday, May 12, 2011 11:32 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] @declarations
>
> I am working on converting the C++ grammar by *Aurelian Melinte* from a
> C back end to a C# back end and for the life of me cannot find out how
> to property convert the @declarations section to C#.
>
> The searching of @declarations in both Google, and MarkMail drop the @
> and then the results become meaningless.
>
> I am currently converting it to scope and @init sections if only to get
> the C# to build. Once built I will need to debug the code and thus need
> to know more about how to properly convert @declarations.
>
> Thanks,  Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sharwell at pixelminegames.com  Thu May 12 14:11:16 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 12 May 2011 16:11:16 -0500
Subject: [antlr-interest] meaning of #xxx
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD016107118@BRU-EXCH01.frsglobal.internal>
References: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>	<b3129dc051e6b7164860c9c21862e585@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD016107118@BRU-EXCH01.frsglobal.internal>
Message-ID: <04f401cc10e9$225f3130$671d9390$@pixelminegames.com>

I think it translates to the following in ANTLR 3:

sql_literal :
    (NUMBER | QUOTED_STRING | 'null')
    -> ^(SQL_LITERAL["sql_literal"] NUMBER? QUOTED_STRING? 'null'?)
;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Philippe Frankson
Sent: Thursday, May 12, 2011 9:51 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] meaning of #xxx

Hi,
In a grammar done with ANTLR 2.x, I have seen the following expression:

sql_literal:
        ( NUMBER | QUOTED_STRING | "null" )
        { #sql_literal = #([SQL_LITERAL, "sql_literal"], #sql_literal); }
    ;

Anybody can explain the meaning of the code inside the  { } ? (or send a
link where I can find the doc).
#sql_literal ?
#(x,y) ?

I could not find relevant documentation explaining that.

Thx a lot.
Philippe


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From cummings at kjchome.homeip.net  Thu May 12 14:14:02 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Thu, 12 May 2011 17:14:02 -0400
Subject: [antlr-interest] meaning of #xxx
In-Reply-To: <148D436D71E918499E8A71E1DAD38DD016107118@BRU-EXCH01.frsglobal.internal>
References: <BANLkTin1WNKMCMiqv8tPhNsnWc6n1+Pk5A@mail.gmail.com>
	<b3129dc051e6b7164860c9c21862e585@mail.gmail.com>
	<148D436D71E918499E8A71E1DAD38DD016107118@BRU-EXCH01.frsglobal.internal>
Message-ID: <4DCC4D9A.7070605@kjchome.homeip.net>

On 05/12/2011 10:51 AM, Philippe Frankson wrote:
> Hi,
> In a grammar done with ANTLR 2.x, I have seen the following expression:
> 
> sql_literal:
>         ( NUMBER | QUOTED_STRING | "null" )
>         { #sql_literal = #([SQL_LITERAL, "sql_literal"], #sql_literal);
> }
>     ;
> 
> Anybody can explain the meaning of the code inside the  { } ? (or send a
> link where I can find the doc).

You should read the documentation.  Its all explained in the "ANTLR
Reference Manual".

{} surround action blocks.  Code from the target language that should be
executed after the previous rule (or sub-rule) was matched.

> #sql_literal ?

#ruleName is the resulting AST tree.  In this case, for the rule being
executed.  In this case, it sets the AST for this rule to what's on the RHS.

> #(x,y) ?

This is AST construction.  What's in the []'s is a token creation of the
form [TOKEN_TYPE, token_spelling]

> I could not find relevant documentation explaining that.

Start here:

http://www.antlr2.org/doc/index.html

There is lots of documentation on the ANTLR V2 site....

> Thx a lot.
> Philippe

-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From researcher0x00 at gmail.com  Thu May 12 17:30:51 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Thu, 12 May 2011 20:30:51 -0400
Subject: [antlr-interest] @declarations
In-Reply-To: <BANLkTimpYMMbogwzNkzN64Mhx6xJ87sCMw@mail.gmail.com>
References: <BANLkTin83dwnU6JPo+dCPVT5JQSysBgxGQ@mail.gmail.com>
	<BANLkTimpYMMbogwzNkzN64Mhx6xJ87sCMw@mail.gmail.com>
Message-ID: <BANLkTik0+dJZX1_DvnVo+U94fR49ctLP5A@mail.gmail.com>

Gentlemen,

Thank you.

From michael.bedward at gmail.com  Thu May 12 18:50:38 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Fri, 13 May 2011 11:50:38 +1000
Subject: [antlr-interest] Curiosity question
In-Reply-To: <BANLkTike=T9nO9tg4FHghsfWjr-U2nhFmg@mail.gmail.com>
References: <BANLkTike=T9nO9tg4FHghsfWjr-U2nhFmg@mail.gmail.com>
Message-ID: <BANLkTimrkyv-XWKT=4SwZRSZHnQM4Mk7JQ@mail.gmail.com>

Hello,

Judging by those examples I think regex matching is your best bet.

Michael

On 13 May 2011 00:22, Alain Perry <alain.perry at gmail.com> wrote:
> Hi there,
>
> I'm an absolute newbie when it comes to lexers and parsers. I might
> have fiddled some with lex- and yacc-style tools while I was a CS
> student, but not much of it has been left in my volatile brain.
>
> The thing is, I'm curious if a tool like antlr is the right one for a
> particular job: I need (surprise) to parse some strings that contain
> tokens of interest. Thing is, these tokens are incredibly loosely
> defined. Here are some examples where I need to detect the part
> between braces (the braces aren't there in the real world):
>
> [123456] this is some sample text
> [12:34] this is some more sample text
> [123456] some more...
> [12:34:56^2] another example
> [12:34:56 at bleh] still another
> [12:34:56^1 at blah] and a last one, just for the fun of it.
>
> On the contrary, the strings [12345], [1234567], [12:34:5] etc. should
> not be detected as a token of interest.
>
> So as I said above, my question is: should I be using antlr to detect
> these things ? Should I stick with regex'es ?
>
> To be honest and since I'm a playful type of guy, I started writing a
> grammar definition for my problem. I might post it here to treat you
> all knowledgeable people to a good laugh. But I might be interested
> first in any online (and free, for the time being) resource you would
> point me to in order to not make to much of a fool of myself and get
> to know more about this stuff in a practical and not too theoretical
> kind of way.
>
> Now, let me just thank you for reading till this point.
>
> Regards,
>
> --
> Alain Perry
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From david.smith at cc.gatech.edu  Fri May 13 06:08:03 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Fri, 13 May 2011 09:08:03 -0400
Subject: [antlr-interest] Lexer code missing @header info
Message-ID: <E1QKs6D-0000QV-HM@elasmtp-galgo.atl.sa.earthlink.net>

I'm using ANTLRWorks to generate java code form a grammar with the 
front-end listed below.  The code generation works flawlessly 
producing XXXLexer.java and XXXParser.java as expected with one minor 
annoyance.  The "package parser;" line makes it into XXXParser.java, 
but not into XXXLexer.java.  I therefore have to manually edit 
XXXLexer.java.  Not really a big issue, but is there an easy cure?

______________________
grammar XXX;
options {
     output=AST;
     ASTLabelType=CommonTree;
}
tokens{ STATLIST; }

@header {
package parser;
import java.util.HashMap;
}



David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From bkiers at gmail.com  Fri May 13 06:15:52 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 13 May 2011 15:15:52 +0200
Subject: [antlr-interest] Lexer code missing @header info
In-Reply-To: <E1QKs6D-0000QV-HM@elasmtp-galgo.atl.sa.earthlink.net>
References: <E1QKs6D-0000QV-HM@elasmtp-galgo.atl.sa.earthlink.net>
Message-ID: <BANLkTing_bR12u4WdW-=6-mRjqPH8CwsXA@mail.gmail.com>

Hi David,

The snippet:

@header {
package parser;
import java.util.HashMap;
}


is short for:

@parser::header {
package parser;
import java.util.HashMap;
}


You'll need to do the following as well:

@lexer::header {
package parser;
import java.util.HashMap;
}



Regards,

Bart.


On Fri, May 13, 2011 at 3:08 PM, David Smith <david.smith at cc.gatech.edu>wrote:

> I'm using ANTLRWorks to generate java code form a grammar with the
> front-end listed below.  The code generation works flawlessly
> producing XXXLexer.java and XXXParser.java as expected with one minor
> annoyance.  The "package parser;" line makes it into XXXParser.java,
> but not into XXXLexer.java.  I therefore have to manually edit
> XXXLexer.java.  Not really a big issue, but is there an easy cure?
>
> ______________________
> grammar XXX;
> options {
>     output=AST;
>     ASTLabelType=CommonTree;
> }
> tokens{ STATLIST; }
>
> @header {
> package parser;
> import java.util.HashMap;
> }
>
>
>
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From dominik.halfkann at googlemail.com  Sat May 14 05:50:17 2011
From: dominik.halfkann at googlemail.com (Dominik Halfkann)
Date: Sat, 14 May 2011 14:50:17 +0200
Subject: [antlr-interest] Problem while compiling/debugging: int cannot be
	dereferenced
Message-ID: <BANLkTinQFO4jcrAgmJrm9QGV1H4==31PoA@mail.gmail.com>

Hello everybody,

I have a problem with ANTLR and I hope it's ok that I'm asking that here. I
also posted something in the forum, but it seems to be very inactive
depending on other posts I saw there...

(from http://www.jguru.com/forums/view.jsp?EID=1639158)
When I want to debug/compile my grammar, I allways get the error message:

[14:03:38] D:\[...]\ANTLR Parser\output\SGLParser.java:2532: int
cannot be dereferenced
[14:03:38]                       value =
Integer.parseInt((i!=null?i.getText():null));

I don't have an explanation for that, maybe someone can help me here. Here
are the important code fragments:

grammar SGL;
options {
	backtrack = true;
	memoize = true;
}

[...]

mathAtom returns [int value]
    :   '(' e=mathExpression ')' {$value = $e.value;}
    |   i=Integer {$value = Integer.parseInt($i.text);}
    ;

[...]

Integer
    :	'0'..'9'+
    ;


Thank you in advance

Dominik

From knifed at gmail.com  Sat May 14 11:44:22 2011
From: knifed at gmail.com (Jeff Hair)
Date: Sat, 14 May 2011 14:44:22 -0400
Subject: [antlr-interest] Problem while compiling/debugging: int cannot
	be dereferenced
In-Reply-To: <BANLkTinQFO4jcrAgmJrm9QGV1H4==31PoA@mail.gmail.com>
References: <BANLkTinQFO4jcrAgmJrm9QGV1H4==31PoA@mail.gmail.com>
Message-ID: <BANLkTi=pCzMdgnk9A4ELAp4-755kXscYZg@mail.gmail.com>

http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means

<http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means>Doesn't
look like it's an ANTLR problem. Check the data type of value.

On Sat, May 14, 2011 at 8:50 AM, Dominik Halfkann <
dominik.halfkann at googlemail.com> wrote:

> Hello everybody,
>
> I have a problem with ANTLR and I hope it's ok that I'm asking that here. I
> also posted something in the forum, but it seems to be very inactive
> depending on other posts I saw there...
>
> (from http://www.jguru.com/forums/view.jsp?EID=1639158)
> When I want to debug/compile my grammar, I allways get the error message:
>
> [14:03:38] D:\[...]\ANTLR Parser\output\SGLParser.java:2532: int
> cannot be dereferenced
> [14:03:38]                       value =
> Integer.parseInt((i!=null?i.getText():null));
>
> I don't have an explanation for that, maybe someone can help me here. Here
> are the important code fragments:
>
> grammar SGL;
> options {
>        backtrack = true;
>        memoize = true;
> }
>
> [...]
>
> mathAtom returns [int value]
>    :   '(' e=mathExpression ')' {$value = $e.value;}
>    |   i=Integer {$value = Integer.parseInt($i.text);}
>    ;
>
> [...]
>
> Integer
>    :   '0'..'9'+
>    ;
>
>
> Thank you in advance
>
> Dominik
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From dominik.halfkann at googlemail.com  Sat May 14 14:45:18 2011
From: dominik.halfkann at googlemail.com (Dominik Halfkann)
Date: Sat, 14 May 2011 23:45:18 +0200
Subject: [antlr-interest] Problem while compiling/debugging: int cannot
	be dereferenced
In-Reply-To: <BANLkTinegMuyvtZo81NMP50Yk9tg5gucww@mail.gmail.com>
References: <BANLkTinQFO4jcrAgmJrm9QGV1H4==31PoA@mail.gmail.com>
	<BANLkTi=pCzMdgnk9A4ELAp4-755kXscYZg@mail.gmail.com>
	<BANLkTinegMuyvtZo81NMP50Yk9tg5gucww@mail.gmail.com>
Message-ID: <BANLkTi=en8hJASoXHtqcjtjwTr-DaJ2e0w@mail.gmail.com>

Here are the generated java parts. But I think it's weird, if it's not an
ANTLR problem, that would mean ANTLR builts java-files with errors, doesn't
it? :o
Moreover, I've copy-pasted this gramma part from an example (
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator), so this
shouldn't happen at all. :(
I will check the problem with eclipse late on, but It's weird that the
generated .java is incorrect imo.

public final int mathAtom() throws RecognitionException {
    int value = 0;
    Token i=null;
    int e = 0;

    [...]
    i=(Token)match(input,Integer,FOLLOW_Integer_in_mathAtom984); if
(state.failed) return value;
    [...]
    value = Integer.parseInt((i!=null?i.getText():null));
    [...]
}

2011/5/14 Jeff Hair <knifed at gmail.com>

> http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means
>
> <http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means>Doesn't
> look like it's an ANTLR problem. Check the data type of value.
>
> On Sat, May 14, 2011 at 8:50 AM, Dominik Halfkann <
> dominik.halfkann at googlemail.com> wrote:
>
>> Hello everybody,
>>
>> I have a problem with ANTLR and I hope it's ok that I'm asking that here.
>> I
>> also posted something in the forum, but it seems to be very inactive
>> depending on other posts I saw there...
>>
>> (from http://www.jguru.com/forums/view.jsp?EID=1639158)
>> When I want to debug/compile my grammar, I allways get the error message:
>>
>> [14:03:38] D:\[...]\ANTLR Parser\output\SGLParser.java:2532: int
>> cannot be dereferenced
>> [14:03:38]                       value =
>> Integer.parseInt((i!=null?i.getText():null));
>>
>> I don't have an explanation for that, maybe someone can help me here. Here
>> are the important code fragments:
>>
>> grammar SGL;
>> options {
>>        backtrack = true;
>>        memoize = true;
>> }
>>
>> [...]
>>
>> mathAtom returns [int value]
>>    :   '(' e=mathExpression ')' {$value = $e.value;}
>>    |   i=Integer {$value = Integer.parseInt($i.text);}
>>    ;
>>
>> [...]
>>
>> Integer
>>    :   '0'..'9'+
>>    ;
>>
>>
>> Thank you in advance
>>
>> Dominik
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From jbb at acm.org  Sat May 14 15:06:56 2011
From: jbb at acm.org (John B. Brodie)
Date: Sat, 14 May 2011 18:06:56 -0400
Subject: [antlr-interest] Problem while compiling/debugging: int cannot
 be dereferenced
In-Reply-To: <BANLkTi=en8hJASoXHtqcjtjwTr-DaJ2e0w@mail.gmail.com>
References: <BANLkTinQFO4jcrAgmJrm9QGV1H4==31PoA@mail.gmail.com>
	<BANLkTi=pCzMdgnk9A4ELAp4-755kXscYZg@mail.gmail.com>
	<BANLkTinegMuyvtZo81NMP50Yk9tg5gucww@mail.gmail.com>
	<BANLkTi=en8hJASoXHtqcjtjwTr-DaJ2e0w@mail.gmail.com>
Message-ID: <1305410816.3302.3.camel@gecko>

You have chosen a rule name that clashes with a Java class name, e.g.
Integer.

Select another name for your current Integer lexer rule.

In my opinion this is not an ANTLR problem, rather it is a user error.

On Sat, 2011-05-14 at 23:45 +0200, Dominik Halfkann wrote:
> Here are the generated java parts. But I think it's weird, if it's not an
> ANTLR problem, that would mean ANTLR builts java-files with errors, doesn't
> it? :o
> Moreover, I've copy-pasted this gramma part from an example (
> http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator), so this
> shouldn't happen at all. :(
> I will check the problem with eclipse late on, but It's weird that the
> generated .java is incorrect imo.
> 
> public final int mathAtom() throws RecognitionException {
>     int value = 0;
>     Token i=null;
>     int e = 0;
> 
>     [...]
>     i=(Token)match(input,Integer,FOLLOW_Integer_in_mathAtom984); if
> (state.failed) return value;
>     [...]
>     value = Integer.parseInt((i!=null?i.getText():null));
>     [...]
> }
> 
> 2011/5/14 Jeff Hair <knifed at gmail.com>
> 
> > http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means
> >
> > <http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means>Doesn't
> > look like it's an ANTLR problem. Check the data type of value.
> >
> > On Sat, May 14, 2011 at 8:50 AM, Dominik Halfkann <
> > dominik.halfkann at googlemail.com> wrote:
> >
> >> Hello everybody,
> >>
> >> I have a problem with ANTLR and I hope it's ok that I'm asking that here.
> >> I
> >> also posted something in the forum, but it seems to be very inactive
> >> depending on other posts I saw there...
> >>
> >> (from http://www.jguru.com/forums/view.jsp?EID=1639158)
> >> When I want to debug/compile my grammar, I allways get the error message:
> >>
> >> [14:03:38] D:\[...]\ANTLR Parser\output\SGLParser.java:2532: int
> >> cannot be dereferenced
> >> [14:03:38]                       value =
> >> Integer.parseInt((i!=null?i.getText():null));
> >>
> >> I don't have an explanation for that, maybe someone can help me here. Here
> >> are the important code fragments:
> >>
> >> grammar SGL;
> >> options {
> >>        backtrack = true;
> >>        memoize = true;
> >> }
> >>
> >> [...]
> >>
> >> mathAtom returns [int value]
> >>    :   '(' e=mathExpression ')' {$value = $e.value;}
> >>    |   i=Integer {$value = Integer.parseInt($i.text);}
> >>    ;
> >>
> >> [...]
> >>
> >> Integer
> >>    :   '0'..'9'+
> >>    ;
> >>
> >>
> >> Thank you in advance
> >>
> >> Dominik
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From Philip.Moetteli at tele2.ch  Sat May 14 15:09:38 2011
From: Philip.Moetteli at tele2.ch (=?iso-8859-1?Q?Philip_M=F6tteli?=)
Date: Sun, 15 May 2011 00:09:38 +0200
Subject: [antlr-interest] Return Values
Message-ID: <C19D2B37-B7A6-4719-A004-797895B41AC0@tele2.ch>

Hi,


I know, how to access a return value from a parser rule/token: By calling "$rule.returnValue". E. g:

parserRule0	:	parserRule1
				{	DoSomethingWithTheReturnValue($parserRule1.returnValue);	}
			;


But how do I access the return value, if it's one of several options ('or'ed together):

parserRule0	:	aParserToken=( parserRule1 | parserRule2 | parserRule3 )
				{	// How do I access "$aParserToken.returnValue"?	}
			;


Thanks for any help


From dominik.halfkann at googlemail.com  Sat May 14 19:55:24 2011
From: dominik.halfkann at googlemail.com (Dominik Halfkann)
Date: Sun, 15 May 2011 04:55:24 +0200
Subject: [antlr-interest] Problem while compiling/debugging: int cannot
	be dereferenced
In-Reply-To: <1305410816.3302.3.camel@gecko>
References: <BANLkTinQFO4jcrAgmJrm9QGV1H4==31PoA@mail.gmail.com>
	<BANLkTi=pCzMdgnk9A4ELAp4-755kXscYZg@mail.gmail.com>
	<BANLkTinegMuyvtZo81NMP50Yk9tg5gucww@mail.gmail.com>
	<BANLkTi=en8hJASoXHtqcjtjwTr-DaJ2e0w@mail.gmail.com>
	<1305410816.3302.3.camel@gecko>
Message-ID: <BANLkTi=4oxytVJSNVav3cbzce_SVR=tEhg@mail.gmail.com>

You're absolutely right, sry I gave up so early on ANTLR. Now everything
works fine and I'm surprised how easy it is to work with it. Thank you for
your help!

2011/5/15 John B. Brodie <jbb at acm.org>

> You have chosen a rule name that clashes with a Java class name, e.g.
> Integer.
>
> Select another name for your current Integer lexer rule.
>
> In my opinion this is not an ANTLR problem, rather it is a user error.
>
> On Sat, 2011-05-14 at 23:45 +0200, Dominik Halfkann wrote:
> > Here are the generated java parts. But I think it's weird, if it's not an
> > ANTLR problem, that would mean ANTLR builts java-files with errors,
> doesn't
> > it? :o
> > Moreover, I've copy-pasted this gramma part from an example (
> > http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator), so this
> > shouldn't happen at all. :(
> > I will check the problem with eclipse late on, but It's weird that the
> > generated .java is incorrect imo.
> >
> > public final int mathAtom() throws RecognitionException {
> >     int value = 0;
> >     Token i=null;
> >     int e = 0;
> >
> >     [...]
> >     i=(Token)match(input,Integer,FOLLOW_Integer_in_mathAtom984); if
> > (state.failed) return value;
> >     [...]
> >     value = Integer.parseInt((i!=null?i.getText():null));
> >     [...]
> > }
> >
> > 2011/5/14 Jeff Hair <knifed at gmail.com>
> >
> > > http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means
> > >
> > > <
> http://www.coderanch.com/t/379354/java/java/int-not-dereferenced-means
> >Doesn't
> > > look like it's an ANTLR problem. Check the data type of value.
> > >
> > > On Sat, May 14, 2011 at 8:50 AM, Dominik Halfkann <
> > > dominik.halfkann at googlemail.com> wrote:
> > >
> > >> Hello everybody,
> > >>
> > >> I have a problem with ANTLR and I hope it's ok that I'm asking that
> here.
> > >> I
> > >> also posted something in the forum, but it seems to be very inactive
> > >> depending on other posts I saw there...
> > >>
> > >> (from http://www.jguru.com/forums/view.jsp?EID=1639158)
> > >> When I want to debug/compile my grammar, I allways get the error
> message:
> > >>
> > >> [14:03:38] D:\[...]\ANTLR Parser\output\SGLParser.java:2532: int
> > >> cannot be dereferenced
> > >> [14:03:38]                       value =
> > >> Integer.parseInt((i!=null?i.getText():null));
> > >>
> > >> I don't have an explanation for that, maybe someone can help me here.
> Here
> > >> are the important code fragments:
> > >>
> > >> grammar SGL;
> > >> options {
> > >>        backtrack = true;
> > >>        memoize = true;
> > >> }
> > >>
> > >> [...]
> > >>
> > >> mathAtom returns [int value]
> > >>    :   '(' e=mathExpression ')' {$value = $e.value;}
> > >>    |   i=Integer {$value = Integer.parseInt($i.text);}
> > >>    ;
> > >>
> > >> [...]
> > >>
> > >> Integer
> > >>    :   '0'..'9'+
> > >>    ;
> > >>
> > >>
> > >> Thank you in advance
> > >>
> > >> Dominik
> > >>
> > >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > >> Unsubscribe:
> > >>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >>
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
>

From passionist_81 at yahoo.co.uk  Sat May 14 20:36:40 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Sun, 15 May 2011 04:36:40 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <592627.25491.qm@web24810.mail.ird.yahoo.com>

http://xolirelu.t35.com/Lola_Walsh_5/

From bkiers at gmail.com  Sun May 15 07:11:41 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sun, 15 May 2011 16:11:41 +0200
Subject: [antlr-interest] Return Values
In-Reply-To: <C19D2B37-B7A6-4719-A004-797895B41AC0@tele2.ch>
References: <C19D2B37-B7A6-4719-A004-797895B41AC0@tele2.ch>
Message-ID: <BANLkTikRFXxR67MtWvtH-kdCEiBNZ3p9gg@mail.gmail.com>

Hi Philip,

You can't since aParserToken will be initialized as a
org.antlr.runtime.Token type.
You will have to do it (the hard way) like this:

parserRule0
  :  ( parserRule1
{DoSomethingWithTheReturnValue($parserRule1.returnValue);}
     | parserRule2
{DoSomethingWithTheReturnValue($parserRule2.returnValue);}
     | parserRule3
{DoSomethingWithTheReturnValue($parserRule3.returnValue);}
     )
  ;


Regards,

Bart.


On Sun, May 15, 2011 at 12:09 AM, Philip M?tteli
<Philip.Moetteli at tele2.ch>wrote:

> Hi,
>
>
> I know, how to access a return value from a parser rule/token: By calling
> "$rule.returnValue". E. g:
>
> parserRule0     :       parserRule1
>                                {
> DoSomethingWithTheReturnValue($parserRule1.returnValue);        }
>                        ;
>
>
> But how do I access the return value, if it's one of several options
> ('or'ed together):
>
> parserRule0     :       aParserToken=( parserRule1 | parserRule2 |
> parserRule3 )
>                                {       // How do I access
> "$aParserToken.returnValue"? }
>                        ;
>
>
> Thanks for any help
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jbb at acm.org  Sun May 15 09:13:50 2011
From: jbb at acm.org (John B. Brodie)
Date: Sun, 15 May 2011 12:13:50 -0400
Subject: [antlr-interest] Return Values
In-Reply-To: <BANLkTikRFXxR67MtWvtH-kdCEiBNZ3p9gg@mail.gmail.com>
References: <C19D2B37-B7A6-4719-A004-797895B41AC0@tele2.ch>
	<BANLkTikRFXxR67MtWvtH-kdCEiBNZ3p9gg@mail.gmail.com>
Message-ID: <1305476030.23096.7.camel@gecko>

Greetings!

On Sun, 2011-05-15 at 16:11 +0200, Bart Kiers wrote:
> Hi Philip,
> 
> You can't since aParserToken will be initialized as a
> org.antlr.runtime.Token type.
> You will have to do it (the hard way) like this:
> 
> parserRule0
>   :  ( parserRule1
> {DoSomethingWithTheReturnValue($parserRule1.returnValue);}
>      | parserRule2
> {DoSomethingWithTheReturnValue($parserRule2.returnValue);}
>      | parserRule3
> {DoSomethingWithTheReturnValue($parserRule3.returnValue);}
>      )
>   ;
> 

if your processing of the sub-rules' return value is more complicated
than just a simple method call you might want to keep a single action at
the end of the rule and gather up the return values along the way.

something like this (tested):

test_1 @init{ String a = "test_1"; }
   : (x_1{a=$x_1.retVal;} | y_1{a=$y_1.retVal;} | z_1{a=$z_1.retVal;})
      { System.out.println(a); } ;

x_1 returns [String retVal] : 'x' { $retVal = "x_1"; } ;
y_1 returns [String retVal] : 'y' { $retVal = "y_1"; } ;
z_1 returns [String retVal] : 'z' { $retVal = "z_1"; } ;

another possibility is to use a Scope.

note that I have not used Scopes very much, so I may be way off base
here.

something like this (tested, test rig attached):

test_2 scope { String retVal; } @init{ $test_2::retVal = "test_2"; }
   : (x_2 | y_2 | z_2) { System.out.println($test_2::retVal); } ;

x_2 : 'x' { $test_2::retVal = "x_2"; } ;
y_2 : 'y' { $test_2::retVal = "y_2"; } ;
z_2 : 'z' { $test_2::retVal = "z_2"; } ;

Hope this helps...
   -jbb

> 
> Regards,
> 
> Bart.
> 
> 
> On Sun, May 15, 2011 at 12:09 AM, Philip M?tteli
> <Philip.Moetteli at tele2.ch>wrote:
> 
> > Hi,
> >
> >
> > I know, how to access a return value from a parser rule/token: By calling
> > "$rule.returnValue". E. g:
> >
> > parserRule0     :       parserRule1
> >                                {
> > DoSomethingWithTheReturnValue($parserRule1.returnValue);        }
> >                        ;
> >
> >
> > But how do I access the return value, if it's one of several options
> > ('or'ed together):
> >
> > parserRule0     :       aParserToken=( parserRule1 | parserRule2 |
> > parserRule3 )
> >                                {       // How do I access
> > "$aParserToken.returnValue"? }
> >                        ;
> >
> >
> > Thanks for any help
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-------------- next part --------------
grammar Test;

options {
   output = AST;
   ASTLabelType = CommonTree;
}

// tokens { /* imaginary tokens go here */ }

@members {
   private static final String [] x = new String[] {
      "1 x y z",
      "2 x y z",
      "1 x y z 2 x y z"
   };

   public static void main(String [] args) {
      for( int i = 0; i < x.length; ++i ) {
         try {
            System.out.println("about to parse:`"+x[i]+"`");

            TestLexer lexer = new TestLexer(new ANTLRStringStream(x[i]));
            CommonTokenStream tokens = new CommonTokenStream(lexer);

            TestParser parser = new TestParser(tokens);
            TestParser.prog_return p_result = parser.prog();

            // System.out.format("the token stream:\%n");
            // for( int j = 0; j < tokens.size(); ++j ) {
            //    Token token = tokens.get(j);
            //    System.out.format("\%d: type = \%s, text = `\%s`\%n",
            //                      j,
            //                      tokenNames[token.getType()],
            //                      token.getText());
            // }

            CommonTree ast = p_result.tree;
            if( ast == null ) {
               System.out.println("resultant tree: is NULL");
            } else {
               System.out.println("resultant tree: " + ast.toStringTree());
            }
            System.out.println();
         } catch(Exception e) {
            e.printStackTrace();
         }
      }
   }
}

prog : test+ EOF! ;

test : ('1' test_1+) | ('2' test_2+);

// one possibility, not using scopes...
test_1 @init{ String a = "test_1"; }
   : ( x_1 {a=$x_1.retVal;} | y_1 {a=$y_1.retVal;} | z_1 {a=$z_1.retVal;} )
      { System.out.println(a); } ;

x_1 returns [String retVal] : 'x' { $retVal = "x_1"; } ;
y_1 returns [String retVal] : 'y' { $retVal = "y_1"; } ;
z_1 returns [String retVal] : 'z' { $retVal = "z_1"; } ;

test_2 scope { String retVal; } @init{ $test_2::retVal = "test_2"; }
   : (x_2 | y_2 | z_2) { System.out.println($test_2::retVal); } ;

x_2 : 'x' { $test_2::retVal = "x_2"; } ;
y_2 : 'y' { $test_2::retVal = "y_2"; } ;
z_2 : 'z' { $test_2::retVal = "z_2"; } ;

fragment DIGIT : '0'..'9';
fragment LETTER : 'a'..'z' | 'A'..'Z' ;

IDENT : LETTER ( LETTER | DIGIT | '_' )* ;
INT : DIGIT+ ;

WS  :   ( ' ' | '\t' | '\n' | '\r' )+ {$channel=HIDDEN;} ;


From ben.corne at gmail.com  Mon May 16 00:43:51 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Mon, 16 May 2011 09:43:51 +0200
Subject: [antlr-interest] Fragments for rewrite rules
Message-ID: <BANLkTi=TK+fAN-ihy0XMeTehGJdGN79wJQ@mail.gmail.com>

Hi

Below an example of me trying to use fragment lexer rules to use in rewrite
rules. But when I try this out in the interpreter:

- 'test bar', with a fragment rule AGTEST conflicting with reading 'test',
doesn't parse
- 'foo bar', where no fragmented rule conflicts with reading input, parses

I thought fragment rules only tokenize input when used by other lexer rules?
Besides using literals as tree roots, what other alternatives do I have for
rewriting to abstract grammar elements?

=============================
grammar Foo;

options {
  language = Java;
  output = AST;
  ASTLabelType=CommonTree;
}

program
: 'test' t=test
-> ^(AGTEST $t)
 | 'foo' t=test
-> ^(AGTEST $t)
;

test
: NAM
;

NAM
: LETTER ( LETTER | DIGIT )*
 ;

fragment AGTEST : 'test';

fragment LETTER
: 'a'..'z' | 'A'..'Z'
 ;
fragment DIGIT
: '0'..'9'
 ;
=============================

Regards,
Ben

From jbb at acm.org  Mon May 16 12:20:18 2011
From: jbb at acm.org (John B. Brodie)
Date: Mon, 16 May 2011 15:20:18 -0400
Subject: [antlr-interest] Fragments for rewrite rules
In-Reply-To: <BANLkTi=TK+fAN-ihy0XMeTehGJdGN79wJQ@mail.gmail.com>
References: <BANLkTi=TK+fAN-ihy0XMeTehGJdGN79wJQ@mail.gmail.com>
Message-ID: <1305573618.23307.14.camel@gecko>

Greetings!

On Mon, 2011-05-16 at 09:43 +0200, Ben Corne wrote:
> Hi
> 
> Below an example of me trying to use fragment lexer rules to use in rewrite
> rules. But when I try this out in the interpreter:
> 
> - 'test bar', with a fragment rule AGTEST conflicting with reading 'test',
> doesn't parse
> - 'foo bar', where no fragmented rule conflicts with reading input, parses
> 
> I thought fragment rules only tokenize input when used by other lexer rules?
> Besides using literals as tree roots, what other alternatives do I have for
> rewriting to abstract grammar elements?

I do not use ANTLRWorks so can not verify, but I think you have tripped
upon yet another quirk of the interpreter.  I suspect your example
grammar will work if you either use the debugger or use the command line
to tool, compile, and run your test rig.


You might also use a tokens {} section meta-syntax in your grammar to
define Imaginary Tokens. The tokens section goes after the options
section but before your first rule. It contains the names of the
Imaginary Tokens you want to define for use in tree construction.

So in your example, remove the fragment lexer rule and place this

tokens { AGTEST; }

after your options {}.


Also when you use an Imaginary Token in a tree rewrite expression, you
really should supply location information for that token so that
generation of meaningful error messages in later tree processing phases
becomes easier. Specify the location information as parameters to the
Imaginary Token in the rewrite expression. Something like:

program : x='test' t=test -> ^(AGTEST[$x,"AGTEST"] $t) ...........

the first parameter (e.g. the $x in this example) is a token from witch
the location information is extracted. the second parameter is a string
that is used when the tree is printed using the toString methods. the
second parameter is optional, when missing the $text field is extracted
from the first parameter.

Hope this helps...
   -jbb

> 
> =============================
> grammar Foo;
> 
> options {
>   language = Java;
>   output = AST;
>   ASTLabelType=CommonTree;
> }
> 
> program
> : 'test' t=test
> -> ^(AGTEST $t)
>  | 'foo' t=test
> -> ^(AGTEST $t)
> ;
> 
> test
> : NAM
> ;
> 
> NAM
> : LETTER ( LETTER | DIGIT )*
>  ;
> 
> fragment AGTEST : 'test';
> 
> fragment LETTER
> : 'a'..'z' | 'A'..'Z'
>  ;
> fragment DIGIT
> : '0'..'9'
>  ;
> =============================
> 
> Regards,
> Ben
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From stefika at gmail.com  Mon May 16 13:29:38 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Mon, 16 May 2011 15:29:38 -0500
Subject: [antlr-interest]  Antlr 3.3 upgrade woes
Message-ID: <BANLkTimh_CDoocRoAO45yPmYkbgefXOdXA@mail.gmail.com>

Hi folks,

I've finally upgraded my little interpreter from Antlr 3.1 to Antlr
3.3, but I'm getting different behavior in the treewalkers than I did
before and I'm not quite sure what to make of it. Specifically, I have
a rule for parsing if statements in my grammar. It's nothing fancy,
but here is a snippet:

IF condition = root_expression if_then = THEN
{
//do some processing on the expressions
process_this( $condition.eval.getType(), $condition.step);
}

What's odd, however, is that in  antlr 3.3, the values I pass into the
condition in my returns statement seem to be null under conditions
that I have not been able to ascertain. For example, in the "Object"
class in my language, I have the following method:

action Compare(Object object) returns CompareResult
        CompareResult result
        integer myHash = this:GetHashCode()
        integer oHash = object:GetHashCode()

        if(myHash < oHash) then
            result:result = result:SMALLER
        end else if myHash = oHash then
            result:result = result:EQUAL
        end else then
            result:result = result:LARGER
        end
        return result
    end

And Antlr fails when it tries to process if(myHash < oHash) then in
the tree walker. However, if I take basically the same code and place
it into another method (e.g., or call it from somewhere, adjust it,
really anything I've thought of), for example:

action Main
        CompareResult result
        integer myHash = this:GetHashCode()
        integer oHash = this:GetHashCode()
        if myHash < oHash then
        end
    end

The exact same comparison does not fail. So far as I can tell, both
work correctly in Antlr 3.1. So, a few questions:

1. Did anything change between these versions that might cause
something like this?

2. Did anything change with the way "returns" are done? I didn't
notice anything in the documentation, but my expression rules in the
tree grammar do lots of stuff like this:

expression	returns[ExpressionValue eval, ExecutionStep step]
	:
		NOT expr = expression
	{
		//do some processing
		$eval = result.getValue();
		$step = result.getStep();
	}
Do I need to change this to be 3.3 compatible in some way?

Any tips would be appreciated,

Stefik

From ben.corne at gmail.com  Tue May 17 06:14:10 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Tue, 17 May 2011 15:14:10 +0200
Subject: [antlr-interest] Automatic lists
Message-ID: <BANLkTikDvOmBNfdYQV3sgTNPcS35khm2Yw@mail.gmail.com>

Hi

I'm trying to create a rule looking like this:
==================================
statement
  : ( docs+=documentation )*
  ( def=definition -> ^(AGSTATEMENT $docs $def)
 | tdef=typedefinition -> ^(AGSTATEMENT $docs $tdef)
| imp=imports -> ^(AGSTATEMENT $docs $imp)
   // TODO: (variable EQL) => varassignment
   // TODO: (assignment) => assignment
 | exp=expression -> ^(AGSTATEMENT $exp $docs)
  ;
==================================

This rule should add a bunch of documentation constructs to each type of
statement. Testing with at least one documentation per statement, everything
works as expected.

Now the problem is that when I test statements without any documentation
added to a statement, the ANTLRworks debugger seems to stop after the first
such statement, refusing to go parse the folowing statements.

I suspect that it is because the $docs variable is never initialized since
nothing is added. How should I fix this?

Regards
Ben C.

From ben.corne at gmail.com  Tue May 17 06:44:24 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Tue, 17 May 2011 15:44:24 +0200
Subject: [antlr-interest] Automatic lists
In-Reply-To: <BANLkTikDvOmBNfdYQV3sgTNPcS35khm2Yw@mail.gmail.com>
References: <BANLkTikDvOmBNfdYQV3sgTNPcS35khm2Yw@mail.gmail.com>
Message-ID: <BANLkTimDbyZ1u_1p3bGRO-yt1iTrBQ=fLA@mail.gmail.com>

Found it in the definitive antlr guide: adding a ? behind $docs did the
trick.

2011/5/17 Ben Corne <ben.corne at gmail.com>

> Hi
>
> I'm trying to create a rule looking like this:
> ==================================
> statement
>   : ( docs+=documentation )*
>   ( def=definition -> ^(AGSTATEMENT $docs $def)
>  | tdef=typedefinition -> ^(AGSTATEMENT $docs $tdef)
> | imp=imports -> ^(AGSTATEMENT $docs $imp)
>    // TODO: (variable EQL) => varassignment
>    // TODO: (assignment) => assignment
>  | exp=expression -> ^(AGSTATEMENT $exp $docs)
>   ;
> ==================================
>
> This rule should add a bunch of documentation constructs to each type of
> statement. Testing with at least one documentation per statement, everything
> works as expected.
>
> Now the problem is that when I test statements without any documentation
> added to a statement, the ANTLRworks debugger seems to stop after the first
> such statement, refusing to go parse the folowing statements.
>
> I suspect that it is because the $docs variable is never initialized since
> nothing is added. How should I fix this?
>
> Regards
> Ben C.
>

From jbb at acm.org  Tue May 17 08:03:05 2011
From: jbb at acm.org (John B. Brodie)
Date: Tue, 17 May 2011 11:03:05 -0400
Subject: [antlr-interest] Automatic lists
In-Reply-To: <BANLkTimDbyZ1u_1p3bGRO-yt1iTrBQ=fLA@mail.gmail.com>
References: <BANLkTikDvOmBNfdYQV3sgTNPcS35khm2Yw@mail.gmail.com>
	<BANLkTimDbyZ1u_1p3bGRO-yt1iTrBQ=fLA@mail.gmail.com>
Message-ID: <1305644585.23385.2.camel@gecko>

Greetings!
On Tue, 2011-05-17 at 15:44 +0200, Ben Corne wrote:
> Found it in the definitive antlr guide: adding a ? behind $docs did the
> trick.

actually i think you want a * in the rewrite expression. 
test with 2 or more documentation constructs....

> 
> 2011/5/17 Ben Corne <ben.corne at gmail.com>
> 
> > Hi
> >
> > I'm trying to create a rule looking like this:
> > ==================================
> > statement
> >   : ( docs+=documentation )*
> >   ( def=definition -> ^(AGSTATEMENT $docs $def)
> >  | tdef=typedefinition -> ^(AGSTATEMENT $docs $tdef)
> > | imp=imports -> ^(AGSTATEMENT $docs $imp)
> >    // TODO: (variable EQL) => varassignment
> >    // TODO: (assignment) => assignment
> >  | exp=expression -> ^(AGSTATEMENT $exp $docs)
> >   ;
> > ==================================
> >
> > This rule should add a bunch of documentation constructs to each type of
> > statement. Testing with at least one documentation per statement, everything
> > works as expected.
> >
> > Now the problem is that when I test statements without any documentation
> > added to a statement, the ANTLRworks debugger seems to stop after the first
> > such statement, refusing to go parse the folowing statements.
> >
> > I suspect that it is because the $docs variable is never initialized since
> > nothing is added. How should I fix this?
> >
> > Regards
> > Ben C.
> >
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address




From jimi at temporal-wave.com  Tue May 17 08:30:36 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 May 2011 08:30:36 -0700
Subject: [antlr-interest] Automatic lists
In-Reply-To: <BANLkTimDbyZ1u_1p3bGRO-yt1iTrBQ=fLA@mail.gmail.com>
References: <BANLkTikDvOmBNfdYQV3sgTNPcS35khm2Yw@mail.gmail.com>
	<BANLkTimDbyZ1u_1p3bGRO-yt1iTrBQ=fLA@mail.gmail.com>
Message-ID: <9d526f6307c52acb14eb18a52702d4ce@mail.gmail.com>

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ben Corne
> Sent: Tuesday, May 17, 2011 6:44 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Automatic lists
>
> Found it in the definitive antlr guide: adding a ? behind $docs did the
> trick.

Actually you need to correct the cardinality of the list, not an element:

$docs* - 0 or more docs
$docs+ - 1 ot more docs
$docs  - 1 doc (no list)
$docs? - 0 or 1 docs (no list)

So, where you are using += you need to use the list versions of the
references.

Jim

> 2011/5/17 Ben Corne <ben.corne at gmail.com>
>
> > Hi
> >
> > I'm trying to create a rule looking like this:
> > ==================================
> > statement
> >   : ( docs+=documentation )*
> >   ( def=definition -> ^(AGSTATEMENT $docs $def)  |
> tdef=typedefinition
> > -> ^(AGSTATEMENT $docs $tdef)
> > | imp=imports -> ^(AGSTATEMENT $docs $imp)
> >    // TODO: (variable EQL) => varassignment
> >    // TODO: (assignment) => assignment  | exp=expression ->
> > ^(AGSTATEMENT $exp $docs)
> >   ;
> > ==================================
> >
> > This rule should add a bunch of documentation constructs to each type
> > of statement. Testing with at least one documentation per statement,
> > everything works as expected.
> >
> > Now the problem is that when I test statements without any
> > documentation added to a statement, the ANTLRworks debugger seems to
> > stop after the first such statement, refusing to go parse the
> folowing statements.
> >
> > I suspect that it is because the $docs variable is never initialized
> > since nothing is added. How should I fix this?
> >
> > Regards
> > Ben C.
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From misc.usage at gmail.com  Tue May 17 12:00:02 2011
From: misc.usage at gmail.com (Dilip Ranganathan)
Date: Tue, 17 May 2011 15:00:02 -0400
Subject: [antlr-interest] ANTLR C# port
Message-ID: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>

Hi

I have been banging my head with Sam Harwell's Antlr C# port since morning.

SO far I have managed to integrate grammar compilation with Visual Studio
2010 following the instructions on this page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

However I am stuck with something for the moment. A simple test driver
program I wrote to test the generated lexer/parser doesn't report any kind
of error when I pass invalid input. That is, the generated parser code is
eating the exception and the output window only shows that a few first
chance exceptions were generated. Now I added these exceptions to
Debug->Exceptions list in VS 2010 (under CLR) and that way I was able to
make the debugger break into the offending code but I can't believe this is
the way to do it? Shouldn't I be seeing something on the console or at least
as an exception I must be able to catch and display exactly what was wrong
with my input?

From jimi at temporal-wave.com  Tue May 17 13:55:56 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 17 May 2011 13:55:56 -0700
Subject: [antlr-interest] ANTLR C# port
In-Reply-To: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
References: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
Message-ID: <688bc702a6252d56925ac48d09d6cd4b@mail.gmail.com>

You should post your code as it is hard to see what you are doing wrong
just from your description.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Dilip Ranganathan
> Sent: Tuesday, May 17, 2011 12:00 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR C# port
>
> Hi
>
> I have been banging my head with Sam Harwell's Antlr C# port since
> morning.
>
> SO far I have managed to integrate grammar compilation with Visual
> Studio
> 2010 following the instructions on this page:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
>
> However I am stuck with something for the moment. A simple test driver
> program I wrote to test the generated lexer/parser doesn't report any
> kind of error when I pass invalid input. That is, the generated parser
> code is eating the exception and the output window only shows that a
> few first chance exceptions were generated. Now I added these
> exceptions to
> Debug->Exceptions list in VS 2010 (under CLR) and that way I was able
> to
> make the debugger break into the offending code but I can't believe
> this is the way to do it? Shouldn't I be seeing something on the
> console or at least as an exception I must be able to catch and display
> exactly what was wrong with my input?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From pat at pat.net  Tue May 17 15:37:22 2011
From: pat at pat.net (Patrick Niemeyer)
Date: Tue, 17 May 2011 17:37:22 -0500
Subject: [antlr-interest] ANTLR C# port
In-Reply-To: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
References: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
Message-ID: <CB8EC56C-B9C9-45FD-ADD1-FBF395EF60FA@pat.net>


Maybe this is relevant to you?

  http://stackoverflow.com/questions/36014/why-is-net-exception-not-caught-by-try-catch-block

Look at the "just my code" debugger option in VS.

Pat

On May 17, 2011, at 2:00 PM, Dilip Ranganathan wrote:

> Hi
> 
> I have been banging my head with Sam Harwell's Antlr C# port since morning.
> 
> SO far I have managed to integrate grammar compilation with Visual Studio
> 2010 following the instructions on this page:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
> 
> However I am stuck with something for the moment. A simple test driver
> program I wrote to test the generated lexer/parser doesn't report any kind
> of error when I pass invalid input. That is, the generated parser code is
> eating the exception and the output window only shows that a few first
> chance exceptions were generated. Now I added these exceptions to
> Debug->Exceptions list in VS 2010 (under CLR) and that way I was able to
> make the debugger break into the offending code but I can't believe this is
> the way to do it? Shouldn't I be seeing something on the console or at least
> as an exception I must be able to catch and display exactly what was wrong
> with my input?
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


Pat


From rr at fb.com  Tue May 17 15:55:22 2011
From: rr at fb.com (Rajesh Raman)
Date: Tue, 17 May 2011 22:55:22 +0000
Subject: [antlr-interest] Parsing "comment-like" sequences of arbitrary
	characters
Message-ID: <C9F84AEA.8E3C%rr@fb.com>

Hello ANTLR-ites,

I'm trying to parse an "options" structure, like the following:

options {
   foo {
      bar {
         ww: $32.50;
         xx: Jekyll & Hyde;
      }
      yy.zz: @15% p/a;
   }
}

(Please ignore the non-sensical values for ww, xx and yy.zz -- I'm just making a point, which will become clearer below).  This options structure will be followed by a query expression whose grammar is more complicated, and includes ints/floats, identifiers, operators, etc. etc.

The grammar I have for parsing the options structure looks like the below. (The grammar for the query language is complicated and therefore omitted.)

<snip>

// ... other stuff here
tokens {
   // ... other ad hoc token values
   OPTION;
   OPTION_BLOCK;
   OPTION_VALUE;
}

// ...

query_options
  : OPTIONS^ option_block
  ;

option_block
  : L_BRACE option_def* R_BRACE ->
    ^(OPTION_BLOCK option_def*)
  ;

option_def
  : option_name option_value ->
    ^(OPTION option_name option_value)
  ;

option_name
  : ID (DOT^ ID)*
  ;

option_value
  : COLON^ (~SEMICOLON)* SEMICOLON!
  | option_block
  ;

//... other stuff here
//...

OPTIONS: 'options';
ID: (LETTER | '_') (LETTER | DIGIT | '_')*;
DOT: '.';
L_BRACE: '{';
R_BRACE: '}';
COLON: ':';
SEMICOLON: ';';

SL_COMMENT: '#' ~('\r' | '\n')* NEWLINE { skip(); };
WS: (' ' | '\f' | '\r' | '\t')+ { skip(); };

...

</snip>

As mentioned, the "options" clause is part of a larger grammar for a language that includes operators, identifiers, numbers, etc.,  However, within the options clause, I want the characters between the colon and the semicolon to be treated as a single string, regardless of the fact that it may contain characters that lex into other tokens used by the language.  This feels like I should be able to use the same techniques as used in comment-stripping (i.e,. see the line that has COLON^...).  But this doesn't seem to work:
-  The "stray" characters that are not used elsewhere in the grammar are ignored and don't show up in the parse tree (e.g., $, @, %, &, in the example above)
-  Character sequences that form valid tokens for the rest of the language (like integers or identifiers) are lexed into those respective tokens instead of being slurped into a single string as intended.

E.g., when I input a string like "options { foo: $ %     1 2 45 ^ $ $$$; }" and display the resulting tree.toStringTree(), I get
"(options (OPTION_BLOCK (OPTION foo (: 1 2 45))))"

Any guidance you have on the above will be greatly appreciated.

Thanks in advance.

++Rajesh

From vedaswaroop.sanku at valuemomentum.biz  Tue May 17 23:16:42 2011
From: vedaswaroop.sanku at valuemomentum.biz (Veda Swaroop Sanku)
Date: Wed, 18 May 2011 11:46:42 +0530
Subject: [antlr-interest] IntelliSense, Auto suggest
Message-ID: <000c01cc1523$288ab780$8f65a8c0@VALUEMOMENTUM.BIZ>

 

Hi,

 

We are using ANTLR in our product development. We want to know if there is
any API in antlr which can provide the list of valid options (similar to
auto suggest) as and when the user is typing.

 

Thanks & Regards,

Swaroop.


From bkiers at gmail.com  Wed May 18 00:55:34 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 18 May 2011 09:55:34 +0200
Subject: [antlr-interest] Parsing "comment-like" sequences of arbitrary
	characters
In-Reply-To: <C9F84AEA.8E3C%rr@fb.com>
References: <AQHMFOWAbN9TpH8awU2ZdRuWUS1X/w==>
	<C9F84AEA.8E3C%rr@fb.com>
Message-ID: <BANLkTindFoku-EnthRAj2SKNL3hc2-c5wA@mail.gmail.com>

Hi Rajesh,

Inside a parser rule, the `~` negates tokens, not characters. So if you have
no lexer rule that tokenizes one of: '%', ''^' or '$', then ~SEMICOLON won't
match any of such tokens/characters.

Your grammar (with minor modifications):

grammar Test;

options {
  output=AST;
}

tokens {
  OPTION;
  OPTION_BLOCK;
}


query_options
 : OPTIONS^ option_block
 ;

option_block
 : L_BRACE option_def* R_BRACE -> ^(OPTION_BLOCK option_def*)
 ;

option_def
 : option_name option_value -> ^(OPTION option_name option_value)
 ;

option_name
 : ID (DOT^ ID)*
 ;

option_value
 : COLON^ (~SEMICOLON)* SEMICOLON!
 | option_block
 ;

OPTIONS : 'options';
ID: (LETTER | '_') (LETTER | DIGIT | '_')*;
DOLLAR: '$';
PERCENT: '%';
CARET: '^';
DOT: '.';
L_BRACE: '{';
R_BRACE: '}';
COLON: ':';
SEMICOLON: ';';
DIGIT : '0'..'9';
SL_COMMENT: '#' ~('\r' | '\n')* { skip(); };
WS: (' ' | '\f' | '\r' | '\t')+ { skip(); };
fragment LETTER : 'a'..'z' | 'A'..'Z';


parses the input: "options { foo: $ %     1 2 45 ^ $ $$$; }" as follows:

(options (OPTION_BLOCK (OPTION foo (: $ % 1 2 4 5 ^ $ $ $ $))))


as you can see after running the test rig:

import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import org.antlr.stringtemplate.*;

public class Main {
    public static void main(String[] args) throws Exception {
        ANTLRStringStream in = new ANTLRStringStream("options { foo: $ %
1 2 45 ^ $ $$$; }");
        TestLexer lexer = new TestLexer(in);
        CommonTokenStream tokens = new CommonTokenStream(lexer);
        TestParser parser = new TestParser(tokens);
        TestParser.query_options_return returnValue =
parser.query_options();
        CommonTree tree = (CommonTree)returnValue.getTree();
        DOTTreeGenerator gen = new DOTTreeGenerator();
        StringTemplate st = gen.toDOT(tree);
        System.out.println(st);
        System.out.println("-----------------------\n" +
tree.toStringTree());
    }
}


Regards,

Bart.


On Wed, May 18, 2011 at 12:55 AM, Rajesh Raman <rr at fb.com> wrote:

> Hello ANTLR-ites,
>
> I'm trying to parse an "options" structure, like the following:
>
> options {
>   foo {
>      bar {
>         ww: $32.50;
>         xx: Jekyll & Hyde;
>      }
>      yy.zz: @15% p/a;
>   }
> }
>
> (Please ignore the non-sensical values for ww, xx and yy.zz -- I'm just
> making a point, which will become clearer below).  This options structure
> will be followed by a query expression whose grammar is more complicated,
> and includes ints/floats, identifiers, operators, etc. etc.
>
> The grammar I have for parsing the options structure looks like the below.
> (The grammar for the query language is complicated and therefore omitted.)
>
> <snip>
>
> // ... other stuff here
> tokens {
>   // ... other ad hoc token values
>   OPTION;
>   OPTION_BLOCK;
>   OPTION_VALUE;
> }
>
> // ...
>
> query_options
>  : OPTIONS^ option_block
>  ;
>
> option_block
>  : L_BRACE option_def* R_BRACE ->
>    ^(OPTION_BLOCK option_def*)
>  ;
>
> option_def
>  : option_name option_value ->
>    ^(OPTION option_name option_value)
>  ;
>
> option_name
>  : ID (DOT^ ID)*
>  ;
>
> option_value
>  : COLON^ (~SEMICOLON)* SEMICOLON!
>  | option_block
>  ;
>
> //... other stuff here
> //...
>
> OPTIONS: 'options';
> ID: (LETTER | '_') (LETTER | DIGIT | '_')*;
> DOT: '.';
> L_BRACE: '{';
> R_BRACE: '}';
> COLON: ':';
> SEMICOLON: ';';
>
> SL_COMMENT: '#' ~('\r' | '\n')* NEWLINE { skip(); };
> WS: (' ' | '\f' | '\r' | '\t')+ { skip(); };
>
> ...
>
> </snip>
>
> As mentioned, the "options" clause is part of a larger grammar for a
> language that includes operators, identifiers, numbers, etc.,  However,
> within the options clause, I want the characters between the colon and the
> semicolon to be treated as a single string, regardless of the fact that it
> may contain characters that lex into other tokens used by the language.
>  This feels like I should be able to use the same techniques as used in
> comment-stripping (i.e,. see the line that has COLON^...).  But this doesn't
> seem to work:
> -  The "stray" characters that are not used elsewhere in the grammar are
> ignored and don't show up in the parse tree (e.g., $, @, %, &, in the
> example above)
> -  Character sequences that form valid tokens for the rest of the language
> (like integers or identifiers) are lexed into those respective tokens
> instead of being slurped into a single string as intended.
>
> E.g., when I input a string like "options { foo: $ %     1 2 45 ^ $ $$$; }"
> and display the resulting tree.toStringTree(), I get
> "(options (OPTION_BLOCK (OPTION foo (: 1 2 45))))"
>
> Any guidance you have on the above will be greatly appreciated.
>
> Thanks in advance.
>
> ++Rajesh
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ben.corne at gmail.com  Wed May 18 06:00:28 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Wed, 18 May 2011 15:00:28 +0200
Subject: [antlr-interest] Fragment rules inside parser rules
Message-ID: <BANLkTi=pwjohCK9+OZi6cyFcKpT3Kw_nLQ@mail.gmail.com>

Hello

Do I really need to make LKU in the example below a normal token rule or is
there a way to get this to work for the input '&foo;' not using literals
inside the parser rule or real tokens.
============================
grammar Foo;

program
: (LKU NAME ';')+
 ;
fragment LKU
: '&'
 ;
NAME
: ('a'..'z')*
 ;
=============================

Regards
Ben C.

From bkiers at gmail.com  Wed May 18 06:04:29 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Wed, 18 May 2011 15:04:29 +0200
Subject: [antlr-interest] Fragment rules inside parser rules
In-Reply-To: <BANLkTi=pwjohCK9+OZi6cyFcKpT3Kw_nLQ@mail.gmail.com>
References: <BANLkTi=pwjohCK9+OZi6cyFcKpT3Kw_nLQ@mail.gmail.com>
Message-ID: <BANLkTikB7+okAAVV8w=kMoaB-JGrjMDLYA@mail.gmail.com>

Hi Ben,

You cannot use fragment rules inside parser rules. So yes, you need to make
LKU a normal token. If you don't want that (for whatever reason), you need
to include the '&' in the 'NAME' rule:

NAME
  :  '&' ('a'..'z')+
  ;


Regards,

Bart.


On Wed, May 18, 2011 at 3:00 PM, Ben Corne <ben.corne at gmail.com> wrote:

> Hello
>
> Do I really need to make LKU in the example below a normal token rule or is
> there a way to get this to work for the input '&foo;' not using literals
> inside the parser rule or real tokens.
> ============================
> grammar Foo;
>
> program
> : (LKU NAME ';')+
>  ;
> fragment LKU
> : '&'
>  ;
> NAME
> : ('a'..'z')*
>  ;
> =============================
>
> Regards
> Ben C.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From stefika at gmail.com  Wed May 18 09:15:56 2011
From: stefika at gmail.com (Andreas Stefik)
Date: Wed, 18 May 2011 11:15:56 -0500
Subject: [antlr-interest] Antlr 3.3 upgrade woes
In-Reply-To: <BANLkTimh_CDoocRoAO45yPmYkbgefXOdXA@mail.gmail.com>
References: <BANLkTimh_CDoocRoAO45yPmYkbgefXOdXA@mail.gmail.com>
Message-ID: <BANLkTim0w+ihTOFmKEySp9Kpte5iy96-Jg@mail.gmail.com>

Well, I've rolled our trunk back to the 3.1 version of antlr and
everything works again. I still don't know why 3.3 is causing problems
on our project, but at least things are working.

Stefik

On Mon, May 16, 2011 at 3:29 PM, Andreas Stefik <stefika at gmail.com> wrote:
> Hi folks,
>
> I've finally upgraded my little interpreter from Antlr 3.1 to Antlr
> 3.3, but I'm getting different behavior in the treewalkers than I did
> before and I'm not quite sure what to make of it. Specifically, I have
> a rule for parsing if statements in my grammar. It's nothing fancy,
> but here is a snippet:
>
> IF condition = root_expression if_then = THEN
> {
> //do some processing on the expressions
> process_this( $condition.eval.getType(), $condition.step);
> }
>
> What's odd, however, is that in ?antlr 3.3, the values I pass into the
> condition in my returns statement seem to be null under conditions
> that I have not been able to ascertain. For example, in the "Object"
> class in my language, I have the following method:
>
> action Compare(Object object) returns CompareResult
> ? ? ? ?CompareResult result
> ? ? ? ?integer myHash = this:GetHashCode()
> ? ? ? ?integer oHash = object:GetHashCode()
>
> ? ? ? ?if(myHash < oHash) then
> ? ? ? ? ? ?result:result = result:SMALLER
> ? ? ? ?end else if myHash = oHash then
> ? ? ? ? ? ?result:result = result:EQUAL
> ? ? ? ?end else then
> ? ? ? ? ? ?result:result = result:LARGER
> ? ? ? ?end
> ? ? ? ?return result
> ? ?end
>
> And Antlr fails when it tries to process if(myHash < oHash) then in
> the tree walker. However, if I take basically the same code and place
> it into another method (e.g., or call it from somewhere, adjust it,
> really anything I've thought of), for example:
>
> action Main
> ? ? ? ?CompareResult result
> ? ? ? ?integer myHash = this:GetHashCode()
> ? ? ? ?integer oHash = this:GetHashCode()
> ? ? ? ?if myHash < oHash then
> ? ? ? ?end
> ? ?end
>
> The exact same comparison does not fail. So far as I can tell, both
> work correctly in Antlr 3.1. So, a few questions:
>
> 1. Did anything change between these versions that might cause
> something like this?
>
> 2. Did anything change with the way "returns" are done? I didn't
> notice anything in the documentation, but my expression rules in the
> tree grammar do lots of stuff like this:
>
> expression ? ? ?returns[ExpressionValue eval, ExecutionStep step]
> ? ? ? ?:
> ? ? ? ? ? ? ? ?NOT expr = expression
> ? ? ? ?{
> ? ? ? ? ? ? ? ?//do some processing
> ? ? ? ? ? ? ? ?$eval = result.getValue();
> ? ? ? ? ? ? ? ?$step = result.getStep();
> ? ? ? ?}
> Do I need to change this to be 3.3 compatible in some way?
>
> Any tips would be appreciated,
>
> Stefik
>

From ben.corne at gmail.com  Wed May 18 09:41:35 2011
From: ben.corne at gmail.com (Ben Corne)
Date: Wed, 18 May 2011 18:41:35 +0200
Subject: [antlr-interest] Antlr2 -> antlr 3 tree creation with rule argument
	as root
Message-ID: <BANLkTincBP0U7O+UVVVussQv3tAFeq1UOw@mail.gmail.com>

Hello

I've got this antlr2 rule which I'm trying to convert that goes like this:
================================================================
application![int tokenType, String tokenText]
    : c:canonical a:annotation { #application = #([tokenType,tokenText], c,
a); }
    ;
================================================================

My attempt is:
================================================================
application[int tokenType, String tokenText]
: c=canonical a=annotation -> ^({$tokenType;}[{$tokenText;}] $c $a)
 ;
================================================================
But the ANTLR3 parser returns the following errors:

syntax error: antlr: AmbientTalk.g:310:46: expecting RPAREN, found
'{$tokenText}'
syntax error: antlr: AmbientTalk.g:310:66: expecting SEMI, found ')'

Any thoughts / suggestions?

Regards
Ben C.

From cummings at kjchome.homeip.net  Wed May 18 10:40:27 2011
From: cummings at kjchome.homeip.net (Kevin J. Cummings)
Date: Wed, 18 May 2011 13:40:27 -0400
Subject: [antlr-interest] Antlr2 -> antlr 3 tree creation with rule
 argument as root
In-Reply-To: <BANLkTincBP0U7O+UVVVussQv3tAFeq1UOw@mail.gmail.com>
References: <BANLkTincBP0U7O+UVVVussQv3tAFeq1UOw@mail.gmail.com>
Message-ID: <4DD4048B.3050900@kjchome.homeip.net>

On 05/18/2011 12:41 PM, Ben Corne wrote:
> Hello
> 
> I've got this antlr2 rule which I'm trying to convert that goes like this:
> ================================================================
> application![int tokenType, String tokenText]
>     : c:canonical a:annotation { #application = #([tokenType,tokenText], c,
> a); }
>     ;
> ================================================================
> 
> My attempt is:
> ================================================================
> application[int tokenType, String tokenText]
> : c=canonical a=annotation -> ^({$tokenType;}[{$tokenText;}] $c $a)

I would try:

  : c=canonical a=annotation -> ^($tokenType [$tokenText] $c $a)
or
  : c=canonical a=annotation -> ^([$tokenType, $tokenText] $c $a)

I know the first one works when the $tokenType is replaced with a TOKEN
name constant, but I can only find such uses as GOTO["GOTO"] in my code.

The second case works when the first argument inside the [] is a token
reference (as in:
    t=TOKEN -> ^([$t, spelling] ....)
).

I'm not sure if the tool will take any integer in place of an actual
TOKEN name constant.  Certainly the runtime method that it gets
translated into will.  Look at the generated source code.  I'm using
C/C++, are you using JAVA?

>  ;
> ================================================================
> But the ANTLR3 parser returns the following errors:
> 
> syntax error: antlr: AmbientTalk.g:310:46: expecting RPAREN, found
> '{$tokenText}'
> syntax error: antlr: AmbientTalk.g:310:66: expecting SEMI, found ')'
> 
> Any thoughts / suggestions?
> 
> Regards
> Ben C.
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


-- 
Kevin J. Cummings
kjchome at verizon.net
cummings at kjchome.homeip.net
cummings at kjc386.framingham.ma.us
Registered Linux User #1232 (http://counter.li.org)

From hongyan99 at yahoo.com  Wed May 18 18:11:15 2011
From: hongyan99 at yahoo.com (iamhere)
Date: Wed, 18 May 2011 18:11:15 -0700 (PDT)
Subject: [antlr-interest] Problem with tree parser using ANTLR 3.x
Message-ID: <1305767475797-6380250.post@n2.nabble.com>

Hi,

I'm newbie with ANTLR and is currently working on a ANTLR parser. The parser
grammar worked just fine. It created a tree that looked right. But when I
tried to walk the tree with my tree grammar, it failed. I hope that someone
here could help. Any help is appreciated!

The script language I'm working on has the following structure:

assignment or expression<new line>
assignment or expression<new line>
assignment or expression<new line>
....

where assignment is like
identifier = expression

My parser grammar is:

-----------------------------------------------------------------------------
grammar myscript;

options {
language = Java;
output = AST;
ASTLabelType = CommonTree;
}

tokens {
NEGATION;
NEXT;
}

@header {
package a.b.c;
}

@lexer::header {
package a.b.c;
}

codeFragment
: (next!)? statement (next! statement)* EOF
;


next
: ('\r' | '\n' )+ -> NEXT 
;

statement
: expression
| assignment;

assignment
: IDENT '='^ expression
;

term
: INTEGER
| IDENT
| '('! expression ')'!
;

negate
: '!'^* term
;

unary
: ('+'! | negation^)* negate
;

negation
: '-' -> NEGATION
;

mult
: unary (('*'^ | '/'^) unary)*
;

add
: mult (('+'^ | '-'^) mult)*
;

relation
: add (('=='^ | '<'^ | '<='^ | '>'^ | '>='^) add)*
;

expression
: relation (('&'^ | '&&'^ | '|'^ | '||'^) relation)*
;

INTEGER: '0' | '1'..'9' DIGIT* 'L'? | '0x' DIGIT+ 'L'?;
IDENT: LETTER (LETTER | DIGIT)*;
WS: (' ' | '\t' | '\f')+ {$channel = HIDDEN;};
COMMENT: '#' .* ('\n'|'r') {$channel=HIDDEN;};

fragment DIGIT: '0'..'9';
fragment LETTER: ('a'..'z' | 'A'..'Z');
-----------------------------------------------------------------------------

The tree walker grammar is:
-----------------------------------------------------------------------------
tree grammar CodeFragWalker;

options {
language = Java;
tokenVocab = myscript;
ASTLabelType = CommonTree;
output = AST;
}

@header {
package a.b.c;
}

evaluator returns [String result]
: (assignment | expression)* EOF!
;

assignment returns [int result]
: ^('=' IDENT expression)
;

expression returns [int result]
: ^('+' expression expression)
| ^('-' expression expression)
| ^('*' expression expression)
| ^('/' expression expression)
| ^(NEGATION expression)
| IDENT
| INTEGER
;
-----------------------------------------------------------------------------

The tree output from the parser is:
(= a (* (* 3 (+ 2 3)) 2)) (= b (+ 3 5)) (+ a b) (+ 1 2) <EOF>

The error I'm getting when running the following is :

node from line 2:1 mismatched tree node: = expecting EOF

The code:
-----------------------------------------------------------------------------
CharStream charStream = new ANTLRStringStream("\na=3*(2+3)*2\r\n\r\n" + 
"b=3+5\r" + 
"a+b\n" +
"1+2");
myscriptLexer lexer = new myscriptLexer(charStream);
TokenStream tokenStream = new CommonTokenStream(lexer);
myscriptParser parser = new myscriptParser(tokenStream);
codeFragment_return fragment = parser.codeFragment();
CommonTree tree = fragment.tree;
System.out.println(tree.toStringTree());
CommonTreeNodeStream nodeStream = new CommonTreeNodeStream(tree);
CodeFragWalker walker = new CodeFragWalker(nodeStream);
walker.evaluator();
-----------------------------------------------------------------------------


--
View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-tree-parser-using-ANTLR-3-x-tp6380250p6380250.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sharwell at pixelminegames.com  Thu May 19 02:52:54 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Thu, 19 May 2011 17:52:54 +0800
Subject: [antlr-interest] ANTLR C# port
In-Reply-To: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
References: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
Message-ID: <000b01cc160a$8a2757e0$9e7607a0$@pixelminegames.com>

My initial guess is the exceptions are being thrown in the lexer. By
default, the implementation of NextToken in the lexer catches any
RecognitionException and handles it by skipping the invalid token. Custom
handling of the exception depends on exactly what you're trying to
accomplish. One way to start is adding the following rule to the end of your
lexer, which passes the invalid tokens to the lexer for handling.

INVALID_CHAR : . ;

Sam

-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dilip Ranganathan
Sent: Wednesday, May 18, 2011 3:00 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR C# port

Hi

I have been banging my head with Sam Harwell's Antlr C# port since morning.

SO far I have managed to integrate grammar compilation with Visual Studio
2010 following the instructions on this page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

However I am stuck with something for the moment. A simple test driver
program I wrote to test the generated lexer/parser doesn't report any kind
of error when I pass invalid input. That is, the generated parser code is
eating the exception and the output window only shows that a few first
chance exceptions were generated. Now I added these exceptions to
Debug->Exceptions list in VS 2010 (under CLR) and that way I was able to
make the debugger break into the offending code but I can't believe this is
the way to do it? Shouldn't I be seeing something on the console or at least
as an exception I must be able to catch and display exactly what was wrong
with my input?

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dominik.halfkann at googlemail.com  Thu May 19 05:46:17 2011
From: dominik.halfkann at googlemail.com (Dominik Halfkann)
Date: Thu, 19 May 2011 14:46:17 +0200
Subject: [antlr-interest] Parsing self-defined methods
Message-ID: <BANLkTimWLt7hUw44RXeWoSbZzjZPDg54OA@mail.gmail.com>

I searched for this in the mailing list, and didn't find something, although
I'm wondering why nobody had this question before:

Is it possible to define functions/methods in the DSL and let ANTLR parse
it?

Input:
int myMethod(int i) {
    return i + 2;
}

int t = myMethod(2);
print(t);

Output:
4

Can ANTLR "jump" to the method, if it's called, or do i have to make like 2
parsers, one for first searching for methods and the second one for
executing the commands? Or is there any different way on how to do such
things?

Any help is appreciated.

From misc.usage at gmail.com  Thu May 19 12:58:05 2011
From: misc.usage at gmail.com (Dilip Ranganathan)
Date: Thu, 19 May 2011 15:58:05 -0400
Subject: [antlr-interest] ANTLR C# port
In-Reply-To: <000b01cc160a$8a2757e0$9e7607a0$@pixelminegames.com>
References: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>
	<000b01cc160a$8a2757e0$9e7607a0$@pixelminegames.com>
Message-ID: <BANLkTi=ZZ63nOZEmRFYecSYi-m_WgKR76A@mail.gmail.com>

I may have miscommunicated something here. I have a very simple "Hello
World!" style grammar that I wrote to learn ANTLR. I deliberately fed the
lexer/parser wrong input to see what happens. I can see this exception being
caught by the parser (I forced the debugger to break into this exception by
explicitly listing this exception under Debug->Exceptions list in VS2010).
But the outer client code that fires off the parser (using ANTLRStringStream
and friends) is bracketed by try/catch blocks but never gets anything. This
probably makes sense if library code is eating those exceptions but if it
does, how can client code know something went wrong?


On Thu, May 19, 2011 at 5:52 AM, Sam Harwell <sharwell at pixelminegames.com>wrote:

> My initial guess is the exceptions are being thrown in the lexer. By
> default, the implementation of NextToken in the lexer catches any
> RecognitionException and handles it by skipping the invalid token. Custom
> handling of the exception depends on exactly what you're trying to
> accomplish. One way to start is adding the following rule to the end of
> your
> lexer, which passes the invalid tokens to the lexer for handling.
>
> INVALID_CHAR : . ;
>
> Sam
>
> -----Original Message-----
> From: antlr-interest-bounces at antlr.org
> [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dilip Ranganathan
> Sent: Wednesday, May 18, 2011 3:00 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] ANTLR C# port
>
> Hi
>
> I have been banging my head with Sam Harwell's Antlr C# port since morning.
>
> SO far I have managed to integrate grammar compilation with Visual Studio
> 2010 following the instructions on this page:
> http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases
>
> However I am stuck with something for the moment. A simple test driver
> program I wrote to test the generated lexer/parser doesn't report any kind
> of error when I pass invalid input. That is, the generated parser code is
> eating the exception and the output window only shows that a few first
> chance exceptions were generated. Now I added these exceptions to
> Debug->Exceptions list in VS 2010 (under CLR) and that way I was able to
> make the debugger break into the offending code but I can't believe this is
> the way to do it? Shouldn't I be seeing something on the console or at
> least
> as an exception I must be able to catch and display exactly what was wrong
> with my input?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From hongyan99 at yahoo.com  Thu May 19 13:08:06 2011
From: hongyan99 at yahoo.com (iamhere)
Date: Thu, 19 May 2011 13:08:06 -0700 (PDT)
Subject: [antlr-interest] Problem with tree parser using ANTLR 3.x
In-Reply-To: <1305767475797-6380250.post@n2.nabble.com>
References: <1305767475797-6380250.post@n2.nabble.com>
Message-ID: <1305835686140-6383535.post@n2.nabble.com>

I have stumbled on the solution to this issue although I am still not clear
what was causing it. It turns out that the problem is related to the fact
that I had my grammar files in a folder other than the package where the
code is output to. My grammar file was at \antlrscripts, but the code was
generated and output to \a\b\c. Once I moved the grammar files to \a\b\c,
the error went away! Coult this be a bug in ANTLR? I tried ANTLR 3.1, 3.2,
and 3.3 and they all behave the same on this.

--
View this message in context: http://antlr.1301665.n2.nabble.com/Problem-with-tree-parser-using-ANTLR-3-x-tp6380250p6383535.html
Sent from the ANTLR mailing list archive at Nabble.com.

From sharwell at pixelminegames.com  Thu May 19 13:42:52 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Fri, 20 May 2011 04:42:52 +0800
Subject: [antlr-interest] ANTLR C# port
In-Reply-To: <BANLkTi=ZZ63nOZEmRFYecSYi-m_WgKR76A@mail.gmail.com>
References: <BANLkTikc_VZK6cfg4mm1b-Jsn=tFeahzsg@mail.gmail.com>	<000b01cc160a$8a2757e0$9e7607a0$@pixelminegames.com>
	<BANLkTi=ZZ63nOZEmRFYecSYi-m_WgKR76A@mail.gmail.com>
Message-ID: <000d01cc1665$5682c360$03884a20$@pixelminegames.com>

After the debugger stops where the exception is thrown, you can use the Step
Over command to step over each catch and finally block until the exception
is handled. Can you check this and let me know which catch block is actually
handling the exception?

 

 

From: Dilip Ranganathan [mailto:misc.usage at gmail.com] 
Sent: Friday, May 20, 2011 3:58 AM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] ANTLR C# port

 

 

I may have miscommunicated something here. I have a very simple "Hello
World!" style grammar that I wrote to learn ANTLR. I deliberately fed the
lexer/parser wrong input to see what happens. I can see this exception being
caught by the parser (I forced the debugger to break into this exception by
explicitly listing this exception under Debug->Exceptions list in VS2010).
But the outer client code that fires off the parser (using ANTLRStringStream
and friends) is bracketed by try/catch blocks but never gets anything. This
probably makes sense if library code is eating those exceptions but if it
does, how can client code know something went wrong?

 

 

On Thu, May 19, 2011 at 5:52 AM, Sam Harwell <sharwell at pixelminegames.com>
wrote:

My initial guess is the exceptions are being thrown in the lexer. By
default, the implementation of NextToken in the lexer catches any
RecognitionException and handles it by skipping the invalid token. Custom
handling of the exception depends on exactly what you're trying to
accomplish. One way to start is adding the following rule to the end of your
lexer, which passes the invalid tokens to the lexer for handling.

INVALID_CHAR : . ;

Sam


-----Original Message-----
From: antlr-interest-bounces at antlr.org
[mailto:antlr-interest-bounces at antlr.org] On Behalf Of Dilip Ranganathan

Sent: Wednesday, May 18, 2011 3:00 AM

To: antlr-interest at antlr.org
Subject: [antlr-interest] ANTLR C# port

Hi

I have been banging my head with Sam Harwell's Antlr C# port since morning.

SO far I have managed to integrate grammar compilation with Visual Studio
2010 following the instructions on this page:
http://www.antlr.org/wiki/display/ANTLR3/Antlr3CSharpReleases

However I am stuck with something for the moment. A simple test driver
program I wrote to test the generated lexer/parser doesn't report any kind
of error when I pass invalid input. That is, the generated parser code is
eating the exception and the output window only shows that a few first
chance exceptions were generated. Now I added these exceptions to
Debug->Exceptions list in VS 2010 (under CLR) and that way I was able to
make the debugger break into the offending code but I can't believe this is
the way to do it? Shouldn't I be seeing something on the console or at least
as an exception I must be able to catch and display exactly what was wrong
with my input?

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

 


From david.smith at cc.gatech.edu  Thu May 19 18:47:49 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Thu, 19 May 2011 21:47:49 -0400
Subject: [antlr-interest] Can't figure this one out
Message-ID: <E1QNErW-0004na-5b@elasmtp-spurfowl.atl.sa.earthlink.net>

I developed a tree parser by making minor changes to Scott 
Stanchfield's tutorial videos.  I don't know where to start looking 
to explain the problem.
Here are the pieces:

//                 The grammar:
grammar GTMat;

options {
   language = Java;
   output=AST;
   ASTLabelType=CommonTree;
}

tokens {
         NEGATION;
}


@header {
   package parser;
}

@lexer::header {
   package parser;
}

script
         :       statement*
         ;

statement
         :       assignmentStatement
         ;

assignmentStatement
         :       IDENT GETS^ expression SEMI?
         ;

actualParameters
         :       expression (COMMA expression)*
         ;


// expressions -- fun time!

term
         :       (IDENT OPENP ) => IDENT '(' actualParameters ')'
         |       OPENP! expression CLOSEP!
         |       INTEGER
         |       IDENT
         ;


unary
         :       (PLUS! | negation^)* term
         ;

negation
         :       MINUS -> NEGATION
         ;

mult
         :       unary ((MULT^ | DIV^ ) unary)*
         ;

add
         :       mult ((PLUS^ | MINUS^) mult)*
         ;

relation
         :       add ((EQUALS^ | NOTEQ^ | LESS^ | LESSEQ^ | GT^ | GTEQ^) add)*
         ;

expression
         :       relation ((AND^ | OR^) relation)*
         ;

GETS    :       '=';
SWITCH  :       'switch';
CASE    :       'case';
OTHERWISE
         :       'otherwise';
IF      :       'if';
ELSE    :       'else';
ELSEIF  :       'elseif';
END     :       'end';
FOR     :       'for';
WHILE   :       'while';
ANS     :       'ans';
COMMA   :       ',';
OPENP   :       '(';
CLOSEP  :       ')';
NOT     :       '~';
SEMI    :       ';';
PLUS    :       '+';
MINUS   :       '-';
MULT    :       '*';
DIV     :       '/';
EQUALS  :       '==';
NOTEQ   :       '!=';
LESS    :       '<';
LESSEQ  :       '<=';
GT      :       '>';
GTEQ    :       '>=';
AND     :       '&&';
OR      :       '||';
SINGLE  :       '\'';

fragment LETTER : ('a'..'z' | 'A'..'Z') ;
fragment DIGIT : '0'..'9';
INTEGER : DIGIT+ ;
IDENT : LETTER (LETTER | DIGIT)*;
WS : (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;};
COMMENT : '%' .* ('\n'|'\r') {$channel = HIDDEN;};

// The Walker Grammar:
tree grammar EvaluatorWalker;

options {
   language = Java;
   tokenVocab = GTMat;
   ASTLabelType = CommonTree;
}

@header {
   package parser;
   import java.util.Map;
   import java.util.HashMap;
}

@members {
   private Map<String, Integer> variables = new HashMap<String, Integer>();
}

evaluator
         :       assignment* EOF
         ;

assignment
         :       ^('=' IDENT e=expression)
                         { variables.put($IDENT.text, e); }
         ;

expression returns [int result]
         :       ^('+' op1=expression op2=expression) { result = op1 + op2; }
         |       ^('-' op1=expression op2=expression) { result = op1 - op2; }
         |       ^('*' op1=expression op2=expression) { result = op1 * op2; }
         |       ^('/' op1=expression op2=expression) { result = op1 / op2; }
         |       ^(NEGATION e=expression)  { result = -e; }
         |       IDENT { result = variables.get($IDENT.text); }
         |       INTEGER { result = Integer.parseInt($INTEGER.text); }
         ;
// The Test Program:
package parser;

import org.antlr.runtime.ANTLRFileStream;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.TokenStream;
import org.antlr.runtime.tree.CommonTreeNodeStream;
import java.io.IOException;

public class Test4 {
         public static void main(String[] args)
                 throws RecognitionException, IOException {
                 CharStream stream =
                         new ANTLRFileStream("Test.m");
                 GTMatLexer lexer = new GTMatLexer(stream);
                 TokenStream tokenStream = new CommonTokenStream(lexer);
                 GTMatParser parser = new GTMatParser(tokenStream);
                 GTMatParser.script_return evaluator = parser.script();
                 System.out.println(evaluator.tree.toStringTree());
                 CommonTreeNodeStream nodeStream = new
                                      CommonTreeNodeStream(evaluator.tree);
                 EvaluatorWalker walker = new EvaluatorWalker(nodeStream);
                 walker.evaluator();
                 System.out.println("ok");
         }
}
// The input code:
x = 8
y = 2 + 3
ans = 3 * (-x + y) * 4

// When I run it, I get this:

(= x 8) (= y (+ 2 3))
C:<snip>src\parser\EvaluatorWalker.g: node from line 1:2 mismatched 
tree node: = expecting EOF
ok

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From bkiers at gmail.com  Thu May 19 23:12:32 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 20 May 2011 08:12:32 +0200
Subject: [antlr-interest] Can't figure this one out
In-Reply-To: <E1QNErW-0004na-5b@elasmtp-spurfowl.atl.sa.earthlink.net>
References: <E1QNErW-0004na-5b@elasmtp-spurfowl.atl.sa.earthlink.net>
Message-ID: <BANLkTikrsSGzPOcaK_LmiZmJ1pg7WQfJfA@mail.gmail.com>

Hi David,

Your parser does not handle:

ans = 3 * (-x + y) * 4


properly since `ans` is an ANS-token and not an IDENT-token. Therefor it
does not get matched by your `assignmentStatement` rule.

Also, you should probably add the EOF at the end of your `script` rule in
your combined grammar.

Regards,

Bart.


On Fri, May 20, 2011 at 3:47 AM, David Smith <david.smith at cc.gatech.edu>wrote:

> I developed a tree parser by making minor changes to Scott
> Stanchfield's tutorial videos.  I don't know where to start looking
> to explain the problem.
> Here are the pieces:
>
> //                 The grammar:
> grammar GTMat;
>
> options {
>   language = Java;
>   output=AST;
>   ASTLabelType=CommonTree;
> }
>
> tokens {
>         NEGATION;
> }
>
>
> @header {
>   package parser;
> }
>
> @lexer::header {
>   package parser;
> }
>
> script
>         :       statement*
>         ;
>
> statement
>         :       assignmentStatement
>         ;
>
> assignmentStatement
>         :       IDENT GETS^ expression SEMI?
>         ;
>
> actualParameters
>         :       expression (COMMA expression)*
>         ;
>
>
> // expressions -- fun time!
>
> term
>         :       (IDENT OPENP ) => IDENT '(' actualParameters ')'
>         |       OPENP! expression CLOSEP!
>         |       INTEGER
>         |       IDENT
>         ;
>
>
> unary
>         :       (PLUS! | negation^)* term
>         ;
>
> negation
>         :       MINUS -> NEGATION
>         ;
>
> mult
>         :       unary ((MULT^ | DIV^ ) unary)*
>         ;
>
> add
>         :       mult ((PLUS^ | MINUS^) mult)*
>         ;
>
> relation
>         :       add ((EQUALS^ | NOTEQ^ | LESS^ | LESSEQ^ | GT^ | GTEQ^)
> add)*
>         ;
>
> expression
>         :       relation ((AND^ | OR^) relation)*
>         ;
>
> GETS    :       '=';
> SWITCH  :       'switch';
> CASE    :       'case';
> OTHERWISE
>         :       'otherwise';
> IF      :       'if';
> ELSE    :       'else';
> ELSEIF  :       'elseif';
> END     :       'end';
> FOR     :       'for';
> WHILE   :       'while';
> ANS     :       'ans';
> COMMA   :       ',';
> OPENP   :       '(';
> CLOSEP  :       ')';
> NOT     :       '~';
> SEMI    :       ';';
> PLUS    :       '+';
> MINUS   :       '-';
> MULT    :       '*';
> DIV     :       '/';
> EQUALS  :       '==';
> NOTEQ   :       '!=';
> LESS    :       '<';
> LESSEQ  :       '<=';
> GT      :       '>';
> GTEQ    :       '>=';
> AND     :       '&&';
> OR      :       '||';
> SINGLE  :       '\'';
>
> fragment LETTER : ('a'..'z' | 'A'..'Z') ;
> fragment DIGIT : '0'..'9';
> INTEGER : DIGIT+ ;
> IDENT : LETTER (LETTER | DIGIT)*;
> WS : (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;};
> COMMENT : '%' .* ('\n'|'\r') {$channel = HIDDEN;};
>
> // The Walker Grammar:
> tree grammar EvaluatorWalker;
>
> options {
>   language = Java;
>   tokenVocab = GTMat;
>   ASTLabelType = CommonTree;
> }
>
> @header {
>   package parser;
>   import java.util.Map;
>   import java.util.HashMap;
> }
>
> @members {
>   private Map<String, Integer> variables = new HashMap<String, Integer>();
> }
>
> evaluator
>         :       assignment* EOF
>         ;
>
> assignment
>         :       ^('=' IDENT e=expression)
>                         { variables.put($IDENT.text, e); }
>         ;
>
> expression returns [int result]
>         :       ^('+' op1=expression op2=expression) { result = op1 + op2;
> }
>         |       ^('-' op1=expression op2=expression) { result = op1 - op2;
> }
>         |       ^('*' op1=expression op2=expression) { result = op1 * op2;
> }
>         |       ^('/' op1=expression op2=expression) { result = op1 / op2;
> }
>         |       ^(NEGATION e=expression)  { result = -e; }
>         |       IDENT { result = variables.get($IDENT.text); }
>         |       INTEGER { result = Integer.parseInt($INTEGER.text); }
>         ;
> // The Test Program:
> package parser;
>
> import org.antlr.runtime.ANTLRFileStream;
> import org.antlr.runtime.CharStream;
> import org.antlr.runtime.CommonTokenStream;
> import org.antlr.runtime.RecognitionException;
> import org.antlr.runtime.TokenStream;
> import org.antlr.runtime.tree.CommonTreeNodeStream;
> import java.io.IOException;
>
> public class Test4 {
>         public static void main(String[] args)
>                 throws RecognitionException, IOException {
>                 CharStream stream =
>                         new ANTLRFileStream("Test.m");
>                 GTMatLexer lexer = new GTMatLexer(stream);
>                 TokenStream tokenStream = new CommonTokenStream(lexer);
>                 GTMatParser parser = new GTMatParser(tokenStream);
>                 GTMatParser.script_return evaluator = parser.script();
>                 System.out.println(evaluator.tree.toStringTree());
>                 CommonTreeNodeStream nodeStream = new
>                                      CommonTreeNodeStream(evaluator.tree);
>                 EvaluatorWalker walker = new EvaluatorWalker(nodeStream);
>                 walker.evaluator();
>                 System.out.println("ok");
>         }
> }
> // The input code:
> x = 8
> y = 2 + 3
> ans = 3 * (-x + y) * 4
>
> // When I run it, I get this:
>
> (= x 8) (= y (+ 2 3))
> C:<snip>src\parser\EvaluatorWalker.g: node from line 1:2 mismatched
> tree node: = expecting EOF
> ok
>
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From massimiliano.masi at gmail.com  Fri May 20 01:11:34 2011
From: massimiliano.masi at gmail.com (massimiliano.masi at gmail.com)
Date: Fri, 20 May 2011 10:11:34 +0200
Subject: [antlr-interest] AST Question
Message-ID: <BANLkTi=dNsrUrHDEbR6xMZECUfhuAyNHbA@mail.gmail.com>

Hello All,

I'm more or less a newbie using antlr. I have a small issue on creating
the AST, using rewrite rules. I'm so sorry if this is a FAQ or similar! :)

I have the following productions (it's like an algebra with
3 operators with different priorities):

	
targetsExpr  : (category) ('CAND' targetsExpr)*
   ->^('CAND' category targetsExpr*)
 ;
category: (matchEl) ('OR' category)*
   -> ^('OR' matchEl category* )
 ;
matchEl : factor ('AND' factor)* ->^('AND' factor*)
 ;

factor
 : matchId OPAR targetValue COMMA targetName CPAR ->^('FAC' matchId
targetValue targetName)


The problem is that the AST created contains productions as:

CAND ->OR -> OR-> AND (FAC, FAC).

The second OR is created because the ``category'' production is passed
multiple times.

Is there a way to not create these kind of  rules?

You can see a sample of the AST created in
http://www.mascanc.net/~max/policy.pdf.



-- 
Massimiliano Masi

http://www.mascanc.net/~max

From p4rst2 at gmail.com  Fri May 20 01:28:20 2011
From: p4rst2 at gmail.com (preitz sharma)
Date: Fri, 20 May 2011 13:58:20 +0530
Subject: [antlr-interest] Error in the method specialStateTransition(int,
	IntStream)
Message-ID: <BANLkTi=6kxVbuqkuDv9=H6cgGEAS6NkfLA@mail.gmail.com>

Hi,
I need to develop a grammar with the following structure:

set <Param-Name> <Param-Val>

The grammar which I have developed is working fine except for one Problem:

-> If the Param-Val does not match the constraints defined for certain
Param_Name, then I need to throw an error.

    I am doing it like this:

    command:    SET ARRAYSIZE ( Int  {/*Process the arraysize*/}
                    | (.)+ {/*Display eror message*/})
                  ;
    Int:    ('0'..'9')+;
    Char:    ('a'..'z');
    SPL_CHARS  :  ('\U0000' .. '\UFFFF')+;

The problem is that I am getting an error: "The code of method
specialStateTransition(int, IntStream) is exceeding the 65535 bytes limit"
What should I do?
PS: The grammar which I have to write is pretty big.. If I make SPL_CHARS
:  ('\U0000' .. '\UFFFF')  then its working fine
Please suggest some solution..

Thanks
Preeti Sharma

From bkiers at gmail.com  Fri May 20 01:55:11 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 20 May 2011 10:55:11 +0200
Subject: [antlr-interest] AST Question
In-Reply-To: <BANLkTi=dNsrUrHDEbR6xMZECUfhuAyNHbA@mail.gmail.com>
References: <BANLkTi=dNsrUrHDEbR6xMZECUfhuAyNHbA@mail.gmail.com>
Message-ID: <BANLkTi=vyYdyZDg6Vd=TyWpeMBxKZMCHyA@mail.gmail.com>

Hi

Your rule:

targetsExpr
  :  category ('CAND' targetsExpr)* -> ^('CAND' category targetsExpr*)
  ;


is incorrect. You're always using `CAND` in your rewrite rule but that rule
could just match `category` only.

You'll probably want to do:

targetsExpr
  :  category ('CAND'^ targetsExpr)*
  ;

(Note the ^ after CAND which makes it the root)

Regards,

Bart.


On Fri, May 20, 2011 at 10:11 AM, massimiliano.masi at gmail.com <
massimiliano.masi at gmail.com> wrote:

> Hello All,
>
> I'm more or less a newbie using antlr. I have a small issue on creating
> the AST, using rewrite rules. I'm so sorry if this is a FAQ or similar! :)
>
> I have the following productions (it's like an algebra with
> 3 operators with different priorities):
>
>
> targetsExpr  : (category) ('CAND' targetsExpr)*
>   ->^('CAND' category targetsExpr*)
>  ;
> category: (matchEl) ('OR' category)*
>   -> ^('OR' matchEl category* )
>  ;
> matchEl : factor ('AND' factor)* ->^('AND' factor*)
>  ;
>
> factor
>  : matchId OPAR targetValue COMMA targetName CPAR ->^('FAC' matchId
> targetValue targetName)
>
>
> The problem is that the AST created contains productions as:
>
> CAND ->OR -> OR-> AND (FAC, FAC).
>
> The second OR is created because the ``category'' production is passed
> multiple times.
>
> Is there a way to not create these kind of  rules?
>
> You can see a sample of the AST created in
> http://www.mascanc.net/~max/policy.pdf.
>
>
>
> --
> Massimiliano Masi
>
> http://www.mascanc.net/~max
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Fri May 20 09:04:45 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Fri, 20 May 2011 09:04:45 -0700
Subject: [antlr-interest] Error in the method specialStateTransition(int,
	IntStream)
In-Reply-To: <BANLkTi=6kxVbuqkuDv9=H6cgGEAS6NkfLA@mail.gmail.com>
References: <BANLkTi=6kxVbuqkuDv9=H6cgGEAS6NkfLA@mail.gmail.com>
Message-ID: <6418b6b9fc75fa9829de715e0bec030b@mail.gmail.com>

SPL_CHARS  :  ('\U0000' .. '\UFFFF')+;


The '+' in this means match everything and keep matching everything. You
cannot use + here, you need:

SPL_CHARS  : .;

Then use SPL_CHARS+ in your grammar not (.)+

Though I think you would be better writing a small piece of code to
process this really; ANTLR is a bit overkill for "set x y"

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of preitz sharma
> Sent: Friday, May 20, 2011 1:28 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Error in the method
> specialStateTransition(int, IntStream)
>
> Hi,
> I need to develop a grammar with the following structure:
>
> set <Param-Name> <Param-Val>
>
> The grammar which I have developed is working fine except for one
> Problem:
>
> -> If the Param-Val does not match the constraints defined for certain
> Param_Name, then I need to throw an error.
>
>     I am doing it like this:
>
>     command:    SET ARRAYSIZE ( Int  {/*Process the arraysize*/}
>                     | (.)+ {/*Display eror message*/})
>                   ;
>     Int:    ('0'..'9')+;
>     Char:    ('a'..'z');
>     SPL_CHARS  :  ('\U0000' .. '\UFFFF')+;
>
> The problem is that I am getting an error: "The code of method
> specialStateTransition(int, IntStream) is exceeding the 65535 bytes
> limit"
> What should I do?
> PS: The grammar which I have to write is pretty big.. If I make
> SPL_CHARS
> :  ('\U0000' .. '\UFFFF')  then its working fine Please suggest some
> solution..
>
> Thanks
> Preeti Sharma
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From massimiliano.masi at gmail.com  Fri May 20 12:54:50 2011
From: massimiliano.masi at gmail.com (massimiliano.masi at gmail.com)
Date: Fri, 20 May 2011 21:54:50 +0200
Subject: [antlr-interest] AST Question
In-Reply-To: <BANLkTi=vyYdyZDg6Vd=TyWpeMBxKZMCHyA@mail.gmail.com>
References: <BANLkTi=dNsrUrHDEbR6xMZECUfhuAyNHbA@mail.gmail.com>
	<BANLkTi=vyYdyZDg6Vd=TyWpeMBxKZMCHyA@mail.gmail.com>
Message-ID: <BANLkTinKVGM2MfVtd=YoO+9S4pSmw5P9sw@mail.gmail.com>

Hi,

On Fri, May 20, 2011 at 10:55 AM, Bart Kiers <bkiers at gmail.com> wrote:
> targetsExpr
> ? : ?category ('CAND' targetsExpr)*?-> ^('CAND' category targetsExpr*)
> ? ;
>
> is incorrect. You're always using `CAND` in your rewrite rule but that rule
> could just match `category` only.
> You'll probably want to do:
>
> targetsExpr
> ? : ?category ('CAND'^ targetsExpr)*
> ? ;
>

Thank you for your answer! It works now! But I've another question now.
When I traverse the tree using this function (is there an example to
have a visitor
created by antlr?)

 public void visitTree(CommonTree t) throws Exception {
	if ( t != null ) {
	    for ( int i = 0; i < t.getChildCount(); i++ ) {

		
//		System.out.println(t.getChild(i).toString() + " type " +
t.getType() + " child type " + t.getChild(i).getType());
		visitNode(t);

		visitTree((CommonTree)t.getChild(i));

	    }
	}
    }

in the visitNode() I have the same token type as for the children. I
explain better:
If I have something like:

FAC->child(1),child(2), child(3)

the visitNode(t) is called 3 times with the same token type!

You can see the grammar here: http://www.mascanc.net/~max/xacml3.g

Thank you and best regards,

        Massimiliano
-- 
Massimiliano Masi

http://www.mascanc.net/~max

From bkiers at gmail.com  Fri May 20 13:56:36 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 20 May 2011 22:56:36 +0200
Subject: [antlr-interest] AST Question
In-Reply-To: <BANLkTinKVGM2MfVtd=YoO+9S4pSmw5P9sw@mail.gmail.com>
References: <BANLkTi=dNsrUrHDEbR6xMZECUfhuAyNHbA@mail.gmail.com>
	<BANLkTi=vyYdyZDg6Vd=TyWpeMBxKZMCHyA@mail.gmail.com>
	<BANLkTinKVGM2MfVtd=YoO+9S4pSmw5P9sw@mail.gmail.com>
Message-ID: <BANLkTikCUfENSsh-k3dV0zVZXu0PwfG7xg@mail.gmail.com>

On Fri, May 20, 2011 at 9:54 PM, massimiliano.masi at gmail.com <
massimiliano.masi at gmail.com> wrote:

> Hi,
>
> On Fri, May 20, 2011 at 10:55 AM, Bart Kiers <bkiers at gmail.com> wrote:
> > targetsExpr
> >   :  category ('CAND' targetsExpr)* -> ^('CAND' category targetsExpr*)
> >   ;
> >
> > is incorrect. You're always using `CAND` in your rewrite rule but that
> rule
> > could just match `category` only.
> > You'll probably want to do:
> >
> > targetsExpr
> >   :  category ('CAND'^ targetsExpr)*
> >   ;
> >
>
> Thank you for your answer! It works now! But I've another question now.
> When I traverse the tree using this function (is there an example to
> have a visitor
> created by antlr?)
>

Yes, this is typically what tree grammars are for. But you can also walk it
manually.
See:

http://www.antlr.org/article/1100569809276/use.tree.grammars.tml
http://www.antlr.org/article/1170602723163/treewalkers.html

Regards,

Bart.

From simon.marchi at polymtl.ca  Fri May 20 15:33:08 2011
From: simon.marchi at polymtl.ca (Simon Marchi)
Date: Fri, 20 May 2011 18:33:08 -0400
Subject: [antlr-interest] gUnit: Test of a parser rule always fail
Message-ID: <BANLkTinzWsHH8NZy6MmmwgjqbxUqpYqd=g@mail.gmail.com>

Hello !

I a trying to automatize the testing of my grammar using gUnit, but I
ran into the following problem: when I try to test a parser rule, the
input string is never recognized. The lexer rules can be tested
without problem. I made a simple example to illustrate:

Grammar file Cool.g:
	grammar Cool;

	options {language = Java;}
	@lexer::header {package a.b.c;}
	@header {package a.b.c;}

	// Parser rule
	fullName: FIRSTNAME LASTNAME;

	// Lexer tokens
	FIRSTNAME: 'SIMON';
	LASTNAME: 'MARCHI';

gUnit file Cool.gunit:
	gunit Cool;

	@header {package a.b.c;}

	// The test case
	fullName:
	  "SIMON MARCHI" OK

Normally, the test case should pass, since the input is part of the
grammar. I use the ANTLR plugin inside Eclipse, and pasting the input
("SIMON MARCHI") in the interactive interpreter tells me that it is
accepted by the rule fullName. However, the test fails. If I change
from OK to FAIL, then the test passes (obviously).

Is there anything I am doing wrong here ?

Thank you,

Simon

From researcher0x00 at gmail.com  Sat May 21 09:38:31 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Sat, 21 May 2011 12:38:31 -0400
Subject: [antlr-interest] Automated BNF text combinations generator with
	constraints
Message-ID: <BANLkTikuxFpBkdpLyc6+YtF9+BLT7KRvCg@mail.gmail.com>

I am sure this is an age old question and I did find some initial results on
Google.

I am looking for a program, preferably open source, that can generate all of
the text combinations for a given BNF. Obviously the program should allow
constraints to be set that limit such tings as number of characters in a
variable, number of variables in a type, number of terms, etc.

Specifically the grammar being tested is ISO 14882 2003, C++.

If none are found, has anyone attempted this using PROLOG?

Any comments or suggestions welcome.

Thanks Eric.

From david.smith at cc.gatech.edu  Sat May 21 10:14:14 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Sat, 21 May 2011 13:14:14 -0400
Subject: [antlr-interest] Collecting parameters
Message-ID: <E1QNpkl-0000Q3-P9@elasmtp-mealy.atl.sa.earthlink.net>

Your contributors have been very helpful with my novice questions, 
and I thank them.  Here's another:

I am trying to build an AST that processes text like:
           v4 = [1 2 3 4]
The following rule works:

term  :   (OPENB .+ CLOSEB) => OPENB vals CLOSEB
                                -> ^(VECTOR vals)
       |    OPENB CLOSEB        -> EMPTY_VECTOR
       |    DOUBLE
       |    ID
       |    '('! expr ')'!
       ;

vals returns [List items]
       :   vl+=expr (COMMA? vl+=expr)* {$items = $vl;}
       ;

but it produces tree nodes like:

(= v4 (VECTOR 1 2 3 4))
but I really want

(= v4 (VECTOR values))

where 'values' is some kind of Java collection like an ArrayList.

How do I do that?


David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From bkiers at gmail.com  Sat May 21 10:50:34 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Sat, 21 May 2011 19:50:34 +0200
Subject: [antlr-interest] Collecting parameters
In-Reply-To: <E1QNpkl-0000Q3-P9@elasmtp-mealy.atl.sa.earthlink.net>
References: <E1QNpkl-0000Q3-P9@elasmtp-mealy.atl.sa.earthlink.net>
Message-ID: <BANLkTik28P5tVDhY0YPQEGTPoAqZvWUCPg@mail.gmail.com>

Hi David,

Every root (or leaf) in the AST must be an instance of a `
org.antlr.runtime.tree.Tree`, so you can't create a node that is a
`java.util.List`.

By default, ANTLR creates its AST using `org.antlr.runtime.tree.CommonTree`
objects which inherits the `getChildren()` method from
`org.antlr.runtime.tree.BaseTree` which returns a List. This List contains
`CommonTree`'s. So your VECTOR root already has a method to get the children
`1,2,3,4`.

Regards,

Bart.


On Sat, May 21, 2011 at 7:14 PM, David Smith <david.smith at cc.gatech.edu>wrote:

> Your contributors have been very helpful with my novice questions,
> and I thank them.  Here's another:
>
> I am trying to build an AST that processes text like:
>           v4 = [1 2 3 4]
> The following rule works:
>
> term  :   (OPENB .+ CLOSEB) => OPENB vals CLOSEB
>                                -> ^(VECTOR vals)
>       |    OPENB CLOSEB        -> EMPTY_VECTOR
>       |    DOUBLE
>       |    ID
>       |    '('! expr ')'!
>       ;
>
> vals returns [List items]
>       :   vl+=expr (COMMA? vl+=expr)* {$items = $vl;}
>       ;
>
> but it produces tree nodes like:
>
> (= v4 (VECTOR 1 2 3 4))
> but I really want
>
> (= v4 (VECTOR values))
>
> where 'values' is some kind of Java collection like an ArrayList.
>
> How do I do that?
>
>
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Sat May 21 13:49:50 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 21 May 2011 13:49:50 -0700
Subject: [antlr-interest] gUnit: Test of a parser rule always fail
In-Reply-To: <BANLkTinzWsHH8NZy6MmmwgjqbxUqpYqd=g@mail.gmail.com>
References: <BANLkTinzWsHH8NZy6MmmwgjqbxUqpYqd=g@mail.gmail.com>
Message-ID: <17e5d7750f016bee0f146b5678462eaa@mail.gmail.com>

Your lexer does not cater for spaces.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Simon Marchi
> Sent: Friday, May 20, 2011 3:33 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] gUnit: Test of a parser rule always fail
>
> Hello !
>
> I a trying to automatize the testing of my grammar using gUnit, but I
> ran into the following problem: when I try to test a parser rule, the
> input string is never recognized. The lexer rules can be tested without
> problem. I made a simple example to illustrate:
>
> Grammar file Cool.g:
> 	grammar Cool;
>
> 	options {language = Java;}
> 	@lexer::header {package a.b.c;}
> 	@header {package a.b.c;}
>
> 	// Parser rule
> 	fullName: FIRSTNAME LASTNAME;
>
> 	// Lexer tokens
> 	FIRSTNAME: 'SIMON';
> 	LASTNAME: 'MARCHI';
>
> gUnit file Cool.gunit:
> 	gunit Cool;
>
> 	@header {package a.b.c;}
>
> 	// The test case
> 	fullName:
> 	  "SIMON MARCHI" OK
>
> Normally, the test case should pass, since the input is part of the
> grammar. I use the ANTLR plugin inside Eclipse, and pasting the input
> ("SIMON MARCHI") in the interactive interpreter tells me that it is
> accepted by the rule fullName. However, the test fails. If I change
> from OK to FAIL, then the test passes (obviously).
>
> Is there anything I am doing wrong here ?
>
> Thank you,
>
> Simon
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From meikel at meikel.at  Sun May 22 04:04:46 2011
From: meikel at meikel.at (Meikel)
Date: Sun, 22 May 2011 13:04:46 +0200
Subject: [antlr-interest] gUnit help needed
Message-ID: <000d01cc1870$1006d9f0$30148dd0$@at>

Hello,

 

I'm a beginner with ANTLR and with gUnit and need some help about gUnit. The
only documentation about gUnit I have is
http://www.antlr.org/wiki/display/ANTLR3/gUnit+-+Grammar+Unit+Testing

 

To get a better understanding of how gUnit works I created a really small
example which does not work correctly. I have a grammar for parsing language
{ a, A, b, B, ab, Ab, aB, AB } defined in a file Sample.g:

 

grammar Sample;

 

@header {

package parser;

}

 

@lexer::header {

package parser;

}

 

A : 'a' | 'A';

B : 'b' | 'B';

 

start : A

            | (A B)

            | B

            ;

 

Further I have some unit tests defined in file Sample.gunit:

 

gunit Sample;

@header{

      package parser;

}

 

 

A:

"a" OK

"A" OK

"b" FAIL

 

B:

"b" OK

"B" OK

"a" FAIL

 

start:

 

"a" OK

"ab" OK

 

When I run the tests using Maven (org.antlr:maven-gunit-plugin:3.3) with
ANTLR 3.3 I get the following failures:

 

-----------------------------------------------------------------------

executing testsuite for grammar:Sample with 8 tests

-----------------------------------------------------------------------

2 failures found:

test7 (start, line19) - 

expected: OK

actual: FAIL

 

test8 (start, line20) - 

expected: OK

actual: FAIL

 

 

Tests run: 8, Failures: 2

 

What is the reason for the last two tests (for rule "start:") failing?
Perhaps this is not a problem with the test case but the grammar doesn't
work as expected?

 

Cheers,

 

Meikel

 


From gustaf.j at gmail.com  Sun May 22 10:06:37 2011
From: gustaf.j at gmail.com (Gustaf Johansson)
Date: Sun, 22 May 2011 19:06:37 +0200
Subject: [antlr-interest] Q: Peek at token without consumeing
Message-ID: <BANLkTi=jekQFbqCTMoB6CD-Qzfwh23bA3g@mail.gmail.com>

Hi,

I have a tricky problem that i cant seem to get right.

I have a static semantics rule which says " ';' is optional if
preceding statement ends with '}' or the statement is last in list"
Basically meaning either have LA(-1) == '}' or LA(1) == '}' or we
should expect a ';'.

This rule is used in many places throughout the grammar so a generic
approach would be best.

I would like this case to produce good error messages since missing
';' is quite common.
Can i use a "standard" rule and mark it somehow to not consume a token
if it shouldnt (like the below example)?

end:
        : ';'
        | '}' { doNotConsume() }
        | ( LA(-1) == '}' ) { doNotConsume() } ;

BR Gustaf

From gustaf.j at gmail.com  Sun May 22 12:56:04 2011
From: gustaf.j at gmail.com (Gustaf Johansson)
Date: Sun, 22 May 2011 21:56:04 +0200
Subject: [antlr-interest] Q: Peek at token without consumeing
In-Reply-To: <BANLkTinE9haCqofqkrPkHq54AewQZSgAbA@mail.gmail.com>
References: <BANLkTi=jekQFbqCTMoB6CD-Qzfwh23bA3g@mail.gmail.com>
	<BANLkTinE9haCqofqkrPkHq54AewQZSgAbA@mail.gmail.com>
Message-ID: <BANLkTik5WnP+-Xvui9zpLgcSs+ot1r65wA@mail.gmail.com>

Hi,

This does not seem to work.

I believe the problem is that "( . '}' ) =>" looks forward one token,
when what i need is to look backwards.
Can this be acomplished in a similar manner?

BR G

On Sun, May 22, 2011 at 8:52 PM, Ben Corne <ben.corne at gmail.com> wrote:
> I think you can make use of rule precedence for this:
> end
> ? : ( '}' ) => /* this won't consume */
> ? | ( . '}' ) => /* checks 1 token/char and won't consume */
> ? | ';'
> ? ;
> 2011/5/22 Gustaf Johansson <gustaf.j at gmail.com>
>>
>> Hi,
>>
>> I have a tricky problem that i cant seem to get right.
>>
>> I have a static semantics rule which says " ';' is optional if
>> preceding statement ends with '}' or the statement is last in list"
>> Basically meaning either have LA(-1) == '}' or LA(1) == '}' or we
>> should expect a ';'.
>>
>> This rule is used in many places throughout the grammar so a generic
>> approach would be best.
>>
>> I would like this case to produce good error messages since missing
>> ';' is quite common.
>> Can i use a "standard" rule and mark it somehow to not consume a token
>> if it shouldnt (like the below example)?
>>
>> end:
>> ? ? ? ?: ';'
>> ? ? ? ?| '}' { doNotConsume() }
>> ? ? ? ?| ( LA(-1) == '}' ) { doNotConsume() } ;
>>
>> BR Gustaf
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From paulhanse at gmail.com  Mon May 23 03:58:33 2011
From: paulhanse at gmail.com (paulhanse at gmail.com)
Date: Mon, 23 May 2011 05:58:33 -0500
Subject: [antlr-interest] hey
Message-ID: <4dda3dda.4b0fdf0a.304f.fffffa2e@mx.google.com>

 you shouldn't let this opportunity slip away http://letisia.com/redirect.php?to=aHR0cDovL3d3dy5jbmJjNy5jb20vP3BpZD00NTc1OTg=

From researcher0x00 at gmail.com  Mon May 23 09:32:01 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Mon, 23 May 2011 12:32:01 -0400
Subject: [antlr-interest] Automated BNF text combinations generator with
	constraints
In-Reply-To: <BANLkTikuxFpBkdpLyc6+YtF9+BLT7KRvCg@mail.gmail.com>
References: <BANLkTikuxFpBkdpLyc6+YtF9+BLT7KRvCg@mail.gmail.com>
Message-ID: <BANLkTi=_Dr3x9zxJbk9S7_xN6=fx_rTC+A@mail.gmail.com>

FYI for others looking for same.

Ter did a quick take on this.
http://www.antlr.org/wiki/display/ANTLR3/Random+phrase+generation+using+an+ANTLR+grammar

which will lead you to the RandomPhrase.java in the distribution with the
following note.

NOTE: this does not work well for large grammars...it tends to recurse too
much and build really long strings.

I am writing my own from scratch in C# and the trick seems to be adding
constraints/heuristics to avoid the recurse.

From parrt at cs.usfca.edu  Mon May 23 18:11:52 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Mon, 23 May 2011 18:11:52 -0700
Subject: [antlr-interest] off to code generation 2011 conference
Message-ID: <DACC9E40-474F-4ACD-8874-155C15067C37@cs.usfca.edu>

Howdy!  I'm waiting to board flight to london.  If the iceland ash  
cloud allows, I'll be at the code gen conference in cambridge until  
Saturday.  My keynote is Thur AM but I'm not sure there are seats  
left.  Slides/video will appear afterwards, though.  Guaranteed to  
irritate, annoy, or perturb 53% of the audience (even if I have to do  
something physically obscene).

where's the best indian food in cambridge?

Ter

From hrennau at yahoo.de  Tue May 24 01:14:06 2011
From: hrennau at yahoo.de (Hans-Juergen Rennau)
Date: Tue, 24 May 2011 09:14:06 +0100 (BST)
Subject: [antlr-interest] Superclasses = best practise ...?
Message-ID: <698424.17719.qm@web27102.mail.ukl.yahoo.com>

Hello People,

this is a question about best practices when augmenting lexer and parser with 
Java code providing helper methods (or even inner classes for storare purposes).

The Maven prototype "antlr3-maven-archetype" creates example grammars which use 
super classes (AbstractTParser and AbstractTLexer). The comments in those super 
classes suggest to honour this as a general pattern: put helper methods in a 
grammar base class in order to keep the grammar light and clean. I think this 
has pros and a con. The con is that this way the compactness of 
"all-in-one-unit" is sacrificed; and reading the grammar one has to consult a 
second source. Also I noted that the Definitive Guide never made any suggestions 
to employ superclasses.

So this is my question: would you recommend the superclass approach indeed as 
the best practise, or rather regard it as a good practise one might follow or 
not, perhaps depending on complexity?

Thank you,

cheers,

-- Hans-Juergen Rennau

From michael.bedward at gmail.com  Tue May 24 01:24:36 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 24 May 2011 18:24:36 +1000
Subject: [antlr-interest] Superclasses = best practise ...?
In-Reply-To: <698424.17719.qm@web27102.mail.ukl.yahoo.com>
References: <698424.17719.qm@web27102.mail.ukl.yahoo.com>
Message-ID: <BANLkTinoHaq72VVBJSdccSvZqckJaf590A@mail.gmail.com>

Nice question.

My own experience is that the superclass approach really helps me to
keep both my grammar and my supporting code much easier to read,
understand and maintain. Being lazy I always start with the "one big
lump" model but once the supporting code gets beyond a modest size it
really obscures the grammar - although perhaps this is also a comment
on the tidiness, or lack of it, in my code.

Nutshell summary: when my grammar file starts getting ugly I've found
extracting a super-class to be very helpful.

Michael

On 24 May 2011 18:14, Hans-Juergen Rennau <hrennau at yahoo.de> wrote:
> Hello People,
>
> this is a question about best practices when augmenting lexer and parser with
> Java code providing helper methods (or even inner classes for storare purposes).
>
> The Maven prototype "antlr3-maven-archetype" creates example grammars which use
> super classes (AbstractTParser and AbstractTLexer). The comments in those super
> classes suggest to honour this as a general pattern: put helper methods in a
> grammar base class in order to keep the grammar light and clean. I think this
> has pros and a con. The con is that this way the compactness of
> "all-in-one-unit" is sacrificed; and reading the grammar one has to consult a
> second source. Also I noted that the Definitive Guide never made any suggestions
> to employ superclasses.
>
> So this is my question: would you recommend the superclass approach indeed as
> the best practise, or rather regard it as a good practise one might follow or
> not, perhaps depending on complexity?
>
> Thank you,
>
> cheers,
>
> -- Hans-Juergen Rennau
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From passionist_81 at yahoo.co.uk  Tue May 24 05:15:35 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Tue, 24 May 2011 13:15:35 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <844073.60685.qm@web24813.mail.ird.yahoo.com>

http://hojihupy.reco.ws/fujovo.html

From researcher0x00 at gmail.com  Tue May 24 05:36:44 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 24 May 2011 08:36:44 -0400
Subject: [antlr-interest] Superclasses = best practise ...?
In-Reply-To: <BANLkTinoHaq72VVBJSdccSvZqckJaf590A@mail.gmail.com>
References: <698424.17719.qm@web27102.mail.ukl.yahoo.com>
	<BANLkTinoHaq72VVBJSdccSvZqckJaf590A@mail.gmail.com>
Message-ID: <BANLkTi=3f8RUDJJ=2bLvSbQAouwavN8QqA@mail.gmail.com>

I am currently converting the C++ grammar from a  C back-end to a C#
back-end. The original C back-end code has support code, support
initialization code and utility code. Several versions of the grammar are
being developed at the same time; ISO, Microsoft, Test, etc. Each version of
the grammar has a different namespace.

The support initialization code was moved to the superclass constructor so
that it would be initialized during construction and not appear as a large
method in the grammar.

The parser was split into multiple files using partial classes with one of
the partial classes being the generated parser, and another being the
support methods that make calls to the parser code like LA(). This lets
generating of the the parser take place as often as needed without touching
the code in the other partial class.  This also keeps most of the code out
of the grammar file.

Lastly the utility code was put into a separate namespace with most of the
methods being static. This was done because I am working with multiple
versions and allows me to have only one copy of most of the support code.

Since most of the back-end code is moved out of the grammar, you can use
your favorite IDE to edit the code.

Eric

From simon.marchi at polymtl.ca  Tue May 24 06:16:58 2011
From: simon.marchi at polymtl.ca (Simon Marchi)
Date: Tue, 24 May 2011 09:16:58 -0400
Subject: [antlr-interest] gUnit: Test of a parser rule always fail
In-Reply-To: <17e5d7750f016bee0f146b5678462eaa@mail.gmail.com>
References: <BANLkTinzWsHH8NZy6MmmwgjqbxUqpYqd=g@mail.gmail.com>
	<17e5d7750f016bee0f146b5678462eaa@mail.gmail.com>
Message-ID: <BANLkTi=EpMYQV=04i2YSghk6yn-5UBYPqQ@mail.gmail.com>

Hmm that's true.

I first tried adding this to remove whitespaces:

WHITESPACE: (SPACE | LF | TAB) {$channel = HIDDEN;};
fragment SPACE: ' ';
fragment LF: '\n';
fragment TAB: '\t';

but that did not fix the problem. I also tried with {Skip();} with the
same results. I then changed my parser rule to a simpler one, having
only one token, no whitespace:
fullName: FIRSTNAME;

and changed the test accordingly:
fullName:
  "SIMON" OK

But it still fails the test.

I tried to do a little bit of debug in the gUnit code, and it appears
that the gUnitExecutor always enters this condition:
/** Invalid input */
if ( tokens.index()!=tokens.size() ) {
    //throw new InvalidInputException();
    ps2.print("Invalid input");
}

In my last example (with fullname: FIRSTNAME;), tokens.index() returns
1 while tokens.size() returns 2. It appears tokens.size() returns the
number of tokens read by the lexer, which is contains the tokens
"SIMON" and "<EOF>". Also, if I understand,correctly, tokens.index()
indicates the index of the next token to be read, which is also the
number of tokens consumed. Comparing both should tell if we consumed
all the tokens present in the input with our grammar rule, is it
correct ?

If you have any tip or explanation that could help me, thank you in advance !

Simon


On Sat, May 21, 2011 at 16:49, Jim Idle <jimi at temporal-wave.com> wrote:
> Your lexer does not cater for spaces.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Simon Marchi
>> Sent: Friday, May 20, 2011 3:33 PM
>> To: antlr-interest at antlr.org
>> Subject: [antlr-interest] gUnit: Test of a parser rule always fail
>>
>> Hello !
>>
>> I a trying to automatize the testing of my grammar using gUnit, but I
>> ran into the following problem: when I try to test a parser rule, the
>> input string is never recognized. The lexer rules can be tested without
>> problem. I made a simple example to illustrate:
>>
>> Grammar file Cool.g:
>> ? ? ? grammar Cool;
>>
>> ? ? ? options {language = Java;}
>> ? ? ? @lexer::header {package a.b.c;}
>> ? ? ? @header {package a.b.c;}
>>
>> ? ? ? // Parser rule
>> ? ? ? fullName: FIRSTNAME LASTNAME;
>>
>> ? ? ? // Lexer tokens
>> ? ? ? FIRSTNAME: 'SIMON';
>> ? ? ? LASTNAME: 'MARCHI';
>>
>> gUnit file Cool.gunit:
>> ? ? ? gunit Cool;
>>
>> ? ? ? @header {package a.b.c;}
>>
>> ? ? ? // The test case
>> ? ? ? fullName:
>> ? ? ? ? "SIMON MARCHI" OK
>>
>> Normally, the test case should pass, since the input is part of the
>> grammar. I use the ANTLR plugin inside Eclipse, and pasting the input
>> ("SIMON MARCHI") in the interactive interpreter tells me that it is
>> accepted by the rule fullName. However, the test fails. If I change
>> from OK to FAIL, then the test passes (obviously).
>>
>> Is there anything I am doing wrong here ?
>>
>> Thank you,
>>
>> Simon
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From list at toolazydogs.com  Tue May 24 06:20:58 2011
From: list at toolazydogs.com (Alan D. Cabrera)
Date: Tue, 24 May 2011 06:20:58 -0700
Subject: [antlr-interest] gUnit: Test of a parser rule always fail
In-Reply-To: <BANLkTi=EpMYQV=04i2YSghk6yn-5UBYPqQ@mail.gmail.com>
References: <BANLkTinzWsHH8NZy6MmmwgjqbxUqpYqd=g@mail.gmail.com>
	<17e5d7750f016bee0f146b5678462eaa@mail.gmail.com>
	<BANLkTi=EpMYQV=04i2YSghk6yn-5UBYPqQ@mail.gmail.com>
Message-ID: <A896FAE7-AC21-4CDD-8381-3A5FF0071623@toolazydogs.com>

I invite you to take a look at AUnit, an ANTLR v3 JUnit testing extension:

https://github.com/maguro/aunit

I would be interested in hearing your comments and suggestions.


Regards,
Alan

On May 24, 2011, at 6:16 AM, Simon Marchi wrote:

> Hmm that's true.
> 
> I first tried adding this to remove whitespaces:
> 
> WHITESPACE: (SPACE | LF | TAB) {$channel = HIDDEN;};
> fragment SPACE: ' ';
> fragment LF: '\n';
> fragment TAB: '\t';
> 
> but that did not fix the problem. I also tried with {Skip();} with the
> same results. I then changed my parser rule to a simpler one, having
> only one token, no whitespace:
> fullName: FIRSTNAME;
> 
> and changed the test accordingly:
> fullName:
>  "SIMON" OK
> 
> But it still fails the test.
> 
> I tried to do a little bit of debug in the gUnit code, and it appears
> that the gUnitExecutor always enters this condition:
> /** Invalid input */
> if ( tokens.index()!=tokens.size() ) {
>    //throw new InvalidInputException();
>    ps2.print("Invalid input");
> }
> 
> In my last example (with fullname: FIRSTNAME;), tokens.index() returns
> 1 while tokens.size() returns 2. It appears tokens.size() returns the
> number of tokens read by the lexer, which is contains the tokens
> "SIMON" and "<EOF>". Also, if I understand,correctly, tokens.index()
> indicates the index of the next token to be read, which is also the
> number of tokens consumed. Comparing both should tell if we consumed
> all the tokens present in the input with our grammar rule, is it
> correct ?
> 
> If you have any tip or explanation that could help me, thank you in advance !
> 
> Simon
> 
> 
> On Sat, May 21, 2011 at 16:49, Jim Idle <jimi at temporal-wave.com> wrote:
>> Your lexer does not cater for spaces.
>> 
>> Jim
>> 
>>> -----Original Message-----
>>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>>> bounces at antlr.org] On Behalf Of Simon Marchi
>>> Sent: Friday, May 20, 2011 3:33 PM
>>> To: antlr-interest at antlr.org
>>> Subject: [antlr-interest] gUnit: Test of a parser rule always fail
>>> 
>>> Hello !
>>> 
>>> I a trying to automatize the testing of my grammar using gUnit, but I
>>> ran into the following problem: when I try to test a parser rule, the
>>> input string is never recognized. The lexer rules can be tested without
>>> problem. I made a simple example to illustrate:
>>> 
>>> Grammar file Cool.g:
>>>       grammar Cool;
>>> 
>>>       options {language = Java;}
>>>       @lexer::header {package a.b.c;}
>>>       @header {package a.b.c;}
>>> 
>>>       // Parser rule
>>>       fullName: FIRSTNAME LASTNAME;
>>> 
>>>       // Lexer tokens
>>>       FIRSTNAME: 'SIMON';
>>>       LASTNAME: 'MARCHI';
>>> 
>>> gUnit file Cool.gunit:
>>>       gunit Cool;
>>> 
>>>       @header {package a.b.c;}
>>> 
>>>       // The test case
>>>       fullName:
>>>         "SIMON MARCHI" OK
>>> 
>>> Normally, the test case should pass, since the input is part of the
>>> grammar. I use the ANTLR plugin inside Eclipse, and pasting the input
>>> ("SIMON MARCHI") in the interactive interpreter tells me that it is
>>> accepted by the rule fullName. However, the test fails. If I change
>>> from OK to FAIL, then the test passes (obviously).
>>> 
>>> Is there anything I am doing wrong here ?
>>> 
>>> Thank you,
>>> 
>>> Simon
>>> 
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>>> email-address
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From qiaomuf at gmail.com  Tue May 24 07:36:17 2011
From: qiaomuf at gmail.com (Mu Qiao)
Date: Tue, 24 May 2011 22:36:17 +0800
Subject: [antlr-interest] Why stream name can't be printed out when error
	occurs(ANTLR C)?
Message-ID: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>

I set the fileName for ANTLR3_INPUT_STREAM and the file name can be
printed out when error occurs. But when the tree parser is involved,
the name can't be always printed out (print unknown-source instead
sometimes).

I checked the implementation of antlr3baserecognizer.c and I find the
name is decided by tnode->token. However, as we have
tns->istream->streamName, why not use that attribute? This will ensure
the name can be printed out no matter what kind of the current token
it is.

-- 
Best wishes,
Mu Qiao
GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9

From jimi at temporal-wave.com  Tue May 24 09:15:34 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 May 2011 09:15:34 -0700
Subject: [antlr-interest] Q: Peek at token without consumeing
In-Reply-To: <BANLkTi=jekQFbqCTMoB6CD-Qzfwh23bA3g@mail.gmail.com>
References: <BANLkTi=jekQFbqCTMoB6CD-Qzfwh23bA3g@mail.gmail.com>
Message-ID: <71a92483d7f20b4d318bee0ca5f50b53@mail.gmail.com>

This is the same specification as JavaFX - just download the source code
for the JavaFX compiler and steal my solution from there. It is easy
enough but just takes a little thinking about and some code. You will not
get it right with syntactic predicates though.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Gustaf Johansson
> Sent: Sunday, May 22, 2011 10:07 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Q: Peek at token without consumeing
>
> Hi,
>
> I have a tricky problem that i cant seem to get right.
>
> I have a static semantics rule which says " ';' is optional if
> preceding statement ends with '}' or the statement is last in list"
> Basically meaning either have LA(-1) == '}' or LA(1) == '}' or we
> should expect a ';'.
>
> This rule is used in many places throughout the grammar so a generic
> approach would be best.
>
> I would like this case to produce good error messages since missing ';'
> is quite common.
> Can i use a "standard" rule and mark it somehow to not consume a token
> if it shouldnt (like the below example)?
>
> end:
>         : ';'
>         | '}' { doNotConsume() }
>         | ( LA(-1) == '}' ) { doNotConsume() } ;
>
> BR Gustaf
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue May 24 09:41:37 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 May 2011 09:41:37 -0700
Subject: [antlr-interest] Superclasses = best practise ...?
In-Reply-To: <698424.17719.qm@web27102.mail.ukl.yahoo.com>
References: <698424.17719.qm@web27102.mail.ukl.yahoo.com>
Message-ID: <882383fb7097fbb27e7eaf4186ed7fa2@mail.gmail.com>

I uses super classes to separate the grammar from the code - you can also
use separate helper classes to do this too. I recommend keeping the logic
out of the grammar, but if you have a smaller grammar and will never
target other languages or want to reuse the grammar to do more than one
task on the language, then you are not required to follow the Maven
archetype. However, the lists of reasons not to put logic in with the
grammar soon piles up.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Hans-Juergen Rennau
> Sent: Tuesday, May 24, 2011 1:14 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Superclasses = best practise ...?
>
> Hello People,
>
> this is a question about best practices when augmenting lexer and
> parser with Java code providing helper methods (or even inner classes
> for storare purposes).
>
> The Maven prototype "antlr3-maven-archetype" creates example grammars
> which use super classes (AbstractTParser and AbstractTLexer). The
> comments in those super classes suggest to honour this as a general
> pattern: put helper methods in a grammar base class in order to keep
> the grammar light and clean. I think this has pros and a con. The con
> is that this way the compactness of "all-in-one-unit" is sacrificed;
> and reading the grammar one has to consult a second source. Also I
> noted that the Definitive Guide never made any suggestions to employ
> superclasses.
>
> So this is my question: would you recommend the superclass approach
> indeed as the best practise, or rather regard it as a good practise one
> might follow or not, perhaps depending on complexity?
>
> Thank you,
>
> cheers,
>
> -- Hans-Juergen Rennau
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Tue May 24 09:46:03 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 24 May 2011 09:46:03 -0700
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
Message-ID: <c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>

There can be multiple streams and you should reallty be using the file
name in the filestream, which you get from the token. Originally, we could
not get back to the filestream from the token and now we can, hence the
example error code uses what was available when I wrote it and also avoids
(at the time) dealing with stringstreams that might not have a name
(though now they always do of course).

Jim



> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Mu Qiao
> Sent: Tuesday, May 24, 2011 7:36 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Why stream name can't be printed out when
> error occurs(ANTLR C)?
>
> I set the fileName for ANTLR3_INPUT_STREAM and the file name can be
> printed out when error occurs. But when the tree parser is involved,
> the name can't be always printed out (print unknown-source instead
> sometimes).
>
> I checked the implementation of antlr3baserecognizer.c and I find the
> name is decided by tnode->token. However, as we have
> tns->istream->streamName, why not use that attribute? This will ensure
> the name can be printed out no matter what kind of the current token it
> is.
>
> --
> Best wishes,
> Mu Qiao
> GnuPG fingerprint: 92B1 B0C4 8D14 F8C4 EFA5? 3ACC 30B3 0DE4 17B1 57E9
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From hrennau at yahoo.de  Tue May 24 14:04:09 2011
From: hrennau at yahoo.de (Hans-Juergen Rennau)
Date: Tue, 24 May 2011 22:04:09 +0100 (BST)
Subject: [antlr-interest] Superclasses = best practise ...?
Message-ID: <651048.41208.qm@web27107.mail.ukl.yahoo.com>

Hi Michael, Eric, Jim,

thank you very much for discussing the question of the use of superclasses for 
separating logic from grammar. Indeed, you have convinced me thoroughly that the 
superclass approach is in *most* cases?very appropriate - as Jim elaborated, 
only small and simple grammars without the perspective of reuse would make the 
all-in-one alternative really attractive. 


A sidenote to Jim: the archetype does currently not introduce a superclass of 
the tree parser...?I think the tree parser is not less of a candidate than the 
parser - so you might consider adding a superclass for it, too. Second sidenote: 
using the archetype, the plugin version 3.3 is proposed, but selecting?it 
results in an error - this?may confuse.

Kind regards,
-- Hans-Juergen


From krispykrits at gmail.com  Tue May 24 22:08:56 2011
From: krispykrits at gmail.com (krithika sridhar)
Date: Wed, 25 May 2011 10:38:56 +0530
Subject: [antlr-interest] parser to implement an interface
Message-ID: <BANLkTimHt-pJ2EhgTu1GzvxpnNfdPGgp=A@mail.gmail.com>

Hi everybody..

I am using ANTLRS plugin with eclipse n i have a combined grammar.I want my
parser to implement an interface that i have written.I understand that the
solution to this is to extend a class (using superClass option) which
implements the required interface.BUT,using the "superClass= someClass"
option overrides the default behaviour,which is, to extend the
org.antlr.runtime base class Parser.So this approach,gives errors in the
generated code.I want to extend the Parser base class, at the same time
implement some other interface.

Is that possible ?
Thanks in advance

cheers
Krithika

From ranco.marcus at epirion.nl  Wed May 25 01:04:05 2011
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Wed, 25 May 2011 08:04:05 +0000
Subject: [antlr-interest] Superclasses = best practise ...?
In-Reply-To: <882383fb7097fbb27e7eaf4186ed7fa2@mail.gmail.com>
References: <698424.17719.qm@web27102.mail.ukl.yahoo.com>
	<882383fb7097fbb27e7eaf4186ed7fa2@mail.gmail.com>
Message-ID: <2B65C901391C804DBB9CF9E6FE30C6F969ABB7A4@sun.epirion.local>

Hi Jim,

Could you elaborate a bit on how you separate the logic from the grammar, especially when the grammar is supposed to target multiple languages?

To my knowledge, the only way of calling the logic is by adding an action to a rule { ... } and use the target language to call a method (in superclass, delegate, etc.). Because the grammar then contains the method call in the targeted language, the grammar is still not 100% language agnostic. 

What if we could somehow define join points in the grammar and have a mechanism to hook those up to code in the target (much like AOP)? Do you know if any attempts in this direction have been made in the past?

Best regards,

Ranco Marcus
Epirion Knowledge Solutions B.V.


> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Jim Idle
> Sent: Tuesday, May 24, 2011 6:42 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Superclasses = best practise ...?
> 
> I uses super classes to separate the grammar from the code - you can also
> use separate helper classes to do this too. I recommend keeping the logic out
> of the grammar, but if you have a smaller grammar and will never target
> other languages or want to reuse the grammar to do more than one task on
> the language, then you are not required to follow the Maven archetype.
> However, the lists of reasons not to put logic in with the grammar soon piles
> up.
> 
> Jim
> 
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Hans-Juergen Rennau
> > Sent: Tuesday, May 24, 2011 1:14 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] Superclasses = best practise ...?
> >
> > Hello People,
> >
> > this is a question about best practices when augmenting lexer and
> > parser with Java code providing helper methods (or even inner classes
> > for storare purposes).
> >
> > The Maven prototype "antlr3-maven-archetype" creates example
> grammars
> > which use super classes (AbstractTParser and AbstractTLexer). The
> > comments in those super classes suggest to honour this as a general
> > pattern: put helper methods in a grammar base class in order to keep
> > the grammar light and clean. I think this has pros and a con. The con
> > is that this way the compactness of "all-in-one-unit" is sacrificed;
> > and reading the grammar one has to consult a second source. Also I
> > noted that the Definitive Guide never made any suggestions to employ
> > superclasses.
> >
> > So this is my question: would you recommend the superclass approach
> > indeed as the best practise, or rather regard it as a good practise
> > one might follow or not, perhaps depending on complexity?
> >
> > Thank you,
> >
> > cheers,
> >
> > -- Hans-Juergen Rennau
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ranco.marcus at epirion.nl  Wed May 25 01:26:12 2011
From: ranco.marcus at epirion.nl (Ranco Marcus)
Date: Wed, 25 May 2011 08:26:12 +0000
Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars
In-Reply-To: <00cb01cbf52b$99eebd30$cdcc3790$@pixelminegames.com>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608DE64@sun.epirion.local>
	<001001cbf46e$1b490020$51db0060$@pixelminegames.com>
	<2B65C901391C804DBB9CF9E6FE30C6F9610C9BAC@sun.epirion.local>
	<00cb01cbf52b$99eebd30$cdcc3790$@pixelminegames.com>
Message-ID: <2B65C901391C804DBB9CF9E6FE30C6F969ABB7F1@sun.epirion.local>

Hi Sam/all,

When a (tree) grammar C imports (tree) grammars A and B, where grammar A calls a rule R from grammar B, a call is being made from delegate parser C_A to a delegate rule R (targeting C_B) in the composite parser C (its parent).

Now that the visibility of the delegate rules in C match the visibility of the imported grammar, the rule R has to be made public for the above to work. In our grammars, we build up internal structures that are subsequently processed. In our case, that means that all those internal structures have to be made public as well. This could be solved by allowing ANTLR rules to have 'internal' visibility. Also, imported grammars can probably remain internal as well. 

What are your thoughts on this? 

Thanks, Ranco

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: Thursday, April 07, 2011 3:57 PM
> To: Ranco Marcus; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite grammars
> 
> The visibility of delegated rules now matches the way they're declared in the
> imported grammar. Since some of them return nested classes declared in the
> delegate grammar, I had to make the delegate grammar 'public' and all its
> rules 'internal'.
> 
> I fixed the reserved names issue right after releasing 3.3.1, so it'll be included
> when I release 3.3.2. Note that rule parameters and return values need to
> include an explicit '@' in their declarations in the grammar, as follows. Labels
> and rule names do not need the '@'.
> 
> namespace[int @in] returns [int @out] : as=A B;
> 
> Sam
> 
> -----Original Message-----
> From: Ranco Marcus [mailto:ranco.marcus at epirion.nl]
> Sent: Thursday, April 07, 2011 6:49 AM
> To: Sam Harwell; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite grammars
> 
> Sounds great, Sam!
> 
> What will be the visibility of the methods in the 'Delegated rules' region now
> that the class of the imported grammar is internal? Private or internal?
> 
> Another small suggestion is to prefix variable names (at least those that are
> reserved in C#) with an at-sign. The generated class for the grammar below
> has a compile error since 'as' is not a valid variable name while '@as' is.
> 
> name : as=firstName lastName;
> 
> Are you planning to release new binaries any time soon?
> 
> Thanks again,
> 
> Ranco Marcus
> 
> > -----Original Message-----
> > From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> > Sent: woensdag 6 april 2011 17:20
> > To: Ranco Marcus; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite
> > grammars
> >
> > Hi Ranco,
> >
> > I made the following changes so far:
> >
> > * An imported grammar is always generated as an internal class instead
> > of a public class.
> > * Rules within the imported grammar are always declared public since
> > they are only called by the root grammar.
> >
> > How does that sound?
> >
> > Sam
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> > Sent: Wednesday, March 23, 2011 6:40 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] [CSharp3] rule visibility in composite
> > grammars
> >
> > Hi all/Sam,
> >
> > While using the CSharp3 target on a composite grammar, I came across a
> > few issues regarding rule visibility.
> >
> > If no modifier (private, protected, public, ...) is specified for a
> > rule, the Java target generates public methods (since it is not
> > implemented IIRC) and the
> > CSharp3 target generates private methods.
> >
> > I like the idea to explicitly specify which rules are callable (by
> > making them public). However, for composite grammars the generated
> > parser contains delegate rules for every rule of the imported grammar,
> > even for rules in the imported grammar that aren't public (causing
> > compile errors). This can solved this adding a public modifier to
> > every rule of the imported grammar, but I was wondering if there's a
> > more
> convenient way of doing this.
> >
> > Furthermore, the methods for the delegate rules in the composite
> > grammars are all public, regardless of the visibility of the rule in
> > the
> imported grammar.
> > IMHO, it would be better to make them private and use the composite
> > grammar to explicitly specify the rules that are externally visible.
> > What are your thoughts on this?
> >
> > Btw, the CSharp3 templates are also included in the original Java
> > tool. Does that mean that we don't need the .NET version of the tool
> anymore?
> >
> >
> > Best regards,
> >
> > Ranco Marcus
> > Epirion Knowledge Solutions B.V.
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 


From arjan.kok at gmail.com  Wed May 25 05:05:53 2011
From: arjan.kok at gmail.com (Arjan Kok)
Date: Wed, 25 May 2011 14:05:53 +0200
Subject: [antlr-interest] store generated AST
Message-ID: <BANLkTik0j3ypBdwJcposDwVdZAoEVvQR1Q@mail.gmail.com>

Hi Antlr-ers,

For performance reasons, I would like to store the generated AST in a
database. Is this supported/recommended?


Kind Regards, Arjan Kok.

From jimi at temporal-wave.com  Wed May 25 06:53:08 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 May 2011 06:53:08 -0700
Subject: [antlr-interest] parser to implement an interface
In-Reply-To: <BANLkTimHt-pJ2EhgTu1GzvxpnNfdPGgp=A@mail.gmail.com>
References: <BANLkTimHt-pJ2EhgTu1GzvxpnNfdPGgp=A@mail.gmail.com>
Message-ID: <125e7ddbf8185036b5cfe54f0cd28837@mail.gmail.com>

superclass fred;

class fred extends Parser implements MyInterface ....

Or you may find it easier to just have the superclass implement ANTLR
things like error message handling and have it contain an instance of
myInterface, which you can then call from the grammar as a helper class.
You can then use different implementations of the helper interface to do
different things:

class fred extends Parser {

 MyInterface visitor;
 void setVisitor(MyInterface visitor) { this.visitor = visitor; }
 ...

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of krithika sridhar
> Sent: Tuesday, May 24, 2011 10:09 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] parser to implement an interface
>
> Hi everybody..
>
> I am using ANTLRS plugin with eclipse n i have a combined grammar.I
> want my parser to implement an interface that i have written.I
> understand that the solution to this is to extend a class (using
> superClass option) which implements the required interface.BUT,using
> the "superClass= someClass"
> option overrides the default behaviour,which is, to extend the
> org.antlr.runtime base class Parser.So this approach,gives errors in
> the generated code.I want to extend the Parser base class, at the same
> time implement some other interface.
>
> Is that possible ?
> Thanks in advance
>
> cheers
> Krithika
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jimi at temporal-wave.com  Wed May 25 06:58:07 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 May 2011 06:58:07 -0700
Subject: [antlr-interest] Superclasses = best practise ...?
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F969ABB7A4@sun.epirion.local>
References: <698424.17719.qm@web27102.mail.ukl.yahoo.com>	<882383fb7097fbb27e7eaf4186ed7fa2@mail.gmail.com>
	<2B65C901391C804DBB9CF9E6FE30C6F969ABB7A4@sun.epirion.local>
Message-ID: <f9da893d4022c4c9cd3598d48c744c5f@mail.gmail.com>

For language separation, I do this:

1) Create the raw grammar with no actions;
2) Use perforce to integrate changes to language specific versions;

Because the actions in your target are going to be similar to:

{ myHelper.opAdd($e1, $e2); }

Transferring changes to the grammar is trivial.


Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Ranco Marcus
> Sent: Wednesday, May 25, 2011 1:04 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Superclasses = best practise ...?
>
> Hi Jim,
>
> Could you elaborate a bit on how you separate the logic from the
> grammar, especially when the grammar is supposed to target multiple
> languages?
>
> To my knowledge, the only way of calling the logic is by adding an
> action to a rule { ... } and use the target language to call a method
> (in superclass, delegate, etc.). Because the grammar then contains the
> method call in the targeted language, the grammar is still not 100%
> language agnostic.
>
> What if we could somehow define join points in the grammar and have a
> mechanism to hook those up to code in the target (much like AOP)? Do
> you know if any attempts in this direction have been made in the past?
>
> Best regards,
>
> Ranco Marcus
> Epirion Knowledge Solutions B.V.
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Jim Idle
> > Sent: Tuesday, May 24, 2011 6:42 PM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] Superclasses = best practise ...?
> >
> > I uses super classes to separate the grammar from the code - you can
> > also use separate helper classes to do this too. I recommend keeping
> > the logic out of the grammar, but if you have a smaller grammar and
> > will never target other languages or want to reuse the grammar to do
> > more than one task on the language, then you are not required to
> follow the Maven archetype.
> > However, the lists of reasons not to put logic in with the grammar
> > soon piles up.
> >
> > Jim
> >
> > > -----Original Message-----
> > > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > > bounces at antlr.org] On Behalf Of Hans-Juergen Rennau
> > > Sent: Tuesday, May 24, 2011 1:14 AM
> > > To: antlr-interest at antlr.org
> > > Subject: [antlr-interest] Superclasses = best practise ...?
> > >
> > > Hello People,
> > >
> > > this is a question about best practices when augmenting lexer and
> > > parser with Java code providing helper methods (or even inner
> > > classes for storare purposes).
> > >
> > > The Maven prototype "antlr3-maven-archetype" creates example
> > grammars
> > > which use super classes (AbstractTParser and AbstractTLexer). The
> > > comments in those super classes suggest to honour this as a general
> > > pattern: put helper methods in a grammar base class in order to
> keep
> > > the grammar light and clean. I think this has pros and a con. The
> > > con is that this way the compactness of "all-in-one-unit" is
> > > sacrificed; and reading the grammar one has to consult a second
> > > source. Also I noted that the Definitive Guide never made any
> > > suggestions to employ superclasses.
> > >
> > > So this is my question: would you recommend the superclass approach
> > > indeed as the best practise, or rather regard it as a good practise
> > > one might follow or not, perhaps depending on complexity?
> > >
> > > Thank you,
> > >
> > > cheers,
> > >
> > > -- Hans-Juergen Rennau
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-
> > > email-address
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-
> interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From kcarroll at signmgmt.com  Wed May 25 11:37:04 2011
From: kcarroll at signmgmt.com (Kevin Carroll)
Date: Wed, 25 May 2011 13:37:04 -0500
Subject: [antlr-interest] store generated AST
In-Reply-To: <BANLkTik0j3ypBdwJcposDwVdZAoEVvQR1Q@mail.gmail.com>
References: <BANLkTik0j3ypBdwJcposDwVdZAoEVvQR1Q@mail.gmail.com>
Message-ID: <80A5CDD2686EA042AE41C526324D4455A5F7AF3331@EXCHANGE2007.signmgmt.local>

Arjan,

I have had success with the C# version of ANTLR storing my AST's in a SqlServer database by serializing and saving as a binary data type (varbinary(max)).

Kevin

-----Original Message-----
From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Arjan Kok
Sent: Wednesday, May 25, 2011 7:06 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] store generated AST

Hi Antlr-ers,

For performance reasons, I would like to store the generated AST in a database. Is this supported/recommended?


Kind Regards, Arjan Kok.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From betelgeuse at gentoo.org  Wed May 25 11:49:14 2011
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Wed, 25 May 2011 21:49:14 +0300
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>
Message-ID: <irjj0c$2sg$1@dough.gmane.org>

On 05/24/2011 07:46 PM, Jim Idle wrote:
> There can be multiple streams and you should reallty be using the file
> name in the filestream, which you get from the token. Originally, we could
> not get back to the filestream from the token and now we can, hence the
> example error code uses what was available when I wrote it and also avoids
> (at the time) dealing with stringstreams that might not have a name
> (though now they always do of course).
> 

The problem seems related to virtual tokens. They seem to be missing
association back to the filestream. Is this a bug or a limitation?

Breakpoint 1, antlr3RecognitionExceptionNew (recognizer=0x8100dd0) at
src/antlr3baserecognizer.c:382
382      if      (tnode->token->input == NULL)
(gdb) p tnode->token->input
$2 = (pANTLR3_INPUT_STREAM) 0x0

Here tnode->token is a token that is declared in the tokens { } block in
the grammar header.

Regards,
Petteri


From jimi at temporal-wave.com  Wed May 25 12:39:10 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 May 2011 12:39:10 -0700
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <irjj0c$2sg$1@dough.gmane.org>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>
	<irjj0c$2sg$1@dough.gmane.org>
Message-ID: <a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>

Why would you need to use a virtual token to issue an error?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Petteri R?ty
> Sent: Wednesday, May 25, 2011 11:49 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why stream name can't be printed out when
> error occurs(ANTLR C)?
>
> On 05/24/2011 07:46 PM, Jim Idle wrote:
> > There can be multiple streams and you should reallty be using the
> file
> > name in the filestream, which you get from the token. Originally, we
> > could not get back to the filestream from the token and now we can,
> > hence the example error code uses what was available when I wrote it
> > and also avoids (at the time) dealing with stringstreams that might
> > not have a name (though now they always do of course).
> >
>
> The problem seems related to virtual tokens. They seem to be missing
> association back to the filestream. Is this a bug or a limitation?
>
> Breakpoint 1, antlr3RecognitionExceptionNew (recognizer=0x8100dd0) at
> src/antlr3baserecognizer.c:382
> 382      if      (tnode->token->input == NULL)
> (gdb) p tnode->token->input
> $2 = (pANTLR3_INPUT_STREAM) 0x0
>
> Here tnode->token is a token that is declared in the tokens { } block
> in the grammar header.
>
> Regards,
> Petteri
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From betelgeuse at gentoo.org  Wed May 25 12:57:05 2011
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Wed, 25 May 2011 22:57:05 +0300
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>	<irjj0c$2sg$1@dough.gmane.org>
	<a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>
Message-ID: <irjmvj$taf$1@dough.gmane.org>

On 05/25/2011 10:39 PM, Jim Idle wrote:
> Why would you need to use a virtual token to issue an error?
> 
> Jim
> 

The situation happens at least when a tree grammar detects a tree it's
not prepared for. This of course is more common during development than
in production but can't see why bugs couldn't leak there too. An example:

-unknown source-(32)  : error 3 : , at offset 8, near (STRING autotools)
: cannot match to any predicted input...

first frames from an another error:

(gdb) bt
#0  antlr3RecognitionExceptionNew (recognizer=0xb74e1978) at
src/antlr3baserecognizer.c:382
#1  0xb7dc7baf in recoverFromMismatchedToken (recognizer=0xb74e1978,
ttype=3, follow=0x0) at src/antlr3baserecognizer.c:1469
#2  0xb7dc6c72 in match (recognizer=0xb74e1978, ttype=3, follow=0x0) at
src/antlr3baserecognizer.c:478

Regards,
Petteri


From jimi at temporal-wave.com  Wed May 25 13:02:05 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 May 2011 13:02:05 -0700
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <irjmvj$taf$1@dough.gmane.org>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>	<irjj0c$2sg$1@dough.gmane.org>
	<a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>
	<irjmvj$taf$1@dough.gmane.org>
Message-ID: <38d60c7a87c3a35dd320ac8eda637030@mail.gmail.com>

So, it is a bug in the tree grammar and you have not implemented an error
message handler that can help you in development. I cannot create an error
handler that is all things to all men - hence the supplied default just
tries to use lots of ways to gather information, so you can decide what is
needed for your specific case.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Petteri R?ty
> Sent: Wednesday, May 25, 2011 12:57 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why stream name can't be printed out when
> error occurs(ANTLR C)?
>
> On 05/25/2011 10:39 PM, Jim Idle wrote:
> > Why would you need to use a virtual token to issue an error?
> >
> > Jim
> >
>
> The situation happens at least when a tree grammar detects a tree it's
> not prepared for. This of course is more common during development than
> in production but can't see why bugs couldn't leak there too. An
> example:
>
> -unknown source-(32)  : error 3 : , at offset 8, near (STRING
> autotools)
> : cannot match to any predicted input...
>
> first frames from an another error:
>
> (gdb) bt
> #0  antlr3RecognitionExceptionNew (recognizer=0xb74e1978) at
> src/antlr3baserecognizer.c:382
> #1  0xb7dc7baf in recoverFromMismatchedToken (recognizer=0xb74e1978,
> ttype=3, follow=0x0) at src/antlr3baserecognizer.c:1469
> #2  0xb7dc6c72 in match (recognizer=0xb74e1978, ttype=3, follow=0x0) at
> src/antlr3baserecognizer.c:478
>
> Regards,
> Petteri
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From betelgeuse at gentoo.org  Wed May 25 13:07:51 2011
From: betelgeuse at gentoo.org (=?UTF-8?B?UGV0dGVyaSBSw6R0eQ==?=)
Date: Wed, 25 May 2011 23:07:51 +0300
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <38d60c7a87c3a35dd320ac8eda637030@mail.gmail.com>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>	<irjj0c$2sg$1@dough.gmane.org>	<a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>	<irjmvj$taf$1@dough.gmane.org>
	<38d60c7a87c3a35dd320ac8eda637030@mail.gmail.com>
Message-ID: <irjnjp$148$1@dough.gmane.org>

On 05/25/2011 11:02 PM, Jim Idle wrote:
> So, it is a bug in the tree grammar and you have not implemented an error
> message handler that can help you in development. I cannot create an error
> handler that is all things to all men - hence the supplied default just
> tries to use lots of ways to gather information, so you can decide what is
> needed for your specific case.
> 
> Jim
> 

But is there something preventing virtual tokens from associating to
input so that the default just works? If not I could look at creating a
patch to make it work.

Regards,
Petteri


From jimi at temporal-wave.com  Wed May 25 14:46:48 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 25 May 2011 14:46:48 -0700
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <irjnjp$148$1@dough.gmane.org>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>	<irjj0c$2sg$1@dough.gmane.org>
	<a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>	<irjmvj$taf$1@dough.gmane.org>
	<38d60c7a87c3a35dd320ac8eda637030@mail.gmail.com>
	<irjnjp$148$1@dough.gmane.org>
Message-ID: <bcab87e334cfc3898f4115fe0b71f7da@mail.gmail.com>

Well you could, but I think there are some obvious problems:

1) What line number do you use?
2) If the tree node spans two files, which file do you use?
3) How many other things do we need to set up?

So, the standard thing to do is create your own error message output that
decides whether to use the token that comes before in the token stream,
the token that comes afterwards, the first child token that is not itself
virtual, and if so, then do you mean depth first or breadth first? Etc
etc? That is why I am telling you that I can't do anything generic. So, if
you need error messages in the tree parser, then you have to code it up
yourself.

Are you sure that you need virtual tokens in the tree if you need to know
where they are in relation to the real tokens? To be honest, if you are
getting errors on the tree nodes, then  just make the debugger break in
the message handler so that you have the stack trace, and then for
production mode, you just want an "Internal compiler error - please report
...."

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Petteri R?ty
> Sent: Wednesday, May 25, 2011 1:08 PM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Why stream name can't be printed out when
> error occurs(ANTLR C)?
>
> On 05/25/2011 11:02 PM, Jim Idle wrote:
> > So, it is a bug in the tree grammar and you have not implemented an
> > error message handler that can help you in development. I cannot
> > create an error handler that is all things to all men - hence the
> > supplied default just tries to use lots of ways to gather
> information,
> > so you can decide what is needed for your specific case.
> >
> > Jim
> >
>
> But is there something preventing virtual tokens from associating to
> input so that the default just works? If not I could look at creating a
> patch to make it work.
>
> Regards,
> Petteri
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From sergiy.dubovik at gmail.com  Wed May 25 22:17:02 2011
From: sergiy.dubovik at gmail.com (Sergiy Dubovik)
Date: Thu, 26 May 2011 08:17:02 +0300
Subject: [antlr-interest] Same rule -> different tokens
Message-ID: <BANLkTimgWSxw3ATiUWe+iepYpxaFWde+7w@mail.gmail.com>

Hi!

I'm trying to implement ruby like grammar:
def func
    if x < 1<NL>
        print ""
    end
end

In if statement there has to be new line <NL>, otherwise I get
problems with expression rules, also ruby requires new line there.
However I want to ignore new lines in all other cases. I did something
like this with flex and bison, and solution was to make a global flag
and it would be set in bison grammar file after expression to true and
lexer would return token otherwise it would skip it. Shall I use
similar approach with antlr or is there better solution? I'm trying to
avoid any code in the grammar because I develop it with antlrworks
which works only with java code but I need to generate C code.

Thanks.
br,
Sergiy

From passionist_81 at yahoo.co.uk  Thu May 26 00:09:29 2011
From: passionist_81 at yahoo.co.uk (faraz ahmed)
Date: Thu, 26 May 2011 08:09:29 +0100 (BST)
Subject: [antlr-interest] [SPAM]
Message-ID: <34111.26936.qm@web24801.mail.ird.yahoo.com>

http://visoryga.justicewasgreen.com/pybaxa.html

From abdulsamiku at yahoo.com  Thu May 26 00:35:18 2011
From: abdulsamiku at yahoo.com (Abdul Sami Siddiqui)
Date: Thu, 26 May 2011 00:35:18 -0700 (PDT)
Subject: [antlr-interest] StackOverflowError exception due to long nested
	expression
In-Reply-To: <mailman.1.1306263602.22875.antlr-interest@antlr.org>
References: <mailman.1.1306263602.22875.antlr-interest@antlr.org>
Message-ID: <183075.16650.qm@web65910.mail.ac4.yahoo.com>

Hi,

I have grammar like this:

expr
: andExpr ( OR^ andExpr )*
;
andExpr
: relExpr ( AND^ relExpr )*
;
relExpr
: aexpr ( (EQUAL ^|NOTEQUAL ^| LESSTHANEQUAL ^| LESSTHAN  ^| GREATERTHANEQUAL ^| 
GREATERTHAN ^ ) aexpr )*
;
aexpr
: mexpr ( ( PLUS^ | MINUS^ )  mexpr)*
;

mexpr
: unaryExpr ( ( MULT ^ | DIVIDE^ )unaryExpr)*
;
unaryOperator
: PLUS 
| MINUS
| NOT
;
unaryExpr
:  unaryOperator? atom -> ^(ATOM unaryOperator? atom? )
;
atom
:UINT
| DBL
| ID 
| STRING
| BOOL
| function
| LEFT_PAREN expr RIGHT_PAREN -> expr 
;

If I try a long nested expression using the above binary operands, I get a 
StackOverflowError exception. 

How can I avoid StackOverflowError due to long nested expressions? Any ideas?

Thanks

From patrick.hofman at invantive.com  Thu May 26 06:35:19 2011
From: patrick.hofman at invantive.com (Patrick Hofman)
Date: Thu, 26 May 2011 15:35:19 +0200
Subject: [antlr-interest] question about antlr
In-Reply-To: <06F8479F3F8D514F9A9164FFEC2A2796971776DE41@ws54>
References: <06F8479F3F8D514F9A9164FFEC2A2796971776DE41@ws54>
Message-ID: <06F8479F3F8D514F9A9164FFEC2A2796971774C24E@ws54>

Hi all,

I have bought the ANTLR book in order to learn ANTLR better, but I still don't get how to fix one thing. I hope you can help me with that.

I have a grammar that is used to parse our custom formula format to an Excel formula. So when filling an Excel worksheet the string entered is something like '$C{D,.,.,.+1}' which means 'one cell right from the current cell'. You will understand that eventually we will get something like '$C{D,.,.,.+1} + $C{D,.,.,.+2}', so add up the value of the first cell right and the second cell right (in Excel when we are at A1 this results in '=B1 + B2'.

The problem is this: In the grammar I cannot find a way to 'eat up' the text between two 'eca_kolom_expressie' strings (the '$C{...}' part).

I already tried 'EXCEL_FRAGMENT' in a hundred ways, but none of them seemed to work. ('TILDE (options {greedy=false;} : .) TILDE' seems to work, but when removing the TILDEs it stops working)

I have included the grammar. Can you point me in the right direction?

Regards,

Patrick Hofman
Senior Consultant
Invantive B.V.

From patrick.hofman at invantive.com  Thu May 26 07:04:20 2011
From: patrick.hofman at invantive.com (Patrick Hofman)
Date: Thu, 26 May 2011 16:04:20 +0200
Subject: [antlr-interest] question about antlr
References: <06F8479F3F8D514F9A9164FFEC2A2796971776DE41@ws54> 
Message-ID: <06F8479F3F8D514F9A9164FFEC2A2796971774C24F@ws54>

And now the grammar

From: Patrick Hofman
Sent: donderdag 26 mei 2011 15:35
To: antlr-interest at antlr.org
Subject: question about antlr

Hi all,

I have bought the ANTLR book in order to learn ANTLR better, but I still don't get how to fix one thing. I hope you can help me with that.

I have a grammar that is used to parse our custom formula format to an Excel formula. So when filling an Excel worksheet the string entered is something like '$C{D,.,.,.+1}' which means 'one cell right from the current cell'. You will understand that eventually we will get something like '$C{D,.,.,.+1} + $C{D,.,.,.+2}', so add up the value of the first cell right and the second cell right (in Excel when we are at A1 this results in '=B1 + B2'.

The problem is this: In the grammar I cannot find a way to 'eat up' the text between two 'eca_kolom_expressie' strings (the '$C{...}' part).

I already tried 'EXCEL_FRAGMENT' in a hundred ways, but none of them seemed to work. ('TILDE (options {greedy=false;} : .) TILDE' seems to work, but when removing the TILDEs it stops working)

I have included the grammar. Can you point me in the right direction?

Regards,

Patrick Hofman
Senior Consultant
Invantive B.V.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: eca_column_expressions.g
Type: application/octet-stream
Size: 2857 bytes
Desc: eca_column_expressions.g
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110526/88191fe2/attachment.obj 

From bkiers at gmail.com  Thu May 26 08:56:50 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 26 May 2011 17:56:50 +0200
Subject: [antlr-interest] question about antlr
In-Reply-To: <06F8479F3F8D514F9A9164FFEC2A2796971774C24F@ws54>
References: <06F8479F3F8D514F9A9164FFEC2A2796971776DE41@ws54>
	<06F8479F3F8D514F9A9164FFEC2A2796971774C24F@ws54>
Message-ID: <BANLkTikmnckSm=s1aC78JNgvODb_CcH1Nw@mail.gmail.com>

Hi Patrick,

I have a hard time understanding what it is you're trying to do.
Instead of springing the entire grammar on us (or me), could you extract
only those rules that are causing the problem(s)? And could you include some
example input you'd like to match/parse?

Regards,

Bart Kiers.


On Thu, May 26, 2011 at 4:04 PM, Patrick Hofman <
patrick.hofman at invantive.com> wrote:

> And now the grammar
>
> From: Patrick Hofman
> Sent: donderdag 26 mei 2011 15:35
> To: antlr-interest at antlr.org
> Subject: question about antlr
>
> Hi all,
>
> I have bought the ANTLR book in order to learn ANTLR better, but I still
> don't get how to fix one thing. I hope you can help me with that.
>
> I have a grammar that is used to parse our custom formula format to an
> Excel formula. So when filling an Excel worksheet the string entered is
> something like '$C{D,.,.,.+1}' which means 'one cell right from the current
> cell'. You will understand that eventually we will get something like
> '$C{D,.,.,.+1} + $C{D,.,.,.+2}', so add up the value of the first cell right
> and the second cell right (in Excel when we are at A1 this results in '=B1 +
> B2'.
>
> The problem is this: In the grammar I cannot find a way to 'eat up' the
> text between two 'eca_kolom_expressie' strings (the '$C{...}' part).
>
> I already tried 'EXCEL_FRAGMENT' in a hundred ways, but none of them seemed
> to work. ('TILDE (options {greedy=false;} : .) TILDE' seems to work, but
> when removing the TILDEs it stops working)
>
> I have included the grammar. Can you point me in the right direction?
>
> Regards,
>
> Patrick Hofman
> Senior Consultant
> Invantive B.V.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From david.smith at cc.gatech.edu  Thu May 26 10:02:50 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Thu, 26 May 2011 13:02:50 -0400
Subject: [antlr-interest] Nasty LHS expression
Message-ID: <E1QPdxV-00058I-1j@elasmtp-masked.atl.sa.earthlink.net>

I am having a difficult time distinguishing two legal lines of code:
   ID = expression
and
   ID(exp1, exp2, ...) = expression
I tried this rule:
stat:   expr NEWLINE        -> expr
     |   (ID OPENP .* CLOSEP GETS)
          => ID OPENP actualParameters CLOSEP GETS expr NEWLINE
          -> ^(INDEX ID OPENP actualParameters CLOSEP expr)
     |   ID GETS expr NEWLINE -> ^(GETS ID expr)
     |   NEWLINE             ->
     ;
But it says that alternatives 2 and 3 can never be matched.  How do I 
"reactivate" 2 and 3?

                                 DMS


David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From bkiers at gmail.com  Thu May 26 11:01:24 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 26 May 2011 20:01:24 +0200
Subject: [antlr-interest] Nasty LHS expression
In-Reply-To: <E1QPdxV-00058I-1j@elasmtp-masked.atl.sa.earthlink.net>
References: <E1QPdxV-00058I-1j@elasmtp-masked.atl.sa.earthlink.net>
Message-ID: <BANLkTikdaXL4h5Y=M5EshtYoQreL1pFstw@mail.gmail.com>

Hi David,

Can an `expr` match something that starts with `ID OPENP` and/or `ID GETS`?
Perhaps you can post your entire grammar? Or at least the `expr` rule?

Regards,

Bart.


On Thu, May 26, 2011 at 7:02 PM, David Smith <david.smith at cc.gatech.edu>wrote:

> I am having a difficult time distinguishing two legal lines of code:
>   ID = expression
> and
>   ID(exp1, exp2, ...) = expression
> I tried this rule:
> stat:   expr NEWLINE        -> expr
>     |   (ID OPENP .* CLOSEP GETS)
>          => ID OPENP actualParameters CLOSEP GETS expr NEWLINE
>          -> ^(INDEX ID OPENP actualParameters CLOSEP expr)
>     |   ID GETS expr NEWLINE -> ^(GETS ID expr)
>     |   NEWLINE             ->
>     ;
> But it says that alternatives 2 and 3 can never be matched.  How do I
> "reactivate" 2 and 3?
>
>                                 DMS
>
>
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From asicaddress at gmail.com  Thu May 26 11:36:50 2011
From: asicaddress at gmail.com (A Z)
Date: Thu, 26 May 2011 13:36:50 -0500
Subject: [antlr-interest] Why stream name can't be printed out when
 error occurs(ANTLR C)?
In-Reply-To: <bcab87e334cfc3898f4115fe0b71f7da@mail.gmail.com>
References: <BANLkTime1ygKS=GT2QnVtVoNq59fX1J1yA@mail.gmail.com>
	<c5e3d028cdd970392cba8d9c38060560@mail.gmail.com>
	<irjj0c$2sg$1@dough.gmane.org>
	<a011cd2c7ca868058664b7306d3ea5a6@mail.gmail.com>
	<irjmvj$taf$1@dough.gmane.org>
	<38d60c7a87c3a35dd320ac8eda637030@mail.gmail.com>
	<irjnjp$148$1@dough.gmane.org>
	<bcab87e334cfc3898f4115fe0b71f7da@mail.gmail.com>
Message-ID: <BANLkTinuyArDr-Bx-QN7DrPuV5U6d345Ow@mail.gmail.com>

For development, I handled tree grammar error reporting with the following
code. It simply searches back in the token stream until it hits an input
token and uses that for location information. I also print out the token
index offset between the error token and the reporting token so I get an
idea of where the error occurred. Note that I stopped changing this as soon
it was working enough to allow debugging the tree grammar so don't expect
much.


  pANTLR3_COMMON_TOKEN searchToken = NULL;
  unsigned int testIndex = 0;
  if(ex->index > 0)
  {
    testIndex = ex->index - 1;
    pANTLR3_BASE_TREE searchBaseTree =
thisTreeNodeStream->get(thisTreeNodeStream,testIndex);
    searchToken = searchBaseTree->getToken(searchBaseTree);


    //If UP token
    if(errorToken->type == 3)
    {
      //Go back in the stream until we hit a token that is not UP and has a
column not -1
      while(searchToken->type == 3 || searchToken->charPosition == -1)
      {
        testIndex--; //FIXME - Maybe dangerous?
        searchBaseTree =
thisTreeNodeStream->get(thisTreeNodeStream,testIndex);
        searchToken = searchBaseTree->getToken(searchBaseTree);
      //printf("searchToken->toString
%s\n",searchToken->toString(searchToken)->chars);
      }

    }
    //If DOWN token
    else if(errorToken->type == 2)
    {
      //Go back in the stream until we hit a token that is not UP
      while(searchToken->type == 2)
      {
        testIndex--; //FIXME - Maybe dangerous?
        searchBaseTree =
thisTreeNodeStream->get(thisTreeNodeStream,testIndex);
        searchToken = searchBaseTree->getToken(searchBaseTree);
     // printf("searchToken->toString
%s\n",searchToken->toString(searchToken)->chars);
      }
    }
    //If no column info(imaginary token?)
    else if(errorToken->charPosition == -1)
    {
      //Go back in the stream until we hit a token that is not UP and has a
column not -1
      while(searchToken->type == 3 || searchToken->type == 2 ||
searchToken->charPosition == -1)
      {
        testIndex--; //FIXME - Maybe dangerous?
        searchBaseTree =
thisTreeNodeStream->get(thisTreeNodeStream,testIndex);
        searchToken = searchBaseTree->getToken(searchBaseTree);
      //printf("searchToken->user1 %d\n",searchToken->user1);
     // printf("searchToken->type %d\n",searchToken->type);
     // printf("searchToken->toString
%s\n",searchToken->toString(searchToken)->chars);
      }
    }
    else
    {
      searchToken = errorToken;
    }
  }
  //This must be the first node in the tree
  else
  {
    searchToken = errorToken;
  }

From patrick.hofman at invantive.com  Fri May 27 00:42:32 2011
From: patrick.hofman at invantive.com (Patrick Hofman)
Date: Fri, 27 May 2011 09:42:32 +0200
Subject: [antlr-interest] question about antlr
In-Reply-To: <BANLkTikmnckSm=s1aC78JNgvODb_CcH1Nw@mail.gmail.com>
References: <06F8479F3F8D514F9A9164FFEC2A2796971776DE41@ws54>
	<06F8479F3F8D514F9A9164FFEC2A2796971774C24F@ws54>,
	<BANLkTikmnckSm=s1aC78JNgvODb_CcH1Nw@mail.gmail.com>
Message-ID: <06F8479F3F8D514F9A9164FFEC2A2796971776DE45@ws54>

Hi Bart,



The input is something like this: '$C{D,.,.,.+1} + $C{D,.,.,.+2}'



The problem is filtering out the ' + ' part of the expression. The expression goes well when I don't include the ' + ' part. In fact, this part of the expression should be copied 'as is' to the output in the end.



The grammar part that is the problem is this part I think:



eca_kolom_expressie
 : {input.LT(1).getText().equals("$"+"C")}? ECA_ID ECA_LACCOLADE draaimethode separator sheet separator column separator row ECA_RACCOLADE {System.out.println("Gaaf, draaimethode " + draaimethode); mode="EXCEL"; System.out.println("Mode = " + mode);}
 ;
excel_fragment
        : {mode.equals("EXCEL")}? EXCEL_FRAGMENT {mode="ECA"; System.out.println("Mode = " + mode);}
 ;
excel_formula
 : excel_fragment (eca_kolom_expressie excel_fragment)*
 ;

Where EXCEL_FRAGMENT is:



EXCEL_FRAGMENT
 : (options {greedy=false;} : .)
 ;

The determination of excel_formula (entry point) (specific: the EXCEL_FRAGMENT part) goes well when I put in TILDE at the start and end of EXCEL_FRAGMENT. So it looks like the greedy is too greedy. It eats up a part of eca_kolom_expressie.



Is this better for you to understand? I am a ANTLR rookie so I'm sorry when it is hard to get it right for you.



Regards,





Patrick Hofman


________________________________
From: Bart Kiers [bkiers at gmail.com]
Sent: Thursday, May 26, 2011 5:56 PM
To: Patrick Hofman
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] question about antlr

Hi Patrick,

I have a hard time understanding what it is you're trying to do.
Instead of springing the entire grammar on us (or me), could you extract only those rules that are causing the problem(s)? And could you include some example input you'd like to match/parse?

Regards,

Bart Kiers.


On Thu, May 26, 2011 at 4:04 PM, Patrick Hofman <patrick.hofman at invantive.com<mailto:patrick.hofman at invantive.com>> wrote:
And now the grammar

From: Patrick Hofman
Sent: donderdag 26 mei 2011 15:35
To: antlr-interest at antlr.org<mailto:antlr-interest at antlr.org>
Subject: question about antlr

Hi all,

I have bought the ANTLR book in order to learn ANTLR better, but I still don't get how to fix one thing. I hope you can help me with that.

I have a grammar that is used to parse our custom formula format to an Excel formula. So when filling an Excel worksheet the string entered is something like '$C{D,.,.,.+1}' which means 'one cell right from the current cell'. You will understand that eventually we will get something like '$C{D,.,.,.+1} + $C{D,.,.,.+2}', so add up the value of the first cell right and the second cell right (in Excel when we are at A1 this results in '=B1 + B2'.

The problem is this: In the grammar I cannot find a way to 'eat up' the text between two 'eca_kolom_expressie' strings (the '$C{...}' part).

I already tried 'EXCEL_FRAGMENT' in a hundred ways, but none of them seemed to work. ('TILDE (options {greedy=false;} : .) TILDE' seems to work, but when removing the TILDEs it stops working)

I have included the grammar. Can you point me in the right direction?

Regards,

Patrick Hofman
Senior Consultant
Invantive B.V.


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address



From bkiers at gmail.com  Fri May 27 01:33:16 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 27 May 2011 10:33:16 +0200
Subject: [antlr-interest] question about antlr
In-Reply-To: <06F8479F3F8D514F9A9164FFEC2A2796971776DE45@ws54>
References: <06F8479F3F8D514F9A9164FFEC2A2796971776DE41@ws54>
	<06F8479F3F8D514F9A9164FFEC2A2796971774C24F@ws54>
	<BANLkTikmnckSm=s1aC78JNgvODb_CcH1Nw@mail.gmail.com>
	<06F8479F3F8D514F9A9164FFEC2A2796971776DE45@ws54>
Message-ID: <BANLkTi=zS-t8MOSZCcJE6wzBgyytq_aWsg@mail.gmail.com>

Hi Patrick,

Sorry, I didn't express myself clearly. What I meant was if you could post a
stripped down version of your grammar that includes the problematic rule(s)
and also include a little test class that parses the example input. It
really helps if you post the exact input that produces the error, not
"something like this".
An example in the line of an SSCCE (http://sscce.org/) would be ideal.
I could do this all myself: creating a test class, adjusting the example
input and letting my test class parse it, but that'd take up quite a bit of
my time.

Regards,

Bart Kiers.


On Fri, May 27, 2011 at 9:42 AM, Patrick Hofman <
patrick.hofman at invantive.com> wrote:

>  Hi Bart,
>
>
>
> The input is something like this: '$C{D,.,.,.+1} + $C{D,.,.,.+2}'
>
>
>
> The problem is filtering out the ' + ' part of the expression. The
> expression goes well when I don't include the ' + ' part. In fact, this part
> of the expression should be copied 'as is' to the output in the end.
>
>
>
> The grammar part that is the problem is this part I think:
>
>
>
> eca_kolom_expressie
>  : {input.LT(1).getText().equals("$"+"C")}? ECA_ID ECA_LACCOLADE
> draaimethode separator sheet separator column separator row ECA_RACCOLADE
> {System.out.println("Gaaf, draaimethode " + draaimethode); mode="EXCEL";
> System.out.println("Mode = " + mode);}
>  ;
> excel_fragment
>         : {mode.equals("EXCEL")}? *EXCEL_FRAGMENT* {mode="ECA";
> System.out.println("Mode = " + mode);}
>  ;
> excel_formula
>  : excel_fragment (eca_kolom_expressie excel_fragment)*
>  ;
>
> Where EXCEL_FRAGMENT is:
>
>
>
> EXCEL_FRAGMENT
>  : (options {greedy=false;} : .)
>  ;
>
> The determination of excel_formula (entry point) (specific: the
> EXCEL_FRAGMENT part) goes well when I put in TILDE at the start and end of
> EXCEL_FRAGMENT. So it looks like the greedy is too greedy. It eats up a part
> of eca_kolom_expressie.
>
>
>
> Is this better for you to understand? I am a ANTLR rookie so I'm sorry when
> it is hard to get it right for you.
>
>
>
> Regards,
>
>
>
>
>
> Patrick Hofman
>
>  ------------------------------
> *From:* Bart Kiers [bkiers at gmail.com]
> *Sent:* Thursday, May 26, 2011 5:56 PM
> *To:* Patrick Hofman
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] question about antlr
>
>  Hi Patrick,
>
>  I have a hard time understanding what it is you're trying to do.
> Instead of springing the entire grammar on us (or me), could you extract
> only those rules that are causing the problem(s)? And could you include some
> example input you'd like to match/parse?
>
>  Regards,
>
>  Bart Kiers.
>
>
> On Thu, May 26, 2011 at 4:04 PM, Patrick Hofman <
> patrick.hofman at invantive.com> wrote:
>
>> And now the grammar
>>
>> From: Patrick Hofman
>> Sent: donderdag 26 mei 2011 15:35
>> To: antlr-interest at antlr.org
>> Subject: question about antlr
>>
>> Hi all,
>>
>> I have bought the ANTLR book in order to learn ANTLR better, but I still
>> don't get how to fix one thing. I hope you can help me with that.
>>
>> I have a grammar that is used to parse our custom formula format to an
>> Excel formula. So when filling an Excel worksheet the string entered is
>> something like '$C{D,.,.,.+1}' which means 'one cell right from the current
>> cell'. You will understand that eventually we will get something like
>> '$C{D,.,.,.+1} + $C{D,.,.,.+2}', so add up the value of the first cell right
>> and the second cell right (in Excel when we are at A1 this results in '=B1 +
>> B2'.
>>
>> The problem is this: In the grammar I cannot find a way to 'eat up' the
>> text between two 'eca_kolom_expressie' strings (the '$C{...}' part).
>>
>> I already tried 'EXCEL_FRAGMENT' in a hundred ways, but none of them
>> seemed to work. ('TILDE (options {greedy=false;} : .) TILDE' seems to work,
>> but when removing the TILDEs it stops working)
>>
>> I have included the grammar. Can you point me in the right direction?
>>
>> Regards,
>>
>> Patrick Hofman
>> Senior Consultant
>> Invantive B.V.
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>

From heiko.folkerts at david-software.de  Fri May 27 02:48:58 2011
From: heiko.folkerts at david-software.de (Heiko Folkerts)
Date: Fri, 27 May 2011 11:48:58 +0200
Subject: [antlr-interest] Enriching an AST with additional nodes with infos
	from existing nodes
Message-ID: <93FCBF72DCE7634481C5DF1654D8FF1305533C99@DC2>

Hi,
The subject sounds more complicated than my problem is:
I have an AST that results from a quite simple language. Now we want to transform that language to C++-code using ANTLR and string templates as proposed in the books. 
Since our language ist not static (keywords are stored in a database and not directly in the parser) transformation should be done by enriching the AST with the coresponding code fragments for a statement in the source language. A C++-Function will retrieve the translation from the database.
Q1: Is this a good way to go in this case? 

Since the AST creation is done in a C++ application we cannot use database access when running the transformation using string templates. The transformation is made by a seperate program and the AST is handed over as a string.
Q2: If enriching the AST with the code translation for every statement is the way to go: Should the additional node (that for the code) created by an arbitrary action or is there a better way?

To make things a bit clearer here is a short example:
Input language:
Motor einschalten
Fahrzeug beschleunigen

Target language:
Simulator.Engine(EngineOn);
Simulator.Speed_up();

Regards
Heiko
Mit freundlichem Gru?

Heiko Folkerts

-- 
_______________________________________________________

DAVID Software GmbH ? Wendenring 1 ? 38114 Braunschweig

Tel.: +49 531 24379-14
Fax.: +49 531 24379-79

E-Mail: mailto:heiko.folkerts at david-software.de
WWW:    http://www.david-software.de

Eintragung: Amtsgericht Braunschweig, HRB 3167
Gesch?ftsf?hrer: Frank Ptok 
_______________________________________________________

From diabeteman at gmail.com  Fri May 27 07:59:21 2011
From: diabeteman at gmail.com (Robin)
Date: Fri, 27 May 2011 16:59:21 +0200
Subject: [antlr-interest] ANTLR grammar for reStructuredText
Message-ID: <BANLkTin_m9no4dj7eJQy1iFOfxNODUYJug@mail.gmail.com>

Hello everyone,

I'm trying to write a grammar for the *reStructuredText* markup language
from the Markup
Specification<http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>
in
docutils documentation..

I reused some parts of the Python
2.3<http://www.antlr.org/grammar/1078018002577/python.tar.gz> grammar
as indentation also matters in *reStructuredText* but I can't get my grammar
to work. Especially because I have to match lines of text which may contain
*any* character.

Here is my grammar<https://github.com/robin-jarry/rst4eclipse/raw/master/src/org/diabeteman/rst4eclipse/core/parser/grammar/Rst.g>
(which
is *NOT* working for now) and an example of RST
file<http://docutils.sourceforge.net/docs/user/rst/demo.txt>
.

I am desperate for help, can someone do something for me? :-)

Thank you in advance,

*Robin*

From david.smith at cc.gatech.edu  Fri May 27 09:32:52 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Fri, 27 May 2011 12:32:52 -0400
Subject: [antlr-interest] Selectively suppressing tree output
Message-ID: <E1QPzy4-0006F1-7U@elasmtp-mealy.atl.sa.earthlink.net>

I'm trying to parse an if statement of this form:
if a > b
     a = b + 1
elseif a < b
     b = a - b
     c = 42
     d = 4
else
     b = 4
     c = a - b
end

... using the following grammar snippet:

prog:   body EOF!
         ;

body    :
         ( (stat  {if($stat.tree!=null)
                System.out.println($stat.tree.toStringTree());}
         | ifStat) {if($ifStat.tree!=null)
                System.out.println($ifStat.tree.toStringTree());} )*
         ;

stat:
         (ID GETS) => ID GETS expr NEWLINE -> ^(GETS ID expr)
     |   expr NEWLINE        -> expr
     |    NEWLINE             ->
     ;

ifStat
     : IF^ expr body
       (ELSEIF expr body)*
       (ELSE body)?
       END
     ;

... Amazingly enough, it's trying to work but with the following very 
odd behavior.  the tree output is like this:
(= a (+ b 1))
(= b (- a b))
(= c 42)
(= d 4)
(= b 4)
(= c (- a b))
(if (> a b) (= a (+ b 1)) elseif (< a b) (= b (- a b)) (= c 42) (= d 
4) else (= b 4) (= c (- a b)) end)

... It seems to be putting all the body statements into the tree and 
then putting them "correctly" into the (if ...) node.
Furthermore, if i have comments after the if statement, the (if ...) 
node is repeated for each comment.

Is there a way to suppress unwanted tree output?

                                 DMS


David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From tijet at mac.com  Fri May 27 10:23:15 2011
From: tijet at mac.com (Trevor John Thompson)
Date: Fri, 27 May 2011 10:23:15 -0700
Subject: [antlr-interest] Selectively suppressing tree output
In-Reply-To: <E1QPzy4-0006F1-7U@elasmtp-mealy.atl.sa.earthlink.net>
References: <E1QPzy4-0006F1-7U@elasmtp-mealy.atl.sa.earthlink.net>
Message-ID: <48FD5F78-7AA3-4EAB-BBCC-59ECB9B3963E@mac.com>

You are getting exactly what you asked for.
"ifStat" recursively calls "body" which dumps the tree for every "stat".
I imagine an output action in "prog" will deliver what you are looking for.

On 2011 May 27, at 09:32, David Smith wrote:

> I'm trying to parse an if statement of this form:
> if a > b
>     a = b + 1
> elseif a < b
>     b = a - b
>     c = 42
>     d = 4
> else
>     b = 4
>     c = a - b
> end
> 
> ... using the following grammar snippet:
> 
> prog:   body EOF!
>         ;
> 
> body    :
>         ( (stat  {if($stat.tree!=null)
>                System.out.println($stat.tree.toStringTree());}
>         | ifStat) {if($ifStat.tree!=null)
>                System.out.println($ifStat.tree.toStringTree());} )*
>         ;
> 
> stat:
>         (ID GETS) => ID GETS expr NEWLINE -> ^(GETS ID expr)
>     |   expr NEWLINE        -> expr
>     |    NEWLINE             ->
>     ;
> 
> ifStat
>     : IF^ expr body
>       (ELSEIF expr body)*
>       (ELSE body)?
>       END
>     ;
> 
> ... Amazingly enough, it's trying to work but with the following very 
> odd behavior.  the tree output is like this:
> (= a (+ b 1))
> (= b (- a b))
> (= c 42)
> (= d 4)
> (= b 4)
> (= c (- a b))
> (if (> a b) (= a (+ b 1)) elseif (< a b) (= b (- a b)) (= c 42) (= d 
> 4) else (= b 4) (= c (- a b)) end)
> 
> ... It seems to be putting all the body statements into the tree and 
> then putting them "correctly" into the (if ...) node.
> Furthermore, if i have comments after the if statement, the (if ...) 
> node is repeated for each comment.
> 
> Is there a way to suppress unwanted tree output?
> 
>                                 DMS
> 
> 
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

--
Trevor John Thompson    (425) 246-4023
net: tijet at me.com
Quidquid Latine dictum sit, altum videtur.


From abargnesi at gmail.com  Fri May 27 14:13:02 2011
From: abargnesi at gmail.com (Anthony Bargnesi)
Date: Fri, 27 May 2011 17:13:02 -0400
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
Message-ID: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>

Hello folks,

I am baffled on how to get my parser to understand lexer tokens with
overlapping definitions
in the context of other rules.

My AST grammar is defined as:

-----------------------------------------
expression:
    (call)+
    ;

call:
    'call' IDENT
    ;

VALUE:
    (LETTER | DIGIT)+
    ;

IDENT:
    LETTER (LETTER | DIGIT | '_')*
    ;

fragment LETTER:
    ('a'..'z' | 'A'..'Z')
    ;

fragment DIGIT:
    '0'..'9'
    ;

WS:
    (' ' | '\t' | '\n' | '\r'| '\f')+
    {$channel = HIDDEN;}
    ;
-----------------------------------------

This grammar allows me to parse "call my_val" because it does match against
the call rule
and the IDENT token.

But if I try to parse "call myval" it incorrectly matches against VALUE and
throws the following
error:

MismatchedTokenException: line 1:5 mismatched input 'myval' expecting
'\u0004'

If I switch the order of the VALUE and IDENT, so that IDENT is first, then
the following matches
the call rule:

call myval
call my_val

both will match against the IDENT token and things are fine.

My problem is that this solution breaks down once IDENT can no longer
subsume all input.

Consider a modified grammar where the VALUE token must end with a '!'
character and an
"action" rule must match against the VALUE token:

--------------------------------------
expression:
    (call | action)+
    ;

call:
    'call' IDENT
    ;

action:
    'action' VALUE
    ;

IDENT:
    LETTER (LETTER | DIGIT | '_')*
    ;

VALUE:
    (LETTER | DIGIT) '!'+
    ;

fragment LETTER:
    ('a'..'z' | 'A'..'Z')
    ;

fragment DIGIT:
    '0'..'9'
    ;

WS:
    (' ' | '\t' | '\n' | '\r'| '\f')+
    {$channel = HIDDEN;}
    ;
-------------------------------------

If I try to parse the following the last expression will fail:

call MY_VAL      (parses)
call MYVAL        (parses)
action MYVAL!   (MismatchedTokenException: line 3:7 mismatched input 'MYVAL'
expecting '\u0005')


Are there any options in ANTLR to help differentiate IDENT from VALUE?
Maybe the context of the
rule can help in some way?


Thanks in advance,
Anthony Bargnesi

From kirby.bohling at gmail.com  Fri May 27 15:23:49 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Fri, 27 May 2011 17:23:49 -0500
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
Message-ID: <BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>

First grammar:
> VALUE:
> ? ?(LETTER | DIGIT)+
> ? ?;

Second Grammar:
> VALUE:
> ? ?(LETTER | DIGIT) '!'+
> ? ?;
> action MYVAL! ? (MismatchedTokenException: line 3:7 mismatched input 'MYVAL'

You've got the rule in + in the wrong place.  I'm pretty sure you meant:

VALUE:
   (LETTER | DIGIT)+ '!'
;

It is blowing up at the 'Y', because it can have one letter or one
digit, and at least '!'.  You've given it 5 letters then one '!'.

While you can make this work, it would likely be easier to make the
difference between those to easier to disambiguate.  However, if you
think this is the correct approach read the FAQ about floats vs.
ranges:
http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs

That's got the example of all of the power tools for how to man handle
ambiguous tokens types.

Kirby

From abargnesi at gmail.com  Fri May 27 15:30:04 2011
From: abargnesi at gmail.com (Anthony Bargnesi)
Date: Fri, 27 May 2011 18:30:04 -0400
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
	<BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
Message-ID: <BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>

Thanks for the quick reply!

My second grammar was a mistake, sorry.  I realize that '!'+ does a good job
of disambiguating
VALUE from IDENT.

But if I change that second grammar too:

call:
    'call' id=IDENT
    ;

action:
    'action' VALUE
    ;

IDENT:
    LETTER (LETTER | DIGIT | '_')*
    ;

VALUE:
    (LETTER | DIGIT)+
    ;

fragment LETTER:
    ('a'..'z' | 'A'..'Z')
    ;

fragment DIGIT:
    '0'..'9'
    ;

WS:
    (' ' | '\t' | '\n' | '\r'| '\f')+
    {$channel = HIDDEN;}
    ;

Then I parse "action myval" and receive this error:

line 1:7 mismatched input 'myval' expecting VALUE

Because the lexer cannot determine whether the token is IDENT or VALUE
my action rule will fail.

What are my options for disambiguation at this point?

-tony


On Fri, May 27, 2011 at 6:23 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> First grammar:
> > VALUE:
> >    (LETTER | DIGIT)+
> >    ;
>
> Second Grammar:
> > VALUE:
> >    (LETTER | DIGIT) '!'+
> >    ;
> > action MYVAL!   (MismatchedTokenException: line 3:7 mismatched input
> 'MYVAL'
>
> You've got the rule in + in the wrong place.  I'm pretty sure you meant:
>
> VALUE:
>   (LETTER | DIGIT)+ '!'
> ;
>
> It is blowing up at the 'Y', because it can have one letter or one
> digit, and at least '!'.  You've given it 5 letters then one '!'.
>
> While you can make this work, it would likely be easier to make the
> difference between those to easier to disambiguate.  However, if you
> think this is the correct approach read the FAQ about floats vs.
> ranges:
>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>
> That's got the example of all of the power tools for how to man handle
> ambiguous tokens types.
>
> Kirby
>

From abargnesi at gmail.com  Fri May 27 15:33:09 2011
From: abargnesi at gmail.com (Anthony Bargnesi)
Date: Fri, 27 May 2011 18:33:09 -0400
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
	<BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
	<BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
Message-ID: <BANLkTi=6s=16b3rKx4syiFPjKg+ntY605A@mail.gmail.com>

I'm investigating the resource you sent.  Thanks for the direction.

-tony

On Fri, May 27, 2011 at 6:30 PM, Anthony Bargnesi <abargnesi at gmail.com>wrote:

> Thanks for the quick reply!
>
> My second grammar was a mistake, sorry.  I realize that '!'+ does a good
> job of disambiguating
> VALUE from IDENT.
>
> But if I change that second grammar too:
>
> call:
>     'call' id=IDENT
>
>     ;
>
> action:
>     'action' VALUE
>     ;
>
> IDENT:
>     LETTER (LETTER | DIGIT | '_')*
>     ;
>
> VALUE:
>     (LETTER | DIGIT)+
>     ;
>
> fragment LETTER:
>     ('a'..'z' | 'A'..'Z')
>     ;
>
> fragment DIGIT:
>     '0'..'9'
>     ;
>
> WS:
>     (' ' | '\t' | '\n' | '\r'| '\f')+
>     {$channel = HIDDEN;}
>     ;
>
> Then I parse "action myval" and receive this error:
>
> line 1:7 mismatched input 'myval' expecting VALUE
>
> Because the lexer cannot determine whether the token is IDENT or VALUE
> my action rule will fail.
>
> What are my options for disambiguation at this point?
>
> -tony
>
>
>
> On Fri, May 27, 2011 at 6:23 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:
>
>> First grammar:
>> > VALUE:
>> >    (LETTER | DIGIT)+
>> >    ;
>>
>> Second Grammar:
>> > VALUE:
>> >    (LETTER | DIGIT) '!'+
>> >    ;
>> > action MYVAL!   (MismatchedTokenException: line 3:7 mismatched input
>> 'MYVAL'
>>
>> You've got the rule in + in the wrong place.  I'm pretty sure you meant:
>>
>> VALUE:
>>   (LETTER | DIGIT)+ '!'
>> ;
>>
>> It is blowing up at the 'Y', because it can have one letter or one
>> digit, and at least '!'.  You've given it 5 letters then one '!'.
>>
>> While you can make this work, it would likely be easier to make the
>> difference between those to easier to disambiguate.  However, if you
>> think this is the correct approach read the FAQ about floats vs.
>> ranges:
>>
>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>>
>> That's got the example of all of the power tools for how to man handle
>> ambiguous tokens types.
>>
>> Kirby
>>
>
>

From kirby.bohling at gmail.com  Fri May 27 15:43:41 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Fri, 27 May 2011 17:43:41 -0500
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
	<BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
	<BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
Message-ID: <BANLkTim2oaFCF5F59j1y7srJ79apgPSTzw@mail.gmail.com>

What you'd likely do is one of the following:

1. Merge all the token types into a single rule that recognizes all of
them, and after that rule finishes, figure out the "right" answer and
set the token type.
(In this case, everything is handled in the lexer).  At the end of the
rule you'd have a section that did { $type = computeTokenType(...); }
Or you can use the float vs. range FAQ entry to get the lexer to do
all of that for you, just the lexer will be a serious hassle to read
and modify.

I don't know off hand what goes in the arguments.  Write a version
that takes no arguments, then look at the generated code and see what
you think you'll need, and pass it in to that function.

2. Treat it like Keyword vs. Identifier problem from the FAQ.
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741

In this case, you're doing it later in the parser, which likely gives
you more flexibility.  You will do effectively the same thing in this
case, but you'll modify the token type (or generate an imaginary
parent token) in the parser after looking to see "I need an VALUE" at
this point in the parser.  You'll have a rule that effectively asks
"Is this identifier I have really a VALUE?", and use that anywhere you
require a VALUE and not an IDENT.

Honestly, I am guessing that the whole problem is a sign that you're
doing it the hard way.  It'd be much easier if you designed the
language such that it was unambiguous, but I don't know much about the
problem at hand.

Kirby



On Fri, May 27, 2011 at 5:30 PM, Anthony Bargnesi <abargnesi at gmail.com> wrote:
> Thanks for the quick reply!
>
> My second grammar was a mistake, sorry.? I realize that '!'+ does a good job
> of disambiguating
> VALUE from IDENT.
>
> But if I change that second grammar too:
>
> call:
> ??? 'call' id=IDENT
> ??? ;
>
> action:
> ??? 'action' VALUE
> ??? ;
>
> IDENT:
> ??? LETTER (LETTER | DIGIT | '_')*
> ??? ;
>
> VALUE:
> ??? (LETTER | DIGIT)+
> ??? ;
>
> fragment LETTER:
> ??? ('a'..'z' | 'A'..'Z')
> ??? ;
>
> fragment DIGIT:
> ??? '0'..'9'
> ??? ;
>
> WS:
> ??? (' ' | '\t' | '\n' | '\r'| '\f')+
> ??? {$channel = HIDDEN;}
> ??? ;
>
> Then I parse "action myval" and receive this error:
>
> line 1:7 mismatched input 'myval' expecting VALUE
>
> Because the lexer cannot determine whether the token is IDENT or VALUE
> my action rule will fail.
>
> What are my options for disambiguation at this point?
>
> -tony
>
>
> On Fri, May 27, 2011 at 6:23 PM, Kirby Bohling <kirby.bohling at gmail.com>
> wrote:
>>
>> First grammar:
>> > VALUE:
>> > ? ?(LETTER | DIGIT)+
>> > ? ?;
>>
>> Second Grammar:
>> > VALUE:
>> > ? ?(LETTER | DIGIT) '!'+
>> > ? ?;
>> > action MYVAL! ? (MismatchedTokenException: line 3:7 mismatched input
>> > 'MYVAL'
>>
>> You've got the rule in + in the wrong place. ?I'm pretty sure you meant:
>>
>> VALUE:
>> ? (LETTER | DIGIT)+ '!'
>> ;
>>
>> It is blowing up at the 'Y', because it can have one letter or one
>> digit, and at least '!'. ?You've given it 5 letters then one '!'.
>>
>> While you can make this work, it would likely be easier to make the
>> difference between those to easier to disambiguate. ?However, if you
>> think this is the correct approach read the FAQ about floats vs.
>> ranges:
>>
>> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>>
>> That's got the example of all of the power tools for how to man handle
>> ambiguous tokens types.
>>
>> Kirby
>
>

From abargnesi at gmail.com  Fri May 27 16:12:17 2011
From: abargnesi at gmail.com (Anthony Bargnesi)
Date: Fri, 27 May 2011 19:12:17 -0400
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTim2oaFCF5F59j1y7srJ79apgPSTzw@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
	<BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
	<BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
	<BANLkTim2oaFCF5F59j1y7srJ79apgPSTzw@mail.gmail.com>
Message-ID: <BANLkTime9N79VUEQmiswzTTg=rnBQ64B3w@mail.gmail.com>

Thanks again Kirby.

The first examples were meant for discussion but the real grammar has
ambiguous
language with identifiers and values.

The identifier is defined as a regular expression \w+ which translates to
LETTER: ('a'..'z' | 'A'..'Z');
DIGIT: '0'..'9';
IDENT: LETTER (LETTER | DIGIT | '_')*

and VALUE would be a looser definition than IDENT
VALUE: (LETTER | DIGIT)+;

So because not all IDENT will have an underscore the lexer can not
distinguish
between both tokens.

Assuming I can't differentiate VALUE from IDENT your options might help, but

(option 1 - merge with single rule)
If I merged both tokens into a rule defined as:
identifier: VALUE | IDENT { $type = determineType(...); }

I still won't know how to determine the type because I'm not sure what
parent
rule context I'm processing under.  The characters of the token alone cannot
tell me that.

(option 2 - emit different token at parse time)
Same issue as option 1.  I will not be able to differentiate based on the
token characters alone.

-tony

On Fri, May 27, 2011 at 6:43 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> What you'd likely do is one of the following:
>
> 1. Merge all the token types into a single rule that recognizes all of
> them, and after that rule finishes, figure out the "right" answer and
> set the token type.
> (In this case, everything is handled in the lexer).  At the end of the
> rule you'd have a section that did { $type = computeTokenType(...); }
> Or you can use the float vs. range FAQ entry to get the lexer to do
> all of that for you, just the lexer will be a serious hassle to read
> and modify.
>
> I don't know off hand what goes in the arguments.  Write a version
> that takes no arguments, then look at the generated code and see what
> you think you'll need, and pass it in to that function.
>
> 2. Treat it like Keyword vs. Identifier problem from the FAQ.
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>
> In this case, you're doing it later in the parser, which likely gives
> you more flexibility.  You will do effectively the same thing in this
> case, but you'll modify the token type (or generate an imaginary
> parent token) in the parser after looking to see "I need an VALUE" at
> this point in the parser.  You'll have a rule that effectively asks
> "Is this identifier I have really a VALUE?", and use that anywhere you
> require a VALUE and not an IDENT.
>
> Honestly, I am guessing that the whole problem is a sign that you're
> doing it the hard way.  It'd be much easier if you designed the
> language such that it was unambiguous, but I don't know much about the
> problem at hand.
>
> Kirby
>
>
>
> On Fri, May 27, 2011 at 5:30 PM, Anthony Bargnesi <abargnesi at gmail.com>
> wrote:
> > Thanks for the quick reply!
> >
> > My second grammar was a mistake, sorry.  I realize that '!'+ does a good
> job
> > of disambiguating
> > VALUE from IDENT.
> >
> > But if I change that second grammar too:
> >
> > call:
> >     'call' id=IDENT
> >     ;
> >
> > action:
> >     'action' VALUE
> >     ;
> >
> > IDENT:
> >     LETTER (LETTER | DIGIT | '_')*
> >     ;
> >
> > VALUE:
> >     (LETTER | DIGIT)+
> >     ;
> >
> > fragment LETTER:
> >     ('a'..'z' | 'A'..'Z')
> >     ;
> >
> > fragment DIGIT:
> >     '0'..'9'
> >     ;
> >
> > WS:
> >     (' ' | '\t' | '\n' | '\r'| '\f')+
> >     {$channel = HIDDEN;}
> >     ;
> >
> > Then I parse "action myval" and receive this error:
> >
> > line 1:7 mismatched input 'myval' expecting VALUE
> >
> > Because the lexer cannot determine whether the token is IDENT or VALUE
> > my action rule will fail.
> >
> > What are my options for disambiguation at this point?
> >
> > -tony
> >
> >
> > On Fri, May 27, 2011 at 6:23 PM, Kirby Bohling <kirby.bohling at gmail.com>
> > wrote:
> >>
> >> First grammar:
> >> > VALUE:
> >> >    (LETTER | DIGIT)+
> >> >    ;
> >>
> >> Second Grammar:
> >> > VALUE:
> >> >    (LETTER | DIGIT) '!'+
> >> >    ;
> >> > action MYVAL!   (MismatchedTokenException: line 3:7 mismatched input
> >> > 'MYVAL'
> >>
> >> You've got the rule in + in the wrong place.  I'm pretty sure you meant:
> >>
> >> VALUE:
> >>   (LETTER | DIGIT)+ '!'
> >> ;
> >>
> >> It is blowing up at the 'Y', because it can have one letter or one
> >> digit, and at least '!'.  You've given it 5 letters then one '!'.
> >>
> >> While you can make this work, it would likely be easier to make the
> >> difference between those to easier to disambiguate.  However, if you
> >> think this is the correct approach read the FAQ about floats vs.
> >> ranges:
> >>
> >>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
> >>
> >> That's got the example of all of the power tools for how to man handle
> >> ambiguous tokens types.
> >>
> >> Kirby
> >
> >
>

From kirby.bohling at gmail.com  Fri May 27 16:43:27 2011
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Fri, 27 May 2011 18:43:27 -0500
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTime9N79VUEQmiswzTTg=rnBQ64B3w@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
	<BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
	<BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
	<BANLkTim2oaFCF5F59j1y7srJ79apgPSTzw@mail.gmail.com>
	<BANLkTime9N79VUEQmiswzTTg=rnBQ64B3w@mail.gmail.com>
Message-ID: <BANLkTin=8=C3ayADSPCSEUPdoCBHqnY=Pg@mail.gmail.com>

I'm going to repeat:  The fact that you're having this problem is a
warning sign that your language is ill-defined, or at least ANTLR
isn't the best tool to parse it.

Well, when choose to resolve the ambiguity in the parser or tree
grammar, you'll have plenty of context in order to figure it out.  I
have no idea what an ident or value is in your language, or how I'd
use them differently.  I've got a guess based on the common usage of
them.

Any chance you'll send examples and how you'd figure it out by hand?

But there's a reason in C, that variables, can't start with a digit,
and that literal strings are enclosed with quotes, precisely to avoid
this type of problem.  It's just so much easier, that is worth forcing
the programmer add something near the beginning to remove the
ambiguity of what they mean.

Without that it is really hard to tell if:

action foo;

foo means the "identifier" foo, or if it means the "value" foo.  How
would you figure it out?  Is it like C++ constructor vs. function call
where, if it can be treated like an identifier it is?  In that case,
you're going to need to write and build an symbol table as you go, and
when you come across an identifier, look it up in the symbol table, if
that works, then it is an identifier, if it doesn't, it is must be a
literal.

Kirby


On Fri, May 27, 2011 at 6:12 PM, Anthony Bargnesi <abargnesi at gmail.com> wrote:
> Thanks again Kirby.
>
> The first examples were meant for discussion but the real grammar has
> ambiguous
> language with identifiers and values.
>
> The identifier is defined as a regular expression \w+ which translates to
> LETTER: ('a'..'z' | 'A'..'Z');
> DIGIT: '0'..'9';
> IDENT: LETTER (LETTER | DIGIT | '_')*
>
> and VALUE would be a looser definition than IDENT
> VALUE: (LETTER | DIGIT)+;
>
> So because not all IDENT will have an underscore the lexer can not
> distinguish
> between both tokens.
>
> Assuming I can't differentiate VALUE from IDENT your options might help, but
>
> (option 1 - merge with single rule)
> If I merged both tokens into a rule defined as:
> identifier: VALUE | IDENT { $type = determineType(...); }
>
> I still won't know how to determine the type because I'm not sure what
> parent
> rule context I'm processing under.? The characters of the token alone cannot
> tell me that.
>
> (option 2 - emit different token at parse time)
> Same issue as option 1.? I will not be able to differentiate based on the
> token characters alone.
>
> -tony
>
> On Fri, May 27, 2011 at 6:43 PM, Kirby Bohling <kirby.bohling at gmail.com>
> wrote:
>>
>> What you'd likely do is one of the following:
>>
>> 1. Merge all the token types into a single rule that recognizes all of
>> them, and after that rule finishes, figure out the "right" answer and
>> set the token type.
>> (In this case, everything is handled in the lexer). ?At the end of the
>> rule you'd have a section that did { $type = computeTokenType(...); }
>> Or you can use the float vs. range FAQ entry to get the lexer to do
>> all of that for you, just the lexer will be a serious hassle to read
>> and modify.
>>
>> I don't know off hand what goes in the arguments. ?Write a version
>> that takes no arguments, then look at the generated code and see what
>> you think you'll need, and pass it in to that function.
>>
>> 2. Treat it like Keyword vs. Identifier problem from the FAQ.
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>>
>> In this case, you're doing it later in the parser, which likely gives
>> you more flexibility. ?You will do effectively the same thing in this
>> case, but you'll modify the token type (or generate an imaginary
>> parent token) in the parser after looking to see "I need an VALUE" at
>> this point in the parser. ?You'll have a rule that effectively asks
>> "Is this identifier I have really a VALUE?", and use that anywhere you
>> require a VALUE and not an IDENT.
>>
>> Honestly, I am guessing that the whole problem is a sign that you're
>> doing it the hard way. ?It'd be much easier if you designed the
>> language such that it was unambiguous, but I don't know much about the
>> problem at hand.
>>
>> Kirby
>>
>>
>>
>> On Fri, May 27, 2011 at 5:30 PM, Anthony Bargnesi <abargnesi at gmail.com>
>> wrote:
>> > Thanks for the quick reply!
>> >
>> > My second grammar was a mistake, sorry.? I realize that '!'+ does a good
>> > job
>> > of disambiguating
>> > VALUE from IDENT.
>> >
>> > But if I change that second grammar too:
>> >
>> > call:
>> > ??? 'call' id=IDENT
>> > ??? ;
>> >
>> > action:
>> > ??? 'action' VALUE
>> > ??? ;
>> >
>> > IDENT:
>> > ??? LETTER (LETTER | DIGIT | '_')*
>> > ??? ;
>> >
>> > VALUE:
>> > ??? (LETTER | DIGIT)+
>> > ??? ;
>> >
>> > fragment LETTER:
>> > ??? ('a'..'z' | 'A'..'Z')
>> > ??? ;
>> >
>> > fragment DIGIT:
>> > ??? '0'..'9'
>> > ??? ;
>> >
>> > WS:
>> > ??? (' ' | '\t' | '\n' | '\r'| '\f')+
>> > ??? {$channel = HIDDEN;}
>> > ??? ;
>> >
>> > Then I parse "action myval" and receive this error:
>> >
>> > line 1:7 mismatched input 'myval' expecting VALUE
>> >
>> > Because the lexer cannot determine whether the token is IDENT or VALUE
>> > my action rule will fail.
>> >
>> > What are my options for disambiguation at this point?
>> >
>> > -tony
>> >
>> >
>> > On Fri, May 27, 2011 at 6:23 PM, Kirby Bohling <kirby.bohling at gmail.com>
>> > wrote:
>> >>
>> >> First grammar:
>> >> > VALUE:
>> >> > ? ?(LETTER | DIGIT)+
>> >> > ? ?;
>> >>
>> >> Second Grammar:
>> >> > VALUE:
>> >> > ? ?(LETTER | DIGIT) '!'+
>> >> > ? ?;
>> >> > action MYVAL! ? (MismatchedTokenException: line 3:7 mismatched input
>> >> > 'MYVAL'
>> >>
>> >> You've got the rule in + in the wrong place. ?I'm pretty sure you
>> >> meant:
>> >>
>> >> VALUE:
>> >> ? (LETTER | DIGIT)+ '!'
>> >> ;
>> >>
>> >> It is blowing up at the 'Y', because it can have one letter or one
>> >> digit, and at least '!'. ?You've given it 5 letters then one '!'.
>> >>
>> >> While you can make this work, it would likely be easier to make the
>> >> difference between those to easier to disambiguate. ?However, if you
>> >> think this is the correct approach read the FAQ about floats vs.
>> >> ranges:
>> >>
>> >>
>> >> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
>> >>
>> >> That's got the example of all of the power tools for how to man handle
>> >> ambiguous tokens types.
>> >>
>> >> Kirby
>> >
>> >
>
>

From abargnesi at gmail.com  Fri May 27 16:57:09 2011
From: abargnesi at gmail.com (Anthony Bargnesi)
Date: Fri, 27 May 2011 19:57:09 -0400
Subject: [antlr-interest] Non-deterministic behaviour in matching lexer
	tokens
In-Reply-To: <BANLkTin=8=C3ayADSPCSEUPdoCBHqnY=Pg@mail.gmail.com>
References: <BANLkTimARcZdcy727Qdwtj+hNVq3EyG5nA@mail.gmail.com>
	<BANLkTi=fr4QZ1s+2REdWdOKxJnjHYKuzrw@mail.gmail.com>
	<BANLkTin29+FhyxWLGdhwyuZ3vp9G=G+-eQ@mail.gmail.com>
	<BANLkTim2oaFCF5F59j1y7srJ79apgPSTzw@mail.gmail.com>
	<BANLkTime9N79VUEQmiswzTTg=rnBQ64B3w@mail.gmail.com>
	<BANLkTin=8=C3ayADSPCSEUPdoCBHqnY=Pg@mail.gmail.com>
Message-ID: <BANLkTimRdVTPYTNGZg6zniqZ214iNu29KA@mail.gmail.com>

I am now seeing your point.  Providing the prefix (and suffix) allows for
the disambiguation
but will also feel consistent for the user.  The user will know that for
values (supporting a wider range
of utf-8 character) they will need to quote their strings, but if they are
declaring a variable they should
follow the identifier format (defined in my grammar as \w+).

The language I am capturing is around biological expressions.  I can express
biological relationships
in arbitrary strings such as

(6E,8Z,11Z,14Z)-(5S)-5-Hydroperoxyeicosa-6,8,11,14-tetraenoate

and I can declare language constructs and assign them to variables

DEFINE my_group AS (...)

Here my_group would follow the IDENT approach.

I initially wanted to provide a quoting convenience and say:
- if you have letters and numbers in sequence then you don't need to double
quote
- if you have other characters (such as '-' or ' ') then you need to double
quote

Consider a biological expression:

    protein(NS:ABC1) increases protein(NS:"AB Acetase 7-G")

In order to know where the value ends it would be straight-forward to
surround with quotes.

I think I will just change the specific values to be QUOTED_VALUE which is
already an option
in the grammar.

Thanks for the help and guidance.

-tony

On Fri, May 27, 2011 at 7:43 PM, Kirby Bohling <kirby.bohling at gmail.com>wrote:

> I'm going to repeat:  The fact that you're having this problem is a
> warning sign that your language is ill-defined, or at least ANTLR
> isn't the best tool to parse it.
>
> Well, when choose to resolve the ambiguity in the parser or tree
> grammar, you'll have plenty of context in order to figure it out.  I
> have no idea what an ident or value is in your language, or how I'd
> use them differently.  I've got a guess based on the common usage of
> them.
>
> Any chance you'll send examples and how you'd figure it out by hand?
>
> But there's a reason in C, that variables, can't start with a digit,
> and that literal strings are enclosed with quotes, precisely to avoid
> this type of problem.  It's just so much easier, that is worth forcing
> the programmer add something near the beginning to remove the
> ambiguity of what they mean.
>
> Without that it is really hard to tell if:
>
> action foo;
>
> foo means the "identifier" foo, or if it means the "value" foo.  How
> would you figure it out?  Is it like C++ constructor vs. function call
> where, if it can be treated like an identifier it is?  In that case,
> you're going to need to write and build an symbol table as you go, and
> when you come across an identifier, look it up in the symbol table, if
> that works, then it is an identifier, if it doesn't, it is must be a
> literal.
>
> Kirby
>
>
> On Fri, May 27, 2011 at 6:12 PM, Anthony Bargnesi <abargnesi at gmail.com>
> wrote:
> > Thanks again Kirby.
> >
> > The first examples were meant for discussion but the real grammar has
> > ambiguous
> > language with identifiers and values.
> >
> > The identifier is defined as a regular expression \w+ which translates to
> > LETTER: ('a'..'z' | 'A'..'Z');
> > DIGIT: '0'..'9';
> > IDENT: LETTER (LETTER | DIGIT | '_')*
> >
> > and VALUE would be a looser definition than IDENT
> > VALUE: (LETTER | DIGIT)+;
> >
> > So because not all IDENT will have an underscore the lexer can not
> > distinguish
> > between both tokens.
> >
> > Assuming I can't differentiate VALUE from IDENT your options might help,
> but
> >
> > (option 1 - merge with single rule)
> > If I merged both tokens into a rule defined as:
> > identifier: VALUE | IDENT { $type = determineType(...); }
> >
> > I still won't know how to determine the type because I'm not sure what
> > parent
> > rule context I'm processing under.  The characters of the token alone
> cannot
> > tell me that.
> >
> > (option 2 - emit different token at parse time)
> > Same issue as option 1.  I will not be able to differentiate based on the
> > token characters alone.
> >
> > -tony
> >
> > On Fri, May 27, 2011 at 6:43 PM, Kirby Bohling <kirby.bohling at gmail.com>
> > wrote:
> >>
> >> What you'd likely do is one of the following:
> >>
> >> 1. Merge all the token types into a single rule that recognizes all of
> >> them, and after that rule finishes, figure out the "right" answer and
> >> set the token type.
> >> (In this case, everything is handled in the lexer).  At the end of the
> >> rule you'd have a section that did { $type = computeTokenType(...); }
> >> Or you can use the float vs. range FAQ entry to get the lexer to do
> >> all of that for you, just the lexer will be a serious hassle to read
> >> and modify.
> >>
> >> I don't know off hand what goes in the arguments.  Write a version
> >> that takes no arguments, then look at the generated code and see what
> >> you think you'll need, and pass it in to that function.
> >>
> >> 2. Treat it like Keyword vs. Identifier problem from the FAQ.
> >> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
> >>
> >> In this case, you're doing it later in the parser, which likely gives
> >> you more flexibility.  You will do effectively the same thing in this
> >> case, but you'll modify the token type (or generate an imaginary
> >> parent token) in the parser after looking to see "I need an VALUE" at
> >> this point in the parser.  You'll have a rule that effectively asks
> >> "Is this identifier I have really a VALUE?", and use that anywhere you
> >> require a VALUE and not an IDENT.
> >>
> >> Honestly, I am guessing that the whole problem is a sign that you're
> >> doing it the hard way.  It'd be much easier if you designed the
> >> language such that it was unambiguous, but I don't know much about the
> >> problem at hand.
> >>
> >> Kirby
> >>
> >>
> >>
> >> On Fri, May 27, 2011 at 5:30 PM, Anthony Bargnesi <abargnesi at gmail.com>
> >> wrote:
> >> > Thanks for the quick reply!
> >> >
> >> > My second grammar was a mistake, sorry.  I realize that '!'+ does a
> good
> >> > job
> >> > of disambiguating
> >> > VALUE from IDENT.
> >> >
> >> > But if I change that second grammar too:
> >> >
> >> > call:
> >> >     'call' id=IDENT
> >> >     ;
> >> >
> >> > action:
> >> >     'action' VALUE
> >> >     ;
> >> >
> >> > IDENT:
> >> >     LETTER (LETTER | DIGIT | '_')*
> >> >     ;
> >> >
> >> > VALUE:
> >> >     (LETTER | DIGIT)+
> >> >     ;
> >> >
> >> > fragment LETTER:
> >> >     ('a'..'z' | 'A'..'Z')
> >> >     ;
> >> >
> >> > fragment DIGIT:
> >> >     '0'..'9'
> >> >     ;
> >> >
> >> > WS:
> >> >     (' ' | '\t' | '\n' | '\r'| '\f')+
> >> >     {$channel = HIDDEN;}
> >> >     ;
> >> >
> >> > Then I parse "action myval" and receive this error:
> >> >
> >> > line 1:7 mismatched input 'myval' expecting VALUE
> >> >
> >> > Because the lexer cannot determine whether the token is IDENT or VALUE
> >> > my action rule will fail.
> >> >
> >> > What are my options for disambiguation at this point?
> >> >
> >> > -tony
> >> >
> >> >
> >> > On Fri, May 27, 2011 at 6:23 PM, Kirby Bohling <
> kirby.bohling at gmail.com>
> >> > wrote:
> >> >>
> >> >> First grammar:
> >> >> > VALUE:
> >> >> >    (LETTER | DIGIT)+
> >> >> >    ;
> >> >>
> >> >> Second Grammar:
> >> >> > VALUE:
> >> >> >    (LETTER | DIGIT) '!'+
> >> >> >    ;
> >> >> > action MYVAL!   (MismatchedTokenException: line 3:7 mismatched
> input
> >> >> > 'MYVAL'
> >> >>
> >> >> You've got the rule in + in the wrong place.  I'm pretty sure you
> >> >> meant:
> >> >>
> >> >> VALUE:
> >> >>   (LETTER | DIGIT)+ '!'
> >> >> ;
> >> >>
> >> >> It is blowing up at the 'Y', because it can have one letter or one
> >> >> digit, and at least '!'.  You've given it 5 letters then one '!'.
> >> >>
> >> >> While you can make this work, it would likely be easier to make the
> >> >> difference between those to easier to disambiguate.  However, if you
> >> >> think this is the correct approach read the FAQ about floats vs.
> >> >> ranges:
> >> >>
> >> >>
> >> >>
> http://www.antlr.org/wiki/display/ANTLR3/Lexer+grammar+for+floating+point,+dot,+range,+time+specs
> >> >>
> >> >> That's got the example of all of the power tools for how to man
> handle
> >> >> ambiguous tokens types.
> >> >>
> >> >> Kirby
> >> >
> >> >
> >
> >
>

From diabeteman at gmail.com  Fri May 27 17:34:30 2011
From: diabeteman at gmail.com (Robin)
Date: Sat, 28 May 2011 02:34:30 +0200
Subject: [antlr-interest] ANTLR grammar for reStructuredText
Message-ID: <BANLkTi=QVJ0zUizQEMCDCdikvKURR_2L2A@mail.gmail.com>

I just re-read my email and I may have been a little bit vague in my
questions :-) So I'll start with some more specific ones :

1/ How do I match a line of text?
Since RST is a documentation markup language, there are no limitations in
the characters allowed. How can I match a sequence of words (sentence)
without overlapping with specific RST markup ? (such as comments or
directives)

2/ How do I match RST section titles?
http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#sections
How can I have the parser "remember" the current section number (depth) and
emit an error if the markup is inconsistent with the previous section
titles?

3/ How do I match RST comments?
http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#comments
Since indentation matters, is there another way to do it than the python
parser ? (with a custom TokenStream)

Thanks in advance !

Robin

From michael.bedward at gmail.com  Fri May 27 21:12:08 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Sat, 28 May 2011 14:12:08 +1000
Subject: [antlr-interest] ANTLR grammar for reStructuredText
In-Reply-To: <BANLkTi=QVJ0zUizQEMCDCdikvKURR_2L2A@mail.gmail.com>
References: <BANLkTi=QVJ0zUizQEMCDCdikvKURR_2L2A@mail.gmail.com>
Message-ID: <BANLkTiktQJ3DQOpUiWhoXQ+4NgFinBr_dg@mail.gmail.com>

Hi Robin,

I use sphinx / rst so I'm very pleased to see someone working on an
ANTLR grammar. I'd be keen to help out if you are going to make it
open source. It will be a couple of days before I can look at it so
others here might answer your questions before I get to it - if not
I'll reply next week.

Michael


On 28 May 2011 10:34, Robin <diabeteman at gmail.com> wrote:
> I just re-read my email and I may have been a little bit vague in my
> questions :-) So I'll start with some more specific ones :
>
> 1/ How do I match a line of text?
> Since RST is a documentation markup language, there are no limitations in
> the characters allowed. How can I match a sequence of words (sentence)
> without overlapping with specific RST markup ? (such as comments or
> directives)
>
> 2/ How do I match RST section titles?
> http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#sections
> How can I have the parser "remember" the current section number (depth) and
> emit an error if the markup is inconsistent with the previous section
> titles?
>
> 3/ How do I match RST comments?
> http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#comments
> Since indentation matters, is there another way to do it than the python
> parser ? (with a custom TokenStream)
>
> Thanks in advance !
>
> Robin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From diabeteman at gmail.com  Sat May 28 03:24:40 2011
From: diabeteman at gmail.com (Robin)
Date: Sat, 28 May 2011 12:24:40 +0200
Subject: [antlr-interest] ANTLR grammar for reStructuredText
In-Reply-To: <BANLkTiktQJ3DQOpUiWhoXQ+4NgFinBr_dg@mail.gmail.com>
References: <BANLkTi=QVJ0zUizQEMCDCdikvKURR_2L2A@mail.gmail.com>
	<BANLkTiktQJ3DQOpUiWhoXQ+4NgFinBr_dg@mail.gmail.com>
Message-ID: <BANLkTi=KaXPkNixg2MteZeajrrkxuOrGGg@mail.gmail.com>

Hello Michael,

Yes I want to make it open source, I'm trying to code an eclipse IDE plugin
for RST editing, syntax coloring, etc. And before doing so, I need a parser
:-)
Here is the project on github : https://github.com/robin-jarry/rst4eclipse

Have a nice weekend

Robin

On Sat, May 28, 2011 at 6:12 AM, Michael Bedward
<michael.bedward at gmail.com>wrote:

> Hi Robin,
>
> I use sphinx / rst so I'm very pleased to see someone working on an
> ANTLR grammar. I'd be keen to help out if you are going to make it
> open source. It will be a couple of days before I can look at it so
> others here might answer your questions before I get to it - if not
> I'll reply next week.
>
> Michael

From david.smith at cc.gatech.edu  Sat May 28 07:29:20 2011
From: david.smith at cc.gatech.edu (David Smith)
Date: Sat, 28 May 2011 10:29:20 -0400
Subject: [antlr-interest] Another beginner question
Message-ID: <E1QQKW4-0000hX-6V@elasmtp-spurfowl.atl.sa.earthlink.net>

I need to "wrap" a collection of statements as a code body in order 
to mechanize if, for and while loops.  In my tree generator, this 
works great as:

prog:   body EOF! {if($body.tree!=null)
                        System.out.println($body.tree.toStringTree());}
         ;

body    : parts -> ^(BODY parts)
         ;

parts:
         ( (stat
         | ifStat)  )*
         ;

This produces, for example, [I inserted some newlines to make it legible]
(BODY (= a 3)
       (= b 4)
       (if (> a b) (BODY (= a (+ b 1)))
        elseif (< a b) (BODY (= b (- a b)) (= c 42) (= d 4))
        else (BODY (= b 4) (= c (- a b)))
        end)
)
I intend the Java code that implements 'if' to receive the "children" 
bodies as sub-trees and invoke the original tree walker on the 
appropriate tree. However, I have no idea how the tree walker should 
parse ^(BODY parts) to execute each statement in that body.
Any ideas?

                                 DMS

David M. Smith http://www.cc.gatech.edu/fac/David.Smith
Georgia Institute of Technology, College of Computing
Sent from my ASR-33 Teletype 


From tijet at mac.com  Sat May 28 11:22:14 2011
From: tijet at mac.com (Trevor John Thompson)
Date: Sat, 28 May 2011 11:22:14 -0700
Subject: [antlr-interest] Another beginner question
In-Reply-To: <E1QQKW4-0000hX-6V@elasmtp-spurfowl.atl.sa.earthlink.net>
References: <E1QQKW4-0000hX-6V@elasmtp-spurfowl.atl.sa.earthlink.net>
Message-ID: <C3B4AAE8-0BC8-4558-81F5-C6332F09CF3D@mac.com>

Pseudocode:
	method evaluate
		takes tree
		switch
			tree.token
		case BODY is
			foreach kid in tree.children
				evaluate kid
		case If is
			evaluate tree.children[0]
			if tree.children[0].result==True then
				evaluate tree.children[1]
			else for
				index := 2
			while
				index < tree.children.length
			loop
				switch
					tree.children[index].token
				case Elseif is
					evaluate tree.chldren[index+1]
					if tree.children[index+1].result==True then
						evaluate tree.children[index+2]
					index :+= 3
				case Else is
					evaluate tree.children[index+1]
					index :+= 2
				default
					error "internal error: unexpected token " tree.children[index].token
		case While is
			by
				evaluate tree.children[0]
			while
				tree[0].result==True
			loop
				evaluate tree.children[1]
		case '=' is
			evaluate tree.children[1]
			assign(lookup(tree.children[0]), tree.children[1].result)
			tree.result := tree.children[1].result
		case ID is
			tree.result := lookup(tree).value
		case '+' is
			evaluate tree.children[0]
			evaluate tree.children[1]
			tree.result := tree.children[0].result+tree.children[1].result
		case '<' is
			evaluate tree.children[0]
			evaluate tree.children[1]
			tree.result := tree.children[0].result<tree.children[1].result
		case For is
			# I do not know the syntax of your for loop, but you get the idea.

Obviously you need a case for each valid token in the tree, and to take care of types if you distinguish Boolean from Integer and so on; but the direct answer to the question of how to execute each statement of a BODY node is: simply recursively evaluate each child of that node.

On 2011 May 28, at 07:29, David Smith wrote:

> I need to "wrap" a collection of statements as a code body in order 
> to mechanize if, for and while loops.  In my tree generator, this 
> works great as:
> 
> prog:   body EOF! {if($body.tree!=null)
>                        System.out.println($body.tree.toStringTree());}
>         ;
> 
> body    : parts -> ^(BODY parts)
>         ;
> 
> parts:
>         ( (stat
>         | ifStat)  )*
>         ;
> 
> This produces, for example, [I inserted some newlines to make it legible]
> (BODY (= a 3)
>       (= b 4)
>       (if (> a b) (BODY (= a (+ b 1)))
>        elseif (< a b) (BODY (= b (- a b)) (= c 42) (= d 4))
>        else (BODY (= b 4) (= c (- a b)))
>        end)
> )
> I intend the Java code that implements 'if' to receive the "children" 
> bodies as sub-trees and invoke the original tree walker on the 
> appropriate tree. However, I have no idea how the tree walker should 
> parse ^(BODY parts) to execute each statement in that body.
> Any ideas?
> 
>                                 DMS
> 
> David M. Smith http://www.cc.gatech.edu/fac/David.Smith
> Georgia Institute of Technology, College of Computing
> Sent from my ASR-33 Teletype 
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

--
Trevor John Thompson    (425) 246-4023
net: tijet at me.com
Quidquid Latine dictum sit, altum videtur.


From parrt at cs.usfca.edu  Sat May 28 11:55:22 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 May 2011 19:55:22 +0100
Subject: [antlr-interest] antlr.org down for about 24 hours
Message-ID: <8C63000B-F682-4C6C-9765-63EB6B5D33BC@cs.usfca.edu>

Hello from Hamburg.  Apparently power for the antlr.org box will go  
off for 24 hours from Sunday around noon California time to Monday  
around 2pm.  Sorry for the inconvenience.

Terence

From researcher0x00 at gmail.com  Sat May 28 12:14:07 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Sat, 28 May 2011 15:14:07 -0400
Subject: [antlr-interest] antlr.org down for about 24 hours
In-Reply-To: <8C63000B-F682-4C6C-9765-63EB6B5D33BC@cs.usfca.edu>
References: <8C63000B-F682-4C6C-9765-63EB6B5D33BC@cs.usfca.edu>
Message-ID: <BANLkTimQOZ5amR-yuCLqVn3CcUd9VMDgXg@mail.gmail.com>

Ter,

It's the messages like this and the free support that that are truly
appreciated and help to make ANTLR great.

Hope you're enjoying the trip.

Thanks,  Eric

From parrt at cs.usfca.edu  Sat May 28 12:16:21 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Sat, 28 May 2011 20:16:21 +0100
Subject: [antlr-interest] antlr.org down for about 24 hours
In-Reply-To: <BANLkTimQOZ5amR-yuCLqVn3CcUd9VMDgXg@mail.gmail.com>
References: <8C63000B-F682-4C6C-9765-63EB6B5D33BC@cs.usfca.edu>
	<BANLkTimQOZ5amR-yuCLqVn3CcUd9VMDgXg@mail.gmail.com>
Message-ID: <65D9FB34-C42D-47D1-95E4-A5F8DBA58A41@cs.usfca.edu>


On May 28, 2011, at 8:14 PM, The Researcher wrote:

> Ter,
>
> It's the messages like this and the free support that that are truly
> appreciated and help to make ANTLR great.
>
> Hope you're enjoying the trip.

Hi Eric. Thanks. Jetlag is killing me. Going East is tough.  Haven't  
been able to think straight.

Right before leaving I managed to finish the prototype for ANTLR v4's  
parsing strategy, which we can call <mysterious>adaptive LL(*)</ 
mysterious>.  Tastes great, less filling.

Ter

From sharwell at pixelminegames.com  Sun May 29 02:07:35 2011
From: sharwell at pixelminegames.com (Sam Harwell)
Date: Sun, 29 May 2011 17:07:35 +0800
Subject: [antlr-interest] [CSharp3] rule visibility in composite grammars
In-Reply-To: <2B65C901391C804DBB9CF9E6FE30C6F969ABB7F1@sun.epirion.local>
References: <2B65C901391C804DBB9CF9E6FE30C6F95608DE64@sun.epirion.local>
	<001001cbf46e$1b490020$51db0060$@pixelminegames.com>
	<2B65C901391C804DBB9CF9E6FE30C6F9610C9BAC@sun.epirion.local>
	<00cb01cbf52b$99eebd30$cdcc3790$@pixelminegames.com>
	<2B65C901391C804DBB9CF9E6FE30C6F969ABB7F1@sun.epirion.local>
Message-ID: <000b01cc1ddf$dd84c440$988e4cc0$@pixelminegames.com>

I'm not going to be able to address this issue until the second week of
June.

That said, it seems the best way to handle all these issues with delegate
grammars is to inline their rules before code generation. Suppose you have
grammar C importing A and B, and you also have D importing A and B. The code
generation will result in classes C, C_A, C_B, D, D_A, and D_B. Clearly the
independent generation of C_A and D_A during code generation does not allow
a single instance of the imported A grammar to be shared by C and D. If we
instead "flatten" the imported grammar hierarchy and only generate classes C
and D, then everything behaves like it was written in a single grammar. Do
you see any immediate problems with this potential approach?

-----Original Message-----
From: Ranco Marcus [mailto:ranco.marcus at epirion.nl] 
Sent: Wednesday, May 25, 2011 4:26 PM
To: Sam Harwell; antlr-interest at antlr.org
Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite
grammars

Hi Sam/all,

When a (tree) grammar C imports (tree) grammars A and B, where grammar A
calls a rule R from grammar B, a call is being made from delegate parser C_A
to a delegate rule R (targeting C_B) in the composite parser C (its parent).

Now that the visibility of the delegate rules in C match the visibility of
the imported grammar, the rule R has to be made public for the above to
work. In our grammars, we build up internal structures that are subsequently
processed. In our case, that means that all those internal structures have
to be made public as well. This could be solved by allowing ANTLR rules to
have 'internal' visibility. Also, imported grammars can probably remain
internal as well. 

What are your thoughts on this? 

Thanks, Ranco

> -----Original Message-----
> From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> Sent: Thursday, April 07, 2011 3:57 PM
> To: Ranco Marcus; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite 
> grammars
> 
> The visibility of delegated rules now matches the way they're declared 
> in the imported grammar. Since some of them return nested classes 
> declared in the delegate grammar, I had to make the delegate grammar 
> 'public' and all its rules 'internal'.
> 
> I fixed the reserved names issue right after releasing 3.3.1, so it'll 
> be included when I release 3.3.2. Note that rule parameters and return 
> values need to include an explicit '@' in their declarations in the 
> grammar, as follows. Labels and rule names do not need the '@'.
> 
> namespace[int @in] returns [int @out] : as=A B;
> 
> Sam
> 
> -----Original Message-----
> From: Ranco Marcus [mailto:ranco.marcus at epirion.nl]
> Sent: Thursday, April 07, 2011 6:49 AM
> To: Sam Harwell; antlr-interest at antlr.org
> Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite 
> grammars
> 
> Sounds great, Sam!
> 
> What will be the visibility of the methods in the 'Delegated rules' 
> region now that the class of the imported grammar is internal? Private or
internal?
> 
> Another small suggestion is to prefix variable names (at least those 
> that are reserved in C#) with an at-sign. The generated class for the 
> grammar below has a compile error since 'as' is not a valid variable name
while '@as' is.
> 
> name : as=firstName lastName;
> 
> Are you planning to release new binaries any time soon?
> 
> Thanks again,
> 
> Ranco Marcus
> 
> > -----Original Message-----
> > From: Sam Harwell [mailto:sharwell at pixelminegames.com]
> > Sent: woensdag 6 april 2011 17:20
> > To: Ranco Marcus; antlr-interest at antlr.org
> > Subject: RE: [antlr-interest] [CSharp3] rule visibility in composite 
> > grammars
> >
> > Hi Ranco,
> >
> > I made the following changes so far:
> >
> > * An imported grammar is always generated as an internal class 
> > instead of a public class.
> > * Rules within the imported grammar are always declared public since 
> > they are only called by the root grammar.
> >
> > How does that sound?
> >
> > Sam
> >
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org 
> > [mailto:antlr-interest-bounces at antlr.org] On Behalf Of Ranco Marcus
> > Sent: Wednesday, March 23, 2011 6:40 AM
> > To: antlr-interest at antlr.org
> > Subject: [antlr-interest] [CSharp3] rule visibility in composite 
> > grammars
> >
> > Hi all/Sam,
> >
> > While using the CSharp3 target on a composite grammar, I came across 
> > a few issues regarding rule visibility.
> >
> > If no modifier (private, protected, public, ...) is specified for a 
> > rule, the Java target generates public methods (since it is not 
> > implemented IIRC) and the
> > CSharp3 target generates private methods.
> >
> > I like the idea to explicitly specify which rules are callable (by 
> > making them public). However, for composite grammars the generated 
> > parser contains delegate rules for every rule of the imported 
> > grammar, even for rules in the imported grammar that aren't public 
> > (causing compile errors). This can solved this adding a public 
> > modifier to every rule of the imported grammar, but I was wondering 
> > if there's a more
> convenient way of doing this.
> >
> > Furthermore, the methods for the delegate rules in the composite 
> > grammars are all public, regardless of the visibility of the rule in 
> > the
> imported grammar.
> > IMHO, it would be better to make them private and use the composite 
> > grammar to explicitly specify the rules that are externally visible.
> > What are your thoughts on this?
> >
> > Btw, the CSharp3 templates are also included in the original Java 
> > tool. Does that mean that we don't need the .NET version of the tool
> anymore?
> >
> >
> > Best regards,
> >
> > Ranco Marcus
> > Epirion Knowledge Solutions B.V.
> >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-addre
> > ss
> 



From anteusz at freemail.hu  Mon May 30 09:28:33 2011
From: anteusz at freemail.hu (anteusz at freemail.hu)
Date: Mon, 30 May 2011 19:28:33 +0300
Subject: [antlr-interest] Do you need an ANTLR programmer?
Message-ID: <4DE3C5B1.7020603@freemail.hu>

Hi,

Do you need to write a new grammar in ANTLR? Or fix your grammar? Maybe your
grammar needs testing?

Here is a solution.  It can be me.
My name is Marton Papp. I have been working on converters/parsers since
2002.

If you need more information or interested, write to mp at equinoxbase
dot com.

Let us see what we can do.

(Note I am located in Europe. I have Skype. I have years of experience working remotely.)


Regards

M?rton Papp





From anteusz at freemail.hu  Mon May 30 07:34:35 2011
From: anteusz at freemail.hu (anteusz at freemail.hu)
Date: Mon, 30 May 2011 17:34:35 +0300
Subject: [antlr-interest] Do you need an ANTLR programmer?
Message-ID: <4DE3AAFB.4010005@freemail.hu>


Hi,

Do you need to write a new grammar? Or fix your grammar? Maybe your
grammar needs testing?

Here is a solution.  It can be me.
My name is Marton Papp. I have been working on converters/parsers since
2002.

If you need more information or interested, write to mp at equinoxbase
dot com.

Let us see what we can do.

(Note I am located in Europe.)


Regards

M?rton Papp




From call.vijayraj at yahoo.com  Mon May 30 11:08:38 2011
From: call.vijayraj at yahoo.com (Vijay Raj)
Date: Mon, 30 May 2011 11:08:38 -0700 (PDT)
Subject: [antlr-interest] options greedy : getting the tokens consumed
	during the greedy match
Message-ID: <934583.88548.qm@web120311.mail.ne1.yahoo.com>

Hi -
? ?I am trying to parse a given java file, with a code fragment that consumes comments as below: ( Code fragment got from Java.g , pasted in the antlr site, to give credit where it is due).?


COMMENT
? ? ? ? ?@init{
? ? ? ? ? ? boolean isJavaDoc = false;
? ? ? ? ? ? System.out.println("Entering comment");
? ? ? ? }
? ? : ? '/*'
? ? ? ? ? ? {
? ? ? ? ? ? ? ? if((char)input.LA(1) == '*'){
? ? ? ? ? ? ? ? ? ? isJavaDoc = true;
? ? ? ? ? ? ? ? }
? ? ? ? ? ? }
? ? ? ? (options {greedy=false;} : . )*?
? ? ? ? '*/'
? ...
? ? ?;


I am trying to get all the characters mapped by the wildcard regex , as in 'options greedy' line in the grammar file and get the string into the Java world for further processing. ? What hidden system variables/ grammar should I use to take care of the same ??

From bkiers at gmail.com  Mon May 30 13:31:40 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 30 May 2011 22:31:40 +0200
Subject: [antlr-interest] Do you need an ANTLR programmer?
In-Reply-To: <4DE3EEAE.1020600@freemail.hu>
References: <4DE3AAFB.4010005@freemail.hu>
	<BANLkTikpdeeDv844uBMmWKJ7xm3qHZBOnA@mail.gmail.com>
	<4DE3EC73.7070806@freemail.hu>
	<BANLkTinTWG4NZ0bwNiu2=FKEu6hUC1MvjA@mail.gmail.com>
	<4DE3EEAE.1020600@freemail.hu>
Message-ID: <BANLkTi=RJ_EAQekSfSkhct1pk-3mCvhNjw@mail.gmail.com>

On Mon, May 30, 2011 at 9:23 PM, <anteusz at freemail.hu> wrote:

>  On 5/30/2011 11:20 PM, Bart Kiers wrote:
>
>   On Mon, May 30, 2011 at 9:13 PM, <anteusz at freemail.hu> wrote:
>
>> On 5/30/2011 10:41 PM, Bart Kiers wrote:
>>
>>> Could you stop spamming the ANTLR mailing list please?
>>>
>>> Bart.
>>>
>>>  You may not know that but
>> As I was worried that that this mail can be perceived as a spam, I asked
>> Terence Parr if it is ok, if I send a mail here. To my surprise, he said
>> yes.
>>
>
>  How could I know? You might have included that information from the
> get-go. I am sure that I am not the only one being annoyed by such messages.
> And are you planning to spam this mailing list on a regular basis? Or just
> once?
>
>  Bart.
>
>
>
> Now you know. Sorry for not mentioning it in the mail.. (I considered it)
> I am not sure if you agree with me but if it is allowed, it cannot be
> called spam.
>

Well, the over-all definition of spam is this: "Spam is the use of
electronic messaging systems [...] to send unsolicited bulk messages
indiscriminately."
It _is_ unsolicited since no one asked for it. You may have gotten approval
from someone, but that doesn't mean it's not unsolicited. So yes, it sure is
spam.



> At the moment, Just once now.
>

I really hope so. If every self-employed developer starts spamming the list,
it'd become a mess.

Bart.

PS. I cc-ed the list so that others are aware of the fact it's now okay to
advertise one selves here.



>
> M?rton
>
>
[1] http://en.wikipedia.org/wiki/Spam_(electronic)

From jimi at temporal-wave.com  Mon May 30 13:38:22 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 30 May 2011 13:38:22 -0700
Subject: [antlr-interest] Do you need an ANTLR programmer?
In-Reply-To: <BANLkTi=RJ_EAQekSfSkhct1pk-3mCvhNjw@mail.gmail.com>
References: <4DE3AAFB.4010005@freemail.hu>	<BANLkTikpdeeDv844uBMmWKJ7xm3qHZBOnA@mail.gmail.com>
	<4DE3EC73.7070806@freemail.hu>	<BANLkTinTWG4NZ0bwNiu2=FKEu6hUC1MvjA@mail.gmail.com>
	<4DE3EEAE.1020600@freemail.hu>
	<BANLkTi=RJ_EAQekSfSkhct1pk-3mCvhNjw@mail.gmail.com>
Message-ID: <18bfad90ec94a2da7329ed4282d5b587@mail.gmail.com>

It always been OK, but there is obvious common sense involved, such as not
posting such messages every week. For a start, I make a lot of my living
writing professional ANTLR grammars and occasionally, you need to ask for
work... which reminds me...

But, in general I would shy away from appointing yourself unofficial
arbitrator of the list. The list is basically whatever Ter says it is; the
poster was polite enough to ask if it was OK to post and so that's that.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Bart Kiers
> Sent: Monday, May 30, 2011 1:32 PM
> To: anteusz at freemail.hu
> Cc: antlr-interest at antlr.org interest
> Subject: Re: [antlr-interest] Do you need an ANTLR programmer?
>
> On Mon, May 30, 2011 at 9:23 PM, <anteusz at freemail.hu> wrote:
>
> >  On 5/30/2011 11:20 PM, Bart Kiers wrote:
> >
> >   On Mon, May 30, 2011 at 9:13 PM, <anteusz at freemail.hu> wrote:
> >
> >> On 5/30/2011 10:41 PM, Bart Kiers wrote:
> >>
> >>> Could you stop spamming the ANTLR mailing list please?
> >>>
> >>> Bart.
> >>>
> >>>  You may not know that but
> >> As I was worried that that this mail can be perceived as a spam, I
> >> asked Terence Parr if it is ok, if I send a mail here. To my
> >> surprise, he said yes.
> >>
> >
> >  How could I know? You might have included that information from the
> > get-go. I am sure that I am not the only one being annoyed by such
> messages.
> > And are you planning to spam this mailing list on a regular basis? Or
> > just once?
> >
> >  Bart.
> >
> >
> >
> > Now you know. Sorry for not mentioning it in the mail.. (I considered
> > it) I am not sure if you agree with me but if it is allowed, it
> cannot
> > be called spam.
> >
>
> Well, the over-all definition of spam is this: "Spam is the use of
> electronic messaging systems [...] to send unsolicited bulk messages
> indiscriminately."
> It _is_ unsolicited since no one asked for it. You may have gotten
> approval from someone, but that doesn't mean it's not unsolicited. So
> yes, it sure is spam.
>
>
>
> > At the moment, Just once now.
> >
>
> I really hope so. If every self-employed developer starts spamming the
> list, it'd become a mess.
>
> Bart.
>
> PS. I cc-ed the list so that others are aware of the fact it's now okay
> to advertise one selves here.
>
>
>
> >
> > M?rton
> >
> >
> [1] http://en.wikipedia.org/wiki/Spam_(electronic)
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From bkiers at gmail.com  Mon May 30 13:42:06 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 30 May 2011 22:42:06 +0200
Subject: [antlr-interest] options greedy : getting the tokens consumed
 during the greedy match
In-Reply-To: <934583.88548.qm@web120311.mail.ne1.yahoo.com>
References: <934583.88548.qm@web120311.mail.ne1.yahoo.com>
Message-ID: <BANLkTi=iArEhwsfrMWTs1-=cfxVSwMNP+w@mail.gmail.com>

Hi Vijay,

You could grab all matched text in the `@after` block using the `getText()`
method:

COMMENT
@init{
  boolean isJavaDoc = false;
  System.out.println("Entering comment");
}
@after {
  System.out.println("Leaving comment, matched: " + getText());
}
  :  '/*'
     {
       if((char)input.LA(1) == '*') {
         isJavaDoc = true;
       }
     }
     (options {greedy=false;} : . )*
     '*/'
  ;


Regards,

Bart Kiers.



On Mon, May 30, 2011 at 8:08 PM, Vijay Raj <call.vijayraj at yahoo.com> wrote:

> Hi -
>    I am trying to parse a given java file, with a code fragment that
> consumes comments as below: ( Code fragment got from Java.g , pasted in the
> antlr site, to give credit where it is due).
>
>
> COMMENT
>          @init{
>             boolean isJavaDoc = false;
>             System.out.println("Entering comment");
>         }
>     :   '/*'
>             {
>                 if((char)input.LA(1) == '*'){
>                     isJavaDoc = true;
>                 }
>             }
>         (options {greedy=false;} : . )*
>         '*/'
>   ...
>      ;
>
>
> I am trying to get all the characters mapped by the wildcard regex , as in
> 'options greedy' line in the grammar file and get the string into the Java
> world for further processing.   What hidden system variables/ grammar should
> I use to take care of the same ?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From bkiers at gmail.com  Mon May 30 13:45:45 2011
From: bkiers at gmail.com (Bart Kiers)
Date: Mon, 30 May 2011 22:45:45 +0200
Subject: [antlr-interest] Do you need an ANTLR programmer?
In-Reply-To: <18bfad90ec94a2da7329ed4282d5b587@mail.gmail.com>
References: <4DE3AAFB.4010005@freemail.hu>
	<BANLkTikpdeeDv844uBMmWKJ7xm3qHZBOnA@mail.gmail.com>
	<4DE3EC73.7070806@freemail.hu>
	<BANLkTinTWG4NZ0bwNiu2=FKEu6hUC1MvjA@mail.gmail.com>
	<4DE3EEAE.1020600@freemail.hu>
	<BANLkTi=RJ_EAQekSfSkhct1pk-3mCvhNjw@mail.gmail.com>
	<18bfad90ec94a2da7329ed4282d5b587@mail.gmail.com>
Message-ID: <BANLkTikWXw-0SSUtRWn0WEz3PKRjUvZL4g@mail.gmail.com>

On Mon, May 30, 2011 at 10:38 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> It always been OK, but there is obvious common sense involved, such as not
> posting such messages every week. For a start, I make a lot of my living
> writing professional ANTLR grammars and occasionally, you need to ask for
> work... which reminds me...
>
> But, in general I would shy away from appointing yourself unofficial
> arbitrator of the list. The list is basically whatever Ter says it is; the
> poster was polite enough to ask if it was OK to post and so that's that.
>
> Jim
>
>
As I said: he could have posted that Terence gave him permission. Note that
he send a message twice, in rapid succession.

Bart.

From michael.bedward at gmail.com  Mon May 30 19:30:47 2011
From: michael.bedward at gmail.com (Michael Bedward)
Date: Tue, 31 May 2011 12:30:47 +1000
Subject: [antlr-interest] multi-channel token stream
In-Reply-To: <AANLkTi=58cFSHOyckK+M=NZ31u82RoMQu=n_0eNjeX__@mail.gmail.com>
References: <AANLkTi=58cFSHOyckK+M=NZ31u82RoMQu=n_0eNjeX__@mail.gmail.com>
Message-ID: <BANLkTi=+qsUBgmgYjvoyRip6V7boE-j0OA@mail.gmail.com>

Hello,

This message is just to update the URL to the MultiChannelTokenStream
class mentioned in the message below from some months ago. The current
URL is:

http://jiffle.googlecode.com/svn/trunk/language/src/main/java/jaitools/jiffle/parser/MultiChannelTokenStream.java

Please feel free to do whatever you like with it, although I'd
appreciate hearing about any bugs or ways of improving it.
Alternatively, if it's entirely useless and there are much better ways
of handling multiple channels I'd like to hear about that too :)

Michael


On 10 February 2011 10:59, Michael Bedward <michael.bedward at gmail.com> wrote:
> Hi folks,
>
> I'd like my parser to be able to tune in to more than one token
> channel with the choice of channel(s) being set when constructing the
> TokenStream. The DAR book doesn't have an example of doing this,
> unless I've missed it. The wiki refers to being able to merge channels
> but I couldn't find an example of doing this - unless it just meant
> using BufferedTokenStream instead of CommonTokenStream ?
>
> My solution has been to create a simple class,
> MultiChannelTokenStream, adapted from CommonTokenStream. Instead of
> holding the index of a single channel it maintains a list of "active
> channels" which is used by the various stream access and positioning
> methods. ?The source is here:
>
> http://code.google.com/p/jai-tools/source/browse/trunk/jiffle/src/main/java/jaitools/jiffle/parser/MultiChannelTokenStream.java
>
> I still have a lurking doubt that I'm re-inventing the wheel here, ie.
> that I must be missing something obvious in the ANTLR API (or perhaps
> more fundamentally in lexer / parser design). If that's the case I'd
> appreciate any tips. On the other hand, if the class is of any use to
> others, please feel free to grab it.
>
> Michael
>

From tw176 at columbia.edu  Mon May 30 22:34:07 2011
From: tw176 at columbia.edu (Thomas White, MD, MS, MA)
Date: Tue, 31 May 2011 01:34:07 -0400
Subject: [antlr-interest] suitability of Antlr for generating a PHP
	expression evaluator
Message-ID: <BANLkTinjnoPuS3maXb=KYUptcDmzi_U50w@mail.gmail.com>

Hi-

I emailed the following to  Terence Parr, and he suggested I ask the
antlr-interest group. Any help the group can provide would be  much
appreciated.


Can you help me determine whether Antlr is the right tool for the following
situation?

I built a Java-based survey tool in 2000, but can no longer support it, so
I'm trying to port the key functionality of to LimeSurvey, which is written
in PHP.  My system has been supporting NIH-funded research for my
epidemiologist colleagues - so these are really semi-structured diagnostic
interviews that tend to range from 300-3500 questions.  They are highly
branched surveys, have internal scoring and complex branching logic (such as
only asking follow-up questions if the person has a diagnosis of depression,
meaning they acknowledged, via prior questions, 5 of 12 criteria for > 2
weeks without other signs of non-psychiatric causes of the depressive
behavior).  The surveys are multi-lingual, and generate tailored reports for
the patients and clinicians.

I used JavaCC to build the expression parser I needed for my tool, and I'm
totally stuck finding a well maintained compiler-compiler that will output
PHP.  Ideally, I'd like to write BNF or related notation and generate both
PHP (for server-side calculations), and JavaScript (for client-side - e.g.
to automatically update scale-scores on the form, and dynamically hide/show
questions based upon relevance critieria).  I've written expression
evaluators and  moderately sized languages in YACC, Bison/Flex, and
JavaCC/JTree - so I'd much rather take that approach than having to
hand-write a language parser and execution  engine (had to do that 20 years
ago, in C, to convert a C-like language to pseudo-assembly and run it on a
stack-based, byte-code interpreter - I'd like to avoid going through that
pain again :-))

Since Antlr is designed to output to other languages, it seems a natural fit
for my need, but neither the JavaScript nor PHP output targets seem
complete.  On the other hand, I only need limited compiler-compiler
functionality, so perhaps the JavaScript and  PHP targets are good enough,
but I can't assess that myself.

The functionality I'm looking for here is very basic:
(1) All basic math operators and functions
(2) Ability to call other functions from a "white list" of supported
functions (which would be included from an external source).  At present, I
categorize the functions by whether they take 0, 1, 2, 3, or unlimited
arguments, so I can enforce a small degree of  syntax checking.
(3) Ability to handle numbers, strings, and dates separately (e.g. so can
throw syntax exceptions if the a given math operator is not appropriate for
a data type)
(4) Only allowable syntax is supported (so can avoid calls to arrays,
functions, hashes, macros, etc. - anything that might be unsafe or put the
website at risk of an injection attack)
(5) Only be able to reference known variables (each row of the survey has a
unique variable name - so can only reference those variable names, thus
avoiding accessing global parameters).

So, there seem to be three options:
(1) Find or build an equation parser that supports the functionality, and
can evaluate those equations in PHP (and possibly JavaScript too).
(2) Find or build an equation parser that can validate the syntax, but then
let PHP and JavaScript's eval() functions actually evaluate the string
(after replacing the variable and function names with lookup functions that
retrieve the needed values from the PHP and JavaScript data stores).
(3) Find or build an equation parser that can validate the syntax, but is a
plug-able module or compiled shared  library (e.g. a Windows .dll, or a *nix
.so) which can be called from PHP, and be passed an array of allowable
variable names and function syntax (so that it doesn't have to tightly
couple with PHP).

It seems that Antlr might work for option #1, provided that the PHP and
JavaScript parser and evaluator targets are already stable (and well
maintained) for the functionality I  listed.
For option #2, Antlr might work as long as the parser target is robust for
PHP.
I don't know enough about #3 to know how well Antlr would fit that strategy.

Of course, Antlr may be overkill for the sort of task I'm listing here.

Do you think Antlr is an appropriate tool for this?  If so, which of those
strategies do you recommend?
If not, do you have any alternate recommendations?

Thanks in advance for any advice you can provide.

/Tom

From petrov.ilya at gmail.com  Tue May 31 00:23:05 2011
From: petrov.ilya at gmail.com (=?UTF-8?B?0J/QtdGC0YDQvtCyINCY0LvRjNGP?=)
Date: Tue, 31 May 2011 13:23:05 +0600
Subject: [antlr-interest] Bug report for python-antlr3: None -->
 rulePostProcessing(...) --> None --> replaceChildren(..., None)
Message-ID: <BANLkTimf-z=iq5ZoHPKzoczqb-c-_FH1UA@mail.gmail.com>

This is a bug report for python-antlr3, antlr-v3.1.3.

Hi, I'm trying to transform a tree of some assembly language via
executing and throwing away nodes of assembler directives.
I'm working for python-target (antlr-v3.1.3) and have a problem with
plain simple tree-to-nil transformation:
`
dot_dot_directive
	:	
		^(DOT_DOT_NAME ^(ARGS DOT_DOT_ARGS?) DOT_DOT_BODY?)
		   ->                                                // gives
AttributeError: 'NoneType' object has no attribute 'isNil'
		// -> ^()                                            // won't compile
		// -> ^({self.adaptor.nil()})                   // gives
AttributeError: 'NoneType' object has no attribute 'isNil'
		// -> ^({self.adaptor.create(HEX,'00')}) // works, but not what I want
		// -> ^($block_child)                          // gives
antlr3.tree.RewriteEmptyStreamException: rule retval
	;
`.

Here is an error message in detail:
`
  File "assembler_I_am_tinkering_Walker.py", line 713, in dot_dot_directive
  File "c:\python25\lib\site-packages\antlr_python_runtime-3.1.3-py2.5.egg\antlr3\tree.py",
line 2070, in replaceChildre
n
    parent, startChildIndex, stopChildIndex, t
  File "c:\python25\lib\site-packages\antlr_python_runtime-3.1.3-py2.5.egg\antlr3\tree.py",
line 1615, in replaceChildre
n
    parent.replaceChildren(startChildIndex, stopChildIndex, t)
  File "c:\python25\lib\site-packages\antlr_python_runtime-3.1.3-py2.5.egg\antlr3\tree.py",
line 809, in replaceChildren

    if newTree.isNil():
AttributeError: 'NoneType' object has no attribute 'isNil'
`.

Looking up generated tree parser code gives:
`
 # 103:55: ->
 root_0 = None

 retval.tree = self._adaptor.rulePostProcessing(root_0)    # None ->
None -> retval.tree
 self.input.replaceChildren(
     self._adaptor.getParent(retval.start),
     self._adaptor.getChildIndex(retval.start),
     self._adaptor.getChildIndex(_last),
     retval.tree
     )
`.

Shallow investigation reveals that error chain leads to
`parent.replaceChildren(startChildIndex, stopChildIndex, t)`,
where t is None and then `t.isNil()` is invoked without checking if t is None.

I don't understand how it should work, but I've just tinkered
rulePostProcessing to return nil node unaffected to push
my job further.

I hope this bug report will help others to spend less time dealing
with the same error.
Terence Parr, Benjamin Niemann, antlr is a great tool, thanks for sharing it.

From heiko.folkerts at david-software.de  Tue May 31 05:42:49 2011
From: heiko.folkerts at david-software.de (Heiko Folkerts)
Date: Tue, 31 May 2011 14:42:49 +0200
Subject: [antlr-interest] Actions in AST rewrite rules in C
Message-ID: <93FCBF72DCE7634481C5DF1654D8FF1305533F4C@DC2>

Hi all,
I am trying to add a imaginary Token while parsing an AST. The tricky par is that I need to set the text of the imaginary token or node from the result of a C++-Method.
How should this be made right - adding the imaginary node in the rewrite rule and setting the text within an action?

Here is my current rule:
step: ^(STEP stepcontents?) ->
{
pANTLR3_BASE_TREE pStep = $STEP;
pANTLR3_BASE_TREE pStepContents = (pANTLR3_BASE_TREE)pStep->getChild(pStep,0);
if(pStepContents)
{
char* code = createCStringPlain(ParserHelper::getCodeTranslation(CodeTranslationID(1), QString((char*)pStepContents->getText(pStepContents)->chars)));
pANTLR3_BASE_TREE pCode = (pANTLR3_BASE_TREE)ADAPTOR->createTypeText(ADAPTOR,STEPCODE,
(pANTLR3_UINT8) code);
pStep->addChild(pStep,pCode);
}
} 
;
T
Hx in advance


Mit freundlichem Gru?

Heiko Folkerts

-- 
_______________________________________________________

DAVID Software GmbH ? Wendenring 1 ? 38114 Braunschweig

Tel.: +49 531 24379-14
Fax.: +49 531 24379-79

E-Mail: mailto:heiko.folkerts at david-software.de
WWW:    http://www.david-software.de

Eintragung: Amtsgericht Braunschweig, HRB 3167
Gesch?ftsf?hrer: Frank Ptok 
_______________________________________________________

From jimi at temporal-wave.com  Tue May 31 06:41:51 2011
From: jimi at temporal-wave.com (Jim Idle)
Date: Tue, 31 May 2011 06:41:51 -0700
Subject: [antlr-interest] Bug report for python-antlr3: None -->
 rulePostProcessing(...) --> None --> replaceChildren(..., None)
In-Reply-To: <BANLkTimf-z=iq5ZoHPKzoczqb-c-_FH1UA@mail.gmail.com>
References: <BANLkTimf-z=iq5ZoHPKzoczqb-c-_FH1UA@mail.gmail.com>
Message-ID: <c004301eb93d6ef0246c56c1496d4572@mail.gmail.com>

A set of nodes that is ^(NODE) is actually NODE, so you need:

: ^(DOT_DOT_NAME
     ( ARGS  // No args (perhaps don't write if no args?
       | ^(ARGS DOT_DOT_ARGS)
     )
     DOT_DOT_BODY?
  )
;

Note that there is no root if the tree is just a single token. Generally:

X A* -> ^(X A*)

Will parse as:

r: X // No As
 | ^(X A+) // Some As
 ;

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of ?????? ????
> Sent: Tuesday, May 31, 2011 12:23 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Bug report for python-antlr3: None -->
> rulePostProcessing(...) --> None --> replaceChildren(..., None)
>
> This is a bug report for python-antlr3, antlr-v3.1.3.
>
> Hi, I'm trying to transform a tree of some assembly language via
> executing and throwing away nodes of assembler directives.
> I'm working for python-target (antlr-v3.1.3) and have a problem with
> plain simple tree-to-nil transformation:
> `
> dot_dot_directive
> 	:
> 		^(DOT_DOT_NAME ^(ARGS DOT_DOT_ARGS?) DOT_DOT_BODY?)
> 		   ->                                                //
gives
> AttributeError: 'NoneType' object has no attribute 'isNil'
> 		// -> ^()                                            //
won't
> compile
> 		// -> ^({self.adaptor.nil()})                   // gives
> AttributeError: 'NoneType' object has no attribute 'isNil'
> 		// -> ^({self.adaptor.create(HEX,'00')}) // works, but not
> what I want
> 		// -> ^($block_child)                          // gives
> antlr3.tree.RewriteEmptyStreamException: rule retval
> 	;
> `.
>
> Here is an error message in detail:
> `
>   File "assembler_I_am_tinkering_Walker.py", line 713, in
> dot_dot_directive
>   File "c:\python25\lib\site-packages\antlr_python_runtime-3.1.3-
> py2.5.egg\antlr3\tree.py",
> line 2070, in replaceChildre
> n
>     parent, startChildIndex, stopChildIndex, t
>   File "c:\python25\lib\site-packages\antlr_python_runtime-3.1.3-
> py2.5.egg\antlr3\tree.py",
> line 1615, in replaceChildre
> n
>     parent.replaceChildren(startChildIndex, stopChildIndex, t)
>   File "c:\python25\lib\site-packages\antlr_python_runtime-3.1.3-
> py2.5.egg\antlr3\tree.py",
> line 809, in replaceChildren
>
>     if newTree.isNil():
> AttributeError: 'NoneType' object has no attribute 'isNil'
> `.
>
> Looking up generated tree parser code gives:
> `
>  # 103:55: ->
>  root_0 = None
>
>  retval.tree = self._adaptor.rulePostProcessing(root_0)    # None ->
> None -> retval.tree
>  self.input.replaceChildren(
>      self._adaptor.getParent(retval.start),
>      self._adaptor.getChildIndex(retval.start),
>      self._adaptor.getChildIndex(_last),
>      retval.tree
>      )
> `.
>
> Shallow investigation reveals that error chain leads to
> `parent.replaceChildren(startChildIndex, stopChildIndex, t)`, where t
> is None and then `t.isNil()` is invoked without checking if t is None.
>
> I don't understand how it should work, but I've just tinkered
> rulePostProcessing to return nil node unaffected to push my job
> further.
>
> I hope this bug report will help others to spend less time dealing with
> the same error.
> Terence Parr, Benjamin Niemann, antlr is a great tool, thanks for
> sharing it.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From arthernan at hotmail.com  Tue May 31 10:51:58 2011
From: arthernan at hotmail.com (Arturo Hernandez)
Date: Tue, 31 May 2011 12:51:58 -0500
Subject: [antlr-interest] Random code generator
Message-ID: <BLU152-w65A09703B0721E8B82BB03B67A0@phx.gbl>


Hello everybody, 

This is my first post to antlr-interest. I am halfway through the reference book, and so far I really like ANTLR. I do have some experience, since I hand coded a translator before, and the final translated software product is operational. It was a significant amount of code. But I have never used ANTLR.
My question is related to random test generation, is ANTLR the right tool to produce a random valid output for a given grammar?
I am trying to implement a functional/data driven approach to my everyday programing and such a tool would be very useful.
While generating this pseudo-random output a useful set of words to output is very important. Also some kind of biasing mechanism, to tilt the randomness in some cases in favor of one element vs another. Or maybe a correlation variable. Even a bounded coverage option to guarantee that "all options" have been covered in generation, would be beneficial.
My intention is that once the grammar is captured, we can generate text or streams that embody our grammar. I believe our thought is better spent on the grammar than on producing biased and superficial test codes.
Lastly with a good choice of words we just may be able to produce very funny examples, maybe a teacher or two will enjoy that.

Does anyone have any insight on this problem, including but not to be limited to "ANTLRXP does that!!"

Arturo Hernandez 		 	   		  

From petrov.ilya at gmail.com  Tue May 31 13:35:11 2011
From: petrov.ilya at gmail.com (=?UTF-8?B?0J/QtdGC0YDQvtCyINCY0LvRjNGP?=)
Date: Wed, 1 Jun 2011 02:35:11 +0600
Subject: [antlr-interest] Bug report for python-antlr3: None -->
 rulePostProcessing(...) --> None --> replaceChildren(..., None)
In-Reply-To: <c004301eb93d6ef0246c56c1496d4572@mail.gmail.com>
References: <BANLkTimf-z=iq5ZoHPKzoczqb-c-_FH1UA@mail.gmail.com>
	<c004301eb93d6ef0246c56c1496d4572@mail.gmail.com>
Message-ID: <BANLkTindaY_S30jedcNoGAqBKeDh0z0CvQ@mail.gmail.com>

Jim Idle, thanks for your reply. I've managed to find another
solution -- I've removed `rewrite=true` option from my tree grammar.

Minimalistic example which exposes the error is attached in case
someone needs it.

Petrov Ilya
-------------- next part --------------
A non-text attachment was scrubbed...
Name: rewrite_to_None.7z
Type: application/octet-stream
Size: 4309 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20110601/5e4ff66b/attachment.obj 

From researcher0x00 at gmail.com  Tue May 31 17:50:54 2011
From: researcher0x00 at gmail.com (The Researcher)
Date: Tue, 31 May 2011 20:50:54 -0400
Subject: [antlr-interest] Random code generator
In-Reply-To: <BLU152-w65A09703B0721E8B82BB03B67A0@phx.gbl>
References: <BLU152-w65A09703B0721E8B82BB03B67A0@phx.gbl>
Message-ID: <BANLkTikbWLSOg=f8=svT-QHRO+B8-D4LLQ@mail.gmail.com>

Hi Arturo,

If you are referening to generating test phrases for input to your parser,
then

Ter did a quick take on this.
http://www.antlr.org/wiki/display/ANTLR3/Random+phrase+generation+using+an+ANTLR+grammar

which will lead you to the RandomPhrase.java in the distribution with the
following note.

NOTE: this does not work well for large grammars...it tends to recurse too
much and build really long strings.

 I did a quick search on the Internet with the requirements that it be open
source, free, documented and produced valid code for a compiler; I found
nothing. That doesn' t mean it doesn't exist, I just didn't find it..

I am currently writing my own, but it is not based on any random seed or
statistics. It is designed to generate fully valid phrases for the grammar.
As a specific example, if I want to test method phrases in a class, the
methods will be wrapped in a class and be capable of being compiled, it
won't be a list of methods that need special code to test. One big caveat
with my program is that the grammar must be converted to BNF, which means
only two operators  ab  or  a | b, no ?, + or *.

Eric

From parrt at cs.usfca.edu  Tue May 31 23:52:53 2011
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 1 Jun 2011 08:52:53 +0200
Subject: [antlr-interest] Random code generator
In-Reply-To: <BANLkTikbWLSOg=f8=svT-QHRO+B8-D4LLQ@mail.gmail.com>
References: <BLU152-w65A09703B0721E8B82BB03B67A0@phx.gbl>
	<BANLkTikbWLSOg=f8=svT-QHRO+B8-D4LLQ@mail.gmail.com>
Message-ID: <A97A4C7D-5504-4CED-9882-FEF6DEB71C4E@cs.usfca.edu>

hi. Ralf L?mmel has done good work inthis area.
Ter

On Jun 1, 2011, at 2:50 AM, The Researcher wrote:

> Hi Arturo,
>
> If you are referening to generating test phrases for input to your  
> parser,
> then
>
> Ter did a quick take on this.
> http://www.antlr.org/wiki/display/ANTLR3/Random+phrase+generation+using+an+ANTLR+grammar
>
> which will lead you to the RandomPhrase.java in the distribution  
> with the
> following note.
>
> NOTE: this does not work well for large grammars...it tends to  
> recurse too
> much and build really long strings.
>
> I did a quick search on the Internet with the requirements that it  
> be open
> source, free, documented and produced valid code for a compiler; I  
> found
> nothing. That doesn' t mean it doesn't exist, I just didn't find it..
>
> I am currently writing my own, but it is not based on any random  
> seed or
> statistics. It is designed to generate fully valid phrases for the  
> grammar.
> As a specific example, if I want to test method phrases in a class,  
> the
> methods will be wrapped in a class and be capable of being compiled,  
> it
> won't be a list of methods that need special code to test. One big  
> caveat
> with my program is that the grammar must be converted to BNF, which  
> means
> only two operators  ab  or  a | b, no ?, + or *.
>
> Eric
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


