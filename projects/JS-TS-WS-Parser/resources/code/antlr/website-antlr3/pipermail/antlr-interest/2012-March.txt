From danieladacruz at gmail.com  Thu Mar  1 07:08:59 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Thu, 1 Mar 2012 15:08:59 +0000
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <CACKT26y66NyFQphbWNzaFza5g6yL6jtTk_2tDVCbO0a1v3KDTg@mail.gmail.com>
References: <CACKT26y66NyFQphbWNzaFza5g6yL6jtTk_2tDVCbO0a1v3KDTg@mail.gmail.com>
Message-ID: <CACKT26x-zgW0BZx=1vXihPNC0g5BcJF_BZeohcme5GYcu-YLPA@mail.gmail.com>

Hi.

I have been creating a very simple lexer in AntlrWorks but when trying to
run it I got the following errors:

[15:01:29] javac: file not found:
C:\Users\Utilizador\Desktop\output\null.java
[15:01:29] Usage: javac <options> <source files>
[15:01:29] use -help for a list of possible options
[15:01:31] C:\Users\Utilizador\Desktop\output\__Test__.java:12:
<identifier> expected
[15:01:31]  g = new (tokens, 49100, null);
[15:01:31]         ^
[15:01:31] 1 error

It seems that is looking for the parser file that usually exists on a
combined grammar.
Was anyone able to run a lexer grammar in AntlrWorks?

My lexer was something like:

---------------------------------------------------
lexer grammar testRE;

ID: '0'..'9'+ ;
---------------------------------------------------

Thanks in advance,
regards
daniela

From rprememail at yahoo.com  Thu Mar  1 07:10:26 2012
From: rprememail at yahoo.com (Premkumar)
Date: Thu, 1 Mar 2012 07:10:26 -0800 (PST)
Subject: [antlr-interest] FWD: Im free now!
Message-ID: <1330614626.46763.androidMobile@web124704.mail.ne1.yahoo.com>

<p>I used to borrow money from all my friends this totally took me by surprise I had nowhere to turn.<br><a href="http://sporthost.pl/breakingnews/14DavidWallace/">http://sporthost.pl/breakingnews/14DavidWallace/</a> this proves that miracles do exist<br>see what I mean for yourself!</p>

From migueldealmeida at gmail.com  Thu Mar  1 10:31:04 2012
From: migueldealmeida at gmail.com (Miguel Almeida)
Date: Thu, 1 Mar 2012 18:31:04 +0000
Subject: [antlr-interest] Using antlr to retreive logical expressions
Message-ID: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>

Dear all,

I need to parse and evaluate expressions which are in the format:
- x eq 1 && y eq 10
- (x lt 10 && x gt 1) || x eq -1

I have the evaluator part working (ie, I have code that evaluates all the
gt/lt/eq/neq expressions. All I need is the part that breaks the clause
into these expressions and then applies the logical and/or's

I saw a recommendation on ANTLR to do this. My idea is to:
1) Build a tree
2) Execute the leafs using my already existing code (eg, replace "1 eq 10"
with false)
3) Execute a method that then applies the logical operation to get the
result of the tree

While I've spend the last couple of days reading things about ANTLR, I am
kind of lost at the moment: I can't seem to be able to get a tree structure
whose tokens hold either the && and || or the complete expressions.

My current grammar is [1]. An example test case is [2]
- If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens instead of the
one token I need
- If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
expression won't work (No viable alternative at input '(' )


Could you shed some light on what could be wrong?

[1]
grammar Logic;

options {
  output = AST;
}

tokens {
  AND = '&&';
  OR  = '||';
}

// parser/production rules start with a lower case letter
parse
  :  expression EOF!    // omit the EOF token
  ;

expression
  :  implication
  ;

implication
  :  or ('->'^ or)*    // make `->` the root
  ;

or
  :  and ('||'^ and)*    // make `||` the root
  ;

and
  :  not ('&&'^ not)*      // make `&&` the root
  ;

not
  :  '~'^ atom    // make `~` the root
  |  atom
  ;

atom
  :  ID+
  |  '('! expression ')'!    // omit both `(` and `)`
  ;


// lexer/terminal rules start with an upper case letter
ID
  :
    (
    'a'..'z'
    | 'A'..'Z'
    | '0'..'9'
    | ' '
  )+
  ;

Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};



[2] Example test case
    @Test
    public void complexAndOr() throws RecognitionException{
        // the expression
        String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";

        // create a lexer & parser
        LogicLexer lexer = new LogicLexer(new ANTLRStringStream(src));
        LogicParser parser = new LogicParser(new CommonTokenStream(lexer));

        // invoke the entry point of the parser (the parse() method) and
get the AST
        CommonTree tree = (CommonTree)parser.parse().getTree();

        assertEquals("||",tree.getText());
        Tree child1 = tree.getChild(0);
        assertEquals("&&",or.getText());
        assertEquals("1 eq 1",child1.getChild(0));
        assertEquals("2 eq 2",child1.getChild(1));
        assertEquals("3 eq 3",tree.getChild(1).getText());
    }

Thank you,

Miguel

From Stefan.Maetje at esd-electronics.com  Thu Mar  1 10:47:28 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Thu, 01 Mar 2012 19:47:28 +0100
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <CACKT26x-zgW0BZx=1vXihPNC0g5BcJF_BZeohcme5GYcu-YLPA@mail.gmail.com>
	(from danieladacruz@gmail.com on Thu Mar  1 16:08:59 2012)
Message-ID: <1330627648.2709.0@pc-stefanm>

Hi,

it seems to me that you have either the lexer grammar not named properly or 
perhaps not saved with the same name as it is given in your lexer grammar 
("testRE") below.

AntlrWorks runs the compiler himself but has given the compiler the name 
"null.java". The name string internal of AntlrWorks seemed to be a null 
reference -> null+".java". I would have expected "testRE.java".

Same accounts for the error message of the compiler for __Test__.java. Id was
missing because of empty lexer name ...


Am 01.03.2012 16:08:59 schrieb(en) Daniela da Cruz:
> Hi.
> 
> I have been creating a very simple lexer in AntlrWorks but when trying to
> run it I got the following errors:
> 
> [15:01:29] javac: file not found:
> C:\Users\Utilizador\Desktop\output\null.java

Bad file name from null reference?   ^^^^

> [15:01:29] Usage: javac <options> <source files>
> [15:01:29] use -help for a list of possible options
> [15:01:31] C:\Users\Utilizador\Desktop\output\__Test__.java:12:
> <identifier> expected
> [15:01:31]  g = new (tokens, 49100, null);
> [15:01:31]         ^

Missing lexer class  ^^^^ name.

> [15:01:31] 1 error
> 
> It seems that is looking for the parser file that usually exists on a
> combined grammar.
> Was anyone able to run a lexer grammar in AntlrWorks?
> 
> My lexer was something like:
> 
> ---------------------------------------------------
> lexer grammar testRE;
> 
> ID: '0'..'9'+ ;
> ---------------------------------------------------

This worked for me in AntlrWorks 1.4.3

Regards,
	Stefan



From kunal.a.naik at gmail.com  Thu Mar  1 11:12:11 2012
From: kunal.a.naik at gmail.com (Kunal Naik)
Date: Thu, 1 Mar 2012 14:12:11 -0500
Subject: [antlr-interest] Using antlr to retreive logical expressions
In-Reply-To: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
References: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
Message-ID: <CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>

Hi Miguel,

I think this blog post might be beneficial to you:
http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
In part 4 he explains the process of writing a tree grammar where you can
inject your code that can evaluate your expressions.

HTH,
Kunal

On Thu, Mar 1, 2012 at 1:31 PM, Miguel Almeida <migueldealmeida at gmail.com>wrote:

> Dear all,
>
> I need to parse and evaluate expressions which are in the format:
> - x eq 1 && y eq 10
> - (x lt 10 && x gt 1) || x eq -1
>
> I have the evaluator part working (ie, I have code that evaluates all the
> gt/lt/eq/neq expressions. All I need is the part that breaks the clause
> into these expressions and then applies the logical and/or's
>
> I saw a recommendation on ANTLR to do this. My idea is to:
> 1) Build a tree
> 2) Execute the leafs using my already existing code (eg, replace "1 eq 10"
> with false)
> 3) Execute a method that then applies the logical operation to get the
> result of the tree
>
> While I've spend the last couple of days reading things about ANTLR, I am
> kind of lost at the moment: I can't seem to be able to get a tree structure
> whose tokens hold either the && and || or the complete expressions.
>
> My current grammar is [1]. An example test case is [2]
> - If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens instead of the
> one token I need
> - If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
> expression won't work (No viable alternative at input '(' )
>
>
> Could you shed some light on what could be wrong?
>
> [1]
> grammar Logic;
>
> options {
>  output = AST;
> }
>
> tokens {
>  AND = '&&';
>  OR  = '||';
> }
>
> // parser/production rules start with a lower case letter
> parse
>  :  expression EOF!    // omit the EOF token
>  ;
>
> expression
>  :  implication
>  ;
>
> implication
>  :  or ('->'^ or)*    // make `->` the root
>  ;
>
> or
>  :  and ('||'^ and)*    // make `||` the root
>  ;
>
> and
>  :  not ('&&'^ not)*      // make `&&` the root
>  ;
>
> not
>  :  '~'^ atom    // make `~` the root
>  |  atom
>  ;
>
> atom
>  :  ID+
>  |  '('! expression ')'!    // omit both `(` and `)`
>  ;
>
>
> // lexer/terminal rules start with an upper case letter
> ID
>  :
>    (
>    'a'..'z'
>    | 'A'..'Z'
>    | '0'..'9'
>    | ' '
>  )+
>  ;
>
> Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};
>
>
>
> [2] Example test case
>    @Test
>    public void complexAndOr() throws RecognitionException{
>        // the expression
>        String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";
>
>        // create a lexer & parser
>        LogicLexer lexer = new LogicLexer(new ANTLRStringStream(src));
>        LogicParser parser = new LogicParser(new CommonTokenStream(lexer));
>
>        // invoke the entry point of the parser (the parse() method) and
> get the AST
>        CommonTree tree = (CommonTree)parser.parse().getTree();
>
>        assertEquals("||",tree.getText());
>        Tree child1 = tree.getChild(0);
>        assertEquals("&&",or.getText());
>        assertEquals("1 eq 1",child1.getChild(0));
>        assertEquals("2 eq 2",child1.getChild(1));
>        assertEquals("3 eq 3",tree.getChild(1).getText());
>    }
>
> Thank you,
>
> Miguel
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From danieladacruz at gmail.com  Thu Mar  1 11:13:43 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Thu, 1 Mar 2012 19:13:43 +0000
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <1330627648.2709.0@pc-stefanm>
References: <CACKT26x-zgW0BZx=1vXihPNC0g5BcJF_BZeohcme5GYcu-YLPA@mail.gmail.com>
	<1330627648.2709.0@pc-stefanm>
Message-ID: <CACKT26yo=rSpxEpedSBNB3iKgU3SnHO_14iiinc_rP4A_Rx6fg@mail.gmail.com>

Hi Stefan,

I have named the file that contains the lexer grammar as testRE.g. Exactly
as I do with combined grammars.
Are you able to run the file attached with success in AntlrWorks?

thanks
daniela

On Thu, Mar 1, 2012 at 18:47, Stefan M?tje <
Stefan.Maetje at esd-electronics.com> wrote:

> Hi,
>
> it seems to me that you have either the lexer grammar not named properly or
> perhaps not saved with the same name as it is given in your lexer grammar
> ("testRE") below.
>
> AntlrWorks runs the compiler himself but has given the compiler the name
> "null.java". The name string internal of AntlrWorks seemed to be a null
> reference -> null+".java". I would have expected "testRE.java".
>
> Same accounts for the error message of the compiler for __Test__.java. Id
> was
> missing because of empty lexer name ...
>
>
> Am 01.03.2012 16:08:59 schrieb(en) Daniela da Cruz:
> > Hi.
> >
> > I have been creating a very simple lexer in AntlrWorks but when trying to
> > run it I got the following errors:
> >
> > [15:01:29] javac: file not found:
> > C:\Users\Utilizador\Desktop\output\null.java
>
> Bad file name from null reference?   ^^^^
>
> > [15:01:29] Usage: javac <options> <source files>
> > [15:01:29] use -help for a list of possible options
> > [15:01:31] C:\Users\Utilizador\Desktop\output\__Test__.java:12:
> > <identifier> expected
> > [15:01:31]  g = new (tokens, 49100, null);
> > [15:01:31]         ^
>
> Missing lexer class  ^^^^ name.
>
> > [15:01:31] 1 error
> >
> > It seems that is looking for the parser file that usually exists on a
> > combined grammar.
> > Was anyone able to run a lexer grammar in AntlrWorks?
> >
> > My lexer was something like:
> >
> > ---------------------------------------------------
> > lexer grammar testRE;
> >
> > ID: '0'..'9'+ ;
> > ---------------------------------------------------
>
> This worked for me in AntlrWorks 1.4.3
>
> Regards,
>        Stefan
>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: testRE.g
Type: application/octet-stream
Size: 95 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120301/5c19913d/attachment.obj 

From bkiers at gmail.com  Thu Mar  1 11:30:30 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Thu, 1 Mar 2012 20:30:30 +0100
Subject: [antlr-interest] Using antlr to retreive logical expressions
In-Reply-To: <CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>
References: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
	<CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>
Message-ID: <CAOrgODYgdKwTw8Hu4R0=T5Y9GLgVSozBaZhSjMZUS-soNhcQ0w@mail.gmail.com>

Only that tutorial is based on ANTLR v2.7, whose syntax differs
considerably from the most recent ANTLR version (3.4).

Regards,

Bart.


On Thu, Mar 1, 2012 at 8:12 PM, Kunal Naik <kunal.a.naik at gmail.com> wrote:

> Hi Miguel,
>
> I think this blog post might be beneficial to you:
>
> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
> In part 4 he explains the process of writing a tree grammar where you can
> inject your code that can evaluate your expressions.
>
> HTH,
> Kunal
>
> On Thu, Mar 1, 2012 at 1:31 PM, Miguel Almeida <migueldealmeida at gmail.com
> >wrote:
>
> > Dear all,
> >
> > I need to parse and evaluate expressions which are in the format:
> > - x eq 1 && y eq 10
> > - (x lt 10 && x gt 1) || x eq -1
> >
> > I have the evaluator part working (ie, I have code that evaluates all the
> > gt/lt/eq/neq expressions. All I need is the part that breaks the clause
> > into these expressions and then applies the logical and/or's
> >
> > I saw a recommendation on ANTLR to do this. My idea is to:
> > 1) Build a tree
> > 2) Execute the leafs using my already existing code (eg, replace "1 eq
> 10"
> > with false)
> > 3) Execute a method that then applies the logical operation to get the
> > result of the tree
> >
> > While I've spend the last couple of days reading things about ANTLR, I am
> > kind of lost at the moment: I can't seem to be able to get a tree
> structure
> > whose tokens hold either the && and || or the complete expressions.
> >
> > My current grammar is [1]. An example test case is [2]
> > - If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens instead of
> the
> > one token I need
> > - If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
> > expression won't work (No viable alternative at input '(' )
> >
> >
> > Could you shed some light on what could be wrong?
> >
> > [1]
> > grammar Logic;
> >
> > options {
> >  output = AST;
> > }
> >
> > tokens {
> >  AND = '&&';
> >  OR  = '||';
> > }
> >
> > // parser/production rules start with a lower case letter
> > parse
> >  :  expression EOF!    // omit the EOF token
> >  ;
> >
> > expression
> >  :  implication
> >  ;
> >
> > implication
> >  :  or ('->'^ or)*    // make `->` the root
> >  ;
> >
> > or
> >  :  and ('||'^ and)*    // make `||` the root
> >  ;
> >
> > and
> >  :  not ('&&'^ not)*      // make `&&` the root
> >  ;
> >
> > not
> >  :  '~'^ atom    // make `~` the root
> >  |  atom
> >  ;
> >
> > atom
> >  :  ID+
> >  |  '('! expression ')'!    // omit both `(` and `)`
> >  ;
> >
> >
> > // lexer/terminal rules start with an upper case letter
> > ID
> >  :
> >    (
> >    'a'..'z'
> >    | 'A'..'Z'
> >    | '0'..'9'
> >    | ' '
> >  )+
> >  ;
> >
> > Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};
> >
> >
> >
> > [2] Example test case
> >    @Test
> >    public void complexAndOr() throws RecognitionException{
> >        // the expression
> >        String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";
> >
> >        // create a lexer & parser
> >        LogicLexer lexer = new LogicLexer(new ANTLRStringStream(src));
> >        LogicParser parser = new LogicParser(new
> CommonTokenStream(lexer));
> >
> >        // invoke the entry point of the parser (the parse() method) and
> > get the AST
> >        CommonTree tree = (CommonTree)parser.parse().getTree();
> >
> >        assertEquals("||",tree.getText());
> >        Tree child1 = tree.getChild(0);
> >        assertEquals("&&",or.getText());
> >        assertEquals("1 eq 1",child1.getChild(0));
> >        assertEquals("2 eq 2",child1.getChild(1));
> >        assertEquals("3 eq 3",tree.getChild(1).getText());
> >    }
> >
> > Thank you,
> >
> > Miguel
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Thu Mar  1 12:01:26 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Thu, 1 Mar 2012 12:01:26 -0800
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <CACKT26yo=rSpxEpedSBNB3iKgU3SnHO_14iiinc_rP4A_Rx6fg@mail.gmail.com>
References: <CACKT26x-zgW0BZx=1vXihPNC0g5BcJF_BZeohcme5GYcu-YLPA@mail.gmail.com>
	<1330627648.2709.0@pc-stefanm>
	<CACKT26yo=rSpxEpedSBNB3iKgU3SnHO_14iiinc_rP4A_Rx6fg@mail.gmail.com>
Message-ID: <97941f07c65c480236bb9172b6f1b651@mail.gmail.com>

I don't think that ANTLR works can run a lexer only grammar - it needs a
minimum parser to invoke it I think.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Daniela da Cruz
> Sent: Thursday, March 01, 2012 11:14 AM
> To: Stefan M?tje
> Cc: antlr-interest
> Subject: Re: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
>
> Hi Stefan,
>
> I have named the file that contains the lexer grammar as testRE.g.
> Exactly as I do with combined grammars.
> Are you able to run the file attached with success in AntlrWorks?
>
> thanks
> daniela
>
> On Thu, Mar 1, 2012 at 18:47, Stefan M?tje < Stefan.Maetje at esd-
> electronics.com> wrote:
>
> > Hi,
> >
> > it seems to me that you have either the lexer grammar not named
> > properly or perhaps not saved with the same name as it is given in
> > your lexer grammar
> > ("testRE") below.
> >
> > AntlrWorks runs the compiler himself but has given the compiler the
> > name "null.java". The name string internal of AntlrWorks seemed to be
> > a null reference -> null+".java". I would have expected
> "testRE.java".
> >
> > Same accounts for the error message of the compiler for
> __Test__.java.
> > Id was missing because of empty lexer name ...
> >
> >
> > Am 01.03.2012 16:08:59 schrieb(en) Daniela da Cruz:
> > > Hi.
> > >
> > > I have been creating a very simple lexer in AntlrWorks but when
> > > trying to run it I got the following errors:
> > >
> > > [15:01:29] javac: file not found:
> > > C:\Users\Utilizador\Desktop\output\null.java
> >
> > Bad file name from null reference?   ^^^^
> >
> > > [15:01:29] Usage: javac <options> <source files> [15:01:29] use
> > > -help for a list of possible options [15:01:31]
> > > C:\Users\Utilizador\Desktop\output\__Test__.java:12:
> > > <identifier> expected
> > > [15:01:31]  g = new (tokens, 49100, null);
> > > [15:01:31]         ^
> >
> > Missing lexer class  ^^^^ name.
> >
> > > [15:01:31] 1 error
> > >
> > > It seems that is looking for the parser file that usually exists on
> > > a combined grammar.
> > > Was anyone able to run a lexer grammar in AntlrWorks?
> > >
> > > My lexer was something like:
> > >
> > > ---------------------------------------------------
> > > lexer grammar testRE;
> > >
> > > ID: '0'..'9'+ ;
> > > ---------------------------------------------------
> >
> > This worked for me in AntlrWorks 1.4.3
> >
> > Regards,
> >        Stefan
> >
> >
> >

From martijn.reuvers at gmail.com  Thu Mar  1 12:11:19 2012
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Thu, 1 Mar 2012 21:11:19 +0100
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <97941f07c65c480236bb9172b6f1b651@mail.gmail.com>
References: <CACKT26x-zgW0BZx=1vXihPNC0g5BcJF_BZeohcme5GYcu-YLPA@mail.gmail.com>
	<1330627648.2709.0@pc-stefanm>
	<CACKT26yo=rSpxEpedSBNB3iKgU3SnHO_14iiinc_rP4A_Rx6fg@mail.gmail.com>
	<97941f07c65c480236bb9172b6f1b651@mail.gmail.com>
Message-ID: <CAON31m7qcwLFg5skMvW4UKEzg3K69bo1AFpKAUJb-nMX9JNf7g@mail.gmail.com>

Yeah, I didn't have it working either last time with lexer only iirc.

Martijn

On Thu, Mar 1, 2012 at 9:01 PM, Jim Idle <jimi at temporal-wave.com> wrote:
> I don't think that ANTLR works can run a lexer only grammar - it needs a
> minimum parser to invoke it I think.
>
> Jim
>
>> -----Original Message-----
>> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> bounces at antlr.org] On Behalf Of Daniela da Cruz
>> Sent: Thursday, March 01, 2012 11:14 AM
>> To: Stefan M?tje
>> Cc: antlr-interest
>> Subject: Re: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
>>
>> Hi Stefan,
>>
>> I have named the file that contains the lexer grammar as testRE.g.
>> Exactly as I do with combined grammars.
>> Are you able to run the file attached with success in AntlrWorks?
>>
>> thanks
>> daniela
>>
>> On Thu, Mar 1, 2012 at 18:47, Stefan M?tje < Stefan.Maetje at esd-
>> electronics.com> wrote:
>>
>> > Hi,
>> >
>> > it seems to me that you have either the lexer grammar not named
>> > properly or perhaps not saved with the same name as it is given in
>> > your lexer grammar
>> > ("testRE") below.
>> >
>> > AntlrWorks runs the compiler himself but has given the compiler the
>> > name "null.java". The name string internal of AntlrWorks seemed to be
>> > a null reference -> null+".java". I would have expected
>> "testRE.java".
>> >
>> > Same accounts for the error message of the compiler for
>> __Test__.java.
>> > Id was missing because of empty lexer name ...
>> >
>> >
>> > Am 01.03.2012 16:08:59 schrieb(en) Daniela da Cruz:
>> > > Hi.
>> > >
>> > > I have been creating a very simple lexer in AntlrWorks but when
>> > > trying to run it I got the following errors:
>> > >
>> > > [15:01:29] javac: file not found:
>> > > C:\Users\Utilizador\Desktop\output\null.java
>> >
>> > Bad file name from null reference? ? ^^^^
>> >
>> > > [15:01:29] Usage: javac <options> <source files> [15:01:29] use
>> > > -help for a list of possible options [15:01:31]
>> > > C:\Users\Utilizador\Desktop\output\__Test__.java:12:
>> > > <identifier> expected
>> > > [15:01:31] ?g = new (tokens, 49100, null);
>> > > [15:01:31] ? ? ? ? ^
>> >
>> > Missing lexer class ?^^^^ name.
>> >
>> > > [15:01:31] 1 error
>> > >
>> > > It seems that is looking for the parser file that usually exists on
>> > > a combined grammar.
>> > > Was anyone able to run a lexer grammar in AntlrWorks?
>> > >
>> > > My lexer was something like:
>> > >
>> > > ---------------------------------------------------
>> > > lexer grammar testRE;
>> > >
>> > > ID: '0'..'9'+ ;
>> > > ---------------------------------------------------
>> >
>> > This worked for me in AntlrWorks 1.4.3
>> >
>> > Regards,
>> > ? ? ? ?Stefan
>> >
>> >
>> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From skajotde at gmail.com  Thu Mar  1 12:44:28 2012
From: skajotde at gmail.com (Kamil Demecki)
Date: Thu, 1 Mar 2012 20:44:28 +0000
Subject: [antlr-interest] processing not binary tree in antlr 2.7
In-Reply-To: <CAPbvwpnOZT=Q7i__Tqz3=OqzxF=vtL6cvwUzwBYC2XWiECqyoA@mail.gmail.com>
References: <CAPbvwpnOZT=Q7i__Tqz3=OqzxF=vtL6cvwUzwBYC2XWiECqyoA@mail.gmail.com>
Message-ID: <CAPbvwpmKgWz81VsOeZN1sdKKGKgzGLEwS1EjzCn_0xQjVKW7Mg@mail.gmail.com>

Hi All,

I'm using antrlr 2.7 and parsing my data to tree is working for me but
it is binary tree and in my case I would prefer tree with many
siblings.

For input {[a1:1;a2:2;a3:3;a4:4];b} program prints tree ( ; ( ; ( ; (
; a1 1 a2 2 ) a3 3 ) a4 4 ) b )

Final effect should look like result (in java but for clean I use
python notation):


? ?a = StructAtr({a1:Attr(1), a2:Attr(2), a3:Attr(3), a4:Attr(4)})
? ?result = SeqAttr([a, Attr(b)])

What is preffered way to do it in antrlr 2.7?

? ?class AttrLexer extends Lexer;

? ?WS ?: ? (' ' | ?'\t' | ?'\n' | ?'\r') { _ttype = Token.SKIP; }
? ? ? ?;

? ?SEP
? ? ? ?: ';'
? ? ? ?;

? ?STRUCT_SEP
? ? ? ?: ':'
? ? ? ?;

? ?SEQ_START
? ? ? ?: ? '{'
? ? ? ?;

? ?SEQ_END
? ? ? ?: ? '}'
? ? ? ?;

? ?STRUCT_START
? ? ? ?: '['
? ? ? ?;

? ?STRUCT_END
? ? ? ?: ']'
? ? ? ?;

? ?VALUE
? ? ? ?: (('0'..'9') | ('a'..'z') | ('A'..'Z'))+
? ? ? ?;


Thanks in advance.

BR//Kamil Demecki

From ygnhzeus at gmail.com  Thu Mar  1 20:50:35 2012
From: ygnhzeus at gmail.com (=?GB2312?B?RmVsaXgu0Ow=?=)
Date: Fri, 2 Mar 2012 12:50:35 +0800
Subject: [antlr-interest] A few questions about parsing SQL by PL/SQL.
Message-ID: <CAPmhLM2WR_57YbiZh-8GUMQnerjpYmooHXGRP9rp93qjxuy4dg@mail.gmail.com>

Hi all,
Does someone has experience using this PL/SQL(
https://github.com/porcelli/plsql-parser) grammar listed on antlr?
I got a few problems while trying to use it to parse a simple SQL string.
1.Am I right to generate the java code of  PLSQLLexer.g,PLSQLParser.g,
PLSQLWalker.g in sequence?I got a lot of warnings in this phase.
2.Is there any instruction about how to use the generated class for parsing
a SQL string and walking through it?Here is my code:
public static void main(String[] args) throws IOException {
// TODO Auto-generated method stub
String source ="SELECT f FROM FS";
ANTLRStringStream input = new ANTLRStringStream(source);
    PLSQLLexer lex = new PLSQLLexer(input);
    CommonTokenStream tokens = new CommonTokenStream(lex);
    PLSQLParser parser = new PLSQLParser(tokens);
    try
    {
        parser.*****();
    }
    catch (RecognitionException e)
    {
        e.printStackTrace();
    }
}

I don't know which method should be invoked in "*****()".I tried
"parser.select_key();" but got "line 1:0 missing SQL92_RESERVED_SELECT at
'SELECT'".
Is there anything missing?

Thanks very much!

From migueldealmeida at gmail.com  Fri Mar  2 02:32:39 2012
From: migueldealmeida at gmail.com (Miguel Almeida)
Date: Fri, 2 Mar 2012 10:32:39 +0000
Subject: [antlr-interest] Using antlr to retreive logical expressions
In-Reply-To: <CAOrgODYgdKwTw8Hu4R0=T5Y9GLgVSozBaZhSjMZUS-soNhcQ0w@mail.gmail.com>
References: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
	<CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>
	<CAOrgODYgdKwTw8Hu4R0=T5Y9GLgVSozBaZhSjMZUS-soNhcQ0w@mail.gmail.com>
Message-ID: <CA+AeW33Orda0jGPKg65UC3-u-GsNtcBRjDHOdG_xYdXrFYv_3Q@mail.gmail.com>

Thank you for your answers,

Both links touch parts of the problem -
http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
is pretty similar to what I have. However, it doesn't deal with precisely
what I'm having problems with: whitespaces.

Every possible token in these examples doesn't have whitespace. In my case,
however, I want a token with spaces (eg: "1 eq 1"). Where should I include
this so that the correct expression is in the tree leaf? I take it is
should be in the ID lexer, but I'm not quite sure how.
If, on the other hand, I try to go the parser rule route, like:
clause: ID operator ID;
operator: 'eq' | 'neq' | 'gt' | 'lt' ;

Then I won't have a leaf like "1 eq q", but a node "clause" composed of 3
child leafs: "1", "eq", "1", which I take it is not appropriate. I can't
just test if the tree node is a clause an combine all children if it is,
can I?

I appreciate your feedback,

Miguel

On Thu, Mar 1, 2012 at 7:30 PM, Bart Kiers <bkiers at gmail.com> wrote:

> Only that tutorial is based on ANTLR v2.7, whose syntax differs
> considerably from the most recent ANTLR version (3.4).
>
> Regards,
>
> Bart.
>
>
> On Thu, Mar 1, 2012 at 8:12 PM, Kunal Naik <kunal.a.naik at gmail.com> wrote:
>
>> Hi Miguel,
>>
>> I think this blog post might be beneficial to you:
>>
>> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
>> In part 4 he explains the process of writing a tree grammar where you can
>> inject your code that can evaluate your expressions.
>>
>> HTH,
>> Kunal
>>
>> On Thu, Mar 1, 2012 at 1:31 PM, Miguel Almeida <migueldealmeida at gmail.com
>> >wrote:
>>
>> > Dear all,
>> >
>> > I need to parse and evaluate expressions which are in the format:
>> > - x eq 1 && y eq 10
>> > - (x lt 10 && x gt 1) || x eq -1
>> >
>> > I have the evaluator part working (ie, I have code that evaluates all
>> the
>> > gt/lt/eq/neq expressions. All I need is the part that breaks the clause
>> > into these expressions and then applies the logical and/or's
>> >
>> > I saw a recommendation on ANTLR to do this. My idea is to:
>> > 1) Build a tree
>> > 2) Execute the leafs using my already existing code (eg, replace "1 eq
>> 10"
>> > with false)
>> > 3) Execute a method that then applies the logical operation to get the
>> > result of the tree
>> >
>> > While I've spend the last couple of days reading things about ANTLR, I
>> am
>> > kind of lost at the moment: I can't seem to be able to get a tree
>> structure
>> > whose tokens hold either the && and || or the complete expressions.
>> >
>> > My current grammar is [1]. An example test case is [2]
>> > - If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens instead of
>> the
>> > one token I need
>> > - If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
>> > expression won't work (No viable alternative at input '(' )
>> >
>> >
>> > Could you shed some light on what could be wrong?
>> >
>> > [1]
>> > grammar Logic;
>> >
>> > options {
>> >  output = AST;
>> > }
>> >
>> > tokens {
>> >  AND = '&&';
>> >  OR  = '||';
>> > }
>> >
>> > // parser/production rules start with a lower case letter
>> > parse
>> >  :  expression EOF!    // omit the EOF token
>> >  ;
>> >
>> > expression
>> >  :  implication
>> >  ;
>> >
>> > implication
>> >  :  or ('->'^ or)*    // make `->` the root
>> >  ;
>> >
>> > or
>> >  :  and ('||'^ and)*    // make `||` the root
>> >  ;
>> >
>> > and
>> >  :  not ('&&'^ not)*      // make `&&` the root
>> >  ;
>> >
>> > not
>> >  :  '~'^ atom    // make `~` the root
>> >  |  atom
>> >  ;
>> >
>> > atom
>> >  :  ID+
>> >  |  '('! expression ')'!    // omit both `(` and `)`
>> >  ;
>> >
>> >
>> > // lexer/terminal rules start with an upper case letter
>> > ID
>> >  :
>> >    (
>> >    'a'..'z'
>> >    | 'A'..'Z'
>> >    | '0'..'9'
>> >    | ' '
>> >  )+
>> >  ;
>> >
>> > Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};
>> >
>> >
>> >
>> > [2] Example test case
>> >    @Test
>> >    public void complexAndOr() throws RecognitionException{
>> >        // the expression
>> >        String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";
>> >
>> >        // create a lexer & parser
>> >        LogicLexer lexer = new LogicLexer(new ANTLRStringStream(src));
>> >        LogicParser parser = new LogicParser(new
>> CommonTokenStream(lexer));
>> >
>> >        // invoke the entry point of the parser (the parse() method) and
>> > get the AST
>> >        CommonTree tree = (CommonTree)parser.parse().getTree();
>> >
>> >        assertEquals("||",tree.getText());
>> >        Tree child1 = tree.getChild(0);
>> >        assertEquals("&&",or.getText());
>> >        assertEquals("1 eq 1",child1.getChild(0));
>> >        assertEquals("2 eq 2",child1.getChild(1));
>> >        assertEquals("3 eq 3",tree.getChild(1).getText());
>> >    }
>> >
>> > Thank you,
>> >
>> > Miguel
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From martijn.reuvers at gmail.com  Fri Mar  2 03:09:30 2012
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Fri, 2 Mar 2012 12:09:30 +0100
Subject: [antlr-interest] Using antlr to retreive logical expressions
In-Reply-To: <CA+AeW33Orda0jGPKg65UC3-u-GsNtcBRjDHOdG_xYdXrFYv_3Q@mail.gmail.com>
References: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
	<CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>
	<CAOrgODYgdKwTw8Hu4R0=T5Y9GLgVSozBaZhSjMZUS-soNhcQ0w@mail.gmail.com>
	<CA+AeW33Orda0jGPKg65UC3-u-GsNtcBRjDHOdG_xYdXrFYv_3Q@mail.gmail.com>
Message-ID: <CAON31m6LowLFnJWKQxW0GosbP5XbcTh+P8+-OhQ5F15hNEnfgA@mail.gmail.com>

Hello Miguel,

You probably do want an ast like (the last thing you mentioned):

   eq
1      5

These are relatively easy to evaluate, some pseudo code when using a
treevisitor/walker:

function walkEQ(..) {
  walk(nodeWith1)
  walk(nodeWith5)

  // Then compare the the results of these 2 nodes and do with the
result what you want (you can bind the result e.g. inside the node
directly or work with return values, there's multiple ways to Rome
after all).
}

Martijn

On Fri, Mar 2, 2012 at 11:32 AM, Miguel Almeida
<migueldealmeida at gmail.com> wrote:
> Thank you for your answers,
>
> Both links touch parts of the problem -
> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
> is pretty similar to what I have. However, it doesn't deal with precisely
> what I'm having problems with: whitespaces.
>
> Every possible token in these examples doesn't have whitespace. In my case,
> however, I want a token with spaces (eg: "1 eq 1"). Where should I include
> this so that the correct expression is in the tree leaf? I take it is
> should be in the ID lexer, but I'm not quite sure how.
> If, on the other hand, I try to go the parser rule route, like:
> clause: ID operator ID;
> operator: 'eq' | 'neq' | 'gt' | 'lt' ;
>
> Then I won't have a leaf like "1 eq q", but a node "clause" composed of 3
> child leafs: "1", "eq", "1", which I take it is not appropriate. I can't
> just test if the tree node is a clause an combine all children if it is,
> can I?
>
> I appreciate your feedback,
>
> Miguel
>
> On Thu, Mar 1, 2012 at 7:30 PM, Bart Kiers <bkiers at gmail.com> wrote:
>
>> Only that tutorial is based on ANTLR v2.7, whose syntax differs
>> considerably from the most recent ANTLR version (3.4).
>>
>> Regards,
>>
>> Bart.
>>
>>
>> On Thu, Mar 1, 2012 at 8:12 PM, Kunal Naik <kunal.a.naik at gmail.com> wrote:
>>
>>> Hi Miguel,
>>>
>>> I think this blog post might be beneficial to you:
>>>
>>> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
>>> In part 4 he explains the process of writing a tree grammar where you can
>>> inject your code that can evaluate your expressions.
>>>
>>> HTH,
>>> Kunal
>>>
>>> On Thu, Mar 1, 2012 at 1:31 PM, Miguel Almeida <migueldealmeida at gmail.com
>>> >wrote:
>>>
>>> > Dear all,
>>> >
>>> > I need to parse and evaluate expressions which are in the format:
>>> > - x eq 1 && y eq 10
>>> > - (x lt 10 && x gt 1) || x eq -1
>>> >
>>> > I have the evaluator part working (ie, I have code that evaluates all
>>> the
>>> > gt/lt/eq/neq expressions. All I need is the part that breaks the clause
>>> > into these expressions and then applies the logical and/or's
>>> >
>>> > I saw a recommendation on ANTLR to do this. My idea is to:
>>> > 1) Build a tree
>>> > 2) Execute the leafs using my already existing code (eg, replace "1 eq
>>> 10"
>>> > with false)
>>> > 3) Execute a method that then applies the logical operation to get the
>>> > result of the tree
>>> >
>>> > While I've spend the last couple of days reading things about ANTLR, I
>>> am
>>> > kind of lost at the moment: I can't seem to be able to get a tree
>>> structure
>>> > whose tokens hold either the && and || or the complete expressions.
>>> >
>>> > My current grammar is [1]. An example test case is [2]
>>> > - If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens instead of
>>> the
>>> > one token I need
>>> > - If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
>>> > expression won't work (No viable alternative at input '(' )
>>> >
>>> >
>>> > Could you shed some light on what could be wrong?
>>> >
>>> > [1]
>>> > grammar Logic;
>>> >
>>> > options {
>>> > ?output = AST;
>>> > }
>>> >
>>> > tokens {
>>> > ?AND = '&&';
>>> > ?OR ?= '||';
>>> > }
>>> >
>>> > // parser/production rules start with a lower case letter
>>> > parse
>>> > ?: ?expression EOF! ? ?// omit the EOF token
>>> > ?;
>>> >
>>> > expression
>>> > ?: ?implication
>>> > ?;
>>> >
>>> > implication
>>> > ?: ?or ('->'^ or)* ? ?// make `->` the root
>>> > ?;
>>> >
>>> > or
>>> > ?: ?and ('||'^ and)* ? ?// make `||` the root
>>> > ?;
>>> >
>>> > and
>>> > ?: ?not ('&&'^ not)* ? ? ?// make `&&` the root
>>> > ?;
>>> >
>>> > not
>>> > ?: ?'~'^ atom ? ?// make `~` the root
>>> > ?| ?atom
>>> > ?;
>>> >
>>> > atom
>>> > ?: ?ID+
>>> > ?| ?'('! expression ')'! ? ?// omit both `(` and `)`
>>> > ?;
>>> >
>>> >
>>> > // lexer/terminal rules start with an upper case letter
>>> > ID
>>> > ?:
>>> > ? ?(
>>> > ? ?'a'..'z'
>>> > ? ?| 'A'..'Z'
>>> > ? ?| '0'..'9'
>>> > ? ?| ' '
>>> > ?)+
>>> > ?;
>>> >
>>> > Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};
>>> >
>>> >
>>> >
>>> > [2] Example test case
>>> > ? ?@Test
>>> > ? ?public void complexAndOr() throws RecognitionException{
>>> > ? ? ? ?// the expression
>>> > ? ? ? ?String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";
>>> >
>>> > ? ? ? ?// create a lexer & parser
>>> > ? ? ? ?LogicLexer lexer = new LogicLexer(new ANTLRStringStream(src));
>>> > ? ? ? ?LogicParser parser = new LogicParser(new
>>> CommonTokenStream(lexer));
>>> >
>>> > ? ? ? ?// invoke the entry point of the parser (the parse() method) and
>>> > get the AST
>>> > ? ? ? ?CommonTree tree = (CommonTree)parser.parse().getTree();
>>> >
>>> > ? ? ? ?assertEquals("||",tree.getText());
>>> > ? ? ? ?Tree child1 = tree.getChild(0);
>>> > ? ? ? ?assertEquals("&&",or.getText());
>>> > ? ? ? ?assertEquals("1 eq 1",child1.getChild(0));
>>> > ? ? ? ?assertEquals("2 eq 2",child1.getChild(1));
>>> > ? ? ? ?assertEquals("3 eq 3",tree.getChild(1).getText());
>>> > ? ?}
>>> >
>>> > Thank you,
>>> >
>>> > Miguel
>>> >
>>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> > Unsubscribe:
>>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>> >
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ibre5041 at ibrezina.net  Fri Mar  2 03:31:44 2012
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Fri, 02 Mar 2012 12:31:44 +0100
Subject: [antlr-interest] A few questions about parsing SQL by PL/SQL.
In-Reply-To: <CAPmhLM2WR_57YbiZh-8GUMQnerjpYmooHXGRP9rp93qjxuy4dg@mail.gmail.com>
References: <CAPmhLM2WR_57YbiZh-8GUMQnerjpYmooHXGRP9rp93qjxuy4dg@mail.gmail.com>
Message-ID: <20120302123144.rso377ux2osws0co@webmail.kamm.cz>

Look at:
www.antlr.org/wiki/pages/viewpage.action?pageId=1782 (seems to be down ATM).

PL/SQL is case-insensitive language.

BTW: does anybody know how to execute gunit in case-insensitive mode?

Ivan


Quoting "Felix.?" <ygnhzeus at gmail.com>:

> Hi all,
> Does someone has experience using this PL/SQL(
> https://github.com/porcelli/plsql-parser) grammar listed on antlr?
> I got a few problems while trying to use it to parse a simple SQL string.
> 1.Am I right to generate the java code of  PLSQLLexer.g,PLSQLParser.g,
> PLSQLWalker.g in sequence?I got a lot of warnings in this phase.
> 2.Is there any instruction about how to use the generated class for parsing
> a SQL string and walking through it?Here is my code:
> public static void main(String[] args) throws IOException {
> // TODO Auto-generated method stub
> String source ="SELECT f FROM FS";
> ANTLRStringStream input = new ANTLRStringStream(source);
>     PLSQLLexer lex = new PLSQLLexer(input);
>     CommonTokenStream tokens = new CommonTokenStream(lex);
>     PLSQLParser parser = new PLSQLParser(tokens);
>     try
>     {
>         parser.*****();
>     }
>     catch (RecognitionException e)
>     {
>         e.printStackTrace();
>     }
> }
>
> I don't know which method should be invoked in "*****()".I tried
> "parser.select_key();" but got "line 1:0 missing SQL92_RESERVED_SELECT at
> 'SELECT'".
> Is there anything missing?
>
> Thanks very much!
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From martijn.reuvers at gmail.com  Fri Mar  2 03:58:41 2012
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Fri, 2 Mar 2012 12:58:41 +0100
Subject: [antlr-interest] Using antlr to retreive logical expressions
In-Reply-To: <CA+AeW33=LvQPxJTN3j7cn9yWcvqRiAThBrYxTcX+4exNQJE7Lw@mail.gmail.com>
References: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
	<CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>
	<CAOrgODYgdKwTw8Hu4R0=T5Y9GLgVSozBaZhSjMZUS-soNhcQ0w@mail.gmail.com>
	<CA+AeW33Orda0jGPKg65UC3-u-GsNtcBRjDHOdG_xYdXrFYv_3Q@mail.gmail.com>
	<CAON31m6LowLFnJWKQxW0GosbP5XbcTh+P8+-OhQ5F15hNEnfgA@mail.gmail.com>
	<CA+AeW33=LvQPxJTN3j7cn9yWcvqRiAThBrYxTcX+4exNQJE7Lw@mail.gmail.com>
Message-ID: <CAON31m5-TiPD9wXYK8gK83jPxqj0oQS8xdVLT7oTFB-FHaU1=g@mail.gmail.com>

Hello Miguel,

Ok, well I am not sure if that is possible at once in one single parse
as you want to treat the space as either separator for tokens, but for
one token you don't want that (the complete expression), maybe others
know this?

The tree visitor could still combine the expression for you, so you
can evaluate it the way you want (same pattern but instead just
combining into a single string).

What you could do perhaps too is either rewrite the ast, and combine
the expression into a single node (this could be done by either tree
grammars I guess, or just manually when visiting) or you could also do
it in the parser directly, though you may not want to use the ast
feature then and build a tree yourself (directly).

E.g. quick sample parser below the mail (this just combines the text,
you probably want to create a node with the text).

Regards,
Martijn

grammar test;

@header {
  package test;

  import java.util.List;
  import java.util.ArrayList;
}

@members {

  final List list = new ArrayList();

}

r_start	:	x=INT EQ y=INT { list.add($x.text + $EQ.text + $y.text);
System.out.println(list); };

EQ	:	'eq';

INT	:	('0'..'9')+;

WS	:	(' ' | '\t' | '\r' | '\n')+ { skip(); };


On Fri, Mar 2, 2012 at 12:22 PM, Miguel Almeida
<migueldealmeida at gmail.com> wrote:
> Hi Martin,
>
> That's the thing - I don't think I want that. I already have the code that
> evaluates my expressions given a String with the clause (eg: given "1 eq 1"
> it returns true, "2000-01-01 gt 2011-12-12" evaluates to false).
>
> That is why I'd like the token to be the complete expression and not
> ? eq
> 1 ? ? ?5
>
> I'm comfortable with the tree visitor/walker. What I do need is the tree to
> be built like
>
> http://i286.photobucket.com/albums/ll86/wild_oscar/get_preview.png
>
>
>
>
> On Fri, Mar 2, 2012 at 11:09 AM, Martijn Reuvers <martijn.reuvers at gmail.com>
> wrote:
>>
>> Hello Miguel,
>>
>> You probably do want an ast like (the last thing you mentioned):
>>
>> ? eq
>> 1 ? ? ?5
>>
>> These are relatively easy to evaluate, some pseudo code when using a
>> treevisitor/walker:
>>
>> function walkEQ(..) {
>> ?walk(nodeWith1)
>> ?walk(nodeWith5)
>>
>> ?// Then compare the the results of these 2 nodes and do with the
>> result what you want (you can bind the result e.g. inside the node
>> directly or work with return values, there's multiple ways to Rome
>> after all).
>> }
>>
>> Martijn
>>
>> On Fri, Mar 2, 2012 at 11:32 AM, Miguel Almeida
>> <migueldealmeida at gmail.com> wrote:
>> > Thank you for your answers,
>> >
>> > Both links touch parts of the problem -
>> >
>> > http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
>> > is pretty similar to what I have. However, it doesn't deal with
>> > precisely
>> > what I'm having problems with: whitespaces.
>> >
>> > Every possible token in these examples doesn't have whitespace. In my
>> > case,
>> > however, I want a token with spaces (eg: "1 eq 1"). Where should I
>> > include
>> > this so that the correct expression is in the tree leaf? I take it is
>> > should be in the ID lexer, but I'm not quite sure how.
>> > If, on the other hand, I try to go the parser rule route, like:
>> > clause: ID operator ID;
>> > operator: 'eq' | 'neq' | 'gt' | 'lt' ;
>> >
>> > Then I won't have a leaf like "1 eq q", but a node "clause" composed of
>> > 3
>> > child leafs: "1", "eq", "1", which I take it is not appropriate. I can't
>> > just test if the tree node is a clause an combine all children if it is,
>> > can I?
>> >
>> > I appreciate your feedback,
>> >
>> > Miguel
>> >
>> > On Thu, Mar 1, 2012 at 7:30 PM, Bart Kiers <bkiers at gmail.com> wrote:
>> >
>> >> Only that tutorial is based on ANTLR v2.7, whose syntax differs
>> >> considerably from the most recent ANTLR version (3.4).
>> >>
>> >> Regards,
>> >>
>> >> Bart.
>> >>
>> >>
>> >> On Thu, Mar 1, 2012 at 8:12 PM, Kunal Naik <kunal.a.naik at gmail.com>
>> >> wrote:
>> >>
>> >>> Hi Miguel,
>> >>>
>> >>> I think this blog post might be beneficial to you:
>> >>>
>> >>>
>> >>> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
>> >>> In part 4 he explains the process of writing a tree grammar where you
>> >>> can
>> >>> inject your code that can evaluate your expressions.
>> >>>
>> >>> HTH,
>> >>> Kunal
>> >>>
>> >>> On Thu, Mar 1, 2012 at 1:31 PM, Miguel Almeida
>> >>> <migueldealmeida at gmail.com
>> >>> >wrote:
>> >>>
>> >>> > Dear all,
>> >>> >
>> >>> > I need to parse and evaluate expressions which are in the format:
>> >>> > - x eq 1 && y eq 10
>> >>> > - (x lt 10 && x gt 1) || x eq -1
>> >>> >
>> >>> > I have the evaluator part working (ie, I have code that evaluates
>> >>> > all
>> >>> the
>> >>> > gt/lt/eq/neq expressions. All I need is the part that breaks the
>> >>> > clause
>> >>> > into these expressions and then applies the logical and/or's
>> >>> >
>> >>> > I saw a recommendation on ANTLR to do this. My idea is to:
>> >>> > 1) Build a tree
>> >>> > 2) Execute the leafs using my already existing code (eg, replace "1
>> >>> > eq
>> >>> 10"
>> >>> > with false)
>> >>> > 3) Execute a method that then applies the logical operation to get
>> >>> > the
>> >>> > result of the tree
>> >>> >
>> >>> > While I've spend the last couple of days reading things about ANTLR,
>> >>> > I
>> >>> am
>> >>> > kind of lost at the moment: I can't seem to be able to get a tree
>> >>> structure
>> >>> > whose tokens hold either the && and || or the complete expressions.
>> >>> >
>> >>> > My current grammar is [1]. An example test case is [2]
>> >>> > - If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens instead
>> >>> > of
>> >>> the
>> >>> > one token I need
>> >>> > - If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
>> >>> > expression won't work (No viable alternative at input '(' )
>> >>> >
>> >>> >
>> >>> > Could you shed some light on what could be wrong?
>> >>> >
>> >>> > [1]
>> >>> > grammar Logic;
>> >>> >
>> >>> > options {
>> >>> > ?output = AST;
>> >>> > }
>> >>> >
>> >>> > tokens {
>> >>> > ?AND = '&&';
>> >>> > ?OR ?= '||';
>> >>> > }
>> >>> >
>> >>> > // parser/production rules start with a lower case letter
>> >>> > parse
>> >>> > ?: ?expression EOF! ? ?// omit the EOF token
>> >>> > ?;
>> >>> >
>> >>> > expression
>> >>> > ?: ?implication
>> >>> > ?;
>> >>> >
>> >>> > implication
>> >>> > ?: ?or ('->'^ or)* ? ?// make `->` the root
>> >>> > ?;
>> >>> >
>> >>> > or
>> >>> > ?: ?and ('||'^ and)* ? ?// make `||` the root
>> >>> > ?;
>> >>> >
>> >>> > and
>> >>> > ?: ?not ('&&'^ not)* ? ? ?// make `&&` the root
>> >>> > ?;
>> >>> >
>> >>> > not
>> >>> > ?: ?'~'^ atom ? ?// make `~` the root
>> >>> > ?| ?atom
>> >>> > ?;
>> >>> >
>> >>> > atom
>> >>> > ?: ?ID+
>> >>> > ?| ?'('! expression ')'! ? ?// omit both `(` and `)`
>> >>> > ?;
>> >>> >
>> >>> >
>> >>> > // lexer/terminal rules start with an upper case letter
>> >>> > ID
>> >>> > ?:
>> >>> > ? ?(
>> >>> > ? ?'a'..'z'
>> >>> > ? ?| 'A'..'Z'
>> >>> > ? ?| '0'..'9'
>> >>> > ? ?| ' '
>> >>> > ?)+
>> >>> > ?;
>> >>> >
>> >>> > Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};
>> >>> >
>> >>> >
>> >>> >
>> >>> > [2] Example test case
>> >>> > ? ?@Test
>> >>> > ? ?public void complexAndOr() throws RecognitionException{
>> >>> > ? ? ? ?// the expression
>> >>> > ? ? ? ?String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";
>> >>> >
>> >>> > ? ? ? ?// create a lexer & parser
>> >>> > ? ? ? ?LogicLexer lexer = new LogicLexer(new
>> >>> > ANTLRStringStream(src));
>> >>> > ? ? ? ?LogicParser parser = new LogicParser(new
>> >>> CommonTokenStream(lexer));
>> >>> >
>> >>> > ? ? ? ?// invoke the entry point of the parser (the parse() method)
>> >>> > and
>> >>> > get the AST
>> >>> > ? ? ? ?CommonTree tree = (CommonTree)parser.parse().getTree();
>> >>> >
>> >>> > ? ? ? ?assertEquals("||",tree.getText());
>> >>> > ? ? ? ?Tree child1 = tree.getChild(0);
>> >>> > ? ? ? ?assertEquals("&&",or.getText());
>> >>> > ? ? ? ?assertEquals("1 eq 1",child1.getChild(0));
>> >>> > ? ? ? ?assertEquals("2 eq 2",child1.getChild(1));
>> >>> > ? ? ? ?assertEquals("3 eq 3",tree.getChild(1).getText());
>> >>> > ? ?}
>> >>> >
>> >>> > Thank you,
>> >>> >
>> >>> > Miguel
>> >>> >
>> >>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >>> > Unsubscribe:
>> >>> >
>> >>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>> >
>> >>>
>> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> >>> Unsubscribe:
>> >>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >>>
>> >>
>> >>
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From Stefan.Maetje at esd-electronics.com  Fri Mar  2 04:03:05 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Fri, 02 Mar 2012 13:03:05 +0100
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <CACKT26yo=rSpxEpedSBNB3iKgU3SnHO_14iiinc_rP4A_Rx6fg@mail.gmail.com>
	(from danieladacruz@gmail.com on Thu Mar  1 20:13:43 2012)
Message-ID: <1330689785.1944.0@pc-stefanm>

Hi Daniela,

I should not respond to emails on the list after a long workday %-)

I've overseen that you talked about running/debugging the lexer grammer with 
AntlrWorks. If I try to debug I get the same erroneous output as you get. 
Sorry.

To get the grammar through AntlrWorks you may change the grammar as follows:
------------------------------------------------------------------
/*lexer */grammar testRE;

tokens: .+;

ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;
WS      :       (' ' | '\t' | '\n' | '\r' )+
        ;
-------------------------------------------------------------------

Then you can debug it and feed it some input. But you will only be able to see 
the token stream. AntlrWorks doesn't let you see how the lexer walks through 
the input text.

Regards,
	Stefan

Am 01.03.2012 20:13:43 schrieb(en) Daniela da Cruz:
> Hi Stefan,
> 
> I have named the file that contains the lexer grammar as testRE.g. Exactly
> as I do with combined grammars.
> Are you able to run the file attached with success in AntlrWorks?
> 
> thanks
> daniela
> 
> On Thu, Mar 1, 2012 at 18:47, Stefan M?tje <
> Stefan.Maetje at esd-electronics.com> wrote:
> 
> > Hi,
> >
> > it seems to me that you have either the lexer grammar not named properly 
> or
> > perhaps not saved with the same name as it is given in your lexer grammar
> > ("testRE") below.
> >
> > AntlrWorks runs the compiler himself but has given the compiler the name
> > "null.java". The name string internal of AntlrWorks seemed to be a null
> > reference -> null+".java". I would have expected "testRE.java".
> >
> > Same accounts for the error message of the compiler for __Test__.java. Id
> > was
> > missing because of empty lexer name ...
> >
> >
> > Am 01.03.2012 16:08:59 schrieb(en) Daniela da Cruz:
> > > Hi.
> > >
> > > I have been creating a very simple lexer in AntlrWorks but when trying 
> to
> > > run it I got the following errors:
> > >
> > > [15:01:29] javac: file not found:
> > > C:\Users\Utilizador\Desktop\output\null.java
> >
> > Bad file name from null reference?   ^^^^
> >
> > > [15:01:29] Usage: javac <options> <source files>
> > > [15:01:29] use -help for a list of possible options
> > > [15:01:31] C:\Users\Utilizador\Desktop\output\__Test__.java:12:
> > > <identifier> expected
> > > [15:01:31]  g = new (tokens, 49100, null);
> > > [15:01:31]         ^
> >
> > Missing lexer class  ^^^^ name.
> >
> > > [15:01:31] 1 error
> > >
> > > It seems that is looking for the parser file that usually exists on a
> > > combined grammar.
> > > Was anyone able to run a lexer grammar in AntlrWorks?
> > >
> > > My lexer was something like:
> > >
> > > ---------------------------------------------------
> > > lexer grammar testRE;
> > >
> > > ID: '0'..'9'+ ;
> > > ---------------------------------------------------
> >
> > This worked for me in AntlrWorks 1.4.3
> >
> > Regards,
> >        Stefan
> >
> >
> >
> 



From danieladacruz at gmail.com  Fri Mar  2 04:12:34 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Fri, 2 Mar 2012 12:12:34 +0000
Subject: [antlr-interest] Lexer grammar in AntlrWorks 1.4.3
In-Reply-To: <1330689785.1944.0@pc-stefanm>
References: <CACKT26yo=rSpxEpedSBNB3iKgU3SnHO_14iiinc_rP4A_Rx6fg@mail.gmail.com>
	<1330689785.1944.0@pc-stefanm>
Message-ID: <CACKT26y+0=KKSAn6xLzOz9qXw6TdZ9aYjQbPxwzsamrTt=Qr-A@mail.gmail.com>

Thanks Stefan for your reply. I understand what you mean :)

It will help me for sure.

thanks
daniela

On Fri, Mar 2, 2012 at 12:03, Stefan M?tje <
Stefan.Maetje at esd-electronics.com> wrote:

> Hi Daniela,
>
> I should not respond to emails on the list after a long workday %-)
>
> I've overseen that you talked about running/debugging the lexer grammer
> with
> AntlrWorks. If I try to debug I get the same erroneous output as you get.
> Sorry.
>
> To get the grammar through AntlrWorks you may change the grammar as
> follows:
> ------------------------------------------------------------------
> /*lexer */grammar testRE;
>
> tokens: .+;
>
> ID  :   ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>    ;
> WS      :       (' ' | '\t' | '\n' | '\r' )+
>        ;
> -------------------------------------------------------------------
>
> Then you can debug it and feed it some input. But you will only be able to
> see
> the token stream. AntlrWorks doesn't let you see how the lexer walks
> through
> the input text.
>
> Regards,
>        Stefan
>
> Am 01.03.2012 20:13:43 schrieb(en) Daniela da Cruz:
> > Hi Stefan,
> >
> > I have named the file that contains the lexer grammar as testRE.g.
> Exactly
> > as I do with combined grammars.
> > Are you able to run the file attached with success in AntlrWorks?
> >
> > thanks
> > daniela
> >
> > On Thu, Mar 1, 2012 at 18:47, Stefan M?tje <
> > Stefan.Maetje at esd-electronics.com> wrote:
> >
> > > Hi,
> > >
> > > it seems to me that you have either the lexer grammar not named
> properly
> > or
> > > perhaps not saved with the same name as it is given in your lexer
> grammar
> > > ("testRE") below.
> > >
> > > AntlrWorks runs the compiler himself but has given the compiler the
> name
> > > "null.java". The name string internal of AntlrWorks seemed to be a null
> > > reference -> null+".java". I would have expected "testRE.java".
> > >
> > > Same accounts for the error message of the compiler for __Test__.java.
> Id
> > > was
> > > missing because of empty lexer name ...
> > >
> > >
> > > Am 01.03.2012 16:08:59 schrieb(en) Daniela da Cruz:
> > > > Hi.
> > > >
> > > > I have been creating a very simple lexer in AntlrWorks but when
> trying
> > to
> > > > run it I got the following errors:
> > > >
> > > > [15:01:29] javac: file not found:
> > > > C:\Users\Utilizador\Desktop\output\null.java
> > >
> > > Bad file name from null reference?   ^^^^
> > >
> > > > [15:01:29] Usage: javac <options> <source files>
> > > > [15:01:29] use -help for a list of possible options
> > > > [15:01:31] C:\Users\Utilizador\Desktop\output\__Test__.java:12:
> > > > <identifier> expected
> > > > [15:01:31]  g = new (tokens, 49100, null);
> > > > [15:01:31]         ^
> > >
> > > Missing lexer class  ^^^^ name.
> > >
> > > > [15:01:31] 1 error
> > > >
> > > > It seems that is looking for the parser file that usually exists on a
> > > > combined grammar.
> > > > Was anyone able to run a lexer grammar in AntlrWorks?
> > > >
> > > > My lexer was something like:
> > > >
> > > > ---------------------------------------------------
> > > > lexer grammar testRE;
> > > >
> > > > ID: '0'..'9'+ ;
> > > > ---------------------------------------------------
> > >
> > > This worked for me in AntlrWorks 1.4.3
> > >
> > > Regards,
> > >        Stefan
> > >
> > >
> > >
> >
>
>
>

From migueldealmeida at gmail.com  Fri Mar  2 11:34:56 2012
From: migueldealmeida at gmail.com (Miguel Almeida)
Date: Fri, 2 Mar 2012 19:34:56 +0000
Subject: [antlr-interest] Using antlr to retreive logical expressions
In-Reply-To: <CAON31m5-TiPD9wXYK8gK83jPxqj0oQS8xdVLT7oTFB-FHaU1=g@mail.gmail.com>
References: <CA+AeW32pgW6Q804k2k-=KGepTKZsYERbVD_gKu_i2NVc6JoQrg@mail.gmail.com>
	<CAMas4U9f94US4H4jp31xe6=YPBu_nONQB4+Dwg6jDCx3P2DVdA@mail.gmail.com>
	<CAOrgODYgdKwTw8Hu4R0=T5Y9GLgVSozBaZhSjMZUS-soNhcQ0w@mail.gmail.com>
	<CA+AeW33Orda0jGPKg65UC3-u-GsNtcBRjDHOdG_xYdXrFYv_3Q@mail.gmail.com>
	<CAON31m6LowLFnJWKQxW0GosbP5XbcTh+P8+-OhQ5F15hNEnfgA@mail.gmail.com>
	<CA+AeW33=LvQPxJTN3j7cn9yWcvqRiAThBrYxTcX+4exNQJE7Lw@mail.gmail.com>
	<CAON31m5-TiPD9wXYK8gK83jPxqj0oQS8xdVLT7oTFB-FHaU1=g@mail.gmail.com>
Message-ID: <CA+AeW30sA7+S0k5L7A3ecu1upFgSuSo_vaP_oj6x2z2LfcGFTw@mail.gmail.com>

For those interested, I made some improvements in my grammar file [1].

Current limitations:
- only works with &&/||, not AND/OR (not very problematic)
- you can't have spaces between the parenthesis and the &&/|| (I solve that
by replacing " (" with ")" and ") " with ")" in the source String before
feeding the lexer)



[1] My grammar file
grammar Logic;

options {
  output = AST;
}

tokens {
  AND = '&&';
  OR  = '||';
  NOT = '~';
}

// parser/production rules start with a lower case letter
parse
  :  expression EOF!    // omit the EOF token
  ;

expression
  :  or
  ;

or
  :  and (OR^ and)*    // make `||` the root
  ;

and
  :  not (AND^ not)*      // make `&&` the root
  ;

not
  :  NOT^ atom    // make `~` the root
  |  atom
  ;

atom
  :  ID
  |  '('! expression ')'!    // omit both `(` and `)`
  ;

// lexer/terminal rules start with an upper case letter
ID
  :
    (
    'a'..'z'
    | 'A'..'Z'
    | '0'..'9' | ' '
    | SYMBOL
  )+
  ;

SYMBOL
  :
    ('+'|'-'|'*'|'/'|'_')
 ;

//Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};


On Fri, Mar 2, 2012 at 11:58 AM, Martijn Reuvers
<martijn.reuvers at gmail.com>wrote:

> Hello Miguel,
>
> Ok, well I am not sure if that is possible at once in one single parse
> as you want to treat the space as either separator for tokens, but for
> one token you don't want that (the complete expression), maybe others
> know this?
>
> The tree visitor could still combine the expression for you, so you
> can evaluate it the way you want (same pattern but instead just
> combining into a single string).
>
> What you could do perhaps too is either rewrite the ast, and combine
> the expression into a single node (this could be done by either tree
> grammars I guess, or just manually when visiting) or you could also do
> it in the parser directly, though you may not want to use the ast
> feature then and build a tree yourself (directly).
>
> E.g. quick sample parser below the mail (this just combines the text,
> you probably want to create a node with the text).
>
> Regards,
> Martijn
>
> grammar test;
>
> @header {
>  package test;
>
>  import java.util.List;
>  import java.util.ArrayList;
> }
>
> @members {
>
>  final List list = new ArrayList();
>
> }
>
> r_start :       x=INT EQ y=INT { list.add($x.text + $EQ.text + $y.text);
> System.out.println(list); };
>
> EQ      :       'eq';
>
> INT     :       ('0'..'9')+;
>
> WS      :       (' ' | '\t' | '\r' | '\n')+ { skip(); };
>
>
> On Fri, Mar 2, 2012 at 12:22 PM, Miguel Almeida
> <migueldealmeida at gmail.com> wrote:
> > Hi Martin,
> >
> > That's the thing - I don't think I want that. I already have the code
> that
> > evaluates my expressions given a String with the clause (eg: given "1 eq
> 1"
> > it returns true, "2000-01-01 gt 2011-12-12" evaluates to false).
> >
> > That is why I'd like the token to be the complete expression and not
> >   eq
> > 1      5
> >
> > I'm comfortable with the tree visitor/walker. What I do need is the tree
> to
> > be built like
> >
> > http://i286.photobucket.com/albums/ll86/wild_oscar/get_preview.png
> >
> >
> >
> >
> > On Fri, Mar 2, 2012 at 11:09 AM, Martijn Reuvers <
> martijn.reuvers at gmail.com>
> > wrote:
> >>
> >> Hello Miguel,
> >>
> >> You probably do want an ast like (the last thing you mentioned):
> >>
> >>   eq
> >> 1      5
> >>
> >> These are relatively easy to evaluate, some pseudo code when using a
> >> treevisitor/walker:
> >>
> >> function walkEQ(..) {
> >>  walk(nodeWith1)
> >>  walk(nodeWith5)
> >>
> >>  // Then compare the the results of these 2 nodes and do with the
> >> result what you want (you can bind the result e.g. inside the node
> >> directly or work with return values, there's multiple ways to Rome
> >> after all).
> >> }
> >>
> >> Martijn
> >>
> >> On Fri, Mar 2, 2012 at 11:32 AM, Miguel Almeida
> >> <migueldealmeida at gmail.com> wrote:
> >> > Thank you for your answers,
> >> >
> >> > Both links touch parts of the problem -
> >> >
> >> >
> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
> >> > is pretty similar to what I have. However, it doesn't deal with
> >> > precisely
> >> > what I'm having problems with: whitespaces.
> >> >
> >> > Every possible token in these examples doesn't have whitespace. In my
> >> > case,
> >> > however, I want a token with spaces (eg: "1 eq 1"). Where should I
> >> > include
> >> > this so that the correct expression is in the tree leaf? I take it is
> >> > should be in the ID lexer, but I'm not quite sure how.
> >> > If, on the other hand, I try to go the parser rule route, like:
> >> > clause: ID operator ID;
> >> > operator: 'eq' | 'neq' | 'gt' | 'lt' ;
> >> >
> >> > Then I won't have a leaf like "1 eq q", but a node "clause" composed
> of
> >> > 3
> >> > child leafs: "1", "eq", "1", which I take it is not appropriate. I
> can't
> >> > just test if the tree node is a clause an combine all children if it
> is,
> >> > can I?
> >> >
> >> > I appreciate your feedback,
> >> >
> >> > Miguel
> >> >
> >> > On Thu, Mar 1, 2012 at 7:30 PM, Bart Kiers <bkiers at gmail.com> wrote:
> >> >
> >> >> Only that tutorial is based on ANTLR v2.7, whose syntax differs
> >> >> considerably from the most recent ANTLR version (3.4).
> >> >>
> >> >> Regards,
> >> >>
> >> >> Bart.
> >> >>
> >> >>
> >> >> On Thu, Mar 1, 2012 at 8:12 PM, Kunal Naik <kunal.a.naik at gmail.com>
> >> >> wrote:
> >> >>
> >> >>> Hi Miguel,
> >> >>>
> >> >>> I think this blog post might be beneficial to you:
> >> >>>
> >> >>>
> >> >>>
> http://www.alittlemadness.com/2006/06/05/antlr-by-example-part-1-the-language/
> >> >>> In part 4 he explains the process of writing a tree grammar where
> you
> >> >>> can
> >> >>> inject your code that can evaluate your expressions.
> >> >>>
> >> >>> HTH,
> >> >>> Kunal
> >> >>>
> >> >>> On Thu, Mar 1, 2012 at 1:31 PM, Miguel Almeida
> >> >>> <migueldealmeida at gmail.com
> >> >>> >wrote:
> >> >>>
> >> >>> > Dear all,
> >> >>> >
> >> >>> > I need to parse and evaluate expressions which are in the format:
> >> >>> > - x eq 1 && y eq 10
> >> >>> > - (x lt 10 && x gt 1) || x eq -1
> >> >>> >
> >> >>> > I have the evaluator part working (ie, I have code that evaluates
> >> >>> > all
> >> >>> the
> >> >>> > gt/lt/eq/neq expressions. All I need is the part that breaks the
> >> >>> > clause
> >> >>> > into these expressions and then applies the logical and/or's
> >> >>> >
> >> >>> > I saw a recommendation on ANTLR to do this. My idea is to:
> >> >>> > 1) Build a tree
> >> >>> > 2) Execute the leafs using my already existing code (eg, replace
> "1
> >> >>> > eq
> >> >>> 10"
> >> >>> > with false)
> >> >>> > 3) Execute a method that then applies the logical operation to get
> >> >>> > the
> >> >>> > result of the tree
> >> >>> >
> >> >>> > While I've spend the last couple of days reading things about
> ANTLR,
> >> >>> > I
> >> >>> am
> >> >>> > kind of lost at the moment: I can't seem to be able to get a tree
> >> >>> structure
> >> >>> > whose tokens hold either the && and || or the complete
> expressions.
> >> >>> >
> >> >>> > My current grammar is [1]. An example test case is [2]
> >> >>> > - If I omit the | ' ' from the ID, "x eq 1" will be 3 tokens
> instead
> >> >>> > of
> >> >>> the
> >> >>> > one token I need
> >> >>> > - If I leave it there, then for example this "1 eq 1 && (bb eq 1)"
> >> >>> > expression won't work (No viable alternative at input '(' )
> >> >>> >
> >> >>> >
> >> >>> > Could you shed some light on what could be wrong?
> >> >>> >
> >> >>> > [1]
> >> >>> > grammar Logic;
> >> >>> >
> >> >>> > options {
> >> >>> >  output = AST;
> >> >>> > }
> >> >>> >
> >> >>> > tokens {
> >> >>> >  AND = '&&';
> >> >>> >  OR  = '||';
> >> >>> > }
> >> >>> >
> >> >>> > // parser/production rules start with a lower case letter
> >> >>> > parse
> >> >>> >  :  expression EOF!    // omit the EOF token
> >> >>> >  ;
> >> >>> >
> >> >>> > expression
> >> >>> >  :  implication
> >> >>> >  ;
> >> >>> >
> >> >>> > implication
> >> >>> >  :  or ('->'^ or)*    // make `->` the root
> >> >>> >  ;
> >> >>> >
> >> >>> > or
> >> >>> >  :  and ('||'^ and)*    // make `||` the root
> >> >>> >  ;
> >> >>> >
> >> >>> > and
> >> >>> >  :  not ('&&'^ not)*      // make `&&` the root
> >> >>> >  ;
> >> >>> >
> >> >>> > not
> >> >>> >  :  '~'^ atom    // make `~` the root
> >> >>> >  |  atom
> >> >>> >  ;
> >> >>> >
> >> >>> > atom
> >> >>> >  :  ID+
> >> >>> >  |  '('! expression ')'!    // omit both `(` and `)`
> >> >>> >  ;
> >> >>> >
> >> >>> >
> >> >>> > // lexer/terminal rules start with an upper case letter
> >> >>> > ID
> >> >>> >  :
> >> >>> >    (
> >> >>> >    'a'..'z'
> >> >>> >    | 'A'..'Z'
> >> >>> >    | '0'..'9'
> >> >>> >    | ' '
> >> >>> >  )+
> >> >>> >  ;
> >> >>> >
> >> >>> > Space : (' ' | '\t' | '\r' | '\n')+ {$channel=HIDDEN;};
> >> >>> >
> >> >>> >
> >> >>> >
> >> >>> > [2] Example test case
> >> >>> >    @Test
> >> >>> >    public void complexAndOr() throws RecognitionException{
> >> >>> >        // the expression
> >> >>> >        String src = "(1 eq 1 && 2 eq 2) || 3 eq 3";
> >> >>> >
> >> >>> >        // create a lexer & parser
> >> >>> >        LogicLexer lexer = new LogicLexer(new
> >> >>> > ANTLRStringStream(src));
> >> >>> >        LogicParser parser = new LogicParser(new
> >> >>> CommonTokenStream(lexer));
> >> >>> >
> >> >>> >        // invoke the entry point of the parser (the parse()
> method)
> >> >>> > and
> >> >>> > get the AST
> >> >>> >        CommonTree tree = (CommonTree)parser.parse().getTree();
> >> >>> >
> >> >>> >        assertEquals("||",tree.getText());
> >> >>> >        Tree child1 = tree.getChild(0);
> >> >>> >        assertEquals("&&",or.getText());
> >> >>> >        assertEquals("1 eq 1",child1.getChild(0));
> >> >>> >        assertEquals("2 eq 2",child1.getChild(1));
> >> >>> >        assertEquals("3 eq 3",tree.getChild(1).getText());
> >> >>> >    }
> >> >>> >
> >> >>> > Thank you,
> >> >>> >
> >> >>> > Miguel
> >> >>> >
> >> >>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> >>> > Unsubscribe:
> >> >>> >
> >> >>> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >> >>> >
> >> >>>
> >> >>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> >>> Unsubscribe:
> >> >>>
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >> >>>
> >> >>
> >> >>
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
> >
>

From mike at 7f.com  Fri Mar  2 18:37:05 2012
From: mike at 7f.com (Michael Roberts)
Date: Fri, 2 Mar 2012 18:37:05 -0800
Subject: [antlr-interest] simple grammar question
Message-ID: <CAJ4XrpWYyF0gWNDzG263_+_k+OP1+ft7_fDcV9zEwoRp9Dg8uw@mail.gmail.com>

Hi folks.

I'm in the process of learning antlr (I just ordered Terrance's books), but
there something I am missing here.  The below compiles fine using
AntlrWorks, but when I feed it:

foo/aa/bb

I get a a MissingTokenException (see attached bitmap), after it's matched
an identifier and a /.

grammar JLG2;

options {
   backtrack=true;
   memoize=true;
}

@header {
package org.veve.reflect.interpreter.output;
}

@lexer::header {
package org.veve.reflect.interpreter.output;
}

compilationUnit : relativePath;

identifier : IdentifierStart IdentifierPart* ;
relativePath : identifier (SLASH identifier)* ;

SLASH : '/';

fragment IdentifierPart
    :
    'a'..'z' | 'A'..'Z' | '_' | '0'..'9'
    ;

fragment IdentifierStart
    :
    'a'..'z' | 'A'..'Z' | '_'
    ;

My expectation there was that identifier would match an alphanumeric
string, and that the rule for relativePath would let me string such
identifiers together with / in between.  However, I'm clearly missing
something obvious.  Thanks in advance.

MR
-------------- next part --------------
A non-text attachment was scrubbed...
Name: glg2.jpg
Type: image/jpeg
Size: 8172 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120302/44d8a1cc/attachment.jpg 

From jbb at acm.org  Fri Mar  2 18:55:44 2012
From: jbb at acm.org (John B. Brodie)
Date: Fri, 02 Mar 2012 21:55:44 -0500
Subject: [antlr-interest] simple grammar question
In-Reply-To: <CAJ4XrpWYyF0gWNDzG263_+_k+OP1+ft7_fDcV9zEwoRp9Dg8uw@mail.gmail.com>
References: <CAJ4XrpWYyF0gWNDzG263_+_k+OP1+ft7_fDcV9zEwoRp9Dg8uw@mail.gmail.com>
Message-ID: <4F518830.9000506@acm.org>

Greetings!

On 03/02/2012 09:37 PM, Michael Roberts wrote:
> Hi folks.
>
> I'm in the process of learning antlr (I just ordered Terrance's books), but
> there something I am missing here.  The below compiles fine using
> AntlrWorks, but when I feed it:
>
> foo/aa/bb
>
> I get a a MissingTokenException (see attached bitmap), after it's matched
> an identifier and a /.

I do not use ANTLRWorks so this assessment may be bogus, but...

Do you see that the "MissingTokenException" node is a child of "identifier"?

I believe that ANTLRWorks is trying to tell you  that "identifier" was 
not found.


In any case. Regardless of how to analyze the bitmap.

Because your IdentifierPart and IdentifierStart Lexer rules are 
fragments, your Parser will never see them (that is the intent of 
fragment lexer rules; e.g. define a portion, fragment, of a token but 
keep it hidden from the parser). So your identifier rule, as written, is 
useless; e.g. will never recognize anything.

I would simply (with out any deep analysis of your example) suggest that 
you turn your `identifier` Parser rule into a Lexer rule by capitalizing 
it (identifier ==> Identifier).


As an aside, I would avoid the backtrack=true; option until and unless 
you **really** understand what that will do to your parser's performance 
(but that is, perhaps, just my own personal bias ;-).

Hope this helps...
    -jbb

>
> grammar JLG2;
>
> options {
>     backtrack=true;
>     memoize=true;
> }
>
> @header {
> package org.veve.reflect.interpreter.output;
> }
>
> @lexer::header {
> package org.veve.reflect.interpreter.output;
> }
>
> compilationUnit : relativePath;
>
> identifier : IdentifierStart IdentifierPart* ;
> relativePath : identifier (SLASH identifier)* ;
>
> SLASH : '/';
>
> fragment IdentifierPart
>      :
>      'a'..'z' | 'A'..'Z' | '_' | '0'..'9'
>      ;
>
> fragment IdentifierStart
>      :
>      'a'..'z' | 'A'..'Z' | '_'
>      ;
>
> My expectation there was that identifier would match an alphanumeric
> string, and that the rule for relativePath would let me string such
> identifiers together with / in between.  However, I'm clearly missing
> something obvious.  Thanks in advance.
>
> MR
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From mike at 7f.com  Fri Mar  2 19:16:44 2012
From: mike at 7f.com (Michael Roberts)
Date: Fri, 2 Mar 2012 19:16:44 -0800
Subject: [antlr-interest] simple grammar question
In-Reply-To: <4F518830.9000506@acm.org>
References: <CAJ4XrpWYyF0gWNDzG263_+_k+OP1+ft7_fDcV9zEwoRp9Dg8uw@mail.gmail.com>
	<4F518830.9000506@acm.org>
Message-ID: <CAJ4XrpU8fCicevGWoKdEt93BkFDujt1AOU53kk-CKm9o606v7g@mail.gmail.com>

yep, that fixed it.  Everything else worked fine.

Thanks for the clear explanation - now I understand antlr fragments :)

MR

On Fri, Mar 2, 2012 at 6:55 PM, John B. Brodie <jbb at acm.org> wrote:

>  Greetings!
>
> On 03/02/2012 09:37 PM, Michael Roberts wrote:
>
> Hi folks.
>
> I'm in the process of learning antlr (I just ordered Terrance's books), but
> there something I am missing here.  The below compiles fine using
> AntlrWorks, but when I feed it:
>
> foo/aa/bb
>
> I get a a MissingTokenException (see attached bitmap), after it's matched
> an identifier and a /.
>
>
> I do not use ANTLRWorks so this assessment may be bogus, but...
>
> Do you see that the "MissingTokenException" node is a child of
> "identifier"?
>
> I believe that ANTLRWorks is trying to tell you  that "identifier" was not
> found.
>
>
> In any case. Regardless of how to analyze the bitmap.
>
> Because your IdentifierPart and IdentifierStart Lexer rules are fragments,
> your Parser will never see them (that is the intent of fragment lexer
> rules; e.g. define a portion, fragment, of a token but keep it hidden from
> the parser). So your identifier rule, as written, is useless; e.g. will
> never recognize anything.
>
> I would simply (with out any deep analysis of your example) suggest that
> you turn your `identifier` Parser rule into a Lexer rule by capitalizing it
> (identifier ==> Identifier).
>
>
> As an aside, I would avoid the backtrack=true; option until and unless you
> **really** understand what that will do to your parser's performance (but
> that is, perhaps, just my own personal bias ;-).
>
> Hope this helps...
>    -jbb
>
>  grammar JLG2;
>
> options {
>    backtrack=true;
>    memoize=true;
> }
>
> @header {
> package org.veve.reflect.interpreter.output;
> }
>
> @lexer::header {
> package org.veve.reflect.interpreter.output;
> }
>
> compilationUnit : relativePath;
>
> identifier : IdentifierStart IdentifierPart* ;
> relativePath : identifier (SLASH identifier)* ;
>
> SLASH : '/';
>
> fragment IdentifierPart
>     :
>     'a'..'z' | 'A'..'Z' | '_' | '0'..'9'
>     ;
>
> fragment IdentifierStart
>     :
>     'a'..'z' | 'A'..'Z' | '_'
>     ;
>
> My expectation there was that identifier would match an alphanumeric
> string, and that the rule for relativePath would let me string such
> identifiers together with / in between.  However, I'm clearly missing
> something obvious.  Thanks in advance.
>
> MR
>
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>

From nukethenuke at yahoo.com  Sat Mar  3 14:26:09 2012
From: nukethenuke at yahoo.com (Borat Borat)
Date: Sat, 3 Mar 2012 14:26:09 -0800 (PST)
Subject: [antlr-interest] whats wrong in this very very simple grammar ?
Message-ID: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>

Hi,

I have very simple grammar, and I'm using antlr 3.3:

rule: stat EOF ;
stat: ID;
fragment LETTER : ('a'..'z' | 'A'..'Z') ;
ID: LETTER* ;
WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;

And test rig is :
ANTLRInputStream input = new ANTLRInputStream(System.in);
TestLexer lexer = new TestLexer(input);
CommonTokenStream tokens = new CommonTokenStream(lexer);
TestParser parser = new TestParser(tokens);
parser.rule();


Now, the problem, when I input, for example, abc and hit Ctrl + Z, I get error:
line 1:0 mismatched input '<EOF>' expecting ID

However, if I type abc for input and then hit enter and then press
Ctrl + Z everything executes as expected.

I was wondering if someone could explain me what is exactly happening here,
I fail to see why first scenario fails ? 

Thanks


From jimi at temporal-wave.com  Sat Mar  3 14:28:38 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sat, 3 Mar 2012 14:28:38 -0800
Subject: [antlr-interest] whats wrong in this very very simple grammar ?
In-Reply-To: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>
References: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>
Message-ID: <b6d5b37f62323ab4575fe38ba9303cf1@mail.gmail.com>

Your ID matches an empty string so it will match forever and consume
nothing. You need + and not *

This is an FAQ, and please use the antlr.markmail.org search engine. You
can also trace your parser with the Java debugger.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Borat Borat
> Sent: Saturday, March 03, 2012 2:26 PM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] whats wrong in this very very simple grammar
> ?
>
> Hi,
>
> I have very simple grammar, and I'm using antlr 3.3:
>
> rule: stat EOF ;
> stat: ID;
> fragment LETTER : ('a'..'z' | 'A'..'Z') ;
> ID: LETTER* ;
> WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;
>
> And test rig is :
> ANTLRInputStream input = new ANTLRInputStream(System.in); TestLexer
> lexer = new TestLexer(input); CommonTokenStream tokens = new
> CommonTokenStream(lexer); TestParser parser = new TestParser(tokens);
> parser.rule();
>
>
> Now, the problem, when I input, for example, abc and hit Ctrl + Z, I
> get error:
> line 1:0 mismatched input '<EOF>' expecting ID
>
> However, if I type abc for input and then hit enter and then press Ctrl
> + Z everything executes as expected.
>
> I was wondering if someone could explain me what is exactly happening
> here, I fail to see why first scenario fails ?
>
> Thanks
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From gokul007 at gmail.com  Sun Mar  4 13:13:06 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 5 Mar 2012 05:13:06 +0800
Subject: [antlr-interest] whats wrong in this very very simple grammar ?
In-Reply-To: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>
References: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>
Message-ID: <CAHMh4-bsd_mHn4zCuxDBFG+3+PrVLJ3Y=5frJD-9SaGkBUyikw@mail.gmail.com>

Keep it as a rule of thumb to make the Lexer simple. This should work.

rule: stat EOF ;
stat: ID*;
fragment LETTER : ('a'..'z' | 'A'..'Z') ;
ID: LETTER ;
WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;

Thanks,
Gokul.

On Sun, Mar 4, 2012 at 6:26 AM, Borat Borat <nukethenuke at yahoo.com> wrote:

> Hi,
>
> I have very simple grammar, and I'm using antlr 3.3:
>
> rule: stat EOF ;
> stat: ID;
> fragment LETTER : ('a'..'z' | 'A'..'Z') ;
> ID: LETTER* ;
> WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;
>
> And test rig is :
> ANTLRInputStream input = new ANTLRInputStream(System.in);
> TestLexer lexer = new TestLexer(input);
> CommonTokenStream tokens = new CommonTokenStream(lexer);
> TestParser parser = new TestParser(tokens);
> parser.rule();
>
>
> Now, the problem, when I input, for example, abc and hit Ctrl + Z, I get
> error:
> line 1:0 mismatched input '<EOF>' expecting ID
>
> However, if I type abc for input and then hit enter and then press
> Ctrl + Z everything executes as expected.
>
> I was wondering if someone could explain me what is exactly happening here,
> I fail to see why first scenario fails ?
>
> Thanks
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From jimi at temporal-wave.com  Sun Mar  4 14:57:07 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 4 Mar 2012 14:57:07 -0800
Subject: [antlr-interest] whats wrong in this very very simple grammar ?
In-Reply-To: <CAHMh4-bsd_mHn4zCuxDBFG+3+PrVLJ3Y=5frJD-9SaGkBUyikw@mail.gmail.com>
References: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>
	<CAHMh4-bsd_mHn4zCuxDBFG+3+PrVLJ3Y=5frJD-9SaGkBUyikw@mail.gmail.com>
Message-ID: <D676D84C-55C8-4A52-A640-AA6FA3EF2277@temporal-wave.com>

Refer to my original reply. This will tokenism every letter. You just need + and not * in ID. 

Jim 

On Mar 4, 2012, at 13:13, Gokulakannan Somasundaram <gokul007 at gmail.com> wrote:

> Keep it as a rule of thumb to make the Lexer simple. This should work.
> 
> rule: stat EOF ;
> stat: ID*;
> fragment LETTER : ('a'..'z' | 'A'..'Z') ;
> ID: LETTER ;
> WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;
> 
> Thanks,
> Gokul.
> 
> On Sun, Mar 4, 2012 at 6:26 AM, Borat Borat <nukethenuke at yahoo.com> wrote:
> 
>> Hi,
>> 
>> I have very simple grammar, and I'm using antlr 3.3:
>> 
>> rule: stat EOF ;
>> stat: ID;
>> fragment LETTER : ('a'..'z' | 'A'..'Z') ;
>> ID: LETTER* ;
>> WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;
>> 
>> And test rig is :
>> ANTLRInputStream input = new ANTLRInputStream(System.in);
>> TestLexer lexer = new TestLexer(input);
>> CommonTokenStream tokens = new CommonTokenStream(lexer);
>> TestParser parser = new TestParser(tokens);
>> parser.rule();
>> 
>> 
>> Now, the problem, when I input, for example, abc and hit Ctrl + Z, I get
>> error:
>> line 1:0 mismatched input '<EOF>' expecting ID
>> 
>> However, if I type abc for input and then hit enter and then press
>> Ctrl + Z everything executes as expected.
>> 
>> I was wondering if someone could explain me what is exactly happening here,
>> I fail to see why first scenario fails ?
>> 
>> Thanks
>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From gokul007 at gmail.com  Sun Mar  4 16:04:51 2012
From: gokul007 at gmail.com (Gokulakannan Somasundaram)
Date: Mon, 5 Mar 2012 08:04:51 +0800
Subject: [antlr-interest] whats wrong in this very very simple grammar ?
In-Reply-To: <D676D84C-55C8-4A52-A640-AA6FA3EF2277@temporal-wave.com>
References: <1330813569.66217.YahooMailNeo@web125201.mail.ne1.yahoo.com>
	<CAHMh4-bsd_mHn4zCuxDBFG+3+PrVLJ3Y=5frJD-9SaGkBUyikw@mail.gmail.com>
	<D676D84C-55C8-4A52-A640-AA6FA3EF2277@temporal-wave.com>
Message-ID: <CAHMh4-aVBJRFhNbjQPCQU8zG0zZO=zCizYE57w-HhqKdmWhSZA@mail.gmail.com>

As Jim has pointed out, the better performing solution would be

 rule: stat? EOF ;
 stat: ID;
 fragment LETTER : ('a'..'z' | 'A'..'Z') ;
 ID: LETTER+ ;
 WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;

This would reduce the number of tokens created.

Gokul.

On Mon, Mar 5, 2012 at 6:57 AM, Jim Idle <jimi at temporal-wave.com> wrote:

> Refer to my original reply. This will tokenism every letter. You just need
> + and not * in ID.
>
> Jim
>
> On Mar 4, 2012, at 13:13, Gokulakannan Somasundaram <gokul007 at gmail.com>
> wrote:
>
> > Keep it as a rule of thumb to make the Lexer simple. This should work.
> >
> > rule: stat EOF ;
> > stat: ID*;
> > fragment LETTER : ('a'..'z' | 'A'..'Z') ;
> > ID: LETTER ;
> > WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;
> >
> > Thanks,
> > Gokul.
> >
> > On Sun, Mar 4, 2012 at 6:26 AM, Borat Borat <nukethenuke at yahoo.com>
> wrote:
> >
> >> Hi,
> >>
> >> I have very simple grammar, and I'm using antlr 3.3:
> >>
> >> rule: stat EOF ;
> >> stat: ID;
> >> fragment LETTER : ('a'..'z' | 'A'..'Z') ;
> >> ID: LETTER* ;
> >> WS: (' ' | '\t' | '\n' | '\r' | '\f')+ {$channel = HIDDEN;} ;
> >>
> >> And test rig is :
> >> ANTLRInputStream input = new ANTLRInputStream(System.in);
> >> TestLexer lexer = new TestLexer(input);
> >> CommonTokenStream tokens = new CommonTokenStream(lexer);
> >> TestParser parser = new TestParser(tokens);
> >> parser.rule();
> >>
> >>
> >> Now, the problem, when I input, for example, abc and hit Ctrl + Z, I get
> >> error:
> >> line 1:0 mismatched input '<EOF>' expecting ID
> >>
> >> However, if I type abc for input and then hit enter and then press
> >> Ctrl + Z everything executes as expected.
> >>
> >> I was wondering if someone could explain me what is exactly happening
> here,
> >> I fail to see why first scenario fails ?
> >>
> >> Thanks
> >>
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From darren at darrenduncan.net  Sun Mar  4 21:21:23 2012
From: darren at darrenduncan.net (Darren Duncan)
Date: Sun, 04 Mar 2012 21:21:23 -0800
Subject: [antlr-interest] token precedence by decl order - or tutorial
	ambiguous
Message-ID: <4F544D53.7020905@darrenduncan.net>

Hello,

To briefly introduce myself, I am a new user of ANTLR and intend to use it to 
help me develop grammars and parsers for my new database-savvy programming 
language Muldis D; https://github.com/muldis/ is where all the related stuff is.

For the main point of this post ...

The tutorial at 
http://www.antlr.org/wiki/display/ANTLR3/Quick+Starter+on+Parser+Grammars+-+No+Past+Experience+Required 
is useful but I found at least one part of it to be ambiguous and I'm hoping you 
can help me clear my understanding, and maybe the tutorial itself can be cleared 
up too.

The relevant portion of the tutorial is here between the pair of === lines:

==========

Another point of interest is the order of the token declaration. The earlier a 
token is defined, the higher is the precedence if a certain input can be matched 
by two or more tokens. This means that using the tokens command to define 
keywords will match those keywords instead a more general ID rule. The following 
code snippet provides an example:

   start
    :  (WS |  FOO)* EOF
    ;
   WS : (options {greedy=false;} : ' '+) ;
   FOO : ~('x' | 'y' | 'z')+ ;

If you give an input containing only spaces then WS will be chosen. Should one 
change the rules order that FOO comes before WS then FOO will be chosen. Any 
input containing other characters than spaces will match FOO, even if two or 
more WS and FOO tokens could be produced. The lexer rules will match greedily 
the maximum of applicable characters.

==========

Now the ambiguity I see concerns the "order of the token declaration" part.  I 
don't know whether it is referring to the declared order in the line containing 
"(WS|FOO)" or the order of the 2 lines "WS : ..." vs "FOO : ...".  This is 
because the order is [WS,FOO] in both places.

If the tutorial could be updated to, say, either of these, it would be much more 
clear:

1:

   start
    :  (FOO |  WS)* EOF
    ;
   WS : (options {greedy=false;} : ' '+) ;
   FOO : ~('x' | 'y' | 'z')+ ;

2:

   start
    :  (WS |  FOO)* EOF
    ;
   FOO : ~('x' | 'y' | 'z')+ ;
   WS : (options {greedy=false;} : ' '+) ;

So, bottom line, between #1 and #2 here, which example would have WS taking 
higher precedence, and which example would have FOO taking higher precedence?

Thank you in advance for your help.

-- Darren Duncan

From martijn.reuvers at gmail.com  Sun Mar  4 21:54:23 2012
From: martijn.reuvers at gmail.com (Martijn Reuvers)
Date: Mon, 5 Mar 2012 06:54:23 +0100
Subject: [antlr-interest] Iteration and token comparison?
In-Reply-To: <9B4325C41059734A98D713599A1E0FD7324E3F83@SN2PRD0202MB140.namprd02.prod.outlook.com>
References: <9B4325C41059734A98D713599A1E0FD7324DB818@SN2PRD0202MB140.namprd02.prod.outlook.com>
	<CAON31m4nQy0wx77N83jn17NAsAJGXE5Dx_42D5SZx5Yxs4gkTA@mail.gmail.com>
	<9B4325C41059734A98D713599A1E0FD7324E3F83@SN2PRD0202MB140.namprd02.prod.outlook.com>
Message-ID: <CAON31m7k2q=CR-A56N83EaKT8bXqNtU9L3oYHaJ=4ermwM_hOQ@mail.gmail.com>

For actions: http://www.antlr.org/wiki/display/ANTLR3/Special+symbols+in+actions
 generally they are between { } like the example given before.

I am not sure what you mean with min() and max()? If they are parser
rules you probably do actions in these rules (depending on what you
need).

Martijn

On Sat, Mar 3, 2012 at 12:02 AM, Jones, Keith <kpj1 at wustl.edu> wrote:
> Thanks Martijn.
>
> 1) I've decided to go with doing it in the actions portion, but the problem is I don't really know the syntax. I haven't had much luck finding anything about it online, though.
>
> 2) But min() and max() are parser rules, wouldn't their code all under parser actions?
>
> -Keith
> ________________________________________
> From: Martijn Reuvers [martijn.reuvers at gmail.com]
> Sent: Monday, February 27, 2012 3:10 PM
> To: Jones, Keith
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Iteration and token comparison?
>
> Hello Keith,
>
> It can do a lot (write custom languages, code generation, interpreters
> etc). Go to antlr.org and read the wiki, read the get started etc.. to
> get an idea, or buy one of the books suggested there (I'd personally
> recommend the 'Language Implementation Patterns' book).
>
> 1) You can do that for example within 'actions' or do it when
> evaluating an AST, both approaches have benefits/drawbacks, again see
> wiki for these 2 terms
> 2) No, you usually do that later either in the parser's actions or
> again when evaluating the ast where you apply such logic.
>
> Regards,
> Martijn
>
>
>
> On Mon, Feb 27, 2012 at 6:23 AM, Jones, Keith <kpj1 at wustl.edu> wrote:
>> Hello,
>>
>> I'm new to ANTLR and I'm still trying to get a feel for exactly what it can do. There's two things I need to do with it, but I'm not sure how and I haven't been able to find information online about them...
>>
>> 1) Suppose I have a grammar rule COLUMN, and another rule MAX that has the format "COLUMN COLUMN+", i.e. it takes a series of two or more COLUMNs. How would I iterate over the columns of MAX and extract properties from each?
>>
>> 2) I have a grammar rule for NAMEs, each consisting of a series of LETTERs ('a' . . . 'z'). Is there any way to compare values of LETTERs in the NAMEs to do things such as sort items alphabetically?
>>
>> Thanks!
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>

From kierans777 at gmail.com  Tue Mar  6 03:19:06 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Tue, 06 Mar 2012 22:19:06 +1100
Subject: [antlr-interest] Confusion over token definitions and alternatives
	being disabled
Message-ID: <4F55F2AA.5010209@gmail.com>

I have the following token defs for my grammar:

ANY_TEXT: ( options {greedy=false;} : . )+;

COMMENT
   : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
   | '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
   ;

WS: ( ' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};

In Antlrworks, when I try to use an interpreter on a rule that uses 
ANY_TEXT I'm informed:

"The following alternatives can never be matched: 1" (where the line 
number is the ANY_TEXT definition)

"The following token definitions can never be matched because prior 
tokens match the same input: COMMENT,WS"

I can see how ANY_TEXT could match a COMMENT or a WS, but not how those 
token definitions would match input that ANY_TEXT would match (eg: "foo").

Cheers,

From trhouse at gmail.com  Tue Mar  6 10:15:08 2012
From: trhouse at gmail.com (trhouse)
Date: Tue, 06 Mar 2012 13:15:08 -0500
Subject: [antlr-interest] ANTLRWorks does not like Java.g
Message-ID: <4F56542C.1040009@gmail.com>

Error messages below.

I am using the latest ANTLRWorks and Java.g for 1.6 as it's found on 
ANLTR's website.


I admit to being a newbie, but searching the list didn't turn up 
anything. I did find someone on StackOverflow with the same errors. The 
only comment involved not using ANTLRWorks which is not an option.

http://stackoverflow.com/questions/9375626/how-to-analyze-java-source-files-with-clojure


It seems as if this should be a no brainer- java.g just works.....what 
could I be doing wrong? Load up java.g into ANTLR and push "check 
grammar" . It ought to check out all right.

TIA


[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:03:27] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:03:27] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:03:27] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:03:27] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:03:27] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:03:27] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:03:27] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:03:27] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:03:27] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:03:27] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:03:27] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:03:27] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:03:27] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:03:27] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:03:27] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:03:27] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:03:27] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:03:27] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:03:27] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:03:27] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:03:27] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:03:27] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:03:27] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:03:27] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:03:27] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:03:27] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:03:27] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:03:27] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:03:27] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:03:27] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:03:27] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
[13:03:27] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:03:27] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:06:37] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:06:37] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:06:37] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:06:37] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:06:37] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:06:37] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:06:37] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:06:37] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:06:37] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:06:37] error(106): Java.g:1:14530: reference to undefined rule: block
[13:06:37] error(106): Java.g:1:14994: reference to undefined rule: block
[13:06:37] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:06:37] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:06:37] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:06:37] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:06:37] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:06:37] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:06:37] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:37] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:06:55] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:06:55] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:06:55] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:06:55] error(106): Java.g:1:14994: reference to undefined rule: block
[13:06:55] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:06:55] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:06:55] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:06:55] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:06:55] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:06:55] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:06:55] error(106): Java.g:1:14530: reference to undefined rule: block
[13:06:55] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:06:55] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:06:55] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:06:55] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:06:55] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:06:55] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:06:55] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER
[13:06:55] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] Checking Grammar Java.g...
[13:07:05] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:07:05] error(100): Java.g:1:40624: syntax error: antlr: 
NoViableAltException(-1@[])
[13:07:05] error(100): Java.g:1:40624: syntax error: antlr: 
MismatchedTokenException(-1!=52)
[13:07:05] error(100): Java.g:0:1: syntax error: assign.types: 
MismatchedTreeNodeException(0!=3)
[13:07:05] error(106): Java.g:1:13140: reference to undefined rule: 
annotation
[13:07:05] error(106): Java.g:1:14994: reference to undefined rule: block
[13:07:05] error(106): Java.g:1:16237: reference to undefined rule: 
qualifiedName
[13:07:05] error(106): Java.g:1:14851: reference to undefined rule: 
blockStatement
[13:07:05] error(106): Java.g:1:13925: reference to undefined rule: 
arguments
[13:07:05] error(106): Java.g:1:16218: reference to undefined rule: 
qualifiedName
[13:07:05] error(106): Java.g:1:14817: reference to undefined rule: 
explicitConstructorInvocation
[13:07:05] error(106): Java.g:1:14530: reference to undefined rule: block
[13:07:05] error(106): Java.g:1:13898: reference to undefined rule: 
annotations
[13:07:05] error(106): Java.g:1:12490: reference to undefined rule: 
annotations
[13:07:05] error(106): Java.g:1:14207: reference to undefined rule: 
annotationTypeDeclaration
[13:07:05] error(106): Java.g:1:12602: reference to undefined rule: 
qualifiedName
[13:07:05] error(106): Java.g:1:12953: reference to undefined rule: 
annotation
[13:07:05] error(106): Java.g:1:15145: reference to undefined rule: 
variableInitializer
[13:07:05] warning(105): Java.g:1:14286: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:15916: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:16504: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:15950: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:13913: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:13427: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:15117: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:12797: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:12664: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:12711: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:15405: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:13534: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:12727: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:16582: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:13261: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:12781: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:14921: no lexer rule corresponding to 
token: IDENTIFIER
[13:07:05] warning(105): Java.g:1:14753: no lexer rule corresponding to 
token: IDENTIFIER


From trhouse at gmail.com  Tue Mar  6 16:13:47 2012
From: trhouse at gmail.com (trhouse)
Date: Tue, 06 Mar 2012 19:13:47 -0500
Subject: [antlr-interest] Java.g
Message-ID: <4F56A83B.1070503@gmail.com>

Hi,
  I am not able to get the 1.6 java.g to work in ANTLRWorks. I am 
successfully using the java 1.5 written by Terrence Parr.


I am looking to HTMLize java source. I would suppose that this is a 
transformation and I will want to look at StringTemplate. Probably this 
has been done before though...are there any links to previous efforts or 
pointers to get me going in the right direction?  I also have the goal 
of creating a find-useages / link-to-definition  hyperlinks in the 
HTMLized version of the source code.



TIA!

From ibre5041 at ibrezina.net  Wed Mar  7 05:01:17 2012
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Wed, 07 Mar 2012 14:01:17 +0100
Subject: [antlr-interest] Multiline comments in ANTLR grammar
Message-ID: <20120307140117.y02sxx7b40k40s0g@webmail.kamm.cz>

Hi,
I spotted curious issue, there must not be any multiline comment  
between the grammar name
and the options clause.
see:
--- begin snap ---
lexer grammar abc;

/** (note two asterisks here)
  * some fancy header
  */

@lexer::members
{
bool x;
}

A: 'A';
--- end snap ---

This fails with:
error(100): abc.g:7:1: syntax error: antlr: NoViableAltException(53@[])
error(100): abc.g:7:2: syntax error: antlr: NoViableAltException(4@[])
error(100): abc.g:7:7: syntax error: antlr:  
MissingTokenException(inserted [@-1,0:0='<missing ACTION>',<50>,7:6]  
at :)
error(100): abc.g:7:8: syntax error: antlr: NoViableAltException(54@[])
error(100): abc.g:7:9: syntax error: antlr: NoViableAltException(75@[])
error(100): abc.g:7:9: syntax error: antlr: NoViableAltException(75@[])
error(100): abc.g:12:1: syntax error: antlr:  
MissingTokenException(inserted [@-1,0:0='<missing SEMI>',<52>,12:0] at  
A)
error(100): abc.g:0:1: syntax error: assign.types:  
MismatchedTreeNodeException(0!=30)
error(100): abc.g:0:1: syntax error: assign.types:  
MismatchedTreeNodeException(42!=3)
error(100): abc.g:0:1: syntax error: assign.types:  
MismatchedTreeNodeException(42!=3)
org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 3:0  
mismatched tree node: <unexpected: [@11,56:56='@',<53>,7:0], resync=@>  
expecting ID
error(10):  internal error: abc.g : java.lang.NullPointerException
org.antlr.tool.Grammar.generateMethodForRule(Grammar.java:1718)
org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1468)
org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec(CodeGenTreeWalker.java:1441)
org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:461)
org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
org.antlr.Tool.generateRecognizer(Tool.java:655)
org.antlr.Tool.process(Tool.java:468)
org.antlr.Tool.main(Tool.java:93)

While this compiles successfully:
---------------------
lexer grammar abc;

//
// some fancy header
//

@lexer::members
{
bool x;
}

A: 'A';
---------------------
/**
   * some fancy header
   */

lexer grammar abc;

@lexer::members
{
bool x;
}

A: 'A';
---------------------


Ivan


----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From Stefan.Maetje at esd-electronics.com  Wed Mar  7 05:51:52 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Wed, 07 Mar 2012 14:51:52 +0100
Subject: [antlr-interest] Issues with DOC comments --was [Multiline
 comments in ANTLR grammar]
In-Reply-To: <20120307140117.y02sxx7b40k40s0g@webmail.kamm.cz> (from
	ibre5041@ibrezina.net on Wed Mar  7 14:01:17 2012)
Message-ID: <1331128312.2982.0@pc-stefanm>

Hi,

ANTLR reacts not very gracefully on DOC comments i. e. "/** bla bla */"

Another issue besides the one described by you is the case if you have two DOC 
comments between two rules. That will fail also with a syntax error.

I had the case when I commented a (unused) rule out without touching the DOC 
comments. Then I had two DOC comments between two valid rules that lead also 
to lots of syntax errors.

It took me quite some time to figure out what the reason for this odd 
behaviour was.

Regards,
	Stefan

Am 07.03.2012 14:01:17 schrieb(en) Ivan Brezina:
> Hi,
> I spotted curious issue, there must not be any multiline comment  
> between the grammar name
> and the options clause.
> see:
> --- begin snap ---
> lexer grammar abc;
> 
> /** (note two asterisks here)
>   * some fancy header
>   */
> 
> @lexer::members
> {
> bool x;
> }
> 
> A: 'A';
> --- end snap ---
> 
> This fails with:
> error(100): abc.g:7:1: syntax error: antlr: NoViableAltException(53@[])
> error(100): abc.g:7:2: syntax error: antlr: NoViableAltException(4@[])
> error(100): abc.g:7:7: syntax error: antlr:  
> MissingTokenException(inserted [@-1,0:0='<missing ACTION>',<50>,7:6]  
> at :)
> error(100): abc.g:7:8: syntax error: antlr: NoViableAltException(54@[])
> error(100): abc.g:7:9: syntax error: antlr: NoViableAltException(75@[])
> error(100): abc.g:7:9: syntax error: antlr: NoViableAltException(75@[])
> error(100): abc.g:12:1: syntax error: antlr:  
> MissingTokenException(inserted [@-1,0:0='<missing SEMI>',<52>,12:0] at  
> A)
> error(100): abc.g:0:1: syntax error: assign.types:  
> MismatchedTreeNodeException(0!=30)
> error(100): abc.g:0:1: syntax error: assign.types:  
> MismatchedTreeNodeException(42!=3)
> error(100): abc.g:0:1: syntax error: assign.types:  
> MismatchedTreeNodeException(42!=3)
> org\antlr\grammar\v3\DefineGrammarItemsWalker.g: node from line 3:0  
> mismatched tree node: <unexpected: [@11,56:56='@',<53>,7:0], resync=@>  
> expecting ID
> error(10):  internal error: abc.g : java.lang.NullPointerException
> org.antlr.tool.Grammar.generateMethodForRule(Grammar.java:1718)
> org.antlr.grammar.v3.CodeGenTreeWalker.rules(CodeGenTreeWalker.java:1468)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammarSpec
> (CodeGenTreeWalker.java:1441)
> org.antlr.grammar.v3.CodeGenTreeWalker.grammar_(CodeGenTreeWalker.java:461)
> org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:421)
> org.antlr.Tool.generateRecognizer(Tool.java:655)
> org.antlr.Tool.process(Tool.java:468)
> org.antlr.Tool.main(Tool.java:93)
> 
> While this compiles successfully:
> ---------------------
> lexer grammar abc;
> 
> //
> // some fancy header
> //
> 
> @lexer::members
> {
> bool x;
> }
> 
> A: 'A';
> ---------------------
> /**
>    * some fancy header
>    */
> 
> lexer grammar abc;
> 
> @lexer::members
> {
> bool x;
> }
> 
> A: 'A';
> ---------------------
> 
> 
> Ivan
> 
> 
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 



From newabcsoeasy at gmail.com  Wed Mar  7 07:43:56 2012
From: newabcsoeasy at gmail.com (abc soeasy)
Date: Wed, 7 Mar 2012 21:13:56 +0530
Subject: [antlr-interest] Problem over getting the line from AST
Message-ID: <CADmNDZEHsXFp3UgHshBYHwud0Qxf8rr3Y3Tp8rd4b1x4_PGHYQ@mail.gmail.com>

I am trying the find the line no. using antlr at certain points in a AST of
a Java source in-order to do some instrumentation. But the problem is when
I use getLine() in my AST Treewalker it always return 0[zero].

Some one please help me please...
On Wed, Mar 7, 2012 at 1:30 AM, <antlr-interest-request at antlr.org> wrote:

> Send antlr-interest mailing list submissions to
>        antlr-interest at antlr.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://www.antlr.org/mailman/listinfo/antlr-interest
> or, via email, send a message with subject or body 'help' to
>        antlr-interest-request at antlr.org
>
> You can reach the person managing the list at
>        antlr-interest-owner at antlr.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of antlr-interest digest..."
>
>
> Today's Topics:
>
>   1. Confusion over token definitions and alternatives being
>      disabled (Kieran Simpson)
>   2. ANTLRWorks does not like Java.g (trhouse)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 06 Mar 2012 22:19:06 +1100
> From: Kieran Simpson <kierans777 at gmail.com>
> Subject: [antlr-interest] Confusion over token definitions and
>        alternatives    being disabled
> To: antlr-interest Interest <antlr-interest at antlr.org>
> Message-ID: <4F55F2AA.5010209 at gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> I have the following token defs for my grammar:
>
> ANY_TEXT: ( options {greedy=false;} : . )+;
>
> COMMENT
>   : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>   | '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>   ;
>
> WS: ( ' ' | '\t' | '\r' | '\n') {$channel=HIDDEN;};
>
> In Antlrworks, when I try to use an interpreter on a rule that uses
> ANY_TEXT I'm informed:
>
> "The following alternatives can never be matched: 1" (where the line
> number is the ANY_TEXT definition)
>
> "The following token definitions can never be matched because prior
> tokens match the same input: COMMENT,WS"
>
> I can see how ANY_TEXT could match a COMMENT or a WS, but not how those
> token definitions would match input that ANY_TEXT would match (eg: "foo").
>
> Cheers,
>
>
> ------------------------------
>
> Message: 2
> Date: Tue, 06 Mar 2012 13:15:08 -0500
> From: trhouse <trhouse at gmail.com>
> Subject: [antlr-interest] ANTLRWorks does not like Java.g
> To: antlr-interest at antlr.org
> Message-ID: <4F56542C.1040009 at gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Error messages below.
>
> I am using the latest ANTLRWorks and Java.g for 1.6 as it's found on
> ANLTR's website.
>
>
> I admit to being a newbie, but searching the list didn't turn up
> anything. I did find someone on StackOverflow with the same errors. The
> only comment involved not using ANTLRWorks which is not an option.
>
>
> http://stackoverflow.com/questions/9375626/how-to-analyze-java-source-files-with-clojure
>
>
> It seems as if this should be a no brainer- java.g just works.....what
> could I be doing wrong? Load up java.g into ANTLR and push "check
> grammar" . It ought to check out all right.
>
> TIA
>
>
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:03:27] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:03:27] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:03:27] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:03:27] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:03:27] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:03:27] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:03:27] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:03:27] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:03:27] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:03:27] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:03:27] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:03:27] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:03:27] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:03:27] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:03:27] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:03:27] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:03:27] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:03:27] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:03:27] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:03:27] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:03:27] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:03:27] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:03:27] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:03:27] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:03:27] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:03:27] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:03:27] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:03:27] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:03:27] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:03:27] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:03:27] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:03:27] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:03:27] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:03:27] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:03:27] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:03:27] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:03:27] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:06:37] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:06:37] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:06:37] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:06:37] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:06:37] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:06:37] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:06:37] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:06:37] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:06:37] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:06:37] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:06:37] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:06:37] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:06:37] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:06:37] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:06:37] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:06:37] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:06:37] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:06:37] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:37] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:06:55] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:06:55] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:06:55] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:06:55] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:06:55] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:06:55] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:06:55] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:06:55] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:06:55] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:06:55] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:06:55] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:06:55] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:06:55] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:06:55] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:06:55] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:06:55] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:06:55] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:06:55] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
> [13:06:55] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] Checking Grammar Java.g...
> [13:07:05] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:07:05] error(100): Java.g:1:40624: syntax error: antlr:
> NoViableAltException(-1@[])
> [13:07:05] error(100): Java.g:1:40624: syntax error: antlr:
> MismatchedTokenException(-1!=52)
> [13:07:05] error(100): Java.g:0:1: syntax error: assign.types:
> MismatchedTreeNodeException(0!=3)
> [13:07:05] error(106): Java.g:1:13140: reference to undefined rule:
> annotation
> [13:07:05] error(106): Java.g:1:14994: reference to undefined rule: block
> [13:07:05] error(106): Java.g:1:16237: reference to undefined rule:
> qualifiedName
> [13:07:05] error(106): Java.g:1:14851: reference to undefined rule:
> blockStatement
> [13:07:05] error(106): Java.g:1:13925: reference to undefined rule:
> arguments
> [13:07:05] error(106): Java.g:1:16218: reference to undefined rule:
> qualifiedName
> [13:07:05] error(106): Java.g:1:14817: reference to undefined rule:
> explicitConstructorInvocation
> [13:07:05] error(106): Java.g:1:14530: reference to undefined rule: block
> [13:07:05] error(106): Java.g:1:13898: reference to undefined rule:
> annotations
> [13:07:05] error(106): Java.g:1:12490: reference to undefined rule:
> annotations
> [13:07:05] error(106): Java.g:1:14207: reference to undefined rule:
> annotationTypeDeclaration
> [13:07:05] error(106): Java.g:1:12602: reference to undefined rule:
> qualifiedName
> [13:07:05] error(106): Java.g:1:12953: reference to undefined rule:
> annotation
> [13:07:05] error(106): Java.g:1:15145: reference to undefined rule:
> variableInitializer
> [13:07:05] warning(105): Java.g:1:14286: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:15916: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:16504: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:15950: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:13913: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:13427: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:15117: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:12797: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:12664: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:12711: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:15405: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:13534: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:12727: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:16582: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:13261: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:12781: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:14921: no lexer rule corresponding to
> token: IDENTIFIER
> [13:07:05] warning(105): Java.g:1:14753: no lexer rule corresponding to
> token: IDENTIFIER
>
>
>
> ------------------------------
>
> _______________________________________________
> antlr-interest mailing list
> antlr-interest at antlr.org
> http://www.antlr.org/mailman/listinfo/antlr-interest
>
> End of antlr-interest Digest, Vol 88, Issue 6
> *********************************************
>

From antlr at mirality.co.nz  Wed Mar  7 12:45:49 2012
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Thu, 08 Mar 2012 09:45:49 +1300
Subject: [antlr-interest] Multiline comments in ANTLR grammar
In-Reply-To: <20120307140117.y02sxx7b40k40s0g@webmail.kamm.cz>
References: <20120307140117.y02sxx7b40k40s0g@webmail.kamm.cz>
Message-ID: <20120307204609.6298B341846C@www.antlr.org>

At 02:01 8/03/2012, Ivan Brezina wrote:
 >I spotted curious issue, there must not be any multiline 
comment
 >between the grammar name and the options clause.

/** comments are treated specially (they're JavaDoc comments, and 
ANTLR tries to attach them to the generated methods).  As such, 
they're only really valid in a place where ANTLR is about to 
generate a method or class.  Before rules and grammar declarations 
are just such places; before a members block is not.

If you want to put in an arbitrary comment, use /* instead of /**.


From ludwig.maes at gmail.com  Thu Mar  8 19:10:16 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Fri, 9 Mar 2012 04:10:16 +0100
Subject: [antlr-interest] found a c++ grammar xml, convert to antlr grammar?
Message-ID: <CAJ8SgH=AR613XavQXHK+=Skbg5ba8zYDkcig-77uV2Sg+H6iGw@mail.gmail.com>

Hi, I found a C++ grammar at download section of

http://savannah.nongnu.org/projects/hcb/

its in xml form, but I guess it should be easy to write a grammar to
parse this xml to antlr grammar notation (I have not done so yet)...

I would like to avoid a target language as far as possible (I
personally find it hard to interpret/use a "polished" grammar full of
actions and detail handling) and would like to pass it to a tree
grammar before any actions are applied (is this possible?). I inted to
use java as target language as soon as actions are unavoidable (there
already is an antlr grammar with c++ target)...

Theres already some issues I dont understand in the xml: theres
multiple sections (do they refer to certain parsing passes? or are
they just grouped by topic?), and the literal "while" seems to be
present in both the keyword and iteration rules...

Another problem I have is: how should things like #include be handled?
to call the translation unit rule these files should already be
included, so it seems unavoidable to have actions that include these
files like a preprocessor would? pretty confusing all

Anyone else interested in collaborating? i.e. creating a grammar to
convert this xml to grammar notation, and then finding out what the
sections mean?
I think once the sections have their own antlr grammar notations, we
could more easily see which sections depend on others, etc....

regards!

From kierans777 at gmail.com  Fri Mar  9 02:30:25 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Fri, 09 Mar 2012 21:30:25 +1100
Subject: [antlr-interest] Backtracking and labels
Message-ID: <4F59DBC1.4090008@gmail.com>

For my rule:

rule
   : OPTION1
   | value=OPTION2 -> ($value)
   ;

with backtracking on (and memoize not that I think that's relevant) the 
synpredicate code generated has errors, both for the Java and C targets 
where the variable name is missing in the declaration

eg:

public final void synpred9_grammar_fragment() throws RecognitionException {
         Token =null;

and

static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
{
	pANTLR3_COMMON_TOKEN    ;

	       = NULL;

Interestingly this grammar runs in debug mode when used with Antlrworks 
even though I'm using version 3.4 of Antlr with my project and 3.4 is 
included with Antlrworks (1.4.3).

Just in case it's due to an out of date version, here are some md5sums

9638f9b7b1b823fcaba977f06f0dd761  ./antlr/3.4/antlrworks-1.4.3.jar

465472089d78cd80f926f5825a29ec7f  ./lib/antlr-3.4.jar
0e0318be407e51fdf7ba6777eabfdf73  ./lib/antlr-runtime-3.4.jar

Is something out of date here or is this a bug with the backtracking 
generation?

Cheers,

From bkiers at gmail.com  Fri Mar  9 02:51:38 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 9 Mar 2012 11:51:38 +0100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F59DBC1.4090008@gmail.com>
References: <4F59DBC1.4090008@gmail.com>
Message-ID: <CAOrgODbt76pfeKFr0j4emrvZ8sq93Pzr+x8wTQn1sdoj6NzSUw@mail.gmail.com>

Aren't you missing the `^` right before the `(` in the rewrite rule?

rule
  : OPTION1
  | value=OPTION2 -> ^($value)
  ;

Regards,
Bart.


On Fri, Mar 9, 2012 at 11:30 AM, Kieran Simpson <kierans777 at gmail.com>wrote:

> For my rule:
>
> rule
>   : OPTION1
>   | value=OPTION2 -> ($value)
>   ;
>
> with backtracking on (and memoize not that I think that's relevant) the
> synpredicate code generated has errors, both for the Java and C targets
> where the variable name is missing in the declaration
>
> eg:
>
> public final void synpred9_grammar_fragment() throws RecognitionException {
>         Token =null;
>
> and
>
> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
> {
>        pANTLR3_COMMON_TOKEN    ;
>
>               = NULL;
>
> Interestingly this grammar runs in debug mode when used with Antlrworks
> even though I'm using version 3.4 of Antlr with my project and 3.4 is
> included with Antlrworks (1.4.3).
>
> Just in case it's due to an out of date version, here are some md5sums
>
> 9638f9b7b1b823fcaba977f06f0dd761  ./antlr/3.4/antlrworks-1.4.3.jar
>
> 465472089d78cd80f926f5825a29ec7f  ./lib/antlr-3.4.jar
> 0e0318be407e51fdf7ba6777eabfdf73  ./lib/antlr-runtime-3.4.jar
>
> Is something out of date here or is this a bug with the backtracking
> generation?
>
> Cheers,
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ibre5041 at ibrezina.net  Fri Mar  9 02:51:48 2012
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Fri, 09 Mar 2012 11:51:48 +0100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F59DBC1.4090008@gmail.com>
References: <4F59DBC1.4090008@gmail.com>
Message-ID: <20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>

Hi
maybe you're hitting already discovered bug. This was introduced in  
the version 3.4. What does the output look like when you use ANTLR  
version 3.3?

Ivan

Quoting Kieran Simpson <kierans777 at gmail.com>:

> For my rule:
>
> rule
>    : OPTION1
>    | value=OPTION2 -> ($value)
>    ;
>
> with backtracking on (and memoize not that I think that's relevant) the
> synpredicate code generated has errors, both for the Java and C targets
> where the variable name is missing in the declaration
>
> eg:
>
> public final void synpred9_grammar_fragment() throws RecognitionException {
>          Token =null;
>
> and
>
> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
> {
> 	pANTLR3_COMMON_TOKEN    ;
>
> 	       = NULL;
>
> Interestingly this grammar runs in debug mode when used with Antlrworks
> even though I'm using version 3.4 of Antlr with my project and 3.4 is
> included with Antlrworks (1.4.3).
>
> Just in case it's due to an out of date version, here are some md5sums
>
> 9638f9b7b1b823fcaba977f06f0dd761  ./antlr/3.4/antlrworks-1.4.3.jar
>
> 465472089d78cd80f926f5825a29ec7f  ./lib/antlr-3.4.jar
> 0e0318be407e51fdf7ba6777eabfdf73  ./lib/antlr-runtime-3.4.jar
>
> Is something out of date here or is this a bug with the backtracking
> generation?
>
> Cheers,
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From hoenjethc at gmail.com  Fri Mar  9 03:13:04 2012
From: hoenjethc at gmail.com (Harrie Hoenjet)
Date: Fri, 9 Mar 2012 12:13:04 +0100
Subject: [antlr-interest] (no subject)
Message-ID: <CAGTWuJ_Bi02MGZBKjYXCxBkrmPJOYL-=bG0EUh0+870MtBY4jg@mail.gmail.com>

Hi,

I build the following grammar in ANTL3; I live in the Netherlands.

See below

 When I run the grammar with the following text

 program Test {

 //declaraties

 int i = -5; // use of unaire min

int j; //

int k = -i; // k = 5

 //assignments

i = i + 1; // i = 4

j = 2 * i + k; //j = -3

 // expected values : i = -4, j = -3, k = 5

}

 I get the following error message

Prog0.txt

Factor : -5

Term: -5

Undefined variabl1 i

 Who can help me?

 Thanks in advance,

Harrie

 grammar SimpleLR;

 tokens {

PLUS = '+' ;

MINUS = '-' ;

MULT = '*' ;

DIV = '/' ;

IS = '=';

PUNTKOMMA = ';';

ACCOPEN = '{';

ACCLOSE = '}';

HAAKJEL = '(';

HAAKJER = ')';

KOMMA = ',';

GT = '>';

}

 @header {

import java.io.*;

import java.util.HashMap;

}

 @members {

 // Map variabele name to Integer object holding value

public static HashMap memory = new HashMap();

 public static void main(String[] args) throws Exception {

BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

SimpleLRLexer lex = new SimpleLRLexer(new ANTLRFileStream(in.readLine()));

CommonTokenStream tokens = new CommonTokenStream(lex);

SimpleLRParser parser = new SimpleLRParser(tokens);

 try {

parser.prog();

System.out.println("OK");

} catch (RecognitionException e) {

e.printStackTrace();

}

}

}

 /*------------------------------------------------------------------

* PARSER RULES

*------------------------------------------------------------------*/

 prog

: PROG UNAME ACCOPEN cmds ACCLOSE;

 cmds

: (cmd)+;

 cmd

: decl | keuze | opdracht;

 decl

: VAR LNAME (IS expr)? PUNTKOMMA;

 keuze

: IF HAAKJEL conditie HAAKJER

(ACCOPEN opdracht* ACCLOSE)* PUNTKOMMA

(ELSE ACCOPEN opdracht ACCLOSE)? PUNTKOMMA;

 conditie

: opdracht GT expr;

 opdracht

: lwaarde IS expr {memory.put($lwaarde.text, new Integer($expr.value));

System.out.println("expressie: " + memory);} PUNTKOMMA;

 lwaarde

: LNAME;

 expr returns [int value]

: t=term {$value = $t.value;}

(

PLUS t=term {$value += $t.value;}

|

MINUS t=term {$value -= $t.value;}

)*

;

 term returns [int value]

: f=factor {$value = $f.value;}

(

MULT f=factor {$value = $value * $f.value;}

|

DIV f=factor {$value = $value / $f.value;}

)*

{System.out.println("term: " + $value);}

;

 factor returns [int value = 1]

: (MINUS {$value = -$value;})?

(NUMBER {$value = $value *Integer.parseInt($NUMBER.text);}

|LNAME {Integer iv = (Integer)memory.get ($LNAME.text);

if (iv!= null) $value = $value *(iv.intValue());

else System.out.println("undefined variable "+ $LNAME.text);

}

)

{System.out.println("factor: " + $value);}

;

 /*------------------------------------------------------------------

* LEXER RULES

*------------------------------------------------------------------*/

 PROG : 'program';

VAR : 'int';

IF : 'if';

ELSE : 'else';

UNAME : UPPER(LOWER|UPPER)*;

 LNAME : LOWER(LOWER|UPPER)*;

NUMBER : (DIGIT)+ ;

 WHITESPACE : ( '\t' | ' ' | '\r' | '\n'| '\u000C' )+ { $channel = HIDDEN;
} ;

 LINE_COMMENT : '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;};

 fragment DIGIT : '0'..'9' ;

 fragment LOWER : ('a'.. 'z' );

 fragment UPPER : ('A' .. 'Z');

From wiggjd at bcs.org.uk  Fri Mar  9 12:37:21 2012
From: wiggjd at bcs.org.uk (David Wigg)
Date: Fri, 9 Mar 2012 20:37:21 +0000
Subject: [antlr-interest] C++ Grammars
Message-ID: <CAJueBb97uj2yyKbmkrj4TL9QkX=-F0nRStMLy_WSNbsX_ur6Fg@mail.gmail.com>

In response to this message, has Ludwig looked at the C++ grammars
already on the antlr website?

Message: 1
Date: Fri, 9 Mar 2012 04:10:16 +0100
From: Ludwig Maes <ludwig.maes at gmail.com>
Subject: [antlr-interest] found a c++ grammar xml, convert to antlr
       grammar?

David Wigg

From kpj1 at wustl.edu  Fri Mar  9 13:10:06 2012
From: kpj1 at wustl.edu (Jones, Keith)
Date: Fri, 9 Mar 2012 21:10:06 +0000
Subject: [antlr-interest] Cannot find symbol?
Message-ID: <9B4325C41059734A98D713599A1E0FD7324E47F4@SN2PRD0202MB140.namprd02.prod.outlook.com>

I'm testing a simple grammar I've written, but for some reason when I try to run it through the debugger it fails to compile, giving me multiple "Cannot find symbol" errors. Is it a problem with my syntax or what? Here are the relevant portions:

min    returns [String result]

@init {
    List<String> names = new ArrayList<String>();
    result = "";
}:

    col=COLUMN { $names.add($col); }
        (COMMA col=COLUMN {$names.add($col);} )+
        {$result = $names.get(0);
        for (int i = 0; i < names.size; i++) {
            if ($result.compareToIgnoreCase(names.get(i)) < 0)
                $result = names.get(i);
        }};


COLUMN returns [String name]

@init {
    name = "";
}:
    OPENPAREN (c=COLUMNNAME {$name = c.text();}) CLOSEPAREN;


COLUMNNAME    :    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;


These give me the following errors when I attempt to run the debugger:

[15:05:56] cannot find symbol
[15:05:56] symbol  : variable $names
[15:05:56] location: class autocompleteParser
[15:05:56]              $names.add(col);
[15:05:56]              ^
[15:05:56] cannot find symbol
[15:05:56] symbol  : variable $names
[15:05:56] location: class autocompleteParser
[15:05:56]                     $names.add(col);
[15:05:56]                     ^
[15:05:56] cannot find symbol
[15:05:56] symbol  : variable $names
[15:05:56] location: class autocompleteParser
[15:05:56]             result = $names.get(0);
[15:05:56]                      ^
[15:05:56] cannot find symbol
[15:05:56] symbol  : method text()
[15:05:56] location: class org.antlr.runtime.CommonToken
[15:05:56]             name = c.text();
[15:05:56]                     ^

Why is this happening? I've stuck as closely to the provided examples as I could.

Any help would be greatly appreciated!

From bkiers at gmail.com  Fri Mar  9 13:33:22 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 9 Mar 2012 22:33:22 +0100
Subject: [antlr-interest] Cannot find symbol?
In-Reply-To: <9B4325C41059734A98D713599A1E0FD7324E47F4@SN2PRD0202MB140.namprd02.prod.outlook.com>
References: <9B4325C41059734A98D713599A1E0FD7324E47F4@SN2PRD0202MB140.namprd02.prod.outlook.com>
Message-ID: <CAOrgODYHQ67gg71e_7EKMUiWj=F-KetVt=hN96Chn26eByseMQ@mail.gmail.com>

Hi Keith,

A couple of remarks:
- variables you define yourself in the `@init` block, shouldn't have a `$`
in front of them when you refer to them;
- `c.text();` should be `$c.text;`. A `$` should be there, and `text` is an
attribute, not a method;
- `names.add($col);` is wrong: `$col` refers to a token, while you need to
add a string to the list. It should be `names.add($col.text);`

Try something like this:


min returns [String result]
@init {
  java.util.List<String> names = new java.util.ArrayList<String>();
}
 : col1=COLUMN {names.add($col1.text);} (',' col2=COLUMN
{names.add($col2.text);})+
   {
     $result = names.get(0);
     for (int i = 0; i < names.size(); i++) {
       if ($result.compareToIgnoreCase(names.get(i)) < 0) $result =
names.get(i);
     }
   }
 ;


COLUMN returns [String name]
 : '(' c=COLUMNNAME ')' {$name = $c.text;}
 ;

COLUMNNAME
 : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
 ;


Regards,

Bart.


On Fri, Mar 9, 2012 at 10:10 PM, Jones, Keith <kpj1 at wustl.edu> wrote:

> I'm testing a simple grammar I've written, but for some reason when I try
> to run it through the debugger it fails to compile, giving me multiple
> "Cannot find symbol" errors. Is it a problem with my syntax or what? Here
> are the relevant portions:
>
> min    returns [String result]
>
> @init {
>    List<String> names = new ArrayList<String>();
>    result = "";
> }:
>
>    col=COLUMN { $names.add($col); }
>        (COMMA col=COLUMN {$names.add($col);} )+
>        {$result = $names.get(0);
>        for (int i = 0; i < names.size; i++) {
>            if ($result.compareToIgnoreCase(names.get(i)) < 0)
>                $result = names.get(i);
>        }};
>
>
> COLUMN returns [String name]
>
> @init {
>    name = "";
> }:
>    OPENPAREN (c=COLUMNNAME {$name = c.text();}) CLOSEPAREN;
>
>
> COLUMNNAME    :    ('a'..'z'|'A'..'Z'|'_')
> ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>    ;
>
>
> These give me the following errors when I attempt to run the debugger:
>
> [15:05:56] cannot find symbol
> [15:05:56] symbol  : variable $names
> [15:05:56] location: class autocompleteParser
> [15:05:56]              $names.add(col);
> [15:05:56]              ^
> [15:05:56] cannot find symbol
> [15:05:56] symbol  : variable $names
> [15:05:56] location: class autocompleteParser
> [15:05:56]                     $names.add(col);
> [15:05:56]                     ^
> [15:05:56] cannot find symbol
> [15:05:56] symbol  : variable $names
> [15:05:56] location: class autocompleteParser
> [15:05:56]             result = $names.get(0);
> [15:05:56]                      ^
> [15:05:56] cannot find symbol
> [15:05:56] symbol  : method text()
> [15:05:56] location: class org.antlr.runtime.CommonToken
> [15:05:56]             name = c.text();
> [15:05:56]                     ^
>
> Why is this happening? I've stuck as closely to the provided examples as I
> could.
>
> Any help would be greatly appreciated!
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ludwig.maes at gmail.com  Fri Mar  9 15:38:23 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sat, 10 Mar 2012 00:38:23 +0100
Subject: [antlr-interest] C++ Grammars
In-Reply-To: <CAJueBb97uj2yyKbmkrj4TL9QkX=-F0nRStMLy_WSNbsX_ur6Fg@mail.gmail.com>
References: <CAJueBb97uj2yyKbmkrj4TL9QkX=-F0nRStMLy_WSNbsX_ur6Fg@mail.gmail.com>
Message-ID: <CAJ8SgHk_RX09DYAA+72QmTBFkbEzDD8+K2Kkv3658gXhCfgMBg@mail.gmail.com>

Yes, I have

I found 2 lineages: the one from sun and the much more recent one.
The last one has actions in C++, and the mixture of grammar and
actions is still quite confusing for me beyond basic examples...
(pretty new to both formal language grammars and parsing and antlr)

I have converted the xml from http://savannah.nongnu.org/projects/hcb/

which is also prettyfied on http://www.nongnu.org/hcb/

and seems to stem from http://www.open-std.org/jtc1/sc22/open/n2356/
(this is very useful for me in the complementary sense, but I am not
that acquainted with how compilers work)
also for example there are no rules for comments in the grammar above,
this text explains the comment skipping in words, as being during the
preprocessing phase,... but the grammar contains preprocessor rules,
so Im not completely satisfied (its not clear to me when exactly the
rules for comments are used in perspective with the specific
preprocessing rules... or rather why some preprocessing rules are
present and others are not)

I converted the xml to antlr grammar notation a few hours ago (mostly
by hand/ text editor replace all commands, I did not have the heart to
write an xml parser that would deal with ">" 's within content etc). I
turned the hyphens into underscores, and resolved the simpler left
recursions... theres still some problems though (right now every rule
is lowercase parser rule, Im still a bit confused on the 2x2 double
dichotomy of terminals/nonterminals and lexer/parser rules and perhaps
literals/nonliterals); then theres an undefined rule in the xml:
alignment-expression (or alignment_expression in the .g); a few more
complex left recursions; and errors when I try to check the grammar
(im using the antlrworks IDE). Right now I have not yet added any
actions.

Some of the rules are described as a sentence instead of a grammar
rule, as per the source.

I should probably add a GPLv2+ header as the xml was under such
license, I have no experience with licensing stuff so if anyone knows
how to properly include the header that would be welcome.

I have 1 strange error and 6 warnings in the IDE, any help would be appreciated!

See cpp.g in attachment

Friendly regards

On 9 March 2012 21:37, David Wigg <wiggjd at bcs.org.uk> wrote:
> In response to this message, has Ludwig looked at the C++ grammars
> already on the antlr website?
>
> Message: 1
> Date: Fri, 9 Mar 2012 04:10:16 +0100
> From: Ludwig Maes <ludwig.maes at gmail.com>
> Subject: [antlr-interest] found a c++ grammar xml, convert to antlr
> ? ? ? grammar?
>
> David Wigg
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cpp.g
Type: application/octet-stream
Size: 32657 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120310/3aad4e29/attachment.obj 

From ludwig.maes at gmail.com  Fri Mar  9 15:47:07 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sat, 10 Mar 2012 00:47:07 +0100
Subject: [antlr-interest] C++ Grammars
In-Reply-To: <CAJ8SgHk_RX09DYAA+72QmTBFkbEzDD8+K2Kkv3658gXhCfgMBg@mail.gmail.com>
References: <CAJueBb97uj2yyKbmkrj4TL9QkX=-F0nRStMLy_WSNbsX_ur6Fg@mail.gmail.com>
	<CAJ8SgHk_RX09DYAA+72QmTBFkbEzDD8+K2Kkv3658gXhCfgMBg@mail.gmail.com>
Message-ID: <CAJ8SgHnV3vTy5DGV1uXLm1S32yWY1_AqwWJzfcg6xvaAi7hqbg@mail.gmail.com>

By the way, the errors I get when performing "check grammar" in antlrworks
(I created an empty rule for alignment_expression)

[00:45:29] Checking Grammar cpp.g...
[00:45:30] java.lang.StringIndexOutOfBoundsException: String index out
of range: 7
	at java.lang.String.substring(String.java:1946)
	at org.antlr.tool.Grammar.getUnescapedStringFromGrammarStringLiteral(Grammar.java:2183)
	at org.antlr.grammar.v3.ANTLRLexer.mCHAR_LITERAL(ANTLRLexer.java:1483)
	at org.antlr.grammar.v3.ANTLRLexer.mTokens(ANTLRLexer.java:3077)
	at org.antlr.runtime.Lexer.nextToken(Lexer.java:89)
	at org.antlr.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:133)
	at org.antlr.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:127)
	at org.antlr.runtime.CommonTokenStream.consume(CommonTokenStream.java:70)
	at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:106)
	at org.antlr.grammar.v3.ANTLRParser.rule(ANTLRParser.java:2783)
	at org.antlr.grammar.v3.ANTLRParser.rules(ANTLRParser.java:2405)
	at org.antlr.grammar.v3.ANTLRParser.grammar_(ANTLRParser.java:702)
	at org.antlr.tool.Grammar.parseAndBuildAST(Grammar.java:644)
	at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:604)
	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar(ANTLRGrammarEngineImpl.java:192)
	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar(ANTLRGrammarEngineImpl.java:225)
	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createCombinedGrammar(ANTLRGrammarEngineImpl.java:203)
	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars(ANTLRGrammarEngineImpl.java:165)
	at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(ANTLRGrammarEngineImpl.java:272)
	at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(GrammarEngineImpl.java:325)
	at org.antlr.works.grammar.CheckGrammar.run(CheckGrammar.java:70)
	at java.lang.Thread.run(Thread.java:636)

On 10 March 2012 00:38, Ludwig Maes <ludwig.maes at gmail.com> wrote:
> Yes, I have
>
> I found 2 lineages: the one from sun and the much more recent one.
> The last one has actions in C++, and the mixture of grammar and
> actions is still quite confusing for me beyond basic examples...
> (pretty new to both formal language grammars and parsing and antlr)
>
> I have converted the xml from http://savannah.nongnu.org/projects/hcb/
>
> which is also prettyfied on http://www.nongnu.org/hcb/
>
> and seems to stem from http://www.open-std.org/jtc1/sc22/open/n2356/
> (this is very useful for me in the complementary sense, but I am not
> that acquainted with how compilers work)
> also for example there are no rules for comments in the grammar above,
> this text explains the comment skipping in words, as being during the
> preprocessing phase,... but the grammar contains preprocessor rules,
> so Im not completely satisfied (its not clear to me when exactly the
> rules for comments are used in perspective with the specific
> preprocessing rules... or rather why some preprocessing rules are
> present and others are not)
>
> I converted the xml to antlr grammar notation a few hours ago (mostly
> by hand/ text editor replace all commands, I did not have the heart to
> write an xml parser that would deal with ">" 's within content etc). I
> turned the hyphens into underscores, and resolved the simpler left
> recursions... theres still some problems though (right now every rule
> is lowercase parser rule, Im still a bit confused on the 2x2 double
> dichotomy of terminals/nonterminals and lexer/parser rules and perhaps
> literals/nonliterals); then theres an undefined rule in the xml:
> alignment-expression (or alignment_expression in the .g); a few more
> complex left recursions; and errors when I try to check the grammar
> (im using the antlrworks IDE). Right now I have not yet added any
> actions.
>
> Some of the rules are described as a sentence instead of a grammar
> rule, as per the source.
>
> I should probably add a GPLv2+ header as the xml was under such
> license, I have no experience with licensing stuff so if anyone knows
> how to properly include the header that would be welcome.
>
> I have 1 strange error and 6 warnings in the IDE, any help would be appreciated!
>
> See cpp.g in attachment
>
> Friendly regards
>
> On 9 March 2012 21:37, David Wigg <wiggjd at bcs.org.uk> wrote:
>> In response to this message, has Ludwig looked at the C++ grammars
>> already on the antlr website?
>>
>> Message: 1
>> Date: Fri, 9 Mar 2012 04:10:16 +0100
>> From: Ludwig Maes <ludwig.maes at gmail.com>
>> Subject: [antlr-interest] found a c++ grammar xml, convert to antlr
>> ? ? ? grammar?
>>
>> David Wigg
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From ludwig.maes at gmail.com  Fri Mar  9 16:40:57 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sat, 10 Mar 2012 01:40:57 +0100
Subject: [antlr-interest] ANTLRworks rule left recursion removal
Message-ID: <CAJ8SgHm4UiQ+R3T3jrQRNx36tg2SOWOQM6My1j59FOCU3gN8uw@mail.gmail.com>

Hi, I was wondering how the algorithm for left recursion removal
works? Does it have a name, where can I find good introductions about
them, or more detailed papers? How safely can I use it (is it always
functionally identical to the rule before removal)?

From ludwig.maes at gmail.com  Fri Mar  9 17:14:09 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Sat, 10 Mar 2012 02:14:09 +0100
Subject: [antlr-interest] C++ Grammars
In-Reply-To: <CAJ8SgHnV3vTy5DGV1uXLm1S32yWY1_AqwWJzfcg6xvaAi7hqbg@mail.gmail.com>
References: <CAJueBb97uj2yyKbmkrj4TL9QkX=-F0nRStMLy_WSNbsX_ur6Fg@mail.gmail.com>
	<CAJ8SgHk_RX09DYAA+72QmTBFkbEzDD8+K2Kkv3658gXhCfgMBg@mail.gmail.com>
	<CAJ8SgHnV3vTy5DGV1uXLm1S32yWY1_AqwWJzfcg6xvaAi7hqbg@mail.gmail.com>
Message-ID: <CAJ8SgH=6vgugBU-Kcuum027xWvVDGiP4=8khgwMdSM6qT6sC+w@mail.gmail.com>

OK the error message was just because of not escaping the backslash in
"\u" and "\U" instead of "\\u" and "\\U" in the very first or second
rule, now im just getting some remaining mutual recursion etc... which
ill try debug tomorrow

On 10 March 2012 00:47, Ludwig Maes <ludwig.maes at gmail.com> wrote:
> By the way, the errors I get when performing "check grammar" in antlrworks
> (I created an empty rule for alignment_expression)
>
> [00:45:29] Checking Grammar cpp.g...
> [00:45:30] java.lang.StringIndexOutOfBoundsException: String index out
> of range: 7
> ? ? ? ?at java.lang.String.substring(String.java:1946)
> ? ? ? ?at org.antlr.tool.Grammar.getUnescapedStringFromGrammarStringLiteral(Grammar.java:2183)
> ? ? ? ?at org.antlr.grammar.v3.ANTLRLexer.mCHAR_LITERAL(ANTLRLexer.java:1483)
> ? ? ? ?at org.antlr.grammar.v3.ANTLRLexer.mTokens(ANTLRLexer.java:3077)
> ? ? ? ?at org.antlr.runtime.Lexer.nextToken(Lexer.java:89)
> ? ? ? ?at org.antlr.runtime.BufferedTokenStream.fetch(BufferedTokenStream.java:133)
> ? ? ? ?at org.antlr.runtime.BufferedTokenStream.sync(BufferedTokenStream.java:127)
> ? ? ? ?at org.antlr.runtime.CommonTokenStream.consume(CommonTokenStream.java:70)
> ? ? ? ?at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:106)
> ? ? ? ?at org.antlr.grammar.v3.ANTLRParser.rule(ANTLRParser.java:2783)
> ? ? ? ?at org.antlr.grammar.v3.ANTLRParser.rules(ANTLRParser.java:2405)
> ? ? ? ?at org.antlr.grammar.v3.ANTLRParser.grammar_(ANTLRParser.java:702)
> ? ? ? ?at org.antlr.tool.Grammar.parseAndBuildAST(Grammar.java:644)
> ? ? ? ?at org.antlr.tool.Grammar.setGrammarContent(Grammar.java:604)
> ? ? ? ?at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createNewGrammar(ANTLRGrammarEngineImpl.java:192)
> ? ? ? ?at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createParserGrammar(ANTLRGrammarEngineImpl.java:225)
> ? ? ? ?at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createCombinedGrammar(ANTLRGrammarEngineImpl.java:203)
> ? ? ? ?at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.createGrammars(ANTLRGrammarEngineImpl.java:165)
> ? ? ? ?at org.antlr.works.grammar.antlr.ANTLRGrammarEngineImpl.analyze(ANTLRGrammarEngineImpl.java:272)
> ? ? ? ?at org.antlr.works.grammar.engine.GrammarEngineImpl.analyze(GrammarEngineImpl.java:325)
> ? ? ? ?at org.antlr.works.grammar.CheckGrammar.run(CheckGrammar.java:70)
> ? ? ? ?at java.lang.Thread.run(Thread.java:636)
>
> On 10 March 2012 00:38, Ludwig Maes <ludwig.maes at gmail.com> wrote:
>> Yes, I have
>>
>> I found 2 lineages: the one from sun and the much more recent one.
>> The last one has actions in C++, and the mixture of grammar and
>> actions is still quite confusing for me beyond basic examples...
>> (pretty new to both formal language grammars and parsing and antlr)
>>
>> I have converted the xml from http://savannah.nongnu.org/projects/hcb/
>>
>> which is also prettyfied on http://www.nongnu.org/hcb/
>>
>> and seems to stem from http://www.open-std.org/jtc1/sc22/open/n2356/
>> (this is very useful for me in the complementary sense, but I am not
>> that acquainted with how compilers work)
>> also for example there are no rules for comments in the grammar above,
>> this text explains the comment skipping in words, as being during the
>> preprocessing phase,... but the grammar contains preprocessor rules,
>> so Im not completely satisfied (its not clear to me when exactly the
>> rules for comments are used in perspective with the specific
>> preprocessing rules... or rather why some preprocessing rules are
>> present and others are not)
>>
>> I converted the xml to antlr grammar notation a few hours ago (mostly
>> by hand/ text editor replace all commands, I did not have the heart to
>> write an xml parser that would deal with ">" 's within content etc). I
>> turned the hyphens into underscores, and resolved the simpler left
>> recursions... theres still some problems though (right now every rule
>> is lowercase parser rule, Im still a bit confused on the 2x2 double
>> dichotomy of terminals/nonterminals and lexer/parser rules and perhaps
>> literals/nonliterals); then theres an undefined rule in the xml:
>> alignment-expression (or alignment_expression in the .g); a few more
>> complex left recursions; and errors when I try to check the grammar
>> (im using the antlrworks IDE). Right now I have not yet added any
>> actions.
>>
>> Some of the rules are described as a sentence instead of a grammar
>> rule, as per the source.
>>
>> I should probably add a GPLv2+ header as the xml was under such
>> license, I have no experience with licensing stuff so if anyone knows
>> how to properly include the header that would be welcome.
>>
>> I have 1 strange error and 6 warnings in the IDE, any help would be appreciated!
>>
>> See cpp.g in attachment
>>
>> Friendly regards
>>
>> On 9 March 2012 21:37, David Wigg <wiggjd at bcs.org.uk> wrote:
>>> In response to this message, has Ludwig looked at the C++ grammars
>>> already on the antlr website?
>>>
>>> Message: 1
>>> Date: Fri, 9 Mar 2012 04:10:16 +0100
>>> From: Ludwig Maes <ludwig.maes at gmail.com>
>>> Subject: [antlr-interest] found a c++ grammar xml, convert to antlr
>>> ? ? ? grammar?
>>>
>>> David Wigg
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kierans777 at gmail.com  Sat Mar 10 22:43:09 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 11 Mar 2012 17:43:09 +1100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>
References: <4F59DBC1.4090008@gmail.com>
	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>
Message-ID: <4F5C497D.7060004@gmail.com>

@Bart - yes you're right, I forgot to add the leading ^ for the 
resulting AST in my example.  Typo :(

@Ivan - I ran my build with Antlr 3.3 and the resulting code is OK

static void synpred9_CoreConfiguration_fragment(pCoreConfigurationParser 
ctx )
{
	pANTLR3_COMMON_TOKEN    value;

	value       = NULL;

However I want to use 3.4 ;)

I was thinking it might be a classpath issue, however I'm not certain. 
The classpaths are (from my Ant build):

[java] '-classpath'
[java] 
'./lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.jar:./lib/antlr-runtime-3.4.jar:./lib/stringtemplate-3.2.1.jar'

[java] '-classpath'
[java] 
'./lib/antlr-2.7.7.jar:./lib/antlr-3.3.jar:./lib/antlr-runtime-3.3.jar:./lib/stringtemplate-3.2.1.jar'

What is really bothering my is that the the code generated from 
Antlrworks (when I Debug the grammar) is OK

public final void synpred9_CoreConfiguration_fragment() throws 
RecognitionException {
     Token value=null;

If I can get some pointers about where to look/what to look for in the 
code generators (eg: template fragments) I might be able to get more 
info on the code that's playing up.  It could be a bad JAR that's being 
retrieved by my build system (Apache Ivy).

Cheers,

On 23/07/64 5:59 AM, Ivan Brezina wrote:
> Hi
> maybe you're hitting already discovered bug. This was introduced in the
> version 3.4. What does the output look like when you use ANTLR version 3.3?
>
> Ivan
>
> Quoting Kieran Simpson <kierans777 at gmail.com>:
>
>> For my rule:
>>
>> rule
>> : OPTION1
>> | value=TION2 -> ($value)
>> ;
>>
>> with backtracking on (and memoize not that I think that's relevant) the
>> synpredicate code generated has errors, both for the Java and C targets
>> where the variable name is missing in the declaration
>>
>> eg:
>>
>> public final void synpred9_grammar_fragment() throws
>> RecognitionException {
>> Token =ll;
>>
>> and
>>
>> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
>> {
>> pANTLR3_COMMON_TOKEN ;
>>
>> =ULL;
>>
>> Interestingly this grammar runs in debug mode when used with Antlrworks
>> even though I'm using version 3.4 of Antlr with my project and 3.4 is
>> included with Antlrworks (1.4.3).
>>
>> Just in case it's due to an out of date version, here are some md5sums
>>
>> 9638f9b7b1b823fcaba977f06f0dd761 ./antlr/3.4/antlrworks-1.4.3.jar
>>
>> 465472089d78cd80f926f5825a29ec7f ./lib/antlr-3.4.jar
>> 0e0318be407e51fdf7ba6777eabfdf73 ./lib/antlr-runtime-3.4.jar
>>
>> Is something out of date here or is this a bug with the backtracking
>> generation?
>>
>> Cheers,
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>

From kierans777 at gmail.com  Sun Mar 11 01:02:48 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 11 Mar 2012 20:02:48 +1100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F5C497D.7060004@gmail.com>
References: <4F59DBC1.4090008@gmail.com>
	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>
	<4F5C497D.7060004@gmail.com>
Message-ID: <4F5C6A38.7040104@gmail.com>

As a follow up, I checked out the antlr3 repo from Git Hub and built the 
current master branch.  Still have the same problem

[java] '-classpath'
[java] 
'./lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.1-SNAPSHOT.jar:./lib/antlr-runtime-3.4.1-SNAPSHOT.jar:./lib/stringtemplate-3.2.1.jar'

Cheers,

On 11/03/12 5:43 PM, Kieran Simpson wrote:
> @Bart - yes you're right, I forgot to add the leading ^ for the
> resulting AST in my example. Typo :(
>
> @Ivan - I ran my build with Antlr 3.3 and the resulting code is OK
>
> static void synpred9_CoreConfiguration_fragment(pCoreConfigurationParser
> ctx )
> {
> pANTLR3_COMMON_TOKEN value;
>
> value = NULL;
>
> However I want to use 3.4 ;)
>
> I was thinking it might be a classpath issue, however I'm not certain.
> The classpaths are (from my Ant build):
>
> [java] '-classpath'
> [java]
> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.jar:./lib/antlr-runtime-3.4.jar:./lib/stringtemplate-3.2.1.jar'
>
>
> [java] '-classpath'
> [java]
> './lib/antlr-2.7.7.jar:./lib/antlr-3.3.jar:./lib/antlr-runtime-3.3.jar:./lib/stringtemplate-3.2.1.jar'
>
>
> What is really bothering my is that the the code generated from
> Antlrworks (when I Debug the grammar) is OK
>
> public final void synpred9_CoreConfiguration_fragment() throws
> RecognitionException {
> Token value=null;
>
> If I can get some pointers about where to look/what to look for in the
> code generators (eg: template fragments) I might be able to get more
> info on the code that's playing up. It could be a bad JAR that's being
> retrieved by my build system (Apache Ivy).
>
> Cheers,
>
> On 23/07/64 5:59 AM, Ivan Brezina wrote:
>> Hi
>> maybe you're hitting already discovered bug. This was introduced in the
>> version 3.4. What does the output look like when you use ANTLR version
>> 3.3?
>>
>> Ivan
>>
>> Quoting Kieran Simpson <kierans777 at gmail.com>:
>>
>>> For my rule:
>>>
>>> rule
>>> : OPTION1
>>> | value=TION2 -> ($value)
>>> ;
>>>
>>> with backtracking on (and memoize not that I think that's relevant) the
>>> synpredicate code generated has errors, both for the Java and C targets
>>> where the variable name is missing in the declaration
>>>
>>> eg:
>>>
>>> public final void synpred9_grammar_fragment() throws
>>> RecognitionException {
>>> Token =ll;
>>>
>>> and
>>>
>>> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
>>> {
>>> pANTLR3_COMMON_TOKEN ;
>>>
>>> =ULL;
>>>
>>> Interestingly this grammar runs in debug mode when used with Antlrworks
>>> even though I'm using version 3.4 of Antlr with my project and 3.4 is
>>> included with Antlrworks (1.4.3).
>>>
>>> Just in case it's due to an out of date version, here are some md5sums
>>>
>>> 9638f9b7b1b823fcaba977f06f0dd761 ./antlr/3.4/antlrworks-1.4.3.jar
>>>
>>> 465472089d78cd80f926f5825a29ec7f ./lib/antlr-3.4.jar
>>> 0e0318be407e51fdf7ba6777eabfdf73 ./lib/antlr-runtime-3.4.jar
>>>
>>> Is something out of date here or is this a bug with the backtracking
>>> generation?
>>>
>>> Cheers,
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>>
>> ----------------------------------------------------------------
>> This message was sent using IMP, the Internet Messaging Program.
>>
>>

From dbrosius at mebigfatguy.com  Sun Mar 11 09:34:21 2012
From: dbrosius at mebigfatguy.com (Dave Brosius)
Date: Sun, 11 Mar 2012 12:34:21 -0400
Subject: [antlr-interest] Problems with NoViableAltException on compile
Message-ID: <4F5CD40D.9040005@mebigfatguy.com>

Greetings, i had a working antlr 3.4 grammer that i am trying to 
embellish, and am getting the exception below.

The grammer in question is kind of big so i pastebin'ed it here: 
http://pastebin.com/CVhFCCtB

The addition in question is just an alternative choice on line 614 of

     |   PIXELAVERAGE '(' expr, ',' expr ',' expr ')'
         {
             mv.visitInsn(Opcodes.POP);                     //don't mind 
this impl, it's just stubbed for now
             mv.visitInsn(Opcodes.POP);
             mv.visitInsn(Opcodes.POP);
             mv.visitInsn(Opcodes.DCONST_0);
         } ;

which to me is very similar to other blocks that work just fine. Without 
this section the code generates fine.

      [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:614:30: 
syntax error: antlr: NoViableAltException(62@[722:4: ( ( id ( ASSIGN | 
PLUS_ASSIGN ) ( atom | block ) ) (sub= ebnfSuffix[root_0,false] )? | a= 
atom (sub2= ebnfSuffix[$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION 
| p= SEMPRED ( IMPLIES )? | t3= tree_ )])
      [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:614:30: 
syntax error: antlr: NoViableAltException(62@[722:4: ( ( id ( ASSIGN | 
PLUS_ASSIGN ) ( atom | block ) ) (sub= ebnfSuffix[root_0,false] )? | a= 
atom (sub2= ebnfSuffix[$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION 
| p= SEMPRED ( IMPLIES )? | t3= tree_ )])
      [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:1: 
syntax error: assign.types: MismatchedTreeNodeException(0!=29)
      [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:: syntax 
error: assign.types: NoViableAltException(3@[])
      [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:1: 
syntax error: assign.types: MismatchedTreeNodeException(3!=28)
      [exec] error(10):  internal error: 
/home/dave/dev/pixelle/etc/Pixelle.g : java.util.NoSuchElementException: 
can't look backwards more than one token in this stream


Any idea what i'm doing wrong?


From jbb at acm.org  Sun Mar 11 09:40:03 2012
From: jbb at acm.org (John B. Brodie)
Date: Sun, 11 Mar 2012 12:40:03 -0400
Subject: [antlr-interest] Problems with NoViableAltException on compile
In-Reply-To: <4F5CD40D.9040005@mebigfatguy.com>
References: <4F5CD40D.9040005@mebigfatguy.com>
Message-ID: <4F5CD563.7050300@acm.org>

Greetings!

On 03/11/2012 12:34 PM, Dave Brosius wrote:
> Greetings, i had a working antlr 3.4 grammer that i am trying to
> embellish, and am getting the exception below.
>
> The grammer in question is kind of big so i pastebin'ed it here:
> http://pastebin.com/CVhFCCtB
>
> The addition in question is just an alternative choice on line 614 of
>
>       |   PIXELAVERAGE '(' expr, ',' expr ',' expr ')'
--------------------------------------^??
looks like an extra comma here
>           {
>               mv.visitInsn(Opcodes.POP);                     //don't mind
> this impl, it's just stubbed for now
>               mv.visitInsn(Opcodes.POP);
>               mv.visitInsn(Opcodes.POP);
>               mv.visitInsn(Opcodes.DCONST_0);
>           } ;
>
> which to me is very similar to other blocks that work just fine. Without
> this section the code generates fine.
>
>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:614:30:
> syntax error: antlr: NoViableAltException(62@[722:4: ( ( id ( ASSIGN |
> PLUS_ASSIGN ) ( atom | block ) ) (sub= ebnfSuffix[root_0,false] )? | a=
> atom (sub2= ebnfSuffix[$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION
> | p= SEMPRED ( IMPLIES )? | t3= tree_ )])
>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:614:30:
> syntax error: antlr: NoViableAltException(62@[722:4: ( ( id ( ASSIGN |
> PLUS_ASSIGN ) ( atom | block ) ) (sub= ebnfSuffix[root_0,false] )? | a=
> atom (sub2= ebnfSuffix[$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION
> | p= SEMPRED ( IMPLIES )? | t3= tree_ )])
>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:1:
> syntax error: assign.types: MismatchedTreeNodeException(0!=29)
>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:: syntax
> error: assign.types: NoViableAltException(3@[])
>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:1:
> syntax error: assign.types: MismatchedTreeNodeException(3!=28)
>        [exec] error(10):  internal error:
> /home/dave/dev/pixelle/etc/Pixelle.g : java.util.NoSuchElementException:
> can't look backwards more than one token in this stream
>
>
> Any idea what i'm doing wrong?
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From dbrosius at mebigfatguy.com  Sun Mar 11 09:57:37 2012
From: dbrosius at mebigfatguy.com (Dave Brosius)
Date: Sun, 11 Mar 2012 12:57:37 -0400
Subject: [antlr-interest] Problems with NoViableAltException on compile
In-Reply-To: <4F5CD563.7050300@acm.org>
References: <4F5CD40D.9040005@mebigfatguy.com> <4F5CD563.7050300@acm.org>
Message-ID: <4F5CD981.6070600@mebigfatguy.com>

WOW *EMBARRASSED*

THANKS!!

:)


On 03/11/2012 12:40 PM, John B. Brodie wrote:
> Greetings!
>
> On 03/11/2012 12:34 PM, Dave Brosius wrote:
>> Greetings, i had a working antlr 3.4 grammer that i am trying to
>> embellish, and am getting the exception below.
>>
>> The grammer in question is kind of big so i pastebin'ed it here:
>> http://pastebin.com/CVhFCCtB
>>
>> The addition in question is just an alternative choice on line 614 of
>>
>>       |   PIXELAVERAGE '(' expr, ',' expr ',' expr ')'
> --------------------------------------^??
> looks like an extra comma here
>>           {
>>               mv.visitInsn(Opcodes.POP);                     //don't 
>> mind
>> this impl, it's just stubbed for now
>>               mv.visitInsn(Opcodes.POP);
>>               mv.visitInsn(Opcodes.POP);
>>               mv.visitInsn(Opcodes.DCONST_0);
>>           } ;
>>
>> which to me is very similar to other blocks that work just fine. Without
>> this section the code generates fine.
>>
>>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:614:30:
>> syntax error: antlr: NoViableAltException(62@[722:4: ( ( id ( ASSIGN |
>> PLUS_ASSIGN ) ( atom | block ) ) (sub= ebnfSuffix[root_0,false] )? | a=
>> atom (sub2= ebnfSuffix[$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION
>> | p= SEMPRED ( IMPLIES )? | t3= tree_ )])
>>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:614:30:
>> syntax error: antlr: NoViableAltException(62@[722:4: ( ( id ( ASSIGN |
>> PLUS_ASSIGN ) ( atom | block ) ) (sub= ebnfSuffix[root_0,false] )? | a=
>> atom (sub2= ebnfSuffix[$a.tree,false] )? | ebnf | FORCED_ACTION | ACTION
>> | p= SEMPRED ( IMPLIES )? | t3= tree_ )])
>>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:1:
>> syntax error: assign.types: MismatchedTreeNodeException(0!=29)
>>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:: 
>> syntax
>> error: assign.types: NoViableAltException(3@[])
>>        [exec] error(100): /home/dave/dev/pixelle/etc/Pixelle.g:0:1:
>> syntax error: assign.types: MismatchedTreeNodeException(3!=28)
>>        [exec] error(10):  internal error:
>> /home/dave/dev/pixelle/etc/Pixelle.g : java.util.NoSuchElementException:
>> can't look backwards more than one token in this stream
>>
>>
>> Any idea what i'm doing wrong?
>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>


From kierans777 at gmail.com  Sun Mar 11 20:04:08 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Mon, 12 Mar 2012 14:04:08 +1100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F5C6A38.7040104@gmail.com>
References: <4F59DBC1.4090008@gmail.com>	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>	<4F5C497D.7060004@gmail.com>
	<4F5C6A38.7040104@gmail.com>
Message-ID: <4F5D67A8.4040501@gmail.com>

Bisecting my way through the repo and testing out revisions, I think 
I've found the likely culprits for the regression between antlr-3.3 and 
3.4 (note I use hg-git)

changeset:   101:56ba79288764
user:        parrt <parrt at antlr.org>
date:        Sat May 14 10:24:19 2011 -0800
summary:     last few tweaks to get ST v4 working in C target for Jim.

changeset:   100:59fe389808a0
user:        parrt <parrt at antlr.org>
date:        Sat May 14 09:56:06 2011 -0800
summary:     update for Jim to ST v4

However due to compiler errors I couldn't check the following revisions:

45ca2453b2df,67678b99acdd,d844128119aa,d1e6eb1c7bf1,ae6a4ca2ab71,1c33e8e60e21,6a6179c5869b,8e997cdac2c5,42462909b4fc,bf6d0ad84fd1,75e932a346bd,1cf0ffe4556c,a38989618e4f,4c656baccc86,5b557aea2388,638689ca7b4f,a0ce90ec3883,6a2604dbf08e,6a926e780f1e,bb1ff003f2a7,55e6041441c2,4d85a9697a48,77427ba1f168,a7c6103ea0c8,83e1a246387c,574f8b31a801,5eabd9721dc2,723ea56bcf5f,89489f506789,b5b9b755e40c,6574451570c8,945a012a7dcd,f56685c7eec2,5e37281e3cfe,793f3298fc12,514cd2be224f,65528271faa9,63ff9c29cb79,881d10a9449a,703e16989010,248dcb9970ea,83f74245581e,93fca748c628,40d4c8456090,c4300f0234d3,51aa7ae9b2b4,7ff58e224342,ad0d6f1cf164,3b0de8add5ef,efa19fdf4e0e,07143dfc0063,b0b29474e6f5,32ea0d3d0338,32a1d9b9d45a,c8cb30ba8aaf,3de5ce7243c5,9dc88f30aec7,c71b9144232f,f76b9ac7fd0c,0fc00798d47d,311aa7bb6c53,a5a76dac6a16,cc31348b1cb7,bdd70fc3f278,e529f9f8c657,2aba07893d6a,cc612b5397f4,7d7933d47e98,abc1f7ae2b96,c77e39076745,5333bbfc20f3,7f0cb49b65e0,a0f8850b1330,5e33175e303e,d89d7a4ca7de,2b6a50012255,17
76c7013ef4,3fa1ea63b51b,157c1f0edb2b,272b22513c4e,03e2109db224,cecdc8a49296,edc3c300bb82,3be166dd09af,a0f73246ca67,597aae907a92,113810e45a7d,bb7773632377,a4eedebbe75f,52a8ebe321a4,99db69048e41,59fe389808a0,56ba79288764

HTH.

Cheers,

On 23/07/64 5:59 AM, Kieran Simpson wrote:
> As a follow up, I checked out the antlr3 repo from Git Hub and built the
> current master branch. Still have the same problem
>
> [java] '-classpath'
> [java]
> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.1-SNAPSHOT.jar:./lib/antlr-runtime-3.4.1-SNAPSHOT.jar:./lib/stringtemplate-3.2.1.jar'
>
>
> Cheers,
>
> On 11/03/12 5:43 PM, Kieran Simpson wrote:
>> @Bart - yes you're right, I forgot to add the leading ^ for the
>> resulting AST in my example. Typo :(
>>
>> @Ivan - I ran my build with Antlr 3.3 and the resulting code is OK
>>
>> static void synpred9_CoreConfiguration_fragment(pCoreConfigurationParser
>> ctx )
>> {
>> pANTLR3_COMMON_TOKEN value;
>>
>> value = NULL;
>>
>> However I want to use 3.4 ;)
>>
>> I was thinking it might be a classpath issue, however I'm not certain.
>> The classpaths are (from my Ant build):
>>
>> [java] '-classpath'
>> [java]
>> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.jar:./lib/antlr-runtime-3.4.jar:./lib/stringtemplate-3.2.1.jar'
>>
>>
>>
>> [java] '-classpath'
>> [java]
>> './lib/antlr-2.7.7.jar:./lib/antlr-3.3.jar:./lib/antlr-runtime-3.3.jar:./lib/stringtemplate-3.2.1.jar'
>>
>>
>>
>> What is really bothering my is that the the code generated from
>> Antlrworks (when I Debug the grammar) is OK
>>
>> public final void synpred9_CoreConfiguration_fragment() throws
>> RecognitionException {
>> Token value=null;
>>
>> If I can get some pointers about where to look/what to look for in the
>> code generators (eg: template fragments) I might be able to get more
>> info on the code that's playing up. It could be a bad JAR that's being
>> retrieved by my build system (Apache Ivy).
>>
>> Cheers,
>>
>> On 23/07/64 5:59 AM, Ivan Brezina wrote:
>>> Hi
>>> maybe you're hitting already discovered bug. This was introduced in the
>>> version 3.4. What does the output look like when you use ANTLR version
>>> 3.3?
>>>
>>> Ivan
>>>
>>> Quoting Kieran Simpson <kierans777 at gmail.com>:
>>>
>>>> For my rule:
>>>>
>>>> rule
>>>> : OPTION1
>>>> | value=TION2 -> ($value)
>>>> ;
>>>>
>>>> with backtracking on (and memoize not that I think that's relevant) the
>>>> synpredicate code generated has errors, both for the Java and C targets
>>>> where the variable name is missing in the declaration
>>>>
>>>> eg:
>>>>
>>>> public final void synpred9_grammar_fragment() throws
>>>> RecognitionException {
>>>> Token =ll;
>>>>
>>>> and
>>>>
>>>> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
>>>> {
>>>> pANTLR3_COMMON_TOKEN ;
>>>>
>>>> =ULL;
>>>>
>>>> Interestingly this grammar runs in debug mode when used with Antlrworks
>>>> even though I'm using version 3.4 of Antlr with my project and 3.4 is
>>>> included with Antlrworks (1.4.3).
>>>>
>>>> Just in case it's due to an out of date version, here are some md5sums
>>>>
>>>> 9638f9b7b1b823fcaba977f06f0dd761 ./antlr/3.4/antlrworks-1.4.3.jar
>>>>
>>>> 465472089d78cd80f926f5825a29ec7f ./lib/antlr-3.4.jar
>>>> 0e0318be407e51fdf7ba6777eabfdf73 ./lib/antlr-runtime-3.4.jar
>>>>
>>>> Is something out of date here or is this a bug with the backtracking
>>>> generation?
>>>>
>>>> Cheers,
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>>
>>> ----------------------------------------------------------------
>>> This message was sent using IMP, the Internet Messaging Program.
>>>
>>>
>

From Philippe.Frankson at Frsglobal.com  Tue Mar 13 03:38:50 2012
From: Philippe.Frankson at Frsglobal.com (Philippe Frankson)
Date: Tue, 13 Mar 2012 11:38:50 +0100
Subject: [antlr-interest] "Illegal target of jump or branch" in method:
	specialStateTransition
Message-ID: <148D436D71E918499E8A71E1DAD38DD018709ECE@BRU-EXCH01.frsglobal.internal>

Hi all,

I use teamcity to launch automatically a bunch of tests on our
application.
However, one test is failing. Error message: "Illegal target of jump or
branch".
One reason of the problem could be that the size of the function is too
big.
However that function is generated automatically by ANTLR 3.4.
The function 'specialStateTransition' in the inner class  DFA13 is
indeed quite long (about 3000 lines).
In previous versions of ANTLR that function didn't exist so I never had
that kind of error.
You can see the stack trace here below for detail.

Any idea how to solve this ? 
Would it be possible to split that function to avoid such problem ?

Thank you for any feedback
Philippe




Stacktraces : 
(new)
dbtest.com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaPa
rserTest.testFormulaSyntax
java.lang.VerifyError: (class:
com/frsglobal/riskpro/model/reportbuilder/formulaparser/FormulaLexer$DFA
13, method: specialStateTransition signature:
(ILorg/antlr/runtime/IntStream;)I) Illegal target of jump or branch
	at
com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaLexer.(Fo
rmulaLexer.java:3210)
	at
com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaLexer.(Fo
rmulaLexer.java:128)
	at
com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaParserMan
ager.(FormulaParserManager.java:26)
	at
dbtest.com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaPa
rserTest.checkSyntax(FormulaParserTest.java:58)
	at
dbtest.com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaPa
rserTest.testFormulaSyntax(FormulaParserTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.jav
a:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessor
Impl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at
com.frsglobal.riskpro.common.FTestCase.runTest(FTestCase.java:171)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at
org.apache.tools.ant.taskdefs.optional.junit.TestResultInterceptor$1.pro
tect(TestResultInterceptor.java:160)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at
org.apache.tools.ant.taskdefs.optional.junit.TestResultInterceptor.run(T
estResultInterceptor.java:190)
	at junit.framework.TestCase.run(TestCase.java:124)
	at
com.frsglobal.riskpro.common.FTestCase.run(FTestCase.java:148)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at
org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.jav
a:79)
	at
junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTe
stRunner.java:420)
	at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUni
tTestRunner.java:911)
	at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitT
estRunner.java:743)

------- Stdout: -------
[                main][ WARN] (10:48:52.839) 

[                main][ WARN] (10:48:52.839) PID:20620 ::
FormulaParserTest.testFormulaSyntax

[                main][ WARN] (10:48:52.855) RAM Information: maximum
742MB - total  337MB - free  141MB

[                main][ WARN] (10:48:52.855) 

[                main][ INFO] (10:48:52.855) 

[                main][ INFO] (10:48:52.855) ***** Checking Hibernate
Settings [Equals] *****

[                main][ INFO] (10:48:52.855) 

[                main][ INFO] (10:48:52.855) DbTestCase.setUp() done!
 
dbtest.com.frsglobal.riskpro.model.reportbuilder.CompileTest.testCompile
Applications
java.lang.VerifyError: (class:
com/frsglobal/riskpro/model/reportbuilder/formulaparser/FormulaLexer$DFA
13, method: specialStateTransition signature:
(ILorg/antlr/runtime/IntStream;)I) Illegal target of jump or branch
	at
com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaLexer.(Fo
rmulaLexer.java:3210)
	at
com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaLexer.(Fo
rmulaLexer.java:128)
	at
com.frsglobal.riskpro.model.reportbuilder.formulaparser.FormulaParserMan
ager.(FormulaParserManager.java:26)
	at
com.frsglobal.riskpro.model.reportbuilder.generator.RBReportGenerator.ha
sBrokenFormulae(RBReportGenerator.java:149)
	at
com.frsglobal.riskpro.model.reportbuilder.generator.RBReportGenerator.ge
nerate(RBReportGenerator.java:84)
	at
com.frsglobal.riskpro.model.reportbuilder.RBReportFile.generate(RBReport
File.java:1696)
	at
com.frsglobal.riskpro.model.reportbuilder.RBApplication.generate(RBAppli
cation.java:1353)
	at
dbtest.com.frsglobal.riskpro.model.reportbuilder.CompileTest.compileAppl
ication(CompileTest.java:31)
	at
dbtest.com.frsglobal.riskpro.model.reportbuilder.CompileTest.testCompile
Applications(CompileTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.jav
a:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessor
Impl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at
com.frsglobal.riskpro.common.FTestCase.runTest(FTestCase.java:171)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at
org.apache.tools.ant.taskdefs.optional.junit.TestResultInterceptor$1.pro
tect(TestResultInterceptor.java:160)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at
org.apache.tools.ant.taskdefs.optional.junit.TestResultInterceptor.run(T
estResultInterceptor.java:190)
	at junit.framework.TestCase.run(TestCase.java:124)
	at
com.frsglobal.riskpro.common.FTestCase.run(FTestCase.java:148)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at
org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.jav
a:79)
	at
junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
	at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTe
stRunner.java:420)
	at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUni
tTestRunner.java:911)
	at
org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitT
estRunner.java:743)

From pander at users.sourceforge.net  Tue Mar 13 09:27:59 2012
From: pander at users.sourceforge.net (Pander)
Date: Tue, 13 Mar 2012 17:27:59 +0100
Subject: [antlr-interest] Newbe questions
Message-ID: <4F5F758F.1050305@users.sourceforge.net>

Hi all,

I have just starting to use ANTLRWorks and it is very useful. I am
working on a simple grammar for defining hyphenation patterns. This will
be used to improve hyphenation support in TeX, LibreOffice, etc.

The grammar is currently http://pastebin.com/H77JGeLF and is still under
discussion.

1) How can I convert this grammar (preferably back and forth) to EBNF so
I can use http://railroad.my28msec.com/rr/ui ?

2) How can I do tests on the command-line with e.g. the following data?

asdfetasdf;asdf<et|n>asdf
aasdf;-2-;aasdf
asdfasdf;asdf=asdf
asdfqwer;asdf?qwer;asd==fqwer

After working on the grammar, I would like to use as much command-line
as possible but can't figure out how to get started. The documentation
talks about a Main.java but I do not have this. I can howver generate a
.class and .token file.

Thanks,

Pander

From researcher0x00 at gmail.com  Tue Mar 13 12:46:35 2012
From: researcher0x00 at gmail.com (Eric)
Date: Tue, 13 Mar 2012 15:46:35 -0400
Subject: [antlr-interest] Newbe questions
In-Reply-To: <4F5F758F.1050305@users.sourceforge.net>
References: <4F5F758F.1050305@users.sourceforge.net>
Message-ID: <CAN45N11owmJC+V=7TSqokr4MSjAeOL2=M9gbqbM6SM+Oth0uUw@mail.gmail.com>

On Tue, Mar 13, 2012 at 12:27 PM, Pander <pander at users.sourceforge.net>wrote:

> Hi all,
>
> I have just starting to use ANTLRWorks and it is very useful. I am
> working on a simple grammar for defining hyphenation patterns. This will
> be used to improve hyphenation support in TeX, LibreOffice, etc.
>
> The grammar is currently http://pastebin.com/H77JGeLF and is still under
> discussion.
>
> 1) How can I convert this grammar (preferably back and forth) to EBNF so
> I can use http://railroad.my28msec.com/rr/ui ?
>

The closest thing at antlr.org would be the strip tool

http://www.antlr.org/wiki/display/ANTLR3/Strip+-+strip+a+grammar+to+just+the+grammar+components

For any editing/changes you need to the ouptut beyond this and  you are own
your own. Sorry.


>
> 2) How can I do tests on the command-line with e.g. the following data?
>
> asdfetasdf;asdf<et|n>asdf
> aasdf;-2-;aasdf
> asdfasdf;asdf=asdf
> asdfqwer;asdf?qwer;asd==fqwer
>
> After working on the grammar, I would like to use as much command-line
> as possible but can't figure out how to get started. The documentation
> talks about a Main.java but I do not have this. I can howver generate a
> .class and .token file.
>
You mention ANTLRWorks at the start, which last I checked does not accept
data inputs on the command line. Data inputs are set in a window once you
start the debugger, and can chose from entering in a text window, or
selecting a file.

If however you want to input the data using the command line without using
ANTLRWorks, then you need to write a custom driver. See:
http://www.antlr.org/wiki/display/ANTLR3/Expression+evaluator for an
example.

Hope that helps, Eric



>
> Thanks,
>
> Pander
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Tue Mar 13 12:51:36 2012
From: researcher0x00 at gmail.com (Eric)
Date: Tue, 13 Mar 2012 15:51:36 -0400
Subject: [antlr-interest] ANTLRworks rule left recursion removal
In-Reply-To: <CAJ8SgHm4UiQ+R3T3jrQRNx36tg2SOWOQM6My1j59FOCU3gN8uw@mail.gmail.com>
References: <CAJ8SgHm4UiQ+R3T3jrQRNx36tg2SOWOQM6My1j59FOCU3gN8uw@mail.gmail.com>
Message-ID: <CAN45N10Xxntunp62Bp2fuJW2Xb2566F_EQbUoVxiMnhii4DaEw@mail.gmail.com>

On Fri, Mar 9, 2012 at 7:40 PM, Ludwig Maes <ludwig.maes at gmail.com> wrote:

> Hi, I was wondering how the algorithm for left recursion removal
> works? Does it have a name, where can I find good introductions about
> them, or more detailed papers? How safely can I use it (is it always
> functionally identical to the rule before removal)?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

Have you seen:
http://www.antlr.org/wiki/display/ANTLR3/Left-Recursion+Removal

There is not much to it and is described in most compiler books and at
Wikipedia.

http://en.wikipedia.org/wiki/Left_recursion

Note:There is a bug with it in ANTLRWorks when comments are involved.
See:
http://antlr.markmail.org/search/?q=left+recursion#query:left%20recursion+page:1+mid:sstiupbjrn4ovlzu+state:results


Eric

From weissig at rbg.informatik.tu-darmstadt.de  Thu Mar 15 02:19:14 2012
From: weissig at rbg.informatik.tu-darmstadt.de (=?ISO-8859-15?Q?Yves_Wei=DFig?=)
Date: Thu, 15 Mar 2012 10:19:14 +0100
Subject: [antlr-interest] C runtime linking error?
Message-ID: <4F61B412.80307@rbg.informatik.tu-darmstadt.de>

Hi list,

I'm trying to compile and link an ANTLR C backend with some C++ code
which I wrote. This used to work, but now the following command:

g++ -o X -Iusr/local/include -lantlr3c *.cpp

throws a lot of errors:

/tmp/ccnHhg86.o: In function `RtfLexerNewSSD':
RtfLexer.cpp:(.text+0xb0): undefined reference to `antlr3LexerNewStream'
/tmp/ccvF9JS1.o: In function `RtfParserNewSSD':
RtfParser.cpp:(.text+0x7d): undefined reference to `antlr3ParserNewStream'
RtfParser.cpp:(.text+0xfa): undefined reference to `ANTLR3_TREE_ADAPTORNew'
RtfParser.cpp:(.text+0x10e): undefined reference to `antlr3VectorFactoryNew'
/tmp/ccvF9JS1.o: In function `plaintext(RtfParser_Ctx_struct*)':
RtfParser.cpp:(.text+0x8c4): undefined reference to
`antlr3RewriteRuleTOKENStreamNewAE'
RtfParser.cpp:(.text+0x992): undefined reference to
`antlr3RewriteRuleTOKENStreamNewAE'
RtfParser.cpp:(.text+0xa60): undefined reference to
`antlr3RewriteRuleTOKENStreamNewAE'
RtfParser.cpp:(.text+0xb2e): undefined reference to
`antlr3RewriteRuleTOKENStreamNewAE'
RtfParser.cpp:(.text+0xbfc): undefined reference to
`antlr3RewriteRuleTOKENStreamNewAE'
[...] much more are displayed here.

Is there any obvious error that I make?

Best regards
Yves

From antlr at mirality.co.nz  Thu Mar 15 04:19:23 2012
From: antlr at mirality.co.nz (Gavin Lambert)
Date: Fri, 16 Mar 2012 00:19:23 +1300
Subject: [antlr-interest] C runtime linking error?
In-Reply-To: <4F61B412.80307@rbg.informatik.tu-darmstadt.de>
References: <4F61B412.80307@rbg.informatik.tu-darmstadt.de>
Message-ID: <20120315111948.31AB53418445@www.antlr.org>

At 22:19 15/03/2012, Yves Wei?ig wrote:
 >I'm trying to compile and link an ANTLR C backend with some C++
 >code which I wrote.
[...]
 >/tmp/ccnHhg86.o: In function `RtfLexerNewSSD':
 >RtfLexer.cpp:(.text+0xb0): undefined reference to
 >`antlr3LexerNewStream'

Most likely, you're missing some extern "C" blocks.

-- 
Gavin Lambert, Mirality Systems
<http://www.mirality.co.nz/>
<http://lambert.geek.nz/>
----
Anyone who goes to a psychiatrist ought to have 
their head examined.

Few women admit their age.  Few men act theirs.


From weissig at rbg.informatik.tu-darmstadt.de  Thu Mar 15 04:49:32 2012
From: weissig at rbg.informatik.tu-darmstadt.de (=?ISO-8859-1?Q?Yves_Wei=DFig?=)
Date: Thu, 15 Mar 2012 12:49:32 +0100
Subject: [antlr-interest] C runtime linking error?
In-Reply-To: <201203151119.q2FBJl7g028923@lnx501.hrz.tu-darmstadt.de>
References: <4F61B412.80307@rbg.informatik.tu-darmstadt.de>
	<201203151119.q2FBJl7g028923@lnx501.hrz.tu-darmstadt.de>
Message-ID: <4F61D74C.1060002@rbg.informatik.tu-darmstadt.de>

Hi, thanks for the hint... don't know if I get that right:
ctx->pLexer = antlr3LexerNewStream(ANTLR3_SIZE_HINT, instream, state);
throws the error and was generated that way, something wrong with my
generator? I didn't edit the files...

Am 15.03.2012 12:19, schrieb Gavin Lambert:
> At 22:19 15/03/2012, Yves Wei?ig wrote:
>>I'm trying to compile and link an ANTLR C backend with some C++
>>code which I wrote.
> [...]
>>/tmp/ccnHhg86.o: In function `RtfLexerNewSSD':
>>RtfLexer.cpp:(.text+0xb0): undefined reference to
>>`antlr3LexerNewStream'
> 
> Most likely, you're missing some extern "C" blocks.
> 

From diabeteman at gmail.com  Thu Mar 15 05:19:39 2012
From: diabeteman at gmail.com (Robin)
Date: Thu, 15 Mar 2012 13:19:39 +0100
Subject: [antlr-interest] Java parser not compiling
Message-ID: <CA+_G_aqALo2aK=dffHkFG0f3C5fp++8V9RNpyJv2VkztyyWb=w@mail.gmail.com>

Hello list,

I'm trying to use this grammar
http://www.antlr.org/grammar/1207932239307/Java1_5Grammars with antlr-3.4

The grammar compiles into java classes without problems:

$ java -cp /c/integ/antlr/antlr-3.4-complete.jar org.antlr.Tool Java.g
$ ls -l *.java
-rw-r--r--    1 S0030382 Administ     159k Mar 15 11:15 JavaLexer.java
-rw-r--r--    1 S0030382 Administ     1.0M Mar 15 11:15 JavaParser.java


But the generated parser has compile errors:

$ javac -cp antlr-3.4-complete.jar JavaParser.java
JavaParser.java:23842: illegal start of expression
        void  =null;
        ^
1 error


I guess the grammar must be updated in order to work with antlr 3.4.

Can you tell me what must be done?

Thanks in advance :)
Robin

From researcher0x00 at gmail.com  Thu Mar 15 07:56:41 2012
From: researcher0x00 at gmail.com (Eric)
Date: Thu, 15 Mar 2012 10:56:41 -0400
Subject: [antlr-interest] Java parser not compiling
In-Reply-To: <CA+_G_aqALo2aK=dffHkFG0f3C5fp++8V9RNpyJv2VkztyyWb=w@mail.gmail.com>
References: <CA+_G_aqALo2aK=dffHkFG0f3C5fp++8V9RNpyJv2VkztyyWb=w@mail.gmail.com>
Message-ID: <CAN45N12RNSTNkwyd2awNAYfwpp1D1O4+XZRWfM6ieA8Yg9YN3g@mail.gmail.com>

Hi Robin,

It is a know bug. Ter fixed it then backed it out.

See:
http://antlr.markmail.org/search/?q=%22void+%3D+null%3B%22#query:%22void%20%3D%20null%3B%22+page:1+mid:wr44syoliwmy6ors+state:results

You can use http://antlr.markmail.org/ to search previous post at
antlr.orglist.

For your question I used "void = null;"

Not what you wanted, but it is an answer.

Try using 3.3.

Eric

On Thu, Mar 15, 2012 at 8:19 AM, Robin <diabeteman at gmail.com> wrote:

> Hello list,
>
> I'm trying to use this grammar
> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars with antlr-3.4
>
> The grammar compiles into java classes without problems:
>
> $ java -cp /c/integ/antlr/antlr-3.4-complete.jar org.antlr.Tool Java.g
> $ ls -l *.java
> -rw-r--r--    1 S0030382 Administ     159k Mar 15 11:15 JavaLexer.java
> -rw-r--r--    1 S0030382 Administ     1.0M Mar 15 11:15 JavaParser.java
>
>
> But the generated parser has compile errors:
>
> $ javac -cp antlr-3.4-complete.jar JavaParser.java
> JavaParser.java:23842: illegal start of expression
>        void  =null;
>        ^
> 1 error
>
>
> I guess the grammar must be updated in order to work with antlr 3.4.
>
> Can you tell me what must be done?
>
> Thanks in advance :)
> Robin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From tnine at apigee.com  Thu Mar 15 11:02:11 2012
From: tnine at apigee.com (Todd Nine)
Date: Thu, 15 Mar 2012 11:02:11 -0700
Subject: [antlr-interest] Help with compressing trees and custom nodes
Message-ID: <CA+yzqf8smzKt1e3iafodLbbKQ43dwxbnd0zJSL3J-ho5a9QvjA@mail.gmail.com>

Hi guys.  I'm new to antlr and have a question regarding tree compressions.
 My ultimate goal is to use my grammar to create an AST.  From this AST I
then will utilize the visitor pattern to walk the tree and evaluate my
results for our Cassandra query engine.  I'm having issues with my tree
having a lot of additional nodes that don't have 2 children due to operator
precedence.  My questions are below.

1. How can I create a different node class for each element?  For instance,
&& ad || need their own nodes, as well as 'NOT' 'within' etc

2. How can I collapse tree elements that only have 1 child.  I.E turn orexp
-> andexp -> notexp -> andexp into just an andexp node


I've read all the documentation here, but I have a few things that aren't
clear.

http://www.antlr.org/wiki/display/ANTLR3/Tree+construction

When creating my own node classes, it's not clear to me if I need to
subclass an antlr node class, or just create any class.  Are there any
examples on both compression and creating custom classes?


Thanks,

Todd

From diabeteman at gmail.com  Thu Mar 15 11:59:06 2012
From: diabeteman at gmail.com (Robin)
Date: Thu, 15 Mar 2012 19:59:06 +0100
Subject: [antlr-interest] Java parser not compiling
In-Reply-To: <CAN45N12E_H6NbuaR4iyRG5O67fb2sk_8xkYPBaSWfgHh5yLxyQ@mail.gmail.com>
References: <CA+_G_aqALo2aK=dffHkFG0f3C5fp++8V9RNpyJv2VkztyyWb=w@mail.gmail.com>
	<CAN45N12RNSTNkwyd2awNAYfwpp1D1O4+XZRWfM6ieA8Yg9YN3g@mail.gmail.com>
	<CA+_G_apHVQZ_THY=YczLouOnsH0UzGrUR5qUskfWdhp91idUHA@mail.gmail.com>
	<CAN45N12E_H6NbuaR4iyRG5O67fb2sk_8xkYPBaSWfgHh5yLxyQ@mail.gmail.com>
Message-ID: <CA+_G_apZTCxeJhh9o+fo+babjzk+KdVK-JVbRe2Kuvdkmmf0MA@mail.gmail.com>

You're a good man, Eric :-)

I have some more questions but I'll make a separate message, not to mix up
stuff.

o/

BTW: for those who didn't know this wonderfull language:
http://www.99-bottles-of-beer.net/language-lolcode-1544.html KTHXBYE :-P

On Thu, Mar 15, 2012 at 7:41 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Robin,
>
> I don't think it even shows up in Google becuase of the limited characters
> and exact combination.
>
> I just recognize it because it comes up here on occasion and I answer it
> when I see it.
>
> Eric
>
> On Thu, Mar 15, 2012 at 2:07 PM, Robin <diabeteman at gmail.com> wrote:
>
>> Thanks Eric,
>>
>> I wasn't sure if it was a bug or a PEBKAC :-P
>>
>> I'm back with 3.3 and it works. I should have googled more...
>>
>> R.
>> Le 15 mars 2012 15:56, "Eric" <researcher0x00 at gmail.com> a ?crit :
>>
>> Hi Robin,
>>>
>>> It is a know bug. Ter fixed it then backed it out.
>>>
>>> See:
>>> http://antlr.markmail.org/search/?q=%22void+%3D+null%3B%22#query:%22void%20%3D%20null%3B%22+page:1+mid:wr44syoliwmy6ors+state:results
>>>
>>> You can use http://antlr.markmail.org/ to search previous post at
>>> antlr.org list.
>>>
>>> For your question I used "void = null;"
>>>
>>> Not what you wanted, but it is an answer.
>>>
>>> Try using 3.3.
>>>
>>> Eric
>>>
>>> On Thu, Mar 15, 2012 at 8:19 AM, Robin <diabeteman at gmail.com> wrote:
>>>
>>>> Hello list,
>>>>
>>>> I'm trying to use this grammar
>>>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars with
>>>> antlr-3.4
>>>>
>>>> The grammar compiles into java classes without problems:
>>>>
>>>> $ java -cp /c/integ/antlr/antlr-3.4-complete.jar org.antlr.Tool Java.g
>>>> $ ls -l *.java
>>>> -rw-r--r--    1 S0030382 Administ     159k Mar 15 11:15 JavaLexer.java
>>>> -rw-r--r--    1 S0030382 Administ     1.0M Mar 15 11:15 JavaParser.java
>>>>
>>>>
>>>> But the generated parser has compile errors:
>>>>
>>>> $ javac -cp antlr-3.4-complete.jar JavaParser.java
>>>> JavaParser.java:23842: illegal start of expression
>>>>        void  =null;
>>>>        ^
>>>> 1 error
>>>>
>>>>
>>>> I guess the grammar must be updated in order to work with antlr 3.4.
>>>>
>>>> Can you tell me what must be done?
>>>>
>>>> Thanks in advance :)
>>>> Robin
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>

From roger_alexander at selinc.com  Thu Mar 15 15:23:26 2012
From: roger_alexander at selinc.com (roger_alexander at selinc.com)
Date: Thu, 15 Mar 2012 15:23:26 -0700
Subject: [antlr-interest] Getting error message: Cannot launcht the
	debuggerTab.
Message-ID: <OF3A158C5B.D5FC9261-ON882579C2.0078AE07-882579C2.007AFEDF@selinc.com>

Hi,

I just downloaded and installed ANTLRWorks version 1.4.3 with no problem. 
I'm completly new to ANTLRWorks so I thought that I would start with the 
expression evaluator tutorial [1]. So I downloaded the example grammar [2] 
and opened it in AW (running on Ubuntu 10.10). I then proceeded to follow 
the directions given in the tutorial; but when I tried to execute the 
debugger, I received the following error message:

        Cannot launch the debuggerTab. 
        Timeout waiting to connect to the remote parser.

I Google'd around look for others with similar problems and discovered a 
few from 2009 and 2010. However, none of those had a resolution or work 
around. I tried increasing the time out value as one of the posts 
suggested, but that made no difference. I'm stumped at this point and have 
no idea what to try next. Any suggestions would be greatly appreciated.

Thanks,

Roger Alexander.

[1] http://www.antlr.org/works/help/tutorial/calculator.html
[2] http://www.antlr.org/works/help/tutorial/content/Expr.g

From danieladacruz at gmail.com  Thu Mar 15 15:26:56 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Thu, 15 Mar 2012 22:26:56 +0000
Subject: [antlr-interest] Getting error message: Cannot launcht the
	debuggerTab.
In-Reply-To: <OF3A158C5B.D5FC9261-ON882579C2.0078AE07-882579C2.007AFEDF@selinc.com>
References: <OF3A158C5B.D5FC9261-ON882579C2.0078AE07-882579C2.007AFEDF@selinc.com>
Message-ID: <CACKT26w1BYCrcz1k4VU7AYrV82=hMQo232GZgM=kdzqyqNL-dw@mail.gmail.com>

Hi

I usually have that problem in different circumstances (and in Windows):
1. When I launch the debug and for some reason didn't proceed the run until
the end. It seems that the process for the debugger keeps alive and in the
next run you get that error you mention. Solution: close antlrworks, make
sure that all java processes related with it are killed and reopen
antlrworks.

2. change the default port to a different one.

i hope that this help
daniela

On Thu, Mar 15, 2012 at 22:23, <roger_alexander at selinc.com> wrote:

> Hi,
>
> I just downloaded and installed ANTLRWorks version 1.4.3 with no problem.
> I'm completly new to ANTLRWorks so I thought that I would start with the
> expression evaluator tutorial [1]. So I downloaded the example grammar [2]
> and opened it in AW (running on Ubuntu 10.10). I then proceeded to follow
> the directions given in the tutorial; but when I tried to execute the
> debugger, I received the following error message:
>
>        Cannot launch the debuggerTab.
>        Timeout waiting to connect to the remote parser.
>
> I Google'd around look for others with similar problems and discovered a
> few from 2009 and 2010. However, none of those had a resolution or work
> around. I tried increasing the time out value as one of the posts
> suggested, but that made no difference. I'm stumped at this point and have
> no idea what to try next. Any suggestions would be greatly appreciated.
>
> Thanks,
>
> Roger Alexander.
>
> [1] http://www.antlr.org/works/help/tutorial/calculator.html
> [2] http://www.antlr.org/works/help/tutorial/content/Expr.g
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From roger_alexander at selinc.com  Thu Mar 15 15:36:02 2012
From: roger_alexander at selinc.com (roger_alexander at selinc.com)
Date: Thu, 15 Mar 2012 15:36:02 -0700
Subject: [antlr-interest] Getting error message: Cannot launcht the
	debuggerTab.
In-Reply-To: <CACKT26w1BYCrcz1k4VU7AYrV82=hMQo232GZgM=kdzqyqNL-dw@mail.gmail.com>
References: <OF3A158C5B.D5FC9261-ON882579C2.0078AE07-882579C2.007AFEDF@selinc.com>
	<CACKT26w1BYCrcz1k4VU7AYrV82=hMQo232GZgM=kdzqyqNL-dw@mail.gmail.com>
Message-ID: <OF494B9AFB.8AC92E05-ON882579C2.007BECF6-882579C2.007C263B@selinc.com>

Hi Daniela.

Thanks for the response. I had tried what you suggested but no joy. 
However, it occurred to me that the problem might be that I am running 
Java 1.7. So changed AW's configuration to use Java 1.6, and it worked!

Again, thanks for your response.

Roger.



From:   Daniela da Cruz <danieladacruz at gmail.com>
To:     roger_alexander at selinc.com
Cc:     antlr-interest at antlr.org
Date:   03/15/2012 03:27 PM
Subject:        Re: [antlr-interest] Getting error message: Cannot launcht 
the debuggerTab.



Hi

I usually have that problem in different circumstances (and in Windows):
1. When I launch the debug and for some reason didn't proceed the run 
until the end. It seems that the process for the debugger keeps alive and 
in the next run you get that error you mention. Solution: close 
antlrworks, make sure that all java processes related with it are killed 
and reopen antlrworks.

2. change the default port to a different one.

i hope that this help
daniela

On Thu, Mar 15, 2012 at 22:23, <roger_alexander at selinc.com> wrote:
Hi,

I just downloaded and installed ANTLRWorks version 1.4.3 with no problem.
I'm completly new to ANTLRWorks so I thought that I would start with the
expression evaluator tutorial [1]. So I downloaded the example grammar [2]
and opened it in AW (running on Ubuntu 10.10). I then proceeded to follow
the directions given in the tutorial; but when I tried to execute the
debugger, I received the following error message:

       Cannot launch the debuggerTab.
       Timeout waiting to connect to the remote parser.

I Google'd around look for others with similar problems and discovered a
few from 2009 and 2010. However, none of those had a resolution or work
around. I tried increasing the time out value as one of the posts
suggested, but that made no difference. I'm stumped at this point and have
no idea what to try next. Any suggestions would be greatly appreciated.

Thanks,

Roger Alexander.

[1] http://www.antlr.org/works/help/tutorial/calculator.html
[2] http://www.antlr.org/works/help/tutorial/content/Expr.g

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From danieladacruz at gmail.com  Thu Mar 15 15:53:28 2012
From: danieladacruz at gmail.com (Daniela da Cruz)
Date: Thu, 15 Mar 2012 22:53:28 +0000
Subject: [antlr-interest] Getting error message: Cannot launcht the
	debuggerTab.
In-Reply-To: <OF494B9AFB.8AC92E05-ON882579C2.007BECF6-882579C2.007C263B@selinc.com>
References: <OF3A158C5B.D5FC9261-ON882579C2.0078AE07-882579C2.007AFEDF@selinc.com>
	<CACKT26w1BYCrcz1k4VU7AYrV82=hMQo232GZgM=kdzqyqNL-dw@mail.gmail.com>
	<OF494B9AFB.8AC92E05-ON882579C2.007BECF6-882579C2.007C263B@selinc.com>
Message-ID: <CACKT26y+eQdJ1SS4kUPK5sDHqJS=TYBHrM48jfEgf9c1o12LCA@mail.gmail.com>

I had the same problem yesterday with some students. Antlrworks work with
java 1.7 but only when is the only version installed.

daniela

On Thu, Mar 15, 2012 at 22:36, <roger_alexander at selinc.com> wrote:

> Hi Daniela.
>
> Thanks for the response. I had tried what you suggested but no joy.
> However, it occurred to me that the problem might be that I am running Java
> 1.7. So changed AW's configuration to use Java 1.6, and it worked!
>
> Again, thanks for your response.
>
> Roger.
>
>
>
> From:        Daniela da Cruz <danieladacruz at gmail.com>
> To:        roger_alexander at selinc.com
> Cc:        antlr-interest at antlr.org
> Date:        03/15/2012 03:27 PM
> Subject:        Re: [antlr-interest] Getting error message: Cannot
> launcht the debuggerTab.
> ------------------------------
>
>
>
> Hi
>
> I usually have that problem in different circumstances (and in Windows):
> 1. When I launch the debug and for some reason didn't proceed the run
> until the end. It seems that the process for the debugger keeps alive and
> in the next run you get that error you mention. Solution: close antlrworks,
> make sure that all java processes related with it are killed and reopen
> antlrworks.
>
> 2. change the default port to a different one.
>
> i hope that this help
> daniela
>
> On Thu, Mar 15, 2012 at 22:23, <*roger_alexander at selinc.com*<roger_alexander at selinc.com>>
> wrote:
> Hi,
>
> I just downloaded and installed ANTLRWorks version 1.4.3 with no problem.
> I'm completly new to ANTLRWorks so I thought that I would start with the
> expression evaluator tutorial [1]. So I downloaded the example grammar [2]
> and opened it in AW (running on Ubuntu 10.10). I then proceeded to follow
> the directions given in the tutorial; but when I tried to execute the
> debugger, I received the following error message:
>
>        Cannot launch the debuggerTab.
>        Timeout waiting to connect to the remote parser.
>
> I Google'd around look for others with similar problems and discovered a
> few from 2009 and 2010. However, none of those had a resolution or work
> around. I tried increasing the time out value as one of the posts
> suggested, but that made no difference. I'm stumped at this point and have
> no idea what to try next. Any suggestions would be greatly appreciated.
>
> Thanks,
>
> Roger Alexander.
>
> [1] *http://www.antlr.org/works/help/tutorial/calculator.html*<http://www.antlr.org/works/help/tutorial/calculator.html>
> [2] *http://www.antlr.org/works/help/tutorial/content/Expr.g*<http://www.antlr.org/works/help/tutorial/content/Expr.g>
>
> List: *http://www.antlr.org/mailman/listinfo/antlr-interest*<http://www.antlr.org/mailman/listinfo/antlr-interest>
> Unsubscribe: *
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address*<http://www.antlr.org/mailman/options/antlr-interest/your-email-address>
>
>

From kierans777 at gmail.com  Thu Mar 15 16:10:17 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Fri, 16 Mar 2012 10:10:17 +1100
Subject: [antlr-interest] Java parser not compiling
In-Reply-To: <CAN45N12RNSTNkwyd2awNAYfwpp1D1O4+XZRWfM6ieA8Yg9YN3g@mail.gmail.com>
References: <CA+_G_aqALo2aK=dffHkFG0f3C5fp++8V9RNpyJv2VkztyyWb=w@mail.gmail.com>
	<CAN45N12RNSTNkwyd2awNAYfwpp1D1O4+XZRWfM6ieA8Yg9YN3g@mail.gmail.com>
Message-ID: <4F6276D9.1010103@gmail.com>

Eric (and list),
   Robin's issue appears to be for the same reason as my problem (see 
http://antlr.markmail.org/search/?q=backtracking+and+labels#query:backtracking%20and%20labels+page:1+mid:mndxvuoyyfivor6y+state:results 
)

Ter's reason for backing out his fix is that "Sam Harwell is fixing 
differently."

Is it possible to put the fix back in (or at least send a patch of the 
changes to the list) temporarily until Sam's fixes are integrated? Doing 
so would allow those of us who are blocked by this bug to continue (as 
it's been ~5 months).  I'm quite happy to run with my own patched 
version of Antlr until an official release can be made, but I don't want 
to have to revert back to Antlr 3.3.

Cheers,

On 23/07/64 5:59 AM, Eric wrote:
> Hi Robin,
>
> It is a know bug. Ter fixed it then backed it out.
>
> See:
> http://antlr.markmail.org/search/?q=%22void+%3D+null%3B%22#query:%22void%20%3D%20null%3B%22+page:1+mid:wr44syoliwmy6ors+state:results
>
> You can use http://antlr.markmail.org/ to search previous post at
> antlr.orglist.
>
> For your question I used "void = null;"
>
> Not what you wanted, but it is an answer.
>
> Try using 3.3.
>
> Eric
>
> On Thu, Mar 15, 2012 at 8:19 AM, Robin<diabeteman at gmail.com>  wrote:
>
>> Hello list,
>>
>> I'm trying to use this grammar
>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars with antlr-3.4
>>
>> The grammar compiles into java classes without problems:
>>
>> $ java -cp /c/integ/antlr/antlr-3.4-complete.jar org.antlr.Tool Java.g
>> $ ls -l *.java
>> -rw-r--r--    1 S0030382 Administ     159k Mar 15 11:15 JavaLexer.java
>> -rw-r--r--    1 S0030382 Administ     1.0M Mar 15 11:15 JavaParser.java
>>
>>
>> But the generated parser has compile errors:
>>
>> $ javac -cp antlr-3.4-complete.jar JavaParser.java
>> JavaParser.java:23842: illegal start of expression
>>         void  =null;
>>         ^
>> 1 error
>>
>>
>> I guess the grammar must be updated in order to work with antlr 3.4.
>>
>> Can you tell me what must be done?
>>
>> Thanks in advance :)
>> Robin
>>

From kirby.bohling at gmail.com  Thu Mar 15 16:44:27 2012
From: kirby.bohling at gmail.com (Kirby Bohling)
Date: Thu, 15 Mar 2012 18:44:27 -0500
Subject: [antlr-interest] Java parser not compiling
In-Reply-To: <4F6276D9.1010103@gmail.com>
References: <CA+_G_aqALo2aK=dffHkFG0f3C5fp++8V9RNpyJv2VkztyyWb=w@mail.gmail.com>
	<CAN45N12RNSTNkwyd2awNAYfwpp1D1O4+XZRWfM6ieA8Yg9YN3g@mail.gmail.com>
	<4F6276D9.1010103@gmail.com>
Message-ID: <CA+bn5rzi6weO-nehgLbSDQmzcMOTVef9VVQpvfuc4PK+RaoEDw@mail.gmail.com>

Not that I want to advocate forking, but with git, it should be easy
to maintain ANTLR patches for bugfixes.  I regularly maintain 3rd
party code in local git repos with bug fixes which haven't been put
into a mainline release.  It easy for folks to pickup fixes they want,
and maintain them in tree, with history, and provenance about where
all the code came from.  Publish to github or bitbucket, and we it'd
be a service to the community.

Kirby


On Thu, Mar 15, 2012 at 6:10 PM, Kieran Simpson <kierans777 at gmail.com> wrote:
> Eric (and list),
> ? Robin's issue appears to be for the same reason as my problem (see
> http://antlr.markmail.org/search/?q=backtracking+and+labels#query:backtracking%20and%20labels+page:1+mid:mndxvuoyyfivor6y+state:results
> )
>
> Ter's reason for backing out his fix is that "Sam Harwell is fixing
> differently."
>
> Is it possible to put the fix back in (or at least send a patch of the
> changes to the list) temporarily until Sam's fixes are integrated? Doing
> so would allow those of us who are blocked by this bug to continue (as
> it's been ~5 months). ?I'm quite happy to run with my own patched
> version of Antlr until an official release can be made, but I don't want
> to have to revert back to Antlr 3.3.
>
> Cheers,
>
> On 23/07/64 5:59 AM, Eric wrote:
>> Hi Robin,
>>
>> It is a know bug. Ter fixed it then backed it out.
>>
>> See:
>> http://antlr.markmail.org/search/?q=%22void+%3D+null%3B%22#query:%22void%20%3D%20null%3B%22+page:1+mid:wr44syoliwmy6ors+state:results
>>
>> You can use http://antlr.markmail.org/ to search previous post at
>> antlr.orglist.
>>
>> For your question I used "void = null;"
>>
>> Not what you wanted, but it is an answer.
>>
>> Try using 3.3.
>>
>> Eric
>>
>> On Thu, Mar 15, 2012 at 8:19 AM, Robin<diabeteman at gmail.com> ?wrote:
>>
>>> Hello list,
>>>
>>> I'm trying to use this grammar
>>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars with antlr-3.4
>>>
>>> The grammar compiles into java classes without problems:
>>>
>>> $ java -cp /c/integ/antlr/antlr-3.4-complete.jar org.antlr.Tool Java.g
>>> $ ls -l *.java
>>> -rw-r--r-- ? ?1 S0030382 Administ ? ? 159k Mar 15 11:15 JavaLexer.java
>>> -rw-r--r-- ? ?1 S0030382 Administ ? ? 1.0M Mar 15 11:15 JavaParser.java
>>>
>>>
>>> But the generated parser has compile errors:
>>>
>>> $ javac -cp antlr-3.4-complete.jar JavaParser.java
>>> JavaParser.java:23842: illegal start of expression
>>> ? ? ? ? void ?=null;
>>> ? ? ? ? ^
>>> 1 error
>>>
>>>
>>> I guess the grammar must be updated in order to work with antlr 3.4.
>>>
>>> Can you tell me what must be done?
>>>
>>> Thanks in advance :)
>>> Robin
>>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From mike at 7f.com  Thu Mar 15 21:03:44 2012
From: mike at 7f.com (Michael Roberts)
Date: Thu, 15 Mar 2012 21:03:44 -0700
Subject: [antlr-interest] antlrworks confused by imaginary tokens?
Message-ID: <CAJ4XrpXczHyD0PY=z92nxQp_PvzV3eOG+oSOhfNMoL-0+OMjrg@mail.gmail.com>

I've been happily hacking on my little grammar using antlrworks.
 Everything was going swimmingly until I introduced a section of imaginary
tokens for use in rewrite rules.  For some reason, antlr/antlrworks really
wanted this section of imaginary tokens at the start of the file, directly
behind the options section.  It didn't seem to like it in other places, and
would not recognize the imaginary tokens otherwise.

However, oddly, it didn't like it if I defined my regular tokens inside the
tokens sections and refused to recognize them, flagging mismatched token
exceptions all over the place.  So, accepting defeat, I moved these
non-imaginary tokens back to the end of the file, where they'd previously
been living.  No missing tokens, everything generates fine now.

However, when I attempt to debug my parser, the generated test code
references the first non-imaginary token it finds as the top level
construct, in my case CLOSE_PAREN, and not my top-level compilationUnit
production (which is ahead of it in the file).  Thus:

public class __Test__ {

    public static void main(String args[]) throws Exception {
        JLG2Lexer lex = new JLG2Lexer(new
ANTLRFileStream("C:\\src\\Core\\src\\org\\veve\\reflect\\interpreter\\output\\__Test___input.txt",
"UTF8"));
        CommonTokenStream tokens = new CommonTokenStream(lex);

        JLG2Parser g = new JLG2Parser(tokens, 49100, null);
        try {
            g.CLOSE_PAREN();   // <-- BAD, was expecting to see
compilationUnit here ...
        } catch (RecognitionException e) {
            e.printStackTrace();
        }
    }
}

So, my main question is ..  why doesn't this form of token definition
(below) work:


tokens
{

// Imaginary tokens for AST rewrite ops
IDENTIFIER_PATH;
INVOCATION;
STATEMENT_BLOCK;
AMPERSAND_INVOCATION;
INVOCATION_STAT;
OBJECT;
ARRAY;
ELEMENT_STAT;
MEMBERS;
PAIR;
PAIR_LIST;
METHOD_INVOCATION;
NEW_COMMAND;
STRING;
NUMBER;
ARRAY;
BOOLEAN;
NULL;
PATH;

// Real, defined tokens
CLOSE_PAREN : ')';
AMPERSAND : '@';
WS       :           (' '|'\t'|'\f'|'\n'|'\r')+{ skip(); };
COLON : ':';
EQUALS : '=';
INJECT : '<-';
COMMA : ',';
SLASH : '/';
OPEN_PAREN :    '(' ;
OPEN_BRACE   : '{';
CLOSE_BRACE
:   '}';
DOT
: '.';
SEMI_COLON
: ';';
BLOCK :   '|' ;
}

is the token section just for imaginary tokens, then, and, if not how do I
define regular tokens in it .. and, in essence, what could I possibly be
doing to so confuse the test jig generator code so that it's generating
something silly?

MR

From mike at 7f.com  Thu Mar 15 21:09:36 2012
From: mike at 7f.com (Michael Roberts)
Date: Thu, 15 Mar 2012 21:09:36 -0700
Subject: [antlr-interest] Getting error message: Cannot launcht the
	debuggerTab.
In-Reply-To: <CACKT26w1BYCrcz1k4VU7AYrV82=hMQo232GZgM=kdzqyqNL-dw@mail.gmail.com>
References: <OF3A158C5B.D5FC9261-ON882579C2.0078AE07-882579C2.007AFEDF@selinc.com>
	<CACKT26w1BYCrcz1k4VU7AYrV82=hMQo232GZgM=kdzqyqNL-dw@mail.gmail.com>
Message-ID: <CAJ4XrpWUqEVaNqfSf_mZx98a9D=8ys-rhXqD77ABN5iUEf-Gkw@mail.gmail.com>

I see exactly the same issue running antlrworks on jdk 1.6.30 (32bit) on
windows 7 64 bit.  My solution was the same as Daniela's before.  Looks
like it's eating ports in the event that something fails.

MR

On Thu, Mar 15, 2012 at 3:26 PM, Daniela da Cruz <danieladacruz at gmail.com>wrote:

> Hi
>
> I usually have that problem in different circumstances (and in Windows):
> 1. When I launch the debug and for some reason didn't proceed the run until
> the end. It seems that the process for the debugger keeps alive and in the
> next run you get that error you mention. Solution: close antlrworks, make
> sure that all java processes related with it are killed and reopen
> antlrworks.
>
> 2. change the default port to a different one.
>
> i hope that this help
> daniela
>
> On Thu, Mar 15, 2012 at 22:23, <roger_alexander at selinc.com> wrote:
>
> > Hi,
> >
> > I just downloaded and installed ANTLRWorks version 1.4.3 with no problem.
> > I'm completly new to ANTLRWorks so I thought that I would start with the
> > expression evaluator tutorial [1]. So I downloaded the example grammar
> [2]
> > and opened it in AW (running on Ubuntu 10.10). I then proceeded to follow
> > the directions given in the tutorial; but when I tried to execute the
> > debugger, I received the following error message:
> >
> >        Cannot launch the debuggerTab.
> >        Timeout waiting to connect to the remote parser.
> >
> > I Google'd around look for others with similar problems and discovered a
> > few from 2009 and 2010. However, none of those had a resolution or work
> > around. I tried increasing the time out value as one of the posts
> > suggested, but that made no difference. I'm stumped at this point and
> have
> > no idea what to try next. Any suggestions would be greatly appreciated.
> >
> > Thanks,
> >
> > Roger Alexander.
> >
> > [1] http://www.antlr.org/works/help/tutorial/calculator.html
> > [2] http://www.antlr.org/works/help/tutorial/content/Expr.g
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From Stefan.Maetje at esd-electronics.com  Fri Mar 16 05:22:02 2012
From: Stefan.Maetje at esd-electronics.com (Stefan =?iso-8859-1?b?TeR0amU=?=)
Date: Fri, 16 Mar 2012 13:22:02 +0100
Subject: [antlr-interest] antlrworks confused by imaginary tokens?
In-Reply-To: <CAJ4XrpXczHyD0PY=z92nxQp_PvzV3eOG+oSOhfNMoL-0+OMjrg@mail.gmail.com>
	(from mike@7f.com on Fri Mar 16 05:03:44 2012)
Message-ID: <1331900522.4606.0@pc-stefanm>

Hi,

some hints on defining imaginary and real tokens in an ANTLR grammar.

The ANTLR grammar for *.g files prescribes a certain order of sections in the 
grammar file. Therefore you must follow this order in your grammar file. See 
this short excerpt from the ANTLR grammar for ANTLR grammar files:

grammarDef
    :   DOC_COMMENT?
        (   'lexer'  {gtype=LEXER_GRAMMAR;}    // pure lexer
        |   'parser' {gtype=PARSER_GRAMMAR;}   // pure parser
        |   'tree'   {gtype=TREE_GRAMMAR;}     // a tree parser
        |            {gtype=COMBINED_GRAMMAR;} // merged parser/lexer
        )
        g='grammar' id ';' optionsSpec? tokensSpec? attrScope* action*
        rule+
        EOF
        -> ^( {adaptor.create(gtype,$g)}
                  id DOC_COMMENT? optionsSpec? tokensSpec? attrScope* action* 
rule+
                )
    ;

You see the tokensSpec follows the optionsSpec and so on ...

The token section should look like the following example:

token {
	VIRTUAL_TOKEN1;
	VIRTUAL_TOKEN2;
	REAL_TEXT = 'TEXT';	// Only a single char / string allowed!
	REAL_INFO = 'INFO';
}

Please observe the fact that between the token name and the token text there 
is an equals ("=") sign! This is an deviation from the syntax of a lexer rule 
to define a token. 

Please also observe that in the token section only a single string or char 
literal is allowed. If you need something like a keyword which may have an 
abbreviated form then you must use a lexer rule like this:

KW_IDENT: ('IDENT' | 'IDENTICAL');

If you look at these rules you see that your posted tokens section violates 
these rules.

I hope that helps,
	Stefan

PS.: You may look for the ANTLR grammar for grammar files in the source 
distribution. Look for file ./antlr-3.4/tool/src/main/antlr3/org/antlr/
grammar/v3/ANTLRv3.g


Am 16.03.2012 05:03:44 schrieb(en) Michael Roberts:
> I've been happily hacking on my little grammar using antlrworks.
>  Everything was going swimmingly until I introduced a section of imaginary
> tokens for use in rewrite rules.  For some reason, antlr/antlrworks really
> wanted this section of imaginary tokens at the start of the file, directly
> behind the options section.  It didn't seem to like it in other places, and
> would not recognize the imaginary tokens otherwise.
> 
> However, oddly, it didn't like it if I defined my regular tokens inside the
> tokens sections and refused to recognize them, flagging mismatched token
> exceptions all over the place.  So, accepting defeat, I moved these
> non-imaginary tokens back to the end of the file, where they'd previously
> been living.  No missing tokens, everything generates fine now.
> 
> However, when I attempt to debug my parser, the generated test code
> references the first non-imaginary token it finds as the top level
> construct, in my case CLOSE_PAREN, and not my top-level compilationUnit
> production (which is ahead of it in the file).  Thus:
> 
> public class __Test__ {
> 
>     public static void main(String args[]) throws Exception {
>         JLG2Lexer lex = new JLG2Lexer(new
> ANTLRFileStream("C:\\src\\Core\\src\\org\\veve\\reflect\\interpreter\\output
> \\__Test___input.txt",
> "UTF8"));
>         CommonTokenStream tokens = new CommonTokenStream(lex);
> 
>         JLG2Parser g = new JLG2Parser(tokens, 49100, null);
>         try {
>             g.CLOSE_PAREN();   // <-- BAD, was expecting to see
> compilationUnit here ...
>         } catch (RecognitionException e) {
>             e.printStackTrace();
>         }
>     }
> }
> 
> So, my main question is ..  why doesn't this form of token definition
> (below) work:
> 
> 
> tokens
> {
> 
> // Imaginary tokens for AST rewrite ops
> IDENTIFIER_PATH;
> INVOCATION;
> STATEMENT_BLOCK;
> AMPERSAND_INVOCATION;
> INVOCATION_STAT;
> OBJECT;
> ARRAY;
> ELEMENT_STAT;
> MEMBERS;
> PAIR;
> PAIR_LIST;
> METHOD_INVOCATION;
> NEW_COMMAND;
> STRING;
> NUMBER;
> ARRAY;
> BOOLEAN;
> NULL;
> PATH;
> 
> // Real, defined tokens
> CLOSE_PAREN : ')';
> AMPERSAND : '@';
> WS       :           (' '|'\t'|'\f'|'\n'|'\r')+{ skip(); };
> COLON : ':';
> EQUALS : '=';
> INJECT : '<-';
> COMMA : ',';
> SLASH : '/';
> OPEN_PAREN :    '(' ;
> OPEN_BRACE   : '{';
> CLOSE_BRACE
> :   '}';
> DOT
> : '.';
> SEMI_COLON
> : ';';
> BLOCK :   '|' ;
> }
> 
> is the token section just for imaginary tokens, then, and, if not how do I
> define regular tokens in it .. and, in essence, what could I possibly be
> doing to so confuse the test jig generator code so that it's generating
> something silly?
> 
> MR
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-
> address
> 
> 



From researcher0x00 at gmail.com  Fri Mar 16 06:42:50 2012
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 16 Mar 2012 09:42:50 -0400
Subject: [antlr-interest] Help with compressing trees and custom nodes
In-Reply-To: <CA+yzqf8smzKt1e3iafodLbbKQ43dwxbnd0zJSL3J-ho5a9QvjA@mail.gmail.com>
References: <CA+yzqf8smzKt1e3iafodLbbKQ43dwxbnd0zJSL3J-ho5a9QvjA@mail.gmail.com>
Message-ID: <CAN45N13LUodwbu6sO4src20Pt9-9YLQtCX9nKxu0N4L4vmOFmg@mail.gmail.com>

Hi Todd,


This is just a suggestion and not the only possible answer.

The easiest way for me to work with AST transformations is to just view the
AST as an n-ary tree and call the tree API directly.

Here are some example methods I use. This is C# code for the ANTLR 3 C#
version; you will obviously need to translate to your target language.

        private static void ReplaceNode(CommonTree node, int tokenId,
string text)
        {
            // This method does not set token StatIndex, token StopIndex,
token Line, or token charPostionInLine
            ITreeAdaptor adaptor = new CommonTreeAdaptor();
            CommonTree parent = (CommonTree)node.Parent;
            CommonToken newToken = new CommonToken(tokenId);
            CommonTree newNode = (CommonTree)adaptor.Create(newToken, text);
            int index = node.ChildIndex;
            parent.DeleteChild(index);
            parent.InsertChild(index, newNode);
            Debug.Assert(newToken.Type == tokenId);
            Debug.Assert(newNode.Text == text);
            Debug.Assert(newNode.Parent != null);
            Debug.Assert(newNode.ChildIndex == index);
        }

       private static void CreateEpsilonRule(CommonTree rules, TokenMap
tokenMap)
        {
            int ruleTokenId = tokenMap.GetId("RULE");
            int idTokenId = tokenMap.GetId("ID");
            int alternativesTokenId = tokenMap.GetId("ALTERNATIVES");
            int alternativeTokenId = tokenMap.GetId("ALT");
            int stringLiteralTokenId = tokenMap.GetId("STRING_LITERAL");
            int ruleRefTokenId = tokenMap.GetId("RULE_REF");
            ITreeAdaptor adaptor = new CommonTreeAdaptor();
            epsilonRuleMade = true;
            string rule1Name = "EPSILON";
            CommonToken newRule1Token = new CommonToken(ruleTokenId);
            CommonTree newRule = (CommonTree)adaptor.Create(newRule1Token,
"RULE");
            rules.AddChild(newRule);
            CommonToken rule1IdToken = new CommonToken(idTokenId);
            CommonTree rule1IdNode =
(CommonTree)adaptor.Create(rule1IdToken, rule1Name);
            newRule.AddChild(rule1IdNode);
            CommonToken alternatesToken = new
CommonToken(alternativesTokenId, "ALTERNATIVES");
            CommonTree alternatesNode =
(CommonTree)adaptor.Create(alternatesToken);
            newRule.AddChild(alternatesNode);
            CommonToken alternateToken = new
CommonToken(alternativeTokenId, "ALT");
            CommonTree alternateNode =
(CommonTree)adaptor.Create(alternateToken);
            alternatesNode.AddChild(alternateNode);
            CommonToken charLiteralToken = new
CommonToken(stringLiteralTokenId, string.Empty);
            CommonTree charLiteralNode =
(CommonTree)adaptor.Create(charLiteralToken);
            alternateNode.AddChild(charLiteralNode);
            newRule.FreshenParentAndChildIndexesDeeply();
        }

        private static void FindRuleRefs(CommonTree node,
SortedList<string, List<CommonTree>> ruleRefs, int ruleRefTokenId)
        {
            if (node.Type == ruleRefTokenId)
            {
                List<CommonTree> ruleRefList;
                if (!ruleRefs.TryGetValue(node.Text, out ruleRefList))
                {
                    ruleRefList = new List<CommonTree>();
                    ruleRefs[node.Text] = ruleRefList;
                }
                ruleRefList.Add(node);
            }
            if (node.Children != null)
            {
                int childCount = node.Children.Count;
                for (int index = 0; index < childCount; index++)
                {
                    CommonTree visitNode = (CommonTree)node.Children[index];
                    FindRuleRefs(visitNode, ruleRefs, ruleRefTokenId);
                }
            }
        }

        private static void ChangeToken(CommonTree node, int tokenId,
string text)
        {
            // This method does not perserve token StatIndex, token
StopIndex, token Line, or token charPostionInLine
            ITreeAdaptor adaptor = new CommonTreeAdaptor();
            CommonTree parent = (CommonTree)node.Parent;
            CommonToken newToken = new CommonToken(tokenId);
            CommonTree newNode = (CommonTree)adaptor.Create(newToken, text);
            int index = node.ChildIndex;
            if (node.Children != null)
            {
                // Note: <Node>.Children is read only, so newNode.Children
= node.Children; is not allowed.
                newNode.AddChildren(node.Children);
            }
            parent.DeleteChild(index);
            parent.InsertChild(index, newNode);
            Debug.Assert(newToken.Type == tokenId);
            Debug.Assert(newNode.Text == text);
            Debug.Assert(newNode.Parent != null);
            Debug.Assert(newNode.ChildIndex == index);
            if (newNode.Children != null)
            {
                Debug.Assert(newNode.Children.Count == node.Children.Count);
            }
        }

And here is the TokenMap class used by the methods

    public class TokenMap
    {
        private SortedList<int, string> ids = new SortedList<int, string>();
        private SortedList<string, int> names = new SortedList<string,
int>();
        private string tokenFilename;
        public int NextId
        {
            get
            {
                int value = ids.Count;
                string name;
                while (this.ids.TryGetValue(value, out name))
                {
                    value++;
                }
                return value;
            }
        }
        public string this[int tokenType]
        {
            get
            {
                string result = string.Empty;
                if (!(ids.TryGetValue(tokenType, out result)))
                {
                    //Debug.Fail("How did we get here?");
                }
                return result;
            }
        }
        public TokenMap(string tokenFilename)
        {
            Debug.Assert(!string.IsNullOrWhiteSpace(tokenFilename));
            this.tokenFilename = tokenFilename;
            using (StreamReader streamReader = new
StreamReader(this.tokenFilename))
            {
                string line = streamReader.ReadLine();
                while (line != null)
                {
                    string[] tokenParts = line.Split('=');
                    string name = string.Empty;
                    string indexText = string.Empty;
                    if (tokenParts.Length == 2)
                    {
                        name = tokenParts[0];
                        indexText = tokenParts[1];
                    }
                    else
                    {
                        // If more than one '=' then split on last '='
                        // i.e. '>='=5
                        //  '=='=6
                        int lastEqualPos = line.LastIndexOf('=');
                        name = line.Substring(0, lastEqualPos - 1);
                        int length = line.Length - (lastEqualPos + 1);
                        indexText = line.Substring(lastEqualPos + 1,
length);
                    }
                    int index = -1;
                    if (int.TryParse(indexText, out index))
                    {
                        if (!name.StartsWith("T__"))
                        {
                            if (!ids.ContainsKey(index))
                            {
                                ids.Add(index, name);
                            }
                            //else
                            //{
                            //    Console.WriteLine("Duplicate key: " +
index);
                            //    Debug.Fail("How did we get here?");
                            //}
                        }
                        else
                        {
                            // Do nothing.
                        }
                    }
                    else
                    {
                        Console.WriteLine("Unable to parse to int: '" +
indexText + "'");
                        Debug.Fail("How did we get here?");
                    }
                    line = streamReader.ReadLine();
                }
            }
            BuildNamesIndex();
        }
        private void BuildNamesIndex()
        {
            this.names.Clear();
            foreach (KeyValuePair<int, string> kvp in this.ids)
            {
                this.names.Add(kvp.Value, kvp.Key);
            }
        }
        public bool ContainsKey(int tokenType)
        {
            return ids.ContainsKey(tokenType);
        }
        public int GetId(string name)
        {
            int value = -1;
            if (!this.names.TryGetValue(name, out value))
            {
                value = -1;
            }
            return value;
        }
        public string ToListing()
        {
            StringBuilder lines = new StringBuilder();
            lines.AppendLine("Token map for " + this.tokenFilename);
            lines.AppendLine("Id  Name");
            foreach (KeyValuePair<int, string> kvp in this.ids)
            {
                string line = string.Format("{0,3} {1}", kvp.Key,
kvp.Value);
                lines.AppendLine(line);
            }
            return lines.ToString();
        }
    }

 Hope that helps, Eric




On Thu, Mar 15, 2012 at 2:02 PM, Todd Nine <tnine at apigee.com> wrote:

> Hi guys.  I'm new to antlr and have a question regarding tree compressions.
>  My ultimate goal is to use my grammar to create an AST.  From this AST I
> then will utilize the visitor pattern to walk the tree and evaluate my
> results for our Cassandra query engine.  I'm having issues with my tree
> having a lot of additional nodes that don't have 2 children due to operator
> precedence.  My questions are below.
>
> 1. How can I create a different node class for each element?  For instance,
> && ad || need their own nodes, as well as 'NOT' 'within' etc
>
> 2. How can I collapse tree elements that only have 1 child.  I.E turn orexp
> -> andexp -> notexp -> andexp into just an andexp node
>
>
> I've read all the documentation here, but I have a few things that aren't
> clear.
>
> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>
> When creating my own node classes, it's not clear to me if I need to
> subclass an antlr node class, or just create any class.  Are there any
> examples on both compression and creating custom classes?
>
>
> Thanks,
>
> Todd
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From tnine at apigee.com  Fri Mar 16 10:38:49 2012
From: tnine at apigee.com (Todd Nine)
Date: Fri, 16 Mar 2012 10:38:49 -0700
Subject: [antlr-interest] Help with compressing trees and custom nodes
In-Reply-To: <CAN45N13LUodwbu6sO4src20Pt9-9YLQtCX9nKxu0N4L4vmOFmg@mail.gmail.com>
References: <CA+yzqf8smzKt1e3iafodLbbKQ43dwxbnd0zJSL3J-ho5a9QvjA@mail.gmail.com>
	<CAN45N13LUodwbu6sO4src20Pt9-9YLQtCX9nKxu0N4L4vmOFmg@mail.gmail.com>
Message-ID: <CA+yzqf8YCA2fA2q_wZ82s3g3StPmv_B8U01wA=m-98fgUiuuwQ@mail.gmail.com>

Hi Eric,
  Thank you for the help.  I'm a bit confused on how to actually populate
the object itself.  Given that this will be open source, I've added my code
here.

https://gist.github.com/ee5ef357b9261ff1bfa9

I've also read this book.

http://pragprog.com/book/tpdsl/language-implementation-patterns

Specifically the section on Irregular Heterogeneous AST.  It has several
different object structures which is exactly what to create a clean AST.
 However the chapter doesn't actually show you HOW to use the grammer to
create these trees.  There's information on the objects for the nodes, and
the grammer, but not now to link to the two.  Is it not possible to do
without creating custom code in my grammer for each type as you have done?

It seems I'm going to need to rewrite operations from this.

equalityop :

  property ( LT<LessThan>

| LTE <LessThanEqual>^

| EQ <Equal>^

| GT <GreaterThan>^

| GTE <GreaterThanEqual>^) value {



 };


To this


lessoperation:

  property LT value {

   //create the LT node here

};


equalityop:

 lessthan | lessthanequal ;


Is there any other way to do this?  I'm using java and antlr 3.4.

Thanks,

Todd




On Fri, Mar 16, 2012 at 6:42 AM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Todd,
>
>
> This is just a suggestion and not the only possible answer.
>
> The easiest way for me to work with AST transformations is to just view
> the AST as an n-ary tree and call the tree API directly.
>
> Here are some example methods I use. This is C# code for the ANTLR 3 C#
> version; you will obviously need to translate to your target language.
>
>         private static void ReplaceNode(CommonTree node, int tokenId,
> string text)
>         {
>             // This method does not set token StatIndex, token StopIndex,
> token Line, or token charPostionInLine
>             ITreeAdaptor adaptor = new CommonTreeAdaptor();
>             CommonTree parent = (CommonTree)node.Parent;
>             CommonToken newToken = new CommonToken(tokenId);
>             CommonTree newNode = (CommonTree)adaptor.Create(newToken,
> text);
>             int index = node.ChildIndex;
>             parent.DeleteChild(index);
>             parent.InsertChild(index, newNode);
>             Debug.Assert(newToken.Type == tokenId);
>             Debug.Assert(newNode.Text == text);
>             Debug.Assert(newNode.Parent != null);
>             Debug.Assert(newNode.ChildIndex == index);
>         }
>
>        private static void CreateEpsilonRule(CommonTree rules, TokenMap
> tokenMap)
>         {
>             int ruleTokenId = tokenMap.GetId("RULE");
>             int idTokenId = tokenMap.GetId("ID");
>             int alternativesTokenId = tokenMap.GetId("ALTERNATIVES");
>             int alternativeTokenId = tokenMap.GetId("ALT");
>             int stringLiteralTokenId = tokenMap.GetId("STRING_LITERAL");
>             int ruleRefTokenId = tokenMap.GetId("RULE_REF");
>             ITreeAdaptor adaptor = new CommonTreeAdaptor();
>             epsilonRuleMade = true;
>             string rule1Name = "EPSILON";
>             CommonToken newRule1Token = new CommonToken(ruleTokenId);
>             CommonTree newRule = (CommonTree)adaptor.Create(newRule1Token,
> "RULE");
>             rules.AddChild(newRule);
>             CommonToken rule1IdToken = new CommonToken(idTokenId);
>             CommonTree rule1IdNode =
> (CommonTree)adaptor.Create(rule1IdToken, rule1Name);
>             newRule.AddChild(rule1IdNode);
>             CommonToken alternatesToken = new
> CommonToken(alternativesTokenId, "ALTERNATIVES");
>             CommonTree alternatesNode =
> (CommonTree)adaptor.Create(alternatesToken);
>             newRule.AddChild(alternatesNode);
>             CommonToken alternateToken = new
> CommonToken(alternativeTokenId, "ALT");
>             CommonTree alternateNode =
> (CommonTree)adaptor.Create(alternateToken);
>             alternatesNode.AddChild(alternateNode);
>             CommonToken charLiteralToken = new
> CommonToken(stringLiteralTokenId, string.Empty);
>             CommonTree charLiteralNode =
> (CommonTree)adaptor.Create(charLiteralToken);
>             alternateNode.AddChild(charLiteralNode);
>             newRule.FreshenParentAndChildIndexesDeeply();
>         }
>
>         private static void FindRuleRefs(CommonTree node,
> SortedList<string, List<CommonTree>> ruleRefs, int ruleRefTokenId)
>         {
>             if (node.Type == ruleRefTokenId)
>             {
>                 List<CommonTree> ruleRefList;
>                 if (!ruleRefs.TryGetValue(node.Text, out ruleRefList))
>                 {
>                     ruleRefList = new List<CommonTree>();
>                     ruleRefs[node.Text] = ruleRefList;
>                 }
>                 ruleRefList.Add(node);
>             }
>             if (node.Children != null)
>             {
>                 int childCount = node.Children.Count;
>                 for (int index = 0; index < childCount; index++)
>                 {
>                     CommonTree visitNode =
> (CommonTree)node.Children[index];
>                     FindRuleRefs(visitNode, ruleRefs, ruleRefTokenId);
>                 }
>             }
>         }
>
>         private static void ChangeToken(CommonTree node, int tokenId,
> string text)
>         {
>             // This method does not perserve token StatIndex, token
> StopIndex, token Line, or token charPostionInLine
>             ITreeAdaptor adaptor = new CommonTreeAdaptor();
>             CommonTree parent = (CommonTree)node.Parent;
>             CommonToken newToken = new CommonToken(tokenId);
>             CommonTree newNode = (CommonTree)adaptor.Create(newToken,
> text);
>             int index = node.ChildIndex;
>             if (node.Children != null)
>             {
>                 // Note: <Node>.Children is read only, so newNode.Children
> = node.Children; is not allowed.
>                 newNode.AddChildren(node.Children);
>             }
>             parent.DeleteChild(index);
>             parent.InsertChild(index, newNode);
>             Debug.Assert(newToken.Type == tokenId);
>             Debug.Assert(newNode.Text == text);
>             Debug.Assert(newNode.Parent != null);
>             Debug.Assert(newNode.ChildIndex == index);
>             if (newNode.Children != null)
>             {
>                 Debug.Assert(newNode.Children.Count ==
> node.Children.Count);
>             }
>         }
>
> And here is the TokenMap class used by the methods
>
>     public class TokenMap
>     {
>         private SortedList<int, string> ids = new SortedList<int,
> string>();
>         private SortedList<string, int> names = new SortedList<string,
> int>();
>         private string tokenFilename;
>         public int NextId
>         {
>             get
>             {
>                 int value = ids.Count;
>                 string name;
>                 while (this.ids.TryGetValue(value, out name))
>                 {
>                     value++;
>                 }
>                 return value;
>             }
>         }
>         public string this[int tokenType]
>         {
>             get
>             {
>                 string result = string.Empty;
>                  if (!(ids.TryGetValue(tokenType, out result)))
>                 {
>                     //Debug.Fail("How did we get here?");
>                 }
>                 return result;
>             }
>         }
>         public TokenMap(string tokenFilename)
>         {
>             Debug.Assert(!string.IsNullOrWhiteSpace(tokenFilename));
>             this.tokenFilename = tokenFilename;
>             using (StreamReader streamReader = new
> StreamReader(this.tokenFilename))
>             {
>                 string line = streamReader.ReadLine();
>                 while (line != null)
>                 {
>                     string[] tokenParts = line.Split('=');
>                     string name = string.Empty;
>                     string indexText = string.Empty;
>                     if (tokenParts.Length == 2)
>                     {
>                         name = tokenParts[0];
>                         indexText = tokenParts[1];
>                     }
>                     else
>                     {
>                         // If more than one '=' then split on last '='
>                         // i.e. '>='=5
>                         //  '=='=6
>                         int lastEqualPos = line.LastIndexOf('=');
>                         name = line.Substring(0, lastEqualPos - 1);
>                         int length = line.Length - (lastEqualPos + 1);
>                         indexText = line.Substring(lastEqualPos + 1,
> length);
>                     }
>                     int index = -1;
>                     if (int.TryParse(indexText, out index))
>                     {
>                         if (!name.StartsWith("T__"))
>                         {
>                             if (!ids.ContainsKey(index))
>                             {
>                                 ids.Add(index, name);
>                             }
>                             //else
>                             //{
>                             //    Console.WriteLine("Duplicate key: " +
> index);
>                             //    Debug.Fail("How did we get here?");
>                             //}
>                         }
>                         else
>                         {
>                             // Do nothing.
>                         }
>                     }
>                     else
>                     {
>                         Console.WriteLine("Unable to parse to int: '" +
> indexText + "'");
>                         Debug.Fail("How did we get here?");
>                     }
>                     line = streamReader.ReadLine();
>                 }
>             }
>             BuildNamesIndex();
>         }
>         private void BuildNamesIndex()
>         {
>             this.names.Clear();
>             foreach (KeyValuePair<int, string> kvp in this.ids)
>             {
>                 this.names.Add(kvp.Value, kvp.Key);
>             }
>         }
>         public bool ContainsKey(int tokenType)
>         {
>             return ids.ContainsKey(tokenType);
>         }
>         public int GetId(string name)
>         {
>             int value = -1;
>             if (!this.names.TryGetValue(name, out value))
>             {
>                 value = -1;
>             }
>             return value;
>         }
>         public string ToListing()
>         {
>             StringBuilder lines = new StringBuilder();
>             lines.AppendLine("Token map for " + this.tokenFilename);
>             lines.AppendLine("Id  Name");
>             foreach (KeyValuePair<int, string> kvp in this.ids)
>             {
>                 string line = string.Format("{0,3} {1}", kvp.Key,
> kvp.Value);
>                 lines.AppendLine(line);
>             }
>             return lines.ToString();
>         }
>     }
>
>  Hope that helps, Eric
>
>
>
>
> On Thu, Mar 15, 2012 at 2:02 PM, Todd Nine <tnine at apigee.com> wrote:
>
>> Hi guys.  I'm new to antlr and have a question regarding tree
>> compressions.
>>  My ultimate goal is to use my grammar to create an AST.  From this AST I
>> then will utilize the visitor pattern to walk the tree and evaluate my
>> results for our Cassandra query engine.  I'm having issues with my tree
>> having a lot of additional nodes that don't have 2 children due to
>> operator
>> precedence.  My questions are below.
>>
>> 1. How can I create a different node class for each element?  For
>> instance,
>> && ad || need their own nodes, as well as 'NOT' 'within' etc
>>
>> 2. How can I collapse tree elements that only have 1 child.  I.E turn
>> orexp
>> -> andexp -> notexp -> andexp into just an andexp node
>>
>>
>> I've read all the documentation here, but I have a few things that aren't
>> clear.
>>
>> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>>
>> When creating my own node classes, it's not clear to me if I need to
>> subclass an antlr node class, or just create any class.  Are there any
>> examples on both compression and creating custom classes?
>>
>>
>> Thanks,
>>
>> Todd
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From mike at 7f.com  Fri Mar 16 15:10:53 2012
From: mike at 7f.com (Michael Roberts)
Date: Fri, 16 Mar 2012 15:10:53 -0700
Subject: [antlr-interest] antlrworks confused by imaginary tokens?
In-Reply-To: <1331900522.4606.0@pc-stefanm>
References: <CAJ4XrpXczHyD0PY=z92nxQp_PvzV3eOG+oSOhfNMoL-0+OMjrg@mail.gmail.com>
	<1331900522.4606.0@pc-stefanm>
Message-ID: <CAJ4XrpViBz6SZBLCWBZvQECkAuc25wxfrFTS2Ew_AuhiSXHyTw@mail.gmail.com>

Related question.  If I define all of the tokens in the token section,
what's the recommended method for dealing with whitespace?  It was my
understanding that antlr would use the WS token to process whitespaces.
Clearly, this won't work:

WS       :           (' '|'\t'|'\f'|'\n'|'\r')+{ skip(); };

MR

On Fri, Mar 16, 2012 at 5:22 AM, Stefan M?tje <
Stefan.Maetje at esd-electronics.com> wrote:

> Hi,
>
> some hints on defining imaginary and real tokens in an ANTLR grammar.
>
> The ANTLR grammar for *.g files prescribes a certain order of sections in
> the
> grammar file. Therefore you must follow this order in your grammar file.
> See
> this short excerpt from the ANTLR grammar for ANTLR grammar files:
>
> grammarDef
>    :   DOC_COMMENT?
>        (   'lexer'  {gtype=LEXER_GRAMMAR;}    // pure lexer
>        |   'parser' {gtype=PARSER_GRAMMAR;}   // pure parser
>        |   'tree'   {gtype=TREE_GRAMMAR;}     // a tree parser
>        |            {gtype=COMBINED_GRAMMAR;} // merged parser/lexer
>        )
>        g='grammar' id ';' optionsSpec? tokensSpec? attrScope* action*
>        rule+
>        EOF
>        -> ^( {adaptor.create(gtype,$g)}
>                  id DOC_COMMENT? optionsSpec? tokensSpec? attrScope*
> action*
> rule+
>                )
>    ;
>
> You see the tokensSpec follows the optionsSpec and so on ...
>
> The token section should look like the following example:
>
> token {
>        VIRTUAL_TOKEN1;
>        VIRTUAL_TOKEN2;
>        REAL_TEXT = 'TEXT';     // Only a single char / string allowed!
>        REAL_INFO = 'INFO';
> }
>
> Please observe the fact that between the token name and the token text
> there
> is an equals ("=") sign! This is an deviation from the syntax of a lexer
> rule
> to define a token.
>
> Please also observe that in the token section only a single string or char
> literal is allowed. If you need something like a keyword which may have an
> abbreviated form then you must use a lexer rule like this:
>
> KW_IDENT: ('IDENT' | 'IDENTICAL');
>
> If you look at these rules you see that your posted tokens section violates
> these rules.
>
> I hope that helps,
>        Stefan
>
> PS.: You may look for the ANTLR grammar for grammar files in the source
> distribution. Look for file ./antlr-3.4/tool/src/main/antlr3/org/antlr/
> grammar/v3/ANTLRv3.g
>
>
> Am 16.03.2012 05:03:44 schrieb(en) Michael Roberts:
> > I've been happily hacking on my little grammar using antlrworks.
> >  Everything was going swimmingly until I introduced a section of
> imaginary
> > tokens for use in rewrite rules.  For some reason, antlr/antlrworks
> really
> > wanted this section of imaginary tokens at the start of the file,
> directly
> > behind the options section.  It didn't seem to like it in other places,
> and
> > would not recognize the imaginary tokens otherwise.
> >
> > However, oddly, it didn't like it if I defined my regular tokens inside
> the
> > tokens sections and refused to recognize them, flagging mismatched token
> > exceptions all over the place.  So, accepting defeat, I moved these
> > non-imaginary tokens back to the end of the file, where they'd previously
> > been living.  No missing tokens, everything generates fine now.
> >
> > However, when I attempt to debug my parser, the generated test code
> > references the first non-imaginary token it finds as the top level
> > construct, in my case CLOSE_PAREN, and not my top-level compilationUnit
> > production (which is ahead of it in the file).  Thus:
> >
> > public class __Test__ {
> >
> >     public static void main(String args[]) throws Exception {
> >         JLG2Lexer lex = new JLG2Lexer(new
> >
> ANTLRFileStream("C:\\src\\Core\\src\\org\\veve\\reflect\\interpreter\\output
> > \\__Test___input.txt",
> > "UTF8"));
> >         CommonTokenStream tokens = new CommonTokenStream(lex);
> >
> >         JLG2Parser g = new JLG2Parser(tokens, 49100, null);
> >         try {
> >             g.CLOSE_PAREN();   // <-- BAD, was expecting to see
> > compilationUnit here ...
> >         } catch (RecognitionException e) {
> >             e.printStackTrace();
> >         }
> >     }
> > }
> >
> > So, my main question is ..  why doesn't this form of token definition
> > (below) work:
> >
> >
> > tokens
> > {
> >
> > // Imaginary tokens for AST rewrite ops
> > IDENTIFIER_PATH;
> > INVOCATION;
> > STATEMENT_BLOCK;
> > AMPERSAND_INVOCATION;
> > INVOCATION_STAT;
> > OBJECT;
> > ARRAY;
> > ELEMENT_STAT;
> > MEMBERS;
> > PAIR;
> > PAIR_LIST;
> > METHOD_INVOCATION;
> > NEW_COMMAND;
> > STRING;
> > NUMBER;
> > ARRAY;
> > BOOLEAN;
> > NULL;
> > PATH;
> >
> > // Real, defined tokens
> > CLOSE_PAREN : ')';
> > AMPERSAND : '@';
> > WS       :           (' '|'\t'|'\f'|'\n'|'\r')+{ skip(); };
> > COLON : ':';
> > EQUALS : '=';
> > INJECT : '<-';
> > COMMA : ',';
> > SLASH : '/';
> > OPEN_PAREN :    '(' ;
> > OPEN_BRACE   : '{';
> > CLOSE_BRACE
> > :   '}';
> > DOT
> > : '.';
> > SEMI_COLON
> > : ';';
> > BLOCK :   '|' ;
> > }
> >
> > is the token section just for imaginary tokens, then, and, if not how do
> I
> > define regular tokens in it .. and, in essence, what could I possibly be
> > doing to so confuse the test jig generator code so that it's generating
> > something silly?
> >
> > MR
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-
> > address
> >
> >
>
>
>

From researcher0x00 at gmail.com  Fri Mar 16 16:38:49 2012
From: researcher0x00 at gmail.com (Eric)
Date: Fri, 16 Mar 2012 19:38:49 -0400
Subject: [antlr-interest] Help with compressing trees and custom nodes
In-Reply-To: <CA+yzqf8YCA2fA2q_wZ82s3g3StPmv_B8U01wA=m-98fgUiuuwQ@mail.gmail.com>
References: <CA+yzqf8smzKt1e3iafodLbbKQ43dwxbnd0zJSL3J-ho5a9QvjA@mail.gmail.com>
	<CAN45N13LUodwbu6sO4src20Pt9-9YLQtCX9nKxu0N4L4vmOFmg@mail.gmail.com>
	<CA+yzqf8YCA2fA2q_wZ82s3g3StPmv_B8U01wA=m-98fgUiuuwQ@mail.gmail.com>
Message-ID: <CAN45N11MaxQvNSFePDWH2ux83UL7rXauGZG-uiu6wXdN1EcDsA@mail.gmail.com>

Hi Todd,

I took a look at the code also.

I don?t use heterogeneous trees with ANTLR, so I can?t help you there. I
know you are trying to modify the tree, but I don?t know how to do it with
heterogeneous nodes. No sense in me giving you advice on something I don?t
know.

You can use

http://antlr.markmail.org/ to search previous post for all ANTLR list, and
http://antlr.markmail.org/search/?q=list%3Aorg.antlr.antlr-interest to
search just the antlr-interest list.

The keywords hetro, Heterogeneous, and heterogeneous turn up results. Just
make sure you are not reading results for string template when you are
looking for parser results.

I would suggest you take the time to read through these posts to get some
ideas. About a third of what I learned about ANTLR I learned by spending
hours finding those gem answers in the responses. I only wish I book marked
them all when I found them.

Also search for answers by Ter, and Jim Idle, they are the most
knowledgeable overall; there are others with excellent knowledge but I
don?t recall them individually off the top of my head.

While "Language Implementation Patterns" is one worth having, it is "The
Definitive ANTLR Reference" that you should be using first.

As for building trees with ANTLR, ANTLR 3.x can build trees using either
the tree operators in the grammar or by using the API as I do. ANTLR 4.x
will not support the tree operators; but I haven?t used it recently enough
to say how it does it now via an API. I mention this because if you are
just learning, there is nothing long term to be gained by learning the tree
operators as they will not be in ANTLR 4.x.

I didn?t fully understand what you are trying to do because I didn?t see a
driver; I couldn?t resolve whether you are building an AST, or building
something else, i.e. query.addSelect, or both and what there use was far.

Some good general advice for a new person is:

"A common problem with novices attempting to implement language analysis is
to believe that their task is simplified by moving sophisticated tasks to
conceptually simple tasks. They will try to simplify semantic analysis by
creating a more detailed syntactic analysis and syntactic analysis by
creating a more detailed lexical analysis. Almost invariably they discover
that this attempt is fruitless and has to be undone, because it results in
poor error reporting, runs into conflicts as the implementation becomes
more complete, duplicates functionality in the later portions of the
analysis, and is hard to maintain." By William Clodius

Jim Idle and other also give the same advice, I just happen to have found
this text first when looking today.

For me this means push the analysis down towards the AST instead of trying
to move it forward toward the lexer. My most common view of the grammar is
to act as ambiguity filter, yet provide enough detail to the AST for
analysis; in other words less rules in the grammar and more analysis and
transformation with the AST.

Eric


On Fri, Mar 16, 2012 at 1:38 PM, Todd Nine <tnine at apigee.com> wrote:

> Hi Eric,
>   Thank you for the help.  I'm a bit confused on how to actually populate
> the object itself.  Given that this will be open source, I've added my code
> here.
>
> https://gist.github.com/ee5ef357b9261ff1bfa9
>
> I've also read this book.
>
> http://pragprog.com/book/tpdsl/language-implementation-patterns
>
> Specifically the section on Irregular Heterogeneous AST.  It has several
> different object structures which is exactly what to create a clean AST.
>  However the chapter doesn't actually show you HOW to use the grammer to
> create these trees.  There's information on the objects for the nodes, and
> the grammer, but not now to link to the two.  Is it not possible to do
> without creating custom code in my grammer for each type as you have done?
>
> It seems I'm going to need to rewrite operations from this.
>
> equalityop :
>
>   property ( LT<LessThan>
>
> | LTE <LessThanEqual>^
>
> | EQ <Equal>^
>
> | GT <GreaterThan>^
>
> | GTE <GreaterThanEqual>^) value {
>
>
>
>  };
>
>
> To this
>
>
> lessoperation:
>
>   property LT value {
>
>    //create the LT node here
>
> };
>
>
> equalityop:
>
>  lessthan | lessthanequal ;
>
>
> Is there any other way to do this?  I'm using java and antlr 3.4.
>
> Thanks,
>
> Todd
>
>
>
>
> On Fri, Mar 16, 2012 at 6:42 AM, Eric <researcher0x00 at gmail.com> wrote:
>
>> Hi Todd,
>>
>>
>> This is just a suggestion and not the only possible answer.
>>
>> The easiest way for me to work with AST transformations is to just view
>> the AST as an n-ary tree and call the tree API directly.
>>
>> Here are some example methods I use. This is C# code for the ANTLR 3 C#
>> version; you will obviously need to translate to your target language.
>>
>>         private static void ReplaceNode(CommonTree node, int tokenId,
>> string text)
>>         {
>>             // This method does not set token StatIndex, token StopIndex,
>> token Line, or token charPostionInLine
>>             ITreeAdaptor adaptor = new CommonTreeAdaptor();
>>             CommonTree parent = (CommonTree)node.Parent;
>>             CommonToken newToken = new CommonToken(tokenId);
>>             CommonTree newNode = (CommonTree)adaptor.Create(newToken,
>> text);
>>             int index = node.ChildIndex;
>>             parent.DeleteChild(index);
>>             parent.InsertChild(index, newNode);
>>             Debug.Assert(newToken.Type == tokenId);
>>             Debug.Assert(newNode.Text == text);
>>             Debug.Assert(newNode.Parent != null);
>>             Debug.Assert(newNode.ChildIndex == index);
>>         }
>>
>>        private static void CreateEpsilonRule(CommonTree rules, TokenMap
>> tokenMap)
>>         {
>>             int ruleTokenId = tokenMap.GetId("RULE");
>>             int idTokenId = tokenMap.GetId("ID");
>>             int alternativesTokenId = tokenMap.GetId("ALTERNATIVES");
>>             int alternativeTokenId = tokenMap.GetId("ALT");
>>             int stringLiteralTokenId = tokenMap.GetId("STRING_LITERAL");
>>             int ruleRefTokenId = tokenMap.GetId("RULE_REF");
>>             ITreeAdaptor adaptor = new CommonTreeAdaptor();
>>             epsilonRuleMade = true;
>>             string rule1Name = "EPSILON";
>>             CommonToken newRule1Token = new CommonToken(ruleTokenId);
>>             CommonTree newRule =
>> (CommonTree)adaptor.Create(newRule1Token, "RULE");
>>             rules.AddChild(newRule);
>>             CommonToken rule1IdToken = new CommonToken(idTokenId);
>>             CommonTree rule1IdNode =
>> (CommonTree)adaptor.Create(rule1IdToken, rule1Name);
>>             newRule.AddChild(rule1IdNode);
>>             CommonToken alternatesToken = new
>> CommonToken(alternativesTokenId, "ALTERNATIVES");
>>             CommonTree alternatesNode =
>> (CommonTree)adaptor.Create(alternatesToken);
>>             newRule.AddChild(alternatesNode);
>>             CommonToken alternateToken = new
>> CommonToken(alternativeTokenId, "ALT");
>>             CommonTree alternateNode =
>> (CommonTree)adaptor.Create(alternateToken);
>>             alternatesNode.AddChild(alternateNode);
>>             CommonToken charLiteralToken = new
>> CommonToken(stringLiteralTokenId, string.Empty);
>>             CommonTree charLiteralNode =
>> (CommonTree)adaptor.Create(charLiteralToken);
>>             alternateNode.AddChild(charLiteralNode);
>>             newRule.FreshenParentAndChildIndexesDeeply();
>>         }
>>
>>         private static void FindRuleRefs(CommonTree node,
>> SortedList<string, List<CommonTree>> ruleRefs, int ruleRefTokenId)
>>         {
>>             if (node.Type == ruleRefTokenId)
>>             {
>>                 List<CommonTree> ruleRefList;
>>                 if (!ruleRefs.TryGetValue(node.Text, out ruleRefList))
>>                 {
>>                     ruleRefList = new List<CommonTree>();
>>                     ruleRefs[node.Text] = ruleRefList;
>>                 }
>>                 ruleRefList.Add(node);
>>             }
>>             if (node.Children != null)
>>             {
>>                 int childCount = node.Children.Count;
>>                 for (int index = 0; index < childCount; index++)
>>                 {
>>                     CommonTree visitNode =
>> (CommonTree)node.Children[index];
>>                     FindRuleRefs(visitNode, ruleRefs, ruleRefTokenId);
>>                 }
>>             }
>>         }
>>
>>         private static void ChangeToken(CommonTree node, int tokenId,
>> string text)
>>         {
>>             // This method does not perserve token StatIndex, token
>> StopIndex, token Line, or token charPostionInLine
>>             ITreeAdaptor adaptor = new CommonTreeAdaptor();
>>             CommonTree parent = (CommonTree)node.Parent;
>>             CommonToken newToken = new CommonToken(tokenId);
>>             CommonTree newNode = (CommonTree)adaptor.Create(newToken,
>> text);
>>             int index = node.ChildIndex;
>>             if (node.Children != null)
>>             {
>>                 // Note: <Node>.Children is read only, so
>> newNode.Children = node.Children; is not allowed.
>>                 newNode.AddChildren(node.Children);
>>             }
>>             parent.DeleteChild(index);
>>             parent.InsertChild(index, newNode);
>>             Debug.Assert(newToken.Type == tokenId);
>>             Debug.Assert(newNode.Text == text);
>>             Debug.Assert(newNode.Parent != null);
>>             Debug.Assert(newNode.ChildIndex == index);
>>             if (newNode.Children != null)
>>             {
>>                 Debug.Assert(newNode.Children.Count ==
>> node.Children.Count);
>>             }
>>         }
>>
>> And here is the TokenMap class used by the methods
>>
>>     public class TokenMap
>>     {
>>         private SortedList<int, string> ids = new SortedList<int,
>> string>();
>>         private SortedList<string, int> names = new SortedList<string,
>> int>();
>>         private string tokenFilename;
>>         public int NextId
>>         {
>>             get
>>             {
>>                 int value = ids.Count;
>>                 string name;
>>                 while (this.ids.TryGetValue(value, out name))
>>                 {
>>                     value++;
>>                 }
>>                 return value;
>>             }
>>         }
>>         public string this[int tokenType]
>>         {
>>             get
>>             {
>>                 string result = string.Empty;
>>                  if (!(ids.TryGetValue(tokenType, out result)))
>>                 {
>>                     //Debug.Fail("How did we get here?");
>>                 }
>>                 return result;
>>             }
>>         }
>>         public TokenMap(string tokenFilename)
>>         {
>>             Debug.Assert(!string.IsNullOrWhiteSpace(tokenFilename));
>>             this.tokenFilename = tokenFilename;
>>             using (StreamReader streamReader = new
>> StreamReader(this.tokenFilename))
>>             {
>>                 string line = streamReader.ReadLine();
>>                 while (line != null)
>>                 {
>>                     string[] tokenParts = line.Split('=');
>>                     string name = string.Empty;
>>                     string indexText = string.Empty;
>>                     if (tokenParts.Length == 2)
>>                     {
>>                         name = tokenParts[0];
>>                         indexText = tokenParts[1];
>>                     }
>>                     else
>>                     {
>>                         // If more than one '=' then split on last '='
>>                         // i.e. '>='=5
>>                         //  '=='=6
>>                         int lastEqualPos = line.LastIndexOf('=');
>>                         name = line.Substring(0, lastEqualPos - 1);
>>                         int length = line.Length - (lastEqualPos + 1);
>>                         indexText = line.Substring(lastEqualPos + 1,
>> length);
>>                     }
>>                     int index = -1;
>>                     if (int.TryParse(indexText, out index))
>>                     {
>>                         if (!name.StartsWith("T__"))
>>                         {
>>                             if (!ids.ContainsKey(index))
>>                             {
>>                                 ids.Add(index, name);
>>                             }
>>                             //else
>>                             //{
>>                             //    Console.WriteLine("Duplicate key: " +
>> index);
>>                             //    Debug.Fail("How did we get here?");
>>                             //}
>>                         }
>>                         else
>>                         {
>>                             // Do nothing.
>>                         }
>>                     }
>>                     else
>>                     {
>>                         Console.WriteLine("Unable to parse to int: '" +
>> indexText + "'");
>>                         Debug.Fail("How did we get here?");
>>                     }
>>                     line = streamReader.ReadLine();
>>                 }
>>             }
>>             BuildNamesIndex();
>>         }
>>         private void BuildNamesIndex()
>>         {
>>             this.names.Clear();
>>             foreach (KeyValuePair<int, string> kvp in this.ids)
>>             {
>>                 this.names.Add(kvp.Value, kvp.Key);
>>             }
>>         }
>>         public bool ContainsKey(int tokenType)
>>         {
>>             return ids.ContainsKey(tokenType);
>>         }
>>         public int GetId(string name)
>>         {
>>             int value = -1;
>>             if (!this.names.TryGetValue(name, out value))
>>             {
>>                 value = -1;
>>             }
>>             return value;
>>         }
>>         public string ToListing()
>>         {
>>             StringBuilder lines = new StringBuilder();
>>             lines.AppendLine("Token map for " + this.tokenFilename);
>>             lines.AppendLine("Id  Name");
>>             foreach (KeyValuePair<int, string> kvp in this.ids)
>>             {
>>                 string line = string.Format("{0,3} {1}", kvp.Key,
>> kvp.Value);
>>                 lines.AppendLine(line);
>>             }
>>             return lines.ToString();
>>         }
>>     }
>>
>>  Hope that helps, Eric
>>
>>
>>
>>
>> On Thu, Mar 15, 2012 at 2:02 PM, Todd Nine <tnine at apigee.com> wrote:
>>
>>> Hi guys.  I'm new to antlr and have a question regarding tree
>>> compressions.
>>>  My ultimate goal is to use my grammar to create an AST.  From this AST I
>>> then will utilize the visitor pattern to walk the tree and evaluate my
>>> results for our Cassandra query engine.  I'm having issues with my tree
>>> having a lot of additional nodes that don't have 2 children due to
>>> operator
>>> precedence.  My questions are below.
>>>
>>> 1. How can I create a different node class for each element?  For
>>> instance,
>>> && ad || need their own nodes, as well as 'NOT' 'within' etc
>>>
>>> 2. How can I collapse tree elements that only have 1 child.  I.E turn
>>> orexp
>>> -> andexp -> notexp -> andexp into just an andexp node
>>>
>>>
>>> I've read all the documentation here, but I have a few things that aren't
>>> clear.
>>>
>>> http://www.antlr.org/wiki/display/ANTLR3/Tree+construction
>>>
>>> When creating my own node classes, it's not clear to me if I need to
>>> subclass an antlr node class, or just create any class.  Are there any
>>> examples on both compression and creating custom classes?
>>>
>>>
>>> Thanks,
>>>
>>> Todd
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From kierans777 at gmail.com  Fri Mar 16 21:17:42 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sat, 17 Mar 2012 15:17:42 +1100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F5C6A38.7040104@gmail.com>
References: <4F59DBC1.4090008@gmail.com>	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>	<4F5C497D.7060004@gmail.com>
	<4F5C6A38.7040104@gmail.com>
Message-ID: <4F641066.1090107@gmail.com>

Further to the related discussion of the Java grammar not compiling (see 
http://antlr.markmail.org/search/?q=java+parser+not+compiling#query:java%20parser%20not%20compiling+page:1+mid:vyevxqph4xniwl6q+state:results 
) I've found Sam's fix for the labels not being generated properly.

It's 
https://github.com/antlr/antlr3/commit/db6adaefb12a1901606f81c9c8931aa07d12949f 
and building against the current head of the antlr3 repo, the fix still 
holds for the Java target, however the C target still has the bug.

I'm not that familiar with Antlr's internal workings, nor String 
Template.  If anyone can help it would be appreciated (not just by my 
I'm sure).

Cheers,


On 23/07/64 5:59 AM, Kieran Simpson wrote:
> As a follow up, I checked out the antlr3 repo from Git Hub and built the
> current master branch. Still have the same problem
>
> [java] '-classpath'
> [java]
> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.1-SNAPSHOT.jar:./lib/antlr-runtime-3.4.1-SNAPSHOT.jar:./lib/stringtemplate-3.2.1.jar'
>
>
> Cheers,
>
> On 11/03/12 5:43 PM, Kieran Simpson wrote:
>> @Bart - yes you're right, I forgot to add the leading ^ for the
>> resulting AST in my example. Typo :(
>>
>> @Ivan - I ran my build with Antlr 3.3 and the resulting code is OK
>>
>> static void synpred9_CoreConfiguration_fragment(pCoreConfigurationParser
>> ctx )
>> {
>> pANTLR3_COMMON_TOKEN value;
>>
>> value = NULL;
>>
>> However I want to use 3.4 ;)
>>
>> I was thinking it might be a classpath issue, however I'm not certain.
>> The classpaths are (from my Ant build):
>>
>> [java] '-classpath'
>> [java]
>> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.jar:./lib/antlr-runtime-3.4.jar:./lib/stringtemplate-3.2.1.jar'
>>
>>
>>
>> [java] '-classpath'
>> [java]
>> './lib/antlr-2.7.7.jar:./lib/antlr-3.3.jar:./lib/antlr-runtime-3.3.jar:./lib/stringtemplate-3.2.1.jar'
>>
>>
>>
>> What is really bothering my is that the the code generated from
>> Antlrworks (when I Debug the grammar) is OK
>>
>> public final void synpred9_CoreConfiguration_fragment() throws
>> RecognitionException {
>> Token value=null;
>>
>> If I can get some pointers about where to look/what to look for in the
>> code generators (eg: template fragments) I might be able to get more
>> info on the code that's playing up. It could be a bad JAR that's being
>> retrieved by my build system (Apache Ivy).
>>
>> Cheers,
>>
>> On 23/07/64 5:59 AM, Ivan Brezina wrote:
>>> Hi
>>> maybe you're hitting already discovered bug. This was introduced in the
>>> version 3.4. What does the output look like when you use ANTLR version
>>> 3.3?
>>>
>>> Ivan
>>>
>>> Quoting Kieran Simpson <kierans777 at gmail.com>:
>>>
>>>> For my rule:
>>>>
>>>> rule
>>>> : OPTION1
>>>> | value=TION2 -> ($value)
>>>> ;
>>>>
>>>> with backtracking on (and memoize not that I think that's relevant) the
>>>> synpredicate code generated has errors, both for the Java and C targets
>>>> where the variable name is missing in the declaration
>>>>
>>>> eg:
>>>>
>>>> public final void synpred9_grammar_fragment() throws
>>>> RecognitionException {
>>>> Token =ll;
>>>>
>>>> and
>>>>
>>>> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
>>>> {
>>>> pANTLR3_COMMON_TOKEN ;
>>>>
>>>> =ULL;
>>>>
>>>> Interestingly this grammar runs in debug mode when used with Antlrworks
>>>> even though I'm using version 3.4 of Antlr with my project and 3.4 is
>>>> included with Antlrworks (1.4.3).
>>>>
>>>> Just in case it's due to an out of date version, here are some md5sums
>>>>
>>>> 9638f9b7b1b823fcaba977f06f0dd761 ./antlr/3.4/antlrworks-1.4.3.jar
>>>>
>>>> 465472089d78cd80f926f5825a29ec7f ./lib/antlr-3.4.jar
>>>> 0e0318be407e51fdf7ba6777eabfdf73 ./lib/antlr-runtime-3.4.jar
>>>>
>>>> Is something out of date here or is this a bug with the backtracking
>>>> generation?
>>>>
>>>> Cheers,

From researcher0x00 at gmail.com  Fri Mar 16 21:48:02 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 17 Mar 2012 00:48:02 -0400
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F641066.1090107@gmail.com>
References: <4F59DBC1.4090008@gmail.com>
	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>
	<4F5C497D.7060004@gmail.com> <4F5C6A38.7040104@gmail.com>
	<4F641066.1090107@gmail.com>
Message-ID: <CAN45N116FNK+sSF8XJizpqPS1_fijaSs7O9jkRmhEBdQx3WCLQ@mail.gmail.com>

Hi Kieran,

Did one of my crazy suggestions actually pan out?

I took a quick 30 second look at the code and it looks doable. When you
mentioned Sam I thought it would be C# code, but is actually a java,
grammar, and string template patch. I'm not sure if all three patches in
the update have to be applied. If I wasn't going to sleep right now I would
take a shot at it.

It might be as simple as applying the patch to the files and building.
Don't let the unknown file types scare you, just treat it like any patch
that you would do by hand, looking to make sure that the before and after
parts match up and there is a good change it will work.

I should be able to help you tomorrow with it. Drop a message if you need
help and I will jump in when I see it.

Good luck and great job on finding it, that fix is wanted by at least
several people. If you get it to work you might become someones hero.

Eric.



On Sat, Mar 17, 2012 at 12:17 AM, Kieran Simpson <kierans777 at gmail.com>wrote:

> Further to the related discussion of the Java grammar not compiling (see
>
> http://antlr.markmail.org/search/?q=java+parser+not+compiling#query:java%20parser%20not%20compiling+page:1+mid:vyevxqph4xniwl6q+state:results
> ) I've found Sam's fix for the labels not being generated properly.
>
> It's
>
> https://github.com/antlr/antlr3/commit/db6adaefb12a1901606f81c9c8931aa07d12949f
> and building against the current head of the antlr3 repo, the fix still
> holds for the Java target, however the C target still has the bug.
>
> I'm not that familiar with Antlr's internal workings, nor String
> Template.  If anyone can help it would be appreciated (not just by my
> I'm sure).
>
> Cheers,
>
>
> On 23/07/64 5:59 AM, Kieran Simpson wrote:
> > As a follow up, I checked out the antlr3 repo from Git Hub and built the
> > current master branch. Still have the same problem
> >
> > [java] '-classpath'
> > [java]
> >
> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.1-SNAPSHOT.jar:./lib/antlr-runtime-3.4.1-SNAPSHOT.jar:./lib/stringtemplate-3.2.1.jar'
> >
> >
> > Cheers,
> >
> > On 11/03/12 5:43 PM, Kieran Simpson wrote:
> >> @Bart - yes you're right, I forgot to add the leading ^ for the
> >> resulting AST in my example. Typo :(
> >>
> >> @Ivan - I ran my build with Antlr 3.3 and the resulting code is OK
> >>
> >> static void synpred9_CoreConfiguration_fragment(pCoreConfigurationParser
> >> ctx )
> >> {
> >> pANTLR3_COMMON_TOKEN value;
> >>
> >> value = NULL;
> >>
> >> However I want to use 3.4 ;)
> >>
> >> I was thinking it might be a classpath issue, however I'm not certain.
> >> The classpaths are (from my Ant build):
> >>
> >> [java] '-classpath'
> >> [java]
> >>
> './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.jar:./lib/antlr-runtime-3.4.jar:./lib/stringtemplate-3.2.1.jar'
> >>
> >>
> >>
> >> [java] '-classpath'
> >> [java]
> >>
> './lib/antlr-2.7.7.jar:./lib/antlr-3.3.jar:./lib/antlr-runtime-3.3.jar:./lib/stringtemplate-3.2.1.jar'
> >>
> >>
> >>
> >> What is really bothering my is that the the code generated from
> >> Antlrworks (when I Debug the grammar) is OK
> >>
> >> public final void synpred9_CoreConfiguration_fragment() throws
> >> RecognitionException {
> >> Token value=null;
> >>
> >> If I can get some pointers about where to look/what to look for in the
> >> code generators (eg: template fragments) I might be able to get more
> >> info on the code that's playing up. It could be a bad JAR that's being
> >> retrieved by my build system (Apache Ivy).
> >>
> >> Cheers,
> >>
> >> On 23/07/64 5:59 AM, Ivan Brezina wrote:
> >>> Hi
> >>> maybe you're hitting already discovered bug. This was introduced in the
> >>> version 3.4. What does the output look like when you use ANTLR version
> >>> 3.3?
> >>>
> >>> Ivan
> >>>
> >>> Quoting Kieran Simpson <kierans777 at gmail.com>:
> >>>
> >>>> For my rule:
> >>>>
> >>>> rule
> >>>> : OPTION1
> >>>> | value=TION2 -> ($value)
> >>>> ;
> >>>>
> >>>> with backtracking on (and memoize not that I think that's relevant)
> the
> >>>> synpredicate code generated has errors, both for the Java and C
> targets
> >>>> where the variable name is missing in the declaration
> >>>>
> >>>> eg:
> >>>>
> >>>> public final void synpred9_grammar_fragment() throws
> >>>> RecognitionException {
> >>>> Token =ll;
> >>>>
> >>>> and
> >>>>
> >>>> static void synpred9_grammar_fragment(pCoreConfigurationParser ctx )
> >>>> {
> >>>> pANTLR3_COMMON_TOKEN ;
> >>>>
> >>>> =ULL;
> >>>>
> >>>> Interestingly this grammar runs in debug mode when used with
> Antlrworks
> >>>> even though I'm using version 3.4 of Antlr with my project and 3.4 is
> >>>> included with Antlrworks (1.4.3).
> >>>>
> >>>> Just in case it's due to an out of date version, here are some md5sums
> >>>>
> >>>> 9638f9b7b1b823fcaba977f06f0dd761 ./antlr/3.4/antlrworks-1.4.3.jar
> >>>>
> >>>> 465472089d78cd80f926f5825a29ec7f ./lib/antlr-3.4.jar
> >>>> 0e0318be407e51fdf7ba6777eabfdf73 ./lib/antlr-runtime-3.4.jar
> >>>>
> >>>> Is something out of date here or is this a bug with the backtracking
> >>>> generation?
> >>>>
> >>>> Cheers,
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From tnine at apigee.com  Fri Mar 16 22:38:51 2012
From: tnine at apigee.com (Todd Nine)
Date: Fri, 16 Mar 2012 22:38:51 -0700
Subject: [antlr-interest] Removing nil nodes from tree
Message-ID: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>

Hi all,
  I now have my AST generating node classes for my tree.  However, I have
one final issue.  nil nodes are included in my tree after parsing is
complete.  They appear in trees due to operator precedence.  Is it possible
to remove nil nodes as the tree is generated?

Thanks,
Todd

From researcher0x00 at gmail.com  Sat Mar 17 07:48:44 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 17 Mar 2012 10:48:44 -0400
Subject: [antlr-interest] Removing nil nodes from tree
In-Reply-To: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>
References: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>
Message-ID: <CAN45N104u+ZF8RnWpWRNBiCmJdjrCBCr3US=dbP+8xufZ=DU8g@mail.gmail.com>

Hi Todd,

Are the nil nodes causing you a problem or are they just astetically
unpleasing?

Eric

On Sat, Mar 17, 2012 at 1:38 AM, Todd Nine <tnine at apigee.com> wrote:

> Hi all,
>  I now have my AST generating node classes for my tree.  However, I have
> one final issue.  nil nodes are included in my tree after parsing is
> complete.  They appear in trees due to operator precedence.  Is it possible
> to remove nil nodes as the tree is generated?
>
> Thanks,
> Todd
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From tnine at apigee.com  Sat Mar 17 10:13:25 2012
From: tnine at apigee.com (Todd Nine)
Date: Sat, 17 Mar 2012 10:13:25 -0700
Subject: [antlr-interest] Removing nil nodes from tree
In-Reply-To: <CAN45N104u+ZF8RnWpWRNBiCmJdjrCBCr3US=dbP+8xufZ=DU8g@mail.gmail.com>
References: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>
	<CAN45N104u+ZF8RnWpWRNBiCmJdjrCBCr3US=dbP+8xufZ=DU8g@mail.gmail.com>
Message-ID: <6311074E-4F04-4EDD-9527-4A9159596359@apigee.com>

Hi Eric,
  Mostly a problem. They are remnants from the grammar tree where operator precedence has occurred.  Or->and->not->equality operand. 

I've subclassed CommonTree for my nodes, and I'm using the visitor pattern to walk the AST and perform the logic to query our Cassandra indexes and return results.  With the nil nodes present, I have to create my own CommonTreeAdapter as well as a nil class for visitor implementation and traversal. If I can just remove them via an option, I won't have to add this extra code. 

Thanks again for all the help!

Todd 

On Mar 17, 2012, at 7:48 AM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Todd,
>  
> Are the nil nodes causing you a problem or are they just astetically unpleasing?
>  
> Eric
> 
> On Sat, Mar 17, 2012 at 1:38 AM, Todd Nine <tnine at apigee.com> wrote:
> Hi all,
>  I now have my AST generating node classes for my tree.  However, I have
> one final issue.  nil nodes are included in my tree after parsing is
> complete.  They appear in trees due to operator precedence.  Is it possible
> to remove nil nodes as the tree is generated?
> 
> Thanks,
> Todd
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 

From researcher0x00 at gmail.com  Sat Mar 17 12:04:55 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 17 Mar 2012 15:04:55 -0400
Subject: [antlr-interest] Removing nil nodes from tree
In-Reply-To: <6311074E-4F04-4EDD-9527-4A9159596359@apigee.com>
References: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>
	<CAN45N104u+ZF8RnWpWRNBiCmJdjrCBCr3US=dbP+8xufZ=DU8g@mail.gmail.com>
	<6311074E-4F04-4EDD-9527-4A9159596359@apigee.com>
Message-ID: <CAN45N12iffsoQ9NbW66aysfBXq71hVXC7fdCEiD_kh4hUrK-FQ@mail.gmail.com>

Hi Todd,

If you can make either all or enough of the code available to recreate the
problem, including the driver I will see if I can prune out the nil nodes
for using API calls. I can't promise an answer only help.

Eric

On Sat, Mar 17, 2012 at 1:13 PM, Todd Nine <tnine at apigee.com> wrote:

> Hi Eric,
>   Mostly a problem. They are remnants from the grammar tree where operator
> precedence has occurred.  Or->and->not->equality operand.
>
> I've subclassed CommonTree for my nodes, and I'm using the visitor pattern
> to walk the AST and perform the logic to query our Cassandra indexes and
> return results.  With the nil nodes present, I have to create my own
> CommonTreeAdapter as well as a nil class for visitor implementation and
> traversal. If I can just remove them via an option, I won't have to add
> this extra code.
>
> Thanks again for all the help!
>
> Todd
>
> On Mar 17, 2012, at 7:48 AM, Eric <researcher0x00 at gmail.com> wrote:
>
> Hi Todd,
>
> Are the nil nodes causing you a problem or are they just astetically
> unpleasing?
>
> Eric
>
> On Sat, Mar 17, 2012 at 1:38 AM, Todd Nine <tnine at apigee.com> wrote:
>
>> Hi all,
>>  I now have my AST generating node classes for my tree.  However, I have
>> one final issue.  nil nodes are included in my tree after parsing is
>> complete.  They appear in trees due to operator precedence.  Is it
>> possible
>> to remove nil nodes as the tree is generated?
>>
>> Thanks,
>> Todd
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From tnine at apigee.com  Sat Mar 17 12:23:41 2012
From: tnine at apigee.com (Todd Nine)
Date: Sat, 17 Mar 2012 12:23:41 -0700
Subject: [antlr-interest] Removing nil nodes from tree
In-Reply-To: <CAN45N12iffsoQ9NbW66aysfBXq71hVXC7fdCEiD_kh4hUrK-FQ@mail.gmail.com>
References: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>
	<CAN45N104u+ZF8RnWpWRNBiCmJdjrCBCr3US=dbP+8xufZ=DU8g@mail.gmail.com>
	<6311074E-4F04-4EDD-9527-4A9159596359@apigee.com>
	<CAN45N12iffsoQ9NbW66aysfBXq71hVXC7fdCEiD_kh4hUrK-FQ@mail.gmail.com>
Message-ID: <CA+yzqf9d9orf2AWQJypo7T1iN+eqn=XKMdaO85D=hBhNbCDTTw@mail.gmail.com>

Hi Eric,
  It was an ID10T error on my part!  In my subclassing of CommonTree, I
accidentally forgot to pass the token to the parent class via "super(t)".
 As a result, all boolean and equality expression nodes were returning true
when "node.isNil()" was invoked.  Hence they were not properly replacing
nil nodes as the tree was constructed.  After fixing this, everything is
working properly.  Once I'm done, I think I'm going to create a blog post.
 Even with all the reading I've done and the examples, I find there's no
complete example that's larger than trivial.  This has been a great
learning experience, and I'd like to contribute what I've learned back to
the community to make it easier for others to learn how to create basic
grammers and visiti their own ASTs.

Thanks,
Todd

On Sat, Mar 17, 2012 at 12:04 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Todd,
>
> If you can make either all or enough of the code available to recreate the
> problem, including the driver I will see if I can prune out the nil nodes
> for using API calls. I can't promise an answer only help.
>
> Eric
>
> On Sat, Mar 17, 2012 at 1:13 PM, Todd Nine <tnine at apigee.com> wrote:
>
>> Hi Eric,
>>   Mostly a problem. They are remnants from the grammar tree where
>> operator precedence has occurred.  Or->and->not->equality operand.
>>
>> I've subclassed CommonTree for my nodes, and I'm using the visitor
>> pattern to walk the AST and perform the logic to query our Cassandra
>> indexes and return results.  With the nil nodes present, I have to create
>> my own CommonTreeAdapter as well as a nil class for visitor implementation
>> and traversal. If I can just remove them via an option, I won't have to add
>> this extra code.
>>
>> Thanks again for all the help!
>>
>> Todd
>>
>> On Mar 17, 2012, at 7:48 AM, Eric <researcher0x00 at gmail.com> wrote:
>>
>> Hi Todd,
>>
>> Are the nil nodes causing you a problem or are they just astetically
>> unpleasing?
>>
>> Eric
>>
>> On Sat, Mar 17, 2012 at 1:38 AM, Todd Nine <tnine at apigee.com> wrote:
>>
>>> Hi all,
>>>  I now have my AST generating node classes for my tree.  However, I have
>>> one final issue.  nil nodes are included in my tree after parsing is
>>> complete.  They appear in trees due to operator precedence.  Is it
>>> possible
>>> to remove nil nodes as the tree is generated?
>>>
>>> Thanks,
>>> Todd
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From researcher0x00 at gmail.com  Sat Mar 17 12:32:51 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sat, 17 Mar 2012 15:32:51 -0400
Subject: [antlr-interest] Removing nil nodes from tree
In-Reply-To: <CA+yzqf9d9orf2AWQJypo7T1iN+eqn=XKMdaO85D=hBhNbCDTTw@mail.gmail.com>
References: <CA+yzqf9UDC4k_X43TL_B5V55ZTRBZes06z03_8P_+-M=bpBVjQ@mail.gmail.com>
	<CAN45N104u+ZF8RnWpWRNBiCmJdjrCBCr3US=dbP+8xufZ=DU8g@mail.gmail.com>
	<6311074E-4F04-4EDD-9527-4A9159596359@apigee.com>
	<CAN45N12iffsoQ9NbW66aysfBXq71hVXC7fdCEiD_kh4hUrK-FQ@mail.gmail.com>
	<CA+yzqf9d9orf2AWQJypo7T1iN+eqn=XKMdaO85D=hBhNbCDTTw@mail.gmail.com>
Message-ID: <CAN45N10rfY07My-Z=MR_C-dgXS2fLj=2LV-tn1FF2vrMSZ7h5g@mail.gmail.com>

Hi Todd,

I, Ter and the others always welcome such. I am glad you were able to get
your problem solved.

Hope you get the entire project working,
Eric

On Sat, Mar 17, 2012 at 3:23 PM, Todd Nine <tnine at apigee.com> wrote:

> Hi Eric,
>   It was an ID10T error on my part!  In my subclassing of CommonTree, I
> accidentally forgot to pass the token to the parent class via "super(t)".
>  As a result, all boolean and equality expression nodes were returning true
> when "node.isNil()" was invoked.  Hence they were not properly replacing
> nil nodes as the tree was constructed.  After fixing this, everything is
> working properly.  Once I'm done, I think I'm going to create a blog post.
>  Even with all the reading I've done and the examples, I find there's no
> complete example that's larger than trivial.  This has been a great
> learning experience, and I'd like to contribute what I've learned back to
> the community to make it easier for others to learn how to create basic
> grammers and visiti their own ASTs.
>
> Thanks,
> Todd
>
> On Sat, Mar 17, 2012 at 12:04 PM, Eric <researcher0x00 at gmail.com> wrote:
>
>> Hi Todd,
>>
>> If you can make either all or enough of the code available to recreate
>> the problem, including the driver I will see if I can prune out the nil
>> nodes for using API calls. I can't promise an answer only help.
>>
>> Eric
>>
>> On Sat, Mar 17, 2012 at 1:13 PM, Todd Nine <tnine at apigee.com> wrote:
>>
>>> Hi Eric,
>>>   Mostly a problem. They are remnants from the grammar tree where
>>> operator precedence has occurred.  Or->and->not->equality operand.
>>>
>>> I've subclassed CommonTree for my nodes, and I'm using the visitor
>>> pattern to walk the AST and perform the logic to query our Cassandra
>>> indexes and return results.  With the nil nodes present, I have to create
>>> my own CommonTreeAdapter as well as a nil class for visitor implementation
>>> and traversal. If I can just remove them via an option, I won't have to add
>>> this extra code.
>>>
>>> Thanks again for all the help!
>>>
>>> Todd
>>>
>>> On Mar 17, 2012, at 7:48 AM, Eric <researcher0x00 at gmail.com> wrote:
>>>
>>> Hi Todd,
>>>
>>> Are the nil nodes causing you a problem or are they just astetically
>>> unpleasing?
>>>
>>> Eric
>>>
>>> On Sat, Mar 17, 2012 at 1:38 AM, Todd Nine <tnine at apigee.com> wrote:
>>>
>>>> Hi all,
>>>>  I now have my AST generating node classes for my tree.  However, I have
>>>> one final issue.  nil nodes are included in my tree after parsing is
>>>> complete.  They appear in trees due to operator precedence.  Is it
>>>> possible
>>>> to remove nil nodes as the tree is generated?
>>>>
>>>> Thanks,
>>>> Todd
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>
>

From kierans777 at gmail.com  Sun Mar 18 01:21:49 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Sun, 18 Mar 2012 19:21:49 +1100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <CAN45N116FNK+sSF8XJizpqPS1_fijaSs7O9jkRmhEBdQx3WCLQ@mail.gmail.com>
References: <4F59DBC1.4090008@gmail.com>	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>	<4F5C497D.7060004@gmail.com>	<4F5C6A38.7040104@gmail.com>	<4F641066.1090107@gmail.com>
	<CAN45N116FNK+sSF8XJizpqPS1_fijaSs7O9jkRmhEBdQx3WCLQ@mail.gmail.com>
Message-ID: <4F659B1D.1010805@gmail.com>

Eric (and list)

I had a shot at porting Sam's fixes to the C target.  While it does 
indeed fix the label generation issue (yay!), it unfortunately 
introduces a number of other changes which results in uncompilable code 
:'( :'(

I've forked the antlr3 repo at https://github.com/kierans/antlr3 and 
pushed up my current changes.  If anyone has any suggestions (or wishes 
to fork and add some patches) they're more than welcome.  With some more 
tweaking hopefully this bug will go away :D

Cheers,

On 17/03/12 3:48 PM, Eric wrote:
> Hi Kieran,
> Did one of my crazy suggestions actually pan out?
> I took a quick 30 second look at the code and it looks doable. When you
> mentioned Sam I thought it would be C# code, but is actually a java,
> grammar, and string template patch. I'm not sure if all three patches in
> the update have to be applied. If I wasn't going to sleep right now I
> would take a shot at it.
> It might be as simple as applying the patch to the files and building.
> Don't let the unknown file types scare you, just treat it like any patch
> that you would do by hand, looking to make sure that the before and
> after parts match up and there is a good change it will work.
> I should be able to help you tomorrow with it. Drop a message if you
> need help and I will jump in when I see it.
> Good luck and great job on finding it, that fix is wanted by at least
> several people. If you get it to work you might become someones hero.
> Eric.
>
>
> On Sat, Mar 17, 2012 at 12:17 AM, Kieran Simpson <kierans777 at gmail.com
> <mailto:kierans777 at gmail.com>> wrote:
>
>     Further to the related discussion of the Java grammar not compiling (see
>     http://antlr.markmail.org/search/?q=java+parser+not+compiling#query:java%20parser%20not%20compiling+page:1+mid:vyevxqph4xniwl6q+state:results
>     ) I've found Sam's fix for the labels not being generated properly.
>
>     It's
>     https://github.com/antlr/antlr3/commit/db6adaefb12a1901606f81c9c8931aa07d12949f
>     and building against the current head of the antlr3 repo, the fix still
>     holds for the Java target, however the C target still has the bug.
>
>     I'm not that familiar with Antlr's internal workings, nor String
>     Template.  If anyone can help it would be appreciated (not just by my
>     I'm sure).
>
>     Cheers,
>
>
>     On 23/07/64 5:59 AM, Kieran Simpson wrote:
>      > As a follow up, I checked out the antlr3 repo from Git Hub and
>     built the
>      > current master branch. Still have the same problem
>      >
>      > [java] '-classpath'
>      > [java]
>      >
>     './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.1-SNAPSHOT.jar:./lib/antlr-runtime-3.4.1-SNAPSHOT.jar:./lib/stringtemplate-3.2.1.jar'
>      >
>      >
>      > Cheers,
>      >
>      > On 11/03/12 5:43 PM, Kieran Simpson wrote:
>      >> @Bart - yes you're right, I forgot to add the leading ^ for the
>      >> resulting AST in my example. Typo :(
>      >>
>      >> @Ivan - I ran my build with Antlr 3.3 and the resulting code is OK
>      >>
>      >> static void
>     synpred9_CoreConfiguration_fragment(pCoreConfigurationParser
>      >> ctx )
>      >> {
>      >> pANTLR3_COMMON_TOKEN value;
>      >>
>      >> value = NULL;
>      >>
>      >> However I want to use 3.4 ;)
>      >>
>      >> I was thinking it might be a classpath issue, however I'm not
>     certain.
>      >> The classpaths are (from my Ant build):
>      >>
>      >> [java] '-classpath'
>      >> [java]
>      >>
>     './lib/ST4-4.0.4.jar:./lib/antlr-2.7.7.jar:./lib/antlr-3.4.jar:./lib/antlr-runtime-3.4.jar:./lib/stringtemplate-3.2.1.jar'
>      >>
>      >>
>      >>
>      >> [java] '-classpath'
>      >> [java]
>      >>
>     './lib/antlr-2.7.7.jar:./lib/antlr-3.3.jar:./lib/antlr-runtime-3.3.jar:./lib/stringtemplate-3.2.1.jar'
>      >>
>      >>
>      >>
>      >> What is really bothering my is that the the code generated from
>      >> Antlrworks (when I Debug the grammar) is OK
>      >>
>      >> public final void synpred9_CoreConfiguration_fragment() throws
>      >> RecognitionException {
>      >> Token value=null;
>      >>
>      >> If I can get some pointers about where to look/what to look for
>     in the
>      >> code generators (eg: template fragments) I might be able to get more
>      >> info on the code that's playing up. It could be a bad JAR that's
>     being
>      >> retrieved by my build system (Apache Ivy).
>      >>
>      >> Cheers,
>      >>
>      >> On 23/07/64 5:59 AM, Ivan Brezina wrote:
>      >>> Hi
>      >>> maybe you're hitting already discovered bug. This was
>     introduced in the
>      >>> version 3.4. What does the output look like when you use ANTLR
>     version
>      >>> 3.3?
>      >>>
>      >>> Ivan
>      >>>
>      >>> Quoting Kieran Simpson <kierans777 at gmail.com
>     <mailto:kierans777 at gmail.com>>:
>      >>>
>      >>>> For my rule:
>      >>>>
>      >>>> rule
>      >>>> : OPTION1
>      >>>> | value=TION2 -> ($value)
>      >>>> ;
>      >>>>
>      >>>> with backtracking on (and memoize not that I think that's
>     relevant) the
>      >>>> synpredicate code generated has errors, both for the Java and
>     C targets
>      >>>> where the variable name is missing in the declaration
>      >>>>
>      >>>> eg:
>      >>>>
>      >>>> public final void synpred9_grammar_fragment() throws
>      >>>> RecognitionException {
>      >>>> Token =ll;
>      >>>>
>      >>>> and
>      >>>>
>      >>>> static void synpred9_grammar_fragment(pCoreConfigurationParser
>     ctx )
>      >>>> {
>      >>>> pANTLR3_COMMON_TOKEN ;
>      >>>>
>      >>>> =ULL;
>      >>>>
>      >>>> Interestingly this grammar runs in debug mode when used with
>     Antlrworks
>      >>>> even though I'm using version 3.4 of Antlr with my project and
>     3.4 is
>      >>>> included with Antlrworks (1.4.3).
>      >>>>
>      >>>> Just in case it's due to an out of date version, here are some
>     md5sums
>      >>>>
>      >>>> 9638f9b7b1b823fcaba977f06f0dd761 ./antlr/3.4/antlrworks-1.4.3.jar
>      >>>>
>      >>>> 465472089d78cd80f926f5825a29ec7f ./lib/antlr-3.4.jar
>      >>>> 0e0318be407e51fdf7ba6777eabfdf73 ./lib/antlr-runtime-3.4.jar
>      >>>>
>      >>>> Is something out of date here or is this a bug with the
>     backtracking
>      >>>> generation?
>      >>>>
>      >>>> Cheers,

From researcher0x00 at gmail.com  Sun Mar 18 07:24:32 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 18 Mar 2012 10:24:32 -0400
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F659B1D.1010805@gmail.com>
References: <4F59DBC1.4090008@gmail.com>
	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>
	<4F5C497D.7060004@gmail.com> <4F5C6A38.7040104@gmail.com>
	<4F641066.1090107@gmail.com>
	<CAN45N116FNK+sSF8XJizpqPS1_fijaSs7O9jkRmhEBdQx3WCLQ@mail.gmail.com>
	<4F659B1D.1010805@gmail.com>
Message-ID: <CAN45N12btCUp0Lkt97F0pOOSFriDjcOkBUxWmJ0_n9ZYgVdH4Q@mail.gmail.com>

Hi Kieran,

I looked at the github files and see that you are working with the C
target. I have never worked with the C target, that is Jim Idle's world.

I also noticed that you mention the grammar works with ANTLR 3.3 but that
you want to use ANTLR 3.4. If it were me and the grammar worked with ANTLR
3.3, I would skip the path of trying to fix ANTLR 3.4; you will learn a lot
by trying to fix ANTLR 3.4 but will you actually be productive on your
ultimate goal? I have spent time modifying ANTLR to extend for parsing
binary files; learned a lot but all of the changes went to bit heaven.

If there is something in the grammar forcing you to use 3.4, I would take
the easier route and see if I could modify the grammar to work with 3.4 as
is or 3.3.

One of the ways I view a grammar is as a high level language for parsing.
If I can't define what I need through the grammar, I use actions. Think of
a grammar as a high level language and actions as assembly language. It is
amazing how much you can do with actions. Remember all parts of a grammar,
including predicates are translated into the target language. Instead of
trying to patch ANTLR to use a predicate, just recreate the predicate using
actions; it should be easier than fixing ANTLR for someone who doesn't
understand all of ANTLRs internals.I don't even understand all of ANTLRs
internals.

Hope that helps,

Eric





On Sun, Mar 18, 2012 at 4:21 AM, Kieran Simpson <kierans777 at gmail.com>wrote:

> Eric (and list)
>
> I had a shot at porting Sam's fixes to the C target.  While it does indeed
> fix the label generation issue (yay!), it unfortunately introduces a number
> of other changes which results in uncompilable code :'( :'(
>
> I've forked the antlr3 repo at https://github.com/kierans/**antlr3<https://github.com/kierans/antlr3>and pushed up my current changes.  If anyone has any suggestions (or wishes
> to fork and add some patches) they're more than welcome.  With some more
> tweaking hopefully this bug will go away :D
>
> Cheers,
>
>
> On 17/03/12 3:48 PM, Eric wrote:
>
>> Hi Kieran,
>> Did one of my crazy suggestions actually pan out?
>> I took a quick 30 second look at the code and it looks doable. When you
>> mentioned Sam I thought it would be C# code, but is actually a java,
>> grammar, and string template patch. I'm not sure if all three patches in
>> the update have to be applied. If I wasn't going to sleep right now I
>> would take a shot at it.
>> It might be as simple as applying the patch to the files and building.
>> Don't let the unknown file types scare you, just treat it like any patch
>> that you would do by hand, looking to make sure that the before and
>> after parts match up and there is a good change it will work.
>> I should be able to help you tomorrow with it. Drop a message if you
>> need help and I will jump in when I see it.
>> Good luck and great job on finding it, that fix is wanted by at least
>> several people. If you get it to work you might become someones hero.
>> Eric.
>>
>>
>> On Sat, Mar 17, 2012 at 12:17 AM, Kieran Simpson <kierans777 at gmail.com
>> <mailto:kierans777 at gmail.com>> wrote:
>>
>>    Further to the related discussion of the Java grammar not compiling
>> (see
>>    http://antlr.markmail.org/**search/?q=java+parser+not+**
>> compiling#query:java%20parser%**20not%20compiling+page:1+mid:**
>> vyevxqph4xniwl6q+state:results<http://antlr.markmail.org/search/?q=java+parser+not+compiling#query:java%20parser%20not%20compiling+page:1+mid:vyevxqph4xniwl6q+state:results>
>>    ) I've found Sam's fix for the labels not being generated properly.
>>
>>    It's
>>    https://github.com/antlr/**antlr3/commit/**
>> db6adaefb12a1901606f81c9c8931a**a07d12949f<https://github.com/antlr/antlr3/commit/db6adaefb12a1901606f81c9c8931aa07d12949f>
>>    and building against the current head of the antlr3 repo, the fix still
>>    holds for the Java target, however the C target still has the bug.
>>
>>    I'm not that familiar with Antlr's internal workings, nor String
>>    Template.  If anyone can help it would be appreciated (not just by my
>>    I'm sure).
>>
>>    Cheers,
>>
>>
>>    On 23/07/64 5:59 AM, Kieran Simpson wrote:
>>     > As a follow up, I checked out the antlr3 repo from Git Hub and
>>    built the
>>     > current master branch. Still have the same problem
>>     >
>>     > [java] '-classpath'
>>     > [java]
>>     >
>>    './lib/ST4-4.0.4.jar:./lib/**antlr-2.7.7.jar:./lib/antlr-3.**
>> 4.1-SNAPSHOT.jar:./lib/antlr-**runtime-3.4.1-SNAPSHOT.jar:./**
>> lib/stringtemplate-3.2.1.jar'
>>     >
>>     >
>>     > Cheers,
>>     >
>>     > On 11/03/12 5:43 PM, Kieran Simpson wrote:
>>     >> @Bart - yes you're right, I forgot to add the leading ^ for the
>>     >> resulting AST in my example. Typo :(
>>     >>
>>     >> @Ivan - I ran my build with Antlr 3.3 and the resulting code is OK
>>     >>
>>     >> static void
>>    synpred9_CoreConfiguration_**fragment(**pCoreConfigurationParser
>>     >> ctx )
>>     >> {
>>     >> pANTLR3_COMMON_TOKEN value;
>>     >>
>>     >> value = NULL;
>>     >>
>>     >> However I want to use 3.4 ;)
>>     >>
>>     >> I was thinking it might be a classpath issue, however I'm not
>>    certain.
>>     >> The classpaths are (from my Ant build):
>>     >>
>>     >> [java] '-classpath'
>>     >> [java]
>>     >>
>>    './lib/ST4-4.0.4.jar:./lib/**antlr-2.7.7.jar:./lib/antlr-3.**
>> 4.jar:./lib/antlr-runtime-3.4.**jar:./lib/stringtemplate-3.2.**1.jar'
>>     >>
>>     >>
>>     >>
>>     >> [java] '-classpath'
>>     >> [java]
>>     >>
>>    './lib/antlr-2.7.7.jar:./lib/**antlr-3.3.jar:./lib/antlr-**
>> runtime-3.3.jar:./lib/**stringtemplate-3.2.1.jar'
>>     >>
>>     >>
>>     >>
>>     >> What is really bothering my is that the the code generated from
>>     >> Antlrworks (when I Debug the grammar) is OK
>>     >>
>>     >> public final void synpred9_CoreConfiguration_**fragment() throws
>>     >> RecognitionException {
>>     >> Token value=null;
>>     >>
>>     >> If I can get some pointers about where to look/what to look for
>>    in the
>>     >> code generators (eg: template fragments) I might be able to get
>> more
>>     >> info on the code that's playing up. It could be a bad JAR that's
>>    being
>>     >> retrieved by my build system (Apache Ivy).
>>     >>
>>     >> Cheers,
>>     >>
>>     >> On 23/07/64 5:59 AM, Ivan Brezina wrote:
>>     >>> Hi
>>     >>> maybe you're hitting already discovered bug. This was
>>    introduced in the
>>     >>> version 3.4. What does the output look like when you use ANTLR
>>    version
>>     >>> 3.3?
>>     >>>
>>     >>> Ivan
>>     >>>
>>     >>> Quoting Kieran Simpson <kierans777 at gmail.com
>>    <mailto:kierans777 at gmail.com>>**:
>>
>>     >>>
>>     >>>> For my rule:
>>     >>>>
>>     >>>> rule
>>     >>>> : OPTION1
>>     >>>> | value=TION2 -> ($value)
>>     >>>> ;
>>     >>>>
>>     >>>> with backtracking on (and memoize not that I think that's
>>    relevant) the
>>     >>>> synpredicate code generated has errors, both for the Java and
>>    C targets
>>     >>>> where the variable name is missing in the declaration
>>     >>>>
>>     >>>> eg:
>>     >>>>
>>     >>>> public final void synpred9_grammar_fragment() throws
>>     >>>> RecognitionException {
>>     >>>> Token =ll;
>>     >>>>
>>     >>>> and
>>     >>>>
>>     >>>> static void synpred9_grammar_fragment(**pCoreConfigurationParser
>>    ctx )
>>     >>>> {
>>     >>>> pANTLR3_COMMON_TOKEN ;
>>     >>>>
>>     >>>> =ULL;
>>     >>>>
>>     >>>> Interestingly this grammar runs in debug mode when used with
>>    Antlrworks
>>     >>>> even though I'm using version 3.4 of Antlr with my project and
>>    3.4 is
>>     >>>> included with Antlrworks (1.4.3).
>>     >>>>
>>     >>>> Just in case it's due to an out of date version, here are some
>>    md5sums
>>     >>>>
>>     >>>> 9638f9b7b1b823fcaba977f06f0dd7**61 ./antlr/3.4/antlrworks-1.4.3.
>> **jar
>>     >>>>
>>     >>>> 465472089d78cd80f926f5825a29ec**7f ./lib/antlr-3.4.jar
>>     >>>> 0e0318be407e51fdf7ba6777eabfdf**73 ./lib/antlr-runtime-3.4.jar
>>     >>>>
>>     >>>> Is something out of date here or is this a bug with the
>>    backtracking
>>     >>>> generation?
>>     >>>>
>>     >>>> Cheers,
>>
>

From Christian.Boitet at imag.fr  Sun Mar 18 07:33:21 2012
From: Christian.Boitet at imag.fr (Christian Boitet)
Date: Sun, 18 Mar 2012 15:33:21 +0100
Subject: [antlr-interest]  wildcard for tree node: x=EOA ?
Message-ID: <a06240800cb8b9fa3f244@[129.88.65.147]>

Hello,						18/3/12

we got no answer to the question below sent on 22/2/2012.

That problem has forced us to stay behind with 
ANTLR 3.1, but we certainly should move to ANTRL 
3.4 asap.

It should be easy to keep compatibility with what 
existed before, namely that, in a tree 
expression, the first element, which must be a 
node, is treated as a node if it is a "wildcard" 
(".").

Example: ^(x=., y=., z=.)

$x should be a node and $y, $z should be trees.

With ANTLR 3.4, we get an error message on $x:

	"Wildcard invalid as root; wildcard can itself be a tree".

Jean-Claude tried a solution (see below), but it did not work.


In some tree-rewriting systems, like the 
Q-systems of Colmerauer, there are 3 parameter 
forms:
A*n  for a node
I*n  for a single tree (non empty)
U*n  for a forest (possibly empty list of trees)


Thanks in advance,

Xan





Hello,    -- 22/2/12 --

Sam Harwell (26 novembre 2008) proposed the 
correction for the generic wildcard node:
1. Is it implemented in antlr 3.4 for C ?    -- "it" = "that correction"
2. Is EOA the generic type of a node ?       -- it seems NOT
3. Can I write:

// Impression XML:
// ***************
xml
@init{ int nond=0; }
	:
	appxml[1, &nond]
	;

appxml[int indent, int* pnond]:
	^( x=EOA
			{ imprimerNoeud2XML(indent, debut, $x, pnond); }
		appxml[indent+1, pnond]+
			{ imprimerNoeud2XML(indent, fin, $x, pnond); }
	)
	|
		y=EOA
			{ imprimerNoeud2XML(indent, feuille, $y, pnond); }
	;


I am upgrading from antlr 3.1 to 3.4 and until 
now I used the dot as the generic node (  x=. and 
y=. in the above example ).
Now I get the error "Wildcard invalid as root; wildcard can itself be a tree".

Thanks a lot in advance

Jean-Claude Durand

LIG, ?quipe GETALP
385, rue de la Biblioth?que
BP 53
38041 Grenoble cedex 9

Jean-Claude.Durand at imag.fr
t?l: +33 (0)4 76 51 43 81
fax: +33 (0)4 76 63 56 86


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: 
http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From cjdaniels4 at gmail.com  Sun Mar 18 08:22:00 2012
From: cjdaniels4 at gmail.com (Charles Daniels)
Date: Sun, 18 Mar 2012 11:22:00 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
Message-ID: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>

I am very new to ANTLR and I having trouble properly defining part of a
grammar that I am constructing to recognize a specialized configuration
file syntax (already defined, so I cannot change it).

The trouble I am having is recognizing the following type of entry in the
config file:

"name" type "value"


where the following rules apply:

   1. The double quotes are a required part of the syntax, both for the
   name and the value.
   2. A "name" is essentially a Java identifier
   3. A "value" is a string literal

I have the following grammar so far:

triplet : IDENTIFIER type STRINGLITERAL ;

type : 'Boolean' | 'Integer' | 'String' ;

STRINGLITERAL : (copied from Java.g)

IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;

IdentifierStart : (copied from Java.g)

IdentifierPart : (copied from Java.g)

When I compile this grammar, ANTLR hangs. When I remove the double quotes
from IDENTIFIER, it compiles successfully. I am guessing that when I
include the double quotes in IDENTIFIER they are somehow causing the
compilation to hang due to the double quotes that are also in STRINGLITERAL.

Does anybody have any suggestions on how to define this so that I can use
double quotes around names and values and the compiler doesn't hang?

Thanks,
Chuck

From researcher0x00 at gmail.com  Sun Mar 18 09:27:51 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 18 Mar 2012 12:27:51 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
Message-ID: <CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>

Hi Chuck,

Off the top of my head I would guess that STRINGLITERAL  is trumping
IDENTIFIER. In other works the lexer generates tokens. The tokens are
created based on the rules in the lexer. Since STRINGLITERAL  comes before
IDENTIFIER, anything that matches STRINGLITERAL will make a
STRINGLITERAL  token even if STRINGLITERAL  defines the same character
string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
IdentifierStart IdentifierPart* '"'

Can you post your full grammar. I am having to guess at (copied from
Java.g) and believe I have something different.

Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note this
is not the latest version of ANTLRWorks which is 1.4.3. I am not
recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
diagrams due to a bug and when I new user tries to do this and it doesn't
work they think they did something wrong when if fact it is a bug from
ANTLR 3.4 which is used by ANTLRWorks 1.4.3.

Also, you can search previous post to the list by using
http://antlr.markmail.org/

Hope that helps, Eric




On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <cjdaniels4 at gmail.com>wrote:

> I am very new to ANTLR and I having trouble properly defining part of a
> grammar that I am constructing to recognize a specialized configuration
> file syntax (already defined, so I cannot change it).
>
> The trouble I am having is recognizing the following type of entry in the
> config file:
>
> "name" type "value"
>
>
> where the following rules apply:
>
>   1. The double quotes are a required part of the syntax, both for the
>   name and the value.
>   2. A "name" is essentially a Java identifier
>   3. A "value" is a string literal
>
> I have the following grammar so far:
>
> triplet : IDENTIFIER type STRINGLITERAL ;
>
> type : 'Boolean' | 'Integer' | 'String' ;
>
> STRINGLITERAL : (copied from Java.g)
>
> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>
> IdentifierStart : (copied from Java.g)
>
> IdentifierPart : (copied from Java.g)
>
> When I compile this grammar, ANTLR hangs. When I remove the double quotes
> from IDENTIFIER, it compiles successfully. I am guessing that when I
> include the double quotes in IDENTIFIER they are somehow causing the
> compilation to hang due to the double quotes that are also in
> STRINGLITERAL.
>
> Does anybody have any suggestions on how to define this so that I can use
> double quotes around names and values and the compiler doesn't hang?
>
> Thanks,
> Chuck
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From cjdaniels4 at gmail.com  Sun Mar 18 12:01:20 2012
From: cjdaniels4 at gmail.com (Charles Daniels)
Date: Sun, 18 Mar 2012 15:01:20 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
	<CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
Message-ID: <CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>

Hi Eric,

Thanks for the quick response. I have downloaded ANTLRWorks 1.4.2 and
created a fresh grammar using some of the defaults that the tool generates.
Below is my grammar.

This grammar successfully parses the following input:

name String "value"


However, I want to modify this grammar so that it will successfully parse
the following input instead:

"name" String "value"


In attempting to do this, I modified the grammar below by adding double
quotes around ID, like so:

ID  : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* '"'
    ;


However, parsing fails (MissingTokenException) for the desired input. I'm
guessing that's because "value" is matched to ID rather than to STRING,
when I add the quotes around ID.

Is there any way to get "value" to match STRING instead of matching ID when
I add quotes to ID? Will backtracking help? If so, how would I specify it?

Thanks,
Chuck

--- BEGIN GRAMMAR ---
grammar Config;

triplet : ID type STRING
;
 type : 'Boolean' | 'Integer' | 'String'
 ;

ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;

COMMENT
    :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
    |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
    ;

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel=HIDDEN;}
    ;

STRING
    :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
    ;

fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;

fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;
--- END GRAMMAR ---


On Sun, Mar 18, 2012 at 12:27 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Chuck,
>
> Off the top of my head I would guess that STRINGLITERAL  is trumping
> IDENTIFIER. In other works the lexer generates tokens. The tokens are
> created based on the rules in the lexer. Since STRINGLITERAL  comes before
> IDENTIFIER, anything that matches STRINGLITERAL will make a
> STRINGLITERAL  token even if STRINGLITERAL  defines the same character
> string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
> IdentifierStart IdentifierPart* '"'
>
> Can you post your full grammar. I am having to guess at (copied from
> Java.g) and believe I have something different.
>
> Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note this
> is not the latest version of ANTLRWorks which is 1.4.3. I am not
> recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
> diagrams due to a bug and when I new user tries to do this and it doesn't
> work they think they did something wrong when if fact it is a bug from
> ANTLR 3.4 which is used by ANTLRWorks 1.4.3.
>
> Also, you can search previous post to the list by using
> http://antlr.markmail.org/
>
> Hope that helps, Eric
>
>
>
>
> On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>
>>  I am very new to ANTLR and I having trouble properly defining part of a
>> grammar that I am constructing to recognize a specialized configuration
>> file syntax (already defined, so I cannot change it).
>>
>> The trouble I am having is recognizing the following type of entry in the
>> config file:
>>
>> "name" type "value"
>>
>>
>> where the following rules apply:
>>
>>   1. The double quotes are a required part of the syntax, both for the
>>   name and the value.
>>   2. A "name" is essentially a Java identifier
>>   3. A "value" is a string literal
>>
>>
>> I have the following grammar so far:
>>
>> triplet : IDENTIFIER type STRINGLITERAL ;
>>
>> type : 'Boolean' | 'Integer' | 'String' ;
>>
>> STRINGLITERAL : (copied from Java.g)
>>
>> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>>
>> IdentifierStart : (copied from Java.g)
>>
>> IdentifierPart : (copied from Java.g)
>>
>> When I compile this grammar, ANTLR hangs. When I remove the double quotes
>> from IDENTIFIER, it compiles successfully. I am guessing that when I
>> include the double quotes in IDENTIFIER they are somehow causing the
>> compilation to hang due to the double quotes that are also in
>> STRINGLITERAL.
>>
>> Does anybody have any suggestions on how to define this so that I can use
>> double quotes around names and values and the compiler doesn't hang?
>>
>> Thanks,
>> Chuck
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From researcher0x00 at gmail.com  Sun Mar 18 13:48:49 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 18 Mar 2012 16:48:49 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
	<CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
	<CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>
Message-ID: <CAN45N10qQwUJ+r7Dtp927Nxz+0UBezz-3gc8MdUYUX_mF0gN=A@mail.gmail.com>

Hi Chuck,

The below grammar worked for me for   "test" Integer "01" and some other
basic test

Be careful with the grammar; it can easily cause a new person lots of
problems. The main reason is that you have
1. Keywords
2. Identifiers
3. String Literals
4. Whitespace
which are all either subsets or a partial set of another. I spent 90% of my
time setting up the rules to keep them corralled and in the right order.

The main changes I made were
1. pulled all of the string literals out of the parser rules
2. Used Ters example for keywords See:
http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
3. Created a TYPE lexer rule so that the types wouldn't become ID.
4. Changed the WS rule, mostly added +
5. Pulled the quotes out as a separate token
6. Moved UnquotedString to be the last rule since it tries to consume
nearly everything.
7. Added space and tab to the negation rule for UnquotedString. I avoid
negation in lexer rules like the plague, they always lead to a problem. The
UnquotedString rule can become the death of you if you don't respect it.

Also using ANTLRWorks "Show Input Tokens" under the run menu revealed that
the space at the end of the type and before the quote was not being pulled
out as a WS token and that was causing a big problem.

Enjoy, Eric



grammar Chuck001;
// Parser Rles
triplet : Quote ID Quote type Quote UnquotedString Quote ;

type :  keyINTEGER
 | keyBOOLEAN
 | keySTRING
 ;

keyBOOLEAN : {input.LT(1).getText().equals("Boolean")}? TYPE;
keyINTEGER  : {input.LT(1).getText().equals("Integer")}? TYPE;
keySTRING : {input.LT(1).getText().equals("String")}? TYPE;


// Lexer Rules
Quote : '"';
TYPE : ('A'..'Z')('a'..'z')*
 ;
ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
 ;

COMMENT :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
 |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
 ;
WS :
 ( '\t'
 | ' '
 | '\r'
 | '\n'
 | '\u000C'
 ) + { $channel = HIDDEN; }
 ;
fragment
HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;
fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;
fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

UnquotedString
    :   ( ESC_SEQ | ~('\\'|'"'|' '|'\t') )*
    ;

On Sun, Mar 18, 2012 at 3:01 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:

> Hi Eric,
>
> Thanks for the quick response. I have downloaded ANTLRWorks 1.4.2 and
> created a fresh grammar using some of the defaults that the tool generates.
> Below is my grammar.
>
> This grammar successfully parses the following input:
>
> name String "value"
>
>
> However, I want to modify this grammar so that it will successfully parse
> the following input instead:
>
> "name" String "value"
>
>
> In attempting to do this, I modified the grammar below by adding double
> quotes around ID, like so:
>
> ID  : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* '"'
>     ;
>
>
> However, parsing fails (MissingTokenException) for the desired input. I'm
> guessing that's because "value" is matched to ID rather than to STRING,
> when I add the quotes around ID.
>
> Is there any way to get "value" to match STRING instead of matching ID
> when I add quotes to ID? Will backtracking help? If so, how would I specify
> it?
>
> Thanks,
> Chuck
>
> --- BEGIN GRAMMAR ---
> grammar Config;
>
> triplet : ID type STRING
> ;
>  type : 'Boolean' | 'Integer' | 'String'
>  ;
>
> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>     ;
>
> COMMENT
>     :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>     |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>     ;
>
> WS  :   ( ' '
>         | '\t'
>         | '\r'
>         | '\n'
>         ) {$channel=HIDDEN;}
>     ;
>
> STRING
>     :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
>     ;
>
> fragment
> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>
> fragment
> ESC_SEQ
>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>     |   UNICODE_ESC
>     |   OCTAL_ESC
>     ;
>
> fragment
> OCTAL_ESC
>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7')
>     ;
>
> fragment
> UNICODE_ESC
>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>     ;
> --- END GRAMMAR ---
>
>
> On Sun, Mar 18, 2012 at 12:27 PM, Eric <researcher0x00 at gmail.com> wrote:
>
>> Hi Chuck,
>>
>> Off the top of my head I would guess that STRINGLITERAL  is trumping
>> IDENTIFIER. In other works the lexer generates tokens. The tokens are
>> created based on the rules in the lexer. Since STRINGLITERAL  comes before
>> IDENTIFIER, anything that matches STRINGLITERAL will make a
>> STRINGLITERAL  token even if STRINGLITERAL  defines the same character
>> string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
>> IdentifierStart IdentifierPart* '"'
>>
>> Can you post your full grammar. I am having to guess at (copied from
>> Java.g) and believe I have something different.
>>
>> Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note
>> this is not the latest version of ANTLRWorks which is 1.4.3. I am not
>> recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
>> diagrams due to a bug and when I new user tries to do this and it doesn't
>> work they think they did something wrong when if fact it is a bug from
>> ANTLR 3.4 which is used by ANTLRWorks 1.4.3.
>>
>> Also, you can search previous post to the list by using
>> http://antlr.markmail.org/
>>
>> Hope that helps, Eric
>>
>>
>>
>>
>> On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>>
>>>  I am very new to ANTLR and I having trouble properly defining part of a
>>> grammar that I am constructing to recognize a specialized configuration
>>> file syntax (already defined, so I cannot change it).
>>>
>>> The trouble I am having is recognizing the following type of entry in the
>>> config file:
>>>
>>> "name" type "value"
>>>
>>>
>>> where the following rules apply:
>>>
>>>   1. The double quotes are a required part of the syntax, both for the
>>>   name and the value.
>>>   2. A "name" is essentially a Java identifier
>>>   3. A "value" is a string literal
>>>
>>>
>>> I have the following grammar so far:
>>>
>>> triplet : IDENTIFIER type STRINGLITERAL ;
>>>
>>> type : 'Boolean' | 'Integer' | 'String' ;
>>>
>>> STRINGLITERAL : (copied from Java.g)
>>>
>>> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>>>
>>> IdentifierStart : (copied from Java.g)
>>>
>>> IdentifierPart : (copied from Java.g)
>>>
>>> When I compile this grammar, ANTLR hangs. When I remove the double quotes
>>> from IDENTIFIER, it compiles successfully. I am guessing that when I
>>> include the double quotes in IDENTIFIER they are somehow causing the
>>> compilation to hang due to the double quotes that are also in
>>> STRINGLITERAL.
>>>
>>> Does anybody have any suggestions on how to define this so that I can use
>>> double quotes around names and values and the compiler doesn't hang?
>>>
>>> Thanks,
>>> Chuck
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From researcher0x00 at gmail.com  Sun Mar 18 14:19:46 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 18 Mar 2012 17:19:46 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CAN45N10qQwUJ+r7Dtp927Nxz+0UBezz-3gc8MdUYUX_mF0gN=A@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
	<CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
	<CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>
	<CAN45N10qQwUJ+r7Dtp927Nxz+0UBezz-3gc8MdUYUX_mF0gN=A@mail.gmail.com>
Message-ID: <CAN45N13-6EO9izSJSNBeR58mjgd41TPLKxNpZy1xukXDJa7puw@mail.gmail.com>

Hi Chuck,

Opps. I just realized that you probably want to have spaces in your
StringLiteral and the grammar I just gave you doesn't allow that.

I look at it some more.

Eric



On Sun, Mar 18, 2012 at 4:48 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Chuck,
>
> The below grammar worked for me for   "test" Integer "01" and some other
> basic test
>
> Be careful with the grammar; it can easily cause a new person lots of
> problems. The main reason is that you have
> 1. Keywords
> 2. Identifiers
> 3. String Literals
> 4. Whitespace
> which are all either subsets or a partial set of another. I spent 90% of
> my time setting up the rules to keep them corralled and in the right order.
>
> The main changes I made were
> 1. pulled all of the string literals out of the parser rules
> 2. Used Ters example for keywords See:
> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
> 3. Created a TYPE lexer rule so that the types wouldn't become ID.
> 4. Changed the WS rule, mostly added +
> 5. Pulled the quotes out as a separate token
> 6. Moved UnquotedString to be the last rule since it tries to consume
> nearly everything.
> 7. Added space and tab to the negation rule for UnquotedString. I avoid
> negation in lexer rules like the plague, they always lead to a problem. The
> UnquotedString rule can become the death of you if you don't respect it.
>
> Also using ANTLRWorks "Show Input Tokens" under the run menu revealed that
> the space at the end of the type and before the quote was not being pulled
> out as a WS token and that was causing a big problem.
>
> Enjoy, Eric
>
>
>
> grammar Chuck001;
> // Parser Rles
> triplet : Quote ID Quote type Quote UnquotedString Quote ;
>
> type :  keyINTEGER
>  | keyBOOLEAN
>  | keySTRING
>  ;
>
> keyBOOLEAN : {input.LT(1).getText().equals("Boolean")}? TYPE;
> keyINTEGER  : {input.LT(1).getText().equals("Integer")}? TYPE;
> keySTRING : {input.LT(1).getText().equals("String")}? TYPE;
>
>
> // Lexer Rules
> Quote : '"';
> TYPE : ('A'..'Z')('a'..'z')*
>  ;
> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>  ;
>
> COMMENT :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>  |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>  ;
> WS :
>  ( '\t'
>  | ' '
>  | '\r'
>  | '\n'
>  | '\u000C'
>  ) + { $channel = HIDDEN; }
>  ;
> fragment
> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
> fragment
> ESC_SEQ
>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>     |   UNICODE_ESC
>     |   OCTAL_ESC
>     ;
> fragment
> OCTAL_ESC
>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7') ('0'..'7')
>     |   '\\' ('0'..'7')
>     ;
> fragment
> UNICODE_ESC
>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>     ;
>
> UnquotedString
>     :   ( ESC_SEQ | ~('\\'|'"'|' '|'\t') )*
>     ;
>
> On Sun, Mar 18, 2012 at 3:01 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>
>> Hi Eric,
>>
>> Thanks for the quick response. I have downloaded ANTLRWorks 1.4.2 and
>> created a fresh grammar using some of the defaults that the tool generates.
>> Below is my grammar.
>>
>> This grammar successfully parses the following input:
>>
>> name String "value"
>>
>>
>> However, I want to modify this grammar so that it will successfully parse
>> the following input instead:
>>
>> "name" String "value"
>>
>>
>> In attempting to do this, I modified the grammar below by adding double
>> quotes around ID, like so:
>>
>> ID  : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* '"'
>>     ;
>>
>>
>> However, parsing fails (MissingTokenException) for the desired input. I'm
>> guessing that's because "value" is matched to ID rather than to STRING,
>> when I add the quotes around ID.
>>
>> Is there any way to get "value" to match STRING instead of matching ID
>> when I add quotes to ID? Will backtracking help? If so, how would I specify
>> it?
>>
>> Thanks,
>> Chuck
>>
>> --- BEGIN GRAMMAR ---
>> grammar Config;
>>
>> triplet : ID type STRING
>> ;
>>  type : 'Boolean' | 'Integer' | 'String'
>>  ;
>>
>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>     ;
>>
>> COMMENT
>>     :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>     |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>     ;
>>
>> WS  :   ( ' '
>>         | '\t'
>>         | '\r'
>>         | '\n'
>>         ) {$channel=HIDDEN;}
>>     ;
>>
>> STRING
>>     :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
>>     ;
>>
>> fragment
>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>
>> fragment
>> ESC_SEQ
>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>     |   UNICODE_ESC
>>     |   OCTAL_ESC
>>     ;
>>
>> fragment
>> OCTAL_ESC
>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>     |   '\\' ('0'..'7') ('0'..'7')
>>     |   '\\' ('0'..'7')
>>     ;
>>
>> fragment
>> UNICODE_ESC
>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>     ;
>> --- END GRAMMAR ---
>>
>>
>> On Sun, Mar 18, 2012 at 12:27 PM, Eric <researcher0x00 at gmail.com> wrote:
>>
>>> Hi Chuck,
>>>
>>> Off the top of my head I would guess that STRINGLITERAL  is trumping
>>> IDENTIFIER. In other works the lexer generates tokens. The tokens are
>>> created based on the rules in the lexer. Since STRINGLITERAL  comes before
>>> IDENTIFIER, anything that matches STRINGLITERAL will make a
>>> STRINGLITERAL  token even if STRINGLITERAL  defines the same character
>>> string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
>>> IdentifierStart IdentifierPart* '"'
>>>
>>> Can you post your full grammar. I am having to guess at (copied from
>>> Java.g) and believe I have something different.
>>>
>>> Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note
>>> this is not the latest version of ANTLRWorks which is 1.4.3. I am not
>>> recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
>>> diagrams due to a bug and when I new user tries to do this and it doesn't
>>> work they think they did something wrong when if fact it is a bug from
>>> ANTLR 3.4 which is used by ANTLRWorks 1.4.3.
>>>
>>> Also, you can search previous post to the list by using
>>> http://antlr.markmail.org/
>>>
>>> Hope that helps, Eric
>>>
>>>
>>>
>>>
>>> On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>>>
>>>>  I am very new to ANTLR and I having trouble properly defining part of a
>>>> grammar that I am constructing to recognize a specialized configuration
>>>> file syntax (already defined, so I cannot change it).
>>>>
>>>> The trouble I am having is recognizing the following type of entry in
>>>> the
>>>> config file:
>>>>
>>>> "name" type "value"
>>>>
>>>>
>>>> where the following rules apply:
>>>>
>>>>   1. The double quotes are a required part of the syntax, both for the
>>>>   name and the value.
>>>>   2. A "name" is essentially a Java identifier
>>>>   3. A "value" is a string literal
>>>>
>>>>
>>>> I have the following grammar so far:
>>>>
>>>> triplet : IDENTIFIER type STRINGLITERAL ;
>>>>
>>>> type : 'Boolean' | 'Integer' | 'String' ;
>>>>
>>>> STRINGLITERAL : (copied from Java.g)
>>>>
>>>> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>>>>
>>>> IdentifierStart : (copied from Java.g)
>>>>
>>>> IdentifierPart : (copied from Java.g)
>>>>
>>>> When I compile this grammar, ANTLR hangs. When I remove the double
>>>> quotes
>>>> from IDENTIFIER, it compiles successfully. I am guessing that when I
>>>> include the double quotes in IDENTIFIER they are somehow causing the
>>>> compilation to hang due to the double quotes that are also in
>>>> STRINGLITERAL.
>>>>
>>>> Does anybody have any suggestions on how to define this so that I can
>>>> use
>>>> double quotes around names and values and the compiler doesn't hang?
>>>>
>>>> Thanks,
>>>> Chuck
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>
>

From cjdaniels4 at gmail.com  Sun Mar 18 14:31:16 2012
From: cjdaniels4 at gmail.com (Charles Daniels)
Date: Sun, 18 Mar 2012 17:31:16 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CAN45N13-6EO9izSJSNBeR58mjgd41TPLKxNpZy1xukXDJa7puw@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
	<CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
	<CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>
	<CAN45N10qQwUJ+r7Dtp927Nxz+0UBezz-3gc8MdUYUX_mF0gN=A@mail.gmail.com>
	<CAN45N13-6EO9izSJSNBeR58mjgd41TPLKxNpZy1xukXDJa7puw@mail.gmail.com>
Message-ID: <CA+e3_SQE-CUXCKA6CnEYQVp14B2Ufvn8KL=xPRkFFATe2+Tryw@mail.gmail.com>

Hi Eric,

I really appreciate the amount of time you're putting into helping me.

And yes, regarding the string literals, I do want to allow whitespace
characters (blank, tab, line feed, and carriage return).

Regarding the rules for keyBOOLEAN, etc., would you mind explaining just a
bit about what they are doing, particularly with the trailing TYPE?

Finally, regarding the triplet rule, won't the way you've written it permit
whitespace between the Quote tokens and the other tokens? I was putting the
quote characters within the lexer rules so that this wouldn't happen for
the ID. For the string literal, if the whitespace is captured separately
from the string literal, then the whitespace won't be a part of the string
literal, which wouldn't be right. Am I understanding things correctly here?

Thanks a lot!
Chuck

On Sun, Mar 18, 2012 at 5:19 PM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Chuck,
>
> Opps. I just realized that you probably want to have spaces in your
> StringLiteral and the grammar I just gave you doesn't allow that.
>
> I look at it some more.
>
> Eric
>
>
>
> On Sun, Mar 18, 2012 at 4:48 PM, Eric <researcher0x00 at gmail.com> wrote:
>
>> Hi Chuck,
>>
>> The below grammar worked for me for   "test" Integer "01" and some other
>> basic test
>>
>> Be careful with the grammar; it can easily cause a new person lots of
>> problems. The main reason is that you have
>> 1. Keywords
>> 2. Identifiers
>> 3. String Literals
>> 4. Whitespace
>> which are all either subsets or a partial set of another. I spent 90% of
>> my time setting up the rules to keep them corralled and in the right order.
>>
>> The main changes I made were
>> 1. pulled all of the string literals out of the parser rules
>> 2. Used Ters example for keywords See:
>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>> 3. Created a TYPE lexer rule so that the types wouldn't become ID.
>> 4. Changed the WS rule, mostly added +
>> 5. Pulled the quotes out as a separate token
>> 6. Moved UnquotedString to be the last rule since it tries to consume
>> nearly everything.
>> 7. Added space and tab to the negation rule for UnquotedString. I avoid
>> negation in lexer rules like the plague, they always lead to a problem. The
>> UnquotedString rule can become the death of you if you don't respect it.
>>
>> Also using ANTLRWorks "Show Input Tokens" under the run menu revealed
>> that the space at the end of the type and before the quote was not being
>> pulled out as a WS token and that was causing a big problem.
>>
>> Enjoy, Eric
>>
>>
>>
>> grammar Chuck001;
>> // Parser Rles
>> triplet : Quote ID Quote type Quote UnquotedString Quote ;
>>
>> type :  keyINTEGER
>>  | keyBOOLEAN
>>  | keySTRING
>>  ;
>>
>> keyBOOLEAN : {input.LT(1).getText().equals("Boolean")}? TYPE;
>> keyINTEGER  : {input.LT(1).getText().equals("Integer")}? TYPE;
>> keySTRING : {input.LT(1).getText().equals("String")}? TYPE;
>>
>>
>> // Lexer Rules
>> Quote : '"';
>> TYPE : ('A'..'Z')('a'..'z')*
>>  ;
>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>  ;
>>
>> COMMENT :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>  |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>  ;
>> WS :
>>  ( '\t'
>>  | ' '
>>  | '\r'
>>  | '\n'
>>  | '\u000C'
>>  ) + { $channel = HIDDEN; }
>>  ;
>> fragment
>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>> fragment
>> ESC_SEQ
>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>     |   UNICODE_ESC
>>     |   OCTAL_ESC
>>     ;
>> fragment
>> OCTAL_ESC
>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>     |   '\\' ('0'..'7') ('0'..'7')
>>     |   '\\' ('0'..'7')
>>     ;
>> fragment
>> UNICODE_ESC
>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>     ;
>>
>> UnquotedString
>>     :   ( ESC_SEQ | ~('\\'|'"'|' '|'\t') )*
>>     ;
>>
>> On Sun, Mar 18, 2012 at 3:01 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>>
>>> Hi Eric,
>>>
>>> Thanks for the quick response. I have downloaded ANTLRWorks 1.4.2 and
>>> created a fresh grammar using some of the defaults that the tool generates.
>>> Below is my grammar.
>>>
>>> This grammar successfully parses the following input:
>>>
>>> name String "value"
>>>
>>>
>>> However, I want to modify this grammar so that it will successfully
>>> parse the following input instead:
>>>
>>> "name" String "value"
>>>
>>>
>>> In attempting to do this, I modified the grammar below by adding double
>>> quotes around ID, like so:
>>>
>>> ID  : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* '"'
>>>     ;
>>>
>>>
>>> However, parsing fails (MissingTokenException) for the desired input.
>>> I'm guessing that's because "value" is matched to ID rather than to STRING,
>>> when I add the quotes around ID.
>>>
>>> Is there any way to get "value" to match STRING instead of matching ID
>>> when I add quotes to ID? Will backtracking help? If so, how would I specify
>>> it?
>>>
>>> Thanks,
>>> Chuck
>>>
>>> --- BEGIN GRAMMAR ---
>>> grammar Config;
>>>
>>> triplet : ID type STRING
>>> ;
>>>  type : 'Boolean' | 'Integer' | 'String'
>>>  ;
>>>
>>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>     ;
>>>
>>> COMMENT
>>>     :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>>     |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>>     ;
>>>
>>> WS  :   ( ' '
>>>         | '\t'
>>>         | '\r'
>>>         | '\n'
>>>         ) {$channel=HIDDEN;}
>>>     ;
>>>
>>> STRING
>>>     :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
>>>     ;
>>>
>>> fragment
>>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>>
>>> fragment
>>> ESC_SEQ
>>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>>     |   UNICODE_ESC
>>>     |   OCTAL_ESC
>>>     ;
>>>
>>> fragment
>>> OCTAL_ESC
>>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>>     |   '\\' ('0'..'7') ('0'..'7')
>>>     |   '\\' ('0'..'7')
>>>     ;
>>>
>>> fragment
>>> UNICODE_ESC
>>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>>     ;
>>> --- END GRAMMAR ---
>>>
>>>
>>> On Sun, Mar 18, 2012 at 12:27 PM, Eric <researcher0x00 at gmail.com> wrote:
>>>
>>>> Hi Chuck,
>>>>
>>>> Off the top of my head I would guess that STRINGLITERAL  is trumping
>>>> IDENTIFIER. In other works the lexer generates tokens. The tokens are
>>>> created based on the rules in the lexer. Since STRINGLITERAL  comes before
>>>> IDENTIFIER, anything that matches STRINGLITERAL will make a
>>>> STRINGLITERAL  token even if STRINGLITERAL  defines the same character
>>>> string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
>>>> IdentifierStart IdentifierPart* '"'
>>>>
>>>> Can you post your full grammar. I am having to guess at (copied from
>>>> Java.g) and believe I have something different.
>>>>
>>>> Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note
>>>> this is not the latest version of ANTLRWorks which is 1.4.3. I am not
>>>> recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
>>>> diagrams due to a bug and when I new user tries to do this and it doesn't
>>>> work they think they did something wrong when if fact it is a bug from
>>>> ANTLR 3.4 which is used by ANTLRWorks 1.4.3.
>>>>
>>>> Also, you can search previous post to the list by using
>>>> http://antlr.markmail.org/
>>>>
>>>> Hope that helps, Eric
>>>>
>>>>
>>>>
>>>>
>>>> On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <cjdaniels4 at gmail.com
>>>> > wrote:
>>>>
>>>>>  I am very new to ANTLR and I having trouble properly defining part of
>>>>> a
>>>>> grammar that I am constructing to recognize a specialized configuration
>>>>> file syntax (already defined, so I cannot change it).
>>>>>
>>>>> The trouble I am having is recognizing the following type of entry in
>>>>> the
>>>>> config file:
>>>>>
>>>>> "name" type "value"
>>>>>
>>>>>
>>>>> where the following rules apply:
>>>>>
>>>>>   1. The double quotes are a required part of the syntax, both for the
>>>>>   name and the value.
>>>>>   2. A "name" is essentially a Java identifier
>>>>>   3. A "value" is a string literal
>>>>>
>>>>>
>>>>> I have the following grammar so far:
>>>>>
>>>>> triplet : IDENTIFIER type STRINGLITERAL ;
>>>>>
>>>>> type : 'Boolean' | 'Integer' | 'String' ;
>>>>>
>>>>> STRINGLITERAL : (copied from Java.g)
>>>>>
>>>>> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>>>>>
>>>>> IdentifierStart : (copied from Java.g)
>>>>>
>>>>> IdentifierPart : (copied from Java.g)
>>>>>
>>>>> When I compile this grammar, ANTLR hangs. When I remove the double
>>>>> quotes
>>>>> from IDENTIFIER, it compiles successfully. I am guessing that when I
>>>>> include the double quotes in IDENTIFIER they are somehow causing the
>>>>> compilation to hang due to the double quotes that are also in
>>>>> STRINGLITERAL.
>>>>>
>>>>> Does anybody have any suggestions on how to define this so that I can
>>>>> use
>>>>> double quotes around names and values and the compiler doesn't hang?
>>>>>
>>>>> Thanks,
>>>>> Chuck
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>>
>>>
>>
>

From researcher0x00 at gmail.com  Sun Mar 18 14:57:48 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 18 Mar 2012 17:57:48 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CA+e3_SQE-CUXCKA6CnEYQVp14B2Ufvn8KL=xPRkFFATe2+Tryw@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
	<CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
	<CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>
	<CAN45N10qQwUJ+r7Dtp927Nxz+0UBezz-3gc8MdUYUX_mF0gN=A@mail.gmail.com>
	<CAN45N13-6EO9izSJSNBeR58mjgd41TPLKxNpZy1xukXDJa7puw@mail.gmail.com>
	<CA+e3_SQE-CUXCKA6CnEYQVp14B2Ufvn8KL=xPRkFFATe2+Tryw@mail.gmail.com>
Message-ID: <CAN45N11zCXuovo_QmYz2_v9YmnRPsQLzYb9x1SgLQtEJyOXAtg@mail.gmail.com>

On Sun, Mar 18, 2012 at 5:31 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:

> Hi Eric,
>
> I really appreciate the amount of time you're putting into helping me.
>
>
Thanks. Don't worry about it though, I wouldn't do it if it wasn't fun.



> And yes, regarding the string literals, I do want to allow whitespace
> characters (blank, tab, line feed, and carriage return).
>
>
Yea it's obvious, otherwise why have the quotes. The more I think about
this, the more I think it should be done with regular expressions. I am
trying that right now within C#. I know your using Java, but RE tend to
universal if you don't use custom features. Just because it looks like a
simple grammar that doesn't mean it can be parsed. Almost like a trick
question.

> Regarding the rules for keyBOOLEAN, etc., would you mind explaining just a
> bit about what they are doing, particularly with the trailing TYPE?
>
>
Basically the { input.LT(1).getText().equals('Boolean') }? TYPE

breaks down as follows

input - an object representing the input text to the parser
LT(1) - a method of input to get the next token.
getText() - for the token, get the text. A token has several properties
including line, char pos, text, and so on.
equals - a method for a string which is what we have from
input.LT(1).getText(1)
'Boolean' - what we want to test the text in the token against
{ xyz }? - an ANTLR predicate. In this case think if statement. So If, e.g.
{ xyz }?, then something. So here if we see 'Boolean' then apply the TYPE
rule, if not, then skip the rule. Everything between { } will be entered as
is into the parser. The ? if I remeber right means it expects a bool result
from the code in { }.

For ANTLR predicate see the glossary
http://www.antlr.org/doc/glossary.html#Predicate,_syntactic or "The
Definitive ANTLR Reference"



> Finally, regarding the triplet rule, won't the way you've written it
> permit whitespace between the Quote tokens and the other tokens?
>

That's what bothers me, you would think it would, but something is changing
that. I suspect the lexer rules, because there is not much else it could
be. Part of the reason I am working on this is it is a great and simple
case for learning. I have never had to apply such a combination in such a
simple case.


> I was putting the quote characters within the lexer rules so that this
> wouldn't happen for the ID. For the string literal, if the whitespace is
> captured separately from the string literal, then the whitespace won't be a
> part of the string literal, which wouldn't be right. Am I understanding
> things correctly here?
>
>
Sounds right to me.

>
>
> Thanks a lot!
> Chuck
>
> On Sun, Mar 18, 2012 at 5:19 PM, Eric <researcher0x00 at gmail.com> wrote:
>
>> Hi Chuck,
>>
>> Opps. I just realized that you probably want to have spaces in your
>> StringLiteral and the grammar I just gave you doesn't allow that.
>>
>> I look at it some more.
>>
>> Eric
>>
>>
>>
>> On Sun, Mar 18, 2012 at 4:48 PM, Eric <researcher0x00 at gmail.com> wrote:
>>
>>> Hi Chuck,
>>>
>>> The below grammar worked for me for   "test" Integer "01" and some other
>>> basic test
>>>
>>> Be careful with the grammar; it can easily cause a new person lots of
>>> problems. The main reason is that you have
>>> 1. Keywords
>>> 2. Identifiers
>>> 3. String Literals
>>> 4. Whitespace
>>> which are all either subsets or a partial set of another. I spent 90% of
>>> my time setting up the rules to keep them corralled and in the right order.
>>>
>>> The main changes I made were
>>> 1. pulled all of the string literals out of the parser rules
>>> 2. Used Ters example for keywords See:
>>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>>> 3. Created a TYPE lexer rule so that the types wouldn't become ID.
>>> 4. Changed the WS rule, mostly added +
>>> 5. Pulled the quotes out as a separate token
>>> 6. Moved UnquotedString to be the last rule since it tries to consume
>>> nearly everything.
>>> 7. Added space and tab to the negation rule for UnquotedString. I avoid
>>> negation in lexer rules like the plague, they always lead to a problem. The
>>> UnquotedString rule can become the death of you if you don't respect it.
>>>
>>> Also using ANTLRWorks "Show Input Tokens" under the run menu revealed
>>> that the space at the end of the type and before the quote was not being
>>> pulled out as a WS token and that was causing a big problem.
>>>
>>> Enjoy, Eric
>>>
>>>
>>>
>>> grammar Chuck001;
>>> // Parser Rles
>>> triplet : Quote ID Quote type Quote UnquotedString Quote ;
>>>
>>> type :  keyINTEGER
>>>  | keyBOOLEAN
>>>  | keySTRING
>>>  ;
>>>
>>> keyBOOLEAN : {input.LT(1).getText().equals("Boolean")}? TYPE;
>>> keyINTEGER  : {input.LT(1).getText().equals("Integer")}? TYPE;
>>> keySTRING : {input.LT(1).getText().equals("String")}? TYPE;
>>>
>>>
>>> // Lexer Rules
>>> Quote : '"';
>>> TYPE : ('A'..'Z')('a'..'z')*
>>>  ;
>>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>  ;
>>>
>>> COMMENT :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>>  |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>>  ;
>>> WS :
>>>  ( '\t'
>>>  | ' '
>>>  | '\r'
>>>  | '\n'
>>>  | '\u000C'
>>>  ) + { $channel = HIDDEN; }
>>>  ;
>>> fragment
>>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>> fragment
>>> ESC_SEQ
>>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>>     |   UNICODE_ESC
>>>     |   OCTAL_ESC
>>>     ;
>>> fragment
>>> OCTAL_ESC
>>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>>     |   '\\' ('0'..'7') ('0'..'7')
>>>     |   '\\' ('0'..'7')
>>>     ;
>>> fragment
>>> UNICODE_ESC
>>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>>     ;
>>>
>>> UnquotedString
>>>     :   ( ESC_SEQ | ~('\\'|'"'|' '|'\t') )*
>>>     ;
>>>
>>> On Sun, Mar 18, 2012 at 3:01 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>>>
>>>> Hi Eric,
>>>>
>>>> Thanks for the quick response. I have downloaded ANTLRWorks 1.4.2 and
>>>> created a fresh grammar using some of the defaults that the tool generates.
>>>> Below is my grammar.
>>>>
>>>> This grammar successfully parses the following input:
>>>>
>>>> name String "value"
>>>>
>>>>
>>>> However, I want to modify this grammar so that it will successfully
>>>> parse the following input instead:
>>>>
>>>> "name" String "value"
>>>>
>>>>
>>>> In attempting to do this, I modified the grammar below by adding double
>>>> quotes around ID, like so:
>>>>
>>>> ID  : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')* '"'
>>>>     ;
>>>>
>>>>
>>>> However, parsing fails (MissingTokenException) for the desired input.
>>>> I'm guessing that's because "value" is matched to ID rather than to STRING,
>>>> when I add the quotes around ID.
>>>>
>>>> Is there any way to get "value" to match STRING instead of matching ID
>>>> when I add quotes to ID? Will backtracking help? If so, how would I specify
>>>> it?
>>>>
>>>> Thanks,
>>>> Chuck
>>>>
>>>> --- BEGIN GRAMMAR ---
>>>> grammar Config;
>>>>
>>>> triplet : ID type STRING
>>>> ;
>>>>  type : 'Boolean' | 'Integer' | 'String'
>>>>  ;
>>>>
>>>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>>     ;
>>>>
>>>> COMMENT
>>>>     :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>>>     |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>>>     ;
>>>>
>>>> WS  :   ( ' '
>>>>         | '\t'
>>>>         | '\r'
>>>>         | '\n'
>>>>         ) {$channel=HIDDEN;}
>>>>     ;
>>>>
>>>> STRING
>>>>     :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
>>>>     ;
>>>>
>>>> fragment
>>>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>>>
>>>> fragment
>>>> ESC_SEQ
>>>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>>>     |   UNICODE_ESC
>>>>     |   OCTAL_ESC
>>>>     ;
>>>>
>>>> fragment
>>>> OCTAL_ESC
>>>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>>>     |   '\\' ('0'..'7') ('0'..'7')
>>>>     |   '\\' ('0'..'7')
>>>>     ;
>>>>
>>>> fragment
>>>> UNICODE_ESC
>>>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>>>     ;
>>>> --- END GRAMMAR ---
>>>>
>>>>
>>>> On Sun, Mar 18, 2012 at 12:27 PM, Eric <researcher0x00 at gmail.com>wrote:
>>>>
>>>>> Hi Chuck,
>>>>>
>>>>> Off the top of my head I would guess that STRINGLITERAL  is trumping
>>>>> IDENTIFIER. In other works the lexer generates tokens. The tokens are
>>>>> created based on the rules in the lexer. Since STRINGLITERAL  comes before
>>>>> IDENTIFIER, anything that matches STRINGLITERAL will make a
>>>>> STRINGLITERAL  token even if STRINGLITERAL  defines the same character
>>>>> string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
>>>>> IdentifierStart IdentifierPart* '"'
>>>>>
>>>>> Can you post your full grammar. I am having to guess at (copied from
>>>>> Java.g) and believe I have something different.
>>>>>
>>>>> Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note
>>>>> this is not the latest version of ANTLRWorks which is 1.4.3. I am not
>>>>> recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
>>>>> diagrams due to a bug and when I new user tries to do this and it doesn't
>>>>> work they think they did something wrong when if fact it is a bug from
>>>>> ANTLR 3.4 which is used by ANTLRWorks 1.4.3.
>>>>>
>>>>> Also, you can search previous post to the list by using
>>>>> http://antlr.markmail.org/
>>>>>
>>>>> Hope that helps, Eric
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <
>>>>> cjdaniels4 at gmail.com> wrote:
>>>>>
>>>>>>  I am very new to ANTLR and I having trouble properly defining part
>>>>>> of a
>>>>>> grammar that I am constructing to recognize a specialized
>>>>>> configuration
>>>>>> file syntax (already defined, so I cannot change it).
>>>>>>
>>>>>> The trouble I am having is recognizing the following type of entry in
>>>>>> the
>>>>>> config file:
>>>>>>
>>>>>> "name" type "value"
>>>>>>
>>>>>>
>>>>>> where the following rules apply:
>>>>>>
>>>>>>   1. The double quotes are a required part of the syntax, both for the
>>>>>>   name and the value.
>>>>>>   2. A "name" is essentially a Java identifier
>>>>>>   3. A "value" is a string literal
>>>>>>
>>>>>>
>>>>>> I have the following grammar so far:
>>>>>>
>>>>>> triplet : IDENTIFIER type STRINGLITERAL ;
>>>>>>
>>>>>> type : 'Boolean' | 'Integer' | 'String' ;
>>>>>>
>>>>>> STRINGLITERAL : (copied from Java.g)
>>>>>>
>>>>>> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>>>>>>
>>>>>> IdentifierStart : (copied from Java.g)
>>>>>>
>>>>>> IdentifierPart : (copied from Java.g)
>>>>>>
>>>>>> When I compile this grammar, ANTLR hangs. When I remove the double
>>>>>> quotes
>>>>>> from IDENTIFIER, it compiles successfully. I am guessing that when I
>>>>>> include the double quotes in IDENTIFIER they are somehow causing the
>>>>>> compilation to hang due to the double quotes that are also in
>>>>>> STRINGLITERAL.
>>>>>>
>>>>>> Does anybody have any suggestions on how to define this so that I can
>>>>>> use
>>>>>> double quotes around names and values and the compiler doesn't hang?
>>>>>>
>>>>>> Thanks,
>>>>>> Chuck
>>>>>>
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe:
>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>>
>>>>>
>>>>>
>>>>
>>>
>>
>

From researcher0x00 at gmail.com  Sun Mar 18 19:21:07 2012
From: researcher0x00 at gmail.com (Eric)
Date: Sun, 18 Mar 2012 22:21:07 -0400
Subject: [antlr-interest] [newbie] Quoted identifiers vs. string literals
In-Reply-To: <CAN45N11zCXuovo_QmYz2_v9YmnRPsQLzYb9x1SgLQtEJyOXAtg@mail.gmail.com>
References: <CA+e3_SS9z7HzqeFDd5ywOWSoJzpYU0av3WGTsV4mC3i1nVZrgQ@mail.gmail.com>
	<CAN45N11Hs0jF3hsioMvtNv7EHYNpjp7TaR-ts4G46tH+65yCkA@mail.gmail.com>
	<CA+e3_SSsjY-ByMBP1_COnbu1zmN27DPu+tpyE3w-H0ETF6m92w@mail.gmail.com>
	<CAN45N10qQwUJ+r7Dtp927Nxz+0UBezz-3gc8MdUYUX_mF0gN=A@mail.gmail.com>
	<CAN45N13-6EO9izSJSNBeR58mjgd41TPLKxNpZy1xukXDJa7puw@mail.gmail.com>
	<CA+e3_SQE-CUXCKA6CnEYQVp14B2Ufvn8KL=xPRkFFATe2+Tryw@mail.gmail.com>
	<CAN45N11zCXuovo_QmYz2_v9YmnRPsQLzYb9x1SgLQtEJyOXAtg@mail.gmail.com>
Message-ID: <CAN45N124K1XO6jOQjKCL6ob+ue0tEf9HSiwBVvRFXmXtLndXAg@mail.gmail.com>

Hi Chuck,

This should have it all.

I took some extra time to set up the tokens for a more usable AST.
If you use the ANTLRWorks debugger, you will see that the parse tree is
nicer, and I took the " off of the id.

Enjoy, Eric

grammar Chuck001;
// Parser Rles
triplet  : id  type  string;
id : ID ;

type : keyINTEGER
 | keyBOOLEAN
 | keySTRING
 ;

keyBOOLEAN : {input.LT(1).getText().equals("Boolean")}? Boolean;
keyINTEGER  : {input.LT(1).getText().equals("Integer")}? Integer;
keySTRING : {input.LT(1).getText().equals("String")}? String;
string :  STRING;

// Lexer Rules
Boolean : 'Boolean';
Integer : 'Integer';
String : 'String';

ID  :  '"' (('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*) '"'
 { setText(getText().substring(1,getText().length()-1));};

STRING  : '"' ( ESC_SEQ | ~('\\'|'"') )* '"' ;
WS : ( '\t' | ' ' | '\r' | '\n' | '\u000C' )+ {$channel=HIDDEN;}
 ;

COMMENT :   '//' ~('\n'|'\r')* '\r'? '\n'   {$channel=HIDDEN;}
 |   '/*' ( options {greedy=false;} : . )* '*/'  {$channel=HIDDEN;}
 ;
fragment
HEX_DIGIT  : ('0'..'9'|'a'..'f'|'A'..'F') ;
fragment
ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;
fragment
OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;
fragment
UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

On Sun, Mar 18, 2012 at 5:57 PM, Eric <researcher0x00 at gmail.com> wrote:

>
>
> On Sun, Mar 18, 2012 at 5:31 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>
>> Hi Eric,
>>
>> I really appreciate the amount of time you're putting into helping me.
>>
>>
> Thanks. Don't worry about it though, I wouldn't do it if it wasn't fun.
>
>
>
>> And yes, regarding the string literals, I do want to allow whitespace
>> characters (blank, tab, line feed, and carriage return).
>>
>>
> Yea it's obvious, otherwise why have the quotes. The more I think about
> this, the more I think it should be done with regular expressions. I am
> trying that right now within C#. I know your using Java, but RE tend to
> universal if you don't use custom features. Just because it looks like a
> simple grammar that doesn't mean it can be parsed. Almost like a trick
> question.
>
>> Regarding the rules for keyBOOLEAN, etc., would you mind explaining just
>> a bit about what they are doing, particularly with the trailing TYPE?
>>
>>
> Basically the { input.LT(1).getText().equals('Boolean') }? TYPE
>
> breaks down as follows
>
> input - an object representing the input text to the parser
> LT(1) - a method of input to get the next token.
> getText() - for the token, get the text. A token has several properties
> including line, char pos, text, and so on.
> equals - a method for a string which is what we have from
> input.LT(1).getText(1)
> 'Boolean' - what we want to test the text in the token against
> { xyz }? - an ANTLR predicate. In this case think if statement. So If,
> e.g. { xyz }?, then something. So here if we see 'Boolean' then apply the
> TYPE rule, if not, then skip the rule. Everything between { } will be
> entered as is into the parser. The ? if I remeber right means it expects a
> bool result from the code in { }.
>
> For ANTLR predicate see the glossary
> http://www.antlr.org/doc/glossary.html#Predicate,_syntactic or "The
> Definitive ANTLR Reference"
>
>
>
>> Finally, regarding the triplet rule, won't the way you've written it
>> permit whitespace between the Quote tokens and the other tokens?
>>
>
> That's what bothers me, you would think it would, but something is
> changing that. I suspect the lexer rules, because there is not much else it
> could be. Part of the reason I am working on this is it is a great and
> simple case for learning. I have never had to apply such a combination in
> such a simple case.
>
>
>> I was putting the quote characters within the lexer rules so that this
>> wouldn't happen for the ID. For the string literal, if the whitespace is
>> captured separately from the string literal, then the whitespace won't be a
>> part of the string literal, which wouldn't be right. Am I understanding
>> things correctly here?
>>
>>
> Sounds right to me.
>
>>
>>
>> Thanks a lot!
>> Chuck
>>
>> On Sun, Mar 18, 2012 at 5:19 PM, Eric <researcher0x00 at gmail.com> wrote:
>>
>>> Hi Chuck,
>>>
>>> Opps. I just realized that you probably want to have spaces in your
>>> StringLiteral and the grammar I just gave you doesn't allow that.
>>>
>>> I look at it some more.
>>>
>>> Eric
>>>
>>>
>>>
>>> On Sun, Mar 18, 2012 at 4:48 PM, Eric <researcher0x00 at gmail.com> wrote:
>>>
>>>> Hi Chuck,
>>>>
>>>> The below grammar worked for me for   "test" Integer "01" and some
>>>> other basic test
>>>>
>>>> Be careful with the grammar; it can easily cause a new person lots of
>>>> problems. The main reason is that you have
>>>> 1. Keywords
>>>> 2. Identifiers
>>>> 3. String Literals
>>>> 4. Whitespace
>>>> which are all either subsets or a partial set of another. I spent 90%
>>>> of my time setting up the rules to keep them corralled and in the right
>>>> order.
>>>>
>>>> The main changes I made were
>>>> 1. pulled all of the string literals out of the parser rules
>>>> 2. Used Ters example for keywords See:
>>>> http://www.antlr.org/wiki/pages/viewpage.action?pageId=1741
>>>> 3. Created a TYPE lexer rule so that the types wouldn't become ID.
>>>> 4. Changed the WS rule, mostly added +
>>>> 5. Pulled the quotes out as a separate token
>>>> 6. Moved UnquotedString to be the last rule since it tries to consume
>>>> nearly everything.
>>>> 7. Added space and tab to the negation rule for UnquotedString. I avoid
>>>> negation in lexer rules like the plague, they always lead to a problem. The
>>>> UnquotedString rule can become the death of you if you don't respect it.
>>>>
>>>> Also using ANTLRWorks "Show Input Tokens" under the run menu revealed
>>>> that the space at the end of the type and before the quote was not being
>>>> pulled out as a WS token and that was causing a big problem.
>>>>
>>>> Enjoy, Eric
>>>>
>>>>
>>>>
>>>> grammar Chuck001;
>>>> // Parser Rles
>>>> triplet : Quote ID Quote type Quote UnquotedString Quote ;
>>>>
>>>> type :  keyINTEGER
>>>>  | keyBOOLEAN
>>>>  | keySTRING
>>>>  ;
>>>>
>>>> keyBOOLEAN : {input.LT(1).getText().equals("Boolean")}? TYPE;
>>>> keyINTEGER  : {input.LT(1).getText().equals("Integer")}? TYPE;
>>>> keySTRING : {input.LT(1).getText().equals("String")}? TYPE;
>>>>
>>>>
>>>> // Lexer Rules
>>>> Quote : '"';
>>>> TYPE : ('A'..'Z')('a'..'z')*
>>>>  ;
>>>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>>  ;
>>>>
>>>> COMMENT :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>>>  |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>>>  ;
>>>> WS :
>>>>  ( '\t'
>>>>  | ' '
>>>>  | '\r'
>>>>  | '\n'
>>>>  | '\u000C'
>>>>  ) + { $channel = HIDDEN; }
>>>>  ;
>>>> fragment
>>>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>>> fragment
>>>> ESC_SEQ
>>>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>>>     |   UNICODE_ESC
>>>>     |   OCTAL_ESC
>>>>     ;
>>>> fragment
>>>> OCTAL_ESC
>>>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>>>     |   '\\' ('0'..'7') ('0'..'7')
>>>>     |   '\\' ('0'..'7')
>>>>     ;
>>>> fragment
>>>> UNICODE_ESC
>>>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>>>     ;
>>>>
>>>> UnquotedString
>>>>     :   ( ESC_SEQ | ~('\\'|'"'|' '|'\t') )*
>>>>     ;
>>>>
>>>> On Sun, Mar 18, 2012 at 3:01 PM, Charles Daniels <cjdaniels4 at gmail.com>wrote:
>>>>
>>>>> Hi Eric,
>>>>>
>>>>> Thanks for the quick response. I have downloaded ANTLRWorks 1.4.2 and
>>>>> created a fresh grammar using some of the defaults that the tool generates.
>>>>> Below is my grammar.
>>>>>
>>>>> This grammar successfully parses the following input:
>>>>>
>>>>> name String "value"
>>>>>
>>>>>
>>>>> However, I want to modify this grammar so that it will successfully
>>>>> parse the following input instead:
>>>>>
>>>>> "name" String "value"
>>>>>
>>>>>
>>>>> In attempting to do this, I modified the grammar below by adding
>>>>> double quotes around ID, like so:
>>>>>
>>>>> ID  : '"' ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>>> '"'
>>>>>     ;
>>>>>
>>>>>
>>>>> However, parsing fails (MissingTokenException) for the desired input.
>>>>> I'm guessing that's because "value" is matched to ID rather than to STRING,
>>>>> when I add the quotes around ID.
>>>>>
>>>>> Is there any way to get "value" to match STRING instead of matching ID
>>>>> when I add quotes to ID? Will backtracking help? If so, how would I specify
>>>>> it?
>>>>>
>>>>> Thanks,
>>>>> Chuck
>>>>>
>>>>> --- BEGIN GRAMMAR ---
>>>>> grammar Config;
>>>>>
>>>>> triplet : ID type STRING
>>>>> ;
>>>>>  type : 'Boolean' | 'Integer' | 'String'
>>>>>  ;
>>>>>
>>>>> ID  : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
>>>>>     ;
>>>>>
>>>>> COMMENT
>>>>>     :   '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
>>>>>     |   '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
>>>>>     ;
>>>>>
>>>>> WS  :   ( ' '
>>>>>         | '\t'
>>>>>         | '\r'
>>>>>         | '\n'
>>>>>         ) {$channel=HIDDEN;}
>>>>>     ;
>>>>>
>>>>> STRING
>>>>>     :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
>>>>>     ;
>>>>>
>>>>> fragment
>>>>> HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F') ;
>>>>>
>>>>> fragment
>>>>> ESC_SEQ
>>>>>     :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
>>>>>     |   UNICODE_ESC
>>>>>     |   OCTAL_ESC
>>>>>     ;
>>>>>
>>>>> fragment
>>>>> OCTAL_ESC
>>>>>     :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
>>>>>     |   '\\' ('0'..'7') ('0'..'7')
>>>>>     |   '\\' ('0'..'7')
>>>>>     ;
>>>>>
>>>>> fragment
>>>>> UNICODE_ESC
>>>>>     :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
>>>>>     ;
>>>>> --- END GRAMMAR ---
>>>>>
>>>>>
>>>>> On Sun, Mar 18, 2012 at 12:27 PM, Eric <researcher0x00 at gmail.com>wrote:
>>>>>
>>>>>> Hi Chuck,
>>>>>>
>>>>>> Off the top of my head I would guess that STRINGLITERAL  is trumping
>>>>>> IDENTIFIER. In other works the lexer generates tokens. The tokens are
>>>>>> created based on the rules in the lexer. Since STRINGLITERAL  comes before
>>>>>> IDENTIFIER, anything that matches STRINGLITERAL will make a
>>>>>> STRINGLITERAL  token even if STRINGLITERAL  defines the same character
>>>>>> string patterns as IDENTIFIER, i.e.  '"' ( ~('\\'|'"') )* '"' trumps '"'
>>>>>> IdentifierStart IdentifierPart* '"'
>>>>>>
>>>>>> Can you post your full grammar. I am having to guess at (copied from
>>>>>> Java.g) and believe I have something different.
>>>>>>
>>>>>> Also I strongly recommend using ANTLRWorks 1.4.2 for a new user. Note
>>>>>> this is not the latest version of ANTLRWorks which is 1.4.3. I am not
>>>>>> recommending ANTLRWorks 1.4.3 because it can not draw the NFA and DFA
>>>>>> diagrams due to a bug and when I new user tries to do this and it doesn't
>>>>>> work they think they did something wrong when if fact it is a bug from
>>>>>> ANTLR 3.4 which is used by ANTLRWorks 1.4.3.
>>>>>>
>>>>>> Also, you can search previous post to the list by using
>>>>>> http://antlr.markmail.org/
>>>>>>
>>>>>> Hope that helps, Eric
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Sun, Mar 18, 2012 at 11:22 AM, Charles Daniels <
>>>>>> cjdaniels4 at gmail.com> wrote:
>>>>>>
>>>>>>>  I am very new to ANTLR and I having trouble properly defining part
>>>>>>> of a
>>>>>>> grammar that I am constructing to recognize a specialized
>>>>>>> configuration
>>>>>>> file syntax (already defined, so I cannot change it).
>>>>>>>
>>>>>>> The trouble I am having is recognizing the following type of entry
>>>>>>> in the
>>>>>>> config file:
>>>>>>>
>>>>>>> "name" type "value"
>>>>>>>
>>>>>>>
>>>>>>> where the following rules apply:
>>>>>>>
>>>>>>>   1. The double quotes are a required part of the syntax, both for
>>>>>>> the
>>>>>>>   name and the value.
>>>>>>>   2. A "name" is essentially a Java identifier
>>>>>>>   3. A "value" is a string literal
>>>>>>>
>>>>>>>
>>>>>>> I have the following grammar so far:
>>>>>>>
>>>>>>> triplet : IDENTIFIER type STRINGLITERAL ;
>>>>>>>
>>>>>>> type : 'Boolean' | 'Integer' | 'String' ;
>>>>>>>
>>>>>>> STRINGLITERAL : (copied from Java.g)
>>>>>>>
>>>>>>> IDENTIFIER : '"' IdentifierStart IdentifierPart* '"' ;
>>>>>>>
>>>>>>> IdentifierStart : (copied from Java.g)
>>>>>>>
>>>>>>> IdentifierPart : (copied from Java.g)
>>>>>>>
>>>>>>> When I compile this grammar, ANTLR hangs. When I remove the double
>>>>>>> quotes
>>>>>>> from IDENTIFIER, it compiles successfully. I am guessing that when I
>>>>>>> include the double quotes in IDENTIFIER they are somehow causing the
>>>>>>> compilation to hang due to the double quotes that are also in
>>>>>>> STRINGLITERAL.
>>>>>>>
>>>>>>> Does anybody have any suggestions on how to define this so that I
>>>>>>> can use
>>>>>>> double quotes around names and values and the compiler doesn't hang?
>>>>>>>
>>>>>>> Thanks,
>>>>>>> Chuck
>>>>>>>
>>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>>> Unsubscribe:
>>>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>>>
>>>>>>
>>>>>>
>>>>>
>>>>
>>>
>>
>

From joshuaga at usc.edu  Sun Mar 18 20:55:14 2012
From: joshuaga at usc.edu (Joshua Garcia)
Date: Sun, 18 Mar 2012 20:55:14 -0700
Subject: [antlr-interest] Extract C Function Definitions Using Parser
Message-ID: <CADRG+QsHBZHvwMGLSs_EZ87-oGtSv_QgopAe+vCmDtMEy8+tqw@mail.gmail.com>

Hi Everyone,

I've been working on modifying an ANTLR C grammar so that it produces a
parser that simply outputs function definitions it recognizes to different
files. I need to do this in order to apply some information retrieval
techniques to C source code.

Is there a way to get the generated parser to recognize only the function
definitions (including the function body) and comments while ignoring
everything else? I've found it too troublesome to deal with comments so
I've been ignoring them for now.

If not, is there a way to get the generated parser to recognize only the
function definitions (including the function body) and ignore everything
else? I've been able to modify the grammar so that it can recognize a large
majority of the functions in pre-processed files of a version of bash.
However, the pre-processed files tend to transform some function definition
text to extern declarations. Therefore, I lose function definition text
that I need. Furthermore, the parser does not ignore everything else that's
not part of a function definition, but instead, I've added rules to the
grammar in order to recognize as much of the bash version I'm parsing as
possible.

In particular, I've been trying to use this grammar:

http://www.antlr.org/grammar/1153358328744/C.g

Thanks,
Josh

From diabeteman at gmail.com  Mon Mar 19 04:04:29 2012
From: diabeteman at gmail.com (Robin)
Date: Mon, 19 Mar 2012 12:04:29 +0100
Subject: [antlr-interest] [newbie] AST Rewriting
Message-ID: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>

Hello list :)

I am trying to rewrite an AST (by filtering out most of the nodes). From
what i could read on antlr wiki and some interesting forums & other medias,
you can do this with tree grammars and tree operators "->".

The grammar I use to generate AST is here
http://www.antlr.org/grammar/1207932239307/Java1_5Grammars and here is my
test rig http://pastebin.com/LeR4miVu

I modified JavaTreeParser.g and added the options output = AST; and rewrite
= true; Also, just for testing purposes, I added "->" at the end of each
rule in order to filter out all of the nodes. Here is what it looks like
http://pastebin.com/u6UG7fEB

The problem is that in my test rig, the returned tree is not rewrited at
all.

I am sure I'm doing something wrong. Could you help ?

Thanks in advance,
Robin

From weissig at rbg.informatik.tu-darmstadt.de  Mon Mar 19 04:58:20 2012
From: weissig at rbg.informatik.tu-darmstadt.de (=?ISO-8859-1?Q?Yves_Wei=DFig?=)
Date: Mon, 19 Mar 2012 12:58:20 +0100
Subject: [antlr-interest] C runtime linking error?
In-Reply-To: <4F61D74C.1060002@rbg.informatik.tu-darmstadt.de>
References: <4F61B412.80307@rbg.informatik.tu-darmstadt.de>	<201203151119.q2FBJl7g028923@lnx501.hrz.tu-darmstadt.de>
	<4F61D74C.1060002@rbg.informatik.tu-darmstadt.de>
Message-ID: <4F671F5C.5030809@rbg.informatik.tu-darmstadt.de>

Hi,

sorry to bump this topic, but my problem is still present.
I re-isntalled the antlr3.4c runtime and re-generated the C-files and
have still no luck, even this compilation fails with the "undefined
reference" errors:
gcc -lantlr3c -I../src ../src/RtfLexer.cpp ../src/RtfParser.cpp
So even stripping it down to C and without my custom code I run into the
same problems.
The libraries are in the correct spot:
foo at bar:~$ ll /usr/local/lib/
total 304
drwxr-xr-x  3 root root    4096 2012-03-19 12:40 ./
drwxr-xr-x 10 root root    4096 2011-10-12 16:27 ../
-rw-r--r--  1 root root  154132 2012-03-19 12:40 libantlr3c.a
-rwxr-xr-x  1 root root     929 2012-03-19 12:40 libantlr3c.la*
-rwxr-xr-x  1 root root  136864 2012-03-19 12:40 libantlr3c.so*
drwxrwsr-x  4 root staff   4096 2011-10-12 16:27 python2.7/
I guess gcc and g++ find the library, otherwise they would throw an
error. What else maybe wrong? Am I missing some packages/dependencies?

Best regards
Yves

Am 15.03.2012 12:49, schrieb Yves Wei?ig:
> Hi, thanks for the hint... don't know if I get that right:
> ctx->pLexer = antlr3LexerNewStream(ANTLR3_SIZE_HINT, instream, state);
> throws the error and was generated that way, something wrong with my
> generator? I didn't edit the files...
> 
> Am 15.03.2012 12:19, schrieb Gavin Lambert:
>> At 22:19 15/03/2012, Yves Wei?ig wrote:
>>> I'm trying to compile and link an ANTLR C backend with some C++
>>> code which I wrote.
>> [...]
>>> /tmp/ccnHhg86.o: In function `RtfLexerNewSSD':
>>> RtfLexer.cpp:(.text+0xb0): undefined reference to
>>> `antlr3LexerNewStream'
>>
>> Most likely, you're missing some extern "C" blocks.
>>
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From researcher0x00 at gmail.com  Mon Mar 19 05:02:50 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 19 Mar 2012 08:02:50 -0400
Subject: [antlr-interest] Extract C Function Definitions Using Parser
In-Reply-To: <CADRG+QsHBZHvwMGLSs_EZ87-oGtSv_QgopAe+vCmDtMEy8+tqw@mail.gmail.com>
References: <CADRG+QsHBZHvwMGLSs_EZ87-oGtSv_QgopAe+vCmDtMEy8+tqw@mail.gmail.com>
Message-ID: <CAN45N12fVkjqaC+JKdz04=Ve_3DZ4Zun2bBt4+nXDOvgOaBgVA@mail.gmail.com>

Hi Josh,

Here is what I would try.

The grammar should be creating an AST and the grammar has a
function_definition rule. I would use the function_definition rule to find
the start and end tokens making up the function and then if the tokens have
the start and end line and positions set, I would use those as a quick test
to see if I am correctly getting the functions as needed. If so, then do a
more advanced version pruning out the parts of the AST that aren't needed
in functions and reconstruct the functions from the tokens in the AST.

Some good general advice is:

"A common problem with novices attempting to implement language analysis is
to believe that their task is simplified by moving sophisticated tasks to
conceptually simple tasks. They will try to simplify semantic analysis by
creating a more detailed syntactic analysis and syntactic analysis by
creating a more detailed lexical analysis. Almost invariably they discover
that this attempt is fruitless and has to be undone, because it results in
poor error reporting, runs into conflicts as the implementation becomes
more complete, duplicates functionality in the later portions of the
analysis, and is hard to maintain." By William Clodius

In this case, let the parser do what it is best at, making sure the input
is valid and creating an AST. Don't create a pruned AST with the parser,
let the full AST pass onto another phase for AST analysis and
transformations. Let the AST transformations do the work, don't put an
additional burden on the parser of filtering out the functions.

Hope that helps, Eric

On Sun, Mar 18, 2012 at 11:55 PM, Joshua Garcia <joshuaga at usc.edu> wrote:

> Hi Everyone,
>
> I've been working on modifying an ANTLR C grammar so that it produces a
> parser that simply outputs function definitions it recognizes to different
> files. I need to do this in order to apply some information retrieval
> techniques to C source code.
>
> Is there a way to get the generated parser to recognize only the function
> definitions (including the function body) and comments while ignoring
> everything else? I've found it too troublesome to deal with comments so
> I've been ignoring them for now.
>
> If not, is there a way to get the generated parser to recognize only the
> function definitions (including the function body) and ignore everything
> else? I've been able to modify the grammar so that it can recognize a large
> majority of the functions in pre-processed files of a version of bash.
> However, the pre-processed files tend to transform some function definition
> text to extern declarations. Therefore, I lose function definition text
> that I need. Furthermore, the parser does not ignore everything else that's
> not part of a function definition, but instead, I've added rules to the
> grammar in order to recognize as much of the bash version I'm parsing as
> possible.
>
> In particular, I've been trying to use this grammar:
>
> http://www.antlr.org/grammar/1153358328744/C.g
>
> Thanks,
> Josh
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Mon Mar 19 08:33:34 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 19 Mar 2012 11:33:34 -0400
Subject: [antlr-interest] [newbie] AST Rewriting
In-Reply-To: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
References: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
Message-ID: <CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>

Hi Robin,

First off, it is very likely that what you want to do can be done by using
tree rewrite rules, I can not say positively because I haven't tried it for
your problem.

I personally have a hard time understanding rewrite rules when I am doing
multi-pass AST transformations, i.e. tree rewrites, as such I now do all
of my transformations via calls to the tree API. Also note that ANTLR
4.x will no longer be supporting tree rewrites in the grammar; currently
ANTLR 3.x be will the last version to support them.

Since you already know how to get the AST, all you have to do now is treat
the AST as any n-ary tree and manipulate.

Instead of jumping right into your problem, take some time to write a tree
walker, a print routine, and some search routines, i.e. find text, find
node type, return a node, return a branch with children, etc.. You will
need to write them because they will help you understand trees and for
debugging.

Next you will need to understand the basic methods in the tree API,
basically the BaseTree, and CommonTree classes.
If you take a look at the previous post "Help with compressin?g trees and
custom nodes" you will find some C# examples I give for using them.

This suggestion is light on examples because you need to work through it to
learn it.

Remember this is not the only solution, but how I would do it.

Eric





On Mon, Mar 19, 2012 at 7:04 AM, Robin <diabeteman at gmail.com> wrote:

> Hello list :)
>
> I am trying to rewrite an AST (by filtering out most of the nodes). From
> what i could read on antlr wiki and some interesting forums & other medias,
> you can do this with tree grammars and tree operators "->".
>
> The grammar I use to generate AST is here
> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars and here is my
> test rig http://pastebin.com/LeR4miVu
>
> I modified JavaTreeParser.g and added the options output = AST; and rewrite
> = true; Also, just for testing purposes, I added "->" at the end of each
> rule in order to filter out all of the nodes. Here is what it looks like
> http://pastebin.com/u6UG7fEB
>
> The problem is that in my test rig, the returned tree is not rewrited at
> all.
>
> I am sure I'm doing something wrong. Could you help ?
>
> Thanks in advance,
> Robin
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From asicaddress at gmail.com  Mon Mar 19 11:02:30 2012
From: asicaddress at gmail.com (A Z)
Date: Tue, 20 Mar 2012 00:02:30 +0600
Subject: [antlr-interest] Custom AST construction in the C target
Message-ID: <CAP86aOcH8GXZLqxzOcKjOeU+W6aWp2btBZTxG60_7+0BvD6G6g@mail.gmail.com>

Hello all,

I currently use rewrite rules in my grammar to handle a building an AST
during parsing. Functionally this works well but the BASE_TREE +
COMMON_TREE structs consume quite a bit a bit of memory for each node, in
addition to the token payload. I've attempted to reduce the memory by
modifying the these struts but this is proving difficult. I'm wondering if
anyone has successfully done an AST implementation via actions in the
grammar and roughly how much effort it was.

Thanks

From diabeteman at gmail.com  Mon Mar 19 12:26:17 2012
From: diabeteman at gmail.com (Robin)
Date: Mon, 19 Mar 2012 20:26:17 +0100
Subject: [antlr-interest] [newbie] AST Rewriting
In-Reply-To: <CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
References: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
	<CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
Message-ID: <CA+_G_arxtkgjesKycwNm9hzWS-9DBwHrTUpSoDHc2uVxEF21rg@mail.gmail.com>

Hey !

Also note that ANTLR 4.x will no longer be supporting tree rewrites in the
> grammar; currently ANTLR 3.x be will the last version to support them.
>

I wasn't aware of that and it changes a lot of stuff about the project
behind all this :)


Since you already know how to get the AST, all you have to do now is treat
> the AST as any n-ary tree and manipulate.
>
> Instead of jumping right into your problem, take some time to write a tree
> walker, a print routine, and some search routines, i.e. find text, find
> node type, return a node, return a branch with children, etc.. You will
> need to write them because they will help you understand trees and for
> debugging.
>
> Next you will need to understand the basic methods in the tree API,
> basically the BaseTree, and CommonTree classes.
> If you take a look at the previous post "Help with compressin?g trees and
> custom nodes" you will find some C# examples I give for using them.
>

Thanks for the advice. It looks like I have some homework :P


I'll try to write a simple tree walker that only prints stuff and once I
get comfortable with this, I'll see if I have more questions :>

--robin


On Mon, Mar 19, 2012 at 7:04 AM, Robin <diabeteman at gmail.com> wrote:
>
>> Hello list :)
>>
>> I am trying to rewrite an AST (by filtering out most of the nodes). From
>> what i could read on antlr wiki and some interesting forums & other
>> medias,
>> you can do this with tree grammars and tree operators "->".
>>
>> The grammar I use to generate AST is here
>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars and here is my
>> test rig http://pastebin.com/LeR4miVu
>>
>> I modified JavaTreeParser.g and added the options output = AST; and
>> rewrite
>> = true; Also, just for testing purposes, I added "->" at the end of each
>> rule in order to filter out all of the nodes. Here is what it looks like
>> http://pastebin.com/u6UG7fEB
>>
>> The problem is that in my test rig, the returned tree is not rewrited at
>> all.
>>
>> I am sure I'm doing something wrong. Could you help ?
>>
>> Thanks in advance,
>> Robin
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From researcher0x00 at gmail.com  Mon Mar 19 13:07:50 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 19 Mar 2012 16:07:50 -0400
Subject: [antlr-interest] [newbie] AST Rewriting
In-Reply-To: <CA+_G_arxtkgjesKycwNm9hzWS-9DBwHrTUpSoDHc2uVxEF21rg@mail.gmail.com>
References: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
	<CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
	<CA+_G_arxtkgjesKycwNm9hzWS-9DBwHrTUpSoDHc2uVxEF21rg@mail.gmail.com>
Message-ID: <CAN45N11o=3KjA4aMkRK8a7b0qfGsR_9H3nxxQs8uHhv4UWbYFg@mail.gmail.com>

FYI - See official notification about trees and AST for ANTLR 4.x (Honey
Badger).

http://antlr.markmail.org/search/?q=Reduction%20in%20code%20base%20after%20yanking%20AST%20stuff#query:Reduction%20in%20code%20base%20after%20yanking%20AST%20stuff+page:1+mid:txxyma2rkgao3wmi+state:results

Wouldn't want to get someone in trouble over an e-mail from some unknown
person.
Just so you know, I don't talk with Ter, I just pay attention to the site
including the wiki, blog, shares, this forum, and the code at github.

Eric


On Mon, Mar 19, 2012 at 3:26 PM, Robin <diabeteman at gmail.com> wrote:

> Hey !
>
> Also note that ANTLR 4.x will no longer be supporting tree rewrites in the
>> grammar; currently ANTLR 3.x be will the last version to support them.
>>
>
> I wasn't aware of that and it changes a lot of stuff about the project
> behind all this :)
>
>
> Since you already know how to get the AST, all you have to do now is
>> treat the AST as any n-ary tree and manipulate.
>>
>> Instead of jumping right into your problem, take some time to write a
>> tree walker, a print routine, and some search routines, i.e. find text,
>> find node type, return a node, return a branch with children, etc.. You
>> will need to write them because they will help you understand trees and for
>> debugging.
>>
>> Next you will need to understand the basic methods in the tree API,
>> basically the BaseTree, and CommonTree classes.
>> If you take a look at the previous post "Help with compressin?g trees
>> and custom nodes" you will find some C# examples I give for using them.
>>
>
> Thanks for the advice. It looks like I have some homework :P
>
>
> I'll try to write a simple tree walker that only prints stuff and once I
> get comfortable with this, I'll see if I have more questions :>
>
> --robin
>
>
> On Mon, Mar 19, 2012 at 7:04 AM, Robin <diabeteman at gmail.com> wrote:
>>
>>> Hello list :)
>>>
>>> I am trying to rewrite an AST (by filtering out most of the nodes). From
>>> what i could read on antlr wiki and some interesting forums & other
>>> medias,
>>> you can do this with tree grammars and tree operators "->".
>>>
>>> The grammar I use to generate AST is here
>>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars and here is
>>> my
>>> test rig http://pastebin.com/LeR4miVu
>>>
>>> I modified JavaTreeParser.g and added the options output = AST; and
>>> rewrite
>>> = true; Also, just for testing purposes, I added "->" at the end of each
>>> rule in order to filter out all of the nodes. Here is what it looks like
>>> http://pastebin.com/u6UG7fEB
>>>
>>> The problem is that in my test rig, the returned tree is not rewrited at
>>> all.
>>>
>>> I am sure I'm doing something wrong. Could you help ?
>>>
>>> Thanks in advance,
>>> Robin
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From diabeteman at gmail.com  Mon Mar 19 14:28:07 2012
From: diabeteman at gmail.com (Robin)
Date: Mon, 19 Mar 2012 22:28:07 +0100
Subject: [antlr-interest] [newbie] AST Rewriting
In-Reply-To: <CAN45N11o=3KjA4aMkRK8a7b0qfGsR_9H3nxxQs8uHhv4UWbYFg@mail.gmail.com>
References: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
	<CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
	<CA+_G_arxtkgjesKycwNm9hzWS-9DBwHrTUpSoDHc2uVxEF21rg@mail.gmail.com>
	<CAN45N11o=3KjA4aMkRK8a7b0qfGsR_9H3nxxQs8uHhv4UWbYFg@mail.gmail.com>
Message-ID: <CA+_G_ao66Hzr6TNX=T5sPNM8eZGMfzsHTL5WKzCxUuHxO34Zdw@mail.gmail.com>

I'm subscribed to the mailing list but it is very active and I cannot
absorb that much information for now (as I am such a n00b and ANTLR ^^)

On Mon, Mar 19, 2012 at 9:07 PM, Eric <researcher0x00 at gmail.com> wrote:

> FYI - See official notification about trees and AST for ANTLR 4.x (Honey
> Badger).
>
>
> http://antlr.markmail.org/search/?q=Reduction%20in%20code%20base%20after%20yanking%20AST%20stuff#query:Reduction%20in%20code%20base%20after%20yanking%20AST%20stuff+page:1+mid:txxyma2rkgao3wmi+state:results
>
> Wouldn't want to get someone in trouble over an e-mail from some unknown
> person.
> Just so you know, I don't talk with Ter, I just pay attention to the site
> including the wiki, blog, shares, this forum, and the code at github.
>
> Eric
>
>
> On Mon, Mar 19, 2012 at 3:26 PM, Robin <diabeteman at gmail.com> wrote:
>
>> Hey !
>>
>> Also note that ANTLR 4.x will no longer be supporting tree rewrites in
>>> the grammar; currently ANTLR 3.x be will the last version to support them.
>>>
>>
>> I wasn't aware of that and it changes a lot of stuff about the project
>> behind all this :)
>>
>>
>> Since you already know how to get the AST, all you have to do now is
>>> treat the AST as any n-ary tree and manipulate.
>>>
>>> Instead of jumping right into your problem, take some time to write a
>>> tree walker, a print routine, and some search routines, i.e. find text,
>>> find node type, return a node, return a branch with children, etc.. You
>>> will need to write them because they will help you understand trees and for
>>> debugging.
>>>
>>> Next you will need to understand the basic methods in the tree API,
>>> basically the BaseTree, and CommonTree classes.
>>> If you take a look at the previous post "Help with compressin?g trees
>>> and custom nodes" you will find some C# examples I give for using them.
>>>
>>
>> Thanks for the advice. It looks like I have some homework :P
>>
>>
>> I'll try to write a simple tree walker that only prints stuff and once I
>> get comfortable with this, I'll see if I have more questions :>
>>
>> --robin
>>
>>
>> On Mon, Mar 19, 2012 at 7:04 AM, Robin <diabeteman at gmail.com> wrote:
>>>
>>>> Hello list :)
>>>>
>>>> I am trying to rewrite an AST (by filtering out most of the nodes). From
>>>> what i could read on antlr wiki and some interesting forums & other
>>>> medias,
>>>> you can do this with tree grammars and tree operators "->".
>>>>
>>>> The grammar I use to generate AST is here
>>>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars and here is
>>>> my
>>>> test rig http://pastebin.com/LeR4miVu
>>>>
>>>> I modified JavaTreeParser.g and added the options output = AST; and
>>>> rewrite
>>>> = true; Also, just for testing purposes, I added "->" at the end of each
>>>> rule in order to filter out all of the nodes. Here is what it looks like
>>>> http://pastebin.com/u6UG7fEB
>>>>
>>>> The problem is that in my test rig, the returned tree is not rewrited at
>>>> all.
>>>>
>>>> I am sure I'm doing something wrong. Could you help ?
>>>>
>>>> Thanks in advance,
>>>> Robin
>>>>
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>
>>>
>>>
>>
>

From researcher0x00 at gmail.com  Mon Mar 19 14:53:19 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 19 Mar 2012 17:53:19 -0400
Subject: [antlr-interest] [newbie] AST Rewriting
In-Reply-To: <CA+_G_ao66Hzr6TNX=T5sPNM8eZGMfzsHTL5WKzCxUuHxO34Zdw@mail.gmail.com>
References: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
	<CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
	<CA+_G_arxtkgjesKycwNm9hzWS-9DBwHrTUpSoDHc2uVxEF21rg@mail.gmail.com>
	<CAN45N11o=3KjA4aMkRK8a7b0qfGsR_9H3nxxQs8uHhv4UWbYFg@mail.gmail.com>
	<CA+_G_ao66Hzr6TNX=T5sPNM8eZGMfzsHTL5WKzCxUuHxO34Zdw@mail.gmail.com>
Message-ID: <CAN45N13JFNY5=Aj+FJxH_3dvZ9224GUmm934U1s8T8v28fye-Q@mail.gmail.com>

Robin,

Don't forget to check the other parts of the web site http://www.antlr.org/

Terence's blog, Documentation, Articles, File Sharing, Grammars, Wiki,
Download, String Templates, ANTLRWorks, etc.

And the code at github:
https://github.com/search?utf8=%E2%9C%93&q=antlr&type=Everything&repo=&langOverride=&start_value=1

Think of it like a game it is more fun. I have found many things of value
in each one.

If you don't have the latest Dragon book, and you are serious, you need to
get it.

Eric




On Mon, Mar 19, 2012 at 5:28 PM, Robin <diabeteman at gmail.com> wrote:

> I'm subscribed to the mailing list but it is very active and I cannot
> absorb that much information for now (as I am such a n00b and ANTLR ^^)
>
>
> On Mon, Mar 19, 2012 at 9:07 PM, Eric <researcher0x00 at gmail.com> wrote:
>
>> FYI - See official notification about trees and AST for ANTLR 4.x (Honey
>> Badger).
>>
>>
>> http://antlr.markmail.org/search/?q=Reduction%20in%20code%20base%20after%20yanking%20AST%20stuff#query:Reduction%20in%20code%20base%20after%20yanking%20AST%20stuff+page:1+mid:txxyma2rkgao3wmi+state:results
>>
>> Wouldn't want to get someone in trouble over an e-mail from some unknown
>> person.
>> Just so you know, I don't talk with Ter, I just pay attention to the site
>> including the wiki, blog, shares, this forum, and the code at github.
>>
>> Eric
>>
>>
>> On Mon, Mar 19, 2012 at 3:26 PM, Robin <diabeteman at gmail.com> wrote:
>>
>>> Hey !
>>>
>>> Also note that ANTLR 4.x will no longer be supporting tree rewrites in
>>>> the grammar; currently ANTLR 3.x be will the last version to support them.
>>>>
>>>
>>> I wasn't aware of that and it changes a lot of stuff about the project
>>> behind all this :)
>>>
>>>
>>> Since you already know how to get the AST, all you have to do now is
>>>> treat the AST as any n-ary tree and manipulate.
>>>>
>>>> Instead of jumping right into your problem, take some time to write a
>>>> tree walker, a print routine, and some search routines, i.e. find text,
>>>> find node type, return a node, return a branch with children, etc.. You
>>>> will need to write them because they will help you understand trees and for
>>>> debugging.
>>>>
>>>> Next you will need to understand the basic methods in the tree API,
>>>> basically the BaseTree, and CommonTree classes.
>>>> If you take a look at the previous post "Help with compressin?g trees
>>>> and custom nodes" you will find some C# examples I give for using them.
>>>>
>>>
>>> Thanks for the advice. It looks like I have some homework :P
>>>
>>>
>>> I'll try to write a simple tree walker that only prints stuff and once I
>>> get comfortable with this, I'll see if I have more questions :>
>>>
>>> --robin
>>>
>>>
>>> On Mon, Mar 19, 2012 at 7:04 AM, Robin <diabeteman at gmail.com> wrote:
>>>>
>>>>> Hello list :)
>>>>>
>>>>> I am trying to rewrite an AST (by filtering out most of the nodes).
>>>>> From
>>>>> what i could read on antlr wiki and some interesting forums & other
>>>>> medias,
>>>>> you can do this with tree grammars and tree operators "->".
>>>>>
>>>>> The grammar I use to generate AST is here
>>>>> http://www.antlr.org/grammar/1207932239307/Java1_5Grammars and here
>>>>> is my
>>>>> test rig http://pastebin.com/LeR4miVu
>>>>>
>>>>> I modified JavaTreeParser.g and added the options output = AST; and
>>>>> rewrite
>>>>> = true; Also, just for testing purposes, I added "->" at the end of
>>>>> each
>>>>> rule in order to filter out all of the nodes. Here is what it looks
>>>>> like
>>>>> http://pastebin.com/u6UG7fEB
>>>>>
>>>>> The problem is that in my test rig, the returned tree is not rewrited
>>>>> at
>>>>> all.
>>>>>
>>>>> I am sure I'm doing something wrong. Could you help ?
>>>>>
>>>>> Thanks in advance,
>>>>> Robin
>>>>>
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>
>>>>
>>>>
>>>
>>
>

From joshuaga at usc.edu  Mon Mar 19 16:10:46 2012
From: joshuaga at usc.edu (Joshua Garcia)
Date: Mon, 19 Mar 2012 16:10:46 -0700
Subject: [antlr-interest] Extract C Function Definitions Using Parser
In-Reply-To: <CAN45N12fVkjqaC+JKdz04=Ve_3DZ4Zun2bBt4+nXDOvgOaBgVA@mail.gmail.com>
References: <CADRG+QsHBZHvwMGLSs_EZ87-oGtSv_QgopAe+vCmDtMEy8+tqw@mail.gmail.com>
	<CAN45N12fVkjqaC+JKdz04=Ve_3DZ4Zun2bBt4+nXDOvgOaBgVA@mail.gmail.com>
Message-ID: <CADRG+QsRCQ55V=ANSd71rmmM_AEWdOAz+bAdqkoc9SWhGxtipg@mail.gmail.com>

Thanks for the suggestion, Eric!

I've actually been using the text attribute of the function_definition rule
in order to get the text I need. However, the grammar does not seem to be
complete enough. That is why I have been expanding it a bit. Will creating
an AST be better than this? If so, I'm not sure why that is, can you
explain?

Also, do you or anyone else have any suggestions about dealing with the
issue I'm experiencing due to pre-processed functions being turned into
extern declarations? I need to pre-process the code from a version of bash
in order for the C grammar to process it. However, the pre-processor
transforms certain functions into extern declarations, which removes the
text I need.

I'm thinking I'll have to use a C pre-processor grammar. I've tried this
one by Youngki KU, which is listed in the grammar list on the ANTLR site:

http://www.antlr.org/grammar/1166665121622/Cpp.tar

Unfortunately, I've made it as far as having to rename CppTreeTreeParser
identifiers in the generated code to CppTree. However, at that point,
certain objects like Token, RuleReturnScope, arg, etc. that are
instantiated in certain functions of CppParser.java are creating errors
using ANTLR 3.4. It's even worse than that when I try ANTLR 2.7.7. I tried
using 2.7.7 because the pre-processor grammar is from 2006. Also, if it
helps, I'm using Oracle's java version 1.6.0_26 on Ubuntu 11.10.

Does anyone know what I have to do to get this old grammar to work, if
there's no better way to do what I'm trying to do?

Thanks,
Josh

On Mon, Mar 19, 2012 at 5:02 AM, Eric <researcher0x00 at gmail.com> wrote:

> Hi Josh,
>
> Here is what I would try.
>
> The grammar should be creating an AST and the grammar has a
> function_definition rule. I would use the function_definition rule to find
> the start and end tokens making up the function and then if the tokens have
> the start and end line and positions set, I would use those as a quick test
> to see if I am correctly getting the functions as needed. If so, then do a
> more advanced version pruning out the parts of the AST that aren't needed
> in functions and reconstruct the functions from the tokens in the AST.
>
> Some good general advice is:
>
> "A common problem with novices attempting to implement language analysis
> is to believe that their task is simplified by moving sophisticated tasks
> to conceptually simple tasks. They will try to simplify semantic analysis
> by creating a more detailed syntactic analysis and syntactic analysis by
> creating a more detailed lexical analysis. Almost invariably they discover
> that this attempt is fruitless and has to be undone, because it results in
> poor error reporting, runs into conflicts as the implementation becomes
> more complete, duplicates functionality in the later portions of the
> analysis, and is hard to maintain." By William Clodius
>
> In this case, let the parser do what it is best at, making sure the input
> is valid and creating an AST. Don't create a pruned AST with the parser,
> let the full AST pass onto another phase for AST analysis and
> transformations. Let the AST transformations do the work, don't put an
> additional burden on the parser of filtering out the functions.
>
> Hope that helps, Eric
>
> On Sun, Mar 18, 2012 at 11:55 PM, Joshua Garcia <joshuaga at usc.edu> wrote:
>
>> Hi Everyone,
>>
>> I've been working on modifying an ANTLR C grammar so that it produces a
>> parser that simply outputs function definitions it recognizes to different
>> files. I need to do this in order to apply some information retrieval
>> techniques to C source code.
>>
>> Is there a way to get the generated parser to recognize only the function
>> definitions (including the function body) and comments while ignoring
>> everything else? I've found it too troublesome to deal with comments so
>> I've been ignoring them for now.
>>
>> If not, is there a way to get the generated parser to recognize only the
>> function definitions (including the function body) and ignore everything
>> else? I've been able to modify the grammar so that it can recognize a
>> large
>> majority of the functions in pre-processed files of a version of bash.
>> However, the pre-processed files tend to transform some function
>> definition
>> text to extern declarations. Therefore, I lose function definition text
>> that I need. Furthermore, the parser does not ignore everything else
>> that's
>> not part of a function definition, but instead, I've added rules to the
>> grammar in order to recognize as much of the bash version I'm parsing as
>> possible.
>>
>> In particular, I've been trying to use this grammar:
>>
>> http://www.antlr.org/grammar/1153358328744/C.g
>>
>> Thanks,
>> Josh
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From researcher0x00 at gmail.com  Mon Mar 19 17:34:41 2012
From: researcher0x00 at gmail.com (Eric)
Date: Mon, 19 Mar 2012 20:34:41 -0400
Subject: [antlr-interest] Extract C Function Definitions Using Parser
In-Reply-To: <CADRG+QsRCQ55V=ANSd71rmmM_AEWdOAz+bAdqkoc9SWhGxtipg@mail.gmail.com>
References: <CADRG+QsHBZHvwMGLSs_EZ87-oGtSv_QgopAe+vCmDtMEy8+tqw@mail.gmail.com>
	<CAN45N12fVkjqaC+JKdz04=Ve_3DZ4Zun2bBt4+nXDOvgOaBgVA@mail.gmail.com>
	<CADRG+QsRCQ55V=ANSd71rmmM_AEWdOAz+bAdqkoc9SWhGxtipg@mail.gmail.com>
Message-ID: <CAN45N11X3_XKRnpq6nmweP-4+3LV5AwAYjYZvtYtHRqPFKYFXg@mail.gmail.com>

On Mon, Mar 19, 2012 at 7:10 PM, Joshua Garcia <joshuaga at usc.edu> wrote:

> Thanks for the suggestion, Eric!
>
> I've actually been using the text attribute of the function_definition
> rule in order to get the text I need.
>
>
>
Great, you started in the right direction.


> However, the grammar does not seem to be complete enough. That is why I
> have been expanding it a bit.


That's how I would do it. Keep breaking down certain grammar rules into
smaller rules until you get the detail you need in the AST.


> Will creating an AST be better than this?
>
>
>
No, I wouldn't use the AST to break down text into new tree nodes.


> If so, I'm not sure why that is, can you explain?
>
If I can get the grammar to break apart or combine terms (strings and
characters) in preparation for the AST then I do it by modifying the
grammar. I never try to do manipulation of the text in the tokens once they
hit the AST. I then use the AST transformations to rearrange, prune, or
insert imaginary nodes into the tree.

>
> Also, do you or anyone else have any suggestions about dealing with the
> issue I'm experiencing due to pre-processed functions being turned into
> extern declarations? I need to pre-process the code from a version of bash
> in order for the C grammar to process it. However, the pre-processor
> transforms certain functions into extern declarations, which removes the
> text I need.
>
 I haven't done C in ages so what you say sounds right, the pieces just
aren't falling into place for me. The only thought I have is to process
both the pre-processed file and the post-processed file and then merge the
results.


>
> I'm thinking I'll have to use a C pre-processor grammar. I've tried this
> one by Youngki KU, which is listed in the grammar list on the ANTLR site:
>
> http://www.antlr.org/grammar/1166665121622/Cpp.tar
>
> Unfortunately, I've made it as far as having to rename CppTreeTreeParser
> identifiers in the generated code to CppTree. However, at that point,
> certain objects like Token, RuleReturnScope, arg, etc. that are
> instantiated in certain functions of CppParser.java are creating errors
> using ANTLR 3.4. It's even worse than that when I try ANTLR 2.7.7. I tried
> using 2.7.7 because the pre-processor grammar is from 2006. Also, if it
> helps, I'm using Oracle's java version 1.6.0_26 on Ubuntu 11.10.
>
The only thing I can say about that is that I would avoid ANTLR 2.x as I
don't think anybody answers questions on it here anymore. Quite a few of
the advanced people are moving onto ANTLR 4.x with 3.x becoming a memory
and 2.x as a distant memory. I won't even look at anything 2.x so that it
doesn't mess with my brain.

If this is a funded project, you can always get paid support:
http://www.antlr.org/support.html


>
> Does anyone know what I have to do to get this old grammar to work, if
> there's no better way to do what I'm trying to do?
>
> Thanks,
> Josh
>
>
> On Mon, Mar 19, 2012 at 5:02 AM, Eric <researcher0x00 at gmail.com> wrote:
>
>> Hi Josh,
>>
>> Here is what I would try.
>>
>> The grammar should be creating an AST and the grammar has a
>> function_definition rule. I would use the function_definition rule to find
>> the start and end tokens making up the function and then if the tokens have
>> the start and end line and positions set, I would use those as a quick test
>> to see if I am correctly getting the functions as needed. If so, then do a
>> more advanced version pruning out the parts of the AST that aren't needed
>> in functions and reconstruct the functions from the tokens in the AST.
>>
>> Some good general advice is:
>>
>> "A common problem with novices attempting to implement language analysis
>> is to believe that their task is simplified by moving sophisticated tasks
>> to conceptually simple tasks. They will try to simplify semantic analysis
>> by creating a more detailed syntactic analysis and syntactic analysis by
>> creating a more detailed lexical analysis. Almost invariably they discover
>> that this attempt is fruitless and has to be undone, because it results in
>> poor error reporting, runs into conflicts as the implementation becomes
>> more complete, duplicates functionality in the later portions of the
>> analysis, and is hard to maintain." By William Clodius
>>
>> In this case, let the parser do what it is best at, making sure the input
>> is valid and creating an AST. Don't create a pruned AST with the parser,
>> let the full AST pass onto another phase for AST analysis and
>> transformations. Let the AST transformations do the work, don't put an
>> additional burden on the parser of filtering out the functions.
>>
>> Hope that helps, Eric
>>
>> On Sun, Mar 18, 2012 at 11:55 PM, Joshua Garcia <joshuaga at usc.edu> wrote:
>>
>>> Hi Everyone,
>>>
>>> I've been working on modifying an ANTLR C grammar so that it produces a
>>> parser that simply outputs function definitions it recognizes to
>>> different
>>> files. I need to do this in order to apply some information retrieval
>>> techniques to C source code.
>>>
>>> Is there a way to get the generated parser to recognize only the function
>>> definitions (including the function body) and comments while ignoring
>>> everything else? I've found it too troublesome to deal with comments so
>>> I've been ignoring them for now.
>>>
>>> If not, is there a way to get the generated parser to recognize only the
>>> function definitions (including the function body) and ignore everything
>>> else? I've been able to modify the grammar so that it can recognize a
>>> large
>>> majority of the functions in pre-processed files of a version of bash.
>>> However, the pre-processed files tend to transform some function
>>> definition
>>> text to extern declarations. Therefore, I lose function definition text
>>> that I need. Furthermore, the parser does not ignore everything else
>>> that's
>>> not part of a function definition, but instead, I've added rules to the
>>> grammar in order to recognize as much of the bash version I'm parsing as
>>> possible.
>>>
>>> In particular, I've been trying to use this grammar:
>>>
>>> http://www.antlr.org/grammar/1153358328744/C.g
>>>
>>> Thanks,
>>> Josh
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>
>>
>>
>

From kierans777 at gmail.com  Mon Mar 19 17:59:46 2012
From: kierans777 at gmail.com (Kieran Simpson)
Date: Tue, 20 Mar 2012 11:59:46 +1100
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <CAN45N12btCUp0Lkt97F0pOOSFriDjcOkBUxWmJ0_n9ZYgVdH4Q@mail.gmail.com>
References: <4F59DBC1.4090008@gmail.com>	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>	<4F5C497D.7060004@gmail.com>	<4F5C6A38.7040104@gmail.com>	<4F641066.1090107@gmail.com>	<CAN45N116FNK+sSF8XJizpqPS1_fijaSs7O9jkRmhEBdQx3WCLQ@mail.gmail.com>	<4F659B1D.1010805@gmail.com>
	<CAN45N12btCUp0Lkt97F0pOOSFriDjcOkBUxWmJ0_n9ZYgVdH4Q@mail.gmail.com>
Message-ID: <4F67D682.7060304@gmail.com>

Eric (and list),
   I could revert back to Antlr 3.3 however I feel like I'm very close 
to fixing this bug for 3.4 which would help a lot of people.

I made a few mistakes with my initial port and have corrected them and 
pushed to my Git Hub repo if you or anyone else wants to have a look.

I think the one remaining problem is that variable types are now being 
ommitted from the resulting code which is the cause of the C compiler 
errors.  For example:

static void synpred8_CoreConfiguration_fragment(pCoreConfigurationParser 
ctx )
{
	pANTLR3_COMMON_TOKEN    value;


	value       = NULL;

	value_tree   = NULL;


	retval.tree  = NULL;

         // rest of function
}

value, value_tree and retval have not been given types, hence the 
compiler errors.

There are other errors of the generated code that are missing types 
however my assumption is that the cause is the same as the above example.

If it's possible for Jim or another C target knowledgeable person to 
take a quick look they might be able to spot the reason in the templates 
quicker than it'll take me to figure it out (if I can figure it out :p)

Cheers,

On 19/03/12 1:24 AM, Eric wrote:
>
> Hi Kieran,
> I looked at the github files and see that you are working with the C
> target. I have never worked with the C target, that is Jim Idle's world.
> I also noticed that you mention the grammar works with ANTLR 3.3 but
> that you want to use ANTLR 3.4. If it were me and the grammar worked
> with ANTLR 3.3, I would skip the path of trying to fix ANTLR 3.4; you
> will learn a lot by trying to fix ANTLR 3.4 but will you actually be
> productive on your ultimate goal? I have spent time modifying ANTLR to
> extend for parsing binary files; learned a lot but all of the changes
> went to bit heaven.
> If there is something in the grammar forcing you to use 3.4, I would
> take the easier route and see if I could modify the grammar to work with
> 3.4 as is or 3.3.
> One of the ways I view a grammar is as a high level language for
> parsing. If I can't define what I need through the grammar, I use
> actions. Think of a grammar as a high level language and actions as
> assembly language. It is amazing how much you can do with actions.
> Remember all parts of a grammar, including predicates are translated
> into the target language. Instead of trying to patch ANTLR to use a
> predicate, just recreate the predicate using actions; it should be
> easier than fixing ANTLR for someone who doesn't understand all of
> ANTLRs internals.I don't even understand all of ANTLRs internals.
> Hope that helps,
> Eric
> On Sun, Mar 18, 2012 at 4:21 AM, Kieran Simpson <kierans777 at gmail.com
> <mailto:kierans777 at gmail.com>> wrote:
>
>     Eric (and list)
>
>     I had a shot at porting Sam's fixes to the C target.  While it does
>     indeed fix the label generation issue (yay!), it unfortunately
>     introduces a number of other changes which results in uncompilable
>     code :'( :'(
>
>     I've forked the antlr3 repo at https://github.com/kierans/__antlr3
>     <https://github.com/kierans/antlr3> and pushed up my current
>     changes.  If anyone has any suggestions (or wishes to fork and add
>     some patches) they're more than welcome.  With some more tweaking
>     hopefully this bug will go away :D
>
>     Cheers,

From jimi at temporal-wave.com  Mon Mar 19 19:44:04 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 19 Mar 2012 19:44:04 -0700
Subject: [antlr-interest] Backtracking and labels
In-Reply-To: <4F67D682.7060304@gmail.com>
References: <4F59DBC1.4090008@gmail.com>	<20120309115148.mhea5uk5c0owgkcg@webmail.kamm.cz>
	<4F5C497D.7060004@gmail.com>	<4F5C6A38.7040104@gmail.com>	<4F641066.1090107@gmail.com>
	<CAN45N116FNK+sSF8XJizpqPS1_fijaSs7O9jkRmhEBdQx3WCLQ@mail.gmail.com>
	<4F659B1D.1010805@gmail.com>	<CAN45N12btCUp0Lkt97F0pOOSFriDjcOkBUxWmJ0_n9ZYgVdH4Q@mail.gmail.com>
	<4F67D682.7060304@gmail.com>
Message-ID: <cf4ca15c0b35343c24f6c3d583eb39c5@mail.gmail.com>

I have not had much time to look at anything recently, but I'll try and
look at this and a few other issues soon.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Kieran Simpson
> Sent: Monday, March 19, 2012 6:00 PM
> To: Eric
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Backtracking and labels
>
> Eric (and list),
>    I could revert back to Antlr 3.3 however I feel like I'm very close
> to fixing this bug for 3.4 which would help a lot of people.
>
> I made a few mistakes with my initial port and have corrected them and
> pushed to my Git Hub repo if you or anyone else wants to have a look.
>
> I think the one remaining problem is that variable types are now being
> ommitted from the resulting code which is the cause of the C compiler
> errors.  For example:
>
> static void
> synpred8_CoreConfiguration_fragment(pCoreConfigurationParser
> ctx )
> {
> 	pANTLR3_COMMON_TOKEN    value;
>
>
> 	value       = NULL;
>
> 	value_tree   = NULL;
>
>
> 	retval.tree  = NULL;
>
>          // rest of function
> }
>
> value, value_tree and retval have not been given types, hence the
> compiler errors.
>
> There are other errors of the generated code that are missing types
> however my assumption is that the cause is the same as the above
> example.
>
> If it's possible for Jim or another C target knowledgeable person to
> take a quick look they might be able to spot the reason in the
> templates
> quicker than it'll take me to figure it out (if I can figure it out :p)
>
> Cheers,
>
> On 19/03/12 1:24 AM, Eric wrote:
> >
> > Hi Kieran,
> > I looked at the github files and see that you are working with the C
> > target. I have never worked with the C target, that is Jim Idle's
> world.
> > I also noticed that you mention the grammar works with ANTLR 3.3 but
> > that you want to use ANTLR 3.4. If it were me and the grammar worked
> > with ANTLR 3.3, I would skip the path of trying to fix ANTLR 3.4; you
> > will learn a lot by trying to fix ANTLR 3.4 but will you actually be
> > productive on your ultimate goal? I have spent time modifying ANTLR
> to
> > extend for parsing binary files; learned a lot but all of the changes
> > went to bit heaven.
> > If there is something in the grammar forcing you to use 3.4, I would
> > take the easier route and see if I could modify the grammar to work
> with
> > 3.4 as is or 3.3.
> > One of the ways I view a grammar is as a high level language for
> > parsing. If I can't define what I need through the grammar, I use
> > actions. Think of a grammar as a high level language and actions as
> > assembly language. It is amazing how much you can do with actions.
> > Remember all parts of a grammar, including predicates are translated
> > into the target language. Instead of trying to patch ANTLR to use a
> > predicate, just recreate the predicate using actions; it should be
> > easier than fixing ANTLR for someone who doesn't understand all of
> > ANTLRs internals.I don't even understand all of ANTLRs internals.
> > Hope that helps,
> > Eric
> > On Sun, Mar 18, 2012 at 4:21 AM, Kieran Simpson <kierans777 at gmail.com
> > <mailto:kierans777 at gmail.com>> wrote:
> >
> >     Eric (and list)
> >
> >     I had a shot at porting Sam's fixes to the C target.  While it
> does
> >     indeed fix the label generation issue (yay!), it unfortunately
> >     introduces a number of other changes which results in
> uncompilable
> >     code :'( :'(
> >
> >     I've forked the antlr3 repo at
> https://github.com/kierans/__antlr3
> >     <https://github.com/kierans/antlr3> and pushed up my current
> >     changes.  If anyone has any suggestions (or wishes to fork and
> add
> >     some patches) they're more than welcome.  With some more tweaking
> >     hopefully this bug will go away :D
> >
> >     Cheers,
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From weissig at rbg.informatik.tu-darmstadt.de  Mon Mar 19 23:15:19 2012
From: weissig at rbg.informatik.tu-darmstadt.de (=?ISO-8859-1?Q?Yves_Wei=DFig?=)
Date: Tue, 20 Mar 2012 07:15:19 +0100
Subject: [antlr-interest] C runtime linking error?
In-Reply-To: <4F671F5C.5030809@rbg.informatik.tu-darmstadt.de>
References: <4F61B412.80307@rbg.informatik.tu-darmstadt.de>	<201203151119.q2FBJl7g028923@lnx501.hrz.tu-darmstadt.de>	<4F61D74C.1060002@rbg.informatik.tu-darmstadt.de>
	<4F671F5C.5030809@rbg.informatik.tu-darmstadt.de>
Message-ID: <4F682077.7000502@rbg.informatik.tu-darmstadt.de>

Hi again,

I fixed it by myself. The library has to go at the end:
gcc -I../src ../src/RtfLexer.cpp ../src/RtfParser.cpp -lantlr3c
made the trick and worked.

Best regards
Yves

Am 19.03.2012 12:58, schrieb Yves Wei?ig:
> Hi,
> 
> sorry to bump this topic, but my problem is still present.
> I re-isntalled the antlr3.4c runtime and re-generated the C-files and
> have still no luck, even this compilation fails with the "undefined
> reference" errors:
> gcc -lantlr3c -I../src ../src/RtfLexer.cpp ../src/RtfParser.cpp
> So even stripping it down to C and without my custom code I run into the
> same problems.
> The libraries are in the correct spot:
> foo at bar:~$ ll /usr/local/lib/
> total 304
> drwxr-xr-x  3 root root    4096 2012-03-19 12:40 ./
> drwxr-xr-x 10 root root    4096 2011-10-12 16:27 ../
> -rw-r--r--  1 root root  154132 2012-03-19 12:40 libantlr3c.a
> -rwxr-xr-x  1 root root     929 2012-03-19 12:40 libantlr3c.la*
> -rwxr-xr-x  1 root root  136864 2012-03-19 12:40 libantlr3c.so*
> drwxrwsr-x  4 root staff   4096 2011-10-12 16:27 python2.7/
> I guess gcc and g++ find the library, otherwise they would throw an
> error. What else maybe wrong? Am I missing some packages/dependencies?
> 
> Best regards
> Yves
> 
> Am 15.03.2012 12:49, schrieb Yves Wei?ig:
>> Hi, thanks for the hint... don't know if I get that right:
>> ctx->pLexer = antlr3LexerNewStream(ANTLR3_SIZE_HINT, instream, state);
>> throws the error and was generated that way, something wrong with my
>> generator? I didn't edit the files...
>>
>> Am 15.03.2012 12:19, schrieb Gavin Lambert:
>>> At 22:19 15/03/2012, Yves Wei?ig wrote:
>>>> I'm trying to compile and link an ANTLR C backend with some C++
>>>> code which I wrote.
>>> [...]
>>>> /tmp/ccnHhg86.o: In function `RtfLexerNewSSD':
>>>> RtfLexer.cpp:(.text+0xb0): undefined reference to
>>>> `antlr3LexerNewStream'
>>>
>>> Most likely, you're missing some extern "C" blocks.
>>>
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From andy.voelkel at plantronics.com  Tue Mar 20 16:49:34 2012
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Tue, 20 Mar 2012 23:49:34 +0000
Subject: [antlr-interest] Autiomatic header file generation for C/C++??
Message-ID: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>

Hi,

Does anyone know of any tools for generating C/C++ header files automatically from an annotated version of the C/C++ source files? I really hate writing and maintaining header files in C/C++.

This isn't strictly related to Antlr, other than the fact that Antlr would be a logical front end for such a tool. But I thought that the same types that hang out in Antlr-land might know about such things.


-          Andy

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From researcher0x00 at gmail.com  Tue Mar 20 17:00:03 2012
From: researcher0x00 at gmail.com (Eric)
Date: Tue, 20 Mar 2012 20:00:03 -0400
Subject: [antlr-interest] Autiomatic header file generation for C/C++??
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
Message-ID: <CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>

Hi Andy,

FWIW I did a quick search and found makeheaders.

Eric

On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy <andy.voelkel at plantronics.com
> wrote:

> Hi,
>
> Does anyone know of any tools for generating C/C++ header files
> automatically from an annotated version of the C/C++ source files? I really
> hate writing and maintaining header files in C/C++.
>
> This isn't strictly related to Antlr, other than the fact that Antlr would
> be a logical front end for such a tool. But I thought that the same types
> that hang out in Antlr-land might know about such things.
>
>
> -          Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
> or previous e-mail messages attached to it, may contain information that is
> confidential and/or legally privileged. If you are not the intended
> recipient, or a person responsible for delivering it to the intended
> recipient, please DO NOT disclose the contents to another person, store or
> copy the information in any medium, or use any of the information contained
> in or attached to this transmission for any purpose. If you have received
> this transmission in error, please immediately notify the sender by reply
> email or at privacy at plantronics.com, and destroy the original
> transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Wed Mar 21 08:23:50 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 21 Mar 2012 11:23:50 -0400
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
Message-ID: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>

Is it just me or is www.antlr.org down?

From diabeteman at gmail.com  Wed Mar 21 08:27:07 2012
From: diabeteman at gmail.com (Robin)
Date: Wed, 21 Mar 2012 16:27:07 +0100
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
In-Reply-To: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
References: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
Message-ID: <CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>

down for me too. Does not answer to ping.

On Wed, Mar 21, 2012 at 4:23 PM, Eric <researcher0x00 at gmail.com> wrote:

> Is it just me or is www.antlr.org down?
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From david at mcgilly.com  Wed Mar 21 08:41:51 2012
From: david at mcgilly.com (David Riddle)
Date: Wed, 21 Mar 2012 08:41:51 -0700
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
In-Reply-To: <CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>
References: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
	<CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>
Message-ID: <CADZkTtUiAYVzn2jQg=-UHTx9sqfJXR_Zuug_9nfbDRuYBhNZgQ@mail.gmail.com>

Same here.

On Wed, Mar 21, 2012 at 8:27 AM, Robin <diabeteman at gmail.com> wrote:

> down for me too. Does not answer to ping.
>
> On Wed, Mar 21, 2012 at 4:23 PM, Eric <researcher0x00 at gmail.com> wrote:
>
> > Is it just me or is www.antlr.org down?
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



-- 
David Riddle
Servoy Developer
(510) 854-6221
www.mcgilly.com

From vinicius.durelli at gmail.com  Wed Mar 21 08:55:45 2012
From: vinicius.durelli at gmail.com (Vinicius Durelli)
Date: Wed, 21 Mar 2012 11:55:45 -0400
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
In-Reply-To: <CADZkTtUiAYVzn2jQg=-UHTx9sqfJXR_Zuug_9nfbDRuYBhNZgQ@mail.gmail.com>
References: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
	<CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>
	<CADZkTtUiAYVzn2jQg=-UHTx9sqfJXR_Zuug_9nfbDRuYBhNZgQ@mail.gmail.com>
Message-ID: <CAFVj0602UDNDDGwLwDFdVFWvRvZR+v5uD1jFnaY6dDepo_K2wA@mail.gmail.com>

Still down.

On Wed, Mar 21, 2012 at 11:41 AM, David Riddle <david at mcgilly.com> wrote:

> Same here.
>
> On Wed, Mar 21, 2012 at 8:27 AM, Robin <diabeteman at gmail.com> wrote:
>
> > down for me too. Does not answer to ping.
> >
> > On Wed, Mar 21, 2012 at 4:23 PM, Eric <researcher0x00 at gmail.com> wrote:
> >
> > > Is it just me or is www.antlr.org down?
> > >
> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > > Unsubscribe:
> > > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >
>
>
>
> --
> David Riddle
> Servoy Developer
> (510) 854-6221
> www.mcgilly.com
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From researcher0x00 at gmail.com  Wed Mar 21 14:09:46 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 21 Mar 2012 17:09:46 -0400
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
In-Reply-To: <CAFVj0602UDNDDGwLwDFdVFWvRvZR+v5uD1jFnaY6dDepo_K2wA@mail.gmail.com>
References: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
	<CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>
	<CADZkTtUiAYVzn2jQg=-UHTx9sqfJXR_Zuug_9nfbDRuYBhNZgQ@mail.gmail.com>
	<CAFVj0602UDNDDGwLwDFdVFWvRvZR+v5uD1jFnaY6dDepo_K2wA@mail.gmail.com>
Message-ID: <CAN45N12WCCi1xdy8X36=bA1tXU=gy-T5iDDZrz9C31Zf3oyAsg@mail.gmail.com>

I just want to send a big thanks to Terence for giving us www.antlr.org. I
know it is not free and he pays for it out of his pocket. I truly
appreciate it and it is times like these that allow us to show our
appreciation.

FYI It's back up.

Thanks, Eric

On Wed, Mar 21, 2012 at 11:55 AM, Vinicius Durelli <
vinicius.durelli at gmail.com> wrote:

> Still down.
>
>
> On Wed, Mar 21, 2012 at 11:41 AM, David Riddle <david at mcgilly.com> wrote:
>
>> Same here.
>>
>> On Wed, Mar 21, 2012 at 8:27 AM, Robin <diabeteman at gmail.com> wrote:
>>
>> > down for me too. Does not answer to ping.
>> >
>> > On Wed, Mar 21, 2012 at 4:23 PM, Eric <researcher0x00 at gmail.com> wrote:
>> >
>> > > Is it just me or is www.antlr.org down?
>> > >
>> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > > Unsubscribe:
>> > >
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> > >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> > http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>>
>>
>> --
>> David Riddle
>> Servoy Developer
>> (510) 854-6221
>> www.mcgilly.com
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From diabeteman at gmail.com  Wed Mar 21 14:18:01 2012
From: diabeteman at gmail.com (Robin)
Date: Wed, 21 Mar 2012 22:18:01 +0100
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
In-Reply-To: <CAN45N12WCCi1xdy8X36=bA1tXU=gy-T5iDDZrz9C31Zf3oyAsg@mail.gmail.com>
References: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
	<CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>
	<CADZkTtUiAYVzn2jQg=-UHTx9sqfJXR_Zuug_9nfbDRuYBhNZgQ@mail.gmail.com>
	<CAFVj0602UDNDDGwLwDFdVFWvRvZR+v5uD1jFnaY6dDepo_K2wA@mail.gmail.com>
	<CAN45N12WCCi1xdy8X36=bA1tXU=gy-T5iDDZrz9C31Zf3oyAsg@mail.gmail.com>
Message-ID: <CA+_G_ao+OOssfGrmjeYETUqX5kX4AgAh738vmXOBALLeKnrkoA@mail.gmail.com>

Yes, thanks a lot Ter !

Robin o/

On Wed, Mar 21, 2012 at 10:09 PM, Eric <researcher0x00 at gmail.com> wrote:

> I just want to send a big thanks to Terence for giving us www.antlr.org. I
> know it is not free and he pays for it out of his pocket. I truly
> appreciate it and it is times like these that allow us to show our
> appreciation.
>
> FYI It's back up.
>
> Thanks, Eric
>
> On Wed, Mar 21, 2012 at 11:55 AM, Vinicius Durelli <
> vinicius.durelli at gmail.com> wrote:
>
> > Still down.
> >
> >
> > On Wed, Mar 21, 2012 at 11:41 AM, David Riddle <david at mcgilly.com>
> wrote:
> >
> >> Same here.
> >>
> >> On Wed, Mar 21, 2012 at 8:27 AM, Robin <diabeteman at gmail.com> wrote:
> >>
> >> > down for me too. Does not answer to ping.
> >> >
> >> > On Wed, Mar 21, 2012 at 4:23 PM, Eric <researcher0x00 at gmail.com>
> wrote:
> >> >
> >> > > Is it just me or is www.antlr.org down?
> >> > >
> >> > > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > > Unsubscribe:
> >> > >
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >> > >
> >> >
> >> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> > Unsubscribe:
> >> >
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >> >
> >>
> >>
> >>
> >> --
> >> David Riddle
> >> Servoy Developer
> >> (510) 854-6221
> >> www.mcgilly.com
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From andy.voelkel at plantronics.com  Wed Mar 21 16:01:41 2012
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Wed, 21 Mar 2012 23:01:41 +0000
Subject: [antlr-interest] Autiomatic header file generation for C/C++??
In-Reply-To: <CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>

Hi,

I took a look a more detailed look at that and lzz. I prefer the approach of makeheaders - unfortunately it is old enough that it does not understand namespaces. Still, for a project that does not need namespaces, it might just work.

I find it AMAZING that C/C++ programmers put up with the hassle of manual header file maintenance, and that no other tool seems to be in widespread use.  Last time I checked it was 2012, not 1985.


-          Andy

From: Eric [mailto:researcher0x00 at gmail.com]
Sent: Tuesday, March 20, 2012 5:00 PM
To: Voelkel, Andy
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Autiomatic header file generation for C/C++??

Hi Andy,

FWIW I did a quick search and found makeheaders.

Eric
On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>> wrote:
Hi,

Does anyone know of any tools for generating C/C++ header files automatically from an annotated version of the C/C++ source files? I really hate writing and maintaining header files in C/C++.

This isn't strictly related to Antlr, other than the fact that Antlr would be a logical front end for such a tool. But I thought that the same types that hang out in Antlr-land might know about such things.


-          Andy

________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com<http://www.plantronics.com>.

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From researcher0x00 at gmail.com  Wed Mar 21 16:46:24 2012
From: researcher0x00 at gmail.com (Eric)
Date: Wed, 21 Mar 2012 19:46:24 -0400
Subject: [antlr-interest] Autiomatic header file generation for C/C++??
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
Message-ID: <CAN45N10kz=SkoU5Aasqumr9KikyUdZ4D0jE4Zd=-rqDoS9mNOA@mail.gmail.com>

Yea,

You could do something similar to what the person who is pulling out the
functions is doing. I did something like it when I was working on automatic
C# wrapper APIs for C++ DLLs. I didn't finish it, because I needed a better
C++ parser and better AST transformation tools. If you sneak a peak at the
file sharing section you will see where I am headed.

Eric

On Wed, Mar 21, 2012 at 7:01 PM, Voelkel, Andy <andy.voelkel at plantronics.com
> wrote:

>  Hi,
>
>
>
> I took a look a more detailed look at that and lzz. I prefer the approach
> of makeheaders ? unfortunately it is old enough that it does not understand
> namespaces. Still, for a project that does not need namespaces, it might
> just work.
>
>
>
> I find it *AMAZING* that C/C++ programmers put up with the hassle of
> manual header file maintenance, and that no other tool seems to be in
> widespread use.  Last time I checked it was 2012, not 1985.
>
>
>
> -          Andy
>
>
>
> *From:* Eric [mailto:researcher0x00 at gmail.com]
> *Sent:* Tuesday, March 20, 2012 5:00 PM
> *To:* Voelkel, Andy
> *Cc:* antlr-interest at antlr.org
> *Subject:* Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>
>
>
> Hi Andy,
>
>
>
> FWIW I did a quick search and found makeheaders.
>
>
>
> Eric
>
> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy <
> andy.voelkel at plantronics.com> wrote:
>
> Hi,
>
> Does anyone know of any tools for generating C/C++ header files
> automatically from an annotated version of the C/C++ source files? I really
> hate writing and maintaining header files in C/C++.
>
> This isn't strictly related to Antlr, other than the fact that Antlr would
> be a logical front end for such a tool. But I thought that the same types
> that hang out in Antlr-land might know about such things.
>
>
> -          Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
> or previous e-mail messages attached to it, may contain information that is
> confidential and/or legally privileged. If you are not the intended
> recipient, or a person responsible for delivering it to the intended
> recipient, please DO NOT disclose the contents to another person, store or
> copy the information in any medium, or use any of the information contained
> in or attached to this transmission for any purpose. If you have received
> this transmission in error, please immediately notify the sender by reply
> email or at privacy at plantronics.com, and destroy the original
> transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
>
> ------------------------------
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files
> or previous e-mail messages attached to it, may contain information that is
> confidential and/or legally privileged. If you are not the intended
> recipient, or a person responsible for delivering it to the intended
> recipient, please DO NOT disclose the contents to another person, store or
> copy the information in any medium, or use any of the information contained
> in or attached to this transmission for any purpose. If you have received
> this transmission in error, please immediately notify the sender by reply
> email or at privacy at plantronics.com, and destroy the original
> transmission and its attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>

From parrt at cs.usfca.edu  Wed Mar 21 17:10:34 2012
From: parrt at cs.usfca.edu (Terence Parr)
Date: Wed, 21 Mar 2012 17:10:34 -0700
Subject: [antlr-interest] Is it just me or is www.antlr.org down?
In-Reply-To: <CA+_G_ao+OOssfGrmjeYETUqX5kX4AgAh738vmXOBALLeKnrkoA@mail.gmail.com>
References: <CAN45N10nw+Q2wJ6LSiqsLN=dMT_tZrNi66eJ=2PV8KSbiu0TsA@mail.gmail.com>
	<CA+_G_ar5q6AJmkVHpr4_OTd3mC4UtRbouKzCHQvFg1a+o3ZsQA@mail.gmail.com>
	<CADZkTtUiAYVzn2jQg=-UHTx9sqfJXR_Zuug_9nfbDRuYBhNZgQ@mail.gmail.com>
	<CAFVj0602UDNDDGwLwDFdVFWvRvZR+v5uD1jFnaY6dDepo_K2wA@mail.gmail.com>
	<CAN45N12WCCi1xdy8X36=bA1tXU=gy-T5iDDZrz9C31Zf3oyAsg@mail.gmail.com>
	<CA+_G_ao+OOssfGrmjeYETUqX5kX4AgAh738vmXOBALLeKnrkoA@mail.gmail.com>
Message-ID: <AD1DC774-7D0B-4A63-8071-C1E178213863@cs.usfca.edu>

sorry. update to confluence wiki has made server unreliable. i killed jira, redirecting to issues at github to see if it stays up longer.
T
On Mar 21, 2012, at 2:18 PM, Robin wrote:

> Yes, thanks a lot Ter !
> 
> Robin o/
> 
> On Wed, Mar 21, 2012 at 10:09 PM, Eric <researcher0x00 at gmail.com> wrote:
> 
>> I just want to send a big thanks to Terence for giving us www.antlr.org. I
>> know it is not free and he pays for it out of his pocket. I truly
>> appreciate it and it is times like these that allow us to show our
>> appreciation.
>> 
>> FYI It's back up.
>> 
>> Thanks, Eric
>> 
>> On Wed, Mar 21, 2012 at 11:55 AM, Vinicius Durelli <
>> vinicius.durelli at gmail.com> wrote:
>> 
>>> Still down.
>>> 
>>> 
>>> On Wed, Mar 21, 2012 at 11:41 AM, David Riddle <david at mcgilly.com>
>> wrote:
>>> 
>>>> Same here.
>>>> 
>>>> On Wed, Mar 21, 2012 at 8:27 AM, Robin <diabeteman at gmail.com> wrote:
>>>> 
>>>>> down for me too. Does not answer to ping.
>>>>> 
>>>>> On Wed, Mar 21, 2012 at 4:23 PM, Eric <researcher0x00 at gmail.com>
>> wrote:
>>>>> 
>>>>>> Is it just me or is www.antlr.org down?
>>>>>> 
>>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>>> Unsubscribe:
>>>>>> 
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>>> 
>>>>> 
>>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>>> Unsubscribe:
>>>>> 
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>>> 
>>>> 
>>>> 
>>>> 
>>>> --
>>>> David Riddle
>>>> Servoy Developer
>>>> (510) 854-6221
>>>> www.mcgilly.com
>>>> 
>>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>>> Unsubscribe:
>>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>>> 
>>> 
>>> 
>> 
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> 
> 
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From jimi at temporal-wave.com  Wed Mar 21 17:46:31 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Wed, 21 Mar 2012 17:46:31 -0700
Subject: [antlr-interest] Autiomatic header file generation for C/C++??
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
Message-ID: <6d5e8e6d12446c3cdcdc596628b0a4bd@mail.gmail.com>

I think that you are misunderstanding [some of] the point of adding the
prototype to the header file. There is a reason that Eclipse cdt allows
you to generate the function from the prototype and not the other way
around. If you just auto produce the header files, then you make all the
functions visible everywhere at once.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Voelkel, Andy
> Sent: Wednesday, March 21, 2012 4:02 PM
> To: Eric
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>
> Hi,
>
> I took a look a more detailed look at that and lzz. I prefer the
> approach of makeheaders - unfortunately it is old enough that it does
> not understand namespaces. Still, for a project that does not need
> namespaces, it might just work.
>
> I find it AMAZING that C/C++ programmers put up with the hassle of
> manual header file maintenance, and that no other tool seems to be in
> widespread use.  Last time I checked it was 2012, not 1985.
>
>
> -          Andy
>
> From: Eric [mailto:researcher0x00 at gmail.com]
> Sent: Tuesday, March 20, 2012 5:00 PM
> To: Voelkel, Andy
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>
> Hi Andy,
>
> FWIW I did a quick search and found makeheaders.
>
> Eric
> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy
> <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>>
> wrote:
> Hi,
>
> Does anyone know of any tools for generating C/C++ header files
> automatically from an annotated version of the C/C++ source files? I
> really hate writing and maintaining header files in C/C++.
>
> This isn't strictly related to Antlr, other than the fact that Antlr
> would be a logical front end for such a tool. But I thought that the
> same types that hang out in Antlr-land might know about such things.
>
>
> -          Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
> files or previous e-mail messages attached to it, may contain
> information that is confidential and/or legally privileged. If you are
> not the intended recipient, or a person responsible for delivering it
> to the intended recipient, please DO NOT disclose the contents to
> another person, store or copy the information in any medium, or use any
> of the information contained in or attached to this transmission for
> any purpose. If you have received this transmission in error, please
> immediately notify the sender by reply email or at
> privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy
> the original transmission and its attachments without reading or saving
> in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website
> www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
> files or previous e-mail messages attached to it, may contain
> information that is confidential and/or legally privileged. If you are
> not the intended recipient, or a person responsible for delivering it
> to the intended recipient, please DO NOT disclose the contents to
> another person, store or copy the information in any medium, or use any
> of the information contained in or attached to this transmission for
> any purpose. If you have received this transmission in error, please
> immediately notify the sender by reply email or at
> privacy at plantronics.com, and destroy the original transmission and its
> attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From ibre5041 at ibrezina.net  Thu Mar 22 02:11:46 2012
From: ibre5041 at ibrezina.net (Ivan Brezina)
Date: Thu, 22 Mar 2012 10:11:46 +0100
Subject: [antlr-interest] Offtopic - Re: Autiomatic header file
	generation	for C/C++??
In-Reply-To: <92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
Message-ID: <20120322101146.8o1zt3fi8440c8w4@webmail.kamm.cz>

Hi,
I have to warn you, that generally your request is nonsense and no tool
can fulfill it.
1. header file is something like an interface, you usually design is before
the .cpp file
2. the header file and .cpp file both include other headers and in most cases
the header's headers are only subset on the .cpp ones. This is  
fundamental problem.
You do not want mix "interface" dependencies with "implementation"  
dependencies.
3. You usually do not want all the implementation internals to be  
exported the header.
The tool would have to support some kind of blacklisting.
4. It is very hard to guarantee that the generated headers are  
"correct" and compileable.
For example imagine two classes cyclically dependent. Implementation  
of class A depends
on B.hpp and viceversa. The tool can simply generate headers with the  
infinite inclusion recursion.
5. It is also not easy to order the content of the header file.  
Imagine that you have
some types declared via preprocessor macros.

Ivan


Quoting "Voelkel, Andy" <andy.voelkel at plantronics.com>:

> Hi,
>
> I took a look a more detailed look at that and lzz. I prefer the   
> approach of makeheaders - unfortunately it is old enough that it   
> does not understand namespaces. Still, for a project that does not   
> need namespaces, it might just work.
>
> I find it AMAZING that C/C++ programmers put up with the hassle of   
> manual header file maintenance, and that no other tool seems to be   
> in widespread use.  Last time I checked it was 2012, not 1985.
>
>
> -          Andy
>
> From: Eric [mailto:researcher0x00 at gmail.com]
> Sent: Tuesday, March 20, 2012 5:00 PM
> To: Voelkel, Andy
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Autiomatic header file generation for C/C++??
>
> Hi Andy,
>
> FWIW I did a quick search and found makeheaders.
>
> Eric
> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy   
> <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>>   
> wrote:
> Hi,
>
> Does anyone know of any tools for generating C/C++ header files   
> automatically from an annotated version of the C/C++ source files? I  
>  really hate writing and maintaining header files in C/C++.
>
> This isn't strictly related to Antlr, other than the fact that Antlr  
>  would be a logical front end for such a tool. But I thought that  
> the  same types that hang out in Antlr-land might know about such  
> things.
>
>
> -          Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,  
>  files or previous e-mail messages attached to it, may contain   
> information that is confidential and/or legally privileged. If you   
> are not the intended recipient, or a person responsible for   
> delivering it to the intended recipient, please DO NOT disclose the   
> contents to another person, store or copy the information in any   
> medium, or use any of the information contained in or attached to   
> this transmission for any purpose. If you have received this   
> transmission in error, please immediately notify the sender by reply  
>  email or at  
> privacy at plantronics.com<mailto:privacy at plantronics.com>,  and  
> destroy the original transmission and its attachments without   
> reading or saving in any manner.
>
> For further information about Plantronics - the Company, its   
> products, brands, partners, please visit our website   
> www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,  
>  files or previous e-mail messages attached to it, may contain   
> information that is confidential and/or legally privileged. If you   
> are not the intended recipient, or a person responsible for   
> delivering it to the intended recipient, please DO NOT disclose the   
> contents to another person, store or copy the information in any   
> medium, or use any of the information contained in or attached to   
> this transmission for any purpose. If you have received this   
> transmission in error, please immediately notify the sender by reply  
>  email or at privacy at plantronics.com, and destroy the original   
> transmission and its attachments without reading or saving in any   
> manner.
>
> For further information about Plantronics - the Company, its   
> products, brands, partners, please visit our website   
> www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


From sam at tunnelvisionlabs.com  Thu Mar 22 08:29:05 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Thu, 22 Mar 2012 10:29:05 -0500
Subject: [antlr-interest] Offtopic - Re: Autiomatic header
	file	generation	for C/C++??
In-Reply-To: <20120322101146.8o1zt3fi8440c8w4@webmail.kamm.cz>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
	<20120322101146.8o1zt3fi8440c8w4@webmail.kamm.cz>
Message-ID: <032901cd0840$85cc72b0$91655810$@tunnelvisionlabs.com>

Hi Ivan,

As part of an experiment several years ago, I created a project where the
basic interface of all primary classes was specified in an intermediate
language. I used a tool to generate the C++ header files for one particular
reason: I wanted the headers to prefer forward declarations to #include
statements absolutely wherever possible. The result was one of the fastest
compiling (reasonably large) C++ projects I've ever worked on - we're
talking approach plain C speed. I wouldn't ever expect a developer to be
able to maintain the accuracy of this separation manually.

To handle inline functions which are normally placed in the header, if one
or more functions was marked inline in the intermediate language then the
declaration in the header was marked inline and it emitted a line like this
at the end of the header:

#include "HeaderName.inl"

The generated code had a number of other features not normally possible in
hand-written code:

1. The classes had the construction semantics of languages like C# and Java

1a. The vtable was fully initialized for the derived class before user code
in the base constructor executed.

1b. All fields were initialized to default values when the class was
constructed (the intermediate language allowed overriding this value).

2. The classes supported constant-time (3 inline assembly instructions on
x86) class-to-class dynamic cast (we're talking instanceof here, not type
equality).


--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com


-----Original Message-----
From: Ivan Brezina [mailto:ibre5041 at ibrezina.net] 
Sent: Thursday, March 22, 2012 4:12 AM
To: antlr-interest at antlr.org
Subject: [antlr-interest] Offtopic - Re: Autiomatic header file generation
for C/C++??

Hi,
I have to warn you, that generally your request is nonsense and no tool can
fulfill it.
1. header file is something like an interface, you usually design is before
the .cpp file 2. the header file and .cpp file both include other headers
and in most cases the header's headers are only subset on the .cpp ones.
This is fundamental problem.
You do not want mix "interface" dependencies with "implementation"  
dependencies.
3. You usually do not want all the implementation internals to be exported
the header.
The tool would have to support some kind of blacklisting.
4. It is very hard to guarantee that the generated headers are "correct" and
compileable.
For example imagine two classes cyclically dependent. Implementation of
class A depends on B.hpp and viceversa. The tool can simply generate headers
with the infinite inclusion recursion.
5. It is also not easy to order the content of the header file.  
Imagine that you have
some types declared via preprocessor macros.

Ivan


Quoting "Voelkel, Andy" <andy.voelkel at plantronics.com>:

> Hi,
>
> I took a look a more detailed look at that and lzz. I prefer the   
> approach of makeheaders - unfortunately it is old enough that it   
> does not understand namespaces. Still, for a project that does not   
> need namespaces, it might just work.
>
> I find it AMAZING that C/C++ programmers put up with the hassle of   
> manual header file maintenance, and that no other tool seems to be   
> in widespread use.  Last time I checked it was 2012, not 1985.
>
>
> -          Andy
>
> From: Eric [mailto:researcher0x00 at gmail.com]
> Sent: Tuesday, March 20, 2012 5:00 PM
> To: Voelkel, Andy
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Autiomatic header file generation for
C/C++??
>
> Hi Andy,
>
> FWIW I did a quick search and found makeheaders.
>
> Eric
> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy   
> <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>>   
> wrote:
> Hi,
>
> Does anyone know of any tools for generating C/C++ header files   
> automatically from an annotated version of the C/C++ source files? I  
> really hate writing and maintaining header files in C/C++.
>
> This isn't strictly related to Antlr, other than the fact that Antlr  
> would be a logical front end for such a tool. But I thought that the  
> same types that hang out in Antlr-land might know about such things.
>
>
> -          Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,  
>  files or previous e-mail messages attached to it, may contain   
> information that is confidential and/or legally privileged. If you   
> are not the intended recipient, or a person responsible for   
> delivering it to the intended recipient, please DO NOT disclose the   
> contents to another person, store or copy the information in any   
> medium, or use any of the information contained in or attached to   
> this transmission for any purpose. If you have received this   
> transmission in error, please immediately notify the sender by reply  
> email or at privacy at plantronics.com<mailto:privacy at plantronics.com>,  
> and
> destroy the original transmission and its attachments without   
> reading or saving in any manner.
>
> For further information about Plantronics - the Company, its   
> products, brands, partners, please visit our website   
> www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,  
>  files or previous e-mail messages attached to it, may contain   
> information that is confidential and/or legally privileged. If you   
> are not the intended recipient, or a person responsible for   
> delivering it to the intended recipient, please DO NOT disclose the   
> contents to another person, store or copy the information in any   
> medium, or use any of the information contained in or attached to   
> this transmission for any purpose. If you have received this   
> transmission in error, please immediately notify the sender by reply  
>  email or at privacy at plantronics.com, and destroy the original   
> transmission and its attachments without reading or saving in any   
> manner.
>
> For further information about Plantronics - the Company, its   
> products, brands, partners, please visit our website   
> www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:   
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>



----------------------------------------------------------------
This message was sent using IMP, the Internet Messaging Program.


List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe:
http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From andy.voelkel at plantronics.com  Thu Mar 22 08:58:02 2012
From: andy.voelkel at plantronics.com (Voelkel, Andy)
Date: Thu, 22 Mar 2012 15:58:02 +0000
Subject: [antlr-interest] Autiomatic header file generation for C/C++??
In-Reply-To: <6d5e8e6d12446c3cdcdc596628b0a4bd@mail.gmail.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>
	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>
	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>,
	<6d5e8e6d12446c3cdcdc596628b0a4bd@mail.gmail.com>
Message-ID: <92E9AB4D42199B4793CE24E094BAEE071BD0E9D0@USSCMB03.plt.plantronics.com>

Not really. Have you looked at the makeheaders program? It has several modes of operation, and one of them gives you explicit control of which interfaces are "published". This is of course an essential element of any such tool. The main problem with the makeheaders tool is that it is very old, and C++ has moved on, adding namespaces and templates and such. Makeheaders could probably also be redesigned in a cleaner way, given modern technology. But there is some clever stuff in there.

I've been bugged by the whole header file thing since C++ was introduced. I suppose I was corrupted by the time I spent at Symbolics, but the modern examples of Java and C# show that header files are not necessary when assemblies contain the right metadata. This is somewhat orthogonal to other Java/C# features such as automatic storage management and reflection.

I actually think that C++ could have be fixed along the way to allow headerless program, but it wasn't. As a result, any tool to retrofit a fix will inevitably have some shortcomings. But not as many as manual header file maintenance.

And an Eclipse based plug-in which does this would remove almost all the pain (after the learning curve of whatever additional syntax is necessary to control header file generation).

I do have a question about the existing Eclipse feature you describe, though. Suppose you _change_ an existing prototype in a header file during design, after you've written some implementation code and you discover (for instance) the need for an additional argument to a method. Is the Eclipse feature smart enough to take you to the existing implementation code, and add the additional argument to the argument list, rather than assuming that this is a new method and asking you to create a whole new method? This is the kind of problem that I would imagine you'd run into with such a tool - incremental interface design becomes very messy. Is it better than I imagine?

- Andy

________________________________________
From: antlr-interest-bounces at antlr.org [antlr-interest-bounces at antlr.org] on behalf of Jim Idle [jimi at temporal-wave.com]
Sent: Wednesday, March 21, 2012 5:46 PM
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Autiomatic header file generation for C/C++??

I think that you are misunderstanding [some of] the point of adding the
prototype to the header file. There is a reason that Eclipse cdt allows
you to generate the function from the prototype and not the other way
around. If you just auto produce the header files, then you make all the
functions visible everywhere at once.

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Voelkel, Andy
> Sent: Wednesday, March 21, 2012 4:02 PM
> To: Eric
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>
> Hi,
>
> I took a look a more detailed look at that and lzz. I prefer the
> approach of makeheaders - unfortunately it is old enough that it does
> not understand namespaces. Still, for a project that does not need
> namespaces, it might just work.
>
> I find it AMAZING that C/C++ programmers put up with the hassle of
> manual header file maintenance, and that no other tool seems to be in
> widespread use.  Last time I checked it was 2012, not 1985.
>
>
> -          Andy
>
> From: Eric [mailto:researcher0x00 at gmail.com]
> Sent: Tuesday, March 20, 2012 5:00 PM
> To: Voelkel, Andy
> Cc: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>
> Hi Andy,
>
> FWIW I did a quick search and found makeheaders.
>
> Eric
> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy
> <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>>
> wrote:
> Hi,
>
> Does anyone know of any tools for generating C/C++ header files
> automatically from an annotated version of the C/C++ source files? I
> really hate writing and maintaining header files in C/C++.
>
> This isn't strictly related to Antlr, other than the fact that Antlr
> would be a logical front end for such a tool. But I thought that the
> same types that hang out in Antlr-land might know about such things.
>
>
> -          Andy
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
> files or previous e-mail messages attached to it, may contain
> information that is confidential and/or legally privileged. If you are
> not the intended recipient, or a person responsible for delivering it
> to the intended recipient, please DO NOT disclose the contents to
> another person, store or copy the information in any medium, or use any
> of the information contained in or attached to this transmission for
> any purpose. If you have received this transmission in error, please
> immediately notify the sender by reply email or at
> privacy at plantronics.com<mailto:privacy at plantronics.com>, and destroy
> the original transmission and its attachments without reading or saving
> in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website
> www.plantronics.com<http://www.plantronics.com>.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address
>
>
> ________________________________
>
> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
> files or previous e-mail messages attached to it, may contain
> information that is confidential and/or legally privileged. If you are
> not the intended recipient, or a person responsible for delivering it
> to the intended recipient, please DO NOT disclose the contents to
> another person, store or copy the information in any medium, or use any
> of the information contained in or attached to this transmission for
> any purpose. If you have received this transmission in error, please
> immediately notify the sender by reply email or at
> privacy at plantronics.com, and destroy the original transmission and its
> attachments without reading or saving in any manner.
>
> For further information about Plantronics - the Company, its products,
> brands, partners, please visit our website www.plantronics.com.
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

List: http://www.antlr.org/mailman/listinfo/antlr-interest
Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


________________________________

CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents, files or previous e-mail messages attached to it, may contain information that is confidential and/or legally privileged. If you are not the intended recipient, or a person responsible for delivering it to the intended recipient, please DO NOT disclose the contents to another person, store or copy the information in any medium, or use any of the information contained in or attached to this transmission for any purpose. If you have received this transmission in error, please immediately notify the sender by reply email or at privacy at plantronics.com, and destroy the original transmission and its attachments without reading or saving in any manner.

For further information about Plantronics - the Company, its products, brands, partners, please visit our website www.plantronics.com.

From finis at in.tum.de  Thu Mar 22 14:53:48 2012
From: finis at in.tum.de (Jan Finis)
Date: Thu, 22 Mar 2012 22:53:48 +0100
Subject: [antlr-interest] Offtopic - Re: Autiomatic header
 file	generation for C/C++??
In-Reply-To: <032901cd0840$85cc72b0$91655810$@tunnelvisionlabs.com>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
	<20120322101146.8o1zt3fi8440c8w4@webmail.kamm.cz>
	<032901cd0840$85cc72b0$91655810$@tunnelvisionlabs.com>
Message-ID: <4F6B9F6C.5030201@in.tum.de>

can you tell me how to do a constant time instanceof with multiple 
inheritance? That was always a mystery for me. Or do you keep the whole 
transitive closure of the supertype relation in a bit set or something?

Am 22.03.2012 16:29, schrieb Sam Harwell:
> Hi Ivan,
>
> As part of an experiment several years ago, I created a project where the
> basic interface of all primary classes was specified in an intermediate
> language. I used a tool to generate the C++ header files for one particular
> reason: I wanted the headers to prefer forward declarations to #include
> statements absolutely wherever possible. The result was one of the fastest
> compiling (reasonably large) C++ projects I've ever worked on - we're
> talking approach plain C speed. I wouldn't ever expect a developer to be
> able to maintain the accuracy of this separation manually.
>
> To handle inline functions which are normally placed in the header, if one
> or more functions was marked inline in the intermediate language then the
> declaration in the header was marked inline and it emitted a line like this
> at the end of the header:
>
> #include "HeaderName.inl"
>
> The generated code had a number of other features not normally possible in
> hand-written code:
>
> 1. The classes had the construction semantics of languages like C# and Java
>
> 1a. The vtable was fully initialized for the derived class before user code
> in the base constructor executed.
>
> 1b. All fields were initialized to default values when the class was
> constructed (the intermediate language allowed overriding this value).
>
> 2. The classes supported constant-time (3 inline assembly instructions on
> x86) class-to-class dynamic cast (we're talking instanceof here, not type
> equality).
>
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> From: Ivan Brezina [mailto:ibre5041 at ibrezina.net]
> Sent: Thursday, March 22, 2012 4:12 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Offtopic - Re: Autiomatic header file generation
> for C/C++??
>
> Hi,
> I have to warn you, that generally your request is nonsense and no tool can
> fulfill it.
> 1. header file is something like an interface, you usually design is before
> the .cpp file 2. the header file and .cpp file both include other headers
> and in most cases the header's headers are only subset on the .cpp ones.
> This is fundamental problem.
> You do not want mix "interface" dependencies with "implementation"
> dependencies.
> 3. You usually do not want all the implementation internals to be exported
> the header.
> The tool would have to support some kind of blacklisting.
> 4. It is very hard to guarantee that the generated headers are "correct" and
> compileable.
> For example imagine two classes cyclically dependent. Implementation of
> class A depends on B.hpp and viceversa. The tool can simply generate headers
> with the infinite inclusion recursion.
> 5. It is also not easy to order the content of the header file.
> Imagine that you have
> some types declared via preprocessor macros.
>
> Ivan
>
>
> Quoting "Voelkel, Andy"<andy.voelkel at plantronics.com>:
>
>> Hi,
>>
>> I took a look a more detailed look at that and lzz. I prefer the
>> approach of makeheaders - unfortunately it is old enough that it
>> does not understand namespaces. Still, for a project that does not
>> need namespaces, it might just work.
>>
>> I find it AMAZING that C/C++ programmers put up with the hassle of
>> manual header file maintenance, and that no other tool seems to be
>> in widespread use.  Last time I checked it was 2012, not 1985.
>>
>>
>> -          Andy
>>
>> From: Eric [mailto:researcher0x00 at gmail.com]
>> Sent: Tuesday, March 20, 2012 5:00 PM
>> To: Voelkel, Andy
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>> Hi Andy,
>>
>> FWIW I did a quick search and found makeheaders.
>>
>> Eric
>> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy
>> <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>>
>> wrote:
>> Hi,
>>
>> Does anyone know of any tools for generating C/C++ header files
>> automatically from an annotated version of the C/C++ source files? I
>> really hate writing and maintaining header files in C/C++.
>>
>> This isn't strictly related to Antlr, other than the fact that Antlr
>> would be a logical front end for such a tool. But I thought that the
>> same types that hang out in Antlr-land might know about such things.
>>
>>
>> -          Andy
>>
>> ________________________________
>>
>> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
>>   files or previous e-mail messages attached to it, may contain
>> information that is confidential and/or legally privileged. If you
>> are not the intended recipient, or a person responsible for
>> delivering it to the intended recipient, please DO NOT disclose the
>> contents to another person, store or copy the information in any
>> medium, or use any of the information contained in or attached to
>> this transmission for any purpose. If you have received this
>> transmission in error, please immediately notify the sender by reply
>> email or at privacy at plantronics.com<mailto:privacy at plantronics.com>,
>> and
>> destroy the original transmission and its attachments without
>> reading or saving in any manner.
>>
>> For further information about Plantronics - the Company, its
>> products, brands, partners, please visit our website
>> www.plantronics.com<http://www.plantronics.com>.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> ________________________________
>>
>> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
>>   files or previous e-mail messages attached to it, may contain
>> information that is confidential and/or legally privileged. If you
>> are not the intended recipient, or a person responsible for
>> delivering it to the intended recipient, please DO NOT disclose the
>> contents to another person, store or copy the information in any
>> medium, or use any of the information contained in or attached to
>> this transmission for any purpose. If you have received this
>> transmission in error, please immediately notify the sender by reply
>>   email or at privacy at plantronics.com, and destroy the original
>> transmission and its attachments without reading or saving in any
>> manner.
>>
>> For further information about Plantronics - the Company, its
>> products, brands, partners, please visit our website
>> www.plantronics.com.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From sam at tunnelvisionlabs.com  Thu Mar 22 15:46:11 2012
From: sam at tunnelvisionlabs.com (Sam Harwell)
Date: Thu, 22 Mar 2012 17:46:11 -0500
Subject: [antlr-interest] Offtopic - Re: Autiomatic header
	file	generation for C/C++??
In-Reply-To: <4F6B9F6C.5030201@in.tum.de>
References: <92E9AB4D42199B4793CE24E094BAEE071BD0CEAE@USSCMB03.plt.plantronics.com>	<CAN45N13OJqL3TWMT7DbByx2jQiTTu36AsVuKx4_keKVDkg=aMA@mail.gmail.com>	<92E9AB4D42199B4793CE24E094BAEE071BD0E881@USSCMB03.plt.plantronics.com>
	<20120322101146.8o1zt3fi8440c8w4@webmail.kamm.cz>
	<032901cd0840$85cc72b0$91655810$@tunnelvisionlabs.com>
	<4F6B9F6C.5030201@in.tum.de>
Message-ID: <035a01cd087d$95534910$bff9db30$@tunnelvisionlabs.com>

I did it by treating the first base class as the "primary" base class for
class-to-class casts. Casts involving a type that's not a primary class are
performed as interface casts which are slightly slower.

The system didn't allow instance data members to be stored in anything but a
primary base class. The restriction didn't feel like a limitation at all,
especially considering the advantages that came from the other features.

--
Sam Harwell
Owner, Lead Developer
http://tunnelvisionlabs.com

-----Original Message-----
From: Jan Finis [mailto:finis at in.tum.de] 
Sent: Thursday, March 22, 2012 4:54 PM
To: Sam Harwell
Cc: antlr-interest at antlr.org
Subject: Re: [antlr-interest] Offtopic - Re: Autiomatic header file
generation for C/C++??

can you tell me how to do a constant time instanceof with multiple
inheritance? That was always a mystery for me. Or do you keep the whole
transitive closure of the supertype relation in a bit set or something?

Am 22.03.2012 16:29, schrieb Sam Harwell:
> Hi Ivan,
>
> As part of an experiment several years ago, I created a project where 
> the basic interface of all primary classes was specified in an 
> intermediate language. I used a tool to generate the C++ header files 
> for one particular
> reason: I wanted the headers to prefer forward declarations to 
> #include statements absolutely wherever possible. The result was one 
> of the fastest compiling (reasonably large) C++ projects I've ever 
> worked on - we're talking approach plain C speed. I wouldn't ever 
> expect a developer to be able to maintain the accuracy of this separation
manually.
>
> To handle inline functions which are normally placed in the header, if 
> one or more functions was marked inline in the intermediate language 
> then the declaration in the header was marked inline and it emitted a 
> line like this at the end of the header:
>
> #include "HeaderName.inl"
>
> The generated code had a number of other features not normally 
> possible in hand-written code:
>
> 1. The classes had the construction semantics of languages like C# and 
> Java
>
> 1a. The vtable was fully initialized for the derived class before user 
> code in the base constructor executed.
>
> 1b. All fields were initialized to default values when the class was 
> constructed (the intermediate language allowed overriding this value).
>
> 2. The classes supported constant-time (3 inline assembly instructions 
> on
> x86) class-to-class dynamic cast (we're talking instanceof here, not 
> type equality).
>
>
> --
> Sam Harwell
> Owner, Lead Developer
> http://tunnelvisionlabs.com
>
>
> -----Original Message-----
> From: Ivan Brezina [mailto:ibre5041 at ibrezina.net]
> Sent: Thursday, March 22, 2012 4:12 AM
> To: antlr-interest at antlr.org
> Subject: [antlr-interest] Offtopic - Re: Autiomatic header file 
> generation for C/C++??
>
> Hi,
> I have to warn you, that generally your request is nonsense and no 
> tool can fulfill it.
> 1. header file is something like an interface, you usually design is 
> before the .cpp file 2. the header file and .cpp file both include 
> other headers and in most cases the header's headers are only subset on
the .cpp ones.
> This is fundamental problem.
> You do not want mix "interface" dependencies with "implementation"
> dependencies.
> 3. You usually do not want all the implementation internals to be 
> exported the header.
> The tool would have to support some kind of blacklisting.
> 4. It is very hard to guarantee that the generated headers are 
> "correct" and compileable.
> For example imagine two classes cyclically dependent. Implementation 
> of class A depends on B.hpp and viceversa. The tool can simply 
> generate headers with the infinite inclusion recursion.
> 5. It is also not easy to order the content of the header file.
> Imagine that you have
> some types declared via preprocessor macros.
>
> Ivan
>
>
> Quoting "Voelkel, Andy"<andy.voelkel at plantronics.com>:
>
>> Hi,
>>
>> I took a look a more detailed look at that and lzz. I prefer the 
>> approach of makeheaders - unfortunately it is old enough that it does 
>> not understand namespaces. Still, for a project that does not need 
>> namespaces, it might just work.
>>
>> I find it AMAZING that C/C++ programmers put up with the hassle of 
>> manual header file maintenance, and that no other tool seems to be in 
>> widespread use.  Last time I checked it was 2012, not 1985.
>>
>>
>> -          Andy
>>
>> From: Eric [mailto:researcher0x00 at gmail.com]
>> Sent: Tuesday, March 20, 2012 5:00 PM
>> To: Voelkel, Andy
>> Cc: antlr-interest at antlr.org
>> Subject: Re: [antlr-interest] Autiomatic header file generation for
> C/C++??
>> Hi Andy,
>>
>> FWIW I did a quick search and found makeheaders.
>>
>> Eric
>> On Tue, Mar 20, 2012 at 7:49 PM, Voelkel, Andy 
>> <andy.voelkel at plantronics.com<mailto:andy.voelkel at plantronics.com>>
>> wrote:
>> Hi,
>>
>> Does anyone know of any tools for generating C/C++ header files 
>> automatically from an annotated version of the C/C++ source files? I 
>> really hate writing and maintaining header files in C/C++.
>>
>> This isn't strictly related to Antlr, other than the fact that Antlr 
>> would be a logical front end for such a tool. But I thought that the 
>> same types that hang out in Antlr-land might know about such things.
>>
>>
>> -          Andy
>>
>> ________________________________
>>
>> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
>>   files or previous e-mail messages attached to it, may contain 
>> information that is confidential and/or legally privileged. If you 
>> are not the intended recipient, or a person responsible for 
>> delivering it to the intended recipient, please DO NOT disclose the 
>> contents to another person, store or copy the information in any 
>> medium, or use any of the information contained in or attached to 
>> this transmission for any purpose. If you have received this 
>> transmission in error, please immediately notify the sender by reply 
>> email or at privacy at plantronics.com<mailto:privacy at plantronics.com>,
>> and
>> destroy the original transmission and its attachments without reading 
>> or saving in any manner.
>>
>> For further information about Plantronics - the Company, its 
>> products, brands, partners, please visit our website 
>> www.plantronics.com<http://www.plantronics.com>.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>> s
>>
>>
>> ________________________________
>>
>> CONFIDENTIALITY NOTICE: This e-mail transmission, and any documents,
>>   files or previous e-mail messages attached to it, may contain 
>> information that is confidential and/or legally privileged. If you 
>> are not the intended recipient, or a person responsible for 
>> delivering it to the intended recipient, please DO NOT disclose the 
>> contents to another person, store or copy the information in any 
>> medium, or use any of the information contained in or attached to 
>> this transmission for any purpose. If you have received this 
>> transmission in error, please immediately notify the sender by reply
>>   email or at privacy at plantronics.com, and destroy the original 
>> transmission and its attachments without reading or saving in any 
>> manner.
>>
>> For further information about Plantronics - the Company, its 
>> products, brands, partners, please visit our website 
>> www.plantronics.com.
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-addres
>> s
>>
>
>
> ----------------------------------------------------------------
> This message was sent using IMP, the Internet Messaging Program.
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: 
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address


From eje at redhat.com  Sat Mar 24 15:20:26 2012
From: eje at redhat.com (Erik Erlandson)
Date: Sat, 24 Mar 2012 15:20:26 -0700
Subject: [antlr-interest] Trying to add a new "empty" target lang
Message-ID: <1332627626.19948.55.camel@rorschach>

I'm trying to add a new antlr target language, and I've been attempting
to follow along with this wiki:

http://www.antlr.org/wiki/display/ANTLR3/How+to+build+an+ANTLR+code
+generation+target

The directions talk about starting with Java.stg and removing the guts
of all the templates to create xyz.stg.

Which of these do I need to add my xyz/xyz.stg file to:

        $ find -name "Java.stg" -print
        ./tool/src/main/resources/org/antlr/codegen/templates/Java/Java.stg
        ./tool/target/classes/org/antlr/codegen/templates/Java/Java.stg

My attempts to make it work by creating an "empty" xyz/xyz.stg file
(that is, not empty, but the innards of all templates are empty) are not
working, and I'm getting this failure:

        $ java org.antlr.Tool G0.g
        error(10):  internal error: G0.g :
        java.lang.IllegalArgumentException: No such group file:
        org/antlr/codegen/templates/cpp/cpp.stg
        org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:69)
        org.stringtemplate.v4.STGroupFile.<init>(STGroupFile.java:48)
        org.antlr.codegen.CodeGenerator.loadTemplates(CodeGenerator.java:186)
        org.antlr.codegen.CodeGenerator.genRecognizer(CodeGenerator.java:283)
        org.antlr.Tool.generateRecognizer(Tool.java:655)
        org.antlr.Tool.process(Tool.java:468)
        org.antlr.Tool.main(Tool.java:93)
 
I also attempted to rebuild the antlr repo, using:
        $ mvn -N install
        $ mvn -Dmaven.test.skip=true package assembly:assembly

However that is meeting with this failure:
        [ERROR] Failed to execute goal
        org.antlr:antlr3-maven-plugin:3.4:antlr (default) on project
        gunit: Execution default of goal
        org.antlr:antlr3-maven-plugin:3.4:antlr failed: No such group
        file: org/antlr/tool/templates/messages/formats/antlr.stg ->
        [Help 1]
        
Hopefully I'm just missing something obvious.




From tnine at apigee.com  Sat Mar 24 20:03:51 2012
From: tnine at apigee.com (Todd Nine)
Date: Sat, 24 Mar 2012 23:03:51 -0400
Subject: [antlr-interest] "No viable alternative" error
Message-ID: <CA+yzqf_0BmJ49TO_pgtO27u3=YMLNFnA5yUMU5EMCcfapT79Ug@mail.gmail.com>

Hi guys,
  I've attached my grammer file.  I'm getting the "no viable alternative"
error when parsing.

This statement works.

"select * where a < 5"

This one fails

"select * where a lt 5"


I'm a bit lost as to why, my rule for expression is defined in this way.

//mathmatical equality operations

equalityop :

  property LT<LessThan>^ value

  |property LTE<LessThanEqual>^ value

  |property EQ<Equal>^ value

  |property GT<GreaterThan>^ value

  |property GTE<GreaterThanEqual>^ value

  ;


Then LT is this in my tokens


LT : '<' | 'lt';


Any help would be greatly appreciated!  All my operations for equality ops
do it, so I know I've defined something incorrectly in my grammer.


Thanks,

Todd
-------------- next part --------------
A non-text attachment was scrubbed...
Name: QueryFilter.g
Type: application/octet-stream
Size: 4852 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120324/554daa08/attachment.obj 

From sergiy.dubovik at gmail.com  Sun Mar 25 09:27:25 2012
From: sergiy.dubovik at gmail.com (Sergiy Dubovik)
Date: Sun, 25 Mar 2012 19:27:25 +0300
Subject: [antlr-interest] Generate AST from C runtime
Message-ID: <CAPTdmTQ=Rp=5jsTi+7XDLt+AP8ba2xKpwkkJoj+AGdpWpR9DNQ@mail.gmail.com>

Hei,

Could someone help me to generate AST from a grammar using C with a minimum
amount of C code?
I just want to get a pointer to an AST root. I don't need tree walker. I
have a grammar which generates nice AST in AntlrWorks.
Can I have the same from C? Isn't it so that Antlr generates AST if I
specify options=AST;?


pANTLR3_UINT8 fileName = (pANTLR3_UINT8) "example.rpp";

    pANTLR3_INPUT_STREAM input = antlr3FileStreamNew(fileName, ANTLR3_ENC_8BIT);

    pRppLexer lexer = RppLexerNew(input);

    pANTLR3_COMMON_TOKEN_STREAM tokenStream =
antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
TOKENSOURCE(lexer));

    pRppParser parser = RppParserNew(tokenStream);

     RppParser_prog_return prog;

    prog = parser->prog(parser);

From sergiy.dubovik at gmail.com  Sun Mar 25 09:30:38 2012
From: sergiy.dubovik at gmail.com (Sergiy Dubovik)
Date: Sun, 25 Mar 2012 19:30:38 +0300
Subject: [antlr-interest] Generate AST from C runtime
In-Reply-To: <CAPTdmTQ=Rp=5jsTi+7XDLt+AP8ba2xKpwkkJoj+AGdpWpR9DNQ@mail.gmail.com>
References: <CAPTdmTQ=Rp=5jsTi+7XDLt+AP8ba2xKpwkkJoj+AGdpWpR9DNQ@mail.gmail.com>
Message-ID: <CAPTdmTQE3BmkC7ND8V6DCXpRCf=J6KT-igGLHMOOD2J9B67wgQ@mail.gmail.com>

Uff, sorry for posting unfinished email. Tab and space have special meaning
in browser.

Could someone help me to generate AST from a grammar using C with a minimum
amount of C code?I just want to get a pointer to an AST root. I don't need
tree walker. I have a grammar which generates nice AST in AntlrWorks. Can I
have the same from C? Isn't it so that Antlr generates AST if I specify
options=AST;?

    pANTLR3_UINT8 fileName = (pANTLR3_UINT8) "example.rpp";
>
>     pANTLR3_INPUT_STREAM input = antlr3FileStreamNew(fileName, ANTLR3_ENC_8BIT);
>
>     pRppLexer lexer = RppLexerNew(input);
>
>     pANTLR3_COMMON_TOKEN_STREAM tokenStream = antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT, TOKENSOURCE(lexer));
>
>     pRppParser parser = RppParserNew(tokenStream);
>
>      RppParser_prog_return prog;
>
>     prog = parser->prog(parser);
>
>
I found that prog.tree should point to a root AST and it's not NULL,
however when I try to get token, it returns NULL.
Some months ago, I think I was getting proper pointer but now for some
reason (I updated antlr) it doesn't work anymore. C Runtime API makes it
very difficult to debug anything :(

Thanks.

br,
Sergiy

From jimi at temporal-wave.com  Sun Mar 25 09:39:36 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Sun, 25 Mar 2012 09:39:36 -0700
Subject: [antlr-interest] Generate AST from C runtime
In-Reply-To: <CAPTdmTQE3BmkC7ND8V6DCXpRCf=J6KT-igGLHMOOD2J9B67wgQ@mail.gmail.com>
References: <CAPTdmTQ=Rp=5jsTi+7XDLt+AP8ba2xKpwkkJoj+AGdpWpR9DNQ@mail.gmail.com>
	<CAPTdmTQE3BmkC7ND8V6DCXpRCf=J6KT-igGLHMOOD2J9B67wgQ@mail.gmail.com>
Message-ID: <6d3b98115eb9184ae085ec68d908a24f@mail.gmail.com>

Compile the runtime in debug mode and single step - explained in the API
docs.

Download the example tar and find the tree example in C. This shows that
you get a pointer (pANTLR3_BASE_TREE) and the super pointer of such a node
is pANTLR3_COMMON_TREE. The code in the runtime that generates a .dot file
is a good example of how to walk the tree. This is also explained in the
API docs. This is also talked about many times in antlr.markmail.org


Jim




> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of Sergiy Dubovik
> Sent: Sunday, March 25, 2012 9:31 AM
> To: AN TLR
> Subject: Re: [antlr-interest] Generate AST from C runtime
>
> Uff, sorry for posting unfinished email. Tab and space have special
> meaning in browser.
>
> Could someone help me to generate AST from a grammar using C with a
> minimum amount of C code?I just want to get a pointer to an AST root. I
> don't need tree walker. I have a grammar which generates nice AST in
> AntlrWorks. Can I have the same from C? Isn't it so that Antlr
> generates AST if I specify options=AST;?
>
>     pANTLR3_UINT8 fileName = (pANTLR3_UINT8) "example.rpp";
> >
> >     pANTLR3_INPUT_STREAM input = antlr3FileStreamNew(fileName,
> > ANTLR3_ENC_8BIT);
> >
> >     pRppLexer lexer = RppLexerNew(input);
> >
> >     pANTLR3_COMMON_TOKEN_STREAM tokenStream =
> > antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
> > TOKENSOURCE(lexer));
> >
> >     pRppParser parser = RppParserNew(tokenStream);
> >
> >      RppParser_prog_return prog;
> >
> >     prog = parser->prog(parser);
> >
> >
> I found that prog.tree should point to a root AST and it's not NULL,
> however when I try to get token, it returns NULL.
> Some months ago, I think I was getting proper pointer but now for some
> reason (I updated antlr) it doesn't work anymore. C Runtime API makes
> it very difficult to debug anything :(
>
> Thanks.
>
> br,
> Sergiy
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From jokeserver at gmail.com  Sun Mar 25 09:54:53 2012
From: jokeserver at gmail.com (Benjamin S Wolf)
Date: Sun, 25 Mar 2012 09:54:53 -0700
Subject: [antlr-interest] "No viable alternative" error
In-Reply-To: <CA+yzqf_0BmJ49TO_pgtO27u3=YMLNFnA5yUMU5EMCcfapT79Ug@mail.gmail.com>
References: <CA+yzqf_0BmJ49TO_pgtO27u3=YMLNFnA5yUMU5EMCcfapT79Ug@mail.gmail.com>
Message-ID: <CAN51Nt7Ph60JuR=6+tZZBHV0uLcnoLB=6rhweU+eACPtigxdkQ@mail.gmail.com>

Probably your rule of

ID  :	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'.')*

is matching 'lt', and the same with the other ones, so you aren't
getting LT tokens, but ID tokens. You might be able to fix this by
moving the ID rule after the LT, etc. rules; otherwise you'll need to
otherwise prevent ID from matching on that input.

On Sat, Mar 24, 2012 at 8:03 PM, Todd Nine <tnine at apigee.com> wrote:
> Hi guys,
> ?I've attached my grammer file. ?I'm getting the "no viable alternative"
> error when parsing.
>
> This statement works.
>
> "select * where a < 5"
>
> This one fails
>
> "select * where a lt 5"
>
>
> I'm a bit lost as to why, my rule for expression is defined in this way.
>
> //mathmatical equality operations
>
> equalityop :
>
> ?property LT<LessThan>^ value
>
> ?|property LTE<LessThanEqual>^ value
>
> ?|property EQ<Equal>^ value
>
> ?|property GT<GreaterThan>^ value
>
> ?|property GTE<GreaterThanEqual>^ value
>
> ?;
>
>
> Then LT is this in my tokens
>
>
> LT : '<' | 'lt';
>
>
> Any help would be greatly appreciated! ?All my operations for equality ops
> do it, so I know I've defined something incorrectly in my grammer.
>
>
> Thanks,
>
> Todd
>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sergiy.dubovik at gmail.com  Sun Mar 25 09:55:41 2012
From: sergiy.dubovik at gmail.com (Sergiy Dubovik)
Date: Sun, 25 Mar 2012 19:55:41 +0300
Subject: [antlr-interest] Generate AST from C runtime
In-Reply-To: <6d3b98115eb9184ae085ec68d908a24f@mail.gmail.com>
References: <CAPTdmTQ=Rp=5jsTi+7XDLt+AP8ba2xKpwkkJoj+AGdpWpR9DNQ@mail.gmail.com>
	<CAPTdmTQE3BmkC7ND8V6DCXpRCf=J6KT-igGLHMOOD2J9B67wgQ@mail.gmail.com>
	<6d3b98115eb9184ae085ec68d908a24f@mail.gmail.com>
Message-ID: <CAPTdmTSJx4T2QraXWiCFE-t1ywL=3H_GLBzt5ksTGhEn9MPYSg@mail.gmail.com>

Are you referring to this example
https://github.com/antlr/examples-v3/blob/master/C/treeparser/main.c ?
I checked all examples. Half of them do not generate AST, another half has
a walker.
I know how to walk the tree, as I mentioned I got it working with some
version of antlr and runtime, it just doesn't seem to generate proper ast
anymore.
Though toStringTree prints correctly.

:sergiy

On Sun, Mar 25, 2012 at 7:39 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Compile the runtime in debug mode and single step - explained in the API
> docs.
>
> Download the example tar and find the tree example in C. This shows that
> you get a pointer (pANTLR3_BASE_TREE) and the super pointer of such a node
> is pANTLR3_COMMON_TREE. The code in the runtime that generates a .dot file
> is a good example of how to walk the tree. This is also explained in the
> API docs. This is also talked about many times in antlr.markmail.org
>
>
> Jim
>
>
>
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of Sergiy Dubovik
> > Sent: Sunday, March 25, 2012 9:31 AM
> > To: AN TLR
> > Subject: Re: [antlr-interest] Generate AST from C runtime
> >
> > Uff, sorry for posting unfinished email. Tab and space have special
> > meaning in browser.
> >
> > Could someone help me to generate AST from a grammar using C with a
> > minimum amount of C code?I just want to get a pointer to an AST root. I
> > don't need tree walker. I have a grammar which generates nice AST in
> > AntlrWorks. Can I have the same from C? Isn't it so that Antlr
> > generates AST if I specify options=AST;?
> >
> >     pANTLR3_UINT8 fileName = (pANTLR3_UINT8) "example.rpp";
> > >
> > >     pANTLR3_INPUT_STREAM input = antlr3FileStreamNew(fileName,
> > > ANTLR3_ENC_8BIT);
> > >
> > >     pRppLexer lexer = RppLexerNew(input);
> > >
> > >     pANTLR3_COMMON_TOKEN_STREAM tokenStream =
> > > antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
> > > TOKENSOURCE(lexer));
> > >
> > >     pRppParser parser = RppParserNew(tokenStream);
> > >
> > >      RppParser_prog_return prog;
> > >
> > >     prog = parser->prog(parser);
> > >
> > >
> > I found that prog.tree should point to a root AST and it's not NULL,
> > however when I try to get token, it returns NULL.
> > Some months ago, I think I was getting proper pointer but now for some
> > reason (I updated antlr) it doesn't work anymore. C Runtime API makes
> > it very difficult to debug anything :(
> >
> > Thanks.
> >
> > br,
> > Sergiy
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From sergiy.dubovik at gmail.com  Sun Mar 25 10:27:35 2012
From: sergiy.dubovik at gmail.com (Sergiy Dubovik)
Date: Sun, 25 Mar 2012 20:27:35 +0300
Subject: [antlr-interest] Generate AST from C runtime
In-Reply-To: <CAPTdmTSJx4T2QraXWiCFE-t1ywL=3H_GLBzt5ksTGhEn9MPYSg@mail.gmail.com>
References: <CAPTdmTQ=Rp=5jsTi+7XDLt+AP8ba2xKpwkkJoj+AGdpWpR9DNQ@mail.gmail.com>
	<CAPTdmTQE3BmkC7ND8V6DCXpRCf=J6KT-igGLHMOOD2J9B67wgQ@mail.gmail.com>
	<6d3b98115eb9184ae085ec68d908a24f@mail.gmail.com>
	<CAPTdmTSJx4T2QraXWiCFE-t1ywL=3H_GLBzt5ksTGhEn9MPYSg@mail.gmail.com>
Message-ID: <CAPTdmTQ6FtYxUmwHHX+uKeKCOYfH5u1H627rE6ZpZT7+wjZgeA@mail.gmail.com>

Found the problem.
My first rule which contributed to AST didn't have rewrite rule, so it was
creating nodes based on ! and ^. I replace that with rewrite rule and
create AST node which appears to be the root. Now prog.tree has a token and
can be processed properly.

br,
Sergiy

On Sun, Mar 25, 2012 at 7:55 PM, Sergiy Dubovik <sergiy.dubovik at gmail.com>wrote:

> Are you referring to this example
> https://github.com/antlr/examples-v3/blob/master/C/treeparser/main.c ?
> I checked all examples. Half of them do not generate AST, another half has
> a walker.
> I know how to walk the tree, as I mentioned I got it working with some
> version of antlr and runtime, it just doesn't seem to generate proper ast
> anymore.
> Though toStringTree prints correctly.
>
> :sergiy
>
>
> On Sun, Mar 25, 2012 at 7:39 PM, Jim Idle <jimi at temporal-wave.com> wrote:
>
>> Compile the runtime in debug mode and single step - explained in the API
>> docs.
>>
>> Download the example tar and find the tree example in C. This shows that
>> you get a pointer (pANTLR3_BASE_TREE) and the super pointer of such a node
>> is pANTLR3_COMMON_TREE. The code in the runtime that generates a .dot file
>> is a good example of how to walk the tree. This is also explained in the
>> API docs. This is also talked about many times in antlr.markmail.org
>>
>>
>> Jim
>>
>>
>>
>>
>> > -----Original Message-----
>> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
>> > bounces at antlr.org] On Behalf Of Sergiy Dubovik
>> > Sent: Sunday, March 25, 2012 9:31 AM
>> > To: AN TLR
>> > Subject: Re: [antlr-interest] Generate AST from C runtime
>> >
>> > Uff, sorry for posting unfinished email. Tab and space have special
>> > meaning in browser.
>> >
>> > Could someone help me to generate AST from a grammar using C with a
>> > minimum amount of C code?I just want to get a pointer to an AST root. I
>> > don't need tree walker. I have a grammar which generates nice AST in
>> > AntlrWorks. Can I have the same from C? Isn't it so that Antlr
>> > generates AST if I specify options=AST;?
>> >
>> >     pANTLR3_UINT8 fileName = (pANTLR3_UINT8) "example.rpp";
>> > >
>> > >     pANTLR3_INPUT_STREAM input = antlr3FileStreamNew(fileName,
>> > > ANTLR3_ENC_8BIT);
>> > >
>> > >     pRppLexer lexer = RppLexerNew(input);
>> > >
>> > >     pANTLR3_COMMON_TOKEN_STREAM tokenStream =
>> > > antlr3CommonTokenStreamSourceNew(ANTLR3_SIZE_HINT,
>> > > TOKENSOURCE(lexer));
>> > >
>> > >     pRppParser parser = RppParserNew(tokenStream);
>> > >
>> > >      RppParser_prog_return prog;
>> > >
>> > >     prog = parser->prog(parser);
>> > >
>> > >
>> > I found that prog.tree should point to a root AST and it's not NULL,
>> > however when I try to get token, it returns NULL.
>> > Some months ago, I think I was getting proper pointer but now for some
>> > reason (I updated antlr) it doesn't work anymore. C Runtime API makes
>> > it very difficult to debug anything :(
>> >
>> > Thanks.
>> >
>> > br,
>> > Sergiy
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
>> > email-address
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
>

From tnine at apigee.com  Sun Mar 25 11:10:18 2012
From: tnine at apigee.com (Todd Nine)
Date: Sun, 25 Mar 2012 14:10:18 -0400
Subject: [antlr-interest] "No viable alternative" error
In-Reply-To: <CA+yzqf_W=-kzDrEhcWdoO1uGoh9DYL3jG8QzRNh=GvRG22iSiw@mail.gmail.com>
References: <CA+yzqf_0BmJ49TO_pgtO27u3=YMLNFnA5yUMU5EMCcfapT79Ug@mail.gmail.com>
	<CAFz_eedfQ8tzXXr03PM-7FO6zn1UiWugtNWzseV7FDZxByrWMw@mail.gmail.com>
	<CA+yzqf_W=-kzDrEhcWdoO1uGoh9DYL3jG8QzRNh=GvRG22iSiw@mail.gmail.com>
Message-ID: <CA+yzqf9A_piyE+nAhMxdFcUGpafCaL9juSWe9c_1AhguGnq6jg@mail.gmail.com>

Sorry, I forgot to send this to the list.

On Sun, Mar 25, 2012 at 10:46 AM, Todd Nine <tnine at apigee.com> wrote:

> Thanks Karol, that fixed it!
>
> On Sun, Mar 25, 2012 at 7:12 AM, Karol M?ot <karol.mlot at gmail.com> wrote:
>
>> Hi Todd,
>>
>> From what I can see in your grammar, your first lexer rule is ID and
>> it happends to match 'lt', so lexer returns token ID and not LT, as
>> you expect. Why? Because ID comes first, and lexer rules are processed
>> top to bottom. Solution would be moving ID rule down, after LT rule.
>> Hope that helps.
>>
>> Kind regards,
>> Karol
>>
>> On Sun, Mar 25, 2012 at 5:03 AM, Todd Nine <tnine at apigee.com> wrote:
>> > Hi guys,
>> >  I've attached my grammer file.  I'm getting the "no viable alternative"
>> > error when parsing.
>> >
>> > This statement works.
>> >
>> > "select * where a < 5"
>> >
>> > This one fails
>> >
>> > "select * where a lt 5"
>> >
>> >
>> > I'm a bit lost as to why, my rule for expression is defined in this way.
>> >
>> > //mathmatical equality operations
>> >
>> > equalityop :
>> >
>> >  property LT<LessThan>^ value
>> >
>> >  |property LTE<LessThanEqual>^ value
>> >
>> >  |property EQ<Equal>^ value
>> >
>> >  |property GT<GreaterThan>^ value
>> >
>> >  |property GTE<GreaterThanEqual>^ value
>> >
>> >  ;
>> >
>> >
>> > Then LT is this in my tokens
>> >
>> >
>> > LT : '<' | 'lt';
>> >
>> >
>> > Any help would be greatly appreciated!  All my operations for equality
>> ops
>> > do it, so I know I've defined something incorrectly in my grammer.
>> >
>> >
>> > Thanks,
>> >
>> > Todd
>> >
>> >
>> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> > Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>> >
>>
>
>

From SPR0125 at gmail.com  Sun Mar 25 22:04:49 2012
From: SPR0125 at gmail.com (SPR)
Date: Sun, 25 Mar 2012 22:04:49 -0700 (PDT)
Subject: [antlr-interest] How to define the path
Message-ID: <1332738289049-7404827.post@n2.nabble.com>

I am new to ANTLR and need help in writing grammar file.
I have a rule defined that as soon as it sees word *TRACK* followed by name 
it should start evaluating the name like function/procedure call.

Ex:
TRACK ABCNames
Write "Testing this call"

ABCNames 
If 1  >  2 then TRUE
Else
FALSE

Here its like a function call. As soon as it sees TRACK it should
look for the name and ignore the write statement and follow the path to 
name (ABCNames) and evaluate that name is right.

How do I achieve this.I am not sure how to evaluate names.
Any suggesstion and help is appreciated.


--
View this message in context: http://antlr.1301665.n2.nabble.com/How-to-define-the-path-tp7404827p7404827.html
Sent from the ANTLR mailing list archive at Nabble.com.

From register72 at gmail.com  Mon Mar 26 10:28:31 2012
From: register72 at gmail.com (register)
Date: Mon, 26 Mar 2012 19:28:31 +0200
Subject: [antlr-interest] C TARGET: Strange No Viable Exception
Message-ID: <CAAnJRPXy049fcc=+1M9RJn53vHLWbvVLrBfaCsQkSR8e5yDn6A@mail.gmail.com>

Hi all,
I have an antlr generated C  lexer that keeps on throwing several  "No
Viable Exceptions" just at the end of the file. I have developed the
grammar in AntlrWorks and the Java Lexer doesn't have any trouble at all.
The  ANTLR3_EXCEPTION struct passed to the "

displayRecognitionError" method does not carry any useful information:

- expecting, token and expectingSet are all null
- there is a mysmatch between the type and name field: type is 3
(ANTLR3_NO_VIABLE_ALT_EXCEPTION) and name is
"org.antlr.runtime.RecognitionException".


However it seems that the grammar is always able to complete a successful
parse of the files. I have made several attempts with various input and the
results I get are always correct. Still this "No Viable Exceptions" is
pretty annoying.
How could I debug this issue?

Regards,
Luca

From register72 at gmail.com  Mon Mar 26 11:10:27 2012
From: register72 at gmail.com (register)
Date: Mon, 26 Mar 2012 20:10:27 +0200
Subject: [antlr-interest] C TARGET: Strange No Viable Exception
In-Reply-To: <CAAnJRPXy049fcc=+1M9RJn53vHLWbvVLrBfaCsQkSR8e5yDn6A@mail.gmail.com>
References: <CAAnJRPXy049fcc=+1M9RJn53vHLWbvVLrBfaCsQkSR8e5yDn6A@mail.gmail.com>
Message-ID: <CAAnJRPXF3BA5y0oG3SRW7y0ngbbG=30YN8iRAJJuHS6T1fqf5g@mail.gmail.com>

I have just discovered another detail that could be useful to troubleshoot
the issue:

when I create the lexer stream directly from an input file using
"antlr3FileStreamNew" I get no error at all;
when I use antlr3StringStreamNew to create the stream from a string in
memory I get the No viable exception.

Luca


On Mon, Mar 26, 2012 at 7:28 PM, register <register72 at gmail.com> wrote:

> Hi all,
> I have an antlr generated C  lexer that keeps on throwing several  "No
> Viable Exceptions" just at the end of the file. I have developed the
> grammar in AntlrWorks and the Java Lexer doesn't have any trouble at all.
> The  ANTLR3_EXCEPTION struct passed to the "
>
> displayRecognitionError" method does not carry any useful information:
>
> - expecting, token and expectingSet are all null
> - there is a mysmatch between the type and name field: type is 3
> (ANTLR3_NO_VIABLE_ALT_EXCEPTION) and name is
> "org.antlr.runtime.RecognitionException".
>
>
> However it seems that the grammar is always able to complete a successful
> parse of the files. I have made several attempts with various input and the
> results I get are always correct. Still this "No Viable Exceptions" is
> pretty annoying.
> How could I debug this issue?
>
> Regards,
> Luca
>
>
>
>
>
>
>

From jimi at temporal-wave.com  Mon Mar 26 12:58:39 2012
From: jimi at temporal-wave.com (Jim Idle)
Date: Mon, 26 Mar 2012 12:58:39 -0700
Subject: [antlr-interest] C TARGET: Strange No Viable Exception
In-Reply-To: <CAAnJRPXF3BA5y0oG3SRW7y0ngbbG=30YN8iRAJJuHS6T1fqf5g@mail.gmail.com>
References: <CAAnJRPXy049fcc=+1M9RJn53vHLWbvVLrBfaCsQkSR8e5yDn6A@mail.gmail.com>
	<CAAnJRPXF3BA5y0oG3SRW7y0ngbbG=30YN8iRAJJuHS6T1fqf5g@mail.gmail.com>
Message-ID: <ad2c647c900a52df28a9df6de070cc61@mail.gmail.com>

Do you have a trailing newline?

Jim

> -----Original Message-----
> From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> bounces at antlr.org] On Behalf Of register
> Sent: Monday, March 26, 2012 11:10 AM
> To: antlr-interest at antlr.org
> Subject: Re: [antlr-interest] C TARGET: Strange No Viable Exception
>
> I have just discovered another detail that could be useful to
> troubleshoot the issue:
>
> when I create the lexer stream directly from an input file using
> "antlr3FileStreamNew" I get no error at all; when I use
> antlr3StringStreamNew to create the stream from a string in memory I
> get the No viable exception.
>
> Luca
>
>
> On Mon, Mar 26, 2012 at 7:28 PM, register <register72 at gmail.com> wrote:
>
> > Hi all,
> > I have an antlr generated C  lexer that keeps on throwing several
> "No
> > Viable Exceptions" just at the end of the file. I have developed the
> > grammar in AntlrWorks and the Java Lexer doesn't have any trouble at
> all.
> > The  ANTLR3_EXCEPTION struct passed to the "
> >
> > displayRecognitionError" method does not carry any useful
> information:
> >
> > - expecting, token and expectingSet are all null
> > - there is a mysmatch between the type and name field: type is 3
> > (ANTLR3_NO_VIABLE_ALT_EXCEPTION) and name is
> > "org.antlr.runtime.RecognitionException".
> >
> >
> > However it seems that the grammar is always able to complete a
> > successful parse of the files. I have made several attempts with
> > various input and the results I get are always correct. Still this
> "No
> > Viable Exceptions" is pretty annoying.
> > How could I debug this issue?
> >
> > Regards,
> > Luca
> >
> >
> >
> >
> >
> >
> >
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> email-address

From register72 at gmail.com  Mon Mar 26 13:19:05 2012
From: register72 at gmail.com (register)
Date: Mon, 26 Mar 2012 22:19:05 +0200
Subject: [antlr-interest] C TARGET: Strange No Viable Exception
In-Reply-To: <ad2c647c900a52df28a9df6de070cc61@mail.gmail.com>
References: <CAAnJRPXy049fcc=+1M9RJn53vHLWbvVLrBfaCsQkSR8e5yDn6A@mail.gmail.com>
	<CAAnJRPXF3BA5y0oG3SRW7y0ngbbG=30YN8iRAJJuHS6T1fqf5g@mail.gmail.com>
	<ad2c647c900a52df28a9df6de070cc61@mail.gmail.com>
Message-ID: <CAAnJRPX5-3AcSUpfrSBc3ym960RNH--oRKoSwijx=HxRwvPsEQ@mail.gmail.com>

The original version of the file had a trailing newline. Removing it still
gets the same exception. However my grammar pushes every "blank" in the
Hidden Channel like this:


WS  :   ( ' '| '\t'| '\r'| '\n' )+ {$channel=HIDDEN;}

Luca


On Mon, Mar 26, 2012 at 9:58 PM, Jim Idle <jimi at temporal-wave.com> wrote:

> Do you have a trailing newline?
>
> Jim
>
> > -----Original Message-----
> > From: antlr-interest-bounces at antlr.org [mailto:antlr-interest-
> > bounces at antlr.org] On Behalf Of register
> > Sent: Monday, March 26, 2012 11:10 AM
> > To: antlr-interest at antlr.org
> > Subject: Re: [antlr-interest] C TARGET: Strange No Viable Exception
> >
> > I have just discovered another detail that could be useful to
> > troubleshoot the issue:
> >
> > when I create the lexer stream directly from an input file using
> > "antlr3FileStreamNew" I get no error at all; when I use
> > antlr3StringStreamNew to create the stream from a string in memory I
> > get the No viable exception.
> >
> > Luca
> >
> >
> > On Mon, Mar 26, 2012 at 7:28 PM, register <register72 at gmail.com> wrote:
> >
> > > Hi all,
> > > I have an antlr generated C  lexer that keeps on throwing several
> > "No
> > > Viable Exceptions" just at the end of the file. I have developed the
> > > grammar in AntlrWorks and the Java Lexer doesn't have any trouble at
> > all.
> > > The  ANTLR3_EXCEPTION struct passed to the "
> > >
> > > displayRecognitionError" method does not carry any useful
> > information:
> > >
> > > - expecting, token and expectingSet are all null
> > > - there is a mysmatch between the type and name field: type is 3
> > > (ANTLR3_NO_VIABLE_ALT_EXCEPTION) and name is
> > > "org.antlr.runtime.RecognitionException".
> > >
> > >
> > > However it seems that the grammar is always able to complete a
> > > successful parse of the files. I have made several attempts with
> > > various input and the results I get are always correct. Still this
> > "No
> > > Viable Exceptions" is pretty annoying.
> > > How could I debug this issue?
> > >
> > > Regards,
> > > Luca
> > >
> > >
> > >
> > >
> > >
> > >
> > >
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-
> > email-address
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ludwig.maes at gmail.com  Mon Mar 26 16:25:22 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Tue, 27 Mar 2012 01:25:22 +0200
Subject: [antlr-interest] ANTLRworks rule left recursion removal
In-Reply-To: <CAN45N10Xxntunp62Bp2fuJW2Xb2566F_EQbUoVxiMnhii4DaEw@mail.gmail.com>
References: <CAJ8SgHm4UiQ+R3T3jrQRNx36tg2SOWOQM6My1j59FOCU3gN8uw@mail.gmail.com>
	<CAN45N10Xxntunp62Bp2fuJW2Xb2566F_EQbUoVxiMnhii4DaEw@mail.gmail.com>
Message-ID: <CAJ8SgHm1VQ87F36U=bp05KRGTOtc2p5aiMqzs4kO6mYM18Dn3A@mail.gmail.com>

Hi, I removed the simpler left recursions and now I ran into my first
mutual left recursion... I can not actually identify the recursion. It
would be helpful if ANTLR or ANTLRWorks spit out the (first
encountered?) recursion loop instead of just the names of the mutually
recursive functions...

See my attached cpp grammar

On 13 March 2012 20:51, Eric <researcher0x00 at gmail.com> wrote:
>
>
> On Fri, Mar 9, 2012 at 7:40 PM, Ludwig Maes <ludwig.maes at gmail.com> wrote:
>>
>> Hi, I was wondering how the algorithm for left recursion removal
>> works? Does it have a name, where can I find good introductions about
>> them, or more detailed papers? How safely can I use it (is it always
>> functionally identical to the rule before removal)?
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>
>
> Have you seen:
> http://www.antlr.org/wiki/display/ANTLR3/Left-Recursion+Removal
>
> There is not much to it and is described in most compiler books and at
> Wikipedia.
>
> http://en.wikipedia.org/wiki/Left_recursion
>
> Note:There is a bug with it in ANTLRWorks when comments are involved.
> See:
> http://antlr.markmail.org/search/?q=left+recursion#query:left%20recursion+page:1+mid:sstiupbjrn4ovlzu+state:results
>
>
> Eric
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cpp.g
Type: application/octet-stream
Size: 33746 bytes
Desc: not available
Url : http://www.antlr.org/pipermail/antlr-interest/attachments/20120327/8fd37bc4/attachment.obj 

From ludwig.maes at gmail.com  Mon Mar 26 16:29:06 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Tue, 27 Mar 2012 01:29:06 +0200
Subject: [antlr-interest] ANTLRworks rule left recursion removal
In-Reply-To: <CAJ8SgHm1VQ87F36U=bp05KRGTOtc2p5aiMqzs4kO6mYM18Dn3A@mail.gmail.com>
References: <CAJ8SgHm4UiQ+R3T3jrQRNx36tg2SOWOQM6My1j59FOCU3gN8uw@mail.gmail.com>
	<CAN45N10Xxntunp62Bp2fuJW2Xb2566F_EQbUoVxiMnhii4DaEw@mail.gmail.com>
	<CAJ8SgHm1VQ87F36U=bp05KRGTOtc2p5aiMqzs4kO6mYM18Dn3A@mail.gmail.com>
Message-ID: <CAJ8SgHkVbEod+unPpU_430JWxrxF6sSPs6te_t3oxTMFO2ejRA@mail.gmail.com>

I also had a strange "left recursion removal" for a rule without any
comments (it brought the rule-delimiting ; inside the rule and it was
not righteous...

just to be clear, looking at the examples on mutual left recursion I
have the impression that recursive (even mutual) still define a
grammar/language (is this right or wrong?), just not one that antlr
will accept into its parsing strategy... could mutual recursion be
resolved automatically (algorithmically) as well?

On 27 March 2012 01:25, Ludwig Maes <ludwig.maes at gmail.com> wrote:
> Hi, I removed the simpler left recursions and now I ran into my first
> mutual left recursion... I can not actually identify the recursion. It
> would be helpful if ANTLR or ANTLRWorks spit out the (first
> encountered?) recursion loop instead of just the names of the mutually
> recursive functions...
>
> See my attached cpp grammar
>
> On 13 March 2012 20:51, Eric <researcher0x00 at gmail.com> wrote:
>>
>>
>> On Fri, Mar 9, 2012 at 7:40 PM, Ludwig Maes <ludwig.maes at gmail.com> wrote:
>>>
>>> Hi, I was wondering how the algorithm for left recursion removal
>>> works? Does it have a name, where can I find good introductions about
>>> them, or more detailed papers? How safely can I use it (is it always
>>> functionally identical to the rule before removal)?
>>>
>>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>>> Unsubscribe:
>>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>>
>> Have you seen:
>> http://www.antlr.org/wiki/display/ANTLR3/Left-Recursion+Removal
>>
>> There is not much to it and is described in most compiler books and at
>> Wikipedia.
>>
>> http://en.wikipedia.org/wiki/Left_recursion
>>
>> Note:There is a bug with it in ANTLRWorks when comments are involved.
>> See:
>> http://antlr.markmail.org/search/?q=left+recursion#query:left%20recursion+page:1+mid:sstiupbjrn4ovlzu+state:results
>>
>>
>> Eric

From bradjcox at gmail.com  Mon Mar 26 16:59:30 2012
From: bradjcox at gmail.com (Brad Cox)
Date: Mon, 26 Mar 2012 19:59:30 -0400
Subject: [antlr-interest] Puzzled
Message-ID: <CAH2etF71xL323bgRyArNGFbkJ4hmz8or=5Bswoh-xg=atfn9FA@mail.gmail.com>

Could someone please explain why I'm getting this error? Or better yet, how
to fix it?

[19:39:46] error(211): XacmlPL.g:64:35: [fatal] rule boolean has non-LL(*)
decision due to recursive rule invocations reachable from alts 2,3.
 Resolve by left-factoring or using syntactic predicates or using
backtrack=true option.

Here's the grammar. Its a VERY rough first cut at a friendlier notation for
XACML than the XML razor wire defined by the standard. I included the whole
thing for completeness; the errors are in the very first rule (boolean).

grammar XacmlPL;

tokens
{
EQ='eq' ;
GE='ge' ;
 GT='gt' ;
LE='le' ;
LT='lt' ;
 NOF='nof' ;
NOT='not' ;
  ADD='add' ;
  ABS='abs' ;
  DBL='dbl' ;
  DIV='div' ;
  FLR='flr' ;
  INT='int' ;
  MOD='mod' ;
  MUL= 'mul' ;
  NLS='normalizeSpace' ;
  NLC='normalizeToLowerCase' ;
  RND='rnd' ;
  SUB= 'sub' ;
  QUOT='"' ;
ANYURI= 'anyUri';
 BASE64= 'base64';
BOOLEAN= 'boolean';
DATE= 'date';
 DATETIME= 'dateTime';
DAYTIMEDURATION= 'dayTimeDuration';
 DOUBLE= 'double';
HEX= 'hex';
INTEGER= 'integer';
 RFC822= 'rfc822';
STRING= 'string';
TIME= 'time';
 X500= 'x500';
YEARMONTHDURATION= 'yearMonthDuration';
}

@members
{
    public static void main(String[] args) throws Exception
    {
        SimpleCalcLexer lex = new SimpleCalcLexer(new
ANTLRFileStream(args[0]));
        CommonTokenStream tokens = new CommonTokenStream(lex);
        SimpleCalcParser parser = new SimpleCalcParser(tokens);
        try
        {
            parser.expr();
        }
        catch (RecognitionException e)
        {
            e.printStackTrace();
        }
    }
}
/*
| EQ date ',' date ')'
 | EQ dateTime ',' dateTime ')'
*/
boolean
: BOOLEAN_CONSTANT
 | ( EQ | GE | GT | LT | LE ) '(' ( (string ',' string) | (integer ','
integer) | (double ',' double) ) ')'
 | (NOF | NOT) '(' boolean ')'
  ;

integer
: INTEGER_CONSTANT
  | (ADD | SUB | MUL | DIV) '(' (integer ',' integer) ')'
  | (MOD | ABS) '(' integer ')'
//  | INT '(' double ')'
  ;

double
  : DOUBLE_CONSTANT
  | (ADD | SUB | MUL | DIV)  '(' ( double ',' double ) ')'
  | (ABS | RND | FLR) '(' double ')'
//  | DBL '(' integer ')'
  ;

string
: STRING_CONSTANT
  | (NLS | NLC) '(' string ')'
  ;

/*
dateTime
  : ADD dateTime ',' dayTimeDuration ')'
//  | ADD dateTime ',' yearMonthDuration ')'
  | SUB dateTime ',' dayTimeDuration ')'
  | SUB dateTime ',' yearMonthDuration ')'
  ;

date
  : ADD date ',' yearMonthDuration ')'
  | SUB date ',' yearMonthDuration ')'
  ;
*/
anyUriBag
: ANYURI STRING_LIST
;
base64Bag
 : BASE64 STRING_LIST
;
booleanBag
: BOOLEAN STRING_LIST
 ;
dateBag
: DATE STRING_LIST
;
dateTimeBag
: DATETIME STRING_LIST
;
dayTimeDurationBag
 : DAYTIMEDURATION STRING_LIST
;
doubleBag
: DOUBLE STRING_LIST
 ;
hexBag
: HEX STRING_LIST
;
integerBag
: INTEGER STRING_LIST
;
rfc822Bag
: RFC822 STRING_LIST
 ;
stringBag
: STRING STRING_LIST
;
timeBag
: TIME STRING_LIST
;
x500Bag
: X500 STRING_LIST
 ;
yearMonthDurationBag
: YEARMONTHDURATION STRING_LIST
;

time
: 'time()'
;
dayTimeDuration
 : 'dayTimeDuration()'
;
yearMonthDuration
: 'yearMonthDuration()'
 ;
anyUri
: 'anyUri()'
;
x500Name
: 'x500Name()'
;
rfc822Name
: 'rfc822Name()'
 ;
hexBinary
: 'hexBinary()'
;
base64
: 'base64()'
;

COMMENT
: '//' ~('\n'|'\r')* '\r'? '\n' {$channel=HIDDEN;}
 | '/*' ( options {greedy=false;} : . )* '*/' {$channel=HIDDEN;}
;

WS
:( ' '
  | '\t'
  | '\r'
  | '\n'
  ) {$channel=HIDDEN;}
  ;

fragment BOOLEAN_CONSTANT
: 'true'
 | 'false'
;

fragment INTEGER_CONSTANT
: (DIGIT)+
  ;

DOUBLE_CONSTANT
  :  INTEGER_CONSTANT? '.' INTEGER_CONSTANT EXPONENT?
//  |  '.' INTEGER_CONSTANT + EXPONENT?
//  |   ('0'..'9')+ EXPONENT
  ;

STRING_CONSTANT
  :  '"' ( ESC_SEQ | ~('\\'|'"') )* '"'
  ;

STRING_LIST
: '(' STRING_CONSTANT ( ',' STRING_CONSTANT )* ')'
 ;

CHAR
:  '\'' ( ESC_SEQ | ~('\''|'\\') ) '\''
  ;

fragment DIGIT
: '0'..'9'
;
fragment EXPONENT
: ('e'|'E') ('+'|'-')? ('0'..'9')+
;

fragment HEX_DIGIT
: ('0'..'9'|'a'..'f'|'A'..'F')
;

fragment ESC_SEQ
    :   '\\' ('b'|'t'|'n'|'f'|'r'|'\"'|'\''|'\\')
    |   UNICODE_ESC
    |   OCTAL_ESC
    ;

fragment OCTAL_ESC
    :   '\\' ('0'..'3') ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7') ('0'..'7')
    |   '\\' ('0'..'7')
    ;

fragment UNICODE_ESC
    :   '\\' 'u' HEX_DIGIT HEX_DIGIT HEX_DIGIT HEX_DIGIT
    ;

fragment SIGN
    :   ('+'|'-')
    ;

NUMBER_OR_RANGEOP
    :   SIGN? DIGIT+
        (
            { input.LA(2) != '.' }? => '.' DIGIT* { $type = DECIMAL; }
            | { $type = INTEGER; }
        )
    |   SIGN '.' DIGIT+ { $type = DECIMAL; }
    |   '.'
        (
        DIGIT+ { $type = DECIMAL; }
        | '.' {$type = RANGEOP; }
        | {$type = DEREF; } )
    ;

/*
ID
: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
    ;
*/

From ramponjerome at yahoo.fr  Tue Mar 27 04:58:02 2012
From: ramponjerome at yahoo.fr (Rampon Jerome)
Date: Tue, 27 Mar 2012 12:58:02 +0100 (BST)
Subject: [antlr-interest] CommonTreeAdaptor subclass
Message-ID: <1332849482.46532.YahooMailNeo@web24704.mail.ird.yahoo.com>




Hi,


For info, based on recent experiments with 3.4 (I did not find feedbacks
on this, reason of my post)


If anyone interested in subclassing CommonTreeAdaptor as described in
The Definitive ANTLR reference (7.2 - pp 170)
to get his own CommonTree nodes created in AST via its own adaptor.


it seems to me that create method has to be subclassed in new 

CommonTree extent as described


but also dupNode and 

constructor with self-node parameter
to get a clean final AST (as called in CommonTreeAdaptor)



? public MyNewCommonTree(MyNewCommonTree node) {
??? super(node);
? }
? public Tree dupNode() {
??? return new MyNewCommonTree(this);
? }


For documentation update possibly ...


Regards

Jerome

From diabeteman at gmail.com  Wed Mar 28 04:51:54 2012
From: diabeteman at gmail.com (Robin)
Date: Wed, 28 Mar 2012 13:51:54 +0200
Subject: [antlr-interest] [newbie] Tree pattern matching
Message-ID: <CA+_G_aqJa9LcRfK9gS-sQiFSwC4cAF5b_6O9DZViao8aPCOqmg@mail.gmail.com>

Hello list,

I've read a lot from the mailing list http://antlr.markmail.org but I
couldn't find an answer. I guess it is because i'm too much a ANTLR n00b.

My task is simple:

   - recognize sub-tree patterns (mostly function, class, etc.
   declarations) in a Java AST
   - print on the console what is found (later i'd like to store this
   somewhere, but let's start small)

To generate the Java AST I'm using the this grammar from the website
http://www.antlr.org/grammar/1207932239307/Java1_5Grammars/Java.g

Then, i took the JavaTreeParser (that comes with it)
http://www.antlr.org/grammar/1207932239307/Java1_5Grammars/JavaTreeParser.g and
removed most of the rules and added the option: filter = true;
http://pastebin.com/JTVCkFZh

Here is my test rig http://pastebin.com/66mrqJ64

The problem is that when I run this on a Java source file containing
classes and methods, i don't get any output.

$ java -jar target/apiwatch-0.1-SNAPSHOT-jar-with-dependencies.jar
target/generated-sources/antlr3/com/habelitz/jsobjectizer/unmarshaller/antlrbridge/generated/JavaLexer.java
file:
d:\dev\apiwatch\target\generated-sources\antlr3\com\habelitz\jsobjectizer\unmarshaller\antlrbridge\generated\JavaLexer.java
    Lexer Start
      lexed in 1ms.
    Parser Start
      Parsed in 303ms.
    AST Walk Start


      AST Walked in 26ms.

Could someone point where i made a mistake? I already tried to move my
System.out.println calls around but nothing works...

Thanks in advance

Robin

From bryan.keech.hx1i at statefarm.com  Wed Mar 28 06:05:02 2012
From: bryan.keech.hx1i at statefarm.com (Bryan Keech)
Date: Wed, 28 Mar 2012 13:05:02 +0000
Subject: [antlr-interest] Number of Errors reported in Antlr greater than 3.2
Message-ID: <97D9E5B4786EF3489D58CA02F6A3A7A823D601@WPSDGQHC.OPR.STATEFARM.ORG>

Noticed a difference in the number of errors reported by antlr when using a Antlr version greater than 3.2. In version 3.2 Antlr reported 130 errors for a input, but when using Antlr 3.4, only 80 errors are reported.

Any idea why the difference in Antlr 3.4?

Bryan Keech


From dturvey at bhc.ltd.uk  Fri Mar 30 02:38:41 2012
From: dturvey at bhc.ltd.uk (David Turvey)
Date: Fri, 30 Mar 2012 10:38:41 +0100
Subject: [antlr-interest] C# target: String Templates and translation bug?
Message-ID: <39FD04875E33B64E9EA0E71342822CC0159EBB6925@SVR01.BHCUK.local>


Hi,

I was having the same problem as you. Setting "ASTLabelType=StringTemplate;" seems to fix the issue.

I have just joined the list. If this message is not correctly linked to the original question, it can be found here
http://www.antlr.org/pipermail/antlr-interest/2012-February/044153.html

I also asked a related question on Stackoverflow.
http://stackoverflow.com/questions/9923639/antlr-grammar-generating-invalid-c-sharp-code/9923912#comment12678372_9923912

David

From cpgarg10 at gmail.com  Fri Mar 30 03:24:34 2012
From: cpgarg10 at gmail.com (cpgarg10)
Date: Fri, 30 Mar 2012 03:24:34 -0700 (PDT)
Subject: [antlr-interest] [newbie] AST Rewriting
In-Reply-To: <CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
References: <CA+_G_ap0SU8qYXW13ZnMtHm4O4XJmCJ4G_3GCoj=cZ26wyp-DQ@mail.gmail.com>
	<CAN45N13KUOLhaAogV=UaT3qRQy=2qwe-CbBVff6qjft8nqN_yA@mail.gmail.com>
Message-ID: <1333103074082-7420947.post@n2.nabble.com>

Hi Eric,

I think i am also in same situation. 

Actually my problem is to write a parser for some language say X so that i
can retrieve the info written in that language X. Using ANTLR i could
generate the lexer/parser automatically and i could also the AST for input.
Now i think i have to walk the AST and get the info associated with nodes
and build internal data structure. But my problem is i am getting all the
nodes in sequence. I initially thought, i will get AST in tree structure
[Multi level]. Where extracting info would be straight forward.

But here it seems that i need to do some work on AST walker. I read about
adapter things quite a lot on ANTLR mailing list. But could not understood
adapter much. It is something related to AST walker, can it make my life
easier. I mean, can i use adapter in AST walk. or something like it. 

Your comments are welcome.

Thanks
Chandra






--
View this message in context: http://antlr.1301665.n2.nabble.com/newbie-AST-Rewriting-tp7385275p7420947.html
Sent from the ANTLR mailing list archive at Nabble.com.

From nikolay.ognyanov at travelstoremaker.com  Fri Mar 30 03:37:16 2012
From: nikolay.ognyanov at travelstoremaker.com (Nikolay Ognyanov)
Date: Fri, 30 Mar 2012 13:37:16 +0300
Subject: [antlr-interest] Stripping actions and tree commands out of a
	grammar
Message-ID: <4F758CDC.5020204@travelstoremaker.com>

Can somebody please advise whether there is a way/tool to automatically
strip out of an ANTLR grammar all actions and tree comands? A pure
grammar with these parts stripped is useful for documentation and
presentation purposes. It is my feeling too that it would be useful to
have a clear view of the uncluttered grammar during the process of
development of a new language.

Thank you
Nikolay

From bkiers at gmail.com  Fri Mar 30 04:16:35 2012
From: bkiers at gmail.com (Bart Kiers)
Date: Fri, 30 Mar 2012 13:16:35 +0200
Subject: [antlr-interest] Stripping actions and tree commands out of a
	grammar
In-Reply-To: <4F758CDC.5020204@travelstoremaker.com>
References: <4F758CDC.5020204@travelstoremaker.com>
Message-ID: <CAOrgODZ_=_ORERDBfBFjHNG3Zx9Mda2B0zRH8gow7okSM8YzdQ@mail.gmail.com>

On Fri, Mar 30, 2012 at 12:37 PM, Nikolay Ognyanov <
nikolay.ognyanov at travelstoremaker.com> wrote:

> Can somebody please advise whether there is a way/tool to automatically
> strip out of an ANTLR grammar all actions and tree comands? A pure
> grammar with these parts stripped is useful for documentation and
> presentation purposes. It is my feeling too that it would be useful to
> have a clear view of the uncluttered grammar during the process of
> development of a new language.
>

You can use the org.antlr.tool.Strip class for this:

java -cp antlr-3.X.jar org.antlr.tool.Strip T.g

Regards,

Bart.

From nikolay.ognyanov at travelstoremaker.com  Fri Mar 30 06:59:29 2012
From: nikolay.ognyanov at travelstoremaker.com (Nikolay Ognyanov)
Date: Fri, 30 Mar 2012 16:59:29 +0300
Subject: [antlr-interest] Stripping actions and tree commands out of a
 grammar
In-Reply-To: <CAOrgODZ_=_ORERDBfBFjHNG3Zx9Mda2B0zRH8gow7okSM8YzdQ@mail.gmail.com>
References: <4F758CDC.5020204@travelstoremaker.com>
	<CAOrgODZ_=_ORERDBfBFjHNG3Zx9Mda2B0zRH8gow7okSM8YzdQ@mail.gmail.com>
Message-ID: <4F75BC41.3080705@travelstoremaker.com>

Thank you very much, Bart!

Regards
Nikolay

On 03/30/2012 02:16 PM, Bart Kiers wrote:
> On Fri, Mar 30, 2012 at 12:37 PM, Nikolay Ognyanov 
> <nikolay.ognyanov at travelstoremaker.com 
> <mailto:nikolay.ognyanov at travelstoremaker.com>> wrote:
>
>     Can somebody please advise whether there is a way/tool to
>     automatically
>     strip out of an ANTLR grammar all actions and tree comands? A pure
>     grammar with these parts stripped is useful for documentation and
>     presentation purposes. It is my feeling too that it would be useful to
>     have a clear view of the uncluttered grammar during the process of
>     development of a new language.
>
>
> You can use the org.antlr.tool.Strip class for this:
>
> java -cp antlr-3.X.jar org.antlr.tool.Strip T.g
>
> Regards,
>
> Bart.

From kferrio at gmail.com  Fri Mar 30 09:09:28 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Fri, 30 Mar 2012 09:09:28 -0700
Subject: [antlr-interest] Stripping actions and tree commands out of a
	grammar
In-Reply-To: <4F758CDC.5020204@travelstoremaker.com>
References: <4F758CDC.5020204@travelstoremaker.com>
Message-ID: <CAAfeETq79enyHKwt0ZH_xpdKDPVUxnTEn-Zrh8+b+2=1Ej1bgQ@mail.gmail.com>

I know you're asking about antlr3, and I see some answers.  This is just an
FYI: You're going to love ANTLR 4.

The new antlr empowers you to keep separate grammar from actions (and
indeed keep separate grammar from target language).  Grammar reuse and
retargeting are integral to v4.  It's really beautiful.  Ter has posted
some examples and early access jars so that we can follow along at home.

(Check out Ter's blog/wiki at antlr.org.)

Kyle
 On Mar 30, 2012 3:37 AM, "Nikolay Ognyanov" <
nikolay.ognyanov at travelstoremaker.com> wrote:

> Can somebody please advise whether there is a way/tool to automatically
> strip out of an ANTLR grammar all actions and tree comands? A pure
> grammar with these parts stripped is useful for documentation and
> presentation purposes. It is my feeling too that it would be useful to
> have a clear view of the uncluttered grammar during the process of
> development of a new language.
>
> Thank you
> Nikolay
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From ludwig.maes at gmail.com  Fri Mar 30 13:40:21 2012
From: ludwig.maes at gmail.com (Ludwig Maes)
Date: Fri, 30 Mar 2012 22:40:21 +0200
Subject: [antlr-interest] Stripping actions and tree commands out of a
	grammar
In-Reply-To: <CAAfeETq79enyHKwt0ZH_xpdKDPVUxnTEn-Zrh8+b+2=1Ej1bgQ@mail.gmail.com>
References: <4F758CDC.5020204@travelstoremaker.com>
	<CAAfeETq79enyHKwt0ZH_xpdKDPVUxnTEn-Zrh8+b+2=1Ej1bgQ@mail.gmail.com>
Message-ID: <CAJ8SgHnitx67ovZqB7yfNq1_2zPWHZsJroMss4jWGi=pzOjxoQ@mail.gmail.com>

Could you give a more specific pointer where I can find out more about
the upcoming antlr 4.x?

On 30 March 2012 18:09, Kyle Ferrio <kferrio at gmail.com> wrote:
> I know you're asking about antlr3, and I see some answers. ?This is just an
> FYI: You're going to love ANTLR 4.
>
> The new antlr empowers you to keep separate grammar from actions (and
> indeed keep separate grammar from target language). ?Grammar reuse and
> retargeting are integral to v4. ?It's really beautiful. ?Ter has posted
> some examples and early access jars so that we can follow along at home.
>
> (Check out Ter's blog/wiki at antlr.org.)
>
> Kyle
> ?On Mar 30, 2012 3:37 AM, "Nikolay Ognyanov" <
> nikolay.ognyanov at travelstoremaker.com> wrote:
>
>> Can somebody please advise whether there is a way/tool to automatically
>> strip out of an ANTLR grammar all actions and tree comands? A pure
>> grammar with these parts stripped is useful for documentation and
>> presentation purposes. It is my feeling too that it would be useful to
>> have a clear view of the uncluttered grammar during the process of
>> development of a new language.
>>
>> Thank you
>> Nikolay
>>
>> List: http://www.antlr.org/mailman/listinfo/antlr-interest
>> Unsubscribe:
>> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>>
>
> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> Unsubscribe: http://www.antlr.org/mailman/options/antlr-interest/your-email-address

From kferrio at gmail.com  Fri Mar 30 13:55:20 2012
From: kferrio at gmail.com (Kyle Ferrio)
Date: Fri, 30 Mar 2012 13:55:20 -0700
Subject: [antlr-interest] Stripping actions and tree commands out of a
	grammar
In-Reply-To: <CAJ8SgHnitx67ovZqB7yfNq1_2zPWHZsJroMss4jWGi=pzOjxoQ@mail.gmail.com>
References: <4F758CDC.5020204@travelstoremaker.com>
	<CAAfeETq79enyHKwt0ZH_xpdKDPVUxnTEn-Zrh8+b+2=1Ej1bgQ@mail.gmail.com>
	<CAJ8SgHnitx67ovZqB7yfNq1_2zPWHZsJroMss4jWGi=pzOjxoQ@mail.gmail.com>
Message-ID: <CAAfeETrAjoimB1z7mPOQ0Pk=Afg9Y9fw33WnJPztJPCr2WVKvQ@mail.gmail.com>

Sure!  Have a look at this:

http://www.antlr.org/wiki/display/ANTLR4/Home

Things to look for -- in addition to the ability to keep grammars
action-free if you want to -- include the ability to handle direct
left-recursion (great for parsing algebraic expressions, propositional
calculi, *etc.*), decisively favoring parse trees over ASTs, and a
simple-yet-powerful listener model for processing trees.  Oh, and the
biggest thing of all -- Honey Badger (the code name for v4) is very robust
and will gobble up just about any grammar you give it.  If there's a
reasonable way to understand your grammar, Honey Badger does.

If you want to get deeper into it, Ter is hosting the work in github.  I
believe Ter's workign branch is at https://github.com/parrt/antlr4 and that
he periodically pushes to the "nominal" branch at
https://github.com/antlr/antlr4.

Kyle



On Fri, Mar 30, 2012 at 1:40 PM, Ludwig Maes <ludwig.maes at gmail.com> wrote:

> Could you give a more specific pointer where I can find out more about
> the upcoming antlr 4.x?
>
> On 30 March 2012 18:09, Kyle Ferrio <kferrio at gmail.com> wrote:
> > I know you're asking about antlr3, and I see some answers.  This is just
> an
> > FYI: You're going to love ANTLR 4.
> >
> > The new antlr empowers you to keep separate grammar from actions (and
> > indeed keep separate grammar from target language).  Grammar reuse and
> > retargeting are integral to v4.  It's really beautiful.  Ter has posted
> > some examples and early access jars so that we can follow along at home.
> >
> > (Check out Ter's blog/wiki at antlr.org.)
> >
> > Kyle
> >  On Mar 30, 2012 3:37 AM, "Nikolay Ognyanov" <
> > nikolay.ognyanov at travelstoremaker.com> wrote:
> >
> >> Can somebody please advise whether there is a way/tool to automatically
> >> strip out of an ANTLR grammar all actions and tree comands? A pure
> >> grammar with these parts stripped is useful for documentation and
> >> presentation purposes. It is my feeling too that it would be useful to
> >> have a clear view of the uncluttered grammar during the process of
> >> development of a new language.
> >>
> >> Thank you
> >> Nikolay
> >>
> >> List: http://www.antlr.org/mailman/listinfo/antlr-interest
> >> Unsubscribe:
> >> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
> >>
> >
> > List: http://www.antlr.org/mailman/listinfo/antlr-interest
> > Unsubscribe:
> http://www.antlr.org/mailman/options/antlr-interest/your-email-address
>

From rprememail at yahoo.com  Sat Mar 31 22:28:56 2012
From: rprememail at yahoo.com (Premkumar)
Date: Sat, 31 Mar 2012 22:28:56 -0700 (PDT)
Subject: [antlr-interest] (no subject)
Message-ID: <1333258136.22668.yint-ygo-j2me@web124705.mail.ne1.yahoo.com>


http://mimascotayyo.grupo-design.com/httpweekh1kk-1.php?CID=353
Y0ur 0wn internet m0ney making machines



_______________
  Dat truck dah is TRASH; en trash is what people isdat puts dirt on de head er dey frens en makes em ashamed. willy aldric

