From Manfred.Lotz at web.de  Sun Dec  2 05:36:50 2001
From: Manfred.Lotz at web.de (Manfred.Lotz@web.de)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] transforming strings
Message-ID: <9udapi+5hgs@eGroups.com>

Hi there,

I want to transform a string which consists of a combination of
possibly 50 tokens into another string.

I defined a t.g with all tokens in it and was able to scan it using
the Lexer class.

The problem with the transform is that depending of certain
combinations  of three consecutive tokens I want to transform
differently.

E.g.:  tn t tm ==> tx ty where tn, tm, tx and ty are certain tokens.
Only t is a fixed token.

Here I have many combinations. 

I have no idea how to tackle the task using antlr. I'm aware that
using the lexer I've created I could write my own program to achieve
it. 

But perhaps I could use a method which is more elegant????


Manfred


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sun Dec  2 17:15:51 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
Message-ID: <4A975A0C-E78B-11D5-96D4-0030653DE0D6@jguru.com>

Folks,

Just to give some status.  Ric's excellent C++ output updates and 
general bug fixes have been merged into the main ANTLR line.  I have 
about 10 things that I want to fix before releasing a 2.7.2 version.  We 
will do a few alpha/beta releases so people can test it against their 
grammars and so on.  Should have a "change list" soon.

Kudos to Ric Klaren for his hard work!

2.7.2 before end of 2001!

Regards,
Terence
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From christian.ernst at poet.de  Mon Dec  3 03:13:48 2001
From: christian.ernst at poet.de (Christian Ernst)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
References: <4A975A0C-E78B-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <3C0B5E6C.2EF381F@poet.de>

Hy !

Terence Parr wrote:

>  I have about 10 things that I want to fix before releasing a 2.7.2
> version.

I would be intertested if it would contains changes for:

1. The Java Generator  for generating smaller static array initializer !?

2. Cutting down the size of the Java Runtime library !?
    ( removing any dependicies to antlr/Tool class, adding a class for string
manipulation ?!)

Are you interested in changes for ANTLR for building with ANT !?

mfg
Christian





 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec  3 11:56:55 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
In-Reply-To: <3C0B5E6C.2EF381F@poet.de>
Message-ID: <E707B992-E827-11D5-96D4-0030653DE0D6@jguru.com>


On Monday, December 3, 2001, at 03:13  AM, Christian Ernst wrote:

> Hy !

Hiya Christian! :)

> Terence Parr wrote:
>
>>  I have about 10 things that I want to fix before releasing a 2.7.2
>> version.
>
> I would be intertested if it would contains changes for:
>
> 1. The Java Generator  for generating smaller static array 
> initializer !?

It's on the list!  1/1 so far. :)  Can't decide whether I want to do a 
really fancy thing or just solve this immediate problem.  For example, 
if I define a GIF like compression for these bitsets it would solve this 
big static thing as well as help some lookahead computations in the 
lexer.  Hmm....I better not bite off more than I can chew between now 
and new years ;)

> 2. Cutting down the size of the Java Runtime library !?
>     ( removing any dependicies to antlr/Tool class, adding a class for 
> string
> manipulation ?!)

oops... 1/2. ;)  I hadn't planned on doing that for this release.  Are 
you using a small device?  What string manipulation would you like?  I 
have lots of fun routines hiding in my jGuru portal code. :)

> Are you interested in changes for ANTLR for building with ANT !?

Well, I'm fundamentally opposed to ANT no matter how good it is (people 
have sent me like 3 config files already) because I oppose making Humans 
grok XML.  Please see

http://www-106.ibm.com/developerworks/library/x-sbxml.html

for my rationale (no hate-mail til you've read that please <wink>).  
Sorry, this is my little bit of civil disobedience.  ANT is great and I 
support the tool in my jGuru capacity, but...

http://www.jguru.com/faq/Ant

Yes, I know the make situation is a mess right now (Ric and I are just 
discussing it) ;)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Matthew.Ford at forward.com.au  Mon Dec  3 14:26:16 2001
From: Matthew.Ford at forward.com.au (Matthew Ford)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
References: <E707B992-E827-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <000401c17c49$861403c0$6c64020a@matthewfnb>

I read you interesting article on xml and I disagree about it as a reason to
not use Ant
One of the things I like about XML is using XML-Spy which makes XML human
readable and also checks for valid inputs if you have DTD's and schemas
Build files can get very messy and using Ant and XML-Spy is as good as any I
have used.

regards
matthew
----- Original Message -----
From: "Terence Parr" <parrt@jguru.com>
To: <antlr-interest@yahoogroups.com>
Sent: Tuesday, December 04, 2001 6:56 AM
Subject: Re: [antlr-interest] merged Ric's changes into main ANTLR line


>
> On Monday, December 3, 2001, at 03:13  AM, Christian Ernst wrote:
>
> > Hy !
>
> Hiya Christian! :)
>
> > Terence Parr wrote:
> >
> >>  I have about 10 things that I want to fix before releasing a 2.7.2
> >> version.
> >
> > I would be intertested if it would contains changes for:
> >
> > 1. The Java Generator  for generating smaller static array
> > initializer !?
>
> It's on the list!  1/1 so far. :)  Can't decide whether I want to do a
> really fancy thing or just solve this immediate problem.  For example,
> if I define a GIF like compression for these bitsets it would solve this
> big static thing as well as help some lookahead computations in the
> lexer.  Hmm....I better not bite off more than I can chew between now
> and new years ;)
>
> > 2. Cutting down the size of the Java Runtime library !?
> >     ( removing any dependicies to antlr/Tool class, adding a class for
> > string
> > manipulation ?!)
>
> oops... 1/2. ;)  I hadn't planned on doing that for this release.  Are
> you using a small device?  What string manipulation would you like?  I
> have lots of fun routines hiding in my jGuru portal code. :)
>
> > Are you interested in changes for ANTLR for building with ANT !?
>
> Well, I'm fundamentally opposed to ANT no matter how good it is (people
> have sent me like 3 config files already) because I oppose making Humans
> grok XML.  Please see
>
> http://www-106.ibm.com/developerworks/library/x-sbxml.html
>
> for my rationale (no hate-mail til you've read that please <wink>).
> Sorry, this is my little bit of civil disobedience.  ANT is great and I
> support the tool in my jGuru capacity, but...
>
> http://www.jguru.com/faq/Ant
>
> Yes, I know the make situation is a mess right now (Ric and I are just
> discussing it) ;)
>
> Ter
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org
>
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>
>


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Tue Dec  4 01:31:25 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
Message-ID: <01120410355700.00768@krsn-d9336416>

Hi!

1st of all, I'd like to thank you for your great work. We use Antlr to generate
the parser for Java reverse enginering in the ArgoUML project (
http://www.argouml.org ), and it works great.
Now, I'm interested in RE compiled Java code, and was looking for a Antlr
grammar to parse Java classfiles. So far, I couldn't find anything in the
resources section of the Antlr site and in my mailing list archive.
Is such a grammar available? If not, is there a good reason, why one couldn't
write such a grammar?

TIA,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From renyedi at yahoo.com  Tue Dec  4 02:49:19 2001
From: renyedi at yahoo.com (Robert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
References: <01120410355700.00768@krsn-d9336416>
Message-ID: <001101c17cb1$731a3ec0$3000000a@robert>

Greetings!

First of all, I don't know about the existence of such a (n ANTLR) grammar.

I know pretty much the java .class file format. As it is straighforward, I
have built a package that reads and writes this file format.

Based on that experience, I think the main problem of building such a
grammar would be to apply a certain rule a specific number of times (for
instance you read the number of methods the class file holds and based on
this number, you iterate to read every method). This is the main
characteristic of the .class format (as well as of many binary file format).

I know that predicates are one of the features ANTLR has. I think this could
be the only salvation... However, if you manage to find an existing grammar,
please let me know.

Robert

PS.: You may find the exact description of the .class format in the Java
Virtual Machine Specification.

----- Original Message -----
From: "Andreas Rueckert" <a_rueckert@gmx.net>
To: <antlr-interest@yahoogroups.com>
Sent: Tuesday, December 04, 2001 11:31 AM
Subject: [antlr-interest] Antlr grammar to parse Java classfile?


> Hi!
>
> 1st of all, I'd like to thank you for your great work. We use Antlr to
generate
> the parser for Java reverse enginering in the ArgoUML project (
> http://www.argouml.org ), and it works great.
> Now, I'm interested in RE compiled Java code, and was looking for a Antlr
> grammar to parse Java classfiles. So far, I couldn't find anything in the
> resources section of the Antlr site and in my mailing list archive.
> Is such a grammar available? If not, is there a good reason, why one
couldn't
> write such a grammar?
>
> TIA,
> Andreas
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>


_________________________________________________________
Do You Yahoo!?
Get your free @yahoo.com address at http://mail.yahoo.com


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From tomdz at cs.tu-berlin.de  Tue Dec  4 03:45:32 2001
From: tomdz at cs.tu-berlin.de (Thomas Dudziak)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
Message-ID: <Pine.SOL.4.10.10112041242170.24397-100000@reticuli>

Hi,

the major reason for not writing such a gramar in ANTLR would be that a
lot of such libraries exist, most notably perhaps BCEL (Byte Code
Engineering Library, formerly JavaClass, at http://bcel.sourceforge.net)
which is quite mature.

Ciao, Tom


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From christian.ernst at poet.de  Tue Dec  4 02:39:51 2001
From: christian.ernst at poet.de (Christian Ernst)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
References: <E707B992-E827-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <3C0CA7F7.A074722E@poet.de>

Hy Terence !

Terence Parr wrote:

> > 2. Cutting down the size of the Java Runtime library !?
> >     ( removing any dependicies to antlr/Tool class, adding a class for
> > string
> > manipulation ?!)
>
> oops... 1/2. ;)  I hadn't planned on doing that for this release.  Are
> you using a small device?  What string manipulation would you like?  I
> have lots of fun routines hiding in my jGuru portal code. :)

small is nice ;-)
there is a small difference between 340k jar ANTLR SDK
and a nifty small 65k ANTLR Runtime
if your application is only about 500k

The String Manipulations are only reorgarnisation of existing code
please see my post:
 [antlr-interest] ANTLR Runtime/SDK jar mixtures and suggestions


mfg
Christian



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Tue Dec  4 04:43:43 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
In-Reply-To: <001101c17cb1$731a3ec0$3000000a@robert>
References: <01120410355700.00768@krsn-d9336416> <001101c17cb1$731a3ec0$3000000a@robert>
Message-ID: <01120413471507.00768@krsn-d93363d4>

Hi!

On Die, 04 Dez 2001 Robert wrote:
> Greetings!
> 
> First of all, I don't know about the existence of such a (n ANTLR) grammar.
> 
> I know pretty much the java .class file format. As it is straighforward, I
> have built a package that reads and writes this file format.

What is it called? I studied some packages yesterday, but most of them are too
big or have the wrong license for my purpose.
  
> Based on that experience, I think the main problem of building such a
> grammar would be to apply a certain rule a specific number of times (for
> instance you read the number of methods the class file holds and based on
> this number, you iterate to read every method). This is the main
> characteristic of the .class format (as well as of many binary file format).

I know. I already thought about that problem and I guess it could be solved
within the production of such a rule.

> I know that predicates are one of the features ANTLR has. I think this could
> be the only salvation... However, if you manage to find an existing grammar,
> please let me know.
> 
> Robert
> 
> PS.: You may find the exact description of the .class format in the Java
> Virtual Machine Specification.

I studied the JVM specs before I wrote my posting. That's when I thought that
doing the parsing with Antlr should be easier than writing the parser myself.

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Tue Dec  4 04:48:58 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
In-Reply-To: <Pine.SOL.4.10.10112041242170.24397-100000@reticuli>
References: <Pine.SOL.4.10.10112041242170.24397-100000@reticuli>
Message-ID: <01120413524108.00768@krsn-d93363d4>

Hi!

On Die, 04 Dez 2001 Thomas Dudziak wrote:
> Hi,
> 
> the major reason for not writing such a gramar in ANTLR would be that a
> lot of such libraries exist, most notably perhaps BCEL (Byte Code
> Engineering Library, formerly JavaClass, at http://bcel.sourceforge.net)
> which is quite mature.

I know. But it's quite big (a 350K jar) and I considered it a bit overkill for
my purpose. I checked a couple of other packages, but couldn't find a small one
with the limited functionality I need. And since we have the antlr jar in the
Argo package anyway (for the source RE), I thought a Antlr generated parser
might be a nice alternative. It would also mean, that we could reuse a good
part of the source RE code.
However, I'll take another look at the Antlr binary parser example and will
think about writing such a grammar, if nothing else pops up.

Thanks,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From renyedi at yahoo.com  Tue Dec  4 05:44:13 2001
From: renyedi at yahoo.com (Robert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
References: <01120410355700.00768@krsn-d9336416> <001101c17cb1$731a3ec0$3000000a@robert> <01120413471507.00768@krsn-d93363d4>
Message-ID: <005401c17cc9$d651f290$3000000a@robert>

Hi!

The package I told you about is a part of a project that me and a friend
have done some time ago. It is a relational DBMS called Tomato
(http://tomato4j.hypermart.net/). It is written in Java and includes(besides
other tools) a (hand built) compiler for a custom language. It generates
.class files. The class file generator package is a small one but it offers
sufficient functionality.

Currently, the project currently is at version 1 (beta) and it is freeware.
The good news is that we intend to release version 2 as open source - with
the compiler rewritten using ANTLR and the database engine extended with a
JDBC driver.

The release date of version 2 is unclear right now. I know ArgoUML and it is
a remarcable effort. This is why I'm going to send you (in a separate mail)
the sources of the classfile reader/writer package. It might not be the best
thing around, but it could be enough.

Robert

----- Original Message -----
From: "Andreas Rueckert" <a_rueckert@gmx.net>
To: <antlr-interest@yahoogroups.com>
Sent: Tuesday, December 04, 2001 2:43 PM
Subject: Re: [antlr-interest] Antlr grammar to parse Java classfile?


> Hi!
>
> On Die, 04 Dez 2001 Robert wrote:
> > Greetings!
> >
> > First of all, I don't know about the existence of such a (n ANTLR)
grammar.
> >
> > I know pretty much the java .class file format. As it is straighforward,
I
> > have built a package that reads and writes this file format.
>
> What is it called? I studied some packages yesterday, but most of them are
too
> big or have the wrong license for my purpose.
>
> > Based on that experience, I think the main problem of building such a
> > grammar would be to apply a certain rule a specific number of times (for
> > instance you read the number of methods the class file holds and based
on
> > this number, you iterate to read every method). This is the main
> > characteristic of the .class format (as well as of many binary file
format).
>
> I know. I already thought about that problem and I guess it could be
solved
> within the production of such a rule.
>
> > I know that predicates are one of the features ANTLR has. I think this
could
> > be the only salvation... However, if you manage to find an existing
grammar,
> > please let me know.
> >
> > Robert
> >
> > PS.: You may find the exact description of the .class format in the Java
> > Virtual Machine Specification.
>
> I studied the JVM specs before I wrote my posting. That's when I thought
that
> doing the parsing with Antlr should be easier than writing the parser
myself.
>
> Ciao,
> Andreas
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>


_________________________________________________________
Do You Yahoo!?
Get your free @yahoo.com address at http://mail.yahoo.com


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From johnm-antlr at non.net  Tue Dec  4 09:56:38 2001
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
In-Reply-To: <000401c17c49$861403c0$6c64020a@matthewfnb>
References: <E707B992-E827-11D5-96D4-0030653DE0D6@jguru.com>
	<000401c17c49$861403c0$6c64020a@matthewfnb>
Message-ID: <15373.3670.302299.698711@non.non.net>

>>>>> "Matthew" == Matthew Ford <Matthew.Ford@forward.com.au> writes:
[...]
> I read you interesting article on xml and I disagree about it as a reason
> to not use Ant One of the things I like about XML is using XML-Spy which
> makes XML human readable and also checks for valid inputs if you have
> DTD's and schemas Build files can get very messy and using Ant and
> XML-Spy is as good as any I have used.

FYI, Ant v2.x is supposedly going to support multiple input formats, not
just XML.

Also... Alas, XML-Spy is not open source.  Having to buy a $400 license
tool to be able to effectively/efficiently/etc. use Ant is, IMVHO, a very
odd argument.  Of course, if you have to have something like XML-Spy
because you've gotten sucked into using so many things that require such a
tool.... :-)


ObAntlr:  Anyone up for designing and building a good "makefile" language
and a translator from that to e.g., Ant?

Take care,
	John

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mtiller at ford.com  Tue Dec  4 10:43:48 2001
From: mtiller at ford.com (Tiller, Michael (M.M.))
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
Message-ID: <200112041843.fB4Ihv604472@dymwsm12.mailwatch.com>

Although I haven't used it, I have heard good things about "BRAS" as a platform independent system "make-like" system:

http://wsd.iitb.fhg.de/~kir/brashome/

> -----Original Message-----
> From: John D. Mitchell [mailto:johnm-antlr@non.net]
> Sent: Tuesday, December 04, 2001 12:57 PM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] merged Ric's changes into main 
> ANTLR line
> 
> 
> >>>>> "Matthew" == Matthew Ford <Matthew.Ford@forward.com.au> writes:
> [...]
> > I read you interesting article on xml and I disagree about 
> it as a reason
> > to not use Ant One of the things I like about XML is using 
> XML-Spy which
> > makes XML human readable and also checks for valid inputs 
> if you have
> > DTD's and schemas Build files can get very messy and using Ant and
> > XML-Spy is as good as any I have used.
> 
> FYI, Ant v2.x is supposedly going to support multiple input 
> formats, not
> just XML.
> 
> Also... Alas, XML-Spy is not open source.  Having to buy a 
> $400 license
> tool to be able to effectively/efficiently/etc. use Ant is, 
> IMVHO, a very
> odd argument.  Of course, if you have to have something like XML-Spy
> because you've gotten sucked into using so many things that 
> require such a
> tool.... :-)
> 
> 
> ObAntlr:  Anyone up for designing and building a good 
> "makefile" language
> and a translator from that to e.g., Ant?
> 
> Take care,
> 	John
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
http://docs.yahoo.com/info/terms/ 


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Tue Dec  4 12:10:53 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Still get Runtime Error
In-Reply-To: <3C07C2EC.4A98E270@cs.man.ac.uk>
Message-ID: <04BCFDE0-E8F3-11D5-96D4-0030653DE0D6@jguru.com>


On Friday, November 30, 2001, at 09:33  AM, Mark Ryall wrote:

> Hi
>
> There aren't any other jar files! only antlr.jar
>
> Any suggestions? ? ? ? ? ? ? ?
>>> Classpath =
>>> .;C:\jdk1.1.8\lib\classes.zip;C:\antlr-2.7.1\antlr.jar;C:\antlr-2.7.1\antlr

Make that c:\antlr-2.7.1 and you're golden...it will see the class files 
(I assume those are laying around in antlr subdir--if not just run javac 
in antlr and the few subdirs).

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Matthew.Ford at forward.com.au  Tue Dec  4 12:44:49 2001
From: Matthew.Ford at forward.com.au (Matthew Ford)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
References: <E707B992-E827-11D5-96D4-0030653DE0D6@jguru.com><000401c17c49$861403c0$6c64020a@matthewfnb> <15373.3670.302299.698711@non.non.net>
Message-ID: <000001c17d0f$4d81acd0$6c64020a@matthewfnb>

We choose this route for a complex configuration file we needed because it
was easier to insist on the users handling XML then having to write a real
user interface for the configuration settings.  If the user complains XML is
too hard to handle we just point to XML-Spy as the solution (one of perhaps
many).
regards
matthew
PS. the version of XML-Spy I purchased was about A$260 I think. (V3.??)

----- Original Message -----
From: "John D. Mitchell" <johnm-antlr@non.net>
To: <antlr-interest@yahoogroups.com>
Sent: Wednesday, December 05, 2001 4:56 AM
Subject: Re: [antlr-interest] merged Ric's changes into main ANTLR line


> >>>>> "Matthew" == Matthew Ford <Matthew.Ford@forward.com.au> writes:
> [...]
> > I read you interesting article on xml and I disagree about it as a
reason
> > to not use Ant One of the things I like about XML is using XML-Spy which
> > makes XML human readable and also checks for valid inputs if you have
> > DTD's and schemas Build files can get very messy and using Ant and
> > XML-Spy is as good as any I have used.
>
> FYI, Ant v2.x is supposedly going to support multiple input formats, not
> just XML.
>
> Also... Alas, XML-Spy is not open source.  Having to buy a $400 license
> tool to be able to effectively/efficiently/etc. use Ant is, IMVHO, a very
> odd argument.  Of course, if you have to have something like XML-Spy
> because you've gotten sucked into using so many things that require such a
> tool.... :-)
>
>
> ObAntlr:  Anyone up for designing and building a good "makefile" language
> and a translator from that to e.g., Ant?
>
> Take care,
> John
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>
>


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jsrs701 at yahoo.com  Tue Dec  4 15:08:53 2001
From: jsrs701 at yahoo.com (J. Stephen Riley Silber)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <001101c17cb1$731a3ec0$3000000a@robert>
Message-ID: <9ujl25+bjhg@eGroups.com>

--- In antlr-interest@y..., "Robert" <renyedi@y...> wrote:
> Greetings!
> 
> First of all, I don't know about the existence of such a (n ANTLR) 
grammar.

Terry's been trying to get someone to write a .class file parser in 
ANTLR ever since the binary file support came out.  He harassed me 
about it at JavaOne in 1998.  (No really, Terry, I just haven't got 
around to it yet!)

> Based on that experience, I think the main problem of building such 
a
> grammar would be to apply a certain rule a specific number of times 

Yup, when I was designing such a beast in my head, this was indeed 
the problem.  However...

> I know that predicates are one of the features ANTLR has. I think 
this could
> be the only salvation...

Symantic predicates would indeed handle the "match n-times" problem.

The thing is, and sorry Terry--nothing personal, I just don't think 
ANTLR is really the right tool for this kind of thing.

Building the .class file parser in any language with decent byte and 
bit analysis constructs is gonna be easy--tedious, definitely, but 
pretty easy.

The real advantage of building a parser in ANTLR is when you have to 
*change* the parser.  And in this case, for something so binary, I 
think changing the ANTLR parser vs. changing a C parser (for example) 
would end up being a wash.

Of course, I might be way off base here.  :-)

In any event, I still think ANTLR is the best thing going in the 
parser-generator world, by far!

JSRS


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From steven_shaw at adc.com  Tue Dec  4 18:01:26 2001
From: steven_shaw at adc.com (steven_shaw@adc.com)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Antlr grammar to parse Java classfile?
Message-ID: <4A256B19.000B1EAE.00@ssxrgw01.savillemailbr.com>



Why don't you use BCEL (now at jakarta.apache.org)?





a_rueckert@gmx.net on 04/12/2001 19:31:25

Please respond to antlr-interest@yahoogroups.com
                                                              
                                                              
                                                              
 To:      antlr-interest@yahoogroups.com                      
                                                              
 cc:      (bcc: Steven Shaw/Net)                              
                                                              
                                                              
                                                              
 Subject: [antlr-interest] Antlr grammar to parse Java        
          classfile?                                          
                                                              







Hi!

1st of all, I'd like to thank you for your great work. We use Antlr to generate
the parser for Java reverse enginering in the ArgoUML project (
http://www.argouml.org ), and it works great.
Now, I'm interested in RE compiled Java code, and was looking for a Antlr
grammar to parse Java classfiles. So far, I couldn't find anything in the
resources section of the Antlr site and in my mailing list archive.
Is such a grammar available? If not, is there a good reason, why one couldn't
write such a grammar?

TIA,
Andreas



Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/






 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Wed Dec  5 00:11:55 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <9ujl25+bjhg@eGroups.com>
References: <9ujl25+bjhg@eGroups.com>
Message-ID: <01120509300900.00880@hun.bre.de>

Hi!

On Mit, 05 Dez 2001 J. Stephen Riley Silber wrote:

--<snip>--
 
> > I know that predicates are one of the features ANTLR has. I think 
> this could
> > be the only salvation...
> 
> Symantic predicates would indeed handle the "match n-times" problem.

Antlr turns every rule into a method, right? And you could call such a method
in a production? Why not do something like

=======================================
// Parse the method block in the classfile
methods
{ int mCount = 0; }
	:  mCount = methodCount
	     { for( int i=0; i < mCount; i++) { method(); } }
            ;

// Parse one method in the classfile
method
            : ....
=======================================
, where methodCount returns the number of methods in the classfile and
the method rule parses a method in the classfile. Then construct a nice AST, so
the tree grammar could be really clean.

> The thing is, and sorry Terry--nothing personal, I just don't think 
> ANTLR is really the right tool for this kind of thing.

I agree, that the 'call the method rule n times' option is missing somehow. It
would make the creation of binary parsers somewhat easier.
  
> Building the .class file parser in any language with decent byte and 
> bit analysis constructs is gonna be easy--tedious, definitely, but 
> pretty easy.
> 
> The real advantage of building a parser in ANTLR is when you have to 
> *change* the parser.  And in this case, for something so binary, I 
> think changing the ANTLR parser vs. changing a C parser (for example) 
> would end up being a wash.

Well, data abstraction also has the advantage of being more readable, than a
coded parser. And if you have all basic types, like u2, u4 etc. defined, you
could basically retype the classfile definition from the JVM specs to write the
parser.

classfile
	: magic_number
	  version_number
	  constant_pool
	  access_flags
	  this_class
	  super_class
	  ...
    
> Of course, I might be way off base here.  :-)
> 
> In any event, I still think ANTLR is the best thing going in the 
> parser-generator world, by far!

I agree. And I've used lex,yacc,JavaCC etc.

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From howardk at fatdog.com  Wed Dec  5 11:35:52 2001
From: howardk at fatdog.com (howardckatz)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] more lexical determinism
Message-ID: <9ulsuo+ia30@eGroups.com>

I can see why I'm getting a lexical nondeterminism error in the 
following, since the lexer has no way of knowing whether "ABCDE" for 
example is a Word or an Identifier, but I can't see how to resolve
the amibiguity, using a predicate or otherwise. What's the easiest 
way to do this?

Thanks,
Howard


class TestParser extends Parser;

message:	(pair)+;

pair:		Identifier COLON Word;

class TestLexer extends Lexer;

Identifier:	( Letter | '_' ) (Letter | Digit)*;

Word:		(Letter)*;

protected
Letter: 	'a' .. 'z' | 'A' .. 'Z';

protected
Digit:		'0' .. '9';

COLON:		':';

WS :		( ' ' | '\t' | "\r\n" | '\n' | '\r' )
   		{ $setType(Token.SKIP); };



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec  5 11:54:10 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <01120509300900.00880@hun.bre.de>
Message-ID: <D9A47FF1-E9B9-11D5-96D4-0030653DE0D6@jguru.com>

Hi Gang,

Nice discussion of what's best to use and thanks for supporting ANTLR!  
One thing that you might also consider is simply using Java reflection 
to pull apart the class files...if I'm not mistaken we built (at jGuru) 
a search system (no longer with us) for classes/methods and so on.  
There was some really easy built in Java thing that let it happen.  
Janne Leppanen is probably still wandering Europe as a gypsy so I can't 
ask him; oh, maybe I'll dig up that branch of the repository. :)

Anyway, concerning the "match n times" thing.  You're right...it would 
be pretty useful.  What syntax is appropriate and how to do you say 
0...n vs 1..n?  Perhaps, for uniformity, we use my "element modifier 
syntax (e.g., "INT<AST=INTNode>"):

ids4 : ( ID )+<n=4> ;  // weird looking thing

ids4 : ( ID )+<4> ; // a little better ("n" would be the default 
variable)

ids2opt : ( ID )*<2> ; // 0..2 not 1..2

The implementation would be pretty simple I guess.  Just defines a 
counter like the (...)+ does and generates an error if you don't get n; 
counter<=n would need to go in the while loop, but should be easy.

Ter


On Wednesday, December 5, 2001, at 12:11  AM, Andreas Rueckert wrote:

> Hi!
>
> On Mit, 05 Dez 2001 J. Stephen Riley Silber wrote:
>
> --<snip>--
>
>>> I know that predicates are one of the features ANTLR has. I think
>> this could
>>> be the only salvation...
>>
>> Symantic predicates would indeed handle the "match n-times" problem.
>
> Antlr turns every rule into a method, right? And you could call such a 
> method
> in a production? Why not do something like
>
> =======================================
> // Parse the method block in the classfile
> methods
> { int mCount = 0; }
> 	:  mCount = methodCount
> 	     { for( int i=0; i < mCount; i++) { method(); } }
>             ;
>
> // Parse one method in the classfile
> method
>             : ....
> =======================================
> , where methodCount returns the number of methods in the classfile and
> the method rule parses a method in the classfile. Then construct a nice 
> AST, so
> the tree grammar could be really clean.
>
>> The thing is, and sorry Terry--nothing personal, I just don't think
>> ANTLR is really the right tool for this kind of thing.
>
> I agree, that the 'call the method rule n times' option is missing 
> somehow. It
> would make the creation of binary parsers somewhat easier.
>
>> Building the .class file parser in any language with decent byte and
>> bit analysis constructs is gonna be easy--tedious, definitely, but
>> pretty easy.
>>
>> The real advantage of building a parser in ANTLR is when you have to
>> *change* the parser.  And in this case, for something so binary, I
>> think changing the ANTLR parser vs. changing a C parser (for example)
>> would end up being a wash.
>
> Well, data abstraction also has the advantage of being more readable, 
> than a
> coded parser. And if you have all basic types, like u2, u4 etc. 
> defined, you
> could basically retype the classfile definition from the JVM specs to 
> write the
> parser.
>
> classfile
> 	: magic_number
> 	  version_number
> 	  constant_pool
> 	  access_flags
> 	  this_class
> 	  super_class
> 	  ...
>
>> Of course, I might be way off base here.  :-)
>>
>> In any event, I still think ANTLR is the best thing going in the
>> parser-generator world, by far!
>
> I agree. And I've used lex,yacc,JavaCC etc.
>
> Ciao,
> Andreas
>
>
>
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/
>
>
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec  5 11:57:39 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] more lexical determinism
In-Reply-To: <9ulsuo+ia30@eGroups.com>
Message-ID: <56644BC0-E9BA-11D5-96D4-0030653DE0D6@jguru.com>


On Wednesday, December 5, 2001, at 11:35  AM, howardckatz wrote:

> I can see why I'm getting a lexical nondeterminism error in the
> following, since the lexer has no way of knowing whether "ABCDE" for
> example is a Word or an Identifier, but I can't see how to resolve
> the amibiguity, using a predicate or otherwise. What's the easiest
> way to do this?
>
> Thanks,
> Howard
>
>
> class TestParser extends Parser;
>
> message:	(pair)+;
>
> pair:		Identifier COLON Word;
>
> class TestLexer extends Lexer;
>
> Identifier:	( Letter | '_' ) (Letter | Digit)*;
>
> Word:		(Letter)*;

First, this should be (Letter)+ because a token that matches nothing 
makes no sense.

As for distinguishing between the two kinds of words/ids, you could do 
the following in one rule (assume Word unless you see _ or digit):

Word:	( Letter | '_'  {$setType(Identifier);}) (Letter | 
Digit{$setType(Identifier);})*;

don't forget you'll need to define Identifier somehow (explicit 
reference in grammar or in tokens{} section).

Ter

>
> protected
> Letter: 	'a' .. 'z' | 'A' .. 'Z';
>
> protected
> Digit:		'0' .. '9';
>
> COLON:		':';
>
> WS :		( ' ' | '\t' | "\r\n" | '\n' | '\r' )
>    		{ $setType(Token.SKIP); };
>
>
>
>
>
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/
>
>
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec  5 12:16:50 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Re: ANTLR Runtime/SDK jar mixtures and suggestions
In-Reply-To: <3BF26158.2665D2E0@poet.de>
Message-ID: <0428BF5C-E9BD-11D5-96D4-0030653DE0D6@jguru.com>

Howdy folks,

I have to keep the ability for somebody to specify a different error 
handler.  can't i just figure out the dependencies (what's the best tool 
for that recently?) and move support routines around?  Perhaps it's too 
complicated due to the inheritance trees...

Terence

On Wednesday, November 14, 2001, at 04:19  AM, Christian Ernst wrote:

> Hy !
>
> tom@psy.unsw.edu.au wrote:
>
>> Ideally not, this method allows programmatic collection of errors
>> (plus it's a good idea in general because it saves you having to
>> replace every call to System.err when you realize you might want to
>> support half decent error logging (such as JDK1.4 logging based)).
>> The addin for JBuilder (I think it is) uses it and the upcoming
>> module for Netbeans will also use it. Redirecting error stream isn't
>> really appropriate either, cause then you can't seperate proper Antlr
>> errors from user prints to System.err. It can't really be moved into
>> the generated files either, has to remain in a seperate class so it
>> can be overridden. Could have a seperate ErrorHandler class or
>> something, no problems there. Or, you could have methods in the
>> generated grammar that called the ErrorHandler by default but could
>> be overridden in the grammar.
>
> Yes i agree a central Logging facility would be better for the ANTLR 
> Tool and
>
> for IDE Intergration like JBuilder etc.
> But for a small Runtime and under the Aspect that there is only one 
> runtime
> class (ASTFactory)
> which use this Logging only for a warning it would be nice to get rid 
> of this
> dependicy
> Perhaps it might be even better to change this to throwing a
> new RuntimeException like ASTGenerationException !?
>
> mfg
> Christian
>
>
>
>
>
>
>
>
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/
>
>
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Wed Dec  5 12:12:21 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <D9A47FF1-E9B9-11D5-96D4-0030653DE0D6@jguru.com>
References: <D9A47FF1-E9B9-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <01120521220003.00771@krsn-d933642b>

Hi!

On Mit, 05 Dez 2001 Terence Parr wrote:
> Hi Gang,
> 
> Nice discussion of what's best to use and thanks for supporting ANTLR!  
> One thing that you might also consider is simply using Java reflection 
> to pull apart the class files...if I'm not mistaken we built (at jGuru) 
> a search system (no longer with us) for classes/methods and so on.  
> There was some really easy built in Java thing that let it happen.  
> Janne Leppanen is probably still wandering Europe as a gypsy so I can't 
> ask him; oh, maybe I'll dig up that branch of the repository. :)

Yeah, we had this discussion on reflection, too. But I still think, that the
grammar is more readable. You have to consider, that we already have a Java
grammar with a lot of additional code, that do the modelling. A nice Java tree
parser grammar (which wouldn't contain any of the counter stuff, just all the
attributes/methods as nodes) would allow us to reuse most the code. My only
concern is performance at the moment...

> Anyway, concerning the "match n times" thing.  You're right...it would 
> be pretty useful.  What syntax is appropriate and how to do you say 
> 0...n vs 1..n?  Perhaps, for uniformity, we use my "element modifier 
> syntax (e.g., "INT<AST=INTNode>"):
> 
> ids4 : ( ID )+<n=4> ;  // weird looking thing
> 
> ids4 : ( ID )+<4> ; // a little better ("n" would be the default 
> variable)
> 
> ids2opt : ( ID )*<2> ; // 0..2 not 1..2

But in all these cases, you used constants. Many fileformats come a counter,
that defines, how long the following data block is. So you have to parse the
counter 1st, and then match the next rule <counter> times.
   
> The implementation would be pretty simple I guess.  Just defines a 
> counter like the (...)+ does and generates an error if you don't get n; 
> counter<=n would need to go in the while loop, but should be easy.

Yup! The implementation should be trivial. But since we don't have that feature
yet, I'm trying to come up with something, that works with the current Antlr.
I thought about the semantic predicate again and that might work, too. Like
=======================================
rule
{int counter=0}
	: counter=blockCount 
	  ( {counter>0}? blockEntry {counter--;} )*
	;
=======================================
Do you think it would work? So that block entry is matched <counter> times?

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec  5 12:22:02 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
In-Reply-To: <000401c17c49$861403c0$6c64020a@matthewfnb>
Message-ID: <BE1378C0-E9BD-11D5-96D4-0030653DE0D6@jguru.com>

On Monday, December 3, 2001, at 02:26  PM, Matthew Ford wrote:
> I read you interesting article on xml and I disagree about it as a 
> reason to
> not use Ant
> One of the things I like about XML is using XML-Spy which makes XML 
> human
> readable and also checks for valid inputs if you have DTD's and schemas
> Build files can get very messy and using Ant and XML-Spy is as good as 
> any I
> have used.

Well, most people don't have nor will buy a tool to enter config files 
I'd wager (plus I think a "real" language would still be easier).  I 
argue that, yes, we can all read / write XML, but as a language "hammer" 
every problem is a human-interface language "nail". ;)  As a person 
hoping to promote good language design/implementation, I have to put my 
money where my mouth is.  For example, since amazon got the one-click 
patent (don't get me started), I have not bought a single book there 
(though I do go there to waste their resources and then buy a book at 
barnesandnoble <snicker>).

Sorry Matthew, I know I'm being a "prima donna" but... ;)

Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec  5 12:26:17 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:34 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <01120521220003.00771@krsn-d933642b>
Message-ID: <563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>

On Wednesday, December 5, 2001, at 12:12  PM, Andreas Rueckert wrote:
>
>> Anyway, concerning the "match n times" thing.  You're right...it would
>> be pretty useful.  What syntax is appropriate and how to do you say
>> 0...n vs 1..n?  Perhaps, for uniformity, we use my "element modifier
>> syntax (e.g., "INT<AST=INTNode>"):
>>
>> ids4 : ( ID )+<n=4> ;  // weird looking thing
>>
>> ids4 : ( ID )+<4> ; // a little better ("n" would be the default
>> variable)
>>
>> ids2opt : ( ID )*<2> ; // 0..2 not 1..2
>
> But in all these cases, you used constants. Many fileformats come a 
> counter,
> that defines, how long the following data block is. So you have to 
> parse the
> counter 1st, and then match the next rule <counter> times.

Oh, right.  Yeah not a problem at all except for syntax.  Should it 
assume non-int implies variable defined in C++, Sather, or Java 
(whatever your output is)?  I'm partial to keeping all non-grammatical 
stuff in {...}.  Perhaps this then:

( ID )+{n=blockCount;}

or something?

>> The implementation would be pretty simple I guess.  Just defines a
>> counter like the (...)+ does and generates an error if you don't get n;
>> counter<=n would need to go in the while loop, but should be easy.
>
> Yup! The implementation should be trivial. But since we don't have that 
> feature
> yet, I'm trying to come up with something, that works with the current 
> Antlr.
> I thought about the semantic predicate again and that might work, too. 
> Like
> =======================================
> rule
> {int counter=0}
> 	: counter=blockCount
> 	  ( {counter>0}? blockEntry {counter--;} )*
> 	;
> =======================================
> Do you think it would work? So that block entry is matched <counter> 
> times?

Let's see.  Well, it's close, but it wouldn't give you an error if you 
have less than blockCount.  You need that "did I get enough" check at 
the end of the loop.  Could do with a simple "validating" sem pred after 
loop.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From howardk at fatdog.com  Wed Dec  5 12:26:55 2001
From: howardk at fatdog.com (howardckatz)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] more lexical determinism
Message-ID: <9ulvuf+ogq6@eGroups.com>

I can see why I'm getting a lexical nondeterminism error in the 
following, since the lexer has no way of knowing whether "ABCDE" for 
example is a Word or an Identifier, but I can't see how to resolve
the amibiguity, using a predicate or otherwise. What's the easiest 
way to do this?

Thanks,
Howard


class TestParser extends Parser;

message:	(pair)+;

pair:		Identifier COLON Word;

class TestLexer extends Lexer;

Identifier:	( Letter | '_' ) (Letter | Digit)*;

Word:		(Letter)*;

protected
Letter: 	'a' .. 'z' | 'A' .. 'Z';

protected
Digit:		'0' .. '9';

COLON:		':';

WS :		( ' ' | '\t' | "\r\n" | '\n' | '\r' )
   		{ $setType(Token.SKIP); };



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From howardk at fatdog.com  Wed Dec  5 12:30:51 2001
From: howardk at fatdog.com (howardckatz)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: more lexical determinism
In-Reply-To: <56644BC0-E9BA-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <9um05r+nllr@eGroups.com>

Thanks, Ter. That's great. I'll give that a shot.

Howard


> > I can see why I'm getting a lexical nondeterminism error in the
> > following, since the lexer has no way of knowing whether "ABCDE" 
for
> > example is a Word or an Identifier, but I can't see how to resolve
> > the amibiguity, using a predicate or otherwise. What's the easiest
> > way to do this?
> >
> > Thanks,
> > Howard
> >
> >
> > class TestParser extends Parser;
> >
> > message:	(pair)+;
> >
> > pair:		Identifier COLON Word;
> >
> > class TestLexer extends Lexer;
> >
> > Identifier:	( Letter | '_' ) (Letter | Digit)*;
> >
> > Word:		(Letter)*;
> 
> First, this should be (Letter)+ because a token that matches nothing 
> makes no sense.
> 
> As for distinguishing between the two kinds of words/ids, you could 
do 
> the following in one rule (assume Word unless you see _ or digit):
> 
> Word:	( Letter | '_'  {$setType(Identifier);}) (Letter | 
> Digit{$setType(Identifier);})*;
> 
> don't forget you'll need to define Identifier somehow (explicit 
> reference in grammar or in tokens{} section).
> 
> Ter
> 
> >
> > protected
> > Letter: 	'a' .. 'z' | 'A' .. 'Z';
> >
> > protected
> > Digit:		'0' .. '9';
> >
> > COLON:		':';
> >
> > WS :		( ' ' | '\t' | "\r\n" | '\n' | '\r' )
> >    		{ $setType(Token.SKIP); };
> >
> >
> >
> >
> >
> > Your use of Yahoo! Groups is subject to 
> > http://docs.yahoo.com/info/terms/
> >
> >
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jsrs701 at yahoo.com  Wed Dec  5 13:25:54 2001
From: jsrs701 at yahoo.com (jsrs701)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <D9A47FF1-E9B9-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <9um3d2+ift7@eGroups.com>

--- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:
> Nice discussion of what's best to use and thanks for supporting 
ANTLR!  

<obsequiousness>
Ye flipping gods, man, don't you just wake up in the morning full of 
pride at the amazing critter you have invented?  I wouldn't be able 
to get through doorways my head would be so big!  You deserve mucho 
kudos.
</obsequiousness>

> One thing that you might also consider is simply using Java 
reflection 
> to pull apart the class files...

Er, um, duh...  :-)  Never would have thought of that.  When I think 
about problems involving bit scanning, I automatically think in terms 
of C or assembly.

> Anyway, concerning the "match n times" thing.  You're right...it 
would 
> be pretty useful.  What syntax is appropriate and how to do you say 
> 0...n vs 1..n? 

I'd vote for Perl's RE syntax...

{n}    Match exactly n times
{n,}   Match at least n times
{n,m}  Match at least n, at most m times

...but I know the curly braces are gonna wreak havoc with the 
existing ANTLR syntax.

> Perhaps, for uniformity, we use my "element modifier 
> syntax (e.g., "INT<AST=INTNode>"):

Um, that just doesn't look quite right, but since I don't have a 
better solution, I won't press the point.  :-)

JSRS



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jm_lynn at yahoo.com  Wed Dec  5 13:49:37 2001
From: jm_lynn at yahoo.com (jm_lynn)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Link error while making cpp distribution Calc sample
Message-ID: <9um4ph+pg0j@eGroups.com>

Help!  I compiled and linked antlr.dll successfully but failed while 
linking the cpp sample calc.  The VC++ V6.0 linker failed to resolve 
the antlr classes.  For example:

main.obj : error LNK2001: unresolved external symbol "public: virtual 
__thiscall
 antlr::CharScanner::~CharScanner(void)" (??
1CharScanner@antlr@@UAE@XZ)

Will someone out there willing to show me a trick or two to get me 
started on Antlr?


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From howardk at fatdog.com  Wed Dec  5 14:24:47 2001
From: howardk at fatdog.com (howardckatz)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: more lexical determinism
In-Reply-To: <56644BC0-E9BA-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <9um6rf+da7m@eGroups.com>

--- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:

 ...
 
> As for distinguishing between the two kinds of words/ids, you could 
> do the following in one rule (assume Word unless you see _ or 
> digit):
> 
> Word:	( Letter | '_'  {$setType(Identifier);}) (Letter | 
> Digit{$setType(Identifier);})*;

That didn't quite do it, I think, Doesn't the above say that anything 
starting with a Letter is a Word? But that's not what I want, since 
valid Identifiers can start with Letters too. The following should be 
legal input,

     id : word

but throws an "Unexpected token: id" error. I would guess the parser 
sees this as "Word : Word" and accordingly chokes. Or am I 
misunderstanding something?

Howard


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Wed Dec  5 14:53:56 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
Message-ID: <170826586F3BD511910D0200C110AAA801C580C3@memail03.bco-home.com>


> rule
> {int counter=0}
> 	: counter=blockCount 
> 	  ( {counter>0}? blockEntry {counter--;} )*
> 	;
> =======================================
> Do you think it would work? So that block entry is matched 
> <counter> times?

That generates this code:

		int counter=0
		
		try {      // for error handling
			counter=blockCount();
			{
			_loop3:
			do {
				if (((LA(1)==LITERAL_A))&&(counter>0)) {
					blockEntry();
					counter--;
				}
				else {
					break _loop3;
				}
				
			} while (true);
			}
		}
		...

Looks like it will work to me.

Monty

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Wed Dec  5 14:54:08 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: ANTLR Runtime/SDK jar mixtures and sugge
	stions
Message-ID: <170826586F3BD511910D0200C110AAA801C580C4@memail03.bco-home.com>

> 
> I have to keep the ability for somebody to specify a different error 
> handler.  can't i just figure out the dependencies (what's 
> the best tool 
> for that recently?) and move support routines around?  
> Perhaps it's too 
> complicated due to the inheritance trees...

A good refactoring program should do the trick.  The new one from IBM might
work--http://www.eclipse.org.  If you are an Emacs fan there is
http://xref-tech.com/speller/ which has a 1 month demo.  Or why not hit
Instantiations up for a demo of JFactor, seeing as they used antlr in
it...if you still have VisualAge around or have JBuilder.  Sorry I can't
comment on which works best since I haven't used any extensively.

Monty

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec  5 14:59:39 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: ANTLR Runtime/SDK jar mixtures and sugge stions
In-Reply-To: <170826586F3BD511910D0200C110AAA801C580C4@memail03.bco-home.com>
Message-ID: <C2B83BF8-E9D3-11D5-96D4-0030653DE0D6@jguru.com>


On Wednesday, December 5, 2001, at 02:54  PM, mzukowski@bco.com wrote:

>>
>> I have to keep the ability for somebody to specify a different error
>> handler.  can't i just figure out the dependencies (what's
>> the best tool
>> for that recently?) and move support routines around?
>> Perhaps it's too
>> complicated due to the inheritance trees...
>
> A good refactoring program should do the trick.  The new one from IBM 
> might
> work--http://www.eclipse.org.  If you are an Emacs fan there is
> http://xref-tech.com/speller/ which has a 1 month demo.  Or why not hit
> Instantiations up for a demo of JFactor, seeing as they used antlr in
> it...if you still have VisualAge around or have JBuilder.  Sorry I can't
> comment on which works best since I haven't used any extensively.

Hi Monty.  I use Intellij's IDEA now and it has very very nice 
refactoring stuff...what I meant was a tool that told me which 
dependencies to refactor ;)

Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From sinan.karasu at boeing.com  Wed Dec  5 15:54:42 2001
From: sinan.karasu at boeing.com (Sinan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: more lexical determinism
References: <9um6rf+da7m@eGroups.com>
Message-ID: <3C0EB3C2.7DC891C9@boeing.com>

howardckatz wrote:
> 
> --- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:
> 
>  ...
> 
> > As for distinguishing between the two kinds of words/ids, you could
> > do the following in one rule (assume Word unless you see _ or
> > digit):
> >
> > Word: ( Letter | '_'  {$setType(Identifier);}) (Letter |
> > Digit{$setType(Identifier);})*;
> 
> That didn't quite do it, I think, Doesn't the above say that anything
> starting with a Letter is a Word? But that's not what I want, since
> valid Identifiers can start with Letters too. The following should be
> legal input,
> 
>      id : word
> 
> but throws an "Unexpected token: id" error. I would guess the parser
> sees this as "Word : Word" and accordingly chokes. Or am I
> misunderstanding something?
> 
> Howard

There is no way lexer can distinguish between word and id, since they
have the 
same production ( or id is a subset of word....)

If you want to make the distinction in lexer, then you have to do
something like

AnId : (Id Colon Word)=> Id ;


But then you cant haver an Id without a Colon following.

One expensive way to do it is to pull everything into the Parser except
characters , then

rule1 : id Colon word ;

id:  Character+ ;

word : Character+ ; 

or whatever....

But now you will get a zillion non-determinisms , which you fix by

rules:
	(rule1)=> rule1
	| (rule2)=> rule2
	| etc....
	;
	
 This tends to be very expensive, but almost unavoidable in cases like
Fortran
where whitespace has no meaning.

 Don't forget that the lexer rules(productions/methods) are not called
by parser.
Actually , if it is not protected, then they are call from nextToken in
some magical order
and the first maximum match will win....

 So you'll either get all either all words or all ids ( except when "_"
is present)....

Sinan

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From johnm-antlr at non.net  Wed Dec  5 16:01:27 2001
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>
References: <01120521220003.00771@krsn-d933642b>
	<563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <15374.46423.926556.785543@non.non.net>

[...]
> Let's see.  Well, it's close, but it wouldn't give you an error if you
> have less than blockCount.  You need that "did I get enough" check at the
> end of the loop.  Could do with a simple "validating" sem pred after
> loop.

Hmm... How is that going to be safe in the face of hoisting?

Thanks,
	John

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Matthew.Ford at forward.com.au  Wed Dec  5 14:43:36 2001
From: Matthew.Ford at forward.com.au (Matthew Ford)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
References: <BE1378C0-E9BD-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <005201c17df3$96fecb10$6c64020a@matthewfnb>

Hi I like good user interfaces as much as the next guy, but this config file
was for system admins. and they can be expected to buy such a tool or be
macho and do it by hand.
matthew
----- Original Message -----
From: "Terence Parr" <parrt@jguru.com>
To: <antlr-interest@yahoogroups.com>
Sent: Thursday, December 06, 2001 7:22 AM
Subject: Re: [antlr-interest] merged Ric's changes into main ANTLR line


> On Monday, December 3, 2001, at 02:26  PM, Matthew Ford wrote:
> > I read you interesting article on xml and I disagree about it as a
> > reason to
> > not use Ant
> > One of the things I like about XML is using XML-Spy which makes XML
> > human
> > readable and also checks for valid inputs if you have DTD's and schemas
> > Build files can get very messy and using Ant and XML-Spy is as good as
> > any I
> > have used.
>
> Well, most people don't have nor will buy a tool to enter config files
> I'd wager (plus I think a "real" language would still be easier).  I
> argue that, yes, we can all read / write XML, but as a language "hammer"
> every problem is a human-interface language "nail". ;)  As a person
> hoping to promote good language design/implementation, I have to put my
> money where my mouth is.  For example, since amazon got the one-click
> patent (don't get me started), I have not bought a single book there
> (though I do go there to waste their resources and then buy a book at
> barnesandnoble <snicker>).
>
> Sorry Matthew, I know I'm being a "prima donna" but... ;)
>
> Ter
>
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>
>


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From howardk at fatdog.com  Wed Dec  5 21:29:51 2001
From: howardk at fatdog.com (howardckatz)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: more lexical determinism
In-Reply-To: <3C0EB3C2.7DC891C9@boeing.com>
Message-ID: <9umvof+nbnr@eGroups.com>

This has been an interesting exercise. I can see that this particular 
problem -- where two tokens consist of closely overlapping character 
sets -- is one that antlr doesn't handle that well. I can see one 
other approach that might work -- sticking some string-parsing Java 
code of my own either into the parser grammar or maybe in a
downstream TokenStream. Time to play I guess ...

Thanks for your help,
Howard

--- In antlr-interest@y..., Sinan <sinan.karasu@b...> wrote:
> howardckatz wrote:
> > 
> > --- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:
> > 
> >  ...
> > 
> > > As for distinguishing between the two kinds of words/ids, you 
could
> > > do the following in one rule (assume Word unless you see _ or
> > > digit):
> > >
> > > Word: ( Letter | '_'  {$setType(Identifier);}) (Letter |
> > > Digit{$setType(Identifier);})*;
> > 
> > That didn't quite do it, I think, Doesn't the above say that 
anything
> > starting with a Letter is a Word? But that's not what I want, 
since
> > valid Identifiers can start with Letters too. The following
should 
be
> > legal input,
> > 
> >      id : word
> > 
> > but throws an "Unexpected token: id" error. I would guess the 
parser
> > sees this as "Word : Word" and accordingly chokes. Or am I
> > misunderstanding something?
> > 
> > Howard
> 
> There is no way lexer can distinguish between word and id, since 
they
> have the 
> same production ( or id is a subset of word....)
> 
> If you want to make the distinction in lexer, then you have to do
> something like
> 
> AnId : (Id Colon Word)=> Id ;
> 
> 
> But then you cant haver an Id without a Colon following.
> 
> One expensive way to do it is to pull everything into the Parser 
except
> characters , then
> 
> rule1 : id Colon word ;
> 
> id:  Character+ ;
> 
> word : Character+ ; 
> 
> or whatever....
> 
> But now you will get a zillion non-determinisms , which you fix by
> 
> rules:
> 	(rule1)=> rule1
> 	| (rule2)=> rule2
> 	| etc....
> 	;
> 	
>  This tends to be very expensive, but almost unavoidable in cases 
like
> Fortran
> where whitespace has no meaning.
> 
>  Don't forget that the lexer rules(productions/methods) are not 
called
> by parser.
> Actually , if it is not protected, then they are call from
nextToken 
in
> some magical order
> and the first maximum match will win....
> 
>  So you'll either get all either all words or all ids ( except when 
"_"
> is present)....
> 
> Sinan


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Thu Dec  6 01:09:27 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>
References: <563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <01120610150501.00769@krsn-d933645f>

Hi!

On Mit, 05 Dez 2001 Terence Parr wrote:

--<snip>--

> > But in all these cases, you used constants. Many fileformats come a 
> > counter,
> > that defines, how long the following data block is. So you have to 
> > parse the
> > counter 1st, and then match the next rule <counter> times.
> 
> Oh, right.  Yeah not a problem at all except for syntax.  Should it 
> assume non-int implies variable defined in C++, Sather, or Java 
> (whatever your output is)?  I'm partial to keeping all non-grammatical 
> stuff in {...}.  Perhaps this then:
> 
> ( ID )+{n=blockCount;}
> 
> or something?

Since blockCount is a rule, I wouldn't really call it 'non-grammatical', but
other than that, it looks fine to me. But I'm really not a Antlr expert or so.
So I don't want to give you any recommendations. You're the guru in the house.

--<snip>--
> > =======================================
> > rule
> > {int counter=0}
> > 	: counter=blockCount
> > 	  ( {counter>0}? blockEntry {counter--;} )*
> > 	;
> > =======================================
> > Do you think it would work? So that block entry is matched <counter> 
> > times?
> 
> Let's see.  Well, it's close, but it wouldn't give you an error if you 
> have less than blockCount.  You need that "did I get enough" check at 
> the end of the loop.  Could do with a simple "validating" sem pred after 
> loop.

So I should add a { if{counter>0) {throw new RecognitionException(...);} }, or
so? Since I'm only reading bytes, the only case, where we 'didn't get enough',
is simply EOF.

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Thu Dec  6 01:44:24 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <9um3d2+ift7@eGroups.com>; from jsrs701@yahoo.com on Wed, Dec 05, 2001 at 09:25:54PM -0000
References: <D9A47FF1-E9B9-11D5-96D4-0030653DE0D6@jguru.com> <9um3d2+ift7@eGroups.com>
Message-ID: <20011206104423.I16323@cs.utwente.nl>

Hi,

On Wed, Dec 05, 2001 at 09:25:54PM -0000, jsrs701 wrote:
TJP> Anyway, concerning the "match n times" thing.  You're right...it would 
TJP> be pretty useful.  What syntax is appropriate and how to do you say 
TJP> 0...n vs 1..n? 
> 
> I'd vote for Perl's RE syntax...
> 
> {n}    Match exactly n times
> {n,}   Match at least n times
> {n,m}  Match at least n, at most m times
> 
> ...but I know the curly braces are gonna wreak havoc with the 
> existing ANTLR syntax.
> 
TJP> Perhaps, for uniformity, we use my "element modifier 
TJP> syntax (e.g., "INT<AST=INTNode>"):

I'd go for the braces anytime in this case. Why break with 'normal' regular
expression syntax. Quite a lot of tools use this syntax. On the other
hand... using <> for this is ugly IMHO it applies a completely unrelated
antlr construct to another thing.

If the braces give too much trouble you might even think using brackets 

( ... )*[p1,p2]  or...

( ... )[p1,p2]*

Kindoff like a 'parameterized closure'. This is I think most consistent
with antlr's syntax currently.

If we're talking grammar extensions again we might consider this one again

( rule1 ... ruleN ) || ( TOKEN ) which should produce or

rule1 ... ruleN or...
rule1 .. ruleN TOKEN rule1 .. ruleN TOKEN rule1 .. ruleN

It is equivalent to ( rule1 .. ruleN ) ( TOKEN rule1 ... ruleN )* but if
you have action code somewhere in it you only have to maintain one piece in
stead of two pieces who are nearly identical. Cocktail's ell had this
syntax and I really miss it in antlr.

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
Wit is cultured insolence. --- Aristotle

From klaren at cs.utwente.nl  Thu Dec  6 01:46:31 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <170826586F3BD511910D0200C110AAA801C580C3@memail03.bco-home.com>; from mzukowski@bco.com on Wed, Dec 05, 2001 at 02:53:56PM -0800
References: <170826586F3BD511910D0200C110AAA801C580C3@memail03.bco-home.com>
Message-ID: <20011206104631.J16323@cs.utwente.nl>

Hi,

On Wed, Dec 05, 2001 at 02:53:56PM -0800, mzukowski@bco.com wrote:
> > rule
> > {int counter=0}
> > 	: counter=blockCount 
> > 	  ( {counter>0}? blockEntry {counter--;} )*
> > 	;
> > =======================================
> > Do you think it would work? So that block entry is matched 
> > <counter> times?
> 
> That generates this code:
> 
> 		int counter=0
> 		
> 		try {      // for error handling
> 			counter=blockCount();
> 			{
> 			_loop3:
> 			do {
> 				if (((LA(1)==LITERAL_A))&&(counter>0)) {
> 					blockEntry();
> 					counter--;
> 				}
> 				else {
> 					break _loop3;
> 				}
> 				
> 			} while (true);
> 			}
> 		}
> 		...
> 
> Looks like it will work to me.

Not 100% sure so of the top of my head... but if the rule is invoked
somewhere in the path of a syntactic predicate will it work as well? E.g.
if guessing > 0 ?

I have some vague recollection of these things biting in some cases.

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
Wit is cultured insolence. --- Aristotle

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Thu Dec  6 01:55:53 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Link error while making cpp distribution Calc sample
In-Reply-To: <9um4ph+pg0j@eGroups.com>; from jm_lynn@yahoo.com on Wed, Dec 05, 2001 at 09:49:37PM -0000
References: <9um4ph+pg0j@eGroups.com>
Message-ID: <20011206105553.K16323@cs.utwente.nl>

Hi,

On Wed, Dec 05, 2001 at 09:49:37PM -0000, jm_lynn wrote:
> Help!  I compiled and linked antlr.dll successfully but failed while 
> linking the cpp sample calc.  The VC++ V6.0 linker failed to resolve 
> the antlr classes.  For example:
> 
> main.obj : error LNK2001: unresolved external symbol "public: virtual 
> __thiscall
>  antlr::CharScanner::~CharScanner(void)" (??
> 1CharScanner@antlr@@UAE@XZ)
> 
> Will someone out there willing to show me a trick or two to get me 
> started on Antlr?

Don't use a dll ? I toyed a bit around with MSVC6 and a dll build this
weekend for the 2.7.2 release but I get the feeling MSVC6 is horribly
broken, I hope that somewhere in the 2.7.2aX series someone more
knowledgeable about MSVC6 can fix this.

Back to your problem I had a report a while back that you needed to link
the CharScanner.cpp into your project to get this to work.

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 Time what is time - I wish I knew how to tell You why - It hurts to know -
          Aren't we machines - Time what is time - Unlock the door
               - And see the truth - Then time is time again
                From: 'Time what is Time' by Blind Guardian


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From tomdz at cs.tu-berlin.de  Thu Dec  6 03:15:05 2001
From: tomdz at cs.tu-berlin.de (Thomas Dudziak)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: ANTLR Runtime/SDK jar mixtures and sugge
 stions
Message-ID: <Pine.SOL.4.10.10112061205150.16053-100000@reticuli>

Hi,

interestingly, I'm just doing some major research on the field of
refactoring, and we just evaluated most available refactoring tools. It
seems as if some of them are using ANTLR, by the way.
>>From what we tested (primarily quality of the refactorings) most of the
tools have minor or major flaws which would currently keep me from using
them. The best tool so far seem to be Eclipse (http://www.eclipse.org)
which handles the syntactical issues of Java (anonymous classes anyone ?)
best, and seems be to a nice IDE as well.

Ciao, Tom



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Thu Dec  6 05:05:50 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>
References: <563602E0-E9BE-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <01120614144900.00767@hun.bre.de>

Hi!

On Mit, 05 Dez 2001 Terence Parr wrote:

--<snip>--

> Let's see.  Well, it's close, but it wouldn't give you an error if you 
> have less than blockCount.  You need that "did I get enough" check at 
> the end of the loop.  Could do with a simple "validating" sem pred after 
> loop.

Thanks a lot for your help. I'd also like to thank Monty for his posting of the
sources. When I saw them, I realized that the counter decrement could
(hopefully) also be done in the predicate itself. When I add your validating
predicate, my current rule to read the constant pool of a classfile looks like:
=======================================
// The constant pool.
constant_pool
{ int poolSize=0; }
	: poolSize=constant_pool_count                   // Parse the size of the constant pool + 1
	  ( {--poolSize > 0}? cp_info )* {poolSize==0}?  // Parse (poolSize-1) cp_info structures.
	;
=======================================

It should hopefully read counter/poolSize-1(!) cp_info structures, if the pred
decrement works as I expect. And I think it really doesn't look like a nasty
hack, or so.

Thanks to all those, who commented and helped me.

BTW: You asked for my target language, but I was in a hurry and overlooked your
question at that time (sorry!). I'm working on a ArgoUML module and Argo is
written in Java, so I'm interested in a Java parser for classfiles. 

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Thu Dec  6 07:02:10 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
Message-ID: <170826586F3BD511910D0200C110AAA801C580C5@memail03.bco-home.com>

You are right, semantic predicates are ignored if you are guessing.  That's
a gotcha that could be taken care of only by extending antlr or extremely
ugly and unmaintainable syntactic predicates.

Hopefully for the java classfile format there should be no guessing...but
this isn't a general solution to the "match n times" problem.

Monty

> -----Original Message-----
> From: Ric Klaren [mailto:klaren@cs.utwente.nl]
> Sent: Thursday, December 06, 2001 1:47 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] Re: Antlr grammar to parse Java 
> classfile?
> 
> 
> Hi,
> 
> On Wed, Dec 05, 2001 at 02:53:56PM -0800, mzukowski@bco.com wrote:
> > > rule
> > > {int counter=0}
> > > 	: counter=blockCount 
> > > 	  ( {counter>0}? blockEntry {counter--;} )*
> > > 	;
> > > =======================================
> > > Do you think it would work? So that block entry is matched 
> > > <counter> times?
> > 
> > That generates this code:
> > 
> > 		int counter=0
> > 		
> > 		try {      // for error handling
> > 			counter=blockCount();
> > 			{
> > 			_loop3:
> > 			do {
> > 				if (((LA(1)==LITERAL_A))&&(counter>0)) {
> > 					blockEntry();
> > 					counter--;
> > 				}
> > 				else {
> > 					break _loop3;
> > 				}
> > 				
> > 			} while (true);
> > 			}
> > 		}
> > 		...
> > 
> > Looks like it will work to me.
> 
> Not 100% sure so of the top of my head... but if the rule is invoked
> somewhere in the path of a syntactic predicate will it work 
> as well? E.g.
> if guessing > 0 ?
> 
> I have some vague recollection of these things biting in some cases.

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Thu Dec  6 07:32:35 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <170826586F3BD511910D0200C110AAA801C580C5@memail03.bco-home.com>; from mzukowski@bco.com on Thu, Dec 06, 2001 at 07:02:10AM -0800
References: <170826586F3BD511910D0200C110AAA801C580C5@memail03.bco-home.com>
Message-ID: <20011206163234.O16323@cs.utwente.nl>

Hi,

On Thu, Dec 06, 2001 at 07:02:10AM -0800, mzukowski@bco.com wrote:
> You are right, semantic predicates are ignored if you are guessing.  That's
> a gotcha that could be taken care of only by extending antlr or extremely
> ugly and unmaintainable syntactic predicates.
> 
> Hopefully for the java classfile format there should be no guessing...but
> this isn't a general solution to the "match n times" problem.

You might work around it with init actions (with devel versions and 2.7.2).
But it's ugly-ish. Init actions inside closures are now inside the loop
(before any lookahead tests etc.) it's even possible to break out of the
closure there (but this is not a documented feature, and I think it should
not be documented, better to implement it inside antlr)

Cheers,

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
 'And this 'rebooting' business? Give it a good kicking, do you?' 'Oh, no,
  of course, we ... that is ... well, yes, in fact,' said Ponder. 'Adrian
    goes round the back and ... er ... prods it with his foot. But in a
     technical way,' he added. --- From: Hogfather by Terry Pratchett.


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From sinan.karasu at boeing.com  Thu Dec  6 10:04:01 2001
From: sinan.karasu at boeing.com (Sinan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: more lexical determinism
References: <9umvof+nbnr@eGroups.com>
Message-ID: <3C0FB311.89DAD48D@boeing.com>

howardckatz wrote:
> 
> This has been an interesting exercise. I can see that this particular
> problem -- where two tokens consist of closely overlapping character
> sets -- is one that antlr doesn't handle that well. I can see one
> other approach that might work -- sticking some string-parsing Java
> code of my own either into the parser grammar or maybe in a
> downstream TokenStream. Time to play I guess ...
> 

yacc/lex won't either.

what you should do really is 
assume a could have '_' and b can't.

 then you really have something like

 rule : (a | b) COLON b;

so in lexer you say

B : ( LETTER | DIGIT | '_' { set type to A})+;


in parser

rule: (A | B) COLON B;

or pushing into other rules

rule : id COLON word ;

id : A | B;
word : B;

Sinan

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From sinan.karasu at boeing.com  Thu Dec  6 10:27:15 2001
From: sinan.karasu at boeing.com (Sinan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
References: <170826586F3BD511910D0200C110AAA801C580C3@memail03.bco-home.com> <20011206104631.J16323@cs.utwente.nl>
Message-ID: <3C0FB883.F9CF0BF5@boeing.com>

Ric Klaren wrote:
> 
[...]
> 
> Not 100% sure so of the top of my head... but if the rule is invoked
> somewhere in the path of a syntactic predicate will it work as well? E.g.
> if guessing > 0 ?
> 
> I have some vague recollection of these things biting in some cases.
> 
> Ric

 
I use the following for parsing hollerith fields in Fortran.

(Quote: In Mathematics , you know you have arrived when you name is not
 capitalized....)

One caveat in the following when a "character" is returned from the
lexer it also
returns all the following white space.

In other words

1 2 3    f or ma t ( 1 2 hH ello there

will return:

"1 "
"2 "
"3    "
"f "
"o"
"r "

etc....

which allows me to write rules like

format_KW: F O R M A T ;

I use extensive lookahead, since in Fortran you don't know that you got
it 
until you got it. 


in other words

       real format(300)
       integer J(10)
       integer ca llmysub(10)
       integer X5H=1
7      format(X5H)=J(2)

123    call mysub(3)=format(1)
       write(6,7)


      are valid statements....

      loverly language...

      but It works....

so here is the code....




hollerith_constant!
	//options {defaultErrorHandler=false;}
	{String scount="0";String hol="";}
	:
	scount=int_const_int[scount] h:H
	(
	
(counted_hollerith_field[Integer.parseInt(scount)-(h.getText().length()-1)])=>
	
hol=counted_hollerith_field[Integer.parseInt(scount)-(h.getText().length()-1)]
		{
			//System.out.println("What we saw
was:"+h.getText()+":"+scount+":"+hol);
			if(h.getText().length()>1){	// prepend the trailing blanks from H
				hol=h.getText().substring(1,h.getText().length())+hol;
			}
			hol=hol.substring(0,Integer.parseInt(scount));
			//System.out.println("Returning:"+hol+":");
		}
	)?	{  ## = #[HOLLERITH_CONST]; ##.setText(hol); }
	;
	
counted_hollerith_field![int count] returns [String s]
	{
		int decrease=LT(1).getText().length();
		s=LT(1).getText();String r;
	}
	:
	 	{0<count}?
		( quotedchar | DQ | SQ )
		(
			{0<(count-decrease)}?
			(
				r=counted_hollerith_field[count-decrease]
				{s=s+r;}
			)
		)?
	|
	;
	
int_const_int! [String tohere] returns [String added]
	{ 	added=tohere;
		if("0123456789".indexOf(LT(1).getText())>=0){
			added=tohere+LT(1).getText();
		}
	}
	:

quotedchar	:	digit_char	|	letter	|	specialchar	;

DQ and SQ are "double/single quote"

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec  6 12:23:08 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <15374.46423.926556.785543@non.non.net>
Message-ID: <0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>


On Wednesday, December 5, 2001, at 04:01  PM, John D. Mitchell wrote:

> [...]
>> Let's see.  Well, it's close, but it wouldn't give you an error if you
>> have less than blockCount.  You need that "did I get enough" check at 
>> the
>> end of the loop.  Could do with a simple "validating" sem pred after
>> loop.
>
> Hmm... How is that going to be safe in the face of hoisting?

Hmm...not sure if it's an issue or not.  I just realized though that the 
code gen is easy but the analysis might not be so easy to enhance.  
There is no concept of repeated grammatical item in my internal data 
structure.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec  6 12:36:02 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <9um3d2+ift7@eGroups.com>
Message-ID: <DD0D0EA6-EA88-11D5-96D4-0030653DE0D6@jguru.com>

On Wednesday, December 5, 2001, at 01:25  PM, jsrs701 wrote:
> <obsequiousness>
> Ye flipping gods, man, don't you just wake up in the morning full of
> pride at the amazing critter you have invented?  I wouldn't be able
> to get through doorways my head would be so big!  You deserve mucho
> kudos.
> </obsequiousness>

<blushing>
Aw shucks.  Well, it's one of those things where once you've built 
something, it's seems like no big deal.  Lots of people have lent their 
brain power too--I've just kept the project single-minded.  Plus, any 
more french fries and I'll have trouble getting my stomach through the 
door not my head! ;)
</blushing>

>> Anyway, concerning the "match n times" thing.  You're right...it
> would
>> be pretty useful.  What syntax is appropriate and how to do you say
>> 0...n vs 1..n?
>
> I'd vote for Perl's RE syntax...
>
> {n}    Match exactly n times
> {n,}   Match at least n times
> {n,m}  Match at least n, at most m times
>
> ...but I know the curly braces are gonna wreak havoc with the
> existing ANTLR syntax.

Yeah the curlies could be an issue.  Hmm...the uncertainties of n,m also 
mess with the analysis. :(

> Um, that just doesn't look quite right, but since I don't have a
> better solution, I won't press the point.  :-)

Yeah, that's the problem with adding significant features requiring 
syntax changes...it can get really messy.  If I build ANTLR 3.0, I'll 
build the complete spec first, get buy-in from everybody, and then code 
it methodically. :)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec  6 12:38:47 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <01120610150501.00769@krsn-d933645f>
Message-ID: <3FAC298E-EA89-11D5-96D4-0030653DE0D6@jguru.com>


On Thursday, December 6, 2001, at 01:09  AM, Andreas Rueckert wrote:
>> Let's see.  Well, it's close, but it wouldn't give you an error if you
>> have less than blockCount.  You need that "did I get enough" check at
>> the end of the loop.  Could do with a simple "validating" sem pred 
>> after
>> loop.
>
> So I should add a { if{counter>0) {throw new 
> RecognitionException(...);} }, or
> so? Since I'm only reading bytes, the only case, where we 'didn't get 
> enough',
> is simply EOF.

{counter!=4}? ought to do it :)  As a validating predicate, it will 
throw an exception if it fails...you could use the {...} action though.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec  6 12:41:18 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <01120614144900.00767@hun.bre.de>
Message-ID: <99906F60-EA89-11D5-96D4-0030653DE0D6@jguru.com>

On Thursday, December 6, 2001, at 05:05  AM, Andreas Rueckert wrote:
> Thanks a lot for your help. I'd also like to thank Monty for his 
> posting of the
> sources. When I saw them, I realized that the counter decrement could
> (hopefully) also be done in the predicate itself. When I add your 
> validating

Be careful about having side-effects in semantic predicates.  When John 
Mitchell eventually holds me at gunpoint to do sem pred hoisting, the 
predicate side-effects will break lots of stuff. ;)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From sinan.karasu at boeing.com  Thu Dec  6 14:34:04 2001
From: sinan.karasu at boeing.com (Sinan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
References: <0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <3C0FF25C.2E0B9B17@boeing.com>

Terence Parr wrote:
> 
[...]
> 
> Hmm...not sure if it's an issue or not.  I just realized though that the
> code gen is easy but the analysis might not be so easy to enhance.
> There is no concept of repeated grammatical item in my internal data
> structure.
> 
> Ter

 Is this the reason that things like

rule : ({ some==thing}? other )+ ;

tend to have problems , but

rule : other ( { some==thing}? rule) ? ;

works fine ?????

My experience has been that tail recursion and repetition don't always
work the same....


Sinan

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From tom at psy.unsw.edu.au  Thu Dec  6 15:24:35 2001
From: tom at psy.unsw.edu.au (tbrandonau)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: more lexical determinism
In-Reply-To: <9um6rf+da7m@eGroups.com>
Message-ID: <9uounj+lahu@eGroups.com>

You want anything with all letters to be a word and anything with 
a '_' or digit to be a identifier right? So can't you just have:
Word:
  (
    Letter 
  | '_' {$setType(Identifier);} 
  | Digit {$setType(Identifier);}
  )+
;
i.e. if its got an '_' or a digit its an identifier otherwise its a 
word.

But, you have non-determinism in that "Hello" is a valid word and a 
valid identifier, and it will get recognized as a valid Word. So in 
the parser you'd need:
pair: (Identifier|Word) COLON Word;
Then you could create an Identifier Token\AST for the LHS Word in the 
parser.

Tom.
--- In antlr-interest@y..., "howardckatz" <howardk@f...> wrote:
> --- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:
> 
>  ...
>  
> > As for distinguishing between the two kinds of words/ids, you 
could 
> > do the following in one rule (assume Word unless you see _ or 
> > digit):
> > 
> > Word:	( Letter | '_'  {$setType(Identifier);}) (Letter | 
> > Digit{$setType(Identifier);})*;
> 
> That didn't quite do it, I think, Doesn't the above say that 
anything 
> starting with a Letter is a Word? But that's not what I want, since 
> valid Identifiers can start with Letters too. The following should 
be 
> legal input,
> 
>      id : word
> 
> but throws an "Unexpected token: id" error. I would guess the 
parser 
> sees this as "Word : Word" and accordingly chokes. Or am I 
> misunderstanding something?
> 
> Howard


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From johnm-antlr at non.net  Thu Dec  6 16:24:37 2001
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <DD0D0EA6-EA88-11D5-96D4-0030653DE0D6@jguru.com>
References: <9um3d2+ift7@eGroups.com>
	<DD0D0EA6-EA88-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <15376.3141.85546.895519@non.non.net>

>>>>> "Terence" == Terence Parr <parrt@jguru.com> writes:
[...]
> Yeah, that's the problem with adding significant features requiring
> syntax changes...it can get really messy.  If I build ANTLR 3.0, I'll
> build the complete spec first, get buy-in from everybody, and then code
> it methodically. :)

I'll have to start a betting pool then. :-?

:-)
	John

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From johnm-antlr at non.net  Thu Dec  6 16:32:54 2001
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>
References: <15374.46423.926556.785543@non.non.net>
	<0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <15376.3638.727229.332403@non.non.net>

>>>>> "Terence" == Terence Parr <parrt@jguru.com> writes:
>>>>>> On Wednesday, December 5, 2001, at 04:01 PM, John D. Mitchell writes:
[...]
>>> Let's see.  Well, it's close, but it wouldn't give you an error if you
>>> have less than blockCount.  You need that "did I get enough" check at
>>> the end of the loop.  Could do with a simple "validating" sem pred
>>> after loop.

>> Hmm... How is that going to be safe in the face of hoisting?

> Hmm...not sure if it's an issue or not.  I just realized though that the
> code gen is easy but the analysis might not be so easy to enhance.  There
> is no concept of repeated grammatical item in my internal data structure.

Ah, yeah, right, *now* I remember!

IMHO, this gets to the more general point of allowing at least some amount
of grammar analysis and parser/walker generation at run-time rather than
the current "static" analysis.  This would be at least nasty in the current
system but in the predicated v3.0, I don't think it would be that onerous
to support this since it's basically just the equivalent of run-time loop
unrolling in a JITC.

Take care,
	John

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec  6 16:39:29 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <15376.3638.727229.332403@non.non.net>
Message-ID: <DF7090B8-EAAA-11D5-96D4-0030653DE0D6@jguru.com>


On Thursday, December 6, 2001, at 04:32  PM, John D. Mitchell wrote:
> IMHO, this gets to the more general point of allowing at least some 
> amount
> of grammar analysis and parser/walker generation at run-time rather than
> the current "static" analysis.  This would be at least nasty in the 
> current
> system but in the predicated v3.0, I don't think it would be that 
> onerous
> to support this since it's basically just the equivalent of run-time 
> loop
> unrolling in a JITC.

Yeah, I was wondering if an "interpreted" version of ANTLR might be 
nifty that did all analysis on demand.  It's basically much easier to 
say "which branches can I take given these k tokens" than "compute the 
world of all possible k-tuples that predict each path".  Once it 
computed the analysis, it could cache that and reuse upon next 
iteration.  It would be like a JIT.   Yep. :)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From johnm-antlr at non.net  Thu Dec  6 16:37:07 2001
From: johnm-antlr at non.net (John D. Mitchell)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <99906F60-EA89-11D5-96D4-0030653DE0D6@jguru.com>
References: <01120614144900.00767@hun.bre.de>
	<99906F60-EA89-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <15376.3891.594842.85985@non.non.net>

>>>>> "Terence" == Terence Parr <parrt@jguru.com> writes:
[...]
> Be careful about having side-effects in semantic predicates.  When John
> Mitchell eventually holds me at gunpoint to do sem pred hoisting, the
> predicate side-effects will break lots of stuff. ;)

:-)  Why bother with a gun?  I just have to figure out how to explain the
importance of hoisting to Shannon.  :-)


I think hoisting needs to be in the design of v3 and I have the suspicion
that v3 will be as radically different from v2 as v2 was to v1 so that
minor issue will be lost in the cacophony of screaming and hair-pulling.

Take care,
	John

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From lgc at mail1.jpl.nasa.gov  Thu Dec  6 16:57:59 2001
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <9up46n+qcra@eGroups.com>

Actually, I would argue that semantic predicates are the way to go; as  
Monty pointed out 

     ( { n > 0 }? foo { n--; } )*

will parse at most n iterations and you can add a sem pred as a 
termination check, as Ter suggested.  Recursive definitions also work:

loop
{ int n = N; }
     :
       { n > 0 }?  foo { n--; } loop
       | { n == 0}?
     ;

will parse exactly n copies of foo or throw an exception.

Unfortunately, syntactic predicates don't behave the same in loops as 
they do in recursive definitions--the recursive solution works as 
ANTLR is currently implemented.  (Maybe I could get the syn preds to 
work with the non-greedy #pragma--I haven't tried that.)  It would be 
nice if this were fixed--the loop expression is rather less verbose, 
and the recursive definition can be inconvenient for tree structuring.

The real advantages of sem preds over a new counter syntax is that 
they support a full range of exit conditions.  Why add a new syntactic 
element which does less than the current machinery?

--Loring Craymer


--- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:
> 
> On Wednesday, December 5, 2001, at 04:01  PM, John D. Mitchell 
wrote:
> 
> > [...]
> >> Let's see.  Well, it's close, but it wouldn't give you an error 
if you
> >> have less than blockCount.  You need that "did I get enough" 
check at 
> >> the
> >> end of the loop.  Could do with a simple "validating" sem pred 
after
> >> loop.
> >
> > Hmm... How is that going to be safe in the face of hoisting?
> 
> Hmm...not sure if it's an issue or not.  I just realized though that 
the 
> code gen is easy but the analysis might not be so easy to enhance.  
> There is no concept of repeated grammatical item in my internal data 
> structure.
> 
> Ter
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From bob at werken.com  Thu Dec  6 20:27:11 2001
From: bob at werken.com (bob mcwhirter)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] antlr 3.0
In-Reply-To: <15376.3141.85546.895519@non.non.net>
Message-ID: <Pine.LNX.3.96.1011206213206.12440B-100000@exeter.exeter.org>

> I'll have to start a betting pool then. :-?

So, bet on a date that antlr-3.0 will be released by?  

Tangentially...

With my day job, I'll sometimes get stretches of Copious Amounts of
Free Time.

I love antlr.  I'd love antlr-3.0.

I've hand-written several LL(k) parsers based upon Ter's methods,
mostly because of short-comings with Antlr (notable, size and
incompatibility with WebLogic's internal antlr.jar and Classloader
isolation bugs).

I'd certainly never want to compete with Ter, since he's the bonafide
parsing $DIETY.  

Instead of us waiting for Ter to get the ball rolling on 3.0, maybe
let's pick up the slack (only with Ter's blessing, of course), and
start work on 3.0.

We all know the hard part isn't writing the code.  We can be bantering
around ideas, and floating designs.

Thoughts, anyone?

	-bob


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec  6 22:26:22 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] antlr 3.0
In-Reply-To: <Pine.LNX.3.96.1011206213206.12440B-100000@exeter.exeter.org>
Message-ID: <555DC9BE-EADB-11D5-96D4-0030653DE0D6@jguru.com>

Hi Bob,

Interesting suggestion.  However, I think it's probably best to focus on 
getting 2.x more "stable" and try out a few more ideas.  I'd like the 
spec for 3.0 to be written completely after we've seen all the features 
in action ;)   Further, I'll probably have to guide the construction of 
the 3.0 spec; we could  designate syntax committee, error handling 
committee, predicate committee, runtime committeee, where's my damn car 
keys committee, etc... [you can replace "committee" with "rabble" if you 
want ;)].

I'm not sure completely sure where/when the "book" fits into all of 
this.  I have been assuming that the most useful path to the community 
is to fix up 2.x to include, say Loring's rewrites for trees and my 
output grammar stuff, then finish the book based upon 2.x and then do 
3.0 spec and then code it.  If we hold off on the book until 3.0 
version, you'll never see the book ;)  Besides, the book will mostly be 
concepts that will apply to any new version.

My main concern with 3.0 is a better implementation and more rigorous 
testing.  Probably will have hoisting and full LL(k) back in there like 
PCCTS had.   There may be some concept and syntax changes.  Mostly 
though I'd like to clean up the code (and have up-to-date doc) so people 
can understand the analysis and build new code generators etc...  The 
2.x implementation is a bit muddy. ;)

Ter

On Thursday, December 6, 2001, at 08:27  PM, bob mcwhirter wrote:

>> I'll have to start a betting pool then. :-?
>
> So, bet on a date that antlr-3.0 will be released by?
>
> Tangentially...
>
> With my day job, I'll sometimes get stretches of Copious Amounts of
> Free Time.
>
> I love antlr.  I'd love antlr-3.0.
>
> I've hand-written several LL(k) parsers based upon Ter's methods,
> mostly because of short-comings with Antlr (notable, size and
> incompatibility with WebLogic's internal antlr.jar and Classloader
> isolation bugs).
>
> I'd certainly never want to compete with Ter, since he's the bonafide
> parsing $DIETY.
>
> Instead of us waiting for Ter to get the ball rolling on 3.0, maybe
> let's pick up the slack (only with Ter's blessing, of course), and
> start work on 3.0.
>
> We all know the hard part isn't writing the code.  We can be bantering
> around ideas, and floating designs.
>
> Thoughts, anyone?
>
> 	-bob
>
>
>
>
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/
>
>
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From ipeksarac at yahoo.com  Thu Dec  6 23:07:51 2001
From: ipeksarac at yahoo.com (ipeksarac)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] new to antlr
Message-ID: <9upps7+gl6j@eGroups.com>

Hi everyone,

I just started to read about ANTLR 2 days ago and i ve started with 
the "getting started with ANTLR" by Terence Parr and i think that 
this was a great introduction and following this i read a few 
articles from the homepage of ANTLR. However when i started reading 
the documentation which comes with the ANTLR download, i realized 
that i was getting lost inside the symbols, which really had no 
examples. "ANTLR Specification:Meta Language" part of the 
documentation is really hard to understand and i feel that without 
understanding it, i can't use ANTLR as a tool in my project (which is 
an ABNF Parser for MGCP). Can anyone recommend me some other document 
or a good example to start with.

Thanks very much.

Ipek Sarac


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From kjell at oops.se  Thu Dec  6 23:33:20 2001
From: kjell at oops.se (Kjell Nilsson)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] antlr 3.0
In-Reply-To: <555DC9BE-EADB-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <AFE89F2C-EAE4-11D5-9A16-0003930FD0FA@oops.se>

On fredag, december 7, 2001, at 07:26  AM, Terence Parr wrote:

> My main concern with 3.0 is a better implementation and more rigorous
> testing.

Yea

Why not include testcases ala XtreemPrograming's tescase. I think it 
will help us all
to get good quality code in antlr-3.0

Just my 2 cents
--kjell

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Fri Dec  7 02:18:44 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>; from parrt@jguru.com on Thu, Dec 06, 2001 at 12:23:08PM -0800
References: <15374.46423.926556.785543@non.non.net> <0FC50BD4-EA87-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <20011207111844.P16323@cs.utwente.nl>

Hi,

On Thu, Dec 06, 2001 at 12:23:08PM -0800, Terence Parr wrote:
> Hmm...not sure if it's an issue or not.  I just realized though that the 
> code gen is easy but the analysis might not be so easy to enhance.

Do you have to enhance the analysis. The analysis fase expects a closure.
So something that repeats a lot of times. The only thing is that by other
means (a counter and a if break or something) an extra requirement is
forced upon the closure. I think it should be safe (as long as the type of
closure matches the bounds)

Or am I missing something here?

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
Wit is cultured insolence. --- Aristotle


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Fri Dec  7 02:51:51 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <170826586F3BD511910D0200C110AAA801C580C5@memail03.bco-home.com>; from mzukowski@bco.com on Thu, Dec 06, 2001 at 07:02:10AM -0800
References: <170826586F3BD511910D0200C110AAA801C580C5@memail03.bco-home.com>
Message-ID: <20011207115151.Q16323@cs.utwente.nl>

Hi,

On Thu, Dec 06, 2001 at 07:02:10AM -0800, mzukowski@bco.com wrote:
> are right, semantic predicates are ignored if you are guessing.  That's
> a gotcha that could be taken care of only by extending antlr or extremely
> ugly and unmaintainable syntactic predicates.

Hmmm I have to disagree I'm wrong =) Had a closer look, the semantic
predicates are appended on the lookahead tests. So their always executed.
Only thing is that they may not depend on 'normal' action code then. Only
on init actions and on parameter default values. The init action changes I
made were to do things in the beginning of a closure before even lookahead
was tested (so you could do usefull messages about EOF cases).

Ric
--
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Fri Dec  7 07:05:14 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
Message-ID: <170826586F3BD511910D0200C110AAA801C580CE@memail03.bco-home.com>

> Actually, I would argue that semantic predicates are the way 
> to go; as  
> Monty pointed out 
> 
>      ( { n > 0 }? foo { n--; } )*
> 
> will parse at most n iterations and you can add a sem pred as a 
> termination check, as Ter suggested.  Recursive definitions also work:
> 
> loop
> { int n = N; }
>      :
>        { n > 0 }?  foo { n--; } loop
>        | { n == 0}?
>      ;
> 
> will parse exactly n copies of foo or throw an exception.
> 
> Unfortunately, syntactic predicates don't behave the same in loops as 
> they do in recursive definitions--the recursive solution works as 
> ANTLR is currently implemented.  

It doesn't work quite as you have it above.  The action n-- is ignored when
guessing.  But you are right that recursive definitions will do the trick:

loop[int N] 
{ int n = N; }
     :
       { n > 0 }?  foo loop[n-1]
       | { n == 0}?
     ;

generates:

if (((LA(1)==LITERAL_hey))&&( n > 0 )) {
	foo();
	loop(n-1);
}
else if (((LA(1)==EOF||LA(1)==LITERAL_hey))&&( n == 0)) {
}
else {
	throw new NoViableAltException(LT(1), getFilename());
}

With a (valid) warning that is generated because of the possibility of
matching nothing in the loop rule.

Monty

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Fri Dec  7 08:32:45 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
Message-ID: <01120717421801.00815@hun.bre.de>

Hi!

> Actually, I would argue that semantic predicates are the way to go; as
> Monty pointed out
>
>     ( { n > 0 }? foo { n--; } )*
> 
> will parse at most n iterations and you can add a sem pred as a
> termination check, as Ter suggested.  Recursive definitions also work:       
  
--<snip>--

Ok, I use the following construct now:
=======================================
// The constant pool.
constant_pool
{ int poolSize=0; }
	: poolSize=u2			             		// Parse the size of the constant pool + 1
	  ( {--poolSize > 0}? cp_info )* {poolSize==0}?  	// Parse <poolSize-1> cp_info structures.
	;
=======================================
and get the following warning:
=======================================
     [java] ANTLR Parser Generator   Version 2.7.1   1989-2000 jGuru.com
     [java] ../../modules/classfile/src/org/argouml/uml/reveng/classfile/classfile.g:66: warning: nondeterminism upon
     [java] ../../modules/classfile/src/org/argouml/uml/reveng/classfile/classfile.g:66:        k==1:BYTE
     [java] ../../modules/classfile/src/org/argouml/uml/reveng/classfile/classfile.g:66:        between alt 1 and exit branch of block  
=======================================
No idea for a workaround so far on my side (but I haven't really tried a lot,
since I was busy hacking the classfile specs in a grammar file).

I just learned, that the 'match n times' might have a few advantages, that have
not yet discussed IIRC.

- It seems, that I cannot assign the result of the n-th match to the n-th
element of an array. At least, I get an error, when I try to do something, like
=======================================
	: length=u2 { bytes = new byte[length]; }
	  ( {length-- > 0}? bytes[bytepos++]=u1 )* {length==0}? { name = new String(bytes); } 	;  
=======================================
Workaround is simply to use a buffer for the result.

- The trailing sematic predicate throws a semantic exception, while a
recognition exception makes more sense in my eyes.

- The predicate loop is very readable, if you don't have the generated code in
mind. Maybe some explanation in the Antlr manual would help.

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From tmoog at polhode.com  Fri Dec  7 10:29:13 2001
From: tmoog at polhode.com (Tom Moog)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] semantic predicates vs. counter predicates
In-Reply-To: <9up46n+qcra@eGroups.com>
Message-ID: <Pine.BSF.4.21.0112071227400.33560-100000@shell-1.enteract.com>


Yes, but "real" semantic predicates require the
computation of context so they are applied only
when the lookahead is correct when they are
hoisted.  However, counters have 0 context.

Of course, 0 can be viewed as a degenerate case.



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec  7 12:52:36 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] antlr 3.0
In-Reply-To: <AFE89F2C-EAE4-11D5-9A16-0003930FD0FA@oops.se>
Message-ID: <58341C10-EB54-11D5-96D4-0030653DE0D6@jguru.com>


On Thursday, December 6, 2001, at 11:33  PM, Kjell Nilsson wrote:

> On fredag, december 7, 2001, at 07:26  AM, Terence Parr wrote:
>
>> My main concern with 3.0 is a better implementation and more rigorous
>> testing.
>
> Yea
>
> Why not include testcases ala XtreemPrograming's tescase. I think it
> will help us all
> to get good quality code in antlr-3.0

I'll definitely investigate testing rigs.  It's amazing what I've 
learned after trying to write commercial code as opposed to research 
code over the past 2.5 years.  I've had to become ruthless in 
simplicity, testing, organization, etc...  If it doesn't work, I don't 
get paid!  Anyway, I'd really like to have a super clean version of 
ANTLR as would you folks :)  Just having a decent code generation 
mechanism would help so people could make ANTLR work with lots of 
languages.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec  7 13:03:31 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Analysis of fixed repetition loop construct
In-Reply-To: <20011207111844.P16323@cs.utwente.nl>
Message-ID: <DE85B38D-EB55-11D5-96D4-0030653DE0D6@jguru.com>


On Friday, December 7, 2001, at 02:18  AM, Ric Klaren wrote:

> Hi,
>
> On Thu, Dec 06, 2001 at 12:23:08PM -0800, Terence Parr wrote:
>> Hmm...not sure if it's an issue or not.  I just realized though that 
>> the
>> code gen is easy but the analysis might not be so easy to enhance.
>
> Do you have to enhance the analysis. The analysis fase expects a 
> closure.
> So something that repeats a lot of times. The only thing is that by 
> other
> means (a counter and a if break or something) an extra requirement is
> forced upon the closure. I think it should be safe (as long as the type 
> of
> closure matches the bounds)
>
> Or am I missing something here?

Possibly.  The analysis of

a : (ID)+ COLON ;

is very different than

a_ : (ID)+<4> COLON ;

which is really

a_ : ID ID ID ID COLON ;

In the nonspecific case, the k=5 lookahead for 'a' is

{(ID,COLON,EOF,EOF,EOF),
  (ID,ID,COLON,EOF,EOF),
  (ID,ID,ID,COLON,EOF),
  (ID,ID,ID,ID,COLON),
  (ID,ID,ID,ID,ID)}

whereas k=5 lookahead for a_ is exactly *1* k-tuple:

{(ID,ID,ID,ID,COLON)}

So, you can see that there is a big difference between infinite and a 
fixed number.  The "infinitely long sequence" problem is how I came up 
with the user-specified syntactic predicate.  Specifically, I wanted to 
solve this:

a : (A|B)+ C
    | (B)+ D
    ;

I asked "what would solve this from the left edge?"  The obvious answer 
is infinite lookahead so you can see the C or D. (without infinite 
lookahead I couldn't predicate which alternative to choose).  So I 
devised a construct that borrowed from the notion of a predicate, but 
was predicated on syntax not semantics.  Slick.

Interestingly enough, using an "interpreted on-demand analysis 
(runtime)", this is truly easy because you have an exact k sequence to 
tokens to look at.  You don't have to examine all possibilities. :)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec  7 13:05:58 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
In-Reply-To: <01120717421801.00815@hun.bre.de>
Message-ID: <36005D36-EB56-11D5-96D4-0030653DE0D6@jguru.com>


On Friday, December 7, 2001, at 08:32  AM, Andreas Rueckert wrote:
> - The predicate loop is very readable, if you don't have the generated 
> code in
> mind. Maybe some explanation in the Antlr manual would help.

I'll add a FAQ entry about this when I get a chance.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec  7 13:07:28 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] semantic predicates vs. counter predicates
In-Reply-To: <Pine.BSF.4.21.0112071227400.33560-100000@shell-1.enteract.com>
Message-ID: <6B8DC590-EB56-11D5-96D4-0030653DE0D6@jguru.com>


On Friday, December 7, 2001, at 10:29  AM, Tom Moog wrote:

>
> Yes, but "real" semantic predicates require the
> computation of context so they are applied only
> when the lookahead is correct when they are
> hoisted.  However, counters have 0 context.

That's true...but if the loop stopped early due to syntax then the 
trailing sem pred that validates the count would catch it, wouldn't it?

Boy this stuff is tricky!

Ter

> --
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec  7 13:09:17 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] new to antlr
In-Reply-To: <9upps7+gl6j@eGroups.com>
Message-ID: <ACBF9F28-EB56-11D5-96D4-0030653DE0D6@jguru.com>


On Thursday, December 6, 2001, at 11:07  PM, ipeksarac wrote:

> Hi everyone,
>
> I just started to read about ANTLR 2 days ago and i ve started with
> the "getting started with ANTLR" by Terence Parr and i think that
> this was a great introduction and following this i read a few
> articles from the homepage of ANTLR. However when i started reading
> the documentation which comes with the ANTLR download, i realized
> that i was getting lost inside the symbols, which really had no
> examples. "ANTLR Specification:Meta Language" part of the
> documentation is really hard to understand and i feel that without
> understanding it, i can't use ANTLR as a tool in my project (which is
> an ABNF Parser for MGCP). Can anyone recommend me some other document
> or a good example to start with.

Howdy...Take a look at some of the FAQ entries like:

http://www.jguru.com/faq/view.jsp?EID=78

and the examples.  Modifying examples is the best way to learn probably.

Further, the new book draft has a good chapter on building stuff by hand 
that will teach you some things. :)  See the antlr.org site.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From epovazan at telus.net  Sat Dec  8 16:18:49 2001
From: epovazan at telus.net (Edward Povazan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Nondeterministically blind
Message-ID: <001f01c18047$13381380$6401a8c0@pk.shawcable.net>

Hello,

I just can't see why this shouldn't work. I am trying to parse Python
strings:
http://www.python.org/doc/current/ref/strings.html

My rule:
STRING_LIT:
    SHORT_STRING | LONG_STRING ;
is the one that gives the warning.

How do you guys normally go about hunting down the non deterministic part of
your grammars. I've been scribbling state diagrams, and just can't see my
error. Then again, I am a relative ANTLR newbie, and it's been a long time
since I wanted to parse something.

Can anyone point out my error?

Thanks
-Ed


The lexer looks like this so far:

----

header {
package pytojava
}

class PyLex extends Lexer ;
options {
    charVocabulary = '\0'..'\377';
    testLiterals = false;
    k = 4;
}

protected
ESCAPE_SEQ:
    '\\'.;

protected
SHORT_STRING_CHAR:
    ~('\\'|'\n'|'\r') ;

protected
LONG_STRING_CHAR:
    ~('\\') ;

protected
SHORT_STRING_ITEM:
    SHORT_STRING_CHAR | ESCAPE_SEQ ;

protected
LONG_STRING_ITEM:
    LONG_STRING_CHAR | ESCAPE_SEQ ;

protected
SHORT_STRING:
    '\'' (SHORT_STRING_ITEM)* '\''
    | '"' (SHORT_STRING_ITEM)* '"' ;

protected
LONG_STRING:
    "'''" (LONG_STRING_ITEM)* "'''"
    | "\"\"\"" (LONG_STRING_ITEM)* "\"\"\"" ;

STRING_LIT:
    SHORT_STRING | LONG_STRING ;

----


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec  8 16:32:24 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Nondeterministically blind
In-Reply-To: <001f01c18047$13381380$6401a8c0@pk.shawcable.net>
Message-ID: <374D5C2A-EC3C-11D5-96D4-0030653DE0D6@jguru.com>


On Saturday, December 8, 2001, at 04:18  PM, Edward Povazan wrote:

> Hello,
>
> I just can't see why this shouldn't work. I am trying to parse Python
> strings:
> http://www.python.org/doc/current/ref/strings.html
>
> My rule:
> STRING_LIT:
>     SHORT_STRING | LONG_STRING ;
> is the one that gives the warning.
>
> How do you guys normally go about hunting down the non deterministic 
> part of
> your grammars. I've been scribbling state diagrams, and just can't see 
> my
> error. Then again, I am a relative ANTLR newbie, and it's been a long 
> time
> since I wanted to parse something.
>
> Can anyone point out my error?

You didn't include the error message that I could see, but I'm guessing 
you have a problem in that your string chars can include the quote and 
double-quote chars, which will conflict with the start/end of the 
string :)

Good luck,
Terence


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From epovazan at telus.net  Sat Dec  8 17:33:25 2001
From: epovazan at telus.net (epovazan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
In-Reply-To: <374D5C2A-EC3C-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <9uuf15+pnl7@eGroups.com>

> You didn't include the error message that I could see, but I'm 
guessing 
> you have a problem in that your string chars can include the quote 
and 
> double-quote chars, which will conflict with the start/end of the 
> string :)
> 
> Good luck,
> Terence

Wow, thank for the speedy reply!
The error is:
ANTLR Parser Generator   Version 2.7.1   1989-2000 jGuru.com
PyLex.g:43: warning: lexical nondeterminism upon
PyLex.g:43:     k==1:'"','\''
PyLex.g:43:     k==2:'"','\''
PyLex.g:43:     k==3:'"','\''
PyLex.g:43:     k==4:'\u0000'..'\u00ff'
PyLex.g:43:     between alts 1 and 2 of block

I modified the STRING_LIT rule as follows and it compiles ok:
STRING_LIT:
    (("'''") | ("\"\"\"")) => LONG_STRING
    | SHORT_STRING ;

However the generated code with the warnings looks like it will 
execute correctly too.

It's crazy ... I can do anything except not get nondeterminsm 
warnings. Thanks for a great tool, eventually I will "get it" and the 
rest works for me well (tree parsing is great) An in a few weeks, I 
will have a Python grammar for your collection :)

-Ed


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From epovazan at telus.net  Sat Dec  8 18:54:39 2001
From: epovazan at telus.net (Edward Povazan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
Message-ID: <000901c1805c$d885f9d0$6401a8c0@pk.shawcable.net>

Ok, I seem to be answering my own questions while I hack around.
My grammar did not parse valid strings, so I fixed that. I still don't see
why I need the predicate in the STRING_LIT:
rule. Both versions parse valid strings (from my little tests).

-Ed
---------

protected
ESCAPE_SEQ:
    '\\'.;

protected
SHORT_STRING_CHAR_SINGLE:
    ~('\\'|'\n'|'\r'|'\'') ;

protected
SHORT_STRING_CHAR_DOUBLE:
    ~('\\'|'\n'|'\r'|'"') ;

protected
LONG_STRING_CHAR_SINGLE:
    ~('\\'|'\'') ;

protected
LONG_STRING_CHAR_DOUBLE:
    ~('\\'|'"') ;

protected
SHORT_STRING_ITEM_SINGLE:
    SHORT_STRING_CHAR_SINGLE | ESCAPE_SEQ ;

protected
SHORT_STRING_ITEM_DOUBLE:
    SHORT_STRING_CHAR_DOUBLE | ESCAPE_SEQ ;

protected
LONG_STRING_ITEM_SINGLE:
    LONG_STRING_CHAR_SINGLE | ESCAPE_SEQ ;

protected
LONG_STRING_ITEM_DOUBLE:
    LONG_STRING_CHAR_DOUBLE | ESCAPE_SEQ ;

protected
SHORT_STRING:
    '\'' (SHORT_STRING_ITEM_SINGLE)* '\''
    | '"' (SHORT_STRING_ITEM_DOUBLE)* '"' ;

protected
LONG_STRING:
    "'''" (LONG_STRING_ITEM_SINGLE)* "'''"
    | "\"\"\"" (LONG_STRING_ITEM_DOUBLE)* "\"\"\"" ;


STRING_LIT:
    (("'''") | ("\"\"\"")) => LONG_STRING
    | SHORT_STRING ;

// STRING_LIT: LONG_STRING  |  SHORT_STRING; // why is this non
deterministic?


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec  8 19:03:51 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
In-Reply-To: <000901c1805c$d885f9d0$6401a8c0@pk.shawcable.net>
Message-ID: <5FB87670-EC51-11D5-96D4-0030653DE0D6@jguru.com>


On Saturday, December 8, 2001, at 06:54  PM, Edward Povazan wrote:

> Ok, I seem to be answering my own questions while I hack around.
> My grammar did not parse valid strings, so I fixed that. I still don't 
> see
> why I need the predicate in the STRING_LIT:
> rule. Both versions parse valid strings (from my little tests).
>
> -Ed
> ---------
>
> protected
> ESCAPE_SEQ:
>     '\\'.;
>
> protected
> SHORT_STRING_CHAR_SINGLE:
>     ~('\\'|'\n'|'\r'|'\'') ;
>
> protected
> SHORT_STRING_CHAR_DOUBLE:
>     ~('\\'|'\n'|'\r'|'"') ;
>
> protected
> LONG_STRING_CHAR_SINGLE:
>     ~('\\'|'\'') ;
>
> protected
> LONG_STRING_CHAR_DOUBLE:
>     ~('\\'|'"') ;
>
> protected
> SHORT_STRING_ITEM_SINGLE:
>     SHORT_STRING_CHAR_SINGLE | ESCAPE_SEQ ;
>
> protected
> SHORT_STRING_ITEM_DOUBLE:
>     SHORT_STRING_CHAR_DOUBLE | ESCAPE_SEQ ;
>
> protected
> LONG_STRING_ITEM_SINGLE:
>     LONG_STRING_CHAR_SINGLE | ESCAPE_SEQ ;
>
> protected
> LONG_STRING_ITEM_DOUBLE:
>     LONG_STRING_CHAR_DOUBLE | ESCAPE_SEQ ;
>
> protected
> SHORT_STRING:
>     '\'' (SHORT_STRING_ITEM_SINGLE)* '\''
>     | '"' (SHORT_STRING_ITEM_DOUBLE)* '"' ;
>
> protected
> LONG_STRING:
>     "'''" (LONG_STRING_ITEM_SINGLE)* "'''"
>     | "\"\"\"" (LONG_STRING_ITEM_DOUBLE)* "\"\"\"" ;
>
>
> STRING_LIT:
>     (("'''") | ("\"\"\"")) => LONG_STRING
>     | SHORT_STRING ;
>
> // STRING_LIT: LONG_STRING  |  SHORT_STRING; // why is this non
> deterministic?

You shouldn't need the predicate.  The string start chars should 
uniquely identify which to grab.  Another problem you may have is that 
your (...)* loops are 0 or more not 1 or more.  It may be that an empty 
string with single quotes looks like the start of a triple quote for 
first 2 char.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Mon Dec 10 08:18:11 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
Message-ID: <170826586F3BD511910D0200C110AAA801C580D5@memail03.bco-home.com>

The lexer doesn't know whether '''' would be two empty strings or the start
of a triple quoted string.  This is genuinely ambiguous.  Hence you need a
disambiguating syntactic predicate which says that if you see triple quotes
then match a long string.

Monty

> -----Original Message-----
> From: epovazan [mailto:epovazan@telus.net]
> Sent: Saturday, December 08, 2001 5:33 PM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Re: Nondeterministically blind
> 
> 
> > You didn't include the error message that I could see, but I'm 
> guessing 
> > you have a problem in that your string chars can include the quote 
> and 
> > double-quote chars, which will conflict with the start/end of the 
> > string :)
> > 
> > Good luck,
> > Terence
> 
> Wow, thank for the speedy reply!
> The error is:
> ANTLR Parser Generator   Version 2.7.1   1989-2000 jGuru.com
> PyLex.g:43: warning: lexical nondeterminism upon
> PyLex.g:43:     k==1:'"','\''
> PyLex.g:43:     k==2:'"','\''
> PyLex.g:43:     k==3:'"','\''
> PyLex.g:43:     k==4:'\u0000'..'\u00ff'
> PyLex.g:43:     between alts 1 and 2 of block
> 
> I modified the STRING_LIT rule as follows and it compiles ok:
> STRING_LIT:
>     (("'''") | ("\"\"\"")) => LONG_STRING
>     | SHORT_STRING ;
> 
> However the generated code with the warnings looks like it will 
> execute correctly too.
> 
> It's crazy ... I can do anything except not get nondeterminsm 
> warnings. Thanks for a great tool, eventually I will "get it" and the 
> rest works for me well (tree parsing is great) An in a few weeks, I 
> will have a Python grammar for your collection :)
> 
> -Ed
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
http://docs.yahoo.com/info/terms/ 



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From epovazan at telus.net  Mon Dec 10 09:31:54 2001
From: epovazan at telus.net (Edward Povazan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
References: <170826586F3BD511910D0200C110AAA801C580D5@memail03.bco-home.com>
Message-ID: <005801c181a0$8f734050$6401a8c0@pk.shawcable.net>

Yes, thank you, I came to this conclusion when I got away from my computer.
Funny how that is.

I recognise your name from usenet postings relating to parsing Python
(DEDENT/INDENT etc)
Did you create a complete python parser? I typed in the grammar from the
spec, got rid of recursive elements, but now every single token and its
grandmother gives me nondeterminism warnings. They are correct of course,
but is a lot of this solvable though predicates, or does one have to
implement the grammar differently from the specs?

Thanks
-Ed



----- Original Message -----
From: <mzukowski@bco.com>
To: <antlr-interest@yahoogroups.com>
Sent: Monday, December 10, 2001 8:18 AM
Subject: RE: [antlr-interest] Re: Nondeterministically blind


> The lexer doesn't know whether '''' would be two empty strings or the
start
> of a triple quoted string.  This is genuinely ambiguous.  Hence you need a
> disambiguating syntactic predicate which says that if you see triple
quotes
> then match a long string.
>
> Monty



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Mon Dec 10 10:05:33 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
Message-ID: <170826586F3BD511910D0200C110AAA801C580D6@memail03.bco-home.com>

No, I didn't ever do the entire grammar, just the whitespace part of it.
But I'd be happy to take a look at the grammar and see if I can fix some
warnings.

Monty

> -----Original Message-----
> From: Edward Povazan [mailto:epovazan@telus.net]
> Sent: Monday, December 10, 2001 9:32 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] Re: Nondeterministically blind
> 
> 
> Yes, thank you, I came to this conclusion when I got away 
> from my computer.
> Funny how that is.
> 
> I recognise your name from usenet postings relating to parsing Python
> (DEDENT/INDENT etc)
> Did you create a complete python parser? I typed in the 
> grammar from the
> spec, got rid of recursive elements, but now every single 
> token and its
> grandmother gives me nondeterminism warnings. They are 
> correct of course,
> but is a lot of this solvable though predicates, or does one have to
> implement the grammar differently from the specs?
> 
> Thanks
> -Ed
> 
> 
> 
> ----- Original Message -----
> From: <mzukowski@bco.com>
> To: <antlr-interest@yahoogroups.com>
> Sent: Monday, December 10, 2001 8:18 AM
> Subject: RE: [antlr-interest] Re: Nondeterministically blind
> 
> 
> > The lexer doesn't know whether '''' would be two empty 
> strings or the
> start
> > of a triple quoted string.  This is genuinely ambiguous.  
> Hence you need a
> > disambiguating syntactic predicate which says that if you see triple
> quotes
> > then match a long string.
> >
> > Monty
> 
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/ 
> 
> 
> 

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From epovazan at telus.net  Mon Dec 10 12:43:12 2001
From: epovazan at telus.net (Edward Povazan)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: Nondeterministically blind
References: <170826586F3BD511910D0200C110AAA801C580D6@memail03.bco-home.com>
Message-ID: <00a201c181bb$49432850$6401a8c0@pk.shawcable.net>

Thanks, that would be great, but a little later on. First I am determined to
at least get a little of it fixed ... only way to learn.

-Ed

----- Original Message -----
From: <mzukowski@bco.com>
To: <antlr-interest@yahoogroups.com>
Sent: Monday, December 10, 2001 10:05 AM
Subject: RE: [antlr-interest] Re: Nondeterministically blind


> No, I didn't ever do the entire grammar, just the whitespace part of it.
> But I'd be happy to take a look at the grammar and see if I can fix some
> warnings.
>
> Monty



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jm_lynn at yahoo.com  Tue Dec 11 08:15:52 2001
From: jm_lynn at yahoo.com (jm_lynn@yahoo.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Link error while making cpp distribution Calc sample
References: <9um4ph+pg0j@eGroups.com> <20011206105553.K16323@cs.utwente.nl>
Message-ID: <006201c1825f$1b444ed0$0a00a8c0@ymlam>

Ric,

Thanks for the info.  I tried your approach and it work.  Steve Siber had
also sent me some more info on making the Antlr DLL that will link.  I will
try that later.

As far as I can tell, Antler is great stuff and I had been dying to get a
crack at it.  By having the Calc working, I find it much easier to
understand the architecture.

TThanks!

Jim


_________________________________________________________
Do You Yahoo!?
Get your free @yahoo.com address at http://mail.yahoo.com


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Tue Dec 11 08:39:22 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Link error while making cpp distribution Calc sample
In-Reply-To: <006201c1825f$1b444ed0$0a00a8c0@ymlam>; from jm_lynn@yahoo.com on Tue, Dec 11, 2001 at 11:15:52AM -0500
References: <9um4ph+pg0j@eGroups.com> <20011206105553.K16323@cs.utwente.nl> <006201c1825f$1b444ed0$0a00a8c0@ymlam>
Message-ID: <20011211173922.E15519@cs.utwente.nl>

Hi,

On Tue, Dec 11, 2001 at 11:15:52AM -0500, jm_lynn@yahoo.com wrote:
> Thanks for the info.  I tried your approach and it work.

Aha good to hear =)

> Steve Siber had  also sent me some more info on making the Antlr DLL
> that will link.  I will try that later.

Could you forward me that info? I'm not really familiar with MSVC6 and the
hoops you have to go through to make a dll. Currenlty the tree for 2.7.2
does not link any more as DLL and I'd prefer to fix it before the 2.7.2
prereleases go out the door =)

> As far as I can tell, Antler is great stuff and I had been dying to get a
> crack at it.  By having the Calc working, I find it much easier to
> understand the architecture.

Yup calc is a good example to start with. There's also some class
documentation available from my antlr page

http://wwwhome.cs.utwente.nl/~klaren/antlr

This is for the upcoming release so it's slightly different here and there.
But it still should be a good help for getting an idea how the support
library fits together.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
Wit is cultured insolence. --- Aristotle


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From pray at eagleinvsys.com  Tue Dec 11 09:33:12 2001
From: pray at eagleinvsys.com (praveenray)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] found optional path in nextToken()
Message-ID: <9v5g0o+m304@eGroups.com>

Does anyone know when does this warning get generated?
I am trying to parse Colon delimited file :
10:my_value1:20:my_value2:30:my_value3
etc.

Here's my .g file :


header
{
}

options
{
	language = "Cpp";
}

class SetFillParser extends Parser;
options {
	exportVocab = SetFill;
	buildAST = false;
}


set	:	(row)+
	;

row	:	VALUE COLON (tag_value)+
	;

tag_value	:	DIGIT COLON VALUE
	;

class SetFillLexer extends Lexer;
options
{
	importVocab = SetFill;
	k=2;
	charVocabulary = '\0'..'\377';
}


COLON	:	':'
	;

protected 
DIGIT	:	'0'..'9'
	;

protected 
NON_DIGIT	:	~('0'..'9'|':')
	;

VALUE
{
	bool bNonDigit = false;
}
	:	(
		DIGIT
		| NON_DIGIT {bNonDigit = true; }
		)*
	;




 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Tue Dec 11 09:35:24 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] found optional path in nextToken()
Message-ID: <170826586F3BD511910D0200C110AAA801C580DF@memail03.bco-home.com>

nextToken() is the lexer rule synthesized from all of your non-protected
lexer rules.  Your VALUE rule is a ()* loop--which means it's ok to match
nothing.  Surely you don't want empty tokens returned from your lexer
infinitely many times.  Change it to ()+.

Monty

> -----Original Message-----
> From: praveenray [mailto:pray@eagleinvsys.com]
> Sent: Tuesday, December 11, 2001 9:33 AM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] found optional path in nextToken()
> 
> 
> Does anyone know when does this warning get generated?
> I am trying to parse Colon delimited file :
> 10:my_value1:20:my_value2:30:my_value3
> etc.
> 
> Here's my .g file :
> 
> 
> header
> {
> }
> 
> options
> {
> 	language = "Cpp";
> }
> 
> class SetFillParser extends Parser;
> options {
> 	exportVocab = SetFill;
> 	buildAST = false;
> }
> 
> 
> set	:	(row)+
> 	;
> 
> row	:	VALUE COLON (tag_value)+
> 	;
> 
> tag_value	:	DIGIT COLON VALUE
> 	;
> 
> class SetFillLexer extends Lexer;
> options
> {
> 	importVocab = SetFill;
> 	k=2;
> 	charVocabulary = '\0'..'\377';
> }
> 
> 
> COLON	:	':'
> 	;
> 
> protected 
> DIGIT	:	'0'..'9'
> 	;
> 
> protected 
> NON_DIGIT	:	~('0'..'9'|':')
> 	;
> 
> VALUE
> {
> 	bool bNonDigit = false;
> }
> 	:	(
> 		DIGIT
> 		| NON_DIGIT {bNonDigit = true; }
> 		)*
> 	;
> 
> 
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/ 
> 
> 
> 

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From pray at eagleinvsys.com  Tue Dec 11 11:36:37 2001
From: pray at eagleinvsys.com (praveenray)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] breaking out of a closure loop
Message-ID: <9v5n85+der8@eGroups.com>

Is it possible to break out of a ()* or ()+ loop explicitly? I mean,
Can I use 'break' statement inside the loop like this:

class myParser extends Parser;
somerule
{ bool bQuit=false; } 
      :  SOME_TOKEN 
            ( 
              bQuit = otherRule
              { if (bQuit) break; }
            )+
           END_TOKEN
        ;
otherRule returns [bool bRet]
{ bRet = false; } 
                             : A B
                               ( C | D {bRet=true;}
                               );

 Will it have any side effects? If yes, what is a safe way to break
out of a loop after I have seen some special character?
                 


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Tue Dec 11 13:37:50 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] breaking out of a closure loop
In-Reply-To: <9v5n85+der8@eGroups.com>
Message-ID: <532993E6-EE7F-11D5-96D4-0030653DE0D6@jguru.com>


On Tuesday, December 11, 2001, at 11:36  AM, praveenray wrote:

> Is it possible to break out of a ()* or ()+ loop explicitly? I mean,
> Can I use 'break' statement inside the loop like this:
>
> class myParser extends Parser;
> somerule
> { bool bQuit=false; }
>       :  SOME_TOKEN
>             (
>               bQuit = otherRule
>               { if (bQuit) break; }
>             )+
>            END_TOKEN
>         ;
> otherRule returns [bool bRet]
> { bRet = false; }
>                              : A B
>                                ( C | D {bRet=true;}
>                                );
>
>  Will it have any side effects? If yes, what is a safe way to break
> out of a loop after I have seen some special character?

"break" works but is not a good idea.  The grammar analysis has no idea 
what you do in actions.  Better to use a semantic predicate 
{!isSpecialChar(...)}? to tell it when to terminate.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Tue Dec 11 14:43:13 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] breaking out of a closure loop
Message-ID: <170826586F3BD511910D0200C110AAA801C580E2@memail03.bco-home.com>

Ter, you need a disambiguating semantic predicate, yes?  Otherwise an
exception is thrown on the assumption that it is a validating predicate.  So
you have to have another alternative there.  I think the idiom I used was:

(
	{keepGoing}? otherRule
	| SOME_IMAGINARY_NEVER_GENERATED_TOKEN
)+

SOME_IMAGINARY_NEVER_GENERATED_TOKEN gives the loop a non-guarded
alternative which will never be matched (because the lexer never generates
it) but gives the semantic predicate an alternative so the predicate is
disambiguating instead of validating.  When keepGoing is false then no
viable alternative will be found and the loop will break appropriately.

For antlr 3 would it be possible to incorporate a $break() as an action?  Or
some other appropriate distinction between a validating and disambiguating
predicate?  People always get confused between those two anyways.  And even
in a loop with only one alternative in the loop it is appropriate to have a
disambiguating predicate to break the loop.

Actually the entire role of a validating predicate merits some thinking.  I
don't think I have personally used them.  However, they could be part of a
saner, broader error handling mechanism.

Monty


> -----Original Message-----
> From: Terence Parr [mailto:parrt@jguru.com]
> Sent: Tuesday, December 11, 2001 1:38 PM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] breaking out of a closure loop
> 
> 
> 
> On Tuesday, December 11, 2001, at 11:36  AM, praveenray wrote:
> 
> > Is it possible to break out of a ()* or ()+ loop explicitly? I mean,
> > Can I use 'break' statement inside the loop like this:
> >
> > class myParser extends Parser;
> > somerule
> > { bool bQuit=false; }
> >       :  SOME_TOKEN
> >             (
> >               bQuit = otherRule
> >               { if (bQuit) break; }
> >             )+
> >            END_TOKEN
> >         ;
> > otherRule returns [bool bRet]
> > { bRet = false; }
> >                              : A B
> >                                ( C | D {bRet=true;}
> >                                );
> >
> >  Will it have any side effects? If yes, what is a safe way to break
> > out of a loop after I have seen some special character?
> 
> "break" works but is not a good idea.  The grammar analysis 
> has no idea 
> what you do in actions.  Better to use a semantic predicate 
> {!isSpecialChar(...)}? to tell it when to terminate.
> 
> Ter
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/ 
> 
> 
> 

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From lgc at mail1.jpl.nasa.gov  Tue Dec 11 17:20:42 2001
From: lgc at mail1.jpl.nasa.gov (lgcraymer)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] Re: breaking out of a closure loop
In-Reply-To: <170826586F3BD511910D0200C110AAA801C580E2@memail03.bco-home.com>
Message-ID: <9v6bda+k5j9@eGroups.com>

Monty--

I think that a better idiom is

  otherRule
 (
 	{keepGoing}? otherRule
 )*

which works--it disambiguates "otherRule" from "NULL", which is a 
viable alt for STAR loops.

ANTLR does not internally distinguish between validating and 
disambiguating predicates.  I think that you are right that validating 
predicates merit inclusion in an upgraded error-handling mechanism:  
user defined exceptions at the grammar level (not in actions) would 
certainly be a convenience for error reporting.

--Loring

--- In antlr-interest@y..., mzukowski@b... wrote:
> Ter, you need a disambiguating semantic predicate, yes?  Otherwise 
an
> exception is thrown on the assumption that it is a validating 
predicate.  So
> you have to have another alternative there.  I think the idiom I 
used was:
> 
> (
> 	{keepGoing}? otherRule
> 	| SOME_IMAGINARY_NEVER_GENERATED_TOKEN
> )+
> 
> SOME_IMAGINARY_NEVER_GENERATED_TOKEN gives the loop a non-guarded
> alternative which will never be matched (because the lexer never 
generates
> it) but gives the semantic predicate an alternative so the predicate 
is
> disambiguating instead of validating.  When keepGoing is false then 
no
> viable alternative will be found and the loop will break 
appropriately.
> 
> For antlr 3 would it be possible to incorporate a $break() as an 
action?  Or
> some other appropriate distinction between a validating and 
disambiguating
> predicate?  People always get confused between those two anyways.  
And even
> in a loop with only one alternative in the loop it is appropriate to 
have a
> disambiguating predicate to break the loop.
> 
> Actually the entire role of a validating predicate merits some 
thinking.  I
> don't think I have personally used them.  However, they could be 
part of a
> saner, broader error handling mechanism.
> 
> Monty



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec 12 00:29:56 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] breaking out of a closure loop
In-Reply-To: <170826586F3BD511910D0200C110AAA801C580E2@memail03.bco-home.com>
Message-ID: <6C98DB05-EEDA-11D5-96D4-0030653DE0D6@jguru.com>


On Tuesday, December 11, 2001, at 02:43  PM, mzukowski@bco.com wrote:

> Ter, you need a disambiguating semantic predicate, yes?  Otherwise an
> exception is thrown on the assumption that it is a validating 
> predicate.  So
> you have to have another alternative there.  I think the idiom I used 
> was:
>
> (
> 	{keepGoing}? otherRule
> 	| SOME_IMAGINARY_NEVER_GENERATED_TOKEN
> )+

Isn't

( {pred}? ... )*

an idiom or something that always includes the pred in the loop 
termination?  Don't have time to check at the moment ;)  You're right if 
not.  You would need something following the loop, generally, or an alt 
of the loop to be ambiguous with the lookahead of the alt with the pred.

> SOME_IMAGINARY_NEVER_GENERATED_TOKEN gives the loop a non-guarded
> alternative which will never be matched (because the lexer never 
> generates
> it) but gives the semantic predicate an alternative so the predicate is
> disambiguating instead of validating.  When keepGoing is false then no
> viable alternative will be found and the loop will break appropriately.
>
> For antlr 3 would it be possible to incorporate a $break() as an 
> action?  Or

Not sure what the analysis would do with that. Hmm....not sure it would 
be legal without destroying the validity of the grammar analysis.

> some other appropriate distinction between a validating and 
> disambiguating
> predicate?  People always get confused between those two anyways.  And 
> even
> in a loop with only one alternative in the loop it is appropriate to 
> have a
> disambiguating predicate to break the loop.
>
> Actually the entire role of a validating predicate merits some 
> thinking.  I
> don't think I have personally used them.  However, they could be part 
> of a
> saner, broader error handling mechanism.

My original thought was: just specify semantic validity--antlr will 
decide whether it needs to and can use the pred in a decision.  Kinda 
like just adding assertions, right?  OTOH, people only put them in when 
they want it to help disambiguate.  Perhaps only disambiguating preds 
are useful.

Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jsrs701 at yahoo.com  Wed Dec 12 12:44:39 2001
From: jsrs701 at yahoo.com (jsrs701)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] VC++ and ANTLR--a Howto (sort of)
Message-ID: <9v8fjn+s8b5@eGroups.com>


Hi gang,

After a few-month sojourn to design and construct the virtual machine 
for my little ANTLR project (a prototype-based, C-flavored scripting 
language), I'm back to working in ANTLR proper.  Whoo hoo!  
Unfortunately, as some of you may remember, my project is a VC++ 
project.  I say unfortunately because getting ANTLR and VC++ to be 
friends can be a United Nations-class peacekeeping effort.

Recently I was approached for some help in getting ANTLR to coexist 
peacefully with Visual C++.  Below is what I wrote back.

Some caveats:
* This is for Visual C++ 6.0.  Use At Your Own Risk for other 
versions.  (I think 4.0 doesn't have all the C++ language elements 
you need for Ric's code, so do yerselves a favor and score a copy of 
6.)
* The files that I mention in there can be found in the Files section 
of this list's website (http://groups.yahoo.com/group/antlr-
interest).  There you will find a zip file called "antlr_calc.zip".  
The full URL to that file is http://groups.yahoo.com/group/antlr-
interest/files/antlr_calc.zip.
* Using my libantlr project files, be warned that the debug version 
of the ANTLR lib weighs in at a whopping 2.8MB!

And on with the show...

---------------------------------------------------------

I could never get the VC++ files included in the ANTLR
distributions to work, so I made my own.

By the way, all of these instructions are for VC++
6.0.  I have no idea how they work in other versions.

First of all, put libantlr.dsw and libantlr.dsp
(attachments to this email) into your
\antlr-2.7.1\lib\cpp directory.  Open up libantlr.dsw,
and then do a Batch Build from the Build menu to build
both the Debug and Release versions.

These project files output .lib files (not DLL's!), so
they must be statically linked in the calc project.
(We'll get there in a minute.)  The debug version of
the ANTLR library ends up as
\antlr-2.7.1\lib\cpp\libantrld.lib, and the release
version ends up as \lib\cpp\libantlr.lib.

When you compile the ANTLR library, you will likely
get 4 warnings.  Ignore them--it'll work okay.

Now for the calc project!

Start by creating a new workspace project for a Win32
console program called calc.  Make sure it's saved to
the \antlr-2.7.1\examples\cpp\calc directory.

Add both the Main.cpp and calc.g files to the new
project.  VC++ won't have a clue how to handle calc.g
yet.

First, let's add the ANTLR library to the project.  Go
the Project Settings (Project menu), click on the calc
project at the top of the tree, and make sure it says
"Win32 Debug".  Now click on the Link tab, and in the
Object/library modules box, add
"\antlr-2.7.1\lib\cpp\libantlrd.lib" (without the
quotes) to the beginning.  Now change the Settings For
drop-down to "Win32 Release", and add
"\antlr-2.7.1\lib\cpp\libantlr.lib" to the same box.
You've just added the ANTLR library to the project.

Leave that window open, because now we have to tell
the project where the include files are for ANTLR!

Click on the "calc" entry at the top of the project
tree in the Project Settings window, and then select
"All Configurations" under the Settings For dropdown
on the left.  Then click on the C/C++ tab.  Select
"Preprocessor" under the Category dropdown.

Now, under "Additional include directories", add
"\antlr-2.7.1\lib\cpp" without the quotes.  Now click
OK.

Getting the .g files to compile without any problems
when you do a build is a tricky one, but it can be
done.

First, right-click on the calc.g file in the project
view, and click Settings.  Now select "All
Configurations" from the Settings For drop-down on the
project window.  Now click on the Custom Build tab.

Type something in for the description, like
"Performing Custom Build Step on $(InputPath)".

Under Commands, type:
java antlr.Tool -o $(InputDir) $(InputPath)

Under Outputs, you have to put in the name of every
file that ANTLR will generate from the .g file!  So,
for the calc project, the list will be:
CalcLexer.cpp
CalcLexer.hpp
CalcParser.cpp
CalcParser.hpp
CalcParserTokenTypes.hpp
CalcTreeWalker.cpp
CalcTreeWalker.hpp

Click OK.

Now right-click on calc.g in the Project view, and
select "Compile calc.g".  You should get a message
that it's compiling, and then get zero errors.

Now all those .cpp and .hpp files are there!  So add
them to the project!  Click on the Project menu, "Add
to Project", then "Files", and select all the .cpp and
.hpp files.  (You'll have to change the "Files of
type" dropdown to "All Files" to see the .hpp files.)

And after all that work, you're all done!  Doing a
Rebuild All will cause everything to be recompiled,
including calc.g.

Yahoo won't let me attach more than 3 files, so I'll
email my calc.dsp and calc.dsw files after this.  Just
drop them in the \antlr-2.7.1\examples\cpp\calc
directory.

After all that, you'll probably think strongly about
just doing it all on Unix using make!  :-)  I usually
work in Cygwin now, just so I can use make on Windows
ANTLR projects.

---------------------------------------------------------


Hope this helps.  Terry, I can't remember if anything like this ever 
got added anywhere to the FAQ.  If not, should I post it?

JSRS


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec 12 14:30:48 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] VC++ and ANTLR--a Howto (sort of)
In-Reply-To: <9v8fjn+s8b5@eGroups.com>
Message-ID: <E4439B99-EF4F-11D5-96D4-0030653DE0D6@jguru.com>

I Just updated the FAQ entry at jGuru:

http://www.jguru.com/faq/view.jsp?EID=203548

to include your new notes.  Please email me directly with the project 
files etc... so I can update the website contrib area. :)  Do you have 
antlr project files or just specific example project files?

Thanks,
Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From leonchiver at yahoo.de  Thu Dec 13 16:14:03 2001
From: leonchiver at yahoo.de (leonchiver)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] pls help
Message-ID: <9vbg8b+d5sa@eGroups.com>

Hi,

I have following stripped down grammar:

class MyParser extends Parser;

options {
        k = 2;
}

startRule :
        rule
        (OR rule)*;
rule :
        S
        (X startRule Y)*
        (X Y)?;

class MyLexer extends Lexer;

X : 'x';
Y : 'y';
OR : 'o';
S : 's';

for which I'm getting the warning:

nd.g:12 warning: nondeterminism upon
nd.g:12:        k==1:X
nd.g:12:        k==2:S
nd.g:12:        between alt 1 and exit branch of block

(line 12 is >>>> (X startRule Y)* <<<<)


I just can't figure out where the ambiguity comes from. For k = 1 it's clear 
that the subrules (X startRule Y)* and (X Y)? will generate an ambiguity 
but where from comes the warning for k = 2?

I would be very grateful if someone could explain me where my error 
lies. 

Thanks a lot,

Leon Chiver



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec 13 17:37:17 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] pls help
In-Reply-To: <9vbg8b+d5sa@eGroups.com>
Message-ID: <1BAB4998-F033-11D5-96D4-0030653DE0D6@jguru.com>


On Thursday, December 13, 2001, at 04:14  PM, leonchiver wrote:

> Hi,
>
> I have following stripped down grammar:
>
> class MyParser extends Parser;
>
> options {
>         k = 2;
> }
>
> startRule :
>         rule
>         (OR rule)*;
> rule :
>         S
>         (X startRule Y)*
>         (X Y)?;
>
> ...
> for which I'm getting the warning:
>
> nd.g:12 warning: nondeterminism upon
> nd.g:12:        k==1:X
> nd.g:12:        k==2:S
> nd.g:12:        between alt 1 and exit branch of block
>
> (line 12 is >>>> (X startRule Y)* <<<<)
>
>
> I just can't figure out where the ambiguity comes from. For k = 1 it's 
> clear
> that the subrules (X startRule Y)* and (X Y)? will generate an ambiguity
> but where from comes the warning for k = 2?
>
> I would be very grateful if someone could explain me where my error
> lies.

The answer lies in the diff between approx and full LL(k) lookahead.  S 
can appear in *a* place at k=2 but not necessarily after X directly.  It 
would be OR S as far as I can guess.  X S is the path that chooses to 
enter loop (X startRule Y)*.  XY is the path choosing (X Y)? but must be 
combined with path that ignores (X Y)?.  OR S is the path ignoring (X 
Y)? and looping in the (OR rule)* to have OR followed by FIRST(rule), 
which is S.    Merging lookahead at k=1 and then k=2 you have k=1: 
{OR,X} then k=2:{S,Y}.  So enter loop induced by X S that intersections 
with lookahead for exit.

This is a limitation of the parser not your understanding.  The solution 
is to shuffle your grammar a bit.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec 15 13:04:57 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:35 2004
Subject: [antlr-interest] ANTLR source code formatting...
Message-ID: <652AD392-F19F-11D5-96D4-0030653DE0D6@jguru.com>

Perhaps a dumb question, but...

I can have my IDE (Intellij's IDEA) run over all ANTLR source and format 
the code according the style I've set.  Code is still pretty messed up 
from when VAJ used to dump the code.  Even if you don't like the style 
it uses, at least it would be consistent now, right?

I'll try to have it leave Ric's C++ code generator alone as it's the way 
he wants it.

So, shall I let the IDE reformat everything?

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From bob at werken.com  Sat Dec 15 14:14:02 2001
From: bob at werken.com (bob mcwhirter)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ANTLR source code formatting...
In-Reply-To: <652AD392-F19F-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <Pine.LNX.3.96.1011215171304.14594B-100000@exeter.exeter.org>

> So, shall I let the IDE reformat everything?

Sounds fine by me.  Like you said, even if we don't like the
particular style it uses, at least is consistent.  And that's
better than nothing.

	-bob


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec 15 14:27:08 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] fixed static bitset init problem etc...
Message-ID: <E00357A0-F1AA-11D5-96D4-0030653DE0D6@jguru.com>

Just an update on things.  Couple of nice changes I just made:

*** Made antlr.Tool.doEverything() return a code instead of 
System.exit.  made a wrapper
to do the exit for cmd-line tools.  Makes it much easier for ANT build 
tool to call ANTLR for those interested in doing so.

*** ["Bryan O'Sullivan" <bryan@bea.com> submitted fix] Used to generic 
lots of static arrays, but bugs in java impl restrict number/size of 
static arrays you can have.  Answer was to put array init into static 
methods and then return array.  Changed from:

         private static final long _tokenSet_0_data_[] = 
{ -2305803976550907904L, 383L, 0L, 0L };
         public static final BitSet _tokenSet_0 = new 
BitSet(_tokenSet_0_data_);

to

         private static final long[] mk_tokenSet_0() { long[] data = 
{ -2305803976550907904L, 383L, 0L, 0L }; return data; }
         public static final BitSet _tokenSet_0 = new 
BitSet(mk_tokenSet_0());

Seems to slow things down a tiny bit at start up not sure if it's 
significant; -Xprof showed nothing bizarre.

My head is still fuzzy from being sick, but I'm starting to make a bit 
of progress on 2.7.2 :)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sun Dec 16 16:00:52 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] discovering min antlr runtime jar
Message-ID: <22B3F453-F281-11D5-96D4-0030653DE0D6@jguru.com>

Howdy folks,

I ran "java -verbose ..." on all examples in the examples/java dir and 
found a unique list of classes needed during runtime for those examples 
and those inputs.  Clearly there is no such thing as a single 
"representative" example that will load all necessary classes, but doing 
a static class dependency list instead is way overkill.  Seems like, 
since the list of classes is unlikely to change much, should we get a 
combined list of classes to include from everybody?

Christian spelled out his classes in:

http://groups.yahoo.com/group/antlr-interest/message/4592

with some good suggestions about shuffling a few methods around to get 
them out of class Tool.

For my tests, I ran

java -verbose Main Test.java | grep antlr\. | grep Loaded | awk '{print 
$2;}'|sed 's/\]//'

to list the fully qualified class names.  I couldn't find a free tool 
that handled stuff within code blocks (i.e., classes that were used 
without a class field referencing them) so no static analysis.

Hmm...I wish there was a better way.  Maybe running a static analyzer on 
an output parser is the right answer.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From bob at werken.com  Sun Dec 16 20:19:53 2001
From: bob at werken.com (bob mcwhirter)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] discovering min antlr runtime jar
In-Reply-To: <22B3F453-F281-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <Pine.LNX.3.96.1011216231758.19117C-100000@exeter.exeter.org>

> For my tests, I ran
> 
> java -verbose Main Test.java | grep antlr\. | grep Loaded | awk '{print 
> $2;}'|sed 's/\]//'
> 
> to list the fully qualified class names.  I couldn't find a free tool 
> that handled stuff within code blocks (i.e., classes that were used 
> without a class field referencing them) so no static analysis.
> 
> Hmm...I wish there was a better way.  Maybe running a static analyzer on 
> an output parser is the right answer.

Well, howdy.

A while ago, I wrote a nifty tool that used this cool parser-generator
called Antlr, that attempted to do static analysis of dependencies
between java files.

	http://code.werken.com/

It's called werken.javad, and is even listed in the Antlr showcase.

It may do what you want.

	-bob


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sun Dec 16 20:39:23 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] discovering min antlr runtime jar
In-Reply-To: <Pine.LNX.3.96.1011216231758.19117C-100000@exeter.exeter.org>
Message-ID: <0B21697A-F2A8-11D5-96D4-0030653DE0D6@jguru.com>


On Sunday, December 16, 2001, at 08:19  PM, bob mcwhirter wrote:

>> For my tests, I ran
>>
>> java -verbose Main Test.java | grep antlr\. | grep Loaded | awk '{print
>> $2;}'|sed 's/\]//'
>>
>> to list the fully qualified class names.  I couldn't find a free tool
>> that handled stuff within code blocks (i.e., classes that were used
>> without a class field referencing them) so no static analysis.
>>
>> Hmm...I wish there was a better way.  Maybe running a static analyzer 
>> on
>> an output parser is the right answer.
>
> Well, howdy.
>
> A while ago, I wrote a nifty tool that used this cool parser-generator
> called Antlr, that attempted to do static analysis of dependencies
> between java files.
>
> 	http://code.werken.com/
>
> It's called werken.javad, and is even listed in the Antlr showcase.
>
> It may do what you want.

Silly me.  I thought I'd heard of something interesting that did this.

Bob to the rescue!  Woohoo!

Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From amoll-mailer at libp.com  Tue Dec 18 00:10:20 2001
From: amoll-mailer at libp.com (Andre Moll)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Novice-Question: Understanding $setType; how to use
In-Reply-To: <E00357A0-F1AA-11D5-96D4-0030653DE0D6@jguru.com>
Message-ID: <NEBBIGIAILKIKLCOMLMMIELPEBAA.amoll-mailer@libp.com>

I have difficults to understand how to change the TokenType within a rule.

If I do this the Parser never recognize it. I added a small example which
interprets HTML files and a small extract of the debug output.

The Lexer only recognize the '<title>' TAG. Any other TAG is going to the
FILTER Rule and I want to set the TokenType to GEN_OTAG or GEN_CTAG with
$setType(GEN_OTAG).

The Filter is working fine so far as I interpret my output, but the Parser
only recognize the TITLE and TEXT Tokens which aren't defined in the FILTER.

Seems I have not understood how to change the TokenType in general. Or do I
have to use $setToken for changing the TokenType if I want to have the
Parser recognize it?

I hope somebody can help.

Regradz Andre

---------
 [2001-12-18 16:04:10:409]: lexer debug: GEN_OTAG
 [2001-12-18 16:04:10:415]: lexer debug: TEXT
 [2001-12-18 16:04:10:422]: parser debug: TEXT
 [2001-12-18 16:04:10:427]: lexer debug: GEN_OTAG
 [2001-12-18 16:04:10:432]: lexer debug: TEXT
 [2001-12-18 16:04:10:437]: parser debug: TEXT
 [2001-12-18 16:04:10:443]: lexer debug: GEN_OTAG
 [2001-12-18 16:04:10:448]: lexer debug: TEXT
 [2001-12-18 16:04:10:452]: parser debug: TEXT
 [2001-12-18 16:04:10:458]: lexer debug: OTITLE
 [2001-12-18 16:04:10:462]: parser debug: OTITLE
 [2001-12-18 16:04:10:468]: lexer debug: TEXT
 [2001-12-18 16:04:10:473]: parser debug: TEXT
 [2001-12-18 16:04:10:479]: lexer debug: GEN_CTAG
 [2001-12-18 16:04:10:484]: lexer debug: TEXT
 [2001-12-18 16:04:10:489]: parser debug: TEXT
 [2001-12-18 16:04:10:499]: lexer debug: GEN_OTAG
 [2001-12-18 16:04:10:504]: lexer debug: TEXT
 [2001-12-18 16:04:10:509]: parser debug: TEXT
----------------------------------------------------------------------------
----

---------
header {
#include <iostream>
}


options {
	language="Cpp";
}

{
// Global additional Parser Stuff start


void HTMLParser::debug_out(const string & s){
	cout << s << endl;
};

// Global additional Parser Stuff end
}


class HTMLParser extends Parser;
options {
	exportVocab=HTML;
	k = 1;
	//defaultErrorHandler = false;
}

{
// internal additional Parser stuff start

protected: virtual void debug_out(const string & s);

//internal additional Parser stuff stop
}

document
		:(document_content)+ {debug_out("document");}
		;

document_content
		:TEXT		{debug_out("TEXT");}
		|GEN_OTAG	{debug_out("GEN_OTAG");}
		|GEN_CTAG	{debug_out("GEN_CTAG");}
		|OTITLE		{debug_out("OTITLE");}
		;


///////////////////////////////////
///                             ///
///     LEXER STARTS HERE       ///
///                             ///
///////////////////////////////////

{
// Global additional Lexer Stuff start

void HTMLLexer::error_out(const string & s){
	std::cerr << s << std::endl;
}

void HTMLLexer::debug_out(const string & s){
	std::cout << s << std::endl;
}

// Global additional Lexer Stuff end
}

class HTMLLexer extends Lexer;
options {
	k = 4;
	exportVocab=HTML;
	charVocabulary = '\3'..'\377';
	caseSensitive=false;
	filter=FILTER;
}


{
// internal additional Lexer stuff start

protected: virtual void error_out(const string & s);
protected: virtual void debug_out(const string & s);

//internal additional Lexer stuff stop
}

OTITLE	:"<title>" {debug_out("OTITLE");}
		;


TEXT	:((~('<')))+
		{
		debug_out("TEXT");
		}
		;

protected
FILTER	:'<' (~'/') ((~('<'|'>')))* '>'
			{
			$setType(GEN_OTAG);
			debug_out("GEN_OTAG");
			}
		|"</" ((~('<'|'>')))* '>'
			{
			$setType(GEN_CTAG);
			debug_out("GEN_CTAG");
			}
		;



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From amoll-mailer at libp.com  Tue Dec 18 01:45:53 2001
From: amoll-mailer at libp.com (Andre Moll)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] How to set a Token within the Filterrule (was 'Understanding $setType; how to use')
In-Reply-To: <NEBBIGIAILKIKLCOMLMMIELPEBAA.amoll-mailer@libp.com>
Message-ID: <NEBBIGIAILKIKLCOMLMMCEMKEBAA.amoll-mailer@libp.com>

Meanwhile I understood that it is not that I misunderstood the usage of
$setType, but I wasn't aware that the Filter Rule doesn't return a Token
(which is obviosly clear).

How can I force the FILTER rule to set a Token which is recognized by the
Parser.

What I want to do is just set a general GEN_OTAG/GEN_CTAG for every TAG
which is not particular specified in any previous lexical rule. Is there
maybe another way (without using filtermechanism) to realise this?

I would be very grateful if somebody could send me an example how to make
this.

Thx Andre


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Tue Dec 18 08:50:39 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] How to set a Token within the Filterrule (wa
	s 'Understanding $setType; how to use')
Message-ID: <170826586F3BD511910D0200C110AAA801C58114@memail03.bco-home.com>

A filter will filter tokens out of the stream going to the parser, so that's
not what you want.

Rename your filter rule to TAG, make it unprotected, set the
testLiterals=true option, and remove the OTITLE rule and instead make
<title> a literal.

Monty

> -----Original Message-----
> From: Andre Moll [mailto:amoll-mailer@libp.com]
> Sent: Tuesday, December 18, 2001 1:46 AM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] How to set a Token within the 
> Filterrule (was
> 'Understanding $setType; how to use')
> 
> 
> Meanwhile I understood that it is not that I misunderstood 
> the usage of
> $setType, but I wasn't aware that the Filter Rule doesn't 
> return a Token
> (which is obviosly clear).
> 
> How can I force the FILTER rule to set a Token which is 
> recognized by the
> Parser.
> 
> What I want to do is just set a general GEN_OTAG/GEN_CTAG for 
> every TAG
> which is not particular specified in any previous lexical 
> rule. Is there
> maybe another way (without using filtermechanism) to realise this?
> 
> I would be very grateful if somebody could send me an example 
> how to make
> this.
> 
> Thx Andre
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
http://docs.yahoo.com/info/terms/ 



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mos-craciun at adicomsoft.ro  Wed Dec 19 04:50:20 2001
From: mos-craciun at adicomsoft.ro (Bunul si Iubitul Mos Craciun)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Beginner question: How do I access stuff from my parser?
Message-ID: <KFEPLLNMMFKGKKJMHBABCEDPCAAA.mos-craciun@adicomsoft.ro>


Hello Antlr folks and HAPPY NEW YEAR!!! (first of all...)

My name is Cosmin Prund, I'm from Romania and I'm trying hard to learn
Antlr.
It seemns to me that Antlr is a GRATE tool, much better then yacc and lex
(from an superficial point-of-view: antlr generates "classes" and it's
lexers scan from an stream, while lex/yacc generate a bunch of C-code, and
lex-lexers read from stdin or a file). My attempt to use lex+yacc resulted
in a bunch of scanners and an C-like preprocessor writen BY HAND!

So this is my question: "How do I access stuff that was matched in my Lexer
from my Parser?".

Also this question seems quite simple (I hope it is!) it is just a small
part of my problems. In fact, it could be easily be re-writen as: "What is
the interface betwen Lexers (token-streams?) and Parsers?".

I think this is the time to say I'm using Antlr with Visual C++.

This is what I've done so far:
1) I read most of the "antlr manual". That is, I read everithing up to
tree-parsers.
2) I searched the Web for documentations on ANTLR.
3) I read the examples.
4) I made a off-line copy of "www.antlr.org".
5) I made a off-line copy of
"http://wwwhome.cs.utwente.nl/~klaren/antlr/support-docs".
6) I wrote small-simple-lexers and followd the generated code to see if I
could guest what antlr is doing.
But I ran into the following dead-end:
I found out that MyLexer::NextToken() returns a reference to a token
generated by something called "tokenFactory". Also I noticed a call to some
function "setText" on that reference that was suposed to set the text into
that token. So far-so god you might say... but the default tokenFactory
generated TokenRef has a setText function that looks like this: "{}". That
is, it doesn't set a thing! When I reached this end-point I sad to myself:
Hey! I can change tokenFactory to return something that does remember text!
So I moved on to code generated for my parser, and this is where I got stock
again.

Maby I tryed to hard to learn Antlr and I overlooked something obvious
(again, I hope so!).

Thank-you for your answer!


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Wed Dec 19 05:36:29 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: Antlr grammar to parse Java classfile?
Message-ID: <01121914264107.00769@hun.bre.de>

Hi!

Just wanted to let you know, that the Antlr grammar has just succesfully parsed
a HelloWorld classfile. If anyone is interested to take a look, let me know.
But I have to warn you. There no reasonable AST construction yet, it's not very
readable due to lots of System.out statements for debugging purposes (that I
won't remove yet, because there's still some debugging to do) and I have no
clue, if it'll work with more complex class files. I've just started the
treeparser and still have to figure to do major tree transformations in the
parser grammar, so I'll get links to the *info structures in the AST instead of
the indexes in the constant pool (if you never studied the classfile format,
you won't know what the cp is. Don't bother. You don't have to know to be a
great Java developer).
I guess the performance is also way too bad to be usable at all. But I've used
the most simple construction to do the job for now. I can think of lots of
tuning options, that I might add, when the thing is actually working.

Ciao,
Andreas

PS: Yiiippiiieee!!! :-)

PS2: I've just realized, that looking at a classfile with khexedit is enough
for me to read most of the info. I guess, if I'd add bytecode reverse
engineering to the grammar, I could execute the file in my mind with no running
JVM at all. ;-)

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From bogdan_mt at yahoo.com  Wed Dec 19 05:49:57 2001
From: bogdan_mt at yahoo.com (Bogdan Mitu)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Beginner question: How do I access stuff from my parser?
In-Reply-To: <KFEPLLNMMFKGKKJMHBABCEDPCAAA.mos-craciun@adicomsoft.ro>
Message-ID: <20011219134957.19853.qmail@web14809.mail.yahoo.com>

Hi Cosmin,

Check also http://www.jguru.com/forums/ANTLR. 

Merry Christmas,
Bogdan

--- Bunul si Iubitul Mos Craciun <mos-craciun@adicomsoft.ro> wrote:
> 
> Hello Antlr folks and HAPPY NEW YEAR!!! (first of all...)
> 
> My name is Cosmin Prund, I'm from Romania and I'm trying hard to learn
> Antlr.
> It seemns to me that Antlr is a GRATE tool, much better then yacc and lex
> (from an superficial point-of-view: antlr generates "classes" and it's
> lexers scan from an stream, while lex/yacc generate a bunch of C-code, and
> lex-lexers read from stdin or a file). My attempt to use lex+yacc resulted
> in a bunch of scanners and an C-like preprocessor writen BY HAND!
> 
> So this is my question: "How do I access stuff that was matched in my
> Lexer
> from my Parser?".
> 
> Also this question seems quite simple (I hope it is!) it is just a small
> part of my problems. In fact, it could be easily be re-writen as: "What is
> the interface betwen Lexers (token-streams?) and Parsers?".
> 
> I think this is the time to say I'm using Antlr with Visual C++.
> 
> This is what I've done so far:
> 1) I read most of the "antlr manual". That is, I read everithing up to
> tree-parsers.
> 2) I searched the Web for documentations on ANTLR.
> 3) I read the examples.
> 4) I made a off-line copy of "www.antlr.org".
> 5) I made a off-line copy of
> "http://wwwhome.cs.utwente.nl/~klaren/antlr/support-docs".
> 6) I wrote small-simple-lexers and followd the generated code to see if I
> could guest what antlr is doing.
> But I ran into the following dead-end:
> I found out that MyLexer::NextToken() returns a reference to a token
> generated by something called "tokenFactory". Also I noticed a call to
> some
> function "setText" on that reference that was suposed to set the text into
> that token. So far-so god you might say... but the default tokenFactory
> generated TokenRef has a setText function that looks like this: "{}". That
> is, it doesn't set a thing! When I reached this end-point I sad to myself:
> Hey! I can change tokenFactory to return something that does remember
> text!
> So I moved on to code generated for my parser, and this is where I got
> stock
> again.
> 
> Maby I tryed to hard to learn Antlr and I overlooked something obvious
> (again, I hope so!).
> 
> Thank-you for your answer!
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 
> 
> 


__________________________________________________
Do You Yahoo!?
Check out Yahoo! Shopping and Yahoo! Auctions for all of
your unique holiday gifts! Buy at http://shopping.yahoo.com
or bid at http://auctions.yahoo.com

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Fri Dec 21 03:05:59 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] How much abstraction would use recommend?
Message-ID: <01122112213801.00767@hun.bre.de>

Hi!

You may know that I'm working on a grammar for Java classfiles. I'm no expert
on Antlr (although I've used it for a few years) or grammars. So I'd like to
ask you for advice.
I think I've the parser for classfile working and now I'm working on the
treeparser. I'd like to use the treeparser for the ArgoUML project, so I could
import class- and jar files. That works in Argo via a Modeller (written by
Marcus Andersson), that you pass values like classnames, attributes etc. and
that'll create the corresponding UML elements for you. However, a classfile
looks very different. It's mainly content is a so called constant pool, that
holds data structures for classes, UTF8 strings and so on. Then follows the
actual data structures for the compiled class, which are mainly index fields to
constant pool entries. So I have to dereferences those fields somehow.
I could do this in some modeller utility class, but I'd rather like to have a
comfortable parser, that does it for me. So I added some code to the parser to
do the dereferences and construct a tree, that holds the info, like it's rather
structured in a source file. My treeparser has rules like
=======================================
class_info
	: CLASS_NAME { System.out.println("Classname: " + #CLASS_NAME.getText()); }
	;
=======================================
, so you can directly acces the classname here, and don't have to care about
the constant pool data structures at all. In fact I left the constant pool
completely out of the generated AST at all.
What do you think is better: 
Keep the parser close the classfile structure and
pass all the info to the user of the parser, but let him deal with all the
classfile structures (that he has to learn then first)?
Or hide most of the classfile details and make the usage of the parser very
comfortable, so the user gets all the info plain in the rules, so he doesn't
have to understand the classfile structure at all?

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Christoph.Wedler at sap.com  Fri Dec 21 03:43:07 2001
From: Christoph.Wedler at sap.com (Christoph.Wedler@sap.com)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] antlr-mode 2.1; Emacs major mode for ANTLR grammar files
Message-ID: <q7u3d244x4k.fsf@hw1020.wdf.sap-ag.de>

Version 2.1 of ANTLR-mode has been uploaded.

   http://www.fmi.uni-passau.de/~wedler/antlr-mode/

ANTLR is a tool for LL(k)-based language recognition.  This Emacs
extension provides various features for the development of ANTLR grammar
files, see below.

v1.4a of this mode is distributed with Emacs-21.1.
v1.0/beta of this mode is distributed with ANTLR-2.7.1.
   (Ter, I hope it's not too late to get v2.1 into ANTLR-2.7.2...)

Thanks to the people having sent patches & suggestions, see the
ChangeLog file.


New in ANTLR-mode 2.1:

 * New command+menus to insert/change file/grammar/rule/subrule options.

 * More sophisticated indentation: electric keys, cpp directive,
   narrowing.
   
 * Previous versions would not work with cc-mode-5.28+ (already in
   v1.4a, i.e., the version distributed with Emacs-21.1).

 * Syntax highlighting changes.  Miscellaneous.


Features of ANTLR-mode:

 * CONSISTENT INDENTATION. You do not have to insert or delete the
   correct amount of spaces or tabs manually to indent a line according
   to ANTLR's coding style: just press TAB. It is even done
   automatically if you insert an ANTLR syntax symbol (one of
   ":;|&(){}"). Use the menu to indent all lines in a selected region.

 * SYNTAX HIGHLIGHTING. When enabled, this mode highlights grammar
   symbols (syntax symbols and keywords: bold black, rule references:
   dark blue, token references: dark orange, rule/token definition: bold
   blue) and the code in actions (respecting the value of ANTLR's
   language option).

 * CODE BROWSING. Find the definition of a rule, token, or grammar class
   by using the Index menu, a keyboard command or selecting an entry in
   the speedbar frame.

 * FAST NAVIGATION. Move to the next or previous rule definition or to
   the beginning or end of the rule body by one or two key strokes.
   
 * ACTION VISIBILITY. Control the visibility of less important code like
   actions.

 * OPTION SUPPORT. Insert or change one of ANTLR's options by a using
   the menu or a keyboard command. This mode knows the options supported
   by ANTLR, their allowed values and the correct position where to
   insert the option (and the surrounding options{} if necessary).

 * TOOL INVOCATION. Run ANTLR from within Emacs and find the error
   position by selecting the error message via the mouse or a keyboard
   command.

 * MAKEFILE CREATION. Show the makefile dependencies for all grammar and
   generated files in the current directory. For it, this mode considers
   the value of ANTLR's language option, import/export vocabularies and
   grammar inheritance.

- Christoph

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec 21 11:58:05 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] antlr-mode 2.1; Emacs major mode for ANTLR grammar files
In-Reply-To: <q7u3d244x4k.fsf@hw1020.wdf.sap-ag.de>
Message-ID: <0C41CF3E-F64D-11D5-9BCD-0030653DE0D6@jguru.com>


On Friday, December 21, 2001, at 03:43  AM, Christoph.Wedler@sap.com 
wrote:

> Version 2.1 of ANTLR-mode has been uploaded.
>
>    http://www.fmi.uni-passau.de/~wedler/antlr-mode/
>
> ANTLR is a tool for LL(k)-based language recognition.  This Emacs
> extension provides various features for the development of ANTLR grammar
> files, see below.
>
> v1.4a of this mode is distributed with Emacs-21.1.
> v1.0/beta of this mode is distributed with ANTLR-2.7.1.
>    (Ter, I hope it's not too late to get v2.1 into ANTLR-2.7.2...)

I'll grab it... :)

Thanks, Christoph!

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jsrs701 at yahoo.com  Fri Dec 21 13:48:44 2001
From: jsrs701 at yahoo.com (jsrs701)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: How much abstraction would use recommend?
In-Reply-To: <01122112213801.00767@hun.bre.de>
Message-ID: <a00ans+8tfo@eGroups.com>

--- In antlr-interest@y..., Andreas Rueckert <a_rueckert@g...> wrote:
> What do you think is better: 
> Keep the parser close the classfile structure and
> pass all the info to the user of the parser, but let him deal with 
all the
> classfile structures (that he has to learn then first)?
> Or hide most of the classfile details and make the usage of the 
parser very
> comfortable, so the user gets all the info plain in the rules, so 
he doesn't
> have to understand the classfile structure at all?

Howdy, Andreas,

I hope I'm not completely misunderstanding the point of your project, 
but I'd say you should DEFINITELY hide the classfile details from the 
user.  The .class file format is obnoxious.  You can't even execute 
it in place without doing a lot of preprocessing!  Ugh!

If your project isn't too proprietary, can you publish your class 
file parser?  Ter's been wanting one to throw around for years.

Good luck,
JSRS



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From chris_rudolph at apple.com  Fri Dec 21 21:21:48 2001
From: chris_rudolph at apple.com (Chris Rudolph)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Merry Christmas
Message-ID: <B849586C.48BC%chris_rudolph@apple.com>

Hey there buddy,

Tammy, Cassidy and I were thinking of you and wanted to wish you the best
for the holiday season. Hope you are doing well and keep in touch.

Cheers,
Rudy.

PS. Here is our Xmas letter:

'Twas the week before Christmas with internet shopping.
Tammy and Chris had UPS hopping.
A thousand bulbs were planted by Tammy with care,
In hopes that Spring soon would be there.
Cassidy was settled and in love with preschool.
She thinks letters, numbers, and friends are real cool.

Chris is busy as an elf in his workshop,
A million things to do before he can stop.
With a pergola and a library to create,
Medicine cabinets and a kitchen table to make.
There is moulding to put up and to paint,
Thinking of it all makes him want to faint.

For help with the backyard there have many to praise.
Friends came for visits and were worked like slaves.
Then what to our wondering eyes should appear,
A beautiful backyard that makes our hearts give cheer.
With a large brick patio and borders filled with flowers,
?To front yard? yells Tammy ?Dark will be here in an hour!?

More rapid than Martha, the ideas they came.
Tammy?s working from dawn, drove Chris insane.
?Now Chris! Now Cassidy! Now Oscar! Now Frodo!
Plant Roses! Plant Smokebushes! Plant grasses! Pronto!
Pile on the compost and don?t be slow.
We have to get this done before the first snow!?

But as Autumn leaves began to fall
Tammy decided she wasn?t done at all.
Away to the Hamptons, Tammy she flew.
She plotted and planted and redid their yard too.
Chris also was busy, he is not one to slack.
He took up scuba, and achieved in Karate, a belt that is black.

We were out of breath and needed some rest.
We bought a little trailer we think is the best.
It is shaped like an egg and is seventeen feet.
It has a microwave, a shower, and central air for heat.

Cassidy, wow over the year she grew.
She is taking ballet, tap, and tumbling too.
She finally sleeps and lets us rest,
For that alone we think she is the best.

Her eyes full of mischief, her laughter so fun!
She?s cheeky and silly all rolled into one.
She speaks loads of words and never stops talking.
We hope Santa leaves a volume control in our stocking.

At Nana and Papa?s the family will meet.
Tammy will be baking many wonderful treats.
With Auntie Kelly, Uncle Ted and Cousin Sean there as well.
This Christmas is sure to be swell.

But we must say goodbye from our home to yours,
Merry Christmas to all, and to all our amour.

-- 
Chris Rudolph, AppleWorks Engineering
chris_rudolph@apple.com



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From shiva at mbu.iisc.ernet.in  Fri Dec 21 21:56:53 2001
From: shiva at mbu.iisc.ernet.in (B.V.L.S.Prasad)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Merry Christmas
In-Reply-To: <B849586C.48BC%chris_rudolph@apple.com>
Message-ID: <Pine.LNX.4.33.0112221126080.7619-100000@mbu.iisc.ernet.in>


Hi all,
	Merry Christmas and A very Happy New Year - 2002

Prasad.

On Fri, 21 Dec 2001, Chris Rudolph wrote:

> Hey there buddy,
> 
> Tammy, Cassidy and I were thinking of you and wanted to wish you the best
> for the holiday season. Hope you are doing well and keep in touch.
> 
> Cheers,
> Rudy.
> 
> PS. Here is our Xmas letter:
> 
> 'Twas the week before Christmas with internet shopping.
> Tammy and Chris had UPS hopping.
> A thousand bulbs were planted by Tammy with care,
> In hopes that Spring soon would be there.
> Cassidy was settled and in love with preschool.
> She thinks letters, numbers, and friends are real cool.
> 
> Chris is busy as an elf in his workshop,
> A million things to do before he can stop.
> With a pergola and a library to create,
> Medicine cabinets and a kitchen table to make.
> There is moulding to put up and to paint,
> Thinking of it all makes him want to faint.
> 
> For help with the backyard there have many to praise.
> Friends came for visits and were worked like slaves.
> Then what to our wondering eyes should appear,
> A beautiful backyard that makes our hearts give cheer.
> With a large brick patio and borders filled with flowers,
> ?To front yard? yells Tammy ?Dark will be here in an hour!?
> 
> More rapid than Martha, the ideas they came.
> Tammy?s working from dawn, drove Chris insane.
> ?Now Chris! Now Cassidy! Now Oscar! Now Frodo!
> Plant Roses! Plant Smokebushes! Plant grasses! Pronto!
> Pile on the compost and don?t be slow.
> We have to get this done before the first snow!?
> 
> But as Autumn leaves began to fall
> Tammy decided she wasn?t done at all.
> Away to the Hamptons, Tammy she flew.
> She plotted and planted and redid their yard too.
> Chris also was busy, he is not one to slack.
> He took up scuba, and achieved in Karate, a belt that is black.
> 
> We were out of breath and needed some rest.
> We bought a little trailer we think is the best.
> It is shaped like an egg and is seventeen feet.
> It has a microwave, a shower, and central air for heat.
> 
> Cassidy, wow over the year she grew.
> She is taking ballet, tap, and tumbling too.
> She finally sleeps and lets us rest,
> For that alone we think she is the best.
> 
> Her eyes full of mischief, her laughter so fun!
> She?s cheeky and silly all rolled into one.
> She speaks loads of words and never stops talking.
> We hope Santa leaves a volume control in our stocking.
> 
> At Nana and Papa?s the family will meet.
> Tammy will be baking many wonderful treats.
> With Auntie Kelly, Uncle Ted and Cousin Sean there as well.
> This Christmas is sure to be swell.
> 
> But we must say goodbye from our home to yours,
> Merry Christmas to all, and to all our amour.
> 
> 

-- 
Be Happy, 
Enjoy Life.
with love 
shiva.
********************************************************************
*   If the Problem is Clear, the Solution is  Near.    ...shiva... *
********************************************************************


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Sat Dec 22 02:27:56 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: How much abstraction would you recommend? (funny misspelling corrected :)
In-Reply-To: <a00ans+8tfo@eGroups.com>
References: <a00ans+8tfo@eGroups.com>
Message-ID: <01122211433201.00768@hun.bre.de>

Hi!

On Fre, 21 Dez 2001 jsrs701 wrote:

--<snip>--
 
> Howdy, Andreas,
> 
> I hope I'm not completely misunderstanding the point of your project, 
> but I'd say you should DEFINITELY hide the classfile details from the 
> user.  The .class file format is obnoxious.  You can't even execute 
> it in place without doing a lot of preprocessing!  Ugh!

The problem with this is, that you get a classfile parser, that does some
complex preprocessing and is therefore not very well suited as a example for
binary parsing. That was one of the things, I wanted to use it for.
On the other hand, the example won't make any sense to you, if you don't have a
clue about the classfile format, anyway.

That's a example of the current code:
=======================================
// Info on the main class
class_info!
{ short class_info_index = 0; }         // A index of a entry in the constant pool.
        : class_info_index=u2
          {
            ShortAST class_info = (ShortAST)getConstant((int)class_info_index & 0xffff);
            String class_name = getConstant(class_info.getShortValue());
            #class_info = #[CLASS_NAME, class_name];
          }
        ;       
=======================================
getConstant(int index) gets a entry from the constant pool. The class_info in
the classfile holds a index to a class_info structure in the constant pool. The
class_info structure holds a index to a UTF8 String constant in the pool. I
dereference both and create a AST node, that holds the class_name directly. Is
this easy enough to understand? Maybe add more comments to explain the details?

> If your project isn't too proprietary, can you publish your class 
> file parser?  Ter's been wanting one to throw around for years.

I know. One of the reasons why I wanted to do this. He helped the ArgoUML
project a lot with his work, so I thought we should give something back. I want
to assign the copyright for the 2 parser to Ter, so he could include it in the
Antlr release. Some other code, that should be used in a ArgoUML reverse
engineering framework have to be under BSD, so they can be included in the Argo
release. I'm thinking about a dual license for the rest. GPL-like for non
commercial use, but a different license for commercial use, so some money could
be made that could go to a ArgoUML foundation to promote the use of Argo.

> Good luck,

Thanks! But things look good, that something will come out of this. I'm too far
to drop the project now. Jars are already parsed and some stuff shows up in
Argo, even if it's not complete yet.

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec 22 17:32:41 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] tab handling in ANTLR
Message-ID: <F4CCD8C8-F744-11D5-9D27-0030653DE0D6@jguru.com>

Folks,

Currently, you have to implement method tab() in your lexer to get it to 
track tabs as anything other than 1 char.  I did this for flexibility.  
You might want tabs to count in some weird way.  The common case isn't 
handled well though where you want it to count tabs as 4 or 8 or 
whatever columns.  Here is what I said in the 2.7.1 release notes:

>   added column tracking support; tabs are counted as 1 unless you 
> override
>   tab().  Called from consume(); bumps by one by default.  Overhead is
>   minimal; only called on tabs.  extra increment for all consume()s now
>   extra int in CommonToken now.
>
>     /** advance the current column number by an appropriate amount.
>      *  If you do not override this to specify how much to jump for
>      *  a tab, then tabs are counted as one char.  This method is
>      *  called from consume().
>      */
>     public void tab() {
> 	// update inputState.column as function of
> 	// inputState.column and tab stops.
> 	// For example, if tab stops are columns 1 and 5 etc...
> 	// and column is 3, then add 2 to column.
> 	inputState.column++;
>     }
>
>     added CharScanner.setColumn

So, the question is: "should I add typical case tab handling"?  I.e., 
should I add:

	protected int tabsize = 8;

	public void tab() {
		int c = getColumn();
		int nc = ( ((c-1)/tabsize) + 1) * tabsize + 1;      // 
calculate tab stop
		setColumn( nc );
	}

	public int setTabsize( int size ) {
		int oldsize = tabsize;
	  	tabsize = size;
		return oldsize;
	}

to the default Lexer stuff?  Speak now or forever hold your peace as 
they say...I'm rapidly trying to get thru my "fix it" list for 2.7.2. :)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Matthew.Ford at forward.com.au  Sat Dec 22 18:45:39 2001
From: Matthew.Ford at forward.com.au (Matthew Ford)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] tab handling in ANTLR
References: <F4CCD8C8-F744-11D5-9D27-0030653DE0D6@jguru.com>
Message-ID: <000c01c18b5b$eed4e8e0$0300a8c0@matthewfnb>

At the very least this code should be  in the comments/docs so people know
what to do.
matthew
----- Original Message -----
From: "Terence Parr" <parrt@jguru.com>
To: "ANTLR mailinglist" <antlr-interest@yahoogroups.com>
Sent: Sunday, December 23, 2001 12:32 PM
Subject: [antlr-interest] tab handling in ANTLR


> Folks,
>
> Currently, you have to implement method tab() in your lexer to get it to
> track tabs as anything other than 1 char.  I did this for flexibility.
> You might want tabs to count in some weird way.  The common case isn't
> handled well though where you want it to count tabs as 4 or 8 or
> whatever columns.  Here is what I said in the 2.7.1 release notes:
>
> >   added column tracking support; tabs are counted as 1 unless you
> > override
> >   tab().  Called from consume(); bumps by one by default.  Overhead is
> >   minimal; only called on tabs.  extra increment for all consume()s now
> >   extra int in CommonToken now.
> >
> >     /** advance the current column number by an appropriate amount.
> >      *  If you do not override this to specify how much to jump for
> >      *  a tab, then tabs are counted as one char.  This method is
> >      *  called from consume().
> >      */
> >     public void tab() {
> > // update inputState.column as function of
> > // inputState.column and tab stops.
> > // For example, if tab stops are columns 1 and 5 etc...
> > // and column is 3, then add 2 to column.
> > inputState.column++;
> >     }
> >
> >     added CharScanner.setColumn
>
> So, the question is: "should I add typical case tab handling"?  I.e.,
> should I add:
>
> protected int tabsize = 8;
>
> public void tab() {
> int c = getColumn();
> int nc = ( ((c-1)/tabsize) + 1) * tabsize + 1;      //
> calculate tab stop
> setColumn( nc );
> }
>
> public int setTabsize( int size ) {
> int oldsize = tabsize;
>   tabsize = size;
> return oldsize;
> }
>
> to the default Lexer stuff?  Speak now or forever hold your peace as
> they say...I'm rapidly trying to get thru my "fix it" list for 2.7.2. :)
>
> Ter
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org
>
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>
>


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec 22 19:01:00 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] tab handling in ANTLR
In-Reply-To: <000c01c18b5b$eed4e8e0$0300a8c0@matthewfnb>
Message-ID: <4B87E088-F751-11D5-9D27-0030653DE0D6@jguru.com>


On Saturday, December 22, 2001, at 06:45  PM, Matthew Ford wrote:

> At the very least this code should be  in the comments/docs so people 
> know
> what to do.

Ok, thanks.  Can anybody think of a reason why I should handle tabs 
"normally" by default?  You can set the tabsize or override tab() 
completely.  Make sense?

Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sat Dec 22 19:14:30 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ANTLR updates made today
Message-ID: <2E4352A0-F753-11D5-9D27-0030653DE0D6@jguru.com>

More updates...racing towards 2.7.2a1 release :)

Later,
Ter
-------------------------------------
12-22-01:

*** moved strip*(...) methods from Tool to StringUtils; updated mkjar 
accordingly.

*** added Version 2.1 of ANTLR-mode from Christoph.Wedler@sap.com

*** bug fix: a #(pippo) construct, which isn't allowed, caused a nullptr 
exception with kaffe.
It shouldn't get an exception.  It now shows: "unexpected token: pippo" 
instead.

*** a double ;; in antlr.g action and lots of unnecessary semis were 
causing kjc to puke.

*** the constructors of antlr/CharQueue.java and antlr/TokenQueue.java 
didn't check
for int overflow. They try to set queue size to the next higher multiple
of 2, which is not possible for all inputs (Integer.MAX_VALUE == 
2^15-1). The
constructor loops forever for some inputs.  Checked for huge size 
requests.

*** Ric added code to not write output files if they have not changed 
(Java and C++).

*** Added default tab char handling; defaults to 8.  Added methods to 
CharScanner:
     public void setTabSize( int size );
     public int getTabSize();

*** The CharScanner.rewind(int) method did not rewind the column, just 
the input state. oops.
     It now reads:
     public void rewind(int pos) {
         inputState.input.rewind(pos);
         setColumn(inputState.tokenStartColumn); // ADDED
     }

--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Matthew.Ford at forward.com.au  Sat Dec 22 19:44:32 2001
From: Matthew.Ford at forward.com.au (Matthew Ford)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] tab handling in ANTLR
References: <4B87E088-F751-11D5-9D27-0030653DE0D6@jguru.com>
Message-ID: <001301c18b64$2260e350$0300a8c0@matthewfnb>

I was slightly worried about loosing the connection between the column count
and the actual characters for error outputs to the user. (personally I set
tabs to 4).
Actually in my application I expand tabs to 4 spaces before passing to Antlr
to ensure that some indenting is maintained and the column count indicates
the error position.
I assume the tab() method is for error messages (to return the 'correct'
column count)
Actually I think antlr needs more than just this.  It need something like a
line buffer that can be retrieved so you can show the user the offending
input line and the column count.  I my application I have a pre-filter that
keeps track of the input lines and saves them for possible use in error
routines.
This email is getting waffly but what I think I am saying is that just
adding tab() does not solve the problem as far as I am concerned and what
ever default you choose will be 'wrong'  so if you put it in I would vote
for a default of 1 for tab() so existing code works as before and let the
user over-ride as they like.
matthew
----- Original Message -----
From: "Terence Parr" <parrt@jguru.com>
To: <antlr-interest@yahoogroups.com>
Sent: Sunday, December 23, 2001 2:01 PM
Subject: Re: [antlr-interest] tab handling in ANTLR


>
> On Saturday, December 22, 2001, at 06:45  PM, Matthew Ford wrote:
>
> > At the very least this code should be  in the comments/docs so people
> > know
> > what to do.
>
> Ok, thanks.  Can anybody think of a reason why I should handle tabs
> "normally" by default?  You can set the tabsize or override tab()
> completely.  Make sense?
>
> Ter
>
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>
>


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From a_rueckert at gmx.net  Sun Dec 23 02:07:21 2001
From: a_rueckert at gmx.net (Andreas Rueckert)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ASTFactory.dup*
Message-ID: <01122311092301.00767@hun.bre.de>

Hi!

I just learned yesterday, that the dup* methods don't work as expected, if you
use various types of AST nodes and cannot set the default AST type therefore.
They return a CommonAST node, instead of the typ, that is passed to them. I've
already found a workaround for me, but maybe using some clone() method in the
dup* methods would be better?

Ciao,
Andreas

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Sun Dec 23 13:52:22 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ASTFactory.dup*
In-Reply-To: <01122311092301.00767@hun.bre.de>
Message-ID: <5848EE08-F7EF-11D5-9D27-0030653DE0D6@jguru.com>


On Sunday, December 23, 2001, at 02:07  AM, Andreas Rueckert wrote:

> Hi!
>
> I just learned yesterday, that the dup* methods don't work as expected, 
> if you
> use various types of AST nodes and cannot set the default AST type 
> therefore.
> They return a CommonAST node, instead of the typ, that is passed to 
> them. I've
> already found a workaround for me, but maybe using some clone() method 
> in the
> dup* methods would be better?

Ouch.  Good point.  dup should pay attention to types...hmmm...I wonder 
how that can be made efficient.  Oh, each heterogeneous AST node must 
define dup or clone or whatever.

Anybody remember why I used dup instead of clone?  Probably a type issue 
since I hate typecasting return types from clone() etc...

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From chicheongweng at hotmail.com  Mon Dec 24 00:30:50 2001
From: chicheongweng at hotmail.com (chicheongweng)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Need help on developing a GUI frontend for a debugger
Message-ID: <a06p3q+psgk@eGroups.com>

Hello,
I have an inferior commandline debugger (very much like
gdb). Does any one know if there is any freeware debugger
GUI frontend (like ddd) that I can connect my debugger to ?
Chi-Cheong 


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From malitrait at start.com.au  Mon Dec 24 08:03:53 2001
From: malitrait at start.com.au (kemmerzehl)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Calc example LPAREN/RPAREN
Message-ID: <a07jl9+m12d@eGroups.com>

Hi,
  This is my first exposure to parsing etc. so please excuse my 
ignorance. As an excersize in trying and figure this stuff out i set 
myself the task of modifying the calc example to support input such 
as "(5+4)*3;" but i cannot figure out what im supposed to do. I know 
you guys probably hate these messages but im having trouble getting 
my head around this and i havent been able to find "The Complete 
Idiots Guide to ANTLR" or "ANTLR for Dummies" anywhere. Any help 
would be greatly appreciated.
  I've also noticed that you have the lexer creating the tokens 
LPAREN and RPAREN yet these tokens are not being referenced by the 
parser, and the example doesn't accept them as valid input - if they 
are not being used why are the there?

Thanks,
-Kemmerzehl


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 24 14:14:31 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ANTLR Java Code Generation
In-Reply-To: <9sr3g0+el9s@eGroups.com>
Message-ID: <9A7FD3BE-F8BB-11D5-9D27-0030653DE0D6@jguru.com>

Christian,

Seems like this ought to be combined with the optimization I just put 
that makes individual static methods for each bitset intialization due 
to the overflow of the main static{} section.  Does your solution run 
into problems with huge static{} sections?  For example, 2.7.2a1 is 
generating stuff like this:

private static final long[] mk_tokenSet_26() {
	long[] data = { 576179277326712832L, -4611686018427281408L, 65532L, 
0L, 0L, 0L };
	return data;
}
public static final BitSet _tokenSet_26 = new BitSet(mk_tokenSet_26());

BTW, does your optimization only reduce space for .class files or does 
it make initialization faster?  seems like it would be about the same as 
you are doing the same number of operations minus loop overhead, right?

Ter

On Tuesday, November 13, 2001, at 04:25  AM, christian.ernst@poet.de 
wrote:

> Hy Folks !
>
> While working with ANTLR i recognized a few thinks which could be
> changed in the Java Code Generation:
>
> I
> The generated Code for your BitSet's looks like:
>
> private static final long _tokenSet_0_data_[] = { -549755813896L,
> -268435457L}
> public static final BitSet _tokenSet_0 = new
> BitSet(_tokenSet_0_data_);
>
> On some grammars for example the java.g for the Java Lexer with
> UNICODE
> these Array's are getting realy big but containing mostly Sequences of
> the same Value
>
> First Case :
> private static final long _tokenSet_0_data_[] = { -549755813896L,
> -268435457L, -1L, -1L, -1L, -1L, -1L, -1L, -1L, -1L,......};
> or
> Second Case:
> private static final long _tokenSet_0_data_[] = { -549755813896L,
> -268435457L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,......};
>
> The Problem with these large Array's is what ByteCode for such
> Statements is generated. It looks like:
> 1. create Array long _tokenSet_0_data_[] with size n
> 2. put -549755813896L at 0
> 3. put -268435457L at 1
> 4. put -1L at 2
> .....
> n. put -1L at n
>
> Some Java Compilers ( Sun 1.2.2, Sun 1.8 ) recognize that for example
> in
> the second Case, where the rest of the Array is 0L, no initialzing is
> needed,
> because 0L is the default of an long Array, but these was changed in
> the
> current new Compilers( Sun JDK 1.3.1) back to the Long Version with
> initilalizing every member. ( i don't now why exactly, but should have
> something to do with a bug with inheritence)
>
> But in our case we know that is only used temporay until we use it in
> the same Class for initializing our static BitSet.
> So we should change this to the way how the Java Compiler rewrites our
> Code.
> One useful thing we could use is a static block( static{...} ) for
> this
> job
>
> Example one:
> private static final long _tokenSet_0_data_[] =  {
> 1,2,3,4,5,-1L,-1L,-1L,-1L,-1L,0L,0L,13,0L,0L,-1L,-1L,-1L,-1L,-1L };
> public static final BitSet _tokenSet_0 = new
> BitSet(_tokenSet_0_data_);
>
> will be generated as following:
> public static final BitSet _tokenSet_0;
> static {
>      // initializing BitSet _tokenSet_0
>      long _tokenSet_0_data_[] = new long[20];
>      _tokenSet_0_data_[0] = 1L;
>      _tokenSet_0_data_[1] = 2L;
>      _tokenSet_0_data_[2] = 3L;
>      _tokenSet_0_data_[3] = 4L;
>      _tokenSet_0_data_[4] = 5L;
>      for(int i = 5 ; i <= 9 ; i++) { _tokenSet_0_data_[i] = -1L; }
>      _tokenSet_0_data_[12] = 13L;
>      for(int i = 15 ; i <= 19 ; i++) { _tokenSet_0_data_[i] = -1L; }
>      _tokenSet_0 = new BitSet(_tokenSet_0_data_);
> }
>
> So if BitSets are large but containing lots of long identical
> Sequences
> this is  more efficient !
> For example see JAVA 1.3 ANTLR Grammar for the Lexer
> With this Solution you can cut down the size of the
> JAVA Lexer Source File from 100k to 53k and the Class File from 93k to
> 18k
>
> ---------------------------------------
> Patch:
> ---------------------------------------
> ---------------------------------------
> Package:
> antlr.collections.impl
> Class:
> BitSet
> Todo:
> add new Method for accessing the internal long Array named:
> toLongArray()
> --------------------------------------
> Code:
> --------------------------------------
> /**
>  * helper Method for getting the internal Array of Word's (bits
> long[])
>  * is needed for generating nicer Java Code
>  * @return long[]
>  */
> public long[] toLongArray() {
>  return bits;
> }
> ---------------------------------------
> ---------------------------------------
> Package:
> antlr
> Class:
> JavaCodeGenerator
> Todo:
> modify the Java Code Generation method  named: genBitsets(Vector
> bitsetList, int maxVocabulary)
> ---------------------------------------
> Code:
> ---------------------------------------
> /** Generate all the bitsets to be used in the parser or lexer
>  * Generate the raw bitset data like "long _tokenSet1_data[] = {...};"
>  * and the BitSet object declarations like "BitSet _tokenSet1 = new
> BitSet(_tokenSet1_data);"
>  * Note that most languages do not support object initialization
> inside
> a
>  * class definition, so other code-generators may have to separate the
>  * bitset declarations from the initializations (e.g., put the
> initializations
>  * in the generated constructor instead).
>  * @param bitsetList The list of bitsets to generate.
>  * @param maxVocabulary Ensure that each generated bitset can contain
> at
> least this value.
>  */
> protected void genBitsets(Vector bitsetList, int maxVocabulary)
> {
>
>     for (int i = 0; i < bitsetList.size(); i++)
>     {
>         BitSet p = (BitSet) bitsetList.elementAt(i);
>         // Ensure that generated BitSet is large enough for vocabulary
>         p.growToInclude(maxVocabulary);
>     }
>
>     // generate the Java Code
>
>     // in some Conditions these Bitsets are containing
>     // long sequence of identical bits
>     // if we initialize these long sequences with
>     // long bits[] = {
> 434324,3234,623,-1L,-1L,-1L,-1L,0L,0L,0L,0L,...};
>
>     // Bitset set = new Bitset(bits);
>     // the Class Files gets realy huge
>     // the reason is that for every element in the declaration
>     // inside {} the java compiler generates bytecode
>     // which is equal to bits[i] = element
>     // even when the element is 0 and for sequences
>     // generating these initializer on our own we can
>     // optimize that
>     // by not initializing 0
>     // by using loops for long sequences
>     // in addition these make in average the Java Source also smaller
>
>     // for example see JAVA 1.3 ANTLR Grammar for the Lexer
>     // with this solution you can cut down the size of the
>     // JAVA Lexer Source from 100k to k 53K
>     // and the Class File from 93k to k 18K
>
>     println("");
>     // declare our static variable for our Bitset's
>     for (int i = 0; i < bitsetList.size(); i++)
>     {
>         println("public static final BitSet " + getBitsetName(i)
> +";");
>     }
>
>     // generate the static block for initializing
>     println("");
>     println("// BitSet initializing ");
>     println("static {");
>     for (int i = 0; i < bitsetList.size(); i++)
>     {
>         long bits[] = ((BitSet)
> bitsetList.elementAt(i)).toLongArray();
>
>         int bitLength = bits.length;
>
>         println("    // initializing BitSet " + getBitsetName(i));
>         println("    long " + getBitsetName(i) + "_data_" + "[] = new
> long[" + bitLength + "];");
>
>         int seqStartIndex = 0;
>         boolean seq = false;
>         for (int index = 0; index < bitLength; index++)
>         {
>             // next ? next is identical  ? => sequence
>             if((index + 1 < bitLength) && (bits[index] == bits[index +
> 1]))
>             {
>                 seq = true;
>             }
>             else
>             {
>                 // next not identical
>                 // sequence ending generate code for sequence ?
>                 if (seq)
>                 {
>                     // generate code only if sequence isn't 0L
>                     if (bits[index] != 0L)
>                     {
>                         print("    for(int i = " + seqStartIndex + "
> ;
> i
> <= " + index + " ; i++) {");
>                         print(getBitsetName(i) + "_data_" + "[i] = " +
> bits[index] + "L;");
>                         println("}");
>                     }
>                     // sequence over
>                     seq = false;
>                 }
>                 else
>                 {
>                     // generate normal code
>                     println("    "+getBitsetName(i) + "_data_" + "[" +
> index + "] = " + bits[index] + "L;");
>                 }
>                 seqStartIndex = index + 1;
>             }
>         }
>         println("    "+getBitsetName(i)+ " = new
> BitSet("+getBitsetName(i) + "_data_); ");
>         println("");
>     }
>     // end of the static block
>     println("}");
> }
> ------------------------------------------
>
> mfg
> christian
>
>
>
>
>
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/
>
>
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 24 14:19:16 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] merged Ric's changes into main ANTLR line
In-Reply-To: <3C0B5E6C.2EF381F@poet.de>
Message-ID: <445FD8D2-F8BC-11D5-9D27-0030653DE0D6@jguru.com>


On Monday, December 3, 2001, at 03:13  AM, Christian Ernst wrote:

> Hy !
>
> Terence Parr wrote:
>
>>  I have about 10 things that I want to fix before releasing a 2.7.2
>> version.
>
> I would be intertested if it would contains changes for:
>
> 1. The Java Generator  for generating smaller static array 
> initializer !?

It turns out (after rereading all the posts) that I have done only the 
break up of static{} for bitset init to one static method per bitset.  
I'll see if I can squeeze in the optimization that 0L values are not set.

> 2. Cutting down the size of the Java Runtime library !?
>     ( removing any dependicies to antlr/Tool class, adding a class for 
> string
> manipulation ?!)

I have moved strip*() string methods out of Tool and changed 
Tool.warning references from ASTFactory to be calls to a member method 
called error(), which you can override and then set Parser.setASTFactory 
if you want errors going somewhere else.  Tool.class is no longer in my 
mkjar routine, but I still haven't gotten a great method of determining 
whether I have all the necessary classes.  I'll look at your list again.

Terence
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 24 15:58:57 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] bugs fixed today
Message-ID: <31540A74-F8CA-11D5-9D27-0030653DE0D6@jguru.com>

More status...I'm closing in on my final bugs to fix for this 
release. :)  Woohoo!

Ter
-------------------------------------------------------
12-24-01:

*** bug fix.  The lexer generator puts this assignment _after_ inserting
everything into the literals table: caseSensitiveLiterals = false;
Of course it needs to be before since ANTLRHashString depends on
it to calculate the hashCode.  Not sure when this got fixed actually. 
Ric?

*** Code gen bug fix: "if true {" could be generated sometimes in
the Lexer.  I put (...) around an isolated true if it's generated
from JavaCodeGenerator.getLookaheadTestExpression.

*** ANTLR used to generate a crappy error message:

warning: found optional path in nextToken()

when a public lexer rule could be optional such as

B : ('b')? ;

I now say:

warning: public lexical rule B is optional (can match "nothing")

*** For unexpected and no viable alt exceptions, no file/line/column 
info was generated.
The exception was wrapped in a TokenStreamRecognitionException that did 
not delegate error message
handling (toString()) to the wrapped exception.
I added a TokenStreamRecognitionException.toString() method so that you 
now see things like

<stdin>:1:1: unexpected char: '_'

instead of

antlr.TokenStreamRecognitionException: unexpected char: '_'

*** For large numbers of alternatives (>126) combined with syntactic 
predicates, there was a problem
whereby the syn pred testing code was not there.  2.7.1 introduced this 
problem. 2.7.2 has it right again.

--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 24 16:54:45 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] comments on suggestion to reduce tree construction code size
Message-ID: <FD5B74B4-F8D1-11D5-9D27-0030653DE0D6@jguru.com>

Folks,

Somebody suggested removing the syn pred gate around tree construction 
actions.  The rationale is that an invoked rule can build whatever tree 
it wants during guess mode, because the invoker will ignore the result 
in the try block.  Later, if pred was successful, it will be re-executed 
with "actions on" and the return ast will be used.

For example, the call to explicitConstructorInvocation can build 
whatever it wants as the returnAST is only used in the "if 
( synPredMatched55 ) {...}" block.

if ( ...) {
         int _m55 = mark();
         synPredMatched55 = true;
         inputState.guessing++;
         try {
                 explicitConstructorInvocation();
         }
         catch (RecognitionException pe) {
                 synPredMatched55 = false;
         }
         rewind(_m55);
         inputState.guessing--;
}
if ( synPredMatched55 ) {
         explicitConstructorInvocation();
         if (inputState.guessing==0) {
                 astFactory.addASTChild(currentAST, returnAST);
         }
}

So, the code in explicitConstructorInvocation() such as:

if (inputState.guessing==0) {
    astFactory.addASTChild(currentAST, returnAST);
}

could become the unguarded

astFactory.addASTChild(currentAST, returnAST);

This would result in a big code size savings, but at the cost of 
run-time size and speed.  Clearly building trees is a waste and 
memory-allocation in java is a pig.  This waste would actually only 
occur when you were "guessing".  All other times might see a small speed 
increase since you don't have to test the "syn pred gates" everywhere.

I just removed the gates on a test version of ANTLR and ran it on the 
java grammar.  Parsing all of ANTLR code itself without gates is 17sec 
on my G4 450Mhz OS X box versus the regular 19sec.  Roughly 10% one 
could say.  Code size is reduced from 5551 lines to 4709 lines of java 
code for JavaRecognizer.  134388k vs 115163k characters.  In lines of 
code it's about 17% smaller.  The JavaRecognizer.class file falls from 
54092 to 47296 bytes (14% reduction).  I couldn't learn much from the 
various profiling options on the interpreter to see what the cost in 
memory allocation was.  Sorry.

So, how do you vote?  Can anybody think of a reason we cannot remove 
gates around my tree construction routines?  No doubt they are still 
needed on random user actions.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From malitrait at start.com.au  Mon Dec 24 21:28:16 2001
From: malitrait at start.com.au (kemmerzehl)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: Calc example LPAREN/RPAREN
In-Reply-To: <a07jl9+m12d@eGroups.com>
Message-ID: <a092pg+nh69@eGroups.com>

--- In antlr-interest@y..., "kemmerzehl" <malitrait@s...> wrote:
> Hi,
>   This is my first exposure to parsing etc. so please excuse my 
> ignorance. As an excersize in trying and figure this stuff out i 
set 
> myself the task of modifying the calc example to support input such 
> as "(5+4)*3;" but i cannot figure out what im supposed to do. I 
know 
> you guys probably hate these messages but im having trouble getting 
> my head around this and i havent been able to find "The Complete 
> Idiots Guide to ANTLR" or "ANTLR for Dummies" anywhere. Any help 
> would be greatly appreciated.
>   I've also noticed that you have the lexer creating the tokens 
> LPAREN and RPAREN yet these tokens are not being referenced by the 
> parser, and the example doesn't accept them as valid input - if 
they 
> are not being used why are the there?
> 
> Thanks,
> -Kemmerzehl

Ignore previous message, after some sleep i conquered it. I must say 
it was alot easier than i thought. my parser now looks like this:

class CalcParser extends Parser;
options {
    buildAST = true;   // uses CommonAST by default
}
formula: expr SEMI!
    ;
expr:   mexpr (PLUS^ mexpr)*
    ;
mexpr
    :   atom (STAR^ atom)*
    ;
atom:   (INT|pexpr)
    ;
pexpr: LPAREN! expr RPAREN!
    ;

..simple!
Although, i am still a little confused as to why the LPAREN and 
RPAREN tokens were there in the first place, but that is beside the 
point.

Sorry to be a bother and thanks Terence this is really quite cool!
-Kemmerzehl


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Tue Dec 25 12:07:37 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: Calc example LPAREN/RPAREN
In-Reply-To: <a092pg+nh69@eGroups.com>
Message-ID: <0B020823-F973-11D5-9D27-0030653DE0D6@jguru.com>


On Monday, December 24, 2001, at 09:28  PM, kemmerzehl wrote:
> Ignore previous message, after some sleep i conquered it. I must say
> it was alot easier than i thought. my parser now looks like this:
>
> class CalcParser extends Parser;
> options {
>     buildAST = true;   // uses CommonAST by default
> }
> formula: expr SEMI!
>     ;
> expr:   mexpr (PLUS^ mexpr)*
>     ;
> mexpr
>     :   atom (STAR^ atom)*
>     ;
> atom:   (INT|pexpr)
>     ;
> pexpr: LPAREN! expr RPAREN!
>     ;
>
> ..simple!

yup.

> Although, i am still a little confused as to why the LPAREN and
> RPAREN tokens were there in the first place, but that is beside the
> point.

I probably just left over some cut-n-paste stuff from another lexer.

>
> Sorry to be a bother and thanks Terence this is really quite cool!

Glad it is of use to you!

Terence
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Wed Dec 26 07:16:37 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] comments on suggestion to reduce tree constr
	uction code size
Message-ID: <170826586F3BD511910D0200C110AAA801C5812B@memail03.bco-home.com>

> Parsing all of ANTLR code itself without gates is 17sec 
> on my G4 450Mhz OS X box versus the regular 19sec

I'm scratching my head as to why the version without gates ran faster than
the one with gates?  Are the if()s taking more time than just creating the
AST node?

To make this scheme work, you would have to make sure that your initialize()
methods in your node class were side-effect free.  Folks with heterogenous
trees might be more inclined to do table adds in their initialize(),
perhaps?  I suppose that the guessing state could be passed to the
initializer....or for that matter to the factory which could then just not
build a tree, right?

I like that better.  astFactory.create() returns nullAST if currently
guessing.  Will addASTChild and friends deal with that ok?  Will a java
optimizer cache inputState.guessing==0 for those tests?  Probably not--can't
guarantee another thread won't muck with it.  The generated code could have
a boolean in the method, updated only upon entry to the method and on every
guessing++ and guessing--.

Monty

> -----Original Message-----
> From: Terence Parr [mailto:parrt@jguru.com]
> Sent: Monday, December 24, 2001 4:55 PM
> To: ANTLR mailinglist
> Subject: [antlr-interest] comments on suggestion to reduce tree
> construction code size
> 
> 
> Folks,
> 
> Somebody suggested removing the syn pred gate around tree 
> construction 
> actions.  The rationale is that an invoked rule can build 
> whatever tree 
> it wants during guess mode, because the invoker will ignore 
> the result 
> in the try block.  Later, if pred was successful, it will be 
> re-executed 
> with "actions on" and the return ast will be used.
...

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec 26 10:50:14 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] comments on suggestion to reduce tree constr uction code size
In-Reply-To: <170826586F3BD511910D0200C110AAA801C5812B@memail03.bco-home.com>
Message-ID: <6598E53E-FA31-11D5-9D27-0030653DE0D6@jguru.com>


On Wednesday, December 26, 2001, at 07:16  AM, mzukowski@bco.com wrote:

>> Parsing all of ANTLR code itself without gates is 17sec
>> on my G4 450Mhz OS X box versus the regular 19sec
>
> I'm scratching my head as to why the version without gates ran faster 
> than
> the one with gates?  Are the if()s taking more time than just creating 
> the
> AST node?

That's what I thought at first until I realized that the gates are 
always being executed while the wasted ast creation is only done while 
"guessing", which by design is done infrequently.  Somehow, removing the 
gates wins over the infrequent but expensive memory allocation.  
Probably depends a lot on the garbage collector's efficiency at 
reallocating objects of a common.

> To make this scheme work, you would have to make sure that your 
> initialize()
> methods in your node class were side-effect free.  Folks with 
> heterogenous

Very true.  But that makes sense I'd say.  We could make it a rule :)

> trees might be more inclined to do table adds in their initialize(),
> perhaps?  I suppose that the guessing state could be passed to the
> initializer....or for that matter to the factory which could then just 
> not
> build a tree, right?

Sure...ASTFactory.create() could also just ask the parser (have to add a 
ref to the parser in there though).  That would be like executing all of 
the gates again though.

> I like that better.  astFactory.create() returns nullAST if currently
> guessing.  Will addASTChild and friends deal with that ok?  Will a java

Hm...probably not.

> optimizer cache inputState.guessing==0 for those tests?  Probably 
> not--can't

maybe not across method calls.

> guarantee another thread won't muck with it.  The generated code could 
> have
> a boolean in the method, updated only upon entry to the method and on 
> every
> guessing++ and guessing--.

I'm thinking we can get away with saying that creation of nodes (even 
hetero nodes) must be side effect free.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Wed Dec 26 11:04:29 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] comments on suggestion to reduce tree constr
	 uction code size
Message-ID: <170826586F3BD511910D0200C110AAA801C5812F@memail03.bco-home.com>

OK, I buy all that.  

I think someone else recommended separate methods to use when guessing v.
when not.  Would be interesting to see how much faster that would be than
just eliminating guards.  Would be significantly bigger code size.
Shouldn't be hard to add though.

Monty

> -----Original Message-----
> From: Terence Parr [mailto:parrt@jguru.com]
> Sent: Wednesday, December 26, 2001 10:50 AM
> To: antlr-interest@yahoogroups.com
> Subject: Re: [antlr-interest] comments on suggestion to reduce tree
> constr uction code size
> 
> 
> 
> On Wednesday, December 26, 2001, at 07:16  AM, 
> mzukowski@bco.com wrote:
> 
> >> Parsing all of ANTLR code itself without gates is 17sec
> >> on my G4 450Mhz OS X box versus the regular 19sec
> >
> > I'm scratching my head as to why the version without gates 
> ran faster 
> > than
> > the one with gates?  Are the if()s taking more time than 
> just creating 
> > the
> > AST node?
> 
> That's what I thought at first until I realized that the gates are 
> always being executed while the wasted ast creation is only 
> done while 
> "guessing", which by design is done infrequently.  Somehow, 
> removing the 
> gates wins over the infrequent but expensive memory allocation.  
> Probably depends a lot on the garbage collector's efficiency at 
> reallocating objects of a common.
> 
> > To make this scheme work, you would have to make sure that your 
> > initialize()
> > methods in your node class were side-effect free.  Folks with 
> > heterogenous
> 
> Very true.  But that makes sense I'd say.  We could make it a rule :)
> 
> > trees might be more inclined to do table adds in their initialize(),
> > perhaps?  I suppose that the guessing state could be passed to the
> > initializer....or for that matter to the factory which 
> could then just 
> > not
> > build a tree, right?
> 
> Sure...ASTFactory.create() could also just ask the parser 
> (have to add a 
> ref to the parser in there though).  That would be like 
> executing all of 
> the gates again though.
> 
> > I like that better.  astFactory.create() returns nullAST if 
> currently
> > guessing.  Will addASTChild and friends deal with that ok?  
> Will a java
> 
> Hm...probably not.
> 
> > optimizer cache inputState.guessing==0 for those tests?  Probably 
> > not--can't
> 
> maybe not across method calls.
> 
> > guarantee another thread won't muck with it.  The generated 
> code could 
> > have
> > a boolean in the method, updated only upon entry to the 
> method and on 
> > every
> > guessing++ and guessing--.
> 
> I'm thinking we can get away with saying that creation of nodes (even 
> hetero nodes) must be side effect free.
> 
> Ter
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/ 
> 
> 
> 

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Wed Dec 26 12:40:02 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] matching the longest token in the lexer
Message-ID: <BCB5D2CC-FA40-11D5-9D27-0030653DE0D6@jguru.com>

Howdy,

I have resolved the biggest remaining issue in my 'to do' list for 
2.7.2: how to handle an ambiguous lexer construct that people expect to 
be matched properly.  Recall the discussion concerning k=3 problem where 
input "**" (two stars) did not work as expected; i.e., it did not lex as 
two STAR tokens, but rather ANTLR claimed a failed TRIPLE_STAR:

STAR : '*' ;
TRIPLE_STAR : "***" ;

Here's a piece of our conversation:

> > Terence grunted:
> > Heh, I just realized that it's ambiguous not nondeterministic.  I mean
> > that *** is both *** token and 3 * tokens.  The language itself is
> > ambiguous.
>
> "Bogdan Mitu" <bogdan@nobugconsulting.ro> hath spoken:
> Ter, the "stars" language is not more ambiguous then Java or many other
> languages. In Java we have ">>>", which is both >>> and 3 > tokens, to 
> quote
> you ;-). The salvation is that ">>" is also a token, if we remove it, 
> the
> rules '>' and ">>>" would have to be rewritten.

So, the STAR vs TRIPLE_STAR language is strictly speaking ambiguous, but 
so is if-then-else and > vs >>> etc... in Java.  In those cases, the 
parser/lexer just happen to work properly by "matching input as soon as 
possible."

In the STAR case, you need to resolve the ambiguity by having the 
language manual and lexer say "match the longest possible char sequence 
(token)", which is not what ANTLR does by default in all cases.  The 
"match as soon as possible" rule often coincides with this rule and 
therefore works most of the time.

You expect that k=3 should see *** and say TRIPLE_STAR not 3 STAR 
tokens.  DFA based lexers such as lex, flex, etc... all implement a form 
of backtracking to do this "match longest" thing.  As the characters 
direct the automaton, at least the most recent "accept state" is tracked 
and lexing continues if the input would allow another transition.  If 
that continuation fails, the lexer simply rolls back to the last known 
good accept state.  So, DFA lexers backtrack to solve this problem.

In principle, finite static lookahead of k=3 can solve this problem as 
in the patch sent to me by Bogdan himself.  Unfortunately, it only fixes 
the degenerate case of "match longest" where an alternative is a proper 
substring of the another.  I feel strongly that it would surprise people 
that it worked there and not in other nearly cases.  I also worry about 
changes to the analysis as I have no good set of unit tests for it. :(

My philosophy with ANTLR has always been to "let people say what they 
mean" and not try to do too much automatic stuff that makes ANTLR either 
inefficient in many cases or simply mysterious.  [The other day, I 
flicked an inappropriate sequence of buttons on my Volvo remote entry 
thing and it entered an unanticipated state in the car's automaton.  It 
took me 15 minutes to figure out how to get the stupid car into a known 
state and to get the interior lights to shut off etc...  One would go 
off but not the other and then vice versa.  I hate things that try to be 
smart with all of this automatic light stuff.  If I want the lights on, 
by gawd, I'll turn the bastards on!].

Ahem...where was I? ;)  Oh right.  Fortunately, you can simply tell 
ANTLR to do what other lexers do in this situation: backtrack.

STAR
     :    ("***") => "***" {$setType(TRIPLE_STAR);}
     |    '*'
     ;

Now, you are really explicitly stating that you intend 3 stars to match 
TRIPLE_STAR, a formal means to resolve the language ambiguity.  The best 
part is that ANTLR will eventually handle these simple, fixed syn preds 
by using finite lookahead (i.e., w/o backtracking).  Regardless, ANTLR 
generates something that is pretty efficient already.  In the case of 
single star, it immediately jumps to alt 2.  In case of two stars, it 
enters a try block to match ***, which fails costing us an exception 
throw; it falls to alt 2, matching one of the stars.  For 3 stars, it 
costs us two match("***") calls but no exception.  It works and is not 
that expensive. :)

Here is what ANTLR (partially) generates:

     boolean synPredMatched3 = false;
     if (((LA(1)=='*') && (LA(2)=='*'))) {
       int _m3 = mark();
       synPredMatched3 = true;
       inputState.guessing++;
       try {
         match("***");
       }
       catch (RecognitionException pe) {
         synPredMatched3 = false;
       }
       rewind(_m3);
       inputState.guessing--;
     }
     if ( synPredMatched3 ) {
       match("***");
       if ( inputState.guessing==0 ) {
         _ttype = TRIPLE_STAR;
       }
     }
     else if ((LA(1)=='*') && (true)) {
       match('*');
     }

In summary, after much thought, I have decided not to alter the analysis 
for this special case.

Best regards,
Terence
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From remi.koutcherawy at wanadoo.fr  Thu Dec 27 00:41:01 2001
From: remi.koutcherawy at wanadoo.fr (Remi Koutcherawy)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Returning from a sub-parser with no end token.
Message-ID: <000501c18eb2$373dbb80$c814a8c0@Remi>

I use sub-lexers and sub-parser to decode multiple formats in a single file.
This a great ANTLR feature as I can parse radically different portions of the input,
without writing a complicated multi-format parser.

But there is a strange behavior,
 when I want the sub-parser to match an optionnal end-token :

parse: (B)+ (BBB)?

The rule should return when the token next to B is not BBB, right ?
So why does it try ALL the tokens until it matches a BBB ???

R?mi

P.S. Here is a complete working example (two files Main_Parser.g and B_Parser.g):
-----
Main parser (file Main_Parser.g)
-----
Main parser and lexer :
// Main parser ------
class Main_Parser extends Parser;
{
  static antlr.TokenStreamSelector selector = new antlr.TokenStreamSelector();

  public static void main(String[] args) {
    try {
    // This string is simulating the real file
       java.io.StringReader input = new java.io.StringReader(
       "AAA aa BBB b bb BBB AAA a a BBB b b BBB\n" // with end BBB
      + "AAA aa BBB b bb AAA a BBB b b");     // without end BBB

      Main_Lexer main = new Main_Lexer(input);
      B_Lexer b_lexer = new B_Lexer(main.getInputState());
      selector.addInputStream(main, "main");
      selector.addInputStream(b_lexer, "BBB");
      selector.select("main");

      Main_Parser parser = new Main_Parser(selector);
      parser.parse();
    }
    catch(Exception e) {
      System.err.println("exception: "+e);
      e.printStackTrace(System.err);
    }
    try {System.in.read();} catch (Exception ex) {}
  }
}

// Only one rule in the Parser for simplicity ------
parse:
 ( BBB // Matching BBB switch to B_Parser with B_Lexer
  {
   selector.push("BBB");
   B_Parser b_parser = new B_Parser(getInputState());
   b_parser.parse();
   selector.pop();
   setInputState(b_parser.getInputState());
   System.out.println("BBB parsing complete");
  }
 | ( AAA (A)+ ) // Matching AAA is done within this parser for simplicity
   {System.out.println("AAA parsing complete");}
 )+ ;

// Main lexer ------
class Main_Lexer extends Lexer;
options {  filter = WS;  k =2; }
AAA: "AAA" ;
A: 'a' ;
BBB: "BBB" ;
protected WS: (' ' | '\t' | ('\n' | '\r' |"\r\n") {newline();} ) { _ttype = Token.SKIP; } ;

-----
Subparser and sublexer (file B_Parser.g):
 -----
// B parser ------
class B_Parser extends Parser;

parse: (B)+ (BBB)? // This is ok if there is a terminating token BBB
   // If there is no token to signify the termination of the subparser.
   // This fails as the lexer consumes all invalid chars.
 ;

// B lexer ------
// How can I tell this lexer to send EOF if the char is not in his vocabulary ?
// I wish I can push back the char witch rises a NoViableAltForCharException and return
Token.EOF_TYPE.
class B_Lexer extends Lexer;
options {
 filter = WS;
 k =2;
}
BBB: "BBB" ;
B: 'b'  ;
protected WS: (' ' | '\t' | ('\n' | '\r' |"\r\n") {newline();} ) { _ttype = Token.SKIP; } ;
-----
Compiling and running :
-----
// Compile :
java -classpath E:\antlr-2.7.1 antlr.Tool Main_Parser.g
java -classpath E:\antlr-2.7.1 antlr.Tool B_Parser.g
javac -classpath E:\antlr-2.7.1\antlr.jar *.java
// Run :
java -classpath E:\antlr-2.7.1\antlr.jar;. Main_Parser
AAA parsing complete // Theses ones are OK
BBB parsing complete
AAA parsing complete
BBB parsing complete
AAA parsing complete
line 2: unexpected char: A // There in the sub-parser (BBB)+ tries and consumes unexpected token
line 2: unexpected char: A
line 2: unexpected char: A
line 2: unexpected char: a
BBB parsing complete  // Until it finds BBB and returns.
line 2: unexpected char: b // Of course, the Main_Parser doesn't recognize 'b'
line 2: unexpected char: b



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Manfred.Lotz at web.de  Thu Dec 27 21:40:45 2001
From: Manfred.Lotz at web.de (manfredlotz)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Lexer problem
Message-ID: <a0h0kt+b42s@eGroups.com>

Using the definiton shown below the lexer has a problem to recognize
tokens if they arrive in a certain order. 

E.g.,  ".a.a.b$" or ".ac$" work fine, however ".a.b$" does not.

Any idea what I have to change to make it working. I know it has to do
with the fact that ".a" is a substring of ".a.a" but I don't know how
to improve the t.g file.

Manfred
_____________________

class TLexer extends Lexer;
options {
        k=4;
        filter=IGNORE;
}

MYENDTOKEN   : '$' ;

A       :   ( ".a" | ".a.a" | ".b" | 'a' | 'c' )  ;

protected
IGNORE  : ( "\r\n" | '\r' | '\n'  ) { _ttype = Token.SKIP; };


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Thu Dec 27 22:40:10 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Lexer problem
In-Reply-To: <a0h0kt+b42s@eGroups.com>
Message-ID: <BD7B747A-FB5D-11D5-9D27-0030653DE0D6@jguru.com>


On Thursday, December 27, 2001, at 09:40  PM, manfredlotz wrote:

> Using the definiton shown below the lexer has a problem to recognize
> tokens if they arrive in a certain order.
>
> E.g.,  ".a.a.b$" or ".ac$" work fine, however ".a.b$" does not.
>
> Any idea what I have to change to make it working. I know it has to do
> with the fact that ".a" is a substring of ".a.a" but I don't know how
> to improve the t.g file.
>
> Manfred
> _____________________
>
> class TLexer extends Lexer;
> options {
>         k=4;
>         filter=IGNORE;
> }
>
> MYENDTOKEN   : '$' ;
>
> A       :   ( ".a" | ".a.a" | ".b" | 'a' | 'c' )  ;
>
> protected
> IGNORE  : ( "\r\n" | '\r' | '\n'  ) { _ttype = Token.SKIP; };

Looks ok to me.  Can you be more specific about what it says?  Try using 
-traceLexer on antlr cmd-line and then compile and run it.  See where 
it's going.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From klaren at cs.utwente.nl  Thu Dec 27 06:09:06 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] comments on suggestion to reduce tree construction code size
In-Reply-To: <FD5B74B4-F8D1-11D5-9D27-0030653DE0D6@jguru.com>; from parrt@jguru.com on Mon, Dec 24, 2001 at 04:54:45PM -0800
References: <FD5B74B4-F8D1-11D5-9D27-0030653DE0D6@jguru.com>
Message-ID: <20011227150905.D4910@cs.utwente.nl>

Hi,

On Mon, Dec 24, 2001 at 04:54:45PM -0800, Terence Parr wrote:
> Somebody suggested removing the syn pred gate around tree construction 
> actions.  The rationale is that an invoked rule can build whatever tree 
> it wants during guess mode, because the invoker will ignore the result 
> in the try block.  Later, if pred was successful, it will be re-executed 
> with "actions on" and the return ast will be used.
..snip..
> I just removed the gates on a test version of ANTLR and ran it on the 
> java grammar.  Parsing all of ANTLR code itself without gates is 17sec 
> on my G4 450Mhz OS X box versus the regular 19sec.  Roughly 10% one 
> could say.  Code size is reduced from 5551 lines to 4709 lines of java 
> code for JavaRecognizer.  134388k vs 115163k characters.  In lines of 
> code it's about 17% smaller.  The JavaRecognizer.class file falls from 
> 54092 to 47296 bytes (14% reduction).  I couldn't learn much from the 
> various profiling options on the interpreter to see what the cost in 
> memory allocation was.  Sorry.

Weird numbers. Not what I'd expect, then again it's java =)

I would like to look at this before it might go into C++ mode. My
experience with these kind of guards is that in a non critical loop the
overhead is usually neglectible. Object creation can be very costly in C++.

Also it would depend very much on the grammar and the amount of guessing
occuring. Does this work in the general case?

It also depends on coding style in antlr. If you spread around a lot of
actions which could be bundled in one action block, you'll end up with a
lot of 'guards'.

> So, how do you vote? 

In java mode I'd vote blank (leaving it to the experts), In C++ mode I'd
say no for now untill I do some experimenting.

Cheers,

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See

From klaren at cs.utwente.nl  Thu Dec 27 05:27:36 2001
From: klaren at cs.utwente.nl (Ric Klaren)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ASTFactory.dup*
In-Reply-To: <5848EE08-F7EF-11D5-9D27-0030653DE0D6@jguru.com>; from parrt@jguru.com on Sun, Dec 23, 2001 at 01:52:22PM -0800
References: <01122311092301.00767@hun.bre.de> <5848EE08-F7EF-11D5-9D27-0030653DE0D6@jguru.com>
Message-ID: <20011227142732.A4910@cs.utwente.nl>

Hi,

On Sun, Dec 23, 2001 at 01:52:22PM -0800, Terence Parr wrote:
> > I just learned yesterday, that the dup* methods don't work as expected, 
> > if you
> > use various types of AST nodes and cannot set the default AST type 
> > therefore.
> > They return a CommonAST node, instead of the typ, that is passed to 
> > them. I've
> > already found a workaround for me, but maybe using some clone() method 
> > in the
> > dup* methods would be better?
> 
> Ouch.  Good point.  dup should pay attention to types...hmmm...I wonder 
> how that can be made efficient.  Oh, each heterogeneous AST node must 
> define dup or clone or whatever.

You might have a look at the astfactory stuff in C++ mode, that does now
mostly the right thing. This is one of the reasons why that stuff should be
ported to java mode as well....

Ric
-- 
-----+++++*****************************************************+++++++++-------
    ---- Ric Klaren ----- klaren@cs.utwente.nl ----- +31 53 4893722  ----
-----+++++*****************************************************+++++++++-------
     Human beings, who are almost unique in having the ability to learn
   from the experience of others, are also remarkable for their apparent
         disinclination to do so. --- Douglas Adams, Last Chance to See


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From remi.koutcherawy at wanadoo.fr  Fri Dec 28 01:50:20 2001
From: remi.koutcherawy at wanadoo.fr (Remi Koutcherawy)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Returning from a sub-parser with no end token.
References: <000501c18eb2$373dbb80$c814a8c0@Remi>
Message-ID: <002b01c18f85$10534700$c814a8c0@Remi>

OK, looking at the generated code, I found a solution.
Rather simple, just four added lines of code, works well even with AST.

Nevertheless I feel awkward to reference "parse_AST" which is a variable in the generated code not
declared in the grammar, clumsy also to throw an exception and catch another ;-)

Any other idea ?
Albeit modifying the generator to add a new option to generate such a behavior can be considered.

R?mi Koutcherawy
_____________________

// B parser ------
class B_Parser extends Parser;
options {
 buildAST=true;
}
parse: (B)+ (BBB!)?
  ;
exception catch [antlr.TokenStreamException ex]
 { parse_AST = (AST)currentAST.root; }

// B lexer ------
class B_Lexer extends Lexer;
options {
 filter = WS;
 k =2;
}
BBB: "BBB"
 ;
B: 'b'
 ;
protected
WS: (' ' | '\t' | ('\n' | '\r' |"\r\n") {newline();} )
 { _ttype = Token.SKIP; }
 ;
exception catch [NoViableAltForCharException ex]
 { throw new CharStreamException("EndToken"); }


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From mzukowski at bco.com  Fri Dec 28 06:37:54 2001
From: mzukowski at bco.com (mzukowski@bco.com)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Lexer problem
Message-ID: <170826586F3BD511910D0200C110AAA801C5813E@memail03.bco-home.com>

Take a look at the generated code.  Can you see why it doesn't work?  You
may need to use a syntactic predicate in front of ".a.a".

Monty

> -----Original Message-----
> From: manfredlotz [mailto:Manfred.Lotz@web.de]
> Sent: Thursday, December 27, 2001 9:41 PM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] Lexer problem
> 
> 
> Using the definiton shown below the lexer has a problem to recognize
> tokens if they arrive in a certain order. 
> 
> E.g.,  ".a.a.b$" or ".ac$" work fine, however ".a.b$" does not.
> 
> Any idea what I have to change to make it working. I know it has to do
> with the fact that ".a" is a substring of ".a.a" but I don't know how
> to improve the t.g file.
> 
> Manfred
> _____________________
> 
> class TLexer extends Lexer;
> options {
>         k=4;
>         filter=IGNORE;
> }
> 
> MYENDTOKEN   : '$' ;
> 
> A       :   ( ".a" | ".a.a" | ".b" | 'a' | 'c' )  ;
> 
> protected
> IGNORE  : ( "\r\n" | '\r' | '\n'  ) { _ttype = Token.SKIP; };
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
http://docs.yahoo.com/info/terms/ 



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec 28 11:44:46 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] comments on suggestion to reduce tree construction code size
In-Reply-To: <20011227150905.D4910@cs.utwente.nl>
Message-ID: <5928FA30-FBCB-11D5-9D27-0030653DE0D6@jguru.com>


On Thursday, December 27, 2001, at 06:09  AM, Ric Klaren wrote:
> I would like to look at this before it might go into C++ mode. My
> experience with these kind of guards is that in a non critical loop the
> overhead is usually neglectible. Object creation can be very costly in 
> C++.

Okidoki.

> Also it would depend very much on the grammar and the amount of guessing
> occuring. Does this work in the general case?

It depends on how much you use predicates ;)

> It also depends on coding style in antlr. If you spread around a lot of
> actions which could be bundled in one action block, you'll end up with a
> lot of 'guards'.

Well, it only turns gates off of the automatically generated tree 
construction stuff as we can say "no side-effects".  user actions can 
lots of stuff like adding objects to symbol tables.

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec 28 14:06:42 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Returning from a sub-parser with no end token.
In-Reply-To: <002b01c18f85$10534700$c814a8c0@Remi>
Message-ID: <2CE8B9DA-FBDF-11D5-9D27-0030653DE0D6@jguru.com>


On Friday, December 28, 2001, at 01:50  AM, Remi Koutcherawy wrote:

> OK, looking at the generated code, I found a solution.
> Rather simple, just four added lines of code, works well even with AST.
>
> Nevertheless I feel awkward to reference "parse_AST" which is a 
> variable in the generated code not
> declared in the grammar, clumsy also to throw an exception and catch 
> another ;-)
>
> Any other idea ?
> Albeit modifying the generator to add a new option to generate such a 
> behavior can be considered.
>
I don't see what code you added...

basically if you make a sentinel token optional a lexer has a problem 
switching back to another lexer.  It has to get a token to test it (to 
see if it's BBB), right?  If not BBB then it is incorrectly accessing 
the stream of chars associated with the other lexer.

Ter


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From remi.koutcherawy at wanadoo.fr  Fri Dec 28 15:12:13 2001
From: remi.koutcherawy at wanadoo.fr (Remi Koutcherawy)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Returning from a sub-parser with no end token.
References: <2CE8B9DA-FBDF-11D5-9D27-0030653DE0D6@jguru.com>
Message-ID: <001901c18ff5$161f6400$c814a8c0@Remi>

> I don't see what code you added...
Thanks Ter. I added an exception catch behind the protected filter Lexer Rule:

exception catch [NoViableAltForCharException ex]
 { throw new CharStreamException("EndToken"); }

This prevents the lexer from requesting a new char.

And behind the Parser rule I added another exception catch :
parse: (B)+ (BBB!)?  ;
exception catch [antlr.TokenStreamException ex]
 { parse_AST = (AST)currentAST.root; }

This catches the exception I raised in the lexer (which is transformed
from CharStreamException to TokenStreamException) and adds the code
lacking because not executed at the end of the try { }.

> basically if you make a sentinel token optional a lexer has a problem
> switching back to another lexer.  It has to get a token to test it (to
> see if it's BBB), right?  If not BBB then it is incorrectly accessing
> the stream of chars associated with the other lexer.
>
> Ter

Right.
I try to parse JJYY, and KKXX messages. You may have a glimpse at :
http://www.meds-sdmm.dfo-mpo.gc.ca/meds/Prog_Int/J-COMM/J-COMM_e.htm

I try to figure which one I receive in the main parser and then I switch to a specific parser and
lexer.
The issue is that they end with no sentinel token.

May be you have another suggestion for how to use ANTLR to decode these messages ?

Remi



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Fri Dec 28 15:38:24 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] ANTLR 2.7.2a1 alpha/test release out!
Message-ID: <FC178C26-FBEB-11D5-9D27-0030653DE0D6@jguru.com>

Folks,

Go to http://www.antlr.org and grab your copy of antlr-2.7.2a1 to check 
it out on your grammars :)  A couple things to fix and the doc has been 
be dealt with but getting very close now.

Please send mail to this list or me to let me know about problems.  For 
example, is the antlr.jar runtime jar finally complete/correct?

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Manfred.Lotz at web.de  Sat Dec 29 01:05:45 2001
From: Manfred.Lotz at web.de (manfredlotz)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: Lexer problem
In-Reply-To: <BD7B747A-FB5D-11D5-9D27-0030653DE0D6@jguru.com>
Message-ID: <a0k119+99e1@eGroups.com>

--- In antlr-interest@y..., Terence Parr <parrt@j...> wrote:
> 
> On Thursday, December 27, 2001, at 09:40  PM, manfredlotz wrote:
> 
> > Using the definiton shown below the lexer has a problem to
recognize
> > tokens if they arrive in a certain order.
> >
> > E.g.,  ".a.a.b$" or ".ac$" work fine, however ".a.b$" does not.
> >
> > Any idea what I have to change to make it working. I know it has
to do
> > with the fact that ".a" is a substring of ".a.a" but I don't know
how
> > to improve the t.g file.
> >
> > Manfred
> > _____________________
> >
> > class TLexer extends Lexer;
> > options {
> >         k=4;
> >         filter=IGNORE;
> > }
> >
> > MYENDTOKEN   : '$' ;
> >
> > A       :   ( ".a" | ".a.a" | ".b" | 'a' | 'c' )  ;
> >
> > protected
> > IGNORE  : ( "\r\n" | '\r' | '\n'  ) { _ttype = Token.SKIP; };
> 
> Looks ok to me.  Can you be more specific about what it says?  Try
using 
> -traceLexer on antlr cmd-line and then compile and run it.  See
where 
> it's going.
> 
> Ter
> --
> Chief Scientist & Co-founder, http://www.jguru.com
> Creator, ANTLR Parser Generator: http://www.antlr.org

Ok, I ran the test with traceLexer on. Here is the output:

$ java TestLexer .a.b

 > lexer mA; c==.
 < lexer mA; c==b
 > lexer mIGNORE; c==.
 < lexer mIGNORE; c==.
line 1: unexpected char: .
 > lexer mA; c==a
 < lexer mA; c==.
Token: ["a",<5>,line=1,col=5]
 > lexer mA; c==.
 < lexer mA; c==$
Token: [".b",<5>,line=1,col=6]
 > lexer mMYENDTOKEN; c==$
 < lexer mMYENDTOKEN; c==?
Token: ["$",<4>,line=1,col=8]

The problem seems to be that after scanning ".a." it thinks it has to
be ".a.a". After finding a 'b' it should be able to go back to the dot
in order to recognize that now we have a ",b" which is a valid token.

Can I do something to help the lexer?

Manfred


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Manfred.Lotz at web.de  Sat Dec 29 01:09:16 2001
From: Manfred.Lotz at web.de (manfredlotz)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: Lexer problem
In-Reply-To: <170826586F3BD511910D0200C110AAA801C5813E@memail03.bco-home.com>
Message-ID: <a0k17s+r5t9@eGroups.com>

After scanning ".a." the lexer seems to think it has to be ",a,a". 
After finding 'b' it says unexpected char. 

Can a syntactic predicate help. I have to admit that I didn't
understand exactly what it is and what it can do for me. 



Manfred
 

--- In antlr-interest@y..., mzukowski@b... wrote:
> Take a look at the generated code.  Can you see why it doesn't work?
 You
> may need to use a syntactic predicate in front of ".a.a".
> 
> Monty
> 
> > -----Original Message-----
> > From: manfredlotz [mailto:Manfred.Lotz@w...]
> > Sent: Thursday, December 27, 2001 9:41 PM
> > To: antlr-interest@y...
> > Subject: [antlr-interest] Lexer problem
> > 
> > 
> > Using the definiton shown below the lexer has a problem to
recognize
> > tokens if they arrive in a certain order. 
> > 
> > E.g.,  ".a.a.b$" or ".ac$" work fine, however ".a.b$" does not.
> > 
> > Any idea what I have to change to make it working. I know it has
to do
> > with the fact that ".a" is a substring of ".a.a" but I don't know
how
> > to improve the t.g file.
> > 
> > Manfred
> > _____________________
> > 
> > class TLexer extends Lexer;
> > options {
> >         k=4;
> >         filter=IGNORE;
> > }
> > 
> > MYENDTOKEN   : '$' ;
> > 
> > A       :   ( ".a" | ".a.a" | ".b" | 'a' | 'c' )  ;
> > 
> > protected
> > IGNORE  : ( "\r\n" | '\r' | '\n'  ) { _ttype = Token.SKIP; };
> > 
> > 
> >  
> > 
> > Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From meta.logix at pandora.be  Sat Dec 29 06:39:51 2001
From: meta.logix at pandora.be (isabellemus)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] XML grammar
Message-ID: <a0kkjn+gf6t@eGroups.com>

Has anyone written an XML grammar? And would they be willing to share 
it?


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Michael.Schmitt at teststep.org  Sat Dec 29 13:33:09 2001
From: Michael.Schmitt at teststep.org (Michael Schmitt)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: ANTLR 2.7.2a1 alpha/test release out!
Message-ID: <3C2E3695.60509@teststep.org>

Hi Terence and Ric,

I had a quick glance at 2.7.2a1 and what I can say for the moment is 
that the C++ sources cannot be compiled with gcc-2.95.3/Linux and 
options "-pedantic -ansi".

Nevertheless, thanks for all the efforts! I will give detailed 
information as soon as I have some :-)

Michael


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From malitrait at start.com.au  Sun Dec 30 04:42:22 2001
From: malitrait at start.com.au (kemmerzehl)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] More VC++ 6 Confusion (MFC libs)
Message-ID: <a0n23e+64b5@eGroups.com>

Hi,
  I do hate to add to your list of confused VC++ user messages but 
I've followed the steps from your existing discussions/literature and 
I'm still having some problems. It appears this particular issue has 
not yet been addressed although it seems like it would be a 
common problem so I do apologise if I've missed something.
  Anyway, here's the problem. Quite simply, the ANTLR and MFC libs 
just wont work for me together - I get link errors. I've built my 
ANTLR lib files according to JSRS's 'How To', and by themselves they 
work well. If I use VC++ to create a 'Win32 Console Application' and 
do NOT include MFC support, then add the generated calc example files 
and add the ANTLR library, everything compiles links and runs fine. 
If, however, I do the same thing only I DO include MFC support (and 
remembering to take off the /Yu"stdafx.h" flag), I get the following 
link errors:

LIBC.lib(cfout.obj) : error LNK2005: ___dtold already defined in 
libcmt.lib(cfout.obj)
LIBC.lib(crt0dat.obj) : error LNK2005: __cinit already defined in 
libcmt.lib(crt0dat.obj)
LIBC.lib(crt0dat.obj) : error LNK2005: _exit already defined in 
libcmt.lib(crt0dat.obj)
LIBC.lib(crt0dat.obj) : error LNK2005: __exit already defined in 
libcmt.lib(crt0dat.obj)
LIBC.lib(crt0dat.obj) : error LNK2005: __cexit already defined in 
libcmt.lib(crt0dat.obj)
..etc.

  One rather odd thing is that I can get the _debug_ build to work
(for the calc example) if I link statically to MFC and use the /MT 
flag instead of /MTd(default for debug builds). These flags represent 
the "Multithreaded" and "Debug Multithreaded" runtime libraries, 
available in the "Code Generation" dropdown section of the "C++" tab 
in Project -> Settings. This however does not fix the problem for the 
release build, I even tried using JSRS's debug version of the ANTLR 
library with the release build (using /MT) and I still got link 
errors. Also, I could not get rid of the link errors at all for the 
project im working on (with either build).
  All of this is purely trial and error for me as I've never had to 
deal with third-party libraries before. I hope some of the info I've 
provided can be of use and that somebody out there has experienced 
this linking problem before and knows how to fix it. Either way, I'm 
going to keep ripping my hair out trying to fix it, if I find a 
solution I'll post it.

Thanks,
-Kemmerzehl


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From meta.logix at pandora.be  Sun Dec 30 09:05:41 2001
From: meta.logix at pandora.be (isabellemus)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: More VC++ 6 Confusion (MFC libs)
In-Reply-To: <a0n23e+64b5@eGroups.com>
Message-ID: <a0nhh5+otua@eGroups.com>

Hi,

Try using the static antlr library, works for me (use the LIB project 
in MSCV6-dll directory).

I have a different problem with using the dll : I cannot get MSVC to 
generate an import library (don't have a .def file), and cannot find 
any export declarations in the source. 

Isabelle


--- In antlr-interest@y..., "kemmerzehl" <malitrait@s...> wrote:
> Hi,
>   I do hate to add to your list of confused VC++ user messages but 
> I've followed the steps from your existing discussions/literature 
and 
> I'm still having some problems. It appears this particular issue 
has 
> not yet been addressed although it seems like it would be a 
> common problem so I do apologise if I've missed something.
>   Anyway, here's the problem. Quite simply, the ANTLR and MFC libs 
> just wont work for me together - I get link errors. I've built my 
> ANTLR lib files according to JSRS's 'How To', and by themselves 
they 
> work well. If I use VC++ to create a 'Win32 Console Application' 
and 
> do NOT include MFC support, then add the generated calc example 
files 
> and add the ANTLR library, everything compiles links and runs fine. 
> If, however, I do the same thing only I DO include MFC support (and 
> remembering to take off the /Yu"stdafx.h" flag), I get the 
following 
> link errors:
> 
> LIBC.lib(cfout.obj) : error LNK2005: ___dtold already defined in 
> libcmt.lib(cfout.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: __cinit already defined in 
> libcmt.lib(crt0dat.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: _exit already defined in 
> libcmt.lib(crt0dat.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: __exit already defined in 
> libcmt.lib(crt0dat.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: __cexit already defined in 
> libcmt.lib(crt0dat.obj)
> ..etc.
> 
>   One rather odd thing is that I can get the _debug_ build to work
> (for the calc example) if I link statically to MFC and use the /MT 
> flag instead of /MTd(default for debug builds). These flags 
represent 
> the "Multithreaded" and "Debug Multithreaded" runtime libraries, 
> available in the "Code Generation" dropdown section of the "C++" 
tab 
> in Project -> Settings. This however does not fix the problem for 
the 
> release build, I even tried using JSRS's debug version of the ANTLR 
> library with the release build (using /MT) and I still got link 
> errors. Also, I could not get rid of the link errors at all for the 
> project im working on (with either build).
>   All of this is purely trial and error for me as I've never had to 
> deal with third-party libraries before. I hope some of the info 
I've 
> provided can be of use and that somebody out there has experienced 
> this linking problem before and knows how to fix it. Either way, 
I'm 
> going to keep ripping my hair out trying to fix it, if I find a 
> solution I'll post it.
> 
> Thanks,
> -Kemmerzehl


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Michael.Schmitt at teststep.org  Sun Dec 30 12:56:59 2001
From: Michael.Schmitt at teststep.org (Michael Schmitt)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: ANTLR 2.7.2a1 alpha/test release out!
Message-ID: <3C2F7F9B.3080002@teststep.org>

Hi Terence, hi Ric,

after a second glance I can tell you that my SDL-2000 parser (C++ 
version) compiles and runs with 2.7.2a1! (Except for the problem with 
"-pendantic" and "-ansi" reported before, and the need to change a few 
lines concerning AST factory).

Ric, didn't you say you improved code generation? For my parser, source 
code size has not changed significantly.

Another simple yet controversial proposal for improving ANTLR:  I think 
a lot of newbie problems could be avoided if ":" did not have multiple 
functions in the ANTLR input language. How about replacing ":" after 
rule headers by "::=" or something similar? Then the language would be 
more sensitive to missing ";" at the end of a rule.

Nevertheless, 2.7.2 looks good!

Michael


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From benjamin.reschke at motorola.com  Sun Dec 30 19:00:33 2001
From: benjamin.reschke at motorola.com (Benjamin Reschke)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Help need with 2.7.2a1
Message-ID: <03e501c191a7$50c7c580$5565ee0a@asc.corp.mot.com>

I have recently downloaded the 2.7.2 Alpha 1 release for use in my software. I had no trouble compiling the C++ library with gcc -2.95.2. I then ran  antlr.Tool over my grammar files and got the following message:

<font size=2><pre>
======== Rebuilding "cdfParser.cpp" ========<br>
        /app/jdk-1.2.2/bin/java antlr.Tool cdf.g<br>
Exception in thread "main" java.lang.NoClassDefFoundError: antlr/Tool<br>
*** Error code 1<br>
clearmake: Error: Build script failed for "cdfParser.cpp"<br>
========================================================<br>
</pre></font>

So I thought I need to recompile the jar ANTLR jar files. But to no avail, I received compile errors:

The following are when compiling the target 'antlrall.jar':

<font size=2><pre>
Building antlr/ANTLRLexer.java<br>
/app/jdk-1.2.2/bin/javac  antlr/ANTLRLexer.java<br>
antlr/ANTLRLexer.java:1151: Undefined variable or class name: StringUtils<br>
                        setText(StringUtils.stripFrontBack(getText(), "[", "]"));<br>
                                ^<br>
antlr/ANTLRLexer.java:1276: Undefined variable or class name: StringUtils<br>
                                                        setText(StringUtils.stripFrontBack(getText(), "{", "}"));<br>
                                                                ^<br>
antlr/ANTLRLexer.java:1279: Undefined variable or class name: StringUtils<br>
                                                        setText(StringUtils.stripFrontBack(getText(), "{", "}?"));<br>
                                                                ^<br>
3 errors<br>
gmake: *** [antlr/ANTLRLexer.class] Error 1<br>
</pre></font>

And then the following when building the target 'antlr.jar':

<font size=2><pre>
Building antlr/DefineGrammarSymbols.java<br>
/app/jdk-1.2.2/bin/javac  antlr/DefineGrammarSymbols.java<br>
antlr/DefineGrammarSymbols.java:20: class antlr.DefineGrammarSymbols must be declared abstract. It does not define void beginSubRule(antlr.Token, int, boolean) from interface antlr.ANTLRGrammarParseBehavior.<br>
public class DefineGrammarSymbols implements ANTLRGrammarParseBehavior {<br>
             ^<br>
antlr/DefineGrammarSymbols.java:20: class antlr.DefineGrammarSymbols must be declared abstract. It does not define void beginTree(int) from interface antlr.ANTLRGrammarParseBehavior.<br>
public class DefineGrammarSymbols implements ANTLRGrammarParseBehavior {<br>
             ^<br>
antlr/DefineGrammarSymbols.java:129: Method encodeLexerRuleName(java.lang.String) not found in class antlr.CodeGenerator.<br>
            id = CodeGenerator.encodeLexerRuleName(id);<br>
                                                  ^<br>
antlr/DefineGrammarSymbols.java:145: Wrong number of arguments in method.<br>
                tool.error("redefinition of rule " + id, grammar.getFilename(), r.getLine(), r.getColumn());<br>
                          ^<br>
antlr/DefineGrammarSymbols.java:180: Wrong number of arguments in method.<br>
                    tool.warning("Redefinition of literal in tokens {...}: " + literal, grammar.getFilename(), tokliteral.getLine(), tokliteral.getColumn());<br>
                                ^<br>
antlr/DefineGrammarSymbols.java:198: Wrong number of arguments in method.<br>
                        tool.warning("Redefinition of token in tokens {...}: " + name, grammar.getFilename(), tokliteral.getLine(), tokliteral.getColumn());<br>
                                    ^<br>
antlr/DefineGrammarSymbols.java:234: Wrong number of arguments in method.<br>
                tool.warning("Redefinition of token in tokens {...}: " + name, grammar.getFilename(), tokname.getLine(), tokname.getColumn());<br>
                            ^<br>
antlr/DefineGrammarSymbols.java:454: Undefined variable or class name: StringUtils<br>
            key = StringUtils.stripFrontBack(name.getText(), "\"", "\"");<br>
                  ^<br>
antlr/DefineGrammarSymbols.java:497: Method encodeLexerRuleName(java.lang.String) not found in class antlr.CodeGenerator.<br>
            id = CodeGenerator.encodeLexerRuleName(id);<br>
                                                  ^<br>
antlr/DefineGrammarSymbols.java:565: Undefined variable or class name: StringUtils<br>
                language = StringUtils.stripBack(StringUtils.stripFront(value.getText(), '"'), '"');<br>
                           ^<br>
antlr/DefineGrammarSymbols.java:571: Wrong number of arguments in method.<br>
                tool.error("language option must be string or identifier", filename, value.getLine(), value.getColumn());<br>
                          ^<br>
antlr/DefineGrammarSymbols.java:576: Undefined variable or class name: StringUtils<br>
                tool.literalsPrefix = StringUtils.stripFrontBack(value.getText(), "\"", "\"");<br>
                                      ^<br>
antlr/DefineGrammarSymbols.java:579: Wrong number of arguments in method.<br>
                tool.error("mangleLiteralPrefix option must be string", filename, value.getLine(), value.getColumn());<br>
                          ^<br>
antlr/DefineGrammarSymbols.java:590: Wrong number of arguments in method.<br>
                grammar.tool.error("Value for upperCaseMangledLiterals must be true or false", filename, key.getLine(), key.getColumn());<br>
                                  ^<br>
antlr/DefineGrammarSymbols.java:598: Wrong number of arguments in method.<br>
                tool.error(key.getText() + " option only valid for C++", filename, key.getLine(), key.getColumn());<br>
                          ^<br>
antlr/DefineGrammarSymbols.java:603: Wrong number of arguments in method.<br>
                        tool.error("genHashLines option must be true or false", filename, value.getLine(), value.getColumn());<br>
                                  ^<br>
antlr/DefineGrammarSymbols.java:608: Wrong number of arguments in method.<br>
                        tool.error(key.getText() + " option must be a string", filename, value.getLine(), value.getColumn());<br>
                                  ^<br>
antlr/DefineGrammarSymbols.java:622: Wrong number of arguments in method.<br>
            tool.error("Invalid file-level option: " + key.getText(), filename, key.getLine(), value.getColumn());<br>
                      ^<br>
antlr/DefineGrammarSymbols.java:633: Wrong number of arguments in method.<br>
            tool.error("tokdef/tokenVocabulary options are invalid >= ANTLR 2.6.0.\n" +<br>
                      ^<br>
antlr/DefineGrammarSymbols.java:641: Wrong number of arguments in method.<br>
            tool.error("the literal option is invalid >= ANTLR 2.6.0.\n" +<br>
                      ^<br>
antlr/DefineGrammarSymbols.java:651: Wrong number of arguments in method.<br>
                tool.error("exportVocab must be an identifier", grammar.getFilename(), value.getLine(), value.getColumn());<br>
                          ^<br>
antlr/DefineGrammarSymbols.java:659: Wrong number of arguments in method.<br>
                tool.error("importVocab must be an identifier", grammar.getFilename(), value.getLine(), value.getColumn());<br>
                          ^<br>
22 errors<br>
gmake: *** [antlr/DefineGrammarSymbols.class] Error 1<br>
</pre></font>


Any help would be appreicated. Please not my knowledge of the Java language is a bit limited

Thanks
Ben

-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://www.antlr.org/pipermail/antlr-interest/attachments/20011231/95e62e13/attachment.html
From sunshine at public.kherson.ua  Mon Dec 31 03:09:40 2001
From: sunshine at public.kherson.ua (Ruslan Zasukhin)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: ANTLR 2.7.2a1 alpha/test release out!
In-Reply-To: <3C2F7F9B.3080002@teststep.org>
Message-ID: <B8560F98.DA61%sunshine@public.kherson.ua>

on 12/30/01 22:56, Michael Schmitt at Michael.Schmitt@teststep.org wrote:

> 
> Another simple yet controversial proposal for improving ANTLR:  I think
> a lot of newbie problems could be avoided if ":" did not have multiple
> functions in the ANTLR input language. How about replacing ":" after
> rule headers by "::=" or something similar? Then the language would be
> more sensitive to missing ";" at the end of a rule.

I like this idea.

> Nevertheless, 2.7.2 looks good!

Sounds good.

I am sorry I can't work with ANTLR now, too busy on other tasks...

Terence, I hope you will provide good list of NEW FEATURES, since 2.7.1
    for ANTLR syntax.
    for Java side.
    for C++ side.

-- 
Best regards,
Ruslan Zasukhin

-------------------------
Paradigma.

e-mail: ruslan@paradigmasoft.com
web   : http://www.paradigmasoft.com

To subscribe to the Valentina mail list
send a letter to valentina-on@lists.macserve.net



 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From Chris.Kaiser at peoplefirst.com  Mon Dec 31 09:16:07 2001
From: Chris.Kaiser at peoplefirst.com (Chris.Kaiser@peoplefirst.com)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] More VC++ 6 Confusion (MFC libs)
Message-ID: <883BE3CC72E4D311B0D100508B67651105D083CD@ppf_13.peoplefirst.com>

You'll probably need to statically link both MFC and the antlr libs.

And possibly ignore the default lib: LIBC.lib

Yer mileage may vary...

> -----Original Message-----
> From: kemmerzehl [mailto:malitrait@start.com.au]
> Sent: Sunday, December 30, 2001 4:42 AM
> To: antlr-interest@yahoogroups.com
> Subject: [antlr-interest] More VC++ 6 Confusion (MFC libs)
> 
> 
> Hi,
>   I do hate to add to your list of confused VC++ user messages but 
> I've followed the steps from your existing discussions/literature and 
> I'm still having some problems. It appears this particular issue has 
> not yet been addressed although it seems like it would be a 
> common problem so I do apologise if I've missed something.
>   Anyway, here's the problem. Quite simply, the ANTLR and MFC libs 
> just wont work for me together - I get link errors. I've built my 
> ANTLR lib files according to JSRS's 'How To', and by themselves they 
> work well. If I use VC++ to create a 'Win32 Console Application' and 
> do NOT include MFC support, then add the generated calc example files 
> and add the ANTLR library, everything compiles links and runs fine. 
> If, however, I do the same thing only I DO include MFC support (and 
> remembering to take off the /Yu"stdafx.h" flag), I get the following 
> link errors:
> 
> LIBC.lib(cfout.obj) : error LNK2005: ___dtold already defined in 
> libcmt.lib(cfout.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: __cinit already defined in 
> libcmt.lib(crt0dat.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: _exit already defined in 
> libcmt.lib(crt0dat.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: __exit already defined in 
> libcmt.lib(crt0dat.obj)
> LIBC.lib(crt0dat.obj) : error LNK2005: __cexit already defined in 
> libcmt.lib(crt0dat.obj)
> ..etc.
> 
>   One rather odd thing is that I can get the _debug_ build to work
> (for the calc example) if I link statically to MFC and use the /MT 
> flag instead of /MTd(default for debug builds). These flags represent 
> the "Multithreaded" and "Debug Multithreaded" runtime libraries, 
> available in the "Code Generation" dropdown section of the "C++" tab 
> in Project -> Settings. This however does not fix the problem for the 
> release build, I even tried using JSRS's debug version of the ANTLR 
> library with the release build (using /MT) and I still got link 
> errors. Also, I could not get rid of the link errors at all for the 
> project im working on (with either build).
>   All of this is purely trial and error for me as I've never had to 
> deal with third-party libraries before. I hope some of the info I've 
> provided can be of use and that somebody out there has experienced 
> this linking problem before and knows how to fix it. Either way, I'm 
> going to keep ripping my hair out trying to fix it, if I find a 
> solution I'll post it.
> 
> Thanks,
> -Kemmerzehl
> 
> 
>  
> 
> Your use of Yahoo! Groups is subject to 
> http://docs.yahoo.com/info/terms/ 
> 
> 

 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From shiva at mbu.iisc.ernet.in  Mon Dec 31 09:43:01 2001
From: shiva at mbu.iisc.ernet.in (B.V.L.S.Prasad)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] A VERY HAPPY NEW YEAR - 2002
Message-ID: <Pine.LNX.4.33.0112312304370.29036-100000@mbu.iisc.ernet.in>

Dear all,

	 I WISH YOU ALL 
	 A VERY HAPPY, 
	 A VERY PROSPEROUS,
	 A VERY FRUITFUL,  
	 A MUCH ENJOYABLE
	 AND
	 A MUCH OBJECTIVE 
	 NEW YEAR - 2002
 
	ALL THE BEST FOR ALL YOUR ENDEVEOURS.

with lots of love
Shiva..
-- 
Be Happy, 
Enjoy Life.
with love 
shiva.
********************************************************************
*   If the Problem is Clear, the Solution is  Near.    ...shiva... *
********************************************************************







 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 31 11:38:01 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: ANTLR 2.7.2a1 alpha/test release out!
In-Reply-To: <3C2F7F9B.3080002@teststep.org>
Message-ID: <E673DB66-FE25-11D5-9D27-0030653DE0D6@jguru.com>


On Sunday, December 30, 2001, at 12:56  PM, Michael Schmitt wrote:

> Hi Terence, hi Ric,
>
> after a second glance I can tell you that my SDL-2000 parser (C++
> version) compiles and runs with 2.7.2a1! (Except for the problem with
> "-pendantic" and "-ansi" reported before, and the need to change a few
> lines concerning AST factory).
>
> Ric, didn't you say you improved code generation? For my parser, source
> code size has not changed significantly.
>
> Another simple yet controversial proposal for improving ANTLR:  I think
> a lot of newbie problems could be avoided if ":" did not have multiple
> functions in the ANTLR input language. How about replacing ":" after
> rule headers by "::=" or something similar? Then the language would be
> more sensitive to missing ";" at the end of a rule.

A good suggestion; perhaps it can be done in a sensible 
backward-compatible fashion.

>
> Nevertheless, 2.7.2 looks good!

Great.  Keep the testing going folks!

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 31 11:39:34 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Help need with 2.7.2a1
In-Reply-To: <03e501c191a7$50c7c580$5565ee0a@asc.corp.mot.com>
Message-ID: <1E1573E7-FE26-11D5-9D27-0030653DE0D6@jguru.com>

Hi.  Looks like a classpath issue.  First make sure 2.7.1 is not in your 
classpath anymore.  Then note that antlr.jar is for runtime only not 
building stuff.  So, you'll either need to make a jar of all class files 
or point at the antlr install dir for building .g files. :)

Ter

On Sunday, December 30, 2001, at 07:00  PM, Benjamin Reschke wrote:

> I have recently downloaded the 2.7.2 Alpha 1 release for use in my 
> software. I had no trouble compiling the C++ library with gcc -2.95.2. 
> I then ran? antlr.Tool over my grammar files and got the following 
> message:
> ?
> <font size=2><pre>
> ======== Rebuilding "cdfParser.cpp" ========<br>
> ??????? /app/jdk-1.2.2/bin/java antlr.Tool cdf.g<br>
> Exception in thread "main" java.lang.NoClassDefFoundError: 
> antlr/Tool<br>
> *** Error code 1<br>
> clearmake: Error: Build script failed for "cdfParser.cpp"<br>
> ========================================================<br>
> </pre></font>
> ?
> So I thought I need to recompile the jar ANTLR jar files. But to no 
> avail, I received compile errors:
> ?
> The following are when compiling the target 'antlrall.jar':
> ?
> <font size=2><pre>
> Building antlr/ANTLRLexer.java<br>
> /app/jdk-1.2.2/bin/javac? antlr/ANTLRLexer.java<br>
> antlr/ANTLRLexer.java:1151: Undefined variable or class name: 
> StringUtils<br>
> ??????????????????????? 
> setText(StringUtils.stripFrontBack(getText(), "[", "]"));<br>
> ??????????????????????????????? ^<br>
> antlr/ANTLRLexer.java:1276: Undefined variable or class name: 
> StringUtils<br>
> ??????????????????????????????????????????????????????? 
> setText(StringUtils.stripFrontBack(getText(), "{", "}"));<br>
> ??????????????????????????????????????????????????????????????? ^<br>
> antlr/ANTLRLexer.java:1279: Undefined variable or class name: 
> StringUtils<br>
> ??????????????????????????????????????????????????????? 
> setText(StringUtils.stripFrontBack(getText(), "{", "}?"));<br>
> ??????????????????????????????????????????????????????????????? ^<br>
> 3 errors<br>
> gmake: *** [antlr/ANTLRLexer.class] Error 1<br>
> </pre></font>
> ?
> And then the following when building the target 'antlr.jar':
> ?
> <font size=2><pre>
> Building antlr/DefineGrammarSymbols.java<br>
> /app/jdk-1.2.2/bin/javac? antlr/DefineGrammarSymbols.java<br>
> antlr/DefineGrammarSymbols.java:20: class antlr.DefineGrammarSymbols 
> must be declared abstract. It does not define void 
> beginSubRule(antlr.Token, int, boolean) from interface 
> antlr.ANTLRGrammarParseBehavior.<br>
> public class DefineGrammarSymbols implements ANTLRGrammarParseBehavior 
> {<br>
> ???????????? ^<br>
> antlr/DefineGrammarSymbols.java:20: class antlr.DefineGrammarSymbols 
> must be declared abstract. It does not define void beginTree(int) from 
> interface antlr.ANTLRGrammarParseBehavior.<br>
> public class DefineGrammarSymbols implements ANTLRGrammarParseBehavior 
> {<br>
> ???????????? ^<br>
> antlr/DefineGrammarSymbols.java:129: Method 
> encodeLexerRuleName(java.lang.String) not found in class 
> antlr.CodeGenerator.<br>
> ??????????? id = CodeGenerator.encodeLexerRuleName(id);<br>
> ????????????????????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:145: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.error("redefinition of rule " + id, 
> grammar.getFilename(), r.getLine(), r.getColumn());<br>
> ????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:180: Wrong number of arguments in 
> method.<br>
> ??????????????????? tool.warning("Redefinition of literal in 
> tokens {...}: " + literal, grammar.getFilename(), tokliteral.getLine(), 
> tokliteral.getColumn());<br>
> ??????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:198: Wrong number of arguments in 
> method.<br>
> ??????????????????????? tool.warning("Redefinition of token in 
> tokens {...}: " + name, grammar.getFilename(), tokliteral.getLine(), 
> tokliteral.getColumn());<br>
> ??????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:234: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.warning("Redefinition of token in 
> tokens {...}: " + name, grammar.getFilename(), tokname.getLine(), 
> tokname.getColumn());<br>
> ??????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:454: Undefined variable or class name: 
> StringUtils<br>
> ??????????? key = StringUtils.stripFrontBack(name.getText(), "\"", 
> "\"");<br>
> ????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:497: Method 
> encodeLexerRuleName(java.lang.String) not found in class 
> antlr.CodeGenerator.<br>
> ??????????? id = CodeGenerator.encodeLexerRuleName(id);<br>
> ????????????????????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:565: Undefined variable or class name: 
> StringUtils<br>
> ??????????????? language = 
> StringUtils.stripBack(StringUtils.stripFront(value.getText(), '"'), 
> '"');<br>
> ?????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:571: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.error("language option must be string or 
> identifier", filename, value.getLine(), value.getColumn());<br>
> ????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:576: Undefined variable or class name: 
> StringUtils<br>
> ??????????????? tool.literalsPrefix = 
> StringUtils.stripFrontBack(value.getText(), "\"", "\"");<br>
> ????????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:579: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.error("mangleLiteralPrefix option must be string", 
> filename, value.getLine(), value.getColumn());<br>
> ????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:590: Wrong number of arguments in 
> method.<br>
> ??????????????? grammar.tool.error("Value for upperCaseMangledLiterals 
> must be true or false", filename, key.getLine(), key.getColumn());<br>
> ????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:598: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.error(key.getText() + " option only valid for 
> C++", filename, key.getLine(), key.getColumn());<br>
> ????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:603: Wrong number of arguments in 
> method.<br>
> ??????????????????????? tool.error("genHashLines option must be true or 
> false", filename, value.getLine(), value.getColumn());<br>
> ????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:608: Wrong number of arguments in 
> method.<br>
> ??????????????????????? tool.error(key.getText() + " option must be a 
> string", filename, value.getLine(), value.getColumn());<br>
> ????????????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:622: Wrong number of arguments in 
> method.<br>
> ??????????? tool.error("Invalid file-level option: " + key.getText(), 
> filename, key.getLine(), value.getColumn());<br>
> ????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:633: Wrong number of arguments in 
> method.<br>
> ??????????? tool.error("tokdef/tokenVocabulary options are invalid >= 
> ANTLR 2.6.0.\n" +<br>
> ????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:641: Wrong number of arguments in 
> method.<br>
> ??????????? tool.error("the literal option is invalid >= ANTLR 
> 2.6.0.\n" +<br>
> ????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:651: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.error("exportVocab must be an identifier", 
> grammar.getFilename(), value.getLine(), value.getColumn());<br>
> ????????????????????????? ^<br>
> antlr/DefineGrammarSymbols.java:659: Wrong number of arguments in 
> method.<br>
> ??????????????? tool.error("importVocab must be an identifier", 
> grammar.getFilename(), value.getLine(), value.getColumn());<br>
> ????????????????????????? ^<br>
> 22 errors<br>
> gmake: *** [antlr/DefineGrammarSymbols.class] Error 1<br>
> </pre></font>
> ?
> ?
> Any help would be appreicated. Please not my knowledge of the Java 
> language is a bit limited
> ?
> Thanks
> Ben
> ?
>
> Your use of Yahoo! Groups is subject to the Yahoo! Terms of Service.
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From parrt at jguru.com  Mon Dec 31 11:40:02 2001
From: parrt at jguru.com (Terence Parr)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: ANTLR 2.7.2a1 alpha/test release out!
In-Reply-To: <B8560F98.DA61%sunshine@public.kherson.ua>
Message-ID: <2E932084-FE26-11D5-9D27-0030653DE0D6@jguru.com>


On Monday, December 31, 2001, at 03:09  AM, Ruslan Zasukhin wrote:
> Terence, I hope you will provide good list of NEW FEATURES, since 2.7.1
>     for ANTLR syntax.
>     for Java side.
>     for C++ side.

Me too ;)

Ter
--
Chief Scientist & Co-founder, http://www.jguru.com
Creator, ANTLR Parser Generator: http://www.antlr.org


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jsrs701 at yahoo.com  Mon Dec 31 15:46:03 2001
From: jsrs701 at yahoo.com (jsrs701)
Date: Mon Dec 20 16:14:36 2004
Subject: [antlr-interest] Re: More VC++ 6 Confusion (MFC libs)
In-Reply-To: <a0n23e+64b5@eGroups.com>
Message-ID: <a0qtbr+t5c8@eGroups.com>

--- In antlr-interest@y..., "kemmerzehl" <malitrait@s...> wrote:
> work well. If I use VC++ to create a 'Win32 Console Application' 
and 
> do NOT include MFC support, then add the generated calc example 
files 
> and add the ANTLR library, everything compiles links and runs fine. 
> If, however, I do the same thing only I DO include MFC support (and 
> remembering to take off the /Yu"stdafx.h" flag), I get the 
following 
> link errors:

Ho boy, that's a doozy.  I personally do not use MFC, so I am not 
sure which direction to go with this.

If anyone figures out the MFC connection, please let Ter know so he 
can update the jGuru FAQ entry!

JSRS


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

From jsrs701 at yahoo.com  Mon Dec 31 15:52:04 2001
From: jsrs701 at yahoo.com (jsrs701)
Date: Mon Dec 20 16:14:37 2004
Subject: [antlr-interest] Re: More VC++ 6 Confusion (MFC libs)
In-Reply-To: <a0nhh5+otua@eGroups.com>
Message-ID: <a0qtn4+4lip@eGroups.com>

--- In antlr-interest@y..., "isabellemus" <meta.logix@p...> wrote:
> Hi,
> 
> Try using the static antlr library, works for me (use the LIB 
project 
> in MSCV6-dll directory).
> 
> I have a different problem with using the dll : I cannot get MSVC 
to 
> generate an import library (don't have a .def file), and cannot 
find 
> any export declarations in the source. 
> 
> Isabelle

The import library issue is a messy one.  In one of the contrib items 
for building an ANTLR DLL, it mentions a replacement file 
(config.hpp) that contains a macro called DLLEXPORT.  Unfortunately, 
I can't find any trace of this file, nor the macro.  Hm.

You probably don't want to do a .def file, though, since you'll have 
to deal with the messy C++ munged symbols.  Ugh.  Better to stick 
with the dllimport and dllexport declspecs on the classes themselves.

On second thought, anybody know where that config.hpp file got off 
to?  Ter, Ric?  It's the file Michael Richter mentions in his README.

JSRS


 

Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/ 

